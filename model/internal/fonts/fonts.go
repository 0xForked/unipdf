//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package fonts ;import (_gg "bytes";_bf "encoding/binary";_d "errors";_b "fmt";_ac "github.com/unidoc/unipdf/v3/common";_bc "github.com/unidoc/unipdf/v3/core";_ad "github.com/unidoc/unipdf/v3/internal/cmap";_ed "github.com/unidoc/unipdf/v3/internal/textencoding";
_a "golang.org/x/xerrors";_ge "io";_be "os";_bd "regexp";_c "sort";_g "strings";_e "sync";);type RuneCharSafeMap struct{_fg map[rune ]CharMetrics ;_acf _e .RWMutex ;};var _beg *RuneCharSafeMap ;var _ebcf =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,611,778,778,778,778,389,389,389,389,389,389,389,389,500,778,778,667,667,667,667,667,944,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,611,778,722,722,722,722,556,556,556,556,556,667,667,667,611,722,722,722,722,722,722,722,722,722,722,1000,722,722,722,722,667,667,667,667,500,500,500,500,333,500,722,500,500,833,500,500,581,520,500,930,500,556,278,220,394,394,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,556,500,500,672,556,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,333,333,333,556,500,556,500,500,167,500,500,500,556,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,333,556,556,278,278,394,278,570,549,570,494,278,833,333,570,556,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,300,330,500,500,556,540,333,333,494,1000,250,250,1000,570,570,556,500,500,555,500,500,500,333,333,333,278,444,444,549,444,444,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,333,416,333,556,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,500,722,500,500,500,500,500,444,444,444,444,500};
func _age ()StdFont {_bef .Do (_fbd );_ebb :=Descriptor {Name :TimesRomanName ,Family :_fbb ,Weight :FontWeightRoman ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,898},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :662,XHeight :450,StemV :84,StemH :28};
return NewStdFont (_ebb ,_eccf );};func _ced (_eba map[string ]uint32 )string {var _gced []string ;for _ffg :=range _eba {_gced =append (_gced ,_ffg );};_c .Slice (_gced ,func (_acfd ,_dfb int )bool {return _eba [_gced [_acfd ]]< _eba [_gced [_dfb ]]});
_fdd :=[]string {_b .Sprintf ("\u0054\u0072\u0075\u0065Ty\u0070\u0065\u0020\u0074\u0061\u0062\u006c\u0065\u0073\u003a\u0020\u0025\u0064",len (_eba ))};for _ ,_cda :=range _gced {_fdd =append (_fdd ,_b .Sprintf ("\u0009%\u0071\u0020\u0025\u0035\u0064",_cda ,_eba [_cda ]));
};return _g .Join (_fdd ,"\u000a");};var _fe *RuneCharSafeMap ;func (_dbe *ttfParser )ParseCmap ()error {var _fad int64 ;if _eaa :=_dbe .Seek ("\u0063\u006d\u0061\u0070");_eaa !=nil {return _eaa ;};_ac .Log .Trace ("\u0050a\u0072\u0073\u0065\u0043\u006d\u0061p");
_dbe .ReadUShort ();_fgbdb :=int (_dbe .ReadUShort ());_fgea :=int64 (0);_bgc :=int64 (0);_ffef :=int64 (0);for _gbfg :=0;_gbfg < _fgbdb ;_gbfg ++{_baeb :=_dbe .ReadUShort ();_dcc :=_dbe .ReadUShort ();_fad =int64 (_dbe .ReadULong ());if _baeb ==3&&_dcc ==1{_bgc =_fad ;
}else if _baeb ==3&&_dcc ==10{_ffef =_fad ;}else if _baeb ==1&&_dcc ==0{_fgea =_fad ;};};if _fgea !=0{if _ffd :=_dbe .parseCmapVersion (_fgea );_ffd !=nil {return _ffd ;};};if _bgc !=0{if _gcg :=_dbe .parseCmapSubtable31 (_bgc );_gcg !=nil {return _gcg ;
};};if _ffef !=0{if _dfa :=_dbe .parseCmapVersion (_ffef );_dfa !=nil {return _dfa ;};};if _bgc ==0&&_fgea ==0&&_ffef ==0{_ac .Log .Debug ("\u0074\u0074\u0066P\u0061\u0072\u0073\u0065\u0072\u002e\u0050\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u002e\u0020\u004e\u006f\u0020\u0033\u0031\u002c\u0020\u0031\u0030\u002c\u0020\u00331\u0030\u0020\u0074\u0061\u0062\u006c\u0065\u002e");
};return nil ;};var _eccf *RuneCharSafeMap ;func (_ccfa *TtfType )MakeToUnicode ()*_ad .CMap {_fcg :=make (map[_ad .CharCode ]rune );if len (_ccfa .GlyphNames )==0{return _ad .NewToUnicodeCMap (_fcg );};for _bae ,_dd :=range _ccfa .Chars {_dbg :=_ad .CharCode (_bae );
_caa :=_ccfa .GlyphNames [_dd ];_caaa ,_fec :=_ed .GlyphToRune (_caa );if !_fec {_ac .Log .Debug ("\u004e\u006f \u0072\u0075\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065\u003d\u0030\u0078\u0025\u0030\u0034\u0078\u0020\u0067\u006c\u0079\u0070h=\u0025\u0071",_bae ,_caa );
_caaa =_ed .MissingCodeRune ;};_fcg [_dbg ]=_caaa ;};return _ad .NewToUnicodeCMap (_fcg );};type FontWeight int ;func (_fgb *RuneCharSafeMap )Copy ()*RuneCharSafeMap {_fc :=MakeRuneCharSafeMap (_fgb .Length ());_fgb .Range (func (_ae rune ,_de CharMetrics )(_aa bool ){_fc ._fg [_ae ]=_de ;
return false });return _fc ;};func (_agb *ttfParser )ParseHhea ()error {if _cba :=_agb .Seek ("\u0068\u0068\u0065\u0061");_cba !=nil {return _cba ;};_agb .Skip (4+15*2);_agb ._gb =_agb .ReadUShort ();return nil ;};func _ead ()StdFont {_ce .Do (_afa );_bdd :=Descriptor {Name :CourierName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0021,BBox :[4]float64 {-23,-250,715,805},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_bdd ,_ccf );};func (_dff *ttfParser )Parse ()(TtfType ,error ){_eac ,_cfb :=_dff .ReadStr (4);if _cfb !=nil {return TtfType {},_cfb ;};if _eac =="\u004f\u0054\u0054\u004f"{return TtfType {},_a .Errorf ("\u0066\u006f\u006e\u0074s\u0020\u0062\u0061\u0073\u0065\u0064\u0020\u006f\u006e \u0050\u006f\u0073\u0074\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065s\u0020\u0061\u0072\u0065\u0020n\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_bc .ErrNotSupported );
};if _eac !="\u0000\u0001\u0000\u0000"&&_eac !="\u0074\u0072\u0075\u0065"{_ac .Log .Debug ("\u0055n\u0072\u0065c\u006f\u0067\u006ei\u007a\u0065\u0064\u0020\u0054\u0072\u0075e\u0054\u0079\u0070\u0065\u0020\u0066i\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u002e\u0020v\u0065\u0072\u0073\u0069\u006f\u006e\u003d\u0025\u0071",_eac );
};_eafa :=int (_dff .ReadUShort ());_dff .Skip (3*2);_dff ._fcgf =make (map[string ]uint32 );var _gce string ;for _gbf :=0;_gbf < _eafa ;_gbf ++{_gce ,_cfb =_dff .ReadStr (4);if _cfb !=nil {return TtfType {},_cfb ;};_dff .Skip (4);_bgbe :=_dff .ReadULong ();
_dff .Skip (4);_dff ._fcgf [_gce ]=_bgbe ;};_ac .Log .Trace (_ced (_dff ._fcgf ));if _cfb =_dff .ParseComponents ();_cfb !=nil {return TtfType {},_cfb ;};return _dff ._cd ,nil ;};func (_eadf *ttfParser )ParseComponents ()error {if _bdfc :=_eadf .ParseHead ();
_bdfc !=nil {return _bdfc ;};if _cdf :=_eadf .ParseHhea ();_cdf !=nil {return _cdf ;};if _ebbc :=_eadf .ParseMaxp ();_ebbc !=nil {return _ebbc ;};if _ccfc :=_eadf .ParseHmtx ();_ccfc !=nil {return _ccfc ;};if _ ,_dgg :=_eadf ._fcgf ["\u006e\u0061\u006d\u0065"];
_dgg {if _cbg :=_eadf .ParseName ();_cbg !=nil {return _cbg ;};};if _ ,_fbc :=_eadf ._fcgf ["\u004f\u0053\u002f\u0032"];_fbc {if _caee :=_eadf .ParseOS2 ();_caee !=nil {return _caee ;};};if _ ,_fbe :=_eadf ._fcgf ["\u0070\u006f\u0073\u0074"];_fbe {if _fecg :=_eadf .ParsePost ();
_fecg !=nil {return _fecg ;};};if _ ,_gdd :=_eadf ._fcgf ["\u0063\u006d\u0061\u0070"];_gdd {if _bcc :=_eadf .ParseCmap ();_bcc !=nil {return _bcc ;};};return nil ;};func NewFontFile2FromPdfObject (obj _bc .PdfObject )(TtfType ,error ){obj =_bc .TraceToDirectObject (obj );
_eg ,_dac :=obj .(*_bc .PdfObjectStream );if !_dac {_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u0061\u0020\u0073\u0074\u0072e\u0061\u006d \u0028\u0025\u0054\u0029",obj );
return TtfType {},_bc .ErrTypeError ;};_ffcd ,_gfc :=_bc .DecodeStream (_eg );if _gfc !=nil {return TtfType {},_gfc ;};_ccg :=ttfParser {_bgb :_gg .NewReader (_ffcd )};return _ccg .Parse ();};type fontMap struct{_e .Mutex ;_cc map[StdFontName ]func ()StdFont ;
};func _bbb ()StdFont {_bef .Do (_fbd );_eea :=Descriptor {Name :TimesBoldName ,Family :_fbb ,Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,935},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :676,XHeight :461,StemV :139,StemH :44};
return NewStdFont (_eea ,_eee );};var _gcd =[]int16 {667,1000,667,667,667,667,667,667,667,667,667,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,500,667,667,556,556,556,556,556,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,667,556,556,469,584,389,1015,556,556,278,260,334,334,278,278,333,260,350,500,500,333,500,500,333,556,333,278,278,250,737,556,556,556,556,643,556,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,556,278,333,278,500,556,500,556,556,167,556,556,556,611,333,584,549,556,556,333,333,556,333,333,222,278,278,278,278,278,222,222,500,500,222,222,299,222,584,549,584,471,222,833,333,584,556,584,556,556,556,556,556,549,556,556,556,556,556,556,944,333,556,556,556,556,834,834,333,370,365,611,556,556,537,333,333,476,889,278,278,1000,584,584,556,556,611,355,333,333,333,222,222,222,191,333,333,453,333,333,737,333,500,500,500,500,500,556,278,556,556,278,278,556,600,278,317,278,556,556,834,333,333,1000,556,333,556,556,556,556,556,556,556,556,556,556,500,722,500,500,500,500,556,500,500,500,500,556};
func IsStdFont (name StdFontName )bool {_ ,_cg :=_ggf .read (name );return _cg };func (_aaf *ttfParser )ReadUShort ()(_gea uint16 ){_bf .Read (_aaf ._bgb ,_bf .BigEndian ,&_gea );return _gea ;};func (_bb StdFont )GetMetricsTable ()*RuneCharSafeMap {return _bb ._ffe };
func (_ca StdFont )Name ()string {return string (_ca ._gge .Name )};func (_dggg *ttfParser )ParseOS2 ()error {if _fca :=_dggg .Seek ("\u004f\u0053\u002f\u0032");_fca !=nil {return _fca ;};_dedb :=_dggg .ReadUShort ();_dggg .Skip (4*2);_dggg .Skip (11*2+10+4*4+4);
_cff :=_dggg .ReadUShort ();_dggg ._cd .Bold =(_cff &32)!=0;_dggg .Skip (2*2);_dggg ._cd .TypoAscender =_dggg .ReadShort ();_dggg ._cd .TypoDescender =_dggg .ReadShort ();if _dedb >=2{_dggg .Skip (3*2+2*4+2);_dggg ._cd .CapHeight =_dggg .ReadShort ();}else {_dggg ._cd .CapHeight =0;
};return nil ;};func TtfParseFile (fileStr string )(TtfType ,error ){_feb ,_afaa :=_be .Open (fileStr );if _afaa !=nil {return TtfType {},_afaa ;};defer _feb .Close ();return TtfParse (_feb );};const (CourierName =StdFontName ("\u0043o\u0075\u0072\u0069\u0065\u0072");
CourierBoldName =StdFontName ("\u0043\u006f\u0075r\u0069\u0065\u0072\u002d\u0042\u006f\u006c\u0064");CourierObliqueName =StdFontName ("\u0043o\u0075r\u0069\u0065\u0072\u002d\u004f\u0062\u006c\u0069\u0071\u0075\u0065");CourierBoldObliqueName =StdFontName ("\u0043\u006f\u0075\u0072ie\u0072\u002d\u0042\u006f\u006c\u0064\u004f\u0062\u006c\u0069\u0071\u0075\u0065");
);var _eaf =&RuneCharSafeMap {_fg :map[rune ]CharMetrics {' ':{Wx :278},'→':{Wx :838},'↔':{Wx :1016},'↕':{Wx :458},'①':{Wx :788},'②':{Wx :788},'③':{Wx :788},'④':{Wx :788},'⑤':{Wx :788},'⑥':{Wx :788},'⑦':{Wx :788},'⑧':{Wx :788},'⑨':{Wx :788},'⑩':{Wx :788},'■':{Wx :761},'▲':{Wx :892},'▼':{Wx :892},'◆':{Wx :788},'●':{Wx :791},'◗':{Wx :438},'★':{Wx :816},'☎':{Wx :719},'☛':{Wx :960},'☞':{Wx :939},'♠':{Wx :626},'♣':{Wx :776},'♥':{Wx :694},'♦':{Wx :595},'✁':{Wx :974},'✂':{Wx :961},'✃':{Wx :974},'✄':{Wx :980},'✆':{Wx :789},'✇':{Wx :790},'✈':{Wx :791},'✉':{Wx :690},'✌':{Wx :549},'✍':{Wx :855},'✎':{Wx :911},'✏':{Wx :933},'✐':{Wx :911},'✑':{Wx :945},'✒':{Wx :974},'✓':{Wx :755},'✔':{Wx :846},'✕':{Wx :762},'✖':{Wx :761},'✗':{Wx :571},'✘':{Wx :677},'✙':{Wx :763},'✚':{Wx :760},'✛':{Wx :759},'✜':{Wx :754},'✝':{Wx :494},'✞':{Wx :552},'✟':{Wx :537},'✠':{Wx :577},'✡':{Wx :692},'✢':{Wx :786},'✣':{Wx :788},'✤':{Wx :788},'✥':{Wx :790},'✦':{Wx :793},'✧':{Wx :794},'✩':{Wx :823},'✪':{Wx :789},'✫':{Wx :841},'✬':{Wx :823},'✭':{Wx :833},'✮':{Wx :816},'✯':{Wx :831},'✰':{Wx :923},'✱':{Wx :744},'✲':{Wx :723},'✳':{Wx :749},'✴':{Wx :790},'✵':{Wx :792},'✶':{Wx :695},'✷':{Wx :776},'✸':{Wx :768},'✹':{Wx :792},'✺':{Wx :759},'✻':{Wx :707},'✼':{Wx :708},'✽':{Wx :682},'✾':{Wx :701},'✿':{Wx :826},'❀':{Wx :815},'❁':{Wx :789},'❂':{Wx :789},'❃':{Wx :707},'❄':{Wx :687},'❅':{Wx :696},'❆':{Wx :689},'❇':{Wx :786},'❈':{Wx :787},'❉':{Wx :713},'❊':{Wx :791},'❋':{Wx :785},'❍':{Wx :873},'❏':{Wx :762},'❐':{Wx :762},'❑':{Wx :759},'❒':{Wx :759},'❖':{Wx :784},'❘':{Wx :138},'❙':{Wx :277},'❚':{Wx :415},'❛':{Wx :392},'❜':{Wx :392},'❝':{Wx :668},'❞':{Wx :668},'❡':{Wx :732},'❢':{Wx :544},'❣':{Wx :544},'❤':{Wx :910},'❥':{Wx :667},'❦':{Wx :760},'❧':{Wx :760},'❶':{Wx :788},'❷':{Wx :788},'❸':{Wx :788},'❹':{Wx :788},'❺':{Wx :788},'❻':{Wx :788},'❼':{Wx :788},'❽':{Wx :788},'❾':{Wx :788},'❿':{Wx :788},'➀':{Wx :788},'➁':{Wx :788},'➂':{Wx :788},'➃':{Wx :788},'➄':{Wx :788},'➅':{Wx :788},'➆':{Wx :788},'➇':{Wx :788},'➈':{Wx :788},'➉':{Wx :788},'➊':{Wx :788},'➋':{Wx :788},'➌':{Wx :788},'➍':{Wx :788},'➎':{Wx :788},'➏':{Wx :788},'➐':{Wx :788},'➑':{Wx :788},'➒':{Wx :788},'➓':{Wx :788},'➔':{Wx :894},'➘':{Wx :748},'➙':{Wx :924},'➚':{Wx :748},'➛':{Wx :918},'➜':{Wx :927},'➝':{Wx :928},'➞':{Wx :928},'➟':{Wx :834},'➠':{Wx :873},'➡':{Wx :828},'➢':{Wx :924},'➣':{Wx :924},'➤':{Wx :917},'➥':{Wx :930},'➦':{Wx :931},'➧':{Wx :463},'➨':{Wx :883},'➩':{Wx :836},'➪':{Wx :836},'➫':{Wx :867},'➬':{Wx :867},'➭':{Wx :696},'➮':{Wx :696},'➯':{Wx :874},'➱':{Wx :874},'➲':{Wx :760},'➳':{Wx :946},'➴':{Wx :771},'➵':{Wx :865},'➶':{Wx :771},'➷':{Wx :888},'➸':{Wx :967},'➹':{Wx :888},'➺':{Wx :831},'➻':{Wx :873},'➼':{Wx :927},'➽':{Wx :970},'➾':{Wx :918},'\uf8d7':{Wx :390},'\uf8d8':{Wx :390},'\uf8d9':{Wx :317},'\uf8da':{Wx :317},'\uf8db':{Wx :276},'\uf8dc':{Wx :276},'\uf8dd':{Wx :509},'\uf8de':{Wx :509},'\uf8df':{Wx :410},'\uf8e0':{Wx :410},'\uf8e1':{Wx :234},'\uf8e2':{Wx :234},'\uf8e3':{Wx :334},'\uf8e4':{Wx :334}}};
func MakeRuneCharSafeMap (length int )*RuneCharSafeMap {return &RuneCharSafeMap {_fg :make (map[rune ]CharMetrics ,length )};};func (_fee *ttfParser )ReadULong ()(_bgfcf uint32 ){_bf .Read (_fee ._bgb ,_bf .BigEndian ,&_bgfcf );return _bgfcf ;};func (_ab StdFont )ToPdfObject ()_bc .PdfObject {_ee :=_bc .MakeDict ();
_ee .Set ("\u0054\u0079\u0070\u0065",_bc .MakeName ("\u0046\u006f\u006e\u0074"));_ee .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bc .MakeName ("\u0054\u0079\u0070e\u0031"));_ee .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_bc .MakeName (_ab .Name ()));
_ee .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_ab ._eag .ToPdfObject ());return _bc .MakeIndirectObject (_ee );};func _gcb ()StdFont {_ggfb .Do (_eebe );_eeb :=Descriptor {Name :HelveticaBoldName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-170,-228,1003,962},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_eeb ,_da );};func (_cge *ttfParser )ReadShort ()(_baac int16 ){_bf .Read (_cge ._bgb ,_bf .BigEndian ,&_baac );return _baac ;};func init (){RegisterStdFont (CourierName ,_ead ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u0043\u006f\u0075\u0072\u0069e\u0072\u004e\u0065\u0077","\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077");
RegisterStdFont (CourierBoldName ,_eagc ,"\u0043o\u0075r\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (CourierObliqueName ,_cfd ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (CourierBoldObliqueName ,_bdf ,"C\u006f\u0075\u0072\u0069er\u004ee\u0077\u002c\u0042\u006f\u006cd\u0049\u0074\u0061\u006c\u0069\u0063");};const (FontWeightMedium FontWeight =iota ;FontWeightBold ;FontWeightRoman ;);func (_ba *fontMap )read (_fa StdFontName )(func ()StdFont ,bool ){_ba .Lock ();
defer _ba .Unlock ();_fge ,_gdf :=_ba ._cc [_fa ];return _fge ,_gdf ;};var _bac =&RuneCharSafeMap {_fg :map[rune ]CharMetrics {' ':{Wx :250},'!':{Wx :333},'#':{Wx :500},'%':{Wx :833},'&':{Wx :778},'(':{Wx :333},')':{Wx :333},'+':{Wx :549},',':{Wx :250},'.':{Wx :250},'/':{Wx :278},'0':{Wx :500},'1':{Wx :500},'2':{Wx :500},'3':{Wx :500},'4':{Wx :500},'5':{Wx :500},'6':{Wx :500},'7':{Wx :500},'8':{Wx :500},'9':{Wx :500},':':{Wx :278},';':{Wx :278},'<':{Wx :549},'=':{Wx :549},'>':{Wx :549},'?':{Wx :444},'[':{Wx :333},']':{Wx :333},'_':{Wx :500},'{':{Wx :480},'|':{Wx :200},'}':{Wx :480},'¬':{Wx :713},'°':{Wx :400},'±':{Wx :549},'µ':{Wx :576},'×':{Wx :549},'÷':{Wx :549},'ƒ':{Wx :500},'Α':{Wx :722},'Β':{Wx :667},'Γ':{Wx :603},'Ε':{Wx :611},'Ζ':{Wx :611},'Η':{Wx :722},'Θ':{Wx :741},'Ι':{Wx :333},'Κ':{Wx :722},'Λ':{Wx :686},'Μ':{Wx :889},'Ν':{Wx :722},'Ξ':{Wx :645},'Ο':{Wx :722},'Π':{Wx :768},'Ρ':{Wx :556},'Σ':{Wx :592},'Τ':{Wx :611},'Υ':{Wx :690},'Φ':{Wx :763},'Χ':{Wx :722},'Ψ':{Wx :795},'α':{Wx :631},'β':{Wx :549},'γ':{Wx :411},'δ':{Wx :494},'ε':{Wx :439},'ζ':{Wx :494},'η':{Wx :603},'θ':{Wx :521},'ι':{Wx :329},'κ':{Wx :549},'λ':{Wx :549},'ν':{Wx :521},'ξ':{Wx :493},'ο':{Wx :549},'π':{Wx :549},'ρ':{Wx :549},'ς':{Wx :439},'σ':{Wx :603},'τ':{Wx :439},'υ':{Wx :576},'φ':{Wx :521},'χ':{Wx :549},'ψ':{Wx :686},'ω':{Wx :686},'ϑ':{Wx :631},'ϒ':{Wx :620},'ϕ':{Wx :603},'ϖ':{Wx :713},'•':{Wx :460},'…':{Wx :1000},'′':{Wx :247},'″':{Wx :411},'⁄':{Wx :167},'€':{Wx :750},'ℑ':{Wx :686},'℘':{Wx :987},'ℜ':{Wx :795},'Ω':{Wx :768},'ℵ':{Wx :823},'←':{Wx :987},'↑':{Wx :603},'→':{Wx :987},'↓':{Wx :603},'↔':{Wx :1042},'↵':{Wx :658},'⇐':{Wx :987},'⇑':{Wx :603},'⇒':{Wx :987},'⇓':{Wx :603},'⇔':{Wx :1042},'∀':{Wx :713},'∂':{Wx :494},'∃':{Wx :549},'∅':{Wx :823},'∆':{Wx :612},'∇':{Wx :713},'∈':{Wx :713},'∉':{Wx :713},'∋':{Wx :439},'∏':{Wx :823},'∑':{Wx :713},'−':{Wx :549},'∗':{Wx :500},'√':{Wx :549},'∝':{Wx :713},'∞':{Wx :713},'∠':{Wx :768},'∧':{Wx :603},'∨':{Wx :603},'∩':{Wx :768},'∪':{Wx :768},'∫':{Wx :274},'∴':{Wx :863},'∼':{Wx :549},'≅':{Wx :549},'≈':{Wx :549},'≠':{Wx :549},'≡':{Wx :549},'≤':{Wx :549},'≥':{Wx :549},'⊂':{Wx :713},'⊃':{Wx :713},'⊄':{Wx :713},'⊆':{Wx :713},'⊇':{Wx :713},'⊕':{Wx :768},'⊗':{Wx :768},'⊥':{Wx :658},'⋅':{Wx :250},'⌠':{Wx :686},'⌡':{Wx :686},'〈':{Wx :329},'〉':{Wx :329},'◊':{Wx :494},'♠':{Wx :753},'♣':{Wx :753},'♥':{Wx :753},'♦':{Wx :753},'\uf6d9':{Wx :790},'\uf6da':{Wx :790},'\uf6db':{Wx :890},'\uf8e5':{Wx :500},'\uf8e6':{Wx :603},'\uf8e7':{Wx :1000},'\uf8e8':{Wx :790},'\uf8e9':{Wx :790},'\uf8ea':{Wx :786},'\uf8eb':{Wx :384},'\uf8ec':{Wx :384},'\uf8ed':{Wx :384},'\uf8ee':{Wx :384},'\uf8ef':{Wx :384},'\uf8f0':{Wx :384},'\uf8f1':{Wx :494},'\uf8f2':{Wx :494},'\uf8f3':{Wx :494},'\uf8f4':{Wx :494},'\uf8f5':{Wx :686},'\uf8f6':{Wx :384},'\uf8f7':{Wx :384},'\uf8f8':{Wx :384},'\uf8f9':{Wx :384},'\uf8fa':{Wx :384},'\uf8fb':{Wx :384},'\uf8fc':{Wx :494},'\uf8fd':{Wx :494},'\uf8fe':{Wx :494},'\uf8ff':{Wx :790}}};
var _bef _e .Once ;func (_degef *ttfParser )ParseMaxp ()error {if _ace :=_degef .Seek ("\u006d\u0061\u0078\u0070");_ace !=nil {return _ace ;};_degef .Skip (4);_degef ._ada =_degef .ReadUShort ();return nil ;};var _eee *RuneCharSafeMap ;func NewStdFontWithEncoding (desc Descriptor ,metrics *RuneCharSafeMap ,encoder _ed .TextEncoder )StdFont {var _aef rune =0xA0;
if _ ,_ggc :=metrics .Read (_aef );!_ggc {_baf ,_ :=metrics .Read (0x20);metrics .Write (_aef ,_baf );};return StdFont {_gge :desc ,_ffe :metrics ,_eag :encoder };};func _ebc ()StdFont {_aacb :=_ed .NewSymbolEncoder ();_bgfc :=Descriptor {Name :SymbolName ,Family :string (SymbolName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-180,-293,1090,1010},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :85,StemH :92};
return NewStdFontWithEncoding (_bgfc ,_bac ,_aacb );};func _eebe (){_ffc =MakeRuneCharSafeMap (len (_add ));_da =MakeRuneCharSafeMap (len (_add ));for _efa ,_ecc :=range _add {_ffc .Write (_ecc ,CharMetrics {Wx :float64 (_gcd [_efa ])});_da .Write (_ecc ,CharMetrics {Wx :float64 (_ccb [_efa ])});
};_cae =_ffc .Copy ();_cb =_da .Copy ();};func _fbd (){_eccf =MakeRuneCharSafeMap (len (_add ));_eee =MakeRuneCharSafeMap (len (_add ));_gdb =MakeRuneCharSafeMap (len (_add ));_gada =MakeRuneCharSafeMap (len (_add ));for _afg ,_begc :=range _add {_eccf .Write (_begc ,CharMetrics {Wx :float64 (_fcd [_afg ])});
_eee .Write (_begc ,CharMetrics {Wx :float64 (_ebcf [_afg ])});_gdb .Write (_begc ,CharMetrics {Wx :float64 (_fccg [_afg ])});_gada .Write (_begc ,CharMetrics {Wx :float64 (_ede [_afg ])});};};var _ede =[]int16 {611,889,611,611,611,611,611,611,611,611,611,611,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,611,722,722,722,722,333,333,333,333,333,333,333,333,444,667,667,556,556,611,556,556,833,667,667,667,667,667,722,944,722,722,722,722,722,722,722,722,611,722,611,611,611,611,500,500,500,500,500,556,556,556,611,722,722,722,722,722,722,722,722,722,611,833,611,556,556,556,556,556,556,556,500,500,500,500,333,500,667,500,500,778,500,500,422,541,500,920,500,500,278,275,400,400,389,389,333,275,350,444,444,333,444,444,333,500,333,333,250,250,760,500,500,500,500,544,500,400,333,675,500,333,278,444,444,444,444,444,444,444,500,889,444,889,500,444,675,500,333,389,278,500,500,500,500,500,167,500,500,500,500,333,675,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,444,444,278,278,300,278,675,549,675,471,278,722,333,675,500,675,500,500,500,500,500,549,500,500,500,500,500,500,667,333,500,500,500,500,750,750,300,276,310,500,500,500,523,333,333,476,833,250,250,1000,675,675,500,500,500,420,556,556,556,333,333,333,214,389,389,453,389,389,760,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,300,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,444,667,444,444,444,444,500,389,389,389,389,500};
func init (){RegisterStdFont (HelveticaName ,_ceb ,"\u0041\u0072\u0069a\u006c");RegisterStdFont (HelveticaBoldName ,_gcb ,"\u0041\u0072\u0069\u0061\u006c\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (HelveticaObliqueName ,_dgb ,"\u0041\u0072\u0069a\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063");
RegisterStdFont (HelveticaBoldObliqueName ,_bdc ,"\u0041\u0072i\u0061\u006c\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");};func _bdc ()StdFont {_ggfb .Do (_eebe );_fb :=Descriptor {Name :HelveticaBoldObliqueName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-174,-228,1114,962},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_fb ,_cb );};func TtfParse (r _ge .ReadSeeker )(TtfType ,error ){_ebe :=&ttfParser {_bgb :r };return _ebe .Parse ()};func (_bdfe *ttfParser )parseCmapFormat0 ()error {_gaa ,_afc :=_bdfe .ReadStr (256);if _afc !=nil {return _afc ;};_ddc :=[]byte (_gaa );
_ac .Log .Trace ("\u0070a\u0072\u0073e\u0043\u006d\u0061p\u0046\u006f\u0072\u006d\u0061\u0074\u0030:\u0020\u0025\u0073\u000a\u0064\u0061t\u0061\u0053\u0074\u0072\u003d\u0025\u002b\u0071\u000a\u0064\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d",_bdfe ._cd .String (),_gaa ,_ddc );
for _cga ,_bge :=range _ddc {_bdfe ._cd .Chars [rune (_cga )]=GID (_bge );};return nil ;};func NewStdFontByName (name StdFontName )(StdFont ,bool ){_ec ,_beb :=_ggf .read (name );if !_beb {return StdFont {},false ;};return _ec (),true ;};type CharMetrics struct{Wx float64 ;
Wy float64 ;};func (_dcd *TtfType )MakeEncoder ()(_ed .SimpleEncoder ,error ){_gf :=make (map[_ed .CharCode ]GlyphName );for _cca :=_ed .CharCode (0);_cca <=256;_cca ++{_ggag :=rune (_cca );_adg ,_dgf :=_dcd .Chars [_ggag ];if !_dgf {continue ;};var _fgbd GlyphName ;
if int (_adg )>=0&&int (_adg )< len (_dcd .GlyphNames ){_fgbd =_dcd .GlyphNames [_adg ];}else {_fccc :=rune (_adg );if _cada ,_dcg :=_ed .RuneToGlyph (_fccc );_dcg {_fgbd =_cada ;};};if _fgbd !=""{_gf [_cca ]=_fgbd ;};};if len (_gf )==0{_ac .Log .Debug ("WA\u0052\u004eI\u004e\u0047\u003a\u0020\u005a\u0065\u0072\u006f\u0020l\u0065\u006e\u0067\u0074\u0068\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u002e\u0020\u0074\u0074\u0066=\u0025s\u0020\u0043\u0068\u0061\u0072\u0073\u003d\u005b%\u00200\u0032\u0078]",_dcd ,_dcd .Chars );
};return _ed .NewCustomSimpleTextEncoder (_gf ,nil );};func _afa (){const _efd =600;_ccf =MakeRuneCharSafeMap (len (_add ));for _ ,_agd :=range _add {_ccf .Write (_agd ,CharMetrics {Wx :_efd });};_fe =_ccf .Copy ();_beg =_ccf .Copy ();_dg =_ccf .Copy ();
};type GID =_ed .GID ;var _fcd =[]int16 {722,889,722,722,722,722,722,722,722,722,722,667,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,556,722,722,722,722,333,333,333,333,333,333,333,333,389,722,722,611,611,611,611,611,889,722,722,722,722,722,722,889,722,722,722,722,722,722,722,722,556,722,667,667,667,667,556,556,556,556,556,611,611,611,556,722,722,722,722,722,722,722,722,722,722,944,722,722,722,722,611,611,611,611,444,444,444,444,333,444,667,444,444,778,444,444,469,541,500,921,444,500,278,200,480,480,333,333,333,200,350,444,444,333,444,444,333,500,333,278,250,250,760,500,500,500,500,588,500,400,333,564,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,564,500,333,333,333,556,500,556,500,500,167,500,500,500,500,333,564,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,500,500,278,278,344,278,564,549,564,471,278,778,333,564,500,564,500,500,500,500,500,549,500,500,500,500,500,500,722,333,500,500,500,500,750,750,300,276,310,500,500,500,453,333,333,476,833,250,250,1000,564,564,500,444,444,408,444,444,444,333,333,333,180,333,333,453,333,333,760,333,389,389,389,389,389,500,278,500,500,278,250,500,600,278,326,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,500,722,500,500,500,500,500,444,444,444,444,500};
func (_fac *ttfParser )ParseName ()error {if _fcbf :=_fac .Seek ("\u006e\u0061\u006d\u0065");_fcbf !=nil {return _fcbf ;};_fdeg ,_ :=_fac ._bgb .Seek (0,_ge .SeekCurrent );_fac ._cd .PostScriptName ="";_fac .Skip (2);_dae :=_fac .ReadUShort ();_aga :=_fac .ReadUShort ();
for _agee :=uint16 (0);_agee < _dae &&_fac ._cd .PostScriptName =="";_agee ++{_fac .Skip (3*2);_ebaf :=_fac .ReadUShort ();_efg :=_fac .ReadUShort ();_fab :=_fac .ReadUShort ();if _ebaf ==6{_fac ._bgb .Seek (_fdeg +int64 (_aga )+int64 (_fab ),_ge .SeekStart );
_dab ,_fgbf :=_fac .ReadStr (int (_efg ));if _fgbf !=nil {return _fgbf ;};_dab =_g .Replace (_dab ,"\u0000","",-1);_aag ,_fgbf :=_bd .Compile ("\u005b\u0028\u0029\u007b\u007d\u003c\u003e\u0020\u002f%\u005b\u005c\u005d\u005d");if _fgbf !=nil {return _fgbf ;
};_fac ._cd .PostScriptName =_aag .ReplaceAllString (_dab ,"");};};if _fac ._cd .PostScriptName ==""{_ac .Log .Debug ("\u0050a\u0072\u0073e\u004e\u0061\u006de\u003a\u0020\u0054\u0068\u0065\u0020\u006ea\u006d\u0065\u0020\u0050\u006f\u0073t\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u0077\u0061\u0073\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e");
};return nil ;};func _ceb ()StdFont {_ggfb .Do (_eebe );_abb :=Descriptor {Name :HelveticaName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0020,BBox :[4]float64 {-166,-225,1000,931},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_abb ,_ffc );};type StdFont struct{_gge Descriptor ;_ffe *RuneCharSafeMap ;_eag _ed .TextEncoder ;};const (_fbb ="\u0054\u0069\u006de\u0073";TimesRomanName =StdFontName ("T\u0069\u006d\u0065\u0073\u002d\u0052\u006f\u006d\u0061\u006e");
TimesBoldName =StdFontName ("\u0054\u0069\u006d\u0065\u0073\u002d\u0042\u006f\u006c\u0064");TimesItalicName =StdFontName ("\u0054\u0069\u006de\u0073\u002d\u0049\u0074\u0061\u006c\u0069\u0063");TimesBoldItalicName =StdFontName ("\u0054\u0069m\u0065\u0073\u002dB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
);func init (){RegisterStdFont (SymbolName ,_ebc ,"\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063","S\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064","\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (ZapfDingbatsName ,_aed );};var _ce _e .Once ;var _da *RuneCharSafeMap ;type StdFontName string ;func (_bgf StdFont )Encoder ()_ed .TextEncoder {return _bgf ._eag };var _cb *RuneCharSafeMap ;func init (){RegisterStdFont (TimesRomanName ,_age ,"\u0054\u0069\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e","\u0054\u0069\u006de\u0073");
RegisterStdFont (TimesBoldName ,_bbb ,"\u0054i\u006de\u0073\u004e\u0065\u0077\u0052o\u006d\u0061n\u002c\u0042\u006f\u006c\u0064","\u0054\u0069\u006d\u0065\u0073\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (TimesItalicName ,_fcc ,"T\u0069m\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006da\u006e\u002c\u0049\u0074al\u0069\u0063","\u0054\u0069\u006de\u0073\u002c\u0049\u0074\u0061\u006c\u0069\u0063");
RegisterStdFont (TimesBoldItalicName ,_abc ,"\u0054i\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e,\u0042\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063","\u0054\u0069m\u0065\u0073\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
};func (_dgfd *ttfParser )parseCmapSubtable31 (_abe int64 )error {_cce :=make ([]rune ,0,8);_ccd :=make ([]rune ,0,8);_fgd :=make ([]int16 ,0,8);_befd :=make ([]uint16 ,0,8);_dgfd ._cd .Chars =make (map[rune ]GID );_dgfd ._bgb .Seek (int64 (_dgfd ._fcgf ["\u0063\u006d\u0061\u0070"])+_abe ,_ge .SeekStart );
_fcde :=_dgfd .ReadUShort ();if _fcde !=4{return _a .Errorf ("u\u006e\u0065\u0078\u0070\u0065\u0063t\u0065\u0064\u0020\u0073\u0075\u0062t\u0061\u0062\u006c\u0065\u0020\u0066\u006fr\u006d\u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0028\u0025w\u0029",_fcde ,_bc .ErrNotSupported );
};_dgfd .Skip (2*2);_egc :=int (_dgfd .ReadUShort ()/2);_dgfd .Skip (3*2);for _cea :=0;_cea < _egc ;_cea ++{_ccd =append (_ccd ,rune (_dgfd .ReadUShort ()));};_dgfd .Skip (2);for _gec :=0;_gec < _egc ;_gec ++{_cce =append (_cce ,rune (_dgfd .ReadUShort ()));
};for _gbfa :=0;_gbfa < _egc ;_gbfa ++{_fgd =append (_fgd ,_dgfd .ReadShort ());};_gae ,_ :=_dgfd ._bgb .Seek (int64 (0),_ge .SeekCurrent );for _egf :=0;_egf < _egc ;_egf ++{_befd =append (_befd ,_dgfd .ReadUShort ());};for _dfg :=0;_dfg < _egc ;_dfg ++{_baea :=_cce [_dfg ];
_bgbf :=_ccd [_dfg ];_bdga :=_fgd [_dfg ];_cde :=_befd [_dfg ];if _cde > 0{_dgfd ._bgb .Seek (_gae +2*int64 (_dfg )+int64 (_cde ),_ge .SeekStart );};for _cdg :=_baea ;_cdg <=_bgbf ;_cdg ++{if _cdg ==0xFFFF{break ;};var _agf int32 ;if _cde > 0{_agf =int32 (_dgfd .ReadUShort ());
if _agf > 0{_agf +=int32 (_bdga );};}else {_agf =_cdg +int32 (_bdga );};if _agf >=65536{_agf -=65536;};if _agf > 0{_dgfd ._cd .Chars [_cdg ]=GID (_agf );};};};return nil ;};type Descriptor struct{Name StdFontName ;Family string ;Weight FontWeight ;Flags uint ;
BBox [4]float64 ;ItalicAngle float64 ;Ascent float64 ;Descent float64 ;CapHeight float64 ;XHeight float64 ;StemV float64 ;StemH float64 ;};func (_effc *ttfParser )ReadStr (length int )(string ,error ){_abec :=make ([]byte ,length );_effb ,_aad :=_effc ._bgb .Read (_abec );
if _aad !=nil {return "",_aad ;}else if _effb !=length {return "",_b .Errorf ("\u0075\u006e\u0061bl\u0065\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0073",length );};return string (_abec ),nil ;};func RegisterStdFont (name StdFontName ,fnc func ()StdFont ,aliases ...StdFontName ){if _ ,_db :=_ggf .read (name );
_db {panic ("\u0066o\u006e\u0074\u0020\u0061l\u0072\u0065\u0061\u0064\u0079 \u0072e\u0067i\u0073\u0074\u0065\u0072\u0065\u0064\u003a "+string (name ));};_ggf .write (name ,fnc );for _ ,_aabc :=range aliases {RegisterStdFont (_aabc ,fnc );};};func (_adge *ttfParser )ParseHmtx ()error {if _ggfc :=_adge .Seek ("\u0068\u006d\u0074\u0078");
_ggfc !=nil {return _ggfc ;};_adge ._cd .Widths =make ([]uint16 ,0,8);for _afab :=uint16 (0);_afab < _adge ._gb ;_afab ++{_adge ._cd .Widths =append (_adge ._cd .Widths ,_adge .ReadUShort ());_adge .Skip (2);};if _adge ._gb < _adge ._ada &&_adge ._gb > 0{_dfd :=_adge ._cd .Widths [_adge ._gb -1];
for _bcb :=_adge ._gb ;_bcb < _adge ._ada ;_bcb ++{_adge ._cd .Widths =append (_adge ._cd .Widths ,_dfd );};};return nil ;};func (_cgc *TtfType )NewEncoder ()_ed .TextEncoder {return _ed .NewTrueTypeFontEncoder (_cgc .Chars )};func (_ag *RuneCharSafeMap )Length ()int {_ag ._acf .RLock ();
defer _ag ._acf .RUnlock ();return len (_ag ._fg );};func (_abg *ttfParser )Skip (n int ){_abg ._bgb .Seek (int64 (n ),_ge .SeekCurrent )};func (_gc *RuneCharSafeMap )Read (b rune )(CharMetrics ,bool ){_gc ._acf .RLock ();defer _gc ._acf .RUnlock ();_bg ,_bed :=_gc ._fg [b ];
return _bg ,_bed ;};func (_cgg *ttfParser )Seek (tag string )error {_fbdf ,_ggae :=_cgg ._fcgf [tag ];if !_ggae {return _b .Errorf ("\u0074\u0061\u0062\u006ce \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0073",tag );};_cgg ._bgb .Seek (int64 (_fbdf ),_ge .SeekStart );
return nil ;};var _ccf *RuneCharSafeMap ;func (_ebega *ttfParser )parseCmapFormat6 ()error {_bda :=int (_ebega .ReadUShort ());_aebc :=int (_ebega .ReadUShort ());_ac .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u0046o\u0072\u006d\u0061\u0074\u0036\u003a\u0020%s\u0020\u0066\u0069\u0072s\u0074\u0043\u006f\u0064\u0065\u003d\u0025\u0064\u0020en\u0074\u0072y\u0043\u006f\u0075\u006e\u0074\u003d\u0025\u0064",_ebega ._cd .String (),_bda ,_aebc );
for _gdc :=0;_gdc < _aebc ;_gdc ++{_cfa :=GID (_ebega .ReadUShort ());_ebega ._cd .Chars [rune (_gdc +_bda )]=_cfa ;};return nil ;};func (_cag StdFont )Descriptor ()Descriptor {return _cag ._gge };func (_gde *ttfParser )parseCmapVersion (_gaf int64 )error {_ac .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006da\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a \u006f\u0066\u0066s\u0065t\u003d\u0025\u0064",_gaf );
if _gde ._cd .Chars ==nil {_gde ._cd .Chars =make (map[rune ]GID );};_gde ._bgb .Seek (int64 (_gde ._fcgf ["\u0063\u006d\u0061\u0070"])+_gaf ,_ge .SeekStart );var _fddb ,_dge uint32 ;_bff :=_gde .ReadUShort ();if _bff < 8{_fddb =uint32 (_gde .ReadUShort ());
_dge =uint32 (_gde .ReadUShort ());}else {_gde .ReadUShort ();_fddb =_gde .ReadULong ();_dge =_gde .ReadULong ();};_ac .Log .Debug ("\u0070\u0061\u0072\u0073\u0065\u0043m\u0061\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064 \u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067u\u0061g\u0065\u003d\u0025\u0064",_bff ,_fddb ,_dge );
switch _bff {case 0:return _gde .parseCmapFormat0 ();case 6:return _gde .parseCmapFormat6 ();case 12:return _gde .parseCmapFormat12 ();default:_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063m\u0061\u0070\u0020\u0066\u006f\u0072\u006da\u0074\u003d\u0025\u0064",_bff );
return nil ;};};func (_eff *TtfType )String ()string {return _b .Sprintf ("\u0046\u004fN\u0054\u005f\u0046\u0049\u004cE\u0032\u007b\u0025\u0023\u0071 \u0055\u006e\u0069\u0074\u0073\u0050\u0065\u0072\u0045\u006d\u003d\u0025\u0064\u0020\u0042\u006f\u006c\u0064\u003d\u0025\u0074\u0020\u0049\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065\u003d\u0025\u0066\u0020"+"\u0043\u0061pH\u0065\u0069\u0067h\u0074\u003d\u0025\u0064 Ch\u0061rs\u003d\u0025\u0064\u0020\u0047\u006c\u0079ph\u004e\u0061\u006d\u0065\u0073\u003d\u0025d\u007d",_eff .PostScriptName ,_eff .UnitsPerEm ,_eff .Bold ,_eff .ItalicAngle ,_eff .CapHeight ,len (_eff .Chars ),len (_eff .GlyphNames ));
};var _add =[]rune {'A','Æ','Á','Ă','Â','Ä','À','Ā','Ą','Å','Ã','B','C','Ć','Č','Ç','D','Ď','Đ','∆','E','É','Ě','Ê','Ë','Ė','È','Ē','Ę','Ð','€','F','G','Ğ','Ģ','H','I','Í','Î','Ï','İ','Ì','Ī','Į','J','K','Ķ','L','Ĺ','Ľ','Ļ','Ł','M','N','Ń','Ň','Ņ','Ñ','O','Œ','Ó','Ô','Ö','Ò','Ő','Ō','Ø','Õ','P','Q','R','Ŕ','Ř','Ŗ','S','Ś','Š','Ş','Ș','T','Ť','Ţ','Þ','U','Ú','Û','Ü','Ù','Ű','Ū','Ų','Ů','V','W','X','Y','Ý','Ÿ','Z','Ź','Ž','Ż','a','á','ă','â','´','ä','æ','à','ā','&','ą','å','^','~','*','@','ã','b','\\','|','{','}','[',']','˘','¦','•','c','ć','ˇ','č','ç','¸','¢','ˆ',':',',','\uf6c3','©','¤','d','†','‡','ď','đ','°','¨','÷','$','˙','ı','e','é','ě','ê','ë','ė','è','8','…','ē','—','–','ę','=','ð','!','¡','f','ﬁ','5','ﬂ','ƒ','4','⁄','g','ğ','ģ','ß','`','>','≥','«','»','‹','›','h','˝','-','i','í','î','ï','ì','ī','į','j','k','ķ','l','ĺ','ľ','ļ','<','≤','¬','◊','ł','m','¯','−','µ','×','n','ń','ň','ņ','9','≠','ñ','#','o','ó','ô','ö','œ','˛','ò','ő','ō','1','½','¼','¹','ª','º','ø','õ','p','¶','(',')','∂','%','.','·','‰','+','±','q','?','¿','"','„','“','”','‘','’','‚','\'','r','ŕ','√','ř','ŗ','®','˚','s','ś','š','ş','ș','§',';','7','6','/',' ','£','∑','t','ť','ţ','þ','3','¾','³','˜','™','2','²','u','ú','û','ü','ù','ű','ū','_','ų','ů','v','w','x','y','ý','ÿ','¥','z','ź','ž','ż','0'};
type GlyphName =_ed .GlyphName ;var _cae *RuneCharSafeMap ;var _fccg =[]int16 {667,944,667,667,667,667,667,667,667,667,667,667,667,667,667,667,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,667,722,722,722,778,389,389,389,389,389,389,389,389,500,667,667,611,611,611,611,611,889,722,722,722,722,722,722,944,722,722,722,722,722,722,722,722,611,722,667,667,667,667,556,556,556,556,556,611,611,611,611,722,722,722,722,722,722,722,722,722,667,889,667,611,611,611,611,611,611,611,500,500,500,500,333,500,722,500,500,778,500,500,570,570,500,832,500,500,278,220,348,348,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,500,500,500,608,500,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,389,389,333,556,500,556,500,500,167,500,500,500,500,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,278,500,500,278,278,382,278,570,549,606,494,278,778,333,606,576,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,266,300,500,500,500,500,333,333,494,833,250,250,1000,570,570,500,500,500,555,500,500,500,333,333,333,278,389,389,549,389,389,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,366,278,500,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,444,667,500,444,444,444,500,389,389,389,389,500};
var _ffc *RuneCharSafeMap ;func (_bdg StdFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_dc ,_bee :=_bdg ._ffe .Read (r );return _dc ,_bee ;};func _bdf ()StdFont {_ce .Do (_afa );_ef :=Descriptor {Name :CourierBoldObliqueName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0061,BBox :[4]float64 {-57,-250,869,801},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_ef ,_beg );};func _abc ()StdFont {_bef .Do (_fbd );_gad :=Descriptor {Name :TimesBoldItalicName ,Family :_fbb ,Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-200,-218,996,921},ItalicAngle :-15,Ascent :683,Descent :-217,CapHeight :669,XHeight :462,StemV :121,StemH :42};
return NewStdFont (_gad ,_gdb );};type ttfParser struct{_cd TtfType ;_bgb _ge .ReadSeeker ;_fcgf map[string ]uint32 ;_gb uint16 ;_ada uint16 ;};func _eagc ()StdFont {_ce .Do (_afa );_eec :=Descriptor {Name :CourierBoldName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0021,BBox :[4]float64 {-113,-250,749,801},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_eec ,_fe );};var _dg *RuneCharSafeMap ;func (_gfa *ttfParser )parseCmapFormat12 ()error {_ebcb :=_gfa .ReadULong ();_ac .Log .Trace ("\u0070\u0061\u0072se\u0043\u006d\u0061\u0070\u0046\u006f\u0072\u006d\u0061t\u00312\u003a \u0025s\u0020\u006e\u0075\u006d\u0047\u0072\u006f\u0075\u0070\u0073\u003d\u0025\u0064",_gfa ._cd .String (),_ebcb );
for _efaf :=uint32 (0);_efaf < _ebcb ;_efaf ++{_bgcg :=_gfa .ReadULong ();_adeg :=_gfa .ReadULong ();_fgde :=_gfa .ReadULong ();if _bgcg > 0x0010FFFF||(0xD800<=_bgcg &&_bgcg <=0xDFFF){return _d .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");
};if _adeg < _bgcg ||_adeg > 0x0010FFFF||(0xD800<=_adeg &&_adeg <=0xDFFF){return _d .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");};for _bdb :=_bgcg ;_bdb <=_adeg ;
_bdb ++{if _bdb > 0x10FFFF{_ac .Log .Debug ("\u0046\u006fr\u006d\u0061\u0074\u0020\u0031\u0032\u0020\u0063\u006d\u0061\u0070\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0063\u0068\u0061\u0072\u0061\u0063\u0074\u0065\u0072\u0020\u0062\u0065\u0079\u006f\u006e\u0064\u0020\u0055\u0043\u0053\u002d\u0034");
};_gfa ._cd .Chars [rune (_bdb )]=GID (_fgde );_fgde ++;};};return nil ;};var _ggfb _e .Once ;var _cef =[]GlyphName {"\u002en\u006f\u0074\u0064\u0065\u0066","\u002e\u006e\u0075l\u006c","\u006e\u006fn\u006d\u0061\u0072k\u0069\u006e\u0067\u0072\u0065\u0074\u0075\u0072\u006e","\u0073\u0070\u0061c\u0065","\u0065\u0078\u0063\u006c\u0061\u006d","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c","\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u0069\u0067\u006e","\u0064\u006f\u006c\u006c\u0061\u0072","\u0070e\u0072\u0063\u0065\u006e\u0074","\u0061m\u0070\u0065\u0072\u0073\u0061\u006ed","q\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067\u006c\u0065","\u0070a\u0072\u0065\u006e\u006c\u0065\u0066t","\u0070\u0061\u0072\u0065\u006e\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0074\u0065\u0072\u0069\u0073\u006b","\u0070\u006c\u0075\u0073","\u0063\u006f\u006dm\u0061","\u0068\u0079\u0070\u0068\u0065\u006e","\u0070\u0065\u0072\u0069\u006f\u0064","\u0073\u006c\u0061s\u0068","\u007a\u0065\u0072\u006f","\u006f\u006e\u0065","\u0074\u0077\u006f","\u0074\u0068\u0072e\u0065","\u0066\u006f\u0075\u0072","\u0066\u0069\u0076\u0065","\u0073\u0069\u0078","\u0073\u0065\u0076e\u006e","\u0065\u0069\u0067h\u0074","\u006e\u0069\u006e\u0065","\u0063\u006f\u006co\u006e","\u0073e\u006d\u0069\u0063\u006f\u006c\u006fn","\u006c\u0065\u0073\u0073","\u0065\u0071\u0075a\u006c","\u0067r\u0065\u0061\u0074\u0065\u0072","\u0071\u0075\u0065\u0073\u0074\u0069\u006f\u006e","\u0061\u0074","\u0041","\u0042","\u0043","\u0044","\u0045","\u0046","\u0047","\u0048","\u0049","\u004a","\u004b","\u004c","\u004d","\u004e","\u004f","\u0050","\u0051","\u0052","\u0053","\u0054","\u0055","\u0056","\u0057","\u0058","\u0059","\u005a","b\u0072\u0061\u0063\u006b\u0065\u0074\u006c\u0065\u0066\u0074","\u0062a\u0063\u006b\u0073\u006c\u0061\u0073h","\u0062\u0072\u0061c\u006b\u0065\u0074\u0072\u0069\u0067\u0068\u0074","a\u0073\u0063\u0069\u0069\u0063\u0069\u0072\u0063\u0075\u006d","\u0075\u006e\u0064\u0065\u0072\u0073\u0063\u006f\u0072\u0065","\u0067\u0072\u0061v\u0065","\u0061","\u0062","\u0063","\u0064","\u0065","\u0066","\u0067","\u0068","\u0069","\u006a","\u006b","\u006c","\u006d","\u006e","\u006f","\u0070","\u0071","\u0072","\u0073","\u0074","\u0075","\u0076","\u0077","\u0078","\u0079","\u007a","\u0062r\u0061\u0063\u0065\u006c\u0065\u0066t","\u0062\u0061\u0072","\u0062\u0072\u0061\u0063\u0065\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0063\u0069\u0069\u0074\u0069\u006c\u0064\u0065","\u0041d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0041\u0072\u0069n\u0067","\u0043\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0045\u0061\u0063\u0075\u0074\u0065","\u004e\u0074\u0069\u006c\u0064\u0065","\u004fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u0055d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0061\u0063\u0075\u0074\u0065","\u0061\u0067\u0072\u0061\u0076\u0065","a\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0074\u0069\u006c\u0064\u0065","\u0061\u0072\u0069n\u0067","\u0063\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0065\u0061\u0063\u0075\u0074\u0065","\u0065\u0067\u0072\u0061\u0076\u0065","e\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0065d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0069\u0061\u0063\u0075\u0074\u0065","\u0069\u0067\u0072\u0061\u0076\u0065","i\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0069d\u0069\u0065\u0072\u0065\u0073\u0069s","\u006e\u0074\u0069\u006c\u0064\u0065","\u006f\u0061\u0063\u0075\u0074\u0065","\u006f\u0067\u0072\u0061\u0076\u0065","o\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u006fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u006f\u0074\u0069\u006c\u0064\u0065","\u0075\u0061\u0063\u0075\u0074\u0065","\u0075\u0067\u0072\u0061\u0076\u0065","u\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0075d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0064\u0061\u0067\u0067\u0065\u0072","\u0064\u0065\u0067\u0072\u0065\u0065","\u0063\u0065\u006e\u0074","\u0073\u0074\u0065\u0072\u006c\u0069\u006e\u0067","\u0073e\u0063\u0074\u0069\u006f\u006e","\u0062\u0075\u006c\u006c\u0065\u0074","\u0070a\u0072\u0061\u0067\u0072\u0061\u0070h","\u0067\u0065\u0072\u006d\u0061\u006e\u0064\u0062\u006c\u0073","\u0072\u0065\u0067\u0069\u0073\u0074\u0065\u0072\u0065\u0064","\u0063o\u0070\u0079\u0072\u0069\u0067\u0068t","\u0074r\u0061\u0064\u0065\u006d\u0061\u0072k","\u0061\u0063\u0075t\u0065","\u0064\u0069\u0065\u0072\u0065\u0073\u0069\u0073","\u006e\u006f\u0074\u0065\u0071\u0075\u0061\u006c","\u0041\u0045","\u004f\u0073\u006c\u0061\u0073\u0068","\u0069\u006e\u0066\u0069\u006e\u0069\u0074\u0079","\u0070l\u0075\u0073\u006d\u0069\u006e\u0075s","\u006ce\u0073\u0073\u0065\u0071\u0075\u0061l","\u0067\u0072\u0065a\u0074\u0065\u0072\u0065\u0071\u0075\u0061\u006c","\u0079\u0065\u006e","\u006d\u0075","p\u0061\u0072\u0074\u0069\u0061\u006c\u0064\u0069\u0066\u0066","\u0073u\u006d\u006d\u0061\u0074\u0069\u006fn","\u0070r\u006f\u0064\u0075\u0063\u0074","\u0070\u0069","\u0069\u006e\u0074\u0065\u0067\u0072\u0061\u006c","o\u0072\u0064\u0066\u0065\u006d\u0069\u006e\u0069\u006e\u0065","\u006f\u0072\u0064m\u0061\u0073\u0063\u0075\u006c\u0069\u006e\u0065","\u004f\u006d\u0065g\u0061","\u0061\u0065","\u006f\u0073\u006c\u0061\u0073\u0068","\u0071\u0075\u0065s\u0074\u0069\u006f\u006e\u0064\u006f\u0077\u006e","\u0065\u0078\u0063\u006c\u0061\u006d\u0064\u006f\u0077\u006e","\u006c\u006f\u0067\u0069\u0063\u0061\u006c\u006e\u006f\u0074","\u0072a\u0064\u0069\u0063\u0061\u006c","\u0066\u006c\u006f\u0072\u0069\u006e","a\u0070\u0070\u0072\u006f\u0078\u0065\u0071\u0075\u0061\u006c","\u0044\u0065\u006ct\u0061","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074r\u0069\u0067\u0068\u0074","\u0065\u006c\u006c\u0069\u0070\u0073\u0069\u0073","\u006e\u006fn\u0062\u0072\u0065a\u006b\u0069\u006e\u0067\u0073\u0070\u0061\u0063\u0065","\u0041\u0067\u0072\u0061\u0076\u0065","\u0041\u0074\u0069\u006c\u0064\u0065","\u004f\u0074\u0069\u006c\u0064\u0065","\u004f\u0045","\u006f\u0065","\u0065\u006e\u0064\u0061\u0073\u0068","\u0065\u006d\u0064\u0061\u0073\u0068","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u006c\u0065\u0066\u0074","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c\u0072\u0069\u0067\u0068\u0074","\u0071u\u006f\u0074\u0065\u006c\u0065\u0066t","\u0071\u0075\u006f\u0074\u0065\u0072\u0069\u0067\u0068\u0074","\u0064\u0069\u0076\u0069\u0064\u0065","\u006co\u007a\u0065\u006e\u0067\u0065","\u0079d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0059d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0066\u0072\u0061\u0063\u0074\u0069\u006f\u006e","\u0063\u0075\u0072\u0072\u0065\u006e\u0063\u0079","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006c\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006cr\u0069\u0067\u0068\u0074","\u0066\u0069","\u0066\u006c","\u0064a\u0067\u0067\u0065\u0072\u0064\u0062l","\u0070\u0065\u0072\u0069\u006f\u0064\u0063\u0065\u006et\u0065\u0072\u0065\u0064","\u0071\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067l\u0062\u0061\u0073\u0065","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u0062\u0061\u0073\u0065","p\u0065\u0072\u0074\u0068\u006f\u0075\u0073\u0061\u006e\u0064","A\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","E\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0041\u0061\u0063\u0075\u0074\u0065","\u0045d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0045\u0067\u0072\u0061\u0076\u0065","\u0049\u0061\u0063\u0075\u0074\u0065","I\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0049d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0049\u0067\u0072\u0061\u0076\u0065","\u004f\u0061\u0063\u0075\u0074\u0065","O\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061\u0070\u0070l\u0065","\u004f\u0067\u0072\u0061\u0076\u0065","\u0055\u0061\u0063\u0075\u0074\u0065","U\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0055\u0067\u0072\u0061\u0076\u0065","\u0064\u006f\u0074\u006c\u0065\u0073\u0073\u0069","\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0074\u0069\u006cd\u0065","\u006d\u0061\u0063\u0072\u006f\u006e","\u0062\u0072\u0065v\u0065","\u0064o\u0074\u0061\u0063\u0063\u0065\u006et","\u0072\u0069\u006e\u0067","\u0063e\u0064\u0069\u006c\u006c\u0061","\u0068\u0075\u006eg\u0061\u0072\u0075\u006d\u006c\u0061\u0075\u0074","\u006f\u0067\u006f\u006e\u0065\u006b","\u0063\u0061\u0072o\u006e","\u004c\u0073\u006c\u0061\u0073\u0068","\u006c\u0073\u006c\u0061\u0073\u0068","\u0053\u0063\u0061\u0072\u006f\u006e","\u0073\u0063\u0061\u0072\u006f\u006e","\u005a\u0063\u0061\u0072\u006f\u006e","\u007a\u0063\u0061\u0072\u006f\u006e","\u0062r\u006f\u006b\u0065\u006e\u0062\u0061r","\u0045\u0074\u0068","\u0065\u0074\u0068","\u0059\u0061\u0063\u0075\u0074\u0065","\u0079\u0061\u0063\u0075\u0074\u0065","\u0054\u0068\u006fr\u006e","\u0074\u0068\u006fr\u006e","\u006d\u0069\u006eu\u0073","\u006d\u0075\u006c\u0074\u0069\u0070\u006c\u0079","o\u006e\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","t\u0077\u006f\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u0074\u0068\u0072\u0065\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u006fn\u0065\u0068\u0061\u006c\u0066","\u006f\u006e\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072","\u0074\u0068\u0072\u0065\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072\u0073","\u0066\u0072\u0061n\u0063","\u0047\u0062\u0072\u0065\u0076\u0065","\u0067\u0062\u0072\u0065\u0076\u0065","\u0049\u0064\u006f\u0074\u0061\u0063\u0063\u0065\u006e\u0074","\u0053\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0073\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0043\u0061\u0063\u0075\u0074\u0065","\u0063\u0061\u0063\u0075\u0074\u0065","\u0043\u0063\u0061\u0072\u006f\u006e","\u0063\u0063\u0061\u0072\u006f\u006e","\u0064\u0063\u0072\u006f\u0061\u0074"};
func (_fggd *fontMap )write (_eb StdFontName ,_df func ()StdFont ){_fggd .Lock ();defer _fggd .Unlock ();_fggd ._cc [_eb ]=_df ;};func _cfd ()StdFont {_ce .Do (_afa );_ded :=Descriptor {Name :CourierObliqueName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0061,BBox :[4]float64 {-27,-250,849,805},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_ded ,_dg );};func (_bfb *ttfParser )readByte ()(_efbg uint8 ){_bf .Read (_bfb ._bgb ,_bf .BigEndian ,&_efbg );return _efbg ;};var _gada *RuneCharSafeMap ;var _gdb *RuneCharSafeMap ;const (SymbolName =StdFontName ("\u0053\u0079\u006d\u0062\u006f\u006c");
ZapfDingbatsName =StdFontName ("\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073"););type TtfType struct{UnitsPerEm uint16 ;PostScriptName string ;Bold bool ;ItalicAngle float64 ;IsFixedPitch bool ;TypoAscender int16 ;TypoDescender int16 ;
UnderlinePosition int16 ;UnderlineThickness int16 ;Xmin ,Ymin ,Xmax ,Ymax int16 ;CapHeight int16 ;Widths []uint16 ;Chars map[rune ]GID ;GlyphNames []GlyphName ;};func (_caeg *ttfParser )Read32Fixed ()float64 {_gfd :=float64 (_caeg .ReadShort ());_cbf :=float64 (_caeg .ReadUShort ())/65536.0;
return _gfd +_cbf ;};func (_af CharMetrics )String ()string {return _b .Sprintf ("<\u0025\u002e\u0031\u0066\u002c\u0025\u002e\u0031\u0066\u003e",_af .Wx ,_af .Wy );};func (_fda *ttfParser )ParseHead ()error {if _ebeg :=_fda .Seek ("\u0068\u0065\u0061\u0064");
_ebeg !=nil {return _ebeg ;};_fda .Skip (3*4);_eeeb :=_fda .ReadULong ();if _eeeb !=0x5F0F3CF5{_ac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0063\u006fr\u0072e\u0063\u0074\u0020\u006d\u0061\u0067\u0069\u0063\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u002e\u0020\u0046\u006fn\u0074\u0020\u006d\u0061\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0020\u0063\u006f\u0072\u0072\u0065\u0063t\u006c\u0079\u002e\u0020\u0025\u0073",_fda );
};_fda .Skip (2);_fda ._cd .UnitsPerEm =_fda .ReadUShort ();_fda .Skip (2*8);_fda ._cd .Xmin =_fda .ReadShort ();_fda ._cd .Ymin =_fda .ReadShort ();_fda ._cd .Xmax =_fda .ReadShort ();_fda ._cd .Ymax =_fda .ReadShort ();return nil ;};type Font interface{Encoder ()_ed .TextEncoder ;
GetRuneMetrics (_cf rune )(CharMetrics ,bool );};func (_fgg *RuneCharSafeMap )Range (f func (_acb rune ,_deg CharMetrics )(_gd bool )){_fgg ._acf .RLock ();defer _fgg ._acf .RUnlock ();for _fgf ,_ff :=range _fgg ._fg {if f (_fgf ,_ff ){break ;};};};var _ggf =&fontMap {_cc :make (map[StdFontName ]func ()StdFont )};
func (_ea *RuneCharSafeMap )Write (b rune ,r CharMetrics ){_ea ._acf .Lock ();defer _ea ._acf .Unlock ();_ea ._fg [b ]=r ;};func (_dfag *ttfParser )ReadSByte ()(_bffe int8 ){_bf .Read (_dfag ._bgb ,_bf .BigEndian ,&_bffe );return _bffe ;};func _aed ()StdFont {_dbf :=_ed .NewZapfDingbatsEncoder ();
_fgc :=Descriptor {Name :ZapfDingbatsName ,Family :string (ZapfDingbatsName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-1,-143,981,820},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :90,StemH :28};return NewStdFontWithEncoding (_fgc ,_eaf ,_dbf );
};func _fcc ()StdFont {_bef .Do (_fbd );_gcc :=Descriptor {Name :TimesItalicName ,Family :_fbb ,Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-169,-217,1010,883},ItalicAngle :-15.5,Ascent :683,Descent :-217,CapHeight :653,XHeight :441,StemV :76,StemH :32};
return NewStdFont (_gcc ,_gada );};func (_fgfe *ttfParser )ParsePost ()error {if _adee :=_fgfe .Seek ("\u0070\u006f\u0073\u0074");_adee !=nil {return _adee ;};_agfe :=_fgfe .Read32Fixed ();_fgfe ._cd .ItalicAngle =_fgfe .Read32Fixed ();_fgfe ._cd .UnderlinePosition =_fgfe .ReadShort ();
_fgfe ._cd .UnderlineThickness =_fgfe .ReadShort ();_fgfe ._cd .IsFixedPitch =_fgfe .ReadULong ()!=0;_fgfe .ReadULong ();_fgfe .ReadULong ();_fgfe .ReadULong ();_fgfe .ReadULong ();_ac .Log .Trace ("\u0050a\u0072\u0073\u0065\u0050\u006f\u0073\u0074\u003a\u0020\u0066\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065\u003d\u0025\u0066",_agfe );
switch _agfe {case 1.0:_fgfe ._cd .GlyphNames =_cef ;case 2.0:_deb :=int (_fgfe .ReadUShort ());_acc :=make ([]int ,_deb );_fgfe ._cd .GlyphNames =make ([]GlyphName ,_deb );_daa :=-1;for _dbad :=0;_dbad < _deb ;_dbad ++{_bbf :=int (_fgfe .ReadUShort ());
_acc [_dbad ]=_bbf ;if _bbf <=0x7fff&&_bbf > _daa {_daa =_bbf ;};};var _dedg []GlyphName ;if _daa >=len (_cef ){_dedg =make ([]GlyphName ,_daa -len (_cef )+1);for _afca :=0;_afca < _daa -len (_cef )+1;_afca ++{_gbe :=int (_fgfe .readByte ());_dgbd ,_fcce :=_fgfe .ReadStr (_gbe );
if _fcce !=nil {return _fcce ;};_dedg [_afca ]=GlyphName (_dgbd );};};for _bgda :=0;_bgda < _deb ;_bgda ++{_ffcb :=_acc [_bgda ];if _ffcb < len (_cef ){_fgfe ._cd .GlyphNames [_bgda ]=_cef [_ffcb ];}else if _ffcb >=len (_cef )&&_ffcb <=32767{_fgfe ._cd .GlyphNames [_bgda ]=_dedg [_ffcb -len (_cef )];
}else {_fgfe ._cd .GlyphNames [_bgda ]="\u002e\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064";};};case 2.5:_bega :=make ([]int ,_fgfe ._ada );for _gcef :=0;_gcef < len (_bega );_gcef ++{_agdg :=int (_fgfe .ReadSByte ());_bega [_gcef ]=_gcef +1+_agdg ;
};_fgfe ._cd .GlyphNames =make ([]GlyphName ,len (_bega ));for _bdbf :=0;_bdbf < len (_fgfe ._cd .GlyphNames );_bdbf ++{_dec :=_cef [_bega [_bdbf ]];_fgfe ._cd .GlyphNames [_bdbf ]=_dec ;};case 3.0:_ac .Log .Debug ("\u004e\u006f\u0020\u0050\u006f\u0073t\u0053\u0063\u0072i\u0070\u0074\u0020n\u0061\u006d\u0065\u0020\u0069\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020is\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0066\u006f\u006e\u0074\u002e");
default:_ac .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020f\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065=\u0025\u0066",_agfe );};return nil ;};var _ Font =StdFont {};func NewStdFont (desc Descriptor ,metrics *RuneCharSafeMap )StdFont {return NewStdFontWithEncoding (desc ,metrics ,_ed .NewStandardEncoder ());
};var _ccb =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,556,722,722,611,611,611,611,611,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,722,556,556,584,584,389,975,556,611,278,280,389,389,333,333,333,280,350,556,556,333,556,556,333,556,333,333,278,250,737,556,611,556,556,743,611,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,611,333,333,333,611,556,611,556,556,167,611,611,611,611,333,584,549,556,556,333,333,611,333,333,278,278,278,278,278,278,278,278,556,556,278,278,400,278,584,549,584,494,278,889,333,584,611,584,611,611,611,611,556,549,611,556,611,611,611,611,944,333,611,611,611,556,834,834,333,370,365,611,611,611,556,333,333,494,889,278,278,1000,584,584,611,611,611,474,500,500,500,278,278,278,238,389,389,549,389,389,737,333,556,556,556,556,556,556,333,556,556,278,278,556,600,333,389,333,611,556,834,333,333,1000,556,333,611,611,611,611,611,611,611,556,611,611,556,778,556,556,556,556,556,500,500,500,500,556};
func (_bgd *ttfParser )parseCmapSubtable10 (_ccef int64 )error {if _bgd ._cd .Chars ==nil {_bgd ._cd .Chars =make (map[rune ]GID );};_bgd ._bgb .Seek (int64 (_bgd ._fcgf ["\u0063\u006d\u0061\u0070"])+_ccef ,_ge .SeekStart );var _fce ,_efb uint32 ;_cdac :=_bgd .ReadUShort ();
if _cdac < 8{_fce =uint32 (_bgd .ReadUShort ());_efb =uint32 (_bgd .ReadUShort ());}else {_bgd .ReadUShort ();_fce =_bgd .ReadULong ();_efb =_bgd .ReadULong ();};_ac .Log .Trace ("\u0070\u0061r\u0073\u0065\u0043\u006d\u0061p\u0053\u0075\u0062\u0074\u0061b\u006c\u0065\u0031\u0030\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067\u0075\u0061\u0067\u0065\u003d\u0025\u0064",_cdac ,_fce ,_efb );
if _cdac !=0{return _d .New ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063\u006d\u0061p\u0020s\u0075\u0062\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_bgfb ,_cdad :=_bgd .ReadStr (256);
if _cdad !=nil {return _cdad ;};_gbg :=[]byte (_bgfb );for _fde ,_fag :=range _gbg {_bgd ._cd .Chars [rune (_fde )]=GID (_fag );if _fag !=0{_b .Printf ("\u0009\u0030\u0078\u002502\u0078\u0020\u279e\u0020\u0030\u0078\u0025\u0030\u0032\u0078\u003d\u0025\u0063\u000a",_fde ,_fag ,rune (_fag ));
};};return nil ;};const (HelveticaName =StdFontName ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");HelveticaBoldName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061-\u0042\u006f\u006c\u0064");HelveticaObliqueName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061\u002d\u004f\u0062l\u0069\u0071\u0075\u0065");
HelveticaBoldObliqueName =StdFontName ("H\u0065\u006c\u0076\u0065ti\u0063a\u002d\u0042\u006f\u006c\u0064O\u0062\u006c\u0069\u0071\u0075\u0065"););func _dgb ()StdFont {_ggfb .Do (_eebe );_ffa :=Descriptor {Name :HelveticaObliqueName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-170,-225,1116,931},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_ffa ,_cae );};