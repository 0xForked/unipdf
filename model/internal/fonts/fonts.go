//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package fonts ;import (_ce "bytes";_ba "encoding/binary";_bg "errors";_c "fmt";_ge "github.com/unidoc/unipdf/v3/common";_d "github.com/unidoc/unipdf/v3/core";_ca "github.com/unidoc/unipdf/v3/internal/cmap";_eb "github.com/unidoc/unipdf/v3/internal/textencoding";
_cf "golang.org/x/xerrors";_edd "io";_ed "os";_a "regexp";_e "sort";_b "strings";_gf "sync";);func (_cda StdFont )Encoder ()_eb .TextEncoder {return _cda ._dc };func TtfParse (r _edd .ReadSeeker )(TtfType ,error ){_ece :=&ttfParser {_gggb :r };return _ece .Parse ()};
func _fdea ()StdFont {_dcg .Do (_cgd );_afg :=Descriptor {Name :TimesBoldName ,Family :_bc ,Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,935},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :676,XHeight :461,StemV :139,StemH :44};
return NewStdFont (_afg ,_egf );};var _ Font =StdFont {};func MakeRuneCharSafeMap (length int )*RuneCharSafeMap {return &RuneCharSafeMap {_aa :make (map[rune ]CharMetrics ,length )};};type StdFontName string ;func NewStdFontWithEncoding (desc Descriptor ,metrics *RuneCharSafeMap ,encoder _eb .TextEncoder )StdFont {var _fec rune =0xA0;
if _ ,_dg :=metrics .Read (_fec );!_dg {_feb ,_ :=metrics .Read (0x20);metrics .Write (_fec ,_feb );};return StdFont {_af :desc ,_gfb :metrics ,_dc :encoder };};type Descriptor struct{Name StdFontName ;Family string ;Weight FontWeight ;Flags uint ;BBox [4]float64 ;
ItalicAngle float64 ;Ascent float64 ;Descent float64 ;CapHeight float64 ;XHeight float64 ;StemV float64 ;StemH float64 ;};var _cag =&fontMap {_cea :make (map[StdFontName ]func ()StdFont )};const (HelveticaName =StdFontName ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");
HelveticaBoldName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061-\u0042\u006f\u006c\u0064");HelveticaObliqueName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061\u002d\u004f\u0062l\u0069\u0071\u0075\u0065");HelveticaBoldObliqueName =StdFontName ("H\u0065\u006c\u0076\u0065ti\u0063a\u002d\u0042\u006f\u006c\u0064O\u0062\u006c\u0069\u0071\u0075\u0065");
);func (_agdg StdFont )GetMetricsTable ()*RuneCharSafeMap {return _agdg ._gfb };func _eddc ()StdFont {_fdc .Do (_aac );_ebf :=Descriptor {Name :CourierBoldName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0021,BBox :[4]float64 {-113,-250,749,801},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_ebf ,_ac );};func TtfParseFile (fileStr string )(TtfType ,error ){_dga ,_fed :=_ed .Open (fileStr );if _fed !=nil {return TtfType {},_fed ;};defer _dga .Close ();return TtfParse (_dga );};func (_bccb *ttfParser )ReadSByte ()(_dfge int8 ){_ba .Read (_bccb ._gggb ,_ba .BigEndian ,&_dfge );
return _dfge ;};const (_bc ="\u0054\u0069\u006de\u0073";TimesRomanName =StdFontName ("T\u0069\u006d\u0065\u0073\u002d\u0052\u006f\u006d\u0061\u006e");TimesBoldName =StdFontName ("\u0054\u0069\u006d\u0065\u0073\u002d\u0042\u006f\u006c\u0064");TimesItalicName =StdFontName ("\u0054\u0069\u006de\u0073\u002d\u0049\u0074\u0061\u006c\u0069\u0063");
TimesBoldItalicName =StdFontName ("\u0054\u0069m\u0065\u0073\u002dB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063"););func (_ef StdFont )Descriptor ()Descriptor {return _ef ._af };var _fdc _gf .Once ;func (_ceaa *ttfParser )ReadULong ()(_fdg uint32 ){_ba .Read (_ceaa ._gggb ,_ba .BigEndian ,&_fdg );
return _fdg ;};func _gcca ()StdFont {_fdc .Do (_aac );_fb :=Descriptor {Name :CourierBoldObliqueName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0061,BBox :[4]float64 {-57,-250,869,801},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_fb ,_dce );};func (_gdg *TtfType )MakeEncoder ()(_eb .SimpleEncoder ,error ){_fbd :=make (map[_eb .CharCode ]GlyphName );for _dfcd :=_eb .CharCode (0);_dfcd <=256;_dfcd ++{_ccd :=rune (_dfcd );_ccg ,_ded :=_gdg .Chars [_ccd ];if !_ded {continue ;
};var _dbd GlyphName ;if int (_ccg )>=0&&int (_ccg )< len (_gdg .GlyphNames ){_dbd =_gdg .GlyphNames [_ccg ];}else {_gef :=rune (_ccg );if _gaa ,_fca :=_eb .RuneToGlyph (_gef );_fca {_dbd =_gaa ;};};if _dbd !=""{_fbd [_dfcd ]=_dbd ;};};if len (_fbd )==0{_ge .Log .Debug ("WA\u0052\u004eI\u004e\u0047\u003a\u0020\u005a\u0065\u0072\u006f\u0020l\u0065\u006e\u0067\u0074\u0068\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u002e\u0020\u0074\u0074\u0066=\u0025s\u0020\u0043\u0068\u0061\u0072\u0073\u003d\u005b%\u00200\u0032\u0078]",_gdg ,_gdg .Chars );
};return _eb .NewCustomSimpleTextEncoder (_fbd ,nil );};func _gcg ()StdFont {_acc .Do (_ebe );_dfae :=Descriptor {Name :HelveticaName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0020,BBox :[4]float64 {-166,-225,1000,931},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_dfae ,_efb );};var _abf =[]int16 {722,889,722,722,722,722,722,722,722,722,722,667,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,556,722,722,722,722,333,333,333,333,333,333,333,333,389,722,722,611,611,611,611,611,889,722,722,722,722,722,722,889,722,722,722,722,722,722,722,722,556,722,667,667,667,667,556,556,556,556,556,611,611,611,556,722,722,722,722,722,722,722,722,722,722,944,722,722,722,722,611,611,611,611,444,444,444,444,333,444,667,444,444,778,444,444,469,541,500,921,444,500,278,200,480,480,333,333,333,200,350,444,444,333,444,444,333,500,333,278,250,250,760,500,500,500,500,588,500,400,333,564,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,564,500,333,333,333,556,500,556,500,500,167,500,500,500,500,333,564,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,500,500,278,278,344,278,564,549,564,471,278,778,333,564,500,564,500,500,500,500,500,549,500,500,500,500,500,500,722,333,500,500,500,500,750,750,300,276,310,500,500,500,453,333,333,476,833,250,250,1000,564,564,500,444,444,408,444,444,444,333,333,333,180,333,333,453,333,333,760,333,389,389,389,389,389,500,278,500,500,278,250,500,600,278,326,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,500,722,500,500,500,500,500,444,444,444,444,500};
func (_f *RuneCharSafeMap )Length ()int {_f ._eg .RLock ();defer _f ._eg .RUnlock ();return len (_f ._aa )};func NewStdFontByName (name StdFontName )(StdFont ,bool ){_da ,_cfe :=_cag .read (name );if !_cfe {return StdFont {},false ;};return _da (),true ;
};func _aac (){const _eagc =600;_bgg =MakeRuneCharSafeMap (len (_bde ));for _ ,_dd :=range _bde {_bgg .Write (_dd ,CharMetrics {Wx :_eagc });};_ac =_bgg .Copy ();_dce =_bgg .Copy ();_abb =_bgg .Copy ();};type FontWeight int ;var _fc =&RuneCharSafeMap {_aa :map[rune ]CharMetrics {' ':{Wx :250},'!':{Wx :333},'#':{Wx :500},'%':{Wx :833},'&':{Wx :778},'(':{Wx :333},')':{Wx :333},'+':{Wx :549},',':{Wx :250},'.':{Wx :250},'/':{Wx :278},'0':{Wx :500},'1':{Wx :500},'2':{Wx :500},'3':{Wx :500},'4':{Wx :500},'5':{Wx :500},'6':{Wx :500},'7':{Wx :500},'8':{Wx :500},'9':{Wx :500},':':{Wx :278},';':{Wx :278},'<':{Wx :549},'=':{Wx :549},'>':{Wx :549},'?':{Wx :444},'[':{Wx :333},']':{Wx :333},'_':{Wx :500},'{':{Wx :480},'|':{Wx :200},'}':{Wx :480},'¬':{Wx :713},'°':{Wx :400},'±':{Wx :549},'µ':{Wx :576},'×':{Wx :549},'÷':{Wx :549},'ƒ':{Wx :500},'Α':{Wx :722},'Β':{Wx :667},'Γ':{Wx :603},'Ε':{Wx :611},'Ζ':{Wx :611},'Η':{Wx :722},'Θ':{Wx :741},'Ι':{Wx :333},'Κ':{Wx :722},'Λ':{Wx :686},'Μ':{Wx :889},'Ν':{Wx :722},'Ξ':{Wx :645},'Ο':{Wx :722},'Π':{Wx :768},'Ρ':{Wx :556},'Σ':{Wx :592},'Τ':{Wx :611},'Υ':{Wx :690},'Φ':{Wx :763},'Χ':{Wx :722},'Ψ':{Wx :795},'α':{Wx :631},'β':{Wx :549},'γ':{Wx :411},'δ':{Wx :494},'ε':{Wx :439},'ζ':{Wx :494},'η':{Wx :603},'θ':{Wx :521},'ι':{Wx :329},'κ':{Wx :549},'λ':{Wx :549},'ν':{Wx :521},'ξ':{Wx :493},'ο':{Wx :549},'π':{Wx :549},'ρ':{Wx :549},'ς':{Wx :439},'σ':{Wx :603},'τ':{Wx :439},'υ':{Wx :576},'φ':{Wx :521},'χ':{Wx :549},'ψ':{Wx :686},'ω':{Wx :686},'ϑ':{Wx :631},'ϒ':{Wx :620},'ϕ':{Wx :603},'ϖ':{Wx :713},'•':{Wx :460},'…':{Wx :1000},'′':{Wx :247},'″':{Wx :411},'⁄':{Wx :167},'€':{Wx :750},'ℑ':{Wx :686},'℘':{Wx :987},'ℜ':{Wx :795},'Ω':{Wx :768},'ℵ':{Wx :823},'←':{Wx :987},'↑':{Wx :603},'→':{Wx :987},'↓':{Wx :603},'↔':{Wx :1042},'↵':{Wx :658},'⇐':{Wx :987},'⇑':{Wx :603},'⇒':{Wx :987},'⇓':{Wx :603},'⇔':{Wx :1042},'∀':{Wx :713},'∂':{Wx :494},'∃':{Wx :549},'∅':{Wx :823},'∆':{Wx :612},'∇':{Wx :713},'∈':{Wx :713},'∉':{Wx :713},'∋':{Wx :439},'∏':{Wx :823},'∑':{Wx :713},'−':{Wx :549},'∗':{Wx :500},'√':{Wx :549},'∝':{Wx :713},'∞':{Wx :713},'∠':{Wx :768},'∧':{Wx :603},'∨':{Wx :603},'∩':{Wx :768},'∪':{Wx :768},'∫':{Wx :274},'∴':{Wx :863},'∼':{Wx :549},'≅':{Wx :549},'≈':{Wx :549},'≠':{Wx :549},'≡':{Wx :549},'≤':{Wx :549},'≥':{Wx :549},'⊂':{Wx :713},'⊃':{Wx :713},'⊄':{Wx :713},'⊆':{Wx :713},'⊇':{Wx :713},'⊕':{Wx :768},'⊗':{Wx :768},'⊥':{Wx :658},'⋅':{Wx :250},'⌠':{Wx :686},'⌡':{Wx :686},'〈':{Wx :329},'〉':{Wx :329},'◊':{Wx :494},'♠':{Wx :753},'♣':{Wx :753},'♥':{Wx :753},'♦':{Wx :753},'\uf6d9':{Wx :790},'\uf6da':{Wx :790},'\uf6db':{Wx :890},'\uf8e5':{Wx :500},'\uf8e6':{Wx :603},'\uf8e7':{Wx :1000},'\uf8e8':{Wx :790},'\uf8e9':{Wx :790},'\uf8ea':{Wx :786},'\uf8eb':{Wx :384},'\uf8ec':{Wx :384},'\uf8ed':{Wx :384},'\uf8ee':{Wx :384},'\uf8ef':{Wx :384},'\uf8f0':{Wx :384},'\uf8f1':{Wx :494},'\uf8f2':{Wx :494},'\uf8f3':{Wx :494},'\uf8f4':{Wx :494},'\uf8f5':{Wx :686},'\uf8f6':{Wx :384},'\uf8f7':{Wx :384},'\uf8f8':{Wx :384},'\uf8f9':{Wx :384},'\uf8fa':{Wx :384},'\uf8fb':{Wx :384},'\uf8fc':{Wx :494},'\uf8fd':{Wx :494},'\uf8fe':{Wx :494},'\uf8ff':{Wx :790}}};
func _deb (_cgf map[string ]uint32 )string {var _egeg []string ;for _bbfb :=range _cgf {_egeg =append (_egeg ,_bbfb );};_e .Slice (_egeg ,func (_eddca ,_agcd int )bool {return _cgf [_egeg [_eddca ]]< _cgf [_egeg [_agcd ]]});_acee :=[]string {_c .Sprintf ("\u0054\u0072\u0075\u0065Ty\u0070\u0065\u0020\u0074\u0061\u0062\u006c\u0065\u0073\u003a\u0020\u0025\u0064",len (_cgf ))};
for _ ,_gfe :=range _egeg {_acee =append (_acee ,_c .Sprintf ("\u0009%\u0071\u0020\u0025\u0035\u0064",_gfe ,_cgf [_gfe ]));};return _b .Join (_acee ,"\u000a");};var _efb *RuneCharSafeMap ;func _cgd (){_ada =MakeRuneCharSafeMap (len (_bde ));_egf =MakeRuneCharSafeMap (len (_bde ));
_ebb =MakeRuneCharSafeMap (len (_bde ));_cad =MakeRuneCharSafeMap (len (_bde ));for _gdc ,_bf :=range _bde {_ada .Write (_bf ,CharMetrics {Wx :float64 (_abf [_gdc ])});_egf .Write (_bf ,CharMetrics {Wx :float64 (_agc [_gdc ])});_ebb .Write (_bf ,CharMetrics {Wx :float64 (_aad [_gdc ])});
_cad .Write (_bf ,CharMetrics {Wx :float64 (_bdd [_gdc ])});};};func (_cfcf *ttfParser )ParsePost ()error {if _fcf :=_cfcf .Seek ("\u0070\u006f\u0073\u0074");_fcf !=nil {return _fcf ;};_bbd :=_cfcf .Read32Fixed ();_cfcf ._fgg .ItalicAngle =_cfcf .Read32Fixed ();
_cfcf ._fgg .UnderlinePosition =_cfcf .ReadShort ();_cfcf ._fgg .UnderlineThickness =_cfcf .ReadShort ();_cfcf ._fgg .IsFixedPitch =_cfcf .ReadULong ()!=0;_cfcf .ReadULong ();_cfcf .ReadULong ();_cfcf .ReadULong ();_cfcf .ReadULong ();_ge .Log .Trace ("\u0050a\u0072\u0073\u0065\u0050\u006f\u0073\u0074\u003a\u0020\u0066\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065\u003d\u0025\u0066",_bbd );
switch _bbd {case 1.0:_cfcf ._fgg .GlyphNames =_gaad ;case 2.0:_cac :=int (_cfcf .ReadUShort ());_cabe :=make ([]int ,_cac );_cfcf ._fgg .GlyphNames =make ([]GlyphName ,_cac );_adec :=-1;for _fdeb :=0;_fdeb < _cac ;_fdeb ++{_ebbg :=int (_cfcf .ReadUShort ());
_cabe [_fdeb ]=_ebbg ;if _ebbg <=0x7fff&&_ebbg > _adec {_adec =_ebbg ;};};var _daff []GlyphName ;if _adec >=len (_gaad ){_daff =make ([]GlyphName ,_adec -len (_gaad )+1);for _feg :=0;_feg < _adec -len (_gaad )+1;_feg ++{_bdba :=int (_cfcf .readByte ());
_fcg ,_fade :=_cfcf .ReadStr (_bdba );if _fade !=nil {return _fade ;};_daff [_feg ]=GlyphName (_fcg );};};for _cbf :=0;_cbf < _cac ;_cbf ++{_aaeg :=_cabe [_cbf ];if _aaeg < len (_gaad ){_cfcf ._fgg .GlyphNames [_cbf ]=_gaad [_aaeg ];}else if _aaeg >=len (_gaad )&&_aaeg <=32767{_cfcf ._fgg .GlyphNames [_cbf ]=_daff [_aaeg -len (_gaad )];
}else {_cfcf ._fgg .GlyphNames [_cbf ]="\u002e\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064";};};case 2.5:_bgd :=make ([]int ,_cfcf ._aae );for _eaf :=0;_eaf < len (_bgd );_eaf ++{_dbg :=int (_cfcf .ReadSByte ());_bgd [_eaf ]=_eaf +1+_dbg ;};_cfcf ._fgg .GlyphNames =make ([]GlyphName ,len (_bgd ));
for _ebbc :=0;_ebbc < len (_cfcf ._fgg .GlyphNames );_ebbc ++{_ggf :=_gaad [_bgd [_ebbc ]];_cfcf ._fgg .GlyphNames [_ebbc ]=_ggf ;};case 3.0:_ge .Log .Debug ("\u004e\u006f\u0020\u0050\u006f\u0073t\u0053\u0063\u0072i\u0070\u0074\u0020n\u0061\u006d\u0065\u0020\u0069\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020is\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0066\u006f\u006e\u0074\u002e");
default:_ge .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020f\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065=\u0025\u0066",_bbd );};return nil ;};func _bdg ()StdFont {_gfcc :=_eb .NewSymbolEncoder ();
_ebfd :=Descriptor {Name :SymbolName ,Family :string (SymbolName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-180,-293,1090,1010},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :85,StemH :92};return NewStdFontWithEncoding (_ebfd ,_fc ,_gfcc );
};func init (){RegisterStdFont (CourierName ,_dbe ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u0043\u006f\u0075\u0072\u0069e\u0072\u004e\u0065\u0077","\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077");RegisterStdFont (CourierBoldName ,_eddc ,"\u0043o\u0075r\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0042\u006f\u006c\u0064");
RegisterStdFont (CourierObliqueName ,_gfcd ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0049t\u0061\u006c\u0069\u0063");RegisterStdFont (CourierBoldObliqueName ,_gcca ,"C\u006f\u0075\u0072\u0069er\u004ee\u0077\u002c\u0042\u006f\u006cd\u0049\u0074\u0061\u006c\u0069\u0063");
};var _abb *RuneCharSafeMap ;func (_ade *ttfParser )Parse ()(TtfType ,error ){_cge ,_eged :=_ade .ReadStr (4);if _eged !=nil {return TtfType {},_eged ;};if _cge =="\u004f\u0054\u0054\u004f"{return TtfType {},_cf .Errorf ("\u0066\u006f\u006e\u0074s\u0020\u0062\u0061\u0073\u0065\u0064\u0020\u006f\u006e \u0050\u006f\u0073\u0074\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065s\u0020\u0061\u0072\u0065\u0020n\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_d .ErrNotSupported );
};if _cge !="\u0000\u0001\u0000\u0000"&&_cge !="\u0074\u0072\u0075\u0065"{_ge .Log .Debug ("\u0055n\u0072\u0065c\u006f\u0067\u006ei\u007a\u0065\u0064\u0020\u0054\u0072\u0075e\u0054\u0079\u0070\u0065\u0020\u0066i\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u002e\u0020v\u0065\u0072\u0073\u0069\u006f\u006e\u003d\u0025\u0071",_cge );
};_ace :=int (_ade .ReadUShort ());_ade .Skip (3*2);_ade ._edde =make (map[string ]uint32 );var _cfg string ;for _bggd :=0;_bggd < _ace ;_bggd ++{_cfg ,_eged =_ade .ReadStr (4);if _eged !=nil {return TtfType {},_eged ;};_ade .Skip (4);_deg :=_ade .ReadULong ();
_ade .Skip (4);_ade ._edde [_cfg ]=_deg ;};_ge .Log .Trace (_deb (_ade ._edde ));if _eged =_ade .ParseComponents ();_eged !=nil {return TtfType {},_eged ;};return _ade ._fgg ,nil ;};var _bde =[]rune {'A','Æ','Á','Ă','Â','Ä','À','Ā','Ą','Å','Ã','B','C','Ć','Č','Ç','D','Ď','Đ','∆','E','É','Ě','Ê','Ë','Ė','È','Ē','Ę','Ð','€','F','G','Ğ','Ģ','H','I','Í','Î','Ï','İ','Ì','Ī','Į','J','K','Ķ','L','Ĺ','Ľ','Ļ','Ł','M','N','Ń','Ň','Ņ','Ñ','O','Œ','Ó','Ô','Ö','Ò','Ő','Ō','Ø','Õ','P','Q','R','Ŕ','Ř','Ŗ','S','Ś','Š','Ş','Ș','T','Ť','Ţ','Þ','U','Ú','Û','Ü','Ù','Ű','Ū','Ų','Ů','V','W','X','Y','Ý','Ÿ','Z','Ź','Ž','Ż','a','á','ă','â','´','ä','æ','à','ā','&','ą','å','^','~','*','@','ã','b','\\','|','{','}','[',']','˘','¦','•','c','ć','ˇ','č','ç','¸','¢','ˆ',':',',','\uf6c3','©','¤','d','†','‡','ď','đ','°','¨','÷','$','˙','ı','e','é','ě','ê','ë','ė','è','8','…','ē','—','–','ę','=','ð','!','¡','f','ﬁ','5','ﬂ','ƒ','4','⁄','g','ğ','ģ','ß','`','>','≥','«','»','‹','›','h','˝','-','i','í','î','ï','ì','ī','į','j','k','ķ','l','ĺ','ľ','ļ','<','≤','¬','◊','ł','m','¯','−','µ','×','n','ń','ň','ņ','9','≠','ñ','#','o','ó','ô','ö','œ','˛','ò','ő','ō','1','½','¼','¹','ª','º','ø','õ','p','¶','(',')','∂','%','.','·','‰','+','±','q','?','¿','"','„','“','”','‘','’','‚','\'','r','ŕ','√','ř','ŗ','®','˚','s','ś','š','ş','ș','§',';','7','6','/',' ','£','∑','t','ť','ţ','þ','3','¾','³','˜','™','2','²','u','ú','û','ü','ù','ű','ū','_','ų','ů','v','w','x','y','ý','ÿ','¥','z','ź','ž','ż','0'};
func (_cegc *ttfParser )readByte ()(_cfff uint8 ){_ba .Read (_cegc ._gggb ,_ba .BigEndian ,&_cfff );return _cfff ;};var _dcg _gf .Once ;func NewFontFile2FromPdfObject (obj _d .PdfObject )(TtfType ,error ){obj =_d .TraceToDirectObject (obj );_ege ,_adc :=obj .(*_d .PdfObjectStream );
if !_adc {_ge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u0061\u0020\u0073\u0074\u0072e\u0061\u006d \u0028\u0025\u0054\u0029",obj );return TtfType {},_d .ErrTypeError ;
};_ead ,_gec :=_d .DecodeStream (_ege );if _gec !=nil {return TtfType {},_gec ;};_bgf :=ttfParser {_gggb :_ce .NewReader (_ead )};return _bgf .Parse ();};const (CourierName =StdFontName ("\u0043o\u0075\u0072\u0069\u0065\u0072");CourierBoldName =StdFontName ("\u0043\u006f\u0075r\u0069\u0065\u0072\u002d\u0042\u006f\u006c\u0064");
CourierObliqueName =StdFontName ("\u0043o\u0075r\u0069\u0065\u0072\u002d\u004f\u0062\u006c\u0069\u0071\u0075\u0065");CourierBoldObliqueName =StdFontName ("\u0043\u006f\u0075\u0072ie\u0072\u002d\u0042\u006f\u006c\u0064\u004f\u0062\u006c\u0069\u0071\u0075\u0065");
);func (_df *RuneCharSafeMap )Copy ()*RuneCharSafeMap {_gd :=MakeRuneCharSafeMap (_df .Length ());_df .Range (func (_bb rune ,_ga CharMetrics )(_cd bool ){_gd ._aa [_bb ]=_ga ;return false });return _gd ;};type GID =_eb .GID ;func (_bfg *TtfType )MakeToUnicode ()*_ca .CMap {_ggb :=make (map[_ca .CharCode ]rune );
if len (_bfg .GlyphNames )==0{return _ca .NewToUnicodeCMap (_ggb );};for _aed ,_beb :=range _bfg .Chars {_ec :=_ca .CharCode (_aed );_ccf :=_bfg .GlyphNames [_beb ];_fef ,_fgf :=_eb .GlyphToRune (_ccf );if !_fgf {_ge .Log .Debug ("\u004e\u006f \u0072\u0075\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065\u003d\u0030\u0078\u0025\u0030\u0034\u0078\u0020\u0067\u006c\u0079\u0070h=\u0025\u0071",_aed ,_ccf );
_fef =_eb .MissingCodeRune ;};_ggb [_ec ]=_fef ;};return _ca .NewToUnicodeCMap (_ggb );};func (_gfgc *ttfParser )Skip (n int ){_gfgc ._gggb .Seek (int64 (n ),_edd .SeekCurrent )};func init (){RegisterStdFont (HelveticaName ,_gcg ,"\u0041\u0072\u0069a\u006c");
RegisterStdFont (HelveticaBoldName ,_efe ,"\u0041\u0072\u0069\u0061\u006c\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (HelveticaObliqueName ,_ggg ,"\u0041\u0072\u0069a\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063");RegisterStdFont (HelveticaBoldObliqueName ,_fgd ,"\u0041\u0072i\u0061\u006c\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
};type RuneCharSafeMap struct{_aa map[rune ]CharMetrics ;_eg _gf .RWMutex ;};func (_fe *fontMap )read (_cead StdFontName )(func ()StdFont ,bool ){_fe .Lock ();defer _fe .Unlock ();_ae ,_fd :=_fe ._cea [_cead ];return _ae ,_fd ;};func RegisterStdFont (name StdFontName ,fnc func ()StdFont ,aliases ...StdFontName ){if _ ,_fg :=_cag .read (name );
_fg {panic ("\u0066o\u006e\u0074\u0020\u0061l\u0072\u0065\u0061\u0064\u0079 \u0072e\u0067i\u0073\u0074\u0065\u0072\u0065\u0064\u003a "+string (name ));};_cag .write (name ,fnc );for _ ,_gaf :=range aliases {RegisterStdFont (_gaf ,fnc );};};func _ccb ()StdFont {_dcg .Do (_cgd );
_fda :=Descriptor {Name :TimesBoldItalicName ,Family :_bc ,Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-200,-218,996,921},ItalicAngle :-15,Ascent :683,Descent :-217,CapHeight :669,XHeight :462,StemV :121,StemH :42};return NewStdFont (_fda ,_ebb );
};func (_gfa *ttfParser )ParseName ()error {if _fada :=_gfa .Seek ("\u006e\u0061\u006d\u0065");_fada !=nil {return _fada ;};_geb ,_ :=_gfa ._gggb .Seek (0,_edd .SeekCurrent );_gfa ._fgg .PostScriptName ="";_gfa .Skip (2);_edec :=_gfa .ReadUShort ();_cgdb :=_gfa .ReadUShort ();
for _bgcb :=uint16 (0);_bgcb < _edec &&_gfa ._fgg .PostScriptName =="";_bgcb ++{_gfa .Skip (3*2);_feed :=_gfa .ReadUShort ();_dbef :=_gfa .ReadUShort ();_bdf :=_gfa .ReadUShort ();if _feed ==6{_gfa ._gggb .Seek (_geb +int64 (_cgdb )+int64 (_bdf ),_edd .SeekStart );
_cbe ,_afd :=_gfa .ReadStr (int (_dbef ));if _afd !=nil {return _afd ;};_cbe =_b .Replace (_cbe ,"\u0000","",-1);_efd ,_afd :=_a .Compile ("\u005b\u0028\u0029\u007b\u007d\u003c\u003e\u0020\u002f%\u005b\u005c\u005d\u005d");if _afd !=nil {return _afd ;};
_gfa ._fgg .PostScriptName =_efd .ReplaceAllString (_cbe ,"");};};if _gfa ._fgg .PostScriptName ==""{_ge .Log .Debug ("\u0050a\u0072\u0073e\u004e\u0061\u006de\u003a\u0020\u0054\u0068\u0065\u0020\u006ea\u006d\u0065\u0020\u0050\u006f\u0073t\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u0077\u0061\u0073\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e");
};return nil ;};func _ad ()StdFont {_dcg .Do (_cgd );_cec :=Descriptor {Name :TimesItalicName ,Family :_bc ,Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-169,-217,1010,883},ItalicAngle :-15.5,Ascent :683,Descent :-217,CapHeight :653,XHeight :441,StemV :76,StemH :32};
return NewStdFont (_cec ,_cad );};var _dce *RuneCharSafeMap ;var _gdd =[]int16 {667,1000,667,667,667,667,667,667,667,667,667,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,500,667,667,556,556,556,556,556,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,667,556,556,469,584,389,1015,556,556,278,260,334,334,278,278,333,260,350,500,500,333,500,500,333,556,333,278,278,250,737,556,556,556,556,643,556,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,556,278,333,278,500,556,500,556,556,167,556,556,556,611,333,584,549,556,556,333,333,556,333,333,222,278,278,278,278,278,222,222,500,500,222,222,299,222,584,549,584,471,222,833,333,584,556,584,556,556,556,556,556,549,556,556,556,556,556,556,944,333,556,556,556,556,834,834,333,370,365,611,556,556,537,333,333,476,889,278,278,1000,584,584,556,556,611,355,333,333,333,222,222,222,191,333,333,453,333,333,737,333,500,500,500,500,500,556,278,556,556,278,278,556,600,278,317,278,556,556,834,333,333,1000,556,333,556,556,556,556,556,556,556,556,556,556,500,722,500,500,500,500,556,500,500,500,500,556};
func _efe ()StdFont {_acc .Do (_ebe );_efg :=Descriptor {Name :HelveticaBoldName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-170,-228,1003,962},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_efg ,_abc );};var _bdd =[]int16 {611,889,611,611,611,611,611,611,611,611,611,611,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,611,722,722,722,722,333,333,333,333,333,333,333,333,444,667,667,556,556,611,556,556,833,667,667,667,667,667,722,944,722,722,722,722,722,722,722,722,611,722,611,611,611,611,500,500,500,500,500,556,556,556,611,722,722,722,722,722,722,722,722,722,611,833,611,556,556,556,556,556,556,556,500,500,500,500,333,500,667,500,500,778,500,500,422,541,500,920,500,500,278,275,400,400,389,389,333,275,350,444,444,333,444,444,333,500,333,333,250,250,760,500,500,500,500,544,500,400,333,675,500,333,278,444,444,444,444,444,444,444,500,889,444,889,500,444,675,500,333,389,278,500,500,500,500,500,167,500,500,500,500,333,675,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,444,444,278,278,300,278,675,549,675,471,278,722,333,675,500,675,500,500,500,500,500,549,500,500,500,500,500,500,667,333,500,500,500,500,750,750,300,276,310,500,500,500,523,333,333,476,833,250,250,1000,675,675,500,500,500,420,556,556,556,333,333,333,214,389,389,453,389,389,760,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,300,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,444,667,444,444,444,444,500,389,389,389,389,500};
func (_gdf *ttfParser )Read32Fixed ()float64 {_adaf :=float64 (_gdf .ReadShort ());_dgg :=float64 (_gdf .ReadUShort ())/65536.0;return _adaf +_dgg ;};func (_fcgf *ttfParser )ReadUShort ()(_gfga uint16 ){_ba .Read (_fcgf ._gggb ,_ba .BigEndian ,&_gfga );
return _gfga ;};func (_gad *RuneCharSafeMap )Write (b rune ,r CharMetrics ){_gad ._eg .Lock ();defer _gad ._eg .Unlock ();_gad ._aa [b ]=r ;};func init (){RegisterStdFont (SymbolName ,_bdg ,"\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063","S\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064","\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (ZapfDingbatsName ,_bda );};func (_fad *ttfParser )ParseMaxp ()error {if _adae :=_fad .Seek ("\u006d\u0061\u0078\u0070");_adae !=nil {return _adae ;};_fad .Skip (4);_fad ._aae =_fad .ReadUShort ();return nil ;};var _efbc =&RuneCharSafeMap {_aa :map[rune ]CharMetrics {' ':{Wx :278},'→':{Wx :838},'↔':{Wx :1016},'↕':{Wx :458},'①':{Wx :788},'②':{Wx :788},'③':{Wx :788},'④':{Wx :788},'⑤':{Wx :788},'⑥':{Wx :788},'⑦':{Wx :788},'⑧':{Wx :788},'⑨':{Wx :788},'⑩':{Wx :788},'■':{Wx :761},'▲':{Wx :892},'▼':{Wx :892},'◆':{Wx :788},'●':{Wx :791},'◗':{Wx :438},'★':{Wx :816},'☎':{Wx :719},'☛':{Wx :960},'☞':{Wx :939},'♠':{Wx :626},'♣':{Wx :776},'♥':{Wx :694},'♦':{Wx :595},'✁':{Wx :974},'✂':{Wx :961},'✃':{Wx :974},'✄':{Wx :980},'✆':{Wx :789},'✇':{Wx :790},'✈':{Wx :791},'✉':{Wx :690},'✌':{Wx :549},'✍':{Wx :855},'✎':{Wx :911},'✏':{Wx :933},'✐':{Wx :911},'✑':{Wx :945},'✒':{Wx :974},'✓':{Wx :755},'✔':{Wx :846},'✕':{Wx :762},'✖':{Wx :761},'✗':{Wx :571},'✘':{Wx :677},'✙':{Wx :763},'✚':{Wx :760},'✛':{Wx :759},'✜':{Wx :754},'✝':{Wx :494},'✞':{Wx :552},'✟':{Wx :537},'✠':{Wx :577},'✡':{Wx :692},'✢':{Wx :786},'✣':{Wx :788},'✤':{Wx :788},'✥':{Wx :790},'✦':{Wx :793},'✧':{Wx :794},'✩':{Wx :823},'✪':{Wx :789},'✫':{Wx :841},'✬':{Wx :823},'✭':{Wx :833},'✮':{Wx :816},'✯':{Wx :831},'✰':{Wx :923},'✱':{Wx :744},'✲':{Wx :723},'✳':{Wx :749},'✴':{Wx :790},'✵':{Wx :792},'✶':{Wx :695},'✷':{Wx :776},'✸':{Wx :768},'✹':{Wx :792},'✺':{Wx :759},'✻':{Wx :707},'✼':{Wx :708},'✽':{Wx :682},'✾':{Wx :701},'✿':{Wx :826},'❀':{Wx :815},'❁':{Wx :789},'❂':{Wx :789},'❃':{Wx :707},'❄':{Wx :687},'❅':{Wx :696},'❆':{Wx :689},'❇':{Wx :786},'❈':{Wx :787},'❉':{Wx :713},'❊':{Wx :791},'❋':{Wx :785},'❍':{Wx :873},'❏':{Wx :762},'❐':{Wx :762},'❑':{Wx :759},'❒':{Wx :759},'❖':{Wx :784},'❘':{Wx :138},'❙':{Wx :277},'❚':{Wx :415},'❛':{Wx :392},'❜':{Wx :392},'❝':{Wx :668},'❞':{Wx :668},'❡':{Wx :732},'❢':{Wx :544},'❣':{Wx :544},'❤':{Wx :910},'❥':{Wx :667},'❦':{Wx :760},'❧':{Wx :760},'❶':{Wx :788},'❷':{Wx :788},'❸':{Wx :788},'❹':{Wx :788},'❺':{Wx :788},'❻':{Wx :788},'❼':{Wx :788},'❽':{Wx :788},'❾':{Wx :788},'❿':{Wx :788},'➀':{Wx :788},'➁':{Wx :788},'➂':{Wx :788},'➃':{Wx :788},'➄':{Wx :788},'➅':{Wx :788},'➆':{Wx :788},'➇':{Wx :788},'➈':{Wx :788},'➉':{Wx :788},'➊':{Wx :788},'➋':{Wx :788},'➌':{Wx :788},'➍':{Wx :788},'➎':{Wx :788},'➏':{Wx :788},'➐':{Wx :788},'➑':{Wx :788},'➒':{Wx :788},'➓':{Wx :788},'➔':{Wx :894},'➘':{Wx :748},'➙':{Wx :924},'➚':{Wx :748},'➛':{Wx :918},'➜':{Wx :927},'➝':{Wx :928},'➞':{Wx :928},'➟':{Wx :834},'➠':{Wx :873},'➡':{Wx :828},'➢':{Wx :924},'➣':{Wx :924},'➤':{Wx :917},'➥':{Wx :930},'➦':{Wx :931},'➧':{Wx :463},'➨':{Wx :883},'➩':{Wx :836},'➪':{Wx :836},'➫':{Wx :867},'➬':{Wx :867},'➭':{Wx :696},'➮':{Wx :696},'➯':{Wx :874},'➱':{Wx :874},'➲':{Wx :760},'➳':{Wx :946},'➴':{Wx :771},'➵':{Wx :865},'➶':{Wx :771},'➷':{Wx :888},'➸':{Wx :967},'➹':{Wx :888},'➺':{Wx :831},'➻':{Wx :873},'➼':{Wx :927},'➽':{Wx :970},'➾':{Wx :918},'\uf8d7':{Wx :390},'\uf8d8':{Wx :390},'\uf8d9':{Wx :317},'\uf8da':{Wx :317},'\uf8db':{Wx :276},'\uf8dc':{Wx :276},'\uf8dd':{Wx :509},'\uf8de':{Wx :509},'\uf8df':{Wx :410},'\uf8e0':{Wx :410},'\uf8e1':{Wx :234},'\uf8e2':{Wx :234},'\uf8e3':{Wx :334},'\uf8e4':{Wx :334}}};
type ttfParser struct{_fgg TtfType ;_gggb _edd .ReadSeeker ;_edde map[string ]uint32 ;_bdab uint16 ;_aae uint16 ;};type Font interface{Encoder ()_eb .TextEncoder ;GetRuneMetrics (_ab rune )(CharMetrics ,bool );};func (_bcc *ttfParser )parseCmapVersion (_cddb int64 )error {_ge .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006da\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a \u006f\u0066\u0066s\u0065t\u003d\u0025\u0064",_cddb );
if _bcc ._fgg .Chars ==nil {_bcc ._fgg .Chars =make (map[rune ]GID );};_bcc ._gggb .Seek (int64 (_bcc ._edde ["\u0063\u006d\u0061\u0070"])+_cddb ,_edd .SeekStart );var _afgc ,_fea uint32 ;_cgc :=_bcc .ReadUShort ();if _cgc < 8{_afgc =uint32 (_bcc .ReadUShort ());
_fea =uint32 (_bcc .ReadUShort ());}else {_bcc .ReadUShort ();_afgc =_bcc .ReadULong ();_fea =_bcc .ReadULong ();};_ge .Log .Debug ("\u0070\u0061\u0072\u0073\u0065\u0043m\u0061\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064 \u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067u\u0061g\u0065\u003d\u0025\u0064",_cgc ,_afgc ,_fea );
switch _cgc {case 0:return _bcc .parseCmapFormat0 ();case 6:return _bcc .parseCmapFormat6 ();case 12:return _bcc .parseCmapFormat12 ();default:_ge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063m\u0061\u0070\u0020\u0066\u006f\u0072\u006da\u0074\u003d\u0025\u0064",_cgc );
return nil ;};};func init (){RegisterStdFont (TimesRomanName ,_fac ,"\u0054\u0069\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e","\u0054\u0069\u006de\u0073");RegisterStdFont (TimesBoldName ,_fdea ,"\u0054i\u006de\u0073\u004e\u0065\u0077\u0052o\u006d\u0061n\u002c\u0042\u006f\u006c\u0064","\u0054\u0069\u006d\u0065\u0073\u002c\u0042\u006f\u006c\u0064");
RegisterStdFont (TimesItalicName ,_ad ,"T\u0069m\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006da\u006e\u002c\u0049\u0074al\u0069\u0063","\u0054\u0069\u006de\u0073\u002c\u0049\u0074\u0061\u006c\u0069\u0063");RegisterStdFont (TimesBoldItalicName ,_ccb ,"\u0054i\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e,\u0042\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063","\u0054\u0069m\u0065\u0073\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
};func (_fgdd *TtfType )NewEncoder ()_eb .TextEncoder {return _eb .NewTrueTypeFontEncoder (_fgdd .Chars )};func (_agab *ttfParser )ParseHmtx ()error {if _gfg :=_agab .Seek ("\u0068\u006d\u0074\u0078");_gfg !=nil {return _gfg ;};_agab ._fgg .Widths =make ([]uint16 ,0,8);
for _fbb :=uint16 (0);_fbb < _agab ._bdab ;_fbb ++{_agab ._fgg .Widths =append (_agab ._fgg .Widths ,_agab .ReadUShort ());_agab .Skip (2);};if _agab ._bdab < _agab ._aae &&_agab ._bdab > 0{_fdae :=_agab ._fgg .Widths [_agab ._bdab -1];for _dbeg :=_agab ._bdab ;
_dbeg < _agab ._aae ;_dbeg ++{_agab ._fgg .Widths =append (_agab ._fgg .Widths ,_fdae );};};return nil ;};var _cad *RuneCharSafeMap ;var _ac *RuneCharSafeMap ;func (_afc *ttfParser )parseCmapFormat0 ()error {_ebef ,_deda :=_afc .ReadStr (256);if _deda !=nil {return _deda ;
};_cff :=[]byte (_ebef );_ge .Log .Trace ("\u0070a\u0072\u0073e\u0043\u006d\u0061p\u0046\u006f\u0072\u006d\u0061\u0074\u0030:\u0020\u0025\u0073\u000a\u0064\u0061t\u0061\u0053\u0074\u0072\u003d\u0025\u002b\u0071\u000a\u0064\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d",_afc ._fgg .String (),_ebef ,_cff );
for _dad ,_cfb :=range _cff {_afc ._fgg .Chars [rune (_dad )]=GID (_cfb );};return nil ;};func _gfcd ()StdFont {_fdc .Do (_aac );_cefb :=Descriptor {Name :CourierObliqueName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0061,BBox :[4]float64 {-27,-250,849,805},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_cefb ,_abb );};func (_gcga *ttfParser )parseCmapFormat12 ()error {_cba :=_gcga .ReadULong ();_ge .Log .Trace ("\u0070\u0061\u0072se\u0043\u006d\u0061\u0070\u0046\u006f\u0072\u006d\u0061t\u00312\u003a \u0025s\u0020\u006e\u0075\u006d\u0047\u0072\u006f\u0075\u0070\u0073\u003d\u0025\u0064",_gcga ._fgg .String (),_cba );
for _agee :=uint32 (0);_agee < _cba ;_agee ++{_gbc :=_gcga .ReadULong ();_aeg :=_gcga .ReadULong ();_fff :=_gcga .ReadULong ();if _gbc > 0x0010FFFF||(0xD800<=_gbc &&_gbc <=0xDFFF){return _bg .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");
};if _aeg < _gbc ||_aeg > 0x0010FFFF||(0xD800<=_aeg &&_aeg <=0xDFFF){return _bg .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");};for _egbca :=_gbc ;_egbca <=_aeg ;
_egbca ++{if _egbca > 0x10FFFF{_ge .Log .Debug ("\u0046\u006fr\u006d\u0061\u0074\u0020\u0031\u0032\u0020\u0063\u006d\u0061\u0070\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0063\u0068\u0061\u0072\u0061\u0063\u0074\u0065\u0072\u0020\u0062\u0065\u0079\u006f\u006e\u0064\u0020\u0055\u0043\u0053\u002d\u0034");
};_gcga ._fgg .Chars [rune (_egbca )]=GID (_fff );_fff ++;};};return nil ;};func _ggg ()StdFont {_acc .Do (_ebe );_gee :=Descriptor {Name :HelveticaObliqueName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-170,-225,1116,931},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_gee ,_edf );};type GlyphName =_eb .GlyphName ;type CharMetrics struct{Wx float64 ;Wy float64 ;};func (_ebbff *ttfParser )ParseCmap ()error {var _cab int64 ;if _bec :=_ebbff .Seek ("\u0063\u006d\u0061\u0070");_bec !=nil {return _bec ;
};_ge .Log .Trace ("\u0050a\u0072\u0073\u0065\u0043\u006d\u0061p");_ebbff .ReadUShort ();_dge :=int (_ebbff .ReadUShort ());_cdd :=int64 (0);_egg :=int64 (0);_gea :=int64 (0);for _efgg :=0;_efgg < _dge ;_efgg ++{_bfgc :=_ebbff .ReadUShort ();_add :=_ebbff .ReadUShort ();
_cab =int64 (_ebbff .ReadULong ());if _bfgc ==3&&_add ==1{_egg =_cab ;}else if _bfgc ==3&&_add ==10{_gea =_cab ;}else if _bfgc ==1&&_add ==0{_cdd =_cab ;};};if _cdd !=0{if _bcd :=_ebbff .parseCmapVersion (_cdd );_bcd !=nil {return _bcd ;};};if _egg !=0{if _fbbf :=_ebbff .parseCmapSubtable31 (_egg );
_fbbf !=nil {return _fbbf ;};};if _gea !=0{if _dab :=_ebbff .parseCmapVersion (_gea );_dab !=nil {return _dab ;};};if _egg ==0&&_cdd ==0&&_gea ==0{_ge .Log .Debug ("\u0074\u0074\u0066P\u0061\u0072\u0073\u0065\u0072\u002e\u0050\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u002e\u0020\u004e\u006f\u0020\u0033\u0031\u002c\u0020\u0031\u0030\u002c\u0020\u00331\u0030\u0020\u0074\u0061\u0062\u006c\u0065\u002e");
};return nil ;};var _abc *RuneCharSafeMap ;func (_agae *ttfParser )parseCmapSubtable10 (_ceae int64 )error {if _agae ._fgg .Chars ==nil {_agae ._fgg .Chars =make (map[rune ]GID );};_agae ._gggb .Seek (int64 (_agae ._edde ["\u0063\u006d\u0061\u0070"])+_ceae ,_edd .SeekStart );
var _abg ,_gae uint32 ;_ddc :=_agae .ReadUShort ();if _ddc < 8{_abg =uint32 (_agae .ReadUShort ());_gae =uint32 (_agae .ReadUShort ());}else {_agae .ReadUShort ();_abg =_agae .ReadULong ();_gae =_agae .ReadULong ();};_ge .Log .Trace ("\u0070\u0061r\u0073\u0065\u0043\u006d\u0061p\u0053\u0075\u0062\u0074\u0061b\u006c\u0065\u0031\u0030\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067\u0075\u0061\u0067\u0065\u003d\u0025\u0064",_ddc ,_abg ,_gae );
if _ddc !=0{return _bg .New ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063\u006d\u0061p\u0020s\u0075\u0062\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_eccf ,_bagc :=_agae .ReadStr (256);
if _bagc !=nil {return _bagc ;};_acd :=[]byte (_eccf );for _fefg ,_fadg :=range _acd {_agae ._fgg .Chars [rune (_fefg )]=GID (_fadg );if _fadg !=0{_c .Printf ("\u0009\u0030\u0078\u002502\u0078\u0020\u279e\u0020\u0030\u0078\u0025\u0030\u0032\u0078\u003d\u0025\u0063\u000a",_fefg ,_fadg ,rune (_fadg ));
};};return nil ;};type StdFont struct{_af Descriptor ;_gfb *RuneCharSafeMap ;_dc _eb .TextEncoder ;};func (_eddef *ttfParser )ParseComponents ()error {if _bbfd :=_eddef .ParseHead ();_bbfd !=nil {return _bbfd ;};if _bdb :=_eddef .ParseHhea ();_bdb !=nil {return _bdb ;
};if _dbdf :=_eddef .ParseMaxp ();_dbdf !=nil {return _dbdf ;};if _cgfg :=_eddef .ParseHmtx ();_cgfg !=nil {return _cgfg ;};if _ ,_fcd :=_eddef ._edde ["\u006e\u0061\u006d\u0065"];_fcd {if _agdd :=_eddef .ParseName ();_agdd !=nil {return _agdd ;};};if _ ,_aga :=_eddef ._edde ["\u004f\u0053\u002f\u0032"];
_aga {if _fba :=_eddef .ParseOS2 ();_fba !=nil {return _fba ;};};if _ ,_ecc :=_eddef ._edde ["\u0070\u006f\u0073\u0074"];_ecc {if _bgc :=_eddef .ParsePost ();_bgc !=nil {return _bgc ;};};if _ ,_efc :=_eddef ._edde ["\u0063\u006d\u0061\u0070"];_efc {if _beba :=_eddef .ParseCmap ();
_beba !=nil {return _beba ;};};return nil ;};func _dbe ()StdFont {_fdc .Do (_aac );_eag :=Descriptor {Name :CourierName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0021,BBox :[4]float64 {-23,-250,715,805},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_eag ,_bgg );};func (_ag *RuneCharSafeMap )Read (b rune )(CharMetrics ,bool ){_ag ._eg .RLock ();defer _ag ._eg .RUnlock ();_dfc ,_gcc :=_ag ._aa [b ];return _dfc ,_gcc ;};const (FontWeightMedium FontWeight =iota ;FontWeightBold ;FontWeightRoman ;
);func (_eadb *ttfParser )parseCmapSubtable31 (_abfb int64 )error {_bebd :=make ([]rune ,0,8);_babb :=make ([]rune ,0,8);_gadf :=make ([]int16 ,0,8);_bfc :=make ([]uint16 ,0,8);_eadb ._fgg .Chars =make (map[rune ]GID );_eadb ._gggb .Seek (int64 (_eadb ._edde ["\u0063\u006d\u0061\u0070"])+_abfb ,_edd .SeekStart );
_febb :=_eadb .ReadUShort ();if _febb !=4{return _cf .Errorf ("u\u006e\u0065\u0078\u0070\u0065\u0063t\u0065\u0064\u0020\u0073\u0075\u0062t\u0061\u0062\u006c\u0065\u0020\u0066\u006fr\u006d\u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0028\u0025w\u0029",_febb ,_d .ErrNotSupported );
};_eadb .Skip (2*2);_fecd :=int (_eadb .ReadUShort ()/2);_eadb .Skip (3*2);for _age :=0;_age < _fecd ;_age ++{_babb =append (_babb ,rune (_eadb .ReadUShort ()));};_eadb .Skip (2);for _bfa :=0;_bfa < _fecd ;_bfa ++{_bebd =append (_bebd ,rune (_eadb .ReadUShort ()));
};for _ebbf :=0;_ebbf < _fecd ;_ebbf ++{_gadf =append (_gadf ,_eadb .ReadShort ());};_ff ,_ :=_eadb ._gggb .Seek (int64 (0),_edd .SeekCurrent );for _daf :=0;_daf < _fecd ;_daf ++{_bfc =append (_bfc ,_eadb .ReadUShort ());};for _dbf :=0;_dbf < _fecd ;_dbf ++{_egbc :=_bebd [_dbf ];
_fgc :=_babb [_dbf ];_accf :=_gadf [_dbf ];_efgf :=_bfc [_dbf ];if _efgf > 0{_eadb ._gggb .Seek (_ff +2*int64 (_dbf )+int64 (_efgf ),_edd .SeekStart );};for _efa :=_egbc ;_efa <=_fgc ;_efa ++{if _efa ==0xFFFF{break ;};var _geff int32 ;if _efgf > 0{_geff =int32 (_eadb .ReadUShort ());
if _geff > 0{_geff +=int32 (_accf );};}else {_geff =_efa +int32 (_accf );};if _geff >=65536{_geff -=65536;};if _geff > 0{_eadb ._fgg .Chars [_efa ]=GID (_geff );};};};return nil ;};var _egf *RuneCharSafeMap ;func (_gc CharMetrics )String ()string {return _c .Sprintf ("<\u0025\u002e\u0031\u0066\u002c\u0025\u002e\u0031\u0066\u003e",_gc .Wx ,_gc .Wy );
};func (_dba StdFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_cce ,_ebc :=_dba ._gfb .Read (r );return _cce ,_ebc ;};var _dgba =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,556,722,722,611,611,611,611,611,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,722,556,556,584,584,389,975,556,611,278,280,389,389,333,333,333,280,350,556,556,333,556,556,333,556,333,333,278,250,737,556,611,556,556,743,611,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,611,333,333,333,611,556,611,556,556,167,611,611,611,611,333,584,549,556,556,333,333,611,333,333,278,278,278,278,278,278,278,278,556,556,278,278,400,278,584,549,584,494,278,889,333,584,611,584,611,611,611,611,556,549,611,556,611,611,611,611,944,333,611,611,611,556,834,834,333,370,365,611,611,611,556,333,333,494,889,278,278,1000,584,584,611,611,611,474,500,500,500,278,278,278,238,389,389,549,389,389,737,333,556,556,556,556,556,556,333,556,556,278,278,556,600,333,389,333,611,556,834,333,333,1000,556,333,611,611,611,611,611,611,611,556,611,611,556,778,556,556,556,556,556,500,500,500,500,556};
var _agc =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,611,778,778,778,778,389,389,389,389,389,389,389,389,500,778,778,667,667,667,667,667,944,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,611,778,722,722,722,722,556,556,556,556,556,667,667,667,611,722,722,722,722,722,722,722,722,722,722,1000,722,722,722,722,667,667,667,667,500,500,500,500,333,500,722,500,500,833,500,500,581,520,500,930,500,556,278,220,394,394,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,556,500,500,672,556,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,333,333,333,556,500,556,500,500,167,500,500,500,556,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,333,556,556,278,278,394,278,570,549,570,494,278,833,333,570,556,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,300,330,500,500,556,540,333,333,494,1000,250,250,1000,570,570,556,500,500,555,500,500,500,333,333,333,278,444,444,549,444,444,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,333,416,333,556,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,500,722,500,500,500,500,500,444,444,444,444,500};
func (_bdc *ttfParser )ParseOS2 ()error {if _dfg :=_bdc .Seek ("\u004f\u0053\u002f\u0032");_dfg !=nil {return _dfg ;};_bdabe :=_bdc .ReadUShort ();_bdc .Skip (4*2);_bdc .Skip (11*2+10+4*4+4);_cgg :=_bdc .ReadUShort ();_bdc ._fgg .Bold =(_cgg &32)!=0;_bdc .Skip (2*2);
_bdc ._fgg .TypoAscender =_bdc .ReadShort ();_bdc ._fgg .TypoDescender =_bdc .ReadShort ();if _bdabe >=2{_bdc .Skip (3*2+2*4+2);_bdc ._fgg .CapHeight =_bdc .ReadShort ();}else {_bdc ._fgg .CapHeight =0;};return nil ;};func (_bd StdFont )ToPdfObject ()_d .PdfObject {_cb :=_d .MakeDict ();
_cb .Set ("\u0054\u0079\u0070\u0065",_d .MakeName ("\u0046\u006f\u006e\u0074"));_cb .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_d .MakeName ("\u0054\u0079\u0070e\u0031"));_cb .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_d .MakeName (_bd .Name ()));
_cb .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_bd ._dc .ToPdfObject ());return _d .MakeIndirectObject (_cb );};func (_dbegf *ttfParser )parseCmapFormat6 ()error {_bbe :=int (_dbegf .ReadUShort ());_fcc :=int (_dbegf .ReadUShort ());_ge .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u0046o\u0072\u006d\u0061\u0074\u0036\u003a\u0020%s\u0020\u0066\u0069\u0072s\u0074\u0043\u006f\u0064\u0065\u003d\u0025\u0064\u0020en\u0074\u0072y\u0043\u006f\u0075\u006e\u0074\u003d\u0025\u0064",_dbegf ._fgg .String (),_bbe ,_fcc );
for _cca :=0;_cca < _fcc ;_cca ++{_aced :=GID (_dbegf .ReadUShort ());_dbegf ._fgg .Chars [rune (_cca +_bbe )]=_aced ;};return nil ;};var _edf *RuneCharSafeMap ;func (_gfbe *ttfParser )ReadShort ()(_bgdd int16 ){_ba .Read (_gfbe ._gggb ,_ba .BigEndian ,&_bgdd );
return _bgdd ;};func (_fcac *ttfParser )ReadStr (length int )(string ,error ){_abd :=make ([]byte ,length );_dbdfe ,_ee :=_fcac ._gggb .Read (_abd );if _ee !=nil {return "",_ee ;}else if _dbdfe !=length {return "",_c .Errorf ("\u0075\u006e\u0061bl\u0065\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0073",length );
};return string (_abd ),nil ;};var _ada *RuneCharSafeMap ;func _bda ()StdFont {_dcc :=_eb .NewZapfDingbatsEncoder ();_bdee :=Descriptor {Name :ZapfDingbatsName ,Family :string (ZapfDingbatsName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-1,-143,981,820},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :90,StemH :28};
return NewStdFontWithEncoding (_bdee ,_efbc ,_dcc );};func (_acde *ttfParser )Seek (tag string )error {_adab ,_ecb :=_acde ._edde [tag ];if !_ecb {return _c .Errorf ("\u0074\u0061\u0062\u006ce \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0073",tag );
};_acde ._gggb .Seek (int64 (_adab ),_edd .SeekStart );return nil ;};func (_gfc *fontMap )write (_ea StdFontName ,_cc func ()StdFont ){_gfc .Lock ();defer _gfc .Unlock ();_gfc ._cea [_ea ]=_cc ;};func (_cbg *ttfParser )ParseHhea ()error {if _ddd :=_cbg .Seek ("\u0068\u0068\u0065\u0061");
_ddd !=nil {return _ddd ;};_cbg .Skip (4+15*2);_cbg ._bdab =_cbg .ReadUShort ();return nil ;};func (_bag *RuneCharSafeMap )Range (f func (_gcb rune ,_agd CharMetrics )(_gg bool )){_bag ._eg .RLock ();defer _bag ._eg .RUnlock ();for _dfa ,_egb :=range _bag ._aa {if f (_dfa ,_egb ){break ;
};};};func (_ecd *ttfParser )ParseHead ()error {if _afe :=_ecd .Seek ("\u0068\u0065\u0061\u0064");_afe !=nil {return _afe ;};_ecd .Skip (3*4);_gbe :=_ecd .ReadULong ();if _gbe !=0x5F0F3CF5{_ge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0063\u006fr\u0072e\u0063\u0074\u0020\u006d\u0061\u0067\u0069\u0063\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u002e\u0020\u0046\u006fn\u0074\u0020\u006d\u0061\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0020\u0063\u006f\u0072\u0072\u0065\u0063t\u006c\u0079\u002e\u0020\u0025\u0073",_ecd );
};_ecd .Skip (2);_ecd ._fgg .UnitsPerEm =_ecd .ReadUShort ();_ecd .Skip (2*8);_ecd ._fgg .Xmin =_ecd .ReadShort ();_ecd ._fgg .Ymin =_ecd .ReadShort ();_ecd ._fgg .Xmax =_ecd .ReadShort ();_ecd ._fgg .Ymax =_ecd .ReadShort ();return nil ;};type fontMap struct{_gf .Mutex ;
_cea map[StdFontName ]func ()StdFont ;};var _aad =[]int16 {667,944,667,667,667,667,667,667,667,667,667,667,667,667,667,667,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,667,722,722,722,778,389,389,389,389,389,389,389,389,500,667,667,611,611,611,611,611,889,722,722,722,722,722,722,944,722,722,722,722,722,722,722,722,611,722,667,667,667,667,556,556,556,556,556,611,611,611,611,722,722,722,722,722,722,722,722,722,667,889,667,611,611,611,611,611,611,611,500,500,500,500,333,500,722,500,500,778,500,500,570,570,500,832,500,500,278,220,348,348,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,500,500,500,608,500,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,389,389,333,556,500,556,500,500,167,500,500,500,500,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,278,500,500,278,278,382,278,570,549,606,494,278,778,333,606,576,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,266,300,500,500,500,500,333,333,494,833,250,250,1000,570,570,500,500,500,555,500,500,500,333,333,333,278,389,389,549,389,389,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,366,278,500,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,444,667,500,444,444,444,500,389,389,389,389,500};
func IsStdFont (name StdFontName )bool {_ ,_cfc :=_cag .read (name );return _cfc };func _fac ()StdFont {_dcg .Do (_cgd );_fde :=Descriptor {Name :TimesRomanName ,Family :_bc ,Weight :FontWeightRoman ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,898},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :662,XHeight :450,StemV :84,StemH :28};
return NewStdFont (_fde ,_ada );};var _bgg *RuneCharSafeMap ;func (_cg StdFont )Name ()string {return string (_cg ._af .Name )};func NewStdFont (desc Descriptor ,metrics *RuneCharSafeMap )StdFont {return NewStdFontWithEncoding (desc ,metrics ,_eb .NewStandardEncoder ());
};type TtfType struct{UnitsPerEm uint16 ;PostScriptName string ;Bold bool ;ItalicAngle float64 ;IsFixedPitch bool ;TypoAscender int16 ;TypoDescender int16 ;UnderlinePosition int16 ;UnderlineThickness int16 ;Xmin ,Ymin ,Xmax ,Ymax int16 ;CapHeight int16 ;
Widths []uint16 ;Chars map[rune ]GID ;GlyphNames []GlyphName ;};func _ebe (){_efb =MakeRuneCharSafeMap (len (_bde ));_abc =MakeRuneCharSafeMap (len (_bde ));for _dcec ,_fa :=range _bde {_efb .Write (_fa ,CharMetrics {Wx :float64 (_gdd [_dcec ])});_abc .Write (_fa ,CharMetrics {Wx :float64 (_dgba [_dcec ])});
};_edf =_efb .Copy ();_cfee =_abc .Copy ();};var _acc _gf .Once ;func _fgd ()StdFont {_acc .Do (_ebe );_dgb :=Descriptor {Name :HelveticaBoldObliqueName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-174,-228,1114,962},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_dgb ,_cfee );};var _cfee *RuneCharSafeMap ;var _gaad =[]GlyphName {"\u002en\u006f\u0074\u0064\u0065\u0066","\u002e\u006e\u0075l\u006c","\u006e\u006fn\u006d\u0061\u0072k\u0069\u006e\u0067\u0072\u0065\u0074\u0075\u0072\u006e","\u0073\u0070\u0061c\u0065","\u0065\u0078\u0063\u006c\u0061\u006d","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c","\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u0069\u0067\u006e","\u0064\u006f\u006c\u006c\u0061\u0072","\u0070e\u0072\u0063\u0065\u006e\u0074","\u0061m\u0070\u0065\u0072\u0073\u0061\u006ed","q\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067\u006c\u0065","\u0070a\u0072\u0065\u006e\u006c\u0065\u0066t","\u0070\u0061\u0072\u0065\u006e\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0074\u0065\u0072\u0069\u0073\u006b","\u0070\u006c\u0075\u0073","\u0063\u006f\u006dm\u0061","\u0068\u0079\u0070\u0068\u0065\u006e","\u0070\u0065\u0072\u0069\u006f\u0064","\u0073\u006c\u0061s\u0068","\u007a\u0065\u0072\u006f","\u006f\u006e\u0065","\u0074\u0077\u006f","\u0074\u0068\u0072e\u0065","\u0066\u006f\u0075\u0072","\u0066\u0069\u0076\u0065","\u0073\u0069\u0078","\u0073\u0065\u0076e\u006e","\u0065\u0069\u0067h\u0074","\u006e\u0069\u006e\u0065","\u0063\u006f\u006co\u006e","\u0073e\u006d\u0069\u0063\u006f\u006c\u006fn","\u006c\u0065\u0073\u0073","\u0065\u0071\u0075a\u006c","\u0067r\u0065\u0061\u0074\u0065\u0072","\u0071\u0075\u0065\u0073\u0074\u0069\u006f\u006e","\u0061\u0074","\u0041","\u0042","\u0043","\u0044","\u0045","\u0046","\u0047","\u0048","\u0049","\u004a","\u004b","\u004c","\u004d","\u004e","\u004f","\u0050","\u0051","\u0052","\u0053","\u0054","\u0055","\u0056","\u0057","\u0058","\u0059","\u005a","b\u0072\u0061\u0063\u006b\u0065\u0074\u006c\u0065\u0066\u0074","\u0062a\u0063\u006b\u0073\u006c\u0061\u0073h","\u0062\u0072\u0061c\u006b\u0065\u0074\u0072\u0069\u0067\u0068\u0074","a\u0073\u0063\u0069\u0069\u0063\u0069\u0072\u0063\u0075\u006d","\u0075\u006e\u0064\u0065\u0072\u0073\u0063\u006f\u0072\u0065","\u0067\u0072\u0061v\u0065","\u0061","\u0062","\u0063","\u0064","\u0065","\u0066","\u0067","\u0068","\u0069","\u006a","\u006b","\u006c","\u006d","\u006e","\u006f","\u0070","\u0071","\u0072","\u0073","\u0074","\u0075","\u0076","\u0077","\u0078","\u0079","\u007a","\u0062r\u0061\u0063\u0065\u006c\u0065\u0066t","\u0062\u0061\u0072","\u0062\u0072\u0061\u0063\u0065\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0063\u0069\u0069\u0074\u0069\u006c\u0064\u0065","\u0041d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0041\u0072\u0069n\u0067","\u0043\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0045\u0061\u0063\u0075\u0074\u0065","\u004e\u0074\u0069\u006c\u0064\u0065","\u004fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u0055d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0061\u0063\u0075\u0074\u0065","\u0061\u0067\u0072\u0061\u0076\u0065","a\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0074\u0069\u006c\u0064\u0065","\u0061\u0072\u0069n\u0067","\u0063\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0065\u0061\u0063\u0075\u0074\u0065","\u0065\u0067\u0072\u0061\u0076\u0065","e\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0065d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0069\u0061\u0063\u0075\u0074\u0065","\u0069\u0067\u0072\u0061\u0076\u0065","i\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0069d\u0069\u0065\u0072\u0065\u0073\u0069s","\u006e\u0074\u0069\u006c\u0064\u0065","\u006f\u0061\u0063\u0075\u0074\u0065","\u006f\u0067\u0072\u0061\u0076\u0065","o\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u006fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u006f\u0074\u0069\u006c\u0064\u0065","\u0075\u0061\u0063\u0075\u0074\u0065","\u0075\u0067\u0072\u0061\u0076\u0065","u\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0075d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0064\u0061\u0067\u0067\u0065\u0072","\u0064\u0065\u0067\u0072\u0065\u0065","\u0063\u0065\u006e\u0074","\u0073\u0074\u0065\u0072\u006c\u0069\u006e\u0067","\u0073e\u0063\u0074\u0069\u006f\u006e","\u0062\u0075\u006c\u006c\u0065\u0074","\u0070a\u0072\u0061\u0067\u0072\u0061\u0070h","\u0067\u0065\u0072\u006d\u0061\u006e\u0064\u0062\u006c\u0073","\u0072\u0065\u0067\u0069\u0073\u0074\u0065\u0072\u0065\u0064","\u0063o\u0070\u0079\u0072\u0069\u0067\u0068t","\u0074r\u0061\u0064\u0065\u006d\u0061\u0072k","\u0061\u0063\u0075t\u0065","\u0064\u0069\u0065\u0072\u0065\u0073\u0069\u0073","\u006e\u006f\u0074\u0065\u0071\u0075\u0061\u006c","\u0041\u0045","\u004f\u0073\u006c\u0061\u0073\u0068","\u0069\u006e\u0066\u0069\u006e\u0069\u0074\u0079","\u0070l\u0075\u0073\u006d\u0069\u006e\u0075s","\u006ce\u0073\u0073\u0065\u0071\u0075\u0061l","\u0067\u0072\u0065a\u0074\u0065\u0072\u0065\u0071\u0075\u0061\u006c","\u0079\u0065\u006e","\u006d\u0075","p\u0061\u0072\u0074\u0069\u0061\u006c\u0064\u0069\u0066\u0066","\u0073u\u006d\u006d\u0061\u0074\u0069\u006fn","\u0070r\u006f\u0064\u0075\u0063\u0074","\u0070\u0069","\u0069\u006e\u0074\u0065\u0067\u0072\u0061\u006c","o\u0072\u0064\u0066\u0065\u006d\u0069\u006e\u0069\u006e\u0065","\u006f\u0072\u0064m\u0061\u0073\u0063\u0075\u006c\u0069\u006e\u0065","\u004f\u006d\u0065g\u0061","\u0061\u0065","\u006f\u0073\u006c\u0061\u0073\u0068","\u0071\u0075\u0065s\u0074\u0069\u006f\u006e\u0064\u006f\u0077\u006e","\u0065\u0078\u0063\u006c\u0061\u006d\u0064\u006f\u0077\u006e","\u006c\u006f\u0067\u0069\u0063\u0061\u006c\u006e\u006f\u0074","\u0072a\u0064\u0069\u0063\u0061\u006c","\u0066\u006c\u006f\u0072\u0069\u006e","a\u0070\u0070\u0072\u006f\u0078\u0065\u0071\u0075\u0061\u006c","\u0044\u0065\u006ct\u0061","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074r\u0069\u0067\u0068\u0074","\u0065\u006c\u006c\u0069\u0070\u0073\u0069\u0073","\u006e\u006fn\u0062\u0072\u0065a\u006b\u0069\u006e\u0067\u0073\u0070\u0061\u0063\u0065","\u0041\u0067\u0072\u0061\u0076\u0065","\u0041\u0074\u0069\u006c\u0064\u0065","\u004f\u0074\u0069\u006c\u0064\u0065","\u004f\u0045","\u006f\u0065","\u0065\u006e\u0064\u0061\u0073\u0068","\u0065\u006d\u0064\u0061\u0073\u0068","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u006c\u0065\u0066\u0074","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c\u0072\u0069\u0067\u0068\u0074","\u0071u\u006f\u0074\u0065\u006c\u0065\u0066t","\u0071\u0075\u006f\u0074\u0065\u0072\u0069\u0067\u0068\u0074","\u0064\u0069\u0076\u0069\u0064\u0065","\u006co\u007a\u0065\u006e\u0067\u0065","\u0079d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0059d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0066\u0072\u0061\u0063\u0074\u0069\u006f\u006e","\u0063\u0075\u0072\u0072\u0065\u006e\u0063\u0079","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006c\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006cr\u0069\u0067\u0068\u0074","\u0066\u0069","\u0066\u006c","\u0064a\u0067\u0067\u0065\u0072\u0064\u0062l","\u0070\u0065\u0072\u0069\u006f\u0064\u0063\u0065\u006et\u0065\u0072\u0065\u0064","\u0071\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067l\u0062\u0061\u0073\u0065","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u0062\u0061\u0073\u0065","p\u0065\u0072\u0074\u0068\u006f\u0075\u0073\u0061\u006e\u0064","A\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","E\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0041\u0061\u0063\u0075\u0074\u0065","\u0045d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0045\u0067\u0072\u0061\u0076\u0065","\u0049\u0061\u0063\u0075\u0074\u0065","I\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0049d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0049\u0067\u0072\u0061\u0076\u0065","\u004f\u0061\u0063\u0075\u0074\u0065","O\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061\u0070\u0070l\u0065","\u004f\u0067\u0072\u0061\u0076\u0065","\u0055\u0061\u0063\u0075\u0074\u0065","U\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0055\u0067\u0072\u0061\u0076\u0065","\u0064\u006f\u0074\u006c\u0065\u0073\u0073\u0069","\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0074\u0069\u006cd\u0065","\u006d\u0061\u0063\u0072\u006f\u006e","\u0062\u0072\u0065v\u0065","\u0064o\u0074\u0061\u0063\u0063\u0065\u006et","\u0072\u0069\u006e\u0067","\u0063e\u0064\u0069\u006c\u006c\u0061","\u0068\u0075\u006eg\u0061\u0072\u0075\u006d\u006c\u0061\u0075\u0074","\u006f\u0067\u006f\u006e\u0065\u006b","\u0063\u0061\u0072o\u006e","\u004c\u0073\u006c\u0061\u0073\u0068","\u006c\u0073\u006c\u0061\u0073\u0068","\u0053\u0063\u0061\u0072\u006f\u006e","\u0073\u0063\u0061\u0072\u006f\u006e","\u005a\u0063\u0061\u0072\u006f\u006e","\u007a\u0063\u0061\u0072\u006f\u006e","\u0062r\u006f\u006b\u0065\u006e\u0062\u0061r","\u0045\u0074\u0068","\u0065\u0074\u0068","\u0059\u0061\u0063\u0075\u0074\u0065","\u0079\u0061\u0063\u0075\u0074\u0065","\u0054\u0068\u006fr\u006e","\u0074\u0068\u006fr\u006e","\u006d\u0069\u006eu\u0073","\u006d\u0075\u006c\u0074\u0069\u0070\u006c\u0079","o\u006e\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","t\u0077\u006f\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u0074\u0068\u0072\u0065\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u006fn\u0065\u0068\u0061\u006c\u0066","\u006f\u006e\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072","\u0074\u0068\u0072\u0065\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072\u0073","\u0066\u0072\u0061n\u0063","\u0047\u0062\u0072\u0065\u0076\u0065","\u0067\u0062\u0072\u0065\u0076\u0065","\u0049\u0064\u006f\u0074\u0061\u0063\u0063\u0065\u006e\u0074","\u0053\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0073\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0043\u0061\u0063\u0075\u0074\u0065","\u0063\u0061\u0063\u0075\u0074\u0065","\u0043\u0063\u0061\u0072\u006f\u006e","\u0063\u0063\u0061\u0072\u006f\u006e","\u0064\u0063\u0072\u006f\u0061\u0074"};
var _ebb *RuneCharSafeMap ;func (_adf *TtfType )String ()string {return _c .Sprintf ("\u0046\u004fN\u0054\u005f\u0046\u0049\u004cE\u0032\u007b\u0025\u0023\u0071 \u0055\u006e\u0069\u0074\u0073\u0050\u0065\u0072\u0045\u006d\u003d\u0025\u0064\u0020\u0042\u006f\u006c\u0064\u003d\u0025\u0074\u0020\u0049\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065\u003d\u0025\u0066\u0020"+"\u0043\u0061pH\u0065\u0069\u0067h\u0074\u003d\u0025\u0064 Ch\u0061rs\u003d\u0025\u0064\u0020\u0047\u006c\u0079ph\u004e\u0061\u006d\u0065\u0073\u003d\u0025d\u007d",_adf .PostScriptName ,_adf .UnitsPerEm ,_adf .Bold ,_adf .ItalicAngle ,_adf .CapHeight ,len (_adf .Chars ),len (_adf .GlyphNames ));
};const (SymbolName =StdFontName ("\u0053\u0079\u006d\u0062\u006f\u006c");ZapfDingbatsName =StdFontName ("\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073"););