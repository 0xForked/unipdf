//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package fonts ;import (_ce "bytes";_c "encoding/binary";_af "errors";_g "fmt";_ab "github.com/unidoc/unipdf/v3/common";_ca "github.com/unidoc/unipdf/v3/core";_bb "github.com/unidoc/unipdf/v3/internal/cmap";_cc "github.com/unidoc/unipdf/v3/internal/textencoding";
_fd "golang.org/x/xerrors";_bc "io";_b "os";_gc "regexp";_gb "sort";_a "strings";_f "sync";);func (_bfd *ttfParser )ParseName ()error {if _edgf :=_bfd .Seek ("\u006e\u0061\u006d\u0065");_edgf !=nil {return _edgf ;};_gcbdf ,_ :=_bfd ._ceb .Seek (0,_bc .SeekCurrent );
_bfd ._eee .PostScriptName ="";_bfd .Skip (2);_afae :=_bfd .ReadUShort ();_bbfc :=_bfd .ReadUShort ();for _ffb :=uint16 (0);_ffb < _afae &&_bfd ._eee .PostScriptName =="";_ffb ++{_bfd .Skip (3*2);_dcfd :=_bfd .ReadUShort ();_gfac :=_bfd .ReadUShort ();
_bgc :=_bfd .ReadUShort ();if _dcfd ==6{_bfd ._ceb .Seek (_gcbdf +int64 (_bbfc )+int64 (_bgc ),_bc .SeekStart );_efdc ,_fdf :=_bfd .ReadStr (int (_gfac ));if _fdf !=nil {return _fdf ;};_efdc =_a .Replace (_efdc ,"\u0000","",-1);_eaa ,_fdf :=_gc .Compile ("\u005b\u0028\u0029\u007b\u007d\u003c\u003e\u0020\u002f%\u005b\u005c\u005d\u005d");
if _fdf !=nil {return _fdf ;};_bfd ._eee .PostScriptName =_eaa .ReplaceAllString (_efdc ,"");};};if _bfd ._eee .PostScriptName ==""{_ab .Log .Debug ("\u0050a\u0072\u0073e\u004e\u0061\u006de\u003a\u0020\u0054\u0068\u0065\u0020\u006ea\u006d\u0065\u0020\u0050\u006f\u0073t\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u0077\u0061\u0073\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e");
};return nil ;};func (_egcc *ttfParser )Seek (tag string )error {_gafd ,_gafdc :=_egcc ._adfa [tag ];if !_gafdc {return _g .Errorf ("\u0074\u0061\u0062\u006ce \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0073",tag );};_egcc ._ceb .Seek (int64 (_gafd ),_bc .SeekStart );
return nil ;};func NewStdFont (desc Descriptor ,metrics *RuneCharSafeMap )StdFont {return NewStdFontWithEncoding (desc ,metrics ,_cc .NewStandardEncoder ());};func _eddc ()StdFont {_cee .Do (_dba );_bccb :=Descriptor {Name :TimesBoldName ,Family :_eba ,Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,935},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :676,XHeight :461,StemV :139,StemH :44};
return NewStdFont (_bccb ,_ffa );};var _afa =&RuneCharSafeMap {_cbb :map[rune ]CharMetrics {' ':{Wx :250},'!':{Wx :333},'#':{Wx :500},'%':{Wx :833},'&':{Wx :778},'(':{Wx :333},')':{Wx :333},'+':{Wx :549},',':{Wx :250},'.':{Wx :250},'/':{Wx :278},'0':{Wx :500},'1':{Wx :500},'2':{Wx :500},'3':{Wx :500},'4':{Wx :500},'5':{Wx :500},'6':{Wx :500},'7':{Wx :500},'8':{Wx :500},'9':{Wx :500},':':{Wx :278},';':{Wx :278},'<':{Wx :549},'=':{Wx :549},'>':{Wx :549},'?':{Wx :444},'[':{Wx :333},']':{Wx :333},'_':{Wx :500},'{':{Wx :480},'|':{Wx :200},'}':{Wx :480},'¬':{Wx :713},'°':{Wx :400},'±':{Wx :549},'µ':{Wx :576},'×':{Wx :549},'÷':{Wx :549},'ƒ':{Wx :500},'Α':{Wx :722},'Β':{Wx :667},'Γ':{Wx :603},'Ε':{Wx :611},'Ζ':{Wx :611},'Η':{Wx :722},'Θ':{Wx :741},'Ι':{Wx :333},'Κ':{Wx :722},'Λ':{Wx :686},'Μ':{Wx :889},'Ν':{Wx :722},'Ξ':{Wx :645},'Ο':{Wx :722},'Π':{Wx :768},'Ρ':{Wx :556},'Σ':{Wx :592},'Τ':{Wx :611},'Υ':{Wx :690},'Φ':{Wx :763},'Χ':{Wx :722},'Ψ':{Wx :795},'α':{Wx :631},'β':{Wx :549},'γ':{Wx :411},'δ':{Wx :494},'ε':{Wx :439},'ζ':{Wx :494},'η':{Wx :603},'θ':{Wx :521},'ι':{Wx :329},'κ':{Wx :549},'λ':{Wx :549},'ν':{Wx :521},'ξ':{Wx :493},'ο':{Wx :549},'π':{Wx :549},'ρ':{Wx :549},'ς':{Wx :439},'σ':{Wx :603},'τ':{Wx :439},'υ':{Wx :576},'φ':{Wx :521},'χ':{Wx :549},'ψ':{Wx :686},'ω':{Wx :686},'ϑ':{Wx :631},'ϒ':{Wx :620},'ϕ':{Wx :603},'ϖ':{Wx :713},'•':{Wx :460},'…':{Wx :1000},'′':{Wx :247},'″':{Wx :411},'⁄':{Wx :167},'€':{Wx :750},'ℑ':{Wx :686},'℘':{Wx :987},'ℜ':{Wx :795},'Ω':{Wx :768},'ℵ':{Wx :823},'←':{Wx :987},'↑':{Wx :603},'→':{Wx :987},'↓':{Wx :603},'↔':{Wx :1042},'↵':{Wx :658},'⇐':{Wx :987},'⇑':{Wx :603},'⇒':{Wx :987},'⇓':{Wx :603},'⇔':{Wx :1042},'∀':{Wx :713},'∂':{Wx :494},'∃':{Wx :549},'∅':{Wx :823},'∆':{Wx :612},'∇':{Wx :713},'∈':{Wx :713},'∉':{Wx :713},'∋':{Wx :439},'∏':{Wx :823},'∑':{Wx :713},'−':{Wx :549},'∗':{Wx :500},'√':{Wx :549},'∝':{Wx :713},'∞':{Wx :713},'∠':{Wx :768},'∧':{Wx :603},'∨':{Wx :603},'∩':{Wx :768},'∪':{Wx :768},'∫':{Wx :274},'∴':{Wx :863},'∼':{Wx :549},'≅':{Wx :549},'≈':{Wx :549},'≠':{Wx :549},'≡':{Wx :549},'≤':{Wx :549},'≥':{Wx :549},'⊂':{Wx :713},'⊃':{Wx :713},'⊄':{Wx :713},'⊆':{Wx :713},'⊇':{Wx :713},'⊕':{Wx :768},'⊗':{Wx :768},'⊥':{Wx :658},'⋅':{Wx :250},'⌠':{Wx :686},'⌡':{Wx :686},'〈':{Wx :329},'〉':{Wx :329},'◊':{Wx :494},'♠':{Wx :753},'♣':{Wx :753},'♥':{Wx :753},'♦':{Wx :753},'\uf6d9':{Wx :790},'\uf6da':{Wx :790},'\uf6db':{Wx :890},'\uf8e5':{Wx :500},'\uf8e6':{Wx :603},'\uf8e7':{Wx :1000},'\uf8e8':{Wx :790},'\uf8e9':{Wx :790},'\uf8ea':{Wx :786},'\uf8eb':{Wx :384},'\uf8ec':{Wx :384},'\uf8ed':{Wx :384},'\uf8ee':{Wx :384},'\uf8ef':{Wx :384},'\uf8f0':{Wx :384},'\uf8f1':{Wx :494},'\uf8f2':{Wx :494},'\uf8f3':{Wx :494},'\uf8f4':{Wx :494},'\uf8f5':{Wx :686},'\uf8f6':{Wx :384},'\uf8f7':{Wx :384},'\uf8f8':{Wx :384},'\uf8f9':{Wx :384},'\uf8fa':{Wx :384},'\uf8fb':{Wx :384},'\uf8fc':{Wx :494},'\uf8fd':{Wx :494},'\uf8fe':{Wx :494},'\uf8ff':{Wx :790}}};
func IsStdFont (name StdFontName )bool {_ ,_gfb :=_ffg .read (name );return _gfb };var _edd *RuneCharSafeMap ;func _ged ()StdFont {_eb :=_cc .NewZapfDingbatsEncoder ();_abd :=Descriptor {Name :ZapfDingbatsName ,Family :string (ZapfDingbatsName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-1,-143,981,820},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :90,StemH :28};
return NewStdFontWithEncoding (_abd ,_dgd ,_eb );};func NewStdFontByName (name StdFontName )(StdFont ,bool ){_aba ,_bcf :=_ffg .read (name );if !_bcf {return StdFont {},false ;};return _aba (),true ;};func (_aaa StdFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_de ,_cd :=_aaa ._ecc .Read (r );
return _de ,_cd ;};func (_bfef *TtfType )String ()string {return _g .Sprintf ("\u0046\u004fN\u0054\u005f\u0046\u0049\u004cE\u0032\u007b\u0025\u0023\u0071 \u0055\u006e\u0069\u0074\u0073\u0050\u0065\u0072\u0045\u006d\u003d\u0025\u0064\u0020\u0042\u006f\u006c\u0064\u003d\u0025\u0074\u0020\u0049\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065\u003d\u0025\u0066\u0020"+"\u0043\u0061pH\u0065\u0069\u0067h\u0074\u003d\u0025\u0064 Ch\u0061rs\u003d\u0025\u0064\u0020\u0047\u006c\u0079ph\u004e\u0061\u006d\u0065\u0073\u003d\u0025d\u007d",_bfef .PostScriptName ,_bfef .UnitsPerEm ,_bfef .Bold ,_bfef .ItalicAngle ,_bfef .CapHeight ,len (_bfef .Chars ),len (_bfef .GlyphNames ));
};func (_cbg *ttfParser )ParseHmtx ()error {if _fcc :=_cbg .Seek ("\u0068\u006d\u0074\u0078");_fcc !=nil {return _fcc ;};_cbg ._eee .Widths =make ([]uint16 ,0,8);for _fadc :=uint16 (0);_fadc < _cbg ._ddf ;_fadc ++{_cbg ._eee .Widths =append (_cbg ._eee .Widths ,_cbg .ReadUShort ());
_cbg .Skip (2);};if _cbg ._ddf < _cbg ._agf &&_cbg ._ddf > 0{_caag :=_cbg ._eee .Widths [_cbg ._ddf -1];for _bcfc :=_cbg ._ddf ;_bcfc < _cbg ._agf ;_bcfc ++{_cbg ._eee .Widths =append (_cbg ._eee .Widths ,_caag );};};return nil ;};var _ Font =StdFont {};
const (SymbolName =StdFontName ("\u0053\u0079\u006d\u0062\u006f\u006c");ZapfDingbatsName =StdFontName ("\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073"););func (_fbd StdFont )Name ()string {return string (_fbd ._cab .Name )};func _fdg ()StdFont {_bef .Do (_fad );
_ggf :=Descriptor {Name :CourierObliqueName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0061,BBox :[4]float64 {-27,-250,849,805},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};return NewStdFont (_ggf ,_ad );
};type RuneCharSafeMap struct{_cbb map[rune ]CharMetrics ;_ee _f .RWMutex ;};func _caf (){_edd =MakeRuneCharSafeMap (len (_faf ));_dbe =MakeRuneCharSafeMap (len (_faf ));for _bfg ,_afg :=range _faf {_edd .Write (_afg ,CharMetrics {Wx :float64 (_ecg [_bfg ])});
_dbe .Write (_afg ,CharMetrics {Wx :float64 (_fef [_bfg ])});};_dec =_edd .Copy ();_cagc =_dbe .Copy ();};func _eea ()StdFont {_cee .Do (_dba );_ffd :=Descriptor {Name :TimesRomanName ,Family :_eba ,Weight :FontWeightRoman ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,898},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :662,XHeight :450,StemV :84,StemH :28};
return NewStdFont (_ffd ,_fde );};var _bcc *RuneCharSafeMap ;func _aed ()StdFont {_cee .Do (_dba );_dece :=Descriptor {Name :TimesBoldItalicName ,Family :_eba ,Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-200,-218,996,921},ItalicAngle :-15,Ascent :683,Descent :-217,CapHeight :669,XHeight :462,StemV :121,StemH :42};
return NewStdFont (_dece ,_agc );};func (_cff *ttfParser )ParsePost ()error {if _ada :=_cff .Seek ("\u0070\u006f\u0073\u0074");_ada !=nil {return _ada ;};_gfeb :=_cff .Read32Fixed ();_cff ._eee .ItalicAngle =_cff .Read32Fixed ();_cff ._eee .UnderlinePosition =_cff .ReadShort ();
_cff ._eee .UnderlineThickness =_cff .ReadShort ();_cff ._eee .IsFixedPitch =_cff .ReadULong ()!=0;_cff .ReadULong ();_cff .ReadULong ();_cff .ReadULong ();_cff .ReadULong ();_ab .Log .Trace ("\u0050a\u0072\u0073\u0065\u0050\u006f\u0073\u0074\u003a\u0020\u0066\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065\u003d\u0025\u0066",_gfeb );
switch _gfeb {case 1.0:_cff ._eee .GlyphNames =_cga ;case 2.0:_cedd :=int (_cff .ReadUShort ());_eab :=make ([]int ,_cedd );_cff ._eee .GlyphNames =make ([]GlyphName ,_cedd );_cedf :=-1;for _dfb :=0;_dfb < _cedd ;_dfb ++{_bbe :=int (_cff .ReadUShort ());
_eab [_dfb ]=_bbe ;if _bbe <=0x7fff&&_bbe > _cedf {_cedf =_bbe ;};};var _bcca []GlyphName ;if _cedf >=len (_cga ){_bcca =make ([]GlyphName ,_cedf -len (_cga )+1);for _ffc :=0;_ffc < _cedf -len (_cga )+1;_ffc ++{_cccf :=int (_cff .readByte ());_dged ,_ggg :=_cff .ReadStr (_cccf );
if _ggg !=nil {return _ggg ;};_bcca [_ffc ]=GlyphName (_dged );};};for _baga :=0;_baga < _cedd ;_baga ++{_bgd :=_eab [_baga ];if _bgd < len (_cga ){_cff ._eee .GlyphNames [_baga ]=_cga [_bgd ];}else if _bgd >=len (_cga )&&_bgd <=32767{_cff ._eee .GlyphNames [_baga ]=_bcca [_bgd -len (_cga )];
}else {_cff ._eee .GlyphNames [_baga ]="\u002e\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064";};};case 2.5:_dab :=make ([]int ,_cff ._agf );for _adg :=0;_adg < len (_dab );_adg ++{_egc :=int (_cff .ReadSByte ());_dab [_adg ]=_adg +1+_egc ;};_cff ._eee .GlyphNames =make ([]GlyphName ,len (_dab ));
for _gge :=0;_gge < len (_cff ._eee .GlyphNames );_gge ++{_afga :=_cga [_dab [_gge ]];_cff ._eee .GlyphNames [_gge ]=_afga ;};case 3.0:_ab .Log .Debug ("\u004e\u006f\u0020\u0050\u006f\u0073t\u0053\u0063\u0072i\u0070\u0074\u0020n\u0061\u006d\u0065\u0020\u0069\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020is\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0066\u006f\u006e\u0074\u002e");
default:_ab .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020f\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065=\u0025\u0066",_gfeb );};return nil ;};var _gd *RuneCharSafeMap ;func _fad (){const _gfd =600;
_gd =MakeRuneCharSafeMap (len (_faf ));for _ ,_eda :=range _faf {_gd .Write (_eda ,CharMetrics {Wx :_gfd });};_bcc =_gd .Copy ();_cag =_gd .Copy ();_ad =_gd .Copy ();};func (_bab *ttfParser )ReadULong ()(_bac uint32 ){_c .Read (_bab ._ceb ,_c .BigEndian ,&_bac );
return _bac ;};func (_cgd *ttfParser )parseCmapSubtable31 (_baa int64 )error {_fcg :=make ([]rune ,0,8);_fcbb :=make ([]rune ,0,8);_efd :=make ([]int16 ,0,8);_fcce :=make ([]uint16 ,0,8);_cgd ._eee .Chars =make (map[rune ]GID );_cgd ._ceb .Seek (int64 (_cgd ._adfa ["\u0063\u006d\u0061\u0070"])+_baa ,_bc .SeekStart );
_cfgd :=_cgd .ReadUShort ();if _cfgd !=4{return _fd .Errorf ("u\u006e\u0065\u0078\u0070\u0065\u0063t\u0065\u0064\u0020\u0073\u0075\u0062t\u0061\u0062\u006c\u0065\u0020\u0066\u006fr\u006d\u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0028\u0025w\u0029",_cfgd ,_ca .ErrNotSupported );
};_cgd .Skip (2*2);_aegg :=int (_cgd .ReadUShort ()/2);_cgd .Skip (3*2);for _efe :=0;_efe < _aegg ;_efe ++{_fcbb =append (_fcbb ,rune (_cgd .ReadUShort ()));};_cgd .Skip (2);for _caga :=0;_caga < _aegg ;_caga ++{_fcg =append (_fcg ,rune (_cgd .ReadUShort ()));
};for _aad :=0;_aad < _aegg ;_aad ++{_efd =append (_efd ,_cgd .ReadShort ());};_bgg ,_ :=_cgd ._ceb .Seek (int64 (0),_bc .SeekCurrent );for _dgc :=0;_dgc < _aegg ;_dgc ++{_fcce =append (_fcce ,_cgd .ReadUShort ());};for _ddc :=0;_ddc < _aegg ;_ddc ++{_gae :=_fcg [_ddc ];
_bffd :=_fcbb [_ddc ];_fec :=_efd [_ddc ];_ccc :=_fcce [_ddc ];if _ccc > 0{_cgd ._ceb .Seek (_bgg +2*int64 (_ddc )+int64 (_ccc ),_bc .SeekStart );};for _gfa :=_gae ;_gfa <=_bffd ;_gfa ++{if _gfa ==0xFFFF{break ;};var _fgbe int32 ;if _ccc > 0{_fgbe =int32 (_cgd .ReadUShort ());
if _fgbe > 0{_fgbe +=int32 (_fec );};}else {_fgbe =_gfa +int32 (_fec );};if _fgbe >=65536{_fgbe -=65536;};if _fgbe > 0{_cgd ._eee .Chars [_gfa ]=GID (_fgbe );};};};return nil ;};func (_fbb *ttfParser )ParseHead ()error {if _dge :=_fbb .Seek ("\u0068\u0065\u0061\u0064");
_dge !=nil {return _dge ;};_fbb .Skip (3*4);_cbfg :=_fbb .ReadULong ();if _cbfg !=0x5F0F3CF5{_ab .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0063\u006fr\u0072e\u0063\u0074\u0020\u006d\u0061\u0067\u0069\u0063\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u002e\u0020\u0046\u006fn\u0074\u0020\u006d\u0061\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0020\u0063\u006f\u0072\u0072\u0065\u0063t\u006c\u0079\u002e\u0020\u0025\u0073",_fbb );
};_fbb .Skip (2);_fbb ._eee .UnitsPerEm =_fbb .ReadUShort ();_fbb .Skip (2*8);_fbb ._eee .Xmin =_fbb .ReadShort ();_fbb ._eee .Ymin =_fbb .ReadShort ();_fbb ._eee .Xmax =_fbb .ReadShort ();_fbb ._eee .Ymax =_fbb .ReadShort ();return nil ;};var _bfb _f .Once ;
func (_ea *fontMap )write (_ec StdFontName ,_df func ()StdFont ){_ea .Lock ();defer _ea .Unlock ();_ea ._bf [_ec ]=_df ;};var _fde *RuneCharSafeMap ;type Descriptor struct{Name StdFontName ;Family string ;Weight FontWeight ;Flags uint ;BBox [4]float64 ;
ItalicAngle float64 ;Ascent float64 ;Descent float64 ;CapHeight float64 ;XHeight float64 ;StemV float64 ;StemH float64 ;};type TtfType struct{UnitsPerEm uint16 ;PostScriptName string ;Bold bool ;ItalicAngle float64 ;IsFixedPitch bool ;TypoAscender int16 ;
TypoDescender int16 ;UnderlinePosition int16 ;UnderlineThickness int16 ;Xmin ,Ymin ,Xmax ,Ymax int16 ;CapHeight int16 ;Widths []uint16 ;Chars map[rune ]GID ;GlyphNames []GlyphName ;};func init (){RegisterStdFont (CourierName ,_gbec ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u0043\u006f\u0075\u0072\u0069e\u0072\u004e\u0065\u0077","\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077");
RegisterStdFont (CourierBoldName ,_baf ,"\u0043o\u0075r\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (CourierObliqueName ,_fdg ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (CourierBoldObliqueName ,_dc ,"C\u006f\u0075\u0072\u0069er\u004ee\u0077\u002c\u0042\u006f\u006cd\u0049\u0074\u0061\u006c\u0069\u0063");};var _fef =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,556,722,722,611,611,611,611,611,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,722,556,556,584,584,389,975,556,611,278,280,389,389,333,333,333,280,350,556,556,333,556,556,333,556,333,333,278,250,737,556,611,556,556,743,611,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,611,333,333,333,611,556,611,556,556,167,611,611,611,611,333,584,549,556,556,333,333,611,333,333,278,278,278,278,278,278,278,278,556,556,278,278,400,278,584,549,584,494,278,889,333,584,611,584,611,611,611,611,556,549,611,556,611,611,611,611,944,333,611,611,611,556,834,834,333,370,365,611,611,611,556,333,333,494,889,278,278,1000,584,584,611,611,611,474,500,500,500,278,278,278,238,389,389,549,389,389,737,333,556,556,556,556,556,556,333,556,556,278,278,556,600,333,389,333,611,556,834,333,333,1000,556,333,611,611,611,611,611,611,611,556,611,611,556,778,556,556,556,556,556,500,500,500,500,556};
type FontWeight int ;func _cba ()StdFont {_aeg :=_cc .NewSymbolEncoder ();_da :=Descriptor {Name :SymbolName ,Family :string (SymbolName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-180,-293,1090,1010},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :85,StemH :92};
return NewStdFontWithEncoding (_da ,_afa ,_aeg );};func (_gg CharMetrics )String ()string {return _g .Sprintf ("<\u0025\u002e\u0031\u0066\u002c\u0025\u002e\u0031\u0066\u003e",_gg .Wx ,_gg .Wy );};func (_cfd *TtfType )NewEncoder ()_cc .TextEncoder {return _cc .NewTrueTypeFontEncoder (_cfd .Chars )};
var _bbd =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,611,778,778,778,778,389,389,389,389,389,389,389,389,500,778,778,667,667,667,667,667,944,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,611,778,722,722,722,722,556,556,556,556,556,667,667,667,611,722,722,722,722,722,722,722,722,722,722,1000,722,722,722,722,667,667,667,667,500,500,500,500,333,500,722,500,500,833,500,500,581,520,500,930,500,556,278,220,394,394,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,556,500,500,672,556,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,333,333,333,556,500,556,500,500,167,500,500,500,556,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,333,556,556,278,278,394,278,570,549,570,494,278,833,333,570,556,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,300,330,500,500,556,540,333,333,494,1000,250,250,1000,570,570,556,500,500,555,500,500,500,333,333,333,278,444,444,549,444,444,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,333,416,333,556,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,500,722,500,500,500,500,500,444,444,444,444,500};
var _cag *RuneCharSafeMap ;var _dec *RuneCharSafeMap ;type fontMap struct{_f .Mutex ;_bf map[StdFontName ]func ()StdFont ;};func (_eca *ttfParser )ParseCmap ()error {var _gcda int64 ;if _ced :=_eca .Seek ("\u0063\u006d\u0061\u0070");_ced !=nil {return _ced ;
};_ab .Log .Trace ("\u0050a\u0072\u0073\u0065\u0043\u006d\u0061p");_eca .ReadUShort ();_eef :=int (_eca .ReadUShort ());_gda :=int64 (0);_bccc :=int64 (0);_bebd :=int64 (0);for _cfgf :=0;_cfgf < _eef ;_cfgf ++{_gec :=_eca .ReadUShort ();_cfa :=_eca .ReadUShort ();
_gcda =int64 (_eca .ReadULong ());if _gec ==3&&_cfa ==1{_bccc =_gcda ;}else if _gec ==3&&_cfa ==10{_bebd =_gcda ;}else if _gec ==1&&_cfa ==0{_gda =_gcda ;};};if _gda !=0{if _bbg :=_eca .parseCmapVersion (_gda );_bbg !=nil {return _bbg ;};};if _bccc !=0{if _edg :=_eca .parseCmapSubtable31 (_bccc );
_edg !=nil {return _edg ;};};if _bebd !=0{if _adcg :=_eca .parseCmapVersion (_bebd );_adcg !=nil {return _adcg ;};};if _bccc ==0&&_gda ==0&&_bebd ==0{_ab .Log .Debug ("\u0074\u0074\u0066P\u0061\u0072\u0073\u0065\u0072\u002e\u0050\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u002e\u0020\u004e\u006f\u0020\u0033\u0031\u002c\u0020\u0031\u0030\u002c\u0020\u00331\u0030\u0020\u0074\u0061\u0062\u006c\u0065\u002e");
};return nil ;};func _gcbd (_afdc map[string ]uint32 )string {var _bccg []string ;for _ffdf :=range _afdc {_bccg =append (_bccg ,_ffdf );};_gb .Slice (_bccg ,func (_adc ,_bfgf int )bool {return _afdc [_bccg [_adc ]]< _afdc [_bccg [_bfgf ]]});_bff :=[]string {_g .Sprintf ("\u0054\u0072\u0075\u0065Ty\u0070\u0065\u0020\u0074\u0061\u0062\u006c\u0065\u0073\u003a\u0020\u0025\u0064",len (_afdc ))};
for _ ,_eed :=range _bccg {_bff =append (_bff ,_g .Sprintf ("\u0009%\u0071\u0020\u0025\u0035\u0064",_eed ,_afdc [_eed ]));};return _a .Join (_bff ,"\u000a");};func init (){RegisterStdFont (HelveticaName ,_acd ,"\u0041\u0072\u0069a\u006c");RegisterStdFont (HelveticaBoldName ,_adf ,"\u0041\u0072\u0069\u0061\u006c\u002c\u0042\u006f\u006c\u0064");
RegisterStdFont (HelveticaObliqueName ,_cbf ,"\u0041\u0072\u0069a\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063");RegisterStdFont (HelveticaBoldObliqueName ,_gfbf ,"\u0041\u0072i\u0061\u006c\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
};func (_geb *ttfParser )ParseMaxp ()error {if _beab :=_geb .Seek ("\u006d\u0061\u0078\u0070");_beab !=nil {return _beab ;};_geb .Skip (4);_geb ._agf =_geb .ReadUShort ();return nil ;};func _cbf ()StdFont {_bfb .Do (_caf );_ede :=Descriptor {Name :HelveticaObliqueName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-170,-225,1116,931},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_ede ,_dec );};func (_be *RuneCharSafeMap )Length ()int {_be ._ee .RLock ();defer _be ._ee .RUnlock ();return len (_be ._cbb );};const (HelveticaName =StdFontName ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");HelveticaBoldName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061-\u0042\u006f\u006c\u0064");
HelveticaObliqueName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061\u002d\u004f\u0062l\u0069\u0071\u0075\u0065");HelveticaBoldObliqueName =StdFontName ("H\u0065\u006c\u0076\u0065ti\u0063a\u002d\u0042\u006f\u006c\u0064O\u0062\u006c\u0069\u0071\u0075\u0065");
);func _gfbf ()StdFont {_bfb .Do (_caf );_fg :=Descriptor {Name :HelveticaBoldObliqueName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-174,-228,1114,962},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_fg ,_cagc );};func _dc ()StdFont {_bef .Do (_fad );_fe :=Descriptor {Name :CourierBoldObliqueName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0061,BBox :[4]float64 {-57,-250,869,801},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_fe ,_cag );};func (_agcc *ttfParser )Skip (n int ){_agcc ._ceb .Seek (int64 (n ),_bc .SeekCurrent )};func (_abc *ttfParser )parseCmapFormat0 ()error {_gebg ,_ege :=_abc .ReadStr (256);if _ege !=nil {return _ege ;};_efc :=[]byte (_gebg );
_ab .Log .Trace ("\u0070a\u0072\u0073e\u0043\u006d\u0061p\u0046\u006f\u0072\u006d\u0061\u0074\u0030:\u0020\u0025\u0073\u000a\u0064\u0061t\u0061\u0053\u0074\u0072\u003d\u0025\u002b\u0071\u000a\u0064\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d",_abc ._eee .String (),_gebg ,_efc );
for _gad ,_ccgc :=range _efc {_abc ._eee .Chars [rune (_gad )]=GID (_ccgc );};return nil ;};var _cee _f .Once ;func (_gcb StdFont )Encoder ()_cc .TextEncoder {return _gcb ._dg };func (_fdc *ttfParser )Parse ()(TtfType ,error ){_becf ,_dcg :=_fdc .ReadStr (4);
if _dcg !=nil {return TtfType {},_dcg ;};if _becf =="\u004f\u0054\u0054\u004f"{return TtfType {},_fd .Errorf ("\u0066\u006f\u006e\u0074s\u0020\u0062\u0061\u0073\u0065\u0064\u0020\u006f\u006e \u0050\u006f\u0073\u0074\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065s\u0020\u0061\u0072\u0065\u0020n\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_ca .ErrNotSupported );
};if _becf !="\u0000\u0001\u0000\u0000"&&_becf !="\u0074\u0072\u0075\u0065"{_ab .Log .Debug ("\u0055n\u0072\u0065c\u006f\u0067\u006ei\u007a\u0065\u0064\u0020\u0054\u0072\u0075e\u0054\u0079\u0070\u0065\u0020\u0066i\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u002e\u0020v\u0065\u0072\u0073\u0069\u006f\u006e\u003d\u0025\u0071",_becf );
};_dag :=int (_fdc .ReadUShort ());_fdc .Skip (3*2);_fdc ._adfa =make (map[string ]uint32 );var _gca string ;for _ccb :=0;_ccb < _dag ;_ccb ++{_gca ,_dcg =_fdc .ReadStr (4);if _dcg !=nil {return TtfType {},_dcg ;};_fdc .Skip (4);_aeb :=_fdc .ReadULong ();
_fdc .Skip (4);_fdc ._adfa [_gca ]=_aeb ;};_ab .Log .Trace (_gcbd (_fdc ._adfa ));if _dcg =_fdc .ParseComponents ();_dcg !=nil {return TtfType {},_dcg ;};return _fdc ._eee ,nil ;};func (_bbc *TtfType )MakeToUnicode ()*_bb .CMap {_bbbe :=make (map[_bb .CharCode ]rune );
if len (_bbc .GlyphNames )==0{return _bb .NewToUnicodeCMap (_bbbe );};for _acf ,_gfbg :=range _bbc .Chars {_bae :=_bb .CharCode (_acf );_eeaa :=_bbc .GlyphNames [_gfbg ];_bfge ,_bfe :=_cc .GlyphToRune (_eeaa );if !_bfe {_ab .Log .Debug ("\u004e\u006f \u0072\u0075\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065\u003d\u0030\u0078\u0025\u0030\u0034\u0078\u0020\u0067\u006c\u0079\u0070h=\u0025\u0071",_acf ,_eeaa );
_bfge =_cc .MissingCodeRune ;};_bbbe [_bae ]=_bfge ;};return _bb .NewToUnicodeCMap (_bbbe );};func _dba (){_fde =MakeRuneCharSafeMap (len (_faf ));_ffa =MakeRuneCharSafeMap (len (_faf ));_agc =MakeRuneCharSafeMap (len (_faf ));_dd =MakeRuneCharSafeMap (len (_faf ));
for _dbef ,_bdb :=range _faf {_fde .Write (_bdb ,CharMetrics {Wx :float64 (_bec [_dbef ])});_ffa .Write (_bdb ,CharMetrics {Wx :float64 (_bbd [_dbef ])});_agc .Write (_bdb ,CharMetrics {Wx :float64 (_gbed [_dbef ])});_dd .Write (_bdb ,CharMetrics {Wx :float64 (_gdd [_dbef ])});
};};func init (){RegisterStdFont (SymbolName ,_cba ,"\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063","S\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064","\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (ZapfDingbatsName ,_ged );};func (_gfe *fontMap )read (_ge StdFontName )(func ()StdFont ,bool ){_gfe .Lock ();defer _gfe .Unlock ();_aga ,_d :=_gfe ._bf [_ge ];return _aga ,_d ;};func (_ccf StdFont )GetMetricsTable ()*RuneCharSafeMap {return _ccf ._ecc };
var _dgd =&RuneCharSafeMap {_cbb :map[rune ]CharMetrics {' ':{Wx :278},'→':{Wx :838},'↔':{Wx :1016},'↕':{Wx :458},'①':{Wx :788},'②':{Wx :788},'③':{Wx :788},'④':{Wx :788},'⑤':{Wx :788},'⑥':{Wx :788},'⑦':{Wx :788},'⑧':{Wx :788},'⑨':{Wx :788},'⑩':{Wx :788},'■':{Wx :761},'▲':{Wx :892},'▼':{Wx :892},'◆':{Wx :788},'●':{Wx :791},'◗':{Wx :438},'★':{Wx :816},'☎':{Wx :719},'☛':{Wx :960},'☞':{Wx :939},'♠':{Wx :626},'♣':{Wx :776},'♥':{Wx :694},'♦':{Wx :595},'✁':{Wx :974},'✂':{Wx :961},'✃':{Wx :974},'✄':{Wx :980},'✆':{Wx :789},'✇':{Wx :790},'✈':{Wx :791},'✉':{Wx :690},'✌':{Wx :549},'✍':{Wx :855},'✎':{Wx :911},'✏':{Wx :933},'✐':{Wx :911},'✑':{Wx :945},'✒':{Wx :974},'✓':{Wx :755},'✔':{Wx :846},'✕':{Wx :762},'✖':{Wx :761},'✗':{Wx :571},'✘':{Wx :677},'✙':{Wx :763},'✚':{Wx :760},'✛':{Wx :759},'✜':{Wx :754},'✝':{Wx :494},'✞':{Wx :552},'✟':{Wx :537},'✠':{Wx :577},'✡':{Wx :692},'✢':{Wx :786},'✣':{Wx :788},'✤':{Wx :788},'✥':{Wx :790},'✦':{Wx :793},'✧':{Wx :794},'✩':{Wx :823},'✪':{Wx :789},'✫':{Wx :841},'✬':{Wx :823},'✭':{Wx :833},'✮':{Wx :816},'✯':{Wx :831},'✰':{Wx :923},'✱':{Wx :744},'✲':{Wx :723},'✳':{Wx :749},'✴':{Wx :790},'✵':{Wx :792},'✶':{Wx :695},'✷':{Wx :776},'✸':{Wx :768},'✹':{Wx :792},'✺':{Wx :759},'✻':{Wx :707},'✼':{Wx :708},'✽':{Wx :682},'✾':{Wx :701},'✿':{Wx :826},'❀':{Wx :815},'❁':{Wx :789},'❂':{Wx :789},'❃':{Wx :707},'❄':{Wx :687},'❅':{Wx :696},'❆':{Wx :689},'❇':{Wx :786},'❈':{Wx :787},'❉':{Wx :713},'❊':{Wx :791},'❋':{Wx :785},'❍':{Wx :873},'❏':{Wx :762},'❐':{Wx :762},'❑':{Wx :759},'❒':{Wx :759},'❖':{Wx :784},'❘':{Wx :138},'❙':{Wx :277},'❚':{Wx :415},'❛':{Wx :392},'❜':{Wx :392},'❝':{Wx :668},'❞':{Wx :668},'❡':{Wx :732},'❢':{Wx :544},'❣':{Wx :544},'❤':{Wx :910},'❥':{Wx :667},'❦':{Wx :760},'❧':{Wx :760},'❶':{Wx :788},'❷':{Wx :788},'❸':{Wx :788},'❹':{Wx :788},'❺':{Wx :788},'❻':{Wx :788},'❼':{Wx :788},'❽':{Wx :788},'❾':{Wx :788},'❿':{Wx :788},'➀':{Wx :788},'➁':{Wx :788},'➂':{Wx :788},'➃':{Wx :788},'➄':{Wx :788},'➅':{Wx :788},'➆':{Wx :788},'➇':{Wx :788},'➈':{Wx :788},'➉':{Wx :788},'➊':{Wx :788},'➋':{Wx :788},'➌':{Wx :788},'➍':{Wx :788},'➎':{Wx :788},'➏':{Wx :788},'➐':{Wx :788},'➑':{Wx :788},'➒':{Wx :788},'➓':{Wx :788},'➔':{Wx :894},'➘':{Wx :748},'➙':{Wx :924},'➚':{Wx :748},'➛':{Wx :918},'➜':{Wx :927},'➝':{Wx :928},'➞':{Wx :928},'➟':{Wx :834},'➠':{Wx :873},'➡':{Wx :828},'➢':{Wx :924},'➣':{Wx :924},'➤':{Wx :917},'➥':{Wx :930},'➦':{Wx :931},'➧':{Wx :463},'➨':{Wx :883},'➩':{Wx :836},'➪':{Wx :836},'➫':{Wx :867},'➬':{Wx :867},'➭':{Wx :696},'➮':{Wx :696},'➯':{Wx :874},'➱':{Wx :874},'➲':{Wx :760},'➳':{Wx :946},'➴':{Wx :771},'➵':{Wx :865},'➶':{Wx :771},'➷':{Wx :888},'➸':{Wx :967},'➹':{Wx :888},'➺':{Wx :831},'➻':{Wx :873},'➼':{Wx :927},'➽':{Wx :970},'➾':{Wx :918},'\uf8d7':{Wx :390},'\uf8d8':{Wx :390},'\uf8d9':{Wx :317},'\uf8da':{Wx :317},'\uf8db':{Wx :276},'\uf8dc':{Wx :276},'\uf8dd':{Wx :509},'\uf8de':{Wx :509},'\uf8df':{Wx :410},'\uf8e0':{Wx :410},'\uf8e1':{Wx :234},'\uf8e2':{Wx :234},'\uf8e3':{Wx :334},'\uf8e4':{Wx :334}}};
func TtfParse (r _bc .ReadSeeker )(TtfType ,error ){_dbeg :=&ttfParser {_ceb :r };return _dbeg .Parse ()};func NewStdFontWithEncoding (desc Descriptor ,metrics *RuneCharSafeMap ,encoder _cc .TextEncoder )StdFont {var _ba rune =0xA0;if _ ,_bceb :=metrics .Read (_ba );
!_bceb {_cbd ,_ :=metrics .Read (0x20);metrics .Write (_ba ,_cbd );};return StdFont {_cab :desc ,_ecc :metrics ,_dg :encoder };};func init (){RegisterStdFont (TimesRomanName ,_eea ,"\u0054\u0069\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e","\u0054\u0069\u006de\u0073");
RegisterStdFont (TimesBoldName ,_eddc ,"\u0054i\u006de\u0073\u004e\u0065\u0077\u0052o\u006d\u0061n\u002c\u0042\u006f\u006c\u0064","\u0054\u0069\u006d\u0065\u0073\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (TimesItalicName ,_def ,"T\u0069m\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006da\u006e\u002c\u0049\u0074al\u0069\u0063","\u0054\u0069\u006de\u0073\u002c\u0049\u0074\u0061\u006c\u0069\u0063");
RegisterStdFont (TimesBoldItalicName ,_aed ,"\u0054i\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e,\u0042\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063","\u0054\u0069m\u0065\u0073\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
};func _def ()StdFont {_cee .Do (_dba );_fbf :=Descriptor {Name :TimesItalicName ,Family :_eba ,Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-169,-217,1010,883},ItalicAngle :-15.5,Ascent :683,Descent :-217,CapHeight :653,XHeight :441,StemV :76,StemH :32};
return NewStdFont (_fbf ,_dd );};func (_bagf *ttfParser )parseCmapFormat12 ()error {_adcgf :=_bagf .ReadULong ();_ab .Log .Trace ("\u0070\u0061\u0072se\u0043\u006d\u0061\u0070\u0046\u006f\u0072\u006d\u0061t\u00312\u003a \u0025s\u0020\u006e\u0075\u006d\u0047\u0072\u006f\u0075\u0070\u0073\u003d\u0025\u0064",_bagf ._eee .String (),_adcgf );
for _efea :=uint32 (0);_efea < _adcgf ;_efea ++{_dcf :=_bagf .ReadULong ();_cgc :=_bagf .ReadULong ();_ggb :=_bagf .ReadULong ();if _dcf > 0x0010FFFF||(0xD800<=_dcf &&_dcf <=0xDFFF){return _af .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");
};if _cgc < _dcf ||_cgc > 0x0010FFFF||(0xD800<=_cgc &&_cgc <=0xDFFF){return _af .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");};for _abag :=_dcf ;_abag <=_cgc ;
_abag ++{if _abag > 0x10FFFF{_ab .Log .Debug ("\u0046\u006fr\u006d\u0061\u0074\u0020\u0031\u0032\u0020\u0063\u006d\u0061\u0070\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0063\u0068\u0061\u0072\u0061\u0063\u0074\u0065\u0072\u0020\u0062\u0065\u0079\u006f\u006e\u0064\u0020\u0055\u0043\u0053\u002d\u0034");
};_bagf ._eee .Chars [rune (_abag )]=GID (_ggb );_ggb ++;};};return nil ;};var _ffg =&fontMap {_bf :make (map[StdFontName ]func ()StdFont )};var _gbed =[]int16 {667,944,667,667,667,667,667,667,667,667,667,667,667,667,667,667,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,667,722,722,722,778,389,389,389,389,389,389,389,389,500,667,667,611,611,611,611,611,889,722,722,722,722,722,722,944,722,722,722,722,722,722,722,722,611,722,667,667,667,667,556,556,556,556,556,611,611,611,611,722,722,722,722,722,722,722,722,722,667,889,667,611,611,611,611,611,611,611,500,500,500,500,333,500,722,500,500,778,500,500,570,570,500,832,500,500,278,220,348,348,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,500,500,500,608,500,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,389,389,333,556,500,556,500,500,167,500,500,500,500,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,278,500,500,278,278,382,278,570,549,606,494,278,778,333,606,576,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,266,300,500,500,500,500,333,333,494,833,250,250,1000,570,570,500,500,500,555,500,500,500,333,333,333,278,389,389,549,389,389,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,366,278,500,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,444,667,500,444,444,444,500,389,389,389,389,500};
type StdFont struct{_cab Descriptor ;_ecc *RuneCharSafeMap ;_dg _cc .TextEncoder ;};type StdFontName string ;type GlyphName =_cc .GlyphName ;func (_fbe *ttfParser )Read32Fixed ()float64 {_edag :=float64 (_fbe .ReadShort ());_cabc :=float64 (_fbe .ReadUShort ())/65536.0;
return _edag +_cabc ;};var _bef _f .Once ;func (_efae *ttfParser )ReadStr (length int )(string ,error ){_fac :=make ([]byte ,length );_dee ,_bgb :=_efae ._ceb .Read (_fac );if _bgb !=nil {return "",_bgb ;}else if _dee !=length {return "",_g .Errorf ("\u0075\u006e\u0061bl\u0065\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0073",length );
};return string (_fac ),nil ;};func (_ddg *ttfParser )parseCmapFormat6 ()error {_cafc :=int (_ddg .ReadUShort ());_agd :=int (_ddg .ReadUShort ());_ab .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u0046o\u0072\u006d\u0061\u0074\u0036\u003a\u0020%s\u0020\u0066\u0069\u0072s\u0074\u0043\u006f\u0064\u0065\u003d\u0025\u0064\u0020en\u0074\u0072y\u0043\u006f\u0075\u006e\u0074\u003d\u0025\u0064",_ddg ._eee .String (),_cafc ,_agd );
for _ffe :=0;_ffe < _agd ;_ffe ++{_dfa :=GID (_ddg .ReadUShort ());_ddg ._eee .Chars [rune (_ffe +_cafc )]=_dfa ;};return nil ;};func RegisterStdFont (name StdFontName ,fnc func ()StdFont ,aliases ...StdFontName ){if _ ,_bce :=_ffg .read (name );_bce {panic ("\u0066o\u006e\u0074\u0020\u0061l\u0072\u0065\u0061\u0064\u0079 \u0072e\u0067i\u0073\u0074\u0065\u0072\u0065\u0064\u003a "+string (name ));
};_ffg .write (name ,fnc );for _ ,_bbf :=range aliases {RegisterStdFont (_bbf ,fnc );};};func _baf ()StdFont {_bef .Do (_fad );_fdb :=Descriptor {Name :CourierBoldName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0021,BBox :[4]float64 {-113,-250,749,801},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_fdb ,_bcc );};var _ffa *RuneCharSafeMap ;func (_fbc *ttfParser )parseCmapVersion (_eff int64 )error {_ab .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006da\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a \u006f\u0066\u0066s\u0065t\u003d\u0025\u0064",_eff );
if _fbc ._eee .Chars ==nil {_fbc ._eee .Chars =make (map[rune ]GID );};_fbc ._ceb .Seek (int64 (_fbc ._adfa ["\u0063\u006d\u0061\u0070"])+_eff ,_bc .SeekStart );var _cgb ,_bfcb uint32 ;_fcbbb :=_fbc .ReadUShort ();if _fcbbb < 8{_cgb =uint32 (_fbc .ReadUShort ());
_bfcb =uint32 (_fbc .ReadUShort ());}else {_fbc .ReadUShort ();_cgb =_fbc .ReadULong ();_bfcb =_fbc .ReadULong ();};_ab .Log .Debug ("\u0070\u0061\u0072\u0073\u0065\u0043m\u0061\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064 \u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067u\u0061g\u0065\u003d\u0025\u0064",_fcbbb ,_cgb ,_bfcb );
switch _fcbbb {case 0:return _fbc .parseCmapFormat0 ();case 6:return _fbc .parseCmapFormat6 ();case 12:return _fbc .parseCmapFormat12 ();default:_ab .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063m\u0061\u0070\u0020\u0066\u006f\u0072\u006da\u0074\u003d\u0025\u0064",_fcbbb );
return nil ;};};var _bec =[]int16 {722,889,722,722,722,722,722,722,722,722,722,667,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,556,722,722,722,722,333,333,333,333,333,333,333,333,389,722,722,611,611,611,611,611,889,722,722,722,722,722,722,889,722,722,722,722,722,722,722,722,556,722,667,667,667,667,556,556,556,556,556,611,611,611,556,722,722,722,722,722,722,722,722,722,722,944,722,722,722,722,611,611,611,611,444,444,444,444,333,444,667,444,444,778,444,444,469,541,500,921,444,500,278,200,480,480,333,333,333,200,350,444,444,333,444,444,333,500,333,278,250,250,760,500,500,500,500,588,500,400,333,564,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,564,500,333,333,333,556,500,556,500,500,167,500,500,500,500,333,564,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,500,500,278,278,344,278,564,549,564,471,278,778,333,564,500,564,500,500,500,500,500,549,500,500,500,500,500,500,722,333,500,500,500,500,750,750,300,276,310,500,500,500,453,333,333,476,833,250,250,1000,564,564,500,444,444,408,444,444,444,333,333,333,180,333,333,453,333,333,760,333,389,389,389,389,389,500,278,500,500,278,250,500,600,278,326,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,500,722,500,500,500,500,500,444,444,444,444,500};
func _gbec ()StdFont {_bef .Do (_fad );_bag :=Descriptor {Name :CourierName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0021,BBox :[4]float64 {-23,-250,715,805},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_bag ,_gd );};var _ad *RuneCharSafeMap ;var _dd *RuneCharSafeMap ;func (_bg StdFont )ToPdfObject ()_ca .PdfObject {_bdc :=_ca .MakeDict ();_bdc .Set ("\u0054\u0079\u0070\u0065",_ca .MakeName ("\u0046\u006f\u006e\u0074"));_bdc .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ca .MakeName ("\u0054\u0079\u0070e\u0031"));
_bdc .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_ca .MakeName (_bg .Name ()));_bdc .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_bg ._dg .ToPdfObject ());return _ca .MakeIndirectObject (_bdc );};func (_ac StdFont )Descriptor ()Descriptor {return _ac ._cab };
func (_bgf *ttfParser )ReadSByte ()(_dfg int8 ){_c .Read (_bgf ._ceb ,_c .BigEndian ,&_dfg );return _dfg };func NewFontFile2FromPdfObject (obj _ca .PdfObject )(TtfType ,error ){obj =_ca .TraceToDirectObject (obj );_bed ,_eeec :=obj .(*_ca .PdfObjectStream );
if !_eeec {_ab .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u0061\u0020\u0073\u0074\u0072e\u0061\u006d \u0028\u0025\u0054\u0029",obj );return TtfType {},_ca .ErrTypeError ;
};_gbd ,_fgb :=_ca .DecodeStream (_bed );if _fgb !=nil {return TtfType {},_fgb ;};_gdc :=ttfParser {_ceb :_ce .NewReader (_gbd )};return _gdc .Parse ();};func MakeRuneCharSafeMap (length int )*RuneCharSafeMap {return &RuneCharSafeMap {_cbb :make (map[rune ]CharMetrics ,length )};
};func (_gcd *RuneCharSafeMap )Write (b rune ,r CharMetrics ){_gcd ._ee .Lock ();defer _gcd ._ee .Unlock ();_gcd ._cbb [b ]=r ;};func _adf ()StdFont {_bfb .Do (_caf );_bbb :=Descriptor {Name :HelveticaBoldName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-170,-228,1003,962},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_bbb ,_dbe );};var _gdd =[]int16 {611,889,611,611,611,611,611,611,611,611,611,611,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,611,722,722,722,722,333,333,333,333,333,333,333,333,444,667,667,556,556,611,556,556,833,667,667,667,667,667,722,944,722,722,722,722,722,722,722,722,611,722,611,611,611,611,500,500,500,500,500,556,556,556,611,722,722,722,722,722,722,722,722,722,611,833,611,556,556,556,556,556,556,556,500,500,500,500,333,500,667,500,500,778,500,500,422,541,500,920,500,500,278,275,400,400,389,389,333,275,350,444,444,333,444,444,333,500,333,333,250,250,760,500,500,500,500,544,500,400,333,675,500,333,278,444,444,444,444,444,444,444,500,889,444,889,500,444,675,500,333,389,278,500,500,500,500,500,167,500,500,500,500,333,675,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,444,444,278,278,300,278,675,549,675,471,278,722,333,675,500,675,500,500,500,500,500,549,500,500,500,500,500,500,667,333,500,500,500,500,750,750,300,276,310,500,500,500,523,333,333,476,833,250,250,1000,675,675,500,500,500,420,556,556,556,333,333,333,214,389,389,453,389,389,760,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,300,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,444,667,444,444,444,444,500,389,389,389,389,500};
var _cga =[]GlyphName {"\u002en\u006f\u0074\u0064\u0065\u0066","\u002e\u006e\u0075l\u006c","\u006e\u006fn\u006d\u0061\u0072k\u0069\u006e\u0067\u0072\u0065\u0074\u0075\u0072\u006e","\u0073\u0070\u0061c\u0065","\u0065\u0078\u0063\u006c\u0061\u006d","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c","\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u0069\u0067\u006e","\u0064\u006f\u006c\u006c\u0061\u0072","\u0070e\u0072\u0063\u0065\u006e\u0074","\u0061m\u0070\u0065\u0072\u0073\u0061\u006ed","q\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067\u006c\u0065","\u0070a\u0072\u0065\u006e\u006c\u0065\u0066t","\u0070\u0061\u0072\u0065\u006e\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0074\u0065\u0072\u0069\u0073\u006b","\u0070\u006c\u0075\u0073","\u0063\u006f\u006dm\u0061","\u0068\u0079\u0070\u0068\u0065\u006e","\u0070\u0065\u0072\u0069\u006f\u0064","\u0073\u006c\u0061s\u0068","\u007a\u0065\u0072\u006f","\u006f\u006e\u0065","\u0074\u0077\u006f","\u0074\u0068\u0072e\u0065","\u0066\u006f\u0075\u0072","\u0066\u0069\u0076\u0065","\u0073\u0069\u0078","\u0073\u0065\u0076e\u006e","\u0065\u0069\u0067h\u0074","\u006e\u0069\u006e\u0065","\u0063\u006f\u006co\u006e","\u0073e\u006d\u0069\u0063\u006f\u006c\u006fn","\u006c\u0065\u0073\u0073","\u0065\u0071\u0075a\u006c","\u0067r\u0065\u0061\u0074\u0065\u0072","\u0071\u0075\u0065\u0073\u0074\u0069\u006f\u006e","\u0061\u0074","\u0041","\u0042","\u0043","\u0044","\u0045","\u0046","\u0047","\u0048","\u0049","\u004a","\u004b","\u004c","\u004d","\u004e","\u004f","\u0050","\u0051","\u0052","\u0053","\u0054","\u0055","\u0056","\u0057","\u0058","\u0059","\u005a","b\u0072\u0061\u0063\u006b\u0065\u0074\u006c\u0065\u0066\u0074","\u0062a\u0063\u006b\u0073\u006c\u0061\u0073h","\u0062\u0072\u0061c\u006b\u0065\u0074\u0072\u0069\u0067\u0068\u0074","a\u0073\u0063\u0069\u0069\u0063\u0069\u0072\u0063\u0075\u006d","\u0075\u006e\u0064\u0065\u0072\u0073\u0063\u006f\u0072\u0065","\u0067\u0072\u0061v\u0065","\u0061","\u0062","\u0063","\u0064","\u0065","\u0066","\u0067","\u0068","\u0069","\u006a","\u006b","\u006c","\u006d","\u006e","\u006f","\u0070","\u0071","\u0072","\u0073","\u0074","\u0075","\u0076","\u0077","\u0078","\u0079","\u007a","\u0062r\u0061\u0063\u0065\u006c\u0065\u0066t","\u0062\u0061\u0072","\u0062\u0072\u0061\u0063\u0065\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0063\u0069\u0069\u0074\u0069\u006c\u0064\u0065","\u0041d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0041\u0072\u0069n\u0067","\u0043\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0045\u0061\u0063\u0075\u0074\u0065","\u004e\u0074\u0069\u006c\u0064\u0065","\u004fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u0055d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0061\u0063\u0075\u0074\u0065","\u0061\u0067\u0072\u0061\u0076\u0065","a\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0074\u0069\u006c\u0064\u0065","\u0061\u0072\u0069n\u0067","\u0063\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0065\u0061\u0063\u0075\u0074\u0065","\u0065\u0067\u0072\u0061\u0076\u0065","e\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0065d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0069\u0061\u0063\u0075\u0074\u0065","\u0069\u0067\u0072\u0061\u0076\u0065","i\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0069d\u0069\u0065\u0072\u0065\u0073\u0069s","\u006e\u0074\u0069\u006c\u0064\u0065","\u006f\u0061\u0063\u0075\u0074\u0065","\u006f\u0067\u0072\u0061\u0076\u0065","o\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u006fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u006f\u0074\u0069\u006c\u0064\u0065","\u0075\u0061\u0063\u0075\u0074\u0065","\u0075\u0067\u0072\u0061\u0076\u0065","u\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0075d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0064\u0061\u0067\u0067\u0065\u0072","\u0064\u0065\u0067\u0072\u0065\u0065","\u0063\u0065\u006e\u0074","\u0073\u0074\u0065\u0072\u006c\u0069\u006e\u0067","\u0073e\u0063\u0074\u0069\u006f\u006e","\u0062\u0075\u006c\u006c\u0065\u0074","\u0070a\u0072\u0061\u0067\u0072\u0061\u0070h","\u0067\u0065\u0072\u006d\u0061\u006e\u0064\u0062\u006c\u0073","\u0072\u0065\u0067\u0069\u0073\u0074\u0065\u0072\u0065\u0064","\u0063o\u0070\u0079\u0072\u0069\u0067\u0068t","\u0074r\u0061\u0064\u0065\u006d\u0061\u0072k","\u0061\u0063\u0075t\u0065","\u0064\u0069\u0065\u0072\u0065\u0073\u0069\u0073","\u006e\u006f\u0074\u0065\u0071\u0075\u0061\u006c","\u0041\u0045","\u004f\u0073\u006c\u0061\u0073\u0068","\u0069\u006e\u0066\u0069\u006e\u0069\u0074\u0079","\u0070l\u0075\u0073\u006d\u0069\u006e\u0075s","\u006ce\u0073\u0073\u0065\u0071\u0075\u0061l","\u0067\u0072\u0065a\u0074\u0065\u0072\u0065\u0071\u0075\u0061\u006c","\u0079\u0065\u006e","\u006d\u0075","p\u0061\u0072\u0074\u0069\u0061\u006c\u0064\u0069\u0066\u0066","\u0073u\u006d\u006d\u0061\u0074\u0069\u006fn","\u0070r\u006f\u0064\u0075\u0063\u0074","\u0070\u0069","\u0069\u006e\u0074\u0065\u0067\u0072\u0061\u006c","o\u0072\u0064\u0066\u0065\u006d\u0069\u006e\u0069\u006e\u0065","\u006f\u0072\u0064m\u0061\u0073\u0063\u0075\u006c\u0069\u006e\u0065","\u004f\u006d\u0065g\u0061","\u0061\u0065","\u006f\u0073\u006c\u0061\u0073\u0068","\u0071\u0075\u0065s\u0074\u0069\u006f\u006e\u0064\u006f\u0077\u006e","\u0065\u0078\u0063\u006c\u0061\u006d\u0064\u006f\u0077\u006e","\u006c\u006f\u0067\u0069\u0063\u0061\u006c\u006e\u006f\u0074","\u0072a\u0064\u0069\u0063\u0061\u006c","\u0066\u006c\u006f\u0072\u0069\u006e","a\u0070\u0070\u0072\u006f\u0078\u0065\u0071\u0075\u0061\u006c","\u0044\u0065\u006ct\u0061","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074r\u0069\u0067\u0068\u0074","\u0065\u006c\u006c\u0069\u0070\u0073\u0069\u0073","\u006e\u006fn\u0062\u0072\u0065a\u006b\u0069\u006e\u0067\u0073\u0070\u0061\u0063\u0065","\u0041\u0067\u0072\u0061\u0076\u0065","\u0041\u0074\u0069\u006c\u0064\u0065","\u004f\u0074\u0069\u006c\u0064\u0065","\u004f\u0045","\u006f\u0065","\u0065\u006e\u0064\u0061\u0073\u0068","\u0065\u006d\u0064\u0061\u0073\u0068","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u006c\u0065\u0066\u0074","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c\u0072\u0069\u0067\u0068\u0074","\u0071u\u006f\u0074\u0065\u006c\u0065\u0066t","\u0071\u0075\u006f\u0074\u0065\u0072\u0069\u0067\u0068\u0074","\u0064\u0069\u0076\u0069\u0064\u0065","\u006co\u007a\u0065\u006e\u0067\u0065","\u0079d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0059d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0066\u0072\u0061\u0063\u0074\u0069\u006f\u006e","\u0063\u0075\u0072\u0072\u0065\u006e\u0063\u0079","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006c\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006cr\u0069\u0067\u0068\u0074","\u0066\u0069","\u0066\u006c","\u0064a\u0067\u0067\u0065\u0072\u0064\u0062l","\u0070\u0065\u0072\u0069\u006f\u0064\u0063\u0065\u006et\u0065\u0072\u0065\u0064","\u0071\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067l\u0062\u0061\u0073\u0065","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u0062\u0061\u0073\u0065","p\u0065\u0072\u0074\u0068\u006f\u0075\u0073\u0061\u006e\u0064","A\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","E\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0041\u0061\u0063\u0075\u0074\u0065","\u0045d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0045\u0067\u0072\u0061\u0076\u0065","\u0049\u0061\u0063\u0075\u0074\u0065","I\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0049d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0049\u0067\u0072\u0061\u0076\u0065","\u004f\u0061\u0063\u0075\u0074\u0065","O\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061\u0070\u0070l\u0065","\u004f\u0067\u0072\u0061\u0076\u0065","\u0055\u0061\u0063\u0075\u0074\u0065","U\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0055\u0067\u0072\u0061\u0076\u0065","\u0064\u006f\u0074\u006c\u0065\u0073\u0073\u0069","\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0074\u0069\u006cd\u0065","\u006d\u0061\u0063\u0072\u006f\u006e","\u0062\u0072\u0065v\u0065","\u0064o\u0074\u0061\u0063\u0063\u0065\u006et","\u0072\u0069\u006e\u0067","\u0063e\u0064\u0069\u006c\u006c\u0061","\u0068\u0075\u006eg\u0061\u0072\u0075\u006d\u006c\u0061\u0075\u0074","\u006f\u0067\u006f\u006e\u0065\u006b","\u0063\u0061\u0072o\u006e","\u004c\u0073\u006c\u0061\u0073\u0068","\u006c\u0073\u006c\u0061\u0073\u0068","\u0053\u0063\u0061\u0072\u006f\u006e","\u0073\u0063\u0061\u0072\u006f\u006e","\u005a\u0063\u0061\u0072\u006f\u006e","\u007a\u0063\u0061\u0072\u006f\u006e","\u0062r\u006f\u006b\u0065\u006e\u0062\u0061r","\u0045\u0074\u0068","\u0065\u0074\u0068","\u0059\u0061\u0063\u0075\u0074\u0065","\u0079\u0061\u0063\u0075\u0074\u0065","\u0054\u0068\u006fr\u006e","\u0074\u0068\u006fr\u006e","\u006d\u0069\u006eu\u0073","\u006d\u0075\u006c\u0074\u0069\u0070\u006c\u0079","o\u006e\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","t\u0077\u006f\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u0074\u0068\u0072\u0065\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u006fn\u0065\u0068\u0061\u006c\u0066","\u006f\u006e\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072","\u0074\u0068\u0072\u0065\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072\u0073","\u0066\u0072\u0061n\u0063","\u0047\u0062\u0072\u0065\u0076\u0065","\u0067\u0062\u0072\u0065\u0076\u0065","\u0049\u0064\u006f\u0074\u0061\u0063\u0063\u0065\u006e\u0074","\u0053\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0073\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0043\u0061\u0063\u0075\u0074\u0065","\u0063\u0061\u0063\u0075\u0074\u0065","\u0043\u0063\u0061\u0072\u006f\u006e","\u0063\u0063\u0061\u0072\u006f\u006e","\u0064\u0063\u0072\u006f\u0061\u0074"};
const (FontWeightMedium FontWeight =iota ;FontWeightBold ;FontWeightRoman ;);func (_eeb *RuneCharSafeMap )Range (f func (_ag rune ,_ccg CharMetrics )(_aa bool )){_eeb ._ee .RLock ();defer _eeb ._ee .RUnlock ();for _ed ,_fa :=range _eeb ._cbb {if f (_ed ,_fa ){break ;
};};};func (_aadc *ttfParser )ParseOS2 ()error {if _dggf :=_aadc .Seek ("\u004f\u0053\u002f\u0032");_dggf !=nil {return _dggf ;};_daga :=_aadc .ReadUShort ();_aadc .Skip (4*2);_aadc .Skip (11*2+10+4*4+4);_cce :=_aadc .ReadUShort ();_aadc ._eee .Bold =(_cce &32)!=0;
_aadc .Skip (2*2);_aadc ._eee .TypoAscender =_aadc .ReadShort ();_aadc ._eee .TypoDescender =_aadc .ReadShort ();if _daga >=2{_aadc .Skip (3*2+2*4+2);_aadc ._eee .CapHeight =_aadc .ReadShort ();}else {_aadc ._eee .CapHeight =0;};return nil ;};const (CourierName =StdFontName ("\u0043o\u0075\u0072\u0069\u0065\u0072");
CourierBoldName =StdFontName ("\u0043\u006f\u0075r\u0069\u0065\u0072\u002d\u0042\u006f\u006c\u0064");CourierObliqueName =StdFontName ("\u0043o\u0075r\u0069\u0065\u0072\u002d\u004f\u0062\u006c\u0069\u0071\u0075\u0065");CourierBoldObliqueName =StdFontName ("\u0043\u006f\u0075\u0072ie\u0072\u002d\u0042\u006f\u006c\u0064\u004f\u0062\u006c\u0069\u0071\u0075\u0065");
);func (_gea *ttfParser )readByte ()(_cbdb uint8 ){_c .Read (_gea ._ceb ,_c .BigEndian ,&_cbdb );return _cbdb ;};type GID =_cc .GID ;var _agc *RuneCharSafeMap ;func (_ef *TtfType )MakeEncoder ()(_cc .SimpleEncoder ,error ){_gddf :=make (map[_cc .CharCode ]GlyphName );
for _bde :=_cc .CharCode (0);_bde <=256;_bde ++{_aeda :=rune (_bde );_fbfe ,_gcf :=_ef .Chars [_aeda ];if !_gcf {continue ;};var _bfbb GlyphName ;if int (_fbfe )>=0&&int (_fbfe )< len (_ef .GlyphNames ){_bfbb =_ef .GlyphNames [_fbfe ];}else {_eaf :=rune (_fbfe );
if _gbg ,_cabd :=_cc .RuneToGlyph (_eaf );_cabd {_bfbb =_gbg ;};};if _bfbb !=""{_gddf [_bde ]=_bfbb ;};};if len (_gddf )==0{_ab .Log .Debug ("WA\u0052\u004eI\u004e\u0047\u003a\u0020\u005a\u0065\u0072\u006f\u0020l\u0065\u006e\u0067\u0074\u0068\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u002e\u0020\u0074\u0074\u0066=\u0025s\u0020\u0043\u0068\u0061\u0072\u0073\u003d\u005b%\u00200\u0032\u0078]",_ef ,_ef .Chars );
};return _cc .NewCustomSimpleTextEncoder (_gddf ,nil );};func (_eebc *ttfParser )ParseHhea ()error {if _ceg :=_eebc .Seek ("\u0068\u0068\u0065\u0061");_ceg !=nil {return _ceg ;};_eebc .Skip (4+15*2);_eebc ._ddf =_eebc .ReadUShort ();return nil ;};func (_fb *RuneCharSafeMap )Copy ()*RuneCharSafeMap {_afd :=MakeRuneCharSafeMap (_fb .Length ());
_fb .Range (func (_bd rune ,_ff CharMetrics )(_cf bool ){_afd ._cbb [_bd ]=_ff ;return false });return _afd ;};func (_dbc *ttfParser )ReadShort ()(_aec int16 ){_c .Read (_dbc ._ceb ,_c .BigEndian ,&_aec );return _aec };func (_eeab *ttfParser )ReadUShort ()(_fdcf uint16 ){_c .Read (_eeab ._ceb ,_c .BigEndian ,&_fdcf );
return _fdcf ;};const (_eba ="\u0054\u0069\u006de\u0073";TimesRomanName =StdFontName ("T\u0069\u006d\u0065\u0073\u002d\u0052\u006f\u006d\u0061\u006e");TimesBoldName =StdFontName ("\u0054\u0069\u006d\u0065\u0073\u002d\u0042\u006f\u006c\u0064");TimesItalicName =StdFontName ("\u0054\u0069\u006de\u0073\u002d\u0049\u0074\u0061\u006c\u0069\u0063");
TimesBoldItalicName =StdFontName ("\u0054\u0069m\u0065\u0073\u002dB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063"););func _acd ()StdFont {_bfb .Do (_caf );_db :=Descriptor {Name :HelveticaName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0020,BBox :[4]float64 {-166,-225,1000,931},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_db ,_edd );};var _cagc *RuneCharSafeMap ;type CharMetrics struct{Wx float64 ;Wy float64 ;};func TtfParseFile (fileStr string )(TtfType ,error ){_cdg ,_fge :=_b .Open (fileStr );if _fge !=nil {return TtfType {},_fge ;};defer _cdg .Close ();
return TtfParse (_cdg );};var _dbe *RuneCharSafeMap ;var _ecg =[]int16 {667,1000,667,667,667,667,667,667,667,667,667,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,500,667,667,556,556,556,556,556,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,667,556,556,469,584,389,1015,556,556,278,260,334,334,278,278,333,260,350,500,500,333,500,500,333,556,333,278,278,250,737,556,556,556,556,643,556,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,556,278,333,278,500,556,500,556,556,167,556,556,556,611,333,584,549,556,556,333,333,556,333,333,222,278,278,278,278,278,222,222,500,500,222,222,299,222,584,549,584,471,222,833,333,584,556,584,556,556,556,556,556,549,556,556,556,556,556,556,944,333,556,556,556,556,834,834,333,370,365,611,556,556,537,333,333,476,889,278,278,1000,584,584,556,556,611,355,333,333,333,222,222,222,191,333,333,453,333,333,737,333,500,500,500,500,500,556,278,556,556,278,278,556,600,278,317,278,556,556,834,333,333,1000,556,333,556,556,556,556,556,556,556,556,556,556,500,722,500,500,500,500,556,500,500,500,500,556};
func (_fce *ttfParser )ParseComponents ()error {if _dda :=_fce .ParseHead ();_dda !=nil {return _dda ;};if _eg :=_fce .ParseHhea ();_eg !=nil {return _eg ;};if _dbee :=_fce .ParseMaxp ();_dbee !=nil {return _dbee ;};if _ga :=_fce .ParseHmtx ();_ga !=nil {return _ga ;
};if _ ,_agfc :=_fce ._adfa ["\u006e\u0061\u006d\u0065"];_agfc {if _efa :=_fce .ParseName ();_efa !=nil {return _efa ;};};if _ ,_caa :=_fce ._adfa ["\u004f\u0053\u002f\u0032"];_caa {if _fea :=_fce .ParseOS2 ();_fea !=nil {return _fea ;};};if _ ,_cg :=_fce ._adfa ["\u0070\u006f\u0073\u0074"];
_cg {if _bdd :=_fce .ParsePost ();_bdd !=nil {return _bdd ;};};if _ ,_aac :=_fce ._adfa ["\u0063\u006d\u0061\u0070"];_aac {if _cbbge :=_fce .ParseCmap ();_cbbge !=nil {return _cbbge ;};};return nil ;};func (_gbgd *ttfParser )parseCmapSubtable10 (_gaf int64 )error {if _gbgd ._eee .Chars ==nil {_gbgd ._eee .Chars =make (map[rune ]GID );
};_gbgd ._ceb .Seek (int64 (_gbgd ._adfa ["\u0063\u006d\u0061\u0070"])+_gaf ,_bc .SeekStart );var _edf ,_ace uint32 ;_bfc :=_gbgd .ReadUShort ();if _bfc < 8{_edf =uint32 (_gbgd .ReadUShort ());_ace =uint32 (_gbgd .ReadUShort ());}else {_gbgd .ReadUShort ();
_edf =_gbgd .ReadULong ();_ace =_gbgd .ReadULong ();};_ab .Log .Trace ("\u0070\u0061r\u0073\u0065\u0043\u006d\u0061p\u0053\u0075\u0062\u0074\u0061b\u006c\u0065\u0031\u0030\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067\u0075\u0061\u0067\u0065\u003d\u0025\u0064",_bfc ,_edf ,_ace );
if _bfc !=0{return _af .New ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063\u006d\u0061p\u0020s\u0075\u0062\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_aag ,_dgg :=_gbgd .ReadStr (256);if _dgg !=nil {return _dgg ;
};_gbc :=[]byte (_aag );for _dgdb ,_beaa :=range _gbc {_gbgd ._eee .Chars [rune (_dgdb )]=GID (_beaa );if _beaa !=0{_g .Printf ("\u0009\u0030\u0078\u002502\u0078\u0020\u279e\u0020\u0030\u0078\u0025\u0030\u0032\u0078\u003d\u0025\u0063\u000a",_dgdb ,_beaa ,rune (_beaa ));
};};return nil ;};type ttfParser struct{_eee TtfType ;_ceb _bc .ReadSeeker ;_adfa map[string ]uint32 ;_ddf uint16 ;_agf uint16 ;};type Font interface{Encoder ()_cc .TextEncoder ;GetRuneMetrics (_cb rune )(CharMetrics ,bool );};func (_gf *RuneCharSafeMap )Read (b rune )(CharMetrics ,bool ){_gf ._ee .RLock ();
defer _gf ._ee .RUnlock ();_fc ,_gfc :=_gf ._cbb [b ];return _fc ,_gfc ;};var _faf =[]rune {'A','Æ','Á','Ă','Â','Ä','À','Ā','Ą','Å','Ã','B','C','Ć','Č','Ç','D','Ď','Đ','∆','E','É','Ě','Ê','Ë','Ė','È','Ē','Ę','Ð','€','F','G','Ğ','Ģ','H','I','Í','Î','Ï','İ','Ì','Ī','Į','J','K','Ķ','L','Ĺ','Ľ','Ļ','Ł','M','N','Ń','Ň','Ņ','Ñ','O','Œ','Ó','Ô','Ö','Ò','Ő','Ō','Ø','Õ','P','Q','R','Ŕ','Ř','Ŗ','S','Ś','Š','Ş','Ș','T','Ť','Ţ','Þ','U','Ú','Û','Ü','Ù','Ű','Ū','Ų','Ů','V','W','X','Y','Ý','Ÿ','Z','Ź','Ž','Ż','a','á','ă','â','´','ä','æ','à','ā','&','ą','å','^','~','*','@','ã','b','\\','|','{','}','[',']','˘','¦','•','c','ć','ˇ','č','ç','¸','¢','ˆ',':',',','\uf6c3','©','¤','d','†','‡','ď','đ','°','¨','÷','$','˙','ı','e','é','ě','ê','ë','ė','è','8','…','ē','—','–','ę','=','ð','!','¡','f','ﬁ','5','ﬂ','ƒ','4','⁄','g','ğ','ģ','ß','`','>','≥','«','»','‹','›','h','˝','-','i','í','î','ï','ì','ī','į','j','k','ķ','l','ĺ','ľ','ļ','<','≤','¬','◊','ł','m','¯','−','µ','×','n','ń','ň','ņ','9','≠','ñ','#','o','ó','ô','ö','œ','˛','ò','ő','ō','1','½','¼','¹','ª','º','ø','õ','p','¶','(',')','∂','%','.','·','‰','+','±','q','?','¿','"','„','“','”','‘','’','‚','\'','r','ŕ','√','ř','ŗ','®','˚','s','ś','š','ş','ș','§',';','7','6','/',' ','£','∑','t','ť','ţ','þ','3','¾','³','˜','™','2','²','u','ú','û','ü','ù','ű','ū','_','ų','ů','v','w','x','y','ý','ÿ','¥','z','ź','ž','ż','0'};
