//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package fonts ;import (_ae "bytes";_fd "encoding/binary";_f "errors";_ad "fmt";_af "github.com/unidoc/unipdf/v3/common";_aed "github.com/unidoc/unipdf/v3/core";_bb "github.com/unidoc/unipdf/v3/internal/cmap";_g "github.com/unidoc/unipdf/v3/internal/textencoding";
_d "golang.org/x/xerrors";_eb "io";_cb "os";_cc "regexp";_c "sort";_e "strings";_b "sync";);func (_fdf StdFont )ToPdfObject ()_aed .PdfObject {_fbf :=_aed .MakeDict ();_fbf .Set ("\u0054\u0079\u0070\u0065",_aed .MakeName ("\u0046\u006f\u006e\u0074"));_fbf .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aed .MakeName ("\u0054\u0079\u0070e\u0031"));
_fbf .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_aed .MakeName (_fdf .Name ()));_fbf .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_fdf ._bge .ToPdfObject ());return _aed .MakeIndirectObject (_fbf );};func _eaa ()StdFont {_edc .Do (_be );
_abg :=Descriptor {Name :CourierName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0021,BBox :[4]float64 {-23,-250,715,805},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};return NewStdFont (_abg ,_eda );
};func (_cbba *TtfType )NewEncoder ()_g .TextEncoder {return _g .NewTrueTypeFontEncoder (_cbba .Chars )};type Descriptor struct{Name StdFontName ;Family string ;Weight FontWeight ;Flags uint ;BBox [4]float64 ;ItalicAngle float64 ;Ascent float64 ;Descent float64 ;
CapHeight float64 ;XHeight float64 ;StemV float64 ;StemH float64 ;};var _eda *RuneCharSafeMap ;var _ecd =[]int16 {667,944,667,667,667,667,667,667,667,667,667,667,667,667,667,667,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,667,722,722,722,778,389,389,389,389,389,389,389,389,500,667,667,611,611,611,611,611,889,722,722,722,722,722,722,944,722,722,722,722,722,722,722,722,611,722,667,667,667,667,556,556,556,556,556,611,611,611,611,722,722,722,722,722,722,722,722,722,667,889,667,611,611,611,611,611,611,611,500,500,500,500,333,500,722,500,500,778,500,500,570,570,500,832,500,500,278,220,348,348,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,500,500,500,608,500,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,389,389,333,556,500,556,500,500,167,500,500,500,500,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,278,500,500,278,278,382,278,570,549,606,494,278,778,333,606,576,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,266,300,500,500,500,500,333,333,494,833,250,250,1000,570,570,500,500,500,555,500,500,500,333,333,333,278,389,389,549,389,389,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,366,278,500,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,444,667,500,444,444,444,500,389,389,389,389,500};
func (_gd StdFont )GetMetricsTable ()*RuneCharSafeMap {return _gd ._cfb };func _cff ()StdFont {_efd .Do (_eac );_faf :=Descriptor {Name :TimesBoldName ,Family :_adg ,Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,935},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :676,XHeight :461,StemV :139,StemH :44};
return NewStdFont (_faf ,_bagf );};func _bbe (){_gac =MakeRuneCharSafeMap (len (_dff ));_cfa =MakeRuneCharSafeMap (len (_dff ));for _gge ,_agb :=range _dff {_gac .Write (_agb ,CharMetrics {Wx :float64 (_aad [_gge ])});_cfa .Write (_agb ,CharMetrics {Wx :float64 (_dbc [_gge ])});
};_acb =_gac .Copy ();_cda =_cfa .Copy ();};var _bga *RuneCharSafeMap ;func _eac (){_age =MakeRuneCharSafeMap (len (_dff ));_bagf =MakeRuneCharSafeMap (len (_dff ));_bga =MakeRuneCharSafeMap (len (_dff ));_gee =MakeRuneCharSafeMap (len (_dff ));for _dfa ,_bgge :=range _dff {_age .Write (_bgge ,CharMetrics {Wx :float64 (_daf [_dfa ])});
_bagf .Write (_bgge ,CharMetrics {Wx :float64 (_gb [_dfa ])});_bga .Write (_bgge ,CharMetrics {Wx :float64 (_ecd [_dfa ])});_gee .Write (_bgge ,CharMetrics {Wx :float64 (_efb [_dfa ])});};};var _edc _b .Once ;type CharMetrics struct{Wx float64 ;Wy float64 ;
};func _acd ()StdFont {_bbcf .Do (_bbe );_gaf :=Descriptor {Name :HelveticaObliqueName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-170,-225,1116,931},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_gaf ,_acb );};type TtfType struct{UnitsPerEm uint16 ;PostScriptName string ;Bold bool ;ItalicAngle float64 ;IsFixedPitch bool ;TypoAscender int16 ;TypoDescender int16 ;UnderlinePosition int16 ;UnderlineThickness int16 ;Xmin ,Ymin ,Xmax ,Ymax int16 ;
CapHeight int16 ;Widths []uint16 ;Chars map[rune ]GID ;GlyphNames []GlyphName ;};func (_cfg *ttfParser )readByte ()(_eec uint8 ){_fd .Read (_cfg ._cag ,_fd .BigEndian ,&_eec );return _eec ;};func NewStdFontByName (name StdFontName )(StdFont ,bool ){_cg ,_bd :=_dae .read (name );
if !_bd {return StdFont {},false ;};return _cg (),true ;};func (_ffda *ttfParser )ParseHead ()error {if _cdfb :=_ffda .Seek ("\u0068\u0065\u0061\u0064");_cdfb !=nil {return _cdfb ;};_ffda .Skip (3*4);_eab :=_ffda .ReadULong ();if _eab !=0x5F0F3CF5{_af .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0063\u006fr\u0072e\u0063\u0074\u0020\u006d\u0061\u0067\u0069\u0063\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u002e\u0020\u0046\u006fn\u0074\u0020\u006d\u0061\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0020\u0063\u006f\u0072\u0072\u0065\u0063t\u006c\u0079\u002e\u0020\u0025\u0073",_ffda );
};_ffda .Skip (2);_ffda ._aee .UnitsPerEm =_ffda .ReadUShort ();_ffda .Skip (2*8);_ffda ._aee .Xmin =_ffda .ReadShort ();_ffda ._aee .Ymin =_ffda .ReadShort ();_ffda ._aee .Xmax =_ffda .ReadShort ();_ffda ._aee .Ymax =_ffda .ReadShort ();return nil ;};
func IsStdFont (name StdFontName )bool {_ ,_fbc :=_dae .read (name );return _fbc };func (_aac *ttfParser )ParseCmap ()error {var _fdc int64 ;if _bfb :=_aac .Seek ("\u0063\u006d\u0061\u0070");_bfb !=nil {return _bfb ;};_af .Log .Trace ("\u0050a\u0072\u0073\u0065\u0043\u006d\u0061p");
_aac .ReadUShort ();_def :=int (_aac .ReadUShort ());_aadc :=int64 (0);_ead :=int64 (0);_ddcb :=int64 (0);for _bed :=0;_bed < _def ;_bed ++{_bfbd :=_aac .ReadUShort ();_ddca :=_aac .ReadUShort ();_fdc =int64 (_aac .ReadULong ());if _bfbd ==3&&_ddca ==1{_ead =_fdc ;
}else if _bfbd ==3&&_ddca ==10{_ddcb =_fdc ;}else if _bfbd ==1&&_ddca ==0{_aadc =_fdc ;};};if _aadc !=0{if _bagc :=_aac .parseCmapVersion (_aadc );_bagc !=nil {return _bagc ;};};if _ead !=0{if _eaaa :=_aac .parseCmapSubtable31 (_ead );_eaaa !=nil {return _eaaa ;
};};if _ddcb !=0{if _ace :=_aac .parseCmapVersion (_ddcb );_ace !=nil {return _ace ;};};if _ead ==0&&_aadc ==0&&_ddcb ==0{_af .Log .Debug ("\u0074\u0074\u0066P\u0061\u0072\u0073\u0065\u0072\u002e\u0050\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u002e\u0020\u004e\u006f\u0020\u0033\u0031\u002c\u0020\u0031\u0030\u002c\u0020\u00331\u0030\u0020\u0074\u0061\u0062\u006c\u0065\u002e");
};return nil ;};func _fc ()StdFont {_bbcf .Do (_bbe );_ff :=Descriptor {Name :HelveticaName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0020,BBox :[4]float64 {-166,-225,1000,931},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_ff ,_gac );};func _abb ()StdFont {_bbcf .Do (_bbe );_cgc :=Descriptor {Name :HelveticaBoldName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-170,-228,1003,962},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_cgc ,_cfa );};func (_ebe *ttfParser )ParseComponents ()error {if _baa :=_ebe .ParseHead ();_baa !=nil {return _baa ;};if _afb :=_ebe .ParseHhea ();_afb !=nil {return _afb ;};if _dfd :=_ebe .ParseMaxp ();_dfd !=nil {return _dfd ;};if _cbag :=_ebe .ParseHmtx ();
_cbag !=nil {return _cbag ;};if _ ,_cbac :=_ebe ._ffd ["\u006e\u0061\u006d\u0065"];_cbac {if _adga :=_ebe .ParseName ();_adga !=nil {return _adga ;};};if _ ,_gae :=_ebe ._ffd ["\u004f\u0053\u002f\u0032"];_gae {if _ecg :=_ebe .ParseOS2 ();_ecg !=nil {return _ecg ;
};};if _ ,_ede :=_ebe ._ffd ["\u0070\u006f\u0073\u0074"];_ede {if _agbf :=_ebe .ParsePost ();_agbf !=nil {return _agbf ;};};if _ ,_facd :=_ebe ._ffd ["\u0063\u006d\u0061\u0070"];_facd {if _bfc :=_ebe .ParseCmap ();_bfc !=nil {return _bfc ;};};return nil ;
};var _efd _b .Once ;type StdFontName string ;var _ Font =StdFont {};func (_aa StdFont )Descriptor ()Descriptor {return _aa ._cca };const (HelveticaName =StdFontName ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");HelveticaBoldName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061-\u0042\u006f\u006c\u0064");
HelveticaObliqueName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061\u002d\u004f\u0062l\u0069\u0071\u0075\u0065");HelveticaBoldObliqueName =StdFontName ("H\u0065\u006c\u0076\u0065ti\u0063a\u002d\u0042\u006f\u006c\u0064O\u0062\u006c\u0069\u0071\u0075\u0065");
);func (_adb *RuneCharSafeMap )Write (b rune ,r CharMetrics ){_adb ._bf .Lock ();defer _adb ._bf .Unlock ();_adb ._fe [b ]=r ;};type StdFont struct{_cca Descriptor ;_cfb *RuneCharSafeMap ;_bge _g .TextEncoder ;};func (_agf StdFont )Encoder ()_g .TextEncoder {return _agf ._bge };
func (_fba *TtfType )MakeEncoder ()(_g .SimpleEncoder ,error ){_cfba :=make (map[_g .CharCode ]GlyphName );for _beb :=_g .CharCode (0);_beb <=256;_beb ++{_ced :=rune (_beb );_cba ,_agd :=_fba .Chars [_ced ];if !_agd {continue ;};var _cef GlyphName ;if int (_cba )>=0&&int (_cba )< len (_fba .GlyphNames ){_cef =_fba .GlyphNames [_cba ];
}else {_dg :=rune (_cba );if _aab ,_aabg :=_g .RuneToGlyph (_dg );_aabg {_cef =_aab ;};};if _cef !=""{_cfba [_beb ]=_cef ;};};if len (_cfba )==0{_af .Log .Debug ("WA\u0052\u004eI\u004e\u0047\u003a\u0020\u005a\u0065\u0072\u006f\u0020l\u0065\u006e\u0067\u0074\u0068\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u002e\u0020\u0074\u0074\u0066=\u0025s\u0020\u0043\u0068\u0061\u0072\u0073\u003d\u005b%\u00200\u0032\u0078]",_fba ,_fba .Chars );
};return _g .NewCustomSimpleTextEncoder (_cfba ,nil );};func init (){RegisterStdFont (CourierName ,_eaa ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u0043\u006f\u0075\u0072\u0069e\u0072\u004e\u0065\u0077","\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077");
RegisterStdFont (CourierBoldName ,_db ,"\u0043o\u0075r\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (CourierObliqueName ,_ce ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (CourierBoldObliqueName ,_daec ,"C\u006f\u0075\u0072\u0069er\u004ee\u0077\u002c\u0042\u006f\u006cd\u0049\u0074\u0061\u006c\u0069\u0063");};func (_ggab *ttfParser )ParseMaxp ()error {if _fdb :=_ggab .Seek ("\u006d\u0061\u0078\u0070");_fdb !=nil {return _fdb ;
};_ggab .Skip (4);_ggab ._ggd =_ggab .ReadUShort ();return nil ;};func (_ccb *RuneCharSafeMap )Length ()int {_ccb ._bf .RLock ();defer _ccb ._bf .RUnlock ();return len (_ccb ._fe );};var _aad =[]int16 {667,1000,667,667,667,667,667,667,667,667,667,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,500,667,667,556,556,556,556,556,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,667,556,556,469,584,389,1015,556,556,278,260,334,334,278,278,333,260,350,500,500,333,500,500,333,556,333,278,278,250,737,556,556,556,556,643,556,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,556,278,333,278,500,556,500,556,556,167,556,556,556,611,333,584,549,556,556,333,333,556,333,333,222,278,278,278,278,278,222,222,500,500,222,222,299,222,584,549,584,471,222,833,333,584,556,584,556,556,556,556,556,549,556,556,556,556,556,556,944,333,556,556,556,556,834,834,333,370,365,611,556,556,537,333,333,476,889,278,278,1000,584,584,556,556,611,355,333,333,333,222,222,222,191,333,333,453,333,333,737,333,500,500,500,500,500,556,278,556,556,278,278,556,600,278,317,278,556,556,834,333,333,1000,556,333,556,556,556,556,556,556,556,556,556,556,500,722,500,500,500,500,556,500,500,500,500,556};
func _bdd ()StdFont {_dcd :=_g .NewSymbolEncoder ();_dfbd :=Descriptor {Name :SymbolName ,Family :string (SymbolName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-180,-293,1090,1010},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :85,StemH :92};
return NewStdFontWithEncoding (_dfbd ,_aegb ,_dcd );};var _ebb *RuneCharSafeMap ;var _cfa *RuneCharSafeMap ;var _bbcf _b .Once ;var _age *RuneCharSafeMap ;var _dae =&fontMap {_ac :make (map[StdFontName ]func ()StdFont )};type RuneCharSafeMap struct{_fe map[rune ]CharMetrics ;
_bf _b .RWMutex ;};func (_acf *ttfParser )ParseHhea ()error {if _aade :=_acf .Seek ("\u0068\u0068\u0065\u0061");_aade !=nil {return _aade ;};_acf .Skip (4+15*2);_acf ._ebde =_acf .ReadUShort ();return nil ;};func init (){RegisterStdFont (HelveticaName ,_fc ,"\u0041\u0072\u0069a\u006c");
RegisterStdFont (HelveticaBoldName ,_abb ,"\u0041\u0072\u0069\u0061\u006c\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (HelveticaObliqueName ,_acd ,"\u0041\u0072\u0069a\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063");RegisterStdFont (HelveticaBoldObliqueName ,_aeg ,"\u0041\u0072i\u0061\u006c\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
};func (_ggea *ttfParser )parseCmapFormat0 ()error {_ged ,_bca :=_ggea .ReadStr (256);if _bca !=nil {return _bca ;};_fbcb :=[]byte (_ged );_af .Log .Trace ("\u0070a\u0072\u0073e\u0043\u006d\u0061p\u0046\u006f\u0072\u006d\u0061\u0074\u0030:\u0020\u0025\u0073\u000a\u0064\u0061t\u0061\u0053\u0074\u0072\u003d\u0025\u002b\u0071\u000a\u0064\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d",_ggea ._aee .String (),_ged ,_fbcb );
for _gfg ,_ebfc :=range _fbcb {_ggea ._aee .Chars [rune (_gfg )]=GID (_ebfc );};return nil ;};func (_fdfd *TtfType )MakeToUnicode ()*_bb .CMap {_cec :=make (map[_bb .CharCode ]rune );if len (_fdfd .GlyphNames )==0{return _bb .NewToUnicodeCMap (_cec );};
for _aede ,_eca :=range _fdfd .Chars {_geb :=_bb .CharCode (_aede );_cgd :=_fdfd .GlyphNames [_eca ];_fg ,_ddg :=_g .GlyphToRune (_cgd );if !_ddg {_af .Log .Debug ("\u004e\u006f \u0072\u0075\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065\u003d\u0030\u0078\u0025\u0030\u0034\u0078\u0020\u0067\u006c\u0079\u0070h=\u0025\u0071",_aede ,_cgd );
_fg =_g .MissingCodeRune ;};_cec [_geb ]=_fg ;};return _bb .NewToUnicodeCMap (_cec );};const (FontWeightMedium FontWeight =iota ;FontWeightBold ;FontWeightRoman ;);type Font interface{Encoder ()_g .TextEncoder ;GetRuneMetrics (_dd rune )(CharMetrics ,bool );
};var _gee *RuneCharSafeMap ;func (_bagfa *ttfParser )parseCmapFormat6 ()error {_cfcc :=int (_bagfa .ReadUShort ());_dbcg :=int (_bagfa .ReadUShort ());_af .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u0046o\u0072\u006d\u0061\u0074\u0036\u003a\u0020%s\u0020\u0066\u0069\u0072s\u0074\u0043\u006f\u0064\u0065\u003d\u0025\u0064\u0020en\u0074\u0072y\u0043\u006f\u0075\u006e\u0074\u003d\u0025\u0064",_bagfa ._aee .String (),_cfcc ,_dbcg );
for _daeb :=0;_daeb < _dbcg ;_daeb ++{_ffdea :=GID (_bagfa .ReadUShort ());_bagfa ._aee .Chars [rune (_daeb +_cfcc )]=_ffdea ;};return nil ;};var _ggb =[]GlyphName {"\u002en\u006f\u0074\u0064\u0065\u0066","\u002e\u006e\u0075l\u006c","\u006e\u006fn\u006d\u0061\u0072k\u0069\u006e\u0067\u0072\u0065\u0074\u0075\u0072\u006e","\u0073\u0070\u0061c\u0065","\u0065\u0078\u0063\u006c\u0061\u006d","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c","\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u0069\u0067\u006e","\u0064\u006f\u006c\u006c\u0061\u0072","\u0070e\u0072\u0063\u0065\u006e\u0074","\u0061m\u0070\u0065\u0072\u0073\u0061\u006ed","q\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067\u006c\u0065","\u0070a\u0072\u0065\u006e\u006c\u0065\u0066t","\u0070\u0061\u0072\u0065\u006e\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0074\u0065\u0072\u0069\u0073\u006b","\u0070\u006c\u0075\u0073","\u0063\u006f\u006dm\u0061","\u0068\u0079\u0070\u0068\u0065\u006e","\u0070\u0065\u0072\u0069\u006f\u0064","\u0073\u006c\u0061s\u0068","\u007a\u0065\u0072\u006f","\u006f\u006e\u0065","\u0074\u0077\u006f","\u0074\u0068\u0072e\u0065","\u0066\u006f\u0075\u0072","\u0066\u0069\u0076\u0065","\u0073\u0069\u0078","\u0073\u0065\u0076e\u006e","\u0065\u0069\u0067h\u0074","\u006e\u0069\u006e\u0065","\u0063\u006f\u006co\u006e","\u0073e\u006d\u0069\u0063\u006f\u006c\u006fn","\u006c\u0065\u0073\u0073","\u0065\u0071\u0075a\u006c","\u0067r\u0065\u0061\u0074\u0065\u0072","\u0071\u0075\u0065\u0073\u0074\u0069\u006f\u006e","\u0061\u0074","\u0041","\u0042","\u0043","\u0044","\u0045","\u0046","\u0047","\u0048","\u0049","\u004a","\u004b","\u004c","\u004d","\u004e","\u004f","\u0050","\u0051","\u0052","\u0053","\u0054","\u0055","\u0056","\u0057","\u0058","\u0059","\u005a","b\u0072\u0061\u0063\u006b\u0065\u0074\u006c\u0065\u0066\u0074","\u0062a\u0063\u006b\u0073\u006c\u0061\u0073h","\u0062\u0072\u0061c\u006b\u0065\u0074\u0072\u0069\u0067\u0068\u0074","a\u0073\u0063\u0069\u0069\u0063\u0069\u0072\u0063\u0075\u006d","\u0075\u006e\u0064\u0065\u0072\u0073\u0063\u006f\u0072\u0065","\u0067\u0072\u0061v\u0065","\u0061","\u0062","\u0063","\u0064","\u0065","\u0066","\u0067","\u0068","\u0069","\u006a","\u006b","\u006c","\u006d","\u006e","\u006f","\u0070","\u0071","\u0072","\u0073","\u0074","\u0075","\u0076","\u0077","\u0078","\u0079","\u007a","\u0062r\u0061\u0063\u0065\u006c\u0065\u0066t","\u0062\u0061\u0072","\u0062\u0072\u0061\u0063\u0065\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0063\u0069\u0069\u0074\u0069\u006c\u0064\u0065","\u0041d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0041\u0072\u0069n\u0067","\u0043\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0045\u0061\u0063\u0075\u0074\u0065","\u004e\u0074\u0069\u006c\u0064\u0065","\u004fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u0055d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0061\u0063\u0075\u0074\u0065","\u0061\u0067\u0072\u0061\u0076\u0065","a\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0074\u0069\u006c\u0064\u0065","\u0061\u0072\u0069n\u0067","\u0063\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0065\u0061\u0063\u0075\u0074\u0065","\u0065\u0067\u0072\u0061\u0076\u0065","e\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0065d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0069\u0061\u0063\u0075\u0074\u0065","\u0069\u0067\u0072\u0061\u0076\u0065","i\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0069d\u0069\u0065\u0072\u0065\u0073\u0069s","\u006e\u0074\u0069\u006c\u0064\u0065","\u006f\u0061\u0063\u0075\u0074\u0065","\u006f\u0067\u0072\u0061\u0076\u0065","o\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u006fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u006f\u0074\u0069\u006c\u0064\u0065","\u0075\u0061\u0063\u0075\u0074\u0065","\u0075\u0067\u0072\u0061\u0076\u0065","u\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0075d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0064\u0061\u0067\u0067\u0065\u0072","\u0064\u0065\u0067\u0072\u0065\u0065","\u0063\u0065\u006e\u0074","\u0073\u0074\u0065\u0072\u006c\u0069\u006e\u0067","\u0073e\u0063\u0074\u0069\u006f\u006e","\u0062\u0075\u006c\u006c\u0065\u0074","\u0070a\u0072\u0061\u0067\u0072\u0061\u0070h","\u0067\u0065\u0072\u006d\u0061\u006e\u0064\u0062\u006c\u0073","\u0072\u0065\u0067\u0069\u0073\u0074\u0065\u0072\u0065\u0064","\u0063o\u0070\u0079\u0072\u0069\u0067\u0068t","\u0074r\u0061\u0064\u0065\u006d\u0061\u0072k","\u0061\u0063\u0075t\u0065","\u0064\u0069\u0065\u0072\u0065\u0073\u0069\u0073","\u006e\u006f\u0074\u0065\u0071\u0075\u0061\u006c","\u0041\u0045","\u004f\u0073\u006c\u0061\u0073\u0068","\u0069\u006e\u0066\u0069\u006e\u0069\u0074\u0079","\u0070l\u0075\u0073\u006d\u0069\u006e\u0075s","\u006ce\u0073\u0073\u0065\u0071\u0075\u0061l","\u0067\u0072\u0065a\u0074\u0065\u0072\u0065\u0071\u0075\u0061\u006c","\u0079\u0065\u006e","\u006d\u0075","p\u0061\u0072\u0074\u0069\u0061\u006c\u0064\u0069\u0066\u0066","\u0073u\u006d\u006d\u0061\u0074\u0069\u006fn","\u0070r\u006f\u0064\u0075\u0063\u0074","\u0070\u0069","\u0069\u006e\u0074\u0065\u0067\u0072\u0061\u006c","o\u0072\u0064\u0066\u0065\u006d\u0069\u006e\u0069\u006e\u0065","\u006f\u0072\u0064m\u0061\u0073\u0063\u0075\u006c\u0069\u006e\u0065","\u004f\u006d\u0065g\u0061","\u0061\u0065","\u006f\u0073\u006c\u0061\u0073\u0068","\u0071\u0075\u0065s\u0074\u0069\u006f\u006e\u0064\u006f\u0077\u006e","\u0065\u0078\u0063\u006c\u0061\u006d\u0064\u006f\u0077\u006e","\u006c\u006f\u0067\u0069\u0063\u0061\u006c\u006e\u006f\u0074","\u0072a\u0064\u0069\u0063\u0061\u006c","\u0066\u006c\u006f\u0072\u0069\u006e","a\u0070\u0070\u0072\u006f\u0078\u0065\u0071\u0075\u0061\u006c","\u0044\u0065\u006ct\u0061","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074r\u0069\u0067\u0068\u0074","\u0065\u006c\u006c\u0069\u0070\u0073\u0069\u0073","\u006e\u006fn\u0062\u0072\u0065a\u006b\u0069\u006e\u0067\u0073\u0070\u0061\u0063\u0065","\u0041\u0067\u0072\u0061\u0076\u0065","\u0041\u0074\u0069\u006c\u0064\u0065","\u004f\u0074\u0069\u006c\u0064\u0065","\u004f\u0045","\u006f\u0065","\u0065\u006e\u0064\u0061\u0073\u0068","\u0065\u006d\u0064\u0061\u0073\u0068","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u006c\u0065\u0066\u0074","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c\u0072\u0069\u0067\u0068\u0074","\u0071u\u006f\u0074\u0065\u006c\u0065\u0066t","\u0071\u0075\u006f\u0074\u0065\u0072\u0069\u0067\u0068\u0074","\u0064\u0069\u0076\u0069\u0064\u0065","\u006co\u007a\u0065\u006e\u0067\u0065","\u0079d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0059d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0066\u0072\u0061\u0063\u0074\u0069\u006f\u006e","\u0063\u0075\u0072\u0072\u0065\u006e\u0063\u0079","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006c\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006cr\u0069\u0067\u0068\u0074","\u0066\u0069","\u0066\u006c","\u0064a\u0067\u0067\u0065\u0072\u0064\u0062l","\u0070\u0065\u0072\u0069\u006f\u0064\u0063\u0065\u006et\u0065\u0072\u0065\u0064","\u0071\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067l\u0062\u0061\u0073\u0065","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u0062\u0061\u0073\u0065","p\u0065\u0072\u0074\u0068\u006f\u0075\u0073\u0061\u006e\u0064","A\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","E\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0041\u0061\u0063\u0075\u0074\u0065","\u0045d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0045\u0067\u0072\u0061\u0076\u0065","\u0049\u0061\u0063\u0075\u0074\u0065","I\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0049d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0049\u0067\u0072\u0061\u0076\u0065","\u004f\u0061\u0063\u0075\u0074\u0065","O\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061\u0070\u0070l\u0065","\u004f\u0067\u0072\u0061\u0076\u0065","\u0055\u0061\u0063\u0075\u0074\u0065","U\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0055\u0067\u0072\u0061\u0076\u0065","\u0064\u006f\u0074\u006c\u0065\u0073\u0073\u0069","\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0074\u0069\u006cd\u0065","\u006d\u0061\u0063\u0072\u006f\u006e","\u0062\u0072\u0065v\u0065","\u0064o\u0074\u0061\u0063\u0063\u0065\u006et","\u0072\u0069\u006e\u0067","\u0063e\u0064\u0069\u006c\u006c\u0061","\u0068\u0075\u006eg\u0061\u0072\u0075\u006d\u006c\u0061\u0075\u0074","\u006f\u0067\u006f\u006e\u0065\u006b","\u0063\u0061\u0072o\u006e","\u004c\u0073\u006c\u0061\u0073\u0068","\u006c\u0073\u006c\u0061\u0073\u0068","\u0053\u0063\u0061\u0072\u006f\u006e","\u0073\u0063\u0061\u0072\u006f\u006e","\u005a\u0063\u0061\u0072\u006f\u006e","\u007a\u0063\u0061\u0072\u006f\u006e","\u0062r\u006f\u006b\u0065\u006e\u0062\u0061r","\u0045\u0074\u0068","\u0065\u0074\u0068","\u0059\u0061\u0063\u0075\u0074\u0065","\u0079\u0061\u0063\u0075\u0074\u0065","\u0054\u0068\u006fr\u006e","\u0074\u0068\u006fr\u006e","\u006d\u0069\u006eu\u0073","\u006d\u0075\u006c\u0074\u0069\u0070\u006c\u0079","o\u006e\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","t\u0077\u006f\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u0074\u0068\u0072\u0065\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u006fn\u0065\u0068\u0061\u006c\u0066","\u006f\u006e\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072","\u0074\u0068\u0072\u0065\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072\u0073","\u0066\u0072\u0061n\u0063","\u0047\u0062\u0072\u0065\u0076\u0065","\u0067\u0062\u0072\u0065\u0076\u0065","\u0049\u0064\u006f\u0074\u0061\u0063\u0063\u0065\u006e\u0074","\u0053\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0073\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0043\u0061\u0063\u0075\u0074\u0065","\u0063\u0061\u0063\u0075\u0074\u0065","\u0043\u0063\u0061\u0072\u006f\u006e","\u0063\u0063\u0061\u0072\u006f\u006e","\u0064\u0063\u0072\u006f\u0061\u0074"};
func (_dfe *ttfParser )ReadSByte ()(_fcfe int8 ){_fd .Read (_dfe ._cag ,_fd .BigEndian ,&_fcfe );return _fcfe ;};func _adf ()StdFont {_fab :=_g .NewZapfDingbatsEncoder ();_gc :=Descriptor {Name :ZapfDingbatsName ,Family :string (ZapfDingbatsName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-1,-143,981,820},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :90,StemH :28};
return NewStdFontWithEncoding (_gc ,_ecb ,_fab );};func MakeRuneCharSafeMap (length int )*RuneCharSafeMap {return &RuneCharSafeMap {_fe :make (map[rune ]CharMetrics ,length )};};type ttfParser struct{_aee TtfType ;_cag _eb .ReadSeeker ;_ffd map[string ]uint32 ;
_ebde uint16 ;_ggd uint16 ;};func (_fdba *ttfParser )ParseOS2 ()error {if _fdca :=_fdba .Seek ("\u004f\u0053\u002f\u0032");_fdca !=nil {return _fdca ;};_dfg :=_fdba .ReadUShort ();_fdba .Skip (4*2);_fdba .Skip (11*2+10+4*4+4);_cbc :=_fdba .ReadUShort ();
_fdba ._aee .Bold =(_cbc &32)!=0;_fdba .Skip (2*2);_fdba ._aee .TypoAscender =_fdba .ReadShort ();_fdba ._aee .TypoDescender =_fdba .ReadShort ();if _dfg >=2{_fdba .Skip (3*2+2*4+2);_fdba ._aee .CapHeight =_fdba .ReadShort ();}else {_fdba ._aee .CapHeight =0;
};return nil ;};func (_ea *RuneCharSafeMap )Range (f func (_de rune ,_eae CharMetrics )(_fa bool )){_ea ._bf .RLock ();defer _ea ._bf .RUnlock ();for _gf ,_ge :=range _ea ._fe {if f (_gf ,_ge ){break ;};};};func init (){RegisterStdFont (SymbolName ,_bdd ,"\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063","S\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064","\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (ZapfDingbatsName ,_adf );};func (_bfbg *ttfParser )Skip (n int ){_bfbg ._cag .Seek (int64 (n ),_eb .SeekCurrent )};func (_dbcd *ttfParser )Seek (tag string )error {_fafb ,_fbd :=_dbcd ._ffd [tag ];if !_fbd {return _ad .Errorf ("\u0074\u0061\u0062\u006ce \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0073",tag );
};_dbcd ._cag .Seek (int64 (_fafb ),_eb .SeekStart );return nil ;};type fontMap struct{_b .Mutex ;_ac map[StdFontName ]func ()StdFont ;};func (_aff *ttfParser )ParseHmtx ()error {if _ecee :=_aff .Seek ("\u0068\u006d\u0074\u0078");_ecee !=nil {return _ecee ;
};_aff ._aee .Widths =make ([]uint16 ,0,8);for _abe :=uint16 (0);_abe < _aff ._ebde ;_abe ++{_aff ._aee .Widths =append (_aff ._aee .Widths ,_aff .ReadUShort ());_aff .Skip (2);};if _aff ._ebde < _aff ._ggd &&_aff ._ebde > 0{_bgd :=_aff ._aee .Widths [_aff ._ebde -1];
for _ffe :=_aff ._ebde ;_ffe < _aff ._ggd ;_ffe ++{_aff ._aee .Widths =append (_aff ._aee .Widths ,_bgd );};};return nil ;};var _daf =[]int16 {722,889,722,722,722,722,722,722,722,722,722,667,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,556,722,722,722,722,333,333,333,333,333,333,333,333,389,722,722,611,611,611,611,611,889,722,722,722,722,722,722,889,722,722,722,722,722,722,722,722,556,722,667,667,667,667,556,556,556,556,556,611,611,611,556,722,722,722,722,722,722,722,722,722,722,944,722,722,722,722,611,611,611,611,444,444,444,444,333,444,667,444,444,778,444,444,469,541,500,921,444,500,278,200,480,480,333,333,333,200,350,444,444,333,444,444,333,500,333,278,250,250,760,500,500,500,500,588,500,400,333,564,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,564,500,333,333,333,556,500,556,500,500,167,500,500,500,500,333,564,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,500,500,278,278,344,278,564,549,564,471,278,778,333,564,500,564,500,500,500,500,500,549,500,500,500,500,500,500,722,333,500,500,500,500,750,750,300,276,310,500,500,500,453,333,333,476,833,250,250,1000,564,564,500,444,444,408,444,444,444,333,333,333,180,333,333,453,333,333,760,333,389,389,389,389,389,500,278,500,500,278,250,500,600,278,326,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,500,722,500,500,500,500,500,444,444,444,444,500};
func init (){RegisterStdFont (TimesRomanName ,_ccac ,"\u0054\u0069\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e","\u0054\u0069\u006de\u0073");RegisterStdFont (TimesBoldName ,_cff ,"\u0054i\u006de\u0073\u004e\u0065\u0077\u0052o\u006d\u0061n\u002c\u0042\u006f\u006c\u0064","\u0054\u0069\u006d\u0065\u0073\u002c\u0042\u006f\u006c\u0064");
RegisterStdFont (TimesItalicName ,_fegg ,"T\u0069m\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006da\u006e\u002c\u0049\u0074al\u0069\u0063","\u0054\u0069\u006de\u0073\u002c\u0049\u0074\u0061\u006c\u0069\u0063");RegisterStdFont (TimesBoldItalicName ,_ef ,"\u0054i\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e,\u0042\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063","\u0054\u0069m\u0065\u0073\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
};func _db ()StdFont {_edc .Do (_be );_cbfe :=Descriptor {Name :CourierBoldName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0021,BBox :[4]float64 {-113,-250,749,801},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_cbfe ,_ee );};func (_dgb *ttfParser )Read32Fixed ()float64 {_cad :=float64 (_dgb .ReadShort ());_fcff :=float64 (_dgb .ReadUShort ())/65536.0;return _cad +_fcff ;};func (_ecec *ttfParser )Parse ()(TtfType ,error ){_dga ,_abfe :=_ecec .ReadStr (4);
if _abfe !=nil {return TtfType {},_abfe ;};if _dga =="\u004f\u0054\u0054\u004f"{return TtfType {},_d .Errorf ("\u0066\u006f\u006e\u0074s\u0020\u0062\u0061\u0073\u0065\u0064\u0020\u006f\u006e \u0050\u006f\u0073\u0074\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065s\u0020\u0061\u0072\u0065\u0020n\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_aed .ErrNotSupported );
};if _dga !="\u0000\u0001\u0000\u0000"&&_dga !="\u0074\u0072\u0075\u0065"{_af .Log .Debug ("\u0055n\u0072\u0065c\u006f\u0067\u006ei\u007a\u0065\u0064\u0020\u0054\u0072\u0075e\u0054\u0079\u0070\u0065\u0020\u0066i\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u002e\u0020v\u0065\u0072\u0073\u0069\u006f\u006e\u003d\u0025\u0071",_dga );
};_bcd :=int (_ecec .ReadUShort ());_ecec .Skip (3*2);_ecec ._ffd =make (map[string ]uint32 );var _fff string ;for _dea :=0;_dea < _bcd ;_dea ++{_fff ,_abfe =_ecec .ReadStr (4);if _abfe !=nil {return TtfType {},_abfe ;};_ecec .Skip (4);_ebbd :=_ecec .ReadULong ();
_ecec .Skip (4);_ecec ._ffd [_fff ]=_ebbd ;};_af .Log .Trace (_fbe (_ecec ._ffd ));if _abfe =_ecec .ParseComponents ();_abfe !=nil {return TtfType {},_abfe ;};return _ecec ._aee ,nil ;};func (_ece *TtfType )String ()string {return _ad .Sprintf ("\u0046\u004fN\u0054\u005f\u0046\u0049\u004cE\u0032\u007b\u0025\u0023\u0071 \u0055\u006e\u0069\u0074\u0073\u0050\u0065\u0072\u0045\u006d\u003d\u0025\u0064\u0020\u0042\u006f\u006c\u0064\u003d\u0025\u0074\u0020\u0049\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065\u003d\u0025\u0066\u0020"+"\u0043\u0061pH\u0065\u0069\u0067h\u0074\u003d\u0025\u0064 Ch\u0061rs\u003d\u0025\u0064\u0020\u0047\u006c\u0079ph\u004e\u0061\u006d\u0065\u0073\u003d\u0025d\u007d",_ece .PostScriptName ,_ece .UnitsPerEm ,_ece .Bold ,_ece .ItalicAngle ,_ece .CapHeight ,len (_ece .Chars ),len (_ece .GlyphNames ));
};var _acb *RuneCharSafeMap ;func TtfParse (r _eb .ReadSeeker )(TtfType ,error ){_aca :=&ttfParser {_cag :r };return _aca .Parse ()};var _dff =[]rune {'A','Æ','Á','Ă','Â','Ä','À','Ā','Ą','Å','Ã','B','C','Ć','Č','Ç','D','Ď','Đ','∆','E','É','Ě','Ê','Ë','Ė','È','Ē','Ę','Ð','€','F','G','Ğ','Ģ','H','I','Í','Î','Ï','İ','Ì','Ī','Į','J','K','Ķ','L','Ĺ','Ľ','Ļ','Ł','M','N','Ń','Ň','Ņ','Ñ','O','Œ','Ó','Ô','Ö','Ò','Ő','Ō','Ø','Õ','P','Q','R','Ŕ','Ř','Ŗ','S','Ś','Š','Ş','Ș','T','Ť','Ţ','Þ','U','Ú','Û','Ü','Ù','Ű','Ū','Ų','Ů','V','W','X','Y','Ý','Ÿ','Z','Ź','Ž','Ż','a','á','ă','â','´','ä','æ','à','ā','&','ą','å','^','~','*','@','ã','b','\\','|','{','}','[',']','˘','¦','•','c','ć','ˇ','č','ç','¸','¢','ˆ',':',',','\uf6c3','©','¤','d','†','‡','ď','đ','°','¨','÷','$','˙','ı','e','é','ě','ê','ë','ė','è','8','…','ē','—','–','ę','=','ð','!','¡','f','ﬁ','5','ﬂ','ƒ','4','⁄','g','ğ','ģ','ß','`','>','≥','«','»','‹','›','h','˝','-','i','í','î','ï','ì','ī','į','j','k','ķ','l','ĺ','ľ','ļ','<','≤','¬','◊','ł','m','¯','−','µ','×','n','ń','ň','ņ','9','≠','ñ','#','o','ó','ô','ö','œ','˛','ò','ő','ō','1','½','¼','¹','ª','º','ø','õ','p','¶','(',')','∂','%','.','·','‰','+','±','q','?','¿','"','„','“','”','‘','’','‚','\'','r','ŕ','√','ř','ŗ','®','˚','s','ś','š','ş','ș','§',';','7','6','/',' ','£','∑','t','ť','ţ','þ','3','¾','³','˜','™','2','²','u','ú','û','ü','ù','ű','ū','_','ų','ů','v','w','x','y','ý','ÿ','¥','z','ź','ž','ż','0'};
func _fegg ()StdFont {_efd .Do (_eac );_ade :=Descriptor {Name :TimesItalicName ,Family :_adg ,Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-169,-217,1010,883},ItalicAngle :-15.5,Ascent :683,Descent :-217,CapHeight :653,XHeight :441,StemV :76,StemH :32};
return NewStdFont (_ade ,_gee );};func (_ed StdFont )Name ()string {return string (_ed ._cca .Name )};type FontWeight int ;func (_ggfd *ttfParser )ParseName ()error {if _bfce :=_ggfd .Seek ("\u006e\u0061\u006d\u0065");_bfce !=nil {return _bfce ;};_eg ,_ :=_ggfd ._cag .Seek (0,_eb .SeekCurrent );
_ggfd ._aee .PostScriptName ="";_ggfd .Skip (2);_beg :=_ggfd .ReadUShort ();_dge :=_ggfd .ReadUShort ();for _bbfa :=uint16 (0);_bbfa < _beg &&_ggfd ._aee .PostScriptName =="";_bbfa ++{_ggfd .Skip (3*2);_aacc :=_ggfd .ReadUShort ();_bagg :=_ggfd .ReadUShort ();
_ega :=_ggfd .ReadUShort ();if _aacc ==6{_ggfd ._cag .Seek (_eg +int64 (_dge )+int64 (_ega ),_eb .SeekStart );_dcef ,_eegf :=_ggfd .ReadStr (int (_bagg ));if _eegf !=nil {return _eegf ;};_dcef =_e .Replace (_dcef ,"\u0000","",-1);_deg ,_eegf :=_cc .Compile ("\u005b\u0028\u0029\u007b\u007d\u003c\u003e\u0020\u002f%\u005b\u005c\u005d\u005d");
if _eegf !=nil {return _eegf ;};_ggfd ._aee .PostScriptName =_deg .ReplaceAllString (_dcef ,"");};};if _ggfd ._aee .PostScriptName ==""{_af .Log .Debug ("\u0050a\u0072\u0073e\u004e\u0061\u006de\u003a\u0020\u0054\u0068\u0065\u0020\u006ea\u006d\u0065\u0020\u0050\u006f\u0073t\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u0077\u0061\u0073\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e");
};return nil ;};func (_fabg *ttfParser )ReadShort ()(_dgga int16 ){_fd .Read (_fabg ._cag ,_fd .BigEndian ,&_dgga );return _dgga ;};func (_eba *RuneCharSafeMap )Read (b rune )(CharMetrics ,bool ){_eba ._bf .RLock ();defer _eba ._bf .RUnlock ();_aea ,_ba :=_eba ._fe [b ];
return _aea ,_ba ;};var _efb =[]int16 {611,889,611,611,611,611,611,611,611,611,611,611,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,611,722,722,722,722,333,333,333,333,333,333,333,333,444,667,667,556,556,611,556,556,833,667,667,667,667,667,722,944,722,722,722,722,722,722,722,722,611,722,611,611,611,611,500,500,500,500,500,556,556,556,611,722,722,722,722,722,722,722,722,722,611,833,611,556,556,556,556,556,556,556,500,500,500,500,333,500,667,500,500,778,500,500,422,541,500,920,500,500,278,275,400,400,389,389,333,275,350,444,444,333,444,444,333,500,333,333,250,250,760,500,500,500,500,544,500,400,333,675,500,333,278,444,444,444,444,444,444,444,500,889,444,889,500,444,675,500,333,389,278,500,500,500,500,500,167,500,500,500,500,333,675,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,444,444,278,278,300,278,675,549,675,471,278,722,333,675,500,675,500,500,500,500,500,549,500,500,500,500,500,500,667,333,500,500,500,500,750,750,300,276,310,500,500,500,523,333,333,476,833,250,250,1000,675,675,500,500,500,420,556,556,556,333,333,333,214,389,389,453,389,389,760,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,300,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,444,667,444,444,444,444,500,389,389,389,389,500};
type GID =_g .GID ;var _gac *RuneCharSafeMap ;func _ce ()StdFont {_edc .Do (_be );_gg :=Descriptor {Name :CourierObliqueName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0061,BBox :[4]float64 {-27,-250,849,805},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_gg ,_cbb );};var _ee *RuneCharSafeMap ;func (_afd *fontMap )write (_bg StdFontName ,_ec func ()StdFont ){_afd .Lock ();defer _afd .Unlock ();_afd ._ac [_bg ]=_ec ;};func NewFontFile2FromPdfObject (obj _aed .PdfObject )(TtfType ,error ){obj =_aed .TraceToDirectObject (obj );
_gbg ,_cdg :=obj .(*_aed .PdfObjectStream );if !_cdg {_af .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u0061\u0020\u0073\u0074\u0072e\u0061\u006d \u0028\u0025\u0054\u0029",obj );
return TtfType {},_aed .ErrTypeError ;};_cdge ,_daa :=_aed .DecodeStream (_gbg );if _daa !=nil {return TtfType {},_daa ;};_ggf :=ttfParser {_cag :_ae .NewReader (_cdge )};return _ggf .Parse ();};func _daec ()StdFont {_edc .Do (_be );_dbe :=Descriptor {Name :CourierBoldObliqueName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0061,BBox :[4]float64 {-57,-250,869,801},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_dbe ,_ebb );};func TtfParseFile (fileStr string )(TtfType ,error ){_ecaa ,_bbgf :=_cb .Open (fileStr );if _bbgf !=nil {return TtfType {},_bbgf ;};defer _ecaa .Close ();return TtfParse (_ecaa );};func (_fb *fontMap )read (_ab StdFontName )(func ()StdFont ,bool ){_fb .Lock ();
defer _fb .Unlock ();_abf ,_ca :=_fb ._ac [_ab ];return _abf ,_ca ;};func RegisterStdFont (name StdFontName ,fnc func ()StdFont ,aliases ...StdFontName ){if _ ,_ebd :=_dae .read (name );_ebd {panic ("\u0066o\u006e\u0074\u0020\u0061l\u0072\u0065\u0061\u0064\u0079 \u0072e\u0067i\u0073\u0074\u0065\u0072\u0065\u0064\u003a "+string (name ));
};_dae .write (name ,fnc );for _ ,_cd :=range aliases {RegisterStdFont (_cd ,fnc );};};func (_bbf *ttfParser )parseCmapVersion (_feeg int64 )error {_af .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006da\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a \u006f\u0066\u0066s\u0065t\u003d\u0025\u0064",_feeg );
if _bbf ._aee .Chars ==nil {_bbf ._aee .Chars =make (map[rune ]GID );};_bbf ._cag .Seek (int64 (_bbf ._ffd ["\u0063\u006d\u0061\u0070"])+_feeg ,_eb .SeekStart );var _ada ,_ggda uint32 ;_bbea :=_bbf .ReadUShort ();if _bbea < 8{_ada =uint32 (_bbf .ReadUShort ());
_ggda =uint32 (_bbf .ReadUShort ());}else {_bbf .ReadUShort ();_ada =_bbf .ReadULong ();_ggda =_bbf .ReadULong ();};_af .Log .Debug ("\u0070\u0061\u0072\u0073\u0065\u0043m\u0061\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064 \u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067u\u0061g\u0065\u003d\u0025\u0064",_bbea ,_ada ,_ggda );
switch _bbea {case 0:return _bbf .parseCmapFormat0 ();case 6:return _bbf .parseCmapFormat6 ();case 12:return _bbf .parseCmapFormat12 ();default:_af .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063m\u0061\u0070\u0020\u0066\u006f\u0072\u006da\u0074\u003d\u0025\u0064",_bbea );
return nil ;};};func _ef ()StdFont {_efd .Do (_eac );_aae :=Descriptor {Name :TimesBoldItalicName ,Family :_adg ,Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-200,-218,996,921},ItalicAngle :-15,Ascent :683,Descent :-217,CapHeight :669,XHeight :462,StemV :121,StemH :42};
return NewStdFont (_aae ,_bga );};const (_adg ="\u0054\u0069\u006de\u0073";TimesRomanName =StdFontName ("T\u0069\u006d\u0065\u0073\u002d\u0052\u006f\u006d\u0061\u006e");TimesBoldName =StdFontName ("\u0054\u0069\u006d\u0065\u0073\u002d\u0042\u006f\u006c\u0064");
TimesItalicName =StdFontName ("\u0054\u0069\u006de\u0073\u002d\u0049\u0074\u0061\u006c\u0069\u0063");TimesBoldItalicName =StdFontName ("\u0054\u0069m\u0065\u0073\u002dB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063"););func (_bc *RuneCharSafeMap )Copy ()*RuneCharSafeMap {_da :=MakeRuneCharSafeMap (_bc .Length ());
_bc .Range (func (_cf rune ,_bbc CharMetrics )(_bbg bool ){_da ._fe [_cf ]=_bbc ;return false });return _da ;};func NewStdFontWithEncoding (desc Descriptor ,metrics *RuneCharSafeMap ,encoder _g .TextEncoder )StdFont {var _ga rune =0xA0;if _ ,_feg :=metrics .Read (_ga );
!_feg {_ccc ,_ :=metrics .Read (0x20);metrics .Write (_ga ,_ccc );};return StdFont {_cca :desc ,_cfb :metrics ,_bge :encoder };};func _aeg ()StdFont {_bbcf .Do (_bbe );_bde :=Descriptor {Name :HelveticaBoldObliqueName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-174,-228,1114,962},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_bde ,_cda );};func (_dgf *ttfParser )ReadStr (length int )(string ,error ){_daff :=make ([]byte ,length );_ecc ,_fgf :=_dgf ._cag .Read (_daff );if _fgf !=nil {return "",_fgf ;}else if _ecc !=length {return "",_ad .Errorf ("\u0075\u006e\u0061bl\u0065\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0073",length );
};return string (_daff ),nil ;};var _dbc =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,556,722,722,611,611,611,611,611,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,722,556,556,584,584,389,975,556,611,278,280,389,389,333,333,333,280,350,556,556,333,556,556,333,556,333,333,278,250,737,556,611,556,556,743,611,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,611,333,333,333,611,556,611,556,556,167,611,611,611,611,333,584,549,556,556,333,333,611,333,333,278,278,278,278,278,278,278,278,556,556,278,278,400,278,584,549,584,494,278,889,333,584,611,584,611,611,611,611,556,549,611,556,611,611,611,611,944,333,611,611,611,556,834,834,333,370,365,611,611,611,556,333,333,494,889,278,278,1000,584,584,611,611,611,474,500,500,500,278,278,278,238,389,389,549,389,389,737,333,556,556,556,556,556,556,333,556,556,278,278,556,600,333,389,333,611,556,834,333,333,1000,556,333,611,611,611,611,611,611,611,556,611,611,556,778,556,556,556,556,556,500,500,500,500,556};
func (_bagd *ttfParser )parseCmapSubtable31 (_acaa int64 )error {_ebdf :=make ([]rune ,0,8);_cee :=make ([]rune ,0,8);_gde :=make ([]int16 ,0,8);_cbbb :=make ([]uint16 ,0,8);_bagd ._aee .Chars =make (map[rune ]GID );_bagd ._cag .Seek (int64 (_bagd ._ffd ["\u0063\u006d\u0061\u0070"])+_acaa ,_eb .SeekStart );
_ebc :=_bagd .ReadUShort ();if _ebc !=4{return _d .Errorf ("u\u006e\u0065\u0078\u0070\u0065\u0063t\u0065\u0064\u0020\u0073\u0075\u0062t\u0061\u0062\u006c\u0065\u0020\u0066\u006fr\u006d\u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0028\u0025w\u0029",_ebc ,_aed .ErrNotSupported );
};_bagd .Skip (2*2);_cfc :=int (_bagd .ReadUShort ()/2);_bagd .Skip (3*2);for _gbf :=0;_gbf < _cfc ;_gbf ++{_cee =append (_cee ,rune (_bagd .ReadUShort ()));};_bagd .Skip (2);for _gdb :=0;_gdb < _cfc ;_gdb ++{_ebdf =append (_ebdf ,rune (_bagd .ReadUShort ()));
};for _ffde :=0;_ffde < _cfc ;_ffde ++{_gde =append (_gde ,_bagd .ReadShort ());};_bdf ,_ :=_bagd ._cag .Seek (int64 (0),_eb .SeekCurrent );for _eaf :=0;_eaf < _cfc ;_eaf ++{_cbbb =append (_cbbb ,_bagd .ReadUShort ());};for _fdd :=0;_fdd < _cfc ;_fdd ++{_cffc :=_ebdf [_fdd ];
_edd :=_cee [_fdd ];_dafb :=_gde [_fdd ];_fcf :=_cbbb [_fdd ];if _fcf > 0{_bagd ._cag .Seek (_bdf +2*int64 (_fdd )+int64 (_fcf ),_eb .SeekStart );};for _fee :=_cffc ;_fee <=_edd ;_fee ++{if _fee ==0xFFFF{break ;};var _faa int32 ;if _fcf > 0{_faa =int32 (_bagd .ReadUShort ());
if _faa > 0{_faa +=int32 (_dafb );};}else {_faa =_fee +int32 (_dafb );};if _faa >=65536{_faa -=65536;};if _faa > 0{_bagd ._aee .Chars [_fee ]=GID (_faa );};};};return nil ;};var _cbb *RuneCharSafeMap ;func NewStdFont (desc Descriptor ,metrics *RuneCharSafeMap )StdFont {return NewStdFontWithEncoding (desc ,metrics ,_g .NewStandardEncoder ());
};var _bagf *RuneCharSafeMap ;func (_ffded *ttfParser )ReadUShort ()(_gbd uint16 ){_fd .Read (_ffded ._cag ,_fd .BigEndian ,&_gbd );return _gbd ;};func (_dc CharMetrics )String ()string {return _ad .Sprintf ("<\u0025\u002e\u0031\u0066\u002c\u0025\u002e\u0031\u0066\u003e",_dc .Wx ,_dc .Wy );
};var _aegb =&RuneCharSafeMap {_fe :map[rune ]CharMetrics {' ':{Wx :250},'!':{Wx :333},'#':{Wx :500},'%':{Wx :833},'&':{Wx :778},'(':{Wx :333},')':{Wx :333},'+':{Wx :549},',':{Wx :250},'.':{Wx :250},'/':{Wx :278},'0':{Wx :500},'1':{Wx :500},'2':{Wx :500},'3':{Wx :500},'4':{Wx :500},'5':{Wx :500},'6':{Wx :500},'7':{Wx :500},'8':{Wx :500},'9':{Wx :500},':':{Wx :278},';':{Wx :278},'<':{Wx :549},'=':{Wx :549},'>':{Wx :549},'?':{Wx :444},'[':{Wx :333},']':{Wx :333},'_':{Wx :500},'{':{Wx :480},'|':{Wx :200},'}':{Wx :480},'¬':{Wx :713},'°':{Wx :400},'±':{Wx :549},'µ':{Wx :576},'×':{Wx :549},'÷':{Wx :549},'ƒ':{Wx :500},'Α':{Wx :722},'Β':{Wx :667},'Γ':{Wx :603},'Ε':{Wx :611},'Ζ':{Wx :611},'Η':{Wx :722},'Θ':{Wx :741},'Ι':{Wx :333},'Κ':{Wx :722},'Λ':{Wx :686},'Μ':{Wx :889},'Ν':{Wx :722},'Ξ':{Wx :645},'Ο':{Wx :722},'Π':{Wx :768},'Ρ':{Wx :556},'Σ':{Wx :592},'Τ':{Wx :611},'Υ':{Wx :690},'Φ':{Wx :763},'Χ':{Wx :722},'Ψ':{Wx :795},'α':{Wx :631},'β':{Wx :549},'γ':{Wx :411},'δ':{Wx :494},'ε':{Wx :439},'ζ':{Wx :494},'η':{Wx :603},'θ':{Wx :521},'ι':{Wx :329},'κ':{Wx :549},'λ':{Wx :549},'ν':{Wx :521},'ξ':{Wx :493},'ο':{Wx :549},'π':{Wx :549},'ρ':{Wx :549},'ς':{Wx :439},'σ':{Wx :603},'τ':{Wx :439},'υ':{Wx :576},'φ':{Wx :521},'χ':{Wx :549},'ψ':{Wx :686},'ω':{Wx :686},'ϑ':{Wx :631},'ϒ':{Wx :620},'ϕ':{Wx :603},'ϖ':{Wx :713},'•':{Wx :460},'…':{Wx :1000},'′':{Wx :247},'″':{Wx :411},'⁄':{Wx :167},'€':{Wx :750},'ℑ':{Wx :686},'℘':{Wx :987},'ℜ':{Wx :795},'Ω':{Wx :768},'ℵ':{Wx :823},'←':{Wx :987},'↑':{Wx :603},'→':{Wx :987},'↓':{Wx :603},'↔':{Wx :1042},'↵':{Wx :658},'⇐':{Wx :987},'⇑':{Wx :603},'⇒':{Wx :987},'⇓':{Wx :603},'⇔':{Wx :1042},'∀':{Wx :713},'∂':{Wx :494},'∃':{Wx :549},'∅':{Wx :823},'∆':{Wx :612},'∇':{Wx :713},'∈':{Wx :713},'∉':{Wx :713},'∋':{Wx :439},'∏':{Wx :823},'∑':{Wx :713},'−':{Wx :549},'∗':{Wx :500},'√':{Wx :549},'∝':{Wx :713},'∞':{Wx :713},'∠':{Wx :768},'∧':{Wx :603},'∨':{Wx :603},'∩':{Wx :768},'∪':{Wx :768},'∫':{Wx :274},'∴':{Wx :863},'∼':{Wx :549},'≅':{Wx :549},'≈':{Wx :549},'≠':{Wx :549},'≡':{Wx :549},'≤':{Wx :549},'≥':{Wx :549},'⊂':{Wx :713},'⊃':{Wx :713},'⊄':{Wx :713},'⊆':{Wx :713},'⊇':{Wx :713},'⊕':{Wx :768},'⊗':{Wx :768},'⊥':{Wx :658},'⋅':{Wx :250},'⌠':{Wx :686},'⌡':{Wx :686},'〈':{Wx :329},'〉':{Wx :329},'◊':{Wx :494},'♠':{Wx :753},'♣':{Wx :753},'♥':{Wx :753},'♦':{Wx :753},'\uf6d9':{Wx :790},'\uf6da':{Wx :790},'\uf6db':{Wx :890},'\uf8e5':{Wx :500},'\uf8e6':{Wx :603},'\uf8e7':{Wx :1000},'\uf8e8':{Wx :790},'\uf8e9':{Wx :790},'\uf8ea':{Wx :786},'\uf8eb':{Wx :384},'\uf8ec':{Wx :384},'\uf8ed':{Wx :384},'\uf8ee':{Wx :384},'\uf8ef':{Wx :384},'\uf8f0':{Wx :384},'\uf8f1':{Wx :494},'\uf8f2':{Wx :494},'\uf8f3':{Wx :494},'\uf8f4':{Wx :494},'\uf8f5':{Wx :686},'\uf8f6':{Wx :384},'\uf8f7':{Wx :384},'\uf8f8':{Wx :384},'\uf8f9':{Wx :384},'\uf8fa':{Wx :384},'\uf8fb':{Wx :384},'\uf8fc':{Wx :494},'\uf8fd':{Wx :494},'\uf8fe':{Wx :494},'\uf8ff':{Wx :790}}};
const (CourierName =StdFontName ("\u0043o\u0075\u0072\u0069\u0065\u0072");CourierBoldName =StdFontName ("\u0043\u006f\u0075r\u0069\u0065\u0072\u002d\u0042\u006f\u006c\u0064");CourierObliqueName =StdFontName ("\u0043o\u0075r\u0069\u0065\u0072\u002d\u004f\u0062\u006c\u0069\u0071\u0075\u0065");
CourierBoldObliqueName =StdFontName ("\u0043\u006f\u0075\u0072ie\u0072\u002d\u0042\u006f\u006c\u0064\u004f\u0062\u006c\u0069\u0071\u0075\u0065"););var _gb =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,611,778,778,778,778,389,389,389,389,389,389,389,389,500,778,778,667,667,667,667,667,944,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,611,778,722,722,722,722,556,556,556,556,556,667,667,667,611,722,722,722,722,722,722,722,722,722,722,1000,722,722,722,722,667,667,667,667,500,500,500,500,333,500,722,500,500,833,500,500,581,520,500,930,500,556,278,220,394,394,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,556,500,500,672,556,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,333,333,333,556,500,556,500,500,167,500,500,500,556,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,333,556,556,278,278,394,278,570,549,570,494,278,833,333,570,556,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,300,330,500,500,556,540,333,333,494,1000,250,250,1000,570,570,556,500,500,555,500,500,500,333,333,333,278,444,444,549,444,444,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,333,416,333,556,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,500,722,500,500,500,500,500,444,444,444,444,500};
func (_aeb *ttfParser )ReadULong ()(_dcf uint32 ){_fd .Read (_aeb ._cag ,_fd .BigEndian ,&_dcf );return _dcf ;};func (_bad StdFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_bda ,_decc :=_bad ._cfb .Read (r );return _bda ,_decc ;};type GlyphName =_g .GlyphName ;
var _cda *RuneCharSafeMap ;func (_eeg *ttfParser )parseCmapFormat12 ()error {_dfc :=_eeg .ReadULong ();_af .Log .Trace ("\u0070\u0061\u0072se\u0043\u006d\u0061\u0070\u0046\u006f\u0072\u006d\u0061t\u00312\u003a \u0025s\u0020\u006e\u0075\u006d\u0047\u0072\u006f\u0075\u0070\u0073\u003d\u0025\u0064",_eeg ._aee .String (),_dfc );
for _fcd :=uint32 (0);_fcd < _dfc ;_fcd ++{_fbea :=_eeg .ReadULong ();_abfg :=_eeg .ReadULong ();_gca :=_eeg .ReadULong ();if _fbea > 0x0010FFFF||(0xD800<=_fbea &&_fbea <=0xDFFF){return _f .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");
};if _abfg < _fbea ||_abfg > 0x0010FFFF||(0xD800<=_abfg &&_abfg <=0xDFFF){return _f .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");};for _afg :=_fbea ;_afg <=_abfg ;
_afg ++{if _afg > 0x10FFFF{_af .Log .Debug ("\u0046\u006fr\u006d\u0061\u0074\u0020\u0031\u0032\u0020\u0063\u006d\u0061\u0070\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0063\u0068\u0061\u0072\u0061\u0063\u0074\u0065\u0072\u0020\u0062\u0065\u0079\u006f\u006e\u0064\u0020\u0055\u0043\u0053\u002d\u0034");
};_eeg ._aee .Chars [rune (_afg )]=GID (_gca );_gca ++;};};return nil ;};func _ccac ()StdFont {_efd .Do (_eac );_aaa :=Descriptor {Name :TimesRomanName ,Family :_adg ,Weight :FontWeightRoman ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,898},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :662,XHeight :450,StemV :84,StemH :28};
return NewStdFont (_aaa ,_age );};const (SymbolName =StdFontName ("\u0053\u0079\u006d\u0062\u006f\u006c");ZapfDingbatsName =StdFontName ("\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073"););func (_fcc *ttfParser )ParsePost ()error {if _gfc :=_fcc .Seek ("\u0070\u006f\u0073\u0074");
_gfc !=nil {return _gfc ;};_cga :=_fcc .Read32Fixed ();_fcc ._aee .ItalicAngle =_fcc .Read32Fixed ();_fcc ._aee .UnderlinePosition =_fcc .ReadShort ();_fcc ._aee .UnderlineThickness =_fcc .ReadShort ();_fcc ._aee .IsFixedPitch =_fcc .ReadULong ()!=0;_fcc .ReadULong ();
_fcc .ReadULong ();_fcc .ReadULong ();_fcc .ReadULong ();_af .Log .Trace ("\u0050a\u0072\u0073\u0065\u0050\u006f\u0073\u0074\u003a\u0020\u0066\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065\u003d\u0025\u0066",_cga );switch _cga {case 1.0:_fcc ._aee .GlyphNames =_ggb ;
case 2.0:_dgeg :=int (_fcc .ReadUShort ());_ceff :=make ([]int ,_dgeg );_fcc ._aee .GlyphNames =make ([]GlyphName ,_dgeg );_efa :=-1;for _ggabg :=0;_ggabg < _dgeg ;_ggabg ++{_bgc :=int (_fcc .ReadUShort ());_ceff [_ggabg ]=_bgc ;if _bgc <=0x7fff&&_bgc > _efa {_efa =_bgc ;
};};var _gged []GlyphName ;if _efa >=len (_ggb ){_gged =make ([]GlyphName ,_efa -len (_ggb )+1);for _abd :=0;_abd < _efa -len (_ggb )+1;_abd ++{_acc :=int (_fcc .readByte ());_aaf ,_gdg :=_fcc .ReadStr (_acc );if _gdg !=nil {return _gdg ;};_gged [_abd ]=GlyphName (_aaf );
};};for _agcf :=0;_agcf < _dgeg ;_agcf ++{_acad :=_ceff [_agcf ];if _acad < len (_ggb ){_fcc ._aee .GlyphNames [_agcf ]=_ggb [_acad ];}else if _acad >=len (_ggb )&&_acad <=32767{_fcc ._aee .GlyphNames [_agcf ]=_gged [_acad -len (_ggb )];}else {_fcc ._aee .GlyphNames [_agcf ]="\u002e\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064";
};};case 2.5:_afff :=make ([]int ,_fcc ._ggd );for _adbd :=0;_adbd < len (_afff );_adbd ++{_gcg :=int (_fcc .ReadSByte ());_afff [_adbd ]=_adbd +1+_gcg ;};_fcc ._aee .GlyphNames =make ([]GlyphName ,len (_afff ));for _ccd :=0;_ccd < len (_fcc ._aee .GlyphNames );
_ccd ++{_cgbb :=_ggb [_afff [_ccd ]];_fcc ._aee .GlyphNames [_ccd ]=_cgbb ;};case 3.0:_af .Log .Debug ("\u004e\u006f\u0020\u0050\u006f\u0073t\u0053\u0063\u0072i\u0070\u0074\u0020n\u0061\u006d\u0065\u0020\u0069\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020is\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0066\u006f\u006e\u0074\u002e");
default:_af .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020f\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065=\u0025\u0066",_cga );};return nil ;};var _ecb =&RuneCharSafeMap {_fe :map[rune ]CharMetrics {' ':{Wx :278},'→':{Wx :838},'↔':{Wx :1016},'↕':{Wx :458},'①':{Wx :788},'②':{Wx :788},'③':{Wx :788},'④':{Wx :788},'⑤':{Wx :788},'⑥':{Wx :788},'⑦':{Wx :788},'⑧':{Wx :788},'⑨':{Wx :788},'⑩':{Wx :788},'■':{Wx :761},'▲':{Wx :892},'▼':{Wx :892},'◆':{Wx :788},'●':{Wx :791},'◗':{Wx :438},'★':{Wx :816},'☎':{Wx :719},'☛':{Wx :960},'☞':{Wx :939},'♠':{Wx :626},'♣':{Wx :776},'♥':{Wx :694},'♦':{Wx :595},'✁':{Wx :974},'✂':{Wx :961},'✃':{Wx :974},'✄':{Wx :980},'✆':{Wx :789},'✇':{Wx :790},'✈':{Wx :791},'✉':{Wx :690},'✌':{Wx :549},'✍':{Wx :855},'✎':{Wx :911},'✏':{Wx :933},'✐':{Wx :911},'✑':{Wx :945},'✒':{Wx :974},'✓':{Wx :755},'✔':{Wx :846},'✕':{Wx :762},'✖':{Wx :761},'✗':{Wx :571},'✘':{Wx :677},'✙':{Wx :763},'✚':{Wx :760},'✛':{Wx :759},'✜':{Wx :754},'✝':{Wx :494},'✞':{Wx :552},'✟':{Wx :537},'✠':{Wx :577},'✡':{Wx :692},'✢':{Wx :786},'✣':{Wx :788},'✤':{Wx :788},'✥':{Wx :790},'✦':{Wx :793},'✧':{Wx :794},'✩':{Wx :823},'✪':{Wx :789},'✫':{Wx :841},'✬':{Wx :823},'✭':{Wx :833},'✮':{Wx :816},'✯':{Wx :831},'✰':{Wx :923},'✱':{Wx :744},'✲':{Wx :723},'✳':{Wx :749},'✴':{Wx :790},'✵':{Wx :792},'✶':{Wx :695},'✷':{Wx :776},'✸':{Wx :768},'✹':{Wx :792},'✺':{Wx :759},'✻':{Wx :707},'✼':{Wx :708},'✽':{Wx :682},'✾':{Wx :701},'✿':{Wx :826},'❀':{Wx :815},'❁':{Wx :789},'❂':{Wx :789},'❃':{Wx :707},'❄':{Wx :687},'❅':{Wx :696},'❆':{Wx :689},'❇':{Wx :786},'❈':{Wx :787},'❉':{Wx :713},'❊':{Wx :791},'❋':{Wx :785},'❍':{Wx :873},'❏':{Wx :762},'❐':{Wx :762},'❑':{Wx :759},'❒':{Wx :759},'❖':{Wx :784},'❘':{Wx :138},'❙':{Wx :277},'❚':{Wx :415},'❛':{Wx :392},'❜':{Wx :392},'❝':{Wx :668},'❞':{Wx :668},'❡':{Wx :732},'❢':{Wx :544},'❣':{Wx :544},'❤':{Wx :910},'❥':{Wx :667},'❦':{Wx :760},'❧':{Wx :760},'❶':{Wx :788},'❷':{Wx :788},'❸':{Wx :788},'❹':{Wx :788},'❺':{Wx :788},'❻':{Wx :788},'❼':{Wx :788},'❽':{Wx :788},'❾':{Wx :788},'❿':{Wx :788},'➀':{Wx :788},'➁':{Wx :788},'➂':{Wx :788},'➃':{Wx :788},'➄':{Wx :788},'➅':{Wx :788},'➆':{Wx :788},'➇':{Wx :788},'➈':{Wx :788},'➉':{Wx :788},'➊':{Wx :788},'➋':{Wx :788},'➌':{Wx :788},'➍':{Wx :788},'➎':{Wx :788},'➏':{Wx :788},'➐':{Wx :788},'➑':{Wx :788},'➒':{Wx :788},'➓':{Wx :788},'➔':{Wx :894},'➘':{Wx :748},'➙':{Wx :924},'➚':{Wx :748},'➛':{Wx :918},'➜':{Wx :927},'➝':{Wx :928},'➞':{Wx :928},'➟':{Wx :834},'➠':{Wx :873},'➡':{Wx :828},'➢':{Wx :924},'➣':{Wx :924},'➤':{Wx :917},'➥':{Wx :930},'➦':{Wx :931},'➧':{Wx :463},'➨':{Wx :883},'➩':{Wx :836},'➪':{Wx :836},'➫':{Wx :867},'➬':{Wx :867},'➭':{Wx :696},'➮':{Wx :696},'➯':{Wx :874},'➱':{Wx :874},'➲':{Wx :760},'➳':{Wx :946},'➴':{Wx :771},'➵':{Wx :865},'➶':{Wx :771},'➷':{Wx :888},'➸':{Wx :967},'➹':{Wx :888},'➺':{Wx :831},'➻':{Wx :873},'➼':{Wx :927},'➽':{Wx :970},'➾':{Wx :918},'\uf8d7':{Wx :390},'\uf8d8':{Wx :390},'\uf8d9':{Wx :317},'\uf8da':{Wx :317},'\uf8db':{Wx :276},'\uf8dc':{Wx :276},'\uf8dd':{Wx :509},'\uf8de':{Wx :509},'\uf8df':{Wx :410},'\uf8e0':{Wx :410},'\uf8e1':{Wx :234},'\uf8e2':{Wx :234},'\uf8e3':{Wx :334},'\uf8e4':{Wx :334}}};
func _fbe (_acdf map[string ]uint32 )string {var _gfa []string ;for _gfb :=range _acdf {_gfa =append (_gfa ,_gfb );};_c .Slice (_gfa ,func (_cdf ,_bbce int )bool {return _acdf [_gfa [_cdf ]]< _acdf [_gfa [_bbce ]]});_fffd :=[]string {_ad .Sprintf ("\u0054\u0072\u0075\u0065Ty\u0070\u0065\u0020\u0074\u0061\u0062\u006c\u0065\u0073\u003a\u0020\u0025\u0064",len (_acdf ))};
for _ ,_cdgea :=range _gfa {_fffd =append (_fffd ,_ad .Sprintf ("\u0009%\u0071\u0020\u0025\u0035\u0064",_cdgea ,_acdf [_cdgea ]));};return _e .Join (_fffd ,"\u000a");};func (_cab *ttfParser )parseCmapSubtable10 (_aead int64 )error {if _cab ._aee .Chars ==nil {_cab ._aee .Chars =make (map[rune ]GID );
};_cab ._cag .Seek (int64 (_cab ._ffd ["\u0063\u006d\u0061\u0070"])+_aead ,_eb .SeekStart );var _dgg ,_ebf uint32 ;_dffa :=_cab .ReadUShort ();if _dffa < 8{_dgg =uint32 (_cab .ReadUShort ());_ebf =uint32 (_cab .ReadUShort ());}else {_cab .ReadUShort ();
_dgg =_cab .ReadULong ();_ebf =_cab .ReadULong ();};_af .Log .Trace ("\u0070\u0061r\u0073\u0065\u0043\u006d\u0061p\u0053\u0075\u0062\u0074\u0061b\u006c\u0065\u0031\u0030\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067\u0075\u0061\u0067\u0065\u003d\u0025\u0064",_dffa ,_dgg ,_ebf );
if _dffa !=0{return _f .New ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063\u006d\u0061p\u0020s\u0075\u0062\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_dad ,_deb :=_cab .ReadStr (256);if _deb !=nil {return _deb ;
};_bcc :=[]byte (_dad );for _dce ,_ddc :=range _bcc {_cab ._aee .Chars [rune (_dce )]=GID (_ddc );if _ddc !=0{_ad .Printf ("\u0009\u0030\u0078\u002502\u0078\u0020\u279e\u0020\u0030\u0078\u0025\u0030\u0032\u0078\u003d\u0025\u0063\u000a",_dce ,_ddc ,rune (_ddc ));
};};return nil ;};func _be (){const _bag =600;_eda =MakeRuneCharSafeMap (len (_dff ));for _ ,_fac :=range _dff {_eda .Write (_fac ,CharMetrics {Wx :_bag });};_ee =_eda .Copy ();_ebb =_eda .Copy ();_cbb =_eda .Copy ();};