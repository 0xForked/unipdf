//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package fonts ;import (_fg "bytes";_be "encoding/binary";_bf "errors";_f "fmt";_eb "github.com/unidoc/unipdf/v3/common";_ff "github.com/unidoc/unipdf/v3/core";_eg "github.com/unidoc/unipdf/v3/internal/cmap";_g "github.com/unidoc/unipdf/v3/internal/textencoding";
_gd "golang.org/x/xerrors";_bd "io";_fe "os";_bb "regexp";_bg "sort";_a "strings";_e "sync";);func (_gac *TtfType )NewEncoder ()_g .TextEncoder {return _g .NewTrueTypeFontEncoder (_gac .Chars )};const (SymbolName =StdFontName ("\u0053\u0079\u006d\u0062\u006f\u006c");
ZapfDingbatsName =StdFontName ("\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073"););func _gfg (){_abc =MakeRuneCharSafeMap (len (_bde ));_ffaf =MakeRuneCharSafeMap (len (_bde ));for _fbe ,_eaf :=range _bde {_abc .Write (_eaf ,CharMetrics {Wx :float64 (_fdd [_fbe ])});
_ffaf .Write (_eaf ,CharMetrics {Wx :float64 (_ccc [_fbe ])});};_bbe =_abc .Copy ();_gdg =_ffaf .Copy ();};func _gf ()StdFont {_fa .Do (_cca );_fgd :=Descriptor {Name :CourierBoldName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0021,BBox :[4]float64 {-113,-250,749,801},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_fgd ,_ade );};func _agb ()StdFont {_df .Do (_fde );_fge :=Descriptor {Name :TimesBoldName ,Family :_dcdd ,Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,935},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :676,XHeight :461,StemV :139,StemH :44};
return NewStdFont (_fge ,_fcb );};var _bde =[]rune {'A','Æ','Á','Ă','Â','Ä','À','Ā','Ą','Å','Ã','B','C','Ć','Č','Ç','D','Ď','Đ','∆','E','É','Ě','Ê','Ë','Ė','È','Ē','Ę','Ð','€','F','G','Ğ','Ģ','H','I','Í','Î','Ï','İ','Ì','Ī','Į','J','K','Ķ','L','Ĺ','Ľ','Ļ','Ł','M','N','Ń','Ň','Ņ','Ñ','O','Œ','Ó','Ô','Ö','Ò','Ő','Ō','Ø','Õ','P','Q','R','Ŕ','Ř','Ŗ','S','Ś','Š','Ş','Ș','T','Ť','Ţ','Þ','U','Ú','Û','Ü','Ù','Ű','Ū','Ų','Ů','V','W','X','Y','Ý','Ÿ','Z','Ź','Ž','Ż','a','á','ă','â','´','ä','æ','à','ā','&','ą','å','^','~','*','@','ã','b','\\','|','{','}','[',']','˘','¦','•','c','ć','ˇ','č','ç','¸','¢','ˆ',':',',','\uf6c3','©','¤','d','†','‡','ď','đ','°','¨','÷','$','˙','ı','e','é','ě','ê','ë','ė','è','8','…','ē','—','–','ę','=','ð','!','¡','f','ﬁ','5','ﬂ','ƒ','4','⁄','g','ğ','ģ','ß','`','>','≥','«','»','‹','›','h','˝','-','i','í','î','ï','ì','ī','į','j','k','ķ','l','ĺ','ľ','ļ','<','≤','¬','◊','ł','m','¯','−','µ','×','n','ń','ň','ņ','9','≠','ñ','#','o','ó','ô','ö','œ','˛','ò','ő','ō','1','½','¼','¹','ª','º','ø','õ','p','¶','(',')','∂','%','.','·','‰','+','±','q','?','¿','"','„','“','”','‘','’','‚','\'','r','ŕ','√','ř','ŗ','®','˚','s','ś','š','ş','ș','§',';','7','6','/',' ','£','∑','t','ť','ţ','þ','3','¾','³','˜','™','2','²','u','ú','û','ü','ù','ű','ū','_','ų','ů','v','w','x','y','ý','ÿ','¥','z','ź','ž','ż','0'};
type GlyphName =_g .GlyphName ;var _ccc =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,556,722,722,611,611,611,611,611,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,722,556,556,584,584,389,975,556,611,278,280,389,389,333,333,333,280,350,556,556,333,556,556,333,556,333,333,278,250,737,556,611,556,556,743,611,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,611,333,333,333,611,556,611,556,556,167,611,611,611,611,333,584,549,556,556,333,333,611,333,333,278,278,278,278,278,278,278,278,556,556,278,278,400,278,584,549,584,494,278,889,333,584,611,584,611,611,611,611,556,549,611,556,611,611,611,611,944,333,611,611,611,556,834,834,333,370,365,611,611,611,556,333,333,494,889,278,278,1000,584,584,611,611,611,474,500,500,500,278,278,278,238,389,389,549,389,389,737,333,556,556,556,556,556,556,333,556,556,278,278,556,600,333,389,333,611,556,834,333,333,1000,556,333,611,611,611,611,611,611,611,556,611,611,556,778,556,556,556,556,556,500,500,500,500,556};
func (_bfa *fontMap )write (_gg StdFontName ,_dc func ()StdFont ){_bfa .Lock ();defer _bfa .Unlock ();_bfa ._edd [_gg ]=_dc ;};func (_bga *ttfParser )ParseCmap ()error {var _fgf int64 ;if _agbb :=_bga .Seek ("\u0063\u006d\u0061\u0070");_agbb !=nil {return _agbb ;
};_eb .Log .Trace ("\u0050a\u0072\u0073\u0065\u0043\u006d\u0061p");_bga .ReadUShort ();_gfgg :=int (_bga .ReadUShort ());_cce :=int64 (0);_fba :=int64 (0);_abb :=int64 (0);for _edef :=0;_edef < _gfgg ;_edef ++{_gce :=_bga .ReadUShort ();_dfe :=_bga .ReadUShort ();
_fgf =int64 (_bga .ReadULong ());if _gce ==3&&_dfe ==1{_fba =_fgf ;}else if _gce ==3&&_dfe ==10{_abb =_fgf ;}else if _gce ==1&&_dfe ==0{_cce =_fgf ;};};if _cce !=0{if _gfga :=_bga .parseCmapVersion (_cce );_gfga !=nil {return _gfga ;};};if _fba !=0{if _cgcf :=_bga .parseCmapSubtable31 (_fba );
_cgcf !=nil {return _cgcf ;};};if _abb !=0{if _dfce :=_bga .parseCmapVersion (_abb );_dfce !=nil {return _dfce ;};};if _fba ==0&&_cce ==0&&_abb ==0{_eb .Log .Debug ("\u0074\u0074\u0066P\u0061\u0072\u0073\u0065\u0072\u002e\u0050\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u002e\u0020\u004e\u006f\u0020\u0033\u0031\u002c\u0020\u0031\u0030\u002c\u0020\u00331\u0030\u0020\u0074\u0061\u0062\u006c\u0065\u002e");
};return nil ;};func NewStdFontWithEncoding (desc Descriptor ,metrics *RuneCharSafeMap ,encoder _g .TextEncoder )StdFont {var _db rune =0xA0;if _ ,_cga :=metrics .Read (_db );!_cga {_dbd ,_ :=metrics .Read (0x20);metrics .Write (_db ,_dbd );};return StdFont {_bfb :desc ,_de :metrics ,_dde :encoder };
};func RegisterStdFont (name StdFontName ,fnc func ()StdFont ,aliases ...StdFontName ){if _ ,_cg :=_aa .read (name );_cg {panic ("\u0066o\u006e\u0074\u0020\u0061l\u0072\u0065\u0061\u0064\u0079 \u0072e\u0067i\u0073\u0074\u0065\u0072\u0065\u0064\u003a "+string (name ));
};_aa .write (name ,fnc );for _ ,_ggg :=range aliases {RegisterStdFont (_ggg ,fnc );};};func _afg ()StdFont {_fa .Do (_cca );_gb :=Descriptor {Name :CourierObliqueName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0061,BBox :[4]float64 {-27,-250,849,805},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_gb ,_ec );};var _ade *RuneCharSafeMap ;var _ebc =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,611,778,778,778,778,389,389,389,389,389,389,389,389,500,778,778,667,667,667,667,667,944,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,611,778,722,722,722,722,556,556,556,556,556,667,667,667,611,722,722,722,722,722,722,722,722,722,722,1000,722,722,722,722,667,667,667,667,500,500,500,500,333,500,722,500,500,833,500,500,581,520,500,930,500,556,278,220,394,394,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,556,500,500,672,556,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,333,333,333,556,500,556,500,500,167,500,500,500,556,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,333,556,556,278,278,394,278,570,549,570,494,278,833,333,570,556,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,300,330,500,500,556,540,333,333,494,1000,250,250,1000,570,570,556,500,500,555,500,500,500,333,333,333,278,444,444,549,444,444,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,333,416,333,556,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,500,722,500,500,500,500,500,444,444,444,444,500};
func (_ga StdFont )Descriptor ()Descriptor {return _ga ._bfb };type StdFontName string ;func _efe ()StdFont {_cbff :=_g .NewSymbolEncoder ();_edf :=Descriptor {Name :SymbolName ,Family :string (SymbolName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-180,-293,1090,1010},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :85,StemH :92};
return NewStdFontWithEncoding (_edf ,_daa ,_cbff );};var _ffaf *RuneCharSafeMap ;func MakeRuneCharSafeMap (length int )*RuneCharSafeMap {return &RuneCharSafeMap {_gc :make (map[rune ]CharMetrics ,length )};};var _ Font =StdFont {};func (_bgc StdFont )GetMetricsTable ()*RuneCharSafeMap {return _bgc ._de };
var _egf *RuneCharSafeMap ;func _dbg ()StdFont {_fa .Do (_cca );_ea :=Descriptor {Name :CourierBoldObliqueName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0061,BBox :[4]float64 {-57,-250,869,801},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_ea ,_egf );};func (_fc CharMetrics )String ()string {return _f .Sprintf ("<\u0025\u002e\u0031\u0066\u002c\u0025\u002e\u0031\u0066\u003e",_fc .Wx ,_fc .Wy );};func _bdg ()StdFont {_fa .Do (_cca );_cbd :=Descriptor {Name :CourierName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0021,BBox :[4]float64 {-23,-250,715,805},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_cbd ,_ad );};var _bbe *RuneCharSafeMap ;func (_fdab *ttfParser )Seek (tag string )error {_aeb ,_ffbga :=_fdab ._dgb [tag ];if !_ffbga {return _f .Errorf ("\u0074\u0061\u0062\u006ce \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0073",tag );
};_fdab ._fega .Seek (int64 (_aeb ),_bd .SeekStart );return nil ;};var _gca =[]int16 {611,889,611,611,611,611,611,611,611,611,611,611,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,611,722,722,722,722,333,333,333,333,333,333,333,333,444,667,667,556,556,611,556,556,833,667,667,667,667,667,722,944,722,722,722,722,722,722,722,722,611,722,611,611,611,611,500,500,500,500,500,556,556,556,611,722,722,722,722,722,722,722,722,722,611,833,611,556,556,556,556,556,556,556,500,500,500,500,333,500,667,500,500,778,500,500,422,541,500,920,500,500,278,275,400,400,389,389,333,275,350,444,444,333,444,444,333,500,333,333,250,250,760,500,500,500,500,544,500,400,333,675,500,333,278,444,444,444,444,444,444,444,500,889,444,889,500,444,675,500,333,389,278,500,500,500,500,500,167,500,500,500,500,333,675,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,444,444,278,278,300,278,675,549,675,471,278,722,333,675,500,675,500,500,500,500,500,549,500,500,500,500,500,500,667,333,500,500,500,500,750,750,300,276,310,500,500,500,523,333,333,476,833,250,250,1000,675,675,500,500,500,420,556,556,556,333,333,333,214,389,389,453,389,389,760,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,300,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,444,667,444,444,444,444,500,389,389,389,389,500};
var _fcb *RuneCharSafeMap ;func _fbf ()StdFont {_ddc :=_g .NewZapfDingbatsEncoder ();_fbea :=Descriptor {Name :ZapfDingbatsName ,Family :string (ZapfDingbatsName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-1,-143,981,820},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :90,StemH :28};
return NewStdFontWithEncoding (_fbea ,_aca ,_ddc );};const (HelveticaName =StdFontName ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");HelveticaBoldName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061-\u0042\u006f\u006c\u0064");HelveticaObliqueName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061\u002d\u004f\u0062l\u0069\u0071\u0075\u0065");
HelveticaBoldObliqueName =StdFontName ("H\u0065\u006c\u0076\u0065ti\u0063a\u002d\u0042\u006f\u006c\u0064O\u0062\u006c\u0069\u0071\u0075\u0065"););func init (){RegisterStdFont (CourierName ,_bdg ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u0043\u006f\u0075\u0072\u0069e\u0072\u004e\u0065\u0077","\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077");
RegisterStdFont (CourierBoldName ,_gf ,"\u0043o\u0075r\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (CourierObliqueName ,_afg ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (CourierBoldObliqueName ,_dbg ,"C\u006f\u0075\u0072\u0069er\u004ee\u0077\u002c\u0042\u006f\u006cd\u0049\u0074\u0061\u006c\u0069\u0063");};func (_dca *ttfParser )parseCmapSubtable10 (_gec int64 )error {if _dca ._fbc .Chars ==nil {_dca ._fbc .Chars =make (map[rune ]GID );
};_dca ._fega .Seek (int64 (_dca ._dgb ["\u0063\u006d\u0061\u0070"])+_gec ,_bd .SeekStart );var _bdc ,_ggf uint32 ;_baf :=_dca .ReadUShort ();if _baf < 8{_bdc =uint32 (_dca .ReadUShort ());_ggf =uint32 (_dca .ReadUShort ());}else {_dca .ReadUShort ();_bdc =_dca .ReadULong ();
_ggf =_dca .ReadULong ();};_eb .Log .Trace ("\u0070\u0061r\u0073\u0065\u0043\u006d\u0061p\u0053\u0075\u0062\u0074\u0061b\u006c\u0065\u0031\u0030\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067\u0075\u0061\u0067\u0065\u003d\u0025\u0064",_baf ,_bdc ,_ggf );
if _baf !=0{return _bf .New ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063\u006d\u0061p\u0020s\u0075\u0062\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_gae ,_dada :=_dca .ReadStr (256);if _dada !=nil {return _dada ;
};_bdfc :=[]byte (_gae );for _ccb ,_dgd :=range _bdfc {_dca ._fbc .Chars [rune (_ccb )]=GID (_dgd );if _dgd !=0{_f .Printf ("\u0009\u0030\u0078\u002502\u0078\u0020\u279e\u0020\u0030\u0078\u0025\u0030\u0032\u0078\u003d\u0025\u0063\u000a",_ccb ,_dgd ,rune (_dgd ));
};};return nil ;};func _aaf ()StdFont {_bgd .Do (_gfg );_aff :=Descriptor {Name :HelveticaName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0020,BBox :[4]float64 {-166,-225,1000,931},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_aff ,_abc );};var _df _e .Once ;type FontWeight int ;var _caa *RuneCharSafeMap ;var _ad *RuneCharSafeMap ;func (_cdc *ttfParser )ReadStr (length int )(string ,error ){_adea :=make ([]byte ,length );_gddg ,_cdb :=_cdc ._fega .Read (_adea );
if _cdb !=nil {return "",_cdb ;}else if _gddg !=length {return "",_f .Errorf ("\u0075\u006e\u0061bl\u0065\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0073",length );};return string (_adea ),nil ;};func (_eeec *ttfParser )parseCmapVersion (_bgdg int64 )error {_eb .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006da\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a \u006f\u0066\u0066s\u0065t\u003d\u0025\u0064",_bgdg );
if _eeec ._fbc .Chars ==nil {_eeec ._fbc .Chars =make (map[rune ]GID );};_eeec ._fega .Seek (int64 (_eeec ._dgb ["\u0063\u006d\u0061\u0070"])+_bgdg ,_bd .SeekStart );var _agbba ,_fffe uint32 ;_ddea :=_eeec .ReadUShort ();if _ddea < 8{_agbba =uint32 (_eeec .ReadUShort ());
_fffe =uint32 (_eeec .ReadUShort ());}else {_eeec .ReadUShort ();_agbba =_eeec .ReadULong ();_fffe =_eeec .ReadULong ();};_eb .Log .Debug ("\u0070\u0061\u0072\u0073\u0065\u0043m\u0061\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064 \u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067u\u0061g\u0065\u003d\u0025\u0064",_ddea ,_agbba ,_fffe );
switch _ddea {case 0:return _eeec .parseCmapFormat0 ();case 6:return _eeec .parseCmapFormat6 ();case 12:return _eeec .parseCmapFormat12 ();default:_eb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063m\u0061\u0070\u0020\u0066\u006f\u0072\u006da\u0074\u003d\u0025\u0064",_ddea );
return nil ;};};func (_feaa *ttfParser )ParseHmtx ()error {if _ccgd :=_feaa .Seek ("\u0068\u006d\u0074\u0078");_ccgd !=nil {return _ccgd ;};_feaa ._fbc .Widths =make ([]uint16 ,0,8);for _adgb :=uint16 (0);_adgb < _feaa ._ddbd ;_adgb ++{_feaa ._fbc .Widths =append (_feaa ._fbc .Widths ,_feaa .ReadUShort ());
_feaa .Skip (2);};if _feaa ._ddbd < _feaa ._def &&_feaa ._ddbd > 0{_agbd :=_feaa ._fbc .Widths [_feaa ._ddbd -1];for _eff :=_feaa ._ddbd ;_eff < _feaa ._def ;_eff ++{_feaa ._fbc .Widths =append (_feaa ._fbc .Widths ,_agbd );};};return nil ;};func _bbd ()StdFont {_df .Do (_fde );
_afga :=Descriptor {Name :TimesBoldItalicName ,Family :_dcdd ,Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-200,-218,996,921},ItalicAngle :-15,Ascent :683,Descent :-217,CapHeight :669,XHeight :462,StemV :121,StemH :42};return NewStdFont (_afga ,_caa );
};func IsStdFont (name StdFontName )bool {_ ,_fff :=_aa .read (name );return _fff };func init (){RegisterStdFont (HelveticaName ,_aaf ,"\u0041\u0072\u0069a\u006c");RegisterStdFont (HelveticaBoldName ,_ag ,"\u0041\u0072\u0069\u0061\u006c\u002c\u0042\u006f\u006c\u0064");
RegisterStdFont (HelveticaObliqueName ,_abg ,"\u0041\u0072\u0069a\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063");RegisterStdFont (HelveticaBoldObliqueName ,_ffg ,"\u0041\u0072i\u0061\u006c\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
};func (_cd *RuneCharSafeMap )Length ()int {_cd ._ffb .RLock ();defer _cd ._ffb .RUnlock ();return len (_cd ._gc );};func (_ffaa *ttfParser )ParsePost ()error {if _gadd :=_ffaa .Seek ("\u0070\u006f\u0073\u0074");_gadd !=nil {return _gadd ;};_gbf :=_ffaa .Read32Fixed ();
_ffaa ._fbc .ItalicAngle =_ffaa .Read32Fixed ();_ffaa ._fbc .UnderlinePosition =_ffaa .ReadShort ();_ffaa ._fbc .UnderlineThickness =_ffaa .ReadShort ();_ffaa ._fbc .IsFixedPitch =_ffaa .ReadULong ()!=0;_ffaa .ReadULong ();_ffaa .ReadULong ();_ffaa .ReadULong ();
_ffaa .ReadULong ();_eb .Log .Trace ("\u0050a\u0072\u0073\u0065\u0050\u006f\u0073\u0074\u003a\u0020\u0066\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065\u003d\u0025\u0066",_gbf );switch _gbf {case 1.0:_ffaa ._fbc .GlyphNames =_ebfc ;case 2.0:_ffcg :=int (_ffaa .ReadUShort ());
_eeg :=make ([]int ,_ffcg );_ffaa ._fbc .GlyphNames =make ([]GlyphName ,_ffcg );_eefg :=-1;for _ddgg :=0;_ddgg < _ffcg ;_ddgg ++{_bdgf :=int (_ffaa .ReadUShort ());_eeg [_ddgg ]=_bdgf ;if _bdgf <=0x7fff&&_bdgf > _eefg {_eefg =_bdgf ;};};var _faa []GlyphName ;
if _eefg >=len (_ebfc ){_faa =make ([]GlyphName ,_eefg -len (_ebfc )+1);for _gbfe :=0;_gbfe < _eefg -len (_ebfc )+1;_gbfe ++{_bed :=int (_ffaa .readByte ());_efc ,_cbgg :=_ffaa .ReadStr (_bed );if _cbgg !=nil {return _cbgg ;};_faa [_gbfe ]=GlyphName (_efc );
};};for _baab :=0;_baab < _ffcg ;_baab ++{_fcg :=_eeg [_baab ];if _fcg < len (_ebfc ){_ffaa ._fbc .GlyphNames [_baab ]=_ebfc [_fcg ];}else if _fcg >=len (_ebfc )&&_fcg <=32767{_ffaa ._fbc .GlyphNames [_baab ]=_faa [_fcg -len (_ebfc )];}else {_ffaa ._fbc .GlyphNames [_baab ]="\u002e\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064";
};};case 2.5:_gcdc :=make ([]int ,_ffaa ._def );for _ffe :=0;_ffe < len (_gcdc );_ffe ++{_acae :=int (_ffaa .ReadSByte ());_gcdc [_ffe ]=_ffe +1+_acae ;};_ffaa ._fbc .GlyphNames =make ([]GlyphName ,len (_gcdc ));for _fgb :=0;_fgb < len (_ffaa ._fbc .GlyphNames );
_fgb ++{_eeef :=_ebfc [_gcdc [_fgb ]];_ffaa ._fbc .GlyphNames [_fgb ]=_eeef ;};case 3.0:_eb .Log .Debug ("\u004e\u006f\u0020\u0050\u006f\u0073t\u0053\u0063\u0072i\u0070\u0074\u0020n\u0061\u006d\u0065\u0020\u0069\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020is\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0066\u006f\u006e\u0074\u002e");
default:_eb .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020f\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065=\u0025\u0066",_gbf );};return nil ;};func (_ffd *ttfParser )ParseComponents ()error {if _aed :=_ffd .ParseHead ();
_aed !=nil {return _aed ;};if _acac :=_ffd .ParseHhea ();_acac !=nil {return _acac ;};if _bc :=_ffd .ParseMaxp ();_bc !=nil {return _bc ;};if _edc :=_ffd .ParseHmtx ();_edc !=nil {return _edc ;};if _ ,_ddeb :=_ffd ._dgb ["\u006e\u0061\u006d\u0065"];_ddeb {if _ffc :=_ffd .ParseName ();
_ffc !=nil {return _ffc ;};};if _ ,_adg :=_ffd ._dgb ["\u004f\u0053\u002f\u0032"];_adg {if _gag :=_ffd .ParseOS2 ();_gag !=nil {return _gag ;};};if _ ,_fffb :=_ffd ._dgb ["\u0070\u006f\u0073\u0074"];_fffb {if _dee :=_ffd .ParsePost ();_dee !=nil {return _dee ;
};};if _ ,_gef :=_ffd ._dgb ["\u0063\u006d\u0061\u0070"];_gef {if _egfe :=_ffd .ParseCmap ();_egfe !=nil {return _egfe ;};};return nil ;};var _aca =&RuneCharSafeMap {_gc :map[rune ]CharMetrics {' ':{Wx :278},'→':{Wx :838},'↔':{Wx :1016},'↕':{Wx :458},'①':{Wx :788},'②':{Wx :788},'③':{Wx :788},'④':{Wx :788},'⑤':{Wx :788},'⑥':{Wx :788},'⑦':{Wx :788},'⑧':{Wx :788},'⑨':{Wx :788},'⑩':{Wx :788},'■':{Wx :761},'▲':{Wx :892},'▼':{Wx :892},'◆':{Wx :788},'●':{Wx :791},'◗':{Wx :438},'★':{Wx :816},'☎':{Wx :719},'☛':{Wx :960},'☞':{Wx :939},'♠':{Wx :626},'♣':{Wx :776},'♥':{Wx :694},'♦':{Wx :595},'✁':{Wx :974},'✂':{Wx :961},'✃':{Wx :974},'✄':{Wx :980},'✆':{Wx :789},'✇':{Wx :790},'✈':{Wx :791},'✉':{Wx :690},'✌':{Wx :549},'✍':{Wx :855},'✎':{Wx :911},'✏':{Wx :933},'✐':{Wx :911},'✑':{Wx :945},'✒':{Wx :974},'✓':{Wx :755},'✔':{Wx :846},'✕':{Wx :762},'✖':{Wx :761},'✗':{Wx :571},'✘':{Wx :677},'✙':{Wx :763},'✚':{Wx :760},'✛':{Wx :759},'✜':{Wx :754},'✝':{Wx :494},'✞':{Wx :552},'✟':{Wx :537},'✠':{Wx :577},'✡':{Wx :692},'✢':{Wx :786},'✣':{Wx :788},'✤':{Wx :788},'✥':{Wx :790},'✦':{Wx :793},'✧':{Wx :794},'✩':{Wx :823},'✪':{Wx :789},'✫':{Wx :841},'✬':{Wx :823},'✭':{Wx :833},'✮':{Wx :816},'✯':{Wx :831},'✰':{Wx :923},'✱':{Wx :744},'✲':{Wx :723},'✳':{Wx :749},'✴':{Wx :790},'✵':{Wx :792},'✶':{Wx :695},'✷':{Wx :776},'✸':{Wx :768},'✹':{Wx :792},'✺':{Wx :759},'✻':{Wx :707},'✼':{Wx :708},'✽':{Wx :682},'✾':{Wx :701},'✿':{Wx :826},'❀':{Wx :815},'❁':{Wx :789},'❂':{Wx :789},'❃':{Wx :707},'❄':{Wx :687},'❅':{Wx :696},'❆':{Wx :689},'❇':{Wx :786},'❈':{Wx :787},'❉':{Wx :713},'❊':{Wx :791},'❋':{Wx :785},'❍':{Wx :873},'❏':{Wx :762},'❐':{Wx :762},'❑':{Wx :759},'❒':{Wx :759},'❖':{Wx :784},'❘':{Wx :138},'❙':{Wx :277},'❚':{Wx :415},'❛':{Wx :392},'❜':{Wx :392},'❝':{Wx :668},'❞':{Wx :668},'❡':{Wx :732},'❢':{Wx :544},'❣':{Wx :544},'❤':{Wx :910},'❥':{Wx :667},'❦':{Wx :760},'❧':{Wx :760},'❶':{Wx :788},'❷':{Wx :788},'❸':{Wx :788},'❹':{Wx :788},'❺':{Wx :788},'❻':{Wx :788},'❼':{Wx :788},'❽':{Wx :788},'❾':{Wx :788},'❿':{Wx :788},'➀':{Wx :788},'➁':{Wx :788},'➂':{Wx :788},'➃':{Wx :788},'➄':{Wx :788},'➅':{Wx :788},'➆':{Wx :788},'➇':{Wx :788},'➈':{Wx :788},'➉':{Wx :788},'➊':{Wx :788},'➋':{Wx :788},'➌':{Wx :788},'➍':{Wx :788},'➎':{Wx :788},'➏':{Wx :788},'➐':{Wx :788},'➑':{Wx :788},'➒':{Wx :788},'➓':{Wx :788},'➔':{Wx :894},'➘':{Wx :748},'➙':{Wx :924},'➚':{Wx :748},'➛':{Wx :918},'➜':{Wx :927},'➝':{Wx :928},'➞':{Wx :928},'➟':{Wx :834},'➠':{Wx :873},'➡':{Wx :828},'➢':{Wx :924},'➣':{Wx :924},'➤':{Wx :917},'➥':{Wx :930},'➦':{Wx :931},'➧':{Wx :463},'➨':{Wx :883},'➩':{Wx :836},'➪':{Wx :836},'➫':{Wx :867},'➬':{Wx :867},'➭':{Wx :696},'➮':{Wx :696},'➯':{Wx :874},'➱':{Wx :874},'➲':{Wx :760},'➳':{Wx :946},'➴':{Wx :771},'➵':{Wx :865},'➶':{Wx :771},'➷':{Wx :888},'➸':{Wx :967},'➹':{Wx :888},'➺':{Wx :831},'➻':{Wx :873},'➼':{Wx :927},'➽':{Wx :970},'➾':{Wx :918},'\uf8d7':{Wx :390},'\uf8d8':{Wx :390},'\uf8d9':{Wx :317},'\uf8da':{Wx :317},'\uf8db':{Wx :276},'\uf8dc':{Wx :276},'\uf8dd':{Wx :509},'\uf8de':{Wx :509},'\uf8df':{Wx :410},'\uf8e0':{Wx :410},'\uf8e1':{Wx :234},'\uf8e2':{Wx :234},'\uf8e3':{Wx :334},'\uf8e4':{Wx :334}}};
func (_fddc *TtfType )MakeToUnicode ()*_eg .CMap {_fda :=make (map[_eg .CharCode ]rune );if len (_fddc .GlyphNames )==0{return _eg .NewToUnicodeCMap (_fda );};for _fdg ,_gaf :=range _fddc .Chars {_ecc :=_eg .CharCode (_fdg );_efd :=_fddc .GlyphNames [_gaf ];
_dcb ,_ccga :=_g .GlyphToRune (_efd );if !_ccga {_eb .Log .Debug ("\u004e\u006f \u0072\u0075\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065\u003d\u0030\u0078\u0025\u0030\u0034\u0078\u0020\u0067\u006c\u0079\u0070h=\u0025\u0071",_fdg ,_efd );_dcb =_g .MissingCodeRune ;
};_fda [_ecc ]=_dcb ;};return _eg .NewToUnicodeCMap (_fda );};func NewStdFont (desc Descriptor ,metrics *RuneCharSafeMap )StdFont {return NewStdFontWithEncoding (desc ,metrics ,_g .NewStandardEncoder ());};var _daa =&RuneCharSafeMap {_gc :map[rune ]CharMetrics {' ':{Wx :250},'!':{Wx :333},'#':{Wx :500},'%':{Wx :833},'&':{Wx :778},'(':{Wx :333},')':{Wx :333},'+':{Wx :549},',':{Wx :250},'.':{Wx :250},'/':{Wx :278},'0':{Wx :500},'1':{Wx :500},'2':{Wx :500},'3':{Wx :500},'4':{Wx :500},'5':{Wx :500},'6':{Wx :500},'7':{Wx :500},'8':{Wx :500},'9':{Wx :500},':':{Wx :278},';':{Wx :278},'<':{Wx :549},'=':{Wx :549},'>':{Wx :549},'?':{Wx :444},'[':{Wx :333},']':{Wx :333},'_':{Wx :500},'{':{Wx :480},'|':{Wx :200},'}':{Wx :480},'¬':{Wx :713},'°':{Wx :400},'±':{Wx :549},'µ':{Wx :576},'×':{Wx :549},'÷':{Wx :549},'ƒ':{Wx :500},'Α':{Wx :722},'Β':{Wx :667},'Γ':{Wx :603},'Ε':{Wx :611},'Ζ':{Wx :611},'Η':{Wx :722},'Θ':{Wx :741},'Ι':{Wx :333},'Κ':{Wx :722},'Λ':{Wx :686},'Μ':{Wx :889},'Ν':{Wx :722},'Ξ':{Wx :645},'Ο':{Wx :722},'Π':{Wx :768},'Ρ':{Wx :556},'Σ':{Wx :592},'Τ':{Wx :611},'Υ':{Wx :690},'Φ':{Wx :763},'Χ':{Wx :722},'Ψ':{Wx :795},'α':{Wx :631},'β':{Wx :549},'γ':{Wx :411},'δ':{Wx :494},'ε':{Wx :439},'ζ':{Wx :494},'η':{Wx :603},'θ':{Wx :521},'ι':{Wx :329},'κ':{Wx :549},'λ':{Wx :549},'ν':{Wx :521},'ξ':{Wx :493},'ο':{Wx :549},'π':{Wx :549},'ρ':{Wx :549},'ς':{Wx :439},'σ':{Wx :603},'τ':{Wx :439},'υ':{Wx :576},'φ':{Wx :521},'χ':{Wx :549},'ψ':{Wx :686},'ω':{Wx :686},'ϑ':{Wx :631},'ϒ':{Wx :620},'ϕ':{Wx :603},'ϖ':{Wx :713},'•':{Wx :460},'…':{Wx :1000},'′':{Wx :247},'″':{Wx :411},'⁄':{Wx :167},'€':{Wx :750},'ℑ':{Wx :686},'℘':{Wx :987},'ℜ':{Wx :795},'Ω':{Wx :768},'ℵ':{Wx :823},'←':{Wx :987},'↑':{Wx :603},'→':{Wx :987},'↓':{Wx :603},'↔':{Wx :1042},'↵':{Wx :658},'⇐':{Wx :987},'⇑':{Wx :603},'⇒':{Wx :987},'⇓':{Wx :603},'⇔':{Wx :1042},'∀':{Wx :713},'∂':{Wx :494},'∃':{Wx :549},'∅':{Wx :823},'∆':{Wx :612},'∇':{Wx :713},'∈':{Wx :713},'∉':{Wx :713},'∋':{Wx :439},'∏':{Wx :823},'∑':{Wx :713},'−':{Wx :549},'∗':{Wx :500},'√':{Wx :549},'∝':{Wx :713},'∞':{Wx :713},'∠':{Wx :768},'∧':{Wx :603},'∨':{Wx :603},'∩':{Wx :768},'∪':{Wx :768},'∫':{Wx :274},'∴':{Wx :863},'∼':{Wx :549},'≅':{Wx :549},'≈':{Wx :549},'≠':{Wx :549},'≡':{Wx :549},'≤':{Wx :549},'≥':{Wx :549},'⊂':{Wx :713},'⊃':{Wx :713},'⊄':{Wx :713},'⊆':{Wx :713},'⊇':{Wx :713},'⊕':{Wx :768},'⊗':{Wx :768},'⊥':{Wx :658},'⋅':{Wx :250},'⌠':{Wx :686},'⌡':{Wx :686},'〈':{Wx :329},'〉':{Wx :329},'◊':{Wx :494},'♠':{Wx :753},'♣':{Wx :753},'♥':{Wx :753},'♦':{Wx :753},'\uf6d9':{Wx :790},'\uf6da':{Wx :790},'\uf6db':{Wx :890},'\uf8e5':{Wx :500},'\uf8e6':{Wx :603},'\uf8e7':{Wx :1000},'\uf8e8':{Wx :790},'\uf8e9':{Wx :790},'\uf8ea':{Wx :786},'\uf8eb':{Wx :384},'\uf8ec':{Wx :384},'\uf8ed':{Wx :384},'\uf8ee':{Wx :384},'\uf8ef':{Wx :384},'\uf8f0':{Wx :384},'\uf8f1':{Wx :494},'\uf8f2':{Wx :494},'\uf8f3':{Wx :494},'\uf8f4':{Wx :494},'\uf8f5':{Wx :686},'\uf8f6':{Wx :384},'\uf8f7':{Wx :384},'\uf8f8':{Wx :384},'\uf8f9':{Wx :384},'\uf8fa':{Wx :384},'\uf8fb':{Wx :384},'\uf8fc':{Wx :494},'\uf8fd':{Wx :494},'\uf8fe':{Wx :494},'\uf8ff':{Wx :790}}};
func (_efa *ttfParser )ParseMaxp ()error {if _egg :=_efa .Seek ("\u006d\u0061\u0078\u0070");_egg !=nil {return _egg ;};_efa .Skip (4);_efa ._def =_efa .ReadUShort ();return nil ;};type GID =_g .GID ;func (_dcc *ttfParser )readByte ()(_defe uint8 ){_be .Read (_dcc ._fega ,_be .BigEndian ,&_defe );
return _defe ;};func (_daaf *ttfParser )ReadULong ()(_degf uint32 ){_be .Read (_daaf ._fega ,_be .BigEndian ,&_degf );return _degf ;};func _bbb ()StdFont {_df .Do (_fde );_dge :=Descriptor {Name :TimesRomanName ,Family :_dcdd ,Weight :FontWeightRoman ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,898},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :662,XHeight :450,StemV :84,StemH :28};
return NewStdFont (_dge ,_cf );};type RuneCharSafeMap struct{_gc map[rune ]CharMetrics ;_ffb _e .RWMutex ;};func init (){RegisterStdFont (SymbolName ,_efe ,"\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063","S\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064","\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (ZapfDingbatsName ,_fbf );};type fontMap struct{_e .Mutex ;_edd map[StdFontName ]func ()StdFont ;};var _aa =&fontMap {_edd :make (map[StdFontName ]func ()StdFont )};var _fee =[]int16 {722,889,722,722,722,722,722,722,722,722,722,667,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,556,722,722,722,722,333,333,333,333,333,333,333,333,389,722,722,611,611,611,611,611,889,722,722,722,722,722,722,889,722,722,722,722,722,722,722,722,556,722,667,667,667,667,556,556,556,556,556,611,611,611,556,722,722,722,722,722,722,722,722,722,722,944,722,722,722,722,611,611,611,611,444,444,444,444,333,444,667,444,444,778,444,444,469,541,500,921,444,500,278,200,480,480,333,333,333,200,350,444,444,333,444,444,333,500,333,278,250,250,760,500,500,500,500,588,500,400,333,564,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,564,500,333,333,333,556,500,556,500,500,167,500,500,500,500,333,564,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,500,500,278,278,344,278,564,549,564,471,278,778,333,564,500,564,500,500,500,500,500,549,500,500,500,500,500,500,722,333,500,500,500,500,750,750,300,276,310,500,500,500,453,333,333,476,833,250,250,1000,564,564,500,444,444,408,444,444,444,333,333,333,180,333,333,453,333,333,760,333,389,389,389,389,389,500,278,500,500,278,250,500,600,278,326,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,500,722,500,500,500,500,500,444,444,444,444,500};
func _ffg ()StdFont {_bgd .Do (_gfg );_cbb :=Descriptor {Name :HelveticaBoldObliqueName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-174,-228,1114,962},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_cbb ,_gdg );};func (_bfe *TtfType )String ()string {return _f .Sprintf ("\u0046\u004fN\u0054\u005f\u0046\u0049\u004cE\u0032\u007b\u0025\u0023\u0071 \u0055\u006e\u0069\u0074\u0073\u0050\u0065\u0072\u0045\u006d\u003d\u0025\u0064\u0020\u0042\u006f\u006c\u0064\u003d\u0025\u0074\u0020\u0049\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065\u003d\u0025\u0066\u0020"+"\u0043\u0061pH\u0065\u0069\u0067h\u0074\u003d\u0025\u0064 Ch\u0061rs\u003d\u0025\u0064\u0020\u0047\u006c\u0079ph\u004e\u0061\u006d\u0065\u0073\u003d\u0025d\u007d",_bfe .PostScriptName ,_bfe .UnitsPerEm ,_bfe .Bold ,_bfe .ItalicAngle ,_bfe .CapHeight ,len (_bfe .Chars ),len (_bfe .GlyphNames ));
};func init (){RegisterStdFont (TimesRomanName ,_bbb ,"\u0054\u0069\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e","\u0054\u0069\u006de\u0073");RegisterStdFont (TimesBoldName ,_agb ,"\u0054i\u006de\u0073\u004e\u0065\u0077\u0052o\u006d\u0061n\u002c\u0042\u006f\u006c\u0064","\u0054\u0069\u006d\u0065\u0073\u002c\u0042\u006f\u006c\u0064");
RegisterStdFont (TimesItalicName ,_fdf ,"T\u0069m\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006da\u006e\u002c\u0049\u0074al\u0069\u0063","\u0054\u0069\u006de\u0073\u002c\u0049\u0074\u0061\u006c\u0069\u0063");RegisterStdFont (TimesBoldItalicName ,_bbd ,"\u0054i\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e,\u0042\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063","\u0054\u0069m\u0065\u0073\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
};type Descriptor struct{Name StdFontName ;Family string ;Weight FontWeight ;Flags uint ;BBox [4]float64 ;ItalicAngle float64 ;Ascent float64 ;Descent float64 ;CapHeight float64 ;XHeight float64 ;StemV float64 ;StemH float64 ;};func _ag ()StdFont {_bgd .Do (_gfg );
_agd :=Descriptor {Name :HelveticaBoldName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-170,-228,1003,962},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};return NewStdFont (_agd ,_ffaf );
};func (_gagd *ttfParser )ReadSByte ()(_ebfe int8 ){_be .Read (_gagd ._fega ,_be .BigEndian ,&_ebfe );return _ebfe ;};func TtfParse (r _bd .ReadSeeker )(TtfType ,error ){_eba :=&ttfParser {_fega :r };return _eba .Parse ()};func TtfParseFile (fileStr string )(TtfType ,error ){_adf ,_ffbg :=_fe .Open (fileStr );
if _ffbg !=nil {return TtfType {},_ffbg ;};defer _adf .Close ();return TtfParse (_adf );};var _abc *RuneCharSafeMap ;func (_acda *ttfParser )ParseOS2 ()error {if _fec :=_acda .Seek ("\u004f\u0053\u002f\u0032");_fec !=nil {return _fec ;};_agbf :=_acda .ReadUShort ();
_acda .Skip (4*2);_acda .Skip (11*2+10+4*4+4);_bdeg :=_acda .ReadUShort ();_acda ._fbc .Bold =(_bdeg &32)!=0;_acda .Skip (2*2);_acda ._fbc .TypoAscender =_acda .ReadShort ();_acda ._fbc .TypoDescender =_acda .ReadShort ();if _agbf >=2{_acda .Skip (3*2+2*4+2);
_acda ._fbc .CapHeight =_acda .ReadShort ();}else {_acda ._fbc .CapHeight =0;};return nil ;};func (_aac *ttfParser )parseCmapFormat12 ()error {_gfgd :=_aac .ReadULong ();_eb .Log .Trace ("\u0070\u0061\u0072se\u0043\u006d\u0061\u0070\u0046\u006f\u0072\u006d\u0061t\u00312\u003a \u0025s\u0020\u006e\u0075\u006d\u0047\u0072\u006f\u0075\u0070\u0073\u003d\u0025\u0064",_aac ._fbc .String (),_gfgd );
for _dcg :=uint32 (0);_dcg < _gfgd ;_dcg ++{_fbd :=_aac .ReadULong ();_bcf :=_aac .ReadULong ();_baa :=_aac .ReadULong ();if _fbd > 0x0010FFFF||(0xD800<=_fbd &&_fbd <=0xDFFF){return _bf .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");
};if _bcf < _fbd ||_bcf > 0x0010FFFF||(0xD800<=_bcf &&_bcf <=0xDFFF){return _bf .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");};for _gged :=_fbd ;_gged <=_bcf ;
_gged ++{if _gged > 0x10FFFF{_eb .Log .Debug ("\u0046\u006fr\u006d\u0061\u0074\u0020\u0031\u0032\u0020\u0063\u006d\u0061\u0070\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0063\u0068\u0061\u0072\u0061\u0063\u0074\u0065\u0072\u0020\u0062\u0065\u0079\u006f\u006e\u0064\u0020\u0055\u0043\u0053\u002d\u0034");
};_aac ._fbc .Chars [rune (_gged )]=GID (_baa );_baa ++;};};return nil ;};func (_afc *ttfParser )Parse ()(TtfType ,error ){_bdgd ,_egac :=_afc .ReadStr (4);if _egac !=nil {return TtfType {},_egac ;};if _bdgd =="\u004f\u0054\u0054\u004f"{return TtfType {},_gd .Errorf ("\u0066\u006f\u006e\u0074s\u0020\u0062\u0061\u0073\u0065\u0064\u0020\u006f\u006e \u0050\u006f\u0073\u0074\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065s\u0020\u0061\u0072\u0065\u0020n\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_ff .ErrNotSupported );
};if _bdgd !="\u0000\u0001\u0000\u0000"&&_bdgd !="\u0074\u0072\u0075\u0065"{_eb .Log .Debug ("\u0055n\u0072\u0065c\u006f\u0067\u006ei\u007a\u0065\u0064\u0020\u0054\u0072\u0075e\u0054\u0079\u0070\u0065\u0020\u0066i\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u002e\u0020v\u0065\u0072\u0073\u0069\u006f\u006e\u003d\u0025\u0071",_bdgd );
};_efee :=int (_afc .ReadUShort ());_afc .Skip (3*2);_afc ._dgb =make (map[string ]uint32 );var _bfc string ;for _cdd :=0;_cdd < _efee ;_cdd ++{_bfc ,_egac =_afc .ReadStr (4);if _egac !=nil {return TtfType {},_egac ;};_afc .Skip (4);_aae :=_afc .ReadULong ();
_afc .Skip (4);_afc ._dgb [_bfc ]=_aae ;};_eb .Log .Trace (_fea (_afc ._dgb ));if _egac =_afc .ParseComponents ();_egac !=nil {return TtfType {},_egac ;};return _afc ._fbc ,nil ;};func (_dcd StdFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_gcd ,_gcg :=_dcd ._de .Read (r );
return _gcd ,_gcg ;};type ttfParser struct{_fbc TtfType ;_fega _bd .ReadSeeker ;_dgb map[string ]uint32 ;_ddbd uint16 ;_def uint16 ;};func (_cccc *ttfParser )Skip (n int ){_cccc ._fega .Seek (int64 (n ),_bd .SeekCurrent )};var _fdd =[]int16 {667,1000,667,667,667,667,667,667,667,667,667,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,500,667,667,556,556,556,556,556,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,667,556,556,469,584,389,1015,556,556,278,260,334,334,278,278,333,260,350,500,500,333,500,500,333,556,333,278,278,250,737,556,556,556,556,643,556,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,556,278,333,278,500,556,500,556,556,167,556,556,556,611,333,584,549,556,556,333,333,556,333,333,222,278,278,278,278,278,222,222,500,500,222,222,299,222,584,549,584,471,222,833,333,584,556,584,556,556,556,556,556,549,556,556,556,556,556,556,944,333,556,556,556,556,834,834,333,370,365,611,556,556,537,333,333,476,889,278,278,1000,584,584,556,556,611,355,333,333,333,222,222,222,191,333,333,453,333,333,737,333,500,500,500,500,500,556,278,556,556,278,278,556,600,278,317,278,556,556,834,333,333,1000,556,333,556,556,556,556,556,556,556,556,556,556,500,722,500,500,500,500,556,500,500,500,500,556};
func (_gbd *ttfParser )parseCmapFormat6 ()error {_eeb :=int (_gbd .ReadUShort ());_fbg :=int (_gbd .ReadUShort ());_eb .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u0046o\u0072\u006d\u0061\u0074\u0036\u003a\u0020%s\u0020\u0066\u0069\u0072s\u0074\u0043\u006f\u0064\u0065\u003d\u0025\u0064\u0020en\u0074\u0072y\u0043\u006f\u0075\u006e\u0074\u003d\u0025\u0064",_gbd ._fbc .String (),_eeb ,_fbg );
for _dga :=0;_dga < _fbg ;_dga ++{_bdcf :=GID (_gbd .ReadUShort ());_gbd ._fbc .Chars [rune (_dga +_eeb )]=_bdcf ;};return nil ;};var _bgf *RuneCharSafeMap ;func (_ega StdFont )ToPdfObject ()_ff .PdfObject {_ddg :=_ff .MakeDict ();_ddg .Set ("\u0054\u0079\u0070\u0065",_ff .MakeName ("\u0046\u006f\u006e\u0074"));
_ddg .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ff .MakeName ("\u0054\u0079\u0070e\u0031"));_ddg .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_ff .MakeName (_ega .Name ()));_ddg .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_ega ._dde .ToPdfObject ());
return _ff .MakeIndirectObject (_ddg );};type CharMetrics struct{Wx float64 ;Wy float64 ;};var _fa _e .Once ;const (FontWeightMedium FontWeight =iota ;FontWeightBold ;FontWeightRoman ;);func (_da *RuneCharSafeMap )Write (b rune ,r CharMetrics ){_da ._ffb .Lock ();
defer _da ._ffb .Unlock ();_da ._gc [b ]=r ;};func NewFontFile2FromPdfObject (obj _ff .PdfObject )(TtfType ,error ){obj =_ff .TraceToDirectObject (obj );_bdf ,_deb :=obj .(*_ff .PdfObjectStream );if !_deb {_eb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u0061\u0020\u0073\u0074\u0072e\u0061\u006d \u0028\u0025\u0054\u0029",obj );
return TtfType {},_ff .ErrTypeError ;};_cfd ,_ebd :=_ff .DecodeStream (_bdf );if _ebd !=nil {return TtfType {},_ebd ;};_dgbf :=ttfParser {_fega :_fg .NewReader (_cfd )};return _dgbf .Parse ();};func _fea (_ba map[string ]uint32 )string {var _bbf []string ;
for _agf :=range _ba {_bbf =append (_bbf ,_agf );};_bg .Slice (_bbf ,func (_gfb ,_ecgb int )bool {return _ba [_bbf [_gfb ]]< _ba [_bbf [_ecgb ]]});_dad :=[]string {_f .Sprintf ("\u0054\u0072\u0075\u0065Ty\u0070\u0065\u0020\u0074\u0061\u0062\u006c\u0065\u0073\u003a\u0020\u0025\u0064",len (_ba ))};
for _ ,_dgbb :=range _bbf {_dad =append (_dad ,_f .Sprintf ("\u0009%\u0071\u0020\u0025\u0035\u0064",_dgbb ,_ba [_dgbb ]));};return _a .Join (_dad ,"\u000a");};func (_cea *ttfParser )parseCmapFormat0 ()error {_ege ,_ead :=_cea .ReadStr (256);if _ead !=nil {return _ead ;
};_bce :=[]byte (_ege );_eb .Log .Trace ("\u0070a\u0072\u0073e\u0043\u006d\u0061p\u0046\u006f\u0072\u006d\u0061\u0074\u0030:\u0020\u0025\u0073\u000a\u0064\u0061t\u0061\u0053\u0074\u0072\u003d\u0025\u002b\u0071\u000a\u0064\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d",_cea ._fbc .String (),_ege ,_bce );
for _cfb ,_abfd :=range _bce {_cea ._fbc .Chars [rune (_cfb )]=GID (_abfd );};return nil ;};var _gdg *RuneCharSafeMap ;func (_afb *TtfType )MakeEncoder ()(_g .SimpleEncoder ,error ){_abf :=make (map[_g .CharCode ]GlyphName );for _ddb :=_g .CharCode (0);
_ddb <=256;_ddb ++{_feeb :=rune (_ddb );_cde ,_fae :=_afb .Chars [_feeb ];if !_fae {continue ;};var _egd GlyphName ;if int (_cde )>=0&&int (_cde )< len (_afb .GlyphNames ){_egd =_afb .GlyphNames [_cde ];}else {_dfc :=rune (_cde );if _gad ,_dgf :=_g .RuneToGlyph (_dfc );
_dgf {_egd =_gad ;};};if _egd !=""{_abf [_ddb ]=_egd ;};};if len (_abf )==0{_eb .Log .Debug ("WA\u0052\u004eI\u004e\u0047\u003a\u0020\u005a\u0065\u0072\u006f\u0020l\u0065\u006e\u0067\u0074\u0068\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u002e\u0020\u0074\u0074\u0066=\u0025s\u0020\u0043\u0068\u0061\u0072\u0073\u003d\u005b%\u00200\u0032\u0078]",_afb ,_afb .Chars );
};return _g .NewCustomSimpleTextEncoder (_abf ,nil );};func _abg ()StdFont {_bgd .Do (_gfg );_ce :=Descriptor {Name :HelveticaObliqueName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-170,-225,1116,931},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_ce ,_bbe );};func (_ed *RuneCharSafeMap )Read (b rune )(CharMetrics ,bool ){_ed ._ffb .RLock ();defer _ed ._ffb .RUnlock ();_d ,_cc :=_ed ._gc [b ];return _d ,_cc ;};type TtfType struct{UnitsPerEm uint16 ;PostScriptName string ;Bold bool ;
ItalicAngle float64 ;IsFixedPitch bool ;TypoAscender int16 ;TypoDescender int16 ;UnderlinePosition int16 ;UnderlineThickness int16 ;Xmin ,Ymin ,Xmax ,Ymax int16 ;CapHeight int16 ;Widths []uint16 ;Chars map[rune ]GID ;GlyphNames []GlyphName ;};var _bba =[]int16 {667,944,667,667,667,667,667,667,667,667,667,667,667,667,667,667,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,667,722,722,722,778,389,389,389,389,389,389,389,389,500,667,667,611,611,611,611,611,889,722,722,722,722,722,722,944,722,722,722,722,722,722,722,722,611,722,667,667,667,667,556,556,556,556,556,611,611,611,611,722,722,722,722,722,722,722,722,722,667,889,667,611,611,611,611,611,611,611,500,500,500,500,333,500,722,500,500,778,500,500,570,570,500,832,500,500,278,220,348,348,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,500,500,500,608,500,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,389,389,333,556,500,556,500,500,167,500,500,500,500,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,278,500,500,278,278,382,278,570,549,606,494,278,778,333,606,576,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,266,300,500,500,500,500,333,333,494,833,250,250,1000,570,570,500,500,500,555,500,500,500,333,333,333,278,389,389,549,389,389,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,366,278,500,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,444,667,500,444,444,444,500,389,389,389,389,500};
func (_acab *ttfParser )ParseHead ()error {if _feebf :=_acab .Seek ("\u0068\u0065\u0061\u0064");_feebf !=nil {return _feebf ;};_acab .Skip (3*4);_ffgf :=_acab .ReadULong ();if _ffgf !=0x5F0F3CF5{_eb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0063\u006fr\u0072e\u0063\u0074\u0020\u006d\u0061\u0067\u0069\u0063\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u002e\u0020\u0046\u006fn\u0074\u0020\u006d\u0061\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0020\u0063\u006f\u0072\u0072\u0065\u0063t\u006c\u0079\u002e\u0020\u0025\u0073",_acab );
};_acab .Skip (2);_acab ._fbc .UnitsPerEm =_acab .ReadUShort ();_acab .Skip (2*8);_acab ._fbc .Xmin =_acab .ReadShort ();_acab ._fbc .Ymin =_acab .ReadShort ();_acab ._fbc .Xmax =_acab .ReadShort ();_acab ._fbc .Ymax =_acab .ReadShort ();return nil ;};
func (_ab *fontMap )read (_ee StdFontName )(func ()StdFont ,bool ){_ab .Lock ();defer _ab .Unlock ();_feg ,_fd :=_ab ._edd [_ee ];return _feg ,_fd ;};var _ebfc =[]GlyphName {"\u002en\u006f\u0074\u0064\u0065\u0066","\u002e\u006e\u0075l\u006c","\u006e\u006fn\u006d\u0061\u0072k\u0069\u006e\u0067\u0072\u0065\u0074\u0075\u0072\u006e","\u0073\u0070\u0061c\u0065","\u0065\u0078\u0063\u006c\u0061\u006d","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c","\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u0069\u0067\u006e","\u0064\u006f\u006c\u006c\u0061\u0072","\u0070e\u0072\u0063\u0065\u006e\u0074","\u0061m\u0070\u0065\u0072\u0073\u0061\u006ed","q\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067\u006c\u0065","\u0070a\u0072\u0065\u006e\u006c\u0065\u0066t","\u0070\u0061\u0072\u0065\u006e\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0074\u0065\u0072\u0069\u0073\u006b","\u0070\u006c\u0075\u0073","\u0063\u006f\u006dm\u0061","\u0068\u0079\u0070\u0068\u0065\u006e","\u0070\u0065\u0072\u0069\u006f\u0064","\u0073\u006c\u0061s\u0068","\u007a\u0065\u0072\u006f","\u006f\u006e\u0065","\u0074\u0077\u006f","\u0074\u0068\u0072e\u0065","\u0066\u006f\u0075\u0072","\u0066\u0069\u0076\u0065","\u0073\u0069\u0078","\u0073\u0065\u0076e\u006e","\u0065\u0069\u0067h\u0074","\u006e\u0069\u006e\u0065","\u0063\u006f\u006co\u006e","\u0073e\u006d\u0069\u0063\u006f\u006c\u006fn","\u006c\u0065\u0073\u0073","\u0065\u0071\u0075a\u006c","\u0067r\u0065\u0061\u0074\u0065\u0072","\u0071\u0075\u0065\u0073\u0074\u0069\u006f\u006e","\u0061\u0074","\u0041","\u0042","\u0043","\u0044","\u0045","\u0046","\u0047","\u0048","\u0049","\u004a","\u004b","\u004c","\u004d","\u004e","\u004f","\u0050","\u0051","\u0052","\u0053","\u0054","\u0055","\u0056","\u0057","\u0058","\u0059","\u005a","b\u0072\u0061\u0063\u006b\u0065\u0074\u006c\u0065\u0066\u0074","\u0062a\u0063\u006b\u0073\u006c\u0061\u0073h","\u0062\u0072\u0061c\u006b\u0065\u0074\u0072\u0069\u0067\u0068\u0074","a\u0073\u0063\u0069\u0069\u0063\u0069\u0072\u0063\u0075\u006d","\u0075\u006e\u0064\u0065\u0072\u0073\u0063\u006f\u0072\u0065","\u0067\u0072\u0061v\u0065","\u0061","\u0062","\u0063","\u0064","\u0065","\u0066","\u0067","\u0068","\u0069","\u006a","\u006b","\u006c","\u006d","\u006e","\u006f","\u0070","\u0071","\u0072","\u0073","\u0074","\u0075","\u0076","\u0077","\u0078","\u0079","\u007a","\u0062r\u0061\u0063\u0065\u006c\u0065\u0066t","\u0062\u0061\u0072","\u0062\u0072\u0061\u0063\u0065\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0063\u0069\u0069\u0074\u0069\u006c\u0064\u0065","\u0041d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0041\u0072\u0069n\u0067","\u0043\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0045\u0061\u0063\u0075\u0074\u0065","\u004e\u0074\u0069\u006c\u0064\u0065","\u004fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u0055d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0061\u0063\u0075\u0074\u0065","\u0061\u0067\u0072\u0061\u0076\u0065","a\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0074\u0069\u006c\u0064\u0065","\u0061\u0072\u0069n\u0067","\u0063\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0065\u0061\u0063\u0075\u0074\u0065","\u0065\u0067\u0072\u0061\u0076\u0065","e\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0065d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0069\u0061\u0063\u0075\u0074\u0065","\u0069\u0067\u0072\u0061\u0076\u0065","i\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0069d\u0069\u0065\u0072\u0065\u0073\u0069s","\u006e\u0074\u0069\u006c\u0064\u0065","\u006f\u0061\u0063\u0075\u0074\u0065","\u006f\u0067\u0072\u0061\u0076\u0065","o\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u006fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u006f\u0074\u0069\u006c\u0064\u0065","\u0075\u0061\u0063\u0075\u0074\u0065","\u0075\u0067\u0072\u0061\u0076\u0065","u\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0075d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0064\u0061\u0067\u0067\u0065\u0072","\u0064\u0065\u0067\u0072\u0065\u0065","\u0063\u0065\u006e\u0074","\u0073\u0074\u0065\u0072\u006c\u0069\u006e\u0067","\u0073e\u0063\u0074\u0069\u006f\u006e","\u0062\u0075\u006c\u006c\u0065\u0074","\u0070a\u0072\u0061\u0067\u0072\u0061\u0070h","\u0067\u0065\u0072\u006d\u0061\u006e\u0064\u0062\u006c\u0073","\u0072\u0065\u0067\u0069\u0073\u0074\u0065\u0072\u0065\u0064","\u0063o\u0070\u0079\u0072\u0069\u0067\u0068t","\u0074r\u0061\u0064\u0065\u006d\u0061\u0072k","\u0061\u0063\u0075t\u0065","\u0064\u0069\u0065\u0072\u0065\u0073\u0069\u0073","\u006e\u006f\u0074\u0065\u0071\u0075\u0061\u006c","\u0041\u0045","\u004f\u0073\u006c\u0061\u0073\u0068","\u0069\u006e\u0066\u0069\u006e\u0069\u0074\u0079","\u0070l\u0075\u0073\u006d\u0069\u006e\u0075s","\u006ce\u0073\u0073\u0065\u0071\u0075\u0061l","\u0067\u0072\u0065a\u0074\u0065\u0072\u0065\u0071\u0075\u0061\u006c","\u0079\u0065\u006e","\u006d\u0075","p\u0061\u0072\u0074\u0069\u0061\u006c\u0064\u0069\u0066\u0066","\u0073u\u006d\u006d\u0061\u0074\u0069\u006fn","\u0070r\u006f\u0064\u0075\u0063\u0074","\u0070\u0069","\u0069\u006e\u0074\u0065\u0067\u0072\u0061\u006c","o\u0072\u0064\u0066\u0065\u006d\u0069\u006e\u0069\u006e\u0065","\u006f\u0072\u0064m\u0061\u0073\u0063\u0075\u006c\u0069\u006e\u0065","\u004f\u006d\u0065g\u0061","\u0061\u0065","\u006f\u0073\u006c\u0061\u0073\u0068","\u0071\u0075\u0065s\u0074\u0069\u006f\u006e\u0064\u006f\u0077\u006e","\u0065\u0078\u0063\u006c\u0061\u006d\u0064\u006f\u0077\u006e","\u006c\u006f\u0067\u0069\u0063\u0061\u006c\u006e\u006f\u0074","\u0072a\u0064\u0069\u0063\u0061\u006c","\u0066\u006c\u006f\u0072\u0069\u006e","a\u0070\u0070\u0072\u006f\u0078\u0065\u0071\u0075\u0061\u006c","\u0044\u0065\u006ct\u0061","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074r\u0069\u0067\u0068\u0074","\u0065\u006c\u006c\u0069\u0070\u0073\u0069\u0073","\u006e\u006fn\u0062\u0072\u0065a\u006b\u0069\u006e\u0067\u0073\u0070\u0061\u0063\u0065","\u0041\u0067\u0072\u0061\u0076\u0065","\u0041\u0074\u0069\u006c\u0064\u0065","\u004f\u0074\u0069\u006c\u0064\u0065","\u004f\u0045","\u006f\u0065","\u0065\u006e\u0064\u0061\u0073\u0068","\u0065\u006d\u0064\u0061\u0073\u0068","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u006c\u0065\u0066\u0074","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c\u0072\u0069\u0067\u0068\u0074","\u0071u\u006f\u0074\u0065\u006c\u0065\u0066t","\u0071\u0075\u006f\u0074\u0065\u0072\u0069\u0067\u0068\u0074","\u0064\u0069\u0076\u0069\u0064\u0065","\u006co\u007a\u0065\u006e\u0067\u0065","\u0079d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0059d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0066\u0072\u0061\u0063\u0074\u0069\u006f\u006e","\u0063\u0075\u0072\u0072\u0065\u006e\u0063\u0079","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006c\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006cr\u0069\u0067\u0068\u0074","\u0066\u0069","\u0066\u006c","\u0064a\u0067\u0067\u0065\u0072\u0064\u0062l","\u0070\u0065\u0072\u0069\u006f\u0064\u0063\u0065\u006et\u0065\u0072\u0065\u0064","\u0071\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067l\u0062\u0061\u0073\u0065","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u0062\u0061\u0073\u0065","p\u0065\u0072\u0074\u0068\u006f\u0075\u0073\u0061\u006e\u0064","A\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","E\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0041\u0061\u0063\u0075\u0074\u0065","\u0045d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0045\u0067\u0072\u0061\u0076\u0065","\u0049\u0061\u0063\u0075\u0074\u0065","I\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0049d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0049\u0067\u0072\u0061\u0076\u0065","\u004f\u0061\u0063\u0075\u0074\u0065","O\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061\u0070\u0070l\u0065","\u004f\u0067\u0072\u0061\u0076\u0065","\u0055\u0061\u0063\u0075\u0074\u0065","U\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0055\u0067\u0072\u0061\u0076\u0065","\u0064\u006f\u0074\u006c\u0065\u0073\u0073\u0069","\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0074\u0069\u006cd\u0065","\u006d\u0061\u0063\u0072\u006f\u006e","\u0062\u0072\u0065v\u0065","\u0064o\u0074\u0061\u0063\u0063\u0065\u006et","\u0072\u0069\u006e\u0067","\u0063e\u0064\u0069\u006c\u006c\u0061","\u0068\u0075\u006eg\u0061\u0072\u0075\u006d\u006c\u0061\u0075\u0074","\u006f\u0067\u006f\u006e\u0065\u006b","\u0063\u0061\u0072o\u006e","\u004c\u0073\u006c\u0061\u0073\u0068","\u006c\u0073\u006c\u0061\u0073\u0068","\u0053\u0063\u0061\u0072\u006f\u006e","\u0073\u0063\u0061\u0072\u006f\u006e","\u005a\u0063\u0061\u0072\u006f\u006e","\u007a\u0063\u0061\u0072\u006f\u006e","\u0062r\u006f\u006b\u0065\u006e\u0062\u0061r","\u0045\u0074\u0068","\u0065\u0074\u0068","\u0059\u0061\u0063\u0075\u0074\u0065","\u0079\u0061\u0063\u0075\u0074\u0065","\u0054\u0068\u006fr\u006e","\u0074\u0068\u006fr\u006e","\u006d\u0069\u006eu\u0073","\u006d\u0075\u006c\u0074\u0069\u0070\u006c\u0079","o\u006e\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","t\u0077\u006f\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u0074\u0068\u0072\u0065\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u006fn\u0065\u0068\u0061\u006c\u0066","\u006f\u006e\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072","\u0074\u0068\u0072\u0065\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072\u0073","\u0066\u0072\u0061n\u0063","\u0047\u0062\u0072\u0065\u0076\u0065","\u0067\u0062\u0072\u0065\u0076\u0065","\u0049\u0064\u006f\u0074\u0061\u0063\u0063\u0065\u006e\u0074","\u0053\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0073\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0043\u0061\u0063\u0075\u0074\u0065","\u0063\u0061\u0063\u0075\u0074\u0065","\u0043\u0063\u0061\u0072\u006f\u006e","\u0063\u0063\u0061\u0072\u006f\u006e","\u0064\u0063\u0072\u006f\u0061\u0074"};
func _fde (){_cf =MakeRuneCharSafeMap (len (_bde ));_fcb =MakeRuneCharSafeMap (len (_bde ));_caa =MakeRuneCharSafeMap (len (_bde ));_bgf =MakeRuneCharSafeMap (len (_bde ));for _ccd ,_aec :=range _bde {_cf .Write (_aec ,CharMetrics {Wx :float64 (_fee [_ccd ])});
_fcb .Write (_aec ,CharMetrics {Wx :float64 (_ebc [_ccd ])});_caa .Write (_aec ,CharMetrics {Wx :float64 (_bba [_ccd ])});_bgf .Write (_aec ,CharMetrics {Wx :float64 (_gca [_ccd ])});};};func (_gafe *ttfParser )ReadUShort ()(_gade uint16 ){_be .Read (_gafe ._fega ,_be .BigEndian ,&_gade );
return _gade ;};var _ec *RuneCharSafeMap ;const (CourierName =StdFontName ("\u0043o\u0075\u0072\u0069\u0065\u0072");CourierBoldName =StdFontName ("\u0043\u006f\u0075r\u0069\u0065\u0072\u002d\u0042\u006f\u006c\u0064");CourierObliqueName =StdFontName ("\u0043o\u0075r\u0069\u0065\u0072\u002d\u004f\u0062\u006c\u0069\u0071\u0075\u0065");
CourierBoldObliqueName =StdFontName ("\u0043\u006f\u0075\u0072ie\u0072\u002d\u0042\u006f\u006c\u0064\u004f\u0062\u006c\u0069\u0071\u0075\u0065"););const (_dcdd ="\u0054\u0069\u006de\u0073";TimesRomanName =StdFontName ("T\u0069\u006d\u0065\u0073\u002d\u0052\u006f\u006d\u0061\u006e");
TimesBoldName =StdFontName ("\u0054\u0069\u006d\u0065\u0073\u002d\u0042\u006f\u006c\u0064");TimesItalicName =StdFontName ("\u0054\u0069\u006de\u0073\u002d\u0049\u0074\u0061\u006c\u0069\u0063");TimesBoldItalicName =StdFontName ("\u0054\u0069m\u0065\u0073\u002dB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
);func (_af *RuneCharSafeMap )Range (f func (_ca rune ,_ebb CharMetrics )(_gcf bool )){_af ._ffb .RLock ();defer _af ._ffb .RUnlock ();for _ac ,_ffa :=range _af ._gc {if f (_ac ,_ffa ){break ;};};};var _cf *RuneCharSafeMap ;type Font interface{Encoder ()_g .TextEncoder ;
GetRuneMetrics (_ge rune )(CharMetrics ,bool );};func (_fga StdFont )Encoder ()_g .TextEncoder {return _fga ._dde };func (_bad *ttfParser )ParseHhea ()error {if _fegc :=_bad .Seek ("\u0068\u0068\u0065\u0061");_fegc !=nil {return _fegc ;};_bad .Skip (4+15*2);
_bad ._ddbd =_bad .ReadUShort ();return nil ;};var _bgd _e .Once ;func (_ged *ttfParser )ReadShort ()(_bbfa int16 ){_be .Read (_ged ._fega ,_be .BigEndian ,&_bbfa );return _bbfa ;};func NewStdFontByName (name StdFontName )(StdFont ,bool ){_dg ,_dd :=_aa .read (name );
if !_dd {return StdFont {},false ;};return _dg (),true ;};type StdFont struct{_bfb Descriptor ;_de *RuneCharSafeMap ;_dde _g .TextEncoder ;};func (_ef *RuneCharSafeMap )Copy ()*RuneCharSafeMap {_c :=MakeRuneCharSafeMap (_ef .Length ());_ef .Range (func (_fb rune ,_cb CharMetrics )(_cbf bool ){_c ._gc [_fb ]=_cb ;
return false });return _c ;};func (_abd StdFont )Name ()string {return string (_abd ._bfb .Name )};func (_ebf *ttfParser )ParseName ()error {if _abgd :=_ebf .Seek ("\u006e\u0061\u006d\u0065");_abgd !=nil {return _abgd ;};_dbc ,_ :=_ebf ._fega .Seek (0,_bd .SeekCurrent );
_ebf ._fbc .PostScriptName ="";_ebf .Skip (2);_eef :=_ebf .ReadUShort ();_aee :=_ebf .ReadUShort ();for _agbg :=uint16 (0);_agbg < _eef &&_ebf ._fbc .PostScriptName =="";_agbg ++{_ebf .Skip (3*2);_degb :=_ebf .ReadUShort ();_ggge :=_ebf .ReadUShort ();
_afce :=_ebf .ReadUShort ();if _degb ==6{_ebf ._fega .Seek (_dbc +int64 (_aee )+int64 (_afce ),_bd .SeekStart );_fac ,_dfcc :=_ebf .ReadStr (int (_ggge ));if _dfcc !=nil {return _dfcc ;};_fac =_a .Replace (_fac ,"\u0000","",-1);_bgg ,_dfcc :=_bb .Compile ("\u005b\u0028\u0029\u007b\u007d\u003c\u003e\u0020\u002f%\u005b\u005c\u005d\u005d");
if _dfcc !=nil {return _dfcc ;};_ebf ._fbc .PostScriptName =_bgg .ReplaceAllString (_fac ,"");};};if _ebf ._fbc .PostScriptName ==""{_eb .Log .Debug ("\u0050a\u0072\u0073e\u004e\u0061\u006de\u003a\u0020\u0054\u0068\u0065\u0020\u006ea\u006d\u0065\u0020\u0050\u006f\u0073t\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u0077\u0061\u0073\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e");
};return nil ;};func (_gcb *ttfParser )Read32Fixed ()float64 {_eac :=float64 (_gcb .ReadShort ());_aaeb :=float64 (_gcb .ReadUShort ())/65536.0;return _eac +_aaeb ;};func _fdf ()StdFont {_df .Do (_fde );_fgg :=Descriptor {Name :TimesItalicName ,Family :_dcdd ,Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-169,-217,1010,883},ItalicAngle :-15.5,Ascent :683,Descent :-217,CapHeight :653,XHeight :441,StemV :76,StemH :32};
return NewStdFont (_fgg ,_bgf );};func (_gdd *ttfParser )parseCmapSubtable31 (_acd int64 )error {_bbfg :=make ([]rune ,0,8);_adee :=make ([]rune ,0,8);_ede :=make ([]int16 ,0,8);_fag :=make ([]uint16 ,0,8);_gdd ._fbc .Chars =make (map[rune ]GID );_gdd ._fega .Seek (int64 (_gdd ._dgb ["\u0063\u006d\u0061\u0070"])+_acd ,_bd .SeekStart );
_bfcb :=_gdd .ReadUShort ();if _bfcb !=4{return _gd .Errorf ("u\u006e\u0065\u0078\u0070\u0065\u0063t\u0065\u0064\u0020\u0073\u0075\u0062t\u0061\u0062\u006c\u0065\u0020\u0066\u006fr\u006d\u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0028\u0025w\u0029",_bfcb ,_ff .ErrNotSupported );
};_gdd .Skip (2*2);_gfa :=int (_gdd .ReadUShort ()/2);_gdd .Skip (3*2);for _cbg :=0;_cbg < _gfa ;_cbg ++{_adee =append (_adee ,rune (_gdd .ReadUShort ()));};_gdd .Skip (2);for _bcb :=0;_bcb < _gfa ;_bcb ++{_bbfg =append (_bbfg ,rune (_gdd .ReadUShort ()));
};for _gge :=0;_gge < _gfa ;_gge ++{_ede =append (_ede ,_gdd .ReadShort ());};_caf ,_ :=_gdd ._fega .Seek (int64 (0),_bd .SeekCurrent );for _abdf :=0;_abdf < _gfa ;_abdf ++{_fag =append (_fag ,_gdd .ReadUShort ());};for _egb :=0;_egb < _gfa ;_egb ++{_feed :=_bbfg [_egb ];
_aaa :=_adee [_egb ];_cag :=_ede [_egb ];_fgcc :=_fag [_egb ];if _fgcc > 0{_gdd ._fega .Seek (_caf +2*int64 (_egb )+int64 (_fgcc ),_bd .SeekStart );};for _eca :=_feed ;_eca <=_aaa ;_eca ++{if _eca ==0xFFFF{break ;};var _cgc int32 ;if _fgcc > 0{_cgc =int32 (_gdd .ReadUShort ());
if _cgc > 0{_cgc +=int32 (_cag );};}else {_cgc =_eca +int32 (_cag );};if _cgc >=65536{_cgc -=65536;};if _cgc > 0{_gdd ._fbc .Chars [_eca ]=GID (_cgc );};};};return nil ;};func _cca (){const _eddd =600;_ad =MakeRuneCharSafeMap (len (_bde ));for _ ,_fgc :=range _bde {_ad .Write (_fgc ,CharMetrics {Wx :_eddd });
};_ade =_ad .Copy ();_egf =_ad .Copy ();_ec =_ad .Copy ();};