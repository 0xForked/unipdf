//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package fonts ;import (_cc "bytes";_da "encoding/binary";_cb "errors";_b "fmt";_dd "github.com/unidoc/unipdf/v3/common";_gea "github.com/unidoc/unipdf/v3/core";_f "github.com/unidoc/unipdf/v3/internal/cmap";_ec "github.com/unidoc/unipdf/v3/internal/textencoding";
_ge "golang.org/x/xerrors";_bf "io";_d "os";_g "regexp";_be "sort";_e "strings";_gd "sync";);func (_dfd *ttfParser )parseCmapFormat6 ()error {_gec :=int (_dfd .ReadUShort ());_fgf :=int (_dfd .ReadUShort ());_dd .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u0046o\u0072\u006d\u0061\u0074\u0036\u003a\u0020%s\u0020\u0066\u0069\u0072s\u0074\u0043\u006f\u0064\u0065\u003d\u0025\u0064\u0020en\u0074\u0072y\u0043\u006f\u0075\u006e\u0074\u003d\u0025\u0064",_dfd ._cg .String (),_gec ,_fgf );
for _ccfg :=0;_ccfg < _fgf ;_ccfg ++{_fecf :=GID (_dfd .ReadUShort ());_dfd ._cg .Chars [rune (_ccfg +_gec )]=_fecf ;};return nil ;};type Font interface{Encoder ()_ec .TextEncoder ;GetRuneMetrics (_gb rune )(CharMetrics ,bool );};func (_fab *ttfParser )ParseName ()error {if _bfde :=_fab .Seek ("\u006e\u0061\u006d\u0065");
_bfde !=nil {return _bfde ;};_cafc ,_ :=_fab ._dffa .Seek (0,_bf .SeekCurrent );_fab ._cg .PostScriptName ="";_fab .Skip (2);_bbde :=_fab .ReadUShort ();_eece :=_fab .ReadUShort ();for _dee :=uint16 (0);_dee < _bbde &&_fab ._cg .PostScriptName =="";_dee ++{_fab .Skip (3*2);
_ceeb :=_fab .ReadUShort ();_dgc :=_fab .ReadUShort ();_bdb :=_fab .ReadUShort ();if _ceeb ==6{_fab ._dffa .Seek (_cafc +int64 (_eece )+int64 (_bdb ),_bf .SeekStart );_dgcf ,_faeg :=_fab .ReadStr (int (_dgc ));if _faeg !=nil {return _faeg ;};_dgcf =_e .Replace (_dgcf ,"\u0000","",-1);
_bfe ,_faeg :=_g .Compile ("\u005b\u0028\u0029\u007b\u007d\u003c\u003e\u0020\u002f%\u005b\u005c\u005d\u005d");if _faeg !=nil {return _faeg ;};_fab ._cg .PostScriptName =_bfe .ReplaceAllString (_dgcf ,"");};};if _fab ._cg .PostScriptName ==""{_dd .Log .Debug ("\u0050a\u0072\u0073e\u004e\u0061\u006de\u003a\u0020\u0054\u0068\u0065\u0020\u006ea\u006d\u0065\u0020\u0050\u006f\u0073t\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u0077\u0061\u0073\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e");
};return nil ;};func _egd (){_cfg =MakeRuneCharSafeMap (len (_ccd ));_cce =MakeRuneCharSafeMap (len (_ccd ));_bfc =MakeRuneCharSafeMap (len (_ccd ));_fbe =MakeRuneCharSafeMap (len (_ccd ));for _ga ,_aead :=range _ccd {_cfg .Write (_aead ,CharMetrics {Wx :float64 (_abf [_ga ])});
_cce .Write (_aead ,CharMetrics {Wx :float64 (_fac [_ga ])});_bfc .Write (_aead ,CharMetrics {Wx :float64 (_adb [_ga ])});_fbe .Write (_aead ,CharMetrics {Wx :float64 (_bbb [_ga ])});};};var _caaf *RuneCharSafeMap ;var _fbe *RuneCharSafeMap ;var _abf =[]int16 {722,889,722,722,722,722,722,722,722,722,722,667,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,556,722,722,722,722,333,333,333,333,333,333,333,333,389,722,722,611,611,611,611,611,889,722,722,722,722,722,722,889,722,722,722,722,722,722,722,722,556,722,667,667,667,667,556,556,556,556,556,611,611,611,556,722,722,722,722,722,722,722,722,722,722,944,722,722,722,722,611,611,611,611,444,444,444,444,333,444,667,444,444,778,444,444,469,541,500,921,444,500,278,200,480,480,333,333,333,200,350,444,444,333,444,444,333,500,333,278,250,250,760,500,500,500,500,588,500,400,333,564,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,564,500,333,333,333,556,500,556,500,500,167,500,500,500,500,333,564,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,500,500,278,278,344,278,564,549,564,471,278,778,333,564,500,564,500,500,500,500,500,549,500,500,500,500,500,500,722,333,500,500,500,500,750,750,300,276,310,500,500,500,453,333,333,476,833,250,250,1000,564,564,500,444,444,408,444,444,444,333,333,333,180,333,333,453,333,333,760,333,389,389,389,389,389,500,278,500,500,278,250,500,600,278,326,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,500,722,500,500,500,500,500,444,444,444,444,500};
func (_bce *TtfType )MakeEncoder ()(_ec .SimpleEncoder ,error ){_bcd :=make (map[_ec .CharCode ]GlyphName );for _cda :=_ec .CharCode (0);_cda <=256;_cda ++{_bd :=rune (_cda );_dea ,_cafe :=_bce .Chars [_bd ];if !_cafe {continue ;};var _dg GlyphName ;if int (_dea )>=0&&int (_dea )< len (_bce .GlyphNames ){_dg =_bce .GlyphNames [_dea ];
}else {_cbdd :=rune (_dea );if _cdc ,_agbe :=_ec .RuneToGlyph (_cbdd );_agbe {_dg =_cdc ;};};if _dg !=""{_bcd [_cda ]=_dg ;};};if len (_bcd )==0{_dd .Log .Debug ("WA\u0052\u004eI\u004e\u0047\u003a\u0020\u005a\u0065\u0072\u006f\u0020l\u0065\u006e\u0067\u0074\u0068\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u002e\u0020\u0074\u0074\u0066=\u0025s\u0020\u0043\u0068\u0061\u0072\u0073\u003d\u005b%\u00200\u0032\u0078]",_bce ,_bce .Chars );
};return _ec .NewCustomSimpleTextEncoder (_bcd ,nil );};func NewStdFont (desc Descriptor ,metrics *RuneCharSafeMap )StdFont {return NewStdFontWithEncoding (desc ,metrics ,_ec .NewStandardEncoder ());};var _fae *RuneCharSafeMap ;func (_fbdf *ttfParser )Read32Fixed ()float64 {_bacg :=float64 (_fbdf .ReadShort ());
_ffec :=float64 (_fbdf .ReadUShort ())/65536.0;return _bacg +_ffec ;};var _bb *RuneCharSafeMap ;func _aa ()StdFont {_eee .Do (_egd );_ff :=Descriptor {Name :TimesRomanName ,Family :_ccgd ,Weight :FontWeightRoman ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,898},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :662,XHeight :450,StemV :84,StemH :28};
return NewStdFont (_ff ,_cfg );};func NewFontFile2FromPdfObject (obj _gea .PdfObject )(TtfType ,error ){obj =_gea .TraceToDirectObject (obj );_faec ,_gebf :=obj .(*_gea .PdfObjectStream );if !_gebf {_dd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u0061\u0020\u0073\u0074\u0072e\u0061\u006d \u0028\u0025\u0054\u0029",obj );
return TtfType {},_gea .ErrTypeError ;};_faaa ,_ddf :=_gea .DecodeStream (_faec );if _ddf !=nil {return TtfType {},_ddf ;};_dbee :=ttfParser {_dffa :_cc .NewReader (_faaa )};return _dbee .Parse ();};func (_bed *ttfParser )ParseCmap ()error {var _ccae int64 ;
if _bece :=_bed .Seek ("\u0063\u006d\u0061\u0070");_bece !=nil {return _bece ;};_dd .Log .Trace ("\u0050a\u0072\u0073\u0065\u0043\u006d\u0061p");_bed .ReadUShort ();_ddg :=int (_bed .ReadUShort ());_fcba :=int64 (0);_fbc :=int64 (0);_cde :=int64 (0);for _gga :=0;
_gga < _ddg ;_gga ++{_cecc :=_bed .ReadUShort ();_fea :=_bed .ReadUShort ();_ccae =int64 (_bed .ReadULong ());if _cecc ==3&&_fea ==1{_fbc =_ccae ;}else if _cecc ==3&&_fea ==10{_cde =_ccae ;}else if _cecc ==1&&_fea ==0{_fcba =_ccae ;};};if _fcba !=0{if _gfe :=_bed .parseCmapVersion (_fcba );
_gfe !=nil {return _gfe ;};};if _fbc !=0{if _bac :=_bed .parseCmapSubtable31 (_fbc );_bac !=nil {return _bac ;};};if _cde !=0{if _bdda :=_bed .parseCmapVersion (_cde );_bdda !=nil {return _bdda ;};};if _fbc ==0&&_fcba ==0&&_cde ==0{_dd .Log .Debug ("\u0074\u0074\u0066P\u0061\u0072\u0073\u0065\u0072\u002e\u0050\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u002e\u0020\u004e\u006f\u0020\u0033\u0031\u002c\u0020\u0031\u0030\u002c\u0020\u00331\u0030\u0020\u0074\u0061\u0062\u006c\u0065\u002e");
};return nil ;};func _df ()StdFont {_faf .Do (_ccf );_caa :=Descriptor {Name :CourierObliqueName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0061,BBox :[4]float64 {-27,-250,849,805},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_caa ,_agb );};func (_bedc *ttfParser )ReadSByte ()(_abbc int8 ){_da .Read (_bedc ._dffa ,_da .BigEndian ,&_abbc );return _abbc ;};func (_fg *RuneCharSafeMap )Write (b rune ,r CharMetrics ){_fg ._bec .Lock ();defer _fg ._bec .Unlock ();
_fg ._eb [b ]=r ;};var _bfc *RuneCharSafeMap ;func (_ca *RuneCharSafeMap )Read (b rune )(CharMetrics ,bool ){_ca ._bec .RLock ();defer _ca ._bec .RUnlock ();_bg ,_ba :=_ca ._eb [b ];return _bg ,_ba ;};func (_db StdFont )ToPdfObject ()_gea .PdfObject {_aef :=_gea .MakeDict ();
_aef .Set ("\u0054\u0079\u0070\u0065",_gea .MakeName ("\u0046\u006f\u006e\u0074"));_aef .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gea .MakeName ("\u0054\u0079\u0070e\u0031"));_aef .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_gea .MakeName (_db .Name ()));
_aef .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_db ._ac .ToPdfObject ());return _gea .MakeIndirectObject (_aef );};var _fad *RuneCharSafeMap ;func (_fdd *fontMap )read (_bae StdFontName )(func ()StdFont ,bool ){_fdd .Lock ();defer _fdd .Unlock ();
_geb ,_ef :=_fdd ._aea [_bae ];return _geb ,_ef ;};var _bgb =&RuneCharSafeMap {_eb :map[rune ]CharMetrics {' ':{Wx :278},'→':{Wx :838},'↔':{Wx :1016},'↕':{Wx :458},'①':{Wx :788},'②':{Wx :788},'③':{Wx :788},'④':{Wx :788},'⑤':{Wx :788},'⑥':{Wx :788},'⑦':{Wx :788},'⑧':{Wx :788},'⑨':{Wx :788},'⑩':{Wx :788},'■':{Wx :761},'▲':{Wx :892},'▼':{Wx :892},'◆':{Wx :788},'●':{Wx :791},'◗':{Wx :438},'★':{Wx :816},'☎':{Wx :719},'☛':{Wx :960},'☞':{Wx :939},'♠':{Wx :626},'♣':{Wx :776},'♥':{Wx :694},'♦':{Wx :595},'✁':{Wx :974},'✂':{Wx :961},'✃':{Wx :974},'✄':{Wx :980},'✆':{Wx :789},'✇':{Wx :790},'✈':{Wx :791},'✉':{Wx :690},'✌':{Wx :549},'✍':{Wx :855},'✎':{Wx :911},'✏':{Wx :933},'✐':{Wx :911},'✑':{Wx :945},'✒':{Wx :974},'✓':{Wx :755},'✔':{Wx :846},'✕':{Wx :762},'✖':{Wx :761},'✗':{Wx :571},'✘':{Wx :677},'✙':{Wx :763},'✚':{Wx :760},'✛':{Wx :759},'✜':{Wx :754},'✝':{Wx :494},'✞':{Wx :552},'✟':{Wx :537},'✠':{Wx :577},'✡':{Wx :692},'✢':{Wx :786},'✣':{Wx :788},'✤':{Wx :788},'✥':{Wx :790},'✦':{Wx :793},'✧':{Wx :794},'✩':{Wx :823},'✪':{Wx :789},'✫':{Wx :841},'✬':{Wx :823},'✭':{Wx :833},'✮':{Wx :816},'✯':{Wx :831},'✰':{Wx :923},'✱':{Wx :744},'✲':{Wx :723},'✳':{Wx :749},'✴':{Wx :790},'✵':{Wx :792},'✶':{Wx :695},'✷':{Wx :776},'✸':{Wx :768},'✹':{Wx :792},'✺':{Wx :759},'✻':{Wx :707},'✼':{Wx :708},'✽':{Wx :682},'✾':{Wx :701},'✿':{Wx :826},'❀':{Wx :815},'❁':{Wx :789},'❂':{Wx :789},'❃':{Wx :707},'❄':{Wx :687},'❅':{Wx :696},'❆':{Wx :689},'❇':{Wx :786},'❈':{Wx :787},'❉':{Wx :713},'❊':{Wx :791},'❋':{Wx :785},'❍':{Wx :873},'❏':{Wx :762},'❐':{Wx :762},'❑':{Wx :759},'❒':{Wx :759},'❖':{Wx :784},'❘':{Wx :138},'❙':{Wx :277},'❚':{Wx :415},'❛':{Wx :392},'❜':{Wx :392},'❝':{Wx :668},'❞':{Wx :668},'❡':{Wx :732},'❢':{Wx :544},'❣':{Wx :544},'❤':{Wx :910},'❥':{Wx :667},'❦':{Wx :760},'❧':{Wx :760},'❶':{Wx :788},'❷':{Wx :788},'❸':{Wx :788},'❹':{Wx :788},'❺':{Wx :788},'❻':{Wx :788},'❼':{Wx :788},'❽':{Wx :788},'❾':{Wx :788},'❿':{Wx :788},'➀':{Wx :788},'➁':{Wx :788},'➂':{Wx :788},'➃':{Wx :788},'➄':{Wx :788},'➅':{Wx :788},'➆':{Wx :788},'➇':{Wx :788},'➈':{Wx :788},'➉':{Wx :788},'➊':{Wx :788},'➋':{Wx :788},'➌':{Wx :788},'➍':{Wx :788},'➎':{Wx :788},'➏':{Wx :788},'➐':{Wx :788},'➑':{Wx :788},'➒':{Wx :788},'➓':{Wx :788},'➔':{Wx :894},'➘':{Wx :748},'➙':{Wx :924},'➚':{Wx :748},'➛':{Wx :918},'➜':{Wx :927},'➝':{Wx :928},'➞':{Wx :928},'➟':{Wx :834},'➠':{Wx :873},'➡':{Wx :828},'➢':{Wx :924},'➣':{Wx :924},'➤':{Wx :917},'➥':{Wx :930},'➦':{Wx :931},'➧':{Wx :463},'➨':{Wx :883},'➩':{Wx :836},'➪':{Wx :836},'➫':{Wx :867},'➬':{Wx :867},'➭':{Wx :696},'➮':{Wx :696},'➯':{Wx :874},'➱':{Wx :874},'➲':{Wx :760},'➳':{Wx :946},'➴':{Wx :771},'➵':{Wx :865},'➶':{Wx :771},'➷':{Wx :888},'➸':{Wx :967},'➹':{Wx :888},'➺':{Wx :831},'➻':{Wx :873},'➼':{Wx :927},'➽':{Wx :970},'➾':{Wx :918},'\uf8d7':{Wx :390},'\uf8d8':{Wx :390},'\uf8d9':{Wx :317},'\uf8da':{Wx :317},'\uf8db':{Wx :276},'\uf8dc':{Wx :276},'\uf8dd':{Wx :509},'\uf8de':{Wx :509},'\uf8df':{Wx :410},'\uf8e0':{Wx :410},'\uf8e1':{Wx :234},'\uf8e2':{Wx :234},'\uf8e3':{Wx :334},'\uf8e4':{Wx :334}}};
var _eee _gd .Once ;func RegisterStdFont (name StdFontName ,fnc func ()StdFont ,aliases ...StdFontName ){if _ ,_ed :=_cec .read (name );_ed {panic ("\u0066o\u006e\u0074\u0020\u0061l\u0072\u0065\u0061\u0064\u0079 \u0072e\u0067i\u0073\u0074\u0065\u0072\u0065\u0064\u003a "+string (name ));
};_cec .write (name ,fnc );for _ ,_fa :=range aliases {RegisterStdFont (_fa ,fnc );};};type Descriptor struct{Name StdFontName ;Family string ;Weight FontWeight ;Flags uint ;BBox [4]float64 ;ItalicAngle float64 ;Ascent float64 ;Descent float64 ;CapHeight float64 ;
XHeight float64 ;StemV float64 ;StemH float64 ;};func (_cea *ttfParser )parseCmapSubtable10 (_ded int64 )error {if _cea ._cg .Chars ==nil {_cea ._cg .Chars =make (map[rune ]GID );};_cea ._dffa .Seek (int64 (_cea ._aee ["\u0063\u006d\u0061\u0070"])+_ded ,_bf .SeekStart );
var _cfbg ,_eab uint32 ;_gf :=_cea .ReadUShort ();if _gf < 8{_cfbg =uint32 (_cea .ReadUShort ());_eab =uint32 (_cea .ReadUShort ());}else {_cea .ReadUShort ();_cfbg =_cea .ReadULong ();_eab =_cea .ReadULong ();};_dd .Log .Trace ("\u0070\u0061r\u0073\u0065\u0043\u006d\u0061p\u0053\u0075\u0062\u0074\u0061b\u006c\u0065\u0031\u0030\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067\u0075\u0061\u0067\u0065\u003d\u0025\u0064",_gf ,_cfbg ,_eab );
if _gf !=0{return _cb .New ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063\u006d\u0061p\u0020s\u0075\u0062\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_afea ,_abcb :=_cea .ReadStr (256);if _abcb !=nil {return _abcb ;
};_aae :=[]byte (_afea );for _bdg ,_dga :=range _aae {_cea ._cg .Chars [rune (_bdg )]=GID (_dga );if _dga !=0{_b .Printf ("\u0009\u0030\u0078\u002502\u0078\u0020\u279e\u0020\u0030\u0078\u0025\u0030\u0032\u0078\u003d\u0025\u0063\u000a",_bdg ,_dga ,rune (_dga ));
};};return nil ;};func (_fdeg *ttfParser )ParseHead ()error {if _bff :=_fdeg .Seek ("\u0068\u0065\u0061\u0064");_bff !=nil {return _bff ;};_fdeg .Skip (3*4);_ggg :=_fdeg .ReadULong ();if _ggg !=0x5F0F3CF5{_dd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0063\u006fr\u0072e\u0063\u0074\u0020\u006d\u0061\u0067\u0069\u0063\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u002e\u0020\u0046\u006fn\u0074\u0020\u006d\u0061\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0020\u0063\u006f\u0072\u0072\u0065\u0063t\u006c\u0079\u002e\u0020\u0025\u0073",_fdeg );
};_fdeg .Skip (2);_fdeg ._cg .UnitsPerEm =_fdeg .ReadUShort ();_fdeg .Skip (2*8);_fdeg ._cg .Xmin =_fdeg .ReadShort ();_fdeg ._cg .Ymin =_fdeg .ReadShort ();_fdeg ._cg .Xmax =_fdeg .ReadShort ();_fdeg ._cg .Ymax =_fdeg .ReadShort ();return nil ;};func (_egdf *ttfParser )ReadStr (length int )(string ,error ){_dfe :=make ([]byte ,length );
_ade ,_caaa :=_egdf ._dffa .Read (_dfe );if _caaa !=nil {return "",_caaa ;}else if _ade !=length {return "",_b .Errorf ("\u0075\u006e\u0061bl\u0065\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0073",length );
};return string (_dfe ),nil ;};func _effa ()StdFont {_ad .Do (_ee );_aca :=Descriptor {Name :HelveticaObliqueName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-170,-225,1116,931},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_aca ,_dff );};var _ccd =[]rune {'A','Æ','Á','Ă','Â','Ä','À','Ā','Ą','Å','Ã','B','C','Ć','Č','Ç','D','Ď','Đ','∆','E','É','Ě','Ê','Ë','Ė','È','Ē','Ę','Ð','€','F','G','Ğ','Ģ','H','I','Í','Î','Ï','İ','Ì','Ī','Į','J','K','Ķ','L','Ĺ','Ľ','Ļ','Ł','M','N','Ń','Ň','Ņ','Ñ','O','Œ','Ó','Ô','Ö','Ò','Ő','Ō','Ø','Õ','P','Q','R','Ŕ','Ř','Ŗ','S','Ś','Š','Ş','Ș','T','Ť','Ţ','Þ','U','Ú','Û','Ü','Ù','Ű','Ū','Ų','Ů','V','W','X','Y','Ý','Ÿ','Z','Ź','Ž','Ż','a','á','ă','â','´','ä','æ','à','ā','&','ą','å','^','~','*','@','ã','b','\\','|','{','}','[',']','˘','¦','•','c','ć','ˇ','č','ç','¸','¢','ˆ',':',',','\uf6c3','©','¤','d','†','‡','ď','đ','°','¨','÷','$','˙','ı','e','é','ě','ê','ë','ė','è','8','…','ē','—','–','ę','=','ð','!','¡','f','ﬁ','5','ﬂ','ƒ','4','⁄','g','ğ','ģ','ß','`','>','≥','«','»','‹','›','h','˝','-','i','í','î','ï','ì','ī','į','j','k','ķ','l','ĺ','ľ','ļ','<','≤','¬','◊','ł','m','¯','−','µ','×','n','ń','ň','ņ','9','≠','ñ','#','o','ó','ô','ö','œ','˛','ò','ő','ō','1','½','¼','¹','ª','º','ø','õ','p','¶','(',')','∂','%','.','·','‰','+','±','q','?','¿','"','„','“','”','‘','’','‚','\'','r','ŕ','√','ř','ŗ','®','˚','s','ś','š','ş','ș','§',';','7','6','/',' ','£','∑','t','ť','ţ','þ','3','¾','³','˜','™','2','²','u','ú','û','ü','ù','ű','ū','_','ų','ů','v','w','x','y','ý','ÿ','¥','z','ź','ž','ż','0'};
func init (){RegisterStdFont (CourierName ,_dbd ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u0043\u006f\u0075\u0072\u0069e\u0072\u004e\u0065\u0077","\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077");RegisterStdFont (CourierBoldName ,_aeg ,"\u0043o\u0075r\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0042\u006f\u006c\u0064");
RegisterStdFont (CourierObliqueName ,_df ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0049t\u0061\u006c\u0069\u0063");RegisterStdFont (CourierBoldObliqueName ,_ab ,"C\u006f\u0075\u0072\u0069er\u004ee\u0077\u002c\u0042\u006f\u006cd\u0049\u0074\u0061\u006c\u0069\u0063");
};var _bbb =[]int16 {611,889,611,611,611,611,611,611,611,611,611,611,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,611,722,722,722,722,333,333,333,333,333,333,333,333,444,667,667,556,556,611,556,556,833,667,667,667,667,667,722,944,722,722,722,722,722,722,722,722,611,722,611,611,611,611,500,500,500,500,500,556,556,556,611,722,722,722,722,722,722,722,722,722,611,833,611,556,556,556,556,556,556,556,500,500,500,500,333,500,667,500,500,778,500,500,422,541,500,920,500,500,278,275,400,400,389,389,333,275,350,444,444,333,444,444,333,500,333,333,250,250,760,500,500,500,500,544,500,400,333,675,500,333,278,444,444,444,444,444,444,444,500,889,444,889,500,444,675,500,333,389,278,500,500,500,500,500,167,500,500,500,500,333,675,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,444,444,278,278,300,278,675,549,675,471,278,722,333,675,500,675,500,500,500,500,500,549,500,500,500,500,500,500,667,333,500,500,500,500,750,750,300,276,310,500,500,500,523,333,333,476,833,250,250,1000,675,675,500,500,500,420,556,556,556,333,333,333,214,389,389,453,389,389,760,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,300,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,444,667,444,444,444,444,500,389,389,389,389,500};
func NewStdFontWithEncoding (desc Descriptor ,metrics *RuneCharSafeMap ,encoder _ec .TextEncoder )StdFont {var _cef rune =0xA0;if _ ,_aeb :=metrics .Read (_cef );!_aeb {_fe ,_ :=metrics .Read (0x20);metrics .Write (_cef ,_fe );};return StdFont {_edg :desc ,_bgcc :metrics ,_ac :encoder };
};func _ab ()StdFont {_faf .Do (_ccf );_abc :=Descriptor {Name :CourierBoldObliqueName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0061,BBox :[4]float64 {-57,-250,869,801},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_abc ,_caaf );};func (_gc StdFont )Encoder ()_ec .TextEncoder {return _gc ._ac };func _ee (){_fad =MakeRuneCharSafeMap (len (_ccd ));_fae =MakeRuneCharSafeMap (len (_ccd ));for _abd ,_cd :=range _ccd {_fad .Write (_cd ,CharMetrics {Wx :float64 (_dcc [_abd ])});
_fae .Write (_cd ,CharMetrics {Wx :float64 (_fbd [_abd ])});};_dff =_fad .Copy ();_bb =_fae .Copy ();};var _agd =&RuneCharSafeMap {_eb :map[rune ]CharMetrics {' ':{Wx :250},'!':{Wx :333},'#':{Wx :500},'%':{Wx :833},'&':{Wx :778},'(':{Wx :333},')':{Wx :333},'+':{Wx :549},',':{Wx :250},'.':{Wx :250},'/':{Wx :278},'0':{Wx :500},'1':{Wx :500},'2':{Wx :500},'3':{Wx :500},'4':{Wx :500},'5':{Wx :500},'6':{Wx :500},'7':{Wx :500},'8':{Wx :500},'9':{Wx :500},':':{Wx :278},';':{Wx :278},'<':{Wx :549},'=':{Wx :549},'>':{Wx :549},'?':{Wx :444},'[':{Wx :333},']':{Wx :333},'_':{Wx :500},'{':{Wx :480},'|':{Wx :200},'}':{Wx :480},'¬':{Wx :713},'°':{Wx :400},'±':{Wx :549},'µ':{Wx :576},'×':{Wx :549},'÷':{Wx :549},'ƒ':{Wx :500},'Α':{Wx :722},'Β':{Wx :667},'Γ':{Wx :603},'Ε':{Wx :611},'Ζ':{Wx :611},'Η':{Wx :722},'Θ':{Wx :741},'Ι':{Wx :333},'Κ':{Wx :722},'Λ':{Wx :686},'Μ':{Wx :889},'Ν':{Wx :722},'Ξ':{Wx :645},'Ο':{Wx :722},'Π':{Wx :768},'Ρ':{Wx :556},'Σ':{Wx :592},'Τ':{Wx :611},'Υ':{Wx :690},'Φ':{Wx :763},'Χ':{Wx :722},'Ψ':{Wx :795},'α':{Wx :631},'β':{Wx :549},'γ':{Wx :411},'δ':{Wx :494},'ε':{Wx :439},'ζ':{Wx :494},'η':{Wx :603},'θ':{Wx :521},'ι':{Wx :329},'κ':{Wx :549},'λ':{Wx :549},'ν':{Wx :521},'ξ':{Wx :493},'ο':{Wx :549},'π':{Wx :549},'ρ':{Wx :549},'ς':{Wx :439},'σ':{Wx :603},'τ':{Wx :439},'υ':{Wx :576},'φ':{Wx :521},'χ':{Wx :549},'ψ':{Wx :686},'ω':{Wx :686},'ϑ':{Wx :631},'ϒ':{Wx :620},'ϕ':{Wx :603},'ϖ':{Wx :713},'•':{Wx :460},'…':{Wx :1000},'′':{Wx :247},'″':{Wx :411},'⁄':{Wx :167},'€':{Wx :750},'ℑ':{Wx :686},'℘':{Wx :987},'ℜ':{Wx :795},'Ω':{Wx :768},'ℵ':{Wx :823},'←':{Wx :987},'↑':{Wx :603},'→':{Wx :987},'↓':{Wx :603},'↔':{Wx :1042},'↵':{Wx :658},'⇐':{Wx :987},'⇑':{Wx :603},'⇒':{Wx :987},'⇓':{Wx :603},'⇔':{Wx :1042},'∀':{Wx :713},'∂':{Wx :494},'∃':{Wx :549},'∅':{Wx :823},'∆':{Wx :612},'∇':{Wx :713},'∈':{Wx :713},'∉':{Wx :713},'∋':{Wx :439},'∏':{Wx :823},'∑':{Wx :713},'−':{Wx :549},'∗':{Wx :500},'√':{Wx :549},'∝':{Wx :713},'∞':{Wx :713},'∠':{Wx :768},'∧':{Wx :603},'∨':{Wx :603},'∩':{Wx :768},'∪':{Wx :768},'∫':{Wx :274},'∴':{Wx :863},'∼':{Wx :549},'≅':{Wx :549},'≈':{Wx :549},'≠':{Wx :549},'≡':{Wx :549},'≤':{Wx :549},'≥':{Wx :549},'⊂':{Wx :713},'⊃':{Wx :713},'⊄':{Wx :713},'⊆':{Wx :713},'⊇':{Wx :713},'⊕':{Wx :768},'⊗':{Wx :768},'⊥':{Wx :658},'⋅':{Wx :250},'⌠':{Wx :686},'⌡':{Wx :686},'〈':{Wx :329},'〉':{Wx :329},'◊':{Wx :494},'♠':{Wx :753},'♣':{Wx :753},'♥':{Wx :753},'♦':{Wx :753},'\uf6d9':{Wx :790},'\uf6da':{Wx :790},'\uf6db':{Wx :890},'\uf8e5':{Wx :500},'\uf8e6':{Wx :603},'\uf8e7':{Wx :1000},'\uf8e8':{Wx :790},'\uf8e9':{Wx :790},'\uf8ea':{Wx :786},'\uf8eb':{Wx :384},'\uf8ec':{Wx :384},'\uf8ed':{Wx :384},'\uf8ee':{Wx :384},'\uf8ef':{Wx :384},'\uf8f0':{Wx :384},'\uf8f1':{Wx :494},'\uf8f2':{Wx :494},'\uf8f3':{Wx :494},'\uf8f4':{Wx :494},'\uf8f5':{Wx :686},'\uf8f6':{Wx :384},'\uf8f7':{Wx :384},'\uf8f8':{Wx :384},'\uf8f9':{Wx :384},'\uf8fa':{Wx :384},'\uf8fb':{Wx :384},'\uf8fc':{Wx :494},'\uf8fd':{Wx :494},'\uf8fe':{Wx :494},'\uf8ff':{Wx :790}}};
func (_gbd StdFont )GetMetricsTable ()*RuneCharSafeMap {return _gbd ._bgcc };func _def ()StdFont {_ad .Do (_ee );_faa :=Descriptor {Name :HelveticaBoldName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-170,-228,1003,962},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_faa ,_fae );};func _bad ()StdFont {_ad .Do (_ee );_dca :=Descriptor {Name :HelveticaName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0020,BBox :[4]float64 {-166,-225,1000,931},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_dca ,_fad );};const (HelveticaName =StdFontName ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");HelveticaBoldName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061-\u0042\u006f\u006c\u0064");HelveticaObliqueName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061\u002d\u004f\u0062l\u0069\u0071\u0075\u0065");
HelveticaBoldObliqueName =StdFontName ("H\u0065\u006c\u0076\u0065ti\u0063a\u002d\u0042\u006f\u006c\u0064O\u0062\u006c\u0069\u0071\u0075\u0065"););func (_gbb *ttfParser )ReadShort ()(_eeed int16 ){_da .Read (_gbb ._dffa ,_da .BigEndian ,&_eeed );return _eeed ;
};func init (){RegisterStdFont (HelveticaName ,_bad ,"\u0041\u0072\u0069a\u006c");RegisterStdFont (HelveticaBoldName ,_def ,"\u0041\u0072\u0069\u0061\u006c\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (HelveticaObliqueName ,_effa ,"\u0041\u0072\u0069a\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063");
RegisterStdFont (HelveticaBoldObliqueName ,_gcc ,"\u0041\u0072i\u0061\u006c\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");};func (_bfb CharMetrics )String ()string {return _b .Sprintf ("<\u0025\u002e\u0031\u0066\u002c\u0025\u002e\u0031\u0066\u003e",_bfb .Wx ,_bfb .Wy );
};func (_gaf *TtfType )MakeToUnicode ()*_f .CMap {_bdd :=make (map[_f .CharCode ]rune );if len (_gaf .GlyphNames )==0{return _f .NewToUnicodeCMap (_bdd );};for _cae ,_dcad :=range _gaf .Chars {_af :=_f .CharCode (_cae );_bbd :=_gaf .GlyphNames [_dcad ];
_adab ,_age :=_ec .GlyphToRune (_bbd );if !_age {_dd .Log .Debug ("\u004e\u006f \u0072\u0075\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065\u003d\u0030\u0078\u0025\u0030\u0034\u0078\u0020\u0067\u006c\u0079\u0070h=\u0025\u0071",_cae ,_bbd );_adab =_ec .MissingCodeRune ;
};_bdd [_af ]=_adab ;};return _f .NewToUnicodeCMap (_bdd );};var _faf _gd .Once ;func (_bfg *ttfParser )ReadUShort ()(_cgf uint16 ){_da .Read (_bfg ._dffa ,_da .BigEndian ,&_cgf );return _cgf ;};func (_gg *RuneCharSafeMap )Range (f func (_cbdc rune ,_bc CharMetrics )(_ce bool )){_gg ._bec .RLock ();
defer _gg ._bec .RUnlock ();for _cca ,_ae :=range _gg ._eb {if f (_cca ,_ae ){break ;};};};func (_dfba *ttfParser )readByte ()(_edc uint8 ){_da .Read (_dfba ._dffa ,_da .BigEndian ,&_edc );return _edc ;};type fontMap struct{_gd .Mutex ;_aea map[StdFontName ]func ()StdFont ;
};func (_gdc *ttfParser )parseCmapSubtable31 (_ebfc int64 )error {_aebb :=make ([]rune ,0,8);_bbf :=make ([]rune ,0,8);_efff :=make ([]int16 ,0,8);_eea :=make ([]uint16 ,0,8);_gdc ._cg .Chars =make (map[rune ]GID );_gdc ._dffa .Seek (int64 (_gdc ._aee ["\u0063\u006d\u0061\u0070"])+_ebfc ,_bf .SeekStart );
_afe :=_gdc .ReadUShort ();if _afe !=4{return _ge .Errorf ("u\u006e\u0065\u0078\u0070\u0065\u0063t\u0065\u0064\u0020\u0073\u0075\u0062t\u0061\u0062\u006c\u0065\u0020\u0066\u006fr\u006d\u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0028\u0025w\u0029",_afe ,_gea .ErrNotSupported );
};_gdc .Skip (2*2);_caca :=int (_gdc .ReadUShort ()/2);_gdc .Skip (3*2);for _aefc :=0;_aefc < _caca ;_aefc ++{_bbf =append (_bbf ,rune (_gdc .ReadUShort ()));};_gdc .Skip (2);for _cdd :=0;_cdd < _caca ;_cdd ++{_aebb =append (_aebb ,rune (_gdc .ReadUShort ()));
};for _fef :=0;_fef < _caca ;_fef ++{_efff =append (_efff ,_gdc .ReadShort ());};_dfbc ,_ :=_gdc ._dffa .Seek (int64 (0),_bf .SeekCurrent );for _baa :=0;_baa < _caca ;_baa ++{_eea =append (_eea ,_gdc .ReadUShort ());};for _fadb :=0;_fadb < _caca ;_fadb ++{_aed :=_aebb [_fadb ];
_eeb :=_bbf [_fadb ];_ecb :=_efff [_fadb ];_fga :=_eea [_fadb ];if _fga > 0{_gdc ._dffa .Seek (_dfbc +2*int64 (_fadb )+int64 (_fga ),_bf .SeekStart );};for _fed :=_aed ;_fed <=_eeb ;_fed ++{if _fed ==0xFFFF{break ;};var _fcfa int32 ;if _fga > 0{_fcfa =int32 (_gdc .ReadUShort ());
if _fcfa > 0{_fcfa +=int32 (_ecb );};}else {_fcfa =_fed +int32 (_ecb );};if _fcfa >=65536{_fcfa -=65536;};if _fcfa > 0{_gdc ._cg .Chars [_fed ]=GID (_fcfa );};};};return nil ;};func (_abb *ttfParser )parseCmapFormat0 ()error {_afb ,_abe :=_abb .ReadStr (256);
if _abe !=nil {return _abe ;};_dcag :=[]byte (_afb );_dd .Log .Trace ("\u0070a\u0072\u0073e\u0043\u006d\u0061p\u0046\u006f\u0072\u006d\u0061\u0074\u0030:\u0020\u0025\u0073\u000a\u0064\u0061t\u0061\u0053\u0074\u0072\u003d\u0025\u002b\u0071\u000a\u0064\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d",_abb ._cg .String (),_afb ,_dcag );
for _bbfa ,_bgg :=range _dcag {_abb ._cg .Chars [rune (_bbfa )]=GID (_bgg );};return nil ;};func _acaa (_cgg map[string ]uint32 )string {var _gdd []string ;for _eec :=range _cgg {_gdd =append (_gdd ,_eec );};_be .Slice (_gdd ,func (_fbaa ,_cfga int )bool {return _cgg [_gdd [_fbaa ]]< _cgg [_gdd [_cfga ]]});
_cfbd :=[]string {_b .Sprintf ("\u0054\u0072\u0075\u0065Ty\u0070\u0065\u0020\u0074\u0061\u0062\u006c\u0065\u0073\u003a\u0020\u0025\u0064",len (_cgg ))};for _ ,_cafb :=range _gdd {_cfbd =append (_cfbd ,_b .Sprintf ("\u0009%\u0071\u0020\u0025\u0035\u0064",_cafb ,_cgg [_cafb ]));
};return _e .Join (_cfbd ,"\u000a");};func _ffe ()StdFont {_eee .Do (_egd );_cdf :=Descriptor {Name :TimesBoldItalicName ,Family :_ccgd ,Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-200,-218,996,921},ItalicAngle :-15,Ascent :683,Descent :-217,CapHeight :669,XHeight :462,StemV :121,StemH :42};
return NewStdFont (_cdf ,_bfc );};var _fac =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,611,778,778,778,778,389,389,389,389,389,389,389,389,500,778,778,667,667,667,667,667,944,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,611,778,722,722,722,722,556,556,556,556,556,667,667,667,611,722,722,722,722,722,722,722,722,722,722,1000,722,722,722,722,667,667,667,667,500,500,500,500,333,500,722,500,500,833,500,500,581,520,500,930,500,556,278,220,394,394,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,556,500,500,672,556,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,333,333,333,556,500,556,500,500,167,500,500,500,556,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,333,556,556,278,278,394,278,570,549,570,494,278,833,333,570,556,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,300,330,500,500,556,540,333,333,494,1000,250,250,1000,570,570,556,500,500,555,500,500,500,333,333,333,278,444,444,549,444,444,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,333,416,333,556,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,500,722,500,500,500,500,500,444,444,444,444,500};
func (_dccd *ttfParser )ParseHmtx ()error {if _fcf :=_dccd .Seek ("\u0068\u006d\u0074\u0078");_fcf !=nil {return _fcf ;};_dccd ._cg .Widths =make ([]uint16 ,0,8);for _dgg :=uint16 (0);_dgg < _dccd ._bab ;_dgg ++{_dccd ._cg .Widths =append (_dccd ._cg .Widths ,_dccd .ReadUShort ());
_dccd .Skip (2);};if _dccd ._bab < _dccd ._cgd &&_dccd ._bab > 0{_afa :=_dccd ._cg .Widths [_dccd ._bab -1];for _becg :=_dccd ._bab ;_becg < _dccd ._cgd ;_becg ++{_dccd ._cg .Widths =append (_dccd ._cg .Widths ,_afa );};};return nil ;};func init (){RegisterStdFont (SymbolName ,_ada ,"\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063","S\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064","\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (ZapfDingbatsName ,_bgcf );};const (FontWeightMedium FontWeight =iota ;FontWeightBold ;FontWeightRoman ;);func (_ag StdFont )Name ()string {return string (_ag ._edg .Name )};func _dbd ()StdFont {_faf .Do (_ccf );_efg :=Descriptor {Name :CourierName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0021,BBox :[4]float64 {-23,-250,715,805},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_efg ,_gdf );};var _dbe *RuneCharSafeMap ;const (_ccgd ="\u0054\u0069\u006de\u0073";TimesRomanName =StdFontName ("T\u0069\u006d\u0065\u0073\u002d\u0052\u006f\u006d\u0061\u006e");TimesBoldName =StdFontName ("\u0054\u0069\u006d\u0065\u0073\u002d\u0042\u006f\u006c\u0064");
TimesItalicName =StdFontName ("\u0054\u0069\u006de\u0073\u002d\u0049\u0074\u0061\u006c\u0069\u0063");TimesBoldItalicName =StdFontName ("\u0054\u0069m\u0065\u0073\u002dB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063"););func init (){RegisterStdFont (TimesRomanName ,_aa ,"\u0054\u0069\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e","\u0054\u0069\u006de\u0073");
RegisterStdFont (TimesBoldName ,_ceb ,"\u0054i\u006de\u0073\u004e\u0065\u0077\u0052o\u006d\u0061n\u002c\u0042\u006f\u006c\u0064","\u0054\u0069\u006d\u0065\u0073\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (TimesItalicName ,_ccfb ,"T\u0069m\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006da\u006e\u002c\u0049\u0074al\u0069\u0063","\u0054\u0069\u006de\u0073\u002c\u0049\u0074\u0061\u006c\u0069\u0063");
RegisterStdFont (TimesBoldItalicName ,_ffe ,"\u0054i\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e,\u0042\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063","\u0054\u0069m\u0065\u0073\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
};var _gdf *RuneCharSafeMap ;func _aeg ()StdFont {_faf .Do (_ccf );_ccg :=Descriptor {Name :CourierBoldName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0021,BBox :[4]float64 {-113,-250,749,801},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_ccg ,_dbe );};func (_gbag *ttfParser )ParseHhea ()error {if _dafb :=_gbag .Seek ("\u0068\u0068\u0065\u0061");_dafb !=nil {return _dafb ;};_gbag .Skip (4+15*2);_gbag ._bab =_gbag .ReadUShort ();return nil ;};func _ccf (){const _dfb =600;
_gdf =MakeRuneCharSafeMap (len (_ccd ));for _ ,_fb :=range _ccd {_gdf .Write (_fb ,CharMetrics {Wx :_dfb });};_dbe =_gdf .Copy ();_caaf =_gdf .Copy ();_agb =_gdf .Copy ();};var _fbd =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,556,722,722,611,611,611,611,611,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,722,556,556,584,584,389,975,556,611,278,280,389,389,333,333,333,280,350,556,556,333,556,556,333,556,333,333,278,250,737,556,611,556,556,743,611,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,611,333,333,333,611,556,611,556,556,167,611,611,611,611,333,584,549,556,556,333,333,611,333,333,278,278,278,278,278,278,278,278,556,556,278,278,400,278,584,549,584,494,278,889,333,584,611,584,611,611,611,611,556,549,611,556,611,611,611,611,944,333,611,611,611,556,834,834,333,370,365,611,611,611,556,333,333,494,889,278,278,1000,584,584,611,611,611,474,500,500,500,278,278,278,238,389,389,549,389,389,737,333,556,556,556,556,556,556,333,556,556,278,278,556,600,333,389,333,611,556,834,333,333,1000,556,333,611,611,611,611,611,611,611,556,611,611,556,778,556,556,556,556,556,500,500,500,500,556};
func _bgcf ()StdFont {_caf :=_ec .NewZapfDingbatsEncoder ();_cfb :=Descriptor {Name :ZapfDingbatsName ,Family :string (ZapfDingbatsName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-1,-143,981,820},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :90,StemH :28};
return NewStdFontWithEncoding (_cfb ,_bgb ,_caf );};func (_baf *ttfParser )ParseOS2 ()error {if _cefg :=_baf .Seek ("\u004f\u0053\u002f\u0032");_cefg !=nil {return _cefg ;};_aff :=_baf .ReadUShort ();_baf .Skip (4*2);_baf .Skip (11*2+10+4*4+4);_bceg :=_baf .ReadUShort ();
_baf ._cg .Bold =(_bceg &32)!=0;_baf .Skip (2*2);_baf ._cg .TypoAscender =_baf .ReadShort ();_baf ._cg .TypoDescender =_baf .ReadShort ();if _aff >=2{_baf .Skip (3*2+2*4+2);_baf ._cg .CapHeight =_baf .ReadShort ();}else {_baf ._cg .CapHeight =0;};return nil ;
};func (_daf StdFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_ccc ,_cac :=_daf ._bgcc .Read (r );return _ccc ,_cac ;};func (_bge *ttfParser )Skip (n int ){_bge ._dffa .Seek (int64 (n ),_bf .SeekCurrent )};type ttfParser struct{_cg TtfType ;_dffa _bf .ReadSeeker ;
_aee map[string ]uint32 ;_bab uint16 ;_cgd uint16 ;};type GID =_ec .GID ;func _ccfb ()StdFont {_eee .Do (_egd );_ffa :=Descriptor {Name :TimesItalicName ,Family :_ccgd ,Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-169,-217,1010,883},ItalicAngle :-15.5,Ascent :683,Descent :-217,CapHeight :653,XHeight :441,StemV :76,StemH :32};
return NewStdFont (_ffa ,_fbe );};func NewStdFontByName (name StdFontName )(StdFont ,bool ){_ged ,_eg :=_cec .read (name );if !_eg {return StdFont {},false ;};return _ged (),true ;};func _ceb ()StdFont {_eee .Do (_egd );_aegg :=Descriptor {Name :TimesBoldName ,Family :_ccgd ,Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,935},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :676,XHeight :461,StemV :139,StemH :44};
return NewStdFont (_aegg ,_cce );};func (_gab *TtfType )NewEncoder ()_ec .TextEncoder {return _ec .NewTrueTypeFontEncoder (_gab .Chars )};func _gcc ()StdFont {_ad .Do (_ee );_dfbd :=Descriptor {Name :HelveticaBoldObliqueName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-174,-228,1114,962},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_dfbd ,_bb );};func (_efe *ttfParser )ParseComponents ()error {if _cba :=_efe .ParseHead ();_cba !=nil {return _cba ;};if _bcf :=_efe .ParseHhea ();_bcf !=nil {return _bcf ;};if _bcb :=_efe .ParseMaxp ();_bcb !=nil {return _bcb ;};if _ece :=_efe .ParseHmtx ();
_ece !=nil {return _ece ;};if _ ,_bde :=_efe ._aee ["\u006e\u0061\u006d\u0065"];_bde {if _ecc :=_efe .ParseName ();_ecc !=nil {return _ecc ;};};if _ ,_afc :=_efe ._aee ["\u004f\u0053\u002f\u0032"];_afc {if _aad :=_efe .ParseOS2 ();_aad !=nil {return _aad ;
};};if _ ,_ccaa :=_efe ._aee ["\u0070\u006f\u0073\u0074"];_ccaa {if _fgg :=_efe .ParsePost ();_fgg !=nil {return _fgg ;};};if _ ,_becd :=_efe ._aee ["\u0063\u006d\u0061\u0070"];_becd {if _afcc :=_efe .ParseCmap ();_afcc !=nil {return _afcc ;};};return nil ;
};func (_efd *TtfType )String ()string {return _b .Sprintf ("\u0046\u004fN\u0054\u005f\u0046\u0049\u004cE\u0032\u007b\u0025\u0023\u0071 \u0055\u006e\u0069\u0074\u0073\u0050\u0065\u0072\u0045\u006d\u003d\u0025\u0064\u0020\u0042\u006f\u006c\u0064\u003d\u0025\u0074\u0020\u0049\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065\u003d\u0025\u0066\u0020"+"\u0043\u0061pH\u0065\u0069\u0067h\u0074\u003d\u0025\u0064 Ch\u0061rs\u003d\u0025\u0064\u0020\u0047\u006c\u0079ph\u004e\u0061\u006d\u0065\u0073\u003d\u0025d\u007d",_efd .PostScriptName ,_efd .UnitsPerEm ,_efd .Bold ,_efd .ItalicAngle ,_efd .CapHeight ,len (_efd .Chars ),len (_efd .GlyphNames ));
};type RuneCharSafeMap struct{_eb map[rune ]CharMetrics ;_bec _gd .RWMutex ;};func (_eabc *ttfParser )parseCmapFormat12 ()error {_dge :=_eabc .ReadULong ();_dd .Log .Trace ("\u0070\u0061\u0072se\u0043\u006d\u0061\u0070\u0046\u006f\u0072\u006d\u0061t\u00312\u003a \u0025s\u0020\u006e\u0075\u006d\u0047\u0072\u006f\u0075\u0070\u0073\u003d\u0025\u0064",_eabc ._cg .String (),_dge );
for _aba :=uint32 (0);_aba < _dge ;_aba ++{_geba :=_eabc .ReadULong ();_bfd :=_eabc .ReadULong ();_cad :=_eabc .ReadULong ();if _geba > 0x0010FFFF||(0xD800<=_geba &&_geba <=0xDFFF){return _cb .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");
};if _bfd < _geba ||_bfd > 0x0010FFFF||(0xD800<=_bfd &&_bfd <=0xDFFF){return _cb .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");};for _ebac :=_geba ;_ebac <=_bfd ;
_ebac ++{if _ebac > 0x10FFFF{_dd .Log .Debug ("\u0046\u006fr\u006d\u0061\u0074\u0020\u0031\u0032\u0020\u0063\u006d\u0061\u0070\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0063\u0068\u0061\u0072\u0061\u0063\u0074\u0065\u0072\u0020\u0062\u0065\u0079\u006f\u006e\u0064\u0020\u0055\u0043\u0053\u002d\u0034");
};_eabc ._cg .Chars [rune (_ebac )]=GID (_cad );_cad ++;};};return nil ;};const (CourierName =StdFontName ("\u0043o\u0075\u0072\u0069\u0065\u0072");CourierBoldName =StdFontName ("\u0043\u006f\u0075r\u0069\u0065\u0072\u002d\u0042\u006f\u006c\u0064");CourierObliqueName =StdFontName ("\u0043o\u0075r\u0069\u0065\u0072\u002d\u004f\u0062\u006c\u0069\u0071\u0075\u0065");
CourierBoldObliqueName =StdFontName ("\u0043\u006f\u0075\u0072ie\u0072\u002d\u0042\u006f\u006c\u0064\u004f\u0062\u006c\u0069\u0071\u0075\u0065"););func IsStdFont (name StdFontName )bool {_ ,_eba :=_cec .read (name );return _eba };var _cec =&fontMap {_aea :make (map[StdFontName ]func ()StdFont )};
var _dff *RuneCharSafeMap ;func (_de *RuneCharSafeMap )Copy ()*RuneCharSafeMap {_a :=MakeRuneCharSafeMap (_de .Length ());_de .Range (func (_gba rune ,_cbd CharMetrics )(_fd bool ){_a ._eb [_gba ]=_cbd ;return false });return _a ;};func (_ecg *ttfParser )ParseMaxp ()error {if _gef :=_ecg .Seek ("\u006d\u0061\u0078\u0070");
_gef !=nil {return _gef ;};_ecg .Skip (4);_ecg ._cgd =_ecg .ReadUShort ();return nil ;};func (_fec StdFont )Descriptor ()Descriptor {return _fec ._edg };func (_fcb *ttfParser )Parse ()(TtfType ,error ){_bgbd ,_dda :=_fcb .ReadStr (4);if _dda !=nil {return TtfType {},_dda ;
};if _bgbd =="\u004f\u0054\u0054\u004f"{return TtfType {},_ge .Errorf ("\u0066\u006f\u006e\u0074s\u0020\u0062\u0061\u0073\u0065\u0064\u0020\u006f\u006e \u0050\u006f\u0073\u0074\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065s\u0020\u0061\u0072\u0065\u0020n\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_gea .ErrNotSupported );
};if _bgbd !="\u0000\u0001\u0000\u0000"&&_bgbd !="\u0074\u0072\u0075\u0065"{_dd .Log .Debug ("\u0055n\u0072\u0065c\u006f\u0067\u006ei\u007a\u0065\u0064\u0020\u0054\u0072\u0075e\u0054\u0079\u0070\u0065\u0020\u0066i\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u002e\u0020v\u0065\u0072\u0073\u0069\u006f\u006e\u003d\u0025\u0071",_bgbd );
};_gbae :=int (_fcb .ReadUShort ());_fcb .Skip (3*2);_fcb ._aee =make (map[string ]uint32 );var _ccdc string ;for _dae :=0;_dae < _gbae ;_dae ++{_ccdc ,_dda =_fcb .ReadStr (4);if _dda !=nil {return TtfType {},_dda ;};_fcb .Skip (4);_gebe :=_fcb .ReadULong ();
_fcb .Skip (4);_fcb ._aee [_ccdc ]=_gebe ;};_dd .Log .Trace (_acaa (_fcb ._aee ));if _dda =_fcb .ParseComponents ();_dda !=nil {return TtfType {},_dda ;};return _fcb ._cg ,nil ;};const (SymbolName =StdFontName ("\u0053\u0079\u006d\u0062\u006f\u006c");ZapfDingbatsName =StdFontName ("\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073");
);type FontWeight int ;func TtfParse (r _bf .ReadSeeker )(TtfType ,error ){_gag :=&ttfParser {_dffa :r };return _gag .Parse ()};var _adb =[]int16 {667,944,667,667,667,667,667,667,667,667,667,667,667,667,667,667,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,667,722,722,722,778,389,389,389,389,389,389,389,389,500,667,667,611,611,611,611,611,889,722,722,722,722,722,722,944,722,722,722,722,722,722,722,722,611,722,667,667,667,667,556,556,556,556,556,611,611,611,611,722,722,722,722,722,722,722,722,722,667,889,667,611,611,611,611,611,611,611,500,500,500,500,333,500,722,500,500,778,500,500,570,570,500,832,500,500,278,220,348,348,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,500,500,500,608,500,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,389,389,333,556,500,556,500,500,167,500,500,500,500,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,278,500,500,278,278,382,278,570,549,606,494,278,778,333,606,576,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,266,300,500,500,500,500,333,333,494,833,250,250,1000,570,570,500,500,500,555,500,500,500,333,333,333,278,389,389,549,389,389,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,366,278,500,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,444,667,500,444,444,444,500,389,389,389,389,500};
var _agb *RuneCharSafeMap ;func (_bgc *RuneCharSafeMap )Length ()int {_bgc ._bec .RLock ();defer _bgc ._bec .RUnlock ();return len (_bgc ._eb );};func MakeRuneCharSafeMap (length int )*RuneCharSafeMap {return &RuneCharSafeMap {_eb :make (map[rune ]CharMetrics ,length )};
};var _cce *RuneCharSafeMap ;func (_adad *ttfParser )ReadULong ()(_bfda uint32 ){_da .Read (_adad ._dffa ,_da .BigEndian ,&_bfda );return _bfda ;};func (_ddc *ttfParser )ParsePost ()error {if _dbg :=_ddc .Seek ("\u0070\u006f\u0073\u0074");_dbg !=nil {return _dbg ;
};_cdb :=_ddc .Read32Fixed ();_ddc ._cg .ItalicAngle =_ddc .Read32Fixed ();_ddc ._cg .UnderlinePosition =_ddc .ReadShort ();_ddc ._cg .UnderlineThickness =_ddc .ReadShort ();_ddc ._cg .IsFixedPitch =_ddc .ReadULong ()!=0;_ddc .ReadULong ();_ddc .ReadULong ();
_ddc .ReadULong ();_ddc .ReadULong ();_dd .Log .Trace ("\u0050a\u0072\u0073\u0065\u0050\u006f\u0073\u0074\u003a\u0020\u0066\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065\u003d\u0025\u0066",_cdb );switch _cdb {case 1.0:_ddc ._cg .GlyphNames =_efb ;case 2.0:_cddd :=int (_ddc .ReadUShort ());
_cgge :=make ([]int ,_cddd );_ddc ._cg .GlyphNames =make ([]GlyphName ,_cddd );_dgf :=-1;for _bggc :=0;_bggc < _cddd ;_bggc ++{_bdgd :=int (_ddc .ReadUShort ());_cgge [_bggc ]=_bdgd ;if _bdgd <=0x7fff&&_bdgd > _dgf {_dgf =_bdgd ;};};var _daef []GlyphName ;
if _dgf >=len (_efb ){_daef =make ([]GlyphName ,_dgf -len (_efb )+1);for _cbe :=0;_cbe < _dgf -len (_efb )+1;_cbe ++{_abbe :=int (_ddc .readByte ());_cbda ,_ebg :=_ddc .ReadStr (_abbe );if _ebg !=nil {return _ebg ;};_daef [_cbe ]=GlyphName (_cbda );};};
for _efa :=0;_efa < _cddd ;_efa ++{_bacd :=_cgge [_efa ];if _bacd < len (_efb ){_ddc ._cg .GlyphNames [_efa ]=_efb [_bacd ];}else if _bacd >=len (_efb )&&_bacd <=32767{_ddc ._cg .GlyphNames [_efa ]=_daef [_bacd -len (_efb )];}else {_ddc ._cg .GlyphNames [_efa ]="\u002e\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064";
};};case 2.5:_eed :=make ([]int ,_ddc ._cgd );for _ccfgc :=0;_ccfgc < len (_eed );_ccfgc ++{_gbf :=int (_ddc .ReadSByte ());_eed [_ccfgc ]=_ccfgc +1+_gbf ;};_ddc ._cg .GlyphNames =make ([]GlyphName ,len (_eed ));for _gfg :=0;_gfg < len (_ddc ._cg .GlyphNames );
_gfg ++{_affd :=_efb [_eed [_gfg ]];_ddc ._cg .GlyphNames [_gfg ]=_affd ;};case 3.0:_dd .Log .Debug ("\u004e\u006f\u0020\u0050\u006f\u0073t\u0053\u0063\u0072i\u0070\u0074\u0020n\u0061\u006d\u0065\u0020\u0069\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020is\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0066\u006f\u006e\u0074\u002e");
default:_dd .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020f\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065=\u0025\u0066",_cdb );};return nil ;};type CharMetrics struct{Wx float64 ;Wy float64 ;};var _ad _gd .Once ;
var _efb =[]GlyphName {"\u002en\u006f\u0074\u0064\u0065\u0066","\u002e\u006e\u0075l\u006c","\u006e\u006fn\u006d\u0061\u0072k\u0069\u006e\u0067\u0072\u0065\u0074\u0075\u0072\u006e","\u0073\u0070\u0061c\u0065","\u0065\u0078\u0063\u006c\u0061\u006d","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c","\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u0069\u0067\u006e","\u0064\u006f\u006c\u006c\u0061\u0072","\u0070e\u0072\u0063\u0065\u006e\u0074","\u0061m\u0070\u0065\u0072\u0073\u0061\u006ed","q\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067\u006c\u0065","\u0070a\u0072\u0065\u006e\u006c\u0065\u0066t","\u0070\u0061\u0072\u0065\u006e\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0074\u0065\u0072\u0069\u0073\u006b","\u0070\u006c\u0075\u0073","\u0063\u006f\u006dm\u0061","\u0068\u0079\u0070\u0068\u0065\u006e","\u0070\u0065\u0072\u0069\u006f\u0064","\u0073\u006c\u0061s\u0068","\u007a\u0065\u0072\u006f","\u006f\u006e\u0065","\u0074\u0077\u006f","\u0074\u0068\u0072e\u0065","\u0066\u006f\u0075\u0072","\u0066\u0069\u0076\u0065","\u0073\u0069\u0078","\u0073\u0065\u0076e\u006e","\u0065\u0069\u0067h\u0074","\u006e\u0069\u006e\u0065","\u0063\u006f\u006co\u006e","\u0073e\u006d\u0069\u0063\u006f\u006c\u006fn","\u006c\u0065\u0073\u0073","\u0065\u0071\u0075a\u006c","\u0067r\u0065\u0061\u0074\u0065\u0072","\u0071\u0075\u0065\u0073\u0074\u0069\u006f\u006e","\u0061\u0074","\u0041","\u0042","\u0043","\u0044","\u0045","\u0046","\u0047","\u0048","\u0049","\u004a","\u004b","\u004c","\u004d","\u004e","\u004f","\u0050","\u0051","\u0052","\u0053","\u0054","\u0055","\u0056","\u0057","\u0058","\u0059","\u005a","b\u0072\u0061\u0063\u006b\u0065\u0074\u006c\u0065\u0066\u0074","\u0062a\u0063\u006b\u0073\u006c\u0061\u0073h","\u0062\u0072\u0061c\u006b\u0065\u0074\u0072\u0069\u0067\u0068\u0074","a\u0073\u0063\u0069\u0069\u0063\u0069\u0072\u0063\u0075\u006d","\u0075\u006e\u0064\u0065\u0072\u0073\u0063\u006f\u0072\u0065","\u0067\u0072\u0061v\u0065","\u0061","\u0062","\u0063","\u0064","\u0065","\u0066","\u0067","\u0068","\u0069","\u006a","\u006b","\u006c","\u006d","\u006e","\u006f","\u0070","\u0071","\u0072","\u0073","\u0074","\u0075","\u0076","\u0077","\u0078","\u0079","\u007a","\u0062r\u0061\u0063\u0065\u006c\u0065\u0066t","\u0062\u0061\u0072","\u0062\u0072\u0061\u0063\u0065\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0063\u0069\u0069\u0074\u0069\u006c\u0064\u0065","\u0041d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0041\u0072\u0069n\u0067","\u0043\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0045\u0061\u0063\u0075\u0074\u0065","\u004e\u0074\u0069\u006c\u0064\u0065","\u004fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u0055d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0061\u0063\u0075\u0074\u0065","\u0061\u0067\u0072\u0061\u0076\u0065","a\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0074\u0069\u006c\u0064\u0065","\u0061\u0072\u0069n\u0067","\u0063\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0065\u0061\u0063\u0075\u0074\u0065","\u0065\u0067\u0072\u0061\u0076\u0065","e\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0065d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0069\u0061\u0063\u0075\u0074\u0065","\u0069\u0067\u0072\u0061\u0076\u0065","i\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0069d\u0069\u0065\u0072\u0065\u0073\u0069s","\u006e\u0074\u0069\u006c\u0064\u0065","\u006f\u0061\u0063\u0075\u0074\u0065","\u006f\u0067\u0072\u0061\u0076\u0065","o\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u006fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u006f\u0074\u0069\u006c\u0064\u0065","\u0075\u0061\u0063\u0075\u0074\u0065","\u0075\u0067\u0072\u0061\u0076\u0065","u\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0075d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0064\u0061\u0067\u0067\u0065\u0072","\u0064\u0065\u0067\u0072\u0065\u0065","\u0063\u0065\u006e\u0074","\u0073\u0074\u0065\u0072\u006c\u0069\u006e\u0067","\u0073e\u0063\u0074\u0069\u006f\u006e","\u0062\u0075\u006c\u006c\u0065\u0074","\u0070a\u0072\u0061\u0067\u0072\u0061\u0070h","\u0067\u0065\u0072\u006d\u0061\u006e\u0064\u0062\u006c\u0073","\u0072\u0065\u0067\u0069\u0073\u0074\u0065\u0072\u0065\u0064","\u0063o\u0070\u0079\u0072\u0069\u0067\u0068t","\u0074r\u0061\u0064\u0065\u006d\u0061\u0072k","\u0061\u0063\u0075t\u0065","\u0064\u0069\u0065\u0072\u0065\u0073\u0069\u0073","\u006e\u006f\u0074\u0065\u0071\u0075\u0061\u006c","\u0041\u0045","\u004f\u0073\u006c\u0061\u0073\u0068","\u0069\u006e\u0066\u0069\u006e\u0069\u0074\u0079","\u0070l\u0075\u0073\u006d\u0069\u006e\u0075s","\u006ce\u0073\u0073\u0065\u0071\u0075\u0061l","\u0067\u0072\u0065a\u0074\u0065\u0072\u0065\u0071\u0075\u0061\u006c","\u0079\u0065\u006e","\u006d\u0075","p\u0061\u0072\u0074\u0069\u0061\u006c\u0064\u0069\u0066\u0066","\u0073u\u006d\u006d\u0061\u0074\u0069\u006fn","\u0070r\u006f\u0064\u0075\u0063\u0074","\u0070\u0069","\u0069\u006e\u0074\u0065\u0067\u0072\u0061\u006c","o\u0072\u0064\u0066\u0065\u006d\u0069\u006e\u0069\u006e\u0065","\u006f\u0072\u0064m\u0061\u0073\u0063\u0075\u006c\u0069\u006e\u0065","\u004f\u006d\u0065g\u0061","\u0061\u0065","\u006f\u0073\u006c\u0061\u0073\u0068","\u0071\u0075\u0065s\u0074\u0069\u006f\u006e\u0064\u006f\u0077\u006e","\u0065\u0078\u0063\u006c\u0061\u006d\u0064\u006f\u0077\u006e","\u006c\u006f\u0067\u0069\u0063\u0061\u006c\u006e\u006f\u0074","\u0072a\u0064\u0069\u0063\u0061\u006c","\u0066\u006c\u006f\u0072\u0069\u006e","a\u0070\u0070\u0072\u006f\u0078\u0065\u0071\u0075\u0061\u006c","\u0044\u0065\u006ct\u0061","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074r\u0069\u0067\u0068\u0074","\u0065\u006c\u006c\u0069\u0070\u0073\u0069\u0073","\u006e\u006fn\u0062\u0072\u0065a\u006b\u0069\u006e\u0067\u0073\u0070\u0061\u0063\u0065","\u0041\u0067\u0072\u0061\u0076\u0065","\u0041\u0074\u0069\u006c\u0064\u0065","\u004f\u0074\u0069\u006c\u0064\u0065","\u004f\u0045","\u006f\u0065","\u0065\u006e\u0064\u0061\u0073\u0068","\u0065\u006d\u0064\u0061\u0073\u0068","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u006c\u0065\u0066\u0074","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c\u0072\u0069\u0067\u0068\u0074","\u0071u\u006f\u0074\u0065\u006c\u0065\u0066t","\u0071\u0075\u006f\u0074\u0065\u0072\u0069\u0067\u0068\u0074","\u0064\u0069\u0076\u0069\u0064\u0065","\u006co\u007a\u0065\u006e\u0067\u0065","\u0079d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0059d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0066\u0072\u0061\u0063\u0074\u0069\u006f\u006e","\u0063\u0075\u0072\u0072\u0065\u006e\u0063\u0079","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006c\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006cr\u0069\u0067\u0068\u0074","\u0066\u0069","\u0066\u006c","\u0064a\u0067\u0067\u0065\u0072\u0064\u0062l","\u0070\u0065\u0072\u0069\u006f\u0064\u0063\u0065\u006et\u0065\u0072\u0065\u0064","\u0071\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067l\u0062\u0061\u0073\u0065","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u0062\u0061\u0073\u0065","p\u0065\u0072\u0074\u0068\u006f\u0075\u0073\u0061\u006e\u0064","A\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","E\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0041\u0061\u0063\u0075\u0074\u0065","\u0045d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0045\u0067\u0072\u0061\u0076\u0065","\u0049\u0061\u0063\u0075\u0074\u0065","I\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0049d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0049\u0067\u0072\u0061\u0076\u0065","\u004f\u0061\u0063\u0075\u0074\u0065","O\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061\u0070\u0070l\u0065","\u004f\u0067\u0072\u0061\u0076\u0065","\u0055\u0061\u0063\u0075\u0074\u0065","U\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0055\u0067\u0072\u0061\u0076\u0065","\u0064\u006f\u0074\u006c\u0065\u0073\u0073\u0069","\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0074\u0069\u006cd\u0065","\u006d\u0061\u0063\u0072\u006f\u006e","\u0062\u0072\u0065v\u0065","\u0064o\u0074\u0061\u0063\u0063\u0065\u006et","\u0072\u0069\u006e\u0067","\u0063e\u0064\u0069\u006c\u006c\u0061","\u0068\u0075\u006eg\u0061\u0072\u0075\u006d\u006c\u0061\u0075\u0074","\u006f\u0067\u006f\u006e\u0065\u006b","\u0063\u0061\u0072o\u006e","\u004c\u0073\u006c\u0061\u0073\u0068","\u006c\u0073\u006c\u0061\u0073\u0068","\u0053\u0063\u0061\u0072\u006f\u006e","\u0073\u0063\u0061\u0072\u006f\u006e","\u005a\u0063\u0061\u0072\u006f\u006e","\u007a\u0063\u0061\u0072\u006f\u006e","\u0062r\u006f\u006b\u0065\u006e\u0062\u0061r","\u0045\u0074\u0068","\u0065\u0074\u0068","\u0059\u0061\u0063\u0075\u0074\u0065","\u0079\u0061\u0063\u0075\u0074\u0065","\u0054\u0068\u006fr\u006e","\u0074\u0068\u006fr\u006e","\u006d\u0069\u006eu\u0073","\u006d\u0075\u006c\u0074\u0069\u0070\u006c\u0079","o\u006e\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","t\u0077\u006f\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u0074\u0068\u0072\u0065\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u006fn\u0065\u0068\u0061\u006c\u0066","\u006f\u006e\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072","\u0074\u0068\u0072\u0065\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072\u0073","\u0066\u0072\u0061n\u0063","\u0047\u0062\u0072\u0065\u0076\u0065","\u0067\u0062\u0072\u0065\u0076\u0065","\u0049\u0064\u006f\u0074\u0061\u0063\u0063\u0065\u006e\u0074","\u0053\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0073\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0043\u0061\u0063\u0075\u0074\u0065","\u0063\u0061\u0063\u0075\u0074\u0065","\u0043\u0063\u0061\u0072\u006f\u006e","\u0063\u0063\u0061\u0072\u006f\u006e","\u0064\u0063\u0072\u006f\u0061\u0074"};
func _ada ()StdFont {_fba :=_ec .NewSymbolEncoder ();_egg :=Descriptor {Name :SymbolName ,Family :string (SymbolName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-180,-293,1090,1010},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :85,StemH :92};
return NewStdFontWithEncoding (_egg ,_agd ,_fba );};func TtfParseFile (fileStr string )(TtfType ,error ){_ddff ,_adabd :=_d .Open (fileStr );if _adabd !=nil {return TtfType {},_adabd ;};defer _ddff .Close ();return TtfParse (_ddff );};type StdFont struct{_edg Descriptor ;
_bgcc *RuneCharSafeMap ;_ac _ec .TextEncoder ;};var _dcc =[]int16 {667,1000,667,667,667,667,667,667,667,667,667,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,500,667,667,556,556,556,556,556,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,667,556,556,469,584,389,1015,556,556,278,260,334,334,278,278,333,260,350,500,500,333,500,500,333,556,333,278,278,250,737,556,556,556,556,643,556,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,556,278,333,278,500,556,500,556,556,167,556,556,556,611,333,584,549,556,556,333,333,556,333,333,222,278,278,278,278,278,222,222,500,500,222,222,299,222,584,549,584,471,222,833,333,584,556,584,556,556,556,556,556,549,556,556,556,556,556,556,944,333,556,556,556,556,834,834,333,370,365,611,556,556,537,333,333,476,889,278,278,1000,584,584,556,556,611,355,333,333,333,222,222,222,191,333,333,453,333,333,737,333,500,500,500,500,500,556,278,556,556,278,278,556,600,278,317,278,556,556,834,333,333,1000,556,333,556,556,556,556,556,556,556,556,556,556,500,722,500,500,500,500,556,500,500,500,500,556};
var _ Font =StdFont {};type StdFontName string ;func (_geac *fontMap )write (_ebf StdFontName ,_aeag func ()StdFont ){_geac .Lock ();defer _geac .Unlock ();_geac ._aea [_ebf ]=_aeag ;};type TtfType struct{UnitsPerEm uint16 ;PostScriptName string ;Bold bool ;
ItalicAngle float64 ;IsFixedPitch bool ;TypoAscender int16 ;TypoDescender int16 ;UnderlinePosition int16 ;UnderlineThickness int16 ;Xmin ,Ymin ,Xmax ,Ymax int16 ;CapHeight int16 ;Widths []uint16 ;Chars map[rune ]GID ;GlyphNames []GlyphName ;};var _cfg *RuneCharSafeMap ;
func (_bef *ttfParser )parseCmapVersion (_daa int64 )error {_dd .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006da\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a \u006f\u0066\u0066s\u0065t\u003d\u0025\u0064",_daa );if _bef ._cg .Chars ==nil {_bef ._cg .Chars =make (map[rune ]GID );
};_bef ._dffa .Seek (int64 (_bef ._aee ["\u0063\u006d\u0061\u0070"])+_daa ,_bf .SeekStart );var _ceg ,_bbg uint32 ;_cacd :=_bef .ReadUShort ();if _cacd < 8{_ceg =uint32 (_bef .ReadUShort ());_bbg =uint32 (_bef .ReadUShort ());}else {_bef .ReadUShort ();
_ceg =_bef .ReadULong ();_bbg =_bef .ReadULong ();};_dd .Log .Debug ("\u0070\u0061\u0072\u0073\u0065\u0043m\u0061\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064 \u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067u\u0061g\u0065\u003d\u0025\u0064",_cacd ,_ceg ,_bbg );
switch _cacd {case 0:return _bef .parseCmapFormat0 ();case 6:return _bef .parseCmapFormat6 ();case 12:return _bef .parseCmapFormat12 ();default:_dd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063m\u0061\u0070\u0020\u0066\u006f\u0072\u006da\u0074\u003d\u0025\u0064",_cacd );
return nil ;};};func (_gce *ttfParser )Seek (tag string )error {_cceb ,_dab :=_gce ._aee [tag ];if !_dab {return _b .Errorf ("\u0074\u0061\u0062\u006ce \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0073",tag );};_gce ._dffa .Seek (int64 (_cceb ),_bf .SeekStart );
return nil ;};type GlyphName =_ec .GlyphName ;