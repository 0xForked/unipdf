//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package fonts ;import (_f "bytes";_ee "encoding/binary";_cg "errors";_a "fmt";_cef "github.com/unidoc/unipdf/v3/common";_fde "github.com/unidoc/unipdf/v3/core";_af "github.com/unidoc/unipdf/v3/internal/cmap";_d "github.com/unidoc/unipdf/v3/internal/textencoding";
_fd "golang.org/x/xerrors";_gb "io";_b "os";_ce "regexp";_c "sort";_g "strings";_gf "sync";);func MakeRuneCharSafeMap (length int )*RuneCharSafeMap {return &RuneCharSafeMap {_ge :make (map[rune ]CharMetrics ,length )};};func (_gdd *TtfType )NewEncoder ()_d .TextEncoder {return _d .NewTrueTypeFontEncoder (_gdd .Chars )};
type Font interface{Encoder ()_d .TextEncoder ;GetRuneMetrics (_bf rune )(CharMetrics ,bool );};func (_fdefd *ttfParser )ReadSByte ()(_ccg int8 ){_ee .Read (_fdefd ._egc ,_ee .BigEndian ,&_ccg );return _ccg ;};func (_bbgf *ttfParser )ParseOS2 ()error {if _ebf :=_bbgf .Seek ("\u004f\u0053\u002f\u0032");
_ebf !=nil {return _ebf ;};_eece :=_bbgf .ReadUShort ();_bbgf .Skip (4*2);_bbgf .Skip (11*2+10+4*4+4);_caf :=_bbgf .ReadUShort ();_bbgf ._bfdc .Bold =(_caf &32)!=0;_bbgf .Skip (2*2);_bbgf ._bfdc .TypoAscender =_bbgf .ReadShort ();_bbgf ._bfdc .TypoDescender =_bbgf .ReadShort ();
if _eece >=2{_bbgf .Skip (3*2+2*4+2);_bbgf ._bfdc .CapHeight =_bbgf .ReadShort ();}else {_bbgf ._bfdc .CapHeight =0;};return nil ;};func _fe (){_beg =MakeRuneCharSafeMap (len (_fg ));_afd =MakeRuneCharSafeMap (len (_fg ));for _egg ,_fgd :=range _fg {_beg .Write (_fgd ,CharMetrics {Wx :float64 (_ccd [_egg ])});
_afd .Write (_fgd ,CharMetrics {Wx :float64 (_cda [_egg ])});};_cb =_beg .Copy ();_abe =_afd .Copy ();};func (_ca StdFont )Descriptor ()Descriptor {return _ca ._abb };type StdFont struct{_abb Descriptor ;_cfd *RuneCharSafeMap ;_da _d .TextEncoder ;};var _eegb *RuneCharSafeMap ;
func _gc ()StdFont {_fbf .Do (_fe );_ccc :=Descriptor {Name :HelveticaName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0020,BBox :[4]float64 {-166,-225,1000,931},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_ccc ,_beg );};func (_eac *ttfParser )ReadULong ()(_bcac uint32 ){_ee .Read (_eac ._egc ,_ee .BigEndian ,&_bcac );return _bcac ;};const (FontWeightMedium FontWeight =iota ;FontWeightBold ;FontWeightRoman ;);type StdFontName string ;func _bfd ()StdFont {_ffb .Do (_bgg );
_ba :=Descriptor {Name :CourierObliqueName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0061,BBox :[4]float64 {-27,-250,849,805},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};return NewStdFont (_ba ,_fgc );
};func (_ffg *ttfParser )ParseComponents ()error {if _fbcg :=_ffg .ParseHead ();_fbcg !=nil {return _fbcg ;};if _bef :=_ffg .ParseHhea ();_bef !=nil {return _bef ;};if _gfc :=_ffg .ParseMaxp ();_gfc !=nil {return _gfc ;};if _gbeg :=_ffg .ParseHmtx ();_gbeg !=nil {return _gbeg ;
};if _ ,_ddea :=_ffg ._dba ["\u006e\u0061\u006d\u0065"];_ddea {if _bde :=_ffg .ParseName ();_bde !=nil {return _bde ;};};if _ ,_befe :=_ffg ._dba ["\u004f\u0053\u002f\u0032"];_befe {if _dbga :=_ffg .ParseOS2 ();_dbga !=nil {return _dbga ;};};if _ ,_eed :=_ffg ._dba ["\u0070\u006f\u0073\u0074"];
_eed {if _gddd :=_ffg .ParsePost ();_gddd !=nil {return _gddd ;};};if _ ,_gad :=_ffg ._dba ["\u0063\u006d\u0061\u0070"];_gad {if _ddfc :=_ffg .ParseCmap ();_ddfc !=nil {return _ddfc ;};};return nil ;};func _edg ()StdFont {_bfc :=_d .NewSymbolEncoder ();
_bec :=Descriptor {Name :SymbolName ,Family :string (SymbolName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-180,-293,1090,1010},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :85,StemH :92};return NewStdFontWithEncoding (_bec ,_ecd ,_bfc );
};var _ Font =StdFont {};func (_cbee *ttfParser )parseCmapFormat12 ()error {_abc :=_cbee .ReadULong ();_cef .Log .Trace ("\u0070\u0061\u0072se\u0043\u006d\u0061\u0070\u0046\u006f\u0072\u006d\u0061t\u00312\u003a \u0025s\u0020\u006e\u0075\u006d\u0047\u0072\u006f\u0075\u0070\u0073\u003d\u0025\u0064",_cbee ._bfdc .String (),_abc );
for _acfa :=uint32 (0);_acfa < _abc ;_acfa ++{_bbfd :=_cbee .ReadULong ();_afae :=_cbee .ReadULong ();_cgc :=_cbee .ReadULong ();if _bbfd > 0x0010FFFF||(0xD800<=_bbfd &&_bbfd <=0xDFFF){return _cg .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");
};if _afae < _bbfd ||_afae > 0x0010FFFF||(0xD800<=_afae &&_afae <=0xDFFF){return _cg .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");};for _bee :=_bbfd ;_bee <=_afae ;
_bee ++{if _bee > 0x10FFFF{_cef .Log .Debug ("\u0046\u006fr\u006d\u0061\u0074\u0020\u0031\u0032\u0020\u0063\u006d\u0061\u0070\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0063\u0068\u0061\u0072\u0061\u0063\u0074\u0065\u0072\u0020\u0062\u0065\u0079\u006f\u006e\u0064\u0020\u0055\u0043\u0053\u002d\u0034");
};_cbee ._bfdc .Chars [rune (_bee )]=GID (_cgc );_cgc ++;};};return nil ;};const (SymbolName =StdFontName ("\u0053\u0079\u006d\u0062\u006f\u006c");ZapfDingbatsName =StdFontName ("\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073"););func (_gec *RuneCharSafeMap )Read (b rune )(CharMetrics ,bool ){_gec ._ga .RLock ();
defer _gec ._ga .RUnlock ();_de ,_cgb :=_gec ._ge [b ];return _de ,_cgb ;};var _ggd *RuneCharSafeMap ;func (_cdfa *ttfParser )Skip (n int ){_cdfa ._egc .Seek (int64 (n ),_gb .SeekCurrent )};func (_efa StdFont )ToPdfObject ()_fde .PdfObject {_dde :=_fde .MakeDict ();
_dde .Set ("\u0054\u0079\u0070\u0065",_fde .MakeName ("\u0046\u006f\u006e\u0074"));_dde .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fde .MakeName ("\u0054\u0079\u0070e\u0031"));_dde .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_fde .MakeName (_efa .Name ()));
_dde .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_efa ._da .ToPdfObject ());return _fde .MakeIndirectObject (_dde );};var _ecd =&RuneCharSafeMap {_ge :map[rune ]CharMetrics {' ':{Wx :250},'!':{Wx :333},'#':{Wx :500},'%':{Wx :833},'&':{Wx :778},'(':{Wx :333},')':{Wx :333},'+':{Wx :549},',':{Wx :250},'.':{Wx :250},'/':{Wx :278},'0':{Wx :500},'1':{Wx :500},'2':{Wx :500},'3':{Wx :500},'4':{Wx :500},'5':{Wx :500},'6':{Wx :500},'7':{Wx :500},'8':{Wx :500},'9':{Wx :500},':':{Wx :278},';':{Wx :278},'<':{Wx :549},'=':{Wx :549},'>':{Wx :549},'?':{Wx :444},'[':{Wx :333},']':{Wx :333},'_':{Wx :500},'{':{Wx :480},'|':{Wx :200},'}':{Wx :480},'¬':{Wx :713},'°':{Wx :400},'±':{Wx :549},'µ':{Wx :576},'×':{Wx :549},'÷':{Wx :549},'ƒ':{Wx :500},'Α':{Wx :722},'Β':{Wx :667},'Γ':{Wx :603},'Ε':{Wx :611},'Ζ':{Wx :611},'Η':{Wx :722},'Θ':{Wx :741},'Ι':{Wx :333},'Κ':{Wx :722},'Λ':{Wx :686},'Μ':{Wx :889},'Ν':{Wx :722},'Ξ':{Wx :645},'Ο':{Wx :722},'Π':{Wx :768},'Ρ':{Wx :556},'Σ':{Wx :592},'Τ':{Wx :611},'Υ':{Wx :690},'Φ':{Wx :763},'Χ':{Wx :722},'Ψ':{Wx :795},'α':{Wx :631},'β':{Wx :549},'γ':{Wx :411},'δ':{Wx :494},'ε':{Wx :439},'ζ':{Wx :494},'η':{Wx :603},'θ':{Wx :521},'ι':{Wx :329},'κ':{Wx :549},'λ':{Wx :549},'ν':{Wx :521},'ξ':{Wx :493},'ο':{Wx :549},'π':{Wx :549},'ρ':{Wx :549},'ς':{Wx :439},'σ':{Wx :603},'τ':{Wx :439},'υ':{Wx :576},'φ':{Wx :521},'χ':{Wx :549},'ψ':{Wx :686},'ω':{Wx :686},'ϑ':{Wx :631},'ϒ':{Wx :620},'ϕ':{Wx :603},'ϖ':{Wx :713},'•':{Wx :460},'…':{Wx :1000},'′':{Wx :247},'″':{Wx :411},'⁄':{Wx :167},'€':{Wx :750},'ℑ':{Wx :686},'℘':{Wx :987},'ℜ':{Wx :795},'Ω':{Wx :768},'ℵ':{Wx :823},'←':{Wx :987},'↑':{Wx :603},'→':{Wx :987},'↓':{Wx :603},'↔':{Wx :1042},'↵':{Wx :658},'⇐':{Wx :987},'⇑':{Wx :603},'⇒':{Wx :987},'⇓':{Wx :603},'⇔':{Wx :1042},'∀':{Wx :713},'∂':{Wx :494},'∃':{Wx :549},'∅':{Wx :823},'∆':{Wx :612},'∇':{Wx :713},'∈':{Wx :713},'∉':{Wx :713},'∋':{Wx :439},'∏':{Wx :823},'∑':{Wx :713},'−':{Wx :549},'∗':{Wx :500},'√':{Wx :549},'∝':{Wx :713},'∞':{Wx :713},'∠':{Wx :768},'∧':{Wx :603},'∨':{Wx :603},'∩':{Wx :768},'∪':{Wx :768},'∫':{Wx :274},'∴':{Wx :863},'∼':{Wx :549},'≅':{Wx :549},'≈':{Wx :549},'≠':{Wx :549},'≡':{Wx :549},'≤':{Wx :549},'≥':{Wx :549},'⊂':{Wx :713},'⊃':{Wx :713},'⊄':{Wx :713},'⊆':{Wx :713},'⊇':{Wx :713},'⊕':{Wx :768},'⊗':{Wx :768},'⊥':{Wx :658},'⋅':{Wx :250},'⌠':{Wx :686},'⌡':{Wx :686},'〈':{Wx :329},'〉':{Wx :329},'◊':{Wx :494},'♠':{Wx :753},'♣':{Wx :753},'♥':{Wx :753},'♦':{Wx :753},'\uf6d9':{Wx :790},'\uf6da':{Wx :790},'\uf6db':{Wx :890},'\uf8e5':{Wx :500},'\uf8e6':{Wx :603},'\uf8e7':{Wx :1000},'\uf8e8':{Wx :790},'\uf8e9':{Wx :790},'\uf8ea':{Wx :786},'\uf8eb':{Wx :384},'\uf8ec':{Wx :384},'\uf8ed':{Wx :384},'\uf8ee':{Wx :384},'\uf8ef':{Wx :384},'\uf8f0':{Wx :384},'\uf8f1':{Wx :494},'\uf8f2':{Wx :494},'\uf8f3':{Wx :494},'\uf8f4':{Wx :494},'\uf8f5':{Wx :686},'\uf8f6':{Wx :384},'\uf8f7':{Wx :384},'\uf8f8':{Wx :384},'\uf8f9':{Wx :384},'\uf8fa':{Wx :384},'\uf8fb':{Wx :384},'\uf8fc':{Wx :494},'\uf8fd':{Wx :494},'\uf8fe':{Wx :494},'\uf8ff':{Wx :790}}};
func TtfParse (r _gb .ReadSeeker )(TtfType ,error ){_aee :=&ttfParser {_egc :r };return _aee .Parse ()};func (_cc *RuneCharSafeMap )Write (b rune ,r CharMetrics ){_cc ._ga .Lock ();defer _cc ._ga .Unlock ();_cc ._ge [b ]=r ;};var _ffb _gf .Once ;func _age ()StdFont {_afda .Do (_cdb );
_fed :=Descriptor {Name :TimesItalicName ,Family :_dg ,Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-169,-217,1010,883},ItalicAngle :-15.5,Ascent :683,Descent :-217,CapHeight :653,XHeight :441,StemV :76,StemH :32};return NewStdFont (_fed ,_ggd );
};type Descriptor struct{Name StdFontName ;Family string ;Weight FontWeight ;Flags uint ;BBox [4]float64 ;ItalicAngle float64 ;Ascent float64 ;Descent float64 ;CapHeight float64 ;XHeight float64 ;StemV float64 ;StemH float64 ;};func NewStdFontByName (name StdFontName )(StdFont ,bool ){_agf ,_be :=_ef .read (name );
if !_be {return StdFont {},false ;};return _agf (),true ;};func _cee ()StdFont {_fbf .Do (_fe );_gef :=Descriptor {Name :HelveticaBoldName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-170,-228,1003,962},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_gef ,_afd );};var _beg *RuneCharSafeMap ;func init (){RegisterStdFont (CourierName ,_gag ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u0043\u006f\u0075\u0072\u0069e\u0072\u004e\u0065\u0077","\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077");
RegisterStdFont (CourierBoldName ,_ccf ,"\u0043o\u0075r\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (CourierObliqueName ,_bfd ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (CourierBoldObliqueName ,_dda ,"C\u006f\u0075\u0072\u0069er\u004ee\u0077\u002c\u0042\u006f\u006cd\u0049\u0074\u0061\u006c\u0069\u0063");};var _cda =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,556,722,722,611,611,611,611,611,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,722,556,556,584,584,389,975,556,611,278,280,389,389,333,333,333,280,350,556,556,333,556,556,333,556,333,333,278,250,737,556,611,556,556,743,611,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,611,333,333,333,611,556,611,556,556,167,611,611,611,611,333,584,549,556,556,333,333,611,333,333,278,278,278,278,278,278,278,278,556,556,278,278,400,278,584,549,584,494,278,889,333,584,611,584,611,611,611,611,556,549,611,556,611,611,611,611,944,333,611,611,611,556,834,834,333,370,365,611,611,611,556,333,333,494,889,278,278,1000,584,584,611,611,611,474,500,500,500,278,278,278,238,389,389,549,389,389,737,333,556,556,556,556,556,556,333,556,556,278,278,556,600,333,389,333,611,556,834,333,333,1000,556,333,611,611,611,611,611,611,611,556,611,611,556,778,556,556,556,556,556,500,500,500,500,556};
func (_fef *ttfParser )Parse ()(TtfType ,error ){_bac ,_dbf :=_fef .ReadStr (4);if _dbf !=nil {return TtfType {},_dbf ;};if _bac =="\u004f\u0054\u0054\u004f"{return TtfType {},_fd .Errorf ("\u0066\u006f\u006e\u0074s\u0020\u0062\u0061\u0073\u0065\u0064\u0020\u006f\u006e \u0050\u006f\u0073\u0074\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065s\u0020\u0061\u0072\u0065\u0020n\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_fde .ErrNotSupported );
};if _bac !="\u0000\u0001\u0000\u0000"&&_bac !="\u0074\u0072\u0075\u0065"{_cef .Log .Debug ("\u0055n\u0072\u0065c\u006f\u0067\u006ei\u007a\u0065\u0064\u0020\u0054\u0072\u0075e\u0054\u0079\u0070\u0065\u0020\u0066i\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u002e\u0020v\u0065\u0072\u0073\u0069\u006f\u006e\u003d\u0025\u0071",_bac );
};_bda :=int (_fef .ReadUShort ());_fef .Skip (3*2);_fef ._dba =make (map[string ]uint32 );var _fa string ;for _dgg :=0;_dgg < _bda ;_dgg ++{_fa ,_dbf =_fef .ReadStr (4);if _dbf !=nil {return TtfType {},_dbf ;};_fef .Skip (4);_bbea :=_fef .ReadULong ();
_fef .Skip (4);_fef ._dba [_fa ]=_bbea ;};_cef .Log .Trace (_baa (_fef ._dba ));if _dbf =_fef .ParseComponents ();_dbf !=nil {return TtfType {},_dbf ;};return _fef ._bfdc ,nil ;};var _fgc *RuneCharSafeMap ;func (_gcc *ttfParser )parseCmapVersion (_deg int64 )error {_cef .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006da\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a \u006f\u0066\u0066s\u0065t\u003d\u0025\u0064",_deg );
if _gcc ._bfdc .Chars ==nil {_gcc ._bfdc .Chars =make (map[rune ]GID );};_gcc ._egc .Seek (int64 (_gcc ._dba ["\u0063\u006d\u0061\u0070"])+_deg ,_gb .SeekStart );var _gda ,_adf uint32 ;_accf :=_gcc .ReadUShort ();if _accf < 8{_gda =uint32 (_gcc .ReadUShort ());
_adf =uint32 (_gcc .ReadUShort ());}else {_gcc .ReadUShort ();_gda =_gcc .ReadULong ();_adf =_gcc .ReadULong ();};_cef .Log .Debug ("\u0070\u0061\u0072\u0073\u0065\u0043m\u0061\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064 \u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067u\u0061g\u0065\u003d\u0025\u0064",_accf ,_gda ,_adf );
switch _accf {case 0:return _gcc .parseCmapFormat0 ();case 6:return _gcc .parseCmapFormat6 ();case 12:return _gcc .parseCmapFormat12 ();default:_cef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063m\u0061\u0070\u0020\u0066\u006f\u0072\u006da\u0074\u003d\u0025\u0064",_accf );
return nil ;};};const (CourierName =StdFontName ("\u0043o\u0075\u0072\u0069\u0065\u0072");CourierBoldName =StdFontName ("\u0043\u006f\u0075r\u0069\u0065\u0072\u002d\u0042\u006f\u006c\u0064");CourierObliqueName =StdFontName ("\u0043o\u0075r\u0069\u0065\u0072\u002d\u004f\u0062\u006c\u0069\u0071\u0075\u0065");
CourierBoldObliqueName =StdFontName ("\u0043\u006f\u0075\u0072ie\u0072\u002d\u0042\u006f\u006c\u0064\u004f\u0062\u006c\u0069\u0071\u0075\u0065"););var _abe *RuneCharSafeMap ;func _cff ()StdFont {_afda .Do (_cdb );_bbg :=Descriptor {Name :TimesBoldName ,Family :_dg ,Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,935},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :676,XHeight :461,StemV :139,StemH :44};
return NewStdFont (_bbg ,_cgbb );};func (_dd StdFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_bg ,_dfc :=_dd ._cfd .Read (r );return _bg ,_dfc ;};var _ccd =[]int16 {667,1000,667,667,667,667,667,667,667,667,667,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,500,667,667,556,556,556,556,556,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,667,556,556,469,584,389,1015,556,556,278,260,334,334,278,278,333,260,350,500,500,333,500,500,333,556,333,278,278,250,737,556,556,556,556,643,556,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,556,278,333,278,500,556,500,556,556,167,556,556,556,611,333,584,549,556,556,333,333,556,333,333,222,278,278,278,278,278,222,222,500,500,222,222,299,222,584,549,584,471,222,833,333,584,556,584,556,556,556,556,556,549,556,556,556,556,556,556,944,333,556,556,556,556,834,834,333,370,365,611,556,556,537,333,333,476,889,278,278,1000,584,584,556,556,611,355,333,333,333,222,222,222,191,333,333,453,333,333,737,333,500,500,500,500,500,556,278,556,556,278,278,556,600,278,317,278,556,556,834,333,333,1000,556,333,556,556,556,556,556,556,556,556,556,556,500,722,500,500,500,500,556,500,500,500,500,556};
func NewStdFontWithEncoding (desc Descriptor ,metrics *RuneCharSafeMap ,encoder _d .TextEncoder )StdFont {var _eec rune =0xA0;if _ ,_ed :=metrics .Read (_eec );!_ed {_eb ,_ :=metrics .Read (0x20);metrics .Write (_eec ,_eb );};return StdFont {_abb :desc ,_cfd :metrics ,_da :encoder };
};func (_bdc *ttfParser )Read32Fixed ()float64 {_abcc :=float64 (_bdc .ReadShort ());_bgcf :=float64 (_bdc .ReadUShort ())/65536.0;return _abcc +_bgcf ;};func init (){RegisterStdFont (HelveticaName ,_gc ,"\u0041\u0072\u0069a\u006c");RegisterStdFont (HelveticaBoldName ,_cee ,"\u0041\u0072\u0069\u0061\u006c\u002c\u0042\u006f\u006c\u0064");
RegisterStdFont (HelveticaObliqueName ,_eff ,"\u0041\u0072\u0069a\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063");RegisterStdFont (HelveticaBoldObliqueName ,_fbc ,"\u0041\u0072i\u0061\u006c\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
};var _fbf _gf .Once ;func _bgg (){const _gde =600;_fbd =MakeRuneCharSafeMap (len (_fg ));for _ ,_cca :=range _fg {_fbd .Write (_cca ,CharMetrics {Wx :_gde });};_eegb =_fbd .Copy ();_bae =_fbd .Copy ();_fgc =_fbd .Copy ();};func (_gce *ttfParser )ParseMaxp ()error {if _cdf :=_gce .Seek ("\u006d\u0061\u0078\u0070");
_cdf !=nil {return _cdf ;};_gce .Skip (4);_gce ._bca =_gce .ReadUShort ();return nil ;};func _cdb (){_ega =MakeRuneCharSafeMap (len (_fg ));_cgbb =MakeRuneCharSafeMap (len (_fg ));_bga =MakeRuneCharSafeMap (len (_fg ));_ggd =MakeRuneCharSafeMap (len (_fg ));
for _ae ,_cfda :=range _fg {_ega .Write (_cfda ,CharMetrics {Wx :float64 (_dbdf [_ae ])});_cgbb .Write (_cfda ,CharMetrics {Wx :float64 (_ced [_ae ])});_bga .Write (_cfda ,CharMetrics {Wx :float64 (_dfe [_ae ])});_ggd .Write (_cfda ,CharMetrics {Wx :float64 (_bd [_ae ])});
};};func (_gfge *ttfParser )Seek (tag string )error {_efg ,_eeff :=_gfge ._dba [tag ];if !_eeff {return _a .Errorf ("\u0074\u0061\u0062\u006ce \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0073",tag );};_gfge ._egc .Seek (int64 (_efg ),_gb .SeekStart );
return nil ;};var _cgbb *RuneCharSafeMap ;var _ced =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,611,778,778,778,778,389,389,389,389,389,389,389,389,500,778,778,667,667,667,667,667,944,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,611,778,722,722,722,722,556,556,556,556,556,667,667,667,611,722,722,722,722,722,722,722,722,722,722,1000,722,722,722,722,667,667,667,667,500,500,500,500,333,500,722,500,500,833,500,500,581,520,500,930,500,556,278,220,394,394,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,556,500,500,672,556,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,333,333,333,556,500,556,500,500,167,500,500,500,556,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,333,556,556,278,278,394,278,570,549,570,494,278,833,333,570,556,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,300,330,500,500,556,540,333,333,494,1000,250,250,1000,570,570,556,500,500,555,500,500,500,333,333,333,278,444,444,549,444,444,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,333,416,333,556,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,500,722,500,500,500,500,500,444,444,444,444,500};
func (_bgb *ttfParser )readByte ()(_abgd uint8 ){_ee .Read (_bgb ._egc ,_ee .BigEndian ,&_abgd );return _abgd ;};func IsStdFont (name StdFontName )bool {_ ,_bbe :=_ef .read (name );return _bbe };var _cb *RuneCharSafeMap ;func NewStdFont (desc Descriptor ,metrics *RuneCharSafeMap )StdFont {return NewStdFontWithEncoding (desc ,metrics ,_d .NewStandardEncoder ());
};func _dbg ()StdFont {_afda .Do (_cdb );_afb :=Descriptor {Name :TimesRomanName ,Family :_dg ,Weight :FontWeightRoman ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,898},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :662,XHeight :450,StemV :84,StemH :28};
return NewStdFont (_afb ,_ega );};func (_acf StdFont )Encoder ()_d .TextEncoder {return _acf ._da };func init (){RegisterStdFont (SymbolName ,_edg ,"\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063","S\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064","\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (ZapfDingbatsName ,_ggc );};var _efbe =[]GlyphName {"\u002en\u006f\u0074\u0064\u0065\u0066","\u002e\u006e\u0075l\u006c","\u006e\u006fn\u006d\u0061\u0072k\u0069\u006e\u0067\u0072\u0065\u0074\u0075\u0072\u006e","\u0073\u0070\u0061c\u0065","\u0065\u0078\u0063\u006c\u0061\u006d","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c","\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u0069\u0067\u006e","\u0064\u006f\u006c\u006c\u0061\u0072","\u0070e\u0072\u0063\u0065\u006e\u0074","\u0061m\u0070\u0065\u0072\u0073\u0061\u006ed","q\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067\u006c\u0065","\u0070a\u0072\u0065\u006e\u006c\u0065\u0066t","\u0070\u0061\u0072\u0065\u006e\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0074\u0065\u0072\u0069\u0073\u006b","\u0070\u006c\u0075\u0073","\u0063\u006f\u006dm\u0061","\u0068\u0079\u0070\u0068\u0065\u006e","\u0070\u0065\u0072\u0069\u006f\u0064","\u0073\u006c\u0061s\u0068","\u007a\u0065\u0072\u006f","\u006f\u006e\u0065","\u0074\u0077\u006f","\u0074\u0068\u0072e\u0065","\u0066\u006f\u0075\u0072","\u0066\u0069\u0076\u0065","\u0073\u0069\u0078","\u0073\u0065\u0076e\u006e","\u0065\u0069\u0067h\u0074","\u006e\u0069\u006e\u0065","\u0063\u006f\u006co\u006e","\u0073e\u006d\u0069\u0063\u006f\u006c\u006fn","\u006c\u0065\u0073\u0073","\u0065\u0071\u0075a\u006c","\u0067r\u0065\u0061\u0074\u0065\u0072","\u0071\u0075\u0065\u0073\u0074\u0069\u006f\u006e","\u0061\u0074","\u0041","\u0042","\u0043","\u0044","\u0045","\u0046","\u0047","\u0048","\u0049","\u004a","\u004b","\u004c","\u004d","\u004e","\u004f","\u0050","\u0051","\u0052","\u0053","\u0054","\u0055","\u0056","\u0057","\u0058","\u0059","\u005a","b\u0072\u0061\u0063\u006b\u0065\u0074\u006c\u0065\u0066\u0074","\u0062a\u0063\u006b\u0073\u006c\u0061\u0073h","\u0062\u0072\u0061c\u006b\u0065\u0074\u0072\u0069\u0067\u0068\u0074","a\u0073\u0063\u0069\u0069\u0063\u0069\u0072\u0063\u0075\u006d","\u0075\u006e\u0064\u0065\u0072\u0073\u0063\u006f\u0072\u0065","\u0067\u0072\u0061v\u0065","\u0061","\u0062","\u0063","\u0064","\u0065","\u0066","\u0067","\u0068","\u0069","\u006a","\u006b","\u006c","\u006d","\u006e","\u006f","\u0070","\u0071","\u0072","\u0073","\u0074","\u0075","\u0076","\u0077","\u0078","\u0079","\u007a","\u0062r\u0061\u0063\u0065\u006c\u0065\u0066t","\u0062\u0061\u0072","\u0062\u0072\u0061\u0063\u0065\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0063\u0069\u0069\u0074\u0069\u006c\u0064\u0065","\u0041d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0041\u0072\u0069n\u0067","\u0043\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0045\u0061\u0063\u0075\u0074\u0065","\u004e\u0074\u0069\u006c\u0064\u0065","\u004fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u0055d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0061\u0063\u0075\u0074\u0065","\u0061\u0067\u0072\u0061\u0076\u0065","a\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0074\u0069\u006c\u0064\u0065","\u0061\u0072\u0069n\u0067","\u0063\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0065\u0061\u0063\u0075\u0074\u0065","\u0065\u0067\u0072\u0061\u0076\u0065","e\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0065d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0069\u0061\u0063\u0075\u0074\u0065","\u0069\u0067\u0072\u0061\u0076\u0065","i\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0069d\u0069\u0065\u0072\u0065\u0073\u0069s","\u006e\u0074\u0069\u006c\u0064\u0065","\u006f\u0061\u0063\u0075\u0074\u0065","\u006f\u0067\u0072\u0061\u0076\u0065","o\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u006fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u006f\u0074\u0069\u006c\u0064\u0065","\u0075\u0061\u0063\u0075\u0074\u0065","\u0075\u0067\u0072\u0061\u0076\u0065","u\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0075d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0064\u0061\u0067\u0067\u0065\u0072","\u0064\u0065\u0067\u0072\u0065\u0065","\u0063\u0065\u006e\u0074","\u0073\u0074\u0065\u0072\u006c\u0069\u006e\u0067","\u0073e\u0063\u0074\u0069\u006f\u006e","\u0062\u0075\u006c\u006c\u0065\u0074","\u0070a\u0072\u0061\u0067\u0072\u0061\u0070h","\u0067\u0065\u0072\u006d\u0061\u006e\u0064\u0062\u006c\u0073","\u0072\u0065\u0067\u0069\u0073\u0074\u0065\u0072\u0065\u0064","\u0063o\u0070\u0079\u0072\u0069\u0067\u0068t","\u0074r\u0061\u0064\u0065\u006d\u0061\u0072k","\u0061\u0063\u0075t\u0065","\u0064\u0069\u0065\u0072\u0065\u0073\u0069\u0073","\u006e\u006f\u0074\u0065\u0071\u0075\u0061\u006c","\u0041\u0045","\u004f\u0073\u006c\u0061\u0073\u0068","\u0069\u006e\u0066\u0069\u006e\u0069\u0074\u0079","\u0070l\u0075\u0073\u006d\u0069\u006e\u0075s","\u006ce\u0073\u0073\u0065\u0071\u0075\u0061l","\u0067\u0072\u0065a\u0074\u0065\u0072\u0065\u0071\u0075\u0061\u006c","\u0079\u0065\u006e","\u006d\u0075","p\u0061\u0072\u0074\u0069\u0061\u006c\u0064\u0069\u0066\u0066","\u0073u\u006d\u006d\u0061\u0074\u0069\u006fn","\u0070r\u006f\u0064\u0075\u0063\u0074","\u0070\u0069","\u0069\u006e\u0074\u0065\u0067\u0072\u0061\u006c","o\u0072\u0064\u0066\u0065\u006d\u0069\u006e\u0069\u006e\u0065","\u006f\u0072\u0064m\u0061\u0073\u0063\u0075\u006c\u0069\u006e\u0065","\u004f\u006d\u0065g\u0061","\u0061\u0065","\u006f\u0073\u006c\u0061\u0073\u0068","\u0071\u0075\u0065s\u0074\u0069\u006f\u006e\u0064\u006f\u0077\u006e","\u0065\u0078\u0063\u006c\u0061\u006d\u0064\u006f\u0077\u006e","\u006c\u006f\u0067\u0069\u0063\u0061\u006c\u006e\u006f\u0074","\u0072a\u0064\u0069\u0063\u0061\u006c","\u0066\u006c\u006f\u0072\u0069\u006e","a\u0070\u0070\u0072\u006f\u0078\u0065\u0071\u0075\u0061\u006c","\u0044\u0065\u006ct\u0061","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074r\u0069\u0067\u0068\u0074","\u0065\u006c\u006c\u0069\u0070\u0073\u0069\u0073","\u006e\u006fn\u0062\u0072\u0065a\u006b\u0069\u006e\u0067\u0073\u0070\u0061\u0063\u0065","\u0041\u0067\u0072\u0061\u0076\u0065","\u0041\u0074\u0069\u006c\u0064\u0065","\u004f\u0074\u0069\u006c\u0064\u0065","\u004f\u0045","\u006f\u0065","\u0065\u006e\u0064\u0061\u0073\u0068","\u0065\u006d\u0064\u0061\u0073\u0068","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u006c\u0065\u0066\u0074","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c\u0072\u0069\u0067\u0068\u0074","\u0071u\u006f\u0074\u0065\u006c\u0065\u0066t","\u0071\u0075\u006f\u0074\u0065\u0072\u0069\u0067\u0068\u0074","\u0064\u0069\u0076\u0069\u0064\u0065","\u006co\u007a\u0065\u006e\u0067\u0065","\u0079d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0059d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0066\u0072\u0061\u0063\u0074\u0069\u006f\u006e","\u0063\u0075\u0072\u0072\u0065\u006e\u0063\u0079","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006c\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006cr\u0069\u0067\u0068\u0074","\u0066\u0069","\u0066\u006c","\u0064a\u0067\u0067\u0065\u0072\u0064\u0062l","\u0070\u0065\u0072\u0069\u006f\u0064\u0063\u0065\u006et\u0065\u0072\u0065\u0064","\u0071\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067l\u0062\u0061\u0073\u0065","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u0062\u0061\u0073\u0065","p\u0065\u0072\u0074\u0068\u006f\u0075\u0073\u0061\u006e\u0064","A\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","E\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0041\u0061\u0063\u0075\u0074\u0065","\u0045d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0045\u0067\u0072\u0061\u0076\u0065","\u0049\u0061\u0063\u0075\u0074\u0065","I\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0049d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0049\u0067\u0072\u0061\u0076\u0065","\u004f\u0061\u0063\u0075\u0074\u0065","O\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061\u0070\u0070l\u0065","\u004f\u0067\u0072\u0061\u0076\u0065","\u0055\u0061\u0063\u0075\u0074\u0065","U\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0055\u0067\u0072\u0061\u0076\u0065","\u0064\u006f\u0074\u006c\u0065\u0073\u0073\u0069","\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0074\u0069\u006cd\u0065","\u006d\u0061\u0063\u0072\u006f\u006e","\u0062\u0072\u0065v\u0065","\u0064o\u0074\u0061\u0063\u0063\u0065\u006et","\u0072\u0069\u006e\u0067","\u0063e\u0064\u0069\u006c\u006c\u0061","\u0068\u0075\u006eg\u0061\u0072\u0075\u006d\u006c\u0061\u0075\u0074","\u006f\u0067\u006f\u006e\u0065\u006b","\u0063\u0061\u0072o\u006e","\u004c\u0073\u006c\u0061\u0073\u0068","\u006c\u0073\u006c\u0061\u0073\u0068","\u0053\u0063\u0061\u0072\u006f\u006e","\u0073\u0063\u0061\u0072\u006f\u006e","\u005a\u0063\u0061\u0072\u006f\u006e","\u007a\u0063\u0061\u0072\u006f\u006e","\u0062r\u006f\u006b\u0065\u006e\u0062\u0061r","\u0045\u0074\u0068","\u0065\u0074\u0068","\u0059\u0061\u0063\u0075\u0074\u0065","\u0079\u0061\u0063\u0075\u0074\u0065","\u0054\u0068\u006fr\u006e","\u0074\u0068\u006fr\u006e","\u006d\u0069\u006eu\u0073","\u006d\u0075\u006c\u0074\u0069\u0070\u006c\u0079","o\u006e\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","t\u0077\u006f\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u0074\u0068\u0072\u0065\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u006fn\u0065\u0068\u0061\u006c\u0066","\u006f\u006e\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072","\u0074\u0068\u0072\u0065\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072\u0073","\u0066\u0072\u0061n\u0063","\u0047\u0062\u0072\u0065\u0076\u0065","\u0067\u0062\u0072\u0065\u0076\u0065","\u0049\u0064\u006f\u0074\u0061\u0063\u0063\u0065\u006e\u0074","\u0053\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0073\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0043\u0061\u0063\u0075\u0074\u0065","\u0063\u0061\u0063\u0075\u0074\u0065","\u0043\u0063\u0061\u0072\u006f\u006e","\u0063\u0063\u0061\u0072\u006f\u006e","\u0064\u0063\u0072\u006f\u0061\u0074"};
var _dfe =[]int16 {667,944,667,667,667,667,667,667,667,667,667,667,667,667,667,667,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,667,722,722,722,778,389,389,389,389,389,389,389,389,500,667,667,611,611,611,611,611,889,722,722,722,722,722,722,944,722,722,722,722,722,722,722,722,611,722,667,667,667,667,556,556,556,556,556,611,611,611,611,722,722,722,722,722,722,722,722,722,667,889,667,611,611,611,611,611,611,611,500,500,500,500,333,500,722,500,500,778,500,500,570,570,500,832,500,500,278,220,348,348,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,500,500,500,608,500,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,389,389,333,556,500,556,500,500,167,500,500,500,500,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,278,500,500,278,278,382,278,570,549,606,494,278,778,333,606,576,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,266,300,500,500,500,500,333,333,494,833,250,250,1000,570,570,500,500,500,555,500,500,500,333,333,333,278,389,389,549,389,389,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,366,278,500,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,444,667,500,444,444,444,500,389,389,389,389,500};
func (_eecd *ttfParser )ParseHhea ()error {if _gff :=_eecd .Seek ("\u0068\u0068\u0065\u0061");_gff !=nil {return _gff ;};_eecd .Skip (4+15*2);_eecd ._ffa =_eecd .ReadUShort ();return nil ;};var _bae *RuneCharSafeMap ;type TtfType struct{UnitsPerEm uint16 ;
PostScriptName string ;Bold bool ;ItalicAngle float64 ;IsFixedPitch bool ;TypoAscender int16 ;TypoDescender int16 ;UnderlinePosition int16 ;UnderlineThickness int16 ;Xmin ,Ymin ,Xmax ,Ymax int16 ;CapHeight int16 ;Widths []uint16 ;Chars map[rune ]GID ;GlyphNames []GlyphName ;
};func init (){RegisterStdFont (TimesRomanName ,_dbg ,"\u0054\u0069\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e","\u0054\u0069\u006de\u0073");RegisterStdFont (TimesBoldName ,_cff ,"\u0054i\u006de\u0073\u004e\u0065\u0077\u0052o\u006d\u0061n\u002c\u0042\u006f\u006c\u0064","\u0054\u0069\u006d\u0065\u0073\u002c\u0042\u006f\u006c\u0064");
RegisterStdFont (TimesItalicName ,_age ,"T\u0069m\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006da\u006e\u002c\u0049\u0074al\u0069\u0063","\u0054\u0069\u006de\u0073\u002c\u0049\u0074\u0061\u006c\u0069\u0063");RegisterStdFont (TimesBoldItalicName ,_cea ,"\u0054i\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e,\u0042\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063","\u0054\u0069m\u0065\u0073\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
};const (_dg ="\u0054\u0069\u006de\u0073";TimesRomanName =StdFontName ("T\u0069\u006d\u0065\u0073\u002d\u0052\u006f\u006d\u0061\u006e");TimesBoldName =StdFontName ("\u0054\u0069\u006d\u0065\u0073\u002d\u0042\u006f\u006c\u0064");TimesItalicName =StdFontName ("\u0054\u0069\u006de\u0073\u002d\u0049\u0074\u0061\u006c\u0069\u0063");
TimesBoldItalicName =StdFontName ("\u0054\u0069m\u0065\u0073\u002dB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063"););func TtfParseFile (fileStr string )(TtfType ,error ){_gfgd ,_fdef :=_b .Open (fileStr );if _fdef !=nil {return TtfType {},_fdef ;
};defer _gfgd .Close ();return TtfParse (_gfgd );};func (_dgf *ttfParser )ParseCmap ()error {var _cdbg int64 ;if _fegf :=_dgf .Seek ("\u0063\u006d\u0061\u0070");_fegf !=nil {return _fegf ;};_cef .Log .Trace ("\u0050a\u0072\u0073\u0065\u0043\u006d\u0061p");
_dgf .ReadUShort ();_abg :=int (_dgf .ReadUShort ());_eaf :=int64 (0);_bge :=int64 (0);_bbf :=int64 (0);for _eef :=0;_eef < _abg ;_eef ++{_effd :=_dgf .ReadUShort ();_fgb :=_dgf .ReadUShort ();_cdbg =int64 (_dgf .ReadULong ());if _effd ==3&&_fgb ==1{_bge =_cdbg ;
}else if _effd ==3&&_fgb ==10{_bbf =_cdbg ;}else if _effd ==1&&_fgb ==0{_eaf =_cdbg ;};};if _eaf !=0{if _ddfe :=_dgf .parseCmapVersion (_eaf );_ddfe !=nil {return _ddfe ;};};if _bge !=0{if _fbcd :=_dgf .parseCmapSubtable31 (_bge );_fbcd !=nil {return _fbcd ;
};};if _bbf !=0{if _fbgd :=_dgf .parseCmapVersion (_bbf );_fbgd !=nil {return _fbgd ;};};if _bge ==0&&_eaf ==0&&_bbf ==0{_cef .Log .Debug ("\u0074\u0074\u0066P\u0061\u0072\u0073\u0065\u0072\u002e\u0050\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u002e\u0020\u004e\u006f\u0020\u0033\u0031\u002c\u0020\u0031\u0030\u002c\u0020\u00331\u0030\u0020\u0074\u0061\u0062\u006c\u0065\u002e");
};return nil ;};type GlyphName =_d .GlyphName ;func (_cacc *ttfParser )parseCmapSubtable10 (_fdcg int64 )error {if _cacc ._bfdc .Chars ==nil {_cacc ._bfdc .Chars =make (map[rune ]GID );};_cacc ._egc .Seek (int64 (_cacc ._dba ["\u0063\u006d\u0061\u0070"])+_fdcg ,_gb .SeekStart );
var _fbdd ,_daed uint32 ;_cfb :=_cacc .ReadUShort ();if _cfb < 8{_fbdd =uint32 (_cacc .ReadUShort ());_daed =uint32 (_cacc .ReadUShort ());}else {_cacc .ReadUShort ();_fbdd =_cacc .ReadULong ();_daed =_cacc .ReadULong ();};_cef .Log .Trace ("\u0070\u0061r\u0073\u0065\u0043\u006d\u0061p\u0053\u0075\u0062\u0074\u0061b\u006c\u0065\u0031\u0030\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067\u0075\u0061\u0067\u0065\u003d\u0025\u0064",_cfb ,_fbdd ,_daed );
if _cfb !=0{return _cg .New ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063\u006d\u0061p\u0020s\u0075\u0062\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_fbe ,_fcf :=_cacc .ReadStr (256);if _fcf !=nil {return _fcf ;
};_cfac :=[]byte (_fbe );for _eeae ,_egb :=range _cfac {_cacc ._bfdc .Chars [rune (_eeae )]=GID (_egb );if _egb !=0{_a .Printf ("\u0009\u0030\u0078\u002502\u0078\u0020\u279e\u0020\u0030\u0078\u0025\u0030\u0032\u0078\u003d\u0025\u0063\u000a",_eeae ,_egb ,rune (_egb ));
};};return nil ;};func _baa (_fgg map[string ]uint32 )string {var _fad []string ;for _fadg :=range _fgg {_fad =append (_fad ,_fadg );};_c .Slice (_fad ,func (_geb ,_gebc int )bool {return _fgg [_fad [_geb ]]< _fgg [_fad [_gebc ]]});_dee :=[]string {_a .Sprintf ("\u0054\u0072\u0075\u0065Ty\u0070\u0065\u0020\u0074\u0061\u0062\u006c\u0065\u0073\u003a\u0020\u0025\u0064",len (_fgg ))};
for _ ,_fea :=range _fad {_dee =append (_dee ,_a .Sprintf ("\u0009%\u0071\u0020\u0025\u0035\u0064",_fea ,_fgg [_fea ]));};return _g .Join (_dee ,"\u000a");};func (_bfe CharMetrics )String ()string {return _a .Sprintf ("<\u0025\u002e\u0031\u0066\u002c\u0025\u002e\u0031\u0066\u003e",_bfe .Wx ,_bfe .Wy );
};func (_bfcb *ttfParser )ParsePost ()error {if _bbb :=_bfcb .Seek ("\u0070\u006f\u0073\u0074");_bbb !=nil {return _bbb ;};_dce :=_bfcb .Read32Fixed ();_bfcb ._bfdc .ItalicAngle =_bfcb .Read32Fixed ();_bfcb ._bfdc .UnderlinePosition =_bfcb .ReadShort ();
_bfcb ._bfdc .UnderlineThickness =_bfcb .ReadShort ();_bfcb ._bfdc .IsFixedPitch =_bfcb .ReadULong ()!=0;_bfcb .ReadULong ();_bfcb .ReadULong ();_bfcb .ReadULong ();_bfcb .ReadULong ();_cef .Log .Trace ("\u0050a\u0072\u0073\u0065\u0050\u006f\u0073\u0074\u003a\u0020\u0066\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065\u003d\u0025\u0066",_dce );
switch _dce {case 1.0:_bfcb ._bfdc .GlyphNames =_efbe ;case 2.0:_fdd :=int (_bfcb .ReadUShort ());_bbbd :=make ([]int ,_fdd );_bfcb ._bfdc .GlyphNames =make ([]GlyphName ,_fdd );_eaff :=-1;for _dgc :=0;_dgc < _fdd ;_dgc ++{_fgf :=int (_bfcb .ReadUShort ());
_bbbd [_dgc ]=_fgf ;if _fgf <=0x7fff&&_fgf > _eaff {_eaff =_fgf ;};};var _dddb []GlyphName ;if _eaff >=len (_efbe ){_dddb =make ([]GlyphName ,_eaff -len (_efbe )+1);for _fgcc :=0;_fgcc < _eaff -len (_efbe )+1;_fgcc ++{_gac :=int (_bfcb .readByte ());_fbfc ,_bdee :=_bfcb .ReadStr (_gac );
if _bdee !=nil {return _bdee ;};_dddb [_fgcc ]=GlyphName (_fbfc );};};for _edbg :=0;_edbg < _fdd ;_edbg ++{_dfcf :=_bbbd [_edbg ];if _dfcf < len (_efbe ){_bfcb ._bfdc .GlyphNames [_edbg ]=_efbe [_dfcf ];}else if _dfcf >=len (_efbe )&&_dfcf <=32767{_bfcb ._bfdc .GlyphNames [_edbg ]=_dddb [_dfcf -len (_efbe )];
}else {_bfcb ._bfdc .GlyphNames [_edbg ]="\u002e\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064";};};case 2.5:_cdg :=make ([]int ,_bfcb ._bca );for _afc :=0;_afc < len (_cdg );_afc ++{_ccag :=int (_bfcb .ReadSByte ());_cdg [_afc ]=_afc +1+_ccag ;
};_bfcb ._bfdc .GlyphNames =make ([]GlyphName ,len (_cdg ));for _aca :=0;_aca < len (_bfcb ._bfdc .GlyphNames );_aca ++{_ecgf :=_efbe [_cdg [_aca ]];_bfcb ._bfdc .GlyphNames [_aca ]=_ecgf ;};case 3.0:_cef .Log .Debug ("\u004e\u006f\u0020\u0050\u006f\u0073t\u0053\u0063\u0072i\u0070\u0074\u0020n\u0061\u006d\u0065\u0020\u0069\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020is\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0066\u006f\u006e\u0074\u002e");
default:_cef .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020f\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065=\u0025\u0066",_dce );};return nil ;};func (_gd *RuneCharSafeMap )Range (f func (_eeg rune ,_ab CharMetrics )(_db bool )){_gd ._ga .RLock ();
defer _gd ._ga .RUnlock ();for _gfd ,_cec :=range _gd ._ge {if f (_gfd ,_cec ){break ;};};};var _dbdf =[]int16 {722,889,722,722,722,722,722,722,722,722,722,667,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,556,722,722,722,722,333,333,333,333,333,333,333,333,389,722,722,611,611,611,611,611,889,722,722,722,722,722,722,889,722,722,722,722,722,722,722,722,556,722,667,667,667,667,556,556,556,556,556,611,611,611,556,722,722,722,722,722,722,722,722,722,722,944,722,722,722,722,611,611,611,611,444,444,444,444,333,444,667,444,444,778,444,444,469,541,500,921,444,500,278,200,480,480,333,333,333,200,350,444,444,333,444,444,333,500,333,278,250,250,760,500,500,500,500,588,500,400,333,564,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,564,500,333,333,333,556,500,556,500,500,167,500,500,500,500,333,564,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,500,500,278,278,344,278,564,549,564,471,278,778,333,564,500,564,500,500,500,500,500,549,500,500,500,500,500,500,722,333,500,500,500,500,750,750,300,276,310,500,500,500,453,333,333,476,833,250,250,1000,564,564,500,444,444,408,444,444,444,333,333,333,180,333,333,453,333,333,760,333,389,389,389,389,389,500,278,500,500,278,250,500,600,278,326,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,500,722,500,500,500,500,500,444,444,444,444,500};
func (_acb *ttfParser )ReadShort ()(_ddee int16 ){_ee .Read (_acb ._egc ,_ee .BigEndian ,&_ddee );return _ddee ;};func _gag ()StdFont {_ffb .Do (_bgg );_aff :=Descriptor {Name :CourierName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0021,BBox :[4]float64 {-23,-250,715,805},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_aff ,_fbd );};type RuneCharSafeMap struct{_ge map[rune ]CharMetrics ;_ga _gf .RWMutex ;};func (_efbg *ttfParser )ParseHmtx ()error {if _gfcb :=_efbg .Seek ("\u0068\u006d\u0074\u0078");_gfcb !=nil {return _gfcb ;};_efbg ._bfdc .Widths =make ([]uint16 ,0,8);
for _ede :=uint16 (0);_ede < _efbg ._ffa ;_ede ++{_efbg ._bfdc .Widths =append (_efbg ._bfdc .Widths ,_efbg .ReadUShort ());_efbg .Skip (2);};if _efbg ._ffa < _efbg ._bca &&_efbg ._ffa > 0{_geaa :=_efbg ._bfdc .Widths [_efbg ._ffa -1];for _efba :=_efbg ._ffa ;
_efba < _efbg ._bca ;_efba ++{_efbg ._bfdc .Widths =append (_efbg ._bfdc .Widths ,_geaa );};};return nil ;};func (_gbd *ttfParser )parseCmapFormat6 ()error {_faf :=int (_gbd .ReadUShort ());_ceef :=int (_gbd .ReadUShort ());_cef .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u0046o\u0072\u006d\u0061\u0074\u0036\u003a\u0020%s\u0020\u0066\u0069\u0072s\u0074\u0043\u006f\u0064\u0065\u003d\u0025\u0064\u0020en\u0074\u0072y\u0043\u006f\u0075\u006e\u0074\u003d\u0025\u0064",_gbd ._bfdc .String (),_faf ,_ceef );
for _edd :=0;_edd < _ceef ;_edd ++{_aeg :=GID (_gbd .ReadUShort ());_gbd ._bfdc .Chars [rune (_edd +_faf )]=_aeg ;};return nil ;};var _bga *RuneCharSafeMap ;func _fbc ()StdFont {_fbf .Do (_fe );_bgc :=Descriptor {Name :HelveticaBoldObliqueName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-174,-228,1114,962},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_bgc ,_abe );};type ttfParser struct{_bfdc TtfType ;_egc _gb .ReadSeeker ;_dba map[string ]uint32 ;_ffa uint16 ;_bca uint16 ;};var _bd =[]int16 {611,889,611,611,611,611,611,611,611,611,611,611,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,611,722,722,722,722,333,333,333,333,333,333,333,333,444,667,667,556,556,611,556,556,833,667,667,667,667,667,722,944,722,722,722,722,722,722,722,722,611,722,611,611,611,611,500,500,500,500,500,556,556,556,611,722,722,722,722,722,722,722,722,722,611,833,611,556,556,556,556,556,556,556,500,500,500,500,333,500,667,500,500,778,500,500,422,541,500,920,500,500,278,275,400,400,389,389,333,275,350,444,444,333,444,444,333,500,333,333,250,250,760,500,500,500,500,544,500,400,333,675,500,333,278,444,444,444,444,444,444,444,500,889,444,889,500,444,675,500,333,389,278,500,500,500,500,500,167,500,500,500,500,333,675,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,444,444,278,278,300,278,675,549,675,471,278,722,333,675,500,675,500,500,500,500,500,549,500,500,500,500,500,500,667,333,500,500,500,500,750,750,300,276,310,500,500,500,523,333,333,476,833,250,250,1000,675,675,500,500,500,420,556,556,556,333,333,333,214,389,389,453,389,389,760,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,300,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,444,667,444,444,444,444,500,389,389,389,389,500};
func (_feb *TtfType )String ()string {return _a .Sprintf ("\u0046\u004fN\u0054\u005f\u0046\u0049\u004cE\u0032\u007b\u0025\u0023\u0071 \u0055\u006e\u0069\u0074\u0073\u0050\u0065\u0072\u0045\u006d\u003d\u0025\u0064\u0020\u0042\u006f\u006c\u0064\u003d\u0025\u0074\u0020\u0049\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065\u003d\u0025\u0066\u0020"+"\u0043\u0061pH\u0065\u0069\u0067h\u0074\u003d\u0025\u0064 Ch\u0061rs\u003d\u0025\u0064\u0020\u0047\u006c\u0079ph\u004e\u0061\u006d\u0065\u0073\u003d\u0025d\u007d",_feb .PostScriptName ,_feb .UnitsPerEm ,_feb .Bold ,_feb .ItalicAngle ,_feb .CapHeight ,len (_feb .Chars ),len (_feb .GlyphNames ));
};func (_afa *fontMap )write (_fbg StdFontName ,_cd func ()StdFont ){_afa .Lock ();defer _afa .Unlock ();_afa ._gab [_fbg ]=_cd ;};var _fg =[]rune {'A','Æ','Á','Ă','Â','Ä','À','Ā','Ą','Å','Ã','B','C','Ć','Č','Ç','D','Ď','Đ','∆','E','É','Ě','Ê','Ë','Ė','È','Ē','Ę','Ð','€','F','G','Ğ','Ģ','H','I','Í','Î','Ï','İ','Ì','Ī','Į','J','K','Ķ','L','Ĺ','Ľ','Ļ','Ł','M','N','Ń','Ň','Ņ','Ñ','O','Œ','Ó','Ô','Ö','Ò','Ő','Ō','Ø','Õ','P','Q','R','Ŕ','Ř','Ŗ','S','Ś','Š','Ş','Ș','T','Ť','Ţ','Þ','U','Ú','Û','Ü','Ù','Ű','Ū','Ų','Ů','V','W','X','Y','Ý','Ÿ','Z','Ź','Ž','Ż','a','á','ă','â','´','ä','æ','à','ā','&','ą','å','^','~','*','@','ã','b','\\','|','{','}','[',']','˘','¦','•','c','ć','ˇ','č','ç','¸','¢','ˆ',':',',','\uf6c3','©','¤','d','†','‡','ď','đ','°','¨','÷','$','˙','ı','e','é','ě','ê','ë','ė','è','8','…','ē','—','–','ę','=','ð','!','¡','f','ﬁ','5','ﬂ','ƒ','4','⁄','g','ğ','ģ','ß','`','>','≥','«','»','‹','›','h','˝','-','i','í','î','ï','ì','ī','į','j','k','ķ','l','ĺ','ľ','ļ','<','≤','¬','◊','ł','m','¯','−','µ','×','n','ń','ň','ņ','9','≠','ñ','#','o','ó','ô','ö','œ','˛','ò','ő','ō','1','½','¼','¹','ª','º','ø','õ','p','¶','(',')','∂','%','.','·','‰','+','±','q','?','¿','"','„','“','”','‘','’','‚','\'','r','ŕ','√','ř','ŗ','®','˚','s','ś','š','ş','ș','§',';','7','6','/',' ','£','∑','t','ť','ţ','þ','3','¾','³','˜','™','2','²','u','ú','û','ü','ù','ű','ū','_','ų','ů','v','w','x','y','ý','ÿ','¥','z','ź','ž','ż','0'};
var _ega *RuneCharSafeMap ;func (_ecg StdFont )GetMetricsTable ()*RuneCharSafeMap {return _ecg ._cfd };func (_dff *ttfParser )parseCmapSubtable31 (_agcg int64 )error {_dbdc :=make ([]rune ,0,8);_bfbb :=make ([]rune ,0,8);_gaga :=make ([]int16 ,0,8);_fefb :=make ([]uint16 ,0,8);
_dff ._bfdc .Chars =make (map[rune ]GID );_dff ._egc .Seek (int64 (_dff ._dba ["\u0063\u006d\u0061\u0070"])+_agcg ,_gb .SeekStart );_dcd :=_dff .ReadUShort ();if _dcd !=4{return _fd .Errorf ("u\u006e\u0065\u0078\u0070\u0065\u0063t\u0065\u0064\u0020\u0073\u0075\u0062t\u0061\u0062\u006c\u0065\u0020\u0066\u006fr\u006d\u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0028\u0025w\u0029",_dcd ,_fde .ErrNotSupported );
};_dff .Skip (2*2);_gbf :=int (_dff .ReadUShort ()/2);_dff .Skip (3*2);for _gfgb :=0;_gfgb < _gbf ;_gfgb ++{_bfbb =append (_bfbb ,rune (_dff .ReadUShort ()));};_dff .Skip (2);for _fdc :=0;_fdc < _gbf ;_fdc ++{_dbdc =append (_dbdc ,rune (_dff .ReadUShort ()));
};for _edb :=0;_edb < _gbf ;_edb ++{_gaga =append (_gaga ,_dff .ReadShort ());};_affc ,_ :=_dff ._egc .Seek (int64 (0),_gb .SeekCurrent );for _gade :=0;_gade < _gbf ;_gade ++{_fefb =append (_fefb ,_dff .ReadUShort ());};for _fc :=0;_fc < _gbf ;_fc ++{_cag :=_dbdc [_fc ];
_afbb :=_bfbb [_fc ];_ffgb :=_gaga [_fc ];_cbf :=_fefb [_fc ];if _cbf > 0{_dff ._egc .Seek (_affc +2*int64 (_fc )+int64 (_cbf ),_gb .SeekStart );};for _eea :=_cag ;_eea <=_afbb ;_eea ++{if _eea ==0xFFFF{break ;};var _cfa int32 ;if _cbf > 0{_cfa =int32 (_dff .ReadUShort ());
if _cfa > 0{_cfa +=int32 (_ffgb );};}else {_cfa =_eea +int32 (_ffgb );};if _cfa >=65536{_cfa -=65536;};if _cfa > 0{_dff ._bfdc .Chars [_eea ]=GID (_cfa );};};};return nil ;};const (HelveticaName =StdFontName ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");
HelveticaBoldName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061-\u0042\u006f\u006c\u0064");HelveticaObliqueName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061\u002d\u004f\u0062l\u0069\u0071\u0075\u0065");HelveticaBoldObliqueName =StdFontName ("H\u0065\u006c\u0076\u0065ti\u0063a\u002d\u0042\u006f\u006c\u0064O\u0062\u006c\u0069\u0071\u0075\u0065");
);var _ef =&fontMap {_gab :make (map[StdFontName ]func ()StdFont )};func NewFontFile2FromPdfObject (obj _fde .PdfObject )(TtfType ,error ){obj =_fde .TraceToDirectObject (obj );_gbe ,_feg :=obj .(*_fde .PdfObjectStream );if !_feg {_cef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u0061\u0020\u0073\u0074\u0072e\u0061\u006d \u0028\u0025\u0054\u0029",obj );
return TtfType {},_fde .ErrTypeError ;};_bcb ,_dag :=_fde .DecodeStream (_gbe );if _dag !=nil {return TtfType {},_dag ;};_egcb :=ttfParser {_egc :_f .NewReader (_bcb )};return _egcb .Parse ();};func (_cf *fontMap )read (_ag StdFontName )(func ()StdFont ,bool ){_cf .Lock ();
defer _cf .Unlock ();_fdb ,_ad :=_cf ._gab [_ag ];return _fdb ,_ad ;};func (_agca *ttfParser )ParseHead ()error {if _dfeg :=_agca .Seek ("\u0068\u0065\u0061\u0064");_dfeg !=nil {return _dfeg ;};_agca .Skip (3*4);_ece :=_agca .ReadULong ();if _ece !=0x5F0F3CF5{_cef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0063\u006fr\u0072e\u0063\u0074\u0020\u006d\u0061\u0067\u0069\u0063\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u002e\u0020\u0046\u006fn\u0074\u0020\u006d\u0061\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0020\u0063\u006f\u0072\u0072\u0065\u0063t\u006c\u0079\u002e\u0020\u0025\u0073",_agca );
};_agca .Skip (2);_agca ._bfdc .UnitsPerEm =_agca .ReadUShort ();_agca .Skip (2*8);_agca ._bfdc .Xmin =_agca .ReadShort ();_agca ._bfdc .Ymin =_agca .ReadShort ();_agca ._bfdc .Xmax =_agca .ReadShort ();_agca ._bfdc .Ymax =_agca .ReadShort ();return nil ;
};type GID =_d .GID ;func _dda ()StdFont {_ffb .Do (_bgg );_gea :=Descriptor {Name :CourierBoldObliqueName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0061,BBox :[4]float64 {-57,-250,869,801},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_gea ,_bae );};func (_gbg *ttfParser )ParseName ()error {if _aag :=_gbg .Seek ("\u006e\u0061\u006d\u0065");_aag !=nil {return _aag ;};_efab ,_ :=_gbg ._egc .Seek (0,_gb .SeekCurrent );_gbg ._bfdc .PostScriptName ="";_gbg .Skip (2);_fab :=_gbg .ReadUShort ();
_gbc :=_gbg .ReadUShort ();for _bdd :=uint16 (0);_bdd < _fab &&_gbg ._bfdc .PostScriptName =="";_bdd ++{_gbg .Skip (3*2);_bfgf :=_gbg .ReadUShort ();_bgeb :=_gbg .ReadUShort ();_cfaf :=_gbg .ReadUShort ();if _bfgf ==6{_gbg ._egc .Seek (_efab +int64 (_gbc )+int64 (_cfaf ),_gb .SeekStart );
_fda ,_cbb :=_gbg .ReadStr (int (_bgeb ));if _cbb !=nil {return _cbb ;};_fda =_g .Replace (_fda ,"\u0000","",-1);_fbdb ,_cbb :=_ce .Compile ("\u005b\u0028\u0029\u007b\u007d\u003c\u003e\u0020\u002f%\u005b\u005c\u005d\u005d");if _cbb !=nil {return _cbb ;
};_gbg ._bfdc .PostScriptName =_fbdb .ReplaceAllString (_fda ,"");};};if _gbg ._bfdc .PostScriptName ==""{_cef .Log .Debug ("\u0050a\u0072\u0073e\u004e\u0061\u006de\u003a\u0020\u0054\u0068\u0065\u0020\u006ea\u006d\u0065\u0020\u0050\u006f\u0073t\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u0077\u0061\u0073\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e");
};return nil ;};var _afd *RuneCharSafeMap ;type FontWeight int ;type fontMap struct{_gf .Mutex ;_gab map[StdFontName ]func ()StdFont ;};func _ccf ()StdFont {_ffb .Do (_bgg );_cac :=Descriptor {Name :CourierBoldName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0021,BBox :[4]float64 {-113,-250,749,801},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_cac ,_eegb );};func _cea ()StdFont {_afda .Do (_cdb );_dfd :=Descriptor {Name :TimesBoldItalicName ,Family :_dg ,Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-200,-218,996,921},ItalicAngle :-15,Ascent :683,Descent :-217,CapHeight :669,XHeight :462,StemV :121,StemH :42};
return NewStdFont (_dfd ,_bga );};func (_bgcd *ttfParser )parseCmapFormat0 ()error {_aa ,_abec :=_bgcd .ReadStr (256);if _abec !=nil {return _abec ;};_cad :=[]byte (_aa );_cef .Log .Trace ("\u0070a\u0072\u0073e\u0043\u006d\u0061p\u0046\u006f\u0072\u006d\u0061\u0074\u0030:\u0020\u0025\u0073\u000a\u0064\u0061t\u0061\u0053\u0074\u0072\u003d\u0025\u002b\u0071\u000a\u0064\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d",_bgcd ._bfdc .String (),_aa ,_cad );
for _fegg ,_abeg :=range _cad {_bgcd ._bfdc .Chars [rune (_fegg )]=GID (_abeg );};return nil ;};func (_gccg *ttfParser )ReadStr (length int )(string ,error ){_ffe :=make ([]byte ,length );_aae ,_fabb :=_gccg ._egc .Read (_ffe );if _fabb !=nil {return "",_fabb ;
}else if _aae !=length {return "",_a .Errorf ("\u0075\u006e\u0061bl\u0065\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0073",length );};return string (_ffe ),nil ;};func (_cffg *TtfType )MakeEncoder ()(_d .SimpleEncoder ,error ){_bed :=make (map[_d .CharCode ]GlyphName );
for _ddf :=_d .CharCode (0);_ddf <=256;_ddf ++{_acc :=rune (_ddf );_dcc ,_bfb :=_cffg .Chars [_acc ];if !_bfb {continue ;};var _gdc GlyphName ;if int (_dcc )>=0&&int (_dcc )< len (_cffg .GlyphNames ){_gdc =_cffg .GlyphNames [_dcc ];}else {_ebg :=rune (_dcc );
if _dae ,_cdc :=_d .RuneToGlyph (_ebg );_cdc {_gdc =_dae ;};};if _gdc !=""{_bed [_ddf ]=_gdc ;};};if len (_bed )==0{_cef .Log .Debug ("WA\u0052\u004eI\u004e\u0047\u003a\u0020\u005a\u0065\u0072\u006f\u0020l\u0065\u006e\u0067\u0074\u0068\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u002e\u0020\u0074\u0074\u0066=\u0025s\u0020\u0043\u0068\u0061\u0072\u0073\u003d\u005b%\u00200\u0032\u0078]",_cffg ,_cffg .Chars );
};return _d .NewCustomSimpleTextEncoder (_bed ,nil );};func (_bb *RuneCharSafeMap )Copy ()*RuneCharSafeMap {_ac :=MakeRuneCharSafeMap (_bb .Length ());_bb .Range (func (_dc rune ,_ff CharMetrics )(_bc bool ){_ac ._ge [_dc ]=_ff ;return false });return _ac ;
};func RegisterStdFont (name StdFontName ,fnc func ()StdFont ,aliases ...StdFontName ){if _ ,_ec :=_ef .read (name );_ec {panic ("\u0066o\u006e\u0074\u0020\u0061l\u0072\u0065\u0061\u0064\u0079 \u0072e\u0067i\u0073\u0074\u0065\u0072\u0065\u0064\u003a "+string (name ));
};_ef .write (name ,fnc );for _ ,_ea :=range aliases {RegisterStdFont (_ea ,fnc );};};func _eff ()StdFont {_fbf .Do (_fe );_gg :=Descriptor {Name :HelveticaObliqueName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-170,-225,1116,931},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_gg ,_cb );};func (_efb StdFont )Name ()string {return string (_efb ._abb .Name )};func (_gcf *TtfType )MakeToUnicode ()*_af .CMap {_agc :=make (map[_af .CharCode ]rune );if len (_gcf .GlyphNames )==0{return _af .NewToUnicodeCMap (_agc );
};for _dbdb ,_accb :=range _gcf .Chars {_acd :=_af .CharCode (_dbdb );_ccfe :=_gcf .GlyphNames [_accb ];_aed ,_cae :=_d .GlyphToRune (_ccfe );if !_cae {_cef .Log .Debug ("\u004e\u006f \u0072\u0075\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065\u003d\u0030\u0078\u0025\u0030\u0034\u0078\u0020\u0067\u006c\u0079\u0070h=\u0025\u0071",_dbdb ,_ccfe );
_aed =_d .MissingCodeRune ;};_agc [_acd ]=_aed ;};return _af .NewToUnicodeCMap (_agc );};var _gfg =&RuneCharSafeMap {_ge :map[rune ]CharMetrics {' ':{Wx :278},'→':{Wx :838},'↔':{Wx :1016},'↕':{Wx :458},'①':{Wx :788},'②':{Wx :788},'③':{Wx :788},'④':{Wx :788},'⑤':{Wx :788},'⑥':{Wx :788},'⑦':{Wx :788},'⑧':{Wx :788},'⑨':{Wx :788},'⑩':{Wx :788},'■':{Wx :761},'▲':{Wx :892},'▼':{Wx :892},'◆':{Wx :788},'●':{Wx :791},'◗':{Wx :438},'★':{Wx :816},'☎':{Wx :719},'☛':{Wx :960},'☞':{Wx :939},'♠':{Wx :626},'♣':{Wx :776},'♥':{Wx :694},'♦':{Wx :595},'✁':{Wx :974},'✂':{Wx :961},'✃':{Wx :974},'✄':{Wx :980},'✆':{Wx :789},'✇':{Wx :790},'✈':{Wx :791},'✉':{Wx :690},'✌':{Wx :549},'✍':{Wx :855},'✎':{Wx :911},'✏':{Wx :933},'✐':{Wx :911},'✑':{Wx :945},'✒':{Wx :974},'✓':{Wx :755},'✔':{Wx :846},'✕':{Wx :762},'✖':{Wx :761},'✗':{Wx :571},'✘':{Wx :677},'✙':{Wx :763},'✚':{Wx :760},'✛':{Wx :759},'✜':{Wx :754},'✝':{Wx :494},'✞':{Wx :552},'✟':{Wx :537},'✠':{Wx :577},'✡':{Wx :692},'✢':{Wx :786},'✣':{Wx :788},'✤':{Wx :788},'✥':{Wx :790},'✦':{Wx :793},'✧':{Wx :794},'✩':{Wx :823},'✪':{Wx :789},'✫':{Wx :841},'✬':{Wx :823},'✭':{Wx :833},'✮':{Wx :816},'✯':{Wx :831},'✰':{Wx :923},'✱':{Wx :744},'✲':{Wx :723},'✳':{Wx :749},'✴':{Wx :790},'✵':{Wx :792},'✶':{Wx :695},'✷':{Wx :776},'✸':{Wx :768},'✹':{Wx :792},'✺':{Wx :759},'✻':{Wx :707},'✼':{Wx :708},'✽':{Wx :682},'✾':{Wx :701},'✿':{Wx :826},'❀':{Wx :815},'❁':{Wx :789},'❂':{Wx :789},'❃':{Wx :707},'❄':{Wx :687},'❅':{Wx :696},'❆':{Wx :689},'❇':{Wx :786},'❈':{Wx :787},'❉':{Wx :713},'❊':{Wx :791},'❋':{Wx :785},'❍':{Wx :873},'❏':{Wx :762},'❐':{Wx :762},'❑':{Wx :759},'❒':{Wx :759},'❖':{Wx :784},'❘':{Wx :138},'❙':{Wx :277},'❚':{Wx :415},'❛':{Wx :392},'❜':{Wx :392},'❝':{Wx :668},'❞':{Wx :668},'❡':{Wx :732},'❢':{Wx :544},'❣':{Wx :544},'❤':{Wx :910},'❥':{Wx :667},'❦':{Wx :760},'❧':{Wx :760},'❶':{Wx :788},'❷':{Wx :788},'❸':{Wx :788},'❹':{Wx :788},'❺':{Wx :788},'❻':{Wx :788},'❼':{Wx :788},'❽':{Wx :788},'❾':{Wx :788},'❿':{Wx :788},'➀':{Wx :788},'➁':{Wx :788},'➂':{Wx :788},'➃':{Wx :788},'➄':{Wx :788},'➅':{Wx :788},'➆':{Wx :788},'➇':{Wx :788},'➈':{Wx :788},'➉':{Wx :788},'➊':{Wx :788},'➋':{Wx :788},'➌':{Wx :788},'➍':{Wx :788},'➎':{Wx :788},'➏':{Wx :788},'➐':{Wx :788},'➑':{Wx :788},'➒':{Wx :788},'➓':{Wx :788},'➔':{Wx :894},'➘':{Wx :748},'➙':{Wx :924},'➚':{Wx :748},'➛':{Wx :918},'➜':{Wx :927},'➝':{Wx :928},'➞':{Wx :928},'➟':{Wx :834},'➠':{Wx :873},'➡':{Wx :828},'➢':{Wx :924},'➣':{Wx :924},'➤':{Wx :917},'➥':{Wx :930},'➦':{Wx :931},'➧':{Wx :463},'➨':{Wx :883},'➩':{Wx :836},'➪':{Wx :836},'➫':{Wx :867},'➬':{Wx :867},'➭':{Wx :696},'➮':{Wx :696},'➯':{Wx :874},'➱':{Wx :874},'➲':{Wx :760},'➳':{Wx :946},'➴':{Wx :771},'➵':{Wx :865},'➶':{Wx :771},'➷':{Wx :888},'➸':{Wx :967},'➹':{Wx :888},'➺':{Wx :831},'➻':{Wx :873},'➼':{Wx :927},'➽':{Wx :970},'➾':{Wx :918},'\uf8d7':{Wx :390},'\uf8d8':{Wx :390},'\uf8d9':{Wx :317},'\uf8da':{Wx :317},'\uf8db':{Wx :276},'\uf8dc':{Wx :276},'\uf8dd':{Wx :509},'\uf8de':{Wx :509},'\uf8df':{Wx :410},'\uf8e0':{Wx :410},'\uf8e1':{Wx :234},'\uf8e2':{Wx :234},'\uf8e3':{Wx :334},'\uf8e4':{Wx :334}}};
func _ggc ()StdFont {_efe :=_d .NewZapfDingbatsEncoder ();_fbb :=Descriptor {Name :ZapfDingbatsName ,Family :string (ZapfDingbatsName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-1,-143,981,820},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :90,StemH :28};
return NewStdFontWithEncoding (_fbb ,_gfg ,_efe );};type CharMetrics struct{Wx float64 ;Wy float64 ;};func (_fb *RuneCharSafeMap )Length ()int {_fb ._ga .RLock ();defer _fb ._ga .RUnlock ();return len (_fb ._ge );};func (_adfe *ttfParser )ReadUShort ()(_begg uint16 ){_ee .Read (_adfe ._egc ,_ee .BigEndian ,&_begg );
return _begg ;};var _afda _gf .Once ;var _fbd *RuneCharSafeMap ;