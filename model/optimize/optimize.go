//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package optimize ;import (_ae "bytes";_bb "crypto/md5";_fef "errors";_gc "github.com/unidoc/unipdf/v3/common";_e "github.com/unidoc/unipdf/v3/contentstream";_f "github.com/unidoc/unipdf/v3/core";_fb "github.com/unidoc/unipdf/v3/extractor";_d "github.com/unidoc/unipdf/v3/internal/imageutil";
_c "github.com/unidoc/unipdf/v3/internal/textencoding";_bbb "github.com/unidoc/unipdf/v3/model";_fe "github.com/unidoc/unitype";_b "golang.org/x/image/draw";_a "math";);

// Optimize optimizes PDF objects to decrease PDF size.
func (_dge *CompressStreams )Optimize (objects []_f .PdfObject )(_gecg []_f .PdfObject ,_bddd error ){_gecg =make ([]_f .PdfObject ,len (objects ));copy (_gecg ,objects );for _ ,_ebae :=range objects {_bfb ,_ebd :=_f .GetStream (_ebae );if !_ebd {continue ;
};if _cdc :=_bfb .Get ("\u0046\u0069\u006c\u0074\u0065\u0072");_cdc !=nil {if _ ,_afe :=_f .GetName (_cdc );_afe {continue ;};if _dcag ,_aed :=_f .GetArray (_cdc );_aed &&_dcag .Len ()> 0{continue ;};};_bccd :=_f .NewFlateEncoder ();var _agc []byte ;_agc ,_bddd =_bccd .EncodeBytes (_bfb .Stream );
if _bddd !=nil {return _gecg ,_bddd ;};_bbeb :=_bccd .MakeStreamDict ();if len (_agc )+len (_bbeb .WriteString ())< len (_bfb .Stream ){_bfb .Stream =_agc ;_bfb .PdfObjectDictionary .Merge (_bbeb );_bfb .PdfObjectDictionary .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_f .MakeInteger (int64 (len (_bfb .Stream ))));
};};return _gecg ,nil ;};

// CleanFonts cleans up embedded fonts, reducing font sizes.
type CleanFonts struct{

// Subset embedded fonts if encountered (if true).
// Otherwise attempts to reduce the font program.
Subset bool ;};

// CombineIdenticalIndirectObjects combines identical indirect objects.
// It implements interface model.Optimizer.
type CombineIdenticalIndirectObjects struct{};

// CompressStreams compresses uncompressed streams.
// It implements interface model.Optimizer.
type CompressStreams struct{};func _gacb (_acg _f .PdfObject )[]content {if _acg ==nil {return nil ;};_gdf ,_ggd :=_f .GetArray (_acg );if !_ggd {_gc .Log .Debug ("\u0041\u006e\u006e\u006fts\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
return nil ;};var _cdb []content ;for _ ,_gge :=range _gdf .Elements (){_edb ,_dff :=_f .GetDict (_gge );if !_dff {_gc .Log .Debug ("I\u0067\u006e\u006f\u0072\u0069\u006eg\u0020\u006e\u006f\u006e\u002d\u0064i\u0063\u0074\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u0069\u006e\u0020\u0041\u006e\u006e\u006ft\u0073");
continue ;};_fa ,_dff :=_f .GetDict (_edb .Get ("\u0041\u0050"));if !_dff {_gc .Log .Debug ("\u004e\u006f\u0020\u0041P \u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067");continue ;};_aae :=_f .TraceToDirectObject (_fa .Get ("\u004e"));
if _aae ==nil {_gc .Log .Debug ("N\u006f\u0020\u004e\u0020en\u0074r\u0079\u0020\u002d\u0020\u0073k\u0069\u0070\u0070\u0069\u006e\u0067");continue ;};var _cgb *_f .PdfObjectStream ;switch _eb :=_aae .(type ){case *_f .PdfObjectDictionary :_fae ,_aacf :=_f .GetName (_edb .Get ("\u0041\u0053"));
if !_aacf {_gc .Log .Debug ("\u004e\u006f\u0020\u0041S \u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067");continue ;};_cgb ,_aacf =_f .GetStream (_eb .Get (*_fae ));if !_aacf {_gc .Log .Debug ("\u0046o\u0072\u006d\u0020\u006eo\u0074\u0020\u0066\u006f\u0075n\u0064 \u002d \u0073\u006b\u0069\u0070\u0070\u0069\u006eg");
continue ;};case *_f .PdfObjectStream :_cgb =_eb ;};if _cgb ==nil {_gc .Log .Debug ("\u0046\u006f\u0072m\u0020\u006e\u006f\u0074 \u0066\u006f\u0075\u006e\u0064\u0020\u0028n\u0069\u006c\u0029\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067");
continue ;};_dfc ,_fcc :=_bbb .NewXObjectFormFromStream (_cgb );if _fcc !=nil {_gc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u003a\u0020%\u0076\u0020\u002d\u0020\u0069\u0067\u006eo\u0072\u0069\u006e\u0067",_fcc );
continue ;};_aeac ,_fcc :=_dfc .GetContentStream ();if _fcc !=nil {_gc .Log .Debug ("E\u0072\u0072\u006f\u0072\u0020\u0064e\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0063\u006fn\u0074\u0065\u006et\u0073:\u0020\u0025\u0076",_fcc );continue ;};_cdb =append (_cdb ,content {_aace :string (_aeac ),_dda :_dfc .Resources });
};return _cdb ;};

// CleanContentstream cleans up redundant operands in content streams, including Page and XObject Form
// contents. This process includes:
// 1. Marked content operators are removed.
// 2. Some operands are simplified (shorter form).
// TODO: Add more reduction methods and improving the methods for identifying unnecessary operands.
type CleanContentstream struct{};

// Optimize optimizes PDF objects to decrease PDF size.
func (_gcd *Chain )Optimize (objects []_f .PdfObject )(_ec []_f .PdfObject ,_ce error ){_ec =objects ;for _ ,_be :=range _gcd ._cd {_ec ,_ce =_be .Optimize (_ec );if _ce !=nil {return _ec ,_ce ;};};return _ec ,nil ;};

// New creates a optimizers chain from options.
func New (options Options )*Chain {_fdcf :=new (Chain );if options .CleanFonts ||options .SubsetFonts {_fdcf .Append (&CleanFonts {Subset :options .SubsetFonts });};if options .CleanContentstream {_fdcf .Append (new (CleanContentstream ));};if options .ImageUpperPPI > 0{_fgba :=new (ImagePPI );
_fgba .ImageUpperPPI =options .ImageUpperPPI ;_fdcf .Append (_fgba );};if options .ImageQuality > 0{_dgb :=new (Image );_dgb .ImageQuality =options .ImageQuality ;_fdcf .Append (_dgb );};if options .CombineDuplicateDirectObjects {_fdcf .Append (new (CombineDuplicateDirectObjects ));
};if options .CombineDuplicateStreams {_fdcf .Append (new (CombineDuplicateStreams ));};if options .CombineIdenticalIndirectObjects {_fdcf .Append (new (CombineIdenticalIndirectObjects ));};if options .UseObjectStreams {_fdcf .Append (new (ObjectStreams ));
};if options .CompressStreams {_fdcf .Append (new (CompressStreams ));};return _fdcf ;};

// Chain allows to use sequence of optimizers.
// It implements interface model.Optimizer.
type Chain struct{_cd []_bbb .Optimizer };

// Optimize optimizes PDF objects to decrease PDF size.
func (_aad *CombineDuplicateStreams )Optimize (objects []_f .PdfObject )(_add []_f .PdfObject ,_dcg error ){_dag :=make (map[_f .PdfObject ]_f .PdfObject );_ade :=make (map[_f .PdfObject ]struct{});_daf :=make (map[string ][]*_f .PdfObjectStream );for _ ,_gaba :=range objects {if _accb ,_ecfe :=_gaba .(*_f .PdfObjectStream );
_ecfe {_fcca :=_bb .New ();_fcca .Write (_accb .Stream );_cfg :=string (_fcca .Sum (nil ));_daf [_cfg ]=append (_daf [_cfg ],_accb );};};for _ ,_dcgg :=range _daf {if len (_dcgg )< 2{continue ;};_egc :=_dcgg [0];for _dae :=1;_dae < len (_dcgg );_dae ++{_gcdf :=_dcgg [_dae ];
_dag [_gcdf ]=_egc ;_ade [_gcdf ]=struct{}{};};};_add =make ([]_f .PdfObject ,0,len (objects )-len (_ade ));for _ ,_ggee :=range objects {if _ ,_ged :=_ade [_ggee ];_ged {continue ;};_add =append (_add ,_ggee );};_gabge (_add ,_dag );return _add ,nil ;
};func _aaf (_abd *_f .PdfObjectStream ,_abge []rune ,_cdg []_fe .GlyphIndex )error {_abd ,_cecf :=_f .GetStream (_abd );if !_cecf {_gc .Log .Debug ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u002d\u002d\u0020\u0041\u0042\u004f\u0052T\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006e\u0067");
return _fef .New ("\u0066\u006f\u006e\u0074fi\u006c\u0065\u0032\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_bbf ,_bcc :=_f .DecodeStream (_abd );if _bcc !=nil {_gc .Log .Debug ("\u0044\u0065c\u006f\u0064\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_bcc );
return _bcc ;};_ff ,_bcc :=_fe .Parse (_ae .NewReader (_bbf ));if _bcc !=nil {_gc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0020f\u006f\u006e\u0074",len (_abd .Stream ));
return _bcc ;};_bbc :=_cdg ;if len (_abge )> 0{_gfad :=_ff .LookupRunes (_abge );_bbc =append (_bbc ,_gfad ...);};_ff ,_bcc =_ff .SubsetKeepIndices (_bbc );if _bcc !=nil {_gc .Log .Debug ("\u0045R\u0052\u004f\u0052\u0020s\u0075\u0062\u0073\u0065\u0074t\u0069n\u0067 \u0066\u006f\u006e\u0074\u003a\u0020\u0025v",_bcc );
return _bcc ;};var _aafb _ae .Buffer ;_bcc =_ff .Write (&_aafb );if _bcc !=nil {_gc .Log .Debug ("\u0045\u0052\u0052\u004fR \u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u003a\u0020%\u0076",_bcc );return _bcc ;};if _aafb .Len ()> len (_bbf ){_gc .Log .Debug ("\u0052\u0065-\u0077\u0072\u0069\u0074\u0074\u0065\u006e\u0020\u0066\u006f\u006e\u0074\u0020\u0069\u0073\u0020\u006c\u0061\u0072\u0067\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u006f\u0072\u0069\u0067\u0069\u006e\u0061\u006c\u0020\u002d\u0020\u0073\u006b\u0069\u0070");
return nil ;};_eg ,_bcc :=_f .MakeStream (_aafb .Bytes (),_f .NewFlateEncoder ());if _bcc !=nil {_gc .Log .Debug ("\u0045\u0052\u0052\u004fR \u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u003a\u0020%\u0076",_bcc );return _bcc ;
};*_abd =*_eg ;_abd .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_f .MakeInteger (int64 (_aafb .Len ())));return nil ;};

// ImagePPI optimizes images by scaling images such that the PPI (pixels per inch) is never higher than ImageUpperPPI.
// TODO(a5i): Add support for inline images.
// It implements interface model.Optimizer.
type ImagePPI struct{ImageUpperPPI float64 ;};

// Image optimizes images by rewrite images into JPEG format with quality equals to ImageQuality.
// TODO(a5i): Add support for inline images.
// It implements interface model.Optimizer.
type Image struct{ImageQuality int ;};

// Optimize optimizes PDF objects to decrease PDF size.
func (_gfd *CombineIdenticalIndirectObjects )Optimize (objects []_f .PdfObject )(_dgc []_f .PdfObject ,_dgg error ){_cbfa (objects );_gbd :=make (map[_f .PdfObject ]_f .PdfObject );_egg :=make (map[_f .PdfObject ]struct{});_aafd :=make (map[string ][]*_f .PdfIndirectObject );
for _ ,_bea :=range objects {_gcfb ,_ea :=_bea .(*_f .PdfIndirectObject );if !_ea {continue ;};if _dcac ,_gccc :=_gcfb .PdfObject .(*_f .PdfObjectDictionary );_gccc {if _cafa ,_ebc :=_dcac .Get ("\u0054\u0079\u0070\u0065").(*_f .PdfObjectName );_ebc &&*_cafa =="\u0050\u0061\u0067\u0065"{continue ;
};_ecff :=_bb .New ();_ecff .Write ([]byte (_dcac .WriteString ()));_geca :=string (_ecff .Sum (nil ));_aafd [_geca ]=append (_aafd [_geca ],_gcfb );};};for _ ,_eed :=range _aafd {if len (_eed )< 2{continue ;};_bdb :=_eed [0];for _ecd :=1;_ecd < len (_eed );
_ecd ++{_eab :=_eed [_ecd ];_gbd [_eab ]=_bdb ;_egg [_eab ]=struct{}{};};};_dgc =make ([]_f .PdfObject ,0,len (objects )-len (_egg ));for _ ,_ebf :=range objects {if _ ,_fab :=_egg [_ebf ];_fab {continue ;};_dgc =append (_dgc ,_ebf );};_gabge (_dgc ,_gbd );
return _dgc ,nil ;};func _gccb (_ceegb []_f .PdfObject )objectStructure {_gee :=objectStructure {};_aca :=false ;for _ ,_cdgb :=range _ceegb {switch _efd :=_cdgb .(type ){case *_f .PdfIndirectObject :_dfa ,_efa :=_f .GetDict (_efd );if !_efa {continue ;
};_faeg ,_efa :=_f .GetName (_dfa .Get ("\u0054\u0079\u0070\u0065"));if !_efa {continue ;};switch _faeg .String (){case "\u0043a\u0074\u0061\u006c\u006f\u0067":_gee ._febd =_dfa ;_aca =true ;};};if _aca {break ;};};if !_aca {return _gee ;};_caad ,_fbd :=_f .GetDict (_gee ._febd .Get ("\u0050\u0061\u0067e\u0073"));
if !_fbd {return _gee ;};_gee ._acge =_caad ;_dac ,_fbd :=_f .GetArray (_caad .Get ("\u004b\u0069\u0064\u0073"));if !_fbd {return _gee ;};for _ ,_ggb :=range _dac .Elements (){_dced ,_dgf :=_f .GetIndirect (_ggb );if !_dgf {break ;};_gee ._eegbg =append (_gee ._eegbg ,_dced );
};return _gee ;};func _cg (_db *_e .ContentStreamOperations )*_e .ContentStreamOperations {if _db ==nil {return nil ;};_cb :=_e .ContentStreamOperations {};for _ ,_aa :=range *_db {switch _aa .Operand {case "\u0042\u0044\u0043","\u0042\u004d\u0043","\u0045\u004d\u0043":continue ;
case "\u0054\u006d":if len (_aa .Params )==6{if _gg ,_gac :=_f .GetNumbersAsFloat (_aa .Params );_gac ==nil {if _gg [0]==1&&_gg [1]==0&&_gg [2]==0&&_gg [3]==1{_aa =&_e .ContentStreamOperation {Params :[]_f .PdfObject {_aa .Params [4],_aa .Params [5]},Operand :"\u0054\u0064"};
};};};};_cb =append (_cb ,_aa );};return &_cb ;};type imageInfo struct{ColorSpace _f .PdfObjectName ;BitsPerComponent int ;ColorComponents int ;Width int ;Height int ;Stream *_f .PdfObjectStream ;PPI float64 ;};

// Optimize optimizes PDF objects to decrease PDF size.
func (_cge *CleanContentstream )Optimize (objects []_f .PdfObject )(_ddc []_f .PdfObject ,_cf error ){_eea :=map[*_f .PdfObjectStream ]struct{}{};var _gf []*_f .PdfObjectStream ;_fc :=func (_cec *_f .PdfObjectStream ){if _ ,_ece :=_eea [_cec ];!_ece {_eea [_cec ]=struct{}{};
_gf =append (_gf ,_cec );};};for _ ,_cdd :=range objects {switch _bd :=_cdd .(type ){case *_f .PdfIndirectObject :switch _bg :=_bd .PdfObject .(type ){case *_f .PdfObjectDictionary :if _cef ,_dbe :=_f .GetName (_bg .Get ("\u0054\u0079\u0070\u0065"));!_dbe ||_cef .String ()!="\u0050\u0061\u0067\u0065"{continue ;
};if _feg ,_gfa :=_f .GetStream (_bg .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));_gfa {_fc (_feg );}else if _ef ,_dbd :=_f .GetArray (_bg .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));_dbd {for _ ,_bdg :=range _ef .Elements (){if _bf ,_ca :=_f .GetStream (_bdg );
_ca {_fc (_bf );};};};};case *_f .PdfObjectStream :if _dc ,_cea :=_f .GetName (_bd .Get ("\u0054\u0079\u0070\u0065"));!_cea ||_dc .String ()!="\u0058O\u0062\u006a\u0065\u0063\u0074"{continue ;};if _da ,_cc :=_f .GetName (_bd .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));
!_cc ||_da .String ()!="\u0046\u006f\u0072\u006d"{continue ;};_fc (_bd );};};for _ ,_df :=range _gf {_cf =_dd (_df );if _cf !=nil {return nil ,_cf ;};};return objects ,nil ;};func _cbfa (_egb []_f .PdfObject ){for _acea ,_cdbb :=range _egb {switch _fbg :=_cdbb .(type ){case *_f .PdfIndirectObject :_fbg .ObjectNumber =int64 (_acea +1);
_fbg .GenerationNumber =0;case *_f .PdfObjectStream :_fbg .ObjectNumber =int64 (_acea +1);_fbg .GenerationNumber =0;case *_f .PdfObjectStreams :_fbg .ObjectNumber =int64 (_acea +1);_fbg .GenerationNumber =0;};};};type objectStructure struct{_febd *_f .PdfObjectDictionary ;
_acge *_f .PdfObjectDictionary ;_eegbg []*_f .PdfIndirectObject ;};

// ObjectStreams groups PDF objects to object streams.
// It implements interface model.Optimizer.
type ObjectStreams struct{};func _bdfc (_ccfb *_bbb .Image ,_afac float64 )(*_bbb .Image ,error ){_fff ,_bage :=_ccfb .ToGoImage ();if _bage !=nil {return nil ,_bage ;};var _eggc _d .Image ;_fcbc ,_faea :=_fff .(*_d .Monochrome );if _faea {if _bage =_fcbc .ResolveDecode ();
_bage !=nil {return nil ,_bage ;};_eggc ,_bage =_fcbc .Scale (_afac );if _bage !=nil {return nil ,_bage ;};}else {_egd :=int (_a .RoundToEven (float64 (_ccfb .Width )*_afac ));_gacc :=int (_a .RoundToEven (float64 (_ccfb .Height )*_afac ));_eggc ,_bage =_d .NewImage (_egd ,_gacc ,int (_ccfb .BitsPerComponent ),_ccfb .ColorComponents ,nil ,nil ,nil );
if _bage !=nil {return nil ,_bage ;};_b .CatmullRom .Scale (_eggc ,_eggc .Bounds (),_fff ,_fff .Bounds (),_b .Over ,&_b .Options {});};_cbb :=_eggc .Base ();_bfcc :=&_bbb .Image {Width :int64 (_cbb .Width ),Height :int64 (_cbb .Height ),BitsPerComponent :int64 (_cbb .BitsPerComponent ),ColorComponents :_cbb .ColorComponents ,Data :_cbb .Data };
_bfcc .SetDecode (_cbb .Decode );_bfcc .SetAlpha (_cbb .Alpha );return _bfcc ,nil ;};

// Optimize optimizes PDF objects to decrease PDF size.
func (_afg *Image )Optimize (objects []_f .PdfObject )(_babg []_f .PdfObject ,_gfg error ){if _afg .ImageQuality <=0{return objects ,nil ;};_aegd :=_cebe (objects );if len (_aegd )==0{return objects ,nil ;};_ebag :=make (map[_f .PdfObject ]_f .PdfObject );
_cfc :=make (map[_f .PdfObject ]struct{});for _ ,_gabg :=range _aegd {_gdef :=_gabg .Stream .PdfObjectDictionary .Get (_f .PdfObjectName ("\u0053\u004d\u0061s\u006b"));_cfc [_gdef ]=struct{}{};};for _bdgfg ,_cebd :=range _aegd {_ccb :=_cebd .Stream ;if _ ,_ggfb :=_cfc [_ccb ];
_ggfb {continue ;};_ceca ,_gfgd :=_f .NewEncoderFromStream (_ccb );if _gfgd !=nil {_gc .Log .Warning ("\u0045\u0072\u0072\u006f\u0072 \u0067\u0065\u0074\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066o\u0072\u0020\u0074\u0068\u0065\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0025\u0073");
continue ;};_cad ,_gfgd :=_ceca .DecodeStream (_ccb );if _gfgd !=nil {_gc .Log .Warning ("\u0045\u0072\u0072\u006f\u0072\u0020\u0064\u0065\u0063\u006f\u0064\u0065\u0020\u0074\u0068e\u0020i\u006d\u0061\u0067\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0025\u0073");
continue ;};_edd :=_f .NewDCTEncoder ();_edd .ColorComponents =_cebd .ColorComponents ;_edd .Quality =_afg .ImageQuality ;_edd .BitsPerComponent =_cebd .BitsPerComponent ;_edd .Width =_cebd .Width ;_edd .Height =_cebd .Height ;_bcac ,_gfgd :=_edd .EncodeBytes (_cad );
if _gfgd !=nil {_gc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gfgd );return nil ,_gfgd ;};var _addb _f .StreamEncoder ;_addb =_edd ;{_cdbf :=_f .NewFlateEncoder ();_ggfe :=_f .NewMultiEncoder ();_ggfe .AddEncoder (_cdbf );_ggfe .AddEncoder (_edd );
_aegb ,_ccf :=_ggfe .EncodeBytes (_cad );if _ccf !=nil {return nil ,_ccf ;};if len (_aegb )< len (_bcac ){_gc .Log .Debug ("\u004d\u0075\u006c\u0074\u0069\u0020\u0065\u006e\u0063\u0020\u0069\u006d\u0070\u0072\u006f\u0076\u0065\u0073\u003a\u0020\u0025\u0064\u0020\u0074o\u0020\u0025\u0064\u0020\u0028o\u0072\u0069g\u0020\u0025\u0064\u0029",len (_bcac ),len (_aegb ),len (_ccb .Stream ));
_bcac =_aegb ;_addb =_ggfe ;};};_cgeb :=len (_ccb .Stream );if _cgeb < len (_bcac ){continue ;};_afa :=&_f .PdfObjectStream {Stream :_bcac };_afa .PdfObjectReference =_ccb .PdfObjectReference ;_afa .PdfObjectDictionary =_f .MakeDict ();_afa .Merge (_ccb .PdfObjectDictionary );
_afa .Merge (_addb .MakeStreamDict ());_afa .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_f .MakeInteger (int64 (len (_bcac ))));_ebag [_ccb ]=_afa ;_aegd [_bdgfg ].Stream =_afa ;};_babg =make ([]_f .PdfObject ,len (objects ));copy (_babg ,objects );_gabge (_babg ,_ebag );
return _babg ,nil ;};

// Options describes PDF optimization parameters.
type Options struct{CombineDuplicateStreams bool ;CombineDuplicateDirectObjects bool ;ImageUpperPPI float64 ;ImageQuality int ;UseObjectStreams bool ;CombineIdenticalIndirectObjects bool ;CompressStreams bool ;CleanFonts bool ;SubsetFonts bool ;CleanContentstream bool ;
};func _cebe (_cbe []_f .PdfObject )[]*imageInfo {_aec :=_f .PdfObjectName ("\u0053u\u0062\u0074\u0079\u0070\u0065");_dce :=make (map[*_f .PdfObjectStream ]struct{});var _dafd error ;var _ebe []*imageInfo ;for _ ,_cecfe :=range _cbe {_aeae ,_aedg :=_f .GetStream (_cecfe );
if !_aedg {continue ;};if _ ,_gfab :=_dce [_aeae ];_gfab {continue ;};_dce [_aeae ]=struct{}{};_fbcd :=_aeae .PdfObjectDictionary .Get (_aec );_cgd ,_aedg :=_f .GetName (_fbcd );if !_aedg ||string (*_cgd )!="\u0049\u006d\u0061g\u0065"{continue ;};_dfcf :=&imageInfo {BitsPerComponent :8,Stream :_aeae };
if _dfcf .ColorSpace ,_dafd =_bbb .DetermineColorspaceNameFromPdfObject (_aeae .PdfObjectDictionary .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));_dafd !=nil {_gc .Log .Error ("\u0045\u0072\u0072\u006f\u0072\u0020\u0064\u0065\u0074\u0065r\u006d\u0069\u006e\u0065\u0020\u0063\u006fl\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u0025\u0073",_dafd );
continue ;};if _bdbc ,_dbb :=_f .GetIntVal (_aeae .PdfObjectDictionary .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));_dbb {_dfcf .BitsPerComponent =_bdbc ;};if _cfa ,_gdd :=_f .GetIntVal (_aeae .PdfObjectDictionary .Get ("\u0057\u0069\u0064t\u0068"));
_gdd {_dfcf .Width =_cfa ;};if _fcb ,_bda :=_f .GetIntVal (_aeae .PdfObjectDictionary .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));_bda {_dfcf .Height =_fcb ;};switch _dfcf .ColorSpace {case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":_dfcf .ColorComponents =3;
case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":_dfcf .ColorComponents =1;default:_gc .Log .Warning ("\u004f\u0070\u0074\u0069\u006d\u0069\u007a\u0061t\u0069\u006f\u006e i\u0073\u0020\u006e\u006f\u0074\u0020s\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0063\u006fl\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065 \u0025\u0073",_dfcf .ColorSpace );
continue ;};_ebe =append (_ebe ,_dfcf );};return _ebe ;};func _gabge (_cae []_f .PdfObject ,_bga map[_f .PdfObject ]_f .PdfObject ){if len (_bga )==0{return ;};for _cfcb ,_gegc :=range _cae {if _ecg ,_fgc :=_bga [_gegc ];_fgc {_cae [_cfcb ]=_ecg ;continue ;
};_bga [_gegc ]=_gegc ;switch _gaff :=_gegc .(type ){case *_f .PdfObjectArray :_dfee :=make ([]_f .PdfObject ,_gaff .Len ());copy (_dfee ,_gaff .Elements ());_gabge (_dfee ,_bga );for _dbdc ,_gfabd :=range _dfee {_gaff .Set (_dbdc ,_gfabd );};case *_f .PdfObjectStreams :_gabge (_gaff .Elements (),_bga );
case *_f .PdfObjectStream :_bcb :=[]_f .PdfObject {_gaff .PdfObjectDictionary };_gabge (_bcb ,_bga );_gaff .PdfObjectDictionary =_bcb [0].(*_f .PdfObjectDictionary );case *_f .PdfObjectDictionary :_egfc :=_gaff .Keys ();_ggc :=make ([]_f .PdfObject ,len (_egfc ));
for _egca ,_agd :=range _egfc {_ggc [_egca ]=_gaff .Get (_agd );};_gabge (_ggc ,_bga );for _dbea ,_bdc :=range _egfc {_gaff .Set (_bdc ,_ggc [_dbea ]);};case *_f .PdfIndirectObject :_adad :=[]_f .PdfObject {_gaff .PdfObject };_gabge (_adad ,_bga );_gaff .PdfObject =_adad [0];
};};};

// Optimize optimizes PDF objects to decrease PDF size.
func (_fdb *ImagePPI )Optimize (objects []_f .PdfObject )(_eaba []_f .PdfObject ,_cba error ){if _fdb .ImageUpperPPI <=0{return objects ,nil ;};_ffbc :=_cebe (objects );if len (_ffbc )==0{return objects ,nil ;};_ceeg :=make (map[_f .PdfObject ]struct{});
for _ ,_gcfg :=range _ffbc {_fee :=_gcfg .Stream .PdfObjectDictionary .Get (_f .PdfObjectName ("\u0053\u004d\u0061s\u006b"));_ceeg [_fee ]=struct{}{};};_gae :=make (map[*_f .PdfObjectStream ]*imageInfo );for _ ,_bgdg :=range _ffbc {_gae [_bgdg .Stream ]=_bgdg ;
};var _eec *_f .PdfObjectDictionary ;for _ ,_dcgd :=range objects {if _egge ,_ffed :=_f .GetDict (_dcgd );_eec ==nil &&_ffed {if _feb ,_edg :=_f .GetName (_egge .Get (_f .PdfObjectName ("\u0054\u0079\u0070\u0065")));_edg &&*_feb =="\u0043a\u0074\u0061\u006c\u006f\u0067"{_eec =_egge ;
};};};if _eec ==nil {return objects ,nil ;};_dga ,_dddg :=_f .GetDict (_eec .Get (_f .PdfObjectName ("\u0050\u0061\u0067e\u0073")));if !_dddg {return objects ,nil ;};_dcb ,_cebf :=_f .GetArray (_dga .Get (_f .PdfObjectName ("\u004b\u0069\u0064\u0073")));
if !_cebf {return objects ,nil ;};_dbbc :=make (map[string ]*imageInfo );for _ ,_cfag :=range _dcb .Elements (){_gfe ,_ace :=_f .GetDict (_cfag );if !_ace {continue ;};_adb ,_dbf :=_f .GetArray (_gfe .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));
if !_dbf {continue ;};_eac ,_ccba :=_f .GetDict (_gfe .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s"));if !_ccba {continue ;};_gce ,_dde :=_f .GetDict (_eac .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074"));if !_dde {continue ;};_bgf :=_gce .Keys ();
for _ ,_febg :=range _bgf {if _addbe ,_dbg :=_f .GetStream (_gce .Get (_febg ));_dbg {if _dee ,_eaed :=_gae [_addbe ];_eaed {_dbbc [string (_febg )]=_dee ;};};};for _ ,_ebdd :=range _adb .Elements (){if _aaeb ,_cgdc :=_f .GetStream (_ebdd );_cgdc {_bfa ,_bebf :=_f .NewEncoderFromStream (_aaeb );
if _bebf !=nil {return nil ,_bebf ;};_fcgff ,_bebf :=_bfa .DecodeStream (_aaeb );if _bebf !=nil {return nil ,_bebf ;};_dgef :=_e .NewContentStreamParser (string (_fcgff ));_bac ,_bebf :=_dgef .Parse ();if _bebf !=nil {return nil ,_bebf ;};_cgee ,_afc :=1.0,1.0;
for _ ,_efe :=range *_bac {if _efe .Operand =="\u0051"{_cgee ,_afc =1.0,1.0;};if _efe .Operand =="\u0063\u006d"&&len (_efe .Params )==6{if _bgcd ,_faee :=_f .GetFloatVal (_efe .Params [0]);_faee {_cgee =_cgee *_bgcd ;};if _bfe ,_dfe :=_f .GetFloatVal (_efe .Params [3]);
_dfe {_afc =_afc *_bfe ;};if _cdf ,_fed :=_f .GetIntVal (_efe .Params [0]);_fed {_cgee =_cgee *float64 (_cdf );};if _cfb ,_fbfg :=_f .GetIntVal (_efe .Params [3]);_fbfg {_afc =_afc *float64 (_cfb );};};if _efe .Operand =="\u0044\u006f"&&len (_efe .Params )==1{_dad ,_gbcg :=_f .GetName (_efe .Params [0]);
if !_gbcg {continue ;};if _bgdf ,_gbdg :=_dbbc [string (*_dad )];_gbdg {_bde ,_fdc :=_cgee /72.0,_afc /72.0;_gffa ,_fffg :=float64 (_bgdf .Width )/_bde ,float64 (_bgdf .Height )/_fdc ;if _bde ==0||_fdc ==0{_gffa =72.0;_fffg =72.0;};_bgdf .PPI =_a .Max (_bgdf .PPI ,_gffa );
_bgdf .PPI =_a .Max (_bgdf .PPI ,_fffg );};};};};};};for _ ,_aee :=range _ffbc {if _ ,_ecc :=_ceeg [_aee .Stream ];_ecc {continue ;};if _aee .PPI <=_fdb .ImageUpperPPI {continue ;};_ddfd ,_gaf :=_bbb .NewXObjectImageFromStream (_aee .Stream );if _gaf !=nil {return nil ,_gaf ;
};var _bgdgg imageModifications ;_bgdgg .Scale =_fdb .ImageUpperPPI /_aee .PPI ;if _aee .BitsPerComponent ==1&&_aee .ColorComponents ==1{_eegb :=_a .Round (_aee .PPI /_fdb .ImageUpperPPI );_aba :=_d .NextPowerOf2 (uint (_eegb ));if _d .InDelta (float64 (_aba ),1/_bgdgg .Scale ,0.3){_bgdgg .Scale =float64 (1)/float64 (_aba );
};if _ ,_ffcb :=_ddfd .Filter .(*_f .JBIG2Encoder );!_ffcb {_bgdgg .Encoding =_f .NewJBIG2Encoder ();};};if _gaf =_eabb (_ddfd ,_bgdgg );_gaf !=nil {_gc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072 \u0073\u0063\u0061\u006c\u0065\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u006be\u0065\u0070\u0020\u006f\u0072\u0069\u0067\u0069\u006e\u0061\u006c\u0020\u0069\u006d\u0061\u0067\u0065\u003a\u0020\u0025\u0073",_gaf );
continue ;};_bgdgg .Encoding =nil ;if _gffc ,_fbb :=_f .GetStream (_aee .Stream .PdfObjectDictionary .Get (_f .PdfObjectName ("\u0053\u004d\u0061s\u006b")));_fbb {_cecg ,_caa :=_bbb .NewXObjectImageFromStream (_gffc );if _caa !=nil {return nil ,_caa ;};
if _caa =_eabb (_cecg ,_bgdgg );_caa !=nil {return nil ,_caa ;};};};return objects ,nil ;};func _bgc (_cfd []_f .PdfObject )(_ab map[*_f .PdfObjectStream ]struct{},_fg error ){_ab =map[*_f .PdfObjectStream ]struct{}{};_cff :=map[*_bbb .PdfFont ]struct{}{};
_bge :=_gccb (_cfd );for _ ,_daa :=range _bge ._eegbg {_fefd ,_gga :=_f .GetDict (_daa .PdfObject );if !_gga {continue ;};_ddd ,_gga :=_f .GetDict (_fefd .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s"));if !_gga {continue ;};_daab ,_ :=_fgg (_fefd .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));
_ddg ,_fbcb :=_bbb .NewPdfPageResourcesFromDict (_ddd );if _fbcb !=nil {return nil ,_fbcb ;};_ada :=[]content {{_aace :_daab ,_dda :_ddg }};_fd :=_gacb (_fefd .Get ("\u0041\u006e\u006e\u006f\u0074\u0073"));if _fd !=nil {_ada =append (_ada ,_fd ...);};for _ ,_gcg :=range _ada {_af ,_adce :=_fb .NewFromContents (_gcg ._aace ,_gcg ._dda );
if _adce !=nil {return nil ,_adce ;};_adg ,_ ,_ ,_adce :=_af .ExtractPageText ();if _adce !=nil {return nil ,_adce ;};for _ ,_bbbd :=range _adg .Marks ().Elements (){if _bbbd .Font ==nil {continue ;};if _ ,_gdc :=_cff [_bbbd .Font ];!_gdc {_cff [_bbbd .Font ]=struct{}{};
};};};};_daac :=map[*_f .PdfObjectStream ][]*_bbb .PdfFont {};for _aac :=range _cff {_bdf :=_aac .FontDescriptor ();if _bdf ==nil ||_bdf .FontFile2 ==nil {continue ;};_cda ,_gb :=_f .GetStream (_bdf .FontFile2 );if !_gb {continue ;};_daac [_cda ]=append (_daac [_cda ],_aac );
};for _gcf :=range _daac {var _dca []rune ;var _fgb []_fe .GlyphIndex ;for _ ,_gbe :=range _daac [_gcf ]{switch _aea :=_gbe .Encoder ().(type ){case *_c .IdentityEncoder :_beb :=_aea .RegisteredRunes ();_eegd :=make ([]_fe .GlyphIndex ,len (_beb ));for _bab ,_bag :=range _beb {_eegd [_bab ]=_fe .GlyphIndex (_bag );
};_fgb =append (_fgb ,_eegd ...);case *_c .TrueTypeFontEncoder :_ggf :=_aea .RegisteredRunes ();_dca =append (_dca ,_ggf ...);case _c .SimpleEncoder :_fgd :=_aea .Charcodes ();for _ ,_abg :=range _fgd {_de ,_gbed :=_aea .CharcodeToRune (_abg );if !_gbed {_gc .Log .Debug ("\u0043\u0068a\u0072\u0063\u006f\u0064\u0065\u003c\u002d\u003e\u0072\u0075\u006e\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064: \u0025\u0064",_abg );
continue ;};_dca =append (_dca ,_de );};};};_fg =_aaf (_gcf ,_dca ,_fgb );if _fg !=nil {_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006eg\u0020f\u006f\u006e\u0074\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_fg );
return nil ,_fg ;};_ab [_gcf ]=struct{}{};};return _ab ,nil ;};

// Optimize optimizes PDF objects to decrease PDF size.
func (_gff *CombineDuplicateDirectObjects )Optimize (objects []_f .PdfObject )(_def []_f .PdfObject ,_edc error ){_cbfa (objects );_aafa :=make (map[string ][]*_f .PdfObjectDictionary );var _egf func (_bgd *_f .PdfObjectDictionary );_egf =func (_gde *_f .PdfObjectDictionary ){for _ ,_fdff :=range _gde .Keys (){_bdd :=_gde .Get (_fdff );
if _cab ,_bec :=_bdd .(*_f .PdfObjectDictionary );_bec {_fdfb :=_bb .New ();_fdfb .Write ([]byte (_cab .WriteString ()));_ffc :=string (_fdfb .Sum (nil ));_aafa [_ffc ]=append (_aafa [_ffc ],_cab );_egf (_cab );};};};for _ ,_ffe :=range objects {_bgcb ,_cdga :=_ffe .(*_f .PdfIndirectObject );
if !_cdga {continue ;};if _bbd ,_aef :=_bgcb .PdfObject .(*_f .PdfObjectDictionary );_aef {_egf (_bbd );};};_aeg :=make ([]_f .PdfObject ,0,len (_aafa ));_geg :=make (map[_f .PdfObject ]_f .PdfObject );for _ ,_defc :=range _aafa {if len (_defc )< 2{continue ;
};_caf :=_f .MakeDict ();_caf .Merge (_defc [0]);_fefdf :=_f .MakeIndirectObject (_caf );_aeg =append (_aeg ,_fefdf );for _eba :=0;_eba < len (_defc );_eba ++{_gfbb :=_defc [_eba ];_geg [_gfbb ]=_fefdf ;};};_def =make ([]_f .PdfObject ,len (objects ));
copy (_def ,objects );_def =append (_aeg ,_def ...);_gabge (_def ,_geg );return _def ,nil ;};type imageModifications struct{Scale float64 ;Encoding _f .StreamEncoder ;};type content struct{_aace string ;_dda *_bbb .PdfPageResources ;};

// Optimize optimizes PDF objects to decrease PDF size.
func (_ebed *ObjectStreams )Optimize (objects []_f .PdfObject )(_ebeg []_f .PdfObject ,_aade error ){_becd :=&_f .PdfObjectStreams {};_cada :=make ([]_f .PdfObject ,0,len (objects ));for _ ,_gca :=range objects {if _ddfb ,_gfce :=_gca .(*_f .PdfIndirectObject );
_gfce &&_ddfb .GenerationNumber ==0{_becd .Append (_gca );}else {_cada =append (_cada ,_gca );};};if _becd .Len ()==0{return _cada ,nil ;};_ebeg =make ([]_f .PdfObject ,0,len (_cada )+_becd .Len ()+1);if _becd .Len ()> 1{_ebeg =append (_ebeg ,_becd );};
_ebeg =append (_ebeg ,_becd .Elements ()...);_ebeg =append (_ebeg ,_cada ...);return _ebeg ,nil ;};func _fgg (_dgec _f .PdfObject )(_befc string ,_fea []_f .PdfObject ){var _cgbg _ae .Buffer ;switch _ceag :=_dgec .(type ){case *_f .PdfIndirectObject :_fea =append (_fea ,_ceag );
_dgec =_ceag .PdfObject ;};switch _dagb :=_dgec .(type ){case *_f .PdfObjectStream :if _afce ,_bebfd :=_f .DecodeStream (_dagb );_bebfd ==nil {_cgbg .Write (_afce );_fea =append (_fea ,_dagb );};case *_f .PdfObjectArray :for _ ,_fbcbc :=range _dagb .Elements (){switch _agdb :=_fbcbc .(type ){case *_f .PdfObjectStream :if _eda ,_bcf :=_f .DecodeStream (_agdb );
_bcf ==nil {_cgbg .Write (_eda );_fea =append (_fea ,_agdb );};};};};return _cgbg .String (),_fea ;};

// CombineDuplicateStreams combines duplicated streams by its data hash.
// It implements interface model.Optimizer.
type CombineDuplicateStreams struct{};

// CombineDuplicateDirectObjects combines duplicated direct objects by its data hash.
// It implements interface model.Optimizer.
type CombineDuplicateDirectObjects struct{};

// Optimize optimizes PDF objects to decrease PDF size.
func (_cbg *CleanFonts )Optimize (objects []_f .PdfObject )(_deb []_f .PdfObject ,_ffb error ){var _gfb map[*_f .PdfObjectStream ]struct{};if _cbg .Subset {var _bae error ;_gfb ,_bae =_bgc (objects );if _bae !=nil {return nil ,_bae ;};};for _ ,_bee :=range objects {_bdgf ,_gcb :=_f .GetStream (_bee );
if !_gcb {continue ;};if _ ,_gab :=_gfb [_bdgf ];_gab {continue ;};_abgg ,_daaa :=_f .NewEncoderFromStream (_bdgf );if _daaa !=nil {_gc .Log .Debug ("\u0045\u0052RO\u0052\u0020\u0067e\u0074\u0074\u0069\u006eg e\u006eco\u0064\u0065\u0072\u003a\u0020\u0025\u0076 -\u0020\u0069\u0067\u006e\u006f\u0072\u0069n\u0067",_daaa );
continue ;};_geb ,_daaa :=_abgg .DecodeStream (_bdgf );if _daaa !=nil {_gc .Log .Debug ("\u0044\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0065r\u0072\u006f\u0072\u0020\u003a\u0020\u0025v\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006e\u0067",_daaa );
continue ;};if len (_geb )< 4{continue ;};_fdf :=string (_geb [:4]);if _fdf =="\u004f\u0054\u0054\u004f"{continue ;};if _fdf !="\u0000\u0001\u0000\u0000"&&_fdf !="\u0074\u0072\u0075\u0065"{continue ;};_ecf ,_daaa :=_fe .Parse (_ae .NewReader (_geb ));if _daaa !=nil {_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020P\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u003a\u0020%\u0076\u0020\u002d\u0020\u0069\u0067\u006eo\u0072\u0069\u006e\u0067",_daaa );
continue ;};_daaa =_ecf .Optimize ();if _daaa !=nil {continue ;};var _ed _ae .Buffer ;_daaa =_ecf .Write (&_ed );if _daaa !=nil {_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020W\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u003a\u0020%\u0076\u0020\u002d\u0020\u0069\u0067\u006eo\u0072\u0069\u006e\u0067",_daaa );
continue ;};if _ed .Len ()> len (_geb ){_gc .Log .Debug ("\u0052\u0065-\u0077\u0072\u0069\u0074\u0074\u0065\u006e\u0020\u0066\u006f\u006e\u0074\u0020\u0069\u0073\u0020\u006c\u0061\u0072\u0067\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u006f\u0072\u0069\u0067\u0069\u006e\u0061\u006c\u0020\u002d\u0020\u0073\u006b\u0069\u0070");
continue ;};_gec ,_daaa :=_f .MakeStream (_ed .Bytes (),_f .NewFlateEncoder ());if _daaa !=nil {continue ;};*_bdgf =*_gec ;_bdgf .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_f .MakeInteger (int64 (_ed .Len ())));};return objects ,nil ;};

// Append appends optimizers to the chain.
func (_ee *Chain )Append (optimizers ..._bbb .Optimizer ){_ee ._cd =append (_ee ._cd ,optimizers ...)};func _eabb (_bfc *_bbb .XObjectImage ,_adee imageModifications )error {_aegaa ,_abe :=_bfc .ToImage ();if _abe !=nil {return _abe ;};if _adee .Scale !=0{_aegaa ,_abe =_bdfc (_aegaa ,_adee .Scale );
if _abe !=nil {return _abe ;};};if _adee .Encoding !=nil {_bfc .Filter =_adee .Encoding ;};_bdbf :=_f .MakeDict ();_bdbf .Set ("\u0051u\u0061\u006c\u0069\u0074\u0079",_f .MakeInteger (100));_bdbf .Set ("\u0050r\u0065\u0064\u0069\u0063\u0074\u006fr",_f .MakeInteger (1));
_bfc .Decode =nil ;if _abe =_bfc .SetImage (_aegaa ,nil );_abe !=nil {return _abe ;};_bfc .ToPdfObject ();return nil ;};func _dd (_bc *_f .PdfObjectStream )error {_acc ,_gad :=_f .DecodeStream (_bc );if _gad !=nil {return _gad ;};_fbc :=_e .NewContentStreamParser (string (_acc ));
_eeg ,_gad :=_fbc .Parse ();if _gad !=nil {return _gad ;};_eeg =_cg (_eeg );_gd :=_eeg .Bytes ();if len (_gd )>=len (_acc ){return nil ;};_eeb ,_gad :=_f .MakeStream (_eeg .Bytes (),_f .NewFlateEncoder ());if _gad !=nil {return _gad ;};_bc .Stream =_eeb .Stream ;
_bc .Merge (_eeb .PdfObjectDictionary );return nil ;};