//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package optimize ;import (_dg "bytes";_b "crypto/md5";_d "errors";_ac "fmt";_g "github.com/unidoc/unipdf/v3/common";_fe "github.com/unidoc/unipdf/v3/contentstream";_fg "github.com/unidoc/unipdf/v3/core";_e "github.com/unidoc/unipdf/v3/extractor";_ag "github.com/unidoc/unipdf/v3/internal/imageutil";
_gf "github.com/unidoc/unipdf/v3/internal/textencoding";_cac "github.com/unidoc/unipdf/v3/model";_ca "github.com/unidoc/unitype";_c "golang.org/x/image/draw";_f "math";_cd "strings";);func _feb (_ga *_fg .PdfObjectStream )error {_de ,_af :=_fg .DecodeStream (_ga );
if _af !=nil {return _af ;};_fec :=_fe .NewContentStreamParser (string (_de ));_acg ,_af :=_fec .Parse ();if _af !=nil {return _af ;};_acg =_eb (_acg );_bag :=_acg .Bytes ();if len (_bag )>=len (_de ){return nil ;};_gc ,_af :=_fg .MakeStream (_acg .Bytes (),_fg .NewFlateEncoder ());
if _af !=nil {return _af ;};_ga .Stream =_gc .Stream ;_ga .Merge (_gc .PdfObjectDictionary );return nil ;};func _adf (_cfbc []_fg .PdfObject )[]*imageInfo {_bfg :=_fg .PdfObjectName ("\u0053u\u0062\u0074\u0079\u0070\u0065");_dfga :=make (map[*_fg .PdfObjectStream ]struct{});
var _cdeb []*imageInfo ;for _ ,_cfedg :=range _cfbc {_gde ,_fdg :=_fg .GetStream (_cfedg );if !_fdg {continue ;};if _ ,_gffc :=_dfga [_gde ];_gffc {continue ;};_dfga [_gde ]=struct{}{};_fbcd :=_gde .PdfObjectDictionary .Get (_bfg );_fde ,_fdg :=_fg .GetName (_fbcd );
if !_fdg ||string (*_fde )!="\u0049\u006d\u0061g\u0065"{continue ;};_fcbe :=&imageInfo {Stream :_gde ,BitsPerComponent :8};if _eece ,_dba :=_fg .GetIntVal (_gde .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));
_dba {_fcbe .BitsPerComponent =_eece ;};if _gdc ,_agac :=_fg .GetIntVal (_gde .Get ("\u0057\u0069\u0064t\u0068"));_agac {_fcbe .Width =_gdc ;};if _dbec ,_fgb :=_fg .GetIntVal (_gde .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));_fgb {_fcbe .Height =_dbec ;
};_ccf ,_gcb :=_cac .NewPdfColorspaceFromPdfObject (_gde .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));if _gcb !=nil {_g .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gcb );continue ;};if _ccf ==nil {_baed ,_adeb :=_fg .GetName (_gde .Get ("\u0046\u0069\u006c\u0074\u0065\u0072"));
if _adeb {switch _baed .String (){case "\u0043\u0043\u0049\u0054\u0054\u0046\u0061\u0078\u0044e\u0063\u006f\u0064\u0065","J\u0042\u0049\u0047\u0032\u0044\u0065\u0063\u006f\u0064\u0065":_ccf =_cac .NewPdfColorspaceDeviceGray ();_fcbe .BitsPerComponent =1;
};};};switch _agfe :=_ccf .(type ){case *_cac .PdfColorspaceDeviceRGB :_fcbe .ColorComponents =3;case *_cac .PdfColorspaceDeviceGray :_fcbe .ColorComponents =1;default:_g .Log .Debug ("\u004f\u0070\u0074\u0069\u006d\u0069\u007aa\u0074\u0069\u006fn\u0020\u0069\u0073 \u006e\u006ft\u0020\u0073\u0075\u0070\u0070\u006fr\u0074ed\u0020\u0066\u006f\u0072\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u0025\u0054\u0020\u002d\u0020\u0073\u006b\u0069\u0070",_agfe );
continue ;};_cdeb =append (_cdeb ,_fcbe );};return _cdeb ;};func _bcc (_gge []*_fg .PdfIndirectObject )map[string ][]string {_acb :=map[string ][]string {};for _ ,_dgbb :=range _gge {_gbab ,_fbga :=_fg .GetDict (_dgbb .PdfObject );if !_fbga {continue ;
};_aaa :=_gbab .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_agfa :=_fg .TraceToDirectObject (_aaa );var _cbc []string ;if _dca ,_dcaa :=_agfa .(*_fg .PdfObjectArray );_dcaa {for _ ,_egfc :=range _dca .Elements (){_edec ,_fad :=_fdf (_egfc );
if _fad !=nil {continue ;};_cbc =append (_cbc ,_edec );};};_acfc :=_cd .Join (_cbc ,"\u0020");_bacd :=_fe .NewContentStreamParser (_acfc );_eeb ,_dce :=_bacd .Parse ();if _dce !=nil {continue ;};for _ ,_ecdf :=range *_eeb {_fbc :=_ecdf .Operand ;_fba :=_ecdf .Params ;
switch _fbc {case "\u0044\u006f":_bccd :=_fba [0].String ();if _ ,_fbb :=_acb ["\u0058O\u0062\u006a\u0065\u0063\u0074"];!_fbb {_acb ["\u0058O\u0062\u006a\u0065\u0063\u0074"]=[]string {_bccd };}else {_acb ["\u0058O\u0062\u006a\u0065\u0063\u0074"]=append (_acb ["\u0058O\u0062\u006a\u0065\u0063\u0074"],_bccd );
};case "\u0054\u0066":_cgf :=_fba [0].String ();if _ ,_dffe :=_acb ["\u0046\u006f\u006e\u0074"];!_dffe {_acb ["\u0046\u006f\u006e\u0074"]=[]string {_cgf };}else {_acb ["\u0046\u006f\u006e\u0074"]=append (_acb ["\u0046\u006f\u006e\u0074"],_cgf );};case "\u0067\u0073":_acgb :=_fba [0].String ();
if _ ,_abb :=_acb ["\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e"];!_abb {_acb ["\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e"]=[]string {_acgb };}else {_acb ["\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e"]=append (_acb ["\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e"],_acgb );
};};};};return _acb ;};

// ObjectStreams groups PDF objects to object streams.
// It implements interface model.Optimizer.
type ObjectStreams struct{};

// Append appends optimizers to the chain.
func (_ba *Chain )Append (optimizers ..._cac .Optimizer ){_ba ._cb =append (_ba ._cb ,optimizers ...)};

// Chain allows to use sequence of optimizers.
// It implements interface model.Optimizer.
type Chain struct{_cb []_cac .Optimizer };

// Optimize optimizes PDF objects to decrease PDF size.
func (_bgfca *CompressStreams )Optimize (objects []_fg .PdfObject )(_ggc []_fg .PdfObject ,_eead error ){_ggc =make ([]_fg .PdfObject ,len (objects ));copy (_ggc ,objects );for _ ,_eec :=range objects {_bgd ,_bbgf :=_fg .GetStream (_eec );if !_bbgf {continue ;
};if _dcf :=_bgd .Get ("\u0046\u0069\u006c\u0074\u0065\u0072");_dcf !=nil {if _ ,_cbe :=_fg .GetName (_dcf );_cbe {continue ;};if _bbd ,_ffde :=_fg .GetArray (_dcf );_ffde &&_bbd .Len ()> 0{continue ;};};_egdd :=_fg .NewFlateEncoder ();var _ecfg []byte ;
_ecfg ,_eead =_egdd .EncodeBytes (_bgd .Stream );if _eead !=nil {return _ggc ,_eead ;};_accd :=_egdd .MakeStreamDict ();if len (_ecfg )+len (_accd .WriteString ())< len (_bgd .Stream ){_bgd .Stream =_ecfg ;_bgd .PdfObjectDictionary .Merge (_accd );_bgd .PdfObjectDictionary .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_fg .MakeInteger (int64 (len (_bgd .Stream ))));
};};return _ggc ,nil ;};type objectStructure struct{_faadg *_fg .PdfObjectDictionary ;_fge *_fg .PdfObjectDictionary ;_ddcd []*_fg .PdfIndirectObject ;};

// Optimize optimizes PDF objects to decrease PDF size.
func (_be *Chain )Optimize (objects []_fg .PdfObject )(_acc []_fg .PdfObject ,_cc error ){_fc :=objects ;for _ ,_ab :=range _be ._cb {_abf ,_dc :=_ab .Optimize (_fc );if _dc !=nil {_g .Log .Debug ("\u0045\u0052\u0052OR\u0020\u004f\u0070\u0074\u0069\u006d\u0069\u007a\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u002b\u0076",_dc );
continue ;};_fc =_abf ;};return _fc ,nil ;};func _bgge (_bge []_fg .PdfObject )objectStructure {_cfc :=objectStructure {};_ecdda :=false ;for _ ,_aggc :=range _bge {switch _eedb :=_aggc .(type ){case *_fg .PdfIndirectObject :_cgde ,_agde :=_fg .GetDict (_eedb );
if !_agde {continue ;};_cdc ,_agde :=_fg .GetName (_cgde .Get ("\u0054\u0079\u0070\u0065"));if !_agde {continue ;};switch _cdc .String (){case "\u0043a\u0074\u0061\u006c\u006f\u0067":_cfc ._faadg =_cgde ;_ecdda =true ;};};if _ecdda {break ;};};if !_ecdda {return _cfc ;
};_dgcb ,_fbbe :=_fg .GetDict (_cfc ._faadg .Get ("\u0050\u0061\u0067e\u0073"));if !_fbbe {return _cfc ;};_cfc ._fge =_dgcb ;_ebgg ,_fbbe :=_fg .GetArray (_dgcb .Get ("\u004b\u0069\u0064\u0073"));if !_fbbe {return _cfc ;};for _ ,_dacec :=range _ebgg .Elements (){_bddd ,_eaa :=_fg .GetIndirect (_dacec );
if !_eaa {break ;};_cfc ._ddcd =append (_cfc ._ddcd ,_bddd );};return _cfc ;};

// CompressStreams compresses uncompressed streams.
// It implements interface model.Optimizer.
type CompressStreams struct{};func _ff (_ce []_fg .PdfObject )(_afdg map[*_fg .PdfObjectStream ]struct{},_ee error ){_afdg =map[*_fg .PdfObjectStream ]struct{}{};_eca :=map[*_cac .PdfFont ]struct{}{};_deb :=_bgge (_ce );for _ ,_efe :=range _deb ._ddcd {_cea ,_bda :=_fg .GetDict (_efe .PdfObject );
if !_bda {continue ;};_bcd ,_bda :=_fg .GetDict (_cea .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s"));if !_bda {continue ;};_da ,_ :=_fdbd (_cea .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));_efga ,_fae :=_cac .NewPdfPageResourcesFromDict (_bcd );
if _fae !=nil {return nil ,_fae ;};_bdc :=[]content {{_ede :_da ,_cag :_efga }};_db :=_eff (_cea .Get ("\u0041\u006e\u006e\u006f\u0074\u0073"));if _db !=nil {_bdc =append (_bdc ,_db ...);};for _ ,_ded :=range _bdc {_efeb ,_dbg :=_e .NewFromContents (_ded ._ede ,_ded ._cag );
if _dbg !=nil {return nil ,_dbg ;};_eee ,_ ,_ ,_dbg :=_efeb .ExtractPageText ();if _dbg !=nil {return nil ,_dbg ;};for _ ,_bef :=range _eee .Marks ().Elements (){if _bef .Font ==nil {continue ;};if _ ,_fced :=_eca [_bef .Font ];!_fced {_eca [_bef .Font ]=struct{}{};
};};};};_ddc :=map[*_fg .PdfObjectStream ][]*_cac .PdfFont {};for _bac :=range _eca {_dagb :=_bac .FontDescriptor ();if _dagb ==nil ||_dagb .FontFile2 ==nil {continue ;};_cg ,_gae :=_fg .GetStream (_dagb .FontFile2 );if !_gae {continue ;};_ddc [_cg ]=append (_ddc [_cg ],_bac );
};for _ecb :=range _ddc {var _befa []rune ;var _ddg []_ca .GlyphIndex ;for _ ,_dde :=range _ddc [_ecb ]{switch _gff :=_dde .Encoder ().(type ){case *_gf .IdentityEncoder :_eef :=_gff .RegisteredRunes ();_ceb :=make ([]_ca .GlyphIndex ,len (_eef ));for _cf ,_bagb :=range _eef {_ceb [_cf ]=_ca .GlyphIndex (_bagb );
};_ddg =append (_ddg ,_ceb ...);case *_gf .TrueTypeFontEncoder :_befd :=_gff .RegisteredRunes ();_befa =append (_befa ,_befd ...);case _gf .SimpleEncoder :_fcf :=_gff .Charcodes ();for _ ,_ae :=range _fcf {_ed ,_edf :=_gff .CharcodeToRune (_ae );if !_edf {_g .Log .Debug ("\u0043\u0068a\u0072\u0063\u006f\u0064\u0065\u003c\u002d\u003e\u0072\u0075\u006e\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064: \u0025\u0064",_ae );
continue ;};_befa =append (_befa ,_ed );};};};_ee =_fd (_ecb ,_befa ,_ddg );if _ee !=nil {_g .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006eg\u0020f\u006f\u006e\u0074\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_ee );
return nil ,_ee ;};_afdg [_ecb ]=struct{}{};};return _afdg ,nil ;};type imageInfo struct{BitsPerComponent int ;ColorComponents int ;Width int ;Height int ;Stream *_fg .PdfObjectStream ;PPI float64 ;};

// Options describes PDF optimization parameters.
type Options struct{CombineDuplicateStreams bool ;CombineDuplicateDirectObjects bool ;ImageUpperPPI float64 ;ImageQuality int ;UseObjectStreams bool ;CombineIdenticalIndirectObjects bool ;CompressStreams bool ;CleanFonts bool ;SubsetFonts bool ;CleanContentstream bool ;
CleanUnusedResources bool ;};func _fd (_ddf *_fg .PdfObjectStream ,_abg []rune ,_ddd []_ca .GlyphIndex )error {_ddf ,_def :=_fg .GetStream (_ddf );if !_def {_g .Log .Debug ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u002d\u002d\u0020\u0041\u0042\u004f\u0052T\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006e\u0067");
return _d .New ("\u0066\u006f\u006e\u0074fi\u006c\u0065\u0032\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_badc ,_adc :=_fg .DecodeStream (_ddf );if _adc !=nil {_g .Log .Debug ("\u0044\u0065c\u006f\u0064\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_adc );
return _adc ;};_cba ,_adc :=_ca .Parse (_dg .NewReader (_badc ));if _adc !=nil {_g .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0020f\u006f\u006e\u0074",len (_ddf .Stream ));
return _adc ;};_gd :=_ddd ;if len (_abg )> 0{_fceb :=_cba .LookupRunes (_abg );_gd =append (_gd ,_fceb ...);};_cba ,_adc =_cba .SubsetKeepIndices (_gd );if _adc !=nil {_g .Log .Debug ("\u0045R\u0052\u004f\u0052\u0020s\u0075\u0062\u0073\u0065\u0074t\u0069n\u0067 \u0066\u006f\u006e\u0074\u003a\u0020\u0025v",_adc );
return _adc ;};var _daa _dg .Buffer ;_adc =_cba .Write (&_daa );if _adc !=nil {_g .Log .Debug ("\u0045\u0052\u0052\u004fR \u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u003a\u0020%\u0076",_adc );return _adc ;};if _daa .Len ()> len (_badc ){_g .Log .Debug ("\u0052\u0065-\u0077\u0072\u0069\u0074\u0074\u0065\u006e\u0020\u0066\u006f\u006e\u0074\u0020\u0069\u0073\u0020\u006c\u0061\u0072\u0067\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u006f\u0072\u0069\u0067\u0069\u006e\u0061\u006c\u0020\u002d\u0020\u0073\u006b\u0069\u0070");
return nil ;};_abe ,_adc :=_fg .MakeStream (_daa .Bytes (),_fg .NewFlateEncoder ());if _adc !=nil {_g .Log .Debug ("\u0045\u0052\u0052\u004fR \u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u003a\u0020%\u0076",_adc );return _adc ;
};*_ddf =*_abe ;_ddf .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_fg .MakeInteger (int64 (_daa .Len ())));return nil ;};

// Optimize optimizes PDF objects to decrease PDF size.
func (_gcd *Image )Optimize (objects []_fg .PdfObject )(_ebbc []_fg .PdfObject ,_deea error ){if _gcd .ImageQuality <=0{return objects ,nil ;};_cgfg :=_adf (objects );if len (_cgfg )==0{return objects ,nil ;};_begf :=make (map[_fg .PdfObject ]_fg .PdfObject );
_dae :=make (map[_fg .PdfObject ]struct{});for _ ,_fdd :=range _cgfg {_cdd :=_fdd .Stream .Get ("\u0053\u004d\u0061s\u006b");_dae [_cdd ]=struct{}{};};for _fgae ,_cfa :=range _cgfg {_bcae :=_cfa .Stream ;if _ ,_fdgc :=_dae [_bcae ];_fdgc {continue ;};_deaf ,_feca :=_cac .NewXObjectImageFromStream (_bcae );
if _feca !=nil {_g .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0025\u002b\u0076",_feca );continue ;};switch _deaf .Filter .(type ){case *_fg .JBIG2Encoder :continue ;case *_fg .CCITTFaxEncoder :continue ;};_eeadc ,_feca :=_deaf .ToImage ();
if _feca !=nil {_g .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0025\u002b\u0076",_feca );continue ;};_eeg :=_fg .NewDCTEncoder ();_eeg .ColorComponents =_eeadc .ColorComponents ;_eeg .Quality =_gcd .ImageQuality ;_eeg .BitsPerComponent =_cfa .BitsPerComponent ;
_eeg .Width =_cfa .Width ;_eeg .Height =_cfa .Height ;_gggg ,_feca :=_eeg .EncodeBytes (_eeadc .Data );if _feca !=nil {_g .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0025\u002b\u0076",_feca );continue ;};var _bddg _fg .StreamEncoder ;_bddg =_eeg ;
{_dabc :=_fg .NewFlateEncoder ();_cffe :=_fg .NewMultiEncoder ();_cffe .AddEncoder (_dabc );_cffe .AddEncoder (_eeg );_efa ,_cfaa :=_cffe .EncodeBytes (_eeadc .Data );if _cfaa !=nil {_g .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0025\u002b\u0076",_cfaa );
continue ;};if len (_efa )< len (_gggg ){_g .Log .Trace ("\u004d\u0075\u006c\u0074\u0069\u0020\u0065\u006e\u0063\u0020\u0069\u006d\u0070\u0072\u006f\u0076\u0065\u0073\u003a\u0020\u0025\u0064\u0020\u0074o\u0020\u0025\u0064\u0020\u0028o\u0072\u0069g\u0020\u0025\u0064\u0029",len (_gggg ),len (_efa ),len (_bcae .Stream ));
_gggg =_efa ;_bddg =_cffe ;};};_afa :=len (_bcae .Stream );if _afa < len (_gggg ){continue ;};_fab :=&_fg .PdfObjectStream {Stream :_gggg };_fab .PdfObjectReference =_bcae .PdfObjectReference ;_fab .PdfObjectDictionary =_fg .MakeDict ();_fab .Merge (_bcae .PdfObjectDictionary );
_fab .Merge (_bddg .MakeStreamDict ());_fab .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_fg .MakeInteger (int64 (len (_gggg ))));_begf [_bcae ]=_fab ;_cgfg [_fgae ].Stream =_fab ;};_ebbc =make ([]_fg .PdfObject ,len (objects ));copy (_ebbc ,objects );
_gef (_ebbc ,_begf );return _ebbc ,nil ;};func _fdbd (_gaac _fg .PdfObject )(_bfc string ,_cbeg []_fg .PdfObject ){var _geb _dg .Buffer ;switch _babf :=_gaac .(type ){case *_fg .PdfIndirectObject :_cbeg =append (_cbeg ,_babf );_gaac =_babf .PdfObject ;
};switch _acag :=_gaac .(type ){case *_fg .PdfObjectStream :if _ccce ,_dadb :=_fg .DecodeStream (_acag );_dadb ==nil {_geb .Write (_ccce );_cbeg =append (_cbeg ,_acag );};case *_fg .PdfObjectArray :for _ ,_gafa :=range _acag .Elements (){switch _ccgdg :=_gafa .(type ){case *_fg .PdfObjectStream :if _gfef ,_affe :=_fg .DecodeStream (_ccgdg );
_affe ==nil {_geb .Write (_gfef );_cbeg =append (_cbeg ,_ccgdg );};};};};return _geb .String (),_cbeg ;};

// CombineIdenticalIndirectObjects combines identical indirect objects.
// It implements interface model.Optimizer.
type CombineIdenticalIndirectObjects struct{};func _aab (_dagd string ,_eag []string )bool {for _ ,_decd :=range _eag {if _dagd ==_decd {return true ;};};return false ;};

// Optimize optimizes PDF objects to decrease PDF size.
func (_aggf *CombineDuplicateDirectObjects )Optimize (objects []_fg .PdfObject )(_deca []_fg .PdfObject ,_bbgd error ){_cfdf (objects );_gea :=make (map[string ][]*_fg .PdfObjectDictionary );var _agcd func (_dgd *_fg .PdfObjectDictionary );_agcd =func (_edba *_fg .PdfObjectDictionary ){for _ ,_ddba :=range _edba .Keys (){_ddbe :=_edba .Get (_ddba );
if _ade ,_dede :=_ddbe .(*_fg .PdfObjectDictionary );_dede {_ddcg :=_b .New ();_ddcg .Write ([]byte (_ade .WriteString ()));_dgdg :=string (_ddcg .Sum (nil ));_gea [_dgdg ]=append (_gea [_dgdg ],_ade );_agcd (_ade );};};};for _ ,_bbag :=range objects {_bfa ,_cge :=_bbag .(*_fg .PdfIndirectObject );
if !_cge {continue ;};if _eaff ,_fcdc :=_bfa .PdfObject .(*_fg .PdfObjectDictionary );_fcdc {_agcd (_eaff );};};_dda :=make ([]_fg .PdfObject ,0,len (_gea ));_bed :=make (map[_fg .PdfObject ]_fg .PdfObject );for _ ,_eefc :=range _gea {if len (_eefc )< 2{continue ;
};_egdgb :=_fg .MakeDict ();_egdgb .Merge (_eefc [0]);_cage :=_fg .MakeIndirectObject (_egdgb );_dda =append (_dda ,_cage );for _debd :=0;_debd < len (_eefc );_debd ++{_dgge :=_eefc [_debd ];_bed [_dgge ]=_cage ;};};_deca =make ([]_fg .PdfObject ,len (objects ));
copy (_deca ,objects );_deca =append (_dda ,_deca ...);_gef (_deca ,_bed );return _deca ,nil ;};

// CleanUnusedResources represents an optimizer used to clean unused resources.
type CleanUnusedResources struct{};func _cfdf (_dfc []_fg .PdfObject ){for _dbgeb ,_fgc :=range _dfc {switch _dcdc :=_fgc .(type ){case *_fg .PdfIndirectObject :_dcdc .ObjectNumber =int64 (_dbgeb +1);_dcdc .GenerationNumber =0;case *_fg .PdfObjectStream :_dcdc .ObjectNumber =int64 (_dbgeb +1);
_dcdc .GenerationNumber =0;case *_fg .PdfObjectStreams :_dcdc .ObjectNumber =int64 (_dbgeb +1);_dcdc .GenerationNumber =0;};};};func _eb (_ea *_fe .ContentStreamOperations )*_fe .ContentStreamOperations {if _ea ==nil {return nil ;};_eg :=_fe .ContentStreamOperations {};
for _ ,_bf :=range *_ea {switch _bf .Operand {case "\u0042\u0044\u0043","\u0042\u004d\u0043","\u0045\u004d\u0043":continue ;case "\u0054\u006d":if len (_bf .Params )==6{if _caf ,_gb :=_fg .GetNumbersAsFloat (_bf .Params );_gb ==nil {if _caf [0]==1&&_caf [1]==0&&_caf [2]==0&&_caf [3]==1{_bf =&_fe .ContentStreamOperation {Params :[]_fg .PdfObject {_bf .Params [4],_bf .Params [5]},Operand :"\u0054\u0064"};
};};};};_eg =append (_eg ,_bf );};return &_eg ;};

// Image optimizes images by rewrite images into JPEG format with quality equals to ImageQuality.
// TODO(a5i): Add support for inline images.
// It implements interface model.Optimizer.
type Image struct{ImageQuality int ;};func _dgec (_facg []_fg .PdfObject )(map[_fg .PdfObject ]struct{},error ){_cce :=_bgge (_facg );_dgc :=_cce ._ddcd ;_abef :=make (map[_fg .PdfObject ]struct{});_bdbd :=_bcc (_dgc );for _ ,_egdg :=range _dgc {_egcg ,_bdd :=_fg .GetDict (_egdg .PdfObject );
if !_bdd {continue ;};_ecfe ,_bdd :=_fg .GetDict (_egcg .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s"));if !_bdd {continue ;};_ebg :=_bdbd ["\u0058O\u0062\u006a\u0065\u0063\u0074"];_fecd ,_bdd :=_fg .GetDict (_ecfe .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
if _bdd {_ddee :=_ece (_fecd );for _ ,_eaf :=range _ddee {if _aab (_eaf ,_ebg ){continue ;};_bdde :=*_fg .MakeName (_eaf );_ggf :=_fecd .Get (_bdde );_abef [_ggf ]=struct{}{};_fecd .Remove (_bdde );_eea :=_gdg (_ggf ,_abef );if _eea !=nil {_g .Log .Debug ("\u0066\u0061\u0069\u006ce\u0064\u0020\u0074\u006f\u0020\u0074\u0072\u0061\u0076\u0065r\u0073e\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0025\u0076",_ggf );
};};};_bbff ,_bdd :=_fg .GetDict (_ecfe .Get ("\u0046\u006f\u006e\u0074"));_dab :=_bdbd ["\u0046\u006f\u006e\u0074"];if _bdd {_fcbf :=_ece (_bbff );for _ ,_cdb :=range _fcbf {if _aab (_cdb ,_dab ){continue ;};_efgb :=*_fg .MakeName (_cdb );_fed :=_bbff .Get (_efgb );
_abef [_fed ]=struct{}{};_bbff .Remove (_efgb );_dacg :=_gdg (_fed ,_abef );if _dacg !=nil {_g .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074 %\u0076\u000a",_fed );
};};};_dgfd ,_bdd :=_fg .GetDict (_ecfe .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e"));if _bdd {_gce :=_ece (_dgfd );_bfd :=_bdbd ["\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e"];for _ ,_cafg :=range _gce {if _aab (_cafg ,_bfd ){continue ;};_fee :=*_fg .MakeName (_cafg );
_bae :=_dgfd .Get (_fee );_abef [_bae ]=struct{}{};_dgfd .Remove (_fee );_acf :=_gdg (_bae ,_abef );if _acf !=nil {_g .Log .Debug ("\u0066\u0061i\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074 %\u0076\u000a",_bae );
};};};};return _abef ,nil ;};

// Optimize optimizes PDF objects to decrease PDF size.
func (_bedf *CombineDuplicateStreams )Optimize (objects []_fg .PdfObject )(_bee []_fg .PdfObject ,_cff error ){_badd :=make (map[_fg .PdfObject ]_fg .PdfObject );_efbb :=make (map[_fg .PdfObject ]struct{});_edecc :=make (map[string ][]*_fg .PdfObjectStream );
for _ ,_cda :=range objects {if _gcf ,_fff :=_cda .(*_fg .PdfObjectStream );_fff {_cdea :=_b .New ();_cdea .Write (_gcf .Stream );_cdea .Write ([]byte (_gcf .PdfObjectDictionary .WriteString ()));_ebb :=string (_cdea .Sum (nil ));_edecc [_ebb ]=append (_edecc [_ebb ],_gcf );
};};for _ ,_beg :=range _edecc {if len (_beg )< 2{continue ;};_abfb :=_beg [0];for _baa :=1;_baa < len (_beg );_baa ++{_bacg :=_beg [_baa ];_badd [_bacg ]=_abfb ;_efbb [_bacg ]=struct{}{};};};_bee =make ([]_fg .PdfObject ,0,len (objects )-len (_efbb ));
for _ ,_ged :=range objects {if _ ,_cdeg :=_efbb [_ged ];_cdeg {continue ;};_bee =append (_bee ,_ged );};_gef (_bee ,_badd );return _bee ,nil ;};

// CleanContentstream cleans up redundant operands in content streams, including Page and XObject Form
// contents. This process includes:
// 1. Marked content operators are removed.
// 2. Some operands are simplified (shorter form).
// TODO: Add more reduction methods and improving the methods for identifying unnecessary operands.
type CleanContentstream struct{};

// New creates a optimizers chain from options.
func New (options Options )*Chain {_feaa :=new (Chain );if options .CleanFonts ||options .SubsetFonts {_feaa .Append (&CleanFonts {Subset :options .SubsetFonts });};if options .CleanContentstream {_feaa .Append (new (CleanContentstream ));};if options .ImageUpperPPI > 0{_edee :=new (ImagePPI );
_edee .ImageUpperPPI =options .ImageUpperPPI ;_feaa .Append (_edee );};if options .ImageQuality > 0{_ccef :=new (Image );_ccef .ImageQuality =options .ImageQuality ;_feaa .Append (_ccef );};if options .CombineDuplicateDirectObjects {_feaa .Append (new (CombineDuplicateDirectObjects ));
};if options .CombineDuplicateStreams {_feaa .Append (new (CombineDuplicateStreams ));};if options .CombineIdenticalIndirectObjects {_feaa .Append (new (CombineIdenticalIndirectObjects ));};if options .UseObjectStreams {_feaa .Append (new (ObjectStreams ));
};if options .CompressStreams {_feaa .Append (new (CompressStreams ));};if options .CleanUnusedResources {_feaa .Append (new (CleanUnusedResources ));};return _feaa ;};

// Optimize optimizes PDF objects to decrease PDF size.
func (_aa *CleanFonts )Optimize (objects []_fg .PdfObject )(_gbe []_fg .PdfObject ,_dea error ){var _gg map[*_fg .PdfObjectStream ]struct{};if _aa .Subset {var _aff error ;_gg ,_aff =_ff (objects );if _aff !=nil {_g .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0073u\u0062s\u0065\u0074\u0074\u0069\u006e\u0067\u003a \u0025\u0076",_aff );
return nil ,_aff ;};};for _ ,_daf :=range objects {_bba ,_edfa :=_fg .GetStream (_daf );if !_edfa {continue ;};if _ ,_cfb :=_gg [_bba ];_cfb {continue ;};_ccd ,_fca :=_fg .NewEncoderFromStream (_bba );if _fca !=nil {_g .Log .Debug ("\u0045\u0052RO\u0052\u0020\u0067e\u0074\u0074\u0069\u006eg e\u006eco\u0064\u0065\u0072\u003a\u0020\u0025\u0076 -\u0020\u0069\u0067\u006e\u006f\u0072\u0069n\u0067",_fca );
continue ;};_gba ,_fca :=_ccd .DecodeStream (_bba );if _fca !=nil {_g .Log .Debug ("\u0044\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0065r\u0072\u006f\u0072\u0020\u003a\u0020\u0025v\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006e\u0067",_fca );
continue ;};if len (_gba )< 4{continue ;};_gbed :=string (_gba [:4]);if _gbed =="\u004f\u0054\u0054\u004f"{continue ;};if _gbed !="\u0000\u0001\u0000\u0000"&&_gbed !="\u0074\u0072\u0075\u0065"{continue ;};_ffg ,_fca :=_ca .Parse (_dg .NewReader (_gba ));
if _fca !=nil {_g .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020P\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u003a\u0020%\u0076\u0020\u002d\u0020\u0069\u0067\u006eo\u0072\u0069\u006e\u0067",_fca );continue ;};_fca =_ffg .Optimize ();
if _fca !=nil {_g .Log .Debug ("\u0045\u0052RO\u0052\u0020\u004fp\u0074\u0069\u006d\u0069zin\u0067 f\u006f\u006e\u0074\u003a\u0020\u0025\u0076 -\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067",_fca );continue ;};var _fac _dg .Buffer ;_fca =_ffg .Write (&_fac );
if _fca !=nil {_g .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020W\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u003a\u0020%\u0076\u0020\u002d\u0020\u0069\u0067\u006eo\u0072\u0069\u006e\u0067",_fca );continue ;};if _fac .Len ()> len (_gba ){_g .Log .Debug ("\u0052\u0065-\u0077\u0072\u0069\u0074\u0074\u0065\u006e\u0020\u0066\u006f\u006e\u0074\u0020\u0069\u0073\u0020\u006c\u0061\u0072\u0067\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u006f\u0072\u0069\u0067\u0069\u006e\u0061\u006c\u0020\u002d\u0020\u0073\u006b\u0069\u0070");
continue ;};_dec ,_fca :=_fg .MakeStream (_fac .Bytes (),_fg .NewFlateEncoder ());if _fca !=nil {continue ;};*_bba =*_dec ;_bba .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_fg .MakeInteger (int64 (_fac .Len ())));};return objects ,nil ;};

// ImagePPI optimizes images by scaling images such that the PPI (pixels per inch) is never higher than ImageUpperPPI.
// TODO(a5i): Add support for inline images.
// It implements interface model.Optimizer.
type ImagePPI struct{ImageUpperPPI float64 ;};type imageModifications struct{Scale float64 ;Encoding _fg .StreamEncoder ;};func _aee (_gfd *_cac .Image ,_cgc float64 )(*_cac .Image ,error ){_cbg ,_bbe :=_gfd .ToGoImage ();if _bbe !=nil {return nil ,_bbe ;
};var _fddd _ag .Image ;_dbaf ,_agaa :=_cbg .(*_ag .Monochrome );if _agaa {if _bbe =_dbaf .ResolveDecode ();_bbe !=nil {return nil ,_bbe ;};_fddd ,_bbe =_dbaf .Scale (_cgc );if _bbe !=nil {return nil ,_bbe ;};}else {_cbaa :=int (_f .RoundToEven (float64 (_gfd .Width )*_cgc ));
_cfd :=int (_f .RoundToEven (float64 (_gfd .Height )*_cgc ));_fddd ,_bbe =_ag .NewImage (_cbaa ,_cfd ,int (_gfd .BitsPerComponent ),_gfd .ColorComponents ,nil ,nil ,nil );if _bbe !=nil {return nil ,_bbe ;};_c .CatmullRom .Scale (_fddd ,_fddd .Bounds (),_cbg ,_cbg .Bounds (),_c .Over ,&_c .Options {});
};_bdbdc :=_fddd .Base ();_ddbc :=&_cac .Image {Width :int64 (_bdbdc .Width ),Height :int64 (_bdbdc .Height ),BitsPerComponent :int64 (_bdbdc .BitsPerComponent ),ColorComponents :_bdbdc .ColorComponents ,Data :_bdbdc .Data };_ddbc .SetDecode (_bdbdc .Decode );
_ddbc .SetAlpha (_bdbdc .Alpha );return _ddbc ,nil ;};func _ece (_daba *_fg .PdfObjectDictionary )[]string {_gecd :=[]string {};for _ ,_bgg :=range _daba .Keys (){_gecd =append (_gecd ,_bgg .String ());};return _gecd ;};

// CombineDuplicateStreams combines duplicated streams by its data hash.
// It implements interface model.Optimizer.
type CombineDuplicateStreams struct{};func _gef (_gbad []_fg .PdfObject ,_gcgb map[_fg .PdfObject ]_fg .PdfObject ){if len (_gcgb )==0{return ;};for _ggfb ,_afcc :=range _gbad {if _gadg ,_gdd :=_gcgb [_afcc ];_gdd {_gbad [_ggfb ]=_gadg ;continue ;};_gcgb [_afcc ]=_afcc ;
switch _ffa :=_afcc .(type ){case *_fg .PdfObjectArray :_fcbbf :=make ([]_fg .PdfObject ,_ffa .Len ());copy (_fcbbf ,_ffa .Elements ());_gef (_fcbbf ,_gcgb );for _aabe ,_bgba :=range _fcbbf {_ffa .Set (_aabe ,_bgba );};case *_fg .PdfObjectStreams :_gef (_ffa .Elements (),_gcgb );
case *_fg .PdfObjectStream :_gdb :=[]_fg .PdfObject {_ffa .PdfObjectDictionary };_gef (_gdb ,_gcgb );_ffa .PdfObjectDictionary =_gdb [0].(*_fg .PdfObjectDictionary );case *_fg .PdfObjectDictionary :_adcd :=_ffa .Keys ();_bbdf :=make ([]_fg .PdfObject ,len (_adcd ));
for _cbce ,_cbf :=range _adcd {_bbdf [_cbce ]=_ffa .Get (_cbf );};_gef (_bbdf ,_gcgb );for _gdee ,_gefa :=range _adcd {_ffa .Set (_gefa ,_bbdf [_gdee ]);};case *_fg .PdfIndirectObject :_beac :=[]_fg .PdfObject {_ffa .PdfObject };_gef (_beac ,_gcgb );_ffa .PdfObject =_beac [0];
};};};

// Optimize optimizes PDF objects to decrease PDF size.
func (_defc *ObjectStreams )Optimize (objects []_fg .PdfObject )(_adfb []_fg .PdfObject ,_agaf error ){_ecgd :=&_fg .PdfObjectStreams {};_ecbf :=make ([]_fg .PdfObject ,0,len (objects ));for _ ,_fbae :=range objects {if _edgbd ,_abbeb :=_fbae .(*_fg .PdfIndirectObject );
_abbeb &&_edgbd .GenerationNumber ==0{_ecgd .Append (_fbae );}else {_ecbf =append (_ecbf ,_fbae );};};if _ecgd .Len ()==0{return _ecbf ,nil ;};_adfb =make ([]_fg .PdfObject ,0,len (_ecbf )+_ecgd .Len ()+1);if _ecgd .Len ()> 1{_adfb =append (_adfb ,_ecgd );
};_adfb =append (_adfb ,_ecgd .Elements ()...);_adfb =append (_adfb ,_ecbf ...);return _adfb ,nil ;};func _fdf (_gcgd _fg .PdfObject )(string ,error ){_feff :=_fg .TraceToDirectObject (_gcgd );switch _abbe :=_feff .(type ){case *_fg .PdfObjectString :return _abbe .Str (),nil ;
case *_fg .PdfObjectStream :_cde ,_cgb :=_fg .DecodeStream (_abbe );if _cgb !=nil {return "",_cgb ;};return string (_cde ),nil ;};return "",_ac .Errorf ("\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072e\u0061\u006d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0068\u006f\u006c\u0064\u0065\u0072\u0020\u0028\u0025\u0054\u0029",_feff );
};

// CombineDuplicateDirectObjects combines duplicated direct objects by its data hash.
// It implements interface model.Optimizer.
type CombineDuplicateDirectObjects struct{};

// GetOptimizers gets the list of optimizers in chain `c`.
func (_ef *Chain )GetOptimizers ()[]_cac .Optimizer {return _ef ._cb };

// Optimize optimizes PDF objects to decrease PDF size.
func (_bg *CleanContentstream )Optimize (objects []_fg .PdfObject )(_bb []_fg .PdfObject ,_baf error ){_fb :=map[*_fg .PdfObjectStream ]struct{}{};var _dcc []*_fg .PdfObjectStream ;_agg :=func (_efg *_fg .PdfObjectStream ){if _ ,_ad :=_fb [_efg ];!_ad {_fb [_efg ]=struct{}{};
_dcc =append (_dcc ,_efg );};};_bdb :=map[_fg .PdfObject ]bool {};_bdg :=map[_fg .PdfObject ]bool {};for _ ,_bbf :=range objects {switch _fcd :=_bbf .(type ){case *_fg .PdfIndirectObject :switch _ec :=_fcd .PdfObject .(type ){case *_fg .PdfObjectDictionary :if _afd ,_fgd :=_fg .GetName (_ec .Get ("\u0054\u0079\u0070\u0065"));
!_fgd ||_afd .String ()!="\u0050\u0061\u0067\u0065"{continue ;};if _ge ,_egg :=_fg .GetStream (_ec .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));_egg {_agg (_ge );}else if _fgf ,_dd :=_fg .GetArray (_ec .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));
_dd {var _bdf []*_fg .PdfObjectStream ;for _ ,_agd :=range _fgf .Elements (){if _fgg ,_df :=_fg .GetStream (_agd );_df {_bdf =append (_bdf ,_fgg );};};if len (_bdf )> 0{var _bbg _dg .Buffer ;for _ ,_egf :=range _bdf {if _gbc ,_gee :=_fg .DecodeStream (_egf );
_gee ==nil {_bbg .Write (_gbc );};_bdb [_egf ]=true ;};_dfg ,_agf :=_fg .MakeStream (_bbg .Bytes (),_fg .NewFlateEncoder ());if _agf !=nil {return nil ,_agf ;};_bdg [_dfg ]=true ;_ec .Set ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_dfg );_agg (_dfg );
};};};case *_fg .PdfObjectStream :if _gfe ,_dga :=_fg .GetName (_fcd .Get ("\u0054\u0079\u0070\u0065"));!_dga ||_gfe .String ()!="\u0058O\u0062\u006a\u0065\u0063\u0074"{continue ;};if _aga ,_fce :=_fg .GetName (_fcd .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));
!_fce ||_aga .String ()!="\u0046\u006f\u0072\u006d"{continue ;};_agg (_fcd );};};for _ ,_bad :=range _dcc {_baf =_feb (_bad );if _baf !=nil {return nil ,_baf ;};};_bb =nil ;for _ ,_ddb :=range objects {if _bdb [_ddb ]{continue ;};_bb =append (_bb ,_ddb );
};for _dge :=range _bdg {_bb =append (_bb ,_dge );};return _bb ,nil ;};

// Optimize optimizes PDF objects to decrease PDF size.
func (_dggg *ImagePPI )Optimize (objects []_fg .PdfObject )(_cbab []_fg .PdfObject ,_afc error ){if _dggg .ImageUpperPPI <=0{return objects ,nil ;};_ccc :=_adf (objects );if len (_ccc )==0{return objects ,nil ;};_aabb :=make (map[_fg .PdfObject ]struct{});
for _ ,_dace :=range _ccc {_ffb :=_dace .Stream .PdfObjectDictionary .Get ("\u0053\u004d\u0061s\u006b");_aabb [_ffb ]=struct{}{};};_eed :=make (map[*_fg .PdfObjectStream ]*imageInfo );for _ ,_ccg :=range _ccc {_eed [_ccg .Stream ]=_ccg ;};var _cgca *_fg .PdfObjectDictionary ;
for _ ,_bcad :=range objects {if _abgb ,_faae :=_fg .GetDict (_bcad );_cgca ==nil &&_faae {if _bdag ,_gcbd :=_fg .GetName (_abgb .Get ("\u0054\u0079\u0070\u0065"));_gcbd &&*_bdag =="\u0043a\u0074\u0061\u006c\u006f\u0067"{_cgca =_abgb ;};};};if _cgca ==nil {return objects ,nil ;
};_edgb ,_beae :=_fg .GetDict (_cgca .Get ("\u0050\u0061\u0067e\u0073"));if !_beae {return objects ,nil ;};_cgd ,_deee :=_fg .GetArray (_edgb .Get ("\u004b\u0069\u0064\u0073"));if !_deee {return objects ,nil ;};for _ ,_dbecc :=range _cgd .Elements (){_ccb :=make (map[string ]*imageInfo );
_edfg ,_eega :=_fg .GetDict (_dbecc );if !_eega {continue ;};_efc ,_ :=_fdbd (_edfg .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if len (_efc )==0{continue ;};_fgba ,_gafg :=_fg .GetDict (_edfg .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s"));
if !_gafg {continue ;};_bfe ,_bgde :=_cac .NewPdfPageResourcesFromDict (_fgba );if _bgde !=nil {_g .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020-\u0020\u0069\u0067\u006e\u006fr\u0069\u006eg\u003a\u0020\u0025\u0076",_bgde );
continue ;};_gad ,_aecb :=_fg .GetDict (_fgba .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074"));if !_aecb {continue ;};_afb :=_gad .Keys ();for _ ,_gfdd :=range _afb {if _dcd ,_dbf :=_fg .GetStream (_gad .Get (_gfdd ));_dbf {if _ecbc ,_ccgd :=_eed [_dcd ];
_ccgd {_ccb [string (_gfdd )]=_ecbc ;};};};_aaf :=_fe .NewContentStreamParser (_efc );_fgfg ,_bgde :=_aaf .Parse ();if _bgde !=nil {_g .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0025\u002b\u0076",_bgde );continue ;};_fddg :=_fe .NewContentStreamProcessor (*_fgfg );
_fddg .AddHandler (_fe .HandlerConditionEnumAllOperands ,"",func (_dgfc *_fe .ContentStreamOperation ,_dgfe _fe .GraphicsState ,_ffee *_cac .PdfPageResources )error {switch _dgfc .Operand {case "\u0044\u006f":if len (_dgfc .Params )!=1{_g .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0044\u006f\u0020w\u0069\u0074\u0068\u0020\u006c\u0065\u006e\u0028\u0070\u0061ra\u006d\u0073\u0029 \u0021=\u0020\u0031");
return nil ;};_bga ,_dgbba :=_fg .GetName (_dgfc .Params [0]);if !_dgbba {_g .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0044\u006f\u0020\u0077\u0069\u0074\u0068\u0020\u006e\u006f\u006e\u0020\u004e\u0061\u006d\u0065\u0020p\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072");
return nil ;};if _baad ,_ecaf :=_ccb [string (*_bga )];_ecaf {_adec :=_dgfe .CTM .ScalingFactorX ();_bgda :=_dgfe .CTM .ScalingFactorY ();_ege ,_bab :=_adec /72.0,_bgda /72.0;_bgcg ,_fea :=float64 (_baad .Width )/_ege ,float64 (_baad .Height )/_bab ;if _ege ==0||_bab ==0{_bgcg =72.0;
_fea =72.0;};_baad .PPI =_f .Max (_baad .PPI ,_bgcg );_baad .PPI =_f .Max (_baad .PPI ,_fea );};};return nil ;});_bgde =_fddg .Process (_bfe );if _bgde !=nil {_g .Log .Debug ("E\u0052\u0052\u004f\u0052 p\u0072o\u0063\u0065\u0073\u0073\u0069n\u0067\u003a\u0020\u0025\u002b\u0076",_bgde );
continue ;};};for _ ,_ebf :=range _ccc {if _ ,_egef :=_aabb [_ebf .Stream ];_egef {continue ;};if _ebf .PPI <=_dggg .ImageUpperPPI {continue ;};_bdfgg ,_egfe :=_cac .NewXObjectImageFromStream (_ebf .Stream );if _egfe !=nil {_g .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0025\u002b\u0076",_egfe );
continue ;};var _caa imageModifications ;_caa .Scale =_dggg .ImageUpperPPI /_ebf .PPI ;if _ebf .BitsPerComponent ==1&&_ebf .ColorComponents ==1{_egcea :=_f .Round (_ebf .PPI /_dggg .ImageUpperPPI );_abgg :=_ag .NextPowerOf2 (uint (_egcea ));if _ag .InDelta (float64 (_abgg ),1/_caa .Scale ,0.3){_caa .Scale =float64 (1)/float64 (_abgg );
};if _ ,_dgbbfg :=_bdfgg .Filter .(*_fg .JBIG2Encoder );!_dgbbfg {_caa .Encoding =_fg .NewJBIG2Encoder ();};};if _egfe =_fafg (_bdfgg ,_caa );_egfe !=nil {_g .Log .Debug ("\u0045\u0072\u0072\u006f\u0072 \u0073\u0063\u0061\u006c\u0065\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u006be\u0065\u0070\u0020\u006f\u0072\u0069\u0067\u0069\u006e\u0061\u006c\u0020\u0069\u006d\u0061\u0067\u0065\u003a\u0020\u0025\u0073",_egfe );
continue ;};_caa .Encoding =nil ;if _bbgb ,_dabe :=_fg .GetStream (_ebf .Stream .PdfObjectDictionary .Get ("\u0053\u004d\u0061s\u006b"));_dabe {_dbge ,_cgbf :=_cac .NewXObjectImageFromStream (_bbgb );if _cgbf !=nil {_g .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0025\u002b\u0076",_cgbf );
continue ;};if _cgbf =_fafg (_dbge ,_caa );_cgbf !=nil {_g .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0025\u002b\u0076",_cgbf );continue ;};};};return objects ,nil ;};func _fafg (_gacb *_cac .XObjectImage ,_faad imageModifications )error {_eebb ,_eae :=_gacb .ToImage ();
if _eae !=nil {return _eae ;};if _faad .Scale !=0{_eebb ,_eae =_aee (_eebb ,_faad .Scale );if _eae !=nil {return _eae ;};};if _faad .Encoding !=nil {_gacb .Filter =_faad .Encoding ;};_gacb .Decode =nil ;switch _bbfed :=_gacb .Filter .(type ){case *_fg .FlateEncoder :if _bbfed .Predictor !=1&&_bbfed .Predictor !=11{_bbfed .Predictor =1;
};};if _eae =_gacb .SetImage (_eebb ,nil );_eae !=nil {_g .Log .Debug ("\u0045\u0072\u0072or\u0020\u0073\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0069\u006d\u0061\u0067\u0065\u003a\u0020\u0025\u0076",_eae );return _eae ;};_gacb .ToPdfObject ();return nil ;
};

// Optimize implements Optimizer interface.
func (_bbb *CleanUnusedResources )Optimize (objects []_fg .PdfObject )(_cfe []_fg .PdfObject ,_bca error ){_gcc ,_bca :=_dgec (objects );if _bca !=nil {return nil ,_bca ;};_dgg :=[]_fg .PdfObject {};for _ ,_aeb :=range objects {_ ,_gcaa :=_gcc [_aeb ];
if _gcaa {continue ;};_dgg =append (_dgg ,_aeb );};return _dgg ,nil ;};

// CleanFonts cleans up embedded fonts, reducing font sizes.
type CleanFonts struct{

// Subset embedded fonts if encountered (if true).
// Otherwise attempts to reduce the font program.
Subset bool ;};func _eff (_agb _fg .PdfObject )[]content {if _agb ==nil {return nil ;};_egd ,_dac :=_fg .GetArray (_agb );if !_dac {_g .Log .Debug ("\u0041\u006e\u006e\u006fts\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
return nil ;};var _cacg []content ;for _ ,_ecdd :=range _egd .Elements (){_ddbg ,_dbe :=_fg .GetDict (_ecdd );if !_dbe {_g .Log .Debug ("I\u0067\u006e\u006f\u0072\u0069\u006eg\u0020\u006e\u006f\u006e\u002d\u0064i\u0063\u0074\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u0069\u006e\u0020\u0041\u006e\u006e\u006ft\u0073");
continue ;};_edg ,_dbe :=_fg .GetDict (_ddbg .Get ("\u0041\u0050"));if !_dbe {_g .Log .Debug ("\u004e\u006f\u0020\u0041P \u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067");continue ;};_befb :=_fg .TraceToDirectObject (_edg .Get ("\u004e"));
if _befb ==nil {_g .Log .Debug ("N\u006f\u0020\u004e\u0020en\u0074r\u0079\u0020\u002d\u0020\u0073k\u0069\u0070\u0070\u0069\u006e\u0067");continue ;};var _bdgd *_fg .PdfObjectStream ;switch _bdbce :=_befb .(type ){case *_fg .PdfObjectDictionary :_aca ,_fcb :=_fg .GetName (_ddbg .Get ("\u0041\u0053"));
if !_fcb {_g .Log .Debug ("\u004e\u006f\u0020\u0041S \u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067");continue ;};_bdgd ,_fcb =_fg .GetStream (_bdbce .Get (*_aca ));if !_fcb {_g .Log .Debug ("\u0046o\u0072\u006d\u0020\u006eo\u0074\u0020\u0066\u006f\u0075n\u0064 \u002d \u0073\u006b\u0069\u0070\u0070\u0069\u006eg");
continue ;};case *_fg .PdfObjectStream :_bdgd =_bdbce ;};if _bdgd ==nil {_g .Log .Debug ("\u0046\u006f\u0072m\u0020\u006e\u006f\u0074 \u0066\u006f\u0075\u006e\u0064\u0020\u0028n\u0069\u006c\u0029\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067");
continue ;};_gfb ,_fdb :=_cac .NewXObjectFormFromStream (_bdgd );if _fdb !=nil {_g .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u003a\u0020%\u0076\u0020\u002d\u0020\u0069\u0067\u006eo\u0072\u0069\u006e\u0067",_fdb );
continue ;};_bdab ,_fdb :=_gfb .GetContentStream ();if _fdb !=nil {_g .Log .Debug ("E\u0072\u0072\u006f\u0072\u0020\u0064e\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0063\u006fn\u0074\u0065\u006et\u0073:\u0020\u0025\u0076",_fdb );continue ;};_cacg =append (_cacg ,content {_ede :string (_bdab ),_cag :_gfb .Resources });
};return _cacg ;};func _gdg (_dfaf _fg .PdfObject ,_geg map[_fg .PdfObject ]struct{})error {if _ggg ,_egce :=_dfaf .(*_fg .PdfIndirectObject );_egce {_geg [_dfaf ]=struct{}{};_agc :=_gdg (_ggg .PdfObject ,_geg );if _agc !=nil {return _agc ;};return nil ;
};if _aac ,_dccf :=_dfaf .(*_fg .PdfObjectStream );_dccf {_geg [_aac ]=struct{}{};_egdf :=_gdg (_aac .PdfObjectDictionary ,_geg );if _egdf !=nil {return _egdf ;};return nil ;};if _dccd ,_fcbb :=_dfaf .(*_fg .PdfObjectDictionary );_fcbb {for _ ,_aea :=range _dccd .Keys (){_efb :=_dccd .Get (_aea );
_ =_efb ;if _dgea ,_edb :=_efb .(*_fg .PdfObjectReference );_edb {_efb =_dgea .Resolve ();_dccd .Set (_aea ,_efb );};if _aea !="\u0050\u0061\u0072\u0065\u006e\u0074"{if _faf :=_gdg (_efb ,_geg );_faf !=nil {return _faf ;};};};return nil ;};if _gec ,_gac :=_dfaf .(*_fg .PdfObjectArray );
_gac {if _gec ==nil {return _d .New ("\u0061\u0072\u0072a\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");};for _fga ,_faa :=range _gec .Elements (){if _facd ,_bgf :=_faa .(*_fg .PdfObjectReference );_bgf {_faa =_facd .Resolve ();_gec .Set (_fga ,_faa );
};if _gda :=_gdg (_faa ,_geg );_gda !=nil {return _gda ;};};return nil ;};return nil ;};

// Optimize optimizes PDF objects to decrease PDF size.
func (_bcdc *CombineIdenticalIndirectObjects )Optimize (objects []_fg .PdfObject )(_abeg []_fg .PdfObject ,_gaf error ){_cfdf (objects );_cgbd :=make (map[_fg .PdfObject ]_fg .PdfObject );_eaffc :=make (map[_fg .PdfObject ]struct{});_bcb :=make (map[string ][]*_fg .PdfIndirectObject );
for _ ,_gcfb :=range objects {_cfbb ,_aacc :=_gcfb .(*_fg .PdfIndirectObject );if !_aacc {continue ;};if _gbeg ,_egfb :=_cfbb .PdfObject .(*_fg .PdfObjectDictionary );_egfb {if _gbca ,_ggeb :=_gbeg .Get ("\u0054\u0079\u0070\u0065").(*_fg .PdfObjectName );
_ggeb &&*_gbca =="\u0050\u0061\u0067\u0065"{continue ;};_fecc :=_b .New ();_fecc .Write ([]byte (_gbeg .WriteString ()));_cgac :=string (_fecc .Sum (nil ));_bcb [_cgac ]=append (_bcb [_cgac ],_cfbb );};};for _ ,_bgb :=range _bcb {if len (_bgb )< 2{continue ;
};_bdfg :=_bgb [0];for _ace :=1;_ace < len (_bgb );_ace ++{_fbge :=_bgb [_ace ];_cgbd [_fbge ]=_bdfg ;_eaffc [_fbge ]=struct{}{};};};_abeg =make ([]_fg .PdfObject ,0,len (objects )-len (_eaffc ));for _ ,_cee :=range objects {if _ ,_ffgf :=_eaffc [_cee ];
_ffgf {continue ;};_abeg =append (_abeg ,_cee );};_gef (_abeg ,_cgbd );return _abeg ,nil ;};type content struct{_ede string ;_cag *_cac .PdfPageResources ;};