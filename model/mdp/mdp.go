//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package mdp ;import (_dg "errors";_g "fmt";_f "github.com/unidoc/unipdf/v3/core";);

// DocMDPPermission is values for set up access permissions for DocMDP.
// (Section 12.8.2.2, Table 254 - Entries in a signature dictionary p. 471 in PDF32000_2008).
type DocMDPPermission int64 ;func NewDefaultDiffPolicy ()DiffPolicy {return &defaultDiffPolicy {_db :nil ,_b :&DiffResults {},_c :0};};func (_dbb *defaultDiffPolicy )compareFields (_fe int ,_cdc ,_add []_f .PdfObject )error {_cde :=make (map[int64 ]*_f .PdfObjectDictionary );
for _ ,_gea :=range _cdc {_ab ,_dgd :=_f .GetIndirect (_gea );if !_dgd {return _dg .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006cd\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");};_dab ,_dgd :=_f .GetDict (_ab .PdfObject );
if !_dgd {return _dg .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0061\u006e\u006e\u006ft\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");};_cde [_ab .ObjectNumber ]=_dab ;};for _ ,_abb :=range _add {_fg ,_dfd :=_f .GetIndirect (_abb );
if !_dfd {return _dg .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006cd\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");};_ca ,_dfd :=_f .GetDict (_fg .PdfObject );if !_dfd {return _dg .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006cd\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");
};T :=_ca .Get ("\u0054");if _ ,_acf :=_dbb ._db [_fg .ObjectNumber ];_acf {switch _dbb ._c {case NoRestrictions ,FillForms ,FillFormsAndAnnots :_dbb ._b .addWarningWithDescription (_fe ,_g .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0063\u0068\u0061ng\u0065\u0064",T ));
default:_dbb ._b .addErrorWithDescription (_fe ,_g .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0063\u0068\u0061ng\u0065\u0064",T ));};};if _ ,_fcc :=_cde [_fg .ObjectNumber ];!_fcc {switch _dbb ._c {case NoRestrictions ,FillForms ,FillFormsAndAnnots :_dbb ._b .addWarningWithDescription (_fe ,_g .Sprintf ("\u0046i\u0065l\u0064\u0020\u0025\u0073\u0020w\u0061\u0073 \u0061\u0064\u0064\u0065\u0064",_ca .Get ("\u0054")));
default:_dbb ._b .addErrorWithDescription (_fe ,_g .Sprintf ("\u0046i\u0065l\u0064\u0020\u0025\u0073\u0020w\u0061\u0073 \u0061\u0064\u0064\u0065\u0064",_ca .Get ("\u0054")));};}else {delete (_cde ,_fg .ObjectNumber );if _ ,_ba :=_dbb ._db [_fg .ObjectNumber ];
_ba {switch _dbb ._c {case NoRestrictions ,FillForms ,FillFormsAndAnnots :_dbb ._b .addWarningWithDescription (_fe ,_g .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0063\u0068\u0061ng\u0065\u0064",_ca .Get ("\u0054")));default:_dbb ._b .addErrorWithDescription (_fe ,_g .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0063\u0068\u0061ng\u0065\u0064",_ca .Get ("\u0054")));
};};};if FT ,_ag :=_f .GetNameVal (_ca .Get ("\u0046\u0054"));_ag {if FT =="\u0053\u0069\u0067"{if _bb ,_bbf :=_f .GetIndirect (_ca .Get ("\u0056"));_bbf {if _ ,_ea :=_dbb ._db [_bb .ObjectNumber ];_ea {switch _dbb ._c {case NoRestrictions ,FillForms ,FillFormsAndAnnots :_dbb ._b .addWarningWithDescription (_fe ,_g .Sprintf ("\u0053\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0066\u006f\u0072\u0020%\u0073 \u0066i\u0065l\u0064\u0020\u0077\u0061\u0073\u0020\u0063\u0068\u0061\u006e\u0067\u0065\u0064",T ));
default:_dbb ._b .addErrorWithDescription (_fe ,_g .Sprintf ("\u0053\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0066\u006f\u0072\u0020%\u0073 \u0066i\u0065l\u0064\u0020\u0077\u0061\u0073\u0020\u0063\u0068\u0061\u006e\u0067\u0065\u0064",T ));};};};};};
};for _ ,_bfa :=range _cde {switch _dbb ._c {case NoRestrictions :_dbb ._b .addWarningWithDescription (_fe ,_g .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0072\u0065\u006dov\u0065\u0064",_bfa .Get ("\u0054")));default:_dbb ._b .addErrorWithDescription (_fe ,_g .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0072\u0065\u006dov\u0065\u0064",_bfa .Get ("\u0054")));
};};return nil ;};

// DiffResult describes the warning or the error for the DiffPolicy results.
type DiffResult struct{Revision int ;Description string ;};

// DiffPolicy interface for comparing two revisions of the Pdf document.
type DiffPolicy interface{

// ReviewFile should check the revisions of the old and new parsers
// and evaluate the differences between the revisions.
// Each implementation of this interface must decide
// how to handle cases where there are multiple revisions between the old and new revisions.
ReviewFile (_gef *_f .PdfParser ,_eagg *_f .PdfParser ,_daa *MDPParameters )(*DiffResults ,error );};func (_aag *DiffResults )addErrorWithDescription (_ade int ,_fcb string ){if _aag .Errors ==nil {_aag .Errors =make ([]*DiffResult ,0);};_aag .Errors =append (_aag .Errors ,&DiffResult {Revision :_ade ,Description :_fcb });
};

// MDPParameters describes parameters for the MDP checks (now only DocMDP).
type MDPParameters struct{DocMDPLevel DocMDPPermission ;};func (_fbd *DiffResults )addWarningWithDescription (_gdc int ,_bcbg string ){if _fbd .Warnings ==nil {_fbd .Warnings =make ([]*DiffResult ,0);};_fbd .Warnings =append (_fbd .Warnings ,&DiffResult {Revision :_gdc ,Description :_bcbg });
};type defaultDiffPolicy struct{_db map[int64 ]_f .PdfObject ;_b *DiffResults ;_c DocMDPPermission ;};

// DiffResults describes the results of the DiffPolicy.
type DiffResults struct{Warnings []*DiffResult ;Errors []*DiffResult ;};func (_aac *DiffResults )addError (_bddd *DiffResult ){if _aac .Errors ==nil {_aac .Errors =make ([]*DiffResult ,0);};_aac .Errors =append (_aac .Errors ,_bddd );};

// String returns the state of the warning.
func (_ace *DiffResult )String ()string {return _g .Sprintf ("\u0025\u0073\u0020\u0069n \u0072\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0073\u0020\u0023\u0025\u0064",_ace .Description ,_ace .Revision );};func _bac (_cddd _f .PdfObject )([]_f .PdfObject ,error ){_efc :=make ([]_f .PdfObject ,0);
if _cddd !=nil {_dcb :=_cddd ;if _bda ,_bfe :=_f .GetIndirect (_cddd );_bfe {_dcb =_bda .PdfObject ;};if _dabf ,_gbe :=_f .GetArray (_dcb );_gbe {_efc =_dabf .Elements ();}else {return nil ,_dg .New ("\u0075n\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0061n\u006eo\u0074s\u0027\u0020\u006f\u0062\u006a\u0065\u0063t");
};};return _efc ,nil ;};func (_cba *DiffResults )addWarning (_gbee *DiffResult ){if _cba .Warnings ==nil {_cba .Warnings =make ([]*DiffResult ,0);};_cba .Warnings =append (_cba .Warnings ,_gbee );};

// IsPermitted returns true if changes permitted.
func (_bg *DiffResults )IsPermitted ()bool {return len (_bg .Errors )==0};

// ReviewFile implementation of DiffPolicy interface
// The default policy only checks the next types of objects:
// Page, Pages (container for page objects), Annot, Annots (container for annotation objects), Field.
// It checks adding, removing and modifying objects of these types.
func (_fd *defaultDiffPolicy )ReviewFile (oldParser *_f .PdfParser ,newParser *_f .PdfParser ,params *MDPParameters )(*DiffResults ,error ){if oldParser .GetRevisionNumber ()> newParser .GetRevisionNumber (){return nil ,_dg .New ("\u006f\u006c\u0064\u0020\u0072\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020\u006e\u0065\u0077\u0020r\u0065\u0076i\u0073\u0069\u006f\u006e");
};if oldParser .GetRevisionNumber ()==newParser .GetRevisionNumber (){if oldParser !=newParser {return nil ,_dg .New ("\u0073\u0061m\u0065\u0020\u0072\u0065v\u0069\u0073i\u006f\u006e\u0073\u002c\u0020\u0062\u0075\u0074 \u0064\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0074\u0020\u0070\u0061r\u0073\u0065\u0072\u0073");
};return &DiffResults {},nil ;};if params ==nil {_fd ._c =NoRestrictions ;}else {_fd ._c =params .DocMDPLevel ;};_e :=&DiffResults {};for _da :=oldParser .GetRevisionNumber ()+1;_da <=newParser .GetRevisionNumber ();_da ++{_bf ,_a :=newParser .GetRevision (_da -1);
if _a !=nil {return nil ,_a ;};_ed ,_a :=newParser .GetRevision (_da );if _a !=nil {return nil ,_a ;};_ge ,_a :=_fd .compareRevisions (_bf ,_ed );if _a !=nil {return nil ,_a ;};_e .Warnings =append (_e .Warnings ,_ge .Warnings ...);_e .Errors =append (_e .Errors ,_ge .Errors ...);
};return _e ,nil ;};const (NoRestrictions DocMDPPermission =0;NoChanges DocMDPPermission =1;FillForms DocMDPPermission =2;FillFormsAndAnnots DocMDPPermission =3;);func (_gf *defaultDiffPolicy )compareAnnots (_de int ,_cdd ,_cbb []_f .PdfObject )error {_abbd :=make (map[int64 ]*_f .PdfObjectDictionary );
for _ ,_gba :=range _cdd {_fda ,_dff :=_f .GetIndirect (_gba );if !_dff {return _dg .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0061\u006e\u006e\u006ft\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");};_gga ,_dff :=_f .GetDict (_fda .PdfObject );
if !_dff {return _dg .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0061\u006e\u006e\u006ft\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");};_abbd [_fda .ObjectNumber ]=_gga ;};for _ ,_ccc :=range _cbb {_ebc ,_acb :=_f .GetIndirect (_ccc );
if !_acb {return _dg .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0061\u006e\u006e\u006ft\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");};_dgde ,_acb :=_f .GetDict (_ebc .PdfObject );if !_acb {return _dg .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0061\u006e\u006e\u006ft\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");
};_aec ,_ :=_f .GetStringVal (_dgde .Get ("\u0054"));_fac ,_ :=_f .GetNameVal (_dgde .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if _ ,_faa :=_abbd [_ebc .ObjectNumber ];!_faa {switch _gf ._c {case NoRestrictions ,FillFormsAndAnnots :_gf ._b .addWarningWithDescription (_de ,_g .Sprintf ("\u0025\u0073\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0025\u0073\u0020\u0077\u0061\u0073\u0020\u0061d\u0064\u0065\u0064",_fac ,_aec ));
default:_ga ,_ecg :=_f .GetDict (_ebc .PdfObject );if !_ecg {return _dg .New ("u\u006ed\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0061n\u006e\u006f\u0074\u0061ti\u006f\u006e");};_fgg ,_ecg :=_f .GetNameVal (_ga .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));
if !_ecg {return _dg .New ("\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0027\u0073\u0020\u0073\u0075\u0062\u0074\u0079\u0070\u0065");};if _fgg =="\u0057\u0069\u0064\u0067\u0065\u0074"{switch _gf ._c {case NoRestrictions ,FillFormsAndAnnots ,FillForms :_gf ._b .addWarningWithDescription (_de ,_g .Sprintf ("\u0025\u0073\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0025\u0073\u0020\u0077\u0061\u0073\u0020\u0061d\u0064\u0065\u0064",_fac ,_aec ));
default:_gf ._b .addErrorWithDescription (_de ,_g .Sprintf ("\u0025\u0073\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0025\u0073\u0020\u0077\u0061\u0073\u0020\u0061d\u0064\u0065\u0064",_fac ,_aec ));};}else {_gf ._b .addErrorWithDescription (_de ,_g .Sprintf ("\u0025\u0073\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0025\u0073\u0020\u0077\u0061\u0073\u0020\u0061d\u0064\u0065\u0064",_fac ,_aec ));
};};}else {delete (_abbd ,_ebc .ObjectNumber );if _ecd ,_ee :=_gf ._db [_ebc .ObjectNumber ];_ee {switch _gf ._c {case NoRestrictions ,FillFormsAndAnnots :_gf ._b .addWarningWithDescription (_de ,_g .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0063\u0068\u0061\u006eg\u0065\u0064",_fac ,_aec ));
default:_bde ,_ecc :=_f .GetIndirect (_ecd );if !_ecc {return _dg .New ("u\u006ed\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0061n\u006e\u006f\u0074\u0061ti\u006f\u006e");};_aca ,_ecc :=_f .GetDict (_bde .PdfObject );if !_ecc {return _dg .New ("u\u006ed\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0061n\u006e\u006f\u0074\u0061ti\u006f\u006e");
};_faeb ,_ecc :=_f .GetNameVal (_aca .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_ecc {return _dg .New ("\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0027\u0073\u0020\u0073\u0075\u0062\u0074\u0079\u0070\u0065");
};if _faeb =="\u0057\u0069\u0064\u0067\u0065\u0074"{switch _gf ._c {case NoRestrictions ,FillFormsAndAnnots ,FillForms :_gf ._b .addWarningWithDescription (_de ,_g .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0063\u0068\u0061\u006eg\u0065\u0064",_fac ,_aec ));
default:_gf ._b .addErrorWithDescription (_de ,_g .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0063\u0068\u0061\u006eg\u0065\u0064",_fac ,_aec ));};}else {_gf ._b .addErrorWithDescription (_de ,_g .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0063\u0068\u0061\u006eg\u0065\u0064",_fac ,_aec ));
};};};};};for _ ,_dcf :=range _abbd {_cff ,_ :=_f .GetStringVal (_dcf .Get ("\u0054"));_bcb ,_ :=_f .GetNameVal (_dcf .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));switch _gf ._c {case NoRestrictions ,FillFormsAndAnnots :_gf ._b .addWarningWithDescription (_de ,_g .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0072\u0065\u006d\u006fv\u0065\u0064",_bcb ,_cff ));
default:_gf ._b .addErrorWithDescription (_de ,_g .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0072\u0065\u006d\u006fv\u0065\u0064",_bcb ,_cff ));};};return nil ;};func (_ac *defaultDiffPolicy )compareRevisions (_eg *_f .PdfParser ,_gg *_f .PdfParser )(*DiffResults ,error ){var _cd error ;
_ac ._db ,_cd =_gg .GetUpdatedObjects (_eg );if _cd !=nil {return &DiffResults {},_cd ;};if len (_ac ._db )==0{return &DiffResults {},nil ;};_cf :=_gg .GetRevisionNumber ();_fb ,_cc :=_f .GetIndirect (_f .ResolveReference (_eg .GetTrailer ().Get ("\u0052\u006f\u006f\u0074")));
_dgc ,_ef :=_f .GetIndirect (_f .ResolveReference (_gg .GetTrailer ().Get ("\u0052\u006f\u006f\u0074")));if !_cc ||!_ef {return &DiffResults {},_dg .New ("\u0065\u0072\u0072o\u0072\u0020\u0077\u0068i\u006c\u0065\u0020\u0067\u0065\u0074\u0074i\u006e\u0067\u0020\u0072\u006f\u006f\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};_fbg ,_cc :=_f .GetDict (_f .ResolveReference (_fb .PdfObject ));_bd ,_ef :=_f .GetDict (_f .ResolveReference (_dgc .PdfObject ));if !_cc ||!_ef {return &DiffResults {},_dg .New ("\u0065\u0072\u0072\u006f\u0072\u0020\u0077\u0068\u0069\u006c\u0065\u0020\u0067e\u0074\u0074\u0069\u006e\u0067\u0020a\u0020\u0072\u006f\u006f\u0074\u0027\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _fc ,_bc :=_f .GetIndirect (_bd .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d"));_bc {_cb ,_fa :=_f .GetDict (_fc );if !_fa {return &DiffResults {},_dg .New ("\u0065\u0072\u0072\u006f\u0072 \u0077\u0068\u0069\u006c\u0065\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067 \u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u0027\u0073\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_efa :=make ([]_f .PdfObject ,0);if _gb ,_cfe :=_f .GetIndirect (_fbg .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d"));_cfe {if _cbe ,_ce :=_f .GetDict (_gb );_ce {if _ggd ,_edf :=_f .GetArray (_cbe .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"));
_edf {_efa =_ggd .Elements ();};};};_gd ,_fa :=_f .GetArray (_cb .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"));if !_fa {return &DiffResults {},_dg .New ("\u0065\u0072r\u006f\u0072\u0020\u0077h\u0069\u006ce\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067 \u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u0027\u0073\u0020\u0066i\u0065\u006c\u0064\u0073");
};if _aa :=_ac .compareFields (_cf ,_efa ,_gd .Elements ());_aa !=nil {return &DiffResults {},_aa ;};};_df ,_gde :=_f .GetIndirect (_bd .Get ("\u0050\u0061\u0067e\u0073"));if !_gde {return &DiffResults {},_dg .New ("\u0065\u0072\u0072\u006f\u0072\u0020w\u0068\u0069\u006c\u0065\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020p\u0061\u0067\u0065\u0073\u0027\u0020\u006fb\u006a\u0065\u0063\u0074");
};_ad ,_gde :=_f .GetIndirect (_fbg .Get ("\u0050\u0061\u0067e\u0073"));if !_gde {return &DiffResults {},_dg .New ("\u0065\u0072\u0072\u006f\u0072\u0020w\u0068\u0069\u006c\u0065\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020p\u0061\u0067\u0065\u0073\u0027\u0020\u006fb\u006a\u0065\u0063\u0074");
};if _bdc :=_ac .comparePages (_cf ,_ad ,_df );_bdc !=nil {return &DiffResults {},_bdc ;};return _ac ._b ,nil ;};func (_eff *defaultDiffPolicy )comparePages (_dc int ,_fae ,_ae *_f .PdfIndirectObject )error {if _ ,_aae :=_eff ._db [_ae .ObjectNumber ];
_aae {_eff ._b .addErrorWithDescription (_dc ,"\u0050a\u0067e\u0073\u0020\u0077\u0065\u0072e\u0020\u0063h\u0061\u006e\u0067\u0065\u0064");};_gcb ,_eag :=_f .GetDict (_ae .PdfObject );_abf ,_fag :=_f .GetDict (_fae .PdfObject );if !_eag ||!_fag {return _dg .New ("\u0075n\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0050\u0061g\u0065\u0073\u0027\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};_ffb ,_eag :=_f .GetArray (_gcb .Get ("\u004b\u0069\u0064\u0073"));_ec ,_fag :=_f .GetArray (_abf .Get ("\u004b\u0069\u0064\u0073"));if !_eag ||!_fag {return _dg .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0050\u0061\u0067\u0065s\u0027 \u0064\u0069\u0063\u0074\u0069\u006f\u006ea\u0072\u0079");
};_cag :=_ffb .Len ();if _cag > _ec .Len (){_cag =_ec .Len ();};for _aaa :=0;_aaa < _cag ;_aaa ++{_edc ,_dgg :=_f .GetIndirect (_f .ResolveReference (_ec .Get (_aaa )));_bdg ,_eb :=_f .GetIndirect (_f .ResolveReference (_ffb .Get (_aaa )));if !_dgg ||!_eb {return _dg .New ("\u0075\u006e\u0065\u0078pe\u0063\u0074\u0065\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006f\u0062\u006a\u0065c\u0074");
};if _edc .ObjectNumber !=_bdg .ObjectNumber {_eff ._b .addErrorWithDescription (_dc ,_g .Sprintf ("p\u0061\u0067\u0065\u0020#%\u0064 \u0077\u0061\u0073\u0020\u0072e\u0070\u006c\u0061\u0063\u0065\u0064",_aaa ));};_dca ,_dgg :=_f .GetDict (_bdg );_caga ,_eb :=_f .GetDict (_edc );
if !_dgg ||!_eb {return _dg .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0070\u0061\u0067\u0065'\u0073 \u0064\u0069\u0063\u0074\u0069\u006f\u006ea\u0072\u0079");};_bdd ,_cfd :=_bac (_dca .Get ("\u0041\u006e\u006e\u006f\u0074\u0073"));
if _cfd !=nil {return _cfd ;};_dbg ,_cfd :=_bac (_caga .Get ("\u0041\u006e\u006e\u006f\u0074\u0073"));if _cfd !=nil {return _cfd ;};if _dfb :=_eff .compareAnnots (_dc ,_dbg ,_bdd );_dfb !=nil {return _dfb ;};};for _cg :=_cag +1;_cg <=_ffb .Len ();_cg ++{_eff ._b .addErrorWithDescription (_dc ,_g .Sprintf ("\u0070a\u0067e\u0020\u0023\u0025\u0064\u0020w\u0061\u0073 \u0061\u0064\u0064\u0065\u0064",_cg ));
};for _cfc :=_cag +1;_cfc <=_ec .Len ();_cfc ++{_eff ._b .addErrorWithDescription (_dc ,_g .Sprintf ("p\u0061g\u0065\u0020\u0023\u0025\u0064\u0020\u0077\u0061s\u0020\u0072\u0065\u006dov\u0065\u0064",_cfc ));};return nil ;};