//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package mdp ;import (_c "errors";_fe "fmt";_ff "github.com/unidoc/unipdf/v3/core";);func NewDefaultDiffPolicy ()DiffPolicy {return &defaultDiffPolicy {_b :nil ,_bd :&DiffResults {},_d :0};};

// DiffResults describes the results of the DiffPolicy.
type DiffResults struct{Warnings []*DiffResult ;Errors []*DiffResult ;};

// MDPParameters describes parameters for the MDP checks (now only DocMDP).
type MDPParameters struct{DocMDPLevel DocMDPPermission ;};type defaultDiffPolicy struct{_b map[int64 ]_ff .PdfObject ;_bd *DiffResults ;_d DocMDPPermission ;};

// ReviewFile implementation of DiffPolicy interface
// The default policy only checks the next types of objects:
// Page, Pages (container for page objects), Annot, Annots (container for annotation objects), Field.
// It checks adding, removing and modifying objects of these types.
func (_da *defaultDiffPolicy )ReviewFile (oldParser *_ff .PdfParser ,newParser *_ff .PdfParser ,params *MDPParameters )(*DiffResults ,error ){if oldParser .GetRevisionNumber ()> newParser .GetRevisionNumber (){return nil ,_c .New ("\u006f\u006c\u0064\u0020\u0072\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020\u006e\u0065\u0077\u0020r\u0065\u0076i\u0073\u0069\u006f\u006e");
};if oldParser .GetRevisionNumber ()==newParser .GetRevisionNumber (){if oldParser !=newParser {return nil ,_c .New ("\u0073\u0061m\u0065\u0020\u0072\u0065v\u0069\u0073i\u006f\u006e\u0073\u002c\u0020\u0062\u0075\u0074 \u0064\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0074\u0020\u0070\u0061r\u0073\u0065\u0072\u0073");
};return &DiffResults {},nil ;};if params ==nil {_da ._d =NoRestrictions ;}else {_da ._d =params .DocMDPLevel ;};_cb :=&DiffResults {};for _dg :=oldParser .GetRevisionNumber ()+1;_dg <=newParser .GetRevisionNumber ();_dg ++{_cc ,_a :=newParser .GetRevision (_dg -1);
if _a !=nil {return nil ,_a ;};_de ,_a :=newParser .GetRevision (_dg );if _a !=nil {return nil ,_a ;};_g ,_a :=_da .compareRevisions (_cc ,_de );if _a !=nil {return nil ,_a ;};_cb .Warnings =append (_cb .Warnings ,_g .Warnings ...);_cb .Errors =append (_cb .Errors ,_g .Errors ...);
};return _cb ,nil ;};func (_be *defaultDiffPolicy )comparePages (_gbc int ,_ba ,_dge *_ff .PdfIndirectObject )error {if _ ,_cebe :=_be ._b [_dge .ObjectNumber ];_cebe {_be ._bd .addErrorWithDescription (_gbc ,"\u0050a\u0067e\u0073\u0020\u0077\u0065\u0072e\u0020\u0063h\u0061\u006e\u0067\u0065\u0064");
};_bbg ,_cdd :=_ff .GetDict (_dge .PdfObject );_efb ,_gf :=_ff .GetDict (_ba .PdfObject );if !_cdd ||!_gf {return _c .New ("\u0075n\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0050\u0061g\u0065\u0073\u0027\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};_def ,_cdd :=_ff .GetArray (_bbg .Get ("\u004b\u0069\u0064\u0073"));_edc ,_gf :=_ff .GetArray (_efb .Get ("\u004b\u0069\u0064\u0073"));if !_cdd ||!_gf {return _c .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0050\u0061\u0067\u0065s\u0027 \u0064\u0069\u0063\u0074\u0069\u006f\u006ea\u0072\u0079");
};_efc :=_def .Len ();if _efc > _edc .Len (){_efc =_edc .Len ();};for _ccc :=0;_ccc < _efc ;_ccc ++{_age ,_fad :=_ff .GetIndirect (_ff .ResolveReference (_edc .Get (_ccc )));_feb ,_bce :=_ff .GetIndirect (_ff .ResolveReference (_def .Get (_ccc )));if !_fad ||!_bce {return _c .New ("\u0075\u006e\u0065\u0078pe\u0063\u0074\u0065\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006f\u0062\u006a\u0065c\u0074");
};if _age .ObjectNumber !=_feb .ObjectNumber {_be ._bd .addErrorWithDescription (_gbc ,_fe .Sprintf ("p\u0061\u0067\u0065\u0020#%\u0064 \u0077\u0061\u0073\u0020\u0072e\u0070\u006c\u0061\u0063\u0065\u0064",_ccc ));};_dda ,_fad :=_ff .GetDict (_feb );_bcd ,_bce :=_ff .GetDict (_age );
if !_fad ||!_bce {return _c .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0070\u0061\u0067\u0065'\u0073 \u0064\u0069\u0063\u0074\u0069\u006f\u006ea\u0072\u0079");};_ccce ,_cef :=_afa (_dda .Get ("\u0041\u006e\u006e\u006f\u0074\u0073"));
if _cef !=nil {return _cef ;};_deb ,_cef :=_afa (_bcd .Get ("\u0041\u006e\u006e\u006f\u0074\u0073"));if _cef !=nil {return _cef ;};if _bbgd :=_be .compareAnnots (_gbc ,_deb ,_ccce );_bbgd !=nil {return _bbgd ;};};for _cca :=_efc +1;_cca <=_def .Len ();
_cca ++{_be ._bd .addErrorWithDescription (_gbc ,_fe .Sprintf ("\u0070a\u0067e\u0020\u0023\u0025\u0064\u0020w\u0061\u0073 \u0061\u0064\u0064\u0065\u0064",_cca ));};for _ebg :=_efc +1;_ebg <=_edc .Len ();_ebg ++{_be ._bd .addErrorWithDescription (_gbc ,_fe .Sprintf ("p\u0061g\u0065\u0020\u0023\u0025\u0064\u0020\u0077\u0061s\u0020\u0072\u0065\u006dov\u0065\u0064",_ebg ));
};return nil ;};func (_bdfa *DiffResults )addWarning (_deab *DiffResult ){if _bdfa .Warnings ==nil {_bdfa .Warnings =make ([]*DiffResult ,0);};_bdfa .Warnings =append (_bdfa .Warnings ,_deab );};

// DiffPolicy interface for comparing two revisions of the Pdf document.
type DiffPolicy interface{

// ReviewFile should check the revisions of the old and new parsers
// and evaluate the differences between the revisions.
// Each implementation of this interface must decide
// how to handle cases where there are multiple revisions between the old and new revisions.
ReviewFile (_cab *_ff .PdfParser ,_bcb *_ff .PdfParser ,_gab *MDPParameters )(*DiffResults ,error );};

// DiffResult describes the warning or the error for the DiffPolicy results.
type DiffResult struct{Revision int ;Description string ;};func (_deg *DiffResults )addWarningWithDescription (_ebba int ,_add string ){if _deg .Warnings ==nil {_deg .Warnings =make ([]*DiffResult ,0);};_deg .Warnings =append (_deg .Warnings ,&DiffResult {Revision :_ebba ,Description :_add });
};const (NoRestrictions DocMDPPermission =0;NoChanges DocMDPPermission =1;FillForms DocMDPPermission =2;FillFormsAndAnnots DocMDPPermission =3;);

// DocMDPPermission is values for set up access permissions for DocMDP.
// (Section 12.8.2.2, Table 254 - Entries in a signature dictionary p. 471 in PDF32000_2008).
type DocMDPPermission int64 ;func (_dcf *DiffResults )addErrorWithDescription (_bcdd int ,_feg string ){if _dcf .Errors ==nil {_dcf .Errors =make ([]*DiffResult ,0);};_dcf .Errors =append (_dcf .Errors ,&DiffResult {Revision :_bcdd ,Description :_feg });
};func _afa (_eeg _ff .PdfObject )([]_ff .PdfObject ,error ){_bed :=make ([]_ff .PdfObject ,0);if _eeg !=nil {_cefe :=_eeg ;if _fag ,_dcd :=_ff .GetIndirect (_eeg );_dcd {_cefe =_fag .PdfObject ;};if _bbb ,_bbf :=_ff .GetArray (_cefe );_bbf {_bed =_bbb .Elements ();
}else {return nil ,_c .New ("\u0075n\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0061n\u006eo\u0074s\u0027\u0020\u006f\u0062\u006a\u0065\u0063t");};};return _bed ,nil ;};func (_dgg *defaultDiffPolicy )compareRevisions (_gb *_ff .PdfParser ,_dd *_ff .PdfParser )(*DiffResults ,error ){var _ag error ;
_dgg ._b ,_ag =_dd .GetUpdatedObjects (_gb );if _ag !=nil {return &DiffResults {},_ag ;};if len (_dgg ._b )==0{return &DiffResults {},nil ;};_ded :=_dd .GetRevisionNumber ();_bf ,_db :=_ff .GetIndirect (_ff .ResolveReference (_gb .GetTrailer ().Get ("\u0052\u006f\u006f\u0074")));
_ab ,_e :=_ff .GetIndirect (_ff .ResolveReference (_dd .GetTrailer ().Get ("\u0052\u006f\u006f\u0074")));if !_db ||!_e {return &DiffResults {},_c .New ("\u0065\u0072\u0072o\u0072\u0020\u0077\u0068i\u006c\u0065\u0020\u0067\u0065\u0074\u0074i\u006e\u0067\u0020\u0072\u006f\u006f\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};_ef ,_db :=_ff .GetDict (_ff .ResolveReference (_bf .PdfObject ));_ce ,_e :=_ff .GetDict (_ff .ResolveReference (_ab .PdfObject ));if !_db ||!_e {return &DiffResults {},_c .New ("\u0065\u0072\u0072\u006f\u0072\u0020\u0077\u0068\u0069\u006c\u0065\u0020\u0067e\u0074\u0074\u0069\u006e\u0067\u0020a\u0020\u0072\u006f\u006f\u0074\u0027\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _ee ,_ge :=_ff .GetIndirect (_ce .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d"));_ge {_ga ,_fd :=_ff .GetDict (_ee );if !_fd {return &DiffResults {},_c .New ("\u0065\u0072\u0072\u006f\u0072 \u0077\u0068\u0069\u006c\u0065\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067 \u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u0027\u0073\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_dgd :=make ([]_ff .PdfObject ,0);if _ec ,_ffg :=_ff .GetIndirect (_ef .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d"));_ffg {if _ad ,_cd :=_ff .GetDict (_ec );_cd {if _ac ,_cbf :=_ff .GetArray (_ad .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"));
_cbf {_dgd =_ac .Elements ();};};};_cbg ,_fd :=_ff .GetArray (_ga .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"));if !_fd {return &DiffResults {},_c .New ("\u0065\u0072r\u006f\u0072\u0020\u0077h\u0069\u006ce\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067 \u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u0027\u0073\u0020\u0066i\u0065\u006c\u0064\u0073");
};if _af :=_dgg .compareFields (_ded ,_dgd ,_cbg .Elements ());_af !=nil {return &DiffResults {},_af ;};};_bc ,_fa :=_ff .GetIndirect (_ce .Get ("\u0050\u0061\u0067e\u0073"));if !_fa {return &DiffResults {},_c .New ("\u0065\u0072\u0072\u006f\u0072\u0020w\u0068\u0069\u006c\u0065\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020p\u0061\u0067\u0065\u0073\u0027\u0020\u006fb\u006a\u0065\u0063\u0074");
};_ceb ,_fa :=_ff .GetIndirect (_ef .Get ("\u0050\u0061\u0067e\u0073"));if !_fa {return &DiffResults {},_c .New ("\u0065\u0072\u0072\u006f\u0072\u0020w\u0068\u0069\u006c\u0065\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020p\u0061\u0067\u0065\u0073\u0027\u0020\u006fb\u006a\u0065\u0063\u0074");
};if _bb :=_dgg .comparePages (_ded ,_ceb ,_bc );_bb !=nil {return &DiffResults {},_bb ;};return _dgg ._bd ,nil ;};func (_ade *defaultDiffPolicy )compareFields (_bg int ,_dedf ,_faa []_ff .PdfObject )error {_cda :=make (map[int64 ]*_ff .PdfObjectDictionary );
for _ ,_dbb :=range _dedf {_eb ,_aa :=_ff .GetIndirect (_dbb );if !_aa {return _c .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006cd\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");};_abb ,_aa :=_ff .GetDict (_eb .PdfObject );
if !_aa {return _c .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0061\u006e\u006e\u006ft\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");};_cda [_eb .ObjectNumber ]=_abb ;};for _ ,_bba :=range _faa {_eee ,_eef :=_ff .GetIndirect (_bba );
if !_eef {return _c .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006cd\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");};_fdf ,_eef :=_ff .GetDict (_eee .PdfObject );if !_eef {return _c .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006cd\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");
};T :=_fdf .Get ("\u0054");if _ ,_ddd :=_ade ._b [_eee .ObjectNumber ];_ddd {switch _ade ._d {case NoRestrictions ,FillForms ,FillFormsAndAnnots :_ade ._bd .addWarningWithDescription (_bg ,_fe .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0063\u0068\u0061ng\u0065\u0064",T ));
default:_ade ._bd .addErrorWithDescription (_bg ,_fe .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0063\u0068\u0061ng\u0065\u0064",T ));};};if _ ,_agg :=_cda [_eee .ObjectNumber ];!_agg {switch _ade ._d {case NoRestrictions ,FillForms ,FillFormsAndAnnots :_ade ._bd .addWarningWithDescription (_bg ,_fe .Sprintf ("\u0046i\u0065l\u0064\u0020\u0025\u0073\u0020w\u0061\u0073 \u0061\u0064\u0064\u0065\u0064",_fdf .Get ("\u0054")));
default:_ade ._bd .addErrorWithDescription (_bg ,_fe .Sprintf ("\u0046i\u0065l\u0064\u0020\u0025\u0073\u0020w\u0061\u0073 \u0061\u0064\u0064\u0065\u0064",_fdf .Get ("\u0054")));};}else {delete (_cda ,_eee .ObjectNumber );if _ ,_ae :=_ade ._b [_eee .ObjectNumber ];
_ae {switch _ade ._d {case NoRestrictions ,FillForms ,FillFormsAndAnnots :_ade ._bd .addWarningWithDescription (_bg ,_fe .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0063\u0068\u0061ng\u0065\u0064",_fdf .Get ("\u0054")));
default:_ade ._bd .addErrorWithDescription (_bg ,_fe .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0063\u0068\u0061ng\u0065\u0064",_fdf .Get ("\u0054")));};};};if FT ,_dcg :=_ff .GetNameVal (_fdf .Get ("\u0046\u0054"));_dcg {if FT =="\u0053\u0069\u0067"{if _cbc ,_cbe :=_ff .GetIndirect (_fdf .Get ("\u0056"));
_cbe {if _ ,_acg :=_ade ._b [_cbc .ObjectNumber ];_acg {switch _ade ._d {case NoRestrictions ,FillForms ,FillFormsAndAnnots :_ade ._bd .addWarningWithDescription (_bg ,_fe .Sprintf ("\u0053\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0066\u006f\u0072\u0020%\u0073 \u0066i\u0065l\u0064\u0020\u0077\u0061\u0073\u0020\u0063\u0068\u0061\u006e\u0067\u0065\u0064",T ));
default:_ade ._bd .addErrorWithDescription (_bg ,_fe .Sprintf ("\u0053\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0066\u006f\u0072\u0020%\u0073 \u0066i\u0065l\u0064\u0020\u0077\u0061\u0073\u0020\u0063\u0068\u0061\u006e\u0067\u0065\u0064",T ));};};};};
};};for _ ,_gg :=range _cda {switch _ade ._d {case NoRestrictions :_ade ._bd .addWarningWithDescription (_bg ,_fe .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0072\u0065\u006dov\u0065\u0064",_gg .Get ("\u0054")));default:_ade ._bd .addErrorWithDescription (_bg ,_fe .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0072\u0065\u006dov\u0065\u0064",_gg .Get ("\u0054")));
};};return nil ;};

// String returns the state of the warning.
func (_gde *DiffResult )String ()string {return _fe .Sprintf ("\u0025\u0073\u0020\u0069n \u0072\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0073\u0020\u0023\u0025\u0064",_gde .Description ,_gde .Revision );};func (_afc *defaultDiffPolicy )compareAnnots (_dea int ,_eeab ,_dcc []_ff .PdfObject )error {_agbe :=make (map[int64 ]*_ff .PdfObjectDictionary );
for _ ,_fb :=range _eeab {_df ,_gfg :=_ff .GetIndirect (_fb );if !_gfg {return _c .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0061\u006e\u006e\u006ft\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");};_dead ,_gfg :=_ff .GetDict (_df .PdfObject );
if !_gfg {return _c .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0061\u006e\u006e\u006ft\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");};_agbe [_df .ObjectNumber ]=_dead ;};for _ ,_eg :=range _dcc {_eca ,_dbd :=_ff .GetIndirect (_eg );
if !_dbd {return _c .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0061\u006e\u006e\u006ft\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");};_befa ,_dbd :=_ff .GetDict (_eca .PdfObject );if !_dbd {return _c .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0061\u006e\u006e\u006ft\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");
};_geb ,_ :=_ff .GetStringVal (_befa .Get ("\u0054"));_ebb ,_ :=_ff .GetNameVal (_befa .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if _ ,_ca :=_agbe [_eca .ObjectNumber ];!_ca {switch _afc ._d {case NoRestrictions ,FillFormsAndAnnots :_afc ._bd .addWarningWithDescription (_dea ,_fe .Sprintf ("\u0025\u0073\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0025\u0073\u0020\u0077\u0061\u0073\u0020\u0061d\u0064\u0065\u0064",_ebb ,_geb ));
default:_dcgd ,_beb :=_ff .GetDict (_eca .PdfObject );if !_beb {return _c .New ("u\u006ed\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0061n\u006e\u006f\u0074\u0061ti\u006f\u006e");};_caf ,_beb :=_ff .GetNameVal (_dcgd .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));
if !_beb {return _c .New ("\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0027\u0073\u0020\u0073\u0075\u0062\u0074\u0079\u0070\u0065");};if _caf =="\u0057\u0069\u0064\u0067\u0065\u0074"{switch _afc ._d {case NoRestrictions ,FillFormsAndAnnots ,FillForms :_afc ._bd .addWarningWithDescription (_dea ,_fe .Sprintf ("\u0025\u0073\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0025\u0073\u0020\u0077\u0061\u0073\u0020\u0061d\u0064\u0065\u0064",_ebb ,_geb ));
default:_afc ._bd .addErrorWithDescription (_dea ,_fe .Sprintf ("\u0025\u0073\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0025\u0073\u0020\u0077\u0061\u0073\u0020\u0061d\u0064\u0065\u0064",_ebb ,_geb ));};}else {_afc ._bd .addErrorWithDescription (_dea ,_fe .Sprintf ("\u0025\u0073\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0025\u0073\u0020\u0077\u0061\u0073\u0020\u0061d\u0064\u0065\u0064",_ebb ,_geb ));
};};}else {delete (_agbe ,_eca .ObjectNumber );if _dgf ,_cbd :=_afc ._b [_eca .ObjectNumber ];_cbd {switch _afc ._d {case NoRestrictions ,FillFormsAndAnnots :_afc ._bd .addWarningWithDescription (_dea ,_fe .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0063\u0068\u0061\u006eg\u0065\u0064",_ebb ,_geb ));
default:_fab ,_cf :=_ff .GetIndirect (_dgf );if !_cf {return _c .New ("u\u006ed\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0061n\u006e\u006f\u0074\u0061ti\u006f\u006e");};_cbec ,_cf :=_ff .GetDict (_fab .PdfObject );if !_cf {return _c .New ("u\u006ed\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0061n\u006e\u006f\u0074\u0061ti\u006f\u006e");
};_fec ,_cf :=_ff .GetNameVal (_cbec .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_cf {return _c .New ("\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0027\u0073\u0020\u0073\u0075\u0062\u0074\u0079\u0070\u0065");
};if _fec =="\u0057\u0069\u0064\u0067\u0065\u0074"{switch _afc ._d {case NoRestrictions ,FillFormsAndAnnots ,FillForms :_afc ._bd .addWarningWithDescription (_dea ,_fe .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0063\u0068\u0061\u006eg\u0065\u0064",_ebb ,_geb ));
default:_afc ._bd .addErrorWithDescription (_dea ,_fe .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0063\u0068\u0061\u006eg\u0065\u0064",_ebb ,_geb ));};}else {_afc ._bd .addErrorWithDescription (_dea ,_fe .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0063\u0068\u0061\u006eg\u0065\u0064",_ebb ,_geb ));
};};};};};for _ ,_adf :=range _agbe {_gbb ,_ :=_ff .GetStringVal (_adf .Get ("\u0054"));_bdf ,_ :=_ff .GetNameVal (_adf .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));switch _afc ._d {case NoRestrictions ,FillFormsAndAnnots :_afc ._bd .addWarningWithDescription (_dea ,_fe .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0072\u0065\u006d\u006fv\u0065\u0064",_bdf ,_gbb ));
default:_afc ._bd .addErrorWithDescription (_dea ,_fe .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0072\u0065\u006d\u006fv\u0065\u0064",_bdf ,_gbb ));};};return nil ;};func (_edf *DiffResults )addError (_cad *DiffResult ){if _edf .Errors ==nil {_edf .Errors =make ([]*DiffResult ,0);
};_edf .Errors =append (_edf .Errors ,_cad );};

// IsPermitted returns true if changes permitted.
func (_dgb *DiffResults )IsPermitted ()bool {return len (_dgb .Errors )==0};