//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package mdp ;import (_a "errors";_ag "fmt";_c "github.com/unidoc/unipdf/v3/core";);func (_bbga *DiffResults )addWarningWithDescription (_afg int ,_fca string ){if _bbga .Warnings ==nil {_bbga .Warnings =make ([]*DiffResult ,0);};_bbga .Warnings =append (_bbga .Warnings ,&DiffResult {Revision :_afg ,Description :_fca });
};

// ReviewFile implementation of DiffPolicy interface
// The default policy only checks the next types of objects:
// Page, Pages (container for page objects), Annot, Annots (container for annotation objects), Field.
// It checks adding, removing and modifying objects of these types.
func (_db *defaultDiffPolicy )ReviewFile (oldParser *_c .PdfParser ,newParser *_c .PdfParser ,params *MDPParameters )(*DiffResults ,error ){if oldParser .GetRevisionNumber ()> newParser .GetRevisionNumber (){return nil ,_a .New ("\u006f\u006c\u0064\u0020\u0072\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020\u006e\u0065\u0077\u0020r\u0065\u0076i\u0073\u0069\u006f\u006e");
};if oldParser .GetRevisionNumber ()==newParser .GetRevisionNumber (){if oldParser !=newParser {return nil ,_a .New ("\u0073\u0061m\u0065\u0020\u0072\u0065v\u0069\u0073i\u006f\u006e\u0073\u002c\u0020\u0062\u0075\u0074 \u0064\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0074\u0020\u0070\u0061r\u0073\u0065\u0072\u0073");
};return &DiffResults {},nil ;};if params ==nil {_db ._aa =NoRestrictions ;}else {_db ._aa =params .DocMDPLevel ;};_aad :=&DiffResults {};for _df :=oldParser .GetRevisionNumber ()+1;_df <=newParser .GetRevisionNumber ();_df ++{_b ,_fb :=newParser .GetRevision (_df -1);
if _fb !=nil {return nil ,_fb ;};_da ,_fb :=newParser .GetRevision (_df );if _fb !=nil {return nil ,_fb ;};_bb ,_fb :=_db .compareRevisions (_b ,_da );if _fb !=nil {return nil ,_fb ;};_aad .Warnings =append (_aad .Warnings ,_bb .Warnings ...);_aad .Errors =append (_aad .Errors ,_bb .Errors ...);
};return _aad ,nil ;};func NewDefaultDiffPolicy ()DiffPolicy {return &defaultDiffPolicy {_e :nil ,_d :&DiffResults {},_aa :0};};func (_affaf *defaultDiffPolicy )compareAnnots (_dfbb int ,_gbg ,_fgc []_c .PdfObject )error {_dca :=make (map[int64 ]*_c .PdfObjectDictionary );
for _ ,_fcc :=range _gbg {_abg ,_geb :=_c .GetIndirect (_fcc );if !_geb {return _a .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0061\u006e\u006e\u006ft\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");};_gae ,_geb :=_c .GetDict (_abg .PdfObject );
if !_geb {return _a .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0061\u006e\u006e\u006ft\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");};_dca [_abg .ObjectNumber ]=_gae ;};for _ ,_geg :=range _fgc {_ebb ,_gef :=_c .GetIndirect (_geg );
if !_gef {return _a .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0061\u006e\u006e\u006ft\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");};_ebd ,_gef :=_c .GetDict (_ebb .PdfObject );if !_gef {return _a .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0061\u006e\u006e\u006ft\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");
};_bac ,_ :=_c .GetStringVal (_ebd .Get ("\u0054"));_bgg ,_ :=_c .GetNameVal (_ebd .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if _ ,_bfg :=_dca [_ebb .ObjectNumber ];!_bfg {switch _affaf ._aa {case NoRestrictions ,FillFormsAndAnnots :_affaf ._d .addWarningWithDescription (_dfbb ,_ag .Sprintf ("\u0025\u0073\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0025\u0073\u0020\u0077\u0061\u0073\u0020\u0061d\u0064\u0065\u0064",_bgg ,_bac ));
default:_gbe ,_fea :=_c .GetDict (_ebb .PdfObject );if !_fea {return _a .New ("u\u006ed\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0061n\u006e\u006f\u0074\u0061ti\u006f\u006e");};_ddd ,_fea :=_c .GetNameVal (_gbe .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));
if !_fea {return _a .New ("\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0027\u0073\u0020\u0073\u0075\u0062\u0074\u0079\u0070\u0065");};if _ddd =="\u0057\u0069\u0064\u0067\u0065\u0074"{switch _affaf ._aa {case NoRestrictions ,FillFormsAndAnnots ,FillForms :_affaf ._d .addWarningWithDescription (_dfbb ,_ag .Sprintf ("\u0025\u0073\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0025\u0073\u0020\u0077\u0061\u0073\u0020\u0061d\u0064\u0065\u0064",_bgg ,_bac ));
default:_affaf ._d .addErrorWithDescription (_dfbb ,_ag .Sprintf ("\u0025\u0073\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0025\u0073\u0020\u0077\u0061\u0073\u0020\u0061d\u0064\u0065\u0064",_bgg ,_bac ));};}else {_affaf ._d .addErrorWithDescription (_dfbb ,_ag .Sprintf ("\u0025\u0073\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0025\u0073\u0020\u0077\u0061\u0073\u0020\u0061d\u0064\u0065\u0064",_bgg ,_bac ));
};};}else {delete (_dca ,_ebb .ObjectNumber );if _afe ,_eae :=_affaf ._e [_ebb .ObjectNumber ];_eae {switch _affaf ._aa {case NoRestrictions ,FillFormsAndAnnots :_affaf ._d .addWarningWithDescription (_dfbb ,_ag .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0063\u0068\u0061\u006eg\u0065\u0064",_bgg ,_bac ));
default:_eef ,_faf :=_c .GetIndirect (_afe );if !_faf {return _a .New ("u\u006ed\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0061n\u006e\u006f\u0074\u0061ti\u006f\u006e");};_gcc ,_faf :=_c .GetDict (_eef .PdfObject );if !_faf {return _a .New ("u\u006ed\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0061n\u006e\u006f\u0074\u0061ti\u006f\u006e");
};_eg ,_faf :=_c .GetNameVal (_gcc .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_faf {return _a .New ("\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0027\u0073\u0020\u0073\u0075\u0062\u0074\u0079\u0070\u0065");
};if _eg =="\u0057\u0069\u0064\u0067\u0065\u0074"{switch _affaf ._aa {case NoRestrictions ,FillFormsAndAnnots ,FillForms :_affaf ._d .addWarningWithDescription (_dfbb ,_ag .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0063\u0068\u0061\u006eg\u0065\u0064",_bgg ,_bac ));
default:_affaf ._d .addErrorWithDescription (_dfbb ,_ag .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0063\u0068\u0061\u006eg\u0065\u0064",_bgg ,_bac ));};}else {_affaf ._d .addErrorWithDescription (_dfbb ,_ag .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0063\u0068\u0061\u006eg\u0065\u0064",_bgg ,_bac ));
};};};};};for _ ,_gaef :=range _dca {_ggf ,_ :=_c .GetStringVal (_gaef .Get ("\u0054"));_adc ,_ :=_c .GetNameVal (_gaef .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));switch _affaf ._aa {case NoRestrictions ,FillFormsAndAnnots :_affaf ._d .addWarningWithDescription (_dfbb ,_ag .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0072\u0065\u006d\u006fv\u0065\u0064",_adc ,_ggf ));
default:_affaf ._d .addErrorWithDescription (_dfbb ,_ag .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0072\u0065\u006d\u006fv\u0065\u0064",_adc ,_ggf ));};};return nil ;};func (_baf *DiffResults )addError (_eff *DiffResult ){if _baf .Errors ==nil {_baf .Errors =make ([]*DiffResult ,0);
};_baf .Errors =append (_baf .Errors ,_eff );};type defaultDiffPolicy struct{_e map[int64 ]_c .PdfObject ;_d *DiffResults ;_aa DocMDPPermission ;};

// DiffResults describes the results of the DiffPolicy.
type DiffResults struct{Warnings []*DiffResult ;Errors []*DiffResult ;};const (NoRestrictions DocMDPPermission =0;NoChanges DocMDPPermission =1;FillForms DocMDPPermission =2;FillFormsAndAnnots DocMDPPermission =3;);func (_agf *defaultDiffPolicy )comparePages (_ef int ,_affa ,_cdg *_c .PdfIndirectObject )error {if _ ,_dee :=_agf ._e [_cdg .ObjectNumber ];
_dee {_agf ._d .addErrorWithDescription (_ef ,"\u0050a\u0067e\u0073\u0020\u0077\u0065\u0072e\u0020\u0063h\u0061\u006e\u0067\u0065\u0064");};_gfc ,_eaf :=_c .GetDict (_cdg .PdfObject );_gba ,_acg :=_c .GetDict (_affa .PdfObject );if !_eaf ||!_acg {return _a .New ("\u0075n\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0050\u0061g\u0065\u0073\u0027\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};_bae ,_eaf :=_c .GetArray (_gfc .Get ("\u004b\u0069\u0064\u0073"));_dd ,_acg :=_c .GetArray (_gba .Get ("\u004b\u0069\u0064\u0073"));if !_eaf ||!_acg {return _a .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0050\u0061\u0067\u0065s\u0027 \u0064\u0069\u0063\u0074\u0069\u006f\u006ea\u0072\u0079");
};_bfb :=_bae .Len ();if _bfb > _dd .Len (){_bfb =_dd .Len ();};for _cba :=0;_cba < _bfb ;_cba ++{_ad ,_ee :=_c .GetIndirect (_c .ResolveReference (_dd .Get (_cba )));_efb ,_gc :=_c .GetIndirect (_c .ResolveReference (_bae .Get (_cba )));if !_ee ||!_gc {return _a .New ("\u0075\u006e\u0065\u0078pe\u0063\u0074\u0065\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006f\u0062\u006a\u0065c\u0074");
};if _ad .ObjectNumber !=_efb .ObjectNumber {_agf ._d .addErrorWithDescription (_ef ,_ag .Sprintf ("p\u0061\u0067\u0065\u0020#%\u0064 \u0077\u0061\u0073\u0020\u0072e\u0070\u006c\u0061\u0063\u0065\u0064",_cba ));};_abd ,_ee :=_c .GetDict (_efb );_fgd ,_gc :=_c .GetDict (_ad );
if !_ee ||!_gc {return _a .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0070\u0061\u0067\u0065'\u0073 \u0064\u0069\u0063\u0074\u0069\u006f\u006ea\u0072\u0079");};_bda ,_fdc :=_gdd (_abd .Get ("\u0041\u006e\u006e\u006f\u0074\u0073"));
if _fdc !=nil {return _fdc ;};_bcb ,_fdc :=_gdd (_fgd .Get ("\u0041\u006e\u006e\u006f\u0074\u0073"));if _fdc !=nil {return _fdc ;};if _dge :=_agf .compareAnnots (_ef ,_bcb ,_bda );_dge !=nil {return _dge ;};};for _bad :=_bfb +1;_bad <=_bae .Len ();_bad ++{_agf ._d .addErrorWithDescription (_ef ,_ag .Sprintf ("\u0070a\u0067e\u0020\u0023\u0025\u0064\u0020w\u0061\u0073 \u0061\u0064\u0064\u0065\u0064",_bad ));
};for _fge :=_bfb +1;_fge <=_dd .Len ();_fge ++{_agf ._d .addErrorWithDescription (_ef ,_ag .Sprintf ("p\u0061g\u0065\u0020\u0023\u0025\u0064\u0020\u0077\u0061s\u0020\u0072\u0065\u006dov\u0065\u0064",_fge ));};return nil ;};func (_be *DiffResults )addErrorWithDescription (_aef int ,_bef string ){if _be .Errors ==nil {_be .Errors =make ([]*DiffResult ,0);
};_be .Errors =append (_be .Errors ,&DiffResult {Revision :_aef ,Description :_bef });};func (_bdf *DiffResults )addWarning (_cad *DiffResult ){if _bdf .Warnings ==nil {_bdf .Warnings =make ([]*DiffResult ,0);};_bdf .Warnings =append (_bdf .Warnings ,_cad );
};

// DiffPolicy interface for comparing two revisions of the Pdf document.
type DiffPolicy interface{

// ReviewFile should check the revisions of the old and new parsers
// and evaluate the differences between the revisions.
// Each implementation of this interface must decide
// how to handle cases where there are multiple revisions between the old and new revisions.
ReviewFile (_beg *_c .PdfParser ,_cc *_c .PdfParser ,_fbg *MDPParameters )(*DiffResults ,error );};

// DocMDPPermission is values for set up access permissions for DocMDP.
// (Section 12.8.2.2, Table 254 - Entries in a signature dictionary p. 471 in PDF32000_2008).
type DocMDPPermission int64 ;

// IsPermitted returns true if changes permitted.
func (_ddcf *DiffResults )IsPermitted ()bool {return len (_ddcf .Errors )==0};

// DiffResult describes the warning or the error for the DiffPolicy results.
type DiffResult struct{Revision int ;Description string ;};func (_de *defaultDiffPolicy )compareFields (_ff int ,_ac ,_af []_c .PdfObject )error {_gf :=make (map[int64 ]*_c .PdfObjectDictionary );for _ ,_age :=range _ac {_bc ,_fe :=_c .GetIndirect (_age );
if !_fe {return _a .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006cd\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");};_ageg ,_fe :=_c .GetDict (_bc .PdfObject );if !_fe {return _a .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0061\u006e\u006e\u006ft\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");
};_gf [_bc .ObjectNumber ]=_ageg ;};for _ ,_aea :=range _af {_aba ,_aca :=_c .GetIndirect (_aea );if !_aca {return _a .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006cd\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");
};_cd ,_aca :=_c .GetDict (_aba .PdfObject );if !_aca {return _a .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006cd\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");};T :=_cd .Get ("\u0054");if _ ,_ba :=_de ._e [_aba .ObjectNumber ];
_ba {switch _de ._aa {case NoRestrictions ,FillForms ,FillFormsAndAnnots :_de ._d .addWarningWithDescription (_ff ,_ag .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0063\u0068\u0061ng\u0065\u0064",T ));default:_de ._d .addErrorWithDescription (_ff ,_ag .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0063\u0068\u0061ng\u0065\u0064",T ));
};};if _ ,_ga :=_gf [_aba .ObjectNumber ];!_ga {switch _de ._aa {case NoRestrictions ,FillForms ,FillFormsAndAnnots :_de ._d .addWarningWithDescription (_ff ,_ag .Sprintf ("\u0046i\u0065l\u0064\u0020\u0025\u0073\u0020w\u0061\u0073 \u0061\u0064\u0064\u0065\u0064",_cd .Get ("\u0054")));
default:_de ._d .addErrorWithDescription (_ff ,_ag .Sprintf ("\u0046i\u0065l\u0064\u0020\u0025\u0073\u0020w\u0061\u0073 \u0061\u0064\u0064\u0065\u0064",_cd .Get ("\u0054")));};}else {delete (_gf ,_aba .ObjectNumber );if _ ,_cag :=_de ._e [_aba .ObjectNumber ];
_cag {switch _de ._aa {case NoRestrictions ,FillForms ,FillFormsAndAnnots :_de ._d .addWarningWithDescription (_ff ,_ag .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0063\u0068\u0061ng\u0065\u0064",_cd .Get ("\u0054")));default:_de ._d .addErrorWithDescription (_ff ,_ag .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0063\u0068\u0061ng\u0065\u0064",_cd .Get ("\u0054")));
};};};if FT ,_aga :=_c .GetNameVal (_cd .Get ("\u0046\u0054"));_aga {if FT =="\u0053\u0069\u0067"{if _daa ,_ce :=_c .GetIndirect (_cd .Get ("\u0056"));_ce {if _ ,_ea :=_de ._e [_daa .ObjectNumber ];_ea {switch _de ._aa {case NoRestrictions ,FillForms ,FillFormsAndAnnots :_de ._d .addWarningWithDescription (_ff ,_ag .Sprintf ("\u0053\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0066\u006f\u0072\u0020%\u0073 \u0066i\u0065l\u0064\u0020\u0077\u0061\u0073\u0020\u0063\u0068\u0061\u006e\u0067\u0065\u0064",T ));
default:_de ._d .addErrorWithDescription (_ff ,_ag .Sprintf ("\u0053\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0066\u006f\u0072\u0020%\u0073 \u0066i\u0065l\u0064\u0020\u0077\u0061\u0073\u0020\u0063\u0068\u0061\u006e\u0067\u0065\u0064",T ));};};};};};
};for _ ,_bbg :=range _gf {switch _de ._aa {case NoRestrictions :_de ._d .addWarningWithDescription (_ff ,_ag .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0072\u0065\u006dov\u0065\u0064",_bbg .Get ("\u0054")));default:_de ._d .addErrorWithDescription (_ff ,_ag .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0072\u0065\u006dov\u0065\u0064",_bbg .Get ("\u0054")));
};};return nil ;};func (_g *defaultDiffPolicy )compareRevisions (_bd *_c .PdfParser ,_fbf *_c .PdfParser )(*DiffResults ,error ){var _gd error ;_g ._e ,_gd =_fbf .GetUpdatedObjects (_bd );if _gd !=nil {return &DiffResults {},_gd ;};if len (_g ._e )==0{return &DiffResults {},nil ;
};_bf :=_fbf .GetRevisionNumber ();_dc ,_bg :=_c .GetIndirect (_c .ResolveReference (_bd .GetTrailer ().Get ("\u0052\u006f\u006f\u0074")));_ed ,_fba :=_c .GetIndirect (_c .ResolveReference (_fbf .GetTrailer ().Get ("\u0052\u006f\u006f\u0074")));if !_bg ||!_fba {return &DiffResults {},_a .New ("\u0065\u0072\u0072o\u0072\u0020\u0077\u0068i\u006c\u0065\u0020\u0067\u0065\u0074\u0074i\u006e\u0067\u0020\u0072\u006f\u006f\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};_fc ,_bg :=_c .GetDict (_c .ResolveReference (_dc .PdfObject ));_fa ,_fba :=_c .GetDict (_c .ResolveReference (_ed .PdfObject ));if !_bg ||!_fba {return &DiffResults {},_a .New ("\u0065\u0072\u0072\u006f\u0072\u0020\u0077\u0068\u0069\u006c\u0065\u0020\u0067e\u0074\u0074\u0069\u006e\u0067\u0020a\u0020\u0072\u006f\u006f\u0074\u0027\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _ge ,_agb :=_c .GetIndirect (_fa .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d"));_agb {_dg ,_eb :=_c .GetDict (_ge );if !_eb {return &DiffResults {},_a .New ("\u0065\u0072\u0072\u006f\u0072 \u0077\u0068\u0069\u006c\u0065\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067 \u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u0027\u0073\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_ae :=make ([]_c .PdfObject ,0);if _dfb ,_dae :=_c .GetIndirect (_fc .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d"));_dae {if _ca ,_aeb :=_c .GetDict (_dfb );_aeb {if _edf ,_dga :=_c .GetArray (_ca .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"));
_dga {_ae =_edf .Elements ();};};};_ab ,_eb :=_c .GetArray (_dg .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"));if !_eb {return &DiffResults {},_a .New ("\u0065\u0072r\u006f\u0072\u0020\u0077h\u0069\u006ce\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067 \u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u0027\u0073\u0020\u0066i\u0065\u006c\u0064\u0073");
};if _ebc :=_g .compareFields (_bf ,_ae ,_ab .Elements ());_ebc !=nil {return &DiffResults {},_ebc ;};};_gg ,_gb :=_c .GetIndirect (_fa .Get ("\u0050\u0061\u0067e\u0073"));if !_gb {return &DiffResults {},_a .New ("\u0065\u0072\u0072\u006f\u0072\u0020w\u0068\u0069\u006c\u0065\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020p\u0061\u0067\u0065\u0073\u0027\u0020\u006fb\u006a\u0065\u0063\u0074");
};_dac ,_gb :=_c .GetIndirect (_fc .Get ("\u0050\u0061\u0067e\u0073"));if !_gb {return &DiffResults {},_a .New ("\u0065\u0072\u0072\u006f\u0072\u0020w\u0068\u0069\u006c\u0065\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020p\u0061\u0067\u0065\u0073\u0027\u0020\u006fb\u006a\u0065\u0063\u0074");
};if _bbb :=_g .comparePages (_bf ,_dac ,_gg );_bbb !=nil {return &DiffResults {},_bbb ;};return _g ._d ,nil ;};

// String returns the state of the warning.
func (_gcf *DiffResult )String ()string {return _ag .Sprintf ("\u0025\u0073\u0020\u0069n \u0072\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0073\u0020\u0023\u0025\u0064",_gcf .Description ,_gcf .Revision );};func _gdd (_dbd _c .PdfObject )([]_c .PdfObject ,error ){_ade :=make ([]_c .PdfObject ,0);
if _dbd !=nil {_eee :=_dbd ;if _def ,_bbe :=_c .GetIndirect (_dbd );_bbe {_eee =_def .PdfObject ;};if _afc ,_ddc :=_c .GetArray (_eee );_ddc {_ade =_afc .Elements ();}else {return nil ,_a .New ("\u0075n\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0061n\u006eo\u0074s\u0027\u0020\u006f\u0062\u006a\u0065\u0063t");
};};return _ade ,nil ;};

// MDPParameters describes parameters for the MDP checks (now only DocMDP).
type MDPParameters struct{DocMDPLevel DocMDPPermission ;};