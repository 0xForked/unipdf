//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package mdp ;import (_g "errors";_gd "fmt";_gda "github.com/unidoc/unipdf/v3/core";);func (_dbg *defaultDiffPolicy )compareAnnots (_fdg int ,_gcce ,_gge []_gda .PdfObject )error {_ccd :=make (map[int64 ]*_gda .PdfObjectDictionary );for _ ,_efc :=range _gcce {_dda ,_dcc :=_gda .GetIndirect (_efc );
if !_dcc {return _g .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0061\u006e\u006e\u006ft\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");};_fgd ,_dcc :=_gda .GetDict (_dda .PdfObject );if !_dcc {return _g .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0061\u006e\u006e\u006ft\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");
};_ccd [_dda .ObjectNumber ]=_fgd ;};for _ ,_fgb :=range _gge {_dcd ,_bgd :=_gda .GetIndirect (_fgb );if !_bgd {return _g .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0061\u006e\u006e\u006ft\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");
};_fag ,_bgd :=_gda .GetDict (_dcd .PdfObject );if !_bgd {return _g .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0061\u006e\u006e\u006ft\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");};_dba ,_ :=_gda .GetStringVal (_fag .Get ("\u0054"));
_cae ,_ :=_gda .GetNameVal (_fag .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if _ ,_aaa :=_ccd [_dcd .ObjectNumber ];!_aaa {switch _dbg ._gb {case NoRestrictions ,FillFormsAndAnnots :_dbg ._b .addWarningWithDescription (_fdg ,_gd .Sprintf ("\u0025\u0073\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0025\u0073\u0020\u0077\u0061\u0073\u0020\u0061d\u0064\u0065\u0064",_cae ,_dba ));
default:_afcd ,_faee :=_gda .GetDict (_dcd .PdfObject );if !_faee {return _g .New ("u\u006ed\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0061n\u006e\u006f\u0074\u0061ti\u006f\u006e");};_dfd ,_faee :=_gda .GetNameVal (_afcd .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));
if !_faee {return _g .New ("\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0027\u0073\u0020\u0073\u0075\u0062\u0074\u0079\u0070\u0065");};if _dfd =="\u0057\u0069\u0064\u0067\u0065\u0074"{switch _dbg ._gb {case NoRestrictions ,FillFormsAndAnnots ,FillForms :_dbg ._b .addWarningWithDescription (_fdg ,_gd .Sprintf ("\u0025\u0073\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0025\u0073\u0020\u0077\u0061\u0073\u0020\u0061d\u0064\u0065\u0064",_cae ,_dba ));
default:_dbg ._b .addErrorWithDescription (_fdg ,_gd .Sprintf ("\u0025\u0073\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0025\u0073\u0020\u0077\u0061\u0073\u0020\u0061d\u0064\u0065\u0064",_cae ,_dba ));};}else {_dbg ._b .addErrorWithDescription (_fdg ,_gd .Sprintf ("\u0025\u0073\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0025\u0073\u0020\u0077\u0061\u0073\u0020\u0061d\u0064\u0065\u0064",_cae ,_dba ));
};};}else {delete (_ccd ,_dcd .ObjectNumber );if _afd ,_fbga :=_dbg ._f [_dcd .ObjectNumber ];_fbga {switch _dbg ._gb {case NoRestrictions ,FillFormsAndAnnots :_dbg ._b .addWarningWithDescription (_fdg ,_gd .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0063\u0068\u0061\u006eg\u0065\u0064",_cae ,_dba ));
default:_efg ,_bbe :=_gda .GetIndirect (_afd );if !_bbe {return _g .New ("u\u006ed\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0061n\u006e\u006f\u0074\u0061ti\u006f\u006e");};_aee ,_bbe :=_gda .GetDict (_efg .PdfObject );if !_bbe {return _g .New ("u\u006ed\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0061n\u006e\u006f\u0074\u0061ti\u006f\u006e");
};_eeg ,_bbe :=_gda .GetNameVal (_aee .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_bbe {return _g .New ("\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0027\u0073\u0020\u0073\u0075\u0062\u0074\u0079\u0070\u0065");
};if _eeg =="\u0057\u0069\u0064\u0067\u0065\u0074"{switch _dbg ._gb {case NoRestrictions ,FillFormsAndAnnots ,FillForms :_dbg ._b .addWarningWithDescription (_fdg ,_gd .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0063\u0068\u0061\u006eg\u0065\u0064",_cae ,_dba ));
default:_dbg ._b .addErrorWithDescription (_fdg ,_gd .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0063\u0068\u0061\u006eg\u0065\u0064",_cae ,_dba ));};}else {_dbg ._b .addErrorWithDescription (_fdg ,_gd .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0063\u0068\u0061\u006eg\u0065\u0064",_cae ,_dba ));
};};};};};for _ ,_fgf :=range _ccd {_ad ,_ :=_gda .GetStringVal (_fgf .Get ("\u0054"));_adb ,_ :=_gda .GetNameVal (_fgf .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));switch _dbg ._gb {case NoRestrictions ,FillFormsAndAnnots :_dbg ._b .addWarningWithDescription (_fdg ,_gd .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0072\u0065\u006d\u006fv\u0065\u0064",_adb ,_ad ));
default:_dbg ._b .addErrorWithDescription (_fdg ,_gd .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0072\u0065\u006d\u006fv\u0065\u0064",_adb ,_ad ));};};return nil ;};

// DiffResult describes the warning or the error for the DiffPolicy results.
type DiffResult struct{Revision int ;Description string ;};

// String returns the state of the warning.
func (_eb *DiffResult )String ()string {return _gd .Sprintf ("\u0025\u0073\u0020\u0069n \u0072\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0073\u0020\u0023\u0025\u0064",_eb .Description ,_eb .Revision );};

// DiffResults describes the results of the DiffPolicy.
type DiffResults struct{Warnings []*DiffResult ;Errors []*DiffResult ;};func (_aae *DiffResults )addError (_fcg *DiffResult ){if _aae .Errors ==nil {_aae .Errors =make ([]*DiffResult ,0);};_aae .Errors =append (_aae .Errors ,_fcg );};func NewDefaultDiffPolicy ()DiffPolicy {return &defaultDiffPolicy {_f :nil ,_b :&DiffResults {},_gb :0};
};

// DiffPolicy interface for comparing two revisions of the Pdf document.
type DiffPolicy interface{

// ReviewFile should check the revisions of the old and new parsers
// and evaluate the differences between the revisions.
// Each implementation of this interface must decide
// how to handle cases where there are multiple revisions between the old and new revisions.
ReviewFile (_dce *_gda .PdfParser ,_cgaf *_gda .PdfParser ,_beb *MDPParameters )(*DiffResults ,error );};

// MDPParameters describes parameters for the MDP checks (now only DocMDP).
type MDPParameters struct{DocMDPLevel DocMDPPermission ;};func (_ag *defaultDiffPolicy )comparePages (_eef int ,_cbd ,_ccb *_gda .PdfIndirectObject )error {if _ ,_ca :=_ag ._f [_ccb .ObjectNumber ];_ca {_ag ._b .addErrorWithDescription (_eef ,"\u0050a\u0067e\u0073\u0020\u0077\u0065\u0072e\u0020\u0063h\u0061\u006e\u0067\u0065\u0064");
};_fgc ,_ddc :=_gda .GetDict (_ccb .PdfObject );_ce ,_fd :=_gda .GetDict (_cbd .PdfObject );if !_ddc ||!_fd {return _g .New ("\u0075n\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0050\u0061g\u0065\u0073\u0027\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};_efe ,_ddc :=_gda .GetArray (_fgc .Get ("\u004b\u0069\u0064\u0073"));_bfe ,_fd :=_gda .GetArray (_ce .Get ("\u004b\u0069\u0064\u0073"));if !_ddc ||!_fd {return _g .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0050\u0061\u0067\u0065s\u0027 \u0064\u0069\u0063\u0074\u0069\u006f\u006ea\u0072\u0079");
};_gfa :=_efe .Len ();if _gfa > _bfe .Len (){_gfa =_bfe .Len ();};for _fdb :=0;_fdb < _gfa ;_fdb ++{_acg ,_ccg :=_gda .GetIndirect (_gda .ResolveReference (_bfe .Get (_fdb )));_dgd ,_gdb :=_gda .GetIndirect (_gda .ResolveReference (_efe .Get (_fdb )));
if !_ccg ||!_gdb {return _g .New ("\u0075\u006e\u0065\u0078pe\u0063\u0074\u0065\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006f\u0062\u006a\u0065c\u0074");};if _acg .ObjectNumber !=_dgd .ObjectNumber {_ag ._b .addErrorWithDescription (_eef ,_gd .Sprintf ("p\u0061\u0067\u0065\u0020#%\u0064 \u0077\u0061\u0073\u0020\u0072e\u0070\u006c\u0061\u0063\u0065\u0064",_fdb ));
};_ec ,_ccg :=_gda .GetDict (_dgd );_bd ,_gdb :=_gda .GetDict (_acg );if !_ccg ||!_gdb {return _g .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0070\u0061\u0067\u0065'\u0073 \u0064\u0069\u0063\u0074\u0069\u006f\u006ea\u0072\u0079");
};_bgc ,_fbf :=_dbc (_ec .Get ("\u0041\u006e\u006e\u006f\u0074\u0073"));if _fbf !=nil {return _fbf ;};_edg ,_fbf :=_dbc (_bd .Get ("\u0041\u006e\u006e\u006f\u0074\u0073"));if _fbf !=nil {return _fbf ;};if _ede :=_ag .compareAnnots (_eef ,_edg ,_bgc );_ede !=nil {return _ede ;
};};for _fbgb :=_gfa +1;_fbgb <=_efe .Len ();_fbgb ++{_ag ._b .addErrorWithDescription (_eef ,_gd .Sprintf ("\u0070a\u0067e\u0020\u0023\u0025\u0064\u0020w\u0061\u0073 \u0061\u0064\u0064\u0065\u0064",_fbgb ));};for _acb :=_gfa +1;_acb <=_bfe .Len ();_acb ++{_ag ._b .addErrorWithDescription (_eef ,_gd .Sprintf ("p\u0061g\u0065\u0020\u0023\u0025\u0064\u0020\u0077\u0061s\u0020\u0072\u0065\u006dov\u0065\u0064",_acb ));
};return nil ;};type defaultDiffPolicy struct{_f map[int64 ]_gda .PdfObject ;_b *DiffResults ;_gb DocMDPPermission ;};

// DocMDPPermission is values for set up access permissions for DocMDP.
// (Section 12.8.2.2, Table 254 - Entries in a signature dictionary p. 471 in PDF32000_2008).
type DocMDPPermission int64 ;

// IsPermitted returns true if changes permitted.
func (_cf *DiffResults )IsPermitted ()bool {return len (_cf .Errors )==0};func (_be *defaultDiffPolicy )compareFields (_cga int ,_ab ,_gc []_gda .PdfObject )error {_gfg :=make (map[int64 ]*_gda .PdfObjectDictionary );for _ ,_afa :=range _ab {_ae ,_eg :=_gda .GetIndirect (_afa );
if !_eg {return _g .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006cd\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");};_gg ,_eg :=_gda .GetDict (_ae .PdfObject );if !_eg {return _g .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0061\u006e\u006e\u006ft\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");
};_gfg [_ae .ObjectNumber ]=_gg ;};for _ ,_egd :=range _gc {_ef ,_edb :=_gda .GetIndirect (_egd );if !_edb {return _g .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006cd\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");
};_aff ,_edb :=_gda .GetDict (_ef .PdfObject );if !_edb {return _g .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006cd\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");};T :=_aff .Get ("\u0054");
if _ ,_ge :=_be ._f [_ef .ObjectNumber ];_ge {switch _be ._gb {case NoRestrictions ,FillForms ,FillFormsAndAnnots :_be ._b .addWarningWithDescription (_cga ,_gd .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0063\u0068\u0061ng\u0065\u0064",T ));
default:_be ._b .addErrorWithDescription (_cga ,_gd .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0063\u0068\u0061ng\u0065\u0064",T ));};};if _ ,_gcc :=_gfg [_ef .ObjectNumber ];!_gcc {switch _be ._gb {case NoRestrictions ,FillForms ,FillFormsAndAnnots :_be ._b .addWarningWithDescription (_cga ,_gd .Sprintf ("\u0046i\u0065l\u0064\u0020\u0025\u0073\u0020w\u0061\u0073 \u0061\u0064\u0064\u0065\u0064",_aff .Get ("\u0054")));
default:_be ._b .addErrorWithDescription (_cga ,_gd .Sprintf ("\u0046i\u0065l\u0064\u0020\u0025\u0073\u0020w\u0061\u0073 \u0061\u0064\u0064\u0065\u0064",_aff .Get ("\u0054")));};}else {delete (_gfg ,_ef .ObjectNumber );if _ ,_efb :=_be ._f [_ef .ObjectNumber ];
_efb {switch _be ._gb {case NoRestrictions ,FillForms ,FillFormsAndAnnots :_be ._b .addWarningWithDescription (_cga ,_gd .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0063\u0068\u0061ng\u0065\u0064",_aff .Get ("\u0054")));
default:_be ._b .addErrorWithDescription (_cga ,_gd .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0063\u0068\u0061ng\u0065\u0064",_aff .Get ("\u0054")));};};};if FT ,_afc :=_gda .GetNameVal (_aff .Get ("\u0046\u0054"));_afc {if FT =="\u0053\u0069\u0067"{if _dggb ,_ee :=_gda .GetIndirect (_aff .Get ("\u0056"));
_ee {if _ ,_dff :=_be ._f [_dggb .ObjectNumber ];_dff {switch _be ._gb {case NoRestrictions ,FillForms ,FillFormsAndAnnots :_be ._b .addWarningWithDescription (_cga ,_gd .Sprintf ("\u0053\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0066\u006f\u0072\u0020%\u0073 \u0066i\u0065l\u0064\u0020\u0077\u0061\u0073\u0020\u0063\u0068\u0061\u006e\u0067\u0065\u0064",T ));
default:_be ._b .addErrorWithDescription (_cga ,_gd .Sprintf ("\u0053\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0066\u006f\u0072\u0020%\u0073 \u0066i\u0065l\u0064\u0020\u0077\u0061\u0073\u0020\u0063\u0068\u0061\u006e\u0067\u0065\u0064",T ));};};};};
};};for _ ,_edbe :=range _gfg {switch _be ._gb {case NoRestrictions :_be ._b .addWarningWithDescription (_cga ,_gd .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0072\u0065\u006dov\u0065\u0064",_edbe .Get ("\u0054")));default:_be ._b .addErrorWithDescription (_cga ,_gd .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0072\u0065\u006dov\u0065\u0064",_edbe .Get ("\u0054")));
};};return nil ;};const (NoRestrictions DocMDPPermission =0;NoChanges DocMDPPermission =1;FillForms DocMDPPermission =2;FillFormsAndAnnots DocMDPPermission =3;);

// ReviewFile implementation of DiffPolicy interface
// The default policy only checks the next types of objects:
// Page, Pages (container for page objects), Annot, Annots (container for annotation objects), Field.
// It checks adding, removing and modifying objects of these types.
func (_e *defaultDiffPolicy )ReviewFile (oldParser *_gda .PdfParser ,newParser *_gda .PdfParser ,params *MDPParameters )(*DiffResults ,error ){if oldParser .GetRevisionNumber ()> newParser .GetRevisionNumber (){return nil ,_g .New ("\u006f\u006c\u0064\u0020\u0072\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020\u006e\u0065\u0077\u0020r\u0065\u0076i\u0073\u0069\u006f\u006e");
};if oldParser .GetRevisionNumber ()==newParser .GetRevisionNumber (){if oldParser !=newParser {return nil ,_g .New ("\u0073\u0061m\u0065\u0020\u0072\u0065v\u0069\u0073i\u006f\u006e\u0073\u002c\u0020\u0062\u0075\u0074 \u0064\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0074\u0020\u0070\u0061r\u0073\u0065\u0072\u0073");
};return &DiffResults {},nil ;};if params ==nil {_e ._gb =NoRestrictions ;}else {_e ._gb =params .DocMDPLevel ;};_c :=&DiffResults {};for _d :=oldParser .GetRevisionNumber ()+1;_d <=newParser .GetRevisionNumber ();_d ++{_gdac ,_bf :=newParser .GetRevision (_d -1);
if _bf !=nil {return nil ,_bf ;};_fa ,_bf :=newParser .GetRevision (_d );if _bf !=nil {return nil ,_bf ;};_fb ,_bf :=_e .compareRevisions (_gdac ,_fa );if _bf !=nil {return nil ,_bf ;};_c .Warnings =append (_c .Warnings ,_fb .Warnings ...);_c .Errors =append (_c .Errors ,_fb .Errors ...);
};return _c ,nil ;};func (_bfc *DiffResults )addWarning (_gccd *DiffResult ){if _bfc .Warnings ==nil {_bfc .Warnings =make ([]*DiffResult ,0);};_bfc .Warnings =append (_bfc .Warnings ,_gccd );};func (_ga *DiffResults )addErrorWithDescription (_eaa int ,_dfdc string ){if _ga .Errors ==nil {_ga .Errors =make ([]*DiffResult ,0);
};_ga .Errors =append (_ga .Errors ,&DiffResult {Revision :_eaa ,Description :_dfdc });};func _dbc (_bcb _gda .PdfObject )([]_gda .PdfObject ,error ){_fdc :=make ([]_gda .PdfObject ,0);if _bcb !=nil {_ea :=_bcb ;if _ege ,_aef :=_gda .GetIndirect (_bcb );
_aef {_ea =_ege .PdfObject ;};if _ecf ,_caeb :=_gda .GetArray (_ea );_caeb {_fdc =_ecf .Elements ();}else {return nil ,_g .New ("\u0075n\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0061n\u006eo\u0074s\u0027\u0020\u006f\u0062\u006a\u0065\u0063t");
};};return _fdc ,nil ;};func (_ggee *DiffResults )addWarningWithDescription (_bgf int ,_edc string ){if _ggee .Warnings ==nil {_ggee .Warnings =make ([]*DiffResult ,0);};_ggee .Warnings =append (_ggee .Warnings ,&DiffResult {Revision :_bgf ,Description :_edc });
};func (_ed *defaultDiffPolicy )compareRevisions (_ba *_gda .PdfParser ,_af *_gda .PdfParser )(*DiffResults ,error ){var _dg error ;_ed ._f ,_dg =_af .GetUpdatedObjects (_ba );if _dg !=nil {return &DiffResults {},_dg ;};if len (_ed ._f )==0{return &DiffResults {},nil ;
};_df :=_af .GetRevisionNumber ();_fc ,_cg :=_gda .GetIndirect (_gda .ResolveReference (_ba .GetTrailer ().Get ("\u0052\u006f\u006f\u0074")));_fca ,_dd :=_gda .GetIndirect (_gda .ResolveReference (_af .GetTrailer ().Get ("\u0052\u006f\u006f\u0074")));if !_cg ||!_dd {return &DiffResults {},_g .New ("\u0065\u0072\u0072o\u0072\u0020\u0077\u0068i\u006c\u0065\u0020\u0067\u0065\u0074\u0074i\u006e\u0067\u0020\u0072\u006f\u006f\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};_fg ,_cg :=_gda .GetDict (_gda .ResolveReference (_fc .PdfObject ));_fae ,_dd :=_gda .GetDict (_gda .ResolveReference (_fca .PdfObject ));if !_cg ||!_dd {return &DiffResults {},_g .New ("\u0065\u0072\u0072\u006f\u0072\u0020\u0077\u0068\u0069\u006c\u0065\u0020\u0067e\u0074\u0074\u0069\u006e\u0067\u0020a\u0020\u0072\u006f\u006f\u0074\u0027\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _gdag ,_bab :=_gda .GetIndirect (_fae .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d"));_bab {_cd ,_fad :=_gda .GetDict (_gdag );if !_fad {return &DiffResults {},_g .New ("\u0065\u0072\u0072\u006f\u0072 \u0077\u0068\u0069\u006c\u0065\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067 \u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u0027\u0073\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_cb :=make ([]_gda .PdfObject ,0);if _bac ,_gf :=_gda .GetIndirect (_fg .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d"));_gf {if _edf ,_dfg :=_gda .GetDict (_bac );_dfg {if _ac ,_cgg :=_gda .GetArray (_edf .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"));
_cgg {_cb =_ac .Elements ();};};};_dc ,_fad :=_gda .GetArray (_cd .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"));if !_fad {return &DiffResults {},_g .New ("\u0065\u0072r\u006f\u0072\u0020\u0077h\u0069\u006ce\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067 \u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u0027\u0073\u0020\u0066i\u0065\u006c\u0064\u0073");
};if _aa :=_ed .compareFields (_df ,_cb ,_dc .Elements ());_aa !=nil {return &DiffResults {},_aa ;};};_fbg ,_faec :=_gda .GetIndirect (_fae .Get ("\u0050\u0061\u0067e\u0073"));if !_faec {return &DiffResults {},_g .New ("\u0065\u0072\u0072\u006f\u0072\u0020w\u0068\u0069\u006c\u0065\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020p\u0061\u0067\u0065\u0073\u0027\u0020\u006fb\u006a\u0065\u0063\u0074");
};_fe ,_faec :=_gda .GetIndirect (_fg .Get ("\u0050\u0061\u0067e\u0073"));if !_faec {return &DiffResults {},_g .New ("\u0065\u0072\u0072\u006f\u0072\u0020w\u0068\u0069\u006c\u0065\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020p\u0061\u0067\u0065\u0073\u0027\u0020\u006fb\u006a\u0065\u0063\u0074");
};if _cc :=_ed .comparePages (_df ,_fe ,_fbg );_cc !=nil {return &DiffResults {},_cc ;};return _ed ._b ,nil ;};