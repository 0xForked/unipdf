//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package mdp ;import (_c "errors";_e "fmt";_g "github.com/unidoc/unipdf/v3/core";);func (_adc *DiffResults )addErrorWithDescription (_deb int ,_cad string ){if _adc .Errors ==nil {_adc .Errors =make ([]*DiffResult ,0);};_adc .Errors =append (_adc .Errors ,&DiffResult {Revision :_deb ,Description :_cad });
};func (_ceb *defaultDiffPolicy )compareFields (_cc int ,_aab ,_ad []_g .PdfObject )error {_cf :=make (map[int64 ]*_g .PdfObjectDictionary );for _ ,_ece :=range _aab {_bdb ,_cge :=_g .GetIndirect (_ece );if !_cge {return _c .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006cd\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");
};_cebd ,_cge :=_g .GetDict (_bdb .PdfObject );if !_cge {return _c .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0061\u006e\u006e\u006ft\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");};_cf [_bdb .ObjectNumber ]=_cebd ;
};for _ ,_dgc :=range _ad {_da ,_gb :=_g .GetIndirect (_dgc );if !_gb {return _c .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006cd\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");};_dea ,_gb :=_g .GetDict (_da .PdfObject );
if !_gb {return _c .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006cd\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");};T :=_dea .Get ("\u0054");if _ ,_fd :=_ceb ._a [_da .ObjectNumber ];_fd {switch _ceb ._gd {case NoRestrictions ,FillForms ,FillFormsAndAnnots :_ceb ._b .addWarningWithDescription (_cc ,_e .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0063\u0068\u0061ng\u0065\u0064",T ));
default:_ceb ._b .addErrorWithDescription (_cc ,_e .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0063\u0068\u0061ng\u0065\u0064",T ));};};if _ ,_egc :=_cf [_da .ObjectNumber ];!_egc {switch _ceb ._gd {case NoRestrictions ,FillForms ,FillFormsAndAnnots :_ceb ._b .addWarningWithDescription (_cc ,_e .Sprintf ("\u0046i\u0065l\u0064\u0020\u0025\u0073\u0020w\u0061\u0073 \u0061\u0064\u0064\u0065\u0064",_dea .Get ("\u0054")));
default:_ceb ._b .addErrorWithDescription (_cc ,_e .Sprintf ("\u0046i\u0065l\u0064\u0020\u0025\u0073\u0020w\u0061\u0073 \u0061\u0064\u0064\u0065\u0064",_dea .Get ("\u0054")));};}else {delete (_cf ,_da .ObjectNumber );if _ ,_ccb :=_ceb ._a [_da .ObjectNumber ];
_ccb {switch _ceb ._gd {case NoRestrictions ,FillForms ,FillFormsAndAnnots :_ceb ._b .addWarningWithDescription (_cc ,_e .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0063\u0068\u0061ng\u0065\u0064",_dea .Get ("\u0054")));
default:_ceb ._b .addErrorWithDescription (_cc ,_e .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0063\u0068\u0061ng\u0065\u0064",_dea .Get ("\u0054")));};};};if FT ,_bdd :=_g .GetNameVal (_dea .Get ("\u0046\u0054"));_bdd {if FT =="\u0053\u0069\u0067"{if _fba ,_cdfb :=_g .GetIndirect (_dea .Get ("\u0056"));
_cdfb {if _ ,_cbd :=_ceb ._a [_fba .ObjectNumber ];_cbd {switch _ceb ._gd {case NoRestrictions ,FillForms ,FillFormsAndAnnots :_ceb ._b .addWarningWithDescription (_cc ,_e .Sprintf ("\u0053\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0066\u006f\u0072\u0020%\u0073 \u0066i\u0065l\u0064\u0020\u0077\u0061\u0073\u0020\u0063\u0068\u0061\u006e\u0067\u0065\u0064",T ));
default:_ceb ._b .addErrorWithDescription (_cc ,_e .Sprintf ("\u0053\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0066\u006f\u0072\u0020%\u0073 \u0066i\u0065l\u0064\u0020\u0077\u0061\u0073\u0020\u0063\u0068\u0061\u006e\u0067\u0065\u0064",T ));};};};};};
};for _ ,_cac :=range _cf {switch _ceb ._gd {case NoRestrictions :_ceb ._b .addWarningWithDescription (_cc ,_e .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0072\u0065\u006dov\u0065\u0064",_cac .Get ("\u0054")));default:_ceb ._b .addErrorWithDescription (_cc ,_e .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0072\u0065\u006dov\u0065\u0064",_cac .Get ("\u0054")));
};};return nil ;};const (NoRestrictions DocMDPPermission =0;NoChanges DocMDPPermission =1;FillForms DocMDPPermission =2;FillFormsAndAnnots DocMDPPermission =3;);

// DiffResults describes the results of the DiffPolicy.
type DiffResults struct{Warnings []*DiffResult ;Errors []*DiffResult ;};func _bgaf (_gga _g .PdfObject )([]_g .PdfObject ,error ){_fcd :=make ([]_g .PdfObject ,0);if _gga !=nil {_daf :=_gga ;if _ed ,_gce :=_g .GetIndirect (_gga );_gce {_daf =_ed .PdfObject ;
};if _cag ,_eacd :=_g .GetArray (_daf );_eacd {_fcd =_cag .Elements ();}else {return nil ,_c .New ("\u0075n\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0061n\u006eo\u0074s\u0027\u0020\u006f\u0062\u006a\u0065\u0063t");};};return _fcd ,nil ;};

// MDPParameters describes parameters for the MDP checks (now only DocMDP).
type MDPParameters struct{DocMDPLevel DocMDPPermission ;};func (_gccc *DiffResults )addError (_gde *DiffResult ){if _gccc .Errors ==nil {_gccc .Errors =make ([]*DiffResult ,0);};_gccc .Errors =append (_gccc .Errors ,_gde );};

// DiffPolicy interface for comparing two revisions of the Pdf document.
type DiffPolicy interface{

// ReviewFile should check the revisions of the old and new parsers
// and evaluate the differences between the revisions.
// Each implementation of this interface must decide
// how to handle cases where there are multiple revisions between the old and new revisions.
ReviewFile (_cfg *_g .PdfParser ,_dde *_g .PdfParser ,_feba *MDPParameters )(*DiffResults ,error );};func (_feb *DiffResults )addWarning (_fbb *DiffResult ){if _feb .Warnings ==nil {_feb .Warnings =make ([]*DiffResult ,0);};_feb .Warnings =append (_feb .Warnings ,_fbb );
};

// DocMDPPermission is values for set up access permissions for DocMDP.
// (Section 12.8.2.2, Table 254 - Entries in a signature dictionary p. 471 in PDF32000_2008).
type DocMDPPermission int64 ;

// ReviewFile implementation of DiffPolicy interface
// The default policy only checks the next types of objects:
// Page, Pages (container for page objects), Annot, Annots (container for annotation objects), Field.
// It checks adding, removing and modifying objects of these types.
func (_bg *defaultDiffPolicy )ReviewFile (oldParser *_g .PdfParser ,newParser *_g .PdfParser ,params *MDPParameters )(*DiffResults ,error ){if oldParser .GetRevisionNumber ()> newParser .GetRevisionNumber (){return nil ,_c .New ("\u006f\u006c\u0064\u0020\u0072\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020\u006e\u0065\u0077\u0020r\u0065\u0076i\u0073\u0069\u006f\u006e");
};if oldParser .GetRevisionNumber ()==newParser .GetRevisionNumber (){if oldParser !=newParser {return nil ,_c .New ("\u0073\u0061m\u0065\u0020\u0072\u0065v\u0069\u0073i\u006f\u006e\u0073\u002c\u0020\u0062\u0075\u0074 \u0064\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0074\u0020\u0070\u0061r\u0073\u0065\u0072\u0073");
};return &DiffResults {},nil ;};if params ==nil {_bg ._gd =NoRestrictions ;}else {_bg ._gd =params .DocMDPLevel ;};_bgf :=&DiffResults {};for _ef :=oldParser .GetRevisionNumber ()+1;_ef <=newParser .GetRevisionNumber ();_ef ++{_cd ,_be :=newParser .GetRevision (_ef -1);
if _be !=nil {return nil ,_be ;};_d ,_be :=newParser .GetRevision (_ef );if _be !=nil {return nil ,_be ;};_ec ,_be :=_bg .compareRevisions (_cd ,_d );if _be !=nil {return nil ,_be ;};_bgf .Warnings =append (_bgf .Warnings ,_ec .Warnings ...);_bgf .Errors =append (_bgf .Errors ,_ec .Errors ...);
};return _bgf ,nil ;};func (_bbg *DiffResults )addWarningWithDescription (_afe int ,_gcg string ){if _bbg .Warnings ==nil {_bbg .Warnings =make ([]*DiffResult ,0);};_bbg .Warnings =append (_bbg .Warnings ,&DiffResult {Revision :_afe ,Description :_gcg });
};func (_cfe *defaultDiffPolicy )comparePages (_bf int ,_gfg ,_fg *_g .PdfIndirectObject )error {if _ ,_gcc :=_cfe ._a [_fg .ObjectNumber ];_gcc {_cfe ._b .addErrorWithDescription (_bf ,"\u0050a\u0067e\u0073\u0020\u0077\u0065\u0072e\u0020\u0063h\u0061\u006e\u0067\u0065\u0064");
};_cfec ,_bag :=_g .GetDict (_fg .PdfObject );_dgb ,_cff :=_g .GetDict (_gfg .PdfObject );if !_bag ||!_cff {return _c .New ("\u0075n\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0050\u0061g\u0065\u0073\u0027\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};_bfe ,_bag :=_g .GetArray (_cfec .Get ("\u004b\u0069\u0064\u0073"));_fdd ,_cff :=_g .GetArray (_dgb .Get ("\u004b\u0069\u0064\u0073"));if !_bag ||!_cff {return _c .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0050\u0061\u0067\u0065s\u0027 \u0064\u0069\u0063\u0074\u0069\u006f\u006ea\u0072\u0079");
};_cfd :=_bfe .Len ();if _cfd > _fdd .Len (){_cfd =_fdd .Len ();};for _fab :=0;_fab < _cfd ;_fab ++{_bce ,_bbb :=_g .GetIndirect (_g .ResolveReference (_fdd .Get (_fab )));_abd ,_cacd :=_g .GetIndirect (_g .ResolveReference (_bfe .Get (_fab )));if !_bbb ||!_cacd {return _c .New ("\u0075\u006e\u0065\u0078pe\u0063\u0074\u0065\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006f\u0062\u006a\u0065c\u0074");
};if _bce .ObjectNumber !=_abd .ObjectNumber {_cfe ._b .addErrorWithDescription (_bf ,_e .Sprintf ("p\u0061\u0067\u0065\u0020#%\u0064 \u0077\u0061\u0073\u0020\u0072e\u0070\u006c\u0061\u0063\u0065\u0064",_fab ));};_fc ,_bbb :=_g .GetDict (_abd );_ea ,_cacd :=_g .GetDict (_bce );
if !_bbb ||!_cacd {return _c .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0070\u0061\u0067\u0065'\u0073 \u0064\u0069\u0063\u0074\u0069\u006f\u006ea\u0072\u0079");};_fe ,_cgb :=_bgaf (_fc .Get ("\u0041\u006e\u006e\u006f\u0074\u0073"));
if _cgb !=nil {return _cgb ;};_gff ,_cgb :=_bgaf (_ea .Get ("\u0041\u006e\u006e\u006f\u0074\u0073"));if _cgb !=nil {return _cgb ;};if _deeg :=_cfe .compareAnnots (_bf ,_gff ,_fe );_deeg !=nil {return _deeg ;};};for _ead :=_cfd +1;_ead <=_bfe .Len ();_ead ++{_cfe ._b .addErrorWithDescription (_bf ,_e .Sprintf ("\u0070a\u0067e\u0020\u0023\u0025\u0064\u0020w\u0061\u0073 \u0061\u0064\u0064\u0065\u0064",_ead ));
};for _fbaf :=_cfd +1;_fbaf <=_fdd .Len ();_fbaf ++{_cfe ._b .addErrorWithDescription (_bf ,_e .Sprintf ("p\u0061g\u0065\u0020\u0023\u0025\u0064\u0020\u0077\u0061s\u0020\u0072\u0065\u006dov\u0065\u0064",_fbaf ));};return nil ;};type defaultDiffPolicy struct{_a map[int64 ]_g .PdfObject ;
_b *DiffResults ;_gd DocMDPPermission ;};func NewDefaultDiffPolicy ()DiffPolicy {return &defaultDiffPolicy {_a :nil ,_b :&DiffResults {},_gd :0};};

// DiffResult describes the warning or the error for the DiffPolicy results.
type DiffResult struct{Revision int ;Description string ;};

// String returns the state of the warning.
func (_aac *DiffResult )String ()string {return _e .Sprintf ("\u0025\u0073\u0020\u0069n \u0072\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0073\u0020\u0023\u0025\u0064",_aac .Description ,_aac .Revision );};func (_df *defaultDiffPolicy )compareAnnots (_fabd int ,_bca ,_gfb []_g .PdfObject )error {_ge :=make (map[int64 ]*_g .PdfObjectDictionary );
for _ ,_bda :=range _bca {_eca ,_geb :=_g .GetIndirect (_bda );if !_geb {return _c .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0061\u006e\u006e\u006ft\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");};_ag ,_geb :=_g .GetDict (_eca .PdfObject );
if !_geb {return _c .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0061\u006e\u006e\u006ft\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");};_ge [_eca .ObjectNumber ]=_ag ;};for _ ,_cba :=range _gfb {_ee ,_aaf :=_g .GetIndirect (_cba );
if !_aaf {return _c .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0061\u006e\u006e\u006ft\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");};_fee ,_aaf :=_g .GetDict (_ee .PdfObject );if !_aaf {return _c .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0061\u006e\u006e\u006ft\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");
};_eac ,_ :=_g .GetStringVal (_fee .Get ("\u0054"));_dgf ,_ :=_g .GetNameVal (_fee .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if _ ,_gbf :=_ge [_ee .ObjectNumber ];!_gbf {switch _df ._gd {case NoRestrictions ,FillFormsAndAnnots :_df ._b .addWarningWithDescription (_fabd ,_e .Sprintf ("\u0025\u0073\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0025\u0073\u0020\u0077\u0061\u0073\u0020\u0061d\u0064\u0065\u0064",_dgf ,_eac ));
default:_dc ,_efab :=_g .GetDict (_ee .PdfObject );if !_efab {return _c .New ("u\u006ed\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0061n\u006e\u006f\u0074\u0061ti\u006f\u006e");};_cce ,_efab :=_g .GetNameVal (_dc .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));
if !_efab {return _c .New ("\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0027\u0073\u0020\u0073\u0075\u0062\u0074\u0079\u0070\u0065");};if _cce =="\u0057\u0069\u0064\u0067\u0065\u0074"{switch _df ._gd {case NoRestrictions ,FillFormsAndAnnots ,FillForms :_df ._b .addWarningWithDescription (_fabd ,_e .Sprintf ("\u0025\u0073\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0025\u0073\u0020\u0077\u0061\u0073\u0020\u0061d\u0064\u0065\u0064",_dgf ,_eac ));
default:_df ._b .addErrorWithDescription (_fabd ,_e .Sprintf ("\u0025\u0073\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0025\u0073\u0020\u0077\u0061\u0073\u0020\u0061d\u0064\u0065\u0064",_dgf ,_eac ));};}else {_df ._b .addErrorWithDescription (_fabd ,_e .Sprintf ("\u0025\u0073\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0025\u0073\u0020\u0077\u0061\u0073\u0020\u0061d\u0064\u0065\u0064",_dgf ,_eac ));
};};}else {delete (_ge ,_ee .ObjectNumber );if _bagf ,_ccf :=_df ._a [_ee .ObjectNumber ];_ccf {switch _df ._gd {case NoRestrictions ,FillFormsAndAnnots :_df ._b .addWarningWithDescription (_fabd ,_e .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0063\u0068\u0061\u006eg\u0065\u0064",_dgf ,_eac ));
default:_ged ,_eb :=_g .GetIndirect (_bagf );if !_eb {return _c .New ("u\u006ed\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0061n\u006e\u006f\u0074\u0061ti\u006f\u006e");};_abb ,_eb :=_g .GetDict (_ged .PdfObject );if !_eb {return _c .New ("u\u006ed\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0061n\u006e\u006f\u0074\u0061ti\u006f\u006e");
};_baa ,_eb :=_g .GetNameVal (_abb .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_eb {return _c .New ("\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0027\u0073\u0020\u0073\u0075\u0062\u0074\u0079\u0070\u0065");
};if _baa =="\u0057\u0069\u0064\u0067\u0065\u0074"{switch _df ._gd {case NoRestrictions ,FillFormsAndAnnots ,FillForms :_df ._b .addWarningWithDescription (_fabd ,_e .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0063\u0068\u0061\u006eg\u0065\u0064",_dgf ,_eac ));
default:_df ._b .addErrorWithDescription (_fabd ,_e .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0063\u0068\u0061\u006eg\u0065\u0064",_dgf ,_eac ));};}else {_df ._b .addErrorWithDescription (_fabd ,_e .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0063\u0068\u0061\u006eg\u0065\u0064",_dgf ,_eac ));
};};};};};for _ ,_gdc :=range _ge {_cfa ,_ :=_g .GetStringVal (_gdc .Get ("\u0054"));_egbd ,_ :=_g .GetNameVal (_gdc .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));switch _df ._gd {case NoRestrictions ,FillFormsAndAnnots :_df ._b .addWarningWithDescription (_fabd ,_e .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0072\u0065\u006d\u006fv\u0065\u0064",_egbd ,_cfa ));
default:_df ._b .addErrorWithDescription (_fabd ,_e .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0072\u0065\u006d\u006fv\u0065\u0064",_egbd ,_cfa ));};};return nil ;};func (_af *defaultDiffPolicy )compareRevisions (_afc *_g .PdfParser ,_dg *_g .PdfParser )(*DiffResults ,error ){var _de error ;
_af ._a ,_de =_dg .GetUpdatedObjects (_afc );if _de !=nil {return &DiffResults {},_de ;};if len (_af ._a )==0{return &DiffResults {},nil ;};_cg :=_dg .GetRevisionNumber ();_ff ,_ce :=_g .GetIndirect (_g .ResolveReference (_afc .GetTrailer ().Get ("\u0052\u006f\u006f\u0074")));
_gc ,_ab :=_g .GetIndirect (_g .ResolveReference (_dg .GetTrailer ().Get ("\u0052\u006f\u006f\u0074")));if !_ce ||!_ab {return &DiffResults {},_c .New ("\u0065\u0072\u0072o\u0072\u0020\u0077\u0068i\u006c\u0065\u0020\u0067\u0065\u0074\u0074i\u006e\u0067\u0020\u0072\u006f\u006f\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};_cgf ,_ce :=_g .GetDict (_g .ResolveReference (_ff .PdfObject ));_aa ,_ab :=_g .GetDict (_g .ResolveReference (_gc .PdfObject ));if !_ce ||!_ab {return &DiffResults {},_c .New ("\u0065\u0072\u0072\u006f\u0072\u0020\u0077\u0068\u0069\u006c\u0065\u0020\u0067e\u0074\u0074\u0069\u006e\u0067\u0020a\u0020\u0072\u006f\u006f\u0074\u0027\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _cgd ,_fb :=_g .GetIndirect (_aa .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d"));_fb {_dd ,_ca :=_g .GetDict (_cgd );if !_ca {return &DiffResults {},_c .New ("\u0065\u0072\u0072\u006f\u0072 \u0077\u0068\u0069\u006c\u0065\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067 \u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u0027\u0073\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_efg :=make ([]_g .PdfObject ,0);if _ac ,_ba :=_g .GetIndirect (_cgf .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d"));_ba {if _gdg ,_dee :=_g .GetDict (_ac );_dee {if _cdf ,_beb :=_g .GetArray (_gdg .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"));
_beb {_efg =_cdf .Elements ();};};};_aba ,_ca :=_g .GetArray (_dd .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"));if !_ca {return &DiffResults {},_c .New ("\u0065\u0072r\u006f\u0072\u0020\u0077h\u0069\u006ce\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067 \u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u0027\u0073\u0020\u0066i\u0065\u006c\u0064\u0073");
};if _bef :=_af .compareFields (_cg ,_efg ,_aba .Elements ());_bef !=nil {return &DiffResults {},_bef ;};};_bc ,_eg :=_g .GetIndirect (_aa .Get ("\u0050\u0061\u0067e\u0073"));if !_eg {return &DiffResults {},_c .New ("\u0065\u0072\u0072\u006f\u0072\u0020w\u0068\u0069\u006c\u0065\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020p\u0061\u0067\u0065\u0073\u0027\u0020\u006fb\u006a\u0065\u0063\u0074");
};_bd ,_eg :=_g .GetIndirect (_cgf .Get ("\u0050\u0061\u0067e\u0073"));if !_eg {return &DiffResults {},_c .New ("\u0065\u0072\u0072\u006f\u0072\u0020w\u0068\u0069\u006c\u0065\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020p\u0061\u0067\u0065\u0073\u0027\u0020\u006fb\u006a\u0065\u0063\u0074");
};if _bb :=_af .comparePages (_cg ,_bd ,_bc );_bb !=nil {return &DiffResults {},_bb ;};return _af ._b ,nil ;};

// IsPermitted returns true if changes permitted.
func (_edf *DiffResults )IsPermitted ()bool {return len (_edf .Errors )==0};