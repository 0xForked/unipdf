//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package mdp ;import (_a "errors";_e "fmt";_gd "github.com/unidoc/unipdf/v3/core";);

// IsPermitted returns true if changes permitted.
func (_edg *DiffResults )IsPermitted ()bool {return len (_edg .Errors )==0};func NewDefaultDiffPolicy ()DiffPolicy {return &defaultDiffPolicy {_f :nil ,_b :&DiffResults {},_gdg :0};};func (_fg *defaultDiffPolicy )compareFields (_bbd int ,_dd ,_ac []_gd .PdfObject )error {_ab :=make (map[int64 ]*_gd .PdfObjectDictionary );
for _ ,_acd :=range _dd {_cg ,_abc :=_gd .GetIndirect (_acd );if !_abc {return _a .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006cd\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");};_ca ,_abc :=_gd .GetDict (_cg .PdfObject );
if !_abc {return _a .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0061\u006e\u006e\u006ft\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");};_ab [_cg .ObjectNumber ]=_ca ;};for _ ,_ega :=range _ac {_ec ,_gad :=_gd .GetIndirect (_ega );
if !_gad {return _a .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006cd\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");};_ded ,_gad :=_gd .GetDict (_ec .PdfObject );if !_gad {return _a .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006cd\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");
};T :=_ded .Get ("\u0054");if _ ,_fb :=_fg ._f [_ec .ObjectNumber ];_fb {switch _fg ._gdg {case NoRestrictions ,FillForms ,FillFormsAndAnnots :_fg ._b .addWarningWithDescription (_bbd ,_e .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0063\u0068\u0061ng\u0065\u0064",T ));
default:_fg ._b .addErrorWithDescription (_bbd ,_e .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0063\u0068\u0061ng\u0065\u0064",T ));};};if _ ,_abcb :=_ab [_ec .ObjectNumber ];!_abcb {switch _fg ._gdg {case NoRestrictions ,FillForms ,FillFormsAndAnnots :_fg ._b .addWarningWithDescription (_bbd ,_e .Sprintf ("\u0046i\u0065l\u0064\u0020\u0025\u0073\u0020w\u0061\u0073 \u0061\u0064\u0064\u0065\u0064",_ded .Get ("\u0054")));
default:_fg ._b .addErrorWithDescription (_bbd ,_e .Sprintf ("\u0046i\u0065l\u0064\u0020\u0025\u0073\u0020w\u0061\u0073 \u0061\u0064\u0064\u0065\u0064",_ded .Get ("\u0054")));};}else {delete (_ab ,_ec .ObjectNumber );if _ ,_bcgb :=_fg ._f [_ec .ObjectNumber ];
_bcgb {switch _fg ._gdg {case NoRestrictions ,FillForms ,FillFormsAndAnnots :_fg ._b .addWarningWithDescription (_bbd ,_e .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0063\u0068\u0061ng\u0065\u0064",_ded .Get ("\u0054")));
default:_fg ._b .addErrorWithDescription (_bbd ,_e .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0063\u0068\u0061ng\u0065\u0064",_ded .Get ("\u0054")));};};};if FT ,_edb :=_gd .GetNameVal (_ded .Get ("\u0046\u0054"));_edb {if FT =="\u0053\u0069\u0067"{if _cf ,_egag :=_gd .GetIndirect (_ded .Get ("\u0056"));
_egag {if _ ,_ad :=_fg ._f [_cf .ObjectNumber ];_ad {switch _fg ._gdg {case NoRestrictions ,FillForms ,FillFormsAndAnnots :_fg ._b .addWarningWithDescription (_bbd ,_e .Sprintf ("\u0053\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0066\u006f\u0072\u0020%\u0073 \u0066i\u0065l\u0064\u0020\u0077\u0061\u0073\u0020\u0063\u0068\u0061\u006e\u0067\u0065\u0064",T ));
default:_fg ._b .addErrorWithDescription (_bbd ,_e .Sprintf ("\u0053\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0066\u006f\u0072\u0020%\u0073 \u0066i\u0065l\u0064\u0020\u0077\u0061\u0073\u0020\u0063\u0068\u0061\u006e\u0067\u0065\u0064",T ));};};};};};
};for _ ,_bdf :=range _ab {switch _fg ._gdg {case NoRestrictions :_fg ._b .addWarningWithDescription (_bbd ,_e .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0072\u0065\u006dov\u0065\u0064",_bdf .Get ("\u0054")));default:_fg ._b .addErrorWithDescription (_bbd ,_e .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0072\u0065\u006dov\u0065\u0064",_bdf .Get ("\u0054")));
};};return nil ;};

// DiffPolicy interface for comparing two revisions of the Pdf document.
type DiffPolicy interface{

// ReviewFile should check the revisions of the old and new parsers
// and evaluate the differences between the revisions.
// Each implementation of this interface must decide
// how to handle cases where there are multiple revisions between the old and new revisions.
ReviewFile (_afb *_gd .PdfParser ,_dbg *_gd .PdfParser ,_dag *MDPParameters )(*DiffResults ,error );};func _cee (_ceea _gd .PdfObject )([]_gd .PdfObject ,error ){_eeg :=make ([]_gd .PdfObject ,0);if _ceea !=nil {_fde :=_ceea ;if _ecfb ,_dgc :=_gd .GetIndirect (_ceea );
_dgc {_fde =_ecfb .PdfObject ;};if _cbb ,_bdb :=_gd .GetArray (_fde );_bdb {_eeg =_cbb .Elements ();}else {return nil ,_a .New ("\u0075n\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0061n\u006eo\u0074s\u0027\u0020\u006f\u0062\u006a\u0065\u0063t");
};};return _eeg ,nil ;};

// DiffResult describes the warning or the error for the DiffPolicy results.
type DiffResult struct{Revision int ;Description string ;};

// ReviewFile implementation of DiffPolicy interface
// The default policy only checks the next types of objects:
// Page, Pages (container for page objects), Annot, Annots (container for annotation objects), Field.
// It checks adding, removing and modifying objects of these types.
func (_d *defaultDiffPolicy )ReviewFile (oldParser *_gd .PdfParser ,newParser *_gd .PdfParser ,params *MDPParameters )(*DiffResults ,error ){if oldParser .GetRevisionNumber ()> newParser .GetRevisionNumber (){return nil ,_a .New ("\u006f\u006c\u0064\u0020\u0072\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020\u006e\u0065\u0077\u0020r\u0065\u0076i\u0073\u0069\u006f\u006e");
};if oldParser .GetRevisionNumber ()==newParser .GetRevisionNumber (){if oldParser !=newParser {return nil ,_a .New ("\u0073\u0061m\u0065\u0020\u0072\u0065v\u0069\u0073i\u006f\u006e\u0073\u002c\u0020\u0062\u0075\u0074 \u0064\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0074\u0020\u0070\u0061r\u0073\u0065\u0072\u0073");
};return &DiffResults {},nil ;};if params ==nil {_d ._gdg =NoRestrictions ;}else {_d ._gdg =params .DocMDPLevel ;};_gc :=&DiffResults {};for _eb :=oldParser .GetRevisionNumber ()+1;_eb <=newParser .GetRevisionNumber ();_eb ++{_de ,_bc :=newParser .GetRevision (_eb -1);
if _bc !=nil {return nil ,_bc ;};_bb ,_bc :=newParser .GetRevision (_eb );if _bc !=nil {return nil ,_bc ;};_c ,_bc :=_d .compareRevisions (_de ,_bb );if _bc !=nil {return nil ,_bc ;};_gc .Warnings =append (_gc .Warnings ,_c .Warnings ...);_gc .Errors =append (_gc .Errors ,_c .Errors ...);
};return _gc ,nil ;};

// DocMDPPermission is values for set up access permissions for DocMDP.
// (Section 12.8.2.2, Table 254 - Entries in a signature dictionary p. 471 in PDF32000_2008).
type DocMDPPermission int64 ;

// String returns the state of the warning.
func (_gge *DiffResult )String ()string {return _e .Sprintf ("\u0025\u0073\u0020\u0069n \u0072\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0073\u0020\u0023\u0025\u0064",_gge .Description ,_gge .Revision );};func (_fdd *defaultDiffPolicy )compareAnnots (_dg int ,_ecf ,_dee []_gd .PdfObject )error {_aca :=make (map[int64 ]*_gd .PdfObjectDictionary );
for _ ,_bgg :=range _ecf {_fbd ,_bbc :=_gd .GetIndirect (_bgg );if !_bbc {return _a .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0061\u006e\u006e\u006ft\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");};_efb ,_bbc :=_gd .GetDict (_fbd .PdfObject );
if !_bbc {return _a .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0061\u006e\u006e\u006ft\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");};_aca [_fbd .ObjectNumber ]=_efb ;};for _ ,_ggb :=range _dee {_ecg ,_gbd :=_gd .GetIndirect (_ggb );
if !_gbd {return _a .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0061\u006e\u006e\u006ft\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");};_cdf ,_gbd :=_gd .GetDict (_ecg .PdfObject );if !_gbd {return _a .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0061\u006e\u006e\u006ft\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");
};_ebf ,_ :=_gd .GetStringVal (_cdf .Get ("\u0054"));_gce ,_ :=_gd .GetNameVal (_cdf .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if _ ,_ge :=_aca [_ecg .ObjectNumber ];!_ge {switch _fdd ._gdg {case NoRestrictions ,FillFormsAndAnnots :_fdd ._b .addWarningWithDescription (_dg ,_e .Sprintf ("\u0025\u0073\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0025\u0073\u0020\u0077\u0061\u0073\u0020\u0061d\u0064\u0065\u0064",_gce ,_ebf ));
default:_dab ,_aff :=_gd .GetDict (_ecg .PdfObject );if !_aff {return _a .New ("u\u006ed\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0061n\u006e\u006f\u0074\u0061ti\u006f\u006e");};_bgf ,_aff :=_gd .GetNameVal (_dab .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));
if !_aff {return _a .New ("\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0027\u0073\u0020\u0073\u0075\u0062\u0074\u0079\u0070\u0065");};if _bgf =="\u0057\u0069\u0064\u0067\u0065\u0074"{switch _fdd ._gdg {case NoRestrictions ,FillFormsAndAnnots ,FillForms :_fdd ._b .addWarningWithDescription (_dg ,_e .Sprintf ("\u0025\u0073\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0025\u0073\u0020\u0077\u0061\u0073\u0020\u0061d\u0064\u0065\u0064",_gce ,_ebf ));
default:_fdd ._b .addErrorWithDescription (_dg ,_e .Sprintf ("\u0025\u0073\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0025\u0073\u0020\u0077\u0061\u0073\u0020\u0061d\u0064\u0065\u0064",_gce ,_ebf ));};}else {_fdd ._b .addErrorWithDescription (_dg ,_e .Sprintf ("\u0025\u0073\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0025\u0073\u0020\u0077\u0061\u0073\u0020\u0061d\u0064\u0065\u0064",_gce ,_ebf ));
};};}else {delete (_aca ,_ecg .ObjectNumber );if _bea ,_edc :=_fdd ._f [_ecg .ObjectNumber ];_edc {switch _fdd ._gdg {case NoRestrictions ,FillFormsAndAnnots :_fdd ._b .addWarningWithDescription (_dg ,_e .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0063\u0068\u0061\u006eg\u0065\u0064",_gce ,_ebf ));
default:_dgd ,_age :=_gd .GetIndirect (_bea );if !_age {return _a .New ("u\u006ed\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0061n\u006e\u006f\u0074\u0061ti\u006f\u006e");};_ebeg ,_age :=_gd .GetDict (_dgd .PdfObject );if !_age {return _a .New ("u\u006ed\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0061n\u006e\u006f\u0074\u0061ti\u006f\u006e");
};_fda ,_age :=_gd .GetNameVal (_ebeg .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_age {return _a .New ("\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0027\u0073\u0020\u0073\u0075\u0062\u0074\u0079\u0070\u0065");
};if _fda =="\u0057\u0069\u0064\u0067\u0065\u0074"{switch _fdd ._gdg {case NoRestrictions ,FillFormsAndAnnots ,FillForms :_fdd ._b .addWarningWithDescription (_dg ,_e .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0063\u0068\u0061\u006eg\u0065\u0064",_gce ,_ebf ));
default:_fdd ._b .addErrorWithDescription (_dg ,_e .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0063\u0068\u0061\u006eg\u0065\u0064",_gce ,_ebf ));};}else {_fdd ._b .addErrorWithDescription (_dg ,_e .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0063\u0068\u0061\u006eg\u0065\u0064",_gce ,_ebf ));
};};};};};for _ ,_cbcd :=range _aca {_baa ,_ :=_gd .GetStringVal (_cbcd .Get ("\u0054"));_cbg ,_ :=_gd .GetNameVal (_cbcd .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));switch _fdd ._gdg {case NoRestrictions ,FillFormsAndAnnots :_fdd ._b .addWarningWithDescription (_dg ,_e .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0072\u0065\u006d\u006fv\u0065\u0064",_cbg ,_baa ));
default:_fdd ._b .addErrorWithDescription (_dg ,_e .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0072\u0065\u006d\u006fv\u0065\u0064",_cbg ,_baa ));};};return nil ;};func (_gef *DiffResults )addErrorWithDescription (_gfe int ,_cgdg string ){if _gef .Errors ==nil {_gef .Errors =make ([]*DiffResult ,0);
};_gef .Errors =append (_gef .Errors ,&DiffResult {Revision :_gfe ,Description :_cgdg });};type defaultDiffPolicy struct{_f map[int64 ]_gd .PdfObject ;_b *DiffResults ;_gdg DocMDPPermission ;};

// MDPParameters describes parameters for the MDP checks (now only DocMDP).
type MDPParameters struct{DocMDPLevel DocMDPPermission ;};func (_aa *defaultDiffPolicy )compareRevisions (_bf *_gd .PdfParser ,_cd *_gd .PdfParser )(*DiffResults ,error ){var _eg error ;_aa ._f ,_eg =_cd .GetUpdatedObjects (_bf );if _eg !=nil {return &DiffResults {},_eg ;
};if len (_aa ._f )==0{return &DiffResults {},nil ;};_gf :=_cd .GetRevisionNumber ();_af ,_fd :=_gd .GetIndirect (_gd .ResolveReference (_bf .GetTrailer ().Get ("\u0052\u006f\u006f\u0074")));_be ,_ed :=_gd .GetIndirect (_gd .ResolveReference (_cd .GetTrailer ().Get ("\u0052\u006f\u006f\u0074")));
if !_fd ||!_ed {return &DiffResults {},_a .New ("\u0065\u0072\u0072o\u0072\u0020\u0077\u0068i\u006c\u0065\u0020\u0067\u0065\u0074\u0074i\u006e\u0067\u0020\u0072\u006f\u006f\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_ce ,_fd :=_gd .GetDict (_gd .ResolveReference (_af .PdfObject ));
_cb ,_ed :=_gd .GetDict (_gd .ResolveReference (_be .PdfObject ));if !_fd ||!_ed {return &DiffResults {},_a .New ("\u0065\u0072\u0072\u006f\u0072\u0020\u0077\u0068\u0069\u006c\u0065\u0020\u0067e\u0074\u0074\u0069\u006e\u0067\u0020a\u0020\u0072\u006f\u006f\u0074\u0027\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _bfb ,_ebc :=_gd .GetIndirect (_cb .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d"));_ebc {_ceg ,_ea :=_gd .GetDict (_bfb );if !_ea {return &DiffResults {},_a .New ("\u0065\u0072\u0072\u006f\u0072 \u0077\u0068\u0069\u006c\u0065\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067 \u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u0027\u0073\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_eba :=make ([]_gd .PdfObject ,0);if _bed ,_dc :=_gd .GetIndirect (_ce .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d"));_dc {if _gdd ,_bba :=_gd .GetDict (_bed );_bba {if _bcg ,_bcb :=_gd .GetArray (_gdd .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"));
_bcb {_eba =_bcg .Elements ();};};};_gfg ,_ea :=_gd .GetArray (_ceg .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"));if !_ea {return &DiffResults {},_a .New ("\u0065\u0072r\u006f\u0072\u0020\u0077h\u0069\u006ce\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067 \u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u0027\u0073\u0020\u0066i\u0065\u006c\u0064\u0073");
};if _ga :=_aa .compareFields (_gf ,_eba ,_gfg .Elements ());_ga !=nil {return &DiffResults {},_ga ;};};_gb ,_ae :=_gd .GetIndirect (_cb .Get ("\u0050\u0061\u0067e\u0073"));if !_ae {return &DiffResults {},_a .New ("\u0065\u0072\u0072\u006f\u0072\u0020w\u0068\u0069\u006c\u0065\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020p\u0061\u0067\u0065\u0073\u0027\u0020\u006fb\u006a\u0065\u0063\u0074");
};_fa ,_ae :=_gd .GetIndirect (_ce .Get ("\u0050\u0061\u0067e\u0073"));if !_ae {return &DiffResults {},_a .New ("\u0065\u0072\u0072\u006f\u0072\u0020w\u0068\u0069\u006c\u0065\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020p\u0061\u0067\u0065\u0073\u0027\u0020\u006fb\u006a\u0065\u0063\u0074");
};if _gg :=_aa .comparePages (_gf ,_fa ,_gb );_gg !=nil {return &DiffResults {},_gg ;};return _aa ._b ,nil ;};const (NoRestrictions DocMDPPermission =0;NoChanges DocMDPPermission =1;FillForms DocMDPPermission =2;FillFormsAndAnnots DocMDPPermission =3;);


// DiffResults describes the results of the DiffPolicy.
type DiffResults struct{Warnings []*DiffResult ;Errors []*DiffResult ;};func (_dcg *DiffResults )addWarning (_gba *DiffResult ){if _dcg .Warnings ==nil {_dcg .Warnings =make ([]*DiffResult ,0);};_dcg .Warnings =append (_dcg .Warnings ,_gba );};func (_ada *defaultDiffPolicy )comparePages (_beg int ,_dcb ,_cfg *_gd .PdfIndirectObject )error {if _ ,_cfd :=_ada ._f [_cfg .ObjectNumber ];
_cfd {_ada ._b .addErrorWithDescription (_beg ,"\u0050a\u0067e\u0073\u0020\u0077\u0065\u0072e\u0020\u0063h\u0061\u006e\u0067\u0065\u0064");};_ef ,_ced :=_gd .GetDict (_cfg .PdfObject );_fdc ,_aab :=_gd .GetDict (_dcb .PdfObject );if !_ced ||!_aab {return _a .New ("\u0075n\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0050\u0061g\u0065\u0073\u0027\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};_cec ,_ced :=_gd .GetArray (_ef .Get ("\u004b\u0069\u0064\u0073"));_aae ,_aab :=_gd .GetArray (_fdc .Get ("\u004b\u0069\u0064\u0073"));if !_ced ||!_aab {return _a .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0050\u0061\u0067\u0065s\u0027 \u0064\u0069\u0063\u0074\u0069\u006f\u006ea\u0072\u0079");
};_ee :=_cec .Len ();if _ee > _aae .Len (){_ee =_aae .Len ();};for _cbc :=0;_cbc < _ee ;_cbc ++{_aaee ,_ede :=_gd .GetIndirect (_gd .ResolveReference (_aae .Get (_cbc )));_acg ,_egf :=_gd .GetIndirect (_gd .ResolveReference (_cec .Get (_cbc )));if !_ede ||!_egf {return _a .New ("\u0075\u006e\u0065\u0078pe\u0063\u0074\u0065\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006f\u0062\u006a\u0065c\u0074");
};if _aaee .ObjectNumber !=_acg .ObjectNumber {_ada ._b .addErrorWithDescription (_beg ,_e .Sprintf ("p\u0061\u0067\u0065\u0020#%\u0064 \u0077\u0061\u0073\u0020\u0072e\u0070\u006c\u0061\u0063\u0065\u0064",_cbc ));};_cfa ,_ede :=_gd .GetDict (_acg );_cbcg ,_egf :=_gd .GetDict (_aaee );
if !_ede ||!_egf {return _a .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0070\u0061\u0067\u0065'\u0073 \u0064\u0069\u0063\u0074\u0069\u006f\u006ea\u0072\u0079");};_bbgd ,_cda :=_cee (_cfa .Get ("\u0041\u006e\u006e\u006f\u0074\u0073"));
if _cda !=nil {return _cda ;};_efc ,_cda :=_cee (_cbcg .Get ("\u0041\u006e\u006e\u006f\u0074\u0073"));if _cda !=nil {return _cda ;};if _ebe :=_ada .compareAnnots (_beg ,_efc ,_bbgd );_ebe !=nil {return _ebe ;};};for _begd :=_ee +1;_begd <=_cec .Len ();
_begd ++{_ada ._b .addErrorWithDescription (_beg ,_e .Sprintf ("\u0070a\u0067e\u0020\u0023\u0025\u0064\u0020w\u0061\u0073 \u0061\u0064\u0064\u0065\u0064",_begd ));};for _adc :=_ee +1;_adc <=_aae .Len ();_adc ++{_ada ._b .addErrorWithDescription (_beg ,_e .Sprintf ("p\u0061g\u0065\u0020\u0023\u0025\u0064\u0020\u0077\u0061s\u0020\u0072\u0065\u006dov\u0065\u0064",_adc ));
};return nil ;};func (_ggf *DiffResults )addError (_ggd *DiffResult ){if _ggf .Errors ==nil {_ggf .Errors =make ([]*DiffResult ,0);};_ggf .Errors =append (_ggf .Errors ,_ggd );};func (_cab *DiffResults )addWarningWithDescription (_cgc int ,_ebg string ){if _cab .Warnings ==nil {_cab .Warnings =make ([]*DiffResult ,0);
};_cab .Warnings =append (_cab .Warnings ,&DiffResult {Revision :_cgc ,Description :_ebg });};