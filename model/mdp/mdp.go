//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package mdp ;import (_a "errors";_ac "fmt";_acg "github.com/unidoc/unipdf/v3/core";);func (_ab *defaultDiffPolicy )compareRevisions (_abf *_acg .PdfParser ,_c *_acg .PdfParser )(*DiffResults ,error ){var _cg error ;_ab ._f ,_cg =_c .GetUpdatedObjects (_abf );
if _cg !=nil {return &DiffResults {},_cg ;};if len (_ab ._f )==0{return &DiffResults {},nil ;};_bf :=_c .GetRevisionNumber ();_dba ,_af :=_acg .GetIndirect (_acg .ResolveReference (_abf .GetTrailer ().Get ("\u0052\u006f\u006f\u0074")));_ae ,_ge :=_acg .GetIndirect (_acg .ResolveReference (_c .GetTrailer ().Get ("\u0052\u006f\u006f\u0074")));
if !_af ||!_ge {return &DiffResults {},_a .New ("\u0065\u0072\u0072o\u0072\u0020\u0077\u0068i\u006c\u0065\u0020\u0067\u0065\u0074\u0074i\u006e\u0067\u0020\u0072\u006f\u006f\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_aa ,_af :=_acg .GetDict (_acg .ResolveReference (_dba .PdfObject ));
_ef ,_ge :=_acg .GetDict (_acg .ResolveReference (_ae .PdfObject ));if !_af ||!_ge {return &DiffResults {},_a .New ("\u0065\u0072\u0072\u006f\u0072\u0020\u0077\u0068\u0069\u006c\u0065\u0020\u0067e\u0074\u0074\u0069\u006e\u0067\u0020a\u0020\u0072\u006f\u006f\u0074\u0027\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _bac ,_dc :=_acg .GetIndirect (_ef .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d"));_dc {_dff ,_fd :=_acg .GetDict (_bac );if !_fd {return &DiffResults {},_a .New ("\u0065\u0072\u0072\u006f\u0072 \u0077\u0068\u0069\u006c\u0065\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067 \u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u0027\u0073\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_aea :=make ([]_acg .PdfObject ,0);if _bcc ,_bd :=_acg .GetIndirect (_aa .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d"));_bd {if _gef ,_gg :=_acg .GetDict (_bcc );_gg {if _fa ,_efb :=_acg .GetArray (_gef .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"));
_efb {_aea =_fa .Elements ();};};};_de ,_fd :=_acg .GetArray (_dff .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"));if !_fd {return &DiffResults {},_a .New ("\u0065\u0072r\u006f\u0072\u0020\u0077h\u0069\u006ce\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067 \u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u0027\u0073\u0020\u0066i\u0065\u006c\u0064\u0073");
};if _cd :=_ab .compareFields (_bf ,_aea ,_de .Elements ());_cd !=nil {return &DiffResults {},_cd ;};};_ec ,_acd :=_acg .GetIndirect (_ef .Get ("\u0050\u0061\u0067e\u0073"));if !_acd {return &DiffResults {},_a .New ("\u0065\u0072\u0072\u006f\u0072\u0020w\u0068\u0069\u006c\u0065\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020p\u0061\u0067\u0065\u0073\u0027\u0020\u006fb\u006a\u0065\u0063\u0074");
};_cgb ,_acd :=_acg .GetIndirect (_aa .Get ("\u0050\u0061\u0067e\u0073"));if !_acd {return &DiffResults {},_a .New ("\u0065\u0072\u0072\u006f\u0072\u0020w\u0068\u0069\u006c\u0065\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020p\u0061\u0067\u0065\u0073\u0027\u0020\u006fb\u006a\u0065\u0063\u0074");
};if _cdd :=_ab .comparePages (_bf ,_cgb ,_ec );_cdd !=nil {return &DiffResults {},_cdd ;};return _ab ._d ,nil ;};func (_bdf *DiffResults )addErrorWithDescription (_dec int ,_dag string ){if _bdf .Errors ==nil {_bdf .Errors =make ([]*DiffResult ,0);};_bdf .Errors =append (_bdf .Errors ,&DiffResult {Revision :_dec ,Description :_dag });
};

// DiffResults describes the results of the DiffPolicy.
type DiffResults struct{Warnings []*DiffResult ;Errors []*DiffResult ;};func (_fdb *defaultDiffPolicy )compareAnnots (_dbe int ,_eac ,_ggb []_acg .PdfObject )error {_bbgc :=make (map[int64 ]*_acg .PdfObjectDictionary );for _ ,_ff :=range _eac {_bbgcf ,_eaa :=_acg .GetIndirect (_ff );
if !_eaa {return _a .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0061\u006e\u006e\u006ft\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");};_cbb ,_eaa :=_acg .GetDict (_bbgcf .PdfObject );if !_eaa {return _a .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0061\u006e\u006e\u006ft\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");
};_bbgc [_bbgcf .ObjectNumber ]=_cbb ;};for _ ,_ffb :=range _ggb {_bfdd ,_aaf :=_acg .GetIndirect (_ffb );if !_aaf {return _a .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0061\u006e\u006e\u006ft\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");
};_bea ,_aaf :=_acg .GetDict (_bfdd .PdfObject );if !_aaf {return _a .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0061\u006e\u006e\u006ft\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");};_efdgg ,_ :=_acg .GetStringVal (_bea .Get ("\u0054"));
_eae ,_ :=_acg .GetNameVal (_bea .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if _ ,_bab :=_bbgc [_bfdd .ObjectNumber ];!_bab {switch _fdb ._df {case NoRestrictions ,FillFormsAndAnnots :_fdb ._d .addWarningWithDescription (_dbe ,_ac .Sprintf ("\u0025\u0073\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0025\u0073\u0020\u0077\u0061\u0073\u0020\u0061d\u0064\u0065\u0064",_eae ,_efdgg ));
default:_gede ,_cfa :=_acg .GetDict (_bfdd .PdfObject );if !_cfa {return _a .New ("u\u006ed\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0061n\u006e\u006f\u0074\u0061ti\u006f\u006e");};_bcb ,_cfa :=_acg .GetNameVal (_gede .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));
if !_cfa {return _a .New ("\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0027\u0073\u0020\u0073\u0075\u0062\u0074\u0079\u0070\u0065");};if _bcb =="\u0057\u0069\u0064\u0067\u0065\u0074"{switch _fdb ._df {case NoRestrictions ,FillFormsAndAnnots ,FillForms :_fdb ._d .addWarningWithDescription (_dbe ,_ac .Sprintf ("\u0025\u0073\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0025\u0073\u0020\u0077\u0061\u0073\u0020\u0061d\u0064\u0065\u0064",_eae ,_efdgg ));
default:_fdb ._d .addErrorWithDescription (_dbe ,_ac .Sprintf ("\u0025\u0073\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0025\u0073\u0020\u0077\u0061\u0073\u0020\u0061d\u0064\u0065\u0064",_eae ,_efdgg ));};}else {_fdb ._d .addErrorWithDescription (_dbe ,_ac .Sprintf ("\u0025\u0073\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0025\u0073\u0020\u0077\u0061\u0073\u0020\u0061d\u0064\u0065\u0064",_eae ,_efdgg ));
};};}else {delete (_bbgc ,_bfdd .ObjectNumber );if _adc ,_gdf :=_fdb ._f [_bfdd .ObjectNumber ];_gdf {switch _fdb ._df {case NoRestrictions ,FillFormsAndAnnots :_fdb ._d .addWarningWithDescription (_dbe ,_ac .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0063\u0068\u0061\u006eg\u0065\u0064",_eae ,_efdgg ));
default:_bcg ,_deg :=_acg .GetIndirect (_adc );if !_deg {return _a .New ("u\u006ed\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0061n\u006e\u006f\u0074\u0061ti\u006f\u006e");};_fcb ,_deg :=_acg .GetDict (_bcg .PdfObject );if !_deg {return _a .New ("u\u006ed\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0061n\u006e\u006f\u0074\u0061ti\u006f\u006e");
};_abgf ,_deg :=_acg .GetNameVal (_fcb .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_deg {return _a .New ("\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0027\u0073\u0020\u0073\u0075\u0062\u0074\u0079\u0070\u0065");
};if _abgf =="\u0057\u0069\u0064\u0067\u0065\u0074"{switch _fdb ._df {case NoRestrictions ,FillFormsAndAnnots ,FillForms :_fdb ._d .addWarningWithDescription (_dbe ,_ac .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0063\u0068\u0061\u006eg\u0065\u0064",_eae ,_efdgg ));
default:_fdb ._d .addErrorWithDescription (_dbe ,_ac .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0063\u0068\u0061\u006eg\u0065\u0064",_eae ,_efdgg ));};}else {_fdb ._d .addErrorWithDescription (_dbe ,_ac .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0063\u0068\u0061\u006eg\u0065\u0064",_eae ,_efdgg ));
};};};};};for _ ,_cdg :=range _bbgc {_adb ,_ :=_acg .GetStringVal (_cdg .Get ("\u0054"));_adbe ,_ :=_acg .GetNameVal (_cdg .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));switch _fdb ._df {case NoRestrictions ,FillFormsAndAnnots :_fdb ._d .addWarningWithDescription (_dbe ,_ac .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0072\u0065\u006d\u006fv\u0065\u0064",_adbe ,_adb ));
default:_fdb ._d .addErrorWithDescription (_dbe ,_ac .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0072\u0065\u006d\u006fv\u0065\u0064",_adbe ,_adb ));};};return nil ;};func _fge (_eec _acg .PdfObject )([]_acg .PdfObject ,error ){_gdc :=make ([]_acg .PdfObject ,0);
if _eec !=nil {_caf :=_eec ;if _dbed ,_gce :=_acg .GetIndirect (_eec );_gce {_caf =_dbed .PdfObject ;};if _cdc ,_cba :=_acg .GetArray (_caf );_cba {_gdc =_cdc .Elements ();}else {return nil ,_a .New ("\u0075n\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0061n\u006eo\u0074s\u0027\u0020\u006f\u0062\u006a\u0065\u0063t");
};};return _gdc ,nil ;};

// String returns the state of the warning.
func (_gde *DiffResult )String ()string {return _ac .Sprintf ("\u0025\u0073\u0020\u0069n \u0072\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0073\u0020\u0023\u0025\u0064",_gde .Description ,_gde .Revision );};const (NoRestrictions DocMDPPermission =0;NoChanges DocMDPPermission =1;
FillForms DocMDPPermission =2;FillFormsAndAnnots DocMDPPermission =3;);func (_ega *DiffResults )addError (_aeb *DiffResult ){if _ega .Errors ==nil {_ega .Errors =make ([]*DiffResult ,0);};_ega .Errors =append (_ega .Errors ,_aeb );};

// DocMDPPermission is values for set up access permissions for DocMDP.
// (Section 12.8.2.2, Table 254 - Entries in a signature dictionary p. 471 in PDF32000_2008).
type DocMDPPermission int64 ;

// IsPermitted returns true if changes permitted.
func (_edg *DiffResults )IsPermitted ()bool {return len (_edg .Errors )==0};func NewDefaultDiffPolicy ()DiffPolicy {return &defaultDiffPolicy {_f :nil ,_d :&DiffResults {},_df :0};};func (_bdfb *DiffResults )addWarning (_ada *DiffResult ){if _bdfb .Warnings ==nil {_bdfb .Warnings =make ([]*DiffResult ,0);
};_bdfb .Warnings =append (_bdfb .Warnings ,_ada );};

// MDPParameters describes parameters for the MDP checks (now only DocMDP).
type MDPParameters struct{DocMDPLevel DocMDPPermission ;};type defaultDiffPolicy struct{_f map[int64 ]_acg .PdfObject ;_d *DiffResults ;_df DocMDPPermission ;};

// ReviewFile implementation of DiffPolicy interface
// The default policy only checks the next types of objects:
// Page, Pages (container for page objects), Annot, Annots (container for annotation objects), Field.
// It checks adding, removing and modifying objects of these types.
func (_e *defaultDiffPolicy )ReviewFile (oldParser *_acg .PdfParser ,newParser *_acg .PdfParser ,params *MDPParameters )(*DiffResults ,error ){if oldParser .GetRevisionNumber ()> newParser .GetRevisionNumber (){return nil ,_a .New ("\u006f\u006c\u0064\u0020\u0072\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020\u006e\u0065\u0077\u0020r\u0065\u0076i\u0073\u0069\u006f\u006e");
};if oldParser .GetRevisionNumber ()==newParser .GetRevisionNumber (){if oldParser !=newParser {return nil ,_a .New ("\u0073\u0061m\u0065\u0020\u0072\u0065v\u0069\u0073i\u006f\u006e\u0073\u002c\u0020\u0062\u0075\u0074 \u0064\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0074\u0020\u0070\u0061r\u0073\u0065\u0072\u0073");
};return &DiffResults {},nil ;};if params ==nil {_e ._df =NoRestrictions ;}else {_e ._df =params .DocMDPLevel ;};_bb :=&DiffResults {};for _db :=oldParser .GetRevisionNumber ()+1;_db <=newParser .GetRevisionNumber ();_db ++{_ba ,_g :=newParser .GetRevision (_db -1);
if _g !=nil {return nil ,_g ;};_da ,_g :=newParser .GetRevision (_db );if _g !=nil {return nil ,_g ;};_bc ,_g :=_e .compareRevisions (_ba ,_da );if _g !=nil {return nil ,_g ;};_bb .Warnings =append (_bb .Warnings ,_bc .Warnings ...);_bb .Errors =append (_bb .Errors ,_bc .Errors ...);
};return _bb ,nil ;};

// DiffResult describes the warning or the error for the DiffPolicy results.
type DiffResult struct{Revision int ;Description string ;};

// DiffPolicy interface for comparing two revisions of the Pdf document.
type DiffPolicy interface{

// ReviewFile should check the revisions of the old and new parsers
// and evaluate the differences between the revisions.
// Each implementation of this interface must decide
// how to handle cases where there are multiple revisions between the old and new revisions.
ReviewFile (_dcb *_acg .PdfParser ,_fcbb *_acg .PdfParser ,_bed *MDPParameters )(*DiffResults ,error );};func (_eeed *DiffResults )addWarningWithDescription (_egb int ,_bgd string ){if _eeed .Warnings ==nil {_eeed .Warnings =make ([]*DiffResult ,0);};_eeed .Warnings =append (_eeed .Warnings ,&DiffResult {Revision :_egb ,Description :_bgd });
};func (_ecd *defaultDiffPolicy )comparePages (_bff int ,_dbb ,_efa *_acg .PdfIndirectObject )error {if _ ,_dae :=_ecd ._f [_efa .ObjectNumber ];_dae {_ecd ._d .addErrorWithDescription (_bff ,"\u0050a\u0067e\u0073\u0020\u0077\u0065\u0072e\u0020\u0063h\u0061\u006e\u0067\u0065\u0064");
};_gb ,_gd :=_acg .GetDict (_efa .PdfObject );_dea ,_bbg :=_acg .GetDict (_dbb .PdfObject );if !_gd ||!_bbg {return _a .New ("\u0075n\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0050\u0061g\u0065\u0073\u0027\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};_ggcc ,_gd :=_acg .GetArray (_gb .Get ("\u004b\u0069\u0064\u0073"));_fc ,_bbg :=_acg .GetArray (_dea .Get ("\u004b\u0069\u0064\u0073"));if !_gd ||!_bbg {return _a .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0050\u0061\u0067\u0065s\u0027 \u0064\u0069\u0063\u0074\u0069\u006f\u006ea\u0072\u0079");
};_gbe :=_ggcc .Len ();if _gbe > _fc .Len (){_gbe =_fc .Len ();};for _ad :=0;_ad < _gbe ;_ad ++{_aac ,_gedf :=_acg .GetIndirect (_acg .ResolveReference (_fc .Get (_ad )));_fe ,_cfd :=_acg .GetIndirect (_acg .ResolveReference (_ggcc .Get (_ad )));if !_gedf ||!_cfd {return _a .New ("\u0075\u006e\u0065\u0078pe\u0063\u0074\u0065\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006f\u0062\u006a\u0065c\u0074");
};if _aac .ObjectNumber !=_fe .ObjectNumber {_ecd ._d .addErrorWithDescription (_bff ,_ac .Sprintf ("p\u0061\u0067\u0065\u0020#%\u0064 \u0077\u0061\u0073\u0020\u0072e\u0070\u006c\u0061\u0063\u0065\u0064",_ad ));};_cac ,_gedf :=_acg .GetDict (_fe );_cag ,_cfd :=_acg .GetDict (_aac );
if !_gedf ||!_cfd {return _a .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0070\u0061\u0067\u0065'\u0073 \u0064\u0069\u0063\u0074\u0069\u006f\u006ea\u0072\u0079");};_bbf ,_cfb :=_fge (_cac .Get ("\u0041\u006e\u006e\u006f\u0074\u0073"));
if _cfb !=nil {return _cfb ;};_cfc ,_cfb :=_fge (_cag .Get ("\u0041\u006e\u006e\u006f\u0074\u0073"));if _cfb !=nil {return _cfb ;};if _bg :=_ecd .compareAnnots (_bff ,_cfc ,_bbf );_bg !=nil {return _bg ;};};for _bag :=_gbe +1;_bag <=_ggcc .Len ();_bag ++{_ecd ._d .addErrorWithDescription (_bff ,_ac .Sprintf ("\u0070a\u0067e\u0020\u0023\u0025\u0064\u0020w\u0061\u0073 \u0061\u0064\u0064\u0065\u0064",_bag ));
};for _aaae :=_gbe +1;_aaae <=_fc .Len ();_aaae ++{_ecd ._d .addErrorWithDescription (_bff ,_ac .Sprintf ("p\u0061g\u0065\u0020\u0023\u0025\u0064\u0020\u0077\u0061s\u0020\u0072\u0065\u006dov\u0065\u0064",_aaae ));};return nil ;};func (_cb *defaultDiffPolicy )compareFields (_ee int ,_aff ,_bfa []_acg .PdfObject )error {_ggc :=make (map[int64 ]*_acg .PdfObjectDictionary );
for _ ,_eea :=range _aff {_efd ,_be :=_acg .GetIndirect (_eea );if !_be {return _a .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006cd\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");};_bbd ,_be :=_acg .GetDict (_efd .PdfObject );
if !_be {return _a .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0061\u006e\u006e\u006ft\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");};_ggc [_efd .ObjectNumber ]=_bbd ;};for _ ,_eee :=range _bfa {_gc ,_cf :=_acg .GetIndirect (_eee );
if !_cf {return _a .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006cd\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");};_cga ,_cf :=_acg .GetDict (_gc .PdfObject );if !_cf {return _a .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006cd\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");
};T :=_cga .Get ("\u0054");if _ ,_bda :=_cb ._f [_gc .ObjectNumber ];_bda {switch _cb ._df {case NoRestrictions ,FillForms ,FillFormsAndAnnots :_cb ._d .addWarningWithDescription (_ee ,_ac .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0063\u0068\u0061ng\u0065\u0064",T ));
default:_cb ._d .addErrorWithDescription (_ee ,_ac .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0063\u0068\u0061ng\u0065\u0064",T ));};};if _ ,_eca :=_ggc [_gc .ObjectNumber ];!_eca {switch _cb ._df {case NoRestrictions ,FillForms ,FillFormsAndAnnots :_cb ._d .addWarningWithDescription (_ee ,_ac .Sprintf ("\u0046i\u0065l\u0064\u0020\u0025\u0073\u0020w\u0061\u0073 \u0061\u0064\u0064\u0065\u0064",_cga .Get ("\u0054")));
default:_cb ._d .addErrorWithDescription (_ee ,_ac .Sprintf ("\u0046i\u0065l\u0064\u0020\u0025\u0073\u0020w\u0061\u0073 \u0061\u0064\u0064\u0065\u0064",_cga .Get ("\u0054")));};}else {delete (_ggc ,_gc .ObjectNumber );if _ ,_efdg :=_cb ._f [_gc .ObjectNumber ];
_efdg {switch _cb ._df {case NoRestrictions ,FillForms ,FillFormsAndAnnots :_cb ._d .addWarningWithDescription (_ee ,_ac .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0063\u0068\u0061ng\u0065\u0064",_cga .Get ("\u0054")));
default:_cb ._d .addErrorWithDescription (_ee ,_ac .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0063\u0068\u0061ng\u0065\u0064",_cga .Get ("\u0054")));};};};if FT ,_ged :=_acg .GetNameVal (_cga .Get ("\u0046\u0054"));_ged {if FT =="\u0053\u0069\u0067"{if _bfd ,_ea :=_acg .GetIndirect (_cga .Get ("\u0056"));
_ea {if _ ,_ed :=_cb ._f [_bfd .ObjectNumber ];_ed {switch _cb ._df {case NoRestrictions ,FillForms ,FillFormsAndAnnots :_cb ._d .addWarningWithDescription (_ee ,_ac .Sprintf ("\u0053\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0066\u006f\u0072\u0020%\u0073 \u0066i\u0065l\u0064\u0020\u0077\u0061\u0073\u0020\u0063\u0068\u0061\u006e\u0067\u0065\u0064",T ));
default:_cb ._d .addErrorWithDescription (_ee ,_ac .Sprintf ("\u0053\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0066\u006f\u0072\u0020%\u0073 \u0066i\u0065l\u0064\u0020\u0077\u0061\u0073\u0020\u0063\u0068\u0061\u006e\u0067\u0065\u0064",T ));};};};};};
};for _ ,_ga :=range _ggc {switch _cb ._df {case NoRestrictions :_cb ._d .addWarningWithDescription (_ee ,_ac .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0072\u0065\u006dov\u0065\u0064",_ga .Get ("\u0054")));default:_cb ._d .addErrorWithDescription (_ee ,_ac .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0072\u0065\u006dov\u0065\u0064",_ga .Get ("\u0054")));
};};return nil ;};