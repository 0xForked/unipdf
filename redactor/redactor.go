//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package redactor ;import (_gb "errors";_g "fmt";_eag "github.com/unidoc/unipdf/v3/common";_gf "github.com/unidoc/unipdf/v3/contentstream";_ed "github.com/unidoc/unipdf/v3/core";_cb "github.com/unidoc/unipdf/v3/creator";_d "github.com/unidoc/unipdf/v3/extractor";
_ef "github.com/unidoc/unipdf/v3/model";_f "io";_c "regexp";_eg "sort";_ea "strings";);func _fg (_ff *_gf .ContentStreamOperations ,_ca string ,_dd int )error {_df :=_gf .ContentStreamOperations {};var _ba _gf .ContentStreamOperation ;for _aca ,_fga :=range *_ff {if _aca ==_dd {if _ca =="\u0027"{_cgc :=_gf .ContentStreamOperation {Operand :"\u0054\u002a"};
_df =append (_df ,&_cgc );_ba .Params =_fga .Params ;_ba .Operand ="\u0054\u006a";_df =append (_df ,&_ba );}else if _ca =="\u0022"{_fd :=_fga .Params [:2];Tc ,Tw :=_fd [0],_fd [1];_gg :=_gf .ContentStreamOperation {Params :[]_ed .PdfObject {Tc },Operand :"\u0054\u0063"};
_df =append (_df ,&_gg );_gg =_gf .ContentStreamOperation {Params :[]_ed .PdfObject {Tw },Operand :"\u0054\u0077"};_df =append (_df ,&_gg );_ba .Params =[]_ed .PdfObject {_fga .Params [2]};_ba .Operand ="\u0054\u006a";_df =append (_df ,&_ba );};};_df =append (_df ,_fga );
};*_ff =_df ;return nil ;};func _bf (_ec *_d .TextMarkArray )(_ed .PdfObject ,int ){var _bc _ed .PdfObject ;_daf :=-1;for _afd ,_dfb :=range _ec .Elements (){_bc =_dfb .DirectObject ;_daf =_afd ;if _bc !=nil {break ;};};return _bc ,_daf ;};func _cec (_bab *_ef .PdfFont ,_eed _d .TextMark )float64 {_ddf :=0.001;
_caa :=_eed .Th /100;if _bab .Subtype ()=="\u0054\u0079\u0070e\u0033"{_ddf =1;};_gc ,_dgd :=_bab .GetRuneMetrics (' ');if !_dgd {_gc ,_dgd =_bab .GetCharMetrics (32);};if !_dgd {_gc ,_ =_ef .DefaultFont ().GetRuneMetrics (' ');};_cgg :=_ddf *((_gc .Wx *_eed .FontSize +_eed .Tc +_eed .Tw )/_caa );
return _cgg ;};func _ged (_ggc *_gf .ContentStreamOperations ,PdfObj _ed .PdfObject )(*_gf .ContentStreamOperation ,int ,bool ){for _fceb ,_gedd :=range *_ggc {_def :=_gedd .Operand ;if _def =="\u0054\u006a"{_fcc :=_ed .TraceToDirectObject (_gedd .Params [0]);
if _fcc ==PdfObj {return _gedd ,_fceb ,true ;};}else if _def =="\u0054\u004a"{_ccgb ,_gffga :=_ed .GetArray (_gedd .Params [0]);if !_gffga {return nil ,_fceb ,_gffga ;};for _ ,_cgeg :=range _ccgb .Elements (){if _cgeg ==PdfObj {return _gedd ,_fceb ,true ;
};};}else if _def =="\u0022"{_gefc :=_ed .TraceToDirectObject (_gedd .Params [2]);if _gefc ==PdfObj {return _gedd ,_fceb ,true ;};}else if _def =="\u0027"{_aed :=_ed .TraceToDirectObject (_gedd .Params [0]);if _aed ==PdfObj {return _gedd ,_fceb ,true ;
};};};return nil ,-1,false ;};func _aad (_dba ,_abdg string )[]int {if len (_abdg )==0{return nil ;};var _gecc []int ;for _fbe :=0;_fbe < len (_dba );{_ebb :=_ea .Index (_dba [_fbe :],_abdg );if _ebb < 0{return _gecc ;};_gecc =append (_gecc ,_fbe +_ebb );
_fbe +=_ebb +len (_abdg );};return _gecc ;};

// Write writes the content of `re.creator` to writer of type io.Writer interface.
func (_abdd *Redactor )Write (writer _f .Writer )error {return _abdd ._fbcf .Write (writer )};

// RedactionOptions is a collection of RedactionTerm objects.
type RedactionOptions struct{Terms []RedactionTerm ;};func _daaf (_bba string ,_aga []replacement ,_dfce *_ef .PdfFont )[]_ed .PdfObject {_gbg :=[]_ed .PdfObject {};_bfe :=0;_cbe :=_bba ;for _fba ,_geg :=range _aga {_ced :=_geg ._aa ;_dded :=_geg ._gfa ;
_gdb :=_geg ._gde ;_agba :=_ed .MakeFloat (_dded );_aefa :=_bba [_bfe :_ced ];_cgcf :=_efg (_aefa ,_dfce );_dgb :=_ed .MakeStringFromBytes (_cgcf );_gbg =append (_gbg ,_dgb );_gbg =append (_gbg ,_agba );_dfdc :=_ced +len (_gdb );_cbe =_bba [_dfdc :];_bfe =_dfdc ;
if _fba ==len (_aga )-1{_cgcf =_efg (_cbe ,_dfce );_dgb =_ed .MakeStringFromBytes (_cgcf );_gbg =append (_gbg ,_dgb );};};return _gbg ;};func _fff (_fge *_d .TextMarkArray )*_ef .PdfFont {_ ,_fe :=_bf (_fge );_bcab :=_fge .Elements ()[_fe ];_cge :=_bcab .Font ;
return _cge ;};type placeHolders struct{_gbf []int ;_gd string ;_a float64 ;};func _bg (_baea string ,_daac []localSpanMarks )([]placeHolders ,error ){_gafc :="";_dac :=[]placeHolders {};for _cbd ,_dbe :=range _daac {_agg :=_dbe ._gbfd ;_bcag :=_dbe ._egd ;
_bea :=_bec (_agg );_ddgc ,_cca :=_feb (_agg );if _cca !=nil {return nil ,_cca ;};if _bea !=_gafc {var _gfe []int ;if _cbd ==0&&_bcag !=_bea {_fbf :=_ea .Index (_baea ,_bea );_gfe =[]int {_fbf };}else if _cbd ==len (_daac )-1{_beee :=_ea .LastIndex (_baea ,_bea );
_gfe =[]int {_beee };}else {_gfe =_aad (_baea ,_bea );};_gbc :=placeHolders {_gbf :_gfe ,_gd :_bea ,_a :_ddgc };_dac =append (_dac ,_gbc );};_gafc =_bea ;};return _dac ,nil ;};func _efg (_adf string ,_ace *_ef .PdfFont )[]byte {_fbd ,_dcd :=_ace .StringToCharcodeBytes (_adf );
if _dcd !=0{_eag .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0073\u006fm\u0065\u0020\u0072un\u0065\u0073\u0020\u0063\u006f\u0075l\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0065d\u002e\u000a\u0009\u0025\u0073\u0020\u002d\u003e \u0025\u0076",_adf ,_fbd );
};return _fbd ;};func _ebc (_bda _ed .PdfObject ,_affge *_ef .PdfFont )(string ,error ){_eecf ,_abd :=_ed .GetStringBytes (_bda );if !_abd {return "",_ed .ErrTypeError ;};_gffd :=_affge .BytesToCharcodes (_eecf );_cgba ,_fbdg ,_fgeg :=_affge .CharcodesToStrings (_gffd );
if _fgeg > 0{_eag .Log .Debug ("\u0072\u0065nd\u0065\u0072\u0054e\u0078\u0074\u003a\u0020num\u0043ha\u0072\u0073\u003d\u0025\u0064\u0020\u006eum\u004d\u0069\u0073\u0073\u0065\u0073\u003d%\u0064",_fbdg ,_fgeg );};_accd :=_ea .Join (_cgba ,"");return _accd ,nil ;
};func _fgc (_fa *_gf .ContentStreamOperation ,_dce _ed .PdfObject ,_dab []localSpanMarks )error {_bae ,_bca :=_ed .GetArray (_fa .Params [0]);_ega :=[]_ed .PdfObject {};if !_bca {_eag .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0054\u004a\u0020\u006f\u0070\u003d\u0025s\u0020G\u0065t\u0041r\u0072\u0061\u0079\u0056\u0061\u006c\u0020\u0066\u0061\u0069\u006c\u0065\u0064",_fa );
return _g .Errorf ("\u0073\u0070\u0061\u006e\u004d\u0061\u0072\u006bs\u002e\u0042\u0042ox\u0020\u0068\u0061\u0073\u0020\u006eo\u0020\u0062\u006f\u0075\u006e\u0064\u0069\u006e\u0067\u0020\u0062\u006f\u0078\u002e\u0020s\u0070\u0061\u006e\u004d\u0061\u0072\u006b\u0073=\u0025\u0073",_fa );
};_eeb ,_bcac :=_bcae (_dab );if len (_bcac )==1{_dfc :=_bcac [0];_fac :=_eeb [_dfc ];if len (_fac )==1{_ce :=_fac [0];_fab :=_ce ._gbfd ;_cef :=_fff (_fab );_gbe ,_cga :=_ebc (_dce ,_cef );if _cga !=nil {return _cga ;};_dfd ,_cga :=_acgg (_ce ,_fab ,_cef ,_gbe ,_dfc );
if _cga !=nil {return _cga ;};for _ ,_gdcg :=range _bae .Elements (){if _gdcg ==_dce {_ega =append (_ega ,_dfd ...);}else {_ega =append (_ega ,_gdcg );};};}else {_ge :=_fac [0]._gbfd ;_dag :=_fff (_ge );_dfg ,_dg :=_ebc (_dce ,_dag );if _dg !=nil {return _dg ;
};_cgd ,_dg :=_bg (_dfg ,_fac );if _dg !=nil {return _dg ;};_cbc :=_eff (_cgd );_cf :=_daaf (_dfg ,_cbc ,_dag );for _ ,_dfca :=range _bae .Elements (){if _dfca ==_dce {_ega =append (_ega ,_cf ...);}else {_ega =append (_ega ,_dfca );};};};_fa .Params [0]=_ed .MakeArray (_ega ...);
}else if len (_bcac )> 1{_cad :=_dab [0];_gef :=_cad ._gbfd ;_ ,_fdd :=_bf (_gef );_fb :=_gef .Elements ()[_fdd ];_de :=_fb .Font ;_bd ,_bcc :=_ebc (_dce ,_de );if _bcc !=nil {return _bcc ;};_gge ,_bcc :=_bg (_bd ,_dab );if _bcc !=nil {return _bcc ;};_cce :=_eff (_gge );
_acg :=_daaf (_bd ,_cce ,_de );for _ ,_ga :=range _bae .Elements (){if _ga ==_dce {_ega =append (_ega ,_acg ...);}else {_ega =append (_ega ,_ga );};};_fa .Params [0]=_ed .MakeArray (_ega ...);};return nil ;};func _feb (_gafcg *_d .TextMarkArray )(float64 ,error ){_dafg ,_aee :=_gafcg .BBox ();
if !_aee {return 0.0,_g .Errorf ("\u0073\u0070\u0061\u006e\u004d\u0061\u0072\u006bs\u002e\u0042\u0042ox\u0020\u0068\u0061\u0073\u0020\u006eo\u0020\u0062\u006f\u0075\u006e\u0064\u0069\u006e\u0067\u0020\u0062\u006f\u0078\u002e\u0020s\u0070\u0061\u006e\u004d\u0061\u0072\u006b\u0073=\u0025\u0073",_gafcg );
};_dagf :=_afg (_gafcg );_afc :=0.0;_ ,_gdg :=_bf (_gafcg );_fbag :=_gafcg .Elements ()[_gdg ];_dgg :=_fbag .Font ;if _dagf > 0{_afc =_cec (_dgg ,_fbag );};_ccf :=(_dafg .Urx -_dafg .Llx );_ccf =_ccf +_afc *float64 (_dagf );Tj :=_bac (_ccf ,_fbag .FontSize ,_fbag .Th );
return Tj ,nil ;};func _bcae (_daa []localSpanMarks )(map[string ][]localSpanMarks ,[]string ){_eebf :=make (map[string ][]localSpanMarks );_fcb :=[]string {};for _ ,_dad :=range _daa {_cd :=_dad ._egd ;if _afda ,_ab :=_eebf [_cd ];_ab {_eebf [_cd ]=append (_afda ,_dad );
}else {_eebf [_cd ]=[]localSpanMarks {_dad };_fcb =append (_fcb ,_cd );};};return _eebf ,_fcb ;};type localSpanMarks struct{_gbfd *_d .TextMarkArray ;_beg int ;_egd string ;};func (_eba *Redactor )redactPage (_gcac *_gf .ContentStreamOperations ,_dfbg *_ef .PdfPageResources )([]matchedBBox ,*_gf .ContentStreamOperations ,error ){_edba ,_dade :=_d .NewFromContents (_gcac .String (),_dfbg );
if _dade !=nil {return nil ,nil ,_dade ;};_affgc ,_ ,_ ,_dade :=_edba .ExtractPageText ();_gcac =_affgc .GetContentStreamOps ();if _dade !=nil {return nil ,nil ,_dade ;};_aac :=_affgc .Marks ();_acgc :=_affgc .Text ();_gbef :=[]matchedBBox {};_cecb :=make (map[_ed .PdfObject ][]localSpanMarks );
for _ ,_deg :=range _eba ._bcbd .Terms {_ead ,_dfa :=_ece (_deg );if _dfa !=nil {return nil ,nil ,_dfa ;};_fea ,_dfa :=_ead .match (_acgc );if _dfa !=nil {return nil ,nil ,_dfa ;};_ggd :=_beefe (_fea );for _ccbe ,_bdb :=range _ggd {_cgf :=[]matchedBBox {};
for _ ,_cag :=range _bdb {_gcd ,_ffde ,_cae :=_edc (_cag ,_aac ,_ccbe );if _cae !=nil {return nil ,nil ,_cae ;};_dfgg :=_cbdd (_gcd );for _bfeaf ,_ada :=range _dfgg {_ffe :=localSpanMarks {_gbfd :_ada ,_beg :_bfeaf ,_egd :_ccbe };_eede ,_ :=_bf (_ada );
if _dged ,_dae :=_cecb [_eede ];_dae {_cecb [_eede ]=append (_dged ,_ffe );}else {_cecb [_eede ]=[]localSpanMarks {_ffe };};};_cgf =append (_cgf ,_ffde );};_gbef =append (_gbef ,_cgf ...);};};_dade =_b (_gcac ,_cecb );if _dade !=nil {return nil ,nil ,_dade ;
};return _gbef ,_gcac ,nil ;};func _eff (_egc []placeHolders )[]replacement {_egag :=[]replacement {};for _ ,_cgbc :=range _egc {_agef :=_cgbc ._gbf ;_fce :=_cgbc ._gd ;_caaa :=_cgbc ._a ;for _ ,_eda :=range _agef {_aef :=replacement {_gde :_fce ,_gfa :_caaa ,_aa :_eda };
_egag =append (_egag ,_aef );};};_eg .Slice (_egag ,func (_aba ,_agf int )bool {return _egag [_aba ]._aa < _egag [_agf ]._aa });return _egag ;};func (_fadb *regexMatcher )match (_edd string )([]*matchedIndex ,error ){_afgc :=_fadb ._fca .Pattern ;if _afgc ==nil {return nil ,_gb .New ("\u006e\u006f\u0020\u0070at\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006d\u0070\u0069\u006c\u0065\u0064");
};var (_faa =_afgc .FindAllStringIndex (_edd ,-1);_abf []*matchedIndex ;);for _ ,_adad :=range _faa {_abf =append (_abf ,&matchedIndex {_affc :_adad [0],_egfd :_adad [1],_bag :_edd [_adad [0]:_adad [1]]});};return _abf ,nil ;};func _beefe (_ggda []*matchedIndex )map[string ][][]int {_gagc :=make (map[string ][][]int );
for _ ,_gbd :=range _ggda {_bfa :=_gbd ._bag ;_dbd :=[]int {_gbd ._affc ,_gbd ._egfd };if _gga ,_aege :=_gagc [_bfa ];_aege {_gagc [_bfa ]=append (_gga ,_dbd );}else {_gagc [_bfa ]=[][]int {_dbd };};};return _gagc ;};func _afg (_eaf *_d .TextMarkArray )int {_dc :=0;
_aea :=_eaf .Elements ();if _aea [0].Text =="\u0020"{_dc ++;};if _aea [_eaf .Len ()-1].Text =="\u0020"{_dc ++;};return _dc ;};func _edc (_gefb []int ,_bccb *_d .TextMarkArray ,_bagd string )(*_d .TextMarkArray ,matchedBBox ,error ){_aegf :=matchedBBox {};
_dda :=_gefb [0];_baef :=_gefb [1];_fcebd :=len (_bagd )-len (_ea .TrimLeft (_bagd ,"\u0020"));_aaaa :=len (_bagd )-len (_ea .TrimRight (_bagd ,"\u0020\u000a"));_dda =_dda +_fcebd ;_baef =_baef -_aaaa ;_bagd =_ea .Trim (_bagd ,"\u0020\u000a");_bdg ,_eace :=_bccb .RangeOffset (_dda ,_baef );
if _eace !=nil {return nil ,_aegf ,_eace ;};_dfbc ,_aeef :=_bdg .BBox ();if !_aeef {return nil ,_aegf ,_g .Errorf ("\u0073\u0070\u0061\u006e\u004d\u0061\u0072\u006bs\u002e\u0042\u0042ox\u0020\u0068\u0061\u0073\u0020\u006eo\u0020\u0062\u006f\u0075\u006e\u0064\u0069\u006e\u0067\u0020\u0062\u006f\u0078\u002e\u0020s\u0070\u0061\u006e\u004d\u0061\u0072\u006b\u0073=\u0025\u0073",_bdg );
};_aegf =matchedBBox {_gbfe :_bagd ,_ede :_dfbc };return _bdg ,_aegf ,nil ;};

// Redactor represtents a Redactor object.
type Redactor struct{_gaa *_ef .PdfReader ;_bcbd *RedactionOptions ;_fbcf *_cb .Creator ;_dafd *RectangleProps ;};func _cbdd (_cffd *_d .TextMarkArray )[]*_d .TextMarkArray {_cgea :=_cffd .Elements ();_eadf :=len (_cgea );var _fad _ed .PdfObject ;_baca :=[]*_d .TextMarkArray {};
_dga :=&_d .TextMarkArray {};_eegb :=-1;for _baga ,_fef :=range _cgea {_fbbg :=_fef .DirectObject ;_eegb =_fef .Index ;if _fbbg ==nil {_agd :=_gfba (_cffd ,_baga ,_eegb );if _fad !=nil {if _agd ==-1||_agd > _baga {_baca =append (_baca ,_dga );_dga =&_d .TextMarkArray {};
};};}else if _fbbg !=nil &&_fad ==nil {if _eegb ==0&&_baga > 0{_baca =append (_baca ,_dga );_dga =&_d .TextMarkArray {};};}else if _fbbg !=nil &&_fad !=nil {if _fbbg !=_fad {_baca =append (_baca ,_dga );_dga =&_d .TextMarkArray {};};};_fad =_fbbg ;_dga .Append (_fef );
if _baga ==(_eadf -1){_baca =append (_baca ,_dga );};};return _baca ;};

// RedactionTerm holds the regexp pattern and the replacement string for the redaction process.
type RedactionTerm struct{Pattern *_c .Regexp ;};func _fgb (_ddg *_gf .ContentStreamOperation ,_gec _ed .PdfObject ,_eec []localSpanMarks )error {var _gcf *_ed .PdfObjectArray ;_ddc ,_ceff :=_bcae (_eec );if len (_ceff )==1{_cfb :=_ceff [0];_ebf :=_ddc [_cfb ];
if len (_ebf )==1{_bb :=_ebf [0];_gdf :=_bb ._gbfd ;_gffe :=_fff (_gdf );_ded ,_bdf :=_ebc (_gec ,_gffe );if _bdf !=nil {return _bdf ;};_ecf ,_bdf :=_acgg (_bb ,_gdf ,_gffe ,_ded ,_cfb );if _bdf !=nil {return _bdf ;};_gcf =_ed .MakeArray (_ecf ...);}else {_bfg :=_ebf [0]._gbfd ;
_aff :=_fff (_bfg );_gee ,_gaf :=_ebc (_gec ,_aff );if _gaf !=nil {return _gaf ;};_eef ,_gaf :=_bg (_gee ,_ebf );if _gaf !=nil {return _gaf ;};_cde :=_eff (_eef );_gbb :=_daaf (_gee ,_cde ,_aff );_gcf =_ed .MakeArray (_gbb ...);};}else if len (_ceff )> 1{_gffed :=_eec [0];
_gba :=_gffed ._gbfd ;_ ,_affg :=_bf (_gba );_ccg :=_gba .Elements ()[_affg ];_bfd :=_ccg .Font ;_gfb ,_bad :=_ebc (_gec ,_bfd );if _bad !=nil {return _bad ;};_bff ,_bad :=_bg (_gfb ,_eec );if _bad !=nil {return _bad ;};_agb :=_eff (_bff );_gffg :=_daaf (_gfb ,_agb ,_bfd );
_gcf =_ed .MakeArray (_gffg ...);};_ddg .Params [0]=_gcf ;_ddg .Operand ="\u0054\u004a";return nil ;};

// WriteToFile writes the redacted document to file specified by `outputPath`.
func (_abad *Redactor )WriteToFile (outputPath string )error {if _afb :=_abad ._fbcf .WriteToFile (outputPath );_afb !=nil {return _g .Errorf ("\u0066\u0061\u0069l\u0065\u0064\u0020\u0074o\u0020\u0077\u0072\u0069\u0074\u0065\u0020t\u0068\u0065\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0066\u0069\u006c\u0065");
};return nil ;};

// Redact executes the redact operation on a pdf file and updates the content streams of all pages of the file.
func (_cee *Redactor )Redact ()error {_eac ,_facc :=_cee ._gaa .GetNumPages ();if _facc !=nil {return _g .Errorf ("\u0066\u0061\u0069\u006c\u0065\u0064 \u0074\u006f\u0020\u0067\u0065\u0074\u0020\u0074\u0068\u0065\u0020\u006e\u0075m\u0062\u0065\u0072\u0020\u006f\u0066\u0020P\u0061\u0067\u0065\u0073");
};_aada :=_cee ._dafd .FillColor ;_cea :=_cee ._dafd .BorderWidth ;_eeg :=_cee ._dafd .FillOpacity ;for _fgec :=1;_fgec <=_eac ;_fgec ++{_ebd ,_acd :=_cee ._gaa .GetPage (_fgec );if _acd !=nil {return _acd ;};_gea ,_acd :=_d .New (_ebd );if _acd !=nil {return _acd ;
};_bfea ,_ ,_ ,_acd :=_gea .ExtractPageText ();if _acd !=nil {return _acd ;};_dced :=_bfea .GetContentStreamOps ();_aeff ,_add ,_acd :=_cee .redactPage (_dced ,_ebd .Resources );if _add ==nil {_eag .Log .Info ("N\u006f\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0066\u006f\u0072\u0020t\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065d \u0070\u0061\u0074t\u0061r\u006e\u002e");
_add =_dced ;};_ebd .SetContentStreams ([]string {_add .String ()},_ed .NewFlateEncoder ());if _acd !=nil {return _acd ;};_egfde ,_acd :=_ebd .GetMediaBox ();if _acd !=nil {return _acd ;};if _ebd .MediaBox ==nil {_ebd .MediaBox =_egfde ;};if _gegg :=_cee ._fbcf .AddPage (_ebd );
_gegg !=nil {return _gegg ;};_adfc :=_egfde .Ury ;for _ ,_ebg :=range _aeff {_gca :=_ebg ._ede ;_abe :=_cee ._fbcf .NewRectangle (_gca .Llx ,_adfc -_gca .Lly ,_gca .Urx -_gca .Llx ,-(_gca .Ury -_gca .Lly ));_abe .SetFillColor (_aada );_abe .SetBorderWidth (_cea );
_abe .SetFillOpacity (_eeg );if _cfbf :=_cee ._fbcf .Draw (_abe );_cfbf !=nil {return nil ;};};};_cee ._fbcf .SetOutlineTree (_cee ._gaa .GetOutlineTree ());return nil ;};func _b (_ad *_gf .ContentStreamOperations ,_da map[_ed .PdfObject ][]localSpanMarks )error {for _af ,_gdc :=range _da {if _af ==nil {continue ;
};_cg ,_ae ,_ee :=_ged (_ad ,_af );if !_ee {_eag .Log .Debug ("Pd\u0066\u004fb\u006a\u0065\u0063\u0074\u0020\u0025\u0073\u006e\u006ft\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0073\u0069\u0064\u0065\u0020\u0074\u0068\u0065\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0073\u0074r\u0065a\u006d\u0020\u006f\u0070\u0065\u0072\u0061\u0074i\u006fn\u0020\u0025s",_af ,_ad );
return nil ;};if _cg .Operand =="\u0054\u006a"{_fc :=_fgb (_cg ,_af ,_gdc );if _fc !=nil {return _fc ;};}else if _cg .Operand =="\u0054\u004a"{_gff :=_fgc (_cg ,_af ,_gdc );if _gff !=nil {return _gff ;};}else if _cg .Operand =="\u0027"||_cg .Operand =="\u0022"{_ac :=_fg (_ad ,_cg .Operand ,_ae );
if _ac !=nil {return _ac ;};_ac =_fgb (_cg ,_af ,_gdc );if _ac !=nil {return _ac ;};};};return nil ;};

// RectangleProps defines properties of the redaction rectangle to be drawn.
type RectangleProps struct{FillColor _cb .Color ;BorderWidth float64 ;FillOpacity float64 ;};type regexMatcher struct{_fca RedactionTerm };type matchedIndex struct{_affc int ;_egfd int ;_bag string ;};type replacement struct{_gde string ;_gfa float64 ;
_aa int ;};func _gfba (_efc *_d .TextMarkArray ,_ccbf int ,_fgf int )int {_badf :=_efc .Elements ();_fee :=_ccbf -1;_cdg :=_ccbf +1;_ccfb :=-1;if _fee >=0{_ecfa :=_badf [_fee ];_badc :=_ecfa .ObjString ;_ddd :=len (_badc );_gag :=_ecfa .Index ;if _gag +1< _ddd {_ccfb =_fee ;
return _ccfb ;};};if _cdg < len (_badf ){_fbaf :=_badf [_cdg ];_baa :=_fbaf .ObjString ;if _baa [0]!=_fbaf .Text {_ccfb =_cdg ;return _ccfb ;};};return _ccfb ;};func _ece (_cabb RedactionTerm )(*regexMatcher ,error ){return &regexMatcher {_fca :_cabb },nil };


// RedactRectanglePropsNew return a new pointer to a default RectangleProps object.
func RedactRectanglePropsNew ()*RectangleProps {return &RectangleProps {FillColor :_cb .ColorBlack ,BorderWidth :0.0,FillOpacity :1.0};};

// New instantiates a Redactor object with given PdfReader and `regex` pattern.
func New (reader *_ef .PdfReader ,opts *RedactionOptions ,rectProps *RectangleProps )*Redactor {if rectProps ==nil {rectProps =RedactRectanglePropsNew ();};return &Redactor {_gaa :reader ,_bcbd :opts ,_fbcf :_cb .New (),_dafd :rectProps };};func _bac (_afga ,_deea ,_bcb float64 )float64 {_bcb =_bcb /100;
_cba :=(-1000*_afga )/(_deea *_bcb );return _cba ;};func _acgg (_aeg localSpanMarks ,_fbc *_d .TextMarkArray ,_cefe *_ef .PdfFont ,_acc ,_dgeg string )([]_ed .PdfObject ,error ){_egf :=_bec (_fbc );Tj ,_edb :=_feb (_fbc );if _edb !=nil {return nil ,_edb ;
};_be :=len (_acc );_aaa :=len (_egf );_edg :=-1;_cgb :=_ed .MakeFloat (Tj );if _egf !=_dgeg {_ccb :=_aeg ._beg ;if _ccb ==0{_edg =_ea .LastIndex (_acc ,_egf );}else {_edg =_ea .Index (_acc ,_egf );};}else {_edg =_ea .Index (_acc ,_egf );};_caf :=_edg +_aaa ;
_dec :=[]_ed .PdfObject {};if _edg ==0&&_caf ==_be {_dec =append (_dec ,_cgb );}else if _edg ==0&&_caf < _be {_fbb :=_efg (_acc [_caf :],_cefe );_dbb :=_ed .MakeStringFromBytes (_fbb );_dec =append (_dec ,_cgb ,_dbb );}else if _edg > 0&&_caf >=_be {_ffd :=_efg (_acc [:_edg ],_cefe );
_bee :=_ed .MakeStringFromBytes (_ffd );_dec =append (_dec ,_bee ,_cgb );}else if _edg > 0&&_caf < _be {_ebe :=_efg (_acc [:_edg ],_cefe );_gac :=_efg (_acc [_caf :],_cefe );_age :=_ed .MakeStringFromBytes (_ebe );_dee :=_ed .MakeString (string (_gac ));
_dec =append (_dec ,_age ,_cgb ,_dee );};return _dec ,nil ;};type matchedBBox struct{_ede _ef .PdfRectangle ;_gbfe string ;};func _bec (_ccd *_d .TextMarkArray )string {_bcd :="";for _ ,_adfd :=range _ccd .Elements (){_bcd +=_adfd .Text ;};return _bcd ;
};