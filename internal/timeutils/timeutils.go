//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package timeutils ;import (_e "errors";_dg "fmt";_d "regexp";_gd "strconv";_g "time";);func FormatPdfTime (in _g .Time )string {_f :=in .Format ("\u002d\u0030\u0037\u003a\u0030\u0030");_de ,_ :=_gd .ParseInt (_f [1:3],10,32);_b ,_ :=_gd .ParseInt (_f [4:6],10,32);
_bc :=int64 (in .Year ());_fg :=int64 (in .Month ());_dgg :=int64 (in .Day ());_dea :=int64 (in .Hour ());_gdb :=int64 (in .Minute ());_c :=int64 (in .Second ());_db :=_f [0];return _dg .Sprintf ("\u0044\u003a\u0025\u002e\u0034\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e2\u0064\u0025\u0063\u0025\u002e2\u0064\u0027%\u002e\u0032\u0064\u0027",_bc ,_fg ,_dgg ,_dea ,_gdb ,_c ,_db ,_de ,_b );
};var _dbfb =_d .MustCompile ("\u005c\u0073\u002a\u0044\u005c\u0073\u002a:\u005c\u0073\u002a\u0028\u005c\u0064\u007b\u0034\u007d\u0029\u0028\u005c\u0064\u007b2\u007d)\u0028\u005c\u0064\u007b\u0032\u007d)\u0028\u005c\u0064\u007b\u0032\u007d\u0029(\u005c\u0064\u007b\u0032\u007d\u0029\u0028\u005c\u0064\u007b\u0032\u007d\u0029\u0028\u005b\u002b\u002d\u005a\u005d\u0029\u003f\u0028\u005cd\u007b\u0032\u007d\u0029\u003f\u0027\u003f\u0028\u005c\u0064\u007b\u0032\u007d)\u003f");
func ParsePdfTime (pdfTime string )(_g .Time ,error ){_cd :=_dbfb .FindAllStringSubmatch (pdfTime ,1);if len (_cd )< 1{return _g .Time {},_dg .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0065\u0020s\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0073\u0029",pdfTime );
};if len (_cd [0])!=10{return _g .Time {},_e .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0067\u0065\u0078p\u0020\u0067\u0072\u006f\u0075\u0070 \u006d\u0061\u0074\u0063\u0068\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020!\u003d\u0020\u0031\u0030");
};_cc ,_ :=_gd .ParseInt (_cd [0][1],10,32);_fb ,_ :=_gd .ParseInt (_cd [0][2],10,32);_ccf ,_ :=_gd .ParseInt (_cd [0][3],10,32);_bcd ,_ :=_gd .ParseInt (_cd [0][4],10,32);_bcb ,_ :=_gd .ParseInt (_cd [0][5],10,32);_afe ,_ :=_gd .ParseInt (_cd [0][6],10,32);
var (_ec byte ;_be int64 ;_bg int64 ;);if len (_cd [0][7])> 0{_ec =_cd [0][7][0];}else {_ec ='+';};if len (_cd [0][8])> 0{_be ,_ =_gd .ParseInt (_cd [0][8],10,32);}else {_be =0;};if len (_cd [0][9])> 0{_bg ,_ =_gd .ParseInt (_cd [0][9],10,32);}else {_bg =0;
};_beb :=int (_be *60*60+_bg *60);switch _ec {case '-':_beb =-_beb ;case 'Z':_beb =0;};_afa :=_dg .Sprintf ("\u0055\u0054\u0043\u0025\u0063\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064",_ec ,_be ,_bg );_ad :=_g .FixedZone (_afa ,_beb );return _g .Date (int (_cc ),_g .Month (_fb ),int (_ccf ),int (_bcd ),int (_bcb ),int (_afe ),0,_ad ),nil ;
};