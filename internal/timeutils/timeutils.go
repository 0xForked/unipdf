//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package timeutils ;import (_be "errors";_d "fmt";_g "regexp";_a "strconv";_bd "time";);func ParsePdfTime (pdfTime string )(_bd .Time ,error ){_bdd :=_ef .FindAllStringSubmatch (pdfTime ,1);if len (_bdd )< 1{if len (pdfTime )> 0&&pdfTime [0]!='D'{pdfTime =_d .Sprintf ("\u0044\u003a\u0025\u0073",pdfTime );
return ParsePdfTime (pdfTime );};return _bd .Time {},_d .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0065\u0020s\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0073\u0029",pdfTime );};if len (_bdd [0])!=10{return _bd .Time {},_be .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0067\u0065\u0078p\u0020\u0067\u0072\u006f\u0075\u0070 \u006d\u0061\u0074\u0063\u0068\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020!\u003d\u0020\u0031\u0030");
};_bc ,_ :=_a .ParseInt (_bdd [0][1],10,32);_da ,_ :=_a .ParseInt (_bdd [0][2],10,32);_gdc ,_ :=_a .ParseInt (_bdd [0][3],10,32);_gf ,_ :=_a .ParseInt (_bdd [0][4],10,32);_ff ,_ :=_a .ParseInt (_bdd [0][5],10,32);_ee ,_ :=_a .ParseInt (_bdd [0][6],10,32);
var (_fb byte ;_ag int64 ;_bdb int64 ;);if len (_bdd [0][7])> 0{_fb =_bdd [0][7][0];}else {_fb ='+';};if len (_bdd [0][8])> 0{_ag ,_ =_a .ParseInt (_bdd [0][8],10,32);}else {_ag =0;};if len (_bdd [0][9])> 0{_bdb ,_ =_a .ParseInt (_bdd [0][9],10,32);}else {_bdb =0;
};_ea :=int (_ag *60*60+_bdb *60);switch _fb {case '-':_ea =-_ea ;case 'Z':_ea =0;};_ec :=_d .Sprintf ("\u0055\u0054\u0043\u0025\u0063\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064",_fb ,_ag ,_bdb );_dc :=_bd .FixedZone (_ec ,_ea );return _bd .Date (int (_bc ),_bd .Month (_da ),int (_gdc ),int (_gf ),int (_ff ),int (_ee ),0,_dc ),nil ;
};var _ef =_g .MustCompile ("\u005c\u0073\u002a\u0044\u005c\u0073\u002a:\u005c\u0073\u002a\u0028\u005c\u0064\u007b\u0034\u007d\u0029\u0028\u005c\u0064\u007b2\u007d)\u0028\u005c\u0064\u007b\u0032\u007d)\u0028\u005c\u0064\u007b\u0032\u007d\u0029(\u005c\u0064\u007b\u0032\u007d\u0029\u0028\u005c\u0064\u007b\u0032\u007d\u0029\u0028\u005b\u002b\u002d\u005a\u005d\u0029\u003f\u0028\u005cd\u007b\u0032\u007d\u0029\u003f\u0027\u003f\u0028\u005c\u0064\u007b\u0032\u007d)\u003f");
func FormatPdfTime (in _bd .Time )string {_e :=in .Format ("\u002d\u0030\u0037\u003a\u0030\u0030");_eb ,_ :=_a .ParseInt (_e [1:3],10,32);_fe ,_ :=_a .ParseInt (_e [4:6],10,32);_bb :=int64 (in .Year ());_c :=int64 (in .Month ());_gd :=int64 (in .Day ());
_aa :=int64 (in .Hour ());_aac :=int64 (in .Minute ());_ge :=int64 (in .Second ());_beg :=_e [0];return _d .Sprintf ("\u0044\u003a\u0025\u002e\u0034\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e2\u0064\u0025\u0063\u0025\u002e2\u0064\u0027%\u002e\u0032\u0064\u0027",_bb ,_c ,_gd ,_aa ,_aac ,_ge ,_beg ,_eb ,_fe );
};