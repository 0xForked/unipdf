//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package timeutils ;import (_d "errors";_c "fmt";_de "regexp";_g "strconv";_dc "time";);var _eg =_de .MustCompile ("\u005c\u0073\u002a\u0044\u005c\u0073\u002a:\u005c\u0073\u002a\u0028\u005c\u0064\u007b\u0034\u007d\u0029\u0028\u005c\u0064\u007b2\u007d)\u0028\u005c\u0064\u007b\u0032\u007d)\u0028\u005c\u0064\u007b\u0032\u007d\u0029(\u005c\u0064\u007b\u0032\u007d\u0029\u0028\u005c\u0064\u007b\u0032\u007d\u0029\u0028\u005b\u002b\u002d\u005a\u005d\u0029\u003f\u0028\u005cd\u007b\u0032\u007d\u0029\u003f\u0027\u003f\u0028\u005c\u0064\u007b\u0032\u007d)\u003f");
func FormatPdfTime (in _dc .Time )string {_a :=in .Format ("\u002d\u0030\u0037\u003a\u0030\u0030");_ac ,_ :=_g .ParseInt (_a [1:3],10,32);_dea ,_ :=_g .ParseInt (_a [4:6],10,32);_eb :=int64 (in .Year ());_bf :=int64 (in .Month ());_ee :=int64 (in .Day ());
_bb :=int64 (in .Hour ());_bbg :=int64 (in .Minute ());_be :=int64 (in .Second ());_ea :=_a [0];return _c .Sprintf ("\u0044\u003a\u0025\u002e\u0034\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e2\u0064\u0025\u0063\u0025\u002e2\u0064\u0027%\u002e\u0032\u0064\u0027",_eb ,_bf ,_ee ,_bb ,_bbg ,_be ,_ea ,_ac ,_dea );
};func ParsePdfTime (pdfTime string )(_dc .Time ,error ){_cb :=_eg .FindAllStringSubmatch (pdfTime ,1);if len (_cb )< 1{return _dc .Time {},_c .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0065\u0020s\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0073\u0029",pdfTime );
};if len (_cb [0])!=10{return _dc .Time {},_d .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0067\u0065\u0078p\u0020\u0067\u0072\u006f\u0075\u0070 \u006d\u0061\u0074\u0063\u0068\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020!\u003d\u0020\u0031\u0030");
};_ag ,_ :=_g .ParseInt (_cb [0][1],10,32);_cc ,_ :=_g .ParseInt (_cb [0][2],10,32);_bd ,_ :=_g .ParseInt (_cb [0][3],10,32);_f ,_ :=_g .ParseInt (_cb [0][4],10,32);_eaf ,_ :=_g .ParseInt (_cb [0][5],10,32);_fb ,_ :=_g .ParseInt (_cb [0][6],10,32);var (_cgg byte ;
_fd int64 ;_gd int64 ;);if len (_cb [0][7])> 0{_cgg =_cb [0][7][0];}else {_cgg ='+';};if len (_cb [0][8])> 0{_fd ,_ =_g .ParseInt (_cb [0][8],10,32);}else {_fd =0;};if len (_cb [0][9])> 0{_gd ,_ =_g .ParseInt (_cb [0][9],10,32);}else {_gd =0;};_bea :=int (_fd *60*60+_gd *60);
switch _cgg {case '-':_bea =-_bea ;case 'Z':_bea =0;};_dg :=_c .Sprintf ("\u0055\u0054\u0043\u0025\u0063\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064",_cgg ,_fd ,_gd );_ad :=_dc .FixedZone (_dg ,_bea );return _dc .Date (int (_ag ),_dc .Month (_cc ),int (_bd ),int (_f ),int (_eaf ),int (_fb ),0,_ad ),nil ;
};