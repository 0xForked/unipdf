//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package timeutils ;import (_b "errors";_f "fmt";_be "regexp";_bd "strconv";_ag "time";);func ParsePdfTime (pdfTime string )(_ag .Time ,error ){_age :=_bde .FindAllStringSubmatch (pdfTime ,1);if len (_age )< 1{return _ag .Time {},_f .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0065\u0020s\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0073\u0029",pdfTime );
};if len (_age [0])!=10{return _ag .Time {},_b .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0067\u0065\u0078p\u0020\u0067\u0072\u006f\u0075\u0070 \u006d\u0061\u0074\u0063\u0068\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020!\u003d\u0020\u0031\u0030");
};_aef ,_ :=_bd .ParseInt (_age [0][1],10,32);_cfd ,_ :=_bd .ParseInt (_age [0][2],10,32);_bda ,_ :=_bd .ParseInt (_age [0][3],10,32);_bea ,_ :=_bd .ParseInt (_age [0][4],10,32);_db ,_ :=_bd .ParseInt (_age [0][5],10,32);_af ,_ :=_bd .ParseInt (_age [0][6],10,32);
var (_ed byte ;_fec int64 ;_eac int64 ;);if len (_age [0][7])> 0{_ed =_age [0][7][0];}else {_ed ='+';};if len (_age [0][8])> 0{_fec ,_ =_bd .ParseInt (_age [0][8],10,32);}else {_fec =0;};if len (_age [0][9])> 0{_eac ,_ =_bd .ParseInt (_age [0][9],10,32);
}else {_eac =0;};_ga :=int (_fec *60*60+_eac *60);switch _ed {case '-':_ga =-_ga ;case 'Z':_ga =0;};_de :=_f .Sprintf ("\u0055\u0054\u0043\u0025\u0063\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064",_ed ,_fec ,_eac );_eae :=_ag .FixedZone (_de ,_ga );
return _ag .Date (int (_aef ),_ag .Month (_cfd ),int (_bda ),int (_bea ),int (_db ),int (_af ),0,_eae ),nil ;};var _bde =_be .MustCompile ("\u005c\u0073\u002a\u0044\u005c\u0073\u002a:\u005c\u0073\u002a\u0028\u005c\u0064\u007b\u0034\u007d\u0029\u0028\u005c\u0064\u007b2\u007d)\u0028\u005c\u0064\u007b\u0032\u007d)\u0028\u005c\u0064\u007b\u0032\u007d\u0029(\u005c\u0064\u007b\u0032\u007d\u0029\u0028\u005c\u0064\u007b\u0032\u007d\u0029\u0028\u005b\u002b\u002d\u005a\u005d\u0029\u003f\u0028\u005cd\u007b\u0032\u007d\u0029\u003f\u0027\u003f\u0028\u005c\u0064\u007b\u0032\u007d)\u003f");
func FormatPdfTime (in _ag .Time )string {_g :=in .Format ("\u002d\u0030\u0037\u003a\u0030\u0030");_d ,_ :=_bd .ParseInt (_g [1:3],10,32);_gb ,_ :=_bd .ParseInt (_g [4:6],10,32);_dg :=int64 (in .Year ());_fc :=int64 (in .Month ());_ea :=int64 (in .Day ());
_ac :=int64 (in .Hour ());_ead :=int64 (in .Minute ());_fe :=int64 (in .Second ());_ae :=_g [0];return _f .Sprintf ("\u0044\u003a\u0025\u002e\u0034\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e2\u0064\u0025\u0063\u0025\u002e2\u0064\u0027%\u002e\u0032\u0064\u0027",_dg ,_fc ,_ea ,_ac ,_ead ,_fe ,_ae ,_d ,_gb );
};