//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package testutils ;import (_d "crypto/md5";_ded "encoding/hex";_ed "errors";_aa "fmt";_ae "github.com/unidoc/unipdf/v3/common";_dgb "github.com/unidoc/unipdf/v3/core";_dg "image";_be "image/png";_de "io";_g "os";_e "os/exec";_bf "path/filepath";_b "strings";
_a "testing";);func ParseIndirectObjects (rawpdf string )(map[int64 ]_dgb .PdfObject ,error ){_bg :=_dgb .NewParserFromString (rawpdf );_fdd :=map[int64 ]_dgb .PdfObject {};for {_dea ,_fdf :=_bg .ParseIndirectObject ();if _fdf !=nil {if _fdf ==_de .EOF {break ;
};return nil ,_fdf ;};switch _cga :=_dea .(type ){case *_dgb .PdfIndirectObject :_fdd [_cga .ObjectNumber ]=_dea ;case *_dgb .PdfObjectStream :_fdd [_cga .ObjectNumber ]=_dea ;};};for _ ,_egb :=range _fdd {_acb (_egb ,_fdd );};return _fdd ,nil ;};var (ErrRenderNotSupported =_ed .New ("\u0072\u0065\u006e\u0064\u0065r\u0069\u006e\u0067\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006c\u0065\u0073 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u006f\u006e\u0020\u0074\u0068\u0069\u0073\u0020\u0073\u0079\u0073\u0074\u0065m");
);func RenderPDFToPNGs (pdfPath string ,dpi int ,outpathTpl string )error {if dpi <=0{dpi =100;};if _ ,_feb :=_e .LookPath ("\u0067\u0073");_feb !=nil {return ErrRenderNotSupported ;};return _e .Command ("\u0067\u0073","\u002d\u0073\u0044\u0045\u0056\u0049\u0043\u0045\u003d\u0070\u006e\u0067a\u006c\u0070\u0068\u0061","\u002d\u006f",outpathTpl ,_aa .Sprintf ("\u002d\u0072\u0025\u0064",dpi ),pdfPath ).Run ();
};func CompareImages (img1 ,img2 _dg .Image )(bool ,error ){_abb :=img1 .Bounds ();_ca :=0;for _fd :=0;_fd < _abb .Size ().X ;_fd ++{for _fe :=0;_fe < _abb .Size ().Y ;_fe ++{_gc ,_bb ,_ea ,_ :=img1 .At (_fd ,_fe ).RGBA ();_gf ,_fee ,_cc ,_ :=img2 .At (_fd ,_fe ).RGBA ();
if _gc !=_gf ||_bb !=_fee ||_ea !=_cc {_ca ++;};};};_bef :=float64 (_ca )/float64 (_abb .Dx ()*_abb .Dy ());if _bef > 0.0001{_aa .Printf ("\u0064\u0069\u0066f \u0066\u0072\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0064\u0029\u000a",_bef ,_ca );
return false ,nil ;};return true ,nil ;};func ComparePNGFiles (file1 ,file2 string )(bool ,error ){_ddc ,_ac :=HashFile (file1 );if _ac !=nil {return false ,_ac ;};_af ,_ac :=HashFile (file2 );if _ac !=nil {return false ,_ac ;};if _ddc ==_af {return true ,nil ;
};_dda ,_ac :=ReadPNG (file1 );if _ac !=nil {return false ,_ac ;};_ad ,_ac :=ReadPNG (file2 );if _ac !=nil {return false ,_ac ;};if _dda .Bounds ()!=_ad .Bounds (){return false ,nil ;};return CompareImages (_dda ,_ad );};func RunRenderTest (t *_a .T ,pdfPath ,outputDir ,baselineRenderPath string ,saveBaseline bool ){_ga :=_b .TrimSuffix (_bf .Base (pdfPath ),_bf .Ext (pdfPath ));
t .Run ("\u0072\u0065\u006e\u0064\u0065\u0072",func (_gac *_a .T ){_eaf :=_bf .Join (outputDir ,_ga );_eg :=_eaf +"\u002d%\u0064\u002e\u0070\u006e\u0067";if _cg :=RenderPDFToPNGs (pdfPath ,0,_eg );_cg !=nil {_gac .Skip (_cg );};for _ge :=1;true ;_ge ++{_efe :=_aa .Sprintf ("\u0025s\u002d\u0025\u0064\u002e\u0070\u006eg",_eaf ,_ge );
_fg :=_bf .Join (baselineRenderPath ,_aa .Sprintf ("\u0025\u0073\u002d\u0025\u0064\u005f\u0065\u0078\u0070\u002e\u0070\u006e\u0067",_ga ,_ge ));if _ ,_ead :=_g .Stat (_efe );_ead !=nil {break ;};_gac .Logf ("\u0025\u0073",_fg );if saveBaseline {_gac .Logf ("\u0043\u006fp\u0079\u0069\u006eg\u0020\u0025\u0073\u0020\u002d\u003e\u0020\u0025\u0073",_efe ,_fg );
_aaa :=CopyFile (_efe ,_fg );if _aaa !=nil {_gac .Fatalf ("\u0045\u0052\u0052OR\u0020\u0063\u006f\u0070\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_fg ,_aaa );};continue ;};_gac .Run (_aa .Sprintf ("\u0070\u0061\u0067\u0065\u0025\u0064",_ge ),func (_ba *_a .T ){_ba .Logf ("\u0043o\u006dp\u0061\u0072\u0069\u006e\u0067 \u0025\u0073 \u0076\u0073\u0020\u0025\u0073",_efe ,_fg );
_ggd ,_gb :=ComparePNGFiles (_efe ,_fg );if _g .IsNotExist (_gb ){_ba .Fatal ("\u0069m\u0061g\u0065\u0020\u0066\u0069\u006ce\u0020\u006di\u0073\u0073\u0069\u006e\u0067");}else if !_ggd {_ba .Fatal ("\u0077\u0072\u006f\u006eg \u0070\u0061\u0067\u0065\u0020\u0072\u0065\u006e\u0064\u0065\u0072\u0065\u0064");
};});};});};func CopyFile (src ,dst string )error {_dc ,_dgd :=_g .Open (src );if _dgd !=nil {return _dgd ;};defer _dc .Close ();_c ,_dgd :=_g .Create (dst );if _dgd !=nil {return _dgd ;};defer _c .Close ();_ ,_dgd =_de .Copy (_c ,_dc );return _dgd ;};
func HashFile (file string )(string ,error ){_aef ,_df :=_g .Open (file );if _df !=nil {return "",_df ;};defer _aef .Close ();_ef :=_d .New ();if _ ,_df =_de .Copy (_ef ,_aef );_df !=nil {return "",_df ;};return _ded .EncodeToString (_ef .Sum (nil )),nil ;
};func CompareDictionariesDeep (d1 ,d2 *_dgb .PdfObjectDictionary )bool {if len (d1 .Keys ())!=len (d2 .Keys ()){_ae .Log .Debug ("\u0044\u0069\u0063\u0074\u0020\u0065\u006e\u0074\u0072\u0069\u0065\u0073\u0020\u006d\u0069s\u006da\u0074\u0063\u0068\u0020\u0028\u0025\u0064\u0020\u0021\u003d\u0020\u0025\u0064\u0029",len (d1 .Keys ()),len (d2 .Keys ()));
_ae .Log .Debug ("\u0057\u0061s\u0020\u0027\u0025s\u0027\u0020\u0076\u0073\u0020\u0027\u0025\u0073\u0027",d1 .WriteString (),d2 .WriteString ());return false ;};for _ ,_cbf :=range d1 .Keys (){if _cbf =="\u0050\u0061\u0072\u0065\u006e\u0074"{continue ;
};_abd :=_dgb .TraceToDirectObject (d1 .Get (_cbf ));_gbf :=_dgb .TraceToDirectObject (d2 .Get (_cbf ));if _abd ==nil {_ae .Log .Debug ("\u00761\u0020\u0069\u0073\u0020\u006e\u0069l");return false ;};if _gbf ==nil {_ae .Log .Debug ("\u00762\u0020\u0069\u0073\u0020\u006e\u0069l");
return false ;};switch _edc :=_abd .(type ){case *_dgb .PdfObjectDictionary :_dde ,_bbf :=_gbf .(*_dgb .PdfObjectDictionary );if !_bbf {_ae .Log .Debug ("\u0054\u0079\u0070\u0065 m\u0069\u0073\u006d\u0061\u0074\u0063\u0068\u0020\u0025\u0054\u0020\u0076\u0073\u0020%\u0054",_abd ,_gbf );
return false ;};if !CompareDictionariesDeep (_edc ,_dde ){return false ;};continue ;case *_dgb .PdfObjectArray :_aba ,_fag :=_gbf .(*_dgb .PdfObjectArray );if !_fag {_ae .Log .Debug ("\u00762\u0020n\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
return false ;};if _edc .Len ()!=_aba .Len (){_ae .Log .Debug ("\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006d\u0069s\u006da\u0074\u0063\u0068\u0020\u0028\u0025\u0064\u0020\u0021\u003d\u0020\u0025\u0064\u0029",_edc .Len (),_aba .Len ());
return false ;};for _dcb :=0;_dcb < _edc .Len ();_dcb ++{_dgg :=_dgb .TraceToDirectObject (_edc .Get (_dcb ));_gca :=_dgb .TraceToDirectObject (_aba .Get (_dcb ));if _abe ,_fddf :=_dgg .(*_dgb .PdfObjectDictionary );_fddf {_gbb ,_db :=_gca .(*_dgb .PdfObjectDictionary );
if !_db {return false ;};if !CompareDictionariesDeep (_abe ,_gbb ){return false ;};}else {if _dgg .WriteString ()!=_gca .WriteString (){_ae .Log .Debug ("M\u0069\u0073\u006d\u0061tc\u0068 \u0027\u0025\u0073\u0027\u0020!\u003d\u0020\u0027\u0025\u0073\u0027",_dgg .WriteString (),_gca .WriteString ());
return false ;};};};continue ;};if _abd .String ()!=_gbf .String (){_ae .Log .Debug ("\u006b\u0065y\u003d\u0025\u0073\u0020\u004d\u0069\u0073\u006d\u0061\u0074\u0063\u0068\u0021\u0020\u0027\u0025\u0073\u0027\u0020\u0021\u003d\u0020'%\u0073\u0027",_cbf ,_abd .String (),_gbf .String ());
_ae .Log .Debug ("\u0046o\u0072 \u0027\u0025\u0054\u0027\u0020\u002d\u0020\u0027\u0025\u0054\u0027",_abd ,_gbf );_ae .Log .Debug ("\u0046\u006f\u0072\u0020\u0027\u0025\u002b\u0076\u0027\u0020\u002d\u0020'\u0025\u002b\u0076\u0027",_abd ,_gbf );return false ;
};};return true ;};func _acb (_ag _dgb .PdfObject ,_cb map[int64 ]_dgb .PdfObject )error {switch _dgf :=_ag .(type ){case *_dgb .PdfIndirectObject :_dfd :=_dgf ;_acb (_dfd .PdfObject ,_cb );case *_dgb .PdfObjectDictionary :_fgf :=_dgf ;for _ ,_dcd :=range _fgf .Keys (){_eag :=_fgf .Get (_dcd );
if _ec ,_eab :=_eag .(*_dgb .PdfObjectReference );_eab {_fgg ,_febe :=_cb [_ec .ObjectNumber ];if !_febe {return _ed .New ("r\u0065\u0066\u0065\u0072\u0065\u006ec\u0065\u0020\u0074\u006f\u0020\u006f\u0075\u0074\u0073i\u0064\u0065\u0020o\u0062j\u0065\u0063\u0074");
};_fgf .Set (_dcd ,_fgg );}else {_acb (_eag ,_cb );};};case *_dgb .PdfObjectArray :_da :=_dgf ;for _fb ,_fdb :=range _da .Elements (){if _gace ,_dcdg :=_fdb .(*_dgb .PdfObjectReference );_dcdg {_egg ,_bee :=_cb [_gace .ObjectNumber ];if !_bee {return _ed .New ("r\u0065\u0066\u0065\u0072\u0065\u006ec\u0065\u0020\u0074\u006f\u0020\u006f\u0075\u0074\u0073i\u0064\u0065\u0020o\u0062j\u0065\u0063\u0074");
};_da .Set (_fb ,_egg );}else {_acb (_fdb ,_cb );};};};return nil ;};func ReadPNG (file string )(_dg .Image ,error ){_gg ,_dd :=_g .Open (file );if _dd !=nil {return nil ,_dd ;};defer _gg .Close ();return _be .Decode (_gg );};