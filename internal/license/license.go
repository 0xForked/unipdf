//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package license ;import (_cd "bytes";_ee "compress/gzip";_e "crypto";_fb "crypto/aes";_bd "crypto/cipher";_bb "crypto/rand";_gf "crypto/rsa";_bf "crypto/sha512";_gb "crypto/x509";_cdf "encoding/base64";_dfc "encoding/hex";_gg "encoding/json";_eeg "encoding/pem";
_fda "errors";_eb "fmt";_dfe "github.com/unidoc/unipdf/v3/common";_c "io";_fd "io/ioutil";_d "net";_ca "net/http";_ed "os";_b "path/filepath";_ga "sort";_df "strings";_g "sync";_cg "time";);func _aee (_ddad ,_aebc []byte )([]byte ,error ){_cff ,_beg :=_fb .NewCipher (_ddad );
if _beg !=nil {return nil ,_beg ;};_agf :=make ([]byte ,_fb .BlockSize +len (_aebc ));_bed :=_agf [:_fb .BlockSize ];if _ ,_fgb :=_c .ReadFull (_bb .Reader ,_bed );_fgb !=nil {return nil ,_fgb ;};_ebfd :=_bd .NewCFBEncrypter (_cff ,_bed );_ebfd .XORKeyStream (_agf [_fb .BlockSize :],_aebc );
_aded :=make ([]byte ,_cdf .URLEncoding .EncodedLen (len (_agf )));_cdf .URLEncoding .Encode (_aded ,_agf );return _aded ,nil ;};var _gfc map[string ]int ;type meteredClient struct{_gbe string ;_add string ;_cbg *_ca .Client ;};func _ccb ()*meteredClient {_ggc :=meteredClient {_gbe :"h\u0074\u0074\u0070\u0073\u003a\u002f/\u0063\u006c\u006f\u0075\u0064\u002e\u0075\u006e\u0069d\u006f\u0063\u002ei\u006f/\u0061\u0070\u0069",_cbg :&_ca .Client {Timeout :30*_cg .Second }};
if _ae :=_ed .Getenv ("\u0055N\u0049\u0044\u004f\u0043_\u004c\u0049\u0043\u0045\u004eS\u0045_\u0053E\u0052\u0056\u0045\u0052\u005f\u0055\u0052L");_df .HasPrefix (_ae ,"\u0068\u0074\u0074\u0070"){_ggc ._gbe =_ae ;};return &_ggc ;};type meteredUsageCheckinResp struct{Instance string `json:"inst"`;
Next string `json:"next"`;Success bool `json:"success"`;Message string `json:"message"`;RemainingDocs int `json:"rd"`;LimitDocs bool `json:"ld"`;};func (_ag *LicenseKey )Validate ()error {if _ag ._fdf {return nil ;};if len (_ag .LicenseId )< 10{return _eb .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020L\u0069\u0063\u0065n\u0073e\u0020\u0049\u0064");
};if len (_ag .CustomerId )< 10{return _eb .Errorf ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065:\u0020C\u0075\u0073\u0074\u006f\u006d\u0065\u0072 \u0049\u0064");};if len (_ag .CustomerName )< 1{return _eb .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069c\u0065\u006e\u0073\u0065\u003a\u0020\u0043u\u0073\u0074\u006f\u006d\u0065\u0072\u0020\u004e\u0061\u006d\u0065");
};if _bdf .After (_ag .CreatedAt ){return _eb .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u0065\u0064 \u0041\u0074\u0020\u0069\u0073 \u0069\u006ev\u0061\u006c\u0069\u0064");
};if _ag .ExpiresAt ==nil {_dgd :=_ag .CreatedAt .AddDate (1,0,0);if _db .After (_dgd ){_dgd =_db ;};_ag .ExpiresAt =&_dgd ;};if _ag .CreatedAt .After (*_ag .ExpiresAt ){return _eb .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u0065\u0064\u0020\u0041\u0074 \u0063a\u006e\u006e\u006f\u0074 \u0062\u0065 \u0047\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0045\u0078\u0070\u0069\u0072\u0065\u0073\u0020\u0041\u0074");
};if _ag .isExpired (){return _eb .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020l\u0069\u0063\u0065ns\u0065\u003a\u0020\u0054\u0068\u0065 \u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u0068\u0061\u0073\u0020\u0061\u006c\u0072e\u0061\u0064\u0079\u0020\u0065\u0078\u0070\u0069r\u0065\u0064");
};if len (_ag .CreatorName )< 1{return _eb .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u0020na\u006d\u0065");};if len (_ag .CreatorEmail )< 1{return _eb .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069c\u0065\u006e\u0073\u0065\u003a\u0020\u0043r\u0065\u0061\u0074\u006f\u0072\u0020\u0065\u006d\u0061\u0069\u006c");
};if _ag .CreatedAt .After (_ccd ){if !_ag .UniPDF {return _eb .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065:\u0020\u0054\u0068\u0069\u0073\u0020\u0055\u006e\u0069\u0044\u006f\u0063\u0020k\u0065\u0079\u0020\u0069\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069d \u0066\u006f\u0072\u0020\u0055\u006e\u0069\u0050\u0044\u0046");
};};return nil ;};var _gcab map[string ]struct{};func (_ggf *meteredClient )getStatus ()(meteredStatusResp ,error ){var _bfg meteredStatusResp ;_gbc :=_ggf ._gbe +"\u002fm\u0065t\u0065\u0072\u0065\u0064\u002f\u0073\u0074\u0061\u0074\u0075\u0073";var _dbb meteredStatusForm ;
_eadg ,_bgg :=_gg .Marshal (_dbb );if _bgg !=nil {return _bfg ,_bgg ;};_be ,_bgg :=_dbdg (_eadg );if _bgg !=nil {return _bfg ,_bgg ;};_gba ,_bgg :=_ca .NewRequest ("\u0050\u004f\u0053\u0054",_gbc ,_be );if _bgg !=nil {return _bfg ,_bgg ;};_gba .Header .Add ("\u0043\u006f\u006et\u0065\u006e\u0074\u002d\u0054\u0079\u0070\u0065","\u0061\u0070p\u006c\u0069\u0063a\u0074\u0069\u006f\u006e\u002f\u006a\u0073\u006f\u006e");
_gba .Header .Add ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");_gba .Header .Add ("\u0041c\u0063e\u0070\u0074\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");
_gba .Header .Add ("\u0058-\u0041\u0050\u0049\u002d\u004b\u0045Y",_ggf ._add );_acdg ,_bgg :=_ggf ._cbg .Do (_gba );if _bgg !=nil {return _bfg ,_bgg ;};defer _acdg .Body .Close ();if _acdg .StatusCode !=200{return _bfg ,_eb .Errorf ("\u0066\u0061i\u006c\u0065\u0064\u0020t\u006f\u0020c\u0068\u0065\u0063\u006b\u0069\u006e\u002c\u0020s\u0074\u0061\u0074\u0075\u0073\u0020\u0063\u006f\u0064\u0065\u0020\u0069s\u003a\u0020\u0025\u0064",_acdg .StatusCode );
};_dba ,_bgg :=_fgd (_acdg );if _bgg !=nil {return _bfg ,_bgg ;};_bgg =_gg .Unmarshal (_dba ,&_bfg );if _bgg !=nil {return _bfg ,_bgg ;};return _bfg ,nil ;};func _aaf (_gec ,_cbb []byte )([]byte ,error ){_ddeg :=make ([]byte ,_cdf .URLEncoding .DecodedLen (len (_cbb )));
_bec ,_gag :=_cdf .URLEncoding .Decode (_ddeg ,_cbb );if _gag !=nil {return nil ,_gag ;};_ddeg =_ddeg [:_bec ];_abaf ,_gag :=_fb .NewCipher (_gec );if _gag !=nil {return nil ,_gag ;};if len (_ddeg )< _fb .BlockSize {return nil ,_fda .New ("c\u0069p\u0068\u0065\u0072\u0074\u0065\u0078\u0074\u0020t\u006f\u006f\u0020\u0073ho\u0072\u0074");
};_eddf :=_ddeg [:_fb .BlockSize ];_ddeg =_ddeg [_fb .BlockSize :];_agd :=_bd .NewCFBDecrypter (_abaf ,_eddf );_agd .XORKeyStream (_ddeg ,_ddeg );return _ddeg ,nil ;};const _fddd ="U\u004eI\u0050\u0044\u0046\u005f\u0043\u0055\u0053\u0054O\u004d\u0045\u0052\u005fNA\u004d\u0045";
func _ba (_gdd string ,_gae string ,_ada string )(string ,error ){_bgf :=_df .Index (_ada ,_gdd );if _bgf ==-1{return "",_eb .Errorf ("\u0068\u0065a\u0064\u0065\u0072 \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_eg :=_df .Index (_ada ,_gae );
if _eg ==-1{return "",_eb .Errorf ("\u0066\u006fo\u0074\u0065\u0072 \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_dg :=_bgf +len (_gdd )+1;return _ada [_dg :_eg -1],nil ;};func _dgb ()([]string ,[]string ,error ){_abf ,_befca :=_d .Interfaces ();
if _befca !=nil {return nil ,nil ,_befca ;};var _gbae []string ;var _dgbb []string ;for _ ,_gbd :=range _abf {if _gbd .Flags &_d .FlagUp ==0||_cd .Equal (_gbd .HardwareAddr ,nil ){continue ;};_faf ,_bgd :=_gbd .Addrs ();if _bgd !=nil {return nil ,nil ,_bgd ;
};_fag :=0;for _ ,_bfd :=range _faf {var _aebg _d .IP ;switch _abb :=_bfd .(type ){case *_d .IPNet :_aebg =_abb .IP ;case *_d .IPAddr :_aebg =_abb .IP ;};if _aebg .IsLoopback (){continue ;};if _aebg .To4 ()==nil {continue ;};_dgbb =append (_dgbb ,_aebg .String ());
_fag ++;};_cba :=_gbd .HardwareAddr .String ();if _cba !=""&&_fag > 0{_gbae =append (_gbae ,_cba );};};return _gbae ,_dgbb ,nil ;};func _a (_caf string ,_fab []byte )(string ,error ){_dd ,_ :=_eeg .Decode ([]byte (_caf ));if _dd ==nil {return "",_eb .Errorf ("\u0050\u0072\u0069\u0076\u004b\u0065\u0079\u0020\u0066a\u0069\u006c\u0065\u0064");
};_bbf ,_ab :=_gb .ParsePKCS1PrivateKey (_dd .Bytes );if _ab !=nil {return "",_ab ;};_de :=_bf .New ();_de .Write (_fab );_dfee :=_de .Sum (nil );_gfd ,_ab :=_gf .SignPKCS1v15 (_bb .Reader ,_bbf ,_e .SHA512 ,_dfee );if _ab !=nil {return "",_ab ;};_eef :=_cdf .StdEncoding .EncodeToString (_fab );
_eef +="\u000a\u002b\u000a";_eef +=_cdf .StdEncoding .EncodeToString (_gfd );return _eef ,nil ;};type stateLoader interface{loadState (_bbg string )(reportState ,error );updateState (_ddb ,_ec ,_dc string ,_ecc int ,_dgc bool ,_fac int ,_aea int ,_ced _cg .Time ,_cfe map[string ]int )error ;
};var _cgbd =MakeUnlicensedKey ();func TrackUse (useKey string ){if _cgbd ==nil {return ;};if !_cgbd ._fdf ||len (_cgbd ._acd )==0{return ;};if len (useKey )==0{return ;};_aa .Lock ();defer _aa .Unlock ();if _gfc ==nil {_gfc =map[string ]int {};};_gfc [useKey ]++;
};func Track (docKey string ,useKey string )error {return _gea (docKey ,useKey ,false )};func _gea (_bcd string ,_bfe string ,_cde bool )error {if _cgbd ==nil {return _fda .New ("\u006e\u006f\u0020\u006c\u0069\u0063\u0065\u006e\u0073e\u0020\u006b\u0065\u0079");
};if !_cgbd ._fdf ||len (_cgbd ._acd )==0{return nil ;};if len (_bcd )==0&&!_cde {return _fda .New ("\u0064\u006f\u0063\u004b\u0065\u0079\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");};_aa .Lock ();defer _aa .Unlock ();if _gcab ==nil {_gcab =map[string ]struct{}{};
};if _gfc ==nil {_gfc =map[string ]int {};};_fea :=0;if !_cde {_ ,_bfc :=_gcab [_bcd ];if !_bfc {_gcab [_bcd ]=struct{}{};_fea ++;};if _fea ==0{return nil ;};_gfc [_bfe ]++;};_ffg :=_cg .Now ();_fdd ,_gaa :=_aeg .loadState (_cgbd ._acd );if _gaa !=nil {_dfe .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gaa );
return _gaa ;};if _fdd .Usage ==nil {_fdd .Usage =map[string ]int {};};for _ade ,_gad :=range _gfc {_fdd .Usage [_ade ]+=_gad ;};_gfc =nil ;const _aba =24*_cg .Hour ;const _bcg =3*24*_cg .Hour ;if len (_fdd .Instance )==0||_ffg .Sub (_fdd .LastReported )> _aba ||(_fdd .LimitDocs &&_fdd .RemainingDocs <=_fdd .Docs +int64 (_fea ))||_cde {_agg ,_ddbc :=_ed .Hostname ();
if _ddbc !=nil {return _ddbc ;};_dcd :=_fdd .Docs ;_fae ,_bbge ,_ddbc :=_dgb ();if _ddbc !=nil {_dfe .Log .Debug ("\u0055\u006e\u0061b\u006c\u0065\u0020\u0074o\u0020\u0067\u0065\u0074\u0020\u006c\u006fc\u0061\u006c\u0020\u0061\u0064\u0064\u0072\u0065\u0073\u0073\u003a\u0020\u0025\u0073",_ddbc .Error ());
_fae =append (_fae ,"\u0069n\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020n\u006ft\u0020a\u0076\u0061\u0069\u006c\u0061\u0062\u006ce");_bbge =append (_bbge ,"\u0069n\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020n\u006ft\u0020a\u0076\u0061\u0069\u006c\u0061\u0062\u006ce");
}else {_ga .Strings (_bbge );_ga .Strings (_fae );_bgff ,_gcad :=_gee ();if _gcad !=nil {return _gcad ;};_eccg :=false ;for _ ,_bffg :=range _bbge {if _bffg ==_bgff .String (){_eccg =true ;};};if !_eccg {_bbge =append (_bbge ,_bgff .String ());};};_adee :=_ccb ();
_adee ._add =_cgbd ._acd ;_dcd +=int64 (_fea );_bae :=meteredUsageCheckinForm {Instance :_fdd .Instance ,Next :_fdd .Next ,UsageNumber :int (_dcd ),NumFailed :_fdd .NumErrors ,Hostname :_agg ,LocalIP :_df .Join (_bbge ,"\u002c\u0020"),MacAddress :_df .Join (_fae ,"\u002c\u0020"),Package :"\u0075\u006e\u0069\u0070\u0064\u0066",PackageVersion :_dfe .Version ,Usage :_fdd .Usage };
if len (_fae )==0{_bae .MacAddress ="\u006e\u006f\u006e\u0065";};_ecf :=int64 (0);_gcg :=_fdd .NumErrors ;_abg :=_ffg ;_af :=0;_fcb :=_fdd .LimitDocs ;_aef ,_ddbc :=_adee .checkinUsage (_bae );if _ddbc !=nil {if _ffg .Sub (_fdd .LastReported )> _bcg {return _fda .New ("\u0074\u006f\u006f\u0020\u006c\u006f\u006e\u0067\u0020\u0073\u0069\u006e\u0063\u0065\u0020\u006c\u0061\u0073\u0074\u0020\u0073\u0075\u0063\u0063e\u0073\u0073\u0066\u0075\u006c \u0063\u0068e\u0063\u006b\u0069\u006e");
};_ecf =_dcd ;_gcg ++;_abg =_fdd .LastReported ;}else {_fcb =_aef .LimitDocs ;_af =_aef .RemainingDocs ;_gcg =0;};if len (_aef .Instance )==0{_aef .Instance =_bae .Instance ;};if len (_aef .Next )==0{_aef .Next =_bae .Next ;};_ddbc =_aeg .updateState (_adee ._add ,_aef .Instance ,_aef .Next ,int (_ecf ),_fcb ,_af ,int (_gcg ),_abg ,nil );
if _ddbc !=nil {return _ddbc ;};if !_aef .Success {return _eb .Errorf ("\u0065r\u0072\u006f\u0072\u003a\u0020\u0025s",_aef .Message );};}else {_gaa =_aeg .updateState (_cgbd ._acd ,_fdd .Instance ,_fdd .Next ,int (_fdd .Docs )+_fea ,_fdd .LimitDocs ,int (_fdd .RemainingDocs ),int (_fdd .NumErrors ),_fdd .LastReported ,_fdd .Usage );
if _gaa !=nil {return _gaa ;};};return nil ;};func _fgd (_abc *_ca .Response )([]byte ,error ){var _bfcc []byte ;_bbgee ,_edd :=_dfdg (_abc );if _edd !=nil {return _bfcc ,_edd ;};return _fd .ReadAll (_bbgee );};func _ac (_gfde string )(LicenseKey ,error ){var _adf LicenseKey ;
_fc ,_bbd :=_ba (_fa ,_bg ,_gfde );if _bbd !=nil {return _adf ,_bbd ;};_adaf ,_bbd :=_ea (_ccbc ,_fc );if _bbd !=nil {return _adf ,_bbd ;};_bbd =_gg .Unmarshal (_adaf ,&_adf );if _bbd !=nil {return _adf ,_bbd ;};_adf .CreatedAt =_cg .Unix (_adf .CreatedAtInt ,0);
if _adf .ExpiresAtInt > 0{_fbg :=_cg .Unix (_adf .ExpiresAtInt ,0);_adf .ExpiresAt =&_fbg ;};return _adf ,nil ;};func MakeUnlicensedKey ()*LicenseKey {_gc :=LicenseKey {};_gc .CustomerName ="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";
_gc .Tier =LicenseTierUnlicensed ;_gc .CreatedAt =_cg .Now ().UTC ();_gc .CreatedAtInt =_gc .CreatedAt .Unix ();return &_gc ;};func (_egc *meteredClient )checkinUsage (_bad meteredUsageCheckinForm )(meteredUsageCheckinResp ,error ){_bad .Package ="\u0075\u006e\u0069\u0070\u0064\u0066";
_bad .PackageVersion =_dfe .Version ;var _eadd meteredUsageCheckinResp ;_eda :=_egc ._gbe +"\u002f\u006d\u0065\u0074er\u0065\u0064\u002f\u0075\u0073\u0061\u0067\u0065\u005f\u0063\u0068\u0065\u0063\u006bi\u006e";_fe ,_da :=_gg .Marshal (_bad );if _da !=nil {return _eadd ,_da ;
};_cfb ,_da :=_dbdg (_fe );if _da !=nil {return _eadd ,_da ;};_gbca ,_da :=_ca .NewRequest ("\u0050\u004f\u0053\u0054",_eda ,_cfb );if _da !=nil {return _eadd ,_da ;};_gbca .Header .Add ("\u0043\u006f\u006et\u0065\u006e\u0074\u002d\u0054\u0079\u0070\u0065","\u0061\u0070p\u006c\u0069\u0063a\u0074\u0069\u006f\u006e\u002f\u006a\u0073\u006f\u006e");
_gbca .Header .Add ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");_gbca .Header .Add ("\u0041c\u0063e\u0070\u0074\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");
_gbca .Header .Add ("\u0058-\u0041\u0050\u0049\u002d\u004b\u0045Y",_egc ._add );_dbd ,_da :=_egc ._cbg .Do (_gbca );if _da !=nil {return _eadd ,_da ;};defer _dbd .Body .Close ();if _dbd .StatusCode !=200{return _eadd ,_eb .Errorf ("\u0066\u0061i\u006c\u0065\u0064\u0020t\u006f\u0020c\u0068\u0065\u0063\u006b\u0069\u006e\u002c\u0020s\u0074\u0061\u0074\u0075\u0073\u0020\u0063\u006f\u0064\u0065\u0020\u0069s\u003a\u0020\u0025\u0064",_dbd .StatusCode );
};_badf ,_da :=_fgd (_dbd );if _da !=nil {return _eadd ,_da ;};_da =_gg .Unmarshal (_badf ,&_eadd );if _da !=nil {return _eadd ,_da ;};return _eadd ,nil ;};func (_aeb defaultStateHolder )updateState (_cede ,_aga ,_fdfd string ,_gca int ,_ge bool ,_cef int ,_aed int ,_bbdg _cg .Time ,_cee map[string ]int )error {_ccbg :=_gfb ();
if len (_ccbg )==0{return _fda .New ("\u0068\u006fm\u0065\u0020\u0064i\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");};_ddc :=_b .Join (_ccbg ,"\u002eu\u006e\u0069\u0064\u006f\u0063");_cgg :=_ed .MkdirAll (_ddc ,0777);if _cgg !=nil {return _cgg ;
};if len (_cede )< 20{return _fda .New ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006b\u0065\u0079");};_beb :=[]byte (_cede );_eeb :=_bf .Sum512_256 (_beb [:20]);_ebf :=_dfc .EncodeToString (_eeb [:]);_fg :=_b .Join (_ddc ,_ebf );var _cab reportState ;
_cab .Docs =int64 (_gca );_cab .NumErrors =int64 (_aed );_cab .LimitDocs =_ge ;_cab .RemainingDocs =int64 (_cef );_cab .LastWritten =_cg .Now ().UTC ();_cab .LastReported =_bbdg ;_cab .Instance =_aga ;_cab .Next =_fdfd ;_cab .Usage =_cee ;_bef ,_cgg :=_gg .Marshal (_cab );
if _cgg !=nil {return _cgg ;};const _dge ="\u0068\u00619\u004e\u004b\u0038]\u0052\u0062\u004c\u002a\u006d\u0034\u004c\u004b\u0057";_bef ,_cgg =_aee ([]byte (_dge ),_bef );if _cgg !=nil {return _cgg ;};_cgg =_fd .WriteFile (_fg ,_bef ,0600);if _cgg !=nil {return _cgg ;
};return nil ;};func (_bdfe *LicenseKey )getExpiryDateToCompare ()_cg .Time {if _bdfe .Trial {return _cg .Now ().UTC ();};return _dfe .ReleasedAt ;};const _ccbc ="\u000a\u002d\u002d\u002d\u002d\u002d\u0042\u0045\u0047\u0049\u004e \u0050\u0055\u0042\u004c\u0049\u0043\u0020\u004b\u0045Y\u002d\u002d\u002d\u002d\u002d\u000a\u004d\u0049I\u0042\u0049\u006a\u0041NB\u0067\u006b\u0071\u0068\u006b\u0069G\u0039\u0077\u0030\u0042\u0041\u0051\u0045\u0046A\u0041\u004f\u0043\u0041\u0051\u0038\u0041\u004d\u0049\u0049\u0042\u0043\u0067\u004b\u0043\u0041\u0051\u0045A\u006dF\u0055\u0069\u0079\u0064\u0037\u0062\u0035\u0058\u006a\u0070\u006b\u0050\u0035\u0052\u0061\u0070\u0034\u0077\u000a\u0044\u0063\u0031d\u0079\u007a\u0049\u0051\u0034\u004c\u0065\u006b\u0078\u0072\u0076\u0079\u0074\u006e\u0045\u004d\u0070\u004e\u0055\u0062\u006f\u0036i\u0041\u0037\u0034\u0056\u0038\u0072\u0075\u005a\u004f\u0076\u0072\u0053\u0063\u0073\u0066\u0032\u0051\u0065\u004e9\u002f\u0071r\u0055\u0047\u0038\u0071\u0045\u0062\u0055\u0057\u0064\u006f\u0045\u0059\u0071+\u000a\u006f\u0074\u0046\u004e\u0041\u0046N\u0078\u006c\u0047\u0062\u0078\u0062\u0044\u0048\u0063\u0064\u0047\u0056\u0061\u004d\u0030\u004f\u0058\u0064\u0058g\u0044y\u004c5\u0061\u0049\u0045\u0061\u0067\u004c\u0030\u0063\u0035\u0070\u0077\u006a\u0049\u0064\u0050G\u0049\u006e\u0034\u0036\u0066\u0037\u0038\u0065\u004d\u004a\u002b\u004a\u006b\u0064\u0063\u0070\u0044\n\u0044\u004a\u0061\u0071\u0059\u0058d\u0072\u007a5\u004b\u0065\u0073\u0068\u006aS\u0069\u0049\u0061\u0061\u0037\u006d\u0065\u006e\u0042\u0049\u0041\u0058\u0053\u0034\u0055\u0046\u0078N\u0066H\u0068\u004e\u0030\u0048\u0043\u0059\u005a\u0059\u0071\u0051\u0047\u0037\u0062K+\u0073\u0035\u0072R\u0048\u006f\u006e\u0079\u0064\u004eW\u0045\u0047\u000a\u0048\u0038M\u0079\u0076\u00722\u0070\u0079\u0061\u0032K\u0072\u004d\u0075m\u0066\u006d\u0041\u0078\u0055\u0042\u0036\u0066\u0065\u006e\u0043\u002f4\u004f\u0030\u0057\u00728\u0067\u0066\u0050\u004f\u0055\u0038R\u0069\u0074\u006d\u0062\u0044\u0076\u0051\u0050\u0049\u0052\u0058\u004fL\u0034\u0076\u0054B\u0072\u0042\u0064\u0062a\u0041\u000a9\u006e\u0077\u004e\u0050\u002b\u0069\u002f\u002f\u0032\u0030\u004d\u00542\u0062\u0078\u006d\u0065\u0057\u0042\u002b\u0067\u0070\u0063\u0045\u0068G\u0070\u0058\u005a7\u0033\u0033\u0061\u007a\u0051\u0078\u0072\u0043\u0033\u004a\u0034\u0076\u0033C\u005a\u006d\u0045\u004eS\u0074\u0044\u004b\u002f\u004b\u0044\u0053\u0050\u004b\u0055\u0047\u0066\u00756\u000a\u0066\u0077I\u0044\u0041\u0051\u0041\u0042\u000a\u002d\u002d\u002d\u002d\u002dE\u004e\u0044\u0020\u0050\u0055\u0042\u004c\u0049\u0043 \u004b\u0045Y\u002d\u002d\u002d\u002d\u002d\n";
func (_cgc *LicenseKey )ToString ()string {if _cgc ._fdf {return "M\u0065t\u0065\u0072\u0065\u0064\u0020\u0073\u0075\u0062s\u0063\u0072\u0069\u0070ti\u006f\u006e";};_ead :=_eb .Sprintf ("\u004ci\u0063e\u006e\u0073\u0065\u0020\u0049\u0064\u003a\u0020\u0025\u0073\u000a",_cgc .LicenseId );
_ead +=_eb .Sprintf ("\u0043\u0075s\u0074\u006f\u006de\u0072\u0020\u0049\u0064\u003a\u0020\u0025\u0073\u000a",_cgc .CustomerId );_ead +=_eb .Sprintf ("\u0043u\u0073t\u006f\u006d\u0065\u0072\u0020N\u0061\u006de\u003a\u0020\u0025\u0073\u000a",_cgc .CustomerName );
_ead +=_eb .Sprintf ("\u0054i\u0065\u0072\u003a\u0020\u0025\u0073\n",_cgc .Tier );_ead +=_eb .Sprintf ("\u0043r\u0065a\u0074\u0065\u0064\u0020\u0041\u0074\u003a\u0020\u0025\u0073\u000a",_dfe .UtcTimeFormat (_cgc .CreatedAt ));if _cgc .ExpiresAt ==nil {_ead +="\u0045x\u0070i\u0072\u0065\u0073\u0020\u0041t\u003a\u0020N\u0065\u0076\u0065\u0072\u000a";
}else {_ead +=_eb .Sprintf ("\u0045x\u0070i\u0072\u0065\u0073\u0020\u0041\u0074\u003a\u0020\u0025\u0073\u000a",_dfe .UtcTimeFormat (*_cgc .ExpiresAt ));};_ead +=_eb .Sprintf ("\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u003a\u0020\u0025\u0073\u0020<\u0025\u0073\u003e\u000a",_cgc .CreatorName ,_cgc .CreatorEmail );
return _ead ;};type LicenseKey struct{LicenseId string `json:"license_id"`;CustomerId string `json:"customer_id"`;CustomerName string `json:"customer_name"`;Tier string `json:"tier"`;CreatedAt _cg .Time `json:"-"`;CreatedAtInt int64 `json:"created_at"`;
ExpiresAt *_cg .Time `json:"-"`;ExpiresAtInt int64 `json:"expires_at"`;CreatedBy string `json:"created_by"`;CreatorName string `json:"creator_name"`;CreatorEmail string `json:"creator_email"`;UniPDF bool `json:"unipdf"`;UniOffice bool `json:"unioffice"`;
UniHTML bool `json:"unihtml"`;Trial bool `json:"trial"`;_fdf bool ;_acd string ;};var _bdf =_cg .Date (2010,1,1,0,0,0,0,_cg .UTC );var _aeg stateLoader =defaultStateHolder {};type meteredUsageCheckinForm struct{Instance string `json:"inst"`;Next string `json:"next"`;
UsageNumber int `json:"usage_number"`;NumFailed int64 `json:"num_failed"`;Hostname string `json:"hostname"`;LocalIP string `json:"local_ip"`;MacAddress string `json:"mac_address"`;Package string `json:"package"`;PackageVersion string `json:"package_version"`;
Usage map[string ]int `json:"u"`;};var _db =_cg .Date (2020,1,1,0,0,0,0,_cg .UTC );type defaultStateHolder struct{};func _dbdg (_ecca []byte )(_c .Reader ,error ){_cgf :=new (_cd .Buffer );_cbc :=_ee .NewWriter (_cgf );_cbc .Write (_ecca );_bgde :=_cbc .Close ();
if _bgde !=nil {return nil ,_bgde ;};return _cgf ,nil ;};type reportState struct{Instance string `json:"inst"`;Next string `json:"n"`;Docs int64 `json:"d"`;NumErrors int64 `json:"e"`;LimitDocs bool `json:"ld"`;RemainingDocs int64 `json:"rd"`;LastReported _cg .Time `json:"lr"`;
LastWritten _cg .Time `json:"lw"`;Usage map[string ]int `json:"u"`;};const _addc ="\u0055\u004e\u0049\u0050DF\u005f\u004c\u0049\u0043\u0045\u004e\u0053\u0045\u005f\u0050\u0041\u0054\u0048";func SetLicenseKey (content string ,customerName string )error {_dgef ,_dbg :=_ac (content );
if _dbg !=nil {_dfe .Log .Error ("\u004c\u0069c\u0065\u006e\u0073\u0065\u0020\u0063\u006f\u0064\u0065\u0020\u0064\u0065\u0063\u006f\u0064\u0065\u0020\u0065\u0072\u0072\u006f\u0072: \u0025\u0076",_dbg );return _dbg ;};if !_df .EqualFold (_dgef .CustomerName ,customerName ){_dfe .Log .Error ("L\u0069ce\u006es\u0065 \u0063\u006f\u0064\u0065\u0020i\u0073\u0073\u0075e\u0020\u002d\u0020\u0043\u0075s\u0074\u006f\u006de\u0072\u0020\u006e\u0061\u006d\u0065\u0020\u006d\u0069\u0073\u006da\u0074\u0063\u0068, e\u0078\u0070\u0065\u0063\u0074\u0065d\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u0062\u0075\u0074\u0020\u0067o\u0074 \u0027\u0025\u0073\u0027",customerName ,_dgef .CustomerName );
return _eb .Errorf ("\u0063\u0075\u0073\u0074\u006fm\u0065\u0072\u0020\u006e\u0061\u006d\u0065\u0020\u006d\u0069\u0073\u006d\u0061t\u0063\u0068\u002c\u0020\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u0062\u0075\u0074\u0020\u0067\u006f\u0074\u0020\u0027\u0025\u0073'",customerName ,_dgef .CustomerName );
};_dbg =_dgef .Validate ();if _dbg !=nil {_dfe .Log .Error ("\u004c\u0069\u0063\u0065\u006e\u0073e\u0020\u0063\u006f\u0064\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074i\u006f\u006e\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_dbg );
return _dbg ;};_cgbd =&_dgef ;return nil ;};func SetMeteredKey (apiKey string )error {if len (apiKey )==0{_dfe .Log .Error ("\u004d\u0065\u0074\u0065\u0072e\u0064\u0020\u004c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u0041\u0050\u0049 \u004b\u0065\u0079\u0020\u006d\u0075\u0073\u0074\u0020\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0065\u006d\u0070\u0074\u0079");
_dfe .Log .Error ("\u002d\u0020\u0047\u0072\u0061\u0062\u0020\u006f\u006e\u0065\u0020\u0069\u006e\u0020\u0074h\u0065\u0020\u0046\u0072\u0065\u0065\u0020\u0054\u0069\u0065\u0072\u0020\u0061t\u0020\u0068\u0074\u0074\u0070\u0073\u003a\u002f\u002f\u0063\u006c\u006fud\u002e\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _eb .Errorf ("\u006de\u0074\u0065\u0072e\u0064\u0020\u006ci\u0063en\u0073\u0065\u0020\u0061\u0070\u0069\u0020k\u0065\u0079\u0020\u006d\u0075\u0073\u0074\u0020\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0065\u006d\u0070\u0074\u0079\u003a\u0020\u0063\u0072\u0065\u0061\u0074\u0065 o\u006ee\u0020\u0061\u0074\u0020\u0068\u0074t\u0070\u0073\u003a\u002f\u002fc\u006c\u006f\u0075\u0064\u002e\u0075\u006e\u0069\u0064\u006f\u0063.\u0069\u006f");
};if _cgbd !=nil &&(_cgbd ._fdf ||_cgbd .Tier !=LicenseTierUnlicensed ){_dfe .Log .Error ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0043\u0061\u006e\u006eo\u0074 \u0073\u0065\u0074\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u006b\u0065\u0079\u0020\u0074\u0077\u0069c\u0065\u0020\u002d\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u006a\u0075\u0073\u0074\u0020\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0069z\u0065\u0020\u006f\u006e\u0063\u0065");
return _fda .New ("\u006c\u0069\u0063en\u0073\u0065\u0020\u006b\u0065\u0079\u0020\u0061\u006c\u0072\u0065\u0061\u0064\u0079\u0020\u0073\u0065\u0074");};_abec :=_ccb ();_abec ._add =apiKey ;_cga ,_caa :=_abec .getStatus ();if _caa !=nil {return _caa ;};
if !_cga .Valid {return _fda .New ("\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0076\u0061\u006c\u0069\u0064");};_adg :=&LicenseKey {_fdf :true ,_acd :apiKey };_cgbd =_adg ;return nil ;};func _gee ()(_d .IP ,error ){_dda ,_befc :=_d .Dial ("\u0075\u0064\u0070","\u0038\u002e\u0038\u002e\u0038\u002e\u0038\u003a\u0038\u0030");
if _befc !=nil {return nil ,_befc ;};defer _dda .Close ();_ecbg :=_dda .LocalAddr ().(*_d .UDPAddr );return _ecbg .IP ,nil ;};var _aa =&_g .Mutex {};func _dfdg (_cec *_ca .Response )(_c .ReadCloser ,error ){var _ege error ;var _cbcc _c .ReadCloser ;switch _df .ToLower (_cec .Header .Get ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067")){case "\u0067\u007a\u0069\u0070":_cbcc ,_ege =_ee .NewReader (_cec .Body );
if _ege !=nil {return _cbcc ,_ege ;};defer _cbcc .Close ();default:_cbcc =_cec .Body ;};return _cbcc ,nil ;};type meteredStatusForm struct{};type meteredStatusResp struct{Valid bool `json:"valid"`;OrgCredits int64 `json:"org_credits"`;OrgUsed int64 `json:"org_used"`;
OrgRemaining int64 `json:"org_remaining"`;};func _gfb ()string {_badd :=_ed .Getenv ("\u0048\u004f\u004d\u0045");if len (_badd )==0{_badd ,_ =_ed .UserHomeDir ();};return _badd ;};func _ea (_ce string ,_cc string )([]byte ,error ){var (_cca int ;_ggg string ;
);for _ ,_ggg =range []string {"\u000a\u002b\u000a","\u000d\u000a\u002b\r\u000a","\u0020\u002b\u0020"}{if _cca =_df .Index (_cc ,_ggg );_cca !=-1{break ;};};if _cca ==-1{return nil ,_eb .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u002c \u0073i\u0067n\u0061t\u0075\u0072\u0065\u0020\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u006f\u0072");
};_eab :=_cc [:_cca ];_bff :=_cca +len (_ggg );_gd :=_cc [_bff :];if _eab ==""||_gd ==""{return nil ,_eb .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u0069n\u0070\u0075\u0074,\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0069\u0067\u0069n\u0061\u006c \u006f\u0072\u0020\u0073\u0069\u0067n\u0061\u0074u\u0072\u0065");
};_edf ,_cb :=_cdf .StdEncoding .DecodeString (_eab );if _cb !=nil {return nil ,_eb .Errorf ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u006f\u0072\u0069\u0067\u0069\u006ea\u006c");};_abe ,_cb :=_cdf .StdEncoding .DecodeString (_gd );
if _cb !=nil {return nil ,_eb .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065");};_bdg ,_ :=_eeg .Decode ([]byte (_ce ));if _bdg ==nil {return nil ,_eb .Errorf ("\u0050\u0075\u0062\u004b\u0065\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};_ad ,_cb :=_gb .ParsePKIXPublicKey (_bdg .Bytes );if _cb !=nil {return nil ,_cb ;};_cf :=_ad .(*_gf .PublicKey );if _cf ==nil {return nil ,_eb .Errorf ("\u0050u\u0062\u004b\u0065\u0079\u0020\u0063\u006f\u006e\u0076\u0065\u0072s\u0069\u006f\u006e\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};_dde :=_bf .New ();_dde .Write (_edf );_ff :=_dde .Sum (nil );_cb =_gf .VerifyPKCS1v15 (_cf ,_e .SHA512 ,_ff ,_abe );if _cb !=nil {return nil ,_cb ;};return _edf ,nil ;};func (_gfa *LicenseKey )isExpired ()bool {return _gfa .getExpiryDateToCompare ().After (*_gfa .ExpiresAt )};
type MeteredStatus struct{OK bool ;Credits int64 ;Used int64 ;};const (_fa ="\u002d\u002d\u002d--\u0042\u0045\u0047\u0049\u004e\u0020\u0055\u004e\u0049D\u004fC\u0020L\u0049C\u0045\u004e\u0053\u0045\u0020\u004b\u0045\u0059\u002d\u002d\u002d\u002d\u002d";
_bg ="\u002d\u002d\u002d\u002d\u002d\u0045\u004e\u0044\u0020\u0055\u004e\u0049\u0044\u004f\u0043 \u004cI\u0043\u0045\u004e\u0053\u0045\u0020\u004b\u0045\u0059\u002d\u002d\u002d\u002d\u002d";);func init (){_feg :=_ed .Getenv (_addc );_gda :=_ed .Getenv (_fddd );
if len (_feg )==0||len (_gda )==0{return ;};_aca ,_dfd :=_fd .ReadFile (_feg );if _dfd !=nil {_dfe .Log .Error ("\u0055\u006eab\u006c\u0065\u0020t\u006f\u0020\u0072\u0065ad \u006cic\u0065\u006e\u0073\u0065\u0020\u0063\u006fde\u0020\u0066\u0069\u006c\u0065\u003a\u0020%\u0076",_dfd );
return ;};_dfd =SetLicenseKey (string (_aca ),_gda );if _dfd !=nil {_dfe .Log .Error ("\u0055\u006e\u0061b\u006c\u0065\u0020\u0074o\u0020\u006c\u006f\u0061\u0064\u0020\u006ci\u0063\u0065\u006e\u0073\u0065\u0020\u0063\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_dfd );
return ;};};func GetLicenseKey ()*LicenseKey {if _cgbd ==nil {return nil ;};_aff :=*_cgbd ;return &_aff ;};func (_dbc defaultStateHolder )loadState (_cae string )(reportState ,error ){_aegd :=_gfb ();if len (_aegd )==0{return reportState {},_fda .New ("\u0068\u006fm\u0065\u0020\u0064i\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");
};_caea :=_b .Join (_aegd ,"\u002eu\u006e\u0069\u0064\u006f\u0063");_cgb :=_ed .MkdirAll (_caea ,0777);if _cgb !=nil {return reportState {},_cgb ;};if len (_cae )< 20{return reportState {},_fda .New ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006b\u0065\u0079");
};_bbe :=[]byte (_cae );_edc :=_bf .Sum512_256 (_bbe [:20]);_ef :=_dfc .EncodeToString (_edc [:]);_bca :=_b .Join (_caea ,_ef );_dfcd ,_cgb :=_fd .ReadFile (_bca );if _cgb !=nil {if _ed .IsNotExist (_cgb ){return reportState {},nil ;};_dfe .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cgb );
return reportState {},_fda .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061");};const _ecb ="\u0068\u00619\u004e\u004b\u0038]\u0052\u0062\u004c\u002a\u006d\u0034\u004c\u004b\u0057";_dfcd ,_cgb =_aaf ([]byte (_ecb ),_dfcd );if _cgb !=nil {return reportState {},_cgb ;
};var _cbd reportState ;_cgb =_gg .Unmarshal (_dfcd ,&_cbd );if _cgb !=nil {_dfe .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0076",_cgb );return reportState {},_fda .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061");
};return _cbd ,nil ;};func (_eabb *LicenseKey )IsLicensed ()bool {return _eabb .Tier !=LicenseTierUnlicensed ||_eabb ._fdf };func (_ceg *LicenseKey )TypeToString ()string {if _ceg ._fdf {return "M\u0065t\u0065\u0072\u0065\u0064\u0020\u0073\u0075\u0062s\u0063\u0072\u0069\u0070ti\u006f\u006e";
};if _ceg .Tier ==LicenseTierUnlicensed {return "\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";};if _ceg .Tier ==LicenseTierCommunity {return "\u0041\u0047PL\u0076\u0033\u0020O\u0070\u0065\u006e\u0020Sou\u0072ce\u0020\u0043\u006f\u006d\u006d\u0075\u006eit\u0079\u0020\u004c\u0069\u0063\u0065\u006es\u0065";
};if _ceg .Tier ==LicenseTierIndividual ||_ceg .Tier =="\u0069\u006e\u0064i\u0065"{return "\u0043\u006f\u006dm\u0065\u0072\u0063\u0069a\u006c\u0020\u004c\u0069\u0063\u0065\u006es\u0065\u0020\u002d\u0020\u0049\u006e\u0064\u0069\u0076\u0069\u0064\u0075\u0061\u006c";
};return "\u0043\u006fm\u006d\u0065\u0072\u0063\u0069\u0061\u006c\u0020\u004c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u002d\u0020\u0042\u0075\u0073\u0069ne\u0073\u0073";};const (LicenseTierUnlicensed ="\u0075\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";
LicenseTierCommunity ="\u0063o\u006d\u006d\u0075\u006e\u0069\u0074y";LicenseTierIndividual ="\u0069\u006e\u0064\u0069\u0076\u0069\u0064\u0075\u0061\u006c";LicenseTierBusiness ="\u0062\u0075\u0073\u0069\u006e\u0065\u0073\u0073";);var _ccd =_cg .Date (2019,6,6,0,0,0,0,_cg .UTC );
func GetMeteredState ()(MeteredStatus ,error ){if _cgbd ==nil {return MeteredStatus {},_fda .New ("\u006c\u0069\u0063\u0065ns\u0065\u0020\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");};if !_cgbd ._fdf ||len (_cgbd ._acd )==0{return MeteredStatus {},_fda .New ("\u0061p\u0069 \u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");
};_bbb ,_ggcc :=_aeg .loadState (_cgbd ._acd );if _ggcc !=nil {_dfe .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ggcc );return MeteredStatus {},_ggcc ;};if _bbb .Docs > 0{_acc :=_gea ("","",true );if _acc !=nil {return MeteredStatus {},_acc ;
};};_aa .Lock ();defer _aa .Unlock ();_ffa :=_ccb ();_ffa ._add =_cgbd ._acd ;_ccg ,_ggcc :=_ffa .getStatus ();if _ggcc !=nil {return MeteredStatus {},_ggcc ;};if !_ccg .Valid {return MeteredStatus {},_fda .New ("\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0076\u0061\u006c\u0069\u0064");
};_cce :=MeteredStatus {OK :true ,Credits :_ccg .OrgCredits ,Used :_ccg .OrgUsed };return _cce ,nil ;};