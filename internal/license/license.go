//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package license ;import (_gd "bytes";_e "compress/gzip";_b "crypto";_ace "crypto/aes";_d "crypto/cipher";_gb "crypto/hmac";_edf "crypto/rand";_db "crypto/rsa";_acd "crypto/sha256";_fa "crypto/sha512";_bf "crypto/x509";_ad "encoding/base64";_ac "encoding/hex";
_ffd "encoding/json";_ff "encoding/pem";_a "errors";_gag "fmt";_gcg "github.com/unidoc/unipdf/v3/common";_gc "io";_bg "io/ioutil";_eb "net";_cc "net/http";_ga "os";_ed "path/filepath";_c "sort";_aa "strings";_f "sync";_ccf "time";);var _dfc =MakeUnlicensedKey ();
type reportState struct{Instance string `json:"inst"`;Next string `json:"n"`;Docs int64 `json:"d"`;NumErrors int64 `json:"e"`;LimitDocs bool `json:"ld"`;RemainingDocs int64 `json:"rd"`;LastReported _ccf .Time `json:"lr"`;LastWritten _ccf .Time `json:"lw"`;
Usage map[string ]int `json:"u"`;};func GetMeteredState ()(MeteredStatus ,error ){if _dfc ==nil {return MeteredStatus {},_a .New ("\u006c\u0069\u0063\u0065ns\u0065\u0020\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");};if !_dfc ._gab ||len (_dfc ._abc )==0{return MeteredStatus {},_a .New ("\u0061p\u0069 \u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");
};_dcc ,_ggc :=_cdg .loadState (_dfc ._abc );if _ggc !=nil {_gcg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ggc );return MeteredStatus {},_ggc ;};if _dcc .Docs > 0{_abe :=_eed ("","",true );if _abe !=nil {return MeteredStatus {},_abe ;
};};_dab .Lock ();defer _dab .Unlock ();_bfgg :=_gdbe ();_bfgg ._gg =_dfc ._abc ;_cfe ,_ggc :=_bfgg .getStatus ();if _ggc !=nil {return MeteredStatus {},_ggc ;};if !_cfe .Valid {return MeteredStatus {},_a .New ("\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0076\u0061\u006c\u0069\u0064");
};_gba :=MeteredStatus {OK :true ,Credits :_cfe .OrgCredits ,Used :_cfe .OrgUsed };return _gba ,nil ;};func _bc (_acg string ,_be []byte )(string ,error ){_cab ,_ :=_ff .Decode ([]byte (_acg ));if _cab ==nil {return "",_gag .Errorf ("\u0050\u0072\u0069\u0076\u004b\u0065\u0079\u0020\u0066a\u0069\u006c\u0065\u0064");
};_ffc ,_bb :=_bf .ParsePKCS1PrivateKey (_cab .Bytes );if _bb !=nil {return "",_bb ;};_da :=_fa .New ();_da .Write (_be );_faf :=_da .Sum (nil );_ae ,_bb :=_db .SignPKCS1v15 (_edf .Reader ,_ffc ,_b .SHA512 ,_faf );if _bb !=nil {return "",_bb ;};_cd :=_ad .StdEncoding .EncodeToString (_be );
_cd +="\u000a\u002b\u000a";_cd +=_ad .StdEncoding .EncodeToString (_ae );return _cd ,nil ;};const (LicenseTierUnlicensed ="\u0075\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";LicenseTierCommunity ="\u0063o\u006d\u006d\u0075\u006e\u0069\u0074y";
LicenseTierIndividual ="\u0069\u006e\u0064\u0069\u0076\u0069\u0064\u0075\u0061\u006c";LicenseTierBusiness ="\u0062\u0075\u0073\u0069\u006e\u0065\u0073\u0073";);func MakeUnlicensedKey ()*LicenseKey {_fcb :=LicenseKey {};_fcb .CustomerName ="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";
_fcb .Tier =LicenseTierUnlicensed ;_fcb .CreatedAt =_ccf .Now ().UTC ();_fcb .CreatedAtInt =_fcb .CreatedAt .Unix ();return &_fcb ;};func (_cae *meteredClient )checkinUsage (_bee meteredUsageCheckinForm )(meteredUsageCheckinResp ,error ){_bee .Package ="\u0075\u006e\u0069\u0070\u0064\u0066";
_bee .PackageVersion =_gcg .Version ;var _de meteredUsageCheckinResp ;_ced :=_cae ._ebg +"\u002f\u006d\u0065\u0074er\u0065\u0064\u002f\u0075\u0073\u0061\u0067\u0065\u005f\u0063\u0068\u0065\u0063\u006bi\u006e";_fabg ,_agd :=_ffd .Marshal (_bee );if _agd !=nil {return _de ,_agd ;
};_fd ,_agd :=_fac (_fabg );if _agd !=nil {return _de ,_agd ;};_ddd ,_agd :=_cc .NewRequest ("\u0050\u004f\u0053\u0054",_ced ,_fd );if _agd !=nil {return _de ,_agd ;};_ddd .Header .Add ("\u0043\u006f\u006et\u0065\u006e\u0074\u002d\u0054\u0079\u0070\u0065","\u0061\u0070p\u006c\u0069\u0063a\u0074\u0069\u006f\u006e\u002f\u006a\u0073\u006f\u006e");
_ddd .Header .Add ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");_ddd .Header .Add ("\u0041c\u0063e\u0070\u0074\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");
_ddd .Header .Add ("\u0058-\u0041\u0050\u0049\u002d\u004b\u0045Y",_cae ._gg );_ebd ,_agd :=_cae ._abf .Do (_ddd );if _agd !=nil {return _de ,_agd ;};defer _ebd .Body .Close ();if _ebd .StatusCode !=200{_caeg ,_dbf :=_agg (_ebd );if _dbf !=nil {return _de ,_dbf ;
};_dbf =_ffd .Unmarshal (_caeg ,&_de );if _dbf !=nil {return _de ,_dbf ;};return _de ,_gag .Errorf ("\u0066\u0061i\u006c\u0065\u0064\u0020t\u006f\u0020c\u0068\u0065\u0063\u006b\u0069\u006e\u002c\u0020s\u0074\u0061\u0074\u0075\u0073\u0020\u0063\u006f\u0064\u0065\u0020\u0069s\u003a\u0020\u0025\u0064",_ebd .StatusCode );
};_dge :=_ebd .Header .Get ("\u0058\u002d\u0055\u0043\u002d\u0053\u0069\u0067\u006ea\u0074\u0075\u0072\u0065");_bgff :=_feea (_bee .MacAddress ,string (_fabg ));if _bgff !=_dge {_gcg .Log .Error ("I\u006e\u0076\u0061l\u0069\u0064\u0020\u0072\u0065\u0073\u0070\u006f\u006e\u0073\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u002c\u0020\u0073\u0065t\u0020\u0074\u0068e\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u0073\u0065\u0072\u0076e\u0072\u0020\u0074\u006f \u0068\u0074\u0074\u0070s\u003a\u002f\u002f\u0063\u006c\u006f\u0075\u0064\u002e\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069o\u002f\u0061\u0070\u0069");
return _de ,_a .New ("\u0066\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u0063\u0068\u0065\u0063\u006b\u0069\u006e\u002c\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0065\u0072\u0076\u0065\u0072 \u0072\u0065\u0073\u0070\u006f\u006e\u0073\u0065");
};_daf ,_agd :=_agg (_ebd );if _agd !=nil {return _de ,_agd ;};_agd =_ffd .Unmarshal (_daf ,&_de );if _agd !=nil {return _de ,_agd ;};return _de ,nil ;};var _cdg stateLoader =defaultStateHolder {};func (_ebc *LicenseKey )TypeToString ()string {if _ebc ._gab {return "M\u0065t\u0065\u0072\u0065\u0064\u0020\u0073\u0075\u0062s\u0063\u0072\u0069\u0070ti\u006f\u006e";
};if _ebc .Tier ==LicenseTierUnlicensed {return "\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";};if _ebc .Tier ==LicenseTierCommunity {return "\u0041\u0047PL\u0076\u0033\u0020O\u0070\u0065\u006e\u0020Sou\u0072ce\u0020\u0043\u006f\u006d\u006d\u0075\u006eit\u0079\u0020\u004c\u0069\u0063\u0065\u006es\u0065";
};if _ebc .Tier ==LicenseTierIndividual ||_ebc .Tier =="\u0069\u006e\u0064i\u0065"{return "\u0043\u006f\u006dm\u0065\u0072\u0063\u0069a\u006c\u0020\u004c\u0069\u0063\u0065\u006es\u0065\u0020\u002d\u0020\u0049\u006e\u0064\u0069\u0076\u0069\u0064\u0075\u0061\u006c";
};return "\u0043\u006fm\u006d\u0065\u0072\u0063\u0069\u0061\u006c\u0020\u004c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u002d\u0020\u0042\u0075\u0073\u0069ne\u0073\u0073";};func _agg (_edce *_cc .Response )([]byte ,error ){var _cee []byte ;_ecbe ,_bbe :=_cgc (_edce );
if _bbe !=nil {return _cee ,_bbe ;};return _bg .ReadAll (_ecbe );};type meteredStatusForm struct{};const (_ca ="\u002d\u002d\u002d--\u0042\u0045\u0047\u0049\u004e\u0020\u0055\u004e\u0049D\u004fC\u0020L\u0049C\u0045\u004e\u0053\u0045\u0020\u004b\u0045\u0059\u002d\u002d\u002d\u002d\u002d";
_bgf ="\u002d\u002d\u002d\u002d\u002d\u0045\u004e\u0044\u0020\u0055\u004e\u0049\u0044\u004f\u0043 \u004cI\u0043\u0045\u004e\u0053\u0045\u0020\u004b\u0045\u0059\u002d\u002d\u002d\u002d\u002d";);type meteredUsageCheckinResp struct{Instance string `json:"inst"`;
Next string `json:"next"`;Success bool `json:"success"`;Message string `json:"message"`;RemainingDocs int `json:"rd"`;LimitDocs bool `json:"ld"`;};func _ddf (_eef ,_efdf []byte )([]byte ,error ){_cdbd ,_fg :=_ace .NewCipher (_eef );if _fg !=nil {return nil ,_fg ;
};_ebab :=make ([]byte ,_ace .BlockSize +len (_efdf ));_bgea :=_ebab [:_ace .BlockSize ];if _ ,_bfgd :=_gc .ReadFull (_edf .Reader ,_bgea );_bfgd !=nil {return nil ,_bfgd ;};_aedd :=_d .NewCFBEncrypter (_cdbd ,_bgea );_aedd .XORKeyStream (_ebab [_ace .BlockSize :],_efdf );
_fae :=make ([]byte ,_ad .URLEncoding .EncodedLen (len (_ebab )));_ad .URLEncoding .Encode (_fae ,_ebab );return _fae ,nil ;};func (_agf defaultStateHolder )loadState (_geg string )(reportState ,error ){_eff :=_dccg ();if len (_eff )==0{return reportState {},_a .New ("\u0068\u006fm\u0065\u0020\u0064i\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");
};_cfd :=_ed .Join (_eff ,"\u002eu\u006e\u0069\u0064\u006f\u0063");_efa :=_ga .MkdirAll (_cfd ,0777);if _efa !=nil {return reportState {},_efa ;};if len (_geg )< 20{return reportState {},_a .New ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006b\u0065\u0079");
};_eaf :=[]byte (_geg );_eec :=_fa .Sum512_256 (_eaf [:20]);_abg :=_ac .EncodeToString (_eec [:]);_gec :=_ed .Join (_cfd ,_abg );_gbd ,_efa :=_bg .ReadFile (_gec );if _efa !=nil {if _ga .IsNotExist (_efa ){return reportState {},nil ;};_gcg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_efa );
return reportState {},_a .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061");};const _dcce ="\u0068\u00619\u004e\u004b\u0038]\u0052\u0062\u004c\u002a\u006d\u0034\u004c\u004b\u0057";_gbd ,_efa =_gbag ([]byte (_dcce ),_gbd );if _efa !=nil {return reportState {},_efa ;
};var _aed reportState ;_efa =_ffd .Unmarshal (_gbd ,&_aed );if _efa !=nil {_gcg .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0076",_efa );return reportState {},_a .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061");
};return _aed ,nil ;};func (_ggf *meteredClient )getStatus ()(meteredStatusResp ,error ){var _bag meteredStatusResp ;_aab :=_ggf ._ebg +"\u002fm\u0065t\u0065\u0072\u0065\u0064\u002f\u0073\u0074\u0061\u0074\u0075\u0073";var _cef meteredStatusForm ;_dgfe ,_dbc :=_ffd .Marshal (_cef );
if _dbc !=nil {return _bag ,_dbc ;};_cge ,_dbc :=_fac (_dgfe );if _dbc !=nil {return _bag ,_dbc ;};_bge ,_dbc :=_cc .NewRequest ("\u0050\u004f\u0053\u0054",_aab ,_cge );if _dbc !=nil {return _bag ,_dbc ;};_bge .Header .Add ("\u0043\u006f\u006et\u0065\u006e\u0074\u002d\u0054\u0079\u0070\u0065","\u0061\u0070p\u006c\u0069\u0063a\u0074\u0069\u006f\u006e\u002f\u006a\u0073\u006f\u006e");
_bge .Header .Add ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");_bge .Header .Add ("\u0041c\u0063e\u0070\u0074\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");
_bge .Header .Add ("\u0058-\u0041\u0050\u0049\u002d\u004b\u0045Y",_ggf ._gg );_cf ,_dbc :=_ggf ._abf .Do (_bge );if _dbc !=nil {return _bag ,_dbc ;};defer _cf .Body .Close ();if _cf .StatusCode !=200{return _bag ,_gag .Errorf ("\u0066\u0061i\u006c\u0065\u0064\u0020t\u006f\u0020c\u0068\u0065\u0063\u006b\u0069\u006e\u002c\u0020s\u0074\u0061\u0074\u0075\u0073\u0020\u0063\u006f\u0064\u0065\u0020\u0069s\u003a\u0020\u0025\u0064",_cf .StatusCode );
};_eg ,_dbc :=_agg (_cf );if _dbc !=nil {return _bag ,_dbc ;};_dbc =_ffd .Unmarshal (_eg ,&_bag );if _dbc !=nil {return _bag ,_dbc ;};return _bag ,nil ;};func SetMeteredKeyPersistentCache (val bool ){_dfc ._dd =val };var _abce map[string ]int ;var _dab =&_f .Mutex {};
func _dgf (_add string ,_fe string ,_ce string )(string ,error ){_bba :=_aa .Index (_ce ,_add );if _bba ==-1{return "",_gag .Errorf ("\u0068\u0065a\u0064\u0065\u0072 \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_cbg :=_aa .Index (_ce ,_fe );
if _cbg ==-1{return "",_gag .Errorf ("\u0066\u006fo\u0074\u0065\u0072 \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_cde :=_bba +len (_add )+1;return _ce [_cde :_cbg -1],nil ;};type meteredClient struct{_ebg string ;_gg string ;_abf *_cc .Client ;
};func SetMeteredKey (apiKey string )error {if len (apiKey )==0{_gcg .Log .Error ("\u004d\u0065\u0074\u0065\u0072e\u0064\u0020\u004c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u0041\u0050\u0049 \u004b\u0065\u0079\u0020\u006d\u0075\u0073\u0074\u0020\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0065\u006d\u0070\u0074\u0079");
_gcg .Log .Error ("\u002d\u0020\u0047\u0072\u0061\u0062\u0020\u006f\u006e\u0065\u0020\u0069\u006e\u0020\u0074h\u0065\u0020\u0046\u0072\u0065\u0065\u0020\u0054\u0069\u0065\u0072\u0020\u0061t\u0020\u0068\u0074\u0074\u0070\u0073\u003a\u002f\u002f\u0063\u006c\u006fud\u002e\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _gag .Errorf ("\u006de\u0074\u0065\u0072e\u0064\u0020\u006ci\u0063en\u0073\u0065\u0020\u0061\u0070\u0069\u0020k\u0065\u0079\u0020\u006d\u0075\u0073\u0074\u0020\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0065\u006d\u0070\u0074\u0079\u003a\u0020\u0063\u0072\u0065\u0061\u0074\u0065 o\u006ee\u0020\u0061\u0074\u0020\u0068\u0074t\u0070\u0073\u003a\u002f\u002fc\u006c\u006f\u0075\u0064\u002e\u0075\u006e\u0069\u0064\u006f\u0063.\u0069\u006f");
};if _dfc !=nil &&(_dfc ._gab ||_dfc .Tier !=LicenseTierUnlicensed ){_gcg .Log .Error ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0043\u0061\u006e\u006eo\u0074 \u0073\u0065\u0074\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u006b\u0065\u0079\u0020\u0074\u0077\u0069c\u0065\u0020\u002d\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u006a\u0075\u0073\u0074\u0020\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0069z\u0065\u0020\u006f\u006e\u0063\u0065");
return _a .New ("\u006c\u0069\u0063en\u0073\u0065\u0020\u006b\u0065\u0079\u0020\u0061\u006c\u0072\u0065\u0061\u0064\u0079\u0020\u0073\u0065\u0074");};_cfb :=_gdbe ();_cfb ._gg =apiKey ;_age ,_cff :=_cfb .getStatus ();if _cff !=nil {return _cff ;};if !_age .Valid {return _a .New ("\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0076\u0061\u006c\u0069\u0064");
};_eea :=&LicenseKey {_gab :true ,_abc :apiKey ,_dd :true };_dfc =_eea ;return nil ;};func _cgc (_fag *_cc .Response )(_gc .ReadCloser ,error ){var _eeb error ;var _gcfg _gc .ReadCloser ;switch _aa .ToLower (_fag .Header .Get ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067")){case "\u0067\u007a\u0069\u0070":_gcfg ,_eeb =_e .NewReader (_fag .Body );
if _eeb !=nil {return _gcfg ,_eeb ;};defer _gcfg .Close ();default:_gcfg =_fag .Body ;};return _gcfg ,nil ;};type MeteredStatus struct{OK bool ;Credits int64 ;Used int64 ;};func _eed (_cffb string ,_dbe string ,_dde bool )error {if _dfc ==nil {return _a .New ("\u006e\u006f\u0020\u006c\u0069\u0063\u0065\u006e\u0073e\u0020\u006b\u0065\u0079");
};if !_dfc ._gab ||len (_dfc ._abc )==0{return nil ;};if len (_cffb )==0&&!_dde {return _a .New ("\u0064\u006f\u0063\u004b\u0065\u0079\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");};_dab .Lock ();defer _dab .Unlock ();if _ccg ==nil {_ccg =map[string ]struct{}{};
};if _abce ==nil {_abce =map[string ]int {};};_aae :=0;_ ,_fba :=_ccg [_cffb ];if !_fba {_ccg [_cffb ]=struct{}{};_aae ++;};if _aae ==0{return nil ;};_abce [_dbe ]++;_adbf :=_ccf .Now ();_dba ,_dac :=_cdg .loadState (_dfc ._abc );if _dac !=nil {_gcg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dac );
return _dac ;};if _dba .Usage ==nil {_dba .Usage =map[string ]int {};};for _gad ,_bgb :=range _abce {_dba .Usage [_gad ]+=_bgb ;};_abce =nil ;const _cba =24*_ccf .Hour ;const _cdb =3*24*_ccf .Hour ;if len (_dba .Instance )==0||_adbf .Sub (_dba .LastReported )> _cba ||(_dba .LimitDocs &&_dba .RemainingDocs <=_dba .Docs +int64 (_aae ))||_dde {_edg ,_bdc :=_ga .Hostname ();
if _bdc !=nil {return _bdc ;};_abcd :=_dba .Docs ;_abb ,_daad ,_bdc :=_dabd ();if _bdc !=nil {_gcg .Log .Debug ("\u0055\u006e\u0061b\u006c\u0065\u0020\u0074o\u0020\u0067\u0065\u0074\u0020\u006c\u006fc\u0061\u006c\u0020\u0061\u0064\u0064\u0072\u0065\u0073\u0073\u003a\u0020\u0025\u0073",_bdc .Error ());
_abb =append (_abb ,"\u0069n\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020n\u006ft\u0020a\u0076\u0061\u0069\u006c\u0061\u0062\u006ce");_daad =append (_daad ,"\u0069n\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020n\u006ft\u0020a\u0076\u0061\u0069\u006c\u0061\u0062\u006ce");
}else {_c .Strings (_daad );_c .Strings (_abb );_effc ,_bcg :=_aec ();if _bcg !=nil {return _bcg ;};_cda :=false ;for _ ,_eafe :=range _daad {if _eafe ==_effc .String (){_cda =true ;};};if !_cda {_daad =append (_daad ,_effc .String ());};};_ffg :=_gdbe ();
_ffg ._gg =_dfc ._abc ;_abcd +=int64 (_aae );_fdc :=meteredUsageCheckinForm {Instance :_dba .Instance ,Next :_dba .Next ,UsageNumber :int (_abcd ),NumFailed :_dba .NumErrors ,Hostname :_edg ,LocalIP :_aa .Join (_daad ,"\u002c\u0020"),MacAddress :_aa .Join (_abb ,"\u002c\u0020"),Package :"\u0075\u006e\u0069\u0070\u0064\u0066",PackageVersion :_gcg .Version ,Usage :_dba .Usage ,IsPersistentCache :_dfc ._dd ,Timestamp :_adbf .Unix ()};
if len (_abb )==0{_fdc .MacAddress ="\u006e\u006f\u006e\u0065";};_dcg :=int64 (0);_eba :=_dba .NumErrors ;_ddb :=_adbf ;_bbae :=0;_fda :=_dba .LimitDocs ;_dgg ,_bdc :=_ffg .checkinUsage (_fdc );if _bdc !=nil {if _adbf .Sub (_dba .LastReported )> _cdb {if !_dgg .Success {return _a .New (_dgg .Message );
};return _a .New ("\u0074\u006f\u006f\u0020\u006c\u006f\u006e\u0067\u0020\u0073\u0069\u006e\u0063\u0065\u0020\u006c\u0061\u0073\u0074\u0020\u0073\u0075\u0063\u0063e\u0073\u0073\u0066\u0075\u006c \u0063\u0068e\u0063\u006b\u0069\u006e");};_dcg =_abcd ;_eba ++;
_ddb =_dba .LastReported ;}else {_fda =_dgg .LimitDocs ;_bbae =_dgg .RemainingDocs ;_eba =0;};if len (_dgg .Instance )==0{_dgg .Instance =_fdc .Instance ;};if len (_dgg .Next )==0{_dgg .Next =_fdc .Next ;};_bdc =_cdg .updateState (_ffg ._gg ,_dgg .Instance ,_dgg .Next ,int (_dcg ),_fda ,_bbae ,int (_eba ),_ddb ,nil );
if _bdc !=nil {return _bdc ;};if !_dgg .Success {return _gag .Errorf ("\u0065r\u0072\u006f\u0072\u003a\u0020\u0025s",_dgg .Message );};}else {_dac =_cdg .updateState (_dfc ._abc ,_dba .Instance ,_dba .Next ,int (_dba .Docs )+_aae ,_dba .LimitDocs ,int (_dba .RemainingDocs ),int (_dba .NumErrors ),_dba .LastReported ,_dba .Usage );
if _dac !=nil {return _dac ;};};return nil ;};var _gaa =_ccf .Date (2019,6,6,0,0,0,0,_ccf .UTC );func TrackUse (useKey string ){if _dfc ==nil {return ;};if !_dfc ._gab ||len (_dfc ._abc )==0{return ;};if len (useKey )==0{return ;};_dab .Lock ();defer _dab .Unlock ();
if _abce ==nil {_abce =map[string ]int {};};_abce [useKey ]++;};var _faff =_ccf .Date (2020,1,1,0,0,0,0,_ccf .UTC );func _acf (_gf string )(LicenseKey ,error ){var _ab LicenseKey ;_gcd ,_ccb :=_dgf (_ca ,_bgf ,_gf );if _ccb !=nil {return _ab ,_ccb ;};_gde ,_ccb :=_cg (_bfdd ,_gcd );
if _ccb !=nil {return _ab ,_ccb ;};_ccb =_ffd .Unmarshal (_gde ,&_ab );if _ccb !=nil {return _ab ,_ccb ;};_ab .CreatedAt =_ccf .Unix (_ab .CreatedAtInt ,0);if _ab .ExpiresAtInt > 0{_ag :=_ccf .Unix (_ab .ExpiresAtInt ,0);_ab .ExpiresAt =&_ag ;};return _ab ,nil ;
};func GetLicenseKey ()*LicenseKey {if _dfc ==nil {return nil ;};_aeg :=*_dfc ;return &_aeg ;};func _dccg ()string {_bff :=_ga .Getenv ("\u0048\u004f\u004d\u0045");if len (_bff )==0{_bff ,_ =_ga .UserHomeDir ();};return _bff ;};func Track (docKey string ,useKey string )error {return _eed (docKey ,useKey ,!_dfc ._dd )};
func _gdbe ()*meteredClient {_bfc :=meteredClient {_ebg :"h\u0074\u0074\u0070\u0073\u003a\u002f/\u0063\u006c\u006f\u0075\u0064\u002e\u0075\u006e\u0069d\u006f\u0063\u002ei\u006f/\u0061\u0070\u0069",_abf :&_cc .Client {Timeout :30*_ccf .Second }};if _aag :=_ga .Getenv ("\u0055N\u0049\u0044\u004f\u0043_\u004c\u0049\u0043\u0045\u004eS\u0045_\u0053E\u0052\u0056\u0045\u0052\u005f\u0055\u0052L");
_aa .HasPrefix (_aag ,"\u0068\u0074\u0074\u0070"){_bfc ._ebg =_aag ;};return &_bfc ;};func _aec ()(_eb .IP ,error ){_ege ,_egeg :=_eb .Dial ("\u0075\u0064\u0070","\u0038\u002e\u0038\u002e\u0038\u002e\u0038\u003a\u0038\u0030");if _egeg !=nil {return nil ,_egeg ;
};defer _ege .Close ();_dec :=_ege .LocalAddr ().(*_eb .UDPAddr );return _dec .IP ,nil ;};type stateLoader interface{loadState (_ef string )(reportState ,error );updateState (_cdf ,_cgd ,_acda string ,_ggg int ,_aef bool ,_eae int ,_aca int ,_bbg _ccf .Time ,_abfa map[string ]int )error ;
};func _fac (_befd []byte )(_gc .Reader ,error ){_efd :=new (_gd .Buffer );_bcf :=_e .NewWriter (_efd );_bcf .Write (_befd );_fdf :=_bcf .Close ();if _fdf !=nil {return nil ,_fdf ;};return _efd ,nil ;};func _cg (_edc string ,_ebf string )([]byte ,error ){var (_bfd int ;
_bd string ;);for _ ,_bd =range []string {"\u000a\u002b\u000a","\u000d\u000a\u002b\r\u000a","\u0020\u002b\u0020"}{if _bfd =_aa .Index (_ebf ,_bd );_bfd !=-1{break ;};};if _bfd ==-1{return nil ,_gag .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u002c \u0073i\u0067n\u0061t\u0075\u0072\u0065\u0020\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u006f\u0072");
};_ge :=_ebf [:_bfd ];_cb :=_bfd +len (_bd );_fb :=_ebf [_cb :];if _ge ==""||_fb ==""{return nil ,_gag .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u0069n\u0070\u0075\u0074,\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0069\u0067\u0069n\u0061\u006c \u006f\u0072\u0020\u0073\u0069\u0067n\u0061\u0074u\u0072\u0065");
};_bef ,_ffb :=_ad .StdEncoding .DecodeString (_ge );if _ffb !=nil {return nil ,_gag .Errorf ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u006f\u0072\u0069\u0067\u0069\u006ea\u006c");};_ged ,_ffb :=_ad .StdEncoding .DecodeString (_fb );
if _ffb !=nil {return nil ,_gag .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065");};_gae ,_ :=_ff .Decode ([]byte (_edc ));if _gae ==nil {return nil ,_gag .Errorf ("\u0050\u0075\u0062\u004b\u0065\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};_fab ,_ffb :=_bf .ParsePKIXPublicKey (_gae .Bytes );if _ffb !=nil {return nil ,_ffb ;};_ee :=_fab .(*_db .PublicKey );if _ee ==nil {return nil ,_gag .Errorf ("\u0050u\u0062\u004b\u0065\u0079\u0020\u0063\u006f\u006e\u0076\u0065\u0072s\u0069\u006f\u006e\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};_dc :=_fa .New ();_dc .Write (_bef );_dg :=_dc .Sum (nil );_ffb =_db .VerifyPKCS1v15 (_ee ,_b .SHA512 ,_dg ,_ged );if _ffb !=nil {return nil ,_ffb ;};return _bef ,nil ;};func (_ffe *LicenseKey )ToString ()string {if _ffe ._gab {return "M\u0065t\u0065\u0072\u0065\u0064\u0020\u0073\u0075\u0062s\u0063\u0072\u0069\u0070ti\u006f\u006e";
};_ec :=_gag .Sprintf ("\u004ci\u0063e\u006e\u0073\u0065\u0020\u0049\u0064\u003a\u0020\u0025\u0073\u000a",_ffe .LicenseId );_ec +=_gag .Sprintf ("\u0043\u0075s\u0074\u006f\u006de\u0072\u0020\u0049\u0064\u003a\u0020\u0025\u0073\u000a",_ffe .CustomerId );
_ec +=_gag .Sprintf ("\u0043u\u0073t\u006f\u006d\u0065\u0072\u0020N\u0061\u006de\u003a\u0020\u0025\u0073\u000a",_ffe .CustomerName );_ec +=_gag .Sprintf ("\u0054i\u0065\u0072\u003a\u0020\u0025\u0073\n",_ffe .Tier );_ec +=_gag .Sprintf ("\u0043r\u0065a\u0074\u0065\u0064\u0020\u0041\u0074\u003a\u0020\u0025\u0073\u000a",_gcg .UtcTimeFormat (_ffe .CreatedAt ));
if _ffe .ExpiresAt ==nil {_ec +="\u0045x\u0070i\u0072\u0065\u0073\u0020\u0041t\u003a\u0020N\u0065\u0076\u0065\u0072\u000a";}else {_ec +=_gag .Sprintf ("\u0045x\u0070i\u0072\u0065\u0073\u0020\u0041\u0074\u003a\u0020\u0025\u0073\u000a",_gcg .UtcTimeFormat (*_ffe .ExpiresAt ));
};_ec +=_gag .Sprintf ("\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u003a\u0020\u0025\u0073\u0020<\u0025\u0073\u003e\u000a",_ffe .CreatorName ,_ffe .CreatorEmail );return _ec ;};const _ecb ="U\u004eI\u0050\u0044\u0046\u005f\u0043\u0055\u0053\u0054O\u004d\u0045\u0052\u005fNA\u004d\u0045";
var _df =_ccf .Date (2010,1,1,0,0,0,0,_ccf .UTC );const _bfdd ="\u000a\u002d\u002d\u002d\u002d\u002d\u0042\u0045\u0047\u0049\u004e \u0050\u0055\u0042\u004c\u0049\u0043\u0020\u004b\u0045Y\u002d\u002d\u002d\u002d\u002d\u000a\u004d\u0049I\u0042\u0049\u006a\u0041NB\u0067\u006b\u0071\u0068\u006b\u0069G\u0039\u0077\u0030\u0042\u0041\u0051\u0045\u0046A\u0041\u004f\u0043\u0041\u0051\u0038\u0041\u004d\u0049\u0049\u0042\u0043\u0067\u004b\u0043\u0041\u0051\u0045A\u006dF\u0055\u0069\u0079\u0064\u0037\u0062\u0035\u0058\u006a\u0070\u006b\u0050\u0035\u0052\u0061\u0070\u0034\u0077\u000a\u0044\u0063\u0031d\u0079\u007a\u0049\u0051\u0034\u004c\u0065\u006b\u0078\u0072\u0076\u0079\u0074\u006e\u0045\u004d\u0070\u004e\u0055\u0062\u006f\u0036i\u0041\u0037\u0034\u0056\u0038\u0072\u0075\u005a\u004f\u0076\u0072\u0053\u0063\u0073\u0066\u0032\u0051\u0065\u004e9\u002f\u0071r\u0055\u0047\u0038\u0071\u0045\u0062\u0055\u0057\u0064\u006f\u0045\u0059\u0071+\u000a\u006f\u0074\u0046\u004e\u0041\u0046N\u0078\u006c\u0047\u0062\u0078\u0062\u0044\u0048\u0063\u0064\u0047\u0056\u0061\u004d\u0030\u004f\u0058\u0064\u0058g\u0044y\u004c5\u0061\u0049\u0045\u0061\u0067\u004c\u0030\u0063\u0035\u0070\u0077\u006a\u0049\u0064\u0050G\u0049\u006e\u0034\u0036\u0066\u0037\u0038\u0065\u004d\u004a\u002b\u004a\u006b\u0064\u0063\u0070\u0044\n\u0044\u004a\u0061\u0071\u0059\u0058d\u0072\u007a5\u004b\u0065\u0073\u0068\u006aS\u0069\u0049\u0061\u0061\u0037\u006d\u0065\u006e\u0042\u0049\u0041\u0058\u0053\u0034\u0055\u0046\u0078N\u0066H\u0068\u004e\u0030\u0048\u0043\u0059\u005a\u0059\u0071\u0051\u0047\u0037\u0062K+\u0073\u0035\u0072R\u0048\u006f\u006e\u0079\u0064\u004eW\u0045\u0047\u000a\u0048\u0038M\u0079\u0076\u00722\u0070\u0079\u0061\u0032K\u0072\u004d\u0075m\u0066\u006d\u0041\u0078\u0055\u0042\u0036\u0066\u0065\u006e\u0043\u002f4\u004f\u0030\u0057\u00728\u0067\u0066\u0050\u004f\u0055\u0038R\u0069\u0074\u006d\u0062\u0044\u0076\u0051\u0050\u0049\u0052\u0058\u004fL\u0034\u0076\u0054B\u0072\u0042\u0064\u0062a\u0041\u000a9\u006e\u0077\u004e\u0050\u002b\u0069\u002f\u002f\u0032\u0030\u004d\u00542\u0062\u0078\u006d\u0065\u0057\u0042\u002b\u0067\u0070\u0063\u0045\u0068G\u0070\u0058\u005a7\u0033\u0033\u0061\u007a\u0051\u0078\u0072\u0043\u0033\u004a\u0034\u0076\u0033C\u005a\u006d\u0045\u004eS\u0074\u0044\u004b\u002f\u004b\u0044\u0053\u0050\u004b\u0055\u0047\u0066\u00756\u000a\u0066\u0077I\u0044\u0041\u0051\u0041\u0042\u000a\u002d\u002d\u002d\u002d\u002dE\u004e\u0044\u0020\u0050\u0055\u0042\u004c\u0049\u0043 \u004b\u0045Y\u002d\u002d\u002d\u002d\u002d\n";
func (_acb *LicenseKey )Validate ()error {if _acb ._gab {return nil ;};if len (_acb .LicenseId )< 10{return _gag .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020L\u0069\u0063\u0065n\u0073e\u0020\u0049\u0064");
};if len (_acb .CustomerId )< 10{return _gag .Errorf ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065:\u0020C\u0075\u0073\u0074\u006f\u006d\u0065\u0072 \u0049\u0064");};if len (_acb .CustomerName )< 1{return _gag .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069c\u0065\u006e\u0073\u0065\u003a\u0020\u0043u\u0073\u0074\u006f\u006d\u0065\u0072\u0020\u004e\u0061\u006d\u0065");
};if _df .After (_acb .CreatedAt ){return _gag .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u0065\u0064 \u0041\u0074\u0020\u0069\u0073 \u0069\u006ev\u0061\u006c\u0069\u0064");
};if _acb .ExpiresAt ==nil {_ea :=_acb .CreatedAt .AddDate (1,0,0);if _faff .After (_ea ){_ea =_faff ;};_acb .ExpiresAt =&_ea ;};if _acb .CreatedAt .After (*_acb .ExpiresAt ){return _gag .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u0065\u0064\u0020\u0041\u0074 \u0063a\u006e\u006e\u006f\u0074 \u0062\u0065 \u0047\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0045\u0078\u0070\u0069\u0072\u0065\u0073\u0020\u0041\u0074");
};if _acb .isExpired (){return _gag .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020l\u0069\u0063\u0065ns\u0065\u003a\u0020\u0054\u0068\u0065 \u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u0068\u0061\u0073\u0020\u0061\u006c\u0072e\u0061\u0064\u0079\u0020\u0065\u0078\u0070\u0069r\u0065\u0064");
};if len (_acb .CreatorName )< 1{return _gag .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u0020na\u006d\u0065");};if len (_acb .CreatorEmail )< 1{return _gag .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069c\u0065\u006e\u0073\u0065\u003a\u0020\u0043r\u0065\u0061\u0074\u006f\u0072\u0020\u0065\u006d\u0061\u0069\u006c");
};if _acb .CreatedAt .After (_gaa ){if !_acb .UniPDF {return _gag .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065:\u0020\u0054\u0068\u0069\u0073\u0020\u0055\u006e\u0069\u0044\u006f\u0063\u0020k\u0065\u0079\u0020\u0069\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069d \u0066\u006f\u0072\u0020\u0055\u006e\u0069\u0050\u0044\u0046");
};};return nil ;};func SetLicenseKey (content string ,customerName string )error {_fbe ,_ccfe :=_acf (content );if _ccfe !=nil {_gcg .Log .Error ("\u004c\u0069c\u0065\u006e\u0073\u0065\u0020\u0063\u006f\u0064\u0065\u0020\u0064\u0065\u0063\u006f\u0064\u0065\u0020\u0065\u0072\u0072\u006f\u0072: \u0025\u0076",_ccfe );
return _ccfe ;};if !_aa .EqualFold (_fbe .CustomerName ,customerName ){_gcg .Log .Error ("L\u0069ce\u006es\u0065 \u0063\u006f\u0064\u0065\u0020i\u0073\u0073\u0075e\u0020\u002d\u0020\u0043\u0075s\u0074\u006f\u006de\u0072\u0020\u006e\u0061\u006d\u0065\u0020\u006d\u0069\u0073\u006da\u0074\u0063\u0068, e\u0078\u0070\u0065\u0063\u0074\u0065d\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u0062\u0075\u0074\u0020\u0067o\u0074 \u0027\u0025\u0073\u0027",customerName ,_fbe .CustomerName );
return _gag .Errorf ("\u0063\u0075\u0073\u0074\u006fm\u0065\u0072\u0020\u006e\u0061\u006d\u0065\u0020\u006d\u0069\u0073\u006d\u0061t\u0063\u0068\u002c\u0020\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u0062\u0075\u0074\u0020\u0067\u006f\u0074\u0020\u0027\u0025\u0073'",customerName ,_fbe .CustomerName );
};_ccfe =_fbe .Validate ();if _ccfe !=nil {_gcg .Log .Error ("\u004c\u0069\u0063\u0065\u006e\u0073e\u0020\u0063\u006f\u0064\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074i\u006f\u006e\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_ccfe );
return _ccfe ;};_dfc =&_fbe ;return nil ;};type meteredUsageCheckinForm struct{Instance string `json:"inst"`;Next string `json:"next"`;UsageNumber int `json:"usage_number"`;NumFailed int64 `json:"num_failed"`;Hostname string `json:"hostname"`;LocalIP string `json:"local_ip"`;
MacAddress string `json:"mac_address"`;Package string `json:"package"`;PackageVersion string `json:"package_version"`;Usage map[string ]int `json:"u"`;IsPersistentCache bool `json:"is_persistent_cache"`;Timestamp int64 `json:"timestamp"`;};func _gbag (_dccd ,_dgd []byte )([]byte ,error ){_acde :=make ([]byte ,_ad .URLEncoding .DecodedLen (len (_dgd )));
_dabda ,_cfab :=_ad .URLEncoding .Decode (_acde ,_dgd );if _cfab !=nil {return nil ,_cfab ;};_acde =_acde [:_dabda ];_gee ,_cfab :=_ace .NewCipher (_dccd );if _cfab !=nil {return nil ,_cfab ;};if len (_acde )< _ace .BlockSize {return nil ,_a .New ("c\u0069p\u0068\u0065\u0072\u0074\u0065\u0078\u0074\u0020t\u006f\u006f\u0020\u0073ho\u0072\u0074");
};_gggg :=_acde [:_ace .BlockSize ];_acde =_acde [_ace .BlockSize :];_cfff :=_d .NewCFBDecrypter (_gee ,_gggg );_cfff .XORKeyStream (_acde ,_acde );return _acde ,nil ;};var _ccg map[string ]struct{};func _feea (_aee ,_bea string )string {_gdf :=[]byte (_aee );
_ebe :=_gb .New (_acd .New ,_gdf );_ebe .Write ([]byte (_bea ));return _ad .StdEncoding .EncodeToString (_ebe .Sum (nil ));};func (_fcf defaultStateHolder )updateState (_agc ,_adc ,_dfb string ,_agb int ,_cga bool ,_egf int ,_dda int ,_gbae _ccf .Time ,_agbf map[string ]int )error {_af :=_dccg ();
if len (_af )==0{return _a .New ("\u0068\u006fm\u0065\u0020\u0064i\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");};_dgef :=_ed .Join (_af ,"\u002eu\u006e\u0069\u0064\u006f\u0063");_daa :=_ga .MkdirAll (_dgef ,0777);if _daa !=nil {return _daa ;
};if len (_agc )< 20{return _a .New ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006b\u0065\u0079");};_cgef :=[]byte (_agc );_egc :=_fa .Sum512_256 (_cgef [:20]);_gdba :=_ac .EncodeToString (_egc [:]);_gac :=_ed .Join (_dgef ,_gdba );var _dbd reportState ;
_dbd .Docs =int64 (_agb );_dbd .NumErrors =int64 (_dda );_dbd .LimitDocs =_cga ;_dbd .RemainingDocs =int64 (_egf );_dbd .LastWritten =_ccf .Now ().UTC ();_dbd .LastReported =_gbae ;_dbd .Instance =_adc ;_dbd .Next =_dfb ;_dbd .Usage =_agbf ;_ecc ,_daa :=_ffd .Marshal (_dbd );
if _daa !=nil {return _daa ;};const _adf ="\u0068\u00619\u004e\u004b\u0038]\u0052\u0062\u004c\u002a\u006d\u0034\u004c\u004b\u0057";_ecc ,_daa =_ddf ([]byte (_adf ),_ecc );if _daa !=nil {return _daa ;};_daa =_bg .WriteFile (_gac ,_ecc ,0600);if _daa !=nil {return _daa ;
};return nil ;};func init (){_edd :=_ga .Getenv (_bgbe );_eedg :=_ga .Getenv (_ecb );if len (_edd )==0||len (_eedg )==0{return ;};_fee ,_gacd :=_bg .ReadFile (_edd );if _gacd !=nil {_gcg .Log .Error ("\u0055\u006eab\u006c\u0065\u0020t\u006f\u0020\u0072\u0065ad \u006cic\u0065\u006e\u0073\u0065\u0020\u0063\u006fde\u0020\u0066\u0069\u006c\u0065\u003a\u0020%\u0076",_gacd );
return ;};_gacd =SetLicenseKey (string (_fee ),_eedg );if _gacd !=nil {_gcg .Log .Error ("\u0055\u006e\u0061b\u006c\u0065\u0020\u0074o\u0020\u006c\u006f\u0061\u0064\u0020\u006ci\u0063\u0065\u006e\u0073\u0065\u0020\u0063\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_gacd );
return ;};};func (_bfg *LicenseKey )isExpired ()bool {return _bfg .getExpiryDateToCompare ().After (*_bfg .ExpiresAt )};func (_gdb *LicenseKey )getExpiryDateToCompare ()_ccf .Time {if _gdb .Trial {return _ccf .Now ().UTC ();};return _gcg .ReleasedAt ;};
type defaultStateHolder struct{};type LicenseKey struct{LicenseId string `json:"license_id"`;CustomerId string `json:"customer_id"`;CustomerName string `json:"customer_name"`;Tier string `json:"tier"`;CreatedAt _ccf .Time `json:"-"`;CreatedAtInt int64 `json:"created_at"`;
ExpiresAt *_ccf .Time `json:"-"`;ExpiresAtInt int64 `json:"expires_at"`;CreatedBy string `json:"created_by"`;CreatorName string `json:"creator_name"`;CreatorEmail string `json:"creator_email"`;UniPDF bool `json:"unipdf"`;UniOffice bool `json:"unioffice"`;
UniHTML bool `json:"unihtml"`;Trial bool `json:"trial"`;_gab bool ;_abc string ;_dd bool ;};func _dabd ()([]string ,[]string ,error ){_cfa ,_cad :=_eb .Interfaces ();if _cad !=nil {return nil ,nil ,_cad ;};var _gcf []string ;var _bec []string ;for _ ,_eab :=range _cfa {if _eab .Flags &_eb .FlagUp ==0||_gd .Equal (_eab .HardwareAddr ,nil ){continue ;
};_dgea ,_gbec :=_eab .Addrs ();if _gbec !=nil {return nil ,nil ,_gbec ;};_caa :=0;for _ ,_eag :=range _dgea {var _beb _eb .IP ;switch _ceg :=_eag .(type ){case *_eb .IPNet :_beb =_ceg .IP ;case *_eb .IPAddr :_beb =_ceg .IP ;};if _beb .IsLoopback (){continue ;
};if _beb .To4 ()==nil {continue ;};_bec =append (_bec ,_beb .String ());_caa ++;};_cca :=_eab .HardwareAddr .String ();if _cca !=""&&_caa > 0{_gcf =append (_gcf ,_cca );};};return _gcf ,_bec ,nil ;};func (_adb *LicenseKey )IsLicensed ()bool {return _adb .Tier !=LicenseTierUnlicensed ||_adb ._gab };
type meteredStatusResp struct{Valid bool `json:"valid"`;OrgCredits int64 `json:"org_credits"`;OrgUsed int64 `json:"org_used"`;OrgRemaining int64 `json:"org_remaining"`;};const _bgbe ="\u0055\u004e\u0049\u0050DF\u005f\u004c\u0049\u0043\u0045\u004e\u0053\u0045\u005f\u0050\u0041\u0054\u0048";
