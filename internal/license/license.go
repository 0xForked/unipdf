//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package license ;import (_ae "bytes";_fa "compress/gzip";_fg "crypto";_agb "crypto/aes";_gc "crypto/cipher";_ag "crypto/rand";_c "crypto/rsa";_bf "crypto/sha512";_bbg "crypto/x509";_ef "encoding/base64";_ea "encoding/hex";_fc "encoding/json";_fag "encoding/pem";
_bbf "errors";_ad "fmt";_ee "github.com/unidoc/unipdf/v3/common";_fgd "io";_g "io/ioutil";_bb "net";_b "net/http";_a "os";_d "path/filepath";_e "sort";_aed "strings";_fgf "sync";_eg "time";);type defaultStateHolder struct{};type stateLoader interface{loadState (_cad string )(reportState ,error );
updateState (_ffg ,_fdef ,_cff string ,_bfc int ,_faf bool ,_bbd int ,_dea int ,_gdg _eg .Time ,_bae map[string ]int )error ;};func (_baa *meteredClient )getStatus ()(meteredStatusResp ,error ){var _efb meteredStatusResp ;_dec :=_baa ._bfg +"\u002fm\u0065t\u0065\u0072\u0065\u0064\u002f\u0073\u0074\u0061\u0074\u0075\u0073";
var _deb meteredStatusForm ;_cde ,_ffa :=_fc .Marshal (_deb );if _ffa !=nil {return _efb ,_ffa ;};_ecf ,_ffa :=_gbf (_cde );if _ffa !=nil {return _efb ,_ffa ;};_fae ,_ffa :=_b .NewRequest ("\u0050\u004f\u0053\u0054",_dec ,_ecf );if _ffa !=nil {return _efb ,_ffa ;
};_fae .Header .Add ("\u0043\u006f\u006et\u0065\u006e\u0074\u002d\u0054\u0079\u0070\u0065","\u0061\u0070p\u006c\u0069\u0063a\u0074\u0069\u006f\u006e\u002f\u006a\u0073\u006f\u006e");_fae .Header .Add ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");
_fae .Header .Add ("\u0041c\u0063e\u0070\u0074\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");_fae .Header .Add ("\u0058-\u0041\u0050\u0049\u002d\u004b\u0045Y",_baa ._bea );_fde ,_ffa :=_baa ._dbd .Do (_fae );if _ffa !=nil {return _efb ,_ffa ;
};defer _fde .Body .Close ();if _fde .StatusCode !=200{return _efb ,_ad .Errorf ("\u0066\u0061i\u006c\u0065\u0064\u0020t\u006f\u0020c\u0068\u0065\u0063\u006b\u0069\u006e\u002c\u0020s\u0074\u0061\u0074\u0075\u0073\u0020\u0063\u006f\u0064\u0065\u0020\u0069s\u003a\u0020\u0025\u0064",_fde .StatusCode );
};_dbb ,_ffa :=_bggb (_fde );if _ffa !=nil {return _efb ,_ffa ;};_ffa =_fc .Unmarshal (_dbb ,&_efb );if _ffa !=nil {return _efb ,_ffa ;};return _efb ,nil ;};type meteredClient struct{_bfg string ;_bea string ;_dbd *_b .Client ;};func Track (docKey string ,useKey string )error {return _fdce (docKey ,useKey ,false )};
func _bggb (_dbc *_b .Response )([]byte ,error ){var _ged []byte ;_dgae ,_ccdd :=_dddd (_dbc );if _ccdd !=nil {return _ged ,_ccdd ;};return _g .ReadAll (_dgae );};type MeteredStatus struct{OK bool ;Credits int64 ;Used int64 ;};func GetMeteredState ()(MeteredStatus ,error ){if _efbg ==nil {return MeteredStatus {},_bbf .New ("\u006c\u0069\u0063\u0065ns\u0065\u0020\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");
};if !_efbg ._bba ||len (_efbg ._fce )==0{return MeteredStatus {},_bbf .New ("\u0061p\u0069 \u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");};_ce ,_acg :=_gdge .loadState (_efbg ._fce );if _acg !=nil {_ee .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_acg );
return MeteredStatus {},_acg ;};if _ce .Docs > 0{_bebb :=_fdce ("","",true );if _bebb !=nil {return MeteredStatus {},_bebb ;};};_cfg .Lock ();defer _cfg .Unlock ();_bde :=_gea ();_bde ._bea =_efbg ._fce ;_eade ,_acg :=_bde .getStatus ();if _acg !=nil {return MeteredStatus {},_acg ;
};if !_eade .Valid {return MeteredStatus {},_bbf .New ("\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0076\u0061\u006c\u0069\u0064");};_dcf :=MeteredStatus {OK :true ,Credits :_eade .OrgCredits ,Used :_eade .OrgUsed };return _dcf ,nil ;};type meteredUsageCheckinForm struct{Instance string `json:"inst"`;
Next string `json:"next"`;UsageNumber int `json:"usage_number"`;NumFailed int64 `json:"num_failed"`;Hostname string `json:"hostname"`;LocalIP string `json:"local_ip"`;MacAddress string `json:"mac_address"`;Package string `json:"package"`;PackageVersion string `json:"package_version"`;
Usage map[string ]int `json:"u"`;};const _aagb ="\u0055\u004e\u0049\u0050DF\u005f\u004c\u0049\u0043\u0045\u004e\u0053\u0045\u005f\u0050\u0041\u0054\u0048";var _gdge stateLoader =defaultStateHolder {};func _gb (_bc string ,_ba string ,_eb string )(string ,error ){_bd :=_aed .Index (_eb ,_bc );
if _bd ==-1{return "",_ad .Errorf ("\u0068\u0065a\u0064\u0065\u0072 \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_bdb :=_aed .Index (_eb ,_ba );if _bdb ==-1{return "",_ad .Errorf ("\u0066\u006fo\u0074\u0065\u0072 \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
};_fca :=_bd +len (_bc )+1;return _eb [_fca :_bdb -1],nil ;};var _efbg =MakeUnlicensedKey ();var _cga =_eg .Date (2019,6,6,0,0,0,0,_eg .UTC );var _cfg =&_fgf .Mutex {};func _gbf (_afg []byte )(_fgd .Reader ,error ){_dcd :=new (_ae .Buffer );_baed :=_fa .NewWriter (_dcd );
_baed .Write (_afg );_cfc :=_baed .Close ();if _cfc !=nil {return nil ,_cfc ;};return _dcd ,nil ;};func _eged (_aafb ,_gee []byte )([]byte ,error ){_bfa :=make ([]byte ,_ef .URLEncoding .DecodedLen (len (_gee )));_fcgg ,_dbgb :=_ef .URLEncoding .Decode (_bfa ,_gee );
if _dbgb !=nil {return nil ,_dbgb ;};_bfa =_bfa [:_fcgg ];_deda ,_dbgb :=_agb .NewCipher (_aafb );if _dbgb !=nil {return nil ,_dbgb ;};if len (_bfa )< _agb .BlockSize {return nil ,_bbf .New ("c\u0069p\u0068\u0065\u0072\u0074\u0065\u0078\u0074\u0020t\u006f\u006f\u0020\u0073ho\u0072\u0074");
};_cbe :=_bfa [:_agb .BlockSize ];_bfa =_bfa [_agb .BlockSize :];_fcbe :=_gc .NewCFBDecrypter (_deda ,_cbe );_fcbe .XORKeyStream (_bfa ,_bfa );return _bfa ,nil ;};func _fdce (_ab string ,_ffaa string ,_dfe bool )error {if _efbg ==nil {return _bbf .New ("\u006e\u006f\u0020\u006c\u0069\u0063\u0065\u006e\u0073e\u0020\u006b\u0065\u0079");
};if !_efbg ._bba ||len (_efbg ._fce )==0{return nil ;};if len (_ab )==0&&!_dfe {return _bbf .New ("\u0064\u006f\u0063\u004b\u0065\u0079\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");};_cfg .Lock ();defer _cfg .Unlock ();if _ced ==nil {_ced =map[string ]struct{}{};
};if _fcg ==nil {_fcg =map[string ]int {};};_fcae :=0;if !_dfe {_ ,_bbda :=_ced [_ab ];if !_bbda {_ced [_ab ]=struct{}{};_fcae ++;};if _fcae ==0{return nil ;};_fcg [_ffaa ]++;};_fbg :=_eg .Now ();_da ,_fcc :=_gdge .loadState (_efbg ._fce );if _fcc !=nil {_ee .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fcc );
return _fcc ;};if _da .Usage ==nil {_da .Usage =map[string ]int {};};for _afe ,_egb :=range _fcg {_da .Usage [_afe ]+=_egb ;};_fcg =nil ;const _faeg =24*_eg .Hour ;const _aaf =3*24*_eg .Hour ;if len (_da .Instance )==0||_fbg .Sub (_da .LastReported )> _faeg ||(_da .LimitDocs &&_da .RemainingDocs <=_da .Docs +int64 (_fcae ))||_dfe {_fgbg ,_adc :=_a .Hostname ();
if _adc !=nil {return _adc ;};_eeb :=_da .Docs ;_eag ,_cdf ,_adc :=_ecd ();if _adc !=nil {return _adc ;};_e .Strings (_cdf );_e .Strings (_eag );_adbb ,_adc :=_cdc ();if _adc !=nil {return _adc ;};_bad :=false ;for _ ,_cce :=range _cdf {if _cce ==_adbb .String (){_bad =true ;
};};if !_bad {_cdf =append (_cdf ,_adbb .String ());};_efdf :=_gea ();_efdf ._bea =_efbg ._fce ;_eeb +=int64 (_fcae );_ddd :=meteredUsageCheckinForm {Instance :_da .Instance ,Next :_da .Next ,UsageNumber :int (_eeb ),NumFailed :_da .NumErrors ,Hostname :_fgbg ,LocalIP :_aed .Join (_cdf ,"\u002c\u0020"),MacAddress :_aed .Join (_eag ,"\u002c\u0020"),Package :"\u0075\u006e\u0069\u0070\u0064\u0066",PackageVersion :_ee .Version ,Usage :_da .Usage };
if len (_eag )==0{_ddd .MacAddress ="\u006e\u006f\u006e\u0065";};_agf :=int64 (0);_eagb :=_da .NumErrors ;_dbe :=_fbg ;_dag :=0;_bdbd :=_da .LimitDocs ;_gdf ,_adc :=_efdf .checkinUsage (_ddd );if _adc !=nil {if _fbg .Sub (_da .LastReported )> _aaf {return _bbf .New ("\u0074\u006f\u006f\u0020\u006c\u006f\u006e\u0067\u0020\u0073\u0069\u006e\u0063\u0065\u0020\u006c\u0061\u0073\u0074\u0020\u0073\u0075\u0063\u0063e\u0073\u0073\u0066\u0075\u006c \u0063\u0068e\u0063\u006b\u0069\u006e");
};_agf =_eeb ;_eagb ++;_dbe =_da .LastReported ;}else {_bdbd =_gdf .LimitDocs ;_dag =_gdf .RemainingDocs ;_eagb =0;};if len (_gdf .Instance )==0{_gdf .Instance =_ddd .Instance ;};if len (_gdf .Next )==0{_gdf .Next =_ddd .Next ;};_adc =_gdge .updateState (_efdf ._bea ,_gdf .Instance ,_gdf .Next ,int (_agf ),_bdbd ,_dag ,int (_eagb ),_dbe ,nil );
if _adc !=nil {return _adc ;};if !_gdf .Success {return _ad .Errorf ("\u0065r\u0072\u006f\u0072\u003a\u0020\u0025s",_gdf .Message );};}else {_fcc =_gdge .updateState (_efbg ._fce ,_da .Instance ,_da .Next ,int (_da .Docs )+_fcae ,_da .LimitDocs ,int (_da .RemainingDocs ),int (_da .NumErrors ),_da .LastReported ,_da .Usage );
if _fcc !=nil {return _fcc ;};};return nil ;};func (_gba defaultStateHolder )updateState (_ebgf ,_bgg ,_bbb string ,_ebd int ,_fdb bool ,_eba int ,_ege int ,_fdba _eg .Time ,_dba map[string ]int )error {_ecg :=_gbda ();if len (_ecg )==0{return _bbf .New ("\u0068\u006fm\u0065\u0020\u0064i\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");
};_bgd :=_d .Join (_ecg ,"\u002eu\u006e\u0069\u0064\u006f\u0063");_fcd :=_a .MkdirAll (_bgd ,0777);if _fcd !=nil {return _fcd ;};if len (_ebgf )< 20{return _bbf .New ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006b\u0065\u0079");};_fea :=[]byte (_ebgf );
_bdd :=_bf .Sum512_256 (_fea [:20]);_ffaf :=_ea .EncodeToString (_bdd [:]);_gbd :=_d .Join (_bgd ,_ffaf );var _acd reportState ;_acd .Docs =int64 (_ebd );_acd .NumErrors =int64 (_ege );_acd .LimitDocs =_fdb ;_acd .RemainingDocs =int64 (_eba );_acd .LastWritten =_eg .Now ().UTC ();
_acd .LastReported =_fdba ;_acd .Instance =_bgg ;_acd .Next =_bbb ;_acd .Usage =_dba ;_ebdd ,_fcd :=_fc .Marshal (_acd );if _fcd !=nil {return _fcd ;};const _fgc ="\u0068\u00619\u004e\u004b\u0038]\u0052\u0062\u004c\u002a\u006d\u0034\u004c\u004b\u0057";
_ebdd ,_fcd =_adcf ([]byte (_fgc ),_ebdd );if _fcd !=nil {return _fcd ;};_fcd =_g .WriteFile (_gbd ,_ebdd ,0600);if _fcd !=nil {return _fcd ;};return nil ;};func _ecd ()([]string ,[]string ,error ){_eebc ,_gda :=_bb .Interfaces ();if _gda !=nil {return nil ,nil ,_gda ;
};var _ega []string ;var _ded []string ;for _ ,_eecd :=range _eebc {if _eecd .Flags &_bb .FlagUp ==0||_ae .Equal (_eecd .HardwareAddr ,nil ){continue ;};_eff ,_ece :=_eecd .Addrs ();if _ece !=nil {return nil ,nil ,_ece ;};_bggg :=0;for _ ,_fdcb :=range _eff {var _fade _bb .IP ;
switch _cea :=_fdcb .(type ){case *_bb .IPNet :_fade =_cea .IP ;case *_bb .IPAddr :_fade =_cea .IP ;};if _fade .IsLoopback (){continue ;};if _fade .To4 ()==nil {continue ;};_ded =append (_ded ,_fade .String ());_bggg ++;};_adag :=_eecd .HardwareAddr .String ();
if _adag !=""&&_bggg > 0{_ega =append (_ega ,_adag );};};return _ega ,_ded ,nil ;};const (_ec ="\u002d\u002d\u002d--\u0042\u0045\u0047\u0049\u004e\u0020\u0055\u004e\u0049D\u004fC\u0020L\u0049C\u0045\u004e\u0053\u0045\u0020\u004b\u0045\u0059\u002d\u002d\u002d\u002d\u002d";
_ac ="\u002d\u002d\u002d\u002d\u002d\u0045\u004e\u0044\u0020\u0055\u004e\u0049\u0044\u004f\u0043 \u004cI\u0043\u0045\u004e\u0053\u0045\u0020\u004b\u0045\u0059\u002d\u002d\u002d\u002d\u002d";);type reportState struct{Instance string `json:"inst"`;Next string `json:"n"`;
Docs int64 `json:"d"`;NumErrors int64 `json:"e"`;LimitDocs bool `json:"ld"`;RemainingDocs int64 `json:"rd"`;LastReported _eg .Time `json:"lr"`;LastWritten _eg .Time `json:"lw"`;Usage map[string ]int `json:"u"`;};func _cdc ()(_bb .IP ,error ){_bec ,_adbd :=_bb .Dial ("\u0075\u0064\u0070","\u0038\u002e\u0038\u002e\u0038\u002e\u0038\u003a\u0038\u0030");
if _adbd !=nil {return nil ,_adbd ;};defer _bec .Close ();_cdfe :=_bec .LocalAddr ().(*_bb .UDPAddr );return _cdfe .IP ,nil ;};func SetLicenseKey (content string ,customerName string )error {_acc ,_cdb :=_df (content );if _cdb !=nil {_ee .Log .Error ("\u004c\u0069c\u0065\u006e\u0073\u0065\u0020\u0063\u006f\u0064\u0065\u0020\u0064\u0065\u0063\u006f\u0064\u0065\u0020\u0065\u0072\u0072\u006f\u0072: \u0025\u0076",_cdb );
return _cdb ;};if !_aed .EqualFold (_acc .CustomerName ,customerName ){_ee .Log .Error ("L\u0069ce\u006es\u0065 \u0063\u006f\u0064\u0065\u0020i\u0073\u0073\u0075e\u0020\u002d\u0020\u0043\u0075s\u0074\u006f\u006de\u0072\u0020\u006e\u0061\u006d\u0065\u0020\u006d\u0069\u0073\u006da\u0074\u0063\u0068, e\u0078\u0070\u0065\u0063\u0074\u0065d\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u0062\u0075\u0074\u0020\u0067o\u0074 \u0027\u0025\u0073\u0027",customerName ,_acc .CustomerName );
return _ad .Errorf ("\u0063\u0075\u0073\u0074\u006fm\u0065\u0072\u0020\u006e\u0061\u006d\u0065\u0020\u006d\u0069\u0073\u006d\u0061t\u0063\u0068\u002c\u0020\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u0062\u0075\u0074\u0020\u0067\u006f\u0074\u0020\u0027\u0025\u0073'",customerName ,_acc .CustomerName );
};_cdb =_acc .Validate ();if _cdb !=nil {_ee .Log .Error ("\u004c\u0069\u0063\u0065\u006e\u0073e\u0020\u0063\u006f\u0064\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074i\u006f\u006e\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_cdb );return _cdb ;
};_efbg =&_acc ;return nil ;};var _fcg map[string ]int ;var _gg =_eg .Date (2010,1,1,0,0,0,0,_eg .UTC );func (_af *meteredClient )checkinUsage (_aag meteredUsageCheckinForm )(meteredUsageCheckinResp ,error ){_aag .Package ="\u0075\u006e\u0069\u0070\u0064\u0066";
_aag .PackageVersion =_ee .Version ;var _fab meteredUsageCheckinResp ;_bed :=_af ._bfg +"\u002f\u006d\u0065\u0074er\u0065\u0064\u002f\u0075\u0073\u0061\u0067\u0065\u005f\u0063\u0068\u0065\u0063\u006bi\u006e";_dfg ,_eac :=_fc .Marshal (_aag );if _eac !=nil {return _fab ,_eac ;
};_gfd ,_eac :=_gbf (_dfg );if _eac !=nil {return _fab ,_eac ;};_fdc ,_eac :=_b .NewRequest ("\u0050\u004f\u0053\u0054",_bed ,_gfd );if _eac !=nil {return _fab ,_eac ;};_fdc .Header .Add ("\u0043\u006f\u006et\u0065\u006e\u0074\u002d\u0054\u0079\u0070\u0065","\u0061\u0070p\u006c\u0069\u0063a\u0074\u0069\u006f\u006e\u002f\u006a\u0073\u006f\u006e");
_fdc .Header .Add ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");_fdc .Header .Add ("\u0041c\u0063e\u0070\u0074\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");
_fdc .Header .Add ("\u0058-\u0041\u0050\u0049\u002d\u004b\u0045Y",_af ._bea );_adff ,_eac :=_af ._dbd .Do (_fdc );if _eac !=nil {return _fab ,_eac ;};defer _adff .Body .Close ();if _adff .StatusCode !=200{return _fab ,_ad .Errorf ("\u0066\u0061i\u006c\u0065\u0064\u0020t\u006f\u0020c\u0068\u0065\u0063\u006b\u0069\u006e\u002c\u0020s\u0074\u0061\u0074\u0075\u0073\u0020\u0063\u006f\u0064\u0065\u0020\u0069s\u003a\u0020\u0025\u0064",_adff .StatusCode );
};_cgae ,_eac :=_bggb (_adff );if _eac !=nil {return _fab ,_eac ;};_eac =_fc .Unmarshal (_cgae ,&_fab );if _eac !=nil {return _fab ,_eac ;};return _fab ,nil ;};func GetLicenseKey ()*LicenseKey {if _efbg ==nil {return nil ;};_gce :=*_efbg ;return &_gce ;
};var _cc =_eg .Date (2020,1,1,0,0,0,0,_eg .UTC );func _df (_adb string )(LicenseKey ,error ){var _efd LicenseKey ;_dcad ,_dgb :=_gb (_ec ,_ac ,_adb );if _dgb !=nil {return _efd ,_dgb ;};_ca ,_dgb :=_ge (_gge ,_dcad );if _dgb !=nil {return _efd ,_dgb ;
};_dgb =_fc .Unmarshal (_ca ,&_efd );if _dgb !=nil {return _efd ,_dgb ;};_efd .CreatedAt =_eg .Unix (_efd .CreatedAtInt ,0);if _efd .ExpiresAtInt > 0{_bdc :=_eg .Unix (_efd .ExpiresAtInt ,0);_efd .ExpiresAt =&_bdc ;};return _efd ,nil ;};func _dddd (_ceda *_b .Response )(_fgd .ReadCloser ,error ){var _bgb error ;
var _aad _fgd .ReadCloser ;switch _aed .ToLower (_ceda .Header .Get ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067")){case "\u0067\u007a\u0069\u0070":_aad ,_bgb =_fa .NewReader (_ceda .Body );if _bgb !=nil {return _aad ,_bgb ;
};defer _aad .Close ();default:_aad =_ceda .Body ;};return _aad ,nil ;};func _gea ()*meteredClient {_beb :=meteredClient {_bfg :"h\u0074\u0074\u0070\u0073\u003a\u002f/\u0063\u006c\u006f\u0075\u0064\u002e\u0075\u006e\u0069d\u006f\u0063\u002ei\u006f/\u0061\u0070\u0069",_dbd :&_b .Client {Timeout :30*_eg .Second }};
if _bge :=_a .Getenv ("\u0055N\u0049\u0044\u004f\u0043_\u004c\u0049\u0043\u0045\u004eS\u0045_\u0053E\u0052\u0056\u0045\u0052\u005f\u0055\u0052L");_aed .HasPrefix (_bge ,"\u0068\u0074\u0074\u0070"){_beb ._bfg =_bge ;};return &_beb ;};func (_bbe *LicenseKey )getExpiryDateToCompare ()_eg .Time {if _bbe .Trial {return _eg .Now ().UTC ();
};return _ee .ReleasedAt ;};func (_fdf *LicenseKey )IsLicensed ()bool {return _fdf .Tier !=LicenseTierUnlicensed ||_fdf ._bba };const (LicenseTierUnlicensed ="\u0075\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";LicenseTierCommunity ="\u0063o\u006d\u006d\u0075\u006e\u0069\u0074y";
LicenseTierIndividual ="\u0069\u006e\u0064\u0069\u0076\u0069\u0064\u0075\u0061\u006c";LicenseTierBusiness ="\u0062\u0075\u0073\u0069\u006e\u0065\u0073\u0073";);type LicenseKey struct{LicenseId string `json:"license_id"`;CustomerId string `json:"customer_id"`;
CustomerName string `json:"customer_name"`;Tier string `json:"tier"`;CreatedAt _eg .Time `json:"-"`;CreatedAtInt int64 `json:"created_at"`;ExpiresAt *_eg .Time `json:"-"`;ExpiresAtInt int64 `json:"expires_at"`;CreatedBy string `json:"created_by"`;CreatorName string `json:"creator_name"`;
CreatorEmail string `json:"creator_email"`;UniPDF bool `json:"unipdf"`;UniOffice bool `json:"unioffice"`;UniHTML bool `json:"unihtml"`;Trial bool `json:"trial"`;_bba bool ;_fce string ;};const _gge ="\u000a\u002d\u002d\u002d\u002d\u002d\u0042\u0045\u0047\u0049\u004e \u0050\u0055\u0042\u004c\u0049\u0043\u0020\u004b\u0045Y\u002d\u002d\u002d\u002d\u002d\u000a\u004d\u0049I\u0042\u0049\u006a\u0041NB\u0067\u006b\u0071\u0068\u006b\u0069G\u0039\u0077\u0030\u0042\u0041\u0051\u0045\u0046A\u0041\u004f\u0043\u0041\u0051\u0038\u0041\u004d\u0049\u0049\u0042\u0043\u0067\u004b\u0043\u0041\u0051\u0045A\u006dF\u0055\u0069\u0079\u0064\u0037\u0062\u0035\u0058\u006a\u0070\u006b\u0050\u0035\u0052\u0061\u0070\u0034\u0077\u000a\u0044\u0063\u0031d\u0079\u007a\u0049\u0051\u0034\u004c\u0065\u006b\u0078\u0072\u0076\u0079\u0074\u006e\u0045\u004d\u0070\u004e\u0055\u0062\u006f\u0036i\u0041\u0037\u0034\u0056\u0038\u0072\u0075\u005a\u004f\u0076\u0072\u0053\u0063\u0073\u0066\u0032\u0051\u0065\u004e9\u002f\u0071r\u0055\u0047\u0038\u0071\u0045\u0062\u0055\u0057\u0064\u006f\u0045\u0059\u0071+\u000a\u006f\u0074\u0046\u004e\u0041\u0046N\u0078\u006c\u0047\u0062\u0078\u0062\u0044\u0048\u0063\u0064\u0047\u0056\u0061\u004d\u0030\u004f\u0058\u0064\u0058g\u0044y\u004c5\u0061\u0049\u0045\u0061\u0067\u004c\u0030\u0063\u0035\u0070\u0077\u006a\u0049\u0064\u0050G\u0049\u006e\u0034\u0036\u0066\u0037\u0038\u0065\u004d\u004a\u002b\u004a\u006b\u0064\u0063\u0070\u0044\n\u0044\u004a\u0061\u0071\u0059\u0058d\u0072\u007a5\u004b\u0065\u0073\u0068\u006aS\u0069\u0049\u0061\u0061\u0037\u006d\u0065\u006e\u0042\u0049\u0041\u0058\u0053\u0034\u0055\u0046\u0078N\u0066H\u0068\u004e\u0030\u0048\u0043\u0059\u005a\u0059\u0071\u0051\u0047\u0037\u0062K+\u0073\u0035\u0072R\u0048\u006f\u006e\u0079\u0064\u004eW\u0045\u0047\u000a\u0048\u0038M\u0079\u0076\u00722\u0070\u0079\u0061\u0032K\u0072\u004d\u0075m\u0066\u006d\u0041\u0078\u0055\u0042\u0036\u0066\u0065\u006e\u0043\u002f4\u004f\u0030\u0057\u00728\u0067\u0066\u0050\u004f\u0055\u0038R\u0069\u0074\u006d\u0062\u0044\u0076\u0051\u0050\u0049\u0052\u0058\u004fL\u0034\u0076\u0054B\u0072\u0042\u0064\u0062a\u0041\u000a9\u006e\u0077\u004e\u0050\u002b\u0069\u002f\u002f\u0032\u0030\u004d\u00542\u0062\u0078\u006d\u0065\u0057\u0042\u002b\u0067\u0070\u0063\u0045\u0068G\u0070\u0058\u005a7\u0033\u0033\u0061\u007a\u0051\u0078\u0072\u0043\u0033\u004a\u0034\u0076\u0033C\u005a\u006d\u0045\u004eS\u0074\u0044\u004b\u002f\u004b\u0044\u0053\u0050\u004b\u0055\u0047\u0066\u00756\u000a\u0066\u0077I\u0044\u0041\u0051\u0041\u0042\u000a\u002d\u002d\u002d\u002d\u002dE\u004e\u0044\u0020\u0050\u0055\u0042\u004c\u0049\u0043 \u004b\u0045Y\u002d\u002d\u002d\u002d\u002d\n";
func (_fb *LicenseKey )ToString ()string {if _fb ._bba {return "M\u0065t\u0065\u0072\u0065\u0064\u0020\u0073\u0075\u0062s\u0063\u0072\u0069\u0070ti\u006f\u006e";};_bcf :=_ad .Sprintf ("\u004ci\u0063e\u006e\u0073\u0065\u0020\u0049\u0064\u003a\u0020\u0025\u0073\u000a",_fb .LicenseId );
_bcf +=_ad .Sprintf ("\u0043\u0075s\u0074\u006f\u006de\u0072\u0020\u0049\u0064\u003a\u0020\u0025\u0073\u000a",_fb .CustomerId );_bcf +=_ad .Sprintf ("\u0043u\u0073t\u006f\u006d\u0065\u0072\u0020N\u0061\u006de\u003a\u0020\u0025\u0073\u000a",_fb .CustomerName );
_bcf +=_ad .Sprintf ("\u0054i\u0065\u0072\u003a\u0020\u0025\u0073\n",_fb .Tier );_bcf +=_ad .Sprintf ("\u0043r\u0065a\u0074\u0065\u0064\u0020\u0041\u0074\u003a\u0020\u0025\u0073\u000a",_ee .UtcTimeFormat (_fb .CreatedAt ));if _fb .ExpiresAt ==nil {_bcf +="\u0045x\u0070i\u0072\u0065\u0073\u0020\u0041t\u003a\u0020N\u0065\u0076\u0065\u0072\u000a";
}else {_bcf +=_ad .Sprintf ("\u0045x\u0070i\u0072\u0065\u0073\u0020\u0041\u0074\u003a\u0020\u0025\u0073\u000a",_ee .UtcTimeFormat (*_fb .ExpiresAt ));};_bcf +=_ad .Sprintf ("\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u003a\u0020\u0025\u0073\u0020<\u0025\u0073\u003e\u000a",_fb .CreatorName ,_fb .CreatorEmail );
return _bcf ;};func TrackUse (useKey string ){if _efbg ==nil {return ;};if !_efbg ._bba ||len (_efbg ._fce )==0{return ;};if len (useKey )==0{return ;};_cfg .Lock ();defer _cfg .Unlock ();if _fcg ==nil {_fcg =map[string ]int {};};_fcg [useKey ]++;};type meteredUsageCheckinResp struct{Instance string `json:"inst"`;
Next string `json:"next"`;Success bool `json:"success"`;Message string `json:"message"`;RemainingDocs int `json:"rd"`;LimitDocs bool `json:"ld"`;};func _adcf (_ggf ,_aadd []byte )([]byte ,error ){_cffg ,_ggc :=_agb .NewCipher (_ggf );if _ggc !=nil {return nil ,_ggc ;
};_cbd :=make ([]byte ,_agb .BlockSize +len (_aadd ));_efgb :=_cbd [:_agb .BlockSize ];if _ ,_cfb :=_fgd .ReadFull (_ag .Reader ,_efgb );_cfb !=nil {return nil ,_cfb ;};_fcaeb :=_gc .NewCFBEncrypter (_cffg ,_efgb );_fcaeb .XORKeyStream (_cbd [_agb .BlockSize :],_aadd );
_ccdc :=make ([]byte ,_ef .URLEncoding .EncodedLen (len (_cbd )));_ef .URLEncoding .Encode (_ccdc ,_cbd );return _ccdc ,nil ;};type meteredStatusResp struct{Valid bool `json:"valid"`;OrgCredits int64 `json:"org_credits"`;OrgUsed int64 `json:"org_used"`;
OrgRemaining int64 `json:"org_remaining"`;};func _be (_gd string ,_dd []byte )(string ,error ){_fad ,_ :=_fag .Decode ([]byte (_gd ));if _fad ==nil {return "",_ad .Errorf ("\u0050\u0072\u0069\u0076\u004b\u0065\u0079\u0020\u0066a\u0069\u006c\u0065\u0064");
};_gdc ,_cg :=_bbg .ParsePKCS1PrivateKey (_fad .Bytes );if _cg !=nil {return "",_cg ;};_gcg :=_bf .New ();_gcg .Write (_dd );_dc :=_gcg .Sum (nil );_fe ,_cg :=_c .SignPKCS1v15 (_ag .Reader ,_gdc ,_fg .SHA512 ,_dc );if _cg !=nil {return "",_cg ;};_dce :=_ef .StdEncoding .EncodeToString (_dd );
_dce +="\u000a\u002b\u000a";_dce +=_ef .StdEncoding .EncodeToString (_fe );return _dce ,nil ;};func (_de *LicenseKey )TypeToString ()string {if _de ._bba {return "M\u0065t\u0065\u0072\u0065\u0064\u0020\u0073\u0075\u0062s\u0063\u0072\u0069\u0070ti\u006f\u006e";
};if _de .Tier ==LicenseTierUnlicensed {return "\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";};if _de .Tier ==LicenseTierCommunity {return "\u0041\u0047PL\u0076\u0033\u0020O\u0070\u0065\u006e\u0020Sou\u0072ce\u0020\u0043\u006f\u006d\u006d\u0075\u006eit\u0079\u0020\u004c\u0069\u0063\u0065\u006es\u0065";
};if _de .Tier ==LicenseTierIndividual ||_de .Tier =="\u0069\u006e\u0064i\u0065"{return "\u0043\u006f\u006dm\u0065\u0072\u0063\u0069a\u006c\u0020\u004c\u0069\u0063\u0065\u006es\u0065\u0020\u002d\u0020\u0049\u006e\u0064\u0069\u0076\u0069\u0064\u0075\u0061\u006c";
};return "\u0043\u006fm\u006d\u0065\u0072\u0063\u0069\u0061\u006c\u0020\u004c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u002d\u0020\u0042\u0075\u0073\u0069ne\u0073\u0073";};func _ge (_dg string ,_ed string )([]byte ,error ){var (_cf int ;_db string ;);
for _ ,_db =range []string {"\u000a\u002b\u000a","\u000d\u000a\u002b\r\u000a","\u0020\u002b\u0020"}{if _cf =_aed .Index (_ed ,_db );_cf !=-1{break ;};};if _cf ==-1{return nil ,_ad .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u002c \u0073i\u0067n\u0061t\u0075\u0072\u0065\u0020\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u006f\u0072");
};_bfe :=_ed [:_cf ];_bg :=_cf +len (_db );_cd :=_ed [_bg :];if _bfe ==""||_cd ==""{return nil ,_ad .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u0069n\u0070\u0075\u0074,\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0069\u0067\u0069n\u0061\u006c \u006f\u0072\u0020\u0073\u0069\u0067n\u0061\u0074u\u0072\u0065");
};_fac ,_cgd :=_ef .StdEncoding .DecodeString (_bfe );if _cgd !=nil {return nil ,_ad .Errorf ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u006f\u0072\u0069\u0067\u0069\u006ea\u006c");};_gf ,_cgd :=_ef .StdEncoding .DecodeString (_cd );
if _cgd !=nil {return nil ,_ad .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065");};_aa ,_ :=_fag .Decode ([]byte (_dg ));if _aa ==nil {return nil ,_ad .Errorf ("\u0050\u0075\u0062\u004b\u0065\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};_adf ,_cgd :=_bbg .ParsePKIXPublicKey (_aa .Bytes );if _cgd !=nil {return nil ,_cgd ;};_dca :=_adf .(*_c .PublicKey );if _dca ==nil {return nil ,_ad .Errorf ("\u0050u\u0062\u004b\u0065\u0079\u0020\u0063\u006f\u006e\u0076\u0065\u0072s\u0069\u006f\u006e\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};_ada :=_bf .New ();_ada .Write (_fac );_cgdg :=_ada .Sum (nil );_cgd =_c .VerifyPKCS1v15 (_dca ,_fg .SHA512 ,_cgdg ,_gf );if _cgd !=nil {return nil ,_cgd ;};return _fac ,nil ;};func MakeUnlicensedKey ()*LicenseKey {_gbb :=LicenseKey {};_gbb .CustomerName ="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";
_gbb .Tier =LicenseTierUnlicensed ;_gbb .CreatedAt =_eg .Now ().UTC ();_gbb .CreatedAtInt =_gbb .CreatedAt .Unix ();return &_gbb ;};const _efg ="U\u004eI\u0050\u0044\u0046\u005f\u0043\u0055\u0053\u0054O\u004d\u0045\u0052\u005fNA\u004d\u0045";func init (){_aec :=_a .Getenv (_aagb );
_gfe :=_a .Getenv (_efg );if len (_aec )==0||len (_gfe )==0{return ;};_fba ,_cfe :=_g .ReadFile (_aec );if _cfe !=nil {_ee .Log .Error ("\u0055\u006eab\u006c\u0065\u0020t\u006f\u0020\u0072\u0065ad \u006cic\u0065\u006e\u0073\u0065\u0020\u0063\u006fde\u0020\u0066\u0069\u006c\u0065\u003a\u0020%\u0076",_cfe );
return ;};_cfe =SetLicenseKey (string (_fba ),_gfe );if _cfe !=nil {_ee .Log .Error ("\u0055\u006e\u0061b\u006c\u0065\u0020\u0074o\u0020\u006c\u006f\u0061\u0064\u0020\u006ci\u0063\u0065\u006e\u0073\u0065\u0020\u0063\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_cfe );
return ;};};func (_fgb defaultStateHolder )loadState (_dga string )(reportState ,error ){_bcd :=_gbda ();if len (_bcd )==0{return reportState {},_bbf .New ("\u0068\u006fm\u0065\u0020\u0064i\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");};_eca :=_d .Join (_bcd ,"\u002eu\u006e\u0069\u0064\u006f\u0063");
_fcb :=_a .MkdirAll (_eca ,0777);if _fcb !=nil {return reportState {},_fcb ;};if len (_dga )< 20{return reportState {},_bbf .New ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006b\u0065\u0079");};_aeb :=[]byte (_dga );_bdcf :=_bf .Sum512_256 (_aeb [:20]);
_eed :=_ea .EncodeToString (_bdcf [:]);_dgff :=_d .Join (_eca ,_eed );_cee ,_fcb :=_g .ReadFile (_dgff );if _fcb !=nil {if _a .IsNotExist (_fcb ){return reportState {},nil ;};_ee .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fcb );return reportState {},_bbf .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061");
};const _eec ="\u0068\u00619\u004e\u004b\u0038]\u0052\u0062\u004c\u002a\u006d\u0034\u004c\u004b\u0057";_cee ,_fcb =_eged ([]byte (_eec ),_cee );if _fcb !=nil {return reportState {},_fcb ;};var _cgdf reportState ;_fcb =_fc .Unmarshal (_cee ,&_cgdf );if _fcb !=nil {_ee .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0076",_fcb );
return reportState {},_bbf .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061");};return _cgdf ,nil ;};func _gbda ()string {_bbbg :=_a .Getenv ("\u0048\u004f\u004d\u0045");if len (_bbbg )==0{_bbbg ,_ =_a .UserHomeDir ();};return _bbbg ;
};type meteredStatusForm struct{};func (_ccd *LicenseKey )isExpired ()bool {return _ccd .getExpiryDateToCompare ().After (*_ccd .ExpiresAt )};var _ced map[string ]struct{};func SetMeteredKey (apiKey string )error {if len (apiKey )==0{_ee .Log .Error ("\u004d\u0065\u0074\u0065\u0072e\u0064\u0020\u004c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u0041\u0050\u0049 \u004b\u0065\u0079\u0020\u006d\u0075\u0073\u0074\u0020\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0065\u006d\u0070\u0074\u0079");
_ee .Log .Error ("\u002d\u0020\u0047\u0072\u0061\u0062\u0020\u006f\u006e\u0065\u0020\u0069\u006e\u0020\u0074h\u0065\u0020\u0046\u0072\u0065\u0065\u0020\u0054\u0069\u0065\u0072\u0020\u0061t\u0020\u0068\u0074\u0074\u0070\u0073\u003a\u002f\u002f\u0063\u006c\u006fud\u002e\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _ad .Errorf ("\u006de\u0074\u0065\u0072e\u0064\u0020\u006ci\u0063en\u0073\u0065\u0020\u0061\u0070\u0069\u0020k\u0065\u0079\u0020\u006d\u0075\u0073\u0074\u0020\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0065\u006d\u0070\u0074\u0079\u003a\u0020\u0063\u0072\u0065\u0061\u0074\u0065 o\u006ee\u0020\u0061\u0074\u0020\u0068\u0074t\u0070\u0073\u003a\u002f\u002fc\u006c\u006f\u0075\u0064\u002e\u0075\u006e\u0069\u0064\u006f\u0063.\u0069\u006f");
};if _efbg !=nil &&(_efbg ._bba ||_efbg .Tier !=LicenseTierUnlicensed ){_ee .Log .Error ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0043\u0061\u006e\u006eo\u0074 \u0073\u0065\u0074\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u006b\u0065\u0079\u0020\u0074\u0077\u0069c\u0065\u0020\u002d\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u006a\u0075\u0073\u0074\u0020\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0069z\u0065\u0020\u006f\u006e\u0063\u0065");
return _bbf .New ("\u006c\u0069\u0063en\u0073\u0065\u0020\u006b\u0065\u0079\u0020\u0061\u006c\u0072\u0065\u0061\u0064\u0079\u0020\u0073\u0065\u0074");};_geb :=_gea ();_geb ._bea =apiKey ;_ebg ,_dbg :=_geb .getStatus ();if _dbg !=nil {return _dbg ;};if !_ebg .Valid {return _bbf .New ("\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0076\u0061\u006c\u0069\u0064");
};_eee :=&LicenseKey {_bba :true ,_fce :apiKey };_efbg =_eee ;return nil ;};func (_ff *LicenseKey )Validate ()error {if _ff ._bba {return nil ;};if len (_ff .LicenseId )< 10{return _ad .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020L\u0069\u0063\u0065n\u0073e\u0020\u0049\u0064");
};if len (_ff .CustomerId )< 10{return _ad .Errorf ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065:\u0020C\u0075\u0073\u0074\u006f\u006d\u0065\u0072 \u0049\u0064");};if len (_ff .CustomerName )< 1{return _ad .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069c\u0065\u006e\u0073\u0065\u003a\u0020\u0043u\u0073\u0074\u006f\u006d\u0065\u0072\u0020\u004e\u0061\u006d\u0065");
};if _gg .After (_ff .CreatedAt ){return _ad .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u0065\u0064 \u0041\u0074\u0020\u0069\u0073 \u0069\u006ev\u0061\u006c\u0069\u0064");
};if _ff .ExpiresAt ==nil {_ga :=_ff .CreatedAt .AddDate (1,0,0);if _cc .After (_ga ){_ga =_cc ;};_ff .ExpiresAt =&_ga ;};if _ff .CreatedAt .After (*_ff .ExpiresAt ){return _ad .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u0065\u0064\u0020\u0041\u0074 \u0063a\u006e\u006e\u006f\u0074 \u0062\u0065 \u0047\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0045\u0078\u0070\u0069\u0072\u0065\u0073\u0020\u0041\u0074");
};if _ff .isExpired (){return _ad .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020l\u0069\u0063\u0065ns\u0065\u003a\u0020\u0054\u0068\u0065 \u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u0068\u0061\u0073\u0020\u0061\u006c\u0072e\u0061\u0064\u0079\u0020\u0065\u0078\u0070\u0069r\u0065\u0064");
};if len (_ff .CreatorName )< 1{return _ad .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u0020na\u006d\u0065");};if len (_ff .CreatorEmail )< 1{return _ad .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069c\u0065\u006e\u0073\u0065\u003a\u0020\u0043r\u0065\u0061\u0074\u006f\u0072\u0020\u0065\u006d\u0061\u0069\u006c");
};if _ff .CreatedAt .After (_cga ){if !_ff .UniPDF {return _ad .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065:\u0020\u0054\u0068\u0069\u0073\u0020\u0055\u006e\u0069\u0044\u006f\u0063\u0020k\u0065\u0079\u0020\u0069\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069d \u0066\u006f\u0072\u0020\u0055\u006e\u0069\u0050\u0044\u0046");
};};return nil ;};