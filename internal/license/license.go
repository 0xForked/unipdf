//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package license ;import (_ca "bytes";_b "compress/gzip";_d "crypto";_ae "crypto/aes";_ad "crypto/cipher";_gd "crypto/hmac";_cb "crypto/rand";_e "crypto/rsa";_ce "crypto/sha256";_gcc "crypto/sha512";_dgd "crypto/x509";_cgg "encoding/base64";_bd "encoding/hex";
_gaa "encoding/json";_gg "encoding/pem";_fb "errors";_ga "fmt";_db "github.com/unidoc/unipdf/v3/common";_c "io";_dg "io/ioutil";_gce "net";_f "net/http";_gc "os";_cf "path/filepath";_cg "sort";_de "strings";_cd "sync";_a "time";);const _ccec ="\u0055\u004e\u0049\u0050DF\u005f\u004c\u0049\u0043\u0045\u004e\u0053\u0045\u005f\u0050\u0041\u0054\u0048";
func _fbgg ()string {_bdc :=_gc .Getenv ("\u0048\u004f\u004d\u0045");if len (_bdc )==0{_bdc ,_ =_gc .UserHomeDir ();};return _bdc ;};var _cbd =_a .Date (2010,1,1,0,0,0,0,_a .UTC );type reportState struct{Instance string `json:"inst"`;Next string `json:"n"`;
Docs int64 `json:"d"`;NumErrors int64 `json:"e"`;LimitDocs bool `json:"ld"`;RemainingDocs int64 `json:"rd"`;LastReported _a .Time `json:"lr"`;LastWritten _a .Time `json:"lw"`;Usage map[string ]int `json:"u"`;};func (_cede *LicenseKey )isExpired ()bool {return _cede .getExpiryDateToCompare ().After (*_cede .ExpiresAt );
};func SetMeteredKeyPersistentCache (val bool ){_afg ._ggb =val };var _afg =MakeUnlicensedKey ();func _cdg (_ed string )(LicenseKey ,error ){var _af LicenseKey ;_efa ,_cbc :=_cgd (_gf ,_adc ,_ed );if _cbc !=nil {return _af ,_cbc ;};_dgc ,_cbc :=_eeb (_fed ,_efa );
if _cbc !=nil {return _af ,_cbc ;};_cbc =_gaa .Unmarshal (_dgc ,&_af );if _cbc !=nil {return _af ,_cbc ;};_af .CreatedAt =_a .Unix (_af .CreatedAtInt ,0);if _af .ExpiresAtInt > 0{_fbf :=_a .Unix (_af .ExpiresAtInt ,0);_af .ExpiresAt =&_fbf ;};return _af ,nil ;
};func _fbc ()(_gce .IP ,error ){_cbee ,_faa :=_gce .Dial ("\u0075\u0064\u0070","\u0038\u002e\u0038\u002e\u0038\u002e\u0038\u003a\u0038\u0030");if _faa !=nil {return nil ,_faa ;};defer _cbee .Close ();_bfd :=_cbee .LocalAddr ().(*_gce .UDPAddr );return _bfd .IP ,nil ;
};func (_bad *LicenseKey )ToString ()string {if _bad ._agf {return "M\u0065t\u0065\u0072\u0065\u0064\u0020\u0073\u0075\u0062s\u0063\u0072\u0069\u0070ti\u006f\u006e";};_egb :=_ga .Sprintf ("\u004ci\u0063e\u006e\u0073\u0065\u0020\u0049\u0064\u003a\u0020\u0025\u0073\u000a",_bad .LicenseId );
_egb +=_ga .Sprintf ("\u0043\u0075s\u0074\u006f\u006de\u0072\u0020\u0049\u0064\u003a\u0020\u0025\u0073\u000a",_bad .CustomerId );_egb +=_ga .Sprintf ("\u0043u\u0073t\u006f\u006d\u0065\u0072\u0020N\u0061\u006de\u003a\u0020\u0025\u0073\u000a",_bad .CustomerName );
_egb +=_ga .Sprintf ("\u0054i\u0065\u0072\u003a\u0020\u0025\u0073\n",_bad .Tier );_egb +=_ga .Sprintf ("\u0043r\u0065a\u0074\u0065\u0064\u0020\u0041\u0074\u003a\u0020\u0025\u0073\u000a",_db .UtcTimeFormat (_bad .CreatedAt ));if _bad .ExpiresAt ==nil {_egb +="\u0045x\u0070i\u0072\u0065\u0073\u0020\u0041t\u003a\u0020N\u0065\u0076\u0065\u0072\u000a";
}else {_egb +=_ga .Sprintf ("\u0045x\u0070i\u0072\u0065\u0073\u0020\u0041\u0074\u003a\u0020\u0025\u0073\u000a",_db .UtcTimeFormat (*_bad .ExpiresAt ));};_egb +=_ga .Sprintf ("\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u003a\u0020\u0025\u0073\u0020<\u0025\u0073\u003e\u000a",_bad .CreatorName ,_bad .CreatorEmail );
return _egb ;};var _ffa map[string ]int ;type meteredUsageCheckinResp struct{Instance string `json:"inst"`;Next string `json:"next"`;Success bool `json:"success"`;Message string `json:"message"`;RemainingDocs int `json:"rd"`;LimitDocs bool `json:"ld"`;
};type meteredClient struct{_dfd string ;_fga string ;_bda *_f .Client ;};func _dff ()([]string ,[]string ,error ){_deg ,_daa :=_gce .Interfaces ();if _daa !=nil {return nil ,nil ,_daa ;};var _fgf []string ;var _fgd []string ;for _ ,_aea :=range _deg {if _aea .Flags &_gce .FlagUp ==0||_ca .Equal (_aea .HardwareAddr ,nil ){continue ;
};_dag ,_dcbg :=_aea .Addrs ();if _dcbg !=nil {return nil ,nil ,_dcbg ;};_caeb :=0;for _ ,_cggc :=range _dag {var _bcg _gce .IP ;switch _edf :=_cggc .(type ){case *_gce .IPNet :_bcg =_edf .IP ;case *_gce .IPAddr :_bcg =_edf .IP ;};if _bcg .IsLoopback (){continue ;
};if _bcg .To4 ()==nil {continue ;};_fgd =append (_fgd ,_bcg .String ());_caeb ++;};_ccd :=_aea .HardwareAddr .String ();if _ccd !=""&&_caeb > 0{_fgf =append (_fgf ,_ccd );};};return _fgf ,_fgd ,nil ;};func (_ceb *LicenseKey )TypeToString ()string {if _ceb ._agf {return "M\u0065t\u0065\u0072\u0065\u0064\u0020\u0073\u0075\u0062s\u0063\u0072\u0069\u0070ti\u006f\u006e";
};if _ceb .Tier ==LicenseTierUnlicensed {return "\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";};if _ceb .Tier ==LicenseTierCommunity {return "\u0041\u0047PL\u0076\u0033\u0020O\u0070\u0065\u006e\u0020Sou\u0072ce\u0020\u0043\u006f\u006d\u006d\u0075\u006eit\u0079\u0020\u004c\u0069\u0063\u0065\u006es\u0065";
};if _ceb .Tier ==LicenseTierIndividual ||_ceb .Tier =="\u0069\u006e\u0064i\u0065"{return "\u0043\u006f\u006dm\u0065\u0072\u0063\u0069a\u006c\u0020\u004c\u0069\u0063\u0065\u006es\u0065\u0020\u002d\u0020\u0049\u006e\u0064\u0069\u0076\u0069\u0064\u0075\u0061\u006c";
};return "\u0043\u006fm\u006d\u0065\u0072\u0063\u0069\u0061\u006c\u0020\u004c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u002d\u0020\u0042\u0075\u0073\u0069ne\u0073\u0073";};func GetMeteredState ()(MeteredStatus ,error ){if _afg ==nil {return MeteredStatus {},_fb .New ("\u006c\u0069\u0063\u0065ns\u0065\u0020\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");
};if !_afg ._agf ||len (_afg ._cag )==0{return MeteredStatus {},_fb .New ("\u0061p\u0069 \u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");};_gae ,_dd :=_fdeb .loadState (_afg ._cag );if _dd !=nil {_db .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dd );
return MeteredStatus {},_dd ;};if _gae .Docs > 0{_dda :=_ccag ("","",true );if _dda !=nil {return MeteredStatus {},_dda ;};};_bdae .Lock ();defer _bdae .Unlock ();_dfdc :=_bag ();_dfdc ._fga =_afg ._cag ;_ffb ,_dd :=_dfdc .getStatus ();if _dd !=nil {return MeteredStatus {},_dd ;
};if !_ffb .Valid {return MeteredStatus {},_fb .New ("\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0076\u0061\u006c\u0069\u0064");};_gdc :=MeteredStatus {OK :true ,Credits :_ffb .OrgCredits ,Used :_ffb .OrgUsed };return _gdc ,nil ;};func _ggg (_gdb ,_ffaf []byte )([]byte ,error ){_gge ,_fefd :=_ae .NewCipher (_gdb );
if _fefd !=nil {return nil ,_fefd ;};_gcf :=make ([]byte ,_ae .BlockSize +len (_ffaf ));_gdgc :=_gcf [:_ae .BlockSize ];if _ ,_cba :=_c .ReadFull (_cb .Reader ,_gdgc );_cba !=nil {return nil ,_cba ;};_fgg :=_ad .NewCFBEncrypter (_gge ,_gdgc );_fgg .XORKeyStream (_gcf [_ae .BlockSize :],_ffaf );
_gcd :=make ([]byte ,_cgg .URLEncoding .EncodedLen (len (_gcf )));_cgg .URLEncoding .Encode (_gcd ,_gcf );return _gcd ,nil ;};func MakeUnlicensedKey ()*LicenseKey {_gad :=LicenseKey {};_gad .CustomerName ="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";
_gad .Tier =LicenseTierUnlicensed ;_gad .CreatedAt =_a .Now ().UTC ();_gad .CreatedAtInt =_gad .CreatedAt .Unix ();return &_gad ;};func _daf (_bacb ,_gcg string )string {_cfda :=[]byte (_bacb );_bbb :=_gd .New (_ce .New ,_cfda );_bbb .Write ([]byte (_gcg ));
return _cgg .StdEncoding .EncodeToString (_bbb .Sum (nil ));};var _fdeb stateLoader =defaultStateHolder {};func SetMeteredKey (apiKey string )error {if len (apiKey )==0{_db .Log .Error ("\u004d\u0065\u0074\u0065\u0072e\u0064\u0020\u004c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u0041\u0050\u0049 \u004b\u0065\u0079\u0020\u006d\u0075\u0073\u0074\u0020\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0065\u006d\u0070\u0074\u0079");
_db .Log .Error ("\u002d\u0020\u0047\u0072\u0061\u0062\u0020\u006f\u006e\u0065\u0020\u0069\u006e\u0020\u0074h\u0065\u0020\u0046\u0072\u0065\u0065\u0020\u0054\u0069\u0065\u0072\u0020\u0061t\u0020\u0068\u0074\u0074\u0070\u0073\u003a\u002f\u002f\u0063\u006c\u006fud\u002e\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _ga .Errorf ("\u006de\u0074\u0065\u0072e\u0064\u0020\u006ci\u0063en\u0073\u0065\u0020\u0061\u0070\u0069\u0020k\u0065\u0079\u0020\u006d\u0075\u0073\u0074\u0020\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0065\u006d\u0070\u0074\u0079\u003a\u0020\u0063\u0072\u0065\u0061\u0074\u0065 o\u006ee\u0020\u0061\u0074\u0020\u0068\u0074t\u0070\u0073\u003a\u002f\u002fc\u006c\u006f\u0075\u0064\u002e\u0075\u006e\u0069\u0064\u006f\u0063.\u0069\u006f");
};if _afg !=nil &&(_afg ._agf ||_afg .Tier !=LicenseTierUnlicensed ){_db .Log .Error ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0043\u0061\u006e\u006eo\u0074 \u0073\u0065\u0074\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u006b\u0065\u0079\u0020\u0074\u0077\u0069c\u0065\u0020\u002d\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u006a\u0075\u0073\u0074\u0020\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0069z\u0065\u0020\u006f\u006e\u0063\u0065");
return _fb .New ("\u006c\u0069\u0063en\u0073\u0065\u0020\u006b\u0065\u0079\u0020\u0061\u006c\u0072\u0065\u0061\u0064\u0079\u0020\u0073\u0065\u0074");};_bga :=_bag ();_bga ._fga =apiKey ;_gfd ,_cgce :=_bga .getStatus ();if _cgce !=nil {return _cgce ;};if !_gfd .Valid {return _fb .New ("\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0076\u0061\u006c\u0069\u0064");
};_cage :=&LicenseKey {_agf :true ,_cag :apiKey ,_ggb :true };_afg =_cage ;return nil ;};type meteredUsageCheckinForm struct{Instance string `json:"inst"`;Next string `json:"next"`;UsageNumber int `json:"usage_number"`;NumFailed int64 `json:"num_failed"`;
Hostname string `json:"hostname"`;LocalIP string `json:"local_ip"`;MacAddress string `json:"mac_address"`;Package string `json:"package"`;PackageVersion string `json:"package_version"`;Usage map[string ]int `json:"u"`;IsPersistentCache bool `json:"is_persistent_cache"`;
Timestamp int64 `json:"timestamp"`;};var _bdae =&_cd .Mutex {};func (_ac *LicenseKey )Validate ()error {if _ac ._agf {return nil ;};if len (_ac .LicenseId )< 10{return _ga .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020L\u0069\u0063\u0065n\u0073e\u0020\u0049\u0064");
};if len (_ac .CustomerId )< 10{return _ga .Errorf ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065:\u0020C\u0075\u0073\u0074\u006f\u006d\u0065\u0072 \u0049\u0064");};if len (_ac .CustomerName )< 1{return _ga .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069c\u0065\u006e\u0073\u0065\u003a\u0020\u0043u\u0073\u0074\u006f\u006d\u0065\u0072\u0020\u004e\u0061\u006d\u0065");
};if _cbd .After (_ac .CreatedAt ){return _ga .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u0065\u0064 \u0041\u0074\u0020\u0069\u0073 \u0069\u006ev\u0061\u006c\u0069\u0064");
};if _ac .ExpiresAt ==nil {_agb :=_ac .CreatedAt .AddDate (1,0,0);if _dfc .After (_agb ){_agb =_dfc ;};_ac .ExpiresAt =&_agb ;};if _ac .CreatedAt .After (*_ac .ExpiresAt ){return _ga .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u0065\u0064\u0020\u0041\u0074 \u0063a\u006e\u006e\u006f\u0074 \u0062\u0065 \u0047\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0045\u0078\u0070\u0069\u0072\u0065\u0073\u0020\u0041\u0074");
};if _ac .isExpired (){return _ga .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020l\u0069\u0063\u0065ns\u0065\u003a\u0020\u0054\u0068\u0065 \u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u0068\u0061\u0073\u0020\u0061\u006c\u0072e\u0061\u0064\u0079\u0020\u0065\u0078\u0070\u0069r\u0065\u0064");
};if len (_ac .CreatorName )< 1{return _ga .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u0020na\u006d\u0065");};if len (_ac .CreatorEmail )< 1{return _ga .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069c\u0065\u006e\u0073\u0065\u003a\u0020\u0043r\u0065\u0061\u0074\u006f\u0072\u0020\u0065\u006d\u0061\u0069\u006c");
};if _ac .CreatedAt .After (_agd ){if !_ac .UniPDF {return _ga .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065:\u0020\u0054\u0068\u0069\u0073\u0020\u0055\u006e\u0069\u0044\u006f\u0063\u0020k\u0065\u0079\u0020\u0069\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069d \u0066\u006f\u0072\u0020\u0055\u006e\u0069\u0050\u0044\u0046");
};};return nil ;};type defaultStateHolder struct{};func _bdaf (_bcf []byte )(_c .Reader ,error ){_gba :=new (_ca .Buffer );_ffd :=_b .NewWriter (_gba );_ffd .Write (_bcf );_ace :=_ffd .Close ();if _ace !=nil {return nil ,_ace ;};return _gba ,nil ;};func (_eb defaultStateHolder )updateState (_dcd ,_cff ,_deb string ,_cadc int ,_geg bool ,_aab int ,_cee int ,_cgdc _a .Time ,_gbc map[string ]int )error {_adf :=_fbgg ();
if len (_adf )==0{return _fb .New ("\u0068\u006fm\u0065\u0020\u0064i\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");};_bbd :=_cf .Join (_adf ,"\u002eu\u006e\u0069\u0064\u006f\u0063");_efg :=_gc .MkdirAll (_bbd ,0777);if _efg !=nil {return _efg ;
};if len (_dcd )< 20{return _fb .New ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006b\u0065\u0079");};_bca :=[]byte (_dcd );_dac :=_gcc .Sum512_256 (_bca [:20]);_bfg :=_bd .EncodeToString (_dac [:]);_dec :=_cf .Join (_bbd ,_bfg );var _fcec reportState ;
_fcec .Docs =int64 (_cadc );_fcec .NumErrors =int64 (_cee );_fcec .LimitDocs =_geg ;_fcec .RemainingDocs =int64 (_aab );_fcec .LastWritten =_a .Now ().UTC ();_fcec .LastReported =_cgdc ;_fcec .Instance =_cff ;_fcec .Next =_deb ;_fcec .Usage =_gbc ;_geb ,_efg :=_gaa .Marshal (_fcec );
if _efg !=nil {return _efg ;};const _dgcb ="\u0068\u00619\u004e\u004b\u0038]\u0052\u0062\u004c\u002a\u006d\u0034\u004c\u004b\u0057";_geb ,_efg =_ggg ([]byte (_dgcb ),_geb );if _efg !=nil {return _efg ;};_efg =_dg .WriteFile (_dec ,_geb ,0600);if _efg !=nil {return _efg ;
};return nil ;};var _dfc =_a .Date (2020,1,1,0,0,0,0,_a .UTC );func _bag ()*meteredClient {_edg :=meteredClient {_dfd :"h\u0074\u0074\u0070\u0073\u003a\u002f/\u0063\u006c\u006f\u0075\u0064\u002e\u0075\u006e\u0069d\u006f\u0063\u002ei\u006f/\u0061\u0070\u0069",_bda :&_f .Client {Timeout :30*_a .Second }};
if _eeff :=_gc .Getenv ("\u0055N\u0049\u0044\u004f\u0043_\u004c\u0049\u0043\u0045\u004eS\u0045_\u0053E\u0052\u0056\u0045\u0052\u005f\u0055\u0052L");_de .HasPrefix (_eeff ,"\u0068\u0074\u0074\u0070"){_edg ._dfd =_eeff ;};return &_edg ;};func _adb (_dgda *_f .Response )([]byte ,error ){var _bab []byte ;
_gec ,_gdg :=_gfgb (_dgda );if _gdg !=nil {return _bab ,_gdg ;};return _dg .ReadAll (_gec );};const (LicenseTierUnlicensed ="\u0075\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";LicenseTierCommunity ="\u0063o\u006d\u006d\u0075\u006e\u0069\u0074y";
LicenseTierIndividual ="\u0069\u006e\u0064\u0069\u0076\u0069\u0064\u0075\u0061\u006c";LicenseTierBusiness ="\u0062\u0075\u0073\u0069\u006e\u0065\u0073\u0073";);type LicenseKey struct{LicenseId string `json:"license_id"`;CustomerId string `json:"customer_id"`;
CustomerName string `json:"customer_name"`;Tier string `json:"tier"`;CreatedAt _a .Time `json:"-"`;CreatedAtInt int64 `json:"created_at"`;ExpiresAt *_a .Time `json:"-"`;ExpiresAtInt int64 `json:"expires_at"`;CreatedBy string `json:"created_by"`;CreatorName string `json:"creator_name"`;
CreatorEmail string `json:"creator_email"`;UniPDF bool `json:"unipdf"`;UniOffice bool `json:"unioffice"`;UniHTML bool `json:"unihtml"`;Trial bool `json:"trial"`;_agf bool ;_cag string ;_ggb bool ;};func (_cade defaultStateHolder )loadState (_aec string )(reportState ,error ){_decg :=_fbgg ();
if len (_decg )==0{return reportState {},_fb .New ("\u0068\u006fm\u0065\u0020\u0064i\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");};_age :=_cf .Join (_decg ,"\u002eu\u006e\u0069\u0064\u006f\u0063");_bcae :=_gc .MkdirAll (_age ,0777);if _bcae !=nil {return reportState {},_bcae ;
};if len (_aec )< 20{return reportState {},_fb .New ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006b\u0065\u0079");};_ddg :=[]byte (_aec );_bdf :=_gcc .Sum512_256 (_ddg [:20]);_dcb :=_bd .EncodeToString (_bdf [:]);_cce :=_cf .Join (_age ,_dcb );_dee ,_bcae :=_dg .ReadFile (_cce );
if _bcae !=nil {if _gc .IsNotExist (_bcae ){return reportState {},nil ;};_db .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bcae );return reportState {},_fb .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061");};const _bce ="\u0068\u00619\u004e\u004b\u0038]\u0052\u0062\u004c\u002a\u006d\u0034\u004c\u004b\u0057";
_dee ,_bcae =_gcecd ([]byte (_bce ),_dee );if _bcae !=nil {return reportState {},_bcae ;};var _bdb reportState ;_bcae =_gaa .Unmarshal (_dee ,&_bdb );if _bcae !=nil {_db .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0076",_bcae );
return reportState {},_fb .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061");};return _bdb ,nil ;};func _fc (_bf string ,_ec []byte )(string ,error ){_dgdf ,_ :=_gg .Decode ([]byte (_bf ));if _dgdf ==nil {return "",_ga .Errorf ("\u0050\u0072\u0069\u0076\u004b\u0065\u0079\u0020\u0066a\u0069\u006c\u0065\u0064");
};_bc ,_cad :=_dgd .ParsePKCS1PrivateKey (_dgdf .Bytes );if _cad !=nil {return "",_cad ;};_ee :=_gcc .New ();_ee .Write (_ec );_ced :=_ee .Sum (nil );_da ,_cad :=_e .SignPKCS1v15 (_cb .Reader ,_bc ,_d .SHA512 ,_ced );if _cad !=nil {return "",_cad ;};_ag :=_cgg .StdEncoding .EncodeToString (_ec );
_ag +="\u000a\u002b\u000a";_ag +=_cgg .StdEncoding .EncodeToString (_da );return _ag ,nil ;};func TrackUse (useKey string ){if _afg ==nil {return ;};if !_afg ._agf ||len (_afg ._cag )==0{return ;};if len (useKey )==0{return ;};_bdae .Lock ();defer _bdae .Unlock ();
if _ffa ==nil {_ffa =map[string ]int {};};_ffa [useKey ]++;};func (_ecf *meteredClient )checkinUsage (_gff meteredUsageCheckinForm )(meteredUsageCheckinResp ,error ){_gff .Package ="\u0075\u006e\u0069\u0070\u0064\u0066";_gff .PackageVersion =_db .Version ;
var _aae meteredUsageCheckinResp ;_bdg :=_ecf ._dfd +"\u002f\u006d\u0065\u0074er\u0065\u0064\u002f\u0075\u0073\u0061\u0067\u0065\u005f\u0063\u0068\u0065\u0063\u006bi\u006e";_fde ,_bbf :=_gaa .Marshal (_gff );if _bbf !=nil {return _aae ,_bbf ;};_bba ,_bbf :=_bdaf (_fde );
if _bbf !=nil {return _aae ,_bbf ;};_ega ,_bbf :=_f .NewRequest ("\u0050\u004f\u0053\u0054",_bdg ,_bba );if _bbf !=nil {return _aae ,_bbf ;};_ega .Header .Add ("\u0043\u006f\u006et\u0065\u006e\u0074\u002d\u0054\u0079\u0070\u0065","\u0061\u0070p\u006c\u0069\u0063a\u0074\u0069\u006f\u006e\u002f\u006a\u0073\u006f\u006e");
_ega .Header .Add ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");_ega .Header .Add ("\u0041c\u0063e\u0070\u0074\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");
_ega .Header .Add ("\u0058-\u0041\u0050\u0049\u002d\u004b\u0045Y",_ecf ._fga );_eab ,_bbf :=_ecf ._bda .Do (_ega );if _bbf !=nil {return _aae ,_bbf ;};defer _eab .Body .Close ();if _eab .StatusCode !=200{_gb ,_be :=_adb (_eab );if _be !=nil {return _aae ,_be ;
};_be =_gaa .Unmarshal (_gb ,&_aae );if _be !=nil {return _aae ,_be ;};return _aae ,_ga .Errorf ("\u0066\u0061i\u006c\u0065\u0064\u0020t\u006f\u0020c\u0068\u0065\u0063\u006b\u0069\u006e\u002c\u0020s\u0074\u0061\u0074\u0075\u0073\u0020\u0063\u006f\u0064\u0065\u0020\u0069s\u003a\u0020\u0025\u0064",_eab .StatusCode );
};_dbf :=_eab .Header .Get ("\u0058\u002d\u0055\u0043\u002d\u0053\u0069\u0067\u006ea\u0074\u0075\u0072\u0065");_egf :=_daf (_gff .MacAddress ,string (_fde ));if _egf !=_dbf {_db .Log .Error ("I\u006e\u0076\u0061l\u0069\u0064\u0020\u0072\u0065\u0073\u0070\u006f\u006e\u0073\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u002c\u0020\u0073\u0065t\u0020\u0074\u0068e\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u0073\u0065\u0072\u0076e\u0072\u0020\u0074\u006f \u0068\u0074\u0074\u0070s\u003a\u002f\u002f\u0063\u006c\u006f\u0075\u0064\u002e\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069o\u002f\u0061\u0070\u0069");
return _aae ,_fb .New ("\u0066\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u0063\u0068\u0065\u0063\u006b\u0069\u006e\u002c\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0065\u0072\u0076\u0065\u0072 \u0072\u0065\u0073\u0070\u006f\u006e\u0073\u0065");
};_bdab ,_bbf :=_adb (_eab );if _bbf !=nil {return _aae ,_bbf ;};_bbf =_gaa .Unmarshal (_bdab ,&_aae );if _bbf !=nil {return _aae ,_bbf ;};return _aae ,nil ;};const (_gf ="\u002d\u002d\u002d--\u0042\u0045\u0047\u0049\u004e\u0020\u0055\u004e\u0049D\u004fC\u0020L\u0049C\u0045\u004e\u0053\u0045\u0020\u004b\u0045\u0059\u002d\u002d\u002d\u002d\u002d";
_adc ="\u002d\u002d\u002d\u002d\u002d\u0045\u004e\u0044\u0020\u0055\u004e\u0049\u0044\u004f\u0043 \u004cI\u0043\u0045\u004e\u0053\u0045\u0020\u004b\u0045\u0059\u002d\u002d\u002d\u002d\u002d";);type meteredStatusResp struct{Valid bool `json:"valid"`;OrgCredits int64 `json:"org_credits"`;
OrgUsed int64 `json:"org_used"`;OrgRemaining int64 `json:"org_remaining"`;};func (_cfe *LicenseKey )IsLicensed ()bool {return _cfe .Tier !=LicenseTierUnlicensed ||_cfe ._agf };func _gfgb (_egaf *_f .Response )(_c .ReadCloser ,error ){var _bfb error ;var _fef _c .ReadCloser ;
switch _de .ToLower (_egaf .Header .Get ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067")){case "\u0067\u007a\u0069\u0070":_fef ,_bfb =_b .NewReader (_egaf .Body );if _bfb !=nil {return _fef ,_bfb ;};defer _fef .Close ();
default:_fef =_egaf .Body ;};return _fef ,nil ;};var _baf map[string ]struct{};func SetLicenseKey (content string ,customerName string )error {_cde ,_bac :=_cdg (content );if _bac !=nil {_db .Log .Error ("\u004c\u0069c\u0065\u006e\u0073\u0065\u0020\u0063\u006f\u0064\u0065\u0020\u0064\u0065\u0063\u006f\u0064\u0065\u0020\u0065\u0072\u0072\u006f\u0072: \u0025\u0076",_bac );
return _bac ;};if !_de .EqualFold (_cde .CustomerName ,customerName ){_db .Log .Error ("L\u0069ce\u006es\u0065 \u0063\u006f\u0064\u0065\u0020i\u0073\u0073\u0075e\u0020\u002d\u0020\u0043\u0075s\u0074\u006f\u006de\u0072\u0020\u006e\u0061\u006d\u0065\u0020\u006d\u0069\u0073\u006da\u0074\u0063\u0068, e\u0078\u0070\u0065\u0063\u0074\u0065d\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u0062\u0075\u0074\u0020\u0067o\u0074 \u0027\u0025\u0073\u0027",customerName ,_cde .CustomerName );
return _ga .Errorf ("\u0063\u0075\u0073\u0074\u006fm\u0065\u0072\u0020\u006e\u0061\u006d\u0065\u0020\u006d\u0069\u0073\u006d\u0061t\u0063\u0068\u002c\u0020\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u0062\u0075\u0074\u0020\u0067\u006f\u0074\u0020\u0027\u0025\u0073'",customerName ,_cde .CustomerName );
};_bac =_cde .Validate ();if _bac !=nil {_db .Log .Error ("\u004c\u0069\u0063\u0065\u006e\u0073e\u0020\u0063\u006f\u0064\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074i\u006f\u006e\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_bac );return _bac ;
};_afg =&_cde ;return nil ;};func GetLicenseKey ()*LicenseKey {if _afg ==nil {return nil ;};_efd :=*_afg ;return &_efd ;};func (_bb *meteredClient )getStatus ()(meteredStatusResp ,error ){var _dc meteredStatusResp ;_cfc :=_bb ._dfd +"\u002fm\u0065t\u0065\u0072\u0065\u0064\u002f\u0073\u0074\u0061\u0074\u0075\u0073";
var _ege meteredStatusForm ;_cca ,_egg :=_gaa .Marshal (_ege );if _egg !=nil {return _dc ,_egg ;};_fcd ,_egg :=_bdaf (_cca );if _egg !=nil {return _dc ,_egg ;};_dca ,_egg :=_f .NewRequest ("\u0050\u004f\u0053\u0054",_cfc ,_fcd );if _egg !=nil {return _dc ,_egg ;
};_dca .Header .Add ("\u0043\u006f\u006et\u0065\u006e\u0074\u002d\u0054\u0079\u0070\u0065","\u0061\u0070p\u006c\u0069\u0063a\u0074\u0069\u006f\u006e\u002f\u006a\u0073\u006f\u006e");_dca .Header .Add ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");
_dca .Header .Add ("\u0041c\u0063e\u0070\u0074\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");_dca .Header .Add ("\u0058-\u0041\u0050\u0049\u002d\u004b\u0045Y",_bb ._fga );_ff ,_egg :=_bb ._bda .Do (_dca );if _egg !=nil {return _dc ,_egg ;
};defer _ff .Body .Close ();if _ff .StatusCode !=200{return _dc ,_ga .Errorf ("\u0066\u0061i\u006c\u0065\u0064\u0020t\u006f\u0020c\u0068\u0065\u0063\u006b\u0069\u006e\u002c\u0020s\u0074\u0061\u0074\u0075\u0073\u0020\u0063\u006f\u0064\u0065\u0020\u0069s\u003a\u0020\u0025\u0064",_ff .StatusCode );
};_bfc ,_egg :=_adb (_ff );if _egg !=nil {return _dc ,_egg ;};_egg =_gaa .Unmarshal (_bfc ,&_dc );if _egg !=nil {return _dc ,_egg ;};return _dc ,nil ;};type MeteredStatus struct{OK bool ;Credits int64 ;Used int64 ;};func (_eg *LicenseKey )getExpiryDateToCompare ()_a .Time {if _eg .Trial {return _a .Now ().UTC ();
};return _db .ReleasedAt ;};type meteredStatusForm struct{};const _fed ="\u000a\u002d\u002d\u002d\u002d\u002d\u0042\u0045\u0047\u0049\u004e \u0050\u0055\u0042\u004c\u0049\u0043\u0020\u004b\u0045Y\u002d\u002d\u002d\u002d\u002d\u000a\u004d\u0049I\u0042\u0049\u006a\u0041NB\u0067\u006b\u0071\u0068\u006b\u0069G\u0039\u0077\u0030\u0042\u0041\u0051\u0045\u0046A\u0041\u004f\u0043\u0041\u0051\u0038\u0041\u004d\u0049\u0049\u0042\u0043\u0067\u004b\u0043\u0041\u0051\u0045A\u006dF\u0055\u0069\u0079\u0064\u0037\u0062\u0035\u0058\u006a\u0070\u006b\u0050\u0035\u0052\u0061\u0070\u0034\u0077\u000a\u0044\u0063\u0031d\u0079\u007a\u0049\u0051\u0034\u004c\u0065\u006b\u0078\u0072\u0076\u0079\u0074\u006e\u0045\u004d\u0070\u004e\u0055\u0062\u006f\u0036i\u0041\u0037\u0034\u0056\u0038\u0072\u0075\u005a\u004f\u0076\u0072\u0053\u0063\u0073\u0066\u0032\u0051\u0065\u004e9\u002f\u0071r\u0055\u0047\u0038\u0071\u0045\u0062\u0055\u0057\u0064\u006f\u0045\u0059\u0071+\u000a\u006f\u0074\u0046\u004e\u0041\u0046N\u0078\u006c\u0047\u0062\u0078\u0062\u0044\u0048\u0063\u0064\u0047\u0056\u0061\u004d\u0030\u004f\u0058\u0064\u0058g\u0044y\u004c5\u0061\u0049\u0045\u0061\u0067\u004c\u0030\u0063\u0035\u0070\u0077\u006a\u0049\u0064\u0050G\u0049\u006e\u0034\u0036\u0066\u0037\u0038\u0065\u004d\u004a\u002b\u004a\u006b\u0064\u0063\u0070\u0044\n\u0044\u004a\u0061\u0071\u0059\u0058d\u0072\u007a5\u004b\u0065\u0073\u0068\u006aS\u0069\u0049\u0061\u0061\u0037\u006d\u0065\u006e\u0042\u0049\u0041\u0058\u0053\u0034\u0055\u0046\u0078N\u0066H\u0068\u004e\u0030\u0048\u0043\u0059\u005a\u0059\u0071\u0051\u0047\u0037\u0062K+\u0073\u0035\u0072R\u0048\u006f\u006e\u0079\u0064\u004eW\u0045\u0047\u000a\u0048\u0038M\u0079\u0076\u00722\u0070\u0079\u0061\u0032K\u0072\u004d\u0075m\u0066\u006d\u0041\u0078\u0055\u0042\u0036\u0066\u0065\u006e\u0043\u002f4\u004f\u0030\u0057\u00728\u0067\u0066\u0050\u004f\u0055\u0038R\u0069\u0074\u006d\u0062\u0044\u0076\u0051\u0050\u0049\u0052\u0058\u004fL\u0034\u0076\u0054B\u0072\u0042\u0064\u0062a\u0041\u000a9\u006e\u0077\u004e\u0050\u002b\u0069\u002f\u002f\u0032\u0030\u004d\u00542\u0062\u0078\u006d\u0065\u0057\u0042\u002b\u0067\u0070\u0063\u0045\u0068G\u0070\u0058\u005a7\u0033\u0033\u0061\u007a\u0051\u0078\u0072\u0043\u0033\u004a\u0034\u0076\u0033C\u005a\u006d\u0045\u004eS\u0074\u0044\u004b\u002f\u004b\u0044\u0053\u0050\u004b\u0055\u0047\u0066\u00756\u000a\u0066\u0077I\u0044\u0041\u0051\u0041\u0042\u000a\u002d\u002d\u002d\u002d\u002dE\u004e\u0044\u0020\u0050\u0055\u0042\u004c\u0049\u0043 \u004b\u0045Y\u002d\u002d\u002d\u002d\u002d\n";
func init (){_gcec :=_gc .Getenv (_ccec );_fdga :=_gc .Getenv (_ccg );if len (_gcec )==0||len (_fdga )==0{return ;};_dfe ,_cga :=_dg .ReadFile (_gcec );if _cga !=nil {_db .Log .Error ("\u0055\u006eab\u006c\u0065\u0020t\u006f\u0020\u0072\u0065ad \u006cic\u0065\u006e\u0073\u0065\u0020\u0063\u006fde\u0020\u0066\u0069\u006c\u0065\u003a\u0020%\u0076",_cga );
return ;};_cga =SetLicenseKey (string (_dfe ),_fdga );if _cga !=nil {_db .Log .Error ("\u0055\u006e\u0061b\u006c\u0065\u0020\u0074o\u0020\u006c\u006f\u0061\u0064\u0020\u006ci\u0063\u0065\u006e\u0073\u0065\u0020\u0063\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_cga );
return ;};};func _gcecd (_dacg ,_faf []byte )([]byte ,error ){_aaca :=make ([]byte ,_cgg .URLEncoding .DecodedLen (len (_faf )));_bbc ,_cbcg :=_cgg .URLEncoding .Decode (_aaca ,_faf );if _cbcg !=nil {return nil ,_cbcg ;};_aaca =_aaca [:_bbc ];_cbg ,_cbcg :=_ae .NewCipher (_dacg );
if _cbcg !=nil {return nil ,_cbcg ;};if len (_aaca )< _ae .BlockSize {return nil ,_fb .New ("c\u0069p\u0068\u0065\u0072\u0074\u0065\u0078\u0074\u0020t\u006f\u006f\u0020\u0073ho\u0072\u0074");};_aef :=_aaca [:_ae .BlockSize ];_aaca =_aaca [_ae .BlockSize :];
_ged :=_ad .NewCFBDecrypter (_cbg ,_aef );_ged .XORKeyStream (_aaca ,_aaca );return _aaca ,nil ;};func _ccag (_dde string ,_bbg string ,_dbe bool )error {if _afg ==nil {return _fb .New ("\u006e\u006f\u0020\u006c\u0069\u0063\u0065\u006e\u0073e\u0020\u006b\u0065\u0079");
};if !_afg ._agf ||len (_afg ._cag )==0{return nil ;};if len (_dde )==0&&!_dbe {return _fb .New ("\u0064\u006f\u0063\u004b\u0065\u0079\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");};_bdae .Lock ();defer _bdae .Unlock ();if _baf ==nil {_baf =map[string ]struct{}{};
};if _ffa ==nil {_ffa =map[string ]int {};};_dfa :=0;_ ,_aacb :=_baf [_dde ];if !_aacb {_baf [_dde ]=struct{}{};_dfa ++;};if _dfa ==0{return nil ;};_ffa [_bbg ]++;_eabb :=_a .Now ();_ffaa ,_dfde :=_fdeb .loadState (_afg ._cag );if _dfde !=nil {_db .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dfde );
return _dfde ;};if _ffaa .Usage ==nil {_ffaa .Usage =map[string ]int {};};for _caf ,_fbd :=range _ffa {_ffaa .Usage [_caf ]+=_fbd ;};_ffa =nil ;const _egbd =24*_a .Hour ;const _bee =3*24*_a .Hour ;if len (_ffaa .Instance )==0||_eabb .Sub (_ffaa .LastReported )> _egbd ||(_ffaa .LimitDocs &&_ffaa .RemainingDocs <=_ffaa .Docs +int64 (_dfa ))||_dbe {_eabd ,_cfd :=_gc .Hostname ();
if _cfd !=nil {return _cfd ;};_bef :=_ffaa .Docs ;_cbe ,_abf ,_cfd :=_dff ();if _cfd !=nil {_db .Log .Debug ("\u0055\u006e\u0061b\u006c\u0065\u0020\u0074o\u0020\u0067\u0065\u0074\u0020\u006c\u006fc\u0061\u006c\u0020\u0061\u0064\u0064\u0072\u0065\u0073\u0073\u003a\u0020\u0025\u0073",_cfd .Error ());
_cbe =append (_cbe ,"\u0069n\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020n\u006ft\u0020a\u0076\u0061\u0069\u006c\u0061\u0062\u006ce");_abf =append (_abf ,"\u0069n\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020n\u006ft\u0020a\u0076\u0061\u0069\u006c\u0061\u0062\u006ce");
}else {_cg .Strings (_abf );_cg .Strings (_cbe );_egc ,_cfg :=_fbc ();if _cfg !=nil {return _cfg ;};_ggd :=false ;for _ ,_gffd :=range _abf {if _gffd ==_egc .String (){_ggd =true ;};};if !_ggd {_abf =append (_abf ,_egc .String ());};};_dacd :=_bag ();_dacd ._fga =_afg ._cag ;
_bef +=int64 (_dfa );_adg :=meteredUsageCheckinForm {Instance :_ffaa .Instance ,Next :_ffaa .Next ,UsageNumber :int (_bef ),NumFailed :_ffaa .NumErrors ,Hostname :_eabd ,LocalIP :_de .Join (_abf ,"\u002c\u0020"),MacAddress :_de .Join (_cbe ,"\u002c\u0020"),Package :"\u0075\u006e\u0069\u0070\u0064\u0066",PackageVersion :_db .Version ,Usage :_ffaa .Usage ,IsPersistentCache :_afg ._ggb ,Timestamp :_eabb .Unix ()};
if len (_cbe )==0{_adg .MacAddress ="\u006e\u006f\u006e\u0065";};_efc :=int64 (0);_fbg :=_ffaa .NumErrors ;_bdaea :=_eabb ;_afe :=0;_edd :=_ffaa .LimitDocs ;_gdce ,_cfd :=_dacd .checkinUsage (_adg );if _cfd !=nil {if _eabb .Sub (_ffaa .LastReported )> _bee {if !_gdce .Success {return _fb .New (_gdce .Message );
};return _fb .New ("\u0074\u006f\u006f\u0020\u006c\u006f\u006e\u0067\u0020\u0073\u0069\u006e\u0063\u0065\u0020\u006c\u0061\u0073\u0074\u0020\u0073\u0075\u0063\u0063e\u0073\u0073\u0066\u0075\u006c \u0063\u0068e\u0063\u006b\u0069\u006e");};_efc =_bef ;_fbg ++;
_bdaea =_ffaa .LastReported ;}else {_edd =_gdce .LimitDocs ;_afe =_gdce .RemainingDocs ;_fbg =0;};if len (_gdce .Instance )==0{_gdce .Instance =_adg .Instance ;};if len (_gdce .Next )==0{_gdce .Next =_adg .Next ;};_cfd =_fdeb .updateState (_dacd ._fga ,_gdce .Instance ,_gdce .Next ,int (_efc ),_edd ,_afe ,int (_fbg ),_bdaea ,nil );
if _cfd !=nil {return _cfd ;};if !_gdce .Success {return _ga .Errorf ("\u0065r\u0072\u006f\u0072\u003a\u0020\u0025s",_gdce .Message );};}else {_dfde =_fdeb .updateState (_afg ._cag ,_ffaa .Instance ,_ffaa .Next ,int (_ffaa .Docs )+_dfa ,_ffaa .LimitDocs ,int (_ffaa .RemainingDocs ),int (_ffaa .NumErrors ),_ffaa .LastReported ,_ffaa .Usage );
if _dfde !=nil {return _dfde ;};};return nil ;};func _eeb (_bcd string ,_cdc string )([]byte ,error ){var (_ded int ;_fd string ;);for _ ,_fd =range []string {"\u000a\u002b\u000a","\u000d\u000a\u002b\r\u000a","\u0020\u002b\u0020"}{if _ded =_de .Index (_cdc ,_fd );
_ded !=-1{break ;};};if _ded ==-1{return nil ,_ga .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u002c \u0073i\u0067n\u0061t\u0075\u0072\u0065\u0020\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u006f\u0072");};_cae :=_cdc [:_ded ];
_fa :=_ded +len (_fd );_cc :=_cdc [_fa :];if _cae ==""||_cc ==""{return nil ,_ga .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u0069n\u0070\u0075\u0074,\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0069\u0067\u0069n\u0061\u006c \u006f\u0072\u0020\u0073\u0069\u0067n\u0061\u0074u\u0072\u0065");
};_aa ,_ab :=_cgg .StdEncoding .DecodeString (_cae );if _ab !=nil {return nil ,_ga .Errorf ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u006f\u0072\u0069\u0067\u0069\u006ea\u006c");};_fdg ,_ab :=_cgg .StdEncoding .DecodeString (_cc );
if _ab !=nil {return nil ,_ga .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065");};_cef ,_ :=_gg .Decode ([]byte (_bcd ));if _cef ==nil {return nil ,_ga .Errorf ("\u0050\u0075\u0062\u004b\u0065\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};_ef ,_ab :=_dgd .ParsePKIXPublicKey (_cef .Bytes );if _ab !=nil {return nil ,_ab ;};_fe :=_ef .(*_e .PublicKey );if _fe ==nil {return nil ,_ga .Errorf ("\u0050u\u0062\u004b\u0065\u0079\u0020\u0063\u006f\u006e\u0076\u0065\u0072s\u0069\u006f\u006e\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};_ead :=_gcc .New ();_ead .Write (_aa );_eef :=_ead .Sum (nil );_ab =_e .VerifyPKCS1v15 (_fe ,_d .SHA512 ,_eef ,_fdg );if _ab !=nil {return nil ,_ab ;};return _aa ,nil ;};var _agd =_a .Date (2019,6,6,0,0,0,0,_a .UTC );const _ccg ="U\u004eI\u0050\u0044\u0046\u005f\u0043\u0055\u0053\u0054O\u004d\u0045\u0052\u005fNA\u004d\u0045";
type stateLoader interface{loadState (_gfg string )(reportState ,error );updateState (_fdd ,_fcb ,_aac string ,_eea int ,_ge bool ,_bec int ,_gfc int ,_fce _a .Time ,_ccaf map[string ]int )error ;};func Track (docKey string ,useKey string )error {return _ccag (docKey ,useKey ,!_afg ._ggb )};
func _cgd (_df string ,_cgc string ,_gde string )(string ,error ){_gaae :=_de .Index (_gde ,_df );if _gaae ==-1{return "",_ga .Errorf ("\u0068\u0065a\u0064\u0065\u0072 \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_fg :=_de .Index (_gde ,_cgc );
if _fg ==-1{return "",_ga .Errorf ("\u0066\u006fo\u0074\u0065\u0072 \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_eca :=_gaae +len (_df )+1;return _gde [_eca :_fg -1],nil ;};