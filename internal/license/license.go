//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package license ;import (_ac "bytes";_e "compress/gzip";_f "crypto";_fe "crypto/aes";_af "crypto/cipher";_dc "crypto/rand";_cd "crypto/rsa";_gf "crypto/sha512";_ae "crypto/x509";_ec "encoding/base64";_ab "encoding/hex";_ce "encoding/json";_ag "encoding/pem";
_dd "errors";_c "fmt";_ba "github.com/unidoc/unipdf/v3/common";_a "io";_aa "io/ioutil";_df "net";_ef "net/http";_db "os";_ed "path/filepath";_fbe "sort";_b "strings";_fb "sync";_g "time";);func MakeUnlicensedKey ()*LicenseKey {_fae :=LicenseKey {};_fae .CustomerName ="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";
_fae .Tier =LicenseTierUnlicensed ;_fae .CreatedAt =_g .Now ().UTC ();_fae .CreatedAtInt =_fae .CreatedAt .Unix ();return &_fae ;};func GetMeteredState ()(MeteredStatus ,error ){if _gcd ==nil {return MeteredStatus {},_dd .New ("\u006c\u0069\u0063\u0065ns\u0065\u0020\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");
};if !_gcd ._gcg ||len (_gcd ._bff )==0{return MeteredStatus {},_dd .New ("\u0061p\u0069 \u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");};_eea ,_dbfc :=_fda .loadState (_gcd ._bff );if _dbfc !=nil {_ba .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dbfc );
return MeteredStatus {},_dbfc ;};if _eea .Docs > 0{_bdd :=_bed ("","",true );if _bdd !=nil {return MeteredStatus {},_bdd ;};};_cbf .Lock ();defer _cbf .Unlock ();_dbd :=_ace ();_dbd ._acg =_gcd ._bff ;_dba ,_dbfc :=_dbd .getStatus ();if _dbfc !=nil {return MeteredStatus {},_dbfc ;
};if !_dba .Valid {return MeteredStatus {},_dd .New ("\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0076\u0061\u006c\u0069\u0064");};_gde :=MeteredStatus {OK :true ,Credits :_dba .OrgCredits ,Used :_dba .OrgUsed };return _gde ,nil ;};const (_bad ="\u002d\u002d\u002d--\u0042\u0045\u0047\u0049\u004e\u0020\u0055\u004e\u0049D\u004fC\u0020L\u0049C\u0045\u004e\u0053\u0045\u0020\u004b\u0045\u0059\u002d\u002d\u002d\u002d\u002d";
_bg ="\u002d\u002d\u002d\u002d\u002d\u0045\u004e\u0044\u0020\u0055\u004e\u0049\u0044\u004f\u0043 \u004cI\u0043\u0045\u004e\u0053\u0045\u0020\u004b\u0045\u0059\u002d\u002d\u002d\u002d\u002d";);const _ffe ="U\u004eI\u0050\u0044\u0046\u005f\u0043\u0055\u0053\u0054O\u004d\u0045\u0052\u005fNA\u004d\u0045";
type stateLoader interface{loadState (_gb string )(reportState ,error );updateState (_be ,_gce ,_aea string ,_gfd int ,_cba bool ,_cbc int ,_dac int ,_ebe _g .Time ,_adg map[string ]int )error ;};func (_fbd *meteredClient )checkinUsage (_cae meteredUsageCheckinForm )(meteredUsageCheckinResp ,error ){_cae .Package ="\u0075\u006e\u0069\u0070\u0064\u0066";
_cae .PackageVersion =_ba .Version ;var _fgg meteredUsageCheckinResp ;_eeg :=_fbd ._efe +"\u002f\u006d\u0065\u0074er\u0065\u0064\u002f\u0075\u0073\u0061\u0067\u0065\u005f\u0063\u0068\u0065\u0063\u006bi\u006e";_efef ,_fga :=_ce .Marshal (_cae );if _fga !=nil {return _fgg ,_fga ;
};_gcc ,_fga :=_dab (_efef );if _fga !=nil {return _fgg ,_fga ;};_fged ,_fga :=_ef .NewRequest ("\u0050\u004f\u0053\u0054",_eeg ,_gcc );if _fga !=nil {return _fgg ,_fga ;};_fged .Header .Add ("\u0043\u006f\u006et\u0065\u006e\u0074\u002d\u0054\u0079\u0070\u0065","\u0061\u0070p\u006c\u0069\u0063a\u0074\u0069\u006f\u006e\u002f\u006a\u0073\u006f\u006e");
_fged .Header .Add ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");_fged .Header .Add ("\u0041c\u0063e\u0070\u0074\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");
_fged .Header .Add ("\u0058-\u0041\u0050\u0049\u002d\u004b\u0045Y",_fbd ._acg );_bfg ,_fga :=_fbd ._dbb .Do (_fged );if _fga !=nil {return _fgg ,_fga ;};defer _bfg .Body .Close ();if _bfg .StatusCode !=200{return _fgg ,_c .Errorf ("\u0066\u0061i\u006c\u0065\u0064\u0020t\u006f\u0020c\u0068\u0065\u0063\u006b\u0069\u006e\u002c\u0020s\u0074\u0061\u0074\u0075\u0073\u0020\u0063\u006f\u0064\u0065\u0020\u0069s\u003a\u0020\u0025\u0064",_bfg .StatusCode );
};_bbd ,_fga :=_afc (_bfg );if _fga !=nil {return _fgg ,_fga ;};_fga =_ce .Unmarshal (_bbd ,&_fgg );if _fga !=nil {return _fgg ,_fga ;};return _fgg ,nil ;};type meteredUsageCheckinForm struct{Instance string `json:"inst"`;Next string `json:"next"`;UsageNumber int `json:"usage_number"`;
NumFailed int64 `json:"num_failed"`;Hostname string `json:"hostname"`;LocalIP string `json:"local_ip"`;MacAddress string `json:"mac_address"`;Package string `json:"package"`;PackageVersion string `json:"package_version"`;Usage map[string ]int `json:"u"`;
};var _efg map[string ]struct{};type LicenseKey struct{LicenseId string `json:"license_id"`;CustomerId string `json:"customer_id"`;CustomerName string `json:"customer_name"`;Tier string `json:"tier"`;CreatedAt _g .Time `json:"-"`;CreatedAtInt int64 `json:"created_at"`;
ExpiresAt *_g .Time `json:"-"`;ExpiresAtInt int64 `json:"expires_at"`;CreatedBy string `json:"created_by"`;CreatorName string `json:"creator_name"`;CreatorEmail string `json:"creator_email"`;UniPDF bool `json:"unipdf"`;UniOffice bool `json:"unioffice"`;
UniHTML bool `json:"unihtml"`;Trial bool `json:"trial"`;_gcg bool ;_bff string ;};type reportState struct{Instance string `json:"inst"`;Next string `json:"n"`;Docs int64 `json:"d"`;NumErrors int64 `json:"e"`;LimitDocs bool `json:"ld"`;RemainingDocs int64 `json:"rd"`;
LastReported _g .Time `json:"lr"`;LastWritten _g .Time `json:"lw"`;Usage map[string ]int `json:"u"`;};func (_dcc defaultStateHolder )updateState (_egf ,_daf ,_bfab string ,_caff int ,_bcc bool ,_ebb int ,_fcf int ,_cee _g .Time ,_fde map[string ]int )error {_dg :=_bace ();
if len (_dg )==0{return _dd .New ("\u0068\u006fm\u0065\u0020\u0064i\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");};_abc :=_ed .Join (_dg ,"\u002eu\u006e\u0069\u0064\u006f\u0063");_bde :=_db .MkdirAll (_abc ,0777);if _bde !=nil {return _bde ;
};if len (_egf )< 20{return _dd .New ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006b\u0065\u0079");};_ecb :=[]byte (_egf );_fggd :=_gf .Sum512_256 (_ecb [:20]);_dccd :=_ab .EncodeToString (_fggd [:]);_ceb :=_ed .Join (_abc ,_dccd );var _afb reportState ;
_afb .Docs =int64 (_caff );_afb .NumErrors =int64 (_fcf );_afb .LimitDocs =_bcc ;_afb .RemainingDocs =int64 (_ebb );_afb .LastWritten =_g .Now ().UTC ();_afb .LastReported =_cee ;_afb .Instance =_daf ;_afb .Next =_bfab ;_afb .Usage =_fde ;_aee ,_bde :=_ce .Marshal (_afb );
if _bde !=nil {return _bde ;};const _dae ="\u0068\u00619\u004e\u004b\u0038]\u0052\u0062\u004c\u002a\u006d\u0034\u004c\u004b\u0057";_aee ,_bde =_aegg ([]byte (_dae ),_aee );if _bde !=nil {return _bde ;};_bde =_aa .WriteFile (_ceb ,_aee ,0600);if _bde !=nil {return _bde ;
};return nil ;};var _fda stateLoader =defaultStateHolder {};func (_fge *LicenseKey )TypeToString ()string {if _fge ._gcg {return "M\u0065t\u0065\u0072\u0065\u0064\u0020\u0073\u0075\u0062s\u0063\u0072\u0069\u0070ti\u006f\u006e";};if _fge .Tier ==LicenseTierUnlicensed {return "\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";
};if _fge .Tier ==LicenseTierCommunity {return "\u0041\u0047PL\u0076\u0033\u0020O\u0070\u0065\u006e\u0020Sou\u0072ce\u0020\u0043\u006f\u006d\u006d\u0075\u006eit\u0079\u0020\u004c\u0069\u0063\u0065\u006es\u0065";};if _fge .Tier ==LicenseTierIndividual ||_fge .Tier =="\u0069\u006e\u0064i\u0065"{return "\u0043\u006f\u006dm\u0065\u0072\u0063\u0069a\u006c\u0020\u004c\u0069\u0063\u0065\u006es\u0065\u0020\u002d\u0020\u0049\u006e\u0064\u0069\u0076\u0069\u0064\u0075\u0061\u006c";
};return "\u0043\u006fm\u006d\u0065\u0072\u0063\u0069\u0061\u006c\u0020\u004c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u002d\u0020\u0042\u0075\u0073\u0069ne\u0073\u0073";};func (_bb *meteredClient )getStatus ()(meteredStatusResp ,error ){var _eb meteredStatusResp ;
_ffa :=_bb ._efe +"\u002fm\u0065t\u0065\u0072\u0065\u0064\u002f\u0073\u0074\u0061\u0074\u0075\u0073";var _bdf meteredStatusForm ;_dca ,_fgbf :=_ce .Marshal (_bdf );if _fgbf !=nil {return _eb ,_fgbf ;};_cedg ,_fgbf :=_dab (_dca );if _fgbf !=nil {return _eb ,_fgbf ;
};_dfd ,_fgbf :=_ef .NewRequest ("\u0050\u004f\u0053\u0054",_ffa ,_cedg );if _fgbf !=nil {return _eb ,_fgbf ;};_dfd .Header .Add ("\u0043\u006f\u006et\u0065\u006e\u0074\u002d\u0054\u0079\u0070\u0065","\u0061\u0070p\u006c\u0069\u0063a\u0074\u0069\u006f\u006e\u002f\u006a\u0073\u006f\u006e");
_dfd .Header .Add ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");_dfd .Header .Add ("\u0041c\u0063e\u0070\u0074\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");
_dfd .Header .Add ("\u0058-\u0041\u0050\u0049\u002d\u004b\u0045Y",_bb ._acg );_fea ,_fgbf :=_bb ._dbb .Do (_dfd );if _fgbf !=nil {return _eb ,_fgbf ;};defer _fea .Body .Close ();if _fea .StatusCode !=200{return _eb ,_c .Errorf ("\u0066\u0061i\u006c\u0065\u0064\u0020t\u006f\u0020c\u0068\u0065\u0063\u006b\u0069\u006e\u002c\u0020s\u0074\u0061\u0074\u0075\u0073\u0020\u0063\u006f\u0064\u0065\u0020\u0069s\u003a\u0020\u0025\u0064",_fea .StatusCode );
};_feae ,_fgbf :=_afc (_fea );if _fgbf !=nil {return _eb ,_fgbf ;};_fgbf =_ce .Unmarshal (_feae ,&_eb );if _fgbf !=nil {return _eb ,_fgbf ;};return _eb ,nil ;};func (_eef defaultStateHolder )loadState (_baf string )(reportState ,error ){_afa :=_bace ();
if len (_afa )==0{return reportState {},_dd .New ("\u0068\u006fm\u0065\u0020\u0064i\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");};_eda :=_ed .Join (_afa ,"\u002eu\u006e\u0069\u0064\u006f\u0063");_dace :=_db .MkdirAll (_eda ,0777);if _dace !=nil {return reportState {},_dace ;
};if len (_baf )< 20{return reportState {},_dd .New ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006b\u0065\u0079");};_dgg :=[]byte (_baf );_bbdb :=_gf .Sum512_256 (_dgg [:20]);_fbdc :=_ab .EncodeToString (_bbdb [:]);_eefa :=_ed .Join (_eda ,_fbdc );
_edb ,_dace :=_aa .ReadFile (_eefa );if _dace !=nil {if _db .IsNotExist (_dace ){return reportState {},nil ;};_ba .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dace );return reportState {},_dd .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061");
};const _gae ="\u0068\u00619\u004e\u004b\u0038]\u0052\u0062\u004c\u002a\u006d\u0034\u004c\u004b\u0057";_edb ,_dace =_gea ([]byte (_gae ),_edb );if _dace !=nil {return reportState {},_dace ;};var _dag reportState ;_dace =_ce .Unmarshal (_edb ,&_dag );if _dace !=nil {_ba .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0076",_dace );
return reportState {},_dd .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061");};return _dag ,nil ;};func _dab (_dfb []byte )(_a .Reader ,error ){_dff :=new (_ac .Buffer );_eaeg :=_e .NewWriter (_dff );_eaeg .Write (_dfb );_efc :=_eaeg .Close ();
if _efc !=nil {return nil ,_efc ;};return _dff ,nil ;};func Track (docKey string ,useKey string )error {return _bed (docKey ,useKey ,false )};func _fffe (_agag *_ef .Response )(_a .ReadCloser ,error ){var _dgfb error ;var _dbfce _a .ReadCloser ;switch _b .ToLower (_agag .Header .Get ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067")){case "\u0067\u007a\u0069\u0070":_dbfce ,_dgfb =_e .NewReader (_agag .Body );
if _dgfb !=nil {return _dbfce ,_dgfb ;};defer _dbfce .Close ();default:_dbfce =_agag .Body ;};return _dbfce ,nil ;};var _gcd =MakeUnlicensedKey ();type meteredClient struct{_efe string ;_acg string ;_dbb *_ef .Client ;};func _gea (_efbb ,_fedg []byte )([]byte ,error ){_abcf :=make ([]byte ,_ec .URLEncoding .DecodedLen (len (_fedg )));
_egb ,_bgd :=_ec .URLEncoding .Decode (_abcf ,_fedg );if _bgd !=nil {return nil ,_bgd ;};_abcf =_abcf [:_egb ];_dbfd ,_bgd :=_fe .NewCipher (_efbb );if _bgd !=nil {return nil ,_bgd ;};if len (_abcf )< _fe .BlockSize {return nil ,_dd .New ("c\u0069p\u0068\u0065\u0072\u0074\u0065\u0078\u0074\u0020t\u006f\u006f\u0020\u0073ho\u0072\u0074");
};_bdff :=_abcf [:_fe .BlockSize ];_abcf =_abcf [_fe .BlockSize :];_cbfd :=_af .NewCFBDecrypter (_dbfd ,_bdff );_cbfd .XORKeyStream (_abcf ,_abcf );return _abcf ,nil ;};func _ge (_bf string ,_efb []byte )(string ,error ){_cdc ,_ :=_ag .Decode ([]byte (_bf ));
if _cdc ==nil {return "",_c .Errorf ("\u0050\u0072\u0069\u0076\u004b\u0065\u0079\u0020\u0066a\u0069\u006c\u0065\u0064");};_ad ,_dce :=_ae .ParsePKCS1PrivateKey (_cdc .Bytes );if _dce !=nil {return "",_dce ;};_add :=_gf .New ();_add .Write (_efb );_gc :=_add .Sum (nil );
_ced ,_dce :=_cd .SignPKCS1v15 (_dc .Reader ,_ad ,_f .SHA512 ,_gc );if _dce !=nil {return "",_dce ;};_ecf :=_ec .StdEncoding .EncodeToString (_efb );_ecf +="\u000a\u002b\u000a";_ecf +=_ec .StdEncoding .EncodeToString (_ced );return _ecf ,nil ;};const _bge ="\u0055\u004e\u0049\u0050DF\u005f\u004c\u0049\u0043\u0045\u004e\u0053\u0045\u005f\u0050\u0041\u0054\u0048";
func (_eebb *LicenseKey )IsLicensed ()bool {return _eebb .Tier !=LicenseTierUnlicensed ||_eebb ._gcg };func (_bdg *LicenseKey )isExpired ()bool {return _bdg .getExpiryDateToCompare ().After (*_bdg .ExpiresAt )};func _ff (_cg string )(LicenseKey ,error ){var _daa LicenseKey ;
_fgb ,_ead :=_cf (_bad ,_bg ,_cg );if _ead !=nil {return _daa ,_ead ;};_dbfgg ,_ead :=_da (_bffa ,_fgb );if _ead !=nil {return _daa ,_ead ;};_ead =_ce .Unmarshal (_dbfgg ,&_daa );if _ead !=nil {return _daa ,_ead ;};_daa .CreatedAt =_g .Unix (_daa .CreatedAtInt ,0);
if _daa .ExpiresAtInt > 0{_cb :=_g .Unix (_daa .ExpiresAtInt ,0);_daa .ExpiresAt =&_cb ;};return _daa ,nil ;};var _aba =_g .Date (2019,6,6,0,0,0,0,_g .UTC );func _adf ()([]string ,[]string ,error ){_bgb ,_adc :=_df .Interfaces ();if _adc !=nil {return nil ,nil ,_adc ;
};var _eac []string ;var _egge []string ;for _ ,_acd :=range _bgb {if _acd .Flags &_df .FlagUp ==0||_ac .Equal (_acd .HardwareAddr ,nil ){continue ;};_gcec ,_eebf :=_acd .Addrs ();if _eebf !=nil {return nil ,nil ,_eebf ;};_dgfd :=0;for _ ,_ccc :=range _gcec {var _gda _df .IP ;
switch _cdf :=_ccc .(type ){case *_df .IPNet :_gda =_cdf .IP ;case *_df .IPAddr :_gda =_cdf .IP ;};if _gda .IsLoopback (){continue ;};if _gda .To4 ()==nil {continue ;};_egge =append (_egge ,_gda .String ());_dgfd ++;};_ada :=_acd .HardwareAddr .String ();
if _ada !=""&&_dgfd > 0{_eac =append (_eac ,_ada );};};return _eac ,_egge ,nil ;};func GetLicenseKey ()*LicenseKey {if _gcd ==nil {return nil ;};_gege :=*_gcd ;return &_gege ;};var _afd =_g .Date (2010,1,1,0,0,0,0,_g .UTC );func _bace ()string {_eab :=_db .Getenv ("\u0048\u004f\u004d\u0045");
if len (_eab )==0{_eab ,_ =_db .UserHomeDir ();};return _eab ;};func _cdg ()(_df .IP ,error ){_babf ,_bbg :=_df .Dial ("\u0075\u0064\u0070","\u0038\u002e\u0038\u002e\u0038\u002e\u0038\u003a\u0038\u0030");if _bbg !=nil {return nil ,_bbg ;};defer _babf .Close ();
_bgg :=_babf .LocalAddr ().(*_df .UDPAddr );return _bgg .IP ,nil ;};func _ace ()*meteredClient {_bfa :=meteredClient {_efe :"h\u0074\u0074\u0070\u0073\u003a\u002f/\u0063\u006c\u006f\u0075\u0064\u002e\u0075\u006e\u0069d\u006f\u0063\u002ei\u006f/\u0061\u0070\u0069",_dbb :&_ef .Client {Timeout :30*_g .Second }};
if _edc :=_db .Getenv ("\u0055N\u0049\u0044\u004f\u0043_\u004c\u0049\u0043\u0045\u004eS\u0045_\u0053E\u0052\u0056\u0045\u0052\u005f\u0055\u0052L");_b .HasPrefix (_edc ,"\u0068\u0074\u0074\u0070"){_bfa ._efe =_edc ;};return &_bfa ;};func SetLicenseKey (content string ,customerName string )error {_ffb ,_dbfgd :=_ff (content );
if _dbfgd !=nil {_ba .Log .Error ("\u004c\u0069c\u0065\u006e\u0073\u0065\u0020\u0063\u006f\u0064\u0065\u0020\u0064\u0065\u0063\u006f\u0064\u0065\u0020\u0065\u0072\u0072\u006f\u0072: \u0025\u0076",_dbfgd );return _dbfgd ;};if !_b .EqualFold (_ffb .CustomerName ,customerName ){_ba .Log .Error ("L\u0069ce\u006es\u0065 \u0063\u006f\u0064\u0065\u0020i\u0073\u0073\u0075e\u0020\u002d\u0020\u0043\u0075s\u0074\u006f\u006de\u0072\u0020\u006e\u0061\u006d\u0065\u0020\u006d\u0069\u0073\u006da\u0074\u0063\u0068, e\u0078\u0070\u0065\u0063\u0074\u0065d\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u0062\u0075\u0074\u0020\u0067o\u0074 \u0027\u0025\u0073\u0027",customerName ,_ffb .CustomerName );
return _c .Errorf ("\u0063\u0075\u0073\u0074\u006fm\u0065\u0072\u0020\u006e\u0061\u006d\u0065\u0020\u006d\u0069\u0073\u006d\u0061t\u0063\u0068\u002c\u0020\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u0062\u0075\u0074\u0020\u0067\u006f\u0074\u0020\u0027\u0025\u0073'",customerName ,_ffb .CustomerName );
};_dbfgd =_ffb .Validate ();if _dbfgd !=nil {_ba .Log .Error ("\u004c\u0069\u0063\u0065\u006e\u0073e\u0020\u0063\u006f\u0064\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074i\u006f\u006e\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_dbfgd );
return _dbfgd ;};_gcd =&_ffb ;return nil ;};const _bffa ="\u000a\u002d\u002d\u002d\u002d\u002d\u0042\u0045\u0047\u0049\u004e \u0050\u0055\u0042\u004c\u0049\u0043\u0020\u004b\u0045Y\u002d\u002d\u002d\u002d\u002d\u000a\u004d\u0049I\u0042\u0049\u006a\u0041NB\u0067\u006b\u0071\u0068\u006b\u0069G\u0039\u0077\u0030\u0042\u0041\u0051\u0045\u0046A\u0041\u004f\u0043\u0041\u0051\u0038\u0041\u004d\u0049\u0049\u0042\u0043\u0067\u004b\u0043\u0041\u0051\u0045A\u006dF\u0055\u0069\u0079\u0064\u0037\u0062\u0035\u0058\u006a\u0070\u006b\u0050\u0035\u0052\u0061\u0070\u0034\u0077\u000a\u0044\u0063\u0031d\u0079\u007a\u0049\u0051\u0034\u004c\u0065\u006b\u0078\u0072\u0076\u0079\u0074\u006e\u0045\u004d\u0070\u004e\u0055\u0062\u006f\u0036i\u0041\u0037\u0034\u0056\u0038\u0072\u0075\u005a\u004f\u0076\u0072\u0053\u0063\u0073\u0066\u0032\u0051\u0065\u004e9\u002f\u0071r\u0055\u0047\u0038\u0071\u0045\u0062\u0055\u0057\u0064\u006f\u0045\u0059\u0071+\u000a\u006f\u0074\u0046\u004e\u0041\u0046N\u0078\u006c\u0047\u0062\u0078\u0062\u0044\u0048\u0063\u0064\u0047\u0056\u0061\u004d\u0030\u004f\u0058\u0064\u0058g\u0044y\u004c5\u0061\u0049\u0045\u0061\u0067\u004c\u0030\u0063\u0035\u0070\u0077\u006a\u0049\u0064\u0050G\u0049\u006e\u0034\u0036\u0066\u0037\u0038\u0065\u004d\u004a\u002b\u004a\u006b\u0064\u0063\u0070\u0044\n\u0044\u004a\u0061\u0071\u0059\u0058d\u0072\u007a5\u004b\u0065\u0073\u0068\u006aS\u0069\u0049\u0061\u0061\u0037\u006d\u0065\u006e\u0042\u0049\u0041\u0058\u0053\u0034\u0055\u0046\u0078N\u0066H\u0068\u004e\u0030\u0048\u0043\u0059\u005a\u0059\u0071\u0051\u0047\u0037\u0062K+\u0073\u0035\u0072R\u0048\u006f\u006e\u0079\u0064\u004eW\u0045\u0047\u000a\u0048\u0038M\u0079\u0076\u00722\u0070\u0079\u0061\u0032K\u0072\u004d\u0075m\u0066\u006d\u0041\u0078\u0055\u0042\u0036\u0066\u0065\u006e\u0043\u002f4\u004f\u0030\u0057\u00728\u0067\u0066\u0050\u004f\u0055\u0038R\u0069\u0074\u006d\u0062\u0044\u0076\u0051\u0050\u0049\u0052\u0058\u004fL\u0034\u0076\u0054B\u0072\u0042\u0064\u0062a\u0041\u000a9\u006e\u0077\u004e\u0050\u002b\u0069\u002f\u002f\u0032\u0030\u004d\u00542\u0062\u0078\u006d\u0065\u0057\u0042\u002b\u0067\u0070\u0063\u0045\u0068G\u0070\u0058\u005a7\u0033\u0033\u0061\u007a\u0051\u0078\u0072\u0043\u0033\u004a\u0034\u0076\u0033C\u005a\u006d\u0045\u004eS\u0074\u0044\u004b\u002f\u004b\u0044\u0053\u0050\u004b\u0055\u0047\u0066\u00756\u000a\u0066\u0077I\u0044\u0041\u0051\u0041\u0042\u000a\u002d\u002d\u002d\u002d\u002dE\u004e\u0044\u0020\u0050\u0055\u0042\u004c\u0049\u0043 \u004b\u0045Y\u002d\u002d\u002d\u002d\u002d\n";
func _afc (_ffec *_ef .Response )([]byte ,error ){var _ebg []byte ;_dad ,_ebbg :=_fffe (_ffec );if _ebbg !=nil {return _ebg ,_ebbg ;};return _aa .ReadAll (_dad );};type meteredStatusForm struct{};var _cbf =&_fb .Mutex {};func TrackUse (useKey string ){if _gcd ==nil {return ;
};if !_gcd ._gcg ||len (_gcd ._bff )==0{return ;};if len (useKey )==0{return ;};_cbf .Lock ();defer _cbf .Unlock ();if _dbcd ==nil {_dbcd =map[string ]int {};};_dbcd [useKey ]++;};func SetMeteredKey (apiKey string )error {if len (apiKey )==0{_ba .Log .Error ("\u004d\u0065\u0074\u0065\u0072e\u0064\u0020\u004c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u0041\u0050\u0049 \u004b\u0065\u0079\u0020\u006d\u0075\u0073\u0074\u0020\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0065\u006d\u0070\u0074\u0079");
_ba .Log .Error ("\u002d\u0020\u0047\u0072\u0061\u0062\u0020\u006f\u006e\u0065\u0020\u0069\u006e\u0020\u0074h\u0065\u0020\u0046\u0072\u0065\u0065\u0020\u0054\u0069\u0065\u0072\u0020\u0061t\u0020\u0068\u0074\u0074\u0070\u0073\u003a\u002f\u002f\u0063\u006c\u006fud\u002e\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _c .Errorf ("\u006de\u0074\u0065\u0072e\u0064\u0020\u006ci\u0063en\u0073\u0065\u0020\u0061\u0070\u0069\u0020k\u0065\u0079\u0020\u006d\u0075\u0073\u0074\u0020\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0065\u006d\u0070\u0074\u0079\u003a\u0020\u0063\u0072\u0065\u0061\u0074\u0065 o\u006ee\u0020\u0061\u0074\u0020\u0068\u0074t\u0070\u0073\u003a\u002f\u002fc\u006c\u006f\u0075\u0064\u002e\u0075\u006e\u0069\u0064\u006f\u0063.\u0069\u006f");
};if _gcd !=nil &&(_gcd ._gcg ||_gcd .Tier !=LicenseTierUnlicensed ){_ba .Log .Error ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0043\u0061\u006e\u006eo\u0074 \u0073\u0065\u0074\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u006b\u0065\u0079\u0020\u0074\u0077\u0069c\u0065\u0020\u002d\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u006a\u0075\u0073\u0074\u0020\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0069z\u0065\u0020\u006f\u006e\u0063\u0065");
return _dd .New ("\u006c\u0069\u0063en\u0073\u0065\u0020\u006b\u0065\u0079\u0020\u0061\u006c\u0072\u0065\u0061\u0064\u0079\u0020\u0073\u0065\u0074");};_eegf :=_ace ();_eegf ._acg =apiKey ;_bac ,_agc :=_eegf .getStatus ();if _agc !=nil {return _agc ;};if !_bac .Valid {return _dd .New ("\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0076\u0061\u006c\u0069\u0064");
};_dbbd :=&LicenseKey {_gcg :true ,_bff :apiKey };_gcd =_dbbd ;return nil ;};const (LicenseTierUnlicensed ="\u0075\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";LicenseTierCommunity ="\u0063o\u006d\u006d\u0075\u006e\u0069\u0074y";LicenseTierIndividual ="\u0069\u006e\u0064\u0069\u0076\u0069\u0064\u0075\u0061\u006c";
LicenseTierBusiness ="\u0062\u0075\u0073\u0069\u006e\u0065\u0073\u0073";);var _dbcd map[string ]int ;func _bed (_bda string ,_feaa string ,_dgf bool )error {if _gcd ==nil {return _dd .New ("\u006e\u006f\u0020\u006c\u0069\u0063\u0065\u006e\u0073e\u0020\u006b\u0065\u0079");
};if !_gcd ._gcg ||len (_gcd ._bff )==0{return nil ;};if len (_bda )==0&&!_dgf {return _dd .New ("\u0064\u006f\u0063\u004b\u0065\u0079\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");};_cbf .Lock ();defer _cbf .Unlock ();if _efg ==nil {_efg =map[string ]struct{}{};
};if _dbcd ==nil {_dbcd =map[string ]int {};};_cc :=0;if !_dgf {_ ,_dfg :=_efg [_bda ];if !_dfg {_efg [_bda ]=struct{}{};_cc ++;};if _cc ==0{return nil ;};_dbcd [_feaa ]++;};_egg :=_g .Now ();_bafc ,_adde :=_fda .loadState (_gcd ._bff );if _adde !=nil {_ba .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_adde );
return _adde ;};if _bafc .Usage ==nil {_bafc .Usage =map[string ]int {};};for _aeg ,_abb :=range _dbcd {_bafc .Usage [_aeg ]+=_abb ;};_dbcd =nil ;const _geg =24*_g .Hour ;const _cad =3*24*_g .Hour ;if len (_bafc .Instance )==0||_egg .Sub (_bafc .LastReported )> _geg ||(_bafc .LimitDocs &&_bafc .RemainingDocs <=_bafc .Docs +int64 (_cc ))||_dgf {_efd ,_fcb :=_db .Hostname ();
if _fcb !=nil {return _fcb ;};_abd :=_bafc .Docs ;_aeea ,_afe ,_fcb :=_adf ();if _fcb !=nil {_ba .Log .Debug ("\u0055\u006e\u0061b\u006c\u0065\u0020\u0074o\u0020\u0067\u0065\u0074\u0020\u006c\u006fc\u0061\u006c\u0020\u0061\u0064\u0064\u0072\u0065\u0073\u0073\u003a\u0020\u0025\u0073",_fcb .Error ());
_aeea =append (_aeea ,"\u0069n\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020n\u006ft\u0020a\u0076\u0061\u0069\u006c\u0061\u0062\u006ce");_afe =append (_afe ,"\u0069n\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020n\u006ft\u0020a\u0076\u0061\u0069\u006c\u0061\u0062\u006ce");
}else {_fbe .Strings (_afe );_fbe .Strings (_aeea );_fff ,_bdgf :=_cdg ();if _bdgf !=nil {return _bdgf ;};_adb :=false ;for _ ,_dccdd :=range _afe {if _dccdd ==_fff .String (){_adb =true ;};};if !_adb {_afe =append (_afe ,_fff .String ());};};_ebed :=_ace ();
_ebed ._acg =_gcd ._bff ;_abd +=int64 (_cc );_geb :=meteredUsageCheckinForm {Instance :_bafc .Instance ,Next :_bafc .Next ,UsageNumber :int (_abd ),NumFailed :_bafc .NumErrors ,Hostname :_efd ,LocalIP :_b .Join (_afe ,"\u002c\u0020"),MacAddress :_b .Join (_aeea ,"\u002c\u0020"),Package :"\u0075\u006e\u0069\u0070\u0064\u0066",PackageVersion :_ba .Version ,Usage :_bafc .Usage };
if len (_aeea )==0{_geb .MacAddress ="\u006e\u006f\u006e\u0065";};_cfe :=int64 (0);_agb :=_bafc .NumErrors ;_afg :=_egg ;_bab :=0;_cec :=_bafc .LimitDocs ;_fbc ,_fcb :=_ebed .checkinUsage (_geb );if _fcb !=nil {if _egg .Sub (_bafc .LastReported )> _cad {return _dd .New ("\u0074\u006f\u006f\u0020\u006c\u006f\u006e\u0067\u0020\u0073\u0069\u006e\u0063\u0065\u0020\u006c\u0061\u0073\u0074\u0020\u0073\u0075\u0063\u0063e\u0073\u0073\u0066\u0075\u006c \u0063\u0068e\u0063\u006b\u0069\u006e");
};_cfe =_abd ;_agb ++;_afg =_bafc .LastReported ;}else {_cec =_fbc .LimitDocs ;_bab =_fbc .RemainingDocs ;_agb =0;};if len (_fbc .Instance )==0{_fbc .Instance =_geb .Instance ;};if len (_fbc .Next )==0{_fbc .Next =_geb .Next ;};_fcb =_fda .updateState (_ebed ._acg ,_fbc .Instance ,_fbc .Next ,int (_cfe ),_cec ,_bab ,int (_agb ),_afg ,nil );
if _fcb !=nil {return _fcb ;};if !_fbc .Success {return _c .Errorf ("\u0065r\u0072\u006f\u0072\u003a\u0020\u0025s",_fbc .Message );};}else {_adde =_fda .updateState (_gcd ._bff ,_bafc .Instance ,_bafc .Next ,int (_bafc .Docs )+_cc ,_bafc .LimitDocs ,int (_bafc .RemainingDocs ),int (_bafc .NumErrors ),_bafc .LastReported ,_bafc .Usage );
if _adde !=nil {return _adde ;};};return nil ;};func _aegg (_gcdf ,_cfb []byte )([]byte ,error ){_aef ,_eeaf :=_fe .NewCipher (_gcdf );if _eeaf !=nil {return nil ,_eeaf ;};_dabe :=make ([]byte ,_fe .BlockSize +len (_cfb ));_bgf :=_dabe [:_fe .BlockSize ];
if _ ,_fgaf :=_a .ReadFull (_dc .Reader ,_bgf );_fgaf !=nil {return nil ,_fgaf ;};_gac :=_af .NewCFBEncrypter (_aef ,_bgf );_gac .XORKeyStream (_dabe [_fe .BlockSize :],_cfb );_bddg :=make ([]byte ,_ec .URLEncoding .EncodedLen (len (_dabe )));_ec .URLEncoding .Encode (_bddg ,_dabe );
return _bddg ,nil ;};func _cf (_ecc string ,_gd string ,_dbc string )(string ,error ){_caf :=_b .Index (_dbc ,_ecc );if _caf ==-1{return "",_c .Errorf ("\u0068\u0065a\u0064\u0065\u0072 \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_ga :=_b .Index (_dbc ,_gd );
if _ga ==-1{return "",_c .Errorf ("\u0066\u006fo\u0074\u0065\u0072 \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_bga :=_caf +len (_ecc )+1;return _dbc [_bga :_ga -1],nil ;};type meteredUsageCheckinResp struct{Instance string `json:"inst"`;
Next string `json:"next"`;Success bool `json:"success"`;Message string `json:"message"`;RemainingDocs int `json:"rd"`;LimitDocs bool `json:"ld"`;};type MeteredStatus struct{OK bool ;Credits int64 ;Used int64 ;};func init (){_gcca :=_db .Getenv (_bge );
_bce :=_db .Getenv (_ffe );if len (_gcca )==0||len (_bce )==0{return ;};_aeef ,_bdag :=_aa .ReadFile (_gcca );if _bdag !=nil {_ba .Log .Error ("\u0055\u006eab\u006c\u0065\u0020t\u006f\u0020\u0072\u0065ad \u006cic\u0065\u006e\u0073\u0065\u0020\u0063\u006fde\u0020\u0066\u0069\u006c\u0065\u003a\u0020%\u0076",_bdag );
return ;};_bdag =SetLicenseKey (string (_aeef ),_bce );if _bdag !=nil {_ba .Log .Error ("\u0055\u006e\u0061b\u006c\u0065\u0020\u0074o\u0020\u006c\u006f\u0061\u0064\u0020\u006ci\u0063\u0065\u006e\u0073\u0065\u0020\u0063\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_bdag );
return ;};};var _fa =_g .Date (2020,1,1,0,0,0,0,_g .UTC );func (_eae *LicenseKey )Validate ()error {if _eae ._gcg {return nil ;};if len (_eae .LicenseId )< 10{return _c .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020L\u0069\u0063\u0065n\u0073e\u0020\u0049\u0064");
};if len (_eae .CustomerId )< 10{return _c .Errorf ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065:\u0020C\u0075\u0073\u0074\u006f\u006d\u0065\u0072 \u0049\u0064");};if len (_eae .CustomerName )< 1{return _c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069c\u0065\u006e\u0073\u0065\u003a\u0020\u0043u\u0073\u0074\u006f\u006d\u0065\u0072\u0020\u004e\u0061\u006d\u0065");
};if _afd .After (_eae .CreatedAt ){return _c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u0065\u0064 \u0041\u0074\u0020\u0069\u0073 \u0069\u006ev\u0061\u006c\u0069\u0064");
};if _eae .ExpiresAt ==nil {_bgac :=_eae .CreatedAt .AddDate (1,0,0);if _fa .After (_bgac ){_bgac =_fa ;};_eae .ExpiresAt =&_bgac ;};if _eae .CreatedAt .After (*_eae .ExpiresAt ){return _c .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u0065\u0064\u0020\u0041\u0074 \u0063a\u006e\u006e\u006f\u0074 \u0062\u0065 \u0047\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0045\u0078\u0070\u0069\u0072\u0065\u0073\u0020\u0041\u0074");
};if _eae .isExpired (){return _c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020l\u0069\u0063\u0065ns\u0065\u003a\u0020\u0054\u0068\u0065 \u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u0068\u0061\u0073\u0020\u0061\u006c\u0072e\u0061\u0064\u0079\u0020\u0065\u0078\u0070\u0069r\u0065\u0064");
};if len (_eae .CreatorName )< 1{return _c .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u0020na\u006d\u0065");};if len (_eae .CreatorEmail )< 1{return _c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069c\u0065\u006e\u0073\u0065\u003a\u0020\u0043r\u0065\u0061\u0074\u006f\u0072\u0020\u0065\u006d\u0061\u0069\u006c");
};if _eae .CreatedAt .After (_aba ){if !_eae .UniPDF {return _c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065:\u0020\u0054\u0068\u0069\u0073\u0020\u0055\u006e\u0069\u0044\u006f\u0063\u0020k\u0065\u0079\u0020\u0069\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069d \u0066\u006f\u0072\u0020\u0055\u006e\u0069\u0050\u0044\u0046");
};};return nil ;};func (_eeb *LicenseKey )getExpiryDateToCompare ()_g .Time {if _eeb .Trial {return _g .Now ().UTC ();};return _ba .ReleasedAt ;};type meteredStatusResp struct{Valid bool `json:"valid"`;OrgCredits int64 `json:"org_credits"`;OrgUsed int64 `json:"org_used"`;
OrgRemaining int64 `json:"org_remaining"`;};type defaultStateHolder struct{};func _da (_ee string ,_dbf string )([]byte ,error ){var (_bc int ;_dbfg string ;);for _ ,_dbfg =range []string {"\u000a\u002b\u000a","\u000d\u000a\u002b\r\u000a","\u0020\u002b\u0020"}{if _bc =_b .Index (_dbf ,_dbfg );
_bc !=-1{break ;};};if _bc ==-1{return nil ,_c .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u002c \u0073i\u0067n\u0061t\u0075\u0072\u0065\u0020\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u006f\u0072");};_aaf :=_dbf [:_bc ];
_ecfg :=_bc +len (_dbfg );_aac :=_dbf [_ecfg :];if _aaf ==""||_aac ==""{return nil ,_c .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u0069n\u0070\u0075\u0074,\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0069\u0067\u0069n\u0061\u006c \u006f\u0072\u0020\u0073\u0069\u0067n\u0061\u0074u\u0072\u0065");
};_ea ,_bd :=_ec .StdEncoding .DecodeString (_aaf );if _bd !=nil {return nil ,_c .Errorf ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u006f\u0072\u0069\u0067\u0069\u006ea\u006c");};_aag ,_bd :=_ec .StdEncoding .DecodeString (_aac );
if _bd !=nil {return nil ,_c .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065");};_fed ,_ :=_ag .Decode ([]byte (_ee ));if _fed ==nil {return nil ,_c .Errorf ("\u0050\u0075\u0062\u004b\u0065\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};_eg ,_bd :=_ae .ParsePKIXPublicKey (_fed .Bytes );if _bd !=nil {return nil ,_bd ;};_ca :=_eg .(*_cd .PublicKey );if _ca ==nil {return nil ,_c .Errorf ("\u0050u\u0062\u004b\u0065\u0079\u0020\u0063\u006f\u006e\u0076\u0065\u0072s\u0069\u006f\u006e\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};_aga :=_gf .New ();_aga .Write (_ea );_fc :=_aga .Sum (nil );_bd =_cd .VerifyPKCS1v15 (_ca ,_f .SHA512 ,_fc ,_aag );if _bd !=nil {return nil ,_bd ;};return _ea ,nil ;};func (_fd *LicenseKey )ToString ()string {if _fd ._gcg {return "M\u0065t\u0065\u0072\u0065\u0064\u0020\u0073\u0075\u0062s\u0063\u0072\u0069\u0070ti\u006f\u006e";
};_gca :=_c .Sprintf ("\u004ci\u0063e\u006e\u0073\u0065\u0020\u0049\u0064\u003a\u0020\u0025\u0073\u000a",_fd .LicenseId );_gca +=_c .Sprintf ("\u0043\u0075s\u0074\u006f\u006de\u0072\u0020\u0049\u0064\u003a\u0020\u0025\u0073\u000a",_fd .CustomerId );_gca +=_c .Sprintf ("\u0043u\u0073t\u006f\u006d\u0065\u0072\u0020N\u0061\u006de\u003a\u0020\u0025\u0073\u000a",_fd .CustomerName );
_gca +=_c .Sprintf ("\u0054i\u0065\u0072\u003a\u0020\u0025\u0073\n",_fd .Tier );_gca +=_c .Sprintf ("\u0043r\u0065a\u0074\u0065\u0064\u0020\u0041\u0074\u003a\u0020\u0025\u0073\u000a",_ba .UtcTimeFormat (_fd .CreatedAt ));if _fd .ExpiresAt ==nil {_gca +="\u0045x\u0070i\u0072\u0065\u0073\u0020\u0041t\u003a\u0020N\u0065\u0076\u0065\u0072\u000a";
}else {_gca +=_c .Sprintf ("\u0045x\u0070i\u0072\u0065\u0073\u0020\u0041\u0074\u003a\u0020\u0025\u0073\u000a",_ba .UtcTimeFormat (*_fd .ExpiresAt ));};_gca +=_c .Sprintf ("\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u003a\u0020\u0025\u0073\u0020<\u0025\u0073\u003e\u000a",_fd .CreatorName ,_fd .CreatorEmail );
return _gca ;};