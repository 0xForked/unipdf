//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package license ;import (_fb "bytes";_e "compress/gzip";_b "crypto";_be "crypto/aes";_eeb "crypto/cipher";_cg "crypto/rand";_gd "crypto/rsa";_da "crypto/sha512";_fd "crypto/x509";_fa "encoding/base64";_fc "encoding/hex";_bb "encoding/json";_fg "encoding/pem";
_c "errors";_ea "fmt";_db "github.com/unidoc/unipdf/v3/common";_fe "io";_d "io/ioutil";_ec "net";_g "net/http";_ba "os";_ed "path/filepath";_ee "sort";_bac "strings";_a "sync";_af "time";);func _fdg (_df string ,_bf []byte )(string ,error ){_eg ,_ :=_fg .Decode ([]byte (_df ));
if _eg ==nil {return "",_ea .Errorf ("\u0050\u0072\u0069\u0076\u004b\u0065\u0079\u0020\u0066a\u0069\u006c\u0065\u0064");};_ae ,_gf :=_fd .ParsePKCS1PrivateKey (_eg .Bytes );if _gf !=nil {return "",_gf ;};_gff :=_da .New ();_gff .Write (_bf );_dg :=_gff .Sum (nil );
_add ,_gf :=_gd .SignPKCS1v15 (_cg .Reader ,_ae ,_b .SHA512 ,_dg );if _gf !=nil {return "",_gf ;};_dae :=_fa .StdEncoding .EncodeToString (_bf );_dae +="\u000a\u002b\u000a";_dae +=_fa .StdEncoding .EncodeToString (_add );return _dae ,nil ;};type meteredClient struct{_gca string ;
_bgf string ;_gcb *_g .Client ;};func (_bff *LicenseKey )isExpired ()bool {return _bff .getExpiryDateToCompare ().After (*_bff .ExpiresAt )};var _cfg stateLoader =defaultStateHolder {};func _ccf (_fff *_g .Response )(_fe .ReadCloser ,error ){var _bca error ;
var _gcf _fe .ReadCloser ;switch _bac .ToLower (_fff .Header .Get ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067")){case "\u0067\u007a\u0069\u0070":_gcf ,_bca =_e .NewReader (_fff .Body );if _bca !=nil {return _gcf ,_bca ;
};defer _gcf .Close ();default:_gcf =_fff .Body ;};return _gcf ,nil ;};func (_gec *LicenseKey )TypeToString ()string {if _gec ._bd {return "M\u0065t\u0065\u0072\u0065\u0064\u0020\u0073\u0075\u0062s\u0063\u0072\u0069\u0070ti\u006f\u006e";};if _gec .Tier ==LicenseTierUnlicensed {return "\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";
};if _gec .Tier ==LicenseTierCommunity {return "\u0041\u0047PL\u0076\u0033\u0020O\u0070\u0065\u006e\u0020Sou\u0072ce\u0020\u0043\u006f\u006d\u006d\u0075\u006eit\u0079\u0020\u004c\u0069\u0063\u0065\u006es\u0065";};if _gec .Tier ==LicenseTierIndividual ||_gec .Tier =="\u0069\u006e\u0064i\u0065"{return "\u0043\u006f\u006dm\u0065\u0072\u0063\u0069a\u006c\u0020\u004c\u0069\u0063\u0065\u006es\u0065\u0020\u002d\u0020\u0049\u006e\u0064\u0069\u0076\u0069\u0064\u0075\u0061\u006c";
};return "\u0043\u006fm\u006d\u0065\u0072\u0063\u0069\u0061\u006c\u0020\u004c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u002d\u0020\u0042\u0075\u0073\u0069ne\u0073\u0073";};func _adc (_acf []byte )(_fe .Reader ,error ){_acgd :=new (_fb .Buffer );_abe :=_e .NewWriter (_acgd );
_abe .Write (_acf );_beba :=_abe .Close ();if _beba !=nil {return nil ,_beba ;};return _acgd ,nil ;};func _bacf (_efcf ,_ace []byte )([]byte ,error ){_afbd :=make ([]byte ,_fa .URLEncoding .DecodedLen (len (_ace )));_dgc ,_ecg :=_fa .URLEncoding .Decode (_afbd ,_ace );
if _ecg !=nil {return nil ,_ecg ;};_afbd =_afbd [:_dgc ];_cbgf ,_ecg :=_be .NewCipher (_efcf );if _ecg !=nil {return nil ,_ecg ;};if len (_afbd )< _be .BlockSize {return nil ,_c .New ("c\u0069p\u0068\u0065\u0072\u0074\u0065\u0078\u0074\u0020t\u006f\u006f\u0020\u0073ho\u0072\u0074");
};_accb :=_afbd [:_be .BlockSize ];_afbd =_afbd [_be .BlockSize :];_gcec :=_eeb .NewCFBDecrypter (_cbgf ,_accb );_gcec .XORKeyStream (_afbd ,_afbd );return _afbd ,nil ;};var _dga =_af .Date (2020,1,1,0,0,0,0,_af .UTC );type meteredStatusForm struct{};type reportState struct{Instance string `json:"inst"`;
Next string `json:"n"`;Docs int64 `json:"d"`;NumErrors int64 `json:"e"`;LimitDocs bool `json:"ld"`;RemainingDocs int64 `json:"rd"`;LastReported _af .Time `json:"lr"`;LastWritten _af .Time `json:"lw"`;Usage map[string ]int `json:"u"`;};var _fdgc map[string ]struct{};
func TrackUse (useKey string ){if _gcbg ==nil {return ;};if !_gcbg ._bd ||len (_gcbg ._eebc )==0{return ;};if len (useKey )==0{return ;};_agad .Lock ();defer _agad .Unlock ();if _dgbd ==nil {_dgbd =map[string ]int {};};_dgbd [useKey ]++;};func (_gdbd *meteredClient )checkinUsage (_acg meteredUsageCheckinForm )(meteredUsageCheckinResp ,error ){_acg .Package ="\u0075\u006e\u0069\u0070\u0064\u0066";
_acg .PackageVersion =_db .Version ;var _aag meteredUsageCheckinResp ;_gbb :=_gdbd ._gca +"\u002f\u006d\u0065\u0074er\u0065\u0064\u002f\u0075\u0073\u0061\u0067\u0065\u005f\u0063\u0068\u0065\u0063\u006bi\u006e";_de ,_ggf :=_bb .Marshal (_acg );if _ggf !=nil {return _aag ,_ggf ;
};_cfe ,_ggf :=_adc (_de );if _ggf !=nil {return _aag ,_ggf ;};_bge ,_ggf :=_g .NewRequest ("\u0050\u004f\u0053\u0054",_gbb ,_cfe );if _ggf !=nil {return _aag ,_ggf ;};_bge .Header .Add ("\u0043\u006f\u006et\u0065\u006e\u0074\u002d\u0054\u0079\u0070\u0065","\u0061\u0070p\u006c\u0069\u0063a\u0074\u0069\u006f\u006e\u002f\u006a\u0073\u006f\u006e");
_bge .Header .Add ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");_bge .Header .Add ("\u0041c\u0063e\u0070\u0074\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");
_bge .Header .Add ("\u0058-\u0041\u0050\u0049\u002d\u004b\u0045Y",_gdbd ._bgf );_afb ,_ggf :=_gdbd ._gcb .Do (_bge );if _ggf !=nil {return _aag ,_ggf ;};defer _afb .Body .Close ();if _afb .StatusCode !=200{return _aag ,_ea .Errorf ("\u0066\u0061i\u006c\u0065\u0064\u0020t\u006f\u0020c\u0068\u0065\u0063\u006b\u0069\u006e\u002c\u0020s\u0074\u0061\u0074\u0075\u0073\u0020\u0063\u006f\u0064\u0065\u0020\u0069s\u003a\u0020\u0025\u0064",_afb .StatusCode );
};_gga ,_ggf :=_caga (_afb );if _ggf !=nil {return _aag ,_ggf ;};_ggf =_bb .Unmarshal (_gga ,&_aag );if _ggf !=nil {return _aag ,_ggf ;};return _aag ,nil ;};type meteredUsageCheckinForm struct{Instance string `json:"inst"`;Next string `json:"next"`;UsageNumber int `json:"usage_number"`;
NumFailed int64 `json:"num_failed"`;Hostname string `json:"hostname"`;LocalIP string `json:"local_ip"`;MacAddress string `json:"mac_address"`;Package string `json:"package"`;PackageVersion string `json:"package_version"`;Usage map[string ]int `json:"u"`;
};type LicenseKey struct{LicenseId string `json:"license_id"`;CustomerId string `json:"customer_id"`;CustomerName string `json:"customer_name"`;Tier string `json:"tier"`;CreatedAt _af .Time `json:"-"`;CreatedAtInt int64 `json:"created_at"`;ExpiresAt *_af .Time `json:"-"`;
ExpiresAtInt int64 `json:"expires_at"`;CreatedBy string `json:"created_by"`;CreatorName string `json:"creator_name"`;CreatorEmail string `json:"creator_email"`;UniPDF bool `json:"unipdf"`;UniOffice bool `json:"unioffice"`;UniHTML bool `json:"unihtml"`;
Trial bool `json:"trial"`;_bd bool ;_eebc string ;};type defaultStateHolder struct{};var _dd =_af .Date (2019,6,6,0,0,0,0,_af .UTC );var _gcee =_af .Date (2010,1,1,0,0,0,0,_af .UTC );const (_dbc ="\u002d\u002d\u002d--\u0042\u0045\u0047\u0049\u004e\u0020\u0055\u004e\u0049D\u004fC\u0020L\u0049C\u0045\u004e\u0053\u0045\u0020\u004b\u0045\u0059\u002d\u002d\u002d\u002d\u002d";
_ad ="\u002d\u002d\u002d\u002d\u002d\u0045\u004e\u0044\u0020\u0055\u004e\u0049\u0044\u004f\u0043 \u004cI\u0043\u0045\u004e\u0053\u0045\u0020\u004b\u0045\u0059\u002d\u002d\u002d\u002d\u002d";);const (LicenseTierUnlicensed ="\u0075\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";
LicenseTierCommunity ="\u0063o\u006d\u006d\u0075\u006e\u0069\u0074y";LicenseTierIndividual ="\u0069\u006e\u0064\u0069\u0076\u0069\u0064\u0075\u0061\u006c";LicenseTierBusiness ="\u0062\u0075\u0073\u0069\u006e\u0065\u0073\u0073";);const _gbc ="U\u004eI\u0050\u0044\u0046\u005f\u0043\u0055\u0053\u0054O\u004d\u0045\u0052\u005fNA\u004d\u0045";
func SetLicenseKey (content string ,customerName string )error {_gfac ,_bbf :=_dbe (content );if _bbf !=nil {_db .Log .Error ("\u004c\u0069c\u0065\u006e\u0073\u0065\u0020\u0063\u006f\u0064\u0065\u0020\u0064\u0065\u0063\u006f\u0064\u0065\u0020\u0065\u0072\u0072\u006f\u0072: \u0025\u0076",_bbf );
return _bbf ;};if !_bac .EqualFold (_gfac .CustomerName ,customerName ){_db .Log .Error ("L\u0069ce\u006es\u0065 \u0063\u006f\u0064\u0065\u0020i\u0073\u0073\u0075e\u0020\u002d\u0020\u0043\u0075s\u0074\u006f\u006de\u0072\u0020\u006e\u0061\u006d\u0065\u0020\u006d\u0069\u0073\u006da\u0074\u0063\u0068, e\u0078\u0070\u0065\u0063\u0074\u0065d\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u0062\u0075\u0074\u0020\u0067o\u0074 \u0027\u0025\u0073\u0027",customerName ,_gfac .CustomerName );
return _ea .Errorf ("\u0063\u0075\u0073\u0074\u006fm\u0065\u0072\u0020\u006e\u0061\u006d\u0065\u0020\u006d\u0069\u0073\u006d\u0061t\u0063\u0068\u002c\u0020\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u0062\u0075\u0074\u0020\u0067\u006f\u0074\u0020\u0027\u0025\u0073'",customerName ,_gfac .CustomerName );
};_bbf =_gfac .Validate ();if _bbf !=nil {_db .Log .Error ("\u004c\u0069\u0063\u0065\u006e\u0073e\u0020\u0063\u006f\u0064\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074i\u006f\u006e\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_bbf );
return _bbf ;};_gcbg =&_gfac ;return nil ;};func _eff ()(_ec .IP ,error ){_fad ,_bba :=_ec .Dial ("\u0075\u0064\u0070","\u0038\u002e\u0038\u002e\u0038\u002e\u0038\u003a\u0038\u0030");if _bba !=nil {return nil ,_bba ;};defer _fad .Close ();_dce :=_fad .LocalAddr ().(*_ec .UDPAddr );
return _dce .IP ,nil ;};var _agad =&_a .Mutex {};func (_afg *LicenseKey )Validate ()error {if _afg ._bd {return nil ;};if len (_afg .LicenseId )< 10{return _ea .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020L\u0069\u0063\u0065n\u0073e\u0020\u0049\u0064");
};if len (_afg .CustomerId )< 10{return _ea .Errorf ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065:\u0020C\u0075\u0073\u0074\u006f\u006d\u0065\u0072 \u0049\u0064");};if len (_afg .CustomerName )< 1{return _ea .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069c\u0065\u006e\u0073\u0065\u003a\u0020\u0043u\u0073\u0074\u006f\u006d\u0065\u0072\u0020\u004e\u0061\u006d\u0065");
};if _gcee .After (_afg .CreatedAt ){return _ea .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u0065\u0064 \u0041\u0074\u0020\u0069\u0073 \u0069\u006ev\u0061\u006c\u0069\u0064");
};if _afg .ExpiresAt ==nil {_fcf :=_afg .CreatedAt .AddDate (1,0,0);if _dga .After (_fcf ){_fcf =_dga ;};_afg .ExpiresAt =&_fcf ;};if _afg .CreatedAt .After (*_afg .ExpiresAt ){return _ea .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u0065\u0064\u0020\u0041\u0074 \u0063a\u006e\u006e\u006f\u0074 \u0062\u0065 \u0047\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0045\u0078\u0070\u0069\u0072\u0065\u0073\u0020\u0041\u0074");
};if _afg .isExpired (){return _ea .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020l\u0069\u0063\u0065ns\u0065\u003a\u0020\u0054\u0068\u0065 \u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u0068\u0061\u0073\u0020\u0061\u006c\u0072e\u0061\u0064\u0079\u0020\u0065\u0078\u0070\u0069r\u0065\u0064");
};if len (_afg .CreatorName )< 1{return _ea .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u0020na\u006d\u0065");};if len (_afg .CreatorEmail )< 1{return _ea .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069c\u0065\u006e\u0073\u0065\u003a\u0020\u0043r\u0065\u0061\u0074\u006f\u0072\u0020\u0065\u006d\u0061\u0069\u006c");
};if _afg .CreatedAt .After (_dd ){if !_afg .UniPDF {return _ea .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065:\u0020\u0054\u0068\u0069\u0073\u0020\u0055\u006e\u0069\u0044\u006f\u0063\u0020k\u0065\u0079\u0020\u0069\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069d \u0066\u006f\u0072\u0020\u0055\u006e\u0069\u0050\u0044\u0046");
};};return nil ;};func (_bab *meteredClient )getStatus ()(meteredStatusResp ,error ){var _cde meteredStatusResp ;_cc :=_bab ._gca +"\u002fm\u0065t\u0065\u0072\u0065\u0064\u002f\u0073\u0074\u0061\u0074\u0075\u0073";var _ebd meteredStatusForm ;_gfg ,_fcg :=_bb .Marshal (_ebd );
if _fcg !=nil {return _cde ,_fcg ;};_fgb ,_fcg :=_adc (_gfg );if _fcg !=nil {return _cde ,_fcg ;};_aga ,_fcg :=_g .NewRequest ("\u0050\u004f\u0053\u0054",_cc ,_fgb );if _fcg !=nil {return _cde ,_fcg ;};_aga .Header .Add ("\u0043\u006f\u006et\u0065\u006e\u0074\u002d\u0054\u0079\u0070\u0065","\u0061\u0070p\u006c\u0069\u0063a\u0074\u0069\u006f\u006e\u002f\u006a\u0073\u006f\u006e");
_aga .Header .Add ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");_aga .Header .Add ("\u0041c\u0063e\u0070\u0074\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");
_aga .Header .Add ("\u0058-\u0041\u0050\u0049\u002d\u004b\u0045Y",_bab ._bgf );_bde ,_fcg :=_bab ._gcb .Do (_aga );if _fcg !=nil {return _cde ,_fcg ;};defer _bde .Body .Close ();if _bde .StatusCode !=200{return _cde ,_ea .Errorf ("\u0066\u0061i\u006c\u0065\u0064\u0020t\u006f\u0020c\u0068\u0065\u0063\u006b\u0069\u006e\u002c\u0020s\u0074\u0061\u0074\u0075\u0073\u0020\u0063\u006f\u0064\u0065\u0020\u0069s\u003a\u0020\u0025\u0064",_bde .StatusCode );
};_gdb ,_fcg :=_caga (_bde );if _fcg !=nil {return _cde ,_fcg ;};_fcg =_bb .Unmarshal (_gdb ,&_cde );if _fcg !=nil {return _cde ,_fcg ;};return _cde ,nil ;};func _caga (_ebbe *_g .Response )([]byte ,error ){var _gefg []byte ;_adce ,_eebcc :=_ccf (_ebbe );
if _eebcc !=nil {return _gefg ,_eebcc ;};return _d .ReadAll (_adce );};func _gg (_gfb string ,_gce string ,_ag string )(string ,error ){_bbg :=_bac .Index (_ag ,_gfb );if _bbg ==-1{return "",_ea .Errorf ("\u0068\u0065a\u0064\u0065\u0072 \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
};_dgbc :=_bac .Index (_ag ,_gce );if _dgbc ==-1{return "",_ea .Errorf ("\u0066\u006fo\u0074\u0065\u0072 \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_eb :=_bbg +len (_gfb )+1;return _ag [_eb :_dgbc -1],nil ;};func MakeUnlicensedKey ()*LicenseKey {_bae :=LicenseKey {};
_bae .CustomerName ="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";_bae .Tier =LicenseTierUnlicensed ;_bae .CreatedAt =_af .Now ().UTC ();_bae .CreatedAtInt =_bae .CreatedAt .Unix ();return &_bae ;};func Track (docKey string ,useKey string )error {return _dfad (docKey ,useKey ,false )};
func SetMeteredKey (apiKey string )error {if len (apiKey )==0{_db .Log .Error ("\u004d\u0065\u0074\u0065\u0072e\u0064\u0020\u004c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u0041\u0050\u0049 \u004b\u0065\u0079\u0020\u006d\u0075\u0073\u0074\u0020\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0065\u006d\u0070\u0074\u0079");
_db .Log .Error ("\u002d\u0020\u0047\u0072\u0061\u0062\u0020\u006f\u006e\u0065\u0020\u0069\u006e\u0020\u0074h\u0065\u0020\u0046\u0072\u0065\u0065\u0020\u0054\u0069\u0065\u0072\u0020\u0061t\u0020\u0068\u0074\u0074\u0070\u0073\u003a\u002f\u002f\u0063\u006c\u006fud\u002e\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _ea .Errorf ("\u006de\u0074\u0065\u0072e\u0064\u0020\u006ci\u0063en\u0073\u0065\u0020\u0061\u0070\u0069\u0020k\u0065\u0079\u0020\u006d\u0075\u0073\u0074\u0020\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0065\u006d\u0070\u0074\u0079\u003a\u0020\u0063\u0072\u0065\u0061\u0074\u0065 o\u006ee\u0020\u0061\u0074\u0020\u0068\u0074t\u0070\u0073\u003a\u002f\u002fc\u006c\u006f\u0075\u0064\u002e\u0075\u006e\u0069\u0064\u006f\u0063.\u0069\u006f");
};if _gcbg !=nil &&(_gcbg ._bd ||_gcbg .Tier !=LicenseTierUnlicensed ){_db .Log .Error ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0043\u0061\u006e\u006eo\u0074 \u0073\u0065\u0074\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u006b\u0065\u0079\u0020\u0074\u0077\u0069c\u0065\u0020\u002d\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u006a\u0075\u0073\u0074\u0020\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0069z\u0065\u0020\u006f\u006e\u0063\u0065");
return _c .New ("\u006c\u0069\u0063en\u0073\u0065\u0020\u006b\u0065\u0079\u0020\u0061\u006c\u0072\u0065\u0061\u0064\u0079\u0020\u0073\u0065\u0074");};_ef :=_fbf ();_ef ._bgf =apiKey ;_ebb ,_edf :=_ef .getStatus ();if _edf !=nil {return _edf ;};if !_ebb .Valid {return _c .New ("\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0076\u0061\u006c\u0069\u0064");
};_bbb :=&LicenseKey {_bd :true ,_eebc :apiKey };_gcbg =_bbb ;return nil ;};func GetMeteredState ()(MeteredStatus ,error ){if _gcbg ==nil {return MeteredStatus {},_c .New ("\u006c\u0069\u0063\u0065ns\u0065\u0020\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");
};if !_gcbg ._bd ||len (_gcbg ._eebc )==0{return MeteredStatus {},_c .New ("\u0061p\u0069 \u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");};_cge ,_cdec :=_cfg .loadState (_gcbg ._eebc );if _cdec !=nil {_db .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cdec );
return MeteredStatus {},_cdec ;};if _cge .Docs > 0{_ga :=_dfad ("","",true );if _ga !=nil {return MeteredStatus {},_ga ;};};_agad .Lock ();defer _agad .Unlock ();_gfbd :=_fbf ();_gfbd ._bgf =_gcbg ._eebc ;_bacb ,_cdec :=_gfbd .getStatus ();if _cdec !=nil {return MeteredStatus {},_cdec ;
};if !_bacb .Valid {return MeteredStatus {},_c .New ("\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0076\u0061\u006c\u0069\u0064");};_gbg :=MeteredStatus {OK :true ,Credits :_bacb .OrgCredits ,Used :_bacb .OrgUsed };return _gbg ,nil ;};type meteredStatusResp struct{Valid bool `json:"valid"`;
OrgCredits int64 `json:"org_credits"`;OrgUsed int64 `json:"org_used"`;OrgRemaining int64 `json:"org_remaining"`;};func _bed (_geg ,_cdd []byte )([]byte ,error ){_ecd ,_gcef :=_be .NewCipher (_geg );if _gcef !=nil {return nil ,_gcef ;};_beee :=make ([]byte ,_be .BlockSize +len (_cdd ));
_efb :=_beee [:_be .BlockSize ];if _ ,_aeca :=_fe .ReadFull (_cg .Reader ,_efb );_aeca !=nil {return nil ,_aeca ;};_gffg :=_eeb .NewCFBEncrypter (_ecd ,_efb );_gffg .XORKeyStream (_beee [_be .BlockSize :],_cdd );_baac :=make ([]byte ,_fa .URLEncoding .EncodedLen (len (_beee )));
_fa .URLEncoding .Encode (_baac ,_beee );return _baac ,nil ;};var _gcbg =MakeUnlicensedKey ();const _cdgga ="\u0055\u004e\u0049\u0050DF\u005f\u004c\u0049\u0043\u0045\u004e\u0053\u0045\u005f\u0050\u0041\u0054\u0048";func _fbf ()*meteredClient {_gef :=meteredClient {_gca :"h\u0074\u0074\u0070\u0073\u003a\u002f/\u0063\u006c\u006f\u0075\u0064\u002e\u0075\u006e\u0069d\u006f\u0063\u002ei\u006f/\u0061\u0070\u0069",_gcb :&_g .Client {Timeout :30*_af .Second }};
if _aa :=_ba .Getenv ("\u0055N\u0049\u0044\u004f\u0043_\u004c\u0049\u0043\u0045\u004eS\u0045_\u0053E\u0052\u0056\u0045\u0052\u005f\u0055\u0052L");_bac .HasPrefix (_aa ,"\u0068\u0074\u0074\u0070"){_gef ._gca =_aa ;};return &_gef ;};func (_adda *LicenseKey )IsLicensed ()bool {return _adda .Tier !=LicenseTierUnlicensed ||_adda ._bd };
func GetLicenseKey ()*LicenseKey {if _gcbg ==nil {return nil ;};_egb :=*_gcbg ;return &_egb ;};func _dfad (_bce string ,_acgg string ,_gdgg bool )error {if _gcbg ==nil {return _c .New ("\u006e\u006f\u0020\u006c\u0069\u0063\u0065\u006e\u0073e\u0020\u006b\u0065\u0079");
};if !_gcbg ._bd ||len (_gcbg ._eebc )==0{return nil ;};if len (_bce )==0&&!_gdgg {return _c .New ("\u0064\u006f\u0063\u004b\u0065\u0079\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");};_agad .Lock ();defer _agad .Unlock ();if _fdgc ==nil {_fdgc =map[string ]struct{}{};
};if _dgbd ==nil {_dgbd =map[string ]int {};};_ecc :=0;if !_gdgg {_ ,_fbg :=_fdgc [_bce ];if !_fbg {_fdgc [_bce ]=struct{}{};_ecc ++;};if _ecc ==0{return nil ;};_dgbd [_acgg ]++;};_ffg :=_af .Now ();_fea ,_ca :=_cfg .loadState (_gcbg ._eebc );if _ca !=nil {_db .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ca );
return _ca ;};if _fea .Usage ==nil {_fea .Usage =map[string ]int {};};for _aedd ,_acc :=range _dgbd {_fea .Usage [_aedd ]+=_acc ;};_dgbd =nil ;const _gab =24*_af .Hour ;const _ecf =3*24*_af .Hour ;if len (_fea .Instance )==0||_ffg .Sub (_fea .LastReported )> _gab ||(_fea .LimitDocs &&_fea .RemainingDocs <=_fea .Docs +int64 (_ecc ))||_gdgg {_cdg ,_adb :=_ba .Hostname ();
if _adb !=nil {return _adb ;};_fac :=_fea .Docs ;_fca ,_baee ,_adb :=_cbb ();if _adb !=nil {return _adb ;};_ee .Strings (_baee );_ee .Strings (_fca );_efc ,_adb :=_eff ();if _adb !=nil {return _adb ;};_ffb :=false ;for _ ,_efd :=range _baee {if _efd ==_efc .String (){_ffb =true ;
};};if !_ffb {_baee =append (_baee ,_efc .String ());};_ffa :=_fbf ();_ffa ._bgf =_gcbg ._eebc ;_fac +=int64 (_ecc );_cfbg :=meteredUsageCheckinForm {Instance :_fea .Instance ,Next :_fea .Next ,UsageNumber :int (_fac ),NumFailed :_fea .NumErrors ,Hostname :_cdg ,LocalIP :_bac .Join (_baee ,"\u002c\u0020"),MacAddress :_bac .Join (_fca ,"\u002c\u0020"),Package :"\u0075\u006e\u0069\u0070\u0064\u0066",PackageVersion :_db .Version ,Usage :_fea .Usage };
if len (_fca )==0{_cfbg .MacAddress ="\u006e\u006f\u006e\u0065";};_gadd :=int64 (0);_fagd :=_fea .NumErrors ;_bfa :=_ffg ;_daa :=0;_fbfc :=_fea .LimitDocs ;_cbc ,_adb :=_ffa .checkinUsage (_cfbg );if _adb !=nil {if _ffg .Sub (_fea .LastReported )> _ecf {return _c .New ("\u0074\u006f\u006f\u0020\u006c\u006f\u006e\u0067\u0020\u0073\u0069\u006e\u0063\u0065\u0020\u006c\u0061\u0073\u0074\u0020\u0073\u0075\u0063\u0063e\u0073\u0073\u0066\u0075\u006c \u0063\u0068e\u0063\u006b\u0069\u006e");
};_gadd =_fac ;_fagd ++;_bfa =_fea .LastReported ;}else {_fbfc =_cbc .LimitDocs ;_daa =_cbc .RemainingDocs ;_fagd =0;};if len (_cbc .Instance )==0{_cbc .Instance =_cfbg .Instance ;};if len (_cbc .Next )==0{_cbc .Next =_cfbg .Next ;};_adb =_cfg .updateState (_ffa ._bgf ,_cbc .Instance ,_cbc .Next ,int (_gadd ),_fbfc ,_daa ,int (_fagd ),_bfa ,nil );
if _adb !=nil {return _adb ;};if !_cbc .Success {return _ea .Errorf ("\u0065r\u0072\u006f\u0072\u003a\u0020\u0025s",_cbc .Message );};}else {_ca =_cfg .updateState (_gcbg ._eebc ,_fea .Instance ,_fea .Next ,int (_fea .Docs )+_ecc ,_fea .LimitDocs ,int (_fea .RemainingDocs ),int (_fea .NumErrors ),_fea .LastReported ,_fea .Usage );
if _ca !=nil {return _ca ;};};return nil ;};func _cgd (_dc string ,_bc string )([]byte ,error ){var (_cf int ;_feg string ;);for _ ,_feg =range []string {"\u000a\u002b\u000a","\u000d\u000a\u002b\r\u000a","\u0020\u002b\u0020"}{if _cf =_bac .Index (_bc ,_feg );
_cf !=-1{break ;};};if _cf ==-1{return nil ,_ea .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u002c \u0073i\u0067n\u0061t\u0075\u0072\u0065\u0020\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u006f\u0072");};_bg :=_bc [:_cf ];
_eec :=_cf +len (_feg );_dac :=_bc [_eec :];if _bg ==""||_dac ==""{return nil ,_ea .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u0069n\u0070\u0075\u0074,\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0069\u0067\u0069n\u0061\u006c \u006f\u0072\u0020\u0073\u0069\u0067n\u0061\u0074u\u0072\u0065");
};_bad ,_beg :=_fa .StdEncoding .DecodeString (_bg );if _beg !=nil {return nil ,_ea .Errorf ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u006f\u0072\u0069\u0067\u0069\u006ea\u006c");};_dgb ,_beg :=_fa .StdEncoding .DecodeString (_dac );
if _beg !=nil {return nil ,_ea .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065");};_egd ,_ :=_fg .Decode ([]byte (_dc ));if _egd ==nil {return nil ,_ea .Errorf ("\u0050\u0075\u0062\u004b\u0065\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};_gdd ,_beg :=_fd .ParsePKIXPublicKey (_egd .Bytes );if _beg !=nil {return nil ,_beg ;};_ac :=_gdd .(*_gd .PublicKey );if _ac ==nil {return nil ,_ea .Errorf ("\u0050u\u0062\u004b\u0065\u0079\u0020\u0063\u006f\u006e\u0076\u0065\u0072s\u0069\u006f\u006e\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};_gc :=_da .New ();_gc .Write (_bad );_baa :=_gc .Sum (nil );_beg =_gd .VerifyPKCS1v15 (_ac ,_b .SHA512 ,_baa ,_dgb );if _beg !=nil {return nil ,_beg ;};return _bad ,nil ;};func (_gb *LicenseKey )ToString ()string {if _gb ._bd {return "M\u0065t\u0065\u0072\u0065\u0064\u0020\u0073\u0075\u0062s\u0063\u0072\u0069\u0070ti\u006f\u006e";
};_eebd :=_ea .Sprintf ("\u004ci\u0063e\u006e\u0073\u0065\u0020\u0049\u0064\u003a\u0020\u0025\u0073\u000a",_gb .LicenseId );_eebd +=_ea .Sprintf ("\u0043\u0075s\u0074\u006f\u006de\u0072\u0020\u0049\u0064\u003a\u0020\u0025\u0073\u000a",_gb .CustomerId );
_eebd +=_ea .Sprintf ("\u0043u\u0073t\u006f\u006d\u0065\u0072\u0020N\u0061\u006de\u003a\u0020\u0025\u0073\u000a",_gb .CustomerName );_eebd +=_ea .Sprintf ("\u0054i\u0065\u0072\u003a\u0020\u0025\u0073\n",_gb .Tier );_eebd +=_ea .Sprintf ("\u0043r\u0065a\u0074\u0065\u0064\u0020\u0041\u0074\u003a\u0020\u0025\u0073\u000a",_db .UtcTimeFormat (_gb .CreatedAt ));
if _gb .ExpiresAt ==nil {_eebd +="\u0045x\u0070i\u0072\u0065\u0073\u0020\u0041t\u003a\u0020N\u0065\u0076\u0065\u0072\u000a";}else {_eebd +=_ea .Sprintf ("\u0045x\u0070i\u0072\u0065\u0073\u0020\u0041\u0074\u003a\u0020\u0025\u0073\u000a",_db .UtcTimeFormat (*_gb .ExpiresAt ));
};_eebd +=_ea .Sprintf ("\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u003a\u0020\u0025\u0073\u0020<\u0025\u0073\u003e\u000a",_gb .CreatorName ,_gb .CreatorEmail );return _eebd ;};func _dbe (_cfb string )(LicenseKey ,error ){var _fag LicenseKey ;_ede ,_ce :=_gg (_dbc ,_ad ,_cfb );
if _ce !=nil {return _fag ,_ce ;};_dcc ,_ce :=_cgd (_cfd ,_ede );if _ce !=nil {return _fag ,_ce ;};_ce =_bb .Unmarshal (_dcc ,&_fag );if _ce !=nil {return _fag ,_ce ;};_fag .CreatedAt =_af .Unix (_fag .CreatedAtInt ,0);if _fag .ExpiresAtInt > 0{_dff :=_af .Unix (_fag .ExpiresAtInt ,0);
_fag .ExpiresAt =&_dff ;};return _fag ,nil ;};var _dgbd map[string ]int ;func (_cb *LicenseKey )getExpiryDateToCompare ()_af .Time {if _cb .Trial {return _af .Now ().UTC ();};return _db .ReleasedAt ;};func _faf ()string {_bddb :=_ba .Getenv ("\u0048\u004f\u004d\u0045");
if len (_bddb )==0{_bddb ,_ =_ba .UserHomeDir ();};return _bddb ;};func init (){_bgdb :=_ba .Getenv (_cdgga );_afe :=_ba .Getenv (_gbc );if len (_bgdb )==0||len (_afe )==0{return ;};_fgd ,_gcd :=_d .ReadFile (_bgdb );if _gcd !=nil {_db .Log .Error ("\u0055\u006eab\u006c\u0065\u0020t\u006f\u0020\u0072\u0065ad \u006cic\u0065\u006e\u0073\u0065\u0020\u0063\u006fde\u0020\u0066\u0069\u006c\u0065\u003a\u0020%\u0076",_gcd );
return ;};_gcd =SetLicenseKey (string (_fgd ),_afe );if _gcd !=nil {_db .Log .Error ("\u0055\u006e\u0061b\u006c\u0065\u0020\u0074o\u0020\u006c\u006f\u0061\u0064\u0020\u006ci\u0063\u0065\u006e\u0073\u0065\u0020\u0063\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_gcd );
return ;};};func (_cfgb defaultStateHolder )updateState (_afd ,_fef ,_cbg string ,_cgdc int ,_bgg bool ,_fed int ,_bgd int ,_ega _af .Time ,_eed map[string ]int )error {_ggd :=_faf ();if len (_ggd )==0{return _c .New ("\u0068\u006fm\u0065\u0020\u0064i\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");
};_dbg :=_ed .Join (_ggd ,"\u002eu\u006e\u0069\u0064\u006f\u0063");_dgd :=_ba .MkdirAll (_dbg ,0777);if _dgd !=nil {return _dgd ;};if len (_afd )< 20{return _c .New ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006b\u0065\u0079");};_dab :=[]byte (_afd );
_addg :=_da .Sum512_256 (_dab [:20]);_afbf :=_fc .EncodeToString (_addg [:]);_dda :=_ed .Join (_dbg ,_afbf );var _fcd reportState ;_fcd .Docs =int64 (_cgdc );_fcd .NumErrors =int64 (_bgd );_fcd .LimitDocs =_bgg ;_fcd .RemainingDocs =int64 (_fed );_fcd .LastWritten =_af .Now ().UTC ();
_fcd .LastReported =_ega ;_fcd .Instance =_fef ;_fcd .Next =_cbg ;_fcd .Usage =_eed ;_cce ,_dgd :=_bb .Marshal (_fcd );if _dgd !=nil {return _dgd ;};const _feda ="\u0068\u00619\u004e\u004b\u0038]\u0052\u0062\u004c\u002a\u006d\u0034\u004c\u004b\u0057";_cce ,_dgd =_bed ([]byte (_feda ),_cce );
if _dgd !=nil {return _dgd ;};_dgd =_d .WriteFile (_dda ,_cce ,0600);if _dgd !=nil {return _dgd ;};return nil ;};type MeteredStatus struct{OK bool ;Credits int64 ;Used int64 ;};const _cfd ="\u000a\u002d\u002d\u002d\u002d\u002d\u0042\u0045\u0047\u0049\u004e \u0050\u0055\u0042\u004c\u0049\u0043\u0020\u004b\u0045Y\u002d\u002d\u002d\u002d\u002d\u000a\u004d\u0049I\u0042\u0049\u006a\u0041NB\u0067\u006b\u0071\u0068\u006b\u0069G\u0039\u0077\u0030\u0042\u0041\u0051\u0045\u0046A\u0041\u004f\u0043\u0041\u0051\u0038\u0041\u004d\u0049\u0049\u0042\u0043\u0067\u004b\u0043\u0041\u0051\u0045A\u006dF\u0055\u0069\u0079\u0064\u0037\u0062\u0035\u0058\u006a\u0070\u006b\u0050\u0035\u0052\u0061\u0070\u0034\u0077\u000a\u0044\u0063\u0031d\u0079\u007a\u0049\u0051\u0034\u004c\u0065\u006b\u0078\u0072\u0076\u0079\u0074\u006e\u0045\u004d\u0070\u004e\u0055\u0062\u006f\u0036i\u0041\u0037\u0034\u0056\u0038\u0072\u0075\u005a\u004f\u0076\u0072\u0053\u0063\u0073\u0066\u0032\u0051\u0065\u004e9\u002f\u0071r\u0055\u0047\u0038\u0071\u0045\u0062\u0055\u0057\u0064\u006f\u0045\u0059\u0071+\u000a\u006f\u0074\u0046\u004e\u0041\u0046N\u0078\u006c\u0047\u0062\u0078\u0062\u0044\u0048\u0063\u0064\u0047\u0056\u0061\u004d\u0030\u004f\u0058\u0064\u0058g\u0044y\u004c5\u0061\u0049\u0045\u0061\u0067\u004c\u0030\u0063\u0035\u0070\u0077\u006a\u0049\u0064\u0050G\u0049\u006e\u0034\u0036\u0066\u0037\u0038\u0065\u004d\u004a\u002b\u004a\u006b\u0064\u0063\u0070\u0044\n\u0044\u004a\u0061\u0071\u0059\u0058d\u0072\u007a5\u004b\u0065\u0073\u0068\u006aS\u0069\u0049\u0061\u0061\u0037\u006d\u0065\u006e\u0042\u0049\u0041\u0058\u0053\u0034\u0055\u0046\u0078N\u0066H\u0068\u004e\u0030\u0048\u0043\u0059\u005a\u0059\u0071\u0051\u0047\u0037\u0062K+\u0073\u0035\u0072R\u0048\u006f\u006e\u0079\u0064\u004eW\u0045\u0047\u000a\u0048\u0038M\u0079\u0076\u00722\u0070\u0079\u0061\u0032K\u0072\u004d\u0075m\u0066\u006d\u0041\u0078\u0055\u0042\u0036\u0066\u0065\u006e\u0043\u002f4\u004f\u0030\u0057\u00728\u0067\u0066\u0050\u004f\u0055\u0038R\u0069\u0074\u006d\u0062\u0044\u0076\u0051\u0050\u0049\u0052\u0058\u004fL\u0034\u0076\u0054B\u0072\u0042\u0064\u0062a\u0041\u000a9\u006e\u0077\u004e\u0050\u002b\u0069\u002f\u002f\u0032\u0030\u004d\u00542\u0062\u0078\u006d\u0065\u0057\u0042\u002b\u0067\u0070\u0063\u0045\u0068G\u0070\u0058\u005a7\u0033\u0033\u0061\u007a\u0051\u0078\u0072\u0043\u0033\u004a\u0034\u0076\u0033C\u005a\u006d\u0045\u004eS\u0074\u0044\u004b\u002f\u004b\u0044\u0053\u0050\u004b\u0055\u0047\u0066\u00756\u000a\u0066\u0077I\u0044\u0041\u0051\u0041\u0042\u000a\u002d\u002d\u002d\u002d\u002dE\u004e\u0044\u0020\u0050\u0055\u0042\u004c\u0049\u0043 \u004b\u0045Y\u002d\u002d\u002d\u002d\u002d\n";
func _cbb ()([]string ,[]string ,error ){_efa ,_aec :=_ec .Interfaces ();if _aec !=nil {return nil ,nil ,_aec ;};var _dec []string ;var _ab []string ;for _ ,_abd :=range _efa {if _abd .Flags &_ec .FlagUp ==0||_fb .Equal (_abd .HardwareAddr ,nil ){continue ;
};_cea ,_begf :=_abd .Addrs ();if _begf !=nil {return nil ,nil ,_begf ;};_bcb :=0;for _ ,_cfa :=range _cea {var _gcc _ec .IP ;switch _cdgg :=_cfa .(type ){case *_ec .IPNet :_gcc =_cdgg .IP ;case *_ec .IPAddr :_gcc =_cdgg .IP ;};if _gcc .IsLoopback (){continue ;
};if _gcc .To4 ()==nil {continue ;};_ab =append (_ab ,_gcc .String ());_bcb ++;};_addf :=_abd .HardwareAddr .String ();if _addf !=""&&_bcb > 0{_dec =append (_dec ,_addf );};};return _dec ,_ab ,nil ;};type stateLoader interface{loadState (_aed string )(reportState ,error );
updateState (_dbf ,_ceb ,_aedc string ,_gdg int ,_gfa bool ,_dcf int ,_ff int ,_gfbf _af .Time ,_edb map[string ]int )error ;};type meteredUsageCheckinResp struct{Instance string `json:"inst"`;Next string `json:"next"`;Success bool `json:"success"`;Message string `json:"message"`;
RemainingDocs int `json:"rd"`;LimitDocs bool `json:"ld"`;};func (_daeb defaultStateHolder )loadState (_eab string )(reportState ,error ){_dbd :=_faf ();if len (_dbd )==0{return reportState {},_c .New ("\u0068\u006fm\u0065\u0020\u0064i\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");
};_bea :=_ed .Join (_dbd ,"\u002eu\u006e\u0069\u0064\u006f\u0063");_bee :=_ba .MkdirAll (_bea ,0777);if _bee !=nil {return reportState {},_bee ;};if len (_eab )< 20{return reportState {},_c .New ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006b\u0065\u0079");
};_gad :=[]byte (_eab );_edea :=_da .Sum512_256 (_gad [:20]);_dfa :=_fc .EncodeToString (_edea [:]);_gecf :=_ed .Join (_bea ,_dfa );_fga ,_bee :=_d .ReadFile (_gecf );if _bee !=nil {if _ba .IsNotExist (_bee ){return reportState {},nil ;};_db .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bee );
return reportState {},_c .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061");};const _bdeg ="\u0068\u00619\u004e\u004b\u0038]\u0052\u0062\u004c\u002a\u006d\u0034\u004c\u004b\u0057";_fga ,_bee =_bacf ([]byte (_bdeg ),_fga );if _bee !=nil {return reportState {},_bee ;
};var _bef reportState ;_bee =_bb .Unmarshal (_fga ,&_bef );if _bee !=nil {_db .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0076",_bee );return reportState {},_c .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061");
};return _bef ,nil ;};