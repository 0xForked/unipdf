//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package license ;import (_efc "bytes";_g "compress/gzip";_e "crypto";_ec "crypto/aes";_da "crypto/cipher";_gg "crypto/hmac";_ab "crypto/rand";_bd "crypto/rsa";_aag "crypto/sha256";_ecf "crypto/sha512";_cc "crypto/x509";_gef "encoding/base64";_aa "encoding/hex";
_cb "encoding/json";_gcf "encoding/pem";_de "errors";_be "fmt";_cbg "github.com/unidoc/unipdf/v3/common";_d "io";_c "io/ioutil";_db "net";_dg "net/http";_a "os";_b "path/filepath";_gb "sort";_gc "strings";_ef "sync";_ge "time";);func (_abe *LicenseKey )ToString ()string {if _abe ._baf {return "M\u0065t\u0065\u0072\u0065\u0064\u0020\u0073\u0075\u0062s\u0063\u0072\u0069\u0070ti\u006f\u006e";
};_efe :=_be .Sprintf ("\u004ci\u0063e\u006e\u0073\u0065\u0020\u0049\u0064\u003a\u0020\u0025\u0073\u000a",_abe .LicenseId );_efe +=_be .Sprintf ("\u0043\u0075s\u0074\u006f\u006de\u0072\u0020\u0049\u0064\u003a\u0020\u0025\u0073\u000a",_abe .CustomerId );
_efe +=_be .Sprintf ("\u0043u\u0073t\u006f\u006d\u0065\u0072\u0020N\u0061\u006de\u003a\u0020\u0025\u0073\u000a",_abe .CustomerName );_efe +=_be .Sprintf ("\u0054i\u0065\u0072\u003a\u0020\u0025\u0073\n",_abe .Tier );_efe +=_be .Sprintf ("\u0043r\u0065a\u0074\u0065\u0064\u0020\u0041\u0074\u003a\u0020\u0025\u0073\u000a",_cbg .UtcTimeFormat (_abe .CreatedAt ));
if _abe .ExpiresAt ==nil {_efe +="\u0045x\u0070i\u0072\u0065\u0073\u0020\u0041t\u003a\u0020N\u0065\u0076\u0065\u0072\u000a";}else {_efe +=_be .Sprintf ("\u0045x\u0070i\u0072\u0065\u0073\u0020\u0041\u0074\u003a\u0020\u0025\u0073\u000a",_cbg .UtcTimeFormat (*_abe .ExpiresAt ));
};_efe +=_be .Sprintf ("\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u003a\u0020\u0025\u0073\u0020<\u0025\u0073\u003e\u000a",_abe .CreatorName ,_abe .CreatorEmail );return _efe ;};type meteredClient struct{_dga string ;_abcd string ;_bfa *_dg .Client ;};
type LicenseKey struct{LicenseId string `json:"license_id"`;CustomerId string `json:"customer_id"`;CustomerName string `json:"customer_name"`;Tier string `json:"tier"`;CreatedAt _ge .Time `json:"-"`;CreatedAtInt int64 `json:"created_at"`;ExpiresAt *_ge .Time `json:"-"`;
ExpiresAtInt int64 `json:"expires_at"`;CreatedBy string `json:"created_by"`;CreatorName string `json:"creator_name"`;CreatorEmail string `json:"creator_email"`;UniPDF bool `json:"unipdf"`;UniOffice bool `json:"unioffice"`;UniHTML bool `json:"unihtml"`;
Trial bool `json:"trial"`;_baf bool ;_fb string ;_dee bool ;};type meteredStatusResp struct{Valid bool `json:"valid"`;OrgCredits int64 `json:"org_credits"`;OrgUsed int64 `json:"org_used"`;OrgRemaining int64 `json:"org_remaining"`;};func (_beg *LicenseKey )isExpired ()bool {return _beg .getExpiryDateToCompare ().After (*_beg .ExpiresAt )};
func (_begf *LicenseKey )getExpiryDateToCompare ()_ge .Time {if _begf .Trial {return _ge .Now ().UTC ();};return _cbg .ReleasedAt ;};func (_dbc *meteredClient )checkinUsage (_bdd meteredUsageCheckinForm )(meteredUsageCheckinResp ,error ){_bdd .Package ="\u0075\u006e\u0069\u0070\u0064\u0066";
_bdd .PackageVersion =_cbg .Version ;var _bag meteredUsageCheckinResp ;_fg :=_dbc ._dga +"\u002f\u006d\u0065\u0074er\u0065\u0064\u002f\u0075\u0073\u0061\u0067\u0065\u005f\u0063\u0068\u0065\u0063\u006bi\u006e";_gcg ,_dag :=_cb .Marshal (_bdd );if _dag !=nil {return _bag ,_dag ;
};_ebf ,_dag :=_bad (_gcg );if _dag !=nil {return _bag ,_dag ;};_cca ,_dag :=_dg .NewRequest ("\u0050\u004f\u0053\u0054",_fg ,_ebf );if _dag !=nil {return _bag ,_dag ;};_cca .Header .Add ("\u0043\u006f\u006et\u0065\u006e\u0074\u002d\u0054\u0079\u0070\u0065","\u0061\u0070p\u006c\u0069\u0063a\u0074\u0069\u006f\u006e\u002f\u006a\u0073\u006f\u006e");
_cca .Header .Add ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");_cca .Header .Add ("\u0041c\u0063e\u0070\u0074\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");
_cca .Header .Add ("\u0058-\u0041\u0050\u0049\u002d\u004b\u0045Y",_dbc ._abcd );_fdg ,_dag :=_dbc ._bfa .Do (_cca );if _dag !=nil {return _bag ,_dag ;};defer _fdg .Body .Close ();if _fdg .StatusCode !=200{_ffc ,_dfg :=_bffg (_fdg );if _dfg !=nil {return _bag ,_dfg ;
};_dfg =_cb .Unmarshal (_ffc ,&_bag );if _dfg !=nil {return _bag ,_dfg ;};return _bag ,_be .Errorf ("\u0066\u0061i\u006c\u0065\u0064\u0020t\u006f\u0020c\u0068\u0065\u0063\u006b\u0069\u006e\u002c\u0020s\u0074\u0061\u0074\u0075\u0073\u0020\u0063\u006f\u0064\u0065\u0020\u0069s\u003a\u0020\u0025\u0064",_fdg .StatusCode );
};_eeb :=_fdg .Header .Get ("\u0058\u002d\u0055\u0043\u002d\u0053\u0069\u0067\u006ea\u0074\u0075\u0072\u0065");_cfb :=_acc (_bdd .MacAddress ,string (_gcg ));if _cfb !=_eeb {_cbg .Log .Error ("I\u006e\u0076\u0061l\u0069\u0064\u0020\u0072\u0065\u0073\u0070\u006f\u006e\u0073\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u002c\u0020\u0073\u0065t\u0020\u0074\u0068e\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u0073\u0065\u0072\u0076e\u0072\u0020\u0074\u006f \u0068\u0074\u0074\u0070s\u003a\u002f\u002f\u0063\u006c\u006f\u0075\u0064\u002e\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069o\u002f\u0061\u0070\u0069");
return _bag ,_de .New ("\u0066\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u0063\u0068\u0065\u0063\u006b\u0069\u006e\u002c\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0065\u0072\u0076\u0065\u0072 \u0072\u0065\u0073\u0070\u006f\u006e\u0073\u0065");
};_age ,_dag :=_bffg (_fdg );if _dag !=nil {return _bag ,_dag ;};_dag =_cb .Unmarshal (_age ,&_bag );if _dag !=nil {return _bag ,_dag ;};return _bag ,nil ;};type defaultStateHolder struct{};func _ea (_abb string ,_bf []byte )(string ,error ){_fe ,_ :=_gcf .Decode ([]byte (_abb ));
if _fe ==nil {return "",_be .Errorf ("\u0050\u0072\u0069\u0076\u004b\u0065\u0079\u0020\u0066a\u0069\u006c\u0065\u0064");};_fa ,_af :=_cc .ParsePKCS1PrivateKey (_fe .Bytes );if _af !=nil {return "",_af ;};_afa :=_ecf .New ();_afa .Write (_bf );_ca :=_afa .Sum (nil );
_gbc ,_af :=_bd .SignPKCS1v15 (_ab .Reader ,_fa ,_e .SHA512 ,_ca );if _af !=nil {return "",_af ;};_ag :=_gef .StdEncoding .EncodeToString (_bf );_ag +="\u000a\u002b\u000a";_ag +=_gef .StdEncoding .EncodeToString (_gbc );return _ag ,nil ;};func _bad (_aadd []byte )(_d .Reader ,error ){_ace :=new (_efc .Buffer );
_adb :=_g .NewWriter (_ace );_adb .Write (_aadd );_bbb :=_adb .Close ();if _bbb !=nil {return nil ,_bbb ;};return _ace ,nil ;};type reportState struct{Instance string `json:"inst"`;Next string `json:"n"`;Docs int64 `json:"d"`;NumErrors int64 `json:"e"`;
LimitDocs bool `json:"ld"`;RemainingDocs int64 `json:"rd"`;LastReported _ge .Time `json:"lr"`;LastWritten _ge .Time `json:"lw"`;Usage map[string ]int `json:"u"`;};var _bcb =&_ef .Mutex {};const _ggf ="\u000a\u002d\u002d\u002d\u002d\u002d\u0042\u0045\u0047\u0049\u004e \u0050\u0055\u0042\u004c\u0049\u0043\u0020\u004b\u0045Y\u002d\u002d\u002d\u002d\u002d\u000a\u004d\u0049I\u0042\u0049\u006a\u0041NB\u0067\u006b\u0071\u0068\u006b\u0069G\u0039\u0077\u0030\u0042\u0041\u0051\u0045\u0046A\u0041\u004f\u0043\u0041\u0051\u0038\u0041\u004d\u0049\u0049\u0042\u0043\u0067\u004b\u0043\u0041\u0051\u0045A\u006dF\u0055\u0069\u0079\u0064\u0037\u0062\u0035\u0058\u006a\u0070\u006b\u0050\u0035\u0052\u0061\u0070\u0034\u0077\u000a\u0044\u0063\u0031d\u0079\u007a\u0049\u0051\u0034\u004c\u0065\u006b\u0078\u0072\u0076\u0079\u0074\u006e\u0045\u004d\u0070\u004e\u0055\u0062\u006f\u0036i\u0041\u0037\u0034\u0056\u0038\u0072\u0075\u005a\u004f\u0076\u0072\u0053\u0063\u0073\u0066\u0032\u0051\u0065\u004e9\u002f\u0071r\u0055\u0047\u0038\u0071\u0045\u0062\u0055\u0057\u0064\u006f\u0045\u0059\u0071+\u000a\u006f\u0074\u0046\u004e\u0041\u0046N\u0078\u006c\u0047\u0062\u0078\u0062\u0044\u0048\u0063\u0064\u0047\u0056\u0061\u004d\u0030\u004f\u0058\u0064\u0058g\u0044y\u004c5\u0061\u0049\u0045\u0061\u0067\u004c\u0030\u0063\u0035\u0070\u0077\u006a\u0049\u0064\u0050G\u0049\u006e\u0034\u0036\u0066\u0037\u0038\u0065\u004d\u004a\u002b\u004a\u006b\u0064\u0063\u0070\u0044\n\u0044\u004a\u0061\u0071\u0059\u0058d\u0072\u007a5\u004b\u0065\u0073\u0068\u006aS\u0069\u0049\u0061\u0061\u0037\u006d\u0065\u006e\u0042\u0049\u0041\u0058\u0053\u0034\u0055\u0046\u0078N\u0066H\u0068\u004e\u0030\u0048\u0043\u0059\u005a\u0059\u0071\u0051\u0047\u0037\u0062K+\u0073\u0035\u0072R\u0048\u006f\u006e\u0079\u0064\u004eW\u0045\u0047\u000a\u0048\u0038M\u0079\u0076\u00722\u0070\u0079\u0061\u0032K\u0072\u004d\u0075m\u0066\u006d\u0041\u0078\u0055\u0042\u0036\u0066\u0065\u006e\u0043\u002f4\u004f\u0030\u0057\u00728\u0067\u0066\u0050\u004f\u0055\u0038R\u0069\u0074\u006d\u0062\u0044\u0076\u0051\u0050\u0049\u0052\u0058\u004fL\u0034\u0076\u0054B\u0072\u0042\u0064\u0062a\u0041\u000a9\u006e\u0077\u004e\u0050\u002b\u0069\u002f\u002f\u0032\u0030\u004d\u00542\u0062\u0078\u006d\u0065\u0057\u0042\u002b\u0067\u0070\u0063\u0045\u0068G\u0070\u0058\u005a7\u0033\u0033\u0061\u007a\u0051\u0078\u0072\u0043\u0033\u004a\u0034\u0076\u0033C\u005a\u006d\u0045\u004eS\u0074\u0044\u004b\u002f\u004b\u0044\u0053\u0050\u004b\u0055\u0047\u0066\u00756\u000a\u0066\u0077I\u0044\u0041\u0051\u0041\u0042\u000a\u002d\u002d\u002d\u002d\u002dE\u004e\u0044\u0020\u0050\u0055\u0042\u004c\u0049\u0043 \u004b\u0045Y\u002d\u002d\u002d\u002d\u002d\n";
func (_cbe defaultStateHolder )loadState (_gce string )(reportState ,error ){_edf :=_cead ();if len (_edf )==0{return reportState {},_de .New ("\u0068\u006fm\u0065\u0020\u0064i\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");};_bb :=_b .Join (_edf ,"\u002eu\u006e\u0069\u0064\u006f\u0063");
_gcfc :=_a .MkdirAll (_bb ,0777);if _gcfc !=nil {return reportState {},_gcfc ;};if len (_gce )< 20{return reportState {},_de .New ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006b\u0065\u0079");};_bec :=[]byte (_gce );_agc :=_ecf .Sum512_256 (_bec [:20]);
_gec :=_aa .EncodeToString (_agc [:]);_bg :=_b .Join (_bb ,_gec );_dgbg ,_gcfc :=_c .ReadFile (_bg );if _gcfc !=nil {if _a .IsNotExist (_gcfc ){return reportState {},nil ;};_cbg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gcfc );return reportState {},_de .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061");
};const _acd ="\u0068\u00619\u004e\u004b\u0038]\u0052\u0062\u004c\u002a\u006d\u0034\u004c\u004b\u0057";_dgbg ,_gcfc =_cfda ([]byte (_acd ),_dgbg );if _gcfc !=nil {return reportState {},_gcfc ;};var _aaf reportState ;_gcfc =_cb .Unmarshal (_dgbg ,&_aaf );
if _gcfc !=nil {_cbg .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0076",_gcfc );return reportState {},_de .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061");
};return _aaf ,nil ;};func _cead ()string {_gbce :=_a .Getenv ("\u0048\u004f\u004d\u0045");if len (_gbce )==0{_gbce ,_ =_a .UserHomeDir ();};return _gbce ;};type stateLoader interface{loadState (_fbf string )(reportState ,error );updateState (_ada ,_fae ,_abbd string ,_aec int ,_cfba bool ,_fce int ,_gbef int ,_ggd _ge .Time ,_fga map[string ]int )error ;
};const _ecgc ="\u0055\u004e\u0049\u0050DF\u005f\u004c\u0049\u0043\u0045\u004e\u0053\u0045\u005f\u0050\u0041\u0054\u0048";func _dcd (_fbac string ,_eee string ,_edff bool )error {if _fgg ==nil {return _de .New ("\u006e\u006f\u0020\u006c\u0069\u0063\u0065\u006e\u0073e\u0020\u006b\u0065\u0079");
};if !_fgg ._baf ||len (_fgg ._fb )==0{return nil ;};if len (_fbac )==0&&!_edff {return _de .New ("\u0064\u006f\u0063\u004b\u0065\u0079\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");};_bcb .Lock ();defer _bcb .Unlock ();if _cee ==nil {_cee =map[string ]struct{}{};
};if _agf ==nil {_agf =map[string ]int {};};_bcf :=0;_ ,_ffd :=_cee [_fbac ];if !_ffd {_cee [_fbac ]=struct{}{};_bcf ++;};if _bcf ==0{return nil ;};_agf [_eee ]++;_cab :=_ge .Now ();_efd ,_cdb :=_gba .loadState (_fgg ._fb );if _cdb !=nil {_cbg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cdb );
return _cdb ;};if _efd .Usage ==nil {_efd .Usage =map[string ]int {};};for _edd ,_fge :=range _agf {_efd .Usage [_edd ]+=_fge ;};_agf =nil ;const _egf =24*_ge .Hour ;const _gbag =3*24*_ge .Hour ;if len (_efd .Instance )==0||_cab .Sub (_efd .LastReported )> _egf ||(_efd .LimitDocs &&_efd .RemainingDocs <=_efd .Docs +int64 (_bcf ))||_edff {_agcg ,_edb :=_a .Hostname ();
if _edb !=nil {return _edb ;};_gdb :=_efd .Docs ;_fag ,_bae ,_edb :=_eddg ();if _edb !=nil {_cbg .Log .Debug ("\u0055\u006e\u0061b\u006c\u0065\u0020\u0074o\u0020\u0067\u0065\u0074\u0020\u006c\u006fc\u0061\u006c\u0020\u0061\u0064\u0064\u0072\u0065\u0073\u0073\u003a\u0020\u0025\u0073",_edb .Error ());
_fag =append (_fag ,"\u0069n\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020n\u006ft\u0020a\u0076\u0061\u0069\u006c\u0061\u0062\u006ce");_bae =append (_bae ,"\u0069n\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020n\u006ft\u0020a\u0076\u0061\u0069\u006c\u0061\u0062\u006ce");
}else {_gb .Strings (_bae );_gb .Strings (_fag );_gac ,_agg :=_gfd ();if _agg !=nil {return _agg ;};_efg :=false ;for _ ,_egb :=range _bae {if _egb ==_gac .String (){_efg =true ;};};if !_efg {_bae =append (_bae ,_gac .String ());};};_bac :=_feg ();_bac ._abcd =_fgg ._fb ;
_gdb +=int64 (_bcf );_fcc :=meteredUsageCheckinForm {Instance :_efd .Instance ,Next :_efd .Next ,UsageNumber :int (_gdb ),NumFailed :_efd .NumErrors ,Hostname :_agcg ,LocalIP :_gc .Join (_bae ,"\u002c\u0020"),MacAddress :_gc .Join (_fag ,"\u002c\u0020"),Package :"\u0075\u006e\u0069\u0070\u0064\u0066",PackageVersion :_cbg .Version ,Usage :_efd .Usage ,IsPersistentCache :_fgg ._dee ,Timestamp :_cab .Unix ()};
if len (_fag )==0{_fcc .MacAddress ="\u006e\u006f\u006e\u0065";};_bab :=int64 (0);_bgb :=_efd .NumErrors ;_aee :=_cab ;_dbg :=0;_aba :=_efd .LimitDocs ;_edbe ,_edb :=_bac .checkinUsage (_fcc );if _edb !=nil {if _cab .Sub (_efd .LastReported )> _gbag {if !_edbe .Success {return _de .New (_edbe .Message );
};return _de .New ("\u0074\u006f\u006f\u0020\u006c\u006f\u006e\u0067\u0020\u0073\u0069\u006e\u0063\u0065\u0020\u006c\u0061\u0073\u0074\u0020\u0073\u0075\u0063\u0063e\u0073\u0073\u0066\u0075\u006c \u0063\u0068e\u0063\u006b\u0069\u006e");};_bab =_gdb ;_bgb ++;
_aee =_efd .LastReported ;}else {_aba =_edbe .LimitDocs ;_dbg =_edbe .RemainingDocs ;_bgb =0;};if len (_edbe .Instance )==0{_edbe .Instance =_fcc .Instance ;};if len (_edbe .Next )==0{_edbe .Next =_fcc .Next ;};_edb =_gba .updateState (_bac ._abcd ,_edbe .Instance ,_edbe .Next ,int (_bab ),_aba ,_dbg ,int (_bgb ),_aee ,nil );
if _edb !=nil {return _edb ;};if !_edbe .Success {return _be .Errorf ("\u0065r\u0072\u006f\u0072\u003a\u0020\u0025s",_edbe .Message );};}else {_cdb =_gba .updateState (_fgg ._fb ,_efd .Instance ,_efd .Next ,int (_efd .Docs )+_bcf ,_efd .LimitDocs ,int (_efd .RemainingDocs ),int (_efd .NumErrors ),_efd .LastReported ,_efd .Usage );
if _cdb !=nil {return _cdb ;};};return nil ;};func _cfd (_dfc *_dg .Response )(_d .ReadCloser ,error ){var _gfa error ;var _dd _d .ReadCloser ;switch _gc .ToLower (_dfc .Header .Get ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067")){case "\u0067\u007a\u0069\u0070":_dd ,_gfa =_g .NewReader (_dfc .Body );
if _gfa !=nil {return _dd ,_gfa ;};defer _dd .Close ();default:_dd =_dfc .Body ;};return _dd ,nil ;};type MeteredStatus struct{OK bool ;Credits int64 ;Used int64 ;};func _abc (_acg string ,_cfc string ,_ead string )(string ,error ){_cfcd :=_gc .Index (_ead ,_acg );
if _cfcd ==-1{return "",_be .Errorf ("\u0068\u0065a\u0064\u0065\u0072 \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_cfg :=_gc .Index (_ead ,_cfc );if _cfg ==-1{return "",_be .Errorf ("\u0066\u006fo\u0074\u0065\u0072 \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
};_ee :=_cfcd +len (_acg )+1;return _ead [_ee :_cfg -1],nil ;};var _adg =_ge .Date (2019,6,6,0,0,0,0,_ge .UTC );var _ae =_ge .Date (2020,1,1,0,0,0,0,_ge .UTC );func _ded (_cd string ,_fef string )([]byte ,error ){var (_ce int ;_ac string ;);for _ ,_ac =range []string {"\u000a\u002b\u000a","\u000d\u000a\u002b\r\u000a","\u0020\u002b\u0020"}{if _ce =_gc .Index (_fef ,_ac );
_ce !=-1{break ;};};if _ce ==-1{return nil ,_be .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u002c \u0073i\u0067n\u0061t\u0075\u0072\u0065\u0020\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u006f\u0072");};_bfb :=_fef [:_ce ];
_bc :=_ce +len (_ac );_caf :=_fef [_bc :];if _bfb ==""||_caf ==""{return nil ,_be .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u0069n\u0070\u0075\u0074,\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0069\u0067\u0069n\u0061\u006c \u006f\u0072\u0020\u0073\u0069\u0067n\u0061\u0074u\u0072\u0065");
};_eg ,_gf :=_gef .StdEncoding .DecodeString (_bfb );if _gf !=nil {return nil ,_be .Errorf ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u006f\u0072\u0069\u0067\u0069\u006ea\u006c");};_cea ,_gf :=_gef .StdEncoding .DecodeString (_caf );
if _gf !=nil {return nil ,_be .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065");};_dc ,_ :=_gcf .Decode ([]byte (_cd ));if _dc ==nil {return nil ,_be .Errorf ("\u0050\u0075\u0062\u004b\u0065\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};_ecb ,_gf :=_cc .ParsePKIXPublicKey (_dc .Bytes );if _gf !=nil {return nil ,_gf ;};_egd :=_ecb .(*_bd .PublicKey );if _egd ==nil {return nil ,_be .Errorf ("\u0050u\u0062\u004b\u0065\u0079\u0020\u0063\u006f\u006e\u0076\u0065\u0072s\u0069\u006f\u006e\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};_cf :=_ecf .New ();_cf .Write (_eg );_df :=_cf .Sum (nil );_gf =_bd .VerifyPKCS1v15 (_egd ,_e .SHA512 ,_df ,_cea );if _gf !=nil {return nil ,_gf ;};return _eg ,nil ;};func GetMeteredState ()(MeteredStatus ,error ){if _fgg ==nil {return MeteredStatus {},_de .New ("\u006c\u0069\u0063\u0065ns\u0065\u0020\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");
};if !_fgg ._baf ||len (_fgg ._fb )==0{return MeteredStatus {},_de .New ("\u0061p\u0069 \u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");};_ed ,_ceg :=_gba .loadState (_fgg ._fb );if _ceg !=nil {_cbg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ceg );
return MeteredStatus {},_ceg ;};if _ed .Docs > 0{_cbbf :=_dcd ("","",true );if _cbbf !=nil {return MeteredStatus {},_cbbf ;};};_bcb .Lock ();defer _bcb .Unlock ();_gbg :=_feg ();_gbg ._abcd =_fgg ._fb ;_begb ,_ceg :=_gbg .getStatus ();if _ceg !=nil {return MeteredStatus {},_ceg ;
};if !_begb .Valid {return MeteredStatus {},_de .New ("\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0076\u0061\u006c\u0069\u0064");};_dac :=MeteredStatus {OK :true ,Credits :_begb .OrgCredits ,Used :_begb .OrgUsed };return _dac ,nil ;};func GetLicenseKey ()*LicenseKey {if _fgg ==nil {return nil ;
};_cgb :=*_fgg ;return &_cgb ;};func MakeUnlicensedKey ()*LicenseKey {_dgb :=LicenseKey {};_dgb .CustomerName ="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";_dgb .Tier =LicenseTierUnlicensed ;_dgb .CreatedAt =_ge .Now ().UTC ();_dgb .CreatedAtInt =_dgb .CreatedAt .Unix ();
return &_dgb ;};var _cee map[string ]struct{};var _gba stateLoader =defaultStateHolder {};func (_ecdd *meteredClient )getStatus ()(meteredStatusResp ,error ){var _dgc meteredStatusResp ;_aae :=_ecdd ._dga +"\u002fm\u0065t\u0065\u0072\u0065\u0064\u002f\u0073\u0074\u0061\u0074\u0075\u0073";
var _cbb meteredStatusForm ;_dfe ,_fca :=_cb .Marshal (_cbb );if _fca !=nil {return _dgc ,_fca ;};_eb ,_fca :=_bad (_dfe );if _fca !=nil {return _dgc ,_fca ;};_baff ,_fca :=_dg .NewRequest ("\u0050\u004f\u0053\u0054",_aae ,_eb );if _fca !=nil {return _dgc ,_fca ;
};_baff .Header .Add ("\u0043\u006f\u006et\u0065\u006e\u0074\u002d\u0054\u0079\u0070\u0065","\u0061\u0070p\u006c\u0069\u0063a\u0074\u0069\u006f\u006e\u002f\u006a\u0073\u006f\u006e");_baff .Header .Add ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");
_baff .Header .Add ("\u0041c\u0063e\u0070\u0074\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");_baff .Header .Add ("\u0058-\u0041\u0050\u0049\u002d\u004b\u0045Y",_ecdd ._abcd );_gga ,_fca :=_ecdd ._bfa .Do (_baff );if _fca !=nil {return _dgc ,_fca ;
};defer _gga .Body .Close ();if _gga .StatusCode !=200{return _dgc ,_be .Errorf ("\u0066\u0061i\u006c\u0065\u0064\u0020t\u006f\u0020c\u0068\u0065\u0063\u006b\u0069\u006e\u002c\u0020s\u0074\u0061\u0074\u0075\u0073\u0020\u0063\u006f\u0064\u0065\u0020\u0069s\u003a\u0020\u0025\u0064",_gga .StatusCode );
};_gfg ,_fca :=_bffg (_gga );if _fca !=nil {return _dgc ,_fca ;};_fca =_cb .Unmarshal (_gfg ,&_dgc );if _fca !=nil {return _dgc ,_fca ;};return _dgc ,nil ;};func _cfda (_bdb ,_eeef []byte )([]byte ,error ){_ebb :=make ([]byte ,_gef .URLEncoding .DecodedLen (len (_eeef )));
_bbg ,_aadf :=_gef .URLEncoding .Decode (_ebb ,_eeef );if _aadf !=nil {return nil ,_aadf ;};_ebb =_ebb [:_bbg ];_bcfd ,_aadf :=_ec .NewCipher (_bdb );if _aadf !=nil {return nil ,_aadf ;};if len (_ebb )< _ec .BlockSize {return nil ,_de .New ("c\u0069p\u0068\u0065\u0072\u0074\u0065\u0078\u0074\u0020t\u006f\u006f\u0020\u0073ho\u0072\u0074");
};_aeg :=_ebb [:_ec .BlockSize ];_ebb =_ebb [_ec .BlockSize :];_cac :=_da .NewCFBDecrypter (_bcfd ,_aeg );_cac .XORKeyStream (_ebb ,_ebb );return _ebb ,nil ;};func _ecd (_cfcc string )(LicenseKey ,error ){var _aad LicenseKey ;_gbe ,_afe :=_abc (_ecg ,_gd ,_cfcc );
if _afe !=nil {return _aad ,_afe ;};_bde ,_afe :=_ded (_ggf ,_gbe );if _afe !=nil {return _aad ,_afe ;};_afe =_cb .Unmarshal (_bde ,&_aad );if _afe !=nil {return _aad ,_afe ;};_aad .CreatedAt =_ge .Unix (_aad .CreatedAtInt ,0);if _aad .ExpiresAtInt > 0{_ceb :=_ge .Unix (_aad .ExpiresAtInt ,0);
_aad .ExpiresAt =&_ceb ;};return _aad ,nil ;};func _gfd ()(_db .IP ,error ){_ege ,_bbf :=_db .Dial ("\u0075\u0064\u0070","\u0038\u002e\u0038\u002e\u0038\u002e\u0038\u003a\u0038\u0030");if _bbf !=nil {return nil ,_bbf ;};defer _ege .Close ();_dgg :=_ege .LocalAddr ().(*_db .UDPAddr );
return _dgg .IP ,nil ;};func Track (docKey string ,useKey string )error {return _dcd (docKey ,useKey ,!_fgg ._dee )};func _acc (_cdd ,_efea string )string {_egab :=[]byte (_cdd );_efef :=_gg .New (_aag .New ,_egab );_efef .Write ([]byte (_efea ));return _gef .StdEncoding .EncodeToString (_efef .Sum (nil ));
};type meteredUsageCheckinForm struct{Instance string `json:"inst"`;Next string `json:"next"`;UsageNumber int `json:"usage_number"`;NumFailed int64 `json:"num_failed"`;Hostname string `json:"hostname"`;LocalIP string `json:"local_ip"`;MacAddress string `json:"mac_address"`;
Package string `json:"package"`;PackageVersion string `json:"package_version"`;Usage map[string ]int `json:"u"`;IsPersistentCache bool `json:"is_persistent_cache"`;Timestamp int64 `json:"timestamp"`;};func _eddg ()([]string ,[]string ,error ){_geaf ,_eea :=_db .Interfaces ();
if _eea !=nil {return nil ,nil ,_eea ;};var _eae []string ;var _gdf []string ;for _ ,_fagg :=range _geaf {if _fagg .Flags &_db .FlagUp ==0||_efc .Equal (_fagg .HardwareAddr ,nil ){continue ;};_bdc ,_afd :=_fagg .Addrs ();if _afd !=nil {return nil ,nil ,_afd ;
};_ega :=0;for _ ,_bbe :=range _bdc {var _fgd _db .IP ;switch _baga :=_bbe .(type ){case *_db .IPNet :_fgd =_baga .IP ;case *_db .IPAddr :_fgd =_baga .IP ;};if _fgd .IsLoopback (){continue ;};if _fgd .To4 ()==nil {continue ;};_gdf =append (_gdf ,_fgd .String ());
_ega ++;};_gab :=_fagg .HardwareAddr .String ();if _gab !=""&&_ega > 0{_eae =append (_eae ,_gab );};};return _eae ,_gdf ,nil ;};func _gdeb (_ebg ,_edc []byte )([]byte ,error ){_dgbc ,_fbg :=_ec .NewCipher (_ebg );if _fbg !=nil {return nil ,_fbg ;};_afed :=make ([]byte ,_ec .BlockSize +len (_edc ));
_afde :=_afed [:_ec .BlockSize ];if _ ,_agb :=_d .ReadFull (_ab .Reader ,_afde );_agb !=nil {return nil ,_agb ;};_gebg :=_da .NewCFBEncrypter (_dgbc ,_afde );_gebg .XORKeyStream (_afed [_ec .BlockSize :],_edc );_ddb :=make ([]byte ,_gef .URLEncoding .EncodedLen (len (_afed )));
_gef .URLEncoding .Encode (_ddb ,_afed );return _ddb ,nil ;};func _bffg (_acf *_dg .Response )([]byte ,error ){var _gdd []byte ;_bcc ,_geb :=_cfd (_acf );if _geb !=nil {return _gdd ,_geb ;};return _c .ReadAll (_bcc );};const (LicenseTierUnlicensed ="\u0075\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";
LicenseTierCommunity ="\u0063o\u006d\u006d\u0075\u006e\u0069\u0074y";LicenseTierIndividual ="\u0069\u006e\u0064\u0069\u0076\u0069\u0064\u0075\u0061\u006c";LicenseTierBusiness ="\u0062\u0075\u0073\u0069\u006e\u0065\u0073\u0073";);type meteredStatusForm struct{};
var _fgg =MakeUnlicensedKey ();func (_ff *LicenseKey )IsLicensed ()bool {return _ff .Tier !=LicenseTierUnlicensed ||_ff ._baf };func SetLicenseKey (content string ,customerName string )error {_efga ,_dgaa :=_ecd (content );if _dgaa !=nil {_cbg .Log .Error ("\u004c\u0069c\u0065\u006e\u0073\u0065\u0020\u0063\u006f\u0064\u0065\u0020\u0064\u0065\u0063\u006f\u0064\u0065\u0020\u0065\u0072\u0072\u006f\u0072: \u0025\u0076",_dgaa );
return _dgaa ;};if !_gc .EqualFold (_efga .CustomerName ,customerName ){_cbg .Log .Error ("L\u0069ce\u006es\u0065 \u0063\u006f\u0064\u0065\u0020i\u0073\u0073\u0075e\u0020\u002d\u0020\u0043\u0075s\u0074\u006f\u006de\u0072\u0020\u006e\u0061\u006d\u0065\u0020\u006d\u0069\u0073\u006da\u0074\u0063\u0068, e\u0078\u0070\u0065\u0063\u0074\u0065d\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u0062\u0075\u0074\u0020\u0067o\u0074 \u0027\u0025\u0073\u0027",_efga .CustomerName ,customerName );
return _be .Errorf ("\u0063\u0075\u0073\u0074\u006fm\u0065\u0072\u0020\u006e\u0061\u006d\u0065\u0020\u006d\u0069\u0073\u006d\u0061t\u0063\u0068\u002c\u0020\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u0062\u0075\u0074\u0020\u0067\u006f\u0074\u0020\u0027\u0025\u0073'",_efga .CustomerName ,customerName );
};_dgaa =_efga .Validate ();if _dgaa !=nil {_cbg .Log .Error ("\u004c\u0069\u0063\u0065\u006e\u0073e\u0020\u0063\u006f\u0064\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074i\u006f\u006e\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_dgaa );
return _dgaa ;};_fgg =&_efga ;return nil ;};const (_ecg ="\u002d\u002d\u002d--\u0042\u0045\u0047\u0049\u004e\u0020\u0055\u004e\u0049D\u004fC\u0020L\u0049C\u0045\u004e\u0053\u0045\u0020\u004b\u0045\u0059\u002d\u002d\u002d\u002d\u002d";_gd ="\u002d\u002d\u002d\u002d\u002d\u0045\u004e\u0044\u0020\u0055\u004e\u0049\u0044\u004f\u0043 \u004cI\u0043\u0045\u004e\u0053\u0045\u0020\u004b\u0045\u0059\u002d\u002d\u002d\u002d\u002d";
);func SetMeteredKeyPersistentCache (val bool ){_fgg ._dee =val };func (_abbe defaultStateHolder )updateState (_fcf ,_dgad ,_cbc string ,_aaea int ,_caa bool ,_dec int ,_bff int ,_ggg _ge .Time ,_abg map[string ]int )error {_eff :=_cead ();if len (_eff )==0{return _de .New ("\u0068\u006fm\u0065\u0020\u0064i\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");
};_cff :=_b .Join (_eff ,"\u002eu\u006e\u0069\u0064\u006f\u0063");_fba :=_a .MkdirAll (_cff ,0777);if _fba !=nil {return _fba ;};if len (_fcf )< 20{return _de .New ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006b\u0065\u0079");};_def :=[]byte (_fcf );
_aea :=_ecf .Sum512_256 (_def [:20]);_fad :=_aa .EncodeToString (_aea [:]);_eaf :=_b .Join (_cff ,_fad );var _cg reportState ;_cg .Docs =int64 (_aaea );_cg .NumErrors =int64 (_bff );_cg .LimitDocs =_caa ;_cg .RemainingDocs =int64 (_dec );_cg .LastWritten =_ge .Now ().UTC ();
_cg .LastReported =_ggg ;_cg .Instance =_dgad ;_cg .Next =_cbc ;_cg .Usage =_abg ;_ebc ,_fba :=_cb .Marshal (_cg );if _fba !=nil {return _fba ;};const _gea ="\u0068\u00619\u004e\u004b\u0038]\u0052\u0062\u004c\u002a\u006d\u0034\u004c\u004b\u0057";_ebc ,_fba =_gdeb ([]byte (_gea ),_ebc );
if _fba !=nil {return _fba ;};_fba =_c .WriteFile (_eaf ,_ebc ,0600);if _fba !=nil {return _fba ;};return nil ;};func _feg ()*meteredClient {_cae :=meteredClient {_dga :"h\u0074\u0074\u0070\u0073\u003a\u002f/\u0063\u006c\u006f\u0075\u0064\u002e\u0075\u006e\u0069d\u006f\u0063\u002ei\u006f/\u0061\u0070\u0069",_bfa :&_dg .Client {Timeout :30*_ge .Second }};
if _eag :=_a .Getenv ("\u0055N\u0049\u0044\u004f\u0043_\u004c\u0049\u0043\u0045\u004eS\u0045_\u0053E\u0052\u0056\u0045\u0052\u005f\u0055\u0052L");_gc .HasPrefix (_eag ,"\u0068\u0074\u0074\u0070"){_cae ._dga =_eag ;};return &_cae ;};func init (){_gggg :=_a .Getenv (_ecgc );
_ced :=_a .Getenv (_ffg );if len (_gggg )==0||len (_ced )==0{return ;};_ccb ,_ggaf :=_c .ReadFile (_gggg );if _ggaf !=nil {_cbg .Log .Error ("\u0055\u006eab\u006c\u0065\u0020t\u006f\u0020\u0072\u0065ad \u006cic\u0065\u006e\u0073\u0065\u0020\u0063\u006fde\u0020\u0066\u0069\u006c\u0065\u003a\u0020%\u0076",_ggaf );
return ;};_ggaf =SetLicenseKey (string (_ccb ),_ced );if _ggaf !=nil {_cbg .Log .Error ("\u0055\u006e\u0061b\u006c\u0065\u0020\u0074o\u0020\u006c\u006f\u0061\u0064\u0020\u006ci\u0063\u0065\u006e\u0073\u0065\u0020\u0063\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_ggaf );
return ;};};const _ffg ="U\u004eI\u0050\u0044\u0046\u005f\u0043\u0055\u0053\u0054O\u004d\u0045\u0052\u005fNA\u004d\u0045";func (_fd *LicenseKey )Validate ()error {if _fd ._baf {return nil ;};if len (_fd .LicenseId )< 10{return _be .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020L\u0069\u0063\u0065n\u0073e\u0020\u0049\u0064");
};if len (_fd .CustomerId )< 10{return _be .Errorf ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065:\u0020C\u0075\u0073\u0074\u006f\u006d\u0065\u0072 \u0049\u0064");};if len (_fd .CustomerName )< 1{return _be .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069c\u0065\u006e\u0073\u0065\u003a\u0020\u0043u\u0073\u0074\u006f\u006d\u0065\u0072\u0020\u004e\u0061\u006d\u0065");
};if _ga .After (_fd .CreatedAt ){return _be .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u0065\u0064 \u0041\u0074\u0020\u0069\u0073 \u0069\u006ev\u0061\u006c\u0069\u0064");
};if _fd .ExpiresAt ==nil {_bafe :=_fd .CreatedAt .AddDate (1,0,0);if _ae .After (_bafe ){_bafe =_ae ;};_fd .ExpiresAt =&_bafe ;};if _fd .CreatedAt .After (*_fd .ExpiresAt ){return _be .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u0065\u0064\u0020\u0041\u0074 \u0063a\u006e\u006e\u006f\u0074 \u0062\u0065 \u0047\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0045\u0078\u0070\u0069\u0072\u0065\u0073\u0020\u0041\u0074");
};if _fd .isExpired (){return _be .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020l\u0069\u0063\u0065ns\u0065\u003a\u0020\u0054\u0068\u0065 \u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u0068\u0061\u0073\u0020\u0061\u006c\u0072e\u0061\u0064\u0079\u0020\u0065\u0078\u0070\u0069r\u0065\u0064");
};if len (_fd .CreatorName )< 1{return _be .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u0020na\u006d\u0065");};if len (_fd .CreatorEmail )< 1{return _be .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069c\u0065\u006e\u0073\u0065\u003a\u0020\u0043r\u0065\u0061\u0074\u006f\u0072\u0020\u0065\u006d\u0061\u0069\u006c");
};if _fd .CreatedAt .After (_adg ){if !_fd .UniPDF {return _be .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065:\u0020\u0054\u0068\u0069\u0073\u0020\u0055\u006e\u0069\u0044\u006f\u0063\u0020k\u0065\u0079\u0020\u0069\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069d \u0066\u006f\u0072\u0020\u0055\u006e\u0069\u0050\u0044\u0046");
};};return nil ;};var _ga =_ge .Date (2010,1,1,0,0,0,0,_ge .UTC );func SetMeteredKey (apiKey string )error {if len (apiKey )==0{_cbg .Log .Error ("\u004d\u0065\u0074\u0065\u0072e\u0064\u0020\u004c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u0041\u0050\u0049 \u004b\u0065\u0079\u0020\u006d\u0075\u0073\u0074\u0020\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0065\u006d\u0070\u0074\u0079");
_cbg .Log .Error ("\u002d\u0020\u0047\u0072\u0061\u0062\u0020\u006f\u006e\u0065\u0020\u0069\u006e\u0020\u0074h\u0065\u0020\u0046\u0072\u0065\u0065\u0020\u0054\u0069\u0065\u0072\u0020\u0061t\u0020\u0068\u0074\u0074\u0070\u0073\u003a\u002f\u002f\u0063\u006c\u006fud\u002e\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _be .Errorf ("\u006de\u0074\u0065\u0072e\u0064\u0020\u006ci\u0063en\u0073\u0065\u0020\u0061\u0070\u0069\u0020k\u0065\u0079\u0020\u006d\u0075\u0073\u0074\u0020\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0065\u006d\u0070\u0074\u0079\u003a\u0020\u0063\u0072\u0065\u0061\u0074\u0065 o\u006ee\u0020\u0061\u0074\u0020\u0068\u0074t\u0070\u0073\u003a\u002f\u002fc\u006c\u006f\u0075\u0064\u002e\u0075\u006e\u0069\u0064\u006f\u0063.\u0069\u006f");
};if _fgg !=nil &&(_fgg ._baf ||_fgg .Tier !=LicenseTierUnlicensed ){_cbg .Log .Error ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0043\u0061\u006e\u006eo\u0074 \u0073\u0065\u0074\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u006b\u0065\u0079\u0020\u0074\u0077\u0069c\u0065\u0020\u002d\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u006a\u0075\u0073\u0074\u0020\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0069z\u0065\u0020\u006f\u006e\u0063\u0065");
return _de .New ("\u006c\u0069\u0063en\u0073\u0065\u0020\u006b\u0065\u0079\u0020\u0061\u006c\u0072\u0065\u0061\u0064\u0079\u0020\u0073\u0065\u0074");};_fgf :=_feg ();_fgf ._abcd =apiKey ;_eeg ,_gdg :=_fgf .getStatus ();if _gdg !=nil {return _gdg ;};if !_eeg .Valid {return _de .New ("\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0076\u0061\u006c\u0069\u0064");
};_gbf :=&LicenseKey {_baf :true ,_fb :apiKey ,_dee :true };_fgg =_gbf ;return nil ;};func (_bded *LicenseKey )TypeToString ()string {if _bded ._baf {return "M\u0065t\u0065\u0072\u0065\u0064\u0020\u0073\u0075\u0062s\u0063\u0072\u0069\u0070ti\u006f\u006e";
};if _bded .Tier ==LicenseTierUnlicensed {return "\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";};if _bded .Tier ==LicenseTierCommunity {return "\u0041\u0047PL\u0076\u0033\u0020O\u0070\u0065\u006e\u0020Sou\u0072ce\u0020\u0043\u006f\u006d\u006d\u0075\u006eit\u0079\u0020\u004c\u0069\u0063\u0065\u006es\u0065";
};if _bded .Tier ==LicenseTierIndividual ||_bded .Tier =="\u0069\u006e\u0064i\u0065"{return "\u0043\u006f\u006dm\u0065\u0072\u0063\u0069a\u006c\u0020\u004c\u0069\u0063\u0065\u006es\u0065\u0020\u002d\u0020\u0049\u006e\u0064\u0069\u0076\u0069\u0064\u0075\u0061\u006c";
};return "\u0043\u006fm\u006d\u0065\u0072\u0063\u0069\u0061\u006c\u0020\u004c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u002d\u0020\u0042\u0075\u0073\u0069ne\u0073\u0073";};type meteredUsageCheckinResp struct{Instance string `json:"inst"`;Next string `json:"next"`;
Success bool `json:"success"`;Message string `json:"message"`;RemainingDocs int `json:"rd"`;LimitDocs bool `json:"ld"`;};var _agf map[string ]int ;func TrackUse (useKey string ){if _fgg ==nil {return ;};if !_fgg ._baf ||len (_fgg ._fb )==0{return ;};if len (useKey )==0{return ;
};_bcb .Lock ();defer _bcb .Unlock ();if _agf ==nil {_agf =map[string ]int {};};_agf [useKey ]++;};