//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package license ;import (_e "bytes";_d "compress/gzip";_fb "crypto";_bfd "crypto/aes";_gd "crypto/cipher";_agf "crypto/hmac";_ag "crypto/rand";_gf "crypto/rsa";_ed "crypto/sha256";_cf "crypto/sha512";_aba "crypto/x509";_faa "encoding/base64";_bf "encoding/hex";
_ad "encoding/json";_aa "encoding/pem";_a "errors";_ab "fmt";_edb "github.com/unidoc/unipdf/v3/common";_c "io";_be "io/ioutil";_db "net";_ba "net/http";_bd "os";_g "path/filepath";_dd "sort";_gb "strings";_b "sync";_fa "time";);var _gcg map[string ]int ;
type LicenseKey struct{LicenseId string `json:"license_id"`;CustomerId string `json:"customer_id"`;CustomerName string `json:"customer_name"`;Tier string `json:"tier"`;CreatedAt _fa .Time `json:"-"`;CreatedAtInt int64 `json:"created_at"`;ExpiresAt *_fa .Time `json:"-"`;
ExpiresAtInt int64 `json:"expires_at"`;CreatedBy string `json:"created_by"`;CreatorName string `json:"creator_name"`;CreatorEmail string `json:"creator_email"`;UniPDF bool `json:"unipdf"`;UniOffice bool `json:"unioffice"`;UniHTML bool `json:"unihtml"`;
Trial bool `json:"trial"`;_eda bool ;_agg string ;_geb bool ;};func (_acc *meteredClient )getStatus ()(meteredStatusResp ,error ){var _bdb meteredStatusResp ;_ff :=_acc ._ecd +"\u002fm\u0065t\u0065\u0072\u0065\u0064\u002f\u0073\u0074\u0061\u0074\u0075\u0073";
var _gacd meteredStatusForm ;_aga ,_bda :=_ad .Marshal (_gacd );if _bda !=nil {return _bdb ,_bda ;};_fbb ,_bda :=_ffa (_aga );if _bda !=nil {return _bdb ,_bda ;};_gc ,_bda :=_ba .NewRequest ("\u0050\u004f\u0053\u0054",_ff ,_fbb );if _bda !=nil {return _bdb ,_bda ;
};_gc .Header .Add ("\u0043\u006f\u006et\u0065\u006e\u0074\u002d\u0054\u0079\u0070\u0065","\u0061\u0070p\u006c\u0069\u0063a\u0074\u0069\u006f\u006e\u002f\u006a\u0073\u006f\u006e");_gc .Header .Add ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");
_gc .Header .Add ("\u0041c\u0063e\u0070\u0074\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");_gc .Header .Add ("\u0058-\u0041\u0050\u0049\u002d\u004b\u0045Y",_acc ._de );_gaf ,_bda :=_acc ._cbf .Do (_gc );if _bda !=nil {return _bdb ,_bda ;
};defer _gaf .Body .Close ();if _gaf .StatusCode !=200{return _bdb ,_ab .Errorf ("\u0066\u0061i\u006c\u0065\u0064\u0020t\u006f\u0020c\u0068\u0065\u0063\u006b\u0069\u006e\u002c\u0020s\u0074\u0061\u0074\u0075\u0073\u0020\u0063\u006f\u0064\u0065\u0020\u0069s\u003a\u0020\u0025\u0064",_gaf .StatusCode );
};_cc ,_bda :=_dgg (_gaf );if _bda !=nil {return _bdb ,_bda ;};_bda =_ad .Unmarshal (_cc ,&_bdb );if _bda !=nil {return _bdb ,_bda ;};return _bdb ,nil ;};func SetMeteredKeyPersistentCache (val bool ){_gec ._geb =val };func _aabe (_eaa string )(LicenseKey ,error ){var _ga LicenseKey ;
_cb ,_fg :=_cgb (_gfa ,_bdd ,_eaa );if _fg !=nil {return _ga ,_fg ;};_fdb ,_fg :=_abb (_bde ,_cb );if _fg !=nil {return _ga ,_fg ;};_fg =_ad .Unmarshal (_fdb ,&_ga );if _fg !=nil {return _ga ,_fg ;};_ga .CreatedAt =_fa .Unix (_ga .CreatedAtInt ,0);if _ga .ExpiresAtInt > 0{_fge :=_fa .Unix (_ga .ExpiresAtInt ,0);
_ga .ExpiresAt =&_fge ;};return _ga ,nil ;};func _cge ()(_db .IP ,error ){_ddab ,_afc :=_db .Dial ("\u0075\u0064\u0070","\u0038\u002e\u0038\u002e\u0038\u002e\u0038\u003a\u0038\u0030");if _afc !=nil {return nil ,_afc ;};defer _ddab .Close ();_gdc :=_ddab .LocalAddr ().(*_db .UDPAddr );
return _gdc .IP ,nil ;};type stateLoader interface{loadState (_ecgb string )(reportState ,error );updateState (_ggg ,_bg ,_fabf string ,_fdc int ,_fcf bool ,_gab int ,_accf int ,_gea _fa .Time ,_fabb map[string ]int )error ;};func (_cgd defaultStateHolder )updateState (_efdd ,_bfg ,_aac string ,_cfa int ,_cgbf bool ,_dcbe int ,_bcf int ,_gga _fa .Time ,_cgde map[string ]int )error {_dcbd ,_ddd :=_afa ();
if _ddd !=nil {return _ddd ;};if len (_efdd )< 20{return _a .New ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006b\u0065\u0079");};_gfc :=[]byte (_efdd );_ade :=_cf .Sum512_256 (_gfc [:20]);_bba :=_bf .EncodeToString (_ade [:]);_eff :=_g .Join (_dcbd ,_bba );
var _efg reportState ;_efg .Docs =int64 (_cfa );_efg .NumErrors =int64 (_bcf );_efg .LimitDocs =_cgbf ;_efg .RemainingDocs =int64 (_dcbe );_efg .LastWritten =_fa .Now ().UTC ();_efg .LastReported =_gga ;_efg .Instance =_bfg ;_efg .Next =_aac ;_efg .Usage =_cgde ;
_bfc ,_ddd :=_ad .Marshal (_efg );if _ddd !=nil {return _ddd ;};const _dcg ="\u0068\u00619\u004e\u004b\u0038]\u0052\u0062\u004c\u002a\u006d\u0034\u004c\u004b\u0057";_bfc ,_ddd =_gddd ([]byte (_dcg ),_bfc );if _ddd !=nil {return _ddd ;};_ddd =_be .WriteFile (_eff ,_bfc ,0600);
if _ddd !=nil {return _ddd ;};return nil ;};func SetMeteredKey (apiKey string )error {if len (apiKey )==0{_edb .Log .Error ("\u004d\u0065\u0074\u0065\u0072e\u0064\u0020\u004c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u0041\u0050\u0049 \u004b\u0065\u0079\u0020\u006d\u0075\u0073\u0074\u0020\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0065\u006d\u0070\u0074\u0079");
_edb .Log .Error ("\u002d\u0020\u0047\u0072\u0061\u0062\u0020\u006f\u006e\u0065\u0020\u0069\u006e\u0020\u0074h\u0065\u0020\u0046\u0072\u0065\u0065\u0020\u0054\u0069\u0065\u0072\u0020\u0061t\u0020\u0068\u0074\u0074\u0070\u0073\u003a\u002f\u002f\u0063\u006c\u006fud\u002e\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _ab .Errorf ("\u006de\u0074\u0065\u0072e\u0064\u0020\u006ci\u0063en\u0073\u0065\u0020\u0061\u0070\u0069\u0020k\u0065\u0079\u0020\u006d\u0075\u0073\u0074\u0020\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0065\u006d\u0070\u0074\u0079\u003a\u0020\u0063\u0072\u0065\u0061\u0074\u0065 o\u006ee\u0020\u0061\u0074\u0020\u0068\u0074t\u0070\u0073\u003a\u002f\u002fc\u006c\u006f\u0075\u0064\u002e\u0075\u006e\u0069\u0064\u006f\u0063.\u0069\u006f");
};if _gec !=nil &&(_gec ._eda ||_gec .Tier !=LicenseTierUnlicensed ){_edb .Log .Error ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0043\u0061\u006e\u006eo\u0074 \u0073\u0065\u0074\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u006b\u0065\u0079\u0020\u0074\u0077\u0069c\u0065\u0020\u002d\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u006a\u0075\u0073\u0074\u0020\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0069z\u0065\u0020\u006f\u006e\u0063\u0065");
return _a .New ("\u006c\u0069\u0063en\u0073\u0065\u0020\u006b\u0065\u0079\u0020\u0061\u006c\u0072\u0065\u0061\u0064\u0079\u0020\u0073\u0065\u0074");};_fgc :=_ac ();_fgc ._de =apiKey ;_adbd ,_ae :=_fgc .getStatus ();if _ae !=nil {return _ae ;};if !_adbd .Valid {return _a .New ("\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0076\u0061\u006c\u0069\u0064");
};_bce :=&LicenseKey {_eda :true ,_agg :apiKey ,_geb :true };_gec =_bce ;return nil ;};var _fbba stateLoader =defaultStateHolder {};func (_edc *LicenseKey )ToString ()string {if _edc ._eda {return "M\u0065t\u0065\u0072\u0065\u0064\u0020\u0073\u0075\u0062s\u0063\u0072\u0069\u0070ti\u006f\u006e";
};_dga :=_ab .Sprintf ("\u004ci\u0063e\u006e\u0073\u0065\u0020\u0049\u0064\u003a\u0020\u0025\u0073\u000a",_edc .LicenseId );_dga +=_ab .Sprintf ("\u0043\u0075s\u0074\u006f\u006de\u0072\u0020\u0049\u0064\u003a\u0020\u0025\u0073\u000a",_edc .CustomerId );
_dga +=_ab .Sprintf ("\u0043u\u0073t\u006f\u006d\u0065\u0072\u0020N\u0061\u006de\u003a\u0020\u0025\u0073\u000a",_edc .CustomerName );_dga +=_ab .Sprintf ("\u0054i\u0065\u0072\u003a\u0020\u0025\u0073\n",_edc .Tier );_dga +=_ab .Sprintf ("\u0043r\u0065a\u0074\u0065\u0064\u0020\u0041\u0074\u003a\u0020\u0025\u0073\u000a",_edb .UtcTimeFormat (_edc .CreatedAt ));
if _edc .ExpiresAt ==nil {_dga +="\u0045x\u0070i\u0072\u0065\u0073\u0020\u0041t\u003a\u0020N\u0065\u0076\u0065\u0072\u000a";}else {_dga +=_ab .Sprintf ("\u0045x\u0070i\u0072\u0065\u0073\u0020\u0041\u0074\u003a\u0020\u0025\u0073\u000a",_edb .UtcTimeFormat (*_edc .ExpiresAt ));
};_dga +=_ab .Sprintf ("\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u003a\u0020\u0025\u0073\u0020<\u0025\u0073\u003e\u000a",_edc .CreatorName ,_edc .CreatorEmail );return _dga ;};type MeteredStatus struct{OK bool ;Credits int64 ;Used int64 ;};type meteredClient struct{_ecd string ;
_de string ;_cbf *_ba .Client ;};func (_ceb *LicenseKey )IsLicensed ()bool {return _ceb .Tier !=LicenseTierUnlicensed ||_ceb ._eda };type reportState struct{Instance string `json:"inst"`;Next string `json:"n"`;Docs int64 `json:"d"`;NumErrors int64 `json:"e"`;
LimitDocs bool `json:"ld"`;RemainingDocs int64 `json:"rd"`;LastReported _fa .Time `json:"lr"`;LastWritten _fa .Time `json:"lw"`;Usage map[string ]int `json:"u"`;};func _cgb (_dg string ,_fc string ,_ecg string )(string ,error ){_fag :=_gb .Index (_ecg ,_dg );
if _fag ==-1{return "",_ab .Errorf ("\u0068\u0065a\u0064\u0065\u0072 \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_ea :=_gb .Index (_ecg ,_fc );if _ea ==-1{return "",_ab .Errorf ("\u0066\u006fo\u0074\u0065\u0072 \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
};_dcb :=_fag +len (_dg )+1;return _ecg [_dcb :_ea -1],nil ;};func _gfae (_ec string ,_gdd []byte )(string ,error ){_df ,_ :=_aa .Decode ([]byte (_ec ));if _df ==nil {return "",_ab .Errorf ("\u0050\u0072\u0069\u0076\u004b\u0065\u0079\u0020\u0066a\u0069\u006c\u0065\u0064");
};_dbb ,_fd :=_aba .ParsePKCS1PrivateKey (_df .Bytes );if _fd !=nil {return "",_fd ;};_fab :=_cf .New ();_fab .Write (_gdd );_cg :=_fab .Sum (nil );_dbg ,_fd :=_gf .SignPKCS1v15 (_ag .Reader ,_dbb ,_fb .SHA512 ,_cg );if _fd !=nil {return "",_fd ;};_agfg :=_faa .StdEncoding .EncodeToString (_gdd );
_agfg +="\u000a\u002b\u000a";_agfg +=_faa .StdEncoding .EncodeToString (_dbg );return _agfg ,nil ;};var _gac =_fa .Date (2019,6,6,0,0,0,0,_fa .UTC );func _egc (_daf string ,_cag string ,_gfcb bool )error {if _gec ==nil {return _a .New ("\u006e\u006f\u0020\u006c\u0069\u0063\u0065\u006e\u0073e\u0020\u006b\u0065\u0079");
};if !_gec ._eda ||len (_gec ._agg )==0{return nil ;};if len (_daf )==0&&!_gfcb {return _a .New ("\u0064\u006f\u0063\u004b\u0065\u0079\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");};_bge .Lock ();defer _bge .Unlock ();if _gacf ==nil {_gacf =map[string ]struct{}{};
};if _gcg ==nil {_gcg =map[string ]int {};};_bfcg :=0;if len (_daf )> 0{_ ,_beb :=_gacf [_daf ];if !_beb {_gacf [_daf ]=struct{}{};_bfcg ++;};};if _bfcg ==0&&!_gfcb {return nil ;};_gcg [_cag ]++;_caf :=_fa .Now ();_agd ,_ccd :=_fbba .loadState (_gec ._agg );
if _ccd !=nil {_edb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ccd );return _ccd ;};if _agd .Usage ==nil {_agd .Usage =map[string ]int {};};for _gbc ,_cebe :=range _gcg {if _gbc !=""{_agd .Usage [_gbc ]+=_cebe ;};};_gcg =nil ;const _bcc =24*_fa .Hour ;
const _ecf =3*24*_fa .Hour ;if len (_agd .Instance )==0||_caf .Sub (_agd .LastReported )> _bcc ||(_agd .LimitDocs &&_agd .RemainingDocs <=_agd .Docs +int64 (_bfcg ))||_gfcb {_cd ,_gddc :=_bd .Hostname ();if _gddc !=nil {return _gddc ;};_gfcd :=_agd .Docs ;
_cad ,_cae ,_gddc :=_agga ();if _gddc !=nil {_edb .Log .Debug ("\u0055\u006e\u0061b\u006c\u0065\u0020\u0074o\u0020\u0067\u0065\u0074\u0020\u006c\u006fc\u0061\u006c\u0020\u0061\u0064\u0064\u0072\u0065\u0073\u0073\u003a\u0020\u0025\u0073",_gddc .Error ());
_cad =append (_cad ,"\u0069n\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020n\u006ft\u0020a\u0076\u0061\u0069\u006c\u0061\u0062\u006ce");_cae =append (_cae ,"\u0069n\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020n\u006ft\u0020a\u0076\u0061\u0069\u006c\u0061\u0062\u006ce");
}else {_dd .Strings (_cae );_dd .Strings (_cad );_aae ,_gee :=_cge ();if _gee !=nil {return _gee ;};_bfgg :=false ;for _ ,_cfg :=range _cae {if _cfg ==_aae .String (){_bfgg =true ;};};if !_bfgg {_cae =append (_cae ,_aae .String ());};};_cdb :=_ac ();_cdb ._de =_gec ._agg ;
_gfcd +=int64 (_bfcg );_cadf :=meteredUsageCheckinForm {Instance :_agd .Instance ,Next :_agd .Next ,UsageNumber :int (_gfcd ),NumFailed :_agd .NumErrors ,Hostname :_cd ,LocalIP :_gb .Join (_cae ,"\u002c\u0020"),MacAddress :_gb .Join (_cad ,"\u002c\u0020"),Package :"\u0075\u006e\u0069\u0070\u0064\u0066",PackageVersion :_edb .Version ,Usage :_agd .Usage ,IsPersistentCache :_gec ._geb ,Timestamp :_caf .Unix ()};
if len (_cad )==0{_cadf .MacAddress ="\u006e\u006f\u006e\u0065";};_age :=int64 (0);_ecab :=_agd .NumErrors ;_acab :=_caf ;_dda :=0;_adec :=_agd .LimitDocs ;_gfb ,_gddc :=_cdb .checkinUsage (_cadf );if _gddc !=nil {if _caf .Sub (_agd .LastReported )> _ecf {if !_gfb .Success {return _a .New (_gfb .Message );
};return _a .New ("\u0074\u006f\u006f\u0020\u006c\u006f\u006e\u0067\u0020\u0073\u0069\u006e\u0063\u0065\u0020\u006c\u0061\u0073\u0074\u0020\u0073\u0075\u0063\u0063e\u0073\u0073\u0066\u0075\u006c \u0063\u0068e\u0063\u006b\u0069\u006e");};_age =_gfcd ;_ecab ++;
_acab =_agd .LastReported ;}else {_adec =_gfb .LimitDocs ;_dda =_gfb .RemainingDocs ;_ecab =0;};if len (_gfb .Instance )==0{_gfb .Instance =_cadf .Instance ;};if len (_gfb .Next )==0{_gfb .Next =_cadf .Next ;};_gddc =_fbba .updateState (_cdb ._de ,_gfb .Instance ,_gfb .Next ,int (_age ),_adec ,_dda ,int (_ecab ),_acab ,nil );
if _gddc !=nil {return _gddc ;};if !_gfb .Success {return _ab .Errorf ("\u0065r\u0072\u006f\u0072\u003a\u0020\u0025s",_gfb .Message );};}else {_ccd =_fbba .updateState (_gec ._agg ,_agd .Instance ,_agd .Next ,int (_agd .Docs )+_bfcg ,_agd .LimitDocs ,int (_agd .RemainingDocs ),int (_agd .NumErrors ),_agd .LastReported ,_agd .Usage );
if _ccd !=nil {return _ccd ;};};return nil ;};func _dgg (_fgg *_ba .Response )([]byte ,error ){var _cgg []byte ;_cgda ,_ebdg :=_ecb (_fgg );if _ebdg !=nil {return _cgg ,_ebdg ;};return _be .ReadAll (_cgda );};type meteredUsageCheckinForm struct{Instance string `json:"inst"`;
Next string `json:"next"`;UsageNumber int `json:"usage_number"`;NumFailed int64 `json:"num_failed"`;Hostname string `json:"hostname"`;LocalIP string `json:"local_ip"`;MacAddress string `json:"mac_address"`;Package string `json:"package"`;PackageVersion string `json:"package_version"`;
Usage map[string ]int `json:"u"`;IsPersistentCache bool `json:"is_persistent_cache"`;Timestamp int64 `json:"timestamp"`;};const _dfc ="\u0055N\u0049D\u004f\u0043\u005f\u004c\u0049C\u0045\u004eS\u0045\u005f\u0044\u0049\u0052";func (_eb *LicenseKey )isExpired ()bool {return _eb .getExpiryDateToCompare ().After (*_eb .ExpiresAt )};
func _eeb ()string {_ggcg :=_bd .Getenv ("\u0048\u004f\u004d\u0045");if len (_ggcg )==0{_ggcg ,_ =_bd .UserHomeDir ();};return _ggcg ;};func TrackUse (useKey string ){if _gec ==nil {return ;};if !_gec ._eda ||len (_gec ._agg )==0{return ;};if len (useKey )==0{return ;
};_bge .Lock ();defer _bge .Unlock ();if _gcg ==nil {_gcg =map[string ]int {};};_gcg [useKey ]++;};func GetLicenseKey ()*LicenseKey {if _gec ==nil {return nil ;};_adf :=*_gec ;return &_adf ;};func (_dgd *LicenseKey )getExpiryDateToCompare ()_fa .Time {if _dgd .Trial {return _fa .Now ().UTC ();
};return _edb .ReleasedAt ;};func _fec (_gdced ,_bca string )string {_fbg :=[]byte (_gdced );_ada :=_agf .New (_ed .New ,_fbg );_ada .Write ([]byte (_bca ));return _faa .StdEncoding .EncodeToString (_ada .Sum (nil ));};const _bde ="\u000a\u002d\u002d\u002d\u002d\u002d\u0042\u0045\u0047\u0049\u004e \u0050\u0055\u0042\u004c\u0049\u0043\u0020\u004b\u0045Y\u002d\u002d\u002d\u002d\u002d\u000a\u004d\u0049I\u0042\u0049\u006a\u0041NB\u0067\u006b\u0071\u0068\u006b\u0069G\u0039\u0077\u0030\u0042\u0041\u0051\u0045\u0046A\u0041\u004f\u0043\u0041\u0051\u0038\u0041\u004d\u0049\u0049\u0042\u0043\u0067\u004b\u0043\u0041\u0051\u0045A\u006dF\u0055\u0069\u0079\u0064\u0037\u0062\u0035\u0058\u006a\u0070\u006b\u0050\u0035\u0052\u0061\u0070\u0034\u0077\u000a\u0044\u0063\u0031d\u0079\u007a\u0049\u0051\u0034\u004c\u0065\u006b\u0078\u0072\u0076\u0079\u0074\u006e\u0045\u004d\u0070\u004e\u0055\u0062\u006f\u0036i\u0041\u0037\u0034\u0056\u0038\u0072\u0075\u005a\u004f\u0076\u0072\u0053\u0063\u0073\u0066\u0032\u0051\u0065\u004e9\u002f\u0071r\u0055\u0047\u0038\u0071\u0045\u0062\u0055\u0057\u0064\u006f\u0045\u0059\u0071+\u000a\u006f\u0074\u0046\u004e\u0041\u0046N\u0078\u006c\u0047\u0062\u0078\u0062\u0044\u0048\u0063\u0064\u0047\u0056\u0061\u004d\u0030\u004f\u0058\u0064\u0058g\u0044y\u004c5\u0061\u0049\u0045\u0061\u0067\u004c\u0030\u0063\u0035\u0070\u0077\u006a\u0049\u0064\u0050G\u0049\u006e\u0034\u0036\u0066\u0037\u0038\u0065\u004d\u004a\u002b\u004a\u006b\u0064\u0063\u0070\u0044\n\u0044\u004a\u0061\u0071\u0059\u0058d\u0072\u007a5\u004b\u0065\u0073\u0068\u006aS\u0069\u0049\u0061\u0061\u0037\u006d\u0065\u006e\u0042\u0049\u0041\u0058\u0053\u0034\u0055\u0046\u0078N\u0066H\u0068\u004e\u0030\u0048\u0043\u0059\u005a\u0059\u0071\u0051\u0047\u0037\u0062K+\u0073\u0035\u0072R\u0048\u006f\u006e\u0079\u0064\u004eW\u0045\u0047\u000a\u0048\u0038M\u0079\u0076\u00722\u0070\u0079\u0061\u0032K\u0072\u004d\u0075m\u0066\u006d\u0041\u0078\u0055\u0042\u0036\u0066\u0065\u006e\u0043\u002f4\u004f\u0030\u0057\u00728\u0067\u0066\u0050\u004f\u0055\u0038R\u0069\u0074\u006d\u0062\u0044\u0076\u0051\u0050\u0049\u0052\u0058\u004fL\u0034\u0076\u0054B\u0072\u0042\u0064\u0062a\u0041\u000a9\u006e\u0077\u004e\u0050\u002b\u0069\u002f\u002f\u0032\u0030\u004d\u00542\u0062\u0078\u006d\u0065\u0057\u0042\u002b\u0067\u0070\u0063\u0045\u0068G\u0070\u0058\u005a7\u0033\u0033\u0061\u007a\u0051\u0078\u0072\u0043\u0033\u004a\u0034\u0076\u0033C\u005a\u006d\u0045\u004eS\u0074\u0044\u004b\u002f\u004b\u0044\u0053\u0050\u004b\u0055\u0047\u0066\u00756\u000a\u0066\u0077I\u0044\u0041\u0051\u0041\u0042\u000a\u002d\u002d\u002d\u002d\u002dE\u004e\u0044\u0020\u0050\u0055\u0042\u004c\u0049\u0043 \u004b\u0045Y\u002d\u002d\u002d\u002d\u002d\n";
func (_faf defaultStateHolder )loadState (_def string )(reportState ,error ){_bdf ,_bceg :=_afa ();if _bceg !=nil {return reportState {},_bceg ;};_bceg =_bd .MkdirAll (_bdf ,0777);if _bceg !=nil {return reportState {},_bceg ;};if len (_def )< 20{return reportState {},_a .New ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006b\u0065\u0079");
};_bfac :=[]byte (_def );_ca :=_cf .Sum512_256 (_bfac [:20]);_eba :=_bf .EncodeToString (_ca [:]);_dfa :=_g .Join (_bdf ,_eba );_gae ,_bceg :=_be .ReadFile (_dfa );if _bceg !=nil {if _bd .IsNotExist (_bceg ){return reportState {},nil ;};_edb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bceg );
return reportState {},_a .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061");};const _ddgc ="\u0068\u00619\u004e\u004b\u0038]\u0052\u0062\u004c\u002a\u006d\u0034\u004c\u004b\u0057";_gae ,_bceg =_gad ([]byte (_ddgc ),_gae );if _bceg !=nil {return reportState {},_bceg ;
};var _beeg reportState ;_bceg =_ad .Unmarshal (_gae ,&_beeg );if _bceg !=nil {_edb .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0076",_bceg );return reportState {},_a .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061");
};return _beeg ,nil ;};type meteredStatusForm struct{};var _adb =_fa .Date (2010,1,1,0,0,0,0,_fa .UTC );type meteredUsageCheckinResp struct{Instance string `json:"inst"`;Next string `json:"next"`;Success bool `json:"success"`;Message string `json:"message"`;
RemainingDocs int `json:"rd"`;LimitDocs bool `json:"ld"`;};func _abb (_ef string ,_fea string )([]byte ,error ){var (_fdg int ;_aab string ;);for _ ,_aab =range []string {"\u000a\u002b\u000a","\u000d\u000a\u002b\r\u000a","\u0020\u002b\u0020"}{if _fdg =_gb .Index (_fea ,_aab );
_fdg !=-1{break ;};};if _fdg ==-1{return nil ,_ab .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u002c \u0073i\u0067n\u0061t\u0075\u0072\u0065\u0020\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u006f\u0072");};_bee :=_fea [:_fdg ];
_fed :=_fdg +len (_aab );_dfd :=_fea [_fed :];if _bee ==""||_dfd ==""{return nil ,_ab .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u0069n\u0070\u0075\u0074,\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0069\u0067\u0069n\u0061\u006c \u006f\u0072\u0020\u0073\u0069\u0067n\u0061\u0074u\u0072\u0065");
};_dc ,_ge :=_faa .StdEncoding .DecodeString (_bee );if _ge !=nil {return nil ,_ab .Errorf ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u006f\u0072\u0069\u0067\u0069\u006ea\u006c");};_bfde ,_ge :=_faa .StdEncoding .DecodeString (_dfd );
if _ge !=nil {return nil ,_ab .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065");};_bb ,_ :=_aa .Decode ([]byte (_ef ));if _bb ==nil {return nil ,_ab .Errorf ("\u0050\u0075\u0062\u004b\u0065\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};_baf ,_ge :=_aba .ParsePKIXPublicKey (_bb .Bytes );if _ge !=nil {return nil ,_ge ;};_cef :=_baf .(*_gf .PublicKey );if _cef ==nil {return nil ,_ab .Errorf ("\u0050u\u0062\u004b\u0065\u0079\u0020\u0063\u006f\u006e\u0076\u0065\u0072s\u0069\u006f\u006e\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};_gfg :=_cf .New ();_gfg .Write (_dc );_ecc :=_gfg .Sum (nil );_ge =_gf .VerifyPKCS1v15 (_cef ,_fb .SHA512 ,_ecc ,_bfde );if _ge !=nil {return nil ,_ge ;};return _dc ,nil ;};func Track (docKey string ,useKey string )error {return _egc (docKey ,useKey ,!_gec ._geb )};
func _ac ()*meteredClient {_da :=meteredClient {_ecd :"h\u0074\u0074\u0070\u0073\u003a\u002f/\u0063\u006c\u006f\u0075\u0064\u002e\u0075\u006e\u0069d\u006f\u0063\u002ei\u006f/\u0061\u0070\u0069",_cbf :&_ba .Client {Timeout :30*_fa .Second }};if _dec :=_bd .Getenv ("\u0055N\u0049\u0044\u004f\u0043_\u004c\u0049\u0043\u0045\u004eS\u0045_\u0053E\u0052\u0056\u0045\u0052\u005f\u0055\u0052L");
_gb .HasPrefix (_dec ,"\u0068\u0074\u0074\u0070"){_da ._ecd =_dec ;};return &_da ;};type defaultStateHolder struct{};const _dcbb ="\u0055\u004e\u0049\u0050DF\u005f\u004c\u0049\u0043\u0045\u004e\u0053\u0045\u005f\u0050\u0041\u0054\u0048";func _afa ()(string ,error ){_bfe :=_gb .TrimSpace (_bd .Getenv (_dfc ));
if _bfe ==""{_edb .Log .Debug ("\u0024\u0025\u0073\u0020e\u006e\u0076\u0069\u0072\u006f\u006e\u006d\u0065\u006e\u0074\u0020\u0076\u0061\u0072\u0069\u0061\u0062l\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e\u0020\u0057\u0069\u006c\u006c\u0020\u0075\u0073\u0065\u0020\u0068\u006f\u006d\u0065\u0020\u0064\u0069\u0072\u0065\u0063\u0074\u006f\u0072\u0079\u0020\u0074\u006f\u0020s\u0074\u006f\u0072\u0065\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020in\u0066o\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u002e",_dfc );
_cbc :=_eeb ();if len (_cbc )==0{return "",_ab .Errorf ("r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0024\u0025\u0073\u0020\u0065\u006e\u0076\u0069\u0072\u006f\u006e\u006d\u0065\u006e\u0074\u0020\u0076\u0061r\u0069a\u0062\u006c\u0065\u0020o\u0072\u0020h\u006f\u006d\u0065\u0020\u0064\u0069\u0072\u0065\u0063\u0074\u006f\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064",_dfc );
};_bfe =_g .Join (_cbc ,"\u002eu\u006e\u0069\u0064\u006f\u0063");};_gef :=_bd .MkdirAll (_bfe ,0777);if _gef !=nil {return "",_gef ;};return _bfe ,nil ;};func _ffa (_fafb []byte )(_c .Reader ,error ){_beegf :=new (_e .Buffer );_ebee :=_d .NewWriter (_beegf );
_ebee .Write (_fafb );_ggcf :=_ebee .Close ();if _ggcf !=nil {return nil ,_ggcf ;};return _beegf ,nil ;};func _gddd (_egg ,_eae []byte )([]byte ,error ){_efab ,_fee :=_bfd .NewCipher (_egg );if _fee !=nil {return nil ,_fee ;};_fca :=make ([]byte ,_bfd .BlockSize +len (_eae ));
_feg :=_fca [:_bfd .BlockSize ];if _ ,_gdce :=_c .ReadFull (_ag .Reader ,_feg );_gdce !=nil {return nil ,_gdce ;};_ccda :=_gd .NewCFBEncrypter (_efab ,_feg );_ccda .XORKeyStream (_fca [_bfd .BlockSize :],_eae );_aaa :=make ([]byte ,_faa .URLEncoding .EncodedLen (len (_fca )));
_faa .URLEncoding .Encode (_aaa ,_fca );return _aaa ,nil ;};func _ecb (_faac *_ba .Response )(_c .ReadCloser ,error ){var _fdcf error ;var _efb _c .ReadCloser ;switch _gb .ToLower (_faac .Header .Get ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067")){case "\u0067\u007a\u0069\u0070":_efb ,_fdcf =_d .NewReader (_faac .Body );
if _fdcf !=nil {return _efb ,_fdcf ;};defer _efb .Close ();default:_efb =_faac .Body ;};return _efb ,nil ;};var _bge =&_b .Mutex {};func SetLicenseKey (content string ,customerName string )error {_ebd ,_gdb :=_aabe (content );if _gdb !=nil {_edb .Log .Error ("\u004c\u0069c\u0065\u006e\u0073\u0065\u0020\u0063\u006f\u0064\u0065\u0020\u0064\u0065\u0063\u006f\u0064\u0065\u0020\u0065\u0072\u0072\u006f\u0072: \u0025\u0076",_gdb );
return _gdb ;};if !_gb .EqualFold (_ebd .CustomerName ,customerName ){_edb .Log .Error ("L\u0069ce\u006es\u0065 \u0063\u006f\u0064\u0065\u0020i\u0073\u0073\u0075e\u0020\u002d\u0020\u0043\u0075s\u0074\u006f\u006de\u0072\u0020\u006e\u0061\u006d\u0065\u0020\u006d\u0069\u0073\u006da\u0074\u0063\u0068, e\u0078\u0070\u0065\u0063\u0074\u0065d\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u0062\u0075\u0074\u0020\u0067o\u0074 \u0027\u0025\u0073\u0027",_ebd .CustomerName ,customerName );
return _ab .Errorf ("\u0063\u0075\u0073\u0074\u006fm\u0065\u0072\u0020\u006e\u0061\u006d\u0065\u0020\u006d\u0069\u0073\u006d\u0061t\u0063\u0068\u002c\u0020\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u0062\u0075\u0074\u0020\u0067\u006f\u0074\u0020\u0027\u0025\u0073'",_ebd .CustomerName ,customerName );
};_gdb =_ebd .Validate ();if _gdb !=nil {_edb .Log .Error ("\u004c\u0069\u0063\u0065\u006e\u0073e\u0020\u0063\u006f\u0064\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074i\u006f\u006e\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_gdb );
return _gdb ;};_gec =&_ebd ;return nil ;};const _ggf ="U\u004eI\u0050\u0044\u0046\u005f\u0043\u0055\u0053\u0054O\u004d\u0045\u0052\u005fNA\u004d\u0045";func (_fce *LicenseKey )TypeToString ()string {if _fce ._eda {return "M\u0065t\u0065\u0072\u0065\u0064\u0020\u0073\u0075\u0062s\u0063\u0072\u0069\u0070ti\u006f\u006e";
};if _fce .Tier ==LicenseTierUnlicensed {return "\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";};if _fce .Tier ==LicenseTierCommunity {return "\u0041\u0047PL\u0076\u0033\u0020O\u0070\u0065\u006e\u0020Sou\u0072ce\u0020\u0043\u006f\u006d\u006d\u0075\u006eit\u0079\u0020\u004c\u0069\u0063\u0065\u006es\u0065";
};if _fce .Tier ==LicenseTierIndividual ||_fce .Tier =="\u0069\u006e\u0064i\u0065"{return "\u0043\u006f\u006dm\u0065\u0072\u0063\u0069a\u006c\u0020\u004c\u0069\u0063\u0065\u006es\u0065\u0020\u002d\u0020\u0049\u006e\u0064\u0069\u0076\u0069\u0064\u0075\u0061\u006c";
};return "\u0043\u006fm\u006d\u0065\u0072\u0063\u0069\u0061\u006c\u0020\u004c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u002d\u0020\u0042\u0075\u0073\u0069ne\u0073\u0073";};var _gacf map[string ]struct{};const (_gfa ="\u002d\u002d\u002d--\u0042\u0045\u0047\u0049\u004e\u0020\u0055\u004e\u0049D\u004fC\u0020L\u0049C\u0045\u004e\u0053\u0045\u0020\u004b\u0045\u0059\u002d\u002d\u002d\u002d\u002d";
_bdd ="\u002d\u002d\u002d\u002d\u002d\u0045\u004e\u0044\u0020\u0055\u004e\u0049\u0044\u004f\u0043 \u004cI\u0043\u0045\u004e\u0053\u0045\u0020\u004b\u0045\u0059\u002d\u002d\u002d\u002d\u002d";);func MakeUnlicensedKey ()*LicenseKey {_gg :=LicenseKey {};_gg .CustomerName ="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";
_gg .Tier =LicenseTierUnlicensed ;_gg .CreatedAt =_fa .Now ().UTC ();_gg .CreatedAtInt =_gg .CreatedAt .Unix ();return &_gg ;};func init (){_efa :=_bd .Getenv (_dcbb );_eeg :=_bd .Getenv (_ggf );if len (_efa )==0||len (_eeg )==0{return ;};_egb ,_eccg :=_be .ReadFile (_efa );
if _eccg !=nil {_edb .Log .Error ("\u0055\u006eab\u006c\u0065\u0020t\u006f\u0020\u0072\u0065ad \u006cic\u0065\u006e\u0073\u0065\u0020\u0063\u006fde\u0020\u0066\u0069\u006c\u0065\u003a\u0020%\u0076",_eccg );return ;};_eccg =SetLicenseKey (string (_egb ),_eeg );
if _eccg !=nil {_edb .Log .Error ("\u0055\u006e\u0061b\u006c\u0065\u0020\u0074o\u0020\u006c\u006f\u0061\u0064\u0020\u006ci\u0063\u0065\u006e\u0073\u0065\u0020\u0063\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_eccg );return ;};};var _gec =MakeUnlicensedKey ();
func _agga ()([]string ,[]string ,error ){_cga ,_fgd :=_db .Interfaces ();if _fgd !=nil {return nil ,nil ,_fgd ;};var _fba []string ;var _bcfb []string ;for _ ,_edad :=range _cga {if _edad .Flags &_db .FlagUp ==0||_e .Equal (_edad .HardwareAddr ,nil ){continue ;
};_fbf ,_gfcg :=_edad .Addrs ();if _gfcg !=nil {return nil ,nil ,_gfcg ;};_ebe :=0;for _ ,_gfd :=range _fbf {var _fff _db .IP ;switch _egf :=_gfd .(type ){case *_db .IPNet :_fff =_egf .IP ;case *_db .IPAddr :_fff =_egf .IP ;};if _fff .IsLoopback (){continue ;
};if _fff .To4 ()==nil {continue ;};_bcfb =append (_bcfb ,_fff .String ());_ebe ++;};_aged :=_edad .HardwareAddr .String ();if _aged !=""&&_ebe > 0{_fba =append (_fba ,_aged );};};return _fba ,_bcfb ,nil ;};func _gad (_cbg ,_dcde []byte )([]byte ,error ){_aaeb :=make ([]byte ,_faa .URLEncoding .DecodedLen (len (_dcde )));
_aaaf ,_dbd :=_faa .URLEncoding .Decode (_aaeb ,_dcde );if _dbd !=nil {return nil ,_dbd ;};_aaeb =_aaeb [:_aaaf ];_cac ,_dbd :=_bfd .NewCipher (_cbg );if _dbd !=nil {return nil ,_dbd ;};if len (_aaeb )< _bfd .BlockSize {return nil ,_a .New ("c\u0069p\u0068\u0065\u0072\u0074\u0065\u0078\u0074\u0020t\u006f\u006f\u0020\u0073ho\u0072\u0074");
};_decc :=_aaeb [:_bfd .BlockSize ];_aaeb =_aaeb [_bfd .BlockSize :];_fedf :=_gd .NewCFBDecrypter (_cac ,_decc );_fedf .XORKeyStream (_aaeb ,_aaeb );return _aaeb ,nil ;};func GetMeteredState ()(MeteredStatus ,error ){if _gec ==nil {return MeteredStatus {},_a .New ("\u006c\u0069\u0063\u0065ns\u0065\u0020\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");
};if !_gec ._eda ||len (_gec ._agg )==0{return MeteredStatus {},_a .New ("\u0061p\u0069 \u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");};_eg ,_fcde :=_fbba .loadState (_gec ._agg );if _fcde !=nil {_edb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fcde );
return MeteredStatus {},_fcde ;};if _eg .Docs > 0{_aed :=_egc ("","",true );if _aed !=nil {return MeteredStatus {},_aed ;};};_bge .Lock ();defer _bge .Unlock ();_dcd :=_ac ();_dcd ._de =_gec ._agg ;_ddg ,_fcde :=_dcd .getStatus ();if _fcde !=nil {return MeteredStatus {},_fcde ;
};if !_ddg .Valid {return MeteredStatus {},_a .New ("\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0076\u0061\u006c\u0069\u0064");};_ee :=MeteredStatus {OK :true ,Credits :_ddg .OrgCredits ,Used :_ddg .OrgUsed };return _ee ,nil ;};func (_bfa *LicenseKey )Validate ()error {if _bfa ._eda {return nil ;
};if len (_bfa .LicenseId )< 10{return _ab .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020L\u0069\u0063\u0065n\u0073e\u0020\u0049\u0064");};if len (_bfa .CustomerId )< 10{return _ab .Errorf ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065:\u0020C\u0075\u0073\u0074\u006f\u006d\u0065\u0072 \u0049\u0064");
};if len (_bfa .CustomerName )< 1{return _ab .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069c\u0065\u006e\u0073\u0065\u003a\u0020\u0043u\u0073\u0074\u006f\u006d\u0065\u0072\u0020\u004e\u0061\u006d\u0065");};if _adb .After (_bfa .CreatedAt ){return _ab .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u0065\u0064 \u0041\u0074\u0020\u0069\u0073 \u0069\u006ev\u0061\u006c\u0069\u0064");
};if _bfa .ExpiresAt ==nil {_efd :=_bfa .CreatedAt .AddDate (1,0,0);if _eac .After (_efd ){_efd =_eac ;};_bfa .ExpiresAt =&_efd ;};if _bfa .CreatedAt .After (*_bfa .ExpiresAt ){return _ab .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u0065\u0064\u0020\u0041\u0074 \u0063a\u006e\u006e\u006f\u0074 \u0062\u0065 \u0047\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0045\u0078\u0070\u0069\u0072\u0065\u0073\u0020\u0041\u0074");
};if _bfa .isExpired (){_gbg :="\u0054\u0068\u0065\u0020\u006c\u0069c\u0065\u006e\u0073\u0065\u0020\u0068\u0061\u0073\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0065\u0078\u0070\u0069r\u0065\u0064\u002e\u000a"+"\u0059o\u0075\u0020\u006d\u0061y\u0020n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0075\u0070d\u0061\u0074\u0065\u0020\u0074\u0068\u0065\u0020l\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u006b\u0065\u0079\u0020t\u006f\u0020\u0074\u0068\u0065\u0020\u006e\u0065\u0077\u0065s\u0074\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u006b\u0065\u0079\u0020\u0066\u006f\u0072\u0020\u0079o\u0075\u0072\u0020\u006f\u0072\u0067\u0061\u006e\u0069\u007a\u0061\u0074i\u006fn\u002e\u000a"+"\u0054o\u0020\u0066\u0069\u006ed y\u006f\u0075\u0072\u0020n\u0065\u0077\u0065\u0073\u0074\u0020\u006c\u0069\u0063\u0065n\u0073\u0065\u0020\u006b\u0065\u0079\u002c\u0020\u0067\u006f\u0020\u0074\u006f\u0020\u0068\u0074\u0074\u0070\u0073\u003a\u002f\u002f\u0063l\u006f\u0075\u0064\u002e\u0075\u006e\u0069\u0064oc\u002e\u0069\u006f \u0061\u006e\u0064\u0020\u0067o\u0020t\u006f\u0020\u0074\u0068\u0065\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006d\u0065\u006e\u0075\u002e";
return _ab .Errorf ("\u0069\u006e\u0076\u0061li\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0025\u0073",_gbg );};if len (_bfa .CreatorName )< 1{return _ab .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u0020na\u006d\u0065");
};if len (_bfa .CreatorEmail )< 1{return _ab .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069c\u0065\u006e\u0073\u0065\u003a\u0020\u0043r\u0065\u0061\u0074\u006f\u0072\u0020\u0065\u006d\u0061\u0069\u006c");};if _bfa .CreatedAt .After (_gac ){if !_bfa .UniPDF {return _ab .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065:\u0020\u0054\u0068\u0069\u0073\u0020\u0055\u006e\u0069\u0044\u006f\u0063\u0020k\u0065\u0079\u0020\u0069\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069d \u0066\u006f\u0072\u0020\u0055\u006e\u0069\u0050\u0044\u0046");
};};return nil ;};var _eac =_fa .Date (2020,1,1,0,0,0,0,_fa .UTC );func (_fcd *meteredClient )checkinUsage (_gcd meteredUsageCheckinForm )(meteredUsageCheckinResp ,error ){_gcd .Package ="\u0075\u006e\u0069\u0070\u0064\u0066";_gcd .PackageVersion =_edb .Version ;
var _eca meteredUsageCheckinResp ;_dab :=_fcd ._ecd +"\u002f\u006d\u0065\u0074er\u0065\u0064\u002f\u0075\u0073\u0061\u0067\u0065\u005f\u0063\u0068\u0065\u0063\u006bi\u006e";_agb ,_fae :=_ad .Marshal (_gcd );if _fae !=nil {return _eca ,_fae ;};_bbf ,_fae :=_ffa (_agb );
if _fae !=nil {return _eca ,_fae ;};_aca ,_fae :=_ba .NewRequest ("\u0050\u004f\u0053\u0054",_dab ,_bbf );if _fae !=nil {return _eca ,_fae ;};_aca .Header .Add ("\u0043\u006f\u006et\u0065\u006e\u0074\u002d\u0054\u0079\u0070\u0065","\u0061\u0070p\u006c\u0069\u0063a\u0074\u0069\u006f\u006e\u002f\u006a\u0073\u006f\u006e");
_aca .Header .Add ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");_aca .Header .Add ("\u0041c\u0063e\u0070\u0074\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");
_aca .Header .Add ("\u0058-\u0041\u0050\u0049\u002d\u004b\u0045Y",_fcd ._de );_gff ,_fae :=_fcd ._cbf .Do (_aca );if _fae !=nil {return _eca ,_fae ;};defer _gff .Body .Close ();if _gff .StatusCode !=200{_fbe ,_adbf :=_dgg (_gff );if _adbf !=nil {return _eca ,_adbf ;
};_adbf =_ad .Unmarshal (_fbe ,&_eca );if _adbf !=nil {return _eca ,_adbf ;};return _eca ,_ab .Errorf ("\u0066\u0061i\u006c\u0065\u0064\u0020t\u006f\u0020c\u0068\u0065\u0063\u006b\u0069\u006e\u002c\u0020s\u0074\u0061\u0074\u0075\u0073\u0020\u0063\u006f\u0064\u0065\u0020\u0069s\u003a\u0020\u0025\u0064",_gff .StatusCode );
};_bdbf :=_gff .Header .Get ("\u0058\u002d\u0055\u0043\u002d\u0053\u0069\u0067\u006ea\u0074\u0075\u0072\u0065");_bc :=_fec (_gcd .MacAddress ,string (_agb ));if _bc !=_bdbf {_edb .Log .Error ("I\u006e\u0076\u0061l\u0069\u0064\u0020\u0072\u0065\u0073\u0070\u006f\u006e\u0073\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u002c\u0020\u0073\u0065t\u0020\u0074\u0068e\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u0073\u0065\u0072\u0076e\u0072\u0020\u0074\u006f \u0068\u0074\u0074\u0070s\u003a\u002f\u002f\u0063\u006c\u006f\u0075\u0064\u002e\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069o\u002f\u0061\u0070\u0069");
return _eca ,_a .New ("\u0066\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u0063\u0068\u0065\u0063\u006b\u0069\u006e\u002c\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0065\u0072\u0076\u0065\u0072 \u0072\u0065\u0073\u0070\u006f\u006e\u0073\u0065");
};_cgc ,_fae :=_dgg (_gff );if _fae !=nil {return _eca ,_fae ;};_fae =_ad .Unmarshal (_cgc ,&_eca );if _fae !=nil {return _eca ,_fae ;};return _eca ,nil ;};const (LicenseTierUnlicensed ="\u0075\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";LicenseTierCommunity ="\u0063o\u006d\u006d\u0075\u006e\u0069\u0074y";
LicenseTierIndividual ="\u0069\u006e\u0064\u0069\u0076\u0069\u0064\u0075\u0061\u006c";LicenseTierBusiness ="\u0062\u0075\u0073\u0069\u006e\u0065\u0073\u0073";);type meteredStatusResp struct{Valid bool `json:"valid"`;OrgCredits int64 `json:"org_credits"`;
OrgUsed int64 `json:"org_used"`;OrgRemaining int64 `json:"org_remaining"`;};