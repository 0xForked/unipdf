//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package license ;import (_c "bytes";_b "compress/gzip";_f "crypto";_df "crypto/aes";_feb "crypto/cipher";_fg "crypto/rand";_dg "crypto/rsa";_cg "crypto/sha512";_gf "crypto/x509";_fd "encoding/base64";_eff "encoding/hex";_ba "encoding/json";_de "encoding/pem";
_ecg "errors";_a "fmt";_fb "github.com/unidoc/unipdf/v3/common";_g "io";_gc "io/ioutil";_ef "net";_fe "net/http";_ec "os";_d "path/filepath";_gd "sort";_eg "strings";_bd "sync";_dc "time";);var _bg map[string ]int ;func (_ggb *LicenseKey )getExpiryDateToCompare ()_dc .Time {if _ggb .Trial {return _dc .Now ().UTC ();
};return _fb .ReleasedAt ;};const (_bde ="\u002d\u002d\u002d--\u0042\u0045\u0047\u0049\u004e\u0020\u0055\u004e\u0049D\u004fC\u0020L\u0049C\u0045\u004e\u0053\u0045\u0020\u004b\u0045\u0059\u002d\u002d\u002d\u002d\u002d";_cf ="\u002d\u002d\u002d\u002d\u002d\u0045\u004e\u0044\u0020\u0055\u004e\u0049\u0044\u004f\u0043 \u004cI\u0043\u0045\u004e\u0053\u0045\u0020\u004b\u0045\u0059\u002d\u002d\u002d\u002d\u002d";
);func _efb (_ed string ,_gda []byte )(string ,error ){_dec ,_ :=_de .Decode ([]byte (_ed ));if _dec ==nil {return "",_a .Errorf ("\u0050\u0072\u0069\u0076\u004b\u0065\u0079\u0020\u0066a\u0069\u006c\u0065\u0064");};_ae ,_egb :=_gf .ParsePKCS1PrivateKey (_dec .Bytes );
if _egb !=nil {return "",_egb ;};_bded :=_cg .New ();_bded .Write (_gda );_egc :=_bded .Sum (nil );_eb ,_egb :=_dg .SignPKCS1v15 (_fg .Reader ,_ae ,_f .SHA512 ,_egc );if _egb !=nil {return "",_egb ;};_dcb :=_fd .StdEncoding .EncodeToString (_gda );_dcb +="\u000a\u002b\u000a";
_dcb +=_fd .StdEncoding .EncodeToString (_eb );return _dcb ,nil ;};const _gaf ="\u0055\u004e\u0049\u0050DF\u005f\u004c\u0049\u0043\u0045\u004e\u0053\u0045\u005f\u0050\u0041\u0054\u0048";func _ab (_efg string )(LicenseKey ,error ){var _edd LicenseKey ;_ee ,_eeg :=_fgd (_bde ,_cf ,_efg );
if _eeg !=nil {return _edd ,_eeg ;};_ag ,_eeg :=_gcd (_caf ,_ee );if _eeg !=nil {return _edd ,_eeg ;};_eeg =_ba .Unmarshal (_ag ,&_edd );if _eeg !=nil {return _edd ,_eeg ;};_edd .CreatedAt =_dc .Unix (_edd .CreatedAtInt ,0);if _edd .ExpiresAtInt > 0{_cfe :=_dc .Unix (_edd .ExpiresAtInt ,0);
_edd .ExpiresAt =&_cfe ;};return _edd ,nil ;};func _gcd (_dfb string ,_fba string )([]byte ,error ){var (_fgb int ;_ca string ;);for _ ,_ca =range []string {"\u000a\u002b\u000a","\u000d\u000a\u002b\r\u000a","\u0020\u002b\u0020"}{if _fgb =_eg .Index (_fba ,_ca );
_fgb !=-1{break ;};};if _fgb ==-1{return nil ,_a .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u002c \u0073i\u0067n\u0061t\u0075\u0072\u0065\u0020\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u006f\u0072");};_dge :=_fba [:_fgb ];
_dcg :=_fgb +len (_ca );_ac :=_fba [_dcg :];if _dge ==""||_ac ==""{return nil ,_a .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u0069n\u0070\u0075\u0074,\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0069\u0067\u0069n\u0061\u006c \u006f\u0072\u0020\u0073\u0069\u0067n\u0061\u0074u\u0072\u0065");
};_ea ,_bc :=_fd .StdEncoding .DecodeString (_dge );if _bc !=nil {return nil ,_a .Errorf ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u006f\u0072\u0069\u0067\u0069\u006ea\u006c");};_fef ,_bc :=_fd .StdEncoding .DecodeString (_ac );
if _bc !=nil {return nil ,_a .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065");};_ff ,_ :=_de .Decode ([]byte (_dfb ));if _ff ==nil {return nil ,_a .Errorf ("\u0050\u0075\u0062\u004b\u0065\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};_ga ,_bc :=_gf .ParsePKIXPublicKey (_ff .Bytes );if _bc !=nil {return nil ,_bc ;};_cc :=_ga .(*_dg .PublicKey );if _cc ==nil {return nil ,_a .Errorf ("\u0050u\u0062\u004b\u0065\u0079\u0020\u0063\u006f\u006e\u0076\u0065\u0072s\u0069\u006f\u006e\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};_egg :=_cg .New ();_egg .Write (_ea );_gca :=_egg .Sum (nil );_bc =_dg .VerifyPKCS1v15 (_cc ,_f .SHA512 ,_gca ,_fef );if _bc !=nil {return nil ,_bc ;};return _ea ,nil ;};var _dbb =&_bd .Mutex {};func (_bcg *LicenseKey )Validate ()error {if _bcg ._fee {return nil ;
};if len (_bcg .LicenseId )< 10{return _a .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020L\u0069\u0063\u0065n\u0073e\u0020\u0049\u0064");};if len (_bcg .CustomerId )< 10{return _a .Errorf ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065:\u0020C\u0075\u0073\u0074\u006f\u006d\u0065\u0072 \u0049\u0064");
};if len (_bcg .CustomerName )< 1{return _a .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069c\u0065\u006e\u0073\u0065\u003a\u0020\u0043u\u0073\u0074\u006f\u006d\u0065\u0072\u0020\u004e\u0061\u006d\u0065");};if _cfd .After (_bcg .CreatedAt ){return _a .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u0065\u0064 \u0041\u0074\u0020\u0069\u0073 \u0069\u006ev\u0061\u006c\u0069\u0064");
};if _bcg .ExpiresAt ==nil {_ecd :=_bcg .CreatedAt .AddDate (1,0,0);if _ggf .After (_ecd ){_ecd =_ggf ;};_bcg .ExpiresAt =&_ecd ;};if _bcg .CreatedAt .After (*_bcg .ExpiresAt ){return _a .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u0065\u0064\u0020\u0041\u0074 \u0063a\u006e\u006e\u006f\u0074 \u0062\u0065 \u0047\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0045\u0078\u0070\u0069\u0072\u0065\u0073\u0020\u0041\u0074");
};if _bcg .isExpired (){return _a .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020l\u0069\u0063\u0065ns\u0065\u003a\u0020\u0054\u0068\u0065 \u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u0068\u0061\u0073\u0020\u0061\u006c\u0072e\u0061\u0064\u0079\u0020\u0065\u0078\u0070\u0069r\u0065\u0064");
};if len (_bcg .CreatorName )< 1{return _a .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u0020na\u006d\u0065");};if len (_bcg .CreatorEmail )< 1{return _a .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069c\u0065\u006e\u0073\u0065\u003a\u0020\u0043r\u0065\u0061\u0074\u006f\u0072\u0020\u0065\u006d\u0061\u0069\u006c");
};if _bcg .CreatedAt .After (_dgeb ){if !_bcg .UniPDF {return _a .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065:\u0020\u0054\u0068\u0069\u0073\u0020\u0055\u006e\u0069\u0044\u006f\u0063\u0020k\u0065\u0079\u0020\u0069\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069d \u0066\u006f\u0072\u0020\u0055\u006e\u0069\u0050\u0044\u0046");
};};return nil ;};type meteredStatusForm struct{};const _caf ="\u000a\u002d\u002d\u002d\u002d\u002d\u0042\u0045\u0047\u0049\u004e \u0050\u0055\u0042\u004c\u0049\u0043\u0020\u004b\u0045Y\u002d\u002d\u002d\u002d\u002d\u000a\u004d\u0049I\u0042\u0049\u006a\u0041NB\u0067\u006b\u0071\u0068\u006b\u0069G\u0039\u0077\u0030\u0042\u0041\u0051\u0045\u0046A\u0041\u004f\u0043\u0041\u0051\u0038\u0041\u004d\u0049\u0049\u0042\u0043\u0067\u004b\u0043\u0041\u0051\u0045A\u006dF\u0055\u0069\u0079\u0064\u0037\u0062\u0035\u0058\u006a\u0070\u006b\u0050\u0035\u0052\u0061\u0070\u0034\u0077\u000a\u0044\u0063\u0031d\u0079\u007a\u0049\u0051\u0034\u004c\u0065\u006b\u0078\u0072\u0076\u0079\u0074\u006e\u0045\u004d\u0070\u004e\u0055\u0062\u006f\u0036i\u0041\u0037\u0034\u0056\u0038\u0072\u0075\u005a\u004f\u0076\u0072\u0053\u0063\u0073\u0066\u0032\u0051\u0065\u004e9\u002f\u0071r\u0055\u0047\u0038\u0071\u0045\u0062\u0055\u0057\u0064\u006f\u0045\u0059\u0071+\u000a\u006f\u0074\u0046\u004e\u0041\u0046N\u0078\u006c\u0047\u0062\u0078\u0062\u0044\u0048\u0063\u0064\u0047\u0056\u0061\u004d\u0030\u004f\u0058\u0064\u0058g\u0044y\u004c5\u0061\u0049\u0045\u0061\u0067\u004c\u0030\u0063\u0035\u0070\u0077\u006a\u0049\u0064\u0050G\u0049\u006e\u0034\u0036\u0066\u0037\u0038\u0065\u004d\u004a\u002b\u004a\u006b\u0064\u0063\u0070\u0044\n\u0044\u004a\u0061\u0071\u0059\u0058d\u0072\u007a5\u004b\u0065\u0073\u0068\u006aS\u0069\u0049\u0061\u0061\u0037\u006d\u0065\u006e\u0042\u0049\u0041\u0058\u0053\u0034\u0055\u0046\u0078N\u0066H\u0068\u004e\u0030\u0048\u0043\u0059\u005a\u0059\u0071\u0051\u0047\u0037\u0062K+\u0073\u0035\u0072R\u0048\u006f\u006e\u0079\u0064\u004eW\u0045\u0047\u000a\u0048\u0038M\u0079\u0076\u00722\u0070\u0079\u0061\u0032K\u0072\u004d\u0075m\u0066\u006d\u0041\u0078\u0055\u0042\u0036\u0066\u0065\u006e\u0043\u002f4\u004f\u0030\u0057\u00728\u0067\u0066\u0050\u004f\u0055\u0038R\u0069\u0074\u006d\u0062\u0044\u0076\u0051\u0050\u0049\u0052\u0058\u004fL\u0034\u0076\u0054B\u0072\u0042\u0064\u0062a\u0041\u000a9\u006e\u0077\u004e\u0050\u002b\u0069\u002f\u002f\u0032\u0030\u004d\u00542\u0062\u0078\u006d\u0065\u0057\u0042\u002b\u0067\u0070\u0063\u0045\u0068G\u0070\u0058\u005a7\u0033\u0033\u0061\u007a\u0051\u0078\u0072\u0043\u0033\u004a\u0034\u0076\u0033C\u005a\u006d\u0045\u004eS\u0074\u0044\u004b\u002f\u004b\u0044\u0053\u0050\u004b\u0055\u0047\u0066\u00756\u000a\u0066\u0077I\u0044\u0041\u0051\u0041\u0042\u000a\u002d\u002d\u002d\u002d\u002dE\u004e\u0044\u0020\u0050\u0055\u0042\u004c\u0049\u0043 \u004b\u0045Y\u002d\u002d\u002d\u002d\u002d\n";
const _ebf ="U\u004eI\u0050\u0044\u0046\u005f\u0043\u0055\u0053\u0054O\u004d\u0045\u0052\u005fNA\u004d\u0045";func (_dfc defaultStateHolder )updateState (_gfc ,_cagg ,_bdf string ,_fbd int ,_egga bool ,_ecdd int ,_dfa int ,_db _dc .Time ,_eae map[string ]int )error {_bcfa :=_dac ();
if len (_bcfa )==0{return _ecg .New ("\u0068\u006fm\u0065\u0020\u0064i\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");};_fdb :=_d .Join (_bcfa ,"\u002eu\u006e\u0069\u0064\u006f\u0063");_gge :=_ec .MkdirAll (_fdb ,0777);if _gge !=nil {return _gge ;
};if len (_gfc )< 20{return _ecg .New ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006b\u0065\u0079");};_efge :=[]byte (_gfc );_ce :=_cg .Sum512_256 (_efge [:20]);_cge :=_eff .EncodeToString (_ce [:]);_ggbb :=_d .Join (_fdb ,_cge );var _fgf reportState ;
_fgf .Docs =int64 (_fbd );_fgf .NumErrors =int64 (_dfa );_fgf .LimitDocs =_egga ;_fgf .RemainingDocs =int64 (_ecdd );_fgf .LastWritten =_dc .Now ().UTC ();_fgf .LastReported =_db ;_fgf .Instance =_cagg ;_fgf .Next =_bdf ;_fgf .Usage =_eae ;_fgg ,_gge :=_ba .Marshal (_fgf );
if _gge !=nil {return _gge ;};const _dga ="\u0068\u00619\u004e\u004b\u0038]\u0052\u0062\u004c\u002a\u006d\u0034\u004c\u004b\u0057";_fgg ,_gge =_bfe ([]byte (_dga ),_fgg );if _gge !=nil {return _gge ;};_gge =_gc .WriteFile (_ggbb ,_fgg ,0600);if _gge !=nil {return _gge ;
};return nil ;};func (_fa *LicenseKey )isExpired ()bool {return _fa .getExpiryDateToCompare ().After (*_fa .ExpiresAt )};func _cac (_fbbd *_fe .Response )(_g .ReadCloser ,error ){var _dgdb error ;var _fbe _g .ReadCloser ;switch _eg .ToLower (_fbbd .Header .Get ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067")){case "\u0067\u007a\u0069\u0070":_fbe ,_dgdb =_b .NewReader (_fbbd .Body );
if _dgdb !=nil {return _fbe ,_dgdb ;};defer _fbe .Close ();default:_fbe =_fbbd .Body ;};return _fbe ,nil ;};func _dac ()string {_cde :=_ec .Getenv ("\u0048\u004f\u004d\u0045");if len (_cde )==0{_cde ,_ =_ec .UserHomeDir ();};return _cde ;};func (_eda *meteredClient )checkinUsage (_ccd meteredUsageCheckinForm )(meteredUsageCheckinResp ,error ){_ccd .Package ="\u0075\u006e\u0069\u0070\u0064\u0066";
_ccd .PackageVersion =_fb .Version ;var _gcg meteredUsageCheckinResp ;_bdg :=_eda ._ebb +"\u002f\u006d\u0065\u0074er\u0065\u0064\u002f\u0075\u0073\u0061\u0067\u0065\u005f\u0063\u0068\u0065\u0063\u006bi\u006e";_bf ,_eac :=_ba .Marshal (_ccd );if _eac !=nil {return _gcg ,_eac ;
};_eegd ,_eac :=_bfc (_bf );if _eac !=nil {return _gcg ,_eac ;};_gb ,_eac :=_fe .NewRequest ("\u0050\u004f\u0053\u0054",_bdg ,_eegd );if _eac !=nil {return _gcg ,_eac ;};_gb .Header .Add ("\u0043\u006f\u006et\u0065\u006e\u0074\u002d\u0054\u0079\u0070\u0065","\u0061\u0070p\u006c\u0069\u0063a\u0074\u0069\u006f\u006e\u002f\u006a\u0073\u006f\u006e");
_gb .Header .Add ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");_gb .Header .Add ("\u0041c\u0063e\u0070\u0074\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");
_gb .Header .Add ("\u0058-\u0041\u0050\u0049\u002d\u004b\u0045Y",_eda ._ggc );_ace ,_eac :=_eda ._bee .Do (_gb );if _eac !=nil {return _gcg ,_eac ;};defer _ace .Body .Close ();if _ace .StatusCode !=200{return _gcg ,_a .Errorf ("\u0066\u0061i\u006c\u0065\u0064\u0020t\u006f\u0020c\u0068\u0065\u0063\u006b\u0069\u006e\u002c\u0020s\u0074\u0061\u0074\u0075\u0073\u0020\u0063\u006f\u0064\u0065\u0020\u0069s\u003a\u0020\u0025\u0064",_ace .StatusCode );
};_bce ,_eac :=_efe (_ace );if _eac !=nil {return _gcg ,_eac ;};_eac =_ba .Unmarshal (_bce ,&_gcg );if _eac !=nil {return _gcg ,_eac ;};return _gcg ,nil ;};func _fgd (_bac string ,_gg string ,_fda string )(string ,error ){_cgb :=_eg .Index (_fda ,_bac );
if _cgb ==-1{return "",_a .Errorf ("\u0068\u0065a\u0064\u0065\u0072 \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_def :=_eg .Index (_fda ,_gg );if _def ==-1{return "",_a .Errorf ("\u0066\u006fo\u0074\u0065\u0072 \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
};_dff :=_cgb +len (_bac )+1;return _fda [_dff :_def -1],nil ;};type stateLoader interface{loadState (_dgb string )(reportState ,error );updateState (_daa ,_bba ,_cgbd string ,_adb int ,_bedc bool ,_gdd int ,_eed int ,_bbe _dc .Time ,_cfc map[string ]int )error ;
};type meteredUsageCheckinForm struct{Instance string `json:"inst"`;Next string `json:"next"`;UsageNumber int `json:"usage_number"`;NumFailed int64 `json:"num_failed"`;Hostname string `json:"hostname"`;LocalIP string `json:"local_ip"`;MacAddress string `json:"mac_address"`;
Package string `json:"package"`;PackageVersion string `json:"package_version"`;Usage map[string ]int `json:"u"`;};const (LicenseTierUnlicensed ="\u0075\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";LicenseTierCommunity ="\u0063o\u006d\u006d\u0075\u006e\u0069\u0074y";
LicenseTierIndividual ="\u0069\u006e\u0064\u0069\u0076\u0069\u0064\u0075\u0061\u006c";LicenseTierBusiness ="\u0062\u0075\u0073\u0069\u006e\u0065\u0073\u0073";);func (_cag *LicenseKey )IsLicensed ()bool {return _cag .Tier !=LicenseTierUnlicensed ||_cag ._fee };
func (_edb *LicenseKey )TypeToString ()string {if _edb ._fee {return "M\u0065t\u0065\u0072\u0065\u0064\u0020\u0073\u0075\u0062s\u0063\u0072\u0069\u0070ti\u006f\u006e";};if _edb .Tier ==LicenseTierUnlicensed {return "\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";
};if _edb .Tier ==LicenseTierCommunity {return "\u0041\u0047PL\u0076\u0033\u0020O\u0070\u0065\u006e\u0020Sou\u0072ce\u0020\u0043\u006f\u006d\u006d\u0075\u006eit\u0079\u0020\u004c\u0069\u0063\u0065\u006es\u0065";};if _edb .Tier ==LicenseTierIndividual ||_edb .Tier =="\u0069\u006e\u0064i\u0065"{return "\u0043\u006f\u006dm\u0065\u0072\u0063\u0069a\u006c\u0020\u004c\u0069\u0063\u0065\u006es\u0065\u0020\u002d\u0020\u0049\u006e\u0064\u0069\u0076\u0069\u0064\u0075\u0061\u006c";
};return "\u0043\u006fm\u006d\u0065\u0072\u0063\u0069\u0061\u006c\u0020\u004c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u002d\u0020\u0042\u0075\u0073\u0069ne\u0073\u0073";};var _cfd =_dc .Date (2010,1,1,0,0,0,0,_dc .UTC );func _bfe (_abb ,_dfe []byte )([]byte ,error ){_bgf ,_fgbe :=_df .NewCipher (_abb );
if _fgbe !=nil {return nil ,_fgbe ;};_dfad :=make ([]byte ,_df .BlockSize +len (_dfe ));_ggg :=_dfad [:_df .BlockSize ];if _ ,_abd :=_g .ReadFull (_fg .Reader ,_ggg );_abd !=nil {return nil ,_abd ;};_gfa :=_feb .NewCFBEncrypter (_bgf ,_ggg );_gfa .XORKeyStream (_dfad [_df .BlockSize :],_dfe );
_dab :=make ([]byte ,_fd .URLEncoding .EncodedLen (len (_dfad )));_fd .URLEncoding .Encode (_dab ,_dfad );return _dab ,nil ;};func SetLicenseKey (content string ,customerName string )error {_fea ,_bcea :=_ab (content );if _bcea !=nil {_fb .Log .Error ("\u004c\u0069c\u0065\u006e\u0073\u0065\u0020\u0063\u006f\u0064\u0065\u0020\u0064\u0065\u0063\u006f\u0064\u0065\u0020\u0065\u0072\u0072\u006f\u0072: \u0025\u0076",_bcea );
return _bcea ;};if !_eg .EqualFold (_fea .CustomerName ,customerName ){_fb .Log .Error ("L\u0069ce\u006es\u0065 \u0063\u006f\u0064\u0065\u0020i\u0073\u0073\u0075e\u0020\u002d\u0020\u0043\u0075s\u0074\u006f\u006de\u0072\u0020\u006e\u0061\u006d\u0065\u0020\u006d\u0069\u0073\u006da\u0074\u0063\u0068, e\u0078\u0070\u0065\u0063\u0074\u0065d\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u0062\u0075\u0074\u0020\u0067o\u0074 \u0027\u0025\u0073\u0027",customerName ,_fea .CustomerName );
return _a .Errorf ("\u0063\u0075\u0073\u0074\u006fm\u0065\u0072\u0020\u006e\u0061\u006d\u0065\u0020\u006d\u0069\u0073\u006d\u0061t\u0063\u0068\u002c\u0020\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u0062\u0075\u0074\u0020\u0067\u006f\u0074\u0020\u0027\u0025\u0073'",customerName ,_fea .CustomerName );
};_bcea =_fea .Validate ();if _bcea !=nil {_fb .Log .Error ("\u004c\u0069\u0063\u0065\u006e\u0073e\u0020\u0063\u006f\u0064\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074i\u006f\u006e\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_bcea );
return _bcea ;};_gfg =&_fea ;return nil ;};func _bfb (_dea string ,_gac string ,_bbdg bool )error {if _gfg ==nil {return _ecg .New ("\u006e\u006f\u0020\u006c\u0069\u0063\u0065\u006e\u0073e\u0020\u006b\u0065\u0079");};if !_gfg ._fee ||len (_gfg ._af )==0{return nil ;
};if len (_dea )==0&&!_bbdg {return _ecg .New ("\u0064\u006f\u0063\u004b\u0065\u0079\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");};_dbb .Lock ();defer _dbb .Unlock ();if _dcc ==nil {_dcc =map[string ]struct{}{};};if _bg ==nil {_bg =map[string ]int {};
};_dd :=0;if !_bbdg {_ ,_gdg :=_dcc [_dea ];if !_gdg {_dcc [_dea ]=struct{}{};_dd ++;};if _dd ==0{return nil ;};_bg [_gac ]++;};_eba :=_dc .Now ();_eaf ,_dce :=_aga .loadState (_gfg ._af );if _dce !=nil {_fb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dce );
return _dce ;};if _eaf .Usage ==nil {_eaf .Usage =map[string ]int {};};for _gff ,_ccb :=range _bg {_eaf .Usage [_gff ]+=_ccb ;};_bg =nil ;const _ebac =24*_dc .Hour ;const _ecfd =3*24*_dc .Hour ;if len (_eaf .Instance )==0||_eba .Sub (_eaf .LastReported )> _ebac ||(_eaf .LimitDocs &&_eaf .RemainingDocs <=_eaf .Docs +int64 (_dd ))||_bbdg {_dffb ,_febg :=_ec .Hostname ();
if _febg !=nil {return _febg ;};_cea :=_eaf .Docs ;_agf ,_ddd ,_febg :=_ded ();if _febg !=nil {return _febg ;};_gd .Strings (_ddd );_gd .Strings (_agf );_fbg ,_febg :=_fec ();if _febg !=nil {return _febg ;};_bdde :=false ;for _ ,_dgg :=range _ddd {if _dgg ==_fbg .String (){_bdde =true ;
};};if !_bdde {_ddd =append (_ddd ,_fbg .String ());};_afd :=_beg ();_afd ._ggc =_gfg ._af ;_cea +=int64 (_dd );_ead :=meteredUsageCheckinForm {Instance :_eaf .Instance ,Next :_eaf .Next ,UsageNumber :int (_cea ),NumFailed :_eaf .NumErrors ,Hostname :_dffb ,LocalIP :_eg .Join (_ddd ,"\u002c\u0020"),MacAddress :_eg .Join (_agf ,"\u002c\u0020"),Package :"\u0075\u006e\u0069\u0070\u0064\u0066",PackageVersion :_fb .Version ,Usage :_eaf .Usage };
if len (_agf )==0{_ead .MacAddress ="\u006e\u006f\u006e\u0065";};_dcd :=int64 (0);_bda :=_eaf .NumErrors ;_bdff :=_eba ;_ebbb :=0;_afdc :=_eaf .LimitDocs ;_dcbb ,_febg :=_afd .checkinUsage (_ead );if _febg !=nil {if _eba .Sub (_eaf .LastReported )> _ecfd {return _ecg .New ("\u0074\u006f\u006f\u0020\u006c\u006f\u006e\u0067\u0020\u0073\u0069\u006e\u0063\u0065\u0020\u006c\u0061\u0073\u0074\u0020\u0073\u0075\u0063\u0063e\u0073\u0073\u0066\u0075\u006c \u0063\u0068e\u0063\u006b\u0069\u006e");
};_dcd =_cea ;_bda ++;_bdff =_eaf .LastReported ;}else {_afdc =_dcbb .LimitDocs ;_ebbb =_dcbb .RemainingDocs ;_bda =0;};if len (_dcbb .Instance )==0{_dcbb .Instance =_ead .Instance ;};if len (_dcbb .Next )==0{_dcbb .Next =_ead .Next ;};_febg =_aga .updateState (_afd ._ggc ,_dcbb .Instance ,_dcbb .Next ,int (_dcd ),_afdc ,_ebbb ,int (_bda ),_bdff ,nil );
if _febg !=nil {return _febg ;};if !_dcbb .Success {return _a .Errorf ("\u0065r\u0072\u006f\u0072\u003a\u0020\u0025s",_dcbb .Message );};}else {_dce =_aga .updateState (_gfg ._af ,_eaf .Instance ,_eaf .Next ,int (_eaf .Docs )+_dd ,_eaf .LimitDocs ,int (_eaf .RemainingDocs ),int (_eaf .NumErrors ),_eaf .LastReported ,_eaf .Usage );
if _dce !=nil {return _dce ;};};return nil ;};type meteredClient struct{_ebb string ;_ggc string ;_bee *_fe .Client ;};func MakeUnlicensedKey ()*LicenseKey {_ecf :=LicenseKey {};_ecf .CustomerName ="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";
_ecf .Tier =LicenseTierUnlicensed ;_ecf .CreatedAt =_dc .Now ().UTC ();_ecf .CreatedAtInt =_ecf .CreatedAt .Unix ();return &_ecf ;};type MeteredStatus struct{OK bool ;Credits int64 ;Used int64 ;};func _beg ()*meteredClient {_cbe :=meteredClient {_ebb :"h\u0074\u0074\u0070\u0073\u003a\u002f/\u0063\u006c\u006f\u0075\u0064\u002e\u0075\u006e\u0069d\u006f\u0063\u002ei\u006f/\u0061\u0070\u0069",_bee :&_fe .Client {Timeout :30*_dc .Second }};
if _ad :=_ec .Getenv ("\u0055N\u0049\u0044\u004f\u0043_\u004c\u0049\u0043\u0045\u004eS\u0045_\u0053E\u0052\u0056\u0045\u0052\u005f\u0055\u0052L");_eg .HasPrefix (_ad ,"\u0068\u0074\u0074\u0070"){_cbe ._ebb =_ad ;};return &_cbe ;};func GetMeteredState ()(MeteredStatus ,error ){if _gfg ==nil {return MeteredStatus {},_ecg .New ("\u006c\u0069\u0063\u0065ns\u0065\u0020\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");
};if !_gfg ._fee ||len (_gfg ._af )==0{return MeteredStatus {},_ecg .New ("\u0061p\u0069 \u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");};_gcaf ,_gdc :=_aga .loadState (_gfg ._af );if _gdc !=nil {_fb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gdc );
return MeteredStatus {},_gdc ;};if _gcaf .Docs > 0{_afb :=_bfb ("","",true );if _afb !=nil {return MeteredStatus {},_afb ;};};_dbb .Lock ();defer _dbb .Unlock ();_dgd :=_beg ();_dgd ._ggc =_gfg ._af ;_ccde ,_gdc :=_dgd .getStatus ();if _gdc !=nil {return MeteredStatus {},_gdc ;
};if !_ccde .Valid {return MeteredStatus {},_ecg .New ("\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0076\u0061\u006c\u0069\u0064");};_cbd :=MeteredStatus {OK :true ,Credits :_ccde .OrgCredits ,Used :_ccde .OrgUsed };return _cbd ,nil ;};func TrackUse (useKey string ){if _gfg ==nil {return ;
};if !_gfg ._fee ||len (_gfg ._af )==0{return ;};if len (useKey )==0{return ;};_dbb .Lock ();defer _dbb .Unlock ();if _bg ==nil {_bg =map[string ]int {};};_bg [useKey ]++;};var _dcc map[string ]struct{};func GetLicenseKey ()*LicenseKey {if _gfg ==nil {return nil ;
};_eca :=*_gfg ;return &_eca ;};func _efe (_ccdg *_fe .Response )([]byte ,error ){var _ecac []byte ;_gbf ,_aecf :=_cac (_ccdg );if _aecf !=nil {return _ecac ,_aecf ;};return _gc .ReadAll (_gbf );};var _aga stateLoader =defaultStateHolder {};func _fec ()(_ef .IP ,error ){_bfg ,_fff :=_ef .Dial ("\u0075\u0064\u0070","\u0038\u002e\u0038\u002e\u0038\u002e\u0038\u003a\u0038\u0030");
if _fff !=nil {return nil ,_fff ;};defer _bfg .Close ();_aff :=_bfg .LocalAddr ().(*_ef .UDPAddr );return _aff .IP ,nil ;};type meteredStatusResp struct{Valid bool `json:"valid"`;OrgCredits int64 `json:"org_credits"`;OrgUsed int64 `json:"org_used"`;OrgRemaining int64 `json:"org_remaining"`;
};type LicenseKey struct{LicenseId string `json:"license_id"`;CustomerId string `json:"customer_id"`;CustomerName string `json:"customer_name"`;Tier string `json:"tier"`;CreatedAt _dc .Time `json:"-"`;CreatedAtInt int64 `json:"created_at"`;ExpiresAt *_dc .Time `json:"-"`;
ExpiresAtInt int64 `json:"expires_at"`;CreatedBy string `json:"created_by"`;CreatorName string `json:"creator_name"`;CreatorEmail string `json:"creator_email"`;UniPDF bool `json:"unipdf"`;UniOffice bool `json:"unioffice"`;UniHTML bool `json:"unihtml"`;
Trial bool `json:"trial"`;_fee bool ;_af string ;};func _gad (_cafb ,_dbbe []byte )([]byte ,error ){_cgbde :=make ([]byte ,_fd .URLEncoding .DecodedLen (len (_dbbe )));_febgc ,_acca :=_fd .URLEncoding .Decode (_cgbde ,_dbbe );if _acca !=nil {return nil ,_acca ;
};_cgbde =_cgbde [:_febgc ];_deg ,_acca :=_df .NewCipher (_cafb );if _acca !=nil {return nil ,_acca ;};if len (_cgbde )< _df .BlockSize {return nil ,_ecg .New ("c\u0069p\u0068\u0065\u0072\u0074\u0065\u0078\u0074\u0020t\u006f\u006f\u0020\u0073ho\u0072\u0074");
};_dece :=_cgbde [:_df .BlockSize ];_cgbde =_cgbde [_df .BlockSize :];_dffbf :=_feb .NewCFBDecrypter (_deg ,_dece );_dffbf .XORKeyStream (_cgbde ,_cgbde );return _cgbde ,nil ;};func (_bbb defaultStateHolder )loadState (_agb string )(reportState ,error ){_cbec :=_dac ();
if len (_cbec )==0{return reportState {},_ecg .New ("\u0068\u006fm\u0065\u0020\u0064i\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");};_fefe :=_d .Join (_cbec ,"\u002eu\u006e\u0069\u0064\u006f\u0063");_cbdd :=_ec .MkdirAll (_fefe ,0777);if _cbdd !=nil {return reportState {},_cbdd ;
};if len (_agb )< 20{return reportState {},_ecg .New ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006b\u0065\u0079");};_cfcg :=[]byte (_agb );_efc :=_cg .Sum512_256 (_cfcg [:20]);_fc :=_eff .EncodeToString (_efc [:]);_dad :=_d .Join (_fefe ,_fc );_ffb ,_cbdd :=_gc .ReadFile (_dad );
if _cbdd !=nil {if _ec .IsNotExist (_cbdd ){return reportState {},nil ;};_fb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cbdd );return reportState {},_ecg .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061");};const _bbd ="\u0068\u00619\u004e\u004b\u0038]\u0052\u0062\u004c\u002a\u006d\u0034\u004c\u004b\u0057";
_ffb ,_cbdd =_gad ([]byte (_bbd ),_ffb );if _cbdd !=nil {return reportState {},_cbdd ;};var _bcge reportState ;_cbdd =_ba .Unmarshal (_ffb ,&_bcge );if _cbdd !=nil {_fb .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0076",_cbdd );
return reportState {},_ecg .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061");};return _bcge ,nil ;};func SetMeteredKey (apiKey string )error {if len (apiKey )==0{_fb .Log .Error ("\u004d\u0065\u0074\u0065\u0072e\u0064\u0020\u004c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u0041\u0050\u0049 \u004b\u0065\u0079\u0020\u006d\u0075\u0073\u0074\u0020\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0065\u006d\u0070\u0074\u0079");
_fb .Log .Error ("\u002d\u0020\u0047\u0072\u0061\u0062\u0020\u006f\u006e\u0065\u0020\u0069\u006e\u0020\u0074h\u0065\u0020\u0046\u0072\u0065\u0065\u0020\u0054\u0069\u0065\u0072\u0020\u0061t\u0020\u0068\u0074\u0074\u0070\u0073\u003a\u002f\u002f\u0063\u006c\u006fud\u002e\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _a .Errorf ("\u006de\u0074\u0065\u0072e\u0064\u0020\u006ci\u0063en\u0073\u0065\u0020\u0061\u0070\u0069\u0020k\u0065\u0079\u0020\u006d\u0075\u0073\u0074\u0020\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0065\u006d\u0070\u0074\u0079\u003a\u0020\u0063\u0072\u0065\u0061\u0074\u0065 o\u006ee\u0020\u0061\u0074\u0020\u0068\u0074t\u0070\u0073\u003a\u002f\u002fc\u006c\u006f\u0075\u0064\u002e\u0075\u006e\u0069\u0064\u006f\u0063.\u0069\u006f");
};if _gfg !=nil &&(_gfg ._fee ||_gfg .Tier !=LicenseTierUnlicensed ){_fb .Log .Error ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0043\u0061\u006e\u006eo\u0074 \u0073\u0065\u0074\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u006b\u0065\u0079\u0020\u0074\u0077\u0069c\u0065\u0020\u002d\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u006a\u0075\u0073\u0074\u0020\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0069z\u0065\u0020\u006f\u006e\u0063\u0065");
return _ecg .New ("\u006c\u0069\u0063en\u0073\u0065\u0020\u006b\u0065\u0079\u0020\u0061\u006c\u0072\u0065\u0061\u0064\u0079\u0020\u0073\u0065\u0074");};_gdf :=_beg ();_gdf ._ggc =apiKey ;_age ,_bed :=_gdf .getStatus ();if _bed !=nil {return _bed ;};if !_age .Valid {return _ecg .New ("\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0076\u0061\u006c\u0069\u0064");
};_dgf :=&LicenseKey {_fee :true ,_af :apiKey };_gfg =_dgf ;return nil ;};var _gfg =MakeUnlicensedKey ();func Track (docKey string ,useKey string )error {return _bfb (docKey ,useKey ,false )};func (_afe *LicenseKey )ToString ()string {if _afe ._fee {return "M\u0065t\u0065\u0072\u0065\u0064\u0020\u0073\u0075\u0062s\u0063\u0072\u0069\u0070ti\u006f\u006e";
};_cb :=_a .Sprintf ("\u004ci\u0063e\u006e\u0073\u0065\u0020\u0049\u0064\u003a\u0020\u0025\u0073\u000a",_afe .LicenseId );_cb +=_a .Sprintf ("\u0043\u0075s\u0074\u006f\u006de\u0072\u0020\u0049\u0064\u003a\u0020\u0025\u0073\u000a",_afe .CustomerId );_cb +=_a .Sprintf ("\u0043u\u0073t\u006f\u006d\u0065\u0072\u0020N\u0061\u006de\u003a\u0020\u0025\u0073\u000a",_afe .CustomerName );
_cb +=_a .Sprintf ("\u0054i\u0065\u0072\u003a\u0020\u0025\u0073\n",_afe .Tier );_cb +=_a .Sprintf ("\u0043r\u0065a\u0074\u0065\u0064\u0020\u0041\u0074\u003a\u0020\u0025\u0073\u000a",_fb .UtcTimeFormat (_afe .CreatedAt ));if _afe .ExpiresAt ==nil {_cb +="\u0045x\u0070i\u0072\u0065\u0073\u0020\u0041t\u003a\u0020N\u0065\u0076\u0065\u0072\u000a";
}else {_cb +=_a .Sprintf ("\u0045x\u0070i\u0072\u0065\u0073\u0020\u0041\u0074\u003a\u0020\u0025\u0073\u000a",_fb .UtcTimeFormat (*_afe .ExpiresAt ));};_cb +=_a .Sprintf ("\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u003a\u0020\u0025\u0073\u0020<\u0025\u0073\u003e\u000a",_afe .CreatorName ,_afe .CreatorEmail );
return _cb ;};func _ded ()([]string ,[]string ,error ){_gfcd ,_aec :=_ef .Interfaces ();if _aec !=nil {return nil ,nil ,_aec ;};var _ade []string ;var _cdg []string ;for _ ,_ggd :=range _gfcd {if _ggd .Flags &_ef .FlagUp ==0||_c .Equal (_ggd .HardwareAddr ,nil ){continue ;
};_cdgc ,_cda :=_ggd .Addrs ();if _cda !=nil {return nil ,nil ,_cda ;};_bbdf :=0;for _ ,_eef :=range _cdgc {var _eab _ef .IP ;switch _adec :=_eef .(type ){case *_ef .IPNet :_eab =_adec .IP ;case *_ef .IPAddr :_eab =_adec .IP ;};if _eab .IsLoopback (){continue ;
};if _eab .To4 ()==nil {continue ;};_cdg =append (_cdg ,_eab .String ());_bbdf ++;};_gab :=_ggd .HardwareAddr .String ();if _gab !=""&&_bbdf > 0{_ade =append (_ade ,_gab );};};return _ade ,_cdg ,nil ;};func init (){_cdd :=_ec .Getenv (_gaf );_bga :=_ec .Getenv (_ebf );
if len (_cdd )==0||len (_bga )==0{return ;};_bdeb ,_cfb :=_gc .ReadFile (_cdd );if _cfb !=nil {_fb .Log .Error ("\u0055\u006eab\u006c\u0065\u0020t\u006f\u0020\u0072\u0065ad \u006cic\u0065\u006e\u0073\u0065\u0020\u0063\u006fde\u0020\u0066\u0069\u006c\u0065\u003a\u0020%\u0076",_cfb );
return ;};_cfb =SetLicenseKey (string (_bdeb ),_bga );if _cfb !=nil {_fb .Log .Error ("\u0055\u006e\u0061b\u006c\u0065\u0020\u0074o\u0020\u006c\u006f\u0061\u0064\u0020\u006ci\u0063\u0065\u006e\u0073\u0065\u0020\u0063\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_cfb );
return ;};};func _bfc (_dceg []byte )(_g .Reader ,error ){_ebca :=new (_c .Buffer );_efbfa :=_b .NewWriter (_ebca );_efbfa .Write (_dceg );_cab :=_efbfa .Close ();if _cab !=nil {return nil ,_cab ;};return _ebca ,nil ;};type meteredUsageCheckinResp struct{Instance string `json:"inst"`;
Next string `json:"next"`;Success bool `json:"success"`;Message string `json:"message"`;RemainingDocs int `json:"rd"`;LimitDocs bool `json:"ld"`;};func (_bcf *meteredClient )getStatus ()(meteredStatusResp ,error ){var _bdd meteredStatusResp ;_fed :=_bcf ._ebb +"\u002fm\u0065t\u0065\u0072\u0065\u0064\u002f\u0073\u0074\u0061\u0074\u0075\u0073";
var _bb meteredStatusForm ;_gaa ,_efbf :=_ba .Marshal (_bb );if _efbf !=nil {return _bdd ,_efbf ;};_fbb ,_efbf :=_bfc (_gaa );if _efbf !=nil {return _bdd ,_efbf ;};_ebc ,_efbf :=_fe .NewRequest ("\u0050\u004f\u0053\u0054",_fed ,_fbb );if _efbf !=nil {return _bdd ,_efbf ;
};_ebc .Header .Add ("\u0043\u006f\u006et\u0065\u006e\u0074\u002d\u0054\u0079\u0070\u0065","\u0061\u0070p\u006c\u0069\u0063a\u0074\u0069\u006f\u006e\u002f\u006a\u0073\u006f\u006e");_ebc .Header .Add ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");
_ebc .Header .Add ("\u0041c\u0063e\u0070\u0074\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");_ebc .Header .Add ("\u0058-\u0041\u0050\u0049\u002d\u004b\u0045Y",_bcf ._ggc );_ge ,_efbf :=_bcf ._bee .Do (_ebc );if _efbf !=nil {return _bdd ,_efbf ;
};defer _ge .Body .Close ();if _ge .StatusCode !=200{return _bdd ,_a .Errorf ("\u0066\u0061i\u006c\u0065\u0064\u0020t\u006f\u0020c\u0068\u0065\u0063\u006b\u0069\u006e\u002c\u0020s\u0074\u0061\u0074\u0075\u0073\u0020\u0063\u006f\u0064\u0065\u0020\u0069s\u003a\u0020\u0025\u0064",_ge .StatusCode );
};_da ,_efbf :=_efe (_ge );if _efbf !=nil {return _bdd ,_efbf ;};_efbf =_ba .Unmarshal (_da ,&_bdd );if _efbf !=nil {return _bdd ,_efbf ;};return _bdd ,nil ;};type reportState struct{Instance string `json:"inst"`;Next string `json:"n"`;Docs int64 `json:"d"`;
NumErrors int64 `json:"e"`;LimitDocs bool `json:"ld"`;RemainingDocs int64 `json:"rd"`;LastReported _dc .Time `json:"lr"`;LastWritten _dc .Time `json:"lw"`;Usage map[string ]int `json:"u"`;};var _dgeb =_dc .Date (2019,6,6,0,0,0,0,_dc .UTC );type defaultStateHolder struct{};
var _ggf =_dc .Date (2020,1,1,0,0,0,0,_dc .UTC );