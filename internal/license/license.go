//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package license ;import (_cd "bytes";_f "compress/gzip";_ca "crypto";_bf "crypto/aes";_cf "crypto/cipher";_be "crypto/rand";_gbd "crypto/rsa";_ag "crypto/sha512";_cfc "crypto/x509";_gf "encoding/base64";_da "encoding/hex";_ef "encoding/json";_df "encoding/pem";
_gbf "errors";_gc "fmt";_bec "github.com/unidoc/unipdf/v3/common";_g "io";_ge "io/ioutil";_b "net";_af "net/http";_gb "os";_dg "path/filepath";_a "sort";_e "strings";_d "sync";_fb "time";);func _acf (_acc ,_beb []byte )([]byte ,error ){_cagd ,_eadc :=_bf .NewCipher (_acc );
if _eadc !=nil {return nil ,_eadc ;};_cbg :=make ([]byte ,_bf .BlockSize +len (_beb ));_ffe :=_cbg [:_bf .BlockSize ];if _ ,_dfce :=_g .ReadFull (_be .Reader ,_ffe );_dfce !=nil {return nil ,_dfce ;};_bebf :=_cf .NewCFBEncrypter (_cagd ,_ffe );_bebf .XORKeyStream (_cbg [_bf .BlockSize :],_beb );
_bdc :=make ([]byte ,_gf .URLEncoding .EncodedLen (len (_cbg )));_gf .URLEncoding .Encode (_bdc ,_cbg );return _bdc ,nil ;};type reportState struct{Instance string `json:"inst"`;Next string `json:"n"`;Docs int64 `json:"d"`;NumErrors int64 `json:"e"`;LimitDocs bool `json:"ld"`;
RemainingDocs int64 `json:"rd"`;LastReported _fb .Time `json:"lr"`;LastWritten _fb .Time `json:"lw"`;Usage map[string ]int `json:"u"`;};func _ged ()(_b .IP ,error ){_ebf ,_feg :=_b .Dial ("\u0075\u0064\u0070","\u0038\u002e\u0038\u002e\u0038\u002e\u0038\u003a\u0038\u0030");
if _feg !=nil {return nil ,_feg ;};defer _ebf .Close ();_ecd :=_ebf .LocalAddr ().(*_b .UDPAddr );return _ecd .IP ,nil ;};type defaultStateHolder struct{};func GetMeteredState ()(MeteredStatus ,error ){if _bcg ==nil {return MeteredStatus {},_gbf .New ("\u006c\u0069\u0063\u0065ns\u0065\u0020\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");
};if !_bcg ._ce ||len (_bcg ._dd )==0{return MeteredStatus {},_gbf .New ("\u0061p\u0069 \u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");};_bb ,_cgd :=_bca .loadState (_bcg ._dd );if _cgd !=nil {_bec .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cgd );
return MeteredStatus {},_cgd ;};if _bb .Docs > 0{_gcf :=_aeg ("","",true );if _gcf !=nil {return MeteredStatus {},_gcf ;};};_fbbg .Lock ();defer _fbbg .Unlock ();_dbg :=_fee ();_dbg ._gcdg =_bcg ._dd ;_gfg ,_cgd :=_dbg .getStatus ();if _cgd !=nil {return MeteredStatus {},_cgd ;
};if !_gfg .Valid {return MeteredStatus {},_gbf .New ("\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0076\u0061\u006c\u0069\u0064");};_ege :=MeteredStatus {OK :true ,Credits :_gfg .OrgCredits ,Used :_gfg .OrgUsed };return _ege ,nil ;};func (_fba *LicenseKey )Validate ()error {if _fba ._ce {return nil ;
};if len (_fba .LicenseId )< 10{return _gc .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020L\u0069\u0063\u0065n\u0073e\u0020\u0049\u0064");};if len (_fba .CustomerId )< 10{return _gc .Errorf ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065:\u0020C\u0075\u0073\u0074\u006f\u006d\u0065\u0072 \u0049\u0064");
};if len (_fba .CustomerName )< 1{return _gc .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069c\u0065\u006e\u0073\u0065\u003a\u0020\u0043u\u0073\u0074\u006f\u006d\u0065\u0072\u0020\u004e\u0061\u006d\u0065");};if _db .After (_fba .CreatedAt ){return _gc .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u0065\u0064 \u0041\u0074\u0020\u0069\u0073 \u0069\u006ev\u0061\u006c\u0069\u0064");
};if _fba .ExpiresAt ==nil {_fbe :=_fba .CreatedAt .AddDate (1,0,0);if _ea .After (_fbe ){_fbe =_ea ;};_fba .ExpiresAt =&_fbe ;};if _fba .CreatedAt .After (*_fba .ExpiresAt ){return _gc .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u0065\u0064\u0020\u0041\u0074 \u0063a\u006e\u006e\u006f\u0074 \u0062\u0065 \u0047\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0045\u0078\u0070\u0069\u0072\u0065\u0073\u0020\u0041\u0074");
};if _fba .isExpired (){return _gc .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020l\u0069\u0063\u0065ns\u0065\u003a\u0020\u0054\u0068\u0065 \u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u0068\u0061\u0073\u0020\u0061\u006c\u0072e\u0061\u0064\u0079\u0020\u0065\u0078\u0070\u0069r\u0065\u0064");
};if len (_fba .CreatorName )< 1{return _gc .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u0020na\u006d\u0065");};if len (_fba .CreatorEmail )< 1{return _gc .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069c\u0065\u006e\u0073\u0065\u003a\u0020\u0043r\u0065\u0061\u0074\u006f\u0072\u0020\u0065\u006d\u0061\u0069\u006c");
};if _fba .CreatedAt .After (_aac ){if !_fba .UniPDF {return _gc .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065:\u0020\u0054\u0068\u0069\u0073\u0020\u0055\u006e\u0069\u0044\u006f\u0063\u0020k\u0065\u0079\u0020\u0069\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069d \u0066\u006f\u0072\u0020\u0055\u006e\u0069\u0050\u0044\u0046");
};};return nil ;};func SetMeteredKey (apiKey string )error {if len (apiKey )==0{_bec .Log .Error ("\u004d\u0065\u0074\u0065\u0072e\u0064\u0020\u004c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u0041\u0050\u0049 \u004b\u0065\u0079\u0020\u006d\u0075\u0073\u0074\u0020\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0065\u006d\u0070\u0074\u0079");
_bec .Log .Error ("\u002d\u0020\u0047\u0072\u0061\u0062\u0020\u006f\u006e\u0065\u0020\u0069\u006e\u0020\u0074h\u0065\u0020\u0046\u0072\u0065\u0065\u0020\u0054\u0069\u0065\u0072\u0020\u0061t\u0020\u0068\u0074\u0074\u0070\u0073\u003a\u002f\u002f\u0063\u006c\u006fud\u002e\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _gc .Errorf ("\u006de\u0074\u0065\u0072e\u0064\u0020\u006ci\u0063en\u0073\u0065\u0020\u0061\u0070\u0069\u0020k\u0065\u0079\u0020\u006d\u0075\u0073\u0074\u0020\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0065\u006d\u0070\u0074\u0079\u003a\u0020\u0063\u0072\u0065\u0061\u0074\u0065 o\u006ee\u0020\u0061\u0074\u0020\u0068\u0074t\u0070\u0073\u003a\u002f\u002fc\u006c\u006f\u0075\u0064\u002e\u0075\u006e\u0069\u0064\u006f\u0063.\u0069\u006f");
};if _bcg !=nil &&(_bcg ._ce ||_bcg .Tier !=LicenseTierUnlicensed ){_bec .Log .Error ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0043\u0061\u006e\u006eo\u0074 \u0073\u0065\u0074\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u006b\u0065\u0079\u0020\u0074\u0077\u0069c\u0065\u0020\u002d\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u006a\u0075\u0073\u0074\u0020\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0069z\u0065\u0020\u006f\u006e\u0063\u0065");
return _gbf .New ("\u006c\u0069\u0063en\u0073\u0065\u0020\u006b\u0065\u0079\u0020\u0061\u006c\u0072\u0065\u0061\u0064\u0079\u0020\u0073\u0065\u0074");};_gg :=_fee ();_gg ._gcdg =apiKey ;_ae ,_gdeg :=_gg .getStatus ();if _gdeg !=nil {return _gdeg ;};if !_ae .Valid {return _gbf .New ("\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0076\u0061\u006c\u0069\u0064");
};_bdec :=&LicenseKey {_ce :true ,_dd :apiKey };_bcg =_bdec ;return nil ;};const _dab ="\u0055\u004e\u0049\u0050DF\u005f\u004c\u0049\u0043\u0045\u004e\u0053\u0045\u005f\u0050\u0041\u0054\u0048";var _fbbg =&_d .Mutex {};func _ff (_dfc string )(LicenseKey ,error ){var _cga LicenseKey ;
_ba ,_ec :=_fa (_agf ,_cc ,_dfc );if _ec !=nil {return _cga ,_ec ;};_cca ,_ec :=_cg (_dbb ,_ba );if _ec !=nil {return _cga ,_ec ;};_ec =_ef .Unmarshal (_cca ,&_cga );if _ec !=nil {return _cga ,_ec ;};_cga .CreatedAt =_fb .Unix (_cga .CreatedAtInt ,0);if _cga .ExpiresAtInt > 0{_cfd :=_fb .Unix (_cga .ExpiresAtInt ,0);
_cga .ExpiresAt =&_cfd ;};return _cga ,nil ;};const (_agf ="\u002d\u002d\u002d--\u0042\u0045\u0047\u0049\u004e\u0020\u0055\u004e\u0049D\u004fC\u0020L\u0049C\u0045\u004e\u0053\u0045\u0020\u004b\u0045\u0059\u002d\u002d\u002d\u002d\u002d";_cc ="\u002d\u002d\u002d\u002d\u002d\u0045\u004e\u0044\u0020\u0055\u004e\u0049\u0044\u004f\u0043 \u004cI\u0043\u0045\u004e\u0053\u0045\u0020\u004b\u0045\u0059\u002d\u002d\u002d\u002d\u002d";
);var _aac =_fb .Date (2019,6,6,0,0,0,0,_fb .UTC );func _ceb ()([]string ,[]string ,error ){_dba ,_aea :=_b .Interfaces ();if _aea !=nil {return nil ,nil ,_aea ;};var _bfg []string ;var _bcaf []string ;for _ ,_agga :=range _dba {if _agga .Flags &_b .FlagUp ==0||_cd .Equal (_agga .HardwareAddr ,nil ){continue ;
};_dgad ,_gbca :=_agga .Addrs ();if _gbca !=nil {return nil ,nil ,_gbca ;};_fag :=0;for _ ,_egfe :=range _dgad {var _eade _b .IP ;switch _bega :=_egfe .(type ){case *_b .IPNet :_eade =_bega .IP ;case *_b .IPAddr :_eade =_bega .IP ;};if _eade .IsLoopback (){continue ;
};if _eade .To4 ()==nil {continue ;};_bcaf =append (_bcaf ,_eade .String ());_fag ++;};_gbff :=_agga .HardwareAddr .String ();if _gbff !=""&&_fag > 0{_bfg =append (_bfg ,_gbff );};};return _bfg ,_bcaf ,nil ;};var _bca stateLoader =defaultStateHolder {};
func TrackUse (useKey string ){if _bcg ==nil {return ;};if !_bcg ._ce ||len (_bcg ._dd )==0{return ;};if len (useKey )==0{return ;};_fbbg .Lock ();defer _fbbg .Unlock ();if _ffb ==nil {_ffb =map[string ]int {};};_ffb [useKey ]++;};type meteredClient struct{_egb string ;
_gcdg string ;_bgg *_af .Client ;};func (_bde *meteredClient )checkinUsage (_egf meteredUsageCheckinForm )(meteredUsageCheckinResp ,error ){_egf .Package ="\u0075\u006e\u0069\u0070\u0064\u0066";_egf .PackageVersion =_bec .Version ;var _cegb meteredUsageCheckinResp ;
_cfcc :=_bde ._egb +"\u002f\u006d\u0065\u0074er\u0065\u0064\u002f\u0075\u0073\u0061\u0067\u0065\u005f\u0063\u0068\u0065\u0063\u006bi\u006e";_eag ,_ebd :=_ef .Marshal (_egf );if _ebd !=nil {return _cegb ,_ebd ;};_gde ,_ebd :=_dbc (_eag );if _ebd !=nil {return _cegb ,_ebd ;
};_fed ,_ebd :=_af .NewRequest ("\u0050\u004f\u0053\u0054",_cfcc ,_gde );if _ebd !=nil {return _cegb ,_ebd ;};_fed .Header .Add ("\u0043\u006f\u006et\u0065\u006e\u0074\u002d\u0054\u0079\u0070\u0065","\u0061\u0070p\u006c\u0069\u0063a\u0074\u0069\u006f\u006e\u002f\u006a\u0073\u006f\u006e");
_fed .Header .Add ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");_fed .Header .Add ("\u0041c\u0063e\u0070\u0074\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");
_fed .Header .Add ("\u0058-\u0041\u0050\u0049\u002d\u004b\u0045Y",_bde ._gcdg );_fg ,_ebd :=_bde ._bgg .Do (_fed );if _ebd !=nil {return _cegb ,_ebd ;};defer _fg .Body .Close ();if _fg .StatusCode !=200{return _cegb ,_gc .Errorf ("\u0066\u0061i\u006c\u0065\u0064\u0020t\u006f\u0020c\u0068\u0065\u0063\u006b\u0069\u006e\u002c\u0020s\u0074\u0061\u0074\u0075\u0073\u0020\u0063\u006f\u0064\u0065\u0020\u0069s\u003a\u0020\u0025\u0064",_fg .StatusCode );
};_fbc ,_ebd :=_daaf (_fg );if _ebd !=nil {return _cegb ,_ebd ;};_ebd =_ef .Unmarshal (_fbc ,&_cegb );if _ebd !=nil {return _cegb ,_ebd ;};return _cegb ,nil ;};func _aeg (_ccac string ,_fef string ,_bcb bool )error {if _bcg ==nil {return _gbf .New ("\u006e\u006f\u0020\u006c\u0069\u0063\u0065\u006e\u0073e\u0020\u006b\u0065\u0079");
};if !_bcg ._ce ||len (_bcg ._dd )==0{return nil ;};if len (_ccac )==0&&!_bcb {return _gbf .New ("\u0064\u006f\u0063\u004b\u0065\u0079\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");};_fbbg .Lock ();defer _fbbg .Unlock ();if _efg ==nil {_efg =map[string ]struct{}{};
};if _ffb ==nil {_ffb =map[string ]int {};};_ccg :=0;if !_bcb {_ ,_aeb :=_efg [_ccac ];if !_aeb {_efg [_ccac ]=struct{}{};_ccg ++;};if _ccg ==0{return nil ;};_ffb [_fef ]++;};_gcc :=_fb .Now ();_ccacg ,_efb :=_bca .loadState (_bcg ._dd );if _efb !=nil {_bec .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_efb );
return _efb ;};if _ccacg .Usage ==nil {_ccacg .Usage =map[string ]int {};};for _gacf ,_cdb :=range _ffb {_ccacg .Usage [_gacf ]+=_cdb ;};_ffb =nil ;const _gace =24*_fb .Hour ;const _gbfg =3*24*_fb .Hour ;if len (_ccacg .Instance )==0||_gcc .Sub (_ccacg .LastReported )> _gace ||(_ccacg .LimitDocs &&_ccacg .RemainingDocs <=_ccacg .Docs +int64 (_ccg ))||_bcb {_fbbc ,_dfge :=_gb .Hostname ();
if _dfge !=nil {return _dfge ;};_eae :=_ccacg .Docs ;_egd ,_cae ,_dfge :=_ceb ();if _dfge !=nil {return _dfge ;};_a .Strings (_cae );_a .Strings (_egd );_aba ,_dfge :=_ged ();if _dfge !=nil {return _dfge ;};_ccd :=false ;for _ ,_eda :=range _cae {if _eda ==_aba .String (){_ccd =true ;
};};if !_ccd {_cae =append (_cae ,_aba .String ());};_fbf :=_fee ();_fbf ._gcdg =_bcg ._dd ;_eae +=int64 (_ccg );_gdf :=meteredUsageCheckinForm {Instance :_ccacg .Instance ,Next :_ccacg .Next ,UsageNumber :int (_eae ),NumFailed :_ccacg .NumErrors ,Hostname :_fbbc ,LocalIP :_e .Join (_cae ,"\u002c\u0020"),MacAddress :_e .Join (_egd ,"\u002c\u0020"),Package :"\u0075\u006e\u0069\u0070\u0064\u0066",PackageVersion :_bec .Version ,Usage :_ccacg .Usage };
if len (_egd )==0{_gdf .MacAddress ="\u006e\u006f\u006e\u0065";};_fcd :=int64 (0);_afc :=_ccacg .NumErrors ;_dec :=_gcc ;_fd :=0;_dfgc :=_ccacg .LimitDocs ;_gad ,_dfge :=_fbf .checkinUsage (_gdf );if _dfge !=nil {if _gcc .Sub (_ccacg .LastReported )> _gbfg {return _gbf .New ("\u0074\u006f\u006f\u0020\u006c\u006f\u006e\u0067\u0020\u0073\u0069\u006e\u0063\u0065\u0020\u006c\u0061\u0073\u0074\u0020\u0073\u0075\u0063\u0063e\u0073\u0073\u0066\u0075\u006c \u0063\u0068e\u0063\u006b\u0069\u006e");
};_fcd =_eae ;_afc ++;_dec =_ccacg .LastReported ;}else {_dfgc =_gad .LimitDocs ;_fd =_gad .RemainingDocs ;_afc =0;};if len (_gad .Instance )==0{_gad .Instance =_gdf .Instance ;};if len (_gad .Next )==0{_gad .Next =_gdf .Next ;};_dfge =_bca .updateState (_fbf ._gcdg ,_gad .Instance ,_gad .Next ,int (_fcd ),_dfgc ,_fd ,int (_afc ),_dec ,nil );
if _dfge !=nil {return _dfge ;};if !_gad .Success {return _gc .Errorf ("\u0065r\u0072\u006f\u0072\u003a\u0020\u0025s",_gad .Message );};}else {_efb =_bca .updateState (_bcg ._dd ,_ccacg .Instance ,_ccacg .Next ,int (_ccacg .Docs )+_ccg ,_ccacg .LimitDocs ,int (_ccacg .RemainingDocs ),int (_ccacg .NumErrors ),_ccacg .LastReported ,_ccacg .Usage );
if _efb !=nil {return _efb ;};};return nil ;};func (_eee defaultStateHolder )loadState (_aff string )(reportState ,error ){_ecb :=_bfa ();if len (_ecb )==0{return reportState {},_gbf .New ("\u0068\u006fm\u0065\u0020\u0064i\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");
};_gee :=_dg .Join (_ecb ,"\u002eu\u006e\u0069\u0064\u006f\u0063");_cec :=_gb .MkdirAll (_gee ,0777);if _cec !=nil {return reportState {},_cec ;};if len (_aff )< 20{return reportState {},_gbf .New ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006b\u0065\u0079");
};_fgf :=[]byte (_aff );_gbg :=_ag .Sum512_256 (_fgf [:20]);_cgae :=_da .EncodeToString (_gbg [:]);_cgf :=_dg .Join (_gee ,_cgae );_ebg ,_cec :=_ge .ReadFile (_cgf );if _cec !=nil {if _gb .IsNotExist (_cec ){return reportState {},nil ;};_bec .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cec );
return reportState {},_gbf .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061");};const _dfda ="\u0068\u00619\u004e\u004b\u0038]\u0052\u0062\u004c\u002a\u006d\u0034\u004c\u004b\u0057";_ebg ,_cec =_gae ([]byte (_dfda ),_ebg );if _cec !=nil {return reportState {},_cec ;
};var _bba reportState ;_cec =_ef .Unmarshal (_ebg ,&_bba );if _cec !=nil {_bec .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0076",_cec );return reportState {},_gbf .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061");
};return _bba ,nil ;};func (_agc *meteredClient )getStatus ()(meteredStatusResp ,error ){var _efd meteredStatusResp ;_cfa :=_agc ._egb +"\u002fm\u0065t\u0065\u0072\u0065\u0064\u002f\u0073\u0074\u0061\u0074\u0075\u0073";var _bcc meteredStatusForm ;_eac ,_dcd :=_ef .Marshal (_bcc );
if _dcd !=nil {return _efd ,_dcd ;};_gfb ,_dcd :=_dbc (_eac );if _dcd !=nil {return _efd ,_dcd ;};_cfag ,_dcd :=_af .NewRequest ("\u0050\u004f\u0053\u0054",_cfa ,_gfb );if _dcd !=nil {return _efd ,_dcd ;};_cfag .Header .Add ("\u0043\u006f\u006et\u0065\u006e\u0074\u002d\u0054\u0079\u0070\u0065","\u0061\u0070p\u006c\u0069\u0063a\u0074\u0069\u006f\u006e\u002f\u006a\u0073\u006f\u006e");
_cfag .Header .Add ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");_cfag .Header .Add ("\u0041c\u0063e\u0070\u0074\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");
_cfag .Header .Add ("\u0058-\u0041\u0050\u0049\u002d\u004b\u0045Y",_agc ._gcdg );_ceg ,_dcd :=_agc ._bgg .Do (_cfag );if _dcd !=nil {return _efd ,_dcd ;};defer _ceg .Body .Close ();if _ceg .StatusCode !=200{return _efd ,_gc .Errorf ("\u0066\u0061i\u006c\u0065\u0064\u0020t\u006f\u0020c\u0068\u0065\u0063\u006b\u0069\u006e\u002c\u0020s\u0074\u0061\u0074\u0075\u0073\u0020\u0063\u006f\u0064\u0065\u0020\u0069s\u003a\u0020\u0025\u0064",_ceg .StatusCode );
};_bdf ,_dcd :=_daaf (_ceg );if _dcd !=nil {return _efd ,_dcd ;};_dcd =_ef .Unmarshal (_bdf ,&_efd );if _dcd !=nil {return _efd ,_dcd ;};return _efd ,nil ;};func _fa (_abb string ,_bef string ,_dgc string )(string ,error ){_fcca :=_e .Index (_dgc ,_abb );
if _fcca ==-1{return "",_gc .Errorf ("\u0068\u0065a\u0064\u0065\u0072 \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_cge :=_e .Index (_dgc ,_bef );if _cge ==-1{return "",_gc .Errorf ("\u0066\u006fo\u0074\u0065\u0072 \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
};_dgg :=_fcca +len (_abb )+1;return _dgc [_dgg :_cge -1],nil ;};func _dga (_beg string ,_daa []byte )(string ,error ){_gd ,_ :=_df .Decode ([]byte (_beg ));if _gd ==nil {return "",_gc .Errorf ("\u0050\u0072\u0069\u0076\u004b\u0065\u0079\u0020\u0066a\u0069\u006c\u0065\u0064");
};_de ,_ed :=_cfc .ParsePKCS1PrivateKey (_gd .Bytes );if _ed !=nil {return "",_ed ;};_geg :=_ag .New ();_geg .Write (_daa );_bg :=_geg .Sum (nil );_ab ,_ed :=_gbd .SignPKCS1v15 (_be .Reader ,_de ,_ca .SHA512 ,_bg );if _ed !=nil {return "",_ed ;};_beca :=_gf .StdEncoding .EncodeToString (_daa );
_beca +="\u000a\u002b\u000a";_beca +=_gf .StdEncoding .EncodeToString (_ab );return _beca ,nil ;};const _dbb ="\u000a\u002d\u002d\u002d\u002d\u002d\u0042\u0045\u0047\u0049\u004e \u0050\u0055\u0042\u004c\u0049\u0043\u0020\u004b\u0045Y\u002d\u002d\u002d\u002d\u002d\u000a\u004d\u0049I\u0042\u0049\u006a\u0041NB\u0067\u006b\u0071\u0068\u006b\u0069G\u0039\u0077\u0030\u0042\u0041\u0051\u0045\u0046A\u0041\u004f\u0043\u0041\u0051\u0038\u0041\u004d\u0049\u0049\u0042\u0043\u0067\u004b\u0043\u0041\u0051\u0045A\u006dF\u0055\u0069\u0079\u0064\u0037\u0062\u0035\u0058\u006a\u0070\u006b\u0050\u0035\u0052\u0061\u0070\u0034\u0077\u000a\u0044\u0063\u0031d\u0079\u007a\u0049\u0051\u0034\u004c\u0065\u006b\u0078\u0072\u0076\u0079\u0074\u006e\u0045\u004d\u0070\u004e\u0055\u0062\u006f\u0036i\u0041\u0037\u0034\u0056\u0038\u0072\u0075\u005a\u004f\u0076\u0072\u0053\u0063\u0073\u0066\u0032\u0051\u0065\u004e9\u002f\u0071r\u0055\u0047\u0038\u0071\u0045\u0062\u0055\u0057\u0064\u006f\u0045\u0059\u0071+\u000a\u006f\u0074\u0046\u004e\u0041\u0046N\u0078\u006c\u0047\u0062\u0078\u0062\u0044\u0048\u0063\u0064\u0047\u0056\u0061\u004d\u0030\u004f\u0058\u0064\u0058g\u0044y\u004c5\u0061\u0049\u0045\u0061\u0067\u004c\u0030\u0063\u0035\u0070\u0077\u006a\u0049\u0064\u0050G\u0049\u006e\u0034\u0036\u0066\u0037\u0038\u0065\u004d\u004a\u002b\u004a\u006b\u0064\u0063\u0070\u0044\n\u0044\u004a\u0061\u0071\u0059\u0058d\u0072\u007a5\u004b\u0065\u0073\u0068\u006aS\u0069\u0049\u0061\u0061\u0037\u006d\u0065\u006e\u0042\u0049\u0041\u0058\u0053\u0034\u0055\u0046\u0078N\u0066H\u0068\u004e\u0030\u0048\u0043\u0059\u005a\u0059\u0071\u0051\u0047\u0037\u0062K+\u0073\u0035\u0072R\u0048\u006f\u006e\u0079\u0064\u004eW\u0045\u0047\u000a\u0048\u0038M\u0079\u0076\u00722\u0070\u0079\u0061\u0032K\u0072\u004d\u0075m\u0066\u006d\u0041\u0078\u0055\u0042\u0036\u0066\u0065\u006e\u0043\u002f4\u004f\u0030\u0057\u00728\u0067\u0066\u0050\u004f\u0055\u0038R\u0069\u0074\u006d\u0062\u0044\u0076\u0051\u0050\u0049\u0052\u0058\u004fL\u0034\u0076\u0054B\u0072\u0042\u0064\u0062a\u0041\u000a9\u006e\u0077\u004e\u0050\u002b\u0069\u002f\u002f\u0032\u0030\u004d\u00542\u0062\u0078\u006d\u0065\u0057\u0042\u002b\u0067\u0070\u0063\u0045\u0068G\u0070\u0058\u005a7\u0033\u0033\u0061\u007a\u0051\u0078\u0072\u0043\u0033\u004a\u0034\u0076\u0033C\u005a\u006d\u0045\u004eS\u0074\u0044\u004b\u002f\u004b\u0044\u0053\u0050\u004b\u0055\u0047\u0066\u00756\u000a\u0066\u0077I\u0044\u0041\u0051\u0041\u0042\u000a\u002d\u002d\u002d\u002d\u002dE\u004e\u0044\u0020\u0050\u0055\u0042\u004c\u0049\u0043 \u004b\u0045Y\u002d\u002d\u002d\u002d\u002d\n";
func _fee ()*meteredClient {_aae :=meteredClient {_egb :"h\u0074\u0074\u0070\u0073\u003a\u002f/\u0063\u006c\u006f\u0075\u0064\u002e\u0075\u006e\u0069d\u006f\u0063\u002ei\u006f/\u0061\u0070\u0069",_bgg :&_af .Client {Timeout :30*_fb .Second }};if _cbe :=_gb .Getenv ("\u0055N\u0049\u0044\u004f\u0043_\u004c\u0049\u0043\u0045\u004eS\u0045_\u0053E\u0052\u0056\u0045\u0052\u005f\u0055\u0052L");
_e .HasPrefix (_cbe ,"\u0068\u0074\u0074\u0070"){_aae ._egb =_cbe ;};return &_aae ;};func (_dda *LicenseKey )isExpired ()bool {return _dda .getExpiryDateToCompare ().After (*_dda .ExpiresAt )};func MakeUnlicensedKey ()*LicenseKey {_ee :=LicenseKey {};_ee .CustomerName ="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";
_ee .Tier =LicenseTierUnlicensed ;_ee .CreatedAt =_fb .Now ().UTC ();_ee .CreatedAtInt =_ee .CreatedAt .Unix ();return &_ee ;};type stateLoader interface{loadState (_bga string )(reportState ,error );updateState (_abd ,_dfg ,_fca string ,_aef int ,_dgaa bool ,_fec int ,_ggc int ,_dfd _fb .Time ,_cgee map[string ]int )error ;
};type MeteredStatus struct{OK bool ;Credits int64 ;Used int64 ;};type meteredStatusResp struct{Valid bool `json:"valid"`;OrgCredits int64 `json:"org_credits"`;OrgUsed int64 `json:"org_used"`;OrgRemaining int64 `json:"org_remaining"`;};func (_ead *LicenseKey )getExpiryDateToCompare ()_fb .Time {if _ead .Trial {return _fb .Now ().UTC ();
};return _bec .ReleasedAt ;};type meteredStatusForm struct{};const _dbbf ="U\u004eI\u0050\u0044\u0046\u005f\u0043\u0055\u0053\u0054O\u004d\u0045\u0052\u005fNA\u004d\u0045";var _bcg =MakeUnlicensedKey ();const (LicenseTierUnlicensed ="\u0075\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";
LicenseTierCommunity ="\u0063o\u006d\u006d\u0075\u006e\u0069\u0074y";LicenseTierIndividual ="\u0069\u006e\u0064\u0069\u0076\u0069\u0064\u0075\u0061\u006c";LicenseTierBusiness ="\u0062\u0075\u0073\u0069\u006e\u0065\u0073\u0073";);type LicenseKey struct{LicenseId string `json:"license_id"`;
CustomerId string `json:"customer_id"`;CustomerName string `json:"customer_name"`;Tier string `json:"tier"`;CreatedAt _fb .Time `json:"-"`;CreatedAtInt int64 `json:"created_at"`;ExpiresAt *_fb .Time `json:"-"`;ExpiresAtInt int64 `json:"expires_at"`;CreatedBy string `json:"created_by"`;
CreatorName string `json:"creator_name"`;CreatorEmail string `json:"creator_email"`;UniPDF bool `json:"unipdf"`;UniOffice bool `json:"unioffice"`;UniHTML bool `json:"unihtml"`;Trial bool `json:"trial"`;_ce bool ;_dd string ;};func _cg (_aa string ,_fbd string )([]byte ,error ){var (_fe int ;
_gfd string ;);for _ ,_gfd =range []string {"\u000a\u002b\u000a","\u000d\u000a\u002b\r\u000a","\u0020\u002b\u0020"}{if _fe =_e .Index (_fbd ,_gfd );_fe !=-1{break ;};};if _fe ==-1{return nil ,_gc .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u002c \u0073i\u0067n\u0061t\u0075\u0072\u0065\u0020\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u006f\u0072");
};_cb :=_fbd [:_fe ];_bc :=_fe +len (_gfd );_ga :=_fbd [_bc :];if _cb ==""||_ga ==""{return nil ,_gc .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u0069n\u0070\u0075\u0074,\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0069\u0067\u0069n\u0061\u006c \u006f\u0072\u0020\u0073\u0069\u0067n\u0061\u0074u\u0072\u0065");
};_deg ,_bcd :=_gf .StdEncoding .DecodeString (_cb );if _bcd !=nil {return nil ,_gc .Errorf ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u006f\u0072\u0069\u0067\u0069\u006ea\u006c");};_daf ,_bcd :=_gf .StdEncoding .DecodeString (_ga );
if _bcd !=nil {return nil ,_gc .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065");};_aaa ,_ :=_df .Decode ([]byte (_aa ));if _aaa ==nil {return nil ,_gc .Errorf ("\u0050\u0075\u0062\u004b\u0065\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};_fc ,_bcd :=_cfc .ParsePKIXPublicKey (_aaa .Bytes );if _bcd !=nil {return nil ,_bcd ;};_bd :=_fc .(*_gbd .PublicKey );if _bd ==nil {return nil ,_gc .Errorf ("\u0050u\u0062\u004b\u0065\u0079\u0020\u0063\u006f\u006e\u0076\u0065\u0072s\u0069\u006f\u006e\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};_gfe :=_ag .New ();_gfe .Write (_deg );_fcc :=_gfe .Sum (nil );_bcd =_gbd .VerifyPKCS1v15 (_bd ,_ca .SHA512 ,_fcc ,_daf );if _bcd !=nil {return nil ,_bcd ;};return _deg ,nil ;};func _dbc (_cgac []byte )(_g .Reader ,error ){_gaf :=new (_cd .Buffer );_ebe :=_f .NewWriter (_gaf );
_ebe .Write (_cgac );_efbd :=_ebe .Close ();if _efbd !=nil {return nil ,_efbd ;};return _gaf ,nil ;};func SetLicenseKey (content string ,customerName string )error {_bcdg ,_ac :=_ff (content );if _ac !=nil {_bec .Log .Error ("\u004c\u0069c\u0065\u006e\u0073\u0065\u0020\u0063\u006f\u0064\u0065\u0020\u0064\u0065\u0063\u006f\u0064\u0065\u0020\u0065\u0072\u0072\u006f\u0072: \u0025\u0076",_ac );
return _ac ;};if !_e .EqualFold (_bcdg .CustomerName ,customerName ){_bec .Log .Error ("L\u0069ce\u006es\u0065 \u0063\u006f\u0064\u0065\u0020i\u0073\u0073\u0075e\u0020\u002d\u0020\u0043\u0075s\u0074\u006f\u006de\u0072\u0020\u006e\u0061\u006d\u0065\u0020\u006d\u0069\u0073\u006da\u0074\u0063\u0068, e\u0078\u0070\u0065\u0063\u0074\u0065d\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u0062\u0075\u0074\u0020\u0067o\u0074 \u0027\u0025\u0073\u0027",customerName ,_bcdg .CustomerName );
return _gc .Errorf ("\u0063\u0075\u0073\u0074\u006fm\u0065\u0072\u0020\u006e\u0061\u006d\u0065\u0020\u006d\u0069\u0073\u006d\u0061t\u0063\u0068\u002c\u0020\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u0062\u0075\u0074\u0020\u0067\u006f\u0074\u0020\u0027\u0025\u0073'",customerName ,_bcdg .CustomerName );
};_ac =_bcdg .Validate ();if _ac !=nil {_bec .Log .Error ("\u004c\u0069\u0063\u0065\u006e\u0073e\u0020\u0063\u006f\u0064\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074i\u006f\u006e\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_ac );return _ac ;
};_bcg =&_bcdg ;return nil ;};func _eged (_dbd *_af .Response )(_g .ReadCloser ,error ){var _aegg error ;var _gade _g .ReadCloser ;switch _e .ToLower (_dbd .Header .Get ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067")){case "\u0067\u007a\u0069\u0070":_gade ,_aegg =_f .NewReader (_dbd .Body );
if _aegg !=nil {return _gade ,_aegg ;};defer _gade .Close ();default:_gade =_dbd .Body ;};return _gade ,nil ;};func GetLicenseKey ()*LicenseKey {if _bcg ==nil {return nil ;};_cbf :=*_bcg ;return &_cbf ;};func (_agg *LicenseKey )IsLicensed ()bool {return _agg .Tier !=LicenseTierUnlicensed ||_agg ._ce };
var _ffb map[string ]int ;var _ea =_fb .Date (2020,1,1,0,0,0,0,_fb .UTC );func (_dc *LicenseKey )TypeToString ()string {if _dc ._ce {return "M\u0065t\u0065\u0072\u0065\u0064\u0020\u0073\u0075\u0062s\u0063\u0072\u0069\u0070ti\u006f\u006e";};if _dc .Tier ==LicenseTierUnlicensed {return "\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";
};if _dc .Tier ==LicenseTierCommunity {return "\u0041\u0047PL\u0076\u0033\u0020O\u0070\u0065\u006e\u0020Sou\u0072ce\u0020\u0043\u006f\u006d\u006d\u0075\u006eit\u0079\u0020\u004c\u0069\u0063\u0065\u006es\u0065";};if _dc .Tier ==LicenseTierIndividual ||_dc .Tier =="\u0069\u006e\u0064i\u0065"{return "\u0043\u006f\u006dm\u0065\u0072\u0063\u0069a\u006c\u0020\u004c\u0069\u0063\u0065\u006es\u0065\u0020\u002d\u0020\u0049\u006e\u0064\u0069\u0076\u0069\u0064\u0075\u0061\u006c";
};return "\u0043\u006fm\u006d\u0065\u0072\u0063\u0069\u0061\u006c\u0020\u004c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u002d\u0020\u0042\u0075\u0073\u0069ne\u0073\u0073";};func Track (docKey string ,useKey string )error {return _aeg (docKey ,useKey ,false )};
type meteredUsageCheckinResp struct{Instance string `json:"inst"`;Next string `json:"next"`;Success bool `json:"success"`;Message string `json:"message"`;RemainingDocs int `json:"rd"`;LimitDocs bool `json:"ld"`;};type meteredUsageCheckinForm struct{Instance string `json:"inst"`;
Next string `json:"next"`;UsageNumber int `json:"usage_number"`;NumFailed int64 `json:"num_failed"`;Hostname string `json:"hostname"`;LocalIP string `json:"local_ip"`;MacAddress string `json:"mac_address"`;Package string `json:"package"`;PackageVersion string `json:"package_version"`;
Usage map[string ]int `json:"u"`;};func init (){_faa :=_gb .Getenv (_dab );_faac :=_gb .Getenv (_dbbf );if len (_faa )==0||len (_faac )==0{return ;};_eca ,_gda :=_ge .ReadFile (_faa );if _gda !=nil {_bec .Log .Error ("\u0055\u006eab\u006c\u0065\u0020t\u006f\u0020\u0072\u0065ad \u006cic\u0065\u006e\u0073\u0065\u0020\u0063\u006fde\u0020\u0066\u0069\u006c\u0065\u003a\u0020%\u0076",_gda );
return ;};_gda =SetLicenseKey (string (_eca ),_faac );if _gda !=nil {_bec .Log .Error ("\u0055\u006e\u0061b\u006c\u0065\u0020\u0074o\u0020\u006c\u006f\u0061\u0064\u0020\u006ci\u0063\u0065\u006e\u0073\u0065\u0020\u0063\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_gda );
return ;};};func _gae (_fdb ,_dde []byte )([]byte ,error ){_fbea :=make ([]byte ,_gf .URLEncoding .DecodedLen (len (_dde )));_cgff ,_gag :=_gf .URLEncoding .Decode (_fbea ,_dde );if _gag !=nil {return nil ,_gag ;};_fbea =_fbea [:_cgff ];_aefe ,_gag :=_bf .NewCipher (_fdb );
if _gag !=nil {return nil ,_gag ;};if len (_fbea )< _bf .BlockSize {return nil ,_gbf .New ("c\u0069p\u0068\u0065\u0072\u0074\u0065\u0078\u0074\u0020t\u006f\u006f\u0020\u0073ho\u0072\u0074");};_gdee :=_fbea [:_bf .BlockSize ];_fbea =_fbea [_bf .BlockSize :];
_fgg :=_cf .NewCFBDecrypter (_aefe ,_gdee );_fgg .XORKeyStream (_fbea ,_fbea );return _fbea ,nil ;};func _bfa ()string {_dge :=_gb .Getenv ("\u0048\u004f\u004d\u0045");if len (_dge )==0{_dge ,_ =_gb .UserHomeDir ();};return _dge ;};var _db =_fb .Date (2010,1,1,0,0,0,0,_fb .UTC );
func (_dff defaultStateHolder )updateState (_befg ,_fbb ,_ad string ,_fedb int ,_gbc bool ,_bgf int ,_dcf int ,_gac _fb .Time ,_cag map[string ]int )error {_bggf :=_bfa ();if len (_bggf )==0{return _gbf .New ("\u0068\u006fm\u0065\u0020\u0064i\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");
};_abf :=_dg .Join (_bggf ,"\u002eu\u006e\u0069\u0064\u006f\u0063");_dad :=_gb .MkdirAll (_abf ,0777);if _dad !=nil {return _dad ;};if len (_befg )< 20{return _gbf .New ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006b\u0065\u0079");};_bbb :=[]byte (_befg );
_cdf :=_ag .Sum512_256 (_bbb [:20]);_gdege :=_da .EncodeToString (_cdf [:]);_eggc :=_dg .Join (_abf ,_gdege );var _ggcg reportState ;_ggcg .Docs =int64 (_fedb );_ggcg .NumErrors =int64 (_dcf );_ggcg .LimitDocs =_gbc ;_ggcg .RemainingDocs =int64 (_bgf );
_ggcg .LastWritten =_fb .Now ().UTC ();_ggcg .LastReported =_gac ;_ggcg .Instance =_fbb ;_ggcg .Next =_ad ;_ggcg .Usage =_cag ;_cbd ,_dad :=_ef .Marshal (_ggcg );if _dad !=nil {return _dad ;};const _cfg ="\u0068\u00619\u004e\u004b\u0038]\u0052\u0062\u004c\u002a\u006d\u0034\u004c\u004b\u0057";
_cbd ,_dad =_acf ([]byte (_cfg ),_cbd );if _dad !=nil {return _dad ;};_dad =_ge .WriteFile (_eggc ,_cbd ,0600);if _dad !=nil {return _dad ;};return nil ;};func (_eg *LicenseKey )ToString ()string {if _eg ._ce {return "M\u0065t\u0065\u0072\u0065\u0064\u0020\u0073\u0075\u0062s\u0063\u0072\u0069\u0070ti\u006f\u006e";
};_egg :=_gc .Sprintf ("\u004ci\u0063e\u006e\u0073\u0065\u0020\u0049\u0064\u003a\u0020\u0025\u0073\u000a",_eg .LicenseId );_egg +=_gc .Sprintf ("\u0043\u0075s\u0074\u006f\u006de\u0072\u0020\u0049\u0064\u003a\u0020\u0025\u0073\u000a",_eg .CustomerId );_egg +=_gc .Sprintf ("\u0043u\u0073t\u006f\u006d\u0065\u0072\u0020N\u0061\u006de\u003a\u0020\u0025\u0073\u000a",_eg .CustomerName );
_egg +=_gc .Sprintf ("\u0054i\u0065\u0072\u003a\u0020\u0025\u0073\n",_eg .Tier );_egg +=_gc .Sprintf ("\u0043r\u0065a\u0074\u0065\u0064\u0020\u0041\u0074\u003a\u0020\u0025\u0073\u000a",_bec .UtcTimeFormat (_eg .CreatedAt ));if _eg .ExpiresAt ==nil {_egg +="\u0045x\u0070i\u0072\u0065\u0073\u0020\u0041t\u003a\u0020N\u0065\u0076\u0065\u0072\u000a";
}else {_egg +=_gc .Sprintf ("\u0045x\u0070i\u0072\u0065\u0073\u0020\u0041\u0074\u003a\u0020\u0025\u0073\u000a",_bec .UtcTimeFormat (*_eg .ExpiresAt ));};_egg +=_gc .Sprintf ("\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u003a\u0020\u0025\u0073\u0020<\u0025\u0073\u003e\u000a",_eg .CreatorName ,_eg .CreatorEmail );
return _egg ;};func _daaf (_gbe *_af .Response )([]byte ,error ){var _eagd []byte ;_aaeg ,_bbe :=_eged (_gbe );if _bbe !=nil {return _eagd ,_bbe ;};return _ge .ReadAll (_aaeg );};var _efg map[string ]struct{};