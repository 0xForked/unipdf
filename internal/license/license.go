//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package license ;import (_b "bytes";_g "compress/gzip";_c "crypto";_bf "crypto/aes";_bg "crypto/cipher";_fc "crypto/rand";_ge "crypto/rsa";_ag "crypto/sha512";_fa "crypto/x509";_gc "encoding/base64";_ba "encoding/hex";_cf "encoding/json";_ee "encoding/pem";
_df "errors";_da "fmt";_cg "github.com/unidoc/unipdf/v3/common";_ce "io";_db "io/ioutil";_fe "net";_f "net/http";_ad "os";_eb "path/filepath";_a "sort";_cb "strings";_e "sync";_bb "time";);func SetMeteredKey (apiKey string )error {if _dc !=nil &&(_dc ._eaf ||_dc .Tier !=LicenseTierUnlicensed ){_cg .Log .Error ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0043\u0061\u006e\u006eo\u0074 \u0073\u0065\u0074\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u006b\u0065\u0079\u0020\u0074\u0077\u0069c\u0065\u0020\u002d\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u006a\u0075\u0073\u0074\u0020\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0069z\u0065\u0020\u006f\u006e\u0063\u0065");
return _df .New ("\u006c\u0069\u0063en\u0073\u0065\u0020\u006b\u0065\u0079\u0020\u0061\u006c\u0072\u0065\u0061\u0064\u0079\u0020\u0073\u0065\u0074");};_acfb :=_afd ();_acfb ._ga =apiKey ;_gbdd ,_add :=_acfb .getStatus ();if _add !=nil {return _add ;};if !_gbdd .Valid {return _df .New ("\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0076\u0061\u006c\u0069\u0064");
};_ecf :=&LicenseKey {_eaf :true ,_fae :apiKey };_dc =_ecf ;return nil ;};func _geb ()([]string ,[]string ,error ){_aead ,_eef :=_fe .Interfaces ();if _eef !=nil {return nil ,nil ,_eef ;};var _gag []string ;var _eac []string ;for _ ,_bab :=range _aead {if _bab .Flags &_fe .FlagUp ==0||_b .Equal (_bab .HardwareAddr ,nil ){continue ;
};_ged ,_cca :=_bab .Addrs ();if _cca !=nil {return nil ,nil ,_cca ;};_abc :=0;for _ ,_bfgb :=range _ged {var _cega _fe .IP ;switch _gbc :=_bfgb .(type ){case *_fe .IPNet :_cega =_gbc .IP ;case *_fe .IPAddr :_cega =_gbc .IP ;};if _cega .IsLoopback (){continue ;
};if _cega .To4 ()==nil {continue ;};_eac =append (_eac ,_cega .String ());_abc ++;};_egf :=_bab .HardwareAddr .String ();if _egf !=""&&_abc > 0{_gag =append (_gag ,_egf );};};return _gag ,_eac ,nil ;};type meteredClient struct{_cgg string ;_ga string ;
_dee *_f .Client ;};type meteredUsageCheckinResp struct{Instance string `json:"inst"`;Next string `json:"next"`;Success bool `json:"success"`;Message string `json:"message"`;RemainingDocs int `json:"rd"`;LimitDocs bool `json:"ld"`;};func _ece (_eab string ,_bfa string ,_fffe bool )error {if _dc ==nil {return _df .New ("\u006e\u006f\u0020\u006c\u0069\u0063\u0065\u006e\u0073e\u0020\u006b\u0065\u0079");
};if !_dc ._eaf ||len (_dc ._fae )==0{return nil ;};if len (_eab )==0&&!_fffe {return _df .New ("\u0064\u006f\u0063\u004b\u0065\u0079\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");};_cff .Lock ();defer _cff .Unlock ();if _aedf ==nil {_aedf =map[string ]struct{}{};
};if _cdc ==nil {_cdc =map[string ]int {};};_adbd :=0;if !_fffe {_ ,_cfa :=_aedf [_eab ];if !_cfa {_aedf [_eab ]=struct{}{};_adbd ++;};if _adbd ==0{return nil ;};_cdc [_bfa ]++;};_caa :=_bb .Now ();_efg ,_agbb :=_ebec .loadState (_dc ._fae );if _agbb !=nil {_cg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_agbb );
return _agbb ;};if _efg .Usage ==nil {_efg .Usage =map[string ]int {};};for _ggbf ,_bd :=range _cdc {_efg .Usage [_ggbf ]+=_bd ;};_cdc =nil ;const _eca =24*_bb .Hour ;const _cab =3*24*_bb .Hour ;if len (_efg .Instance )==0||_caa .Sub (_efg .LastReported )> _eca ||(_efg .LimitDocs &&_efg .RemainingDocs <=_efg .Docs +int64 (_adbd ))||_fffe {_fdb ,_ggg :=_ad .Hostname ();
if _ggg !=nil {return _ggg ;};_aae :=_efg .Docs ;_eea ,_dfd ,_ggg :=_geb ();if _ggg !=nil {return _ggg ;};_a .Strings (_dfd );_a .Strings (_eea );_fdf ,_ggg :=_fbb ();if _ggg !=nil {return _ggg ;};_beg :=false ;for _ ,_faf :=range _dfd {if _faf ==_fdf .String (){_beg =true ;
};};if !_beg {_dfd =append (_dfd ,_fdf .String ());};_afdb :=_afd ();_afdb ._ga =_dc ._fae ;_aae +=int64 (_adbd );_dga :=meteredUsageCheckinForm {Instance :_efg .Instance ,Next :_efg .Next ,UsageNumber :int (_aae ),NumFailed :_efg .NumErrors ,Hostname :_fdb ,LocalIP :_cb .Join (_dfd ,"\u002c\u0020"),MacAddress :_cb .Join (_eea ,"\u002c\u0020"),Package :"\u0075\u006e\u0069\u0070\u0064\u0066",PackageVersion :_cg .Version ,Usage :_efg .Usage };
if len (_eea )==0{_dga .MacAddress ="\u006e\u006f\u006e\u0065";};_acfg :=int64 (0);_bgfc :=_efg .NumErrors ;_bce :=_caa ;_gggf :=0;_dbc :=_efg .LimitDocs ;_aeab ,_ggg :=_afdb .checkinUsage (_dga );if _ggg !=nil {if _caa .Sub (_efg .LastReported )> _cab {return _df .New ("\u0074\u006f\u006f\u0020\u006c\u006f\u006e\u0067\u0020\u0073\u0069\u006e\u0063\u0065\u0020\u006c\u0061\u0073\u0074\u0020\u0073\u0075\u0063\u0063e\u0073\u0073\u0066\u0075\u006c \u0063\u0068e\u0063\u006b\u0069\u006e");
};_acfg =_aae ;_bgfc ++;_bce =_efg .LastReported ;}else {_dbc =_aeab .LimitDocs ;_gggf =_aeab .RemainingDocs ;_bgfc =0;};if len (_aeab .Instance )==0{_aeab .Instance =_dga .Instance ;};if len (_aeab .Next )==0{_aeab .Next =_dga .Next ;};_ggg =_ebec .updateState (_afdb ._ga ,_aeab .Instance ,_aeab .Next ,int (_acfg ),_dbc ,_gggf ,int (_bgfc ),_bce ,nil );
if _ggg !=nil {return _ggg ;};if !_aeab .Success {return _da .Errorf ("\u0065r\u0072\u006f\u0072\u003a\u0020\u0025s",_aeab .Message );};}else {_agbb =_ebec .updateState (_dc ._fae ,_efg .Instance ,_efg .Next ,int (_efg .Docs )+_adbd ,_efg .LimitDocs ,int (_efg .RemainingDocs ),int (_efg .NumErrors ),_efg .LastReported ,_efg .Usage );
if _agbb !=nil {return _agbb ;};};return nil ;};var _be =_bb .Date (2020,1,1,0,0,0,0,_bb .UTC );func _ef (_gbd string ,_gf string ,_gg string )(string ,error ){_ac :=_cb .Index (_gg ,_gbd );if _ac ==-1{return "",_da .Errorf ("\u0068\u0065a\u0064\u0065\u0072 \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
};_ceg :=_cb .Index (_gg ,_gf );if _ceg ==-1{return "",_da .Errorf ("\u0066\u006fo\u0074\u0065\u0072 \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_acf :=_ac +len (_gbd )+1;return _gg [_acf :_ceg -1],nil ;};type meteredUsageCheckinForm struct{Instance string `json:"inst"`;
Next string `json:"next"`;UsageNumber int `json:"usage_number"`;NumFailed int64 `json:"num_failed"`;Hostname string `json:"hostname"`;LocalIP string `json:"local_ip"`;MacAddress string `json:"mac_address"`;Package string `json:"package"`;PackageVersion string `json:"package_version"`;
Usage map[string ]int `json:"u"`;};func GetLicenseKey ()*LicenseKey {if _dc ==nil {return nil ;};_gbb :=*_dc ;return &_gbb ;};func (_agg *LicenseKey )IsLicensed ()bool {return _agg .Tier !=LicenseTierUnlicensed ||_agg ._eaf };type LicenseKey struct{LicenseId string `json:"license_id"`;
CustomerId string `json:"customer_id"`;CustomerName string `json:"customer_name"`;Tier string `json:"tier"`;CreatedAt _bb .Time `json:"-"`;CreatedAtInt int64 `json:"created_at"`;ExpiresAt *_bb .Time `json:"-"`;ExpiresAtInt int64 `json:"expires_at"`;CreatedBy string `json:"created_by"`;
CreatorName string `json:"creator_name"`;CreatorEmail string `json:"creator_email"`;UniPDF bool `json:"unipdf"`;UniOffice bool `json:"unioffice"`;UniHTML bool `json:"unihtml"`;Trial bool `json:"trial"`;_eaf bool ;_fae string ;};func (_de *LicenseKey )ToString ()string {if _de ._eaf {return "M\u0065t\u0065\u0072\u0065\u0064\u0020\u0073\u0075\u0062s\u0063\u0072\u0069\u0070ti\u006f\u006e";
};_ed :=_da .Sprintf ("\u004ci\u0063e\u006e\u0073\u0065\u0020\u0049\u0064\u003a\u0020\u0025\u0073\u000a",_de .LicenseId );_ed +=_da .Sprintf ("\u0043\u0075s\u0074\u006f\u006de\u0072\u0020\u0049\u0064\u003a\u0020\u0025\u0073\u000a",_de .CustomerId );_ed +=_da .Sprintf ("\u0043u\u0073t\u006f\u006d\u0065\u0072\u0020N\u0061\u006de\u003a\u0020\u0025\u0073\u000a",_de .CustomerName );
_ed +=_da .Sprintf ("\u0054i\u0065\u0072\u003a\u0020\u0025\u0073\n",_de .Tier );_ed +=_da .Sprintf ("\u0043r\u0065a\u0074\u0065\u0064\u0020\u0041\u0074\u003a\u0020\u0025\u0073\u000a",_cg .UtcTimeFormat (_de .CreatedAt ));if _de .ExpiresAt ==nil {_ed +="\u0045x\u0070i\u0072\u0065\u0073\u0020\u0041t\u003a\u0020N\u0065\u0076\u0065\u0072\u000a";
}else {_ed +=_da .Sprintf ("\u0045x\u0070i\u0072\u0065\u0073\u0020\u0041\u0074\u003a\u0020\u0025\u0073\u000a",_cg .UtcTimeFormat (*_de .ExpiresAt ));};_ed +=_da .Sprintf ("\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u003a\u0020\u0025\u0073\u0020<\u0025\u0073\u003e\u000a",_de .CreatorName ,_de .CreatorEmail );
return _ed ;};func (_eff *LicenseKey )Validate ()error {if _eff ._eaf {return nil ;};if len (_eff .LicenseId )< 10{return _da .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020L\u0069\u0063\u0065n\u0073e\u0020\u0049\u0064");
};if len (_eff .CustomerId )< 10{return _da .Errorf ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065:\u0020C\u0075\u0073\u0074\u006f\u006d\u0065\u0072 \u0049\u0064");};if len (_eff .CustomerName )< 1{return _da .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069c\u0065\u006e\u0073\u0065\u003a\u0020\u0043u\u0073\u0074\u006f\u006d\u0065\u0072\u0020\u004e\u0061\u006d\u0065");
};if _dfe .After (_eff .CreatedAt ){return _da .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u0065\u0064 \u0041\u0074\u0020\u0069\u0073 \u0069\u006ev\u0061\u006c\u0069\u0064");
};if _eff .ExpiresAt ==nil {_bc :=_eff .CreatedAt .AddDate (1,0,0);if _be .After (_bc ){_bc =_be ;};_eff .ExpiresAt =&_bc ;};if _eff .CreatedAt .After (*_eff .ExpiresAt ){return _da .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u0065\u0064\u0020\u0041\u0074 \u0063a\u006e\u006e\u006f\u0074 \u0062\u0065 \u0047\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0045\u0078\u0070\u0069\u0072\u0065\u0073\u0020\u0041\u0074");
};if _eff .isExpired (){return _da .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020l\u0069\u0063\u0065ns\u0065\u003a\u0020\u0054\u0068\u0065 \u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u0068\u0061\u0073\u0020\u0061\u006c\u0072e\u0061\u0064\u0079\u0020\u0065\u0078\u0070\u0069r\u0065\u0064");
};if len (_eff .CreatorName )< 1{return _da .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u0020na\u006d\u0065");};if len (_eff .CreatorEmail )< 1{return _da .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069c\u0065\u006e\u0073\u0065\u003a\u0020\u0043r\u0065\u0061\u0074\u006f\u0072\u0020\u0065\u006d\u0061\u0069\u006c");
};if _eff .CreatedAt .After (_bgd ){if !_eff .UniPDF {return _da .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065:\u0020\u0054\u0068\u0069\u0073\u0020\u0055\u006e\u0069\u0044\u006f\u0063\u0020k\u0065\u0079\u0020\u0069\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069d \u0066\u006f\u0072\u0020\u0055\u006e\u0069\u0050\u0044\u0046");
};};return nil ;};type stateLoader interface{loadState (_dbg string )(reportState ,error );updateState (_cag ,_ceca ,_cbd string ,_bef int ,_ggd bool ,_gee int ,_ddg int ,_gdg _bb .Time ,_dbd map[string ]int )error ;};func GetMeteredState ()(MeteredStatus ,error ){if _dc ==nil {return MeteredStatus {},_df .New ("\u006c\u0069\u0063\u0065ns\u0065\u0020\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");
};if !_dc ._eaf ||len (_dc ._fae )==0{return MeteredStatus {},_df .New ("\u0061p\u0069 \u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");};_cbb ,_egb :=_ebec .loadState (_dc ._fae );if _egb !=nil {_cg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_egb );
return MeteredStatus {},_egb ;};if _cbb .Docs > 0{_cfe :=_ece ("","",true );if _cfe !=nil {return MeteredStatus {},_cfe ;};};_cff .Lock ();defer _cff .Unlock ();_bfc :=_afd ();_bfc ._ga =_dc ._fae ;_agb ,_egb :=_bfc .getStatus ();if _egb !=nil {return MeteredStatus {},_egb ;
};if !_agb .Valid {return MeteredStatus {},_df .New ("\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0076\u0061\u006c\u0069\u0064");};_edf :=MeteredStatus {OK :true ,Credits :_agb .OrgCredits ,Used :_agb .OrgUsed };return _edf ,nil ;};func _edg (_dfg ,_bcec []byte )([]byte ,error ){_fef ,_aefg :=_bf .NewCipher (_dfg );
if _aefg !=nil {return nil ,_aefg ;};_bae :=make ([]byte ,_bf .BlockSize +len (_bcec ));_bbc :=_bae [:_bf .BlockSize ];if _ ,_bfgbe :=_ce .ReadFull (_fc .Reader ,_bbc );_bfgbe !=nil {return nil ,_bfgbe ;};_aedb :=_bg .NewCFBEncrypter (_fef ,_bbc );_aedb .XORKeyStream (_bae [_bf .BlockSize :],_bcec );
_bada :=make ([]byte ,_gc .URLEncoding .EncodedLen (len (_bae )));_gc .URLEncoding .Encode (_bada ,_bae );return _bada ,nil ;};type reportState struct{Instance string `json:"inst"`;Next string `json:"n"`;Docs int64 `json:"d"`;NumErrors int64 `json:"e"`;
LimitDocs bool `json:"ld"`;RemainingDocs int64 `json:"rd"`;LastReported _bb .Time `json:"lr"`;LastWritten _bb .Time `json:"lw"`;Usage map[string ]int `json:"u"`;};func (_fff *LicenseKey )getExpiryDateToCompare ()_bb .Time {if _fff .Trial {return _bb .Now ().UTC ();
};return _cg .ReleasedAt ;};func (_cgd defaultStateHolder )updateState (_cdd ,_afg ,_dac string ,_dde int ,_ecge bool ,_cbf int ,_eed int ,_ddee _bb .Time ,_fea map[string ]int )error {_gba :=_geec ();if len (_gba )==0{return _df .New ("\u0068\u006fm\u0065\u0020\u0064i\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");
};_dfed :=_eb .Join (_gba ,"\u002eu\u006e\u0069\u0064\u006f\u0063");_fce :=_ad .MkdirAll (_dfed ,0777);if _fce !=nil {return _fce ;};if len (_cdd )< 20{return _df .New ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006b\u0065\u0079");};_cee :=[]byte (_cdd );
_gge :=_ag .Sum512_256 (_cee [:20]);_abf :=_ba .EncodeToString (_gge [:]);_aag :=_eb .Join (_dfed ,_abf );var _fedc reportState ;_fedc .Docs =int64 (_dde );_fedc .NumErrors =int64 (_eed );_fedc .LimitDocs =_ecge ;_fedc .RemainingDocs =int64 (_cbf );_fedc .LastWritten =_bb .Now ().UTC ();
_fedc .LastReported =_ddee ;_fedc .Instance =_afg ;_fedc .Next =_dac ;_fedc .Usage =_fea ;_gff ,_fce :=_cf .Marshal (_fedc );if _fce !=nil {return _fce ;};const _aea ="\u0068\u00619\u004e\u004b\u0038]\u0052\u0062\u004c\u002a\u006d\u0034\u004c\u004b\u0057";
_gff ,_fce =_edg ([]byte (_aea ),_gff );if _fce !=nil {return _fce ;};_fce =_db .WriteFile (_aag ,_gff ,0600);if _fce !=nil {return _fce ;};return nil ;};func _afd ()*meteredClient {_cda :=meteredClient {_cgg :"h\u0074\u0074\u0070\u0073\u003a\u002f/\u0063\u006c\u006f\u0075\u0064\u002e\u0075\u006e\u0069d\u006f\u0063\u002ei\u006f/\u0061\u0070\u0069",_dee :&_f .Client {Timeout :30*_bb .Second }};
if _ade :=_ad .Getenv ("\u0055N\u0049\u0044\u004f\u0043_\u004c\u0049\u0043\u0045\u004eS\u0045_\u0053E\u0052\u0056\u0045\u0052\u005f\u0055\u0052L");_cb .HasPrefix (_ade ,"\u0068\u0074\u0074\u0070"){_cda ._cgg =_ade ;};return &_cda ;};func _cac (_ec string )(LicenseKey ,error ){var _aga LicenseKey ;
_gef ,_ea :=_ef (_adb ,_eeb ,_ec );if _ea !=nil {return _aga ,_ea ;};_eae ,_ea :=_eg (_ffe ,_gef );if _ea !=nil {return _aga ,_ea ;};_ea =_cf .Unmarshal (_eae ,&_aga );if _ea !=nil {return _aga ,_ea ;};_aga .CreatedAt =_bb .Unix (_aga .CreatedAtInt ,0);
if _aga .ExpiresAtInt > 0{_bgf :=_bb .Unix (_aga .ExpiresAtInt ,0);_aga .ExpiresAt =&_bgf ;};return _aga ,nil ;};func _ebecb (_dbcdf *_f .Response )([]byte ,error ){var _ebed []byte ;_eace ,_ddeg :=_dbgd (_dbcdf );if _ddeg !=nil {return _ebed ,_ddeg ;};
return _db .ReadAll (_eace );};const _eda ="\u0055\u004e\u0049\u0050DF\u005f\u004c\u0049\u0043\u0045\u004e\u0053\u0045\u005f\u0050\u0041\u0054\u0048";const _aeb ="U\u004eI\u0050\u0044\u0046\u005f\u0043\u0055\u0053\u0054O\u004d\u0045\u0052\u005fNA\u004d\u0045";
type meteredStatusResp struct{Valid bool `json:"valid"`;OrgCredits int64 `json:"org_credits"`;OrgUsed int64 `json:"org_used"`;OrgRemaining int64 `json:"org_remaining"`;};var _cdc map[string ]int ;type MeteredStatus struct{OK bool ;Credits int64 ;Used int64 ;
};type defaultStateHolder struct{};func _fbb ()(_fe .IP ,error ){_ccc ,_ddge :=_fe .Dial ("\u0075\u0064\u0070","\u0038\u002e\u0038\u002e\u0038\u002e\u0038\u003a\u0038\u0030");if _ddge !=nil {return nil ,_ddge ;};defer _ccc .Close ();_fbf :=_ccc .LocalAddr ().(*_fe .UDPAddr );
return _fbf .IP ,nil ;};type meteredStatusForm struct{};func _geec ()string {_dfcaf :=_ad .Getenv ("\u0048\u004f\u004d\u0045");if len (_dfcaf )==0{_dfcaf ,_ =_ad .UserHomeDir ();};return _dfcaf ;};const (LicenseTierUnlicensed ="\u0075\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";
LicenseTierCommunity ="\u0063o\u006d\u006d\u0075\u006e\u0069\u0074y";LicenseTierIndividual ="\u0069\u006e\u0064\u0069\u0076\u0069\u0064\u0075\u0061\u006c";LicenseTierBusiness ="\u0062\u0075\u0073\u0069\u006e\u0065\u0073\u0073";);var _cff =&_e .Mutex {};
var _dc =MakeUnlicensedKey ();const (_adb ="\u002d\u002d\u002d--\u0042\u0045\u0047\u0049\u004e\u0020\u0055\u004e\u0049D\u004fC\u0020L\u0049C\u0045\u004e\u0053\u0045\u0020\u004b\u0045\u0059\u002d\u002d\u002d\u002d\u002d";_eeb ="\u002d\u002d\u002d\u002d\u002d\u0045\u004e\u0044\u0020\u0055\u004e\u0049\u0044\u004f\u0043 \u004cI\u0043\u0045\u004e\u0053\u0045\u0020\u004b\u0045\u0059\u002d\u002d\u002d\u002d\u002d";
);func _gab (_ebff ,_bbb []byte )([]byte ,error ){_dda :=make ([]byte ,_gc .URLEncoding .DecodedLen (len (_bbb )));_afdd ,_aebc :=_gc .URLEncoding .Decode (_dda ,_bbb );if _aebc !=nil {return nil ,_aebc ;};_dda =_dda [:_afdd ];_aggg ,_aebc :=_bf .NewCipher (_ebff );
if _aebc !=nil {return nil ,_aebc ;};if len (_dda )< _bf .BlockSize {return nil ,_df .New ("c\u0069p\u0068\u0065\u0072\u0074\u0065\u0078\u0074\u0020t\u006f\u006f\u0020\u0073ho\u0072\u0074");};_fbc :=_dda [:_bf .BlockSize ];_dda =_dda [_bf .BlockSize :];
_ccgc :=_bg .NewCFBDecrypter (_aggg ,_fbc );_ccgc .XORKeyStream (_dda ,_dda );return _dda ,nil ;};func MakeUnlicensedKey ()*LicenseKey {_ebe :=LicenseKey {};_ebe .CustomerName ="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";_ebe .Tier =LicenseTierUnlicensed ;
_ebe .CreatedAt =_bb .Now ().UTC ();_ebe .CreatedAtInt =_ebe .CreatedAt .Unix ();return &_ebe ;};func _dbgd (_bgg *_f .Response )(_ce .ReadCloser ,error ){var _gffg error ;var _ggf _ce .ReadCloser ;switch _cb .ToLower (_bgg .Header .Get ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067")){case "\u0067\u007a\u0069\u0070":_ggf ,_gffg =_g .NewReader (_bgg .Body );
if _gffg !=nil {return _ggf ,_gffg ;};defer _ggf .Close ();default:_ggf =_bgg .Body ;};return _ggf ,nil ;};func (_gfb *meteredClient )getStatus ()(meteredStatusResp ,error ){var _agad meteredStatusResp ;_ggb :=_gfb ._cgg +"\u002fm\u0065t\u0065\u0072\u0065\u0064\u002f\u0073\u0074\u0061\u0074\u0075\u0073";
var _adf meteredStatusForm ;_afe ,_eec :=_cf .Marshal (_adf );if _eec !=nil {return _agad ,_eec ;};_cgag ,_eec :=_bdg (_afe );if _eec !=nil {return _agad ,_eec ;};_fgg ,_eec :=_f .NewRequest ("\u0050\u004f\u0053\u0054",_ggb ,_cgag );if _eec !=nil {return _agad ,_eec ;
};_fgg .Header .Add ("\u0043\u006f\u006et\u0065\u006e\u0074\u002d\u0054\u0079\u0070\u0065","\u0061\u0070p\u006c\u0069\u0063a\u0074\u0069\u006f\u006e\u002f\u006a\u0073\u006f\u006e");_fgg .Header .Add ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");
_fgg .Header .Add ("\u0041c\u0063e\u0070\u0074\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");_fgg .Header .Add ("\u0058-\u0041\u0050\u0049\u002d\u004b\u0045Y",_gfb ._ga );_fad ,_eec :=_gfb ._dee .Do (_fgg );if _eec !=nil {return _agad ,_eec ;
};defer _fad .Body .Close ();if _fad .StatusCode !=200{return _agad ,_da .Errorf ("\u0066\u0061i\u006c\u0065\u0064\u0020t\u006f\u0020c\u0068\u0065\u0063\u006b\u0069\u006e\u002c\u0020s\u0074\u0061\u0074\u0075\u0073\u0020\u0063\u006f\u0064\u0065\u0020\u0069s\u003a\u0020\u0025\u0064",_fad .StatusCode );
};_fd ,_eec :=_ebecb (_fad );if _eec !=nil {return _agad ,_eec ;};_eec =_cf .Unmarshal (_fd ,&_agad );if _eec !=nil {return _agad ,_eec ;};return _agad ,nil ;};var _bgd =_bb .Date (2019,6,6,0,0,0,0,_bb .UTC );func _eg (_cbc string ,_fga string )([]byte ,error ){var (_ca int ;
_bad string ;);for _ ,_bad =range []string {"\u000a\u002b\u000a","\u000d\u000a\u002b\r\u000a","\u0020\u002b\u0020"}{if _ca =_cb .Index (_fga ,_bad );_ca !=-1{break ;};};if _ca ==-1{return nil ,_da .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u002c \u0073i\u0067n\u0061t\u0075\u0072\u0065\u0020\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u006f\u0072");
};_dfc :=_fga [:_ca ];_cga :=_ca +len (_bad );_ff :=_fga [_cga :];if _dfc ==""||_ff ==""{return nil ,_da .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u0069n\u0070\u0075\u0074,\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0069\u0067\u0069n\u0061\u006c \u006f\u0072\u0020\u0073\u0069\u0067n\u0061\u0074u\u0072\u0065");
};_bfg ,_cef :=_gc .StdEncoding .DecodeString (_dfc );if _cef !=nil {return nil ,_da .Errorf ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u006f\u0072\u0069\u0067\u0069\u006ea\u006c");};_fab ,_cef :=_gc .StdEncoding .DecodeString (_ff );
if _cef !=nil {return nil ,_da .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065");};_fed ,_ :=_ee .Decode ([]byte (_cbc ));if _fed ==nil {return nil ,_da .Errorf ("\u0050\u0075\u0062\u004b\u0065\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};_cd ,_cef :=_fa .ParsePKIXPublicKey (_fed .Bytes );if _cef !=nil {return nil ,_cef ;};_cba :=_cd .(*_ge .PublicKey );if _cba ==nil {return nil ,_da .Errorf ("\u0050u\u0062\u004b\u0065\u0079\u0020\u0063\u006f\u006e\u0076\u0065\u0072s\u0069\u006f\u006e\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};_af :=_ag .New ();_af .Write (_bfg );_gcd :=_af .Sum (nil );_cef =_ge .VerifyPKCS1v15 (_cba ,_c .SHA512 ,_gcd ,_fab );if _cef !=nil {return nil ,_cef ;};return _bfg ,nil ;};var _dfe =_bb .Date (2010,1,1,0,0,0,0,_bb .UTC );func _cec (_cge string ,_ae []byte )(string ,error ){_cea ,_ :=_ee .Decode ([]byte (_cge ));
if _cea ==nil {return "",_da .Errorf ("\u0050\u0072\u0069\u0076\u004b\u0065\u0079\u0020\u0066a\u0069\u006c\u0065\u0064");};_ab ,_gd :=_fa .ParsePKCS1PrivateKey (_cea .Bytes );if _gd !=nil {return "",_gd ;};_cc :=_ag .New ();_cc .Write (_ae );_fg :=_cc .Sum (nil );
_aa ,_gd :=_ge .SignPKCS1v15 (_fc .Reader ,_ab ,_c .SHA512 ,_fg );if _gd !=nil {return "",_gd ;};_gcb :=_gc .StdEncoding .EncodeToString (_ae );_gcb +="\u000a\u002b\u000a";_gcb +=_gc .StdEncoding .EncodeToString (_aa );return _gcb ,nil ;};func _bdg (_fda []byte )(_ce .Reader ,error ){_gad :=new (_b .Buffer );
_ebfb :=_g .NewWriter (_gad );_ebfb .Write (_fda );_bag :=_ebfb .Close ();if _bag !=nil {return nil ,_bag ;};return _gad ,nil ;};func SetLicenseKey (content string ,customerName string )error {_cggf ,_abfb :=_cac (content );if _abfb !=nil {_cg .Log .Error ("\u004c\u0069c\u0065\u006e\u0073\u0065\u0020\u0063\u006f\u0064\u0065\u0020\u0064\u0065\u0063\u006f\u0064\u0065\u0020\u0065\u0072\u0072\u006f\u0072: \u0025\u0076",_abfb );
return _abfb ;};if !_cb .EqualFold (_cggf .CustomerName ,customerName ){_cg .Log .Error ("L\u0069ce\u006es\u0065 \u0063\u006f\u0064\u0065\u0020i\u0073\u0073\u0075e\u0020\u002d\u0020\u0043\u0075s\u0074\u006f\u006de\u0072\u0020\u006e\u0061\u006d\u0065\u0020\u006d\u0069\u0073\u006da\u0074\u0063\u0068, e\u0078\u0070\u0065\u0063\u0074\u0065d\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u0062\u0075\u0074\u0020\u0067o\u0074 \u0027\u0025\u0073\u0027",customerName ,_cggf .CustomerName );
return _da .Errorf ("\u0063\u0075\u0073\u0074\u006fm\u0065\u0072\u0020\u006e\u0061\u006d\u0065\u0020\u006d\u0069\u0073\u006d\u0061t\u0063\u0068\u002c\u0020\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u0062\u0075\u0074\u0020\u0067\u006f\u0074\u0020\u0027\u0025\u0073'",customerName ,_cggf .CustomerName );
};_abfb =_cggf .Validate ();if _abfb !=nil {_cg .Log .Error ("\u004c\u0069\u0063\u0065\u006e\u0073e\u0020\u0063\u006f\u0064\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074i\u006f\u006e\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_abfb );
return _abfb ;};_dc =&_cggf ;return nil ;};func TrackUse (useKey string ){if _dc ==nil {return ;};if !_dc ._eaf ||len (_dc ._fae )==0{return ;};if len (useKey )==0{return ;};_cff .Lock ();defer _cff .Unlock ();if _cdc ==nil {_cdc =map[string ]int {};};
_cdc [useKey ]++;};var _aedf map[string ]struct{};func init (){_cbbc :=_ad .Getenv (_eda );_edfe :=_ad .Getenv (_aeb );if len (_cbbc )==0||len (_edfe )==0{return ;};_ffd ,_dgg :=_db .ReadFile (_cbbc );if _dgg !=nil {_cg .Log .Error ("\u0055\u006eab\u006c\u0065\u0020t\u006f\u0020\u0072\u0065ad \u006cic\u0065\u006e\u0073\u0065\u0020\u0063\u006fde\u0020\u0066\u0069\u006c\u0065\u003a\u0020%\u0076",_dgg );
return ;};_dgg =SetLicenseKey (string (_ffd ),_edfe );if _dgg !=nil {_cg .Log .Error ("\u0055\u006e\u0061b\u006c\u0065\u0020\u0074o\u0020\u006c\u006f\u0061\u0064\u0020\u006ci\u0063\u0065\u006e\u0073\u0065\u0020\u0063\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_dgg );
return ;};};const _ffe ="\u000a\u002d\u002d\u002d\u002d\u002d\u0042\u0045\u0047\u0049\u004e \u0050\u0055\u0042\u004c\u0049\u0043\u0020\u004b\u0045Y\u002d\u002d\u002d\u002d\u002d\u000a\u004d\u0049I\u0042\u0049\u006a\u0041NB\u0067\u006b\u0071\u0068\u006b\u0069G\u0039\u0077\u0030\u0042\u0041\u0051\u0045\u0046A\u0041\u004f\u0043\u0041\u0051\u0038\u0041\u004d\u0049\u0049\u0042\u0043\u0067\u004b\u0043\u0041\u0051\u0045A\u006dF\u0055\u0069\u0079\u0064\u0037\u0062\u0035\u0058\u006a\u0070\u006b\u0050\u0035\u0052\u0061\u0070\u0034\u0077\u000a\u0044\u0063\u0031d\u0079\u007a\u0049\u0051\u0034\u004c\u0065\u006b\u0078\u0072\u0076\u0079\u0074\u006e\u0045\u004d\u0070\u004e\u0055\u0062\u006f\u0036i\u0041\u0037\u0034\u0056\u0038\u0072\u0075\u005a\u004f\u0076\u0072\u0053\u0063\u0073\u0066\u0032\u0051\u0065\u004e9\u002f\u0071r\u0055\u0047\u0038\u0071\u0045\u0062\u0055\u0057\u0064\u006f\u0045\u0059\u0071+\u000a\u006f\u0074\u0046\u004e\u0041\u0046N\u0078\u006c\u0047\u0062\u0078\u0062\u0044\u0048\u0063\u0064\u0047\u0056\u0061\u004d\u0030\u004f\u0058\u0064\u0058g\u0044y\u004c5\u0061\u0049\u0045\u0061\u0067\u004c\u0030\u0063\u0035\u0070\u0077\u006a\u0049\u0064\u0050G\u0049\u006e\u0034\u0036\u0066\u0037\u0038\u0065\u004d\u004a\u002b\u004a\u006b\u0064\u0063\u0070\u0044\n\u0044\u004a\u0061\u0071\u0059\u0058d\u0072\u007a5\u004b\u0065\u0073\u0068\u006aS\u0069\u0049\u0061\u0061\u0037\u006d\u0065\u006e\u0042\u0049\u0041\u0058\u0053\u0034\u0055\u0046\u0078N\u0066H\u0068\u004e\u0030\u0048\u0043\u0059\u005a\u0059\u0071\u0051\u0047\u0037\u0062K+\u0073\u0035\u0072R\u0048\u006f\u006e\u0079\u0064\u004eW\u0045\u0047\u000a\u0048\u0038M\u0079\u0076\u00722\u0070\u0079\u0061\u0032K\u0072\u004d\u0075m\u0066\u006d\u0041\u0078\u0055\u0042\u0036\u0066\u0065\u006e\u0043\u002f4\u004f\u0030\u0057\u00728\u0067\u0066\u0050\u004f\u0055\u0038R\u0069\u0074\u006d\u0062\u0044\u0076\u0051\u0050\u0049\u0052\u0058\u004fL\u0034\u0076\u0054B\u0072\u0042\u0064\u0062a\u0041\u000a9\u006e\u0077\u004e\u0050\u002b\u0069\u002f\u002f\u0032\u0030\u004d\u00542\u0062\u0078\u006d\u0065\u0057\u0042\u002b\u0067\u0070\u0063\u0045\u0068G\u0070\u0058\u005a7\u0033\u0033\u0061\u007a\u0051\u0078\u0072\u0043\u0033\u004a\u0034\u0076\u0033C\u005a\u006d\u0045\u004eS\u0074\u0044\u004b\u002f\u004b\u0044\u0053\u0050\u004b\u0055\u0047\u0066\u00756\u000a\u0066\u0077I\u0044\u0041\u0051\u0041\u0042\u000a\u002d\u002d\u002d\u002d\u002dE\u004e\u0044\u0020\u0050\u0055\u0042\u004c\u0049\u0043 \u004b\u0045Y\u002d\u002d\u002d\u002d\u002d\n";
func (_ccg defaultStateHolder )loadState (_aef string )(reportState ,error ){_ebf :=_geec ();if len (_ebf )==0{return reportState {},_df .New ("\u0068\u006fm\u0065\u0020\u0064i\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");};_cdg :=_eb .Join (_ebf ,"\u002eu\u006e\u0069\u0064\u006f\u0063");
_bbg :=_ad .MkdirAll (_cdg ,0777);if _bbg !=nil {return reportState {},_bbg ;};if len (_aef )< 20{return reportState {},_df .New ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006b\u0065\u0079");};_ada :=[]byte (_aef );_gfg :=_ag .Sum512_256 (_ada [:20]);
_ccf :=_ba .EncodeToString (_gfg [:]);_gdb :=_eb .Join (_cdg ,_ccf );_dg ,_bbg :=_db .ReadFile (_gdb );if _bbg !=nil {if _ad .IsNotExist (_bbg ){return reportState {},nil ;};_cg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bbg );return reportState {},_df .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061");
};const _agge ="\u0068\u00619\u004e\u004b\u0038]\u0052\u0062\u004c\u002a\u006d\u0034\u004c\u004b\u0057";_dg ,_bbg =_gab ([]byte (_agge ),_dg );if _bbg !=nil {return reportState {},_bbg ;};var _fada reportState ;_bbg =_cf .Unmarshal (_dg ,&_fada );if _bbg !=nil {_cg .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0076",_bbg );
return reportState {},_df .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061");};return _fada ,nil ;};func (_fb *LicenseKey )isExpired ()bool {return _fb .getExpiryDateToCompare ().After (*_fb .ExpiresAt )};var _ebec stateLoader =defaultStateHolder {};
func (_ecg *meteredClient )checkinUsage (_gceg meteredUsageCheckinForm )(meteredUsageCheckinResp ,error ){_gceg .Package ="\u0075\u006e\u0069\u0070\u0064\u0066";_gceg .PackageVersion =_cg .Version ;var _gbde meteredUsageCheckinResp ;_dd :=_ecg ._cgg +"\u002f\u006d\u0065\u0074er\u0065\u0064\u002f\u0075\u0073\u0061\u0067\u0065\u005f\u0063\u0068\u0065\u0063\u006bi\u006e";
_aed ,_gfbd :=_cf .Marshal (_gceg );if _gfbd !=nil {return _gbde ,_gfbd ;};_dfca ,_gfbd :=_bdg (_aed );if _gfbd !=nil {return _gbde ,_gfbd ;};_adef ,_gfbd :=_f .NewRequest ("\u0050\u004f\u0053\u0054",_dd ,_dfca );if _gfbd !=nil {return _gbde ,_gfbd ;};
_adef .Header .Add ("\u0043\u006f\u006et\u0065\u006e\u0074\u002d\u0054\u0079\u0070\u0065","\u0061\u0070p\u006c\u0069\u0063a\u0074\u0069\u006f\u006e\u002f\u006a\u0073\u006f\u006e");_adef .Header .Add ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");
_adef .Header .Add ("\u0041c\u0063e\u0070\u0074\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");_adef .Header .Add ("\u0058-\u0041\u0050\u0049\u002d\u004b\u0045Y",_ecg ._ga );_edc ,_gfbd :=_ecg ._dee .Do (_adef );if _gfbd !=nil {return _gbde ,_gfbd ;
};defer _edc .Body .Close ();if _edc .StatusCode !=200{return _gbde ,_da .Errorf ("\u0066\u0061i\u006c\u0065\u0064\u0020t\u006f\u0020c\u0068\u0065\u0063\u006b\u0069\u006e\u002c\u0020s\u0074\u0061\u0074\u0075\u0073\u0020\u0063\u006f\u0064\u0065\u0020\u0069s\u003a\u0020\u0025\u0064",_edc .StatusCode );
};_ecb ,_gfbd :=_ebecb (_edc );if _gfbd !=nil {return _gbde ,_gfbd ;};_gfbd =_cf .Unmarshal (_ecb ,&_gbde );if _gfbd !=nil {return _gbde ,_gfbd ;};return _gbde ,nil ;};func Track (docKey string ,useKey string )error {return _ece (docKey ,useKey ,false )};
func (_eafa *LicenseKey )TypeToString ()string {if _eafa ._eaf {return "M\u0065t\u0065\u0072\u0065\u0064\u0020\u0073\u0075\u0062s\u0063\u0072\u0069\u0070ti\u006f\u006e";};if _eafa .Tier ==LicenseTierUnlicensed {return "\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";
};if _eafa .Tier ==LicenseTierCommunity {return "\u0041\u0047PL\u0076\u0033\u0020O\u0070\u0065\u006e\u0020Sou\u0072ce\u0020\u0043\u006f\u006d\u006d\u0075\u006eit\u0079\u0020\u004c\u0069\u0063\u0065\u006es\u0065";};if _eafa .Tier ==LicenseTierIndividual ||_eafa .Tier =="\u0069\u006e\u0064i\u0065"{return "\u0043\u006f\u006dm\u0065\u0072\u0063\u0069a\u006c\u0020\u004c\u0069\u0063\u0065\u006es\u0065\u0020\u002d\u0020\u0049\u006e\u0064\u0069\u0076\u0069\u0064\u0075\u0061\u006c";
};return "\u0043\u006fm\u006d\u0065\u0072\u0063\u0069\u0061\u006c\u0020\u004c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u002d\u0020\u0042\u0075\u0073\u0069ne\u0073\u0073";};