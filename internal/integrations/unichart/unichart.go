//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package unichart ;import (_c "bytes";_g "fmt";_ca "github.com/unidoc/unichart/render";_d "github.com/unidoc/unipdf/v3/common";_ge "github.com/unidoc/unipdf/v3/contentstream";_cc "github.com/unidoc/unipdf/v3/contentstream/draw";_b "github.com/unidoc/unipdf/v3/core";
_gba "github.com/unidoc/unipdf/v3/model";_gbe "image/color";_cf "io";_gb "math";);func (_gcg *Renderer )Text (text string ,x ,y int ){_gcg ._dc .Add_q ();_gcg .SetFont (_gcg ._cdd );_afag ,_egbb ,_gga ,_ :=_eae (_gcg ._dd );_gcg ._dc .Add_rg (_afag ,_egbb ,_gga );
_gcg ._dc .Translate (float64 (x ),float64 (y )).Scale (1,-1);if _ddb :=_gcg ._gf ;_ddb !=0{_gcg ._dc .RotateDeg (_ddb );};_gcg ._dc .Add_BT ().Add_TL (_gcg ._e );var (_fag =_gcg ._cdd .Encoder ();_aae =_gcg .wrapText (text );_ecf =len (_aae ););for _daa ,_dae :=range _aae {_gcg ._dc .Add_TJ (_b .MakeStringFromBytes (_fag .Encode (_dae )));
if _daa !=_ecf -1{_gcg ._dc .Add_Tstar ();};};_gcg ._dc .Add_ET ();_gcg ._dc .Add_Q ();};func (_dg *Renderer )Close (){_dg ._dc .Add_h ()};func (_bde *Renderer )SetStrokeDashArray (dashArray []float64 ){_ce :=make ([]int64 ,len (dashArray ));for _fb ,_egb :=range dashArray {_ce [_fb ]=int64 (_egb );
};_bde ._dc .Add_d (_ce ,0);};func (_aeg *Renderer )SetFontColor (color _gbe .Color ){_aeg ._dd =color };func (_eabd *Renderer )getTextWidth (_gec string )float64 {var _gce float64 ;for _ ,_bab :=range _gec {_fgc ,_bbg :=_eabd ._cdd .GetRuneMetrics (_bab );
if !_bbg {_d .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074e\u0064 \u0072u\u006e\u0065\u0020\u0025\u0076\u0020\u0069\u006e\u0020\u0066\u006f\u006e\u0074",_bab );};_gce +=_fgc .Wx ;};return _eabd ._e *_gce /1000.0;
};func _ccc (_cag float64 )float64 {return _cag *180/_gb .Pi };func (_ff *Renderer )SetStrokeColor (color _gbe .Color ){_ff ._bd =color ;_gc ,_afa ,_bcd ,_ :=_eae (color );_ff ._dc .Add_RG (_gc ,_afa ,_bcd );};func (_ae *Renderer )Circle (radius float64 ,x ,y int ){_ga :=radius ;
if _ffa :=_ae ._ac ;_ffa !=0{_ga -=_ffa /2;};_ba :=_ga *0.551784;_abg :=_cc .CubicBezierPath {Curves :[]_cc .CubicBezierCurve {_cc .NewCubicBezierCurve (-_ga ,0,-_ga ,_ba ,-_ba ,_ga ,0,_ga ),_cc .NewCubicBezierCurve (0,_ga ,_ba ,_ga ,_ga ,_ba ,_ga ,0),_cc .NewCubicBezierCurve (_ga ,0,_ga ,-_ba ,_ba ,-_ga ,0,-_ga ),_cc .NewCubicBezierCurve (0,-_ga ,-_ba ,-_ga ,-_ga ,-_ba ,-_ga ,0)}};
if _eab :=_ae ._ac ;_eab !=0{_abg =_abg .Offset (_eab /2,_eab /2);};_abg =_abg .Offset (float64 (x ),float64 (y ));_cc .DrawBezierPathWithCreator (_abg ,_ae ._dc );};func NewRenderer (cc *_ge .ContentCreator ,res *_gba .PdfPageResources )func (int ,int )(_ca .Renderer ,error ){return func (_bg ,_eg int )(_ca .Renderer ,error ){_gd :=&Renderer {_cd :_bg ,_gg :_eg ,_bc :72,_dc :cc ,_cb :res ,_ea :map[*_gba .PdfFont ]_b .PdfObjectName {}};
_gd .ResetStyle ();return _gd ,nil ;};};func (_f *Renderer )SetClassName (name string ){};func (_bdd *Renderer )SetFont (font _ca .Font ){_bbd ,_aea :=font .(*_gba .PdfFont );if !_aea {_d .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065");
return ;};_dge ,_aea :=_bdd ._ea [_bbd ];if !_aea {_dge =_bae ("\u0046\u006f\u006e\u0074",1,_bdd ._cb .HasFontByName );if _dbc :=_bdd ._cb .SetFontByName (_dge ,_bbd .ToPdfObject ());_dbc !=nil {_d .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0064d\u0020\u0066\u006f\u006e\u0074\u0020\u0025\u0076\u0020\u0074\u006f\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073",_bbd );
};_bdd ._ea [_bbd ]=_dge ;};_bdd ._dc .Add_Tf (_dge ,_bdd ._e );_bdd ._cdd =_bbd ;};func (_db *Renderer )FillStroke (){_db ._dc .Add_B ()};func _eae (_ef _gbe .Color )(float64 ,float64 ,float64 ,float64 ){_gaga ,_bag ,_ddce ,_dcd :=_cbf (_ef );return float64 (_gaga )/255,float64 (_bag )/255,float64 (_ddce )/255,float64 (_dcd )/255;
};func (_ab *Renderer )LineTo (x ,y int ){_ab ._dc .Add_l (float64 (x ),float64 (y ))};func (_ddc *Renderer )MeasureText (text string )_ca .Box {_ee :=_ddc ._e ;_cg ,_eca :=_ddc ._cdd .GetFontDescriptor ();if _eca !=nil {_d .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020\u0074o\u0020\u0067\u0065\u0074\u0020\u0066\u006fn\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074o\u0072");
}else {_ade ,_cbb :=_cg .GetCapHeight ();if _cbb !=nil {_d .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0067\u0065\u0074\u0020f\u006f\u006e\u0074\u0020\u0063\u0061\u0070\u0020\u0068\u0065\u0069\u0067\u0068t\u003a\u0020\u0025\u0076",_cbb );
}else {_ee =_ade /1000.0*_ddc ._e ;};};var (_eac =0.0;_bfg =_ddc .wrapText (text ););for _ ,_eafa :=range _bfg {if _fab :=_ddc .getTextWidth (_eafa );_fab > _eac {_eac =_fab ;};};_fd :=_ca .NewBox (0,0,int (_eac ),int (_ee ));if _adb :=_ddc ._gf ;_adb !=0{_fd =_fd .Corners ().Rotate (_adb ).Box ();
};return _fd ;};func (_aab *Renderer )QuadCurveTo (cx ,cy ,x ,y int ){_aab ._dc .Add_v (float64 (x ),float64 (y ),float64 (cx ),float64 (cy ));};func (_cfd *Renderer )Fill (){_cfd ._dc .Add_f ()};func (_dged *Renderer )wrapText (_cfg string )[]string {var (_ebc []string ;
_ffg []rune ;);for _ ,_gde :=range _cfg {if _gde =='\n'{_ebc =append (_ebc ,string (_ffg ));_ffg =[]rune {};continue ;};_ffg =append (_ffg ,_gde );};if len (_ffg )> 0{_ebc =append (_ebc ,string (_ffg ));};return _ebc ;};func (_be *Renderer )SetDPI (dpi float64 ){_be ._bc =dpi };
func (_ebf *Renderer )Save (w _cf .Writer )error {if w ==nil {return nil ;};_ ,_egd :=_cf .Copy (w ,_c .NewBuffer (_ebf ._dc .Bytes ()));return _egd ;};func (_bdb *Renderer )Stroke (){_bdb ._dc .Add_S ()};func _cbf (_fff _gbe .Color )(uint8 ,uint8 ,uint8 ,uint8 ){_dce ,_dab ,_gag ,_ecc :=_fff .RGBA ();
return uint8 (_dce >>8),uint8 (_dab >>8),uint8 (_gag >>8),uint8 (_ecc >>8);};func (_dgb *Renderer )ClearTextRotation (){_dgb ._gf =0};func (_cdcc *Renderer )SetTextRotation (radians float64 ){_cdcc ._gf =_ccc (-radians )};func (_bf *Renderer )GetDPI ()float64 {return _bf ._bc };
func (_bcc *Renderer )MoveTo (x ,y int ){_bcc ._dc .Add_m (float64 (x ),float64 (y ))};func _bae (_gfg string ,_dgg int ,_cce func (_b .PdfObjectName )bool )_b .PdfObjectName {_bcdb :=_b .PdfObjectName (_g .Sprintf ("\u0025\u0073\u0025\u0064",_gfg ,_dgg ));
for _ccd :=_dgg ;_cce (_bcdb );{_ccd ++;_bcdb =_b .PdfObjectName (_g .Sprintf ("\u0025\u0073\u0025\u0064",_gfg ,_ccd ));};return _bcdb ;};func (_fa *Renderer )ArcTo (cx ,cy int ,rx ,ry ,startAngle ,deltaAngle float64 ){startAngle =_ccc (2.0*_gb .Pi -startAngle );
deltaAngle =_ccc (-deltaAngle );_ec ,_fbg :=deltaAngle ,1;if _gb .Abs (deltaAngle )> 90.0{_fbg =int (_gb .Ceil (_gb .Abs (deltaAngle )/90.0));_ec =deltaAngle /float64 (_fbg );};var (_bb =_bbb (_ec /2);_cdg =_gb .Abs (4.0/3.0*(1.0-_gb .Cos (_bb ))/_gb .Sin (_bb ));
_ag =float64 (cx );_dde =float64 (cy ););for _cae :=0;_cae < _fbg ;_cae ++{_eaf :=_bbb (startAngle +float64 (_cae )*_ec );_beg :=_bbb (startAngle +float64 (_cae +1)*_ec );_deg :=_gb .Cos (_eaf );_eb :=_gb .Cos (_beg );_fac :=_gb .Sin (_eaf );_cdc :=_gb .Sin (_beg );
var _ad []float64 ;if _ec > 0{_ad =[]float64 {_ag +rx *_deg ,_dde -ry *_fac ,_ag +rx *(_deg -_cdg *_fac ),_dde -ry *(_fac +_cdg *_deg ),_ag +rx *(_eb +_cdg *_cdc ),_dde -ry *(_cdc -_cdg *_eb ),_ag +rx *_eb ,_dde -ry *_cdc };}else {_ad =[]float64 {_ag +rx *_deg ,_dde -ry *_fac ,_ag +rx *(_deg +_cdg *_fac ),_dde -ry *(_fac -_cdg *_deg ),_ag +rx *(_eb -_cdg *_cdc ),_dde -ry *(_cdc +_cdg *_eb ),_ag +rx *_eb ,_dde -ry *_cdc };
};if _cae ==0{_fa ._dc .Add_l (_ad [0],_ad [1]);};_fa ._dc .Add_c (_ad [2],_ad [3],_ad [4],_ad [5],_ad [6],_ad [7]);};};func (_caa *Renderer )SetStrokeWidth (width float64 ){_caa ._ac =width ;_caa ._dc .Add_w (width )};func _bbb (_df float64 )float64 {return _df *_gb .Pi /180.0};
type Renderer struct{_cd int ;_gg int ;_bc float64 ;_dc *_ge .ContentCreator ;_cb *_gba .PdfPageResources ;_af _gbe .Color ;_bd _gbe .Color ;_ac float64 ;_cdd *_gba .PdfFont ;_e float64 ;_dd _gbe .Color ;_gf float64 ;_ea map[*_gba .PdfFont ]_b .PdfObjectName ;
};func (_aa *Renderer )ResetStyle (){_aa .SetFillColor (_gbe .Black );_aa .SetStrokeColor (_gbe .Transparent );_aa .SetStrokeWidth (0);_aa .SetFont (_gba .DefaultFont ());_aa .SetFontColor (_gbe .Black );_aa .SetFontSize (12);_aa .SetTextRotation (0);};
func (_fbb *Renderer )SetFontSize (size float64 ){_fbb ._e =size };func (_beb *Renderer )SetFillColor (color _gbe .Color ){_beb ._af =color ;_bec ,_ggd ,_da ,_ :=_eae (color );_beb ._dc .Add_rg (_bec ,_ggd ,_da );};