//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package unichart ;import (_e "bytes";_fg "fmt";_ec "github.com/unidoc/unichart/render";_aa "github.com/unidoc/unipdf/v3/common";_d "github.com/unidoc/unipdf/v3/contentstream";_gae "github.com/unidoc/unipdf/v3/contentstream/draw";_ga "github.com/unidoc/unipdf/v3/core";
_g "github.com/unidoc/unipdf/v3/model";_a "image/color";_fd "io";_fa "math";);func (_feb *Renderer )SetFontSize (size float64 ){_feb ._bd =size };func (_gdd *Renderer )ResetStyle (){_gdd .SetFillColor (_a .Black );_gdd .SetStrokeColor (_a .Transparent );
_gdd .SetStrokeWidth (0);_gdd .SetFont (_g .DefaultFont ());_gdd .SetFontColor (_a .Black );_gdd .SetFontSize (12);_gdd .SetTextRotation (0);};func (_eb *Renderer )Close (){_eb ._gd .Add_h ()};func (_adf *Renderer )MoveTo (x ,y int ){_adf ._gd .Add_m (float64 (x ),float64 (y ))};
func (_fdg *Renderer )SetFontColor (color _a .Color ){_fdg ._gb =color };func _gca (_cdg float64 )float64 {return _cdg *180/_fa .Pi };func (_fec *Renderer )FillStroke (){_fec ._gd .Add_B ()};func (_ba *Renderer )SetDPI (dpi float64 ){_ba ._ag =dpi };func NewRenderer (cc *_d .ContentCreator ,res *_g .PdfPageResources )func (int ,int )(_ec .Renderer ,error ){return func (_dg ,_bde int )(_ec .Renderer ,error ){_dd :=&Renderer {_ac :_dg ,_eg :_bde ,_ag :72,_gd :cc ,_df :res ,_bb :map[*_g .PdfFont ]_ga .PdfObjectName {}};
_dd .ResetStyle ();return _dd ,nil ;};};func (_cce *Renderer )ArcTo (cx ,cy int ,rx ,ry ,startAngle ,deltaAngle float64 ){startAngle =_gca (2.0*_fa .Pi -startAngle );deltaAngle =_gca (-deltaAngle );_bbb ,_egc :=deltaAngle ,1;if _fa .Abs (deltaAngle )> 90.0{_egc =int (_fa .Ceil (_fa .Abs (deltaAngle )/90.0));
_bbb =deltaAngle /float64 (_egc );};var (_dga =_edf (_bbb /2);_faf =_fa .Abs (4.0/3.0*(1.0-_fa .Cos (_dga ))/_fa .Sin (_dga ));_efa =float64 (cx );_gg =float64 (cy ););for _ca :=0;_ca < _egc ;_ca ++{_bc :=_edf (startAngle +float64 (_ca )*_bbb );_aaa :=_edf (startAngle +float64 (_ca +1)*_bbb );
_ab :=_fa .Cos (_bc );_eea :=_fa .Cos (_aaa );_ge :=_fa .Sin (_bc );_ce :=_fa .Sin (_aaa );var _fe []float64 ;if _bbb > 0{_fe =[]float64 {_efa +rx *_ab ,_gg -ry *_ge ,_efa +rx *(_ab -_faf *_ge ),_gg -ry *(_ge +_faf *_ab ),_efa +rx *(_eea +_faf *_ce ),_gg -ry *(_ce -_faf *_eea ),_efa +rx *_eea ,_gg -ry *_ce };
}else {_fe =[]float64 {_efa +rx *_ab ,_gg -ry *_ge ,_efa +rx *(_ab +_faf *_ge ),_gg -ry *(_ge -_faf *_ab ),_efa +rx *(_eea -_faf *_ce ),_gg -ry *(_ce +_faf *_eea ),_efa +rx *_eea ,_gg -ry *_ce };};if _ca ==0{_cce ._gd .Add_l (_fe [0],_fe [1]);};_cce ._gd .Add_c (_fe [2],_fe [3],_fe [4],_fe [5],_fe [6],_fe [7]);
};};func (_bdeg *Renderer )getTextWidth (_fag string )float64 {var _cec float64 ;for _ ,_gff :=range _fag {_bf ,_ade :=_bdeg ._ef .GetRuneMetrics (_gff );if !_ade {_aa .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074e\u0064 \u0072u\u006e\u0065\u0020\u0025\u0076\u0020\u0069\u006e\u0020\u0066\u006f\u006e\u0074",_gff );
};_cec +=_bf .Wx ;};return _bdeg ._bd *_cec /1000.0;};func (_da *Renderer )Stroke (){_da ._gd .Add_S ()};func _agb (_fadc _a .Color )(uint8 ,uint8 ,uint8 ,uint8 ){_adc ,_bcg ,_cfc ,_ggd :=_fadc .RGBA ();return uint8 (_adc >>8),uint8 (_bcg >>8),uint8 (_cfc >>8),uint8 (_ggd >>8);
};func (_fcb *Renderer )SetFillColor (color _a .Color ){_fcb ._fc =color ;_ea ,_ae ,_ff ,_ :=_ebf (color );_fcb ._gd .Add_rg (_ea ,_ae ,_ff );};func _edf (_cfce float64 )float64 {return _cfce *_fa .Pi /180.0};func (_bed *Renderer )SetStrokeWidth (width float64 ){_bed ._b =width ;
_bed ._gd .Add_w (width )};func _dfg (_gddc string ,_cca int ,_afb func (_ga .PdfObjectName )bool )_ga .PdfObjectName {_adgb :=_ga .PdfObjectName (_fg .Sprintf ("\u0025\u0073\u0025\u0064",_gddc ,_cca ));for _cdc :=_cca ;_afb (_adgb );{_cdc ++;_adgb =_ga .PdfObjectName (_fg .Sprintf ("\u0025\u0073\u0025\u0064",_gddc ,_cdc ));
};return _adgb ;};func (_fdc *Renderer )SetTextRotation (radians float64 ){_fdc ._ee =_gca (-radians )};func (_cb *Renderer )SetFont (font _ec .Font ){_ada ,_ed :=font .(*_g .PdfFont );if !_ed {_aa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065");
return ;};_agd ,_ed :=_cb ._bb [_ada ];if !_ed {_agd =_dfg ("\u0046\u006f\u006e\u0074",1,_cb ._df .HasFontByName );if _dfc :=_cb ._df .SetFontByName (_agd ,_ada .ToPdfObject ());_dfc !=nil {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0064d\u0020\u0066\u006f\u006e\u0074\u0020\u0025\u0076\u0020\u0074\u006f\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073",_ada );
};_cb ._bb [_ada ]=_agd ;};_cb ._gd .Add_Tf (_agd ,_cb ._bd );_cb ._ef =_ada ;};func (_dde *Renderer )QuadCurveTo (cx ,cy ,x ,y int ){_dde ._gd .Add_v (float64 (x ),float64 (y ),float64 (cx ),float64 (cy ));};func (_ddg *Renderer )GetDPI ()float64 {return _ddg ._ag };
func (_fff *Renderer )Circle (radius float64 ,x ,y int ){_de :=radius ;if _deb :=_fff ._b ;_deb !=0{_de -=_deb /2;};_eceg :=_de *0.551784;_fdf :=_gae .CubicBezierPath {Curves :[]_gae .CubicBezierCurve {_gae .NewCubicBezierCurve (-_de ,0,-_de ,_eceg ,-_eceg ,_de ,0,_de ),_gae .NewCubicBezierCurve (0,_de ,_eceg ,_de ,_de ,_eceg ,_de ,0),_gae .NewCubicBezierCurve (_de ,0,_de ,-_eceg ,_eceg ,-_de ,0,-_de ),_gae .NewCubicBezierCurve (0,-_de ,-_eceg ,-_de ,-_de ,-_eceg ,-_de ,0)}};
if _cf :=_fff ._b ;_cf !=0{_fdf =_fdf .Offset (_cf /2,_cf /2);};_fdf =_fdf .Offset (float64 (x ),float64 (y ));_gae .DrawBezierPathWithCreator (_fdf ,_fff ._gd );};func (_aag *Renderer )ClearTextRotation (){_aag ._ee =0};type Renderer struct{_ac int ;_eg int ;
_ag float64 ;_gd *_d .ContentCreator ;_df *_g .PdfPageResources ;_fc _a .Color ;_ad _a .Color ;_b float64 ;_ef *_g .PdfFont ;_bd float64 ;_gb _a .Color ;_ee float64 ;_bb map[*_g .PdfFont ]_ga .PdfObjectName ;};func (_fb *Renderer )SetStrokeDashArray (dashArray []float64 ){_fba :=make ([]int64 ,len (dashArray ));
for _gf ,_cc :=range dashArray {_fba [_gf ]=int64 (_cc );};_fb ._gd .Add_d (_fba ,0);};func (_dee *Renderer )MeasureText (text string )_ec .Box {_agg :=_dee ._bd ;_efg ,_fad :=_dee ._ef .GetFontDescriptor ();if _fad !=nil {_aa .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020\u0074o\u0020\u0067\u0065\u0074\u0020\u0066\u006fn\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074o\u0072");
}else {_aef ,_afg :=_efg .GetCapHeight ();if _afg !=nil {_aa .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0067\u0065\u0074\u0020f\u006f\u006e\u0074\u0020\u0063\u0061\u0070\u0020\u0068\u0065\u0069\u0067\u0068t\u003a\u0020\u0025\u0076",_afg );
}else {_agg =_aef /1000.0*_dee ._bd ;};};var (_ffd =0.0;_ged =_dee .wrapText (text ););for _ ,_dfe :=range _ged {if _gc :=_dee .getTextWidth (_dfe );_gc > _ffd {_ffd =_gc ;};};_bcc :=_ec .NewBox (0,0,int (_ffd ),int (_agg ));if _eda :=_dee ._ee ;_eda !=0{_bcc =_bcc .Corners ().Rotate (_eda ).Box ();
};return _bcc ;};func (_ccb *Renderer )wrapText (_dc string )[]string {var (_egd []string ;_geb []rune ;);for _ ,_gfa :=range _dc {if _gfa =='\n'{_egd =append (_egd ,string (_geb ));_geb =[]rune {};continue ;};_geb =append (_geb ,_gfa );};if len (_geb )> 0{_egd =append (_egd ,string (_geb ));
};return _egd ;};func (_dgc *Renderer )Save (w _fd .Writer )error {if w ==nil {return nil ;};_ ,_edg :=_fd .Copy (w ,_e .NewBuffer (_dgc ._gd .Bytes ()));return _edg ;};func _ebf (_baf _a .Color )(float64 ,float64 ,float64 ,float64 ){_adaa ,_eee ,_afd ,_fcbg :=_agb (_baf );
return float64 (_adaa )/255,float64 (_eee )/255,float64 (_afd )/255,float64 (_fcbg )/255;};func (_ece *Renderer )LineTo (x ,y int ){_ece ._gd .Add_l (float64 (x ),float64 (y ))};func (_af *Renderer )Text (text string ,x ,y int ){_af ._gd .Add_q ();_af .SetFont (_af ._ef );
_aeg ,_fce ,_ecd ,_ :=_ebf (_af ._gb );_af ._gd .Add_rg (_aeg ,_fce ,_ecd );_af ._gd .Translate (float64 (x ),float64 (y )).Scale (1,-1);if _efad :=_af ._ee ;_efad !=0{_af ._gd .RotateDeg (_efad );};_af ._gd .Add_BT ().Add_TL (_af ._bd );var (_aea =_af ._ef .Encoder ();
_bg =_af .wrapText (text );_adg =len (_bg ););for _cac ,_bca :=range _bg {_af ._gd .Add_TJ (_ga .MakeStringFromBytes (_aea .Encode (_bca )));if _cac !=_adg -1{_af ._gd .Add_Tstar ();};};_af ._gd .Add_ET ();_af ._gd .Add_Q ();};func (_be *Renderer )SetStrokeColor (color _a .Color ){_be ._ad =color ;
_cd ,_age ,_bbe ,_ :=_ebf (color );_be ._gd .Add_RG (_cd ,_age ,_bbe );};func (_c *Renderer )SetClassName (name string ){};func (_ebc *Renderer )Fill (){_ebc ._gd .Add_f ()};