//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package uuid ;import (_a "crypto/rand";_b "encoding/hex";_f "io";);func (_ga UUID )String ()string {var _ca [36]byte ;_ab (_ca [:],_ga );return string (_ca [:])};func NewUUID ()(UUID ,error ){var uuid UUID ;_ ,_ff :=_f .ReadFull (_af ,uuid [:]);if _ff !=nil {return _afe ,_ff ;
};uuid [6]=(uuid [6]&0x0f)|0x40;uuid [8]=(uuid [8]&0x3f)|0x80;return uuid ,nil ;};func MustUUID ()UUID {uuid ,_bf :=NewUUID ();if _bf !=nil {panic (_bf );};return uuid ;};var _af =_a .Reader ;func _ab (_gab []byte ,_ge UUID ){_b .Encode (_gab ,_ge [:4]);
_gab [8]='-';_b .Encode (_gab [9:13],_ge [4:6]);_gab [13]='-';_b .Encode (_gab [14:18],_ge [6:8]);_gab [18]='-';_b .Encode (_gab [19:23],_ge [8:10]);_gab [23]='-';_b .Encode (_gab [24:],_ge [10:]);};var _afe UUID ;var Nil =_afe ;type UUID [16]byte ;