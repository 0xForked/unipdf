//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package uuid ;import (_e "crypto/rand";_f "encoding/hex";_b "io";);func _cc (_be []byte ,_gg UUID ){_f .Encode (_be ,_gg [:4]);_be [8]='-';_f .Encode (_be [9:13],_gg [4:6]);_be [13]='-';_f .Encode (_be [14:18],_gg [6:8]);_be [18]='-';_f .Encode (_be [19:23],_gg [8:10]);
_be [23]='-';_f .Encode (_be [24:],_gg [10:]);};func MustUUID ()UUID {uuid ,_cb :=NewUUID ();if _cb !=nil {panic (_cb );};return uuid ;};func NewUUID ()(UUID ,error ){var uuid UUID ;_ ,_eba :=_b .ReadFull (_eb ,uuid [:]);if _eba !=nil {return _gc ,_eba ;
};uuid [6]=(uuid [6]&0x0f)|0x40;uuid [8]=(uuid [8]&0x3f)|0x80;return uuid ,nil ;};func (_ebac UUID )String ()string {var _cba [36]byte ;_cc (_cba [:],_ebac );return string (_cba [:])};type UUID [16]byte ;var Nil =_gc ;var _gc UUID ;var _eb =_e .Reader ;
