//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package uuid ;import (_f "crypto/rand";_ea "encoding/hex";_b "io";);func _da (_fa []byte ,_aad UUID ){_ea .Encode (_fa ,_aad [:4]);_fa [8]='-';_ea .Encode (_fa [9:13],_aad [4:6]);_fa [13]='-';_ea .Encode (_fa [14:18],_aad [6:8]);_fa [18]='-';_ea .Encode (_fa [19:23],_aad [8:10]);
_fa [23]='-';_ea .Encode (_fa [24:],_aad [10:]);};type UUID [16]byte ;func NewUUID ()(UUID ,error ){var uuid UUID ;_ ,_ba :=_b .ReadFull (_a ,uuid [:]);if _ba !=nil {return _bc ,_ba ;};uuid [6]=(uuid [6]&0x0f)|0x40;uuid [8]=(uuid [8]&0x3f)|0x80;return uuid ,nil ;
};func (_d UUID )String ()string {var _cb [36]byte ;_da (_cb [:],_d );return string (_cb [:])};var Nil =_bc ;func MustUUID ()UUID {uuid ,_aa :=NewUUID ();if _aa !=nil {panic (_aa );};return uuid ;};var _bc UUID ;var _a =_f .Reader ;