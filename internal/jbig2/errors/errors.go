//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package errors ;import (_bb "fmt";_be "golang.org/x/xerrors";);func Error (processName ,message string )error {return _eb (message ,processName )};func (_cf *processError )Error ()string {var _dg string ;if _cf ._d !=""{_dg =_cf ._d ;};_dg +="\u0050r\u006f\u0063\u0065\u0073\u0073\u003a "+_cf ._c ;if _cf ._g !=""{_dg +="\u0020\u004d\u0065\u0073\u0073\u0061\u0067\u0065\u003a\u0020"+_cf ._g ;};if _cf ._e !=nil {_dg +="\u002e\u0020"+_cf ._e .Error ();};return _dg ;};func _eb (_ec ,_ef string )*processError {return &processError {_d :"\u005b\u0055\u006e\u0069\u0050\u0044\u0046\u005d",_g :_ec ,_c :_ef };};type processError struct{_d string ;_c string ;_g string ;_e error ;};var _ _be .Wrapper =(*processError )(nil );func (_db *processError )Unwrap ()error {return _db ._e };func Wrapf (err error ,processName ,message string ,arguments ...interface{})error {if _ecg ,_gb :=err .(*processError );_gb {_ecg ._d ="";};_a :=_eb (_bb .Sprintf (message ,arguments ...),processName );_a ._e =err ;return _a ;};func Wrap (err error ,processName ,message string )error {if _dc ,_dgc :=err .(*processError );_dgc {_dc ._d ="";};_ge :=_eb (message ,processName );_ge ._e =err ;return _ge ;};func Errorf (processName ,message string ,arguments ...interface{})error {return _eb (_bb .Sprintf (message ,arguments ...),processName );};