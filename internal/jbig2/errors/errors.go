//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package errors ;import (_c "fmt";_a "golang.org/x/xerrors";);func _df (_fd ,_ag string )*processError {return &processError {_d :"\u005b\u0055\u006e\u0069\u0050\u0044\u0046\u005d",_de :_fd ,_ee :_ag };};func (_g *processError )Unwrap ()error {return _g ._fg };
func Errorf (processName ,message string ,arguments ...interface{})error {return _df (_c .Sprintf (message ,arguments ...),processName );};func Wrap (err error ,processName ,message string )error {if _agc ,_b :=err .(*processError );_b {_agc ._d ="";};
_gad :=_df (message ,processName );_gad ._fg =err ;return _gad ;};func Wrapf (err error ,processName ,message string ,arguments ...interface{})error {if _fb ,_gb :=err .(*processError );_gb {_fb ._d ="";};_ab :=_df (_c .Sprintf (message ,arguments ...),processName );
_ab ._fg =err ;return _ab ;};func (_ga *processError )Error ()string {var _af string ;if _ga ._d !=""{_af =_ga ._d ;};_af +="\u0050r\u006f\u0063\u0065\u0073\u0073\u003a "+_ga ._ee ;if _ga ._de !=""{_af +="\u0020\u004d\u0065\u0073\u0073\u0061\u0067\u0065\u003a\u0020"+_ga ._de ;
};if _ga ._fg !=nil {_af +="\u002e\u0020"+_ga ._fg .Error ();};return _af ;};var _ _a .Wrapper =(*processError )(nil );func Error (processName ,message string )error {return _df (message ,processName )};type processError struct{_d string ;_ee string ;_de string ;
_fg error ;};