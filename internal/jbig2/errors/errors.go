//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package errors ;import _c "fmt";func _aa (_cb ,_ac string )*processError {return &processError {_a :"\u005b\u0055\u006e\u0069\u0050\u0044\u0046\u005d",_e :_cb ,_ab :_ac };};func (_agf *processError )Error ()string {var _af string ;if _agf ._a !=""{_af =_agf ._a ;};_af +="\u0050r\u006f\u0063\u0065\u0073\u0073\u003a "+_agf ._ab ;if _agf ._e !=""{_af +="\u0020\u004d\u0065\u0073\u0073\u0061\u0067\u0065\u003a\u0020"+_agf ._e ;};if _agf ._ag !=nil {_af +="\u002e\u0020"+_agf ._ag .Error ();};return _af ;};type processError struct{_a string ;_ab string ;_e string ;_ag error ;};func Error (processName ,message string )error {return _aa (message ,processName )};func Errorf (processName ,message string ,arguments ...interface{})error {return _aa (_c .Sprintf (message ,arguments ...),processName );};func Wrapf (err error ,processName ,message string ,arguments ...interface{})error {if _ee ,_eb :=err .(*processError );_eb {_ee ._a ="";};_f :=_aa (_c .Sprintf (message ,arguments ...),processName );_f ._ag =err ;return _f ;};func Wrap (err error ,processName ,message string )error {if _acc ,_d :=err .(*processError );_d {_acc ._a ="";};_ef :=_aa (message ,processName );_ef ._ag =err ;return _ef ;};