//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package errors ;import (_b "fmt";_e "golang.org/x/xerrors";);func (_aeg *processError )Error ()string {var _f string ;if _aeg ._ca !=""{_f =_aeg ._ca ;};_f +="\u0050r\u006f\u0063\u0065\u0073\u0073\u003a "+_aeg ._ae ;if _aeg ._ec !=""{_f +="\u0020\u004d\u0065\u0073\u0073\u0061\u0067\u0065\u003a\u0020"+_aeg ._ec ;
};if _aeg ._ed !=nil {_f +="\u002e\u0020"+_aeg ._ed .Error ();};return _f ;};func _fg (_aa ,_g string )*processError {return &processError {_ca :"\u005b\u0055\u006e\u0069\u0050\u0044\u0046\u005d",_ec :_aa ,_ae :_g };};func (_d *processError )Unwrap ()error {return _d ._ed };
func Wrap (err error ,processName ,message string )error {if _cd ,_gd :=err .(*processError );_gd {_cd ._ca ="";};_bf :=_fg (message ,processName );_bf ._ed =err ;return _bf ;};func Errorf (processName ,message string ,arguments ...interface{})error {return _fg (_b .Sprintf (message ,arguments ...),processName );
};var _ _e .Wrapper =(*processError )(nil );func Wrapf (err error ,processName ,message string ,arguments ...interface{})error {if _aag ,_gb :=err .(*processError );_gb {_aag ._ca ="";};_fc :=_fg (_b .Sprintf (message ,arguments ...),processName );_fc ._ed =err ;
return _fc ;};type processError struct{_ca string ;_ae string ;_ec string ;_ed error ;};func Error (processName ,message string )error {return _fg (message ,processName )};