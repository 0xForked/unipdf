//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package segments ;import (_d "encoding/binary";_cg "errors";_a "fmt";_eec "github.com/unidoc/unipdf/v3/common";_ce "github.com/unidoc/unipdf/v3/internal/bitwise";_cb "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_fc "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";
_ab "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/arithmetic";_aa "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/huffman";_abe "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/mmr";_eef "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/arithmetic";
_ea "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_ec "github.com/unidoc/unipdf/v3/internal/jbig2/internal";_g "golang.org/x/xerrors";_c "image";_ed "io";_e "math";_ee "strings";_f "time";);func (_gecd *Header )pageSize ()uint {if _gecd .PageAssociation <=255{return 1;
};return 4;};func (_baca *HalftoneRegion )checkInput ()error {if _baca .IsMMREncoded {if _baca .HTemplate !=0{_eec .Log .Debug ("\u0048\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030",_baca .HTemplate );
};if _baca .HSkipEnabled {_eec .Log .Debug ("\u0048\u0053\u006b\u0069\u0070\u0045\u006e\u0061\u0062\u006c\u0065\u0064\u0020\u0030\u0020\u0025\u0076\u0020(\u0073\u0068\u006f\u0075\u006c\u0064\u0020c\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020v\u0061\u006c\u0075\u0065\u0020\u0066\u0061\u006c\u0073\u0065\u0029",_baca .HSkipEnabled );
};};return nil ;};func (_dbcf *TextRegion )readAmountOfSymbolInstances ()error {_gddf ,_feeac :=_dbcf ._gcccf .ReadBits (32);if _feeac !=nil {return _feeac ;};_dbcf .NumberOfSymbolInstances =uint32 (_gddf &_e .MaxUint32 );_ccbg :=_dbcf .RegionInfo .BitmapWidth *_dbcf .RegionInfo .BitmapHeight ;
if _ccbg < _dbcf .NumberOfSymbolInstances {_eec .Log .Debug ("\u004c\u0069\u006d\u0069t\u0069\u006e\u0067\u0020t\u0068\u0065\u0020n\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020d\u0065\u0063\u006f\u0064e\u0064\u0020\u0073\u0079m\u0062\u006f\u006c\u0020\u0069n\u0073\u0074\u0061\u006e\u0063\u0065\u0073 \u0074\u006f\u0020\u006f\u006ee\u0020\u0070\u0065\u0072\u0020\u0070\u0069\u0078\u0065l\u0020\u0028\u0020\u0025\u0064\u0020\u0069\u006e\u0073\u0074\u0065\u0061\u0064\u0020\u006f\u0066\u0020\u0025\u0064\u0029",_ccbg ,_dbcf .NumberOfSymbolInstances );
_dbcf .NumberOfSymbolInstances =_ccbg ;};return nil ;};func (_fdcee *SymbolDictionary )decodeHeightClassCollectiveBitmap (_cbgc int64 ,_bgff ,_cdeg uint32 )(*_fc .Bitmap ,error ){if _cbgc ==0{_efbc :=_fc .New (int (_cdeg ),int (_bgff ));var (_adbb byte ;
_eabf error ;);for _cgea :=0;_cgea < len (_efbc .Data );_cgea ++{_adbb ,_eabf =_fdcee ._aafe .ReadByte ();if _eabf !=nil {return nil ,_eabf ;};if _eabf =_efbc .SetByte (_cgea ,_adbb );_eabf !=nil {return nil ,_eabf ;};};return _efbc ,nil ;};if _fdcee ._caed ==nil {_fdcee ._caed =NewGenericRegion (_fdcee ._aafe );
};_fdcee ._caed .setParameters (true ,_fdcee ._aafe .AbsolutePosition (),_cbgc ,_bgff ,_cdeg );_becf ,_ebbf :=_fdcee ._caed .GetRegionBitmap ();if _ebbf !=nil {return nil ,_ebbf ;};return _becf ,nil ;};func (_cdea *SymbolDictionary )setCodingStatistics ()error {if _cdea ._fbab ==nil {_cdea ._fbab =_ab .NewStats (512,1);
};if _cdea ._dfeg ==nil {_cdea ._dfeg =_ab .NewStats (512,1);};if _cdea ._fafa ==nil {_cdea ._fafa =_ab .NewStats (512,1);};if _cdea ._bfea ==nil {_cdea ._bfea =_ab .NewStats (512,1);};if _cdea ._ddede ==nil {_cdea ._ddede =_ab .NewStats (512,1);};if _cdea .UseRefinementAggregation &&_cdea ._gfebd ==nil {_cdea ._gfebd =_ab .NewStats (1<<uint (_cdea ._dcba ),1);
_cdea ._cccd =_ab .NewStats (512,1);_cdea ._cfab =_ab .NewStats (512,1);};if _cdea ._adbg ==nil {_cdea ._adbg =_ab .NewStats (65536,1);};if _cdea ._cagb ==nil {var _fbee error ;_cdea ._cagb ,_fbee =_ab .New (_cdea ._aafe );if _fbee !=nil {return _fbee ;
};};return nil ;};func (_gdff *Header )writeFlags (_ffed _ce .BinaryWriter )(_becg error ){const _agca ="\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065F\u006c\u0061\u0067\u0073";_dabfc :=byte (_gdff .Type );if _becg =_ffed .WriteByte (_dabfc );
_becg !=nil {return _ea .Wrap (_becg ,_agca ,"\u0077\u0072\u0069ti\u006e\u0067\u0020\u0073\u0065\u0067\u006d\u0065\u006et\u0020t\u0079p\u0065 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064");};if !_gdff .RetainFlag &&!_gdff .PageAssociationFieldSize {return nil ;
};if _becg =_ffed .SkipBits (-8);_becg !=nil {return _ea .Wrap (_becg ,_agca ,"\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0062\u0061\u0063\u006b\u0020\u0074\u0068\u0065\u0020\u0062\u0069\u0074\u0073\u0020\u0066\u0061il\u0065\u0064");};var _efag int ;
if _gdff .RetainFlag {_efag =1;};if _becg =_ffed .WriteBit (_efag );_becg !=nil {return _ea .Wrap (_becg ,_agca ,"\u0072\u0065\u0074\u0061in\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067\u0073");};_efag =0;if _gdff .PageAssociationFieldSize {_efag =1;
};if _becg =_ffed .WriteBit (_efag );_becg !=nil {return _ea .Wrap (_becg ,_agca ,"p\u0061\u0067\u0065\u0020as\u0073o\u0063\u0069\u0061\u0074\u0069o\u006e\u0020\u0066\u006c\u0061\u0067");};_ffed .FinishByte ();return nil ;};func (_baff *RegionSegment )String ()string {_afab :=&_ee .Builder {};
_afab .WriteString ("\u0009[\u0052E\u0047\u0049\u004f\u004e\u0020S\u0045\u0047M\u0045\u004e\u0054\u005d\u000a");_afab .WriteString (_a .Sprintf ("\t\u0009\u002d\u0020\u0042\u0069\u0074m\u0061\u0070\u0020\u0028\u0077\u0069d\u0074\u0068\u002c\u0020\u0068\u0065\u0069g\u0068\u0074\u0029\u0020\u005b\u0025\u0064\u0078\u0025\u0064]\u000a",_baff .BitmapWidth ,_baff .BitmapHeight ));
_afab .WriteString (_a .Sprintf ("\u0009\u0009\u002d\u0020L\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0028\u0078,\u0079)\u003a\u0020\u005b\u0025\u0064\u002c\u0025d\u005d\u000a",_baff .XLocation ,_baff .YLocation ));_afab .WriteString (_a .Sprintf ("\t\u0009\u002d\u0020\u0043\u006f\u006db\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070e\u0072\u0061\u0074o\u0072:\u0020\u0025\u0073",_baff .CombinaionOperator ));
return _afab .String ();};func (_fce *GenericRefinementRegion )getGrReference ()(*_fc .Bitmap ,error ){segments :=_fce ._ae .RTSegments ;if len (segments )==0{return nil ,_cg .New ("\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0065\u0078is\u0074\u0073");
};_eag ,_ede :=segments [0].GetSegmentData ();if _ede !=nil {return nil ,_ede ;};_dd ,_gb :=_eag .(Regioner );if !_gb {return nil ,_a .Errorf ("\u0072\u0065\u0066\u0065\u0072r\u0065\u0064\u0020\u0074\u006f\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_eag );
};return _dd .GetRegionBitmap ();};func (_gggb *SymbolDictionary )decodeDirectlyThroughGenericRegion (_gcac ,_fac uint32 )error {if _gggb ._caed ==nil {_gggb ._caed =NewGenericRegion (_gggb ._aafe );};_gggb ._caed .setParametersWithAt (false ,byte (_gggb .SdTemplate ),false ,false ,_gggb .SdATX ,_gggb .SdATY ,_gcac ,_fac ,_gggb ._adbg ,_gggb ._cagb );
return _gggb .addSymbol (_gggb ._caed );};func (_ead *SymbolDictionary )retrieveImportSymbols ()error {for _ ,_bffee :=range _ead .Header .RTSegments {if _bffee .Type ==0{_cfcda ,_dfgf :=_bffee .GetSegmentData ();if _dfgf !=nil {return _dfgf ;};_aacf ,_fbfb :=_cfcda .(*SymbolDictionary );
if !_fbfb {return _a .Errorf ("\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0044\u0061\u0074a\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u003a\u0020%\u0054",_cfcda );
};_dfcd ,_dfgf :=_aacf .GetDictionary ();if _dfgf !=nil {return _a .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064 \u0073\u0065\u0067m\u0065\u006e\u0074 \u0077\u0069t\u0068\u0020\u0069\u006e\u0064\u0065x\u003a %\u0064\u0020\u0067\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0073",_bffee .SegmentNumber ,_dfgf .Error ());
};_ead ._ffdg =append (_ead ._ffdg ,_dfcd ...);_ead ._gca +=_aacf .NumberOfExportedSymbols ;};};return nil ;};func (_dgae *GenericRegion )setParametersMMR (_ggge bool ,_gaaa ,_eab int64 ,_geaa ,_bdeg uint32 ,_ccbe byte ,_cdcd ,_cag bool ,_eda ,_bdb []int8 ){_dgae .DataOffset =_gaaa ;
_dgae .DataLength =_eab ;_dgae .RegionSegment =&RegionSegment {};_dgae .RegionSegment .BitmapHeight =_geaa ;_dgae .RegionSegment .BitmapWidth =_bdeg ;_dgae .GBTemplate =_ccbe ;_dgae .IsMMREncoded =_ggge ;_dgae .IsTPGDon =_cdcd ;_dgae .GBAtX =_eda ;_dgae .GBAtY =_bdb ;
};func (_fgd *GenericRefinementRegion )getPixel (_badd *_fc .Bitmap ,_ebc ,_gae int )int {if _ebc < 0||_ebc >=_badd .Width {return 0;};if _gae < 0||_gae >=_badd .Height {return 0;};if _badd .GetPixel (_ebc ,_gae ){return 1;};return 0;};func (_bca *Header )readSegmentPageAssociation (_afdg Documenter ,_cgca *_ce .Reader ,_cgbg uint64 ,_gdgb ...int )(_gaee error ){const _bcfd ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074P\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061t\u0069\u006f\u006e";
if !_bca .PageAssociationFieldSize {_ecd ,_abf :=_cgca .ReadBits (8);if _abf !=nil {return _ea .Wrap (_abf ,_bcfd ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_bca .PageAssociation =int (_ecd &0xFF);}else {_cced ,_geee :=_cgca .ReadBits (32);
if _geee !=nil {return _ea .Wrap (_geee ,_bcfd ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_bca .PageAssociation =int (_cced &_e .MaxInt32 );};if _cgbg ==0{return nil ;};if _bca .PageAssociation !=0{_geaae ,_fabf :=_afdg .GetPage (_bca .PageAssociation );
if _fabf !=nil {return _ea .Wrap (_fabf ,_bcfd ,"\u0061s\u0073\u006f\u0063\u0069a\u0074\u0065\u0064\u0020\u0070a\u0067e\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006ed");};var _eccf int ;for _eba :=uint64 (0);_eba < _cgbg ;_eba ++{_eccf =_gdgb [_eba ];
_bca .RTSegments [_eba ],_fabf =_geaae .GetSegment (_eccf );if _fabf !=nil {var _dbgf error ;_bca .RTSegments [_eba ],_dbgf =_afdg .GetGlobalSegment (_eccf );if _dbgf !=nil {return _ea .Wrapf (_fabf ,_bcfd ,"\u0072\u0065\u0066\u0065\u0072\u0065n\u0063\u0065\u0020s\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064\u0020\u0061\u0074\u0020pa\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0072\u0020\u0069\u006e\u0020\u0067\u006c\u006f\u0062\u0061\u006c\u0073",_bca .PageAssociation );
};};};return nil ;};for _dgbc :=uint64 (0);_dgbc < _cgbg ;_dgbc ++{_bca .RTSegments [_dgbc ],_gaee =_afdg .GetGlobalSegment (_gdgb [_dgbc ]);if _gaee !=nil {return _ea .Wrapf (_gaee ,_bcfd ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u003a\u0020\u0027\u0025d\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064",_gdgb [_dgbc ]);
};};return nil ;};func (_beaf *TextRegion )GetRegionBitmap ()(*_fc .Bitmap ,error ){if _beaf .RegionBitmap !=nil {return _beaf .RegionBitmap ,nil ;};if !_beaf .IsHuffmanEncoded {if _ggac :=_beaf .setCodingStatistics ();_ggac !=nil {return nil ,_ggac ;};
};if _ccga :=_beaf .createRegionBitmap ();_ccga !=nil {return nil ,_ccga ;};if _affg :=_beaf .decodeSymbolInstances ();_affg !=nil {return nil ,_affg ;};return _beaf .RegionBitmap ,nil ;};type templater interface{form (_gbcb ,_bga ,_faa ,_ebce ,_bgc int16 )int16 ;
setIndex (_deb *_ab .DecoderStats );};func (_ebff *GenericRegion )overrideAtTemplate3 (_cecfd ,_bgdd ,_egdd ,_ggf ,_ece int )int {_cecfd &=0x3EF;if _ebff .GBAtY [0]==0&&_ebff .GBAtX [0]>=-int8 (_ece ){_cecfd |=(_ggf >>uint (7-(int8 (_ece )+_ebff .GBAtX [0]))&0x1)<<4;
}else {_cecfd |=int (_ebff .getPixel (_bgdd +int (_ebff .GBAtX [0]),_egdd +int (_ebff .GBAtY [0])))<<4;};return _cecfd ;};func (_acb *HalftoneRegion )computeX (_afee ,_cccg int )int {return _acb .shiftAndFill (int (_acb .HGridX )+_afee *int (_acb .HRegionY )+_cccg *int (_acb .HRegionX ));
};func (_eded *PageInformationSegment )encodeFlags (_fabfb _ce .BinaryWriter )(_ccde error ){const _aaafd ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _ccde =_fabfb .SkipBits (1);_ccde !=nil {return _ea .Wrap (_ccde ,_aaafd ,"\u0072\u0065\u0073e\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074");
};var _eccg int ;if _eded .CombinationOperatorOverrideAllowed (){_eccg =1;};if _ccde =_fabfb .WriteBit (_eccg );_ccde !=nil {return _ea .Wrap (_ccde ,_aaafd ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0064\u0065\u006e");
};_eccg =0;if _eded ._gffc {_eccg =1;};if _ccde =_fabfb .WriteBit (_eccg );_ccde !=nil {return _ea .Wrap (_ccde ,_aaafd ,"\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0061\u0075\u0078i\u006ci\u0061r\u0079\u0020\u0062\u0075\u0066\u0066\u0065r");};if _ccde =_fabfb .WriteBit ((int (_eded ._faf )>>1)&0x01);
_ccde !=nil {return _ea .Wrap (_ccde ,_aaafd ,"\u0063\u006f\u006d\u0062\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006f\u0070\u0065\u0072\u0061\u0074o\u0072\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0062\u0069\u0074");};if _ccde =_fabfb .WriteBit (int (_eded ._faf )&0x01);
_ccde !=nil {return _ea .Wrap (_ccde ,_aaafd ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0062\u0069\u0074");};_eccg =int (_eded .DefaultPixelValue );
if _ccde =_fabfb .WriteBit (_eccg );_ccde !=nil {return _ea .Wrap (_ccde ,_aaafd ,"\u0064e\u0066\u0061\u0075\u006c\u0074\u0020\u0070\u0061\u0067\u0065\u0020p\u0069\u0078\u0065\u006c\u0020\u0076\u0061\u006c\u0075\u0065");};_eccg =0;if _eded ._abacd {_eccg =1;
};if _ccde =_fabfb .WriteBit (_eccg );_ccde !=nil {return _ea .Wrap (_ccde ,_aaafd ,"\u0063\u006f\u006e\u0074ai\u006e\u0073\u0020\u0072\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074");};_eccg =0;if _eded .IsLossless {_eccg =1;};if _ccde =_fabfb .WriteBit (_eccg );
_ccde !=nil {return _ea .Wrap (_ccde ,_aaafd ,"p\u0061\u0067\u0065\u0020\u0069\u0073 \u0065\u0076\u0065\u006e\u0074\u0075\u0061\u006c\u006cy\u0020\u006c\u006fs\u0073l\u0065\u0073\u0073");};return nil ;};func (_edeg *template1 )setIndex (_aebf *_ab .DecoderStats ){_aebf .SetIndex (0x080)};
func (_abfc *Header )writeSegmentNumber (_eabd _ce .BinaryWriter )(_dded int ,_gbcc error ){_ecbe :=make ([]byte ,4);_d .BigEndian .PutUint32 (_ecbe ,_abfc .SegmentNumber );if _dded ,_gbcc =_eabd .Write (_ecbe );_gbcc !=nil {return 0,_ea .Wrap (_gbcc ,"\u0048e\u0061\u0064\u0065\u0072.\u0077\u0072\u0069\u0074\u0065S\u0065g\u006de\u006e\u0074\u004e\u0075\u006d\u0062\u0065r","");
};return _dded ,nil ;};func (_cfac *TextRegion )setContexts (_cegg *_ab .DecoderStats ,_fegf *_ab .DecoderStats ,_cacf *_ab .DecoderStats ,_bbfb *_ab .DecoderStats ,_geabd *_ab .DecoderStats ,_ffc *_ab .DecoderStats ,_eeada *_ab .DecoderStats ,_fdde *_ab .DecoderStats ,_deeg *_ab .DecoderStats ,_aegag *_ab .DecoderStats ){_cfac ._bdfe =_fegf ;
_cfac ._gdgbc =_cacf ;_cfac ._agdgc =_bbfb ;_cfac ._ceg =_geabd ;_cfac ._baeg =_eeada ;_cfac ._ecdg =_fdde ;_cfac ._fdaa =_ffc ;_cfac ._eeffd =_deeg ;_cfac ._ebcc =_aegag ;_cfac ._bece =_cegg ;};func NewGenericRegion (r *_ce .Reader )*GenericRegion {return &GenericRegion {RegionSegment :NewRegionSegment (r ),_fgaf :r };
};type TableSegment struct{_bfac *_ce .Reader ;_ceca int32 ;_fbgae int32 ;_ecg int32 ;_fgagb int32 ;_adc int32 ;};func (_agc *GenericRegion )String ()string {_ced :=&_ee .Builder {};_ced .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");
_ced .WriteString (_agc .RegionSegment .String ()+"\u000a");_ced .WriteString (_a .Sprintf ("\u0009\u002d\u0020Us\u0065\u0045\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_agc .UseExtTemplates ));_ced .WriteString (_a .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0044\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_agc .IsTPGDon ));
_ced .WriteString (_a .Sprintf ("\u0009-\u0020G\u0042\u0054\u0065\u006d\u0070l\u0061\u0074e\u003a\u0020\u0025\u0064\u000a",_agc .GBTemplate ));_ced .WriteString (_a .Sprintf ("\t\u002d \u0049\u0073\u004d\u004d\u0052\u0045\u006e\u0063o\u0064\u0065\u0064\u003a %\u0076\u000a",_agc .IsMMREncoded ));
_ced .WriteString (_a .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_agc .GBAtX ));_ced .WriteString (_a .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_agc .GBAtY ));
_ced .WriteString (_a .Sprintf ("\t\u002d \u0047\u0042\u0041\u0074\u004f\u0076\u0065\u0072r\u0069\u0064\u0065\u003a %\u0076\u000a",_agc .GBAtOverride ));return _ced .String ();};type EncodeInitializer interface{InitEncode ();};func (_bbbg *GenericRegion )decodeTemplate0b (_feg ,_dbda ,_eecc int ,_ggaf ,_cgcca int )(_fgdb error ){const _dced ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0062";
var (_ebg ,_fdc int ;_cdcc ,_fcdg int ;_aggc byte ;_ggdg int ;);if _feg >=1{_aggc ,_fgdb =_bbbg .Bitmap .GetByte (_cgcca );if _fgdb !=nil {return _ea .Wrap (_fgdb ,_dced ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_cdcc =int (_aggc );};if _feg >=2{_aggc ,_fgdb =_bbbg .Bitmap .GetByte (_cgcca -_bbbg .Bitmap .RowStride );
if _fgdb !=nil {return _ea .Wrap (_fgdb ,_dced ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_fcdg =int (_aggc )<<6;};_ebg =(_cdcc &0xf0)|(_fcdg &0x3800);for _cfda :=0;_cfda < _eecc ;_cfda =_ggdg {var (_bcd byte ;_ggde int ;);_ggdg =_cfda +8;if _baf :=_dbda -_cfda ;
_baf > 8{_ggde =8;}else {_ggde =_baf ;};if _feg > 0{_cdcc <<=8;if _ggdg < _dbda {_aggc ,_fgdb =_bbbg .Bitmap .GetByte (_cgcca +1);if _fgdb !=nil {return _ea .Wrap (_fgdb ,_dced ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_cdcc |=int (_aggc );
};};if _feg > 1{_fcdg <<=8;if _ggdg < _dbda {_aggc ,_fgdb =_bbbg .Bitmap .GetByte (_cgcca -_bbbg .Bitmap .RowStride +1);if _fgdb !=nil {return _ea .Wrap (_fgdb ,_dced ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_fcdg |=int (_aggc )<<6;};};for _gebc :=0;
_gebc < _ggde ;_gebc ++{_fbd :=uint (7-_gebc );if _bbbg ._ceb {_fdc =_bbbg .overrideAtTemplate0b (_ebg ,_cfda +_gebc ,_feg ,int (_bcd ),_gebc ,int (_fbd ));_bbbg ._badg .SetIndex (int32 (_fdc ));}else {_bbbg ._badg .SetIndex (int32 (_ebg ));};var _cbfb int ;
_cbfb ,_fgdb =_bbbg ._dff .DecodeBit (_bbbg ._badg );if _fgdb !=nil {return _ea .Wrap (_fgdb ,_dced ,"");};_bcd |=byte (_cbfb <<_fbd );_ebg =((_ebg &0x7bf7)<<1)|_cbfb |((_cdcc >>_fbd )&0x10)|((_fcdg >>_fbd )&0x800);};if _afcd :=_bbbg .Bitmap .SetByte (_ggaf ,_bcd );
_afcd !=nil {return _ea .Wrap (_afcd ,_dced ,"");};_ggaf ++;_cgcca ++;};return nil ;};func (_afga *GenericRegion )decodeSLTP ()(int ,error ){switch _afga .GBTemplate {case 0:_afga ._badg .SetIndex (0x9B25);case 1:_afga ._badg .SetIndex (0x795);case 2:_afga ._badg .SetIndex (0xE5);
case 3:_afga ._badg .SetIndex (0x195);};return _afga ._dff .DecodeBit (_afga ._badg );};func (_acag *GenericRegion )writeGBAtPixels (_bda _ce .BinaryWriter )(_gee int ,_efd error ){const _cedf ="\u0077r\u0069t\u0065\u0047\u0042\u0041\u0074\u0050\u0069\u0078\u0065\u006c\u0073";
if _acag .UseMMR {return 0,nil ;};_ggea :=1;if _acag .GBTemplate ==0{_ggea =4;}else if _acag .UseExtTemplates {_ggea =12;};if len (_acag .GBAtX )!=_ggea {return 0,_ea .Errorf (_cedf ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0058\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};if len (_acag .GBAtY )!=_ggea {return 0,_ea .Errorf (_cedf ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0059\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};for _adbd :=0;_adbd < _ggea ;_adbd ++{if _efd =_bda .WriteByte (byte (_acag .GBAtX [_adbd ]));_efd !=nil {return _gee ,_ea .Wrap (_efd ,_cedf ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0058");};_gee ++;if _efd =_bda .WriteByte (byte (_acag .GBAtY [_adbd ]));
_efd !=nil {return _gee ,_ea .Wrap (_efd ,_cedf ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0059");};_gee ++;};return _gee ,nil ;};func (_cbff *TableSegment )HtOOB ()int32 {return _cbff ._ceca };func (_fbeee *SymbolDictionary )setRetainedCodingContexts (_effb *SymbolDictionary ){_fbeee ._cagb =_effb ._cagb ;
_fbeee .IsHuffmanEncoded =_effb .IsHuffmanEncoded ;_fbeee .UseRefinementAggregation =_effb .UseRefinementAggregation ;_fbeee .SdTemplate =_effb .SdTemplate ;_fbeee .SdrTemplate =_effb .SdrTemplate ;_fbeee .SdATX =_effb .SdATX ;_fbeee .SdATY =_effb .SdATY ;
_fbeee .SdrATX =_effb .SdrATX ;_fbeee .SdrATY =_effb .SdrATY ;_fbeee ._adbg =_effb ._adbg ;};func (_adgc *PageInformationSegment )readContainsRefinement ()error {_ebb ,_efdf :=_adgc ._bfc .ReadBit ();if _efdf !=nil {return _efdf ;};if _ebb ==1{_adgc ._abacd =true ;
};return nil ;};func (_bbf *PatternDictionary )readIsMMREncoded ()error {_aaf ,_dbge :=_bbf ._ffef .ReadBit ();if _dbge !=nil {return _dbge ;};if _aaf !=0{_bbf .IsMMREncoded =true ;};return nil ;};func (_cgc *GenericRegion )Encode (w _ce .BinaryWriter )(_fdf int ,_ddg error ){const _ccg ="G\u0065n\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069o\u006e\u002e\u0045\u006eco\u0064\u0065";
if _cgc .Bitmap ==nil {return 0,_ea .Error (_ccg ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};_abad ,_ddg :=_cgc .RegionSegment .Encode (w );if _ddg !=nil {return 0,_ea .Wrap (_ddg ,_ccg ,"\u0052\u0065\u0067\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};_fdf +=_abad ;if _ddg =w .SkipBits (4);_ddg !=nil {return _fdf ,_ea .Wrap (_ddg ,_ccg ,"\u0073k\u0069p\u0020\u0072\u0065\u0073\u0065r\u0076\u0065d\u0020\u0062\u0069\u0074\u0073");};var _agb int ;if _cgc .IsTPGDon {_agb =1;};if _ddg =w .WriteBit (_agb );
_ddg !=nil {return _fdf ,_ea .Wrap (_ddg ,_ccg ,"\u0074\u0070\u0067\u0064\u006f\u006e");};_agb =0;if _ddg =w .WriteBit (int (_cgc .GBTemplate >>1)&0x01);_ddg !=nil {return _fdf ,_ea .Wrap (_ddg ,_ccg ,"f\u0069r\u0073\u0074\u0020\u0067\u0062\u0074\u0065\u006dp\u006c\u0061\u0074\u0065 b\u0069\u0074");
};if _ddg =w .WriteBit (int (_cgc .GBTemplate )&0x01);_ddg !=nil {return _fdf ,_ea .Wrap (_ddg ,_ccg ,"s\u0065\u0063\u006f\u006ed \u0067b\u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u0062\u0069\u0074");};if _cgc .UseMMR {_agb =1;};if _ddg =w .WriteBit (_agb );
_ddg !=nil {return _fdf ,_ea .Wrap (_ddg ,_ccg ,"u\u0073\u0065\u0020\u004d\u004d\u0052\u0020\u0062\u0069\u0074");};_fdf ++;if _abad ,_ddg =_cgc .writeGBAtPixels (w );_ddg !=nil {return _fdf ,_ea .Wrap (_ddg ,_ccg ,"");};_fdf +=_abad ;_gbaf :=_eef .New ();
if _ddg =_gbaf .EncodeBitmap (_cgc .Bitmap ,_cgc .IsTPGDon );_ddg !=nil {return _fdf ,_ea .Wrap (_ddg ,_ccg ,"");};_gbaf .Final ();var _fad int64 ;if _fad ,_ddg =_gbaf .WriteTo (w );_ddg !=nil {return _fdf ,_ea .Wrap (_ddg ,_ccg ,"");};_fdf +=int (_fad );
return _fdf ,nil ;};func (_ddgcd *PatternDictionary )GetDictionary ()([]*_fc .Bitmap ,error ){if _ddgcd .Patterns !=nil {return _ddgcd .Patterns ,nil ;};if !_ddgcd .IsMMREncoded {_ddgcd .setGbAtPixels ();};_eebf :=NewGenericRegion (_ddgcd ._ffef );_eebf .setParametersMMR (_ddgcd .IsMMREncoded ,_ddgcd .DataOffset ,_ddgcd .DataLength ,uint32 (_ddgcd .HdpHeight ),(_ddgcd .GrayMax +1)*uint32 (_ddgcd .HdpWidth ),_ddgcd .HDTemplate ,false ,false ,_ddgcd .GBAtX ,_ddgcd .GBAtY );
_gac ,_bbdc :=_eebf .GetRegionBitmap ();if _bbdc !=nil {return nil ,_bbdc ;};if _bbdc =_ddgcd .extractPatterns (_gac );_bbdc !=nil {return nil ,_bbdc ;};return _ddgcd .Patterns ,nil ;};func (_egcd *SymbolDictionary )huffDecodeBmSize ()(int64 ,error ){if _egcd ._fef ==nil {var (_gbbd int ;
_edab error ;);if _egcd .SdHuffDecodeHeightSelection ==3{_gbbd ++;};if _egcd .SdHuffDecodeWidthSelection ==3{_gbbd ++;};_egcd ._fef ,_edab =_egcd .getUserTable (_gbbd );if _edab !=nil {return 0,_edab ;};};return _egcd ._fef .Decode (_egcd ._aafe );};func (_gaf *GenericRefinementRegion )setParameters (_eae *_ab .DecoderStats ,_gccg *_ab .Decoder ,_aefe int8 ,_gbf ,_cefd uint32 ,_ebcd *_fc .Bitmap ,_cgbb ,_cfe int32 ,_aab bool ,_dda []int8 ,_bbga []int8 ){_eec .Log .Trace ("\u005b\u0047\u0045NE\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052E\u0047I\u004fN\u005d \u0073\u0065\u0074\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073");
if _eae !=nil {_gaf ._fb =_eae ;};if _gccg !=nil {_gaf ._eg =_gccg ;};_gaf .TemplateID =_aefe ;_gaf .RegionInfo .BitmapWidth =_gbf ;_gaf .RegionInfo .BitmapHeight =_cefd ;_gaf .ReferenceBitmap =_ebcd ;_gaf .ReferenceDX =_cgbb ;_gaf .ReferenceDY =_cfe ;
_gaf .IsTPGROn =_aab ;_gaf .GrAtX =_dda ;_gaf .GrAtY =_bbga ;_gaf .RegionBitmap =nil ;_eec .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073 f\u0069\u006ei\u0073\u0068\u0065\u0064\u002e\u0020\u0025\u0073",_gaf );
};var (_ Regioner =&TextRegion {};_ Segmenter =&TextRegion {};);func (_ggfe *PatternDictionary )Init (h *Header ,r *_ce .Reader )error {_ggfe ._ffef =r ;return _ggfe .parseHeader ();};func (_gace *SymbolDictionary )InitEncode (symbols *_fc .Bitmaps ,symbolList []int ,symbolMap map[int ]int ,unborderSymbols bool )error {const _gagd ="S\u0079\u006d\u0062\u006f\u006c\u0044i\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002eI\u006e\u0069\u0074E\u006ec\u006f\u0064\u0065";
_gace .SdATX =[]int8 {3,-3,2,-2};_gace .SdATY =[]int8 {-1,-1,-2,-2};_gace ._bbabf =symbols ;_gace ._dbbb =make ([]int ,len (symbolList ));copy (_gace ._dbbb ,symbolList );if len (_gace ._dbbb )!=_gace ._bbabf .Size (){return _ea .Error (_gagd ,"s\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0061\u006e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u004ci\u0073\u0074\u0020\u006f\u0066\u0020\u0064\u0069\u0066\u0066er\u0065\u006e\u0074 \u0073i\u007a\u0065");
};_gace .NumberOfNewSymbols =uint32 (symbols .Size ());_gace .NumberOfExportedSymbols =uint32 (symbols .Size ());_gace ._cfgc =symbolMap ;_gace ._ababf =unborderSymbols ;return nil ;};func (_fbbbb *TextRegion )decodeRdx ()(int64 ,error ){const _ccf ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064x";
if _fbbbb .IsHuffmanEncoded {if _fbbbb .SbHuffRDX ==3{if _fbbbb ._ebac ==nil {var (_dbfe int ;_efab error ;);if _fbbbb .SbHuffFS ==3{_dbfe ++;};if _fbbbb .SbHuffDS ==3{_dbfe ++;};if _fbbbb .SbHuffDT ==3{_dbfe ++;};if _fbbbb .SbHuffRDWidth ==3{_dbfe ++;
};if _fbbbb .SbHuffRDHeight ==3{_dbfe ++;};_fbbbb ._ebac ,_efab =_fbbbb .getUserTable (_dbfe );if _efab !=nil {return 0,_ea .Wrap (_efab ,_ccf ,"");};};return _fbbbb ._ebac .Decode (_fbbbb ._gcccf );};_cded ,_cfca :=_aa .GetStandardTable (14+int (_fbbbb .SbHuffRDX ));
if _cfca !=nil {return 0,_ea .Wrap (_cfca ,_ccf ,"");};return _cded .Decode (_fbbbb ._gcccf );};_eead ,_bfba :=_fbbbb ._cfabc .DecodeInt (_fbbbb ._eeffd );if _bfba !=nil {return 0,_ea .Wrap (_bfba ,_ccf ,"");};return int64 (_eead ),nil ;};var _ _aa .BasicTabler =&TableSegment {};
type Segmenter interface{Init (_faabf *Header ,_adbda *_ce .Reader )error ;};func (_gagga *SymbolDictionary )encodeFlags (_cdde _ce .BinaryWriter )(_dcbac int ,_agcg error ){const _edgb ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _agcg =_cdde .SkipBits (3);
_agcg !=nil {return 0,_ea .Wrap (_agcg ,_edgb ,"\u0065\u006d\u0070\u0074\u0079\u0020\u0062\u0069\u0074\u0073");};var _fcag int ;if _gagga .SdrTemplate > 0{_fcag =1;};if _agcg =_cdde .WriteBit (_fcag );_agcg !=nil {return _dcbac ,_ea .Wrap (_agcg ,_edgb ,"s\u0064\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");
};_fcag =0;if _gagga .SdTemplate > 1{_fcag =1;};if _agcg =_cdde .WriteBit (_fcag );_agcg !=nil {return _dcbac ,_ea .Wrap (_agcg ,_edgb ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_fcag =0;if _gagga .SdTemplate ==1||_gagga .SdTemplate ==3{_fcag =1;
};if _agcg =_cdde .WriteBit (_fcag );_agcg !=nil {return _dcbac ,_ea .Wrap (_agcg ,_edgb ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_fcag =0;if _gagga ._ded {_fcag =1;};if _agcg =_cdde .WriteBit (_fcag );_agcg !=nil {return _dcbac ,_ea .Wrap (_agcg ,_edgb ,"\u0063\u006f\u0064in\u0067\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0065\u0064");
};_fcag =0;if _gagga ._febf {_fcag =1;};if _agcg =_cdde .WriteBit (_fcag );_agcg !=nil {return _dcbac ,_ea .Wrap (_agcg ,_edgb ,"\u0063\u006f\u0064\u0069ng\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0075\u0073\u0065\u0064");};_fcag =0;if _gagga .SdHuffAggInstanceSelection {_fcag =1;
};if _agcg =_cdde .WriteBit (_fcag );_agcg !=nil {return _dcbac ,_ea .Wrap (_agcg ,_edgb ,"\u0073\u0064\u0048\u0075\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074");};_fcag =int (_gagga .SdHuffBMSizeSelection );if _agcg =_cdde .WriteBit (_fcag );
_agcg !=nil {return _dcbac ,_ea .Wrap (_agcg ,_edgb ,"\u0073\u0064\u0048u\u0066\u0066\u0042\u006d\u0053\u0069\u007a\u0065");};_fcag =0;if _gagga .SdHuffDecodeWidthSelection > 1{_fcag =1;};if _agcg =_cdde .WriteBit (_fcag );_agcg !=nil {return _dcbac ,_ea .Wrap (_agcg ,_edgb ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");
};_fcag =0;switch _gagga .SdHuffDecodeWidthSelection {case 1,3:_fcag =1;};if _agcg =_cdde .WriteBit (_fcag );_agcg !=nil {return _dcbac ,_ea .Wrap (_agcg ,_edgb ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_fcag =0;if _gagga .SdHuffDecodeHeightSelection > 1{_fcag =1;
};if _agcg =_cdde .WriteBit (_fcag );_agcg !=nil {return _dcbac ,_ea .Wrap (_agcg ,_edgb ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_fcag =0;switch _gagga .SdHuffDecodeHeightSelection {case 1,3:_fcag =1;};if _agcg =_cdde .WriteBit (_fcag );
_agcg !=nil {return _dcbac ,_ea .Wrap (_agcg ,_edgb ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_fcag =0;if _gagga .UseRefinementAggregation {_fcag =1;};if _agcg =_cdde .WriteBit (_fcag );_agcg !=nil {return _dcbac ,_ea .Wrap (_agcg ,_edgb ,"\u0073\u0064\u0052\u0065\u0066\u0041\u0067\u0067");
};_fcag =0;if _gagga .IsHuffmanEncoded {_fcag =1;};if _agcg =_cdde .WriteBit (_fcag );_agcg !=nil {return _dcbac ,_ea .Wrap (_agcg ,_edgb ,"\u0073\u0064\u0048\u0075\u0066\u0066");};return 2,nil ;};func (_bebb *Header )readHeaderFlags ()error {const _dfbg ="\u0072e\u0061d\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006c\u0061\u0067\u0073";
_ebgcf ,_bfbe :=_bebb .Reader .ReadBit ();if _bfbe !=nil {return _ea .Wrap (_bfbe ,_dfbg ,"r\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067");};if _ebgcf !=0{_bebb .RetainFlag =true ;};_ebgcf ,_bfbe =_bebb .Reader .ReadBit ();if _bfbe !=nil {return _ea .Wrap (_bfbe ,_dfbg ,"\u0070\u0061g\u0065\u0020\u0061s\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e");
};if _ebgcf !=0{_bebb .PageAssociationFieldSize =true ;};_cage ,_bfbe :=_bebb .Reader .ReadBits (6);if _bfbe !=nil {return _ea .Wrap (_bfbe ,_dfbg ,"\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065");};_bebb .Type =Type (int (_cage ));
return nil ;};func (_efgf *Header )writeSegmentPageAssociation (_gfbf _ce .BinaryWriter )(_fed int ,_gebg error ){const _bdba ="w\u0072\u0069\u0074\u0065\u0053\u0065g\u006d\u0065\u006e\u0074\u0050\u0061\u0067\u0065\u0041s\u0073\u006f\u0063i\u0061t\u0069\u006f\u006e";
if _efgf .pageSize ()!=4{if _gebg =_gfbf .WriteByte (byte (_efgf .PageAssociation ));_gebg !=nil {return 0,_ea .Wrap (_gebg ,_bdba ,"\u0070\u0061\u0067\u0065\u0053\u0069\u007a\u0065\u0020\u0021\u003d\u0020\u0034");};return 1,nil ;};_egb :=make ([]byte ,4);
_d .BigEndian .PutUint32 (_egb ,uint32 (_efgf .PageAssociation ));if _fed ,_gebg =_gfbf .Write (_egb );_gebg !=nil {return 0,_ea .Wrap (_gebg ,_bdba ,"\u0034 \u0062y\u0074\u0065\u0020\u0070\u0061g\u0065\u0020n\u0075\u006d\u0062\u0065\u0072");};return _fed ,nil ;
};func (_abeca *TextRegion )decodeDT ()(_cceb int64 ,_cggc error ){if _abeca .IsHuffmanEncoded {if _abeca .SbHuffDT ==3{_cceb ,_cggc =_abeca ._ggba .Decode (_abeca ._gcccf );if _cggc !=nil {return 0,_cggc ;};}else {var _dbbg _aa .Tabler ;_dbbg ,_cggc =_aa .GetStandardTable (11+int (_abeca .SbHuffDT ));
if _cggc !=nil {return 0,_cggc ;};_cceb ,_cggc =_dbbg .Decode (_abeca ._gcccf );if _cggc !=nil {return 0,_cggc ;};};}else {var _afae int32 ;_afae ,_cggc =_abeca ._cfabc .DecodeInt (_abeca ._bdfe );if _cggc !=nil {return ;};_cceb =int64 (_afae );};_cceb *=int64 (_abeca .SbStrips );
return _cceb ,nil ;};func (_efe *SymbolDictionary )getUserTable (_cdagb int )(_aa .Tabler ,error ){var _edbb int ;for _ ,_fbeb :=range _efe .Header .RTSegments {if _fbeb .Type ==53{if _edbb ==_cdagb {_agbf ,_cebf :=_fbeb .GetSegmentData ();if _cebf !=nil {return nil ,_cebf ;
};_bbfc :=_agbf .(_aa .BasicTabler );return _aa .NewEncodedTable (_bbfc );};_edbb ++;};};return nil ,nil ;};func (_bad *GenericRefinementRegion )decodeTypicalPredictedLineTemplate0 (_ef ,_efa ,_gea ,_fcc ,_eaf ,_bb ,_bbb ,_bac ,_fcb int )error {var (_cge ,_ebed ,_bgd ,_dg ,_fcg ,_fa int ;
_afb byte ;_cda error ;);if _ef > 0{_afb ,_cda =_bad .RegionBitmap .GetByte (_bbb -_gea );if _cda !=nil {return _cda ;};_bgd =int (_afb );};if _bac > 0&&_bac <=_bad .ReferenceBitmap .Height {_afb ,_cda =_bad .ReferenceBitmap .GetByte (_fcb -_fcc +_bb );
if _cda !=nil {return _cda ;};_dg =int (_afb )<<4;};if _bac >=0&&_bac < _bad .ReferenceBitmap .Height {_afb ,_cda =_bad .ReferenceBitmap .GetByte (_fcb +_bb );if _cda !=nil {return _cda ;};_fcg =int (_afb )<<1;};if _bac > -2&&_bac < _bad .ReferenceBitmap .Height -1{_afb ,_cda =_bad .ReferenceBitmap .GetByte (_fcb +_fcc +_bb );
if _cda !=nil {return _cda ;};_fa =int (_afb );};_cge =((_bgd >>5)&0x6)|((_fa >>2)&0x30)|(_fcg &0x180)|(_dg &0xc00);var _gba int ;for _cdg :=0;_cdg < _eaf ;_cdg =_gba {var _aba int ;_gba =_cdg +8;var _fga int ;if _fga =_efa -_cdg ;_fga > 8{_fga =8;};_bgb :=_gba < _efa ;
_dbfd :=_gba < _bad .ReferenceBitmap .Width ;_gad :=_bb +1;if _ef > 0{_afb =0;if _bgb {_afb ,_cda =_bad .RegionBitmap .GetByte (_bbb -_gea +1);if _cda !=nil {return _cda ;};};_bgd =(_bgd <<8)|int (_afb );};if _bac > 0&&_bac <=_bad .ReferenceBitmap .Height {var _edg int ;
if _dbfd {_afb ,_cda =_bad .ReferenceBitmap .GetByte (_fcb -_fcc +_gad );if _cda !=nil {return _cda ;};_edg =int (_afb )<<4;};_dg =(_dg <<8)|_edg ;};if _bac >=0&&_bac < _bad .ReferenceBitmap .Height {var _fee int ;if _dbfd {_afb ,_cda =_bad .ReferenceBitmap .GetByte (_fcb +_gad );
if _cda !=nil {return _cda ;};_fee =int (_afb )<<1;};_fcg =(_fcg <<8)|_fee ;};if _bac > -2&&_bac < (_bad .ReferenceBitmap .Height -1){_afb =0;if _dbfd {_afb ,_cda =_bad .ReferenceBitmap .GetByte (_fcb +_fcc +_gad );if _cda !=nil {return _cda ;};};_fa =(_fa <<8)|int (_afb );
};for _gcf :=0;_gcf < _fga ;_gcf ++{var _bbg int ;_dcb :=false ;_ebf :=(_cge >>4)&0x1ff;if _ebf ==0x1ff{_dcb =true ;_bbg =1;}else if _ebf ==0x00{_dcb =true ;};if !_dcb {if _bad ._eaac {_ebed =_bad .overrideAtTemplate0 (_cge ,_cdg +_gcf ,_ef ,_aba ,_gcf );
_bad ._fb .SetIndex (int32 (_ebed ));}else {_bad ._fb .SetIndex (int32 (_cge ));};_bbg ,_cda =_bad ._eg .DecodeBit (_bad ._fb );if _cda !=nil {return _cda ;};};_bf :=uint (7-_gcf );_aba |=_bbg <<_bf ;_cge =((_cge &0xdb6)<<1)|_bbg |(_bgd >>_bf +5)&0x002|((_fa >>_bf +2)&0x010)|((_fcg >>_bf )&0x080)|((_dg >>_bf )&0x400);
};_cda =_bad .RegionBitmap .SetByte (_bbb ,byte (_aba ));if _cda !=nil {return _cda ;};_bbb ++;_fcb ++;};return nil ;};func (_dgde *SymbolDictionary )decodeNewSymbols (_bbfe ,_abbg uint32 ,_bbfg *_fc .Bitmap ,_fcgd ,_bead int32 )error {if _dgde ._dcgg ==nil {_dgde ._dcgg =_gfb (_dgde ._aafe ,nil );
if _dgde ._cagb ==nil {var _bdgd error ;_dgde ._cagb ,_bdgd =_ab .New (_dgde ._aafe );if _bdgd !=nil {return _bdgd ;};};if _dgde ._adbg ==nil {_dgde ._adbg =_ab .NewStats (65536,1);};};_dgde ._dcgg .setParameters (_dgde ._adbg ,_dgde ._cagb ,_dgde .SdrTemplate ,_bbfe ,_abbg ,_bbfg ,_fcgd ,_bead ,false ,_dgde .SdrATX ,_dgde .SdrATY );
return _dgde .addSymbol (_dgde ._dcgg );};func (_eca *HalftoneRegion )GetRegionBitmap ()(*_fc .Bitmap ,error ){if _eca .HalftoneRegionBitmap !=nil {return _eca .HalftoneRegionBitmap ,nil ;};var _ace error ;_eca .HalftoneRegionBitmap =_fc .New (int (_eca .RegionSegment .BitmapWidth ),int (_eca .RegionSegment .BitmapHeight ));
if _eca .Patterns ==nil ||len (_eca .Patterns )==0{_eca .Patterns ,_ace =_eca .GetPatterns ();if _ace !=nil {return nil ,_ace ;};};if _eca .HDefaultPixel ==1{_eca .HalftoneRegionBitmap .SetDefaultPixel ();};_gdgc :=_e .Ceil (_e .Log (float64 (len (_eca .Patterns )))/_e .Log (2));
_faae :=int (_gdgc );var _febg [][]int ;_febg ,_ace =_eca .grayScaleDecoding (_faae );if _ace !=nil {return nil ,_ace ;};if _ace =_eca .renderPattern (_febg );_ace !=nil {return nil ,_ace ;};return _eca .HalftoneRegionBitmap ,nil ;};func (_edaf *PageInformationSegment )Size ()int {return 19};
type TextRegion struct{_gcccf *_ce .Reader ;RegionInfo *RegionSegment ;SbrTemplate int8 ;SbDsOffset int8 ;DefaultPixel int8 ;CombinationOperator _fc .CombinationOperator ;IsTransposed int8 ;ReferenceCorner int16 ;LogSBStrips int16 ;UseRefinement bool ;
IsHuffmanEncoded bool ;SbHuffRSize int8 ;SbHuffRDY int8 ;SbHuffRDX int8 ;SbHuffRDHeight int8 ;SbHuffRDWidth int8 ;SbHuffDT int8 ;SbHuffDS int8 ;SbHuffFS int8 ;SbrATX []int8 ;SbrATY []int8 ;NumberOfSymbolInstances uint32 ;_facg int64 ;SbStrips int8 ;NumberOfSymbols uint32 ;
RegionBitmap *_fc .Bitmap ;Symbols []*_fc .Bitmap ;_cfabc *_ab .Decoder ;_bfd *GenericRefinementRegion ;_bdfe *_ab .DecoderStats ;_gdgbc *_ab .DecoderStats ;_agdgc *_ab .DecoderStats ;_ceg *_ab .DecoderStats ;_edca *_ab .DecoderStats ;_baeg *_ab .DecoderStats ;
_ecdg *_ab .DecoderStats ;_fdaa *_ab .DecoderStats ;_eeffd *_ab .DecoderStats ;_ebcc *_ab .DecoderStats ;_bece *_ab .DecoderStats ;_dffd int8 ;_dcac *_aa .FixedSizeTable ;Header *Header ;_edgc _aa .Tabler ;_gef _aa .Tabler ;_ggba _aa .Tabler ;_cggb _aa .Tabler ;
_bbgd _aa .Tabler ;_ebac _aa .Tabler ;_cfbde _aa .Tabler ;_fgafc _aa .Tabler ;_ggdeg ,_ddfdc map[int ]int ;_gede []int ;_ebde *_fc .Points ;_bbbd *_fc .Bitmaps ;_bbeg *_cb .IntSlice ;_gcfe ,_adab int ;_cdee *_fc .Boxes ;};func (_fbcb *SymbolDictionary )readRefinementAtPixels (_bgaa int )error {_fbcb .SdrATX =make ([]int8 ,_bgaa );
_fbcb .SdrATY =make ([]int8 ,_bgaa );var (_gfa byte ;_gfg error ;);for _fbbf :=0;_fbbf < _bgaa ;_fbbf ++{_gfa ,_gfg =_fbcb ._aafe .ReadByte ();if _gfg !=nil {return _gfg ;};_fbcb .SdrATX [_fbbf ]=int8 (_gfa );_gfa ,_gfg =_fbcb ._aafe .ReadByte ();if _gfg !=nil {return _gfg ;
};_fbcb .SdrATY [_fbbf ]=int8 (_gfa );};return nil ;};func (_cfd *template1 )form (_cbeag ,_bcb ,_eaag ,_decd ,_aee int16 )int16 {return ((_cbeag &0x02)<<8)|(_bcb <<6)|((_eaag &0x03)<<4)|(_decd <<1)|_aee ;};func (_ecab *TextRegion )decodeIds ()(int64 ,error ){const _dgeb ="\u0064e\u0063\u006f\u0064\u0065\u0049\u0064s";
if _ecab .IsHuffmanEncoded {if _ecab .SbHuffDS ==3{if _ecab ._gef ==nil {_beeac :=0;if _ecab .SbHuffFS ==3{_beeac ++;};var _efee error ;_ecab ._gef ,_efee =_ecab .getUserTable (_beeac );if _efee !=nil {return 0,_ea .Wrap (_efee ,_dgeb ,"");};};return _ecab ._gef .Decode (_ecab ._gcccf );
};_fffe ,_gecec :=_aa .GetStandardTable (8+int (_ecab .SbHuffDS ));if _gecec !=nil {return 0,_ea .Wrap (_gecec ,_dgeb ,"");};return _fffe .Decode (_ecab ._gcccf );};_daa ,_gaeea :=_ecab ._cfabc .DecodeInt (_ecab ._agdgc );if _gaeea !=nil {return 0,_ea .Wrap (_gaeea ,_dgeb ,"\u0063\u0078\u0049\u0041\u0044\u0053");
};return int64 (_daa ),nil ;};func (_ddgce *TableSegment )Init (h *Header ,r *_ce .Reader )error {_ddgce ._bfac =r ;return _ddgce .parseHeader ();};func (_bee *GenericRefinementRegion )String ()string {_gdb :=&_ee .Builder {};_gdb .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");
_gdb .WriteString (_bee .RegionInfo .String ()+"\u000a");_gdb .WriteString (_a .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0052\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_bee .IsTPGROn ));_gdb .WriteString (_a .Sprintf ("\u0009-\u0020T\u0065\u006d\u0070\u006c\u0061t\u0065\u0049D\u003a\u0020\u0025\u0076\u000a",_bee .TemplateID ));
_gdb .WriteString (_a .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_bee .GrAtX ));_gdb .WriteString (_a .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_bee .GrAtY ));
_gdb .WriteString (_a .Sprintf ("\u0009-\u0020R\u0065\u0066\u0065\u0072\u0065n\u0063\u0065D\u0058\u0020\u0025\u0076\u000a",_bee .ReferenceDX ));_gdb .WriteString (_a .Sprintf ("\u0009\u002d\u0020\u0052ef\u0065\u0072\u0065\u006e\u0063\u0044\u0065\u0059\u003a\u0020\u0025\u0076\u000a",_bee .ReferenceDY ));
return _gdb .String ();};func (_daccb *TextRegion )computeSymbolCodeLength ()error {if _daccb .IsHuffmanEncoded {return _daccb .symbolIDCodeLengths ();};_daccb ._dffd =int8 (_e .Ceil (_e .Log (float64 (_daccb .NumberOfSymbols ))/_e .Log (2)));return nil ;
};var _ SegmentEncoder =&RegionSegment {};func (_eeab *TextRegion )readHuffmanFlags ()error {var (_caeg int ;_efeg uint64 ;_gaecg error ;);_ ,_gaecg =_eeab ._gcccf .ReadBit ();if _gaecg !=nil {return _gaecg ;};_caeg ,_gaecg =_eeab ._gcccf .ReadBit ();if _gaecg !=nil {return _gaecg ;
};_eeab .SbHuffRSize =int8 (_caeg );_efeg ,_gaecg =_eeab ._gcccf .ReadBits (2);if _gaecg !=nil {return _gaecg ;};_eeab .SbHuffRDY =int8 (_efeg )&0xf;_efeg ,_gaecg =_eeab ._gcccf .ReadBits (2);if _gaecg !=nil {return _gaecg ;};_eeab .SbHuffRDX =int8 (_efeg )&0xf;
_efeg ,_gaecg =_eeab ._gcccf .ReadBits (2);if _gaecg !=nil {return _gaecg ;};_eeab .SbHuffRDHeight =int8 (_efeg )&0xf;_efeg ,_gaecg =_eeab ._gcccf .ReadBits (2);if _gaecg !=nil {return _gaecg ;};_eeab .SbHuffRDWidth =int8 (_efeg )&0xf;_efeg ,_gaecg =_eeab ._gcccf .ReadBits (2);
if _gaecg !=nil {return _gaecg ;};_eeab .SbHuffDT =int8 (_efeg )&0xf;_efeg ,_gaecg =_eeab ._gcccf .ReadBits (2);if _gaecg !=nil {return _gaecg ;};_eeab .SbHuffDS =int8 (_efeg )&0xf;_efeg ,_gaecg =_eeab ._gcccf .ReadBits (2);if _gaecg !=nil {return _gaecg ;
};_eeab .SbHuffFS =int8 (_efeg )&0xf;return nil ;};func (_fgagd *PatternDictionary )readPatternWidthAndHeight ()error {_ggga ,_bgdf :=_fgagd ._ffef .ReadByte ();if _bgdf !=nil {return _bgdf ;};_fgagd .HdpWidth =_ggga ;_ggga ,_bgdf =_fgagd ._ffef .ReadByte ();
if _bgdf !=nil {return _bgdf ;};_fgagd .HdpHeight =_ggga ;return nil ;};func (_cgg *PageInformationSegment )readRequiresAuxiliaryBuffer ()error {_eaeb ,_cfdc :=_cgg ._bfc .ReadBit ();if _cfdc !=nil {return _cfdc ;};if _eaeb ==1{_cgg ._gffc =true ;};return nil ;
};func (_cgcc *GenericRegion )parseHeader ()(_bgg error ){_eec .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052I\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0050\u0061\u0072s\u0069\u006e\u0067\u0048\u0065\u0061\u0064e\u0072\u002e\u002e\u002e");
defer func (){if _bgg !=nil {_eec .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e]\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065r\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0077\u0069th\u0020\u0065\u0072\u0072\u006f\u0072\u002e\u0020\u0025\u0076",_bgg );
}else {_eec .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049C\u002d\u0052\u0045G\u0049\u004f\u004e]\u0020\u0050a\u0072\u0073\u0069\u006e\u0067\u0048e\u0061de\u0072\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0053\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079\u002e\u002e\u002e");
};}();var (_cdga int ;_fcgg uint64 ;);if _bgg =_cgcc .RegionSegment .parseHeader ();_bgg !=nil {return _bgg ;};if _ ,_bgg =_cgcc ._fgaf .ReadBits (3);_bgg !=nil {return _bgg ;};_cdga ,_bgg =_cgcc ._fgaf .ReadBit ();if _bgg !=nil {return _bgg ;};if _cdga ==1{_cgcc .UseExtTemplates =true ;
};_cdga ,_bgg =_cgcc ._fgaf .ReadBit ();if _bgg !=nil {return _bgg ;};if _cdga ==1{_cgcc .IsTPGDon =true ;};_fcgg ,_bgg =_cgcc ._fgaf .ReadBits (2);if _bgg !=nil {return _bgg ;};_cgcc .GBTemplate =byte (_fcgg &0xf);_cdga ,_bgg =_cgcc ._fgaf .ReadBit ();
if _bgg !=nil {return _bgg ;};if _cdga ==1{_cgcc .IsMMREncoded =true ;};if !_cgcc .IsMMREncoded {_cbeg :=1;if _cgcc .GBTemplate ==0{_cbeg =4;if _cgcc .UseExtTemplates {_cbeg =12;};};if _bgg =_cgcc .readGBAtPixels (_cbeg );_bgg !=nil {return _bgg ;};};if _bgg =_cgcc .computeSegmentDataStructure ();
_bgg !=nil {return _bgg ;};_eec .Log .Trace ("\u0025\u0073",_cgcc );return nil ;};func (_gbfg *PatternDictionary )extractPatterns (_egdc *_fc .Bitmap )error {var _cggf int ;_fced :=make ([]*_fc .Bitmap ,_gbfg .GrayMax +1);for _cggf <=int (_gbfg .GrayMax ){_fdcf :=int (_gbfg .HdpWidth )*_cggf ;
_ddfa :=_c .Rect (_fdcf ,0,_fdcf +int (_gbfg .HdpWidth ),int (_gbfg .HdpHeight ));_aada ,_eed :=_fc .Extract (_ddfa ,_egdc );if _eed !=nil {return _eed ;};_fced [_cggf ]=_aada ;_cggf ++;};_gbfg .Patterns =_fced ;return nil ;};func (_agdd *GenericRegion )GetRegionBitmap ()(_gge *_fc .Bitmap ,_cce error ){if _agdd .Bitmap !=nil {return _agdd .Bitmap ,nil ;
};if _agdd .IsMMREncoded {if _agdd ._cad ==nil {_agdd ._cad ,_cce =_abe .New (_agdd ._fgaf ,int (_agdd .RegionSegment .BitmapWidth ),int (_agdd .RegionSegment .BitmapHeight ),_agdd .DataOffset ,_agdd .DataLength );if _cce !=nil {return nil ,_cce ;};};_agdd .Bitmap ,_cce =_agdd ._cad .UncompressMMR ();
return _agdd .Bitmap ,_cce ;};if _cce =_agdd .updateOverrideFlags ();_cce !=nil {return nil ,_cce ;};var _agg int ;if _agdd ._dff ==nil {_agdd ._dff ,_cce =_ab .New (_agdd ._fgaf );if _cce !=nil {return nil ,_cce ;};};if _agdd ._badg ==nil {_agdd ._badg =_ab .NewStats (65536,1);
};_agdd .Bitmap =_fc .New (int (_agdd .RegionSegment .BitmapWidth ),int (_agdd .RegionSegment .BitmapHeight ));_cga :=int (uint32 (_agdd .Bitmap .Width +7)&(^uint32 (7)));for _fdg :=0;_fdg < _agdd .Bitmap .Height ;_fdg ++{if _agdd .IsTPGDon {var _aac int ;
_aac ,_cce =_agdd .decodeSLTP ();if _cce !=nil {return nil ,_cce ;};_agg ^=_aac ;};if _agg ==1{if _fdg > 0{if _cce =_agdd .copyLineAbove (_fdg );_cce !=nil {return nil ,_cce ;};};}else {if _cce =_agdd .decodeLine (_fdg ,_agdd .Bitmap .Width ,_cga );_cce !=nil {return nil ,_cce ;
};};};return _agdd .Bitmap ,nil ;};func (_cedcf *SymbolDictionary )setAtPixels ()error {if _cedcf .IsHuffmanEncoded {return nil ;};_gcgf :=1;if _cedcf .SdTemplate ==0{_gcgf =4;};if _edfga :=_cedcf .readAtPixels (_gcgf );_edfga !=nil {return _edfga ;};return nil ;
};func (_gdea *TextRegion )decodeID ()(int64 ,error ){if _gdea .IsHuffmanEncoded {if _gdea ._dcac ==nil {_dgceb ,_bbfd :=_gdea ._gcccf .ReadBits (byte (_gdea ._dffd ));return int64 (_dgceb ),_bbfd ;};return _gdea ._dcac .Decode (_gdea ._gcccf );};return _gdea ._cfabc .DecodeIAID (uint64 (_gdea ._dffd ),_gdea ._fdaa );
};type Regioner interface{GetRegionBitmap ()(*_fc .Bitmap ,error );GetRegionInfo ()*RegionSegment ;};func (_gedc *SymbolDictionary )readRegionFlags ()error {var (_eabg uint64 ;_ceab int ;);_ ,_gcfg :=_gedc ._aafe .ReadBits (3);if _gcfg !=nil {return _gcfg ;
};_ceab ,_gcfg =_gedc ._aafe .ReadBit ();if _gcfg !=nil {return _gcfg ;};_gedc .SdrTemplate =int8 (_ceab );_eabg ,_gcfg =_gedc ._aafe .ReadBits (2);if _gcfg !=nil {return _gcfg ;};_gedc .SdTemplate =int8 (_eabg &0xf);_ceab ,_gcfg =_gedc ._aafe .ReadBit ();
if _gcfg !=nil {return _gcfg ;};if _ceab ==1{_gedc ._ded =true ;};_ceab ,_gcfg =_gedc ._aafe .ReadBit ();if _gcfg !=nil {return _gcfg ;};if _ceab ==1{_gedc ._febf =true ;};_ceab ,_gcfg =_gedc ._aafe .ReadBit ();if _gcfg !=nil {return _gcfg ;};if _ceab ==1{_gedc .SdHuffAggInstanceSelection =true ;
};_ceab ,_gcfg =_gedc ._aafe .ReadBit ();if _gcfg !=nil {return _gcfg ;};_gedc .SdHuffBMSizeSelection =int8 (_ceab );_eabg ,_gcfg =_gedc ._aafe .ReadBits (2);if _gcfg !=nil {return _gcfg ;};_gedc .SdHuffDecodeWidthSelection =int8 (_eabg &0xf);_eabg ,_gcfg =_gedc ._aafe .ReadBits (2);
if _gcfg !=nil {return _gcfg ;};_gedc .SdHuffDecodeHeightSelection =int8 (_eabg &0xf);_ceab ,_gcfg =_gedc ._aafe .ReadBit ();if _gcfg !=nil {return _gcfg ;};if _ceab ==1{_gedc .UseRefinementAggregation =true ;};_ceab ,_gcfg =_gedc ._aafe .ReadBit ();if _gcfg !=nil {return _gcfg ;
};if _ceab ==1{_gedc .IsHuffmanEncoded =true ;};return nil ;};func (_eeag *TextRegion )encodeFlags (_cebbb _ce .BinaryWriter )(_bbbbd int ,_bbcdd error ){const _ceadc ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _bbcdd =_cebbb .WriteBit (int (_eeag .SbrTemplate ));
_bbcdd !=nil {return _bbbbd ,_ea .Wrap (_bbcdd ,_ceadc ,"s\u0062\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};if _ ,_bbcdd =_cebbb .WriteBits (uint64 (_eeag .SbDsOffset ),5);_bbcdd !=nil {return _bbbbd ,_ea .Wrap (_bbcdd ,_ceadc ,"\u0073\u0062\u0044\u0073\u004f\u0066\u0066\u0073\u0065\u0074");
};if _bbcdd =_cebbb .WriteBit (int (_eeag .DefaultPixel ));_bbcdd !=nil {return _bbbbd ,_ea .Wrap (_bbcdd ,_ceadc ,"\u0044\u0065\u0066a\u0075\u006c\u0074\u0050\u0069\u0078\u0065\u006c");};if _ ,_bbcdd =_cebbb .WriteBits (uint64 (_eeag .CombinationOperator ),2);
_bbcdd !=nil {return _bbbbd ,_ea .Wrap (_bbcdd ,_ceadc ,"\u0043\u006f\u006d\u0062in\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072");};if _bbcdd =_cebbb .WriteBit (int (_eeag .IsTransposed ));_bbcdd !=nil {return _bbbbd ,_ea .Wrap (_bbcdd ,_ceadc ,"\u0069\u0073\u0020\u0074\u0072\u0061\u006e\u0073\u0070\u006f\u0073\u0065\u0064");
};if _ ,_bbcdd =_cebbb .WriteBits (uint64 (_eeag .ReferenceCorner ),2);_bbcdd !=nil {return _bbbbd ,_ea .Wrap (_bbcdd ,_ceadc ,"\u0072\u0065f\u0065\u0072\u0065n\u0063\u0065\u0020\u0063\u006f\u0072\u006e\u0065\u0072");};if _ ,_bbcdd =_cebbb .WriteBits (uint64 (_eeag .LogSBStrips ),2);
_bbcdd !=nil {return _bbbbd ,_ea .Wrap (_bbcdd ,_ceadc ,"L\u006f\u0067\u0053\u0042\u0053\u0074\u0072\u0069\u0070\u0073");};var _aceb int ;if _eeag .UseRefinement {_aceb =1;};if _bbcdd =_cebbb .WriteBit (_aceb );_bbcdd !=nil {return _bbbbd ,_ea .Wrap (_bbcdd ,_ceadc ,"\u0075\u0073\u0065\u0020\u0072\u0065\u0066\u0069\u006ee\u006d\u0065\u006e\u0074");
};_aceb =0;if _eeag .IsHuffmanEncoded {_aceb =1;};if _bbcdd =_cebbb .WriteBit (_aceb );_bbcdd !=nil {return _bbbbd ,_ea .Wrap (_bbcdd ,_ceadc ,"u\u0073\u0065\u0020\u0068\u0075\u0066\u0066\u006d\u0061\u006e");};_bbbbd =2;return _bbbbd ,nil ;};func (_gdcd *Header )writeSegmentDataLength (_ddbb _ce .BinaryWriter )(_acage int ,_eged error ){_acge :=make ([]byte ,4);
_d .BigEndian .PutUint32 (_acge ,uint32 (_gdcd .SegmentDataLength ));if _acage ,_eged =_ddbb .Write (_acge );_eged !=nil {return 0,_ea .Wrap (_eged ,"\u0048\u0065a\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u004c\u0065ng\u0074\u0068","");
};return _acage ,nil ;};func (_aed *GenericRefinementRegion )Init (header *Header ,r *_ce .Reader )error {_aed ._ae =header ;_aed ._af =r ;_aed .RegionInfo =NewRegionSegment (r );return _aed .parseHeader ();};func (_adfe *RegionSegment )parseHeader ()error {const _bacf ="p\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072";
_eec .Log .Trace ("\u005b\u0052\u0045\u0047I\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002dH\u0045A\u0044\u0045\u0052\u005d\u0020\u0042\u0065g\u0069\u006e");defer func (){_eec .Log .Trace ("\u005b\u0052\u0045G\u0049\u004f\u004e\u005d[\u0050\u0041\u0052\u0053\u0045\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
}();_afgc ,_ffge :=_adfe ._gcgg .ReadBits (32);if _ffge !=nil {return _ea .Wrap (_ffge ,_bacf ,"\u0077\u0069\u0064t\u0068");};_adfe .BitmapWidth =uint32 (_afgc &_e .MaxUint32 );_afgc ,_ffge =_adfe ._gcgg .ReadBits (32);if _ffge !=nil {return _ea .Wrap (_ffge ,_bacf ,"\u0068\u0065\u0069\u0067\u0068\u0074");
};_adfe .BitmapHeight =uint32 (_afgc &_e .MaxUint32 );_afgc ,_ffge =_adfe ._gcgg .ReadBits (32);if _ffge !=nil {return _ea .Wrap (_ffge ,_bacf ,"\u0078\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_adfe .XLocation =uint32 (_afgc &_e .MaxUint32 );
_afgc ,_ffge =_adfe ._gcgg .ReadBits (32);if _ffge !=nil {return _ea .Wrap (_ffge ,_bacf ,"\u0079\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_adfe .YLocation =uint32 (_afgc &_e .MaxUint32 );if _ ,_ffge =_adfe ._gcgg .ReadBits (5);_ffge !=nil {return _ea .Wrap (_ffge ,_bacf ,"\u0064i\u0072\u0079\u0020\u0072\u0065\u0061d");
};if _ffge =_adfe .readCombinationOperator ();_ffge !=nil {return _ea .Wrap (_ffge ,_bacf ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};return nil ;};func (_aabb *GenericRegion )decodeTemplate0a (_fca ,_bcg ,_bege int ,_dce ,_dcde int )(_caf error ){const _cab ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0061";
var (_aadb ,_fbga int ;_cbbd ,_edee int ;_aca byte ;_da int ;);if _fca >=1{_aca ,_caf =_aabb .Bitmap .GetByte (_dcde );if _caf !=nil {return _ea .Wrap (_caf ,_cab ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_cbbd =int (_aca );};if _fca >=2{_aca ,_caf =_aabb .Bitmap .GetByte (_dcde -_aabb .Bitmap .RowStride );
if _caf !=nil {return _ea .Wrap (_caf ,_cab ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_edee =int (_aca )<<6;};_aadb =(_cbbd &0xf0)|(_edee &0x3800);for _cea :=0;_cea < _bege ;_cea =_da {var (_gda byte ;_bfg int ;);_da =_cea +8;if _cgae :=_bcg -_cea ;
_cgae > 8{_bfg =8;}else {_bfg =_cgae ;};if _fca > 0{_cbbd <<=8;if _da < _bcg {_aca ,_caf =_aabb .Bitmap .GetByte (_dcde +1);if _caf !=nil {return _ea .Wrap (_caf ,_cab ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_cbbd |=int (_aca );};};if _fca > 1{_abab :=_dcde -_aabb .Bitmap .RowStride +1;
_edee <<=8;if _da < _bcg {_aca ,_caf =_aabb .Bitmap .GetByte (_abab );if _caf !=nil {return _ea .Wrap (_caf ,_cab ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_edee |=int (_aca )<<6;}else {_edee |=0;};};for _gdg :=0;_gdg < _bfg ;_gdg ++{_cff :=uint (7-_gdg );
if _aabb ._ceb {_fbga =_aabb .overrideAtTemplate0a (_aadb ,_cea +_gdg ,_fca ,int (_gda ),_gdg ,int (_cff ));_aabb ._badg .SetIndex (int32 (_fbga ));}else {_aabb ._badg .SetIndex (int32 (_aadb ));};var _egge int ;_egge ,_caf =_aabb ._dff .DecodeBit (_aabb ._badg );
if _caf !=nil {return _ea .Wrap (_caf ,_cab ,"");};_gda |=byte (_egge )<<_cff ;_aadb =((_aadb &0x7bf7)<<1)|_egge |((_cbbd >>_cff )&0x10)|((_edee >>_cff )&0x800);};if _ddba :=_aabb .Bitmap .SetByte (_dce ,_gda );_ddba !=nil {return _ea .Wrap (_ddba ,_cab ,"");
};_dce ++;_dcde ++;};return nil ;};func (_ccc *GenericRefinementRegion )parseHeader ()(_ecf error ){_eec .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0048e\u0061\u0064e\u0072\u002e\u002e\u002e");
_ggd :=_f .Now ();defer func (){if _ecf ==nil {_eec .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045G\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020h\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0069\u006e\u0069\u0073\u0068id\u0020\u0069\u006e\u003a\u0020\u0025\u0064\u0020\u006e\u0073",_f .Since (_ggd ).Nanoseconds ());
}else {_eec .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0068\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0073",_ecf );
};}();if _ecf =_ccc .RegionInfo .parseHeader ();_ecf !=nil {return _ecf ;};_ ,_ecf =_ccc ._af .ReadBits (6);if _ecf !=nil {return _ecf ;};_ccc .IsTPGROn ,_ecf =_ccc ._af .ReadBool ();if _ecf !=nil {return _ecf ;};var _caa int ;_caa ,_ecf =_ccc ._af .ReadBit ();
if _ecf !=nil {return _ecf ;};_ccc .TemplateID =int8 (_caa );switch _ccc .TemplateID {case 0:_ccc .Template =_ccc ._dbf ;if _ecf =_ccc .readAtPixels ();_ecf !=nil {return ;};case 1:_ccc .Template =_ccc ._fcd ;};return nil ;};func (_eeg *HalftoneRegion )Init (hd *Header ,r *_ce .Reader )error {_eeg ._ggafa =r ;
_eeg ._dfd =hd ;_eeg .RegionSegment =NewRegionSegment (r );return _eeg .parseHeader ();};func (_aecg *PageInformationSegment )readWidthAndHeight ()error {_afcb ,_ccee :=_aecg ._bfc .ReadBits (32);if _ccee !=nil {return _ccee ;};_aecg .PageBMWidth =int (_afcb &_e .MaxInt32 );
_afcb ,_ccee =_aecg ._bfc .ReadBits (32);if _ccee !=nil {return _ccee ;};_aecg .PageBMHeight =int (_afcb &_e .MaxInt32 );return nil ;};func (_aggf *PageInformationSegment )readCombinationOperator ()error {_ebcb ,_cdgd :=_aggf ._bfc .ReadBits (2);if _cdgd !=nil {return _cdgd ;
};_aggf ._faf =_fc .CombinationOperator (int (_ebcb ));return nil ;};func (_debf *TextRegion )encodeSymbols (_ecda _ce .BinaryWriter )(_ffbf int ,_gfag error ){const _aeba ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
_cdac :=make ([]byte ,4);_d .BigEndian .PutUint32 (_cdac ,_debf .NumberOfSymbols );if _ffbf ,_gfag =_ecda .Write (_cdac );_gfag !=nil {return _ffbf ,_ea .Wrap (_gfag ,_aeba ,"\u004e\u0075\u006dbe\u0072\u004f\u0066\u0053\u0079\u006d\u0062\u006f\u006c\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073");
};_fbfbd ,_gfag :=_fc .NewClassedPoints (_debf ._ebde ,_debf ._gede );if _gfag !=nil {return 0,_ea .Wrap (_gfag ,_aeba ,"");};var _cgbdc ,_dddge int ;_gegec :=_eef .New ();_gegec .Init ();if _gfag =_gegec .EncodeInteger (_eef .IADT ,0);_gfag !=nil {return _ffbf ,_ea .Wrap (_gfag ,_aeba ,"\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0020\u0044\u0054");
};_eebfb ,_gfag :=_fbfbd .GroupByY ();if _gfag !=nil {return 0,_ea .Wrap (_gfag ,_aeba ,"");};for _ ,_cfef :=range _eebfb {_gcgc :=int (_cfef .YAtIndex (0));_adeea :=_gcgc -_cgbdc ;if _gfag =_gegec .EncodeInteger (_eef .IADT ,_adeea );_gfag !=nil {return _ffbf ,_ea .Wrap (_gfag ,_aeba ,"");
};var _bdfc int ;for _adfgc ,_edcb :=range _cfef .IntSlice {switch _adfgc {case 0:_fecaf :=int (_cfef .XAtIndex (_adfgc ))-_dddge ;if _gfag =_gegec .EncodeInteger (_eef .IAFS ,_fecaf );_gfag !=nil {return _ffbf ,_ea .Wrap (_gfag ,_aeba ,"");};_dddge +=_fecaf ;
_bdfc =_dddge ;default:_eaef :=int (_cfef .XAtIndex (_adfgc ))-_bdfc ;if _gfag =_gegec .EncodeInteger (_eef .IADS ,_eaef );_gfag !=nil {return _ffbf ,_ea .Wrap (_gfag ,_aeba ,"");};_bdfc +=_eaef ;};_efdc ,_feac :=_debf ._bbeg .Get (_edcb );if _feac !=nil {return _ffbf ,_ea .Wrap (_feac ,_aeba ,"");
};_dged ,_ceaf :=_debf ._ggdeg [_efdc ];if !_ceaf {_dged ,_ceaf =_debf ._ddfdc [_efdc ];if !_ceaf {return _ffbf ,_ea .Errorf (_aeba ,"\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027\u0025d\u0027\u0020\u0069s\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064 \u0069\u006e\u0020\u0067\u006cob\u0061\u006c\u0020\u0061\u006e\u0064\u0020\u006c\u006f\u0063\u0061\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020\u006d\u0061\u0070",_efdc );
};};if _feac =_gegec .EncodeIAID (_debf ._adab ,_dged );_feac !=nil {return _ffbf ,_ea .Wrap (_feac ,_aeba ,"");};};if _gfag =_gegec .EncodeOOB (_eef .IADS );_gfag !=nil {return _ffbf ,_ea .Wrap (_gfag ,_aeba ,"");};};_gegec .Final ();_cgcb ,_gfag :=_gegec .WriteTo (_ecda );
if _gfag !=nil {return _ffbf ,_ea .Wrap (_gfag ,_aeba ,"");};_ffbf +=int (_cgcb );return _ffbf ,nil ;};type RegionSegment struct{_gcgg *_ce .Reader ;BitmapWidth uint32 ;BitmapHeight uint32 ;XLocation uint32 ;YLocation uint32 ;CombinaionOperator _fc .CombinationOperator ;
};func (_baea *TextRegion )decodeDfs ()(int64 ,error ){if _baea .IsHuffmanEncoded {if _baea .SbHuffFS ==3{if _baea ._edgc ==nil {var _agac error ;_baea ._edgc ,_agac =_baea .getUserTable (0);if _agac !=nil {return 0,_agac ;};};return _baea ._edgc .Decode (_baea ._gcccf );
};_cbef ,_effbb :=_aa .GetStandardTable (6+int (_baea .SbHuffFS ));if _effbb !=nil {return 0,_effbb ;};return _cbef .Decode (_baea ._gcccf );};_gegd ,_abca :=_baea ._cfabc .DecodeInt (_baea ._gdgbc );if _abca !=nil {return 0,_abca ;};return int64 (_gegd ),nil ;
};func (_cafd *Header )subInputReader ()(*_ce .Reader ,error ){_gfbd :=int (_cafd .SegmentDataLength );if _cafd .SegmentDataLength ==_e .MaxInt32 {_gfbd =-1;};return _cafd .Reader .NewPartialReader (int (_cafd .SegmentDataStartOffset ),_gfbd ,false );};
func (_aede *GenericRegion )overrideAtTemplate0b (_fdef ,_cdccc ,_cefb ,_eeff ,_dcec ,_afce int )int {if _aede .GBAtOverride [0]{_fdef &=0xFFFD;if _aede .GBAtY [0]==0&&_aede .GBAtX [0]>=-int8 (_dcec ){_fdef |=(_eeff >>uint (int8 (_afce )-_aede .GBAtX [0]&0x1))<<1;
}else {_fdef |=int (_aede .getPixel (_cdccc +int (_aede .GBAtX [0]),_cefb +int (_aede .GBAtY [0])))<<1;};};if _aede .GBAtOverride [1]{_fdef &=0xDFFF;if _aede .GBAtY [1]==0&&_aede .GBAtX [1]>=-int8 (_dcec ){_fdef |=(_eeff >>uint (int8 (_afce )-_aede .GBAtX [1]&0x1))<<13;
}else {_fdef |=int (_aede .getPixel (_cdccc +int (_aede .GBAtX [1]),_cefb +int (_aede .GBAtY [1])))<<13;};};if _aede .GBAtOverride [2]{_fdef &=0xFDFF;if _aede .GBAtY [2]==0&&_aede .GBAtX [2]>=-int8 (_dcec ){_fdef |=(_eeff >>uint (int8 (_afce )-_aede .GBAtX [2]&0x1))<<9;
}else {_fdef |=int (_aede .getPixel (_cdccc +int (_aede .GBAtX [2]),_cefb +int (_aede .GBAtY [2])))<<9;};};if _aede .GBAtOverride [3]{_fdef &=0xBFFF;if _aede .GBAtY [3]==0&&_aede .GBAtX [3]>=-int8 (_dcec ){_fdef |=(_eeff >>uint (int8 (_afce )-_aede .GBAtX [3]&0x1))<<14;
}else {_fdef |=int (_aede .getPixel (_cdccc +int (_aede .GBAtX [3]),_cefb +int (_aede .GBAtY [3])))<<14;};};if _aede .GBAtOverride [4]{_fdef &=0xEFFF;if _aede .GBAtY [4]==0&&_aede .GBAtX [4]>=-int8 (_dcec ){_fdef |=(_eeff >>uint (int8 (_afce )-_aede .GBAtX [4]&0x1))<<12;
}else {_fdef |=int (_aede .getPixel (_cdccc +int (_aede .GBAtX [4]),_cefb +int (_aede .GBAtY [4])))<<12;};};if _aede .GBAtOverride [5]{_fdef &=0xFFDF;if _aede .GBAtY [5]==0&&_aede .GBAtX [5]>=-int8 (_dcec ){_fdef |=(_eeff >>uint (int8 (_afce )-_aede .GBAtX [5]&0x1))<<5;
}else {_fdef |=int (_aede .getPixel (_cdccc +int (_aede .GBAtX [5]),_cefb +int (_aede .GBAtY [5])))<<5;};};if _aede .GBAtOverride [6]{_fdef &=0xFFFB;if _aede .GBAtY [6]==0&&_aede .GBAtX [6]>=-int8 (_dcec ){_fdef |=(_eeff >>uint (int8 (_afce )-_aede .GBAtX [6]&0x1))<<2;
}else {_fdef |=int (_aede .getPixel (_cdccc +int (_aede .GBAtX [6]),_cefb +int (_aede .GBAtY [6])))<<2;};};if _aede .GBAtOverride [7]{_fdef &=0xFFF7;if _aede .GBAtY [7]==0&&_aede .GBAtX [7]>=-int8 (_dcec ){_fdef |=(_eeff >>uint (int8 (_afce )-_aede .GBAtX [7]&0x1))<<3;
}else {_fdef |=int (_aede .getPixel (_cdccc +int (_aede .GBAtX [7]),_cefb +int (_aede .GBAtY [7])))<<3;};};if _aede .GBAtOverride [8]{_fdef &=0xF7FF;if _aede .GBAtY [8]==0&&_aede .GBAtX [8]>=-int8 (_dcec ){_fdef |=(_eeff >>uint (int8 (_afce )-_aede .GBAtX [8]&0x1))<<11;
}else {_fdef |=int (_aede .getPixel (_cdccc +int (_aede .GBAtX [8]),_cefb +int (_aede .GBAtY [8])))<<11;};};if _aede .GBAtOverride [9]{_fdef &=0xFFEF;if _aede .GBAtY [9]==0&&_aede .GBAtX [9]>=-int8 (_dcec ){_fdef |=(_eeff >>uint (int8 (_afce )-_aede .GBAtX [9]&0x1))<<4;
}else {_fdef |=int (_aede .getPixel (_cdccc +int (_aede .GBAtX [9]),_cefb +int (_aede .GBAtY [9])))<<4;};};if _aede .GBAtOverride [10]{_fdef &=0x7FFF;if _aede .GBAtY [10]==0&&_aede .GBAtX [10]>=-int8 (_dcec ){_fdef |=(_eeff >>uint (int8 (_afce )-_aede .GBAtX [10]&0x1))<<15;
}else {_fdef |=int (_aede .getPixel (_cdccc +int (_aede .GBAtX [10]),_cefb +int (_aede .GBAtY [10])))<<15;};};if _aede .GBAtOverride [11]{_fdef &=0xFDFF;if _aede .GBAtY [11]==0&&_aede .GBAtX [11]>=-int8 (_dcec ){_fdef |=(_eeff >>uint (int8 (_afce )-_aede .GBAtX [11]&0x1))<<10;
}else {_fdef |=int (_aede .getPixel (_cdccc +int (_aede .GBAtX [11]),_cefb +int (_aede .GBAtY [11])))<<10;};};return _fdef ;};var (_eegg Segmenter ;_ccec =map[Type ]func ()Segmenter {TSymbolDictionary :func ()Segmenter {return &SymbolDictionary {}},TIntermediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateLosslessTextRegion :func ()Segmenter {return &TextRegion {}},TPatternDictionary :func ()Segmenter {return &PatternDictionary {}},TIntermediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateLosslessHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TIntermediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateLosslessGenericRegion :func ()Segmenter {return &GenericRegion {}},TIntermediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateLosslessGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TPageInformation :func ()Segmenter {return &PageInformationSegment {}},TEndOfPage :func ()Segmenter {return _eegg },TEndOfStrip :func ()Segmenter {return &EndOfStripe {}},TEndOfFile :func ()Segmenter {return _eegg },TProfiles :func ()Segmenter {return _eegg },TTables :func ()Segmenter {return &TableSegment {}},TExtension :func ()Segmenter {return _eegg },TBitmap :func ()Segmenter {return _eegg }};
);func (_bacg *TextRegion )decodeCurrentT ()(int64 ,error ){if _bacg .SbStrips !=1{if _bacg .IsHuffmanEncoded {_aege ,_abef :=_bacg ._gcccf .ReadBits (byte (_bacg .LogSBStrips ));return int64 (_aege ),_abef ;};_eade ,_adag :=_bacg ._cfabc .DecodeInt (_bacg ._ceg );
if _adag !=nil {return 0,_adag ;};return int64 (_eade ),nil ;};return 0,nil ;};type OrganizationType uint8 ;func (_cgda *GenericRefinementRegion )readAtPixels ()error {_cgda .GrAtX =make ([]int8 ,2);_cgda .GrAtY =make ([]int8 ,2);_befd ,_ddf :=_cgda ._af .ReadByte ();
if _ddf !=nil {return _ddf ;};_cgda .GrAtX [0]=int8 (_befd );_befd ,_ddf =_cgda ._af .ReadByte ();if _ddf !=nil {return _ddf ;};_cgda .GrAtY [0]=int8 (_befd );_befd ,_ddf =_cgda ._af .ReadByte ();if _ddf !=nil {return _ddf ;};_cgda .GrAtX [1]=int8 (_befd );
_befd ,_ddf =_cgda ._af .ReadByte ();if _ddf !=nil {return _ddf ;};_cgda .GrAtY [1]=int8 (_befd );return nil ;};func (_aae *GenericRefinementRegion )decodeSLTP ()(int ,error ){_aae .Template .setIndex (_aae ._fb );return _aae ._eg .DecodeBit (_aae ._fb );
};func (_gfbc *SymbolDictionary )decodeAggregate (_feca ,_aadf uint32 )error {var (_gegc int64 ;_cbced error ;);if _gfbc .IsHuffmanEncoded {_gegc ,_cbced =_gfbc .huffDecodeRefAggNInst ();if _cbced !=nil {return _cbced ;};}else {_gaad ,_egc :=_gfbc ._cagb .DecodeInt (_gfbc ._bfea );
if _egc !=nil {return _egc ;};_gegc =int64 (_gaad );};if _gegc > 1{return _gfbc .decodeThroughTextRegion (_feca ,_aadf ,uint32 (_gegc ));}else if _gegc ==1{return _gfbc .decodeRefinedSymbol (_feca ,_aadf );};return nil ;};func (_befdd *SymbolDictionary )decodeHeightClassDeltaHeight ()(int64 ,error ){if _befdd .IsHuffmanEncoded {return _befdd .decodeHeightClassDeltaHeightWithHuffman ();
};_fcfbg ,_abae :=_befdd ._cagb .DecodeInt (_befdd ._dfeg );if _abae !=nil {return 0,_abae ;};return int64 (_fcfbg ),nil ;};func (_gbba *TextRegion )readRegionFlags ()error {var (_afdd int ;_eggd uint64 ;_eggeg error ;);_afdd ,_eggeg =_gbba ._gcccf .ReadBit ();
if _eggeg !=nil {return _eggeg ;};_gbba .SbrTemplate =int8 (_afdd );_eggd ,_eggeg =_gbba ._gcccf .ReadBits (5);if _eggeg !=nil {return _eggeg ;};_gbba .SbDsOffset =int8 (_eggd );if _gbba .SbDsOffset > 0x0f{_gbba .SbDsOffset -=0x20;};_afdd ,_eggeg =_gbba ._gcccf .ReadBit ();
if _eggeg !=nil {return _eggeg ;};_gbba .DefaultPixel =int8 (_afdd );_eggd ,_eggeg =_gbba ._gcccf .ReadBits (2);if _eggeg !=nil {return _eggeg ;};_gbba .CombinationOperator =_fc .CombinationOperator (int (_eggd )&0x3);_afdd ,_eggeg =_gbba ._gcccf .ReadBit ();
if _eggeg !=nil {return _eggeg ;};_gbba .IsTransposed =int8 (_afdd );_eggd ,_eggeg =_gbba ._gcccf .ReadBits (2);if _eggeg !=nil {return _eggeg ;};_gbba .ReferenceCorner =int16 (_eggd )&0x3;_eggd ,_eggeg =_gbba ._gcccf .ReadBits (2);if _eggeg !=nil {return _eggeg ;
};_gbba .LogSBStrips =int16 (_eggd )&0x3;_gbba .SbStrips =1<<uint (_gbba .LogSBStrips );_afdd ,_eggeg =_gbba ._gcccf .ReadBit ();if _eggeg !=nil {return _eggeg ;};if _afdd ==1{_gbba .UseRefinement =true ;};_afdd ,_eggeg =_gbba ._gcccf .ReadBit ();if _eggeg !=nil {return _eggeg ;
};if _afdd ==1{_gbba .IsHuffmanEncoded =true ;};return nil ;};func (_dcgdg *Header )readSegmentDataLength (_fbgc *_ce .Reader )(_adgf error ){_dcgdg .SegmentDataLength ,_adgf =_fbgc .ReadBits (32);if _adgf !=nil {return _adgf ;};_dcgdg .SegmentDataLength &=_e .MaxInt32 ;
return nil ;};func (_cgbe *TextRegion )setCodingStatistics ()error {if _cgbe ._bdfe ==nil {_cgbe ._bdfe =_ab .NewStats (512,1);};if _cgbe ._gdgbc ==nil {_cgbe ._gdgbc =_ab .NewStats (512,1);};if _cgbe ._agdgc ==nil {_cgbe ._agdgc =_ab .NewStats (512,1);
};if _cgbe ._ceg ==nil {_cgbe ._ceg =_ab .NewStats (512,1);};if _cgbe ._edca ==nil {_cgbe ._edca =_ab .NewStats (512,1);};if _cgbe ._baeg ==nil {_cgbe ._baeg =_ab .NewStats (512,1);};if _cgbe ._ecdg ==nil {_cgbe ._ecdg =_ab .NewStats (512,1);};if _cgbe ._fdaa ==nil {_cgbe ._fdaa =_ab .NewStats (1<<uint (_cgbe ._dffd ),1);
};if _cgbe ._eeffd ==nil {_cgbe ._eeffd =_ab .NewStats (512,1);};if _cgbe ._ebcc ==nil {_cgbe ._ebcc =_ab .NewStats (512,1);};if _cgbe ._cfabc ==nil {var _geac error ;_cgbe ._cfabc ,_geac =_ab .New (_cgbe ._gcccf );if _geac !=nil {return _geac ;};};return nil ;
};func (_ddfd *GenericRegion )GetRegionInfo ()*RegionSegment {return _ddfd .RegionSegment };func (_gab *PatternDictionary )readGrayMax ()error {_gecef ,_dfc :=_gab ._ffef .ReadBits (32);if _dfc !=nil {return _dfc ;};_gab .GrayMax =uint32 (_gecef &_e .MaxUint32 );
return nil ;};func (_eccfb *PatternDictionary )checkInput ()error {if _eccfb .HdpHeight < 1||_eccfb .HdpWidth < 1{return _cg .New ("in\u0076\u0061l\u0069\u0064\u0020\u0048\u0065\u0061\u0064\u0065\u0072 \u0056\u0061\u006c\u0075\u0065\u003a\u0020\u0057\u0069\u0064\u0074\u0068\u002f\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020g\u0072e\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020z\u0065\u0072o");
};if _eccfb .IsMMREncoded {if _eccfb .HDTemplate !=0{_eec .Log .Debug ("\u0076\u0061\u0072\u0069\u0061\u0062\u006c\u0065\u0020\u0048\u0044\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e \u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030");
};};return nil ;};func (_gde *PageInformationSegment )parseHeader ()(_abee error ){_eec .Log .Trace ("\u005b\u0050\u0061\u0067\u0065I\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067m\u0065\u006e\u0074\u005d\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u002e\u002e");
defer func (){var _cdaa ="[\u0050\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072m\u0061\u0074\u0069\u006f\u006e\u0053\u0065gm\u0065\u006e\u0074\u005d \u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065ad\u0065\u0072 \u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064";
if _abee !=nil {_cdaa +="\u0020\u0077\u0069t\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u0020"+_abee .Error ();}else {_cdaa +="\u0020\u0073\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079";};_eec .Log .Trace (_cdaa );}();if _abee =_gde .readWidthAndHeight ();
_abee !=nil {return _abee ;};if _abee =_gde .readResolution ();_abee !=nil {return _abee ;};_ ,_abee =_gde ._bfc .ReadBit ();if _abee !=nil {return _abee ;};if _abee =_gde .readCombinationOperatorOverrideAllowed ();_abee !=nil {return _abee ;};if _abee =_gde .readRequiresAuxiliaryBuffer ();
_abee !=nil {return _abee ;};if _abee =_gde .readCombinationOperator ();_abee !=nil {return _abee ;};if _abee =_gde .readDefaultPixelValue ();_abee !=nil {return _abee ;};if _abee =_gde .readContainsRefinement ();_abee !=nil {return _abee ;};if _abee =_gde .readIsLossless ();
_abee !=nil {return _abee ;};if _abee =_gde .readIsStriped ();_abee !=nil {return _abee ;};if _abee =_gde .readMaxStripeSize ();_abee !=nil {return _abee ;};if _abee =_gde .checkInput ();_abee !=nil {return _abee ;};_eec .Log .Trace ("\u0025\u0073",_gde );
return nil ;};func (_bdaa *TextRegion )decodeRI ()(int64 ,error ){if !_bdaa .UseRefinement {return 0,nil ;};if _bdaa .IsHuffmanEncoded {_acaa ,_ddga :=_bdaa ._gcccf .ReadBit ();return int64 (_acaa ),_ddga ;};_fgeb ,_cabg :=_bdaa ._cfabc .DecodeInt (_bdaa ._edca );
return int64 (_fgeb ),_cabg ;};func (_dcag *PageInformationSegment )checkInput ()error {if _dcag .PageBMHeight ==_e .MaxInt32 {if !_dcag .IsStripe {_eec .Log .Debug ("P\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0053\u0065\u0067me\u006e\u0074\u002e\u0049s\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0073\u0068ou\u006c\u0064 \u0062\u0065\u0020\u0074\u0072\u0075\u0065\u002e");
};};return nil ;};func (_ddbe *GenericRegion )setParametersWithAt (_edfg bool ,_beba byte ,_fcfb ,_aded bool ,_agagg ,_bde []int8 ,_gfea ,_ceae uint32 ,_gaag *_ab .DecoderStats ,_gdbg *_ab .Decoder ){_ddbe .IsMMREncoded =_edfg ;_ddbe .GBTemplate =_beba ;
_ddbe .IsTPGDon =_fcfb ;_ddbe .GBAtX =_agagg ;_ddbe .GBAtY =_bde ;_ddbe .RegionSegment .BitmapHeight =_ceae ;_ddbe .RegionSegment .BitmapWidth =_gfea ;_ddbe ._cad =nil ;_ddbe .Bitmap =nil ;if _gaag !=nil {_ddbe ._badg =_gaag ;};if _gdbg !=nil {_ddbe ._dff =_gdbg ;
};_eec .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049O\u004e\u005d\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073\u0020\u0053\u0044\u0041t\u003a\u0020\u0025\u0073",_ddbe );};
func (_ddeg *Header )String ()string {_afa :=&_ee .Builder {};_afa .WriteString ("\u000a[\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045A\u0044\u0045\u0052\u005d\u000a");_afa .WriteString (_a .Sprintf ("\t\u002d\u0020\u0053\u0065gm\u0065n\u0074\u004e\u0075\u006d\u0062e\u0072\u003a\u0020\u0025\u0076\u000a",_ddeg .SegmentNumber ));
_afa .WriteString (_a .Sprintf ("\u0009\u002d\u0020T\u0079\u0070\u0065\u003a\u0020\u0025\u0076\u000a",_ddeg .Type ));_afa .WriteString (_a .Sprintf ("\u0009-\u0020R\u0065\u0074\u0061\u0069\u006eF\u006c\u0061g\u003a\u0020\u0025\u0076\u000a",_ddeg .RetainFlag ));
_afa .WriteString (_a .Sprintf ("\u0009\u002d\u0020Pa\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_ddeg .PageAssociation ));_afa .WriteString (_a .Sprintf ("\u0009\u002d\u0020\u0050\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074i\u006fn\u0046\u0069\u0065\u006c\u0064\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_ddeg .PageAssociationFieldSize ));
_afa .WriteString ("\u0009-\u0020R\u0054\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u0053\u003a\u000a");for _ ,_gdab :=range _ddeg .RTSNumbers {_afa .WriteString (_a .Sprintf ("\u0009\t\u002d\u0020\u0025\u0064\u000a",_gdab ));};_afa .WriteString (_a .Sprintf ("\t\u002d \u0048\u0065\u0061\u0064\u0065\u0072\u004c\u0065n\u0067\u0074\u0068\u003a %\u0076\u000a",_ddeg .HeaderLength ));
_afa .WriteString (_a .Sprintf ("\u0009-\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061L\u0065n\u0067\u0074\u0068\u003a\u0020\u0025\u0076\n",_ddeg .SegmentDataLength ));_afa .WriteString (_a .Sprintf ("\u0009\u002d\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074D\u0061\u0074\u0061\u0053\u0074\u0061\u0072t\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0076\u000a",_ddeg .SegmentDataStartOffset ));
return _afa .String ();};func _fae (_deg int )int {if _deg ==0{return 0;};_deg |=_deg >>1;_deg |=_deg >>2;_deg |=_deg >>4;_deg |=_deg >>8;_deg |=_deg >>16;return (_deg +1)>>1;};func (_badf *PageInformationSegment )CombinationOperator ()_fc .CombinationOperator {return _badf ._faf };
func (_dgec *PageInformationSegment )readDefaultPixelValue ()error {_cecfdd ,_bbcd :=_dgec ._bfc .ReadBit ();if _bbcd !=nil {return _bbcd ;};_dgec .DefaultPixelValue =uint8 (_cecfdd &0xf);return nil ;};func (_addb *GenericRegion )updateOverrideFlags ()error {const _fbgd ="\u0075\u0070\u0064\u0061te\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _addb .GBAtX ==nil ||_addb .GBAtY ==nil {return nil ;};if len (_addb .GBAtX )!=len (_addb .GBAtY ){return _ea .Errorf (_fbgd ,"i\u006eco\u0073i\u0073t\u0065\u006e\u0074\u0020\u0041T\u0020\u0070\u0069x\u0065\u006c\u002e\u0020\u0041m\u006f\u0075\u006et\u0020\u006f\u0066\u0020\u0027\u0078\u0027\u0020\u0070\u0069\u0078e\u006c\u0073\u003a %d\u002c\u0020\u0041\u006d\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0027\u0079\u0027\u0020\u0070\u0069\u0078e\u006cs\u003a\u0020\u0025\u0064",len (_addb .GBAtX ),len (_addb .GBAtY ));
};_addb .GBAtOverride =make ([]bool ,len (_addb .GBAtX ));switch _addb .GBTemplate {case 0:if !_addb .UseExtTemplates {if _addb .GBAtX [0]!=3||_addb .GBAtY [0]!=-1{_addb .setOverrideFlag (0);};if _addb .GBAtX [1]!=-3||_addb .GBAtY [1]!=-1{_addb .setOverrideFlag (1);
};if _addb .GBAtX [2]!=2||_addb .GBAtY [2]!=-2{_addb .setOverrideFlag (2);};if _addb .GBAtX [3]!=-2||_addb .GBAtY [3]!=-2{_addb .setOverrideFlag (3);};}else {if _addb .GBAtX [0]!=-2||_addb .GBAtY [0]!=0{_addb .setOverrideFlag (0);};if _addb .GBAtX [1]!=0||_addb .GBAtY [1]!=-2{_addb .setOverrideFlag (1);
};if _addb .GBAtX [2]!=-2||_addb .GBAtY [2]!=-1{_addb .setOverrideFlag (2);};if _addb .GBAtX [3]!=-1||_addb .GBAtY [3]!=-2{_addb .setOverrideFlag (3);};if _addb .GBAtX [4]!=1||_addb .GBAtY [4]!=-2{_addb .setOverrideFlag (4);};if _addb .GBAtX [5]!=2||_addb .GBAtY [5]!=-1{_addb .setOverrideFlag (5);
};if _addb .GBAtX [6]!=-3||_addb .GBAtY [6]!=0{_addb .setOverrideFlag (6);};if _addb .GBAtX [7]!=-4||_addb .GBAtY [7]!=0{_addb .setOverrideFlag (7);};if _addb .GBAtX [8]!=2||_addb .GBAtY [8]!=-2{_addb .setOverrideFlag (8);};if _addb .GBAtX [9]!=3||_addb .GBAtY [9]!=-1{_addb .setOverrideFlag (9);
};if _addb .GBAtX [10]!=-2||_addb .GBAtY [10]!=-2{_addb .setOverrideFlag (10);};if _addb .GBAtX [11]!=-3||_addb .GBAtY [11]!=-1{_addb .setOverrideFlag (11);};};case 1:if _addb .GBAtX [0]!=3||_addb .GBAtY [0]!=-1{_addb .setOverrideFlag (0);};case 2:if _addb .GBAtX [0]!=2||_addb .GBAtY [0]!=-1{_addb .setOverrideFlag (0);
};case 3:if _addb .GBAtX [0]!=2||_addb .GBAtY [0]!=-1{_addb .setOverrideFlag (0);};};return nil ;};func (_ddbbf *RegionSegment )Encode (w _ce .BinaryWriter )(_bfga int ,_decg error ){const _gbge ="R\u0065g\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065n\u0074\u002e\u0045\u006eco\u0064\u0065";
_eccbd :=make ([]byte ,4);_d .BigEndian .PutUint32 (_eccbd ,_ddbbf .BitmapWidth );_bfga ,_decg =w .Write (_eccbd );if _decg !=nil {return 0,_ea .Wrap (_decg ,_gbge ,"\u0057\u0069\u0064t\u0068");};_d .BigEndian .PutUint32 (_eccbd ,_ddbbf .BitmapHeight );
var _bdc int ;_bdc ,_decg =w .Write (_eccbd );if _decg !=nil {return 0,_ea .Wrap (_decg ,_gbge ,"\u0048\u0065\u0069\u0067\u0068\u0074");};_bfga +=_bdc ;_d .BigEndian .PutUint32 (_eccbd ,_ddbbf .XLocation );_bdc ,_decg =w .Write (_eccbd );if _decg !=nil {return 0,_ea .Wrap (_decg ,_gbge ,"\u0058L\u006f\u0063\u0061\u0074\u0069\u006fn");
};_bfga +=_bdc ;_d .BigEndian .PutUint32 (_eccbd ,_ddbbf .YLocation );_bdc ,_decg =w .Write (_eccbd );if _decg !=nil {return 0,_ea .Wrap (_decg ,_gbge ,"\u0059L\u006f\u0063\u0061\u0074\u0069\u006fn");};_bfga +=_bdc ;if _decg =w .WriteByte (byte (_ddbbf .CombinaionOperator )&0x07);
_decg !=nil {return 0,_ea .Wrap (_decg ,_gbge ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};_bfga ++;return _bfga ,nil ;};func (_edbc *SymbolDictionary )decodeHeightClassDeltaHeightWithHuffman ()(int64 ,error ){switch _edbc .SdHuffDecodeHeightSelection {case 0:_eagdd ,_gffd :=_aa .GetStandardTable (4);
if _gffd !=nil {return 0,_gffd ;};return _eagdd .Decode (_edbc ._aafe );case 1:_gcb ,_gbgg :=_aa .GetStandardTable (5);if _gbgg !=nil {return 0,_gbgg ;};return _gcb .Decode (_edbc ._aafe );case 3:if _edbc ._aaee ==nil {_fabba ,_ceda :=_aa .GetStandardTable (0);
if _ceda !=nil {return 0,_ceda ;};_edbc ._aaee =_fabba ;};return _edbc ._aaee .Decode (_edbc ._aafe );};return 0,nil ;};func (_dffb *SymbolDictionary )getSymbol (_dbdg int )(*_fc .Bitmap ,error ){const _cdb ="\u0067e\u0074\u0053\u0079\u006d\u0062\u006fl";
_afed ,_aega :=_dffb ._bbabf .GetBitmap (_dffb ._dbbb [_dbdg ]);if _aega !=nil {return nil ,_ea .Wrap (_aega ,_cdb ,"\u0063\u0061n\u0027\u0074\u0020g\u0065\u0074\u0020\u0073\u0079\u006d\u0062\u006f\u006c");};return _afed ,nil ;};func (_de *GenericRefinementRegion )decodeTypicalPredictedLine (_fea ,_gag ,_geb ,_gcc ,_eea ,_aef int )error {_cc :=_fea -int (_de .ReferenceDY );
_eeca :=_de .ReferenceBitmap .GetByteIndex (0,_cc );_abb :=_de .RegionBitmap .GetByteIndex (0,_fea );var _be error ;switch _de .TemplateID {case 0:_be =_de .decodeTypicalPredictedLineTemplate0 (_fea ,_gag ,_geb ,_gcc ,_eea ,_aef ,_abb ,_cc ,_eeca );case 1:_be =_de .decodeTypicalPredictedLineTemplate1 (_fea ,_gag ,_geb ,_gcc ,_eea ,_aef ,_abb ,_cc ,_eeca );
};return _be ;};func (_fdggg *GenericRegion )overrideAtTemplate0a (_febd ,_ege ,_eeee ,_dfea ,_eefa ,_cbg int )int {if _fdggg .GBAtOverride [0]{_febd &=0xFFEF;if _fdggg .GBAtY [0]==0&&_fdggg .GBAtX [0]>=-int8 (_eefa ){_febd |=(_dfea >>uint (int8 (_cbg )-_fdggg .GBAtX [0]&0x1))<<4;
}else {_febd |=int (_fdggg .getPixel (_ege +int (_fdggg .GBAtX [0]),_eeee +int (_fdggg .GBAtY [0])))<<4;};};if _fdggg .GBAtOverride [1]{_febd &=0xFBFF;if _fdggg .GBAtY [1]==0&&_fdggg .GBAtX [1]>=-int8 (_eefa ){_febd |=(_dfea >>uint (int8 (_cbg )-_fdggg .GBAtX [1]&0x1))<<10;
}else {_febd |=int (_fdggg .getPixel (_ege +int (_fdggg .GBAtX [1]),_eeee +int (_fdggg .GBAtY [1])))<<10;};};if _fdggg .GBAtOverride [2]{_febd &=0xF7FF;if _fdggg .GBAtY [2]==0&&_fdggg .GBAtX [2]>=-int8 (_eefa ){_febd |=(_dfea >>uint (int8 (_cbg )-_fdggg .GBAtX [2]&0x1))<<11;
}else {_febd |=int (_fdggg .getPixel (_ege +int (_fdggg .GBAtX [2]),_eeee +int (_fdggg .GBAtY [2])))<<11;};};if _fdggg .GBAtOverride [3]{_febd &=0x7FFF;if _fdggg .GBAtY [3]==0&&_fdggg .GBAtX [3]>=-int8 (_eefa ){_febd |=(_dfea >>uint (int8 (_cbg )-_fdggg .GBAtX [3]&0x1))<<15;
}else {_febd |=int (_fdggg .getPixel (_ege +int (_fdggg .GBAtX [3]),_eeee +int (_fdggg .GBAtY [3])))<<15;};};return _febd ;};type SymbolDictionary struct{_aafe *_ce .Reader ;SdrTemplate int8 ;SdTemplate int8 ;_ded bool ;_febf bool ;SdHuffAggInstanceSelection bool ;
SdHuffBMSizeSelection int8 ;SdHuffDecodeWidthSelection int8 ;SdHuffDecodeHeightSelection int8 ;UseRefinementAggregation bool ;IsHuffmanEncoded bool ;SdATX []int8 ;SdATY []int8 ;SdrATX []int8 ;SdrATY []int8 ;NumberOfExportedSymbols uint32 ;NumberOfNewSymbols uint32 ;
Header *Header ;_gca uint32 ;_ffdg []*_fc .Bitmap ;_aacd uint32 ;_ebba []*_fc .Bitmap ;_aaee _aa .Tabler ;_faeb _aa .Tabler ;_fef _aa .Tabler ;_cedc _aa .Tabler ;_dffgf []*_fc .Bitmap ;_gdgf []*_fc .Bitmap ;_cagb *_ab .Decoder ;_bfaf *TextRegion ;_caed *GenericRegion ;
_dcgg *GenericRefinementRegion ;_adbg *_ab .DecoderStats ;_dfeg *_ab .DecoderStats ;_fafa *_ab .DecoderStats ;_bfea *_ab .DecoderStats ;_ddede *_ab .DecoderStats ;_cccd *_ab .DecoderStats ;_cfab *_ab .DecoderStats ;_fbab *_ab .DecoderStats ;_gfebd *_ab .DecoderStats ;
_dcba int8 ;_bbabf *_fc .Bitmaps ;_dbbb []int ;_cfgc map[int ]int ;_ababf bool ;};func (_agdg *Header )readSegmentNumber (_dcdd *_ce .Reader )error {const _fege ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";
_aedeb :=make ([]byte ,4);_ ,_dgd :=_dcdd .Read (_aedeb );if _dgd !=nil {return _ea .Wrap (_dgd ,_fege ,"");};_agdg .SegmentNumber =_d .BigEndian .Uint32 (_aedeb );return nil ;};func (_ebaa *RegionSegment )Size ()int {return 17};func (_aedf *GenericRegion )overrideAtTemplate1 (_fgag ,_fff ,_dddg ,_dfgd ,_dab int )int {_fgag &=0x1FF7;
if _aedf .GBAtY [0]==0&&_aedf .GBAtX [0]>=-int8 (_dab ){_fgag |=(_dfgd >>uint (7-(int8 (_dab )+_aedf .GBAtX [0]))&0x1)<<3;}else {_fgag |=int (_aedf .getPixel (_fff +int (_aedf .GBAtX [0]),_dddg +int (_aedf .GBAtY [0])))<<3;};return _fgag ;};func (_gcdb *Header )GetSegmentData ()(Segmenter ,error ){var _gbe Segmenter ;
if _gcdb .SegmentData !=nil {_gbe =_gcdb .SegmentData ;};if _gbe ==nil {_gfed ,_efg :=_ccec [_gcdb .Type ];if !_efg {return nil ,_a .Errorf ("\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0073\u002f\u0020\u0025\u0064\u0020\u0063\u0072e\u0061t\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e\u0020",_gcdb .Type ,_gcdb .Type );
};_gbe =_gfed ();_eec .Log .Trace ("\u005b\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u0020\u0061\u0074\u0020\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0030\u0034\u0058",_gcdb .SegmentNumber ,_gcdb .SegmentDataStartOffset );
_ggdb ,_cacc :=_gcdb .subInputReader ();if _cacc !=nil {return nil ,_cacc ;};if _agbc :=_gbe .Init (_gcdb ,_ggdb );_agbc !=nil {_eec .Log .Debug ("\u0049\u006e\u0069\u0074 \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076 \u0066o\u0072\u0020\u0074\u0079\u0070\u0065\u003a \u0025\u0054",_agbc ,_gbe );
return nil ,_agbc ;};_gcdb .SegmentData =_gbe ;};return _gbe ,nil ;};func (_cgbd *SymbolDictionary )readAtPixels (_bab int )error {_cgbd .SdATX =make ([]int8 ,_bab );_cgbd .SdATY =make ([]int8 ,_bab );var (_cgde byte ;_bge error ;);for _bbgc :=0;_bbgc < _bab ;
_bbgc ++{_cgde ,_bge =_cgbd ._aafe .ReadByte ();if _bge !=nil {return _bge ;};_cgbd .SdATX [_bbgc ]=int8 (_cgde );_cgde ,_bge =_cgbd ._aafe .ReadByte ();if _bge !=nil {return _bge ;};_cgbd .SdATY [_bbgc ]=int8 (_cgde );};return nil ;};func (_dcbb *TableSegment )HtRS ()int32 {return _dcbb ._ecg };
func (_cfc *SymbolDictionary )encodeATFlags (_dabd _ce .BinaryWriter )(_ebfd int ,_deca error ){const _bbgac ="\u0065\u006e\u0063\u006f\u0064\u0065\u0041\u0054\u0046\u006c\u0061\u0067\u0073";if _cfc .IsHuffmanEncoded ||_cfc .SdTemplate !=0{return 0,nil ;
};_defc :=4;if _cfc .SdTemplate !=0{_defc =1;};for _ebfc :=0;_ebfc < _defc ;_ebfc ++{if _deca =_dabd .WriteByte (byte (_cfc .SdATX [_ebfc ]));_deca !=nil {return _ebfd ,_ea .Wrapf (_deca ,_bbgac ,"\u0053d\u0041\u0054\u0058\u005b\u0025\u0064]",_ebfc );};
_ebfd ++;if _deca =_dabd .WriteByte (byte (_cfc .SdATY [_ebfc ]));_deca !=nil {return _ebfd ,_ea .Wrapf (_deca ,_bbgac ,"\u0053d\u0041\u0054\u0059\u005b\u0025\u0064]",_ebfc );};_ebfd ++;};return _ebfd ,nil ;};func (_bg *GenericRefinementRegion )GetRegionInfo ()*RegionSegment {return _bg .RegionInfo };
type GenericRefinementRegion struct{_dbf templater ;_fcd templater ;_af *_ce .Reader ;_ae *Header ;RegionInfo *RegionSegment ;IsTPGROn bool ;TemplateID int8 ;Template templater ;GrAtX []int8 ;GrAtY []int8 ;RegionBitmap *_fc .Bitmap ;ReferenceBitmap *_fc .Bitmap ;
ReferenceDX int32 ;ReferenceDY int32 ;_eg *_ab .Decoder ;_fb *_ab .DecoderStats ;_eaac bool ;_edf []bool ;};func (_gdbgd *TextRegion )readUseRefinement ()error {if !_gdbgd .UseRefinement ||_gdbgd .SbrTemplate !=0{return nil ;};var (_cffg byte ;_cggfg error ;
);_gdbgd .SbrATX =make ([]int8 ,2);_gdbgd .SbrATY =make ([]int8 ,2);_cffg ,_cggfg =_gdbgd ._gcccf .ReadByte ();if _cggfg !=nil {return _cggfg ;};_gdbgd .SbrATX [0]=int8 (_cffg );_cffg ,_cggfg =_gdbgd ._gcccf .ReadByte ();if _cggfg !=nil {return _cggfg ;
};_gdbgd .SbrATY [0]=int8 (_cffg );_cffg ,_cggfg =_gdbgd ._gcccf .ReadByte ();if _cggfg !=nil {return _cggfg ;};_gdbgd .SbrATX [1]=int8 (_cffg );_cffg ,_cggfg =_gdbgd ._gcccf .ReadByte ();if _cggfg !=nil {return _cggfg ;};_gdbgd .SbrATY [1]=int8 (_cffg );
return nil ;};func (_ggfb *SymbolDictionary )encodeRefinementATFlags (_cfec _ce .BinaryWriter )(_bcbe int ,_fefg error ){const _dba ="\u0065\u006e\u0063od\u0065\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0041\u0054\u0046\u006c\u0061\u0067\u0073";
if !_ggfb .UseRefinementAggregation ||_ggfb .SdrTemplate !=0{return 0,nil ;};for _fada :=0;_fada < 2;_fada ++{if _fefg =_cfec .WriteByte (byte (_ggfb .SdrATX [_fada ]));_fefg !=nil {return _bcbe ,_ea .Wrapf (_fefg ,_dba ,"\u0053\u0064\u0072\u0041\u0054\u0058\u005b\u0025\u0064\u005d",_fada );
};_bcbe ++;if _fefg =_cfec .WriteByte (byte (_ggfb .SdrATY [_fada ]));_fefg !=nil {return _bcbe ,_ea .Wrapf (_fefg ,_dba ,"\u0053\u0064\u0072\u0041\u0054\u0059\u005b\u0025\u0064\u005d",_fada );};_bcbe ++;};return _bcbe ,nil ;};func (_becgg *TextRegion )decodeRdh ()(int64 ,error ){const _dbbc ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064h";
if _becgg .IsHuffmanEncoded {if _becgg .SbHuffRDHeight ==3{if _becgg ._bbgd ==nil {var (_dfeac int ;_fdag error ;);if _becgg .SbHuffFS ==3{_dfeac ++;};if _becgg .SbHuffDS ==3{_dfeac ++;};if _becgg .SbHuffDT ==3{_dfeac ++;};if _becgg .SbHuffRDWidth ==3{_dfeac ++;
};_becgg ._bbgd ,_fdag =_becgg .getUserTable (_dfeac );if _fdag !=nil {return 0,_ea .Wrap (_fdag ,_dbbc ,"");};};return _becgg ._bbgd .Decode (_becgg ._gcccf );};_acagg ,_ecfb :=_aa .GetStandardTable (14+int (_becgg .SbHuffRDHeight ));if _ecfb !=nil {return 0,_ea .Wrap (_ecfb ,_dbbc ,"");
};return _acagg .Decode (_becgg ._gcccf );};_gcecg ,_fbde :=_becgg ._cfabc .DecodeInt (_becgg ._ecdg );if _fbde !=nil {return 0,_ea .Wrap (_fbde ,_dbbc ,"");};return int64 (_gcecg ),nil ;};func (_ggcg *TableSegment )HtPS ()int32 {return _ggcg ._fbgae };
var _ SegmentEncoder =&GenericRegion {};func (_aefd *GenericRegion )decodeTemplate2 (_aga ,_eeccf ,_eccb int ,_fcdd ,_ggc int )(_aeae error ){const _cca ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0032";var (_fdgg ,_edcc int ;
_agda ,_afd int ;_cdgaa byte ;_afgf ,_ffeg int ;);if _aga >=1{_cdgaa ,_aeae =_aefd .Bitmap .GetByte (_ggc );if _aeae !=nil {return _ea .Wrap (_aeae ,_cca ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0031");};_agda =int (_cdgaa );
};if _aga >=2{_cdgaa ,_aeae =_aefd .Bitmap .GetByte (_ggc -_aefd .Bitmap .RowStride );if _aeae !=nil {return _ea .Wrap (_aeae ,_cca ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0032");};_afd =int (_cdgaa )<<4;};_fdgg =(_agda >>3&0x7c)|(_afd >>3&0x380);
for _dae :=0;_dae < _eccb ;_dae =_afgf {var (_acf byte ;_abac int ;);_afgf =_dae +8;if _bbad :=_eeccf -_dae ;_bbad > 8{_abac =8;}else {_abac =_bbad ;};if _aga > 0{_agda <<=8;if _afgf < _eeccf {_cdgaa ,_aeae =_aefd .Bitmap .GetByte (_ggc +1);if _aeae !=nil {return _ea .Wrap (_aeae ,_cca ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0030");
};_agda |=int (_cdgaa );};};if _aga > 1{_afd <<=8;if _afgf < _eeccf {_cdgaa ,_aeae =_aefd .Bitmap .GetByte (_ggc -_aefd .Bitmap .RowStride +1);if _aeae !=nil {return _ea .Wrap (_aeae ,_cca ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0031");
};_afd |=int (_cdgaa )<<4;};};for _fcfd :=0;_fcfd < _abac ;_fcfd ++{_fcea :=uint (10-_fcfd );if _aefd ._ceb {_edcc =_aefd .overrideAtTemplate2 (_fdgg ,_dae +_fcfd ,_aga ,int (_acf ),_fcfd );_aefd ._badg .SetIndex (int32 (_edcc ));}else {_aefd ._badg .SetIndex (int32 (_fdgg ));
};_ffeg ,_aeae =_aefd ._dff .DecodeBit (_aefd ._badg );if _aeae !=nil {return _ea .Wrap (_aeae ,_cca ,"");};_acf |=byte (_ffeg <<uint (7-_fcfd ));_fdgg =((_fdgg &0x1bd)<<1)|_ffeg |((_agda >>_fcea )&0x4)|((_afd >>_fcea )&0x80);};if _ebgc :=_aefd .Bitmap .SetByte (_fcdd ,_acf );
_ebgc !=nil {return _ea .Wrap (_ebgc ,_cca ,"");};_fcdd ++;_ggc ++;};return nil ;};func (_aeea *SymbolDictionary )addSymbol (_fcac Regioner )error {_aefb ,_bcag :=_fcac .GetRegionBitmap ();if _bcag !=nil {return _bcag ;};_aeea ._ebba [_aeea ._aacd ]=_aefb ;
_aeea ._gdgf =append (_aeea ._gdgf ,_aefb );_eec .Log .Trace ("\u005b\u0053YM\u0042\u004f\u004c \u0044\u0049\u0043\u0054ION\u0041RY\u005d\u0020\u0041\u0064\u0064\u0065\u0064 s\u0079\u006d\u0062\u006f\u006c\u003a\u0020%\u0073",_aefb );return nil ;};func (_gdac *HalftoneRegion )computeY (_befa ,_geea int )int {return _gdac .shiftAndFill (int (_gdac .HGridY )+_befa *int (_gdac .HRegionX )-_geea *int (_gdac .HRegionY ));
};func (_adga *SymbolDictionary )getToExportFlags ()([]int ,error ){var (_dcggd int ;_bbgg int32 ;_gdfd error ;_cgff =int32 (_adga ._gca +_adga .NumberOfNewSymbols );_fbbb =make ([]int ,_cgff ););for _ddgcf :=int32 (0);_ddgcf < _cgff ;_ddgcf +=_bbgg {if _adga .IsHuffmanEncoded {_afaf ,_agbce :=_aa .GetStandardTable (1);
if _agbce !=nil {return nil ,_agbce ;};_acdg ,_agbce :=_afaf .Decode (_adga ._aafe );if _agbce !=nil {return nil ,_agbce ;};_bbgg =int32 (_acdg );}else {_bbgg ,_gdfd =_adga ._cagb .DecodeInt (_adga ._ddede );if _gdfd !=nil {return nil ,_gdfd ;};};if _bbgg !=0{if _ddgcf +_bbgg > _cgff {return nil ,_ea .Error ("\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0067\u0065\u0074T\u006f\u0045\u0078\u0070\u006f\u0072\u0074F\u006c\u0061\u0067\u0073","\u006d\u0061\u006c\u0066\u006f\u0072m\u0065\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0064\u0061\u0074\u0061\u0020\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u002e\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u006f\u0075\u0074\u0020\u006ff\u0020r\u0061\u006e\u0067\u0065");
};for _egddc :=_ddgcf ;_egddc < _ddgcf +_bbgg ;_egddc ++{_fbbb [_egddc ]=_dcggd ;};};if _dcggd ==0{_dcggd =1;}else {_dcggd =0;};};return _fbbb ,nil ;};func (_efdfe *SymbolDictionary )setInSyms ()error {if _efdfe .Header .RTSegments !=nil {return _efdfe .retrieveImportSymbols ();
};_efdfe ._ffdg =make ([]*_fc .Bitmap ,0);return nil ;};func (_bffe *SymbolDictionary )readNumberOfNewSymbols ()error {_deab ,_acdfg :=_bffe ._aafe .ReadBits (32);if _acdfg !=nil {return _acdfg ;};_bffe .NumberOfNewSymbols =uint32 (_deab &_e .MaxUint32 );
return nil ;};func (_becfa *TextRegion )getUserTable (_bdbe int )(_aa .Tabler ,error ){const _ccfb ="\u0067\u0065\u0074U\u0073\u0065\u0072\u0054\u0061\u0062\u006c\u0065";var _gbgf int ;for _ ,_efcd :=range _becfa .Header .RTSegments {if _efcd .Type ==53{if _gbgf ==_bdbe {_beaa ,_dfda :=_efcd .GetSegmentData ();
if _dfda !=nil {return nil ,_dfda ;};_bgedb ,_abba :=_beaa .(*TableSegment );if !_abba {_eec .Log .Debug (_a .Sprintf ("\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079p\u0065\u00205\u0033\u0020\u002d\u0020\u0061\u006ed\u0020in\u0064\u0065\u0078\u003a\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_efcd .SegmentNumber ));
return nil ,_ea .Error (_ccfb ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079\u0070e\u0020\u0035\u0033\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u002a\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};return _aa .NewEncodedTable (_bgedb );};_gbgf ++;};};return nil ,nil ;};func (_bea *HalftoneRegion )parseHeader ()error {if _abeg :=_bea .RegionSegment .parseHeader ();_abeg !=nil {return _abeg ;};_acfe ,_bbba :=_bea ._ggafa .ReadBit ();if _bbba !=nil {return _bbba ;
};_bea .HDefaultPixel =int8 (_acfe );_aabba ,_bbba :=_bea ._ggafa .ReadBits (3);if _bbba !=nil {return _bbba ;};_bea .CombinationOperator =_fc .CombinationOperator (_aabba &0xf);_acfe ,_bbba =_bea ._ggafa .ReadBit ();if _bbba !=nil {return _bbba ;};if _acfe ==1{_bea .HSkipEnabled =true ;
};_aabba ,_bbba =_bea ._ggafa .ReadBits (2);if _bbba !=nil {return _bbba ;};_bea .HTemplate =byte (_aabba &0xf);_acfe ,_bbba =_bea ._ggafa .ReadBit ();if _bbba !=nil {return _bbba ;};if _acfe ==1{_bea .IsMMREncoded =true ;};_aabba ,_bbba =_bea ._ggafa .ReadBits (32);
if _bbba !=nil {return _bbba ;};_bea .HGridWidth =uint32 (_aabba &_e .MaxUint32 );_aabba ,_bbba =_bea ._ggafa .ReadBits (32);if _bbba !=nil {return _bbba ;};_bea .HGridHeight =uint32 (_aabba &_e .MaxUint32 );_aabba ,_bbba =_bea ._ggafa .ReadBits (32);if _bbba !=nil {return _bbba ;
};_bea .HGridX =int32 (_aabba &_e .MaxInt32 );_aabba ,_bbba =_bea ._ggafa .ReadBits (32);if _bbba !=nil {return _bbba ;};_bea .HGridY =int32 (_aabba &_e .MaxInt32 );_aabba ,_bbba =_bea ._ggafa .ReadBits (16);if _bbba !=nil {return _bbba ;};_bea .HRegionX =uint16 (_aabba &_e .MaxUint16 );
_aabba ,_bbba =_bea ._ggafa .ReadBits (16);if _bbba !=nil {return _bbba ;};_bea .HRegionY =uint16 (_aabba &_e .MaxUint16 );if _bbba =_bea .computeSegmentDataStructure ();_bbba !=nil {return _bbba ;};return _bea .checkInput ();};const (ORandom OrganizationType =iota ;
OSequential ;);func (_fceac *TextRegion )symbolIDCodeLengths ()error {var (_gadg []*_aa .Code ;_dbdf uint64 ;_eccc _aa .Tabler ;_afaa error ;);for _aegdc :=0;_aegdc < 35;_aegdc ++{_dbdf ,_afaa =_fceac ._gcccf .ReadBits (4);if _afaa !=nil {return _afaa ;
};_dddc :=int (_dbdf &0xf);if _dddc > 0{_gadg =append (_gadg ,_aa .NewCode (int32 (_dddc ),0,int32 (_aegdc ),false ));};};_eccc ,_afaa =_aa .NewFixedSizeTable (_gadg );if _afaa !=nil {return _afaa ;};var (_dfcb int64 ;_ccbge uint32 ;_egeg []*_aa .Code ;
_dfbgc int64 ;);for _ccbge < _fceac .NumberOfSymbols {_dfbgc ,_afaa =_eccc .Decode (_fceac ._gcccf );if _afaa !=nil {return _afaa ;};if _dfbgc < 32{if _dfbgc > 0{_egeg =append (_egeg ,_aa .NewCode (int32 (_dfbgc ),0,int32 (_ccbge ),false ));};_dfcb =_dfbgc ;
_ccbge ++;}else {var _eaage ,_fgdd int64 ;switch _dfbgc {case 32:_dbdf ,_afaa =_fceac ._gcccf .ReadBits (2);if _afaa !=nil {return _afaa ;};_eaage =3+int64 (_dbdf );if _ccbge > 0{_fgdd =_dfcb ;};case 33:_dbdf ,_afaa =_fceac ._gcccf .ReadBits (3);if _afaa !=nil {return _afaa ;
};_eaage =3+int64 (_dbdf );case 34:_dbdf ,_afaa =_fceac ._gcccf .ReadBits (7);if _afaa !=nil {return _afaa ;};_eaage =11+int64 (_dbdf );};for _dcce :=0;_dcce < int (_eaage );_dcce ++{if _fgdd > 0{_egeg =append (_egeg ,_aa .NewCode (int32 (_fgdd ),0,int32 (_ccbge ),false ));
};_ccbge ++;};};};_fceac ._gcccf .Align ();_fceac ._dcac ,_afaa =_aa .NewFixedSizeTable (_egeg );return _afaa ;};func (_bcde *PageInformationSegment )readIsLossless ()error {_agdf ,_gaeg :=_bcde ._bfc .ReadBit ();if _gaeg !=nil {return _gaeg ;};if _agdf ==1{_bcde .IsLossless =true ;
};return nil ;};func (_cbge *SymbolDictionary )setExportedSymbols (_edcca []int ){for _ddbd :=uint32 (0);_ddbd < _cbge ._gca +_cbge .NumberOfNewSymbols ;_ddbd ++{if _edcca [_ddbd ]==1{var _aabf *_fc .Bitmap ;if _ddbd < _cbge ._gca {_aabf =_cbge ._ffdg [_ddbd ];
}else {_aabf =_cbge ._ebba [_ddbd -_cbge ._gca ];};_eec .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u002d\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u0020\u0041\u0064\u0064 E\u0078\u0070\u006fr\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027%\u0073\u0027",_aabf );
_cbge ._dffgf =append (_cbge ._dffgf ,_aabf );};};};func (_cfea *TextRegion )decodeIb (_efdac ,_cebg int64 )(*_fc .Bitmap ,error ){const _fbed ="\u0064\u0065\u0063\u006f\u0064\u0065\u0049\u0062";var (_efbac error ;_dbff *_fc .Bitmap ;);if _efdac ==0{if int (_cebg )> len (_cfea .Symbols )-1{return nil ,_ea .Error (_fbed ,"\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0049\u0042\u0020\u0062\u0069\u0074\u006d\u0061\u0070\u002e\u0020\u0069\u006e\u0064\u0065x\u0020\u006f\u0075\u0074\u0020o\u0066\u0020r\u0061\u006e\u0067\u0065");
};return _cfea .Symbols [int (_cebg )],nil ;};var _abfg ,_efcg ,_caccb ,_acdb int64 ;_abfg ,_efbac =_cfea .decodeRdw ();if _efbac !=nil {return nil ,_ea .Wrap (_efbac ,_fbed ,"");};_efcg ,_efbac =_cfea .decodeRdh ();if _efbac !=nil {return nil ,_ea .Wrap (_efbac ,_fbed ,"");
};_caccb ,_efbac =_cfea .decodeRdx ();if _efbac !=nil {return nil ,_ea .Wrap (_efbac ,_fbed ,"");};_acdb ,_efbac =_cfea .decodeRdy ();if _efbac !=nil {return nil ,_ea .Wrap (_efbac ,_fbed ,"");};if _cfea .IsHuffmanEncoded {if _ ,_efbac =_cfea .decodeSymInRefSize ();
_efbac !=nil {return nil ,_ea .Wrap (_efbac ,_fbed ,"");};_cfea ._gcccf .Align ();};_gcec :=_cfea .Symbols [_cebg ];_fdgc :=uint32 (_gcec .Width );_aadg :=uint32 (_gcec .Height );_bgab :=int32 (uint32 (_abfg )>>1)+int32 (_caccb );_bafd :=int32 (uint32 (_efcg )>>1)+int32 (_acdb );
if _cfea ._bfd ==nil {_cfea ._bfd =_gfb (_cfea ._gcccf ,nil );};_cfea ._bfd .setParameters (_cfea ._bece ,_cfea ._cfabc ,_cfea .SbrTemplate ,_fdgc +uint32 (_abfg ),_aadg +uint32 (_efcg ),_gcec ,_bgab ,_bafd ,false ,_cfea .SbrATX ,_cfea .SbrATY );_dbff ,_efbac =_cfea ._bfd .GetRegionBitmap ();
if _efbac !=nil {return nil ,_ea .Wrap (_efbac ,_fbed ,"\u0067\u0072\u0066");};if _cfea .IsHuffmanEncoded {_cfea ._gcccf .Align ();};return _dbff ,nil ;};func (_fda *GenericRegion )decodeTemplate1 (_aeg ,_edd ,_cdfc int ,_caab ,_gdc int )(_bec error ){const _bce ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0031";
var (_aaa ,_edgd int ;_ccb ,_ffe int ;_fdce byte ;_acg ,_adg int ;);if _aeg >=1{_fdce ,_bec =_fda .Bitmap .GetByte (_gdc );if _bec !=nil {return _ea .Wrap (_bec ,_bce ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_ccb =int (_fdce );};if _aeg >=2{_fdce ,_bec =_fda .Bitmap .GetByte (_gdc -_fda .Bitmap .RowStride );
if _bec !=nil {return _ea .Wrap (_bec ,_bce ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_ffe =int (_fdce )<<5;};_aaa =((_ccb >>1)&0x1f8)|((_ffe >>1)&0x1e00);for _abbd :=0;_abbd < _cdfc ;_abbd =_acg {var (_aebe byte ;_bbab int ;);_acg =_abbd +8;if _adb :=_edd -_abbd ;
_adb > 8{_bbab =8;}else {_bbab =_adb ;};if _aeg > 0{_ccb <<=8;if _acg < _edd {_fdce ,_bec =_fda .Bitmap .GetByte (_gdc +1);if _bec !=nil {return _ea .Wrap (_bec ,_bce ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_ccb |=int (_fdce );};};if _aeg > 1{_ffe <<=8;
if _acg < _edd {_fdce ,_bec =_fda .Bitmap .GetByte (_gdc -_fda .Bitmap .RowStride +1);if _bec !=nil {return _ea .Wrap (_bec ,_bce ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_ffe |=int (_fdce )<<5;};};for _cde :=0;_cde < _bbab ;_cde ++{if _fda ._ceb {_edgd =_fda .overrideAtTemplate1 (_aaa ,_abbd +_cde ,_aeg ,int (_aebe ),_cde );
_fda ._badg .SetIndex (int32 (_edgd ));}else {_fda ._badg .SetIndex (int32 (_aaa ));};_adg ,_bec =_fda ._dff .DecodeBit (_fda ._badg );if _bec !=nil {return _ea .Wrap (_bec ,_bce ,"");};_aebe |=byte (_adg )<<uint (7-_cde );_gfe :=uint (8-_cde );_aaa =((_aaa &0xefb)<<1)|_adg |((_ccb >>_gfe )&0x8)|((_ffe >>_gfe )&0x200);
};if _bfb :=_fda .Bitmap .SetByte (_caab ,_aebe );_bfb !=nil {return _ea .Wrap (_bfb ,_bce ,"");};_caab ++;_gdc ++;};return nil ;};var _ templater =&template0 {};func NewRegionSegment (r *_ce .Reader )*RegionSegment {return &RegionSegment {_gcgg :r }};
func (_bbcea *HalftoneRegion )grayScaleDecoding (_fcef int )([][]int ,error ){var (_eaagg []int8 ;_age []int8 ;);if !_bbcea .IsMMREncoded {_eaagg =make ([]int8 ,4);_age =make ([]int8 ,4);if _bbcea .HTemplate <=1{_eaagg [0]=3;}else if _bbcea .HTemplate >=2{_eaagg [0]=2;
};_age [0]=-1;_eaagg [1]=-3;_age [1]=-1;_eaagg [2]=2;_age [2]=-2;_eaagg [3]=-2;_age [3]=-2;};_fggb :=make ([]*_fc .Bitmap ,_fcef );_geg :=NewGenericRegion (_bbcea ._ggafa );_geg .setParametersMMR (_bbcea .IsMMREncoded ,_bbcea .DataOffset ,_bbcea .DataLength ,_bbcea .HGridHeight ,_bbcea .HGridWidth ,_bbcea .HTemplate ,false ,_bbcea .HSkipEnabled ,_eaagg ,_age );
_bbccf :=_fcef -1;var _fbf error ;_fggb [_bbccf ],_fbf =_geg .GetRegionBitmap ();if _fbf !=nil {return nil ,_fbf ;};for _bbccf > 0{_bbccf --;_geg .Bitmap =nil ;_fggb [_bbccf ],_fbf =_geg .GetRegionBitmap ();if _fbf !=nil {return nil ,_fbf ;};if _fbf =_bbcea .combineGrayscalePlanes (_fggb ,_bbccf );
_fbf !=nil {return nil ,_fbf ;};};return _bbcea .computeGrayScalePlanes (_fggb ,_fcef );};func (_gcdd *TextRegion )setParameters (_fgde *_ab .Decoder ,_affcd ,_afcbag bool ,_ebbb ,_ffbe uint32 ,_cdec uint32 ,_cebga int8 ,_fcgfa uint32 ,_fabcf int8 ,_ffdc _fc .CombinationOperator ,_aedd int8 ,_fgbd int16 ,_aagae ,_fedc ,_eafa ,_eaed ,_dbcfc ,_fdff ,_acdfge ,_dbef ,_cba ,_edbcg int8 ,_gbfa ,_abade []int8 ,_fgfc []*_fc .Bitmap ,_cgdc int8 ){_gcdd ._cfabc =_fgde ;
_gcdd .IsHuffmanEncoded =_affcd ;_gcdd .UseRefinement =_afcbag ;_gcdd .RegionInfo .BitmapWidth =_ebbb ;_gcdd .RegionInfo .BitmapHeight =_ffbe ;_gcdd .NumberOfSymbolInstances =_cdec ;_gcdd .SbStrips =_cebga ;_gcdd .NumberOfSymbols =_fcgfa ;_gcdd .DefaultPixel =_fabcf ;
_gcdd .CombinationOperator =_ffdc ;_gcdd .IsTransposed =_aedd ;_gcdd .ReferenceCorner =_fgbd ;_gcdd .SbDsOffset =_aagae ;_gcdd .SbHuffFS =_fedc ;_gcdd .SbHuffDS =_eafa ;_gcdd .SbHuffDT =_eaed ;_gcdd .SbHuffRDWidth =_dbcfc ;_gcdd .SbHuffRDHeight =_fdff ;
_gcdd .SbHuffRSize =_cba ;_gcdd .SbHuffRDX =_acdfge ;_gcdd .SbHuffRDY =_dbef ;_gcdd .SbrTemplate =_edbcg ;_gcdd .SbrATX =_gbfa ;_gcdd .SbrATY =_abade ;_gcdd .Symbols =_fgfc ;_gcdd ._dffd =_cgdc ;};func (_dgf *template0 )form (_eagdb ,_efc ,_abdc ,_dec ,_dea int16 )int16 {return (_eagdb <<10)|(_efc <<7)|(_abdc <<4)|(_dec <<1)|_dea ;
};func (_bedb *Header )readDataStartOffset (_bgf *_ce .Reader ,_fbc OrganizationType ){if _fbc ==OSequential {_bedb .SegmentDataStartOffset =uint64 (_bgf .AbsolutePosition ());};};func (_cfb *Header )readReferredToSegmentNumbers (_dcca *_ce .Reader ,_feeab int )([]int ,error ){const _bcfc ="\u0072\u0065\u0061\u0064R\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053e\u0067m\u0065\u006e\u0074\u004e\u0075\u006d\u0062e\u0072\u0073";
_aaed :=make ([]int ,_feeab );if _feeab > 0{_cfb .RTSegments =make ([]*Header ,_feeab );var (_cffb uint64 ;_agcf error ;);for _beea :=0;_beea < _feeab ;_beea ++{_cffb ,_agcf =_dcca .ReadBits (byte (_cfb .referenceSize ())<<3);if _agcf !=nil {return nil ,_ea .Wrapf (_agcf ,_bcfc ,"\u0027\u0025\u0064\u0027 \u0072\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0020\u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u0075\u006db\u0065\u0072",_beea );
};_aaed [_beea ]=int (_cffb &_e .MaxInt32 );};};return _aaed ,nil ;};func (_bdf *Header )writeReferredToCount (_acfc _ce .BinaryWriter )(_dccf int ,_dffg error ){const _efba ="w\u0072i\u0074\u0065\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0043ou\u006e\u0074";
_bdf .RTSNumbers =make ([]int ,len (_bdf .RTSegments ));for _ccd ,_ccbc :=range _bdf .RTSegments {_bdf .RTSNumbers [_ccd ]=int (_ccbc .SegmentNumber );};if len (_bdf .RTSNumbers )<=4{var _agdb byte ;if len (_bdf .RetainBits )>=1{_agdb =_bdf .RetainBits [0];
};_agdb |=byte (len (_bdf .RTSNumbers ))<<5;if _dffg =_acfc .WriteByte (_agdb );_dffg !=nil {return 0,_ea .Wrap (_dffg ,_efba ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return 1,nil ;};_agbd :=uint32 (len (_bdf .RTSNumbers ));
_bgdg :=make ([]byte ,4+_cb .Ceil (len (_bdf .RTSNumbers )+1,8));_agbd |=0x7<<29;_d .BigEndian .PutUint32 (_bgdg ,_agbd );copy (_bgdg [1:],_bdf .RetainBits );_dccf ,_dffg =_acfc .Write (_bgdg );if _dffg !=nil {return 0,_ea .Wrap (_dffg ,_efba ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");
};return _dccf ,nil ;};const (TSymbolDictionary Type =0;TIntermediateTextRegion Type =4;TImmediateTextRegion Type =6;TImmediateLosslessTextRegion Type =7;TPatternDictionary Type =16;TIntermediateHalftoneRegion Type =20;TImmediateHalftoneRegion Type =22;
TImmediateLosslessHalftoneRegion Type =23;TIntermediateGenericRegion Type =36;TImmediateGenericRegion Type =38;TImmediateLosslessGenericRegion Type =39;TIntermediateGenericRefinementRegion Type =40;TImmediateGenericRefinementRegion Type =42;TImmediateLosslessGenericRefinementRegion Type =43;
TPageInformation Type =48;TEndOfPage Type =49;TEndOfStrip Type =50;TEndOfFile Type =51;TProfiles Type =52;TTables Type =53;TExtension Type =62;TBitmap Type =70;);func (_egcg *SymbolDictionary )parseHeader ()(_degg error ){_eec .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _degg !=nil {_eec .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u0020\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u005b\u0050\u0041\u0052SE\u002d\u0048\u0045A\u0044\u0045R\u005d\u0020\u0066\u0061\u0069\u006ce\u0064\u002e \u0025\u0076",_degg );
}else {_eec .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _degg =_egcg .readRegionFlags ();_degg !=nil {return _degg ;};if _degg =_egcg .setAtPixels ();_degg !=nil {return _degg ;};if _degg =_egcg .setRefinementAtPixels ();_degg !=nil {return _degg ;};if _degg =_egcg .readNumberOfExportedSymbols ();_degg !=nil {return _degg ;
};if _degg =_egcg .readNumberOfNewSymbols ();_degg !=nil {return _degg ;};if _degg =_egcg .setInSyms ();_degg !=nil {return _degg ;};if _egcg ._febf {_fddg :=_egcg .Header .RTSegments ;for _cfbd :=len (_fddg )-1;_cfbd >=0;_cfbd --{if _fddg [_cfbd ].Type ==0{_befg ,_efdaf :=_fddg [_cfbd ].SegmentData .(*SymbolDictionary );
if !_efdaf {_degg =_a .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074:\u0020\u0025\u0076\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020S\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_fddg [_cfbd ]);
return _degg ;};if _befg ._febf {_egcg .setRetainedCodingContexts (_befg );};break ;};};};if _degg =_egcg .checkInput ();_degg !=nil {return _degg ;};return nil ;};func (_cbc *GenericRegion )copyLineAbove (_aff int )error {_dgfb :=_aff *_cbc .Bitmap .RowStride ;
_bff :=_dgfb -_cbc .Bitmap .RowStride ;for _fgg :=0;_fgg < _cbc .Bitmap .RowStride ;_fgg ++{_cbce ,_fge :=_cbc .Bitmap .GetByte (_bff );if _fge !=nil {return _fge ;};_bff ++;if _fge =_cbc .Bitmap .SetByte (_dgfb ,_cbce );_fge !=nil {return _fge ;};_dgfb ++;
};return nil ;};func (_cbe *EndOfStripe )parseHeader ()error {_ba ,_fgf :=_cbe ._cf .ReadBits (32);if _fgf !=nil {return _fgf ;};_cbe ._fg =int (_ba &_e .MaxInt32 );return nil ;};func (_cdf *GenericRefinementRegion )decodeTypicalPredictedLineTemplate1 (_eafg ,_ggg ,_dca ,_df ,_ac ,_egd ,_dfe ,_dbd ,_cbb int )(_fbe error ){var (_ecc ,_dga int ;
_cbea ,_beg int ;_cbf ,_cgd int ;_afg byte ;);if _eafg > 0{_afg ,_fbe =_cdf .RegionBitmap .GetByte (_dfe -_dca );if _fbe !=nil {return ;};_cbea =int (_afg );};if _dbd > 0&&_dbd <=_cdf .ReferenceBitmap .Height {_afg ,_fbe =_cdf .ReferenceBitmap .GetByte (_cbb -_df +_egd );
if _fbe !=nil {return ;};_beg =int (_afg )<<2;};if _dbd >=0&&_dbd < _cdf .ReferenceBitmap .Height {_afg ,_fbe =_cdf .ReferenceBitmap .GetByte (_cbb +_egd );if _fbe !=nil {return ;};_cbf =int (_afg );};if _dbd > -2&&_dbd < _cdf .ReferenceBitmap .Height -1{_afg ,_fbe =_cdf .ReferenceBitmap .GetByte (_cbb +_df +_egd );
if _fbe !=nil {return ;};_cgd =int (_afg );};_ecc =((_cbea >>5)&0x6)|((_cgd >>2)&0x30)|(_cbf &0xc0)|(_beg &0x200);_dga =((_cgd >>2)&0x70)|(_cbf &0xc0)|(_beg &0x700);var _gagg int ;for _bc :=0;_bc < _ac ;_bc =_gagg {var (_eagd int ;_cgf int ;);_gagg =_bc +8;
if _eagd =_ggg -_bc ;_eagd > 8{_eagd =8;};_gf :=_gagg < _ggg ;_beb :=_gagg < _cdf .ReferenceBitmap .Width ;_fag :=_egd +1;if _eafg > 0{_afg =0;if _gf {_afg ,_fbe =_cdf .RegionBitmap .GetByte (_dfe -_dca +1);if _fbe !=nil {return ;};};_cbea =(_cbea <<8)|int (_afg );
};if _dbd > 0&&_dbd <=_cdf .ReferenceBitmap .Height {var _dcad int ;if _beb {_afg ,_fbe =_cdf .ReferenceBitmap .GetByte (_cbb -_df +_fag );if _fbe !=nil {return ;};_dcad =int (_afg )<<2;};_beg =(_beg <<8)|_dcad ;};if _dbd >=0&&_dbd < _cdf .ReferenceBitmap .Height {_afg =0;
if _beb {_afg ,_fbe =_cdf .ReferenceBitmap .GetByte (_cbb +_fag );if _fbe !=nil {return ;};};_cbf =(_cbf <<8)|int (_afg );};if _dbd > -2&&_dbd < (_cdf .ReferenceBitmap .Height -1){_afg =0;if _beb {_afg ,_fbe =_cdf .ReferenceBitmap .GetByte (_cbb +_df +_fag );
if _fbe !=nil {return ;};};_cgd =(_cgd <<8)|int (_afg );};for _ad :=0;_ad < _eagd ;_ad ++{var _bbc int ;_fab :=(_dga >>4)&0x1ff;switch _fab {case 0x1ff:_bbc =1;case 0x00:_bbc =0;default:_cdf ._fb .SetIndex (int32 (_ecc ));_bbc ,_fbe =_cdf ._eg .DecodeBit (_cdf ._fb );
if _fbe !=nil {return ;};};_cef :=uint (7-_ad );_cgf |=_bbc <<_cef ;_ecc =((_ecc &0x0d6)<<1)|_bbc |(_cbea >>_cef +5)&0x002|((_cgd >>_cef +2)&0x010)|((_cbf >>_cef )&0x040)|((_beg >>_cef )&0x200);_dga =((_dga &0xdb)<<1)|((_cgd >>_cef +2)&0x010)|((_cbf >>_cef )&0x080)|((_beg >>_cef )&0x400);
};_fbe =_cdf .RegionBitmap .SetByte (_dfe ,byte (_cgf ));if _fbe !=nil {return ;};_dfe ++;_cbb ++;};return nil ;};func (_aeda *GenericRegion )InitEncode (bm *_fc .Bitmap ,xLoc ,yLoc ,template int ,duplicateLineRemoval bool )error {const _ffg ="\u0047e\u006e\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069\u006f\u006e.\u0049\u006e\u0069\u0074\u0045\u006e\u0063\u006f\u0064\u0065";
if bm ==nil {return _ea .Error (_ffg ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if xLoc < 0||yLoc < 0{return _ea .Error (_ffg ,"\u0078\u0020\u0061\u006e\u0064\u0020\u0079\u0020\u006c\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074h\u0061\u006e\u0020\u0030");
};_aeda .Bitmap =bm ;_aeda .GBTemplate =byte (template );switch _aeda .GBTemplate {case 0:_aeda .GBAtX =[]int8 {3,-3,2,-2};_aeda .GBAtY =[]int8 {-1,-1,-2,-2};case 1:_aeda .GBAtX =[]int8 {3};_aeda .GBAtY =[]int8 {-1};case 2,3:_aeda .GBAtX =[]int8 {2};_aeda .GBAtY =[]int8 {-1};
default:return _ea .Errorf (_ffg ,"\u0070\u0072o\u0076\u0069\u0064\u0065\u0064 \u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u007b\u0030\u002c\u0031\u002c\u0032\u002c\u0033\u007d",template );
};_aeda .RegionSegment =&RegionSegment {BitmapHeight :uint32 (bm .Height ),BitmapWidth :uint32 (bm .Width ),XLocation :uint32 (xLoc ),YLocation :uint32 (yLoc )};_aeda .IsTPGDon =duplicateLineRemoval ;return nil ;};func (_adae *HalftoneRegion )computeGrayScalePlanes (_egdf []*_fc .Bitmap ,_afdb int )([][]int ,error ){_bbaa :=make ([][]int ,_adae .HGridHeight );
for _aegg :=0;_aegg < len (_bbaa );_aegg ++{_bbaa [_aegg ]=make ([]int ,_adae .HGridWidth );};for _abaa :=0;_abaa < int (_adae .HGridHeight );_abaa ++{for _fdgf :=0;_fdgf < int (_adae .HGridWidth );_fdgf +=8{var _eafb int ;if _aegd :=int (_adae .HGridWidth )-_fdgf ;
_aegd > 8{_eafb =8;}else {_eafb =_aegd ;};_bbce :=_egdf [0].GetByteIndex (_fdgf ,_abaa );for _gec :=0;_gec < _eafb ;_gec ++{_gfc :=_gec +_fdgf ;_bbaa [_abaa ][_gfc ]=0;for _ddc :=0;_ddc < _afdb ;_ddc ++{_fabb ,_ddfe :=_egdf [_ddc ].GetByte (_bbce );if _ddfe !=nil {return nil ,_ddfe ;
};_adbdb :=_fabb >>uint (7-_gfc &7);_fdcc :=_adbdb &1;_bage :=1<<uint (_ddc );_bed :=int (_fdcc )*_bage ;_bbaa [_abaa ][_gfc ]+=_bed ;};};};};return _bbaa ,nil ;};func (_ebaag *SymbolDictionary )huffDecodeRefAggNInst ()(int64 ,error ){if !_ebaag .SdHuffAggInstanceSelection {_bgde ,_ddff :=_aa .GetStandardTable (1);
if _ddff !=nil {return 0,_ddff ;};return _bgde .Decode (_ebaag ._aafe );};if _ebaag ._cedc ==nil {var (_dafd int ;_gecaa error ;);if _ebaag .SdHuffDecodeHeightSelection ==3{_dafd ++;};if _ebaag .SdHuffDecodeWidthSelection ==3{_dafd ++;};if _ebaag .SdHuffBMSizeSelection ==3{_dafd ++;
};_ebaag ._cedc ,_gecaa =_ebaag .getUserTable (_dafd );if _gecaa !=nil {return 0,_gecaa ;};};return _ebaag ._cedc .Decode (_ebaag ._aafe );};func (_ddgcc *SymbolDictionary )checkInput ()error {if _ddgcc .SdHuffDecodeHeightSelection ==2{_eec .Log .Debug ("\u0053\u0079\u006d\u0062\u006fl\u0020\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u0053e\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0070\u0065r\u006d\u0069\u0074\u0074\u0065\u0064",_ddgcc .SdHuffDecodeHeightSelection );
};if _ddgcc .SdHuffDecodeWidthSelection ==2{_eec .Log .Debug ("\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0057\u0069\u0064t\u0068\u0020\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061l\u0075\u0065\u0020\u006e\u006f\u0074 \u0070\u0065r\u006d\u0069t\u0074e\u0064",_ddgcc .SdHuffDecodeWidthSelection );
};if _ddgcc .IsHuffmanEncoded {if _ddgcc .SdTemplate !=0{_eec .Log .Debug ("\u0053\u0044T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e \u0030\u0029",_ddgcc .SdTemplate );
};if !_ddgcc .UseRefinementAggregation {if !_ddgcc .UseRefinementAggregation {if _ddgcc ._ded {_eec .Log .Debug ("\u0049\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074ex\u0074\u0052\u0065\u0074\u0061\u0069n\u0065\u0064\u0020\u003d\u0020\u0074\u0072\u0075\u0065\u0020\u0028\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0066\u0061\u006cs\u0065\u0029");
_ddgcc ._ded =false ;};if _ddgcc ._febf {_eec .Log .Debug ("\u0069s\u0043\u006fd\u0069\u006e\u0067\u0043o\u006e\u0074\u0065x\u0074\u0055\u0073\u0065\u0064\u0020\u003d\u0020\u0074ru\u0065\u0020\u0028s\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020f\u0061\u006cs\u0065\u0029");
_ddgcc ._febf =false ;};};};}else {if _ddgcc .SdHuffBMSizeSelection !=0{_eec .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066B\u004d\u0053\u0069\u007a\u0065\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_ddgcc .SdHuffBMSizeSelection =0;};if _ddgcc .SdHuffDecodeWidthSelection !=0{_eec .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068\u0053\u0065\u006c\u0065\u0063\u0074\u0069o\u006e\u0020\u0073\u0068\u006fu\u006c\u0064 \u0062\u0065\u0020\u0030");
_ddgcc .SdHuffDecodeWidthSelection =0;};if _ddgcc .SdHuffDecodeHeightSelection !=0{_eec .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0048e\u0069\u0067\u0068\u0074\u0053\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_ddgcc .SdHuffDecodeHeightSelection =0;};};if !_ddgcc .UseRefinementAggregation {if _ddgcc .SdrTemplate !=0{_eec .Log .Debug ("\u0053\u0044\u0052\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u003d\u0020\u0025\u0064\u0020\u0028s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_ddgcc .SdrTemplate );
_ddgcc .SdrTemplate =0;};};if !_ddgcc .IsHuffmanEncoded ||!_ddgcc .UseRefinementAggregation {if _ddgcc .SdHuffAggInstanceSelection {_eec .Log .Debug ("\u0053d\u0048\u0075f\u0066\u0041\u0067g\u0049\u006e\u0073\u0074\u0061\u006e\u0063e\u0053\u0065\u006c\u0065\u0063\u0074i\u006f\u006e\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_ddgcc .SdHuffAggInstanceSelection );
};};return nil ;};type PatternDictionary struct{_ffef *_ce .Reader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;GBAtX []int8 ;GBAtY []int8 ;IsMMREncoded bool ;HDTemplate byte ;HdpWidth byte ;HdpHeight byte ;Patterns []*_fc .Bitmap ;
GrayMax uint32 ;};func (_fcec *GenericRegion )decodeLine (_fgb ,_bfe ,_affc int )error {const _cgdaf ="\u0064\u0065\u0063\u006f\u0064\u0065\u004c\u0069\u006e\u0065";_fde :=_fcec .Bitmap .GetByteIndex (0,_fgb );_bbd :=_fde -_fcec .Bitmap .RowStride ;switch _fcec .GBTemplate {case 0:if !_fcec .UseExtTemplates {return _fcec .decodeTemplate0a (_fgb ,_bfe ,_affc ,_fde ,_bbd );
};return _fcec .decodeTemplate0b (_fgb ,_bfe ,_affc ,_fde ,_bbd );case 1:return _fcec .decodeTemplate1 (_fgb ,_bfe ,_affc ,_fde ,_bbd );case 2:return _fcec .decodeTemplate2 (_fgb ,_bfe ,_affc ,_fde ,_bbd );case 3:return _fcec .decodeTemplate3 (_fgb ,_bfe ,_affc ,_fde ,_bbd );
};return _ea .Errorf (_cgdaf ,"\u0069\u006e\u0076a\u006c\u0069\u0064\u0020G\u0042\u0054\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u003a\u0020\u0025\u0064",_fcec .GBTemplate );};func (_ffdd *TextRegion )parseHeader ()error {var _geae error ;
_eec .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069n\u0073\u002e\u002e\u002e");defer func (){if _geae !=nil {_eec .Log .Trace ("\u005b\u0054\u0045\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044E\u0052\u005d\u0020\u0066\u0061i\u006c\u0065d\u002e\u0020\u0025\u0076",_geae );
}else {_eec .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069s\u0068\u0065\u0064\u002e");};}();if _geae =_ffdd .RegionInfo .parseHeader ();
_geae !=nil {return _geae ;};if _geae =_ffdd .readRegionFlags ();_geae !=nil {return _geae ;};if _ffdd .IsHuffmanEncoded {if _geae =_ffdd .readHuffmanFlags ();_geae !=nil {return _geae ;};};if _geae =_ffdd .readUseRefinement ();_geae !=nil {return _geae ;
};if _geae =_ffdd .readAmountOfSymbolInstances ();_geae !=nil {return _geae ;};if _geae =_ffdd .getSymbols ();_geae !=nil {return _geae ;};if _geae =_ffdd .computeSymbolCodeLength ();_geae !=nil {return _geae ;};if _geae =_ffdd .checkInput ();_geae !=nil {return _geae ;
};_eec .Log .Trace ("\u0025\u0073",_ffdd .String ());return nil ;};func (_edae *PageInformationSegment )Encode (w _ce .BinaryWriter )(_agff int ,_gfeb error ){const _caga ="\u0050\u0061g\u0065\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u002e\u0045\u006eco\u0064\u0065";
_deff :=make ([]byte ,4);_d .BigEndian .PutUint32 (_deff ,uint32 (_edae .PageBMWidth ));_agff ,_gfeb =w .Write (_deff );if _gfeb !=nil {return _agff ,_ea .Wrap (_gfeb ,_caga ,"\u0077\u0069\u0064t\u0068");};_d .BigEndian .PutUint32 (_deff ,uint32 (_edae .PageBMHeight ));
var _ffegd int ;_ffegd ,_gfeb =w .Write (_deff );if _gfeb !=nil {return _ffegd +_agff ,_ea .Wrap (_gfeb ,_caga ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_agff +=_ffegd ;_d .BigEndian .PutUint32 (_deff ,uint32 (_edae .ResolutionX ));_ffegd ,_gfeb =w .Write (_deff );
if _gfeb !=nil {return _ffegd +_agff ,_ea .Wrap (_gfeb ,_caga ,"\u0078\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_agff +=_ffegd ;_d .BigEndian .PutUint32 (_deff ,uint32 (_edae .ResolutionY ));if _ffegd ,_gfeb =w .Write (_deff );_gfeb !=nil {return _ffegd +_agff ,_ea .Wrap (_gfeb ,_caga ,"\u0079\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");
};_agff +=_ffegd ;if _gfeb =_edae .encodeFlags (w );_gfeb !=nil {return _agff ,_ea .Wrap (_gfeb ,_caga ,"");};_agff ++;if _ffegd ,_gfeb =_edae .encodeStripingInformation (w );_gfeb !=nil {return _agff ,_ea .Wrap (_gfeb ,_caga ,"");};_agff +=_ffegd ;return _agff ,nil ;
};func (_bbbae *Header )parse (_gbd Documenter ,_cfeg *_ce .Reader ,_aaef int64 ,_bdeb OrganizationType )(_afba error ){const _egf ="\u0070\u0061\u0072s\u0065";_eec .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u005b\u0050A\u0052\u0053\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");
defer func (){if _afba !=nil {_eec .Log .Trace ("\u005b\u0053\u0045GM\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045R\u005d[\u0050A\u0052S\u0045\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_afba );}else {_eec .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052]\u005bP\u0041\u0052\u0053\u0045\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
};}();_ ,_afba =_cfeg .Seek (_aaef ,_ed .SeekStart );if _afba !=nil {return _ea .Wrap (_afba ,_egf ,"\u0073\u0065\u0065\u006b\u0020\u0073\u0074\u0061\u0072\u0074");};if _afba =_bbbae .readSegmentNumber (_cfeg );_afba !=nil {return _ea .Wrap (_afba ,_egf ,"");
};if _afba =_bbbae .readHeaderFlags ();_afba !=nil {return _ea .Wrap (_afba ,_egf ,"");};var _feea uint64 ;_feea ,_afba =_bbbae .readNumberOfReferredToSegments (_cfeg );if _afba !=nil {return _ea .Wrap (_afba ,_egf ,"");};_bbbae .RTSNumbers ,_afba =_bbbae .readReferredToSegmentNumbers (_cfeg ,int (_feea ));
if _afba !=nil {return _ea .Wrap (_afba ,_egf ,"");};_afba =_bbbae .readSegmentPageAssociation (_gbd ,_cfeg ,_feea ,_bbbae .RTSNumbers ...);if _afba !=nil {return _ea .Wrap (_afba ,_egf ,"");};if _bbbae .Type !=TEndOfFile {if _afba =_bbbae .readSegmentDataLength (_cfeg );
_afba !=nil {return _ea .Wrap (_afba ,_egf ,"");};};_bbbae .readDataStartOffset (_cfeg ,_bdeb );_bbbae .readHeaderLength (_cfeg ,_aaef );_eec .Log .Trace ("\u0025\u0073",_bbbae );return nil ;};func (_dfec *GenericRegion )overrideAtTemplate2 (_dgc ,_eaga ,_dgbg ,_bdg ,_ddgc int )int {_dgc &=0x3FB;
if _dfec .GBAtY [0]==0&&_dfec .GBAtX [0]>=-int8 (_ddgc ){_dgc |=(_bdg >>uint (7-(int8 (_ddgc )+_dfec .GBAtX [0]))&0x1)<<2;}else {_dgc |=int (_dfec .getPixel (_eaga +int (_dfec .GBAtX [0]),_dgbg +int (_dfec .GBAtY [0])))<<2;};return _dgc ;};func (_fcddc *SymbolDictionary )String ()string {_cafe :=&_ee .Builder {};
_cafe .WriteString ("\n\u005b\u0053\u0059\u004dBO\u004c-\u0044\u0049\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u000a");_cafe .WriteString (_a .Sprintf ("\u0009-\u0020S\u0064\u0072\u0054\u0065\u006dp\u006c\u0061t\u0065\u0020\u0025\u0076\u000a",_fcddc .SdrTemplate ));
_cafe .WriteString (_a .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0025\u0076\u000a",_fcddc .SdTemplate ));_cafe .WriteString (_a .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006eg\u0043\u006f\u006e\u0074\u0065\u0078\u0074R\u0065\u0074\u0061\u0069\u006e\u0065\u0064\u0020\u0025\u0076\u000a",_fcddc ._ded ));
_cafe .WriteString (_a .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074\u0065\u0078\u0074\u0055\u0073\u0065\u0064 \u0025\u0076\u000a",_fcddc ._febf ));_cafe .WriteString (_a .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_fcddc .SdHuffAggInstanceSelection ));
_cafe .WriteString (_a .Sprintf ("\u0009\u002d\u0020\u0053d\u0048\u0075\u0066\u0066\u0042\u004d\u0053\u0069\u007a\u0065S\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020%\u0076\u000a",_fcddc .SdHuffBMSizeSelection ));_cafe .WriteString (_a .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_fcddc .SdHuffDecodeWidthSelection ));
_cafe .WriteString (_a .Sprintf ("\u0009\u002d\u0020Sd\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064e\u0048e\u0069g\u0068t\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_fcddc .SdHuffDecodeHeightSelection ));_cafe .WriteString (_a .Sprintf ("\u0009\u002d\u0020U\u0073\u0065\u0052\u0065f\u0069\u006e\u0065\u006d\u0065\u006e\u0074A\u0067\u0067\u0072\u0065\u0067\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_fcddc .UseRefinementAggregation ));
_cafe .WriteString (_a .Sprintf ("\u0009\u002d\u0020is\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045\u006e\u0063\u006f\u0064\u0065\u0064\u0020\u0025\u0076\u000a",_fcddc .IsHuffmanEncoded ));_cafe .WriteString (_a .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_fcddc .SdATX ));
_cafe .WriteString (_a .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_fcddc .SdATY ));_cafe .WriteString (_a .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_fcddc .SdrATX ));
_cafe .WriteString (_a .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_fcddc .SdrATY ));_cafe .WriteString (_a .Sprintf ("\u0009\u002d\u0020\u004e\u0075\u006d\u0062\u0065\u0072\u004ff\u0045\u0078\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_fcddc .NumberOfExportedSymbols ));
_cafe .WriteString (_a .Sprintf ("\u0009-\u0020\u004e\u0075\u006db\u0065\u0072\u004f\u0066\u004ee\u0077S\u0079m\u0062\u006f\u006c\u0073\u0020\u0025\u0076\n",_fcddc .NumberOfNewSymbols ));_cafe .WriteString (_a .Sprintf ("\u0009\u002d\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u004ff\u0049\u006d\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_fcddc ._gca ));
_cafe .WriteString (_a .Sprintf ("\u0009\u002d \u006e\u0075\u006d\u0062\u0065\u0072\u004f\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0064\u0053\u0079\u006d\u0062\u006f\u006c\u0073 %\u0076\u000a",_fcddc ._aacd ));return _cafe .String ();};func (_dfbd *Header )readNumberOfReferredToSegments (_fgda *_ce .Reader )(uint64 ,error ){const _efcb ="\u0072\u0065\u0061\u0064\u004e\u0075\u006d\u0062\u0065\u0072O\u0066\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
_cead ,_aabd :=_fgda .ReadBits (3);if _aabd !=nil {return 0,_ea .Wrap (_aabd ,_efcb ,"\u0063\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0072\u0074\u0073");};_cead &=0xf;var _dabb []byte ;if _cead <=4{_dabb =make ([]byte ,5);for _cacg :=0;_cacg <=4;_cacg ++{_bdef ,_dddgd :=_fgda .ReadBit ();
if _dddgd !=nil {return 0,_ea .Wrap (_dddgd ,_efcb ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_dabb [_cacg ]=byte (_bdef );};}else {_cead ,_aabd =_fgda .ReadBits (29);if _aabd !=nil {return 0,_aabd ;};_cead &=_e .MaxInt32 ;
_fgbgg :=(_cead +8)>>3;_fgbgg <<=3;_dabb =make ([]byte ,_fgbgg );var _gdba uint64 ;for _gdba =0;_gdba < _fgbgg ;_gdba ++{_bcge ,_fgcd :=_fgda .ReadBit ();if _fgcd !=nil {return 0,_ea .Wrap (_fgcd ,_efcb ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");
};_dabb [_gdba ]=byte (_bcge );};};return _cead ,nil ;};func _dfeb (_dece *_ce .Reader ,_acbb *Header )*TextRegion {_gegb :=&TextRegion {_gcccf :_dece ,Header :_acbb ,RegionInfo :NewRegionSegment (_dece )};return _gegb ;};func NewHeader (d Documenter ,r *_ce .Reader ,offset int64 ,organizationType OrganizationType )(*Header ,error ){_geca :=&Header {Reader :r };
if _dabf :=_geca .parse (d ,r ,offset ,organizationType );_dabf !=nil {return nil ,_ea .Wrap (_dabf ,"\u004ee\u0077\u0048\u0065\u0061\u0064\u0065r","");};return _geca ,nil ;};func (_acdf *HalftoneRegion )combineGrayscalePlanes (_ebef []*_fc .Bitmap ,_aag int )error {_edb :=0;
for _adf :=0;_adf < _ebef [_aag ].Height ;_adf ++{for _ebcg :=0;_ebcg < _ebef [_aag ].Width ;_ebcg +=8{_aeeg ,_fgbg :=_ebef [_aag +1].GetByte (_edb );if _fgbg !=nil {return _fgbg ;};_bbe ,_fgbg :=_ebef [_aag ].GetByte (_edb );if _fgbg !=nil {return _fgbg ;
};_fgbg =_ebef [_aag ].SetByte (_edb ,_fc .CombineBytes (_bbe ,_aeeg ,_fc .CmbOpXor ));if _fgbg !=nil {return _fgbg ;};_edb ++;};};return nil ;};func (_fgdg *GenericRefinementRegion )overrideAtTemplate0 (_cecf ,_gbg ,_aeaf ,_bbac ,_dfg int )int {if _fgdg ._edf [0]{_cecf &=0xfff7;
if _fgdg .GrAtY [0]==0&&int (_fgdg .GrAtX [0])>=-_dfg {_cecf |=(_bbac >>uint (7-(_dfg +int (_fgdg .GrAtX [0])))&0x1)<<3;}else {_cecf |=_fgdg .getPixel (_fgdg .RegionBitmap ,_gbg +int (_fgdg .GrAtX [0]),_aeaf +int (_fgdg .GrAtY [0]))<<3;};};if _fgdg ._edf [1]{_cecf &=0xefff;
if _fgdg .GrAtY [1]==0&&int (_fgdg .GrAtX [1])>=-_dfg {_cecf |=(_bbac >>uint (7-(_dfg +int (_fgdg .GrAtX [1])))&0x1)<<12;}else {_cecf |=_fgdg .getPixel (_fgdg .ReferenceBitmap ,_gbg +int (_fgdg .GrAtX [1]),_aeaf +int (_fgdg .GrAtY [1]));};};return _cecf ;
};func _gfb (_eafgd *_ce .Reader ,_bd *Header )*GenericRefinementRegion {return &GenericRefinementRegion {_af :_eafgd ,RegionInfo :NewRegionSegment (_eafgd ),_ae :_bd ,_dbf :&template0 {},_fcd :&template1 {}};};func (_feaa *SymbolDictionary )getSbSymCodeLen ()int8 {_dgbgf :=int8 (_e .Ceil (_e .Log (float64 (_feaa ._gca +_feaa .NumberOfNewSymbols ))/_e .Log (2)));
if _feaa .IsHuffmanEncoded &&_dgbgf < 1{return 1;};return _dgbgf ;};func (_dfa *TableSegment )StreamReader ()*_ce .Reader {return _dfa ._bfac };func (_eedf *TextRegion )InitEncode (globalSymbolsMap ,localSymbolsMap map[int ]int ,comps []int ,inLL *_fc .Points ,symbols *_fc .Bitmaps ,classIDs *_cb .IntSlice ,boxes *_fc .Boxes ,width ,height ,symBits int ){_eedf .RegionInfo =&RegionSegment {BitmapWidth :uint32 (width ),BitmapHeight :uint32 (height )};
_eedf ._ggdeg =globalSymbolsMap ;_eedf ._ddfdc =localSymbolsMap ;_eedf ._gede =comps ;_eedf ._ebde =inLL ;_eedf ._bbbd =symbols ;_eedf ._bbeg =classIDs ;_eedf ._cdee =boxes ;_eedf ._adab =symBits ;};func (_fgdbg *HalftoneRegion )GetRegionInfo ()*RegionSegment {return _fgdbg .RegionSegment };
func (_dcf Type )String ()string {switch _dcf {case TSymbolDictionary :return "\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079";case TIntermediateTextRegion :return "\u0049n\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020T\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TImmediateTextRegion :return "I\u006d\u006d\u0065\u0064ia\u0074e\u0020\u0054\u0065\u0078\u0074 \u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessTextRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020L\u006f\u0073\u0073\u006c\u0065\u0073\u0073 \u0054\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TPatternDictionary :return "\u0050a\u0074t\u0065\u0072\u006e\u0020\u0044i\u0063\u0074i\u006f\u006e\u0061\u0072\u0079";case TIntermediateHalftoneRegion :return "\u0049\u006e\u0074\u0065r\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0048\u0061l\u0066t\u006f\u006e\u0065\u0020\u0052\u0065\u0067i\u006f\u006e";
case TImmediateHalftoneRegion :return "\u0049m\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u0048\u0061l\u0066t\u006fn\u0065\u0020\u0052\u0065\u0067\u0069\u006fn";case TImmediateLosslessHalftoneRegion :return "\u0049\u006d\u006ded\u0069\u0061\u0074\u0065\u0020\u004c\u006f\u0073\u0073l\u0065s\u0073 \u0048a\u006c\u0066\u0074\u006f\u006e\u0065\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TIntermediateGenericRegion :return "I\u006e\u0074\u0065\u0072\u006d\u0065d\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020R\u0065g\u0069\u006f\u006e";case TImmediateGenericRegion :return "\u0049m\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006ee\u0072\u0069\u0063\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TImmediateLosslessGenericRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u004c\u006f\u0073\u0073\u006c\u0065\u0073\u0073\u0020\u0047e\u006e\u0065\u0072\u0069\u0063\u0020\u0052e\u0067\u0069\u006f\u006e";case TIntermediateGenericRefinementRegion :return "\u0049\u006e\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0020\u0052\u0065\u0066i\u006e\u0065\u006d\u0065\u006et\u0020\u0052e\u0067\u0069\u006f\u006e";
case TImmediateGenericRefinementRegion :return "I\u006d\u006d\u0065\u0064\u0069\u0061t\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020\u0052\u0065\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020\u0052\u0065\u0067\u0069o\u006e";case TImmediateLosslessGenericRefinementRegion :return "\u0049m\u006d\u0065d\u0069\u0061\u0074\u0065 \u004c\u006f\u0073s\u006c\u0065\u0073\u0073\u0020\u0047\u0065\u006e\u0065ri\u0063\u0020\u0052e\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020R\u0065\u0067i\u006f\u006e";
case TPageInformation :return "\u0050\u0061g\u0065\u0020\u0049n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e";case TEndOfPage :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0050\u0061\u0067\u0065";case TEndOfStrip :return "\u0045\u006e\u0064 \u004f\u0066\u0020\u0053\u0074\u0072\u0069\u0070";
case TEndOfFile :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0046\u0069\u006c\u0065";case TProfiles :return "\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0073";case TTables :return "\u0054\u0061\u0062\u006c\u0065\u0073";case TExtension :return "\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn";
case TBitmap :return "\u0042\u0069\u0074\u006d\u0061\u0070";};return "I\u006ev\u0061\u006c\u0069\u0064\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0020Ki\u006e\u0064";};var _ templater =&template1 {};type EndOfStripe struct{_cf *_ce .Reader ;_fg int ;};
func (_fbbd *SymbolDictionary )encodeNumSyms (_gege _ce .BinaryWriter )(_gbcd int ,_bdcd error ){const _adee ="\u0065\u006e\u0063\u006f\u0064\u0065\u004e\u0075\u006d\u0053\u0079\u006d\u0073";_aaeb :=make ([]byte ,4);_d .BigEndian .PutUint32 (_aaeb ,_fbbd .NumberOfExportedSymbols );
if _gbcd ,_bdcd =_gege .Write (_aaeb );_bdcd !=nil {return _gbcd ,_ea .Wrap (_bdcd ,_adee ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};_d .BigEndian .PutUint32 (_aaeb ,_fbbd .NumberOfNewSymbols );_aecf ,_bdcd :=_gege .Write (_aaeb );
if _bdcd !=nil {return _gbcd ,_ea .Wrap (_bdcd ,_adee ,"n\u0065\u0077\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};return _gbcd +_aecf ,nil ;};func (_bfed *GenericRegion )setParameters (_aggca bool ,_afgd ,_dfff int64 ,_gce ,_dde uint32 ){_bfed .IsMMREncoded =_aggca ;
_bfed .DataOffset =_afgd ;_bfed .DataLength =_dfff ;_bfed .RegionSegment .BitmapHeight =_gce ;_bfed .RegionSegment .BitmapWidth =_dde ;_bfed ._cad =nil ;_bfed .Bitmap =nil ;};func (_abdb *GenericRegion )Size ()int {return _abdb .RegionSegment .Size ()+1+2*len (_abdb .GBAtX )};
func (_ffeb *GenericRegion )getPixel (_fdb ,_ccac int )int8 {if _fdb < 0||_fdb >=_ffeb .Bitmap .Width {return 0;};if _ccac < 0||_ccac >=_ffeb .Bitmap .Height {return 0;};if _ffeb .Bitmap .GetPixel (_fdb ,_ccac ){return 1;};return 0;};func (_bdda *TextRegion )decodeRdy ()(int64 ,error ){const _bgea ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064y";
if _bdda .IsHuffmanEncoded {if _bdda .SbHuffRDY ==3{if _bdda ._cfbde ==nil {var (_cfdad int ;_edgba error ;);if _bdda .SbHuffFS ==3{_cfdad ++;};if _bdda .SbHuffDS ==3{_cfdad ++;};if _bdda .SbHuffDT ==3{_cfdad ++;};if _bdda .SbHuffRDWidth ==3{_cfdad ++;
};if _bdda .SbHuffRDHeight ==3{_cfdad ++;};if _bdda .SbHuffRDX ==3{_cfdad ++;};_bdda ._cfbde ,_edgba =_bdda .getUserTable (_cfdad );if _edgba !=nil {return 0,_ea .Wrap (_edgba ,_bgea ,"");};};return _bdda ._cfbde .Decode (_bdda ._gcccf );};_edgcd ,_debcg :=_aa .GetStandardTable (14+int (_bdda .SbHuffRDY ));
if _debcg !=nil {return 0,_debcg ;};return _edgcd .Decode (_bdda ._gcccf );};_agagd ,_cfcde :=_bdda ._cfabc .DecodeInt (_bdda ._ebcc );if _cfcde !=nil {return 0,_ea .Wrap (_cfcde ,_bgea ,"");};return int64 (_agagd ),nil ;};type template0 struct{};func (_gfcc *SymbolDictionary )Init (h *Header ,r *_ce .Reader )error {_gfcc .Header =h ;
_gfcc ._aafe =r ;return _gfcc .parseHeader ();};func (_gff *Header )readHeaderLength (_bebe *_ce .Reader ,_faab int64 ){_gff .HeaderLength =_bebe .AbsolutePosition ()-_faab ;};func (_fcgf *PageInformationSegment )String ()string {_fgga :=&_ee .Builder {};
_fgga .WriteString ("\u000a\u005b\u0050\u0041G\u0045\u002d\u0049\u004e\u0046\u004f\u0052\u004d\u0041\u0054I\u004fN\u002d\u0053\u0045\u0047\u004d\u0045\u004eT\u005d\u000a");_fgga .WriteString (_a .Sprintf ("\u0009\u002d \u0042\u004d\u0048e\u0069\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u000a",_fcgf .PageBMHeight ));
_fgga .WriteString (_a .Sprintf ("\u0009-\u0020B\u004d\u0057\u0069\u0064\u0074\u0068\u003a\u0020\u0025\u0064\u000a",_fcgf .PageBMWidth ));_fgga .WriteString (_a .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0058\u003a\u0020\u0025\u0064\u000a",_fcgf .ResolutionX ));
_fgga .WriteString (_a .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0059\u003a\u0020\u0025\u0064\u000a",_fcgf .ResolutionY ));_fgga .WriteString (_a .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0073\u000a",_fcgf ._faf ));
_fgga .WriteString (_a .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006eO\u0070\u0065\u0072\u0061\u0074\u006f\u0072O\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025v\u000a",_fcgf ._bbae ));_fgga .WriteString (_a .Sprintf ("\u0009-\u0020I\u0073\u004c\u006f\u0073\u0073l\u0065\u0073s\u003a\u0020\u0025\u0076\u000a",_fcgf .IsLossless ));
_fgga .WriteString (_a .Sprintf ("\u0009\u002d\u0020R\u0065\u0071\u0075\u0069r\u0065\u0073\u0041\u0075\u0078\u0069\u006ci\u0061\u0072\u0079\u0042\u0075\u0066\u0066\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_fcgf ._gffc ));_fgga .WriteString (_a .Sprintf ("\u0009\u002d\u0020M\u0069\u0067\u0068\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0052e\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0076\u000a",_fcgf ._abacd ));
_fgga .WriteString (_a .Sprintf ("\u0009\u002d\u0020\u0049\u0073\u0053\u0074\u0072\u0069\u0070\u0065\u0064:\u0020\u0025\u0076\u000a",_fcgf .IsStripe ));_fgga .WriteString (_a .Sprintf ("\t\u002d\u0020\u004d\u0061xS\u0074r\u0069\u0070\u0065\u0053\u0069z\u0065\u003a\u0020\u0025\u0076\u000a",_fcgf .MaxStripeSize ));
return _fgga .String ();};func (_dac *PageInformationSegment )readCombinationOperatorOverrideAllowed ()error {_bcfdg ,_gbcbf :=_dac ._bfc .ReadBit ();if _gbcbf !=nil {return _gbcbf ;};if _bcfdg ==1{_dac ._bbae =true ;};return nil ;};type HalftoneRegion struct{_ggafa *_ce .Reader ;
_dfd *Header ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;HDefaultPixel int8 ;CombinationOperator _fc .CombinationOperator ;HSkipEnabled bool ;HTemplate byte ;IsMMREncoded bool ;HGridWidth uint32 ;
HGridHeight uint32 ;HGridX int32 ;HGridY int32 ;HRegionX uint16 ;HRegionY uint16 ;HalftoneRegionBitmap *_fc .Bitmap ;Patterns []*_fc .Bitmap ;};func (_fdab *HalftoneRegion )computeSegmentDataStructure ()error {_fdab .DataOffset =_fdab ._ggafa .AbsolutePosition ();
_fdab .DataHeaderLength =_fdab .DataOffset -_fdab .DataHeaderOffset ;_fdab .DataLength =int64 (_fdab ._ggafa .AbsoluteLength ())-_fdab .DataHeaderLength ;return nil ;};func (_ged *GenericRefinementRegion )updateOverride ()error {if _ged .GrAtX ==nil ||_ged .GrAtY ==nil {return _cg .New ("\u0041\u0054\u0020\u0070\u0069\u0078\u0065\u006c\u0073\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");
};if len (_ged .GrAtX )!=len (_ged .GrAtY ){return _cg .New ("A\u0054\u0020\u0070\u0069xe\u006c \u0069\u006e\u0063\u006f\u006es\u0069\u0073\u0074\u0065\u006e\u0074");};_ged ._edf =make ([]bool ,len (_ged .GrAtX ));switch _ged .TemplateID {case 0:if _ged .GrAtX [0]!=-1&&_ged .GrAtY [0]!=-1{_ged ._edf [0]=true ;
_ged ._eaac =true ;};if _ged .GrAtX [1]!=-1&&_ged .GrAtY [1]!=-1{_ged ._edf [1]=true ;_ged ._eaac =true ;};case 1:_ged ._eaac =false ;};return nil ;};type Type int ;func (_cgfb *TableSegment )parseHeader ()error {var (_ddac int ;_beada uint64 ;_gaga error ;
);_ddac ,_gaga =_cgfb ._bfac .ReadBit ();if _gaga !=nil {return _gaga ;};if _ddac ==1{return _a .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0061\u0062\u006c\u0065 \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0064e\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u002e\u0020\u0042\u002e\u0032\u002e1\u0020\u0043\u006f\u0064\u0065\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0042\u0069\u0074\u0020\u0037\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u007a\u0065\u0072\u006f\u002e\u0020\u0057a\u0073\u003a \u0025\u0064",_ddac );
};if _beada ,_gaga =_cgfb ._bfac .ReadBits (3);_gaga !=nil {return _gaga ;};_cgfb ._ecg =(int32 (_beada )+1)&0xf;if _beada ,_gaga =_cgfb ._bfac .ReadBits (3);_gaga !=nil {return _gaga ;};_cgfb ._fbgae =(int32 (_beada )+1)&0xf;if _beada ,_gaga =_cgfb ._bfac .ReadBits (32);
_gaga !=nil {return _gaga ;};_cgfb ._fgagb =int32 (_beada &_e .MaxInt32 );if _beada ,_gaga =_cgfb ._bfac .ReadBits (32);_gaga !=nil {return _gaga ;};_cgfb ._adc =int32 (_beada &_e .MaxInt32 );return nil ;};func (_gcd *HalftoneRegion )GetPatterns ()([]*_fc .Bitmap ,error ){var (_fcaf []*_fc .Bitmap ;
_ffdf error ;);for _ ,_bcf :=range _gcd ._dfd .RTSegments {var _ggafaf Segmenter ;_ggafaf ,_ffdf =_bcf .GetSegmentData ();if _ffdf !=nil {_eec .Log .Debug ("\u0047e\u0074\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061 \u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025v",_ffdf );
return nil ,_ffdf ;};_fabc ,_dgcb :=_ggafaf .(*PatternDictionary );if !_dgcb {_ffdf =_a .Errorf ("\u0072e\u006c\u0061t\u0065\u0064\u0020\u0073e\u0067\u006d\u0065n\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0070at\u0074\u0065\u0072n\u0020\u0064i\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u003a \u0025\u0054",_ggafaf );
return nil ,_ffdf ;};var _aebfd []*_fc .Bitmap ;_aebfd ,_ffdf =_fabc .GetDictionary ();if _ffdf !=nil {_eec .Log .Debug ("\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_ffdf );
return nil ,_ffdf ;};_fcaf =append (_fcaf ,_aebfd ...);};return _fcaf ,nil ;};func (_eaa *EndOfStripe )LineNumber ()int {return _eaa ._fg };func (_cbbdd *HalftoneRegion )renderPattern (_bcec [][]int )(_cbcc error ){var _ffae ,_fecc int ;for _fgagg :=0;
_fgagg < int (_cbbdd .HGridHeight );_fgagg ++{for _dge :=0;_dge < int (_cbbdd .HGridWidth );_dge ++{_ffae =_cbbdd .computeX (_fgagg ,_dge );_fecc =_cbbdd .computeY (_fgagg ,_dge );_dfdg :=_cbbdd .Patterns [_bcec [_fgagg ][_dge ]];if _cbcc =_fc .Blit (_dfdg ,_cbbdd .HalftoneRegionBitmap ,_ffae +int (_cbbdd .HGridX ),_fecc +int (_cbbdd .HGridY ),_cbbdd .CombinationOperator );
_cbcc !=nil {return _cbcc ;};};};return nil ;};func (_gfeab *SymbolDictionary )setSymbolsArray ()error {if _gfeab ._ffdg ==nil {if _dcdc :=_gfeab .retrieveImportSymbols ();_dcdc !=nil {return _dcdc ;};};if _gfeab ._gdgf ==nil {_gfeab ._gdgf =append (_gfeab ._gdgf ,_gfeab ._ffdg ...);
};return nil ;};func (_eegd *PatternDictionary )computeSegmentDataStructure ()error {_eegd .DataOffset =_eegd ._ffef .AbsolutePosition ();_eegd .DataHeaderLength =_eegd .DataOffset -_eegd .DataHeaderOffset ;_eegd .DataLength =int64 (_eegd ._ffef .AbsoluteLength ())-_eegd .DataHeaderLength ;
return nil ;};func (_fcf *GenericRefinementRegion )decodeOptimized (_edc ,_edfc ,_ff ,_gg ,_dc ,_ddb ,_eee int )error {var (_ag error ;_gc int ;_dcd int ;);_ga :=_edc -int (_fcf .ReferenceDY );if _eeb :=int (-_fcf .ReferenceDX );_eeb > 0{_gc =_eeb ;};_feb :=_fcf .ReferenceBitmap .GetByteIndex (_gc ,_ga );
if _fcf .ReferenceDX > 0{_dcd =int (_fcf .ReferenceDX );};_fbg :=_fcf .RegionBitmap .GetByteIndex (_dcd ,_edc );switch _fcf .TemplateID {case 0:_ag =_fcf .decodeTemplate (_edc ,_edfc ,_ff ,_gg ,_dc ,_ddb ,_eee ,_fbg ,_ga ,_feb ,_fcf ._dbf );case 1:_ag =_fcf .decodeTemplate (_edc ,_edfc ,_ff ,_gg ,_dc ,_ddb ,_eee ,_fbg ,_ga ,_feb ,_fcf ._fcd );
};return _ag ;};type SegmentEncoder interface{Encode (_bfa _ce .BinaryWriter )(_bfgf int ,_gggg error );};func (_gbgde *TextRegion )String ()string {_fbad :=&_ee .Builder {};_fbad .WriteString ("\u000a[\u0054E\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u000a");
_fbad .WriteString (_gbgde .RegionInfo .String ()+"\u000a");_fbad .WriteString (_a .Sprintf ("\u0009\u002d\u0020\u0053br\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0025\u0076\u000a",_gbgde .SbrTemplate ));_fbad .WriteString (_a .Sprintf ("\u0009-\u0020S\u0062\u0044\u0073\u004f\u0066f\u0073\u0065t\u003a\u0020\u0025\u0076\u000a",_gbgde .SbDsOffset ));
_fbad .WriteString (_a .Sprintf ("\t\u002d \u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0050i\u0078\u0065\u006c\u003a %\u0076\u000a",_gbgde .DefaultPixel ));_fbad .WriteString (_a .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0076\u000a",_gbgde .CombinationOperator ));
_fbad .WriteString (_a .Sprintf ("\t\u002d \u0049\u0073\u0054\u0072\u0061\u006e\u0073\u0070o\u0073\u0065\u0064\u003a %\u0076\u000a",_gbgde .IsTransposed ));_fbad .WriteString (_a .Sprintf ("\u0009\u002d\u0020Re\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0043\u006f\u0072\u006e\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_gbgde .ReferenceCorner ));
_fbad .WriteString (_a .Sprintf ("\t\u002d\u0020\u0055\u0073eR\u0065f\u0069\u006e\u0065\u006d\u0065n\u0074\u003a\u0020\u0025\u0076\u000a",_gbgde .UseRefinement ));_fbad .WriteString (_a .Sprintf ("\u0009-\u0020\u0049\u0073\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045n\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0076\u000a",_gbgde .IsHuffmanEncoded ));
if _gbgde .IsHuffmanEncoded {_fbad .WriteString (_a .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_gbgde .SbHuffRSize ));_fbad .WriteString (_a .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0059:\u0020\u0025\u0076\u000a",_gbgde .SbHuffRDY ));
_fbad .WriteString (_a .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0058:\u0020\u0025\u0076\u000a",_gbgde .SbHuffRDX ));_fbad .WriteString (_a .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069\u0067\u0068\u0074\u003a\u0020\u0025v\u000a",_gbgde .SbHuffRDHeight ));
_fbad .WriteString (_a .Sprintf ("\t\u002d\u0020\u0053\u0062Hu\u0066f\u0052\u0044\u0057\u0069\u0064t\u0068\u003a\u0020\u0025\u0076\u000a",_gbgde .SbHuffRDWidth ));_fbad .WriteString (_a .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0054\u003a\u0020\u0025\u0076\u000a",_gbgde .SbHuffDT ));
_fbad .WriteString (_a .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0053\u003a\u0020\u0025\u0076\u000a",_gbgde .SbHuffDS ));_fbad .WriteString (_a .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0046\u0053\u003a\u0020\u0025\u0076\u000a",_gbgde .SbHuffFS ));
};_fbad .WriteString (_a .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_gbgde .SbrATX ));_fbad .WriteString (_a .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0059:\u0020\u0025\u0076\u000a",_gbgde .SbrATY ));
_fbad .WriteString (_a .Sprintf ("\u0009\u002d\u0020N\u0075\u006d\u0062\u0065r\u004f\u0066\u0053\u0079\u006d\u0062\u006fl\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_gbgde .NumberOfSymbolInstances ));_fbad .WriteString (_a .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_gbgde .SbrATX ));
return _fbad .String ();};func (_ada *GenericRegion )computeSegmentDataStructure ()error {_ada .DataOffset =_ada ._fgaf .AbsolutePosition ();_ada .DataHeaderLength =_ada .DataOffset -_ada .DataHeaderOffset ;_ada .DataLength =int64 (_ada ._fgaf .AbsoluteLength ())-_ada .DataHeaderLength ;
return nil ;};func (_acfg *TextRegion )decodeStripT ()(_bbaf int64 ,_abec error ){if _acfg .IsHuffmanEncoded {if _acfg .SbHuffDT ==3{if _acfg ._ggba ==nil {var _feda int ;if _acfg .SbHuffFS ==3{_feda ++;};if _acfg .SbHuffDS ==3{_feda ++;};_acfg ._ggba ,_abec =_acfg .getUserTable (_feda );
if _abec !=nil {return 0,_abec ;};};_bbaf ,_abec =_acfg ._ggba .Decode (_acfg ._gcccf );if _abec !=nil {return 0,_abec ;};}else {var _gfgd _aa .Tabler ;_gfgd ,_abec =_aa .GetStandardTable (11+int (_acfg .SbHuffDT ));if _abec !=nil {return 0,_abec ;};_bbaf ,_abec =_gfgd .Decode (_acfg ._gcccf );
if _abec !=nil {return 0,_abec ;};};}else {var _bgcc int32 ;_bgcc ,_abec =_acfg ._cfabc .DecodeInt (_acfg ._bdfe );if _abec !=nil {return 0,_abec ;};_bbaf =int64 (_bgcc );};_bbaf *=int64 (-_acfg .SbStrips );return _bbaf ,nil ;};func (_cebc *TextRegion )checkInput ()error {const _adef ="\u0063\u0068\u0065\u0063\u006b\u0049\u006e\u0070\u0075\u0074";
if !_cebc .UseRefinement {if _cebc .SbrTemplate !=0{_eec .Log .Debug ("\u0053\u0062\u0072Te\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_cebc .SbrTemplate =0;};};if _cebc .SbHuffFS ==2||_cebc .SbHuffRDWidth ==2||_cebc .SbHuffRDHeight ==2||_cebc .SbHuffRDX ==2||_cebc .SbHuffRDY ==2{return _ea .Error (_adef ,"h\u0075\u0066\u0066\u006d\u0061\u006e \u0066\u006c\u0061\u0067\u0020\u0076a\u006c\u0075\u0065\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074e\u0064");
};if !_cebc .UseRefinement {if _cebc .SbHuffRSize !=0{_eec .Log .Debug ("\u0053\u0062\u0048uf\u0066\u0052\u0053\u0069\u007a\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_cebc .SbHuffRSize =0;};if _cebc .SbHuffRDY !=0{_eec .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044Y\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");
_cebc .SbHuffRDY =0;};if _cebc .SbHuffRDX !=0{_eec .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044X\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_cebc .SbHuffRDX =0;};if _cebc .SbHuffRDWidth !=0{_eec .Log .Debug ("\u0053b\u0048\u0075\u0066\u0066R\u0044\u0057\u0069\u0064\u0074h\u0020s\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u00200");
_cebc .SbHuffRDWidth =0;};if _cebc .SbHuffRDHeight !=0{_eec .Log .Debug ("\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069g\u0068\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0030");_cebc .SbHuffRDHeight =0;};};
return nil ;};func (_acgc *PageInformationSegment )CombinationOperatorOverrideAllowed ()bool {return _acgc ._bbae };func (_bfedf *TextRegion )decodeSymbolInstances ()error {_cgbgg ,_gcdg :=_bfedf .decodeStripT ();if _gcdg !=nil {return _gcdg ;};var (_agfg int64 ;
_cdgf uint32 ;);for _cdgf < _bfedf .NumberOfSymbolInstances {_cggg ,_gagb :=_bfedf .decodeDT ();if _gagb !=nil {return _gagb ;};_cgbgg +=_cggg ;var _bdfd int64 ;_aaeff :=true ;_bfedf ._facg =0;for {if _aaeff {_bdfd ,_gagb =_bfedf .decodeDfs ();if _gagb !=nil {return _gagb ;
};_agfg +=_bdfd ;_bfedf ._facg =_agfg ;_aaeff =false ;}else {_cdege ,_gdgbg :=_bfedf .decodeIds ();if _g .Is (_gdgbg ,_ec .ErrOOB ){break ;};if _gdgbg !=nil {return _gdgbg ;};if _cdgf >=_bfedf .NumberOfSymbolInstances {break ;};_bfedf ._facg +=_cdege +int64 (_bfedf .SbDsOffset );
};_gcae ,_fggbg :=_bfedf .decodeCurrentT ();if _fggbg !=nil {return _fggbg ;};_dgce :=_cgbgg +_gcae ;_cgccg ,_fggbg :=_bfedf .decodeID ();if _fggbg !=nil {return _fggbg ;};_geab ,_fggbg :=_bfedf .decodeRI ();if _fggbg !=nil {return _fggbg ;};_fabfa ,_fggbg :=_bfedf .decodeIb (_geab ,_cgccg );
if _fggbg !=nil {return _fggbg ;};if _fggbg =_bfedf .blit (_fabfa ,_dgce );_fggbg !=nil {return _fggbg ;};_cdgf ++;};};return nil ;};func (_ddgf *TextRegion )Encode (w _ce .BinaryWriter )(_affcg int ,_fgfb error ){const _aafb ="\u0054\u0065\u0078\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u002e\u0045n\u0063\u006f\u0064\u0065";
if _affcg ,_fgfb =_ddgf .RegionInfo .Encode (w );_fgfb !=nil {return _affcg ,_ea .Wrap (_fgfb ,_aafb ,"");};var _dfab int ;if _dfab ,_fgfb =_ddgf .encodeFlags (w );_fgfb !=nil {return _affcg ,_ea .Wrap (_fgfb ,_aafb ,"");};_affcg +=_dfab ;if _dfab ,_fgfb =_ddgf .encodeSymbols (w );
_fgfb !=nil {return _affcg ,_ea .Wrap (_fgfb ,_aafb ,"");};_affcg +=_dfab ;return _affcg ,nil ;};func (_eaba *SymbolDictionary )decodeDifferenceWidth ()(int64 ,error ){if _eaba .IsHuffmanEncoded {switch _eaba .SdHuffDecodeWidthSelection {case 0:_bcae ,_cdcdf :=_aa .GetStandardTable (2);
if _cdcdf !=nil {return 0,_cdcdf ;};return _bcae .Decode (_eaba ._aafe );case 1:_gffe ,_gbed :=_aa .GetStandardTable (3);if _gbed !=nil {return 0,_gbed ;};return _gffe .Decode (_eaba ._aafe );case 3:if _eaba ._faeb ==nil {var _dccb int ;if _eaba .SdHuffDecodeHeightSelection ==3{_dccb ++;
};_eeccff ,_acfb :=_eaba .getUserTable (_dccb );if _acfb !=nil {return 0,_acfb ;};_eaba ._faeb =_eeccff ;};return _eaba ._faeb .Decode (_eaba ._aafe );};}else {_aaga ,_ggb :=_eaba ._cagb .DecodeInt (_eaba ._fafa );if _ggb !=nil {return 0,_ggb ;};return int64 (_aaga ),nil ;
};return 0,nil ;};func (_db *EndOfStripe )Init (h *Header ,r *_ce .Reader )error {_db ._cf =r ;return _db .parseHeader ()};func (_fe *GenericRefinementRegion )GetRegionBitmap ()(*_fc .Bitmap ,error ){var _eb error ;_eec .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _eb !=nil {_eec .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0047\u0065\u0074R\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006dap\u0020\u0066a\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_eb );
}else {_eec .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _fe .RegionBitmap !=nil {return _fe .RegionBitmap ,nil ;};_ebe :=0;if _fe .ReferenceBitmap ==nil {_fe .ReferenceBitmap ,_eb =_fe .getGrReference ();if _eb !=nil {return nil ,_eb ;};};if _fe ._eg ==nil {_fe ._eg ,_eb =_ab .New (_fe ._af );if _eb !=nil {return nil ,_eb ;
};};if _fe ._fb ==nil {_fe ._fb =_ab .NewStats (8192,1);};_fe .RegionBitmap =_fc .New (int (_fe .RegionInfo .BitmapWidth ),int (_fe .RegionInfo .BitmapHeight ));if _fe .TemplateID ==0{if _eb =_fe .updateOverride ();_eb !=nil {return nil ,_eb ;};};_ca :=(_fe .RegionBitmap .Width +7)&-8;
var _cd int ;if _fe .IsTPGROn {_cd =int (-_fe .ReferenceDY )*_fe .ReferenceBitmap .RowStride ;};_ge :=_cd +1;for _abg :=0;_abg < _fe .RegionBitmap .Height ;_abg ++{if _fe .IsTPGROn {_gd ,_fec :=_fe .decodeSLTP ();if _fec !=nil {return nil ,_fec ;};_ebe ^=_gd ;
};if _ebe ==0{_eb =_fe .decodeOptimized (_abg ,_fe .RegionBitmap .Width ,_fe .RegionBitmap .RowStride ,_fe .ReferenceBitmap .RowStride ,_ca ,_cd ,_ge );if _eb !=nil {return nil ,_eb ;};}else {_eb =_fe .decodeTypicalPredictedLine (_abg ,_fe .RegionBitmap .Width ,_fe .RegionBitmap .RowStride ,_fe .ReferenceBitmap .RowStride ,_ca ,_cd );
if _eb !=nil {return nil ,_eb ;};};};return _fe .RegionBitmap ,nil ;};func (_aebegc *TextRegion )blit (_bbggg *_fc .Bitmap ,_bgfe int64 )error {if _aebegc .IsTransposed ==0&&(_aebegc .ReferenceCorner ==2||_aebegc .ReferenceCorner ==3){_aebegc ._facg +=int64 (_bbggg .Width -1);
}else if _aebegc .IsTransposed ==1&&(_aebegc .ReferenceCorner ==0||_aebegc .ReferenceCorner ==2){_aebegc ._facg +=int64 (_bbggg .Height -1);};_fdbg :=_aebegc ._facg ;if _aebegc .IsTransposed ==1{_fdbg ,_bgfe =_bgfe ,_fdbg ;};switch _aebegc .ReferenceCorner {case 0:_bgfe -=int64 (_bbggg .Height -1);
case 2:_bgfe -=int64 (_bbggg .Height -1);_fdbg -=int64 (_bbggg .Width -1);case 3:_fdbg -=int64 (_bbggg .Width -1);};_agcd :=_fc .Blit (_bbggg ,_aebegc .RegionBitmap ,int (_fdbg ),int (_bgfe ),_aebegc .CombinationOperator );if _agcd !=nil {return _agcd ;
};if _aebegc .IsTransposed ==0&&(_aebegc .ReferenceCorner ==0||_aebegc .ReferenceCorner ==1){_aebegc ._facg +=int64 (_bbggg .Width -1);};if _aebegc .IsTransposed ==1&&(_aebegc .ReferenceCorner ==1||_aebegc .ReferenceCorner ==3){_aebegc ._facg +=int64 (_bbggg .Height -1);
};return nil ;};func (_bgbf *TextRegion )initSymbols ()error {const _ccad ="i\u006e\u0069\u0074\u0053\u0079\u006d\u0062\u006f\u006c\u0073";for _ ,_fage :=range _bgbf .Header .RTSegments {if _fage ==nil {return _ea .Error (_ccad ,"\u006e\u0069\u006c\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020pr\u006f\u0076\u0069\u0064\u0065\u0064 \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0074\u0065\u0078\u0074\u0020\u0072\u0065g\u0069\u006f\u006e\u0020\u0053\u0079\u006d\u0062o\u006c\u0073");
};if _fage .Type ==0{_dee ,_aegf :=_fage .GetSegmentData ();if _aegf !=nil {return _ea .Wrap (_aegf ,_ccad ,"");};_bgdfe ,_cbd :=_dee .(*SymbolDictionary );if !_cbd {return _ea .Error (_ccad ,"\u0072e\u0066\u0065r\u0072\u0065\u0064 \u0054\u006f\u0020\u0053\u0065\u0067\u006de\u006e\u0074\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_bgdfe ._gfebd =_bgbf ._fdaa ;_gfga ,_aegf :=_bgdfe .GetDictionary ();if _aegf !=nil {return _ea .Wrap (_aegf ,_ccad ,"");};_bgbf .Symbols =append (_bgbf .Symbols ,_gfga ...);};};_bgbf .NumberOfSymbols =uint32 (len (_bgbf .Symbols ));return nil ;};func (_fggg *TableSegment )HtHigh ()int32 {return _fggg ._adc };
func (_dabg *TextRegion )createRegionBitmap ()error {_dabg .RegionBitmap =_fc .New (int (_dabg .RegionInfo .BitmapWidth ),int (_dabg .RegionInfo .BitmapHeight ));if _dabg .DefaultPixel !=0{_dabg .RegionBitmap .SetDefaultPixel ();};return nil ;};type Header struct{SegmentNumber uint32 ;
Type Type ;RetainFlag bool ;PageAssociation int ;PageAssociationFieldSize bool ;RTSegments []*Header ;HeaderLength int64 ;SegmentDataLength uint64 ;SegmentDataStartOffset uint64 ;Reader *_ce .Reader ;SegmentData Segmenter ;RTSNumbers []int ;RetainBits []uint8 ;
};func (_fecg *GenericRegion )setOverrideFlag (_dfef int ){_fecg .GBAtOverride [_dfef ]=true ;_fecg ._ceb =true ;};func (_aabfg *TextRegion )GetRegionInfo ()*RegionSegment {return _aabfg .RegionInfo };type PageInformationSegment struct{_bfc *_ce .Reader ;
PageBMHeight int ;PageBMWidth int ;ResolutionX int ;ResolutionY int ;_bbae bool ;_faf _fc .CombinationOperator ;_gffc bool ;DefaultPixelValue uint8 ;_abacd bool ;IsLossless bool ;IsStripe bool ;MaxStripeSize uint16 ;};func (_abfd *SymbolDictionary )decodeRefinedSymbol (_bcbf ,_gbag uint32 )error {var (_ebbg int ;
_cfcd ,_fefgf int32 ;);if _abfd .IsHuffmanEncoded {_bcgcf ,_ebbe :=_abfd ._aafe .ReadBits (byte (_abfd ._dcba ));if _ebbe !=nil {return _ebbe ;};_ebbg =int (_bcgcf );_abgf ,_ebbe :=_aa .GetStandardTable (15);if _ebbe !=nil {return _ebbe ;};_gcaa ,_ebbe :=_abgf .Decode (_abfd ._aafe );
if _ebbe !=nil {return _ebbe ;};_cfcd =int32 (_gcaa );_gcaa ,_ebbe =_abgf .Decode (_abfd ._aafe );if _ebbe !=nil {return _ebbe ;};_fefgf =int32 (_gcaa );_abgf ,_ebbe =_aa .GetStandardTable (1);if _ebbe !=nil {return _ebbe ;};if _ ,_ebbe =_abgf .Decode (_abfd ._aafe );
_ebbe !=nil {return _ebbe ;};_abfd ._aafe .Align ();}else {_dag ,_ggda :=_abfd ._cagb .DecodeIAID (uint64 (_abfd ._dcba ),_abfd ._gfebd );if _ggda !=nil {return _ggda ;};_ebbg =int (_dag );_cfcd ,_ggda =_abfd ._cagb .DecodeInt (_abfd ._cccd );if _ggda !=nil {return _ggda ;
};_fefgf ,_ggda =_abfd ._cagb .DecodeInt (_abfd ._cfab );if _ggda !=nil {return _ggda ;};};if _bbbb :=_abfd .setSymbolsArray ();_bbbb !=nil {return _bbbb ;};_egga :=_abfd ._gdgf [_ebbg ];if _caag :=_abfd .decodeNewSymbols (_bcbf ,_gbag ,_egga ,_cfcd ,_fefgf );
_caag !=nil {return _caag ;};if _abfd .IsHuffmanEncoded {_abfd ._aafe .Align ();};return nil ;};func (_ddd *template0 )setIndex (_egg *_ab .DecoderStats ){_egg .SetIndex (0x100)};func (_ededb *PageInformationSegment )encodeStripingInformation (_ccecf _ce .BinaryWriter )(_agdbb int ,_bcga error ){const _fgge ="\u0065n\u0063\u006f\u0064\u0065S\u0074\u0072\u0069\u0070\u0069n\u0067I\u006ef\u006f\u0072\u006d\u0061\u0074\u0069\u006fn";
if !_ededb .IsStripe {if _agdbb ,_bcga =_ccecf .Write ([]byte {0x00,0x00});_bcga !=nil {return 0,_ea .Wrap (_bcga ,_fgge ,"n\u006f\u0020\u0073\u0074\u0072\u0069\u0070\u0069\u006e\u0067");};return _agdbb ,nil ;};_gebd :=make ([]byte ,2);_d .BigEndian .PutUint16 (_gebd ,_ededb .MaxStripeSize |1<<15);
if _agdbb ,_bcga =_ccecf .Write (_gebd );_bcga !=nil {return 0,_ea .Wrapf (_bcga ,_fgge ,"\u0073\u0074\u0072i\u0070\u0069\u006e\u0067\u003a\u0020\u0025\u0064",_ededb .MaxStripeSize );};return _agdbb ,nil ;};func (_cae *GenericRegion )decodeTemplate3 (_afe ,_dbb ,_gbb int ,_ggeg ,_gccf int )(_fgc error ){const _eff ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0033";
var (_cac ,_ffde int ;_cacb int ;_add byte ;_bffg ,_dbbf int ;);if _afe >=1{_add ,_fgc =_cae .Bitmap .GetByte (_gccf );if _fgc !=nil {return _ea .Wrap (_fgc ,_eff ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_cacb =int (_add );};_cac =(_cacb >>1)&0x70;
for _ecb :=0;_ecb < _gbb ;_ecb =_bffg {var (_fdgd byte ;_eagb int ;);_bffg =_ecb +8;if _ccef :=_dbb -_ecb ;_ccef > 8{_eagb =8;}else {_eagb =_ccef ;};if _afe >=1{_cacb <<=8;if _bffg < _dbb {_add ,_fgc =_cae .Bitmap .GetByte (_gccf +1);if _fgc !=nil {return _ea .Wrap (_fgc ,_eff ,"\u0069\u006e\u006e\u0065\u0072\u0020\u002d\u0020\u006c\u0069\u006e\u0065 \u003e\u003d\u0020\u0031");
};_cacb |=int (_add );};};for _bae :=0;_bae < _eagb ;_bae ++{if _cae ._ceb {_ffde =_cae .overrideAtTemplate3 (_cac ,_ecb +_bae ,_afe ,int (_fdgd ),_bae );_cae ._badg .SetIndex (int32 (_ffde ));}else {_cae ._badg .SetIndex (int32 (_cac ));};_dbbf ,_fgc =_cae ._dff .DecodeBit (_cae ._badg );
if _fgc !=nil {return _ea .Wrap (_fgc ,_eff ,"");};_fdgd |=byte (_dbbf )<<byte (7-_bae );_cac =((_cac &0x1f7)<<1)|_dbbf |((_cacb >>uint (8-_bae ))&0x010);};if _ffgg :=_cae .Bitmap .SetByte (_ggeg ,_fdgd );_ffgg !=nil {return _ea .Wrap (_ffgg ,_eff ,"");
};_ggeg ++;_gccf ++;};return nil ;};func (_gggf *TableSegment )HtLow ()int32 {return _gggf ._fgagb };func (_dcc *HalftoneRegion )shiftAndFill (_afff int )int {_afff >>=8;if _afff < 0{_aebeg :=int (_e .Log (float64 (_fae (_afff )))/_e .Log (2));_fgca :=31-_aebeg ;
for _adba :=1;_adba < _fgca ;_adba ++{_afff |=1<<uint (31-_adba );};};return _afff ;};func (_agfe *SymbolDictionary )setRefinementAtPixels ()error {if !_agfe .UseRefinementAggregation ||_agfe .SdrTemplate !=0{return nil ;};if _agdad :=_agfe .readRefinementAtPixels (2);
_agdad !=nil {return _agdad ;};return nil ;};func (_ggcb *PageInformationSegment )readIsStriped ()error {_ecdb ,_feef :=_ggcb ._bfc .ReadBit ();if _feef !=nil {return _feef ;};if _ecdb ==1{_ggcb .IsStripe =true ;};return nil ;};func (_faee *PatternDictionary )parseHeader ()error {_eec .Log .Trace ("\u005b\u0050\u0041\u0054\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054I\u004f\u004e\u0041\u0052\u0059\u005d[\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d\u0020b\u0065\u0067\u0069\u006e");
defer func (){_eec .Log .Trace ("\u005b\u0050\u0041T\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u005b\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
}();_ ,_bebf :=_faee ._ffef .ReadBits (5);if _bebf !=nil {return _bebf ;};if _bebf =_faee .readTemplate ();_bebf !=nil {return _bebf ;};if _bebf =_faee .readIsMMREncoded ();_bebf !=nil {return _bebf ;};if _bebf =_faee .readPatternWidthAndHeight ();_bebf !=nil {return _bebf ;
};if _bebf =_faee .readGrayMax ();_bebf !=nil {return _bebf ;};if _bebf =_faee .computeSegmentDataStructure ();_bebf !=nil {return _bebf ;};return _faee .checkInput ();};func (_aaaf *GenericRegion )readGBAtPixels (_agag int )error {const _cecg ="\u0072\u0065\u0061\u0064\u0047\u0042\u0041\u0074\u0050i\u0078\u0065\u006c\u0073";
_aaaf .GBAtX =make ([]int8 ,_agag );_aaaf .GBAtY =make ([]int8 ,_agag );for _dbg :=0;_dbg < _agag ;_dbg ++{_fgfa ,_cdd :=_aaaf ._fgaf .ReadByte ();if _cdd !=nil {return _ea .Wrapf (_cdd ,_cecg ,"\u0058\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_dbg );
};_aaaf .GBAtX [_dbg ]=int8 (_fgfa );_fgfa ,_cdd =_aaaf ._fgaf .ReadByte ();if _cdd !=nil {return _ea .Wrapf (_cdd ,_cecg ,"\u0059\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_dbg );};_aaaf .GBAtY [_dbg ]=int8 (_fgfa );};return nil ;};
type Documenter interface{GetPage (int )(Pager ,error );GetGlobalSegment (int )(*Header ,error );};func (_ceaa *TextRegion )decodeSymInRefSize ()(int64 ,error ){const _bfbag ="\u0064e\u0063o\u0064\u0065\u0053\u0079\u006dI\u006e\u0052e\u0066\u0053\u0069\u007a\u0065";
if _ceaa .SbHuffRSize ==0{_fgfd ,_fegg :=_aa .GetStandardTable (1);if _fegg !=nil {return 0,_ea .Wrap (_fegg ,_bfbag ,"");};return _fgfd .Decode (_ceaa ._gcccf );};if _ceaa ._fgafc ==nil {var (_gfae int ;_ebgf error ;);if _ceaa .SbHuffFS ==3{_gfae ++;};
if _ceaa .SbHuffDS ==3{_gfae ++;};if _ceaa .SbHuffDT ==3{_gfae ++;};if _ceaa .SbHuffRDWidth ==3{_gfae ++;};if _ceaa .SbHuffRDHeight ==3{_gfae ++;};if _ceaa .SbHuffRDX ==3{_gfae ++;};if _ceaa .SbHuffRDY ==3{_gfae ++;};_ceaa ._fgafc ,_ebgf =_ceaa .getUserTable (_gfae );
if _ebgf !=nil {return 0,_ea .Wrap (_ebgf ,_bfbag ,"");};};_egde ,_ggbc :=_ceaa ._fgafc .Decode (_ceaa ._gcccf );if _ggbc !=nil {return 0,_ea .Wrap (_ggbc ,_bfbag ,"");};return _egde ,nil ;};func (_eeffb *Header )writeReferredToSegments (_bbef _ce .BinaryWriter )(_daf int ,_cfa error ){const _cfdb ="\u0077\u0072\u0069te\u0052\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
var (_bdec uint16 ;_bgda uint32 ;);_cdag :=_eeffb .referenceSize ();_gcg :=1;_eac :=make ([]byte ,_cdag );for _ ,_bebbb :=range _eeffb .RTSNumbers {switch _cdag {case 4:_bgda =uint32 (_bebbb );_d .BigEndian .PutUint32 (_eac ,_bgda );_gcg ,_cfa =_bbef .Write (_eac );
if _cfa !=nil {return 0,_ea .Wrap (_cfa ,_cfdb ,"u\u0069\u006e\u0074\u0033\u0032\u0020\u0073\u0069\u007a\u0065");};case 2:_bdec =uint16 (_bebbb );_d .BigEndian .PutUint16 (_eac ,_bdec );_gcg ,_cfa =_bbef .Write (_eac );if _cfa !=nil {return 0,_ea .Wrap (_cfa ,_cfdb ,"\u0075\u0069\u006e\u0074\u0031\u0036");
};default:if _cfa =_bbef .WriteByte (byte (_bebbb ));_cfa !=nil {return 0,_ea .Wrap (_cfa ,_cfdb ,"\u0075\u0069\u006et\u0038");};};_daf +=_gcg ;};return _daf ,nil ;};func (_eefaa *SymbolDictionary )decodeHeightClassBitmap (_gcda *_fc .Bitmap ,_eggf int64 ,_dfeaf int ,_bdd []int )error {for _cfdf :=_eggf ;
_cfdf < int64 (_eefaa ._aacd );_cfdf ++{var _ccag int ;for _aggd :=_eggf ;_aggd <=_cfdf -1;_aggd ++{_ccag +=_bdd [_aggd ];};_ebbd :=_c .Rect (_ccag ,0,_ccag +_bdd [_cfdf ],_dfeaf );_fdcb ,_bdea :=_fc .Extract (_ebbd ,_gcda );if _bdea !=nil {return _bdea ;
};_eefaa ._ebba [_cfdf ]=_fdcb ;_eefaa ._gdgf =append (_eefaa ._gdgf ,_fdcb );};return nil ;};func (_bccb *TextRegion )getSymbols ()error {if _bccb .Header .RTSegments !=nil {return _bccb .initSymbols ();};return nil ;};func (_aead *SymbolDictionary )GetDictionary ()([]*_fc .Bitmap ,error ){_eec .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c-\u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){_eec .Log .Trace ("\u005b\u0053\u0059M\u0042\u004f\u004c\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
_eec .Log .Trace ("\u005b\u0053Y\u004d\u0042\u004f\u004c\u002dD\u0049\u0043\u0054\u0049\u004fN\u0041\u0052\u0059\u005d\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020\u000a\u0045\u0078\u003a\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u000a\u006e\u0065\u0077\u003a\u0027\u0025\u0073\u0027",_aead ._dffgf ,_aead ._ebba );
}();if _aead ._dffgf ==nil {var _gead error ;if _aead .UseRefinementAggregation {_aead ._dcba =_aead .getSbSymCodeLen ();};if !_aead .IsHuffmanEncoded {if _gead =_aead .setCodingStatistics ();_gead !=nil {return nil ,_gead ;};};_aead ._ebba =make ([]*_fc .Bitmap ,_aead .NumberOfNewSymbols );
var _feed []int ;if _aead .IsHuffmanEncoded &&!_aead .UseRefinementAggregation {_feed =make ([]int ,_aead .NumberOfNewSymbols );};if _gead =_aead .setSymbolsArray ();_gead !=nil {return nil ,_gead ;};var _aeac ,_cgbgf int64 ;_aead ._aacd =0;for _aead ._aacd < _aead .NumberOfNewSymbols {_cgbgf ,_gead =_aead .decodeHeightClassDeltaHeight ();
if _gead !=nil {return nil ,_gead ;};_aeac +=_cgbgf ;var _dgfe ,_caac uint32 ;_fdba :=int64 (_aead ._aacd );for {var _eaab int64 ;_eaab ,_gead =_aead .decodeDifferenceWidth ();if _g .Is (_gead ,_ec .ErrOOB ){break ;};if _gead !=nil {return nil ,_gead ;
};if _aead ._aacd >=_aead .NumberOfNewSymbols {break ;};_dgfe +=uint32 (_eaab );_caac +=_dgfe ;if !_aead .IsHuffmanEncoded ||_aead .UseRefinementAggregation {if !_aead .UseRefinementAggregation {_gead =_aead .decodeDirectlyThroughGenericRegion (_dgfe ,uint32 (_aeac ));
if _gead !=nil {return nil ,_gead ;};}else {_gead =_aead .decodeAggregate (_dgfe ,uint32 (_aeac ));if _gead !=nil {return nil ,_gead ;};};}else if _aead .IsHuffmanEncoded &&!_aead .UseRefinementAggregation {_feed [_aead ._aacd ]=int (_dgfe );};_aead ._aacd ++;
};if _aead .IsHuffmanEncoded &&!_aead .UseRefinementAggregation {var _abdg int64 ;if _aead .SdHuffBMSizeSelection ==0{var _bfcc _aa .Tabler ;_bfcc ,_gead =_aa .GetStandardTable (1);if _gead !=nil {return nil ,_gead ;};_abdg ,_gead =_bfcc .Decode (_aead ._aafe );
if _gead !=nil {return nil ,_gead ;};}else {_abdg ,_gead =_aead .huffDecodeBmSize ();if _gead !=nil {return nil ,_gead ;};};_aead ._aafe .Align ();var _gdd *_fc .Bitmap ;_gdd ,_gead =_aead .decodeHeightClassCollectiveBitmap (_abdg ,uint32 (_aeac ),_caac );
if _gead !=nil {return nil ,_gead ;};_gead =_aead .decodeHeightClassBitmap (_gdd ,_fdba ,int (_aeac ),_feed );if _gead !=nil {return nil ,_gead ;};};};_gfcg ,_gead :=_aead .getToExportFlags ();if _gead !=nil {return nil ,_gead ;};_aead .setExportedSymbols (_gfcg );
};return _aead ._dffgf ,nil ;};func (_fgac *SymbolDictionary )encodeSymbols (_dddd _ce .BinaryWriter )(_aagc int ,_feecf error ){const _bebef ="\u0065\u006e\u0063o\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c";_afgb :=_eef .New ();_afgb .Init ();_dcedg ,_feecf :=_fgac ._bbabf .SelectByIndexes (_fgac ._dbbb );
if _feecf !=nil {return 0,_ea .Wrap (_feecf ,_bebef ,"\u0069n\u0069\u0074\u0069\u0061\u006c");};_ggdc :=map[*_fc .Bitmap ]int {};for _ega ,_cfdcg :=range _dcedg .Values {_ggdc [_cfdcg ]=_ega ;};_dcedg .SortByHeight ();var _dacc ,_gcgb int ;_ggafb ,_feecf :=_dcedg .GroupByHeight ();
if _feecf !=nil {return 0,_ea .Wrap (_feecf ,_bebef ,"");};for _ ,_dabfcd :=range _ggafb .Values {_bebfg :=_dabfcd .Values [0].Height ;_abc :=_bebfg -_dacc ;if _feecf =_afgb .EncodeInteger (_eef .IADH ,_abc );_feecf !=nil {return 0,_ea .Wrapf (_feecf ,_bebef ,"\u0049\u0041\u0044\u0048\u0020\u0066\u006f\u0072\u0020\u0064\u0068\u003a \u0027\u0025\u0064\u0027",_abc );
};_dacc =_bebfg ;_ecbed ,_cbcg :=_dabfcd .GroupByWidth ();if _cbcg !=nil {return 0,_ea .Wrapf (_cbcg ,_bebef ,"\u0068\u0065\u0069g\u0068\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_bebfg );};var _ecdd int ;for _ ,_cdcg :=range _ecbed .Values {for _ ,_fdeb :=range _cdcg .Values {_cebb :=_fdeb .Width ;
_efbe :=_cebb -_ecdd ;if _cbcg =_afgb .EncodeInteger (_eef .IADW ,_efbe );_cbcg !=nil {return 0,_ea .Wrapf (_cbcg ,_bebef ,"\u0049\u0041\u0044\u0057\u0020\u0066\u006f\u0072\u0020\u0064\u0077\u003a \u0027\u0025\u0064\u0027",_efbe );};_ecdd +=_efbe ;if _cbcg =_afgb .EncodeBitmap (_fdeb ,false );
_cbcg !=nil {return 0,_ea .Wrapf (_cbcg ,_bebef ,"H\u0065i\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u0020W\u0069\u0064\u0074\u0068: \u0025\u0064",_bebfg ,_cebb );};_aefa :=_ggdc [_fdeb ];_fgac ._cfgc [_aefa ]=_gcgb ;_gcgb ++;};};if _cbcg =_afgb .EncodeOOB (_eef .IADW );
_cbcg !=nil {return 0,_ea .Wrap (_cbcg ,_bebef ,"\u0049\u0041\u0044\u0057");};};if _feecf =_afgb .EncodeInteger (_eef .IAEX ,0);_feecf !=nil {return 0,_ea .Wrap (_feecf ,_bebef ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};if _feecf =_afgb .EncodeInteger (_eef .IAEX ,len (_fgac ._dbbb ));_feecf !=nil {return 0,_ea .Wrap (_feecf ,_bebef ,"\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0073\u0079m\u0062\u006f\u006c\u0073");};_afgb .Final ();_dcbf ,_feecf :=_afgb .WriteTo (_dddd );
if _feecf !=nil {return 0,_ea .Wrap (_feecf ,_bebef ,"\u0077\u0072i\u0074\u0069\u006e\u0067 \u0065\u006ec\u006f\u0064\u0065\u0072\u0020\u0063\u006f\u006et\u0065\u0078\u0074\u0020\u0074\u006f\u0020\u0027\u0077\u0027\u0020\u0077r\u0069\u0074\u0065\u0072");
};return int (_dcbf ),nil ;};func (_gbgb *PatternDictionary )setGbAtPixels (){if _gbgb .HDTemplate ==0{_gbgb .GBAtX =make ([]int8 ,4);_gbgb .GBAtY =make ([]int8 ,4);_gbgb .GBAtX [0]=-int8 (_gbgb .HdpWidth );_gbgb .GBAtY [0]=0;_gbgb .GBAtX [1]=-3;_gbgb .GBAtY [1]=-1;
_gbgb .GBAtX [2]=2;_gbgb .GBAtY [2]=-2;_gbgb .GBAtX [3]=-2;_gbgb .GBAtY [3]=-2;}else {_gbgb .GBAtX =[]int8 {-int8 (_gbgb .HdpWidth )};_gbgb .GBAtY =[]int8 {0};};};func (_dbe *SymbolDictionary )decodeThroughTextRegion (_adfg ,_egfa ,_ebbc uint32 )error {if _dbe ._bfaf ==nil {_dbe ._bfaf =_dfeb (_dbe ._aafe ,nil );
_dbe ._bfaf .setContexts (_dbe ._adbg ,_ab .NewStats (512,1),_ab .NewStats (512,1),_ab .NewStats (512,1),_ab .NewStats (512,1),_dbe ._gfebd ,_ab .NewStats (512,1),_ab .NewStats (512,1),_ab .NewStats (512,1),_ab .NewStats (512,1));};if _dbgg :=_dbe .setSymbolsArray ();
_dbgg !=nil {return _dbgg ;};_dbe ._bfaf .setParameters (_dbe ._cagb ,_dbe .IsHuffmanEncoded ,true ,_adfg ,_egfa ,_ebbc ,1,_dbe ._gca +_dbe ._aacd ,0,0,0,1,0,0,0,0,0,0,0,0,0,_dbe .SdrTemplate ,_dbe .SdrATX ,_dbe .SdrATY ,_dbe ._gdgf ,_dbe ._dcba );return _dbe .addSymbol (_dbe ._bfaf );
};func (_geeeg *RegionSegment )readCombinationOperator ()error {_ccdc ,_bcee :=_geeeg ._gcgg .ReadBits (3);if _bcee !=nil {return _bcee ;};_geeeg .CombinaionOperator =_fc .CombinationOperator (_ccdc &0xF);return nil ;};type GenericRegion struct{_fgaf *_ce .Reader ;
DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;UseExtTemplates bool ;IsTPGDon bool ;GBTemplate byte ;IsMMREncoded bool ;UseMMR bool ;GBAtX []int8 ;GBAtY []int8 ;GBAtOverride []bool ;_ceb bool ;
Bitmap *_fc .Bitmap ;_dff *_ab .Decoder ;_badg *_ab .DecoderStats ;_cad *_abe .Decoder ;};func (_bcdc *PageInformationSegment )readMaxStripeSize ()error {_ebfe ,_cfaa :=_bcdc ._bfc .ReadBits (15);if _cfaa !=nil {return _cfaa ;};_bcdc .MaxStripeSize =uint16 (_ebfe &_e .MaxUint16 );
return nil ;};func (_gece *PageInformationSegment )Init (h *Header ,r *_ce .Reader )(_fcbb error ){_gece ._bfc =r ;if _fcbb =_gece .parseHeader ();_fcbb !=nil {return _ea .Wrap (_fcbb ,"P\u0061\u0067\u0065\u0049\u006e\u0066o\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065g\u006d\u0065\u006et\u002eI\u006e\u0069\u0074","");
};return nil ;};func (_bcc *GenericRegion )Init (h *Header ,r *_ce .Reader )error {_bcc .RegionSegment =NewRegionSegment (r );_bcc ._fgaf =r ;return _bcc .parseHeader ();};func (_gccc *GenericRefinementRegion )decodeTemplate (_agd ,_gaa ,_ade ,_fba ,_acd ,_bba ,_abd ,_ffb ,_cgb ,_cec int ,_ecce templater )(_dfb error ){var (_ffa ,_aad ,_ffd ,_bef ,_gga int16 ;
_aeb ,_bbcc ,_def ,_ebd int ;_aea byte ;);if _cgb >=1&&(_cgb -1)< _gccc .ReferenceBitmap .Height {_aea ,_dfb =_gccc .ReferenceBitmap .GetByte (_cec -_fba );if _dfb !=nil {return ;};_aeb =int (_aea );};if _cgb >=0&&(_cgb )< _gccc .ReferenceBitmap .Height {_aea ,_dfb =_gccc .ReferenceBitmap .GetByte (_cec );
if _dfb !=nil {return ;};_bbcc =int (_aea );};if _cgb >=-1&&(_cgb +1)< _gccc .ReferenceBitmap .Height {_aea ,_dfb =_gccc .ReferenceBitmap .GetByte (_cec +_fba );if _dfb !=nil {return ;};_def =int (_aea );};_cec ++;if _agd >=1{_aea ,_dfb =_gccc .RegionBitmap .GetByte (_ffb -_ade );
if _dfb !=nil {return ;};_ebd =int (_aea );};_ffb ++;_afc :=_gccc .ReferenceDX %8;_fd :=6+_afc ;_gdf :=_cec %_fba ;if _fd >=0{if _fd < 8{_ffa =int16 (_aeb >>uint (_fd ))&0x07;};if _fd < 8{_aad =int16 (_bbcc >>uint (_fd ))&0x07;};if _fd < 8{_ffd =int16 (_def >>uint (_fd ))&0x07;
};if _fd ==6&&_gdf > 1{if _cgb >=1&&(_cgb -1)< _gccc .ReferenceBitmap .Height {_aea ,_dfb =_gccc .ReferenceBitmap .GetByte (_cec -_fba -2);if _dfb !=nil {return _dfb ;};_ffa |=int16 (_aea <<2)&0x04;};if _cgb >=0&&_cgb < _gccc .ReferenceBitmap .Height {_aea ,_dfb =_gccc .ReferenceBitmap .GetByte (_cec -2);
if _dfb !=nil {return _dfb ;};_aad |=int16 (_aea <<2)&0x04;};if _cgb >=-1&&_cgb +1< _gccc .ReferenceBitmap .Height {_aea ,_dfb =_gccc .ReferenceBitmap .GetByte (_cec +_fba -2);if _dfb !=nil {return _dfb ;};_ffd |=int16 (_aea <<2)&0x04;};};if _fd ==0{_aeb =0;
_bbcc =0;_def =0;if _gdf < _fba -1{if _cgb >=1&&_cgb -1< _gccc .ReferenceBitmap .Height {_aea ,_dfb =_gccc .ReferenceBitmap .GetByte (_cec -_fba );if _dfb !=nil {return _dfb ;};_aeb =int (_aea );};if _cgb >=0&&_cgb < _gccc .ReferenceBitmap .Height {_aea ,_dfb =_gccc .ReferenceBitmap .GetByte (_cec );
if _dfb !=nil {return _dfb ;};_bbcc =int (_aea );};if _cgb >=-1&&_cgb +1< _gccc .ReferenceBitmap .Height {_aea ,_dfb =_gccc .ReferenceBitmap .GetByte (_cec +_fba );if _dfb !=nil {return _dfb ;};_def =int (_aea );};};_cec ++;};}else {_ffa =int16 (_aeb <<1)&0x07;
_aad =int16 (_bbcc <<1)&0x07;_ffd =int16 (_def <<1)&0x07;_aeb =0;_bbcc =0;_def =0;if _gdf < _fba -1{if _cgb >=1&&_cgb -1< _gccc .ReferenceBitmap .Height {_aea ,_dfb =_gccc .ReferenceBitmap .GetByte (_cec -_fba );if _dfb !=nil {return _dfb ;};_aeb =int (_aea );
};if _cgb >=0&&_cgb < _gccc .ReferenceBitmap .Height {_aea ,_dfb =_gccc .ReferenceBitmap .GetByte (_cec );if _dfb !=nil {return _dfb ;};_bbcc =int (_aea );};if _cgb >=-1&&_cgb +1< _gccc .ReferenceBitmap .Height {_aea ,_dfb =_gccc .ReferenceBitmap .GetByte (_cec +_fba );
if _dfb !=nil {return _dfb ;};_def =int (_aea );};_cec ++;};_ffa |=int16 ((_aeb >>7)&0x07);_aad |=int16 ((_bbcc >>7)&0x07);_ffd |=int16 ((_def >>7)&0x07);};_bef =int16 (_ebd >>6);_gga =0;_abdf :=(2-_afc )%8;_aeb <<=uint (_abdf );_bbcc <<=uint (_abdf );
_def <<=uint (_abdf );_ebd <<=2;var _aec int ;for _fdd :=0;_fdd < _gaa ;_fdd ++{_dcg :=_fdd &0x07;_agf :=_ecce .form (_ffa ,_aad ,_ffd ,_bef ,_gga );if _gccc ._eaac {_aea ,_dfb =_gccc .RegionBitmap .GetByte (_gccc .RegionBitmap .GetByteIndex (_fdd ,_agd ));
if _dfb !=nil {return _dfb ;};_gccc ._fb .SetIndex (int32 (_gccc .overrideAtTemplate0 (int (_agf ),_fdd ,_agd ,int (_aea ),_dcg )));}else {_gccc ._fb .SetIndex (int32 (_agf ));};_aec ,_dfb =_gccc ._eg .DecodeBit (_gccc ._fb );if _dfb !=nil {return _dfb ;
};if _dfb =_gccc .RegionBitmap .SetPixel (_fdd ,_agd ,byte (_aec ));_dfb !=nil {return _dfb ;};_ffa =((_ffa <<1)|0x01&int16 (_aeb >>7))&0x07;_aad =((_aad <<1)|0x01&int16 (_bbcc >>7))&0x07;_ffd =((_ffd <<1)|0x01&int16 (_def >>7))&0x07;_bef =((_bef <<1)|0x01&int16 (_ebd >>7))&0x07;
_gga =int16 (_aec );if (_fdd -int (_gccc .ReferenceDX ))%8==5{_aeb =0;_bbcc =0;_def =0;if ((_fdd -int (_gccc .ReferenceDX ))/8)+1< _gccc .ReferenceBitmap .RowStride {if _cgb >=1&&(_cgb -1)< _gccc .ReferenceBitmap .Height {_aea ,_dfb =_gccc .ReferenceBitmap .GetByte (_cec -_fba );
if _dfb !=nil {return _dfb ;};_aeb =int (_aea );};if _cgb >=0&&_cgb < _gccc .ReferenceBitmap .Height {_aea ,_dfb =_gccc .ReferenceBitmap .GetByte (_cec );if _dfb !=nil {return _dfb ;};_bbcc =int (_aea );};if _cgb >=-1&&(_cgb +1)< _gccc .ReferenceBitmap .Height {_aea ,_dfb =_gccc .ReferenceBitmap .GetByte (_cec +_fba );
if _dfb !=nil {return _dfb ;};_def =int (_aea );};};_cec ++;}else {_aeb <<=1;_bbcc <<=1;_def <<=1;};if _dcg ==5&&_agd >=1{if ((_fdd >>3)+1)>=_gccc .RegionBitmap .RowStride {_ebd =0;}else {_aea ,_dfb =_gccc .RegionBitmap .GetByte (_ffb -_ade );if _dfb !=nil {return _dfb ;
};_ebd =int (_aea );};_ffb ++;}else {_ebd <<=1;};};return nil ;};func (_ddgg *TextRegion )decodeRdw ()(int64 ,error ){const _bbaed ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064w";if _ddgg .IsHuffmanEncoded {if _ddgg .SbHuffRDWidth ==3{if _ddgg ._cggb ==nil {var (_fdea int ;
_aedff error ;);if _ddgg .SbHuffFS ==3{_fdea ++;};if _ddgg .SbHuffDS ==3{_fdea ++;};if _ddgg .SbHuffDT ==3{_fdea ++;};_ddgg ._cggb ,_aedff =_ddgg .getUserTable (_fdea );if _aedff !=nil {return 0,_ea .Wrap (_aedff ,_bbaed ,"");};};return _ddgg ._cggb .Decode (_ddgg ._gcccf );
};_cfeab ,_fcfa :=_aa .GetStandardTable (14+int (_ddgg .SbHuffRDWidth ));if _fcfa !=nil {return 0,_ea .Wrap (_fcfa ,_bbaed ,"");};return _cfeab .Decode (_ddgg ._gcccf );};_agbdf ,_aagd :=_ddgg ._cfabc .DecodeInt (_ddgg ._baeg );if _aagd !=nil {return 0,_ea .Wrap (_aagd ,_bbaed ,"");
};return int64 (_agbdf ),nil ;};func (_fgbf *Header )CleanSegmentData (){if _fgbf .SegmentData !=nil {_fgbf .SegmentData =nil ;};};func (_gebe *SymbolDictionary )readNumberOfExportedSymbols ()error {_baed ,_daff :=_gebe ._aafe .ReadBits (32);if _daff !=nil {return _daff ;
};_gebe .NumberOfExportedSymbols =uint32 (_baed &_e .MaxUint32 );return nil ;};func (_cgec *Header )referenceSize ()uint {switch {case _cgec .SegmentNumber <=255:return 1;case _cgec .SegmentNumber <=65535:return 2;default:return 4;};};type Pager interface{GetSegment (int )(*Header ,error );
GetBitmap ()(*_fc .Bitmap ,error );};func (_dfbga *TextRegion )Init (header *Header ,r *_ce .Reader )error {_dfbga .Header =header ;_dfbga ._gcccf =r ;_dfbga .RegionInfo =NewRegionSegment (_dfbga ._gcccf );return _dfbga .parseHeader ();};func (_fabcg *PatternDictionary )readTemplate ()error {_ccgc ,_gaec :=_fabcg ._ffef .ReadBits (2);
if _gaec !=nil {return _gaec ;};_fabcg .HDTemplate =byte (_ccgc );return nil ;};type template1 struct{};func (_efgfg *PageInformationSegment )readResolution ()error {_agdbd ,_cgbc :=_efgfg ._bfc .ReadBits (32);if _cgbc !=nil {return _cgbc ;};_efgfg .ResolutionX =int (_agdbd &_e .MaxInt32 );
_agdbd ,_cgbc =_efgfg ._bfc .ReadBits (32);if _cgbc !=nil {return _cgbc ;};_efgfg .ResolutionY =int (_agdbd &_e .MaxInt32 );return nil ;};func (_gbgd *SymbolDictionary )Encode (w _ce .BinaryWriter )(_bfafe int ,_dffff error ){const _adaa ="\u0053\u0079\u006dbo\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0045\u006e\u0063\u006f\u0064\u0065";
if _gbgd ==nil {return 0,_ea .Error (_adaa ,"\u0073\u0079m\u0062\u006f\u006c\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066in\u0065\u0064");};if _bfafe ,_dffff =_gbgd .encodeFlags (w );
_dffff !=nil {return _bfafe ,_ea .Wrap (_dffff ,_adaa ,"");};_feec ,_dffff :=_gbgd .encodeATFlags (w );if _dffff !=nil {return _bfafe ,_ea .Wrap (_dffff ,_adaa ,"");};_bfafe +=_feec ;if _feec ,_dffff =_gbgd .encodeRefinementATFlags (w );_dffff !=nil {return _bfafe ,_ea .Wrap (_dffff ,_adaa ,"");
};_bfafe +=_feec ;if _feec ,_dffff =_gbgd .encodeNumSyms (w );_dffff !=nil {return _bfafe ,_ea .Wrap (_dffff ,_adaa ,"");};_bfafe +=_feec ;if _feec ,_dffff =_gbgd .encodeSymbols (w );_dffff !=nil {return _bfafe ,_ea .Wrap (_dffff ,_adaa ,"");};_bfafe +=_feec ;
return _bfafe ,nil ;};func (_deag *Header )Encode (w _ce .BinaryWriter )(_ddbea int ,_abgd error ){const _dbgc ="\u0048\u0065\u0061d\u0065\u0072\u002e\u0057\u0072\u0069\u0074\u0065";var _bgad _ce .BinaryWriter ;_eec .Log .Trace ("\u005b\u0053\u0045G\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045\u0052\u005d[\u0045\u004e\u0043\u004f\u0044\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");
defer func (){if _abgd !=nil {_eec .Log .Trace ("[\u0053\u0045\u0047\u004d\u0045\u004eT\u002d\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0045\u004e\u0043\u004f\u0044E\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020%\u0076",_abgd );}else {_eec .Log .Trace ("\u005b\u0053\u0045\u0047ME\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0025\u0076",_deag );
_eec .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045N\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u005b\u0045\u004e\u0043O\u0044\u0045\u005d\u0020\u0046\u0069\u006ei\u0073\u0068\u0065\u0064");};}();w .FinishByte ();if _deag .SegmentData !=nil {_dfdf ,_febdg :=_deag .SegmentData .(SegmentEncoder );
if !_febdg {return 0,_ea .Errorf (_dbgc ,"\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0064\u006f\u0065s\u006e\u0027\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074 \u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0045\u006e\u0063\u006f\u0064er\u0020\u0069\u006e\u0074\u0065\u0072\u0066\u0061\u0063\u0065",_deag .SegmentData );
};_bgad =_ce .BufferedMSB ();_ddbea ,_abgd =_dfdf .Encode (_bgad );if _abgd !=nil {return 0,_ea .Wrap (_abgd ,_dbgc ,"");};_deag .SegmentDataLength =uint64 (_ddbea );};if _deag .pageSize ()==4{_deag .PageAssociationFieldSize =true ;};var _bcgc int ;_bcgc ,_abgd =_deag .writeSegmentNumber (w );
if _abgd !=nil {return 0,_ea .Wrap (_abgd ,_dbgc ,"");};_ddbea +=_bcgc ;if _abgd =_deag .writeFlags (w );_abgd !=nil {return _ddbea ,_ea .Wrap (_abgd ,_dbgc ,"");};_ddbea ++;_bcgc ,_abgd =_deag .writeReferredToCount (w );if _abgd !=nil {return 0,_ea .Wrap (_abgd ,_dbgc ,"");
};_ddbea +=_bcgc ;_bcgc ,_abgd =_deag .writeReferredToSegments (w );if _abgd !=nil {return 0,_ea .Wrap (_abgd ,_dbgc ,"");};_ddbea +=_bcgc ;_bcgc ,_abgd =_deag .writeSegmentPageAssociation (w );if _abgd !=nil {return 0,_ea .Wrap (_abgd ,_dbgc ,"");};_ddbea +=_bcgc ;
_bcgc ,_abgd =_deag .writeSegmentDataLength (w );if _abgd !=nil {return 0,_ea .Wrap (_abgd ,_dbgc ,"");};_ddbea +=_bcgc ;_deag .HeaderLength =int64 (_ddbea )-int64 (_deag .SegmentDataLength );if _bgad !=nil {if _ ,_abgd =w .Write (_bgad .Data ());_abgd !=nil {return _ddbea ,_ea .Wrap (_abgd ,_dbgc ,"\u0077r\u0069t\u0065\u0020\u0073\u0065\u0067m\u0065\u006et\u0020\u0064\u0061\u0074\u0061");
};};return _ddbea ,nil ;};