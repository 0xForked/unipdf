//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package segments ;import (_dc "encoding/binary";_g "errors";_da "fmt";_gg "github.com/unidoc/unipdf/v3/common";_ga "github.com/unidoc/unipdf/v3/internal/bitwise";_aa "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_fe "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";
_e "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/arithmetic";_fc "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/huffman";_cf "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/mmr";_dg "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/arithmetic";
_fd "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_fb "github.com/unidoc/unipdf/v3/internal/jbig2/internal";_cb "golang.org/x/xerrors";_a "image";_d "io";_c "math";_ac "strings";_b "time";);func (_dacf *RegionSegment )Size ()int {return 17};func (_cgcbd *TextRegion )decodeIb (_dbgd ,_aabg int64 )(*_fe .Bitmap ,error ){const _fadg ="\u0064\u0065\u0063\u006f\u0064\u0065\u0049\u0062";
var (_deccc error ;_bdee *_fe .Bitmap ;);if _dbgd ==0{if int (_aabg )> len (_cgcbd .Symbols )-1{return nil ,_fd .Error (_fadg ,"\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0049\u0042\u0020\u0062\u0069\u0074\u006d\u0061\u0070\u002e\u0020\u0069\u006e\u0064\u0065x\u0020\u006f\u0075\u0074\u0020o\u0066\u0020r\u0061\u006e\u0067\u0065");
};return _cgcbd .Symbols [int (_aabg )],nil ;};var _cgcc ,_caca ,_baefg ,_fbeeg int64 ;_cgcc ,_deccc =_cgcbd .decodeRdw ();if _deccc !=nil {return nil ,_fd .Wrap (_deccc ,_fadg ,"");};_caca ,_deccc =_cgcbd .decodeRdh ();if _deccc !=nil {return nil ,_fd .Wrap (_deccc ,_fadg ,"");
};_baefg ,_deccc =_cgcbd .decodeRdx ();if _deccc !=nil {return nil ,_fd .Wrap (_deccc ,_fadg ,"");};_fbeeg ,_deccc =_cgcbd .decodeRdy ();if _deccc !=nil {return nil ,_fd .Wrap (_deccc ,_fadg ,"");};if _cgcbd .IsHuffmanEncoded {if _ ,_deccc =_cgcbd .decodeSymInRefSize ();
_deccc !=nil {return nil ,_fd .Wrap (_deccc ,_fadg ,"");};_cgcbd ._gedf .Align ();};_fccf :=_cgcbd .Symbols [_aabg ];_fcgf :=uint32 (_fccf .Width );_dbec :=uint32 (_fccf .Height );_ddba :=int32 (uint32 (_cgcc )>>1)+int32 (_baefg );_aaaed :=int32 (uint32 (_caca )>>1)+int32 (_fbeeg );
if _cgcbd ._dfafe ==nil {_cgcbd ._dfafe =_eec (_cgcbd ._gedf ,nil );};_cgcbd ._dfafe .setParameters (_cgcbd ._fefcf ,_cgcbd ._gcaa ,_cgcbd .SbrTemplate ,_fcgf +uint32 (_cgcc ),_dbec +uint32 (_caca ),_fccf ,_ddba ,_aaaed ,false ,_cgcbd .SbrATX ,_cgcbd .SbrATY );
_bdee ,_deccc =_cgcbd ._dfafe .GetRegionBitmap ();if _deccc !=nil {return nil ,_fd .Wrap (_deccc ,_fadg ,"\u0067\u0072\u0066");};if _cgcbd .IsHuffmanEncoded {_cgcbd ._gedf .Align ();};return _bdee ,nil ;};func (_bcgd *SymbolDictionary )setInSyms ()error {if _bcgd .Header .RTSegments !=nil {return _bcgd .retrieveImportSymbols ();
};_bcgd ._dba =make ([]*_fe .Bitmap ,0);return nil ;};func (_gadg *GenericRefinementRegion )updateOverride ()error {if _gadg .GrAtX ==nil ||_gadg .GrAtY ==nil {return _g .New ("\u0041\u0054\u0020\u0070\u0069\u0078\u0065\u006c\u0073\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");
};if len (_gadg .GrAtX )!=len (_gadg .GrAtY ){return _g .New ("A\u0054\u0020\u0070\u0069xe\u006c \u0069\u006e\u0063\u006f\u006es\u0069\u0073\u0074\u0065\u006e\u0074");};_gadg ._ce =make ([]bool ,len (_gadg .GrAtX ));switch _gadg .TemplateID {case 0:if _gadg .GrAtX [0]!=-1&&_gadg .GrAtY [0]!=-1{_gadg ._ce [0]=true ;
_gadg ._ad =true ;};if _gadg .GrAtX [1]!=-1&&_gadg .GrAtY [1]!=-1{_gadg ._ce [1]=true ;_gadg ._ad =true ;};case 1:_gadg ._ad =false ;};return nil ;};func (_fbef *TextRegion )getSymbols ()error {if _fbef .Header .RTSegments !=nil {return _fbef .initSymbols ();
};return nil ;};func (_eebd *SymbolDictionary )addSymbol (_ggda Regioner )error {_gfee ,_bced :=_ggda .GetRegionBitmap ();if _bced !=nil {return _bced ;};_eebd ._cece [_eebd ._ebec ]=_gfee ;_eebd ._fcaa =append (_eebd ._fcaa ,_gfee );_gg .Log .Trace ("\u005b\u0053YM\u0042\u004f\u004c \u0044\u0049\u0043\u0054ION\u0041RY\u005d\u0020\u0041\u0064\u0064\u0065\u0064 s\u0079\u006d\u0062\u006f\u006c\u003a\u0020%\u0073",_gfee );
return nil ;};var _ templater =&template1 {};func (_agdf *Header )readDataStartOffset (_addag *_ga .Reader ,_gaef OrganizationType ){if _gaef ==OSequential {_agdf .SegmentDataStartOffset =uint64 (_addag .AbsolutePosition ());};};func (_eeeg *TableSegment )parseHeader ()error {var (_ffgc int ;
_dfef uint64 ;_adcgc error ;);_ffgc ,_adcgc =_eeeg ._afdcc .ReadBit ();if _adcgc !=nil {return _adcgc ;};if _ffgc ==1{return _da .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0061\u0062\u006c\u0065 \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0064e\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u002e\u0020\u0042\u002e\u0032\u002e1\u0020\u0043\u006f\u0064\u0065\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0042\u0069\u0074\u0020\u0037\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u007a\u0065\u0072\u006f\u002e\u0020\u0057a\u0073\u003a \u0025\u0064",_ffgc );
};if _dfef ,_adcgc =_eeeg ._afdcc .ReadBits (3);_adcgc !=nil {return _adcgc ;};_eeeg ._eebb =(int32 (_dfef )+1)&0xf;if _dfef ,_adcgc =_eeeg ._afdcc .ReadBits (3);_adcgc !=nil {return _adcgc ;};_eeeg ._gedgc =(int32 (_dfef )+1)&0xf;if _dfef ,_adcgc =_eeeg ._afdcc .ReadBits (32);
_adcgc !=nil {return _adcgc ;};_eeeg ._ccbe =int32 (_dfef &_c .MaxInt32 );if _dfef ,_adcgc =_eeeg ._afdcc .ReadBits (32);_adcgc !=nil {return _adcgc ;};_eeeg ._edba =int32 (_dfef &_c .MaxInt32 );return nil ;};func (_gcbge *SymbolDictionary )getToExportFlags ()([]int ,error ){var (_fefd int ;
_bcae int32 ;_fdaa error ;_aabdg =int32 (_gcbge ._bdgf +_gcbge .NumberOfNewSymbols );_ffde =make ([]int ,_aabdg ););for _baccg :=int32 (0);_baccg < _aabdg ;_baccg +=_bcae {if _gcbge .IsHuffmanEncoded {_daaea ,_begb :=_fc .GetStandardTable (1);if _begb !=nil {return nil ,_begb ;
};_ecbde ,_begb :=_daaea .Decode (_gcbge ._fafe );if _begb !=nil {return nil ,_begb ;};_bcae =int32 (_ecbde );}else {_bcae ,_fdaa =_gcbge ._cdab .DecodeInt (_gcbge ._eefbg );if _fdaa !=nil {return nil ,_fdaa ;};};if _bcae !=0{if _baccg +_bcae > _aabdg {return nil ,_fd .Error ("\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0067\u0065\u0074T\u006f\u0045\u0078\u0070\u006f\u0072\u0074F\u006c\u0061\u0067\u0073","\u006d\u0061\u006c\u0066\u006f\u0072m\u0065\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0064\u0061\u0074\u0061\u0020\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u002e\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u006f\u0075\u0074\u0020\u006ff\u0020r\u0061\u006e\u0067\u0065");
};for _ageb :=_baccg ;_ageb < _baccg +_bcae ;_ageb ++{_ffde [_ageb ]=_fefd ;};};if _fefd ==0{_fefd =1;}else {_fefd =0;};};return _ffde ,nil ;};func (_faa *GenericRegion )copyLineAbove (_edaa int )error {_bfc :=_edaa *_faa .Bitmap .RowStride ;_bae :=_bfc -_faa .Bitmap .RowStride ;
for _baae :=0;_baae < _faa .Bitmap .RowStride ;_baae ++{_ggdb ,_dfa :=_faa .Bitmap .GetByte (_bae );if _dfa !=nil {return _dfa ;};_bae ++;if _dfa =_faa .Bitmap .SetByte (_bfc ,_ggdb );_dfa !=nil {return _dfa ;};_bfc ++;};return nil ;};func (_aadf *PageInformationSegment )readMaxStripeSize ()error {_dade ,_gdfa :=_aadf ._ecaa .ReadBits (15);
if _gdfa !=nil {return _gdfa ;};_aadf .MaxStripeSize =uint16 (_dade &_c .MaxUint16 );return nil ;};func (_dad *GenericRegion )setParametersWithAt (_gbbff bool ,_cded byte ,_ecbec ,_bbg bool ,_dddc ,_gcdc []int8 ,_egag ,_ecdg uint32 ,_gbd *_e .DecoderStats ,_daf *_e .Decoder ){_dad .IsMMREncoded =_gbbff ;
_dad .GBTemplate =_cded ;_dad .IsTPGDon =_ecbec ;_dad .GBAtX =_dddc ;_dad .GBAtY =_gcdc ;_dad .RegionSegment .BitmapHeight =_ecdg ;_dad .RegionSegment .BitmapWidth =_egag ;_dad ._efbd =nil ;_dad .Bitmap =nil ;if _gbd !=nil {_dad ._agc =_gbd ;};if _daf !=nil {_dad ._bda =_daf ;
};_gg .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049O\u004e\u005d\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073\u0020\u0053\u0044\u0041t\u003a\u0020\u0025\u0073",_dad );};func (_cceg *RegionSegment )Encode (w _ga .BinaryWriter )(_efeag int ,_dgcd error ){const _gdc ="R\u0065g\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065n\u0074\u002e\u0045\u006eco\u0064\u0065";
_deed :=make ([]byte ,4);_dc .BigEndian .PutUint32 (_deed ,_cceg .BitmapWidth );_efeag ,_dgcd =w .Write (_deed );if _dgcd !=nil {return 0,_fd .Wrap (_dgcd ,_gdc ,"\u0057\u0069\u0064t\u0068");};_dc .BigEndian .PutUint32 (_deed ,_cceg .BitmapHeight );var _dcbc int ;
_dcbc ,_dgcd =w .Write (_deed );if _dgcd !=nil {return 0,_fd .Wrap (_dgcd ,_gdc ,"\u0048\u0065\u0069\u0067\u0068\u0074");};_efeag +=_dcbc ;_dc .BigEndian .PutUint32 (_deed ,_cceg .XLocation );_dcbc ,_dgcd =w .Write (_deed );if _dgcd !=nil {return 0,_fd .Wrap (_dgcd ,_gdc ,"\u0058L\u006f\u0063\u0061\u0074\u0069\u006fn");
};_efeag +=_dcbc ;_dc .BigEndian .PutUint32 (_deed ,_cceg .YLocation );_dcbc ,_dgcd =w .Write (_deed );if _dgcd !=nil {return 0,_fd .Wrap (_dgcd ,_gdc ,"\u0059L\u006f\u0063\u0061\u0074\u0069\u006fn");};_efeag +=_dcbc ;if _dgcd =w .WriteByte (byte (_cceg .CombinaionOperator )&0x07);
_dgcd !=nil {return 0,_fd .Wrap (_dgcd ,_gdc ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};_efeag ++;return _efeag ,nil ;};func NewRegionSegment (r *_ga .Reader )*RegionSegment {return &RegionSegment {_gfga :r }};
func (_bebd *GenericRegion )overrideAtTemplate0a (_aabe ,_gdd ,_gffd ,_cage ,_dcc ,_eacd int )int {if _bebd .GBAtOverride [0]{_aabe &=0xFFEF;if _bebd .GBAtY [0]==0&&_bebd .GBAtX [0]>=-int8 (_dcc ){_aabe |=(_cage >>uint (int8 (_eacd )-_bebd .GBAtX [0]&0x1))<<4;
}else {_aabe |=int (_bebd .getPixel (_gdd +int (_bebd .GBAtX [0]),_gffd +int (_bebd .GBAtY [0])))<<4;};};if _bebd .GBAtOverride [1]{_aabe &=0xFBFF;if _bebd .GBAtY [1]==0&&_bebd .GBAtX [1]>=-int8 (_dcc ){_aabe |=(_cage >>uint (int8 (_eacd )-_bebd .GBAtX [1]&0x1))<<10;
}else {_aabe |=int (_bebd .getPixel (_gdd +int (_bebd .GBAtX [1]),_gffd +int (_bebd .GBAtY [1])))<<10;};};if _bebd .GBAtOverride [2]{_aabe &=0xF7FF;if _bebd .GBAtY [2]==0&&_bebd .GBAtX [2]>=-int8 (_dcc ){_aabe |=(_cage >>uint (int8 (_eacd )-_bebd .GBAtX [2]&0x1))<<11;
}else {_aabe |=int (_bebd .getPixel (_gdd +int (_bebd .GBAtX [2]),_gffd +int (_bebd .GBAtY [2])))<<11;};};if _bebd .GBAtOverride [3]{_aabe &=0x7FFF;if _bebd .GBAtY [3]==0&&_bebd .GBAtX [3]>=-int8 (_dcc ){_aabe |=(_cage >>uint (int8 (_eacd )-_bebd .GBAtX [3]&0x1))<<15;
}else {_aabe |=int (_bebd .getPixel (_gdd +int (_bebd .GBAtX [3]),_gffd +int (_bebd .GBAtY [3])))<<15;};};return _aabe ;};func (_efda *SymbolDictionary )setRefinementAtPixels ()error {if !_efda .UseRefinementAggregation ||_efda .SdrTemplate !=0{return nil ;
};if _dedg :=_efda .readRefinementAtPixels (2);_dedg !=nil {return _dedg ;};return nil ;};func (_cgaaf *TableSegment )StreamReader ()*_ga .Reader {return _cgaaf ._afdcc };type template0 struct{};type PageInformationSegment struct{_ecaa *_ga .Reader ;PageBMHeight int ;
PageBMWidth int ;ResolutionX int ;ResolutionY int ;_aggf bool ;_bdcd _fe .CombinationOperator ;_ecad bool ;DefaultPixelValue uint8 ;_egfb bool ;IsLossless bool ;IsStripe bool ;MaxStripeSize uint16 ;};func (_gedgb *TextRegion )encodeFlags (_bgbg _ga .BinaryWriter )(_deee int ,_dbgg error ){const _ffgb ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _dbgg =_bgbg .WriteBit (int (_gedgb .SbrTemplate ));_dbgg !=nil {return _deee ,_fd .Wrap (_dbgg ,_ffgb ,"s\u0062\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};if _ ,_dbgg =_bgbg .WriteBits (uint64 (_gedgb .SbDsOffset ),5);_dbgg !=nil {return _deee ,_fd .Wrap (_dbgg ,_ffgb ,"\u0073\u0062\u0044\u0073\u004f\u0066\u0066\u0073\u0065\u0074");
};if _dbgg =_bgbg .WriteBit (int (_gedgb .DefaultPixel ));_dbgg !=nil {return _deee ,_fd .Wrap (_dbgg ,_ffgb ,"\u0044\u0065\u0066a\u0075\u006c\u0074\u0050\u0069\u0078\u0065\u006c");};if _ ,_dbgg =_bgbg .WriteBits (uint64 (_gedgb .CombinationOperator ),2);
_dbgg !=nil {return _deee ,_fd .Wrap (_dbgg ,_ffgb ,"\u0043\u006f\u006d\u0062in\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072");};if _dbgg =_bgbg .WriteBit (int (_gedgb .IsTransposed ));_dbgg !=nil {return _deee ,_fd .Wrap (_dbgg ,_ffgb ,"\u0069\u0073\u0020\u0074\u0072\u0061\u006e\u0073\u0070\u006f\u0073\u0065\u0064");
};if _ ,_dbgg =_bgbg .WriteBits (uint64 (_gedgb .ReferenceCorner ),2);_dbgg !=nil {return _deee ,_fd .Wrap (_dbgg ,_ffgb ,"\u0072\u0065f\u0065\u0072\u0065n\u0063\u0065\u0020\u0063\u006f\u0072\u006e\u0065\u0072");};if _ ,_dbgg =_bgbg .WriteBits (uint64 (_gedgb .LogSBStrips ),2);
_dbgg !=nil {return _deee ,_fd .Wrap (_dbgg ,_ffgb ,"L\u006f\u0067\u0053\u0042\u0053\u0074\u0072\u0069\u0070\u0073");};var _acbc int ;if _gedgb .UseRefinement {_acbc =1;};if _dbgg =_bgbg .WriteBit (_acbc );_dbgg !=nil {return _deee ,_fd .Wrap (_dbgg ,_ffgb ,"\u0075\u0073\u0065\u0020\u0072\u0065\u0066\u0069\u006ee\u006d\u0065\u006e\u0074");
};_acbc =0;if _gedgb .IsHuffmanEncoded {_acbc =1;};if _dbgg =_bgbg .WriteBit (_acbc );_dbgg !=nil {return _deee ,_fd .Wrap (_dbgg ,_ffgb ,"u\u0073\u0065\u0020\u0068\u0075\u0066\u0066\u006d\u0061\u006e");};_deee =2;return _deee ,nil ;};func (_dcde *TextRegion )symbolIDCodeLengths ()error {var (_bgag []*_fc .Code ;
_aeabe uint64 ;_fefed _fc .Tabler ;_gcac error ;);for _acbf :=0;_acbf < 35;_acbf ++{_aeabe ,_gcac =_dcde ._gedf .ReadBits (4);if _gcac !=nil {return _gcac ;};_cgfe :=int (_aeabe &0xf);if _cgfe > 0{_bgag =append (_bgag ,_fc .NewCode (int32 (_cgfe ),0,int32 (_acbf ),false ));
};};_fefed ,_gcac =_fc .NewFixedSizeTable (_bgag );if _gcac !=nil {return _gcac ;};var (_dfbab int64 ;_acef uint32 ;_baeg []*_fc .Code ;_gdfg int64 ;);for _acef < _dcde .NumberOfSymbols {_gdfg ,_gcac =_fefed .Decode (_dcde ._gedf );if _gcac !=nil {return _gcac ;
};if _gdfg < 32{if _gdfg > 0{_baeg =append (_baeg ,_fc .NewCode (int32 (_gdfg ),0,int32 (_acef ),false ));};_dfbab =_gdfg ;_acef ++;}else {var _dffeb ,_aecde int64 ;switch _gdfg {case 32:_aeabe ,_gcac =_dcde ._gedf .ReadBits (2);if _gcac !=nil {return _gcac ;
};_dffeb =3+int64 (_aeabe );if _acef > 0{_aecde =_dfbab ;};case 33:_aeabe ,_gcac =_dcde ._gedf .ReadBits (3);if _gcac !=nil {return _gcac ;};_dffeb =3+int64 (_aeabe );case 34:_aeabe ,_gcac =_dcde ._gedf .ReadBits (7);if _gcac !=nil {return _gcac ;};_dffeb =11+int64 (_aeabe );
};for _dfdb :=0;_dfdb < int (_dffeb );_dfdb ++{if _aecde > 0{_baeg =append (_baeg ,_fc .NewCode (int32 (_aecde ),0,int32 (_acef ),false ));};_acef ++;};};};_dcde ._gedf .Align ();_dcde ._adaac ,_gcac =_fc .NewFixedSizeTable (_baeg );return _gcac ;};func (_abff *GenericRegion )decodeLine (_ega ,_dcb ,_gcc int )error {const _fbga ="\u0064\u0065\u0063\u006f\u0064\u0065\u004c\u0069\u006e\u0065";
_ggbe :=_abff .Bitmap .GetByteIndex (0,_ega );_bgdb :=_ggbe -_abff .Bitmap .RowStride ;switch _abff .GBTemplate {case 0:if !_abff .UseExtTemplates {return _abff .decodeTemplate0a (_ega ,_dcb ,_gcc ,_ggbe ,_bgdb );};return _abff .decodeTemplate0b (_ega ,_dcb ,_gcc ,_ggbe ,_bgdb );
case 1:return _abff .decodeTemplate1 (_ega ,_dcb ,_gcc ,_ggbe ,_bgdb );case 2:return _abff .decodeTemplate2 (_ega ,_dcb ,_gcc ,_ggbe ,_bgdb );case 3:return _abff .decodeTemplate3 (_ega ,_dcb ,_gcc ,_ggbe ,_bgdb );};return _fd .Errorf (_fbga ,"\u0069\u006e\u0076a\u006c\u0069\u0064\u0020G\u0042\u0054\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u003a\u0020\u0025\u0064",_abff .GBTemplate );
};func (_efddc *SymbolDictionary )getUserTable (_gagc int )(_fc .Tabler ,error ){var _gcce int ;for _ ,_gbcd :=range _efddc .Header .RTSegments {if _gbcd .Type ==53{if _gcce ==_gagc {_cbfa ,_ecfg :=_gbcd .GetSegmentData ();if _ecfg !=nil {return nil ,_ecfg ;
};_ceag :=_cbfa .(_fc .BasicTabler );return _fc .NewEncodedTable (_ceag );};_gcce ++;};};return nil ,nil ;};func (_bbe *GenericRegion )setParametersMMR (_gabf bool ,_gcga ,_gda int64 ,_dffa ,_ceab uint32 ,_agcg byte ,_fece ,_fefe bool ,_agcf ,_addd []int8 ){_bbe .DataOffset =_gcga ;
_bbe .DataLength =_gda ;_bbe .RegionSegment =&RegionSegment {};_bbe .RegionSegment .BitmapHeight =_dffa ;_bbe .RegionSegment .BitmapWidth =_ceab ;_bbe .GBTemplate =_agcg ;_bbe .IsMMREncoded =_gabf ;_bbe .IsTPGDon =_fece ;_bbe .GBAtX =_agcf ;_bbe .GBAtY =_addd ;
};func (_gbbd *SymbolDictionary )huffDecodeBmSize ()(int64 ,error ){if _gbbd ._bbgg ==nil {var (_ebfac int ;_fee error ;);if _gbbd .SdHuffDecodeHeightSelection ==3{_ebfac ++;};if _gbbd .SdHuffDecodeWidthSelection ==3{_ebfac ++;};_gbbd ._bbgg ,_fee =_gbbd .getUserTable (_ebfac );
if _fee !=nil {return 0,_fee ;};};return _gbbd ._bbgg .Decode (_gbbd ._fafe );};func (_eaab *RegionSegment )parseHeader ()error {const _baeff ="p\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_gg .Log .Trace ("\u005b\u0052\u0045\u0047I\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002dH\u0045A\u0044\u0045\u0052\u005d\u0020\u0042\u0065g\u0069\u006e");
defer func (){_gg .Log .Trace ("\u005b\u0052\u0045G\u0049\u004f\u004e\u005d[\u0050\u0041\u0052\u0053\u0045\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");}();_ggad ,_ceadb :=_eaab ._gfga .ReadBits (32);
if _ceadb !=nil {return _fd .Wrap (_ceadb ,_baeff ,"\u0077\u0069\u0064t\u0068");};_eaab .BitmapWidth =uint32 (_ggad &_c .MaxUint32 );_ggad ,_ceadb =_eaab ._gfga .ReadBits (32);if _ceadb !=nil {return _fd .Wrap (_ceadb ,_baeff ,"\u0068\u0065\u0069\u0067\u0068\u0074");
};_eaab .BitmapHeight =uint32 (_ggad &_c .MaxUint32 );_ggad ,_ceadb =_eaab ._gfga .ReadBits (32);if _ceadb !=nil {return _fd .Wrap (_ceadb ,_baeff ,"\u0078\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_eaab .XLocation =uint32 (_ggad &_c .MaxUint32 );
_ggad ,_ceadb =_eaab ._gfga .ReadBits (32);if _ceadb !=nil {return _fd .Wrap (_ceadb ,_baeff ,"\u0079\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_eaab .YLocation =uint32 (_ggad &_c .MaxUint32 );if _ ,_ceadb =_eaab ._gfga .ReadBits (5);_ceadb !=nil {return _fd .Wrap (_ceadb ,_baeff ,"\u0064i\u0072\u0079\u0020\u0072\u0065\u0061d");
};if _ceadb =_eaab .readCombinationOperator ();_ceadb !=nil {return _fd .Wrap (_ceadb ,_baeff ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};return nil ;};func (_aagee *TextRegion )decodeSymInRefSize ()(int64 ,error ){const _cdda ="\u0064e\u0063o\u0064\u0065\u0053\u0079\u006dI\u006e\u0052e\u0066\u0053\u0069\u007a\u0065";
if _aagee .SbHuffRSize ==0{_gfa ,_accc :=_fc .GetStandardTable (1);if _accc !=nil {return 0,_fd .Wrap (_accc ,_cdda ,"");};return _gfa .Decode (_aagee ._gedf );};if _aagee ._gcfb ==nil {var (_ebad int ;_agba error ;);if _aagee .SbHuffFS ==3{_ebad ++;};
if _aagee .SbHuffDS ==3{_ebad ++;};if _aagee .SbHuffDT ==3{_ebad ++;};if _aagee .SbHuffRDWidth ==3{_ebad ++;};if _aagee .SbHuffRDHeight ==3{_ebad ++;};if _aagee .SbHuffRDX ==3{_ebad ++;};if _aagee .SbHuffRDY ==3{_ebad ++;};_aagee ._gcfb ,_agba =_aagee .getUserTable (_ebad );
if _agba !=nil {return 0,_fd .Wrap (_agba ,_cdda ,"");};};_cace ,_fafd :=_aagee ._gcfb .Decode (_aagee ._gedf );if _fafd !=nil {return 0,_fd .Wrap (_fafd ,_cdda ,"");};return _cace ,nil ;};func (_cccb *SymbolDictionary )Encode (w _ga .BinaryWriter )(_afeg int ,_fcbf error ){const _gabfb ="\u0053\u0079\u006dbo\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0045\u006e\u0063\u006f\u0064\u0065";
if _cccb ==nil {return 0,_fd .Error (_gabfb ,"\u0073\u0079m\u0062\u006f\u006c\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066in\u0065\u0064");};if _afeg ,_fcbf =_cccb .encodeFlags (w );_fcbf !=nil {return _afeg ,_fd .Wrap (_fcbf ,_gabfb ,"");
};_bbaa ,_fcbf :=_cccb .encodeATFlags (w );if _fcbf !=nil {return _afeg ,_fd .Wrap (_fcbf ,_gabfb ,"");};_afeg +=_bbaa ;if _bbaa ,_fcbf =_cccb .encodeRefinementATFlags (w );_fcbf !=nil {return _afeg ,_fd .Wrap (_fcbf ,_gabfb ,"");};_afeg +=_bbaa ;if _bbaa ,_fcbf =_cccb .encodeNumSyms (w );
_fcbf !=nil {return _afeg ,_fd .Wrap (_fcbf ,_gabfb ,"");};_afeg +=_bbaa ;if _bbaa ,_fcbf =_cccb .encodeSymbols (w );_fcbf !=nil {return _afeg ,_fd .Wrap (_fcbf ,_gabfb ,"");};_afeg +=_bbaa ;return _afeg ,nil ;};func (_ffa *Header )readHeaderLength (_agf *_ga .Reader ,_cceb int64 ){_ffa .HeaderLength =_agf .AbsolutePosition ()-_cceb ;
};func (_fadc *HalftoneRegion )combineGrayscalePlanes (_cedf []*_fe .Bitmap ,_gfgc int )error {_cgcb :=0;for _fcac :=0;_fcac < _cedf [_gfgc ].Height ;_fcac ++{for _geff :=0;_geff < _cedf [_gfgc ].Width ;_geff +=8{_abce ,_ebc :=_cedf [_gfgc +1].GetByte (_cgcb );
if _ebc !=nil {return _ebc ;};_eag ,_ebc :=_cedf [_gfgc ].GetByte (_cgcb );if _ebc !=nil {return _ebc ;};_ebc =_cedf [_gfgc ].SetByte (_cgcb ,_fe .CombineBytes (_eag ,_abce ,_fe .CmbOpXor ));if _ebc !=nil {return _ebc ;};_cgcb ++;};};return nil ;};func (_efcf *TextRegion )getUserTable (_gbdc int )(_fc .Tabler ,error ){const _gacab ="\u0067\u0065\u0074U\u0073\u0065\u0072\u0054\u0061\u0062\u006c\u0065";
var _facdf int ;for _ ,_ggaf :=range _efcf .Header .RTSegments {if _ggaf .Type ==53{if _facdf ==_gbdc {_bada ,_fdfecf :=_ggaf .GetSegmentData ();if _fdfecf !=nil {return nil ,_fdfecf ;};_ecag ,_dgff :=_bada .(*TableSegment );if !_dgff {_gg .Log .Debug (_da .Sprintf ("\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079p\u0065\u00205\u0033\u0020\u002d\u0020\u0061\u006ed\u0020in\u0064\u0065\u0078\u003a\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_ggaf .SegmentNumber ));
return nil ,_fd .Error (_gacab ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079\u0070e\u0020\u0035\u0033\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u002a\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};return _fc .NewEncodedTable (_ecag );};_facdf ++;};};return nil ,nil ;};func (_eafg *Header )readReferredToSegmentNumbers (_gefc *_ga .Reader ,_ffcd int )([]int ,error ){const _bffb ="\u0072\u0065\u0061\u0064R\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053e\u0067m\u0065\u006e\u0074\u004e\u0075\u006d\u0062e\u0072\u0073";
_baef :=make ([]int ,_ffcd );if _ffcd > 0{_eafg .RTSegments =make ([]*Header ,_ffcd );var (_agde uint64 ;_adag error ;);for _cefa :=0;_cefa < _ffcd ;_cefa ++{_agde ,_adag =_gefc .ReadBits (byte (_eafg .referenceSize ())<<3);if _adag !=nil {return nil ,_fd .Wrapf (_adag ,_bffb ,"\u0027\u0025\u0064\u0027 \u0072\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0020\u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u0075\u006db\u0065\u0072",_cefa );
};_baef [_cefa ]=int (_agde &_c .MaxInt32 );};};return _baef ,nil ;};var _ _fc .BasicTabler =&TableSegment {};func (_edbg *TextRegion )checkInput ()error {const _cabb ="\u0063\u0068\u0065\u0063\u006b\u0049\u006e\u0070\u0075\u0074";if !_edbg .UseRefinement {if _edbg .SbrTemplate !=0{_gg .Log .Debug ("\u0053\u0062\u0072Te\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");
_edbg .SbrTemplate =0;};};if _edbg .SbHuffFS ==2||_edbg .SbHuffRDWidth ==2||_edbg .SbHuffRDHeight ==2||_edbg .SbHuffRDX ==2||_edbg .SbHuffRDY ==2{return _fd .Error (_cabb ,"h\u0075\u0066\u0066\u006d\u0061\u006e \u0066\u006c\u0061\u0067\u0020\u0076a\u006c\u0075\u0065\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074e\u0064");
};if !_edbg .UseRefinement {if _edbg .SbHuffRSize !=0{_gg .Log .Debug ("\u0053\u0062\u0048uf\u0066\u0052\u0053\u0069\u007a\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_edbg .SbHuffRSize =0;};if _edbg .SbHuffRDY !=0{_gg .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044Y\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");
_edbg .SbHuffRDY =0;};if _edbg .SbHuffRDX !=0{_gg .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044X\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_edbg .SbHuffRDX =0;};if _edbg .SbHuffRDWidth !=0{_gg .Log .Debug ("\u0053b\u0048\u0075\u0066\u0066R\u0044\u0057\u0069\u0064\u0074h\u0020s\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u00200");
_edbg .SbHuffRDWidth =0;};if _edbg .SbHuffRDHeight !=0{_gg .Log .Debug ("\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069g\u0068\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0030");_edbg .SbHuffRDHeight =0;};};return nil ;
};func (_dafa *SymbolDictionary )encodeSymbols (_eagd _ga .BinaryWriter )(_ffae int ,_bddd error ){const _eagg ="\u0065\u006e\u0063o\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c";_dgdb :=_dg .New ();_dgdb .Init ();_geb ,_bddd :=_dafa ._efeee .SelectByIndexes (_dafa ._adcd );
if _bddd !=nil {return 0,_fd .Wrap (_bddd ,_eagg ,"\u0069n\u0069\u0074\u0069\u0061\u006c");};_gdae :=map[*_fe .Bitmap ]int {};for _egbc ,_begf :=range _geb .Values {_gdae [_begf ]=_egbc ;};_geb .SortByHeight ();var _bbfd ,_bcbc int ;_gfcf ,_bddd :=_geb .GroupByHeight ();
if _bddd !=nil {return 0,_fd .Wrap (_bddd ,_eagg ,"");};for _ ,_dfbd :=range _gfcf .Values {_cdg :=_dfbd .Values [0].Height ;_gfeg :=_cdg -_bbfd ;if _bddd =_dgdb .EncodeInteger (_dg .IADH ,_gfeg );_bddd !=nil {return 0,_fd .Wrapf (_bddd ,_eagg ,"\u0049\u0041\u0044\u0048\u0020\u0066\u006f\u0072\u0020\u0064\u0068\u003a \u0027\u0025\u0064\u0027",_gfeg );
};_bbfd =_cdg ;_badf ,_cffg :=_dfbd .GroupByWidth ();if _cffg !=nil {return 0,_fd .Wrapf (_cffg ,_eagg ,"\u0068\u0065\u0069g\u0068\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_cdg );};var _bdgc int ;for _ ,_cacb :=range _badf .Values {for _ ,_egagg :=range _cacb .Values {_bccb :=_egagg .Width ;
_fbdg :=_bccb -_bdgc ;if _cffg =_dgdb .EncodeInteger (_dg .IADW ,_fbdg );_cffg !=nil {return 0,_fd .Wrapf (_cffg ,_eagg ,"\u0049\u0041\u0044\u0057\u0020\u0066\u006f\u0072\u0020\u0064\u0077\u003a \u0027\u0025\u0064\u0027",_fbdg );};_bdgc +=_fbdg ;if _cffg =_dgdb .EncodeBitmap (_egagg ,false );
_cffg !=nil {return 0,_fd .Wrapf (_cffg ,_eagg ,"H\u0065i\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u0020W\u0069\u0064\u0074\u0068: \u0025\u0064",_cdg ,_bccb );};_dabb :=_gdae [_egagg ];_dafa ._gffgg [_dabb ]=_bcbc ;_bcbc ++;};};if _cffg =_dgdb .EncodeOOB (_dg .IADW );
_cffg !=nil {return 0,_fd .Wrap (_cffg ,_eagg ,"\u0049\u0041\u0044\u0057");};};if _bddd =_dgdb .EncodeInteger (_dg .IAEX ,0);_bddd !=nil {return 0,_fd .Wrap (_bddd ,_eagg ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};if _bddd =_dgdb .EncodeInteger (_dg .IAEX ,len (_dafa ._adcd ));_bddd !=nil {return 0,_fd .Wrap (_bddd ,_eagg ,"\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0073\u0079m\u0062\u006f\u006c\u0073");};_dgdb .Final ();_afde ,_bddd :=_dgdb .WriteTo (_eagd );
if _bddd !=nil {return 0,_fd .Wrap (_bddd ,_eagg ,"\u0077\u0072i\u0074\u0069\u006e\u0067 \u0065\u006ec\u006f\u0064\u0065\u0072\u0020\u0063\u006f\u006et\u0065\u0078\u0074\u0020\u0074\u006f\u0020\u0027\u0077\u0027\u0020\u0077r\u0069\u0074\u0065\u0072");};
return int (_afde ),nil ;};func (_efea *GenericRegion )Init (h *Header ,r *_ga .Reader )error {_efea .RegionSegment =NewRegionSegment (r );_efea ._dbe =r ;return _efea .parseHeader ();};func (_ca *GenericRefinementRegion )Init (header *Header ,r *_ga .Reader )error {_ca ._bc =header ;
_ca ._ge =r ;_ca .RegionInfo =NewRegionSegment (r );return _ca .parseHeader ();};func (_feafd *HalftoneRegion )shiftAndFill (_ccdb int )int {_ccdb >>=8;if _ccdb < 0{_aeab :=int (_c .Log (float64 (_fafb (_ccdb )))/_c .Log (2));_cbc :=31-_aeab ;for _efd :=1;
_efd < _cbc ;_efd ++{_ccdb |=1<<uint (31-_efd );};};return _ccdb ;};type Type int ;type Regioner interface{GetRegionBitmap ()(*_fe .Bitmap ,error );GetRegionInfo ()*RegionSegment ;};func (_adcf *TextRegion )computeSymbolCodeLength ()error {if _adcf .IsHuffmanEncoded {return _adcf .symbolIDCodeLengths ();
};_adcf ._dbbc =int8 (_c .Ceil (_c .Log (float64 (_adcf .NumberOfSymbols ))/_c .Log (2)));return nil ;};func (_fadf *PatternDictionary )extractPatterns (_bag *_fe .Bitmap )error {var _efdd int ;_eegd :=make ([]*_fe .Bitmap ,_fadf .GrayMax +1);for _efdd <=int (_fadf .GrayMax ){_ebd :=int (_fadf .HdpWidth )*_efdd ;
_bdfd :=_a .Rect (_ebd ,0,_ebd +int (_fadf .HdpWidth ),int (_fadf .HdpHeight ));_aadg ,_efde :=_fe .Extract (_bdfd ,_bag );if _efde !=nil {return _efde ;};_eegd [_efdd ]=_aadg ;_efdd ++;};_fadf .Patterns =_eegd ;return nil ;};func (_bgbb *SymbolDictionary )Init (h *Header ,r *_ga .Reader )error {_bgbb .Header =h ;
_bgbb ._fafe =r ;return _bgbb .parseHeader ();};func (_cdad *TableSegment )HtRS ()int32 {return _cdad ._eebb };func (_bfcf *PageInformationSegment )readIsStriped ()error {_fccg ,_dfeg :=_bfcf ._ecaa .ReadBit ();if _dfeg !=nil {return _dfeg ;};if _fccg ==1{_bfcf .IsStripe =true ;
};return nil ;};func (_af *EndOfStripe )LineNumber ()int {return _af ._dgd };func (_fda *GenericRegion )decodeSLTP ()(int ,error ){switch _fda .GBTemplate {case 0:_fda ._agc .SetIndex (0x9B25);case 1:_fda ._agc .SetIndex (0x795);case 2:_fda ._agc .SetIndex (0xE5);
case 3:_fda ._agc .SetIndex (0x195);};return _fda ._bda .DecodeBit (_fda ._agc );};func (_fcb *GenericRefinementRegion )String ()string {_adaa :=&_ac .Builder {};_adaa .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");
_adaa .WriteString (_fcb .RegionInfo .String ()+"\u000a");_adaa .WriteString (_da .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0052\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_fcb .IsTPGROn ));_adaa .WriteString (_da .Sprintf ("\u0009-\u0020T\u0065\u006d\u0070\u006c\u0061t\u0065\u0049D\u003a\u0020\u0025\u0076\u000a",_fcb .TemplateID ));
_adaa .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_fcb .GrAtX ));_adaa .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_fcb .GrAtY ));
_adaa .WriteString (_da .Sprintf ("\u0009-\u0020R\u0065\u0066\u0065\u0072\u0065n\u0063\u0065D\u0058\u0020\u0025\u0076\u000a",_fcb .ReferenceDX ));_adaa .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0052ef\u0065\u0072\u0065\u006e\u0063\u0044\u0065\u0059\u003a\u0020\u0025\u0076\u000a",_fcb .ReferenceDY ));
return _adaa .String ();};var (_agfe Segmenter ;_edb =map[Type ]func ()Segmenter {TSymbolDictionary :func ()Segmenter {return &SymbolDictionary {}},TIntermediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateLosslessTextRegion :func ()Segmenter {return &TextRegion {}},TPatternDictionary :func ()Segmenter {return &PatternDictionary {}},TIntermediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateLosslessHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TIntermediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateLosslessGenericRegion :func ()Segmenter {return &GenericRegion {}},TIntermediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateLosslessGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TPageInformation :func ()Segmenter {return &PageInformationSegment {}},TEndOfPage :func ()Segmenter {return _agfe },TEndOfStrip :func ()Segmenter {return &EndOfStripe {}},TEndOfFile :func ()Segmenter {return _agfe },TProfiles :func ()Segmenter {return _agfe },TTables :func ()Segmenter {return &TableSegment {}},TExtension :func ()Segmenter {return _agfe },TBitmap :func ()Segmenter {return _agfe }};
);func (_gagg *PageInformationSegment )CombinationOperatorOverrideAllowed ()bool {return _gagg ._aggf };func (_baaf *TableSegment )HtOOB ()int32 {return _baaf ._ecde };func (_cgd *PageInformationSegment )encodeFlags (_agcgb _ga .BinaryWriter )(_abdf error ){const _bece ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _abdf =_agcgb .SkipBits (1);_abdf !=nil {return _fd .Wrap (_abdf ,_bece ,"\u0072\u0065\u0073e\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074");};var _begd int ;if _cgd .CombinationOperatorOverrideAllowed (){_begd =1;};if _abdf =_agcgb .WriteBit (_begd );
_abdf !=nil {return _fd .Wrap (_abdf ,_bece ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0064\u0065\u006e");};_begd =0;if _cgd ._ecad {_begd =1;
};if _abdf =_agcgb .WriteBit (_begd );_abdf !=nil {return _fd .Wrap (_abdf ,_bece ,"\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0061\u0075\u0078i\u006ci\u0061r\u0079\u0020\u0062\u0075\u0066\u0066\u0065r");};if _abdf =_agcgb .WriteBit ((int (_cgd ._bdcd )>>1)&0x01);
_abdf !=nil {return _fd .Wrap (_abdf ,_bece ,"\u0063\u006f\u006d\u0062\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006f\u0070\u0065\u0072\u0061\u0074o\u0072\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0062\u0069\u0074");};if _abdf =_agcgb .WriteBit (int (_cgd ._bdcd )&0x01);
_abdf !=nil {return _fd .Wrap (_abdf ,_bece ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0062\u0069\u0074");};_begd =int (_cgd .DefaultPixelValue );
if _abdf =_agcgb .WriteBit (_begd );_abdf !=nil {return _fd .Wrap (_abdf ,_bece ,"\u0064e\u0066\u0061\u0075\u006c\u0074\u0020\u0070\u0061\u0067\u0065\u0020p\u0069\u0078\u0065\u006c\u0020\u0076\u0061\u006c\u0075\u0065");};_begd =0;if _cgd ._egfb {_begd =1;
};if _abdf =_agcgb .WriteBit (_begd );_abdf !=nil {return _fd .Wrap (_abdf ,_bece ,"\u0063\u006f\u006e\u0074ai\u006e\u0073\u0020\u0072\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074");};_begd =0;if _cgd .IsLossless {_begd =1;};if _abdf =_agcgb .WriteBit (_begd );
_abdf !=nil {return _fd .Wrap (_abdf ,_bece ,"p\u0061\u0067\u0065\u0020\u0069\u0073 \u0065\u0076\u0065\u006e\u0074\u0075\u0061\u006c\u006cy\u0020\u006c\u006fs\u0073l\u0065\u0073\u0073");};return nil ;};func (_eeea *SymbolDictionary )decodeNewSymbols (_fecg ,_ggee uint32 ,_cbbe *_fe .Bitmap ,_fgad ,_ecaad int32 )error {if _eeea ._cdbb ==nil {_eeea ._cdbb =_eec (_eeea ._fafe ,nil );
if _eeea ._cdab ==nil {var _dccd error ;_eeea ._cdab ,_dccd =_e .New (_eeea ._fafe );if _dccd !=nil {return _dccd ;};};if _eeea ._fabe ==nil {_eeea ._fabe =_e .NewStats (65536,1);};};_eeea ._cdbb .setParameters (_eeea ._fabe ,_eeea ._cdab ,_eeea .SdrTemplate ,_fecg ,_ggee ,_cbbe ,_fgad ,_ecaad ,false ,_eeea .SdrATX ,_eeea .SdrATY );
return _eeea .addSymbol (_eeea ._cdbb );};type SegmentEncoder interface{Encode (_cagc _ga .BinaryWriter )(_ddef int ,_fedb error );};func (_gede *PageInformationSegment )encodeStripingInformation (_ggfg _ga .BinaryWriter )(_edg int ,_gabc error ){const _dace ="\u0065n\u0063\u006f\u0064\u0065S\u0074\u0072\u0069\u0070\u0069n\u0067I\u006ef\u006f\u0072\u006d\u0061\u0074\u0069\u006fn";
if !_gede .IsStripe {if _edg ,_gabc =_ggfg .Write ([]byte {0x00,0x00});_gabc !=nil {return 0,_fd .Wrap (_gabc ,_dace ,"n\u006f\u0020\u0073\u0074\u0072\u0069\u0070\u0069\u006e\u0067");};return _edg ,nil ;};_dfde :=make ([]byte ,2);_dc .BigEndian .PutUint16 (_dfde ,_gede .MaxStripeSize |1<<15);
if _edg ,_gabc =_ggfg .Write (_dfde );_gabc !=nil {return 0,_fd .Wrapf (_gabc ,_dace ,"\u0073\u0074\u0072i\u0070\u0069\u006e\u0067\u003a\u0020\u0025\u0064",_gede .MaxStripeSize );};return _edg ,nil ;};func (_dce *HalftoneRegion )computeX (_abed ,_ggdc int )int {return _dce .shiftAndFill (int (_dce .HGridX )+_abed *int (_dce .HRegionY )+_ggdc *int (_dce .HRegionX ));
};func (_ddea *GenericRegion )GetRegionInfo ()*RegionSegment {return _ddea .RegionSegment };type SymbolDictionary struct{_fafe *_ga .Reader ;SdrTemplate int8 ;SdTemplate int8 ;_aggd bool ;_abgg bool ;SdHuffAggInstanceSelection bool ;SdHuffBMSizeSelection int8 ;
SdHuffDecodeWidthSelection int8 ;SdHuffDecodeHeightSelection int8 ;UseRefinementAggregation bool ;IsHuffmanEncoded bool ;SdATX []int8 ;SdATY []int8 ;SdrATX []int8 ;SdrATY []int8 ;NumberOfExportedSymbols uint32 ;NumberOfNewSymbols uint32 ;Header *Header ;
_bdgf uint32 ;_dba []*_fe .Bitmap ;_ebec uint32 ;_cece []*_fe .Bitmap ;_bede _fc .Tabler ;_agbb _fc .Tabler ;_bbgg _fc .Tabler ;_cad _fc .Tabler ;_fdbf []*_fe .Bitmap ;_fcaa []*_fe .Bitmap ;_cdab *_e .Decoder ;_ded *TextRegion ;_ebge *GenericRegion ;_cdbb *GenericRefinementRegion ;
_fabe *_e .DecoderStats ;_ddda *_e .DecoderStats ;_cgbeb *_e .DecoderStats ;_fdg *_e .DecoderStats ;_eefbg *_e .DecoderStats ;_fcgg *_e .DecoderStats ;_fdbb *_e .DecoderStats ;_aaae *_e .DecoderStats ;_bceb *_e .DecoderStats ;_gfec int8 ;_efeee *_fe .Bitmaps ;
_adcd []int ;_gffgg map[int ]int ;_caee bool ;};func (_gcfc *SymbolDictionary )decodeThroughTextRegion (_dfgc ,_gdfc ,_cgaa uint32 )error {if _gcfc ._ded ==nil {_gcfc ._ded =_daace (_gcfc ._fafe ,nil );_gcfc ._ded .setContexts (_gcfc ._fabe ,_e .NewStats (512,1),_e .NewStats (512,1),_e .NewStats (512,1),_e .NewStats (512,1),_gcfc ._bceb ,_e .NewStats (512,1),_e .NewStats (512,1),_e .NewStats (512,1),_e .NewStats (512,1));
};if _gabd :=_gcfc .setSymbolsArray ();_gabd !=nil {return _gabd ;};_gcfc ._ded .setParameters (_gcfc ._cdab ,_gcfc .IsHuffmanEncoded ,true ,_dfgc ,_gdfc ,_cgaa ,1,_gcfc ._bdgf +_gcfc ._ebec ,0,0,0,1,0,0,0,0,0,0,0,0,0,_gcfc .SdrTemplate ,_gcfc .SdrATX ,_gcfc .SdrATY ,_gcfc ._fcaa ,_gcfc ._gfec );
return _gcfc .addSymbol (_gcfc ._ded );};func (_bgbfg *SymbolDictionary )decodeRefinedSymbol (_eabf ,_cegc uint32 )error {var (_gbfag int ;_adbg ,_cbea int32 ;);if _bgbfg .IsHuffmanEncoded {_fddc ,_gbc :=_bgbfg ._fafe .ReadBits (byte (_bgbfg ._gfec ));
if _gbc !=nil {return _gbc ;};_gbfag =int (_fddc );_cdbc ,_gbc :=_fc .GetStandardTable (15);if _gbc !=nil {return _gbc ;};_ebfa ,_gbc :=_cdbc .Decode (_bgbfg ._fafe );if _gbc !=nil {return _gbc ;};_adbg =int32 (_ebfa );_ebfa ,_gbc =_cdbc .Decode (_bgbfg ._fafe );
if _gbc !=nil {return _gbc ;};_cbea =int32 (_ebfa );_cdbc ,_gbc =_fc .GetStandardTable (1);if _gbc !=nil {return _gbc ;};if _ ,_gbc =_cdbc .Decode (_bgbfg ._fafe );_gbc !=nil {return _gbc ;};_bgbfg ._fafe .Align ();}else {_beea ,_aabb :=_bgbfg ._cdab .DecodeIAID (uint64 (_bgbfg ._gfec ),_bgbfg ._bceb );
if _aabb !=nil {return _aabb ;};_gbfag =int (_beea );_adbg ,_aabb =_bgbfg ._cdab .DecodeInt (_bgbfg ._fcgg );if _aabb !=nil {return _aabb ;};_cbea ,_aabb =_bgbfg ._cdab .DecodeInt (_bgbfg ._fdbb );if _aabb !=nil {return _aabb ;};};if _cdga :=_bgbfg .setSymbolsArray ();
_cdga !=nil {return _cdga ;};_cddg :=_bgbfg ._fcaa [_gbfag ];if _bagf :=_bgbfg .decodeNewSymbols (_eabf ,_cegc ,_cddg ,_adbg ,_cbea );_bagf !=nil {return _bagf ;};if _bgbfg .IsHuffmanEncoded {_bgbfg ._fafe .Align ();};return nil ;};func (_ddge *Header )parse (_cab Documenter ,_ccdbd *_ga .Reader ,_bffa int64 ,_aeee OrganizationType )(_efee error ){const _bgga ="\u0070\u0061\u0072s\u0065";
_gg .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u005b\u0050A\u0052\u0053\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _efee !=nil {_gg .Log .Trace ("\u005b\u0053\u0045GM\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045R\u005d[\u0050A\u0052S\u0045\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_efee );
}else {_gg .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052]\u005bP\u0041\u0052\u0053\u0045\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");};}();_ ,_efee =_ccdbd .Seek (_bffa ,_d .SeekStart );
if _efee !=nil {return _fd .Wrap (_efee ,_bgga ,"\u0073\u0065\u0065\u006b\u0020\u0073\u0074\u0061\u0072\u0074");};if _efee =_ddge .readSegmentNumber (_ccdbd );_efee !=nil {return _fd .Wrap (_efee ,_bgga ,"");};if _efee =_ddge .readHeaderFlags ();_efee !=nil {return _fd .Wrap (_efee ,_bgga ,"");
};var _dfbb uint64 ;_dfbb ,_efee =_ddge .readNumberOfReferredToSegments (_ccdbd );if _efee !=nil {return _fd .Wrap (_efee ,_bgga ,"");};_ddge .RTSNumbers ,_efee =_ddge .readReferredToSegmentNumbers (_ccdbd ,int (_dfbb ));if _efee !=nil {return _fd .Wrap (_efee ,_bgga ,"");
};_efee =_ddge .readSegmentPageAssociation (_cab ,_ccdbd ,_dfbb ,_ddge .RTSNumbers ...);if _efee !=nil {return _fd .Wrap (_efee ,_bgga ,"");};if _ddge .Type !=TEndOfFile {if _efee =_ddge .readSegmentDataLength (_ccdbd );_efee !=nil {return _fd .Wrap (_efee ,_bgga ,"");
};};_ddge .readDataStartOffset (_ccdbd ,_aeee );_ddge .readHeaderLength (_ccdbd ,_bffa );_gg .Log .Trace ("\u0025\u0073",_ddge );return nil ;};func (_dfba *TextRegion )decodeRdx ()(int64 ,error ){const _ggdbc ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064x";
if _dfba .IsHuffmanEncoded {if _dfba .SbHuffRDX ==3{if _dfba ._gbbfa ==nil {var (_cgf int ;_adca error ;);if _dfba .SbHuffFS ==3{_cgf ++;};if _dfba .SbHuffDS ==3{_cgf ++;};if _dfba .SbHuffDT ==3{_cgf ++;};if _dfba .SbHuffRDWidth ==3{_cgf ++;};if _dfba .SbHuffRDHeight ==3{_cgf ++;
};_dfba ._gbbfa ,_adca =_dfba .getUserTable (_cgf );if _adca !=nil {return 0,_fd .Wrap (_adca ,_ggdbc ,"");};};return _dfba ._gbbfa .Decode (_dfba ._gedf );};_effc ,_eabc :=_fc .GetStandardTable (14+int (_dfba .SbHuffRDX ));if _eabc !=nil {return 0,_fd .Wrap (_eabc ,_ggdbc ,"");
};return _effc .Decode (_dfba ._gedf );};_bega ,_ecgdd :=_dfba ._gcaa .DecodeInt (_dfba ._cddd );if _ecgdd !=nil {return 0,_fd .Wrap (_ecgdd ,_ggdbc ,"");};return int64 (_bega ),nil ;};func (_gagb *Header )String ()string {_eeb :=&_ac .Builder {};_eeb .WriteString ("\u000a[\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045A\u0044\u0045\u0052\u005d\u000a");
_eeb .WriteString (_da .Sprintf ("\t\u002d\u0020\u0053\u0065gm\u0065n\u0074\u004e\u0075\u006d\u0062e\u0072\u003a\u0020\u0025\u0076\u000a",_gagb .SegmentNumber ));_eeb .WriteString (_da .Sprintf ("\u0009\u002d\u0020T\u0079\u0070\u0065\u003a\u0020\u0025\u0076\u000a",_gagb .Type ));
_eeb .WriteString (_da .Sprintf ("\u0009-\u0020R\u0065\u0074\u0061\u0069\u006eF\u006c\u0061g\u003a\u0020\u0025\u0076\u000a",_gagb .RetainFlag ));_eeb .WriteString (_da .Sprintf ("\u0009\u002d\u0020Pa\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_gagb .PageAssociation ));
_eeb .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0050\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074i\u006fn\u0046\u0069\u0065\u006c\u0064\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_gagb .PageAssociationFieldSize ));
_eeb .WriteString ("\u0009-\u0020R\u0054\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u0053\u003a\u000a");for _ ,_ecef :=range _gagb .RTSNumbers {_eeb .WriteString (_da .Sprintf ("\u0009\t\u002d\u0020\u0025\u0064\u000a",_ecef ));};_eeb .WriteString (_da .Sprintf ("\t\u002d \u0048\u0065\u0061\u0064\u0065\u0072\u004c\u0065n\u0067\u0074\u0068\u003a %\u0076\u000a",_gagb .HeaderLength ));
_eeb .WriteString (_da .Sprintf ("\u0009-\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061L\u0065n\u0067\u0074\u0068\u003a\u0020\u0025\u0076\n",_gagb .SegmentDataLength ));_eeb .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074D\u0061\u0074\u0061\u0053\u0074\u0061\u0072t\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0076\u000a",_gagb .SegmentDataStartOffset ));
return _eeb .String ();};func (_ba *GenericRefinementRegion )getGrReference ()(*_fe .Bitmap ,error ){segments :=_ba ._bc .RTSegments ;if len (segments )==0{return nil ,_g .New ("\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0065\u0078is\u0074\u0073");
};_ade ,_aab :=segments [0].GetSegmentData ();if _aab !=nil {return nil ,_aab ;};_bfb ,_ee :=_ade .(Regioner );if !_ee {return nil ,_da .Errorf ("\u0072\u0065\u0066\u0065\u0072r\u0065\u0064\u0020\u0074\u006f\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_ade );
};return _bfb .GetRegionBitmap ();};type Documenter interface{GetPage (int )(Pager ,error );GetGlobalSegment (int )(*Header ,error );};func (_badd *SymbolDictionary )decodeDifferenceWidth ()(int64 ,error ){if _badd .IsHuffmanEncoded {switch _badd .SdHuffDecodeWidthSelection {case 0:_adac ,_feb :=_fc .GetStandardTable (2);
if _feb !=nil {return 0,_feb ;};return _adac .Decode (_badd ._fafe );case 1:_eagfc ,_ccec :=_fc .GetStandardTable (3);if _ccec !=nil {return 0,_ccec ;};return _eagfc .Decode (_badd ._fafe );case 3:if _badd ._agbb ==nil {var _caead int ;if _badd .SdHuffDecodeHeightSelection ==3{_caead ++;
};_bgdf ,_adcdb :=_badd .getUserTable (_caead );if _adcdb !=nil {return 0,_adcdb ;};_badd ._agbb =_bgdf ;};return _badd ._agbb .Decode (_badd ._fafe );};}else {_acfbb ,_cfdg :=_badd ._cdab .DecodeInt (_badd ._cgbeb );if _cfdg !=nil {return 0,_cfdg ;};return int64 (_acfbb ),nil ;
};return 0,nil ;};func (_gadd *SymbolDictionary )setAtPixels ()error {if _gadd .IsHuffmanEncoded {return nil ;};_fafbd :=1;if _gadd .SdTemplate ==0{_fafbd =4;};if _baefff :=_gadd .readAtPixels (_fafbd );_baefff !=nil {return _baefff ;};return nil ;};func (_bdd *GenericRefinementRegion )readAtPixels ()error {_bdd .GrAtX =make ([]int8 ,2);
_bdd .GrAtY =make ([]int8 ,2);_fad ,_dbga :=_bdd ._ge .ReadByte ();if _dbga !=nil {return _dbga ;};_bdd .GrAtX [0]=int8 (_fad );_fad ,_dbga =_bdd ._ge .ReadByte ();if _dbga !=nil {return _dbga ;};_bdd .GrAtY [0]=int8 (_fad );_fad ,_dbga =_bdd ._ge .ReadByte ();
if _dbga !=nil {return _dbga ;};_bdd .GrAtX [1]=int8 (_fad );_fad ,_dbga =_bdd ._ge .ReadByte ();if _dbga !=nil {return _dbga ;};_bdd .GrAtY [1]=int8 (_fad );return nil ;};func (_aedg *HalftoneRegion )GetRegionBitmap ()(*_fe .Bitmap ,error ){if _aedg .HalftoneRegionBitmap !=nil {return _aedg .HalftoneRegionBitmap ,nil ;
};var _dgfg error ;_aedg .HalftoneRegionBitmap =_fe .New (int (_aedg .RegionSegment .BitmapWidth ),int (_aedg .RegionSegment .BitmapHeight ));if _aedg .Patterns ==nil ||len (_aedg .Patterns )==0{_aedg .Patterns ,_dgfg =_aedg .GetPatterns ();if _dgfg !=nil {return nil ,_dgfg ;
};};if _aedg .HDefaultPixel ==1{_aedg .HalftoneRegionBitmap .SetDefaultPixel ();};_cgbe :=_c .Ceil (_c .Log (float64 (len (_aedg .Patterns )))/_c .Log (2));_cfd :=int (_cgbe );var _agcgg [][]int ;_agcgg ,_dgfg =_aedg .grayScaleDecoding (_cfd );if _dgfg !=nil {return nil ,_dgfg ;
};if _dgfg =_aedg .renderPattern (_agcgg );_dgfg !=nil {return nil ,_dgfg ;};return _aedg .HalftoneRegionBitmap ,nil ;};func (_aacg *Header )subInputReader ()(*_ga .Reader ,error ){_ccca :=int (_aacg .SegmentDataLength );if _aacg .SegmentDataLength ==_c .MaxInt32 {_ccca =-1;
};return _aacg .Reader .NewPartialReader (int (_aacg .SegmentDataStartOffset ),_ccca ,false );};type Header struct{SegmentNumber uint32 ;Type Type ;RetainFlag bool ;PageAssociation int ;PageAssociationFieldSize bool ;RTSegments []*Header ;HeaderLength int64 ;
SegmentDataLength uint64 ;SegmentDataStartOffset uint64 ;Reader *_ga .Reader ;SegmentData Segmenter ;RTSNumbers []int ;RetainBits []uint8 ;};func (_baag *GenericRegion )overrideAtTemplate2 (_dacg ,_ggff ,_efac ,_cdd ,_baf int )int {_dacg &=0x3FB;if _baag .GBAtY [0]==0&&_baag .GBAtX [0]>=-int8 (_baf ){_dacg |=(_cdd >>uint (7-(int8 (_baf )+_baag .GBAtX [0]))&0x1)<<2;
}else {_dacg |=int (_baag .getPixel (_ggff +int (_baag .GBAtX [0]),_efac +int (_baag .GBAtY [0])))<<2;};return _dacg ;};func _eec (_bfec *_ga .Reader ,_ecgd *Header )*GenericRefinementRegion {return &GenericRefinementRegion {_ge :_bfec ,RegionInfo :NewRegionSegment (_bfec ),_bc :_ecgd ,_fbe :&template0 {},_ef :&template1 {}};
};func (_fa *GenericRefinementRegion )decodeTypicalPredictedLine (_fca ,_fef ,_afb ,_gaa ,_efc ,_ddf int )error {_faf :=_fca -int (_fa .ReferenceDY );_cea :=_fa .ReferenceBitmap .GetByteIndex (0,_faf );_dcg :=_fa .RegionBitmap .GetByteIndex (0,_fca );var _acb error ;
switch _fa .TemplateID {case 0:_acb =_fa .decodeTypicalPredictedLineTemplate0 (_fca ,_fef ,_afb ,_gaa ,_efc ,_ddf ,_dcg ,_faf ,_cea );case 1:_acb =_fa .decodeTypicalPredictedLineTemplate1 (_fca ,_fef ,_afb ,_gaa ,_efc ,_ddf ,_dcg ,_faf ,_cea );};return _acb ;
};const (ORandom OrganizationType =iota ;OSequential ;);func (_fdba *SymbolDictionary )readNumberOfNewSymbols ()error {_afag ,_fcgb :=_fdba ._fafe .ReadBits (32);if _fcgb !=nil {return _fcgb ;};_fdba .NumberOfNewSymbols =uint32 (_afag &_c .MaxUint32 );
return nil ;};func (_cdcb *TextRegion )InitEncode (globalSymbolsMap ,localSymbolsMap map[int ]int ,comps []int ,inLL *_fe .Points ,symbols *_fe .Bitmaps ,classIDs *_aa .IntSlice ,boxes *_fe .Boxes ,width ,height ,symBits int ){_cdcb .RegionInfo =&RegionSegment {BitmapWidth :uint32 (width ),BitmapHeight :uint32 (height )};
_cdcb ._cbed =globalSymbolsMap ;_cdcb ._gfcdb =localSymbolsMap ;_cdcb ._dcba =comps ;_cdcb ._dafd =inLL ;_cdcb ._gec =symbols ;_cdcb ._cffe =classIDs ;_cdcb ._cdgc =boxes ;_cdcb ._agcc =symBits ;};func (_cffb *SymbolDictionary )setSymbolsArray ()error {if _cffb ._dba ==nil {if _faaa :=_cffb .retrieveImportSymbols ();
_faaa !=nil {return _faaa ;};};if _cffb ._fcaa ==nil {_cffb ._fcaa =append (_cffb ._fcaa ,_cffb ._dba ...);};return nil ;};func (_gade *RegionSegment )readCombinationOperator ()error {_cdcg ,_bage :=_gade ._gfga .ReadBits (3);if _bage !=nil {return _bage ;
};_gade .CombinaionOperator =_fe .CombinationOperator (_cdcg &0xF);return nil ;};func (_gdea Type )String ()string {switch _gdea {case TSymbolDictionary :return "\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079";
case TIntermediateTextRegion :return "\u0049n\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020T\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateTextRegion :return "I\u006d\u006d\u0065\u0064ia\u0074e\u0020\u0054\u0065\u0078\u0074 \u0052\u0065\u0067\u0069\u006f\u006e";
case TImmediateLosslessTextRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020L\u006f\u0073\u0073\u006c\u0065\u0073\u0073 \u0054\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TPatternDictionary :return "\u0050a\u0074t\u0065\u0072\u006e\u0020\u0044i\u0063\u0074i\u006f\u006e\u0061\u0072\u0079";
case TIntermediateHalftoneRegion :return "\u0049\u006e\u0074\u0065r\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0048\u0061l\u0066t\u006f\u006e\u0065\u0020\u0052\u0065\u0067i\u006f\u006e";case TImmediateHalftoneRegion :return "\u0049m\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u0048\u0061l\u0066t\u006fn\u0065\u0020\u0052\u0065\u0067\u0069\u006fn";
case TImmediateLosslessHalftoneRegion :return "\u0049\u006d\u006ded\u0069\u0061\u0074\u0065\u0020\u004c\u006f\u0073\u0073l\u0065s\u0073 \u0048a\u006c\u0066\u0074\u006f\u006e\u0065\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TIntermediateGenericRegion :return "I\u006e\u0074\u0065\u0072\u006d\u0065d\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020R\u0065g\u0069\u006f\u006e";
case TImmediateGenericRegion :return "\u0049m\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006ee\u0072\u0069\u0063\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessGenericRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u004c\u006f\u0073\u0073\u006c\u0065\u0073\u0073\u0020\u0047e\u006e\u0065\u0072\u0069\u0063\u0020\u0052e\u0067\u0069\u006f\u006e";
case TIntermediateGenericRefinementRegion :return "\u0049\u006e\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0020\u0052\u0065\u0066i\u006e\u0065\u006d\u0065\u006et\u0020\u0052e\u0067\u0069\u006f\u006e";
case TImmediateGenericRefinementRegion :return "I\u006d\u006d\u0065\u0064\u0069\u0061t\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020\u0052\u0065\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020\u0052\u0065\u0067\u0069o\u006e";case TImmediateLosslessGenericRefinementRegion :return "\u0049m\u006d\u0065d\u0069\u0061\u0074\u0065 \u004c\u006f\u0073s\u006c\u0065\u0073\u0073\u0020\u0047\u0065\u006e\u0065ri\u0063\u0020\u0052e\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020R\u0065\u0067i\u006f\u006e";
case TPageInformation :return "\u0050\u0061g\u0065\u0020\u0049n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e";case TEndOfPage :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0050\u0061\u0067\u0065";case TEndOfStrip :return "\u0045\u006e\u0064 \u004f\u0066\u0020\u0053\u0074\u0072\u0069\u0070";
case TEndOfFile :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0046\u0069\u006c\u0065";case TProfiles :return "\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0073";case TTables :return "\u0054\u0061\u0062\u006c\u0065\u0073";case TExtension :return "\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn";
case TBitmap :return "\u0042\u0069\u0074\u006d\u0061\u0070";};return "I\u006ev\u0061\u006c\u0069\u0064\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0020Ki\u006e\u0064";};func (_abga *PageInformationSegment )readRequiresAuxiliaryBuffer ()error {_dfce ,_ddfe :=_abga ._ecaa .ReadBit ();
if _ddfe !=nil {return _ddfe ;};if _dfce ==1{_abga ._ecad =true ;};return nil ;};func (_gdcf *TextRegion )decodeRdy ()(int64 ,error ){const _dafg ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064y";if _gdcf .IsHuffmanEncoded {if _gdcf .SbHuffRDY ==3{if _gdcf ._ffga ==nil {var (_dbbb int ;
_egbf error ;);if _gdcf .SbHuffFS ==3{_dbbb ++;};if _gdcf .SbHuffDS ==3{_dbbb ++;};if _gdcf .SbHuffDT ==3{_dbbb ++;};if _gdcf .SbHuffRDWidth ==3{_dbbb ++;};if _gdcf .SbHuffRDHeight ==3{_dbbb ++;};if _gdcf .SbHuffRDX ==3{_dbbb ++;};_gdcf ._ffga ,_egbf =_gdcf .getUserTable (_dbbb );
if _egbf !=nil {return 0,_fd .Wrap (_egbf ,_dafg ,"");};};return _gdcf ._ffga .Decode (_gdcf ._gedf );};_gace ,_eacde :=_fc .GetStandardTable (14+int (_gdcf .SbHuffRDY ));if _eacde !=nil {return 0,_eacde ;};return _gace .Decode (_gdcf ._gedf );};_daec ,_gfggc :=_gdcf ._gcaa .DecodeInt (_gdcf ._fgee );
if _gfggc !=nil {return 0,_fd .Wrap (_gfggc ,_dafg ,"");};return int64 (_daec ),nil ;};func (_eebdc *TextRegion )decodeRdh ()(int64 ,error ){const _agcbc ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064h";if _eebdc .IsHuffmanEncoded {if _eebdc .SbHuffRDHeight ==3{if _eebdc ._abee ==nil {var (_bcdcb int ;
_dceb error ;);if _eebdc .SbHuffFS ==3{_bcdcb ++;};if _eebdc .SbHuffDS ==3{_bcdcb ++;};if _eebdc .SbHuffDT ==3{_bcdcb ++;};if _eebdc .SbHuffRDWidth ==3{_bcdcb ++;};_eebdc ._abee ,_dceb =_eebdc .getUserTable (_bcdcb );if _dceb !=nil {return 0,_fd .Wrap (_dceb ,_agcbc ,"");
};};return _eebdc ._abee .Decode (_eebdc ._gedf );};_cbfba ,_ecab :=_fc .GetStandardTable (14+int (_eebdc .SbHuffRDHeight ));if _ecab !=nil {return 0,_fd .Wrap (_ecab ,_agcbc ,"");};return _cbfba .Decode (_eebdc ._gedf );};_fgfa ,_fdaf :=_eebdc ._gcaa .DecodeInt (_eebdc ._gcffb );
if _fdaf !=nil {return 0,_fd .Wrap (_fdaf ,_agcbc ,"");};return int64 (_fgfa ),nil ;};func (_daeb *SymbolDictionary )getSbSymCodeLen ()int8 {_dbeg :=int8 (_c .Ceil (_c .Log (float64 (_daeb ._bdgf +_daeb .NumberOfNewSymbols ))/_c .Log (2)));if _daeb .IsHuffmanEncoded &&_dbeg < 1{return 1;
};return _dbeg ;};func (_gdeb *PatternDictionary )GetDictionary ()([]*_fe .Bitmap ,error ){if _gdeb .Patterns !=nil {return _gdeb .Patterns ,nil ;};if !_gdeb .IsMMREncoded {_gdeb .setGbAtPixels ();};_effd :=NewGenericRegion (_gdeb ._aeeaa );_effd .setParametersMMR (_gdeb .IsMMREncoded ,_gdeb .DataOffset ,_gdeb .DataLength ,uint32 (_gdeb .HdpHeight ),(_gdeb .GrayMax +1)*uint32 (_gdeb .HdpWidth ),_gdeb .HDTemplate ,false ,false ,_gdeb .GBAtX ,_gdeb .GBAtY );
_ebaa ,_bbec :=_effd .GetRegionBitmap ();if _bbec !=nil {return nil ,_bbec ;};if _bbec =_gdeb .extractPatterns (_ebaa );_bbec !=nil {return nil ,_bbec ;};return _gdeb .Patterns ,nil ;};func (_fbdf *Header )readSegmentNumber (_acfa *_ga .Reader )error {const _bcfc ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";
_cbca :=make ([]byte ,4);_ ,_gaee :=_acfa .Read (_cbca );if _gaee !=nil {return _fd .Wrap (_gaee ,_bcfc ,"");};_fbdf .SegmentNumber =_dc .BigEndian .Uint32 (_cbca );return nil ;};func (_fdcd *TableSegment )HtPS ()int32 {return _fdcd ._gedgc };func (_dfcf *SymbolDictionary )retrieveImportSymbols ()error {for _ ,_dcdcg :=range _dfcf .Header .RTSegments {if _dcdcg .Type ==0{_abgf ,_cfca :=_dcdcg .GetSegmentData ();
if _cfca !=nil {return _cfca ;};_aacb ,_eeca :=_abgf .(*SymbolDictionary );if !_eeca {return _da .Errorf ("\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0044\u0061\u0074a\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u003a\u0020%\u0054",_abgf );
};_eabg ,_cfca :=_aacb .GetDictionary ();if _cfca !=nil {return _da .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064 \u0073\u0065\u0067m\u0065\u006e\u0074 \u0077\u0069t\u0068\u0020\u0069\u006e\u0064\u0065x\u003a %\u0064\u0020\u0067\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0073",_dcdcg .SegmentNumber ,_cfca .Error ());
};_dfcf ._dba =append (_dfcf ._dba ,_eabg ...);_dfcf ._bdgf +=_aacb .NumberOfExportedSymbols ;};};return nil ;};func (_adcg *PageInformationSegment )readIsLossless ()error {_gdbg ,_efff :=_adcg ._ecaa .ReadBit ();if _efff !=nil {return _efff ;};if _gdbg ==1{_adcg .IsLossless =true ;
};return nil ;};func (_acfeg *GenericRegion )decodeTemplate1 (_gfe ,_fgc ,_ddga int ,_age ,_gbg int )(_adeg error ){const _beae ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0031";var (_acbe ,_gacc int ;_aagb ,_bdde int ;
_cfae byte ;_gea ,_fbgb int ;);if _gfe >=1{_cfae ,_adeg =_acfeg .Bitmap .GetByte (_gbg );if _adeg !=nil {return _fd .Wrap (_adeg ,_beae ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_aagb =int (_cfae );};if _gfe >=2{_cfae ,_adeg =_acfeg .Bitmap .GetByte (_gbg -_acfeg .Bitmap .RowStride );
if _adeg !=nil {return _fd .Wrap (_adeg ,_beae ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_bdde =int (_cfae )<<5;};_acbe =((_aagb >>1)&0x1f8)|((_bdde >>1)&0x1e00);for _ceg :=0;_ceg < _ddga ;_ceg =_gea {var (_becg byte ;_ecbe int ;);_gea =_ceg +8;
if _bcg :=_fgc -_ceg ;_bcg > 8{_ecbe =8;}else {_ecbe =_bcg ;};if _gfe > 0{_aagb <<=8;if _gea < _fgc {_cfae ,_adeg =_acfeg .Bitmap .GetByte (_gbg +1);if _adeg !=nil {return _fd .Wrap (_adeg ,_beae ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_aagb |=int (_cfae );
};};if _gfe > 1{_bdde <<=8;if _gea < _fgc {_cfae ,_adeg =_acfeg .Bitmap .GetByte (_gbg -_acfeg .Bitmap .RowStride +1);if _adeg !=nil {return _fd .Wrap (_adeg ,_beae ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_bdde |=int (_cfae )<<5;};};for _ggce :=0;
_ggce < _ecbe ;_ggce ++{if _acfeg ._ggdg {_gacc =_acfeg .overrideAtTemplate1 (_acbe ,_ceg +_ggce ,_gfe ,int (_becg ),_ggce );_acfeg ._agc .SetIndex (int32 (_gacc ));}else {_acfeg ._agc .SetIndex (int32 (_acbe ));};_fbgb ,_adeg =_acfeg ._bda .DecodeBit (_acfeg ._agc );
if _adeg !=nil {return _fd .Wrap (_adeg ,_beae ,"");};_becg |=byte (_fbgb )<<uint (7-_ggce );_gffg :=uint (8-_ggce );_acbe =((_acbe &0xefb)<<1)|_fbgb |((_aagb >>_gffg )&0x8)|((_bdde >>_gffg )&0x200);};if _ged :=_acfeg .Bitmap .SetByte (_age ,_becg );_ged !=nil {return _fd .Wrap (_ged ,_beae ,"");
};_age ++;_gbg ++;};return nil ;};type OrganizationType uint8 ;func (_eded *TextRegion )initSymbols ()error {const _fgbeg ="i\u006e\u0069\u0074\u0053\u0079\u006d\u0062\u006f\u006c\u0073";for _ ,_cgdc :=range _eded .Header .RTSegments {if _cgdc ==nil {return _fd .Error (_fgbeg ,"\u006e\u0069\u006c\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020pr\u006f\u0076\u0069\u0064\u0065\u0064 \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0074\u0065\u0078\u0074\u0020\u0072\u0065g\u0069\u006f\u006e\u0020\u0053\u0079\u006d\u0062o\u006c\u0073");
};if _cgdc .Type ==0{_eeac ,_ededd :=_cgdc .GetSegmentData ();if _ededd !=nil {return _fd .Wrap (_ededd ,_fgbeg ,"");};_eeeag ,_eebcg :=_eeac .(*SymbolDictionary );if !_eebcg {return _fd .Error (_fgbeg ,"\u0072e\u0066\u0065r\u0072\u0065\u0064 \u0054\u006f\u0020\u0053\u0065\u0067\u006de\u006e\u0074\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_eeeag ._bceb =_eded ._ffe ;_bfbcg ,_ededd :=_eeeag .GetDictionary ();if _ededd !=nil {return _fd .Wrap (_ededd ,_fgbeg ,"");};_eded .Symbols =append (_eded .Symbols ,_bfbcg ...);};};_eded .NumberOfSymbols =uint32 (len (_eded .Symbols ));return nil ;
};func (_aed *GenericRegion )writeGBAtPixels (_egd _ga .BinaryWriter )(_dfc int ,_cdca error ){const _ace ="\u0077r\u0069t\u0065\u0047\u0042\u0041\u0074\u0050\u0069\u0078\u0065\u006c\u0073";if _aed .UseMMR {return 0,nil ;};_ccf :=1;if _aed .GBTemplate ==0{_ccf =4;
}else if _aed .UseExtTemplates {_ccf =12;};if len (_aed .GBAtX )!=_ccf {return 0,_fd .Errorf (_ace ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0058\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};if len (_aed .GBAtY )!=_ccf {return 0,_fd .Errorf (_ace ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0059\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};for _afge :=0;_afge < _ccf ;_afge ++{if _cdca =_egd .WriteByte (byte (_aed .GBAtX [_afge ]));_cdca !=nil {return _dfc ,_fd .Wrap (_cdca ,_ace ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0058");};_dfc ++;if _cdca =_egd .WriteByte (byte (_aed .GBAtY [_afge ]));
_cdca !=nil {return _dfc ,_fd .Wrap (_cdca ,_ace ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0059");};_dfc ++;};return _dfc ,nil ;};func (_fdbd *SymbolDictionary )huffDecodeRefAggNInst ()(int64 ,error ){if !_fdbd .SdHuffAggInstanceSelection {_dbba ,_gfgad :=_fc .GetStandardTable (1);
if _gfgad !=nil {return 0,_gfgad ;};return _dbba .Decode (_fdbd ._fafe );};if _fdbd ._cad ==nil {var (_bdff int ;_beec error ;);if _fdbd .SdHuffDecodeHeightSelection ==3{_bdff ++;};if _fdbd .SdHuffDecodeWidthSelection ==3{_bdff ++;};if _fdbd .SdHuffBMSizeSelection ==3{_bdff ++;
};_fdbd ._cad ,_beec =_fdbd .getUserTable (_bdff );if _beec !=nil {return 0,_beec ;};};return _fdbd ._cad .Decode (_fdbd ._fafe );};func (_gfcfc *SymbolDictionary )setExportedSymbols (_bgcd []int ){for _abcfa :=uint32 (0);_abcfa < _gfcfc ._bdgf +_gfcfc .NumberOfNewSymbols ;
_abcfa ++{if _bgcd [_abcfa ]==1{var _dcgf *_fe .Bitmap ;if _abcfa < _gfcfc ._bdgf {_dcgf =_gfcfc ._dba [_abcfa ];}else {_dcgf =_gfcfc ._cece [_abcfa -_gfcfc ._bdgf ];};_gg .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u002d\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u0020\u0041\u0064\u0064 E\u0078\u0070\u006fr\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027%\u0073\u0027",_dcgf );
_gfcfc ._fdbf =append (_gfcfc ._fdbf ,_dcgf );};};};func (_edf *GenericRefinementRegion )getPixel (_fdda *_fe .Bitmap ,_cfc ,_fgb int )int {if _cfc < 0||_cfc >=_fdda .Width {return 0;};if _fgb < 0||_fgb >=_fdda .Height {return 0;};if _fdda .GetPixel (_cfc ,_fgb ){return 1;
};return 0;};func (_fagbf *PatternDictionary )Init (h *Header ,r *_ga .Reader )error {_fagbf ._aeeaa =r ;return _fagbf .parseHeader ();};func (_ffgf *Header )readHeaderFlags ()error {const _aad ="\u0072e\u0061d\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006c\u0061\u0067\u0073";
_fdfec ,_ccg :=_ffgf .Reader .ReadBit ();if _ccg !=nil {return _fd .Wrap (_ccg ,_aad ,"r\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067");};if _fdfec !=0{_ffgf .RetainFlag =true ;};_fdfec ,_ccg =_ffgf .Reader .ReadBit ();if _ccg !=nil {return _fd .Wrap (_ccg ,_aad ,"\u0070\u0061g\u0065\u0020\u0061s\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e");
};if _fdfec !=0{_ffgf .PageAssociationFieldSize =true ;};_gcgd ,_ccg :=_ffgf .Reader .ReadBits (6);if _ccg !=nil {return _fd .Wrap (_ccg ,_aad ,"\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065");};_ffgf .Type =Type (int (_gcgd ));return nil ;
};func (_dafgf *TextRegion )encodeSymbols (_dgda _ga .BinaryWriter )(_cfac int ,_badg error ){const _bacb ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";_dgcg :=make ([]byte ,4);_dc .BigEndian .PutUint32 (_dgcg ,_dafgf .NumberOfSymbols );
if _cfac ,_badg =_dgda .Write (_dgcg );_badg !=nil {return _cfac ,_fd .Wrap (_badg ,_bacb ,"\u004e\u0075\u006dbe\u0072\u004f\u0066\u0053\u0079\u006d\u0062\u006f\u006c\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073");};_def ,_badg :=_fe .NewClassedPoints (_dafgf ._dafd ,_dafgf ._dcba );
if _badg !=nil {return 0,_fd .Wrap (_badg ,_bacb ,"");};var _dageg ,_aga int ;_bfegf :=_dg .New ();_bfegf .Init ();if _badg =_bfegf .EncodeInteger (_dg .IADT ,0);_badg !=nil {return _cfac ,_fd .Wrap (_badg ,_bacb ,"\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0020\u0044\u0054");
};_cbbeb ,_badg :=_def .GroupByY ();if _badg !=nil {return 0,_fd .Wrap (_badg ,_bacb ,"");};for _ ,_gadc :=range _cbbeb {_ecgcd :=int (_gadc .YAtIndex (0));_dfge :=_ecgcd -_dageg ;if _badg =_bfegf .EncodeInteger (_dg .IADT ,_dfge );_badg !=nil {return _cfac ,_fd .Wrap (_badg ,_bacb ,"");
};var _febf int ;for _efcad ,_ecaf :=range _gadc .IntSlice {switch _efcad {case 0:_cfeaa :=int (_gadc .XAtIndex (_efcad ))-_aga ;if _badg =_bfegf .EncodeInteger (_dg .IAFS ,_cfeaa );_badg !=nil {return _cfac ,_fd .Wrap (_badg ,_bacb ,"");};_aga +=_cfeaa ;
_febf =_aga ;default:_bace :=int (_gadc .XAtIndex (_efcad ))-_febf ;if _badg =_bfegf .EncodeInteger (_dg .IADS ,_bace );_badg !=nil {return _cfac ,_fd .Wrap (_badg ,_bacb ,"");};_febf +=_bace ;};_fggg ,_bcfb :=_dafgf ._cffe .Get (_ecaf );if _bcfb !=nil {return _cfac ,_fd .Wrap (_bcfb ,_bacb ,"");
};_aeff ,_gbfb :=_dafgf ._cbed [_fggg ];if !_gbfb {_aeff ,_gbfb =_dafgf ._gfcdb [_fggg ];if !_gbfb {return _cfac ,_fd .Errorf (_bacb ,"\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027\u0025d\u0027\u0020\u0069s\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064 \u0069\u006e\u0020\u0067\u006cob\u0061\u006c\u0020\u0061\u006e\u0064\u0020\u006c\u006f\u0063\u0061\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020\u006d\u0061\u0070",_fggg );
};};if _bcfb =_bfegf .EncodeIAID (_dafgf ._agcc ,_aeff );_bcfb !=nil {return _cfac ,_fd .Wrap (_bcfb ,_bacb ,"");};};if _badg =_bfegf .EncodeOOB (_dg .IADS );_badg !=nil {return _cfac ,_fd .Wrap (_badg ,_bacb ,"");};};_bfegf .Final ();_cfeb ,_badg :=_bfegf .WriteTo (_dgda );
if _badg !=nil {return _cfac ,_fd .Wrap (_badg ,_bacb ,"");};_cfac +=int (_cfeb );return _cfac ,nil ;};func (_efg *HalftoneRegion )GetPatterns ()([]*_fe .Bitmap ,error ){var (_fba []*_fe .Bitmap ;_dafe error ;);for _ ,_bcgb :=range _efg ._bed .RTSegments {var _bfa Segmenter ;
_bfa ,_dafe =_bcgb .GetSegmentData ();if _dafe !=nil {_gg .Log .Debug ("\u0047e\u0074\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061 \u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025v",_dafe );return nil ,_dafe ;};_aacf ,_cfee :=_bfa .(*PatternDictionary );
if !_cfee {_dafe =_da .Errorf ("\u0072e\u006c\u0061t\u0065\u0064\u0020\u0073e\u0067\u006d\u0065n\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0070at\u0074\u0065\u0072n\u0020\u0064i\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u003a \u0025\u0054",_bfa );
return nil ,_dafe ;};var _fbeg []*_fe .Bitmap ;_fbeg ,_dafe =_aacf .GetDictionary ();if _dafe !=nil {_gg .Log .Debug ("\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_dafe );
return nil ,_dafe ;};_fba =append (_fba ,_fbeg ...);};return _fba ,nil ;};type GenericRefinementRegion struct{_fbe templater ;_ef templater ;_ge *_ga .Reader ;_bc *Header ;RegionInfo *RegionSegment ;IsTPGROn bool ;TemplateID int8 ;Template templater ;GrAtX []int8 ;
GrAtY []int8 ;RegionBitmap *_fe .Bitmap ;ReferenceBitmap *_fe .Bitmap ;ReferenceDX int32 ;ReferenceDY int32 ;_cc *_e .Decoder ;_bg *_e .DecoderStats ;_ad bool ;_ce []bool ;};func (_dcec *HalftoneRegion )grayScaleDecoding (_dfed int )([][]int ,error ){var (_bbbb []int8 ;
_gcbg []int8 ;);if !_dcec .IsMMREncoded {_bbbb =make ([]int8 ,4);_gcbg =make ([]int8 ,4);if _dcec .HTemplate <=1{_bbbb [0]=3;}else if _dcec .HTemplate >=2{_bbbb [0]=2;};_gcbg [0]=-1;_bbbb [1]=-3;_gcbg [1]=-1;_bbbb [2]=2;_gcbg [2]=-2;_bbbb [3]=-2;_gcbg [3]=-2;
};_gdf :=make ([]*_fe .Bitmap ,_dfed );_egee :=NewGenericRegion (_dcec ._bbba );_egee .setParametersMMR (_dcec .IsMMREncoded ,_dcec .DataOffset ,_dcec .DataLength ,_dcec .HGridHeight ,_dcec .HGridWidth ,_dcec .HTemplate ,false ,_dcec .HSkipEnabled ,_bbbb ,_gcbg );
_dfb :=_dfed -1;var _fagf error ;_gdf [_dfb ],_fagf =_egee .GetRegionBitmap ();if _fagf !=nil {return nil ,_fagf ;};for _dfb > 0{_dfb --;_egee .Bitmap =nil ;_gdf [_dfb ],_fagf =_egee .GetRegionBitmap ();if _fagf !=nil {return nil ,_fagf ;};if _fagf =_dcec .combineGrayscalePlanes (_gdf ,_dfb );
_fagf !=nil {return nil ,_fagf ;};};return _dcec .computeGrayScalePlanes (_gdf ,_dfed );};func (_fgge *PageInformationSegment )parseHeader ()(_efed error ){_gg .Log .Trace ("\u005b\u0050\u0061\u0067\u0065I\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067m\u0065\u006e\u0074\u005d\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u002e\u002e");
defer func (){var _gcf ="[\u0050\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072m\u0061\u0074\u0069\u006f\u006e\u0053\u0065gm\u0065\u006e\u0074\u005d \u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065ad\u0065\u0072 \u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064";
if _efed !=nil {_gcf +="\u0020\u0077\u0069t\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u0020"+_efed .Error ();}else {_gcf +="\u0020\u0073\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079";};_gg .Log .Trace (_gcf );}();if _efed =_fgge .readWidthAndHeight ();
_efed !=nil {return _efed ;};if _efed =_fgge .readResolution ();_efed !=nil {return _efed ;};_ ,_efed =_fgge ._ecaa .ReadBit ();if _efed !=nil {return _efed ;};if _efed =_fgge .readCombinationOperatorOverrideAllowed ();_efed !=nil {return _efed ;};if _efed =_fgge .readRequiresAuxiliaryBuffer ();
_efed !=nil {return _efed ;};if _efed =_fgge .readCombinationOperator ();_efed !=nil {return _efed ;};if _efed =_fgge .readDefaultPixelValue ();_efed !=nil {return _efed ;};if _efed =_fgge .readContainsRefinement ();_efed !=nil {return _efed ;};if _efed =_fgge .readIsLossless ();
_efed !=nil {return _efed ;};if _efed =_fgge .readIsStriped ();_efed !=nil {return _efed ;};if _efed =_fgge .readMaxStripeSize ();_efed !=nil {return _efed ;};if _efed =_fgge .checkInput ();_efed !=nil {return _efed ;};_gg .Log .Trace ("\u0025\u0073",_fgge );
return nil ;};func (_bbcf *GenericRefinementRegion )setParameters (_daa *_e .DecoderStats ,_eac *_e .Decoder ,_bgd int8 ,_cdc ,_bad uint32 ,_dea *_fe .Bitmap ,_fffd ,_eacc int32 ,_aag bool ,_adbf []int8 ,_abc []int8 ){_gg .Log .Trace ("\u005b\u0047\u0045NE\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052E\u0047I\u004fN\u005d \u0073\u0065\u0074\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073");
if _daa !=nil {_bbcf ._bg =_daa ;};if _eac !=nil {_bbcf ._cc =_eac ;};_bbcf .TemplateID =_bgd ;_bbcf .RegionInfo .BitmapWidth =_cdc ;_bbcf .RegionInfo .BitmapHeight =_bad ;_bbcf .ReferenceBitmap =_dea ;_bbcf .ReferenceDX =_fffd ;_bbcf .ReferenceDY =_eacc ;
_bbcf .IsTPGROn =_aag ;_bbcf .GrAtX =_adbf ;_bbcf .GrAtY =_abc ;_bbcf .RegionBitmap =nil ;_gg .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073 f\u0069\u006ei\u0073\u0068\u0065\u0064\u002e\u0020\u0025\u0073",_bbcf );
};func (_bdfc *TextRegion )GetRegionBitmap ()(*_fe .Bitmap ,error ){if _bdfc .RegionBitmap !=nil {return _bdfc .RegionBitmap ,nil ;};if !_bdfc .IsHuffmanEncoded {if _edfd :=_bdfc .setCodingStatistics ();_edfd !=nil {return nil ,_edfd ;};};if _eege :=_bdfc .createRegionBitmap ();
_eege !=nil {return nil ,_eege ;};if _dffe :=_bdfc .decodeSymbolInstances ();_dffe !=nil {return nil ,_dffe ;};return _bdfc .RegionBitmap ,nil ;};func (_acgce *SymbolDictionary )readRegionFlags ()error {var (_fgbg uint64 ;_dage int ;);_ ,_bfgde :=_acgce ._fafe .ReadBits (3);
if _bfgde !=nil {return _bfgde ;};_dage ,_bfgde =_acgce ._fafe .ReadBit ();if _bfgde !=nil {return _bfgde ;};_acgce .SdrTemplate =int8 (_dage );_fgbg ,_bfgde =_acgce ._fafe .ReadBits (2);if _bfgde !=nil {return _bfgde ;};_acgce .SdTemplate =int8 (_fgbg &0xf);
_dage ,_bfgde =_acgce ._fafe .ReadBit ();if _bfgde !=nil {return _bfgde ;};if _dage ==1{_acgce ._aggd =true ;};_dage ,_bfgde =_acgce ._fafe .ReadBit ();if _bfgde !=nil {return _bfgde ;};if _dage ==1{_acgce ._abgg =true ;};_dage ,_bfgde =_acgce ._fafe .ReadBit ();
if _bfgde !=nil {return _bfgde ;};if _dage ==1{_acgce .SdHuffAggInstanceSelection =true ;};_dage ,_bfgde =_acgce ._fafe .ReadBit ();if _bfgde !=nil {return _bfgde ;};_acgce .SdHuffBMSizeSelection =int8 (_dage );_fgbg ,_bfgde =_acgce ._fafe .ReadBits (2);
if _bfgde !=nil {return _bfgde ;};_acgce .SdHuffDecodeWidthSelection =int8 (_fgbg &0xf);_fgbg ,_bfgde =_acgce ._fafe .ReadBits (2);if _bfgde !=nil {return _bfgde ;};_acgce .SdHuffDecodeHeightSelection =int8 (_fgbg &0xf);_dage ,_bfgde =_acgce ._fafe .ReadBit ();
if _bfgde !=nil {return _bfgde ;};if _dage ==1{_acgce .UseRefinementAggregation =true ;};_dage ,_bfgde =_acgce ._fafe .ReadBit ();if _bfgde !=nil {return _bfgde ;};if _dage ==1{_acgce .IsHuffmanEncoded =true ;};return nil ;};func (_bfdg *TextRegion )Encode (w _ga .BinaryWriter )(_ddcd int ,_aaaeb error ){const _dcfg ="\u0054\u0065\u0078\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u002e\u0045n\u0063\u006f\u0064\u0065";
if _ddcd ,_aaaeb =_bfdg .RegionInfo .Encode (w );_aaaeb !=nil {return _ddcd ,_fd .Wrap (_aaaeb ,_dcfg ,"");};var _gdag int ;if _gdag ,_aaaeb =_bfdg .encodeFlags (w );_aaaeb !=nil {return _ddcd ,_fd .Wrap (_aaaeb ,_dcfg ,"");};_ddcd +=_gdag ;if _gdag ,_aaaeb =_bfdg .encodeSymbols (w );
_aaaeb !=nil {return _ddcd ,_fd .Wrap (_aaaeb ,_dcfg ,"");};_ddcd +=_gdag ;return _ddcd ,nil ;};func (_bac *GenericRegion )overrideAtTemplate0b (_acba ,_daaf ,_cgga ,_eggd ,_bcfe ,_bffd int )int {if _bac .GBAtOverride [0]{_acba &=0xFFFD;if _bac .GBAtY [0]==0&&_bac .GBAtX [0]>=-int8 (_bcfe ){_acba |=(_eggd >>uint (int8 (_bffd )-_bac .GBAtX [0]&0x1))<<1;
}else {_acba |=int (_bac .getPixel (_daaf +int (_bac .GBAtX [0]),_cgga +int (_bac .GBAtY [0])))<<1;};};if _bac .GBAtOverride [1]{_acba &=0xDFFF;if _bac .GBAtY [1]==0&&_bac .GBAtX [1]>=-int8 (_bcfe ){_acba |=(_eggd >>uint (int8 (_bffd )-_bac .GBAtX [1]&0x1))<<13;
}else {_acba |=int (_bac .getPixel (_daaf +int (_bac .GBAtX [1]),_cgga +int (_bac .GBAtY [1])))<<13;};};if _bac .GBAtOverride [2]{_acba &=0xFDFF;if _bac .GBAtY [2]==0&&_bac .GBAtX [2]>=-int8 (_bcfe ){_acba |=(_eggd >>uint (int8 (_bffd )-_bac .GBAtX [2]&0x1))<<9;
}else {_acba |=int (_bac .getPixel (_daaf +int (_bac .GBAtX [2]),_cgga +int (_bac .GBAtY [2])))<<9;};};if _bac .GBAtOverride [3]{_acba &=0xBFFF;if _bac .GBAtY [3]==0&&_bac .GBAtX [3]>=-int8 (_bcfe ){_acba |=(_eggd >>uint (int8 (_bffd )-_bac .GBAtX [3]&0x1))<<14;
}else {_acba |=int (_bac .getPixel (_daaf +int (_bac .GBAtX [3]),_cgga +int (_bac .GBAtY [3])))<<14;};};if _bac .GBAtOverride [4]{_acba &=0xEFFF;if _bac .GBAtY [4]==0&&_bac .GBAtX [4]>=-int8 (_bcfe ){_acba |=(_eggd >>uint (int8 (_bffd )-_bac .GBAtX [4]&0x1))<<12;
}else {_acba |=int (_bac .getPixel (_daaf +int (_bac .GBAtX [4]),_cgga +int (_bac .GBAtY [4])))<<12;};};if _bac .GBAtOverride [5]{_acba &=0xFFDF;if _bac .GBAtY [5]==0&&_bac .GBAtX [5]>=-int8 (_bcfe ){_acba |=(_eggd >>uint (int8 (_bffd )-_bac .GBAtX [5]&0x1))<<5;
}else {_acba |=int (_bac .getPixel (_daaf +int (_bac .GBAtX [5]),_cgga +int (_bac .GBAtY [5])))<<5;};};if _bac .GBAtOverride [6]{_acba &=0xFFFB;if _bac .GBAtY [6]==0&&_bac .GBAtX [6]>=-int8 (_bcfe ){_acba |=(_eggd >>uint (int8 (_bffd )-_bac .GBAtX [6]&0x1))<<2;
}else {_acba |=int (_bac .getPixel (_daaf +int (_bac .GBAtX [6]),_cgga +int (_bac .GBAtY [6])))<<2;};};if _bac .GBAtOverride [7]{_acba &=0xFFF7;if _bac .GBAtY [7]==0&&_bac .GBAtX [7]>=-int8 (_bcfe ){_acba |=(_eggd >>uint (int8 (_bffd )-_bac .GBAtX [7]&0x1))<<3;
}else {_acba |=int (_bac .getPixel (_daaf +int (_bac .GBAtX [7]),_cgga +int (_bac .GBAtY [7])))<<3;};};if _bac .GBAtOverride [8]{_acba &=0xF7FF;if _bac .GBAtY [8]==0&&_bac .GBAtX [8]>=-int8 (_bcfe ){_acba |=(_eggd >>uint (int8 (_bffd )-_bac .GBAtX [8]&0x1))<<11;
}else {_acba |=int (_bac .getPixel (_daaf +int (_bac .GBAtX [8]),_cgga +int (_bac .GBAtY [8])))<<11;};};if _bac .GBAtOverride [9]{_acba &=0xFFEF;if _bac .GBAtY [9]==0&&_bac .GBAtX [9]>=-int8 (_bcfe ){_acba |=(_eggd >>uint (int8 (_bffd )-_bac .GBAtX [9]&0x1))<<4;
}else {_acba |=int (_bac .getPixel (_daaf +int (_bac .GBAtX [9]),_cgga +int (_bac .GBAtY [9])))<<4;};};if _bac .GBAtOverride [10]{_acba &=0x7FFF;if _bac .GBAtY [10]==0&&_bac .GBAtX [10]>=-int8 (_bcfe ){_acba |=(_eggd >>uint (int8 (_bffd )-_bac .GBAtX [10]&0x1))<<15;
}else {_acba |=int (_bac .getPixel (_daaf +int (_bac .GBAtX [10]),_cgga +int (_bac .GBAtY [10])))<<15;};};if _bac .GBAtOverride [11]{_acba &=0xFDFF;if _bac .GBAtY [11]==0&&_bac .GBAtX [11]>=-int8 (_bcfe ){_acba |=(_eggd >>uint (int8 (_bffd )-_bac .GBAtX [11]&0x1))<<10;
}else {_acba |=int (_bac .getPixel (_daaf +int (_bac .GBAtX [11]),_cgga +int (_bac .GBAtY [11])))<<10;};};return _acba ;};func (_agca *TextRegion )readAmountOfSymbolInstances ()error {_dfcd ,_adage :=_agca ._gedf .ReadBits (32);if _adage !=nil {return _adage ;
};_agca .NumberOfSymbolInstances =uint32 (_dfcd &_c .MaxUint32 );_baaa :=_agca .RegionInfo .BitmapWidth *_agca .RegionInfo .BitmapHeight ;if _baaa < _agca .NumberOfSymbolInstances {_gg .Log .Debug ("\u004c\u0069\u006d\u0069t\u0069\u006e\u0067\u0020t\u0068\u0065\u0020n\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020d\u0065\u0063\u006f\u0064e\u0064\u0020\u0073\u0079m\u0062\u006f\u006c\u0020\u0069n\u0073\u0074\u0061\u006e\u0063\u0065\u0073 \u0074\u006f\u0020\u006f\u006ee\u0020\u0070\u0065\u0072\u0020\u0070\u0069\u0078\u0065l\u0020\u0028\u0020\u0025\u0064\u0020\u0069\u006e\u0073\u0074\u0065\u0061\u0064\u0020\u006f\u0066\u0020\u0025\u0064\u0029",_baaa ,_agca .NumberOfSymbolInstances );
_agca .NumberOfSymbolInstances =_baaa ;};return nil ;};func (_eagc *PageInformationSegment )readDefaultPixelValue ()error {_fecc ,_ebe :=_eagc ._ecaa .ReadBit ();if _ebe !=nil {return _ebe ;};_eagc .DefaultPixelValue =uint8 (_fecc &0xf);return nil ;};var _ templater =&template0 {};
func (_acc *PageInformationSegment )readCombinationOperator ()error {_eaba ,_cfaec :=_acc ._ecaa .ReadBits (2);if _cfaec !=nil {return _cfaec ;};_acc ._bdcd =_fe .CombinationOperator (int (_eaba ));return nil ;};func (_dcab *HalftoneRegion )Init (hd *Header ,r *_ga .Reader )error {_dcab ._bbba =r ;
_dcab ._bed =hd ;_dcab .RegionSegment =NewRegionSegment (r );return _dcab .parseHeader ();};func (_dcdce *PatternDictionary )checkInput ()error {if _dcdce .HdpHeight < 1||_dcdce .HdpWidth < 1{return _g .New ("in\u0076\u0061l\u0069\u0064\u0020\u0048\u0065\u0061\u0064\u0065\u0072 \u0056\u0061\u006c\u0075\u0065\u003a\u0020\u0057\u0069\u0064\u0074\u0068\u002f\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020g\u0072e\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020z\u0065\u0072o");
};if _dcdce .IsMMREncoded {if _dcdce .HDTemplate !=0{_gg .Log .Debug ("\u0076\u0061\u0072\u0069\u0061\u0062\u006c\u0065\u0020\u0048\u0044\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e \u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030");
};};return nil ;};func (_fbde *Header )Encode (w _ga .BinaryWriter )(_bde int ,_eecf error ){const _cgea ="\u0048\u0065\u0061d\u0065\u0072\u002e\u0057\u0072\u0069\u0074\u0065";var _fcag _ga .BinaryWriter ;_gg .Log .Trace ("\u005b\u0053\u0045G\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045\u0052\u005d[\u0045\u004e\u0043\u004f\u0044\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");
defer func (){if _eecf !=nil {_gg .Log .Trace ("[\u0053\u0045\u0047\u004d\u0045\u004eT\u002d\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0045\u004e\u0043\u004f\u0044E\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020%\u0076",_eecf );}else {_gg .Log .Trace ("\u005b\u0053\u0045\u0047ME\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0025\u0076",_fbde );
_gg .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045N\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u005b\u0045\u004e\u0043O\u0044\u0045\u005d\u0020\u0046\u0069\u006ei\u0073\u0068\u0065\u0064");};}();w .FinishByte ();if _fbde .SegmentData !=nil {_fccd ,_fge :=_fbde .SegmentData .(SegmentEncoder );
if !_fge {return 0,_fd .Errorf (_cgea ,"\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0064\u006f\u0065s\u006e\u0027\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074 \u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0045\u006e\u0063\u006f\u0064er\u0020\u0069\u006e\u0074\u0065\u0072\u0066\u0061\u0063\u0065",_fbde .SegmentData );
};_fcag =_ga .BufferedMSB ();_bde ,_eecf =_fccd .Encode (_fcag );if _eecf !=nil {return 0,_fd .Wrap (_eecf ,_cgea ,"");};_fbde .SegmentDataLength =uint64 (_bde );};if _fbde .pageSize ()==4{_fbde .PageAssociationFieldSize =true ;};var _afba int ;_afba ,_eecf =_fbde .writeSegmentNumber (w );
if _eecf !=nil {return 0,_fd .Wrap (_eecf ,_cgea ,"");};_bde +=_afba ;if _eecf =_fbde .writeFlags (w );_eecf !=nil {return _bde ,_fd .Wrap (_eecf ,_cgea ,"");};_bde ++;_afba ,_eecf =_fbde .writeReferredToCount (w );if _eecf !=nil {return 0,_fd .Wrap (_eecf ,_cgea ,"");
};_bde +=_afba ;_afba ,_eecf =_fbde .writeReferredToSegments (w );if _eecf !=nil {return 0,_fd .Wrap (_eecf ,_cgea ,"");};_bde +=_afba ;_afba ,_eecf =_fbde .writeSegmentPageAssociation (w );if _eecf !=nil {return 0,_fd .Wrap (_eecf ,_cgea ,"");};_bde +=_afba ;
_afba ,_eecf =_fbde .writeSegmentDataLength (w );if _eecf !=nil {return 0,_fd .Wrap (_eecf ,_cgea ,"");};_bde +=_afba ;_fbde .HeaderLength =int64 (_bde )-int64 (_fbde .SegmentDataLength );if _fcag !=nil {if _ ,_eecf =w .Write (_fcag .Data ());_eecf !=nil {return _bde ,_fd .Wrap (_eecf ,_cgea ,"\u0077r\u0069t\u0065\u0020\u0073\u0065\u0067m\u0065\u006et\u0020\u0064\u0061\u0074\u0061");
};};return _bde ,nil ;};func (_addf *PageInformationSegment )readCombinationOperatorOverrideAllowed ()error {_fgdf ,_gadf :=_addf ._ecaa .ReadBit ();if _gadf !=nil {return _gadf ;};if _fgdf ==1{_addf ._aggf =true ;};return nil ;};func (_ccfe *SymbolDictionary )getSymbol (_beaa int )(*_fe .Bitmap ,error ){const _gfd ="\u0067e\u0074\u0053\u0079\u006d\u0062\u006fl";
_bgac ,_ebeg :=_ccfe ._efeee .GetBitmap (_ccfe ._adcd [_beaa ]);if _ebeg !=nil {return nil ,_fd .Wrap (_ebeg ,_gfd ,"\u0063\u0061n\u0027\u0074\u0020g\u0065\u0074\u0020\u0073\u0079\u006d\u0062\u006f\u006c");};return _bgac ,nil ;};func (_adbd *GenericRefinementRegion )decodeTemplate (_abad ,_gad ,_debf ,_dae ,_bec ,_cdb ,_fce ,_dbb ,_dde ,_eab int ,_cac templater )(_gcg error ){var (_bdbe ,_bgbf ,_efef ,_fab ,_aeg int16 ;
_baa ,_bbb ,_bab ,_dff int ;_afbf byte ;);if _dde >=1&&(_dde -1)< _adbd .ReferenceBitmap .Height {_afbf ,_gcg =_adbd .ReferenceBitmap .GetByte (_eab -_dae );if _gcg !=nil {return ;};_baa =int (_afbf );};if _dde >=0&&(_dde )< _adbd .ReferenceBitmap .Height {_afbf ,_gcg =_adbd .ReferenceBitmap .GetByte (_eab );
if _gcg !=nil {return ;};_bbb =int (_afbf );};if _dde >=-1&&(_dde +1)< _adbd .ReferenceBitmap .Height {_afbf ,_gcg =_adbd .ReferenceBitmap .GetByte (_eab +_dae );if _gcg !=nil {return ;};_bab =int (_afbf );};_eab ++;if _abad >=1{_afbf ,_gcg =_adbd .RegionBitmap .GetByte (_dbb -_debf );
if _gcg !=nil {return ;};_dff =int (_afbf );};_dbb ++;_gd :=_adbd .ReferenceDX %8;_gce :=6+_gd ;_dcd :=_eab %_dae ;if _gce >=0{if _gce < 8{_bdbe =int16 (_baa >>uint (_gce ))&0x07;};if _gce < 8{_bgbf =int16 (_bbb >>uint (_gce ))&0x07;};if _gce < 8{_efef =int16 (_bab >>uint (_gce ))&0x07;
};if _gce ==6&&_dcd > 1{if _dde >=1&&(_dde -1)< _adbd .ReferenceBitmap .Height {_afbf ,_gcg =_adbd .ReferenceBitmap .GetByte (_eab -_dae -2);if _gcg !=nil {return _gcg ;};_bdbe |=int16 (_afbf <<2)&0x04;};if _dde >=0&&_dde < _adbd .ReferenceBitmap .Height {_afbf ,_gcg =_adbd .ReferenceBitmap .GetByte (_eab -2);
if _gcg !=nil {return _gcg ;};_bgbf |=int16 (_afbf <<2)&0x04;};if _dde >=-1&&_dde +1< _adbd .ReferenceBitmap .Height {_afbf ,_gcg =_adbd .ReferenceBitmap .GetByte (_eab +_dae -2);if _gcg !=nil {return _gcg ;};_efef |=int16 (_afbf <<2)&0x04;};};if _gce ==0{_baa =0;
_bbb =0;_bab =0;if _dcd < _dae -1{if _dde >=1&&_dde -1< _adbd .ReferenceBitmap .Height {_afbf ,_gcg =_adbd .ReferenceBitmap .GetByte (_eab -_dae );if _gcg !=nil {return _gcg ;};_baa =int (_afbf );};if _dde >=0&&_dde < _adbd .ReferenceBitmap .Height {_afbf ,_gcg =_adbd .ReferenceBitmap .GetByte (_eab );
if _gcg !=nil {return _gcg ;};_bbb =int (_afbf );};if _dde >=-1&&_dde +1< _adbd .ReferenceBitmap .Height {_afbf ,_gcg =_adbd .ReferenceBitmap .GetByte (_eab +_dae );if _gcg !=nil {return _gcg ;};_bab =int (_afbf );};};_eab ++;};}else {_bdbe =int16 (_baa <<1)&0x07;
_bgbf =int16 (_bbb <<1)&0x07;_efef =int16 (_bab <<1)&0x07;_baa =0;_bbb =0;_bab =0;if _dcd < _dae -1{if _dde >=1&&_dde -1< _adbd .ReferenceBitmap .Height {_afbf ,_gcg =_adbd .ReferenceBitmap .GetByte (_eab -_dae );if _gcg !=nil {return _gcg ;};_baa =int (_afbf );
};if _dde >=0&&_dde < _adbd .ReferenceBitmap .Height {_afbf ,_gcg =_adbd .ReferenceBitmap .GetByte (_eab );if _gcg !=nil {return _gcg ;};_bbb =int (_afbf );};if _dde >=-1&&_dde +1< _adbd .ReferenceBitmap .Height {_afbf ,_gcg =_adbd .ReferenceBitmap .GetByte (_eab +_dae );
if _gcg !=nil {return _gcg ;};_bab =int (_afbf );};_eab ++;};_bdbe |=int16 ((_baa >>7)&0x07);_bgbf |=int16 ((_bbb >>7)&0x07);_efef |=int16 ((_bab >>7)&0x07);};_fab =int16 (_dff >>6);_aeg =0;_bcf :=(2-_gd )%8;_baa <<=uint (_bcf );_bbb <<=uint (_bcf );_bab <<=uint (_bcf );
_dff <<=2;var _eda int ;for _fbg :=0;_fbg < _gad ;_fbg ++{_bge :=_fbg &0x07;_fafc :=_cac .form (_bdbe ,_bgbf ,_efef ,_fab ,_aeg );if _adbd ._ad {_afbf ,_gcg =_adbd .RegionBitmap .GetByte (_adbd .RegionBitmap .GetByteIndex (_fbg ,_abad ));if _gcg !=nil {return _gcg ;
};_adbd ._bg .SetIndex (int32 (_adbd .overrideAtTemplate0 (int (_fafc ),_fbg ,_abad ,int (_afbf ),_bge )));}else {_adbd ._bg .SetIndex (int32 (_fafc ));};_eda ,_gcg =_adbd ._cc .DecodeBit (_adbd ._bg );if _gcg !=nil {return _gcg ;};if _gcg =_adbd .RegionBitmap .SetPixel (_fbg ,_abad ,byte (_eda ));
_gcg !=nil {return _gcg ;};_bdbe =((_bdbe <<1)|0x01&int16 (_baa >>7))&0x07;_bgbf =((_bgbf <<1)|0x01&int16 (_bbb >>7))&0x07;_efef =((_efef <<1)|0x01&int16 (_bab >>7))&0x07;_fab =((_fab <<1)|0x01&int16 (_dff >>7))&0x07;_aeg =int16 (_eda );if (_fbg -int (_adbd .ReferenceDX ))%8==5{_baa =0;
_bbb =0;_bab =0;if ((_fbg -int (_adbd .ReferenceDX ))/8)+1< _adbd .ReferenceBitmap .RowStride {if _dde >=1&&(_dde -1)< _adbd .ReferenceBitmap .Height {_afbf ,_gcg =_adbd .ReferenceBitmap .GetByte (_eab -_dae );if _gcg !=nil {return _gcg ;};_baa =int (_afbf );
};if _dde >=0&&_dde < _adbd .ReferenceBitmap .Height {_afbf ,_gcg =_adbd .ReferenceBitmap .GetByte (_eab );if _gcg !=nil {return _gcg ;};_bbb =int (_afbf );};if _dde >=-1&&(_dde +1)< _adbd .ReferenceBitmap .Height {_afbf ,_gcg =_adbd .ReferenceBitmap .GetByte (_eab +_dae );
if _gcg !=nil {return _gcg ;};_bab =int (_afbf );};};_eab ++;}else {_baa <<=1;_bbb <<=1;_bab <<=1;};if _bge ==5&&_abad >=1{if ((_fbg >>3)+1)>=_adbd .RegionBitmap .RowStride {_dff =0;}else {_afbf ,_gcg =_adbd .RegionBitmap .GetByte (_dbb -_debf );if _gcg !=nil {return _gcg ;
};_dff =int (_afbf );};_dbb ++;}else {_dff <<=1;};};return nil ;};func (_eaf *GenericRegion )getPixel (_aeag ,_cafc int )int8 {if _aeag < 0||_aeag >=_eaf .Bitmap .Width {return 0;};if _cafc < 0||_cafc >=_eaf .Bitmap .Height {return 0;};if _eaf .Bitmap .GetPixel (_aeag ,_cafc ){return 1;
};return 0;};type EndOfStripe struct{_ea *_ga .Reader ;_dgd int ;};func (_abf *GenericRefinementRegion )overrideAtTemplate0 (_bba ,_adc ,_ceb ,_bccd ,_bggd int )int {if _abf ._ce [0]{_bba &=0xfff7;if _abf .GrAtY [0]==0&&int (_abf .GrAtX [0])>=-_bggd {_bba |=(_bccd >>uint (7-(_bggd +int (_abf .GrAtX [0])))&0x1)<<3;
}else {_bba |=_abf .getPixel (_abf .RegionBitmap ,_adc +int (_abf .GrAtX [0]),_ceb +int (_abf .GrAtY [0]))<<3;};};if _abf ._ce [1]{_bba &=0xefff;if _abf .GrAtY [1]==0&&int (_abf .GrAtX [1])>=-_bggd {_bba |=(_bccd >>uint (7-(_bggd +int (_abf .GrAtX [1])))&0x1)<<12;
}else {_bba |=_abf .getPixel (_abf .ReferenceBitmap ,_adc +int (_abf .GrAtX [1]),_ceb +int (_abf .GrAtY [1]));};};return _bba ;};func (_edfe *Header )writeSegmentDataLength (_aceb _ga .BinaryWriter )(_afgd int ,_abec error ){_gegf :=make ([]byte ,4);_dc .BigEndian .PutUint32 (_gegf ,uint32 (_edfe .SegmentDataLength ));
if _afgd ,_abec =_aceb .Write (_gegf );_abec !=nil {return 0,_fd .Wrap (_abec ,"\u0048\u0065a\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u004c\u0065ng\u0074\u0068","");};return _afgd ,nil ;
};func (_ccbd *SymbolDictionary )readAtPixels (_bcde int )error {_ccbd .SdATX =make ([]int8 ,_bcde );_ccbd .SdATY =make ([]int8 ,_bcde );var (_fffe byte ;_afdc error ;);for _ebddg :=0;_ebddg < _bcde ;_ebddg ++{_fffe ,_afdc =_ccbd ._fafe .ReadByte ();if _afdc !=nil {return _afdc ;
};_ccbd .SdATX [_ebddg ]=int8 (_fffe );_fffe ,_afdc =_ccbd ._fafe .ReadByte ();if _afdc !=nil {return _afdc ;};_ccbd .SdATY [_ebddg ]=int8 (_fffe );};return nil ;};func (_gedg *HalftoneRegion )checkInput ()error {if _gedg .IsMMREncoded {if _gedg .HTemplate !=0{_gg .Log .Debug ("\u0048\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030",_gedg .HTemplate );
};if _gedg .HSkipEnabled {_gg .Log .Debug ("\u0048\u0053\u006b\u0069\u0070\u0045\u006e\u0061\u0062\u006c\u0065\u0064\u0020\u0030\u0020\u0025\u0076\u0020(\u0073\u0068\u006f\u0075\u006c\u0064\u0020c\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020v\u0061\u006c\u0075\u0065\u0020\u0066\u0061\u006c\u0073\u0065\u0029",_gedg .HSkipEnabled );
};};return nil ;};func (_fgaba *Header )readNumberOfReferredToSegments (_aada *_ga .Reader )(uint64 ,error ){const _cacd ="\u0072\u0065\u0061\u0064\u004e\u0075\u006d\u0062\u0065\u0072O\u0066\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
_dag ,_gcag :=_aada .ReadBits (3);if _gcag !=nil {return 0,_fd .Wrap (_gcag ,_cacd ,"\u0063\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0072\u0074\u0073");};_dag &=0xf;var _facc []byte ;if _dag <=4{_facc =make ([]byte ,5);for _ceff :=0;_ceff <=4;_ceff ++{_aeca ,_dbfe :=_aada .ReadBit ();
if _dbfe !=nil {return 0,_fd .Wrap (_dbfe ,_cacd ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_facc [_ceff ]=byte (_aeca );};}else {_dag ,_gcag =_aada .ReadBits (29);if _gcag !=nil {return 0,_gcag ;};_dag &=_c .MaxInt32 ;_bbab :=(_dag +8)>>3;
_bbab <<=3;_facc =make ([]byte ,_bbab );var _aca uint64 ;for _aca =0;_aca < _bbab ;_aca ++{_dadf ,_bdae :=_aada .ReadBit ();if _bdae !=nil {return 0,_fd .Wrap (_bdae ,_cacd ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_facc [_aca ]=byte (_dadf );
};};return _dag ,nil ;};func (_ecbd *SymbolDictionary )String ()string {_abac :=&_ac .Builder {};_abac .WriteString ("\n\u005b\u0053\u0059\u004dBO\u004c-\u0044\u0049\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u000a");_abac .WriteString (_da .Sprintf ("\u0009-\u0020S\u0064\u0072\u0054\u0065\u006dp\u006c\u0061t\u0065\u0020\u0025\u0076\u000a",_ecbd .SdrTemplate ));
_abac .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0025\u0076\u000a",_ecbd .SdTemplate ));_abac .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006eg\u0043\u006f\u006e\u0074\u0065\u0078\u0074R\u0065\u0074\u0061\u0069\u006e\u0065\u0064\u0020\u0025\u0076\u000a",_ecbd ._aggd ));
_abac .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074\u0065\u0078\u0074\u0055\u0073\u0065\u0064 \u0025\u0076\u000a",_ecbd ._abgg ));_abac .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_ecbd .SdHuffAggInstanceSelection ));
_abac .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0053d\u0048\u0075\u0066\u0066\u0042\u004d\u0053\u0069\u007a\u0065S\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020%\u0076\u000a",_ecbd .SdHuffBMSizeSelection ));_abac .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_ecbd .SdHuffDecodeWidthSelection ));
_abac .WriteString (_da .Sprintf ("\u0009\u002d\u0020Sd\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064e\u0048e\u0069g\u0068t\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_ecbd .SdHuffDecodeHeightSelection ));_abac .WriteString (_da .Sprintf ("\u0009\u002d\u0020U\u0073\u0065\u0052\u0065f\u0069\u006e\u0065\u006d\u0065\u006e\u0074A\u0067\u0067\u0072\u0065\u0067\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_ecbd .UseRefinementAggregation ));
_abac .WriteString (_da .Sprintf ("\u0009\u002d\u0020is\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045\u006e\u0063\u006f\u0064\u0065\u0064\u0020\u0025\u0076\u000a",_ecbd .IsHuffmanEncoded ));_abac .WriteString (_da .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_ecbd .SdATX ));
_abac .WriteString (_da .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_ecbd .SdATY ));_abac .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_ecbd .SdrATX ));
_abac .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_ecbd .SdrATY ));_abac .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u004e\u0075\u006d\u0062\u0065\u0072\u004ff\u0045\u0078\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_ecbd .NumberOfExportedSymbols ));
_abac .WriteString (_da .Sprintf ("\u0009-\u0020\u004e\u0075\u006db\u0065\u0072\u004f\u0066\u004ee\u0077S\u0079m\u0062\u006f\u006c\u0073\u0020\u0025\u0076\n",_ecbd .NumberOfNewSymbols ));_abac .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u004ff\u0049\u006d\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_ecbd ._bdgf ));
_abac .WriteString (_da .Sprintf ("\u0009\u002d \u006e\u0075\u006d\u0062\u0065\u0072\u004f\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0064\u0053\u0079\u006d\u0062\u006f\u006c\u0073 %\u0076\u000a",_ecbd ._ebec ));return _abac .String ();};func (_fcfd *TextRegion )decodeRI ()(int64 ,error ){if !_fcfd .UseRefinement {return 0,nil ;
};if _fcfd .IsHuffmanEncoded {_agege ,_dacc :=_fcfd ._gedf .ReadBit ();return int64 (_agege ),_dacc ;};_cdbbe ,_afdfb :=_fcfd ._gcaa .DecodeInt (_fcfd ._bbac );return int64 (_cdbbe ),_afdfb ;};func (_eed *TextRegion )decodeID ()(int64 ,error ){if _eed .IsHuffmanEncoded {if _eed ._adaac ==nil {_ecgc ,_acgdf :=_eed ._gedf .ReadBits (byte (_eed ._dbbc ));
return int64 (_ecgc ),_acgdf ;};return _eed ._adaac .Decode (_eed ._gedf );};return _eed ._gcaa .DecodeIAID (uint64 (_eed ._dbbc ),_eed ._ffe );};func (_fdc *SymbolDictionary )setRetainedCodingContexts (_eceef *SymbolDictionary ){_fdc ._cdab =_eceef ._cdab ;
_fdc .IsHuffmanEncoded =_eceef .IsHuffmanEncoded ;_fdc .UseRefinementAggregation =_eceef .UseRefinementAggregation ;_fdc .SdTemplate =_eceef .SdTemplate ;_fdc .SdrTemplate =_eceef .SdrTemplate ;_fdc .SdATX =_eceef .SdATX ;_fdc .SdATY =_eceef .SdATY ;_fdc .SdrATX =_eceef .SdrATX ;
_fdc .SdrATY =_eceef .SdrATY ;_fdc ._fabe =_eceef ._fabe ;};func (_eegg *TextRegion )blit (_dge *_fe .Bitmap ,_beeb int64 )error {if _eegg .IsTransposed ==0&&(_eegg .ReferenceCorner ==2||_eegg .ReferenceCorner ==3){_eegg ._feec +=int64 (_dge .Width -1);
}else if _eegg .IsTransposed ==1&&(_eegg .ReferenceCorner ==0||_eegg .ReferenceCorner ==2){_eegg ._feec +=int64 (_dge .Height -1);};_bddf :=_eegg ._feec ;if _eegg .IsTransposed ==1{_bddf ,_beeb =_beeb ,_bddf ;};switch _eegg .ReferenceCorner {case 0:_beeb -=int64 (_dge .Height -1);
case 2:_beeb -=int64 (_dge .Height -1);_bddf -=int64 (_dge .Width -1);case 3:_bddf -=int64 (_dge .Width -1);};_bcac :=_fe .Blit (_dge ,_eegg .RegionBitmap ,int (_bddf ),int (_beeb ),_eegg .CombinationOperator );if _bcac !=nil {return _bcac ;};if _eegg .IsTransposed ==0&&(_eegg .ReferenceCorner ==0||_eegg .ReferenceCorner ==1){_eegg ._feec +=int64 (_dge .Width -1);
};if _eegg .IsTransposed ==1&&(_eegg .ReferenceCorner ==1||_eegg .ReferenceCorner ==3){_eegg ._feec +=int64 (_dge .Height -1);};return nil ;};func (_ccff *Header )GetSegmentData ()(Segmenter ,error ){var _abadb Segmenter ;if _ccff .SegmentData !=nil {_abadb =_ccff .SegmentData ;
};if _abadb ==nil {_ceac ,_cedfg :=_edb [_ccff .Type ];if !_cedfg {return nil ,_da .Errorf ("\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0073\u002f\u0020\u0025\u0064\u0020\u0063\u0072e\u0061t\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e\u0020",_ccff .Type ,_ccff .Type );
};_abadb =_ceac ();_gg .Log .Trace ("\u005b\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u0020\u0061\u0074\u0020\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0030\u0034\u0058",_ccff .SegmentNumber ,_ccff .SegmentDataStartOffset );
_ccac ,_ceace :=_ccff .subInputReader ();if _ceace !=nil {return nil ,_ceace ;};if _beg :=_abadb .Init (_ccff ,_ccac );_beg !=nil {_gg .Log .Debug ("\u0049\u006e\u0069\u0074 \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076 \u0066o\u0072\u0020\u0074\u0079\u0070\u0065\u003a \u0025\u0054",_beg ,_abadb );
return nil ,_beg ;};_ccff .SegmentData =_abadb ;};return _abadb ,nil ;};func (_eega *SymbolDictionary )encodeNumSyms (_cegb _ga .BinaryWriter )(_acgd int ,_gged error ){const _aeec ="\u0065\u006e\u0063\u006f\u0064\u0065\u004e\u0075\u006d\u0053\u0079\u006d\u0073";
_dbad :=make ([]byte ,4);_dc .BigEndian .PutUint32 (_dbad ,_eega .NumberOfExportedSymbols );if _acgd ,_gged =_cegb .Write (_dbad );_gged !=nil {return _acgd ,_fd .Wrap (_gged ,_aeec ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};_dc .BigEndian .PutUint32 (_dbad ,_eega .NumberOfNewSymbols );_caef ,_gged :=_cegb .Write (_dbad );if _gged !=nil {return _acgd ,_fd .Wrap (_gged ,_aeec ,"n\u0065\u0077\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};return _acgd +_caef ,nil ;};func (_ceaa *SymbolDictionary )encodeRefinementATFlags (_egc _ga .BinaryWriter )(_dddf int ,_afc error ){const _bdef ="\u0065\u006e\u0063od\u0065\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0041\u0054\u0046\u006c\u0061\u0067\u0073";
if !_ceaa .UseRefinementAggregation ||_ceaa .SdrTemplate !=0{return 0,nil ;};for _bead :=0;_bead < 2;_bead ++{if _afc =_egc .WriteByte (byte (_ceaa .SdrATX [_bead ]));_afc !=nil {return _dddf ,_fd .Wrapf (_afc ,_bdef ,"\u0053\u0064\u0072\u0041\u0054\u0058\u005b\u0025\u0064\u005d",_bead );
};_dddf ++;if _afc =_egc .WriteByte (byte (_ceaa .SdrATY [_bead ]));_afc !=nil {return _dddf ,_fd .Wrapf (_afc ,_bdef ,"\u0053\u0064\u0072\u0041\u0054\u0059\u005b\u0025\u0064\u005d",_bead );};_dddf ++;};return _dddf ,nil ;};func NewGenericRegion (r *_ga .Reader )*GenericRegion {return &GenericRegion {RegionSegment :NewRegionSegment (r ),_dbe :r };
};func _daace (_dfaa *_ga .Reader ,_ggcd *Header )*TextRegion {_ceae :=&TextRegion {_gedf :_dfaa ,Header :_ggcd ,RegionInfo :NewRegionSegment (_dfaa )};return _ceae ;};func (_ggc *GenericRegion )decodeTemplate0b (_edde ,_bdgg ,_fde int ,_fgg ,_dcf int )(_aaga error ){const _aec ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0062";
var (_ccb ,_ebf int ;_bbdb ,_fcf int ;_cbeg byte ;_adae int ;);if _edde >=1{_cbeg ,_aaga =_ggc .Bitmap .GetByte (_dcf );if _aaga !=nil {return _fd .Wrap (_aaga ,_aec ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_bbdb =int (_cbeg );};if _edde >=2{_cbeg ,_aaga =_ggc .Bitmap .GetByte (_dcf -_ggc .Bitmap .RowStride );
if _aaga !=nil {return _fd .Wrap (_aaga ,_aec ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_fcf =int (_cbeg )<<6;};_ccb =(_bbdb &0xf0)|(_fcf &0x3800);for _cfa :=0;_cfa < _fde ;_cfa =_adae {var (_fcd byte ;_fbd int ;);_adae =_cfa +8;if _ggba :=_bdgg -_cfa ;
_ggba > 8{_fbd =8;}else {_fbd =_ggba ;};if _edde > 0{_bbdb <<=8;if _adae < _bdgg {_cbeg ,_aaga =_ggc .Bitmap .GetByte (_dcf +1);if _aaga !=nil {return _fd .Wrap (_aaga ,_aec ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_bbdb |=int (_cbeg );};
};if _edde > 1{_fcf <<=8;if _adae < _bdgg {_cbeg ,_aaga =_ggc .Bitmap .GetByte (_dcf -_ggc .Bitmap .RowStride +1);if _aaga !=nil {return _fd .Wrap (_aaga ,_aec ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_fcf |=int (_cbeg )<<6;};};for _cebf :=0;
_cebf < _fbd ;_cebf ++{_ggfb :=uint (7-_cebf );if _ggc ._ggdg {_ebf =_ggc .overrideAtTemplate0b (_ccb ,_cfa +_cebf ,_edde ,int (_fcd ),_cebf ,int (_ggfb ));_ggc ._agc .SetIndex (int32 (_ebf ));}else {_ggc ._agc .SetIndex (int32 (_ccb ));};var _gabe int ;
_gabe ,_aaga =_ggc ._bda .DecodeBit (_ggc ._agc );if _aaga !=nil {return _fd .Wrap (_aaga ,_aec ,"");};_fcd |=byte (_gabe <<_ggfb );_ccb =((_ccb &0x7bf7)<<1)|_gabe |((_bbdb >>_ggfb )&0x10)|((_fcf >>_ggfb )&0x800);};if _egb :=_ggc .Bitmap .SetByte (_fgg ,_fcd );
_egb !=nil {return _fd .Wrap (_egb ,_aec ,"");};_fgg ++;_dcf ++;};return nil ;};func (_dd *GenericRefinementRegion )GetRegionBitmap ()(*_fe .Bitmap ,error ){var _be error ;_gg .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _be !=nil {_gg .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0047\u0065\u0074R\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006dap\u0020\u0066a\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_be );
}else {_gg .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _dd .RegionBitmap !=nil {return _dd .RegionBitmap ,nil ;};_ccd :=0;if _dd .ReferenceBitmap ==nil {_dd .ReferenceBitmap ,_be =_dd .getGrReference ();if _be !=nil {return nil ,_be ;};};if _dd ._cc ==nil {_dd ._cc ,_be =_e .New (_dd ._ge );if _be !=nil {return nil ,_be ;
};};if _dd ._bg ==nil {_dd ._bg =_e .NewStats (8192,1);};_dd .RegionBitmap =_fe .New (int (_dd .RegionInfo .BitmapWidth ),int (_dd .RegionInfo .BitmapHeight ));if _dd .TemplateID ==0{if _be =_dd .updateOverride ();_be !=nil {return nil ,_be ;};};_fg :=(_dd .RegionBitmap .Width +7)&-8;
var _bfe int ;if _dd .IsTPGROn {_bfe =int (-_dd .ReferenceDY )*_dd .ReferenceBitmap .RowStride ;};_bef :=_bfe +1;for _db :=0;_db < _dd .RegionBitmap .Height ;_db ++{if _dd .IsTPGROn {_gae ,_ccdc :=_dd .decodeSLTP ();if _ccdc !=nil {return nil ,_ccdc ;};
_ccd ^=_gae ;};if _ccd ==0{_be =_dd .decodeOptimized (_db ,_dd .RegionBitmap .Width ,_dd .RegionBitmap .RowStride ,_dd .ReferenceBitmap .RowStride ,_fg ,_bfe ,_bef );if _be !=nil {return nil ,_be ;};}else {_be =_dd .decodeTypicalPredictedLine (_db ,_dd .RegionBitmap .Width ,_dd .RegionBitmap .RowStride ,_dd .ReferenceBitmap .RowStride ,_fg ,_bfe );
if _be !=nil {return nil ,_be ;};};};return _dd .RegionBitmap ,nil ;};func (_eaa *GenericRefinementRegion )parseHeader ()(_bcd error ){_gg .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0048e\u0061\u0064e\u0072\u002e\u002e\u002e");
_beaf :=_b .Now ();defer func (){if _bcd ==nil {_gg .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045G\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020h\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0069\u006e\u0069\u0073\u0068id\u0020\u0069\u006e\u003a\u0020\u0025\u0064\u0020\u006e\u0073",_b .Since (_beaf ).Nanoseconds ());
}else {_gg .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0068\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0073",_bcd );
};}();if _bcd =_eaa .RegionInfo .parseHeader ();_bcd !=nil {return _bcd ;};_ ,_bcd =_eaa ._ge .ReadBits (6);if _bcd !=nil {return _bcd ;};_eaa .IsTPGROn ,_bcd =_eaa ._ge .ReadBool ();if _bcd !=nil {return _bcd ;};var _dfe int ;_dfe ,_bcd =_eaa ._ge .ReadBit ();
if _bcd !=nil {return _bcd ;};_eaa .TemplateID =int8 (_dfe );switch _eaa .TemplateID {case 0:_eaa .Template =_eaa ._fbe ;if _bcd =_eaa .readAtPixels ();_bcd !=nil {return ;};case 1:_eaa .Template =_eaa ._ef ;};return nil ;};func (_gba *Header )readSegmentPageAssociation (_efbf Documenter ,_eca *_ga .Reader ,_gcab uint64 ,_aage ...int )(_gcdg error ){const _dgdd ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074P\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061t\u0069\u006f\u006e";
if !_gba .PageAssociationFieldSize {_dffge ,_cead :=_eca .ReadBits (8);if _cead !=nil {return _fd .Wrap (_cead ,_dgdd ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_gba .PageAssociation =int (_dffge &0xFF);}else {_gccf ,_gcge :=_eca .ReadBits (32);
if _gcge !=nil {return _fd .Wrap (_gcge ,_dgdd ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_gba .PageAssociation =int (_gccf &_c .MaxInt32 );};if _gcab ==0{return nil ;};if _gba .PageAssociation !=0{_ffge ,_eea :=_efbf .GetPage (_gba .PageAssociation );
if _eea !=nil {return _fd .Wrap (_eea ,_dgdd ,"\u0061s\u0073\u006f\u0063\u0069a\u0074\u0065\u0064\u0020\u0070a\u0067e\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006ed");};var _eba int ;for _gagf :=uint64 (0);_gagf < _gcab ;_gagf ++{_eba =_aage [_gagf ];
_gba .RTSegments [_gagf ],_eea =_ffge .GetSegment (_eba );if _eea !=nil {var _cfec error ;_gba .RTSegments [_gagf ],_cfec =_efbf .GetGlobalSegment (_eba );if _cfec !=nil {return _fd .Wrapf (_eea ,_dgdd ,"\u0072\u0065\u0066\u0065\u0072\u0065n\u0063\u0065\u0020s\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064\u0020\u0061\u0074\u0020pa\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0072\u0020\u0069\u006e\u0020\u0067\u006c\u006f\u0062\u0061\u006c\u0073",_gba .PageAssociation );
};};};return nil ;};for _cbfd :=uint64 (0);_cbfd < _gcab ;_cbfd ++{_gba .RTSegments [_cbfd ],_gcdg =_efbf .GetGlobalSegment (_aage [_cbfd ]);if _gcdg !=nil {return _fd .Wrapf (_gcdg ,_dgdd ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u003a\u0020\u0027\u0025d\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064",_aage [_cbfd ]);
};};return nil ;};func (_ccga *PatternDictionary )setGbAtPixels (){if _ccga .HDTemplate ==0{_ccga .GBAtX =make ([]int8 ,4);_ccga .GBAtY =make ([]int8 ,4);_ccga .GBAtX [0]=-int8 (_ccga .HdpWidth );_ccga .GBAtY [0]=0;_ccga .GBAtX [1]=-3;_ccga .GBAtY [1]=-1;
_ccga .GBAtX [2]=2;_ccga .GBAtY [2]=-2;_ccga .GBAtX [3]=-2;_ccga .GBAtY [3]=-2;}else {_ccga .GBAtX =[]int8 {-int8 (_ccga .HdpWidth )};_ccga .GBAtY =[]int8 {0};};};func (_bgc *PageInformationSegment )readContainsRefinement ()error {_ccbb ,_eaac :=_bgc ._ecaa .ReadBit ();
if _eaac !=nil {return _eaac ;};if _ccbb ==1{_bgc ._egfb =true ;};return nil ;};func (_baba *TextRegion )decodeDT ()(_afaa int64 ,_aecd error ){if _baba .IsHuffmanEncoded {if _baba .SbHuffDT ==3{_afaa ,_aecd =_baba ._bege .Decode (_baba ._gedf );if _aecd !=nil {return 0,_aecd ;
};}else {var _aebd _fc .Tabler ;_aebd ,_aecd =_fc .GetStandardTable (11+int (_baba .SbHuffDT ));if _aecd !=nil {return 0,_aecd ;};_afaa ,_aecd =_aebd .Decode (_baba ._gedf );if _aecd !=nil {return 0,_aecd ;};};}else {var _cafg int32 ;_cafg ,_aecd =_baba ._gcaa .DecodeInt (_baba ._cfea );
if _aecd !=nil {return ;};_afaa =int64 (_cafg );};_afaa *=int64 (_baba .SbStrips );return _afaa ,nil ;};func (_cgab *PageInformationSegment )readWidthAndHeight ()error {_fcdg ,_dege :=_cgab ._ecaa .ReadBits (32);if _dege !=nil {return _dege ;};_cgab .PageBMWidth =int (_fcdg &_c .MaxInt32 );
_fcdg ,_dege =_cgab ._ecaa .ReadBits (32);if _dege !=nil {return _dege ;};_cgab .PageBMHeight =int (_fcdg &_c .MaxInt32 );return nil ;};func (_cdcaf *Header )pageSize ()uint {if _cdcaf .PageAssociation <=255{return 1;};return 4;};func (_gdec *TextRegion )String ()string {_dcbac :=&_ac .Builder {};
_dcbac .WriteString ("\u000a[\u0054E\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u000a");_dcbac .WriteString (_gdec .RegionInfo .String ()+"\u000a");_dcbac .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0053br\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0025\u0076\u000a",_gdec .SbrTemplate ));
_dcbac .WriteString (_da .Sprintf ("\u0009-\u0020S\u0062\u0044\u0073\u004f\u0066f\u0073\u0065t\u003a\u0020\u0025\u0076\u000a",_gdec .SbDsOffset ));_dcbac .WriteString (_da .Sprintf ("\t\u002d \u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0050i\u0078\u0065\u006c\u003a %\u0076\u000a",_gdec .DefaultPixel ));
_dcbac .WriteString (_da .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0076\u000a",_gdec .CombinationOperator ));_dcbac .WriteString (_da .Sprintf ("\t\u002d \u0049\u0073\u0054\u0072\u0061\u006e\u0073\u0070o\u0073\u0065\u0064\u003a %\u0076\u000a",_gdec .IsTransposed ));
_dcbac .WriteString (_da .Sprintf ("\u0009\u002d\u0020Re\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0043\u006f\u0072\u006e\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_gdec .ReferenceCorner ));_dcbac .WriteString (_da .Sprintf ("\t\u002d\u0020\u0055\u0073eR\u0065f\u0069\u006e\u0065\u006d\u0065n\u0074\u003a\u0020\u0025\u0076\u000a",_gdec .UseRefinement ));
_dcbac .WriteString (_da .Sprintf ("\u0009-\u0020\u0049\u0073\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045n\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0076\u000a",_gdec .IsHuffmanEncoded ));if _gdec .IsHuffmanEncoded {_dcbac .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_gdec .SbHuffRSize ));
_dcbac .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0059:\u0020\u0025\u0076\u000a",_gdec .SbHuffRDY ));_dcbac .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0058:\u0020\u0025\u0076\u000a",_gdec .SbHuffRDX ));
_dcbac .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069\u0067\u0068\u0074\u003a\u0020\u0025v\u000a",_gdec .SbHuffRDHeight ));_dcbac .WriteString (_da .Sprintf ("\t\u002d\u0020\u0053\u0062Hu\u0066f\u0052\u0044\u0057\u0069\u0064t\u0068\u003a\u0020\u0025\u0076\u000a",_gdec .SbHuffRDWidth ));
_dcbac .WriteString (_da .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0054\u003a\u0020\u0025\u0076\u000a",_gdec .SbHuffDT ));_dcbac .WriteString (_da .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0053\u003a\u0020\u0025\u0076\u000a",_gdec .SbHuffDS ));
_dcbac .WriteString (_da .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0046\u0053\u003a\u0020\u0025\u0076\u000a",_gdec .SbHuffFS ));};_dcbac .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_gdec .SbrATX ));
_dcbac .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0059:\u0020\u0025\u0076\u000a",_gdec .SbrATY ));_dcbac .WriteString (_da .Sprintf ("\u0009\u002d\u0020N\u0075\u006d\u0062\u0065r\u004f\u0066\u0053\u0079\u006d\u0062\u006fl\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_gdec .NumberOfSymbolInstances ));
_dcbac .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_gdec .SbrATX ));return _dcbac .String ();};func (_fgf *GenericRegion )parseHeader ()(_fabg error ){_gg .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052I\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0050\u0061\u0072s\u0069\u006e\u0067\u0048\u0065\u0061\u0064e\u0072\u002e\u002e\u002e");
defer func (){if _fabg !=nil {_gg .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e]\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065r\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0077\u0069th\u0020\u0065\u0072\u0072\u006f\u0072\u002e\u0020\u0025\u0076",_fabg );
}else {_gg .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049C\u002d\u0052\u0045G\u0049\u004f\u004e]\u0020\u0050a\u0072\u0073\u0069\u006e\u0067\u0048e\u0061de\u0072\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0053\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079\u002e\u002e\u002e");
};}();var (_ead int ;_cca uint64 ;);if _fabg =_fgf .RegionSegment .parseHeader ();_fabg !=nil {return _fabg ;};if _ ,_fabg =_fgf ._dbe .ReadBits (3);_fabg !=nil {return _fabg ;};_ead ,_fabg =_fgf ._dbe .ReadBit ();if _fabg !=nil {return _fabg ;};if _ead ==1{_fgf .UseExtTemplates =true ;
};_ead ,_fabg =_fgf ._dbe .ReadBit ();if _fabg !=nil {return _fabg ;};if _ead ==1{_fgf .IsTPGDon =true ;};_cca ,_fabg =_fgf ._dbe .ReadBits (2);if _fabg !=nil {return _fabg ;};_fgf .GBTemplate =byte (_cca &0xf);_ead ,_fabg =_fgf ._dbe .ReadBit ();if _fabg !=nil {return _fabg ;
};if _ead ==1{_fgf .IsMMREncoded =true ;};if !_fgf .IsMMREncoded {_bca :=1;if _fgf .GBTemplate ==0{_bca =4;if _fgf .UseExtTemplates {_bca =12;};};if _fabg =_fgf .readGBAtPixels (_bca );_fabg !=nil {return _fabg ;};};if _fabg =_fgf .computeSegmentDataStructure ();
_fabg !=nil {return _fabg ;};_gg .Log .Trace ("\u0025\u0073",_fgf );return nil ;};type GenericRegion struct{_dbe *_ga .Reader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;UseExtTemplates bool ;
IsTPGDon bool ;GBTemplate byte ;IsMMREncoded bool ;UseMMR bool ;GBAtX []int8 ;GBAtY []int8 ;GBAtOverride []bool ;_ggdg bool ;Bitmap *_fe .Bitmap ;_bda *_e .Decoder ;_agc *_e .DecoderStats ;_efbd *_cf .Decoder ;};func (_ccfc *SymbolDictionary )decodeHeightClassCollectiveBitmap (_agcgd int64 ,_cbef ,_edga uint32 )(*_fe .Bitmap ,error ){if _agcgd ==0{_dfgf :=_fe .New (int (_edga ),int (_cbef ));
var (_gfgcd byte ;_cegea error ;);for _fead :=0;_fead < len (_dfgf .Data );_fead ++{_gfgcd ,_cegea =_ccfc ._fafe .ReadByte ();if _cegea !=nil {return nil ,_cegea ;};if _cegea =_dfgf .SetByte (_fead ,_gfgcd );_cegea !=nil {return nil ,_cegea ;};};return _dfgf ,nil ;
};if _ccfc ._ebge ==nil {_ccfc ._ebge =NewGenericRegion (_ccfc ._fafe );};_ccfc ._ebge .setParameters (true ,_ccfc ._fafe .AbsolutePosition (),_agcgd ,_cbef ,_edga );_ccacb ,_efbdb :=_ccfc ._ebge .GetRegionBitmap ();if _efbdb !=nil {return nil ,_efbdb ;
};return _ccacb ,nil ;};type TableSegment struct{_afdcc *_ga .Reader ;_ecde int32 ;_gedgc int32 ;_eebb int32 ;_ccbe int32 ;_edba int32 ;};func _fafb (_adfaf int )int {if _adfaf ==0{return 0;};_adfaf |=_adfaf >>1;_adfaf |=_adfaf >>2;_adfaf |=_adfaf >>4;
_adfaf |=_adfaf >>8;_adfaf |=_adfaf >>16;return (_adfaf +1)>>1;};func (_bdaf *PageInformationSegment )Size ()int {return 19};func (_gbb *template1 )form (_bfbc ,_aeeb ,_cef ,_edaf ,_fga int16 )int16 {return ((_bfbc &0x02)<<8)|(_aeeb <<6)|((_cef &0x03)<<4)|(_edaf <<1)|_fga ;
};func (_fdf *GenericRegion )GetRegionBitmap ()(_abd *_fe .Bitmap ,_agd error ){if _fdf .Bitmap !=nil {return _fdf .Bitmap ,nil ;};if _fdf .IsMMREncoded {if _fdf ._efbd ==nil {_fdf ._efbd ,_agd =_cf .New (_fdf ._dbe ,int (_fdf .RegionSegment .BitmapWidth ),int (_fdf .RegionSegment .BitmapHeight ),_fdf .DataOffset ,_fdf .DataLength );
if _agd !=nil {return nil ,_agd ;};};_fdf .Bitmap ,_agd =_fdf ._efbd .UncompressMMR ();return _fdf .Bitmap ,_agd ;};if _agd =_fdf .updateOverrideFlags ();_agd !=nil {return nil ,_agd ;};var _cge int ;if _fdf ._bda ==nil {_fdf ._bda ,_agd =_e .New (_fdf ._dbe );
if _agd !=nil {return nil ,_agd ;};};if _fdf ._agc ==nil {_fdf ._agc =_e .NewStats (65536,1);};_fdf .Bitmap =_fe .New (int (_fdf .RegionSegment .BitmapWidth ),int (_fdf .RegionSegment .BitmapHeight ));_acgc :=int (uint32 (_fdf .Bitmap .Width +7)&(^uint32 (7)));
for _cae :=0;_cae < _fdf .Bitmap .Height ;_cae ++{if _fdf .IsTPGDon {var _ffb int ;_ffb ,_agd =_fdf .decodeSLTP ();if _agd !=nil {return nil ,_agd ;};_cge ^=_ffb ;};if _cge ==1{if _cae > 0{if _agd =_fdf .copyLineAbove (_cae );_agd !=nil {return nil ,_agd ;
};};}else {if _agd =_fdf .decodeLine (_cae ,_fdf .Bitmap .Width ,_acgc );_agd !=nil {return nil ,_agd ;};};};return _fdf .Bitmap ,nil ;};func (_cag *template1 )setIndex (_fgbb *_e .DecoderStats ){_fgbb .SetIndex (0x080)};func (_dafae *TextRegion )setContexts (_fcgba *_e .DecoderStats ,_cfgfa *_e .DecoderStats ,_dbde *_e .DecoderStats ,_cgeb *_e .DecoderStats ,_decd *_e .DecoderStats ,_dada *_e .DecoderStats ,_dgcafe *_e .DecoderStats ,_ceeb *_e .DecoderStats ,_gfgf *_e .DecoderStats ,_daba *_e .DecoderStats ){_dafae ._cfea =_cfgfa ;
_dafae ._fgeb =_dbde ;_dafae ._gabdc =_cgeb ;_dafae ._cffgb =_decd ;_dafae ._gbgb =_dgcafe ;_dafae ._gcffb =_ceeb ;_dafae ._ffe =_dada ;_dafae ._cddd =_gfgf ;_dafae ._fgee =_daba ;_dafae ._fefcf =_fcgba ;};func (_fffc *GenericRegion )decodeTemplate2 (_fggc ,_dbd ,_gge int ,_eaae ,_efa int )(_cgb error ){const _cbf ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0032";
var (_feg ,_gdb int ;_fbec ,_cfe int ;_gcegc byte ;_fdb ,_aeea int ;);if _fggc >=1{_gcegc ,_cgb =_fffc .Bitmap .GetByte (_efa );if _cgb !=nil {return _fd .Wrap (_cgb ,_cbf ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0031");
};_fbec =int (_gcegc );};if _fggc >=2{_gcegc ,_cgb =_fffc .Bitmap .GetByte (_efa -_fffc .Bitmap .RowStride );if _cgb !=nil {return _fd .Wrap (_cgb ,_cbf ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0032");};_cfe =int (_gcegc )<<4;
};_feg =(_fbec >>3&0x7c)|(_cfe >>3&0x380);for _eefb :=0;_eefb < _gge ;_eefb =_fdb {var (_bce byte ;_aac int ;);_fdb =_eefb +8;if _fbb :=_dbd -_eefb ;_fbb > 8{_aac =8;}else {_aac =_fbb ;};if _fggc > 0{_fbec <<=8;if _fdb < _dbd {_gcegc ,_cgb =_fffc .Bitmap .GetByte (_efa +1);
if _cgb !=nil {return _fd .Wrap (_cgb ,_cbf ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0030");};_fbec |=int (_gcegc );};};if _fggc > 1{_cfe <<=8;if _fdb < _dbd {_gcegc ,_cgb =_fffc .Bitmap .GetByte (_efa -_fffc .Bitmap .RowStride +1);
if _cgb !=nil {return _fd .Wrap (_cgb ,_cbf ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0031");};_cfe |=int (_gcegc )<<4;};};for _gced :=0;_gced < _aac ;_gced ++{_gfc :=uint (10-_gced );if _fffc ._ggdg {_gdb =_fffc .overrideAtTemplate2 (_feg ,_eefb +_gced ,_fggc ,int (_bce ),_gced );
_fffc ._agc .SetIndex (int32 (_gdb ));}else {_fffc ._agc .SetIndex (int32 (_feg ));};_aeea ,_cgb =_fffc ._bda .DecodeBit (_fffc ._agc );if _cgb !=nil {return _fd .Wrap (_cgb ,_cbf ,"");};_bce |=byte (_aeea <<uint (7-_gced ));_feg =((_feg &0x1bd)<<1)|_aeea |((_fbec >>_gfc )&0x4)|((_cfe >>_gfc )&0x80);
};if _aea :=_fffc .Bitmap .SetByte (_eaae ,_bce );_aea !=nil {return _fd .Wrap (_aea ,_cbf ,"");};_eaae ++;_efa ++;};return nil ;};func (_feacd *SymbolDictionary )encodeATFlags (_beda _ga .BinaryWriter )(_dga int ,_fabd error ){const _eada ="\u0065\u006e\u0063\u006f\u0064\u0065\u0041\u0054\u0046\u006c\u0061\u0067\u0073";
if _feacd .IsHuffmanEncoded ||_feacd .SdTemplate !=0{return 0,nil ;};_daga :=4;if _feacd .SdTemplate !=0{_daga =1;};for _ggada :=0;_ggada < _daga ;_ggada ++{if _fabd =_beda .WriteByte (byte (_feacd .SdATX [_ggada ]));_fabd !=nil {return _dga ,_fd .Wrapf (_fabd ,_eada ,"\u0053d\u0041\u0054\u0058\u005b\u0025\u0064]",_ggada );
};_dga ++;if _fabd =_beda .WriteByte (byte (_feacd .SdATY [_ggada ]));_fabd !=nil {return _dga ,_fd .Wrapf (_fabd ,_eada ,"\u0053d\u0041\u0054\u0059\u005b\u0025\u0064]",_ggada );};_dga ++;};return _dga ,nil ;};func (_cfg *GenericRegion )Encode (w _ga .BinaryWriter )(_bdg int ,_gbfab error ){const _bcca ="G\u0065n\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069o\u006e\u002e\u0045\u006eco\u0064\u0065";
if _cfg .Bitmap ==nil {return 0,_fd .Error (_bcca ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};_acbd ,_gbfab :=_cfg .RegionSegment .Encode (w );if _gbfab !=nil {return 0,_fd .Wrap (_gbfab ,_bcca ,"\u0052\u0065\u0067\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};_bdg +=_acbd ;if _gbfab =w .SkipBits (4);_gbfab !=nil {return _bdg ,_fd .Wrap (_gbfab ,_bcca ,"\u0073k\u0069p\u0020\u0072\u0065\u0073\u0065r\u0076\u0065d\u0020\u0062\u0069\u0074\u0073");};var _abbd int ;if _cfg .IsTPGDon {_abbd =1;};if _gbfab =w .WriteBit (_abbd );
_gbfab !=nil {return _bdg ,_fd .Wrap (_gbfab ,_bcca ,"\u0074\u0070\u0067\u0064\u006f\u006e");};_abbd =0;if _gbfab =w .WriteBit (int (_cfg .GBTemplate >>1)&0x01);_gbfab !=nil {return _bdg ,_fd .Wrap (_gbfab ,_bcca ,"f\u0069r\u0073\u0074\u0020\u0067\u0062\u0074\u0065\u006dp\u006c\u0061\u0074\u0065 b\u0069\u0074");
};if _gbfab =w .WriteBit (int (_cfg .GBTemplate )&0x01);_gbfab !=nil {return _bdg ,_fd .Wrap (_gbfab ,_bcca ,"s\u0065\u0063\u006f\u006ed \u0067b\u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u0062\u0069\u0074");};if _cfg .UseMMR {_abbd =1;};if _gbfab =w .WriteBit (_abbd );
_gbfab !=nil {return _bdg ,_fd .Wrap (_gbfab ,_bcca ,"u\u0073\u0065\u0020\u004d\u004d\u0052\u0020\u0062\u0069\u0074");};_bdg ++;if _acbd ,_gbfab =_cfg .writeGBAtPixels (w );_gbfab !=nil {return _bdg ,_fd .Wrap (_gbfab ,_bcca ,"");};_bdg +=_acbd ;_cgge :=_dg .New ();
if _gbfab =_cgge .EncodeBitmap (_cfg .Bitmap ,_cfg .IsTPGDon );_gbfab !=nil {return _bdg ,_fd .Wrap (_gbfab ,_bcca ,"");};_cgge .Final ();var _ggb int64 ;if _ggb ,_gbfab =_cgge .WriteTo (w );_gbfab !=nil {return _bdg ,_fd .Wrap (_gbfab ,_bcca ,"");};_bdg +=int (_ggb );
return _bdg ,nil ;};func (_egbe *TableSegment )HtLow ()int32 {return _egbe ._ccbe };func (_bfgd *HalftoneRegion )computeSegmentDataStructure ()error {_bfgd .DataOffset =_bfgd ._bbba .AbsolutePosition ();_bfgd .DataHeaderLength =_bfgd .DataOffset -_bfgd .DataHeaderOffset ;
_bfgd .DataLength =int64 (_bfgd ._bbba .AbsoluteLength ())-_bfgd .DataHeaderLength ;return nil ;};func (_fecf *GenericRegion )setParameters (_adda bool ,_aff ,_abaf int64 ,_abe ,_fbc uint32 ){_fecf .IsMMREncoded =_adda ;_fecf .DataOffset =_aff ;_fecf .DataLength =_abaf ;
_fecf .RegionSegment .BitmapHeight =_abe ;_fecf .RegionSegment .BitmapWidth =_fbc ;_fecf ._efbd =nil ;_fecf .Bitmap =nil ;};func (_cff *GenericRefinementRegion )decodeTypicalPredictedLineTemplate0 (_ddd ,_bfeg ,_bgb ,_fgd ,_ab ,_aef ,_fac ,_gaf ,_deb int )error {var (_dddd ,_aee ,_bfg ,_bd ,_gf ,_cg int ;
_bb byte ;_gef error ;);if _ddd > 0{_bb ,_gef =_cff .RegionBitmap .GetByte (_fac -_bgb );if _gef !=nil {return _gef ;};_bfg =int (_bb );};if _gaf > 0&&_gaf <=_cff .ReferenceBitmap .Height {_bb ,_gef =_cff .ReferenceBitmap .GetByte (_deb -_fgd +_aef );if _gef !=nil {return _gef ;
};_bd =int (_bb )<<4;};if _gaf >=0&&_gaf < _cff .ReferenceBitmap .Height {_bb ,_gef =_cff .ReferenceBitmap .GetByte (_deb +_aef );if _gef !=nil {return _gef ;};_gf =int (_bb )<<1;};if _gaf > -2&&_gaf < _cff .ReferenceBitmap .Height -1{_bb ,_gef =_cff .ReferenceBitmap .GetByte (_deb +_fgd +_aef );
if _gef !=nil {return _gef ;};_cg =int (_bb );};_dddd =((_bfg >>5)&0x6)|((_cg >>2)&0x30)|(_gf &0x180)|(_bd &0xc00);var _dac int ;for _adfa :=0;_adfa < _ab ;_adfa =_dac {var _dfd int ;_dac =_adfa +8;var _gag int ;if _gag =_bfeg -_adfa ;_gag > 8{_gag =8;
};_bea :=_dac < _bfeg ;_ffg :=_dac < _cff .ReferenceBitmap .Width ;_cgg :=_aef +1;if _ddd > 0{_bb =0;if _bea {_bb ,_gef =_cff .RegionBitmap .GetByte (_fac -_bgb +1);if _gef !=nil {return _gef ;};};_bfg =(_bfg <<8)|int (_bb );};if _gaf > 0&&_gaf <=_cff .ReferenceBitmap .Height {var _dbf int ;
if _ffg {_bb ,_gef =_cff .ReferenceBitmap .GetByte (_deb -_fgd +_cgg );if _gef !=nil {return _gef ;};_dbf =int (_bb )<<4;};_bd =(_bd <<8)|_dbf ;};if _gaf >=0&&_gaf < _cff .ReferenceBitmap .Height {var _ecg int ;if _ffg {_bb ,_gef =_cff .ReferenceBitmap .GetByte (_deb +_cgg );
if _gef !=nil {return _gef ;};_ecg =int (_bb )<<1;};_gf =(_gf <<8)|_ecg ;};if _gaf > -2&&_gaf < (_cff .ReferenceBitmap .Height -1){_bb =0;if _ffg {_bb ,_gef =_cff .ReferenceBitmap .GetByte (_deb +_fgd +_cgg );if _gef !=nil {return _gef ;};};_cg =(_cg <<8)|int (_bb );
};for _beb :=0;_beb < _gag ;_beb ++{var _dgc int ;_bbc :=false ;_abb :=(_dddd >>4)&0x1ff;if _abb ==0x1ff{_bbc =true ;_dgc =1;}else if _abb ==0x00{_bbc =true ;};if !_bbc {if _cff ._ad {_aee =_cff .overrideAtTemplate0 (_dddd ,_adfa +_beb ,_ddd ,_dfd ,_beb );
_cff ._bg .SetIndex (int32 (_aee ));}else {_cff ._bg .SetIndex (int32 (_dddd ));};_dgc ,_gef =_cff ._cc .DecodeBit (_cff ._bg );if _gef !=nil {return _gef ;};};_gab :=uint (7-_beb );_dfd |=_dgc <<_gab ;_dddd =((_dddd &0xdb6)<<1)|_dgc |(_bfg >>_gab +5)&0x002|((_cg >>_gab +2)&0x010)|((_gf >>_gab )&0x080)|((_bd >>_gab )&0x400);
};_gef =_cff .RegionBitmap .SetByte (_fac ,byte (_dfd ));if _gef !=nil {return _gef ;};_fac ++;_deb ++;};return nil ;};func (_cba *PageInformationSegment )CombinationOperator ()_fe .CombinationOperator {return _cba ._bdcd };func (_cfcd *TextRegion )decodeCurrentT ()(int64 ,error ){if _cfcd .SbStrips !=1{if _cfcd .IsHuffmanEncoded {_geeb ,_cggd :=_cfcd ._gedf .ReadBits (byte (_cfcd .LogSBStrips ));
return int64 (_geeb ),_cggd ;};_faad ,_bcgbf :=_cfcd ._gcaa .DecodeInt (_cfcd ._cffgb );if _bcgbf !=nil {return 0,_bcgbf ;};return int64 (_faad ),nil ;};return 0,nil ;};func (_gdgg *PatternDictionary )computeSegmentDataStructure ()error {_gdgg .DataOffset =_gdgg ._aeeaa .AbsolutePosition ();
_gdgg .DataHeaderLength =_gdgg .DataOffset -_gdgg .DataHeaderOffset ;_gdgg .DataLength =int64 (_gdgg ._aeeaa .AbsoluteLength ())-_gdgg .DataHeaderLength ;return nil ;};func (_gcff *SymbolDictionary )readRefinementAtPixels (_fbad int )error {_gcff .SdrATX =make ([]int8 ,_fbad );
_gcff .SdrATY =make ([]int8 ,_fbad );var (_acd byte ;_cbg error ;);for _cfda :=0;_cfda < _fbad ;_cfda ++{_acd ,_cbg =_gcff ._fafe .ReadByte ();if _cbg !=nil {return _cbg ;};_gcff .SdrATX [_cfda ]=int8 (_acd );_acd ,_cbg =_gcff ._fafe .ReadByte ();if _cbg !=nil {return _cbg ;
};_gcff .SdrATY [_cfda ]=int8 (_acd );};return nil ;};type HalftoneRegion struct{_bbba *_ga .Reader ;_bed *Header ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;HDefaultPixel int8 ;CombinationOperator _fe .CombinationOperator ;
HSkipEnabled bool ;HTemplate byte ;IsMMREncoded bool ;HGridWidth uint32 ;HGridHeight uint32 ;HGridX int32 ;HGridY int32 ;HRegionX uint16 ;HRegionY uint16 ;HalftoneRegionBitmap *_fe .Bitmap ;Patterns []*_fe .Bitmap ;};func (_gfdb *SymbolDictionary )decodeHeightClassDeltaHeight ()(int64 ,error ){if _gfdb .IsHuffmanEncoded {return _gfdb .decodeHeightClassDeltaHeightWithHuffman ();
};_aafe ,_ggfbf :=_gfdb ._cdab .DecodeInt (_gfdb ._ddda );if _ggfbf !=nil {return 0,_ggfbf ;};return int64 (_aafe ),nil ;};func (_gccd *TextRegion )parseHeader ()error {var _fcbfe error ;_gg .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069n\u0073\u002e\u002e\u002e");
defer func (){if _fcbfe !=nil {_gg .Log .Trace ("\u005b\u0054\u0045\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044E\u0052\u005d\u0020\u0066\u0061i\u006c\u0065d\u002e\u0020\u0025\u0076",_fcbfe );
}else {_gg .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069s\u0068\u0065\u0064\u002e");};}();if _fcbfe =_gccd .RegionInfo .parseHeader ();
_fcbfe !=nil {return _fcbfe ;};if _fcbfe =_gccd .readRegionFlags ();_fcbfe !=nil {return _fcbfe ;};if _gccd .IsHuffmanEncoded {if _fcbfe =_gccd .readHuffmanFlags ();_fcbfe !=nil {return _fcbfe ;};};if _fcbfe =_gccd .readUseRefinement ();_fcbfe !=nil {return _fcbfe ;
};if _fcbfe =_gccd .readAmountOfSymbolInstances ();_fcbfe !=nil {return _fcbfe ;};if _fcbfe =_gccd .getSymbols ();_fcbfe !=nil {return _fcbfe ;};if _fcbfe =_gccd .computeSymbolCodeLength ();_fcbfe !=nil {return _fcbfe ;};if _fcbfe =_gccd .checkInput ();
_fcbfe !=nil {return _fcbfe ;};_gg .Log .Trace ("\u0025\u0073",_gccd .String ());return nil ;};func (_ccc *GenericRegion )String ()string {_dded :=&_ac .Builder {};_dded .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");
_dded .WriteString (_ccc .RegionSegment .String ()+"\u000a");_dded .WriteString (_da .Sprintf ("\u0009\u002d\u0020Us\u0065\u0045\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_ccc .UseExtTemplates ));_dded .WriteString (_da .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0044\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_ccc .IsTPGDon ));
_dded .WriteString (_da .Sprintf ("\u0009-\u0020G\u0042\u0054\u0065\u006d\u0070l\u0061\u0074e\u003a\u0020\u0025\u0064\u000a",_ccc .GBTemplate ));_dded .WriteString (_da .Sprintf ("\t\u002d \u0049\u0073\u004d\u004d\u0052\u0045\u006e\u0063o\u0064\u0065\u0064\u003a %\u0076\u000a",_ccc .IsMMREncoded ));
_dded .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_ccc .GBAtX ));_dded .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_ccc .GBAtY ));
_dded .WriteString (_da .Sprintf ("\t\u002d \u0047\u0042\u0041\u0074\u004f\u0076\u0065\u0072r\u0069\u0064\u0065\u003a %\u0076\u000a",_ccc .GBAtOverride ));return _dded .String ();};func (_dggg *GenericRegion )overrideAtTemplate3 (_dfae ,_cbb ,_cbd ,_edad ,_afad int )int {_dfae &=0x3EF;
if _dggg .GBAtY [0]==0&&_dggg .GBAtX [0]>=-int8 (_afad ){_dfae |=(_edad >>uint (7-(int8 (_afad )+_dggg .GBAtX [0]))&0x1)<<4;}else {_dfae |=int (_dggg .getPixel (_cbb +int (_dggg .GBAtX [0]),_cbd +int (_dggg .GBAtY [0])))<<4;};return _dfae ;};var _ SegmentEncoder =&GenericRegion {};
func (_fgag *GenericRegion )updateOverrideFlags ()error {const _dcbd ="\u0075\u0070\u0064\u0061te\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _fgag .GBAtX ==nil ||_fgag .GBAtY ==nil {return nil ;};if len (_fgag .GBAtX )!=len (_fgag .GBAtY ){return _fd .Errorf (_dcbd ,"i\u006eco\u0073i\u0073t\u0065\u006e\u0074\u0020\u0041T\u0020\u0070\u0069x\u0065\u006c\u002e\u0020\u0041m\u006f\u0075\u006et\u0020\u006f\u0066\u0020\u0027\u0078\u0027\u0020\u0070\u0069\u0078e\u006c\u0073\u003a %d\u002c\u0020\u0041\u006d\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0027\u0079\u0027\u0020\u0070\u0069\u0078e\u006cs\u003a\u0020\u0025\u0064",len (_fgag .GBAtX ),len (_fgag .GBAtY ));
};_fgag .GBAtOverride =make ([]bool ,len (_fgag .GBAtX ));switch _fgag .GBTemplate {case 0:if !_fgag .UseExtTemplates {if _fgag .GBAtX [0]!=3||_fgag .GBAtY [0]!=-1{_fgag .setOverrideFlag (0);};if _fgag .GBAtX [1]!=-3||_fgag .GBAtY [1]!=-1{_fgag .setOverrideFlag (1);
};if _fgag .GBAtX [2]!=2||_fgag .GBAtY [2]!=-2{_fgag .setOverrideFlag (2);};if _fgag .GBAtX [3]!=-2||_fgag .GBAtY [3]!=-2{_fgag .setOverrideFlag (3);};}else {if _fgag .GBAtX [0]!=-2||_fgag .GBAtY [0]!=0{_fgag .setOverrideFlag (0);};if _fgag .GBAtX [1]!=0||_fgag .GBAtY [1]!=-2{_fgag .setOverrideFlag (1);
};if _fgag .GBAtX [2]!=-2||_fgag .GBAtY [2]!=-1{_fgag .setOverrideFlag (2);};if _fgag .GBAtX [3]!=-1||_fgag .GBAtY [3]!=-2{_fgag .setOverrideFlag (3);};if _fgag .GBAtX [4]!=1||_fgag .GBAtY [4]!=-2{_fgag .setOverrideFlag (4);};if _fgag .GBAtX [5]!=2||_fgag .GBAtY [5]!=-1{_fgag .setOverrideFlag (5);
};if _fgag .GBAtX [6]!=-3||_fgag .GBAtY [6]!=0{_fgag .setOverrideFlag (6);};if _fgag .GBAtX [7]!=-4||_fgag .GBAtY [7]!=0{_fgag .setOverrideFlag (7);};if _fgag .GBAtX [8]!=2||_fgag .GBAtY [8]!=-2{_fgag .setOverrideFlag (8);};if _fgag .GBAtX [9]!=3||_fgag .GBAtY [9]!=-1{_fgag .setOverrideFlag (9);
};if _fgag .GBAtX [10]!=-2||_fgag .GBAtY [10]!=-2{_fgag .setOverrideFlag (10);};if _fgag .GBAtX [11]!=-3||_fgag .GBAtY [11]!=-1{_fgag .setOverrideFlag (11);};};case 1:if _fgag .GBAtX [0]!=3||_fgag .GBAtY [0]!=-1{_fgag .setOverrideFlag (0);};case 2:if _fgag .GBAtX [0]!=2||_fgag .GBAtY [0]!=-1{_fgag .setOverrideFlag (0);
};case 3:if _fgag .GBAtX [0]!=2||_fgag .GBAtY [0]!=-1{_fgag .setOverrideFlag (0);};};return nil ;};func (_edfa *SymbolDictionary )InitEncode (symbols *_fe .Bitmaps ,symbolList []int ,symbolMap map[int ]int ,unborderSymbols bool )error {const _beca ="S\u0079\u006d\u0062\u006f\u006c\u0044i\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002eI\u006e\u0069\u0074E\u006ec\u006f\u0064\u0065";
_edfa .SdATX =[]int8 {3,-3,2,-2};_edfa .SdATY =[]int8 {-1,-1,-2,-2};_edfa ._efeee =symbols ;_edfa ._adcd =make ([]int ,len (symbolList ));copy (_edfa ._adcd ,symbolList );if len (_edfa ._adcd )!=_edfa ._efeee .Size (){return _fd .Error (_beca ,"s\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0061\u006e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u004ci\u0073\u0074\u0020\u006f\u0066\u0020\u0064\u0069\u0066\u0066er\u0065\u006e\u0074 \u0073i\u007a\u0065");
};_edfa .NumberOfNewSymbols =uint32 (symbols .Size ());_edfa .NumberOfExportedSymbols =uint32 (symbols .Size ());_edfa ._gffgg =symbolMap ;_edfa ._caee =unborderSymbols ;return nil ;};func (_feac *PatternDictionary )readIsMMREncoded ()error {_ebdd ,_ggbf :=_feac ._aeeaa .ReadBit ();
if _ggbf !=nil {return _ggbf ;};if _ebdd !=0{_feac .IsMMREncoded =true ;};return nil ;};func (_ede *TextRegion )decodeStripT ()(_gdbag int64 ,_acdc error ){if _ede .IsHuffmanEncoded {if _ede .SbHuffDT ==3{if _ede ._bege ==nil {var _fcff int ;if _ede .SbHuffFS ==3{_fcff ++;
};if _ede .SbHuffDS ==3{_fcff ++;};_ede ._bege ,_acdc =_ede .getUserTable (_fcff );if _acdc !=nil {return 0,_acdc ;};};_gdbag ,_acdc =_ede ._bege .Decode (_ede ._gedf );if _acdc !=nil {return 0,_acdc ;};}else {var _abcd _fc .Tabler ;_abcd ,_acdc =_fc .GetStandardTable (11+int (_ede .SbHuffDT ));
if _acdc !=nil {return 0,_acdc ;};_gdbag ,_acdc =_abcd .Decode (_ede ._gedf );if _acdc !=nil {return 0,_acdc ;};};}else {var _daafa int32 ;_daafa ,_acdc =_ede ._gcaa .DecodeInt (_ede ._cfea );if _acdc !=nil {return 0,_acdc ;};_gdbag =int64 (_daafa );};
_gdbag *=int64 (-_ede .SbStrips );return _gdbag ,nil ;};func (_gdcb *SymbolDictionary )parseHeader ()(_ggdgf error ){_gg .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _ggdgf !=nil {_gg .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u0020\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u005b\u0050\u0041\u0052SE\u002d\u0048\u0045A\u0044\u0045R\u005d\u0020\u0066\u0061\u0069\u006ce\u0064\u002e \u0025\u0076",_ggdgf );
}else {_gg .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _ggdgf =_gdcb .readRegionFlags ();_ggdgf !=nil {return _ggdgf ;};if _ggdgf =_gdcb .setAtPixels ();_ggdgf !=nil {return _ggdgf ;};if _ggdgf =_gdcb .setRefinementAtPixels ();_ggdgf !=nil {return _ggdgf ;};if _ggdgf =_gdcb .readNumberOfExportedSymbols ();
_ggdgf !=nil {return _ggdgf ;};if _ggdgf =_gdcb .readNumberOfNewSymbols ();_ggdgf !=nil {return _ggdgf ;};if _ggdgf =_gdcb .setInSyms ();_ggdgf !=nil {return _ggdgf ;};if _gdcb ._abgg {_dcgd :=_gdcb .Header .RTSegments ;for _ccgg :=len (_dcgd )-1;_ccgg >=0;
_ccgg --{if _dcgd [_ccgg ].Type ==0{_dafab ,_aefa :=_dcgd [_ccgg ].SegmentData .(*SymbolDictionary );if !_aefa {_ggdgf =_da .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074:\u0020\u0025\u0076\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020S\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_dcgd [_ccgg ]);
return _ggdgf ;};if _dafab ._abgg {_gdcb .setRetainedCodingContexts (_dafab );};break ;};};};if _ggdgf =_gdcb .checkInput ();_ggdgf !=nil {return _ggdgf ;};return nil ;};func (_fbbe *HalftoneRegion )computeGrayScalePlanes (_caa []*_fe .Bitmap ,_daac int )([][]int ,error ){_cdeg :=make ([][]int ,_fbbe .HGridHeight );
for _deg :=0;_deg < len (_cdeg );_deg ++{_cdeg [_deg ]=make ([]int ,_fbbe .HGridWidth );};for _acff :=0;_acff < int (_fbbe .HGridHeight );_acff ++{for _bgbc :=0;_bgbc < int (_fbbe .HGridWidth );_bgbc +=8{var _bfba int ;if _fggd :=int (_fbbe .HGridWidth )-_bgbc ;
_fggd > 8{_bfba =8;}else {_bfba =_fggd ;};_fed :=_caa [0].GetByteIndex (_bgbc ,_acff );for _feaf :=0;_feaf < _bfba ;_feaf ++{_fgab :=_feaf +_bgbc ;_cdeg [_acff ][_fgab ]=0;for _cec :=0;_cec < _daac ;_cec ++{_aeeaf ,_eecd :=_caa [_cec ].GetByte (_fed );
if _eecd !=nil {return nil ,_eecd ;};_eee :=_aeeaf >>uint (7-_fgab &7);_afd :=_eee &1;_adbc :=1<<uint (_cec );_fagb :=int (_afd )*_adbc ;_cdeg [_acff ][_fgab ]+=_fagb ;};};};};return _cdeg ,nil ;};func (_ggea *TextRegion )Init (header *Header ,r *_ga .Reader )error {_ggea .Header =header ;
_ggea ._gedf =r ;_ggea .RegionInfo =NewRegionSegment (_ggea ._gedf );return _ggea .parseHeader ();};func (_gabeb *Header )referenceSize ()uint {switch {case _gabeb .SegmentNumber <=255:return 1;case _gabeb .SegmentNumber <=65535:return 2;default:return 4;
};};func NewHeader (d Documenter ,r *_ga .Reader ,offset int64 ,organizationType OrganizationType )(*Header ,error ){_gdg :=&Header {Reader :r };if _bga :=_gdg .parse (d ,r ,offset ,organizationType );_bga !=nil {return nil ,_fd .Wrap (_bga ,"\u004ee\u0077\u0048\u0065\u0061\u0064\u0065r","");
};return _gdg ,nil ;};func (_degb *TextRegion )decodeSymbolInstances ()error {_feag ,_ecefe :=_degb .decodeStripT ();if _ecefe !=nil {return _ecefe ;};var (_afgf int64 ;_cfgd uint32 ;);for _cfgd < _degb .NumberOfSymbolInstances {_dgaf ,_dfbdb :=_degb .decodeDT ();
if _dfbdb !=nil {return _dfbdb ;};_feag +=_dgaf ;var _bbcb int64 ;_gddg :=true ;_degb ._feec =0;for {if _gddg {_bbcb ,_dfbdb =_degb .decodeDfs ();if _dfbdb !=nil {return _dfbdb ;};_afgf +=_bbcb ;_degb ._feec =_afgf ;_gddg =false ;}else {_eceg ,_bgec :=_degb .decodeIds ();
if _cb .Is (_bgec ,_fb .ErrOOB ){break ;};if _bgec !=nil {return _bgec ;};if _cfgd >=_degb .NumberOfSymbolInstances {break ;};_degb ._feec +=_eceg +int64 (_degb .SbDsOffset );};_bdeg ,_abdg :=_degb .decodeCurrentT ();if _abdg !=nil {return _abdg ;};_caag :=_feag +_bdeg ;
_cccae ,_abdg :=_degb .decodeID ();if _abdg !=nil {return _abdg ;};_caeg ,_abdg :=_degb .decodeRI ();if _abdg !=nil {return _abdg ;};_ecge ,_abdg :=_degb .decodeIb (_caeg ,_cccae );if _abdg !=nil {return _abdg ;};if _abdg =_degb .blit (_ecge ,_caag );_abdg !=nil {return _abdg ;
};_cfgd ++;};};return nil ;};func (_aadc *SymbolDictionary )decodeAggregate (_bggg ,_cbdc uint32 )error {var (_adaab int64 ;_acga error ;);if _aadc .IsHuffmanEncoded {_adaab ,_acga =_aadc .huffDecodeRefAggNInst ();if _acga !=nil {return _acga ;};}else {_gbbg ,_bcedf :=_aadc ._cdab .DecodeInt (_aadc ._fdg );
if _bcedf !=nil {return _bcedf ;};_adaab =int64 (_gbbg );};if _adaab > 1{return _aadc .decodeThroughTextRegion (_bggg ,_cbdc ,uint32 (_adaab ));}else if _adaab ==1{return _aadc .decodeRefinedSymbol (_bggg ,_cbdc );};return nil ;};func (_daacg *TextRegion )readRegionFlags ()error {var (_fdeg int ;
_adfaa uint64 ;_gcaf error ;);_fdeg ,_gcaf =_daacg ._gedf .ReadBit ();if _gcaf !=nil {return _gcaf ;};_daacg .SbrTemplate =int8 (_fdeg );_adfaa ,_gcaf =_daacg ._gedf .ReadBits (5);if _gcaf !=nil {return _gcaf ;};_daacg .SbDsOffset =int8 (_adfaa );if _daacg .SbDsOffset > 0x0f{_daacg .SbDsOffset -=0x20;
};_fdeg ,_gcaf =_daacg ._gedf .ReadBit ();if _gcaf !=nil {return _gcaf ;};_daacg .DefaultPixel =int8 (_fdeg );_adfaa ,_gcaf =_daacg ._gedf .ReadBits (2);if _gcaf !=nil {return _gcaf ;};_daacg .CombinationOperator =_fe .CombinationOperator (int (_adfaa )&0x3);
_fdeg ,_gcaf =_daacg ._gedf .ReadBit ();if _gcaf !=nil {return _gcaf ;};_daacg .IsTransposed =int8 (_fdeg );_adfaa ,_gcaf =_daacg ._gedf .ReadBits (2);if _gcaf !=nil {return _gcaf ;};_daacg .ReferenceCorner =int16 (_adfaa )&0x3;_adfaa ,_gcaf =_daacg ._gedf .ReadBits (2);
if _gcaf !=nil {return _gcaf ;};_daacg .LogSBStrips =int16 (_adfaa )&0x3;_daacg .SbStrips =1<<uint (_daacg .LogSBStrips );_fdeg ,_gcaf =_daacg ._gedf .ReadBit ();if _gcaf !=nil {return _gcaf ;};if _fdeg ==1{_daacg .UseRefinement =true ;};_fdeg ,_gcaf =_daacg ._gedf .ReadBit ();
if _gcaf !=nil {return _gcaf ;};if _fdeg ==1{_daacg .IsHuffmanEncoded =true ;};return nil ;};func (_afaf *Header )writeSegmentPageAssociation (_ecf _ga .BinaryWriter )(_dfaf int ,_gfbg error ){const _dbgf ="w\u0072\u0069\u0074\u0065\u0053\u0065g\u006d\u0065\u006e\u0074\u0050\u0061\u0067\u0065\u0041s\u0073\u006f\u0063i\u0061t\u0069\u006f\u006e";
if _afaf .pageSize ()!=4{if _gfbg =_ecf .WriteByte (byte (_afaf .PageAssociation ));_gfbg !=nil {return 0,_fd .Wrap (_gfbg ,_dbgf ,"\u0070\u0061\u0067\u0065\u0053\u0069\u007a\u0065\u0020\u0021\u003d\u0020\u0034");};return 1,nil ;};_dfff :=make ([]byte ,4);
_dc .BigEndian .PutUint32 (_dfff ,uint32 (_afaf .PageAssociation ));if _dfaf ,_gfbg =_ecf .Write (_dfff );_gfbg !=nil {return 0,_fd .Wrap (_gfbg ,_dbgf ,"\u0034 \u0062y\u0074\u0065\u0020\u0070\u0061g\u0065\u0020n\u0075\u006d\u0062\u0065\u0072");};return _dfaf ,nil ;
};func (_cd *GenericRefinementRegion )GetRegionInfo ()*RegionSegment {return _cd .RegionInfo };func (_feff *GenericRegion )decodeTemplate3 (_fcea ,_agcd ,_aaa int ,_cgc ,_abg int )(_bfd error ){const _ggfc ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0033";
var (_ecdd ,_cfff int ;_faaf int ;_fbgd byte ;_bbdbd ,_gbbf int ;);if _fcea >=1{_fbgd ,_bfd =_feff .Bitmap .GetByte (_abg );if _bfd !=nil {return _fd .Wrap (_bfd ,_ggfc ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_faaf =int (_fbgd );};_ecdd =(_faaf >>1)&0x70;
for _egf :=0;_egf < _aaa ;_egf =_bbdbd {var (_gga byte ;_cege int ;);_bbdbd =_egf +8;if _eaada :=_agcd -_egf ;_eaada > 8{_cege =8;}else {_cege =_eaada ;};if _fcea >=1{_faaf <<=8;if _bbdbd < _agcd {_fbgd ,_bfd =_feff .Bitmap .GetByte (_abg +1);if _bfd !=nil {return _fd .Wrap (_bfd ,_ggfc ,"\u0069\u006e\u006e\u0065\u0072\u0020\u002d\u0020\u006c\u0069\u006e\u0065 \u003e\u003d\u0020\u0031");
};_faaf |=int (_fbgd );};};for _fdab :=0;_fdab < _cege ;_fdab ++{if _feff ._ggdg {_cfff =_feff .overrideAtTemplate3 (_ecdd ,_egf +_fdab ,_fcea ,int (_gga ),_fdab );_feff ._agc .SetIndex (int32 (_cfff ));}else {_feff ._agc .SetIndex (int32 (_ecdd ));};_gbbf ,_bfd =_feff ._bda .DecodeBit (_feff ._agc );
if _bfd !=nil {return _fd .Wrap (_bfd ,_ggfc ,"");};_gga |=byte (_gbbf )<<byte (7-_fdab );_ecdd =((_ecdd &0x1f7)<<1)|_gbbf |((_faaf >>uint (8-_fdab ))&0x010);};if _afa :=_feff .Bitmap .SetByte (_cgc ,_gga );_afa !=nil {return _fd .Wrap (_afa ,_ggfc ,"");
};_cgc ++;_abg ++;};return nil ;};func (_eaad *GenericRegion )Size ()int {return _eaad .RegionSegment .Size ()+1+2*len (_eaad .GBAtX )};func (_cfbc *PageInformationSegment )String ()string {_cefd :=&_ac .Builder {};_cefd .WriteString ("\u000a\u005b\u0050\u0041G\u0045\u002d\u0049\u004e\u0046\u004f\u0052\u004d\u0041\u0054I\u004fN\u002d\u0053\u0045\u0047\u004d\u0045\u004eT\u005d\u000a");
_cefd .WriteString (_da .Sprintf ("\u0009\u002d \u0042\u004d\u0048e\u0069\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u000a",_cfbc .PageBMHeight ));_cefd .WriteString (_da .Sprintf ("\u0009-\u0020B\u004d\u0057\u0069\u0064\u0074\u0068\u003a\u0020\u0025\u0064\u000a",_cfbc .PageBMWidth ));
_cefd .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0058\u003a\u0020\u0025\u0064\u000a",_cfbc .ResolutionX ));_cefd .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0059\u003a\u0020\u0025\u0064\u000a",_cfbc .ResolutionY ));
_cefd .WriteString (_da .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0073\u000a",_cfbc ._bdcd ));_cefd .WriteString (_da .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006eO\u0070\u0065\u0072\u0061\u0074\u006f\u0072O\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025v\u000a",_cfbc ._aggf ));
_cefd .WriteString (_da .Sprintf ("\u0009-\u0020I\u0073\u004c\u006f\u0073\u0073l\u0065\u0073s\u003a\u0020\u0025\u0076\u000a",_cfbc .IsLossless ));_cefd .WriteString (_da .Sprintf ("\u0009\u002d\u0020R\u0065\u0071\u0075\u0069r\u0065\u0073\u0041\u0075\u0078\u0069\u006ci\u0061\u0072\u0079\u0042\u0075\u0066\u0066\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_cfbc ._ecad ));
_cefd .WriteString (_da .Sprintf ("\u0009\u002d\u0020M\u0069\u0067\u0068\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0052e\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0076\u000a",_cfbc ._egfb ));_cefd .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0049\u0073\u0053\u0074\u0072\u0069\u0070\u0065\u0064:\u0020\u0025\u0076\u000a",_cfbc .IsStripe ));
_cefd .WriteString (_da .Sprintf ("\t\u002d\u0020\u004d\u0061xS\u0074r\u0069\u0070\u0065\u0053\u0069z\u0065\u003a\u0020\u0025\u0076\u000a",_cfbc .MaxStripeSize ));return _cefd .String ();};type templater interface{form (_ggd ,_egg ,_add ,_agb ,_ecd int16 )int16 ;
setIndex (_gceg *_e .DecoderStats );};func (_gbfc *Header )readSegmentDataLength (_ddbb *_ga .Reader )(_abbe error ){_gbfc .SegmentDataLength ,_abbe =_ddbb .ReadBits (32);if _abbe !=nil {return _abbe ;};_gbfc .SegmentDataLength &=_c .MaxInt32 ;return nil ;
};func (_bfee *GenericRefinementRegion )decodeTypicalPredictedLineTemplate1 (_ag ,_cda ,_dcge ,_acg ,_bdb ,_adb ,_aba ,_dbg ,_bcc int )(_ece error ){var (_bfega ,_adg int ;_aabd ,_eef int ;_ada ,_fff int ;_cce byte ;);if _ag > 0{_cce ,_ece =_bfee .RegionBitmap .GetByte (_aba -_dcge );
if _ece !=nil {return ;};_aabd =int (_cce );};if _dbg > 0&&_dbg <=_bfee .ReferenceBitmap .Height {_cce ,_ece =_bfee .ReferenceBitmap .GetByte (_bcc -_acg +_adb );if _ece !=nil {return ;};_eef =int (_cce )<<2;};if _dbg >=0&&_dbg < _bfee .ReferenceBitmap .Height {_cce ,_ece =_bfee .ReferenceBitmap .GetByte (_bcc +_adb );
if _ece !=nil {return ;};_ada =int (_cce );};if _dbg > -2&&_dbg < _bfee .ReferenceBitmap .Height -1{_cce ,_ece =_bfee .ReferenceBitmap .GetByte (_bcc +_acg +_adb );if _ece !=nil {return ;};_fff =int (_cce );};_bfega =((_aabd >>5)&0x6)|((_fff >>2)&0x30)|(_ada &0xc0)|(_eef &0x200);
_adg =((_fff >>2)&0x70)|(_ada &0xc0)|(_eef &0x700);var _gff int ;for _efe :=0;_efe < _bdb ;_efe =_gff {var (_beff int ;_ffc int ;);_gff =_efe +8;if _beff =_cda -_efe ;_beff > 8{_beff =8;};_ffcc :=_gff < _cda ;_ccdf :=_gff < _bfee .ReferenceBitmap .Width ;
_cggg :=_adb +1;if _ag > 0{_cce =0;if _ffcc {_cce ,_ece =_bfee .RegionBitmap .GetByte (_aba -_dcge +1);if _ece !=nil {return ;};};_aabd =(_aabd <<8)|int (_cce );};if _dbg > 0&&_dbg <=_bfee .ReferenceBitmap .Height {var _ggf int ;if _ccdf {_cce ,_ece =_bfee .ReferenceBitmap .GetByte (_bcc -_acg +_cggg );
if _ece !=nil {return ;};_ggf =int (_cce )<<2;};_eef =(_eef <<8)|_ggf ;};if _dbg >=0&&_dbg < _bfee .ReferenceBitmap .Height {_cce =0;if _ccdf {_cce ,_ece =_bfee .ReferenceBitmap .GetByte (_bcc +_cggg );if _ece !=nil {return ;};};_ada =(_ada <<8)|int (_cce );
};if _dbg > -2&&_dbg < (_bfee .ReferenceBitmap .Height -1){_cce =0;if _ccdf {_cce ,_ece =_bfee .ReferenceBitmap .GetByte (_bcc +_acg +_cggg );if _ece !=nil {return ;};};_fff =(_fff <<8)|int (_cce );};for _efb :=0;_efb < _beff ;_efb ++{var _fag int ;_afg :=(_adg >>4)&0x1ff;
switch _afg {case 0x1ff:_fag =1;case 0x00:_fag =0;default:_bfee ._bg .SetIndex (int32 (_bfega ));_fag ,_ece =_bfee ._cc .DecodeBit (_bfee ._bg );if _ece !=nil {return ;};};_fec :=uint (7-_efb );_ffc |=_fag <<_fec ;_bfega =((_bfega &0x0d6)<<1)|_fag |(_aabd >>_fec +5)&0x002|((_fff >>_fec +2)&0x010)|((_ada >>_fec )&0x040)|((_eef >>_fec )&0x200);
_adg =((_adg &0xdb)<<1)|((_fff >>_fec +2)&0x010)|((_ada >>_fec )&0x080)|((_eef >>_fec )&0x400);};_ece =_bfee .RegionBitmap .SetByte (_aba ,byte (_ffc ));if _ece !=nil {return ;};_aba ++;_bcc ++;};return nil ;};func (_dfdd *Header )CleanSegmentData (){if _dfdd .SegmentData !=nil {_dfdd .SegmentData =nil ;
};};func (_cbe *EndOfStripe )Init (h *Header ,r *_ga .Reader )error {_cbe ._ea =r ;return _cbe .parseHeader ();};func (_fdef *SymbolDictionary )decodeHeightClassBitmap (_fafg *_fe .Bitmap ,_dfac int64 ,_bbggd int ,_eaaca []int )error {for _bbcd :=_dfac ;
_bbcd < int64 (_fdef ._ebec );_bbcd ++{var _gefa int ;for _bbgf :=_dfac ;_bbgf <=_bbcd -1;_bbgf ++{_gefa +=_eaaca [_bbgf ];};_faag :=_a .Rect (_gefa ,0,_gefa +_eaaca [_bbcd ],_bbggd );_gfff ,_gebg :=_fe .Extract (_faag ,_fafg );if _gebg !=nil {return _gebg ;
};_fdef ._cece [_bbcd ]=_gfff ;_fdef ._fcaa =append (_fdef ._fcaa ,_gfff );};return nil ;};func (_aebe *PatternDictionary )parseHeader ()error {_gg .Log .Trace ("\u005b\u0050\u0041\u0054\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054I\u004f\u004e\u0041\u0052\u0059\u005d[\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d\u0020b\u0065\u0067\u0069\u006e");
defer func (){_gg .Log .Trace ("\u005b\u0050\u0041T\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u005b\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
}();_ ,_ffbd :=_aebe ._aeeaa .ReadBits (5);if _ffbd !=nil {return _ffbd ;};if _ffbd =_aebe .readTemplate ();_ffbd !=nil {return _ffbd ;};if _ffbd =_aebe .readIsMMREncoded ();_ffbd !=nil {return _ffbd ;};if _ffbd =_aebe .readPatternWidthAndHeight ();_ffbd !=nil {return _ffbd ;
};if _ffbd =_aebe .readGrayMax ();_ffbd !=nil {return _ffbd ;};if _ffbd =_aebe .computeSegmentDataStructure ();_ffbd !=nil {return _ffbd ;};return _aebe .checkInput ();};func (_ec *GenericRefinementRegion )decodeSLTP ()(int ,error ){_ec .Template .setIndex (_ec ._bg );
return _ec ._cc .DecodeBit (_ec ._bg );};func (_gdfd *TableSegment )HtHigh ()int32 {return _gdfd ._edba };func (_ddcb *PatternDictionary )readTemplate ()error {_fcbc ,_cabc :=_ddcb ._aeeaa .ReadBits (2);if _cabc !=nil {return _cabc ;};_ddcb .HDTemplate =byte (_fcbc );
return nil ;};func (_fdfe *GenericRegion )setOverrideFlag (_baab int ){_fdfe .GBAtOverride [_baab ]=true ;_fdfe ._ggdg =true ;};func (_ddce *PatternDictionary )readPatternWidthAndHeight ()error {_dffc ,_gcgc :=_ddce ._aeeaa .ReadByte ();if _gcgc !=nil {return _gcgc ;
};_ddce .HdpWidth =_dffc ;_dffc ,_gcgc =_ddce ._aeeaa .ReadByte ();if _gcgc !=nil {return _gcgc ;};_ddce .HdpHeight =_dffc ;return nil ;};type template1 struct{};type EncodeInitializer interface{InitEncode ();};func (_dbab *TextRegion )setCodingStatistics ()error {if _dbab ._cfea ==nil {_dbab ._cfea =_e .NewStats (512,1);
};if _dbab ._fgeb ==nil {_dbab ._fgeb =_e .NewStats (512,1);};if _dbab ._gabdc ==nil {_dbab ._gabdc =_e .NewStats (512,1);};if _dbab ._cffgb ==nil {_dbab ._cffgb =_e .NewStats (512,1);};if _dbab ._bbac ==nil {_dbab ._bbac =_e .NewStats (512,1);};if _dbab ._gbgb ==nil {_dbab ._gbgb =_e .NewStats (512,1);
};if _dbab ._gcffb ==nil {_dbab ._gcffb =_e .NewStats (512,1);};if _dbab ._ffe ==nil {_dbab ._ffe =_e .NewStats (1<<uint (_dbab ._dbbc ),1);};if _dbab ._cddd ==nil {_dbab ._cddd =_e .NewStats (512,1);};if _dbab ._fgee ==nil {_dbab ._fgee =_e .NewStats (512,1);
};if _dbab ._gcaa ==nil {var _egec error ;_dbab ._gcaa ,_egec =_e .New (_dbab ._gedf );if _egec !=nil {return _egec ;};};return nil ;};type Segmenter interface{Init (_decc *Header ,_fcg *_ga .Reader )error ;};func (_cecf *TextRegion )readUseRefinement ()error {if !_cecf .UseRefinement ||_cecf .SbrTemplate !=0{return nil ;
};var (_fafbg byte ;_edfaa error ;);_cecf .SbrATX =make ([]int8 ,2);_cecf .SbrATY =make ([]int8 ,2);_fafbg ,_edfaa =_cecf ._gedf .ReadByte ();if _edfaa !=nil {return _edfaa ;};_cecf .SbrATX [0]=int8 (_fafbg );_fafbg ,_edfaa =_cecf ._gedf .ReadByte ();if _edfaa !=nil {return _edfaa ;
};_cecf .SbrATY [0]=int8 (_fafbg );_fafbg ,_edfaa =_cecf ._gedf .ReadByte ();if _edfaa !=nil {return _edfaa ;};_cecf .SbrATX [1]=int8 (_fafbg );_fafbg ,_edfaa =_cecf ._gedf .ReadByte ();if _edfaa !=nil {return _edfaa ;};_cecf .SbrATY [1]=int8 (_fafbg );
return nil ;};func (_bcb *HalftoneRegion )parseHeader ()error {if _ddc :=_bcb .RegionSegment .parseHeader ();_ddc !=nil {return _ddc ;};_bccc ,_dgga :=_bcb ._bbba .ReadBit ();if _dgga !=nil {return _dgga ;};_bcb .HDefaultPixel =int8 (_bccc );_eadg ,_dgga :=_bcb ._bbba .ReadBits (3);
if _dgga !=nil {return _dgga ;};_bcb .CombinationOperator =_fe .CombinationOperator (_eadg &0xf);_bccc ,_dgga =_bcb ._bbba .ReadBit ();if _dgga !=nil {return _dgga ;};if _bccc ==1{_bcb .HSkipEnabled =true ;};_eadg ,_dgga =_bcb ._bbba .ReadBits (2);if _dgga !=nil {return _dgga ;
};_bcb .HTemplate =byte (_eadg &0xf);_bccc ,_dgga =_bcb ._bbba .ReadBit ();if _dgga !=nil {return _dgga ;};if _bccc ==1{_bcb .IsMMREncoded =true ;};_eadg ,_dgga =_bcb ._bbba .ReadBits (32);if _dgga !=nil {return _dgga ;};_bcb .HGridWidth =uint32 (_eadg &_c .MaxUint32 );
_eadg ,_dgga =_bcb ._bbba .ReadBits (32);if _dgga !=nil {return _dgga ;};_bcb .HGridHeight =uint32 (_eadg &_c .MaxUint32 );_eadg ,_dgga =_bcb ._bbba .ReadBits (32);if _dgga !=nil {return _dgga ;};_bcb .HGridX =int32 (_eadg &_c .MaxInt32 );_eadg ,_dgga =_bcb ._bbba .ReadBits (32);
if _dgga !=nil {return _dgga ;};_bcb .HGridY =int32 (_eadg &_c .MaxInt32 );_eadg ,_dgga =_bcb ._bbba .ReadBits (16);if _dgga !=nil {return _dgga ;};_bcb .HRegionX =uint16 (_eadg &_c .MaxUint16 );_eadg ,_dgga =_bcb ._bbba .ReadBits (16);if _dgga !=nil {return _dgga ;
};_bcb .HRegionY =uint16 (_eadg &_c .MaxUint16 );if _dgga =_bcb .computeSegmentDataStructure ();_dgga !=nil {return _dgga ;};return _bcb .checkInput ();};func (_gaca *Header )writeFlags (_eeg _ga .BinaryWriter )(_dfbc error ){const _bcdc ="\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065F\u006c\u0061\u0067\u0073";
_afdff :=byte (_gaca .Type );if _dfbc =_eeg .WriteByte (_afdff );_dfbc !=nil {return _fd .Wrap (_dfbc ,_bcdc ,"\u0077\u0072\u0069ti\u006e\u0067\u0020\u0073\u0065\u0067\u006d\u0065\u006et\u0020t\u0079p\u0065 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};if !_gaca .RetainFlag &&!_gaca .PageAssociationFieldSize {return nil ;};if _dfbc =_eeg .SkipBits (-8);_dfbc !=nil {return _fd .Wrap (_dfbc ,_bcdc ,"\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0062\u0061\u0063\u006b\u0020\u0074\u0068\u0065\u0020\u0062\u0069\u0074\u0073\u0020\u0066\u0061il\u0065\u0064");
};var _aagef int ;if _gaca .RetainFlag {_aagef =1;};if _dfbc =_eeg .WriteBit (_aagef );_dfbc !=nil {return _fd .Wrap (_dfbc ,_bcdc ,"\u0072\u0065\u0074\u0061in\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067\u0073");};_aagef =0;
if _gaca .PageAssociationFieldSize {_aagef =1;};if _dfbc =_eeg .WriteBit (_aagef );_dfbc !=nil {return _fd .Wrap (_dfbc ,_bcdc ,"p\u0061\u0067\u0065\u0020as\u0073o\u0063\u0069\u0061\u0074\u0069o\u006e\u0020\u0066\u006c\u0061\u0067");};_eeg .FinishByte ();
return nil ;};func (_dccf *HalftoneRegion )renderPattern (_eefg [][]int )(_afdf error ){var _ccfb ,_dec int ;for _dfbg :=0;_dfbg < int (_dccf .HGridHeight );_dfbg ++{for _fada :=0;_fada < int (_dccf .HGridWidth );_fada ++{_ccfb =_dccf .computeX (_dfbg ,_fada );
_dec =_dccf .computeY (_dfbg ,_fada );_aeb :=_dccf .Patterns [_eefg [_dfbg ][_fada ]];if _afdf =_fe .Blit (_aeb ,_dccf .HalftoneRegionBitmap ,_ccfb +int (_dccf .HGridX ),_dec +int (_dccf .HGridY ),_dccf .CombinationOperator );_afdf !=nil {return _afdf ;
};};};return nil ;};func (_cebd *template0 )form (_bccdd ,_gca ,_gbfa ,_ggg ,_afe int16 )int16 {return (_bccdd <<10)|(_gca <<7)|(_gbfa <<4)|(_ggg <<1)|_afe ;};func (_daaed *TextRegion )decodeDfs ()(int64 ,error ){if _daaed .IsHuffmanEncoded {if _daaed .SbHuffFS ==3{if _daaed ._eddd ==nil {var _efbab error ;
_daaed ._eddd ,_efbab =_daaed .getUserTable (0);if _efbab !=nil {return 0,_efbab ;};};return _daaed ._eddd .Decode (_daaed ._gedf );};_bfdbe ,_cfga :=_fc .GetStandardTable (6+int (_daaed .SbHuffFS ));if _cfga !=nil {return 0,_cfga ;};return _bfdbe .Decode (_daaed ._gedf );
};_deab ,_fecd :=_daaed ._gcaa .DecodeInt (_daaed ._fgeb );if _fecd !=nil {return 0,_fecd ;};return int64 (_deab ),nil ;};var _ SegmentEncoder =&RegionSegment {};func (_ddfb *HalftoneRegion )GetRegionInfo ()*RegionSegment {return _ddfb .RegionSegment };
func (_acaf *Header )writeReferredToSegments (_agg _ga .BinaryWriter )(_fbee int ,_gaeeb error ){const _ddbf ="\u0077\u0072\u0069te\u0052\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";var (_fcca uint16 ;
_bdc uint32 ;);_gaeg :=_acaf .referenceSize ();_bbdbc :=1;_dfg :=make ([]byte ,_gaeg );for _ ,_bedd :=range _acaf .RTSNumbers {switch _gaeg {case 4:_bdc =uint32 (_bedd );_dc .BigEndian .PutUint32 (_dfg ,_bdc );_bbdbc ,_gaeeb =_agg .Write (_dfg );if _gaeeb !=nil {return 0,_fd .Wrap (_gaeeb ,_ddbf ,"u\u0069\u006e\u0074\u0033\u0032\u0020\u0073\u0069\u007a\u0065");
};case 2:_fcca =uint16 (_bedd );_dc .BigEndian .PutUint16 (_dfg ,_fcca );_bbdbc ,_gaeeb =_agg .Write (_dfg );if _gaeeb !=nil {return 0,_fd .Wrap (_gaeeb ,_ddbf ,"\u0075\u0069\u006e\u0074\u0031\u0036");};default:if _gaeeb =_agg .WriteByte (byte (_bedd ));
_gaeeb !=nil {return 0,_fd .Wrap (_gaeeb ,_ddbf ,"\u0075\u0069\u006et\u0038");};};_fbee +=_bbdbc ;};return _fbee ,nil ;};func (_eaff *SymbolDictionary )setCodingStatistics ()error {if _eaff ._aaae ==nil {_eaff ._aaae =_e .NewStats (512,1);};if _eaff ._ddda ==nil {_eaff ._ddda =_e .NewStats (512,1);
};if _eaff ._cgbeb ==nil {_eaff ._cgbeb =_e .NewStats (512,1);};if _eaff ._fdg ==nil {_eaff ._fdg =_e .NewStats (512,1);};if _eaff ._eefbg ==nil {_eaff ._eefbg =_e .NewStats (512,1);};if _eaff .UseRefinementAggregation &&_eaff ._bceb ==nil {_eaff ._bceb =_e .NewStats (1<<uint (_eaff ._gfec ),1);
_eaff ._fcgg =_e .NewStats (512,1);_eaff ._fdbb =_e .NewStats (512,1);};if _eaff ._fabe ==nil {_eaff ._fabe =_e .NewStats (65536,1);};if _eaff ._cdab ==nil {var _gdbf error ;_eaff ._cdab ,_gdbf =_e .New (_eaff ._fafe );if _gdbf !=nil {return _gdbf ;};};
return nil ;};func (_ebfc *PageInformationSegment )readResolution ()error {_gcbc ,_fbcc :=_ebfc ._ecaa .ReadBits (32);if _fbcc !=nil {return _fbcc ;};_ebfc .ResolutionX =int (_gcbc &_c .MaxInt32 );_gcbc ,_fbcc =_ebfc ._ecaa .ReadBits (32);if _fbcc !=nil {return _fbcc ;
};_ebfc .ResolutionY =int (_gcbc &_c .MaxInt32 );return nil ;};func (_bgf *GenericRegion )decodeTemplate0a (_ddb ,_afbc ,_bdf int ,_bdad ,_ddg int )(_gde error ){const _ddedd ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0061";
var (_bbcg ,_edae int ;_dca ,_gfb int ;_debe byte ;_dgg int ;);if _ddb >=1{_debe ,_gde =_bgf .Bitmap .GetByte (_ddg );if _gde !=nil {return _fd .Wrap (_gde ,_ddedd ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_dca =int (_debe );};if _ddb >=2{_debe ,_gde =_bgf .Bitmap .GetByte (_ddg -_bgf .Bitmap .RowStride );
if _gde !=nil {return _fd .Wrap (_gde ,_ddedd ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_gfb =int (_debe )<<6;};_bbcg =(_dca &0xf0)|(_gfb &0x3800);for _cfb :=0;_cfb < _bdf ;_cfb =_dgg {var (_bbf byte ;_fcc int ;);_dgg =_cfb +8;if _fgda :=_afbc -_cfb ;
_fgda > 8{_fcc =8;}else {_fcc =_fgda ;};if _ddb > 0{_dca <<=8;if _dgg < _afbc {_debe ,_gde =_bgf .Bitmap .GetByte (_ddg +1);if _gde !=nil {return _fd .Wrap (_gde ,_ddedd ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_dca |=int (_debe );};};if _ddb > 1{_dgf :=_ddg -_bgf .Bitmap .RowStride +1;
_gfb <<=8;if _dgg < _afbc {_debe ,_gde =_bgf .Bitmap .GetByte (_dgf );if _gde !=nil {return _fd .Wrap (_gde ,_ddedd ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_gfb |=int (_debe )<<6;}else {_gfb |=0;};};for _bff :=0;_bff < _fcc ;_bff ++{_gee :=uint (7-_bff );
if _bgf ._ggdg {_edae =_bgf .overrideAtTemplate0a (_bbcg ,_cfb +_bff ,_ddb ,int (_bbf ),_bff ,int (_gee ));_bgf ._agc .SetIndex (int32 (_edae ));}else {_bgf ._agc .SetIndex (int32 (_bbcg ));};var _eb int ;_eb ,_gde =_bgf ._bda .DecodeBit (_bgf ._agc );
if _gde !=nil {return _fd .Wrap (_gde ,_ddedd ,"");};_bbf |=byte (_eb )<<_gee ;_bbcg =((_bbcg &0x7bf7)<<1)|_eb |((_dca >>_gee )&0x10)|((_gfb >>_gee )&0x800);};if _bbd :=_bgf .Bitmap .SetByte (_bdad ,_bbf );_bbd !=nil {return _fd .Wrap (_bbd ,_ddedd ,"");
};_bdad ++;_ddg ++;};return nil ;};func (_ecc *SymbolDictionary )decodeDirectlyThroughGenericRegion (_ggcf ,_fbed uint32 )error {if _ecc ._ebge ==nil {_ecc ._ebge =NewGenericRegion (_ecc ._fafe );};_ecc ._ebge .setParametersWithAt (false ,byte (_ecc .SdTemplate ),false ,false ,_ecc .SdATX ,_ecc .SdATY ,_ggcf ,_fbed ,_ecc ._fabe ,_ecc ._cdab );
return _ecc .addSymbol (_ecc ._ebge );};func (_gcb *GenericRegion )readGBAtPixels (_efacf int )error {const _cde ="\u0072\u0065\u0061\u0064\u0047\u0042\u0041\u0074\u0050i\u0078\u0065\u006c\u0073";_gcb .GBAtX =make ([]int8 ,_efacf );_gcb .GBAtY =make ([]int8 ,_efacf );
for _dcdc :=0;_dcdc < _efacf ;_dcdc ++{_ced ,_bacf :=_gcb ._dbe .ReadByte ();if _bacf !=nil {return _fd .Wrapf (_bacf ,_cde ,"\u0058\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_dcdc );};_gcb .GBAtX [_dcdc ]=int8 (_ced );_ced ,_bacf =_gcb ._dbe .ReadByte ();
if _bacf !=nil {return _fd .Wrapf (_bacf ,_cde ,"\u0059\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_dcdc );};_gcb .GBAtY [_dcdc ]=int8 (_ced );};return nil ;};func (_bfaec *Header )writeSegmentNumber (_deeb _ga .BinaryWriter )(_efca int ,_dgfa error ){_bcag :=make ([]byte ,4);
_dc .BigEndian .PutUint32 (_bcag ,_bfaec .SegmentNumber );if _efca ,_dgfa =_deeb .Write (_bcag );_dgfa !=nil {return 0,_fd .Wrap (_dgfa ,"\u0048e\u0061\u0064\u0065\u0072.\u0077\u0072\u0069\u0074\u0065S\u0065g\u006de\u006e\u0074\u004e\u0075\u006d\u0062\u0065r","");
};return _efca ,nil ;};func (_ccacf *PageInformationSegment )Init (h *Header ,r *_ga .Reader )(_geeg error ){_ccacf ._ecaa =r ;if _geeg =_ccacf .parseHeader ();_geeg !=nil {return _fd .Wrap (_geeg ,"P\u0061\u0067\u0065\u0049\u006e\u0066o\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065g\u006d\u0065\u006et\u002eI\u006e\u0069\u0074","");
};return nil ;};func (_fbeega *TextRegion )setParameters (_cegcc *_e .Decoder ,_eeggc ,_efgb bool ,_dgb ,_cbab uint32 ,_deda uint32 ,_acab int8 ,_adfe uint32 ,_cbedb int8 ,_decg _fe .CombinationOperator ,_cedb int8 ,_bfdge int16 ,_eabe ,_geaa ,_gbdf ,_feacf ,_acgdd ,_badb ,_cfaa ,_dggc ,_ggcb ,_edfb int8 ,_dgcag ,_aaecb []int8 ,_ggdd []*_fe .Bitmap ,_gcgdd int8 ){_fbeega ._gcaa =_cegcc ;
_fbeega .IsHuffmanEncoded =_eeggc ;_fbeega .UseRefinement =_efgb ;_fbeega .RegionInfo .BitmapWidth =_dgb ;_fbeega .RegionInfo .BitmapHeight =_cbab ;_fbeega .NumberOfSymbolInstances =_deda ;_fbeega .SbStrips =_acab ;_fbeega .NumberOfSymbols =_adfe ;_fbeega .DefaultPixel =_cbedb ;
_fbeega .CombinationOperator =_decg ;_fbeega .IsTransposed =_cedb ;_fbeega .ReferenceCorner =_bfdge ;_fbeega .SbDsOffset =_eabe ;_fbeega .SbHuffFS =_geaa ;_fbeega .SbHuffDS =_gbdf ;_fbeega .SbHuffDT =_feacf ;_fbeega .SbHuffRDWidth =_acgdd ;_fbeega .SbHuffRDHeight =_badb ;
_fbeega .SbHuffRSize =_ggcb ;_fbeega .SbHuffRDX =_cfaa ;_fbeega .SbHuffRDY =_dggc ;_fbeega .SbrTemplate =_edfb ;_fbeega .SbrATX =_dgcag ;_fbeega .SbrATY =_aaecb ;_fbeega .Symbols =_ggdd ;_fbeega ._dbbc =_gcgdd ;};func (_efba *PageInformationSegment )Encode (w _ga .BinaryWriter )(_eaca int ,_cfbe error ){const _dgca ="\u0050\u0061g\u0065\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u002e\u0045\u006eco\u0064\u0065";
_ddec :=make ([]byte ,4);_dc .BigEndian .PutUint32 (_ddec ,uint32 (_efba .PageBMWidth ));_eaca ,_cfbe =w .Write (_ddec );if _cfbe !=nil {return _eaca ,_fd .Wrap (_cfbe ,_dgca ,"\u0077\u0069\u0064t\u0068");};_dc .BigEndian .PutUint32 (_ddec ,uint32 (_efba .PageBMHeight ));
var _abab int ;_abab ,_cfbe =w .Write (_ddec );if _cfbe !=nil {return _abab +_eaca ,_fd .Wrap (_cfbe ,_dgca ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_eaca +=_abab ;_dc .BigEndian .PutUint32 (_ddec ,uint32 (_efba .ResolutionX ));_abab ,_cfbe =w .Write (_ddec );
if _cfbe !=nil {return _abab +_eaca ,_fd .Wrap (_cfbe ,_dgca ,"\u0078\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_eaca +=_abab ;_dc .BigEndian .PutUint32 (_ddec ,uint32 (_efba .ResolutionY ));if _abab ,_cfbe =w .Write (_ddec );_cfbe !=nil {return _abab +_eaca ,_fd .Wrap (_cfbe ,_dgca ,"\u0079\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");
};_eaca +=_abab ;if _cfbe =_efba .encodeFlags (w );_cfbe !=nil {return _eaca ,_fd .Wrap (_cfbe ,_dgca ,"");};_eaca ++;if _abab ,_cfbe =_efba .encodeStripingInformation (w );_cfbe !=nil {return _eaca ,_fd .Wrap (_cfbe ,_dgca ,"");};_eaca +=_abab ;return _eaca ,nil ;
};func (_cccd *SymbolDictionary )checkInput ()error {if _cccd .SdHuffDecodeHeightSelection ==2{_gg .Log .Debug ("\u0053\u0079\u006d\u0062\u006fl\u0020\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u0053e\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0070\u0065r\u006d\u0069\u0074\u0074\u0065\u0064",_cccd .SdHuffDecodeHeightSelection );
};if _cccd .SdHuffDecodeWidthSelection ==2{_gg .Log .Debug ("\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0057\u0069\u0064t\u0068\u0020\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061l\u0075\u0065\u0020\u006e\u006f\u0074 \u0070\u0065r\u006d\u0069t\u0074e\u0064",_cccd .SdHuffDecodeWidthSelection );
};if _cccd .IsHuffmanEncoded {if _cccd .SdTemplate !=0{_gg .Log .Debug ("\u0053\u0044T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e \u0030\u0029",_cccd .SdTemplate );
};if !_cccd .UseRefinementAggregation {if !_cccd .UseRefinementAggregation {if _cccd ._aggd {_gg .Log .Debug ("\u0049\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074ex\u0074\u0052\u0065\u0074\u0061\u0069n\u0065\u0064\u0020\u003d\u0020\u0074\u0072\u0075\u0065\u0020\u0028\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0066\u0061\u006cs\u0065\u0029");
_cccd ._aggd =false ;};if _cccd ._abgg {_gg .Log .Debug ("\u0069s\u0043\u006fd\u0069\u006e\u0067\u0043o\u006e\u0074\u0065x\u0074\u0055\u0073\u0065\u0064\u0020\u003d\u0020\u0074ru\u0065\u0020\u0028s\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020f\u0061\u006cs\u0065\u0029");
_cccd ._abgg =false ;};};};}else {if _cccd .SdHuffBMSizeSelection !=0{_gg .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066B\u004d\u0053\u0069\u007a\u0065\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_cccd .SdHuffBMSizeSelection =0;};if _cccd .SdHuffDecodeWidthSelection !=0{_gg .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068\u0053\u0065\u006c\u0065\u0063\u0074\u0069o\u006e\u0020\u0073\u0068\u006fu\u006c\u0064 \u0062\u0065\u0020\u0030");
_cccd .SdHuffDecodeWidthSelection =0;};if _cccd .SdHuffDecodeHeightSelection !=0{_gg .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0048e\u0069\u0067\u0068\u0074\u0053\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_cccd .SdHuffDecodeHeightSelection =0;};};if !_cccd .UseRefinementAggregation {if _cccd .SdrTemplate !=0{_gg .Log .Debug ("\u0053\u0044\u0052\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u003d\u0020\u0025\u0064\u0020\u0028s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_cccd .SdrTemplate );
_cccd .SdrTemplate =0;};};if !_cccd .IsHuffmanEncoded ||!_cccd .UseRefinementAggregation {if _cccd .SdHuffAggInstanceSelection {_gg .Log .Debug ("\u0053d\u0048\u0075f\u0066\u0041\u0067g\u0049\u006e\u0073\u0074\u0061\u006e\u0063e\u0053\u0065\u006c\u0065\u0063\u0074i\u006f\u006e\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_cccd .SdHuffAggInstanceSelection );
};};return nil ;};type Pager interface{GetSegment (int )(*Header ,error );GetBitmap ()(*_fe .Bitmap ,error );};func (_aegf *HalftoneRegion )computeY (_abada ,_bfdb int )int {return _aegf .shiftAndFill (int (_aegf .HGridY )+_abada *int (_aegf .HRegionX )-_bfdb *int (_aegf .HRegionY ));
};func (_gdba *SymbolDictionary )readNumberOfExportedSymbols ()error {_fefc ,_baee :=_gdba ._fafe .ReadBits (32);if _baee !=nil {return _baee ;};_gdba .NumberOfExportedSymbols =uint32 (_fefc &_c .MaxUint32 );return nil ;};func (_abcf *Header )writeReferredToCount (_cbfb _ga .BinaryWriter )(_ffaf int ,_agcb error ){const _aaea ="w\u0072i\u0074\u0065\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0043ou\u006e\u0074";
_abcf .RTSNumbers =make ([]int ,len (_abcf .RTSegments ));for _gfgg ,_ffd :=range _abcf .RTSegments {_abcf .RTSNumbers [_gfgg ]=int (_ffd .SegmentNumber );};if len (_abcf .RTSNumbers )<=4{var _acfb byte ;if len (_abcf .RetainBits )>=1{_acfb =_abcf .RetainBits [0];
};_acfb |=byte (len (_abcf .RTSNumbers ))<<5;if _agcb =_cbfb .WriteByte (_acfb );_agcb !=nil {return 0,_fd .Wrap (_agcb ,_aaea ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return 1,nil ;};_egaac :=uint32 (len (_abcf .RTSNumbers ));
_fadcf :=make ([]byte ,4+_aa .Ceil (len (_abcf .RTSNumbers )+1,8));_egaac |=0x7<<29;_dc .BigEndian .PutUint32 (_fadcf ,_egaac );copy (_fadcf [1:],_abcf .RetainBits );_ffaf ,_agcb =_cbfb .Write (_fadcf );if _agcb !=nil {return 0,_fd .Wrap (_agcb ,_aaea ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");
};return _ffaf ,nil ;};func (_bf *EndOfStripe )parseHeader ()error {_ae ,_df :=_bf ._ea .ReadBits (32);if _df !=nil {return _df ;};_bf ._dgd =int (_ae &_c .MaxInt32 );return nil ;};func (_gegd *RegionSegment )String ()string {_ecec :=&_ac .Builder {};_ecec .WriteString ("\u0009[\u0052E\u0047\u0049\u004f\u004e\u0020S\u0045\u0047M\u0045\u004e\u0054\u005d\u000a");
_ecec .WriteString (_da .Sprintf ("\t\u0009\u002d\u0020\u0042\u0069\u0074m\u0061\u0070\u0020\u0028\u0077\u0069d\u0074\u0068\u002c\u0020\u0068\u0065\u0069g\u0068\u0074\u0029\u0020\u005b\u0025\u0064\u0078\u0025\u0064]\u000a",_gegd .BitmapWidth ,_gegd .BitmapHeight ));
_ecec .WriteString (_da .Sprintf ("\u0009\u0009\u002d\u0020L\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0028\u0078,\u0079)\u003a\u0020\u005b\u0025\u0064\u002c\u0025d\u005d\u000a",_gegd .XLocation ,_gegd .YLocation ));_ecec .WriteString (_da .Sprintf ("\t\u0009\u002d\u0020\u0043\u006f\u006db\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070e\u0072\u0061\u0074o\u0072:\u0020\u0025\u0073",_gegd .CombinaionOperator ));
return _ecec .String ();};func (_fgea *TextRegion )decodeIds ()(int64 ,error ){const _gcdgb ="\u0064e\u0063\u006f\u0064\u0065\u0049\u0064s";if _fgea .IsHuffmanEncoded {if _fgea .SbHuffDS ==3{if _fgea ._ecaag ==nil {_bbfdb :=0;if _fgea .SbHuffFS ==3{_bbfdb ++;
};var _bbae error ;_fgea ._ecaag ,_bbae =_fgea .getUserTable (_bbfdb );if _bbae !=nil {return 0,_fd .Wrap (_bbae ,_gcdgb ,"");};};return _fgea ._ecaag .Decode (_fgea ._gedf );};_cbbd ,_bggf :=_fc .GetStandardTable (8+int (_fgea .SbHuffDS ));if _bggf !=nil {return 0,_fd .Wrap (_bggf ,_gcdgb ,"");
};return _cbbd .Decode (_fgea ._gedf );};_efbdba ,_ceeg :=_fgea ._gcaa .DecodeInt (_fgea ._gabdc );if _ceeg !=nil {return 0,_fd .Wrap (_ceeg ,_gcdgb ,"\u0063\u0078\u0049\u0041\u0044\u0053");};return int64 (_efbdba ),nil ;};func (_fae *GenericRegion )overrideAtTemplate1 (_bacc ,_egaa ,_ege ,_ecee ,_eff int )int {_bacc &=0x1FF7;
if _fae .GBAtY [0]==0&&_fae .GBAtX [0]>=-int8 (_eff ){_bacc |=(_ecee >>uint (7-(int8 (_eff )+_fae .GBAtX [0]))&0x1)<<3;}else {_bacc |=int (_fae .getPixel (_egaa +int (_fae .GBAtX [0]),_ege +int (_fae .GBAtY [0])))<<3;};return _bacc ;};func (_ecb *template0 )setIndex (_gfg *_e .DecoderStats ){_gfg .SetIndex (0x100)};
func (_gadgg *SymbolDictionary )decodeHeightClassDeltaHeightWithHuffman ()(int64 ,error ){switch _gadgg .SdHuffDecodeHeightSelection {case 0:_fbbef ,_eebc :=_fc .GetStandardTable (4);if _eebc !=nil {return 0,_eebc ;};return _fbbef .Decode (_gadgg ._fafe );
case 1:_cgcbe ,_gegg :=_fc .GetStandardTable (5);if _gegg !=nil {return 0,_gegg ;};return _cgcbe .Decode (_gadgg ._fafe );case 3:if _gadgg ._bede ==nil {_abgc ,_bgaf :=_fc .GetStandardTable (0);if _bgaf !=nil {return 0,_bgaf ;};_gadgg ._bede =_abgc ;};
return _gadgg ._bede .Decode (_gadgg ._fafe );};return 0,nil ;};func (_caaa *TableSegment )Init (h *Header ,r *_ga .Reader )error {_caaa ._afdcc =r ;return _caaa .parseHeader ();};func (_aaec *PageInformationSegment )checkInput ()error {if _aaec .PageBMHeight ==_c .MaxInt32 {if !_aaec .IsStripe {_gg .Log .Debug ("P\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0053\u0065\u0067me\u006e\u0074\u002e\u0049s\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0073\u0068ou\u006c\u0064 \u0062\u0065\u0020\u0074\u0072\u0075\u0065\u002e");
};};return nil ;};func (_ed *GenericRefinementRegion )decodeOptimized (_caf ,_gc ,_de ,_acf ,_adf ,_bgg ,_ff int )error {var (_bee error ;_dee int ;_gac int ;);_gb :=_caf -int (_ed .ReferenceDY );if _eg :=int (-_ed .ReferenceDX );_eg > 0{_dee =_eg ;};_gbf :=_ed .ReferenceBitmap .GetByteIndex (_dee ,_gb );
if _ed .ReferenceDX > 0{_gac =int (_ed .ReferenceDX );};_edd :=_ed .RegionBitmap .GetByteIndex (_gac ,_caf );switch _ed .TemplateID {case 0:_bee =_ed .decodeTemplate (_caf ,_gc ,_de ,_acf ,_adf ,_bgg ,_ff ,_edd ,_gb ,_gbf ,_ed ._fbe );case 1:_bee =_ed .decodeTemplate (_caf ,_gc ,_de ,_acf ,_adf ,_bgg ,_ff ,_edd ,_gb ,_gbf ,_ed ._ef );
};return _bee ;};func (_eae *TextRegion )GetRegionInfo ()*RegionSegment {return _eae .RegionInfo };type PatternDictionary struct{_aeeaa *_ga .Reader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;GBAtX []int8 ;GBAtY []int8 ;
IsMMREncoded bool ;HDTemplate byte ;HdpWidth byte ;HdpHeight byte ;Patterns []*_fe .Bitmap ;GrayMax uint32 ;};type RegionSegment struct{_gfga *_ga .Reader ;BitmapWidth uint32 ;BitmapHeight uint32 ;XLocation uint32 ;YLocation uint32 ;CombinaionOperator _fe .CombinationOperator ;
};var (_ Regioner =&TextRegion {};_ Segmenter =&TextRegion {};);const (TSymbolDictionary Type =0;TIntermediateTextRegion Type =4;TImmediateTextRegion Type =6;TImmediateLosslessTextRegion Type =7;TPatternDictionary Type =16;TIntermediateHalftoneRegion Type =20;
TImmediateHalftoneRegion Type =22;TImmediateLosslessHalftoneRegion Type =23;TIntermediateGenericRegion Type =36;TImmediateGenericRegion Type =38;TImmediateLosslessGenericRegion Type =39;TIntermediateGenericRefinementRegion Type =40;TImmediateGenericRefinementRegion Type =42;
TImmediateLosslessGenericRefinementRegion Type =43;TPageInformation Type =48;TEndOfPage Type =49;TEndOfStrip Type =50;TEndOfFile Type =51;TProfiles Type =52;TTables Type =53;TExtension Type =62;TBitmap Type =70;);func (_geg *GenericRegion )computeSegmentDataStructure ()error {_geg .DataOffset =_geg ._dbe .AbsolutePosition ();
_geg .DataHeaderLength =_geg .DataOffset -_geg .DataHeaderOffset ;_geg .DataLength =int64 (_geg ._dbe .AbsoluteLength ())-_geg .DataHeaderLength ;return nil ;};func (_fcef *GenericRegion )InitEncode (bm *_fe .Bitmap ,xLoc ,yLoc ,template int ,duplicateLineRemoval bool )error {const _aae ="\u0047e\u006e\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069\u006f\u006e.\u0049\u006e\u0069\u0074\u0045\u006e\u0063\u006f\u0064\u0065";
if bm ==nil {return _fd .Error (_aae ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if xLoc < 0||yLoc < 0{return _fd .Error (_aae ,"\u0078\u0020\u0061\u006e\u0064\u0020\u0079\u0020\u006c\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074h\u0061\u006e\u0020\u0030");
};_fcef .Bitmap =bm ;_fcef .GBTemplate =byte (template );switch _fcef .GBTemplate {case 0:_fcef .GBAtX =[]int8 {3,-3,2,-2};_fcef .GBAtY =[]int8 {-1,-1,-2,-2};case 1:_fcef .GBAtX =[]int8 {3};_fcef .GBAtY =[]int8 {-1};case 2,3:_fcef .GBAtX =[]int8 {2};_fcef .GBAtY =[]int8 {-1};
default:return _fd .Errorf (_aae ,"\u0070\u0072o\u0076\u0069\u0064\u0065\u0064 \u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u007b\u0030\u002c\u0031\u002c\u0032\u002c\u0033\u007d",template );
};_fcef .RegionSegment =&RegionSegment {BitmapHeight :uint32 (bm .Height ),BitmapWidth :uint32 (bm .Width ),XLocation :uint32 (xLoc ),YLocation :uint32 (yLoc )};_fcef .IsTPGDon =duplicateLineRemoval ;return nil ;};func (_ccaa *PatternDictionary )readGrayMax ()error {_bafe ,_dfeb :=_ccaa ._aeeaa .ReadBits (32);
if _dfeb !=nil {return _dfeb ;};_ccaa .GrayMax =uint32 (_bafe &_c .MaxUint32 );return nil ;};type TextRegion struct{_gedf *_ga .Reader ;RegionInfo *RegionSegment ;SbrTemplate int8 ;SbDsOffset int8 ;DefaultPixel int8 ;CombinationOperator _fe .CombinationOperator ;
IsTransposed int8 ;ReferenceCorner int16 ;LogSBStrips int16 ;UseRefinement bool ;IsHuffmanEncoded bool ;SbHuffRSize int8 ;SbHuffRDY int8 ;SbHuffRDX int8 ;SbHuffRDHeight int8 ;SbHuffRDWidth int8 ;SbHuffDT int8 ;SbHuffDS int8 ;SbHuffFS int8 ;SbrATX []int8 ;
SbrATY []int8 ;NumberOfSymbolInstances uint32 ;_feec int64 ;SbStrips int8 ;NumberOfSymbols uint32 ;RegionBitmap *_fe .Bitmap ;Symbols []*_fe .Bitmap ;_gcaa *_e .Decoder ;_dfafe *GenericRefinementRegion ;_cfea *_e .DecoderStats ;_fgeb *_e .DecoderStats ;
_gabdc *_e .DecoderStats ;_cffgb *_e .DecoderStats ;_bbac *_e .DecoderStats ;_gbgb *_e .DecoderStats ;_gcffb *_e .DecoderStats ;_ffe *_e .DecoderStats ;_cddd *_e .DecoderStats ;_fgee *_e .DecoderStats ;_fefcf *_e .DecoderStats ;_dbbc int8 ;_adaac *_fc .FixedSizeTable ;
Header *Header ;_eddd _fc .Tabler ;_ecaag _fc .Tabler ;_bege _fc .Tabler ;_gfcd _fc .Tabler ;_abee _fc .Tabler ;_gbbfa _fc .Tabler ;_ffga _fc .Tabler ;_gcfb _fc .Tabler ;_cbed ,_gfcdb map[int ]int ;_dcba []int ;_dafd *_fe .Points ;_gec *_fe .Bitmaps ;_cffe *_aa .IntSlice ;
_gfbb ,_agcc int ;_cdgc *_fe .Boxes ;};func (_ffca *SymbolDictionary )GetDictionary ()([]*_fe .Bitmap ,error ){_gg .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c-\u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){_gg .Log .Trace ("\u005b\u0053\u0059M\u0042\u004f\u004c\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
_gg .Log .Trace ("\u005b\u0053Y\u004d\u0042\u004f\u004c\u002dD\u0049\u0043\u0054\u0049\u004fN\u0041\u0052\u0059\u005d\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020\u000a\u0045\u0078\u003a\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u000a\u006e\u0065\u0077\u003a\u0027\u0025\u0073\u0027",_ffca ._fdbf ,_ffca ._cece );
}();if _ffca ._fdbf ==nil {var _daeg error ;if _ffca .UseRefinementAggregation {_ffca ._gfec =_ffca .getSbSymCodeLen ();};if !_ffca .IsHuffmanEncoded {if _daeg =_ffca .setCodingStatistics ();_daeg !=nil {return nil ,_daeg ;};};_ffca ._cece =make ([]*_fe .Bitmap ,_ffca .NumberOfNewSymbols );
var _bgca []int ;if _ffca .IsHuffmanEncoded &&!_ffca .UseRefinementAggregation {_bgca =make ([]int ,_ffca .NumberOfNewSymbols );};if _daeg =_ffca .setSymbolsArray ();_daeg !=nil {return nil ,_daeg ;};var _fadab ,_ecgf int64 ;_ffca ._ebec =0;for _ffca ._ebec < _ffca .NumberOfNewSymbols {_ecgf ,_daeg =_ffca .decodeHeightClassDeltaHeight ();
if _daeg !=nil {return nil ,_daeg ;};_fadab +=_ecgf ;var _gcbf ,_daae uint32 ;_eagf :=int64 (_ffca ._ebec );for {var _aaad int64 ;_aaad ,_daeg =_ffca .decodeDifferenceWidth ();if _cb .Is (_daeg ,_fb .ErrOOB ){break ;};if _daeg !=nil {return nil ,_daeg ;
};if _ffca ._ebec >=_ffca .NumberOfNewSymbols {break ;};_gcbf +=uint32 (_aaad );_daae +=_gcbf ;if !_ffca .IsHuffmanEncoded ||_ffca .UseRefinementAggregation {if !_ffca .UseRefinementAggregation {_daeg =_ffca .decodeDirectlyThroughGenericRegion (_gcbf ,uint32 (_fadab ));
if _daeg !=nil {return nil ,_daeg ;};}else {_daeg =_ffca .decodeAggregate (_gcbf ,uint32 (_fadab ));if _daeg !=nil {return nil ,_daeg ;};};}else if _ffca .IsHuffmanEncoded &&!_ffca .UseRefinementAggregation {_bgca [_ffca ._ebec ]=int (_gcbf );};_ffca ._ebec ++;
};if _ffca .IsHuffmanEncoded &&!_ffca .UseRefinementAggregation {var _aaf int64 ;if _ffca .SdHuffBMSizeSelection ==0{var _daag _fc .Tabler ;_daag ,_daeg =_fc .GetStandardTable (1);if _daeg !=nil {return nil ,_daeg ;};_aaf ,_daeg =_daag .Decode (_ffca ._fafe );
if _daeg !=nil {return nil ,_daeg ;};}else {_aaf ,_daeg =_ffca .huffDecodeBmSize ();if _daeg !=nil {return nil ,_daeg ;};};_ffca ._fafe .Align ();var _dafaf *_fe .Bitmap ;_dafaf ,_daeg =_ffca .decodeHeightClassCollectiveBitmap (_aaf ,uint32 (_fadab ),_daae );
if _daeg !=nil {return nil ,_daeg ;};_daeg =_ffca .decodeHeightClassBitmap (_dafaf ,_eagf ,int (_fadab ),_bgca );if _daeg !=nil {return nil ,_daeg ;};};};_adaf ,_daeg :=_ffca .getToExportFlags ();if _daeg !=nil {return nil ,_daeg ;};_ffca .setExportedSymbols (_adaf );
};return _ffca ._fdbf ,nil ;};func (_afef *TextRegion )createRegionBitmap ()error {_afef .RegionBitmap =_fe .New (int (_afef .RegionInfo .BitmapWidth ),int (_afef .RegionInfo .BitmapHeight ));if _afef .DefaultPixel !=0{_afef .RegionBitmap .SetDefaultPixel ();
};return nil ;};func (_cfgf *SymbolDictionary )encodeFlags (_caea _ga .BinaryWriter )(_gacag int ,_gdee error ){const _acbb ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _gdee =_caea .SkipBits (3);_gdee !=nil {return 0,_fd .Wrap (_gdee ,_acbb ,"\u0065\u006d\u0070\u0074\u0079\u0020\u0062\u0069\u0074\u0073");
};var _fbcb int ;if _cfgf .SdrTemplate > 0{_fbcb =1;};if _gdee =_caea .WriteBit (_fbcb );_gdee !=nil {return _gacag ,_fd .Wrap (_gdee ,_acbb ,"s\u0064\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_fbcb =0;if _cfgf .SdTemplate > 1{_fbcb =1;
};if _gdee =_caea .WriteBit (_fbcb );_gdee !=nil {return _gacag ,_fd .Wrap (_gdee ,_acbb ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_fbcb =0;if _cfgf .SdTemplate ==1||_cfgf .SdTemplate ==3{_fbcb =1;};if _gdee =_caea .WriteBit (_fbcb );
_gdee !=nil {return _gacag ,_fd .Wrap (_gdee ,_acbb ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_fbcb =0;if _cfgf ._aggd {_fbcb =1;};if _gdee =_caea .WriteBit (_fbcb );_gdee !=nil {return _gacag ,_fd .Wrap (_gdee ,_acbb ,"\u0063\u006f\u0064in\u0067\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0065\u0064");
};_fbcb =0;if _cfgf ._abgg {_fbcb =1;};if _gdee =_caea .WriteBit (_fbcb );_gdee !=nil {return _gacag ,_fd .Wrap (_gdee ,_acbb ,"\u0063\u006f\u0064\u0069ng\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0075\u0073\u0065\u0064");};_fbcb =0;if _cfgf .SdHuffAggInstanceSelection {_fbcb =1;
};if _gdee =_caea .WriteBit (_fbcb );_gdee !=nil {return _gacag ,_fd .Wrap (_gdee ,_acbb ,"\u0073\u0064\u0048\u0075\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074");};_fbcb =int (_cfgf .SdHuffBMSizeSelection );if _gdee =_caea .WriteBit (_fbcb );
_gdee !=nil {return _gacag ,_fd .Wrap (_gdee ,_acbb ,"\u0073\u0064\u0048u\u0066\u0066\u0042\u006d\u0053\u0069\u007a\u0065");};_fbcb =0;if _cfgf .SdHuffDecodeWidthSelection > 1{_fbcb =1;};if _gdee =_caea .WriteBit (_fbcb );_gdee !=nil {return _gacag ,_fd .Wrap (_gdee ,_acbb ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");
};_fbcb =0;switch _cfgf .SdHuffDecodeWidthSelection {case 1,3:_fbcb =1;};if _gdee =_caea .WriteBit (_fbcb );_gdee !=nil {return _gacag ,_fd .Wrap (_gdee ,_acbb ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_fbcb =0;if _cfgf .SdHuffDecodeHeightSelection > 1{_fbcb =1;
};if _gdee =_caea .WriteBit (_fbcb );_gdee !=nil {return _gacag ,_fd .Wrap (_gdee ,_acbb ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_fbcb =0;switch _cfgf .SdHuffDecodeHeightSelection {case 1,3:_fbcb =1;};if _gdee =_caea .WriteBit (_fbcb );
_gdee !=nil {return _gacag ,_fd .Wrap (_gdee ,_acbb ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_fbcb =0;if _cfgf .UseRefinementAggregation {_fbcb =1;};if _gdee =_caea .WriteBit (_fbcb );_gdee !=nil {return _gacag ,_fd .Wrap (_gdee ,_acbb ,"\u0073\u0064\u0052\u0065\u0066\u0041\u0067\u0067");
};_fbcb =0;if _cfgf .IsHuffmanEncoded {_fbcb =1;};if _gdee =_caea .WriteBit (_fbcb );_gdee !=nil {return _gacag ,_fd .Wrap (_gdee ,_acbb ,"\u0073\u0064\u0048\u0075\u0066\u0066");};return 2,nil ;};func (_dbadb *TextRegion )readHuffmanFlags ()error {var (_dbecc int ;
_agae uint64 ;_eabb error ;);_ ,_eabb =_dbadb ._gedf .ReadBit ();if _eabb !=nil {return _eabb ;};_dbecc ,_eabb =_dbadb ._gedf .ReadBit ();if _eabb !=nil {return _eabb ;};_dbadb .SbHuffRSize =int8 (_dbecc );_agae ,_eabb =_dbadb ._gedf .ReadBits (2);if _eabb !=nil {return _eabb ;
};_dbadb .SbHuffRDY =int8 (_agae )&0xf;_agae ,_eabb =_dbadb ._gedf .ReadBits (2);if _eabb !=nil {return _eabb ;};_dbadb .SbHuffRDX =int8 (_agae )&0xf;_agae ,_eabb =_dbadb ._gedf .ReadBits (2);if _eabb !=nil {return _eabb ;};_dbadb .SbHuffRDHeight =int8 (_agae )&0xf;
_agae ,_eabb =_dbadb ._gedf .ReadBits (2);if _eabb !=nil {return _eabb ;};_dbadb .SbHuffRDWidth =int8 (_agae )&0xf;_agae ,_eabb =_dbadb ._gedf .ReadBits (2);if _eabb !=nil {return _eabb ;};_dbadb .SbHuffDT =int8 (_agae )&0xf;_agae ,_eabb =_dbadb ._gedf .ReadBits (2);
if _eabb !=nil {return _eabb ;};_dbadb .SbHuffDS =int8 (_agae )&0xf;_agae ,_eabb =_dbadb ._gedf .ReadBits (2);if _eabb !=nil {return _eabb ;};_dbadb .SbHuffFS =int8 (_agae )&0xf;return nil ;};func (_bbfa *TextRegion )decodeRdw ()(int64 ,error ){const _cbeac ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064w";
if _bbfa .IsHuffmanEncoded {if _bbfa .SbHuffRDWidth ==3{if _bbfa ._gfcd ==nil {var (_gfbd int ;_abcg error ;);if _bbfa .SbHuffFS ==3{_gfbd ++;};if _bbfa .SbHuffDS ==3{_gfbd ++;};if _bbfa .SbHuffDT ==3{_gfbd ++;};_bbfa ._gfcd ,_abcg =_bbfa .getUserTable (_gfbd );
if _abcg !=nil {return 0,_fd .Wrap (_abcg ,_cbeac ,"");};};return _bbfa ._gfcd .Decode (_bbfa ._gedf );};_gaegd ,_fcfg :=_fc .GetStandardTable (14+int (_bbfa .SbHuffRDWidth ));if _fcfg !=nil {return 0,_fd .Wrap (_fcfg ,_cbeac ,"");};return _gaegd .Decode (_bbfa ._gedf );
};_bccce ,_egcd :=_bbfa ._gcaa .DecodeInt (_bbfa ._gbgb );if _egcd !=nil {return 0,_fd .Wrap (_egcd ,_cbeac ,"");};return int64 (_bccce ),nil ;};