//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package segments ;import (_dgf "encoding/binary";_ca "errors";_fa "fmt";_cdg "github.com/unidoc/unipdf/v3/common";_g "github.com/unidoc/unipdf/v3/internal/bitwise";_db "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_b "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";
_df "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/arithmetic";_fd "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/huffman";_dc "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/mmr";_cd "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/arithmetic";
_fe "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_ce "github.com/unidoc/unipdf/v3/internal/jbig2/internal";_e "golang.org/x/xerrors";_c "image";_dg "io";_a "math";_fb "strings";_f "time";);func (_dbb *GenericRegion )setParametersMMR (_dfcd bool ,_aafg ,_aga int64 ,_ddde ,_aaab uint32 ,_bfge byte ,_dbbd ,_fgdg bool ,_adga ,_cff []int8 ){_dbb .DataOffset =_aafg ;
_dbb .DataLength =_aga ;_dbb .RegionSegment =&RegionSegment {};_dbb .RegionSegment .BitmapHeight =_ddde ;_dbb .RegionSegment .BitmapWidth =_aaab ;_dbb .GBTemplate =_bfge ;_dbb .IsMMREncoded =_dfcd ;_dbb .IsTPGDon =_dbbd ;_dbb .GBAtX =_adga ;_dbb .GBAtY =_cff ;
};func (_ffg *GenericRefinementRegion )overrideAtTemplate0 (_ebeg ,_efc ,_acba ,_cea ,_ebeb int )int {if _ffg ._ad [0]{_ebeg &=0xfff7;if _ffg .GrAtY [0]==0&&int (_ffg .GrAtX [0])>=-_ebeb {_ebeg |=(_cea >>uint (7-(_ebeb +int (_ffg .GrAtX [0])))&0x1)<<3;
}else {_ebeg |=_ffg .getPixel (_ffg .RegionBitmap ,_efc +int (_ffg .GrAtX [0]),_acba +int (_ffg .GrAtY [0]))<<3;};};if _ffg ._ad [1]{_ebeg &=0xefff;if _ffg .GrAtY [1]==0&&int (_ffg .GrAtX [1])>=-_ebeb {_ebeg |=(_cea >>uint (7-(_ebeb +int (_ffg .GrAtX [1])))&0x1)<<12;
}else {_ebeg |=_ffg .getPixel (_ffg .ReferenceBitmap ,_efc +int (_ffg .GrAtX [1]),_acba +int (_ffg .GrAtY [1]));};};return _ebeg ;};func (_bgf *template1 )form (_adb ,_gdb ,_bab ,_bage ,_cfg int16 )int16 {return ((_adb &0x02)<<8)|(_gdb <<6)|((_bab &0x03)<<4)|(_bage <<1)|_cfg ;
};var (_geg Segmenter ;_fdfg =map[Type ]func ()Segmenter {TSymbolDictionary :func ()Segmenter {return &SymbolDictionary {}},TIntermediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateLosslessTextRegion :func ()Segmenter {return &TextRegion {}},TPatternDictionary :func ()Segmenter {return &PatternDictionary {}},TIntermediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateLosslessHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TIntermediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateLosslessGenericRegion :func ()Segmenter {return &GenericRegion {}},TIntermediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateLosslessGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TPageInformation :func ()Segmenter {return &PageInformationSegment {}},TEndOfPage :func ()Segmenter {return _geg },TEndOfStrip :func ()Segmenter {return &EndOfStripe {}},TEndOfFile :func ()Segmenter {return _geg },TProfiles :func ()Segmenter {return _geg },TTables :func ()Segmenter {return &TableSegment {}},TExtension :func ()Segmenter {return _geg },TBitmap :func ()Segmenter {return _geg }};
);func (_cdc *template0 )form (_gbc ,_gbf ,_bbfg ,_cab ,_bee int16 )int16 {return (_gbc <<10)|(_gbf <<7)|(_bbfg <<4)|(_cab <<1)|_bee ;};func (_ggf *GenericRefinementRegion )decodeTypicalPredictedLine (_ag ,_cad ,_ba ,_fcf ,_fcc ,_bb int )error {_egc :=_ag -int (_ggf .ReferenceDY );
_bg :=_ggf .ReferenceBitmap .GetByteIndex (0,_egc );_dgd :=_ggf .RegionBitmap .GetByteIndex (0,_ag );var _efa error ;switch _ggf .TemplateID {case 0:_efa =_ggf .decodeTypicalPredictedLineTemplate0 (_ag ,_cad ,_ba ,_fcf ,_fcc ,_bb ,_dgd ,_egc ,_bg );case 1:_efa =_ggf .decodeTypicalPredictedLineTemplate1 (_ag ,_cad ,_ba ,_fcf ,_fcc ,_bb ,_dgd ,_egc ,_bg );
};return _efa ;};func (_bbcb *PatternDictionary )readGrayMax ()error {_gddc ,_babgd :=_bbcb ._aaaf .ReadBits (32);if _babgd !=nil {return _babgd ;};_bbcb .GrayMax =uint32 (_gddc &_a .MaxUint32 );return nil ;};func (_fgbf *SymbolDictionary )getSbSymCodeLen ()int8 {_cgge :=int8 (_a .Ceil (_a .Log (float64 (_fgbf ._aebfb +_fgbf .NumberOfNewSymbols ))/_a .Log (2)));
if _fgbf .IsHuffmanEncoded &&_cgge < 1{return 1;};return _cgge ;};var _ _fd .BasicTabler =&TableSegment {};func (_deed *PageInformationSegment )readContainsRefinement ()error {_ddbe ,_cace :=_deed ._gdc .ReadBit ();if _cace !=nil {return _cace ;};if _ddbe ==1{_deed ._ceff =true ;
};return nil ;};func (_ddedd *SymbolDictionary )addSymbol (_cfad Regioner )error {_gbdc ,_cefa :=_cfad .GetRegionBitmap ();if _cefa !=nil {return _cefa ;};_ddedd ._caeg [_ddedd ._dded ]=_gbdc ;_ddedd ._efce =append (_ddedd ._efce ,_gbdc );_cdg .Log .Trace ("\u005b\u0053YM\u0042\u004f\u004c \u0044\u0049\u0043\u0054ION\u0041RY\u005d\u0020\u0041\u0064\u0064\u0065\u0064 s\u0079\u006d\u0062\u006f\u006c\u003a\u0020%\u0073",_gbdc );
return nil ;};func (_cee *GenericRefinementRegion )updateOverride ()error {if _cee .GrAtX ==nil ||_cee .GrAtY ==nil {return _ca .New ("\u0041\u0054\u0020\u0070\u0069\u0078\u0065\u006c\u0073\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");};if len (_cee .GrAtX )!=len (_cee .GrAtY ){return _ca .New ("A\u0054\u0020\u0070\u0069xe\u006c \u0069\u006e\u0063\u006f\u006es\u0069\u0073\u0074\u0065\u006e\u0074");
};_cee ._ad =make ([]bool ,len (_cee .GrAtX ));switch _cee .TemplateID {case 0:if _cee .GrAtX [0]!=-1&&_cee .GrAtY [0]!=-1{_cee ._ad [0]=true ;_cee ._gb =true ;};if _cee .GrAtX [1]!=-1&&_cee .GrAtY [1]!=-1{_cee ._ad [1]=true ;_cee ._gb =true ;};case 1:_cee ._gb =false ;
};return nil ;};func (_fg *GenericRefinementRegion )Init (header *Header ,r _g .StreamReader )error {_fg ._dbg =header ;_fg ._eea =r ;_fg .RegionInfo =NewRegionSegment (r );return _fg .parseHeader ();};func (_dbfg *HalftoneRegion )computeGrayScalePlanes (_ddag []*_b .Bitmap ,_gead int )([][]int ,error ){_geaf :=make ([][]int ,_dbfg .HGridHeight );
for _fbfc :=0;_fbfc < len (_geaf );_fbfc ++{_geaf [_fbfc ]=make ([]int ,_dbfg .HGridWidth );};for _eefd :=0;_eefd < int (_dbfg .HGridHeight );_eefd ++{for _faed :=0;_faed < int (_dbfg .HGridWidth );_faed +=8{var _fffc int ;if _ebf :=int (_dbfg .HGridWidth )-_faed ;
_ebf > 8{_fffc =8;}else {_fffc =_ebf ;};_fbd :=_ddag [0].GetByteIndex (_faed ,_eefd );for _eccg :=0;_eccg < _fffc ;_eccg ++{_cgad :=_eccg +_faed ;_geaf [_eefd ][_cgad ]=0;for _egcb :=0;_egcb < _gead ;_egcb ++{_edebf ,_abfc :=_ddag [_egcb ].GetByte (_fbd );
if _abfc !=nil {return nil ,_abfc ;};_gffd :=_edebf >>uint (7-_cgad &7);_gdag :=_gffd &1;_cfee :=1<<uint (_egcb );_ddeg :=int (_gdag )*_cfee ;_geaf [_eefd ][_cgad ]+=_ddeg ;};};};};return _geaf ,nil ;};func (_fabf *TableSegment )StreamReader ()_g .StreamReader {return _fabf ._eega };
type template1 struct{};func (_fadb *Header )readNumberOfReferredToSegments (_caca _g .StreamReader )(uint64 ,error ){const _ddac ="\u0072\u0065\u0061\u0064\u004e\u0075\u006d\u0062\u0065\u0072O\u0066\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
_gdadb ,_feb :=_caca .ReadBits (3);if _feb !=nil {return 0,_fe .Wrap (_feb ,_ddac ,"\u0063\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0072\u0074\u0073");};_gdadb &=0xf;var _cgcc []byte ;if _gdadb <=4{_cgcc =make ([]byte ,5);for _aec :=0;_aec <=4;_aec ++{_ebg ,_fbdf :=_caca .ReadBit ();
if _fbdf !=nil {return 0,_fe .Wrap (_fbdf ,_ddac ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_cgcc [_aec ]=byte (_ebg );};}else {_gdadb ,_feb =_caca .ReadBits (29);if _feb !=nil {return 0,_feb ;};_gdadb &=_a .MaxInt32 ;_dagc :=(_gdadb +8)>>3;
_dagc <<=3;_cgcc =make ([]byte ,_dagc );var _ecfe uint64 ;for _ecfe =0;_ecfe < _dagc ;_ecfe ++{_edae ,_dcfc :=_caca .ReadBit ();if _dcfc !=nil {return 0,_fe .Wrap (_dcfc ,_ddac ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_cgcc [_ecfe ]=byte (_edae );
};};return _gdadb ,nil ;};func NewHeader (d Documenter ,r _g .StreamReader ,offset int64 ,organizationType OrganizationType )(*Header ,error ){_adgf :=&Header {Reader :r };if _cbeab :=_adgf .parse (d ,r ,offset ,organizationType );_cbeab !=nil {return nil ,_fe .Wrap (_cbeab ,"\u004ee\u0077\u0048\u0065\u0061\u0064\u0065r","");
};return _adgf ,nil ;};type template0 struct{};var _ templater =&template1 {};func (_bcca *SymbolDictionary )decodeHeightClassCollectiveBitmap (_adde int64 ,_edgae ,_dddb uint32 )(*_b .Bitmap ,error ){if _adde ==0{_ccee :=_b .New (int (_dddb ),int (_edgae ));
var (_aabb byte ;_ecbcge error ;);for _fbfd :=0;_fbfd < len (_ccee .Data );_fbfd ++{_aabb ,_ecbcge =_bcca ._ggba .ReadByte ();if _ecbcge !=nil {return nil ,_ecbcge ;};if _ecbcge =_ccee .SetByte (_fbfd ,_aabb );_ecbcge !=nil {return nil ,_ecbcge ;};};return _ccee ,nil ;
};if _bcca ._dgdc ==nil {_bcca ._dgdc =NewGenericRegion (_bcca ._ggba );};_bcca ._dgdc .setParameters (true ,_bcca ._ggba .StreamPosition (),_adde ,_edgae ,_dddb );_cgfa ,_beed :=_bcca ._dgdc .GetRegionBitmap ();if _beed !=nil {return nil ,_beed ;};return _cgfa ,nil ;
};func (_bd *GenericRefinementRegion )decodeSLTP ()(int ,error ){_bd .Template .setIndex (_bd ._ac );return _bd ._abd .DecodeBit (_bd ._ac );};type GenericRegion struct{_cdfe _g .StreamReader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;
DataLength int64 ;RegionSegment *RegionSegment ;UseExtTemplates bool ;IsTPGDon bool ;GBTemplate byte ;IsMMREncoded bool ;UseMMR bool ;GBAtX []int8 ;GBAtY []int8 ;GBAtOverride []bool ;_bfb bool ;Bitmap *_b .Bitmap ;_bea *_df .Decoder ;_gfd *_df .DecoderStats ;
_beca *_dc .Decoder ;};func (_dgc *RegionSegment )Size ()int {return 17};func (_cffbb *SymbolDictionary )huffDecodeRefAggNInst ()(int64 ,error ){if !_cffbb .SdHuffAggInstanceSelection {_efcd ,_adcd :=_fd .GetStandardTable (1);if _adcd !=nil {return 0,_adcd ;
};return _efcd .Decode (_cffbb ._ggba );};if _cffbb ._gbffb ==nil {var (_fgcb int ;_gfgge error ;);if _cffbb .SdHuffDecodeHeightSelection ==3{_fgcb ++;};if _cffbb .SdHuffDecodeWidthSelection ==3{_fgcb ++;};if _cffbb .SdHuffBMSizeSelection ==3{_fgcb ++;
};_cffbb ._gbffb ,_gfgge =_cffbb .getUserTable (_fgcb );if _gfgge !=nil {return 0,_gfgge ;};};return _cffbb ._gbffb .Decode (_cffbb ._ggba );};func (_fgbc *PatternDictionary )checkInput ()error {if _fgbc .HdpHeight < 1||_fgbc .HdpWidth < 1{return _ca .New ("in\u0076\u0061l\u0069\u0064\u0020\u0048\u0065\u0061\u0064\u0065\u0072 \u0056\u0061\u006c\u0075\u0065\u003a\u0020\u0057\u0069\u0064\u0074\u0068\u002f\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020g\u0072e\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020z\u0065\u0072o");
};if _fgbc .IsMMREncoded {if _fgbc .HDTemplate !=0{_cdg .Log .Debug ("\u0076\u0061\u0072\u0069\u0061\u0062\u006c\u0065\u0020\u0048\u0044\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e \u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030");
};};return nil ;};type templater interface{form (_faf ,_edb ,_gcc ,_dfe ,_afbd int16 )int16 ;setIndex (_efg *_df .DecoderStats );};func (_fce *Header )String ()string {_cgd :=&_fb .Builder {};_cgd .WriteString ("\u000a[\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045A\u0044\u0045\u0052\u005d\u000a");
_cgd .WriteString (_fa .Sprintf ("\t\u002d\u0020\u0053\u0065gm\u0065n\u0074\u004e\u0075\u006d\u0062e\u0072\u003a\u0020\u0025\u0076\u000a",_fce .SegmentNumber ));_cgd .WriteString (_fa .Sprintf ("\u0009\u002d\u0020T\u0079\u0070\u0065\u003a\u0020\u0025\u0076\u000a",_fce .Type ));
_cgd .WriteString (_fa .Sprintf ("\u0009-\u0020R\u0065\u0074\u0061\u0069\u006eF\u006c\u0061g\u003a\u0020\u0025\u0076\u000a",_fce .RetainFlag ));_cgd .WriteString (_fa .Sprintf ("\u0009\u002d\u0020Pa\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_fce .PageAssociation ));
_cgd .WriteString (_fa .Sprintf ("\u0009\u002d\u0020\u0050\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074i\u006fn\u0046\u0069\u0065\u006c\u0064\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_fce .PageAssociationFieldSize ));
_cgd .WriteString ("\u0009-\u0020R\u0054\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u0053\u003a\u000a");for _ ,_abdg :=range _fce .RTSNumbers {_cgd .WriteString (_fa .Sprintf ("\u0009\t\u002d\u0020\u0025\u0064\u000a",_abdg ));};_cgd .WriteString (_fa .Sprintf ("\t\u002d \u0048\u0065\u0061\u0064\u0065\u0072\u004c\u0065n\u0067\u0074\u0068\u003a %\u0076\u000a",_fce .HeaderLength ));
_cgd .WriteString (_fa .Sprintf ("\u0009-\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061L\u0065n\u0067\u0074\u0068\u003a\u0020\u0025\u0076\n",_fce .SegmentDataLength ));_cgd .WriteString (_fa .Sprintf ("\u0009\u002d\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074D\u0061\u0074\u0061\u0053\u0074\u0061\u0072t\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0076\u000a",_fce .SegmentDataStartOffset ));
return _cgd .String ();};var _ SegmentEncoder =&GenericRegion {};func (_bag *GenericRefinementRegion )parseHeader ()(_eead error ){_cdg .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0048e\u0061\u0064e\u0072\u002e\u002e\u002e");
_egfe :=_f .Now ();defer func (){if _eead ==nil {_cdg .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045G\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020h\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0069\u006e\u0069\u0073\u0068id\u0020\u0069\u006e\u003a\u0020\u0025\u0064\u0020\u006e\u0073",_f .Since (_egfe ).Nanoseconds ());
}else {_cdg .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0068\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0073",_eead );
};}();if _eead =_bag .RegionInfo .parseHeader ();_eead !=nil {return _eead ;};_ ,_eead =_bag ._eea .ReadBits (6);if _eead !=nil {return _eead ;};_bag .IsTPGROn ,_eead =_bag ._eea .ReadBool ();if _eead !=nil {return _eead ;};var _baf int ;_baf ,_eead =_bag ._eea .ReadBit ();
if _eead !=nil {return _eead ;};_bag .TemplateID =int8 (_baf );switch _bag .TemplateID {case 0:_bag .Template =_bag ._cf ;if _eead =_bag .readAtPixels ();_eead !=nil {return ;};case 1:_bag .Template =_bag ._ab ;};return nil ;};func (_cfaf *HalftoneRegion )parseHeader ()error {if _cdce :=_cfaf .RegionSegment .parseHeader ();
_cdce !=nil {return _cdce ;};_ebace ,_gbgd :=_cfaf ._dfbda .ReadBit ();if _gbgd !=nil {return _gbgd ;};_cfaf .HDefaultPixel =int8 (_ebace );_eafa ,_gbgd :=_cfaf ._dfbda .ReadBits (3);if _gbgd !=nil {return _gbgd ;};_cfaf .CombinationOperator =_b .CombinationOperator (_eafa &0xf);
_ebace ,_gbgd =_cfaf ._dfbda .ReadBit ();if _gbgd !=nil {return _gbgd ;};if _ebace ==1{_cfaf .HSkipEnabled =true ;};_eafa ,_gbgd =_cfaf ._dfbda .ReadBits (2);if _gbgd !=nil {return _gbgd ;};_cfaf .HTemplate =byte (_eafa &0xf);_ebace ,_gbgd =_cfaf ._dfbda .ReadBit ();
if _gbgd !=nil {return _gbgd ;};if _ebace ==1{_cfaf .IsMMREncoded =true ;};_eafa ,_gbgd =_cfaf ._dfbda .ReadBits (32);if _gbgd !=nil {return _gbgd ;};_cfaf .HGridWidth =uint32 (_eafa &_a .MaxUint32 );_eafa ,_gbgd =_cfaf ._dfbda .ReadBits (32);if _gbgd !=nil {return _gbgd ;
};_cfaf .HGridHeight =uint32 (_eafa &_a .MaxUint32 );_eafa ,_gbgd =_cfaf ._dfbda .ReadBits (32);if _gbgd !=nil {return _gbgd ;};_cfaf .HGridX =int32 (_eafa &_a .MaxInt32 );_eafa ,_gbgd =_cfaf ._dfbda .ReadBits (32);if _gbgd !=nil {return _gbgd ;};_cfaf .HGridY =int32 (_eafa &_a .MaxInt32 );
_eafa ,_gbgd =_cfaf ._dfbda .ReadBits (16);if _gbgd !=nil {return _gbgd ;};_cfaf .HRegionX =uint16 (_eafa &_a .MaxUint16 );_eafa ,_gbgd =_cfaf ._dfbda .ReadBits (16);if _gbgd !=nil {return _gbgd ;};_cfaf .HRegionY =uint16 (_eafa &_a .MaxUint16 );if _gbgd =_cfaf .computeSegmentDataStructure ();
_gbgd !=nil {return _gbgd ;};return _cfaf .checkInput ();};func (_eedb *TextRegion )decodeID ()(int64 ,error ){if _eedb .IsHuffmanEncoded {if _eedb ._ebcd ==nil {_ddgd ,_egecb :=_eedb ._gaad .ReadBits (byte (_eedb ._acfb ));return int64 (_ddgd ),_egecb ;
};return _eedb ._ebcd .Decode (_eedb ._gaad );};return _eedb ._abaf .DecodeIAID (uint64 (_eedb ._acfb ),_eedb ._abag );};type Type int ;func (_fffa *GenericRegion )readGBAtPixels (_gebg int )error {const _aaaa ="\u0072\u0065\u0061\u0064\u0047\u0042\u0041\u0074\u0050i\u0078\u0065\u006c\u0073";
_fffa .GBAtX =make ([]int8 ,_gebg );_fffa .GBAtY =make ([]int8 ,_gebg );for _cdfea :=0;_cdfea < _gebg ;_cdfea ++{_accg ,_dcce :=_fffa ._cdfe .ReadByte ();if _dcce !=nil {return _fe .Wrapf (_dcce ,_aaaa ,"\u0058\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_cdfea );
};_fffa .GBAtX [_cdfea ]=int8 (_accg );_accg ,_dcce =_fffa ._cdfe .ReadByte ();if _dcce !=nil {return _fe .Wrapf (_dcce ,_aaaa ,"\u0059\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_cdfea );};_fffa .GBAtY [_cdfea ]=int8 (_accg );};return nil ;
};func (_cdfd *PageInformationSegment )readCombinationOperatorOverrideAllowed ()error {_edfb ,_efbb :=_cdfd ._gdc .ReadBit ();if _efbb !=nil {return _efbb ;};if _edfb ==1{_cdfd ._bga =true ;};return nil ;};func (_eafbb *PatternDictionary )Init (h *Header ,r _g .StreamReader )error {_eafbb ._aaaf =r ;
return _eafbb .parseHeader ();};func (_abaa *SymbolDictionary )readNumberOfExportedSymbols ()error {_ccfb ,_ccdg :=_abaa ._ggba .ReadBits (32);if _ccdg !=nil {return _ccdg ;};_abaa .NumberOfExportedSymbols =uint32 (_ccfb &_a .MaxUint32 );return nil ;};
func (_ced *SymbolDictionary )String ()string {_eggcb :=&_fb .Builder {};_eggcb .WriteString ("\n\u005b\u0053\u0059\u004dBO\u004c-\u0044\u0049\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u000a");_eggcb .WriteString (_fa .Sprintf ("\u0009-\u0020S\u0064\u0072\u0054\u0065\u006dp\u006c\u0061t\u0065\u0020\u0025\u0076\u000a",_ced .SdrTemplate ));
_eggcb .WriteString (_fa .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0025\u0076\u000a",_ced .SdTemplate ));_eggcb .WriteString (_fa .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006eg\u0043\u006f\u006e\u0074\u0065\u0078\u0074R\u0065\u0074\u0061\u0069\u006e\u0065\u0064\u0020\u0025\u0076\u000a",_ced ._bedb ));
_eggcb .WriteString (_fa .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074\u0065\u0078\u0074\u0055\u0073\u0065\u0064 \u0025\u0076\u000a",_ced ._addd ));_eggcb .WriteString (_fa .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_ced .SdHuffAggInstanceSelection ));
_eggcb .WriteString (_fa .Sprintf ("\u0009\u002d\u0020\u0053d\u0048\u0075\u0066\u0066\u0042\u004d\u0053\u0069\u007a\u0065S\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020%\u0076\u000a",_ced .SdHuffBMSizeSelection ));_eggcb .WriteString (_fa .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_ced .SdHuffDecodeWidthSelection ));
_eggcb .WriteString (_fa .Sprintf ("\u0009\u002d\u0020Sd\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064e\u0048e\u0069g\u0068t\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_ced .SdHuffDecodeHeightSelection ));_eggcb .WriteString (_fa .Sprintf ("\u0009\u002d\u0020U\u0073\u0065\u0052\u0065f\u0069\u006e\u0065\u006d\u0065\u006e\u0074A\u0067\u0067\u0072\u0065\u0067\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_ced .UseRefinementAggregation ));
_eggcb .WriteString (_fa .Sprintf ("\u0009\u002d\u0020is\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045\u006e\u0063\u006f\u0064\u0065\u0064\u0020\u0025\u0076\u000a",_ced .IsHuffmanEncoded ));_eggcb .WriteString (_fa .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_ced .SdATX ));
_eggcb .WriteString (_fa .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_ced .SdATY ));_eggcb .WriteString (_fa .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_ced .SdrATX ));
_eggcb .WriteString (_fa .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_ced .SdrATY ));_eggcb .WriteString (_fa .Sprintf ("\u0009\u002d\u0020\u004e\u0075\u006d\u0062\u0065\u0072\u004ff\u0045\u0078\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_ced .NumberOfExportedSymbols ));
_eggcb .WriteString (_fa .Sprintf ("\u0009-\u0020\u004e\u0075\u006db\u0065\u0072\u004f\u0066\u004ee\u0077S\u0079m\u0062\u006f\u006c\u0073\u0020\u0025\u0076\n",_ced .NumberOfNewSymbols ));_eggcb .WriteString (_fa .Sprintf ("\u0009\u002d\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u004ff\u0049\u006d\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_ced ._aebfb ));
_eggcb .WriteString (_fa .Sprintf ("\u0009\u002d \u006e\u0075\u006d\u0062\u0065\u0072\u004f\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0064\u0053\u0079\u006d\u0062\u006f\u006c\u0073 %\u0076\u000a",_ced ._dded ));return _eggcb .String ();};func (_bgdc *Header )readSegmentDataLength (_fagg _g .StreamReader )(_aba error ){_bgdc .SegmentDataLength ,_aba =_fagg .ReadBits (32);
if _aba !=nil {return _aba ;};_bgdc .SegmentDataLength &=_a .MaxInt32 ;if _bgdc .SegmentDataLength > _fagg .Length (){_bgdc .SegmentDataLength =_fagg .Length ();};return nil ;};func (_fgff *TextRegion )decodeRdx ()(int64 ,error ){const _bdfbd ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064x";
if _fgff .IsHuffmanEncoded {if _fgff .SbHuffRDX ==3{if _fgff ._acgb ==nil {var (_cbbdb int ;_cgdd error ;);if _fgff .SbHuffFS ==3{_cbbdb ++;};if _fgff .SbHuffDS ==3{_cbbdb ++;};if _fgff .SbHuffDT ==3{_cbbdb ++;};if _fgff .SbHuffRDWidth ==3{_cbbdb ++;};
if _fgff .SbHuffRDHeight ==3{_cbbdb ++;};_fgff ._acgb ,_cgdd =_fgff .getUserTable (_cbbdb );if _cgdd !=nil {return 0,_fe .Wrap (_cgdd ,_bdfbd ,"");};};return _fgff ._acgb .Decode (_fgff ._gaad );};_gdae ,_ecag :=_fd .GetStandardTable (14+int (_fgff .SbHuffRDX ));
if _ecag !=nil {return 0,_fe .Wrap (_ecag ,_bdfbd ,"");};return _gdae .Decode (_fgff ._gaad );};_adddg ,_fcba :=_fgff ._abaf .DecodeInt (_fgff ._fffad );if _fcba !=nil {return 0,_fe .Wrap (_fcba ,_bdfbd ,"");};return int64 (_adddg ),nil ;};func (_bdca *GenericRegion )overrideAtTemplate0a (_fabc ,_aabd ,_cca ,_feac ,_faee ,_gefa int )int {if _bdca .GBAtOverride [0]{_fabc &=0xFFEF;
if _bdca .GBAtY [0]==0&&_bdca .GBAtX [0]>=-int8 (_faee ){_fabc |=(_feac >>uint (int8 (_gefa )-_bdca .GBAtX [0]&0x1))<<4;}else {_fabc |=int (_bdca .getPixel (_aabd +int (_bdca .GBAtX [0]),_cca +int (_bdca .GBAtY [0])))<<4;};};if _bdca .GBAtOverride [1]{_fabc &=0xFBFF;
if _bdca .GBAtY [1]==0&&_bdca .GBAtX [1]>=-int8 (_faee ){_fabc |=(_feac >>uint (int8 (_gefa )-_bdca .GBAtX [1]&0x1))<<10;}else {_fabc |=int (_bdca .getPixel (_aabd +int (_bdca .GBAtX [1]),_cca +int (_bdca .GBAtY [1])))<<10;};};if _bdca .GBAtOverride [2]{_fabc &=0xF7FF;
if _bdca .GBAtY [2]==0&&_bdca .GBAtX [2]>=-int8 (_faee ){_fabc |=(_feac >>uint (int8 (_gefa )-_bdca .GBAtX [2]&0x1))<<11;}else {_fabc |=int (_bdca .getPixel (_aabd +int (_bdca .GBAtX [2]),_cca +int (_bdca .GBAtY [2])))<<11;};};if _bdca .GBAtOverride [3]{_fabc &=0x7FFF;
if _bdca .GBAtY [3]==0&&_bdca .GBAtX [3]>=-int8 (_faee ){_fabc |=(_feac >>uint (int8 (_gefa )-_bdca .GBAtX [3]&0x1))<<15;}else {_fabc |=int (_bdca .getPixel (_aabd +int (_bdca .GBAtX [3]),_cca +int (_bdca .GBAtY [3])))<<15;};};return _fabc ;};func (_addf *TextRegion )setCodingStatistics ()error {if _addf ._geca ==nil {_addf ._geca =_df .NewStats (512,1);
};if _addf ._cbdf ==nil {_addf ._cbdf =_df .NewStats (512,1);};if _addf ._dbbc ==nil {_addf ._dbbc =_df .NewStats (512,1);};if _addf ._edgaf ==nil {_addf ._edgaf =_df .NewStats (512,1);};if _addf ._ebbg ==nil {_addf ._ebbg =_df .NewStats (512,1);};if _addf ._bfabb ==nil {_addf ._bfabb =_df .NewStats (512,1);
};if _addf ._ceada ==nil {_addf ._ceada =_df .NewStats (512,1);};if _addf ._abag ==nil {_addf ._abag =_df .NewStats (1<<uint (_addf ._acfb ),1);};if _addf ._fffad ==nil {_addf ._fffad =_df .NewStats (512,1);};if _addf ._fceb ==nil {_addf ._fceb =_df .NewStats (512,1);
};if _addf ._abaf ==nil {var _bbgd error ;_addf ._abaf ,_bbgd =_df .New (_addf ._gaad );if _bbgd !=nil {return _bbgd ;};};return nil ;};func (_bcce *TextRegion )InitEncode (globalSymbolsMap ,localSymbolsMap map[int ]int ,comps []int ,inLL *_b .Points ,symbols *_b .Bitmaps ,classIDs *_db .IntSlice ,boxes *_b .Boxes ,width ,height ,symBits int ){_bcce .RegionInfo =&RegionSegment {BitmapWidth :uint32 (width ),BitmapHeight :uint32 (height )};
_bcce ._bgafc =globalSymbolsMap ;_bcce ._efee =localSymbolsMap ;_bcce ._adaac =comps ;_bcce ._bdg =inLL ;_bcce ._gecc =symbols ;_bcce ._badb =classIDs ;_bcce ._dbab =boxes ;_bcce ._bgffg =symBits ;};func (_dbfac *TableSegment )HtLow ()int32 {return _dbfac ._ffga };
func (_dag *GenericRegion )setParameters (_bbd bool ,_ddd ,_gbd int64 ,_cbc ,_fbga uint32 ){_dag .IsMMREncoded =_bbd ;_dag .DataOffset =_ddd ;_dag .DataLength =_gbd ;_dag .RegionSegment .BitmapHeight =_cbc ;_dag .RegionSegment .BitmapWidth =_fbga ;_dag ._beca =nil ;
_dag .Bitmap =nil ;};func (_dab *HalftoneRegion )shiftAndFill (_eee int )int {_eee >>=8;if _eee < 0{_egfc :=int (_a .Log (float64 (_fgb (_eee )))/_a .Log (2));_bedc :=31-_egfc ;for _ffde :=1;_ffde < _bedc ;_ffde ++{_eee |=1<<uint (31-_ffde );};};return _eee ;
};func (_fcce *HalftoneRegion )computeX (_fabd ,_cac int )int {return _fcce .shiftAndFill (int (_fcce .HGridX )+_fabd *int (_fcce .HRegionY )+_cac *int (_fcce .HRegionX ));};func (_ffaf *SymbolDictionary )Init (h *Header ,r _g .StreamReader )error {_ffaf .Header =h ;
_ffaf ._ggba =r ;return _ffaf .parseHeader ();};func (_acabd *PageInformationSegment )parseHeader ()(_dcga error ){_cdg .Log .Trace ("\u005b\u0050\u0061\u0067\u0065I\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067m\u0065\u006e\u0074\u005d\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u002e\u002e");
defer func (){var _gage ="[\u0050\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072m\u0061\u0074\u0069\u006f\u006e\u0053\u0065gm\u0065\u006e\u0074\u005d \u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065ad\u0065\u0072 \u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064";
if _dcga !=nil {_gage +="\u0020\u0077\u0069t\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u0020"+_dcga .Error ();}else {_gage +="\u0020\u0073\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079";};_cdg .Log .Trace (_gage );}();if _dcga =_acabd .readWidthAndHeight ();
_dcga !=nil {return _dcga ;};if _dcga =_acabd .readResolution ();_dcga !=nil {return _dcga ;};_ ,_dcga =_acabd ._gdc .ReadBit ();if _dcga !=nil {return _dcga ;};if _dcga =_acabd .readCombinationOperatorOverrideAllowed ();_dcga !=nil {return _dcga ;};if _dcga =_acabd .readRequiresAuxiliaryBuffer ();
_dcga !=nil {return _dcga ;};if _dcga =_acabd .readCombinationOperator ();_dcga !=nil {return _dcga ;};if _dcga =_acabd .readDefaultPixelValue ();_dcga !=nil {return _dcga ;};if _dcga =_acabd .readContainsRefinement ();_dcga !=nil {return _dcga ;};if _dcga =_acabd .readIsLossless ();
_dcga !=nil {return _dcga ;};if _dcga =_acabd .readIsStriped ();_dcga !=nil {return _dcga ;};if _dcga =_acabd .readMaxStripeSize ();_dcga !=nil {return _dcga ;};if _dcga =_acabd .checkInput ();_dcga !=nil {return _dcga ;};_cdg .Log .Trace ("\u0025\u0073",_acabd );
return nil ;};func (_geda *TextRegion )GetRegionInfo ()*RegionSegment {return _geda .RegionInfo };func (_aacb *Header )CleanSegmentData (){if _aacb .SegmentData !=nil {_aacb .SegmentData =nil ;};};func (_fafc *SymbolDictionary )checkInput ()error {if _fafc .SdHuffDecodeHeightSelection ==2{_cdg .Log .Debug ("\u0053\u0079\u006d\u0062\u006fl\u0020\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u0053e\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0070\u0065r\u006d\u0069\u0074\u0074\u0065\u0064",_fafc .SdHuffDecodeHeightSelection );
};if _fafc .SdHuffDecodeWidthSelection ==2{_cdg .Log .Debug ("\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0057\u0069\u0064t\u0068\u0020\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061l\u0075\u0065\u0020\u006e\u006f\u0074 \u0070\u0065r\u006d\u0069t\u0074e\u0064",_fafc .SdHuffDecodeWidthSelection );
};if _fafc .IsHuffmanEncoded {if _fafc .SdTemplate !=0{_cdg .Log .Debug ("\u0053\u0044T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e \u0030\u0029",_fafc .SdTemplate );
};if !_fafc .UseRefinementAggregation {if !_fafc .UseRefinementAggregation {if _fafc ._bedb {_cdg .Log .Debug ("\u0049\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074ex\u0074\u0052\u0065\u0074\u0061\u0069n\u0065\u0064\u0020\u003d\u0020\u0074\u0072\u0075\u0065\u0020\u0028\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0066\u0061\u006cs\u0065\u0029");
_fafc ._bedb =false ;};if _fafc ._addd {_cdg .Log .Debug ("\u0069s\u0043\u006fd\u0069\u006e\u0067\u0043o\u006e\u0074\u0065x\u0074\u0055\u0073\u0065\u0064\u0020\u003d\u0020\u0074ru\u0065\u0020\u0028s\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020f\u0061\u006cs\u0065\u0029");
_fafc ._addd =false ;};};};}else {if _fafc .SdHuffBMSizeSelection !=0{_cdg .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066B\u004d\u0053\u0069\u007a\u0065\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_fafc .SdHuffBMSizeSelection =0;};if _fafc .SdHuffDecodeWidthSelection !=0{_cdg .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068\u0053\u0065\u006c\u0065\u0063\u0074\u0069o\u006e\u0020\u0073\u0068\u006fu\u006c\u0064 \u0062\u0065\u0020\u0030");
_fafc .SdHuffDecodeWidthSelection =0;};if _fafc .SdHuffDecodeHeightSelection !=0{_cdg .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0048e\u0069\u0067\u0068\u0074\u0053\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_fafc .SdHuffDecodeHeightSelection =0;};};if !_fafc .UseRefinementAggregation {if _fafc .SdrTemplate !=0{_cdg .Log .Debug ("\u0053\u0044\u0052\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u003d\u0020\u0025\u0064\u0020\u0028s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_fafc .SdrTemplate );
_fafc .SdrTemplate =0;};};if !_fafc .IsHuffmanEncoded ||!_fafc .UseRefinementAggregation {if _fafc .SdHuffAggInstanceSelection {_cdg .Log .Debug ("\u0053d\u0048\u0075f\u0066\u0041\u0067g\u0049\u006e\u0073\u0074\u0061\u006e\u0063e\u0053\u0065\u006c\u0065\u0063\u0074i\u006f\u006e\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_fafc .SdHuffAggInstanceSelection );
};};return nil ;};func (_degg *TextRegion )decodeRdw ()(int64 ,error ){const _fafd ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064w";if _degg .IsHuffmanEncoded {if _degg .SbHuffRDWidth ==3{if _degg ._bdfga ==nil {var (_agfc int ;_abac error ;);if _degg .SbHuffFS ==3{_agfc ++;
};if _degg .SbHuffDS ==3{_agfc ++;};if _degg .SbHuffDT ==3{_agfc ++;};_degg ._bdfga ,_abac =_degg .getUserTable (_agfc );if _abac !=nil {return 0,_fe .Wrap (_abac ,_fafd ,"");};};return _degg ._bdfga .Decode (_degg ._gaad );};_ggda ,_dccgg :=_fd .GetStandardTable (14+int (_degg .SbHuffRDWidth ));
if _dccgg !=nil {return 0,_fe .Wrap (_dccgg ,_fafd ,"");};return _ggda .Decode (_degg ._gaad );};_fbgae ,_bce :=_degg ._abaf .DecodeInt (_degg ._bfabb );if _bce !=nil {return 0,_fe .Wrap (_bce ,_fafd ,"");};return int64 (_fbgae ),nil ;};func (_bed *GenericRegion )String ()string {_bcfb :=&_fb .Builder {};
_bcfb .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_bcfb .WriteString (_bed .RegionSegment .String ()+"\u000a");_bcfb .WriteString (_fa .Sprintf ("\u0009\u002d\u0020Us\u0065\u0045\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_bed .UseExtTemplates ));
_bcfb .WriteString (_fa .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0044\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_bed .IsTPGDon ));_bcfb .WriteString (_fa .Sprintf ("\u0009-\u0020G\u0042\u0054\u0065\u006d\u0070l\u0061\u0074e\u003a\u0020\u0025\u0064\u000a",_bed .GBTemplate ));
_bcfb .WriteString (_fa .Sprintf ("\t\u002d \u0049\u0073\u004d\u004d\u0052\u0045\u006e\u0063o\u0064\u0065\u0064\u003a %\u0076\u000a",_bed .IsMMREncoded ));_bcfb .WriteString (_fa .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_bed .GBAtX ));
_bcfb .WriteString (_fa .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_bed .GBAtY ));_bcfb .WriteString (_fa .Sprintf ("\t\u002d \u0047\u0042\u0041\u0074\u004f\u0076\u0065\u0072r\u0069\u0064\u0065\u003a %\u0076\u000a",_bed .GBAtOverride ));
return _bcfb .String ();};func (_cgb *EndOfStripe )LineNumber ()int {return _cgb ._cg };func (_ddgfg *TextRegion )decodeDT ()(_gdggc int64 ,_fgef error ){if _ddgfg .IsHuffmanEncoded {if _ddgfg .SbHuffDT ==3{_gdggc ,_fgef =_ddgfg ._edgc .Decode (_ddgfg ._gaad );
if _fgef !=nil {return 0,_fgef ;};}else {var _dagf _fd .Tabler ;_dagf ,_fgef =_fd .GetStandardTable (11+int (_ddgfg .SbHuffDT ));if _fgef !=nil {return 0,_fgef ;};_gdggc ,_fgef =_dagf .Decode (_ddgfg ._gaad );if _fgef !=nil {return 0,_fgef ;};};}else {var _dbcg int32 ;
_dbcg ,_fgef =_ddgfg ._abaf .DecodeInt (_ddgfg ._geca );if _fgef !=nil {return ;};_gdggc =int64 (_dbcg );};_gdggc *=int64 (_ddgfg .SbStrips );return _gdggc ,nil ;};func (_aebf *GenericRegion )overrideAtTemplate1 (_deca ,_eegd ,_ecc ,_ddec ,_fbf int )int {_deca &=0x1FF7;
if _aebf .GBAtY [0]==0&&_aebf .GBAtX [0]>=-int8 (_fbf ){_deca |=(_ddec >>uint (7-(int8 (_fbf )+_aebf .GBAtX [0]))&0x1)<<3;}else {_deca |=int (_aebf .getPixel (_eegd +int (_aebf .GBAtX [0]),_ecc +int (_aebf .GBAtY [0])))<<3;};return _deca ;};func (_fgab *PageInformationSegment )readMaxStripeSize ()error {_ecff ,_bebd :=_fgab ._gdc .ReadBits (15);
if _bebd !=nil {return _bebd ;};_fgab .MaxStripeSize =uint16 (_ecff &_a .MaxUint16 );return nil ;};func (_gbde *HalftoneRegion )GetPatterns ()([]*_b .Bitmap ,error ){var (_dbc []*_b .Bitmap ;_gbgb error ;);for _ ,_cdgg :=range _gbde ._agag .RTSegments {var _eecg Segmenter ;
_eecg ,_gbgb =_cdgg .GetSegmentData ();if _gbgb !=nil {_cdg .Log .Debug ("\u0047e\u0074\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061 \u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025v",_gbgb );return nil ,_gbgb ;};_bef ,_gda :=_eecg .(*PatternDictionary );
if !_gda {_gbgb =_fa .Errorf ("\u0072e\u006c\u0061t\u0065\u0064\u0020\u0073e\u0067\u006d\u0065n\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0070at\u0074\u0065\u0072n\u0020\u0064i\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u003a \u0025\u0054",_eecg );
return nil ,_gbgb ;};var _fdad []*_b .Bitmap ;_fdad ,_gbgb =_bef .GetDictionary ();if _gbgb !=nil {_cdg .Log .Debug ("\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_gbgb );
return nil ,_gbgb ;};_dbc =append (_dbc ,_fdad ...);};return _dbc ,nil ;};func (_bebb *TextRegion )decodeRdy ()(int64 ,error ){const _eddad ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064y";if _bebb .IsHuffmanEncoded {if _bebb .SbHuffRDY ==3{if _bebb ._ddcc ==nil {var (_ebab int ;
_dffb error ;);if _bebb .SbHuffFS ==3{_ebab ++;};if _bebb .SbHuffDS ==3{_ebab ++;};if _bebb .SbHuffDT ==3{_ebab ++;};if _bebb .SbHuffRDWidth ==3{_ebab ++;};if _bebb .SbHuffRDHeight ==3{_ebab ++;};if _bebb .SbHuffRDX ==3{_ebab ++;};_bebb ._ddcc ,_dffb =_bebb .getUserTable (_ebab );
if _dffb !=nil {return 0,_fe .Wrap (_dffb ,_eddad ,"");};};return _bebb ._ddcc .Decode (_bebb ._gaad );};_ffee ,_fdbgb :=_fd .GetStandardTable (14+int (_bebb .SbHuffRDY ));if _fdbgb !=nil {return 0,_fdbgb ;};return _ffee .Decode (_bebb ._gaad );};_cbbfba ,_beaba :=_bebb ._abaf .DecodeInt (_bebb ._fceb );
if _beaba !=nil {return 0,_fe .Wrap (_beaba ,_eddad ,"");};return int64 (_cbbfba ),nil ;};type Regioner interface{GetRegionBitmap ()(*_b .Bitmap ,error );GetRegionInfo ()*RegionSegment ;};func (_aggd *SymbolDictionary )decodeAggregate (_ggge ,_bgae uint32 )error {var (_faec int64 ;
_bdfd error ;);if _aggd .IsHuffmanEncoded {_faec ,_bdfd =_aggd .huffDecodeRefAggNInst ();if _bdfd !=nil {return _bdfd ;};}else {_aded ,_agage :=_aggd ._aaae .DecodeInt (_aggd ._dddg );if _agage !=nil {return _agage ;};_faec =int64 (_aded );};if _faec > 1{return _aggd .decodeThroughTextRegion (_ggge ,_bgae ,uint32 (_faec ));
}else if _faec ==1{return _aggd .decodeRefinedSymbol (_ggge ,_bgae );};return nil ;};func (_cgce *PageInformationSegment )checkInput ()error {if _cgce .PageBMHeight ==_a .MaxInt32 {if !_cgce .IsStripe {_cdg .Log .Debug ("P\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0053\u0065\u0067me\u006e\u0074\u002e\u0049s\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0073\u0068ou\u006c\u0064 \u0062\u0065\u0020\u0074\u0072\u0075\u0065\u002e");
};};return nil ;};func (_gafa *TextRegion )Encode (w _g .BinaryWriter )(_cbecc int ,_cec error ){const _bff ="\u0054\u0065\u0078\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u002e\u0045n\u0063\u006f\u0064\u0065";if _cbecc ,_cec =_gafa .RegionInfo .Encode (w );
_cec !=nil {return _cbecc ,_fe .Wrap (_cec ,_bff ,"");};var _daad int ;if _daad ,_cec =_gafa .encodeFlags (w );_cec !=nil {return _cbecc ,_fe .Wrap (_cec ,_bff ,"");};_cbecc +=_daad ;if _daad ,_cec =_gafa .encodeSymbols (w );_cec !=nil {return _cbecc ,_fe .Wrap (_cec ,_bff ,"");
};_cbecc +=_daad ;return _cbecc ,nil ;};func (_aab *GenericRegion )decodeSLTP ()(int ,error ){switch _aab .GBTemplate {case 0:_aab ._gfd .SetIndex (0x9B25);case 1:_aab ._gfd .SetIndex (0x795);case 2:_aab ._gfd .SetIndex (0xE5);case 3:_aab ._gfd .SetIndex (0x195);
};return _aab ._bea .DecodeBit (_aab ._gfd );};func (_ecfb *TableSegment )parseHeader ()error {var (_fffd int ;_gfbc uint64 ;_ceffd error ;);_fffd ,_ceffd =_ecfb ._eega .ReadBit ();if _ceffd !=nil {return _ceffd ;};if _fffd ==1{return _fa .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0061\u0062\u006c\u0065 \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0064e\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u002e\u0020\u0042\u002e\u0032\u002e1\u0020\u0043\u006f\u0064\u0065\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0042\u0069\u0074\u0020\u0037\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u007a\u0065\u0072\u006f\u002e\u0020\u0057a\u0073\u003a \u0025\u0064",_fffd );
};if _gfbc ,_ceffd =_ecfb ._eega .ReadBits (3);_ceffd !=nil {return _ceffd ;};_ecfb ._gcdg =(int32 (_gfbc )+1)&0xf;if _gfbc ,_ceffd =_ecfb ._eega .ReadBits (3);_ceffd !=nil {return _ceffd ;};_ecfb ._aeda =(int32 (_gfbc )+1)&0xf;if _gfbc ,_ceffd =_ecfb ._eega .ReadBits (32);
_ceffd !=nil {return _ceffd ;};_ecfb ._ffga =int32 (_gfbc &_a .MaxInt32 );if _gfbc ,_ceffd =_ecfb ._eega .ReadBits (32);_ceffd !=nil {return _ceffd ;};_ecfb ._dgaa =int32 (_gfbc &_a .MaxInt32 );return nil ;};func (_ebaf *Header )pageSize ()uint {if _ebaf .PageAssociation <=255{return 1;
};return 4;};func (_cbcg *GenericRegion )setParametersWithAt (_fbbf bool ,_ddba byte ,_efcg ,_afea bool ,_cceg ,_caea []int8 ,_edf ,_feca uint32 ,_gea *_df .DecoderStats ,_cabg *_df .Decoder ){_cbcg .IsMMREncoded =_fbbf ;_cbcg .GBTemplate =_ddba ;_cbcg .IsTPGDon =_efcg ;
_cbcg .GBAtX =_cceg ;_cbcg .GBAtY =_caea ;_cbcg .RegionSegment .BitmapHeight =_feca ;_cbcg .RegionSegment .BitmapWidth =_edf ;_cbcg ._beca =nil ;_cbcg .Bitmap =nil ;if _gea !=nil {_cbcg ._gfd =_gea ;};if _cabg !=nil {_cbcg ._bea =_cabg ;};_cdg .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049O\u004e\u005d\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073\u0020\u0053\u0044\u0041t\u003a\u0020\u0025\u0073",_cbcg );
};func (_acb *GenericRefinementRegion )GetRegionBitmap ()(*_b .Bitmap ,error ){var _ead error ;_cdg .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _ead !=nil {_cdg .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0047\u0065\u0074R\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006dap\u0020\u0066a\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_ead );
}else {_cdg .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _acb .RegionBitmap !=nil {return _acb .RegionBitmap ,nil ;};_adc :=0;if _acb .ReferenceBitmap ==nil {_acb .ReferenceBitmap ,_ead =_acb .getGrReference ();if _ead !=nil {return nil ,_ead ;};};if _acb ._abd ==nil {_acb ._abd ,_ead =_df .New (_acb ._eea );
if _ead !=nil {return nil ,_ead ;};};if _acb ._ac ==nil {_acb ._ac =_df .NewStats (8192,1);};_acb .RegionBitmap =_b .New (int (_acb .RegionInfo .BitmapWidth ),int (_acb .RegionInfo .BitmapHeight ));if _acb .TemplateID ==0{if _ead =_acb .updateOverride ();
_ead !=nil {return nil ,_ead ;};};_dbf :=(_acb .RegionBitmap .Width +7)&-8;var _af int ;if _acb .IsTPGROn {_af =int (-_acb .ReferenceDY )*_acb .ReferenceBitmap .RowStride ;};_dd :=_af +1;for _de :=0;_de < _acb .RegionBitmap .Height ;_de ++{if _acb .IsTPGROn {_dbfe ,_eeb :=_acb .decodeSLTP ();
if _eeb !=nil {return nil ,_eeb ;};_adc ^=_dbfe ;};if _adc ==0{_ead =_acb .decodeOptimized (_de ,_acb .RegionBitmap .Width ,_acb .RegionBitmap .RowStride ,_acb .ReferenceBitmap .RowStride ,_dbf ,_af ,_dd );if _ead !=nil {return nil ,_ead ;};}else {_ead =_acb .decodeTypicalPredictedLine (_de ,_acb .RegionBitmap .Width ,_acb .RegionBitmap .RowStride ,_acb .ReferenceBitmap .RowStride ,_dbf ,_af );
if _ead !=nil {return nil ,_ead ;};};};return _acb .RegionBitmap ,nil ;};func (_beae *SymbolDictionary )readRefinementAtPixels (_dfgc int )error {_beae .SdrATX =make ([]int8 ,_dfgc );_beae .SdrATY =make ([]int8 ,_dfgc );var (_dgdd byte ;_gfbe error ;);
for _aedg :=0;_aedg < _dfgc ;_aedg ++{_dgdd ,_gfbe =_beae ._ggba .ReadByte ();if _gfbe !=nil {return _gfbe ;};_beae .SdrATX [_aedg ]=int8 (_dgdd );_dgdd ,_gfbe =_beae ._ggba .ReadByte ();if _gfbe !=nil {return _gfbe ;};_beae .SdrATY [_aedg ]=int8 (_dgdd );
};return nil ;};func (_fdae *GenericRegion )updateOverrideFlags ()error {const _agfg ="\u0075\u0070\u0064\u0061te\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _fdae .GBAtX ==nil ||_fdae .GBAtY ==nil {return nil ;};if len (_fdae .GBAtX )!=len (_fdae .GBAtY ){return _fe .Errorf (_agfg ,"i\u006eco\u0073i\u0073t\u0065\u006e\u0074\u0020\u0041T\u0020\u0070\u0069x\u0065\u006c\u002e\u0020\u0041m\u006f\u0075\u006et\u0020\u006f\u0066\u0020\u0027\u0078\u0027\u0020\u0070\u0069\u0078e\u006c\u0073\u003a %d\u002c\u0020\u0041\u006d\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0027\u0079\u0027\u0020\u0070\u0069\u0078e\u006cs\u003a\u0020\u0025\u0064",len (_fdae .GBAtX ),len (_fdae .GBAtY ));
};_fdae .GBAtOverride =make ([]bool ,len (_fdae .GBAtX ));switch _fdae .GBTemplate {case 0:if !_fdae .UseExtTemplates {if _fdae .GBAtX [0]!=3||_fdae .GBAtY [0]!=-1{_fdae .setOverrideFlag (0);};if _fdae .GBAtX [1]!=-3||_fdae .GBAtY [1]!=-1{_fdae .setOverrideFlag (1);
};if _fdae .GBAtX [2]!=2||_fdae .GBAtY [2]!=-2{_fdae .setOverrideFlag (2);};if _fdae .GBAtX [3]!=-2||_fdae .GBAtY [3]!=-2{_fdae .setOverrideFlag (3);};}else {if _fdae .GBAtX [0]!=-2||_fdae .GBAtY [0]!=0{_fdae .setOverrideFlag (0);};if _fdae .GBAtX [1]!=0||_fdae .GBAtY [1]!=-2{_fdae .setOverrideFlag (1);
};if _fdae .GBAtX [2]!=-2||_fdae .GBAtY [2]!=-1{_fdae .setOverrideFlag (2);};if _fdae .GBAtX [3]!=-1||_fdae .GBAtY [3]!=-2{_fdae .setOverrideFlag (3);};if _fdae .GBAtX [4]!=1||_fdae .GBAtY [4]!=-2{_fdae .setOverrideFlag (4);};if _fdae .GBAtX [5]!=2||_fdae .GBAtY [5]!=-1{_fdae .setOverrideFlag (5);
};if _fdae .GBAtX [6]!=-3||_fdae .GBAtY [6]!=0{_fdae .setOverrideFlag (6);};if _fdae .GBAtX [7]!=-4||_fdae .GBAtY [7]!=0{_fdae .setOverrideFlag (7);};if _fdae .GBAtX [8]!=2||_fdae .GBAtY [8]!=-2{_fdae .setOverrideFlag (8);};if _fdae .GBAtX [9]!=3||_fdae .GBAtY [9]!=-1{_fdae .setOverrideFlag (9);
};if _fdae .GBAtX [10]!=-2||_fdae .GBAtY [10]!=-2{_fdae .setOverrideFlag (10);};if _fdae .GBAtX [11]!=-3||_fdae .GBAtY [11]!=-1{_fdae .setOverrideFlag (11);};};case 1:if _fdae .GBAtX [0]!=3||_fdae .GBAtY [0]!=-1{_fdae .setOverrideFlag (0);};case 2:if _fdae .GBAtX [0]!=2||_fdae .GBAtY [0]!=-1{_fdae .setOverrideFlag (0);
};case 3:if _fdae .GBAtX [0]!=2||_fdae .GBAtY [0]!=-1{_fdae .setOverrideFlag (0);};};return nil ;};type PatternDictionary struct{_aaaf _g .StreamReader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;GBAtX []int8 ;GBAtY []int8 ;
IsMMREncoded bool ;HDTemplate byte ;HdpWidth byte ;HdpHeight byte ;Patterns []*_b .Bitmap ;GrayMax uint32 ;};func (_egdde *TextRegion )getUserTable (_cafc int )(_fd .Tabler ,error ){const _baba ="\u0067\u0065\u0074U\u0073\u0065\u0072\u0054\u0061\u0062\u006c\u0065";
var _fcfd int ;for _ ,_fccg :=range _egdde .Header .RTSegments {if _fccg .Type ==53{if _fcfd ==_cafc {_ceabg ,_abbda :=_fccg .GetSegmentData ();if _abbda !=nil {return nil ,_abbda ;};_ffgf ,_acca :=_ceabg .(*TableSegment );if !_acca {_cdg .Log .Debug (_fa .Sprintf ("\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079p\u0065\u00205\u0033\u0020\u002d\u0020\u0061\u006ed\u0020in\u0064\u0065\u0078\u003a\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_fccg .SegmentNumber ));
return nil ,_fe .Error (_baba ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079\u0070e\u0020\u0035\u0033\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u002a\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};return _fd .NewEncodedTable (_ffgf );};_fcfd ++;};};return nil ,nil ;};func (_eeced *TextRegion )parseHeader ()error {var _eged error ;_cdg .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069n\u0073\u002e\u002e\u002e");
defer func (){if _eged !=nil {_cdg .Log .Trace ("\u005b\u0054\u0045\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044E\u0052\u005d\u0020\u0066\u0061i\u006c\u0065d\u002e\u0020\u0025\u0076",_eged );
}else {_cdg .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069s\u0068\u0065\u0064\u002e");};}();if _eged =_eeced .RegionInfo .parseHeader ();
_eged !=nil {return _eged ;};if _eged =_eeced .readRegionFlags ();_eged !=nil {return _eged ;};if _eeced .IsHuffmanEncoded {if _eged =_eeced .readHuffmanFlags ();_eged !=nil {return _eged ;};};if _eged =_eeced .readUseRefinement ();_eged !=nil {return _eged ;
};if _eged =_eeced .readAmountOfSymbolInstances ();_eged !=nil {return _eged ;};if _eged =_eeced .getSymbols ();_eged !=nil {return _eged ;};if _eged =_eeced .computeSymbolCodeLength ();_eged !=nil {return _eged ;};if _eged =_eeced .checkInput ();_eged !=nil {return _eged ;
};_cdg .Log .Trace ("\u0025\u0073",_eeced .String ());return nil ;};func (_afbg *RegionSegment )readCombinationOperator ()error {_edcca ,_ecdae :=_afbg ._ffce .ReadBits (3);if _ecdae !=nil {return _ecdae ;};_afbg .CombinaionOperator =_b .CombinationOperator (_edcca &0xF);
return nil ;};func (_bdfe *Header )readReferredToSegmentNumbers (_fdbg _g .StreamReader ,_cbd int )([]int ,error ){const _ddcf ="\u0072\u0065\u0061\u0064R\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053e\u0067m\u0065\u006e\u0074\u004e\u0075\u006d\u0062e\u0072\u0073";
_bddg :=make ([]int ,_cbd );if _cbd > 0{_bdfe .RTSegments =make ([]*Header ,_cbd );var (_cba uint64 ;_gee error ;);for _dafe :=0;_dafe < _cbd ;_dafe ++{_cba ,_gee =_fdbg .ReadBits (byte (_bdfe .referenceSize ())<<3);if _gee !=nil {return nil ,_fe .Wrapf (_gee ,_ddcf ,"\u0027\u0025\u0064\u0027 \u0072\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0020\u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u0075\u006db\u0065\u0072",_dafe );
};_bddg [_dafe ]=int (_cba &_a .MaxInt32 );};};return _bddg ,nil ;};func (_efb *PageInformationSegment )CombinationOperator ()_b .CombinationOperator {return _efb ._gfbf };func (_gebd *PatternDictionary )parseHeader ()error {_cdg .Log .Trace ("\u005b\u0050\u0041\u0054\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054I\u004f\u004e\u0041\u0052\u0059\u005d[\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d\u0020b\u0065\u0067\u0069\u006e");
defer func (){_cdg .Log .Trace ("\u005b\u0050\u0041T\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u005b\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
}();_ ,_fbcf :=_gebd ._aaaf .ReadBits (5);if _fbcf !=nil {return _fbcf ;};if _fbcf =_gebd .readTemplate ();_fbcf !=nil {return _fbcf ;};if _fbcf =_gebd .readIsMMREncoded ();_fbcf !=nil {return _fbcf ;};if _fbcf =_gebd .readPatternWidthAndHeight ();_fbcf !=nil {return _fbcf ;
};if _fbcf =_gebd .readGrayMax ();_fbcf !=nil {return _fbcf ;};if _fbcf =_gebd .computeSegmentDataStructure ();_fbcf !=nil {return _fbcf ;};return _gebd .checkInput ();};func (_cfe *GenericRegion )decodeTemplate0a (_feaa ,_dccg ,_gbfb int ,_eba ,_edeb int )(_fada error ){const _gcbg ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0061";
var (_daf ,_dcaa int ;_gaa ,_fgd int ;_ecf byte ;_ddb int ;);if _feaa >=1{_ecf ,_fada =_cfe .Bitmap .GetByte (_edeb );if _fada !=nil {return _fe .Wrap (_fada ,_gcbg ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_gaa =int (_ecf );};if _feaa >=2{_ecf ,_fada =_cfe .Bitmap .GetByte (_edeb -_cfe .Bitmap .RowStride );
if _fada !=nil {return _fe .Wrap (_fada ,_gcbg ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_fgd =int (_ecf )<<6;};_daf =(_gaa &0xf0)|(_fgd &0x3800);for _aee :=0;_aee < _gbfb ;_aee =_ddb {var (_eac byte ;_cdcd int ;);_ddb =_aee +8;if _dfeb :=_dccg -_aee ;
_dfeb > 8{_cdcd =8;}else {_cdcd =_dfeb ;};if _feaa > 0{_gaa <<=8;if _ddb < _dccg {_ecf ,_fada =_cfe .Bitmap .GetByte (_edeb +1);if _fada !=nil {return _fe .Wrap (_fada ,_gcbg ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_gaa |=int (_ecf );};};
if _feaa > 1{_bcb :=_edeb -_cfe .Bitmap .RowStride +1;_fgd <<=8;if _ddb < _dccg {_ecf ,_fada =_cfe .Bitmap .GetByte (_bcb );if _fada !=nil {return _fe .Wrap (_fada ,_gcbg ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_fgd |=int (_ecf )<<6;}else {_fgd |=0;
};};for _beg :=0;_beg < _cdcd ;_beg ++{_cbe :=uint (7-_beg );if _cfe ._bfb {_dcaa =_cfe .overrideAtTemplate0a (_daf ,_aee +_beg ,_feaa ,int (_eac ),_beg ,int (_cbe ));_cfe ._gfd .SetIndex (int32 (_dcaa ));}else {_cfe ._gfd .SetIndex (int32 (_daf ));};var _acf int ;
_acf ,_fada =_cfe ._bea .DecodeBit (_cfe ._gfd );if _fada !=nil {return _fe .Wrap (_fada ,_gcbg ,"");};_eac |=byte (_acf )<<_cbe ;_daf =((_daf &0x7bf7)<<1)|_acf |((_gaa >>_cbe )&0x10)|((_fgd >>_cbe )&0x800);};if _eeada :=_cfe .Bitmap .SetByte (_eba ,_eac );
_eeada !=nil {return _fe .Wrap (_eeada ,_gcbg ,"");};_eba ++;_edeb ++;};return nil ;};func (_gfdb *PatternDictionary )readTemplate ()error {_bbbf ,_gadec :=_gfdb ._aaaf .ReadBits (2);if _gadec !=nil {return _gadec ;};_gfdb .HDTemplate =byte (_bbbf );return nil ;
};func (_eca *SymbolDictionary )setInSyms ()error {if _eca .Header .RTSegments !=nil {return _eca .retrieveImportSymbols ();};_eca ._ccdf =make ([]*_b .Bitmap ,0);return nil ;};func (_dgceb *TextRegion )setParameters (_fbcd *_df .Decoder ,_ccaa ,_bfbaf bool ,_efae ,_gdaga uint32 ,_bgcf uint32 ,_fafe int8 ,_fefca uint32 ,_bcaeb int8 ,_acdc _b .CombinationOperator ,_acad int8 ,_fddb int16 ,_afed ,_acec ,_cgcec ,_bddf ,_fbee ,_ebgb ,_fedb ,_ffec ,_abde ,_acabf int8 ,_ceef ,_abaff []int8 ,_fcab []*_b .Bitmap ,_gegb int8 ){_dgceb ._abaf =_fbcd ;
_dgceb .IsHuffmanEncoded =_ccaa ;_dgceb .UseRefinement =_bfbaf ;_dgceb .RegionInfo .BitmapWidth =_efae ;_dgceb .RegionInfo .BitmapHeight =_gdaga ;_dgceb .NumberOfSymbolInstances =_bgcf ;_dgceb .SbStrips =_fafe ;_dgceb .NumberOfSymbols =_fefca ;_dgceb .DefaultPixel =_bcaeb ;
_dgceb .CombinationOperator =_acdc ;_dgceb .IsTransposed =_acad ;_dgceb .ReferenceCorner =_fddb ;_dgceb .SbDsOffset =_afed ;_dgceb .SbHuffFS =_acec ;_dgceb .SbHuffDS =_cgcec ;_dgceb .SbHuffDT =_bddf ;_dgceb .SbHuffRDWidth =_fbee ;_dgceb .SbHuffRDHeight =_ebgb ;
_dgceb .SbHuffRSize =_abde ;_dgceb .SbHuffRDX =_fedb ;_dgceb .SbHuffRDY =_ffec ;_dgceb .SbrTemplate =_acabf ;_dgceb .SbrATX =_ceef ;_dgceb .SbrATY =_abaff ;_dgceb .Symbols =_fcab ;_dgceb ._acfb =_gegb ;};func (_gfdg *TextRegion )encodeFlags (_bcad _g .BinaryWriter )(_dcab int ,_bcbde error ){const _bgcbe ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _bcbde =_bcad .WriteBit (int (_gfdg .SbrTemplate ));_bcbde !=nil {return _dcab ,_fe .Wrap (_bcbde ,_bgcbe ,"s\u0062\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};if _ ,_bcbde =_bcad .WriteBits (uint64 (_gfdg .SbDsOffset ),5);_bcbde !=nil {return _dcab ,_fe .Wrap (_bcbde ,_bgcbe ,"\u0073\u0062\u0044\u0073\u004f\u0066\u0066\u0073\u0065\u0074");
};if _bcbde =_bcad .WriteBit (int (_gfdg .DefaultPixel ));_bcbde !=nil {return _dcab ,_fe .Wrap (_bcbde ,_bgcbe ,"\u0044\u0065\u0066a\u0075\u006c\u0074\u0050\u0069\u0078\u0065\u006c");};if _ ,_bcbde =_bcad .WriteBits (uint64 (_gfdg .CombinationOperator ),2);
_bcbde !=nil {return _dcab ,_fe .Wrap (_bcbde ,_bgcbe ,"\u0043\u006f\u006d\u0062in\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072");};if _bcbde =_bcad .WriteBit (int (_gfdg .IsTransposed ));_bcbde !=nil {return _dcab ,_fe .Wrap (_bcbde ,_bgcbe ,"\u0069\u0073\u0020\u0074\u0072\u0061\u006e\u0073\u0070\u006f\u0073\u0065\u0064");
};if _ ,_bcbde =_bcad .WriteBits (uint64 (_gfdg .ReferenceCorner ),2);_bcbde !=nil {return _dcab ,_fe .Wrap (_bcbde ,_bgcbe ,"\u0072\u0065f\u0065\u0072\u0065n\u0063\u0065\u0020\u0063\u006f\u0072\u006e\u0065\u0072");};if _ ,_bcbde =_bcad .WriteBits (uint64 (_gfdg .LogSBStrips ),2);
_bcbde !=nil {return _dcab ,_fe .Wrap (_bcbde ,_bgcbe ,"L\u006f\u0067\u0053\u0042\u0053\u0074\u0072\u0069\u0070\u0073");};var _eccae int ;if _gfdg .UseRefinement {_eccae =1;};if _bcbde =_bcad .WriteBit (_eccae );_bcbde !=nil {return _dcab ,_fe .Wrap (_bcbde ,_bgcbe ,"\u0075\u0073\u0065\u0020\u0072\u0065\u0066\u0069\u006ee\u006d\u0065\u006e\u0074");
};_eccae =0;if _gfdg .IsHuffmanEncoded {_eccae =1;};if _bcbde =_bcad .WriteBit (_eccae );_bcbde !=nil {return _dcab ,_fe .Wrap (_bcbde ,_bgcbe ,"u\u0073\u0065\u0020\u0068\u0075\u0066\u0066\u006d\u0061\u006e");};_dcab =2;return _dcab ,nil ;};func (_bfae *TextRegion )decodeDfs ()(int64 ,error ){if _bfae .IsHuffmanEncoded {if _bfae .SbHuffFS ==3{if _bfae ._dfdb ==nil {var _bbcfd error ;
_bfae ._dfdb ,_bbcfd =_bfae .getUserTable (0);if _bbcfd !=nil {return 0,_bbcfd ;};};return _bfae ._dfdb .Decode (_bfae ._gaad );};_gcda ,_cafe :=_fd .GetStandardTable (6+int (_bfae .SbHuffFS ));if _cafe !=nil {return 0,_cafe ;};return _gcda .Decode (_bfae ._gaad );
};_dfaec ,_ebefd :=_bfae ._abaf .DecodeInt (_bfae ._cbdf );if _ebefd !=nil {return 0,_ebefd ;};return int64 (_dfaec ),nil ;};func (_cceag *RegionSegment )String ()string {_cffd :=&_fb .Builder {};_cffd .WriteString ("\u0009[\u0052E\u0047\u0049\u004f\u004e\u0020S\u0045\u0047M\u0045\u004e\u0054\u005d\u000a");
_cffd .WriteString (_fa .Sprintf ("\t\u0009\u002d\u0020\u0042\u0069\u0074m\u0061\u0070\u0020\u0028\u0077\u0069d\u0074\u0068\u002c\u0020\u0068\u0065\u0069g\u0068\u0074\u0029\u0020\u005b\u0025\u0064\u0078\u0025\u0064]\u000a",_cceag .BitmapWidth ,_cceag .BitmapHeight ));
_cffd .WriteString (_fa .Sprintf ("\u0009\u0009\u002d\u0020L\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0028\u0078,\u0079)\u003a\u0020\u005b\u0025\u0064\u002c\u0025d\u005d\u000a",_cceag .XLocation ,_cceag .YLocation ));_cffd .WriteString (_fa .Sprintf ("\t\u0009\u002d\u0020\u0043\u006f\u006db\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070e\u0072\u0061\u0074o\u0072:\u0020\u0025\u0073",_cceag .CombinaionOperator ));
return _cffd .String ();};func (_bdfb *HalftoneRegion )Init (hd *Header ,r _g .StreamReader )error {_bdfb ._dfbda =r ;_bdfb ._agag =hd ;_bdfb .RegionSegment =NewRegionSegment (r );return _bdfb .parseHeader ();};func (_dbd *GenericRegion )decodeTemplate3 (_aeb ,_bfc ,_adcc int ,_ecda ,_baggb int )(_abf error ){const _abcf ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0033";
var (_ecfd ,_eggc int ;_fca int ;_dfda byte ;_egac ,_cfaa int ;);if _aeb >=1{_dfda ,_abf =_dbd .Bitmap .GetByte (_baggb );if _abf !=nil {return _fe .Wrap (_abf ,_abcf ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_fca =int (_dfda );};_ecfd =(_fca >>1)&0x70;
for _fae :=0;_fae < _adcc ;_fae =_egac {var (_fed byte ;_gae int ;);_egac =_fae +8;if _adfd :=_bfc -_fae ;_adfd > 8{_gae =8;}else {_gae =_adfd ;};if _aeb >=1{_fca <<=8;if _egac < _bfc {_dfda ,_abf =_dbd .Bitmap .GetByte (_baggb +1);if _abf !=nil {return _fe .Wrap (_abf ,_abcf ,"\u0069\u006e\u006e\u0065\u0072\u0020\u002d\u0020\u006c\u0069\u006e\u0065 \u003e\u003d\u0020\u0031");
};_fca |=int (_dfda );};};for _ada :=0;_ada < _gae ;_ada ++{if _dbd ._bfb {_eggc =_dbd .overrideAtTemplate3 (_ecfd ,_fae +_ada ,_aeb ,int (_fed ),_ada );_dbd ._gfd .SetIndex (int32 (_eggc ));}else {_dbd ._gfd .SetIndex (int32 (_ecfd ));};_cfaa ,_abf =_dbd ._bea .DecodeBit (_dbd ._gfd );
if _abf !=nil {return _fe .Wrap (_abf ,_abcf ,"");};_fed |=byte (_cfaa )<<byte (7-_ada );_ecfd =((_ecfd &0x1f7)<<1)|_cfaa |((_fca >>uint (8-_ada ))&0x010);};if _bgd :=_dbd .Bitmap .SetByte (_ecda ,_fed );_bgd !=nil {return _fe .Wrap (_bgd ,_abcf ,"");};
_ecda ++;_baggb ++;};return nil ;};func (_caa *TextRegion )decodeCurrentT ()(int64 ,error ){if _caa .SbStrips !=1{if _caa .IsHuffmanEncoded {_eagc ,_faef :=_caa ._gaad .ReadBits (byte (_caa .LogSBStrips ));return int64 (_eagc ),_faef ;};_fgdgc ,_gabeg :=_caa ._abaf .DecodeInt (_caa ._edgaf );
if _gabeg !=nil {return 0,_gabeg ;};return int64 (_fgdgc ),nil ;};return 0,nil ;};func (_efdg *GenericRefinementRegion )getPixel (_bgbc *_b .Bitmap ,_eecf ,_bbe int )int {if _eecf < 0||_eecf >=_bgbc .Width {return 0;};if _bbe < 0||_bbe >=_bgbc .Height {return 0;
};if _bgbc .GetPixel (_eecf ,_bbe ){return 1;};return 0;};func (_aebc *TextRegion )decodeSymbolInstances ()error {_gfcf ,_efcgc :=_aebc .decodeStripT ();if _efcgc !=nil {return _efcgc ;};var (_febg int64 ;_dabda uint32 ;);for _dabda < _aebc .NumberOfSymbolInstances {_gdfg ,_bgaeg :=_aebc .decodeDT ();
if _bgaeg !=nil {return _bgaeg ;};_gfcf +=_gdfg ;var _eeeb int64 ;_edce :=true ;_aebc ._dfga =0;for {if _edce {_eeeb ,_bgaeg =_aebc .decodeDfs ();if _bgaeg !=nil {return _bgaeg ;};_febg +=_eeeb ;_aebc ._dfga =_febg ;_edce =false ;}else {_eeaa ,_cdcbf :=_aebc .decodeIds ();
if _e .Is (_cdcbf ,_ce .ErrOOB ){break ;};if _cdcbf !=nil {return _cdcbf ;};if _dabda >=_aebc .NumberOfSymbolInstances {break ;};_aebc ._dfga +=_eeaa +int64 (_aebc .SbDsOffset );};_dfba ,_eddc :=_aebc .decodeCurrentT ();if _eddc !=nil {return _eddc ;};
_gdfe :=_gfcf +_dfba ;_bae ,_eddc :=_aebc .decodeID ();if _eddc !=nil {return _eddc ;};_ddbd ,_eddc :=_aebc .decodeRI ();if _eddc !=nil {return _eddc ;};_aagc ,_eddc :=_aebc .decodeIb (_ddbd ,_bae );if _eddc !=nil {return _eddc ;};if _eddc =_aebc .blit (_aagc ,_gdfe );
_eddc !=nil {return _eddc ;};_dabda ++;};};return nil ;};func (_fadd *SymbolDictionary )encodeNumSyms (_bgff _g .BinaryWriter )(_dafd int ,_ebdeb error ){const _gba ="\u0065\u006e\u0063\u006f\u0064\u0065\u004e\u0075\u006d\u0053\u0079\u006d\u0073";_gbfbb :=make ([]byte ,4);
_dgf .BigEndian .PutUint32 (_gbfbb ,_fadd .NumberOfExportedSymbols );if _dafd ,_ebdeb =_bgff .Write (_gbfbb );_ebdeb !=nil {return _dafd ,_fe .Wrap (_ebdeb ,_gba ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};_dgf .BigEndian .PutUint32 (_gbfbb ,_fadd .NumberOfNewSymbols );_caf ,_ebdeb :=_bgff .Write (_gbfbb );if _ebdeb !=nil {return _dafd ,_fe .Wrap (_ebdeb ,_gba ,"n\u0065\u0077\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};return _dafd +_caf ,nil ;
};func (_dgfa *SymbolDictionary )decodeThroughTextRegion (_fdc ,_acef ,_dbfc uint32 )error {if _dgfa ._agdg ==nil {_dgfa ._agdg =_eeec (_dgfa ._ggba ,nil );_dgfa ._agdg .setContexts (_dgfa ._adbed ,_df .NewStats (512,1),_df .NewStats (512,1),_df .NewStats (512,1),_df .NewStats (512,1),_dgfa ._dfge ,_df .NewStats (512,1),_df .NewStats (512,1),_df .NewStats (512,1),_df .NewStats (512,1));
};if _fdfa :=_dgfa .setSymbolsArray ();_fdfa !=nil {return _fdfa ;};_dgfa ._agdg .setParameters (_dgfa ._aaae ,_dgfa .IsHuffmanEncoded ,true ,_fdc ,_acef ,_dbfc ,1,_dgfa ._aebfb +_dgfa ._dded ,0,0,0,1,0,0,0,0,0,0,0,0,0,_dgfa .SdrTemplate ,_dgfa .SdrATX ,_dgfa .SdrATY ,_dgfa ._efce ,_dgfa ._cgced );
return _dgfa .addSymbol (_dgfa ._agdg );};func NewRegionSegment (r _g .StreamReader )*RegionSegment {return &RegionSegment {_ffce :r }};func (_daaa *SymbolDictionary )Encode (w _g .BinaryWriter )(_ddfc int ,_afga error ){const _ddaac ="\u0053\u0079\u006dbo\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0045\u006e\u0063\u006f\u0064\u0065";
if _daaa ==nil {return 0,_fe .Error (_ddaac ,"\u0073\u0079m\u0062\u006f\u006c\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066in\u0065\u0064");};if _ddfc ,_afga =_daaa .encodeFlags (w );_afga !=nil {return _ddfc ,_fe .Wrap (_afga ,_ddaac ,"");
};_gccf ,_afga :=_daaa .encodeATFlags (w );if _afga !=nil {return _ddfc ,_fe .Wrap (_afga ,_ddaac ,"");};_ddfc +=_gccf ;if _gccf ,_afga =_daaa .encodeRefinementATFlags (w );_afga !=nil {return _ddfc ,_fe .Wrap (_afga ,_ddaac ,"");};_ddfc +=_gccf ;if _gccf ,_afga =_daaa .encodeNumSyms (w );
_afga !=nil {return _ddfc ,_fe .Wrap (_afga ,_ddaac ,"");};_ddfc +=_gccf ;if _gccf ,_afga =_daaa .encodeSymbols (w );_afga !=nil {return _ddfc ,_fe .Wrap (_afga ,_ddaac ,"");};_ddfc +=_gccf ;return _ddfc ,nil ;};func (_bcdg *PageInformationSegment )CombinationOperatorOverrideAllowed ()bool {return _bcdg ._bga };
type SegmentEncoder interface{Encode (_ceac _g .BinaryWriter )(_ddddc int ,_dbbe error );};type HalftoneRegion struct{_dfbda _g .StreamReader ;_agag *Header ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;
HDefaultPixel int8 ;CombinationOperator _b .CombinationOperator ;HSkipEnabled bool ;HTemplate byte ;IsMMREncoded bool ;HGridWidth uint32 ;HGridHeight uint32 ;HGridX int32 ;HGridY int32 ;HRegionX uint16 ;HRegionY uint16 ;HalftoneRegionBitmap *_b .Bitmap ;
Patterns []*_b .Bitmap ;};func (_abc *GenericRegion )GetRegionBitmap ()(_dde *_b .Bitmap ,_gfe error ){if _abc .Bitmap !=nil {return _abc .Bitmap ,nil ;};if _abc .IsMMREncoded {if _abc ._beca ==nil {_abc ._beca ,_gfe =_dc .New (_abc ._cdfe ,int (_abc .RegionSegment .BitmapWidth ),int (_abc .RegionSegment .BitmapHeight ),_abc .DataOffset ,_abc .DataLength );
if _gfe !=nil {return nil ,_gfe ;};};_abc .Bitmap ,_gfe =_abc ._beca .UncompressMMR ();return _abc .Bitmap ,_gfe ;};if _gfe =_abc .updateOverrideFlags ();_gfe !=nil {return nil ,_gfe ;};var _adda int ;if _abc ._bea ==nil {_abc ._bea ,_gfe =_df .New (_abc ._cdfe );
if _gfe !=nil {return nil ,_gfe ;};};if _abc ._gfd ==nil {_abc ._gfd =_df .NewStats (65536,1);};_abc .Bitmap =_b .New (int (_abc .RegionSegment .BitmapWidth ),int (_abc .RegionSegment .BitmapHeight ));_bgc :=int (uint32 (_abc .Bitmap .Width +7)&(^uint32 (7)));
for _egfd :=0;_egfd < _abc .Bitmap .Height ;_egfd ++{if _abc .IsTPGDon {var _fgac int ;_fgac ,_gfe =_abc .decodeSLTP ();if _gfe !=nil {return nil ,_gfe ;};_adda ^=_fgac ;};if _adda ==1{if _egfd > 0{if _gfe =_abc .copyLineAbove (_egfd );_gfe !=nil {return nil ,_gfe ;
};};}else {if _gfe =_abc .decodeLine (_egfd ,_abc .Bitmap .Width ,_bgc );_gfe !=nil {return nil ,_gfe ;};};};return _abc .Bitmap ,nil ;};func (_ace *GenericRegion )Encode (w _g .BinaryWriter )(_cef int ,_fgcc error ){const _agge ="G\u0065n\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069o\u006e\u002e\u0045\u006eco\u0064\u0065";
if _ace .Bitmap ==nil {return 0,_fe .Error (_agge ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};_fee ,_fgcc :=_ace .RegionSegment .Encode (w );if _fgcc !=nil {return 0,_fe .Wrap (_fgcc ,_agge ,"\u0052\u0065\u0067\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};_cef +=_fee ;if _fgcc =w .SkipBits (4);_fgcc !=nil {return _cef ,_fe .Wrap (_fgcc ,_agge ,"\u0073k\u0069p\u0020\u0072\u0065\u0073\u0065r\u0076\u0065d\u0020\u0062\u0069\u0074\u0073");};var _fde int ;if _ace .IsTPGDon {_fde =1;};if _fgcc =w .WriteBit (_fde );
_fgcc !=nil {return _cef ,_fe .Wrap (_fgcc ,_agge ,"\u0074\u0070\u0067\u0064\u006f\u006e");};_fde =0;if _fgcc =w .WriteBit (int (_ace .GBTemplate >>1)&0x01);_fgcc !=nil {return _cef ,_fe .Wrap (_fgcc ,_agge ,"f\u0069r\u0073\u0074\u0020\u0067\u0062\u0074\u0065\u006dp\u006c\u0061\u0074\u0065 b\u0069\u0074");
};if _fgcc =w .WriteBit (int (_ace .GBTemplate )&0x01);_fgcc !=nil {return _cef ,_fe .Wrap (_fgcc ,_agge ,"s\u0065\u0063\u006f\u006ed \u0067b\u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u0062\u0069\u0074");};if _ace .UseMMR {_fde =1;};if _fgcc =w .WriteBit (_fde );
_fgcc !=nil {return _cef ,_fe .Wrap (_fgcc ,_agge ,"u\u0073\u0065\u0020\u004d\u004d\u0052\u0020\u0062\u0069\u0074");};_cef ++;if _fee ,_fgcc =_ace .writeGBAtPixels (w );_fgcc !=nil {return _cef ,_fe .Wrap (_fgcc ,_agge ,"");};_cef +=_fee ;_dca :=_cd .New ();
if _fgcc =_dca .EncodeBitmap (_ace .Bitmap ,_ace .IsTPGDon );_fgcc !=nil {return _cef ,_fe .Wrap (_fgcc ,_agge ,"");};_dca .Final ();var _dcd int64 ;if _dcd ,_fgcc =_dca .WriteTo (w );_fgcc !=nil {return _cef ,_fe .Wrap (_fgcc ,_agge ,"");};_cef +=int (_dcd );
return _cef ,nil ;};func (_bfea *TextRegion )computeSymbolCodeLength ()error {if _bfea .IsHuffmanEncoded {return _bfea .symbolIDCodeLengths ();};_bfea ._acfb =int8 (_a .Ceil (_a .Log (float64 (_bfea .NumberOfSymbols ))/_a .Log (2)));return nil ;};func (_ggbg *TextRegion )readAmountOfSymbolInstances ()error {_baea ,_fece :=_ggbg ._gaad .ReadBits (32);
if _fece !=nil {return _fece ;};_ggbg .NumberOfSymbolInstances =uint32 (_baea &_a .MaxUint32 );_abfa :=_ggbg .RegionInfo .BitmapWidth *_ggbg .RegionInfo .BitmapHeight ;if _abfa < _ggbg .NumberOfSymbolInstances {_cdg .Log .Debug ("\u004c\u0069\u006d\u0069t\u0069\u006e\u0067\u0020t\u0068\u0065\u0020n\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020d\u0065\u0063\u006f\u0064e\u0064\u0020\u0073\u0079m\u0062\u006f\u006c\u0020\u0069n\u0073\u0074\u0061\u006e\u0063\u0065\u0073 \u0074\u006f\u0020\u006f\u006ee\u0020\u0070\u0065\u0072\u0020\u0070\u0069\u0078\u0065l\u0020\u0028\u0020\u0025\u0064\u0020\u0069\u006e\u0073\u0074\u0065\u0061\u0064\u0020\u006f\u0066\u0020\u0025\u0064\u0029",_abfa ,_ggbg .NumberOfSymbolInstances );
_ggbg .NumberOfSymbolInstances =_abfa ;};return nil ;};func (_edec *TextRegion )readRegionFlags ()error {var (_aagb int ;_ebaa uint64 ;_ffba error ;);_aagb ,_ffba =_edec ._gaad .ReadBit ();if _ffba !=nil {return _ffba ;};_edec .SbrTemplate =int8 (_aagb );
_ebaa ,_ffba =_edec ._gaad .ReadBits (5);if _ffba !=nil {return _ffba ;};_edec .SbDsOffset =int8 (_ebaa );if _edec .SbDsOffset > 0x0f{_edec .SbDsOffset -=0x20;};_aagb ,_ffba =_edec ._gaad .ReadBit ();if _ffba !=nil {return _ffba ;};_edec .DefaultPixel =int8 (_aagb );
_ebaa ,_ffba =_edec ._gaad .ReadBits (2);if _ffba !=nil {return _ffba ;};_edec .CombinationOperator =_b .CombinationOperator (int (_ebaa )&0x3);_aagb ,_ffba =_edec ._gaad .ReadBit ();if _ffba !=nil {return _ffba ;};_edec .IsTransposed =int8 (_aagb );_ebaa ,_ffba =_edec ._gaad .ReadBits (2);
if _ffba !=nil {return _ffba ;};_edec .ReferenceCorner =int16 (_ebaa )&0x3;_ebaa ,_ffba =_edec ._gaad .ReadBits (2);if _ffba !=nil {return _ffba ;};_edec .LogSBStrips =int16 (_ebaa )&0x3;_edec .SbStrips =1<<uint (_edec .LogSBStrips );_aagb ,_ffba =_edec ._gaad .ReadBit ();
if _ffba !=nil {return _ffba ;};if _aagb ==1{_edec .UseRefinement =true ;};_aagb ,_ffba =_edec ._gaad .ReadBit ();if _ffba !=nil {return _ffba ;};if _aagb ==1{_edec .IsHuffmanEncoded =true ;};return nil ;};func NewGenericRegion (r _g .StreamReader )*GenericRegion {return &GenericRegion {RegionSegment :NewRegionSegment (r ),_cdfe :r };
};func (_egd *Header )readHeaderFlags ()error {const _cgc ="\u0072e\u0061d\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006c\u0061\u0067\u0073";_bcd ,_gfed :=_egd .Reader .ReadBit ();if _gfed !=nil {return _fe .Wrap (_gfed ,_cgc ,"r\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067");
};if _bcd !=0{_egd .RetainFlag =true ;};_bcd ,_gfed =_egd .Reader .ReadBit ();if _gfed !=nil {return _fe .Wrap (_gfed ,_cgc ,"\u0070\u0061g\u0065\u0020\u0061s\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e");};if _bcd !=0{_egd .PageAssociationFieldSize =true ;
};_agfd ,_gfed :=_egd .Reader .ReadBits (6);if _gfed !=nil {return _fe .Wrap (_gfed ,_cgc ,"\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065");};_egd .Type =Type (int (_agfd ));return nil ;};func (_bcfc *GenericRegion )copyLineAbove (_bgg int )error {_cda :=_bgg *_bcfc .Bitmap .RowStride ;
_ddg :=_cda -_bcfc .Bitmap .RowStride ;for _gfb :=0;_gfb < _bcfc .Bitmap .RowStride ;_gfb ++{_dgdf ,_dcfd :=_bcfc .Bitmap .GetByte (_ddg );if _dcfd !=nil {return _dcfd ;};_ddg ++;if _dcfd =_bcfc .Bitmap .SetByte (_cda ,_dgdf );_dcfd !=nil {return _dcfd ;
};_cda ++;};return nil ;};func (_bbgc *TableSegment )HtHigh ()int32 {return _bbgc ._dgaa };func (_ddaa *RegionSegment )Encode (w _g .BinaryWriter )(_ggbe int ,_fcca error ){const _bbda ="R\u0065g\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065n\u0074\u002e\u0045\u006eco\u0064\u0065";
_gga :=make ([]byte ,4);_dgf .BigEndian .PutUint32 (_gga ,_ddaa .BitmapWidth );_ggbe ,_fcca =w .Write (_gga );if _fcca !=nil {return 0,_fe .Wrap (_fcca ,_bbda ,"\u0057\u0069\u0064t\u0068");};_dgf .BigEndian .PutUint32 (_gga ,_ddaa .BitmapHeight );var _cgbc int ;
_cgbc ,_fcca =w .Write (_gga );if _fcca !=nil {return 0,_fe .Wrap (_fcca ,_bbda ,"\u0048\u0065\u0069\u0067\u0068\u0074");};_ggbe +=_cgbc ;_dgf .BigEndian .PutUint32 (_gga ,_ddaa .XLocation );_cgbc ,_fcca =w .Write (_gga );if _fcca !=nil {return 0,_fe .Wrap (_fcca ,_bbda ,"\u0058L\u006f\u0063\u0061\u0074\u0069\u006fn");
};_ggbe +=_cgbc ;_dgf .BigEndian .PutUint32 (_gga ,_ddaa .YLocation );_cgbc ,_fcca =w .Write (_gga );if _fcca !=nil {return 0,_fe .Wrap (_fcca ,_bbda ,"\u0059L\u006f\u0063\u0061\u0074\u0069\u006fn");};_ggbe +=_cgbc ;if _fcca =w .WriteByte (byte (_ddaa .CombinaionOperator )&0x07);
_fcca !=nil {return 0,_fe .Wrap (_fcca ,_bbda ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};_ggbe ++;return _ggbe ,nil ;};func (_afg *PatternDictionary )setGbAtPixels (){if _afg .HDTemplate ==0{_afg .GBAtX =make ([]int8 ,4);
_afg .GBAtY =make ([]int8 ,4);_afg .GBAtX [0]=-int8 (_afg .HdpWidth );_afg .GBAtY [0]=0;_afg .GBAtX [1]=-3;_afg .GBAtY [1]=-1;_afg .GBAtX [2]=2;_afg .GBAtY [2]=-2;_afg .GBAtX [3]=-2;_afg .GBAtY [3]=-2;}else {_afg .GBAtX =[]int8 {-int8 (_afg .HdpWidth )};
_afg .GBAtY =[]int8 {0};};};func (_bdge *TextRegion )createRegionBitmap ()error {_bdge .RegionBitmap =_b .New (int (_bdge .RegionInfo .BitmapWidth ),int (_bdge .RegionInfo .BitmapHeight ));if _bdge .DefaultPixel !=0{_bdge .RegionBitmap .SetDefaultPixel ();
};return nil ;};func (_cead *Header )writeSegmentDataLength (_dfeg _g .BinaryWriter )(_dddd int ,_ceab error ){_dgga :=make ([]byte ,4);_dgf .BigEndian .PutUint32 (_dgga ,uint32 (_cead .SegmentDataLength ));if _dddd ,_ceab =_dfeg .Write (_dgga );_ceab !=nil {return 0,_fe .Wrap (_ceab ,"\u0048\u0065a\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u004c\u0065ng\u0074\u0068","");
};return _dddd ,nil ;};func (_ebac *GenericRegion )decodeTemplate0b (_ega ,_fab ,_edbb int ,_gac ,_gab int )(_fcd error ){const _gabe ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0062";var (_ceeg ,_dfae int ;_ebec ,_fbbg int ;
_deac byte ;_eecb int ;);if _ega >=1{_deac ,_fcd =_ebac .Bitmap .GetByte (_gab );if _fcd !=nil {return _fe .Wrap (_fcd ,_gabe ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_ebec =int (_deac );};if _ega >=2{_deac ,_fcd =_ebac .Bitmap .GetByte (_gab -_ebac .Bitmap .RowStride );
if _fcd !=nil {return _fe .Wrap (_fcd ,_gabe ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_fbbg =int (_deac )<<6;};_ceeg =(_ebec &0xf0)|(_fbbg &0x3800);for _edga :=0;_edga < _edbb ;_edga =_eecb {var (_gag byte ;_cbbd int ;);_eecb =_edga +8;if _fefd :=_fab -_edga ;
_fefd > 8{_cbbd =8;}else {_cbbd =_fefd ;};if _ega > 0{_ebec <<=8;if _eecb < _fab {_deac ,_fcd =_ebac .Bitmap .GetByte (_gab +1);if _fcd !=nil {return _fe .Wrap (_fcd ,_gabe ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_ebec |=int (_deac );};};
if _ega > 1{_fbbg <<=8;if _eecb < _fab {_deac ,_fcd =_ebac .Bitmap .GetByte (_gab -_ebac .Bitmap .RowStride +1);if _fcd !=nil {return _fe .Wrap (_fcd ,_gabe ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_fbbg |=int (_deac )<<6;};};for _cggb :=0;
_cggb < _cbbd ;_cggb ++{_cdde :=uint (7-_cggb );if _ebac ._bfb {_dfae =_ebac .overrideAtTemplate0b (_ceeg ,_edga +_cggb ,_ega ,int (_gag ),_cggb ,int (_cdde ));_ebac ._gfd .SetIndex (int32 (_dfae ));}else {_ebac ._gfd .SetIndex (int32 (_ceeg ));};var _cfea int ;
_cfea ,_fcd =_ebac ._bea .DecodeBit (_ebac ._gfd );if _fcd !=nil {return _fe .Wrap (_fcd ,_gabe ,"");};_gag |=byte (_cfea <<_cdde );_ceeg =((_ceeg &0x7bf7)<<1)|_cfea |((_ebec >>_cdde )&0x10)|((_fbbg >>_cdde )&0x800);};if _ffd :=_ebac .Bitmap .SetByte (_gac ,_gag );
_ffd !=nil {return _fe .Wrap (_ffd ,_gabe ,"");};_gac ++;_gab ++;};return nil ;};func (_gcdf *PageInformationSegment )readIsStriped ()error {_bgbb ,_ebff :=_gcdf ._gdc .ReadBit ();if _ebff !=nil {return _ebff ;};if _bgbb ==1{_gcdf .IsStripe =true ;};return nil ;
};func (_edea *PageInformationSegment )encodeFlags (_ggbb _g .BinaryWriter )(_ddgf error ){const _edaf ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _ddgf =_ggbb .SkipBits (1);_ddgf !=nil {return _fe .Wrap (_ddgf ,_edaf ,"\u0072\u0065\u0073e\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074");
};var _ddfe int ;if _edea .CombinationOperatorOverrideAllowed (){_ddfe =1;};if _ddgf =_ggbb .WriteBit (_ddfe );_ddgf !=nil {return _fe .Wrap (_ddgf ,_edaf ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0064\u0065\u006e");
};_ddfe =0;if _edea ._dead {_ddfe =1;};if _ddgf =_ggbb .WriteBit (_ddfe );_ddgf !=nil {return _fe .Wrap (_ddgf ,_edaf ,"\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0061\u0075\u0078i\u006ci\u0061r\u0079\u0020\u0062\u0075\u0066\u0066\u0065r");};if _ddgf =_ggbb .WriteBit ((int (_edea ._gfbf )>>1)&0x01);
_ddgf !=nil {return _fe .Wrap (_ddgf ,_edaf ,"\u0063\u006f\u006d\u0062\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006f\u0070\u0065\u0072\u0061\u0074o\u0072\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0062\u0069\u0074");};if _ddgf =_ggbb .WriteBit (int (_edea ._gfbf )&0x01);
_ddgf !=nil {return _fe .Wrap (_ddgf ,_edaf ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0062\u0069\u0074");};_ddfe =int (_edea .DefaultPixelValue );
if _ddgf =_ggbb .WriteBit (_ddfe );_ddgf !=nil {return _fe .Wrap (_ddgf ,_edaf ,"\u0064e\u0066\u0061\u0075\u006c\u0074\u0020\u0070\u0061\u0067\u0065\u0020p\u0069\u0078\u0065\u006c\u0020\u0076\u0061\u006c\u0075\u0065");};_ddfe =0;if _edea ._ceff {_ddfe =1;
};if _ddgf =_ggbb .WriteBit (_ddfe );_ddgf !=nil {return _fe .Wrap (_ddgf ,_edaf ,"\u0063\u006f\u006e\u0074ai\u006e\u0073\u0020\u0072\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074");};_ddfe =0;if _edea .IsLossless {_ddfe =1;};if _ddgf =_ggbb .WriteBit (_ddfe );
_ddgf !=nil {return _fe .Wrap (_ddgf ,_edaf ,"p\u0061\u0067\u0065\u0020\u0069\u0073 \u0065\u0076\u0065\u006e\u0074\u0075\u0061\u006c\u006cy\u0020\u006c\u006fs\u0073l\u0065\u0073\u0073");};return nil ;};func (_cfb *Header )readSegmentNumber (_bdfcd _g .StreamReader )error {const _dbfa ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";
_aeea :=make ([]byte ,4);_ ,_dfgf :=_bdfcd .Read (_aeea );if _dfgf !=nil {return _fe .Wrap (_dfgf ,_dbfa ,"");};_cfb .SegmentNumber =_dgf .BigEndian .Uint32 (_aeea );return nil ;};func (_cdgb *template0 )setIndex (_cdd *_df .DecoderStats ){_cdd .SetIndex (0x100)};
func (_defe *Header )writeFlags (_cefc _g .BinaryWriter )(_bbfe error ){const _beb ="\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065F\u006c\u0061\u0067\u0073";_acab :=byte (_defe .Type );if _bbfe =_cefc .WriteByte (_acab );_bbfe !=nil {return _fe .Wrap (_bbfe ,_beb ,"\u0077\u0072\u0069ti\u006e\u0067\u0020\u0073\u0065\u0067\u006d\u0065\u006et\u0020t\u0079p\u0065 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};if !_defe .RetainFlag &&!_defe .PageAssociationFieldSize {return nil ;};if _bbfe =_cefc .SkipBits (-8);_bbfe !=nil {return _fe .Wrap (_bbfe ,_beb ,"\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0062\u0061\u0063\u006b\u0020\u0074\u0068\u0065\u0020\u0062\u0069\u0074\u0073\u0020\u0066\u0061il\u0065\u0064");
};var _acdg int ;if _defe .RetainFlag {_acdg =1;};if _bbfe =_cefc .WriteBit (_acdg );_bbfe !=nil {return _fe .Wrap (_bbfe ,_beb ,"\u0072\u0065\u0074\u0061in\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067\u0073");};_acdg =0;if _defe .PageAssociationFieldSize {_acdg =1;
};if _bbfe =_cefc .WriteBit (_acdg );_bbfe !=nil {return _fe .Wrap (_bbfe ,_beb ,"p\u0061\u0067\u0065\u0020as\u0073o\u0063\u0069\u0061\u0074\u0069o\u006e\u0020\u0066\u006c\u0061\u0067");};_cefc .FinishByte ();return nil ;};func (_bcgb *RegionSegment )parseHeader ()error {const _ddecd ="p\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072";
_cdg .Log .Trace ("\u005b\u0052\u0045\u0047I\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002dH\u0045A\u0044\u0045\u0052\u005d\u0020\u0042\u0065g\u0069\u006e");defer func (){_cdg .Log .Trace ("\u005b\u0052\u0045G\u0049\u004f\u004e\u005d[\u0050\u0041\u0052\u0053\u0045\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
}();_eed ,_eggf :=_bcgb ._ffce .ReadBits (32);if _eggf !=nil {return _fe .Wrap (_eggf ,_ddecd ,"\u0077\u0069\u0064t\u0068");};_bcgb .BitmapWidth =uint32 (_eed &_a .MaxUint32 );_eed ,_eggf =_bcgb ._ffce .ReadBits (32);if _eggf !=nil {return _fe .Wrap (_eggf ,_ddecd ,"\u0068\u0065\u0069\u0067\u0068\u0074");
};_bcgb .BitmapHeight =uint32 (_eed &_a .MaxUint32 );_eed ,_eggf =_bcgb ._ffce .ReadBits (32);if _eggf !=nil {return _fe .Wrap (_eggf ,_ddecd ,"\u0078\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_bcgb .XLocation =uint32 (_eed &_a .MaxUint32 );
_eed ,_eggf =_bcgb ._ffce .ReadBits (32);if _eggf !=nil {return _fe .Wrap (_eggf ,_ddecd ,"\u0079\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_bcgb .YLocation =uint32 (_eed &_a .MaxUint32 );if _ ,_eggf =_bcgb ._ffce .ReadBits (5);_eggf !=nil {return _fe .Wrap (_eggf ,_ddecd ,"\u0064i\u0072\u0079\u0020\u0072\u0065\u0061d");
};if _eggf =_bcgb .readCombinationOperator ();_eggf !=nil {return _fe .Wrap (_eggf ,_ddecd ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};return nil ;};func (_ffgd *GenericRegion )overrideAtTemplate2 (_gacb ,_afd ,_egbb ,_aad ,_egab int )int {_gacb &=0x3FB;
if _ffgd .GBAtY [0]==0&&_ffgd .GBAtX [0]>=-int8 (_egab ){_gacb |=(_aad >>uint (7-(int8 (_egab )+_ffgd .GBAtX [0]))&0x1)<<2;}else {_gacb |=int (_ffgd .getPixel (_afd +int (_ffgd .GBAtX [0]),_egbb +int (_ffgd .GBAtY [0])))<<2;};return _gacb ;};func (_fda *GenericRefinementRegion )getGrReference ()(*_b .Bitmap ,error ){segments :=_fda ._dbg .RTSegments ;
if len (segments )==0{return nil ,_ca .New ("\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0065\u0078is\u0074\u0073");};_bf ,_fac :=segments [0].GetSegmentData ();
if _fac !=nil {return nil ,_fac ;};_dfb ,_abdf :=_bf .(Regioner );if !_abdf {return nil ,_fa .Errorf ("\u0072\u0065\u0066\u0065\u0072r\u0065\u0064\u0020\u0074\u006f\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_bf );
};return _dfb .GetRegionBitmap ();};func (_gbdec *SymbolDictionary )decodeNewSymbols (_debg ,_gdcb uint32 ,_daff *_b .Bitmap ,_ddaf ,_affc int32 )error {if _gbdec ._efad ==nil {_gbdec ._efad =_cbb (_gbdec ._ggba ,nil );if _gbdec ._aaae ==nil {var _abbb error ;
_gbdec ._aaae ,_abbb =_df .New (_gbdec ._ggba );if _abbb !=nil {return _abbb ;};};if _gbdec ._adbed ==nil {_gbdec ._adbed =_df .NewStats (65536,1);};};_gbdec ._efad .setParameters (_gbdec ._adbed ,_gbdec ._aaae ,_gbdec .SdrTemplate ,_debg ,_gdcb ,_daff ,_ddaf ,_affc ,false ,_gbdec .SdrATX ,_gbdec .SdrATY );
return _gbdec .addSymbol (_gbdec ._efad );};func (_gfggf *TextRegion )decodeStripT ()(_bfcf int64 ,_feab error ){if _gfggf .IsHuffmanEncoded {if _gfggf .SbHuffDT ==3{if _gfggf ._edgc ==nil {var _gdba int ;if _gfggf .SbHuffFS ==3{_gdba ++;};if _gfggf .SbHuffDS ==3{_gdba ++;
};_gfggf ._edgc ,_feab =_gfggf .getUserTable (_gdba );if _feab !=nil {return 0,_feab ;};};_bfcf ,_feab =_gfggf ._edgc .Decode (_gfggf ._gaad );if _feab !=nil {return 0,_feab ;};}else {var _bgcg _fd .Tabler ;_bgcg ,_feab =_fd .GetStandardTable (11+int (_gfggf .SbHuffDT ));
if _feab !=nil {return 0,_feab ;};_bfcf ,_feab =_bgcg .Decode (_gfggf ._gaad );if _feab !=nil {return 0,_feab ;};};}else {var _bbab int32 ;_bbab ,_feab =_gfggf ._abaf .DecodeInt (_gfggf ._geca );if _feab !=nil {return 0,_feab ;};_bfcf =int64 (_bbab );};
_bfcf *=int64 (-_gfggf .SbStrips );return _bfcf ,nil ;};func (_baad *TextRegion )Init (header *Header ,r _g .StreamReader )error {_baad .Header =header ;_baad ._gaad =r ;_baad .RegionInfo =NewRegionSegment (_baad ._gaad );return _baad .parseHeader ();};
func (_cbda *SymbolDictionary )readNumberOfNewSymbols ()error {_cbbf ,_dad :=_cbda ._ggba .ReadBits (32);if _dad !=nil {return _dad ;};_cbda .NumberOfNewSymbols =uint32 (_cbbf &_a .MaxUint32 );return nil ;};func (_dcad *GenericRegion )Size ()int {return _dcad .RegionSegment .Size ()+1+2*len (_dcad .GBAtX )};
type PageInformationSegment struct{_gdc _g .StreamReader ;PageBMHeight int ;PageBMWidth int ;ResolutionX int ;ResolutionY int ;_bga bool ;_gfbf _b .CombinationOperator ;_dead bool ;DefaultPixelValue uint8 ;_ceff bool ;IsLossless bool ;IsStripe bool ;MaxStripeSize uint16 ;
};func (_cgag *PageInformationSegment )readDefaultPixelValue ()error {_egaa ,_fegd :=_cgag ._gdc .ReadBit ();if _fegd !=nil {return _fegd ;};_cgag .DefaultPixelValue =uint8 (_egaa &0xf);return nil ;};func (_ecac *TextRegion )readHuffmanFlags ()error {var (_eebc int ;
_cfbf uint64 ;_aeed error ;);_ ,_aeed =_ecac ._gaad .ReadBit ();if _aeed !=nil {return _aeed ;};_eebc ,_aeed =_ecac ._gaad .ReadBit ();if _aeed !=nil {return _aeed ;};_ecac .SbHuffRSize =int8 (_eebc );_cfbf ,_aeed =_ecac ._gaad .ReadBits (2);if _aeed !=nil {return _aeed ;
};_ecac .SbHuffRDY =int8 (_cfbf )&0xf;_cfbf ,_aeed =_ecac ._gaad .ReadBits (2);if _aeed !=nil {return _aeed ;};_ecac .SbHuffRDX =int8 (_cfbf )&0xf;_cfbf ,_aeed =_ecac ._gaad .ReadBits (2);if _aeed !=nil {return _aeed ;};_ecac .SbHuffRDHeight =int8 (_cfbf )&0xf;
_cfbf ,_aeed =_ecac ._gaad .ReadBits (2);if _aeed !=nil {return _aeed ;};_ecac .SbHuffRDWidth =int8 (_cfbf )&0xf;_cfbf ,_aeed =_ecac ._gaad .ReadBits (2);if _aeed !=nil {return _aeed ;};_ecac .SbHuffDT =int8 (_cfbf )&0xf;_cfbf ,_aeed =_ecac ._gaad .ReadBits (2);
if _aeed !=nil {return _aeed ;};_ecac .SbHuffDS =int8 (_cfbf )&0xf;_cfbf ,_aeed =_ecac ._gaad .ReadBits (2);if _aeed !=nil {return _aeed ;};_ecac .SbHuffFS =int8 (_cfbf )&0xf;return nil ;};const (ORandom OrganizationType =iota ;OSequential ;);func (_dcge *SymbolDictionary )decodeHeightClassDeltaHeightWithHuffman ()(int64 ,error ){switch _dcge .SdHuffDecodeHeightSelection {case 0:_abcd ,_cbac :=_fd .GetStandardTable (4);
if _cbac !=nil {return 0,_cbac ;};return _abcd .Decode (_dcge ._ggba );case 1:_aaabg ,_afec :=_fd .GetStandardTable (5);if _afec !=nil {return 0,_afec ;};return _aaabg .Decode (_dcge ._ggba );case 3:if _dcge ._edca ==nil {_fgf ,_ffaff :=_fd .GetStandardTable (0);
if _ffaff !=nil {return 0,_ffaff ;};_dcge ._edca =_fgf ;};return _dcge ._edca .Decode (_dcge ._ggba );};return 0,nil ;};func (_bdcd *GenericRegion )getPixel (_bdbd ,_gaec int )int8 {if _bdbd < 0||_bdbd >=_bdcd .Bitmap .Width {return 0;};if _gaec < 0||_gaec >=_bdcd .Bitmap .Height {return 0;
};if _bdcd .Bitmap .GetPixel (_bdbd ,_gaec ){return 1;};return 0;};func (_eegf *SymbolDictionary )readRegionFlags ()error {var (_fcfb uint64 ;_gadgb int ;);_ ,_gfdd :=_eegf ._ggba .ReadBits (3);if _gfdd !=nil {return _gfdd ;};_gadgb ,_gfdd =_eegf ._ggba .ReadBit ();
if _gfdd !=nil {return _gfdd ;};_eegf .SdrTemplate =int8 (_gadgb );_fcfb ,_gfdd =_eegf ._ggba .ReadBits (2);if _gfdd !=nil {return _gfdd ;};_eegf .SdTemplate =int8 (_fcfb &0xf);_gadgb ,_gfdd =_eegf ._ggba .ReadBit ();if _gfdd !=nil {return _gfdd ;};if _gadgb ==1{_eegf ._bedb =true ;
};_gadgb ,_gfdd =_eegf ._ggba .ReadBit ();if _gfdd !=nil {return _gfdd ;};if _gadgb ==1{_eegf ._addd =true ;};_gadgb ,_gfdd =_eegf ._ggba .ReadBit ();if _gfdd !=nil {return _gfdd ;};if _gadgb ==1{_eegf .SdHuffAggInstanceSelection =true ;};_gadgb ,_gfdd =_eegf ._ggba .ReadBit ();
if _gfdd !=nil {return _gfdd ;};_eegf .SdHuffBMSizeSelection =int8 (_gadgb );_fcfb ,_gfdd =_eegf ._ggba .ReadBits (2);if _gfdd !=nil {return _gfdd ;};_eegf .SdHuffDecodeWidthSelection =int8 (_fcfb &0xf);_fcfb ,_gfdd =_eegf ._ggba .ReadBits (2);if _gfdd !=nil {return _gfdd ;
};_eegf .SdHuffDecodeHeightSelection =int8 (_fcfb &0xf);_gadgb ,_gfdd =_eegf ._ggba .ReadBit ();if _gfdd !=nil {return _gfdd ;};if _gadgb ==1{_eegf .UseRefinementAggregation =true ;};_gadgb ,_gfdd =_eegf ._ggba .ReadBit ();if _gfdd !=nil {return _gfdd ;
};if _gadgb ==1{_eegf .IsHuffmanEncoded =true ;};return nil ;};var _ templater =&template0 {};func (_caba *PatternDictionary )readIsMMREncoded ()error {_cddf ,_bda :=_caba ._aaaf .ReadBit ();if _bda !=nil {return _bda ;};if _cddf !=0{_caba .IsMMREncoded =true ;
};return nil ;};func (_cfaac *SymbolDictionary )setCodingStatistics ()error {if _cfaac ._bece ==nil {_cfaac ._bece =_df .NewStats (512,1);};if _cfaac ._bgfb ==nil {_cfaac ._bgfb =_df .NewStats (512,1);};if _cfaac ._cbg ==nil {_cfaac ._cbg =_df .NewStats (512,1);
};if _cfaac ._dddg ==nil {_cfaac ._dddg =_df .NewStats (512,1);};if _cfaac ._gbgc ==nil {_cfaac ._gbgc =_df .NewStats (512,1);};if _cfaac .UseRefinementAggregation &&_cfaac ._dfge ==nil {_cfaac ._dfge =_df .NewStats (1<<uint (_cfaac ._cgced ),1);_cfaac ._afef =_df .NewStats (512,1);
_cfaac ._bagc =_df .NewStats (512,1);};if _cfaac ._adbed ==nil {_cfaac ._adbed =_df .NewStats (65536,1);};if _cfaac ._aaae ==nil {var _bfdg error ;_cfaac ._aaae ,_bfdg =_df .New (_cfaac ._ggba );if _bfdg !=nil {return _bfdg ;};};return nil ;};type Documenter interface{GetPage (int )(Pager ,error );
GetGlobalSegment (int )(*Header ,error );};func (_def *GenericRefinementRegion )readAtPixels ()error {_def .GrAtX =make ([]int8 ,2);_def .GrAtY =make ([]int8 ,2);_gef ,_dee :=_def ._eea .ReadByte ();if _dee !=nil {return _dee ;};_def .GrAtX [0]=int8 (_gef );
_gef ,_dee =_def ._eea .ReadByte ();if _dee !=nil {return _dee ;};_def .GrAtY [0]=int8 (_gef );_gef ,_dee =_def ._eea .ReadByte ();if _dee !=nil {return _dee ;};_def .GrAtX [1]=int8 (_gef );_gef ,_dee =_def ._eea .ReadByte ();if _dee !=nil {return _dee ;
};_def .GrAtY [1]=int8 (_gef );return nil ;};func (_dce *SymbolDictionary )decodeRefinedSymbol (_gggf ,_cfbac uint32 )error {var (_gdge int ;_cadbd ,_cafa int32 ;);if _dce .IsHuffmanEncoded {_bfd ,_cdab :=_dce ._ggba .ReadBits (byte (_dce ._cgced ));if _cdab !=nil {return _cdab ;
};_gdge =int (_bfd );_ddff ,_cdab :=_fd .GetStandardTable (15);if _cdab !=nil {return _cdab ;};_ebga ,_cdab :=_ddff .Decode (_dce ._ggba );if _cdab !=nil {return _cdab ;};_cadbd =int32 (_ebga );_ebga ,_cdab =_ddff .Decode (_dce ._ggba );if _cdab !=nil {return _cdab ;
};_cafa =int32 (_ebga );_ddff ,_cdab =_fd .GetStandardTable (1);if _cdab !=nil {return _cdab ;};if _ ,_cdab =_ddff .Decode (_dce ._ggba );_cdab !=nil {return _cdab ;};_dce ._ggba .Align ();}else {_ggag ,_fdbd :=_dce ._aaae .DecodeIAID (uint64 (_dce ._cgced ),_dce ._dfge );
if _fdbd !=nil {return _fdbd ;};_gdge =int (_ggag );_cadbd ,_fdbd =_dce ._aaae .DecodeInt (_dce ._afef );if _fdbd !=nil {return _fdbd ;};_cafa ,_fdbd =_dce ._aaae .DecodeInt (_dce ._bagc );if _fdbd !=nil {return _fdbd ;};};if _adag :=_dce .setSymbolsArray ();
_adag !=nil {return _adag ;};_ffac :=_dce ._efce [_gdge ];if _ffae :=_dce .decodeNewSymbols (_gggf ,_cfbac ,_ffac ,_cadbd ,_cafa );_ffae !=nil {return _ffae ;};if _dce .IsHuffmanEncoded {_dce ._ggba .Align ();};return nil ;};func (_gggg *SymbolDictionary )decodeHeightClassBitmap (_dgac *_b .Bitmap ,_aefe int64 ,_cgdg int ,_daac []int )error {for _ccca :=_aefe ;
_ccca < int64 (_gggg ._dded );_ccca ++{var _aceeg int ;for _bbefd :=_aefe ;_bbefd <=_ccca -1;_bbefd ++{_aceeg +=_daac [_bbefd ];};_bdcaa :=_c .Rect (_aceeg ,0,_aceeg +_daac [_ccca ],_cgdg );_dbba ,_ecegf :=_b .Extract (_bdcaa ,_dgac );if _ecegf !=nil {return _ecegf ;
};_gggg ._caeg [_ccca ]=_dbba ;_gggg ._efce =append (_gggg ._efce ,_dbba );};return nil ;};func (_bdcb *HalftoneRegion )combineGrayscalePlanes (_feda []*_b .Bitmap ,_bdfba int )error {_ffc :=0;for _bfbb :=0;_bfbb < _feda [_bdfba ].Height ;_bfbb ++{for _agaf :=0;
_agaf < _feda [_bdfba ].Width ;_agaf +=8{_befb ,_efab :=_feda [_bdfba +1].GetByte (_ffc );if _efab !=nil {return _efab ;};_fadg ,_efab :=_feda [_bdfba ].GetByte (_ffc );if _efab !=nil {return _efab ;};_efab =_feda [_bdfba ].SetByte (_ffc ,_b .CombineBytes (_fadg ,_befb ,_b .CmbOpXor ));
if _efab !=nil {return _efab ;};_ffc ++;};};return nil ;};func (_cdeb *TextRegion )setContexts (_gfbd *_df .DecoderStats ,_ggbeg *_df .DecoderStats ,_effb *_df .DecoderStats ,_ded *_df .DecoderStats ,_bcae *_df .DecoderStats ,_daae *_df .DecoderStats ,_bfeb *_df .DecoderStats ,_gfedf *_df .DecoderStats ,_bffe *_df .DecoderStats ,_eegb *_df .DecoderStats ){_cdeb ._geca =_ggbeg ;
_cdeb ._cbdf =_effb ;_cdeb ._dbbc =_ded ;_cdeb ._edgaf =_bcae ;_cdeb ._bfabb =_bfeb ;_cdeb ._ceada =_gfedf ;_cdeb ._abag =_daae ;_cdeb ._fffad =_bffe ;_cdeb ._fceb =_eegb ;_cdeb ._fgg =_gfbd ;};func _fgb (_eda int )int {if _eda ==0{return 0;};_eda |=_eda >>1;
_eda |=_eda >>2;_eda |=_eda >>4;_eda |=_eda >>8;_eda |=_eda >>16;return (_eda +1)>>1;};var (_ Regioner =&TextRegion {};_ Segmenter =&TextRegion {};);type RegionSegment struct{_ffce _g .StreamReader ;BitmapWidth uint32 ;BitmapHeight uint32 ;XLocation uint32 ;
YLocation uint32 ;CombinaionOperator _b .CombinationOperator ;};func (_egabd *SymbolDictionary )encodeATFlags (_eccgf _g .BinaryWriter )(_bded int ,_ged error ){const _ddcg ="\u0065\u006e\u0063\u006f\u0064\u0065\u0041\u0054\u0046\u006c\u0061\u0067\u0073";
if _egabd .IsHuffmanEncoded ||_egabd .SdTemplate !=0{return 0,nil ;};_fffe :=4;if _egabd .SdTemplate !=0{_fffe =1;};for _ddagd :=0;_ddagd < _fffe ;_ddagd ++{if _ged =_eccgf .WriteByte (byte (_egabd .SdATX [_ddagd ]));_ged !=nil {return _bded ,_fe .Wrapf (_ged ,_ddcg ,"\u0053d\u0041\u0054\u0058\u005b\u0025\u0064]",_ddagd );
};_bded ++;if _ged =_eccgf .WriteByte (byte (_egabd .SdATY [_ddagd ]));_ged !=nil {return _bded ,_fe .Wrapf (_ged ,_ddcg ,"\u0053d\u0041\u0054\u0059\u005b\u0025\u0064]",_ddagd );};_bded ++;};return _bded ,nil ;};func (_cdgcf *TextRegion )encodeSymbols (_gcaf _g .BinaryWriter )(_ddga int ,_babd error ){const _bbfgd ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
_gcdaf :=make ([]byte ,4);_dgf .BigEndian .PutUint32 (_gcdaf ,_cdgcf .NumberOfSymbols );if _ddga ,_babd =_gcaf .Write (_gcdaf );_babd !=nil {return _ddga ,_fe .Wrap (_babd ,_bbfgd ,"\u004e\u0075\u006dbe\u0072\u004f\u0066\u0053\u0079\u006d\u0062\u006f\u006c\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073");
};_cceeb ,_babd :=_b .NewClassedPoints (_cdgcf ._bdg ,_cdgcf ._adaac );if _babd !=nil {return 0,_fe .Wrap (_babd ,_bbfgd ,"");};var _fgec ,_aece int ;_caae :=_cd .New ();_caae .Init ();if _babd =_caae .EncodeInteger (_cd .IADT ,0);_babd !=nil {return _ddga ,_fe .Wrap (_babd ,_bbfgd ,"\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0020\u0044\u0054");
};_bfec ,_babd :=_cceeb .GroupByY ();if _babd !=nil {return 0,_fe .Wrap (_babd ,_bbfgd ,"");};for _ ,_bdac :=range _bfec {_fefg :=int (_bdac .YAtIndex (0));_gfaf :=_fefg -_fgec ;if _babd =_caae .EncodeInteger (_cd .IADT ,_gfaf );_babd !=nil {return _ddga ,_fe .Wrap (_babd ,_bbfgd ,"");
};var _eedd int ;for _dbgd ,_feae :=range _bdac .IntSlice {switch _dbgd {case 0:_gcbd :=int (_bdac .XAtIndex (_dbgd ))-_aece ;if _babd =_caae .EncodeInteger (_cd .IAFS ,_gcbd );_babd !=nil {return _ddga ,_fe .Wrap (_babd ,_bbfgd ,"");};_aece +=_gcbd ;_eedd =_aece ;
default:_gbdf :=int (_bdac .XAtIndex (_dbgd ))-_eedd ;if _babd =_caae .EncodeInteger (_cd .IADS ,_gbdf );_babd !=nil {return _ddga ,_fe .Wrap (_babd ,_bbfgd ,"");};_eedd +=_gbdf ;};_egdc ,_acbe :=_cdgcf ._badb .Get (_feae );if _acbe !=nil {return _ddga ,_fe .Wrap (_acbe ,_bbfgd ,"");
};_ccbd ,_afcg :=_cdgcf ._bgafc [_egdc ];if !_afcg {_ccbd ,_afcg =_cdgcf ._efee [_egdc ];if !_afcg {return _ddga ,_fe .Errorf (_bbfgd ,"\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027\u0025d\u0027\u0020\u0069s\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064 \u0069\u006e\u0020\u0067\u006cob\u0061\u006c\u0020\u0061\u006e\u0064\u0020\u006c\u006f\u0063\u0061\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020\u006d\u0061\u0070",_egdc );
};};if _acbe =_caae .EncodeIAID (_cdgcf ._bgffg ,_ccbd );_acbe !=nil {return _ddga ,_fe .Wrap (_acbe ,_bbfgd ,"");};};if _babd =_caae .EncodeOOB (_cd .IADS );_babd !=nil {return _ddga ,_fe .Wrap (_babd ,_bbfgd ,"");};};_caae .Final ();_fbbge ,_babd :=_caae .WriteTo (_gcaf );
if _babd !=nil {return _ddga ,_fe .Wrap (_babd ,_bbfgd ,"");};_ddga +=int (_fbbge );return _ddga ,nil ;};func (_acbag *PageInformationSegment )encodeStripingInformation (_edebb _g .BinaryWriter )(_aaad int ,_cgfg error ){const _gfg ="\u0065n\u0063\u006f\u0064\u0065S\u0074\u0072\u0069\u0070\u0069n\u0067I\u006ef\u006f\u0072\u006d\u0061\u0074\u0069\u006fn";
if !_acbag .IsStripe {if _aaad ,_cgfg =_edebb .Write ([]byte {0x00,0x00});_cgfg !=nil {return 0,_fe .Wrap (_cgfg ,_gfg ,"n\u006f\u0020\u0073\u0074\u0072\u0069\u0070\u0069\u006e\u0067");};return _aaad ,nil ;};_cge :=make ([]byte ,2);_dgf .BigEndian .PutUint16 (_cge ,_acbag .MaxStripeSize |1<<15);
if _aaad ,_cgfg =_edebb .Write (_cge );_cgfg !=nil {return 0,_fe .Wrapf (_cgfg ,_gfg ,"\u0073\u0074\u0072i\u0070\u0069\u006e\u0067\u003a\u0020\u0025\u0064",_acbag .MaxStripeSize );};return _aaad ,nil ;};func (_dfg *GenericRefinementRegion )decodeTypicalPredictedLineTemplate1 (_acce ,_ge ,_add ,_ccb ,_efd ,_dcb ,_aa ,_gad ,_fdb int )(_aff error ){var (_fbab ,_eeag int ;
_dfa ,_addg int ;_eec ,_fcg int ;_fec byte ;);if _acce > 0{_fec ,_aff =_dfg .RegionBitmap .GetByte (_aa -_add );if _aff !=nil {return ;};_dfa =int (_fec );};if _gad > 0&&_gad <=_dfg .ReferenceBitmap .Height {_fec ,_aff =_dfg .ReferenceBitmap .GetByte (_fdb -_ccb +_dcb );
if _aff !=nil {return ;};_addg =int (_fec )<<2;};if _gad >=0&&_gad < _dfg .ReferenceBitmap .Height {_fec ,_aff =_dfg .ReferenceBitmap .GetByte (_fdb +_dcb );if _aff !=nil {return ;};_eec =int (_fec );};if _gad > -2&&_gad < _dfg .ReferenceBitmap .Height -1{_fec ,_aff =_dfg .ReferenceBitmap .GetByte (_fdb +_ccb +_dcb );
if _aff !=nil {return ;};_fcg =int (_fec );};_fbab =((_dfa >>5)&0x6)|((_fcg >>2)&0x30)|(_eec &0xc0)|(_addg &0x200);_eeag =((_fcg >>2)&0x70)|(_eec &0xc0)|(_addg &0x700);var _gbba int ;for _cde :=0;_cde < _efd ;_cde =_gbba {var (_fcgc int ;_dcc int ;);_gbba =_cde +8;
if _fcgc =_ge -_cde ;_fcgc > 8{_fcgc =8;};_gdd :=_gbba < _ge ;_dfbd :=_gbba < _dfg .ReferenceBitmap .Width ;_dgg :=_dcb +1;if _acce > 0{_fec =0;if _gdd {_fec ,_aff =_dfg .RegionBitmap .GetByte (_aa -_add +1);if _aff !=nil {return ;};};_dfa =(_dfa <<8)|int (_fec );
};if _gad > 0&&_gad <=_dfg .ReferenceBitmap .Height {var _aca int ;if _dfbd {_fec ,_aff =_dfg .ReferenceBitmap .GetByte (_fdb -_ccb +_dgg );if _aff !=nil {return ;};_aca =int (_fec )<<2;};_addg =(_addg <<8)|_aca ;};if _gad >=0&&_gad < _dfg .ReferenceBitmap .Height {_fec =0;
if _dfbd {_fec ,_aff =_dfg .ReferenceBitmap .GetByte (_fdb +_dgg );if _aff !=nil {return ;};};_eec =(_eec <<8)|int (_fec );};if _gad > -2&&_gad < (_dfg .ReferenceBitmap .Height -1){_fec =0;if _dfbd {_fec ,_aff =_dfg .ReferenceBitmap .GetByte (_fdb +_ccb +_dgg );
if _aff !=nil {return ;};};_fcg =(_fcg <<8)|int (_fec );};for _fff :=0;_fff < _fcgc ;_fff ++{var _ffbc int ;_fga :=(_eeag >>4)&0x1ff;switch _fga {case 0x1ff:_ffbc =1;case 0x00:_ffbc =0;default:_dfg ._ac .SetIndex (int32 (_fbab ));_ffbc ,_aff =_dfg ._abd .DecodeBit (_dfg ._ac );
if _aff !=nil {return ;};};_ebea :=uint (7-_fff );_dcc |=_ffbc <<_ebea ;_fbab =((_fbab &0x0d6)<<1)|_ffbc |(_dfa >>_ebea +5)&0x002|((_fcg >>_ebea +2)&0x010)|((_eec >>_ebea )&0x040)|((_addg >>_ebea )&0x200);_eeag =((_eeag &0xdb)<<1)|((_fcg >>_ebea +2)&0x010)|((_eec >>_ebea )&0x080)|((_addg >>_ebea )&0x400);
};_aff =_dfg .RegionBitmap .SetByte (_aa ,byte (_dcc ));if _aff !=nil {return ;};_aa ++;_fdb ++;};return nil ;};func (_aeee *HalftoneRegion )GetRegionInfo ()*RegionSegment {return _aeee .RegionSegment };func (_egbfb *Header )writeSegmentNumber (_cbf _g .BinaryWriter )(_caed int ,_dcfb error ){_dabd :=make ([]byte ,4);
_dgf .BigEndian .PutUint32 (_dabd ,_egbfb .SegmentNumber );if _caed ,_dcfb =_cbf .Write (_dabd );_dcfb !=nil {return 0,_fe .Wrap (_dcfb ,"\u0048e\u0061\u0064\u0065\u0072.\u0077\u0072\u0069\u0074\u0065S\u0065g\u006de\u006e\u0074\u004e\u0075\u006d\u0062\u0065r","");
};return _caed ,nil ;};func (_fdgg *SymbolDictionary )getUserTable (_aace int )(_fd .Tabler ,error ){var _bgaf int ;for _ ,_adfg :=range _fdgg .Header .RTSegments {if _adfg .Type ==53{if _bgaf ==_aace {_fcbd ,_bfab :=_adfg .GetSegmentData ();if _bfab !=nil {return nil ,_bfab ;
};_fecc :=_fcbd .(_fd .BasicTabler );return _fd .NewEncodedTable (_fecc );};_bgaf ++;};};return nil ,nil ;};type OrganizationType uint8 ;func (_geef *SymbolDictionary )parseHeader ()(_fcga error ){_cdg .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _fcga !=nil {_cdg .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u0020\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u005b\u0050\u0041\u0052SE\u002d\u0048\u0045A\u0044\u0045R\u005d\u0020\u0066\u0061\u0069\u006ce\u0064\u002e \u0025\u0076",_fcga );
}else {_cdg .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _fcga =_geef .readRegionFlags ();_fcga !=nil {return _fcga ;};if _fcga =_geef .setAtPixels ();_fcga !=nil {return _fcga ;};if _fcga =_geef .setRefinementAtPixels ();_fcga !=nil {return _fcga ;};if _fcga =_geef .readNumberOfExportedSymbols ();_fcga !=nil {return _fcga ;
};if _fcga =_geef .readNumberOfNewSymbols ();_fcga !=nil {return _fcga ;};if _fcga =_geef .setInSyms ();_fcga !=nil {return _fcga ;};if _geef ._addd {_gaed :=_geef .Header .RTSegments ;for _feeg :=len (_gaed )-1;_feeg >=0;_feeg --{if _gaed [_feeg ].Type ==0{_dgggb ,_aefef :=_gaed [_feeg ].SegmentData .(*SymbolDictionary );
if !_aefef {_fcga =_fa .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074:\u0020\u0025\u0076\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020S\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_gaed [_feeg ]);
return _fcga ;};if _dgggb ._addd {_geef .setRetainedCodingContexts (_dgggb );};break ;};};};if _fcga =_geef .checkInput ();_fcga !=nil {return _fcga ;};return nil ;};func (_cbfe *SymbolDictionary )encodeFlags (_ebfa _g .BinaryWriter )(_bge int ,_dbe error ){const _ecbca ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _dbe =_ebfa .SkipBits (3);_dbe !=nil {return 0,_fe .Wrap (_dbe ,_ecbca ,"\u0065\u006d\u0070\u0074\u0079\u0020\u0062\u0069\u0074\u0073");};var _eff int ;if _cbfe .SdrTemplate > 0{_eff =1;};if _dbe =_ebfa .WriteBit (_eff );_dbe !=nil {return _bge ,_fe .Wrap (_dbe ,_ecbca ,"s\u0064\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");
};_eff =0;if _cbfe .SdTemplate > 1{_eff =1;};if _dbe =_ebfa .WriteBit (_eff );_dbe !=nil {return _bge ,_fe .Wrap (_dbe ,_ecbca ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_eff =0;if _cbfe .SdTemplate ==1||_cbfe .SdTemplate ==3{_eff =1;
};if _dbe =_ebfa .WriteBit (_eff );_dbe !=nil {return _bge ,_fe .Wrap (_dbe ,_ecbca ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_eff =0;if _cbfe ._bedb {_eff =1;};if _dbe =_ebfa .WriteBit (_eff );_dbe !=nil {return _bge ,_fe .Wrap (_dbe ,_ecbca ,"\u0063\u006f\u0064in\u0067\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0065\u0064");
};_eff =0;if _cbfe ._addd {_eff =1;};if _dbe =_ebfa .WriteBit (_eff );_dbe !=nil {return _bge ,_fe .Wrap (_dbe ,_ecbca ,"\u0063\u006f\u0064\u0069ng\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0075\u0073\u0065\u0064");};_eff =0;if _cbfe .SdHuffAggInstanceSelection {_eff =1;
};if _dbe =_ebfa .WriteBit (_eff );_dbe !=nil {return _bge ,_fe .Wrap (_dbe ,_ecbca ,"\u0073\u0064\u0048\u0075\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074");};_eff =int (_cbfe .SdHuffBMSizeSelection );if _dbe =_ebfa .WriteBit (_eff );_dbe !=nil {return _bge ,_fe .Wrap (_dbe ,_ecbca ,"\u0073\u0064\u0048u\u0066\u0066\u0042\u006d\u0053\u0069\u007a\u0065");
};_eff =0;if _cbfe .SdHuffDecodeWidthSelection > 1{_eff =1;};if _dbe =_ebfa .WriteBit (_eff );_dbe !=nil {return _bge ,_fe .Wrap (_dbe ,_ecbca ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_eff =0;switch _cbfe .SdHuffDecodeWidthSelection {case 1,3:_eff =1;
};if _dbe =_ebfa .WriteBit (_eff );_dbe !=nil {return _bge ,_fe .Wrap (_dbe ,_ecbca ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_eff =0;if _cbfe .SdHuffDecodeHeightSelection > 1{_eff =1;};if _dbe =_ebfa .WriteBit (_eff );_dbe !=nil {return _bge ,_fe .Wrap (_dbe ,_ecbca ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");
};_eff =0;switch _cbfe .SdHuffDecodeHeightSelection {case 1,3:_eff =1;};if _dbe =_ebfa .WriteBit (_eff );_dbe !=nil {return _bge ,_fe .Wrap (_dbe ,_ecbca ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_eff =0;if _cbfe .UseRefinementAggregation {_eff =1;
};if _dbe =_ebfa .WriteBit (_eff );_dbe !=nil {return _bge ,_fe .Wrap (_dbe ,_ecbca ,"\u0073\u0064\u0052\u0065\u0066\u0041\u0067\u0067");};_eff =0;if _cbfe .IsHuffmanEncoded {_eff =1;};if _dbe =_ebfa .WriteBit (_eff );_dbe !=nil {return _bge ,_fe .Wrap (_dbe ,_ecbca ,"\u0073\u0064\u0048\u0075\u0066\u0066");
};return 2,nil ;};func (_decf *PageInformationSegment )readRequiresAuxiliaryBuffer ()error {_gbdd ,_eece :=_decf ._gdc .ReadBit ();if _eece !=nil {return _eece ;};if _gbdd ==1{_decf ._dead =true ;};return nil ;};func (_agda *TextRegion )readUseRefinement ()error {if !_agda .UseRefinement ||_agda .SbrTemplate !=0{return nil ;
};var (_aeeg byte ;_cfde error ;);_agda .SbrATX =make ([]int8 ,2);_agda .SbrATY =make ([]int8 ,2);_aeeg ,_cfde =_agda ._gaad .ReadByte ();if _cfde !=nil {return _cfde ;};_agda .SbrATX [0]=int8 (_aeeg );_aeeg ,_cfde =_agda ._gaad .ReadByte ();if _cfde !=nil {return _cfde ;
};_agda .SbrATY [0]=int8 (_aeeg );_aeeg ,_cfde =_agda ._gaad .ReadByte ();if _cfde !=nil {return _cfde ;};_agda .SbrATX [1]=int8 (_aeeg );_aeeg ,_cfde =_agda ._gaad .ReadByte ();if _cfde !=nil {return _cfde ;};_agda .SbrATY [1]=int8 (_aeeg );return nil ;
};func (_debgg *TextRegion )GetRegionBitmap ()(*_b .Bitmap ,error ){if _debgg .RegionBitmap !=nil {return _debgg .RegionBitmap ,nil ;};if !_debgg .IsHuffmanEncoded {if _bggc :=_debgg .setCodingStatistics ();_bggc !=nil {return nil ,_bggc ;};};if _abgd :=_debgg .createRegionBitmap ();
_abgd !=nil {return nil ,_abgd ;};if _cfdc :=_debgg .decodeSymbolInstances ();_cfdc !=nil {return nil ,_cfdc ;};return _debgg .RegionBitmap ,nil ;};type Segmenter interface{Init (_gdg *Header ,_cgf _g .StreamReader )error ;};func (_cebbb *SymbolDictionary )GetDictionary ()([]*_b .Bitmap ,error ){_cdg .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c-\u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){_cdg .Log .Trace ("\u005b\u0053\u0059M\u0042\u004f\u004c\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
_cdg .Log .Trace ("\u005b\u0053Y\u004d\u0042\u004f\u004c\u002dD\u0049\u0043\u0054\u0049\u004fN\u0041\u0052\u0059\u005d\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020\u000a\u0045\u0078\u003a\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u000a\u006e\u0065\u0077\u003a\u0027\u0025\u0073\u0027",_cebbb ._efcb ,_cebbb ._caeg );
}();if _cebbb ._efcb ==nil {var _acae error ;if _cebbb .UseRefinementAggregation {_cebbb ._cgced =_cebbb .getSbSymCodeLen ();};if !_cebbb .IsHuffmanEncoded {if _acae =_cebbb .setCodingStatistics ();_acae !=nil {return nil ,_acae ;};};_cebbb ._caeg =make ([]*_b .Bitmap ,_cebbb .NumberOfNewSymbols );
var _ffdbb []int ;if _cebbb .IsHuffmanEncoded &&!_cebbb .UseRefinementAggregation {_ffdbb =make ([]int ,_cebbb .NumberOfNewSymbols );};if _acae =_cebbb .setSymbolsArray ();_acae !=nil {return nil ,_acae ;};var _cgab ,_gabb int64 ;_cebbb ._dded =0;for _cebbb ._dded < _cebbb .NumberOfNewSymbols {_gabb ,_acae =_cebbb .decodeHeightClassDeltaHeight ();
if _acae !=nil {return nil ,_acae ;};_cgab +=_gabb ;var _dccd ,_fffb uint32 ;_aeg :=int64 (_cebbb ._dded );for {var _afcd int64 ;_afcd ,_acae =_cebbb .decodeDifferenceWidth ();if _e .Is (_acae ,_ce .ErrOOB ){break ;};if _acae !=nil {return nil ,_acae ;
};if _cebbb ._dded >=_cebbb .NumberOfNewSymbols {break ;};_dccd +=uint32 (_afcd );_fffb +=_dccd ;if !_cebbb .IsHuffmanEncoded ||_cebbb .UseRefinementAggregation {if !_cebbb .UseRefinementAggregation {_acae =_cebbb .decodeDirectlyThroughGenericRegion (_dccd ,uint32 (_cgab ));
if _acae !=nil {return nil ,_acae ;};}else {_acae =_cebbb .decodeAggregate (_dccd ,uint32 (_cgab ));if _acae !=nil {return nil ,_acae ;};};}else if _cebbb .IsHuffmanEncoded &&!_cebbb .UseRefinementAggregation {_ffdbb [_cebbb ._dded ]=int (_dccd );};_cebbb ._dded ++;
};if _cebbb .IsHuffmanEncoded &&!_cebbb .UseRefinementAggregation {var _aceef int64 ;if _cebbb .SdHuffBMSizeSelection ==0{var _cefd _fd .Tabler ;_cefd ,_acae =_fd .GetStandardTable (1);if _acae !=nil {return nil ,_acae ;};_aceef ,_acae =_cefd .Decode (_cebbb ._ggba );
if _acae !=nil {return nil ,_acae ;};}else {_aceef ,_acae =_cebbb .huffDecodeBmSize ();if _acae !=nil {return nil ,_acae ;};};_cebbb ._ggba .Align ();var _gacd *_b .Bitmap ;_gacd ,_acae =_cebbb .decodeHeightClassCollectiveBitmap (_aceef ,uint32 (_cgab ),_fffb );
if _acae !=nil {return nil ,_acae ;};_acae =_cebbb .decodeHeightClassBitmap (_gacd ,_aeg ,int (_cgab ),_ffdbb );if _acae !=nil {return nil ,_acae ;};};};_afbe ,_acae :=_cebbb .getToExportFlags ();if _acae !=nil {return nil ,_acae ;};_cebbb .setExportedSymbols (_afbe );
};return _cebbb ._efcb ,nil ;};func (_ggfe *GenericRegion )GetRegionInfo ()*RegionSegment {return _ggfe .RegionSegment };func (_cgcd *SymbolDictionary )encodeSymbols (_ccda _g .BinaryWriter )(_egcc int ,_aaaeg error ){const _acddb ="\u0065\u006e\u0063o\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c";
_fgdd :=_cd .New ();_fgdd .Init ();_bagd ,_aaaeg :=_cgcd ._gadg .SelectByIndexes (_cgcd ._cag );if _aaaeg !=nil {return 0,_fe .Wrap (_aaaeg ,_acddb ,"\u0069n\u0069\u0074\u0069\u0061\u006c");};_efeg :=map[*_b .Bitmap ]int {};for _agefd ,_edeg :=range _bagd .Values {_efeg [_edeg ]=_agefd ;
};_bagd .SortByHeight ();var _agcf ,_bcbd int ;_edgb ,_aaaeg :=_bagd .GroupByHeight ();if _aaaeg !=nil {return 0,_fe .Wrap (_aaaeg ,_acddb ,"");};for _ ,_bbed :=range _edgb .Values {_egec :=_bbed .Values [0].Height ;_dgce :=_egec -_agcf ;if _aaaeg =_fgdd .EncodeInteger (_cd .IADH ,_dgce );
_aaaeg !=nil {return 0,_fe .Wrapf (_aaaeg ,_acddb ,"\u0049\u0041\u0044\u0048\u0020\u0066\u006f\u0072\u0020\u0064\u0068\u003a \u0027\u0025\u0064\u0027",_dgce );};_agcf =_egec ;_cegc ,_gdef :=_bbed .GroupByWidth ();if _gdef !=nil {return 0,_fe .Wrapf (_gdef ,_acddb ,"\u0068\u0065\u0069g\u0068\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_egec );
};var _dfcf int ;for _ ,_abef :=range _cegc .Values {for _ ,_ecgc :=range _abef .Values {_bbdf :=_ecgc .Width ;_cacg :=_bbdf -_dfcf ;if _gdef =_fgdd .EncodeInteger (_cd .IADW ,_cacg );_gdef !=nil {return 0,_fe .Wrapf (_gdef ,_acddb ,"\u0049\u0041\u0044\u0057\u0020\u0066\u006f\u0072\u0020\u0064\u0077\u003a \u0027\u0025\u0064\u0027",_cacg );
};_dfcf +=_cacg ;if _gdef =_fgdd .EncodeBitmap (_ecgc ,false );_gdef !=nil {return 0,_fe .Wrapf (_gdef ,_acddb ,"H\u0065i\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u0020W\u0069\u0064\u0074\u0068: \u0025\u0064",_egec ,_bbdf );};_aefb :=_efeg [_ecgc ];_cgcd ._gfeg [_aefb ]=_bcbd ;
_bcbd ++;};};if _gdef =_fgdd .EncodeOOB (_cd .IADW );_gdef !=nil {return 0,_fe .Wrap (_gdef ,_acddb ,"\u0049\u0041\u0044\u0057");};};if _aaaeg =_fgdd .EncodeInteger (_cd .IAEX ,0);_aaaeg !=nil {return 0,_fe .Wrap (_aaaeg ,_acddb ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};if _aaaeg =_fgdd .EncodeInteger (_cd .IAEX ,len (_cgcd ._cag ));_aaaeg !=nil {return 0,_fe .Wrap (_aaaeg ,_acddb ,"\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0073\u0079m\u0062\u006f\u006c\u0073");};_fgdd .Final ();_fdgb ,_aaaeg :=_fgdd .WriteTo (_ccda );
if _aaaeg !=nil {return 0,_fe .Wrap (_aaaeg ,_acddb ,"\u0077\u0072i\u0074\u0069\u006e\u0067 \u0065\u006ec\u006f\u0064\u0065\u0072\u0020\u0063\u006f\u006et\u0065\u0078\u0074\u0020\u0074\u006f\u0020\u0027\u0077\u0027\u0020\u0077r\u0069\u0074\u0065\u0072");
};return int (_fdgb ),nil ;};func (_gefe *PageInformationSegment )readResolution ()error {_ccad ,_gce :=_gefe ._gdc .ReadBits (32);if _gce !=nil {return _gce ;};_gefe .ResolutionX =int (_ccad &_a .MaxInt32 );_ccad ,_gce =_gefe ._gdc .ReadBits (32);if _gce !=nil {return _gce ;
};_gefe .ResolutionY =int (_ccad &_a .MaxInt32 );return nil ;};type Pager interface{GetSegment (int )(*Header ,error );GetBitmap ()(*_b .Bitmap ,error );};func (_ggfg *TextRegion )String ()string {_eecef :=&_fb .Builder {};_eecef .WriteString ("\u000a[\u0054E\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u000a");
_eecef .WriteString (_ggfg .RegionInfo .String ()+"\u000a");_eecef .WriteString (_fa .Sprintf ("\u0009\u002d\u0020\u0053br\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0025\u0076\u000a",_ggfg .SbrTemplate ));_eecef .WriteString (_fa .Sprintf ("\u0009-\u0020S\u0062\u0044\u0073\u004f\u0066f\u0073\u0065t\u003a\u0020\u0025\u0076\u000a",_ggfg .SbDsOffset ));
_eecef .WriteString (_fa .Sprintf ("\t\u002d \u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0050i\u0078\u0065\u006c\u003a %\u0076\u000a",_ggfg .DefaultPixel ));_eecef .WriteString (_fa .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0076\u000a",_ggfg .CombinationOperator ));
_eecef .WriteString (_fa .Sprintf ("\t\u002d \u0049\u0073\u0054\u0072\u0061\u006e\u0073\u0070o\u0073\u0065\u0064\u003a %\u0076\u000a",_ggfg .IsTransposed ));_eecef .WriteString (_fa .Sprintf ("\u0009\u002d\u0020Re\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0043\u006f\u0072\u006e\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_ggfg .ReferenceCorner ));
_eecef .WriteString (_fa .Sprintf ("\t\u002d\u0020\u0055\u0073eR\u0065f\u0069\u006e\u0065\u006d\u0065n\u0074\u003a\u0020\u0025\u0076\u000a",_ggfg .UseRefinement ));_eecef .WriteString (_fa .Sprintf ("\u0009-\u0020\u0049\u0073\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045n\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0076\u000a",_ggfg .IsHuffmanEncoded ));
if _ggfg .IsHuffmanEncoded {_eecef .WriteString (_fa .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_ggfg .SbHuffRSize ));_eecef .WriteString (_fa .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0059:\u0020\u0025\u0076\u000a",_ggfg .SbHuffRDY ));
_eecef .WriteString (_fa .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0058:\u0020\u0025\u0076\u000a",_ggfg .SbHuffRDX ));_eecef .WriteString (_fa .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069\u0067\u0068\u0074\u003a\u0020\u0025v\u000a",_ggfg .SbHuffRDHeight ));
_eecef .WriteString (_fa .Sprintf ("\t\u002d\u0020\u0053\u0062Hu\u0066f\u0052\u0044\u0057\u0069\u0064t\u0068\u003a\u0020\u0025\u0076\u000a",_ggfg .SbHuffRDWidth ));_eecef .WriteString (_fa .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0054\u003a\u0020\u0025\u0076\u000a",_ggfg .SbHuffDT ));
_eecef .WriteString (_fa .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0053\u003a\u0020\u0025\u0076\u000a",_ggfg .SbHuffDS ));_eecef .WriteString (_fa .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0046\u0053\u003a\u0020\u0025\u0076\u000a",_ggfg .SbHuffFS ));
};_eecef .WriteString (_fa .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_ggfg .SbrATX ));_eecef .WriteString (_fa .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0059:\u0020\u0025\u0076\u000a",_ggfg .SbrATY ));
_eecef .WriteString (_fa .Sprintf ("\u0009\u002d\u0020N\u0075\u006d\u0062\u0065r\u004f\u0066\u0053\u0079\u006d\u0062\u006fl\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_ggfg .NumberOfSymbolInstances ));_eecef .WriteString (_fa .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_ggfg .SbrATX ));
return _eecef .String ();};func (_afdd *SymbolDictionary )decodeDifferenceWidth ()(int64 ,error ){if _afdd .IsHuffmanEncoded {switch _afdd .SdHuffDecodeWidthSelection {case 0:_fbbe ,_cgec :=_fd .GetStandardTable (2);if _cgec !=nil {return 0,_cgec ;};return _fbbe .Decode (_afdd ._ggba );
case 1:_gfgg ,_abbg :=_fd .GetStandardTable (3);if _abbg !=nil {return 0,_abbg ;};return _gfgg .Decode (_afdd ._ggba );case 3:if _afdd ._afbc ==nil {var _bfba int ;if _afdd .SdHuffDecodeHeightSelection ==3{_bfba ++;};_cffe ,_dbdc :=_afdd .getUserTable (_bfba );
if _dbdc !=nil {return 0,_dbdc ;};_afdd ._afbc =_cffe ;};return _afdd ._afbc .Decode (_afdd ._ggba );};}else {_cccd ,_dfce :=_afdd ._aaae .DecodeInt (_afdd ._cbg );if _dfce !=nil {return 0,_dfce ;};return int64 (_cccd ),nil ;};return 0,nil ;};func (_gdfbc *SymbolDictionary )readAtPixels (_gdde int )error {_gdfbc .SdATX =make ([]int8 ,_gdde );
_gdfbc .SdATY =make ([]int8 ,_gdde );var (_gbfg byte ;_eedg error ;);for _ffbg :=0;_ffbg < _gdde ;_ffbg ++{_gbfg ,_eedg =_gdfbc ._ggba .ReadByte ();if _eedg !=nil {return _eedg ;};_gdfbc .SdATX [_ffbg ]=int8 (_gbfg );_gbfg ,_eedg =_gdfbc ._ggba .ReadByte ();
if _eedg !=nil {return _eedg ;};_gdfbc .SdATY [_ffbg ]=int8 (_gbfg );};return nil ;};func (_baaf *Header )writeReferredToSegments (_fcb _g .BinaryWriter )(_cfcb int ,_aaaaf error ){const _cdb ="\u0077\u0072\u0069te\u0052\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
var (_bdcf uint16 ;_acbf uint32 ;);_cfd :=_baaf .referenceSize ();_gca :=1;_adaa :=make ([]byte ,_cfd );for _ ,_agef :=range _baaf .RTSNumbers {switch _cfd {case 4:_acbf =uint32 (_agef );_dgf .BigEndian .PutUint32 (_adaa ,_acbf );_gca ,_aaaaf =_fcb .Write (_adaa );
if _aaaaf !=nil {return 0,_fe .Wrap (_aaaaf ,_cdb ,"u\u0069\u006e\u0074\u0033\u0032\u0020\u0073\u0069\u007a\u0065");};case 2:_bdcf =uint16 (_agef );_dgf .BigEndian .PutUint16 (_adaa ,_bdcf );_gca ,_aaaaf =_fcb .Write (_adaa );if _aaaaf !=nil {return 0,_fe .Wrap (_aaaaf ,_cdb ,"\u0075\u0069\u006e\u0074\u0031\u0036");
};default:if _aaaaf =_fcb .WriteByte (byte (_agef ));_aaaaf !=nil {return 0,_fe .Wrap (_aaaaf ,_cdb ,"\u0075\u0069\u006et\u0038");};};_cfcb +=_gca ;};return _cfcb ,nil ;};func (_afaf *PageInformationSegment )Size ()int {return 19};func (_ebc *GenericRegion )parseHeader ()(_agf error ){_cdg .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052I\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0050\u0061\u0072s\u0069\u006e\u0067\u0048\u0065\u0061\u0064e\u0072\u002e\u002e\u002e");
defer func (){if _agf !=nil {_cdg .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e]\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065r\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0077\u0069th\u0020\u0065\u0072\u0072\u006f\u0072\u002e\u0020\u0025\u0076",_agf );
}else {_cdg .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049C\u002d\u0052\u0045G\u0049\u004f\u004e]\u0020\u0050a\u0072\u0073\u0069\u006e\u0067\u0048e\u0061de\u0072\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0053\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079\u002e\u002e\u002e");
};}();var (_bbef int ;_eaf uint64 ;);if _agf =_ebc .RegionSegment .parseHeader ();_agf !=nil {return _agf ;};if _ ,_agf =_ebc ._cdfe .ReadBits (3);_agf !=nil {return _agf ;};_bbef ,_agf =_ebc ._cdfe .ReadBit ();if _agf !=nil {return _agf ;};if _bbef ==1{_ebc .UseExtTemplates =true ;
};_bbef ,_agf =_ebc ._cdfe .ReadBit ();if _agf !=nil {return _agf ;};if _bbef ==1{_ebc .IsTPGDon =true ;};_eaf ,_agf =_ebc ._cdfe .ReadBits (2);if _agf !=nil {return _agf ;};_ebc .GBTemplate =byte (_eaf &0xf);_bbef ,_agf =_ebc ._cdfe .ReadBit ();if _agf !=nil {return _agf ;
};if _bbef ==1{_ebc .IsMMREncoded =true ;};if !_ebc .IsMMREncoded {_acd :=1;if _ebc .GBTemplate ==0{_acd =4;if _ebc .UseExtTemplates {_acd =12;};};if _agf =_ebc .readGBAtPixels (_acd );_agf !=nil {return _agf ;};};if _agf =_ebc .computeSegmentDataStructure ();
_agf !=nil {return _agf ;};_cdg .Log .Trace ("\u0025\u0073",_ebc );return nil ;};func (_acee *SymbolDictionary )encodeRefinementATFlags (_ffbcb _g .BinaryWriter )(_gbbab int ,_aceb error ){const _cdgf ="\u0065\u006e\u0063od\u0065\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0041\u0054\u0046\u006c\u0061\u0067\u0073";
if !_acee .UseRefinementAggregation ||_acee .SdrTemplate !=0{return 0,nil ;};for _aefa :=0;_aefa < 2;_aefa ++{if _aceb =_ffbcb .WriteByte (byte (_acee .SdrATX [_aefa ]));_aceb !=nil {return _gbbab ,_fe .Wrapf (_aceb ,_cdgf ,"\u0053\u0064\u0072\u0041\u0054\u0058\u005b\u0025\u0064\u005d",_aefa );
};_gbbab ++;if _aceb =_ffbcb .WriteByte (byte (_acee .SdrATY [_aefa ]));_aceb !=nil {return _gbbab ,_fe .Wrapf (_aceb ,_cdgf ,"\u0053\u0064\u0072\u0041\u0054\u0059\u005b\u0025\u0064\u005d",_aefa );};_gbbab ++;};return _gbbab ,nil ;};func (_cgda Type )String ()string {switch _cgda {case TSymbolDictionary :return "\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079";
case TIntermediateTextRegion :return "\u0049n\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020T\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateTextRegion :return "I\u006d\u006d\u0065\u0064ia\u0074e\u0020\u0054\u0065\u0078\u0074 \u0052\u0065\u0067\u0069\u006f\u006e";
case TImmediateLosslessTextRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020L\u006f\u0073\u0073\u006c\u0065\u0073\u0073 \u0054\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TPatternDictionary :return "\u0050a\u0074t\u0065\u0072\u006e\u0020\u0044i\u0063\u0074i\u006f\u006e\u0061\u0072\u0079";
case TIntermediateHalftoneRegion :return "\u0049\u006e\u0074\u0065r\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0048\u0061l\u0066t\u006f\u006e\u0065\u0020\u0052\u0065\u0067i\u006f\u006e";case TImmediateHalftoneRegion :return "\u0049m\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u0048\u0061l\u0066t\u006fn\u0065\u0020\u0052\u0065\u0067\u0069\u006fn";
case TImmediateLosslessHalftoneRegion :return "\u0049\u006d\u006ded\u0069\u0061\u0074\u0065\u0020\u004c\u006f\u0073\u0073l\u0065s\u0073 \u0048a\u006c\u0066\u0074\u006f\u006e\u0065\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TIntermediateGenericRegion :return "I\u006e\u0074\u0065\u0072\u006d\u0065d\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020R\u0065g\u0069\u006f\u006e";
case TImmediateGenericRegion :return "\u0049m\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006ee\u0072\u0069\u0063\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessGenericRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u004c\u006f\u0073\u0073\u006c\u0065\u0073\u0073\u0020\u0047e\u006e\u0065\u0072\u0069\u0063\u0020\u0052e\u0067\u0069\u006f\u006e";
case TIntermediateGenericRefinementRegion :return "\u0049\u006e\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0020\u0052\u0065\u0066i\u006e\u0065\u006d\u0065\u006et\u0020\u0052e\u0067\u0069\u006f\u006e";
case TImmediateGenericRefinementRegion :return "I\u006d\u006d\u0065\u0064\u0069\u0061t\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020\u0052\u0065\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020\u0052\u0065\u0067\u0069o\u006e";case TImmediateLosslessGenericRefinementRegion :return "\u0049m\u006d\u0065d\u0069\u0061\u0074\u0065 \u004c\u006f\u0073s\u006c\u0065\u0073\u0073\u0020\u0047\u0065\u006e\u0065ri\u0063\u0020\u0052e\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020R\u0065\u0067i\u006f\u006e";
case TPageInformation :return "\u0050\u0061g\u0065\u0020\u0049n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e";case TEndOfPage :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0050\u0061\u0067\u0065";case TEndOfStrip :return "\u0045\u006e\u0064 \u004f\u0066\u0020\u0053\u0074\u0072\u0069\u0070";
case TEndOfFile :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0046\u0069\u006c\u0065";case TProfiles :return "\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0073";case TTables :return "\u0054\u0061\u0062\u006c\u0065\u0073";case TExtension :return "\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn";
case TBitmap :return "\u0042\u0069\u0074\u006d\u0061\u0070";};return "I\u006ev\u0061\u006c\u0069\u0064\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0020Ki\u006e\u0064";};func (_ceadad *TextRegion )decodeIb (_eggb ,_dbbab int64 )(*_b .Bitmap ,error ){const _dgab ="\u0064\u0065\u0063\u006f\u0064\u0065\u0049\u0062";
var (_edda error ;_dfgd *_b .Bitmap ;);if _eggb ==0{if int (_dbbab )> len (_ceadad .Symbols )-1{return nil ,_fe .Error (_dgab ,"\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0049\u0042\u0020\u0062\u0069\u0074\u006d\u0061\u0070\u002e\u0020\u0069\u006e\u0064\u0065x\u0020\u006f\u0075\u0074\u0020o\u0066\u0020r\u0061\u006e\u0067\u0065");
};return _ceadad .Symbols [int (_dbbab )],nil ;};var _cgdgb ,_dcgae ,_fdfc ,_faeca int64 ;_cgdgb ,_edda =_ceadad .decodeRdw ();if _edda !=nil {return nil ,_fe .Wrap (_edda ,_dgab ,"");};_dcgae ,_edda =_ceadad .decodeRdh ();if _edda !=nil {return nil ,_fe .Wrap (_edda ,_dgab ,"");
};_fdfc ,_edda =_ceadad .decodeRdx ();if _edda !=nil {return nil ,_fe .Wrap (_edda ,_dgab ,"");};_faeca ,_edda =_ceadad .decodeRdy ();if _edda !=nil {return nil ,_fe .Wrap (_edda ,_dgab ,"");};if _ceadad .IsHuffmanEncoded {if _ ,_edda =_ceadad .decodeSymInRefSize ();
_edda !=nil {return nil ,_fe .Wrap (_edda ,_dgab ,"");};_ceadad ._gaad .Align ();};_cagg :=_ceadad .Symbols [_dbbab ];_cfce :=uint32 (_cagg .Width );_fadf :=uint32 (_cagg .Height );_ebadb :=int32 (uint32 (_cgdgb )>>1)+int32 (_fdfc );_bfdf :=int32 (uint32 (_dcgae )>>1)+int32 (_faeca );
if _ceadad ._ebeed ==nil {_ceadad ._ebeed =_cbb (_ceadad ._gaad ,nil );};_ceadad ._ebeed .setParameters (_ceadad ._fgg ,_ceadad ._abaf ,_ceadad .SbrTemplate ,_cfce +uint32 (_cgdgb ),_fadf +uint32 (_dcgae ),_cagg ,_ebadb ,_bfdf ,false ,_ceadad .SbrATX ,_ceadad .SbrATY );
_dfgd ,_edda =_ceadad ._ebeed .GetRegionBitmap ();if _edda !=nil {return nil ,_fe .Wrap (_edda ,_dgab ,"\u0067\u0072\u0066");};if _ceadad .IsHuffmanEncoded {_ceadad ._gaad .Align ();};return _dfgd ,nil ;};func (_dggg *SymbolDictionary )getSymbol (_gdcg int )(*_b .Bitmap ,error ){const _ddecf ="\u0067e\u0074\u0053\u0079\u006d\u0062\u006fl";
_bfe ,_bcba :=_dggg ._gadg .GetBitmap (_dggg ._cag [_gdcg ]);if _bcba !=nil {return nil ,_fe .Wrap (_bcba ,_ddecf ,"\u0063\u0061n\u0027\u0074\u0020g\u0065\u0074\u0020\u0073\u0079\u006d\u0062\u006f\u006c");};return _bfe ,nil ;};func (_bgdb *SymbolDictionary )decodeHeightClassDeltaHeight ()(int64 ,error ){if _bgdb .IsHuffmanEncoded {return _bgdb .decodeHeightClassDeltaHeightWithHuffman ();
};_bba ,_dcgd :=_bgdb ._aaae .DecodeInt (_bgdb ._bgfb );if _dcgd !=nil {return 0,_dcgd ;};return int64 (_bba ),nil ;};func (_bgcb *PageInformationSegment )readIsLossless ()error {_ecca ,_efec :=_bgcb ._gdc .ReadBit ();if _efec !=nil {return _efec ;};if _ecca ==1{_bgcb .IsLossless =true ;
};return nil ;};type EndOfStripe struct{_gg _g .StreamReader ;_cg int ;};func (_acbagf *TextRegion )decodeRI ()(int64 ,error ){if !_acbagf .UseRefinement {return 0,nil ;};if _acbagf .IsHuffmanEncoded {_agff ,_cbacc :=_acbagf ._gaad .ReadBit ();return int64 (_agff ),_cbacc ;
};_cgff ,_fade :=_acbagf ._abaf .DecodeInt (_acbagf ._ebbg );return int64 (_cgff ),_fade ;};func (_adec *PatternDictionary )extractPatterns (_abdb *_b .Bitmap )error {var _gcaa int ;_ecdf :=make ([]*_b .Bitmap ,_adec .GrayMax +1);for _gcaa <=int (_adec .GrayMax ){_cacc :=int (_adec .HdpWidth )*_gcaa ;
_ffdb :=_c .Rect (_cacc ,0,_cacc +int (_adec .HdpWidth ),int (_adec .HdpHeight ));_aggf ,_abdge :=_b .Extract (_ffdb ,_abdb );if _abdge !=nil {return _abdge ;};_ecdf [_gcaa ]=_aggf ;_gcaa ++;};_adec .Patterns =_ecdf ;return nil ;};func (_adge *GenericRegion )overrideAtTemplate0b (_ccc ,_eadb ,_agbe ,_fbg ,_fge ,_ggfa int )int {if _adge .GBAtOverride [0]{_ccc &=0xFFFD;
if _adge .GBAtY [0]==0&&_adge .GBAtX [0]>=-int8 (_fge ){_ccc |=(_fbg >>uint (int8 (_ggfa )-_adge .GBAtX [0]&0x1))<<1;}else {_ccc |=int (_adge .getPixel (_eadb +int (_adge .GBAtX [0]),_agbe +int (_adge .GBAtY [0])))<<1;};};if _adge .GBAtOverride [1]{_ccc &=0xDFFF;
if _adge .GBAtY [1]==0&&_adge .GBAtX [1]>=-int8 (_fge ){_ccc |=(_fbg >>uint (int8 (_ggfa )-_adge .GBAtX [1]&0x1))<<13;}else {_ccc |=int (_adge .getPixel (_eadb +int (_adge .GBAtX [1]),_agbe +int (_adge .GBAtY [1])))<<13;};};if _adge .GBAtOverride [2]{_ccc &=0xFDFF;
if _adge .GBAtY [2]==0&&_adge .GBAtX [2]>=-int8 (_fge ){_ccc |=(_fbg >>uint (int8 (_ggfa )-_adge .GBAtX [2]&0x1))<<9;}else {_ccc |=int (_adge .getPixel (_eadb +int (_adge .GBAtX [2]),_agbe +int (_adge .GBAtY [2])))<<9;};};if _adge .GBAtOverride [3]{_ccc &=0xBFFF;
if _adge .GBAtY [3]==0&&_adge .GBAtX [3]>=-int8 (_fge ){_ccc |=(_fbg >>uint (int8 (_ggfa )-_adge .GBAtX [3]&0x1))<<14;}else {_ccc |=int (_adge .getPixel (_eadb +int (_adge .GBAtX [3]),_agbe +int (_adge .GBAtY [3])))<<14;};};if _adge .GBAtOverride [4]{_ccc &=0xEFFF;
if _adge .GBAtY [4]==0&&_adge .GBAtX [4]>=-int8 (_fge ){_ccc |=(_fbg >>uint (int8 (_ggfa )-_adge .GBAtX [4]&0x1))<<12;}else {_ccc |=int (_adge .getPixel (_eadb +int (_adge .GBAtX [4]),_agbe +int (_adge .GBAtY [4])))<<12;};};if _adge .GBAtOverride [5]{_ccc &=0xFFDF;
if _adge .GBAtY [5]==0&&_adge .GBAtX [5]>=-int8 (_fge ){_ccc |=(_fbg >>uint (int8 (_ggfa )-_adge .GBAtX [5]&0x1))<<5;}else {_ccc |=int (_adge .getPixel (_eadb +int (_adge .GBAtX [5]),_agbe +int (_adge .GBAtY [5])))<<5;};};if _adge .GBAtOverride [6]{_ccc &=0xFFFB;
if _adge .GBAtY [6]==0&&_adge .GBAtX [6]>=-int8 (_fge ){_ccc |=(_fbg >>uint (int8 (_ggfa )-_adge .GBAtX [6]&0x1))<<2;}else {_ccc |=int (_adge .getPixel (_eadb +int (_adge .GBAtX [6]),_agbe +int (_adge .GBAtY [6])))<<2;};};if _adge .GBAtOverride [7]{_ccc &=0xFFF7;
if _adge .GBAtY [7]==0&&_adge .GBAtX [7]>=-int8 (_fge ){_ccc |=(_fbg >>uint (int8 (_ggfa )-_adge .GBAtX [7]&0x1))<<3;}else {_ccc |=int (_adge .getPixel (_eadb +int (_adge .GBAtX [7]),_agbe +int (_adge .GBAtY [7])))<<3;};};if _adge .GBAtOverride [8]{_ccc &=0xF7FF;
if _adge .GBAtY [8]==0&&_adge .GBAtX [8]>=-int8 (_fge ){_ccc |=(_fbg >>uint (int8 (_ggfa )-_adge .GBAtX [8]&0x1))<<11;}else {_ccc |=int (_adge .getPixel (_eadb +int (_adge .GBAtX [8]),_agbe +int (_adge .GBAtY [8])))<<11;};};if _adge .GBAtOverride [9]{_ccc &=0xFFEF;
if _adge .GBAtY [9]==0&&_adge .GBAtX [9]>=-int8 (_fge ){_ccc |=(_fbg >>uint (int8 (_ggfa )-_adge .GBAtX [9]&0x1))<<4;}else {_ccc |=int (_adge .getPixel (_eadb +int (_adge .GBAtX [9]),_agbe +int (_adge .GBAtY [9])))<<4;};};if _adge .GBAtOverride [10]{_ccc &=0x7FFF;
if _adge .GBAtY [10]==0&&_adge .GBAtX [10]>=-int8 (_fge ){_ccc |=(_fbg >>uint (int8 (_ggfa )-_adge .GBAtX [10]&0x1))<<15;}else {_ccc |=int (_adge .getPixel (_eadb +int (_adge .GBAtX [10]),_agbe +int (_adge .GBAtY [10])))<<15;};};if _adge .GBAtOverride [11]{_ccc &=0xFDFF;
if _adge .GBAtY [11]==0&&_adge .GBAtX [11]>=-int8 (_fge ){_ccc |=(_fbg >>uint (int8 (_ggfa )-_adge .GBAtX [11]&0x1))<<10;}else {_ccc |=int (_adge .getPixel (_eadb +int (_adge .GBAtX [11]),_agbe +int (_adge .GBAtY [11])))<<10;};};return _ccc ;};func (_agd *Header )Encode (w _g .BinaryWriter )(_aea int ,_bdfc error ){const _ceb ="\u0048\u0065\u0061d\u0065\u0072\u002e\u0057\u0072\u0069\u0074\u0065";
var _bbb _g .BinaryWriter ;_cdg .Log .Trace ("\u005b\u0053\u0045G\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045\u0052\u005d[\u0045\u004e\u0043\u004f\u0044\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _bdfc !=nil {_cdg .Log .Trace ("[\u0053\u0045\u0047\u004d\u0045\u004eT\u002d\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0045\u004e\u0043\u004f\u0044E\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020%\u0076",_bdfc );
}else {_cdg .Log .Trace ("\u005b\u0053\u0045\u0047ME\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0025\u0076",_agd );_cdg .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045N\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u005b\u0045\u004e\u0043O\u0044\u0045\u005d\u0020\u0046\u0069\u006ei\u0073\u0068\u0065\u0064");
};}();w .FinishByte ();if _agd .SegmentData !=nil {_bgba ,_gbdg :=_agd .SegmentData .(SegmentEncoder );if !_gbdg {return 0,_fe .Errorf (_ceb ,"\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0064\u006f\u0065s\u006e\u0027\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074 \u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0045\u006e\u0063\u006f\u0064er\u0020\u0069\u006e\u0074\u0065\u0072\u0066\u0061\u0063\u0065",_agd .SegmentData );
};_bbb =_g .BufferedMSB ();_aea ,_bdfc =_bgba .Encode (_bbb );if _bdfc !=nil {return 0,_fe .Wrap (_bdfc ,_ceb ,"");};_agd .SegmentDataLength =uint64 (_aea );};if _agd .pageSize ()==4{_agd .PageAssociationFieldSize =true ;};var _deeg int ;_deeg ,_bdfc =_agd .writeSegmentNumber (w );
if _bdfc !=nil {return 0,_fe .Wrap (_bdfc ,_ceb ,"");};_aea +=_deeg ;if _bdfc =_agd .writeFlags (w );_bdfc !=nil {return _aea ,_fe .Wrap (_bdfc ,_ceb ,"");};_aea ++;_deeg ,_bdfc =_agd .writeReferredToCount (w );if _bdfc !=nil {return 0,_fe .Wrap (_bdfc ,_ceb ,"");
};_aea +=_deeg ;_deeg ,_bdfc =_agd .writeReferredToSegments (w );if _bdfc !=nil {return 0,_fe .Wrap (_bdfc ,_ceb ,"");};_aea +=_deeg ;_deeg ,_bdfc =_agd .writeSegmentPageAssociation (w );if _bdfc !=nil {return 0,_fe .Wrap (_bdfc ,_ceb ,"");};_aea +=_deeg ;
_deeg ,_bdfc =_agd .writeSegmentDataLength (w );if _bdfc !=nil {return 0,_fe .Wrap (_bdfc ,_ceb ,"");};_aea +=_deeg ;_agd .HeaderLength =int64 (_aea )-int64 (_agd .SegmentDataLength );if _bbb !=nil {if _ ,_bdfc =w .Write (_bbb .Data ());_bdfc !=nil {return _aea ,_fe .Wrap (_bdfc ,_ceb ,"\u0077r\u0069t\u0065\u0020\u0073\u0065\u0067m\u0065\u006et\u0020\u0064\u0061\u0074\u0061");
};};return _aea ,nil ;};type TextRegion struct{_gaad _g .StreamReader ;RegionInfo *RegionSegment ;SbrTemplate int8 ;SbDsOffset int8 ;DefaultPixel int8 ;CombinationOperator _b .CombinationOperator ;IsTransposed int8 ;ReferenceCorner int16 ;LogSBStrips int16 ;
UseRefinement bool ;IsHuffmanEncoded bool ;SbHuffRSize int8 ;SbHuffRDY int8 ;SbHuffRDX int8 ;SbHuffRDHeight int8 ;SbHuffRDWidth int8 ;SbHuffDT int8 ;SbHuffDS int8 ;SbHuffFS int8 ;SbrATX []int8 ;SbrATY []int8 ;NumberOfSymbolInstances uint32 ;_dfga int64 ;
SbStrips int8 ;NumberOfSymbols uint32 ;RegionBitmap *_b .Bitmap ;Symbols []*_b .Bitmap ;_abaf *_df .Decoder ;_ebeed *GenericRefinementRegion ;_geca *_df .DecoderStats ;_cbdf *_df .DecoderStats ;_dbbc *_df .DecoderStats ;_edgaf *_df .DecoderStats ;_ebbg *_df .DecoderStats ;
_bfabb *_df .DecoderStats ;_ceada *_df .DecoderStats ;_abag *_df .DecoderStats ;_fffad *_df .DecoderStats ;_fceb *_df .DecoderStats ;_fgg *_df .DecoderStats ;_acfb int8 ;_ebcd *_fd .FixedSizeTable ;Header *Header ;_dfdb _fd .Tabler ;_ebdb _fd .Tabler ;
_edgc _fd .Tabler ;_bdfga _fd .Tabler ;_faba _fd .Tabler ;_acgb _fd .Tabler ;_ddcc _fd .Tabler ;_efaf _fd .Tabler ;_bgafc ,_efee map[int ]int ;_adaac []int ;_bdg *_b .Points ;_gecc *_b .Bitmaps ;_badb *_db .IntSlice ;_ebef ,_bgffg int ;_dbab *_b .Boxes ;
};func (_aed *GenericRegion )computeSegmentDataStructure ()error {_aed .DataOffset =_aed ._cdfe .StreamPosition ();_aed .DataHeaderLength =_aed .DataOffset -_aed .DataHeaderOffset ;_aed .DataLength =int64 (_aed ._cdfe .Length ())-_aed .DataHeaderLength ;
return nil ;};func (_ccgcf *HalftoneRegion )computeSegmentDataStructure ()error {_ccgcf .DataOffset =_ccgcf ._dfbda .StreamPosition ();_ccgcf .DataHeaderLength =_ccgcf .DataOffset -_ccgcf .DataHeaderOffset ;_ccgcf .DataLength =int64 (_ccgcf ._dfbda .Length ())-_ccgcf .DataHeaderLength ;
return nil ;};func (_cdgc *PageInformationSegment )Encode (w _g .BinaryWriter )(_ccead int ,_fcdb error ){const _ecfc ="\u0050\u0061g\u0065\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u002e\u0045\u006eco\u0064\u0065";
_befd :=make ([]byte ,4);_dgf .BigEndian .PutUint32 (_befd ,uint32 (_cdgc .PageBMWidth ));_ccead ,_fcdb =w .Write (_befd );if _fcdb !=nil {return _ccead ,_fe .Wrap (_fcdb ,_ecfc ,"\u0077\u0069\u0064t\u0068");};_dgf .BigEndian .PutUint32 (_befd ,uint32 (_cdgc .PageBMHeight ));
var _cfafe int ;_cfafe ,_fcdb =w .Write (_befd );if _fcdb !=nil {return _cfafe +_ccead ,_fe .Wrap (_fcdb ,_ecfc ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_ccead +=_cfafe ;_dgf .BigEndian .PutUint32 (_befd ,uint32 (_cdgc .ResolutionX ));_cfafe ,_fcdb =w .Write (_befd );
if _fcdb !=nil {return _cfafe +_ccead ,_fe .Wrap (_fcdb ,_ecfc ,"\u0078\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_ccead +=_cfafe ;_dgf .BigEndian .PutUint32 (_befd ,uint32 (_cdgc .ResolutionY ));if _cfafe ,_fcdb =w .Write (_befd );
_fcdb !=nil {return _cfafe +_ccead ,_fe .Wrap (_fcdb ,_ecfc ,"\u0079\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_ccead +=_cfafe ;if _fcdb =_cdgc .encodeFlags (w );_fcdb !=nil {return _ccead ,_fe .Wrap (_fcdb ,_ecfc ,"");};_ccead ++;
if _cfafe ,_fcdb =_cdgc .encodeStripingInformation (w );_fcdb !=nil {return _ccead ,_fe .Wrap (_fcdb ,_ecfc ,"");};_ccead +=_cfafe ;return _ccead ,nil ;};const (TSymbolDictionary Type =0;TIntermediateTextRegion Type =4;TImmediateTextRegion Type =6;TImmediateLosslessTextRegion Type =7;
TPatternDictionary Type =16;TIntermediateHalftoneRegion Type =20;TImmediateHalftoneRegion Type =22;TImmediateLosslessHalftoneRegion Type =23;TIntermediateGenericRegion Type =36;TImmediateGenericRegion Type =38;TImmediateLosslessGenericRegion Type =39;TIntermediateGenericRefinementRegion Type =40;
TImmediateGenericRefinementRegion Type =42;TImmediateLosslessGenericRefinementRegion Type =43;TPageInformation Type =48;TEndOfPage Type =49;TEndOfStrip Type =50;TEndOfFile Type =51;TProfiles Type =52;TTables Type =53;TExtension Type =62;TBitmap Type =70;
);func (_adcb *GenericRefinementRegion )setParameters (_gfa *_df .DecoderStats ,_bbc *_df .Decoder ,_gbga int8 ,_cae ,_egg uint32 ,_fbag *_b .Bitmap ,_egb ,_bec int32 ,_bbcf bool ,_fea []int8 ,_ffa []int8 ){_cdg .Log .Trace ("\u005b\u0047\u0045NE\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052E\u0047I\u004fN\u005d \u0073\u0065\u0074\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073");
if _gfa !=nil {_adcb ._ac =_gfa ;};if _bbc !=nil {_adcb ._abd =_bbc ;};_adcb .TemplateID =_gbga ;_adcb .RegionInfo .BitmapWidth =_cae ;_adcb .RegionInfo .BitmapHeight =_egg ;_adcb .ReferenceBitmap =_fbag ;_adcb .ReferenceDX =_egb ;_adcb .ReferenceDY =_bec ;
_adcb .IsTPGROn =_bbcf ;_adcb .GrAtX =_fea ;_adcb .GrAtY =_ffa ;_adcb .RegionBitmap =nil ;_cdg .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073 f\u0069\u006ei\u0073\u0068\u0065\u0064\u002e\u0020\u0025\u0073",_adcb );
};func (_acdf *TextRegion )checkInput ()error {const _dfed ="\u0063\u0068\u0065\u0063\u006b\u0049\u006e\u0070\u0075\u0074";if !_acdf .UseRefinement {if _acdf .SbrTemplate !=0{_cdg .Log .Debug ("\u0053\u0062\u0072Te\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");
_acdf .SbrTemplate =0;};};if _acdf .SbHuffFS ==2||_acdf .SbHuffRDWidth ==2||_acdf .SbHuffRDHeight ==2||_acdf .SbHuffRDX ==2||_acdf .SbHuffRDY ==2{return _fe .Error (_dfed ,"h\u0075\u0066\u0066\u006d\u0061\u006e \u0066\u006c\u0061\u0067\u0020\u0076a\u006c\u0075\u0065\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074e\u0064");
};if !_acdf .UseRefinement {if _acdf .SbHuffRSize !=0{_cdg .Log .Debug ("\u0053\u0062\u0048uf\u0066\u0052\u0053\u0069\u007a\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_acdf .SbHuffRSize =0;};if _acdf .SbHuffRDY !=0{_cdg .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044Y\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");
_acdf .SbHuffRDY =0;};if _acdf .SbHuffRDX !=0{_cdg .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044X\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_acdf .SbHuffRDX =0;};if _acdf .SbHuffRDWidth !=0{_cdg .Log .Debug ("\u0053b\u0048\u0075\u0066\u0066R\u0044\u0057\u0069\u0064\u0074h\u0020s\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u00200");
_acdf .SbHuffRDWidth =0;};if _acdf .SbHuffRDHeight !=0{_cdg .Log .Debug ("\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069g\u0068\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0030");_acdf .SbHuffRDHeight =0;};};
return nil ;};func (_cbcb *SymbolDictionary )setRefinementAtPixels ()error {if !_cbcb .UseRefinementAggregation ||_cbcb .SdrTemplate !=0{return nil ;};if _gdbf :=_cbcb .readRefinementAtPixels (2);_gdbf !=nil {return _gdbf ;};return nil ;};func (_aacd *GenericRegion )setOverrideFlag (_bace int ){_aacd .GBAtOverride [_bace ]=true ;
_aacd ._bfb =true ;};func (_feg *GenericRefinementRegion )decodeOptimized (_gbe ,_gd ,_ed ,_fba ,_afe ,_cc ,_egf int )error {var (_ec error ;_ga int ;_fbe int ;);_fc :=_gbe -int (_feg .ReferenceDY );if _eb :=int (-_feg .ReferenceDX );_eb > 0{_ga =_eb ;
};_gc :=_feg .ReferenceBitmap .GetByteIndex (_ga ,_fc );if _feg .ReferenceDX > 0{_fbe =int (_feg .ReferenceDX );};_gdf :=_feg .RegionBitmap .GetByteIndex (_fbe ,_gbe );switch _feg .TemplateID {case 0:_ec =_feg .decodeTemplate (_gbe ,_gd ,_ed ,_fba ,_afe ,_cc ,_egf ,_gdf ,_fc ,_gc ,_feg ._cf );
case 1:_ec =_feg .decodeTemplate (_gbe ,_gd ,_ed ,_fba ,_afe ,_cc ,_egf ,_gdf ,_fc ,_gc ,_feg ._ab );};return _ec ;};func (_dcfdf *GenericRegion )writeGBAtPixels (_cbec _g .BinaryWriter )(_bdee int ,_bacd error ){const _deb ="\u0077r\u0069t\u0065\u0047\u0042\u0041\u0074\u0050\u0069\u0078\u0065\u006c\u0073";
if _dcfdf .UseMMR {return 0,nil ;};_cegb :=1;if _dcfdf .GBTemplate ==0{_cegb =4;}else if _dcfdf .UseExtTemplates {_cegb =12;};if len (_dcfdf .GBAtX )!=_cegb {return 0,_fe .Errorf (_deb ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0058\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};if len (_dcfdf .GBAtY )!=_cegb {return 0,_fe .Errorf (_deb ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0059\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};for _bdcac :=0;_bdcac < _cegb ;_bdcac ++{if _bacd =_cbec .WriteByte (byte (_dcfdf .GBAtX [_bdcac ]));_bacd !=nil {return _bdee ,_fe .Wrap (_bacd ,_deb ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0058");};_bdee ++;if _bacd =_cbec .WriteByte (byte (_dcfdf .GBAtY [_bdcac ]));
_bacd !=nil {return _bdee ,_fe .Wrap (_bacd ,_deb ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0059");};_bdee ++;};return _bdee ,nil ;};func (_gafag *TextRegion )decodeRdh ()(int64 ,error ){const _bacf ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064h";
if _gafag .IsHuffmanEncoded {if _gafag .SbHuffRDHeight ==3{if _gafag ._faba ==nil {var (_febb int ;_ccegc error ;);if _gafag .SbHuffFS ==3{_febb ++;};if _gafag .SbHuffDS ==3{_febb ++;};if _gafag .SbHuffDT ==3{_febb ++;};if _gafag .SbHuffRDWidth ==3{_febb ++;
};_gafag ._faba ,_ccegc =_gafag .getUserTable (_febb );if _ccegc !=nil {return 0,_fe .Wrap (_ccegc ,_bacf ,"");};};return _gafag ._faba .Decode (_gafag ._gaad );};_ffe ,_fccag :=_fd .GetStandardTable (14+int (_gafag .SbHuffRDHeight ));if _fccag !=nil {return 0,_fe .Wrap (_fccag ,_bacf ,"");
};return _ffe .Decode (_gafag ._gaad );};_dadd ,_bccf :=_gafag ._abaf .DecodeInt (_gafag ._ceada );if _bccf !=nil {return 0,_fe .Wrap (_bccf ,_bacf ,"");};return int64 (_dadd ),nil ;};func (_egaf *TableSegment )HtOOB ()int32 {return _egaf ._cdaaf };func (_gde *GenericRegion )decodeTemplate1 (_cbba ,_dcdd ,_dcde int ,_ggfd ,_ebee int )(_eef error ){const _dbge ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0031";
var (_ecgf ,_acfe int ;_bagg ,_aae int ;_acge byte ;_fefc ,_bcg int ;);if _cbba >=1{_acge ,_eef =_gde .Bitmap .GetByte (_ebee );if _eef !=nil {return _fe .Wrap (_eef ,_dbge ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_bagg =int (_acge );};if _cbba >=2{_acge ,_eef =_gde .Bitmap .GetByte (_ebee -_gde .Bitmap .RowStride );
if _eef !=nil {return _fe .Wrap (_eef ,_dbge ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_aae =int (_acge )<<5;};_ecgf =((_bagg >>1)&0x1f8)|((_aae >>1)&0x1e00);for _ecb :=0;_ecb < _dcde ;_ecb =_fefc {var (_age byte ;_dfc int ;);_fefc =_ecb +8;if _cadb :=_dcdd -_ecb ;
_cadb > 8{_dfc =8;}else {_dfc =_cadb ;};if _cbba > 0{_bagg <<=8;if _fefc < _dcdd {_acge ,_eef =_gde .Bitmap .GetByte (_ebee +1);if _eef !=nil {return _fe .Wrap (_eef ,_dbge ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_bagg |=int (_acge );};};
if _cbba > 1{_aae <<=8;if _fefc < _dcdd {_acge ,_eef =_gde .Bitmap .GetByte (_ebee -_gde .Bitmap .RowStride +1);if _eef !=nil {return _fe .Wrap (_eef ,_dbge ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_aae |=int (_acge )<<5;};};for _aaa :=0;
_aaa < _dfc ;_aaa ++{if _gde ._bfb {_acfe =_gde .overrideAtTemplate1 (_ecgf ,_ecb +_aaa ,_cbba ,int (_age ),_aaa );_gde ._gfd .SetIndex (int32 (_acfe ));}else {_gde ._gfd .SetIndex (int32 (_ecgf ));};_bcg ,_eef =_gde ._bea .DecodeBit (_gde ._gfd );if _eef !=nil {return _fe .Wrap (_eef ,_dbge ,"");
};_age |=byte (_bcg )<<uint (7-_aaa );_fgad :=uint (8-_aaa );_ecgf =((_ecgf &0xefb)<<1)|_bcg |((_bagg >>_fgad )&0x8)|((_aae >>_fgad )&0x200);};if _ecbc :=_gde .Bitmap .SetByte (_ggfd ,_age );_ecbc !=nil {return _fe .Wrap (_ecbc ,_dbge ,"");};_ggfd ++;_ebee ++;
};return nil ;};type EncodeInitializer interface{InitEncode ();};func (_eeed *Header )writeSegmentPageAssociation (_ccaf _g .BinaryWriter )(_eafg int ,_dbag error ){const _edcc ="w\u0072\u0069\u0074\u0065\u0053\u0065g\u006d\u0065\u006e\u0074\u0050\u0061\u0067\u0065\u0041s\u0073\u006f\u0063i\u0061t\u0069\u006f\u006e";
if _eeed .pageSize ()!=4{if _dbag =_ccaf .WriteByte (byte (_eeed .PageAssociation ));_dbag !=nil {return 0,_fe .Wrap (_dbag ,_edcc ,"\u0070\u0061\u0067\u0065\u0053\u0069\u007a\u0065\u0020\u0021\u003d\u0020\u0034");};return 1,nil ;};_ecgb :=make ([]byte ,4);
_dgf .BigEndian .PutUint32 (_ecgb ,uint32 (_eeed .PageAssociation ));if _eafg ,_dbag =_ccaf .Write (_ecgb );_dbag !=nil {return 0,_fe .Wrap (_dbag ,_edcc ,"\u0034 \u0062y\u0074\u0065\u0020\u0070\u0061g\u0065\u0020n\u0075\u006d\u0062\u0065\u0072");};return _eafg ,nil ;
};func (_aabc *TableSegment )Init (h *Header ,r _g .StreamReader )error {_aabc ._eega =r ;return _aabc .parseHeader ();};func (_cacad *SymbolDictionary )InitEncode (symbols *_b .Bitmaps ,symbolList []int ,symbolMap map[int ]int ,unborderSymbols bool )error {const _gccc ="S\u0079\u006d\u0062\u006f\u006c\u0044i\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002eI\u006e\u0069\u0074E\u006ec\u006f\u0064\u0065";
_cacad .SdATX =[]int8 {3,-3,2,-2};_cacad .SdATY =[]int8 {-1,-1,-2,-2};_cacad ._gadg =symbols ;_cacad ._cag =make ([]int ,len (symbolList ));copy (_cacad ._cag ,symbolList );if len (_cacad ._cag )!=_cacad ._gadg .Size (){return _fe .Error (_gccc ,"s\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0061\u006e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u004ci\u0073\u0074\u0020\u006f\u0066\u0020\u0064\u0069\u0066\u0066er\u0065\u006e\u0074 \u0073i\u007a\u0065");
};_cacad .NumberOfNewSymbols =uint32 (symbols .Size ());_cacad .NumberOfExportedSymbols =uint32 (symbols .Size ());_cacad ._gfeg =symbolMap ;_cacad ._bgfc =unborderSymbols ;return nil ;};func (_gbff *Header )GetSegmentData ()(Segmenter ,error ){var _afag Segmenter ;
if _gbff .SegmentData !=nil {_afag =_gbff .SegmentData ;};if _afag ==nil {_acdd ,_gagg :=_fdfg [_gbff .Type ];if !_gagg {return nil ,_fa .Errorf ("\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0073\u002f\u0020\u0025\u0064\u0020\u0063\u0072e\u0061t\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e\u0020",_gbff .Type ,_gbff .Type );
};_afag =_acdd ();_cdg .Log .Trace ("\u005b\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u0020\u0061\u0074\u0020\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0030\u0034\u0058",_gbff .SegmentNumber ,_gbff .SegmentDataStartOffset );
_gdbc ,_eeff :=_gbff .subInputReader ();if _eeff !=nil {return nil ,_eeff ;};if _bdd :=_afag .Init (_gbff ,_gdbc );_bdd !=nil {_cdg .Log .Debug ("\u0049\u006e\u0069\u0074 \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076 \u0066o\u0072\u0020\u0074\u0079\u0070\u0065\u003a \u0025\u0054",_bdd ,_afag );
return nil ,_bdd ;};_gbff .SegmentData =_afag ;};return _afag ,nil ;};func (_ee *EndOfStripe )Init (h *Header ,r _g .StreamReader )error {_ee ._gg =r ;return _ee .parseHeader (h ,r );};func (_degdg *SymbolDictionary )decodeDirectlyThroughGenericRegion (_afdg ,_bggac uint32 )error {if _degdg ._dgdc ==nil {_degdg ._dgdc =NewGenericRegion (_degdg ._ggba );
};_degdg ._dgdc .setParametersWithAt (false ,byte (_degdg .SdTemplate ),false ,false ,_degdg .SdATX ,_degdg .SdATY ,_afdg ,_bggac ,_degdg ._adbed ,_degdg ._aaae );return _degdg .addSymbol (_degdg ._dgdc );};type SymbolDictionary struct{_ggba _g .StreamReader ;
SdrTemplate int8 ;SdTemplate int8 ;_bedb bool ;_addd bool ;SdHuffAggInstanceSelection bool ;SdHuffBMSizeSelection int8 ;SdHuffDecodeWidthSelection int8 ;SdHuffDecodeHeightSelection int8 ;UseRefinementAggregation bool ;IsHuffmanEncoded bool ;SdATX []int8 ;
SdATY []int8 ;SdrATX []int8 ;SdrATY []int8 ;NumberOfExportedSymbols uint32 ;NumberOfNewSymbols uint32 ;Header *Header ;_aebfb uint32 ;_ccdf []*_b .Bitmap ;_dded uint32 ;_caeg []*_b .Bitmap ;_edca _fd .Tabler ;_afbc _fd .Tabler ;_abbd _fd .Tabler ;_gbffb _fd .Tabler ;
_efcb []*_b .Bitmap ;_efce []*_b .Bitmap ;_aaae *_df .Decoder ;_agdg *TextRegion ;_dgdc *GenericRegion ;_efad *GenericRefinementRegion ;_adbed *_df .DecoderStats ;_bgfb *_df .DecoderStats ;_cbg *_df .DecoderStats ;_dddg *_df .DecoderStats ;_gbgc *_df .DecoderStats ;
_afef *_df .DecoderStats ;_bagc *_df .DecoderStats ;_bece *_df .DecoderStats ;_dfge *_df .DecoderStats ;_cgced int8 ;_gadg *_b .Bitmaps ;_cag []int ;_gfeg map[int ]int ;_bgfc bool ;};func (_dbgf *TableSegment )HtPS ()int32 {return _dbgf ._aeda };type GenericRefinementRegion struct{_cf templater ;
_ab templater ;_eea _g .StreamReader ;_dbg *Header ;RegionInfo *RegionSegment ;IsTPGROn bool ;TemplateID int8 ;Template templater ;GrAtX []int8 ;GrAtY []int8 ;RegionBitmap *_b .Bitmap ;ReferenceBitmap *_b .Bitmap ;ReferenceDX int32 ;ReferenceDY int32 ;
_abd *_df .Decoder ;_ac *_df .DecoderStats ;_gb bool ;_ad []bool ;};func (_ef *GenericRefinementRegion )GetRegionInfo ()*RegionSegment {return _ef .RegionInfo };func (_ccbf *SymbolDictionary )setAtPixels ()error {if _ccbf .IsHuffmanEncoded {return nil ;
};_afgc :=1;if _ccbf .SdTemplate ==0{_afgc =4;};if _afcf :=_ccbf .readAtPixels (_afgc );_afcf !=nil {return _afcf ;};return nil ;};func (_acac *HalftoneRegion )computeY (_fbgc ,_ccea int )int {return _acac .shiftAndFill (int (_acac .HGridY )+_fbgc *int (_acac .HRegionX )-_ccea *int (_acac .HRegionY ));
};type Header struct{SegmentNumber uint32 ;Type Type ;RetainFlag bool ;PageAssociation int ;PageAssociationFieldSize bool ;RTSegments []*Header ;HeaderLength int64 ;SegmentDataLength uint64 ;SegmentDataStartOffset uint64 ;Reader _g .StreamReader ;SegmentData Segmenter ;
RTSNumbers []int ;RetainBits []uint8 ;};func (_eaa *GenericRefinementRegion )decodeTemplate (_ece ,_aaf ,_agb ,_aac ,_dccb ,_dcf ,_efe ,_edd ,_gfc ,_ccd int ,_cfa templater )(_ccde error ){var (_fgc ,_dda ,_bac ,_ecg ,_gade int16 ;_bdc ,_gcb ,_aag ,_bcf int ;
_bbfd byte ;);if _gfc >=1&&(_gfc -1)< _eaa .ReferenceBitmap .Height {_bbfd ,_ccde =_eaa .ReferenceBitmap .GetByte (_ccd -_aac );if _ccde !=nil {return ;};_bdc =int (_bbfd );};if _gfc >=0&&(_gfc )< _eaa .ReferenceBitmap .Height {_bbfd ,_ccde =_eaa .ReferenceBitmap .GetByte (_ccd );
if _ccde !=nil {return ;};_gcb =int (_bbfd );};if _gfc >=-1&&(_gfc +1)< _eaa .ReferenceBitmap .Height {_bbfd ,_ccde =_eaa .ReferenceBitmap .GetByte (_ccd +_aac );if _ccde !=nil {return ;};_aag =int (_bbfd );};_ccd ++;if _ece >=1{_bbfd ,_ccde =_eaa .RegionBitmap .GetByte (_edd -_agb );
if _ccde !=nil {return ;};_bcf =int (_bbfd );};_edd ++;_dcca :=_eaa .ReferenceDX %8;_edg :=6+_dcca ;_ggd :=_ccd %_aac ;if _edg >=0{if _edg < 8{_fgc =int16 (_bdc >>uint (_edg ))&0x07;};if _edg < 8{_dda =int16 (_gcb >>uint (_edg ))&0x07;};if _edg < 8{_bac =int16 (_aag >>uint (_edg ))&0x07;
};if _edg ==6&&_ggd > 1{if _gfc >=1&&(_gfc -1)< _eaa .ReferenceBitmap .Height {_bbfd ,_ccde =_eaa .ReferenceBitmap .GetByte (_ccd -_aac -2);if _ccde !=nil {return _ccde ;};_fgc |=int16 (_bbfd <<2)&0x04;};if _gfc >=0&&_gfc < _eaa .ReferenceBitmap .Height {_bbfd ,_ccde =_eaa .ReferenceBitmap .GetByte (_ccd -2);
if _ccde !=nil {return _ccde ;};_dda |=int16 (_bbfd <<2)&0x04;};if _gfc >=-1&&_gfc +1< _eaa .ReferenceBitmap .Height {_bbfd ,_ccde =_eaa .ReferenceBitmap .GetByte (_ccd +_aac -2);if _ccde !=nil {return _ccde ;};_bac |=int16 (_bbfd <<2)&0x04;};};if _edg ==0{_bdc =0;
_gcb =0;_aag =0;if _ggd < _aac -1{if _gfc >=1&&_gfc -1< _eaa .ReferenceBitmap .Height {_bbfd ,_ccde =_eaa .ReferenceBitmap .GetByte (_ccd -_aac );if _ccde !=nil {return _ccde ;};_bdc =int (_bbfd );};if _gfc >=0&&_gfc < _eaa .ReferenceBitmap .Height {_bbfd ,_ccde =_eaa .ReferenceBitmap .GetByte (_ccd );
if _ccde !=nil {return _ccde ;};_gcb =int (_bbfd );};if _gfc >=-1&&_gfc +1< _eaa .ReferenceBitmap .Height {_bbfd ,_ccde =_eaa .ReferenceBitmap .GetByte (_ccd +_aac );if _ccde !=nil {return _ccde ;};_aag =int (_bbfd );};};_ccd ++;};}else {_fgc =int16 (_bdc <<1)&0x07;
_dda =int16 (_gcb <<1)&0x07;_bac =int16 (_aag <<1)&0x07;_bdc =0;_gcb =0;_aag =0;if _ggd < _aac -1{if _gfc >=1&&_gfc -1< _eaa .ReferenceBitmap .Height {_bbfd ,_ccde =_eaa .ReferenceBitmap .GetByte (_ccd -_aac );if _ccde !=nil {return _ccde ;};_bdc =int (_bbfd );
};if _gfc >=0&&_gfc < _eaa .ReferenceBitmap .Height {_bbfd ,_ccde =_eaa .ReferenceBitmap .GetByte (_ccd );if _ccde !=nil {return _ccde ;};_gcb =int (_bbfd );};if _gfc >=-1&&_gfc +1< _eaa .ReferenceBitmap .Height {_bbfd ,_ccde =_eaa .ReferenceBitmap .GetByte (_ccd +_aac );
if _ccde !=nil {return _ccde ;};_aag =int (_bbfd );};_ccd ++;};_fgc |=int16 ((_bdc >>7)&0x07);_dda |=int16 ((_gcb >>7)&0x07);_bac |=int16 ((_aag >>7)&0x07);};_ecg =int16 (_bcf >>6);_gade =0;_gaf :=(2-_dcca )%8;_bdc <<=uint (_gaf );_gcb <<=uint (_gaf );
_aag <<=uint (_gaf );_bcf <<=2;var _fdf int ;for _adf :=0;_adf < _aaf ;_adf ++{_ebb :=_adf &0x07;_bgb :=_cfa .form (_fgc ,_dda ,_bac ,_ecg ,_gade );if _eaa ._gb {_bbfd ,_ccde =_eaa .RegionBitmap .GetByte (_eaa .RegionBitmap .GetByteIndex (_adf ,_ece ));
if _ccde !=nil {return _ccde ;};_eaa ._ac .SetIndex (int32 (_eaa .overrideAtTemplate0 (int (_bgb ),_adf ,_ece ,int (_bbfd ),_ebb )));}else {_eaa ._ac .SetIndex (int32 (_bgb ));};_fdf ,_ccde =_eaa ._abd .DecodeBit (_eaa ._ac );if _ccde !=nil {return _ccde ;
};if _ccde =_eaa .RegionBitmap .SetPixel (_adf ,_ece ,byte (_fdf ));_ccde !=nil {return _ccde ;};_fgc =((_fgc <<1)|0x01&int16 (_bdc >>7))&0x07;_dda =((_dda <<1)|0x01&int16 (_gcb >>7))&0x07;_bac =((_bac <<1)|0x01&int16 (_aag >>7))&0x07;_ecg =((_ecg <<1)|0x01&int16 (_bcf >>7))&0x07;
_gade =int16 (_fdf );if (_adf -int (_eaa .ReferenceDX ))%8==5{_bdc =0;_gcb =0;_aag =0;if ((_adf -int (_eaa .ReferenceDX ))/8)+1< _eaa .ReferenceBitmap .RowStride {if _gfc >=1&&(_gfc -1)< _eaa .ReferenceBitmap .Height {_bbfd ,_ccde =_eaa .ReferenceBitmap .GetByte (_ccd -_aac );
if _ccde !=nil {return _ccde ;};_bdc =int (_bbfd );};if _gfc >=0&&_gfc < _eaa .ReferenceBitmap .Height {_bbfd ,_ccde =_eaa .ReferenceBitmap .GetByte (_ccd );if _ccde !=nil {return _ccde ;};_gcb =int (_bbfd );};if _gfc >=-1&&(_gfc +1)< _eaa .ReferenceBitmap .Height {_bbfd ,_ccde =_eaa .ReferenceBitmap .GetByte (_ccd +_aac );
if _ccde !=nil {return _ccde ;};_aag =int (_bbfd );};};_ccd ++;}else {_bdc <<=1;_gcb <<=1;_aag <<=1;};if _ebb ==5&&_ece >=1{if ((_adf >>3)+1)>=_eaa .RegionBitmap .RowStride {_bcf =0;}else {_bbfd ,_ccde =_eaa .RegionBitmap .GetByte (_edd -_agb );if _ccde !=nil {return _ccde ;
};_bcf =int (_bbfd );};_edd ++;}else {_bcf <<=1;};};return nil ;};func (_gec *HalftoneRegion )renderPattern (_gdad [][]int )(_gfec error ){var _gcbe ,_ageg int ;for _bafa :=0;_bafa < int (_gec .HGridHeight );_bafa ++{for _gbgg :=0;_gbgg < int (_gec .HGridWidth );
_gbgg ++{_gcbe =_gec .computeX (_bafa ,_gbgg );_ageg =_gec .computeY (_bafa ,_gbgg );_gbfa :=_gec .Patterns [_gdad [_bafa ][_gbgg ]];if _gfec =_b .Blit (_gbfa ,_gec .HalftoneRegionBitmap ,_gcbe +int (_gec .HGridX ),_ageg +int (_gec .HGridY ),_gec .CombinationOperator );
_gfec !=nil {return _gfec ;};};};return nil ;};var _ SegmentEncoder =&RegionSegment {};func (_fbef *Header )subInputReader ()(_g .StreamReader ,error ){return _g .NewSubstreamReader (_fbef .Reader ,_fbef .SegmentDataStartOffset ,_fbef .SegmentDataLength );
};func (_cdga *TextRegion )blit (_defd *_b .Bitmap ,_bcfbg int64 )error {if _cdga .IsTransposed ==0&&(_cdga .ReferenceCorner ==2||_cdga .ReferenceCorner ==3){_cdga ._dfga +=int64 (_defd .Width -1);}else if _cdga .IsTransposed ==1&&(_cdga .ReferenceCorner ==0||_cdga .ReferenceCorner ==2){_cdga ._dfga +=int64 (_defd .Height -1);
};_gaff :=_cdga ._dfga ;if _cdga .IsTransposed ==1{_gaff ,_bcfbg =_bcfbg ,_gaff ;};switch _cdga .ReferenceCorner {case 0:_bcfbg -=int64 (_defd .Height -1);case 2:_bcfbg -=int64 (_defd .Height -1);_gaff -=int64 (_defd .Width -1);case 3:_gaff -=int64 (_defd .Width -1);
};_eag :=_b .Blit (_defd ,_cdga .RegionBitmap ,int (_gaff ),int (_bcfbg ),_cdga .CombinationOperator );if _eag !=nil {return _eag ;};if _cdga .IsTransposed ==0&&(_cdga .ReferenceCorner ==0||_cdga .ReferenceCorner ==1){_cdga ._dfga +=int64 (_defd .Width -1);
};if _cdga .IsTransposed ==1&&(_cdga .ReferenceCorner ==1||_cdga .ReferenceCorner ==3){_cdga ._dfga +=int64 (_defd .Height -1);};return nil ;};func (_ebca *TextRegion )initSymbols ()error {const _fbgd ="i\u006e\u0069\u0074\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
for _ ,_gbca :=range _ebca .Header .RTSegments {if _gbca ==nil {return _fe .Error (_fbgd ,"\u006e\u0069\u006c\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020pr\u006f\u0076\u0069\u0064\u0065\u0064 \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0074\u0065\u0078\u0074\u0020\u0072\u0065g\u0069\u006f\u006e\u0020\u0053\u0079\u006d\u0062o\u006c\u0073");
};if _gbca .Type ==0{_ffdec ,_gffb :=_gbca .GetSegmentData ();if _gffb !=nil {return _fe .Wrap (_gffb ,_fbgd ,"");};_dcfe ,_edfa :=_ffdec .(*SymbolDictionary );if !_edfa {return _fe .Error (_fbgd ,"\u0072e\u0066\u0065r\u0072\u0065\u0064 \u0054\u006f\u0020\u0053\u0065\u0067\u006de\u006e\u0074\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_dcfe ._dfge =_ebca ._abag ;_bagf ,_gffb :=_dcfe .GetDictionary ();if _gffb !=nil {return _fe .Wrap (_gffb ,_fbgd ,"");};_ebca .Symbols =append (_ebca .Symbols ,_bagf ...);};};_ebca .NumberOfSymbols =uint32 (len (_ebca .Symbols ));return nil ;};func (_abe *GenericRefinementRegion )decodeTypicalPredictedLineTemplate0 (_dba ,_ae ,_agg ,_ecd ,_bbf ,_ggg ,_bfa ,_ff ,_bdb int )error {var (_ccf ,_ddf ,_cdf ,_da ,_acc ,_cga int ;
_be byte ;_gf error ;);if _dba > 0{_be ,_gf =_abe .RegionBitmap .GetByte (_bfa -_agg );if _gf !=nil {return _gf ;};_cdf =int (_be );};if _ff > 0&&_ff <=_abe .ReferenceBitmap .Height {_be ,_gf =_abe .ReferenceBitmap .GetByte (_bdb -_ecd +_ggg );if _gf !=nil {return _gf ;
};_da =int (_be )<<4;};if _ff >=0&&_ff < _abe .ReferenceBitmap .Height {_be ,_gf =_abe .ReferenceBitmap .GetByte (_bdb +_ggg );if _gf !=nil {return _gf ;};_acc =int (_be )<<1;};if _ff > -2&&_ff < _abe .ReferenceBitmap .Height -1{_be ,_gf =_abe .ReferenceBitmap .GetByte (_bdb +_ecd +_ggg );
if _gf !=nil {return _gf ;};_cga =int (_be );};_ccf =((_cdf >>5)&0x6)|((_cga >>2)&0x30)|(_acc &0x180)|(_da &0xc00);var _gbg int ;for _afb :=0;_afb < _bbf ;_afb =_gbg {var _gbb int ;_gbg =_afb +8;var _deg int ;if _deg =_ae -_afb ;_deg > 8{_deg =8;};_ccg :=_gbg < _ae ;
_ffb :=_gbg < _abe .ReferenceBitmap .Width ;_dfd :=_ggg +1;if _dba > 0{_be =0;if _ccg {_be ,_gf =_abe .RegionBitmap .GetByte (_bfa -_agg +1);if _gf !=nil {return _gf ;};};_cdf =(_cdf <<8)|int (_be );};if _ff > 0&&_ff <=_abe .ReferenceBitmap .Height {var _ebe int ;
if _ffb {_be ,_gf =_abe .ReferenceBitmap .GetByte (_bdb -_ecd +_dfd );if _gf !=nil {return _gf ;};_ebe =int (_be )<<4;};_da =(_da <<8)|_ebe ;};if _ff >=0&&_ff < _abe .ReferenceBitmap .Height {var _bc int ;if _ffb {_be ,_gf =_abe .ReferenceBitmap .GetByte (_bdb +_dfd );
if _gf !=nil {return _gf ;};_bc =int (_be )<<1;};_acc =(_acc <<8)|_bc ;};if _ff > -2&&_ff < (_abe .ReferenceBitmap .Height -1){_be =0;if _ffb {_be ,_gf =_abe .ReferenceBitmap .GetByte (_bdb +_ecd +_dfd );if _gf !=nil {return _gf ;};};_cga =(_cga <<8)|int (_be );
};for _fdg :=0;_fdg < _deg ;_fdg ++{var _fef int ;_cb :=false ;_bad :=(_ccf >>4)&0x1ff;if _bad ==0x1ff{_cb =true ;_fef =1;}else if _bad ==0x00{_cb =true ;};if !_cb {if _abe ._gb {_ddf =_abe .overrideAtTemplate0 (_ccf ,_afb +_fdg ,_dba ,_gbb ,_fdg );_abe ._ac .SetIndex (int32 (_ddf ));
}else {_abe ._ac .SetIndex (int32 (_ccf ));};_fef ,_gf =_abe ._abd .DecodeBit (_abe ._ac );if _gf !=nil {return _gf ;};};_acg :=uint (7-_fdg );_gbb |=_fef <<_acg ;_ccf =((_ccf &0xdb6)<<1)|_fef |(_cdf >>_acg +5)&0x002|((_cga >>_acg +2)&0x010)|((_acc >>_acg )&0x080)|((_da >>_acg )&0x400);
};_gf =_abe .RegionBitmap .SetByte (_bfa ,byte (_gbb ));if _gf !=nil {return _gf ;};_bfa ++;_bdb ++;};return nil ;};func (_cdcb *PageInformationSegment )readWidthAndHeight ()error {_dcaf ,_afbb :=_cdcb ._gdc .ReadBits (32);if _afbb !=nil {return _afbb ;
};_cdcb .PageBMWidth =int (_dcaf &_a .MaxInt32 );_dcaf ,_afbb =_cdcb ._gdc .ReadBits (32);if _afbb !=nil {return _afbb ;};_cdcb .PageBMHeight =int (_dcaf &_a .MaxInt32 );return nil ;};func (_egge *Header )readSegmentPageAssociation (_cfc Documenter ,_bgga _g .StreamReader ,_bada uint64 ,_egbf ...int )(_adfda error ){const _cccg ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074P\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061t\u0069\u006f\u006e";
if !_egge .PageAssociationFieldSize {_bdbe ,_cebb :=_bgga .ReadBits (8);if _cebb !=nil {return _fe .Wrap (_cebb ,_cccg ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_egge .PageAssociation =int (_bdbe &0xFF);}else {_edc ,_gcbgd :=_bgga .ReadBits (32);
if _gcbgd !=nil {return _fe .Wrap (_gcbgd ,_cccg ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_egge .PageAssociation =int (_edc &_a .MaxInt32 );};if _bada ==0{return nil ;};if _egge .PageAssociation !=0{_eae ,_abdgd :=_cfc .GetPage (_egge .PageAssociation );
if _abdgd !=nil {return _fe .Wrap (_abdgd ,_cccg ,"\u0061s\u0073\u006f\u0063\u0069a\u0074\u0065\u0064\u0020\u0070a\u0067e\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006ed");};var _gebgf int ;for _fdgf :=uint64 (0);_fdgf < _bada ;_fdgf ++{_gebgf =_egbf [_fdgf ];
_egge .RTSegments [_fdgf ],_abdgd =_eae .GetSegment (_gebgf );if _abdgd !=nil {var _dcg error ;_egge .RTSegments [_fdgf ],_dcg =_cfc .GetGlobalSegment (_gebgf );if _dcg !=nil {return _fe .Wrapf (_abdgd ,_cccg ,"\u0072\u0065\u0066\u0065\u0072\u0065n\u0063\u0065\u0020s\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064\u0020\u0061\u0074\u0020pa\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0072\u0020\u0069\u006e\u0020\u0067\u006c\u006f\u0062\u0061\u006c\u0073",_egge .PageAssociation );
};};};return nil ;};for _ebbc :=uint64 (0);_ebbc < _bada ;_ebbc ++{_egge .RTSegments [_ebbc ],_adfda =_cfc .GetGlobalSegment (_egbf [_ebbc ]);if _adfda !=nil {return _fe .Wrapf (_adfda ,_cccg ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u003a\u0020\u0027\u0025d\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064",_egbf [_ebbc ]);
};};return nil ;};func (_bagcf *TextRegion )decodeIds ()(int64 ,error ){const _cede ="\u0064e\u0063\u006f\u0064\u0065\u0049\u0064s";if _bagcf .IsHuffmanEncoded {if _bagcf .SbHuffDS ==3{if _bagcf ._ebdb ==nil {_eab :=0;if _bagcf .SbHuffFS ==3{_eab ++;};
var _fdbe error ;_bagcf ._ebdb ,_fdbe =_bagcf .getUserTable (_eab );if _fdbe !=nil {return 0,_fe .Wrap (_fdbe ,_cede ,"");};};return _bagcf ._ebdb .Decode (_bagcf ._gaad );};_abae ,_faeb :=_fd .GetStandardTable (8+int (_bagcf .SbHuffDS ));if _faeb !=nil {return 0,_fe .Wrap (_faeb ,_cede ,"");
};return _abae .Decode (_bagcf ._gaad );};_fbeg ,_cadg :=_bagcf ._abaf .DecodeInt (_bagcf ._dbbc );if _cadg !=nil {return 0,_fe .Wrap (_cadg ,_cede ,"\u0063\u0078\u0049\u0041\u0044\u0053");};return int64 (_fbeg ),nil ;};type TableSegment struct{_eega _g .StreamReader ;
_cdaaf int32 ;_aeda int32 ;_gcdg int32 ;_ffga int32 ;_dgaa int32 ;};func (_bbdae *SymbolDictionary )setRetainedCodingContexts (_bbfc *SymbolDictionary ){_bbdae ._aaae =_bbfc ._aaae ;_bbdae .IsHuffmanEncoded =_bbfc .IsHuffmanEncoded ;_bbdae .UseRefinementAggregation =_bbfc .UseRefinementAggregation ;
_bbdae .SdTemplate =_bbfc .SdTemplate ;_bbdae .SdrTemplate =_bbfc .SdrTemplate ;_bbdae .SdATX =_bbfc .SdATX ;_bbdae .SdATY =_bbfc .SdATY ;_bbdae .SdrATX =_bbfc .SdrATX ;_bbdae .SdrATY =_bbfc .SdrATY ;_bbdae ._adbed =_bbfc ._adbed ;};func (_aef *Header )referenceSize ()uint {switch {case _aef .SegmentNumber <=255:return 1;
case _aef .SegmentNumber <=65535:return 2;default:return 4;};};func (_bcdf *PatternDictionary )GetDictionary ()([]*_b .Bitmap ,error ){if _bcdf .Patterns !=nil {return _bcdf .Patterns ,nil ;};if !_bcdf .IsMMREncoded {_bcdf .setGbAtPixels ();};_acbcc :=NewGenericRegion (_bcdf ._aaaf );
_acbcc .setParametersMMR (_bcdf .IsMMREncoded ,_bcdf .DataOffset ,_bcdf .DataLength ,uint32 (_bcdf .HdpHeight ),(_bcdf .GrayMax +1)*uint32 (_bcdf .HdpWidth ),_bcdf .HDTemplate ,false ,false ,_bcdf .GBAtX ,_bcdf .GBAtY );_geeb ,_eecba :=_acbcc .GetRegionBitmap ();
if _eecba !=nil {return nil ,_eecba ;};if _eecba =_bcdf .extractPatterns (_geeb );_eecba !=nil {return nil ,_eecba ;};return _bcdf .Patterns ,nil ;};func _eeec (_dccbg _g .StreamReader ,_fgcg *Header )*TextRegion {_dccgf :=&TextRegion {_gaad :_dccbg ,Header :_fgcg ,RegionInfo :NewRegionSegment (_dccbg )};
return _dccgf ;};func (_ggb *GenericRegion )Init (h *Header ,r _g .StreamReader )error {_ggb .RegionSegment =NewRegionSegment (r );_ggb ._cdfe =r ;return _ggb .parseHeader ();};func (_cce *GenericRegion )decodeTemplate2 (_bdf ,_adbe ,_eceg int ,_ceg ,_aaec int )(_cdaa error ){const _baa ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0032";
var (_bcc ,_ceee int ;_ccgc ,_abg int ;_ege byte ;_ebd ,_adg int ;);if _bdf >=1{_ege ,_cdaa =_cce .Bitmap .GetByte (_aaec );if _cdaa !=nil {return _fe .Wrap (_cdaa ,_baa ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0031");
};_ccgc =int (_ege );};if _bdf >=2{_ege ,_cdaa =_cce .Bitmap .GetByte (_aaec -_cce .Bitmap .RowStride );if _cdaa !=nil {return _fe .Wrap (_cdaa ,_baa ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0032");};_abg =int (_ege )<<4;
};_bcc =(_ccgc >>3&0x7c)|(_abg >>3&0x380);for _gdfb :=0;_gdfb < _eceg ;_gdfb =_ebd {var (_cbea byte ;_gbfd int ;);_ebd =_gdfb +8;if _dec :=_adbe -_gdfb ;_dec > 8{_gbfd =8;}else {_gbfd =_dec ;};if _bdf > 0{_ccgc <<=8;if _ebd < _adbe {_ege ,_cdaa =_cce .Bitmap .GetByte (_aaec +1);
if _cdaa !=nil {return _fe .Wrap (_cdaa ,_baa ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0030");};_ccgc |=int (_ege );};};if _bdf > 1{_abg <<=8;if _ebd < _adbe {_ege ,_cdaa =_cce .Bitmap .GetByte (_aaec -_cce .Bitmap .RowStride +1);
if _cdaa !=nil {return _fe .Wrap (_cdaa ,_baa ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0031");};_abg |=int (_ege )<<4;};};for _baab :=0;_baab < _gbfd ;_baab ++{_gff :=uint (10-_baab );if _cce ._bfb {_ceee =_cce .overrideAtTemplate2 (_bcc ,_gdfb +_baab ,_bdf ,int (_cbea ),_baab );
_cce ._gfd .SetIndex (int32 (_ceee ));}else {_cce ._gfd .SetIndex (int32 (_bcc ));};_adg ,_cdaa =_cce ._bea .DecodeBit (_cce ._gfd );if _cdaa !=nil {return _fe .Wrap (_cdaa ,_baa ,"");};_cbea |=byte (_adg <<uint (7-_baab ));_bcc =((_bcc &0x1bd)<<1)|_adg |((_ccgc >>_gff )&0x4)|((_abg >>_gff )&0x80);
};if _fbcb :=_cce .Bitmap .SetByte (_ceg ,_cbea );_fbcb !=nil {return _fe .Wrap (_fbcb ,_baa ,"");};_ceg ++;_aaec ++;};return nil ;};func (_fad *GenericRegion )InitEncode (bm *_b .Bitmap ,xLoc ,yLoc ,template int ,duplicateLineRemoval bool )error {const _ecdd ="\u0047e\u006e\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069\u006f\u006e.\u0049\u006e\u0069\u0074\u0045\u006e\u0063\u006f\u0064\u0065";
if bm ==nil {return _fe .Error (_ecdd ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if xLoc < 0||yLoc < 0{return _fe .Error (_ecdd ,"\u0078\u0020\u0061\u006e\u0064\u0020\u0079\u0020\u006c\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074h\u0061\u006e\u0020\u0030");
};_fad .Bitmap =bm ;_fad .GBTemplate =byte (template );switch _fad .GBTemplate {case 0:_fad .GBAtX =[]int8 {3,-3,2,-2};_fad .GBAtY =[]int8 {-1,-1,-2,-2};case 1:_fad .GBAtX =[]int8 {3};_fad .GBAtY =[]int8 {-1};case 2,3:_fad .GBAtX =[]int8 {2};_fad .GBAtY =[]int8 {-1};
default:return _fe .Errorf (_ecdd ,"\u0070\u0072o\u0076\u0069\u0064\u0065\u0064 \u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u007b\u0030\u002c\u0031\u002c\u0032\u002c\u0033\u007d",template );
};_fad .RegionSegment =&RegionSegment {BitmapHeight :uint32 (bm .Height ),BitmapWidth :uint32 (bm .Width ),XLocation :uint32 (xLoc ),YLocation :uint32 (yLoc )};_fad .IsTPGDon =duplicateLineRemoval ;return nil ;};func (_aefc *TextRegion )getSymbols ()error {if _aefc .Header .RTSegments !=nil {return _aefc .initSymbols ();
};return nil ;};func (_bfg *GenericRegion )overrideAtTemplate3 (_efeb ,_dga ,_gbbe ,_gcg ,_bbfa int )int {_efeb &=0x3EF;if _bfg .GBAtY [0]==0&&_bfg .GBAtX [0]>=-int8 (_bbfa ){_efeb |=(_gcg >>uint (7-(int8 (_bbfa )+_bfg .GBAtX [0]))&0x1)<<4;}else {_efeb |=int (_bfg .getPixel (_dga +int (_bfg .GBAtX [0]),_gbbe +int (_bfg .GBAtY [0])))<<4;
};return _efeb ;};func (_beab *PatternDictionary )readPatternWidthAndHeight ()error {_abb ,_ddab :=_beab ._aaaf .ReadByte ();if _ddab !=nil {return _ddab ;};_beab .HdpWidth =_abb ;_abb ,_ddab =_beab ._aaaf .ReadByte ();if _ddab !=nil {return _ddab ;};_beab .HdpHeight =_abb ;
return nil ;};func (_gdgg *TableSegment )HtRS ()int32 {return _gdgg ._gcdg };func (_eeg *EndOfStripe )parseHeader (_eg *Header ,_fag _g .StreamReader )error {_ea ,_fbc :=_eeg ._gg .ReadBits (32);if _fbc !=nil {return _fbc ;};_eeg ._cg =int (_ea &_a .MaxInt32 );
return nil ;};func (_fedg *PageInformationSegment )Init (h *Header ,r _g .StreamReader )(_ecfdb error ){_fedg ._gdc =r ;if _ecfdb =_fedg .parseHeader ();_ecfdb !=nil {return _fe .Wrap (_ecfdb ,"P\u0061\u0067\u0065\u0049\u006e\u0066o\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065g\u006d\u0065\u006et\u002eI\u006e\u0069\u0074","");
};return nil ;};func (_degd *Header )parse (_dbad Documenter ,_fbed _g .StreamReader ,_ade int64 ,_fcdf OrganizationType )(_fdge error ){const _dgb ="\u0070\u0061\u0072s\u0065";_cdg .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u005b\u0050A\u0052\u0053\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");
defer func (){if _fdge !=nil {_cdg .Log .Trace ("\u005b\u0053\u0045GM\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045R\u005d[\u0050A\u0052S\u0045\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_fdge );}else {_cdg .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052]\u005bP\u0041\u0052\u0053\u0045\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
};}();_ ,_fdge =_fbed .Seek (_ade ,_dg .SeekStart );if _fdge !=nil {return _fe .Wrap (_fdge ,_dgb ,"\u0073\u0065\u0065\u006b\u0020\u0073\u0074\u0061\u0072\u0074");};if _fdge =_degd .readSegmentNumber (_fbed );_fdge !=nil {return _fe .Wrap (_fdge ,_dgb ,"");
};if _fdge =_degd .readHeaderFlags ();_fdge !=nil {return _fe .Wrap (_fdge ,_dgb ,"");};var _eecgf uint64 ;_eecgf ,_fdge =_degd .readNumberOfReferredToSegments (_fbed );if _fdge !=nil {return _fe .Wrap (_fdge ,_dgb ,"");};_degd .RTSNumbers ,_fdge =_degd .readReferredToSegmentNumbers (_fbed ,int (_eecgf ));
if _fdge !=nil {return _fe .Wrap (_fdge ,_dgb ,"");};_fdge =_degd .readSegmentPageAssociation (_dbad ,_fbed ,_eecgf ,_degd .RTSNumbers ...);if _fdge !=nil {return _fe .Wrap (_fdge ,_dgb ,"");};if _degd .Type !=TEndOfFile {if _fdge =_degd .readSegmentDataLength (_fbed );
_fdge !=nil {return _fe .Wrap (_fdge ,_dgb ,"");};};_degd .readDataStartOffset (_fbed ,_fcdf );_degd .readHeaderLength (_fbed ,_ade );_cdg .Log .Trace ("\u0025\u0073",_degd );return nil ;};func (_fdbda *SymbolDictionary )getToExportFlags ()([]int ,error ){var (_fcgb int ;
_gdeb int32 ;_cffb error ;_fdcg =int32 (_fdbda ._aebfb +_fdbda .NumberOfNewSymbols );_bddb =make ([]int ,_fdcg ););for _gfee :=int32 (0);_gfee < _fdcg ;_gfee +=_gdeb {if _fdbda .IsHuffmanEncoded {_gageb ,_aabbg :=_fd .GetStandardTable (1);if _aabbg !=nil {return nil ,_aabbg ;
};_gcgc ,_aabbg :=_gageb .Decode (_fdbda ._ggba );if _aabbg !=nil {return nil ,_aabbg ;};_gdeb =int32 (_gcgc );}else {_gdeb ,_cffb =_fdbda ._aaae .DecodeInt (_fdbda ._gbgc );if _cffb !=nil {return nil ,_cffb ;};};if _gdeb !=0{for _egeca :=_gfee ;_egeca < _gfee +_gdeb ;
_egeca ++{_bddb [_egeca ]=_fcgb ;};};if _fcgb ==0{_fcgb =1;}else {_fcgb =0;};};return _bddb ,nil ;};func (_adgc *PatternDictionary )computeSegmentDataStructure ()error {_adgc .DataOffset =_adgc ._aaaf .StreamPosition ();_adgc .DataHeaderLength =_adgc .DataOffset -_adgc .DataHeaderOffset ;
_adgc .DataLength =int64 (_adgc ._aaaf .Length ())-_adgc .DataHeaderLength ;return nil ;};func (_adcg *SymbolDictionary )setExportedSymbols (_cccf []int ){for _dge :=uint32 (0);_dge < _adcg ._aebfb +_adcg .NumberOfNewSymbols ;_dge ++{if _cccf [_dge ]==1{var _egdd *_b .Bitmap ;
if _dge < _adcg ._aebfb {_egdd =_adcg ._ccdf [_dge ];}else {_egdd =_adcg ._caeg [_dge -_adcg ._aebfb ];};_cdg .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u002d\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u0020\u0041\u0064\u0064 E\u0078\u0070\u006fr\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027%\u0073\u0027",_egdd );
_adcg ._efcb =append (_adcg ._efcb ,_egdd );};};};func (_dggf *template1 )setIndex (_ddc *_df .DecoderStats ){_ddc .SetIndex (0x080)};func (_bbg *HalftoneRegion )checkInput ()error {if _bbg .IsMMREncoded {if _bbg .HTemplate !=0{_cdg .Log .Debug ("\u0048\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030",_bbg .HTemplate );
};if _bbg .HSkipEnabled {_cdg .Log .Debug ("\u0048\u0053\u006b\u0069\u0070\u0045\u006e\u0061\u0062\u006c\u0065\u0064\u0020\u0030\u0020\u0025\u0076\u0020(\u0073\u0068\u006f\u0075\u006c\u0064\u0020c\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020v\u0061\u006c\u0075\u0065\u0020\u0066\u0061\u006c\u0073\u0065\u0029",_bbg .HSkipEnabled );
};};return nil ;};func (_eccd *Header )writeReferredToCount (_gagb _g .BinaryWriter )(_adef int ,_cbag error ){const _edac ="w\u0072i\u0074\u0065\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0043ou\u006e\u0074";_eccd .RTSNumbers =make ([]int ,len (_eccd .RTSegments ));
for _bgdcd ,_cabf :=range _eccd .RTSegments {_eccd .RTSNumbers [_bgdcd ]=int (_cabf .SegmentNumber );};if len (_eccd .RTSNumbers )<=4{var _aaff byte ;if len (_eccd .RetainBits )>=1{_aaff =_eccd .RetainBits [0];};_aaff |=byte (len (_eccd .RTSNumbers ))<<5;
if _cbag =_gagb .WriteByte (_aaff );_cbag !=nil {return 0,_fe .Wrap (_cbag ,_edac ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return 1,nil ;};_befg :=uint32 (len (_eccd .RTSNumbers ));_bade :=make ([]byte ,4+_db .Ceil (len (_eccd .RTSNumbers )+1,8));
_befg |=0x7<<29;_dgf .BigEndian .PutUint32 (_bade ,_befg );copy (_bade [1:],_eccd .RetainBits );_adef ,_cbag =_gagb .Write (_bade );if _cbag !=nil {return 0,_fe .Wrap (_cbag ,_edac ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return _adef ,nil ;
};func (_bbfab *TextRegion )symbolIDCodeLengths ()error {var (_acfca []*_fd .Code ;_bcfcc uint64 ;_gdec _fd .Tabler ;_eege error ;);for _ffdef :=0;_ffdef < 35;_ffdef ++{_bcfcc ,_eege =_bbfab ._gaad .ReadBits (4);if _eege !=nil {return _eege ;};_ffeb :=int (_bcfcc &0xf);
if _ffeb > 0{_acfca =append (_acfca ,_fd .NewCode (int32 (_ffeb ),0,int32 (_ffdef ),false ));};};_gdec ,_eege =_fd .NewFixedSizeTable (_acfca );if _eege !=nil {return _eege ;};var (_adgd int64 ;_dagd uint32 ;_ecbd []*_fd .Code ;_gbad int64 ;);for _dagd < _bbfab .NumberOfSymbols {_gbad ,_eege =_gdec .Decode (_bbfab ._gaad );
if _eege !=nil {return _eege ;};if _gbad < 32{if _gbad > 0{_ecbd =append (_ecbd ,_fd .NewCode (int32 (_gbad ),0,int32 (_dagd ),false ));};_adgd =_gbad ;_dagd ++;}else {var _gegf ,_dadc int64 ;switch _gbad {case 32:_bcfcc ,_eege =_bbfab ._gaad .ReadBits (2);
if _eege !=nil {return _eege ;};_gegf =3+int64 (_bcfcc );if _dagd > 0{_dadc =_adgd ;};case 33:_bcfcc ,_eege =_bbfab ._gaad .ReadBits (3);if _eege !=nil {return _eege ;};_gegf =3+int64 (_bcfcc );case 34:_bcfcc ,_eege =_bbfab ._gaad .ReadBits (7);if _eege !=nil {return _eege ;
};_gegf =11+int64 (_bcfcc );};for _egce :=0;_egce < int (_gegf );_egce ++{if _dadc > 0{_ecbd =append (_ecbd ,_fd .NewCode (int32 (_dadc ),0,int32 (_dagd ),false ));};_dagd ++;};};};_bbfab ._gaad .Align ();_bbfab ._ebcd ,_eege =_fd .NewFixedSizeTable (_ecbd );
return _eege ;};func (_acgd *HalftoneRegion )GetRegionBitmap ()(*_b .Bitmap ,error ){if _acgd .HalftoneRegionBitmap !=nil {return _acgd .HalftoneRegionBitmap ,nil ;};var _ddcd error ;_acgd .HalftoneRegionBitmap =_b .New (int (_acgd .RegionSegment .BitmapWidth ),int (_acgd .RegionSegment .BitmapHeight ));
if _acgd .Patterns ==nil ||len (_acgd .Patterns )==0{_acgd .Patterns ,_ddcd =_acgd .GetPatterns ();if _ddcd !=nil {return nil ,_ddcd ;};};if _acgd .HDefaultPixel ==1{_acgd .HalftoneRegionBitmap .SetDefaultPixel ();};_adfde :=_a .Ceil (_a .Log (float64 (len (_acgd .Patterns )))/_a .Log (2));
_cfef :=int (_adfde );var _fedd [][]int ;_fedd ,_ddcd =_acgd .grayScaleDecoding (_cfef );if _ddcd !=nil {return nil ,_ddcd ;};if _ddcd =_acgd .renderPattern (_fedd );_ddcd !=nil {return nil ,_ddcd ;};return _acgd .HalftoneRegionBitmap ,nil ;};func (_eecd *SymbolDictionary )retrieveImportSymbols ()error {for _ ,_gacg :=range _eecd .Header .RTSegments {if _gacg .Type ==0{_degb ,_ddafd :=_gacg .GetSegmentData ();
if _ddafd !=nil {return _ddafd ;};_cbbfb ,_dff :=_degb .(*SymbolDictionary );if !_dff {return _fa .Errorf ("\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0044\u0061\u0074a\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u003a\u0020%\u0054",_degb );
};_ffgdb ,_ddafd :=_cbbfb .GetDictionary ();if _ddafd !=nil {return _fa .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064 \u0073\u0065\u0067m\u0065\u006e\u0074 \u0077\u0069t\u0068\u0020\u0069\u006e\u0064\u0065x\u003a %\u0064\u0020\u0067\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0073",_gacg .SegmentNumber ,_ddafd .Error ());
};_eecd ._ccdf =append (_eecd ._ccdf ,_ffgdb ...);_eecd ._aebfb +=_cbbfb .NumberOfExportedSymbols ;};};return nil ;};func (_ffgc *GenericRegion )decodeLine (_beaa ,_acbc ,_eaac int )error {const _agc ="\u0064\u0065\u0063\u006f\u0064\u0065\u004c\u0069\u006e\u0065";
_geb :=_ffgc .Bitmap .GetByteIndex (0,_beaa );_fagb :=_geb -_ffgc .Bitmap .RowStride ;switch _ffgc .GBTemplate {case 0:if !_ffgc .UseExtTemplates {return _ffgc .decodeTemplate0a (_beaa ,_acbc ,_eaac ,_geb ,_fagb );};return _ffgc .decodeTemplate0b (_beaa ,_acbc ,_eaac ,_geb ,_fagb );
case 1:return _ffgc .decodeTemplate1 (_beaa ,_acbc ,_eaac ,_geb ,_fagb );case 2:return _ffgc .decodeTemplate2 (_beaa ,_acbc ,_eaac ,_geb ,_fagb );case 3:return _ffgc .decodeTemplate3 (_beaa ,_acbc ,_eaac ,_geb ,_fagb );};return _fe .Errorf (_agc ,"\u0069\u006e\u0076a\u006c\u0069\u0064\u0020G\u0042\u0054\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u003a\u0020\u0025\u0064",_ffgc .GBTemplate );
};func (_ebegc *PageInformationSegment )String ()string {_bfad :=&_fb .Builder {};_bfad .WriteString ("\u000a\u005b\u0050\u0041G\u0045\u002d\u0049\u004e\u0046\u004f\u0052\u004d\u0041\u0054I\u004fN\u002d\u0053\u0045\u0047\u004d\u0045\u004eT\u005d\u000a");
_bfad .WriteString (_fa .Sprintf ("\u0009\u002d \u0042\u004d\u0048e\u0069\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u000a",_ebegc .PageBMHeight ));_bfad .WriteString (_fa .Sprintf ("\u0009-\u0020B\u004d\u0057\u0069\u0064\u0074\u0068\u003a\u0020\u0025\u0064\u000a",_ebegc .PageBMWidth ));
_bfad .WriteString (_fa .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0058\u003a\u0020\u0025\u0064\u000a",_ebegc .ResolutionX ));_bfad .WriteString (_fa .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0059\u003a\u0020\u0025\u0064\u000a",_ebegc .ResolutionY ));
_bfad .WriteString (_fa .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0073\u000a",_ebegc ._gfbf ));_bfad .WriteString (_fa .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006eO\u0070\u0065\u0072\u0061\u0074\u006f\u0072O\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025v\u000a",_ebegc ._bga ));
_bfad .WriteString (_fa .Sprintf ("\u0009-\u0020I\u0073\u004c\u006f\u0073\u0073l\u0065\u0073s\u003a\u0020\u0025\u0076\u000a",_ebegc .IsLossless ));_bfad .WriteString (_fa .Sprintf ("\u0009\u002d\u0020R\u0065\u0071\u0075\u0069r\u0065\u0073\u0041\u0075\u0078\u0069\u006ci\u0061\u0072\u0079\u0042\u0075\u0066\u0066\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_ebegc ._dead ));
_bfad .WriteString (_fa .Sprintf ("\u0009\u002d\u0020M\u0069\u0067\u0068\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0052e\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0076\u000a",_ebegc ._ceff ));_bfad .WriteString (_fa .Sprintf ("\u0009\u002d\u0020\u0049\u0073\u0053\u0074\u0072\u0069\u0070\u0065\u0064:\u0020\u0025\u0076\u000a",_ebegc .IsStripe ));
_bfad .WriteString (_fa .Sprintf ("\t\u002d\u0020\u004d\u0061xS\u0074r\u0069\u0070\u0065\u0053\u0069z\u0065\u003a\u0020\u0025\u0076\u000a",_ebegc .MaxStripeSize ));return _bfad .String ();};func (_dea *GenericRefinementRegion )String ()string {_fbb :=&_fb .Builder {};
_fbb .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_fbb .WriteString (_dea .RegionInfo .String ()+"\u000a");_fbb .WriteString (_fa .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0052\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_dea .IsTPGROn ));
_fbb .WriteString (_fa .Sprintf ("\u0009-\u0020T\u0065\u006d\u0070\u006c\u0061t\u0065\u0049D\u003a\u0020\u0025\u0076\u000a",_dea .TemplateID ));_fbb .WriteString (_fa .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_dea .GrAtX ));
_fbb .WriteString (_fa .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_dea .GrAtY ));_fbb .WriteString (_fa .Sprintf ("\u0009-\u0020R\u0065\u0066\u0065\u0072\u0065n\u0063\u0065D\u0058\u0020\u0025\u0076\u000a",_dea .ReferenceDX ));
_fbb .WriteString (_fa .Sprintf ("\u0009\u002d\u0020\u0052ef\u0065\u0072\u0065\u006e\u0063\u0044\u0065\u0059\u003a\u0020\u0025\u0076\u000a",_dea .ReferenceDY ));return _fbb .String ();};func _cbb (_cgg _g .StreamReader ,_bafe *Header )*GenericRefinementRegion {return &GenericRefinementRegion {_eea :_cgg ,RegionInfo :NewRegionSegment (_cgg ),_dbg :_bafe ,_cf :&template0 {},_ab :&template1 {}};
};func (_bca *Header )readHeaderLength (_cdec _g .StreamReader ,_ebde int64 ){_bca .HeaderLength =_cdec .StreamPosition ()-_ebde ;};func (_gacf *HalftoneRegion )grayScaleDecoding (_afc int )([][]int ,error ){var (_acfc []int8 ;_ccfg []int8 ;);if !_gacf .IsMMREncoded {_acfc =make ([]int8 ,4);
_ccfg =make ([]int8 ,4);if _gacf .HTemplate <=1{_acfc [0]=3;}else if _gacf .HTemplate >=2{_acfc [0]=2;};_ccfg [0]=-1;_acfc [1]=-3;_ccfg [1]=-1;_acfc [2]=2;_ccfg [2]=-2;_acfc [3]=-2;_ccfg [3]=-2;};_ccgf :=make ([]*_b .Bitmap ,_afc );_efgg :=NewGenericRegion (_gacf ._dfbda );
_efgg .setParametersMMR (_gacf .IsMMREncoded ,_gacf .DataOffset ,_gacf .DataLength ,_gacf .HGridHeight ,_gacf .HGridWidth ,_gacf .HTemplate ,false ,_gacf .HSkipEnabled ,_acfc ,_ccfg );_gcd :=_afc -1;var _ecbcg error ;_ccgf [_gcd ],_ecbcg =_efgg .GetRegionBitmap ();
if _ecbcg !=nil {return nil ,_ecbcg ;};for _gcd > 0{_gcd --;_efgg .Bitmap =nil ;_ccgf [_gcd ],_ecbcg =_efgg .GetRegionBitmap ();if _ecbcg !=nil {return nil ,_ecbcg ;};if _ecbcg =_gacf .combineGrayscalePlanes (_ccgf ,_gcd );_ecbcg !=nil {return nil ,_ecbcg ;
};};return _gacf .computeGrayScalePlanes (_ccgf ,_afc );};func (_abaag *SymbolDictionary )setSymbolsArray ()error {if _abaag ._ccdf ==nil {if _fbdd :=_abaag .retrieveImportSymbols ();_fbdd !=nil {return _fbdd ;};};if _abaag ._efce ==nil {_abaag ._efce =append (_abaag ._efce ,_abaag ._ccdf ...);
};return nil ;};func (_dcfda *Header )readDataStartOffset (_babg _g .StreamReader ,_cfba OrganizationType ){if _cfba ==OSequential {_dcfda .SegmentDataStartOffset =uint64 (_babg .StreamPosition ());};};func (_eafb *PageInformationSegment )readCombinationOperator ()error {_gcf ,_acacb :=_eafb ._gdc .ReadBits (2);
if _acacb !=nil {return _acacb ;};_eafb ._gfbf =_b .CombinationOperator (int (_gcf ));return nil ;};func (_bdfg *SymbolDictionary )huffDecodeBmSize ()(int64 ,error ){if _bdfg ._abbd ==nil {var (_dbaf int ;_dgcc error ;);if _bdfg .SdHuffDecodeHeightSelection ==3{_dbaf ++;
};if _bdfg .SdHuffDecodeWidthSelection ==3{_dbaf ++;};_bdfg ._abbd ,_dgcc =_bdfg .getUserTable (_dbaf );if _dgcc !=nil {return 0,_dgcc ;};};return _bdfg ._abbd .Decode (_bdfg ._ggba );};func (_fggg *TextRegion )decodeSymInRefSize ()(int64 ,error ){const _bcbc ="\u0064e\u0063o\u0064\u0065\u0053\u0079\u006dI\u006e\u0052e\u0066\u0053\u0069\u007a\u0065";
if _fggg .SbHuffRSize ==0{_fbbb ,_gfggb :=_fd .GetStandardTable (1);if _gfggb !=nil {return 0,_fe .Wrap (_gfggb ,_bcbc ,"");};return _fbbb .Decode (_fggg ._gaad );};if _fggg ._efaf ==nil {var (_cfbe int ;_gbfbe error ;);if _fggg .SbHuffFS ==3{_cfbe ++;
};if _fggg .SbHuffDS ==3{_cfbe ++;};if _fggg .SbHuffDT ==3{_cfbe ++;};if _fggg .SbHuffRDWidth ==3{_cfbe ++;};if _fggg .SbHuffRDHeight ==3{_cfbe ++;};if _fggg .SbHuffRDX ==3{_cfbe ++;};if _fggg .SbHuffRDY ==3{_cfbe ++;};_fggg ._efaf ,_gbfbe =_fggg .getUserTable (_cfbe );
if _gbfbe !=nil {return 0,_fe .Wrap (_gbfbe ,_bcbc ,"");};};_gbab ,_dgaf :=_fggg ._efaf .Decode (_fggg ._gaad );if _dgaf !=nil {return 0,_fe .Wrap (_dgaf ,_bcbc ,"");};return _gbab ,nil ;};