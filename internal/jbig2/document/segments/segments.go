//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package segments ;import (_e "encoding/binary";_fd "errors";_ae "fmt";_ba "github.com/unidoc/unipdf/v3/common";_aa "github.com/unidoc/unipdf/v3/internal/bitwise";_cb "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_aad "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";
_gb "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/arithmetic";_gd "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/huffman";_da "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/mmr";_cg "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/arithmetic";
_eb "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_d "github.com/unidoc/unipdf/v3/internal/jbig2/internal";_ed "golang.org/x/xerrors";_f "image";_ff "io";_a "math";_g "strings";_b "time";);func (_gdgc *PatternDictionary )readTemplate ()error {_ccgbg ,_baec :=_gdgc ._gbeda .ReadBits (2);
if _baec !=nil {return _baec ;};_gdgc .HDTemplate =byte (_ccgbg );return nil ;};func (_acgc *SymbolDictionary )getSymbol (_fbeg int )(*_aad .Bitmap ,error ){const _daagb ="\u0067e\u0074\u0053\u0079\u006d\u0062\u006fl";_geda ,_fedd :=_acgc ._ddceg .GetBitmap (_acgc ._dbcdd [_fbeg ]);
if _fedd !=nil {return nil ,_eb .Wrap (_fedd ,_daagb ,"\u0063\u0061n\u0027\u0074\u0020g\u0065\u0074\u0020\u0073\u0079\u006d\u0062\u006f\u006c");};return _geda ,nil ;};func (_aag *GenericRegion )getPixel (_fdg ,_eff int )int8 {if _fdg < 0||_fdg >=_aag .Bitmap .Width {return 0;
};if _eff < 0||_eff >=_aag .Bitmap .Height {return 0;};if _aag .Bitmap .GetPixel (_fdg ,_eff ){return 1;};return 0;};func (_gfaf *HalftoneRegion )renderPattern (_gge [][]int )(_afca error ){var _cbbe ,_gecd int ;for _fgdc :=0;_fgdc < int (_gfaf .HGridHeight );
_fgdc ++{for _ecdc :=0;_ecdc < int (_gfaf .HGridWidth );_ecdc ++{_cbbe =_gfaf .computeX (_fgdc ,_ecdc );_gecd =_gfaf .computeY (_fgdc ,_ecdc );_dded :=_gfaf .Patterns [_gge [_fgdc ][_ecdc ]];if _afca =_aad .Blit (_dded ,_gfaf .HalftoneRegionBitmap ,_cbbe +int (_gfaf .HGridX ),_gecd +int (_gfaf .HGridY ),_gfaf .CombinationOperator );
_afca !=nil {return _afca ;};};};return nil ;};func (_cdeb *PageInformationSegment )readWidthAndHeight ()error {_ece ,_bdb :=_cdeb ._cgbc .ReadBits (32);if _bdb !=nil {return _bdb ;};_cdeb .PageBMWidth =int (_ece &_a .MaxInt32 );_ece ,_bdb =_cdeb ._cgbc .ReadBits (32);
if _bdb !=nil {return _bdb ;};_cdeb .PageBMHeight =int (_ece &_a .MaxInt32 );return nil ;};func (_bbgd *GenericRegion )overrideAtTemplate1 (_gccg ,_gdgb ,_adg ,_ffce ,_ddce int )int {_gccg &=0x1FF7;if _bbgd .GBAtY [0]==0&&_bbgd .GBAtX [0]>=-int8 (_ddce ){_gccg |=(_ffce >>uint (7-(int8 (_ddce )+_bbgd .GBAtX [0]))&0x1)<<3;
}else {_gccg |=int (_bbgd .getPixel (_gdgb +int (_bbgd .GBAtX [0]),_adg +int (_bbgd .GBAtY [0])))<<3;};return _gccg ;};func (_ebbd *Header )readReferredToSegmentNumbers (_agd _aa .StreamReader ,_ddcf int )([]int ,error ){const _gafa ="\u0072\u0065\u0061\u0064R\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053e\u0067m\u0065\u006e\u0074\u004e\u0075\u006d\u0062e\u0072\u0073";
_dcbf :=make ([]int ,_ddcf );if _ddcf > 0{_ebbd .RTSegments =make ([]*Header ,_ddcf );var (_fdge uint64 ;_aae error ;);for _beag :=0;_beag < _ddcf ;_beag ++{_fdge ,_aae =_agd .ReadBits (byte (_ebbd .referenceSize ())<<3);if _aae !=nil {return nil ,_eb .Wrapf (_aae ,_gafa ,"\u0027\u0025\u0064\u0027 \u0072\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0020\u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u0075\u006db\u0065\u0072",_beag );
};_dcbf [_beag ]=int (_fdge &_a .MaxInt32 );};};return _dcbf ,nil ;};func (_aeeg *PatternDictionary )setGbAtPixels (){if _aeeg .HDTemplate ==0{_aeeg .GBAtX =make ([]int8 ,4);_aeeg .GBAtY =make ([]int8 ,4);_aeeg .GBAtX [0]=-int8 (_aeeg .HdpWidth );_aeeg .GBAtY [0]=0;
_aeeg .GBAtX [1]=-3;_aeeg .GBAtY [1]=-1;_aeeg .GBAtX [2]=2;_aeeg .GBAtY [2]=-2;_aeeg .GBAtX [3]=-2;_aeeg .GBAtY [3]=-2;}else {_aeeg .GBAtX =[]int8 {-int8 (_aeeg .HdpWidth )};_aeeg .GBAtY =[]int8 {0};};};func (_cgfg *TableSegment )Init (h *Header ,r _aa .StreamReader )error {_cgfg ._acaaa =r ;
return _cgfg .parseHeader ();};func (_aagg *TextRegion )computeSymbolCodeLength ()error {if _aagg .IsHuffmanEncoded {return _aagg .symbolIDCodeLengths ();};_aagg ._cebe =int8 (_a .Ceil (_a .Log (float64 (_aagg .NumberOfSymbols ))/_a .Log (2)));return nil ;
};func (_eege *TextRegion )readUseRefinement ()error {if !_eege .UseRefinement ||_eege .SbrTemplate !=0{return nil ;};var (_cace byte ;_fgba error ;);_eege .SbrATX =make ([]int8 ,2);_eege .SbrATY =make ([]int8 ,2);_cace ,_fgba =_eege ._acgad .ReadByte ();
if _fgba !=nil {return _fgba ;};_eege .SbrATX [0]=int8 (_cace );_cace ,_fgba =_eege ._acgad .ReadByte ();if _fgba !=nil {return _fgba ;};_eege .SbrATY [0]=int8 (_cace );_cace ,_fgba =_eege ._acgad .ReadByte ();if _fgba !=nil {return _fgba ;};_eege .SbrATX [1]=int8 (_cace );
_cace ,_fgba =_eege ._acgad .ReadByte ();if _fgba !=nil {return _fgba ;};_eege .SbrATY [1]=int8 (_cace );return nil ;};func NewGenericRegion (r _aa .StreamReader )*GenericRegion {return &GenericRegion {RegionSegment :NewRegionSegment (r ),_cdb :r };};func (_fef *GenericRegion )Init (h *Header ,r _aa .StreamReader )error {_fef .RegionSegment =NewRegionSegment (r );
_fef ._cdb =r ;return _fef .parseHeader ();};func (_dcfa *PatternDictionary )checkInput ()error {if _dcfa .HdpHeight < 1||_dcfa .HdpWidth < 1{return _fd .New ("in\u0076\u0061l\u0069\u0064\u0020\u0048\u0065\u0061\u0064\u0065\u0072 \u0056\u0061\u006c\u0075\u0065\u003a\u0020\u0057\u0069\u0064\u0074\u0068\u002f\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020g\u0072e\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020z\u0065\u0072o");
};if _dcfa .IsMMREncoded {if _dcfa .HDTemplate !=0{_ba .Log .Debug ("\u0076\u0061\u0072\u0069\u0061\u0062\u006c\u0065\u0020\u0048\u0044\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e \u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030");
};};return nil ;};func (_acgg *SymbolDictionary )encodeFlags (_adgb _aa .BinaryWriter )(_cece int ,_geg error ){const _ccfb ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _geg =_adgb .SkipBits (3);_geg !=nil {return 0,_eb .Wrap (_geg ,_ccfb ,"\u0065\u006d\u0070\u0074\u0079\u0020\u0062\u0069\u0074\u0073");
};var _dccb int ;if _acgg .SdrTemplate > 0{_dccb =1;};if _geg =_adgb .WriteBit (_dccb );_geg !=nil {return _cece ,_eb .Wrap (_geg ,_ccfb ,"s\u0064\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_dccb =0;if _acgg .SdTemplate > 1{_dccb =1;};if _geg =_adgb .WriteBit (_dccb );
_geg !=nil {return _cece ,_eb .Wrap (_geg ,_ccfb ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_dccb =0;if _acgg .SdTemplate ==1||_acgg .SdTemplate ==3{_dccb =1;};if _geg =_adgb .WriteBit (_dccb );_geg !=nil {return _cece ,_eb .Wrap (_geg ,_ccfb ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");
};_dccb =0;if _acgg ._agag {_dccb =1;};if _geg =_adgb .WriteBit (_dccb );_geg !=nil {return _cece ,_eb .Wrap (_geg ,_ccfb ,"\u0063\u006f\u0064in\u0067\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0065\u0064");
};_dccb =0;if _acgg ._ddec {_dccb =1;};if _geg =_adgb .WriteBit (_dccb );_geg !=nil {return _cece ,_eb .Wrap (_geg ,_ccfb ,"\u0063\u006f\u0064\u0069ng\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0075\u0073\u0065\u0064");};_dccb =0;if _acgg .SdHuffAggInstanceSelection {_dccb =1;
};if _geg =_adgb .WriteBit (_dccb );_geg !=nil {return _cece ,_eb .Wrap (_geg ,_ccfb ,"\u0073\u0064\u0048\u0075\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074");};_dccb =int (_acgg .SdHuffBMSizeSelection );if _geg =_adgb .WriteBit (_dccb );_geg !=nil {return _cece ,_eb .Wrap (_geg ,_ccfb ,"\u0073\u0064\u0048u\u0066\u0066\u0042\u006d\u0053\u0069\u007a\u0065");
};_dccb =0;if _acgg .SdHuffDecodeWidthSelection > 1{_dccb =1;};if _geg =_adgb .WriteBit (_dccb );_geg !=nil {return _cece ,_eb .Wrap (_geg ,_ccfb ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_dccb =0;switch _acgg .SdHuffDecodeWidthSelection {case 1,3:_dccb =1;
};if _geg =_adgb .WriteBit (_dccb );_geg !=nil {return _cece ,_eb .Wrap (_geg ,_ccfb ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_dccb =0;if _acgg .SdHuffDecodeHeightSelection > 1{_dccb =1;};if _geg =_adgb .WriteBit (_dccb );_geg !=nil {return _cece ,_eb .Wrap (_geg ,_ccfb ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");
};_dccb =0;switch _acgg .SdHuffDecodeHeightSelection {case 1,3:_dccb =1;};if _geg =_adgb .WriteBit (_dccb );_geg !=nil {return _cece ,_eb .Wrap (_geg ,_ccfb ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_dccb =0;if _acgg .UseRefinementAggregation {_dccb =1;
};if _geg =_adgb .WriteBit (_dccb );_geg !=nil {return _cece ,_eb .Wrap (_geg ,_ccfb ,"\u0073\u0064\u0052\u0065\u0066\u0041\u0067\u0067");};_dccb =0;if _acgg .IsHuffmanEncoded {_dccb =1;};if _geg =_adgb .WriteBit (_dccb );_geg !=nil {return _cece ,_eb .Wrap (_geg ,_ccfb ,"\u0073\u0064\u0048\u0075\u0066\u0066");
};return 2,nil ;};func (_edg *GenericRefinementRegion )setParameters (_gcg *_gb .DecoderStats ,_ace *_gb .Decoder ,_gfd int8 ,_cedg ,_baa uint32 ,_cgcb *_aad .Bitmap ,_ead ,_ecfe int32 ,_geb bool ,_egf []int8 ,_ddad []int8 ){_ba .Log .Trace ("\u005b\u0047\u0045NE\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052E\u0047I\u004fN\u005d \u0073\u0065\u0074\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073");
if _gcg !=nil {_edg ._ac =_gcg ;};if _ace !=nil {_edg ._eed =_ace ;};_edg .TemplateID =_gfd ;_edg .RegionInfo .BitmapWidth =_cedg ;_edg .RegionInfo .BitmapHeight =_baa ;_edg .ReferenceBitmap =_cgcb ;_edg .ReferenceDX =_ead ;_edg .ReferenceDY =_ecfe ;_edg .IsTPGROn =_geb ;
_edg .GrAtX =_egf ;_edg .GrAtY =_ddad ;_edg .RegionBitmap =nil ;_ba .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073 f\u0069\u006ei\u0073\u0068\u0065\u0064\u002e\u0020\u0025\u0073",_edg );
};func (_dfcg *Header )writeSegmentNumber (_eeaa _aa .BinaryWriter )(_ggb int ,_ccfa error ){_aegc :=make ([]byte ,4);_e .BigEndian .PutUint32 (_aegc ,_dfcg .SegmentNumber );if _ggb ,_ccfa =_eeaa .Write (_aegc );_ccfa !=nil {return 0,_eb .Wrap (_ccfa ,"\u0048e\u0061\u0064\u0065\u0072.\u0077\u0072\u0069\u0074\u0065S\u0065g\u006de\u006e\u0074\u004e\u0075\u006d\u0062\u0065r","");
};return _ggb ,nil ;};var _ SegmentEncoder =&RegionSegment {};func (_dcag *SymbolDictionary )checkInput ()error {if _dcag .SdHuffDecodeHeightSelection ==2{_ba .Log .Debug ("\u0053\u0079\u006d\u0062\u006fl\u0020\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u0053e\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0070\u0065r\u006d\u0069\u0074\u0074\u0065\u0064",_dcag .SdHuffDecodeHeightSelection );
};if _dcag .SdHuffDecodeWidthSelection ==2{_ba .Log .Debug ("\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0057\u0069\u0064t\u0068\u0020\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061l\u0075\u0065\u0020\u006e\u006f\u0074 \u0070\u0065r\u006d\u0069t\u0074e\u0064",_dcag .SdHuffDecodeWidthSelection );
};if _dcag .IsHuffmanEncoded {if _dcag .SdTemplate !=0{_ba .Log .Debug ("\u0053\u0044T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e \u0030\u0029",_dcag .SdTemplate );
};if !_dcag .UseRefinementAggregation {if !_dcag .UseRefinementAggregation {if _dcag ._agag {_ba .Log .Debug ("\u0049\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074ex\u0074\u0052\u0065\u0074\u0061\u0069n\u0065\u0064\u0020\u003d\u0020\u0074\u0072\u0075\u0065\u0020\u0028\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0066\u0061\u006cs\u0065\u0029");
_dcag ._agag =false ;};if _dcag ._ddec {_ba .Log .Debug ("\u0069s\u0043\u006fd\u0069\u006e\u0067\u0043o\u006e\u0074\u0065x\u0074\u0055\u0073\u0065\u0064\u0020\u003d\u0020\u0074ru\u0065\u0020\u0028s\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020f\u0061\u006cs\u0065\u0029");
_dcag ._ddec =false ;};};};}else {if _dcag .SdHuffBMSizeSelection !=0{_ba .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066B\u004d\u0053\u0069\u007a\u0065\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_dcag .SdHuffBMSizeSelection =0;};if _dcag .SdHuffDecodeWidthSelection !=0{_ba .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068\u0053\u0065\u006c\u0065\u0063\u0074\u0069o\u006e\u0020\u0073\u0068\u006fu\u006c\u0064 \u0062\u0065\u0020\u0030");
_dcag .SdHuffDecodeWidthSelection =0;};if _dcag .SdHuffDecodeHeightSelection !=0{_ba .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0048e\u0069\u0067\u0068\u0074\u0053\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_dcag .SdHuffDecodeHeightSelection =0;};};if !_dcag .UseRefinementAggregation {if _dcag .SdrTemplate !=0{_ba .Log .Debug ("\u0053\u0044\u0052\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u003d\u0020\u0025\u0064\u0020\u0028s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_dcag .SdrTemplate );
_dcag .SdrTemplate =0;};};if !_dcag .IsHuffmanEncoded ||!_dcag .UseRefinementAggregation {if _dcag .SdHuffAggInstanceSelection {_ba .Log .Debug ("\u0053d\u0048\u0075f\u0066\u0041\u0067g\u0049\u006e\u0073\u0074\u0061\u006e\u0063e\u0053\u0065\u006c\u0065\u0063\u0074i\u006f\u006e\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_dcag .SdHuffAggInstanceSelection );
};};return nil ;};func (_ccb *HalftoneRegion )checkInput ()error {if _ccb .IsMMREncoded {if _ccb .HTemplate !=0{_ba .Log .Debug ("\u0048\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030",_ccb .HTemplate );
};if _ccb .HSkipEnabled {_ba .Log .Debug ("\u0048\u0053\u006b\u0069\u0070\u0045\u006e\u0061\u0062\u006c\u0065\u0064\u0020\u0030\u0020\u0025\u0076\u0020(\u0073\u0068\u006f\u0075\u006c\u0064\u0020c\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020v\u0061\u006c\u0075\u0065\u0020\u0066\u0061\u006c\u0073\u0065\u0029",_ccb .HSkipEnabled );
};};return nil ;};func (_ccfg *PageInformationSegment )readCombinationOperatorOverrideAllowed ()error {_bdgg ,_eggf :=_ccfg ._cgbc .ReadBit ();if _eggf !=nil {return _eggf ;};if _bdgg ==1{_ccfg ._adbdg =true ;};return nil ;};func (_dged *GenericRegion )updateOverrideFlags ()error {const _aaa ="\u0075\u0070\u0064\u0061te\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _dged .GBAtX ==nil ||_dged .GBAtY ==nil {return nil ;};if len (_dged .GBAtX )!=len (_dged .GBAtY ){return _eb .Errorf (_aaa ,"i\u006eco\u0073i\u0073t\u0065\u006e\u0074\u0020\u0041T\u0020\u0070\u0069x\u0065\u006c\u002e\u0020\u0041m\u006f\u0075\u006et\u0020\u006f\u0066\u0020\u0027\u0078\u0027\u0020\u0070\u0069\u0078e\u006c\u0073\u003a %d\u002c\u0020\u0041\u006d\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0027\u0079\u0027\u0020\u0070\u0069\u0078e\u006cs\u003a\u0020\u0025\u0064",len (_dged .GBAtX ),len (_dged .GBAtY ));
};_dged .GBAtOverride =make ([]bool ,len (_dged .GBAtX ));switch _dged .GBTemplate {case 0:if !_dged .UseExtTemplates {if _dged .GBAtX [0]!=3||_dged .GBAtY [0]!=-1{_dged .setOverrideFlag (0);};if _dged .GBAtX [1]!=-3||_dged .GBAtY [1]!=-1{_dged .setOverrideFlag (1);
};if _dged .GBAtX [2]!=2||_dged .GBAtY [2]!=-2{_dged .setOverrideFlag (2);};if _dged .GBAtX [3]!=-2||_dged .GBAtY [3]!=-2{_dged .setOverrideFlag (3);};}else {if _dged .GBAtX [0]!=-2||_dged .GBAtY [0]!=0{_dged .setOverrideFlag (0);};if _dged .GBAtX [1]!=0||_dged .GBAtY [1]!=-2{_dged .setOverrideFlag (1);
};if _dged .GBAtX [2]!=-2||_dged .GBAtY [2]!=-1{_dged .setOverrideFlag (2);};if _dged .GBAtX [3]!=-1||_dged .GBAtY [3]!=-2{_dged .setOverrideFlag (3);};if _dged .GBAtX [4]!=1||_dged .GBAtY [4]!=-2{_dged .setOverrideFlag (4);};if _dged .GBAtX [5]!=2||_dged .GBAtY [5]!=-1{_dged .setOverrideFlag (5);
};if _dged .GBAtX [6]!=-3||_dged .GBAtY [6]!=0{_dged .setOverrideFlag (6);};if _dged .GBAtX [7]!=-4||_dged .GBAtY [7]!=0{_dged .setOverrideFlag (7);};if _dged .GBAtX [8]!=2||_dged .GBAtY [8]!=-2{_dged .setOverrideFlag (8);};if _dged .GBAtX [9]!=3||_dged .GBAtY [9]!=-1{_dged .setOverrideFlag (9);
};if _dged .GBAtX [10]!=-2||_dged .GBAtY [10]!=-2{_dged .setOverrideFlag (10);};if _dged .GBAtX [11]!=-3||_dged .GBAtY [11]!=-1{_dged .setOverrideFlag (11);};};case 1:if _dged .GBAtX [0]!=3||_dged .GBAtY [0]!=-1{_dged .setOverrideFlag (0);};case 2:if _dged .GBAtX [0]!=2||_dged .GBAtY [0]!=-1{_dged .setOverrideFlag (0);
};case 3:if _dged .GBAtX [0]!=2||_dged .GBAtY [0]!=-1{_dged .setOverrideFlag (0);};};return nil ;};func (_dbc *GenericRegion )computeSegmentDataStructure ()error {_dbc .DataOffset =_dbc ._cdb .StreamPosition ();_dbc .DataHeaderLength =_dbc .DataOffset -_dbc .DataHeaderOffset ;
_dbc .DataLength =int64 (_dbc ._cdb .Length ())-_dbc .DataHeaderLength ;return nil ;};func (_gggbb *TextRegion )readHuffmanFlags ()error {var (_cafac int ;_dbafa uint64 ;_afbg error ;);_ ,_afbg =_gggbb ._acgad .ReadBit ();if _afbg !=nil {return _afbg ;
};_cafac ,_afbg =_gggbb ._acgad .ReadBit ();if _afbg !=nil {return _afbg ;};_gggbb .SbHuffRSize =int8 (_cafac );_dbafa ,_afbg =_gggbb ._acgad .ReadBits (2);if _afbg !=nil {return _afbg ;};_gggbb .SbHuffRDY =int8 (_dbafa )&0xf;_dbafa ,_afbg =_gggbb ._acgad .ReadBits (2);
if _afbg !=nil {return _afbg ;};_gggbb .SbHuffRDX =int8 (_dbafa )&0xf;_dbafa ,_afbg =_gggbb ._acgad .ReadBits (2);if _afbg !=nil {return _afbg ;};_gggbb .SbHuffRDHeight =int8 (_dbafa )&0xf;_dbafa ,_afbg =_gggbb ._acgad .ReadBits (2);if _afbg !=nil {return _afbg ;
};_gggbb .SbHuffRDWidth =int8 (_dbafa )&0xf;_dbafa ,_afbg =_gggbb ._acgad .ReadBits (2);if _afbg !=nil {return _afbg ;};_gggbb .SbHuffDT =int8 (_dbafa )&0xf;_dbafa ,_afbg =_gggbb ._acgad .ReadBits (2);if _afbg !=nil {return _afbg ;};_gggbb .SbHuffDS =int8 (_dbafa )&0xf;
_dbafa ,_afbg =_gggbb ._acgad .ReadBits (2);if _afbg !=nil {return _afbg ;};_gggbb .SbHuffFS =int8 (_dbafa )&0xf;return nil ;};type OrganizationType uint8 ;func (_dbbc *TextRegion )decodeRdh ()(int64 ,error ){const _abgb ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064h";
if _dbbc .IsHuffmanEncoded {if _dbbc .SbHuffRDHeight ==3{if _dbbc ._ggac ==nil {var (_fagb int ;_adgc error ;);if _dbbc .SbHuffFS ==3{_fagb ++;};if _dbbc .SbHuffDS ==3{_fagb ++;};if _dbbc .SbHuffDT ==3{_fagb ++;};if _dbbc .SbHuffRDWidth ==3{_fagb ++;};
_dbbc ._ggac ,_adgc =_dbbc .getUserTable (_fagb );if _adgc !=nil {return 0,_eb .Wrap (_adgc ,_abgb ,"");};};return _dbbc ._ggac .Decode (_dbbc ._acgad );};_adeb ,_fegcg :=_gd .GetStandardTable (14+int (_dbbc .SbHuffRDHeight ));if _fegcg !=nil {return 0,_eb .Wrap (_fegcg ,_abgb ,"");
};return _adeb .Decode (_dbbc ._acgad );};_dbaf ,_aacc :=_dbbc ._egeb .DecodeInt (_dbbc ._daeb );if _aacc !=nil {return 0,_eb .Wrap (_aacc ,_abgb ,"");};return int64 (_dbaf ),nil ;};func (_bdgbg *Header )readHeaderLength (_bdfe _aa .StreamReader ,_cebdg int64 ){_bdgbg .HeaderLength =_bdfe .StreamPosition ()-_cebdg ;
};const (ORandom OrganizationType =iota ;OSequential ;);func (_feff *HalftoneRegion )computeX (_bgd ,_egaf int )int {return _feff .shiftAndFill (int (_feff .HGridX )+_bgd *int (_feff .HRegionY )+_egaf *int (_feff .HRegionX ));};func (_dac *Header )readSegmentPageAssociation (_cbd Documenter ,_ccgb _aa .StreamReader ,_cce uint64 ,_gecg ...int )(_gefb error ){const _efb ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074P\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061t\u0069\u006f\u006e";
if !_dac .PageAssociationFieldSize {_bfec ,_efdc :=_ccgb .ReadBits (8);if _efdc !=nil {return _eb .Wrap (_efdc ,_efb ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_dac .PageAssociation =int (_bfec &0xFF);}else {_gcebe ,_cfae :=_ccgb .ReadBits (32);
if _cfae !=nil {return _eb .Wrap (_cfae ,_efb ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_dac .PageAssociation =int (_gcebe &_a .MaxInt32 );};if _cce ==0{return nil ;};if _dac .PageAssociation !=0{_acad ,_dfe :=_cbd .GetPage (_dac .PageAssociation );
if _dfe !=nil {return _eb .Wrap (_dfe ,_efb ,"\u0061s\u0073\u006f\u0063\u0069a\u0074\u0065\u0064\u0020\u0070a\u0067e\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006ed");};var _agg int ;for _fbgege :=uint64 (0);_fbgege < _cce ;_fbgege ++{_agg =_gecg [_fbgege ];
_dac .RTSegments [_fbgege ],_dfe =_acad .GetSegment (_agg );if _dfe !=nil {var _bde error ;_dac .RTSegments [_fbgege ],_bde =_cbd .GetGlobalSegment (_agg );if _bde !=nil {return _eb .Wrapf (_dfe ,_efb ,"\u0072\u0065\u0066\u0065\u0072\u0065n\u0063\u0065\u0020s\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064\u0020\u0061\u0074\u0020pa\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0072\u0020\u0069\u006e\u0020\u0067\u006c\u006f\u0062\u0061\u006c\u0073",_dac .PageAssociation );
};};};return nil ;};for _cege :=uint64 (0);_cege < _cce ;_cege ++{_dac .RTSegments [_cege ],_gefb =_cbd .GetGlobalSegment (_gecg [_cege ]);if _gefb !=nil {return _eb .Wrapf (_gefb ,_efb ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u003a\u0020\u0027\u0025d\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064",_gecg [_cege ]);
};};return nil ;};func (_feddb *TextRegion )setParameters (_daad *_gb .Decoder ,_baff ,_decg bool ,_bfce ,_bfbfa uint32 ,_ccag uint32 ,_bffcc int8 ,_affa uint32 ,_fddg int8 ,_egfcf _aad .CombinationOperator ,_cggb int8 ,_afaa int16 ,_cgca ,_gacd ,_cceb ,_caffe ,_afdg ,_gfce ,_gbcg ,_abad ,_dfd ,_cdgg int8 ,_egdfg ,_cadb []int8 ,_ccba []*_aad .Bitmap ,_gaggd int8 ){_feddb ._egeb =_daad ;
_feddb .IsHuffmanEncoded =_baff ;_feddb .UseRefinement =_decg ;_feddb .RegionInfo .BitmapWidth =_bfce ;_feddb .RegionInfo .BitmapHeight =_bfbfa ;_feddb .NumberOfSymbolInstances =_ccag ;_feddb .SbStrips =_bffcc ;_feddb .NumberOfSymbols =_affa ;_feddb .DefaultPixel =_fddg ;
_feddb .CombinationOperator =_egfcf ;_feddb .IsTransposed =_cggb ;_feddb .ReferenceCorner =_afaa ;_feddb .SbDsOffset =_cgca ;_feddb .SbHuffFS =_gacd ;_feddb .SbHuffDS =_cceb ;_feddb .SbHuffDT =_caffe ;_feddb .SbHuffRDWidth =_afdg ;_feddb .SbHuffRDHeight =_gfce ;
_feddb .SbHuffRSize =_dfd ;_feddb .SbHuffRDX =_gbcg ;_feddb .SbHuffRDY =_abad ;_feddb .SbrTemplate =_cdgg ;_feddb .SbrATX =_egdfg ;_feddb .SbrATY =_cadb ;_feddb .Symbols =_ccba ;_feddb ._cebe =_gaggd ;};func (_fagfe *TextRegion )getUserTable (_ggeg int )(_gd .Tabler ,error ){const _dfbg ="\u0067\u0065\u0074U\u0073\u0065\u0072\u0054\u0061\u0062\u006c\u0065";
var _gaccc int ;for _ ,_ddgd :=range _fagfe .Header .RTSegments {if _ddgd .Type ==53{if _gaccc ==_ggeg {_baga ,_beeg :=_ddgd .GetSegmentData ();if _beeg !=nil {return nil ,_beeg ;};_abfa ,_ffgc :=_baga .(*TableSegment );if !_ffgc {_ba .Log .Debug (_ae .Sprintf ("\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079p\u0065\u00205\u0033\u0020\u002d\u0020\u0061\u006ed\u0020in\u0064\u0065\u0078\u003a\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_ddgd .SegmentNumber ));
return nil ,_eb .Error (_dfbg ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079\u0070e\u0020\u0035\u0033\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u002a\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};return _gd .NewEncodedTable (_abfa );};_gaccc ++;};};return nil ,nil ;};type EndOfStripe struct{_cgc _aa .StreamReader ;_bd int ;};func (_gdgd *PatternDictionary )readIsMMREncoded ()error {_fgcgf ,_ccdb :=_gdgd ._gbeda .ReadBit ();if _ccdb !=nil {return _ccdb ;
};if _fgcgf !=0{_gdgd .IsMMREncoded =true ;};return nil ;};func (_eac *GenericRegion )decodeLine (_cbfd ,_deb ,_afa int )error {const _aec ="\u0064\u0065\u0063\u006f\u0064\u0065\u004c\u0069\u006e\u0065";_dbf :=_eac .Bitmap .GetByteIndex (0,_cbfd );_egddf :=_dbf -_eac .Bitmap .RowStride ;
switch _eac .GBTemplate {case 0:if !_eac .UseExtTemplates {return _eac .decodeTemplate0a (_cbfd ,_deb ,_afa ,_dbf ,_egddf );};return _eac .decodeTemplate0b (_cbfd ,_deb ,_afa ,_dbf ,_egddf );case 1:return _eac .decodeTemplate1 (_cbfd ,_deb ,_afa ,_dbf ,_egddf );
case 2:return _eac .decodeTemplate2 (_cbfd ,_deb ,_afa ,_dbf ,_egddf );case 3:return _eac .decodeTemplate3 (_cbfd ,_deb ,_afa ,_dbf ,_egddf );};return _eb .Errorf (_aec ,"\u0069\u006e\u0076a\u006c\u0069\u0064\u0020G\u0042\u0054\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u003a\u0020\u0025\u0064",_eac .GBTemplate );
};func (_fe *GenericRefinementRegion )Init (header *Header ,r _aa .StreamReader )error {_fe ._dc =header ;_fe ._ce =r ;_fe .RegionInfo =NewRegionSegment (r );return _fe .parseHeader ();};func (_fgbef *TextRegion )decodeCurrentT ()(int64 ,error ){if _fgbef .SbStrips !=1{if _fgbef .IsHuffmanEncoded {_accfg ,_fedde :=_fgbef ._acgad .ReadBits (byte (_fgbef .LogSBStrips ));
return int64 (_accfg ),_fedde ;};_ggfab ,_acfed :=_fgbef ._egeb .DecodeInt (_fgbef ._bedd );if _acfed !=nil {return 0,_acfed ;};return int64 (_ggfab ),nil ;};return 0,nil ;};func (_egdf *TextRegion )GetRegionBitmap ()(*_aad .Bitmap ,error ){if _egdf .RegionBitmap !=nil {return _egdf .RegionBitmap ,nil ;
};if !_egdf .IsHuffmanEncoded {if _fdef :=_egdf .setCodingStatistics ();_fdef !=nil {return nil ,_fdef ;};};if _fddc :=_egdf .createRegionBitmap ();_fddc !=nil {return nil ,_fddc ;};if _cabge :=_egdf .decodeSymbolInstances ();_cabge !=nil {return nil ,_cabge ;
};return _egdf .RegionBitmap ,nil ;};func (_egaag *SymbolDictionary )decodeHeightClassDeltaHeightWithHuffman ()(int64 ,error ){switch _egaag .SdHuffDecodeHeightSelection {case 0:_ggdf ,_deeeg :=_gd .GetStandardTable (4);if _deeeg !=nil {return 0,_deeeg ;
};return _ggdf .Decode (_egaag ._cfb );case 1:_adgd ,_aadc :=_gd .GetStandardTable (5);if _aadc !=nil {return 0,_aadc ;};return _adgd .Decode (_egaag ._cfb );case 3:if _egaag ._egdb ==nil {_fdbd ,_edaga :=_gd .GetStandardTable (0);if _edaga !=nil {return 0,_edaga ;
};_egaag ._egdb =_fdbd ;};return _egaag ._egdb .Decode (_egaag ._cfb );};return 0,nil ;};type SegmentEncoder interface{Encode (_cfcd _aa .BinaryWriter )(_adbd int ,_ccbf error );};func (_bc *GenericRefinementRegion )GetRegionBitmap ()(*_aad .Bitmap ,error ){var _ca error ;
_ba .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _ca !=nil {_ba .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0047\u0065\u0074R\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006dap\u0020\u0066a\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_ca );
}else {_ba .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _bc .RegionBitmap !=nil {return _bc .RegionBitmap ,nil ;};_cc :=0;if _bc .ReferenceBitmap ==nil {_bc .ReferenceBitmap ,_ca =_bc .getGrReference ();if _ca !=nil {return nil ,_ca ;};};if _bc ._eed ==nil {_bc ._eed ,_ca =_gb .New (_bc ._ce );if _ca !=nil {return nil ,_ca ;
};};if _bc ._ac ==nil {_bc ._ac =_gb .NewStats (8192,1);};_bc .RegionBitmap =_aad .New (int (_bc .RegionInfo .BitmapWidth ),int (_bc .RegionInfo .BitmapHeight ));if _bc .TemplateID ==0{if _ca =_bc .updateOverride ();_ca !=nil {return nil ,_ca ;};};_gc :=(_bc .RegionBitmap .Width +7)&-8;
var _fee int ;if _bc .IsTPGROn {_fee =int (-_bc .ReferenceDY )*_bc .ReferenceBitmap .RowStride ;};_cgcd :=_fee +1;for _ggf :=0;_ggf < _bc .RegionBitmap .Height ;_ggf ++{if _bc .IsTPGROn {_ec ,_cgcf :=_bc .decodeSLTP ();if _cgcf !=nil {return nil ,_cgcf ;
};_cc ^=_ec ;};if _cc ==0{_ca =_bc .decodeOptimized (_ggf ,_bc .RegionBitmap .Width ,_bc .RegionBitmap .RowStride ,_bc .ReferenceBitmap .RowStride ,_gc ,_fee ,_cgcd );if _ca !=nil {return nil ,_ca ;};}else {_ca =_bc .decodeTypicalPredictedLine (_ggf ,_bc .RegionBitmap .Width ,_bc .RegionBitmap .RowStride ,_bc .ReferenceBitmap .RowStride ,_gc ,_fee );
if _ca !=nil {return nil ,_ca ;};};};return _bc .RegionBitmap ,nil ;};func (_dafeg *SymbolDictionary )InitEncode (symbols *_aad .Bitmaps ,symbolList []int ,symbolMap map[int ]int ,unborderSymbols bool )error {const _ade ="S\u0079\u006d\u0062\u006f\u006c\u0044i\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002eI\u006e\u0069\u0074E\u006ec\u006f\u0064\u0065";
_dafeg .SdATX =[]int8 {3,-3,2,-2};_dafeg .SdATY =[]int8 {-1,-1,-2,-2};_dafeg ._ddceg =symbols ;_dafeg ._dbcdd =make ([]int ,len (symbolList ));copy (_dafeg ._dbcdd ,symbolList );if len (_dafeg ._dbcdd )!=_dafeg ._ddceg .Size (){return _eb .Error (_ade ,"s\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0061\u006e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u004ci\u0073\u0074\u0020\u006f\u0066\u0020\u0064\u0069\u0066\u0066er\u0065\u006e\u0074 \u0073i\u007a\u0065");
};_dafeg .NumberOfNewSymbols =uint32 (symbols .Size ());_dafeg .NumberOfExportedSymbols =uint32 (symbols .Size ());_dafeg ._efcg =symbolMap ;_dafeg ._gbedac =unborderSymbols ;return nil ;};func (_eacfg *PageInformationSegment )encodeFlags (_adga _aa .BinaryWriter )(_cbae error ){const _cgac ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _cbae =_adga .SkipBits (1);_cbae !=nil {return _eb .Wrap (_cbae ,_cgac ,"\u0072\u0065\u0073e\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074");};var _dcge int ;if _eacfg .CombinationOperatorOverrideAllowed (){_dcge =1;};if _cbae =_adga .WriteBit (_dcge );
_cbae !=nil {return _eb .Wrap (_cbae ,_cgac ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0064\u0065\u006e");};_dcge =0;if _eacfg ._adac {_dcge =1;
};if _cbae =_adga .WriteBit (_dcge );_cbae !=nil {return _eb .Wrap (_cbae ,_cgac ,"\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0061\u0075\u0078i\u006ci\u0061r\u0079\u0020\u0062\u0075\u0066\u0066\u0065r");};if _cbae =_adga .WriteBit ((int (_eacfg ._caca )>>1)&0x01);
_cbae !=nil {return _eb .Wrap (_cbae ,_cgac ,"\u0063\u006f\u006d\u0062\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006f\u0070\u0065\u0072\u0061\u0074o\u0072\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0062\u0069\u0074");};if _cbae =_adga .WriteBit (int (_eacfg ._caca )&0x01);
_cbae !=nil {return _eb .Wrap (_cbae ,_cgac ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0062\u0069\u0074");};_dcge =int (_eacfg .DefaultPixelValue );
if _cbae =_adga .WriteBit (_dcge );_cbae !=nil {return _eb .Wrap (_cbae ,_cgac ,"\u0064e\u0066\u0061\u0075\u006c\u0074\u0020\u0070\u0061\u0067\u0065\u0020p\u0069\u0078\u0065\u006c\u0020\u0076\u0061\u006c\u0075\u0065");};_dcge =0;if _eacfg ._dbfb {_dcge =1;
};if _cbae =_adga .WriteBit (_dcge );_cbae !=nil {return _eb .Wrap (_cbae ,_cgac ,"\u0063\u006f\u006e\u0074ai\u006e\u0073\u0020\u0072\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074");};_dcge =0;if _eacfg .IsLossless {_dcge =1;};if _cbae =_adga .WriteBit (_dcge );
_cbae !=nil {return _eb .Wrap (_cbae ,_cgac ,"p\u0061\u0067\u0065\u0020\u0069\u0073 \u0065\u0076\u0065\u006e\u0074\u0075\u0061\u006c\u006cy\u0020\u006c\u006fs\u0073l\u0065\u0073\u0073");};return nil ;};func (_fbcf *TextRegion )decodeSymbolInstances ()error {_gcff ,_efeae :=_fbcf .decodeStripT ();
if _efeae !=nil {return _efeae ;};var (_defge int64 ;_ddbd uint32 ;);for _ddbd < _fbcf .NumberOfSymbolInstances {_gfad ,_aecc :=_fbcf .decodeDT ();if _aecc !=nil {return _aecc ;};_gcff +=_gfad ;var _gdbf int64 ;_adde :=true ;_fbcf ._afbe =0;for {if _adde {_gdbf ,_aecc =_fbcf .decodeDfs ();
if _aecc !=nil {return _aecc ;};_defge +=_gdbf ;_fbcf ._afbe =_defge ;_adde =false ;}else {_cbce ,_gbfc :=_fbcf .decodeIds ();if _ed .Is (_gbfc ,_d .ErrOOB ){break ;};if _gbfc !=nil {return _gbfc ;};if _ddbd >=_fbcf .NumberOfSymbolInstances {break ;};_fbcf ._afbe +=_cbce +int64 (_fbcf .SbDsOffset );
};_dgccg ,_bcfeb :=_fbcf .decodeCurrentT ();if _bcfeb !=nil {return _bcfeb ;};_bfdc :=_gcff +_dgccg ;_beafg ,_bcfeb :=_fbcf .decodeID ();if _bcfeb !=nil {return _bcfeb ;};_gfeg ,_bcfeb :=_fbcf .decodeRI ();if _bcfeb !=nil {return _bcfeb ;};_efeac ,_bcfeb :=_fbcf .decodeIb (_gfeg ,_beafg );
if _bcfeb !=nil {return _bcfeb ;};if _bcfeb =_fbcf .blit (_efeac ,_bfdc );_bcfeb !=nil {return _bcfeb ;};_ddbd ++;};};return nil ;};func (_gbf *Header )referenceSize ()uint {switch {case _gbf .SegmentNumber <=255:return 1;case _gbf .SegmentNumber <=65535:return 2;
default:return 4;};};func (_gad *GenericRegion )decodeTemplate0a (_degf ,_afec ,_ccf int ,_dgd ,_gbbe int )(_edgf error ){const _afda ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0061";var (_gfff ,_eabd int ;_fgg ,_aceg int ;
_feeg byte ;_ccc int ;);if _degf >=1{_feeg ,_edgf =_gad .Bitmap .GetByte (_gbbe );if _edgf !=nil {return _eb .Wrap (_edgf ,_afda ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_fgg =int (_feeg );};if _degf >=2{_feeg ,_edgf =_gad .Bitmap .GetByte (_gbbe -_gad .Bitmap .RowStride );
if _edgf !=nil {return _eb .Wrap (_edgf ,_afda ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_aceg =int (_feeg )<<6;};_gfff =(_fgg &0xf0)|(_aceg &0x3800);for _ffb :=0;_ffb < _ccf ;_ffb =_ccc {var (_ada byte ;_fdc int ;);_ccc =_ffb +8;if _eegb :=_afec -_ffb ;
_eegb > 8{_fdc =8;}else {_fdc =_eegb ;};if _degf > 0{_fgg <<=8;if _ccc < _afec {_feeg ,_edgf =_gad .Bitmap .GetByte (_gbbe +1);if _edgf !=nil {return _eb .Wrap (_edgf ,_afda ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_fgg |=int (_feeg );};};
if _degf > 1{_gdc :=_gbbe -_gad .Bitmap .RowStride +1;_aceg <<=8;if _ccc < _afec {_feeg ,_edgf =_gad .Bitmap .GetByte (_gdc );if _edgf !=nil {return _eb .Wrap (_edgf ,_afda ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_aceg |=int (_feeg )<<6;
}else {_aceg |=0;};};for _gfde :=0;_gfde < _fdc ;_gfde ++{_ffae :=uint (7-_gfde );if _gad ._degd {_eabd =_gad .overrideAtTemplate0a (_gfff ,_ffb +_gfde ,_degf ,int (_ada ),_gfde ,int (_ffae ));_gad ._bbd .SetIndex (int32 (_eabd ));}else {_gad ._bbd .SetIndex (int32 (_gfff ));
};var _dbe int ;_dbe ,_edgf =_gad ._fbe .DecodeBit (_gad ._bbd );if _edgf !=nil {return _eb .Wrap (_edgf ,_afda ,"");};_ada |=byte (_dbe )<<_ffae ;_gfff =((_gfff &0x7bf7)<<1)|_dbe |((_fgg >>_ffae )&0x10)|((_aceg >>_ffae )&0x800);};if _bcb :=_gad .Bitmap .SetByte (_dgd ,_ada );
_bcb !=nil {return _eb .Wrap (_bcb ,_afda ,"");};_dgd ++;_gbbe ++;};return nil ;};func (_aggg *Header )writeReferredToCount (_ccgbc _aa .BinaryWriter )(_gggd int ,_deec error ){const _edge ="w\u0072i\u0074\u0065\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0043ou\u006e\u0074";
_aggg .RTSNumbers =make ([]int ,len (_aggg .RTSegments ));for _bgdg ,_aefd :=range _aggg .RTSegments {_aggg .RTSNumbers [_bgdg ]=int (_aefd .SegmentNumber );};if len (_aggg .RTSNumbers )<=4{var _deaf byte ;if len (_aggg .RetainBits )>=1{_deaf =_aggg .RetainBits [0];
};_deaf |=byte (len (_aggg .RTSNumbers ))<<5;if _deec =_ccgbc .WriteByte (_deaf );_deec !=nil {return 0,_eb .Wrap (_deec ,_edge ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return 1,nil ;};_eebf :=uint32 (len (_aggg .RTSNumbers ));
_ffbde :=make ([]byte ,4+_cb .Ceil (len (_aggg .RTSNumbers )+1,8));_eebf |=0x7<<29;_e .BigEndian .PutUint32 (_ffbde ,_eebf );copy (_ffbde [1:],_aggg .RetainBits );_gggd ,_deec =_ccgbc .Write (_ffbde );if _deec !=nil {return 0,_eb .Wrap (_deec ,_edge ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");
};return _gggd ,nil ;};func (_ccda *HalftoneRegion )shiftAndFill (_acbd int )int {_acbd >>=8;if _acbd < 0{_gacg :=int (_a .Log (float64 (_fbge (_acbd )))/_a .Log (2));_facg :=31-_gacg ;for _aedb :=1;_aedb < _facg ;_aedb ++{_acbd |=1<<uint (31-_aedb );};
};return _acbd ;};func (_cgbe *GenericRegion )decodeTemplate2 (_ecd ,_bgaa ,_gdd int ,_ceab ,_ege int )(_gead error ){const _aed ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0032";var (_bfee ,_bce int ;_ecfba ,_bba int ;
_gec byte ;_dec ,_gceb int ;);if _ecd >=1{_gec ,_gead =_cgbe .Bitmap .GetByte (_ege );if _gead !=nil {return _eb .Wrap (_gead ,_aed ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0031");};_ecfba =int (_gec );};if _ecd >=2{_gec ,_gead =_cgbe .Bitmap .GetByte (_ege -_cgbe .Bitmap .RowStride );
if _gead !=nil {return _eb .Wrap (_gead ,_aed ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0032");};_bba =int (_gec )<<4;};_bfee =(_ecfba >>3&0x7c)|(_bba >>3&0x380);for _febb :=0;_febb < _gdd ;_febb =_dec {var (_edeg byte ;
_cedc int ;);_dec =_febb +8;if _gfdg :=_bgaa -_febb ;_gfdg > 8{_cedc =8;}else {_cedc =_gfdg ;};if _ecd > 0{_ecfba <<=8;if _dec < _bgaa {_gec ,_gead =_cgbe .Bitmap .GetByte (_ege +1);if _gead !=nil {return _eb .Wrap (_gead ,_aed ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0030");
};_ecfba |=int (_gec );};};if _ecd > 1{_bba <<=8;if _dec < _bgaa {_gec ,_gead =_cgbe .Bitmap .GetByte (_ege -_cgbe .Bitmap .RowStride +1);if _gead !=nil {return _eb .Wrap (_gead ,_aed ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0031");
};_bba |=int (_gec )<<4;};};for _ffbd :=0;_ffbd < _cedc ;_ffbd ++{_dccf :=uint (10-_ffbd );if _cgbe ._degd {_bce =_cgbe .overrideAtTemplate2 (_bfee ,_febb +_ffbd ,_ecd ,int (_edeg ),_ffbd );_cgbe ._bbd .SetIndex (int32 (_bce ));}else {_cgbe ._bbd .SetIndex (int32 (_bfee ));
};_gceb ,_gead =_cgbe ._fbe .DecodeBit (_cgbe ._bbd );if _gead !=nil {return _eb .Wrap (_gead ,_aed ,"");};_edeg |=byte (_gceb <<uint (7-_ffbd ));_bfee =((_bfee &0x1bd)<<1)|_gceb |((_ecfba >>_dccf )&0x4)|((_bba >>_dccf )&0x80);};if _gda :=_cgbe .Bitmap .SetByte (_ceab ,_edeg );
_gda !=nil {return _eb .Wrap (_gda ,_aed ,"");};_ceab ++;_ege ++;};return nil ;};func (_dbcd *PatternDictionary )parseHeader ()error {_ba .Log .Trace ("\u005b\u0050\u0041\u0054\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054I\u004f\u004e\u0041\u0052\u0059\u005d[\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d\u0020b\u0065\u0067\u0069\u006e");
defer func (){_ba .Log .Trace ("\u005b\u0050\u0041T\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u005b\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
}();_ ,_fcce :=_dbcd ._gbeda .ReadBits (5);if _fcce !=nil {return _fcce ;};if _fcce =_dbcd .readTemplate ();_fcce !=nil {return _fcce ;};if _fcce =_dbcd .readIsMMREncoded ();_fcce !=nil {return _fcce ;};if _fcce =_dbcd .readPatternWidthAndHeight ();_fcce !=nil {return _fcce ;
};if _fcce =_dbcd .readGrayMax ();_fcce !=nil {return _fcce ;};if _fcce =_dbcd .computeSegmentDataStructure ();_fcce !=nil {return _fcce ;};return _dbcd .checkInput ();};func (_bcf *SymbolDictionary )encodeATFlags (_daea _aa .BinaryWriter )(_cfcdd int ,_fagg error ){const _bbaf ="\u0065\u006e\u0063\u006f\u0064\u0065\u0041\u0054\u0046\u006c\u0061\u0067\u0073";
if _bcf .IsHuffmanEncoded ||_bcf .SdTemplate !=0{return 0,nil ;};_agdg :=4;if _bcf .SdTemplate !=0{_agdg =1;};for _ebba :=0;_ebba < _agdg ;_ebba ++{if _fagg =_daea .WriteByte (byte (_bcf .SdATX [_ebba ]));_fagg !=nil {return _cfcdd ,_eb .Wrapf (_fagg ,_bbaf ,"\u0053d\u0041\u0054\u0058\u005b\u0025\u0064]",_ebba );
};_cfcdd ++;if _fagg =_daea .WriteByte (byte (_bcf .SdATY [_ebba ]));_fagg !=nil {return _cfcdd ,_eb .Wrapf (_fagg ,_bbaf ,"\u0053d\u0041\u0054\u0059\u005b\u0025\u0064]",_ebba );};_cfcdd ++;};return _cfcdd ,nil ;};func (_acd *GenericRefinementRegion )decodeTypicalPredictedLineTemplate0 (_cec ,_gca ,_db ,_cegb ,_ced ,_adb ,_cbgc ,_cabd ,_cgb int )error {var (_cgg ,_ccg ,_gf ,_feg ,_bbf ,_be int ;
_bgc byte ;_ab error ;);if _cec > 0{_bgc ,_ab =_acd .RegionBitmap .GetByte (_cbgc -_db );if _ab !=nil {return _ab ;};_gf =int (_bgc );};if _cabd > 0&&_cabd <=_acd .ReferenceBitmap .Height {_bgc ,_ab =_acd .ReferenceBitmap .GetByte (_cgb -_cegb +_adb );
if _ab !=nil {return _ab ;};_feg =int (_bgc )<<4;};if _cabd >=0&&_cabd < _acd .ReferenceBitmap .Height {_bgc ,_ab =_acd .ReferenceBitmap .GetByte (_cgb +_adb );if _ab !=nil {return _ab ;};_bbf =int (_bgc )<<1;};if _cabd > -2&&_cabd < _acd .ReferenceBitmap .Height -1{_bgc ,_ab =_acd .ReferenceBitmap .GetByte (_cgb +_cegb +_adb );
if _ab !=nil {return _ab ;};_be =int (_bgc );};_cgg =((_gf >>5)&0x6)|((_be >>2)&0x30)|(_bbf &0x180)|(_feg &0xc00);var _gfc int ;for _dcf :=0;_dcf < _ced ;_dcf =_gfc {var _gga int ;_gfc =_dcf +8;var _gaf int ;if _gaf =_gca -_dcf ;_gaf > 8{_gaf =8;};_efg :=_gfc < _gca ;
_dd :=_gfc < _acd .ReferenceBitmap .Width ;_bbg :=_adb +1;if _cec > 0{_bgc =0;if _efg {_bgc ,_ab =_acd .RegionBitmap .GetByte (_cbgc -_db +1);if _ab !=nil {return _ab ;};};_gf =(_gf <<8)|int (_bgc );};if _cabd > 0&&_cabd <=_acd .ReferenceBitmap .Height {var _gbc int ;
if _dd {_bgc ,_ab =_acd .ReferenceBitmap .GetByte (_cgb -_cegb +_bbg );if _ab !=nil {return _ab ;};_gbc =int (_bgc )<<4;};_feg =(_feg <<8)|_gbc ;};if _cabd >=0&&_cabd < _acd .ReferenceBitmap .Height {var _ffa int ;if _dd {_bgc ,_ab =_acd .ReferenceBitmap .GetByte (_cgb +_bbg );
if _ab !=nil {return _ab ;};_ffa =int (_bgc )<<1;};_bbf =(_bbf <<8)|_ffa ;};if _cabd > -2&&_cabd < (_acd .ReferenceBitmap .Height -1){_bgc =0;if _dd {_bgc ,_ab =_acd .ReferenceBitmap .GetByte (_cgb +_cegb +_bbg );if _ab !=nil {return _ab ;};};_be =(_be <<8)|int (_bgc );
};for _ddg :=0;_ddg < _gaf ;_ddg ++{var _ggae int ;_cf :=false ;_afe :=(_cgg >>4)&0x1ff;if _afe ==0x1ff{_cf =true ;_ggae =1;}else if _afe ==0x00{_cf =true ;};if !_cf {if _acd ._cbf {_ccg =_acd .overrideAtTemplate0 (_cgg ,_dcf +_ddg ,_cec ,_gga ,_ddg );
_acd ._ac .SetIndex (int32 (_ccg ));}else {_acd ._ac .SetIndex (int32 (_cgg ));};_ggae ,_ab =_acd ._eed .DecodeBit (_acd ._ac );if _ab !=nil {return _ab ;};};_afd :=uint (7-_ddg );_gga |=_ggae <<_afd ;_cgg =((_cgg &0xdb6)<<1)|_ggae |(_gf >>_afd +5)&0x002|((_be >>_afd +2)&0x010)|((_bbf >>_afd )&0x080)|((_feg >>_afd )&0x400);
};_ab =_acd .RegionBitmap .SetByte (_cbgc ,byte (_gga ));if _ab !=nil {return _ab ;};_cbgc ++;_cgb ++;};return nil ;};type RegionSegment struct{_eced _aa .StreamReader ;BitmapWidth uint32 ;BitmapHeight uint32 ;XLocation uint32 ;YLocation uint32 ;CombinaionOperator _aad .CombinationOperator ;
};func (_gcc *template0 )form (_bee ,_bad ,_becf ,_dbdg ,_agcb int16 )int16 {return (_bee <<10)|(_bad <<7)|(_becf <<4)|(_dbdg <<1)|_agcb ;};func (_abcd *TextRegion )decodeRdx ()(int64 ,error ){const _gagc ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064x";
if _abcd .IsHuffmanEncoded {if _abcd .SbHuffRDX ==3{if _abcd ._gdbd ==nil {var (_dfef int ;_eeef error ;);if _abcd .SbHuffFS ==3{_dfef ++;};if _abcd .SbHuffDS ==3{_dfef ++;};if _abcd .SbHuffDT ==3{_dfef ++;};if _abcd .SbHuffRDWidth ==3{_dfef ++;};if _abcd .SbHuffRDHeight ==3{_dfef ++;
};_abcd ._gdbd ,_eeef =_abcd .getUserTable (_dfef );if _eeef !=nil {return 0,_eb .Wrap (_eeef ,_gagc ,"");};};return _abcd ._gdbd .Decode (_abcd ._acgad );};_cfge ,_deaa :=_gd .GetStandardTable (14+int (_abcd .SbHuffRDX ));if _deaa !=nil {return 0,_eb .Wrap (_deaa ,_gagc ,"");
};return _cfge .Decode (_abcd ._acgad );};_efcgc ,_ccgbd :=_abcd ._egeb .DecodeInt (_abcd ._affb );if _ccgbd !=nil {return 0,_eb .Wrap (_ccgbd ,_gagc ,"");};return int64 (_efcgc ),nil ;};func (_aaf *GenericRegion )decodeTemplate3 (_faga ,_ega ,_ddc int ,_aede ,_dcdf int )(_edeb error ){const _egab ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0033";
var (_eega ,_dgg int ;_fce int ;_geec byte ;_gdbc ,_geae int ;);if _faga >=1{_geec ,_edeb =_aaf .Bitmap .GetByte (_dcdf );if _edeb !=nil {return _eb .Wrap (_edeb ,_egab ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_fce =int (_geec );};_eega =(_fce >>1)&0x70;
for _ffag :=0;_ffag < _ddc ;_ffag =_gdbc {var (_ffc byte ;_fbg int ;);_gdbc =_ffag +8;if _add :=_ega -_ffag ;_add > 8{_fbg =8;}else {_fbg =_add ;};if _faga >=1{_fce <<=8;if _gdbc < _ega {_geec ,_edeb =_aaf .Bitmap .GetByte (_dcdf +1);if _edeb !=nil {return _eb .Wrap (_edeb ,_egab ,"\u0069\u006e\u006e\u0065\u0072\u0020\u002d\u0020\u006c\u0069\u006e\u0065 \u003e\u003d\u0020\u0031");
};_fce |=int (_geec );};};for _bffc :=0;_bffc < _fbg ;_bffc ++{if _aaf ._degd {_dgg =_aaf .overrideAtTemplate3 (_eega ,_ffag +_bffc ,_faga ,int (_ffc ),_bffc );_aaf ._bbd .SetIndex (int32 (_dgg ));}else {_aaf ._bbd .SetIndex (int32 (_eega ));};_geae ,_edeb =_aaf ._fbe .DecodeBit (_aaf ._bbd );
if _edeb !=nil {return _eb .Wrap (_edeb ,_egab ,"");};_ffc |=byte (_geae )<<byte (7-_bffc );_eega =((_eega &0x1f7)<<1)|_geae |((_fce >>uint (8-_bffc ))&0x010);};if _bbe :=_aaf .Bitmap .SetByte (_aede ,_ffc );_bbe !=nil {return _eb .Wrap (_bbe ,_egab ,"");
};_aede ++;_dcdf ++;};return nil ;};func (_abcb *SymbolDictionary )encodeRefinementATFlags (_bagg _aa .BinaryWriter )(_edfe int ,_egcgb error ){const _efea ="\u0065\u006e\u0063od\u0065\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0041\u0054\u0046\u006c\u0061\u0067\u0073";
if !_abcb .UseRefinementAggregation ||_abcb .SdrTemplate !=0{return 0,nil ;};for _efcd :=0;_efcd < 2;_efcd ++{if _egcgb =_bagg .WriteByte (byte (_abcb .SdrATX [_efcd ]));_egcgb !=nil {return _edfe ,_eb .Wrapf (_egcgb ,_efea ,"\u0053\u0064\u0072\u0041\u0054\u0058\u005b\u0025\u0064\u005d",_efcd );
};_edfe ++;if _egcgb =_bagg .WriteByte (byte (_abcb .SdrATY [_efcd ]));_egcgb !=nil {return _edfe ,_eb .Wrapf (_egcgb ,_efea ,"\u0053\u0064\u0072\u0041\u0054\u0059\u005b\u0025\u0064\u005d",_efcd );};_edfe ++;};return _edfe ,nil ;};type Documenter interface{GetPage (int )(Pager ,error );
GetGlobalSegment (int )(*Header ,error );};func (_acec *TextRegion )initSymbols ()error {const _fdecg ="i\u006e\u0069\u0074\u0053\u0079\u006d\u0062\u006f\u006c\u0073";for _ ,_fgbca :=range _acec .Header .RTSegments {if _fgbca ==nil {return _eb .Error (_fdecg ,"\u006e\u0069\u006c\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020pr\u006f\u0076\u0069\u0064\u0065\u0064 \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0074\u0065\u0078\u0074\u0020\u0072\u0065g\u0069\u006f\u006e\u0020\u0053\u0079\u006d\u0062o\u006c\u0073");
};if _fgbca .Type ==0{_ffde ,_eaggb :=_fgbca .GetSegmentData ();if _eaggb !=nil {return _eb .Wrap (_eaggb ,_fdecg ,"");};_dgcgb ,_befe :=_ffde .(*SymbolDictionary );if !_befe {return _eb .Error (_fdecg ,"\u0072e\u0066\u0065r\u0072\u0065\u0064 \u0054\u006f\u0020\u0053\u0065\u0067\u006de\u006e\u0074\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_dgcgb ._agbe =_acec ._fabg ;_aaeg ,_eaggb :=_dgcgb .GetDictionary ();if _eaggb !=nil {return _eb .Wrap (_eaggb ,_fdecg ,"");};_acec .Symbols =append (_acec .Symbols ,_aaeg ...);};};_acec .NumberOfSymbols =uint32 (len (_acec .Symbols ));return nil ;};
func (_adcd *SymbolDictionary )decodeDifferenceWidth ()(int64 ,error ){if _adcd .IsHuffmanEncoded {switch _adcd .SdHuffDecodeWidthSelection {case 0:_bfef ,_aggc :=_gd .GetStandardTable (2);if _aggc !=nil {return 0,_aggc ;};return _bfef .Decode (_adcd ._cfb );
case 1:_aabb ,_aabee :=_gd .GetStandardTable (3);if _aabee !=nil {return 0,_aabee ;};return _aabb .Decode (_adcd ._cfb );case 3:if _adcd ._abg ==nil {var _acca int ;if _adcd .SdHuffDecodeHeightSelection ==3{_acca ++;};_gfcd ,_cafc :=_adcd .getUserTable (_acca );
if _cafc !=nil {return 0,_cafc ;};_adcd ._abg =_gfcd ;};return _adcd ._abg .Decode (_adcd ._cfb );};}else {_eefa ,_bcdbd :=_adcd ._caff .DecodeInt (_adcd ._fadg );if _bcdbd !=nil {return 0,_bcdbd ;};return int64 (_eefa ),nil ;};return 0,nil ;};func (_cddg *GenericRefinementRegion )updateOverride ()error {if _cddg .GrAtX ==nil ||_cddg .GrAtY ==nil {return _fd .New ("\u0041\u0054\u0020\u0070\u0069\u0078\u0065\u006c\u0073\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");
};if len (_cddg .GrAtX )!=len (_cddg .GrAtY ){return _fd .New ("A\u0054\u0020\u0070\u0069xe\u006c \u0069\u006e\u0063\u006f\u006es\u0069\u0073\u0074\u0065\u006e\u0074");};_cddg ._ef =make ([]bool ,len (_cddg .GrAtX ));switch _cddg .TemplateID {case 0:if _cddg .GrAtX [0]!=-1&&_cddg .GrAtY [0]!=-1{_cddg ._ef [0]=true ;
_cddg ._cbf =true ;};if _cddg .GrAtX [1]!=-1&&_cddg .GrAtY [1]!=-1{_cddg ._ef [1]=true ;_cddg ._cbf =true ;};case 1:_cddg ._cbf =false ;};return nil ;};func (_eddbe *SymbolDictionary )decodeHeightClassCollectiveBitmap (_afef int64 ,_dcbfb ,_beeb uint32 )(*_aad .Bitmap ,error ){if _afef ==0{_dffg :=_aad .New (int (_beeb ),int (_dcbfb ));
var (_egde byte ;_gdeg error ;);for _edagg :=0;_edagg < len (_dffg .Data );_edagg ++{_egde ,_gdeg =_eddbe ._cfb .ReadByte ();if _gdeg !=nil {return nil ,_gdeg ;};if _gdeg =_dffg .SetByte (_edagg ,_egde );_gdeg !=nil {return nil ,_gdeg ;};};return _dffg ,nil ;
};if _eddbe ._egec ==nil {_eddbe ._egec =NewGenericRegion (_eddbe ._cfb );};_eddbe ._egec .setParameters (true ,_eddbe ._cfb .StreamPosition (),_afef ,_dcbfb ,_beeb );_afee ,_afgb :=_eddbe ._egec .GetRegionBitmap ();if _afgb !=nil {return nil ,_afgb ;};
return _afee ,nil ;};func (_cff *GenericRegion )writeGBAtPixels (_cabg _aa .BinaryWriter )(_fad int ,_becb error ){const _dega ="\u0077r\u0069t\u0065\u0047\u0042\u0041\u0074\u0050\u0069\u0078\u0065\u006c\u0073";if _cff .UseMMR {return 0,nil ;};_bfbf :=1;
if _cff .GBTemplate ==0{_bfbf =4;}else if _cff .UseExtTemplates {_bfbf =12;};if len (_cff .GBAtX )!=_bfbf {return 0,_eb .Errorf (_dega ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0058\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};if len (_cff .GBAtY )!=_bfbf {return 0,_eb .Errorf (_dega ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0059\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};for _decb :=0;_decb < _bfbf ;_decb ++{if _becb =_cabg .WriteByte (byte (_cff .GBAtX [_decb ]));_becb !=nil {return _fad ,_eb .Wrap (_becb ,_dega ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0058");};_fad ++;if _becb =_cabg .WriteByte (byte (_cff .GBAtY [_decb ]));
_becb !=nil {return _fad ,_eb .Wrap (_becb ,_dega ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0059");};_fad ++;};return _fad ,nil ;};func (_ggcg *SymbolDictionary )setRetainedCodingContexts (_cbfc *SymbolDictionary ){_ggcg ._caff =_cbfc ._caff ;
_ggcg .IsHuffmanEncoded =_cbfc .IsHuffmanEncoded ;_ggcg .UseRefinementAggregation =_cbfc .UseRefinementAggregation ;_ggcg .SdTemplate =_cbfc .SdTemplate ;_ggcg .SdrTemplate =_cbfc .SdrTemplate ;_ggcg .SdATX =_cbfc .SdATX ;_ggcg .SdATY =_cbfc .SdATY ;_ggcg .SdrATX =_cbfc .SdrATX ;
_ggcg .SdrATY =_cbfc .SdrATY ;_ggcg ._gfffd =_cbfc ._gfffd ;};func (_fab *HalftoneRegion )GetPatterns ()([]*_aad .Bitmap ,error ){var (_faff []*_aad .Bitmap ;_cecd error ;);for _ ,_beda :=range _fab ._ddeb .RTSegments {var _afc Segmenter ;_afc ,_cecd =_beda .GetSegmentData ();
if _cecd !=nil {_ba .Log .Debug ("\u0047e\u0074\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061 \u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025v",_cecd );return nil ,_cecd ;};_acdc ,_fac :=_afc .(*PatternDictionary );if !_fac {_cecd =_ae .Errorf ("\u0072e\u006c\u0061t\u0065\u0064\u0020\u0073e\u0067\u006d\u0065n\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0070at\u0074\u0065\u0072n\u0020\u0064i\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u003a \u0025\u0054",_afc );
return nil ,_cecd ;};var _ddbc []*_aad .Bitmap ;_ddbc ,_cecd =_acdc .GetDictionary ();if _cecd !=nil {_ba .Log .Debug ("\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_cecd );
return nil ,_cecd ;};_faff =append (_faff ,_ddbc ...);};return _faff ,nil ;};func (_bbcg *SymbolDictionary )String ()string {_eeeb :=&_g .Builder {};_eeeb .WriteString ("\n\u005b\u0053\u0059\u004dBO\u004c-\u0044\u0049\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u000a");
_eeeb .WriteString (_ae .Sprintf ("\u0009-\u0020S\u0064\u0072\u0054\u0065\u006dp\u006c\u0061t\u0065\u0020\u0025\u0076\u000a",_bbcg .SdrTemplate ));_eeeb .WriteString (_ae .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0025\u0076\u000a",_bbcg .SdTemplate ));
_eeeb .WriteString (_ae .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006eg\u0043\u006f\u006e\u0074\u0065\u0078\u0074R\u0065\u0074\u0061\u0069\u006e\u0065\u0064\u0020\u0025\u0076\u000a",_bbcg ._agag ));_eeeb .WriteString (_ae .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074\u0065\u0078\u0074\u0055\u0073\u0065\u0064 \u0025\u0076\u000a",_bbcg ._ddec ));
_eeeb .WriteString (_ae .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_bbcg .SdHuffAggInstanceSelection ));
_eeeb .WriteString (_ae .Sprintf ("\u0009\u002d\u0020\u0053d\u0048\u0075\u0066\u0066\u0042\u004d\u0053\u0069\u007a\u0065S\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020%\u0076\u000a",_bbcg .SdHuffBMSizeSelection ));_eeeb .WriteString (_ae .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_bbcg .SdHuffDecodeWidthSelection ));
_eeeb .WriteString (_ae .Sprintf ("\u0009\u002d\u0020Sd\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064e\u0048e\u0069g\u0068t\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_bbcg .SdHuffDecodeHeightSelection ));_eeeb .WriteString (_ae .Sprintf ("\u0009\u002d\u0020U\u0073\u0065\u0052\u0065f\u0069\u006e\u0065\u006d\u0065\u006e\u0074A\u0067\u0067\u0072\u0065\u0067\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_bbcg .UseRefinementAggregation ));
_eeeb .WriteString (_ae .Sprintf ("\u0009\u002d\u0020is\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045\u006e\u0063\u006f\u0064\u0065\u0064\u0020\u0025\u0076\u000a",_bbcg .IsHuffmanEncoded ));_eeeb .WriteString (_ae .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_bbcg .SdATX ));
_eeeb .WriteString (_ae .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_bbcg .SdATY ));_eeeb .WriteString (_ae .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_bbcg .SdrATX ));
_eeeb .WriteString (_ae .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_bbcg .SdrATY ));_eeeb .WriteString (_ae .Sprintf ("\u0009\u002d\u0020\u004e\u0075\u006d\u0062\u0065\u0072\u004ff\u0045\u0078\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_bbcg .NumberOfExportedSymbols ));
_eeeb .WriteString (_ae .Sprintf ("\u0009-\u0020\u004e\u0075\u006db\u0065\u0072\u004f\u0066\u004ee\u0077S\u0079m\u0062\u006f\u006c\u0073\u0020\u0025\u0076\n",_bbcg .NumberOfNewSymbols ));_eeeb .WriteString (_ae .Sprintf ("\u0009\u002d\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u004ff\u0049\u006d\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_bbcg ._aaab ));
_eeeb .WriteString (_ae .Sprintf ("\u0009\u002d \u006e\u0075\u006d\u0062\u0065\u0072\u004f\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0064\u0053\u0079\u006d\u0062\u006f\u006c\u0073 %\u0076\u000a",_bbcg ._gdcd ));return _eeeb .String ();};func (_feegg *SymbolDictionary )setRefinementAtPixels ()error {if !_feegg .UseRefinementAggregation ||_feegg .SdrTemplate !=0{return nil ;
};if _adbacb :=_feegg .readRefinementAtPixels (2);_adbacb !=nil {return _adbacb ;};return nil ;};func (_fbcc *TextRegion )checkInput ()error {const _bgfa ="\u0063\u0068\u0065\u0063\u006b\u0049\u006e\u0070\u0075\u0074";if !_fbcc .UseRefinement {if _fbcc .SbrTemplate !=0{_ba .Log .Debug ("\u0053\u0062\u0072Te\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");
_fbcc .SbrTemplate =0;};};if _fbcc .SbHuffFS ==2||_fbcc .SbHuffRDWidth ==2||_fbcc .SbHuffRDHeight ==2||_fbcc .SbHuffRDX ==2||_fbcc .SbHuffRDY ==2{return _eb .Error (_bgfa ,"h\u0075\u0066\u0066\u006d\u0061\u006e \u0066\u006c\u0061\u0067\u0020\u0076a\u006c\u0075\u0065\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074e\u0064");
};if !_fbcc .UseRefinement {if _fbcc .SbHuffRSize !=0{_ba .Log .Debug ("\u0053\u0062\u0048uf\u0066\u0052\u0053\u0069\u007a\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_fbcc .SbHuffRSize =0;};if _fbcc .SbHuffRDY !=0{_ba .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044Y\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");
_fbcc .SbHuffRDY =0;};if _fbcc .SbHuffRDX !=0{_ba .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044X\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_fbcc .SbHuffRDX =0;};if _fbcc .SbHuffRDWidth !=0{_ba .Log .Debug ("\u0053b\u0048\u0075\u0066\u0066R\u0044\u0057\u0069\u0064\u0074h\u0020s\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u00200");
_fbcc .SbHuffRDWidth =0;};if _fbcc .SbHuffRDHeight !=0{_ba .Log .Debug ("\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069g\u0068\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0030");_fbcc .SbHuffRDHeight =0;};};return nil ;
};func (_cafcd *TextRegion )decodeRI ()(int64 ,error ){if !_cafcd .UseRefinement {return 0,nil ;};if _cafcd .IsHuffmanEncoded {_acag ,_cega :=_cafcd ._acgad .ReadBit ();return int64 (_acag ),_cega ;};_beeba ,_fegf :=_cafcd ._egeb .DecodeInt (_cafcd ._aaba );
return int64 (_beeba ),_fegf ;};func (_cdg *PageInformationSegment )readRequiresAuxiliaryBuffer ()error {_gabc ,_fddd :=_cdg ._cgbc .ReadBit ();if _fddd !=nil {return _fddd ;};if _gabc ==1{_cdg ._adac =true ;};return nil ;};func (_ggefe *PageInformationSegment )readIsStriped ()error {_bef ,_befa :=_ggefe ._cgbc .ReadBit ();
if _befa !=nil {return _befa ;};if _bef ==1{_ggefe .IsStripe =true ;};return nil ;};func (_gbbg *Header )readHeaderFlags ()error {const _dbbad ="\u0072e\u0061d\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006c\u0061\u0067\u0073";_cebb ,_gabd :=_gbbg .Reader .ReadBit ();
if _gabd !=nil {return _eb .Wrap (_gabd ,_dbbad ,"r\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067");};if _cebb !=0{_gbbg .RetainFlag =true ;};_cebb ,_gabd =_gbbg .Reader .ReadBit ();if _gabd !=nil {return _eb .Wrap (_gabd ,_dbbad ,"\u0070\u0061g\u0065\u0020\u0061s\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e");
};if _cebb !=0{_gbbg .PageAssociationFieldSize =true ;};_gdfg ,_gabd :=_gbbg .Reader .ReadBits (6);if _gabd !=nil {return _eb .Wrap (_gabd ,_dbbad ,"\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065");};_gbbg .Type =Type (int (_gdfg ));
return nil ;};type templater interface{form (_cedb ,_dcc ,_eeg ,_gce ,_ccde int16 )int16 ;setIndex (_aac *_gb .DecoderStats );};type PageInformationSegment struct{_cgbc _aa .StreamReader ;PageBMHeight int ;PageBMWidth int ;ResolutionX int ;ResolutionY int ;
_adbdg bool ;_caca _aad .CombinationOperator ;_adac bool ;DefaultPixelValue uint8 ;_dbfb bool ;IsLossless bool ;IsStripe bool ;MaxStripeSize uint16 ;};func (_dccfd *TextRegion )symbolIDCodeLengths ()error {var (_acbe []*_gd .Code ;_dffd uint64 ;_dabg _gd .Tabler ;
_defbf error ;);for _fagcc :=0;_fagcc < 35;_fagcc ++{_dffd ,_defbf =_dccfd ._acgad .ReadBits (4);if _defbf !=nil {return _defbf ;};_cfca :=int (_dffd &0xf);if _cfca > 0{_acbe =append (_acbe ,_gd .NewCode (int32 (_cfca ),0,int32 (_fagcc ),false ));};};_dabg ,_defbf =_gd .NewFixedSizeTable (_acbe );
if _defbf !=nil {return _defbf ;};var (_bfefd int64 ;_gfefa uint32 ;_dceb []*_gd .Code ;_aefa int64 ;);for _gfefa < _dccfd .NumberOfSymbols {_aefa ,_defbf =_dabg .Decode (_dccfd ._acgad );if _defbf !=nil {return _defbf ;};if _aefa < 32{if _aefa > 0{_dceb =append (_dceb ,_gd .NewCode (int32 (_aefa ),0,int32 (_gfefa ),false ));
};_bfefd =_aefa ;_gfefa ++;}else {var _ccce ,_dfdf int64 ;switch _aefa {case 32:_dffd ,_defbf =_dccfd ._acgad .ReadBits (2);if _defbf !=nil {return _defbf ;};_ccce =3+int64 (_dffd );if _gfefa > 0{_dfdf =_bfefd ;};case 33:_dffd ,_defbf =_dccfd ._acgad .ReadBits (3);
if _defbf !=nil {return _defbf ;};_ccce =3+int64 (_dffd );case 34:_dffd ,_defbf =_dccfd ._acgad .ReadBits (7);if _defbf !=nil {return _defbf ;};_ccce =11+int64 (_dffd );};for _bcaf :=0;_bcaf < int (_ccce );_bcaf ++{if _dfdf > 0{_dceb =append (_dceb ,_gd .NewCode (int32 (_dfdf ),0,int32 (_gfefa ),false ));
};_gfefa ++;};};};_dccfd ._acgad .Align ();_dccfd ._fggg ,_defbf =_gd .NewFixedSizeTable (_dceb );return _defbf ;};type Header struct{SegmentNumber uint32 ;Type Type ;RetainFlag bool ;PageAssociation int ;PageAssociationFieldSize bool ;RTSegments []*Header ;
HeaderLength int64 ;SegmentDataLength uint64 ;SegmentDataStartOffset uint64 ;Reader _aa .StreamReader ;SegmentData Segmenter ;RTSNumbers []int ;RetainBits []uint8 ;};func (_fcgeb *PageInformationSegment )encodeStripingInformation (_ecgc _aa .BinaryWriter )(_fggb int ,_eadb error ){const _caac ="\u0065n\u0063\u006f\u0064\u0065S\u0074\u0072\u0069\u0070\u0069n\u0067I\u006ef\u006f\u0072\u006d\u0061\u0074\u0069\u006fn";
if !_fcgeb .IsStripe {if _fggb ,_eadb =_ecgc .Write ([]byte {0x00,0x00});_eadb !=nil {return 0,_eb .Wrap (_eadb ,_caac ,"n\u006f\u0020\u0073\u0074\u0072\u0069\u0070\u0069\u006e\u0067");};return _fggb ,nil ;};_bfcf :=make ([]byte ,2);_e .BigEndian .PutUint16 (_bfcf ,_fcgeb .MaxStripeSize |1<<15);
if _fggb ,_eadb =_ecgc .Write (_bfcf );_eadb !=nil {return 0,_eb .Wrapf (_eadb ,_caac ,"\u0073\u0074\u0072i\u0070\u0069\u006e\u0067\u003a\u0020\u0025\u0064",_fcgeb .MaxStripeSize );};return _fggb ,nil ;};func (_cgdd *TextRegion )decodeRdy ()(int64 ,error ){const _gcffc ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064y";
if _cgdd .IsHuffmanEncoded {if _cgdd .SbHuffRDY ==3{if _cgdd ._fgge ==nil {var (_dbfg int ;_dcdg error ;);if _cgdd .SbHuffFS ==3{_dbfg ++;};if _cgdd .SbHuffDS ==3{_dbfg ++;};if _cgdd .SbHuffDT ==3{_dbfg ++;};if _cgdd .SbHuffRDWidth ==3{_dbfg ++;};if _cgdd .SbHuffRDHeight ==3{_dbfg ++;
};if _cgdd .SbHuffRDX ==3{_dbfg ++;};_cgdd ._fgge ,_dcdg =_cgdd .getUserTable (_dbfg );if _dcdg !=nil {return 0,_eb .Wrap (_dcdg ,_gcffc ,"");};};return _cgdd ._fgge .Decode (_cgdd ._acgad );};_fedb ,_dfcga :=_gd .GetStandardTable (14+int (_cgdd .SbHuffRDY ));
if _dfcga !=nil {return 0,_dfcga ;};return _fedb .Decode (_cgdd ._acgad );};_fcgc ,_defb :=_cgdd ._egeb .DecodeInt (_cgdd ._aagf );if _defb !=nil {return 0,_eb .Wrap (_defb ,_gcffc ,"");};return int64 (_fcgc ),nil ;};type TableSegment struct{_acaaa _aa .StreamReader ;
_efdca int32 ;_cbfdd int32 ;_cbfe int32 ;_fedc int32 ;_afde int32 ;};func (_eddbb *Header )readSegmentDataLength (_bbce _aa .StreamReader )(_bbfd error ){_eddbb .SegmentDataLength ,_bbfd =_bbce .ReadBits (32);if _bbfd !=nil {return _bbfd ;};_eddbb .SegmentDataLength &=_a .MaxInt32 ;
return nil ;};func (_cgf *SymbolDictionary )setSymbolsArray ()error {if _cgf ._ebg ==nil {if _bgag :=_cgf .retrieveImportSymbols ();_bgag !=nil {return _bgag ;};};if _cgf ._bbge ==nil {_cgf ._bbge =append (_cgf ._bbge ,_cgf ._ebg ...);};return nil ;};func (_cded *GenericRegion )Encode (w _aa .BinaryWriter )(_bcc int ,_fgc error ){const _ebb ="G\u0065n\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069o\u006e\u002e\u0045\u006eco\u0064\u0065";
if _cded .Bitmap ==nil {return 0,_eb .Error (_ebb ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};_geed ,_fgc :=_cded .RegionSegment .Encode (w );if _fgc !=nil {return 0,_eb .Wrap (_fgc ,_ebb ,"\u0052\u0065\u0067\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};_bcc +=_geed ;if _fgc =w .SkipBits (4);_fgc !=nil {return _bcc ,_eb .Wrap (_fgc ,_ebb ,"\u0073k\u0069p\u0020\u0072\u0065\u0073\u0065r\u0076\u0065d\u0020\u0062\u0069\u0074\u0073");};var _ddf int ;if _cded .IsTPGDon {_ddf =1;};if _fgc =w .WriteBit (_ddf );
_fgc !=nil {return _bcc ,_eb .Wrap (_fgc ,_ebb ,"\u0074\u0070\u0067\u0064\u006f\u006e");};_ddf =0;if _fgc =w .WriteBit (int (_cded .GBTemplate >>1)&0x01);_fgc !=nil {return _bcc ,_eb .Wrap (_fgc ,_ebb ,"f\u0069r\u0073\u0074\u0020\u0067\u0062\u0074\u0065\u006dp\u006c\u0061\u0074\u0065 b\u0069\u0074");
};if _fgc =w .WriteBit (int (_cded .GBTemplate )&0x01);_fgc !=nil {return _bcc ,_eb .Wrap (_fgc ,_ebb ,"s\u0065\u0063\u006f\u006ed \u0067b\u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u0062\u0069\u0074");};if _cded .UseMMR {_ddf =1;};if _fgc =w .WriteBit (_ddf );
_fgc !=nil {return _bcc ,_eb .Wrap (_fgc ,_ebb ,"u\u0073\u0065\u0020\u004d\u004d\u0052\u0020\u0062\u0069\u0074");};_bcc ++;if _geed ,_fgc =_cded .writeGBAtPixels (w );_fgc !=nil {return _bcc ,_eb .Wrap (_fgc ,_ebb ,"");};_bcc +=_geed ;_cebd :=_cg .New ();
if _fgc =_cebd .EncodeBitmap (_cded .Bitmap ,_cded .IsTPGDon );_fgc !=nil {return _bcc ,_eb .Wrap (_fgc ,_ebb ,"");};_cebd .Final ();var _cedf int64 ;if _cedf ,_fgc =_cebd .WriteTo (w );_fgc !=nil {return _bcc ,_eb .Wrap (_fgc ,_ebb ,"");};_bcc +=int (_cedf );
return _bcc ,nil ;};func (_dgcf *PageInformationSegment )readIsLossless ()error {_gfgf ,_fdcdb :=_dgcf ._cgbc .ReadBit ();if _fdcdb !=nil {return _fdcdb ;};if _gfgf ==1{_dgcf .IsLossless =true ;};return nil ;};func (_gcba *TextRegion )readRegionFlags ()error {var (_bcffc int ;
_aadaf uint64 ;_bfab error ;);_bcffc ,_bfab =_gcba ._acgad .ReadBit ();if _bfab !=nil {return _bfab ;};_gcba .SbrTemplate =int8 (_bcffc );_aadaf ,_bfab =_gcba ._acgad .ReadBits (5);if _bfab !=nil {return _bfab ;};_gcba .SbDsOffset =int8 (_aadaf );if _gcba .SbDsOffset > 0x0f{_gcba .SbDsOffset -=0x20;
};_bcffc ,_bfab =_gcba ._acgad .ReadBit ();if _bfab !=nil {return _bfab ;};_gcba .DefaultPixel =int8 (_bcffc );_aadaf ,_bfab =_gcba ._acgad .ReadBits (2);if _bfab !=nil {return _bfab ;};_gcba .CombinationOperator =_aad .CombinationOperator (int (_aadaf )&0x3);
_bcffc ,_bfab =_gcba ._acgad .ReadBit ();if _bfab !=nil {return _bfab ;};_gcba .IsTransposed =int8 (_bcffc );_aadaf ,_bfab =_gcba ._acgad .ReadBits (2);if _bfab !=nil {return _bfab ;};_gcba .ReferenceCorner =int16 (_aadaf )&0x3;_aadaf ,_bfab =_gcba ._acgad .ReadBits (2);
if _bfab !=nil {return _bfab ;};_gcba .LogSBStrips =int16 (_aadaf )&0x3;_gcba .SbStrips =1<<uint (_gcba .LogSBStrips );_bcffc ,_bfab =_gcba ._acgad .ReadBit ();if _bfab !=nil {return _bfab ;};if _bcffc ==1{_gcba .UseRefinement =true ;};_bcffc ,_bfab =_gcba ._acgad .ReadBit ();
if _bfab !=nil {return _bfab ;};if _bcffc ==1{_gcba .IsHuffmanEncoded =true ;};return nil ;};func _fbge (_cffg int )int {if _cffg ==0{return 0;};_cffg |=_cffg >>1;_cffg |=_cffg >>2;_cffg |=_cffg >>4;_cffg |=_cffg >>8;_cffg |=_cffg >>16;return (_cffg +1)>>1;
};func (_cbag *RegionSegment )String ()string {_agcf :=&_g .Builder {};_agcf .WriteString ("\u0009[\u0052E\u0047\u0049\u004f\u004e\u0020S\u0045\u0047M\u0045\u004e\u0054\u005d\u000a");_agcf .WriteString (_ae .Sprintf ("\t\u0009\u002d\u0020\u0042\u0069\u0074m\u0061\u0070\u0020\u0028\u0077\u0069d\u0074\u0068\u002c\u0020\u0068\u0065\u0069g\u0068\u0074\u0029\u0020\u005b\u0025\u0064\u0078\u0025\u0064]\u000a",_cbag .BitmapWidth ,_cbag .BitmapHeight ));
_agcf .WriteString (_ae .Sprintf ("\u0009\u0009\u002d\u0020L\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0028\u0078,\u0079)\u003a\u0020\u005b\u0025\u0064\u002c\u0025d\u005d\u000a",_cbag .XLocation ,_cbag .YLocation ));_agcf .WriteString (_ae .Sprintf ("\t\u0009\u002d\u0020\u0043\u006f\u006db\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070e\u0072\u0061\u0074o\u0072:\u0020\u0025\u0073",_cbag .CombinaionOperator ));
return _agcf .String ();};func (_gdfd *TextRegion )GetRegionInfo ()*RegionSegment {return _gdfd .RegionInfo };var _ _gd .BasicTabler =&TableSegment {};func (_acbc *TextRegion )decodeSymInRefSize ()(int64 ,error ){const _baeb ="\u0064e\u0063o\u0064\u0065\u0053\u0079\u006dI\u006e\u0052e\u0066\u0053\u0069\u007a\u0065";
if _acbc .SbHuffRSize ==0{_gcbe ,_bedc :=_gd .GetStandardTable (1);if _bedc !=nil {return 0,_eb .Wrap (_bedc ,_baeb ,"");};return _gcbe .Decode (_acbc ._acgad );};if _acbc ._efcb ==nil {var (_ebdb int ;_agae error ;);if _acbc .SbHuffFS ==3{_ebdb ++;};if _acbc .SbHuffDS ==3{_ebdb ++;
};if _acbc .SbHuffDT ==3{_ebdb ++;};if _acbc .SbHuffRDWidth ==3{_ebdb ++;};if _acbc .SbHuffRDHeight ==3{_ebdb ++;};if _acbc .SbHuffRDX ==3{_ebdb ++;};if _acbc .SbHuffRDY ==3{_ebdb ++;};_acbc ._efcb ,_agae =_acbc .getUserTable (_ebdb );if _agae !=nil {return 0,_eb .Wrap (_agae ,_baeb ,"");
};};_bfdg ,_bcgg :=_acbc ._efcb .Decode (_acbc ._acgad );if _bcgg !=nil {return 0,_eb .Wrap (_bcgg ,_baeb ,"");};return _bfdg ,nil ;};func (_ad *EndOfStripe )Init (h *Header ,r _aa .StreamReader )error {_ad ._cgc =r ;return _ad .parseHeader (h ,r );};func (_acaa *PageInformationSegment )readContainsRefinement ()error {_beade ,_fcdf :=_acaa ._cgbc .ReadBit ();
if _fcdf !=nil {return _fcdf ;};if _beade ==1{_acaa ._dbfb =true ;};return nil ;};func (_dbbe *PageInformationSegment )readMaxStripeSize ()error {_fcbg ,_eabdg :=_dbbe ._cgbc .ReadBits (15);if _eabdg !=nil {return _eabdg ;};_dbbe .MaxStripeSize =uint16 (_fcbg &_a .MaxUint16 );
return nil ;};func (_dddg *TextRegion )decodeID ()(int64 ,error ){if _dddg .IsHuffmanEncoded {if _dddg ._fggg ==nil {_dbcb ,_dabbb :=_dddg ._acgad .ReadBits (byte (_dddg ._cebe ));return int64 (_dbcb ),_dabbb ;};return _dddg ._fggg .Decode (_dddg ._acgad );
};return _dddg ._egeb .DecodeIAID (uint64 (_dddg ._cebe ),_dddg ._fabg );};func (_ceaa *GenericRegion )overrideAtTemplate0a (_egaa ,_bccf ,_adbe ,_dccc ,_caf ,_eccc int )int {if _ceaa .GBAtOverride [0]{_egaa &=0xFFEF;if _ceaa .GBAtY [0]==0&&_ceaa .GBAtX [0]>=-int8 (_caf ){_egaa |=(_dccc >>uint (int8 (_eccc )-_ceaa .GBAtX [0]&0x1))<<4;
}else {_egaa |=int (_ceaa .getPixel (_bccf +int (_ceaa .GBAtX [0]),_adbe +int (_ceaa .GBAtY [0])))<<4;};};if _ceaa .GBAtOverride [1]{_egaa &=0xFBFF;if _ceaa .GBAtY [1]==0&&_ceaa .GBAtX [1]>=-int8 (_caf ){_egaa |=(_dccc >>uint (int8 (_eccc )-_ceaa .GBAtX [1]&0x1))<<10;
}else {_egaa |=int (_ceaa .getPixel (_bccf +int (_ceaa .GBAtX [1]),_adbe +int (_ceaa .GBAtY [1])))<<10;};};if _ceaa .GBAtOverride [2]{_egaa &=0xF7FF;if _ceaa .GBAtY [2]==0&&_ceaa .GBAtX [2]>=-int8 (_caf ){_egaa |=(_dccc >>uint (int8 (_eccc )-_ceaa .GBAtX [2]&0x1))<<11;
}else {_egaa |=int (_ceaa .getPixel (_bccf +int (_ceaa .GBAtX [2]),_adbe +int (_ceaa .GBAtY [2])))<<11;};};if _ceaa .GBAtOverride [3]{_egaa &=0x7FFF;if _ceaa .GBAtY [3]==0&&_ceaa .GBAtX [3]>=-int8 (_caf ){_egaa |=(_dccc >>uint (int8 (_eccc )-_ceaa .GBAtX [3]&0x1))<<15;
}else {_egaa |=int (_ceaa .getPixel (_bccf +int (_ceaa .GBAtX [3]),_adbe +int (_ceaa .GBAtY [3])))<<15;};};return _egaa ;};func (_beea *TextRegion )encodeSymbols (_eadee _aa .BinaryWriter )(_dcadb int ,_fbdc error ){const _eaga ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
_fdab :=make ([]byte ,4);_e .BigEndian .PutUint32 (_fdab ,_beea .NumberOfSymbols );if _dcadb ,_fbdc =_eadee .Write (_fdab );_fbdc !=nil {return _dcadb ,_eb .Wrap (_fbdc ,_eaga ,"\u004e\u0075\u006dbe\u0072\u004f\u0066\u0053\u0079\u006d\u0062\u006f\u006c\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073");
};_bacc ,_fbdc :=_aad .NewClassedPoints (_beea ._ebbc ,_beea ._dfcaa );if _fbdc !=nil {return 0,_eb .Wrap (_fbdc ,_eaga ,"");};var _dccca ,_eaagf int ;_fccb :=_cg .New ();_fccb .Init ();if _fbdc =_fccb .EncodeInteger (_cg .IADT ,0);_fbdc !=nil {return _dcadb ,_eb .Wrap (_fbdc ,_eaga ,"\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0020\u0044\u0054");
};_ecbg ,_fbdc :=_bacc .GroupByY ();if _fbdc !=nil {return 0,_eb .Wrap (_fbdc ,_eaga ,"");};for _ ,_dafc :=range _ecbg {_ffcdg :=int (_dafc .YAtIndex (0));_eagag :=_ffcdg -_dccca ;if _fbdc =_fccb .EncodeInteger (_cg .IADT ,_eagag );_fbdc !=nil {return _dcadb ,_eb .Wrap (_fbdc ,_eaga ,"");
};var _ceaf int ;for _gbcf ,_geffd :=range _dafc .IntSlice {switch _gbcf {case 0:_egee :=int (_dafc .XAtIndex (_gbcf ))-_eaagf ;if _fbdc =_fccb .EncodeInteger (_cg .IAFS ,_egee );_fbdc !=nil {return _dcadb ,_eb .Wrap (_fbdc ,_eaga ,"");};_eaagf +=_egee ;
_ceaf =_eaagf ;default:_fbda :=int (_dafc .XAtIndex (_gbcf ))-_ceaf ;if _fbdc =_fccb .EncodeInteger (_cg .IADS ,_fbda );_fbdc !=nil {return _dcadb ,_eb .Wrap (_fbdc ,_eaga ,"");};_ceaf +=_fbda ;};_cfaa ,_feece :=_beea ._dceg .Get (_geffd );if _feece !=nil {return _dcadb ,_eb .Wrap (_feece ,_eaga ,"");
};_agcga ,_bgea :=_beea ._dfgf [_cfaa ];if !_bgea {_agcga ,_bgea =_beea ._adbdc [_cfaa ];if !_bgea {return _dcadb ,_eb .Errorf (_eaga ,"\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027\u0025d\u0027\u0020\u0069s\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064 \u0069\u006e\u0020\u0067\u006cob\u0061\u006c\u0020\u0061\u006e\u0064\u0020\u006c\u006f\u0063\u0061\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020\u006d\u0061\u0070",_cfaa );
};};if _feece =_fccb .EncodeIAID (_beea ._acdf ,_agcga );_feece !=nil {return _dcadb ,_eb .Wrap (_feece ,_eaga ,"");};};if _fbdc =_fccb .EncodeOOB (_cg .IADS );_fbdc !=nil {return _dcadb ,_eb .Wrap (_fbdc ,_eaga ,"");};};_fccb .Final ();_dabf ,_fbdc :=_fccb .WriteTo (_eadee );
if _fbdc !=nil {return _dcadb ,_eb .Wrap (_fbdc ,_eaga ,"");};_dcadb +=int (_dabf );return _dcadb ,nil ;};func (_eaca *GenericRegion )overrideAtTemplate3 (_cfe ,_fbc ,_ecbf ,_febf ,_gdee int )int {_cfe &=0x3EF;if _eaca .GBAtY [0]==0&&_eaca .GBAtX [0]>=-int8 (_gdee ){_cfe |=(_febf >>uint (7-(int8 (_gdee )+_eaca .GBAtX [0]))&0x1)<<4;
}else {_cfe |=int (_eaca .getPixel (_fbc +int (_eaca .GBAtX [0]),_ecbf +int (_eaca .GBAtY [0])))<<4;};return _cfe ;};func (_fcfc *Header )writeSegmentPageAssociation (_fgf _aa .BinaryWriter )(_cedfd int ,_cbgb error ){const _eec ="w\u0072\u0069\u0074\u0065\u0053\u0065g\u006d\u0065\u006e\u0074\u0050\u0061\u0067\u0065\u0041s\u0073\u006f\u0063i\u0061t\u0069\u006f\u006e";
if _fcfc .pageSize ()!=4{if _cbgb =_fgf .WriteByte (byte (_fcfc .PageAssociation ));_cbgb !=nil {return 0,_eb .Wrap (_cbgb ,_eec ,"\u0070\u0061\u0067\u0065\u0053\u0069\u007a\u0065\u0020\u0021\u003d\u0020\u0034");};return 1,nil ;};_cgefb :=make ([]byte ,4);
_e .BigEndian .PutUint32 (_cgefb ,uint32 (_fcfc .PageAssociation ));if _cedfd ,_cbgb =_fgf .Write (_cgefb );_cbgb !=nil {return 0,_eb .Wrap (_cbgb ,_eec ,"\u0034 \u0062y\u0074\u0065\u0020\u0070\u0061g\u0065\u0020n\u0075\u006d\u0062\u0065\u0072");};return _cedfd ,nil ;
};type PatternDictionary struct{_gbeda _aa .StreamReader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;GBAtX []int8 ;GBAtY []int8 ;IsMMREncoded bool ;HDTemplate byte ;HdpWidth byte ;HdpHeight byte ;Patterns []*_aad .Bitmap ;
GrayMax uint32 ;};func (_gecb *PageInformationSegment )checkInput ()error {if _gecb .PageBMHeight ==_a .MaxInt32 {if !_gecb .IsStripe {_ba .Log .Debug ("P\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0053\u0065\u0067me\u006e\u0074\u002e\u0049s\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0073\u0068ou\u006c\u0064 \u0062\u0065\u0020\u0074\u0072\u0075\u0065\u002e");
};};return nil ;};func (_fcd *template1 )setIndex (_deg *_gb .DecoderStats ){_deg .SetIndex (0x080)};func (_gged *Header )subInputReader ()(_aa .StreamReader ,error ){return _aa .NewSubstreamReader (_gged .Reader ,_gged .SegmentDataStartOffset ,_gged .SegmentDataLength );
};type Regioner interface{GetRegionBitmap ()(*_aad .Bitmap ,error );GetRegionInfo ()*RegionSegment ;};func (_ebd *GenericRefinementRegion )decodeTemplate (_aca ,_efc ,_bea ,_abf ,_bec ,_dbd ,_ecf ,_bcd ,_ceda ,_cabdg int ,_bab templater )(_fdeb error ){var (_gfb ,_feee ,_cdd ,_gdf ,_fb int16 ;
_bcdb ,_agc ,_adc ,_acgd int ;_eaa byte ;);if _ceda >=1&&(_ceda -1)< _ebd .ReferenceBitmap .Height {_eaa ,_fdeb =_ebd .ReferenceBitmap .GetByte (_cabdg -_abf );if _fdeb !=nil {return ;};_bcdb =int (_eaa );};if _ceda >=0&&(_ceda )< _ebd .ReferenceBitmap .Height {_eaa ,_fdeb =_ebd .ReferenceBitmap .GetByte (_cabdg );
if _fdeb !=nil {return ;};_agc =int (_eaa );};if _ceda >=-1&&(_ceda +1)< _ebd .ReferenceBitmap .Height {_eaa ,_fdeb =_ebd .ReferenceBitmap .GetByte (_cabdg +_abf );if _fdeb !=nil {return ;};_adc =int (_eaa );};_cabdg ++;if _aca >=1{_eaa ,_fdeb =_ebd .RegionBitmap .GetByte (_bcd -_bea );
if _fdeb !=nil {return ;};_acgd =int (_eaa );};_bcd ++;_bdg :=_ebd .ReferenceDX %8;_beb :=6+_bdg ;_ecc :=_cabdg %_abf ;if _beb >=0{if _beb < 8{_gfb =int16 (_bcdb >>uint (_beb ))&0x07;};if _beb < 8{_feee =int16 (_agc >>uint (_beb ))&0x07;};if _beb < 8{_cdd =int16 (_adc >>uint (_beb ))&0x07;
};if _beb ==6&&_ecc > 1{if _ceda >=1&&(_ceda -1)< _ebd .ReferenceBitmap .Height {_eaa ,_fdeb =_ebd .ReferenceBitmap .GetByte (_cabdg -_abf -2);if _fdeb !=nil {return _fdeb ;};_gfb |=int16 (_eaa <<2)&0x04;};if _ceda >=0&&_ceda < _ebd .ReferenceBitmap .Height {_eaa ,_fdeb =_ebd .ReferenceBitmap .GetByte (_cabdg -2);
if _fdeb !=nil {return _fdeb ;};_feee |=int16 (_eaa <<2)&0x04;};if _ceda >=-1&&_ceda +1< _ebd .ReferenceBitmap .Height {_eaa ,_fdeb =_ebd .ReferenceBitmap .GetByte (_cabdg +_abf -2);if _fdeb !=nil {return _fdeb ;};_cdd |=int16 (_eaa <<2)&0x04;};};if _beb ==0{_bcdb =0;
_agc =0;_adc =0;if _ecc < _abf -1{if _ceda >=1&&_ceda -1< _ebd .ReferenceBitmap .Height {_eaa ,_fdeb =_ebd .ReferenceBitmap .GetByte (_cabdg -_abf );if _fdeb !=nil {return _fdeb ;};_bcdb =int (_eaa );};if _ceda >=0&&_ceda < _ebd .ReferenceBitmap .Height {_eaa ,_fdeb =_ebd .ReferenceBitmap .GetByte (_cabdg );
if _fdeb !=nil {return _fdeb ;};_agc =int (_eaa );};if _ceda >=-1&&_ceda +1< _ebd .ReferenceBitmap .Height {_eaa ,_fdeb =_ebd .ReferenceBitmap .GetByte (_cabdg +_abf );if _fdeb !=nil {return _fdeb ;};_adc =int (_eaa );};};_cabdg ++;};}else {_gfb =int16 (_bcdb <<1)&0x07;
_feee =int16 (_agc <<1)&0x07;_cdd =int16 (_adc <<1)&0x07;_bcdb =0;_agc =0;_adc =0;if _ecc < _abf -1{if _ceda >=1&&_ceda -1< _ebd .ReferenceBitmap .Height {_eaa ,_fdeb =_ebd .ReferenceBitmap .GetByte (_cabdg -_abf );if _fdeb !=nil {return _fdeb ;};_bcdb =int (_eaa );
};if _ceda >=0&&_ceda < _ebd .ReferenceBitmap .Height {_eaa ,_fdeb =_ebd .ReferenceBitmap .GetByte (_cabdg );if _fdeb !=nil {return _fdeb ;};_agc =int (_eaa );};if _ceda >=-1&&_ceda +1< _ebd .ReferenceBitmap .Height {_eaa ,_fdeb =_ebd .ReferenceBitmap .GetByte (_cabdg +_abf );
if _fdeb !=nil {return _fdeb ;};_adc =int (_eaa );};_cabdg ++;};_gfb |=int16 ((_bcdb >>7)&0x07);_feee |=int16 ((_agc >>7)&0x07);_cdd |=int16 ((_adc >>7)&0x07);};_gdf =int16 (_acgd >>6);_fb =0;_cgdg :=(2-_bdg )%8;_bcdb <<=uint (_cgdg );_agc <<=uint (_cgdg );
_adc <<=uint (_cgdg );_acgd <<=2;var _dgb int ;for _gab :=0;_gab < _efc ;_gab ++{_dcg :=_gab &0x07;_fegc :=_bab .form (_gfb ,_feee ,_cdd ,_gdf ,_fb );if _ebd ._cbf {_eaa ,_fdeb =_ebd .RegionBitmap .GetByte (_ebd .RegionBitmap .GetByteIndex (_gab ,_aca ));
if _fdeb !=nil {return _fdeb ;};_ebd ._ac .SetIndex (int32 (_ebd .overrideAtTemplate0 (int (_fegc ),_gab ,_aca ,int (_eaa ),_dcg )));}else {_ebd ._ac .SetIndex (int32 (_fegc ));};_dgb ,_fdeb =_ebd ._eed .DecodeBit (_ebd ._ac );if _fdeb !=nil {return _fdeb ;
};if _fdeb =_ebd .RegionBitmap .SetPixel (_gab ,_aca ,byte (_dgb ));_fdeb !=nil {return _fdeb ;};_gfb =((_gfb <<1)|0x01&int16 (_bcdb >>7))&0x07;_feee =((_feee <<1)|0x01&int16 (_agc >>7))&0x07;_cdd =((_cdd <<1)|0x01&int16 (_adc >>7))&0x07;_gdf =((_gdf <<1)|0x01&int16 (_acgd >>7))&0x07;
_fb =int16 (_dgb );if (_gab -int (_ebd .ReferenceDX ))%8==5{_bcdb =0;_agc =0;_adc =0;if ((_gab -int (_ebd .ReferenceDX ))/8)+1< _ebd .ReferenceBitmap .RowStride {if _ceda >=1&&(_ceda -1)< _ebd .ReferenceBitmap .Height {_eaa ,_fdeb =_ebd .ReferenceBitmap .GetByte (_cabdg -_abf );
if _fdeb !=nil {return _fdeb ;};_bcdb =int (_eaa );};if _ceda >=0&&_ceda < _ebd .ReferenceBitmap .Height {_eaa ,_fdeb =_ebd .ReferenceBitmap .GetByte (_cabdg );if _fdeb !=nil {return _fdeb ;};_agc =int (_eaa );};if _ceda >=-1&&(_ceda +1)< _ebd .ReferenceBitmap .Height {_eaa ,_fdeb =_ebd .ReferenceBitmap .GetByte (_cabdg +_abf );
if _fdeb !=nil {return _fdeb ;};_adc =int (_eaa );};};_cabdg ++;}else {_bcdb <<=1;_agc <<=1;_adc <<=1;};if _dcg ==5&&_aca >=1{if ((_gab >>3)+1)>=_ebd .RegionBitmap .RowStride {_acgd =0;}else {_eaa ,_fdeb =_ebd .RegionBitmap .GetByte (_bcd -_bea );if _fdeb !=nil {return _fdeb ;
};_acgd =int (_eaa );};_bcd ++;}else {_acgd <<=1;};};return nil ;};var (_fea Segmenter ;_fdfd =map[Type ]func ()Segmenter {TSymbolDictionary :func ()Segmenter {return &SymbolDictionary {}},TIntermediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateLosslessTextRegion :func ()Segmenter {return &TextRegion {}},TPatternDictionary :func ()Segmenter {return &PatternDictionary {}},TIntermediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateLosslessHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TIntermediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateLosslessGenericRegion :func ()Segmenter {return &GenericRegion {}},TIntermediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateLosslessGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TPageInformation :func ()Segmenter {return &PageInformationSegment {}},TEndOfPage :func ()Segmenter {return _fea },TEndOfStrip :func ()Segmenter {return &EndOfStripe {}},TEndOfFile :func ()Segmenter {return _fea },TProfiles :func ()Segmenter {return _fea },TTables :func ()Segmenter {return &TableSegment {}},TExtension :func ()Segmenter {return _fea },TBitmap :func ()Segmenter {return _fea }};
);func (_cffb *PatternDictionary )GetDictionary ()([]*_aad .Bitmap ,error ){if _cffb .Patterns !=nil {return _cffb .Patterns ,nil ;};if !_cffb .IsMMREncoded {_cffb .setGbAtPixels ();};_gdge :=NewGenericRegion (_cffb ._gbeda );_gdge .setParametersMMR (_cffb .IsMMREncoded ,_cffb .DataOffset ,_cffb .DataLength ,uint32 (_cffb .HdpHeight ),(_cffb .GrayMax +1)*uint32 (_cffb .HdpWidth ),_cffb .HDTemplate ,false ,false ,_cffb .GBAtX ,_cffb .GBAtY );
_aedc ,_accf :=_gdge .GetRegionBitmap ();if _accf !=nil {return nil ,_accf ;};if _accf =_cffb .extractPatterns (_aedc );_accf !=nil {return nil ,_accf ;};return _cffb .Patterns ,nil ;};func (_aaaa *HalftoneRegion )computeY (_eade ,_ffcc int )int {return _aaaa .shiftAndFill (int (_aaaa .HGridY )+_eade *int (_aaaa .HRegionX )-_ffcc *int (_aaaa .HRegionY ));
};func (_ecab *RegionSegment )Size ()int {return 17};func (_cgce *SymbolDictionary )parseHeader ()(_dbcg error ){_ba .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _dbcg !=nil {_ba .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u0020\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u005b\u0050\u0041\u0052SE\u002d\u0048\u0045A\u0044\u0045R\u005d\u0020\u0066\u0061\u0069\u006ce\u0064\u002e \u0025\u0076",_dbcg );
}else {_ba .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _dbcg =_cgce .readRegionFlags ();_dbcg !=nil {return _dbcg ;};if _dbcg =_cgce .setAtPixels ();_dbcg !=nil {return _dbcg ;};if _dbcg =_cgce .setRefinementAtPixels ();_dbcg !=nil {return _dbcg ;};if _dbcg =_cgce .readNumberOfExportedSymbols ();_dbcg !=nil {return _dbcg ;
};if _dbcg =_cgce .readNumberOfNewSymbols ();_dbcg !=nil {return _dbcg ;};if _dbcg =_cgce .setInSyms ();_dbcg !=nil {return _dbcg ;};if _cgce ._ddec {_dfg :=_cgce .Header .RTSegments ;for _eeed :=len (_dfg )-1;_eeed >=0;_eeed --{if _dfg [_eeed ].Type ==0{_ebbe ,_eeeg :=_dfg [_eeed ].SegmentData .(*SymbolDictionary );
if !_eeeg {_dbcg =_ae .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074:\u0020\u0025\u0076\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020S\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_dfg [_eeed ]);
return _dbcg ;};if _ebbe ._ddec {_cgce .setRetainedCodingContexts (_ebbe );};break ;};};};if _dbcg =_cgce .checkInput ();_dbcg !=nil {return _dbcg ;};return nil ;};func (_edd *template0 )setIndex (_gcce *_gb .DecoderStats ){_gcce .SetIndex (0x100)};func (_bceb *GenericRegion )readGBAtPixels (_fff int )error {const _cgda ="\u0072\u0065\u0061\u0064\u0047\u0042\u0041\u0074\u0050i\u0078\u0065\u006c\u0073";
_bceb .GBAtX =make ([]int8 ,_fff );_bceb .GBAtY =make ([]int8 ,_fff );for _gcb :=0;_gcb < _fff ;_gcb ++{_gac ,_ffcf :=_bceb ._cdb .ReadByte ();if _ffcf !=nil {return _eb .Wrapf (_ffcf ,_cgda ,"\u0058\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_gcb );
};_bceb .GBAtX [_gcb ]=int8 (_gac );_gac ,_ffcf =_bceb ._cdb .ReadByte ();if _ffcf !=nil {return _eb .Wrapf (_ffcf ,_cgda ,"\u0059\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_gcb );};_bceb .GBAtY [_gcb ]=int8 (_gac );};return nil ;};
func (_ddga *TextRegion )Encode (w _aa .BinaryWriter )(_bdge int ,_feeed error ){const _cdbc ="\u0054\u0065\u0078\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u002e\u0045n\u0063\u006f\u0064\u0065";if _bdge ,_feeed =_ddga .RegionInfo .Encode (w );_feeed !=nil {return _bdge ,_eb .Wrap (_feeed ,_cdbc ,"");
};var _cfcc int ;if _cfcc ,_feeed =_ddga .encodeFlags (w );_feeed !=nil {return _bdge ,_eb .Wrap (_feeed ,_cdbc ,"");};_bdge +=_cfcc ;if _cfcc ,_feeed =_ddga .encodeSymbols (w );_feeed !=nil {return _bdge ,_eb .Wrap (_feeed ,_cdbc ,"");};_bdge +=_cfcc ;
return _bdge ,nil ;};func (_ggfc *Header )readNumberOfReferredToSegments (_acfc _aa .StreamReader )(uint64 ,error ){const _ffdg ="\u0072\u0065\u0061\u0064\u004e\u0075\u006d\u0062\u0065\u0072O\u0066\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
_fcafg ,_bge :=_acfc .ReadBits (3);if _bge !=nil {return 0,_eb .Wrap (_bge ,_ffdg ,"\u0063\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0072\u0074\u0073");};_fcafg &=0xf;var _abb []byte ;if _fcafg <=4{_abb =make ([]byte ,5);for _dabb :=0;_dabb <=4;_dabb ++{_edad ,_dafg :=_acfc .ReadBit ();
if _dafg !=nil {return 0,_eb .Wrap (_dafg ,_ffdg ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_abb [_dabb ]=byte (_edad );};}else {_fcafg ,_bge =_acfc .ReadBits (29);if _bge !=nil {return 0,_bge ;};_fcafg &=_a .MaxInt32 ;_dff :=(_fcafg +8)>>3;
_dff <<=3;_abb =make ([]byte ,_dff );var _dbfd uint64 ;for _dbfd =0;_dbfd < _dff ;_dbfd ++{_geff ,_abbb :=_acfc .ReadBit ();if _abbb !=nil {return 0,_eb .Wrap (_abbb ,_ffdg ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_abb [_dbfd ]=byte (_geff );
};};return _fcafg ,nil ;};func (_cdc *GenericRefinementRegion )String ()string {_dge :=&_g .Builder {};_dge .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_dge .WriteString (_cdc .RegionInfo .String ()+"\u000a");
_dge .WriteString (_ae .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0052\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_cdc .IsTPGROn ));_dge .WriteString (_ae .Sprintf ("\u0009-\u0020T\u0065\u006d\u0070\u006c\u0061t\u0065\u0049D\u003a\u0020\u0025\u0076\u000a",_cdc .TemplateID ));
_dge .WriteString (_ae .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_cdc .GrAtX ));_dge .WriteString (_ae .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_cdc .GrAtY ));
_dge .WriteString (_ae .Sprintf ("\u0009-\u0020R\u0065\u0066\u0065\u0072\u0065n\u0063\u0065D\u0058\u0020\u0025\u0076\u000a",_cdc .ReferenceDX ));_dge .WriteString (_ae .Sprintf ("\u0009\u002d\u0020\u0052ef\u0065\u0072\u0065\u006e\u0063\u0044\u0065\u0059\u003a\u0020\u0025\u0076\u000a",_cdc .ReferenceDY ));
return _dge .String ();};func (_ddbcg *TextRegion )decodeStripT ()(_dfegf int64 ,_ggfcd error ){if _ddbcg .IsHuffmanEncoded {if _ddbcg .SbHuffDT ==3{if _ddbcg ._ebdc ==nil {var _bgcce int ;if _ddbcg .SbHuffFS ==3{_bgcce ++;};if _ddbcg .SbHuffDS ==3{_bgcce ++;
};_ddbcg ._ebdc ,_ggfcd =_ddbcg .getUserTable (_bgcce );if _ggfcd !=nil {return 0,_ggfcd ;};};_dfegf ,_ggfcd =_ddbcg ._ebdc .Decode (_ddbcg ._acgad );if _ggfcd !=nil {return 0,_ggfcd ;};}else {var _dabde _gd .Tabler ;_dabde ,_ggfcd =_gd .GetStandardTable (11+int (_ddbcg .SbHuffDT ));
if _ggfcd !=nil {return 0,_ggfcd ;};_dfegf ,_ggfcd =_dabde .Decode (_ddbcg ._acgad );if _ggfcd !=nil {return 0,_ggfcd ;};};}else {var _fedcd int32 ;_fedcd ,_ggfcd =_ddbcg ._egeb .DecodeInt (_ddbcg ._fdbcd );if _ggfcd !=nil {return 0,_ggfcd ;};_dfegf =int64 (_fedcd );
};_dfegf *=int64 (-_ddbcg .SbStrips );return _dfegf ,nil ;};func (_bbgb *GenericRegion )Size ()int {return _bbgb .RegionSegment .Size ()+1+2*len (_bbgb .GBAtX )};const (TSymbolDictionary Type =0;TIntermediateTextRegion Type =4;TImmediateTextRegion Type =6;
TImmediateLosslessTextRegion Type =7;TPatternDictionary Type =16;TIntermediateHalftoneRegion Type =20;TImmediateHalftoneRegion Type =22;TImmediateLosslessHalftoneRegion Type =23;TIntermediateGenericRegion Type =36;TImmediateGenericRegion Type =38;TImmediateLosslessGenericRegion Type =39;
TIntermediateGenericRefinementRegion Type =40;TImmediateGenericRefinementRegion Type =42;TImmediateLosslessGenericRefinementRegion Type =43;TPageInformation Type =48;TEndOfPage Type =49;TEndOfStrip Type =50;TEndOfFile Type =51;TProfiles Type =52;TTables Type =53;
TExtension Type =62;TBitmap Type =70;);func (_baae *Header )parse (_fgbc Documenter ,_gcf _aa .StreamReader ,_faca int64 ,_cabf OrganizationType )(_edab error ){const _fagc ="\u0070\u0061\u0072s\u0065";_ba .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u005b\u0050A\u0052\u0053\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");
defer func (){if _edab !=nil {_ba .Log .Trace ("\u005b\u0053\u0045GM\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045R\u005d[\u0050A\u0052S\u0045\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_edab );}else {_ba .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052]\u005bP\u0041\u0052\u0053\u0045\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
};}();_ ,_edab =_gcf .Seek (_faca ,_ff .SeekStart );if _edab !=nil {return _eb .Wrap (_edab ,_fagc ,"\u0073\u0065\u0065\u006b\u0020\u0073\u0074\u0061\u0072\u0074");};if _edab =_baae .readSegmentNumber (_gcf );_edab !=nil {return _eb .Wrap (_edab ,_fagc ,"");
};if _edab =_baae .readHeaderFlags ();_edab !=nil {return _eb .Wrap (_edab ,_fagc ,"");};var _cef uint64 ;_cef ,_edab =_baae .readNumberOfReferredToSegments (_gcf );if _edab !=nil {return _eb .Wrap (_edab ,_fagc ,"");};_baae .RTSNumbers ,_edab =_baae .readReferredToSegmentNumbers (_gcf ,int (_cef ));
if _edab !=nil {return _eb .Wrap (_edab ,_fagc ,"");};_edab =_baae .readSegmentPageAssociation (_fgbc ,_gcf ,_cef ,_baae .RTSNumbers ...);if _edab !=nil {return _eb .Wrap (_edab ,_fagc ,"");};if _baae .Type !=TEndOfFile {if _edab =_baae .readSegmentDataLength (_gcf );
_edab !=nil {return _eb .Wrap (_edab ,_fagc ,"");};};_baae .readDataStartOffset (_gcf ,_cabf );_baae .readHeaderLength (_gcf ,_faca );_ba .Log .Trace ("\u0025\u0073",_baae );return nil ;};func (_gafe *TextRegion )decodeIb (_cccb ,_bbcc int64 )(*_aad .Bitmap ,error ){const _bfff ="\u0064\u0065\u0063\u006f\u0064\u0065\u0049\u0062";
var (_fcff error ;_gafea *_aad .Bitmap ;);if _cccb ==0{if int (_bbcc )> len (_gafe .Symbols )-1{return nil ,_eb .Error (_bfff ,"\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0049\u0042\u0020\u0062\u0069\u0074\u006d\u0061\u0070\u002e\u0020\u0069\u006e\u0064\u0065x\u0020\u006f\u0075\u0074\u0020o\u0066\u0020r\u0061\u006e\u0067\u0065");
};return _gafe .Symbols [int (_bbcc )],nil ;};var _gafef ,_dfgfd ,_deff ,_ddebe int64 ;_gafef ,_fcff =_gafe .decodeRdw ();if _fcff !=nil {return nil ,_eb .Wrap (_fcff ,_bfff ,"");};_dfgfd ,_fcff =_gafe .decodeRdh ();if _fcff !=nil {return nil ,_eb .Wrap (_fcff ,_bfff ,"");
};_deff ,_fcff =_gafe .decodeRdx ();if _fcff !=nil {return nil ,_eb .Wrap (_fcff ,_bfff ,"");};_ddebe ,_fcff =_gafe .decodeRdy ();if _fcff !=nil {return nil ,_eb .Wrap (_fcff ,_bfff ,"");};if _gafe .IsHuffmanEncoded {if _ ,_fcff =_gafe .decodeSymInRefSize ();
_fcff !=nil {return nil ,_eb .Wrap (_fcff ,_bfff ,"");};_gafe ._acgad .Align ();};_gabdb :=_gafe .Symbols [_bbcc ];_cggg :=uint32 (_gabdb .Width );_cdec :=uint32 (_gabdb .Height );_aadg :=int32 (uint32 (_gafef )>>1)+int32 (_deff );_cafa :=int32 (uint32 (_dfgfd )>>1)+int32 (_ddebe );
if _gafe ._aece ==nil {_gafe ._aece =_ggaa (_gafe ._acgad ,nil );};_gafe ._aece .setParameters (_gafe ._dafgc ,_gafe ._egeb ,_gafe .SbrTemplate ,_cggg +uint32 (_gafef ),_cdec +uint32 (_dfgfd ),_gabdb ,_aadg ,_cafa ,false ,_gafe .SbrATX ,_gafe .SbrATY );
_gafea ,_fcff =_gafe ._aece .GetRegionBitmap ();if _fcff !=nil {return nil ,_eb .Wrap (_fcff ,_bfff ,"\u0067\u0072\u0066");};if _gafe .IsHuffmanEncoded {_gafe ._acgad .Align ();};return _gafea ,nil ;};func (_egcc *Header )readSegmentNumber (_fbef _aa .StreamReader )error {const _eacc ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";
_dea :=make ([]byte ,4);_ ,_fabb :=_fbef .Read (_dea );if _fabb !=nil {return _eb .Wrap (_fabb ,_eacc ,"");};_egcc .SegmentNumber =_e .BigEndian .Uint32 (_dea );return nil ;};func (_cbaf *SymbolDictionary )huffDecodeBmSize ()(int64 ,error ){if _cbaf ._afb ==nil {var (_bgcf int ;
_adbae error ;);if _cbaf .SdHuffDecodeHeightSelection ==3{_bgcf ++;};if _cbaf .SdHuffDecodeWidthSelection ==3{_bgcf ++;};_cbaf ._afb ,_adbae =_cbaf .getUserTable (_bgcf );if _adbae !=nil {return 0,_adbae ;};};return _cbaf ._afb .Decode (_cbaf ._cfb );};
func (_bcfe *SymbolDictionary )Init (h *Header ,r _aa .StreamReader )error {_bcfe .Header =h ;_bcfe ._cfb =r ;return _bcfe .parseHeader ();};func (_ebaba *TextRegion )String ()string {_cae :=&_g .Builder {};_cae .WriteString ("\u000a[\u0054E\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u000a");
_cae .WriteString (_ebaba .RegionInfo .String ()+"\u000a");_cae .WriteString (_ae .Sprintf ("\u0009\u002d\u0020\u0053br\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0025\u0076\u000a",_ebaba .SbrTemplate ));_cae .WriteString (_ae .Sprintf ("\u0009-\u0020S\u0062\u0044\u0073\u004f\u0066f\u0073\u0065t\u003a\u0020\u0025\u0076\u000a",_ebaba .SbDsOffset ));
_cae .WriteString (_ae .Sprintf ("\t\u002d \u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0050i\u0078\u0065\u006c\u003a %\u0076\u000a",_ebaba .DefaultPixel ));_cae .WriteString (_ae .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0076\u000a",_ebaba .CombinationOperator ));
_cae .WriteString (_ae .Sprintf ("\t\u002d \u0049\u0073\u0054\u0072\u0061\u006e\u0073\u0070o\u0073\u0065\u0064\u003a %\u0076\u000a",_ebaba .IsTransposed ));_cae .WriteString (_ae .Sprintf ("\u0009\u002d\u0020Re\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0043\u006f\u0072\u006e\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_ebaba .ReferenceCorner ));
_cae .WriteString (_ae .Sprintf ("\t\u002d\u0020\u0055\u0073eR\u0065f\u0069\u006e\u0065\u006d\u0065n\u0074\u003a\u0020\u0025\u0076\u000a",_ebaba .UseRefinement ));_cae .WriteString (_ae .Sprintf ("\u0009-\u0020\u0049\u0073\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045n\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0076\u000a",_ebaba .IsHuffmanEncoded ));
if _ebaba .IsHuffmanEncoded {_cae .WriteString (_ae .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_ebaba .SbHuffRSize ));_cae .WriteString (_ae .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0059:\u0020\u0025\u0076\u000a",_ebaba .SbHuffRDY ));
_cae .WriteString (_ae .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0058:\u0020\u0025\u0076\u000a",_ebaba .SbHuffRDX ));_cae .WriteString (_ae .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069\u0067\u0068\u0074\u003a\u0020\u0025v\u000a",_ebaba .SbHuffRDHeight ));
_cae .WriteString (_ae .Sprintf ("\t\u002d\u0020\u0053\u0062Hu\u0066f\u0052\u0044\u0057\u0069\u0064t\u0068\u003a\u0020\u0025\u0076\u000a",_ebaba .SbHuffRDWidth ));_cae .WriteString (_ae .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0054\u003a\u0020\u0025\u0076\u000a",_ebaba .SbHuffDT ));
_cae .WriteString (_ae .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0053\u003a\u0020\u0025\u0076\u000a",_ebaba .SbHuffDS ));_cae .WriteString (_ae .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0046\u0053\u003a\u0020\u0025\u0076\u000a",_ebaba .SbHuffFS ));
};_cae .WriteString (_ae .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_ebaba .SbrATX ));_cae .WriteString (_ae .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0059:\u0020\u0025\u0076\u000a",_ebaba .SbrATY ));
_cae .WriteString (_ae .Sprintf ("\u0009\u002d\u0020N\u0075\u006d\u0062\u0065r\u004f\u0066\u0053\u0079\u006d\u0062\u006fl\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_ebaba .NumberOfSymbolInstances ));_cae .WriteString (_ae .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_ebaba .SbrATX ));
return _cae .String ();};func (_fabe *Header )writeReferredToSegments (_cffe _aa .BinaryWriter )(_affc int ,_eacf error ){const _egag ="\u0077\u0072\u0069te\u0052\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
var (_dgf uint16 ;_fcag uint32 ;);_gbce :=_fabe .referenceSize ();_cgef :=1;_bead :=make ([]byte ,_gbce );for _ ,_cgbg :=range _fabe .RTSNumbers {switch _gbce {case 4:_fcag =uint32 (_cgbg );_e .BigEndian .PutUint32 (_bead ,_fcag );_cgef ,_eacf =_cffe .Write (_bead );
if _eacf !=nil {return 0,_eb .Wrap (_eacf ,_egag ,"u\u0069\u006e\u0074\u0033\u0032\u0020\u0073\u0069\u007a\u0065");};case 2:_dgf =uint16 (_cgbg );_e .BigEndian .PutUint16 (_bead ,_dgf );_cgef ,_eacf =_cffe .Write (_bead );if _eacf !=nil {return 0,_eb .Wrap (_eacf ,_egag ,"\u0075\u0069\u006e\u0074\u0031\u0036");
};default:if _eacf =_cffe .WriteByte (byte (_cgbg ));_eacf !=nil {return 0,_eb .Wrap (_eacf ,_egag ,"\u0075\u0069\u006et\u0038");};};_affc +=_cgef ;};return _affc ,nil ;};func (_cggc *Header )readDataStartOffset (_fece _aa .StreamReader ,_bae OrganizationType ){if _bae ==OSequential {_cggc .SegmentDataStartOffset =uint64 (_fece .StreamPosition ());
};};func (_faad *HalftoneRegion )parseHeader ()error {if _adbac :=_faad .RegionSegment .parseHeader ();_adbac !=nil {return _adbac ;};_dcgb ,_eddc :=_faad ._dfb .ReadBit ();if _eddc !=nil {return _eddc ;};_faad .HDefaultPixel =int8 (_dcgb );_bedb ,_eddc :=_faad ._dfb .ReadBits (3);
if _eddc !=nil {return _eddc ;};_faad .CombinationOperator =_aad .CombinationOperator (_bedb &0xf);_dcgb ,_eddc =_faad ._dfb .ReadBit ();if _eddc !=nil {return _eddc ;};if _dcgb ==1{_faad .HSkipEnabled =true ;};_bedb ,_eddc =_faad ._dfb .ReadBits (2);if _eddc !=nil {return _eddc ;
};_faad .HTemplate =byte (_bedb &0xf);_dcgb ,_eddc =_faad ._dfb .ReadBit ();if _eddc !=nil {return _eddc ;};if _dcgb ==1{_faad .IsMMREncoded =true ;};_bedb ,_eddc =_faad ._dfb .ReadBits (32);if _eddc !=nil {return _eddc ;};_faad .HGridWidth =uint32 (_bedb &_a .MaxUint32 );
_bedb ,_eddc =_faad ._dfb .ReadBits (32);if _eddc !=nil {return _eddc ;};_faad .HGridHeight =uint32 (_bedb &_a .MaxUint32 );_bedb ,_eddc =_faad ._dfb .ReadBits (32);if _eddc !=nil {return _eddc ;};_faad .HGridX =int32 (_bedb &_a .MaxInt32 );_bedb ,_eddc =_faad ._dfb .ReadBits (32);
if _eddc !=nil {return _eddc ;};_faad .HGridY =int32 (_bedb &_a .MaxInt32 );_bedb ,_eddc =_faad ._dfb .ReadBits (16);if _eddc !=nil {return _eddc ;};_faad .HRegionX =uint16 (_bedb &_a .MaxUint16 );_bedb ,_eddc =_faad ._dfb .ReadBits (16);if _eddc !=nil {return _eddc ;
};_faad .HRegionY =uint16 (_bedb &_a .MaxUint16 );if _eddc =_faad .computeSegmentDataStructure ();_eddc !=nil {return _eddc ;};return _faad .checkInput ();};func (_dfba *RegionSegment )parseHeader ()error {const _cedd ="p\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072";
_ba .Log .Trace ("\u005b\u0052\u0045\u0047I\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002dH\u0045A\u0044\u0045\u0052\u005d\u0020\u0042\u0065g\u0069\u006e");defer func (){_ba .Log .Trace ("\u005b\u0052\u0045G\u0049\u004f\u004e\u005d[\u0050\u0041\u0052\u0053\u0045\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
}();_dffa ,_ecdd :=_dfba ._eced .ReadBits (32);if _ecdd !=nil {return _eb .Wrap (_ecdd ,_cedd ,"\u0077\u0069\u0064t\u0068");};_dfba .BitmapWidth =uint32 (_dffa &_a .MaxUint32 );_dffa ,_ecdd =_dfba ._eced .ReadBits (32);if _ecdd !=nil {return _eb .Wrap (_ecdd ,_cedd ,"\u0068\u0065\u0069\u0067\u0068\u0074");
};_dfba .BitmapHeight =uint32 (_dffa &_a .MaxUint32 );_dffa ,_ecdd =_dfba ._eced .ReadBits (32);if _ecdd !=nil {return _eb .Wrap (_ecdd ,_cedd ,"\u0078\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_dfba .XLocation =uint32 (_dffa &_a .MaxUint32 );
_dffa ,_ecdd =_dfba ._eced .ReadBits (32);if _ecdd !=nil {return _eb .Wrap (_ecdd ,_cedd ,"\u0079\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_dfba .YLocation =uint32 (_dffa &_a .MaxUint32 );if _ ,_ecdd =_dfba ._eced .ReadBits (5);_ecdd !=nil {return _eb .Wrap (_ecdd ,_cedd ,"\u0064i\u0072\u0079\u0020\u0072\u0065\u0061d");
};if _ecdd =_dfba .readCombinationOperator ();_ecdd !=nil {return _eb .Wrap (_ecdd ,_cedd ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};return nil ;};type template1 struct{};func (_aegab *SymbolDictionary )GetDictionary ()([]*_aad .Bitmap ,error ){_ba .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c-\u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){_ba .Log .Trace ("\u005b\u0053\u0059M\u0042\u004f\u004c\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
_ba .Log .Trace ("\u005b\u0053Y\u004d\u0042\u004f\u004c\u002dD\u0049\u0043\u0054\u0049\u004fN\u0041\u0052\u0059\u005d\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020\u000a\u0045\u0078\u003a\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u000a\u006e\u0065\u0077\u003a\u0027\u0025\u0073\u0027",_aegab ._cbdc ,_aegab ._dced );
}();if _aegab ._cbdc ==nil {var _aeba error ;if _aegab .UseRefinementAggregation {_aegab ._dedb =_aegab .getSbSymCodeLen ();};if !_aegab .IsHuffmanEncoded {if _aeba =_aegab .setCodingStatistics ();_aeba !=nil {return nil ,_aeba ;};};_aegab ._dced =make ([]*_aad .Bitmap ,_aegab .NumberOfNewSymbols );
var _eadf []int ;if _aegab .IsHuffmanEncoded &&!_aegab .UseRefinementAggregation {_eadf =make ([]int ,_aegab .NumberOfNewSymbols );};if _aeba =_aegab .setSymbolsArray ();_aeba !=nil {return nil ,_aeba ;};var _cdea ,_ggaef int64 ;_aegab ._gdcd =0;for _aegab ._gdcd < _aegab .NumberOfNewSymbols {_ggaef ,_aeba =_aegab .decodeHeightClassDeltaHeight ();
if _aeba !=nil {return nil ,_aeba ;};_cdea +=_ggaef ;var _fbd ,_ddae uint32 ;_bbeb :=int64 (_aegab ._gdcd );for {var _aceed int64 ;_aceed ,_aeba =_aegab .decodeDifferenceWidth ();if _ed .Is (_aeba ,_d .ErrOOB ){break ;};if _aeba !=nil {return nil ,_aeba ;
};if _aegab ._gdcd >=_aegab .NumberOfNewSymbols {break ;};_fbd +=uint32 (_aceed );_ddae +=_fbd ;if !_aegab .IsHuffmanEncoded ||_aegab .UseRefinementAggregation {if !_aegab .UseRefinementAggregation {_aeba =_aegab .decodeDirectlyThroughGenericRegion (_fbd ,uint32 (_cdea ));
if _aeba !=nil {return nil ,_aeba ;};}else {_aeba =_aegab .decodeAggregate (_fbd ,uint32 (_cdea ));if _aeba !=nil {return nil ,_aeba ;};};}else if _aegab .IsHuffmanEncoded &&!_aegab .UseRefinementAggregation {_eadf [_aegab ._gdcd ]=int (_fbd );};_aegab ._gdcd ++;
};if _aegab .IsHuffmanEncoded &&!_aegab .UseRefinementAggregation {var _gbdg int64 ;if _aegab .SdHuffBMSizeSelection ==0{var _gagg _gd .Tabler ;_gagg ,_aeba =_gd .GetStandardTable (1);if _aeba !=nil {return nil ,_aeba ;};_gbdg ,_aeba =_gagg .Decode (_aegab ._cfb );
if _aeba !=nil {return nil ,_aeba ;};}else {_gbdg ,_aeba =_aegab .huffDecodeBmSize ();if _aeba !=nil {return nil ,_aeba ;};};_aegab ._cfb .Align ();var _agff *_aad .Bitmap ;_agff ,_aeba =_aegab .decodeHeightClassCollectiveBitmap (_gbdg ,uint32 (_cdea ),_ddae );
if _aeba !=nil {return nil ,_aeba ;};_aeba =_aegab .decodeHeightClassBitmap (_agff ,_bbeb ,int (_cdea ),_eadf );if _aeba !=nil {return nil ,_aeba ;};};};_ccgbgc ,_aeba :=_aegab .getToExportFlags ();if _aeba !=nil {return nil ,_aeba ;};_aegab .setExportedSymbols (_ccgbgc );
};return _aegab ._cbdc ,nil ;};func (_gbd *Header )writeFlags (_cebbb _aa .BinaryWriter )(_gcbc error ){const _cgdab ="\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065F\u006c\u0061\u0067\u0073";_bfc :=byte (_gbd .Type );if _gcbc =_cebbb .WriteByte (_bfc );
_gcbc !=nil {return _eb .Wrap (_gcbc ,_cgdab ,"\u0077\u0072\u0069ti\u006e\u0067\u0020\u0073\u0065\u0067\u006d\u0065\u006et\u0020t\u0079p\u0065 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064");};if !_gbd .RetainFlag &&!_gbd .PageAssociationFieldSize {return nil ;
};if _gcbc =_cebbb .SkipBits (-8);_gcbc !=nil {return _eb .Wrap (_gcbc ,_cgdab ,"\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0062\u0061\u0063\u006b\u0020\u0074\u0068\u0065\u0020\u0062\u0069\u0074\u0073\u0020\u0066\u0061il\u0065\u0064");};var _dacc int ;
if _gbd .RetainFlag {_dacc =1;};if _gcbc =_cebbb .WriteBit (_dacc );_gcbc !=nil {return _eb .Wrap (_gcbc ,_cgdab ,"\u0072\u0065\u0074\u0061in\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067\u0073");};_dacc =0;if _gbd .PageAssociationFieldSize {_dacc =1;
};if _gcbc =_cebbb .WriteBit (_dacc );_gcbc !=nil {return _eb .Wrap (_gcbc ,_cgdab ,"p\u0061\u0067\u0065\u0020as\u0073o\u0063\u0069\u0061\u0074\u0069o\u006e\u0020\u0066\u006c\u0061\u0067");};_cebbb .FinishByte ();return nil ;};func (_cgdf *GenericRegion )setParameters (_bag bool ,_fga ,_aga int64 ,_bfd ,_fdag uint32 ){_cgdf .IsMMREncoded =_bag ;
_cgdf .DataOffset =_fga ;_cgdf .DataLength =_aga ;_cgdf .RegionSegment .BitmapHeight =_bfd ;_cgdf .RegionSegment .BitmapWidth =_fdag ;_cgdf ._efd =nil ;_cgdf .Bitmap =nil ;};func (_babf *SymbolDictionary )encodeNumSyms (_dggc _aa .BinaryWriter )(_gaed int ,_fdbb error ){const _fefc ="\u0065\u006e\u0063\u006f\u0064\u0065\u004e\u0075\u006d\u0053\u0079\u006d\u0073";
_fdfe :=make ([]byte ,4);_e .BigEndian .PutUint32 (_fdfe ,_babf .NumberOfExportedSymbols );if _gaed ,_fdbb =_dggc .Write (_fdfe );_fdbb !=nil {return _gaed ,_eb .Wrap (_fdbb ,_fefc ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};_e .BigEndian .PutUint32 (_fdfe ,_babf .NumberOfNewSymbols );_ebge ,_fdbb :=_dggc .Write (_fdfe );if _fdbb !=nil {return _gaed ,_eb .Wrap (_fdbb ,_fefc ,"n\u0065\u0077\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};return _gaed +_ebge ,nil ;};func (_ffab *SymbolDictionary )addSymbol (_dadee Regioner )error {_edabg ,_ccfc :=_dadee .GetRegionBitmap ();
if _ccfc !=nil {return _ccfc ;};_ffab ._dced [_ffab ._gdcd ]=_edabg ;_ffab ._bbge =append (_ffab ._bbge ,_edabg );_ba .Log .Trace ("\u005b\u0053YM\u0042\u004f\u004c \u0044\u0049\u0043\u0054ION\u0041RY\u005d\u0020\u0041\u0064\u0064\u0065\u0064 s\u0079\u006d\u0062\u006f\u006c\u003a\u0020%\u0073",_edabg );
return nil ;};func (_ecfb *GenericRegion )parseHeader ()(_dae error ){_ba .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052I\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0050\u0061\u0072s\u0069\u006e\u0067\u0048\u0065\u0061\u0064e\u0072\u002e\u002e\u002e");
defer func (){if _dae !=nil {_ba .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e]\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065r\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0077\u0069th\u0020\u0065\u0072\u0072\u006f\u0072\u002e\u0020\u0025\u0076",_dae );
}else {_ba .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049C\u002d\u0052\u0045G\u0049\u004f\u004e]\u0020\u0050a\u0072\u0073\u0069\u006e\u0067\u0048e\u0061de\u0072\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0053\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079\u002e\u002e\u002e");
};}();var (_cfd int ;_degg uint64 ;);if _dae =_ecfb .RegionSegment .parseHeader ();_dae !=nil {return _dae ;};if _ ,_dae =_ecfb ._cdb .ReadBits (3);_dae !=nil {return _dae ;};_cfd ,_dae =_ecfb ._cdb .ReadBit ();if _dae !=nil {return _dae ;};if _cfd ==1{_ecfb .UseExtTemplates =true ;
};_cfd ,_dae =_ecfb ._cdb .ReadBit ();if _dae !=nil {return _dae ;};if _cfd ==1{_ecfb .IsTPGDon =true ;};_degg ,_dae =_ecfb ._cdb .ReadBits (2);if _dae !=nil {return _dae ;};_ecfb .GBTemplate =byte (_degg &0xf);_cfd ,_dae =_ecfb ._cdb .ReadBit ();if _dae !=nil {return _dae ;
};if _cfd ==1{_ecfb .IsMMREncoded =true ;};if !_ecfb .IsMMREncoded {_bgg :=1;if _ecfb .GBTemplate ==0{_bgg =4;if _ecfb .UseExtTemplates {_bgg =12;};};if _dae =_ecfb .readGBAtPixels (_bgg );_dae !=nil {return _dae ;};};if _dae =_ecfb .computeSegmentDataStructure ();
_dae !=nil {return _dae ;};_ba .Log .Trace ("\u0025\u0073",_ecfb );return nil ;};func (_fdac *Header )writeSegmentDataLength (_ceed _aa .BinaryWriter )(_gbbd int ,_cfc error ){_gfcb :=make ([]byte ,4);_e .BigEndian .PutUint32 (_gfcb ,uint32 (_fdac .SegmentDataLength ));
if _gbbd ,_cfc =_ceed .Write (_gfcb );_cfc !=nil {return 0,_eb .Wrap (_cfc ,"\u0048\u0065a\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u004c\u0065ng\u0074\u0068","");};return _gbbd ,nil ;
};func (_abdg *PatternDictionary )readGrayMax ()error {_agbd ,_fcbd :=_abdg ._gbeda .ReadBits (32);if _fcbd !=nil {return _fcbd ;};_abdg .GrayMax =uint32 (_agbd &_a .MaxUint32 );return nil ;};type HalftoneRegion struct{_dfb _aa .StreamReader ;_ddeb *Header ;
DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;HDefaultPixel int8 ;CombinationOperator _aad .CombinationOperator ;HSkipEnabled bool ;HTemplate byte ;IsMMREncoded bool ;HGridWidth uint32 ;
HGridHeight uint32 ;HGridX int32 ;HGridY int32 ;HRegionX uint16 ;HRegionY uint16 ;HalftoneRegionBitmap *_aad .Bitmap ;Patterns []*_aad .Bitmap ;};var (_ Regioner =&TextRegion {};_ Segmenter =&TextRegion {};);func (_egef *TextRegion )createRegionBitmap ()error {_egef .RegionBitmap =_aad .New (int (_egef .RegionInfo .BitmapWidth ),int (_egef .RegionInfo .BitmapHeight ));
if _egef .DefaultPixel !=0{_egef .RegionBitmap .SetDefaultPixel ();};return nil ;};func (_cgde *GenericRegion )copyLineAbove (_def int )error {_acf :=_def *_cgde .Bitmap .RowStride ;_bdf :=_acf -_cgde .Bitmap .RowStride ;for _bdgb :=0;_bdgb < _cgde .Bitmap .RowStride ;
_bdgb ++{_gdg ,_ddfd :=_cgde .Bitmap .GetByte (_bdf );if _ddfd !=nil {return _ddfd ;};_bdf ++;if _ddfd =_cgde .Bitmap .SetByte (_acf ,_gdg );_ddfd !=nil {return _ddfd ;};_acf ++;};return nil ;};func (_dbef *GenericRegion )decodeTemplate0b (_dcb ,_dgdc ,_bfbe int ,_efee ,_egg int )(_dafe error ){const _bfe ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0062";
var (_ddag ,_bggf int ;_bff ,_afg int ;_fca byte ;_bca int ;);if _dcb >=1{_fca ,_dafe =_dbef .Bitmap .GetByte (_egg );if _dafe !=nil {return _eb .Wrap (_dafe ,_bfe ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_bff =int (_fca );};if _dcb >=2{_fca ,_dafe =_dbef .Bitmap .GetByte (_egg -_dbef .Bitmap .RowStride );
if _dafe !=nil {return _eb .Wrap (_dafe ,_bfe ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_afg =int (_fca )<<6;};_ddag =(_bff &0xf0)|(_afg &0x3800);for _dce :=0;_dce < _bfbe ;_dce =_bca {var (_dee byte ;_ddb int ;);_bca =_dce +8;if _aef :=_dgdc -_dce ;
_aef > 8{_ddb =8;}else {_ddb =_aef ;};if _dcb > 0{_bff <<=8;if _bca < _dgdc {_fca ,_dafe =_dbef .Bitmap .GetByte (_egg +1);if _dafe !=nil {return _eb .Wrap (_dafe ,_bfe ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_bff |=int (_fca );};};if _dcb > 1{_afg <<=8;
if _bca < _dgdc {_fca ,_dafe =_dbef .Bitmap .GetByte (_egg -_dbef .Bitmap .RowStride +1);if _dafe !=nil {return _eb .Wrap (_dafe ,_bfe ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_afg |=int (_fca )<<6;};};for _dbefe :=0;_dbefe < _ddb ;_dbefe ++{_dcd :=uint (7-_dbefe );
if _dbef ._degd {_bggf =_dbef .overrideAtTemplate0b (_ddag ,_dce +_dbefe ,_dcb ,int (_dee ),_dbefe ,int (_dcd ));_dbef ._bbd .SetIndex (int32 (_bggf ));}else {_dbef ._bbd .SetIndex (int32 (_ddag ));};var _dba int ;_dba ,_dafe =_dbef ._fbe .DecodeBit (_dbef ._bbd );
if _dafe !=nil {return _eb .Wrap (_dafe ,_bfe ,"");};_dee |=byte (_dba <<_dcd );_ddag =((_ddag &0x7bf7)<<1)|_dba |((_bff >>_dcd )&0x10)|((_afg >>_dcd )&0x800);};if _eaf :=_dbef .Bitmap .SetByte (_efee ,_dee );_eaf !=nil {return _eb .Wrap (_eaf ,_bfe ,"");
};_efee ++;_egg ++;};return nil ;};func (_bgegc *SymbolDictionary )getToExportFlags ()([]int ,error ){var (_ebad int ;_bfeed int32 ;_afgba error ;_ebbga =int32 (_bgegc ._aaab +_bgegc .NumberOfNewSymbols );_ecde =make ([]int ,_ebbga ););for _eagfg :=int32 (0);
_eagfg < _ebbga ;_eagfg +=_bfeed {if _bgegc .IsHuffmanEncoded {_gfbf ,_dgbc :=_gd .GetStandardTable (1);if _dgbc !=nil {return nil ,_dgbc ;};_dcdb ,_dgbc :=_gfbf .Decode (_bgegc ._cfb );if _dgbc !=nil {return nil ,_dgbc ;};_bfeed =int32 (_dcdb );}else {_bfeed ,_afgba =_bgegc ._caff .DecodeInt (_bgegc ._edga );
if _afgba !=nil {return nil ,_afgba ;};};if _bfeed !=0{for _fgad :=_eagfg ;_fgad < _eagfg +_bfeed ;_fgad ++{_ecde [_fgad ]=_ebad ;};};if _ebad ==0{_ebad =1;}else {_ebad =0;};};return _ecde ,nil ;};var _ templater =&template0 {};func (_gace *HalftoneRegion )computeGrayScalePlanes (_aeae []*_aad .Bitmap ,_fgb int )([][]int ,error ){_degc :=make ([][]int ,_gace .HGridHeight );
for _eea :=0;_eea < len (_degc );_eea ++{_degc [_eea ]=make ([]int ,_gace .HGridWidth );};for _gfdd :=0;_gfdd < int (_gace .HGridHeight );_gfdd ++{for _ebda :=0;_ebda < int (_gace .HGridWidth );_ebda +=8{var _eeb int ;if _dcad :=int (_gace .HGridWidth )-_ebda ;
_dcad > 8{_eeb =8;}else {_eeb =_dcad ;};_fed :=_aeae [0].GetByteIndex (_ebda ,_gfdd );for _fdda :=0;_fdda < _eeb ;_fdda ++{_gaa :=_fdda +_ebda ;_degc [_gfdd ][_gaa ]=0;for _fdgf :=0;_fdgf < _fgb ;_fdgf ++{_gacc ,_fcg :=_aeae [_fdgf ].GetByte (_fed );if _fcg !=nil {return nil ,_fcg ;
};_gba :=_gacc >>uint (7-_gaa &7);_bbgc :=_gba &1;_edbf :=1<<uint (_fdgf );_gafd :=int (_bbgc )*_edbf ;_degc [_gfdd ][_gaa ]+=_gafd ;};};};};return _degc ,nil ;};type TextRegion struct{_acgad _aa .StreamReader ;RegionInfo *RegionSegment ;SbrTemplate int8 ;
SbDsOffset int8 ;DefaultPixel int8 ;CombinationOperator _aad .CombinationOperator ;IsTransposed int8 ;ReferenceCorner int16 ;LogSBStrips int16 ;UseRefinement bool ;IsHuffmanEncoded bool ;SbHuffRSize int8 ;SbHuffRDY int8 ;SbHuffRDX int8 ;SbHuffRDHeight int8 ;
SbHuffRDWidth int8 ;SbHuffDT int8 ;SbHuffDS int8 ;SbHuffFS int8 ;SbrATX []int8 ;SbrATY []int8 ;NumberOfSymbolInstances uint32 ;_afbe int64 ;SbStrips int8 ;NumberOfSymbols uint32 ;RegionBitmap *_aad .Bitmap ;Symbols []*_aad .Bitmap ;_egeb *_gb .Decoder ;
_aece *GenericRefinementRegion ;_fdbcd *_gb .DecoderStats ;_dag *_gb .DecoderStats ;_aefe *_gb .DecoderStats ;_bedd *_gb .DecoderStats ;_aaba *_gb .DecoderStats ;_cafe *_gb .DecoderStats ;_daeb *_gb .DecoderStats ;_fabg *_gb .DecoderStats ;_affb *_gb .DecoderStats ;
_aagf *_gb .DecoderStats ;_dafgc *_gb .DecoderStats ;_cebe int8 ;_fggg *_gd .FixedSizeTable ;Header *Header ;_bdeb _gd .Tabler ;_aabab _gd .Tabler ;_ebdc _gd .Tabler ;_bbfbf _gd .Tabler ;_ggac _gd .Tabler ;_gdbd _gd .Tabler ;_fgge _gd .Tabler ;_efcb _gd .Tabler ;
_dfgf ,_adbdc map[int ]int ;_dfcaa []int ;_ebbc *_aad .Points ;_dbcf *_aad .Bitmaps ;_dceg *_cb .IntSlice ;_cgefd ,_acdf int ;_cfeb *_aad .Boxes ;};func (_ddge *SymbolDictionary )readRegionFlags ()error {var (_daeg uint64 ;_cfbb int ;);_ ,_fbac :=_ddge ._cfb .ReadBits (3);
if _fbac !=nil {return _fbac ;};_cfbb ,_fbac =_ddge ._cfb .ReadBit ();if _fbac !=nil {return _fbac ;};_ddge .SdrTemplate =int8 (_cfbb );_daeg ,_fbac =_ddge ._cfb .ReadBits (2);if _fbac !=nil {return _fbac ;};_ddge .SdTemplate =int8 (_daeg &0xf);_cfbb ,_fbac =_ddge ._cfb .ReadBit ();
if _fbac !=nil {return _fbac ;};if _cfbb ==1{_ddge ._agag =true ;};_cfbb ,_fbac =_ddge ._cfb .ReadBit ();if _fbac !=nil {return _fbac ;};if _cfbb ==1{_ddge ._ddec =true ;};_cfbb ,_fbac =_ddge ._cfb .ReadBit ();if _fbac !=nil {return _fbac ;};if _cfbb ==1{_ddge .SdHuffAggInstanceSelection =true ;
};_cfbb ,_fbac =_ddge ._cfb .ReadBit ();if _fbac !=nil {return _fbac ;};_ddge .SdHuffBMSizeSelection =int8 (_cfbb );_daeg ,_fbac =_ddge ._cfb .ReadBits (2);if _fbac !=nil {return _fbac ;};_ddge .SdHuffDecodeWidthSelection =int8 (_daeg &0xf);_daeg ,_fbac =_ddge ._cfb .ReadBits (2);
if _fbac !=nil {return _fbac ;};_ddge .SdHuffDecodeHeightSelection =int8 (_daeg &0xf);_cfbb ,_fbac =_ddge ._cfb .ReadBit ();if _fbac !=nil {return _fbac ;};if _cfbb ==1{_ddge .UseRefinementAggregation =true ;};_cfbb ,_fbac =_ddge ._cfb .ReadBit ();if _fbac !=nil {return _fbac ;
};if _cfbb ==1{_ddge .IsHuffmanEncoded =true ;};return nil ;};func (_eadg *Header )GetSegmentData ()(Segmenter ,error ){var _aaag Segmenter ;if _eadg .SegmentData !=nil {_aaag =_eadg .SegmentData ;};if _aaag ==nil {_gfbg ,_dbad :=_fdfd [_eadg .Type ];if !_dbad {return nil ,_ae .Errorf ("\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0073\u002f\u0020\u0025\u0064\u0020\u0063\u0072e\u0061t\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e\u0020",_eadg .Type ,_eadg .Type );
};_aaag =_gfbg ();_ba .Log .Trace ("\u005b\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u0020\u0061\u0074\u0020\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0030\u0034\u0058",_eadg .SegmentNumber ,_eadg .SegmentDataStartOffset );
_cffc ,_cbca :=_eadg .subInputReader ();if _cbca !=nil {return nil ,_cbca ;};if _adaf :=_aaag .Init (_eadg ,_cffc );_adaf !=nil {_ba .Log .Debug ("\u0049\u006e\u0069\u0074 \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076 \u0066o\u0072\u0020\u0074\u0079\u0070\u0065\u003a \u0025\u0054",_adaf ,_aaag );
return nil ,_adaf ;};_eadg .SegmentData =_aaag ;};return _aaag ,nil ;};func (_gbbf *SymbolDictionary )getUserTable (_ggbc int )(_gd .Tabler ,error ){var _acadf int ;for _ ,_dbae :=range _gbbf .Header .RTSegments {if _dbae .Type ==53{if _acadf ==_ggbc {_edcf ,_ccff :=_dbae .GetSegmentData ();
if _ccff !=nil {return nil ,_ccff ;};_daddd :=_edcf .(_gd .BasicTabler );return _gd .NewEncodedTable (_daddd );};_acadf ++;};};return nil ,nil ;};func (_caa *HalftoneRegion )computeSegmentDataStructure ()error {_caa .DataOffset =_caa ._dfb .StreamPosition ();
_caa .DataHeaderLength =_caa .DataOffset -_caa .DataHeaderOffset ;_caa .DataLength =int64 (_caa ._dfb .Length ())-_caa .DataHeaderLength ;return nil ;};func _ggaa (_cacc _aa .StreamReader ,_baac *Header )*GenericRefinementRegion {return &GenericRefinementRegion {_ce :_cacc ,RegionInfo :NewRegionSegment (_cacc ),_dc :_baac ,_cgd :&template0 {},_ee :&template1 {}};
};func (_eged *TextRegion )decodeDT ()(_ggeb int64 ,_afdf error ){if _eged .IsHuffmanEncoded {if _eged .SbHuffDT ==3{_ggeb ,_afdf =_eged ._ebdc .Decode (_eged ._acgad );if _afdf !=nil {return 0,_afdf ;};}else {var _eada _gd .Tabler ;_eada ,_afdf =_gd .GetStandardTable (11+int (_eged .SbHuffDT ));
if _afdf !=nil {return 0,_afdf ;};_ggeb ,_afdf =_eada .Decode (_eged ._acgad );if _afdf !=nil {return 0,_afdf ;};};}else {var _bfgd int32 ;_bfgd ,_afdf =_eged ._egeb .DecodeInt (_eged ._fdbcd );if _afdf !=nil {return ;};_ggeb =int64 (_bfgd );};_ggeb *=int64 (_eged .SbStrips );
return _ggeb ,nil ;};func (_feea *PageInformationSegment )Encode (w _aa .BinaryWriter )(_bddf int ,_bcdf error ){const _abc ="\u0050\u0061g\u0065\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u002e\u0045\u006eco\u0064\u0065";
_gadg :=make ([]byte ,4);_e .BigEndian .PutUint32 (_gadg ,uint32 (_feea .PageBMWidth ));_bddf ,_bcdf =w .Write (_gadg );if _bcdf !=nil {return _bddf ,_eb .Wrap (_bcdf ,_abc ,"\u0077\u0069\u0064t\u0068");};_e .BigEndian .PutUint32 (_gadg ,uint32 (_feea .PageBMHeight ));
var _eagfa int ;_eagfa ,_bcdf =w .Write (_gadg );if _bcdf !=nil {return _eagfa +_bddf ,_eb .Wrap (_bcdf ,_abc ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_bddf +=_eagfa ;_e .BigEndian .PutUint32 (_gadg ,uint32 (_feea .ResolutionX ));_eagfa ,_bcdf =w .Write (_gadg );
if _bcdf !=nil {return _eagfa +_bddf ,_eb .Wrap (_bcdf ,_abc ,"\u0078\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_bddf +=_eagfa ;_e .BigEndian .PutUint32 (_gadg ,uint32 (_feea .ResolutionY ));if _eagfa ,_bcdf =w .Write (_gadg );_bcdf !=nil {return _eagfa +_bddf ,_eb .Wrap (_bcdf ,_abc ,"\u0079\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");
};_bddf +=_eagfa ;if _bcdf =_feea .encodeFlags (w );_bcdf !=nil {return _bddf ,_eb .Wrap (_bcdf ,_abc ,"");};_bddf ++;if _eagfa ,_bcdf =_feea .encodeStripingInformation (w );_bcdf !=nil {return _bddf ,_eb .Wrap (_bcdf ,_abc ,"");};_bddf +=_eagfa ;return _bddf ,nil ;
};func (_bedde *TextRegion )decodeDfs ()(int64 ,error ){if _bedde .IsHuffmanEncoded {if _bedde .SbHuffFS ==3{if _bedde ._bdeb ==nil {var _dbdd error ;_bedde ._bdeb ,_dbdd =_bedde .getUserTable (0);if _dbdd !=nil {return 0,_dbdd ;};};return _bedde ._bdeb .Decode (_bedde ._acgad );
};_gegc ,_beaff :=_gd .GetStandardTable (6+int (_bedde .SbHuffFS ));if _beaff !=nil {return 0,_beaff ;};return _gegc .Decode (_bedde ._acgad );};_dgca ,_ecda :=_bedde ._egeb .DecodeInt (_bedde ._dag );if _ecda !=nil {return 0,_ecda ;};return int64 (_dgca ),nil ;
};type template0 struct{};func (_ceeda *TextRegion )decodeRdw ()(int64 ,error ){const _dcfaf ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064w";if _ceeda .IsHuffmanEncoded {if _ceeda .SbHuffRDWidth ==3{if _ceeda ._bbfbf ==nil {var (_fcee int ;_edadf error ;
);if _ceeda .SbHuffFS ==3{_fcee ++;};if _ceeda .SbHuffDS ==3{_fcee ++;};if _ceeda .SbHuffDT ==3{_fcee ++;};_ceeda ._bbfbf ,_edadf =_ceeda .getUserTable (_fcee );if _edadf !=nil {return 0,_eb .Wrap (_edadf ,_dcfaf ,"");};};return _ceeda ._bbfbf .Decode (_ceeda ._acgad );
};_ggdfe ,_ffgb :=_gd .GetStandardTable (14+int (_ceeda .SbHuffRDWidth ));if _ffgb !=nil {return 0,_eb .Wrap (_ffgb ,_dcfaf ,"");};return _ggdfe .Decode (_ceeda ._acgad );};_ebbcf ,_ccgf :=_ceeda ._egeb .DecodeInt (_ceeda ._cafe );if _ccgf !=nil {return 0,_eb .Wrap (_ccgf ,_dcfaf ,"");
};return int64 (_ebbcf ),nil ;};func (_bacg *SymbolDictionary )readNumberOfNewSymbols ()error {_eebb ,_gebf :=_bacg ._cfb .ReadBits (32);if _gebf !=nil {return _gebf ;};_bacg .NumberOfNewSymbols =uint32 (_eebb &_a .MaxUint32 );return nil ;};func (_efed *TextRegion )decodeIds ()(int64 ,error ){const _edee ="\u0064e\u0063\u006f\u0064\u0065\u0049\u0064s";
if _efed .IsHuffmanEncoded {if _efed .SbHuffDS ==3{if _efed ._aabab ==nil {_egad :=0;if _efed .SbHuffFS ==3{_egad ++;};var _affd error ;_efed ._aabab ,_affd =_efed .getUserTable (_egad );if _affd !=nil {return 0,_eb .Wrap (_affd ,_edee ,"");};};return _efed ._aabab .Decode (_efed ._acgad );
};_bggc ,_bece :=_gd .GetStandardTable (8+int (_efed .SbHuffDS ));if _bece !=nil {return 0,_eb .Wrap (_bece ,_edee ,"");};return _bggc .Decode (_efed ._acgad );};_deab ,_febg :=_efed ._egeb .DecodeInt (_efed ._aefe );if _febg !=nil {return 0,_eb .Wrap (_febg ,_edee ,"\u0063\u0078\u0049\u0041\u0044\u0053");
};return int64 (_deab ),nil ;};func (_gfbc *SymbolDictionary )getSbSymCodeLen ()int8 {_bagb :=int8 (_a .Ceil (_a .Log (float64 (_gfbc ._aaab +_gfbc .NumberOfNewSymbols ))/_a .Log (2)));if _gfbc .IsHuffmanEncoded &&_bagb < 1{return 1;};return _bagb ;};func (_fda *GenericRefinementRegion )decodeOptimized (_fde ,_gbb ,_ag ,_aee ,_edf ,_fec ,_cab int )error {var (_edc error ;
_adf int ;_dab int ;);_bf :=_fde -int (_fda .ReferenceDY );if _eg :=int (-_fda .ReferenceDX );_eg > 0{_adf =_eg ;};_cbg :=_fda .ReferenceBitmap .GetByteIndex (_adf ,_bf );if _fda .ReferenceDX > 0{_dab =int (_fda .ReferenceDX );};_dg :=_fda .RegionBitmap .GetByteIndex (_dab ,_fde );
switch _fda .TemplateID {case 0:_edc =_fda .decodeTemplate (_fde ,_gbb ,_ag ,_aee ,_edf ,_fec ,_cab ,_dg ,_bf ,_cbg ,_fda ._cgd );case 1:_edc =_fda .decodeTemplate (_fde ,_gbb ,_ag ,_aee ,_edf ,_fec ,_cab ,_dg ,_bf ,_cbg ,_fda ._ee );};return _edc ;};func (_fgcgg *GenericRegion )setParametersMMR (_ddcd bool ,_fdcf ,_ggg int64 ,_dde ,_dca uint32 ,_acb byte ,_cecg ,_fdd bool ,_afaf ,_fae []int8 ){_fgcgg .DataOffset =_fdcf ;
_fgcgg .DataLength =_ggg ;_fgcgg .RegionSegment =&RegionSegment {};_fgcgg .RegionSegment .BitmapHeight =_dde ;_fgcgg .RegionSegment .BitmapWidth =_dca ;_fgcgg .GBTemplate =_acb ;_fgcgg .IsMMREncoded =_ddcd ;_fgcgg .IsTPGDon =_cecg ;_fgcgg .GBAtX =_afaf ;
_fgcgg .GBAtY =_fae ;};func (_afgd *SymbolDictionary )encodeSymbols (_ggcb _aa .BinaryWriter )(_abcbb int ,_gbgbf error ){const _agf ="\u0065\u006e\u0063o\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c";_baca :=_cg .New ();_baca .Init ();_eegac ,_gbgbf :=_afgd ._ddceg .SelectByIndexes (_afgd ._dbcdd );
if _gbgbf !=nil {return 0,_eb .Wrap (_gbgbf ,_agf ,"\u0069n\u0069\u0074\u0069\u0061\u006c");};_dbdf :=map[*_aad .Bitmap ]int {};for _ecaag ,_dcgf :=range _eegac .Values {_dbdf [_dcgf ]=_ecaag ;};_eegac .SortByHeight ();var _fdcb ,_ddgf int ;_afbc ,_gbgbf :=_eegac .GroupByHeight ();
if _gbgbf !=nil {return 0,_eb .Wrap (_gbgbf ,_agf ,"");};for _ ,_fcad :=range _afbc .Values {_cfab :=_fcad .Values [0].Height ;_bcag :=_cfab -_fdcb ;if _gbgbf =_baca .EncodeInteger (_cg .IADH ,_bcag );_gbgbf !=nil {return 0,_eb .Wrapf (_gbgbf ,_agf ,"\u0049\u0041\u0044\u0048\u0020\u0066\u006f\u0072\u0020\u0064\u0068\u003a \u0027\u0025\u0064\u0027",_bcag );
};_fdcb =_cfab ;_baf ,_fcfa :=_fcad .GroupByWidth ();if _fcfa !=nil {return 0,_eb .Wrapf (_fcfa ,_agf ,"\u0068\u0065\u0069g\u0068\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_cfab );};var _dadd int ;for _ ,_ccea :=range _baf .Values {for _ ,_daag :=range _ccea .Values {_bbfa :=_daag .Width ;
_gcfe :=_bbfa -_dadd ;if _fcfa =_baca .EncodeInteger (_cg .IADW ,_gcfe );_fcfa !=nil {return 0,_eb .Wrapf (_fcfa ,_agf ,"\u0049\u0041\u0044\u0057\u0020\u0066\u006f\u0072\u0020\u0064\u0077\u003a \u0027\u0025\u0064\u0027",_gcfe );};_dadd +=_gcfe ;if _fcfa =_baca .EncodeBitmap (_daag ,false );
_fcfa !=nil {return 0,_eb .Wrapf (_fcfa ,_agf ,"H\u0065i\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u0020W\u0069\u0064\u0074\u0068: \u0025\u0064",_cfab ,_bbfa );};_deee :=_dbdf [_daag ];_afgd ._efcg [_deee ]=_ddgf ;_ddgf ++;};};if _fcfa =_baca .EncodeOOB (_cg .IADW );
_fcfa !=nil {return 0,_eb .Wrap (_fcfa ,_agf ,"\u0049\u0041\u0044\u0057");};};if _gbgbf =_baca .EncodeInteger (_cg .IAEX ,0);_gbgbf !=nil {return 0,_eb .Wrap (_gbgbf ,_agf ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};if _gbgbf =_baca .EncodeInteger (_cg .IAEX ,len (_afgd ._dbcdd ));_gbgbf !=nil {return 0,_eb .Wrap (_gbgbf ,_agf ,"\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0073\u0079m\u0062\u006f\u006c\u0073");};_baca .Final ();_ggee ,_gbgbf :=_baca .WriteTo (_ggcb );
if _gbgbf !=nil {return 0,_eb .Wrap (_gbgbf ,_agf ,"\u0077\u0072i\u0074\u0069\u006e\u0067 \u0065\u006ec\u006f\u0064\u0065\u0072\u0020\u0063\u006f\u006et\u0065\u0078\u0074\u0020\u0074\u006f\u0020\u0027\u0077\u0027\u0020\u0077r\u0069\u0074\u0065\u0072");
};return int (_ggee ),nil ;};func (_bbb *Header )pageSize ()uint {if _bbb .PageAssociation <=255{return 1;};return 4;};func (_debe *Header )Encode (w _aa .BinaryWriter )(_gggb int ,_egc error ){const _ddd ="\u0048\u0065\u0061d\u0065\u0072\u002e\u0057\u0072\u0069\u0074\u0065";
var _dade _aa .BinaryWriter ;_ba .Log .Trace ("\u005b\u0053\u0045G\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045\u0052\u005d[\u0045\u004e\u0043\u004f\u0044\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _egc !=nil {_ba .Log .Trace ("[\u0053\u0045\u0047\u004d\u0045\u004eT\u002d\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0045\u004e\u0043\u004f\u0044E\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020%\u0076",_egc );
}else {_ba .Log .Trace ("\u005b\u0053\u0045\u0047ME\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0025\u0076",_debe );_ba .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045N\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u005b\u0045\u004e\u0043O\u0044\u0045\u005d\u0020\u0046\u0069\u006ei\u0073\u0068\u0065\u0064");
};}();w .FinishByte ();if _debe .SegmentData !=nil {_gbea ,_dfc :=_debe .SegmentData .(SegmentEncoder );if !_dfc {return 0,_eb .Errorf (_ddd ,"\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0064\u006f\u0065s\u006e\u0027\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074 \u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0045\u006e\u0063\u006f\u0064er\u0020\u0069\u006e\u0074\u0065\u0072\u0066\u0061\u0063\u0065",_debe .SegmentData );
};_dade =_aa .BufferedMSB ();_gggb ,_egc =_gbea .Encode (_dade );if _egc !=nil {return 0,_eb .Wrap (_egc ,_ddd ,"");};_debe .SegmentDataLength =uint64 (_gggb );};if _debe .pageSize ()==4{_debe .PageAssociationFieldSize =true ;};var _gcae int ;_gcae ,_egc =_debe .writeSegmentNumber (w );
if _egc !=nil {return 0,_eb .Wrap (_egc ,_ddd ,"");};_gggb +=_gcae ;if _egc =_debe .writeFlags (w );_egc !=nil {return _gggb ,_eb .Wrap (_egc ,_ddd ,"");};_gggb ++;_gcae ,_egc =_debe .writeReferredToCount (w );if _egc !=nil {return 0,_eb .Wrap (_egc ,_ddd ,"");
};_gggb +=_gcae ;_gcae ,_egc =_debe .writeReferredToSegments (w );if _egc !=nil {return 0,_eb .Wrap (_egc ,_ddd ,"");};_gggb +=_gcae ;_gcae ,_egc =_debe .writeSegmentPageAssociation (w );if _egc !=nil {return 0,_eb .Wrap (_egc ,_ddd ,"");};_gggb +=_gcae ;
_gcae ,_egc =_debe .writeSegmentDataLength (w );if _egc !=nil {return 0,_eb .Wrap (_egc ,_ddd ,"");};_gggb +=_gcae ;_debe .HeaderLength =int64 (_gggb )-int64 (_debe .SegmentDataLength );if _dade !=nil {if _ ,_egc =w .Write (_dade .Data ());_egc !=nil {return _gggb ,_eb .Wrap (_egc ,_ddd ,"\u0077r\u0069t\u0065\u0020\u0073\u0065\u0067m\u0065\u006et\u0020\u0064\u0061\u0074\u0061");
};};return _gggb ,nil ;};func (_ffg *SymbolDictionary )retrieveImportSymbols ()error {for _ ,_geaec :=range _ffg .Header .RTSegments {if _geaec .Type ==0{_fcafe ,_bffb :=_geaec .GetSegmentData ();if _bffb !=nil {return _bffb ;};_dgfb ,_adcg :=_fcafe .(*SymbolDictionary );
if !_adcg {return _ae .Errorf ("\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0044\u0061\u0074a\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u003a\u0020%\u0054",_fcafe );
};_fcdfa ,_bffb :=_dgfb .GetDictionary ();if _bffb !=nil {return _ae .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064 \u0073\u0065\u0067m\u0065\u006e\u0074 \u0077\u0069t\u0068\u0020\u0069\u006e\u0064\u0065x\u003a %\u0064\u0020\u0067\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0073",_geaec .SegmentNumber ,_bffb .Error ());
};_ffg ._ebg =append (_ffg ._ebg ,_fcdfa ...);_ffg ._aaab +=_dgfb .NumberOfExportedSymbols ;};};return nil ;};func (_aebd *RegionSegment )Encode (w _aa .BinaryWriter )(_fagf int ,_dbg error ){const _bded ="R\u0065g\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065n\u0074\u002e\u0045\u006eco\u0064\u0065";
_bcaa :=make ([]byte ,4);_e .BigEndian .PutUint32 (_bcaa ,_aebd .BitmapWidth );_fagf ,_dbg =w .Write (_bcaa );if _dbg !=nil {return 0,_eb .Wrap (_dbg ,_bded ,"\u0057\u0069\u0064t\u0068");};_e .BigEndian .PutUint32 (_bcaa ,_aebd .BitmapHeight );var _bdeg int ;
_bdeg ,_dbg =w .Write (_bcaa );if _dbg !=nil {return 0,_eb .Wrap (_dbg ,_bded ,"\u0048\u0065\u0069\u0067\u0068\u0074");};_fagf +=_bdeg ;_e .BigEndian .PutUint32 (_bcaa ,_aebd .XLocation );_bdeg ,_dbg =w .Write (_bcaa );if _dbg !=nil {return 0,_eb .Wrap (_dbg ,_bded ,"\u0058L\u006f\u0063\u0061\u0074\u0069\u006fn");
};_fagf +=_bdeg ;_e .BigEndian .PutUint32 (_bcaa ,_aebd .YLocation );_bdeg ,_dbg =w .Write (_bcaa );if _dbg !=nil {return 0,_eb .Wrap (_dbg ,_bded ,"\u0059L\u006f\u0063\u0061\u0074\u0069\u006fn");};_fagf +=_bdeg ;if _dbg =w .WriteByte (byte (_aebd .CombinaionOperator )&0x07);
_dbg !=nil {return 0,_eb .Wrap (_dbg ,_bded ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};_fagf ++;return _fagf ,nil ;};func (_bcee *GenericRegion )setParametersWithAt (_bbgg bool ,_bfeb byte ,_eda ,_bbdb bool ,_bdgf ,_fgcg []int8 ,_fcdc ,_ccdg uint32 ,_ebbg *_gb .DecoderStats ,_cad *_gb .Decoder ){_bcee .IsMMREncoded =_bbgg ;
_bcee .GBTemplate =_bfeb ;_bcee .IsTPGDon =_eda ;_bcee .GBAtX =_bdgf ;_bcee .GBAtY =_fgcg ;_bcee .RegionSegment .BitmapHeight =_ccdg ;_bcee .RegionSegment .BitmapWidth =_fcdc ;_bcee ._efd =nil ;_bcee .Bitmap =nil ;if _ebbg !=nil {_bcee ._bbd =_ebbg ;};
if _cad !=nil {_bcee ._fbe =_cad ;};_ba .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049O\u004e\u005d\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073\u0020\u0053\u0044\u0041t\u003a\u0020\u0025\u0073",_bcee );
};func (_gfec *PageInformationSegment )readDefaultPixelValue ()error {_gabb ,_ceba :=_gfec ._cgbc .ReadBit ();if _ceba !=nil {return _ceba ;};_gfec .DefaultPixelValue =uint8 (_gabb &0xf);return nil ;};func (_gdeb *PageInformationSegment )String ()string {_bgeb :=&_g .Builder {};
_bgeb .WriteString ("\u000a\u005b\u0050\u0041G\u0045\u002d\u0049\u004e\u0046\u004f\u0052\u004d\u0041\u0054I\u004fN\u002d\u0053\u0045\u0047\u004d\u0045\u004eT\u005d\u000a");_bgeb .WriteString (_ae .Sprintf ("\u0009\u002d \u0042\u004d\u0048e\u0069\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u000a",_gdeb .PageBMHeight ));
_bgeb .WriteString (_ae .Sprintf ("\u0009-\u0020B\u004d\u0057\u0069\u0064\u0074\u0068\u003a\u0020\u0025\u0064\u000a",_gdeb .PageBMWidth ));_bgeb .WriteString (_ae .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0058\u003a\u0020\u0025\u0064\u000a",_gdeb .ResolutionX ));
_bgeb .WriteString (_ae .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0059\u003a\u0020\u0025\u0064\u000a",_gdeb .ResolutionY ));_bgeb .WriteString (_ae .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0073\u000a",_gdeb ._caca ));
_bgeb .WriteString (_ae .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006eO\u0070\u0065\u0072\u0061\u0074\u006f\u0072O\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025v\u000a",_gdeb ._adbdg ));_bgeb .WriteString (_ae .Sprintf ("\u0009-\u0020I\u0073\u004c\u006f\u0073\u0073l\u0065\u0073s\u003a\u0020\u0025\u0076\u000a",_gdeb .IsLossless ));
_bgeb .WriteString (_ae .Sprintf ("\u0009\u002d\u0020R\u0065\u0071\u0075\u0069r\u0065\u0073\u0041\u0075\u0078\u0069\u006ci\u0061\u0072\u0079\u0042\u0075\u0066\u0066\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_gdeb ._adac ));_bgeb .WriteString (_ae .Sprintf ("\u0009\u002d\u0020M\u0069\u0067\u0068\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0052e\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0076\u000a",_gdeb ._dbfb ));
_bgeb .WriteString (_ae .Sprintf ("\u0009\u002d\u0020\u0049\u0073\u0053\u0074\u0072\u0069\u0070\u0065\u0064:\u0020\u0025\u0076\u000a",_gdeb .IsStripe ));_bgeb .WriteString (_ae .Sprintf ("\t\u002d\u0020\u004d\u0061xS\u0074r\u0069\u0070\u0065\u0053\u0069z\u0065\u003a\u0020\u0025\u0076\u000a",_gdeb .MaxStripeSize ));
return _bgeb .String ();};func (_dbb *GenericRefinementRegion )decodeTypicalPredictedLineTemplate1 (_gff ,_egd ,_cd ,_bbfc ,_acc ,_gea ,_ede ,_ccd ,_efe int )(_cac error ){var (_fa ,_aeg int ;_feb ,_daf int ;_afdd ,_bed int ;_gbg byte ;);if _gff > 0{_gbg ,_cac =_dbb .RegionBitmap .GetByte (_ede -_cd );
if _cac !=nil {return ;};_feb =int (_gbg );};if _ccd > 0&&_ccd <=_dbb .ReferenceBitmap .Height {_gbg ,_cac =_dbb .ReferenceBitmap .GetByte (_efe -_bbfc +_gea );if _cac !=nil {return ;};_daf =int (_gbg )<<2;};if _ccd >=0&&_ccd < _dbb .ReferenceBitmap .Height {_gbg ,_cac =_dbb .ReferenceBitmap .GetByte (_efe +_gea );
if _cac !=nil {return ;};_afdd =int (_gbg );};if _ccd > -2&&_ccd < _dbb .ReferenceBitmap .Height -1{_gbg ,_cac =_dbb .ReferenceBitmap .GetByte (_efe +_bbfc +_gea );if _cac !=nil {return ;};_bed =int (_gbg );};_fa =((_feb >>5)&0x6)|((_bed >>2)&0x30)|(_afdd &0xc0)|(_daf &0x200);
_aeg =((_bed >>2)&0x70)|(_afdd &0xc0)|(_daf &0x700);var _cfa int ;for _fcf :=0;_fcf < _acc ;_fcf =_cfa {var (_ea int ;_ecg int ;);_cfa =_fcf +8;if _ea =_egd -_fcf ;_ea > 8{_ea =8;};_dga :=_cfa < _egd ;_gef :=_cfa < _dbb .ReferenceBitmap .Width ;_faa :=_gea +1;
if _gff > 0{_gbg =0;if _dga {_gbg ,_cac =_dbb .RegionBitmap .GetByte (_ede -_cd +1);if _cac !=nil {return ;};};_feb =(_feb <<8)|int (_gbg );};if _ccd > 0&&_ccd <=_dbb .ReferenceBitmap .Height {var _ggc int ;if _gef {_gbg ,_cac =_dbb .ReferenceBitmap .GetByte (_efe -_bbfc +_faa );
if _cac !=nil {return ;};_ggc =int (_gbg )<<2;};_daf =(_daf <<8)|_ggc ;};if _ccd >=0&&_ccd < _dbb .ReferenceBitmap .Height {_gbg =0;if _gef {_gbg ,_cac =_dbb .ReferenceBitmap .GetByte (_efe +_faa );if _cac !=nil {return ;};};_afdd =(_afdd <<8)|int (_gbg );
};if _ccd > -2&&_ccd < (_dbb .ReferenceBitmap .Height -1){_gbg =0;if _gef {_gbg ,_cac =_dbb .ReferenceBitmap .GetByte (_efe +_bbfc +_faa );if _cac !=nil {return ;};};_bed =(_bed <<8)|int (_gbg );};for _eab :=0;_eab < _ea ;_eab ++{var _gdb int ;_adba :=(_aeg >>4)&0x1ff;
switch _adba {case 0x1ff:_gdb =1;case 0x00:_gdb =0;default:_dbb ._ac .SetIndex (int32 (_fa ));_gdb ,_cac =_dbb ._eed .DecodeBit (_dbb ._ac );if _cac !=nil {return ;};};_febd :=uint (7-_eab );_ecg |=_gdb <<_febd ;_fa =((_fa &0x0d6)<<1)|_gdb |(_feb >>_febd +5)&0x002|((_bed >>_febd +2)&0x010)|((_afdd >>_febd )&0x040)|((_daf >>_febd )&0x200);
_aeg =((_aeg &0xdb)<<1)|((_bed >>_febd +2)&0x010)|((_afdd >>_febd )&0x080)|((_daf >>_febd )&0x400);};_cac =_dbb .RegionBitmap .SetByte (_ede ,byte (_ecg ));if _cac !=nil {return ;};_ede ++;_efe ++;};return nil ;};func (_adcf *PatternDictionary )computeSegmentDataStructure ()error {_adcf .DataOffset =_adcf ._gbeda .StreamPosition ();
_adcf .DataHeaderLength =_adcf .DataOffset -_adcf .DataHeaderOffset ;_adcf .DataLength =int64 (_adcf ._gbeda .Length ())-_adcf .DataHeaderLength ;return nil ;};type SymbolDictionary struct{_cfb _aa .StreamReader ;SdrTemplate int8 ;SdTemplate int8 ;_agag bool ;
_ddec bool ;SdHuffAggInstanceSelection bool ;SdHuffBMSizeSelection int8 ;SdHuffDecodeWidthSelection int8 ;SdHuffDecodeHeightSelection int8 ;UseRefinementAggregation bool ;IsHuffmanEncoded bool ;SdATX []int8 ;SdATY []int8 ;SdrATX []int8 ;SdrATY []int8 ;
NumberOfExportedSymbols uint32 ;NumberOfNewSymbols uint32 ;Header *Header ;_aaab uint32 ;_ebg []*_aad .Bitmap ;_gdcd uint32 ;_dced []*_aad .Bitmap ;_egdb _gd .Tabler ;_abg _gd .Tabler ;_afb _gd .Tabler ;_eagg _gd .Tabler ;_cbdc []*_aad .Bitmap ;_bbge []*_aad .Bitmap ;
_caff *_gb .Decoder ;_acee *TextRegion ;_egec *GenericRegion ;_fge *GenericRefinementRegion ;_gfffd *_gb .DecoderStats ;_egfd *_gb .DecoderStats ;_fadg *_gb .DecoderStats ;_dgbg *_gb .DecoderStats ;_edga *_gb .DecoderStats ;_dgdd *_gb .DecoderStats ;_aafd *_gb .DecoderStats ;
_fffb *_gb .DecoderStats ;_agbe *_gb .DecoderStats ;_dedb int8 ;_ddceg *_aad .Bitmaps ;_dbcdd []int ;_efcg map[int ]int ;_gbedac bool ;};func (_egea Type )String ()string {switch _egea {case TSymbolDictionary :return "\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079";
case TIntermediateTextRegion :return "\u0049n\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020T\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateTextRegion :return "I\u006d\u006d\u0065\u0064ia\u0074e\u0020\u0054\u0065\u0078\u0074 \u0052\u0065\u0067\u0069\u006f\u006e";
case TImmediateLosslessTextRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020L\u006f\u0073\u0073\u006c\u0065\u0073\u0073 \u0054\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TPatternDictionary :return "\u0050a\u0074t\u0065\u0072\u006e\u0020\u0044i\u0063\u0074i\u006f\u006e\u0061\u0072\u0079";
case TIntermediateHalftoneRegion :return "\u0049\u006e\u0074\u0065r\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0048\u0061l\u0066t\u006f\u006e\u0065\u0020\u0052\u0065\u0067i\u006f\u006e";case TImmediateHalftoneRegion :return "\u0049m\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u0048\u0061l\u0066t\u006fn\u0065\u0020\u0052\u0065\u0067\u0069\u006fn";
case TImmediateLosslessHalftoneRegion :return "\u0049\u006d\u006ded\u0069\u0061\u0074\u0065\u0020\u004c\u006f\u0073\u0073l\u0065s\u0073 \u0048a\u006c\u0066\u0074\u006f\u006e\u0065\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TIntermediateGenericRegion :return "I\u006e\u0074\u0065\u0072\u006d\u0065d\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020R\u0065g\u0069\u006f\u006e";
case TImmediateGenericRegion :return "\u0049m\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006ee\u0072\u0069\u0063\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessGenericRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u004c\u006f\u0073\u0073\u006c\u0065\u0073\u0073\u0020\u0047e\u006e\u0065\u0072\u0069\u0063\u0020\u0052e\u0067\u0069\u006f\u006e";
case TIntermediateGenericRefinementRegion :return "\u0049\u006e\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0020\u0052\u0065\u0066i\u006e\u0065\u006d\u0065\u006et\u0020\u0052e\u0067\u0069\u006f\u006e";
case TImmediateGenericRefinementRegion :return "I\u006d\u006d\u0065\u0064\u0069\u0061t\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020\u0052\u0065\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020\u0052\u0065\u0067\u0069o\u006e";case TImmediateLosslessGenericRefinementRegion :return "\u0049m\u006d\u0065d\u0069\u0061\u0074\u0065 \u004c\u006f\u0073s\u006c\u0065\u0073\u0073\u0020\u0047\u0065\u006e\u0065ri\u0063\u0020\u0052e\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020R\u0065\u0067i\u006f\u006e";
case TPageInformation :return "\u0050\u0061g\u0065\u0020\u0049n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e";case TEndOfPage :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0050\u0061\u0067\u0065";case TEndOfStrip :return "\u0045\u006e\u0064 \u004f\u0066\u0020\u0053\u0074\u0072\u0069\u0070";
case TEndOfFile :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0046\u0069\u006c\u0065";case TProfiles :return "\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0073";case TTables :return "\u0054\u0061\u0062\u006c\u0065\u0073";case TExtension :return "\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn";
case TBitmap :return "\u0042\u0069\u0074\u006d\u0061\u0070";};return "I\u006ev\u0061\u006c\u0069\u0064\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0020Ki\u006e\u0064";};type GenericRegion struct{_cdb _aa .StreamReader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;
DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;UseExtTemplates bool ;IsTPGDon bool ;GBTemplate byte ;IsMMREncoded bool ;UseMMR bool ;GBAtX []int8 ;GBAtY []int8 ;GBAtOverride []bool ;_degd bool ;Bitmap *_aad .Bitmap ;_fbe *_gb .Decoder ;
_bbd *_gb .DecoderStats ;_efd *_da .Decoder ;};func (_aabg *SymbolDictionary )Encode (w _aa .BinaryWriter )(_aeed int ,_agcc error ){const _decf ="\u0053\u0079\u006dbo\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0045\u006e\u0063\u006f\u0064\u0065";
if _aabg ==nil {return 0,_eb .Error (_decf ,"\u0073\u0079m\u0062\u006f\u006c\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066in\u0065\u0064");};if _aeed ,_agcc =_aabg .encodeFlags (w );_agcc !=nil {return _aeed ,_eb .Wrap (_agcc ,_decf ,"");
};_acba ,_agcc :=_aabg .encodeATFlags (w );if _agcc !=nil {return _aeed ,_eb .Wrap (_agcc ,_decf ,"");};_aeed +=_acba ;if _acba ,_agcc =_aabg .encodeRefinementATFlags (w );_agcc !=nil {return _aeed ,_eb .Wrap (_agcc ,_decf ,"");};_aeed +=_acba ;if _acba ,_agcc =_aabg .encodeNumSyms (w );
_agcc !=nil {return _aeed ,_eb .Wrap (_agcc ,_decf ,"");};_aeed +=_acba ;if _acba ,_agcc =_aabg .encodeSymbols (w );_agcc !=nil {return _aeed ,_eb .Wrap (_agcc ,_decf ,"");};_aeed +=_acba ;return _aeed ,nil ;};func (_edbd *SymbolDictionary )huffDecodeRefAggNInst ()(int64 ,error ){if !_edbd .SdHuffAggInstanceSelection {_fgfd ,_gbfg :=_gd .GetStandardTable (1);
if _gbfg !=nil {return 0,_gbfg ;};return _fgfd .Decode (_edbd ._cfb );};if _edbd ._eagg ==nil {var (_egfc int ;_fbb error ;);if _edbd .SdHuffDecodeHeightSelection ==3{_egfc ++;};if _edbd .SdHuffDecodeWidthSelection ==3{_egfc ++;};if _edbd .SdHuffBMSizeSelection ==3{_egfc ++;
};_edbd ._eagg ,_fbb =_edbd .getUserTable (_egfc );if _fbb !=nil {return 0,_fbb ;};};return _edbd ._eagg .Decode (_edbd ._cfb );};func (_bdac *Header )CleanSegmentData (){if _bdac .SegmentData !=nil {_bdac .SegmentData =nil ;};};func (_fadgf *TextRegion )blit (_aggcg *_aad .Bitmap ,_becg int64 )error {if _fadgf .IsTransposed ==0&&(_fadgf .ReferenceCorner ==2||_fadgf .ReferenceCorner ==3){_fadgf ._afbe +=int64 (_aggcg .Width -1);
}else if _fadgf .IsTransposed ==1&&(_fadgf .ReferenceCorner ==0||_fadgf .ReferenceCorner ==2){_fadgf ._afbe +=int64 (_aggcg .Height -1);};_efcgd :=_fadgf ._afbe ;if _fadgf .IsTransposed ==1{_efcgd ,_becg =_becg ,_efcgd ;};switch _fadgf .ReferenceCorner {case 0:_becg -=int64 (_aggcg .Height -1);
case 2:_becg -=int64 (_aggcg .Height -1);_efcgd -=int64 (_aggcg .Width -1);case 3:_efcgd -=int64 (_aggcg .Width -1);};_dbefc :=_aad .Blit (_aggcg ,_fadgf .RegionBitmap ,int (_efcgd ),int (_becg ),_fadgf .CombinationOperator );if _dbefc !=nil {return _dbefc ;
};if _fadgf .IsTransposed ==0&&(_fadgf .ReferenceCorner ==0||_fadgf .ReferenceCorner ==1){_fadgf ._afbe +=int64 (_aggcg .Width -1);};if _fadgf .IsTransposed ==1&&(_fadgf .ReferenceCorner ==1||_fadgf .ReferenceCorner ==3){_fadgf ._afbe +=int64 (_aggcg .Height -1);
};return nil ;};func (_fcca *TableSegment )HtPS ()int32 {return _fcca ._cbfdd };func (_fbee *PageInformationSegment )parseHeader ()(_fedf error ){_ba .Log .Trace ("\u005b\u0050\u0061\u0067\u0065I\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067m\u0065\u006e\u0074\u005d\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u002e\u002e");
defer func (){var _cdf ="[\u0050\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072m\u0061\u0074\u0069\u006f\u006e\u0053\u0065gm\u0065\u006e\u0074\u005d \u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065ad\u0065\u0072 \u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064";
if _fedf !=nil {_cdf +="\u0020\u0077\u0069t\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u0020"+_fedf .Error ();}else {_cdf +="\u0020\u0073\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079";};_ba .Log .Trace (_cdf );}();if _fedf =_fbee .readWidthAndHeight ();
_fedf !=nil {return _fedf ;};if _fedf =_fbee .readResolution ();_fedf !=nil {return _fedf ;};_ ,_fedf =_fbee ._cgbc .ReadBit ();if _fedf !=nil {return _fedf ;};if _fedf =_fbee .readCombinationOperatorOverrideAllowed ();_fedf !=nil {return _fedf ;};if _fedf =_fbee .readRequiresAuxiliaryBuffer ();
_fedf !=nil {return _fedf ;};if _fedf =_fbee .readCombinationOperator ();_fedf !=nil {return _fedf ;};if _fedf =_fbee .readDefaultPixelValue ();_fedf !=nil {return _fedf ;};if _fedf =_fbee .readContainsRefinement ();_fedf !=nil {return _fedf ;};if _fedf =_fbee .readIsLossless ();
_fedf !=nil {return _fedf ;};if _fedf =_fbee .readIsStriped ();_fedf !=nil {return _fedf ;};if _fedf =_fbee .readMaxStripeSize ();_fedf !=nil {return _fedf ;};if _fedf =_fbee .checkInput ();_fedf !=nil {return _fedf ;};_ba .Log .Trace ("\u0025\u0073",_fbee );
return nil ;};func (_bb *GenericRefinementRegion )getGrReference ()(*_aad .Bitmap ,error ){segments :=_bb ._dc .RTSegments ;if len (segments )==0{return nil ,_fd .New ("\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0065\u0078is\u0074\u0073");
};_cca ,_cee :=segments [0].GetSegmentData ();if _cee !=nil {return nil ,_cee ;};_gcd ,_ded :=_cca .(Regioner );if !_ded {return nil ,_ae .Errorf ("\u0072\u0065\u0066\u0065\u0072r\u0065\u0064\u0020\u0074\u006f\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_cca );
};return _gcd .GetRegionBitmap ();};func (_fcb *GenericRegion )GetRegionInfo ()*RegionSegment {return _fcb .RegionSegment };type Segmenter interface{Init (_afcgb *Header ,_aega _aa .StreamReader )error ;};func (_cddb *PatternDictionary )readPatternWidthAndHeight ()error {_edebd ,_aeb :=_cddb ._gbeda .ReadByte ();
if _aeb !=nil {return _aeb ;};_cddb .HdpWidth =_edebd ;_edebd ,_aeb =_cddb ._gbeda .ReadByte ();if _aeb !=nil {return _aeb ;};_cddb .HdpHeight =_edebd ;return nil ;};func (_bac *PageInformationSegment )CombinationOperator ()_aad .CombinationOperator {return _bac ._caca };
func (_fgggf *TextRegion )Init (header *Header ,r _aa .StreamReader )error {_fgggf .Header =header ;_fgggf ._acgad =r ;_fgggf .RegionInfo =NewRegionSegment (_fgggf ._acgad );return _fgggf .parseHeader ();};func (_ge *GenericRefinementRegion )decodeTypicalPredictedLine (_gag ,_bfg ,_bg ,_fdf ,_bcg ,_ged int )error {_bga :=_gag -int (_ge .ReferenceDY );
_af :=_ge .ReferenceBitmap .GetByteIndex (0,_bga );_ceg :=_ge .RegionBitmap .GetByteIndex (0,_gag );var _ebf error ;switch _ge .TemplateID {case 0:_ebf =_ge .decodeTypicalPredictedLineTemplate0 (_gag ,_bfg ,_bg ,_fdf ,_bcg ,_ged ,_ceg ,_bga ,_af );case 1:_ebf =_ge .decodeTypicalPredictedLineTemplate1 (_gag ,_bfg ,_bg ,_fdf ,_bcg ,_ged ,_ceg ,_bga ,_af );
};return _ebf ;};func NewHeader (d Documenter ,r _aa .StreamReader ,offset int64 ,organizationType OrganizationType )(*Header ,error ){_fggd :=&Header {Reader :r };if _dbec :=_fggd .parse (d ,r ,offset ,organizationType );_dbec !=nil {return nil ,_eb .Wrap (_dbec ,"\u004ee\u0077\u0048\u0065\u0061\u0064\u0065r","");
};return _fggd ,nil ;};func (_cga *GenericRegion )String ()string {_ddfe :=&_g .Builder {};_ddfe .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_ddfe .WriteString (_cga .RegionSegment .String ()+"\u000a");
_ddfe .WriteString (_ae .Sprintf ("\u0009\u002d\u0020Us\u0065\u0045\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_cga .UseExtTemplates ));_ddfe .WriteString (_ae .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0044\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_cga .IsTPGDon ));
_ddfe .WriteString (_ae .Sprintf ("\u0009-\u0020G\u0042\u0054\u0065\u006d\u0070l\u0061\u0074e\u003a\u0020\u0025\u0064\u000a",_cga .GBTemplate ));_ddfe .WriteString (_ae .Sprintf ("\t\u002d \u0049\u0073\u004d\u004d\u0052\u0045\u006e\u0063o\u0064\u0065\u0064\u003a %\u0076\u000a",_cga .IsMMREncoded ));
_ddfe .WriteString (_ae .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_cga .GBAtX ));_ddfe .WriteString (_ae .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_cga .GBAtY ));
_ddfe .WriteString (_ae .Sprintf ("\t\u002d \u0047\u0042\u0041\u0074\u004f\u0076\u0065\u0072r\u0069\u0064\u0065\u003a %\u0076\u000a",_cga .GBAtOverride ));return _ddfe .String ();};func (_gfaff *TableSegment )HtLow ()int32 {return _gfaff ._fedc };type EncodeInitializer interface{InitEncode ();
};func (_bdd *HalftoneRegion )Init (hd *Header ,r _aa .StreamReader )error {_bdd ._dfb =r ;_bdd ._ddeb =hd ;_bdd .RegionSegment =NewRegionSegment (r );return _bdd .parseHeader ();};func (_dgdf *TableSegment )HtOOB ()int32 {return _dgdf ._efdca };func (_aabe *PageInformationSegment )readResolution ()error {_bgcc ,_agaf :=_aabe ._cgbc .ReadBits (32);
if _agaf !=nil {return _agaf ;};_aabe .ResolutionX =int (_bgcc &_a .MaxInt32 );_bgcc ,_agaf =_aabe ._cgbc .ReadBits (32);if _agaf !=nil {return _agaf ;};_aabe .ResolutionY =int (_bgcc &_a .MaxInt32 );return nil ;};func (_cdba *TextRegion )readAmountOfSymbolInstances ()error {_bgcg ,_cecc :=_cdba ._acgad .ReadBits (32);
if _cecc !=nil {return _cecc ;};_cdba .NumberOfSymbolInstances =uint32 (_bgcg &_a .MaxUint32 );_baab :=_cdba .RegionInfo .BitmapWidth *_cdba .RegionInfo .BitmapHeight ;if _baab < _cdba .NumberOfSymbolInstances {_ba .Log .Debug ("\u004c\u0069\u006d\u0069t\u0069\u006e\u0067\u0020t\u0068\u0065\u0020n\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020d\u0065\u0063\u006f\u0064e\u0064\u0020\u0073\u0079m\u0062\u006f\u006c\u0020\u0069n\u0073\u0074\u0061\u006e\u0063\u0065\u0073 \u0074\u006f\u0020\u006f\u006ee\u0020\u0070\u0065\u0072\u0020\u0070\u0069\u0078\u0065l\u0020\u0028\u0020\u0025\u0064\u0020\u0069\u006e\u0073\u0074\u0065\u0061\u0064\u0020\u006f\u0066\u0020\u0025\u0064\u0029",_baab ,_cdba .NumberOfSymbolInstances );
_cdba .NumberOfSymbolInstances =_baab ;};return nil ;};func (_fc *EndOfStripe )parseHeader (_de *Header ,_aea _aa .StreamReader )error {_cba ,_gg :=_fc ._cgc .ReadBits (32);if _gg !=nil {return _gg ;};_fc ._bd =int (_cba &_a .MaxInt32 );return nil ;};func (_fgcb *SymbolDictionary )setExportedSymbols (_aegf []int ){for _eaff :=uint32 (0);
_eaff < _fgcb ._aaab +_fgcb .NumberOfNewSymbols ;_eaff ++{if _aegf [_eaff ]==1{var _cgbcc *_aad .Bitmap ;if _eaff < _fgcb ._aaab {_cgbcc =_fgcb ._ebg [_eaff ];}else {_cgbcc =_fgcb ._dced [_eaff -_fgcb ._aaab ];};_ba .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u002d\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u0020\u0041\u0064\u0064 E\u0078\u0070\u006fr\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027%\u0073\u0027",_cgbcc );
_fgcb ._cbdc =append (_fgcb ._cbdc ,_cgbcc );};};};func (_dfae *SymbolDictionary )setAtPixels ()error {if _dfae .IsHuffmanEncoded {return nil ;};_ffe :=1;if _dfae .SdTemplate ==0{_ffe =4;};if _dfbb :=_dfae .readAtPixels (_ffe );_dfbb !=nil {return _dfbb ;
};return nil ;};func (_cbee *Header )String ()string {_dgdg :=&_g .Builder {};_dgdg .WriteString ("\u000a[\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045A\u0044\u0045\u0052\u005d\u000a");_dgdg .WriteString (_ae .Sprintf ("\t\u002d\u0020\u0053\u0065gm\u0065n\u0074\u004e\u0075\u006d\u0062e\u0072\u003a\u0020\u0025\u0076\u000a",_cbee .SegmentNumber ));
_dgdg .WriteString (_ae .Sprintf ("\u0009\u002d\u0020T\u0079\u0070\u0065\u003a\u0020\u0025\u0076\u000a",_cbee .Type ));_dgdg .WriteString (_ae .Sprintf ("\u0009-\u0020R\u0065\u0074\u0061\u0069\u006eF\u006c\u0061g\u003a\u0020\u0025\u0076\u000a",_cbee .RetainFlag ));
_dgdg .WriteString (_ae .Sprintf ("\u0009\u002d\u0020Pa\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_cbee .PageAssociation ));_dgdg .WriteString (_ae .Sprintf ("\u0009\u002d\u0020\u0050\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074i\u006fn\u0046\u0069\u0065\u006c\u0064\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_cbee .PageAssociationFieldSize ));
_dgdg .WriteString ("\u0009-\u0020R\u0054\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u0053\u003a\u000a");for _ ,_ecaa :=range _cbee .RTSNumbers {_dgdg .WriteString (_ae .Sprintf ("\u0009\t\u002d\u0020\u0025\u0064\u000a",_ecaa ));};_dgdg .WriteString (_ae .Sprintf ("\t\u002d \u0048\u0065\u0061\u0064\u0065\u0072\u004c\u0065n\u0067\u0074\u0068\u003a %\u0076\u000a",_cbee .HeaderLength ));
_dgdg .WriteString (_ae .Sprintf ("\u0009-\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061L\u0065n\u0067\u0074\u0068\u003a\u0020\u0025\u0076\n",_cbee .SegmentDataLength ));_dgdg .WriteString (_ae .Sprintf ("\u0009\u002d\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074D\u0061\u0074\u0061\u0053\u0074\u0061\u0072t\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0076\u000a",_cbee .SegmentDataStartOffset ));
return _dgdg .String ();};func (_aeag *TableSegment )StreamReader ()_aa .StreamReader {return _aeag ._acaaa };func (_egbb *HalftoneRegion )GetRegionInfo ()*RegionSegment {return _egbb .RegionSegment };func (_ccfag *SymbolDictionary )decodeAggregate (_febc ,_dfbd uint32 )error {var (_bebg int64 ;
_abfda error ;);if _ccfag .IsHuffmanEncoded {_bebg ,_abfda =_ccfag .huffDecodeRefAggNInst ();if _abfda !=nil {return _abfda ;};}else {_dede ,_aeaf :=_ccfag ._caff .DecodeInt (_ccfag ._dgbg );if _aeaf !=nil {return _aeaf ;};_bebg =int64 (_dede );};if _bebg > 1{return _ccfag .decodeThroughTextRegion (_febc ,_dfbd ,uint32 (_bebg ));
}else if _bebg ==1{return _ccfag .decodeRefinedSymbol (_febc ,_dfbd );};return nil ;};func (_gfea *RegionSegment )readCombinationOperator ()error {_cffca ,_defg :=_gfea ._eced .ReadBits (3);if _defg !=nil {return _defg ;};_gfea .CombinaionOperator =_aad .CombinationOperator (_cffca &0xF);
return nil ;};var _ SegmentEncoder =&GenericRegion {};func (_dcedb *TextRegion )InitEncode (globalSymbolsMap ,localSymbolsMap map[int ]int ,comps []int ,inLL *_aad .Points ,symbols *_aad .Bitmaps ,classIDs *_cb .IntSlice ,boxes *_aad .Boxes ,width ,height ,symBits int ){_dcedb .RegionInfo =&RegionSegment {BitmapWidth :uint32 (width ),BitmapHeight :uint32 (height )};
_dcedb ._dfgf =globalSymbolsMap ;_dcedb ._adbdc =localSymbolsMap ;_dcedb ._dfcaa =comps ;_dcedb ._ebbc =inLL ;_dcedb ._dbcf =symbols ;_dcedb ._dceg =classIDs ;_dcedb ._cfeb =boxes ;_dcedb ._acdf =symBits ;};func (_dgac *TextRegion )encodeFlags (_dfbf _aa .BinaryWriter )(_fcab int ,_dabc error ){const _afcc ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _dabc =_dfbf .WriteBit (int (_dgac .SbrTemplate ));_dabc !=nil {return _fcab ,_eb .Wrap (_dabc ,_afcc ,"s\u0062\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};if _ ,_dabc =_dfbf .WriteBits (uint64 (_dgac .SbDsOffset ),5);_dabc !=nil {return _fcab ,_eb .Wrap (_dabc ,_afcc ,"\u0073\u0062\u0044\u0073\u004f\u0066\u0066\u0073\u0065\u0074");
};if _dabc =_dfbf .WriteBit (int (_dgac .DefaultPixel ));_dabc !=nil {return _fcab ,_eb .Wrap (_dabc ,_afcc ,"\u0044\u0065\u0066a\u0075\u006c\u0074\u0050\u0069\u0078\u0065\u006c");};if _ ,_dabc =_dfbf .WriteBits (uint64 (_dgac .CombinationOperator ),2);
_dabc !=nil {return _fcab ,_eb .Wrap (_dabc ,_afcc ,"\u0043\u006f\u006d\u0062in\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072");};if _dabc =_dfbf .WriteBit (int (_dgac .IsTransposed ));_dabc !=nil {return _fcab ,_eb .Wrap (_dabc ,_afcc ,"\u0069\u0073\u0020\u0074\u0072\u0061\u006e\u0073\u0070\u006f\u0073\u0065\u0064");
};if _ ,_dabc =_dfbf .WriteBits (uint64 (_dgac .ReferenceCorner ),2);_dabc !=nil {return _fcab ,_eb .Wrap (_dabc ,_afcc ,"\u0072\u0065f\u0065\u0072\u0065n\u0063\u0065\u0020\u0063\u006f\u0072\u006e\u0065\u0072");};if _ ,_dabc =_dfbf .WriteBits (uint64 (_dgac .LogSBStrips ),2);
_dabc !=nil {return _fcab ,_eb .Wrap (_dabc ,_afcc ,"L\u006f\u0067\u0053\u0042\u0053\u0074\u0072\u0069\u0070\u0073");};var _fafa int ;if _dgac .UseRefinement {_fafa =1;};if _dabc =_dfbf .WriteBit (_fafa );_dabc !=nil {return _fcab ,_eb .Wrap (_dabc ,_afcc ,"\u0075\u0073\u0065\u0020\u0072\u0065\u0066\u0069\u006ee\u006d\u0065\u006e\u0074");
};_fafa =0;if _dgac .IsHuffmanEncoded {_fafa =1;};if _dabc =_dfbf .WriteBit (_fafa );_dabc !=nil {return _fcab ,_eb .Wrap (_dabc ,_afcc ,"u\u0073\u0065\u0020\u0068\u0075\u0066\u0066\u006d\u0061\u006e");};_fcab =2;return _fcab ,nil ;};func (_dgcg *GenericRegion )overrideAtTemplate2 (_aab ,_bdab ,_dad ,_acfe ,_eagf int )int {_aab &=0x3FB;
if _dgcg .GBAtY [0]==0&&_dgcg .GBAtX [0]>=-int8 (_eagf ){_aab |=(_acfe >>uint (7-(int8 (_eagf )+_dgcg .GBAtX [0]))&0x1)<<2;}else {_aab |=int (_dgcg .getPixel (_bdab +int (_dgcg .GBAtX [0]),_dad +int (_dgcg .GBAtY [0])))<<2;};return _aab ;};func (_bgeg *SymbolDictionary )decodeThroughTextRegion (_ddcfe ,_fgbb ,_fecg uint32 )error {if _bgeg ._acee ==nil {_bgeg ._acee =_aebe (_bgeg ._cfb ,nil );
_bgeg ._acee .setContexts (_bgeg ._gfffd ,_gb .NewStats (512,1),_gb .NewStats (512,1),_gb .NewStats (512,1),_gb .NewStats (512,1),_bgeg ._agbe ,_gb .NewStats (512,1),_gb .NewStats (512,1),_gb .NewStats (512,1),_gb .NewStats (512,1));};if _ggfb :=_bgeg .setSymbolsArray ();
_ggfb !=nil {return _ggfb ;};_bgeg ._acee .setParameters (_bgeg ._caff ,_bgeg .IsHuffmanEncoded ,true ,_ddcfe ,_fgbb ,_fecg ,1,_bgeg ._aaab +_bgeg ._gdcd ,0,0,0,1,0,0,0,0,0,0,0,0,0,_bgeg .SdrTemplate ,_bgeg .SdrATX ,_bgeg .SdrATY ,_bgeg ._bbge ,_bgeg ._dedb );
return _bgeg .addSymbol (_bgeg ._acee );};func (_gbed *PageInformationSegment )readCombinationOperator ()error {_egcg ,_cfag :=_gbed ._cgbc .ReadBits (2);if _cfag !=nil {return _cfag ;};_gbed ._caca =_aad .CombinationOperator (int (_egcg ));return nil ;
};func (_ceb *template1 )form (_fdb ,_agb ,_bcgb ,_cddf ,_gbgb int16 )int16 {return ((_fdb &0x02)<<8)|(_agb <<6)|((_bcgb &0x03)<<4)|(_cddf <<1)|_gbgb ;};type Type int ;func (_cabb *GenericRegion )GetRegionBitmap ()(_cfg *_aad .Bitmap ,_cge error ){if _cabb .Bitmap !=nil {return _cabb .Bitmap ,nil ;
};if _cabb .IsMMREncoded {if _cabb ._efd ==nil {_cabb ._efd ,_cge =_da .New (_cabb ._cdb ,int (_cabb .RegionSegment .BitmapWidth ),int (_cabb .RegionSegment .BitmapHeight ),_cabb .DataOffset ,_cabb .DataLength );if _cge !=nil {return nil ,_cge ;};};_cabb .Bitmap ,_cge =_cabb ._efd .UncompressMMR ();
return _cabb .Bitmap ,_cge ;};if _cge =_cabb .updateOverrideFlags ();_cge !=nil {return nil ,_cge ;};var _fbf int ;if _cabb ._fbe ==nil {_cabb ._fbe ,_cge =_gb .New (_cabb ._cdb );if _cge !=nil {return nil ,_cge ;};};if _cabb ._bbd ==nil {_cabb ._bbd =_gb .NewStats (65536,1);
};_cabb .Bitmap =_aad .New (int (_cabb .RegionSegment .BitmapWidth ),int (_cabb .RegionSegment .BitmapHeight ));_fcc :=int (uint32 (_cabb .Bitmap .Width +7)&(^uint32 (7)));for _cag :=0;_cag < _cabb .Bitmap .Height ;_cag ++{if _cabb .IsTPGDon {var _daa int ;
_daa ,_cge =_cabb .decodeSLTP ();if _cge !=nil {return nil ,_cge ;};_fbf ^=_daa ;};if _fbf ==1{if _cag > 0{if _cge =_cabb .copyLineAbove (_cag );_cge !=nil {return nil ,_cge ;};};}else {if _cge =_cabb .decodeLine (_cag ,_cabb .Bitmap .Width ,_fcc );_cge !=nil {return nil ,_cge ;
};};};return _cabb .Bitmap ,nil ;};func (_ggef *PageInformationSegment )CombinationOperatorOverrideAllowed ()bool {return _ggef ._adbdg };func (_fbdf *SymbolDictionary )readAtPixels (_aada int )error {_fbdf .SdATX =make ([]int8 ,_aada );_fbdf .SdATY =make ([]int8 ,_aada );
var (_defe byte ;_agaa error ;);for _bbcf :=0;_bbcf < _aada ;_bbcf ++{_defe ,_agaa =_fbdf ._cfb .ReadByte ();if _agaa !=nil {return _agaa ;};_fbdf .SdATX [_bbcf ]=int8 (_defe );_defe ,_agaa =_fbdf ._cfb .ReadByte ();if _agaa !=nil {return _agaa ;};_fbdf .SdATY [_bbcf ]=int8 (_defe );
};return nil ;};func (_caab *TableSegment )HtRS ()int32 {return _caab ._cbfe };func (_cgbee *HalftoneRegion )combineGrayscalePlanes (_gcgd []*_aad .Bitmap ,_dbdb int )error {_edag :=0;for _dbdc :=0;_dbdc < _gcgd [_dbdb ].Height ;_dbdc ++{for _edda :=0;
_edda < _gcgd [_dbdb ].Width ;_edda +=8{_bfea ,_afcg :=_gcgd [_dbdb +1].GetByte (_edag );if _afcg !=nil {return _afcg ;};_beaa ,_afcg :=_gcgd [_dbdb ].GetByte (_edag );if _afcg !=nil {return _afcg ;};_afcg =_gcgd [_dbdb ].SetByte (_edag ,_aad .CombineBytes (_beaa ,_bfea ,_aad .CmbOpXor ));
if _afcg !=nil {return _afcg ;};_edag ++;};};return nil ;};func (_aeaa *PatternDictionary )Init (h *Header ,r _aa .StreamReader )error {_aeaa ._gbeda =r ;return _aeaa .parseHeader ();};func (_fdec *GenericRegion )decodeSLTP ()(int ,error ){switch _fdec .GBTemplate {case 0:_fdec ._bbd .SetIndex (0x9B25);
case 1:_fdec ._bbd .SetIndex (0x795);case 2:_fdec ._bbd .SetIndex (0xE5);case 3:_fdec ._bbd .SetIndex (0x195);};return _fdec ._fbe .DecodeBit (_fdec ._bbd );};func (_bcff *TextRegion )getSymbols ()error {if _bcff .Header .RTSegments !=nil {return _bcff .initSymbols ();
};return nil ;};func (_eae *SymbolDictionary )setInSyms ()error {if _eae .Header .RTSegments !=nil {return _eae .retrieveImportSymbols ();};_eae ._ebg =make ([]*_aad .Bitmap ,0);return nil ;};func (_ffcd *PageInformationSegment )Size ()int {return 19};
func (_adgg *SymbolDictionary )decodeHeightClassBitmap (_cabc *_aad .Bitmap ,_gfef int64 ,_dcda int ,_acga []int )error {for _fdbc :=_gfef ;_fdbc < int64 (_adgg ._gdcd );_fdbc ++{var _gabcg int ;for _facgc :=_gfef ;_facgc <=_fdbc -1;_facgc ++{_gabcg +=_acga [_facgc ];
};_gedg :=_f .Rect (_gabcg ,0,_gabcg +_acga [_fdbc ],_dcda );_eba ,_edbfb :=_aad .Extract (_gedg ,_cabc );if _edbfb !=nil {return _edbfb ;};_adgg ._dced [_fdbc ]=_eba ;_adgg ._bbge =append (_adgg ._bbge ,_eba );};return nil ;};func (_aaed *PatternDictionary )extractPatterns (_cagg *_aad .Bitmap )error {var _ccad int ;
_beed :=make ([]*_aad .Bitmap ,_aaed .GrayMax +1);for _ccad <=int (_aaed .GrayMax ){_acac :=int (_aaed .HdpWidth )*_ccad ;_bgdd :=_f .Rect (_acac ,0,_acac +int (_aaed .HdpWidth ),int (_aaed .HdpHeight ));_ccge ,_fega :=_aad .Extract (_bgdd ,_cagg );if _fega !=nil {return _fega ;
};_beed [_ccad ]=_ccge ;_ccad ++;};_aaed .Patterns =_beed ;return nil ;};func (_egdd *GenericRefinementRegion )overrideAtTemplate0 (_beaf ,_ggd ,_gcda ,_bbc ,_dda int )int {if _egdd ._ef [0]{_beaf &=0xfff7;if _egdd .GrAtY [0]==0&&int (_egdd .GrAtX [0])>=-_dda {_beaf |=(_bbc >>uint (7-(_dda +int (_egdd .GrAtX [0])))&0x1)<<3;
}else {_beaf |=_egdd .getPixel (_egdd .RegionBitmap ,_ggd +int (_egdd .GrAtX [0]),_gcda +int (_egdd .GrAtY [0]))<<3;};};if _egdd ._ef [1]{_beaf &=0xefff;if _egdd .GrAtY [1]==0&&int (_egdd .GrAtX [1])>=-_dda {_beaf |=(_bbc >>uint (7-(_dda +int (_egdd .GrAtX [1])))&0x1)<<12;
}else {_beaf |=_egdd .getPixel (_egdd .ReferenceBitmap ,_ggd +int (_egdd .GrAtX [1]),_gcda +int (_egdd .GrAtY [1]));};};return _beaf ;};func (_bcagc *SymbolDictionary )decodeRefinedSymbol (_ebab ,_fefe uint32 )error {var (_aaac int ;_dgeg ,_fadgb int32 ;
);if _bcagc .IsHuffmanEncoded {_eadbc ,_cfdb :=_bcagc ._cfb .ReadBits (byte (_bcagc ._dedb ));if _cfdb !=nil {return _cfdb ;};_aaac =int (_eadbc );_dfa ,_cfdb :=_gd .GetStandardTable (15);if _cfdb !=nil {return _cfdb ;};_eccd ,_cfdb :=_dfa .Decode (_bcagc ._cfb );
if _cfdb !=nil {return _cfdb ;};_dgeg =int32 (_eccd );_eccd ,_cfdb =_dfa .Decode (_bcagc ._cfb );if _cfdb !=nil {return _cfdb ;};_fadgb =int32 (_eccd );_dfa ,_cfdb =_gd .GetStandardTable (1);if _cfdb !=nil {return _cfdb ;};if _ ,_cfdb =_dfa .Decode (_bcagc ._cfb );
_cfdb !=nil {return _cfdb ;};_bcagc ._cfb .Align ();}else {_dafgf ,_ecbc :=_bcagc ._caff .DecodeIAID (uint64 (_bcagc ._dedb ),_bcagc ._agbe );if _ecbc !=nil {return _ecbc ;};_aaac =int (_dafgf );_dgeg ,_ecbc =_bcagc ._caff .DecodeInt (_bcagc ._dgdd );if _ecbc !=nil {return _ecbc ;
};_fadgb ,_ecbc =_bcagc ._caff .DecodeInt (_bcagc ._aafd );if _ecbc !=nil {return _ecbc ;};};if _bbgbd :=_bcagc .setSymbolsArray ();_bbgbd !=nil {return _bbgbd ;};_dabd :=_bcagc ._bbge [_aaac ];if _edef :=_bcagc .decodeNewSymbols (_ebab ,_fefe ,_dabd ,_dgeg ,_fadgb );
_edef !=nil {return _edef ;};if _bcagc .IsHuffmanEncoded {_bcagc ._cfb .Align ();};return nil ;};func (_acbda *SymbolDictionary )decodeNewSymbols (_ceec ,_gbgd uint32 ,_aeee *_aad .Bitmap ,_dfca ,_efcc int32 )error {if _acbda ._fge ==nil {_acbda ._fge =_ggaa (_acbda ._cfb ,nil );
if _acbda ._caff ==nil {var _fdbca error ;_acbda ._caff ,_fdbca =_gb .New (_acbda ._cfb );if _fdbca !=nil {return _fdbca ;};};if _acbda ._gfffd ==nil {_acbda ._gfffd =_gb .NewStats (65536,1);};};_acbda ._fge .setParameters (_acbda ._gfffd ,_acbda ._caff ,_acbda .SdrTemplate ,_ceec ,_gbgd ,_aeee ,_dfca ,_efcc ,false ,_acbda .SdrATX ,_acbda .SdrATY );
return _acbda .addSymbol (_acbda ._fge );};func (_gefc *SymbolDictionary )readNumberOfExportedSymbols ()error {_aba ,_gcca :=_gefc ._cfb .ReadBits (32);if _gcca !=nil {return _gcca ;};_gefc .NumberOfExportedSymbols =uint32 (_aba &_a .MaxUint32 );return nil ;
};type Pager interface{GetSegment (int )(*Header ,error );GetBitmap ()(*_aad .Bitmap ,error );};func (_ddfb *SymbolDictionary )readRefinementAtPixels (_gacf int )error {_ddfb .SdrATX =make ([]int8 ,_gacf );_ddfb .SdrATY =make ([]int8 ,_gacf );var (_cgbgc byte ;
_gcgdg error ;);for _bgab :=0;_bgab < _gacf ;_bgab ++{_cgbgc ,_gcgdg =_ddfb ._cfb .ReadByte ();if _gcgdg !=nil {return _gcgdg ;};_ddfb .SdrATX [_bgab ]=int8 (_cgbgc );_cgbgc ,_gcgdg =_ddfb ._cfb .ReadByte ();if _gcgdg !=nil {return _gcgdg ;};_ddfb .SdrATY [_bgab ]=int8 (_cgbgc );
};return nil ;};func (_cde *GenericRefinementRegion )readAtPixels ()error {_cde .GrAtX =make ([]int8 ,2);_cde .GrAtY =make ([]int8 ,2);_gee ,_cea :=_cde ._ce .ReadByte ();if _cea !=nil {return _cea ;};_cde .GrAtX [0]=int8 (_gee );_gee ,_cea =_cde ._ce .ReadByte ();
if _cea !=nil {return _cea ;};_cde .GrAtY [0]=int8 (_gee );_gee ,_cea =_cde ._ce .ReadByte ();if _cea !=nil {return _cea ;};_cde .GrAtX [1]=int8 (_gee );_gee ,_cea =_cde ._ce .ReadByte ();if _cea !=nil {return _cea ;};_cde .GrAtY [1]=int8 (_gee );return nil ;
};func (_acegb *TextRegion )setCodingStatistics ()error {if _acegb ._fdbcd ==nil {_acegb ._fdbcd =_gb .NewStats (512,1);};if _acegb ._dag ==nil {_acegb ._dag =_gb .NewStats (512,1);};if _acegb ._aefe ==nil {_acegb ._aefe =_gb .NewStats (512,1);};if _acegb ._bedd ==nil {_acegb ._bedd =_gb .NewStats (512,1);
};if _acegb ._aaba ==nil {_acegb ._aaba =_gb .NewStats (512,1);};if _acegb ._cafe ==nil {_acegb ._cafe =_gb .NewStats (512,1);};if _acegb ._daeb ==nil {_acegb ._daeb =_gb .NewStats (512,1);};if _acegb ._fabg ==nil {_acegb ._fabg =_gb .NewStats (1<<uint (_acegb ._cebe ),1);
};if _acegb ._affb ==nil {_acegb ._affb =_gb .NewStats (512,1);};if _acegb ._aagf ==nil {_acegb ._aagf =_gb .NewStats (512,1);};if _acegb ._egeb ==nil {var _beead error ;_acegb ._egeb ,_beead =_gb .New (_acegb ._acgad );if _beead !=nil {return _beead ;
};};return nil ;};func (_bcdd *HalftoneRegion )grayScaleDecoding (_gae int )([][]int ,error ){var (_gcef []int8 ;_fcge []int8 ;);if !_bcdd .IsMMREncoded {_gcef =make ([]int8 ,4);_fcge =make ([]int8 ,4);if _bcdd .HTemplate <=1{_gcef [0]=3;}else if _bcdd .HTemplate >=2{_gcef [0]=2;
};_fcge [0]=-1;_gcef [1]=-3;_fcge [1]=-1;_gcef [2]=2;_fcge [2]=-2;_gcef [3]=-2;_fcge [3]=-2;};_bffca :=make ([]*_aad .Bitmap ,_gae );_cbe :=NewGenericRegion (_bcdd ._dfb );_cbe .setParametersMMR (_bcdd .IsMMREncoded ,_bcdd .DataOffset ,_bcdd .DataLength ,_bcdd .HGridHeight ,_bcdd .HGridWidth ,_bcdd .HTemplate ,false ,_bcdd .HSkipEnabled ,_gcef ,_fcge );
_aff :=_gae -1;var _abfd error ;_bffca [_aff ],_abfd =_cbe .GetRegionBitmap ();if _abfd !=nil {return nil ,_abfd ;};for _aff > 0{_aff --;_cbe .Bitmap =nil ;_bffca [_aff ],_abfd =_cbe .GetRegionBitmap ();if _abfd !=nil {return nil ,_abfd ;};if _abfd =_bcdd .combineGrayscalePlanes (_bffca ,_aff );
_abfd !=nil {return nil ,_abfd ;};};return _bcdd .computeGrayScalePlanes (_bffca ,_gae );};func (_bda *GenericRefinementRegion )parseHeader ()(_ecb error ){_ba .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0048e\u0061\u0064e\u0072\u002e\u002e\u002e");
_fg :=_b .Now ();defer func (){if _ecb ==nil {_ba .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045G\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020h\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0069\u006e\u0069\u0073\u0068id\u0020\u0069\u006e\u003a\u0020\u0025\u0064\u0020\u006e\u0073",_b .Since (_fg ).Nanoseconds ());
}else {_ba .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0068\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0073",_ecb );
};}();if _ecb =_bda .RegionInfo .parseHeader ();_ecb !=nil {return _ecb ;};_ ,_ecb =_bda ._ce .ReadBits (6);if _ecb !=nil {return _ecb ;};_bda .IsTPGROn ,_ecb =_bda ._ce .ReadBool ();if _ecb !=nil {return _ecb ;};var _cbc int ;_cbc ,_ecb =_bda ._ce .ReadBit ();
if _ecb !=nil {return _ecb ;};_bda .TemplateID =int8 (_cbc );switch _bda .TemplateID {case 0:_bda .Template =_bda ._cgd ;if _ecb =_bda .readAtPixels ();_ecb !=nil {return ;};case 1:_bda .Template =_bda ._ee ;};return nil ;};func (_fag *GenericRegion )InitEncode (bm *_aad .Bitmap ,xLoc ,yLoc ,template int ,duplicateLineRemoval bool )error {const _dbba ="\u0047e\u006e\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069\u006f\u006e.\u0049\u006e\u0069\u0074\u0045\u006e\u0063\u006f\u0064\u0065";
if bm ==nil {return _eb .Error (_dbba ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if xLoc < 0||yLoc < 0{return _eb .Error (_dbba ,"\u0078\u0020\u0061\u006e\u0064\u0020\u0079\u0020\u006c\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074h\u0061\u006e\u0020\u0030");
};_fag .Bitmap =bm ;_fag .GBTemplate =byte (template );switch _fag .GBTemplate {case 0:_fag .GBAtX =[]int8 {3,-3,2,-2};_fag .GBAtY =[]int8 {-1,-1,-2,-2};case 1:_fag .GBAtX =[]int8 {3};_fag .GBAtY =[]int8 {-1};case 2,3:_fag .GBAtX =[]int8 {2};_fag .GBAtY =[]int8 {-1};
default:return _eb .Errorf (_dbba ,"\u0070\u0072o\u0076\u0069\u0064\u0065\u0064 \u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u007b\u0030\u002c\u0031\u002c\u0032\u002c\u0033\u007d",template );
};_fag .RegionSegment =&RegionSegment {BitmapHeight :uint32 (bm .Height ),BitmapWidth :uint32 (bm .Width ),XLocation :uint32 (xLoc ),YLocation :uint32 (yLoc )};_fag .IsTPGDon =duplicateLineRemoval ;return nil ;};func (_ebbgd *TextRegion )setContexts (_bbfg *_gb .DecoderStats ,_eacb *_gb .DecoderStats ,_aaec *_gb .DecoderStats ,_ffdeb *_gb .DecoderStats ,_cdde *_gb .DecoderStats ,_gfcf *_gb .DecoderStats ,_bbff *_gb .DecoderStats ,_beaae *_gb .DecoderStats ,_ffced *_gb .DecoderStats ,_adgf *_gb .DecoderStats ){_ebbgd ._fdbcd =_eacb ;
_ebbgd ._dag =_aaec ;_ebbgd ._aefe =_ffdeb ;_ebbgd ._bedd =_cdde ;_ebbgd ._cafe =_bbff ;_ebbgd ._daeb =_beaae ;_ebbgd ._fabg =_gfcf ;_ebbgd ._affb =_ffced ;_ebbgd ._aagf =_adgf ;_ebbgd ._dafgc =_bbfg ;};func (_fccf *GenericRegion )overrideAtTemplate0b (_bbab ,_cbb ,_acaf ,_bcad ,_degfg ,_cbbf int )int {if _fccf .GBAtOverride [0]{_bbab &=0xFFFD;
if _fccf .GBAtY [0]==0&&_fccf .GBAtX [0]>=-int8 (_degfg ){_bbab |=(_bcad >>uint (int8 (_cbbf )-_fccf .GBAtX [0]&0x1))<<1;}else {_bbab |=int (_fccf .getPixel (_cbb +int (_fccf .GBAtX [0]),_acaf +int (_fccf .GBAtY [0])))<<1;};};if _fccf .GBAtOverride [1]{_bbab &=0xDFFF;
if _fccf .GBAtY [1]==0&&_fccf .GBAtX [1]>=-int8 (_degfg ){_bbab |=(_bcad >>uint (int8 (_cbbf )-_fccf .GBAtX [1]&0x1))<<13;}else {_bbab |=int (_fccf .getPixel (_cbb +int (_fccf .GBAtX [1]),_acaf +int (_fccf .GBAtY [1])))<<13;};};if _fccf .GBAtOverride [2]{_bbab &=0xFDFF;
if _fccf .GBAtY [2]==0&&_fccf .GBAtX [2]>=-int8 (_degfg ){_bbab |=(_bcad >>uint (int8 (_cbbf )-_fccf .GBAtX [2]&0x1))<<9;}else {_bbab |=int (_fccf .getPixel (_cbb +int (_fccf .GBAtX [2]),_acaf +int (_fccf .GBAtY [2])))<<9;};};if _fccf .GBAtOverride [3]{_bbab &=0xBFFF;
if _fccf .GBAtY [3]==0&&_fccf .GBAtX [3]>=-int8 (_degfg ){_bbab |=(_bcad >>uint (int8 (_cbbf )-_fccf .GBAtX [3]&0x1))<<14;}else {_bbab |=int (_fccf .getPixel (_cbb +int (_fccf .GBAtX [3]),_acaf +int (_fccf .GBAtY [3])))<<14;};};if _fccf .GBAtOverride [4]{_bbab &=0xEFFF;
if _fccf .GBAtY [4]==0&&_fccf .GBAtX [4]>=-int8 (_degfg ){_bbab |=(_bcad >>uint (int8 (_cbbf )-_fccf .GBAtX [4]&0x1))<<12;}else {_bbab |=int (_fccf .getPixel (_cbb +int (_fccf .GBAtX [4]),_acaf +int (_fccf .GBAtY [4])))<<12;};};if _fccf .GBAtOverride [5]{_bbab &=0xFFDF;
if _fccf .GBAtY [5]==0&&_fccf .GBAtX [5]>=-int8 (_degfg ){_bbab |=(_bcad >>uint (int8 (_cbbf )-_fccf .GBAtX [5]&0x1))<<5;}else {_bbab |=int (_fccf .getPixel (_cbb +int (_fccf .GBAtX [5]),_acaf +int (_fccf .GBAtY [5])))<<5;};};if _fccf .GBAtOverride [6]{_bbab &=0xFFFB;
if _fccf .GBAtY [6]==0&&_fccf .GBAtX [6]>=-int8 (_degfg ){_bbab |=(_bcad >>uint (int8 (_cbbf )-_fccf .GBAtX [6]&0x1))<<2;}else {_bbab |=int (_fccf .getPixel (_cbb +int (_fccf .GBAtX [6]),_acaf +int (_fccf .GBAtY [6])))<<2;};};if _fccf .GBAtOverride [7]{_bbab &=0xFFF7;
if _fccf .GBAtY [7]==0&&_fccf .GBAtX [7]>=-int8 (_degfg ){_bbab |=(_bcad >>uint (int8 (_cbbf )-_fccf .GBAtX [7]&0x1))<<3;}else {_bbab |=int (_fccf .getPixel (_cbb +int (_fccf .GBAtX [7]),_acaf +int (_fccf .GBAtY [7])))<<3;};};if _fccf .GBAtOverride [8]{_bbab &=0xF7FF;
if _fccf .GBAtY [8]==0&&_fccf .GBAtX [8]>=-int8 (_degfg ){_bbab |=(_bcad >>uint (int8 (_cbbf )-_fccf .GBAtX [8]&0x1))<<11;}else {_bbab |=int (_fccf .getPixel (_cbb +int (_fccf .GBAtX [8]),_acaf +int (_fccf .GBAtY [8])))<<11;};};if _fccf .GBAtOverride [9]{_bbab &=0xFFEF;
if _fccf .GBAtY [9]==0&&_fccf .GBAtX [9]>=-int8 (_degfg ){_bbab |=(_bcad >>uint (int8 (_cbbf )-_fccf .GBAtX [9]&0x1))<<4;}else {_bbab |=int (_fccf .getPixel (_cbb +int (_fccf .GBAtX [9]),_acaf +int (_fccf .GBAtY [9])))<<4;};};if _fccf .GBAtOverride [10]{_bbab &=0x7FFF;
if _fccf .GBAtY [10]==0&&_fccf .GBAtX [10]>=-int8 (_degfg ){_bbab |=(_bcad >>uint (int8 (_cbbf )-_fccf .GBAtX [10]&0x1))<<15;}else {_bbab |=int (_fccf .getPixel (_cbb +int (_fccf .GBAtX [10]),_acaf +int (_fccf .GBAtY [10])))<<15;};};if _fccf .GBAtOverride [11]{_bbab &=0xFDFF;
if _fccf .GBAtY [11]==0&&_fccf .GBAtX [11]>=-int8 (_degfg ){_bbab |=(_bcad >>uint (int8 (_cbbf )-_fccf .GBAtX [11]&0x1))<<10;}else {_bbab |=int (_fccf .getPixel (_cbb +int (_fccf .GBAtX [11]),_acaf +int (_fccf .GBAtY [11])))<<10;};};return _bbab ;};func (_acg *GenericRefinementRegion )decodeSLTP ()(int ,error ){_acg .Template .setIndex (_acg ._ac );
return _acg ._eed .DecodeBit (_acg ._ac );};func (_ggfa *GenericRegion )setOverrideFlag (_fffe int ){_ggfa .GBAtOverride [_fffe ]=true ;_ggfa ._degd =true ;};func (_ffda *SymbolDictionary )decodeHeightClassDeltaHeight ()(int64 ,error ){if _ffda .IsHuffmanEncoded {return _ffda .decodeHeightClassDeltaHeightWithHuffman ();
};_dfeg ,_dbbaa :=_ffda ._caff .DecodeInt (_ffda ._egfd );if _dbbaa !=nil {return 0,_dbbaa ;};return int64 (_dfeg ),nil ;};type GenericRefinementRegion struct{_cgd templater ;_ee templater ;_ce _aa .StreamReader ;_dc *Header ;RegionInfo *RegionSegment ;
IsTPGROn bool ;TemplateID int8 ;Template templater ;GrAtX []int8 ;GrAtY []int8 ;RegionBitmap *_aad .Bitmap ;ReferenceBitmap *_aad .Bitmap ;ReferenceDX int32 ;ReferenceDY int32 ;_eed *_gb .Decoder ;_ac *_gb .DecoderStats ;_cbf bool ;_ef []bool ;};func (_gbgg *TableSegment )parseHeader ()error {var (_bffd int ;
_eadeb uint64 ;_cgdef error ;);_bffd ,_cgdef =_gbgg ._acaaa .ReadBit ();if _cgdef !=nil {return _cgdef ;};if _bffd ==1{return _ae .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0061\u0062\u006c\u0065 \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0064e\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u002e\u0020\u0042\u002e\u0032\u002e1\u0020\u0043\u006f\u0064\u0065\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0042\u0069\u0074\u0020\u0037\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u007a\u0065\u0072\u006f\u002e\u0020\u0057a\u0073\u003a \u0025\u0064",_bffd );
};if _eadeb ,_cgdef =_gbgg ._acaaa .ReadBits (3);_cgdef !=nil {return _cgdef ;};_gbgg ._cbfe =(int32 (_eadeb )+1)&0xf;if _eadeb ,_cgdef =_gbgg ._acaaa .ReadBits (3);_cgdef !=nil {return _cgdef ;};_gbgg ._cbfdd =(int32 (_eadeb )+1)&0xf;if _eadeb ,_cgdef =_gbgg ._acaaa .ReadBits (32);
_cgdef !=nil {return _cgdef ;};_gbgg ._fedc =int32 (_eadeb &_a .MaxInt32 );if _eadeb ,_cgdef =_gbgg ._acaaa .ReadBits (32);_cgdef !=nil {return _cgdef ;};_gbgg ._afde =int32 (_eadeb &_a .MaxInt32 );return nil ;};func (_ccbe *TextRegion )parseHeader ()error {var _fabf error ;
_ba .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069n\u0073\u002e\u002e\u002e");defer func (){if _fabf !=nil {_ba .Log .Trace ("\u005b\u0054\u0045\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044E\u0052\u005d\u0020\u0066\u0061i\u006c\u0065d\u002e\u0020\u0025\u0076",_fabf );
}else {_ba .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069s\u0068\u0065\u0064\u002e");};}();if _fabf =_ccbe .RegionInfo .parseHeader ();
_fabf !=nil {return _fabf ;};if _fabf =_ccbe .readRegionFlags ();_fabf !=nil {return _fabf ;};if _ccbe .IsHuffmanEncoded {if _fabf =_ccbe .readHuffmanFlags ();_fabf !=nil {return _fabf ;};};if _fabf =_ccbe .readUseRefinement ();_fabf !=nil {return _fabf ;
};if _fabf =_ccbe .readAmountOfSymbolInstances ();_fabf !=nil {return _fabf ;};if _fabf =_ccbe .getSymbols ();_fabf !=nil {return _fabf ;};if _fabf =_ccbe .computeSymbolCodeLength ();_fabf !=nil {return _fabf ;};if _fabf =_ccbe .checkInput ();_fabf !=nil {return _fabf ;
};_ba .Log .Trace ("\u0025\u0073",_ccbe .String ());return nil ;};var _ templater =&template1 {};func (_eee *PageInformationSegment )Init (h *Header ,r _aa .StreamReader )(_bbfb error ){_eee ._cgbc =r ;if _bbfb =_eee .parseHeader ();_bbfb !=nil {return _eb .Wrap (_bbfb ,"P\u0061\u0067\u0065\u0049\u006e\u0066o\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065g\u006d\u0065\u006et\u002eI\u006e\u0069\u0074","");
};return nil ;};func (_geeg *HalftoneRegion )GetRegionBitmap ()(*_aad .Bitmap ,error ){if _geeg .HalftoneRegionBitmap !=nil {return _geeg .HalftoneRegionBitmap ,nil ;};var _eca error ;_geeg .HalftoneRegionBitmap =_aad .New (int (_geeg .RegionSegment .BitmapWidth ),int (_geeg .RegionSegment .BitmapHeight ));
if _geeg .Patterns ==nil ||len (_geeg .Patterns )==0{_geeg .Patterns ,_eca =_geeg .GetPatterns ();if _eca !=nil {return nil ,_eca ;};};if _geeg .HDefaultPixel ==1{_geeg .HalftoneRegionBitmap .SetDefaultPixel ();};_gcgc :=_a .Ceil (_a .Log (float64 (len (_geeg .Patterns )))/_a .Log (2));
_edb :=int (_gcgc );var _eaag [][]int ;_eaag ,_eca =_geeg .grayScaleDecoding (_edb );if _eca !=nil {return nil ,_eca ;};if _eca =_geeg .renderPattern (_eaag );_eca !=nil {return nil ,_eca ;};return _geeg .HalftoneRegionBitmap ,nil ;};func (_dgc *GenericRegion )decodeTemplate1 (_bgb ,_abd ,_acae int ,_abdd ,_gfg int )(_bfa error ){const _fdba ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0031";
var (_ffd ,_gbe int ;_fgd ,_fdcd int ;_dgec byte ;_afgg ,_bede int ;);if _bgb >=1{_dgec ,_bfa =_dgc .Bitmap .GetByte (_gfg );if _bfa !=nil {return _eb .Wrap (_bfa ,_fdba ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_fgd =int (_dgec );};if _bgb >=2{_dgec ,_bfa =_dgc .Bitmap .GetByte (_gfg -_dgc .Bitmap .RowStride );
if _bfa !=nil {return _eb .Wrap (_bfa ,_fdba ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_fdcd =int (_dgec )<<5;};_ffd =((_fgd >>1)&0x1f8)|((_fdcd >>1)&0x1e00);for _gfe :=0;_gfe < _acae ;_gfe =_afgg {var (_gfa byte ;_ebea int ;);_afgg =_gfe +8;if _adff :=_abd -_gfe ;
_adff > 8{_ebea =8;}else {_ebea =_adff ;};if _bgb > 0{_fgd <<=8;if _afgg < _abd {_dgec ,_bfa =_dgc .Bitmap .GetByte (_gfg +1);if _bfa !=nil {return _eb .Wrap (_bfa ,_fdba ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_fgd |=int (_dgec );};};if _bgb > 1{_fdcd <<=8;
if _afgg < _abd {_dgec ,_bfa =_dgc .Bitmap .GetByte (_gfg -_dgc .Bitmap .RowStride +1);if _bfa !=nil {return _eb .Wrap (_bfa ,_fdba ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_fdcd |=int (_dgec )<<5;};};for _egb :=0;_egb < _ebea ;_egb ++{if _dgc ._degd {_gbe =_dgc .overrideAtTemplate1 (_ffd ,_gfe +_egb ,_bgb ,int (_gfa ),_egb );
_dgc ._bbd .SetIndex (int32 (_gbe ));}else {_dgc ._bbd .SetIndex (int32 (_ffd ));};_bede ,_bfa =_dgc ._fbe .DecodeBit (_dgc ._bbd );if _bfa !=nil {return _eb .Wrap (_bfa ,_fdba ,"");};_gfa |=byte (_bede )<<uint (7-_egb );_fcaf :=uint (8-_egb );_ffd =((_ffd &0xefb)<<1)|_bede |((_fgd >>_fcaf )&0x8)|((_fdcd >>_fcaf )&0x200);
};if _agcg :=_dgc .Bitmap .SetByte (_abdd ,_gfa );_agcg !=nil {return _eb .Wrap (_agcg ,_fdba ,"");};_abdd ++;_gfg ++;};return nil ;};func (_ebe *GenericRefinementRegion )GetRegionInfo ()*RegionSegment {return _ebe .RegionInfo };func (_bgf *TableSegment )HtHigh ()int32 {return _bgf ._afde };
func (_adfe *SymbolDictionary )setCodingStatistics ()error {if _adfe ._fffb ==nil {_adfe ._fffb =_gb .NewStats (512,1);};if _adfe ._egfd ==nil {_adfe ._egfd =_gb .NewStats (512,1);};if _adfe ._fadg ==nil {_adfe ._fadg =_gb .NewStats (512,1);};if _adfe ._dgbg ==nil {_adfe ._dgbg =_gb .NewStats (512,1);
};if _adfe ._edga ==nil {_adfe ._edga =_gb .NewStats (512,1);};if _adfe .UseRefinementAggregation &&_adfe ._agbe ==nil {_adfe ._agbe =_gb .NewStats (1<<uint (_adfe ._dedb ),1);_adfe ._dgdd =_gb .NewStats (512,1);_adfe ._aafd =_gb .NewStats (512,1);};if _adfe ._gfffd ==nil {_adfe ._gfffd =_gb .NewStats (65536,1);
};if _adfe ._caff ==nil {var _gefcd error ;_adfe ._caff ,_gefcd =_gb .New (_adfe ._cfb );if _gefcd !=nil {return _gefcd ;};};return nil ;};func (_ga *EndOfStripe )LineNumber ()int {return _ga ._bd };func NewRegionSegment (r _aa .StreamReader )*RegionSegment {return &RegionSegment {_eced :r }};
func (_dbbf *GenericRefinementRegion )getPixel (_eef *_aad .Bitmap ,_eag ,_bfb int )int {if _eag < 0||_eag >=_eef .Width {return 0;};if _bfb < 0||_bfb >=_eef .Height {return 0;};if _eef .GetPixel (_eag ,_bfb ){return 1;};return 0;};func (_cbea *SymbolDictionary )decodeDirectlyThroughGenericRegion (_bcde ,_badg uint32 )error {if _cbea ._egec ==nil {_cbea ._egec =NewGenericRegion (_cbea ._cfb );
};_cbea ._egec .setParametersWithAt (false ,byte (_cbea .SdTemplate ),false ,false ,_cbea .SdATX ,_cbea .SdATY ,_bcde ,_badg ,_cbea ._gfffd ,_cbea ._caff );return _cbea .addSymbol (_cbea ._egec );};func _aebe (_geba _aa .StreamReader ,_fegag *Header )*TextRegion {_bafg :=&TextRegion {_acgad :_geba ,Header :_fegag ,RegionInfo :NewRegionSegment (_geba )};
return _bafg ;};