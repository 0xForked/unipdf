//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package segments ;import (_ed "encoding/binary";_g "errors";_ede "fmt";_dae "github.com/unidoc/unipdf/v3/common";_gf "github.com/unidoc/unipdf/v3/internal/bitwise";_gg "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_ee "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";
_ef "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/arithmetic";_gfb "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/huffman";_ae "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/mmr";_fg "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/arithmetic";
_da "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_a "github.com/unidoc/unipdf/v3/internal/jbig2/internal";_c "golang.org/x/xerrors";_e "image";_b "io";_d "math";_dg "strings";_dd "time";);type OrganizationType uint8 ;func (_aeb *GenericRegion )computeSegmentDataStructure ()error {_aeb .DataOffset =_aeb ._gcgc .StreamPosition ();
_aeb .DataHeaderLength =_aeb .DataOffset -_aeb .DataHeaderOffset ;_aeb .DataLength =int64 (_aeb ._gcgc .Length ())-_aeb .DataHeaderLength ;return nil ;};func (_bfcf *HalftoneRegion )GetRegionBitmap ()(*_ee .Bitmap ,error ){if _bfcf .HalftoneRegionBitmap !=nil {return _bfcf .HalftoneRegionBitmap ,nil ;
};var _fbd error ;_bfcf .HalftoneRegionBitmap =_ee .New (int (_bfcf .RegionSegment .BitmapWidth ),int (_bfcf .RegionSegment .BitmapHeight ));if _bfcf .Patterns ==nil ||len (_bfcf .Patterns )==0{_bfcf .Patterns ,_fbd =_bfcf .GetPatterns ();if _fbd !=nil {return nil ,_fbd ;
};};if _bfcf .HDefaultPixel ==1{_bfcf .HalftoneRegionBitmap .SetDefaultPixel ();};_ggff :=_d .Ceil (_d .Log (float64 (len (_bfcf .Patterns )))/_d .Log (2));_dgec :=int (_ggff );var _decc [][]int ;_decc ,_fbd =_bfcf .grayScaleDecoding (_dgec );if _fbd !=nil {return nil ,_fbd ;
};if _fbd =_bfcf .renderPattern (_decc );_fbd !=nil {return nil ,_fbd ;};return _bfcf .HalftoneRegionBitmap ,nil ;};func (_bfcg *TableSegment )Init (h *Header ,r _gf .StreamReader )error {_bfcg ._bfgb =r ;return _bfcg .parseHeader ();};func (_ebf *GenericRegion )Size ()int {return _ebf .RegionSegment .Size ()+1+2*len (_ebf .GBAtX )};
func (_gbabe *HalftoneRegion )computeY (_eaec ,_bgf int )int {return _gbabe .shiftAndFill (int (_gbabe .HGridY )+_eaec *int (_gbabe .HRegionX )-_bgf *int (_gbabe .HRegionY ));};func (_eaff *GenericRefinementRegion )decodeTypicalPredictedLineTemplate0 (_dgd ,_eed ,_eee ,_cga ,_afb ,_edg ,_eddg ,_beb ,_faee int )error {var (_beae ,_ac ,_bad ,_gea ,_fgf ,_ga int ;
_eda byte ;_gag error ;);if _dgd > 0{_eda ,_gag =_eaff .RegionBitmap .GetByte (_eddg -_eee );if _gag !=nil {return _gag ;};_bad =int (_eda );};if _beb > 0&&_beb <=_eaff .ReferenceBitmap .Height {_eda ,_gag =_eaff .ReferenceBitmap .GetByte (_faee -_cga +_edg );
if _gag !=nil {return _gag ;};_gea =int (_eda )<<4;};if _beb >=0&&_beb < _eaff .ReferenceBitmap .Height {_eda ,_gag =_eaff .ReferenceBitmap .GetByte (_faee +_edg );if _gag !=nil {return _gag ;};_fgf =int (_eda )<<1;};if _beb > -2&&_beb < _eaff .ReferenceBitmap .Height -1{_eda ,_gag =_eaff .ReferenceBitmap .GetByte (_faee +_cga +_edg );
if _gag !=nil {return _gag ;};_ga =int (_eda );};_beae =((_bad >>5)&0x6)|((_ga >>2)&0x30)|(_fgf &0x180)|(_gea &0xc00);var _eae int ;for _bbc :=0;_bbc < _afb ;_bbc =_eae {var _aae int ;_eae =_bbc +8;var _dac int ;if _dac =_eed -_bbc ;_dac > 8{_dac =8;};
_efef :=_eae < _eed ;_aeg :=_eae < _eaff .ReferenceBitmap .Width ;_ggfg :=_edg +1;if _dgd > 0{_eda =0;if _efef {_eda ,_gag =_eaff .RegionBitmap .GetByte (_eddg -_eee +1);if _gag !=nil {return _gag ;};};_bad =(_bad <<8)|int (_eda );};if _beb > 0&&_beb <=_eaff .ReferenceBitmap .Height {var _caf int ;
if _aeg {_eda ,_gag =_eaff .ReferenceBitmap .GetByte (_faee -_cga +_ggfg );if _gag !=nil {return _gag ;};_caf =int (_eda )<<4;};_gea =(_gea <<8)|_caf ;};if _beb >=0&&_beb < _eaff .ReferenceBitmap .Height {var _edf int ;if _aeg {_eda ,_gag =_eaff .ReferenceBitmap .GetByte (_faee +_ggfg );
if _gag !=nil {return _gag ;};_edf =int (_eda )<<1;};_fgf =(_fgf <<8)|_edf ;};if _beb > -2&&_beb < (_eaff .ReferenceBitmap .Height -1){_eda =0;if _aeg {_eda ,_gag =_eaff .ReferenceBitmap .GetByte (_faee +_cga +_ggfg );if _gag !=nil {return _gag ;};};_ga =(_ga <<8)|int (_eda );
};for _ec :=0;_ec < _dac ;_ec ++{var _bec int ;_eedf :=false ;_feb :=(_beae >>4)&0x1ff;if _feb ==0x1ff{_eedf =true ;_bec =1;}else if _feb ==0x00{_eedf =true ;};if !_eedf {if _eaff ._bac {_ac =_eaff .overrideAtTemplate0 (_beae ,_bbc +_ec ,_dgd ,_aae ,_ec );
_eaff ._cc .SetIndex (int32 (_ac ));}else {_eaff ._cc .SetIndex (int32 (_beae ));};_bec ,_gag =_eaff ._dc .DecodeBit (_eaff ._cc );if _gag !=nil {return _gag ;};};_gab :=uint (7-_ec );_aae |=_bec <<_gab ;_beae =((_beae &0xdb6)<<1)|_bec |(_bad >>_gab +5)&0x002|((_ga >>_gab +2)&0x010)|((_fgf >>_gab )&0x080)|((_gea >>_gab )&0x400);
};_gag =_eaff .RegionBitmap .SetByte (_eddg ,byte (_aae ));if _gag !=nil {return _gag ;};_eddg ++;_faee ++;};return nil ;};func (_acbd *GenericRegion )overrideAtTemplate2 (_fff ,_bbba ,_gbfc ,_cbag ,_beaa int )int {_fff &=0x3FB;if _acbd .GBAtY [0]==0&&_acbd .GBAtX [0]>=-int8 (_beaa ){_fff |=(_cbag >>uint (7-(int8 (_beaa )+_acbd .GBAtX [0]))&0x1)<<2;
}else {_fff |=int (_acbd .getPixel (_bbba +int (_acbd .GBAtX [0]),_gbfc +int (_acbd .GBAtY [0])))<<2;};return _fff ;};func (_gad *Header )readNumberOfReferredToSegments (_dgbac _gf .StreamReader )(uint64 ,error ){const _fba ="\u0072\u0065\u0061\u0064\u004e\u0075\u006d\u0062\u0065\u0072O\u0066\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
_dbbd ,_bdcc :=_dgbac .ReadBits (3);if _bdcc !=nil {return 0,_da .Wrap (_bdcc ,_fba ,"\u0063\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0072\u0074\u0073");};_dbbd &=0xf;var _cdc []byte ;if _dbbd <=4{_cdc =make ([]byte ,5);for _fcff :=0;_fcff <=4;_fcff ++{_faa ,_agggf :=_dgbac .ReadBit ();
if _agggf !=nil {return 0,_da .Wrap (_agggf ,_fba ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_cdc [_fcff ]=byte (_faa );};}else {_dbbd ,_bdcc =_dgbac .ReadBits (29);if _bdcc !=nil {return 0,_bdcc ;};_dbbd &=_d .MaxInt32 ;
_egcb :=(_dbbd +8)>>3;_egcb <<=3;_cdc =make ([]byte ,_egcb );var _becg uint64 ;for _becg =0;_becg < _egcb ;_becg ++{_gega ,_cddd :=_dgbac .ReadBit ();if _cddd !=nil {return 0,_da .Wrap (_cddd ,_fba ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");
};_cdc [_becg ]=byte (_gega );};};return _dbbd ,nil ;};func (_gefc *GenericRegion )overrideAtTemplate0a (_cgd ,_cfg ,_ead ,_ccf ,_dgdb ,_fcb int )int {if _gefc .GBAtOverride [0]{_cgd &=0xFFEF;if _gefc .GBAtY [0]==0&&_gefc .GBAtX [0]>=-int8 (_dgdb ){_cgd |=(_ccf >>uint (int8 (_fcb )-_gefc .GBAtX [0]&0x1))<<4;
}else {_cgd |=int (_gefc .getPixel (_cfg +int (_gefc .GBAtX [0]),_ead +int (_gefc .GBAtY [0])))<<4;};};if _gefc .GBAtOverride [1]{_cgd &=0xFBFF;if _gefc .GBAtY [1]==0&&_gefc .GBAtX [1]>=-int8 (_dgdb ){_cgd |=(_ccf >>uint (int8 (_fcb )-_gefc .GBAtX [1]&0x1))<<10;
}else {_cgd |=int (_gefc .getPixel (_cfg +int (_gefc .GBAtX [1]),_ead +int (_gefc .GBAtY [1])))<<10;};};if _gefc .GBAtOverride [2]{_cgd &=0xF7FF;if _gefc .GBAtY [2]==0&&_gefc .GBAtX [2]>=-int8 (_dgdb ){_cgd |=(_ccf >>uint (int8 (_fcb )-_gefc .GBAtX [2]&0x1))<<11;
}else {_cgd |=int (_gefc .getPixel (_cfg +int (_gefc .GBAtX [2]),_ead +int (_gefc .GBAtY [2])))<<11;};};if _gefc .GBAtOverride [3]{_cgd &=0x7FFF;if _gefc .GBAtY [3]==0&&_gefc .GBAtX [3]>=-int8 (_dgdb ){_cgd |=(_ccf >>uint (int8 (_fcb )-_gefc .GBAtX [3]&0x1))<<15;
}else {_cgd |=int (_gefc .getPixel (_cfg +int (_gefc .GBAtX [3]),_ead +int (_gefc .GBAtY [3])))<<15;};};return _cgd ;};func (_bffea *TextRegion )parseHeader ()error {var _ccfg error ;_dae .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069n\u0073\u002e\u002e\u002e");
defer func (){if _ccfg !=nil {_dae .Log .Trace ("\u005b\u0054\u0045\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044E\u0052\u005d\u0020\u0066\u0061i\u006c\u0065d\u002e\u0020\u0025\u0076",_ccfg );
}else {_dae .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069s\u0068\u0065\u0064\u002e");};}();if _ccfg =_bffea .RegionInfo .parseHeader ();
_ccfg !=nil {return _ccfg ;};if _ccfg =_bffea .readRegionFlags ();_ccfg !=nil {return _ccfg ;};if _bffea .IsHuffmanEncoded {if _ccfg =_bffea .readHuffmanFlags ();_ccfg !=nil {return _ccfg ;};};if _ccfg =_bffea .readUseRefinement ();_ccfg !=nil {return _ccfg ;
};if _ccfg =_bffea .readAmountOfSymbolInstances ();_ccfg !=nil {return _ccfg ;};if _ccfg =_bffea .getSymbols ();_ccfg !=nil {return _ccfg ;};if _ccfg =_bffea .computeSymbolCodeLength ();_ccfg !=nil {return _ccfg ;};if _ccfg =_bffea .checkInput ();_ccfg !=nil {return _ccfg ;
};_dae .Log .Trace ("\u0025\u0073",_bffea .String ());return nil ;};func (_gefag *TextRegion )encodeFlags (_adgb _gf .BinaryWriter )(_efbce int ,_fbec error ){const _feac ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _fbec =_adgb .WriteBit (int (_gefag .SbrTemplate ));
_fbec !=nil {return _efbce ,_da .Wrap (_fbec ,_feac ,"s\u0062\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};if _ ,_fbec =_adgb .WriteBits (uint64 (_gefag .SbDsOffset ),5);_fbec !=nil {return _efbce ,_da .Wrap (_fbec ,_feac ,"\u0073\u0062\u0044\u0073\u004f\u0066\u0066\u0073\u0065\u0074");
};if _fbec =_adgb .WriteBit (int (_gefag .DefaultPixel ));_fbec !=nil {return _efbce ,_da .Wrap (_fbec ,_feac ,"\u0044\u0065\u0066a\u0075\u006c\u0074\u0050\u0069\u0078\u0065\u006c");};if _ ,_fbec =_adgb .WriteBits (uint64 (_gefag .CombinationOperator ),2);
_fbec !=nil {return _efbce ,_da .Wrap (_fbec ,_feac ,"\u0043\u006f\u006d\u0062in\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072");};if _fbec =_adgb .WriteBit (int (_gefag .IsTransposed ));_fbec !=nil {return _efbce ,_da .Wrap (_fbec ,_feac ,"\u0069\u0073\u0020\u0074\u0072\u0061\u006e\u0073\u0070\u006f\u0073\u0065\u0064");
};if _ ,_fbec =_adgb .WriteBits (uint64 (_gefag .ReferenceCorner ),2);_fbec !=nil {return _efbce ,_da .Wrap (_fbec ,_feac ,"\u0072\u0065f\u0065\u0072\u0065n\u0063\u0065\u0020\u0063\u006f\u0072\u006e\u0065\u0072");};if _ ,_fbec =_adgb .WriteBits (uint64 (_gefag .LogSBStrips ),2);
_fbec !=nil {return _efbce ,_da .Wrap (_fbec ,_feac ,"L\u006f\u0067\u0053\u0042\u0053\u0074\u0072\u0069\u0070\u0073");};var _edga int ;if _gefag .UseRefinement {_edga =1;};if _fbec =_adgb .WriteBit (_edga );_fbec !=nil {return _efbce ,_da .Wrap (_fbec ,_feac ,"\u0075\u0073\u0065\u0020\u0072\u0065\u0066\u0069\u006ee\u006d\u0065\u006e\u0074");
};_edga =0;if _gefag .IsHuffmanEncoded {_edga =1;};if _fbec =_adgb .WriteBit (_edga );_fbec !=nil {return _efbce ,_da .Wrap (_fbec ,_feac ,"u\u0073\u0065\u0020\u0068\u0075\u0066\u0066\u006d\u0061\u006e");};_efbce =2;return _efbce ,nil ;};func (_fdbg *HalftoneRegion )renderPattern (_geb [][]int )(_fgfb error ){var _dcag ,_deaf int ;
for _dbgg :=0;_dbgg < int (_fdbg .HGridHeight );_dbgg ++{for _cbg :=0;_cbg < int (_fdbg .HGridWidth );_cbg ++{_dcag =_fdbg .computeX (_dbgg ,_cbg );_deaf =_fdbg .computeY (_dbgg ,_cbg );_cdad :=_fdbg .Patterns [_geb [_dbgg ][_cbg ]];if _fgfb =_ee .Blit (_cdad ,_fdbg .HalftoneRegionBitmap ,_dcag +int (_fdbg .HGridX ),_deaf +int (_fdbg .HGridY ),_fdbg .CombinationOperator );
_fgfb !=nil {return _fgfb ;};};};return nil ;};func (_bca *GenericRegion )overrideAtTemplate0b (_dde ,_fcfd ,_gcfa ,_dcgb ,_efb ,_gfbf int )int {if _bca .GBAtOverride [0]{_dde &=0xFFFD;if _bca .GBAtY [0]==0&&_bca .GBAtX [0]>=-int8 (_efb ){_dde |=(_dcgb >>uint (int8 (_gfbf )-_bca .GBAtX [0]&0x1))<<1;
}else {_dde |=int (_bca .getPixel (_fcfd +int (_bca .GBAtX [0]),_gcfa +int (_bca .GBAtY [0])))<<1;};};if _bca .GBAtOverride [1]{_dde &=0xDFFF;if _bca .GBAtY [1]==0&&_bca .GBAtX [1]>=-int8 (_efb ){_dde |=(_dcgb >>uint (int8 (_gfbf )-_bca .GBAtX [1]&0x1))<<13;
}else {_dde |=int (_bca .getPixel (_fcfd +int (_bca .GBAtX [1]),_gcfa +int (_bca .GBAtY [1])))<<13;};};if _bca .GBAtOverride [2]{_dde &=0xFDFF;if _bca .GBAtY [2]==0&&_bca .GBAtX [2]>=-int8 (_efb ){_dde |=(_dcgb >>uint (int8 (_gfbf )-_bca .GBAtX [2]&0x1))<<9;
}else {_dde |=int (_bca .getPixel (_fcfd +int (_bca .GBAtX [2]),_gcfa +int (_bca .GBAtY [2])))<<9;};};if _bca .GBAtOverride [3]{_dde &=0xBFFF;if _bca .GBAtY [3]==0&&_bca .GBAtX [3]>=-int8 (_efb ){_dde |=(_dcgb >>uint (int8 (_gfbf )-_bca .GBAtX [3]&0x1))<<14;
}else {_dde |=int (_bca .getPixel (_fcfd +int (_bca .GBAtX [3]),_gcfa +int (_bca .GBAtY [3])))<<14;};};if _bca .GBAtOverride [4]{_dde &=0xEFFF;if _bca .GBAtY [4]==0&&_bca .GBAtX [4]>=-int8 (_efb ){_dde |=(_dcgb >>uint (int8 (_gfbf )-_bca .GBAtX [4]&0x1))<<12;
}else {_dde |=int (_bca .getPixel (_fcfd +int (_bca .GBAtX [4]),_gcfa +int (_bca .GBAtY [4])))<<12;};};if _bca .GBAtOverride [5]{_dde &=0xFFDF;if _bca .GBAtY [5]==0&&_bca .GBAtX [5]>=-int8 (_efb ){_dde |=(_dcgb >>uint (int8 (_gfbf )-_bca .GBAtX [5]&0x1))<<5;
}else {_dde |=int (_bca .getPixel (_fcfd +int (_bca .GBAtX [5]),_gcfa +int (_bca .GBAtY [5])))<<5;};};if _bca .GBAtOverride [6]{_dde &=0xFFFB;if _bca .GBAtY [6]==0&&_bca .GBAtX [6]>=-int8 (_efb ){_dde |=(_dcgb >>uint (int8 (_gfbf )-_bca .GBAtX [6]&0x1))<<2;
}else {_dde |=int (_bca .getPixel (_fcfd +int (_bca .GBAtX [6]),_gcfa +int (_bca .GBAtY [6])))<<2;};};if _bca .GBAtOverride [7]{_dde &=0xFFF7;if _bca .GBAtY [7]==0&&_bca .GBAtX [7]>=-int8 (_efb ){_dde |=(_dcgb >>uint (int8 (_gfbf )-_bca .GBAtX [7]&0x1))<<3;
}else {_dde |=int (_bca .getPixel (_fcfd +int (_bca .GBAtX [7]),_gcfa +int (_bca .GBAtY [7])))<<3;};};if _bca .GBAtOverride [8]{_dde &=0xF7FF;if _bca .GBAtY [8]==0&&_bca .GBAtX [8]>=-int8 (_efb ){_dde |=(_dcgb >>uint (int8 (_gfbf )-_bca .GBAtX [8]&0x1))<<11;
}else {_dde |=int (_bca .getPixel (_fcfd +int (_bca .GBAtX [8]),_gcfa +int (_bca .GBAtY [8])))<<11;};};if _bca .GBAtOverride [9]{_dde &=0xFFEF;if _bca .GBAtY [9]==0&&_bca .GBAtX [9]>=-int8 (_efb ){_dde |=(_dcgb >>uint (int8 (_gfbf )-_bca .GBAtX [9]&0x1))<<4;
}else {_dde |=int (_bca .getPixel (_fcfd +int (_bca .GBAtX [9]),_gcfa +int (_bca .GBAtY [9])))<<4;};};if _bca .GBAtOverride [10]{_dde &=0x7FFF;if _bca .GBAtY [10]==0&&_bca .GBAtX [10]>=-int8 (_efb ){_dde |=(_dcgb >>uint (int8 (_gfbf )-_bca .GBAtX [10]&0x1))<<15;
}else {_dde |=int (_bca .getPixel (_fcfd +int (_bca .GBAtX [10]),_gcfa +int (_bca .GBAtY [10])))<<15;};};if _bca .GBAtOverride [11]{_dde &=0xFDFF;if _bca .GBAtY [11]==0&&_bca .GBAtX [11]>=-int8 (_efb ){_dde |=(_dcgb >>uint (int8 (_gfbf )-_bca .GBAtX [11]&0x1))<<10;
}else {_dde |=int (_bca .getPixel (_fcfd +int (_bca .GBAtX [11]),_gcfa +int (_bca .GBAtY [11])))<<10;};};return _dde ;};func (_cgeb *TextRegion )decodeSymInRefSize ()(int64 ,error ){const _geegf ="\u0064e\u0063o\u0064\u0065\u0053\u0079\u006dI\u006e\u0052e\u0066\u0053\u0069\u007a\u0065";
if _cgeb .SbHuffRSize ==0{_babd ,_bbebe :=_gfb .GetStandardTable (1);if _bbebe !=nil {return 0,_da .Wrap (_bbebe ,_geegf ,"");};return _babd .Decode (_cgeb ._eafe );};if _cgeb ._bedf ==nil {var (_bccaa int ;_cdge error ;);if _cgeb .SbHuffFS ==3{_bccaa ++;
};if _cgeb .SbHuffDS ==3{_bccaa ++;};if _cgeb .SbHuffDT ==3{_bccaa ++;};if _cgeb .SbHuffRDWidth ==3{_bccaa ++;};if _cgeb .SbHuffRDHeight ==3{_bccaa ++;};if _cgeb .SbHuffRDX ==3{_bccaa ++;};if _cgeb .SbHuffRDY ==3{_bccaa ++;};_cgeb ._bedf ,_cdge =_cgeb .getUserTable (_bccaa );
if _cdge !=nil {return 0,_da .Wrap (_cdge ,_geegf ,"");};};_gdecb ,_aabe :=_cgeb ._bedf .Decode (_cgeb ._eafe );if _aabe !=nil {return 0,_da .Wrap (_aabe ,_geegf ,"");};return _gdecb ,nil ;};func (_cge *SymbolDictionary )decodeNewSymbols (_cddc ,_dfee uint32 ,_ecdb *_ee .Bitmap ,_adgc ,_fgeb int32 )error {if _cge ._dbdd ==nil {_cge ._dbdd =_ggae (_cge ._faad ,nil );
if _cge ._fagb ==nil {var _efaf error ;_cge ._fagb ,_efaf =_ef .New (_cge ._faad );if _efaf !=nil {return _efaf ;};};if _cge ._cfed ==nil {_cge ._cfed =_ef .NewStats (65536,1);};};_cge ._dbdd .setParameters (_cge ._cfed ,_cge ._fagb ,_cge .SdrTemplate ,_cddc ,_dfee ,_ecdb ,_adgc ,_fgeb ,false ,_cge .SdrATX ,_cge .SdrATY );
return _cge .addSymbol (_cge ._dbdd );};func (_bfgga *TextRegion )decodeIds ()(int64 ,error ){const _gbbc ="\u0064e\u0063\u006f\u0064\u0065\u0049\u0064s";if _bfgga .IsHuffmanEncoded {if _bfgga .SbHuffDS ==3{if _bfgga ._efec ==nil {_deee :=0;if _bfgga .SbHuffFS ==3{_deee ++;
};var _fgge error ;_bfgga ._efec ,_fgge =_bfgga .getUserTable (_deee );if _fgge !=nil {return 0,_da .Wrap (_fgge ,_gbbc ,"");};};return _bfgga ._efec .Decode (_bfgga ._eafe );};_cgc ,_bggdb :=_gfb .GetStandardTable (8+int (_bfgga .SbHuffDS ));if _bggdb !=nil {return 0,_da .Wrap (_bggdb ,_gbbc ,"");
};return _cgc .Decode (_bfgga ._eafe );};_dgfc ,_dbddg :=_bfgga ._adabd .DecodeInt (_bfgga ._becd );if _dbddg !=nil {return 0,_da .Wrap (_dbddg ,_gbbc ,"\u0063\u0078\u0049\u0041\u0044\u0053");};return int64 (_dgfc ),nil ;};func (_ddbc *Header )readHeaderFlags ()error {const _bfga ="\u0072e\u0061d\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006c\u0061\u0067\u0073";
_fgff ,_egde :=_ddbc .Reader .ReadBit ();if _egde !=nil {return _da .Wrap (_egde ,_bfga ,"r\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067");};if _fgff !=0{_ddbc .RetainFlag =true ;};_fgff ,_egde =_ddbc .Reader .ReadBit ();if _egde !=nil {return _da .Wrap (_egde ,_bfga ,"\u0070\u0061g\u0065\u0020\u0061s\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e");
};if _fgff !=0{_ddbc .PageAssociationFieldSize =true ;};_gac ,_egde :=_ddbc .Reader .ReadBits (6);if _egde !=nil {return _da .Wrap (_egde ,_bfga ,"\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065");};_ddbc .Type =Type (int (_gac ));return nil ;
};func (_dgeg *GenericRegion )copyLineAbove (_bde int )error {_cafb :=_bde *_dgeg .Bitmap .RowStride ;_cae :=_cafb -_dgeg .Bitmap .RowStride ;for _ccc :=0;_ccc < _dgeg .Bitmap .RowStride ;_ccc ++{_gff ,_fbfg :=_dgeg .Bitmap .GetByte (_cae );if _fbfg !=nil {return _fbfg ;
};_cae ++;if _fbfg =_dgeg .Bitmap .SetByte (_cafb ,_gff );_fbfg !=nil {return _fbfg ;};_cafb ++;};return nil ;};func (_ggf *GenericRefinementRegion )GetRegionInfo ()*RegionSegment {return _ggf .RegionInfo };func (_fca *GenericRegion )GetRegionBitmap ()(_cfb *_ee .Bitmap ,_ega error ){if _fca .Bitmap !=nil {return _fca .Bitmap ,nil ;
};if _fca .IsMMREncoded {if _fca ._geg ==nil {_fca ._geg ,_ega =_ae .New (_fca ._gcgc ,int (_fca .RegionSegment .BitmapWidth ),int (_fca .RegionSegment .BitmapHeight ),_fca .DataOffset ,_fca .DataLength );if _ega !=nil {return nil ,_ega ;};};_fca .Bitmap ,_ega =_fca ._geg .UncompressMMR ();
return _fca .Bitmap ,_ega ;};if _ega =_fca .updateOverrideFlags ();_ega !=nil {return nil ,_ega ;};var _fbc int ;if _fca ._ada ==nil {_fca ._ada ,_ega =_ef .New (_fca ._gcgc );if _ega !=nil {return nil ,_ega ;};};if _fca ._ebe ==nil {_fca ._ebe =_ef .NewStats (65536,1);
};_fca .Bitmap =_ee .New (int (_fca .RegionSegment .BitmapWidth ),int (_fca .RegionSegment .BitmapHeight ));_gbfa :=int (uint32 (_fca .Bitmap .Width +7)&(^uint32 (7)));for _feda :=0;_feda < _fca .Bitmap .Height ;_feda ++{if _fca .IsTPGDon {var _bfgc int ;
_bfgc ,_ega =_fca .decodeSLTP ();if _ega !=nil {return nil ,_ega ;};_fbc ^=_bfgc ;};if _fbc ==1{if _feda > 0{if _ega =_fca .copyLineAbove (_feda );_ega !=nil {return nil ,_ega ;};};}else {if _ega =_fca .decodeLine (_feda ,_fca .Bitmap .Width ,_gbfa );_ega !=nil {return nil ,_ega ;
};};};return _fca .Bitmap ,nil ;};func (_edcf *TableSegment )HtOOB ()int32 {return _edcf ._afdfd };func (_fffc *TextRegion )setContexts (_gcaa *_ef .DecoderStats ,_dgaa *_ef .DecoderStats ,_abfd *_ef .DecoderStats ,_bedad *_ef .DecoderStats ,_aege *_ef .DecoderStats ,_eadf *_ef .DecoderStats ,_ggfa *_ef .DecoderStats ,_gggb *_ef .DecoderStats ,_fdeg *_ef .DecoderStats ,_ebgc *_ef .DecoderStats ){_fffc ._agebg =_dgaa ;
_fffc ._aed =_abfd ;_fffc ._becd =_bedad ;_fffc ._cgdg =_aege ;_fffc ._bdfe =_ggfa ;_fffc ._gaec =_gggb ;_fffc ._cgaa =_eadf ;_fffc ._cgbc =_fdeg ;_fffc ._ccgcf =_ebgc ;_fffc ._bgcc =_gcaa ;};func (_gcc *Header )pageSize ()uint {if _gcc .PageAssociation <=255{return 1;
};return 4;};func (_agaf *RegionSegment )String ()string {_ebab :=&_dg .Builder {};_ebab .WriteString ("\u0009[\u0052E\u0047\u0049\u004f\u004e\u0020S\u0045\u0047M\u0045\u004e\u0054\u005d\u000a");_ebab .WriteString (_ede .Sprintf ("\t\u0009\u002d\u0020\u0042\u0069\u0074m\u0061\u0070\u0020\u0028\u0077\u0069d\u0074\u0068\u002c\u0020\u0068\u0065\u0069g\u0068\u0074\u0029\u0020\u005b\u0025\u0064\u0078\u0025\u0064]\u000a",_agaf .BitmapWidth ,_agaf .BitmapHeight ));
_ebab .WriteString (_ede .Sprintf ("\u0009\u0009\u002d\u0020L\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0028\u0078,\u0079)\u003a\u0020\u005b\u0025\u0064\u002c\u0025d\u005d\u000a",_agaf .XLocation ,_agaf .YLocation ));_ebab .WriteString (_ede .Sprintf ("\t\u0009\u002d\u0020\u0043\u006f\u006db\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070e\u0072\u0061\u0074o\u0072:\u0020\u0025\u0073",_agaf .CombinaionOperator ));
return _ebab .String ();};func (_bbff *SymbolDictionary )readNumberOfNewSymbols ()error {_bcfe ,_dcda :=_bbff ._faad .ReadBits (32);if _dcda !=nil {return _dcda ;};_bbff .NumberOfNewSymbols =uint32 (_bcfe &_d .MaxUint32 );return nil ;};func (_bdeg *TextRegion )decodeRdx ()(int64 ,error ){const _cfce ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064x";
if _bdeg .IsHuffmanEncoded {if _bdeg .SbHuffRDX ==3{if _bdeg ._fbdgd ==nil {var (_ecdd int ;_edfd error ;);if _bdeg .SbHuffFS ==3{_ecdd ++;};if _bdeg .SbHuffDS ==3{_ecdd ++;};if _bdeg .SbHuffDT ==3{_ecdd ++;};if _bdeg .SbHuffRDWidth ==3{_ecdd ++;};if _bdeg .SbHuffRDHeight ==3{_ecdd ++;
};_bdeg ._fbdgd ,_edfd =_bdeg .getUserTable (_ecdd );if _edfd !=nil {return 0,_da .Wrap (_edfd ,_cfce ,"");};};return _bdeg ._fbdgd .Decode (_bdeg ._eafe );};_cfec ,_fgcb :=_gfb .GetStandardTable (14+int (_bdeg .SbHuffRDX ));if _fgcb !=nil {return 0,_da .Wrap (_fgcb ,_cfce ,"");
};return _cfec .Decode (_bdeg ._eafe );};_dgaba ,_cggc :=_bdeg ._adabd .DecodeInt (_bdeg ._cgbc );if _cggc !=nil {return 0,_da .Wrap (_cggc ,_cfce ,"");};return int64 (_dgaba ),nil ;};func (_cfbg *SymbolDictionary )Encode (w _gf .BinaryWriter )(_gbfaa int ,_afee error ){const _aegad ="\u0053\u0079\u006dbo\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0045\u006e\u0063\u006f\u0064\u0065";
if _cfbg ==nil {return 0,_da .Error (_aegad ,"\u0073\u0079m\u0062\u006f\u006c\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066in\u0065\u0064");};if _gbfaa ,_afee =_cfbg .encodeFlags (w );
_afee !=nil {return _gbfaa ,_da .Wrap (_afee ,_aegad ,"");};_befbd ,_afee :=_cfbg .encodeATFlags (w );if _afee !=nil {return _gbfaa ,_da .Wrap (_afee ,_aegad ,"");};_gbfaa +=_befbd ;if _befbd ,_afee =_cfbg .encodeRefinementATFlags (w );_afee !=nil {return _gbfaa ,_da .Wrap (_afee ,_aegad ,"");
};_gbfaa +=_befbd ;if _befbd ,_afee =_cfbg .encodeNumSyms (w );_afee !=nil {return _gbfaa ,_da .Wrap (_afee ,_aegad ,"");};_gbfaa +=_befbd ;if _befbd ,_afee =_cfbg .encodeSymbols (w );_afee !=nil {return _gbfaa ,_da .Wrap (_afee ,_aegad ,"");};_gbfaa +=_befbd ;
return _gbfaa ,nil ;};var (_bfcb Segmenter ;_feff =map[Type ]func ()Segmenter {TSymbolDictionary :func ()Segmenter {return &SymbolDictionary {}},TIntermediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateLosslessTextRegion :func ()Segmenter {return &TextRegion {}},TPatternDictionary :func ()Segmenter {return &PatternDictionary {}},TIntermediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateLosslessHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TIntermediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateLosslessGenericRegion :func ()Segmenter {return &GenericRegion {}},TIntermediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateLosslessGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TPageInformation :func ()Segmenter {return &PageInformationSegment {}},TEndOfPage :func ()Segmenter {return _bfcb },TEndOfStrip :func ()Segmenter {return &EndOfStripe {}},TEndOfFile :func ()Segmenter {return _bfcb },TProfiles :func ()Segmenter {return _bfcb },TTables :func ()Segmenter {return &TableSegment {}},TExtension :func ()Segmenter {return _bfcb },TBitmap :func ()Segmenter {return _bfcb }};
);func (_eddb *SymbolDictionary )readAtPixels (_dffc int )error {_eddb .SdATX =make ([]int8 ,_dffc );_eddb .SdATY =make ([]int8 ,_dffc );var (_bfbd byte ;_bcde error ;);for _bgg :=0;_bgg < _dffc ;_bgg ++{_bfbd ,_bcde =_eddb ._faad .ReadByte ();if _bcde !=nil {return _bcde ;
};_eddb .SdATX [_bgg ]=int8 (_bfbd );_bfbd ,_bcde =_eddb ._faad .ReadByte ();if _bcde !=nil {return _bcde ;};_eddb .SdATY [_bgg ]=int8 (_bfbd );};return nil ;};func (_eceb *Header )String ()string {_dee :=&_dg .Builder {};_dee .WriteString ("\u000a[\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045A\u0044\u0045\u0052\u005d\u000a");
_dee .WriteString (_ede .Sprintf ("\t\u002d\u0020\u0053\u0065gm\u0065n\u0074\u004e\u0075\u006d\u0062e\u0072\u003a\u0020\u0025\u0076\u000a",_eceb .SegmentNumber ));_dee .WriteString (_ede .Sprintf ("\u0009\u002d\u0020T\u0079\u0070\u0065\u003a\u0020\u0025\u0076\u000a",_eceb .Type ));
_dee .WriteString (_ede .Sprintf ("\u0009-\u0020R\u0065\u0074\u0061\u0069\u006eF\u006c\u0061g\u003a\u0020\u0025\u0076\u000a",_eceb .RetainFlag ));_dee .WriteString (_ede .Sprintf ("\u0009\u002d\u0020Pa\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_eceb .PageAssociation ));
_dee .WriteString (_ede .Sprintf ("\u0009\u002d\u0020\u0050\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074i\u006fn\u0046\u0069\u0065\u006c\u0064\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_eceb .PageAssociationFieldSize ));
_dee .WriteString ("\u0009-\u0020R\u0054\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u0053\u003a\u000a");for _ ,_dgdf :=range _eceb .RTSNumbers {_dee .WriteString (_ede .Sprintf ("\u0009\t\u002d\u0020\u0025\u0064\u000a",_dgdf ));};_dee .WriteString (_ede .Sprintf ("\t\u002d \u0048\u0065\u0061\u0064\u0065\u0072\u004c\u0065n\u0067\u0074\u0068\u003a %\u0076\u000a",_eceb .HeaderLength ));
_dee .WriteString (_ede .Sprintf ("\u0009-\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061L\u0065n\u0067\u0074\u0068\u003a\u0020\u0025\u0076\n",_eceb .SegmentDataLength ));_dee .WriteString (_ede .Sprintf ("\u0009\u002d\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074D\u0061\u0074\u0061\u0053\u0074\u0061\u0072t\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0076\u000a",_eceb .SegmentDataStartOffset ));
return _dee .String ();};func (_cee *GenericRefinementRegion )readAtPixels ()error {_cee .GrAtX =make ([]int8 ,2);_cee .GrAtY =make ([]int8 ,2);_cf ,_ffb :=_cee ._fd .ReadByte ();if _ffb !=nil {return _ffb ;};_cee .GrAtX [0]=int8 (_cf );_cf ,_ffb =_cee ._fd .ReadByte ();
if _ffb !=nil {return _ffb ;};_cee .GrAtY [0]=int8 (_cf );_cf ,_ffb =_cee ._fd .ReadByte ();if _ffb !=nil {return _ffb ;};_cee .GrAtX [1]=int8 (_cf );_cf ,_ffb =_cee ._fd .ReadByte ();if _ffb !=nil {return _ffb ;};_cee .GrAtY [1]=int8 (_cf );return nil ;
};func (_bb *EndOfStripe )LineNumber ()int {return _bb ._eb };func (_dceg Type )String ()string {switch _dceg {case TSymbolDictionary :return "\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079";case TIntermediateTextRegion :return "\u0049n\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020T\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TImmediateTextRegion :return "I\u006d\u006d\u0065\u0064ia\u0074e\u0020\u0054\u0065\u0078\u0074 \u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessTextRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020L\u006f\u0073\u0073\u006c\u0065\u0073\u0073 \u0054\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TPatternDictionary :return "\u0050a\u0074t\u0065\u0072\u006e\u0020\u0044i\u0063\u0074i\u006f\u006e\u0061\u0072\u0079";case TIntermediateHalftoneRegion :return "\u0049\u006e\u0074\u0065r\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0048\u0061l\u0066t\u006f\u006e\u0065\u0020\u0052\u0065\u0067i\u006f\u006e";
case TImmediateHalftoneRegion :return "\u0049m\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u0048\u0061l\u0066t\u006fn\u0065\u0020\u0052\u0065\u0067\u0069\u006fn";case TImmediateLosslessHalftoneRegion :return "\u0049\u006d\u006ded\u0069\u0061\u0074\u0065\u0020\u004c\u006f\u0073\u0073l\u0065s\u0073 \u0048a\u006c\u0066\u0074\u006f\u006e\u0065\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TIntermediateGenericRegion :return "I\u006e\u0074\u0065\u0072\u006d\u0065d\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020R\u0065g\u0069\u006f\u006e";case TImmediateGenericRegion :return "\u0049m\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006ee\u0072\u0069\u0063\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TImmediateLosslessGenericRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u004c\u006f\u0073\u0073\u006c\u0065\u0073\u0073\u0020\u0047e\u006e\u0065\u0072\u0069\u0063\u0020\u0052e\u0067\u0069\u006f\u006e";case TIntermediateGenericRefinementRegion :return "\u0049\u006e\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0020\u0052\u0065\u0066i\u006e\u0065\u006d\u0065\u006et\u0020\u0052e\u0067\u0069\u006f\u006e";
case TImmediateGenericRefinementRegion :return "I\u006d\u006d\u0065\u0064\u0069\u0061t\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020\u0052\u0065\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020\u0052\u0065\u0067\u0069o\u006e";case TImmediateLosslessGenericRefinementRegion :return "\u0049m\u006d\u0065d\u0069\u0061\u0074\u0065 \u004c\u006f\u0073s\u006c\u0065\u0073\u0073\u0020\u0047\u0065\u006e\u0065ri\u0063\u0020\u0052e\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020R\u0065\u0067i\u006f\u006e";
case TPageInformation :return "\u0050\u0061g\u0065\u0020\u0049n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e";case TEndOfPage :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0050\u0061\u0067\u0065";case TEndOfStrip :return "\u0045\u006e\u0064 \u004f\u0066\u0020\u0053\u0074\u0072\u0069\u0070";
case TEndOfFile :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0046\u0069\u006c\u0065";case TProfiles :return "\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0073";case TTables :return "\u0054\u0061\u0062\u006c\u0065\u0073";case TExtension :return "\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn";
case TBitmap :return "\u0042\u0069\u0074\u006d\u0061\u0070";};return "I\u006ev\u0061\u006c\u0069\u0064\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0020Ki\u006e\u0064";};func (_dba *GenericRefinementRegion )decodeSLTP ()(int ,error ){_dba .Template .setIndex (_dba ._cc );
return _dba ._dc .DecodeBit (_dba ._cc );};func (_dfc *GenericRegion )String ()string {_dbdfc :=&_dg .Builder {};_dbdfc .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_dbdfc .WriteString (_dfc .RegionSegment .String ()+"\u000a");
_dbdfc .WriteString (_ede .Sprintf ("\u0009\u002d\u0020Us\u0065\u0045\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_dfc .UseExtTemplates ));_dbdfc .WriteString (_ede .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0044\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_dfc .IsTPGDon ));
_dbdfc .WriteString (_ede .Sprintf ("\u0009-\u0020G\u0042\u0054\u0065\u006d\u0070l\u0061\u0074e\u003a\u0020\u0025\u0064\u000a",_dfc .GBTemplate ));_dbdfc .WriteString (_ede .Sprintf ("\t\u002d \u0049\u0073\u004d\u004d\u0052\u0045\u006e\u0063o\u0064\u0065\u0064\u003a %\u0076\u000a",_dfc .IsMMREncoded ));
_dbdfc .WriteString (_ede .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_dfc .GBAtX ));_dbdfc .WriteString (_ede .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_dfc .GBAtY ));
_dbdfc .WriteString (_ede .Sprintf ("\t\u002d \u0047\u0042\u0041\u0074\u004f\u0076\u0065\u0072r\u0069\u0064\u0065\u003a %\u0076\u000a",_dfc .GBAtOverride ));return _dbdfc .String ();};func (_egbd *TableSegment )parseHeader ()error {var (_cddb int ;_ffde uint64 ;
_babe error ;);_cddb ,_babe =_egbd ._bfgb .ReadBit ();if _babe !=nil {return _babe ;};if _cddb ==1{return _ede .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0061\u0062\u006c\u0065 \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0064e\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u002e\u0020\u0042\u002e\u0032\u002e1\u0020\u0043\u006f\u0064\u0065\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0042\u0069\u0074\u0020\u0037\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u007a\u0065\u0072\u006f\u002e\u0020\u0057a\u0073\u003a \u0025\u0064",_cddb );
};if _ffde ,_babe =_egbd ._bfgb .ReadBits (3);_babe !=nil {return _babe ;};_egbd ._afede =(int32 (_ffde )+1)&0xf;if _ffde ,_babe =_egbd ._bfgb .ReadBits (3);_babe !=nil {return _babe ;};_egbd ._gaca =(int32 (_ffde )+1)&0xf;if _ffde ,_babe =_egbd ._bfgb .ReadBits (32);
_babe !=nil {return _babe ;};_egbd ._faea =int32 (_ffde &_d .MaxInt32 );if _ffde ,_babe =_egbd ._bfgb .ReadBits (32);_babe !=nil {return _babe ;};_egbd ._dfcf =int32 (_ffde &_d .MaxInt32 );return nil ;};func (_acdb *SymbolDictionary )readNumberOfExportedSymbols ()error {_bgcd ,_dbcbc :=_acdb ._faad .ReadBits (32);
if _dbcbc !=nil {return _dbcbc ;};_acdb .NumberOfExportedSymbols =uint32 (_bgcd &_d .MaxUint32 );return nil ;};type TableSegment struct{_bfgb _gf .StreamReader ;_afdfd int32 ;_gaca int32 ;_afede int32 ;_faea int32 ;_dfcf int32 ;};type Type int ;func (_dge *GenericRefinementRegion )Init (header *Header ,r _gf .StreamReader )error {_dge ._gfe =header ;
_dge ._fd =r ;_dge .RegionInfo =NewRegionSegment (r );return _dge .parseHeader ();};func (_dgdg *SymbolDictionary )encodeSymbols (_eebeg _gf .BinaryWriter )(_cfad int ,_acfd error ){const _gaab ="\u0065\u006e\u0063o\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c";
_feefb :=_fg .New ();_feefb .Init ();_ecdc ,_acfd :=_dgdg ._gdefg .SelectByIndexes (_dgdg ._ffg );if _acfd !=nil {return 0,_da .Wrap (_acfd ,_gaab ,"\u0069n\u0069\u0074\u0069\u0061\u006c");};_fdae :=map[*_ee .Bitmap ]int {};for _aafa ,_bgda :=range _ecdc .Values {_fdae [_bgda ]=_aafa ;
};_ecdc .SortByHeight ();var _dcaf ,_dabd int ;_dgab ,_acfd :=_ecdc .GroupByHeight ();if _acfd !=nil {return 0,_da .Wrap (_acfd ,_gaab ,"");};for _ ,_dagg :=range _dgab .Values {_agea :=_dagg .Values [0].Height ;_afad :=_agea -_dcaf ;if _acfd =_feefb .EncodeInteger (_fg .IADH ,_afad );
_acfd !=nil {return 0,_da .Wrapf (_acfd ,_gaab ,"\u0049\u0041\u0044\u0048\u0020\u0066\u006f\u0072\u0020\u0064\u0068\u003a \u0027\u0025\u0064\u0027",_afad );};_dcaf =_agea ;_aeaf ,_eaab :=_dagg .GroupByWidth ();if _eaab !=nil {return 0,_da .Wrapf (_eaab ,_gaab ,"\u0068\u0065\u0069g\u0068\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_agea );
};var _cafd int ;for _ ,_bead :=range _aeaf .Values {for _ ,_ebc :=range _bead .Values {_bcgg :=_ebc .Width ;_gbdf :=_bcgg -_cafd ;if _eaab =_feefb .EncodeInteger (_fg .IADW ,_gbdf );_eaab !=nil {return 0,_da .Wrapf (_eaab ,_gaab ,"\u0049\u0041\u0044\u0057\u0020\u0066\u006f\u0072\u0020\u0064\u0077\u003a \u0027\u0025\u0064\u0027",_gbdf );
};_cafd +=_gbdf ;if _eaab =_feefb .EncodeBitmap (_ebc ,false );_eaab !=nil {return 0,_da .Wrapf (_eaab ,_gaab ,"H\u0065i\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u0020W\u0069\u0064\u0074\u0068: \u0025\u0064",_agea ,_bcgg );};_fdgbd :=_fdae [_ebc ];_dgdg ._bcfc [_fdgbd ]=_dabd ;
_dabd ++;};};if _eaab =_feefb .EncodeOOB (_fg .IADW );_eaab !=nil {return 0,_da .Wrap (_eaab ,_gaab ,"\u0049\u0041\u0044\u0057");};};if _acfd =_feefb .EncodeInteger (_fg .IAEX ,0);_acfd !=nil {return 0,_da .Wrap (_acfd ,_gaab ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};if _acfd =_feefb .EncodeInteger (_fg .IAEX ,len (_dgdg ._ffg ));_acfd !=nil {return 0,_da .Wrap (_acfd ,_gaab ,"\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0073\u0079m\u0062\u006f\u006c\u0073");};_feefb .Final ();_cdcba ,_acfd :=_feefb .WriteTo (_eebeg );
if _acfd !=nil {return 0,_da .Wrap (_acfd ,_gaab ,"\u0077\u0072i\u0074\u0069\u006e\u0067 \u0065\u006ec\u006f\u0064\u0065\u0072\u0020\u0063\u006f\u006et\u0065\u0078\u0074\u0020\u0074\u006f\u0020\u0027\u0077\u0027\u0020\u0077r\u0069\u0074\u0065\u0072");};
return int (_cdcba ),nil ;};func (_eeed *PageInformationSegment )readCombinationOperatorOverrideAllowed ()error {_cccb ,_eedc :=_eeed ._ddgd .ReadBit ();if _eedc !=nil {return _eedc ;};if _cccb ==1{_eeed ._cgda =true ;};return nil ;};func (_aec *PageInformationSegment )encodeStripingInformation (_bab _gf .BinaryWriter )(_eeae int ,_fadff error ){const _gbgcg ="\u0065n\u0063\u006f\u0064\u0065S\u0074\u0072\u0069\u0070\u0069n\u0067I\u006ef\u006f\u0072\u006d\u0061\u0074\u0069\u006fn";
if !_aec .IsStripe {if _eeae ,_fadff =_bab .Write ([]byte {0x00,0x00});_fadff !=nil {return 0,_da .Wrap (_fadff ,_gbgcg ,"n\u006f\u0020\u0073\u0074\u0072\u0069\u0070\u0069\u006e\u0067");};return _eeae ,nil ;};_gdgd :=make ([]byte ,2);_ed .BigEndian .PutUint16 (_gdgd ,_aec .MaxStripeSize |1<<15);
if _eeae ,_fadff =_bab .Write (_gdgd );_fadff !=nil {return 0,_da .Wrapf (_fadff ,_gbgcg ,"\u0073\u0074\u0072i\u0070\u0069\u006e\u0067\u003a\u0020\u0025\u0064",_aec .MaxStripeSize );};return _eeae ,nil ;};func (_cbgc *SymbolDictionary )setExportedSymbols (_gbdc []int ){for _eebec :=uint32 (0);
_eebec < _cbgc ._cfee +_cbgc .NumberOfNewSymbols ;_eebec ++{if _gbdc [_eebec ]==1{var _gbedg *_ee .Bitmap ;if _eebec < _cbgc ._cfee {_gbedg =_cbgc ._dgde [_eebec ];}else {_gbedg =_cbgc ._fafd [_eebec -_cbgc ._cfee ];};_dae .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u002d\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u0020\u0041\u0064\u0064 E\u0078\u0070\u006fr\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027%\u0073\u0027",_gbedg );
_cbgc ._adbgd =append (_cbgc ._adbgd ,_gbedg );};};};func (_cccag *SymbolDictionary )setSymbolsArray ()error {if _cccag ._dgde ==nil {if _bcdc :=_cccag .retrieveImportSymbols ();_bcdc !=nil {return _bcdc ;};};if _cccag ._gbda ==nil {_cccag ._gbda =append (_cccag ._gbda ,_cccag ._dgde ...);
};return nil ;};func (_daef *PatternDictionary )readPatternWidthAndHeight ()error {_eaee ,_cfc :=_daef ._aaad .ReadByte ();if _cfc !=nil {return _cfc ;};_daef .HdpWidth =_eaee ;_eaee ,_cfc =_daef ._aaad .ReadByte ();if _cfc !=nil {return _cfc ;};_daef .HdpHeight =_eaee ;
return nil ;};func (_afaec *TextRegion )checkInput ()error {const _abef ="\u0063\u0068\u0065\u0063\u006b\u0049\u006e\u0070\u0075\u0074";if !_afaec .UseRefinement {if _afaec .SbrTemplate !=0{_dae .Log .Debug ("\u0053\u0062\u0072Te\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");
_afaec .SbrTemplate =0;};};if _afaec .SbHuffFS ==2||_afaec .SbHuffRDWidth ==2||_afaec .SbHuffRDHeight ==2||_afaec .SbHuffRDX ==2||_afaec .SbHuffRDY ==2{return _da .Error (_abef ,"h\u0075\u0066\u0066\u006d\u0061\u006e \u0066\u006c\u0061\u0067\u0020\u0076a\u006c\u0075\u0065\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074e\u0064");
};if !_afaec .UseRefinement {if _afaec .SbHuffRSize !=0{_dae .Log .Debug ("\u0053\u0062\u0048uf\u0066\u0052\u0053\u0069\u007a\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_afaec .SbHuffRSize =0;};if _afaec .SbHuffRDY !=0{_dae .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044Y\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");
_afaec .SbHuffRDY =0;};if _afaec .SbHuffRDX !=0{_dae .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044X\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_afaec .SbHuffRDX =0;};if _afaec .SbHuffRDWidth !=0{_dae .Log .Debug ("\u0053b\u0048\u0075\u0066\u0066R\u0044\u0057\u0069\u0064\u0074h\u0020s\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u00200");
_afaec .SbHuffRDWidth =0;};if _afaec .SbHuffRDHeight !=0{_dae .Log .Debug ("\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069g\u0068\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0030");_afaec .SbHuffRDHeight =0;};
};return nil ;};func (_ccb *Header )readDataStartOffset (_ccd _gf .StreamReader ,_ccfa OrganizationType ){if _ccfa ==OSequential {_ccb .SegmentDataStartOffset =uint64 (_ccd .StreamPosition ());};};type Pager interface{GetSegment (int )(*Header ,error );
GetBitmap ()(*_ee .Bitmap ,error );};func (_agce *template1 )form (_abee ,_bdb ,_gead ,_dcac ,_gee int16 )int16 {return ((_abee &0x02)<<8)|(_bdb <<6)|((_gead &0x03)<<4)|(_dcac <<1)|_gee ;};func (_cacg *HalftoneRegion )computeGrayScalePlanes (_gddf []*_ee .Bitmap ,_def int )([][]int ,error ){_cdg :=make ([][]int ,_cacg .HGridHeight );
for _agfgb :=0;_agfgb < len (_cdg );_agfgb ++{_cdg [_agfgb ]=make ([]int ,_cacg .HGridWidth );};for _ageb :=0;_ageb < int (_cacg .HGridHeight );_ageb ++{for _efca :=0;_efca < int (_cacg .HGridWidth );_efca +=8{var _caed int ;if _fab :=int (_cacg .HGridWidth )-_efca ;
_fab > 8{_caed =8;}else {_caed =_fab ;};_dggde :=_gddf [0].GetByteIndex (_efca ,_ageb );for _dbdab :=0;_dbdab < _caed ;_dbdab ++{_bafdb :=_dbdab +_efca ;_cdg [_ageb ][_bafdb ]=0;for _cfe :=0;_cfe < _def ;_cfe ++{_bbcba ,_ebde :=_gddf [_cfe ].GetByte (_dggde );
if _ebde !=nil {return nil ,_ebde ;};_acea :=_bbcba >>uint (7-_bafdb &7);_bce :=_acea &1;_dgfg :=1<<uint (_cfe );_acec :=int (_bce )*_dgfg ;_cdg [_ageb ][_bafdb ]+=_acec ;};};};};return _cdg ,nil ;};func (_cgg *PageInformationSegment )encodeFlags (_geade _gf .BinaryWriter )(_efeae error ){const _cdaf ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _efeae =_geade .SkipBits (1);_efeae !=nil {return _da .Wrap (_efeae ,_cdaf ,"\u0072\u0065\u0073e\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074");};var _aac int ;if _cgg .CombinationOperatorOverrideAllowed (){_aac =1;};if _efeae =_geade .WriteBit (_aac );
_efeae !=nil {return _da .Wrap (_efeae ,_cdaf ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0064\u0065\u006e");};_aac =0;if _cgg ._gegg {_aac =1;
};if _efeae =_geade .WriteBit (_aac );_efeae !=nil {return _da .Wrap (_efeae ,_cdaf ,"\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0061\u0075\u0078i\u006ci\u0061r\u0079\u0020\u0062\u0075\u0066\u0066\u0065r");};if _efeae =_geade .WriteBit ((int (_cgg ._cfda )>>1)&0x01);
_efeae !=nil {return _da .Wrap (_efeae ,_cdaf ,"\u0063\u006f\u006d\u0062\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006f\u0070\u0065\u0072\u0061\u0074o\u0072\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0062\u0069\u0074");};if _efeae =_geade .WriteBit (int (_cgg ._cfda )&0x01);
_efeae !=nil {return _da .Wrap (_efeae ,_cdaf ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0062\u0069\u0074");};_aac =int (_cgg .DefaultPixelValue );
if _efeae =_geade .WriteBit (_aac );_efeae !=nil {return _da .Wrap (_efeae ,_cdaf ,"\u0064e\u0066\u0061\u0075\u006c\u0074\u0020\u0070\u0061\u0067\u0065\u0020p\u0069\u0078\u0065\u006c\u0020\u0076\u0061\u006c\u0075\u0065");};_aac =0;if _cgg ._bacd {_aac =1;
};if _efeae =_geade .WriteBit (_aac );_efeae !=nil {return _da .Wrap (_efeae ,_cdaf ,"\u0063\u006f\u006e\u0074ai\u006e\u0073\u0020\u0072\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074");};_aac =0;if _cgg .IsLossless {_aac =1;};if _efeae =_geade .WriteBit (_aac );
_efeae !=nil {return _da .Wrap (_efeae ,_cdaf ,"p\u0061\u0067\u0065\u0020\u0069\u0073 \u0065\u0076\u0065\u006e\u0074\u0075\u0061\u006c\u006cy\u0020\u006c\u006fs\u0073l\u0065\u0073\u0073");};return nil ;};func (_bbcd *TextRegion )computeSymbolCodeLength ()error {if _bbcd .IsHuffmanEncoded {return _bbcd .symbolIDCodeLengths ();
};_bbcd ._bggde =int8 (_d .Ceil (_d .Log (float64 (_bbcd .NumberOfSymbols ))/_d .Log (2)));return nil ;};func (_facb *TextRegion )decodeRdy ()(int64 ,error ){const _feab ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064y";if _facb .IsHuffmanEncoded {if _facb .SbHuffRDY ==3{if _facb ._becda ==nil {var (_cafba int ;
_cccbc error ;);if _facb .SbHuffFS ==3{_cafba ++;};if _facb .SbHuffDS ==3{_cafba ++;};if _facb .SbHuffDT ==3{_cafba ++;};if _facb .SbHuffRDWidth ==3{_cafba ++;};if _facb .SbHuffRDHeight ==3{_cafba ++;};if _facb .SbHuffRDX ==3{_cafba ++;};_facb ._becda ,_cccbc =_facb .getUserTable (_cafba );
if _cccbc !=nil {return 0,_da .Wrap (_cccbc ,_feab ,"");};};return _facb ._becda .Decode (_facb ._eafe );};_agbea ,_aeac :=_gfb .GetStandardTable (14+int (_facb .SbHuffRDY ));if _aeac !=nil {return 0,_aeac ;};return _agbea .Decode (_facb ._eafe );};_bddb ,_egec :=_facb ._adabd .DecodeInt (_facb ._ccgcf );
if _egec !=nil {return 0,_da .Wrap (_egec ,_feab ,"");};return int64 (_bddb ),nil ;};func (_ced *GenericRefinementRegion )decodeTypicalPredictedLineTemplate1 (_dfg ,_dgba ,_bcb ,_dcd ,_de ,_gb ,_cgf ,_baf ,_bg int )(_gbf error ){var (_dgc ,_dbe int ;_fdf ,_eafa int ;
_fdag ,_dgf int ;_eedfb byte ;);if _dfg > 0{_eedfb ,_gbf =_ced .RegionBitmap .GetByte (_cgf -_bcb );if _gbf !=nil {return ;};_fdf =int (_eedfb );};if _baf > 0&&_baf <=_ced .ReferenceBitmap .Height {_eedfb ,_gbf =_ced .ReferenceBitmap .GetByte (_bg -_dcd +_gb );
if _gbf !=nil {return ;};_eafa =int (_eedfb )<<2;};if _baf >=0&&_baf < _ced .ReferenceBitmap .Height {_eedfb ,_gbf =_ced .ReferenceBitmap .GetByte (_bg +_gb );if _gbf !=nil {return ;};_fdag =int (_eedfb );};if _baf > -2&&_baf < _ced .ReferenceBitmap .Height -1{_eedfb ,_gbf =_ced .ReferenceBitmap .GetByte (_bg +_dcd +_gb );
if _gbf !=nil {return ;};_dgf =int (_eedfb );};_dgc =((_fdf >>5)&0x6)|((_dgf >>2)&0x30)|(_fdag &0xc0)|(_eafa &0x200);_dbe =((_dgf >>2)&0x70)|(_fdag &0xc0)|(_eafa &0x700);var _bf int ;for _dfe :=0;_dfe < _de ;_dfe =_bf {var (_gce int ;_fgfa int ;);_bf =_dfe +8;
if _gce =_dgba -_dfe ;_gce > 8{_gce =8;};_eag :=_bf < _dgba ;_fef :=_bf < _ced .ReferenceBitmap .Width ;_gbg :=_gb +1;if _dfg > 0{_eedfb =0;if _eag {_eedfb ,_gbf =_ced .RegionBitmap .GetByte (_cgf -_bcb +1);if _gbf !=nil {return ;};};_fdf =(_fdf <<8)|int (_eedfb );
};if _baf > 0&&_baf <=_ced .ReferenceBitmap .Height {var _ccg int ;if _fef {_eedfb ,_gbf =_ced .ReferenceBitmap .GetByte (_bg -_dcd +_gbg );if _gbf !=nil {return ;};_ccg =int (_eedfb )<<2;};_eafa =(_eafa <<8)|_ccg ;};if _baf >=0&&_baf < _ced .ReferenceBitmap .Height {_eedfb =0;
if _fef {_eedfb ,_gbf =_ced .ReferenceBitmap .GetByte (_bg +_gbg );if _gbf !=nil {return ;};};_fdag =(_fdag <<8)|int (_eedfb );};if _baf > -2&&_baf < (_ced .ReferenceBitmap .Height -1){_eedfb =0;if _fef {_eedfb ,_gbf =_ced .ReferenceBitmap .GetByte (_bg +_dcd +_gbg );
if _gbf !=nil {return ;};};_dgf =(_dgf <<8)|int (_eedfb );};for _dab :=0;_dab < _gce ;_dab ++{var _ad int ;_ggd :=(_dbe >>4)&0x1ff;switch _ggd {case 0x1ff:_ad =1;case 0x00:_ad =0;default:_ced ._cc .SetIndex (int32 (_dgc ));_ad ,_gbf =_ced ._dc .DecodeBit (_ced ._cc );
if _gbf !=nil {return ;};};_bcc :=uint (7-_dab );_fgfa |=_ad <<_bcc ;_dgc =((_dgc &0x0d6)<<1)|_ad |(_fdf >>_bcc +5)&0x002|((_dgf >>_bcc +2)&0x010)|((_fdag >>_bcc )&0x040)|((_eafa >>_bcc )&0x200);_dbe =((_dbe &0xdb)<<1)|((_dgf >>_bcc +2)&0x010)|((_fdag >>_bcc )&0x080)|((_eafa >>_bcc )&0x400);
};_gbf =_ced .RegionBitmap .SetByte (_cgf ,byte (_fgfa ));if _gbf !=nil {return ;};_cgf ++;_bg ++;};return nil ;};func (_afcg *PageInformationSegment )readWidthAndHeight ()error {_gcff ,_ggdb :=_afcg ._ddgd .ReadBits (32);if _ggdb !=nil {return _ggdb ;
};_afcg .PageBMWidth =int (_gcff &_d .MaxInt32 );_gcff ,_ggdb =_afcg ._ddgd .ReadBits (32);if _ggdb !=nil {return _ggdb ;};_afcg .PageBMHeight =int (_gcff &_d .MaxInt32 );return nil ;};func (_cdcf *Header )readSegmentDataLength (_agca _gf .StreamReader )(_fggb error ){_cdcf .SegmentDataLength ,_fggb =_agca .ReadBits (32);
if _fggb !=nil {return _fggb ;};_cdcf .SegmentDataLength &=_d .MaxInt32 ;return nil ;};const (TSymbolDictionary Type =0;TIntermediateTextRegion Type =4;TImmediateTextRegion Type =6;TImmediateLosslessTextRegion Type =7;TPatternDictionary Type =16;TIntermediateHalftoneRegion Type =20;
TImmediateHalftoneRegion Type =22;TImmediateLosslessHalftoneRegion Type =23;TIntermediateGenericRegion Type =36;TImmediateGenericRegion Type =38;TImmediateLosslessGenericRegion Type =39;TIntermediateGenericRefinementRegion Type =40;TImmediateGenericRefinementRegion Type =42;
TImmediateLosslessGenericRefinementRegion Type =43;TPageInformation Type =48;TEndOfPage Type =49;TEndOfStrip Type =50;TEndOfFile Type =51;TProfiles Type =52;TTables Type =53;TExtension Type =62;TBitmap Type =70;);func (_fbba *SymbolDictionary )setInSyms ()error {if _fbba .Header .RTSegments !=nil {return _fbba .retrieveImportSymbols ();
};_fbba ._dgde =make ([]*_ee .Bitmap ,0);return nil ;};func (_efac *SymbolDictionary )decodeAggregate (_bgaa ,_bdef uint32 )error {var (_gbc int64 ;_ebge error ;);if _efac .IsHuffmanEncoded {_gbc ,_ebge =_efac .huffDecodeRefAggNInst ();if _ebge !=nil {return _ebge ;
};}else {_geffd ,_cdag :=_efac ._fagb .DecodeInt (_efac ._fgfbb );if _cdag !=nil {return _cdag ;};_gbc =int64 (_geffd );};if _gbc > 1{return _efac .decodeThroughTextRegion (_bgaa ,_bdef ,uint32 (_gbc ));}else if _gbc ==1{return _efac .decodeRefinedSymbol (_bgaa ,_bdef );
};return nil ;};func (_dbba *PageInformationSegment )readRequiresAuxiliaryBuffer ()error {_beda ,_gcgcb :=_dbba ._ddgd .ReadBit ();if _gcgcb !=nil {return _gcgcb ;};if _beda ==1{_dbba ._gegg =true ;};return nil ;};func (_agef *GenericRegion )overrideAtTemplate1 (_abbf ,_gfbfc ,_abfe ,_gaae ,_gfdb int )int {_abbf &=0x1FF7;
if _agef .GBAtY [0]==0&&_agef .GBAtX [0]>=-int8 (_gfdb ){_abbf |=(_gaae >>uint (7-(int8 (_gfdb )+_agef .GBAtX [0]))&0x1)<<3;}else {_abbf |=int (_agef .getPixel (_gfbfc +int (_agef .GBAtX [0]),_abfe +int (_agef .GBAtY [0])))<<3;};return _abbf ;};func (_bc *EndOfStripe )parseHeader (_db *Header ,_ag _gf .StreamReader )error {_fa ,_fae :=_bc ._ba .ReadBits (32);
if _fae !=nil {return _fae ;};_bc ._eb =int (_fa &_d .MaxInt32 );return nil ;};type EndOfStripe struct{_ba _gf .StreamReader ;_eb int ;};func (_cfaa *HalftoneRegion )Init (hd *Header ,r _gf .StreamReader )error {_cfaa ._efd =r ;_cfaa ._bbef =hd ;_cfaa .RegionSegment =NewRegionSegment (r );
return _cfaa .parseHeader ();};type GenericRefinementRegion struct{_ca templater ;_df templater ;_fd _gf .StreamReader ;_gfe *Header ;RegionInfo *RegionSegment ;IsTPGROn bool ;TemplateID int8 ;Template templater ;GrAtX []int8 ;GrAtY []int8 ;RegionBitmap *_ee .Bitmap ;
ReferenceBitmap *_ee .Bitmap ;ReferenceDX int32 ;ReferenceDY int32 ;_dc *_ef .Decoder ;_cc *_ef .DecoderStats ;_bac bool ;_aa []bool ;};func (_cdee *SymbolDictionary )huffDecodeRefAggNInst ()(int64 ,error ){if !_cdee .SdHuffAggInstanceSelection {_gcgcd ,_efdba :=_gfb .GetStandardTable (1);
if _efdba !=nil {return 0,_efdba ;};return _gcgcd .Decode (_cdee ._faad );};if _cdee ._fbca ==nil {var (_eecc int ;_cbdeb error ;);if _cdee .SdHuffDecodeHeightSelection ==3{_eecc ++;};if _cdee .SdHuffDecodeWidthSelection ==3{_eecc ++;};if _cdee .SdHuffBMSizeSelection ==3{_eecc ++;
};_cdee ._fbca ,_cbdeb =_cdee .getUserTable (_eecc );if _cbdeb !=nil {return 0,_cbdeb ;};};return _cdee ._fbca .Decode (_cdee ._faad );};func (_gcag *HalftoneRegion )checkInput ()error {if _gcag .IsMMREncoded {if _gcag .HTemplate !=0{_dae .Log .Debug ("\u0048\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030",_gcag .HTemplate );
};if _gcag .HSkipEnabled {_dae .Log .Debug ("\u0048\u0053\u006b\u0069\u0070\u0045\u006e\u0061\u0062\u006c\u0065\u0064\u0020\u0030\u0020\u0025\u0076\u0020(\u0073\u0068\u006f\u0075\u006c\u0064\u0020c\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020v\u0061\u006c\u0075\u0065\u0020\u0066\u0061\u006c\u0073\u0065\u0029",_gcag .HSkipEnabled );
};};return nil ;};func (_edgb *SymbolDictionary )setRetainedCodingContexts (_cadf *SymbolDictionary ){_edgb ._fagb =_cadf ._fagb ;_edgb .IsHuffmanEncoded =_cadf .IsHuffmanEncoded ;_edgb .UseRefinementAggregation =_cadf .UseRefinementAggregation ;_edgb .SdTemplate =_cadf .SdTemplate ;
_edgb .SdrTemplate =_cadf .SdrTemplate ;_edgb .SdATX =_cadf .SdATX ;_edgb .SdATY =_cadf .SdATY ;_edgb .SdrATX =_cadf .SdrATX ;_edgb .SdrATY =_cadf .SdrATY ;_edgb ._cfed =_cadf ._cfed ;};func (_cdbg *PageInformationSegment )String ()string {_bffc :=&_dg .Builder {};
_bffc .WriteString ("\u000a\u005b\u0050\u0041G\u0045\u002d\u0049\u004e\u0046\u004f\u0052\u004d\u0041\u0054I\u004fN\u002d\u0053\u0045\u0047\u004d\u0045\u004eT\u005d\u000a");_bffc .WriteString (_ede .Sprintf ("\u0009\u002d \u0042\u004d\u0048e\u0069\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u000a",_cdbg .PageBMHeight ));
_bffc .WriteString (_ede .Sprintf ("\u0009-\u0020B\u004d\u0057\u0069\u0064\u0074\u0068\u003a\u0020\u0025\u0064\u000a",_cdbg .PageBMWidth ));_bffc .WriteString (_ede .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0058\u003a\u0020\u0025\u0064\u000a",_cdbg .ResolutionX ));
_bffc .WriteString (_ede .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0059\u003a\u0020\u0025\u0064\u000a",_cdbg .ResolutionY ));_bffc .WriteString (_ede .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0073\u000a",_cdbg ._cfda ));
_bffc .WriteString (_ede .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006eO\u0070\u0065\u0072\u0061\u0074\u006f\u0072O\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025v\u000a",_cdbg ._cgda ));_bffc .WriteString (_ede .Sprintf ("\u0009-\u0020I\u0073\u004c\u006f\u0073\u0073l\u0065\u0073s\u003a\u0020\u0025\u0076\u000a",_cdbg .IsLossless ));
_bffc .WriteString (_ede .Sprintf ("\u0009\u002d\u0020R\u0065\u0071\u0075\u0069r\u0065\u0073\u0041\u0075\u0078\u0069\u006ci\u0061\u0072\u0079\u0042\u0075\u0066\u0066\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_cdbg ._gegg ));_bffc .WriteString (_ede .Sprintf ("\u0009\u002d\u0020M\u0069\u0067\u0068\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0052e\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0076\u000a",_cdbg ._bacd ));
_bffc .WriteString (_ede .Sprintf ("\u0009\u002d\u0020\u0049\u0073\u0053\u0074\u0072\u0069\u0070\u0065\u0064:\u0020\u0025\u0076\u000a",_cdbg .IsStripe ));_bffc .WriteString (_ede .Sprintf ("\t\u002d\u0020\u004d\u0061xS\u0074r\u0069\u0070\u0065\u0053\u0069z\u0065\u003a\u0020\u0025\u0076\u000a",_cdbg .MaxStripeSize ));
return _bffc .String ();};func (_dggd *HalftoneRegion )GetRegionInfo ()*RegionSegment {return _dggd .RegionSegment };func (_fcg *HalftoneRegion )parseHeader ()error {if _fegg :=_fcg .RegionSegment .parseHeader ();_fegg !=nil {return _fegg ;};_bff ,_dbbb :=_fcg ._efd .ReadBit ();
if _dbbb !=nil {return _dbbb ;};_fcg .HDefaultPixel =int8 (_bff );_abeeb ,_dbbb :=_fcg ._efd .ReadBits (3);if _dbbb !=nil {return _dbbb ;};_fcg .CombinationOperator =_ee .CombinationOperator (_abeeb &0xf);_bff ,_dbbb =_fcg ._efd .ReadBit ();if _dbbb !=nil {return _dbbb ;
};if _bff ==1{_fcg .HSkipEnabled =true ;};_abeeb ,_dbbb =_fcg ._efd .ReadBits (2);if _dbbb !=nil {return _dbbb ;};_fcg .HTemplate =byte (_abeeb &0xf);_bff ,_dbbb =_fcg ._efd .ReadBit ();if _dbbb !=nil {return _dbbb ;};if _bff ==1{_fcg .IsMMREncoded =true ;
};_abeeb ,_dbbb =_fcg ._efd .ReadBits (32);if _dbbb !=nil {return _dbbb ;};_fcg .HGridWidth =uint32 (_abeeb &_d .MaxUint32 );_abeeb ,_dbbb =_fcg ._efd .ReadBits (32);if _dbbb !=nil {return _dbbb ;};_fcg .HGridHeight =uint32 (_abeeb &_d .MaxUint32 );_abeeb ,_dbbb =_fcg ._efd .ReadBits (32);
if _dbbb !=nil {return _dbbb ;};_fcg .HGridX =int32 (_abeeb &_d .MaxInt32 );_abeeb ,_dbbb =_fcg ._efd .ReadBits (32);if _dbbb !=nil {return _dbbb ;};_fcg .HGridY =int32 (_abeeb &_d .MaxInt32 );_abeeb ,_dbbb =_fcg ._efd .ReadBits (16);if _dbbb !=nil {return _dbbb ;
};_fcg .HRegionX =uint16 (_abeeb &_d .MaxUint16 );_abeeb ,_dbbb =_fcg ._efd .ReadBits (16);if _dbbb !=nil {return _dbbb ;};_fcg .HRegionY =uint16 (_abeeb &_d .MaxUint16 );if _dbbb =_fcg .computeSegmentDataStructure ();_dbbb !=nil {return _dbbb ;};return _fcg .checkInput ();
};func (_dcad *Header )readReferredToSegmentNumbers (_ecg _gf .StreamReader ,_fcee int )([]int ,error ){const _dbfeg ="\u0072\u0065\u0061\u0064R\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053e\u0067m\u0065\u006e\u0074\u004e\u0075\u006d\u0062e\u0072\u0073";
_cgade :=make ([]int ,_fcee );if _fcee > 0{_dcad .RTSegments =make ([]*Header ,_fcee );var (_dfga uint64 ;_bdd error ;);for _aef :=0;_aef < _fcee ;_aef ++{_dfga ,_bdd =_ecg .ReadBits (byte (_dcad .referenceSize ())<<3);if _bdd !=nil {return nil ,_da .Wrapf (_bdd ,_dbfeg ,"\u0027\u0025\u0064\u0027 \u0072\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0020\u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u0075\u006db\u0065\u0072",_aef );
};_cgade [_aef ]=int (_dfga &_d .MaxInt32 );};};return _cgade ,nil ;};func (_eebe *HalftoneRegion )combineGrayscalePlanes (_gfc []*_ee .Bitmap ,_dgdd int )error {_gdef :=0;for _cbde :=0;_cbde < _gfc [_dgdd ].Height ;_cbde ++{for _cecf :=0;_cecf < _gfc [_dgdd ].Width ;
_cecf +=8{_bge ,_fbdg :=_gfc [_dgdd +1].GetByte (_gdef );if _fbdg !=nil {return _fbdg ;};_eedff ,_fbdg :=_gfc [_dgdd ].GetByte (_gdef );if _fbdg !=nil {return _fbdg ;};_fbdg =_gfc [_dgdd ].SetByte (_gdef ,_ee .CombineBytes (_eedff ,_bge ,_ee .CmbOpXor ));
if _fbdg !=nil {return _fbdg ;};_gdef ++;};};return nil ;};func (_bggc *TextRegion )initSymbols ()error {const _bebde ="i\u006e\u0069\u0074\u0053\u0079\u006d\u0062\u006f\u006c\u0073";for _ ,_ecbg :=range _bggc .Header .RTSegments {if _ecbg ==nil {return _da .Error (_bebde ,"\u006e\u0069\u006c\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020pr\u006f\u0076\u0069\u0064\u0065\u0064 \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0074\u0065\u0078\u0074\u0020\u0072\u0065g\u0069\u006f\u006e\u0020\u0053\u0079\u006d\u0062o\u006c\u0073");
};if _ecbg .Type ==0{_bba ,_aeec :=_ecbg .GetSegmentData ();if _aeec !=nil {return _da .Wrap (_aeec ,_bebde ,"");};_ccead ,_cffc :=_bba .(*SymbolDictionary );if !_cffc {return _da .Error (_bebde ,"\u0072e\u0066\u0065r\u0072\u0065\u0064 \u0054\u006f\u0020\u0053\u0065\u0067\u006de\u006e\u0074\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_ccead ._dggb =_bggc ._cgaa ;_ceba ,_aeec :=_ccead .GetDictionary ();if _aeec !=nil {return _da .Wrap (_aeec ,_bebde ,"");};_bggc .Symbols =append (_bggc .Symbols ,_ceba ...);};};_bggc .NumberOfSymbols =uint32 (len (_bggc .Symbols ));return nil ;};type Header struct{SegmentNumber uint32 ;
Type Type ;RetainFlag bool ;PageAssociation int ;PageAssociationFieldSize bool ;RTSegments []*Header ;HeaderLength int64 ;SegmentDataLength uint64 ;SegmentDataStartOffset uint64 ;Reader _gf .StreamReader ;SegmentData Segmenter ;RTSNumbers []int ;RetainBits []uint8 ;
};func _eeffg (_edfc _gf .StreamReader ,_facbb *Header )*TextRegion {_cade :=&TextRegion {_eafe :_edfc ,Header :_facbb ,RegionInfo :NewRegionSegment (_edfc )};return _cade ;};func (_bbbef *HalftoneRegion )computeSegmentDataStructure ()error {_bbbef .DataOffset =_bbbef ._efd .StreamPosition ();
_bbbef .DataHeaderLength =_bbbef .DataOffset -_bbbef .DataHeaderOffset ;_bbbef .DataLength =int64 (_bbbef ._efd .Length ())-_bbbef .DataHeaderLength ;return nil ;};func (_fge *Header )writeSegmentDataLength (_bacg _gf .BinaryWriter )(_agac int ,_dcdb error ){_gefa :=make ([]byte ,4);
_ed .BigEndian .PutUint32 (_gefa ,uint32 (_fge .SegmentDataLength ));if _agac ,_dcdb =_bacg .Write (_gefa );_dcdb !=nil {return 0,_da .Wrap (_dcdb ,"\u0048\u0065a\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u004c\u0065ng\u0074\u0068","");
};return _agac ,nil ;};func (_bbfc *TableSegment )HtPS ()int32 {return _bbfc ._gaca };func (_cgee *SymbolDictionary )parseHeader ()(_abgf error ){_dae .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _abgf !=nil {_dae .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u0020\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u005b\u0050\u0041\u0052SE\u002d\u0048\u0045A\u0044\u0045R\u005d\u0020\u0066\u0061\u0069\u006ce\u0064\u002e \u0025\u0076",_abgf );
}else {_dae .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _abgf =_cgee .readRegionFlags ();_abgf !=nil {return _abgf ;};if _abgf =_cgee .setAtPixels ();_abgf !=nil {return _abgf ;};if _abgf =_cgee .setRefinementAtPixels ();_abgf !=nil {return _abgf ;};if _abgf =_cgee .readNumberOfExportedSymbols ();_abgf !=nil {return _abgf ;
};if _abgf =_cgee .readNumberOfNewSymbols ();_abgf !=nil {return _abgf ;};if _abgf =_cgee .setInSyms ();_abgf !=nil {return _abgf ;};if _cgee ._dfgaf {_gggf :=_cgee .Header .RTSegments ;for _cfge :=len (_gggf )-1;_cfge >=0;_cfge --{if _gggf [_cfge ].Type ==0{_gede ,_ffa :=_gggf [_cfge ].SegmentData .(*SymbolDictionary );
if !_ffa {_abgf =_ede .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074:\u0020\u0025\u0076\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020S\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_gggf [_cfge ]);
return _abgf ;};if _gede ._dfgaf {_cgee .setRetainedCodingContexts (_gede );};break ;};};};if _abgf =_cgee .checkInput ();_abgf !=nil {return _abgf ;};return nil ;};func (_ecae *PageInformationSegment )readContainsRefinement ()error {_dgbf ,_afdb :=_ecae ._ddgd .ReadBit ();
if _afdb !=nil {return _afdb ;};if _dgbf ==1{_ecae ._bacd =true ;};return nil ;};type GenericRegion struct{_gcgc _gf .StreamReader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;UseExtTemplates bool ;
IsTPGDon bool ;GBTemplate byte ;IsMMREncoded bool ;UseMMR bool ;GBAtX []int8 ;GBAtY []int8 ;GBAtOverride []bool ;_dged bool ;Bitmap *_ee .Bitmap ;_ada *_ef .Decoder ;_ebe *_ef .DecoderStats ;_geg *_ae .Decoder ;};func (_fcef *TextRegion )blit (_gaaf *_ee .Bitmap ,_gcea int64 )error {if _fcef .IsTransposed ==0&&(_fcef .ReferenceCorner ==2||_fcef .ReferenceCorner ==3){_fcef ._fbge +=int64 (_gaaf .Width -1);
}else if _fcef .IsTransposed ==1&&(_fcef .ReferenceCorner ==0||_fcef .ReferenceCorner ==2){_fcef ._fbge +=int64 (_gaaf .Height -1);};_fcgd :=_fcef ._fbge ;if _fcef .IsTransposed ==1{_fcgd ,_gcea =_gcea ,_fcgd ;};switch _fcef .ReferenceCorner {case 0:_gcea -=int64 (_gaaf .Height -1);
case 2:_gcea -=int64 (_gaaf .Height -1);_fcgd -=int64 (_gaaf .Width -1);case 3:_fcgd -=int64 (_gaaf .Width -1);};_deaa :=_ee .Blit (_gaaf ,_fcef .RegionBitmap ,int (_fcgd ),int (_gcea ),_fcef .CombinationOperator );if _deaa !=nil {return _deaa ;};if _fcef .IsTransposed ==0&&(_fcef .ReferenceCorner ==0||_fcef .ReferenceCorner ==1){_fcef ._fbge +=int64 (_gaaf .Width -1);
};if _fcef .IsTransposed ==1&&(_fcef .ReferenceCorner ==1||_fcef .ReferenceCorner ==3){_fcef ._fbge +=int64 (_gaaf .Height -1);};return nil ;};func (_fbbg *TextRegion )decodeCurrentT ()(int64 ,error ){if _fbbg .SbStrips !=1{if _fbbg .IsHuffmanEncoded {_abab ,_fgc :=_fbbg ._eafe .ReadBits (byte (_fbbg .LogSBStrips ));
return int64 (_abab ),_fgc ;};_eaea ,_cegc :=_fbbg ._adabd .DecodeInt (_fbbg ._cgdg );if _cegc !=nil {return 0,_cegc ;};return int64 (_eaea ),nil ;};return 0,nil ;};func (_fbf *GenericRefinementRegion )String ()string {_adb :=&_dg .Builder {};_adb .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");
_adb .WriteString (_fbf .RegionInfo .String ()+"\u000a");_adb .WriteString (_ede .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0052\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_fbf .IsTPGROn ));_adb .WriteString (_ede .Sprintf ("\u0009-\u0020T\u0065\u006d\u0070\u006c\u0061t\u0065\u0049D\u003a\u0020\u0025\u0076\u000a",_fbf .TemplateID ));
_adb .WriteString (_ede .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_fbf .GrAtX ));_adb .WriteString (_ede .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_fbf .GrAtY ));
_adb .WriteString (_ede .Sprintf ("\u0009-\u0020R\u0065\u0066\u0065\u0072\u0065n\u0063\u0065D\u0058\u0020\u0025\u0076\u000a",_fbf .ReferenceDX ));_adb .WriteString (_ede .Sprintf ("\u0009\u002d\u0020\u0052ef\u0065\u0072\u0065\u006e\u0063\u0044\u0065\u0059\u003a\u0020\u0025\u0076\u000a",_fbf .ReferenceDY ));
return _adb .String ();};func (_dafc *PatternDictionary )computeSegmentDataStructure ()error {_dafc .DataOffset =_dafc ._aaad .StreamPosition ();_dafc .DataHeaderLength =_dafc .DataOffset -_dafc .DataHeaderOffset ;_dafc .DataLength =int64 (_dafc ._aaad .Length ())-_dafc .DataHeaderLength ;
return nil ;};func (_bgce *SymbolDictionary )decodeDirectlyThroughGenericRegion (_egcd ,_fedbd uint32 )error {if _bgce ._edae ==nil {_bgce ._edae =NewGenericRegion (_bgce ._faad );};_bgce ._edae .setParametersWithAt (false ,byte (_bgce .SdTemplate ),false ,false ,_bgce .SdATX ,_bgce .SdATY ,_egcd ,_fedbd ,_bgce ._cfed ,_bgce ._fagb );
return _bgce .addSymbol (_bgce ._edae );};func (_eafae *SymbolDictionary )getUserTable (_gabe int )(_gfb .Tabler ,error ){var _eaffe int ;for _ ,_gbgcf :=range _eafae .Header .RTSegments {if _gbgcf .Type ==53{if _eaffe ==_gabe {_cfgc ,_baac :=_gbgcf .GetSegmentData ();
if _baac !=nil {return nil ,_baac ;};_ebfaa :=_cfgc .(_gfb .BasicTabler );return _gfb .NewEncodedTable (_ebfaa );};_eaffe ++;};};return nil ,nil ;};func (_dec *GenericRegion )InitEncode (bm *_ee .Bitmap ,xLoc ,yLoc ,template int ,duplicateLineRemoval bool )error {const _cba ="\u0047e\u006e\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069\u006f\u006e.\u0049\u006e\u0069\u0074\u0045\u006e\u0063\u006f\u0064\u0065";
if bm ==nil {return _da .Error (_cba ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if xLoc < 0||yLoc < 0{return _da .Error (_cba ,"\u0078\u0020\u0061\u006e\u0064\u0020\u0079\u0020\u006c\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074h\u0061\u006e\u0020\u0030");
};_dec .Bitmap =bm ;_dec .GBTemplate =byte (template );switch _dec .GBTemplate {case 0:_dec .GBAtX =[]int8 {3,-3,2,-2};_dec .GBAtY =[]int8 {-1,-1,-2,-2};case 1:_dec .GBAtX =[]int8 {3};_dec .GBAtY =[]int8 {-1};case 2,3:_dec .GBAtX =[]int8 {2};_dec .GBAtY =[]int8 {-1};
default:return _da .Errorf (_cba ,"\u0070\u0072o\u0076\u0069\u0064\u0065\u0064 \u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u007b\u0030\u002c\u0031\u002c\u0032\u002c\u0033\u007d",template );
};_dec .RegionSegment =&RegionSegment {BitmapHeight :uint32 (bm .Height ),BitmapWidth :uint32 (bm .Width ),XLocation :uint32 (xLoc ),YLocation :uint32 (yLoc )};_dec .IsTPGDon =duplicateLineRemoval ;return nil ;};func (_efbd *TextRegion )Encode (w _gf .BinaryWriter )(_abgdd int ,_afde error ){const _edbb ="\u0054\u0065\u0078\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u002e\u0045n\u0063\u006f\u0064\u0065";
if _abgdd ,_afde =_efbd .RegionInfo .Encode (w );_afde !=nil {return _abgdd ,_da .Wrap (_afde ,_edbb ,"");};var _abda int ;if _abda ,_afde =_efbd .encodeFlags (w );_afde !=nil {return _abgdd ,_da .Wrap (_afde ,_edbb ,"");};_abgdd +=_abda ;if _abda ,_afde =_efbd .encodeSymbols (w );
_afde !=nil {return _abgdd ,_da .Wrap (_afde ,_edbb ,"");};_abgdd +=_abda ;return _abgdd ,nil ;};func (_fded *SymbolDictionary )readRefinementAtPixels (_gcedc int )error {_fded .SdrATX =make ([]int8 ,_gcedc );_fded .SdrATY =make ([]int8 ,_gcedc );var (_fafb byte ;
_ecfag error ;);for _bgbg :=0;_bgbg < _gcedc ;_bgbg ++{_fafb ,_ecfag =_fded ._faad .ReadByte ();if _ecfag !=nil {return _ecfag ;};_fded .SdrATX [_bgbg ]=int8 (_fafb );_fafb ,_ecfag =_fded ._faad .ReadByte ();if _ecfag !=nil {return _ecfag ;};_fded .SdrATY [_bgbg ]=int8 (_fafb );
};return nil ;};func (_addd *SymbolDictionary )retrieveImportSymbols ()error {for _ ,_ggafe :=range _addd .Header .RTSegments {if _ggafe .Type ==0{_deef ,_ecedd :=_ggafe .GetSegmentData ();if _ecedd !=nil {return _ecedd ;};_bggd ,_agcb :=_deef .(*SymbolDictionary );
if !_agcb {return _ede .Errorf ("\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0044\u0061\u0074a\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u003a\u0020%\u0054",_deef );
};_dfa ,_ecedd :=_bggd .GetDictionary ();if _ecedd !=nil {return _ede .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064 \u0073\u0065\u0067m\u0065\u006e\u0074 \u0077\u0069t\u0068\u0020\u0069\u006e\u0064\u0065x\u003a %\u0064\u0020\u0067\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0073",_ggafe .SegmentNumber ,_ecedd .Error ());
};_addd ._dgde =append (_addd ._dgde ,_dfa ...);_addd ._cfee +=_bggd .NumberOfExportedSymbols ;};};return nil ;};func (_baba *TableSegment )HtRS ()int32 {return _baba ._afede };func (_eeffc *PatternDictionary )readTemplate ()error {_gbed ,_bgeg :=_eeffc ._aaad .ReadBits (2);
if _bgeg !=nil {return _bgeg ;};_eeffc .HDTemplate =byte (_gbed );return nil ;};func (_bddc *SymbolDictionary )Init (h *Header ,r _gf .StreamReader )error {_bddc .Header =h ;_bddc ._faad =r ;return _bddc .parseHeader ();};type HalftoneRegion struct{_efd _gf .StreamReader ;
_bbef *Header ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;HDefaultPixel int8 ;CombinationOperator _ee .CombinationOperator ;HSkipEnabled bool ;HTemplate byte ;IsMMREncoded bool ;HGridWidth uint32 ;
HGridHeight uint32 ;HGridX int32 ;HGridY int32 ;HRegionX uint16 ;HRegionY uint16 ;HalftoneRegionBitmap *_ee .Bitmap ;Patterns []*_ee .Bitmap ;};type SegmentEncoder interface{Encode (_fcbf _gf .BinaryWriter )(_abc int ,_ebfe error );};func (_egea *PageInformationSegment )readIsStriped ()error {_dcbc ,_aafb :=_egea ._ddgd .ReadBit ();
if _aafb !=nil {return _aafb ;};if _dcbc ==1{_egea .IsStripe =true ;};return nil ;};func (_dgge *SymbolDictionary )encodeATFlags (_abce _gf .BinaryWriter )(_geaag int ,_cdbga error ){const _agbf ="\u0065\u006e\u0063\u006f\u0064\u0065\u0041\u0054\u0046\u006c\u0061\u0067\u0073";
if _dgge .IsHuffmanEncoded ||_dgge .SdTemplate !=0{return 0,nil ;};_gebc :=4;if _dgge .SdTemplate !=0{_gebc =1;};for _gfaa :=0;_gfaa < _gebc ;_gfaa ++{if _cdbga =_abce .WriteByte (byte (_dgge .SdATX [_gfaa ]));_cdbga !=nil {return _geaag ,_da .Wrapf (_cdbga ,_agbf ,"\u0053d\u0041\u0054\u0058\u005b\u0025\u0064]",_gfaa );
};_geaag ++;if _cdbga =_abce .WriteByte (byte (_dgge .SdATY [_gfaa ]));_cdbga !=nil {return _geaag ,_da .Wrapf (_cdbga ,_agbf ,"\u0053d\u0041\u0054\u0059\u005b\u0025\u0064]",_gfaa );};_geaag ++;};return _geaag ,nil ;};func (_agc *GenericRefinementRegion )decodeTypicalPredictedLine (_fda ,_ddc ,_ab ,_baeg ,_agcf ,_ea int )error {_cad :=_fda -int (_agc .ReferenceDY );
_efe :=_agc .ReferenceBitmap .GetByteIndex (0,_cad );_eaf :=_agc .RegionBitmap .GetByteIndex (0,_fda );var _aga error ;switch _agc .TemplateID {case 0:_aga =_agc .decodeTypicalPredictedLineTemplate0 (_fda ,_ddc ,_ab ,_baeg ,_agcf ,_ea ,_eaf ,_cad ,_efe );
case 1:_aga =_agc .decodeTypicalPredictedLineTemplate1 (_fda ,_ddc ,_ab ,_baeg ,_agcf ,_ea ,_eaf ,_cad ,_efe );};return _aga ;};func _aebb (_bcbe int )int {if _bcbe ==0{return 0;};_bcbe |=_bcbe >>1;_bcbe |=_bcbe >>2;_bcbe |=_bcbe >>4;_bcbe |=_bcbe >>8;
_bcbe |=_bcbe >>16;return (_bcbe +1)>>1;};func (_efg *HalftoneRegion )shiftAndFill (_dcdf int )int {_dcdf >>=8;if _dcdf < 0{_cegb :=int (_d .Log (float64 (_aebb (_dcdf )))/_d .Log (2));_efbc :=31-_cegb ;for _afbf :=1;_afbf < _efbc ;_afbf ++{_dcdf |=1<<uint (31-_afbf );
};};return _dcdf ;};func (_ggg *GenericRefinementRegion )getPixel (_ceg *_ee .Bitmap ,_egge ,_fb int )int {if _egge < 0||_egge >=_ceg .Width {return 0;};if _fb < 0||_fb >=_ceg .Height {return 0;};if _ceg .GetPixel (_egge ,_fb ){return 1;};return 0;};func (_faefe *PageInformationSegment )readDefaultPixelValue ()error {_gge ,_ggfd :=_faefe ._ddgd .ReadBit ();
if _ggfd !=nil {return _ggfd ;};_faefe .DefaultPixelValue =uint8 (_gge &0xf);return nil ;};func (_bfg *GenericRegion )Encode (w _gf .BinaryWriter )(_aaed int ,_fege error ){const _ege ="G\u0065n\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069o\u006e\u002e\u0045\u006eco\u0064\u0065";
if _bfg .Bitmap ==nil {return 0,_da .Error (_ege ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};_adf ,_fege :=_bfg .RegionSegment .Encode (w );if _fege !=nil {return 0,_da .Wrap (_fege ,_ege ,"\u0052\u0065\u0067\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};_aaed +=_adf ;if _fege =w .SkipBits (4);_fege !=nil {return _aaed ,_da .Wrap (_fege ,_ege ,"\u0073k\u0069p\u0020\u0072\u0065\u0073\u0065r\u0076\u0065d\u0020\u0062\u0069\u0074\u0073");};var _bfc int ;if _bfg .IsTPGDon {_bfc =1;};if _fege =w .WriteBit (_bfc );
_fege !=nil {return _aaed ,_da .Wrap (_fege ,_ege ,"\u0074\u0070\u0067\u0064\u006f\u006e");};_bfc =0;if _fege =w .WriteBit (int (_bfg .GBTemplate >>1)&0x01);_fege !=nil {return _aaed ,_da .Wrap (_fege ,_ege ,"f\u0069r\u0073\u0074\u0020\u0067\u0062\u0074\u0065\u006dp\u006c\u0061\u0074\u0065 b\u0069\u0074");
};if _fege =w .WriteBit (int (_bfg .GBTemplate )&0x01);_fege !=nil {return _aaed ,_da .Wrap (_fege ,_ege ,"s\u0065\u0063\u006f\u006ed \u0067b\u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u0062\u0069\u0074");};if _bfg .UseMMR {_bfc =1;};if _fege =w .WriteBit (_bfc );
_fege !=nil {return _aaed ,_da .Wrap (_fege ,_ege ,"u\u0073\u0065\u0020\u004d\u004d\u0052\u0020\u0062\u0069\u0074");};_aaed ++;if _adf ,_fege =_bfg .writeGBAtPixels (w );_fege !=nil {return _aaed ,_da .Wrap (_fege ,_ege ,"");};_aaed +=_adf ;_ffc :=_fg .New ();
if _fege =_ffc .EncodeBitmap (_bfg .Bitmap ,_bfg .IsTPGDon );_fege !=nil {return _aaed ,_da .Wrap (_fege ,_ege ,"");};_ffc .Final ();var _aaeb int64 ;if _aaeb ,_fege =_ffc .WriteTo (w );_fege !=nil {return _aaed ,_da .Wrap (_fege ,_ege ,"");};_aaed +=int (_aaeb );
return _aaed ,nil ;};func (_fce *template1 )setIndex (_aca *_ef .DecoderStats ){_aca .SetIndex (0x080)};func (_gfbb *PageInformationSegment )CombinationOperator ()_ee .CombinationOperator {return _gfbb ._cfda ;};func (_edd *GenericRefinementRegion )GetRegionBitmap ()(*_ee .Bitmap ,error ){var _fga error ;
_dae .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _fga !=nil {_dae .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0047\u0065\u0074R\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006dap\u0020\u0066a\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_fga );
}else {_dae .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _edd .RegionBitmap !=nil {return _edd .RegionBitmap ,nil ;};_dbg :=0;if _edd .ReferenceBitmap ==nil {_edd .ReferenceBitmap ,_fga =_edd .getGrReference ();if _fga !=nil {return nil ,_fga ;};};if _edd ._dc ==nil {_edd ._dc ,_fga =_ef .New (_edd ._fd );
if _fga !=nil {return nil ,_fga ;};};if _edd ._cc ==nil {_edd ._cc =_ef .NewStats (8192,1);};_edd .RegionBitmap =_ee .New (int (_edd .RegionInfo .BitmapWidth ),int (_edd .RegionInfo .BitmapHeight ));if _edd .TemplateID ==0{if _fga =_edd .updateOverride ();
_fga !=nil {return nil ,_fga ;};};_ddb :=(_edd .RegionBitmap .Width +7)&-8;var _gfg int ;if _edd .IsTPGROn {_gfg =int (-_edd .ReferenceDY )*_edd .ReferenceBitmap .RowStride ;};_dbb :=_gfg +1;for _efc :=0;_efc < _edd .RegionBitmap .Height ;_efc ++{if _edd .IsTPGROn {_be ,_gfa :=_edd .decodeSLTP ();
if _gfa !=nil {return nil ,_gfa ;};_dbg ^=_be ;};if _dbg ==0{_fga =_edd .decodeOptimized (_efc ,_edd .RegionBitmap .Width ,_edd .RegionBitmap .RowStride ,_edd .ReferenceBitmap .RowStride ,_ddb ,_gfg ,_dbb );if _fga !=nil {return nil ,_fga ;};}else {_fga =_edd .decodeTypicalPredictedLine (_efc ,_edd .RegionBitmap .Width ,_edd .RegionBitmap .RowStride ,_edd .ReferenceBitmap .RowStride ,_ddb ,_gfg );
if _fga !=nil {return nil ,_fga ;};};};return _edd .RegionBitmap ,nil ;};func (_gde *GenericRefinementRegion )parseHeader ()(_dgae error ){_dae .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0048e\u0061\u0064e\u0072\u002e\u002e\u002e");
_dbfa :=_dd .Now ();defer func (){if _dgae ==nil {_dae .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045G\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020h\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0069\u006e\u0069\u0073\u0068id\u0020\u0069\u006e\u003a\u0020\u0025\u0064\u0020\u006e\u0073",_dd .Since (_dbfa ).Nanoseconds ());
}else {_dae .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0068\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0073",_dgae );
};}();if _dgae =_gde .RegionInfo .parseHeader ();_dgae !=nil {return _dgae ;};_ ,_dgae =_gde ._fd .ReadBits (6);if _dgae !=nil {return _dgae ;};_gde .IsTPGROn ,_dgae =_gde ._fd .ReadBool ();if _dgae !=nil {return _dgae ;};var _ff int ;_ff ,_dgae =_gde ._fd .ReadBit ();
if _dgae !=nil {return _dgae ;};_gde .TemplateID =int8 (_ff );switch _gde .TemplateID {case 0:_gde .Template =_gde ._ca ;if _dgae =_gde .readAtPixels ();_dgae !=nil {return ;};case 1:_gde .Template =_gde ._df ;};return nil ;};func (_adab *PageInformationSegment )readIsLossless ()error {_cfefg ,_ddad :=_adab ._ddgd .ReadBit ();
if _ddad !=nil {return _ddad ;};if _cfefg ==1{_adab .IsLossless =true ;};return nil ;};func (_bcge *PageInformationSegment )checkInput ()error {if _bcge .PageBMHeight ==_d .MaxInt32 {if !_bcge .IsStripe {_dae .Log .Debug ("P\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0053\u0065\u0067me\u006e\u0074\u002e\u0049s\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0073\u0068ou\u006c\u0064 \u0062\u0065\u0020\u0074\u0072\u0075\u0065\u002e");
};};return nil ;};func (_beded *TextRegion )getSymbols ()error {if _beded .Header .RTSegments !=nil {return _beded .initSymbols ();};return nil ;};func (_fcfa *RegionSegment )parseHeader ()error {const _gec ="p\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072";
_dae .Log .Trace ("\u005b\u0052\u0045\u0047I\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002dH\u0045A\u0044\u0045\u0052\u005d\u0020\u0042\u0065g\u0069\u006e");defer func (){_dae .Log .Trace ("\u005b\u0052\u0045G\u0049\u004f\u004e\u005d[\u0050\u0041\u0052\u0053\u0045\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
}();_cced ,_fcfaa :=_fcfa ._cbga .ReadBits (32);if _fcfaa !=nil {return _da .Wrap (_fcfaa ,_gec ,"\u0077\u0069\u0064t\u0068");};_fcfa .BitmapWidth =uint32 (_cced &_d .MaxUint32 );_cced ,_fcfaa =_fcfa ._cbga .ReadBits (32);if _fcfaa !=nil {return _da .Wrap (_fcfaa ,_gec ,"\u0068\u0065\u0069\u0067\u0068\u0074");
};_fcfa .BitmapHeight =uint32 (_cced &_d .MaxUint32 );_cced ,_fcfaa =_fcfa ._cbga .ReadBits (32);if _fcfaa !=nil {return _da .Wrap (_fcfaa ,_gec ,"\u0078\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_fcfa .XLocation =uint32 (_cced &_d .MaxUint32 );
_cced ,_fcfaa =_fcfa ._cbga .ReadBits (32);if _fcfaa !=nil {return _da .Wrap (_fcfaa ,_gec ,"\u0079\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_fcfa .YLocation =uint32 (_cced &_d .MaxUint32 );if _ ,_fcfaa =_fcfa ._cbga .ReadBits (5);_fcfaa !=nil {return _da .Wrap (_fcfaa ,_gec ,"\u0064i\u0072\u0079\u0020\u0072\u0065\u0061d");
};if _fcfaa =_fcfa .readCombinationOperator ();_fcfaa !=nil {return _da .Wrap (_fcfaa ,_gec ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};return nil ;};func (_dcce *TextRegion )decodeDfs ()(int64 ,error ){if _dcce .IsHuffmanEncoded {if _dcce .SbHuffFS ==3{if _dcce ._bebb ==nil {var _bcba error ;
_dcce ._bebb ,_bcba =_dcce .getUserTable (0);if _bcba !=nil {return 0,_bcba ;};};return _dcce ._bebb .Decode (_dcce ._eafe );};_effg ,_aage :=_gfb .GetStandardTable (6+int (_dcce .SbHuffFS ));if _aage !=nil {return 0,_aage ;};return _effg .Decode (_dcce ._eafe );
};_egeae ,_baea :=_dcce ._adabd .DecodeInt (_dcce ._aed );if _baea !=nil {return 0,_baea ;};return int64 (_egeae ),nil ;};func (_adeb *Header )writeSegmentPageAssociation (_agdec _gf .BinaryWriter )(_ggb int ,_bgef error ){const _gbfg ="w\u0072\u0069\u0074\u0065\u0053\u0065g\u006d\u0065\u006e\u0074\u0050\u0061\u0067\u0065\u0041s\u0073\u006f\u0063i\u0061t\u0069\u006f\u006e";
if _adeb .pageSize ()!=4{if _bgef =_agdec .WriteByte (byte (_adeb .PageAssociation ));_bgef !=nil {return 0,_da .Wrap (_bgef ,_gbfg ,"\u0070\u0061\u0067\u0065\u0053\u0069\u007a\u0065\u0020\u0021\u003d\u0020\u0034");};return 1,nil ;};_eea :=make ([]byte ,4);
_ed .BigEndian .PutUint32 (_eea ,uint32 (_adeb .PageAssociation ));if _ggb ,_bgef =_agdec .Write (_eea );_bgef !=nil {return 0,_da .Wrap (_bgef ,_gbfg ,"\u0034 \u0062y\u0074\u0065\u0020\u0070\u0061g\u0065\u0020n\u0075\u006d\u0062\u0065\u0072");};return _ggb ,nil ;
};var _ _gfb .BasicTabler =&TableSegment {};func (_caba *SymbolDictionary )decodeHeightClassDeltaHeightWithHuffman ()(int64 ,error ){switch _caba .SdHuffDecodeHeightSelection {case 0:_cebg ,_gebg :=_gfb .GetStandardTable (4);if _gebg !=nil {return 0,_gebg ;
};return _cebg .Decode (_caba ._faad );case 1:_dfbf ,_ggdbe :=_gfb .GetStandardTable (5);if _ggdbe !=nil {return 0,_ggdbe ;};return _dfbf .Decode (_caba ._faad );case 3:if _caba ._fbdf ==nil {_dbbda ,_ddda :=_gfb .GetStandardTable (0);if _ddda !=nil {return 0,_ddda ;
};_caba ._fbdf =_dbbda ;};return _caba ._fbdf .Decode (_caba ._faad );};return 0,nil ;};func (_ecadc *PageInformationSegment )Size ()int {return 19};func (_fafbg *TextRegion )Init (header *Header ,r _gf .StreamReader )error {_fafbg .Header =header ;_fafbg ._eafe =r ;
_fafbg .RegionInfo =NewRegionSegment (_fafbg ._eafe );return _fafbg .parseHeader ();};func (_afaa *PatternDictionary )setGbAtPixels (){if _afaa .HDTemplate ==0{_afaa .GBAtX =make ([]int8 ,4);_afaa .GBAtY =make ([]int8 ,4);_afaa .GBAtX [0]=-int8 (_afaa .HdpWidth );
_afaa .GBAtY [0]=0;_afaa .GBAtX [1]=-3;_afaa .GBAtY [1]=-1;_afaa .GBAtX [2]=2;_afaa .GBAtY [2]=-2;_afaa .GBAtX [3]=-2;_afaa .GBAtY [3]=-2;}else {_afaa .GBAtX =[]int8 {-int8 (_afaa .HdpWidth )};_afaa .GBAtY =[]int8 {0};};};func (_cfbgg *SymbolDictionary )decodeDifferenceWidth ()(int64 ,error ){if _cfbgg .IsHuffmanEncoded {switch _cfbgg .SdHuffDecodeWidthSelection {case 0:_aad ,_ddff :=_gfb .GetStandardTable (2);
if _ddff !=nil {return 0,_ddff ;};return _aad .Decode (_cfbgg ._faad );case 1:_aeagc ,_ccda :=_gfb .GetStandardTable (3);if _ccda !=nil {return 0,_ccda ;};return _aeagc .Decode (_cfbgg ._faad );case 3:if _cfbgg ._abgg ==nil {var _abdd int ;if _cfbgg .SdHuffDecodeHeightSelection ==3{_abdd ++;
};_afbe ,_fbce :=_cfbgg .getUserTable (_abdd );if _fbce !=nil {return 0,_fbce ;};_cfbgg ._abgg =_afbe ;};return _cfbgg ._abgg .Decode (_cfbgg ._faad );};}else {_eff ,_fdagg :=_cfbgg ._fagb .DecodeInt (_cfbgg ._addc );if _fdagg !=nil {return 0,_fdagg ;};
return int64 (_eff ),nil ;};return 0,nil ;};func (_aggg *Header )GetSegmentData ()(Segmenter ,error ){var _gcdg Segmenter ;if _aggg .SegmentData !=nil {_gcdg =_aggg .SegmentData ;};if _gcdg ==nil {_gbd ,_caa :=_feff [_aggg .Type ];if !_caa {return nil ,_ede .Errorf ("\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0073\u002f\u0020\u0025\u0064\u0020\u0063\u0072e\u0061t\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e\u0020",_aggg .Type ,_aggg .Type );
};_gcdg =_gbd ();_dae .Log .Trace ("\u005b\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u0020\u0061\u0074\u0020\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0030\u0034\u0058",_aggg .SegmentNumber ,_aggg .SegmentDataStartOffset );
_cfaf ,_gefg :=_aggg .subInputReader ();if _gefg !=nil {return nil ,_gefg ;};if _ebbe :=_gcdg .Init (_aggg ,_cfaf );_ebbe !=nil {_dae .Log .Debug ("\u0049\u006e\u0069\u0074 \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076 \u0066o\u0072\u0020\u0074\u0079\u0070\u0065\u003a \u0025\u0054",_ebbe ,_gcdg );
return nil ,_ebbe ;};_aggg .SegmentData =_gcdg ;};return _gcdg ,nil ;};func (_gced *RegionSegment )Size ()int {return 17};func (_dag *Header )readHeaderLength (_adcf _gf .StreamReader ,_caec int64 ){_dag .HeaderLength =_adcf .StreamPosition ()-_caec ;};
func (_dabb *SymbolDictionary )setAtPixels ()error {if _dabb .IsHuffmanEncoded {return nil ;};_fadd :=1;if _dabb .SdTemplate ==0{_fadd =4;};if _gdbe :=_dabb .readAtPixels (_fadd );_gdbe !=nil {return _gdbe ;};return nil ;};func (_fgbd *TextRegion )symbolIDCodeLengths ()error {var (_bccc []*_gfb .Code ;
_fdga uint64 ;_caaf _gfb .Tabler ;_eace error ;);for _edba :=0;_edba < 35;_edba ++{_fdga ,_eace =_fgbd ._eafe .ReadBits (4);if _eace !=nil {return _eace ;};_fbee :=int (_fdga &0xf);if _fbee > 0{_bccc =append (_bccc ,_gfb .NewCode (int32 (_fbee ),0,int32 (_edba ),false ));
};};_caaf ,_eace =_gfb .NewFixedSizeTable (_bccc );if _eace !=nil {return _eace ;};var (_cccgf int64 ;_gfbe uint32 ;_bebda []*_gfb .Code ;_cbbd int64 ;);for _gfbe < _fgbd .NumberOfSymbols {_cbbd ,_eace =_caaf .Decode (_fgbd ._eafe );if _eace !=nil {return _eace ;
};if _cbbd < 32{if _cbbd > 0{_bebda =append (_bebda ,_gfb .NewCode (int32 (_cbbd ),0,int32 (_gfbe ),false ));};_cccgf =_cbbd ;_gfbe ++;}else {var _gfge ,_edad int64 ;switch _cbbd {case 32:_fdga ,_eace =_fgbd ._eafe .ReadBits (2);if _eace !=nil {return _eace ;
};_gfge =3+int64 (_fdga );if _gfbe > 0{_edad =_cccgf ;};case 33:_fdga ,_eace =_fgbd ._eafe .ReadBits (3);if _eace !=nil {return _eace ;};_gfge =3+int64 (_fdga );case 34:_fdga ,_eace =_fgbd ._eafe .ReadBits (7);if _eace !=nil {return _eace ;};_gfge =11+int64 (_fdga );
};for _cggcc :=0;_cggcc < int (_gfge );_cggcc ++{if _edad > 0{_bebda =append (_bebda ,_gfb .NewCode (int32 (_edad ),0,int32 (_gfbe ),false ));};_gfbe ++;};};};_fgbd ._eafe .Align ();_fgbd ._ccag ,_eace =_gfb .NewFixedSizeTable (_bebda );return _eace ;};
func (_bef *GenericRegion )writeGBAtPixels (_dce _gf .BinaryWriter )(_cgfg int ,_bbd error ){const _fad ="\u0077r\u0069t\u0065\u0047\u0042\u0041\u0074\u0050\u0069\u0078\u0065\u006c\u0073";if _bef .UseMMR {return 0,nil ;};_edac :=1;if _bef .GBTemplate ==0{_edac =4;
}else if _bef .UseExtTemplates {_edac =12;};if len (_bef .GBAtX )!=_edac {return 0,_da .Errorf (_fad ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0058\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};if len (_bef .GBAtY )!=_edac {return 0,_da .Errorf (_fad ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0059\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};for _dbaf :=0;_dbaf < _edac ;_dbaf ++{if _bbd =_dce .WriteByte (byte (_bef .GBAtX [_dbaf ]));_bbd !=nil {return _cgfg ,_da .Wrap (_bbd ,_fad ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0058");};_cgfg ++;if _bbd =_dce .WriteByte (byte (_bef .GBAtY [_dbaf ]));
_bbd !=nil {return _cgfg ,_da .Wrap (_bbd ,_fad ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0059");};_cgfg ++;};return _cgfg ,nil ;};func (_gdbbb *PatternDictionary )extractPatterns (_geffc *_ee .Bitmap )error {var _aaec int ;_bffe :=make ([]*_ee .Bitmap ,_gdbbb .GrayMax +1);
for _aaec <=int (_gdbbb .GrayMax ){_afa :=int (_gdbbb .HdpWidth )*_aaec ;_geae :=_e .Rect (_afa ,0,_afa +int (_gdbbb .HdpWidth ),int (_gdbbb .HdpHeight ));_dgacd ,_fbeg :=_ee .Extract (_geae ,_geffc );if _fbeg !=nil {return _fbeg ;};_bffe [_aaec ]=_dgacd ;
_aaec ++;};_gdbbb .Patterns =_bffe ;return nil ;};type RegionSegment struct{_cbga _gf .StreamReader ;BitmapWidth uint32 ;BitmapHeight uint32 ;XLocation uint32 ;YLocation uint32 ;CombinaionOperator _ee .CombinationOperator ;};func (_bgdb *SymbolDictionary )getSbSymCodeLen ()int8 {_cca :=int8 (_d .Ceil (_d .Log (float64 (_bgdb ._cfee +_bgdb .NumberOfNewSymbols ))/_d .Log (2)));
if _bgdb .IsHuffmanEncoded &&_cca < 1{return 1;};return _cca ;};func (_gcfd *GenericRegion )decodeTemplate3 (_aea ,_gbe ,_bdgf int ,_dcbe ,_abb int )(_fcaf error ){const _dcaa ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0033";
var (_gdfe ,_edgg int ;_gaggf int ;_fggg byte ;_ecf ,_dgfd int ;);if _aea >=1{_fggg ,_fcaf =_gcfd .Bitmap .GetByte (_abb );if _fcaf !=nil {return _da .Wrap (_fcaf ,_dcaa ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_gaggf =int (_fggg );};_gdfe =(_gaggf >>1)&0x70;
for _agbe :=0;_agbe < _bdgf ;_agbe =_ecf {var (_dgad byte ;_fbe int ;);_ecf =_agbe +8;if _cedc :=_gbe -_agbe ;_cedc > 8{_fbe =8;}else {_fbe =_cedc ;};if _aea >=1{_gaggf <<=8;if _ecf < _gbe {_fggg ,_fcaf =_gcfd .Bitmap .GetByte (_abb +1);if _fcaf !=nil {return _da .Wrap (_fcaf ,_dcaa ,"\u0069\u006e\u006e\u0065\u0072\u0020\u002d\u0020\u006c\u0069\u006e\u0065 \u003e\u003d\u0020\u0031");
};_gaggf |=int (_fggg );};};for _fea :=0;_fea < _fbe ;_fea ++{if _gcfd ._dged {_edgg =_gcfd .overrideAtTemplate3 (_gdfe ,_agbe +_fea ,_aea ,int (_dgad ),_fea );_gcfd ._ebe .SetIndex (int32 (_edgg ));}else {_gcfd ._ebe .SetIndex (int32 (_gdfe ));};_dgfd ,_fcaf =_gcfd ._ada .DecodeBit (_gcfd ._ebe );
if _fcaf !=nil {return _da .Wrap (_fcaf ,_dcaa ,"");};_dgad |=byte (_dgfd )<<byte (7-_fea );_gdfe =((_gdfe &0x1f7)<<1)|_dgfd |((_gaggf >>uint (8-_fea ))&0x010);};if _ecec :=_gcfd .Bitmap .SetByte (_dcbe ,_dgad );_ecec !=nil {return _da .Wrap (_ecec ,_dcaa ,"");
};_dcbe ++;_abb ++;};return nil ;};func (_aega *Header )Encode (w _gf .BinaryWriter )(_ccea int ,_edggf error ){const _eeef ="\u0048\u0065\u0061d\u0065\u0072\u002e\u0057\u0072\u0069\u0074\u0065";var _adc _gf .BinaryWriter ;_dae .Log .Trace ("\u005b\u0053\u0045G\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045\u0052\u005d[\u0045\u004e\u0043\u004f\u0044\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");
defer func (){if _edggf !=nil {_dae .Log .Trace ("[\u0053\u0045\u0047\u004d\u0045\u004eT\u002d\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0045\u004e\u0043\u004f\u0044E\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020%\u0076",_edggf );}else {_dae .Log .Trace ("\u005b\u0053\u0045\u0047ME\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0025\u0076",_aega );
_dae .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045N\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u005b\u0045\u004e\u0043O\u0044\u0045\u005d\u0020\u0046\u0069\u006ei\u0073\u0068\u0065\u0064");};}();w .FinishByte ();if _aega .SegmentData !=nil {_cefb ,_ebbf :=_aega .SegmentData .(SegmentEncoder );
if !_ebbf {return 0,_da .Errorf (_eeef ,"\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0064\u006f\u0065s\u006e\u0027\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074 \u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0045\u006e\u0063\u006f\u0064er\u0020\u0069\u006e\u0074\u0065\u0072\u0066\u0061\u0063\u0065",_aega .SegmentData );
};_adc =_gf .BufferedMSB ();_ccea ,_edggf =_cefb .Encode (_adc );if _edggf !=nil {return 0,_da .Wrap (_edggf ,_eeef ,"");};_aega .SegmentDataLength =uint64 (_ccea );};if _aega .pageSize ()==4{_aega .PageAssociationFieldSize =true ;};var _gdda int ;_gdda ,_edggf =_aega .writeSegmentNumber (w );
if _edggf !=nil {return 0,_da .Wrap (_edggf ,_eeef ,"");};_ccea +=_gdda ;if _edggf =_aega .writeFlags (w );_edggf !=nil {return _ccea ,_da .Wrap (_edggf ,_eeef ,"");};_ccea ++;_gdda ,_edggf =_aega .writeReferredToCount (w );if _edggf !=nil {return 0,_da .Wrap (_edggf ,_eeef ,"");
};_ccea +=_gdda ;_gdda ,_edggf =_aega .writeReferredToSegments (w );if _edggf !=nil {return 0,_da .Wrap (_edggf ,_eeef ,"");};_ccea +=_gdda ;_gdda ,_edggf =_aega .writeSegmentPageAssociation (w );if _edggf !=nil {return 0,_da .Wrap (_edggf ,_eeef ,"");
};_ccea +=_gdda ;_gdda ,_edggf =_aega .writeSegmentDataLength (w );if _edggf !=nil {return 0,_da .Wrap (_edggf ,_eeef ,"");};_ccea +=_gdda ;_aega .HeaderLength =int64 (_ccea )-int64 (_aega .SegmentDataLength );if _adc !=nil {if _ ,_edggf =w .Write (_adc .Data ());
_edggf !=nil {return _ccea ,_da .Wrap (_edggf ,_eeef ,"\u0077r\u0069t\u0065\u0020\u0073\u0065\u0067m\u0065\u006et\u0020\u0064\u0061\u0074\u0061");};};return _ccea ,nil ;};func (_ceae *HalftoneRegion )grayScaleDecoding (_cffb int )([][]int ,error ){var (_fgd []int8 ;
_eebea []int8 ;);if !_ceae .IsMMREncoded {_fgd =make ([]int8 ,4);_eebea =make ([]int8 ,4);if _ceae .HTemplate <=1{_fgd [0]=3;}else if _ceae .HTemplate >=2{_fgd [0]=2;};_eebea [0]=-1;_fgd [1]=-3;_eebea [1]=-1;_fgd [2]=2;_eebea [2]=-2;_fgd [3]=-2;_eebea [3]=-2;
};_fdad :=make ([]*_ee .Bitmap ,_cffb );_fgb :=NewGenericRegion (_ceae ._efd );_fgb .setParametersMMR (_ceae .IsMMREncoded ,_ceae .DataOffset ,_ceae .DataLength ,_ceae .HGridHeight ,_ceae .HGridWidth ,_ceae .HTemplate ,false ,_ceae .HSkipEnabled ,_fgd ,_eebea );
_bda :=_cffb -1;var _afc error ;_fdad [_bda ],_afc =_fgb .GetRegionBitmap ();if _afc !=nil {return nil ,_afc ;};for _bda > 0{_bda --;_fgb .Bitmap =nil ;_fdad [_bda ],_afc =_fgb .GetRegionBitmap ();if _afc !=nil {return nil ,_afc ;};if _afc =_ceae .combineGrayscalePlanes (_fdad ,_bda );
_afc !=nil {return nil ,_afc ;};};return _ceae .computeGrayScalePlanes (_fdad ,_cffb );};func (_ccbf *PageInformationSegment )Init (h *Header ,r _gf .StreamReader )(_bfgab error ){_ccbf ._ddgd =r ;if _bfgab =_ccbf .parseHeader ();_bfgab !=nil {return _da .Wrap (_bfgab ,"P\u0061\u0067\u0065\u0049\u006e\u0066o\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065g\u006d\u0065\u006et\u002eI\u006e\u0069\u0074","");
};return nil ;};func (_edag *RegionSegment )readCombinationOperator ()error {_aeea ,_agad :=_edag ._cbga .ReadBits (3);if _agad !=nil {return _agad ;};_edag .CombinaionOperator =_ee .CombinationOperator (_aeea &0xF);return nil ;};func (_ecfa *PatternDictionary )readGrayMax ()error {_edda ,_fdeb :=_ecfa ._aaad .ReadBits (32);
if _fdeb !=nil {return _fdeb ;};_ecfa .GrayMax =uint32 (_edda &_d .MaxUint32 );return nil ;};func (_gfdae *TextRegion )decodeID ()(int64 ,error ){if _gfdae .IsHuffmanEncoded {if _gfdae ._ccag ==nil {_fac ,_daaa :=_gfdae ._eafe .ReadBits (byte (_gfdae ._bggde ));
return int64 (_fac ),_daaa ;};return _gfdae ._ccag .Decode (_gfdae ._eafe );};return _gfdae ._adabd .DecodeIAID (uint64 (_gfdae ._bggde ),_gfdae ._cgaa );};func (_cdcb *PageInformationSegment )CombinationOperatorOverrideAllowed ()bool {return _cdcb ._cgda };
func (_dacg *GenericRegion )getPixel (_cgad ,_bfgd int )int8 {if _cgad < 0||_cgad >=_dacg .Bitmap .Width {return 0;};if _bfgd < 0||_bfgd >=_dacg .Bitmap .Height {return 0;};if _dacg .Bitmap .GetPixel (_cgad ,_bfgd ){return 1;};return 0;};func (_ecd *Header )parse (_befb Documenter ,_bcd _gf .StreamReader ,_cfd int64 ,_bbdc OrganizationType )(_fafa error ){const _fcaa ="\u0070\u0061\u0072s\u0065";
_dae .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u005b\u0050A\u0052\u0053\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _fafa !=nil {_dae .Log .Trace ("\u005b\u0053\u0045GM\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045R\u005d[\u0050A\u0052S\u0045\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_fafa );
}else {_dae .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052]\u005bP\u0041\u0052\u0053\u0045\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");};}();_ ,_fafa =_bcd .Seek (_cfd ,_b .SeekStart );
if _fafa !=nil {return _da .Wrap (_fafa ,_fcaa ,"\u0073\u0065\u0065\u006b\u0020\u0073\u0074\u0061\u0072\u0074");};if _fafa =_ecd .readSegmentNumber (_bcd );_fafa !=nil {return _da .Wrap (_fafa ,_fcaa ,"");};if _fafa =_ecd .readHeaderFlags ();_fafa !=nil {return _da .Wrap (_fafa ,_fcaa ,"");
};var _fabe uint64 ;_fabe ,_fafa =_ecd .readNumberOfReferredToSegments (_bcd );if _fafa !=nil {return _da .Wrap (_fafa ,_fcaa ,"");};_ecd .RTSNumbers ,_fafa =_ecd .readReferredToSegmentNumbers (_bcd ,int (_fabe ));if _fafa !=nil {return _da .Wrap (_fafa ,_fcaa ,"");
};_fafa =_ecd .readSegmentPageAssociation (_befb ,_bcd ,_fabe ,_ecd .RTSNumbers ...);if _fafa !=nil {return _da .Wrap (_fafa ,_fcaa ,"");};if _ecd .Type !=TEndOfFile {if _fafa =_ecd .readSegmentDataLength (_bcd );_fafa !=nil {return _da .Wrap (_fafa ,_fcaa ,"");
};};_ecd .readDataStartOffset (_bcd ,_bbdc );_ecd .readHeaderLength (_bcd ,_cfd );_dae .Log .Trace ("\u0025\u0073",_ecd );return nil ;};var _ SegmentEncoder =&GenericRegion {};type template0 struct{};func (_dgbe *GenericRegion )setParametersWithAt (_cgbg bool ,_aaag byte ,_gfaf ,_dgacc bool ,_gdd ,_add []int8 ,_bdeb ,_adbg uint32 ,_fdcb *_ef .DecoderStats ,_cecb *_ef .Decoder ){_dgbe .IsMMREncoded =_cgbg ;
_dgbe .GBTemplate =_aaag ;_dgbe .IsTPGDon =_gfaf ;_dgbe .GBAtX =_gdd ;_dgbe .GBAtY =_add ;_dgbe .RegionSegment .BitmapHeight =_adbg ;_dgbe .RegionSegment .BitmapWidth =_bdeb ;_dgbe ._geg =nil ;_dgbe .Bitmap =nil ;if _fdcb !=nil {_dgbe ._ebe =_fdcb ;};if _cecb !=nil {_dgbe ._ada =_cecb ;
};_dae .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049O\u004e\u005d\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073\u0020\u0053\u0044\u0041t\u003a\u0020\u0025\u0073",_dgbe );};
func (_dcge *TableSegment )HtHigh ()int32 {return _dcge ._dfcf };func (_ce *EndOfStripe )Init (h *Header ,r _gf .StreamReader )error {_ce ._ba =r ;return _ce .parseHeader (h ,r );};func (_fdb *GenericRegion )decodeTemplate1 (_efa ,_cefc ,_dfgc int ,_ded ,_dbfe int )(_ebbg error ){const _cac ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0031";
var (_ceb ,_ddaf int ;_bgd ,_acb int ;_cdb byte ;_fdac ,_eggc int ;);if _efa >=1{_cdb ,_ebbg =_fdb .Bitmap .GetByte (_dbfe );if _ebbg !=nil {return _da .Wrap (_ebbg ,_cac ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_bgd =int (_cdb );};if _efa >=2{_cdb ,_ebbg =_fdb .Bitmap .GetByte (_dbfe -_fdb .Bitmap .RowStride );
if _ebbg !=nil {return _da .Wrap (_ebbg ,_cac ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_acb =int (_cdb )<<5;};_ceb =((_bgd >>1)&0x1f8)|((_acb >>1)&0x1e00);for _eggg :=0;_eggg < _dfgc ;_eggg =_fdac {var (_bdc byte ;_cff int ;);_fdac =_eggg +8;
if _cafa :=_cefc -_eggg ;_cafa > 8{_cff =8;}else {_cff =_cafa ;};if _efa > 0{_bgd <<=8;if _fdac < _cefc {_cdb ,_ebbg =_fdb .Bitmap .GetByte (_dbfe +1);if _ebbg !=nil {return _da .Wrap (_ebbg ,_cac ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};
_bgd |=int (_cdb );};};if _efa > 1{_acb <<=8;if _fdac < _cefc {_cdb ,_ebbg =_fdb .Bitmap .GetByte (_dbfe -_fdb .Bitmap .RowStride +1);if _ebbg !=nil {return _da .Wrap (_ebbg ,_cac ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_acb |=int (_cdb )<<5;
};};for _eced :=0;_eced < _cff ;_eced ++{if _fdb ._dged {_ddaf =_fdb .overrideAtTemplate1 (_ceb ,_eggg +_eced ,_efa ,int (_bdc ),_eced );_fdb ._ebe .SetIndex (int32 (_ddaf ));}else {_fdb ._ebe .SetIndex (int32 (_ceb ));};_eggc ,_ebbg =_fdb ._ada .DecodeBit (_fdb ._ebe );
if _ebbg !=nil {return _da .Wrap (_ebbg ,_cac ,"");};_bdc |=byte (_eggc )<<uint (7-_eced );_egc :=uint (8-_eced );_ceb =((_ceb &0xefb)<<1)|_eggc |((_bgd >>_egc )&0x8)|((_acb >>_egc )&0x200);};if _eefe :=_fdb .Bitmap .SetByte (_ded ,_bdc );_eefe !=nil {return _da .Wrap (_eefe ,_cac ,"");
};_ded ++;_dbfe ++;};return nil ;};func (_cefac *TextRegion )getUserTable (_gfff int )(_gfb .Tabler ,error ){const _bdbe ="\u0067\u0065\u0074U\u0073\u0065\u0072\u0054\u0061\u0062\u006c\u0065";var _dfbdd int ;for _ ,_bbde :=range _cefac .Header .RTSegments {if _bbde .Type ==53{if _dfbdd ==_gfff {_cdeb ,_efdf :=_bbde .GetSegmentData ();
if _efdf !=nil {return nil ,_efdf ;};_gcbf ,_gdece :=_cdeb .(*TableSegment );if !_gdece {_dae .Log .Debug (_ede .Sprintf ("\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079p\u0065\u00205\u0033\u0020\u002d\u0020\u0061\u006ed\u0020in\u0064\u0065\u0078\u003a\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_bbde .SegmentNumber ));
return nil ,_da .Error (_bdbe ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079\u0070e\u0020\u0035\u0033\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u002a\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};return _gfb .NewEncodedTable (_gcbf );};_dfbdd ++;};};return nil ,nil ;};func (_bdec *GenericRegion )overrideAtTemplate3 (_edab ,_eab ,_bbcb ,_aeaa ,_dbbf int )int {_edab &=0x3EF;if _bdec .GBAtY [0]==0&&_bdec .GBAtX [0]>=-int8 (_dbbf ){_edab |=(_aeaa >>uint (7-(int8 (_dbbf )+_bdec .GBAtX [0]))&0x1)<<4;
}else {_edab |=int (_bdec .getPixel (_eab +int (_bdec .GBAtX [0]),_bbcb +int (_bdec .GBAtY [0])))<<4;};return _edab ;};func (_eede *Header )writeFlags (_gbgc _gf .BinaryWriter )(_fdgb error ){const _bgbd ="\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065F\u006c\u0061\u0067\u0073";
_fdce :=byte (_eede .Type );if _fdgb =_gbgc .WriteByte (_fdce );_fdgb !=nil {return _da .Wrap (_fdgb ,_bgbd ,"\u0077\u0072\u0069ti\u006e\u0067\u0020\u0073\u0065\u0067\u006d\u0065\u006et\u0020t\u0079p\u0065 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};if !_eede .RetainFlag &&!_eede .PageAssociationFieldSize {return nil ;};if _fdgb =_gbgc .SkipBits (-8);_fdgb !=nil {return _da .Wrap (_fdgb ,_bgbd ,"\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0062\u0061\u0063\u006b\u0020\u0074\u0068\u0065\u0020\u0062\u0069\u0074\u0073\u0020\u0066\u0061il\u0065\u0064");
};var _bfe int ;if _eede .RetainFlag {_bfe =1;};if _fdgb =_gbgc .WriteBit (_bfe );_fdgb !=nil {return _da .Wrap (_fdgb ,_bgbd ,"\u0072\u0065\u0074\u0061in\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067\u0073");};_bfe =0;if _eede .PageAssociationFieldSize {_bfe =1;
};if _fdgb =_gbgc .WriteBit (_bfe );_fdgb !=nil {return _da .Wrap (_fdgb ,_bgbd ,"p\u0061\u0067\u0065\u0020as\u0073o\u0063\u0069\u0061\u0074\u0069o\u006e\u0020\u0066\u006c\u0061\u0067");};_gbgc .FinishByte ();return nil ;};func (_efcb *TextRegion )decodeIb (_bgfb ,_gbff int64 )(*_ee .Bitmap ,error ){const _bgac ="\u0064\u0065\u0063\u006f\u0064\u0065\u0049\u0062";
var (_gcab error ;_bebbe *_ee .Bitmap ;);if _bgfb ==0{if int (_gbff )> len (_efcb .Symbols )-1{return nil ,_da .Error (_bgac ,"\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0049\u0042\u0020\u0062\u0069\u0074\u006d\u0061\u0070\u002e\u0020\u0069\u006e\u0064\u0065x\u0020\u006f\u0075\u0074\u0020o\u0066\u0020r\u0061\u006e\u0067\u0065");
};return _efcb .Symbols [int (_gbff )],nil ;};var _bgbb ,_aagd ,_gedc ,_adbgb int64 ;_bgbb ,_gcab =_efcb .decodeRdw ();if _gcab !=nil {return nil ,_da .Wrap (_gcab ,_bgac ,"");};_aagd ,_gcab =_efcb .decodeRdh ();if _gcab !=nil {return nil ,_da .Wrap (_gcab ,_bgac ,"");
};_gedc ,_gcab =_efcb .decodeRdx ();if _gcab !=nil {return nil ,_da .Wrap (_gcab ,_bgac ,"");};_adbgb ,_gcab =_efcb .decodeRdy ();if _gcab !=nil {return nil ,_da .Wrap (_gcab ,_bgac ,"");};if _efcb .IsHuffmanEncoded {if _ ,_gcab =_efcb .decodeSymInRefSize ();
_gcab !=nil {return nil ,_da .Wrap (_gcab ,_bgac ,"");};_efcb ._eafe .Align ();};_eddc :=_efcb .Symbols [_gbff ];_efdg :=uint32 (_eddc .Width );_bdccd :=uint32 (_eddc .Height );_adaf :=int32 (uint32 (_bgbb )>>1)+int32 (_gedc );_cccgb :=int32 (uint32 (_aagd )>>1)+int32 (_adbgb );
if _efcb ._agdf ==nil {_efcb ._agdf =_ggae (_efcb ._eafe ,nil );};_efcb ._agdf .setParameters (_efcb ._bgcc ,_efcb ._adabd ,_efcb .SbrTemplate ,_efdg +uint32 (_bgbb ),_bdccd +uint32 (_aagd ),_eddc ,_adaf ,_cccgb ,false ,_efcb .SbrATX ,_efcb .SbrATY );_bebbe ,_gcab =_efcb ._agdf .GetRegionBitmap ();
if _gcab !=nil {return nil ,_da .Wrap (_gcab ,_bgac ,"\u0067\u0072\u0066");};if _efcb .IsHuffmanEncoded {_efcb ._eafe .Align ();};return _bebbe ,nil ;};func (_bafd *GenericRegion )updateOverrideFlags ()error {const _gdb ="\u0075\u0070\u0064\u0061te\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _bafd .GBAtX ==nil ||_bafd .GBAtY ==nil {return nil ;};if len (_bafd .GBAtX )!=len (_bafd .GBAtY ){return _da .Errorf (_gdb ,"i\u006eco\u0073i\u0073t\u0065\u006e\u0074\u0020\u0041T\u0020\u0070\u0069x\u0065\u006c\u002e\u0020\u0041m\u006f\u0075\u006et\u0020\u006f\u0066\u0020\u0027\u0078\u0027\u0020\u0070\u0069\u0078e\u006c\u0073\u003a %d\u002c\u0020\u0041\u006d\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0027\u0079\u0027\u0020\u0070\u0069\u0078e\u006cs\u003a\u0020\u0025\u0064",len (_bafd .GBAtX ),len (_bafd .GBAtY ));
};_bafd .GBAtOverride =make ([]bool ,len (_bafd .GBAtX ));switch _bafd .GBTemplate {case 0:if !_bafd .UseExtTemplates {if _bafd .GBAtX [0]!=3||_bafd .GBAtY [0]!=-1{_bafd .setOverrideFlag (0);};if _bafd .GBAtX [1]!=-3||_bafd .GBAtY [1]!=-1{_bafd .setOverrideFlag (1);
};if _bafd .GBAtX [2]!=2||_bafd .GBAtY [2]!=-2{_bafd .setOverrideFlag (2);};if _bafd .GBAtX [3]!=-2||_bafd .GBAtY [3]!=-2{_bafd .setOverrideFlag (3);};}else {if _bafd .GBAtX [0]!=-2||_bafd .GBAtY [0]!=0{_bafd .setOverrideFlag (0);};if _bafd .GBAtX [1]!=0||_bafd .GBAtY [1]!=-2{_bafd .setOverrideFlag (1);
};if _bafd .GBAtX [2]!=-2||_bafd .GBAtY [2]!=-1{_bafd .setOverrideFlag (2);};if _bafd .GBAtX [3]!=-1||_bafd .GBAtY [3]!=-2{_bafd .setOverrideFlag (3);};if _bafd .GBAtX [4]!=1||_bafd .GBAtY [4]!=-2{_bafd .setOverrideFlag (4);};if _bafd .GBAtX [5]!=2||_bafd .GBAtY [5]!=-1{_bafd .setOverrideFlag (5);
};if _bafd .GBAtX [6]!=-3||_bafd .GBAtY [6]!=0{_bafd .setOverrideFlag (6);};if _bafd .GBAtX [7]!=-4||_bafd .GBAtY [7]!=0{_bafd .setOverrideFlag (7);};if _bafd .GBAtX [8]!=2||_bafd .GBAtY [8]!=-2{_bafd .setOverrideFlag (8);};if _bafd .GBAtX [9]!=3||_bafd .GBAtY [9]!=-1{_bafd .setOverrideFlag (9);
};if _bafd .GBAtX [10]!=-2||_bafd .GBAtY [10]!=-2{_bafd .setOverrideFlag (10);};if _bafd .GBAtX [11]!=-3||_bafd .GBAtY [11]!=-1{_bafd .setOverrideFlag (11);};};case 1:if _bafd .GBAtX [0]!=3||_bafd .GBAtY [0]!=-1{_bafd .setOverrideFlag (0);};case 2:if _bafd .GBAtX [0]!=2||_bafd .GBAtY [0]!=-1{_bafd .setOverrideFlag (0);
};case 3:if _bafd .GBAtX [0]!=2||_bafd .GBAtY [0]!=-1{_bafd .setOverrideFlag (0);};};return nil ;};type EncodeInitializer interface{InitEncode ();};func (_fecba *PatternDictionary )checkInput ()error {if _fecba .HdpHeight < 1||_fecba .HdpWidth < 1{return _g .New ("in\u0076\u0061l\u0069\u0064\u0020\u0048\u0065\u0061\u0064\u0065\u0072 \u0056\u0061\u006c\u0075\u0065\u003a\u0020\u0057\u0069\u0064\u0074\u0068\u002f\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020g\u0072e\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020z\u0065\u0072o");
};if _fecba .IsMMREncoded {if _fecba .HDTemplate !=0{_dae .Log .Debug ("\u0076\u0061\u0072\u0069\u0061\u0062\u006c\u0065\u0020\u0048\u0044\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e \u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030");
};};return nil ;};func (_cbee *TextRegion )readUseRefinement ()error {if !_cbee .UseRefinement ||_cbee .SbrTemplate !=0{return nil ;};var (_gbbf byte ;_bgdd error ;);_cbee .SbrATX =make ([]int8 ,2);_cbee .SbrATY =make ([]int8 ,2);_gbbf ,_bgdd =_cbee ._eafe .ReadByte ();
if _bgdd !=nil {return _bgdd ;};_cbee .SbrATX [0]=int8 (_gbbf );_gbbf ,_bgdd =_cbee ._eafe .ReadByte ();if _bgdd !=nil {return _bgdd ;};_cbee .SbrATY [0]=int8 (_gbbf );_gbbf ,_bgdd =_cbee ._eafe .ReadByte ();if _bgdd !=nil {return _bgdd ;};_cbee .SbrATX [1]=int8 (_gbbf );
_gbbf ,_bgdd =_cbee ._eafe .ReadByte ();if _bgdd !=nil {return _bgdd ;};_cbee .SbrATY [1]=int8 (_gbbf );return nil ;};type template1 struct{};type Segmenter interface{Init (_ebbfc *Header ,_gacb _gf .StreamReader )error ;};func (_bcgff *TableSegment )HtLow ()int32 {return _bcgff ._faea };
func (_ge *GenericRefinementRegion )getGrReference ()(*_ee .Bitmap ,error ){segments :=_ge ._gfe .RTSegments ;if len (segments )==0{return nil ,_g .New ("\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0065\u0078is\u0074\u0073");
};_cg ,_fdg :=segments [0].GetSegmentData ();if _fdg !=nil {return nil ,_fdg ;};_cb ,_dgb :=_cg .(Regioner );if !_dgb {return nil ,_ede .Errorf ("\u0072\u0065\u0066\u0065\u0072r\u0065\u0064\u0020\u0074\u006f\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_cg );
};return _cb .GetRegionBitmap ();};func (_ebga *Header )CleanSegmentData (){if _ebga .SegmentData !=nil {_ebga .SegmentData =nil ;};};func (_dfca *SymbolDictionary )decodeHeightClassCollectiveBitmap (_eface int64 ,_fgfe ,_gefcf uint32 )(*_ee .Bitmap ,error ){if _eface ==0{_aecc :=_ee .New (int (_gefcf ),int (_fgfe ));
var (_dbcb byte ;_ececg error ;);for _bafdc :=0;_bafdc < len (_aecc .Data );_bafdc ++{_dbcb ,_ececg =_dfca ._faad .ReadByte ();if _ececg !=nil {return nil ,_ececg ;};if _ececg =_aecc .SetByte (_bafdc ,_dbcb );_ececg !=nil {return nil ,_ececg ;};};return _aecc ,nil ;
};if _dfca ._edae ==nil {_dfca ._edae =NewGenericRegion (_dfca ._faad );};_dfca ._edae .setParameters (true ,_dfca ._faad .StreamPosition (),_eface ,_fgfe ,_gefcf );_gbfgc ,_fbfa :=_dfca ._edae .GetRegionBitmap ();if _fbfa !=nil {return nil ,_fbfa ;};return _gbfgc ,nil ;
};func (_ebg *GenericRegion )Init (h *Header ,r _gf .StreamReader )error {_ebg .RegionSegment =NewRegionSegment (r );_ebg ._gcgc =r ;return _ebg .parseHeader ();};func (_babc *TextRegion )decodeStripT ()(_affg int64 ,_agab error ){if _babc .IsHuffmanEncoded {if _babc .SbHuffDT ==3{if _babc ._acag ==nil {var _bbec int ;
if _babc .SbHuffFS ==3{_bbec ++;};if _babc .SbHuffDS ==3{_bbec ++;};_babc ._acag ,_agab =_babc .getUserTable (_bbec );if _agab !=nil {return 0,_agab ;};};_affg ,_agab =_babc ._acag .Decode (_babc ._eafe );if _agab !=nil {return 0,_agab ;};}else {var _aeee _gfb .Tabler ;
_aeee ,_agab =_gfb .GetStandardTable (11+int (_babc .SbHuffDT ));if _agab !=nil {return 0,_agab ;};_affg ,_agab =_aeee .Decode (_babc ._eafe );if _agab !=nil {return 0,_agab ;};};}else {var _aacfe int32 ;_aacfe ,_agab =_babc ._adabd .DecodeInt (_babc ._agebg );
if _agab !=nil {return 0,_agab ;};_affg =int64 (_aacfe );};_affg *=int64 (-_babc .SbStrips );return _affg ,nil ;};func (_ccgbe *TextRegion )decodeSymbolInstances ()error {_cbe ,_ccbb :=_ccgbe .decodeStripT ();if _ccbb !=nil {return _ccbb ;};var (_egcdb int64 ;
_cgfa uint32 ;);for _cgfa < _ccgbe .NumberOfSymbolInstances {_acaa ,_dbbc :=_ccgbe .decodeDT ();if _dbbc !=nil {return _dbbc ;};_cbe +=_acaa ;var _cccg int64 ;_cbad :=true ;_ccgbe ._fbge =0;for {if _cbad {_cccg ,_dbbc =_ccgbe .decodeDfs ();if _dbbc !=nil {return _dbbc ;
};_egcdb +=_cccg ;_ccgbe ._fbge =_egcdb ;_cbad =false ;}else {_dbcbcd ,_gbea :=_ccgbe .decodeIds ();if _c .Is (_gbea ,_a .ErrOOB ){break ;};if _gbea !=nil {return _gbea ;};if _cgfa >=_ccgbe .NumberOfSymbolInstances {break ;};_ccgbe ._fbge +=_dbcbcd +int64 (_ccgbe .SbDsOffset );
};_egeg ,_dffb :=_ccgbe .decodeCurrentT ();if _dffb !=nil {return _dffb ;};_cdba :=_cbe +_egeg ;_ffgg ,_dffb :=_ccgbe .decodeID ();if _dffb !=nil {return _dffb ;};_bebdc ,_dffb :=_ccgbe .decodeRI ();if _dffb !=nil {return _dffb ;};_ebdc ,_dffb :=_ccgbe .decodeIb (_bebdc ,_ffgg );
if _dffb !=nil {return _dffb ;};if _dffb =_ccgbe .blit (_ebdc ,_cdba );_dffb !=nil {return _dffb ;};_cgfa ++;};};return nil ;};func (_afdf *SymbolDictionary )encodeRefinementATFlags (_ggba _gf .BinaryWriter )(_cefa int ,_dcacd error ){const _egeac ="\u0065\u006e\u0063od\u0065\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0041\u0054\u0046\u006c\u0061\u0067\u0073";
if !_afdf .UseRefinementAggregation ||_afdf .SdrTemplate !=0{return 0,nil ;};for _gafd :=0;_gafd < 2;_gafd ++{if _dcacd =_ggba .WriteByte (byte (_afdf .SdrATX [_gafd ]));_dcacd !=nil {return _cefa ,_da .Wrapf (_dcacd ,_egeac ,"\u0053\u0064\u0072\u0041\u0054\u0058\u005b\u0025\u0064\u005d",_gafd );
};_cefa ++;if _dcacd =_ggba .WriteByte (byte (_afdf .SdrATY [_gafd ]));_dcacd !=nil {return _cefa ,_da .Wrapf (_dcacd ,_egeac ,"\u0053\u0064\u0072\u0041\u0054\u0059\u005b\u0025\u0064\u005d",_gafd );};_cefa ++;};return _cefa ,nil ;};func (_cecd *SymbolDictionary )decodeRefinedSymbol (_beaac ,_bdf uint32 )error {var (_acad int ;
_ggbc ,_aacf int32 ;);if _cecd .IsHuffmanEncoded {_baff ,_eec :=_cecd ._faad .ReadBits (byte (_cecd ._cfac ));if _eec !=nil {return _eec ;};_acad =int (_baff );_dcbb ,_eec :=_gfb .GetStandardTable (15);if _eec !=nil {return _eec ;};_acab ,_eec :=_dcbb .Decode (_cecd ._faad );
if _eec !=nil {return _eec ;};_ggbc =int32 (_acab );_acab ,_eec =_dcbb .Decode (_cecd ._faad );if _eec !=nil {return _eec ;};_aacf =int32 (_acab );_dcbb ,_eec =_gfb .GetStandardTable (1);if _eec !=nil {return _eec ;};if _ ,_eec =_dcbb .Decode (_cecd ._faad );
_eec !=nil {return _eec ;};_cecd ._faad .Align ();}else {_cfgd ,_fbb :=_cecd ._fagb .DecodeIAID (uint64 (_cecd ._cfac ),_cecd ._dggb );if _fbb !=nil {return _fbb ;};_acad =int (_cfgd );_ggbc ,_fbb =_cecd ._fagb .DecodeInt (_cecd ._aab );if _fbb !=nil {return _fbb ;
};_aacf ,_fbb =_cecd ._fagb .DecodeInt (_cecd ._acge );if _fbb !=nil {return _fbb ;};};if _dgef :=_cecd .setSymbolsArray ();_dgef !=nil {return _dgef ;};_ffdg :=_cecd ._gbda [_acad ];if _ccbe :=_cecd .decodeNewSymbols (_beaac ,_bdf ,_ffdg ,_ggbc ,_aacf );
_ccbe !=nil {return _ccbe ;};if _cecd .IsHuffmanEncoded {_cecd ._faad .Align ();};return nil ;};func (_fbebe *TextRegion )readHuffmanFlags ()error {var (_bfcge int ;_eedg uint64 ;_dffcb error ;);_ ,_dffcb =_fbebe ._eafe .ReadBit ();if _dffcb !=nil {return _dffcb ;
};_bfcge ,_dffcb =_fbebe ._eafe .ReadBit ();if _dffcb !=nil {return _dffcb ;};_fbebe .SbHuffRSize =int8 (_bfcge );_eedg ,_dffcb =_fbebe ._eafe .ReadBits (2);if _dffcb !=nil {return _dffcb ;};_fbebe .SbHuffRDY =int8 (_eedg )&0xf;_eedg ,_dffcb =_fbebe ._eafe .ReadBits (2);
if _dffcb !=nil {return _dffcb ;};_fbebe .SbHuffRDX =int8 (_eedg )&0xf;_eedg ,_dffcb =_fbebe ._eafe .ReadBits (2);if _dffcb !=nil {return _dffcb ;};_fbebe .SbHuffRDHeight =int8 (_eedg )&0xf;_eedg ,_dffcb =_fbebe ._eafe .ReadBits (2);if _dffcb !=nil {return _dffcb ;
};_fbebe .SbHuffRDWidth =int8 (_eedg )&0xf;_eedg ,_dffcb =_fbebe ._eafe .ReadBits (2);if _dffcb !=nil {return _dffcb ;};_fbebe .SbHuffDT =int8 (_eedg )&0xf;_eedg ,_dffcb =_fbebe ._eafe .ReadBits (2);if _dffcb !=nil {return _dffcb ;};_fbebe .SbHuffDS =int8 (_eedg )&0xf;
_eedg ,_dffcb =_fbebe ._eafe .ReadBits (2);if _dffcb !=nil {return _dffcb ;};_fbebe .SbHuffFS =int8 (_eedg )&0xf;return nil ;};func (_caca *GenericRegion )setOverrideFlag (_ccgd int ){_caca .GBAtOverride [_ccgd ]=true ;_caca ._dged =true ;};func (_aaa *GenericRegion )decodeLine (_bcg ,_bgb ,_abd int )error {const _adbb ="\u0064\u0065\u0063\u006f\u0064\u0065\u004c\u0069\u006e\u0065";
_cgb :=_aaa .Bitmap .GetByteIndex (0,_bcg );_acc :=_cgb -_aaa .Bitmap .RowStride ;switch _aaa .GBTemplate {case 0:if !_aaa .UseExtTemplates {return _aaa .decodeTemplate0a (_bcg ,_bgb ,_abd ,_cgb ,_acc );};return _aaa .decodeTemplate0b (_bcg ,_bgb ,_abd ,_cgb ,_acc );
case 1:return _aaa .decodeTemplate1 (_bcg ,_bgb ,_abd ,_cgb ,_acc );case 2:return _aaa .decodeTemplate2 (_bcg ,_bgb ,_abd ,_cgb ,_acc );case 3:return _aaa .decodeTemplate3 (_bcg ,_bgb ,_abd ,_cgb ,_acc );};return _da .Errorf (_adbb ,"\u0069\u006e\u0076a\u006c\u0069\u0064\u0020G\u0042\u0054\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u003a\u0020\u0025\u0064",_aaa .GBTemplate );
};func (_cfdaa *TextRegion )String ()string {_dfag :=&_dg .Builder {};_dfag .WriteString ("\u000a[\u0054E\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u000a");_dfag .WriteString (_cfdaa .RegionInfo .String ()+"\u000a");_dfag .WriteString (_ede .Sprintf ("\u0009\u002d\u0020\u0053br\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0025\u0076\u000a",_cfdaa .SbrTemplate ));
_dfag .WriteString (_ede .Sprintf ("\u0009-\u0020S\u0062\u0044\u0073\u004f\u0066f\u0073\u0065t\u003a\u0020\u0025\u0076\u000a",_cfdaa .SbDsOffset ));_dfag .WriteString (_ede .Sprintf ("\t\u002d \u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0050i\u0078\u0065\u006c\u003a %\u0076\u000a",_cfdaa .DefaultPixel ));
_dfag .WriteString (_ede .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0076\u000a",_cfdaa .CombinationOperator ));_dfag .WriteString (_ede .Sprintf ("\t\u002d \u0049\u0073\u0054\u0072\u0061\u006e\u0073\u0070o\u0073\u0065\u0064\u003a %\u0076\u000a",_cfdaa .IsTransposed ));
_dfag .WriteString (_ede .Sprintf ("\u0009\u002d\u0020Re\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0043\u006f\u0072\u006e\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_cfdaa .ReferenceCorner ));_dfag .WriteString (_ede .Sprintf ("\t\u002d\u0020\u0055\u0073eR\u0065f\u0069\u006e\u0065\u006d\u0065n\u0074\u003a\u0020\u0025\u0076\u000a",_cfdaa .UseRefinement ));
_dfag .WriteString (_ede .Sprintf ("\u0009-\u0020\u0049\u0073\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045n\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0076\u000a",_cfdaa .IsHuffmanEncoded ));if _cfdaa .IsHuffmanEncoded {_dfag .WriteString (_ede .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_cfdaa .SbHuffRSize ));
_dfag .WriteString (_ede .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0059:\u0020\u0025\u0076\u000a",_cfdaa .SbHuffRDY ));_dfag .WriteString (_ede .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0058:\u0020\u0025\u0076\u000a",_cfdaa .SbHuffRDX ));
_dfag .WriteString (_ede .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069\u0067\u0068\u0074\u003a\u0020\u0025v\u000a",_cfdaa .SbHuffRDHeight ));_dfag .WriteString (_ede .Sprintf ("\t\u002d\u0020\u0053\u0062Hu\u0066f\u0052\u0044\u0057\u0069\u0064t\u0068\u003a\u0020\u0025\u0076\u000a",_cfdaa .SbHuffRDWidth ));
_dfag .WriteString (_ede .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0054\u003a\u0020\u0025\u0076\u000a",_cfdaa .SbHuffDT ));_dfag .WriteString (_ede .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0053\u003a\u0020\u0025\u0076\u000a",_cfdaa .SbHuffDS ));
_dfag .WriteString (_ede .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0046\u0053\u003a\u0020\u0025\u0076\u000a",_cfdaa .SbHuffFS ));};_dfag .WriteString (_ede .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_cfdaa .SbrATX ));
_dfag .WriteString (_ede .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0059:\u0020\u0025\u0076\u000a",_cfdaa .SbrATY ));_dfag .WriteString (_ede .Sprintf ("\u0009\u002d\u0020N\u0075\u006d\u0062\u0065r\u004f\u0066\u0053\u0079\u006d\u0062\u006fl\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_cfdaa .NumberOfSymbolInstances ));
_dfag .WriteString (_ede .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_cfdaa .SbrATX ));return _dfag .String ();};func (_bcad *TextRegion )encodeSymbols (_gcgf _gf .BinaryWriter )(_bceg int ,_bcab error ){const _cfafe ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
_acee :=make ([]byte ,4);_ed .BigEndian .PutUint32 (_acee ,_bcad .NumberOfSymbols );if _bceg ,_bcab =_gcgf .Write (_acee );_bcab !=nil {return _bceg ,_da .Wrap (_bcab ,_cfafe ,"\u004e\u0075\u006dbe\u0072\u004f\u0066\u0053\u0079\u006d\u0062\u006f\u006c\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073");
};_gddag ,_bcab :=_ee .NewClassedPoints (_bcad ._ccbee ,_bcad ._ffbdg );if _bcab !=nil {return 0,_da .Wrap (_bcab ,_cfafe ,"");};var _dfea ,_cfbf int ;_dceb :=_fg .New ();_dceb .Init ();if _bcab =_dceb .EncodeInteger (_fg .IADT ,0);_bcab !=nil {return _bceg ,_da .Wrap (_bcab ,_cfafe ,"\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0020\u0044\u0054");
};_ggef ,_bcab :=_gddag .GroupByY ();if _bcab !=nil {return 0,_da .Wrap (_bcab ,_cfafe ,"");};for _ ,_ggbcb :=range _ggef {_fcefd :=int (_ggbcb .YAtIndex (0));_egcdf :=_fcefd -_dfea ;if _bcab =_dceb .EncodeInteger (_fg .IADT ,_egcdf );_bcab !=nil {return _bceg ,_da .Wrap (_bcab ,_cfafe ,"");
};var _egeca int ;for _dggf ,_bdbf :=range _ggbcb .IntSlice {switch _dggf {case 0:_cfgb :=int (_ggbcb .XAtIndex (_dggf ))-_cfbf ;if _bcab =_dceb .EncodeInteger (_fg .IAFS ,_cfgb );_bcab !=nil {return _bceg ,_da .Wrap (_bcab ,_cfafe ,"");};_cfbf +=_cfgb ;
_egeca =_cfbf ;default:_fgdg :=int (_ggbcb .XAtIndex (_dggf ))-_egeca ;if _bcab =_dceb .EncodeInteger (_fg .IADS ,_fgdg );_bcab !=nil {return _bceg ,_da .Wrap (_bcab ,_cfafe ,"");};_egeca +=_fgdg ;};_cbca ,_egbe :=_bcad ._cecac .Get (_bdbf );if _egbe !=nil {return _bceg ,_da .Wrap (_egbe ,_cfafe ,"");
};_dfdf ,_gaga :=_bcad ._cagf [_cbca ];if !_gaga {_dfdf ,_gaga =_bcad ._bfgac [_cbca ];if !_gaga {return _bceg ,_da .Errorf (_cfafe ,"\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027\u0025d\u0027\u0020\u0069s\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064 \u0069\u006e\u0020\u0067\u006cob\u0061\u006c\u0020\u0061\u006e\u0064\u0020\u006c\u006f\u0063\u0061\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020\u006d\u0061\u0070",_cbca );
};};if _egbe =_dceb .EncodeIAID (_bcad ._cdcff ,_dfdf );_egbe !=nil {return _bceg ,_da .Wrap (_egbe ,_cfafe ,"");};};if _bcab =_dceb .EncodeOOB (_fg .IADS );_bcab !=nil {return _bceg ,_da .Wrap (_bcab ,_cfafe ,"");};};_dceb .Final ();_ddcfb ,_bcab :=_dceb .WriteTo (_gcgf );
if _bcab !=nil {return _bceg ,_da .Wrap (_bcab ,_cfafe ,"");};_bceg +=int (_ddcfb );return _bceg ,nil ;};func (_eegc *SymbolDictionary )encodeFlags (_deed _gf .BinaryWriter )(_ffgc int ,_agbgg error ){const _gfbba ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _agbgg =_deed .SkipBits (3);_agbgg !=nil {return 0,_da .Wrap (_agbgg ,_gfbba ,"\u0065\u006d\u0070\u0074\u0079\u0020\u0062\u0069\u0074\u0073");};var _ecadf int ;if _eegc .SdrTemplate > 0{_ecadf =1;};if _agbgg =_deed .WriteBit (_ecadf );_agbgg !=nil {return _ffgc ,_da .Wrap (_agbgg ,_gfbba ,"s\u0064\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");
};_ecadf =0;if _eegc .SdTemplate > 1{_ecadf =1;};if _agbgg =_deed .WriteBit (_ecadf );_agbgg !=nil {return _ffgc ,_da .Wrap (_agbgg ,_gfbba ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_ecadf =0;if _eegc .SdTemplate ==1||_eegc .SdTemplate ==3{_ecadf =1;
};if _agbgg =_deed .WriteBit (_ecadf );_agbgg !=nil {return _ffgc ,_da .Wrap (_agbgg ,_gfbba ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_ecadf =0;if _eegc ._bbdf {_ecadf =1;};if _agbgg =_deed .WriteBit (_ecadf );_agbgg !=nil {return _ffgc ,_da .Wrap (_agbgg ,_gfbba ,"\u0063\u006f\u0064in\u0067\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0065\u0064");
};_ecadf =0;if _eegc ._dfgaf {_ecadf =1;};if _agbgg =_deed .WriteBit (_ecadf );_agbgg !=nil {return _ffgc ,_da .Wrap (_agbgg ,_gfbba ,"\u0063\u006f\u0064\u0069ng\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0075\u0073\u0065\u0064");};_ecadf =0;
if _eegc .SdHuffAggInstanceSelection {_ecadf =1;};if _agbgg =_deed .WriteBit (_ecadf );_agbgg !=nil {return _ffgc ,_da .Wrap (_agbgg ,_gfbba ,"\u0073\u0064\u0048\u0075\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074");};_ecadf =int (_eegc .SdHuffBMSizeSelection );
if _agbgg =_deed .WriteBit (_ecadf );_agbgg !=nil {return _ffgc ,_da .Wrap (_agbgg ,_gfbba ,"\u0073\u0064\u0048u\u0066\u0066\u0042\u006d\u0053\u0069\u007a\u0065");};_ecadf =0;if _eegc .SdHuffDecodeWidthSelection > 1{_ecadf =1;};if _agbgg =_deed .WriteBit (_ecadf );
_agbgg !=nil {return _ffgc ,_da .Wrap (_agbgg ,_gfbba ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_ecadf =0;switch _eegc .SdHuffDecodeWidthSelection {case 1,3:_ecadf =1;};if _agbgg =_deed .WriteBit (_ecadf );_agbgg !=nil {return _ffgc ,_da .Wrap (_agbgg ,_gfbba ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");
};_ecadf =0;if _eegc .SdHuffDecodeHeightSelection > 1{_ecadf =1;};if _agbgg =_deed .WriteBit (_ecadf );_agbgg !=nil {return _ffgc ,_da .Wrap (_agbgg ,_gfbba ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_ecadf =0;switch _eegc .SdHuffDecodeHeightSelection {case 1,3:_ecadf =1;
};if _agbgg =_deed .WriteBit (_ecadf );_agbgg !=nil {return _ffgc ,_da .Wrap (_agbgg ,_gfbba ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_ecadf =0;if _eegc .UseRefinementAggregation {_ecadf =1;};if _agbgg =_deed .WriteBit (_ecadf );
_agbgg !=nil {return _ffgc ,_da .Wrap (_agbgg ,_gfbba ,"\u0073\u0064\u0052\u0065\u0066\u0041\u0067\u0067");};_ecadf =0;if _eegc .IsHuffmanEncoded {_ecadf =1;};if _agbgg =_deed .WriteBit (_ecadf );_agbgg !=nil {return _ffgc ,_da .Wrap (_agbgg ,_gfbba ,"\u0073\u0064\u0048\u0075\u0066\u0066");
};return 2,nil ;};func (_acf *PageInformationSegment )readResolution ()error {_fbeb ,_ddf :=_acf ._ddgd .ReadBits (32);if _ddf !=nil {return _ddf ;};_acf .ResolutionX =int (_fbeb &_d .MaxInt32 );_fbeb ,_ddf =_acf ._ddgd .ReadBits (32);if _ddf !=nil {return _ddf ;
};_acf .ResolutionY =int (_fbeb &_d .MaxInt32 );return nil ;};func (_gfd *GenericRegion )decodeTemplate0a (_abg ,_cfbd ,_dace int ,_bede ,_bdg int )(_dea error ){const _abf ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0061";
var (_eaa ,_gdf int ;_cdf ,_dgbd int ;_cbdf byte ;_bcf int ;);if _abg >=1{_cbdf ,_dea =_gfd .Bitmap .GetByte (_bdg );if _dea !=nil {return _da .Wrap (_dea ,_abf ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_cdf =int (_cbdf );};if _abg >=2{_cbdf ,_dea =_gfd .Bitmap .GetByte (_bdg -_gfd .Bitmap .RowStride );
if _dea !=nil {return _da .Wrap (_dea ,_abf ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_dgbd =int (_cbdf )<<6;};_eaa =(_cdf &0xf0)|(_dgbd &0x3800);for _gfdf :=0;_gfdf < _dace ;_gfdf =_bcf {var (_gcgd byte ;_egb int ;);_bcf =_gfdf +8;if _ecad :=_cfbd -_gfdf ;
_ecad > 8{_egb =8;}else {_egb =_ecad ;};if _abg > 0{_cdf <<=8;if _bcf < _cfbd {_cbdf ,_dea =_gfd .Bitmap .GetByte (_bdg +1);if _dea !=nil {return _da .Wrap (_dea ,_abf ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_cdf |=int (_cbdf );};};if _abg > 1{_abgd :=_bdg -_gfd .Bitmap .RowStride +1;
_dgbd <<=8;if _bcf < _cfbd {_cbdf ,_dea =_gfd .Bitmap .GetByte (_abgd );if _dea !=nil {return _da .Wrap (_dea ,_abf ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_dgbd |=int (_cbdf )<<6;}else {_dgbd |=0;};};for _fecb :=0;_fecb < _egb ;_fecb ++{_baed :=uint (7-_fecb );
if _gfd ._dged {_gdf =_gfd .overrideAtTemplate0a (_eaa ,_gfdf +_fecb ,_abg ,int (_gcgd ),_fecb ,int (_baed ));_gfd ._ebe .SetIndex (int32 (_gdf ));}else {_gfd ._ebe .SetIndex (int32 (_eaa ));};var _bebg int ;_bebg ,_dea =_gfd ._ada .DecodeBit (_gfd ._ebe );
if _dea !=nil {return _da .Wrap (_dea ,_abf ,"");};_gcgd |=byte (_bebg )<<_baed ;_eaa =((_eaa &0x7bf7)<<1)|_bebg |((_cdf >>_baed )&0x10)|((_dgbd >>_baed )&0x800);};if _ade :=_gfd .Bitmap .SetByte (_bede ,_gcgd );_ade !=nil {return _da .Wrap (_ade ,_abf ,"");
};_bede ++;_bdg ++;};return nil ;};func (_aaceg *SymbolDictionary )getToExportFlags ()([]int ,error ){var (_deb int ;_ffe int32 ;_gfgad error ;_ggaf =int32 (_aaceg ._cfee +_aaceg .NumberOfNewSymbols );_agaff =make ([]int ,_ggaf ););for _ageg :=int32 (0);
_ageg < _ggaf ;_ageg +=_ffe {if _aaceg .IsHuffmanEncoded {_cgab ,_ccgdc :=_gfb .GetStandardTable (1);if _ccgdc !=nil {return nil ,_ccgdc ;};_aeba ,_ccgdc :=_cgab .Decode (_aaceg ._faad );if _ccgdc !=nil {return nil ,_ccgdc ;};_ffe =int32 (_aeba );}else {_ffe ,_gfgad =_aaceg ._fagb .DecodeInt (_aaceg ._bcgf );
if _gfgad !=nil {return nil ,_gfgad ;};};if _ffe !=0{for _fbcc :=_ageg ;_fbcc < _ageg +_ffe ;_fbcc ++{_agaff [_fbcc ]=_deb ;};};if _deb ==0{_deb =1;}else {_deb =0;};};return _agaff ,nil ;};func (_cbaba *SymbolDictionary )readRegionFlags ()error {var (_bdae uint64 ;
_feae int ;);_ ,_fdcbb :=_cbaba ._faad .ReadBits (3);if _fdcbb !=nil {return _fdcbb ;};_feae ,_fdcbb =_cbaba ._faad .ReadBit ();if _fdcbb !=nil {return _fdcbb ;};_cbaba .SdrTemplate =int8 (_feae );_bdae ,_fdcbb =_cbaba ._faad .ReadBits (2);if _fdcbb !=nil {return _fdcbb ;
};_cbaba .SdTemplate =int8 (_bdae &0xf);_feae ,_fdcbb =_cbaba ._faad .ReadBit ();if _fdcbb !=nil {return _fdcbb ;};if _feae ==1{_cbaba ._bbdf =true ;};_feae ,_fdcbb =_cbaba ._faad .ReadBit ();if _fdcbb !=nil {return _fdcbb ;};if _feae ==1{_cbaba ._dfgaf =true ;
};_feae ,_fdcbb =_cbaba ._faad .ReadBit ();if _fdcbb !=nil {return _fdcbb ;};if _feae ==1{_cbaba .SdHuffAggInstanceSelection =true ;};_feae ,_fdcbb =_cbaba ._faad .ReadBit ();if _fdcbb !=nil {return _fdcbb ;};_cbaba .SdHuffBMSizeSelection =int8 (_feae );
_bdae ,_fdcbb =_cbaba ._faad .ReadBits (2);if _fdcbb !=nil {return _fdcbb ;};_cbaba .SdHuffDecodeWidthSelection =int8 (_bdae &0xf);_bdae ,_fdcbb =_cbaba ._faad .ReadBits (2);if _fdcbb !=nil {return _fdcbb ;};_cbaba .SdHuffDecodeHeightSelection =int8 (_bdae &0xf);
_feae ,_fdcbb =_cbaba ._faad .ReadBit ();if _fdcbb !=nil {return _fdcbb ;};if _feae ==1{_cbaba .UseRefinementAggregation =true ;};_feae ,_fdcbb =_cbaba ._faad .ReadBit ();if _fdcbb !=nil {return _fdcbb ;};if _feae ==1{_cbaba .IsHuffmanEncoded =true ;};
return nil ;};func (_dff *GenericRegion )parseHeader ()(_bgab error ){_dae .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052I\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0050\u0061\u0072s\u0069\u006e\u0067\u0048\u0065\u0061\u0064e\u0072\u002e\u002e\u002e");
defer func (){if _bgab !=nil {_dae .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e]\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065r\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0077\u0069th\u0020\u0065\u0072\u0072\u006f\u0072\u002e\u0020\u0025\u0076",_bgab );
}else {_dae .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049C\u002d\u0052\u0045G\u0049\u004f\u004e]\u0020\u0050a\u0072\u0073\u0069\u006e\u0067\u0048e\u0061de\u0072\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0053\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079\u002e\u002e\u002e");
};}();var (_aba int ;_gef uint64 ;);if _bgab =_dff .RegionSegment .parseHeader ();_bgab !=nil {return _bgab ;};if _ ,_bgab =_dff ._gcgc .ReadBits (3);_bgab !=nil {return _bgab ;};_aba ,_bgab =_dff ._gcgc .ReadBit ();if _bgab !=nil {return _bgab ;};if _aba ==1{_dff .UseExtTemplates =true ;
};_aba ,_bgab =_dff ._gcgc .ReadBit ();if _bgab !=nil {return _bgab ;};if _aba ==1{_dff .IsTPGDon =true ;};_gef ,_bgab =_dff ._gcgc .ReadBits (2);if _bgab !=nil {return _bgab ;};_dff .GBTemplate =byte (_gef &0xf);_aba ,_bgab =_dff ._gcgc .ReadBit ();if _bgab !=nil {return _bgab ;
};if _aba ==1{_dff .IsMMREncoded =true ;};if !_dff .IsMMREncoded {_ebb :=1;if _dff .GBTemplate ==0{_ebb =4;if _dff .UseExtTemplates {_ebb =12;};};if _bgab =_dff .readGBAtPixels (_ebb );_bgab !=nil {return _bgab ;};};if _bgab =_dff .computeSegmentDataStructure ();
_bgab !=nil {return _bgab ;};_dae .Log .Trace ("\u0025\u0073",_dff );return nil ;};type TextRegion struct{_eafe _gf .StreamReader ;RegionInfo *RegionSegment ;SbrTemplate int8 ;SbDsOffset int8 ;DefaultPixel int8 ;CombinationOperator _ee .CombinationOperator ;
IsTransposed int8 ;ReferenceCorner int16 ;LogSBStrips int16 ;UseRefinement bool ;IsHuffmanEncoded bool ;SbHuffRSize int8 ;SbHuffRDY int8 ;SbHuffRDX int8 ;SbHuffRDHeight int8 ;SbHuffRDWidth int8 ;SbHuffDT int8 ;SbHuffDS int8 ;SbHuffFS int8 ;SbrATX []int8 ;
SbrATY []int8 ;NumberOfSymbolInstances uint32 ;_fbge int64 ;SbStrips int8 ;NumberOfSymbols uint32 ;RegionBitmap *_ee .Bitmap ;Symbols []*_ee .Bitmap ;_adabd *_ef .Decoder ;_agdf *GenericRefinementRegion ;_agebg *_ef .DecoderStats ;_aed *_ef .DecoderStats ;
_becd *_ef .DecoderStats ;_cgdg *_ef .DecoderStats ;_geeg *_ef .DecoderStats ;_bdfe *_ef .DecoderStats ;_gaec *_ef .DecoderStats ;_cgaa *_ef .DecoderStats ;_cgbc *_ef .DecoderStats ;_ccgcf *_ef .DecoderStats ;_bgcc *_ef .DecoderStats ;_bggde int8 ;_ccag *_gfb .FixedSizeTable ;
Header *Header ;_bebb _gfb .Tabler ;_efec _gfb .Tabler ;_acag _gfb .Tabler ;_befe _gfb .Tabler ;_ceed _gfb .Tabler ;_fbdgd _gfb .Tabler ;_becda _gfb .Tabler ;_bedf _gfb .Tabler ;_cagf ,_bfgac map[int ]int ;_ffbdg []int ;_ccbee *_ee .Points ;_bcfcc *_ee .Bitmaps ;
_cecac *_gg .IntSlice ;_aefd ,_cdcff int ;_eecd *_ee .Boxes ;};func (_agbg *HalftoneRegion )GetPatterns ()([]*_ee .Bitmap ,error ){var (_afe []*_ee .Bitmap ;_dbda error ;);for _ ,_aebg :=range _agbg ._bbef .RTSegments {var _gdbbc Segmenter ;_gdbbc ,_dbda =_aebg .GetSegmentData ();
if _dbda !=nil {_dae .Log .Debug ("\u0047e\u0074\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061 \u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025v",_dbda );return nil ,_dbda ;};_fbfgc ,_dbeb :=_gdbbc .(*PatternDictionary );if !_dbeb {_dbda =_ede .Errorf ("\u0072e\u006c\u0061t\u0065\u0064\u0020\u0073e\u0067\u006d\u0065n\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0070at\u0074\u0065\u0072n\u0020\u0064i\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u003a \u0025\u0054",_gdbbc );
return nil ,_dbda ;};var _cbab []*_ee .Bitmap ;_cbab ,_dbda =_fbfgc .GetDictionary ();if _dbda !=nil {_dae .Log .Debug ("\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_dbda );
return nil ,_dbda ;};_afe =append (_afe ,_cbab ...);};return _afe ,nil ;};func (_fbae *PageInformationSegment )Encode (w _gf .BinaryWriter )(_deabg int ,_ebfa error ){const _dbea ="\u0050\u0061g\u0065\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u002e\u0045\u006eco\u0064\u0065";
_cbdfg :=make ([]byte ,4);_ed .BigEndian .PutUint32 (_cbdfg ,uint32 (_fbae .PageBMWidth ));_deabg ,_ebfa =w .Write (_cbdfg );if _ebfa !=nil {return _deabg ,_da .Wrap (_ebfa ,_dbea ,"\u0077\u0069\u0064t\u0068");};_ed .BigEndian .PutUint32 (_cbdfg ,uint32 (_fbae .PageBMHeight ));
var _beeg int ;_beeg ,_ebfa =w .Write (_cbdfg );if _ebfa !=nil {return _beeg +_deabg ,_da .Wrap (_ebfa ,_dbea ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_deabg +=_beeg ;_ed .BigEndian .PutUint32 (_cbdfg ,uint32 (_fbae .ResolutionX ));_beeg ,_ebfa =w .Write (_cbdfg );
if _ebfa !=nil {return _beeg +_deabg ,_da .Wrap (_ebfa ,_dbea ,"\u0078\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_deabg +=_beeg ;_ed .BigEndian .PutUint32 (_cbdfg ,uint32 (_fbae .ResolutionY ));if _beeg ,_ebfa =w .Write (_cbdfg );
_ebfa !=nil {return _beeg +_deabg ,_da .Wrap (_ebfa ,_dbea ,"\u0079\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_deabg +=_beeg ;if _ebfa =_fbae .encodeFlags (w );_ebfa !=nil {return _deabg ,_da .Wrap (_ebfa ,_dbea ,"");};_deabg ++;
if _beeg ,_ebfa =_fbae .encodeStripingInformation (w );_ebfa !=nil {return _deabg ,_da .Wrap (_ebfa ,_dbea ,"");};_deabg +=_beeg ;return _deabg ,nil ;};func (_eggee *Header )writeSegmentNumber (_bbee _gf .BinaryWriter )(_cfag int ,_becgf error ){_aeagf :=make ([]byte ,4);
_ed .BigEndian .PutUint32 (_aeagf ,_eggee .SegmentNumber );if _cfag ,_becgf =_bbee .Write (_aeagf );_becgf !=nil {return 0,_da .Wrap (_becgf ,"\u0048e\u0061\u0064\u0065\u0072.\u0077\u0072\u0069\u0074\u0065S\u0065g\u006de\u006e\u0074\u004e\u0075\u006d\u0062\u0065r","");
};return _cfag ,nil ;};func (_fdd *Header )readSegmentNumber (_gfdg _gf .StreamReader )error {const _fde ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";_ecde :=make ([]byte ,4);_ ,_fee :=_gfdg .Read (_ecde );
if _fee !=nil {return _da .Wrap (_fee ,_fde ,"");};_fdd .SegmentNumber =_ed .BigEndian .Uint32 (_ecde );return nil ;};func (_eebg *GenericRegion )GetRegionInfo ()*RegionSegment {return _eebg .RegionSegment };func (_eegd *SymbolDictionary )setCodingStatistics ()error {if _eegd ._cdab ==nil {_eegd ._cdab =_ef .NewStats (512,1);
};if _eegd ._ffbd ==nil {_eegd ._ffbd =_ef .NewStats (512,1);};if _eegd ._addc ==nil {_eegd ._addc =_ef .NewStats (512,1);};if _eegd ._fgfbb ==nil {_eegd ._fgfbb =_ef .NewStats (512,1);};if _eegd ._bcgf ==nil {_eegd ._bcgf =_ef .NewStats (512,1);};if _eegd .UseRefinementAggregation &&_eegd ._dggb ==nil {_eegd ._dggb =_ef .NewStats (1<<uint (_eegd ._cfac ),1);
_eegd ._aab =_ef .NewStats (512,1);_eegd ._acge =_ef .NewStats (512,1);};if _eegd ._cfed ==nil {_eegd ._cfed =_ef .NewStats (65536,1);};if _eegd ._fagb ==nil {var _bdaa error ;_eegd ._fagb ,_bdaa =_ef .New (_eegd ._faad );if _bdaa !=nil {return _bdaa ;
};};return nil ;};func (_dcc *PageInformationSegment )readCombinationOperator ()error {_bfba ,_cadcg :=_dcc ._ddgd .ReadBits (2);if _cadcg !=nil {return _cadcg ;};_dcc ._cfda =_ee .CombinationOperator (int (_bfba ));return nil ;};func (_agd *GenericRefinementRegion )setParameters (_gga *_ef .DecoderStats ,_edea *_ef .Decoder ,_cbd int8 ,_bgc ,_gda uint32 ,_gdg *_ee .Bitmap ,_ccgb ,_badf int32 ,_cgaf bool ,_dcg []int8 ,_cef []int8 ){_dae .Log .Trace ("\u005b\u0047\u0045NE\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052E\u0047I\u004fN\u005d \u0073\u0065\u0074\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073");
if _gga !=nil {_agd ._cc =_gga ;};if _edea !=nil {_agd ._dc =_edea ;};_agd .TemplateID =_cbd ;_agd .RegionInfo .BitmapWidth =_bgc ;_agd .RegionInfo .BitmapHeight =_gda ;_agd .ReferenceBitmap =_gdg ;_agd .ReferenceDX =_ccgb ;_agd .ReferenceDY =_badf ;_agd .IsTPGROn =_cgaf ;
_agd .GrAtX =_dcg ;_agd .GrAtY =_cef ;_agd .RegionBitmap =nil ;_dae .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073 f\u0069\u006ei\u0073\u0068\u0065\u0064\u002e\u0020\u0025\u0073",_agd );
};func (_cbdd *GenericRegion )readGBAtPixels (_ged int )error {const _cbac ="\u0072\u0065\u0061\u0064\u0047\u0042\u0041\u0074\u0050i\u0078\u0065\u006c\u0073";_cbdd .GBAtX =make ([]int8 ,_ged );_cbdd .GBAtY =make ([]int8 ,_ged );for _cdd :=0;_cdd < _ged ;
_cdd ++{_agfa ,_cde :=_cbdd ._gcgc .ReadByte ();if _cde !=nil {return _da .Wrapf (_cde ,_cbac ,"\u0058\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_cdd );};_cbdd .GBAtX [_cdd ]=int8 (_agfa );_agfa ,_cde =_cbdd ._gcgc .ReadByte ();if _cde !=nil {return _da .Wrapf (_cde ,_cbac ,"\u0059\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_cdd );
};_cbdd .GBAtY [_cdd ]=int8 (_agfa );};return nil ;};func (_dbde *SymbolDictionary )huffDecodeBmSize ()(int64 ,error ){if _dbde ._beg ==nil {var (_degc int ;_bdff error ;);if _dbde .SdHuffDecodeHeightSelection ==3{_degc ++;};if _dbde .SdHuffDecodeWidthSelection ==3{_degc ++;
};_dbde ._beg ,_bdff =_dbde .getUserTable (_degc );if _bdff !=nil {return 0,_bdff ;};};return _dbde ._beg .Decode (_dbde ._faad );};var _ templater =&template0 {};func (_abe *template0 )setIndex (_ffbg *_ef .DecoderStats ){_ffbg .SetIndex (0x100)};func NewGenericRegion (r _gf .StreamReader )*GenericRegion {return &GenericRegion {RegionSegment :NewRegionSegment (r ),_gcgc :r };
};func (_fbg *SymbolDictionary )checkInput ()error {if _fbg .SdHuffDecodeHeightSelection ==2{_dae .Log .Debug ("\u0053\u0079\u006d\u0062\u006fl\u0020\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u0053e\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0070\u0065r\u006d\u0069\u0074\u0074\u0065\u0064",_fbg .SdHuffDecodeHeightSelection );
};if _fbg .SdHuffDecodeWidthSelection ==2{_dae .Log .Debug ("\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0057\u0069\u0064t\u0068\u0020\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061l\u0075\u0065\u0020\u006e\u006f\u0074 \u0070\u0065r\u006d\u0069t\u0074e\u0064",_fbg .SdHuffDecodeWidthSelection );
};if _fbg .IsHuffmanEncoded {if _fbg .SdTemplate !=0{_dae .Log .Debug ("\u0053\u0044T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e \u0030\u0029",_fbg .SdTemplate );
};if !_fbg .UseRefinementAggregation {if !_fbg .UseRefinementAggregation {if _fbg ._bbdf {_dae .Log .Debug ("\u0049\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074ex\u0074\u0052\u0065\u0074\u0061\u0069n\u0065\u0064\u0020\u003d\u0020\u0074\u0072\u0075\u0065\u0020\u0028\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0066\u0061\u006cs\u0065\u0029");
_fbg ._bbdf =false ;};if _fbg ._dfgaf {_dae .Log .Debug ("\u0069s\u0043\u006fd\u0069\u006e\u0067\u0043o\u006e\u0074\u0065x\u0074\u0055\u0073\u0065\u0064\u0020\u003d\u0020\u0074ru\u0065\u0020\u0028s\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020f\u0061\u006cs\u0065\u0029");
_fbg ._dfgaf =false ;};};};}else {if _fbg .SdHuffBMSizeSelection !=0{_dae .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066B\u004d\u0053\u0069\u007a\u0065\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_fbg .SdHuffBMSizeSelection =0;};if _fbg .SdHuffDecodeWidthSelection !=0{_dae .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068\u0053\u0065\u006c\u0065\u0063\u0074\u0069o\u006e\u0020\u0073\u0068\u006fu\u006c\u0064 \u0062\u0065\u0020\u0030");
_fbg .SdHuffDecodeWidthSelection =0;};if _fbg .SdHuffDecodeHeightSelection !=0{_dae .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0048e\u0069\u0067\u0068\u0074\u0053\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_fbg .SdHuffDecodeHeightSelection =0;};};if !_fbg .UseRefinementAggregation {if _fbg .SdrTemplate !=0{_dae .Log .Debug ("\u0053\u0044\u0052\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u003d\u0020\u0025\u0064\u0020\u0028s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_fbg .SdrTemplate );
_fbg .SdrTemplate =0;};};if !_fbg .IsHuffmanEncoded ||!_fbg .UseRefinementAggregation {if _fbg .SdHuffAggInstanceSelection {_dae .Log .Debug ("\u0053d\u0048\u0075f\u0066\u0041\u0067g\u0049\u006e\u0073\u0074\u0061\u006e\u0063e\u0053\u0065\u006c\u0065\u0063\u0074i\u006f\u006e\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_fbg .SdHuffAggInstanceSelection );
};};return nil ;};func (_gfda *TextRegion )createRegionBitmap ()error {_gfda .RegionBitmap =_ee .New (int (_gfda .RegionInfo .BitmapWidth ),int (_gfda .RegionInfo .BitmapHeight ));if _gfda .DefaultPixel !=0{_gfda .RegionBitmap .SetDefaultPixel ();};return nil ;
};func (_bbefc *TextRegion )decodeRdh ()(int64 ,error ){const _faaaf ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064h";if _bbefc .IsHuffmanEncoded {if _bbefc .SbHuffRDHeight ==3{if _bbefc ._ceed ==nil {var (_bbeg int ;_cada error ;);if _bbefc .SbHuffFS ==3{_bbeg ++;
};if _bbefc .SbHuffDS ==3{_bbeg ++;};if _bbefc .SbHuffDT ==3{_bbeg ++;};if _bbefc .SbHuffRDWidth ==3{_bbeg ++;};_bbefc ._ceed ,_cada =_bbefc .getUserTable (_bbeg );if _cada !=nil {return 0,_da .Wrap (_cada ,_faaaf ,"");};};return _bbefc ._ceed .Decode (_bbefc ._eafe );
};_fgea ,_fbea :=_gfb .GetStandardTable (14+int (_bbefc .SbHuffRDHeight ));if _fbea !=nil {return 0,_da .Wrap (_fbea ,_faaaf ,"");};return _fgea .Decode (_bbefc ._eafe );};_cdde ,_caac :=_bbefc ._adabd .DecodeInt (_bbefc ._gaec );if _caac !=nil {return 0,_da .Wrap (_caac ,_faaaf ,"");
};return int64 (_cdde ),nil ;};func (_ceca *TableSegment )StreamReader ()_gf .StreamReader {return _ceca ._bfgb };func (_bdaec *TextRegion )decodeDT ()(_gegc int64 ,_adec error ){if _bdaec .IsHuffmanEncoded {if _bdaec .SbHuffDT ==3{_gegc ,_adec =_bdaec ._acag .Decode (_bdaec ._eafe );
if _adec !=nil {return 0,_adec ;};}else {var _gdec _gfb .Tabler ;_gdec ,_adec =_gfb .GetStandardTable (11+int (_bdaec .SbHuffDT ));if _adec !=nil {return 0,_adec ;};_gegc ,_adec =_gdec .Decode (_bdaec ._eafe );if _adec !=nil {return 0,_adec ;};};}else {var _fbcaa int32 ;
_fbcaa ,_adec =_bdaec ._adabd .DecodeInt (_bdaec ._agebg );if _adec !=nil {return ;};_gegc =int64 (_fbcaa );};_gegc *=int64 (_bdaec .SbStrips );return _gegc ,nil ;};func (_gdff *PageInformationSegment )parseHeader ()(_eafb error ){_dae .Log .Trace ("\u005b\u0050\u0061\u0067\u0065I\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067m\u0065\u006e\u0074\u005d\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u002e\u002e");
defer func (){var _egda ="[\u0050\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072m\u0061\u0074\u0069\u006f\u006e\u0053\u0065gm\u0065\u006e\u0074\u005d \u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065ad\u0065\u0072 \u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064";
if _eafb !=nil {_egda +="\u0020\u0077\u0069t\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u0020"+_eafb .Error ();}else {_egda +="\u0020\u0073\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079";};_dae .Log .Trace (_egda );}();if _eafb =_gdff .readWidthAndHeight ();
_eafb !=nil {return _eafb ;};if _eafb =_gdff .readResolution ();_eafb !=nil {return _eafb ;};_ ,_eafb =_gdff ._ddgd .ReadBit ();if _eafb !=nil {return _eafb ;};if _eafb =_gdff .readCombinationOperatorOverrideAllowed ();_eafb !=nil {return _eafb ;};if _eafb =_gdff .readRequiresAuxiliaryBuffer ();
_eafb !=nil {return _eafb ;};if _eafb =_gdff .readCombinationOperator ();_eafb !=nil {return _eafb ;};if _eafb =_gdff .readDefaultPixelValue ();_eafb !=nil {return _eafb ;};if _eafb =_gdff .readContainsRefinement ();_eafb !=nil {return _eafb ;};if _eafb =_gdff .readIsLossless ();
_eafb !=nil {return _eafb ;};if _eafb =_gdff .readIsStriped ();_eafb !=nil {return _eafb ;};if _eafb =_gdff .readMaxStripeSize ();_eafb !=nil {return _eafb ;};if _eafb =_gdff .checkInput ();_eafb !=nil {return _eafb ;};_dae .Log .Trace ("\u0025\u0073",_gdff );
return nil ;};func (_fafg *RegionSegment )Encode (w _gf .BinaryWriter )(_fdbd int ,_dggc error ){const _bgae ="R\u0065g\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065n\u0074\u002e\u0045\u006eco\u0064\u0065";_afae :=make ([]byte ,4);_ed .BigEndian .PutUint32 (_afae ,_fafg .BitmapWidth );
_fdbd ,_dggc =w .Write (_afae );if _dggc !=nil {return 0,_da .Wrap (_dggc ,_bgae ,"\u0057\u0069\u0064t\u0068");};_ed .BigEndian .PutUint32 (_afae ,_fafg .BitmapHeight );var _fcdb int ;_fcdb ,_dggc =w .Write (_afae );if _dggc !=nil {return 0,_da .Wrap (_dggc ,_bgae ,"\u0048\u0065\u0069\u0067\u0068\u0074");
};_fdbd +=_fcdb ;_ed .BigEndian .PutUint32 (_afae ,_fafg .XLocation );_fcdb ,_dggc =w .Write (_afae );if _dggc !=nil {return 0,_da .Wrap (_dggc ,_bgae ,"\u0058L\u006f\u0063\u0061\u0074\u0069\u006fn");};_fdbd +=_fcdb ;_ed .BigEndian .PutUint32 (_afae ,_fafg .YLocation );
_fcdb ,_dggc =w .Write (_afae );if _dggc !=nil {return 0,_da .Wrap (_dggc ,_bgae ,"\u0059L\u006f\u0063\u0061\u0074\u0069\u006fn");};_fdbd +=_fcdb ;if _dggc =w .WriteByte (byte (_fafg .CombinaionOperator )&0x07);_dggc !=nil {return 0,_da .Wrap (_dggc ,_bgae ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");
};_fdbd ++;return _fdbd ,nil ;};func (_fbcg *SymbolDictionary )GetDictionary ()([]*_ee .Bitmap ,error ){_dae .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c-\u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){_dae .Log .Trace ("\u005b\u0053\u0059M\u0042\u004f\u004c\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
_dae .Log .Trace ("\u005b\u0053Y\u004d\u0042\u004f\u004c\u002dD\u0049\u0043\u0054\u0049\u004fN\u0041\u0052\u0059\u005d\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020\u000a\u0045\u0078\u003a\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u000a\u006e\u0065\u0077\u003a\u0027\u0025\u0073\u0027",_fbcg ._adbgd ,_fbcg ._fafd );
}();if _fbcg ._adbgd ==nil {var _gcba error ;if _fbcg .UseRefinementAggregation {_fbcg ._cfac =_fbcg .getSbSymCodeLen ();};if !_fbcg .IsHuffmanEncoded {if _gcba =_fbcg .setCodingStatistics ();_gcba !=nil {return nil ,_gcba ;};};_fbcg ._fafd =make ([]*_ee .Bitmap ,_fbcg .NumberOfNewSymbols );
var _ebbgf []int ;if _fbcg .IsHuffmanEncoded &&!_fbcg .UseRefinementAggregation {_ebbgf =make ([]int ,_fbcg .NumberOfNewSymbols );};if _gcba =_fbcg .setSymbolsArray ();_gcba !=nil {return nil ,_gcba ;};var _ddcd ,_eccd int64 ;_fbcg ._ebfb =0;for _fbcg ._ebfb < _fbcg .NumberOfNewSymbols {_eccd ,_gcba =_fbcg .decodeHeightClassDeltaHeight ();
if _gcba !=nil {return nil ,_gcba ;};_ddcd +=_eccd ;var _cbabb ,_aeae uint32 ;_cagd :=int64 (_fbcg ._ebfb );for {var _egf int64 ;_egf ,_gcba =_fbcg .decodeDifferenceWidth ();if _c .Is (_gcba ,_a .ErrOOB ){break ;};if _gcba !=nil {return nil ,_gcba ;};if _fbcg ._ebfb >=_fbcg .NumberOfNewSymbols {break ;
};_cbabb +=uint32 (_egf );_aeae +=_cbabb ;if !_fbcg .IsHuffmanEncoded ||_fbcg .UseRefinementAggregation {if !_fbcg .UseRefinementAggregation {_gcba =_fbcg .decodeDirectlyThroughGenericRegion (_cbabb ,uint32 (_ddcd ));if _gcba !=nil {return nil ,_gcba ;
};}else {_gcba =_fbcg .decodeAggregate (_cbabb ,uint32 (_ddcd ));if _gcba !=nil {return nil ,_gcba ;};};}else if _fbcg .IsHuffmanEncoded &&!_fbcg .UseRefinementAggregation {_ebbgf [_fbcg ._ebfb ]=int (_cbabb );};_fbcg ._ebfb ++;};if _fbcg .IsHuffmanEncoded &&!_fbcg .UseRefinementAggregation {var _dfff int64 ;
if _fbcg .SdHuffBMSizeSelection ==0{var _edaec _gfb .Tabler ;_edaec ,_gcba =_gfb .GetStandardTable (1);if _gcba !=nil {return nil ,_gcba ;};_dfff ,_gcba =_edaec .Decode (_fbcg ._faad );if _gcba !=nil {return nil ,_gcba ;};}else {_dfff ,_gcba =_fbcg .huffDecodeBmSize ();
if _gcba !=nil {return nil ,_gcba ;};};_fbcg ._faad .Align ();var _geec *_ee .Bitmap ;_geec ,_gcba =_fbcg .decodeHeightClassCollectiveBitmap (_dfff ,uint32 (_ddcd ),_aeae );if _gcba !=nil {return nil ,_gcba ;};_gcba =_fbcg .decodeHeightClassBitmap (_geec ,_cagd ,int (_ddcd ),_ebbgf );
if _gcba !=nil {return nil ,_gcba ;};};};_adca ,_gcba :=_fbcg .getToExportFlags ();if _gcba !=nil {return nil ,_gcba ;};_fbcg .setExportedSymbols (_adca );};return _fbcg ._adbgd ,nil ;};func (_ecebf *TextRegion )decodeRI ()(int64 ,error ){if !_ecebf .UseRefinement {return 0,nil ;
};if _ecebf .IsHuffmanEncoded {_dbfgd ,_dddf :=_ecebf ._eafe .ReadBit ();return int64 (_dbfgd ),_dddf ;};_ceff ,_adea :=_ecebf ._adabd .DecodeInt (_ecebf ._geeg );return int64 (_ceff ),_adea ;};func (_bgcec *TextRegion )readRegionFlags ()error {var (_eafc int ;
_aeab uint64 ;_dbdg error ;);_eafc ,_dbdg =_bgcec ._eafe .ReadBit ();if _dbdg !=nil {return _dbdg ;};_bgcec .SbrTemplate =int8 (_eafc );_aeab ,_dbdg =_bgcec ._eafe .ReadBits (5);if _dbdg !=nil {return _dbdg ;};_bgcec .SbDsOffset =int8 (_aeab );if _bgcec .SbDsOffset > 0x0f{_bgcec .SbDsOffset -=0x20;
};_eafc ,_dbdg =_bgcec ._eafe .ReadBit ();if _dbdg !=nil {return _dbdg ;};_bgcec .DefaultPixel =int8 (_eafc );_aeab ,_dbdg =_bgcec ._eafe .ReadBits (2);if _dbdg !=nil {return _dbdg ;};_bgcec .CombinationOperator =_ee .CombinationOperator (int (_aeab )&0x3);
_eafc ,_dbdg =_bgcec ._eafe .ReadBit ();if _dbdg !=nil {return _dbdg ;};_bgcec .IsTransposed =int8 (_eafc );_aeab ,_dbdg =_bgcec ._eafe .ReadBits (2);if _dbdg !=nil {return _dbdg ;};_bgcec .ReferenceCorner =int16 (_aeab )&0x3;_aeab ,_dbdg =_bgcec ._eafe .ReadBits (2);
if _dbdg !=nil {return _dbdg ;};_bgcec .LogSBStrips =int16 (_aeab )&0x3;_bgcec .SbStrips =1<<uint (_bgcec .LogSBStrips );_eafc ,_dbdg =_bgcec ._eafe .ReadBit ();if _dbdg !=nil {return _dbdg ;};if _eafc ==1{_bgcec .UseRefinement =true ;};_eafc ,_dbdg =_bgcec ._eafe .ReadBit ();
if _dbdg !=nil {return _dbdg ;};if _eafc ==1{_bgcec .IsHuffmanEncoded =true ;};return nil ;};func (_agg *GenericRegion )decodeTemplate0b (_dfef ,_caee ,_bee int ,_gaf ,_bdee int )(_dda error ){const _edfg ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0062";
var (_cbdb ,_aaedc int ;_gcf ,_cadc int ;_dfeb byte ;_eaac int ;);if _dfef >=1{_dfeb ,_dda =_agg .Bitmap .GetByte (_bdee );if _dda !=nil {return _da .Wrap (_dda ,_edfg ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_gcf =int (_dfeb );};if _dfef >=2{_dfeb ,_dda =_agg .Bitmap .GetByte (_bdee -_agg .Bitmap .RowStride );
if _dda !=nil {return _da .Wrap (_dda ,_edfg ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_cadc =int (_dfeb )<<6;};_cbdb =(_gcf &0xf0)|(_cadc &0x3800);for _bfb :=0;_bfb < _bee ;_bfb =_eaac {var (_dfgb byte ;_deab int ;);_eaac =_bfb +8;if _dfba :=_caee -_bfb ;
_dfba > 8{_deab =8;}else {_deab =_dfba ;};if _dfef > 0{_gcf <<=8;if _eaac < _caee {_dfeb ,_dda =_agg .Bitmap .GetByte (_bdee +1);if _dda !=nil {return _da .Wrap (_dda ,_edfg ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_gcf |=int (_dfeb );};};
if _dfef > 1{_cadc <<=8;if _eaac < _caee {_dfeb ,_dda =_agg .Bitmap .GetByte (_bdee -_agg .Bitmap .RowStride +1);if _dda !=nil {return _da .Wrap (_dda ,_edfg ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_cadc |=int (_dfeb )<<6;};};for _ceeg :=0;
_ceeg < _deab ;_ceeg ++{_fag :=uint (7-_ceeg );if _agg ._dged {_aaedc =_agg .overrideAtTemplate0b (_cbdb ,_bfb +_ceeg ,_dfef ,int (_dfgb ),_ceeg ,int (_fag ));_agg ._ebe .SetIndex (int32 (_aaedc ));}else {_agg ._ebe .SetIndex (int32 (_cbdb ));};var _bbe int ;
_bbe ,_dda =_agg ._ada .DecodeBit (_agg ._ebe );if _dda !=nil {return _da .Wrap (_dda ,_edfg ,"");};_dfgb |=byte (_bbe <<_fag );_cbdb =((_cbdb &0x7bf7)<<1)|_bbe |((_gcf >>_fag )&0x10)|((_cadc >>_fag )&0x800);};if _acd :=_agg .Bitmap .SetByte (_gaf ,_dfgb );
_acd !=nil {return _da .Wrap (_acd ,_edfg ,"");};_gaf ++;_bdee ++;};return nil ;};func (_dggg *SymbolDictionary )InitEncode (symbols *_ee .Bitmaps ,symbolList []int ,symbolMap map[int ]int ,unborderSymbols bool )error {const _edb ="S\u0079\u006d\u0062\u006f\u006c\u0044i\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002eI\u006e\u0069\u0074E\u006ec\u006f\u0064\u0065";
_dggg .SdATX =[]int8 {3,-3,2,-2};_dggg .SdATY =[]int8 {-1,-1,-2,-2};_dggg ._gdefg =symbols ;_dggg ._ffg =make ([]int ,len (symbolList ));copy (_dggg ._ffg ,symbolList );if len (_dggg ._ffg )!=_dggg ._gdefg .Size (){return _da .Error (_edb ,"s\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0061\u006e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u004ci\u0073\u0074\u0020\u006f\u0066\u0020\u0064\u0069\u0066\u0066er\u0065\u006e\u0074 \u0073i\u007a\u0065");
};_dggg .NumberOfNewSymbols =uint32 (symbols .Size ());_dggg .NumberOfExportedSymbols =uint32 (symbols .Size ());_dggg ._bcfc =symbolMap ;_dggg ._bfgg =unborderSymbols ;return nil ;};func (_fgad *SymbolDictionary )setRefinementAtPixels ()error {if !_fgad .UseRefinementAggregation ||_fgad .SdrTemplate !=0{return nil ;
};if _cabg :=_fgad .readRefinementAtPixels (2);_cabg !=nil {return _cabg ;};return nil ;};func (_bd *GenericRefinementRegion )updateOverride ()error {if _bd .GrAtX ==nil ||_bd .GrAtY ==nil {return _g .New ("\u0041\u0054\u0020\u0070\u0069\u0078\u0065\u006c\u0073\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");
};if len (_bd .GrAtX )!=len (_bd .GrAtY ){return _g .New ("A\u0054\u0020\u0070\u0069xe\u006c \u0069\u006e\u0063\u006f\u006es\u0069\u0073\u0074\u0065\u006e\u0074");};_bd ._aa =make ([]bool ,len (_bd .GrAtX ));switch _bd .TemplateID {case 0:if _bd .GrAtX [0]!=-1&&_bd .GrAtY [0]!=-1{_bd ._aa [0]=true ;
_bd ._bac =true ;};if _bd .GrAtX [1]!=-1&&_bd .GrAtY [1]!=-1{_bd ._aa [1]=true ;_bd ._bac =true ;};case 1:_bd ._bac =false ;};return nil ;};func (_gfga *GenericRefinementRegion )overrideAtTemplate0 (_eef ,_dbdf ,_dca ,_dbad ,_gcb int )int {if _gfga ._aa [0]{_eef &=0xfff7;
if _gfga .GrAtY [0]==0&&int (_gfga .GrAtX [0])>=-_gcb {_eef |=(_dbad >>uint (7-(_gcb +int (_gfga .GrAtX [0])))&0x1)<<3;}else {_eef |=_gfga .getPixel (_gfga .RegionBitmap ,_dbdf +int (_gfga .GrAtX [0]),_dca +int (_gfga .GrAtY [0]))<<3;};};if _gfga ._aa [1]{_eef &=0xefff;
if _gfga .GrAtY [1]==0&&int (_gfga .GrAtX [1])>=-_gcb {_eef |=(_dbad >>uint (7-(_gcb +int (_gfga .GrAtX [1])))&0x1)<<12;}else {_eef |=_gfga .getPixel (_gfga .ReferenceBitmap ,_dbdf +int (_gfga .GrAtX [1]),_dca +int (_gfga .GrAtY [1]));};};return _eef ;
};func (_eefc *Header )subInputReader ()(_gf .StreamReader ,error ){return _gf .NewSubstreamReader (_eefc .Reader ,_eefc .SegmentDataStartOffset ,_eefc .SegmentDataLength );};func (_edc *Header )referenceSize ()uint {switch {case _edc .SegmentNumber <=255:return 1;
case _edc .SegmentNumber <=65535:return 2;default:return 4;};};type PatternDictionary struct{_aaad _gf .StreamReader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;GBAtX []int8 ;GBAtY []int8 ;IsMMREncoded bool ;HDTemplate byte ;
HdpWidth byte ;HdpHeight byte ;Patterns []*_ee .Bitmap ;GrayMax uint32 ;};func (_ace *GenericRegion )decodeSLTP ()(int ,error ){switch _ace .GBTemplate {case 0:_ace ._ebe .SetIndex (0x9B25);case 1:_ace ._ebe .SetIndex (0x795);case 2:_ace ._ebe .SetIndex (0xE5);
case 3:_ace ._ebe .SetIndex (0x195);};return _ace ._ada .DecodeBit (_ace ._ebe );};func (_cbb *SymbolDictionary )encodeNumSyms (_bgeb _gf .BinaryWriter )(_ddcf int ,_efdb error ){const _gbgb ="\u0065\u006e\u0063\u006f\u0064\u0065\u004e\u0075\u006d\u0053\u0079\u006d\u0073";
_bcgd :=make ([]byte ,4);_ed .BigEndian .PutUint32 (_bcgd ,_cbb .NumberOfExportedSymbols );if _ddcf ,_efdb =_bgeb .Write (_bcgd );_efdb !=nil {return _ddcf ,_da .Wrap (_efdb ,_gbgb ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};_ed .BigEndian .PutUint32 (_bcgd ,_cbb .NumberOfNewSymbols );_gdee ,_efdb :=_bgeb .Write (_bcgd );if _efdb !=nil {return _ddcf ,_da .Wrap (_efdb ,_gbgb ,"n\u0065\u0077\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};return _ddcf +_gdee ,nil ;};func (_dgff *SymbolDictionary )decodeHeightClassBitmap (_cdgg *_ee .Bitmap ,_dgbb int64 ,_eefeg int ,_egdg []int )error {for _cabc :=_dgbb ;
_cabc < int64 (_dgff ._ebfb );_cabc ++{var _aag int ;for _fede :=_dgbb ;_fede <=_cabc -1;_fede ++{_aag +=_egdg [_fede ];};_ebfbd :=_e .Rect (_aag ,0,_aag +_egdg [_cabc ],_eefeg );_gfde ,_bbdg :=_ee .Extract (_ebfbd ,_cdgg );if _bbdg !=nil {return _bbdg ;
};_dgff ._fafd [_cabc ]=_gfde ;_dgff ._gbda =append (_dgff ._gbda ,_gfde );};return nil ;};func (_fdgc *PatternDictionary )parseHeader ()error {_dae .Log .Trace ("\u005b\u0050\u0041\u0054\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054I\u004f\u004e\u0041\u0052\u0059\u005d[\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d\u0020b\u0065\u0067\u0069\u006e");
defer func (){_dae .Log .Trace ("\u005b\u0050\u0041T\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u005b\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
}();_ ,_eadb :=_fdgc ._aaad .ReadBits (5);if _eadb !=nil {return _eadb ;};if _eadb =_fdgc .readTemplate ();_eadb !=nil {return _eadb ;};if _eadb =_fdgc .readIsMMREncoded ();_eadb !=nil {return _eadb ;};if _eadb =_fdgc .readPatternWidthAndHeight ();_eadb !=nil {return _eadb ;
};if _eadb =_fdgc .readGrayMax ();_eadb !=nil {return _eadb ;};if _eadb =_fdgc .computeSegmentDataStructure ();_eadb !=nil {return _eadb ;};return _fdgc .checkInput ();};func (_agafc *TextRegion )decodeRdw ()(int64 ,error ){const _gacae ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064w";
if _agafc .IsHuffmanEncoded {if _agafc .SbHuffRDWidth ==3{if _agafc ._befe ==nil {var (_adaff int ;_aaaf error ;);if _agafc .SbHuffFS ==3{_adaff ++;};if _agafc .SbHuffDS ==3{_adaff ++;};if _agafc .SbHuffDT ==3{_adaff ++;};_agafc ._befe ,_aaaf =_agafc .getUserTable (_adaff );
if _aaaf !=nil {return 0,_da .Wrap (_aaaf ,_gacae ,"");};};return _agafc ._befe .Decode (_agafc ._eafe );};_gcggd ,_fcbfa :=_gfb .GetStandardTable (14+int (_agafc .SbHuffRDWidth ));if _fcbfa !=nil {return 0,_da .Wrap (_fcbfa ,_gacae ,"");};return _gcggd .Decode (_agafc ._eafe );
};_fced ,_fcc :=_agafc ._adabd .DecodeInt (_agafc ._bdfe );if _fcc !=nil {return 0,_da .Wrap (_fcc ,_gacae ,"");};return int64 (_fced ),nil ;};func (_gefad *SymbolDictionary )String ()string {_gfgfg :=&_dg .Builder {};_gfgfg .WriteString ("\n\u005b\u0053\u0059\u004dBO\u004c-\u0044\u0049\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u000a");
_gfgfg .WriteString (_ede .Sprintf ("\u0009-\u0020S\u0064\u0072\u0054\u0065\u006dp\u006c\u0061t\u0065\u0020\u0025\u0076\u000a",_gefad .SdrTemplate ));_gfgfg .WriteString (_ede .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0025\u0076\u000a",_gefad .SdTemplate ));
_gfgfg .WriteString (_ede .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006eg\u0043\u006f\u006e\u0074\u0065\u0078\u0074R\u0065\u0074\u0061\u0069\u006e\u0065\u0064\u0020\u0025\u0076\u000a",_gefad ._bbdf ));_gfgfg .WriteString (_ede .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074\u0065\u0078\u0074\u0055\u0073\u0065\u0064 \u0025\u0076\u000a",_gefad ._dfgaf ));
_gfgfg .WriteString (_ede .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_gefad .SdHuffAggInstanceSelection ));
_gfgfg .WriteString (_ede .Sprintf ("\u0009\u002d\u0020\u0053d\u0048\u0075\u0066\u0066\u0042\u004d\u0053\u0069\u007a\u0065S\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020%\u0076\u000a",_gefad .SdHuffBMSizeSelection ));_gfgfg .WriteString (_ede .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_gefad .SdHuffDecodeWidthSelection ));
_gfgfg .WriteString (_ede .Sprintf ("\u0009\u002d\u0020Sd\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064e\u0048e\u0069g\u0068t\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_gefad .SdHuffDecodeHeightSelection ));
_gfgfg .WriteString (_ede .Sprintf ("\u0009\u002d\u0020U\u0073\u0065\u0052\u0065f\u0069\u006e\u0065\u006d\u0065\u006e\u0074A\u0067\u0067\u0072\u0065\u0067\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_gefad .UseRefinementAggregation ));_gfgfg .WriteString (_ede .Sprintf ("\u0009\u002d\u0020is\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045\u006e\u0063\u006f\u0064\u0065\u0064\u0020\u0025\u0076\u000a",_gefad .IsHuffmanEncoded ));
_gfgfg .WriteString (_ede .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_gefad .SdATX ));_gfgfg .WriteString (_ede .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_gefad .SdATY ));_gfgfg .WriteString (_ede .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_gefad .SdrATX ));
_gfgfg .WriteString (_ede .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_gefad .SdrATY ));_gfgfg .WriteString (_ede .Sprintf ("\u0009\u002d\u0020\u004e\u0075\u006d\u0062\u0065\u0072\u004ff\u0045\u0078\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_gefad .NumberOfExportedSymbols ));
_gfgfg .WriteString (_ede .Sprintf ("\u0009-\u0020\u004e\u0075\u006db\u0065\u0072\u004f\u0066\u004ee\u0077S\u0079m\u0062\u006f\u006c\u0073\u0020\u0025\u0076\n",_gefad .NumberOfNewSymbols ));_gfgfg .WriteString (_ede .Sprintf ("\u0009\u002d\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u004ff\u0049\u006d\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_gefad ._cfee ));
_gfgfg .WriteString (_ede .Sprintf ("\u0009\u002d \u006e\u0075\u006d\u0062\u0065\u0072\u004f\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0064\u0053\u0079\u006d\u0062\u006f\u006c\u0073 %\u0076\u000a",_gefad ._ebfb ));return _gfgfg .String ();};func (_aebgg *TextRegion )setParameters (_agfab *_ef .Decoder ,_agda ,_cccbe bool ,_fbag ,_cbaa uint32 ,_fgebe uint32 ,_fafc int8 ,_bdcgd uint32 ,_ggbe int8 ,_dddb _ee .CombinationOperator ,_dbcbcg int8 ,_aceaa int16 ,_abfc ,_gbdd ,_caab ,_dcged ,_ecfad ,_bebdca ,_acdd ,_ddec ,_febg ,_eecg int8 ,_ebed ,_afg []int8 ,_ceffg []*_ee .Bitmap ,_eaag int8 ){_aebgg ._adabd =_agfab ;
_aebgg .IsHuffmanEncoded =_agda ;_aebgg .UseRefinement =_cccbe ;_aebgg .RegionInfo .BitmapWidth =_fbag ;_aebgg .RegionInfo .BitmapHeight =_cbaa ;_aebgg .NumberOfSymbolInstances =_fgebe ;_aebgg .SbStrips =_fafc ;_aebgg .NumberOfSymbols =_bdcgd ;_aebgg .DefaultPixel =_ggbe ;
_aebgg .CombinationOperator =_dddb ;_aebgg .IsTransposed =_dbcbcg ;_aebgg .ReferenceCorner =_aceaa ;_aebgg .SbDsOffset =_abfc ;_aebgg .SbHuffFS =_gbdd ;_aebgg .SbHuffDS =_caab ;_aebgg .SbHuffDT =_dcged ;_aebgg .SbHuffRDWidth =_ecfad ;_aebgg .SbHuffRDHeight =_bebdca ;
_aebgg .SbHuffRSize =_febg ;_aebgg .SbHuffRDX =_acdd ;_aebgg .SbHuffRDY =_ddec ;_aebgg .SbrTemplate =_eecg ;_aebgg .SbrATX =_ebed ;_aebgg .SbrATY =_afg ;_aebgg .Symbols =_ceffg ;_aebgg ._bggde =_eaag ;};func (_ecadd *SymbolDictionary )getSymbol (_gaef int )(*_ee .Bitmap ,error ){const _aace ="\u0067e\u0074\u0053\u0079\u006d\u0062\u006fl";
_gafb ,_eccf :=_ecadd ._gdefg .GetBitmap (_ecadd ._ffg [_gaef ]);if _eccf !=nil {return nil ,_da .Wrap (_eccf ,_aace ,"\u0063\u0061n\u0027\u0074\u0020g\u0065\u0074\u0020\u0073\u0079\u006d\u0062\u006f\u006c");};return _gafb ,nil ;};func (_faaa *SymbolDictionary )addSymbol (_dcec Regioner )error {_aeeac ,_decb :=_dcec .GetRegionBitmap ();
if _decb !=nil {return _decb ;};_faaa ._fafd [_faaa ._ebfb ]=_aeeac ;_faaa ._gbda =append (_faaa ._gbda ,_aeeac );_dae .Log .Trace ("\u005b\u0053YM\u0042\u004f\u004c \u0044\u0049\u0043\u0054ION\u0041RY\u005d\u0020\u0041\u0064\u0064\u0065\u0064 s\u0079\u006d\u0062\u006f\u006c\u003a\u0020%\u0073",_aeeac );
return nil ;};func (_bga *template0 )form (_cagc ,_dgdc ,_bfd ,_bed ,_dgac int16 )int16 {return (_cagc <<10)|(_dgdc <<7)|(_bfd <<4)|(_bed <<1)|_dgac ;};const (ORandom OrganizationType =iota ;OSequential ;);func (_adcbg *TextRegion )readAmountOfSymbolInstances ()error {_egfb ,_cbdba :=_adcbg ._eafe .ReadBits (32);
if _cbdba !=nil {return _cbdba ;};_adcbg .NumberOfSymbolInstances =uint32 (_egfb &_d .MaxUint32 );_aebd :=_adcbg .RegionInfo .BitmapWidth *_adcbg .RegionInfo .BitmapHeight ;if _aebd < _adcbg .NumberOfSymbolInstances {_dae .Log .Debug ("\u004c\u0069\u006d\u0069t\u0069\u006e\u0067\u0020t\u0068\u0065\u0020n\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020d\u0065\u0063\u006f\u0064e\u0064\u0020\u0073\u0079m\u0062\u006f\u006c\u0020\u0069n\u0073\u0074\u0061\u006e\u0063\u0065\u0073 \u0074\u006f\u0020\u006f\u006ee\u0020\u0070\u0065\u0072\u0020\u0070\u0069\u0078\u0065l\u0020\u0028\u0020\u0025\u0064\u0020\u0069\u006e\u0073\u0074\u0065\u0061\u0064\u0020\u006f\u0066\u0020\u0025\u0064\u0029",_aebd ,_adcbg .NumberOfSymbolInstances );
_adcbg .NumberOfSymbolInstances =_aebd ;};return nil ;};type PageInformationSegment struct{_ddgd _gf .StreamReader ;PageBMHeight int ;PageBMWidth int ;ResolutionX int ;ResolutionY int ;_cgda bool ;_cfda _ee .CombinationOperator ;_gegg bool ;DefaultPixelValue uint8 ;
_bacd bool ;IsLossless bool ;IsStripe bool ;MaxStripeSize uint16 ;};func (_aeag *Header )readSegmentPageAssociation (_gbfd Documenter ,_fgbc _gf .StreamReader ,_fggd uint64 ,_eebd ...int )(_cbc error ){const _eadgf ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074P\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061t\u0069\u006f\u006e";
if !_aeag .PageAssociationFieldSize {_cfef ,_agde :=_fgbc .ReadBits (8);if _agde !=nil {return _da .Wrap (_agde ,_eadgf ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_aeag .PageAssociation =int (_cfef &0xFF);}else {_dbcc ,_feef :=_fgbc .ReadBits (32);
if _feef !=nil {return _da .Wrap (_feef ,_eadgf ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_aeag .PageAssociation =int (_dbcc &_d .MaxInt32 );};if _fggd ==0{return nil ;};if _aeag .PageAssociation !=0{_cdcc ,_ccca :=_gbfd .GetPage (_aeag .PageAssociation );
if _ccca !=nil {return _da .Wrap (_ccca ,_eadgf ,"\u0061s\u0073\u006f\u0063\u0069a\u0074\u0065\u0064\u0020\u0070a\u0067e\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006ed");};var _bbfg int ;for _ebgb :=uint64 (0);_ebgb < _fggd ;_ebgb ++{_bbfg =_eebd [_ebgb ];
_aeag .RTSegments [_ebgb ],_ccca =_cdcc .GetSegment (_bbfg );if _ccca !=nil {var _febe error ;_aeag .RTSegments [_ebgb ],_febe =_gbfd .GetGlobalSegment (_bbfg );if _febe !=nil {return _da .Wrapf (_ccca ,_eadgf ,"\u0072\u0065\u0066\u0065\u0072\u0065n\u0063\u0065\u0020s\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064\u0020\u0061\u0074\u0020pa\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0072\u0020\u0069\u006e\u0020\u0067\u006c\u006f\u0062\u0061\u006c\u0073",_aeag .PageAssociation );
};};};return nil ;};for _eeff :=uint64 (0);_eeff < _fggd ;_eeff ++{_aeag .RTSegments [_eeff ],_cbc =_gbfd .GetGlobalSegment (_eebd [_eeff ]);if _cbc !=nil {return _da .Wrapf (_cbc ,_eadgf ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u003a\u0020\u0027\u0025d\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064",_eebd [_eeff ]);
};};return nil ;};func (_dgedf *PatternDictionary )Init (h *Header ,r _gf .StreamReader )error {_dgedf ._aaad =r ;return _dgedf .parseHeader ();};func (_cfcc *TextRegion )setCodingStatistics ()error {if _cfcc ._agebg ==nil {_cfcc ._agebg =_ef .NewStats (512,1);
};if _cfcc ._aed ==nil {_cfcc ._aed =_ef .NewStats (512,1);};if _cfcc ._becd ==nil {_cfcc ._becd =_ef .NewStats (512,1);};if _cfcc ._cgdg ==nil {_cfcc ._cgdg =_ef .NewStats (512,1);};if _cfcc ._geeg ==nil {_cfcc ._geeg =_ef .NewStats (512,1);};if _cfcc ._bdfe ==nil {_cfcc ._bdfe =_ef .NewStats (512,1);
};if _cfcc ._gaec ==nil {_cfcc ._gaec =_ef .NewStats (512,1);};if _cfcc ._cgaa ==nil {_cfcc ._cgaa =_ef .NewStats (1<<uint (_cfcc ._bggde ),1);};if _cfcc ._cgbc ==nil {_cfcc ._cgbc =_ef .NewStats (512,1);};if _cfcc ._ccgcf ==nil {_cfcc ._ccgcf =_ef .NewStats (512,1);
};if _cfcc ._adabd ==nil {var _adef error ;_cfcc ._adabd ,_adef =_ef .New (_cfcc ._eafe );if _adef !=nil {return _adef ;};};return nil ;};func (_cdagb *TextRegion )GetRegionInfo ()*RegionSegment {return _cdagb .RegionInfo };type Documenter interface{GetPage (int )(Pager ,error );
GetGlobalSegment (int )(*Header ,error );};func (_bgad *TextRegion )InitEncode (globalSymbolsMap ,localSymbolsMap map[int ]int ,comps []int ,inLL *_ee .Points ,symbols *_ee .Bitmaps ,classIDs *_gg .IntSlice ,boxes *_ee .Boxes ,width ,height ,symBits int ){_bgad .RegionInfo =&RegionSegment {BitmapWidth :uint32 (width ),BitmapHeight :uint32 (height )};
_bgad ._cagf =globalSymbolsMap ;_bgad ._bfgac =localSymbolsMap ;_bgad ._ffbdg =comps ;_bgad ._ccbee =inLL ;_bgad ._bcfcc =symbols ;_bgad ._cecac =classIDs ;_bgad ._eecd =boxes ;_bgad ._cdcff =symBits ;};func (_aggf *GenericRegion )setParametersMMR (_geda bool ,_ffcc ,_bag int64 ,_gabb ,_egd uint32 ,_afd byte ,_feaa ,_fecc bool ,_efcg ,_eadg []int8 ){_aggf .DataOffset =_ffcc ;
_aggf .DataLength =_bag ;_aggf .RegionSegment =&RegionSegment {};_aggf .RegionSegment .BitmapHeight =_gabb ;_aggf .RegionSegment .BitmapWidth =_egd ;_aggf .GBTemplate =_afd ;_aggf .IsMMREncoded =_geda ;_aggf .IsTPGDon =_feaa ;_aggf .GBAtX =_efcg ;_aggf .GBAtY =_eadg ;
};func (_fffa *PatternDictionary )GetDictionary ()([]*_ee .Bitmap ,error ){if _fffa .Patterns !=nil {return _fffa .Patterns ,nil ;};if !_fffa .IsMMREncoded {_fffa .setGbAtPixels ();};_egee :=NewGenericRegion (_fffa ._aaad );_egee .setParametersMMR (_fffa .IsMMREncoded ,_fffa .DataOffset ,_fffa .DataLength ,uint32 (_fffa .HdpHeight ),(_fffa .GrayMax +1)*uint32 (_fffa .HdpWidth ),_fffa .HDTemplate ,false ,false ,_fffa .GBAtX ,_fffa .GBAtY );
_abge ,_fggc :=_egee .GetRegionBitmap ();if _fggc !=nil {return nil ,_fggc ;};if _fggc =_fffa .extractPatterns (_abge );_fggc !=nil {return nil ,_fggc ;};return _fffa .Patterns ,nil ;};func (_fcd *GenericRefinementRegion )decodeTemplate (_dbd ,_gcd ,_beba ,_fgg ,_eg ,_eac ,_agf ,_gae ,_gagg ,_dcb int ,_gba templater )(_aee error ){var (_gca ,_ebd ,_baa ,_gd ,_eaeg int16 ;
_dgg ,_gaa ,_gcgb ,_egg int ;_agb byte ;);if _gagg >=1&&(_gagg -1)< _fcd .ReferenceBitmap .Height {_agb ,_aee =_fcd .ReferenceBitmap .GetByte (_dcb -_fgg );if _aee !=nil {return ;};_dgg =int (_agb );};if _gagg >=0&&(_gagg )< _fcd .ReferenceBitmap .Height {_agb ,_aee =_fcd .ReferenceBitmap .GetByte (_dcb );
if _aee !=nil {return ;};_gaa =int (_agb );};if _gagg >=-1&&(_gagg +1)< _fcd .ReferenceBitmap .Height {_agb ,_aee =_fcd .ReferenceBitmap .GetByte (_dcb +_fgg );if _aee !=nil {return ;};_gcgb =int (_agb );};_dcb ++;if _dbd >=1{_agb ,_aee =_fcd .RegionBitmap .GetByte (_gae -_beba );
if _aee !=nil {return ;};_egg =int (_agb );};_gae ++;_ddga :=_fcd .ReferenceDX %8;_cce :=6+_ddga ;_cd :=_dcb %_fgg ;if _cce >=0{if _cce < 8{_gca =int16 (_dgg >>uint (_cce ))&0x07;};if _cce < 8{_ebd =int16 (_gaa >>uint (_cce ))&0x07;};if _cce < 8{_baa =int16 (_gcgb >>uint (_cce ))&0x07;
};if _cce ==6&&_cd > 1{if _gagg >=1&&(_gagg -1)< _fcd .ReferenceBitmap .Height {_agb ,_aee =_fcd .ReferenceBitmap .GetByte (_dcb -_fgg -2);if _aee !=nil {return _aee ;};_gca |=int16 (_agb <<2)&0x04;};if _gagg >=0&&_gagg < _fcd .ReferenceBitmap .Height {_agb ,_aee =_fcd .ReferenceBitmap .GetByte (_dcb -2);
if _aee !=nil {return _aee ;};_ebd |=int16 (_agb <<2)&0x04;};if _gagg >=-1&&_gagg +1< _fcd .ReferenceBitmap .Height {_agb ,_aee =_fcd .ReferenceBitmap .GetByte (_dcb +_fgg -2);if _aee !=nil {return _aee ;};_baa |=int16 (_agb <<2)&0x04;};};if _cce ==0{_dgg =0;
_gaa =0;_gcgb =0;if _cd < _fgg -1{if _gagg >=1&&_gagg -1< _fcd .ReferenceBitmap .Height {_agb ,_aee =_fcd .ReferenceBitmap .GetByte (_dcb -_fgg );if _aee !=nil {return _aee ;};_dgg =int (_agb );};if _gagg >=0&&_gagg < _fcd .ReferenceBitmap .Height {_agb ,_aee =_fcd .ReferenceBitmap .GetByte (_dcb );
if _aee !=nil {return _aee ;};_gaa =int (_agb );};if _gagg >=-1&&_gagg +1< _fcd .ReferenceBitmap .Height {_agb ,_aee =_fcd .ReferenceBitmap .GetByte (_dcb +_fgg );if _aee !=nil {return _aee ;};_gcgb =int (_agb );};};_dcb ++;};}else {_gca =int16 (_dgg <<1)&0x07;
_ebd =int16 (_gaa <<1)&0x07;_baa =int16 (_gcgb <<1)&0x07;_dgg =0;_gaa =0;_gcgb =0;if _cd < _fgg -1{if _gagg >=1&&_gagg -1< _fcd .ReferenceBitmap .Height {_agb ,_aee =_fcd .ReferenceBitmap .GetByte (_dcb -_fgg );if _aee !=nil {return _aee ;};_dgg =int (_agb );
};if _gagg >=0&&_gagg < _fcd .ReferenceBitmap .Height {_agb ,_aee =_fcd .ReferenceBitmap .GetByte (_dcb );if _aee !=nil {return _aee ;};_gaa =int (_agb );};if _gagg >=-1&&_gagg +1< _fcd .ReferenceBitmap .Height {_agb ,_aee =_fcd .ReferenceBitmap .GetByte (_dcb +_fgg );
if _aee !=nil {return _aee ;};_gcgb =int (_agb );};_dcb ++;};_gca |=int16 ((_dgg >>7)&0x07);_ebd |=int16 ((_gaa >>7)&0x07);_baa |=int16 ((_gcgb >>7)&0x07);};_gd =int16 (_egg >>6);_eaeg =0;_dbf :=(2-_ddga )%8;_dgg <<=uint (_dbf );_gaa <<=uint (_dbf );_gcgb <<=uint (_dbf );
_egg <<=2;var _ecc int ;for _bbbe :=0;_bbbe < _gcd ;_bbbe ++{_ece :=_bbbe &0x07;_gcdc :=_gba .form (_gca ,_ebd ,_baa ,_gd ,_eaeg );if _fcd ._bac {_agb ,_aee =_fcd .RegionBitmap .GetByte (_fcd .RegionBitmap .GetByteIndex (_bbbe ,_dbd ));if _aee !=nil {return _aee ;
};_fcd ._cc .SetIndex (int32 (_fcd .overrideAtTemplate0 (int (_gcdc ),_bbbe ,_dbd ,int (_agb ),_ece )));}else {_fcd ._cc .SetIndex (int32 (_gcdc ));};_ecc ,_aee =_fcd ._dc .DecodeBit (_fcd ._cc );if _aee !=nil {return _aee ;};if _aee =_fcd .RegionBitmap .SetPixel (_bbbe ,_dbd ,byte (_ecc ));
_aee !=nil {return _aee ;};_gca =((_gca <<1)|0x01&int16 (_dgg >>7))&0x07;_ebd =((_ebd <<1)|0x01&int16 (_gaa >>7))&0x07;_baa =((_baa <<1)|0x01&int16 (_gcgb >>7))&0x07;_gd =((_gd <<1)|0x01&int16 (_egg >>7))&0x07;_eaeg =int16 (_ecc );if (_bbbe -int (_fcd .ReferenceDX ))%8==5{_dgg =0;
_gaa =0;_gcgb =0;if ((_bbbe -int (_fcd .ReferenceDX ))/8)+1< _fcd .ReferenceBitmap .RowStride {if _gagg >=1&&(_gagg -1)< _fcd .ReferenceBitmap .Height {_agb ,_aee =_fcd .ReferenceBitmap .GetByte (_dcb -_fgg );if _aee !=nil {return _aee ;};_dgg =int (_agb );
};if _gagg >=0&&_gagg < _fcd .ReferenceBitmap .Height {_agb ,_aee =_fcd .ReferenceBitmap .GetByte (_dcb );if _aee !=nil {return _aee ;};_gaa =int (_agb );};if _gagg >=-1&&(_gagg +1)< _fcd .ReferenceBitmap .Height {_agb ,_aee =_fcd .ReferenceBitmap .GetByte (_dcb +_fgg );
if _aee !=nil {return _aee ;};_gcgb =int (_agb );};};_dcb ++;}else {_dgg <<=1;_gaa <<=1;_gcgb <<=1;};if _ece ==5&&_dbd >=1{if ((_bbbe >>3)+1)>=_fcd .RegionBitmap .RowStride {_egg =0;}else {_agb ,_aee =_fcd .RegionBitmap .GetByte (_gae -_beba );if _aee !=nil {return _aee ;
};_egg =int (_agb );};_gae ++;}else {_egg <<=1;};};return nil ;};func (_dbdb *PatternDictionary )readIsMMREncoded ()error {_eadbc ,_faed :=_dbdb ._aaad .ReadBit ();if _faed !=nil {return _faed ;};if _eadbc !=0{_dbdb .IsMMREncoded =true ;};return nil ;};
func NewRegionSegment (r _gf .StreamReader )*RegionSegment {return &RegionSegment {_cbga :r }};func (_bdde *PageInformationSegment )readMaxStripeSize ()error {_aff ,_gfgb :=_bdde ._ddgd .ReadBits (15);if _gfgb !=nil {return _gfgb ;};_bdde .MaxStripeSize =uint16 (_aff &_d .MaxUint16 );
return nil ;};func _ggae (_faf _gf .StreamReader ,_eca *Header )*GenericRefinementRegion {return &GenericRefinementRegion {_fd :_faf ,RegionInfo :NewRegionSegment (_faf ),_gfe :_eca ,_ca :&template0 {},_df :&template1 {}};};type templater interface{form (_fcf ,_eeb ,_daf ,_cag ,_cda int16 )int16 ;
setIndex (_gcdb *_ef .DecoderStats );};var _ templater =&template1 {};func (_af *GenericRefinementRegion )decodeOptimized (_bea ,_ddg ,_fc ,_bae ,_eddf ,_feg ,_fec int )error {var (_gc error ;_dfd int ;_dga int ;);_gcg :=_bea -int (_af .ReferenceDY );if _age :=int (-_af .ReferenceDX );
_age > 0{_dfd =_age ;};_fed :=_af .ReferenceBitmap .GetByteIndex (_dfd ,_gcg );if _af .ReferenceDX > 0{_dga =int (_af .ReferenceDX );};_bbb :=_af .RegionBitmap .GetByteIndex (_dga ,_bea );switch _af .TemplateID {case 0:_gc =_af .decodeTemplate (_bea ,_ddg ,_fc ,_bae ,_eddf ,_feg ,_fec ,_bbb ,_gcg ,_fed ,_af ._ca );
case 1:_gc =_af .decodeTemplate (_bea ,_ddg ,_fc ,_bae ,_eddf ,_feg ,_fec ,_bbb ,_gcg ,_fed ,_af ._df );};return _gc ;};func (_abgdf *SymbolDictionary )decodeThroughTextRegion (_cfab ,_fdab ,_fbde uint32 )error {if _abgdf ._adg ==nil {_abgdf ._adg =_eeffg (_abgdf ._faad ,nil );
_abgdf ._adg .setContexts (_abgdf ._cfed ,_ef .NewStats (512,1),_ef .NewStats (512,1),_ef .NewStats (512,1),_ef .NewStats (512,1),_abgdf ._dggb ,_ef .NewStats (512,1),_ef .NewStats (512,1),_ef .NewStats (512,1),_ef .NewStats (512,1));};if _deg :=_abgdf .setSymbolsArray ();
_deg !=nil {return _deg ;};_abgdf ._adg .setParameters (_abgdf ._fagb ,_abgdf .IsHuffmanEncoded ,true ,_cfab ,_fdab ,_fbde ,1,_abgdf ._cfee +_abgdf ._ebfb ,0,0,0,1,0,0,0,0,0,0,0,0,0,_abgdf .SdrTemplate ,_abgdf .SdrATX ,_abgdf .SdrATY ,_abgdf ._gbda ,_abgdf ._cfac );
return _abgdf .addSymbol (_abgdf ._adg );};type SymbolDictionary struct{_faad _gf .StreamReader ;SdrTemplate int8 ;SdTemplate int8 ;_bbdf bool ;_dfgaf bool ;SdHuffAggInstanceSelection bool ;SdHuffBMSizeSelection int8 ;SdHuffDecodeWidthSelection int8 ;SdHuffDecodeHeightSelection int8 ;
UseRefinementAggregation bool ;IsHuffmanEncoded bool ;SdATX []int8 ;SdATY []int8 ;SdrATX []int8 ;SdrATY []int8 ;NumberOfExportedSymbols uint32 ;NumberOfNewSymbols uint32 ;Header *Header ;_cfee uint32 ;_dgde []*_ee .Bitmap ;_ebfb uint32 ;_fafd []*_ee .Bitmap ;
_fbdf _gfb .Tabler ;_abgg _gfb .Tabler ;_beg _gfb .Tabler ;_fbca _gfb .Tabler ;_adbgd []*_ee .Bitmap ;_gbda []*_ee .Bitmap ;_fagb *_ef .Decoder ;_adg *TextRegion ;_edae *GenericRegion ;_dbdd *GenericRefinementRegion ;_cfed *_ef .DecoderStats ;_ffbd *_ef .DecoderStats ;
_addc *_ef .DecoderStats ;_fgfbb *_ef .DecoderStats ;_bcgf *_ef .DecoderStats ;_aab *_ef .DecoderStats ;_acge *_ef .DecoderStats ;_cdab *_ef .DecoderStats ;_dggb *_ef .DecoderStats ;_cfac int8 ;_gdefg *_ee .Bitmaps ;_ffg []int ;_bcfc map[int ]int ;_bfgg bool ;
};func (_ffd *Header )writeReferredToSegments (_gfgf _gf .BinaryWriter )(_bfa int ,_bdac error ){const _geaa ="\u0077\u0072\u0069te\u0052\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";var (_badd uint16 ;
_bced uint32 ;);_fadf :=_ffd .referenceSize ();_acgb :=1;_abec :=make ([]byte ,_fadf );for _ ,_afed :=range _ffd .RTSNumbers {switch _fadf {case 4:_bced =uint32 (_afed );_ed .BigEndian .PutUint32 (_abec ,_bced );_acgb ,_bdac =_gfgf .Write (_abec );if _bdac !=nil {return 0,_da .Wrap (_bdac ,_geaa ,"u\u0069\u006e\u0074\u0033\u0032\u0020\u0073\u0069\u007a\u0065");
};case 2:_badd =uint16 (_afed );_ed .BigEndian .PutUint16 (_abec ,_badd );_acgb ,_bdac =_gfgf .Write (_abec );if _bdac !=nil {return 0,_da .Wrap (_bdac ,_geaa ,"\u0075\u0069\u006e\u0074\u0031\u0036");};default:if _bdac =_gfgf .WriteByte (byte (_afed ));
_bdac !=nil {return 0,_da .Wrap (_bdac ,_geaa ,"\u0075\u0069\u006et\u0038");};};_bfa +=_acgb ;};return _bfa ,nil ;};type Regioner interface{GetRegionBitmap ()(*_ee .Bitmap ,error );GetRegionInfo ()*RegionSegment ;};func NewHeader (d Documenter ,r _gf .StreamReader ,offset int64 ,organizationType OrganizationType )(*Header ,error ){_bdcg :=&Header {Reader :r };
if _adbd :=_bdcg .parse (d ,r ,offset ,organizationType );_adbd !=nil {return nil ,_da .Wrap (_adbd ,"\u004ee\u0077\u0048\u0065\u0061\u0064\u0065r","");};return _bdcg ,nil ;};func (_cdfe *SymbolDictionary )decodeHeightClassDeltaHeight ()(int64 ,error ){if _cdfe .IsHuffmanEncoded {return _cdfe .decodeHeightClassDeltaHeightWithHuffman ();
};_fbbf ,_afab :=_cdfe ._fagb .DecodeInt (_cdfe ._ffbd );if _afab !=nil {return 0,_afab ;};return int64 (_fbbf ),nil ;};func (_gdbb *GenericRegion )setParameters (_caeg bool ,_geff ,_aaf int64 ,_fdc ,_eba uint32 ){_gdbb .IsMMREncoded =_caeg ;_gdbb .DataOffset =_geff ;
_gdbb .DataLength =_aaf ;_gdbb .RegionSegment .BitmapHeight =_fdc ;_gdbb .RegionSegment .BitmapWidth =_eba ;_gdbb ._geg =nil ;_gdbb .Bitmap =nil ;};func (_dede *GenericRegion )decodeTemplate2 (_eefee ,_eeg ,_cea int ,_eebgg ,_cec int )(_cfff error ){const _bbf ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0032";
var (_bcca ,_dffg int ;_eddd ,_ddd int ;_gbab byte ;_acg ,_bebd int ;);if _eefee >=1{_gbab ,_cfff =_dede .Bitmap .GetByte (_cec );if _cfff !=nil {return _da .Wrap (_cfff ,_bbf ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0031");
};_eddd =int (_gbab );};if _eefee >=2{_gbab ,_cfff =_dede .Bitmap .GetByte (_cec -_dede .Bitmap .RowStride );if _cfff !=nil {return _da .Wrap (_cfff ,_bbf ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0032");};_ddd =int (_gbab )<<4;
};_bcca =(_eddd >>3&0x7c)|(_ddd >>3&0x380);for _fbfe :=0;_fbfe < _cea ;_fbfe =_acg {var (_bedeg byte ;_ddcg int ;);_acg =_fbfe +8;if _aegg :=_eeg -_fbfe ;_aegg > 8{_ddcg =8;}else {_ddcg =_aegg ;};if _eefee > 0{_eddd <<=8;if _acg < _eeg {_gbab ,_cfff =_dede .Bitmap .GetByte (_cec +1);
if _cfff !=nil {return _da .Wrap (_cfff ,_bbf ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0030");};_eddd |=int (_gbab );};};if _eefee > 1{_ddd <<=8;if _acg < _eeg {_gbab ,_cfff =_dede .Bitmap .GetByte (_cec -_dede .Bitmap .RowStride +1);
if _cfff !=nil {return _da .Wrap (_cfff ,_bbf ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0031");};_ddd |=int (_gbab )<<4;};};for _cfa :=0;_cfa < _ddcg ;_cfa ++{_ddca :=uint (10-_cfa );if _dede ._dged {_dffg =_dede .overrideAtTemplate2 (_bcca ,_fbfe +_cfa ,_eefee ,int (_bedeg ),_cfa );
_dede ._ebe .SetIndex (int32 (_dffg ));}else {_dede ._ebe .SetIndex (int32 (_bcca ));};_bebd ,_cfff =_dede ._ada .DecodeBit (_dede ._ebe );if _cfff !=nil {return _da .Wrap (_cfff ,_bbf ,"");};_bedeg |=byte (_bebd <<uint (7-_cfa ));_bcca =((_bcca &0x1bd)<<1)|_bebd |((_eddd >>_ddca )&0x4)|((_ddd >>_ddca )&0x80);
};if _gcgg :=_dede .Bitmap .SetByte (_eebgg ,_bedeg );_gcgg !=nil {return _da .Wrap (_gcgg ,_bbf ,"");};_eebgg ++;_cec ++;};return nil ;};var _ SegmentEncoder =&RegionSegment {};func (_cefg *TextRegion )GetRegionBitmap ()(*_ee .Bitmap ,error ){if _cefg .RegionBitmap !=nil {return _cefg .RegionBitmap ,nil ;
};if !_cefg .IsHuffmanEncoded {if _baffa :=_cefg .setCodingStatistics ();_baffa !=nil {return nil ,_baffa ;};};if _feggd :=_cefg .createRegionBitmap ();_feggd !=nil {return nil ,_feggd ;};if _dbfg :=_cefg .decodeSymbolInstances ();_dbfg !=nil {return nil ,_dbfg ;
};return _cefg .RegionBitmap ,nil ;};var (_ Regioner =&TextRegion {};_ Segmenter =&TextRegion {};);func (_efea *HalftoneRegion )computeX (_fedb ,_egdf int )int {return _efea .shiftAndFill (int (_efea .HGridX )+_fedb *int (_efea .HRegionY )+_egdf *int (_efea .HRegionX ));
};func (_decca *Header )writeReferredToCount (_daa _gf .BinaryWriter )(_cafae int ,_cefe error ){const _bbeb ="w\u0072i\u0074\u0065\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0043ou\u006e\u0074";_decca .RTSNumbers =make ([]int ,len (_decca .RTSegments ));
for _fdgf ,_dfbd :=range _decca .RTSegments {_decca .RTSNumbers [_fdgf ]=int (_dfbd .SegmentNumber );};if len (_decca .RTSNumbers )<=4{var _ecb byte ;if len (_decca .RetainBits )>=1{_ecb =_decca .RetainBits [0];};_ecb |=byte (len (_decca .RTSNumbers ))<<5;
if _cefe =_daa .WriteByte (_ecb );_cefe !=nil {return 0,_da .Wrap (_cefe ,_bbeb ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return 1,nil ;};_cab :=uint32 (len (_decca .RTSNumbers ));_dbac :=make ([]byte ,4+_gg .Ceil (len (_decca .RTSNumbers )+1,8));
_cab |=0x7<<29;_ed .BigEndian .PutUint32 (_dbac ,_cab );copy (_dbac [1:],_decca .RetainBits );_cafae ,_cefe =_daa .Write (_dbac );if _cefe !=nil {return 0,_da .Wrap (_cefe ,_bbeb ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return _cafae ,nil ;
};