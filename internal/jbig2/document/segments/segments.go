//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package segments ;import (_f "encoding/binary";_bc "errors";_b "fmt";_ab "github.com/unidoc/unipdf/v3/common";_g "github.com/unidoc/unipdf/v3/internal/bitwise";_cf "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_bd "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";
_eae "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/arithmetic";_cff "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/huffman";_fd "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/mmr";_d "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/arithmetic";
_ff "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_gc "github.com/unidoc/unipdf/v3/internal/jbig2/internal";_bg "golang.org/x/xerrors";_ad "image";_ea "io";_e "math";_c "strings";_fe "time";);func (_edfde *TextRegion )initSymbols ()error {const _ffee ="i\u006e\u0069\u0074\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
for _ ,_ddbf :=range _edfde .Header .RTSegments {if _ddbf ==nil {return _ff .Error (_ffee ,"\u006e\u0069\u006c\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020pr\u006f\u0076\u0069\u0064\u0065\u0064 \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0074\u0065\u0078\u0074\u0020\u0072\u0065g\u0069\u006f\u006e\u0020\u0053\u0079\u006d\u0062o\u006c\u0073");
};if _ddbf .Type ==0{_dgca ,_eaea :=_ddbf .GetSegmentData ();if _eaea !=nil {return _ff .Wrap (_eaea ,_ffee ,"");};_gfgd ,_egdg :=_dgca .(*SymbolDictionary );if !_egdg {return _ff .Error (_ffee ,"\u0072e\u0066\u0065r\u0072\u0065\u0064 \u0054\u006f\u0020\u0053\u0065\u0067\u006de\u006e\u0074\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_gfgd ._efad =_edfde ._dageb ;_bggd ,_eaea :=_gfgd .GetDictionary ();if _eaea !=nil {return _ff .Wrap (_eaea ,_ffee ,"");};_edfde .Symbols =append (_edfde .Symbols ,_bggd ...);};};_edfde .NumberOfSymbols =uint32 (len (_edfde .Symbols ));return nil ;};
func (_cfga *SymbolDictionary )readRefinementAtPixels (_dbfd int )error {_cfga .SdrATX =make ([]int8 ,_dbfd );_cfga .SdrATY =make ([]int8 ,_dbfd );var (_dade byte ;_fcgf error ;);for _adbf :=0;_adbf < _dbfd ;_adbf ++{_dade ,_fcgf =_cfga ._cacc .ReadByte ();
if _fcgf !=nil {return _fcgf ;};_cfga .SdrATX [_adbf ]=int8 (_dade );_dade ,_fcgf =_cfga ._cacc .ReadByte ();if _fcgf !=nil {return _fcgf ;};_cfga .SdrATY [_adbf ]=int8 (_dade );};return nil ;};func (_abgf *TextRegion )String ()string {_bcac :=&_c .Builder {};
_bcac .WriteString ("\u000a[\u0054E\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u000a");_bcac .WriteString (_abgf .RegionInfo .String ()+"\u000a");_bcac .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0053br\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0025\u0076\u000a",_abgf .SbrTemplate ));
_bcac .WriteString (_b .Sprintf ("\u0009-\u0020S\u0062\u0044\u0073\u004f\u0066f\u0073\u0065t\u003a\u0020\u0025\u0076\u000a",_abgf .SbDsOffset ));_bcac .WriteString (_b .Sprintf ("\t\u002d \u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0050i\u0078\u0065\u006c\u003a %\u0076\u000a",_abgf .DefaultPixel ));
_bcac .WriteString (_b .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0076\u000a",_abgf .CombinationOperator ));_bcac .WriteString (_b .Sprintf ("\t\u002d \u0049\u0073\u0054\u0072\u0061\u006e\u0073\u0070o\u0073\u0065\u0064\u003a %\u0076\u000a",_abgf .IsTransposed ));
_bcac .WriteString (_b .Sprintf ("\u0009\u002d\u0020Re\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0043\u006f\u0072\u006e\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_abgf .ReferenceCorner ));_bcac .WriteString (_b .Sprintf ("\t\u002d\u0020\u0055\u0073eR\u0065f\u0069\u006e\u0065\u006d\u0065n\u0074\u003a\u0020\u0025\u0076\u000a",_abgf .UseRefinement ));
_bcac .WriteString (_b .Sprintf ("\u0009-\u0020\u0049\u0073\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045n\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0076\u000a",_abgf .IsHuffmanEncoded ));if _abgf .IsHuffmanEncoded {_bcac .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_abgf .SbHuffRSize ));
_bcac .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0059:\u0020\u0025\u0076\u000a",_abgf .SbHuffRDY ));_bcac .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0058:\u0020\u0025\u0076\u000a",_abgf .SbHuffRDX ));
_bcac .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069\u0067\u0068\u0074\u003a\u0020\u0025v\u000a",_abgf .SbHuffRDHeight ));_bcac .WriteString (_b .Sprintf ("\t\u002d\u0020\u0053\u0062Hu\u0066f\u0052\u0044\u0057\u0069\u0064t\u0068\u003a\u0020\u0025\u0076\u000a",_abgf .SbHuffRDWidth ));
_bcac .WriteString (_b .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0054\u003a\u0020\u0025\u0076\u000a",_abgf .SbHuffDT ));_bcac .WriteString (_b .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0053\u003a\u0020\u0025\u0076\u000a",_abgf .SbHuffDS ));
_bcac .WriteString (_b .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0046\u0053\u003a\u0020\u0025\u0076\u000a",_abgf .SbHuffFS ));};_bcac .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_abgf .SbrATX ));
_bcac .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0059:\u0020\u0025\u0076\u000a",_abgf .SbrATY ));_bcac .WriteString (_b .Sprintf ("\u0009\u002d\u0020N\u0075\u006d\u0062\u0065r\u004f\u0066\u0053\u0079\u006d\u0062\u006fl\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_abgf .NumberOfSymbolInstances ));
_bcac .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_abgf .SbrATX ));return _bcac .String ();};func (_gbed *PatternDictionary )GetDictionary ()([]*_bd .Bitmap ,error ){if _gbed .Patterns !=nil {return _gbed .Patterns ,nil ;
};if !_gbed .IsMMREncoded {_gbed .setGbAtPixels ();};_dbc :=NewGenericRegion (_gbed ._gcga );_dbc .setParametersMMR (_gbed .IsMMREncoded ,_gbed .DataOffset ,_gbed .DataLength ,uint32 (_gbed .HdpHeight ),(_gbed .GrayMax +1)*uint32 (_gbed .HdpWidth ),_gbed .HDTemplate ,false ,false ,_gbed .GBAtX ,_gbed .GBAtY );
_ecab ,_fgaf :=_dbc .GetRegionBitmap ();if _fgaf !=nil {return nil ,_fgaf ;};if _fgaf =_gbed .extractPatterns (_ecab );_fgaf !=nil {return nil ,_fgaf ;};return _gbed .Patterns ,nil ;};func (_cccg *TextRegion )blit (_eacg *_bd .Bitmap ,_fgef int64 )error {if _cccg .IsTransposed ==0&&(_cccg .ReferenceCorner ==2||_cccg .ReferenceCorner ==3){_cccg ._bdfg +=int64 (_eacg .Width -1);
}else if _cccg .IsTransposed ==1&&(_cccg .ReferenceCorner ==0||_cccg .ReferenceCorner ==2){_cccg ._bdfg +=int64 (_eacg .Height -1);};_edbdg :=_cccg ._bdfg ;if _cccg .IsTransposed ==1{_edbdg ,_fgef =_fgef ,_edbdg ;};switch _cccg .ReferenceCorner {case 0:_fgef -=int64 (_eacg .Height -1);
case 2:_fgef -=int64 (_eacg .Height -1);_edbdg -=int64 (_eacg .Width -1);case 3:_edbdg -=int64 (_eacg .Width -1);};_gbcac :=_bd .Blit (_eacg ,_cccg .RegionBitmap ,int (_edbdg ),int (_fgef ),_cccg .CombinationOperator );if _gbcac !=nil {return _gbcac ;};
if _cccg .IsTransposed ==0&&(_cccg .ReferenceCorner ==0||_cccg .ReferenceCorner ==1){_cccg ._bdfg +=int64 (_eacg .Width -1);};if _cccg .IsTransposed ==1&&(_cccg .ReferenceCorner ==1||_cccg .ReferenceCorner ==3){_cccg ._bdfg +=int64 (_eacg .Height -1);};
return nil ;};func (_gaeed *PageInformationSegment )Encode (w _g .BinaryWriter )(_dgea int ,_gegg error ){const _ccgf ="\u0050\u0061g\u0065\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u002e\u0045\u006eco\u0064\u0065";
_abe :=make ([]byte ,4);_f .BigEndian .PutUint32 (_abe ,uint32 (_gaeed .PageBMWidth ));_dgea ,_gegg =w .Write (_abe );if _gegg !=nil {return _dgea ,_ff .Wrap (_gegg ,_ccgf ,"\u0077\u0069\u0064t\u0068");};_f .BigEndian .PutUint32 (_abe ,uint32 (_gaeed .PageBMHeight ));
var _dfcf int ;_dfcf ,_gegg =w .Write (_abe );if _gegg !=nil {return _dfcf +_dgea ,_ff .Wrap (_gegg ,_ccgf ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_dgea +=_dfcf ;_f .BigEndian .PutUint32 (_abe ,uint32 (_gaeed .ResolutionX ));_dfcf ,_gegg =w .Write (_abe );
if _gegg !=nil {return _dfcf +_dgea ,_ff .Wrap (_gegg ,_ccgf ,"\u0078\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_dgea +=_dfcf ;_f .BigEndian .PutUint32 (_abe ,uint32 (_gaeed .ResolutionY ));if _dfcf ,_gegg =w .Write (_abe );_gegg !=nil {return _dfcf +_dgea ,_ff .Wrap (_gegg ,_ccgf ,"\u0079\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");
};_dgea +=_dfcf ;if _gegg =_gaeed .encodeFlags (w );_gegg !=nil {return _dgea ,_ff .Wrap (_gegg ,_ccgf ,"");};_dgea ++;if _dfcf ,_gegg =_gaeed .encodeStripingInformation (w );_gegg !=nil {return _dgea ,_ff .Wrap (_gegg ,_ccgf ,"");};_dgea +=_dfcf ;return _dgea ,nil ;
};func (_acae *GenericRegion )GetRegionBitmap ()(_eec *_bd .Bitmap ,_deef error ){if _acae .Bitmap !=nil {return _acae .Bitmap ,nil ;};if _acae .IsMMREncoded {if _acae ._aabg ==nil {_acae ._aabg ,_deef =_fd .New (_acae ._aga ,int (_acae .RegionSegment .BitmapWidth ),int (_acae .RegionSegment .BitmapHeight ),_acae .DataOffset ,_acae .DataLength );
if _deef !=nil {return nil ,_deef ;};};_acae .Bitmap ,_deef =_acae ._aabg .UncompressMMR ();return _acae .Bitmap ,_deef ;};if _deef =_acae .updateOverrideFlags ();_deef !=nil {return nil ,_deef ;};var _eag int ;if _acae ._ggb ==nil {_acae ._ggb ,_deef =_eae .New (_acae ._aga );
if _deef !=nil {return nil ,_deef ;};};if _acae ._afe ==nil {_acae ._afe =_eae .NewStats (65536,1);};_acae .Bitmap =_bd .New (int (_acae .RegionSegment .BitmapWidth ),int (_acae .RegionSegment .BitmapHeight ));_ccg :=int (uint32 (_acae .Bitmap .Width +7)&(^uint32 (7)));
for _fga :=0;_fga < _acae .Bitmap .Height ;_fga ++{if _acae .IsTPGDon {var _bfb int ;_bfb ,_deef =_acae .decodeSLTP ();if _deef !=nil {return nil ,_deef ;};_eag ^=_bfb ;};if _eag ==1{if _fga > 0{if _deef =_acae .copyLineAbove (_fga );_deef !=nil {return nil ,_deef ;
};};}else {if _deef =_acae .decodeLine (_fga ,_acae .Bitmap .Width ,_ccg );_deef !=nil {return nil ,_deef ;};};};return _acae .Bitmap ,nil ;};func (_gbcbe *TextRegion )decodeDfs ()(int64 ,error ){if _gbcbe .IsHuffmanEncoded {if _gbcbe .SbHuffFS ==3{if _gbcbe ._dbec ==nil {var _acdfa error ;
_gbcbe ._dbec ,_acdfa =_gbcbe .getUserTable (0);if _acdfa !=nil {return 0,_acdfa ;};};return _gbcbe ._dbec .Decode (_gbcbe ._aaaa );};_efgd ,_bgcaf :=_cff .GetStandardTable (6+int (_gbcbe .SbHuffFS ));if _bgcaf !=nil {return 0,_bgcaf ;};return _efgd .Decode (_gbcbe ._aaaa );
};_gabd ,_egfea :=_gbcbe ._accg .DecodeInt (_gbcbe ._baad );if _egfea !=nil {return 0,_egfea ;};return int64 (_gabd ),nil ;};func (_agcd *SymbolDictionary )decodeHeightClassBitmap (_dffc *_bd .Bitmap ,_fgca int64 ,_efd int ,_ccbe []int )error {for _gcdb :=_fgca ;
_gcdb < int64 (_agcd ._ebeb );_gcdb ++{var _ebcac int ;for _cdgg :=_fgca ;_cdgg <=_gcdb -1;_cdgg ++{_ebcac +=_ccbe [_cdgg ];};_abbef :=_ad .Rect (_ebcac ,0,_ebcac +_ccbe [_gcdb ],_efd );_baee ,_cggge :=_bd .Extract (_abbef ,_dffc );if _cggge !=nil {return _cggge ;
};_agcd ._ccdc [_gcdb ]=_baee ;_agcd ._ddcgf =append (_agcd ._ddcgf ,_baee );};return nil ;};func (_dfeb *Header )parse (_gged Documenter ,_gba _g .StreamReader ,_geae int64 ,_baec OrganizationType )(_gege error ){const _feac ="\u0070\u0061\u0072s\u0065";
_ab .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u005b\u0050A\u0052\u0053\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _gege !=nil {_ab .Log .Trace ("\u005b\u0053\u0045GM\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045R\u005d[\u0050A\u0052S\u0045\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_gege );
}else {_ab .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052]\u005bP\u0041\u0052\u0053\u0045\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");};}();_ ,_gege =_gba .Seek (_geae ,_ea .SeekStart );
if _gege !=nil {return _ff .Wrap (_gege ,_feac ,"\u0073\u0065\u0065\u006b\u0020\u0073\u0074\u0061\u0072\u0074");};if _gege =_dfeb .readSegmentNumber (_gba );_gege !=nil {return _ff .Wrap (_gege ,_feac ,"");};if _gege =_dfeb .readHeaderFlags ();_gege !=nil {return _ff .Wrap (_gege ,_feac ,"");
};var _cbaf uint64 ;_cbaf ,_gege =_dfeb .readNumberOfReferredToSegments (_gba );if _gege !=nil {return _ff .Wrap (_gege ,_feac ,"");};_dfeb .RTSNumbers ,_gege =_dfeb .readReferredToSegmentNumbers (_gba ,int (_cbaf ));if _gege !=nil {return _ff .Wrap (_gege ,_feac ,"");
};_gege =_dfeb .readSegmentPageAssociation (_gged ,_gba ,_cbaf ,_dfeb .RTSNumbers ...);if _gege !=nil {return _ff .Wrap (_gege ,_feac ,"");};if _dfeb .Type !=TEndOfFile {if _gege =_dfeb .readSegmentDataLength (_gba );_gege !=nil {return _ff .Wrap (_gege ,_feac ,"");
};};_dfeb .readDataStartOffset (_gba ,_baec );_dfeb .readHeaderLength (_gba ,_geae );_ab .Log .Trace ("\u0025\u0073",_dfeb );return nil ;};func (_beed *HalftoneRegion )computeY (_egfa ,_bddgb int )int {return _beed .shiftAndFill (int (_beed .HGridY )+_egfa *int (_beed .HRegionX )-_bddgb *int (_beed .HRegionY ));
};func (_dbeea *GenericRegion )overrideAtTemplate2 (_dfc ,_afac ,_bgbc ,_cdg ,_fcga int )int {_dfc &=0x3FB;if _dbeea .GBAtY [0]==0&&_dbeea .GBAtX [0]>=-int8 (_fcga ){_dfc |=(_cdg >>uint (7-(int8 (_fcga )+_dbeea .GBAtX [0]))&0x1)<<2;}else {_dfc |=int (_dbeea .getPixel (_afac +int (_dbeea .GBAtX [0]),_bgbc +int (_dbeea .GBAtY [0])))<<2;
};return _dfc ;};func (_aeceg *HalftoneRegion )computeX (_ecc ,_eade int )int {return _aeceg .shiftAndFill (int (_aeceg .HGridX )+_ecc *int (_aeceg .HRegionY )+_eade *int (_aeceg .HRegionX ));};func (_cc *GenericRefinementRegion )decodeTypicalPredictedLineTemplate0 (_gcg ,_dge ,_ebc ,_bee ,_def ,_fgeg ,_ae ,_gggg ,_edg int )error {var (_dde ,_ca ,_gbc ,_fea ,_aeb ,_dab int ;
_cd byte ;_bed error ;);if _gcg > 0{_cd ,_bed =_cc .RegionBitmap .GetByte (_ae -_ebc );if _bed !=nil {return _bed ;};_gbc =int (_cd );};if _gggg > 0&&_gggg <=_cc .ReferenceBitmap .Height {_cd ,_bed =_cc .ReferenceBitmap .GetByte (_edg -_bee +_fgeg );if _bed !=nil {return _bed ;
};_fea =int (_cd )<<4;};if _gggg >=0&&_gggg < _cc .ReferenceBitmap .Height {_cd ,_bed =_cc .ReferenceBitmap .GetByte (_edg +_fgeg );if _bed !=nil {return _bed ;};_aeb =int (_cd )<<1;};if _gggg > -2&&_gggg < _cc .ReferenceBitmap .Height -1{_cd ,_bed =_cc .ReferenceBitmap .GetByte (_edg +_bee +_fgeg );
if _bed !=nil {return _bed ;};_dab =int (_cd );};_dde =((_gbc >>5)&0x6)|((_dab >>2)&0x30)|(_aeb &0x180)|(_fea &0xc00);var _af int ;for _fc :=0;_fc < _def ;_fc =_af {var _eegf int ;_af =_fc +8;var _dae int ;if _dae =_dge -_fc ;_dae > 8{_dae =8;};_ga :=_af < _dge ;
_cfe :=_af < _cc .ReferenceBitmap .Width ;_cg :=_fgeg +1;if _gcg > 0{_cd =0;if _ga {_cd ,_bed =_cc .RegionBitmap .GetByte (_ae -_ebc +1);if _bed !=nil {return _bed ;};};_gbc =(_gbc <<8)|int (_cd );};if _gggg > 0&&_gggg <=_cc .ReferenceBitmap .Height {var _ddc int ;
if _cfe {_cd ,_bed =_cc .ReferenceBitmap .GetByte (_edg -_bee +_cg );if _bed !=nil {return _bed ;};_ddc =int (_cd )<<4;};_fea =(_fea <<8)|_ddc ;};if _gggg >=0&&_gggg < _cc .ReferenceBitmap .Height {var _gef int ;if _cfe {_cd ,_bed =_cc .ReferenceBitmap .GetByte (_edg +_cg );
if _bed !=nil {return _bed ;};_gef =int (_cd )<<1;};_aeb =(_aeb <<8)|_gef ;};if _gggg > -2&&_gggg < (_cc .ReferenceBitmap .Height -1){_cd =0;if _cfe {_cd ,_bed =_cc .ReferenceBitmap .GetByte (_edg +_bee +_cg );if _bed !=nil {return _bed ;};};_dab =(_dab <<8)|int (_cd );
};for _dag :=0;_dag < _dae ;_dag ++{var _fdd int ;_aca :=false ;_edc :=(_dde >>4)&0x1ff;if _edc ==0x1ff{_aca =true ;_fdd =1;}else if _edc ==0x00{_aca =true ;};if !_aca {if _cc ._fa {_ca =_cc .overrideAtTemplate0 (_dde ,_fc +_dag ,_gcg ,_eegf ,_dag );_cc ._aag .SetIndex (int32 (_ca ));
}else {_cc ._aag .SetIndex (int32 (_dde ));};_fdd ,_bed =_cc ._ee .DecodeBit (_cc ._aag );if _bed !=nil {return _bed ;};};_eac :=uint (7-_dag );_eegf |=_fdd <<_eac ;_dde =((_dde &0xdb6)<<1)|_fdd |(_gbc >>_eac +5)&0x002|((_dab >>_eac +2)&0x010)|((_aeb >>_eac )&0x080)|((_fea >>_eac )&0x400);
};_bed =_cc .RegionBitmap .SetByte (_ae ,byte (_eegf ));if _bed !=nil {return _bed ;};_ae ++;_edg ++;};return nil ;};func (_ce *EndOfStripe )LineNumber ()int {return _ce ._dg };const (TSymbolDictionary Type =0;TIntermediateTextRegion Type =4;TImmediateTextRegion Type =6;
TImmediateLosslessTextRegion Type =7;TPatternDictionary Type =16;TIntermediateHalftoneRegion Type =20;TImmediateHalftoneRegion Type =22;TImmediateLosslessHalftoneRegion Type =23;TIntermediateGenericRegion Type =36;TImmediateGenericRegion Type =38;TImmediateLosslessGenericRegion Type =39;
TIntermediateGenericRefinementRegion Type =40;TImmediateGenericRefinementRegion Type =42;TImmediateLosslessGenericRefinementRegion Type =43;TPageInformation Type =48;TEndOfPage Type =49;TEndOfStrip Type =50;TEndOfFile Type =51;TProfiles Type =52;TTables Type =53;
TExtension Type =62;TBitmap Type =70;);func (_gfeec *Header )CleanSegmentData (){if _gfeec .SegmentData !=nil {_gfeec .SegmentData =nil ;};};func (_dfag *GenericRegion )computeSegmentDataStructure ()error {_dfag .DataOffset =_dfag ._aga .StreamPosition ();
_dfag .DataHeaderLength =_dfag .DataOffset -_dfag .DataHeaderOffset ;_dfag .DataLength =int64 (_dfag ._aga .Length ())-_dfag .DataHeaderLength ;return nil ;};func (_aggd *Header )readReferredToSegmentNumbers (_degg _g .StreamReader ,_afd int )([]int ,error ){const _dffa ="\u0072\u0065\u0061\u0064R\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053e\u0067m\u0065\u006e\u0074\u004e\u0075\u006d\u0062e\u0072\u0073";
_daff :=make ([]int ,_afd );if _afd > 0{_aggd .RTSegments =make ([]*Header ,_afd );var (_ebbc uint64 ;_eeaf error ;);for _ebga :=0;_ebga < _afd ;_ebga ++{_ebbc ,_eeaf =_degg .ReadBits (byte (_aggd .referenceSize ())<<3);if _eeaf !=nil {return nil ,_ff .Wrapf (_eeaf ,_dffa ,"\u0027\u0025\u0064\u0027 \u0072\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0020\u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u0075\u006db\u0065\u0072",_ebga );
};_daff [_ebga ]=int (_ebbc &_e .MaxInt32 );};};return _daff ,nil ;};func (_eed *PageInformationSegment )readCombinationOperatorOverrideAllowed ()error {_defa ,_ceab :=_eed ._cefa .ReadBit ();if _ceab !=nil {return _ceab ;};if _defa ==1{_eed ._fef =true ;
};return nil ;};func (_dea *GenericRegion )decodeSLTP ()(int ,error ){switch _dea .GBTemplate {case 0:_dea ._afe .SetIndex (0x9B25);case 1:_dea ._afe .SetIndex (0x795);case 2:_dea ._afe .SetIndex (0xE5);case 3:_dea ._afe .SetIndex (0x195);};return _dea ._ggb .DecodeBit (_dea ._afe );
};func (_edadd *SymbolDictionary )Encode (w _g .BinaryWriter )(_cffc int ,_fagg error ){const _eede ="\u0053\u0079\u006dbo\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0045\u006e\u0063\u006f\u0064\u0065";if _edadd ==nil {return 0,_ff .Error (_eede ,"\u0073\u0079m\u0062\u006f\u006c\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066in\u0065\u0064");
};if _cffc ,_fagg =_edadd .encodeFlags (w );_fagg !=nil {return _cffc ,_ff .Wrap (_fagg ,_eede ,"");};_gaga ,_fagg :=_edadd .encodeATFlags (w );if _fagg !=nil {return _cffc ,_ff .Wrap (_fagg ,_eede ,"");};_cffc +=_gaga ;if _gaga ,_fagg =_edadd .encodeRefinementATFlags (w );
_fagg !=nil {return _cffc ,_ff .Wrap (_fagg ,_eede ,"");};_cffc +=_gaga ;if _gaga ,_fagg =_edadd .encodeNumSyms (w );_fagg !=nil {return _cffc ,_ff .Wrap (_fagg ,_eede ,"");};_cffc +=_gaga ;if _gaga ,_fagg =_edadd .encodeSymbols (w );_fagg !=nil {return _cffc ,_ff .Wrap (_fagg ,_eede ,"");
};_cffc +=_gaga ;return _cffc ,nil ;};func (_eeba *SymbolDictionary )getToExportFlags ()([]int ,error ){var (_cgbb int ;_gacb int32 ;_bbcg error ;_bgdf =int32 (_eeba ._dcfe +_eeba .NumberOfNewSymbols );_acee =make ([]int ,_bgdf ););for _dbbe :=int32 (0);
_dbbe < _bgdf ;_dbbe +=_gacb {if _eeba .IsHuffmanEncoded {_ceca ,_gebgg :=_cff .GetStandardTable (1);if _gebgg !=nil {return nil ,_gebgg ;};_ddfc ,_gebgg :=_ceca .Decode (_eeba ._cacc );if _gebgg !=nil {return nil ,_gebgg ;};_gacb =int32 (_ddfc );}else {_gacb ,_bbcg =_eeba ._fdef .DecodeInt (_eeba ._decc );
if _bbcg !=nil {return nil ,_bbcg ;};};if _gacb !=0{for _fdb :=_dbbe ;_fdb < _dbbe +_gacb ;_fdb ++{_acee [_fdb ]=_cgbb ;};};if _cgbb ==0{_cgbb =1;}else {_cgbb =0;};};return _acee ,nil ;};func (_bgeb *SymbolDictionary )setInSyms ()error {if _bgeb .Header .RTSegments !=nil {return _bgeb .retrieveImportSymbols ();
};_bgeb ._bedb =make ([]*_bd .Bitmap ,0);return nil ;};func (_fdfc *TableSegment )HtLow ()int32 {return _fdfc ._ffdg };func (_edaaf *SymbolDictionary )encodeFlags (_bgbf _g .BinaryWriter )(_bdbb int ,_eedef error ){const _fgaa ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _eedef =_bgbf .SkipBits (3);_eedef !=nil {return 0,_ff .Wrap (_eedef ,_fgaa ,"\u0065\u006d\u0070\u0074\u0079\u0020\u0062\u0069\u0074\u0073");};var _ggef int ;if _edaaf .SdrTemplate > 0{_ggef =1;};if _eedef =_bgbf .WriteBit (_ggef );_eedef !=nil {return _bdbb ,_ff .Wrap (_eedef ,_fgaa ,"s\u0064\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");
};_ggef =0;if _edaaf .SdTemplate > 1{_ggef =1;};if _eedef =_bgbf .WriteBit (_ggef );_eedef !=nil {return _bdbb ,_ff .Wrap (_eedef ,_fgaa ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_ggef =0;if _edaaf .SdTemplate ==1||_edaaf .SdTemplate ==3{_ggef =1;
};if _eedef =_bgbf .WriteBit (_ggef );_eedef !=nil {return _bdbb ,_ff .Wrap (_eedef ,_fgaa ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_ggef =0;if _edaaf ._gfeae {_ggef =1;};if _eedef =_bgbf .WriteBit (_ggef );_eedef !=nil {return _bdbb ,_ff .Wrap (_eedef ,_fgaa ,"\u0063\u006f\u0064in\u0067\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0065\u0064");
};_ggef =0;if _edaaf ._afceb {_ggef =1;};if _eedef =_bgbf .WriteBit (_ggef );_eedef !=nil {return _bdbb ,_ff .Wrap (_eedef ,_fgaa ,"\u0063\u006f\u0064\u0069ng\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0075\u0073\u0065\u0064");};_ggef =0;if _edaaf .SdHuffAggInstanceSelection {_ggef =1;
};if _eedef =_bgbf .WriteBit (_ggef );_eedef !=nil {return _bdbb ,_ff .Wrap (_eedef ,_fgaa ,"\u0073\u0064\u0048\u0075\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074");};_ggef =int (_edaaf .SdHuffBMSizeSelection );if _eedef =_bgbf .WriteBit (_ggef );
_eedef !=nil {return _bdbb ,_ff .Wrap (_eedef ,_fgaa ,"\u0073\u0064\u0048u\u0066\u0066\u0042\u006d\u0053\u0069\u007a\u0065");};_ggef =0;if _edaaf .SdHuffDecodeWidthSelection > 1{_ggef =1;};if _eedef =_bgbf .WriteBit (_ggef );_eedef !=nil {return _bdbb ,_ff .Wrap (_eedef ,_fgaa ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");
};_ggef =0;switch _edaaf .SdHuffDecodeWidthSelection {case 1,3:_ggef =1;};if _eedef =_bgbf .WriteBit (_ggef );_eedef !=nil {return _bdbb ,_ff .Wrap (_eedef ,_fgaa ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_ggef =0;if _edaaf .SdHuffDecodeHeightSelection > 1{_ggef =1;
};if _eedef =_bgbf .WriteBit (_ggef );_eedef !=nil {return _bdbb ,_ff .Wrap (_eedef ,_fgaa ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_ggef =0;switch _edaaf .SdHuffDecodeHeightSelection {case 1,3:_ggef =1;};if _eedef =_bgbf .WriteBit (_ggef );
_eedef !=nil {return _bdbb ,_ff .Wrap (_eedef ,_fgaa ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_ggef =0;if _edaaf .UseRefinementAggregation {_ggef =1;};if _eedef =_bgbf .WriteBit (_ggef );_eedef !=nil {return _bdbb ,_ff .Wrap (_eedef ,_fgaa ,"\u0073\u0064\u0052\u0065\u0066\u0041\u0067\u0067");
};_ggef =0;if _edaaf .IsHuffmanEncoded {_ggef =1;};if _eedef =_bgbf .WriteBit (_ggef );_eedef !=nil {return _bdbb ,_ff .Wrap (_eedef ,_fgaa ,"\u0073\u0064\u0048\u0075\u0066\u0066");};return 2,nil ;};func (_cfgb *Header )readNumberOfReferredToSegments (_aaec _g .StreamReader )(uint64 ,error ){const _bdaa ="\u0072\u0065\u0061\u0064\u004e\u0075\u006d\u0062\u0065\u0072O\u0066\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
_edbc ,_ccbb :=_aaec .ReadBits (3);if _ccbb !=nil {return 0,_ff .Wrap (_ccbb ,_bdaa ,"\u0063\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0072\u0074\u0073");};_edbc &=0xf;var _cdba []byte ;if _edbc <=4{_cdba =make ([]byte ,5);for _dfba :=0;_dfba <=4;_dfba ++{_aagd ,_bcdecg :=_aaec .ReadBit ();
if _bcdecg !=nil {return 0,_ff .Wrap (_bcdecg ,_bdaa ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_cdba [_dfba ]=byte (_aagd );};}else {_edbc ,_ccbb =_aaec .ReadBits (29);if _ccbb !=nil {return 0,_ccbb ;};_edbc &=_e .MaxInt32 ;
_gaeba :=(_edbc +8)>>3;_gaeba <<=3;_cdba =make ([]byte ,_gaeba );var _bedc uint64 ;for _bedc =0;_bedc < _gaeba ;_bedc ++{_ebdf ,_gce :=_aaec .ReadBit ();if _gce !=nil {return 0,_ff .Wrap (_gce ,_bdaa ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");
};_cdba [_bedc ]=byte (_ebdf );};};return _edbc ,nil ;};func (_gafg *PageInformationSegment )readCombinationOperator ()error {_cgdc ,_gccc :=_gafg ._cefa .ReadBits (2);if _gccc !=nil {return _gccc ;};_gafg ._eadc =_bd .CombinationOperator (int (_cgdc ));
return nil ;};func (_dgaef *SymbolDictionary )setSymbolsArray ()error {if _dgaef ._bedb ==nil {if _dgbf :=_dgaef .retrieveImportSymbols ();_dgbf !=nil {return _dgbf ;};};if _dgaef ._ddcgf ==nil {_dgaef ._ddcgf =append (_dgaef ._ddcgf ,_dgaef ._bedb ...);
};return nil ;};func (_efbg *PageInformationSegment )encodeStripingInformation (_dgda _g .BinaryWriter )(_ccgd int ,_efff error ){const _dbbg ="\u0065n\u0063\u006f\u0064\u0065S\u0074\u0072\u0069\u0070\u0069n\u0067I\u006ef\u006f\u0072\u006d\u0061\u0074\u0069\u006fn";
if !_efbg .IsStripe {if _ccgd ,_efff =_dgda .Write ([]byte {0x00,0x00});_efff !=nil {return 0,_ff .Wrap (_efff ,_dbbg ,"n\u006f\u0020\u0073\u0074\u0072\u0069\u0070\u0069\u006e\u0067");};return _ccgd ,nil ;};_babc :=make ([]byte ,2);_f .BigEndian .PutUint16 (_babc ,_efbg .MaxStripeSize |1<<15);
if _ccgd ,_efff =_dgda .Write (_babc );_efff !=nil {return 0,_ff .Wrapf (_efff ,_dbbg ,"\u0073\u0074\u0072i\u0070\u0069\u006e\u0067\u003a\u0020\u0025\u0064",_efbg .MaxStripeSize );};return _ccgd ,nil ;};func (_afag *SymbolDictionary )InitEncode (symbols *_bd .Bitmaps ,symbolList []int ,symbolMap map[int ]int ,unborderSymbols bool )error {const _edag ="S\u0079\u006d\u0062\u006f\u006c\u0044i\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002eI\u006e\u0069\u0074E\u006ec\u006f\u0064\u0065";
_afag .SdATX =[]int8 {3,-3,2,-2};_afag .SdATY =[]int8 {-1,-1,-2,-2};_afag ._fbfb =symbols ;_afag ._febga =make ([]int ,len (symbolList ));copy (_afag ._febga ,symbolList );if len (_afag ._febga )!=_afag ._fbfb .Size (){return _ff .Error (_edag ,"s\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0061\u006e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u004ci\u0073\u0074\u0020\u006f\u0066\u0020\u0064\u0069\u0066\u0066er\u0065\u006e\u0074 \u0073i\u007a\u0065");
};_afag .NumberOfNewSymbols =uint32 (symbols .Size ());_afag .NumberOfExportedSymbols =uint32 (symbols .Size ());_afag ._fgee =symbolMap ;_afag ._fcccc =unborderSymbols ;return nil ;};func (_bbde *TableSegment )Init (h *Header ,r _g .StreamReader )error {_bbde ._afad =r ;
return _bbde .parseHeader ();};func (_eaeg *SymbolDictionary )decodeThroughTextRegion (_fbadd ,_gdcb ,_cbccbe uint32 )error {if _eaeg ._ccbc ==nil {_eaeg ._ccbc =_ecdg (_eaeg ._cacc ,nil );_eaeg ._ccbc .setContexts (_eaeg ._gcagg ,_eae .NewStats (512,1),_eae .NewStats (512,1),_eae .NewStats (512,1),_eae .NewStats (512,1),_eaeg ._efad ,_eae .NewStats (512,1),_eae .NewStats (512,1),_eae .NewStats (512,1),_eae .NewStats (512,1));
};if _gafa :=_eaeg .setSymbolsArray ();_gafa !=nil {return _gafa ;};_eaeg ._ccbc .setParameters (_eaeg ._fdef ,_eaeg .IsHuffmanEncoded ,true ,_fbadd ,_gdcb ,_cbccbe ,1,_eaeg ._dcfe +_eaeg ._ebeb ,0,0,0,1,0,0,0,0,0,0,0,0,0,_eaeg .SdrTemplate ,_eaeg .SdrATX ,_eaeg .SdrATY ,_eaeg ._ddcgf ,_eaeg ._bafc );
return _eaeg .addSymbol (_eaeg ._ccbc );};type templater interface{form (_db ,_dbf ,_faag ,_eba ,_beg int16 )int16 ;setIndex (_agb *_eae .DecoderStats );};func (_fgege *PageInformationSegment )Size ()int {return 19};func (_faac *GenericRegion )overrideAtTemplate3 (_eca ,_aad ,_defe ,_adg ,_fcb int )int {_eca &=0x3EF;
if _faac .GBAtY [0]==0&&_faac .GBAtX [0]>=-int8 (_fcb ){_eca |=(_adg >>uint (7-(int8 (_fcb )+_faac .GBAtX [0]))&0x1)<<4;}else {_eca |=int (_faac .getPixel (_aad +int (_faac .GBAtX [0]),_defe +int (_faac .GBAtY [0])))<<4;};return _eca ;};func (_acf *PageInformationSegment )String ()string {_fac :=&_c .Builder {};
_fac .WriteString ("\u000a\u005b\u0050\u0041G\u0045\u002d\u0049\u004e\u0046\u004f\u0052\u004d\u0041\u0054I\u004fN\u002d\u0053\u0045\u0047\u004d\u0045\u004eT\u005d\u000a");_fac .WriteString (_b .Sprintf ("\u0009\u002d \u0042\u004d\u0048e\u0069\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u000a",_acf .PageBMHeight ));
_fac .WriteString (_b .Sprintf ("\u0009-\u0020B\u004d\u0057\u0069\u0064\u0074\u0068\u003a\u0020\u0025\u0064\u000a",_acf .PageBMWidth ));_fac .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0058\u003a\u0020\u0025\u0064\u000a",_acf .ResolutionX ));
_fac .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0059\u003a\u0020\u0025\u0064\u000a",_acf .ResolutionY ));_fac .WriteString (_b .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0073\u000a",_acf ._eadc ));
_fac .WriteString (_b .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006eO\u0070\u0065\u0072\u0061\u0074\u006f\u0072O\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025v\u000a",_acf ._fef ));_fac .WriteString (_b .Sprintf ("\u0009-\u0020I\u0073\u004c\u006f\u0073\u0073l\u0065\u0073s\u003a\u0020\u0025\u0076\u000a",_acf .IsLossless ));
_fac .WriteString (_b .Sprintf ("\u0009\u002d\u0020R\u0065\u0071\u0075\u0069r\u0065\u0073\u0041\u0075\u0078\u0069\u006ci\u0061\u0072\u0079\u0042\u0075\u0066\u0066\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_acf ._egca ));_fac .WriteString (_b .Sprintf ("\u0009\u002d\u0020M\u0069\u0067\u0068\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0052e\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0076\u000a",_acf ._fce ));
_fac .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0049\u0073\u0053\u0074\u0072\u0069\u0070\u0065\u0064:\u0020\u0025\u0076\u000a",_acf .IsStripe ));_fac .WriteString (_b .Sprintf ("\t\u002d\u0020\u004d\u0061xS\u0074r\u0069\u0070\u0065\u0053\u0069z\u0065\u003a\u0020\u0025\u0076\u000a",_acf .MaxStripeSize ));
return _fac .String ();};func (_bbdee *TextRegion )computeSymbolCodeLength ()error {if _bbdee .IsHuffmanEncoded {return _bbdee .symbolIDCodeLengths ();};_bbdee ._abef =int8 (_e .Ceil (_e .Log (float64 (_bbdee .NumberOfSymbols ))/_e .Log (2)));return nil ;
};func (_abb *GenericRegion )overrideAtTemplate1 (_egbe ,_edf ,_adb ,_dgfad ,_eefg int )int {_egbe &=0x1FF7;if _abb .GBAtY [0]==0&&_abb .GBAtX [0]>=-int8 (_eefg ){_egbe |=(_dgfad >>uint (7-(int8 (_eefg )+_abb .GBAtX [0]))&0x1)<<3;}else {_egbe |=int (_abb .getPixel (_edf +int (_abb .GBAtX [0]),_adb +int (_abb .GBAtY [0])))<<3;
};return _egbe ;};func (_ccd *HalftoneRegion )Init (hd *Header ,r _g .StreamReader )error {_ccd ._edga =r ;_ccd ._bfa =hd ;_ccd .RegionSegment =NewRegionSegment (r );return _ccd .parseHeader ();};func (_fbeg *SymbolDictionary )retrieveImportSymbols ()error {for _ ,_dbgbb :=range _fbeg .Header .RTSegments {if _dbgbb .Type ==0{_dedd ,_bddb :=_dbgbb .GetSegmentData ();
if _bddb !=nil {return _bddb ;};_dcfa ,_eedd :=_dedd .(*SymbolDictionary );if !_eedd {return _b .Errorf ("\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0044\u0061\u0074a\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u003a\u0020%\u0054",_dedd );
};_aedg ,_bddb :=_dcfa .GetDictionary ();if _bddb !=nil {return _b .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064 \u0073\u0065\u0067m\u0065\u006e\u0074 \u0077\u0069t\u0068\u0020\u0069\u006e\u0064\u0065x\u003a %\u0064\u0020\u0067\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0073",_dbgbb .SegmentNumber ,_bddb .Error ());
};_fbeg ._bedb =append (_fbeg ._bedb ,_aedg ...);_fbeg ._dcfe +=_dcfa .NumberOfExportedSymbols ;};};return nil ;};func (_bfce *GenericRegion )String ()string {_gdaa :=&_c .Builder {};_gdaa .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");
_gdaa .WriteString (_bfce .RegionSegment .String ()+"\u000a");_gdaa .WriteString (_b .Sprintf ("\u0009\u002d\u0020Us\u0065\u0045\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_bfce .UseExtTemplates ));
_gdaa .WriteString (_b .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0044\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_bfce .IsTPGDon ));_gdaa .WriteString (_b .Sprintf ("\u0009-\u0020G\u0042\u0054\u0065\u006d\u0070l\u0061\u0074e\u003a\u0020\u0025\u0064\u000a",_bfce .GBTemplate ));
_gdaa .WriteString (_b .Sprintf ("\t\u002d \u0049\u0073\u004d\u004d\u0052\u0045\u006e\u0063o\u0064\u0065\u0064\u003a %\u0076\u000a",_bfce .IsMMREncoded ));_gdaa .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_bfce .GBAtX ));
_gdaa .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_bfce .GBAtY ));_gdaa .WriteString (_b .Sprintf ("\t\u002d \u0047\u0042\u0041\u0074\u004f\u0076\u0065\u0072r\u0069\u0064\u0065\u003a %\u0076\u000a",_bfce .GBAtOverride ));
return _gdaa .String ();};type GenericRefinementRegion struct{_fb templater ;_fbg templater ;_baf _g .StreamReader ;_gd *Header ;RegionInfo *RegionSegment ;IsTPGROn bool ;TemplateID int8 ;Template templater ;GrAtX []int8 ;GrAtY []int8 ;RegionBitmap *_bd .Bitmap ;
ReferenceBitmap *_bd .Bitmap ;ReferenceDX int32 ;ReferenceDY int32 ;_ee *_eae .Decoder ;_aag *_eae .DecoderStats ;_fa bool ;_eg []bool ;};func (_aaab *PageInformationSegment )readIsStriped ()error {_gbad ,_fccc :=_aaab ._cefa .ReadBit ();if _fccc !=nil {return _fccc ;
};if _gbad ==1{_aaab .IsStripe =true ;};return nil ;};func (_febg *GenericRegion )setOverrideFlag (_afcg int ){_febg .GBAtOverride [_afcg ]=true ;_febg ._baa =true ;};func (_ddbc *TextRegion )checkInput ()error {const _fgaae ="\u0063\u0068\u0065\u0063\u006b\u0049\u006e\u0070\u0075\u0074";
if !_ddbc .UseRefinement {if _ddbc .SbrTemplate !=0{_ab .Log .Debug ("\u0053\u0062\u0072Te\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_ddbc .SbrTemplate =0;};};if _ddbc .SbHuffFS ==2||_ddbc .SbHuffRDWidth ==2||_ddbc .SbHuffRDHeight ==2||_ddbc .SbHuffRDX ==2||_ddbc .SbHuffRDY ==2{return _ff .Error (_fgaae ,"h\u0075\u0066\u0066\u006d\u0061\u006e \u0066\u006c\u0061\u0067\u0020\u0076a\u006c\u0075\u0065\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074e\u0064");
};if !_ddbc .UseRefinement {if _ddbc .SbHuffRSize !=0{_ab .Log .Debug ("\u0053\u0062\u0048uf\u0066\u0052\u0053\u0069\u007a\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_ddbc .SbHuffRSize =0;};if _ddbc .SbHuffRDY !=0{_ab .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044Y\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");
_ddbc .SbHuffRDY =0;};if _ddbc .SbHuffRDX !=0{_ab .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044X\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_ddbc .SbHuffRDX =0;};if _ddbc .SbHuffRDWidth !=0{_ab .Log .Debug ("\u0053b\u0048\u0075\u0066\u0066R\u0044\u0057\u0069\u0064\u0074h\u0020s\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u00200");
_ddbc .SbHuffRDWidth =0;};if _ddbc .SbHuffRDHeight !=0{_ab .Log .Debug ("\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069g\u0068\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0030");_ddbc .SbHuffRDHeight =0;};};return nil ;
};func (_ddfd *PageInformationSegment )CombinationOperatorOverrideAllowed ()bool {return _ddfd ._fef };func (_begd *GenericRegion )setParameters (_ebea bool ,_fbdc ,_ebca int64 ,_ded ,_cbcd uint32 ){_begd .IsMMREncoded =_ebea ;_begd .DataOffset =_fbdc ;
_begd .DataLength =_ebca ;_begd .RegionSegment .BitmapHeight =_ded ;_begd .RegionSegment .BitmapWidth =_cbcd ;_begd ._aabg =nil ;_begd .Bitmap =nil ;};type template1 struct{};func (_de *EndOfStripe )Init (h *Header ,r _g .StreamReader )error {_de ._ed =r ;
return _de .parseHeader (h ,r );};func (_ffad *Header )readHeaderFlags ()error {const _fca ="\u0072e\u0061d\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006c\u0061\u0067\u0073";_dabe ,_aegb :=_ffad .Reader .ReadBit ();if _aegb !=nil {return _ff .Wrap (_aegb ,_fca ,"r\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067");
};if _dabe !=0{_ffad .RetainFlag =true ;};_dabe ,_aegb =_ffad .Reader .ReadBit ();if _aegb !=nil {return _ff .Wrap (_aegb ,_fca ,"\u0070\u0061g\u0065\u0020\u0061s\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e");};if _dabe !=0{_ffad .PageAssociationFieldSize =true ;
};_cfbba ,_aegb :=_ffad .Reader .ReadBits (6);if _aegb !=nil {return _ff .Wrap (_aegb ,_fca ,"\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065");};_ffad .Type =Type (int (_cfbba ));return nil ;};func (_adf *Header )referenceSize ()uint {switch {case _adf .SegmentNumber <=255:return 1;
case _adf .SegmentNumber <=65535:return 2;default:return 4;};};func (_fgbag *TextRegion )decodeSymbolInstances ()error {_ggce ,_egadb :=_fgbag .decodeStripT ();if _egadb !=nil {return _egadb ;};var (_edcc int64 ;_gdgba uint32 ;);for _gdgba < _fgbag .NumberOfSymbolInstances {_beeag ,_ggab :=_fgbag .decodeDT ();
if _ggab !=nil {return _ggab ;};_ggce +=_beeag ;var _bfdge int64 ;_dabf :=true ;_fgbag ._bdfg =0;for {if _dabf {_bfdge ,_ggab =_fgbag .decodeDfs ();if _ggab !=nil {return _ggab ;};_edcc +=_bfdge ;_fgbag ._bdfg =_edcc ;_dabf =false ;}else {_ebac ,_dcfag :=_fgbag .decodeIds ();
if _bg .Is (_dcfag ,_gc .ErrOOB ){break ;};if _dcfag !=nil {return _dcfag ;};if _gdgba >=_fgbag .NumberOfSymbolInstances {break ;};_fgbag ._bdfg +=_ebac +int64 (_fgbag .SbDsOffset );};_dfbg ,_ceec :=_fgbag .decodeCurrentT ();if _ceec !=nil {return _ceec ;
};_agef :=_ggce +_dfbg ;_acdf ,_ceec :=_fgbag .decodeID ();if _ceec !=nil {return _ceec ;};_egbb ,_ceec :=_fgbag .decodeRI ();if _ceec !=nil {return _ceec ;};_fgbc ,_ceec :=_fgbag .decodeIb (_egbb ,_acdf );if _ceec !=nil {return _ceec ;};if _ceec =_fgbag .blit (_fgbc ,_agef );
_ceec !=nil {return _ceec ;};_gdgba ++;};};return nil ;};func (_dcc *GenericRefinementRegion )String ()string {_aeg :=&_c .Builder {};_aeg .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_aeg .WriteString (_dcc .RegionInfo .String ()+"\u000a");
_aeg .WriteString (_b .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0052\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_dcc .IsTPGROn ));_aeg .WriteString (_b .Sprintf ("\u0009-\u0020T\u0065\u006d\u0070\u006c\u0061t\u0065\u0049D\u003a\u0020\u0025\u0076\u000a",_dcc .TemplateID ));
_aeg .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_dcc .GrAtX ));_aeg .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_dcc .GrAtY ));
_aeg .WriteString (_b .Sprintf ("\u0009-\u0020R\u0065\u0066\u0065\u0072\u0065n\u0063\u0065D\u0058\u0020\u0025\u0076\u000a",_dcc .ReferenceDX ));_aeg .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0052ef\u0065\u0072\u0065\u006e\u0063\u0044\u0065\u0059\u003a\u0020\u0025\u0076\u000a",_dcc .ReferenceDY ));
return _aeg .String ();};func (_cbba *template0 )form (_fbad ,_cfb ,_daec ,_ebg ,_fcfb int16 )int16 {return (_fbad <<10)|(_cfb <<7)|(_daec <<4)|(_ebg <<1)|_fcfb ;};func (_cfcf *HalftoneRegion )parseHeader ()error {if _bgcb :=_cfcf .RegionSegment .parseHeader ();
_bgcb !=nil {return _bgcb ;};_abd ,_gdfb :=_cfcf ._edga .ReadBit ();if _gdfb !=nil {return _gdfb ;};_cfcf .HDefaultPixel =int8 (_abd );_dfcc ,_gdfb :=_cfcf ._edga .ReadBits (3);if _gdfb !=nil {return _gdfb ;};_cfcf .CombinationOperator =_bd .CombinationOperator (_dfcc &0xf);
_abd ,_gdfb =_cfcf ._edga .ReadBit ();if _gdfb !=nil {return _gdfb ;};if _abd ==1{_cfcf .HSkipEnabled =true ;};_dfcc ,_gdfb =_cfcf ._edga .ReadBits (2);if _gdfb !=nil {return _gdfb ;};_cfcf .HTemplate =byte (_dfcc &0xf);_abd ,_gdfb =_cfcf ._edga .ReadBit ();
if _gdfb !=nil {return _gdfb ;};if _abd ==1{_cfcf .IsMMREncoded =true ;};_dfcc ,_gdfb =_cfcf ._edga .ReadBits (32);if _gdfb !=nil {return _gdfb ;};_cfcf .HGridWidth =uint32 (_dfcc &_e .MaxUint32 );_dfcc ,_gdfb =_cfcf ._edga .ReadBits (32);if _gdfb !=nil {return _gdfb ;
};_cfcf .HGridHeight =uint32 (_dfcc &_e .MaxUint32 );_dfcc ,_gdfb =_cfcf ._edga .ReadBits (32);if _gdfb !=nil {return _gdfb ;};_cfcf .HGridX =int32 (_dfcc &_e .MaxInt32 );_dfcc ,_gdfb =_cfcf ._edga .ReadBits (32);if _gdfb !=nil {return _gdfb ;};_cfcf .HGridY =int32 (_dfcc &_e .MaxInt32 );
_dfcc ,_gdfb =_cfcf ._edga .ReadBits (16);if _gdfb !=nil {return _gdfb ;};_cfcf .HRegionX =uint16 (_dfcc &_e .MaxUint16 );_dfcc ,_gdfb =_cfcf ._edga .ReadBits (16);if _gdfb !=nil {return _gdfb ;};_cfcf .HRegionY =uint16 (_dfcc &_e .MaxUint16 );if _gdfb =_cfcf .computeSegmentDataStructure ();
_gdfb !=nil {return _gdfb ;};return _cfcf .checkInput ();};func (_gfa *GenericRegion )InitEncode (bm *_bd .Bitmap ,xLoc ,yLoc ,template int ,duplicateLineRemoval bool )error {const _bfg ="\u0047e\u006e\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069\u006f\u006e.\u0049\u006e\u0069\u0074\u0045\u006e\u0063\u006f\u0064\u0065";
if bm ==nil {return _ff .Error (_bfg ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if xLoc < 0||yLoc < 0{return _ff .Error (_bfg ,"\u0078\u0020\u0061\u006e\u0064\u0020\u0079\u0020\u006c\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074h\u0061\u006e\u0020\u0030");
};_gfa .Bitmap =bm ;_gfa .GBTemplate =byte (template );switch _gfa .GBTemplate {case 0:_gfa .GBAtX =[]int8 {3,-3,2,-2};_gfa .GBAtY =[]int8 {-1,-1,-2,-2};case 1:_gfa .GBAtX =[]int8 {3};_gfa .GBAtY =[]int8 {-1};case 2,3:_gfa .GBAtX =[]int8 {2};_gfa .GBAtY =[]int8 {-1};
default:return _ff .Errorf (_bfg ,"\u0070\u0072o\u0076\u0069\u0064\u0065\u0064 \u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u007b\u0030\u002c\u0031\u002c\u0032\u002c\u0033\u007d",template );
};_gfa .RegionSegment =&RegionSegment {BitmapHeight :uint32 (bm .Height ),BitmapWidth :uint32 (bm .Width ),XLocation :uint32 (xLoc ),YLocation :uint32 (yLoc )};_gfa .IsTPGDon =duplicateLineRemoval ;return nil ;};func NewGenericRegion (r _g .StreamReader )*GenericRegion {return &GenericRegion {RegionSegment :NewRegionSegment (r ),_aga :r };
};func (_dfdeg *TableSegment )StreamReader ()_g .StreamReader {return _dfdeg ._afad };var _ templater =&template0 {};func (_egcf *RegionSegment )parseHeader ()error {const _cacd ="p\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_ab .Log .Trace ("\u005b\u0052\u0045\u0047I\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002dH\u0045A\u0044\u0045\u0052\u005d\u0020\u0042\u0065g\u0069\u006e");
defer func (){_ab .Log .Trace ("\u005b\u0052\u0045G\u0049\u004f\u004e\u005d[\u0050\u0041\u0052\u0053\u0045\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");}();_baeb ,_fgc :=_egcf ._edfd .ReadBits (32);
if _fgc !=nil {return _ff .Wrap (_fgc ,_cacd ,"\u0077\u0069\u0064t\u0068");};_egcf .BitmapWidth =uint32 (_baeb &_e .MaxUint32 );_baeb ,_fgc =_egcf ._edfd .ReadBits (32);if _fgc !=nil {return _ff .Wrap (_fgc ,_cacd ,"\u0068\u0065\u0069\u0067\u0068\u0074");
};_egcf .BitmapHeight =uint32 (_baeb &_e .MaxUint32 );_baeb ,_fgc =_egcf ._edfd .ReadBits (32);if _fgc !=nil {return _ff .Wrap (_fgc ,_cacd ,"\u0078\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_egcf .XLocation =uint32 (_baeb &_e .MaxUint32 );
_baeb ,_fgc =_egcf ._edfd .ReadBits (32);if _fgc !=nil {return _ff .Wrap (_fgc ,_cacd ,"\u0079\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_egcf .YLocation =uint32 (_baeb &_e .MaxUint32 );if _ ,_fgc =_egcf ._edfd .ReadBits (5);_fgc !=nil {return _ff .Wrap (_fgc ,_cacd ,"\u0064i\u0072\u0079\u0020\u0072\u0065\u0061d");
};if _fgc =_egcf .readCombinationOperator ();_fgc !=nil {return _ff .Wrap (_fgc ,_cacd ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};return nil ;};func (_fecb *HalftoneRegion )GetPatterns ()([]*_bd .Bitmap ,error ){var (_cdb []*_bd .Bitmap ;
_fbab error ;);for _ ,_dfge :=range _fecb ._bfa .RTSegments {var _ccc Segmenter ;_ccc ,_fbab =_dfge .GetSegmentData ();if _fbab !=nil {_ab .Log .Debug ("\u0047e\u0074\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061 \u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025v",_fbab );
return nil ,_fbab ;};_caf ,_gcag :=_ccc .(*PatternDictionary );if !_gcag {_fbab =_b .Errorf ("\u0072e\u006c\u0061t\u0065\u0064\u0020\u0073e\u0067\u006d\u0065n\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0070at\u0074\u0065\u0072n\u0020\u0064i\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u003a \u0025\u0054",_ccc );
return nil ,_fbab ;};var _gdc []*_bd .Bitmap ;_gdc ,_fbab =_caf .GetDictionary ();if _fbab !=nil {_ab .Log .Debug ("\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_fbab );
return nil ,_fbab ;};_cdb =append (_cdb ,_gdc ...);};return _cdb ,nil ;};func (_efe *GenericRefinementRegion )readAtPixels ()error {_efe .GrAtX =make ([]int8 ,2);_efe .GrAtY =make ([]int8 ,2);_ega ,_bafg :=_efe ._baf .ReadByte ();if _bafg !=nil {return _bafg ;
};_efe .GrAtX [0]=int8 (_ega );_ega ,_bafg =_efe ._baf .ReadByte ();if _bafg !=nil {return _bafg ;};_efe .GrAtY [0]=int8 (_ega );_ega ,_bafg =_efe ._baf .ReadByte ();if _bafg !=nil {return _bafg ;};_efe .GrAtX [1]=int8 (_ega );_ega ,_bafg =_efe ._baf .ReadByte ();
if _bafg !=nil {return _bafg ;};_efe .GrAtY [1]=int8 (_ega );return nil ;};func (_gbadb *PatternDictionary )computeSegmentDataStructure ()error {_gbadb .DataOffset =_gbadb ._gcga .StreamPosition ();_gbadb .DataHeaderLength =_gbadb .DataOffset -_gbadb .DataHeaderOffset ;
_gbadb .DataLength =int64 (_gbadb ._gcga .Length ())-_gbadb .DataHeaderLength ;return nil ;};func (_deb *Header )writeReferredToSegments (_eee _g .BinaryWriter )(_cedc int ,_gff error ){const _bbf ="\u0077\u0072\u0069te\u0052\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
var (_efcc uint16 ;_caad uint32 ;);_eaa :=_deb .referenceSize ();_cec :=1;_bddgc :=make ([]byte ,_eaa );for _ ,_ecbe :=range _deb .RTSNumbers {switch _eaa {case 4:_caad =uint32 (_ecbe );_f .BigEndian .PutUint32 (_bddgc ,_caad );_cec ,_gff =_eee .Write (_bddgc );
if _gff !=nil {return 0,_ff .Wrap (_gff ,_bbf ,"u\u0069\u006e\u0074\u0033\u0032\u0020\u0073\u0069\u007a\u0065");};case 2:_efcc =uint16 (_ecbe );_f .BigEndian .PutUint16 (_bddgc ,_efcc );_cec ,_gff =_eee .Write (_bddgc );if _gff !=nil {return 0,_ff .Wrap (_gff ,_bbf ,"\u0075\u0069\u006e\u0074\u0031\u0036");
};default:if _gff =_eee .WriteByte (byte (_ecbe ));_gff !=nil {return 0,_ff .Wrap (_gff ,_bbf ,"\u0075\u0069\u006et\u0038");};};_cedc +=_cec ;};return _cedc ,nil ;};func (_adac *TableSegment )HtOOB ()int32 {return _adac ._gccd };func (_caac *SymbolDictionary )Init (h *Header ,r _g .StreamReader )error {_caac .Header =h ;
_caac ._cacc =r ;return _caac .parseHeader ();};func (_dbgb *HalftoneRegion )renderPattern (_cgd [][]int )(_agbc error ){var _efbf ,_dfeg int ;for _bcdb :=0;_bcdb < int (_dbgb .HGridHeight );_bcdb ++{for _afbcg :=0;_afbcg < int (_dbgb .HGridWidth );_afbcg ++{_efbf =_dbgb .computeX (_bcdb ,_afbcg );
_dfeg =_dbgb .computeY (_bcdb ,_afbcg );_dbga :=_dbgb .Patterns [_cgd [_bcdb ][_afbcg ]];if _agbc =_bd .Blit (_dbga ,_dbgb .HalftoneRegionBitmap ,_efbf +int (_dbgb .HGridX ),_dfeg +int (_dbgb .HGridY ),_dbgb .CombinationOperator );_agbc !=nil {return _agbc ;
};};};return nil ;};func (_efce *SymbolDictionary )setRefinementAtPixels ()error {if !_efce .UseRefinementAggregation ||_efce .SdrTemplate !=0{return nil ;};if _fdge :=_efce .readRefinementAtPixels (2);_fdge !=nil {return _fdge ;};return nil ;};type TableSegment struct{_afad _g .StreamReader ;
_gccd int32 ;_gbcd int32 ;_bgfe int32 ;_ffdg int32 ;_faffd int32 ;};func (_gaf *GenericRefinementRegion )updateOverride ()error {if _gaf .GrAtX ==nil ||_gaf .GrAtY ==nil {return _bc .New ("\u0041\u0054\u0020\u0070\u0069\u0078\u0065\u006c\u0073\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");
};if len (_gaf .GrAtX )!=len (_gaf .GrAtY ){return _bc .New ("A\u0054\u0020\u0070\u0069xe\u006c \u0069\u006e\u0063\u006f\u006es\u0069\u0073\u0074\u0065\u006e\u0074");};_gaf ._eg =make ([]bool ,len (_gaf .GrAtX ));switch _gaf .TemplateID {case 0:if _gaf .GrAtX [0]!=-1&&_gaf .GrAtY [0]!=-1{_gaf ._eg [0]=true ;
_gaf ._fa =true ;};if _gaf .GrAtX [1]!=-1&&_gaf .GrAtY [1]!=-1{_gaf ._eg [1]=true ;_gaf ._fa =true ;};case 1:_gaf ._fa =false ;};return nil ;};func (_bgfg *SymbolDictionary )decodeHeightClassDeltaHeight ()(int64 ,error ){if _bgfg .IsHuffmanEncoded {return _bgfg .decodeHeightClassDeltaHeightWithHuffman ();
};_gabf ,_dfbf :=_bgfg ._fdef .DecodeInt (_bgfg ._bddf );if _dfbf !=nil {return 0,_dfbf ;};return int64 (_gabf ),nil ;};func (_cgea *PageInformationSegment )readMaxStripeSize ()error {_fbbf ,_gbeg :=_cgea ._cefa .ReadBits (15);if _gbeg !=nil {return _gbeg ;
};_cgea .MaxStripeSize =uint16 (_fbbf &_e .MaxUint16 );return nil ;};func (_efgg *TextRegion )symbolIDCodeLengths ()error {var (_bbfe []*_cff .Code ;_ffcgc uint64 ;_bdab _cff .Tabler ;_gbge error ;);for _adafc :=0;_adafc < 35;_adafc ++{_ffcgc ,_gbge =_efgg ._aaaa .ReadBits (4);
if _gbge !=nil {return _gbge ;};_aabf :=int (_ffcgc &0xf);if _aabf > 0{_bbfe =append (_bbfe ,_cff .NewCode (int32 (_aabf ),0,int32 (_adafc ),false ));};};_bdab ,_gbge =_cff .NewFixedSizeTable (_bbfe );if _gbge !=nil {return _gbge ;};var (_gega int64 ;_fcbc uint32 ;
_efba []*_cff .Code ;_aaef int64 ;);for _fcbc < _efgg .NumberOfSymbols {_aaef ,_gbge =_bdab .Decode (_efgg ._aaaa );if _gbge !=nil {return _gbge ;};if _aaef < 32{if _aaef > 0{_efba =append (_efba ,_cff .NewCode (int32 (_aaef ),0,int32 (_fcbc ),false ));
};_gega =_aaef ;_fcbc ++;}else {var _caecf ,_eebb int64 ;switch _aaef {case 32:_ffcgc ,_gbge =_efgg ._aaaa .ReadBits (2);if _gbge !=nil {return _gbge ;};_caecf =3+int64 (_ffcgc );if _fcbc > 0{_eebb =_gega ;};case 33:_ffcgc ,_gbge =_efgg ._aaaa .ReadBits (3);
if _gbge !=nil {return _gbge ;};_caecf =3+int64 (_ffcgc );case 34:_ffcgc ,_gbge =_efgg ._aaaa .ReadBits (7);if _gbge !=nil {return _gbge ;};_caecf =11+int64 (_ffcgc );};for _bcec :=0;_bcec < int (_caecf );_bcec ++{if _eebb > 0{_efba =append (_efba ,_cff .NewCode (int32 (_eebb ),0,int32 (_fcbc ),false ));
};_fcbc ++;};};};_efgg ._aaaa .Align ();_efgg ._edcg ,_gbge =_cff .NewFixedSizeTable (_efba );return _gbge ;};type Segmenter interface{Init (_gdab *Header ,_bdae _g .StreamReader )error ;};func (_fbac *GenericRegion )decodeLine (_bdf ,_bacc ,_dcca int )error {const _addb ="\u0064\u0065\u0063\u006f\u0064\u0065\u004c\u0069\u006e\u0065";
_cedd :=_fbac .Bitmap .GetByteIndex (0,_bdf );_cfbb :=_cedd -_fbac .Bitmap .RowStride ;switch _fbac .GBTemplate {case 0:if !_fbac .UseExtTemplates {return _fbac .decodeTemplate0a (_bdf ,_bacc ,_dcca ,_cedd ,_cfbb );};return _fbac .decodeTemplate0b (_bdf ,_bacc ,_dcca ,_cedd ,_cfbb );
case 1:return _fbac .decodeTemplate1 (_bdf ,_bacc ,_dcca ,_cedd ,_cfbb );case 2:return _fbac .decodeTemplate2 (_bdf ,_bacc ,_dcca ,_cedd ,_cfbb );case 3:return _fbac .decodeTemplate3 (_bdf ,_bacc ,_dcca ,_cedd ,_cfbb );};return _ff .Errorf (_addb ,"\u0069\u006e\u0076a\u006c\u0069\u0064\u0020G\u0042\u0054\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u003a\u0020\u0025\u0064",_fbac .GBTemplate );
};func (_eb *GenericRefinementRegion )decodeOptimized (_ada ,_aagc ,_daf ,_cfd ,_egb ,_dgc ,_eeg int )error {var (_add error ;_aba int ;_cfc int ;);_fba :=_ada -int (_eb .ReferenceDY );if _ffg :=int (-_eb .ReferenceDX );_ffg > 0{_aba =_ffg ;};_addc :=_eb .ReferenceBitmap .GetByteIndex (_aba ,_fba );
if _eb .ReferenceDX > 0{_cfc =int (_eb .ReferenceDX );};_ffa :=_eb .RegionBitmap .GetByteIndex (_cfc ,_ada );switch _eb .TemplateID {case 0:_add =_eb .decodeTemplate (_ada ,_aagc ,_daf ,_cfd ,_egb ,_dgc ,_eeg ,_ffa ,_fba ,_addc ,_eb ._fb );case 1:_add =_eb .decodeTemplate (_ada ,_aagc ,_daf ,_cfd ,_egb ,_dgc ,_eeg ,_ffa ,_fba ,_addc ,_eb ._fbg );
};return _add ;};func (_dgd *GenericRefinementRegion )Init (header *Header ,r _g .StreamReader )error {_dgd ._gd =header ;_dgd ._baf =r ;_dgd .RegionInfo =NewRegionSegment (r );return _dgd .parseHeader ();};func (_bgg *Header )readSegmentNumber (_baed _g .StreamReader )error {const _fbf ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";
_afbf :=make ([]byte ,4);_ ,_ddage :=_baed .Read (_afbf );if _ddage !=nil {return _ff .Wrap (_ddage ,_fbf ,"");};_bgg .SegmentNumber =_f .BigEndian .Uint32 (_afbf );return nil ;};func (_bcg *PageInformationSegment )readDefaultPixelValue ()error {_gec ,_dgec :=_bcg ._cefa .ReadBit ();
if _dgec !=nil {return _dgec ;};_bcg .DefaultPixelValue =uint8 (_gec &0xf);return nil ;};func (_cbf *Header )writeReferredToCount (_bafa _g .BinaryWriter )(_eff int ,_cbfe error ){const _ggea ="w\u0072i\u0074\u0065\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0043ou\u006e\u0074";
_cbf .RTSNumbers =make ([]int ,len (_cbf .RTSegments ));for _aggab ,_ceaa :=range _cbf .RTSegments {_cbf .RTSNumbers [_aggab ]=int (_ceaa .SegmentNumber );};if len (_cbf .RTSNumbers )<=4{var _ddgdc byte ;if len (_cbf .RetainBits )>=1{_ddgdc =_cbf .RetainBits [0];
};_ddgdc |=byte (len (_cbf .RTSNumbers ))<<5;if _cbfe =_bafa .WriteByte (_ddgdc );_cbfe !=nil {return 0,_ff .Wrap (_cbfe ,_ggea ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return 1,nil ;};_adc :=uint32 (len (_cbf .RTSNumbers ));
_eegb :=make ([]byte ,4+_cf .Ceil (len (_cbf .RTSNumbers )+1,8));_adc |=0x7<<29;_f .BigEndian .PutUint32 (_eegb ,_adc );copy (_eegb [1:],_cbf .RetainBits );_eff ,_cbfe =_bafa .Write (_eegb );if _cbfe !=nil {return 0,_ff .Wrap (_cbfe ,_ggea ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");
};return _eff ,nil ;};func (_acdga *TextRegion )readUseRefinement ()error {if !_acdga .UseRefinement ||_acdga .SbrTemplate !=0{return nil ;};var (_eecag byte ;_gcecgg error ;);_acdga .SbrATX =make ([]int8 ,2);_acdga .SbrATY =make ([]int8 ,2);_eecag ,_gcecgg =_acdga ._aaaa .ReadByte ();
if _gcecgg !=nil {return _gcecgg ;};_acdga .SbrATX [0]=int8 (_eecag );_eecag ,_gcecgg =_acdga ._aaaa .ReadByte ();if _gcecgg !=nil {return _gcecgg ;};_acdga .SbrATY [0]=int8 (_eecag );_eecag ,_gcecgg =_acdga ._aaaa .ReadByte ();if _gcecgg !=nil {return _gcecgg ;
};_acdga .SbrATX [1]=int8 (_eecag );_eecag ,_gcecgg =_acdga ._aaaa .ReadByte ();if _gcecgg !=nil {return _gcecgg ;};_acdga .SbrATY [1]=int8 (_eecag );return nil ;};func (_aff *template1 )form (_gcc ,_eefc ,_afbg ,_bbe ,_dba int16 )int16 {return ((_gcc &0x02)<<8)|(_eefc <<6)|((_afbg &0x03)<<4)|(_bbe <<1)|_dba ;
};func (_gee *GenericRefinementRegion )overrideAtTemplate0 (_gae ,_faf ,_dfd ,_eeb ,_afa int )int {if _gee ._eg [0]{_gae &=0xfff7;if _gee .GrAtY [0]==0&&int (_gee .GrAtX [0])>=-_afa {_gae |=(_eeb >>uint (7-(_afa +int (_gee .GrAtX [0])))&0x1)<<3;}else {_gae |=_gee .getPixel (_gee .RegionBitmap ,_faf +int (_gee .GrAtX [0]),_dfd +int (_gee .GrAtY [0]))<<3;
};};if _gee ._eg [1]{_gae &=0xefff;if _gee .GrAtY [1]==0&&int (_gee .GrAtX [1])>=-_afa {_gae |=(_eeb >>uint (7-(_afa +int (_gee .GrAtX [1])))&0x1)<<12;}else {_gae |=_gee .getPixel (_gee .ReferenceBitmap ,_faf +int (_gee .GrAtX [1]),_dfd +int (_gee .GrAtY [1]));
};};return _gae ;};func (_dec *GenericRefinementRegion )getGrReference ()(*_bd .Bitmap ,error ){segments :=_dec ._gd .RTSegments ;if len (segments )==0{return nil ,_bc .New ("\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0065\u0078is\u0074\u0073");
};_cbd ,_ac :=segments [0].GetSegmentData ();if _ac !=nil {return nil ,_ac ;};_feb ,_gfg :=_cbd .(Regioner );if !_gfg {return nil ,_b .Errorf ("\u0072\u0065\u0066\u0065\u0072r\u0065\u0064\u0020\u0074\u006f\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_cbd );
};return _feb .GetRegionBitmap ();};func (_dbfb *GenericRegion )overrideAtTemplate0a (_cgg ,_agf ,_ccag ,_fgf ,_ace ,_dbee int )int {if _dbfb .GBAtOverride [0]{_cgg &=0xFFEF;if _dbfb .GBAtY [0]==0&&_dbfb .GBAtX [0]>=-int8 (_ace ){_cgg |=(_fgf >>uint (int8 (_dbee )-_dbfb .GBAtX [0]&0x1))<<4;
}else {_cgg |=int (_dbfb .getPixel (_agf +int (_dbfb .GBAtX [0]),_ccag +int (_dbfb .GBAtY [0])))<<4;};};if _dbfb .GBAtOverride [1]{_cgg &=0xFBFF;if _dbfb .GBAtY [1]==0&&_dbfb .GBAtX [1]>=-int8 (_ace ){_cgg |=(_fgf >>uint (int8 (_dbee )-_dbfb .GBAtX [1]&0x1))<<10;
}else {_cgg |=int (_dbfb .getPixel (_agf +int (_dbfb .GBAtX [1]),_ccag +int (_dbfb .GBAtY [1])))<<10;};};if _dbfb .GBAtOverride [2]{_cgg &=0xF7FF;if _dbfb .GBAtY [2]==0&&_dbfb .GBAtX [2]>=-int8 (_ace ){_cgg |=(_fgf >>uint (int8 (_dbee )-_dbfb .GBAtX [2]&0x1))<<11;
}else {_cgg |=int (_dbfb .getPixel (_agf +int (_dbfb .GBAtX [2]),_ccag +int (_dbfb .GBAtY [2])))<<11;};};if _dbfb .GBAtOverride [3]{_cgg &=0x7FFF;if _dbfb .GBAtY [3]==0&&_dbfb .GBAtX [3]>=-int8 (_ace ){_cgg |=(_fgf >>uint (int8 (_dbee )-_dbfb .GBAtX [3]&0x1))<<15;
}else {_cgg |=int (_dbfb .getPixel (_agf +int (_dbfb .GBAtX [3]),_ccag +int (_dbfb .GBAtY [3])))<<15;};};return _cgg ;};func (_dage *GenericRefinementRegion )decodeTypicalPredictedLineTemplate1 (_egf ,_bdd ,_bdda ,_bea ,_fec ,_bb ,_cce ,_gfe ,_bacf int )(_aafe error ){var (_cba ,_dcg int ;
_geg ,_acaf int ;_dfa ,_abc int ;_gfc byte ;);if _egf > 0{_gfc ,_aafe =_dage .RegionBitmap .GetByte (_cce -_bdda );if _aafe !=nil {return ;};_geg =int (_gfc );};if _gfe > 0&&_gfe <=_dage .ReferenceBitmap .Height {_gfc ,_aafe =_dage .ReferenceBitmap .GetByte (_bacf -_bea +_bb );
if _aafe !=nil {return ;};_acaf =int (_gfc )<<2;};if _gfe >=0&&_gfe < _dage .ReferenceBitmap .Height {_gfc ,_aafe =_dage .ReferenceBitmap .GetByte (_bacf +_bb );if _aafe !=nil {return ;};_dfa =int (_gfc );};if _gfe > -2&&_gfe < _dage .ReferenceBitmap .Height -1{_gfc ,_aafe =_dage .ReferenceBitmap .GetByte (_bacf +_bea +_bb );
if _aafe !=nil {return ;};_abc =int (_gfc );};_cba =((_geg >>5)&0x6)|((_abc >>2)&0x30)|(_dfa &0xc0)|(_acaf &0x200);_dcg =((_abc >>2)&0x70)|(_dfa &0xc0)|(_acaf &0x700);var _bfd int ;for _cfcc :=0;_cfcc < _fec ;_cfcc =_bfd {var (_cbb int ;_aec int ;);_bfd =_cfcc +8;
if _cbb =_bdd -_cfcc ;_cbb > 8{_cbb =8;};_fbc :=_bfd < _bdd ;_cfcd :=_bfd < _dage .ReferenceBitmap .Width ;_gga :=_bb +1;if _egf > 0{_gfc =0;if _fbc {_gfc ,_aafe =_dage .RegionBitmap .GetByte (_cce -_bdda +1);if _aafe !=nil {return ;};};_geg =(_geg <<8)|int (_gfc );
};if _gfe > 0&&_gfe <=_dage .ReferenceBitmap .Height {var _bfc int ;if _cfcd {_gfc ,_aafe =_dage .ReferenceBitmap .GetByte (_bacf -_bea +_gga );if _aafe !=nil {return ;};_bfc =int (_gfc )<<2;};_acaf =(_acaf <<8)|_bfc ;};if _gfe >=0&&_gfe < _dage .ReferenceBitmap .Height {_gfc =0;
if _cfcd {_gfc ,_aafe =_dage .ReferenceBitmap .GetByte (_bacf +_gga );if _aafe !=nil {return ;};};_dfa =(_dfa <<8)|int (_gfc );};if _gfe > -2&&_gfe < (_dage .ReferenceBitmap .Height -1){_gfc =0;if _cfcd {_gfc ,_aafe =_dage .ReferenceBitmap .GetByte (_bacf +_bea +_gga );
if _aafe !=nil {return ;};};_abc =(_abc <<8)|int (_gfc );};for _dce :=0;_dce < _cbb ;_dce ++{var _bfe int ;_caa :=(_dcg >>4)&0x1ff;switch _caa {case 0x1ff:_bfe =1;case 0x00:_bfe =0;default:_dage ._aag .SetIndex (int32 (_cba ));_bfe ,_aafe =_dage ._ee .DecodeBit (_dage ._aag );
if _aafe !=nil {return ;};};_aece :=uint (7-_dce );_aec |=_bfe <<_aece ;_cba =((_cba &0x0d6)<<1)|_bfe |(_geg >>_aece +5)&0x002|((_abc >>_aece +2)&0x010)|((_dfa >>_aece )&0x040)|((_acaf >>_aece )&0x200);_dcg =((_dcg &0xdb)<<1)|((_abc >>_aece +2)&0x010)|((_dfa >>_aece )&0x080)|((_acaf >>_aece )&0x400);
};_aafe =_dage .RegionBitmap .SetByte (_cce ,byte (_aec ));if _aafe !=nil {return ;};_cce ++;_bacf ++;};return nil ;};func (_cfcfc *PageInformationSegment )encodeFlags (_cece _g .BinaryWriter )(_adda error ){const _egbf ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _adda =_cece .SkipBits (1);_adda !=nil {return _ff .Wrap (_adda ,_egbf ,"\u0072\u0065\u0073e\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074");};var _aeef int ;if _cfcfc .CombinationOperatorOverrideAllowed (){_aeef =1;};if _adda =_cece .WriteBit (_aeef );
_adda !=nil {return _ff .Wrap (_adda ,_egbf ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0064\u0065\u006e");};_aeef =0;if _cfcfc ._egca {_aeef =1;
};if _adda =_cece .WriteBit (_aeef );_adda !=nil {return _ff .Wrap (_adda ,_egbf ,"\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0061\u0075\u0078i\u006ci\u0061r\u0079\u0020\u0062\u0075\u0066\u0066\u0065r");};if _adda =_cece .WriteBit ((int (_cfcfc ._eadc )>>1)&0x01);
_adda !=nil {return _ff .Wrap (_adda ,_egbf ,"\u0063\u006f\u006d\u0062\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006f\u0070\u0065\u0072\u0061\u0074o\u0072\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0062\u0069\u0074");};if _adda =_cece .WriteBit (int (_cfcfc ._eadc )&0x01);
_adda !=nil {return _ff .Wrap (_adda ,_egbf ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0062\u0069\u0074");};_aeef =int (_cfcfc .DefaultPixelValue );
if _adda =_cece .WriteBit (_aeef );_adda !=nil {return _ff .Wrap (_adda ,_egbf ,"\u0064e\u0066\u0061\u0075\u006c\u0074\u0020\u0070\u0061\u0067\u0065\u0020p\u0069\u0078\u0065\u006c\u0020\u0076\u0061\u006c\u0075\u0065");};_aeef =0;if _cfcfc ._fce {_aeef =1;
};if _adda =_cece .WriteBit (_aeef );_adda !=nil {return _ff .Wrap (_adda ,_egbf ,"\u0063\u006f\u006e\u0074ai\u006e\u0073\u0020\u0072\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074");};_aeef =0;if _cfcfc .IsLossless {_aeef =1;};if _adda =_cece .WriteBit (_aeef );
_adda !=nil {return _ff .Wrap (_adda ,_egbf ,"p\u0061\u0067\u0065\u0020\u0069\u0073 \u0065\u0076\u0065\u006e\u0074\u0075\u0061\u006c\u006cy\u0020\u006c\u006fs\u0073l\u0065\u0073\u0073");};return nil ;};func _ecdg (_eafga _g .StreamReader ,_cebgb *Header )*TextRegion {_faed :=&TextRegion {_aaaa :_eafga ,Header :_cebgb ,RegionInfo :NewRegionSegment (_eafga )};
return _faed ;};func (_bcdf *GenericRegion )readGBAtPixels (_cef int )error {const _bdff ="\u0072\u0065\u0061\u0064\u0047\u0042\u0041\u0074\u0050i\u0078\u0065\u006c\u0073";_bcdf .GBAtX =make ([]int8 ,_cef );_bcdf .GBAtY =make ([]int8 ,_cef );for _befc :=0;
_befc < _cef ;_befc ++{_cfgf ,_gfce :=_bcdf ._aga .ReadByte ();if _gfce !=nil {return _ff .Wrapf (_gfce ,_bdff ,"\u0058\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_befc );};_bcdf .GBAtX [_befc ]=int8 (_cfgf );_cfgf ,_gfce =_bcdf ._aga .ReadByte ();
if _gfce !=nil {return _ff .Wrapf (_gfce ,_bdff ,"\u0059\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_befc );};_bcdf .GBAtY [_befc ]=int8 (_cfgf );};return nil ;};func (_ffde *PageInformationSegment )readResolution ()error {_bdcc ,_cfag :=_ffde ._cefa .ReadBits (32);
if _cfag !=nil {return _cfag ;};_ffde .ResolutionX =int (_bdcc &_e .MaxInt32 );_bdcc ,_cfag =_ffde ._cefa .ReadBits (32);if _cfag !=nil {return _cfag ;};_ffde .ResolutionY =int (_bdcc &_e .MaxInt32 );return nil ;};func (_bfdf *TextRegion )Init (header *Header ,r _g .StreamReader )error {_bfdf .Header =header ;
_bfdf ._aaaa =r ;_bfdf .RegionInfo =NewRegionSegment (_bfdf ._aaaa );return _bfdf .parseHeader ();};type EndOfStripe struct{_ed _g .StreamReader ;_dg int ;};func (_cdgf *SymbolDictionary )encodeSymbols (_eaba _g .BinaryWriter )(_fgbaa int ,_afcf error ){const _cdgc ="\u0065\u006e\u0063o\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c";
_bdffd :=_d .New ();_bdffd .Init ();_bacfa ,_afcf :=_cdgf ._fbfb .SelectByIndexes (_cdgf ._febga );if _afcf !=nil {return 0,_ff .Wrap (_afcf ,_cdgc ,"\u0069n\u0069\u0074\u0069\u0061\u006c");};_bdadf :=map[*_bd .Bitmap ]int {};for _fbdf ,_edfa :=range _bacfa .Values {_bdadf [_edfa ]=_fbdf ;
};_bacfa .SortByHeight ();var _gcda ,_cbde int ;_fege ,_afcf :=_bacfa .GroupByHeight ();if _afcf !=nil {return 0,_ff .Wrap (_afcf ,_cdgc ,"");};for _ ,_afdc :=range _fege .Values {_egddd :=_afdc .Values [0].Height ;_cfbf :=_egddd -_gcda ;if _afcf =_bdffd .EncodeInteger (_d .IADH ,_cfbf );
_afcf !=nil {return 0,_ff .Wrapf (_afcf ,_cdgc ,"\u0049\u0041\u0044\u0048\u0020\u0066\u006f\u0072\u0020\u0064\u0068\u003a \u0027\u0025\u0064\u0027",_cfbf );};_gcda =_egddd ;_ddec ,_cgca :=_afdc .GroupByWidth ();if _cgca !=nil {return 0,_ff .Wrapf (_cgca ,_cdgc ,"\u0068\u0065\u0069g\u0068\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_egddd );
};var _gab int ;for _ ,_dagd :=range _ddec .Values {for _ ,_cadc :=range _dagd .Values {_geea :=_cadc .Width ;_eagc :=_geea -_gab ;if _cgca =_bdffd .EncodeInteger (_d .IADW ,_eagc );_cgca !=nil {return 0,_ff .Wrapf (_cgca ,_cdgc ,"\u0049\u0041\u0044\u0057\u0020\u0066\u006f\u0072\u0020\u0064\u0077\u003a \u0027\u0025\u0064\u0027",_eagc );
};_gab +=_eagc ;if _cgca =_bdffd .EncodeBitmap (_cadc ,false );_cgca !=nil {return 0,_ff .Wrapf (_cgca ,_cdgc ,"H\u0065i\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u0020W\u0069\u0064\u0074\u0068: \u0025\u0064",_egddd ,_geea );};_geagb :=_bdadf [_cadc ];
_cdgf ._fgee [_geagb ]=_cbde ;_cbde ++;};};if _cgca =_bdffd .EncodeOOB (_d .IADW );_cgca !=nil {return 0,_ff .Wrap (_cgca ,_cdgc ,"\u0049\u0041\u0044\u0057");};};if _afcf =_bdffd .EncodeInteger (_d .IAEX ,0);_afcf !=nil {return 0,_ff .Wrap (_afcf ,_cdgc ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};if _afcf =_bdffd .EncodeInteger (_d .IAEX ,len (_cdgf ._febga ));_afcf !=nil {return 0,_ff .Wrap (_afcf ,_cdgc ,"\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0073\u0079m\u0062\u006f\u006c\u0073");};_bdffd .Final ();_ecbee ,_afcf :=_bdffd .WriteTo (_eaba );
if _afcf !=nil {return 0,_ff .Wrap (_afcf ,_cdgc ,"\u0077\u0072i\u0074\u0069\u006e\u0067 \u0065\u006ec\u006f\u0064\u0065\u0072\u0020\u0063\u006f\u006et\u0065\u0078\u0074\u0020\u0074\u006f\u0020\u0027\u0077\u0027\u0020\u0077r\u0069\u0074\u0065\u0072");};
return int (_ecbee ),nil ;};func (_gfee *GenericRegion )Encode (w _g .BinaryWriter )(_fgec int ,_dbd error ){const _ced ="G\u0065n\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069o\u006e\u002e\u0045\u006eco\u0064\u0065";if _gfee .Bitmap ==nil {return 0,_ff .Error (_ced ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");
};_fee ,_dbd :=_gfee .RegionSegment .Encode (w );if _dbd !=nil {return 0,_ff .Wrap (_dbd ,_ced ,"\u0052\u0065\u0067\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074");};_fgec +=_fee ;if _dbd =w .SkipBits (4);_dbd !=nil {return _fgec ,_ff .Wrap (_dbd ,_ced ,"\u0073k\u0069p\u0020\u0072\u0065\u0073\u0065r\u0076\u0065d\u0020\u0062\u0069\u0074\u0073");
};var _gfeb int ;if _gfee .IsTPGDon {_gfeb =1;};if _dbd =w .WriteBit (_gfeb );_dbd !=nil {return _fgec ,_ff .Wrap (_dbd ,_ced ,"\u0074\u0070\u0067\u0064\u006f\u006e");};_gfeb =0;if _dbd =w .WriteBit (int (_gfee .GBTemplate >>1)&0x01);_dbd !=nil {return _fgec ,_ff .Wrap (_dbd ,_ced ,"f\u0069r\u0073\u0074\u0020\u0067\u0062\u0074\u0065\u006dp\u006c\u0061\u0074\u0065 b\u0069\u0074");
};if _dbd =w .WriteBit (int (_gfee .GBTemplate )&0x01);_dbd !=nil {return _fgec ,_ff .Wrap (_dbd ,_ced ,"s\u0065\u0063\u006f\u006ed \u0067b\u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u0062\u0069\u0074");};if _gfee .UseMMR {_gfeb =1;};if _dbd =w .WriteBit (_gfeb );
_dbd !=nil {return _fgec ,_ff .Wrap (_dbd ,_ced ,"u\u0073\u0065\u0020\u004d\u004d\u0052\u0020\u0062\u0069\u0074");};_fgec ++;if _fee ,_dbd =_gfee .writeGBAtPixels (w );_dbd !=nil {return _fgec ,_ff .Wrap (_dbd ,_ced ,"");};_fgec +=_fee ;_dfb :=_d .New ();
if _dbd =_dfb .EncodeBitmap (_gfee .Bitmap ,_gfee .IsTPGDon );_dbd !=nil {return _fgec ,_ff .Wrap (_dbd ,_ced ,"");};_dfb .Final ();var _ffafd int64 ;if _ffafd ,_dbd =_dfb .WriteTo (w );_dbd !=nil {return _fgec ,_ff .Wrap (_dbd ,_ced ,"");};_fgec +=int (_ffafd );
return _fgec ,nil ;};func (_beaf *GenericRefinementRegion )decodeTemplate (_cfg ,_dgdb ,_dee ,_ccb ,_gdg ,_gbe ,_aab ,_ffaf ,_ege ,_bba int ,_gag templater )(_eef error ){var (_fdcd ,_bff ,_aecb ,_gda ,_bffd int16 ;_cad ,_ag ,_ebd ,_faa int ;_aaa byte ;
);if _ege >=1&&(_ege -1)< _beaf .ReferenceBitmap .Height {_aaa ,_eef =_beaf .ReferenceBitmap .GetByte (_bba -_ccb );if _eef !=nil {return ;};_cad =int (_aaa );};if _ege >=0&&(_ege )< _beaf .ReferenceBitmap .Height {_aaa ,_eef =_beaf .ReferenceBitmap .GetByte (_bba );
if _eef !=nil {return ;};_ag =int (_aaa );};if _ege >=-1&&(_ege +1)< _beaf .ReferenceBitmap .Height {_aaa ,_eef =_beaf .ReferenceBitmap .GetByte (_bba +_ccb );if _eef !=nil {return ;};_ebd =int (_aaa );};_bba ++;if _cfg >=1{_aaa ,_eef =_beaf .RegionBitmap .GetByte (_ffaf -_dee );
if _eef !=nil {return ;};_faa =int (_aaa );};_ffaf ++;_cge :=_beaf .ReferenceDX %8;_bdde :=6+_cge ;_ebe :=_bba %_ccb ;if _bdde >=0{if _bdde < 8{_fdcd =int16 (_cad >>uint (_bdde ))&0x07;};if _bdde < 8{_bff =int16 (_ag >>uint (_bdde ))&0x07;};if _bdde < 8{_aecb =int16 (_ebd >>uint (_bdde ))&0x07;
};if _bdde ==6&&_ebe > 1{if _ege >=1&&(_ege -1)< _beaf .ReferenceBitmap .Height {_aaa ,_eef =_beaf .ReferenceBitmap .GetByte (_bba -_ccb -2);if _eef !=nil {return _eef ;};_fdcd |=int16 (_aaa <<2)&0x04;};if _ege >=0&&_ege < _beaf .ReferenceBitmap .Height {_aaa ,_eef =_beaf .ReferenceBitmap .GetByte (_bba -2);
if _eef !=nil {return _eef ;};_bff |=int16 (_aaa <<2)&0x04;};if _ege >=-1&&_ege +1< _beaf .ReferenceBitmap .Height {_aaa ,_eef =_beaf .ReferenceBitmap .GetByte (_bba +_ccb -2);if _eef !=nil {return _eef ;};_aecb |=int16 (_aaa <<2)&0x04;};};if _bdde ==0{_cad =0;
_ag =0;_ebd =0;if _ebe < _ccb -1{if _ege >=1&&_ege -1< _beaf .ReferenceBitmap .Height {_aaa ,_eef =_beaf .ReferenceBitmap .GetByte (_bba -_ccb );if _eef !=nil {return _eef ;};_cad =int (_aaa );};if _ege >=0&&_ege < _beaf .ReferenceBitmap .Height {_aaa ,_eef =_beaf .ReferenceBitmap .GetByte (_bba );
if _eef !=nil {return _eef ;};_ag =int (_aaa );};if _ege >=-1&&_ege +1< _beaf .ReferenceBitmap .Height {_aaa ,_eef =_beaf .ReferenceBitmap .GetByte (_bba +_ccb );if _eef !=nil {return _eef ;};_ebd =int (_aaa );};};_bba ++;};}else {_fdcd =int16 (_cad <<1)&0x07;
_bff =int16 (_ag <<1)&0x07;_aecb =int16 (_ebd <<1)&0x07;_cad =0;_ag =0;_ebd =0;if _ebe < _ccb -1{if _ege >=1&&_ege -1< _beaf .ReferenceBitmap .Height {_aaa ,_eef =_beaf .ReferenceBitmap .GetByte (_bba -_ccb );if _eef !=nil {return _eef ;};_cad =int (_aaa );
};if _ege >=0&&_ege < _beaf .ReferenceBitmap .Height {_aaa ,_eef =_beaf .ReferenceBitmap .GetByte (_bba );if _eef !=nil {return _eef ;};_ag =int (_aaa );};if _ege >=-1&&_ege +1< _beaf .ReferenceBitmap .Height {_aaa ,_eef =_beaf .ReferenceBitmap .GetByte (_bba +_ccb );
if _eef !=nil {return _eef ;};_ebd =int (_aaa );};_bba ++;};_fdcd |=int16 ((_cad >>7)&0x07);_bff |=int16 ((_ag >>7)&0x07);_aecb |=int16 ((_ebd >>7)&0x07);};_gda =int16 (_faa >>6);_bffd =0;_cca :=(2-_cge )%8;_cad <<=uint (_cca );_ag <<=uint (_cca );_ebd <<=uint (_cca );
_faa <<=2;var _bfdc int ;for _ec :=0;_ec < _dgdb ;_ec ++{_beac :=_ec &0x07;_bae :=_gag .form (_fdcd ,_bff ,_aecb ,_gda ,_bffd );if _beaf ._fa {_aaa ,_eef =_beaf .RegionBitmap .GetByte (_beaf .RegionBitmap .GetByteIndex (_ec ,_cfg ));if _eef !=nil {return _eef ;
};_beaf ._aag .SetIndex (int32 (_beaf .overrideAtTemplate0 (int (_bae ),_ec ,_cfg ,int (_aaa ),_beac )));}else {_beaf ._aag .SetIndex (int32 (_bae ));};_bfdc ,_eef =_beaf ._ee .DecodeBit (_beaf ._aag );if _eef !=nil {return _eef ;};if _eef =_beaf .RegionBitmap .SetPixel (_ec ,_cfg ,byte (_bfdc ));
_eef !=nil {return _eef ;};_fdcd =((_fdcd <<1)|0x01&int16 (_cad >>7))&0x07;_bff =((_bff <<1)|0x01&int16 (_ag >>7))&0x07;_aecb =((_aecb <<1)|0x01&int16 (_ebd >>7))&0x07;_gda =((_gda <<1)|0x01&int16 (_faa >>7))&0x07;_bffd =int16 (_bfdc );if (_ec -int (_beaf .ReferenceDX ))%8==5{_cad =0;
_ag =0;_ebd =0;if ((_ec -int (_beaf .ReferenceDX ))/8)+1< _beaf .ReferenceBitmap .RowStride {if _ege >=1&&(_ege -1)< _beaf .ReferenceBitmap .Height {_aaa ,_eef =_beaf .ReferenceBitmap .GetByte (_bba -_ccb );if _eef !=nil {return _eef ;};_cad =int (_aaa );
};if _ege >=0&&_ege < _beaf .ReferenceBitmap .Height {_aaa ,_eef =_beaf .ReferenceBitmap .GetByte (_bba );if _eef !=nil {return _eef ;};_ag =int (_aaa );};if _ege >=-1&&(_ege +1)< _beaf .ReferenceBitmap .Height {_aaa ,_eef =_beaf .ReferenceBitmap .GetByte (_bba +_ccb );
if _eef !=nil {return _eef ;};_ebd =int (_aaa );};};_bba ++;}else {_cad <<=1;_ag <<=1;_ebd <<=1;};if _beac ==5&&_cfg >=1{if ((_ec >>3)+1)>=_beaf .RegionBitmap .RowStride {_faa =0;}else {_aaa ,_eef =_beaf .RegionBitmap .GetByte (_ffaf -_dee );if _eef !=nil {return _eef ;
};_faa =int (_aaa );};_ffaf ++;}else {_faa <<=1;};};return nil ;};type Type int ;func (_ggc *RegionSegment )readCombinationOperator ()error {_bgga ,_dgcb :=_ggc ._edfd .ReadBits (3);if _dgcb !=nil {return _dgcb ;};_ggc .CombinaionOperator =_bd .CombinationOperator (_bgga &0xF);
return nil ;};func (_gbg *Header )writeSegmentNumber (_beeabg _g .BinaryWriter )(_dceb int ,_aggg error ){_cacb :=make ([]byte ,4);_f .BigEndian .PutUint32 (_cacb ,_gbg .SegmentNumber );if _dceb ,_aggg =_beeabg .Write (_cacb );_aggg !=nil {return 0,_ff .Wrap (_aggg ,"\u0048e\u0061\u0064\u0065\u0072.\u0077\u0072\u0069\u0074\u0065S\u0065g\u006de\u006e\u0074\u004e\u0075\u006d\u0062\u0065r","");
};return _dceb ,nil ;};func (_fbe *SymbolDictionary )huffDecodeRefAggNInst ()(int64 ,error ){if !_fbe .SdHuffAggInstanceSelection {_bdffdb ,_bccg :=_cff .GetStandardTable (1);if _bccg !=nil {return 0,_bccg ;};return _bdffdb .Decode (_fbe ._cacc );};if _fbe ._gebg ==nil {var (_feff int ;
_dffcf error ;);if _fbe .SdHuffDecodeHeightSelection ==3{_feff ++;};if _fbe .SdHuffDecodeWidthSelection ==3{_feff ++;};if _fbe .SdHuffBMSizeSelection ==3{_feff ++;};_fbe ._gebg ,_dffcf =_fbe .getUserTable (_feff );if _dffcf !=nil {return 0,_dffcf ;};};
return _fbe ._gebg .Decode (_fbe ._cacc );};func (_gbb *PageInformationSegment )readIsLossless ()error {_ffadg ,_bfca :=_gbb ._cefa .ReadBit ();if _bfca !=nil {return _bfca ;};if _ffadg ==1{_gbb .IsLossless =true ;};return nil ;};func (_fcf *GenericRefinementRegion )setParameters (_fcfa *_eae .DecoderStats ,_cag *_eae .Decoder ,_cee int8 ,_ddg ,_ebb uint32 ,_dad *_bd .Bitmap ,_cgc ,_fcfae int32 ,_efb bool ,_afb []int8 ,_gaeb []int8 ){_ab .Log .Trace ("\u005b\u0047\u0045NE\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052E\u0047I\u004fN\u005d \u0073\u0065\u0074\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073");
if _fcfa !=nil {_fcf ._aag =_fcfa ;};if _cag !=nil {_fcf ._ee =_cag ;};_fcf .TemplateID =_cee ;_fcf .RegionInfo .BitmapWidth =_ddg ;_fcf .RegionInfo .BitmapHeight =_ebb ;_fcf .ReferenceBitmap =_dad ;_fcf .ReferenceDX =_cgc ;_fcf .ReferenceDY =_fcfae ;_fcf .IsTPGROn =_efb ;
_fcf .GrAtX =_afb ;_fcf .GrAtY =_gaeb ;_fcf .RegionBitmap =nil ;_ab .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073 f\u0069\u006ei\u0073\u0068\u0065\u0064\u002e\u0020\u0025\u0073",_fcf );
};func (_bbba *TextRegion )encodeFlags (_caec _g .BinaryWriter )(_aggf int ,_bedfe error ){const _eegg ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _bedfe =_caec .WriteBit (int (_bbba .SbrTemplate ));_bedfe !=nil {return _aggf ,_ff .Wrap (_bedfe ,_eegg ,"s\u0062\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");
};if _ ,_bedfe =_caec .WriteBits (uint64 (_bbba .SbDsOffset ),5);_bedfe !=nil {return _aggf ,_ff .Wrap (_bedfe ,_eegg ,"\u0073\u0062\u0044\u0073\u004f\u0066\u0066\u0073\u0065\u0074");};if _bedfe =_caec .WriteBit (int (_bbba .DefaultPixel ));_bedfe !=nil {return _aggf ,_ff .Wrap (_bedfe ,_eegg ,"\u0044\u0065\u0066a\u0075\u006c\u0074\u0050\u0069\u0078\u0065\u006c");
};if _ ,_bedfe =_caec .WriteBits (uint64 (_bbba .CombinationOperator ),2);_bedfe !=nil {return _aggf ,_ff .Wrap (_bedfe ,_eegg ,"\u0043\u006f\u006d\u0062in\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072");};if _bedfe =_caec .WriteBit (int (_bbba .IsTransposed ));
_bedfe !=nil {return _aggf ,_ff .Wrap (_bedfe ,_eegg ,"\u0069\u0073\u0020\u0074\u0072\u0061\u006e\u0073\u0070\u006f\u0073\u0065\u0064");};if _ ,_bedfe =_caec .WriteBits (uint64 (_bbba .ReferenceCorner ),2);_bedfe !=nil {return _aggf ,_ff .Wrap (_bedfe ,_eegg ,"\u0072\u0065f\u0065\u0072\u0065n\u0063\u0065\u0020\u0063\u006f\u0072\u006e\u0065\u0072");
};if _ ,_bedfe =_caec .WriteBits (uint64 (_bbba .LogSBStrips ),2);_bedfe !=nil {return _aggf ,_ff .Wrap (_bedfe ,_eegg ,"L\u006f\u0067\u0053\u0042\u0053\u0074\u0072\u0069\u0070\u0073");};var _aeefd int ;if _bbba .UseRefinement {_aeefd =1;};if _bedfe =_caec .WriteBit (_aeefd );
_bedfe !=nil {return _aggf ,_ff .Wrap (_bedfe ,_eegg ,"\u0075\u0073\u0065\u0020\u0072\u0065\u0066\u0069\u006ee\u006d\u0065\u006e\u0074");};_aeefd =0;if _bbba .IsHuffmanEncoded {_aeefd =1;};if _bedfe =_caec .WriteBit (_aeefd );_bedfe !=nil {return _aggf ,_ff .Wrap (_bedfe ,_eegg ,"u\u0073\u0065\u0020\u0068\u0075\u0066\u0066\u006d\u0061\u006e");
};_aggf =2;return _aggf ,nil ;};func (_effd *PatternDictionary )setGbAtPixels (){if _effd .HDTemplate ==0{_effd .GBAtX =make ([]int8 ,4);_effd .GBAtY =make ([]int8 ,4);_effd .GBAtX [0]=-int8 (_effd .HdpWidth );_effd .GBAtY [0]=0;_effd .GBAtX [1]=-3;_effd .GBAtY [1]=-1;
_effd .GBAtX [2]=2;_effd .GBAtY [2]=-2;_effd .GBAtX [3]=-2;_effd .GBAtY [3]=-2;}else {_effd .GBAtX =[]int8 {-int8 (_effd .HdpWidth )};_effd .GBAtY =[]int8 {0};};};func (_degge *TextRegion )decodeSymInRefSize ()(int64 ,error ){const _gdgf ="\u0064e\u0063o\u0064\u0065\u0053\u0079\u006dI\u006e\u0052e\u0066\u0053\u0069\u007a\u0065";
if _degge .SbHuffRSize ==0{_dagf ,_aagf :=_cff .GetStandardTable (1);if _aagf !=nil {return 0,_ff .Wrap (_aagf ,_gdgf ,"");};return _dagf .Decode (_degge ._aaaa );};if _degge ._abce ==nil {var (_cbac int ;_gaec error ;);if _degge .SbHuffFS ==3{_cbac ++;
};if _degge .SbHuffDS ==3{_cbac ++;};if _degge .SbHuffDT ==3{_cbac ++;};if _degge .SbHuffRDWidth ==3{_cbac ++;};if _degge .SbHuffRDHeight ==3{_cbac ++;};if _degge .SbHuffRDX ==3{_cbac ++;};if _degge .SbHuffRDY ==3{_cbac ++;};_degge ._abce ,_gaec =_degge .getUserTable (_cbac );
if _gaec !=nil {return 0,_ff .Wrap (_gaec ,_gdgf ,"");};};_afdf ,_ceeb :=_degge ._abce .Decode (_degge ._aaaa );if _ceeb !=nil {return 0,_ff .Wrap (_ceeb ,_gdgf ,"");};return _afdf ,nil ;};func (_cccd *PatternDictionary )Init (h *Header ,r _g .StreamReader )error {_cccd ._gcga =r ;
return _cccd .parseHeader ();};var _ SegmentEncoder =&RegionSegment {};func (_aea *SymbolDictionary )decodeNewSymbols (_cccf ,_cdf uint32 ,_bcge *_bd .Bitmap ,_fcd ,_abcg int32 )error {if _aea ._cgdd ==nil {_aea ._cgdd =_ffe (_aea ._cacc ,nil );if _aea ._fdef ==nil {var _abaf error ;
_aea ._fdef ,_abaf =_eae .New (_aea ._cacc );if _abaf !=nil {return _abaf ;};};if _aea ._gcagg ==nil {_aea ._gcagg =_eae .NewStats (65536,1);};};_aea ._cgdd .setParameters (_aea ._gcagg ,_aea ._fdef ,_aea .SdrTemplate ,_cccf ,_cdf ,_bcge ,_fcd ,_abcg ,false ,_aea .SdrATX ,_aea .SdrATY );
return _aea .addSymbol (_aea ._cgdd );};func (_gabg *SymbolDictionary )readNumberOfNewSymbols ()error {_cbge ,_gdcbc :=_gabg ._cacc .ReadBits (32);if _gdcbc !=nil {return _gdcbc ;};_gabg .NumberOfNewSymbols =uint32 (_cbge &_e .MaxUint32 );return nil ;};
func (_agbe *TextRegion )Encode (w _g .BinaryWriter )(_ccbca int ,_caage error ){const _dccc ="\u0054\u0065\u0078\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u002e\u0045n\u0063\u006f\u0064\u0065";if _ccbca ,_caage =_agbe .RegionInfo .Encode (w );_caage !=nil {return _ccbca ,_ff .Wrap (_caage ,_dccc ,"");
};var _gdag int ;if _gdag ,_caage =_agbe .encodeFlags (w );_caage !=nil {return _ccbca ,_ff .Wrap (_caage ,_dccc ,"");};_ccbca +=_gdag ;if _gdag ,_caage =_agbe .encodeSymbols (w );_caage !=nil {return _ccbca ,_ff .Wrap (_caage ,_dccc ,"");};_ccbca +=_gdag ;
return _ccbca ,nil ;};func (_dga *SymbolDictionary )getSymbol (_adaf int )(*_bd .Bitmap ,error ){const _fgd ="\u0067e\u0074\u0053\u0079\u006d\u0062\u006fl";_aaeg ,_gdad :=_dga ._fbfb .GetBitmap (_dga ._febga [_adaf ]);if _gdad !=nil {return nil ,_ff .Wrap (_gdad ,_fgd ,"\u0063\u0061n\u0027\u0074\u0020g\u0065\u0074\u0020\u0073\u0079\u006d\u0062\u006f\u006c");
};return _aaeg ,nil ;};func (_bdec *PatternDictionary )readPatternWidthAndHeight ()error {_ceaae ,_adgc :=_bdec ._gcga .ReadByte ();if _adgc !=nil {return _adgc ;};_bdec .HdpWidth =_ceaae ;_ceaae ,_adgc =_bdec ._gcga .ReadByte ();if _adgc !=nil {return _adgc ;
};_bdec .HdpHeight =_ceaae ;return nil ;};func (_dcebb *SymbolDictionary )getUserTable (_adcg int )(_cff .Tabler ,error ){var _abg int ;for _ ,_acbb :=range _dcebb .Header .RTSegments {if _acbb .Type ==53{if _abg ==_adcg {_cgfa ,_gdgb :=_acbb .GetSegmentData ();
if _gdgb !=nil {return nil ,_gdgb ;};_ceef :=_cgfa .(_cff .BasicTabler );return _cff .NewEncodedTable (_ceef );};_abg ++;};};return nil ,nil ;};func (_faae *SymbolDictionary )setAtPixels ()error {if _faae .IsHuffmanEncoded {return nil ;};_efae :=1;if _faae .SdTemplate ==0{_efae =4;
};if _feaag :=_faae .readAtPixels (_efae );_feaag !=nil {return _feaag ;};return nil ;};func (_bca *SymbolDictionary )encodeRefinementATFlags (_egcb _g .BinaryWriter )(_eaf int ,_dabb error ){const _bgdb ="\u0065\u006e\u0063od\u0065\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0041\u0054\u0046\u006c\u0061\u0067\u0073";
if !_bca .UseRefinementAggregation ||_bca .SdrTemplate !=0{return 0,nil ;};for _fbdb :=0;_fbdb < 2;_fbdb ++{if _dabb =_egcb .WriteByte (byte (_bca .SdrATX [_fbdb ]));_dabb !=nil {return _eaf ,_ff .Wrapf (_dabb ,_bgdb ,"\u0053\u0064\u0072\u0041\u0054\u0058\u005b\u0025\u0064\u005d",_fbdb );
};_eaf ++;if _dabb =_egcb .WriteByte (byte (_bca .SdrATY [_fbdb ]));_dabb !=nil {return _eaf ,_ff .Wrapf (_dabb ,_bgdb ,"\u0053\u0064\u0072\u0041\u0054\u0059\u005b\u0025\u0064\u005d",_fbdb );};_eaf ++;};return _eaf ,nil ;};const (ORandom OrganizationType =iota ;
OSequential ;);func (_bbd *Header )readHeaderLength (_gcd _g .StreamReader ,_edaa int64 ){_bbd .HeaderLength =_gcd .StreamPosition ()-_edaa ;};type Documenter interface{GetPage (int )(Pager ,error );GetGlobalSegment (int )(*Header ,error );};func (_ffcd *TextRegion )setContexts (_gcef *_eae .DecoderStats ,_acdbb *_eae .DecoderStats ,_abbf *_eae .DecoderStats ,_abbb *_eae .DecoderStats ,_afbgd *_eae .DecoderStats ,_dceg *_eae .DecoderStats ,_aggc *_eae .DecoderStats ,_fecc *_eae .DecoderStats ,_dbgaa *_eae .DecoderStats ,_dgde *_eae .DecoderStats ){_ffcd ._baaae =_acdbb ;
_ffcd ._baad =_abbf ;_ffcd ._egfd =_abbb ;_ffcd ._bddac =_afbgd ;_ffcd ._gcecg =_aggc ;_ffcd ._fff =_fecc ;_ffcd ._dageb =_dceg ;_ffcd ._gbf =_dbgaa ;_ffcd ._ddedc =_dgde ;_ffcd ._gcafb =_gcef ;};func (_adbef *PageInformationSegment )CombinationOperator ()_bd .CombinationOperator {return _adbef ._eadc ;
};func (_bgab *PatternDictionary )readTemplate ()error {_abbe ,_ecd :=_bgab ._gcga .ReadBits (2);if _ecd !=nil {return _ecd ;};_bgab .HDTemplate =byte (_abbe );return nil ;};func (_fafe *GenericRegion )Init (h *Header ,r _g .StreamReader )error {_fafe .RegionSegment =NewRegionSegment (r );
_fafe ._aga =r ;return _fafe .parseHeader ();};type Regioner interface{GetRegionBitmap ()(*_bd .Bitmap ,error );GetRegionInfo ()*RegionSegment ;};var (_ Regioner =&TextRegion {};_ Segmenter =&TextRegion {};);func (_aefc *SymbolDictionary )parseHeader ()(_fddf error ){_ab .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _fddf !=nil {_ab .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u0020\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u005b\u0050\u0041\u0052SE\u002d\u0048\u0045A\u0044\u0045R\u005d\u0020\u0066\u0061\u0069\u006ce\u0064\u002e \u0025\u0076",_fddf );
}else {_ab .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _fddf =_aefc .readRegionFlags ();_fddf !=nil {return _fddf ;};if _fddf =_aefc .setAtPixels ();_fddf !=nil {return _fddf ;};if _fddf =_aefc .setRefinementAtPixels ();_fddf !=nil {return _fddf ;};if _fddf =_aefc .readNumberOfExportedSymbols ();_fddf !=nil {return _fddf ;
};if _fddf =_aefc .readNumberOfNewSymbols ();_fddf !=nil {return _fddf ;};if _fddf =_aefc .setInSyms ();_fddf !=nil {return _fddf ;};if _aefc ._afceb {_dbcd :=_aefc .Header .RTSegments ;for _aagg :=len (_dbcd )-1;_aagg >=0;_aagg --{if _dbcd [_aagg ].Type ==0{_cfdb ,_agda :=_dbcd [_aagg ].SegmentData .(*SymbolDictionary );
if !_agda {_fddf =_b .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074:\u0020\u0025\u0076\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020S\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_dbcd [_aagg ]);
return _fddf ;};if _cfdb ._afceb {_aefc .setRetainedCodingContexts (_cfdb );};break ;};};};if _fddf =_aefc .checkInput ();_fddf !=nil {return _fddf ;};return nil ;};func (_afc *GenericRegion )getPixel (_ddac ,_agd int )int8 {if _ddac < 0||_ddac >=_afc .Bitmap .Width {return 0;
};if _agd < 0||_agd >=_afc .Bitmap .Height {return 0;};if _afc .Bitmap .GetPixel (_ddac ,_agd ){return 1;};return 0;};func (_cdafd *GenericRegion )setParametersMMR (_eeagc bool ,_fagaf ,_ddf int64 ,_cadd ,_dgfb uint32 ,_agg byte ,_bddg ,_cged bool ,_ddeg ,_ebce []int8 ){_cdafd .DataOffset =_fagaf ;
_cdafd .DataLength =_ddf ;_cdafd .RegionSegment =&RegionSegment {};_cdafd .RegionSegment .BitmapHeight =_cadd ;_cdafd .RegionSegment .BitmapWidth =_dgfb ;_cdafd .GBTemplate =_agg ;_cdafd .IsMMREncoded =_eeagc ;_cdafd .IsTPGDon =_bddg ;_cdafd .GBAtX =_ddeg ;
_cdafd .GBAtY =_ebce ;};func (_dc *GenericRefinementRegion )GetRegionBitmap ()(*_bd .Bitmap ,error ){var _eea error ;_ab .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _eea !=nil {_ab .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0047\u0065\u0074R\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006dap\u0020\u0066a\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_eea );
}else {_ab .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _dc .RegionBitmap !=nil {return _dc .RegionBitmap ,nil ;};_dgg :=0;if _dc .ReferenceBitmap ==nil {_dc .ReferenceBitmap ,_eea =_dc .getGrReference ();if _eea !=nil {return nil ,_eea ;};};if _dc ._ee ==nil {_dc ._ee ,_eea =_eae .New (_dc ._baf );
if _eea !=nil {return nil ,_eea ;};};if _dc ._aag ==nil {_dc ._aag =_eae .NewStats (8192,1);};_dc .RegionBitmap =_bd .New (int (_dc .RegionInfo .BitmapWidth ),int (_dc .RegionInfo .BitmapHeight ));if _dc .TemplateID ==0{if _eea =_dc .updateOverride ();
_eea !=nil {return nil ,_eea ;};};_ef :=(_dc .RegionBitmap .Width +7)&-8;var _cb int ;if _dc .IsTPGROn {_cb =int (-_dc .ReferenceDY )*_dc .ReferenceBitmap .RowStride ;};_dd :=_cb +1;for _da :=0;_da < _dc .RegionBitmap .Height ;_da ++{if _dc .IsTPGROn {_bge ,_df :=_dc .decodeSLTP ();
if _df !=nil {return nil ,_df ;};_dgg ^=_bge ;};if _dgg ==0{_eea =_dc .decodeOptimized (_da ,_dc .RegionBitmap .Width ,_dc .RegionBitmap .RowStride ,_dc .ReferenceBitmap .RowStride ,_ef ,_cb ,_dd );if _eea !=nil {return nil ,_eea ;};}else {_eea =_dc .decodeTypicalPredictedLine (_da ,_dc .RegionBitmap .Width ,_dc .RegionBitmap .RowStride ,_dc .ReferenceBitmap .RowStride ,_ef ,_cb );
if _eea !=nil {return nil ,_eea ;};};};return _dc .RegionBitmap ,nil ;};func (_cbe *Header )writeFlags (_gddf _g .BinaryWriter )(_bdbc error ){const _gafe ="\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065F\u006c\u0061\u0067\u0073";
_agga :=byte (_cbe .Type );if _bdbc =_gddf .WriteByte (_agga );_bdbc !=nil {return _ff .Wrap (_bdbc ,_gafe ,"\u0077\u0072\u0069ti\u006e\u0067\u0020\u0073\u0065\u0067\u006d\u0065\u006et\u0020t\u0079p\u0065 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};if !_cbe .RetainFlag &&!_cbe .PageAssociationFieldSize {return nil ;};if _bdbc =_gddf .SkipBits (-8);_bdbc !=nil {return _ff .Wrap (_bdbc ,_gafe ,"\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0062\u0061\u0063\u006b\u0020\u0074\u0068\u0065\u0020\u0062\u0069\u0074\u0073\u0020\u0066\u0061il\u0065\u0064");
};var _cgec int ;if _cbe .RetainFlag {_cgec =1;};if _bdbc =_gddf .WriteBit (_cgec );_bdbc !=nil {return _ff .Wrap (_bdbc ,_gafe ,"\u0072\u0065\u0074\u0061in\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067\u0073");};_cgec =0;if _cbe .PageAssociationFieldSize {_cgec =1;
};if _bdbc =_gddf .WriteBit (_cgec );_bdbc !=nil {return _ff .Wrap (_bdbc ,_gafe ,"p\u0061\u0067\u0065\u0020as\u0073o\u0063\u0069\u0061\u0074\u0069o\u006e\u0020\u0066\u006c\u0061\u0067");};_gddf .FinishByte ();return nil ;};func (_ceaab *TableSegment )HtHigh ()int32 {return _ceaab ._faffd };
func (_eedcd *SymbolDictionary )readNumberOfExportedSymbols ()error {_ggdf ,_gcec :=_eedcd ._cacc .ReadBits (32);if _gcec !=nil {return _gcec ;};_eedcd .NumberOfExportedSymbols =uint32 (_ggdf &_e .MaxUint32 );return nil ;};func (_afgf *TextRegion )readHuffmanFlags ()error {var (_eagcb int ;
_ceff uint64 ;_gaaf error ;);_ ,_gaaf =_afgf ._aaaa .ReadBit ();if _gaaf !=nil {return _gaaf ;};_eagcb ,_gaaf =_afgf ._aaaa .ReadBit ();if _gaaf !=nil {return _gaaf ;};_afgf .SbHuffRSize =int8 (_eagcb );_ceff ,_gaaf =_afgf ._aaaa .ReadBits (2);if _gaaf !=nil {return _gaaf ;
};_afgf .SbHuffRDY =int8 (_ceff )&0xf;_ceff ,_gaaf =_afgf ._aaaa .ReadBits (2);if _gaaf !=nil {return _gaaf ;};_afgf .SbHuffRDX =int8 (_ceff )&0xf;_ceff ,_gaaf =_afgf ._aaaa .ReadBits (2);if _gaaf !=nil {return _gaaf ;};_afgf .SbHuffRDHeight =int8 (_ceff )&0xf;
_ceff ,_gaaf =_afgf ._aaaa .ReadBits (2);if _gaaf !=nil {return _gaaf ;};_afgf .SbHuffRDWidth =int8 (_ceff )&0xf;_ceff ,_gaaf =_afgf ._aaaa .ReadBits (2);if _gaaf !=nil {return _gaaf ;};_afgf .SbHuffDT =int8 (_ceff )&0xf;_ceff ,_gaaf =_afgf ._aaaa .ReadBits (2);
if _gaaf !=nil {return _gaaf ;};_afgf .SbHuffDS =int8 (_ceff )&0xf;_ceff ,_gaaf =_afgf ._aaaa .ReadBits (2);if _gaaf !=nil {return _gaaf ;};_afgf .SbHuffFS =int8 (_ceff )&0xf;return nil ;};func (_agfad *TextRegion )InitEncode (globalSymbolsMap ,localSymbolsMap map[int ]int ,comps []int ,inLL *_bd .Points ,symbols *_bd .Bitmaps ,classIDs *_cf .IntSlice ,boxes *_bd .Boxes ,width ,height ,symBits int ){_agfad .RegionInfo =&RegionSegment {BitmapWidth :uint32 (width ),BitmapHeight :uint32 (height )};
_agfad ._ffed =globalSymbolsMap ;_agfad ._bcf =localSymbolsMap ;_agfad ._edac =comps ;_agfad ._gegb =inLL ;_agfad ._abceg =symbols ;_agfad ._cbdca =classIDs ;_agfad ._fae =boxes ;_agfad ._beef =symBits ;};type Header struct{SegmentNumber uint32 ;Type Type ;
RetainFlag bool ;PageAssociation int ;PageAssociationFieldSize bool ;RTSegments []*Header ;HeaderLength int64 ;SegmentDataLength uint64 ;SegmentDataStartOffset uint64 ;Reader _g .StreamReader ;SegmentData Segmenter ;RTSNumbers []int ;RetainBits []uint8 ;
};func (_adfa *SymbolDictionary )setExportedSymbols (_ffada []int ){for _dcdg :=uint32 (0);_dcdg < _adfa ._dcfe +_adfa .NumberOfNewSymbols ;_dcdg ++{if _ffada [_dcdg ]==1{var _bece *_bd .Bitmap ;if _dcdg < _adfa ._dcfe {_bece =_adfa ._bedb [_dcdg ];}else {_bece =_adfa ._ccdc [_dcdg -_adfa ._dcfe ];
};_ab .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u002d\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u0020\u0041\u0064\u0064 E\u0078\u0070\u006fr\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027%\u0073\u0027",_bece );_adfa ._deed =append (_adfa ._deed ,_bece );
};};};func (_bfdg *HalftoneRegion )GetRegionBitmap ()(*_bd .Bitmap ,error ){if _bfdg .HalftoneRegionBitmap !=nil {return _bfdg .HalftoneRegionBitmap ,nil ;};var _cagb error ;_bfdg .HalftoneRegionBitmap =_bd .New (int (_bfdg .RegionSegment .BitmapWidth ),int (_bfdg .RegionSegment .BitmapHeight ));
if _bfdg .Patterns ==nil ||len (_bfdg .Patterns )==0{_bfdg .Patterns ,_cagb =_bfdg .GetPatterns ();if _cagb !=nil {return nil ,_cagb ;};};if _bfdg .HDefaultPixel ==1{_bfdg .HalftoneRegionBitmap .SetDefaultPixel ();};_deg :=_e .Ceil (_e .Log (float64 (len (_bfdg .Patterns )))/_e .Log (2));
_cgfdg :=int (_deg );var _acd [][]int ;_acd ,_cagb =_bfdg .grayScaleDecoding (_cgfdg );if _cagb !=nil {return nil ,_cagb ;};if _cagb =_bfdg .renderPattern (_acd );_cagb !=nil {return nil ,_cagb ;};return _bfdg .HalftoneRegionBitmap ,nil ;};func (_eeabb *TextRegion )encodeSymbols (_eaga _g .BinaryWriter )(_dfcd int ,_dggg error ){const _fbaca ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
_bacg :=make ([]byte ,4);_f .BigEndian .PutUint32 (_bacg ,_eeabb .NumberOfSymbols );if _dfcd ,_dggg =_eaga .Write (_bacg );_dggg !=nil {return _dfcd ,_ff .Wrap (_dggg ,_fbaca ,"\u004e\u0075\u006dbe\u0072\u004f\u0066\u0053\u0079\u006d\u0062\u006f\u006c\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073");
};_ccgg ,_dggg :=_bd .NewClassedPoints (_eeabb ._gegb ,_eeabb ._edac );if _dggg !=nil {return 0,_ff .Wrap (_dggg ,_fbaca ,"");};var _eggg ,_gedf int ;_bacd :=_d .New ();_bacd .Init ();if _dggg =_bacd .EncodeInteger (_d .IADT ,0);_dggg !=nil {return _dfcd ,_ff .Wrap (_dggg ,_fbaca ,"\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0020\u0044\u0054");
};_fead ,_dggg :=_ccgg .GroupByY ();if _dggg !=nil {return 0,_ff .Wrap (_dggg ,_fbaca ,"");};for _ ,_fdee :=range _fead {_fccb :=int (_fdee .YAtIndex (0));_accab :=_fccb -_eggg ;if _dggg =_bacd .EncodeInteger (_d .IADT ,_accab );_dggg !=nil {return _dfcd ,_ff .Wrap (_dggg ,_fbaca ,"");
};var _efagc int ;for _ddbb ,_beeac :=range _fdee .IntSlice {switch _ddbb {case 0:_baae :=int (_fdee .XAtIndex (_ddbb ))-_gedf ;if _dggg =_bacd .EncodeInteger (_d .IAFS ,_baae );_dggg !=nil {return _dfcd ,_ff .Wrap (_dggg ,_fbaca ,"");};_gedf +=_baae ;
_efagc =_gedf ;default:_ggbb :=int (_fdee .XAtIndex (_ddbb ))-_efagc ;if _dggg =_bacd .EncodeInteger (_d .IADS ,_ggbb );_dggg !=nil {return _dfcd ,_ff .Wrap (_dggg ,_fbaca ,"");};_efagc +=_ggbb ;};_fbae ,_fffe :=_eeabb ._cbdca .Get (_beeac );if _fffe !=nil {return _dfcd ,_ff .Wrap (_fffe ,_fbaca ,"");
};_fegb ,_bfgf :=_eeabb ._ffed [_fbae ];if !_bfgf {_fegb ,_bfgf =_eeabb ._bcf [_fbae ];if !_bfgf {return _dfcd ,_ff .Errorf (_fbaca ,"\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027\u0025d\u0027\u0020\u0069s\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064 \u0069\u006e\u0020\u0067\u006cob\u0061\u006c\u0020\u0061\u006e\u0064\u0020\u006c\u006f\u0063\u0061\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020\u006d\u0061\u0070",_fbae );
};};if _fffe =_bacd .EncodeIAID (_eeabb ._beef ,_fegb );_fffe !=nil {return _dfcd ,_ff .Wrap (_fffe ,_fbaca ,"");};};if _dggg =_bacd .EncodeOOB (_d .IADS );_dggg !=nil {return _dfcd ,_ff .Wrap (_dggg ,_fbaca ,"");};};_bacd .Final ();_bbgf ,_dggg :=_bacd .WriteTo (_eaga );
if _dggg !=nil {return _dfcd ,_ff .Wrap (_dggg ,_fbaca ,"");};_dfcd +=int (_bbgf );return _dfcd ,nil ;};func (_ecb *Header )readSegmentPageAssociation (_ggd Documenter ,_egdb _g .StreamReader ,_beeab uint64 ,_cdeb ...int )(_fedb error ){const _cgga ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074P\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061t\u0069\u006f\u006e";
if !_ecb .PageAssociationFieldSize {_cgb ,_dbdf :=_egdb .ReadBits (8);if _dbdf !=nil {return _ff .Wrap (_dbdf ,_cgga ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_ecb .PageAssociation =int (_cgb &0xFF);}else {_dfbc ,_gdbg :=_egdb .ReadBits (32);
if _gdbg !=nil {return _ff .Wrap (_gdbg ,_cgga ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_ecb .PageAssociation =int (_dfbc &_e .MaxInt32 );};if _beeab ==0{return nil ;};if _ecb .PageAssociation !=0{_ffd ,_cgcg :=_ggd .GetPage (_ecb .PageAssociation );
if _cgcg !=nil {return _ff .Wrap (_cgcg ,_cgga ,"\u0061s\u0073\u006f\u0063\u0069a\u0074\u0065\u0064\u0020\u0070a\u0067e\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006ed");};var _acb int ;for _gdbf :=uint64 (0);_gdbf < _beeab ;_gdbf ++{_acb =_cdeb [_gdbf ];
_ecb .RTSegments [_gdbf ],_cgcg =_ffd .GetSegment (_acb );if _cgcg !=nil {var _fgfb error ;_ecb .RTSegments [_gdbf ],_fgfb =_ggd .GetGlobalSegment (_acb );if _fgfb !=nil {return _ff .Wrapf (_cgcg ,_cgga ,"\u0072\u0065\u0066\u0065\u0072\u0065n\u0063\u0065\u0020s\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064\u0020\u0061\u0074\u0020pa\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0072\u0020\u0069\u006e\u0020\u0067\u006c\u006f\u0062\u0061\u006c\u0073",_ecb .PageAssociation );
};};};return nil ;};for _gfbdd :=uint64 (0);_gfbdd < _beeab ;_gfbdd ++{_ecb .RTSegments [_gfbdd ],_fedb =_ggd .GetGlobalSegment (_cdeb [_gfbdd ]);if _fedb !=nil {return _ff .Wrapf (_fedb ,_cgga ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u003a\u0020\u0027\u0025d\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064",_cdeb [_gfbdd ]);
};};return nil ;};type OrganizationType uint8 ;var _ _cff .BasicTabler =&TableSegment {};func (_faga *GenericRegion )decodeTemplate3 (_gbdf ,_cgeg ,_begc int ,_gfge ,_decf int )(_ceddd error ){const _bacb ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0033";
var (_cdaf ,_ceac int ;_gge int ;_dabd byte ;_bab ,_feab int ;);if _gbdf >=1{_dabd ,_ceddd =_faga .Bitmap .GetByte (_decf );if _ceddd !=nil {return _ff .Wrap (_ceddd ,_bacb ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_gge =int (_dabd );};_cdaf =(_gge >>1)&0x70;
for _cae :=0;_cae < _begc ;_cae =_bab {var (_egab byte ;_fdda int ;);_bab =_cae +8;if _ccga :=_cgeg -_cae ;_ccga > 8{_fdda =8;}else {_fdda =_ccga ;};if _gbdf >=1{_gge <<=8;if _bab < _cgeg {_dabd ,_ceddd =_faga .Bitmap .GetByte (_decf +1);if _ceddd !=nil {return _ff .Wrap (_ceddd ,_bacb ,"\u0069\u006e\u006e\u0065\u0072\u0020\u002d\u0020\u006c\u0069\u006e\u0065 \u003e\u003d\u0020\u0031");
};_gge |=int (_dabd );};};for _cdab :=0;_cdab < _fdda ;_cdab ++{if _faga ._baa {_ceac =_faga .overrideAtTemplate3 (_cdaf ,_cae +_cdab ,_gbdf ,int (_egab ),_cdab );_faga ._afe .SetIndex (int32 (_ceac ));}else {_faga ._afe .SetIndex (int32 (_cdaf ));};_feab ,_ceddd =_faga ._ggb .DecodeBit (_faga ._afe );
if _ceddd !=nil {return _ff .Wrap (_ceddd ,_bacb ,"");};_egab |=byte (_feab )<<byte (7-_cdab );_cdaf =((_cdaf &0x1f7)<<1)|_feab |((_gge >>uint (8-_cdab ))&0x010);};if _aae :=_faga .Bitmap .SetByte (_gfge ,_egab );_aae !=nil {return _ff .Wrap (_aae ,_bacb ,"");
};_gfge ++;_decf ++;};return nil ;};func (_cfbe *GenericRegion )updateOverrideFlags ()error {const _cgac ="\u0075\u0070\u0064\u0061te\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _cfbe .GBAtX ==nil ||_cfbe .GBAtY ==nil {return nil ;
};if len (_cfbe .GBAtX )!=len (_cfbe .GBAtY ){return _ff .Errorf (_cgac ,"i\u006eco\u0073i\u0073t\u0065\u006e\u0074\u0020\u0041T\u0020\u0070\u0069x\u0065\u006c\u002e\u0020\u0041m\u006f\u0075\u006et\u0020\u006f\u0066\u0020\u0027\u0078\u0027\u0020\u0070\u0069\u0078e\u006c\u0073\u003a %d\u002c\u0020\u0041\u006d\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0027\u0079\u0027\u0020\u0070\u0069\u0078e\u006cs\u003a\u0020\u0025\u0064",len (_cfbe .GBAtX ),len (_cfbe .GBAtY ));
};_cfbe .GBAtOverride =make ([]bool ,len (_cfbe .GBAtX ));switch _cfbe .GBTemplate {case 0:if !_cfbe .UseExtTemplates {if _cfbe .GBAtX [0]!=3||_cfbe .GBAtY [0]!=-1{_cfbe .setOverrideFlag (0);};if _cfbe .GBAtX [1]!=-3||_cfbe .GBAtY [1]!=-1{_cfbe .setOverrideFlag (1);
};if _cfbe .GBAtX [2]!=2||_cfbe .GBAtY [2]!=-2{_cfbe .setOverrideFlag (2);};if _cfbe .GBAtX [3]!=-2||_cfbe .GBAtY [3]!=-2{_cfbe .setOverrideFlag (3);};}else {if _cfbe .GBAtX [0]!=-2||_cfbe .GBAtY [0]!=0{_cfbe .setOverrideFlag (0);};if _cfbe .GBAtX [1]!=0||_cfbe .GBAtY [1]!=-2{_cfbe .setOverrideFlag (1);
};if _cfbe .GBAtX [2]!=-2||_cfbe .GBAtY [2]!=-1{_cfbe .setOverrideFlag (2);};if _cfbe .GBAtX [3]!=-1||_cfbe .GBAtY [3]!=-2{_cfbe .setOverrideFlag (3);};if _cfbe .GBAtX [4]!=1||_cfbe .GBAtY [4]!=-2{_cfbe .setOverrideFlag (4);};if _cfbe .GBAtX [5]!=2||_cfbe .GBAtY [5]!=-1{_cfbe .setOverrideFlag (5);
};if _cfbe .GBAtX [6]!=-3||_cfbe .GBAtY [6]!=0{_cfbe .setOverrideFlag (6);};if _cfbe .GBAtX [7]!=-4||_cfbe .GBAtY [7]!=0{_cfbe .setOverrideFlag (7);};if _cfbe .GBAtX [8]!=2||_cfbe .GBAtY [8]!=-2{_cfbe .setOverrideFlag (8);};if _cfbe .GBAtX [9]!=3||_cfbe .GBAtY [9]!=-1{_cfbe .setOverrideFlag (9);
};if _cfbe .GBAtX [10]!=-2||_cfbe .GBAtY [10]!=-2{_cfbe .setOverrideFlag (10);};if _cfbe .GBAtX [11]!=-3||_cfbe .GBAtY [11]!=-1{_cfbe .setOverrideFlag (11);};};case 1:if _cfbe .GBAtX [0]!=3||_cfbe .GBAtY [0]!=-1{_cfbe .setOverrideFlag (0);};case 2:if _cfbe .GBAtX [0]!=2||_cfbe .GBAtY [0]!=-1{_cfbe .setOverrideFlag (0);
};case 3:if _cfbe .GBAtX [0]!=2||_cfbe .GBAtY [0]!=-1{_cfbe .setOverrideFlag (0);};};return nil ;};func (_cbccb *HalftoneRegion )computeGrayScalePlanes (_gdcc []*_bd .Bitmap ,_gcbb int )([][]int ,error ){_bcdec :=make ([][]int ,_cbccb .HGridHeight );for _afea :=0;
_afea < len (_bcdec );_afea ++{_bcdec [_afea ]=make ([]int ,_cbccb .HGridWidth );};for _bead :=0;_bead < int (_cbccb .HGridHeight );_bead ++{for _edge :=0;_edge < int (_cbccb .HGridWidth );_edge +=8{var _fdf int ;if _bfbf :=int (_cbccb .HGridWidth )-_edge ;
_bfbf > 8{_fdf =8;}else {_fdf =_bfbf ;};_adde :=_gdcc [0].GetByteIndex (_edge ,_bead );for _gfbd :=0;_gfbd < _fdf ;_gfbd ++{_afce :=_gfbd +_edge ;_bcdec [_bead ][_afce ]=0;for _dbgd :=0;_dbgd < _gcbb ;_dbgd ++{_adbd ,_feabg :=_gdcc [_dbgd ].GetByte (_adde );
if _feabg !=nil {return nil ,_feabg ;};_gdb :=_adbd >>uint (7-_afce &7);_cebd :=_gdb &1;_acdc :=1<<uint (_dbgd );_fbga :=int (_cebd )*_acdc ;_bcdec [_bead ][_afce ]+=_fbga ;};};};};return _bcdec ,nil ;};func (_bf *GenericRefinementRegion )GetRegionInfo ()*RegionSegment {return _bf .RegionInfo };
func (_eeca *HalftoneRegion )combineGrayscalePlanes (_ddega []*_bd .Bitmap ,_ffcg int )error {_cbcc :=0;for _ebbg :=0;_ebbg < _ddega [_ffcg ].Height ;_ebbg ++{for _acc :=0;_acc < _ddega [_ffcg ].Width ;_acc +=8{_edd ,_ecg :=_ddega [_ffcg +1].GetByte (_cbcc );
if _ecg !=nil {return _ecg ;};_ffae ,_ecg :=_ddega [_ffcg ].GetByte (_cbcc );if _ecg !=nil {return _ecg ;};_ecg =_ddega [_ffcg ].SetByte (_cbcc ,_bd .CombineBytes (_ffae ,_edd ,_bd .CmbOpXor ));if _ecg !=nil {return _ecg ;};_cbcc ++;};};return nil ;};var (_fad Segmenter ;
_agce =map[Type ]func ()Segmenter {TSymbolDictionary :func ()Segmenter {return &SymbolDictionary {}},TIntermediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateLosslessTextRegion :func ()Segmenter {return &TextRegion {}},TPatternDictionary :func ()Segmenter {return &PatternDictionary {}},TIntermediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateLosslessHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TIntermediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateLosslessGenericRegion :func ()Segmenter {return &GenericRegion {}},TIntermediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateLosslessGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TPageInformation :func ()Segmenter {return &PageInformationSegment {}},TEndOfPage :func ()Segmenter {return _fad },TEndOfStrip :func ()Segmenter {return &EndOfStripe {}},TEndOfFile :func ()Segmenter {return _fad },TProfiles :func ()Segmenter {return _fad },TTables :func ()Segmenter {return &TableSegment {}},TExtension :func ()Segmenter {return _fad },TBitmap :func ()Segmenter {return _fad }};
);func (_dgae *SymbolDictionary )decodeAggregate (_dbbc ,_efdc uint32 )error {var (_gbgf int64 ;_ffag error ;);if _dgae .IsHuffmanEncoded {_gbgf ,_ffag =_dgae .huffDecodeRefAggNInst ();if _ffag !=nil {return _ffag ;};}else {_fbfg ,_ddgg :=_dgae ._fdef .DecodeInt (_dgae ._bgabg );
if _ddgg !=nil {return _ddgg ;};_gbgf =int64 (_fbfg );};if _gbgf > 1{return _dgae .decodeThroughTextRegion (_dbbc ,_efdc ,uint32 (_gbgf ));}else if _gbgf ==1{return _dgae .decodeRefinedSymbol (_dbbc ,_efdc );};return nil ;};func (_egfe *GenericRegion )overrideAtTemplate0b (_dcef ,_gac ,_bgce ,_afbc ,_dccd ,_fed int )int {if _egfe .GBAtOverride [0]{_dcef &=0xFFFD;
if _egfe .GBAtY [0]==0&&_egfe .GBAtX [0]>=-int8 (_dccd ){_dcef |=(_afbc >>uint (int8 (_fed )-_egfe .GBAtX [0]&0x1))<<1;}else {_dcef |=int (_egfe .getPixel (_gac +int (_egfe .GBAtX [0]),_bgce +int (_egfe .GBAtY [0])))<<1;};};if _egfe .GBAtOverride [1]{_dcef &=0xDFFF;
if _egfe .GBAtY [1]==0&&_egfe .GBAtX [1]>=-int8 (_dccd ){_dcef |=(_afbc >>uint (int8 (_fed )-_egfe .GBAtX [1]&0x1))<<13;}else {_dcef |=int (_egfe .getPixel (_gac +int (_egfe .GBAtX [1]),_bgce +int (_egfe .GBAtY [1])))<<13;};};if _egfe .GBAtOverride [2]{_dcef &=0xFDFF;
if _egfe .GBAtY [2]==0&&_egfe .GBAtX [2]>=-int8 (_dccd ){_dcef |=(_afbc >>uint (int8 (_fed )-_egfe .GBAtX [2]&0x1))<<9;}else {_dcef |=int (_egfe .getPixel (_gac +int (_egfe .GBAtX [2]),_bgce +int (_egfe .GBAtY [2])))<<9;};};if _egfe .GBAtOverride [3]{_dcef &=0xBFFF;
if _egfe .GBAtY [3]==0&&_egfe .GBAtX [3]>=-int8 (_dccd ){_dcef |=(_afbc >>uint (int8 (_fed )-_egfe .GBAtX [3]&0x1))<<14;}else {_dcef |=int (_egfe .getPixel (_gac +int (_egfe .GBAtX [3]),_bgce +int (_egfe .GBAtY [3])))<<14;};};if _egfe .GBAtOverride [4]{_dcef &=0xEFFF;
if _egfe .GBAtY [4]==0&&_egfe .GBAtX [4]>=-int8 (_dccd ){_dcef |=(_afbc >>uint (int8 (_fed )-_egfe .GBAtX [4]&0x1))<<12;}else {_dcef |=int (_egfe .getPixel (_gac +int (_egfe .GBAtX [4]),_bgce +int (_egfe .GBAtY [4])))<<12;};};if _egfe .GBAtOverride [5]{_dcef &=0xFFDF;
if _egfe .GBAtY [5]==0&&_egfe .GBAtX [5]>=-int8 (_dccd ){_dcef |=(_afbc >>uint (int8 (_fed )-_egfe .GBAtX [5]&0x1))<<5;}else {_dcef |=int (_egfe .getPixel (_gac +int (_egfe .GBAtX [5]),_bgce +int (_egfe .GBAtY [5])))<<5;};};if _egfe .GBAtOverride [6]{_dcef &=0xFFFB;
if _egfe .GBAtY [6]==0&&_egfe .GBAtX [6]>=-int8 (_dccd ){_dcef |=(_afbc >>uint (int8 (_fed )-_egfe .GBAtX [6]&0x1))<<2;}else {_dcef |=int (_egfe .getPixel (_gac +int (_egfe .GBAtX [6]),_bgce +int (_egfe .GBAtY [6])))<<2;};};if _egfe .GBAtOverride [7]{_dcef &=0xFFF7;
if _egfe .GBAtY [7]==0&&_egfe .GBAtX [7]>=-int8 (_dccd ){_dcef |=(_afbc >>uint (int8 (_fed )-_egfe .GBAtX [7]&0x1))<<3;}else {_dcef |=int (_egfe .getPixel (_gac +int (_egfe .GBAtX [7]),_bgce +int (_egfe .GBAtY [7])))<<3;};};if _egfe .GBAtOverride [8]{_dcef &=0xF7FF;
if _egfe .GBAtY [8]==0&&_egfe .GBAtX [8]>=-int8 (_dccd ){_dcef |=(_afbc >>uint (int8 (_fed )-_egfe .GBAtX [8]&0x1))<<11;}else {_dcef |=int (_egfe .getPixel (_gac +int (_egfe .GBAtX [8]),_bgce +int (_egfe .GBAtY [8])))<<11;};};if _egfe .GBAtOverride [9]{_dcef &=0xFFEF;
if _egfe .GBAtY [9]==0&&_egfe .GBAtX [9]>=-int8 (_dccd ){_dcef |=(_afbc >>uint (int8 (_fed )-_egfe .GBAtX [9]&0x1))<<4;}else {_dcef |=int (_egfe .getPixel (_gac +int (_egfe .GBAtX [9]),_bgce +int (_egfe .GBAtY [9])))<<4;};};if _egfe .GBAtOverride [10]{_dcef &=0x7FFF;
if _egfe .GBAtY [10]==0&&_egfe .GBAtX [10]>=-int8 (_dccd ){_dcef |=(_afbc >>uint (int8 (_fed )-_egfe .GBAtX [10]&0x1))<<15;}else {_dcef |=int (_egfe .getPixel (_gac +int (_egfe .GBAtX [10]),_bgce +int (_egfe .GBAtY [10])))<<15;};};if _egfe .GBAtOverride [11]{_dcef &=0xFDFF;
if _egfe .GBAtY [11]==0&&_egfe .GBAtX [11]>=-int8 (_dccd ){_dcef |=(_afbc >>uint (int8 (_fed )-_egfe .GBAtX [11]&0x1))<<10;}else {_dcef |=int (_egfe .getPixel (_gac +int (_egfe .GBAtX [11]),_bgce +int (_egfe .GBAtY [11])))<<10;};};return _dcef ;};type PatternDictionary struct{_gcga _g .StreamReader ;
DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;GBAtX []int8 ;GBAtY []int8 ;IsMMREncoded bool ;HDTemplate byte ;HdpWidth byte ;HdpHeight byte ;Patterns []*_bd .Bitmap ;GrayMax uint32 ;};func (_eaef *GenericRegion )Size ()int {return _eaef .RegionSegment .Size ()+1+2*len (_eaef .GBAtX )};
func (_gad *PageInformationSegment )parseHeader ()(_afg error ){_ab .Log .Trace ("\u005b\u0050\u0061\u0067\u0065I\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067m\u0065\u006e\u0074\u005d\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u002e\u002e");
defer func (){var _fcec ="[\u0050\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072m\u0061\u0074\u0069\u006f\u006e\u0053\u0065gm\u0065\u006e\u0074\u005d \u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065ad\u0065\u0072 \u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064";
if _afg !=nil {_fcec +="\u0020\u0077\u0069t\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u0020"+_afg .Error ();}else {_fcec +="\u0020\u0073\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079";};_ab .Log .Trace (_fcec );}();if _afg =_gad .readWidthAndHeight ();
_afg !=nil {return _afg ;};if _afg =_gad .readResolution ();_afg !=nil {return _afg ;};_ ,_afg =_gad ._cefa .ReadBit ();if _afg !=nil {return _afg ;};if _afg =_gad .readCombinationOperatorOverrideAllowed ();_afg !=nil {return _afg ;};if _afg =_gad .readRequiresAuxiliaryBuffer ();
_afg !=nil {return _afg ;};if _afg =_gad .readCombinationOperator ();_afg !=nil {return _afg ;};if _afg =_gad .readDefaultPixelValue ();_afg !=nil {return _afg ;};if _afg =_gad .readContainsRefinement ();_afg !=nil {return _afg ;};if _afg =_gad .readIsLossless ();
_afg !=nil {return _afg ;};if _afg =_gad .readIsStriped ();_afg !=nil {return _afg ;};if _afg =_gad .readMaxStripeSize ();_afg !=nil {return _afg ;};if _afg =_gad .checkInput ();_afg !=nil {return _afg ;};_ab .Log .Trace ("\u0025\u0073",_gad );return nil ;
};type TextRegion struct{_aaaa _g .StreamReader ;RegionInfo *RegionSegment ;SbrTemplate int8 ;SbDsOffset int8 ;DefaultPixel int8 ;CombinationOperator _bd .CombinationOperator ;IsTransposed int8 ;ReferenceCorner int16 ;LogSBStrips int16 ;UseRefinement bool ;
IsHuffmanEncoded bool ;SbHuffRSize int8 ;SbHuffRDY int8 ;SbHuffRDX int8 ;SbHuffRDHeight int8 ;SbHuffRDWidth int8 ;SbHuffDT int8 ;SbHuffDS int8 ;SbHuffFS int8 ;SbrATX []int8 ;SbrATY []int8 ;NumberOfSymbolInstances uint32 ;_bdfg int64 ;SbStrips int8 ;NumberOfSymbols uint32 ;
RegionBitmap *_bd .Bitmap ;Symbols []*_bd .Bitmap ;_accg *_eae .Decoder ;_cfbad *GenericRefinementRegion ;_baaae *_eae .DecoderStats ;_baad *_eae .DecoderStats ;_egfd *_eae .DecoderStats ;_bddac *_eae .DecoderStats ;_daca *_eae .DecoderStats ;_gcecg *_eae .DecoderStats ;
_fff *_eae .DecoderStats ;_dageb *_eae .DecoderStats ;_gbf *_eae .DecoderStats ;_ddedc *_eae .DecoderStats ;_gcafb *_eae .DecoderStats ;_abef int8 ;_edcg *_cff .FixedSizeTable ;Header *Header ;_dbec _cff .Tabler ;_gdcbf _cff .Tabler ;_egbd _cff .Tabler ;
_fbbb _cff .Tabler ;_cbcg _cff .Tabler ;_cgad _cff .Tabler ;_cgcc _cff .Tabler ;_abce _cff .Tabler ;_ffed ,_bcf map[int ]int ;_edac []int ;_gegb *_bd .Points ;_abceg *_bd .Bitmaps ;_cbdca *_cf .IntSlice ;_bfef ,_beef int ;_fae *_bd .Boxes ;};func (_aadf *HalftoneRegion )shiftAndFill (_cde int )int {_cde >>=8;
if _cde < 0{_ggfc :=int (_e .Log (float64 (_gbca (_cde )))/_e .Log (2));_egdd :=31-_ggfc ;for _dcec :=1;_dcec < _egdd ;_dcec ++{_cde |=1<<uint (31-_dcec );};};return _cde ;};func (_cebg *GenericRegion )decodeTemplate2 (_beea ,_gbef ,_dgfa int ,_aegf ,_ceg int )(_ead error ){const _fag ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0032";
var (_cda ,_egff int ;_bga ,_gdfe int ;_ddef byte ;_cbdc ,_bcde int ;);if _beea >=1{_ddef ,_ead =_cebg .Bitmap .GetByte (_ceg );if _ead !=nil {return _ff .Wrap (_ead ,_fag ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0031");
};_bga =int (_ddef );};if _beea >=2{_ddef ,_ead =_cebg .Bitmap .GetByte (_ceg -_cebg .Bitmap .RowStride );if _ead !=nil {return _ff .Wrap (_ead ,_fag ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0032");};_gdfe =int (_ddef )<<4;
};_cda =(_bga >>3&0x7c)|(_gdfe >>3&0x380);for _cfba :=0;_cfba < _dgfa ;_cfba =_cbdc {var (_bcdg byte ;_faaf int ;);_cbdc =_cfba +8;if _fcc :=_gbef -_cfba ;_fcc > 8{_faaf =8;}else {_faaf =_fcc ;};if _beea > 0{_bga <<=8;if _cbdc < _gbef {_ddef ,_ead =_cebg .Bitmap .GetByte (_ceg +1);
if _ead !=nil {return _ff .Wrap (_ead ,_fag ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0030");};_bga |=int (_ddef );};};if _beea > 1{_gdfe <<=8;if _cbdc < _gbef {_ddef ,_ead =_cebg .Bitmap .GetByte (_ceg -_cebg .Bitmap .RowStride +1);
if _ead !=nil {return _ff .Wrap (_ead ,_fag ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0031");};_gdfe |=int (_ddef )<<4;};};for _geed :=0;_geed < _faaf ;_geed ++{_egg :=uint (10-_geed );if _cebg ._baa {_egff =_cebg .overrideAtTemplate2 (_cda ,_cfba +_geed ,_beea ,int (_bcdg ),_geed );
_cebg ._afe .SetIndex (int32 (_egff ));}else {_cebg ._afe .SetIndex (int32 (_cda ));};_bcde ,_ead =_cebg ._ggb .DecodeBit (_cebg ._afe );if _ead !=nil {return _ff .Wrap (_ead ,_fag ,"");};_bcdg |=byte (_bcde <<uint (7-_geed ));_cda =((_cda &0x1bd)<<1)|_bcde |((_bga >>_egg )&0x4)|((_gdfe >>_egg )&0x80);
};if _faff :=_cebg .Bitmap .SetByte (_aegf ,_bcdg );_faff !=nil {return _ff .Wrap (_faff ,_fag ,"");};_aegf ++;_ceg ++;};return nil ;};func (_age *SymbolDictionary )readRegionFlags ()error {var (_bfcd uint64 ;_eggd int ;);_ ,_aceee :=_age ._cacc .ReadBits (3);
if _aceee !=nil {return _aceee ;};_eggd ,_aceee =_age ._cacc .ReadBit ();if _aceee !=nil {return _aceee ;};_age .SdrTemplate =int8 (_eggd );_bfcd ,_aceee =_age ._cacc .ReadBits (2);if _aceee !=nil {return _aceee ;};_age .SdTemplate =int8 (_bfcd &0xf);_eggd ,_aceee =_age ._cacc .ReadBit ();
if _aceee !=nil {return _aceee ;};if _eggd ==1{_age ._gfeae =true ;};_eggd ,_aceee =_age ._cacc .ReadBit ();if _aceee !=nil {return _aceee ;};if _eggd ==1{_age ._afceb =true ;};_eggd ,_aceee =_age ._cacc .ReadBit ();if _aceee !=nil {return _aceee ;};if _eggd ==1{_age .SdHuffAggInstanceSelection =true ;
};_eggd ,_aceee =_age ._cacc .ReadBit ();if _aceee !=nil {return _aceee ;};_age .SdHuffBMSizeSelection =int8 (_eggd );_bfcd ,_aceee =_age ._cacc .ReadBits (2);if _aceee !=nil {return _aceee ;};_age .SdHuffDecodeWidthSelection =int8 (_bfcd &0xf);_bfcd ,_aceee =_age ._cacc .ReadBits (2);
if _aceee !=nil {return _aceee ;};_age .SdHuffDecodeHeightSelection =int8 (_bfcd &0xf);_eggd ,_aceee =_age ._cacc .ReadBit ();if _aceee !=nil {return _aceee ;};if _eggd ==1{_age .UseRefinementAggregation =true ;};_eggd ,_aceee =_age ._cacc .ReadBit ();
if _aceee !=nil {return _aceee ;};if _eggd ==1{_age .IsHuffmanEncoded =true ;};return nil ;};func (_acba *TextRegion )decodeIb (_fdcb ,_ggad int64 )(*_bd .Bitmap ,error ){const _fgge ="\u0064\u0065\u0063\u006f\u0064\u0065\u0049\u0062";var (_babd error ;
_fbfd *_bd .Bitmap ;);if _fdcb ==0{if int (_ggad )> len (_acba .Symbols )-1{return nil ,_ff .Error (_fgge ,"\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0049\u0042\u0020\u0062\u0069\u0074\u006d\u0061\u0070\u002e\u0020\u0069\u006e\u0064\u0065x\u0020\u006f\u0075\u0074\u0020o\u0066\u0020r\u0061\u006e\u0067\u0065");
};return _acba .Symbols [int (_ggad )],nil ;};var _cbddg ,_fgea ,_eded ,_ggggd int64 ;_cbddg ,_babd =_acba .decodeRdw ();if _babd !=nil {return nil ,_ff .Wrap (_babd ,_fgge ,"");};_fgea ,_babd =_acba .decodeRdh ();if _babd !=nil {return nil ,_ff .Wrap (_babd ,_fgge ,"");
};_eded ,_babd =_acba .decodeRdx ();if _babd !=nil {return nil ,_ff .Wrap (_babd ,_fgge ,"");};_ggggd ,_babd =_acba .decodeRdy ();if _babd !=nil {return nil ,_ff .Wrap (_babd ,_fgge ,"");};if _acba .IsHuffmanEncoded {if _ ,_babd =_acba .decodeSymInRefSize ();
_babd !=nil {return nil ,_ff .Wrap (_babd ,_fgge ,"");};_acba ._aaaa .Align ();};_beb :=_acba .Symbols [_ggad ];_gfaa :=uint32 (_beb .Width );_aegg :=uint32 (_beb .Height );_faaee :=int32 (uint32 (_cbddg )>>1)+int32 (_eded );_dgcg :=int32 (uint32 (_fgea )>>1)+int32 (_ggggd );
if _acba ._cfbad ==nil {_acba ._cfbad =_ffe (_acba ._aaaa ,nil );};_acba ._cfbad .setParameters (_acba ._gcafb ,_acba ._accg ,_acba .SbrTemplate ,_gfaa +uint32 (_cbddg ),_aegg +uint32 (_fgea ),_beb ,_faaee ,_dgcg ,false ,_acba .SbrATX ,_acba .SbrATY );
_fbfd ,_babd =_acba ._cfbad .GetRegionBitmap ();if _babd !=nil {return nil ,_ff .Wrap (_babd ,_fgge ,"\u0067\u0072\u0066");};if _acba .IsHuffmanEncoded {_acba ._aaaa .Align ();};return _fbfd ,nil ;};func (_eeeb *TextRegion )createRegionBitmap ()error {_eeeb .RegionBitmap =_bd .New (int (_eeeb .RegionInfo .BitmapWidth ),int (_eeeb .RegionInfo .BitmapHeight ));
if _eeeb .DefaultPixel !=0{_eeeb .RegionBitmap .SetDefaultPixel ();};return nil ;};func (_cgaca *HalftoneRegion )GetRegionInfo ()*RegionSegment {return _cgaca .RegionSegment };func (_efaa *PatternDictionary )parseHeader ()error {_ab .Log .Trace ("\u005b\u0050\u0041\u0054\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054I\u004f\u004e\u0041\u0052\u0059\u005d[\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d\u0020b\u0065\u0067\u0069\u006e");
defer func (){_ab .Log .Trace ("\u005b\u0050\u0041T\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u005b\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
}();_ ,_gdec :=_efaa ._gcga .ReadBits (5);if _gdec !=nil {return _gdec ;};if _gdec =_efaa .readTemplate ();_gdec !=nil {return _gdec ;};if _gdec =_efaa .readIsMMREncoded ();_gdec !=nil {return _gdec ;};if _gdec =_efaa .readPatternWidthAndHeight ();_gdec !=nil {return _gdec ;
};if _gdec =_efaa .readGrayMax ();_gdec !=nil {return _gdec ;};if _gdec =_efaa .computeSegmentDataStructure ();_gdec !=nil {return _gdec ;};return _efaa .checkInput ();};func (_cab *GenericRegion )GetRegionInfo ()*RegionSegment {return _cab .RegionSegment };
type EncodeInitializer interface{InitEncode ();};func (_fdc *GenericRefinementRegion )decodeTypicalPredictedLine (_fbd ,_aaf ,_egd ,_dac ,_be ,_gca int )error {_fg :=_fbd -int (_fdc .ReferenceDY );_ggg :=_fdc .ReferenceBitmap .GetByteIndex (0,_fg );_bac :=_fdc .RegionBitmap .GetByteIndex (0,_fbd );
var _fge error ;switch _fdc .TemplateID {case 0:_fge =_fdc .decodeTypicalPredictedLineTemplate0 (_fbd ,_aaf ,_egd ,_dac ,_be ,_gca ,_bac ,_fg ,_ggg );case 1:_fge =_fdc .decodeTypicalPredictedLineTemplate1 (_fbd ,_aaf ,_egd ,_dac ,_be ,_gca ,_bac ,_fg ,_ggg );
};return _fge ;};func (_acdb *SymbolDictionary )readAtPixels (_defb int )error {_acdb .SdATX =make ([]int8 ,_defb );_acdb .SdATY =make ([]int8 ,_defb );var (_eabc byte ;_cccdb error ;);for _bfbb :=0;_bfbb < _defb ;_bfbb ++{_eabc ,_cccdb =_acdb ._cacc .ReadByte ();
if _cccdb !=nil {return _cccdb ;};_acdb .SdATX [_bfbb ]=int8 (_eabc );_eabc ,_cccdb =_acdb ._cacc .ReadByte ();if _cccdb !=nil {return _cccdb ;};_acdb .SdATY [_bfbb ]=int8 (_eabc );};return nil ;};func (_fdfb *TableSegment )HtPS ()int32 {return _fdfb ._gbcd };
func (_ecfb *PageInformationSegment )readRequiresAuxiliaryBuffer ()error {_aafb ,_bffe :=_ecfb ._cefa .ReadBit ();if _bffe !=nil {return _bffe ;};if _aafb ==1{_ecfb ._egca =true ;};return nil ;};func (_eagcd *SymbolDictionary )decodeHeightClassDeltaHeightWithHuffman ()(int64 ,error ){switch _eagcd .SdHuffDecodeHeightSelection {case 0:_cggc ,_ccee :=_cff .GetStandardTable (4);
if _ccee !=nil {return 0,_ccee ;};return _cggc .Decode (_eagcd ._cacc );case 1:_acfe ,_dcgd :=_cff .GetStandardTable (5);if _dcgd !=nil {return 0,_dcgd ;};return _acfe .Decode (_eagcd ._cacc );case 3:if _eagcd ._geag ==nil {_bfab ,_gdbe :=_cff .GetStandardTable (0);
if _gdbe !=nil {return 0,_gdbe ;};_eagcd ._geag =_bfab ;};return _eagcd ._geag .Decode (_eagcd ._cacc );};return 0,nil ;};func (_dbb *Header )subInputReader ()(_g .StreamReader ,error ){return _g .NewSubstreamReader (_dbb .Reader ,_dbb .SegmentDataStartOffset ,_dbb .SegmentDataLength );
};func (_bgc *GenericRefinementRegion )parseHeader ()(_fgb error ){_ab .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0048e\u0061\u0064e\u0072\u002e\u002e\u002e");
_aaad :=_fe .Now ();defer func (){if _fgb ==nil {_ab .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045G\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020h\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0069\u006e\u0069\u0073\u0068id\u0020\u0069\u006e\u003a\u0020\u0025\u0064\u0020\u006e\u0073",_fe .Since (_aaad ).Nanoseconds ());
}else {_ab .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0068\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0073",_fgb );
};}();if _fgb =_bgc .RegionInfo .parseHeader ();_fgb !=nil {return _fgb ;};_ ,_fgb =_bgc ._baf .ReadBits (6);if _fgb !=nil {return _fgb ;};_bgc .IsTPGROn ,_fgb =_bgc ._baf .ReadBool ();if _fgb !=nil {return _fgb ;};var _ddag int ;_ddag ,_fgb =_bgc ._baf .ReadBit ();
if _fgb !=nil {return _fgb ;};_bgc .TemplateID =int8 (_ddag );switch _bgc .TemplateID {case 0:_bgc .Template =_bgc ._fb ;if _fgb =_bgc .readAtPixels ();_fgb !=nil {return ;};case 1:_bgc .Template =_bgc ._fbg ;};return nil ;};func (_effb *TableSegment )parseHeader ()error {var (_cceg int ;
_cfcg uint64 ;_gebf error ;);_cceg ,_gebf =_effb ._afad .ReadBit ();if _gebf !=nil {return _gebf ;};if _cceg ==1{return _b .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0061\u0062\u006c\u0065 \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0064e\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u002e\u0020\u0042\u002e\u0032\u002e1\u0020\u0043\u006f\u0064\u0065\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0042\u0069\u0074\u0020\u0037\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u007a\u0065\u0072\u006f\u002e\u0020\u0057a\u0073\u003a \u0025\u0064",_cceg );
};if _cfcg ,_gebf =_effb ._afad .ReadBits (3);_gebf !=nil {return _gebf ;};_effb ._bgfe =(int32 (_cfcg )+1)&0xf;if _cfcg ,_gebf =_effb ._afad .ReadBits (3);_gebf !=nil {return _gebf ;};_effb ._gbcd =(int32 (_cfcg )+1)&0xf;if _cfcg ,_gebf =_effb ._afad .ReadBits (32);
_gebf !=nil {return _gebf ;};_effb ._ffdg =int32 (_cfcg &_e .MaxInt32 );if _cfcg ,_gebf =_effb ._afad .ReadBits (32);_gebf !=nil {return _gebf ;};_effb ._faffd =int32 (_cfcg &_e .MaxInt32 );return nil ;};func (_cggaa *PageInformationSegment )checkInput ()error {if _cggaa .PageBMHeight ==_e .MaxInt32 {if !_cggaa .IsStripe {_ab .Log .Debug ("P\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0053\u0065\u0067me\u006e\u0074\u002e\u0049s\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0073\u0068ou\u006c\u0064 \u0062\u0065\u0020\u0074\u0072\u0075\u0065\u002e");
};};return nil ;};func (_gbeb *TextRegion )decodeCurrentT ()(int64 ,error ){if _gbeb .SbStrips !=1{if _gbeb .IsHuffmanEncoded {_fgecc ,_gbbde :=_gbeb ._aaaa .ReadBits (byte (_gbeb .LogSBStrips ));return int64 (_fgecc ),_gbbde ;};_gfdb ,_adca :=_gbeb ._accg .DecodeInt (_gbeb ._bddac );
if _adca !=nil {return 0,_adca ;};return int64 (_gfdb ),nil ;};return 0,nil ;};func (_bbgg *SymbolDictionary )encodeATFlags (_abae _g .BinaryWriter )(_agcg int ,_deab error ){const _daa ="\u0065\u006e\u0063\u006f\u0064\u0065\u0041\u0054\u0046\u006c\u0061\u0067\u0073";
if _bbgg .IsHuffmanEncoded ||_bbgg .SdTemplate !=0{return 0,nil ;};_afbfa :=4;if _bbgg .SdTemplate !=0{_afbfa =1;};for _cdafb :=0;_cdafb < _afbfa ;_cdafb ++{if _deab =_abae .WriteByte (byte (_bbgg .SdATX [_cdafb ]));_deab !=nil {return _agcg ,_ff .Wrapf (_deab ,_daa ,"\u0053d\u0041\u0054\u0058\u005b\u0025\u0064]",_cdafb );
};_agcg ++;if _deab =_abae .WriteByte (byte (_bbgg .SdATY [_cdafb ]));_deab !=nil {return _agcg ,_ff .Wrapf (_deab ,_daa ,"\u0053d\u0041\u0054\u0059\u005b\u0025\u0064]",_cdafb );};_agcg ++;};return _agcg ,nil ;};func (_dedf *TextRegion )getUserTable (_abefg int )(_cff .Tabler ,error ){const _cgff ="\u0067\u0065\u0074U\u0073\u0065\u0072\u0054\u0061\u0062\u006c\u0065";
var _dgbd int ;for _ ,_bgabgg :=range _dedf .Header .RTSegments {if _bgabgg .Type ==53{if _dgbd ==_abefg {_gade ,_dfcb :=_bgabgg .GetSegmentData ();if _dfcb !=nil {return nil ,_dfcb ;};_bfcef ,_caee :=_gade .(*TableSegment );if !_caee {_ab .Log .Debug (_b .Sprintf ("\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079p\u0065\u00205\u0033\u0020\u002d\u0020\u0061\u006ed\u0020in\u0064\u0065\u0078\u003a\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_bgabgg .SegmentNumber ));
return nil ,_ff .Error (_cgff ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079\u0070e\u0020\u0035\u0033\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u002a\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};return _cff .NewEncodedTable (_bfcef );};_dgbd ++;};};return nil ,nil ;};func (_faffb *SymbolDictionary )setCodingStatistics ()error {if _faffb ._fced ==nil {_faffb ._fced =_eae .NewStats (512,1);};if _faffb ._bddf ==nil {_faffb ._bddf =_eae .NewStats (512,1);
};if _faffb ._acfc ==nil {_faffb ._acfc =_eae .NewStats (512,1);};if _faffb ._bgabg ==nil {_faffb ._bgabg =_eae .NewStats (512,1);};if _faffb ._decc ==nil {_faffb ._decc =_eae .NewStats (512,1);};if _faffb .UseRefinementAggregation &&_faffb ._efad ==nil {_faffb ._efad =_eae .NewStats (1<<uint (_faffb ._bafc ),1);
_faffb ._bdad =_eae .NewStats (512,1);_faffb ._abda =_eae .NewStats (512,1);};if _faffb ._gcagg ==nil {_faffb ._gcagg =_eae .NewStats (65536,1);};if _faffb ._fdef ==nil {var _ede error ;_faffb ._fdef ,_ede =_eae .New (_faffb ._cacc );if _ede !=nil {return _ede ;
};};return nil ;};type SymbolDictionary struct{_cacc _g .StreamReader ;SdrTemplate int8 ;SdTemplate int8 ;_gfeae bool ;_afceb bool ;SdHuffAggInstanceSelection bool ;SdHuffBMSizeSelection int8 ;SdHuffDecodeWidthSelection int8 ;SdHuffDecodeHeightSelection int8 ;
UseRefinementAggregation bool ;IsHuffmanEncoded bool ;SdATX []int8 ;SdATY []int8 ;SdrATX []int8 ;SdrATY []int8 ;NumberOfExportedSymbols uint32 ;NumberOfNewSymbols uint32 ;Header *Header ;_dcfe uint32 ;_bedb []*_bd .Bitmap ;_ebeb uint32 ;_ccdc []*_bd .Bitmap ;
_geag _cff .Tabler ;_bbdb _cff .Tabler ;_bacbf _cff .Tabler ;_gebg _cff .Tabler ;_deed []*_bd .Bitmap ;_ddcgf []*_bd .Bitmap ;_fdef *_eae .Decoder ;_ccbc *TextRegion ;_beee *GenericRegion ;_cgdd *GenericRefinementRegion ;_gcagg *_eae .DecoderStats ;_bddf *_eae .DecoderStats ;
_acfc *_eae .DecoderStats ;_bgabg *_eae .DecoderStats ;_decc *_eae .DecoderStats ;_bdad *_eae .DecoderStats ;_abda *_eae .DecoderStats ;_fced *_eae .DecoderStats ;_efad *_eae .DecoderStats ;_bafc int8 ;_fbfb *_bd .Bitmaps ;_febga []int ;_fgee map[int ]int ;
_fcccc bool ;};func (_fbfa *SymbolDictionary )GetDictionary ()([]*_bd .Bitmap ,error ){_ab .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c-\u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){_ab .Log .Trace ("\u005b\u0053\u0059M\u0042\u004f\u004c\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
_ab .Log .Trace ("\u005b\u0053Y\u004d\u0042\u004f\u004c\u002dD\u0049\u0043\u0054\u0049\u004fN\u0041\u0052\u0059\u005d\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020\u000a\u0045\u0078\u003a\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u000a\u006e\u0065\u0077\u003a\u0027\u0025\u0073\u0027",_fbfa ._deed ,_fbfa ._ccdc );
}();if _fbfa ._deed ==nil {var _feae error ;if _fbfa .UseRefinementAggregation {_fbfa ._bafc =_fbfa .getSbSymCodeLen ();};if !_fbfa .IsHuffmanEncoded {if _feae =_fbfa .setCodingStatistics ();_feae !=nil {return nil ,_feae ;};};_fbfa ._ccdc =make ([]*_bd .Bitmap ,_fbfa .NumberOfNewSymbols );
var _cggg []int ;if _fbfa .IsHuffmanEncoded &&!_fbfa .UseRefinementAggregation {_cggg =make ([]int ,_fbfa .NumberOfNewSymbols );};if _feae =_fbfa .setSymbolsArray ();_feae !=nil {return nil ,_feae ;};var _ebed ,_fgg int64 ;_fbfa ._ebeb =0;for _fbfa ._ebeb < _fbfa .NumberOfNewSymbols {_fgg ,_feae =_fbfa .decodeHeightClassDeltaHeight ();
if _feae !=nil {return nil ,_feae ;};_ebed +=_fgg ;var _ddagd ,_eefb uint32 ;_effa :=int64 (_fbfa ._ebeb );for {var _dbfa int64 ;_dbfa ,_feae =_fbfa .decodeDifferenceWidth ();if _bg .Is (_feae ,_gc .ErrOOB ){break ;};if _feae !=nil {return nil ,_feae ;
};if _fbfa ._ebeb >=_fbfa .NumberOfNewSymbols {break ;};_ddagd +=uint32 (_dbfa );_eefb +=_ddagd ;if !_fbfa .IsHuffmanEncoded ||_fbfa .UseRefinementAggregation {if !_fbfa .UseRefinementAggregation {_feae =_fbfa .decodeDirectlyThroughGenericRegion (_ddagd ,uint32 (_ebed ));
if _feae !=nil {return nil ,_feae ;};}else {_feae =_fbfa .decodeAggregate (_ddagd ,uint32 (_ebed ));if _feae !=nil {return nil ,_feae ;};};}else if _fbfa .IsHuffmanEncoded &&!_fbfa .UseRefinementAggregation {_cggg [_fbfa ._ebeb ]=int (_ddagd );};_fbfa ._ebeb ++;
};if _fbfa .IsHuffmanEncoded &&!_fbfa .UseRefinementAggregation {var _caga int64 ;if _fbfa .SdHuffBMSizeSelection ==0{var _cabe _cff .Tabler ;_cabe ,_feae =_cff .GetStandardTable (1);if _feae !=nil {return nil ,_feae ;};_caga ,_feae =_cabe .Decode (_fbfa ._cacc );
if _feae !=nil {return nil ,_feae ;};}else {_caga ,_feae =_fbfa .huffDecodeBmSize ();if _feae !=nil {return nil ,_feae ;};};_fbfa ._cacc .Align ();var _eedc *_bd .Bitmap ;_eedc ,_feae =_fbfa .decodeHeightClassCollectiveBitmap (_caga ,uint32 (_ebed ),_eefb );
if _feae !=nil {return nil ,_feae ;};_feae =_fbfa .decodeHeightClassBitmap (_eedc ,_effa ,int (_ebed ),_cggg );if _feae !=nil {return nil ,_feae ;};};};_aagdd ,_feae :=_fbfa .getToExportFlags ();if _feae !=nil {return nil ,_feae ;};_fbfa .setExportedSymbols (_aagdd );
};return _fbfa ._deed ,nil ;};func (_baag *PatternDictionary )readGrayMax ()error {_aegd ,_dded :=_baag ._gcga .ReadBits (32);if _dded !=nil {return _dded ;};_baag .GrayMax =uint32 (_aegd &_e .MaxUint32 );return nil ;};type template0 struct{};func (_bfcb *template1 )setIndex (_bedf *_eae .DecoderStats ){_bedf .SetIndex (0x080)};
func (_feaee *TextRegion )getSymbols ()error {if _feaee .Header .RTSegments !=nil {return _feaee .initSymbols ();};return nil ;};func (_gagac *TextRegion )decodeRdw ()(int64 ,error ){const _aadfg ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064w";if _gagac .IsHuffmanEncoded {if _gagac .SbHuffRDWidth ==3{if _gagac ._fbbb ==nil {var (_acca int ;
_eged error ;);if _gagac .SbHuffFS ==3{_acca ++;};if _gagac .SbHuffDS ==3{_acca ++;};if _gagac .SbHuffDT ==3{_acca ++;};_gagac ._fbbb ,_eged =_gagac .getUserTable (_acca );if _eged !=nil {return 0,_ff .Wrap (_eged ,_aadfg ,"");};};return _gagac ._fbbb .Decode (_gagac ._aaaa );
};_bbda ,_cfcb :=_cff .GetStandardTable (14+int (_gagac .SbHuffRDWidth ));if _cfcb !=nil {return 0,_ff .Wrap (_cfcb ,_aadfg ,"");};return _bbda .Decode (_gagac ._aaaa );};_ebbe ,_ecga :=_gagac ._accg .DecodeInt (_gagac ._gcecg );if _ecga !=nil {return 0,_ff .Wrap (_ecga ,_aadfg ,"");
};return int64 (_ebbe ),nil ;};func (_gbbd *PageInformationSegment )readWidthAndHeight ()error {_cfde ,_aecc :=_gbbd ._cefa .ReadBits (32);if _aecc !=nil {return _aecc ;};_gbbd .PageBMWidth =int (_cfde &_e .MaxInt32 );_cfde ,_aecc =_gbbd ._cefa .ReadBits (32);
if _aecc !=nil {return _aecc ;};_gbbd .PageBMHeight =int (_cfde &_e .MaxInt32 );return nil ;};func (_agcfa *TextRegion )decodeRdh ()(int64 ,error ){const _dfccc ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064h";if _agcfa .IsHuffmanEncoded {if _agcfa .SbHuffRDHeight ==3{if _agcfa ._cbcg ==nil {var (_facb int ;
_cceea error ;);if _agcfa .SbHuffFS ==3{_facb ++;};if _agcfa .SbHuffDS ==3{_facb ++;};if _agcfa .SbHuffDT ==3{_facb ++;};if _agcfa .SbHuffRDWidth ==3{_facb ++;};_agcfa ._cbcg ,_cceea =_agcfa .getUserTable (_facb );if _cceea !=nil {return 0,_ff .Wrap (_cceea ,_dfccc ,"");
};};return _agcfa ._cbcg .Decode (_agcfa ._aaaa );};_defd ,_ebee :=_cff .GetStandardTable (14+int (_agcfa .SbHuffRDHeight ));if _ebee !=nil {return 0,_ff .Wrap (_ebee ,_dfccc ,"");};return _defd .Decode (_agcfa ._aaaa );};_cdfca ,_bdeeb :=_agcfa ._accg .DecodeInt (_agcfa ._fff );
if _bdeeb !=nil {return 0,_ff .Wrap (_bdeeb ,_dfccc ,"");};return int64 (_cdfca ),nil ;};func (_dbba *TextRegion )parseHeader ()error {var _acdg error ;_ab .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069n\u0073\u002e\u002e\u002e");
defer func (){if _acdg !=nil {_ab .Log .Trace ("\u005b\u0054\u0045\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044E\u0052\u005d\u0020\u0066\u0061i\u006c\u0065d\u002e\u0020\u0025\u0076",_acdg );
}else {_ab .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069s\u0068\u0065\u0064\u002e");};}();if _acdg =_dbba .RegionInfo .parseHeader ();
_acdg !=nil {return _acdg ;};if _acdg =_dbba .readRegionFlags ();_acdg !=nil {return _acdg ;};if _dbba .IsHuffmanEncoded {if _acdg =_dbba .readHuffmanFlags ();_acdg !=nil {return _acdg ;};};if _acdg =_dbba .readUseRefinement ();_acdg !=nil {return _acdg ;
};if _acdg =_dbba .readAmountOfSymbolInstances ();_acdg !=nil {return _acdg ;};if _acdg =_dbba .getSymbols ();_acdg !=nil {return _acdg ;};if _acdg =_dbba .computeSymbolCodeLength ();_acdg !=nil {return _acdg ;};if _acdg =_dbba .checkInput ();_acdg !=nil {return _acdg ;
};_ab .Log .Trace ("\u0025\u0073",_dbba .String ());return nil ;};func (_dece *TextRegion )setCodingStatistics ()error {if _dece ._baaae ==nil {_dece ._baaae =_eae .NewStats (512,1);};if _dece ._baad ==nil {_dece ._baad =_eae .NewStats (512,1);};if _dece ._egfd ==nil {_dece ._egfd =_eae .NewStats (512,1);
};if _dece ._bddac ==nil {_dece ._bddac =_eae .NewStats (512,1);};if _dece ._daca ==nil {_dece ._daca =_eae .NewStats (512,1);};if _dece ._gcecg ==nil {_dece ._gcecg =_eae .NewStats (512,1);};if _dece ._fff ==nil {_dece ._fff =_eae .NewStats (512,1);};
if _dece ._dageb ==nil {_dece ._dageb =_eae .NewStats (1<<uint (_dece ._abef ),1);};if _dece ._gbf ==nil {_dece ._gbf =_eae .NewStats (512,1);};if _dece ._ddedc ==nil {_dece ._ddedc =_eae .NewStats (512,1);};if _dece ._accg ==nil {var _gfgc error ;_dece ._accg ,_gfgc =_eae .New (_dece ._aaaa );
if _gfgc !=nil {return _gfgc ;};};return nil ;};type HalftoneRegion struct{_edga _g .StreamReader ;_bfa *Header ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;HDefaultPixel int8 ;CombinationOperator _bd .CombinationOperator ;
HSkipEnabled bool ;HTemplate byte ;IsMMREncoded bool ;HGridWidth uint32 ;HGridHeight uint32 ;HGridX int32 ;HGridY int32 ;HRegionX uint16 ;HRegionY uint16 ;HalftoneRegionBitmap *_bd .Bitmap ;Patterns []*_bd .Bitmap ;};func (_aed *Header )readDataStartOffset (_bcc _g .StreamReader ,_fbge OrganizationType ){if _fbge ==OSequential {_aed .SegmentDataStartOffset =uint64 (_bcc .StreamPosition ());
};};func (_eagf *Header )pageSize ()uint {if _eagf .PageAssociation <=255{return 1;};return 4;};func NewRegionSegment (r _g .StreamReader )*RegionSegment {return &RegionSegment {_edfd :r }};func (_gedc *Header )String ()string {_bcea :=&_c .Builder {};
_bcea .WriteString ("\u000a[\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045A\u0044\u0045\u0052\u005d\u000a");_bcea .WriteString (_b .Sprintf ("\t\u002d\u0020\u0053\u0065gm\u0065n\u0074\u004e\u0075\u006d\u0062e\u0072\u003a\u0020\u0025\u0076\u000a",_gedc .SegmentNumber ));
_bcea .WriteString (_b .Sprintf ("\u0009\u002d\u0020T\u0079\u0070\u0065\u003a\u0020\u0025\u0076\u000a",_gedc .Type ));_bcea .WriteString (_b .Sprintf ("\u0009-\u0020R\u0065\u0074\u0061\u0069\u006eF\u006c\u0061g\u003a\u0020\u0025\u0076\u000a",_gedc .RetainFlag ));
_bcea .WriteString (_b .Sprintf ("\u0009\u002d\u0020Pa\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_gedc .PageAssociation ));_bcea .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0050\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074i\u006fn\u0046\u0069\u0065\u006c\u0064\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_gedc .PageAssociationFieldSize ));
_bcea .WriteString ("\u0009-\u0020R\u0054\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u0053\u003a\u000a");for _ ,_ebf :=range _gedc .RTSNumbers {_bcea .WriteString (_b .Sprintf ("\u0009\t\u002d\u0020\u0025\u0064\u000a",_ebf ));};_bcea .WriteString (_b .Sprintf ("\t\u002d \u0048\u0065\u0061\u0064\u0065\u0072\u004c\u0065n\u0067\u0074\u0068\u003a %\u0076\u000a",_gedc .HeaderLength ));
_bcea .WriteString (_b .Sprintf ("\u0009-\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061L\u0065n\u0067\u0074\u0068\u003a\u0020\u0025\u0076\n",_gedc .SegmentDataLength ));_bcea .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074D\u0061\u0074\u0061\u0053\u0074\u0061\u0072t\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0076\u000a",_gedc .SegmentDataStartOffset ));
return _bcea .String ();};type GenericRegion struct{_aga _g .StreamReader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;UseExtTemplates bool ;IsTPGDon bool ;GBTemplate byte ;IsMMREncoded bool ;
UseMMR bool ;GBAtX []int8 ;GBAtY []int8 ;GBAtOverride []bool ;_baa bool ;Bitmap *_bd .Bitmap ;_ggb *_eae .Decoder ;_afe *_eae .DecoderStats ;_aabg *_fd .Decoder ;};type RegionSegment struct{_edfd _g .StreamReader ;BitmapWidth uint32 ;BitmapHeight uint32 ;
XLocation uint32 ;YLocation uint32 ;CombinaionOperator _bd .CombinationOperator ;};func (_cbdf *TextRegion )decodeRdy ()(int64 ,error ){const _adbc ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064y";if _cbdf .IsHuffmanEncoded {if _cbdf .SbHuffRDY ==3{if _cbdf ._cgcc ==nil {var (_ebag int ;
_gcea error ;);if _cbdf .SbHuffFS ==3{_ebag ++;};if _cbdf .SbHuffDS ==3{_ebag ++;};if _cbdf .SbHuffDT ==3{_ebag ++;};if _cbdf .SbHuffRDWidth ==3{_ebag ++;};if _cbdf .SbHuffRDHeight ==3{_ebag ++;};if _cbdf .SbHuffRDX ==3{_ebag ++;};_cbdf ._cgcc ,_gcea =_cbdf .getUserTable (_ebag );
if _gcea !=nil {return 0,_ff .Wrap (_gcea ,_adbc ,"");};};return _cbdf ._cgcc .Decode (_cbdf ._aaaa );};_fbcd ,_ddca :=_cff .GetStandardTable (14+int (_cbdf .SbHuffRDY ));if _ddca !=nil {return 0,_ddca ;};return _fbcd .Decode (_cbdf ._aaaa );};_bcad ,_bbce :=_cbdf ._accg .DecodeInt (_cbdf ._ddedc );
if _bbce !=nil {return 0,_ff .Wrap (_bbce ,_adbc ,"");};return int64 (_bcad ),nil ;};func (_geeaf *TextRegion )decodeIds ()(int64 ,error ){const _adce ="\u0064e\u0063\u006f\u0064\u0065\u0049\u0064s";if _geeaf .IsHuffmanEncoded {if _geeaf .SbHuffDS ==3{if _geeaf ._gdcbf ==nil {_bafcd :=0;
if _geeaf .SbHuffFS ==3{_bafcd ++;};var _fffb error ;_geeaf ._gdcbf ,_fffb =_geeaf .getUserTable (_bafcd );if _fffb !=nil {return 0,_ff .Wrap (_fffb ,_adce ,"");};};return _geeaf ._gdcbf .Decode (_geeaf ._aaaa );};_caaa ,_egbde :=_cff .GetStandardTable (8+int (_geeaf .SbHuffDS ));
if _egbde !=nil {return 0,_ff .Wrap (_egbde ,_adce ,"");};return _caaa .Decode (_geeaf ._aaaa );};_eccg ,_fgcf :=_geeaf ._accg .DecodeInt (_geeaf ._egfd );if _fgcf !=nil {return 0,_ff .Wrap (_fgcf ,_adce ,"\u0063\u0078\u0049\u0041\u0044\u0053");};return int64 (_eccg ),nil ;
};func (_bbdf Type )String ()string {switch _bbdf {case TSymbolDictionary :return "\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079";case TIntermediateTextRegion :return "\u0049n\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020T\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TImmediateTextRegion :return "I\u006d\u006d\u0065\u0064ia\u0074e\u0020\u0054\u0065\u0078\u0074 \u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessTextRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020L\u006f\u0073\u0073\u006c\u0065\u0073\u0073 \u0054\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TPatternDictionary :return "\u0050a\u0074t\u0065\u0072\u006e\u0020\u0044i\u0063\u0074i\u006f\u006e\u0061\u0072\u0079";case TIntermediateHalftoneRegion :return "\u0049\u006e\u0074\u0065r\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0048\u0061l\u0066t\u006f\u006e\u0065\u0020\u0052\u0065\u0067i\u006f\u006e";
case TImmediateHalftoneRegion :return "\u0049m\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u0048\u0061l\u0066t\u006fn\u0065\u0020\u0052\u0065\u0067\u0069\u006fn";case TImmediateLosslessHalftoneRegion :return "\u0049\u006d\u006ded\u0069\u0061\u0074\u0065\u0020\u004c\u006f\u0073\u0073l\u0065s\u0073 \u0048a\u006c\u0066\u0074\u006f\u006e\u0065\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TIntermediateGenericRegion :return "I\u006e\u0074\u0065\u0072\u006d\u0065d\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020R\u0065g\u0069\u006f\u006e";case TImmediateGenericRegion :return "\u0049m\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006ee\u0072\u0069\u0063\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TImmediateLosslessGenericRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u004c\u006f\u0073\u0073\u006c\u0065\u0073\u0073\u0020\u0047e\u006e\u0065\u0072\u0069\u0063\u0020\u0052e\u0067\u0069\u006f\u006e";case TIntermediateGenericRefinementRegion :return "\u0049\u006e\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0020\u0052\u0065\u0066i\u006e\u0065\u006d\u0065\u006et\u0020\u0052e\u0067\u0069\u006f\u006e";
case TImmediateGenericRefinementRegion :return "I\u006d\u006d\u0065\u0064\u0069\u0061t\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020\u0052\u0065\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020\u0052\u0065\u0067\u0069o\u006e";case TImmediateLosslessGenericRefinementRegion :return "\u0049m\u006d\u0065d\u0069\u0061\u0074\u0065 \u004c\u006f\u0073s\u006c\u0065\u0073\u0073\u0020\u0047\u0065\u006e\u0065ri\u0063\u0020\u0052e\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020R\u0065\u0067i\u006f\u006e";
case TPageInformation :return "\u0050\u0061g\u0065\u0020\u0049n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e";case TEndOfPage :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0050\u0061\u0067\u0065";case TEndOfStrip :return "\u0045\u006e\u0064 \u004f\u0066\u0020\u0053\u0074\u0072\u0069\u0070";
case TEndOfFile :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0046\u0069\u006c\u0065";case TProfiles :return "\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0073";case TTables :return "\u0054\u0061\u0062\u006c\u0065\u0073";case TExtension :return "\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn";
case TBitmap :return "\u0042\u0069\u0074\u006d\u0061\u0070";};return "I\u006ev\u0061\u006c\u0069\u0064\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0020Ki\u006e\u0064";};func (_fab *RegionSegment )Encode (w _g .BinaryWriter )(_caag int ,_dcd error ){const _dcf ="R\u0065g\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065n\u0074\u002e\u0045\u006eco\u0064\u0065";
_eedg :=make ([]byte ,4);_f .BigEndian .PutUint32 (_eedg ,_fab .BitmapWidth );_caag ,_dcd =w .Write (_eedg );if _dcd !=nil {return 0,_ff .Wrap (_dcd ,_dcf ,"\u0057\u0069\u0064t\u0068");};_f .BigEndian .PutUint32 (_eedg ,_fab .BitmapHeight );var _fde int ;
_fde ,_dcd =w .Write (_eedg );if _dcd !=nil {return 0,_ff .Wrap (_dcd ,_dcf ,"\u0048\u0065\u0069\u0067\u0068\u0074");};_caag +=_fde ;_f .BigEndian .PutUint32 (_eedg ,_fab .XLocation );_fde ,_dcd =w .Write (_eedg );if _dcd !=nil {return 0,_ff .Wrap (_dcd ,_dcf ,"\u0058L\u006f\u0063\u0061\u0074\u0069\u006fn");
};_caag +=_fde ;_f .BigEndian .PutUint32 (_eedg ,_fab .YLocation );_fde ,_dcd =w .Write (_eedg );if _dcd !=nil {return 0,_ff .Wrap (_dcd ,_dcf ,"\u0059L\u006f\u0063\u0061\u0074\u0069\u006fn");};_caag +=_fde ;if _dcd =w .WriteByte (byte (_fab .CombinaionOperator )&0x07);
_dcd !=nil {return 0,_ff .Wrap (_dcd ,_dcf ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};_caag ++;return _caag ,nil ;};func (_beae *SymbolDictionary )encodeNumSyms (_edbd _g .BinaryWriter )(_acbf int ,_gddg error ){const _ffaeg ="\u0065\u006e\u0063\u006f\u0064\u0065\u004e\u0075\u006d\u0053\u0079\u006d\u0073";
_ggda :=make ([]byte ,4);_f .BigEndian .PutUint32 (_ggda ,_beae .NumberOfExportedSymbols );if _acbf ,_gddg =_edbd .Write (_ggda );_gddg !=nil {return _acbf ,_ff .Wrap (_gddg ,_ffaeg ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};_f .BigEndian .PutUint32 (_ggda ,_beae .NumberOfNewSymbols );_gbae ,_gddg :=_edbd .Write (_ggda );if _gddg !=nil {return _acbf ,_ff .Wrap (_gddg ,_ffaeg ,"n\u0065\u0077\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};return _acbf +_gbae ,nil ;};func (_dda *GenericRefinementRegion )getPixel (_ffc *_bd .Bitmap ,_eab ,_bde int )int {if _eab < 0||_eab >=_ffc .Width {return 0;
};if _bde < 0||_bde >=_ffc .Height {return 0;};if _ffc .GetPixel (_eab ,_bde ){return 1;};return 0;};func (_bcbf *HalftoneRegion )grayScaleDecoding (_eddg int )([][]int ,error ){var (_edad []int8 ;_fbb []int8 ;);if !_bcbf .IsMMREncoded {_edad =make ([]int8 ,4);
_fbb =make ([]int8 ,4);if _bcbf .HTemplate <=1{_edad [0]=3;}else if _bcbf .HTemplate >=2{_edad [0]=2;};_fbb [0]=-1;_edad [1]=-3;_fbb [1]=-1;_edad [2]=2;_fbb [2]=-2;_edad [3]=-2;_fbb [3]=-2;};_gea :=make ([]*_bd .Bitmap ,_eddg );_dff :=NewGenericRegion (_bcbf ._edga );
_dff .setParametersMMR (_bcbf .IsMMREncoded ,_bcbf .DataOffset ,_bcbf .DataLength ,_bcbf .HGridHeight ,_bcbf .HGridWidth ,_bcbf .HTemplate ,false ,_bcbf .HSkipEnabled ,_edad ,_fbb );_gdbd :=_eddg -1;var _cbdd error ;_gea [_gdbd ],_cbdd =_dff .GetRegionBitmap ();
if _cbdd !=nil {return nil ,_cbdd ;};for _gdbd > 0{_gdbd --;_dff .Bitmap =nil ;_gea [_gdbd ],_cbdd =_dff .GetRegionBitmap ();if _cbdd !=nil {return nil ,_cbdd ;};if _cbdd =_bcbf .combineGrayscalePlanes (_gea ,_gdbd );_cbdd !=nil {return nil ,_cbdd ;};};
return _bcbf .computeGrayScalePlanes (_gea ,_eddg );};func NewHeader (d Documenter ,r _g .StreamReader ,offset int64 ,organizationType OrganizationType )(*Header ,error ){_dfega :=&Header {Reader :r };if _ecfc :=_dfega .parse (d ,r ,offset ,organizationType );
_ecfc !=nil {return nil ,_ff .Wrap (_ecfc ,"\u004ee\u0077\u0048\u0065\u0061\u0064\u0065r","");};return _dfega ,nil ;};func (_ebeg *TextRegion )GetRegionInfo ()*RegionSegment {return _ebeg .RegionInfo };func (_ccbbf *SymbolDictionary )decodeDirectlyThroughGenericRegion (_gbda ,_ababa uint32 )error {if _ccbbf ._beee ==nil {_ccbbf ._beee =NewGenericRegion (_ccbbf ._cacc );
};_ccbbf ._beee .setParametersWithAt (false ,byte (_ccbbf .SdTemplate ),false ,false ,_ccbbf .SdATX ,_ccbbf .SdATY ,_gbda ,_ababa ,_ccbbf ._gcagg ,_ccbbf ._fdef );return _ccbbf .addSymbol (_ccbbf ._beee );};func (_dabba *TextRegion )decodeRdx ()(int64 ,error ){const _aage ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064x";
if _dabba .IsHuffmanEncoded {if _dabba .SbHuffRDX ==3{if _dabba ._cgad ==nil {var (_abcgf int ;_cdga error ;);if _dabba .SbHuffFS ==3{_abcgf ++;};if _dabba .SbHuffDS ==3{_abcgf ++;};if _dabba .SbHuffDT ==3{_abcgf ++;};if _dabba .SbHuffRDWidth ==3{_abcgf ++;
};if _dabba .SbHuffRDHeight ==3{_abcgf ++;};_dabba ._cgad ,_cdga =_dabba .getUserTable (_abcgf );if _cdga !=nil {return 0,_ff .Wrap (_cdga ,_aage ,"");};};return _dabba ._cgad .Decode (_dabba ._aaaa );};_cdae ,_ffdc :=_cff .GetStandardTable (14+int (_dabba .SbHuffRDX ));
if _ffdc !=nil {return 0,_ff .Wrap (_ffdc ,_aage ,"");};return _cdae .Decode (_dabba ._aaaa );};_fdgea ,_gbcbc :=_dabba ._accg .DecodeInt (_dabba ._gbf );if _gbcbc !=nil {return 0,_ff .Wrap (_gbcbc ,_aage ,"");};return int64 (_fdgea ),nil ;};func (_dfe *GenericRegion )decodeTemplate0a (_dcb ,_bcb ,_gcf int ,_cbg ,_bffa int )(_deca error ){const _gggc ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0061";
var (_affa ,_daef int ;_feef ,_egc int ;_feaa byte ;_ddcg int ;);if _dcb >=1{_feaa ,_deca =_dfe .Bitmap .GetByte (_bffa );if _deca !=nil {return _ff .Wrap (_deca ,_gggc ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_feef =int (_feaa );};if _dcb >=2{_feaa ,_deca =_dfe .Bitmap .GetByte (_bffa -_dfe .Bitmap .RowStride );
if _deca !=nil {return _ff .Wrap (_deca ,_gggc ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_egc =int (_feaa )<<6;};_affa =(_feef &0xf0)|(_egc &0x3800);for _fcg :=0;_fcg < _gcf ;_fcg =_ddcg {var (_bfge byte ;_ged int ;);_ddcg =_fcg +8;if _affe :=_bcb -_fcg ;
_affe > 8{_ged =8;}else {_ged =_affe ;};if _dcb > 0{_feef <<=8;if _ddcg < _bcb {_feaa ,_deca =_dfe .Bitmap .GetByte (_bffa +1);if _deca !=nil {return _ff .Wrap (_deca ,_gggc ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_feef |=int (_feaa );};
};if _dcb > 1{_cfff :=_bffa -_dfe .Bitmap .RowStride +1;_egc <<=8;if _ddcg < _bcb {_feaa ,_deca =_dfe .Bitmap .GetByte (_cfff );if _deca !=nil {return _ff .Wrap (_deca ,_gggc ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_egc |=int (_feaa )<<6;
}else {_egc |=0;};};for _bce :=0;_bce < _ged ;_bce ++{_gcb :=uint (7-_bce );if _dfe ._baa {_daef =_dfe .overrideAtTemplate0a (_affa ,_fcg +_bce ,_dcb ,int (_bfge ),_bce ,int (_gcb ));_dfe ._afe .SetIndex (int32 (_daef ));}else {_dfe ._afe .SetIndex (int32 (_affa ));
};var _dgf int ;_dgf ,_deca =_dfe ._ggb .DecodeBit (_dfe ._afe );if _deca !=nil {return _ff .Wrap (_deca ,_gggc ,"");};_bfge |=byte (_dgf )<<_gcb ;_affa =((_affa &0x7bf7)<<1)|_dgf |((_feef >>_gcb )&0x10)|((_egc >>_gcb )&0x800);};if _bbg :=_dfe .Bitmap .SetByte (_cbg ,_bfge );
_bbg !=nil {return _ff .Wrap (_bbg ,_gggc ,"");};_cbg ++;_bffa ++;};return nil ;};func (_degd *PatternDictionary )readIsMMREncoded ()error {_bgf ,_bffac :=_degd ._gcga .ReadBit ();if _bffac !=nil {return _bffac ;};if _bgf !=0{_degd .IsMMREncoded =true ;
};return nil ;};var _ templater =&template1 {};var _ SegmentEncoder =&GenericRegion {};func (_bbcc *SymbolDictionary )huffDecodeBmSize ()(int64 ,error ){if _bbcc ._bacbf ==nil {var (_edca int ;_bgca error ;);if _bbcc .SdHuffDecodeHeightSelection ==3{_edca ++;
};if _bbcc .SdHuffDecodeWidthSelection ==3{_edca ++;};_bbcc ._bacbf ,_bgca =_bbcc .getUserTable (_edca );if _bgca !=nil {return 0,_bgca ;};};return _bbcc ._bacbf .Decode (_bbcc ._cacc );};func (_gde *template0 )setIndex (_bdg *_eae .DecoderStats ){_bdg .SetIndex (0x100)};
func (_ecf *GenericRegion )setParametersWithAt (_bcbb bool ,_efa byte ,_bbab ,_fgbg bool ,_adba ,_bbef []int8 ,_fcgc ,_aabc uint32 ,_cfbg *_eae .DecoderStats ,_aeeb *_eae .Decoder ){_ecf .IsMMREncoded =_bcbb ;_ecf .GBTemplate =_efa ;_ecf .IsTPGDon =_bbab ;
_ecf .GBAtX =_adba ;_ecf .GBAtY =_bbef ;_ecf .RegionSegment .BitmapHeight =_aabc ;_ecf .RegionSegment .BitmapWidth =_fcgc ;_ecf ._aabg =nil ;_ecf .Bitmap =nil ;if _cfbg !=nil {_ecf ._afe =_cfbg ;};if _aeeb !=nil {_ecf ._ggb =_aeeb ;};_ab .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049O\u004e\u005d\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073\u0020\u0053\u0044\u0041t\u003a\u0020\u0025\u0073",_ecf );
};func (_aaff *GenericRegion )decodeTemplate1 (_fbcg ,_dadb ,_gaee int ,_dccab ,_cgfd int )(_fcfbc error ){const _gcgg ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0031";var (_ebge ,_dfg int ;_bdb ,_gbd int ;_ggf byte ;
_aee ,_cea int ;);if _fbcg >=1{_ggf ,_fcfbc =_aaff .Bitmap .GetByte (_cgfd );if _fcfbc !=nil {return _ff .Wrap (_fcfbc ,_gcgg ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_bdb =int (_ggf );};if _fbcg >=2{_ggf ,_fcfbc =_aaff .Bitmap .GetByte (_cgfd -_aaff .Bitmap .RowStride );
if _fcfbc !=nil {return _ff .Wrap (_fcfbc ,_gcgg ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_gbd =int (_ggf )<<5;};_ebge =((_bdb >>1)&0x1f8)|((_gbd >>1)&0x1e00);for _bgba :=0;_bgba < _gaee ;_bgba =_aee {var (_gdf byte ;_cfgc int ;);_aee =_bgba +8;
if _egec :=_dadb -_bgba ;_egec > 8{_cfgc =8;}else {_cfgc =_egec ;};if _fbcg > 0{_bdb <<=8;if _aee < _dadb {_ggf ,_fcfbc =_aaff .Bitmap .GetByte (_cgfd +1);if _fcfbc !=nil {return _ff .Wrap (_fcfbc ,_gcgg ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");
};_bdb |=int (_ggf );};};if _fbcg > 1{_gbd <<=8;if _aee < _dadb {_ggf ,_fcfbc =_aaff .Bitmap .GetByte (_cgfd -_aaff .Bitmap .RowStride +1);if _fcfbc !=nil {return _ff .Wrap (_fcfbc ,_gcgg ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_gbd |=int (_ggf )<<5;
};};for _aagcd :=0;_aagcd < _cfgc ;_aagcd ++{if _aaff ._baa {_dfg =_aaff .overrideAtTemplate1 (_ebge ,_bgba +_aagcd ,_fbcg ,int (_gdf ),_aagcd );_aaff ._afe .SetIndex (int32 (_dfg ));}else {_aaff ._afe .SetIndex (int32 (_ebge ));};_cea ,_fcfbc =_aaff ._ggb .DecodeBit (_aaff ._afe );
if _fcfbc !=nil {return _ff .Wrap (_fcfbc ,_gcgg ,"");};_gdf |=byte (_cea )<<uint (7-_aagcd );_cfca :=uint (8-_aagcd );_ebge =((_ebge &0xefb)<<1)|_cea |((_bdb >>_cfca )&0x8)|((_gbd >>_cfca )&0x200);};if _fafaa :=_aaff .Bitmap .SetByte (_dccab ,_gdf );_fafaa !=nil {return _ff .Wrap (_fafaa ,_gcgg ,"");
};_dccab ++;_cgfd ++;};return nil ;};func (_acge *TextRegion )decodeStripT ()(_gfebd int64 ,_gfec error ){if _acge .IsHuffmanEncoded {if _acge .SbHuffDT ==3{if _acge ._egbd ==nil {var _bfgb int ;if _acge .SbHuffFS ==3{_bfgb ++;};if _acge .SbHuffDS ==3{_bfgb ++;
};_acge ._egbd ,_gfec =_acge .getUserTable (_bfgb );if _gfec !=nil {return 0,_gfec ;};};_gfebd ,_gfec =_acge ._egbd .Decode (_acge ._aaaa );if _gfec !=nil {return 0,_gfec ;};}else {var _aagde _cff .Tabler ;_aagde ,_gfec =_cff .GetStandardTable (11+int (_acge .SbHuffDT ));
if _gfec !=nil {return 0,_gfec ;};_gfebd ,_gfec =_aagde .Decode (_acge ._aaaa );if _gfec !=nil {return 0,_gfec ;};};}else {var _bfga int32 ;_bfga ,_gfec =_acge ._accg .DecodeInt (_acge ._baaae );if _gfec !=nil {return 0,_gfec ;};_gfebd =int64 (_bfga );
};_gfebd *=int64 (-_acge .SbStrips );return _gfebd ,nil ;};func (_feee *SymbolDictionary )decodeRefinedSymbol (_feba ,_gbcb uint32 )error {var (_fgdb int ;_gcaa ,_bged int32 ;);if _feee .IsHuffmanEncoded {_becd ,_fdeb :=_feee ._cacc .ReadBits (byte (_feee ._bafc ));
if _fdeb !=nil {return _fdeb ;};_fgdb =int (_becd );_gcde ,_fdeb :=_cff .GetStandardTable (15);if _fdeb !=nil {return _fdeb ;};_baagc ,_fdeb :=_gcde .Decode (_feee ._cacc );if _fdeb !=nil {return _fdeb ;};_gcaa =int32 (_baagc );_baagc ,_fdeb =_gcde .Decode (_feee ._cacc );
if _fdeb !=nil {return _fdeb ;};_bged =int32 (_baagc );_gcde ,_fdeb =_cff .GetStandardTable (1);if _fdeb !=nil {return _fdeb ;};if _ ,_fdeb =_gcde .Decode (_feee ._cacc );_fdeb !=nil {return _fdeb ;};_feee ._cacc .Align ();}else {_ceag ,_ade :=_feee ._fdef .DecodeIAID (uint64 (_feee ._bafc ),_feee ._efad );
if _ade !=nil {return _ade ;};_fgdb =int (_ceag );_gcaa ,_ade =_feee ._fdef .DecodeInt (_feee ._bdad );if _ade !=nil {return _ade ;};_bged ,_ade =_feee ._fdef .DecodeInt (_feee ._abda );if _ade !=nil {return _ade ;};};if _cdbf :=_feee .setSymbolsArray ();
_cdbf !=nil {return _cdbf ;};_abba :=_feee ._ddcgf [_fgdb ];if _ffb :=_feee .decodeNewSymbols (_feba ,_gbcb ,_abba ,_gcaa ,_bged );_ffb !=nil {return _ffb ;};if _feee .IsHuffmanEncoded {_feee ._cacc .Align ();};return nil ;};func (_gfd *SymbolDictionary )getSbSymCodeLen ()int8 {_ccgfd :=int8 (_e .Ceil (_e .Log (float64 (_gfd ._dcfe +_gfd .NumberOfNewSymbols ))/_e .Log (2)));
if _gfd .IsHuffmanEncoded &&_ccgfd < 1{return 1;};return _ccgfd ;};func (_ddff *RegionSegment )Size ()int {return 17};type SegmentEncoder interface{Encode (_ffeg _g .BinaryWriter )(_eddb int ,_feg error );};func (_cdfc *TextRegion )decodeDT ()(_fbgb int64 ,_gaed error ){if _cdfc .IsHuffmanEncoded {if _cdfc .SbHuffDT ==3{_fbgb ,_gaed =_cdfc ._egbd .Decode (_cdfc ._aaaa );
if _gaed !=nil {return 0,_gaed ;};}else {var _eeab _cff .Tabler ;_eeab ,_gaed =_cff .GetStandardTable (11+int (_cdfc .SbHuffDT ));if _gaed !=nil {return 0,_gaed ;};_fbgb ,_gaed =_eeab .Decode (_cdfc ._aaaa );if _gaed !=nil {return 0,_gaed ;};};}else {var _ebcaf int32 ;
_ebcaf ,_gaed =_cdfc ._accg .DecodeInt (_cdfc ._baaae );if _gaed !=nil {return ;};_fbgb =int64 (_ebcaf );};_fbgb *=int64 (_cdfc .SbStrips );return _fbgb ,nil ;};func (_becc *SymbolDictionary )String ()string {_adfg :=&_c .Builder {};_adfg .WriteString ("\n\u005b\u0053\u0059\u004dBO\u004c-\u0044\u0049\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u000a");
_adfg .WriteString (_b .Sprintf ("\u0009-\u0020S\u0064\u0072\u0054\u0065\u006dp\u006c\u0061t\u0065\u0020\u0025\u0076\u000a",_becc .SdrTemplate ));_adfg .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0025\u0076\u000a",_becc .SdTemplate ));
_adfg .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006eg\u0043\u006f\u006e\u0074\u0065\u0078\u0074R\u0065\u0074\u0061\u0069\u006e\u0065\u0064\u0020\u0025\u0076\u000a",_becc ._gfeae ));_adfg .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074\u0065\u0078\u0074\u0055\u0073\u0065\u0064 \u0025\u0076\u000a",_becc ._afceb ));
_adfg .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_becc .SdHuffAggInstanceSelection ));
_adfg .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0053d\u0048\u0075\u0066\u0066\u0042\u004d\u0053\u0069\u007a\u0065S\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020%\u0076\u000a",_becc .SdHuffBMSizeSelection ));_adfg .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_becc .SdHuffDecodeWidthSelection ));
_adfg .WriteString (_b .Sprintf ("\u0009\u002d\u0020Sd\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064e\u0048e\u0069g\u0068t\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_becc .SdHuffDecodeHeightSelection ));_adfg .WriteString (_b .Sprintf ("\u0009\u002d\u0020U\u0073\u0065\u0052\u0065f\u0069\u006e\u0065\u006d\u0065\u006e\u0074A\u0067\u0067\u0072\u0065\u0067\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_becc .UseRefinementAggregation ));
_adfg .WriteString (_b .Sprintf ("\u0009\u002d\u0020is\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045\u006e\u0063\u006f\u0064\u0065\u0064\u0020\u0025\u0076\u000a",_becc .IsHuffmanEncoded ));_adfg .WriteString (_b .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_becc .SdATX ));
_adfg .WriteString (_b .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_becc .SdATY ));_adfg .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_becc .SdrATX ));_adfg .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_becc .SdrATY ));
_adfg .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u004e\u0075\u006d\u0062\u0065\u0072\u004ff\u0045\u0078\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_becc .NumberOfExportedSymbols ));_adfg .WriteString (_b .Sprintf ("\u0009-\u0020\u004e\u0075\u006db\u0065\u0072\u004f\u0066\u004ee\u0077S\u0079m\u0062\u006f\u006c\u0073\u0020\u0025\u0076\n",_becc .NumberOfNewSymbols ));
_adfg .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u004ff\u0049\u006d\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_becc ._dcfe ));_adfg .WriteString (_b .Sprintf ("\u0009\u002d \u006e\u0075\u006d\u0062\u0065\u0072\u004f\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0064\u0053\u0079\u006d\u0062\u006f\u006c\u0073 %\u0076\u000a",_becc ._ebeb ));
return _adfg .String ();};func (_gbfb *TextRegion )readRegionFlags ()error {var (_gaag int ;_ggca uint64 ;_affb error ;);_gaag ,_affb =_gbfb ._aaaa .ReadBit ();if _affb !=nil {return _affb ;};_gbfb .SbrTemplate =int8 (_gaag );_ggca ,_affb =_gbfb ._aaaa .ReadBits (5);
if _affb !=nil {return _affb ;};_gbfb .SbDsOffset =int8 (_ggca );if _gbfb .SbDsOffset > 0x0f{_gbfb .SbDsOffset -=0x20;};_gaag ,_affb =_gbfb ._aaaa .ReadBit ();if _affb !=nil {return _affb ;};_gbfb .DefaultPixel =int8 (_gaag );_ggca ,_affb =_gbfb ._aaaa .ReadBits (2);
if _affb !=nil {return _affb ;};_gbfb .CombinationOperator =_bd .CombinationOperator (int (_ggca )&0x3);_gaag ,_affb =_gbfb ._aaaa .ReadBit ();if _affb !=nil {return _affb ;};_gbfb .IsTransposed =int8 (_gaag );_ggca ,_affb =_gbfb ._aaaa .ReadBits (2);if _affb !=nil {return _affb ;
};_gbfb .ReferenceCorner =int16 (_ggca )&0x3;_ggca ,_affb =_gbfb ._aaaa .ReadBits (2);if _affb !=nil {return _affb ;};_gbfb .LogSBStrips =int16 (_ggca )&0x3;_gbfb .SbStrips =1<<uint (_gbfb .LogSBStrips );_gaag ,_affb =_gbfb ._aaaa .ReadBit ();if _affb !=nil {return _affb ;
};if _gaag ==1{_gbfb .UseRefinement =true ;};_gaag ,_affb =_gbfb ._aaaa .ReadBit ();if _affb !=nil {return _affb ;};if _gaag ==1{_gbfb .IsHuffmanEncoded =true ;};return nil ;};func _ffe (_cgcb _g .StreamReader ,_bgb *Header )*GenericRefinementRegion {return &GenericRefinementRegion {_baf :_cgcb ,RegionInfo :NewRegionSegment (_cgcb ),_gd :_bgb ,_fb :&template0 {},_fbg :&template1 {}};
};func (_aada *PageInformationSegment )Init (h *Header ,r _g .StreamReader )(_gefg error ){_aada ._cefa =r ;if _gefg =_aada .parseHeader ();_gefg !=nil {return _ff .Wrap (_gefg ,"P\u0061\u0067\u0065\u0049\u006e\u0066o\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065g\u006d\u0065\u006et\u002eI\u006e\u0069\u0074","");
};return nil ;};type Pager interface{GetSegment (int )(*Header ,error );GetBitmap ()(*_bd .Bitmap ,error );};func (_fefg *TextRegion )decodeID ()(int64 ,error ){if _fefg .IsHuffmanEncoded {if _fefg ._edcg ==nil {_eeef ,_facg :=_fefg ._aaaa .ReadBits (byte (_fefg ._abef ));
return int64 (_eeef ),_facg ;};return _fefg ._edcg .Decode (_fefg ._aaaa );};return _fefg ._accg .DecodeIAID (uint64 (_fefg ._abef ),_fefg ._dageb );};func (_cac *GenericRegion )copyLineAbove (_cgf int )error {_cgcf :=_cgf *_cac .Bitmap .RowStride ;_acaa :=_cgcf -_cac .Bitmap .RowStride ;
for _bdc :=0;_bdc < _cac .Bitmap .RowStride ;_bdc ++{_cfa ,_bbc :=_cac .Bitmap .GetByte (_acaa );if _bbc !=nil {return _bbc ;};_acaa ++;if _bbc =_cac .Bitmap .SetByte (_cgcf ,_cfa );_bbc !=nil {return _bbc ;};_cgcf ++;};return nil ;};func (_bgad *SymbolDictionary )decodeHeightClassCollectiveBitmap (_feaaa int64 ,_ffda ,_cded uint32 )(*_bd .Bitmap ,error ){if _feaaa ==0{_fbadda :=_bd .New (int (_cded ),int (_ffda ));
var (_acg byte ;_caab error ;);for _fbggb :=0;_fbggb < len (_fbadda .Data );_fbggb ++{_acg ,_caab =_bgad ._cacc .ReadByte ();if _caab !=nil {return nil ,_caab ;};if _caab =_fbadda .SetByte (_fbggb ,_acg );_caab !=nil {return nil ,_caab ;};};return _fbadda ,nil ;
};if _bgad ._beee ==nil {_bgad ._beee =NewGenericRegion (_bgad ._cacc );};_bgad ._beee .setParameters (true ,_bgad ._cacc .StreamPosition (),_feaaa ,_ffda ,_cded );_cecc ,_gecd :=_bgad ._beee .GetRegionBitmap ();if _gecd !=nil {return nil ,_gecd ;};return _cecc ,nil ;
};func (_gb *GenericRefinementRegion )decodeSLTP ()(int ,error ){_gb .Template .setIndex (_gb ._aag );return _gb ._ee .DecodeBit (_gb ._aag );};type PageInformationSegment struct{_cefa _g .StreamReader ;PageBMHeight int ;PageBMWidth int ;ResolutionX int ;
ResolutionY int ;_fef bool ;_eadc _bd .CombinationOperator ;_egca bool ;DefaultPixelValue uint8 ;_fce bool ;IsLossless bool ;IsStripe bool ;MaxStripeSize uint16 ;};func (_dbg *GenericRegion )writeGBAtPixels (_ffcc _g .BinaryWriter )(_caba int ,_ccab error ){const _adga ="\u0077r\u0069t\u0065\u0047\u0042\u0041\u0074\u0050\u0069\u0078\u0065\u006c\u0073";
if _dbg .UseMMR {return 0,nil ;};_bfgd :=1;if _dbg .GBTemplate ==0{_bfgd =4;}else if _dbg .UseExtTemplates {_bfgd =12;};if len (_dbg .GBAtX )!=_bfgd {return 0,_ff .Errorf (_adga ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0058\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};if len (_dbg .GBAtY )!=_bfgd {return 0,_ff .Errorf (_adga ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0059\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};for _dcgf :=0;_dcgf < _bfgd ;_dcgf ++{if _ccab =_ffcc .WriteByte (byte (_dbg .GBAtX [_dcgf ]));_ccab !=nil {return _caba ,_ff .Wrap (_ccab ,_adga ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0058");};_caba ++;if _ccab =_ffcc .WriteByte (byte (_dbg .GBAtY [_dcgf ]));
_ccab !=nil {return _caba ,_ff .Wrap (_ccab ,_adga ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0059");};_caba ++;};return _caba ,nil ;};func (_cdbag *PageInformationSegment )readContainsRefinement ()error {_afeb ,_egbeb :=_cdbag ._cefa .ReadBit ();
if _egbeb !=nil {return _egbeb ;};if _afeb ==1{_cdbag ._fce =true ;};return nil ;};func (_fadc *TextRegion )readAmountOfSymbolInstances ()error {_egffb ,_ddbe :=_fadc ._aaaa .ReadBits (32);if _ddbe !=nil {return _ddbe ;};_fadc .NumberOfSymbolInstances =uint32 (_egffb &_e .MaxUint32 );
_bced :=_fadc .RegionInfo .BitmapWidth *_fadc .RegionInfo .BitmapHeight ;if _bced < _fadc .NumberOfSymbolInstances {_ab .Log .Debug ("\u004c\u0069\u006d\u0069t\u0069\u006e\u0067\u0020t\u0068\u0065\u0020n\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020d\u0065\u0063\u006f\u0064e\u0064\u0020\u0073\u0079m\u0062\u006f\u006c\u0020\u0069n\u0073\u0074\u0061\u006e\u0063\u0065\u0073 \u0074\u006f\u0020\u006f\u006ee\u0020\u0070\u0065\u0072\u0020\u0070\u0069\u0078\u0065l\u0020\u0028\u0020\u0025\u0064\u0020\u0069\u006e\u0073\u0074\u0065\u0061\u0064\u0020\u006f\u0066\u0020\u0025\u0064\u0029",_bced ,_fadc .NumberOfSymbolInstances );
_fadc .NumberOfSymbolInstances =_bced ;};return nil ;};func (_gdd *Header )GetSegmentData ()(Segmenter ,error ){var _fdg Segmenter ;if _gdd .SegmentData !=nil {_fdg =_gdd .SegmentData ;};if _fdg ==nil {_adbdf ,_gfcd :=_agce [_gdd .Type ];if !_gfcd {return nil ,_b .Errorf ("\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0073\u002f\u0020\u0025\u0064\u0020\u0063\u0072e\u0061t\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e\u0020",_gdd .Type ,_gdd .Type );
};_fdg =_adbdf ();_ab .Log .Trace ("\u005b\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u0020\u0061\u0074\u0020\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0030\u0034\u0058",_gdd .SegmentNumber ,_gdd .SegmentDataStartOffset );
_afaa ,_fdcg :=_gdd .subInputReader ();if _fdcg !=nil {return nil ,_fdcg ;};if _deaa :=_fdg .Init (_gdd ,_afaa );_deaa !=nil {_ab .Log .Debug ("\u0049\u006e\u0069\u0074 \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076 \u0066o\u0072\u0020\u0074\u0079\u0070\u0065\u003a \u0025\u0054",_deaa ,_fdg );
return nil ,_deaa ;};_gdd .SegmentData =_fdg ;};return _fdg ,nil ;};func (_dabg *SymbolDictionary )decodeDifferenceWidth ()(int64 ,error ){if _dabg .IsHuffmanEncoded {switch _dabg .SdHuffDecodeWidthSelection {case 0:_bfag ,_bfeb :=_cff .GetStandardTable (2);
if _bfeb !=nil {return 0,_bfeb ;};return _bfag .Decode (_dabg ._cacc );case 1:_baff ,_cdgga :=_cff .GetStandardTable (3);if _cdgga !=nil {return 0,_cdgga ;};return _baff .Decode (_dabg ._cacc );case 3:if _dabg ._bbdb ==nil {var _eabd int ;if _dabg .SdHuffDecodeHeightSelection ==3{_eabd ++;
};_gebe ,_beacd :=_dabg .getUserTable (_eabd );if _beacd !=nil {return 0,_beacd ;};_dabg ._bbdb =_gebe ;};return _dabg ._bbdb .Decode (_dabg ._cacc );};}else {_fgbd ,_bdge :=_dabg ._fdef .DecodeInt (_dabg ._acfc );if _bdge !=nil {return 0,_bdge ;};return int64 (_fgbd ),nil ;
};return 0,nil ;};func (_aadg *Header )readSegmentDataLength (_geeb _g .StreamReader )(_acde error ){_aadg .SegmentDataLength ,_acde =_geeb .ReadBits (32);if _acde !=nil {return _acde ;};_aadg .SegmentDataLength &=_e .MaxInt32 ;return nil ;};func _gbca (_baaa int )int {if _baaa ==0{return 0;
};_baaa |=_baaa >>1;_baaa |=_baaa >>2;_baaa |=_baaa >>4;_baaa |=_baaa >>8;_baaa |=_baaa >>16;return (_baaa +1)>>1;};func (_gaa *HalftoneRegion )checkInput ()error {if _gaa .IsMMREncoded {if _gaa .HTemplate !=0{_ab .Log .Debug ("\u0048\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030",_gaa .HTemplate );
};if _gaa .HSkipEnabled {_ab .Log .Debug ("\u0048\u0053\u006b\u0069\u0070\u0045\u006e\u0061\u0062\u006c\u0065\u0064\u0020\u0030\u0020\u0025\u0076\u0020(\u0073\u0068\u006f\u0075\u006c\u0064\u0020c\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020v\u0061\u006c\u0075\u0065\u0020\u0066\u0061\u006c\u0073\u0065\u0029",_gaa .HSkipEnabled );
};};return nil ;};func (_ebgb *HalftoneRegion )computeSegmentDataStructure ()error {_ebgb .DataOffset =_ebgb ._edga .StreamPosition ();_ebgb .DataHeaderLength =_ebgb .DataOffset -_ebgb .DataHeaderOffset ;_ebgb .DataLength =int64 (_ebgb ._edga .Length ())-_ebgb .DataHeaderLength ;
return nil ;};func (_bdfa *Header )Encode (w _g .BinaryWriter )(_ebgg int ,_efg error ){const _gefc ="\u0048\u0065\u0061d\u0065\u0072\u002e\u0057\u0072\u0069\u0074\u0065";var _bgbg _g .BinaryWriter ;_ab .Log .Trace ("\u005b\u0053\u0045G\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045\u0052\u005d[\u0045\u004e\u0043\u004f\u0044\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");
defer func (){if _efg !=nil {_ab .Log .Trace ("[\u0053\u0045\u0047\u004d\u0045\u004eT\u002d\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0045\u004e\u0043\u004f\u0044E\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020%\u0076",_efg );}else {_ab .Log .Trace ("\u005b\u0053\u0045\u0047ME\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0025\u0076",_bdfa );
_ab .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045N\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u005b\u0045\u004e\u0043O\u0044\u0045\u005d\u0020\u0046\u0069\u006ei\u0073\u0068\u0065\u0064");};}();w .FinishByte ();if _bdfa .SegmentData !=nil {_ddgd ,_gdga :=_bdfa .SegmentData .(SegmentEncoder );
if !_gdga {return 0,_ff .Errorf (_gefc ,"\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0064\u006f\u0065s\u006e\u0027\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074 \u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0045\u006e\u0063\u006f\u0064er\u0020\u0069\u006e\u0074\u0065\u0072\u0066\u0061\u0063\u0065",_bdfa .SegmentData );
};_bgbg =_g .BufferedMSB ();_ebgg ,_efg =_ddgd .Encode (_bgbg );if _efg !=nil {return 0,_ff .Wrap (_efg ,_gefc ,"");};_bdfa .SegmentDataLength =uint64 (_ebgg );};if _bdfa .pageSize ()==4{_bdfa .PageAssociationFieldSize =true ;};var _cbbc int ;_cbbc ,_efg =_bdfa .writeSegmentNumber (w );
if _efg !=nil {return 0,_ff .Wrap (_efg ,_gefc ,"");};_ebgg +=_cbbc ;if _efg =_bdfa .writeFlags (w );_efg !=nil {return _ebgg ,_ff .Wrap (_efg ,_gefc ,"");};_ebgg ++;_cbbc ,_efg =_bdfa .writeReferredToCount (w );if _efg !=nil {return 0,_ff .Wrap (_efg ,_gefc ,"");
};_ebgg +=_cbbc ;_cbbc ,_efg =_bdfa .writeReferredToSegments (w );if _efg !=nil {return 0,_ff .Wrap (_efg ,_gefc ,"");};_ebgg +=_cbbc ;_cbbc ,_efg =_bdfa .writeSegmentPageAssociation (w );if _efg !=nil {return 0,_ff .Wrap (_efg ,_gefc ,"");};_ebgg +=_cbbc ;
_cbbc ,_efg =_bdfa .writeSegmentDataLength (w );if _efg !=nil {return 0,_ff .Wrap (_efg ,_gefc ,"");};_ebgg +=_cbbc ;_bdfa .HeaderLength =int64 (_ebgg )-int64 (_bdfa .SegmentDataLength );if _bgbg !=nil {if _ ,_efg =w .Write (_bgbg .Data ());_efg !=nil {return _ebgg ,_ff .Wrap (_efg ,_gefc ,"\u0077r\u0069t\u0065\u0020\u0073\u0065\u0067m\u0065\u006et\u0020\u0064\u0061\u0074\u0061");
};};return _ebgg ,nil ;};func (_dgb *Header )writeSegmentDataLength (_ecba _g .BinaryWriter )(_abab int ,_efag error ){_geb :=make ([]byte ,4);_f .BigEndian .PutUint32 (_geb ,uint32 (_dgb .SegmentDataLength ));if _abab ,_efag =_ecba .Write (_geb );_efag !=nil {return 0,_ff .Wrap (_efag ,"\u0048\u0065a\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u004c\u0065ng\u0074\u0068","");
};return _abab ,nil ;};func (_eeag *GenericRegion )parseHeader ()(_ceb error ){_ab .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052I\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0050\u0061\u0072s\u0069\u006e\u0067\u0048\u0065\u0061\u0064e\u0072\u002e\u002e\u002e");
defer func (){if _ceb !=nil {_ab .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e]\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065r\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0077\u0069th\u0020\u0065\u0072\u0072\u006f\u0072\u002e\u0020\u0025\u0076",_ceb );
}else {_ab .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049C\u002d\u0052\u0045G\u0049\u004f\u004e]\u0020\u0050a\u0072\u0073\u0069\u006e\u0067\u0048e\u0061de\u0072\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0053\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079\u002e\u002e\u002e");
};}();var (_fbcc int ;_bgef uint64 ;);if _ceb =_eeag .RegionSegment .parseHeader ();_ceb !=nil {return _ceb ;};if _ ,_ceb =_eeag ._aga .ReadBits (3);_ceb !=nil {return _ceb ;};_fbcc ,_ceb =_eeag ._aga .ReadBit ();if _ceb !=nil {return _ceb ;};if _fbcc ==1{_eeag .UseExtTemplates =true ;
};_fbcc ,_ceb =_eeag ._aga .ReadBit ();if _ceb !=nil {return _ceb ;};if _fbcc ==1{_eeag .IsTPGDon =true ;};_bgef ,_ceb =_eeag ._aga .ReadBits (2);if _ceb !=nil {return _ceb ;};_eeag .GBTemplate =byte (_bgef &0xf);_fbcc ,_ceb =_eeag ._aga .ReadBit ();if _ceb !=nil {return _ceb ;
};if _fbcc ==1{_eeag .IsMMREncoded =true ;};if !_eeag .IsMMREncoded {_gfea :=1;if _eeag .GBTemplate ==0{_gfea =4;if _eeag .UseExtTemplates {_gfea =12;};};if _ceb =_eeag .readGBAtPixels (_gfea );_ceb !=nil {return _ceb ;};};if _ceb =_eeag .computeSegmentDataStructure ();
_ceb !=nil {return _ceb ;};_ab .Log .Trace ("\u0025\u0073",_eeag );return nil ;};func (_adfb *SymbolDictionary )setRetainedCodingContexts (_fdcc *SymbolDictionary ){_adfb ._fdef =_fdcc ._fdef ;_adfb .IsHuffmanEncoded =_fdcc .IsHuffmanEncoded ;_adfb .UseRefinementAggregation =_fdcc .UseRefinementAggregation ;
_adfb .SdTemplate =_fdcc .SdTemplate ;_adfb .SdrTemplate =_fdcc .SdrTemplate ;_adfb .SdATX =_fdcc .SdATX ;_adfb .SdATY =_fdcc .SdATY ;_adfb .SdrATX =_fdcc .SdrATX ;_adfb .SdrATY =_fdcc .SdrATY ;_adfb ._gcagg =_fdcc ._gcagg ;};func (_gefcc *PatternDictionary )checkInput ()error {if _gefcc .HdpHeight < 1||_gefcc .HdpWidth < 1{return _bc .New ("in\u0076\u0061l\u0069\u0064\u0020\u0048\u0065\u0061\u0064\u0065\u0072 \u0056\u0061\u006c\u0075\u0065\u003a\u0020\u0057\u0069\u0064\u0074\u0068\u002f\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020g\u0072e\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020z\u0065\u0072o");
};if _gefcc .IsMMREncoded {if _gefcc .HDTemplate !=0{_ab .Log .Debug ("\u0076\u0061\u0072\u0069\u0061\u0062\u006c\u0065\u0020\u0048\u0044\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e \u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030");
};};return nil ;};func (_ba *EndOfStripe )parseHeader (_gf *Header ,_aa _g .StreamReader )error {_gg ,_ge :=_ba ._ed .ReadBits (32);if _ge !=nil {return _ge ;};_ba ._dg =int (_gg &_e .MaxInt32 );return nil ;};func (_gcge *SymbolDictionary )addSymbol (_acfb Regioner )error {_cbfc ,_aedb :=_acfb .GetRegionBitmap ();
if _aedb !=nil {return _aedb ;};_gcge ._ccdc [_gcge ._ebeb ]=_cbfc ;_gcge ._ddcgf =append (_gcge ._ddcgf ,_cbfc );_ab .Log .Trace ("\u005b\u0053YM\u0042\u004f\u004c \u0044\u0049\u0043\u0054ION\u0041RY\u005d\u0020\u0041\u0064\u0064\u0065\u0064 s\u0079\u006d\u0062\u006f\u006c\u003a\u0020%\u0073",_cbfc );
return nil ;};func (_dfgeb *TextRegion )decodeRI ()(int64 ,error ){if !_dfgeb .UseRefinement {return 0,nil ;};if _dfgeb .IsHuffmanEncoded {_dbeee ,_egcc :=_dfgeb ._aaaa .ReadBit ();return int64 (_dbeee ),_egcc ;};_dbcg ,_babe :=_dfgeb ._accg .DecodeInt (_dfgeb ._daca );
return int64 (_dbcg ),_babe ;};func (_cbfb *TableSegment )HtRS ()int32 {return _cbfb ._bgfe };func (_gded *PatternDictionary )extractPatterns (_aeda *_bd .Bitmap )error {var _cdd int ;_agfa :=make ([]*_bd .Bitmap ,_gded .GrayMax +1);for _cdd <=int (_gded .GrayMax ){_ccgb :=int (_gded .HdpWidth )*_cdd ;
_aegc :=_ad .Rect (_ccgb ,0,_ccgb +int (_gded .HdpWidth ),int (_gded .HdpHeight ));_fcgcg ,_cabaf :=_bd .Extract (_aegc ,_aeda );if _cabaf !=nil {return _cabaf ;};_agfa [_cdd ]=_fcgcg ;_cdd ++;};_gded .Patterns =_agfa ;return nil ;};func (_agfc *TextRegion )setParameters (_eggf *_eae .Decoder ,_fdbc ,_bcga bool ,_dbcdd ,_aac uint32 ,_cgaf uint32 ,_egae int8 ,_egfda uint32 ,_faaa int8 ,_geba _bd .CombinationOperator ,_affeg int8 ,_abgg int16 ,_bdgea ,_cdfa ,_dacac ,_egabd ,_ddgb ,_eafg ,_gdfc ,_badb ,_ecdfg ,_bdbe int8 ,_accgb ,_edccc []int8 ,_gffb []*_bd .Bitmap ,_dadd int8 ){_agfc ._accg =_eggf ;
_agfc .IsHuffmanEncoded =_fdbc ;_agfc .UseRefinement =_bcga ;_agfc .RegionInfo .BitmapWidth =_dbcdd ;_agfc .RegionInfo .BitmapHeight =_aac ;_agfc .NumberOfSymbolInstances =_cgaf ;_agfc .SbStrips =_egae ;_agfc .NumberOfSymbols =_egfda ;_agfc .DefaultPixel =_faaa ;
_agfc .CombinationOperator =_geba ;_agfc .IsTransposed =_affeg ;_agfc .ReferenceCorner =_abgg ;_agfc .SbDsOffset =_bdgea ;_agfc .SbHuffFS =_cdfa ;_agfc .SbHuffDS =_dacac ;_agfc .SbHuffDT =_egabd ;_agfc .SbHuffRDWidth =_ddgb ;_agfc .SbHuffRDHeight =_eafg ;
_agfc .SbHuffRSize =_ecdfg ;_agfc .SbHuffRDX =_gdfc ;_agfc .SbHuffRDY =_badb ;_agfc .SbrTemplate =_bdbe ;_agfc .SbrATX =_accgb ;_agfc .SbrATY =_edccc ;_agfc .Symbols =_gffb ;_agfc ._abef =_dadd ;};func (_fcge *SymbolDictionary )checkInput ()error {if _fcge .SdHuffDecodeHeightSelection ==2{_ab .Log .Debug ("\u0053\u0079\u006d\u0062\u006fl\u0020\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u0053e\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0070\u0065r\u006d\u0069\u0074\u0074\u0065\u0064",_fcge .SdHuffDecodeHeightSelection );
};if _fcge .SdHuffDecodeWidthSelection ==2{_ab .Log .Debug ("\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0057\u0069\u0064t\u0068\u0020\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061l\u0075\u0065\u0020\u006e\u006f\u0074 \u0070\u0065r\u006d\u0069t\u0074e\u0064",_fcge .SdHuffDecodeWidthSelection );
};if _fcge .IsHuffmanEncoded {if _fcge .SdTemplate !=0{_ab .Log .Debug ("\u0053\u0044T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e \u0030\u0029",_fcge .SdTemplate );
};if !_fcge .UseRefinementAggregation {if !_fcge .UseRefinementAggregation {if _fcge ._gfeae {_ab .Log .Debug ("\u0049\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074ex\u0074\u0052\u0065\u0074\u0061\u0069n\u0065\u0064\u0020\u003d\u0020\u0074\u0072\u0075\u0065\u0020\u0028\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0066\u0061\u006cs\u0065\u0029");
_fcge ._gfeae =false ;};if _fcge ._afceb {_ab .Log .Debug ("\u0069s\u0043\u006fd\u0069\u006e\u0067\u0043o\u006e\u0074\u0065x\u0074\u0055\u0073\u0065\u0064\u0020\u003d\u0020\u0074ru\u0065\u0020\u0028s\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020f\u0061\u006cs\u0065\u0029");
_fcge ._afceb =false ;};};};}else {if _fcge .SdHuffBMSizeSelection !=0{_ab .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066B\u004d\u0053\u0069\u007a\u0065\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_fcge .SdHuffBMSizeSelection =0;};if _fcge .SdHuffDecodeWidthSelection !=0{_ab .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068\u0053\u0065\u006c\u0065\u0063\u0074\u0069o\u006e\u0020\u0073\u0068\u006fu\u006c\u0064 \u0062\u0065\u0020\u0030");
_fcge .SdHuffDecodeWidthSelection =0;};if _fcge .SdHuffDecodeHeightSelection !=0{_ab .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0048e\u0069\u0067\u0068\u0074\u0053\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_fcge .SdHuffDecodeHeightSelection =0;};};if !_fcge .UseRefinementAggregation {if _fcge .SdrTemplate !=0{_ab .Log .Debug ("\u0053\u0044\u0052\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u003d\u0020\u0025\u0064\u0020\u0028s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_fcge .SdrTemplate );
_fcge .SdrTemplate =0;};};if !_fcge .IsHuffmanEncoded ||!_fcge .UseRefinementAggregation {if _fcge .SdHuffAggInstanceSelection {_ab .Log .Debug ("\u0053d\u0048\u0075f\u0066\u0041\u0067g\u0049\u006e\u0073\u0074\u0061\u006e\u0063e\u0053\u0065\u006c\u0065\u0063\u0074i\u006f\u006e\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_fcge .SdHuffAggInstanceSelection );
};};return nil ;};func (_fdcdf *GenericRegion )decodeTemplate0b (_geee ,_gedg ,_cbc int ,_fafa ,_bdga int )(_gfb error ){const _bgd ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0062";var (_bec ,_dbe int ;_agc ,_fbgg int ;
_dagg byte ;_ddb int ;);if _geee >=1{_dagg ,_gfb =_fdcdf .Bitmap .GetByte (_bdga );if _gfb !=nil {return _ff .Wrap (_gfb ,_bgd ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_agc =int (_dagg );};if _geee >=2{_dagg ,_gfb =_fdcdf .Bitmap .GetByte (_bdga -_fdcdf .Bitmap .RowStride );
if _gfb !=nil {return _ff .Wrap (_gfb ,_bgd ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_fbgg =int (_dagg )<<6;};_bec =(_agc &0xf0)|(_fbgg &0x3800);for _bega :=0;_bega < _cbc ;_bega =_ddb {var (_bda byte ;_edb int ;);_ddb =_bega +8;if _bcd :=_gedg -_bega ;
_bcd > 8{_edb =8;}else {_edb =_bcd ;};if _geee > 0{_agc <<=8;if _ddb < _gedg {_dagg ,_gfb =_fdcdf .Bitmap .GetByte (_bdga +1);if _gfb !=nil {return _ff .Wrap (_gfb ,_bgd ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_agc |=int (_dagg );};};if _geee > 1{_fbgg <<=8;
if _ddb < _gedg {_dagg ,_gfb =_fdcdf .Bitmap .GetByte (_bdga -_fdcdf .Bitmap .RowStride +1);if _gfb !=nil {return _ff .Wrap (_gfb ,_bgd ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_fbgg |=int (_dagg )<<6;};};for _agcf :=0;_agcf < _edb ;_agcf ++{_bef :=uint (7-_agcf );
if _fdcdf ._baa {_dbe =_fdcdf .overrideAtTemplate0b (_bec ,_bega +_agcf ,_geee ,int (_bda ),_agcf ,int (_bef ));_fdcdf ._afe .SetIndex (int32 (_dbe ));}else {_fdcdf ._afe .SetIndex (int32 (_bec ));};var _cga int ;_cga ,_gfb =_fdcdf ._ggb .DecodeBit (_fdcdf ._afe );
if _gfb !=nil {return _ff .Wrap (_gfb ,_bgd ,"");};_bda |=byte (_cga <<_bef );_bec =((_bec &0x7bf7)<<1)|_cga |((_agc >>_bef )&0x10)|((_fbgg >>_bef )&0x800);};if _dfde :=_fdcdf .Bitmap .SetByte (_fafa ,_bda );_dfde !=nil {return _ff .Wrap (_dfde ,_bgd ,"");
};_fafa ++;_bdga ++;};return nil ;};func (_bdee *Header )writeSegmentPageAssociation (_bbgb _g .BinaryWriter )(_fcac int ,_dbde error ){const _bdgg ="w\u0072\u0069\u0074\u0065\u0053\u0065g\u006d\u0065\u006e\u0074\u0050\u0061\u0067\u0065\u0041s\u0073\u006f\u0063i\u0061t\u0069\u006f\u006e";
if _bdee .pageSize ()!=4{if _dbde =_bbgb .WriteByte (byte (_bdee .PageAssociation ));_dbde !=nil {return 0,_ff .Wrap (_dbde ,_bdgg ,"\u0070\u0061\u0067\u0065\u0053\u0069\u007a\u0065\u0020\u0021\u003d\u0020\u0034");};return 1,nil ;};_dfff :=make ([]byte ,4);
_f .BigEndian .PutUint32 (_dfff ,uint32 (_bdee .PageAssociation ));if _fcac ,_dbde =_bbgb .Write (_dfff );_dbde !=nil {return 0,_ff .Wrap (_dbde ,_bdgg ,"\u0034 \u0062y\u0074\u0065\u0020\u0070\u0061g\u0065\u0020n\u0075\u006d\u0062\u0065\u0072");};return _fcac ,nil ;
};func (_ffac *TextRegion )GetRegionBitmap ()(*_bd .Bitmap ,error ){if _ffac .RegionBitmap !=nil {return _ffac .RegionBitmap ,nil ;};if !_ffac .IsHuffmanEncoded {if _eeee :=_ffac .setCodingStatistics ();_eeee !=nil {return nil ,_eeee ;};};if _ecdf :=_ffac .createRegionBitmap ();
_ecdf !=nil {return nil ,_ecdf ;};if _cacf :=_ffac .decodeSymbolInstances ();_cacf !=nil {return nil ,_cacf ;};return _ffac .RegionBitmap ,nil ;};func (_bfcae *RegionSegment )String ()string {_ddgc :=&_c .Builder {};_ddgc .WriteString ("\u0009[\u0052E\u0047\u0049\u004f\u004e\u0020S\u0045\u0047M\u0045\u004e\u0054\u005d\u000a");
_ddgc .WriteString (_b .Sprintf ("\t\u0009\u002d\u0020\u0042\u0069\u0074m\u0061\u0070\u0020\u0028\u0077\u0069d\u0074\u0068\u002c\u0020\u0068\u0065\u0069g\u0068\u0074\u0029\u0020\u005b\u0025\u0064\u0078\u0025\u0064]\u000a",_bfcae .BitmapWidth ,_bfcae .BitmapHeight ));
_ddgc .WriteString (_b .Sprintf ("\u0009\u0009\u002d\u0020L\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0028\u0078,\u0079)\u003a\u0020\u005b\u0025\u0064\u002c\u0025d\u005d\u000a",_bfcae .XLocation ,_bfcae .YLocation ));_ddgc .WriteString (_b .Sprintf ("\t\u0009\u002d\u0020\u0043\u006f\u006db\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070e\u0072\u0061\u0074o\u0072:\u0020\u0025\u0073",_bfcae .CombinaionOperator ));
return _ddgc .String ();};