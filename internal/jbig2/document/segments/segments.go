//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package segments ;import (_e "encoding/binary";_ge "errors";_da "fmt";_gbd "github.com/unidoc/unipdf/v3/common";_f "github.com/unidoc/unipdf/v3/internal/bitwise";_gecg "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_gb "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";_de "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/arithmetic";_gea "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/huffman";_fb "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/mmr";_eb "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/arithmetic";_c "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_ac "github.com/unidoc/unipdf/v3/internal/jbig2/internal";_gec "golang.org/x/xerrors";_a "image";_b "io";_g "math";_ec "strings";_ae "time";);func (_becc Type )String ()string {switch _becc {case TSymbolDictionary :return "\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079";case TIntermediateTextRegion :return "\u0049n\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020T\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateTextRegion :return "I\u006d\u006d\u0065\u0064ia\u0074e\u0020\u0054\u0065\u0078\u0074 \u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessTextRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020L\u006f\u0073\u0073\u006c\u0065\u0073\u0073 \u0054\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TPatternDictionary :return "\u0050a\u0074t\u0065\u0072\u006e\u0020\u0044i\u0063\u0074i\u006f\u006e\u0061\u0072\u0079";case TIntermediateHalftoneRegion :return "\u0049\u006e\u0074\u0065r\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0048\u0061l\u0066t\u006f\u006e\u0065\u0020\u0052\u0065\u0067i\u006f\u006e";case TImmediateHalftoneRegion :return "\u0049m\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u0048\u0061l\u0066t\u006fn\u0065\u0020\u0052\u0065\u0067\u0069\u006fn";case TImmediateLosslessHalftoneRegion :return "\u0049\u006d\u006ded\u0069\u0061\u0074\u0065\u0020\u004c\u006f\u0073\u0073l\u0065s\u0073 \u0048a\u006c\u0066\u0074\u006f\u006e\u0065\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TIntermediateGenericRegion :return "I\u006e\u0074\u0065\u0072\u006d\u0065d\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020R\u0065g\u0069\u006f\u006e";case TImmediateGenericRegion :return "\u0049m\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006ee\u0072\u0069\u0063\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessGenericRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u004c\u006f\u0073\u0073\u006c\u0065\u0073\u0073\u0020\u0047e\u006e\u0065\u0072\u0069\u0063\u0020\u0052e\u0067\u0069\u006f\u006e";case TIntermediateGenericRefinementRegion :return "\u0049\u006e\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0020\u0052\u0065\u0066i\u006e\u0065\u006d\u0065\u006et\u0020\u0052e\u0067\u0069\u006f\u006e";case TImmediateGenericRefinementRegion :return "I\u006d\u006d\u0065\u0064\u0069\u0061t\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020\u0052\u0065\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020\u0052\u0065\u0067\u0069o\u006e";case TImmediateLosslessGenericRefinementRegion :return "\u0049m\u006d\u0065d\u0069\u0061\u0074\u0065 \u004c\u006f\u0073s\u006c\u0065\u0073\u0073\u0020\u0047\u0065\u006e\u0065ri\u0063\u0020\u0052e\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020R\u0065\u0067i\u006f\u006e";case TPageInformation :return "\u0050\u0061g\u0065\u0020\u0049n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e";case TEndOfPage :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0050\u0061\u0067\u0065";case TEndOfStrip :return "\u0045\u006e\u0064 \u004f\u0066\u0020\u0053\u0074\u0072\u0069\u0070";case TEndOfFile :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0046\u0069\u006c\u0065";case TProfiles :return "\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0073";case TTables :return "\u0054\u0061\u0062\u006c\u0065\u0073";case TExtension :return "\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn";case TBitmap :return "\u0042\u0069\u0074\u006d\u0061\u0070";};return "I\u006ev\u0061\u006c\u0069\u0064\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0020Ki\u006e\u0064";};func (_aeg *GenericRefinementRegion )decodeTypicalPredictedLine (_dad ,_geef ,_dc ,_dd ,_daa ,_ddd int )error {_cga :=_dad -int (_aeg .ReferenceDY );_fbgb :=_aeg .ReferenceBitmap .GetByteIndex (0,_cga );_ee :=_aeg .RegionBitmap .GetByteIndex (0,_dad );var _gdg error ;switch _aeg .TemplateID {case 0:_gdg =_aeg .decodeTypicalPredictedLineTemplate0 (_dad ,_geef ,_dc ,_dd ,_daa ,_ddd ,_ee ,_cga ,_fbgb );case 1:_gdg =_aeg .decodeTypicalPredictedLineTemplate1 (_dad ,_geef ,_dc ,_dd ,_daa ,_ddd ,_ee ,_cga ,_fbgb );};return _gdg ;};func (_fabb *PatternDictionary )checkInput ()error {if _fabb .HdpHeight < 1||_fabb .HdpWidth < 1{return _ge .New ("in\u0076\u0061l\u0069\u0064\u0020\u0048\u0065\u0061\u0064\u0065\u0072 \u0056\u0061\u006c\u0075\u0065\u003a\u0020\u0057\u0069\u0064\u0074\u0068\u002f\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020g\u0072e\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020z\u0065\u0072o");};if _fabb .IsMMREncoded {if _fabb .HDTemplate !=0{_gbd .Log .Debug ("\u0076\u0061\u0072\u0069\u0061\u0062\u006c\u0065\u0020\u0048\u0044\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e \u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030");};};return nil ;};func (_fccf *PatternDictionary )readIsMMREncoded ()error {_fead ,_bbgc :=_fccf ._cdbb .ReadBit ();if _bbgc !=nil {return _bbgc ;};if _fead !=0{_fccf .IsMMREncoded =true ;};return nil ;};func (_bfdg *HalftoneRegion )combineGrayscalePlanes (_abg []*_gb .Bitmap ,_efeb int )error {_ccdf :=0;for _cffc :=0;_cffc < _abg [_efeb ].Height ;_cffc ++{for _egde :=0;_egde < _abg [_efeb ].Width ;_egde +=8{_dcaf ,_bdfcg :=_abg [_efeb +1].GetByte (_ccdf );if _bdfcg !=nil {return _bdfcg ;};_gdbg ,_bdfcg :=_abg [_efeb ].GetByte (_ccdf );if _bdfcg !=nil {return _bdfcg ;};_bdfcg =_abg [_efeb ].SetByte (_ccdf ,_gb .CombineBytes (_gdbg ,_dcaf ,_gb .CmbOpXor ));if _bdfcg !=nil {return _bdfcg ;};_ccdf ++;};};return nil ;};type TableSegment struct{_caea _f .StreamReader ;_affg int32 ;_fcbb int32 ;_cbegc int32 ;_aedc int32 ;_fbed int32 ;};func (_dbdf *SymbolDictionary )decodeNewSymbols (_aaagg ,_abea uint32 ,_egfa *_gb .Bitmap ,_fecf ,_bfafd int32 )error {if _dbdf ._efag ==nil {_dbdf ._efag =_aga (_dbdf ._dccg ,nil );if _dbdf ._fffa ==nil {var _degfc error ;_dbdf ._fffa ,_degfc =_de .New (_dbdf ._dccg );if _degfc !=nil {return _degfc ;};};if _dbdf ._bebgc ==nil {_dbdf ._bebgc =_de .NewStats (65536,1);};};_dbdf ._efag .setParameters (_dbdf ._bebgc ,_dbdf ._fffa ,_dbdf .SdrTemplate ,_aaagg ,_abea ,_egfa ,_fecf ,_bfafd ,false ,_dbdf .SdrATX ,_dbdf .SdrATY );return _dbdf .addSymbol (_dbdf ._efag );};func (_aceg *PageInformationSegment )readCombinationOperatorOverrideAllowed ()error {_dgbf ,_ebbc :=_aceg ._cgba .ReadBit ();if _ebbc !=nil {return _ebbc ;};if _dgbf ==1{_aceg ._bfac =true ;};return nil ;};type EncodeInitializer interface{InitEncode ();};func (_dcg *GenericRefinementRegion )decodeTypicalPredictedLineTemplate0 (_eaeb ,_fba ,_bf ,_gcc ,_eed ,_ga ,_dbe ,_feb ,_eff int )error {var (_fea ,_cge ,_abc ,_ced ,_gf ,_gba int ;_eef byte ;_fbe error ;);if _eaeb > 0{_eef ,_fbe =_dcg .RegionBitmap .GetByte (_dbe -_bf );if _fbe !=nil {return _fbe ;};_abc =int (_eef );};if _feb > 0&&_feb <=_dcg .ReferenceBitmap .Height {_eef ,_fbe =_dcg .ReferenceBitmap .GetByte (_eff -_gcc +_ga );if _fbe !=nil {return _fbe ;};_ced =int (_eef )<<4;};if _feb >=0&&_feb < _dcg .ReferenceBitmap .Height {_eef ,_fbe =_dcg .ReferenceBitmap .GetByte (_eff +_ga );if _fbe !=nil {return _fbe ;};_gf =int (_eef )<<1;};if _feb > -2&&_feb < _dcg .ReferenceBitmap .Height -1{_eef ,_fbe =_dcg .ReferenceBitmap .GetByte (_eff +_gcc +_ga );if _fbe !=nil {return _fbe ;};_gba =int (_eef );};_fea =((_abc >>5)&0x6)|((_gba >>2)&0x30)|(_gf &0x180)|(_ced &0xc00);var _eg int ;for _bdd :=0;_bdd < _eed ;_bdd =_eg {var _daab int ;_eg =_bdd +8;var _gfd int ;if _gfd =_fba -_bdd ;_gfd > 8{_gfd =8;};_afa :=_eg < _fba ;_cgaf :=_eg < _dcg .ReferenceBitmap .Width ;_bc :=_ga +1;if _eaeb > 0{_eef =0;if _afa {_eef ,_fbe =_dcg .RegionBitmap .GetByte (_dbe -_bf +1);if _fbe !=nil {return _fbe ;};};_abc =(_abc <<8)|int (_eef );};if _feb > 0&&_feb <=_dcg .ReferenceBitmap .Height {var _gegg int ;if _cgaf {_eef ,_fbe =_dcg .ReferenceBitmap .GetByte (_eff -_gcc +_bc );if _fbe !=nil {return _fbe ;};_gegg =int (_eef )<<4;};_ced =(_ced <<8)|_gegg ;};if _feb >=0&&_feb < _dcg .ReferenceBitmap .Height {var _bbg int ;if _cgaf {_eef ,_fbe =_dcg .ReferenceBitmap .GetByte (_eff +_bc );if _fbe !=nil {return _fbe ;};_bbg =int (_eef )<<1;};_gf =(_gf <<8)|_bbg ;};if _feb > -2&&_feb < (_dcg .ReferenceBitmap .Height -1){_eef =0;if _cgaf {_eef ,_fbe =_dcg .ReferenceBitmap .GetByte (_eff +_gcc +_bc );if _fbe !=nil {return _fbe ;};};_gba =(_gba <<8)|int (_eef );};for _bge :=0;_bge < _gfd ;_bge ++{var _geea int ;_ecbb :=false ;_fc :=(_fea >>4)&0x1ff;if _fc ==0x1ff{_ecbb =true ;_geea =1;}else if _fc ==0x00{_ecbb =true ;};if !_ecbb {if _dcg ._af {_cge =_dcg .overrideAtTemplate0 (_fea ,_bdd +_bge ,_eaeb ,_daab ,_bge );_dcg ._abd .SetIndex (int32 (_cge ));}else {_dcg ._abd .SetIndex (int32 (_fea ));};_geea ,_fbe =_dcg ._ef .DecodeBit (_dcg ._abd );if _fbe !=nil {return _fbe ;};};_cgda :=uint (7-_bge );_daab |=_geea <<_cgda ;_fea =((_fea &0xdb6)<<1)|_geea |(_abc >>_cgda +5)&0x002|((_gba >>_cgda +2)&0x010)|((_gf >>_cgda )&0x080)|((_ced >>_cgda )&0x400);};_fbe =_dcg .RegionBitmap .SetByte (_dbe ,byte (_daab ));if _fbe !=nil {return _fbe ;};_dbe ++;_eff ++;};return nil ;};func (_bdee *SymbolDictionary )checkInput ()error {if _bdee .SdHuffDecodeHeightSelection ==2{_gbd .Log .Debug ("\u0053\u0079\u006d\u0062\u006fl\u0020\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u0053e\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0070\u0065r\u006d\u0069\u0074\u0074\u0065\u0064",_bdee .SdHuffDecodeHeightSelection );};if _bdee .SdHuffDecodeWidthSelection ==2{_gbd .Log .Debug ("\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0057\u0069\u0064t\u0068\u0020\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061l\u0075\u0065\u0020\u006e\u006f\u0074 \u0070\u0065r\u006d\u0069t\u0074e\u0064",_bdee .SdHuffDecodeWidthSelection );};if _bdee .IsHuffmanEncoded {if _bdee .SdTemplate !=0{_gbd .Log .Debug ("\u0053\u0044T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e \u0030\u0029",_bdee .SdTemplate );};if !_bdee .UseRefinementAggregation {if !_bdee .UseRefinementAggregation {if _bdee ._ccefc {_gbd .Log .Debug ("\u0049\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074ex\u0074\u0052\u0065\u0074\u0061\u0069n\u0065\u0064\u0020\u003d\u0020\u0074\u0072\u0075\u0065\u0020\u0028\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0066\u0061\u006cs\u0065\u0029");_bdee ._ccefc =false ;};if _bdee ._ffcd {_gbd .Log .Debug ("\u0069s\u0043\u006fd\u0069\u006e\u0067\u0043o\u006e\u0074\u0065x\u0074\u0055\u0073\u0065\u0064\u0020\u003d\u0020\u0074ru\u0065\u0020\u0028s\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020f\u0061\u006cs\u0065\u0029");_bdee ._ffcd =false ;};};};}else {if _bdee .SdHuffBMSizeSelection !=0{_gbd .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066B\u004d\u0053\u0069\u007a\u0065\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");_bdee .SdHuffBMSizeSelection =0;};if _bdee .SdHuffDecodeWidthSelection !=0{_gbd .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068\u0053\u0065\u006c\u0065\u0063\u0074\u0069o\u006e\u0020\u0073\u0068\u006fu\u006c\u0064 \u0062\u0065\u0020\u0030");_bdee .SdHuffDecodeWidthSelection =0;};if _bdee .SdHuffDecodeHeightSelection !=0{_gbd .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0048e\u0069\u0067\u0068\u0074\u0053\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");_bdee .SdHuffDecodeHeightSelection =0;};};if !_bdee .UseRefinementAggregation {if _bdee .SdrTemplate !=0{_gbd .Log .Debug ("\u0053\u0044\u0052\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u003d\u0020\u0025\u0064\u0020\u0028s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_bdee .SdrTemplate );_bdee .SdrTemplate =0;};};if !_bdee .IsHuffmanEncoded ||!_bdee .UseRefinementAggregation {if _bdee .SdHuffAggInstanceSelection {_gbd .Log .Debug ("\u0053d\u0048\u0075f\u0066\u0041\u0067g\u0049\u006e\u0073\u0074\u0061\u006e\u0063e\u0053\u0065\u006c\u0065\u0063\u0074i\u006f\u006e\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_bdee .SdHuffAggInstanceSelection );};};return nil ;};type SegmentEncoder interface{Encode (_fgea _f .BinaryWriter )(_face int ,_gfec error );};func (_gede *HalftoneRegion )parseHeader ()error {if _ecc :=_gede .RegionSegment .parseHeader ();_ecc !=nil {return _ecc ;};_dfec ,_fecb :=_gede ._cecf .ReadBit ();if _fecb !=nil {return _fecb ;};_gede .HDefaultPixel =int8 (_dfec );_cbgb ,_fecb :=_gede ._cecf .ReadBits (3);if _fecb !=nil {return _fecb ;};_gede .CombinationOperator =_gb .CombinationOperator (_cbgb &0xf);_dfec ,_fecb =_gede ._cecf .ReadBit ();if _fecb !=nil {return _fecb ;};if _dfec ==1{_gede .HSkipEnabled =true ;};_cbgb ,_fecb =_gede ._cecf .ReadBits (2);if _fecb !=nil {return _fecb ;};_gede .HTemplate =byte (_cbgb &0xf);_dfec ,_fecb =_gede ._cecf .ReadBit ();if _fecb !=nil {return _fecb ;};if _dfec ==1{_gede .IsMMREncoded =true ;};_cbgb ,_fecb =_gede ._cecf .ReadBits (32);if _fecb !=nil {return _fecb ;};_gede .HGridWidth =uint32 (_cbgb &_g .MaxUint32 );_cbgb ,_fecb =_gede ._cecf .ReadBits (32);if _fecb !=nil {return _fecb ;};_gede .HGridHeight =uint32 (_cbgb &_g .MaxUint32 );_cbgb ,_fecb =_gede ._cecf .ReadBits (32);if _fecb !=nil {return _fecb ;};_gede .HGridX =int32 (_cbgb &_g .MaxInt32 );_cbgb ,_fecb =_gede ._cecf .ReadBits (32);if _fecb !=nil {return _fecb ;};_gede .HGridY =int32 (_cbgb &_g .MaxInt32 );_cbgb ,_fecb =_gede ._cecf .ReadBits (16);if _fecb !=nil {return _fecb ;};_gede .HRegionX =uint16 (_cbgb &_g .MaxUint16 );_cbgb ,_fecb =_gede ._cecf .ReadBits (16);if _fecb !=nil {return _fecb ;};_gede .HRegionY =uint16 (_cbgb &_g .MaxUint16 );if _fecb =_gede .computeSegmentDataStructure ();_fecb !=nil {return _fecb ;};return _gede .checkInput ();};func (_eaec *TextRegion )initSymbols ()error {const _abbaf ="i\u006e\u0069\u0074\u0053\u0079\u006d\u0062\u006f\u006c\u0073";for _ ,_gdbaf :=range _eaec .Header .RTSegments {if _gdbaf ==nil {return _c .Error (_abbaf ,"\u006e\u0069\u006c\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020pr\u006f\u0076\u0069\u0064\u0065\u0064 \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0074\u0065\u0078\u0074\u0020\u0072\u0065g\u0069\u006f\u006e\u0020\u0053\u0079\u006d\u0062o\u006c\u0073");};if _gdbaf .Type ==0{_cade ,_fbedc :=_gdbaf .GetSegmentData ();if _fbedc !=nil {return _c .Wrap (_fbedc ,_abbaf ,"");};_cdbbf ,_feac :=_cade .(*SymbolDictionary );if !_feac {return _c .Error (_abbaf ,"\u0072e\u0066\u0065r\u0072\u0065\u0064 \u0054\u006f\u0020\u0053\u0065\u0067\u006de\u006e\u0074\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_cdbbf ._fggg =_eaec ._eagc ;_ffac ,_fbedc :=_cdbbf .GetDictionary ();if _fbedc !=nil {return _c .Wrap (_fbedc ,_abbaf ,"");};_eaec .Symbols =append (_eaec .Symbols ,_ffac ...);};};_eaec .NumberOfSymbols =uint32 (len (_eaec .Symbols ));return nil ;};func (_fbgd *GenericRefinementRegion )decodeSLTP ()(int ,error ){_fbgd .Template .setIndex (_fbgd ._abd );return _fbgd ._ef .DecodeBit (_fbgd ._abd );};func (_fae *GenericRefinementRegion )readAtPixels ()error {_fae .GrAtX =make ([]int8 ,2);_fae .GrAtY =make ([]int8 ,2);_aee ,_bed :=_fae ._ab .ReadByte ();if _bed !=nil {return _bed ;};_fae .GrAtX [0]=int8 (_aee );_aee ,_bed =_fae ._ab .ReadByte ();if _bed !=nil {return _bed ;};_fae .GrAtY [0]=int8 (_aee );_aee ,_bed =_fae ._ab .ReadByte ();if _bed !=nil {return _bed ;};_fae .GrAtX [1]=int8 (_aee );_aee ,_bed =_fae ._ab .ReadByte ();if _bed !=nil {return _bed ;};_fae .GrAtY [1]=int8 (_aee );return nil ;};func (_fdda *Header )readDataStartOffset (_faabf _f .StreamReader ,_gbgd OrganizationType ){if _gbgd ==OSequential {_fdda .SegmentDataStartOffset =uint64 (_faabf .StreamPosition ());};};func (_dgbe *HalftoneRegion )shiftAndFill (_aeag int )int {_aeag >>=8;if _aeag < 0{_dfeg :=int (_g .Log (float64 (_fbdb (_aeag )))/_g .Log (2));_cead :=31-_dfeg ;for _ffab :=1;_ffab < _cead ;_ffab ++{_aeag |=1<<uint (31-_ffab );};};return _aeag ;};func (_becg *TextRegion )getSymbols ()error {if _becg .Header .RTSegments !=nil {return _becg .initSymbols ();};return nil ;};func (_gagf *GenericRegion )decodeTemplate0b (_adf ,_bgf ,_agbc int ,_adef ,_afdb int )(_cdg error ){const _bec ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0062";var (_edab ,_fcf int ;_feag ,_gff int ;_gbad byte ;_cagb int ;);if _adf >=1{_gbad ,_cdg =_gagf .Bitmap .GetByte (_afdb );if _cdg !=nil {return _c .Wrap (_cdg ,_bec ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_feag =int (_gbad );};if _adf >=2{_gbad ,_cdg =_gagf .Bitmap .GetByte (_afdb -_gagf .Bitmap .RowStride );if _cdg !=nil {return _c .Wrap (_cdg ,_bec ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_gff =int (_gbad )<<6;};_edab =(_feag &0xf0)|(_gff &0x3800);for _fac :=0;_fac < _agbc ;_fac =_cagb {var (_ege byte ;_gccc int ;);_cagb =_fac +8;if _ega :=_bgf -_fac ;_ega > 8{_gccc =8;}else {_gccc =_ega ;};if _adf > 0{_feag <<=8;if _cagb < _bgf {_gbad ,_cdg =_gagf .Bitmap .GetByte (_afdb +1);if _cdg !=nil {return _c .Wrap (_cdg ,_bec ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_feag |=int (_gbad );};};if _adf > 1{_gff <<=8;if _cagb < _bgf {_gbad ,_cdg =_gagf .Bitmap .GetByte (_afdb -_gagf .Bitmap .RowStride +1);if _cdg !=nil {return _c .Wrap (_cdg ,_bec ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_gff |=int (_gbad )<<6;};};for _fgc :=0;_fgc < _gccc ;_fgc ++{_egbb :=uint (7-_fgc );if _gagf ._deec {_fcf =_gagf .overrideAtTemplate0b (_edab ,_fac +_fgc ,_adf ,int (_ege ),_fgc ,int (_egbb ));_gagf ._gef .SetIndex (int32 (_fcf ));}else {_gagf ._gef .SetIndex (int32 (_edab ));};var _ddc int ;_ddc ,_cdg =_gagf ._egff .DecodeBit (_gagf ._gef );if _cdg !=nil {return _c .Wrap (_cdg ,_bec ,"");};_ege |=byte (_ddc <<_egbb );_edab =((_edab &0x7bf7)<<1)|_ddc |((_feag >>_egbb )&0x10)|((_gff >>_egbb )&0x800);};if _cfc :=_gagf .Bitmap .SetByte (_adef ,_ege );_cfc !=nil {return _c .Wrap (_cfc ,_bec ,"");};_adef ++;_afdb ++;};return nil ;};var _ _gea .BasicTabler =&TableSegment {};func (_aaab *Header )writeSegmentDataLength (_dfeb _f .BinaryWriter )(_fdab int ,_ecfe error ){_gfdd :=make ([]byte ,4);_e .BigEndian .PutUint32 (_gfdd ,uint32 (_aaab .SegmentDataLength ));if _fdab ,_ecfe =_dfeb .Write (_gfdd );_ecfe !=nil {return 0,_c .Wrap (_ecfe ,"\u0048\u0065a\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u004c\u0065ng\u0074\u0068","");};return _fdab ,nil ;};func (_ebg *PageInformationSegment )parseHeader ()(_gfgf error ){_gbd .Log .Trace ("\u005b\u0050\u0061\u0067\u0065I\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067m\u0065\u006e\u0074\u005d\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u002e\u002e");defer func (){var _gdea ="[\u0050\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072m\u0061\u0074\u0069\u006f\u006e\u0053\u0065gm\u0065\u006e\u0074\u005d \u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065ad\u0065\u0072 \u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064";if _gfgf !=nil {_gdea +="\u0020\u0077\u0069t\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u0020"+_gfgf .Error ();}else {_gdea +="\u0020\u0073\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079";};_gbd .Log .Trace (_gdea );}();if _gfgf =_ebg .readWidthAndHeight ();_gfgf !=nil {return _gfgf ;};if _gfgf =_ebg .readResolution ();_gfgf !=nil {return _gfgf ;};_ ,_gfgf =_ebg ._cgba .ReadBit ();if _gfgf !=nil {return _gfgf ;};if _gfgf =_ebg .readCombinationOperatorOverrideAllowed ();_gfgf !=nil {return _gfgf ;};if _gfgf =_ebg .readRequiresAuxiliaryBuffer ();_gfgf !=nil {return _gfgf ;};if _gfgf =_ebg .readCombinationOperator ();_gfgf !=nil {return _gfgf ;};if _gfgf =_ebg .readDefaultPixelValue ();_gfgf !=nil {return _gfgf ;};if _gfgf =_ebg .readContainsRefinement ();_gfgf !=nil {return _gfgf ;};if _gfgf =_ebg .readIsLossless ();_gfgf !=nil {return _gfgf ;};if _gfgf =_ebg .readIsStriped ();_gfgf !=nil {return _gfgf ;};if _gfgf =_ebg .readMaxStripeSize ();_gfgf !=nil {return _gfgf ;};if _gfgf =_ebg .checkInput ();_gfgf !=nil {return _gfgf ;};_gbd .Log .Trace ("\u0025\u0073",_ebg );return nil ;};type Header struct{SegmentNumber uint32 ;Type Type ;RetainFlag bool ;PageAssociation int ;PageAssociationFieldSize bool ;RTSegments []*Header ;HeaderLength int64 ;SegmentDataLength uint64 ;SegmentDataStartOffset uint64 ;Reader _f .StreamReader ;SegmentData Segmenter ;RTSNumbers []int ;RetainBits []uint8 ;};func (_gfad *TextRegion )parseHeader ()error {var _baebe error ;_gbd .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069n\u0073\u002e\u002e\u002e");defer func (){if _baebe !=nil {_gbd .Log .Trace ("\u005b\u0054\u0045\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044E\u0052\u005d\u0020\u0066\u0061i\u006c\u0065d\u002e\u0020\u0025\u0076",_baebe );}else {_gbd .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069s\u0068\u0065\u0064\u002e");};}();if _baebe =_gfad .RegionInfo .parseHeader ();_baebe !=nil {return _baebe ;};if _baebe =_gfad .readRegionFlags ();_baebe !=nil {return _baebe ;};if _gfad .IsHuffmanEncoded {if _baebe =_gfad .readHuffmanFlags ();_baebe !=nil {return _baebe ;};};if _baebe =_gfad .readUseRefinement ();_baebe !=nil {return _baebe ;};if _baebe =_gfad .readAmountOfSymbolInstances ();_baebe !=nil {return _baebe ;};if _baebe =_gfad .getSymbols ();_baebe !=nil {return _baebe ;};if _baebe =_gfad .computeSymbolCodeLength ();_baebe !=nil {return _baebe ;};if _baebe =_gfad .checkInput ();_baebe !=nil {return _baebe ;};_gbd .Log .Trace ("\u0025\u0073",_gfad .String ());return nil ;};func (_aca *SymbolDictionary )decodeRefinedSymbol (_degf ,_baae uint32 )error {var (_ebc int ;_fbff ,_cagcb int32 ;);if _aca .IsHuffmanEncoded {_ffefd ,_dafd :=_aca ._dccg .ReadBits (byte (_aca ._dccff ));if _dafd !=nil {return _dafd ;};_ebc =int (_ffefd );_geae ,_dafd :=_gea .GetStandardTable (15);if _dafd !=nil {return _dafd ;};_cfa ,_dafd :=_geae .Decode (_aca ._dccg );if _dafd !=nil {return _dafd ;};_fbff =int32 (_cfa );_cfa ,_dafd =_geae .Decode (_aca ._dccg );if _dafd !=nil {return _dafd ;};_cagcb =int32 (_cfa );_geae ,_dafd =_gea .GetStandardTable (1);if _dafd !=nil {return _dafd ;};if _ ,_dafd =_geae .Decode (_aca ._dccg );_dafd !=nil {return _dafd ;};_aca ._dccg .Align ();}else {_bdaa ,_bgcf :=_aca ._fffa .DecodeIAID (uint64 (_aca ._dccff ),_aca ._fggg );if _bgcf !=nil {return _bgcf ;};_ebc =int (_bdaa );_fbff ,_bgcf =_aca ._fffa .DecodeInt (_aca ._fecaf );if _bgcf !=nil {return _bgcf ;};_cagcb ,_bgcf =_aca ._fffa .DecodeInt (_aca ._afcfe );if _bgcf !=nil {return _bgcf ;};};if _aaca :=_aca .setSymbolsArray ();_aaca !=nil {return _aaca ;};_deegf :=_aca ._bbee [_ebc ];if _ggef :=_aca .decodeNewSymbols (_degf ,_baae ,_deegf ,_fbff ,_cagcb );_ggef !=nil {return _ggef ;};if _aca .IsHuffmanEncoded {_aca ._dccg .Align ();};return nil ;};func (_gacf *RegionSegment )readCombinationOperator ()error {_ddce ,_geb :=_gacf ._ffae .ReadBits (3);if _geb !=nil {return _geb ;};_gacf .CombinaionOperator =_gb .CombinationOperator (_ddce &0xF);return nil ;};func (_dddd *RegionSegment )String ()string {_bag :=&_ec .Builder {};_bag .WriteString ("\u0009[\u0052E\u0047\u0049\u004f\u004e\u0020S\u0045\u0047M\u0045\u004e\u0054\u005d\u000a");_bag .WriteString (_da .Sprintf ("\t\u0009\u002d\u0020\u0042\u0069\u0074m\u0061\u0070\u0020\u0028\u0077\u0069d\u0074\u0068\u002c\u0020\u0068\u0065\u0069g\u0068\u0074\u0029\u0020\u005b\u0025\u0064\u0078\u0025\u0064]\u000a",_dddd .BitmapWidth ,_dddd .BitmapHeight ));_bag .WriteString (_da .Sprintf ("\u0009\u0009\u002d\u0020L\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0028\u0078,\u0079)\u003a\u0020\u005b\u0025\u0064\u002c\u0025d\u005d\u000a",_dddd .XLocation ,_dddd .YLocation ));_bag .WriteString (_da .Sprintf ("\t\u0009\u002d\u0020\u0043\u006f\u006db\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070e\u0072\u0061\u0074o\u0072:\u0020\u0025\u0073",_dddd .CombinaionOperator ));return _bag .String ();};func (_cgb *GenericRegion )getPixel (_ada ,_ccef int )int8 {if _ada < 0||_ada >=_cgb .Bitmap .Width {return 0;};if _ccef < 0||_ccef >=_cgb .Bitmap .Height {return 0;};if _cgb .Bitmap .GetPixel (_ada ,_ccef ){return 1;};return 0;};func (_geabc *TableSegment )StreamReader ()_f .StreamReader {return _geabc ._caea };func (_fggd *SymbolDictionary )setCodingStatistics ()error {if _fggd ._cacg ==nil {_fggd ._cacg =_de .NewStats (512,1);};if _fggd ._gcf ==nil {_fggd ._gcf =_de .NewStats (512,1);};if _fggd ._gaaf ==nil {_fggd ._gaaf =_de .NewStats (512,1);};if _fggd ._bggg ==nil {_fggd ._bggg =_de .NewStats (512,1);};if _fggd ._edc ==nil {_fggd ._edc =_de .NewStats (512,1);};if _fggd .UseRefinementAggregation &&_fggd ._fggg ==nil {_fggd ._fggg =_de .NewStats (1<<uint (_fggd ._dccff ),1);_fggd ._fecaf =_de .NewStats (512,1);_fggd ._afcfe =_de .NewStats (512,1);};if _fggd ._bebgc ==nil {_fggd ._bebgc =_de .NewStats (65536,1);};if _fggd ._fffa ==nil {var _bcaa error ;_fggd ._fffa ,_bcaa =_de .New (_fggd ._dccg );if _bcaa !=nil {return _bcaa ;};};return nil ;};var (_aba Segmenter ;_fag =map[Type ]func ()Segmenter {TSymbolDictionary :func ()Segmenter {return &SymbolDictionary {}},TIntermediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateLosslessTextRegion :func ()Segmenter {return &TextRegion {}},TPatternDictionary :func ()Segmenter {return &PatternDictionary {}},TIntermediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateLosslessHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TIntermediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateLosslessGenericRegion :func ()Segmenter {return &GenericRegion {}},TIntermediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateLosslessGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TPageInformation :func ()Segmenter {return &PageInformationSegment {}},TEndOfPage :func ()Segmenter {return _aba },TEndOfStrip :func ()Segmenter {return &EndOfStripe {}},TEndOfFile :func ()Segmenter {return _aba },TProfiles :func ()Segmenter {return _aba },TTables :func ()Segmenter {return &TableSegment {}},TExtension :func ()Segmenter {return _aba },TBitmap :func ()Segmenter {return _aba }};);func (_bba *HalftoneRegion )GetRegionInfo ()*RegionSegment {return _bba .RegionSegment };func (_dde *GenericRegion )GetRegionBitmap ()(_aae *_gb .Bitmap ,_bfc error ){if _dde .Bitmap !=nil {return _dde .Bitmap ,nil ;};if _dde .IsMMREncoded {if _dde ._afg ==nil {_dde ._afg ,_bfc =_fb .New (_dde ._gge ,int (_dde .RegionSegment .BitmapWidth ),int (_dde .RegionSegment .BitmapHeight ),_dde .DataOffset ,_dde .DataLength );if _bfc !=nil {return nil ,_bfc ;};};_dde .Bitmap ,_bfc =_dde ._afg .UncompressMMR ();return _dde .Bitmap ,_bfc ;};if _bfc =_dde .updateOverrideFlags ();_bfc !=nil {return nil ,_bfc ;};var _gdec int ;if _dde ._egff ==nil {_dde ._egff ,_bfc =_de .New (_dde ._gge );if _bfc !=nil {return nil ,_bfc ;};};if _dde ._gef ==nil {_dde ._gef =_de .NewStats (65536,1);};_dde .Bitmap =_gb .New (int (_dde .RegionSegment .BitmapWidth ),int (_dde .RegionSegment .BitmapHeight ));_cbf :=int (uint32 (_dde .Bitmap .Width +7)&(^uint32 (7)));for _bfbe :=0;_bfbe < _dde .Bitmap .Height ;_bfbe ++{if _dde .IsTPGDon {var _ecfc int ;_ecfc ,_bfc =_dde .decodeSLTP ();if _bfc !=nil {return nil ,_bfc ;};_gdec ^=_ecfc ;};if _gdec ==1{if _bfbe > 0{if _bfc =_dde .copyLineAbove (_bfbe );_bfc !=nil {return nil ,_bfc ;};};}else {if _bfc =_dde .decodeLine (_bfbe ,_dde .Bitmap .Width ,_cbf );_bfc !=nil {return nil ,_bfc ;};};};return _dde .Bitmap ,nil ;};type GenericRefinementRegion struct{_fga templater ;_daf templater ;_ab _f .StreamReader ;_fa *Header ;RegionInfo *RegionSegment ;IsTPGROn bool ;TemplateID int8 ;Template templater ;GrAtX []int8 ;GrAtY []int8 ;RegionBitmap *_gb .Bitmap ;ReferenceBitmap *_gb .Bitmap ;ReferenceDX int32 ;ReferenceDY int32 ;_ef *_de .Decoder ;_abd *_de .DecoderStats ;_af bool ;_df []bool ;};func (_faaf *PageInformationSegment )String ()string {_cdb :=&_ec .Builder {};_cdb .WriteString ("\u000a\u005b\u0050\u0041G\u0045\u002d\u0049\u004e\u0046\u004f\u0052\u004d\u0041\u0054I\u004fN\u002d\u0053\u0045\u0047\u004d\u0045\u004eT\u005d\u000a");_cdb .WriteString (_da .Sprintf ("\u0009\u002d \u0042\u004d\u0048e\u0069\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u000a",_faaf .PageBMHeight ));_cdb .WriteString (_da .Sprintf ("\u0009-\u0020B\u004d\u0057\u0069\u0064\u0074\u0068\u003a\u0020\u0025\u0064\u000a",_faaf .PageBMWidth ));_cdb .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0058\u003a\u0020\u0025\u0064\u000a",_faaf .ResolutionX ));_cdb .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0059\u003a\u0020\u0025\u0064\u000a",_faaf .ResolutionY ));_cdb .WriteString (_da .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0073\u000a",_faaf ._aabc ));_cdb .WriteString (_da .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006eO\u0070\u0065\u0072\u0061\u0074\u006f\u0072O\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025v\u000a",_faaf ._bfac ));_cdb .WriteString (_da .Sprintf ("\u0009-\u0020I\u0073\u004c\u006f\u0073\u0073l\u0065\u0073s\u003a\u0020\u0025\u0076\u000a",_faaf .IsLossless ));_cdb .WriteString (_da .Sprintf ("\u0009\u002d\u0020R\u0065\u0071\u0075\u0069r\u0065\u0073\u0041\u0075\u0078\u0069\u006ci\u0061\u0072\u0079\u0042\u0075\u0066\u0066\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_faaf ._bac ));_cdb .WriteString (_da .Sprintf ("\u0009\u002d\u0020M\u0069\u0067\u0068\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0052e\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0076\u000a",_faaf ._aadc ));_cdb .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0049\u0073\u0053\u0074\u0072\u0069\u0070\u0065\u0064:\u0020\u0025\u0076\u000a",_faaf .IsStripe ));_cdb .WriteString (_da .Sprintf ("\t\u002d\u0020\u004d\u0061xS\u0074r\u0069\u0070\u0065\u0053\u0069z\u0065\u003a\u0020\u0025\u0076\u000a",_faaf .MaxStripeSize ));return _cdb .String ();};func (_bbdg *Header )readSegmentPageAssociation (_gbbb Documenter ,_fdfb _f .StreamReader ,_bbac uint64 ,_dabc ...int )(_gfcd error ){const _cbeg ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074P\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061t\u0069\u006f\u006e";if !_bbdg .PageAssociationFieldSize {_cbbf ,_deef :=_fdfb .ReadBits (8);if _deef !=nil {return _c .Wrap (_deef ,_cbeg ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_bbdg .PageAssociation =int (_cbbf &0xFF);}else {_dgba ,_dgab :=_fdfb .ReadBits (32);if _dgab !=nil {return _c .Wrap (_dgab ,_cbeg ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_bbdg .PageAssociation =int (_dgba &_g .MaxInt32 );};if _bbac ==0{return nil ;};if _bbdg .PageAssociation !=0{_daad ,_ceada :=_gbbb .GetPage (_bbdg .PageAssociation );if _ceada !=nil {return _c .Wrap (_ceada ,_cbeg ,"\u0061s\u0073\u006f\u0063\u0069a\u0074\u0065\u0064\u0020\u0070a\u0067e\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006ed");};var _edefb int ;for _ceca :=uint64 (0);_ceca < _bbac ;_ceca ++{_edefb =_dabc [_ceca ];_bbdg .RTSegments [_ceca ],_ceada =_daad .GetSegment (_edefb );if _ceada !=nil {var _fdgb error ;_bbdg .RTSegments [_ceca ],_fdgb =_gbbb .GetGlobalSegment (_edefb );if _fdgb !=nil {return _c .Wrapf (_ceada ,_cbeg ,"\u0072\u0065\u0066\u0065\u0072\u0065n\u0063\u0065\u0020s\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064\u0020\u0061\u0074\u0020pa\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0072\u0020\u0069\u006e\u0020\u0067\u006c\u006f\u0062\u0061\u006c\u0073",_bbdg .PageAssociation );};};};return nil ;};for _ggecg :=uint64 (0);_ggecg < _bbac ;_ggecg ++{_bbdg .RTSegments [_ggecg ],_gfcd =_gbbb .GetGlobalSegment (_dabc [_ggecg ]);if _gfcd !=nil {return _c .Wrapf (_gfcd ,_cbeg ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u003a\u0020\u0027\u0025d\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064",_dabc [_ggecg ]);};};return nil ;};func (_fgbfc *HalftoneRegion )computeGrayScalePlanes (_gafb []*_gb .Bitmap ,_bfg int )([][]int ,error ){_eceg :=make ([][]int ,_fgbfc .HGridHeight );for _afcg :=0;_afcg < len (_eceg );_afcg ++{_eceg [_afcg ]=make ([]int ,_fgbfc .HGridWidth );};for _bcad :=0;_bcad < int (_fgbfc .HGridHeight );_bcad ++{for _cbd :=0;_cbd < int (_fgbfc .HGridWidth );_cbd +=8{var _ged int ;if _deaeg :=int (_fgbfc .HGridWidth )-_cbd ;_deaeg > 8{_ged =8;}else {_ged =_deaeg ;};_afaf :=_gafb [0].GetByteIndex (_cbd ,_bcad );for _gaed :=0;_gaed < _ged ;_gaed ++{_gbab :=_gaed +_cbd ;_eceg [_bcad ][_gbab ]=0;for _aadg :=0;_aadg < _bfg ;_aadg ++{_efg ,_fcae :=_gafb [_aadg ].GetByte (_afaf );if _fcae !=nil {return nil ,_fcae ;};_bgfd :=_efg >>uint (7-_gbab &7);_ecfb :=_bgfd &1;_egc :=1<<uint (_aadg );_fadf :=int (_ecfb )*_egc ;_eceg [_bcad ][_gbab ]+=_fadf ;};};};};return _eceg ,nil ;};type HalftoneRegion struct{_cecf _f .StreamReader ;_fcge *Header ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;HDefaultPixel int8 ;CombinationOperator _gb .CombinationOperator ;HSkipEnabled bool ;HTemplate byte ;IsMMREncoded bool ;HGridWidth uint32 ;HGridHeight uint32 ;HGridX int32 ;HGridY int32 ;HRegionX uint16 ;HRegionY uint16 ;HalftoneRegionBitmap *_gb .Bitmap ;Patterns []*_gb .Bitmap ;};func (_bbfe *SymbolDictionary )getSymbol (_adbd int )(*_gb .Bitmap ,error ){const _efgb ="\u0067e\u0074\u0053\u0079\u006d\u0062\u006fl";_abebd ,_baac :=_bbfe ._fcee .GetBitmap (_bbfe ._efcb [_adbd ]);if _baac !=nil {return nil ,_c .Wrap (_baac ,_efgb ,"\u0063\u0061n\u0027\u0074\u0020g\u0065\u0074\u0020\u0073\u0079\u006d\u0062\u006f\u006c");};return _abebd ,nil ;};func (_abdb *PageInformationSegment )checkInput ()error {if _abdb .PageBMHeight ==_g .MaxInt32 {if !_abdb .IsStripe {_gbd .Log .Debug ("P\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0053\u0065\u0067me\u006e\u0074\u002e\u0049s\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0073\u0068ou\u006c\u0064 \u0062\u0065\u0020\u0074\u0072\u0075\u0065\u002e");};};return nil ;};type Segmenter interface{Init (_acdb *Header ,_fcda _f .StreamReader )error ;};func (_aagg *PageInformationSegment )Size ()int {return 19};func NewGenericRegion (r _f .StreamReader )*GenericRegion {return &GenericRegion {RegionSegment :NewRegionSegment (r ),_gge :r };};func (_bdfca *TextRegion )computeSymbolCodeLength ()error {if _bdfca .IsHuffmanEncoded {return _bdfca .symbolIDCodeLengths ();};_bdfca ._cecg =int8 (_g .Ceil (_g .Log (float64 (_bdfca .NumberOfSymbols ))/_g .Log (2)));return nil ;};func (_ggda *Header )readReferredToSegmentNumbers (_gbb _f .StreamReader ,_cgdd int )([]int ,error ){const _gfbd ="\u0072\u0065\u0061\u0064R\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053e\u0067m\u0065\u006e\u0074\u004e\u0075\u006d\u0062e\u0072\u0073";_eaed :=make ([]int ,_cgdd );if _cgdd > 0{_ggda .RTSegments =make ([]*Header ,_cgdd );var (_ffee uint64 ;_egfd error ;);for _adff :=0;_adff < _cgdd ;_adff ++{_ffee ,_egfd =_gbb .ReadBits (byte (_ggda .referenceSize ())<<3);if _egfd !=nil {return nil ,_c .Wrapf (_egfd ,_gfbd ,"\u0027\u0025\u0064\u0027 \u0072\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0020\u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u0075\u006db\u0065\u0072",_adff );};_eaed [_adff ]=int (_ffee &_g .MaxInt32 );};};return _eaed ,nil ;};func (_faeg *GenericRegion )overrideAtTemplate3 (_dcfcb ,_feca ,_bdfb ,_dcef ,_cccb int )int {_dcfcb &=0x3EF;if _faeg .GBAtY [0]==0&&_faeg .GBAtX [0]>=-int8 (_cccb ){_dcfcb |=(_dcef >>uint (7-(int8 (_cccb )+_faeg .GBAtX [0]))&0x1)<<4;}else {_dcfcb |=int (_faeg .getPixel (_feca +int (_faeg .GBAtX [0]),_bdfb +int (_faeg .GBAtY [0])))<<4;};return _dcfcb ;};func (_fbaf *HalftoneRegion )GetRegionBitmap ()(*_gb .Bitmap ,error ){if _fbaf .HalftoneRegionBitmap !=nil {return _fbaf .HalftoneRegionBitmap ,nil ;};var _gadc error ;_fbaf .HalftoneRegionBitmap =_gb .New (int (_fbaf .RegionSegment .BitmapWidth ),int (_fbaf .RegionSegment .BitmapHeight ));if _fbaf .Patterns ==nil ||len (_fbaf .Patterns )==0{_fbaf .Patterns ,_gadc =_fbaf .GetPatterns ();if _gadc !=nil {return nil ,_gadc ;};};if _fbaf .HDefaultPixel ==1{_fbaf .HalftoneRegionBitmap .SetDefaultPixel ();};_gffb :=_g .Ceil (_g .Log (float64 (len (_fbaf .Patterns )))/_g .Log (2));_dac :=int (_gffb );var _bggcd [][]int ;_bggcd ,_gadc =_fbaf .grayScaleDecoding (_dac );if _gadc !=nil {return nil ,_gadc ;};if _gadc =_fbaf .renderPattern (_bggcd );_gadc !=nil {return nil ,_gadc ;};return _fbaf .HalftoneRegionBitmap ,nil ;};func (_daef *PatternDictionary )GetDictionary ()([]*_gb .Bitmap ,error ){if _daef .Patterns !=nil {return _daef .Patterns ,nil ;};if !_daef .IsMMREncoded {_daef .setGbAtPixels ();};_cafg :=NewGenericRegion (_daef ._cdbb );_cafg .setParametersMMR (_daef .IsMMREncoded ,_daef .DataOffset ,_daef .DataLength ,uint32 (_daef .HdpHeight ),(_daef .GrayMax +1)*uint32 (_daef .HdpWidth ),_daef .HDTemplate ,false ,false ,_daef .GBAtX ,_daef .GBAtY );_eafb ,_effa :=_cafg .GetRegionBitmap ();if _effa !=nil {return nil ,_effa ;};if _effa =_daef .extractPatterns (_eafb );_effa !=nil {return nil ,_effa ;};return _daef .Patterns ,nil ;};func (_fggc *TextRegion )blit (_fggf *_gb .Bitmap ,_gedc int64 )error {if _fggc .IsTransposed ==0&&(_fggc .ReferenceCorner ==2||_fggc .ReferenceCorner ==3){_fggc ._bcag +=int64 (_fggf .Width -1);}else if _fggc .IsTransposed ==1&&(_fggc .ReferenceCorner ==0||_fggc .ReferenceCorner ==2){_fggc ._bcag +=int64 (_fggf .Height -1);};_fbfgf :=_fggc ._bcag ;if _fggc .IsTransposed ==1{_fbfgf ,_gedc =_gedc ,_fbfgf ;};switch _fggc .ReferenceCorner {case 0:_gedc -=int64 (_fggf .Height -1);case 2:_gedc -=int64 (_fggf .Height -1);_fbfgf -=int64 (_fggf .Width -1);case 3:_fbfgf -=int64 (_fggf .Width -1);};_ccfg :=_gb .Blit (_fggf ,_fggc .RegionBitmap ,int (_fbfgf ),int (_gedc ),_fggc .CombinationOperator );if _ccfg !=nil {return _ccfg ;};if _fggc .IsTransposed ==0&&(_fggc .ReferenceCorner ==0||_fggc .ReferenceCorner ==1){_fggc ._bcag +=int64 (_fggf .Width -1);};if _fggc .IsTransposed ==1&&(_fggc .ReferenceCorner ==1||_fggc .ReferenceCorner ==3){_fggc ._bcag +=int64 (_fggf .Height -1);};return nil ;};func (_acd *GenericRegion )setParameters (_gdb bool ,_gfeg ,_febe int64 ,_fda ,_eedf uint32 ){_acd .IsMMREncoded =_gdb ;_acd .DataOffset =_gfeg ;_acd .DataLength =_febe ;_acd .RegionSegment .BitmapHeight =_fda ;_acd .RegionSegment .BitmapWidth =_eedf ;_acd ._afg =nil ;_acd .Bitmap =nil ;};func (_cfca *TextRegion )decodeRdy ()(int64 ,error ){const _dbef ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064y";if _cfca .IsHuffmanEncoded {if _cfca .SbHuffRDY ==3{if _cfca ._gcae ==nil {var (_fdde int ;_edgb error ;);if _cfca .SbHuffFS ==3{_fdde ++;};if _cfca .SbHuffDS ==3{_fdde ++;};if _cfca .SbHuffDT ==3{_fdde ++;};if _cfca .SbHuffRDWidth ==3{_fdde ++;};if _cfca .SbHuffRDHeight ==3{_fdde ++;};if _cfca .SbHuffRDX ==3{_fdde ++;};_cfca ._gcae ,_edgb =_cfca .getUserTable (_fdde );if _edgb !=nil {return 0,_c .Wrap (_edgb ,_dbef ,"");};};return _cfca ._gcae .Decode (_cfca ._egeae );};_gbgg ,_fabe :=_gea .GetStandardTable (14+int (_cfca .SbHuffRDY ));if _fabe !=nil {return 0,_fabe ;};return _gbgg .Decode (_cfca ._egeae );};_efga ,_fbcg :=_cfca ._dbeg .DecodeInt (_cfca ._agfb );if _fbcg !=nil {return 0,_c .Wrap (_fbcg ,_dbef ,"");};return int64 (_efga ),nil ;};func NewRegionSegment (r _f .StreamReader )*RegionSegment {return &RegionSegment {_ffae :r }};func (_gcce *HalftoneRegion )grayScaleDecoding (_bcdb int )([][]int ,error ){var (_edef []int8 ;_fcfe []int8 ;);if !_gcce .IsMMREncoded {_edef =make ([]int8 ,4);_fcfe =make ([]int8 ,4);if _gcce .HTemplate <=1{_edef [0]=3;}else if _gcce .HTemplate >=2{_edef [0]=2;};_fcfe [0]=-1;_edef [1]=-3;_fcfe [1]=-1;_edef [2]=2;_fcfe [2]=-2;_edef [3]=-2;_fcfe [3]=-2;};_egeg :=make ([]*_gb .Bitmap ,_bcdb );_adcd :=NewGenericRegion (_gcce ._cecf );_adcd .setParametersMMR (_gcce .IsMMREncoded ,_gcce .DataOffset ,_gcce .DataLength ,_gcce .HGridHeight ,_gcce .HGridWidth ,_gcce .HTemplate ,false ,_gcce .HSkipEnabled ,_edef ,_fcfe );_ccde :=_bcdb -1;var _efac error ;_egeg [_ccde ],_efac =_adcd .GetRegionBitmap ();if _efac !=nil {return nil ,_efac ;};for _ccde > 0{_ccde --;_adcd .Bitmap =nil ;_egeg [_ccde ],_efac =_adcd .GetRegionBitmap ();if _efac !=nil {return nil ,_efac ;};if _efac =_gcce .combineGrayscalePlanes (_egeg ,_ccde );_efac !=nil {return nil ,_efac ;};};return _gcce .computeGrayScalePlanes (_egeg ,_bcdb );};type Pager interface{GetSegment (int )(*Header ,error );GetBitmap ()(*_gb .Bitmap ,error );};type EndOfStripe struct{_fbg _f .StreamReader ;_ag int ;};func (_beaa *PageInformationSegment )readDefaultPixelValue ()error {_bbeca ,_cgfe :=_beaa ._cgba .ReadBit ();if _cgfe !=nil {return _cgfe ;};_beaa ._deeg =uint8 (_bbeca &0xf);return nil ;};func (_adde *TableSegment )HtOOB ()int32 {return _adde ._affg };func (_dcfc *GenericRegion )overrideAtTemplate1 (_fbgc ,_cbag ,_cea ,_ecdb ,_fbef int )int {_fbgc &=0x1FF7;if _dcfc .GBAtY [0]==0&&_dcfc .GBAtX [0]>=-int8 (_fbef ){_fbgc |=(_ecdb >>uint (7-(int8 (_fbef )+_dcfc .GBAtX [0]))&0x1)<<3;}else {_fbgc |=int (_dcfc .getPixel (_cbag +int (_dcfc .GBAtX [0]),_cea +int (_dcfc .GBAtY [0])))<<3;};return _fbgc ;};func (_deae *HalftoneRegion )GetPatterns ()([]*_gb .Bitmap ,error ){var (_bbca []*_gb .Bitmap ;_ddcg error ;);for _ ,_cgag :=range _deae ._fcge .RTSegments {var _dgad Segmenter ;_dgad ,_ddcg =_cgag .GetSegmentData ();if _ddcg !=nil {_gbd .Log .Debug ("\u0047e\u0074\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061 \u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025v",_ddcg );return nil ,_ddcg ;};_gacc ,_fbf :=_dgad .(*PatternDictionary );if !_fbf {_ddcg =_da .Errorf ("\u0072e\u006c\u0061t\u0065\u0064\u0020\u0073e\u0067\u006d\u0065n\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0070at\u0074\u0065\u0072n\u0020\u0064i\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u003a \u0025\u0054",_dgad );return nil ,_ddcg ;};var _eee []*_gb .Bitmap ;_eee ,_ddcg =_gacc .GetDictionary ();if _ddcg !=nil {_gbd .Log .Debug ("\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_ddcg );return nil ,_ddcg ;};_bbca =append (_bbca ,_eee ...);};return _bbca ,nil ;};func (_dgae *TextRegion )decodeSymInRefSize ()(int64 ,error ){const _dfbc ="\u0064e\u0063o\u0064\u0065\u0053\u0079\u006dI\u006e\u0052e\u0066\u0053\u0069\u007a\u0065";if _dgae .SbHuffRSize ==0{_cfde ,_edcge :=_gea .GetStandardTable (1);if _edcge !=nil {return 0,_c .Wrap (_edcge ,_dfbc ,"");};return _cfde .Decode (_dgae ._egeae );};if _dgae ._eaff ==nil {var (_gcbg int ;_bcgff error ;);if _dgae .SbHuffFS ==3{_gcbg ++;};if _dgae .SbHuffDS ==3{_gcbg ++;};if _dgae .SbHuffDT ==3{_gcbg ++;};if _dgae .SbHuffRDWidth ==3{_gcbg ++;};if _dgae .SbHuffRDHeight ==3{_gcbg ++;};if _dgae .SbHuffRDX ==3{_gcbg ++;};if _dgae .SbHuffRDY ==3{_gcbg ++;};_dgae ._eaff ,_bcgff =_dgae .getUserTable (_gcbg );if _bcgff !=nil {return 0,_c .Wrap (_bcgff ,_dfbc ,"");};};_cecea ,_bffb :=_dgae ._eaff .Decode (_dgae ._egeae );if _bffb !=nil {return 0,_c .Wrap (_bffb ,_dfbc ,"");};return _cecea ,nil ;};func (_ecdc *GenericRegion )overrideAtTemplate0b (_cedd ,_adbb ,_fbd ,_fceb ,_cff ,_ecdg int )int {if _ecdc .GBAtOverride [0]{_cedd &=0xFFFD;if _ecdc .GBAtY [0]==0&&_ecdc .GBAtX [0]>=-int8 (_cff ){_cedd |=(_fceb >>uint (int8 (_ecdg )-_ecdc .GBAtX [0]&0x1))<<1;}else {_cedd |=int (_ecdc .getPixel (_adbb +int (_ecdc .GBAtX [0]),_fbd +int (_ecdc .GBAtY [0])))<<1;};};if _ecdc .GBAtOverride [1]{_cedd &=0xDFFF;if _ecdc .GBAtY [1]==0&&_ecdc .GBAtX [1]>=-int8 (_cff ){_cedd |=(_fceb >>uint (int8 (_ecdg )-_ecdc .GBAtX [1]&0x1))<<13;}else {_cedd |=int (_ecdc .getPixel (_adbb +int (_ecdc .GBAtX [1]),_fbd +int (_ecdc .GBAtY [1])))<<13;};};if _ecdc .GBAtOverride [2]{_cedd &=0xFDFF;if _ecdc .GBAtY [2]==0&&_ecdc .GBAtX [2]>=-int8 (_cff ){_cedd |=(_fceb >>uint (int8 (_ecdg )-_ecdc .GBAtX [2]&0x1))<<9;}else {_cedd |=int (_ecdc .getPixel (_adbb +int (_ecdc .GBAtX [2]),_fbd +int (_ecdc .GBAtY [2])))<<9;};};if _ecdc .GBAtOverride [3]{_cedd &=0xBFFF;if _ecdc .GBAtY [3]==0&&_ecdc .GBAtX [3]>=-int8 (_cff ){_cedd |=(_fceb >>uint (int8 (_ecdg )-_ecdc .GBAtX [3]&0x1))<<14;}else {_cedd |=int (_ecdc .getPixel (_adbb +int (_ecdc .GBAtX [3]),_fbd +int (_ecdc .GBAtY [3])))<<14;};};if _ecdc .GBAtOverride [4]{_cedd &=0xEFFF;if _ecdc .GBAtY [4]==0&&_ecdc .GBAtX [4]>=-int8 (_cff ){_cedd |=(_fceb >>uint (int8 (_ecdg )-_ecdc .GBAtX [4]&0x1))<<12;}else {_cedd |=int (_ecdc .getPixel (_adbb +int (_ecdc .GBAtX [4]),_fbd +int (_ecdc .GBAtY [4])))<<12;};};if _ecdc .GBAtOverride [5]{_cedd &=0xFFDF;if _ecdc .GBAtY [5]==0&&_ecdc .GBAtX [5]>=-int8 (_cff ){_cedd |=(_fceb >>uint (int8 (_ecdg )-_ecdc .GBAtX [5]&0x1))<<5;}else {_cedd |=int (_ecdc .getPixel (_adbb +int (_ecdc .GBAtX [5]),_fbd +int (_ecdc .GBAtY [5])))<<5;};};if _ecdc .GBAtOverride [6]{_cedd &=0xFFFB;if _ecdc .GBAtY [6]==0&&_ecdc .GBAtX [6]>=-int8 (_cff ){_cedd |=(_fceb >>uint (int8 (_ecdg )-_ecdc .GBAtX [6]&0x1))<<2;}else {_cedd |=int (_ecdc .getPixel (_adbb +int (_ecdc .GBAtX [6]),_fbd +int (_ecdc .GBAtY [6])))<<2;};};if _ecdc .GBAtOverride [7]{_cedd &=0xFFF7;if _ecdc .GBAtY [7]==0&&_ecdc .GBAtX [7]>=-int8 (_cff ){_cedd |=(_fceb >>uint (int8 (_ecdg )-_ecdc .GBAtX [7]&0x1))<<3;}else {_cedd |=int (_ecdc .getPixel (_adbb +int (_ecdc .GBAtX [7]),_fbd +int (_ecdc .GBAtY [7])))<<3;};};if _ecdc .GBAtOverride [8]{_cedd &=0xF7FF;if _ecdc .GBAtY [8]==0&&_ecdc .GBAtX [8]>=-int8 (_cff ){_cedd |=(_fceb >>uint (int8 (_ecdg )-_ecdc .GBAtX [8]&0x1))<<11;}else {_cedd |=int (_ecdc .getPixel (_adbb +int (_ecdc .GBAtX [8]),_fbd +int (_ecdc .GBAtY [8])))<<11;};};if _ecdc .GBAtOverride [9]{_cedd &=0xFFEF;if _ecdc .GBAtY [9]==0&&_ecdc .GBAtX [9]>=-int8 (_cff ){_cedd |=(_fceb >>uint (int8 (_ecdg )-_ecdc .GBAtX [9]&0x1))<<4;}else {_cedd |=int (_ecdc .getPixel (_adbb +int (_ecdc .GBAtX [9]),_fbd +int (_ecdc .GBAtY [9])))<<4;};};if _ecdc .GBAtOverride [10]{_cedd &=0x7FFF;if _ecdc .GBAtY [10]==0&&_ecdc .GBAtX [10]>=-int8 (_cff ){_cedd |=(_fceb >>uint (int8 (_ecdg )-_ecdc .GBAtX [10]&0x1))<<15;}else {_cedd |=int (_ecdc .getPixel (_adbb +int (_ecdc .GBAtX [10]),_fbd +int (_ecdc .GBAtY [10])))<<15;};};if _ecdc .GBAtOverride [11]{_cedd &=0xFDFF;if _ecdc .GBAtY [11]==0&&_ecdc .GBAtX [11]>=-int8 (_cff ){_cedd |=(_fceb >>uint (int8 (_ecdg )-_ecdc .GBAtX [11]&0x1))<<10;}else {_cedd |=int (_ecdc .getPixel (_adbb +int (_ecdc .GBAtX [11]),_fbd +int (_ecdc .GBAtY [11])))<<10;};};return _cedd ;};func (_aedd *HalftoneRegion )Init (hd *Header ,r _f .StreamReader )error {_aedd ._cecf =r ;_aedd ._fcge =hd ;_aedd .RegionSegment =NewRegionSegment (r );return _aedd .parseHeader ();};func (_ecb *GenericRefinementRegion )decodeOptimized (_ca ,_cc ,_cgd ,_fd ,_aa ,_gbe ,_aab int )error {var (_cd error ;_eae int ;_ffe int ;);_fdd :=_ca -int (_ecb .ReferenceDY );if _bd :=int (-_ecb .ReferenceDX );_bd > 0{_eae =_bd ;};_cf :=_ecb .ReferenceBitmap .GetByteIndex (_eae ,_fdd );if _ecb .ReferenceDX > 0{_ffe =int (_ecb .ReferenceDX );};_ebf :=_ecb .RegionBitmap .GetByteIndex (_ffe ,_ca );switch _ecb .TemplateID {case 0:_cd =_ecb .decodeTemplate (_ca ,_cc ,_cgd ,_fd ,_aa ,_gbe ,_aab ,_ebf ,_fdd ,_cf ,_ecb ._fga );case 1:_cd =_ecb .decodeTemplate (_ca ,_cc ,_cgd ,_fd ,_aa ,_gbe ,_aab ,_ebf ,_fdd ,_cf ,_ecb ._daf );};return _cd ;};func (_dcd *Header )writeSegmentPageAssociation (_egdc _f .BinaryWriter )(_egag int ,_fbfg error ){const _bgc ="w\u0072\u0069\u0074\u0065\u0053\u0065g\u006d\u0065\u006e\u0074\u0050\u0061\u0067\u0065\u0041s\u0073\u006f\u0063i\u0061t\u0069\u006f\u006e";if _dcd .pageSize ()!=4{if _fbfg =_egdc .WriteByte (byte (_dcd .PageAssociation ));_fbfg !=nil {return 0,_c .Wrap (_fbfg ,_bgc ,"\u0070\u0061\u0067\u0065\u0053\u0069\u007a\u0065\u0020\u0021\u003d\u0020\u0034");};return 1,nil ;};_affce :=make ([]byte ,4);_e .BigEndian .PutUint32 (_affce ,uint32 (_dcd .PageAssociation ));if _egag ,_fbfg =_egdc .Write (_affce );_fbfg !=nil {return 0,_c .Wrap (_fbfg ,_bgc ,"\u0034 \u0062y\u0074\u0065\u0020\u0070\u0061g\u0065\u0020n\u0075\u006d\u0062\u0065\u0072");};return _egag ,nil ;};func (_eeb *template0 )setIndex (_bcb *_de .DecoderStats ){_bcb .SetIndex (0x100)};func (_dbfb *Header )writeReferredToCount (_dggf _f .BinaryWriter )(_beeg int ,_bbda error ){const _cgbc ="w\u0072i\u0074\u0065\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0043ou\u006e\u0074";_dbfb .RTSNumbers =make ([]int ,len (_dbfb .RTSegments ));for _bedd ,_eadc :=range _dbfb .RTSegments {_dbfb .RTSNumbers [_bedd ]=int (_eadc .SegmentNumber );};if len (_dbfb .RTSNumbers )<=4{var _ecad byte ;if len (_dbfb .RetainBits )>=1{_ecad =_dbfb .RetainBits [0];};_ecad |=byte (len (_dbfb .RTSNumbers ))<<5;if _bbda =_dggf .WriteByte (_ecad );_bbda !=nil {return 0,_c .Wrap (_bbda ,_cgbc ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return 1,nil ;};_edaa :=uint32 (len (_dbfb .RTSNumbers ));_bccg :=make ([]byte ,4+_gecg .Ceil (len (_dbfb .RTSNumbers )+1,8));_edaa |=0x7<<29;_e .BigEndian .PutUint32 (_bccg ,_edaa );copy (_bccg [1:],_dbfb .RetainBits );_beeg ,_bbda =_dggf .Write (_bccg );if _bbda !=nil {return 0,_c .Wrap (_bbda ,_cgbc ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return _beeg ,nil ;};var _ SegmentEncoder =&RegionSegment {};func (_gcda *Header )readSegmentDataLength (_ddac _f .StreamReader )(_ebfb error ){_gcda .SegmentDataLength ,_ebfb =_ddac .ReadBits (32);if _ebfb !=nil {return _ebfb ;};_gcda .SegmentDataLength &=_g .MaxInt32 ;return nil ;};func (_gaef *Header )readHeaderFlags ()error {const _dbcb ="\u0072e\u0061d\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006c\u0061\u0067\u0073";_becd ,_bggf :=_gaef .Reader .ReadBit ();if _bggf !=nil {return _c .Wrap (_bggf ,_dbcb ,"r\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067");};if _becd !=0{_gaef .RetainFlag =true ;};_becd ,_bggf =_gaef .Reader .ReadBit ();if _bggf !=nil {return _c .Wrap (_bggf ,_dbcb ,"\u0070\u0061g\u0065\u0020\u0061s\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e");};if _becd !=0{_gaef .PageAssociationFieldSize =true ;};_fgab ,_bggf :=_gaef .Reader .ReadBits (6);if _bggf !=nil {return _c .Wrap (_bggf ,_dbcb ,"\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065");};_gaef .Type =Type (int (_fgab ));return nil ;};func (_ecage *SymbolDictionary )readAtPixels (_afcdg int )error {_ecage .SdATX =make ([]int8 ,_afcdg );_ecage .SdATY =make ([]int8 ,_afcdg );var (_dead byte ;_gcfg error ;);for _gce :=0;_gce < _afcdg ;_gce ++{_dead ,_gcfg =_ecage ._dccg .ReadByte ();if _gcfg !=nil {return _gcfg ;};_ecage .SdATX [_gce ]=int8 (_dead );_dead ,_gcfg =_ecage ._dccg .ReadByte ();if _gcfg !=nil {return _gcfg ;};_ecage .SdATY [_gce ]=int8 (_dead );};return nil ;};type SymbolDictionary struct{_dccg _f .StreamReader ;SdrTemplate int8 ;SdTemplate int8 ;_ccefc bool ;_ffcd bool ;SdHuffAggInstanceSelection bool ;SdHuffBMSizeSelection int8 ;SdHuffDecodeWidthSelection int8 ;SdHuffDecodeHeightSelection int8 ;UseRefinementAggregation bool ;IsHuffmanEncoded bool ;SdATX []int8 ;SdATY []int8 ;SdrATX []int8 ;SdrATY []int8 ;NumberOfExportedSymbols uint32 ;NumberOfNewSymbols uint32 ;Header *Header ;_aeac uint32 ;_cbdg []*_gb .Bitmap ;_aaag uint32 ;_fgae []*_gb .Bitmap ;_aec _gea .Tabler ;_agbe _gea .Tabler ;_beca _gea .Tabler ;_cfef _gea .Tabler ;_cfff []*_gb .Bitmap ;_bbee []*_gb .Bitmap ;_fffa *_de .Decoder ;_agg *TextRegion ;_edecc *GenericRegion ;_efag *GenericRefinementRegion ;_bebgc *_de .DecoderStats ;_gcf *_de .DecoderStats ;_gaaf *_de .DecoderStats ;_bggg *_de .DecoderStats ;_edc *_de .DecoderStats ;_fecaf *_de .DecoderStats ;_afcfe *_de .DecoderStats ;_cacg *_de .DecoderStats ;_fggg *_de .DecoderStats ;_dccff int8 ;_fcee *_gb .Bitmaps ;_efcb []int ;_cdgef map[int ]int ;_cfg bool ;};func (_afcef *PageInformationSegment )DefaultPixelValue ()uint8 {return _afcef ._deeg };func (_dfff *TextRegion )getUserTable (_ebgg int )(_gea .Tabler ,error ){const _cecab ="\u0067\u0065\u0074U\u0073\u0065\u0072\u0054\u0061\u0062\u006c\u0065";var _bfgbg int ;for _ ,_ebeg :=range _dfff .Header .RTSegments {if _ebeg .Type ==53{if _bfgbg ==_ebgg {_dgfe ,_gcadc :=_ebeg .GetSegmentData ();if _gcadc !=nil {return nil ,_gcadc ;};_dcce ,_cbea :=_dgfe .(*TableSegment );if !_cbea {_gbd .Log .Debug (_da .Sprintf ("\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079p\u0065\u00205\u0033\u0020\u002d\u0020\u0061\u006ed\u0020in\u0064\u0065\u0078\u003a\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_ebeg .SegmentNumber ));return nil ,_c .Error (_cecab ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079\u0070e\u0020\u0035\u0033\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u002a\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074");};return _gea .NewEncodedTable (_dcce );};_bfgbg ++;};};return nil ,nil ;};func (_efge *Header )subInputReader ()(_f .StreamReader ,error ){return _f .NewSubstreamReader (_efge .Reader ,_efge .SegmentDataStartOffset ,_efge .SegmentDataLength );};func (_ffeb *PageInformationSegment )Init (h *Header ,r _f .StreamReader )(_fafac error ){_ffeb ._cgba =r ;if _fafac =_ffeb .parseHeader ();_fafac !=nil {return _c .Wrap (_fafac ,"P\u0061\u0067\u0065\u0049\u006e\u0066o\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065g\u006d\u0065\u006et\u002eI\u006e\u0069\u0074","");};return nil ;};func (_cdfa *GenericRegion )updateOverrideFlags ()error {const _fcad ="\u0075\u0070\u0064\u0061te\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _cdfa .GBAtX ==nil ||_cdfa .GBAtY ==nil {return nil ;};if len (_cdfa .GBAtX )!=len (_cdfa .GBAtY ){return _c .Errorf (_fcad ,"i\u006eco\u0073i\u0073t\u0065\u006e\u0074\u0020\u0041T\u0020\u0070\u0069x\u0065\u006c\u002e\u0020\u0041m\u006f\u0075\u006et\u0020\u006f\u0066\u0020\u0027\u0078\u0027\u0020\u0070\u0069\u0078e\u006c\u0073\u003a %d\u002c\u0020\u0041\u006d\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0027\u0079\u0027\u0020\u0070\u0069\u0078e\u006cs\u003a\u0020\u0025\u0064",len (_cdfa .GBAtX ),len (_cdfa .GBAtY ));};_cdfa .GBAtOverride =make ([]bool ,len (_cdfa .GBAtX ));switch _cdfa .GBTemplate {case 0:if !_cdfa .UseExtTemplates {if _cdfa .GBAtX [0]!=3||_cdfa .GBAtY [0]!=-1{_cdfa .setOverrideFlag (0);};if _cdfa .GBAtX [1]!=-3||_cdfa .GBAtY [1]!=-1{_cdfa .setOverrideFlag (1);};if _cdfa .GBAtX [2]!=2||_cdfa .GBAtY [2]!=-2{_cdfa .setOverrideFlag (2);};if _cdfa .GBAtX [3]!=-2||_cdfa .GBAtY [3]!=-2{_cdfa .setOverrideFlag (3);};}else {if _cdfa .GBAtX [0]!=-2||_cdfa .GBAtY [0]!=0{_cdfa .setOverrideFlag (0);};if _cdfa .GBAtX [1]!=0||_cdfa .GBAtY [1]!=-2{_cdfa .setOverrideFlag (1);};if _cdfa .GBAtX [2]!=-2||_cdfa .GBAtY [2]!=-1{_cdfa .setOverrideFlag (2);};if _cdfa .GBAtX [3]!=-1||_cdfa .GBAtY [3]!=-2{_cdfa .setOverrideFlag (3);};if _cdfa .GBAtX [4]!=1||_cdfa .GBAtY [4]!=-2{_cdfa .setOverrideFlag (4);};if _cdfa .GBAtX [5]!=2||_cdfa .GBAtY [5]!=-1{_cdfa .setOverrideFlag (5);};if _cdfa .GBAtX [6]!=-3||_cdfa .GBAtY [6]!=0{_cdfa .setOverrideFlag (6);};if _cdfa .GBAtX [7]!=-4||_cdfa .GBAtY [7]!=0{_cdfa .setOverrideFlag (7);};if _cdfa .GBAtX [8]!=2||_cdfa .GBAtY [8]!=-2{_cdfa .setOverrideFlag (8);};if _cdfa .GBAtX [9]!=3||_cdfa .GBAtY [9]!=-1{_cdfa .setOverrideFlag (9);};if _cdfa .GBAtX [10]!=-2||_cdfa .GBAtY [10]!=-2{_cdfa .setOverrideFlag (10);};if _cdfa .GBAtX [11]!=-3||_cdfa .GBAtY [11]!=-1{_cdfa .setOverrideFlag (11);};};case 1:if _cdfa .GBAtX [0]!=3||_cdfa .GBAtY [0]!=-1{_cdfa .setOverrideFlag (0);};case 2:if _cdfa .GBAtX [0]!=2||_cdfa .GBAtY [0]!=-1{_cdfa .setOverrideFlag (0);};case 3:if _cdfa .GBAtX [0]!=2||_cdfa .GBAtY [0]!=-1{_cdfa .setOverrideFlag (0);};};return nil ;};func (_cbeb *SymbolDictionary )Encode (w _f .BinaryWriter )(_abb int ,_dcbg error ){const _cfba ="\u0053\u0079\u006dbo\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0045\u006e\u0063\u006f\u0064\u0065";if _cbeb ==nil {return 0,_c .Error (_cfba ,"\u0073\u0079m\u0062\u006f\u006c\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066in\u0065\u0064");};if _abb ,_dcbg =_cbeb .encodeFlags (w );_dcbg !=nil {return _abb ,_c .Wrap (_dcbg ,_cfba ,"");};_dcad ,_dcbg :=_cbeb .encodeATFlags (w );if _dcbg !=nil {return _abb ,_c .Wrap (_dcbg ,_cfba ,"");};_abb +=_dcad ;if _dcad ,_dcbg =_cbeb .encodeRefinementATFlags (w );_dcbg !=nil {return _abb ,_c .Wrap (_dcbg ,_cfba ,"");};_abb +=_dcad ;if _dcad ,_dcbg =_cbeb .encodeNumSyms (w );_dcbg !=nil {return _abb ,_c .Wrap (_dcbg ,_cfba ,"");};_abb +=_dcad ;if _dcad ,_dcbg =_cbeb .encodeSymbols (w );_dcbg !=nil {return _abb ,_c .Wrap (_dcbg ,_cfba ,"");};_abb +=_dcad ;return _abb ,nil ;};func (_acgf *SymbolDictionary )huffDecodeBmSize ()(int64 ,error ){if _acgf ._beca ==nil {var (_baefa int ;_fdfg error ;);if _acgf .SdHuffDecodeHeightSelection ==3{_baefa ++;};if _acgf .SdHuffDecodeWidthSelection ==3{_baefa ++;};_acgf ._beca ,_fdfg =_acgf .getUserTable (_baefa );if _fdfg !=nil {return 0,_fdfg ;};};return _acgf ._beca .Decode (_acgf ._dccg );};func (_ecff *TableSegment )HtPS ()int32 {return _ecff ._fcbb };func (_bfag *SymbolDictionary )decodeDirectlyThroughGenericRegion (_edfa ,_bdaaa uint32 )error {if _bfag ._edecc ==nil {_bfag ._edecc =NewGenericRegion (_bfag ._dccg );};_bfag ._edecc .setParametersWithAt (false ,byte (_bfag .SdTemplate ),false ,false ,_bfag .SdATX ,_bfag .SdATY ,_edfa ,_bdaaa ,_bfag ._bebgc ,_bfag ._fffa );return _bfag .addSymbol (_bfag ._edecc );};func (_dadb *TableSegment )Init (h *Header ,r _f .StreamReader )error {_dadb ._caea =r ;return _dadb .parseHeader ();};func (_fcdeb *TextRegion )encodeFlags (_fggb _f .BinaryWriter )(_edcc int ,_gdbgc error ){const _efbb ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _gdbgc =_fggb .WriteBit (int (_fcdeb .SbrTemplate ));_gdbgc !=nil {return _edcc ,_c .Wrap (_gdbgc ,_efbb ,"s\u0062\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};if _ ,_gdbgc =_fggb .WriteBits (uint64 (_fcdeb .SbDsOffset ),5);_gdbgc !=nil {return _edcc ,_c .Wrap (_gdbgc ,_efbb ,"\u0073\u0062\u0044\u0073\u004f\u0066\u0066\u0073\u0065\u0074");};if _gdbgc =_fggb .WriteBit (int (_fcdeb .DefaultPixel ));_gdbgc !=nil {return _edcc ,_c .Wrap (_gdbgc ,_efbb ,"\u0044\u0065\u0066a\u0075\u006c\u0074\u0050\u0069\u0078\u0065\u006c");};if _ ,_gdbgc =_fggb .WriteBits (uint64 (_fcdeb .CombinationOperator ),2);_gdbgc !=nil {return _edcc ,_c .Wrap (_gdbgc ,_efbb ,"\u0043\u006f\u006d\u0062in\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072");};if _gdbgc =_fggb .WriteBit (int (_fcdeb .IsTransposed ));_gdbgc !=nil {return _edcc ,_c .Wrap (_gdbgc ,_efbb ,"\u0069\u0073\u0020\u0074\u0072\u0061\u006e\u0073\u0070\u006f\u0073\u0065\u0064");};if _ ,_gdbgc =_fggb .WriteBits (uint64 (_fcdeb .ReferenceCorner ),2);_gdbgc !=nil {return _edcc ,_c .Wrap (_gdbgc ,_efbb ,"\u0072\u0065f\u0065\u0072\u0065n\u0063\u0065\u0020\u0063\u006f\u0072\u006e\u0065\u0072");};if _ ,_gdbgc =_fggb .WriteBits (uint64 (_fcdeb .LogSBStrips ),2);_gdbgc !=nil {return _edcc ,_c .Wrap (_gdbgc ,_efbb ,"L\u006f\u0067\u0053\u0042\u0053\u0074\u0072\u0069\u0070\u0073");};var _caeae int ;if _fcdeb .UseRefinement {_caeae =1;};if _gdbgc =_fggb .WriteBit (_caeae );_gdbgc !=nil {return _edcc ,_c .Wrap (_gdbgc ,_efbb ,"\u0075\u0073\u0065\u0020\u0072\u0065\u0066\u0069\u006ee\u006d\u0065\u006e\u0074");};_caeae =0;if _fcdeb .IsHuffmanEncoded {_caeae =1;};if _gdbgc =_fggb .WriteBit (_caeae );_gdbgc !=nil {return _edcc ,_c .Wrap (_gdbgc ,_efbb ,"u\u0073\u0065\u0020\u0068\u0075\u0066\u0066\u006d\u0061\u006e");};_edcc =2;return _edcc ,nil ;};func (_dfdgf *TextRegion )decodeDfs ()(int64 ,error ){if _dfdgf .IsHuffmanEncoded {if _dfdgf .SbHuffFS ==3{if _dfdgf ._afbe ==nil {var _cebb error ;_dfdgf ._afbe ,_cebb =_dfdgf .getUserTable (0);if _cebb !=nil {return 0,_cebb ;};};return _dfdgf ._afbe .Decode (_dfdgf ._egeae );};_eaae ,_adab :=_gea .GetStandardTable (6+int (_dfdgf .SbHuffFS ));if _adab !=nil {return 0,_adab ;};return _eaae .Decode (_dfdgf ._egeae );};_fece ,_bedb :=_dfdgf ._dbeg .DecodeInt (_dfdgf ._daggf );if _bedb !=nil {return 0,_bedb ;};return int64 (_fece ),nil ;};func (_afab *GenericRegion )readGBAtPixels (_cbca int )error {const _efb ="\u0072\u0065\u0061\u0064\u0047\u0042\u0041\u0074\u0050i\u0078\u0065\u006c\u0073";_afab .GBAtX =make ([]int8 ,_cbca );_afab .GBAtY =make ([]int8 ,_cbca );for _dfed :=0;_dfed < _cbca ;_dfed ++{_gdfe ,_faab :=_afab ._gge .ReadByte ();if _faab !=nil {return _c .Wrapf (_faab ,_efb ,"\u0058\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_dfed );};_afab .GBAtX [_dfed ]=int8 (_gdfe );_gdfe ,_faab =_afab ._gge .ReadByte ();if _faab !=nil {return _c .Wrapf (_faab ,_efb ,"\u0059\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_dfed );};_afab .GBAtY [_dfed ]=int8 (_gdfe );};return nil ;};func (_bbf *RegionSegment )parseHeader ()error {const _edbd ="p\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_gbd .Log .Trace ("\u005b\u0052\u0045\u0047I\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002dH\u0045A\u0044\u0045\u0052\u005d\u0020\u0042\u0065g\u0069\u006e");defer func (){_gbd .Log .Trace ("\u005b\u0052\u0045G\u0049\u004f\u004e\u005d[\u0050\u0041\u0052\u0053\u0045\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");}();_ecgb ,_cddb :=_bbf ._ffae .ReadBits (32);if _cddb !=nil {return _c .Wrap (_cddb ,_edbd ,"\u0077\u0069\u0064t\u0068");};_bbf .BitmapWidth =uint32 (_ecgb &_g .MaxUint32 );_ecgb ,_cddb =_bbf ._ffae .ReadBits (32);if _cddb !=nil {return _c .Wrap (_cddb ,_edbd ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_bbf .BitmapHeight =uint32 (_ecgb &_g .MaxUint32 );_ecgb ,_cddb =_bbf ._ffae .ReadBits (32);if _cddb !=nil {return _c .Wrap (_cddb ,_edbd ,"\u0078\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_bbf .XLocation =uint32 (_ecgb &_g .MaxUint32 );_ecgb ,_cddb =_bbf ._ffae .ReadBits (32);if _cddb !=nil {return _c .Wrap (_cddb ,_edbd ,"\u0079\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_bbf .YLocation =uint32 (_ecgb &_g .MaxUint32 );if _ ,_cddb =_bbf ._ffae .ReadBits (5);_cddb !=nil {return _c .Wrap (_cddb ,_edbd ,"\u0064i\u0072\u0079\u0020\u0072\u0065\u0061d");};if _cddb =_bbf .readCombinationOperator ();_cddb !=nil {return _c .Wrap (_cddb ,_edbd ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};return nil ;};func (_afbd *SymbolDictionary )encodeRefinementATFlags (_bdcc _f .BinaryWriter )(_geaff int ,_ccg error ){const _gdbe ="\u0065\u006e\u0063od\u0065\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0041\u0054\u0046\u006c\u0061\u0067\u0073";if !_afbd .UseRefinementAggregation ||_afbd .SdrTemplate !=0{return 0,nil ;};for _ddfc :=0;_ddfc < 2;_ddfc ++{if _ccg =_bdcc .WriteByte (byte (_afbd .SdrATX [_ddfc ]));_ccg !=nil {return _geaff ,_c .Wrapf (_ccg ,_gdbe ,"\u0053\u0064\u0072\u0041\u0054\u0058\u005b\u0025\u0064\u005d",_ddfc );};_geaff ++;if _ccg =_bdcc .WriteByte (byte (_afbd .SdrATY [_ddfc ]));_ccg !=nil {return _geaff ,_c .Wrapf (_ccg ,_gdbe ,"\u0053\u0064\u0072\u0041\u0054\u0059\u005b\u0025\u0064\u005d",_ddfc );};_geaff ++;};return _geaff ,nil ;};const (ORandom OrganizationType =iota ;OSequential ;);func (_edd *PatternDictionary )Init (h *Header ,r _f .StreamReader )error {_edd ._cdbb =r ;return _edd .parseHeader ();};type PatternDictionary struct{_cdbb _f .StreamReader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;GBAtX []int8 ;GBAtY []int8 ;IsMMREncoded bool ;HDTemplate byte ;HdpWidth byte ;HdpHeight byte ;Patterns []*_gb .Bitmap ;GrayMax uint32 ;};func (_egfgc *HalftoneRegion )computeSegmentDataStructure ()error {_egfgc .DataOffset =_egfgc ._cecf .StreamPosition ();_egfgc .DataHeaderLength =_egfgc .DataOffset -_egfgc .DataHeaderOffset ;_egfgc .DataLength =int64 (_egfgc ._cecf .Length ())-_egfgc .DataHeaderLength ;return nil ;};func (_cdge *PageInformationSegment )readMaxStripeSize ()error {_fee ,_begg :=_cdge ._cgba .ReadBits (15);if _begg !=nil {return _begg ;};_cdge .MaxStripeSize =uint16 (_fee &_g .MaxUint16 );return nil ;};func (_egbbc *TextRegion )decodeID ()(int64 ,error ){if _egbbc .IsHuffmanEncoded {if _egbbc ._acb ==nil {_gffg ,_feee :=_egbbc ._egeae .ReadBits (byte (_egbbc ._cecg ));return int64 (_gffg ),_feee ;};return _egbbc ._acb .Decode (_egbbc ._egeae );};return _egbbc ._dbeg .DecodeIAID (uint64 (_egbbc ._cecg ),_egbbc ._eagc );};func (_gggf *SymbolDictionary )decodeAggregate (_acga ,_egfc uint32 )error {var (_bgcb int64 ;_gadd error ;);if _gggf .IsHuffmanEncoded {_bgcb ,_gadd =_gggf .huffDecodeRefAggNInst ();if _gadd !=nil {return _gadd ;};}else {_egbe ,_cdfga :=_gggf ._fffa .DecodeInt (_gggf ._bggg );if _cdfga !=nil {return _cdfga ;};_bgcb =int64 (_egbe );};if _bgcb > 1{return _gggf .decodeThroughTextRegion (_acga ,_egfc ,uint32 (_bgcb ));}else if _bgcb ==1{return _gggf .decodeRefinedSymbol (_acga ,_egfc );};return nil ;};func (_cdda *SymbolDictionary )encodeFlags (_abba _f .BinaryWriter )(_debc int ,_acg error ){const _febg ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _acg =_abba .SkipBits (3);_acg !=nil {return 0,_c .Wrap (_acg ,_febg ,"\u0065\u006d\u0070\u0074\u0079\u0020\u0062\u0069\u0074\u0073");};var _ecdd int ;if _cdda .SdrTemplate > 0{_ecdd =1;};if _acg =_abba .WriteBit (_ecdd );_acg !=nil {return _debc ,_c .Wrap (_acg ,_febg ,"s\u0064\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_ecdd =0;if _cdda .SdTemplate > 1{_ecdd =1;};if _acg =_abba .WriteBit (_ecdd );_acg !=nil {return _debc ,_c .Wrap (_acg ,_febg ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_ecdd =0;if _cdda .SdTemplate ==1||_cdda .SdTemplate ==3{_ecdd =1;};if _acg =_abba .WriteBit (_ecdd );_acg !=nil {return _debc ,_c .Wrap (_acg ,_febg ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_ecdd =0;if _cdda ._ccefc {_ecdd =1;};if _acg =_abba .WriteBit (_ecdd );_acg !=nil {return _debc ,_c .Wrap (_acg ,_febg ,"\u0063\u006f\u0064in\u0067\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0065\u0064");};_ecdd =0;if _cdda ._ffcd {_ecdd =1;};if _acg =_abba .WriteBit (_ecdd );_acg !=nil {return _debc ,_c .Wrap (_acg ,_febg ,"\u0063\u006f\u0064\u0069ng\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0075\u0073\u0065\u0064");};_ecdd =0;if _cdda .SdHuffAggInstanceSelection {_ecdd =1;};if _acg =_abba .WriteBit (_ecdd );_acg !=nil {return _debc ,_c .Wrap (_acg ,_febg ,"\u0073\u0064\u0048\u0075\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074");};_ecdd =int (_cdda .SdHuffBMSizeSelection );if _acg =_abba .WriteBit (_ecdd );_acg !=nil {return _debc ,_c .Wrap (_acg ,_febg ,"\u0073\u0064\u0048u\u0066\u0066\u0042\u006d\u0053\u0069\u007a\u0065");};_ecdd =0;if _cdda .SdHuffDecodeWidthSelection > 1{_ecdd =1;};if _acg =_abba .WriteBit (_ecdd );_acg !=nil {return _debc ,_c .Wrap (_acg ,_febg ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_ecdd =0;switch _cdda .SdHuffDecodeWidthSelection {case 1,3:_ecdd =1;};if _acg =_abba .WriteBit (_ecdd );_acg !=nil {return _debc ,_c .Wrap (_acg ,_febg ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_ecdd =0;if _cdda .SdHuffDecodeHeightSelection > 1{_ecdd =1;};if _acg =_abba .WriteBit (_ecdd );_acg !=nil {return _debc ,_c .Wrap (_acg ,_febg ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_ecdd =0;switch _cdda .SdHuffDecodeHeightSelection {case 1,3:_ecdd =1;};if _acg =_abba .WriteBit (_ecdd );_acg !=nil {return _debc ,_c .Wrap (_acg ,_febg ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_ecdd =0;if _cdda .UseRefinementAggregation {_ecdd =1;};if _acg =_abba .WriteBit (_ecdd );_acg !=nil {return _debc ,_c .Wrap (_acg ,_febg ,"\u0073\u0064\u0052\u0065\u0066\u0041\u0067\u0067");};_ecdd =0;if _cdda .IsHuffmanEncoded {_ecdd =1;};if _acg =_abba .WriteBit (_ecdd );_acg !=nil {return _debc ,_c .Wrap (_acg ,_febg ,"\u0073\u0064\u0048\u0075\u0066\u0066");};return 2,nil ;};func (_afdga *SymbolDictionary )readRefinementAtPixels (_decd int )error {_afdga .SdrATX =make ([]int8 ,_decd );_afdga .SdrATY =make ([]int8 ,_decd );var (_cdba byte ;_dfedf error ;);for _gbgec :=0;_gbgec < _decd ;_gbgec ++{_cdba ,_dfedf =_afdga ._dccg .ReadByte ();if _dfedf !=nil {return _dfedf ;};_afdga .SdrATX [_gbgec ]=int8 (_cdba );_cdba ,_dfedf =_afdga ._dccg .ReadByte ();if _dfedf !=nil {return _dfedf ;};_afdga .SdrATY [_gbgec ]=int8 (_cdba );};return nil ;};func (_ead *GenericRefinementRegion )getPixel (_ebe *_gb .Bitmap ,_gdd ,_dbad int )int {if _gdd < 0||_gdd >=_ebe .Width {return 0;};if _dbad < 0||_dbad >=_ebe .Height {return 0;};if _ebe .GetPixel (_gdd ,_dbad ){return 1;};return 0;};func (_dgfa *TextRegion )GetRegionInfo ()*RegionSegment {return _dgfa .RegionInfo };func (_acffe *TextRegion )decodeRdx ()(int64 ,error ){const _ddfga ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064x";if _acffe .IsHuffmanEncoded {if _acffe .SbHuffRDX ==3{if _acffe ._ecba ==nil {var (_fgdb int ;_eaaa error ;);if _acffe .SbHuffFS ==3{_fgdb ++;};if _acffe .SbHuffDS ==3{_fgdb ++;};if _acffe .SbHuffDT ==3{_fgdb ++;};if _acffe .SbHuffRDWidth ==3{_fgdb ++;};if _acffe .SbHuffRDHeight ==3{_fgdb ++;};_acffe ._ecba ,_eaaa =_acffe .getUserTable (_fgdb );if _eaaa !=nil {return 0,_c .Wrap (_eaaa ,_ddfga ,"");};};return _acffe ._ecba .Decode (_acffe ._egeae );};_gcgc ,_aeae :=_gea .GetStandardTable (14+int (_acffe .SbHuffRDX ));if _aeae !=nil {return 0,_c .Wrap (_aeae ,_ddfga ,"");};return _gcgc .Decode (_acffe ._egeae );};_cffa ,_fdaca :=_acffe ._dbeg .DecodeInt (_acffe ._cfea );if _fdaca !=nil {return 0,_c .Wrap (_fdaca ,_ddfga ,"");};return int64 (_cffa ),nil ;};func (_dbae *PageInformationSegment )readCombinationOperator ()error {_gcbe ,_bacg :=_dbae ._cgba .ReadBits (2);if _bacg !=nil {return _bacg ;};_dbae ._aabc =_gb .CombinationOperator (int (_gcbe ));return nil ;};func (_cgde *GenericRefinementRegion )decodeTemplate (_eac ,_ba ,_agc ,_faf ,_aaf ,_ed ,_dcc ,_dg ,_bcd ,_ccf int ,_fdg templater )(_cgfb error ){var (_bee ,_bcg ,_gaf ,_ccd ,_dgg int16 ;_cef ,_edb ,_acff ,_dfd int ;_dba byte ;);if _bcd >=1&&(_bcd -1)< _cgde .ReferenceBitmap .Height {_dba ,_cgfb =_cgde .ReferenceBitmap .GetByte (_ccf -_faf );if _cgfb !=nil {return ;};_cef =int (_dba );};if _bcd >=0&&(_bcd )< _cgde .ReferenceBitmap .Height {_dba ,_cgfb =_cgde .ReferenceBitmap .GetByte (_ccf );if _cgfb !=nil {return ;};_edb =int (_dba );};if _bcd >=-1&&(_bcd +1)< _cgde .ReferenceBitmap .Height {_dba ,_cgfb =_cgde .ReferenceBitmap .GetByte (_ccf +_faf );if _cgfb !=nil {return ;};_acff =int (_dba );};_ccf ++;if _eac >=1{_dba ,_cgfb =_cgde .RegionBitmap .GetByte (_dg -_agc );if _cgfb !=nil {return ;};_dfd =int (_dba );};_dg ++;_bcdf :=_cgde .ReferenceDX %8;_baf :=6+_bcdf ;_beg :=_ccf %_faf ;if _baf >=0{if _baf < 8{_bee =int16 (_cef >>uint (_baf ))&0x07;};if _baf < 8{_bcg =int16 (_edb >>uint (_baf ))&0x07;};if _baf < 8{_gaf =int16 (_acff >>uint (_baf ))&0x07;};if _baf ==6&&_beg > 1{if _bcd >=1&&(_bcd -1)< _cgde .ReferenceBitmap .Height {_dba ,_cgfb =_cgde .ReferenceBitmap .GetByte (_ccf -_faf -2);if _cgfb !=nil {return _cgfb ;};_bee |=int16 (_dba <<2)&0x04;};if _bcd >=0&&_bcd < _cgde .ReferenceBitmap .Height {_dba ,_cgfb =_cgde .ReferenceBitmap .GetByte (_ccf -2);if _cgfb !=nil {return _cgfb ;};_bcg |=int16 (_dba <<2)&0x04;};if _bcd >=-1&&_bcd +1< _cgde .ReferenceBitmap .Height {_dba ,_cgfb =_cgde .ReferenceBitmap .GetByte (_ccf +_faf -2);if _cgfb !=nil {return _cgfb ;};_gaf |=int16 (_dba <<2)&0x04;};};if _baf ==0{_cef =0;_edb =0;_acff =0;if _beg < _faf -1{if _bcd >=1&&_bcd -1< _cgde .ReferenceBitmap .Height {_dba ,_cgfb =_cgde .ReferenceBitmap .GetByte (_ccf -_faf );if _cgfb !=nil {return _cgfb ;};_cef =int (_dba );};if _bcd >=0&&_bcd < _cgde .ReferenceBitmap .Height {_dba ,_cgfb =_cgde .ReferenceBitmap .GetByte (_ccf );if _cgfb !=nil {return _cgfb ;};_edb =int (_dba );};if _bcd >=-1&&_bcd +1< _cgde .ReferenceBitmap .Height {_dba ,_cgfb =_cgde .ReferenceBitmap .GetByte (_ccf +_faf );if _cgfb !=nil {return _cgfb ;};_acff =int (_dba );};};_ccf ++;};}else {_bee =int16 (_cef <<1)&0x07;_bcg =int16 (_edb <<1)&0x07;_gaf =int16 (_acff <<1)&0x07;_cef =0;_edb =0;_acff =0;if _beg < _faf -1{if _bcd >=1&&_bcd -1< _cgde .ReferenceBitmap .Height {_dba ,_cgfb =_cgde .ReferenceBitmap .GetByte (_ccf -_faf );if _cgfb !=nil {return _cgfb ;};_cef =int (_dba );};if _bcd >=0&&_bcd < _cgde .ReferenceBitmap .Height {_dba ,_cgfb =_cgde .ReferenceBitmap .GetByte (_ccf );if _cgfb !=nil {return _cgfb ;};_edb =int (_dba );};if _bcd >=-1&&_bcd +1< _cgde .ReferenceBitmap .Height {_dba ,_cgfb =_cgde .ReferenceBitmap .GetByte (_ccf +_faf );if _cgfb !=nil {return _cgfb ;};_acff =int (_dba );};_ccf ++;};_bee |=int16 ((_cef >>7)&0x07);_bcg |=int16 ((_edb >>7)&0x07);_gaf |=int16 ((_acff >>7)&0x07);};_ccd =int16 (_dfd >>6);_dgg =0;_ggg :=(2-_bcdf )%8;_cef <<=uint (_ggg );_edb <<=uint (_ggg );_acff <<=uint (_ggg );_dfd <<=2;var _eaf int ;for _ggc :=0;_ggc < _ba ;_ggc ++{_fec :=_ggc &0x07;_dbc :=_fdg .form (_bee ,_bcg ,_gaf ,_ccd ,_dgg );if _cgde ._af {_dba ,_cgfb =_cgde .RegionBitmap .GetByte (_cgde .RegionBitmap .GetByteIndex (_ggc ,_eac ));if _cgfb !=nil {return _cgfb ;};_cgde ._abd .SetIndex (int32 (_cgde .overrideAtTemplate0 (int (_dbc ),_ggc ,_eac ,int (_dba ),_fec )));}else {_cgde ._abd .SetIndex (int32 (_dbc ));};_eaf ,_cgfb =_cgde ._ef .DecodeBit (_cgde ._abd );if _cgfb !=nil {return _cgfb ;};if _cgfb =_cgde .RegionBitmap .SetPixel (_ggc ,_eac ,byte (_eaf ));_cgfb !=nil {return _cgfb ;};_bee =((_bee <<1)|0x01&int16 (_cef >>7))&0x07;_bcg =((_bcg <<1)|0x01&int16 (_edb >>7))&0x07;_gaf =((_gaf <<1)|0x01&int16 (_acff >>7))&0x07;_ccd =((_ccd <<1)|0x01&int16 (_dfd >>7))&0x07;_dgg =int16 (_eaf );if (_ggc -int (_cgde .ReferenceDX ))%8==5{_cef =0;_edb =0;_acff =0;if ((_ggc -int (_cgde .ReferenceDX ))/8)+1< _cgde .ReferenceBitmap .RowStride {if _bcd >=1&&(_bcd -1)< _cgde .ReferenceBitmap .Height {_dba ,_cgfb =_cgde .ReferenceBitmap .GetByte (_ccf -_faf );if _cgfb !=nil {return _cgfb ;};_cef =int (_dba );};if _bcd >=0&&_bcd < _cgde .ReferenceBitmap .Height {_dba ,_cgfb =_cgde .ReferenceBitmap .GetByte (_ccf );if _cgfb !=nil {return _cgfb ;};_edb =int (_dba );};if _bcd >=-1&&(_bcd +1)< _cgde .ReferenceBitmap .Height {_dba ,_cgfb =_cgde .ReferenceBitmap .GetByte (_ccf +_faf );if _cgfb !=nil {return _cgfb ;};_acff =int (_dba );};};_ccf ++;}else {_cef <<=1;_edb <<=1;_acff <<=1;};if _fec ==5&&_eac >=1{if ((_ggc >>3)+1)>=_cgde .RegionBitmap .RowStride {_dfd =0;}else {_dba ,_cgfb =_cgde .RegionBitmap .GetByte (_dg -_agc );if _cgfb !=nil {return _cgfb ;};_dfd =int (_dba );};_dg ++;}else {_dfd <<=1;};};return nil ;};func (_baeb *Header )CleanSegmentData (){if _baeb .SegmentData !=nil {_baeb .SegmentData =nil ;};};func (_dfcf *SymbolDictionary )setRetainedCodingContexts (_aadf *SymbolDictionary ){_dfcf ._fffa =_aadf ._fffa ;_dfcf .IsHuffmanEncoded =_aadf .IsHuffmanEncoded ;_dfcf .UseRefinementAggregation =_aadf .UseRefinementAggregation ;_dfcf .SdTemplate =_aadf .SdTemplate ;_dfcf .SdrTemplate =_aadf .SdrTemplate ;_dfcf .SdATX =_aadf .SdATX ;_dfcf .SdATY =_aadf .SdATY ;_dfcf .SdrATX =_aadf .SdrATX ;_dfcf .SdrATY =_aadf .SdrATY ;_dfcf ._bebgc =_aadf ._bebgc ;};func (_efaf *TextRegion )checkInput ()error {const _cad ="\u0063\u0068\u0065\u0063\u006b\u0049\u006e\u0070\u0075\u0074";if !_efaf .UseRefinement {if _efaf .SbrTemplate !=0{_gbd .Log .Debug ("\u0053\u0062\u0072Te\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_efaf .SbrTemplate =0;};};if _efaf .SbHuffFS ==2||_efaf .SbHuffRDWidth ==2||_efaf .SbHuffRDHeight ==2||_efaf .SbHuffRDX ==2||_efaf .SbHuffRDY ==2{return _c .Error (_cad ,"h\u0075\u0066\u0066\u006d\u0061\u006e \u0066\u006c\u0061\u0067\u0020\u0076a\u006c\u0075\u0065\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074e\u0064");};if !_efaf .UseRefinement {if _efaf .SbHuffRSize !=0{_gbd .Log .Debug ("\u0053\u0062\u0048uf\u0066\u0052\u0053\u0069\u007a\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_efaf .SbHuffRSize =0;};if _efaf .SbHuffRDY !=0{_gbd .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044Y\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_efaf .SbHuffRDY =0;};if _efaf .SbHuffRDX !=0{_gbd .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044X\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_efaf .SbHuffRDX =0;};if _efaf .SbHuffRDWidth !=0{_gbd .Log .Debug ("\u0053b\u0048\u0075\u0066\u0066R\u0044\u0057\u0069\u0064\u0074h\u0020s\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u00200");_efaf .SbHuffRDWidth =0;};if _efaf .SbHuffRDHeight !=0{_gbd .Log .Debug ("\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069g\u0068\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0030");_efaf .SbHuffRDHeight =0;};};return nil ;};func (_fdgbg *TextRegion )InitEncode (globalSymbolsMap ,localSymbolsMap map[int ]int ,comps []int ,inLL *_gb .Points ,symbols *_gb .Bitmaps ,classIDs *_gecg .IntSlice ,boxes *_gb .Boxes ,width ,height ,symBits int ){_fdgbg .RegionInfo =&RegionSegment {BitmapWidth :uint32 (width ),BitmapHeight :uint32 (height )};_fdgbg ._cebe =globalSymbolsMap ;_fdgbg ._dgee =localSymbolsMap ;_fdgbg ._bad =comps ;_fdgbg ._efbga =inLL ;_fdgbg ._addd =symbols ;_fdgbg ._bfae =classIDs ;_fdgbg ._bafa =boxes ;_fdgbg ._baca =symBits ;};func (_bcgdd *TextRegion )decodeSymbolInstances ()error {_gace ,_gccb :=_bcgdd .decodeStripT ();if _gccb !=nil {return _gccb ;};var (_edce int64 ;_gafc uint32 ;);for _gafc < _bcgdd .NumberOfSymbolInstances {_gffc ,_ccdd :=_bcgdd .decodeDT ();if _ccdd !=nil {return _ccdd ;};_gace +=_gffc ;var _ebdee int64 ;_ebed :=true ;_bcgdd ._bcag =0;for {if _ebed {_ebdee ,_ccdd =_bcgdd .decodeDfs ();if _ccdd !=nil {return _ccdd ;};_edce +=_ebdee ;_bcgdd ._bcag =_edce ;_ebed =false ;}else {_beff ,_gfca :=_bcgdd .decodeIds ();if _gec .Is (_gfca ,_ac .ErrOOB ){break ;};if _gfca !=nil {return _gfca ;};if _gafc >=_bcgdd .NumberOfSymbolInstances {break ;};_bcgdd ._bcag +=_beff +int64 (_bcgdd .SbDsOffset );};_geaa ,_adec :=_bcgdd .decodeCurrentT ();if _adec !=nil {return _adec ;};_dbg :=_gace +_geaa ;_afafd ,_adec :=_bcgdd .decodeID ();if _adec !=nil {return _adec ;};_dccgd ,_adec :=_bcgdd .decodeRI ();if _adec !=nil {return _adec ;};_efcf ,_adec :=_bcgdd .decodeIb (_dccgd ,_afafd );if _adec !=nil {return _adec ;};if _adec =_bcgdd .blit (_efcf ,_dbg );_adec !=nil {return _adec ;};_gafc ++;};};return nil ;};func (_faag *TextRegion )symbolIDCodeLengths ()error {var (_ccadf []*_gea .Code ;_adeg uint64 ;_fdbcc _gea .Tabler ;_afbg error ;);for _bdcf :=0;_bdcf < 35;_bdcf ++{_adeg ,_afbg =_faag ._egeae .ReadBits (4);if _afbg !=nil {return _afbg ;};_daba :=int (_adeg &0xf);if _daba > 0{_ccadf =append (_ccadf ,_gea .NewCode (int32 (_daba ),0,int32 (_bdcf ),false ));};};_fdbcc ,_afbg =_gea .NewFixedSizeTable (_ccadf );if _afbg !=nil {return _afbg ;};var (_aadgb int64 ;_cdaa uint32 ;_dgdf []*_gea .Code ;_cdbag int64 ;);for _cdaa < _faag .NumberOfSymbols {_cdbag ,_afbg =_fdbcc .Decode (_faag ._egeae );if _afbg !=nil {return _afbg ;};if _cdbag < 32{if _cdbag > 0{_dgdf =append (_dgdf ,_gea .NewCode (int32 (_cdbag ),0,int32 (_cdaa ),false ));};_aadgb =_cdbag ;_cdaa ++;}else {var _cfaf ,_gdc int64 ;switch _cdbag {case 32:_adeg ,_afbg =_faag ._egeae .ReadBits (2);if _afbg !=nil {return _afbg ;};_cfaf =3+int64 (_adeg );if _cdaa > 0{_gdc =_aadgb ;};case 33:_adeg ,_afbg =_faag ._egeae .ReadBits (3);if _afbg !=nil {return _afbg ;};_cfaf =3+int64 (_adeg );case 34:_adeg ,_afbg =_faag ._egeae .ReadBits (7);if _afbg !=nil {return _afbg ;};_cfaf =11+int64 (_adeg );};for _fgde :=0;_fgde < int (_cfaf );_fgde ++{if _gdc > 0{_dgdf =append (_dgdf ,_gea .NewCode (int32 (_gdc ),0,int32 (_cdaa ),false ));};_cdaa ++;};};};_faag ._egeae .Align ();_faag ._acb ,_afbg =_gea .NewFixedSizeTable (_dgdf );return _afbg ;};func (_caae *TextRegion )decodeStripT ()(_dgea int64 ,_bcdgd error ){if _caae .IsHuffmanEncoded {if _caae .SbHuffDT ==3{if _caae ._ebgb ==nil {var _cgdf int ;if _caae .SbHuffFS ==3{_cgdf ++;};if _caae .SbHuffDS ==3{_cgdf ++;};_caae ._ebgb ,_bcdgd =_caae .getUserTable (_cgdf );if _bcdgd !=nil {return 0,_bcdgd ;};};_dgea ,_bcdgd =_caae ._ebgb .Decode (_caae ._egeae );if _bcdgd !=nil {return 0,_bcdgd ;};}else {var _cgdb _gea .Tabler ;_cgdb ,_bcdgd =_gea .GetStandardTable (11+int (_caae .SbHuffDT ));if _bcdgd !=nil {return 0,_bcdgd ;};_dgea ,_bcdgd =_cgdb .Decode (_caae ._egeae );if _bcdgd !=nil {return 0,_bcdgd ;};};}else {var _aaec int32 ;_aaec ,_bcdgd =_caae ._dbeg .DecodeInt (_caae ._fdad );if _bcdgd !=nil {return 0,_bcdgd ;};_dgea =int64 (_aaec );};_dgea *=int64 (-_caae .SbStrips );return _dgea ,nil ;};func (_dfcfd *TextRegion )readUseRefinement ()error {if !_dfcfd .UseRefinement ||_dfcfd .SbrTemplate !=0{return nil ;};var (_egga byte ;_gcef error ;);_dfcfd .SbrATX =make ([]int8 ,2);_dfcfd .SbrATY =make ([]int8 ,2);_egga ,_gcef =_dfcfd ._egeae .ReadByte ();if _gcef !=nil {return _gcef ;};_dfcfd .SbrATX [0]=int8 (_egga );_egga ,_gcef =_dfcfd ._egeae .ReadByte ();if _gcef !=nil {return _gcef ;};_dfcfd .SbrATY [0]=int8 (_egga );_egga ,_gcef =_dfcfd ._egeae .ReadByte ();if _gcef !=nil {return _gcef ;};_dfcfd .SbrATX [1]=int8 (_egga );_egga ,_gcef =_dfcfd ._egeae .ReadByte ();if _gcef !=nil {return _gcef ;};_dfcfd .SbrATY [1]=int8 (_egga );return nil ;};func (_gbbc *PageInformationSegment )readContainsRefinement ()error {_ecfed ,_cbagd :=_gbbc ._cgba .ReadBit ();if _cbagd !=nil {return _cbagd ;};if _ecfed ==1{_gbbc ._aadc =true ;};return nil ;};func (_dccd *TextRegion )Encode (w _f .BinaryWriter )(_dede int ,_cgcb error ){const _ccff ="\u0054\u0065\u0078\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u002e\u0045n\u0063\u006f\u0064\u0065";if _dede ,_cgcb =_dccd .RegionInfo .Encode (w );_cgcb !=nil {return _dede ,_c .Wrap (_cgcb ,_ccff ,"");};var _bdbc int ;if _bdbc ,_cgcb =_dccd .encodeFlags (w );_cgcb !=nil {return _dede ,_c .Wrap (_cgcb ,_ccff ,"");};_dede +=_bdbc ;if _bdbc ,_cgcb =_dccd .encodeSymbols (w );_cgcb !=nil {return _dede ,_c .Wrap (_cgcb ,_ccff ,"");};_dede +=_bdbc ;return _dede ,nil ;};func (_agde *Header )writeReferredToSegments (_gbge _f .BinaryWriter )(_gbda int ,_fgf error ){const _acea ="\u0077\u0072\u0069te\u0052\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";var (_gcceb uint16 ;_ecbd uint32 ;);_fafa :=_agde .referenceSize ();_abef :=1;_gbaf :=make ([]byte ,_fafa );for _ ,_cbbb :=range _agde .RTSNumbers {switch _fafa {case 4:_ecbd =uint32 (_cbbb );_e .BigEndian .PutUint32 (_gbaf ,_ecbd );_abef ,_fgf =_gbge .Write (_gbaf );if _fgf !=nil {return 0,_c .Wrap (_fgf ,_acea ,"u\u0069\u006e\u0074\u0033\u0032\u0020\u0073\u0069\u007a\u0065");};case 2:_gcceb =uint16 (_cbbb );_e .BigEndian .PutUint16 (_gbaf ,_gcceb );_abef ,_fgf =_gbge .Write (_gbaf );if _fgf !=nil {return 0,_c .Wrap (_fgf ,_acea ,"\u0075\u0069\u006e\u0074\u0031\u0036");};default:if _fgf =_gbge .WriteByte (byte (_cbbb ));_fgf !=nil {return 0,_c .Wrap (_fgf ,_acea ,"\u0075\u0069\u006et\u0038");};};_gbda +=_abef ;};return _gbda ,nil ;};func (_bcc *GenericRegion )decodeTemplate2 (_adc ,_eaa ,_abe int ,_baef ,_afce int )(_feaab error ){const _cfd ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0032";var (_bdc ,_fad int ;_gffd ,_eagf int ;_egfg byte ;_eced ,_feg int ;);if _adc >=1{_egfg ,_feaab =_bcc .Bitmap .GetByte (_afce );if _feaab !=nil {return _c .Wrap (_feaab ,_cfd ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0031");};_gffd =int (_egfg );};if _adc >=2{_egfg ,_feaab =_bcc .Bitmap .GetByte (_afce -_bcc .Bitmap .RowStride );if _feaab !=nil {return _c .Wrap (_feaab ,_cfd ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0032");};_eagf =int (_egfg )<<4;};_bdc =(_gffd >>3&0x7c)|(_eagf >>3&0x380);for _gaeb :=0;_gaeb < _abe ;_gaeb =_eced {var (_fdca byte ;_fecg int ;);_eced =_gaeb +8;if _egea :=_eaa -_gaeb ;_egea > 8{_fecg =8;}else {_fecg =_egea ;};if _adc > 0{_gffd <<=8;if _eced < _eaa {_egfg ,_feaab =_bcc .Bitmap .GetByte (_afce +1);if _feaab !=nil {return _c .Wrap (_feaab ,_cfd ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0030");};_gffd |=int (_egfg );};};if _adc > 1{_eagf <<=8;if _eced < _eaa {_egfg ,_feaab =_bcc .Bitmap .GetByte (_afce -_bcc .Bitmap .RowStride +1);if _feaab !=nil {return _c .Wrap (_feaab ,_cfd ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0031");};_eagf |=int (_egfg )<<4;};};for _fcb :=0;_fcb < _fecg ;_fcb ++{_bcf :=uint (10-_fcb );if _bcc ._deec {_fad =_bcc .overrideAtTemplate2 (_bdc ,_gaeb +_fcb ,_adc ,int (_fdca ),_fcb );_bcc ._gef .SetIndex (int32 (_fad ));}else {_bcc ._gef .SetIndex (int32 (_bdc ));};_feg ,_feaab =_bcc ._egff .DecodeBit (_bcc ._gef );if _feaab !=nil {return _c .Wrap (_feaab ,_cfd ,"");};_fdca |=byte (_feg <<uint (7-_fcb ));_bdc =((_bdc &0x1bd)<<1)|_feg |((_gffd >>_bcf )&0x4)|((_eagf >>_bcf )&0x80);};if _ecda :=_bcc .Bitmap .SetByte (_baef ,_fdca );_ecda !=nil {return _c .Wrap (_ecda ,_cfd ,"");};_baef ++;_afce ++;};return nil ;};type RegionSegment struct{_ffae _f .StreamReader ;BitmapWidth uint32 ;BitmapHeight uint32 ;XLocation uint32 ;YLocation uint32 ;CombinaionOperator _gb .CombinationOperator ;};func (_dae *Header )writeSegmentNumber (_cdfg _f .BinaryWriter )(_fgfd int ,_dfad error ){_faad :=make ([]byte ,4);_e .BigEndian .PutUint32 (_faad ,_dae .SegmentNumber );if _fgfd ,_dfad =_cdfg .Write (_faad );_dfad !=nil {return 0,_c .Wrap (_dfad ,"\u0048e\u0061\u0064\u0065\u0072.\u0077\u0072\u0069\u0074\u0065S\u0065g\u006de\u006e\u0074\u004e\u0075\u006d\u0062\u0065r","");};return _fgfd ,nil ;};type OrganizationType uint8 ;func (_bebg *PatternDictionary )computeSegmentDataStructure ()error {_bebg .DataOffset =_bebg ._cdbb .StreamPosition ();_bebg .DataHeaderLength =_bebg .DataOffset -_bebg .DataHeaderOffset ;_bebg .DataLength =int64 (_bebg ._cdbb .Length ())-_bebg .DataHeaderLength ;return nil ;};func (_aac *Header )pageSize ()uint {if _aac .PageAssociation <=255{return 1;};return 4;};func (_cgfbe *GenericRegion )overrideAtTemplate2 (_fddg ,_bggc ,_gcgf ,_dfdc ,_cfcg int )int {_fddg &=0x3FB;if _cgfbe .GBAtY [0]==0&&_cgfbe .GBAtX [0]>=-int8 (_cfcg ){_fddg |=(_dfdc >>uint (7-(int8 (_cfcg )+_cgfbe .GBAtX [0]))&0x1)<<2;}else {_fddg |=int (_cgfbe .getPixel (_bggc +int (_cgfbe .GBAtX [0]),_gcgf +int (_cgfbe .GBAtY [0])))<<2;};return _fddg ;};func (_eacf *TableSegment )HtHigh ()int32 {return _eacf ._fbed };var (_ Regioner =&TextRegion {};_ Segmenter =&TextRegion {};);func (_ffa *GenericRegion )setOverrideFlag (_bda int ){_ffa .GBAtOverride [_bda ]=true ;_ffa ._deec =true ;};func (_caf *Header )readHeaderLength (_cagg _f .StreamReader ,_beb int64 ){_caf .HeaderLength =_cagg .StreamPosition ()-_beb ;};func (_cgg *GenericRegion )copyLineAbove (_eda int )error {_ebd :=_eda *_cgg .Bitmap .RowStride ;_feaa :=_ebd -_cgg .Bitmap .RowStride ;for _eebf :=0;_eebf < _cgg .Bitmap .RowStride ;_eebf ++{_cgac ,_cdf :=_cgg .Bitmap .GetByte (_feaa );if _cdf !=nil {return _cdf ;};_feaa ++;if _cdf =_cgg .Bitmap .SetByte (_ebd ,_cgac );_cdf !=nil {return _cdf ;};_ebd ++;};return nil ;};func (_bgcd *TextRegion )decodeRdh ()(int64 ,error ){const _dgbd ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064h";if _bgcd .IsHuffmanEncoded {if _bgcd .SbHuffRDHeight ==3{if _bgcd ._fef ==nil {var (_dbcfe int ;_babg error ;);if _bgcd .SbHuffFS ==3{_dbcfe ++;};if _bgcd .SbHuffDS ==3{_dbcfe ++;};if _bgcd .SbHuffDT ==3{_dbcfe ++;};if _bgcd .SbHuffRDWidth ==3{_dbcfe ++;};_bgcd ._fef ,_babg =_bgcd .getUserTable (_dbcfe );if _babg !=nil {return 0,_c .Wrap (_babg ,_dgbd ,"");};};return _bgcd ._fef .Decode (_bgcd ._egeae );};_bdfbb ,_aagd :=_gea .GetStandardTable (14+int (_bgcd .SbHuffRDHeight ));if _aagd !=nil {return 0,_c .Wrap (_aagd ,_dgbd ,"");};return _bdfbb .Decode (_bgcd ._egeae );};_cgded ,_aaff :=_bgcd ._dbeg .DecodeInt (_bgcd ._beeed );if _aaff !=nil {return 0,_c .Wrap (_aaff ,_dgbd ,"");};return int64 (_cgded ),nil ;};func (_adca *TextRegion )GetRegionBitmap ()(*_gb .Bitmap ,error ){if _adca .RegionBitmap !=nil {return _adca .RegionBitmap ,nil ;};if !_adca .IsHuffmanEncoded {if _eeff :=_adca .setCodingStatistics ();_eeff !=nil {return nil ,_eeff ;};};if _fbeb :=_adca .createRegionBitmap ();_fbeb !=nil {return nil ,_fbeb ;};if _cbcf :=_adca .decodeSymbolInstances ();_cbcf !=nil {return nil ,_cbcf ;};return _adca .RegionBitmap ,nil ;};func (_bgb *TextRegion )setParameters (_ccba *_de .Decoder ,_fbdf ,_dcbbg bool ,_fecd ,_ffdd uint32 ,_gagc uint32 ,_cagcf int8 ,_ecgff uint32 ,_geag int8 ,_afcee _gb .CombinationOperator ,_aggd int8 ,_agfe int16 ,_fcgf ,_gfbgd ,_eggd ,_agdc ,_aadaa ,_dbfbg ,_ebdg ,_bacc ,_adae ,_fgbc int8 ,_fcfdb ,_dgda []int8 ,_cffe []*_gb .Bitmap ,_ebaead int8 ){_bgb ._dbeg =_ccba ;_bgb .IsHuffmanEncoded =_fbdf ;_bgb .UseRefinement =_dcbbg ;_bgb .RegionInfo .BitmapWidth =_fecd ;_bgb .RegionInfo .BitmapHeight =_ffdd ;_bgb .NumberOfSymbolInstances =_gagc ;_bgb .SbStrips =_cagcf ;_bgb .NumberOfSymbols =_ecgff ;_bgb .DefaultPixel =_geag ;_bgb .CombinationOperator =_afcee ;_bgb .IsTransposed =_aggd ;_bgb .ReferenceCorner =_agfe ;_bgb .SbDsOffset =_fcgf ;_bgb .SbHuffFS =_gfbgd ;_bgb .SbHuffDS =_eggd ;_bgb .SbHuffDT =_agdc ;_bgb .SbHuffRDWidth =_aadaa ;_bgb .SbHuffRDHeight =_dbfbg ;_bgb .SbHuffRSize =_adae ;_bgb .SbHuffRDX =_ebdg ;_bgb .SbHuffRDY =_bacc ;_bgb .SbrTemplate =_fgbc ;_bgb .SbrATX =_fcfdb ;_bgb .SbrATY =_dgda ;_bgb .Symbols =_cffe ;_bgb ._cecg =_ebaead ;};func (_bff *GenericRefinementRegion )setParameters (_eag *_de .DecoderStats ,_gdf *_de .Decoder ,_gfe int8 ,_bfbd ,_bdf uint32 ,_dfdb *_gb .Bitmap ,_aeef ,_bgd int32 ,_gead bool ,_gdac []int8 ,_beda []int8 ){_gbd .Log .Trace ("\u005b\u0047\u0045NE\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052E\u0047I\u004fN\u005d \u0073\u0065\u0074\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073");if _eag !=nil {_bff ._abd =_eag ;};if _gdf !=nil {_bff ._ef =_gdf ;};_bff .TemplateID =_gfe ;_bff .RegionInfo .BitmapWidth =_bfbd ;_bff .RegionInfo .BitmapHeight =_bdf ;_bff .ReferenceBitmap =_dfdb ;_bff .ReferenceDX =_aeef ;_bff .ReferenceDY =_bgd ;_bff .IsTPGROn =_gead ;_bff .GrAtX =_gdac ;_bff .GrAtY =_beda ;_bff .RegionBitmap =nil ;_gbd .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073 f\u0069\u006ei\u0073\u0068\u0065\u0064\u002e\u0020\u0025\u0073",_bff );};func (_dca *GenericRegion )GetRegionInfo ()*RegionSegment {return _dca .RegionSegment };func (_acc *Header )GetSegmentData ()(Segmenter ,error ){var _egef Segmenter ;if _acc .SegmentData !=nil {_egef =_acc .SegmentData ;};if _egef ==nil {_fcd ,_eefg :=_fag [_acc .Type ];if !_eefg {return nil ,_da .Errorf ("\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0073\u002f\u0020\u0025\u0064\u0020\u0063\u0072e\u0061t\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e\u0020",_acc .Type ,_acc .Type );};_egef =_fcd ();_gbd .Log .Trace ("\u005b\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u0020\u0061\u0074\u0020\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0030\u0034\u0058",_acc .SegmentNumber ,_acc .SegmentDataStartOffset );_eec ,_gbg :=_acc .subInputReader ();if _gbg !=nil {return nil ,_gbg ;};if _gbac :=_egef .Init (_acc ,_eec );_gbac !=nil {_gbd .Log .Debug ("\u0049\u006e\u0069\u0074 \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076 \u0066o\u0072\u0020\u0074\u0079\u0070\u0065\u003a \u0025\u0054",_gbac ,_egef );return nil ,_gbac ;};_acc .SegmentData =_egef ;};return _egef ,nil ;};type PageInformationSegment struct{_cgba _f .StreamReader ;PageBMHeight int ;PageBMWidth int ;ResolutionX int ;ResolutionY int ;_bfac bool ;_aabc _gb .CombinationOperator ;_bac bool ;_deeg uint8 ;_aadc bool ;IsLossless bool ;IsStripe bool ;MaxStripeSize uint16 ;};func (_eceb *SymbolDictionary )readNumberOfNewSymbols ()error {_dddb ,_aeca :=_eceb ._dccg .ReadBits (32);if _aeca !=nil {return _aeca ;};_eceb .NumberOfNewSymbols =uint32 (_dddb &_g .MaxUint32 );return nil ;};func (_fff *GenericRegion )decodeTemplate1 (_dcb ,_fdc ,_edg int ,_fgbf ,_fffb int )(_dgd error ){const _dccf ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0031";var (_aff ,_dgb int ;_affc ,_fcfd int ;_bfa byte ;_fabg ,_bdbg int ;);if _dcb >=1{_bfa ,_dgd =_fff .Bitmap .GetByte (_fffb );if _dgd !=nil {return _c .Wrap (_dgd ,_dccf ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_affc =int (_bfa );};if _dcb >=2{_bfa ,_dgd =_fff .Bitmap .GetByte (_fffb -_fff .Bitmap .RowStride );if _dgd !=nil {return _c .Wrap (_dgd ,_dccf ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_fcfd =int (_bfa )<<5;};_aff =((_affc >>1)&0x1f8)|((_fcfd >>1)&0x1e00);for _bgdg :=0;_bgdg < _edg ;_bgdg =_fabg {var (_edf byte ;_gbdc int ;);_fabg =_bgdg +8;if _fge :=_fdc -_bgdg ;_fge > 8{_gbdc =8;}else {_gbdc =_fge ;};if _dcb > 0{_affc <<=8;if _fabg < _fdc {_bfa ,_dgd =_fff .Bitmap .GetByte (_fffb +1);if _dgd !=nil {return _c .Wrap (_dgd ,_dccf ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_affc |=int (_bfa );};};if _dcb > 1{_fcfd <<=8;if _fabg < _fdc {_bfa ,_dgd =_fff .Bitmap .GetByte (_fffb -_fff .Bitmap .RowStride +1);if _dgd !=nil {return _c .Wrap (_dgd ,_dccf ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_fcfd |=int (_bfa )<<5;};};for _gac :=0;_gac < _gbdc ;_gac ++{if _fff ._deec {_dgb =_fff .overrideAtTemplate1 (_aff ,_bgdg +_gac ,_dcb ,int (_edf ),_gac );_fff ._gef .SetIndex (int32 (_dgb ));}else {_fff ._gef .SetIndex (int32 (_aff ));};_bdbg ,_dgd =_fff ._egff .DecodeBit (_fff ._gef );if _dgd !=nil {return _c .Wrap (_dgd ,_dccf ,"");};_edf |=byte (_bdbg )<<uint (7-_gac );_gcbd :=uint (8-_gac );_aff =((_aff &0xefb)<<1)|_bdbg |((_affc >>_gcbd )&0x8)|((_fcfd >>_gcbd )&0x200);};if _edbf :=_fff .Bitmap .SetByte (_fgbf ,_edf );_edbf !=nil {return _c .Wrap (_edbf ,_dccf ,"");};_fgbf ++;_fffb ++;};return nil ;};func (_aadbc *Header )readNumberOfReferredToSegments (_edag _f .StreamReader )(uint64 ,error ){const _bdg ="\u0072\u0065\u0061\u0064\u004e\u0075\u006d\u0062\u0065\u0072O\u0066\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";_efc ,_effg :=_edag .ReadBits (3);if _effg !=nil {return 0,_c .Wrap (_effg ,_bdg ,"\u0063\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0072\u0074\u0073");};_efc &=0xf;var _dabg []byte ;if _efc <=4{_dabg =make ([]byte ,5);for _acca :=0;_acca <=4;_acca ++{_efaa ,_bbd :=_edag .ReadBit ();if _bbd !=nil {return 0,_c .Wrap (_bbd ,_bdg ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_dabg [_acca ]=byte (_efaa );};}else {_efc ,_effg =_edag .ReadBits (29);if _effg !=nil {return 0,_effg ;};_efc &=_g .MaxInt32 ;_cefb :=(_efc +8)>>3;_cefb <<=3;_dabg =make ([]byte ,_cefb );var _dbd uint64 ;for _dbd =0;_dbd < _cefb ;_dbd ++{_gfgd ,_bbef :=_edag .ReadBit ();if _bbef !=nil {return 0,_c .Wrap (_bbef ,_bdg ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_dabg [_dbd ]=byte (_gfgd );};};return _efc ,nil ;};func (_bdfc *GenericRegion )decodeLine (_cebd ,_aed ,_dagg int )error {const _agd ="\u0064\u0065\u0063\u006f\u0064\u0065\u004c\u0069\u006e\u0065";_bca :=_bdfc .Bitmap .GetByteIndex (0,_cebd );_gad :=_bca -_bdfc .Bitmap .RowStride ;switch _bdfc .GBTemplate {case 0:if !_bdfc .UseExtTemplates {return _bdfc .decodeTemplate0a (_cebd ,_aed ,_dagg ,_bca ,_gad );};return _bdfc .decodeTemplate0b (_cebd ,_aed ,_dagg ,_bca ,_gad );case 1:return _bdfc .decodeTemplate1 (_cebd ,_aed ,_dagg ,_bca ,_gad );case 2:return _bdfc .decodeTemplate2 (_cebd ,_aed ,_dagg ,_bca ,_gad );case 3:return _bdfc .decodeTemplate3 (_cebd ,_aed ,_dagg ,_bca ,_gad );};return _c .Errorf (_agd ,"\u0069\u006e\u0076a\u006c\u0069\u0064\u0020G\u0042\u0054\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u003a\u0020\u0025\u0064",_bdfc .GBTemplate );};func (_gcb *template0 )form (_aeeb ,_cfe ,_cbc ,_bbc ,_ece int16 )int16 {return (_aeeb <<10)|(_cfe <<7)|(_cbc <<4)|(_bbc <<1)|_ece ;};func (_gafe *SymbolDictionary )String ()string {_deegb :=&_ec .Builder {};_deegb .WriteString ("\n\u005b\u0053\u0059\u004dBO\u004c-\u0044\u0049\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u000a");_deegb .WriteString (_da .Sprintf ("\u0009-\u0020S\u0064\u0072\u0054\u0065\u006dp\u006c\u0061t\u0065\u0020\u0025\u0076\u000a",_gafe .SdrTemplate ));_deegb .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0025\u0076\u000a",_gafe .SdTemplate ));_deegb .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006eg\u0043\u006f\u006e\u0074\u0065\u0078\u0074R\u0065\u0074\u0061\u0069\u006e\u0065\u0064\u0020\u0025\u0076\u000a",_gafe ._ccefc ));_deegb .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074\u0065\u0078\u0074\u0055\u0073\u0065\u0064 \u0025\u0076\u000a",_gafe ._ffcd ));_deegb .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_gafe .SdHuffAggInstanceSelection ));_deegb .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0053d\u0048\u0075\u0066\u0066\u0042\u004d\u0053\u0069\u007a\u0065S\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020%\u0076\u000a",_gafe .SdHuffBMSizeSelection ));_deegb .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_gafe .SdHuffDecodeWidthSelection ));_deegb .WriteString (_da .Sprintf ("\u0009\u002d\u0020Sd\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064e\u0048e\u0069g\u0068t\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_gafe .SdHuffDecodeHeightSelection ));_deegb .WriteString (_da .Sprintf ("\u0009\u002d\u0020U\u0073\u0065\u0052\u0065f\u0069\u006e\u0065\u006d\u0065\u006e\u0074A\u0067\u0067\u0072\u0065\u0067\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_gafe .UseRefinementAggregation ));_deegb .WriteString (_da .Sprintf ("\u0009\u002d\u0020is\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045\u006e\u0063\u006f\u0064\u0065\u0064\u0020\u0025\u0076\u000a",_gafe .IsHuffmanEncoded ));_deegb .WriteString (_da .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_gafe .SdATX ));_deegb .WriteString (_da .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_gafe .SdATY ));_deegb .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_gafe .SdrATX ));_deegb .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_gafe .SdrATY ));_deegb .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u004e\u0075\u006d\u0062\u0065\u0072\u004ff\u0045\u0078\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_gafe .NumberOfExportedSymbols ));_deegb .WriteString (_da .Sprintf ("\u0009-\u0020\u004e\u0075\u006db\u0065\u0072\u004f\u0066\u004ee\u0077S\u0079m\u0062\u006f\u006c\u0073\u0020\u0025\u0076\n",_gafe .NumberOfNewSymbols ));_deegb .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u004ff\u0049\u006d\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_gafe ._aeac ));_deegb .WriteString (_da .Sprintf ("\u0009\u002d \u006e\u0075\u006d\u0062\u0065\u0072\u004f\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0064\u0053\u0079\u006d\u0062\u006f\u006c\u0073 %\u0076\u000a",_gafe ._aaag ));return _deegb .String ();};func (_ace *GenericRefinementRegion )GetRegionBitmap ()(*_gb .Bitmap ,error ){var _gd error ;_gbd .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");defer func (){if _gd !=nil {_gbd .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0047\u0065\u0074R\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006dap\u0020\u0066a\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_gd );}else {_gbd .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");};}();if _ace .RegionBitmap !=nil {return _ace .RegionBitmap ,nil ;};_geg :=0;if _ace .ReferenceBitmap ==nil {_ace .ReferenceBitmap ,_gd =_ace .getGrReference ();if _gd !=nil {return nil ,_gd ;};};if _ace ._ef ==nil {_ace ._ef ,_gd =_de .New (_ace ._ab );if _gd !=nil {return nil ,_gd ;};};if _ace ._abd ==nil {_ace ._abd =_de .NewStats (8192,1);};_ace .RegionBitmap =_gb .New (int (_ace .RegionInfo .BitmapWidth ),int (_ace .RegionInfo .BitmapHeight ));if _ace .TemplateID ==0{if _gd =_ace .updateOverride ();_gd !=nil {return nil ,_gd ;};};_fe :=(_ace .RegionBitmap .Width +7)&-8;var _ad int ;if _ace .IsTPGROn {_ad =int (-_ace .ReferenceDY )*_ace .ReferenceBitmap .RowStride ;};_dag :=_ad +1;for _bb :=0;_bb < _ace .RegionBitmap .Height ;_bb ++{if _ace .IsTPGROn {_dfa ,_be :=_ace .decodeSLTP ();if _be !=nil {return nil ,_be ;};_geg ^=_dfa ;};if _geg ==0{_gd =_ace .decodeOptimized (_bb ,_ace .RegionBitmap .Width ,_ace .RegionBitmap .RowStride ,_ace .ReferenceBitmap .RowStride ,_fe ,_ad ,_dag );if _gd !=nil {return nil ,_gd ;};}else {_gd =_ace .decodeTypicalPredictedLine (_bb ,_ace .RegionBitmap .Width ,_ace .RegionBitmap .RowStride ,_ace .ReferenceBitmap .RowStride ,_fe ,_ad );if _gd !=nil {return nil ,_gd ;};};};return _ace .RegionBitmap ,nil ;};func (_faaee *RegionSegment )Size ()int {return 17};func _aga (_aegf _f .StreamReader ,_gcge *Header )*GenericRefinementRegion {return &GenericRefinementRegion {_ab :_aegf ,RegionInfo :NewRegionSegment (_aegf ),_fa :_gcge ,_fga :&template0 {},_daf :&template1 {}};};func (_eebgb *TableSegment )HtLow ()int32 {return _eebgb ._aedc };type TextRegion struct{_egeae _f .StreamReader ;RegionInfo *RegionSegment ;SbrTemplate int8 ;SbDsOffset int8 ;DefaultPixel int8 ;CombinationOperator _gb .CombinationOperator ;IsTransposed int8 ;ReferenceCorner int16 ;LogSBStrips int16 ;UseRefinement bool ;IsHuffmanEncoded bool ;SbHuffRSize int8 ;SbHuffRDY int8 ;SbHuffRDX int8 ;SbHuffRDHeight int8 ;SbHuffRDWidth int8 ;SbHuffDT int8 ;SbHuffDS int8 ;SbHuffFS int8 ;SbrATX []int8 ;SbrATY []int8 ;NumberOfSymbolInstances uint32 ;_bcag int64 ;SbStrips int8 ;NumberOfSymbols uint32 ;RegionBitmap *_gb .Bitmap ;Symbols []*_gb .Bitmap ;_dbeg *_de .Decoder ;_faca *GenericRefinementRegion ;_fdad *_de .DecoderStats ;_daggf *_de .DecoderStats ;_fggda *_de .DecoderStats ;_feaf *_de .DecoderStats ;_egcd *_de .DecoderStats ;_dceb *_de .DecoderStats ;_beeed *_de .DecoderStats ;_eagc *_de .DecoderStats ;_cfea *_de .DecoderStats ;_agfb *_de .DecoderStats ;_bcba *_de .DecoderStats ;_cecg int8 ;_acb *_gea .FixedSizeTable ;Header *Header ;_afbe _gea .Tabler ;_aeebe _gea .Tabler ;_ebgb _gea .Tabler ;_ggae _gea .Tabler ;_fef _gea .Tabler ;_ecba _gea .Tabler ;_gcae _gea .Tabler ;_eaff _gea .Tabler ;_cebe ,_dgee map[int ]int ;_bad []int ;_efbga *_gb .Points ;_addd *_gb .Bitmaps ;_bfae *_gecg .IntSlice ;_gcgg ,_baca int ;_bafa *_gb .Boxes ;};func (_eafc *PageInformationSegment )readResolution ()error {_fgcb ,_dfdcc :=_eafc ._cgba .ReadBits (32);if _dfdcc !=nil {return _dfdcc ;};_eafc .ResolutionX =int (_fgcb &_g .MaxInt32 );_fgcb ,_dfdcc =_eafc ._cgba .ReadBits (32);if _dfdcc !=nil {return _dfdcc ;};_eafc .ResolutionY =int (_fgcb &_g .MaxInt32 );return nil ;};func (_dfdbf *GenericRegion )computeSegmentDataStructure ()error {_dfdbf .DataOffset =_dfdbf ._gge .StreamPosition ();_dfdbf .DataHeaderLength =_dfdbf .DataOffset -_dfdbf .DataHeaderOffset ;_dfdbf .DataLength =int64 (_dfdbf ._gge .Length ())-_dfdbf .DataHeaderLength ;return nil ;};func (_cg *GenericRefinementRegion )getGrReference ()(*_gb .Bitmap ,error ){segments :=_cg ._fa .RTSegments ;if len (segments )==0{return nil ,_ge .New ("\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0065\u0078is\u0074\u0073");};_ea ,_gee :=segments [0].GetSegmentData ();if _gee !=nil {return nil ,_gee ;};_bg ,_ce :=_ea .(Regioner );if !_ce {return nil ,_da .Errorf ("\u0072\u0065\u0066\u0065\u0072r\u0065\u0064\u0020\u0074\u006f\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_ea );};return _bg .GetRegionBitmap ();};func (_fdgc *PageInformationSegment )encodeStripingInformation (_fgaba _f .BinaryWriter )(_bgdgb int ,_cfdg error ){const _dfga ="\u0065n\u0063\u006f\u0064\u0065S\u0074\u0072\u0069\u0070\u0069n\u0067I\u006ef\u006f\u0072\u006d\u0061\u0074\u0069\u006fn";if !_fdgc .IsStripe {if _bgdgb ,_cfdg =_fgaba .Write ([]byte {0x00,0x00});_cfdg !=nil {return 0,_c .Wrap (_cfdg ,_dfga ,"n\u006f\u0020\u0073\u0074\u0072\u0069\u0070\u0069\u006e\u0067");};return _bgdgb ,nil ;};_gagb :=make ([]byte ,2);_e .BigEndian .PutUint16 (_gagb ,_fdgc .MaxStripeSize |1<<15);if _bgdgb ,_cfdg =_fgaba .Write (_gagb );_cfdg !=nil {return 0,_c .Wrapf (_cfdg ,_dfga ,"\u0073\u0074\u0072i\u0070\u0069\u006e\u0067\u003a\u0020\u0025\u0064",_fdgc .MaxStripeSize );};return _bgdgb ,nil ;};func (_ebb *Header )readSegmentNumber (_defg _f .StreamReader )error {const _bfe ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";_affb :=make ([]byte ,4);_ ,_ecae :=_defg .Read (_affb );if _ecae !=nil {return _c .Wrap (_ecae ,_bfe ,"");};_ebb .SegmentNumber =_e .BigEndian .Uint32 (_affb );return nil ;};func (_gada *PatternDictionary )readPatternWidthAndHeight ()error {_ebaa ,_aebb :=_gada ._cdbb .ReadByte ();if _aebb !=nil {return _aebb ;};_gada .HdpWidth =_ebaa ;_ebaa ,_aebb =_gada ._cdbb .ReadByte ();if _aebb !=nil {return _aebb ;};_gada .HdpHeight =_ebaa ;return nil ;};func (_gade *SymbolDictionary )retrieveImportSymbols ()error {for _ ,_aeaga :=range _gade .Header .RTSegments {if _aeaga .Type ==0{_bcffa ,_debg :=_aeaga .GetSegmentData ();if _debg !=nil {return _debg ;};_egefd ,_edcg :=_bcffa .(*SymbolDictionary );if !_edcg {return _da .Errorf ("\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0044\u0061\u0074a\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u003a\u0020%\u0054",_bcffa );};_edcb ,_debg :=_egefd .GetDictionary ();if _debg !=nil {return _da .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064 \u0073\u0065\u0067m\u0065\u006e\u0074 \u0077\u0069t\u0068\u0020\u0069\u006e\u0064\u0065x\u003a %\u0064\u0020\u0067\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0073",_aeaga .SegmentNumber ,_debg .Error ());};_gade ._cbdg =append (_gade ._cbdg ,_edcb ...);_gade ._aeac +=_egefd .NumberOfExportedSymbols ;};};return nil ;};type Type int ;func (_fdgf *SymbolDictionary )setSymbolsArray ()error {if _fdgf ._cbdg ==nil {if _ccac :=_fdgf .retrieveImportSymbols ();_ccac !=nil {return _ccac ;};};if _fdgf ._bbee ==nil {_fdgf ._bbee =append (_fdgf ._bbee ,_fdgf ._cbdg ...);};return nil ;};func (_cagc *template1 )setIndex (_ecf *_de .DecoderStats ){_ecf .SetIndex (0x080)};var _ templater =&template0 {};func (_cbda *PatternDictionary )readTemplate ()error {_aefb ,_bgde :=_cbda ._cdbb .ReadBits (2);if _bgde !=nil {return _bgde ;};_cbda .HDTemplate =byte (_aefb );return nil ;};func (_gaab *SymbolDictionary )setRefinementAtPixels ()error {if !_gaab .UseRefinementAggregation ||_gaab .SdrTemplate !=0{return nil ;};if _bce :=_gaab .readRefinementAtPixels (2);_bce !=nil {return _bce ;};return nil ;};func (_cgeb *GenericRegion )Init (h *Header ,r _f .StreamReader )error {_cgeb .RegionSegment =NewRegionSegment (r );_cgeb ._gge =r ;return _cgeb .parseHeader ();};func (_aabe *PatternDictionary )parseHeader ()error {_gbd .Log .Trace ("\u005b\u0050\u0041\u0054\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054I\u004f\u004e\u0041\u0052\u0059\u005d[\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d\u0020b\u0065\u0067\u0069\u006e");defer func (){_gbd .Log .Trace ("\u005b\u0050\u0041T\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u005b\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");}();_ ,_cae :=_aabe ._cdbb .ReadBits (5);if _cae !=nil {return _cae ;};if _cae =_aabe .readTemplate ();_cae !=nil {return _cae ;};if _cae =_aabe .readIsMMREncoded ();_cae !=nil {return _cae ;};if _cae =_aabe .readPatternWidthAndHeight ();_cae !=nil {return _cae ;};if _cae =_aabe .readGrayMax ();_cae !=nil {return _cae ;};if _cae =_aabe .computeSegmentDataStructure ();_cae !=nil {return _cae ;};return _aabe .checkInput ();};func (_dcfe *PageInformationSegment )CombinationOperatorOverrideAllowed ()bool {return _dcfe ._bfac };func (_ff *EndOfStripe )LineNumber ()int {return _ff ._ag };func (_gcfe *SymbolDictionary )Init (h *Header ,r _f .StreamReader )error {_gcfe .Header =h ;_gcfe ._dccg =r ;return _gcfe .parseHeader ();};func (_eadf *TextRegion )setCodingStatistics ()error {if _eadf ._fdad ==nil {_eadf ._fdad =_de .NewStats (512,1);};if _eadf ._daggf ==nil {_eadf ._daggf =_de .NewStats (512,1);};if _eadf ._fggda ==nil {_eadf ._fggda =_de .NewStats (512,1);};if _eadf ._feaf ==nil {_eadf ._feaf =_de .NewStats (512,1);};if _eadf ._egcd ==nil {_eadf ._egcd =_de .NewStats (512,1);};if _eadf ._dceb ==nil {_eadf ._dceb =_de .NewStats (512,1);};if _eadf ._beeed ==nil {_eadf ._beeed =_de .NewStats (512,1);};if _eadf ._eagc ==nil {_eadf ._eagc =_de .NewStats (1<<uint (_eadf ._cecg ),1);};if _eadf ._cfea ==nil {_eadf ._cfea =_de .NewStats (512,1);};if _eadf ._agfb ==nil {_eadf ._agfb =_de .NewStats (512,1);};if _eadf ._dbeg ==nil {var _ffd error ;_eadf ._dbeg ,_ffd =_de .New (_eadf ._egeae );if _ffd !=nil {return _ffd ;};};return nil ;};func (_gdgbg *PageInformationSegment )readWidthAndHeight ()error {_egcc ,_edbc :=_gdgbg ._cgba .ReadBits (32);if _edbc !=nil {return _edbc ;};_gdgbg .PageBMWidth =int (_egcc &_g .MaxInt32 );_egcc ,_edbc =_gdgbg ._cgba .ReadBits (32);if _edbc !=nil {return _edbc ;};_gdgbg .PageBMHeight =int (_egcc &_g .MaxInt32 );return nil ;};type template0 struct{};func (_daaf *Header )parse (_dceg Documenter ,_deag _f .StreamReader ,_ceaa int64 ,_fdac OrganizationType )(_eccg error ){const _ffecf ="\u0070\u0061\u0072s\u0065";_gbd .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u005b\u0050A\u0052\u0053\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _eccg !=nil {_gbd .Log .Trace ("\u005b\u0053\u0045GM\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045R\u005d[\u0050A\u0052S\u0045\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_eccg );}else {_gbd .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052]\u005bP\u0041\u0052\u0053\u0045\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");};}();_ ,_eccg =_deag .Seek (_ceaa ,_b .SeekStart );if _eccg !=nil {return _c .Wrap (_eccg ,_ffecf ,"\u0073\u0065\u0065\u006b\u0020\u0073\u0074\u0061\u0072\u0074");};if _eccg =_daaf .readSegmentNumber (_deag );_eccg !=nil {return _c .Wrap (_eccg ,_ffecf ,"");};if _eccg =_daaf .readHeaderFlags ();_eccg !=nil {return _c .Wrap (_eccg ,_ffecf ,"");};var _addb uint64 ;_addb ,_eccg =_daaf .readNumberOfReferredToSegments (_deag );if _eccg !=nil {return _c .Wrap (_eccg ,_ffecf ,"");};_daaf .RTSNumbers ,_eccg =_daaf .readReferredToSegmentNumbers (_deag ,int (_addb ));if _eccg !=nil {return _c .Wrap (_eccg ,_ffecf ,"");};_eccg =_daaf .readSegmentPageAssociation (_dceg ,_deag ,_addb ,_daaf .RTSNumbers ...);if _eccg !=nil {return _c .Wrap (_eccg ,_ffecf ,"");};if _daaf .Type !=TEndOfFile {if _eccg =_daaf .readSegmentDataLength (_deag );_eccg !=nil {return _c .Wrap (_eccg ,_ffecf ,"");};};_daaf .readDataStartOffset (_deag ,_fdac );_daaf .readHeaderLength (_deag ,_ceaa );_gbd .Log .Trace ("\u0025\u0073",_daaf );return nil ;};func (_eccf *SymbolDictionary )readRegionFlags ()error {var (_bcdfe uint64 ;_bdba int ;);_ ,_gacg :=_eccf ._dccg .ReadBits (3);if _gacg !=nil {return _gacg ;};_bdba ,_gacg =_eccf ._dccg .ReadBit ();if _gacg !=nil {return _gacg ;};_eccf .SdrTemplate =int8 (_bdba );_bcdfe ,_gacg =_eccf ._dccg .ReadBits (2);if _gacg !=nil {return _gacg ;};_eccf .SdTemplate =int8 (_bcdfe &0xf);_bdba ,_gacg =_eccf ._dccg .ReadBit ();if _gacg !=nil {return _gacg ;};if _bdba ==1{_eccf ._ccefc =true ;};_bdba ,_gacg =_eccf ._dccg .ReadBit ();if _gacg !=nil {return _gacg ;};if _bdba ==1{_eccf ._ffcd =true ;};_bdba ,_gacg =_eccf ._dccg .ReadBit ();if _gacg !=nil {return _gacg ;};if _bdba ==1{_eccf .SdHuffAggInstanceSelection =true ;};_bdba ,_gacg =_eccf ._dccg .ReadBit ();if _gacg !=nil {return _gacg ;};_eccf .SdHuffBMSizeSelection =int8 (_bdba );_bcdfe ,_gacg =_eccf ._dccg .ReadBits (2);if _gacg !=nil {return _gacg ;};_eccf .SdHuffDecodeWidthSelection =int8 (_bcdfe &0xf);_bcdfe ,_gacg =_eccf ._dccg .ReadBits (2);if _gacg !=nil {return _gacg ;};_eccf .SdHuffDecodeHeightSelection =int8 (_bcdfe &0xf);_bdba ,_gacg =_eccf ._dccg .ReadBit ();if _gacg !=nil {return _gacg ;};if _bdba ==1{_eccf .UseRefinementAggregation =true ;};_bdba ,_gacg =_eccf ._dccg .ReadBit ();if _gacg !=nil {return _gacg ;};if _bdba ==1{_eccf .IsHuffmanEncoded =true ;};return nil ;};func (_dabf *SymbolDictionary )decodeThroughTextRegion (_aaae ,_gcdae ,_gebg uint32 )error {if _dabf ._agg ==nil {_dabf ._agg =_abge (_dabf ._dccg ,nil );_dabf ._agg .setContexts (_dabf ._bebgc ,_de .NewStats (512,1),_de .NewStats (512,1),_de .NewStats (512,1),_de .NewStats (512,1),_dabf ._fggg ,_de .NewStats (512,1),_de .NewStats (512,1),_de .NewStats (512,1),_de .NewStats (512,1));};if _fagd :=_dabf .setSymbolsArray ();_fagd !=nil {return _fagd ;};_dabf ._agg .setParameters (_dabf ._fffa ,_dabf .IsHuffmanEncoded ,true ,_aaae ,_gcdae ,_gebg ,1,_dabf ._aeac +_dabf ._aaag ,0,0,0,1,0,0,0,0,0,0,0,0,0,_dabf .SdrTemplate ,_dabf .SdrATX ,_dabf .SdrATY ,_dabf ._bbee ,_dabf ._dccff );return _dabf .addSymbol (_dabf ._agg );};func (_eeg *PageInformationSegment )Encode (w _f .BinaryWriter )(_afb int ,_aaed error ){const _bgdb ="\u0050\u0061g\u0065\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u002e\u0045\u006eco\u0064\u0065";_adaf :=make ([]byte ,4);_e .BigEndian .PutUint32 (_adaf ,uint32 (_eeg .PageBMWidth ));_afb ,_aaed =w .Write (_adaf );if _aaed !=nil {return _afb ,_c .Wrap (_aaed ,_bgdb ,"\u0077\u0069\u0064t\u0068");};_e .BigEndian .PutUint32 (_adaf ,uint32 (_eeg .PageBMHeight ));var _dec int ;_dec ,_aaed =w .Write (_adaf );if _aaed !=nil {return _dec +_afb ,_c .Wrap (_aaed ,_bgdb ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_afb +=_dec ;_e .BigEndian .PutUint32 (_adaf ,uint32 (_eeg .ResolutionX ));_dec ,_aaed =w .Write (_adaf );if _aaed !=nil {return _dec +_afb ,_c .Wrap (_aaed ,_bgdb ,"\u0078\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_afb +=_dec ;_e .BigEndian .PutUint32 (_adaf ,uint32 (_eeg .ResolutionY ));if _dec ,_aaed =w .Write (_adaf );_aaed !=nil {return _dec +_afb ,_c .Wrap (_aaed ,_bgdb ,"\u0079\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_afb +=_dec ;if _aaed =_eeg .encodeFlags (w );_aaed !=nil {return _afb ,_c .Wrap (_aaed ,_bgdb ,"");};_afb ++;if _dec ,_aaed =_eeg .encodeStripingInformation (w );_aaed !=nil {return _afb ,_c .Wrap (_aaed ,_bgdb ,"");};_afb +=_dec ;return _afb ,nil ;};type GenericRegion struct{_gge _f .StreamReader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;UseExtTemplates bool ;IsTPGDon bool ;GBTemplate byte ;IsMMREncoded bool ;UseMMR bool ;GBAtX []int8 ;GBAtY []int8 ;GBAtOverride []bool ;_deec bool ;Bitmap *_gb .Bitmap ;_egff *_de .Decoder ;_gef *_de .DecoderStats ;_afg *_fb .Decoder ;};func (_cab *TextRegion )decodeRI ()(int64 ,error ){if !_cab .UseRefinement {return 0,nil ;};if _cab .IsHuffmanEncoded {_dgeg ,_eafe :=_cab ._egeae .ReadBit ();return int64 (_dgeg ),_eafe ;};_gadf ,_bade :=_cab ._dbeg .DecodeInt (_cab ._egcd );return int64 (_gadf ),_bade ;};func (_gbgb *TextRegion )readHuffmanFlags ()error {var (_afee int ;_bbacf uint64 ;_fefa error ;);_ ,_fefa =_gbgb ._egeae .ReadBit ();if _fefa !=nil {return _fefa ;};_afee ,_fefa =_gbgb ._egeae .ReadBit ();if _fefa !=nil {return _fefa ;};_gbgb .SbHuffRSize =int8 (_afee );_bbacf ,_fefa =_gbgb ._egeae .ReadBits (2);if _fefa !=nil {return _fefa ;};_gbgb .SbHuffRDY =int8 (_bbacf )&0xf;_bbacf ,_fefa =_gbgb ._egeae .ReadBits (2);if _fefa !=nil {return _fefa ;};_gbgb .SbHuffRDX =int8 (_bbacf )&0xf;_bbacf ,_fefa =_gbgb ._egeae .ReadBits (2);if _fefa !=nil {return _fefa ;};_gbgb .SbHuffRDHeight =int8 (_bbacf )&0xf;_bbacf ,_fefa =_gbgb ._egeae .ReadBits (2);if _fefa !=nil {return _fefa ;};_gbgb .SbHuffRDWidth =int8 (_bbacf )&0xf;_bbacf ,_fefa =_gbgb ._egeae .ReadBits (2);if _fefa !=nil {return _fefa ;};_gbgb .SbHuffDT =int8 (_bbacf )&0xf;_bbacf ,_fefa =_gbgb ._egeae .ReadBits (2);if _fefa !=nil {return _fefa ;};_gbgb .SbHuffDS =int8 (_bbacf )&0xf;_bbacf ,_fefa =_gbgb ._egeae .ReadBits (2);if _fefa !=nil {return _fefa ;};_gbgb .SbHuffFS =int8 (_bbacf )&0xf;return nil ;};func (_dfb *GenericRefinementRegion )String ()string {_cee :=&_ec .Builder {};_cee .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_cee .WriteString (_dfb .RegionInfo .String ()+"\u000a");_cee .WriteString (_da .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0052\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_dfb .IsTPGROn ));_cee .WriteString (_da .Sprintf ("\u0009-\u0020T\u0065\u006d\u0070\u006c\u0061t\u0065\u0049D\u003a\u0020\u0025\u0076\u000a",_dfb .TemplateID ));_cee .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_dfb .GrAtX ));_cee .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_dfb .GrAtY ));_cee .WriteString (_da .Sprintf ("\u0009-\u0020R\u0065\u0066\u0065\u0072\u0065n\u0063\u0065D\u0058\u0020\u0025\u0076\u000a",_dfb .ReferenceDX ));_cee .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0052ef\u0065\u0072\u0065\u006e\u0063\u0044\u0065\u0059\u003a\u0020\u0025\u0076\u000a",_dfb .ReferenceDY ));return _cee .String ();};func (_cfdge *TextRegion )String ()string {_gbde :=&_ec .Builder {};_gbde .WriteString ("\u000a[\u0054E\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u000a");_gbde .WriteString (_cfdge .RegionInfo .String ()+"\u000a");_gbde .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0053br\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0025\u0076\u000a",_cfdge .SbrTemplate ));_gbde .WriteString (_da .Sprintf ("\u0009-\u0020S\u0062\u0044\u0073\u004f\u0066f\u0073\u0065t\u003a\u0020\u0025\u0076\u000a",_cfdge .SbDsOffset ));_gbde .WriteString (_da .Sprintf ("\t\u002d \u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0050i\u0078\u0065\u006c\u003a %\u0076\u000a",_cfdge .DefaultPixel ));_gbde .WriteString (_da .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0076\u000a",_cfdge .CombinationOperator ));_gbde .WriteString (_da .Sprintf ("\t\u002d \u0049\u0073\u0054\u0072\u0061\u006e\u0073\u0070o\u0073\u0065\u0064\u003a %\u0076\u000a",_cfdge .IsTransposed ));_gbde .WriteString (_da .Sprintf ("\u0009\u002d\u0020Re\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0043\u006f\u0072\u006e\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_cfdge .ReferenceCorner ));_gbde .WriteString (_da .Sprintf ("\t\u002d\u0020\u0055\u0073eR\u0065f\u0069\u006e\u0065\u006d\u0065n\u0074\u003a\u0020\u0025\u0076\u000a",_cfdge .UseRefinement ));_gbde .WriteString (_da .Sprintf ("\u0009-\u0020\u0049\u0073\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045n\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0076\u000a",_cfdge .IsHuffmanEncoded ));if _cfdge .IsHuffmanEncoded {_gbde .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_cfdge .SbHuffRSize ));_gbde .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0059:\u0020\u0025\u0076\u000a",_cfdge .SbHuffRDY ));_gbde .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0058:\u0020\u0025\u0076\u000a",_cfdge .SbHuffRDX ));_gbde .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069\u0067\u0068\u0074\u003a\u0020\u0025v\u000a",_cfdge .SbHuffRDHeight ));_gbde .WriteString (_da .Sprintf ("\t\u002d\u0020\u0053\u0062Hu\u0066f\u0052\u0044\u0057\u0069\u0064t\u0068\u003a\u0020\u0025\u0076\u000a",_cfdge .SbHuffRDWidth ));_gbde .WriteString (_da .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0054\u003a\u0020\u0025\u0076\u000a",_cfdge .SbHuffDT ));_gbde .WriteString (_da .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0053\u003a\u0020\u0025\u0076\u000a",_cfdge .SbHuffDS ));_gbde .WriteString (_da .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0046\u0053\u003a\u0020\u0025\u0076\u000a",_cfdge .SbHuffFS ));};_gbde .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_cfdge .SbrATX ));_gbde .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0059:\u0020\u0025\u0076\u000a",_cfdge .SbrATY ));_gbde .WriteString (_da .Sprintf ("\u0009\u002d\u0020N\u0075\u006d\u0062\u0065r\u004f\u0066\u0053\u0079\u006d\u0062\u006fl\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_cfdge .NumberOfSymbolInstances ));_gbde .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_cfdge .SbrATX ));return _gbde .String ();};func (_dfbg *PatternDictionary )extractPatterns (_bgac *_gb .Bitmap )error {var _gccce int ;_ccb :=make ([]*_gb .Bitmap ,_dfbg .GrayMax +1);for _gccce <=int (_dfbg .GrayMax ){_gfga :=int (_dfbg .HdpWidth )*_gccce ;_bbcf :=_a .Rect (_gfga ,0,_gfga +int (_dfbg .HdpWidth ),int (_dfbg .HdpHeight ));_baeg ,_fabc :=_gb .Extract (_bbcf ,_bgac );if _fabc !=nil {return _fabc ;};_ccb [_gccce ]=_baeg ;_gccce ++;};_dfbg .Patterns =_ccb ;return nil ;};func (_gga *GenericRegion )String ()string {_gbf :=&_ec .Builder {};_gbf .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_gbf .WriteString (_gga .RegionSegment .String ()+"\u000a");_gbf .WriteString (_da .Sprintf ("\u0009\u002d\u0020Us\u0065\u0045\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_gga .UseExtTemplates ));_gbf .WriteString (_da .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0044\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_gga .IsTPGDon ));_gbf .WriteString (_da .Sprintf ("\u0009-\u0020G\u0042\u0054\u0065\u006d\u0070l\u0061\u0074e\u003a\u0020\u0025\u0064\u000a",_gga .GBTemplate ));_gbf .WriteString (_da .Sprintf ("\t\u002d \u0049\u0073\u004d\u004d\u0052\u0045\u006e\u0063o\u0064\u0065\u0064\u003a %\u0076\u000a",_gga .IsMMREncoded ));_gbf .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_gga .GBAtX ));_gbf .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_gga .GBAtY ));_gbf .WriteString (_da .Sprintf ("\t\u002d \u0047\u0042\u0041\u0074\u004f\u0076\u0065\u0072r\u0069\u0064\u0065\u003a %\u0076\u000a",_gga .GBAtOverride ));return _gbf .String ();};func (_fded *PageInformationSegment )readIsStriped ()error {_fgd ,_gbdcg :=_fded ._cgba .ReadBit ();if _gbdcg !=nil {return _gbdcg ;};if _fgd ==1{_fded .IsStripe =true ;};return nil ;};func (_agdb *SymbolDictionary )encodeSymbols (_ecab _f .BinaryWriter )(_agcg int ,_aafe error ){const _fcbe ="\u0065\u006e\u0063o\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c";_dafa :=_eb .New ();_dafa .Init ();_bbce ,_aafe :=_agdb ._fcee .SelectByIndexes (_agdb ._efcb );if _aafe !=nil {return 0,_c .Wrap (_aafe ,_fcbe ,"\u0069n\u0069\u0074\u0069\u0061\u006c");};_geabb :=map[*_gb .Bitmap ]int {};for _ebea ,_dage :=range _bbce .Values {_geabb [_dage ]=_ebea ;};_bbce .SortByHeight ();var _gfbde ,_egaab int ;_bcgg ,_aafe :=_bbce .GroupByHeight ();if _aafe !=nil {return 0,_c .Wrap (_aafe ,_fcbe ,"");};for _ ,_dagec :=range _bcgg .Values {_fcdc :=_dagec .Values [0].Height ;_egbbd :=_fcdc -_gfbde ;if _aafe =_dafa .EncodeInteger (_eb .IADH ,_egbbd );_aafe !=nil {return 0,_c .Wrapf (_aafe ,_fcbe ,"\u0049\u0041\u0044\u0048\u0020\u0066\u006f\u0072\u0020\u0064\u0068\u003a \u0027\u0025\u0064\u0027",_egbbd );};_gfbde =_fcdc ;_dgabb ,_dgef :=_dagec .GroupByWidth ();if _dgef !=nil {return 0,_c .Wrapf (_dgef ,_fcbe ,"\u0068\u0065\u0069g\u0068\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_fcdc );};var _fdef int ;for _ ,_ggf :=range _dgabb .Values {for _ ,_ebacd :=range _ggf .Values {_fccb :=_ebacd .Width ;_ggdf :=_fccb -_fdef ;if _dgef =_dafa .EncodeInteger (_eb .IADW ,_ggdf );_dgef !=nil {return 0,_c .Wrapf (_dgef ,_fcbe ,"\u0049\u0041\u0044\u0057\u0020\u0066\u006f\u0072\u0020\u0064\u0077\u003a \u0027\u0025\u0064\u0027",_ggdf );};_fdef +=_ggdf ;if _dgef =_dafa .EncodeBitmap (_ebacd ,false );_dgef !=nil {return 0,_c .Wrapf (_dgef ,_fcbe ,"H\u0065i\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u0020W\u0069\u0064\u0074\u0068: \u0025\u0064",_fcdc ,_fccb );};_gbgc :=_geabb [_ebacd ];_agdb ._cdgef [_gbgc ]=_egaab ;_egaab ++;};};if _dgef =_dafa .EncodeOOB (_eb .IADW );_dgef !=nil {return 0,_c .Wrap (_dgef ,_fcbe ,"\u0049\u0041\u0044\u0057");};};if _aafe =_dafa .EncodeInteger (_eb .IAEX ,0);_aafe !=nil {return 0,_c .Wrap (_aafe ,_fcbe ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};if _aafe =_dafa .EncodeInteger (_eb .IAEX ,len (_agdb ._efcb ));_aafe !=nil {return 0,_c .Wrap (_aafe ,_fcbe ,"\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0073\u0079m\u0062\u006f\u006c\u0073");};_dafa .Final ();_dbde ,_aafe :=_dafa .WriteTo (_ecab );if _aafe !=nil {return 0,_c .Wrap (_aafe ,_fcbe ,"\u0077\u0072i\u0074\u0069\u006e\u0067 \u0065\u006ec\u006f\u0064\u0065\u0072\u0020\u0063\u006f\u006et\u0065\u0078\u0074\u0020\u0074\u006f\u0020\u0027\u0077\u0027\u0020\u0077r\u0069\u0074\u0065\u0072");};return int (_dbde ),nil ;};func (_fdeb *TextRegion )decodeIb (_bbedd ,_fceed int64 )(*_gb .Bitmap ,error ){const _eaaf ="\u0064\u0065\u0063\u006f\u0064\u0065\u0049\u0062";var (_febc error ;_afgg *_gb .Bitmap ;);if _bbedd ==0{if int (_fceed )> len (_fdeb .Symbols )-1{return nil ,_c .Error (_eaaf ,"\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0049\u0042\u0020\u0062\u0069\u0074\u006d\u0061\u0070\u002e\u0020\u0069\u006e\u0064\u0065x\u0020\u006f\u0075\u0074\u0020o\u0066\u0020r\u0061\u006e\u0067\u0065");};return _fdeb .Symbols [int (_fceed )],nil ;};var _bcagd ,_fcfdf ,_agcd ,_ccffe int64 ;_bcagd ,_febc =_fdeb .decodeRdw ();if _febc !=nil {return nil ,_c .Wrap (_febc ,_eaaf ,"");};_fcfdf ,_febc =_fdeb .decodeRdh ();if _febc !=nil {return nil ,_c .Wrap (_febc ,_eaaf ,"");};_agcd ,_febc =_fdeb .decodeRdx ();if _febc !=nil {return nil ,_c .Wrap (_febc ,_eaaf ,"");};_ccffe ,_febc =_fdeb .decodeRdy ();if _febc !=nil {return nil ,_c .Wrap (_febc ,_eaaf ,"");};if _fdeb .IsHuffmanEncoded {if _ ,_febc =_fdeb .decodeSymInRefSize ();_febc !=nil {return nil ,_c .Wrap (_febc ,_eaaf ,"");};_fdeb ._egeae .Align ();};_adfg :=_fdeb .Symbols [_fceed ];_badc :=uint32 (_adfg .Width );_ebfa :=uint32 (_adfg .Height );_ffbb :=int32 (uint32 (_bcagd )>>1)+int32 (_agcd );_bcffb :=int32 (uint32 (_fcfdf )>>1)+int32 (_ccffe );if _fdeb ._faca ==nil {_fdeb ._faca =_aga (_fdeb ._egeae ,nil );};_fdeb ._faca .setParameters (_fdeb ._bcba ,_fdeb ._dbeg ,_fdeb .SbrTemplate ,_badc +uint32 (_bcagd ),_ebfa +uint32 (_fcfdf ),_adfg ,_ffbb ,_bcffb ,false ,_fdeb .SbrATX ,_fdeb .SbrATY );_afgg ,_febc =_fdeb ._faca .GetRegionBitmap ();if _febc !=nil {return nil ,_c .Wrap (_febc ,_eaaf ,"\u0067\u0072\u0066");};if _fdeb .IsHuffmanEncoded {_fdeb ._egeae .Align ();};return _afgg ,nil ;};func (_faae *RegionSegment )Encode (w _f .BinaryWriter )(_egaa int ,_bdfa error ){const _ebae ="R\u0065g\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065n\u0074\u002e\u0045\u006eco\u0064\u0065";_fbad :=make ([]byte ,4);_e .BigEndian .PutUint32 (_fbad ,_faae .BitmapWidth );_egaa ,_bdfa =w .Write (_fbad );if _bdfa !=nil {return 0,_c .Wrap (_bdfa ,_ebae ,"\u0057\u0069\u0064t\u0068");};_e .BigEndian .PutUint32 (_fbad ,_faae .BitmapHeight );var _gdaf int ;_gdaf ,_bdfa =w .Write (_fbad );if _bdfa !=nil {return 0,_c .Wrap (_bdfa ,_ebae ,"\u0048\u0065\u0069\u0067\u0068\u0074");};_egaa +=_gdaf ;_e .BigEndian .PutUint32 (_fbad ,_faae .XLocation );_gdaf ,_bdfa =w .Write (_fbad );if _bdfa !=nil {return 0,_c .Wrap (_bdfa ,_ebae ,"\u0058L\u006f\u0063\u0061\u0074\u0069\u006fn");};_egaa +=_gdaf ;_e .BigEndian .PutUint32 (_fbad ,_faae .YLocation );_gdaf ,_bdfa =w .Write (_fbad );if _bdfa !=nil {return 0,_c .Wrap (_bdfa ,_ebae ,"\u0059L\u006f\u0063\u0061\u0074\u0069\u006fn");};_egaa +=_gdaf ;if _bdfa =w .WriteByte (byte (_faae .CombinaionOperator )&0x07);_bdfa !=nil {return 0,_c .Wrap (_bdfa ,_ebae ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};_egaa ++;return _egaa ,nil ;};func (_ffff *HalftoneRegion )renderPattern (_efd [][]int )(_afdg error ){var _dbac ,_geabd int ;for _dda :=0;_dda < int (_ffff .HGridHeight );_dda ++{for _eeeb :=0;_eeeb < int (_ffff .HGridWidth );_eeeb ++{_dbac =_ffff .computeX (_dda ,_eeeb );_geabd =_ffff .computeY (_dda ,_eeeb );_fbfb :=_ffff .Patterns [_efd [_dda ][_eeeb ]];if _afdg =_gb .Blit (_fbfb ,_ffff .HalftoneRegionBitmap ,_dbac +int (_ffff .HGridX ),_geabd +int (_ffff .HGridY ),_ffff .CombinationOperator );_afdg !=nil {return _afdg ;};};};return nil ;};func (_cfeba *TextRegion )decodeCurrentT ()(int64 ,error ){if _cfeba .SbStrips !=1{if _cfeba .IsHuffmanEncoded {_cdff ,_aceea :=_cfeba ._egeae .ReadBits (byte (_cfeba .LogSBStrips ));return int64 (_cdff ),_aceea ;};_ddeg ,_daea :=_cfeba ._dbeg .DecodeInt (_cfeba ._feaf );if _daea !=nil {return 0,_daea ;};return int64 (_ddeg ),nil ;};return 0,nil ;};func (_bgeb *TextRegion )createRegionBitmap ()error {_bgeb .RegionBitmap =_gb .New (int (_bgeb .RegionInfo .BitmapWidth ),int (_bgeb .RegionInfo .BitmapHeight ));if _bgeb .DefaultPixel !=0{_bgeb .RegionBitmap .SetDefaultPixel ();};return nil ;};func (_cgce *PageInformationSegment )readIsLossless ()error {_dbcf ,_fecc :=_cgce ._cgba .ReadBit ();if _fecc !=nil {return _fecc ;};if _dbcf ==1{_cgce .IsLossless =true ;};return nil ;};func (_bbfg *TableSegment )parseHeader ()error {var (_deac int ;_aega uint64 ;_ffbd error ;);_deac ,_ffbd =_bbfg ._caea .ReadBit ();if _ffbd !=nil {return _ffbd ;};if _deac ==1{return _da .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0061\u0062\u006c\u0065 \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0064e\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u002e\u0020\u0042\u002e\u0032\u002e1\u0020\u0043\u006f\u0064\u0065\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0042\u0069\u0074\u0020\u0037\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u007a\u0065\u0072\u006f\u002e\u0020\u0057a\u0073\u003a \u0025\u0064",_deac );};if _aega ,_ffbd =_bbfg ._caea .ReadBits (3);_ffbd !=nil {return _ffbd ;};_bbfg ._cbegc =(int32 (_aega )+1)&0xf;if _aega ,_ffbd =_bbfg ._caea .ReadBits (3);_ffbd !=nil {return _ffbd ;};_bbfg ._fcbb =(int32 (_aega )+1)&0xf;if _aega ,_ffbd =_bbfg ._caea .ReadBits (32);_ffbd !=nil {return _ffbd ;};_bbfg ._aedc =int32 (_aega &_g .MaxInt32 );if _aega ,_ffbd =_bbfg ._caea .ReadBits (32);_ffbd !=nil {return _ffbd ;};_bbfg ._fbed =int32 (_aega &_g .MaxInt32 );return nil ;};func (_gefa *TextRegion )encodeSymbols (_ddg _f .BinaryWriter )(_dgbad int ,_aadcb error ){const _abdbd ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";_bfbb :=make ([]byte ,4);_e .BigEndian .PutUint32 (_bfbb ,_gefa .NumberOfSymbols );if _dgbad ,_aadcb =_ddg .Write (_bfbb );_aadcb !=nil {return _dgbad ,_c .Wrap (_aadcb ,_abdbd ,"\u004e\u0075\u006dbe\u0072\u004f\u0066\u0053\u0079\u006d\u0062\u006f\u006c\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073");};_bbcb ,_aadcb :=_gb .NewClassedPoints (_gefa ._efbga ,_gefa ._bad );if _aadcb !=nil {return 0,_c .Wrap (_aadcb ,_abdbd ,"");};var _eegc ,_gbgf int ;_afeg :=_eb .New ();_afeg .Init ();if _aadcb =_afeg .EncodeInteger (_eb .IADT ,0);_aadcb !=nil {return _dgbad ,_c .Wrap (_aadcb ,_abdbd ,"\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0020\u0044\u0054");};_dbeb ,_aadcb :=_bbcb .GroupByY ();if _aadcb !=nil {return 0,_c .Wrap (_aadcb ,_abdbd ,"");};for _ ,_gfeb :=range _dbeb {_acaa :=int (_gfeb .YAtIndex (0));_gafg :=_acaa -_eegc ;if _aadcb =_afeg .EncodeInteger (_eb .IADT ,_gafg );_aadcb !=nil {return _dgbad ,_c .Wrap (_aadcb ,_abdbd ,"");};var _ggce int ;for _dbgg ,_edfe :=range _gfeb .IntSlice {switch _dbgg {case 0:_ecea :=int (_gfeb .XAtIndex (_dbgg ))-_gbgf ;if _aadcb =_afeg .EncodeInteger (_eb .IAFS ,_ecea );_aadcb !=nil {return _dgbad ,_c .Wrap (_aadcb ,_abdbd ,"");};_gbgf +=_ecea ;_ggce =_gbgf ;default:_dgff :=int (_gfeb .XAtIndex (_dbgg ))-_ggce ;if _aadcb =_afeg .EncodeInteger (_eb .IADS ,_dgff );_aadcb !=nil {return _dgbad ,_c .Wrap (_aadcb ,_abdbd ,"");};_ggce +=_dgff ;};_aeagae ,_dcfg :=_gefa ._bfae .Get (_edfe );if _dcfg !=nil {return _dgbad ,_c .Wrap (_dcfg ,_abdbd ,"");};_cbac ,_baff :=_gefa ._cebe [_aeagae ];if !_baff {_cbac ,_baff =_gefa ._dgee [_aeagae ];if !_baff {return _dgbad ,_c .Errorf (_abdbd ,"\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027\u0025d\u0027\u0020\u0069s\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064 \u0069\u006e\u0020\u0067\u006cob\u0061\u006c\u0020\u0061\u006e\u0064\u0020\u006c\u006f\u0063\u0061\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020\u006d\u0061\u0070",_aeagae );};};if _dcfg =_afeg .EncodeIAID (_gefa ._baca ,_cbac );_dcfg !=nil {return _dgbad ,_c .Wrap (_dcfg ,_abdbd ,"");};};if _aadcb =_afeg .EncodeOOB (_eb .IADS );_aadcb !=nil {return _dgbad ,_c .Wrap (_aadcb ,_abdbd ,"");};};_afeg .Final ();_bafc ,_aadcb :=_afeg .WriteTo (_ddg );if _aadcb !=nil {return _dgbad ,_c .Wrap (_aadcb ,_abdbd ,"");};_dgbad +=int (_bafc );return _dgbad ,nil ;};func (_abff *Header )referenceSize ()uint {switch {case _abff .SegmentNumber <=255:return 1;case _abff .SegmentNumber <=65535:return 2;default:return 4;};};func (_bfaf *SymbolDictionary )InitEncode (symbols *_gb .Bitmaps ,symbolList []int ,symbolMap map[int ]int ,unborderSymbols bool )error {const _dcae ="S\u0079\u006d\u0062\u006f\u006c\u0044i\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002eI\u006e\u0069\u0074E\u006ec\u006f\u0064\u0065";_bfaf .SdATX =[]int8 {3,-3,2,-2};_bfaf .SdATY =[]int8 {-1,-1,-2,-2};_bfaf ._fcee =symbols ;_bfaf ._efcb =make ([]int ,len (symbolList ));copy (_bfaf ._efcb ,symbolList );if len (_bfaf ._efcb )!=_bfaf ._fcee .Size (){return _c .Error (_dcae ,"s\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0061\u006e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u004ci\u0073\u0074\u0020\u006f\u0066\u0020\u0064\u0069\u0066\u0066er\u0065\u006e\u0074 \u0073i\u007a\u0065");};_bfaf .NumberOfNewSymbols =uint32 (symbols .Size ());_bfaf .NumberOfExportedSymbols =uint32 (symbols .Size ());_bfaf ._cdgef =symbolMap ;_bfaf ._cfg =unborderSymbols ;return nil ;};func (_bgg *GenericRegion )decodeTemplate0a (_agb ,_bdff ,_gca int ,_agaa ,_bcdg int )(_bcge error ){const _adeb ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0061";var (_bbec ,_ccc int ;_cggd ,_ebef int ;_aea byte ;_bdbb int ;);if _agb >=1{_aea ,_bcge =_bgg .Bitmap .GetByte (_bcdg );if _bcge !=nil {return _c .Wrap (_bcge ,_adeb ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_cggd =int (_aea );};if _agb >=2{_aea ,_bcge =_bgg .Bitmap .GetByte (_bcdg -_bgg .Bitmap .RowStride );if _bcge !=nil {return _c .Wrap (_bcge ,_adeb ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_ebef =int (_aea )<<6;};_bbec =(_cggd &0xf0)|(_ebef &0x3800);for _bede :=0;_bede < _gca ;_bede =_bdbb {var (_cdfe byte ;_afcd int ;);_bdbb =_bede +8;if _cda :=_bdff -_bede ;_cda > 8{_afcd =8;}else {_afcd =_cda ;};if _agb > 0{_cggd <<=8;if _bdbb < _bdff {_aea ,_bcge =_bgg .Bitmap .GetByte (_bcdg +1);if _bcge !=nil {return _c .Wrap (_bcge ,_adeb ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_cggd |=int (_aea );};};if _agb > 1{_aadb :=_bcdg -_bgg .Bitmap .RowStride +1;_ebef <<=8;if _bdbb < _bdff {_aea ,_bcge =_bgg .Bitmap .GetByte (_aadb );if _bcge !=nil {return _c .Wrap (_bcge ,_adeb ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_ebef |=int (_aea )<<6;}else {_ebef |=0;};};for _cec :=0;_cec < _afcd ;_cec ++{_eea :=uint (7-_cec );if _bgg ._deec {_ccc =_bgg .overrideAtTemplate0a (_bbec ,_bede +_cec ,_agb ,int (_cdfe ),_cec ,int (_eea ));_bgg ._gef .SetIndex (int32 (_ccc ));}else {_bgg ._gef .SetIndex (int32 (_bbec ));};var _dfca int ;_dfca ,_bcge =_bgg ._egff .DecodeBit (_bgg ._gef );if _bcge !=nil {return _c .Wrap (_bcge ,_adeb ,"");};_cdfe |=byte (_dfca )<<_eea ;_bbec =((_bbec &0x7bf7)<<1)|_dfca |((_cggd >>_eea )&0x10)|((_ebef >>_eea )&0x800);};if _dfbd :=_bgg .Bitmap .SetByte (_agaa ,_cdfe );_dfbd !=nil {return _c .Wrap (_dfbd ,_adeb ,"");};_agaa ++;_bcdg ++;};return nil ;};func (_beae *SymbolDictionary )getSbSymCodeLen ()int8 {_afabg :=int8 (_g .Ceil (_g .Log (float64 (_beae ._aeac +_beae .NumberOfNewSymbols ))/_g .Log (2)));if _beae .IsHuffmanEncoded &&_afabg < 1{return 1;};return _afabg ;};var _ templater =&template1 {};func (_cde *TextRegion )decodeIds ()(int64 ,error ){const _eage ="\u0064e\u0063\u006f\u0064\u0065\u0049\u0064s";if _cde .IsHuffmanEncoded {if _cde .SbHuffDS ==3{if _cde ._aeebe ==nil {_gffa :=0;if _cde .SbHuffFS ==3{_gffa ++;};var _ebeaa error ;_cde ._aeebe ,_ebeaa =_cde .getUserTable (_gffa );if _ebeaa !=nil {return 0,_c .Wrap (_ebeaa ,_eage ,"");};};return _cde ._aeebe .Decode (_cde ._egeae );};_fcde ,_aecc :=_gea .GetStandardTable (8+int (_cde .SbHuffDS ));if _aecc !=nil {return 0,_c .Wrap (_aecc ,_eage ,"");};return _fcde .Decode (_cde ._egeae );};_abfa ,_efcac :=_cde ._dbeg .DecodeInt (_cde ._fggda );if _efcac !=nil {return 0,_c .Wrap (_efcac ,_eage ,"\u0063\u0078\u0049\u0041\u0044\u0053");};return int64 (_abfa ),nil ;};func (_efa *GenericRegion )setParametersMMR (_fbbg bool ,_dbf ,_gab int64 ,_dga ,_fada uint32 ,_eafa byte ,_dgc ,_gdeg bool ,_cgfg ,_def []int8 ){_efa .DataOffset =_dbf ;_efa .DataLength =_gab ;_efa .RegionSegment =&RegionSegment {};_efa .RegionSegment .BitmapHeight =_dga ;_efa .RegionSegment .BitmapWidth =_fada ;_efa .GBTemplate =_eafa ;_efa .IsMMREncoded =_fbbg ;_efa .IsTPGDon =_dgc ;_efa .GBAtX =_cgfg ;_efa .GBAtY =_def ;};func (_ddad *SymbolDictionary )setAtPixels ()error {if _ddad .IsHuffmanEncoded {return nil ;};_geec :=1;if _ddad .SdTemplate ==0{_geec =4;};if _gdba :=_ddad .readAtPixels (_geec );_gdba !=nil {return _gdba ;};return nil ;};func (_gdga *SymbolDictionary )huffDecodeRefAggNInst ()(int64 ,error ){if !_gdga .SdHuffAggInstanceSelection {_cfcc ,_ceag :=_gea .GetStandardTable (1);if _ceag !=nil {return 0,_ceag ;};return _cfcc .Decode (_gdga ._dccg );};if _gdga ._cfef ==nil {var (_efcbe int ;_gddd error ;);if _gdga .SdHuffDecodeHeightSelection ==3{_efcbe ++;};if _gdga .SdHuffDecodeWidthSelection ==3{_efcbe ++;};if _gdga .SdHuffBMSizeSelection ==3{_efcbe ++;};_gdga ._cfef ,_gddd =_gdga .getUserTable (_efcbe );if _gddd !=nil {return 0,_gddd ;};};return _gdga ._cfef .Decode (_gdga ._dccg );};func (_gged *GenericRegion )decodeTemplate3 (_fbb ,_gfc ,_add int ,_cac ,_aege int )(_dce error ){const _ebfd ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0033";var (_efed ,_cgfbd int ;_ffc int ;_dfg byte ;_dge ,_fgag int ;);if _fbb >=1{_dfg ,_dce =_gged .Bitmap .GetByte (_aege );if _dce !=nil {return _c .Wrap (_dce ,_ebfd ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_ffc =int (_dfg );};_efed =(_ffc >>1)&0x70;for _edgc :=0;_edgc < _add ;_edgc =_dge {var (_gecd byte ;_fegb int ;);_dge =_edgc +8;if _abeb :=_gfc -_edgc ;_abeb > 8{_fegb =8;}else {_fegb =_abeb ;};if _fbb >=1{_ffc <<=8;if _dge < _gfc {_dfg ,_dce =_gged .Bitmap .GetByte (_aege +1);if _dce !=nil {return _c .Wrap (_dce ,_ebfd ,"\u0069\u006e\u006e\u0065\u0072\u0020\u002d\u0020\u006c\u0069\u006e\u0065 \u003e\u003d\u0020\u0031");};_ffc |=int (_dfg );};};for _dddc :=0;_dddc < _fegb ;_dddc ++{if _gged ._deec {_cgfbd =_gged .overrideAtTemplate3 (_efed ,_edgc +_dddc ,_fbb ,int (_gecd ),_dddc );_gged ._gef .SetIndex (int32 (_cgfbd ));}else {_gged ._gef .SetIndex (int32 (_efed ));};_fgag ,_dce =_gged ._egff .DecodeBit (_gged ._gef );if _dce !=nil {return _c .Wrap (_dce ,_ebfd ,"");};_gecd |=byte (_fgag )<<byte (7-_dddc );_efed =((_efed &0x1f7)<<1)|_fgag |((_ffc >>uint (8-_dddc ))&0x010);};if _faa :=_gged .Bitmap .SetByte (_cac ,_gecd );_faa !=nil {return _c .Wrap (_faa ,_ebfd ,"");};_cac ++;_aege ++;};return nil ;};func (_adag *HalftoneRegion )computeX (_gfgg ,_ffec int )int {return _adag .shiftAndFill (int (_adag .HGridX )+_gfgg *int (_adag .HRegionY )+_ffec *int (_adag .HRegionX ));};func (_cfb *PageInformationSegment )readRequiresAuxiliaryBuffer ()error {_gaebd ,_gfa :=_cfb ._cgba .ReadBit ();if _gfa !=nil {return _gfa ;};if _gaebd ==1{_cfb ._bac =true ;};return nil ;};func (_ecd *GenericRefinementRegion )Init (header *Header ,r _f .StreamReader )error {_ecd ._fa =header ;_ecd ._ab =r ;_ecd .RegionInfo =NewRegionSegment (r );return _ecd .parseHeader ();};func _fbdb (_bcgd int )int {if _bcgd ==0{return 0;};_bcgd |=_bcgd >>1;_bcgd |=_bcgd >>2;_bcgd |=_bcgd >>4;_bcgd |=_bcgd >>8;_bcgd |=_bcgd >>16;return (_bcgd +1)>>1;};func (_geaf *SymbolDictionary )encodeATFlags (_ggca _f .BinaryWriter )(_bgfb int ,_daeb error ){const _gbafc ="\u0065\u006e\u0063\u006f\u0064\u0065\u0041\u0054\u0046\u006c\u0061\u0067\u0073";if _geaf .IsHuffmanEncoded ||_geaf .SdTemplate !=0{return 0,nil ;};_cbagc :=4;if _geaf .SdTemplate !=0{_cbagc =1;};for _beccb :=0;_beccb < _cbagc ;_beccb ++{if _daeb =_ggca .WriteByte (byte (_geaf .SdATX [_beccb ]));_daeb !=nil {return _bgfb ,_c .Wrapf (_daeb ,_gbafc ,"\u0053d\u0041\u0054\u0058\u005b\u0025\u0064]",_beccb );};_bgfb ++;if _daeb =_ggca .WriteByte (byte (_geaf .SdATY [_beccb ]));_daeb !=nil {return _bgfb ,_c .Wrapf (_daeb ,_gbafc ,"\u0053d\u0041\u0054\u0059\u005b\u0025\u0064]",_beccb );};_bgfb ++;};return _bgfb ,nil ;};func (_cdd *GenericRegion )Encode (w _f .BinaryWriter )(_eefc int ,_egb error ){const _beee ="G\u0065n\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069o\u006e\u002e\u0045\u006eco\u0064\u0065";if _cdd .Bitmap ==nil {return 0,_c .Error (_beee ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};_ede ,_egb :=_cdd .RegionSegment .Encode (w );if _egb !=nil {return 0,_c .Wrap (_egb ,_beee ,"\u0052\u0065\u0067\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074");};_eefc +=_ede ;if _egb =w .SkipBits (4);_egb !=nil {return _eefc ,_c .Wrap (_egb ,_beee ,"\u0073k\u0069p\u0020\u0072\u0065\u0073\u0065r\u0076\u0065d\u0020\u0062\u0069\u0074\u0073");};var _dcf int ;if _cdd .IsTPGDon {_dcf =1;};if _egb =w .WriteBit (_dcf );_egb !=nil {return _eefc ,_c .Wrap (_egb ,_beee ,"\u0074\u0070\u0067\u0064\u006f\u006e");};_dcf =0;if _egb =w .WriteBit (int (_cdd .GBTemplate >>1)&0x01);_egb !=nil {return _eefc ,_c .Wrap (_egb ,_beee ,"f\u0069r\u0073\u0074\u0020\u0067\u0062\u0074\u0065\u006dp\u006c\u0061\u0074\u0065 b\u0069\u0074");};if _egb =w .WriteBit (int (_cdd .GBTemplate )&0x01);_egb !=nil {return _eefc ,_c .Wrap (_egb ,_beee ,"s\u0065\u0063\u006f\u006ed \u0067b\u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u0062\u0069\u0074");};if _cdd .UseMMR {_dcf =1;};if _egb =w .WriteBit (_dcf );_egb !=nil {return _eefc ,_c .Wrap (_egb ,_beee ,"u\u0073\u0065\u0020\u004d\u004d\u0052\u0020\u0062\u0069\u0074");};_eefc ++;if _ede ,_egb =_cdd .writeGBAtPixels (w );_egb !=nil {return _eefc ,_c .Wrap (_egb ,_beee ,"");};_eefc +=_ede ;_bab :=_eb .New ();if _egb =_bab .EncodeBitmap (_cdd .Bitmap ,_cdd .IsTPGDon );_egb !=nil {return _eefc ,_c .Wrap (_egb ,_beee ,"");};_bab .Final ();var _cgcc int64 ;if _cgcc ,_egb =_bab .WriteTo (w );_egb !=nil {return _eefc ,_c .Wrap (_egb ,_beee ,"");};_eefc +=int (_cgcc );return _eefc ,nil ;};var _ SegmentEncoder =&GenericRegion {};func (_bbb *SymbolDictionary )GetDictionary ()([]*_gb .Bitmap ,error ){_gbd .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c-\u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");defer func (){_gbd .Log .Trace ("\u005b\u0053\u0059M\u0042\u004f\u004c\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");_gbd .Log .Trace ("\u005b\u0053Y\u004d\u0042\u004f\u004c\u002dD\u0049\u0043\u0054\u0049\u004fN\u0041\u0052\u0059\u005d\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020\u000a\u0045\u0078\u003a\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u000a\u006e\u0065\u0077\u003a\u0027\u0025\u0073\u0027",_bbb ._cfff ,_bbb ._fgae );}();if _bbb ._cfff ==nil {var _faegd error ;if _bbb .UseRefinementAggregation {_bbb ._dccff =_bbb .getSbSymCodeLen ();};if !_bbb .IsHuffmanEncoded {if _faegd =_bbb .setCodingStatistics ();_faegd !=nil {return nil ,_faegd ;};};_bbb ._fgae =make ([]*_gb .Bitmap ,_bbb .NumberOfNewSymbols );var _eebg []int ;if _bbb .IsHuffmanEncoded &&!_bbb .UseRefinementAggregation {_eebg =make ([]int ,_bbb .NumberOfNewSymbols );};if _faegd =_bbb .setSymbolsArray ();_faegd !=nil {return nil ,_faegd ;};var _acdc ,_faea int64 ;_bbb ._aaag =0;for _bbb ._aaag < _bbb .NumberOfNewSymbols {_faea ,_faegd =_bbb .decodeHeightClassDeltaHeight ();if _faegd !=nil {return nil ,_faegd ;};_acdc +=_faea ;var _feef ,_abfb uint32 ;_dff :=int64 (_bbb ._aaag );for {var _gaedg int64 ;_gaedg ,_faegd =_bbb .decodeDifferenceWidth ();if _gec .Is (_faegd ,_ac .ErrOOB ){break ;};if _faegd !=nil {return nil ,_faegd ;};if _bbb ._aaag >=_bbb .NumberOfNewSymbols {break ;};_feef +=uint32 (_gaedg );_abfb +=_feef ;if !_bbb .IsHuffmanEncoded ||_bbb .UseRefinementAggregation {if !_bbb .UseRefinementAggregation {_faegd =_bbb .decodeDirectlyThroughGenericRegion (_feef ,uint32 (_acdc ));if _faegd !=nil {return nil ,_faegd ;};}else {_faegd =_bbb .decodeAggregate (_feef ,uint32 (_acdc ));if _faegd !=nil {return nil ,_faegd ;};};}else if _bbb .IsHuffmanEncoded &&!_bbb .UseRefinementAggregation {_eebg [_bbb ._aaag ]=int (_feef );};_bbb ._aaag ++;};if _bbb .IsHuffmanEncoded &&!_bbb .UseRefinementAggregation {var _bfbc int64 ;if _bbb .SdHuffBMSizeSelection ==0{var _dccb _gea .Tabler ;_dccb ,_faegd =_gea .GetStandardTable (1);if _faegd !=nil {return nil ,_faegd ;};_bfbc ,_faegd =_dccb .Decode (_bbb ._dccg );if _faegd !=nil {return nil ,_faegd ;};}else {_bfbc ,_faegd =_bbb .huffDecodeBmSize ();if _faegd !=nil {return nil ,_faegd ;};};_bbb ._dccg .Align ();var _gaefe *_gb .Bitmap ;_gaefe ,_faegd =_bbb .decodeHeightClassCollectiveBitmap (_bfbc ,uint32 (_acdc ),_abfb );if _faegd !=nil {return nil ,_faegd ;};_faegd =_bbb .decodeHeightClassBitmap (_gaefe ,_dff ,int (_acdc ),_eebg );if _faegd !=nil {return nil ,_faegd ;};};};_cdac ,_faegd :=_bbb .getToExportFlags ();if _faegd !=nil {return nil ,_faegd ;};_bbb .setExportedSymbols (_cdac );};return _bbb ._cfff ,nil ;};func (_fafb *Header )String ()string {_acce :=&_ec .Builder {};_acce .WriteString ("\u000a[\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045A\u0044\u0045\u0052\u005d\u000a");_acce .WriteString (_da .Sprintf ("\t\u002d\u0020\u0053\u0065gm\u0065n\u0074\u004e\u0075\u006d\u0062e\u0072\u003a\u0020\u0025\u0076\u000a",_fafb .SegmentNumber ));_acce .WriteString (_da .Sprintf ("\u0009\u002d\u0020T\u0079\u0070\u0065\u003a\u0020\u0025\u0076\u000a",_fafb .Type ));_acce .WriteString (_da .Sprintf ("\u0009-\u0020R\u0065\u0074\u0061\u0069\u006eF\u006c\u0061g\u003a\u0020\u0025\u0076\u000a",_fafb .RetainFlag ));_acce .WriteString (_da .Sprintf ("\u0009\u002d\u0020Pa\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_fafb .PageAssociation ));_acce .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0050\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074i\u006fn\u0046\u0069\u0065\u006c\u0064\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_fafb .PageAssociationFieldSize ));_acce .WriteString ("\u0009-\u0020R\u0054\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u0053\u003a\u000a");for _ ,_dab :=range _fafb .RTSNumbers {_acce .WriteString (_da .Sprintf ("\u0009\t\u002d\u0020\u0025\u0064\u000a",_dab ));};_acce .WriteString (_da .Sprintf ("\t\u002d \u0048\u0065\u0061\u0064\u0065\u0072\u004c\u0065n\u0067\u0074\u0068\u003a %\u0076\u000a",_fafb .HeaderLength ));_acce .WriteString (_da .Sprintf ("\u0009-\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061L\u0065n\u0067\u0074\u0068\u003a\u0020\u0025\u0076\n",_fafb .SegmentDataLength ));_acce .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074D\u0061\u0074\u0061\u0053\u0074\u0061\u0072t\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0076\u000a",_fafb .SegmentDataStartOffset ));return _acce .String ();};func (_dfe *GenericRegion )decodeSLTP ()(int ,error ){switch _dfe .GBTemplate {case 0:_dfe ._gef .SetIndex (0x9B25);case 1:_dfe ._gef .SetIndex (0x795);case 2:_dfe ._gef .SetIndex (0xE5);case 3:_dfe ._gef .SetIndex (0x195);};return _dfe ._egff .DecodeBit (_dfe ._gef );};func (_eedb *PatternDictionary )readGrayMax ()error {_eebc ,_ebac :=_eedb ._cdbb .ReadBits (32);if _ebac !=nil {return _ebac ;};_eedb .GrayMax =uint32 (_eebc &_g .MaxUint32 );return nil ;};func (_cfeb *SymbolDictionary )decodeHeightClassBitmap (_ffb *_gb .Bitmap ,_fdbd int64 ,_efbg int ,_efacf []int )error {for _ffef :=_fdbd ;_ffef < int64 (_cfeb ._aaag );_ffef ++{var _abad int ;for _ebde :=_fdbd ;_ebde <=_ffef -1;_ebde ++{_abad +=_efacf [_ebde ];};_edgcf :=_a .Rect (_abad ,0,_abad +_efacf [_ffef ],_efbg );_efcc ,_ceec :=_gb .Extract (_edgcf ,_ffb );if _ceec !=nil {return _ceec ;};_cfeb ._fgae [_ffef ]=_efcc ;_cfeb ._bbee =append (_cfeb ._bbee ,_efcc );};return nil ;};type template1 struct{};func (_edec *GenericRegion )parseHeader ()(_bafb error ){_gbd .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052I\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0050\u0061\u0072s\u0069\u006e\u0067\u0048\u0065\u0061\u0064e\u0072\u002e\u002e\u002e");defer func (){if _bafb !=nil {_gbd .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e]\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065r\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0077\u0069th\u0020\u0065\u0072\u0072\u006f\u0072\u002e\u0020\u0025\u0076",_bafb );}else {_gbd .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049C\u002d\u0052\u0045G\u0049\u004f\u004e]\u0020\u0050a\u0072\u0073\u0069\u006e\u0067\u0048e\u0061de\u0072\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0053\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079\u002e\u002e\u002e");};}();var (_fbee int ;_cbe uint64 ;);if _bafb =_edec .RegionSegment .parseHeader ();_bafb !=nil {return _bafb ;};if _ ,_bafb =_edec ._gge .ReadBits (3);_bafb !=nil {return _bafb ;};_fbee ,_bafb =_edec ._gge .ReadBit ();if _bafb !=nil {return _bafb ;};if _fbee ==1{_edec .UseExtTemplates =true ;};_fbee ,_bafb =_edec ._gge .ReadBit ();if _bafb !=nil {return _bafb ;};if _fbee ==1{_edec .IsTPGDon =true ;};_cbe ,_bafb =_edec ._gge .ReadBits (2);if _bafb !=nil {return _bafb ;};_edec .GBTemplate =byte (_cbe &0xf);_fbee ,_bafb =_edec ._gge .ReadBit ();if _bafb !=nil {return _bafb ;};if _fbee ==1{_edec .IsMMREncoded =true ;};if !_edec .IsMMREncoded {_aeb :=1;if _edec .GBTemplate ==0{_aeb =4;if _edec .UseExtTemplates {_aeb =12;};};if _bafb =_edec .readGBAtPixels (_aeb );_bafb !=nil {return _bafb ;};};if _bafb =_edec .computeSegmentDataStructure ();_bafb !=nil {return _bafb ;};_gbd .Log .Trace ("\u0025\u0073",_edec );return nil ;};func (_egac *SymbolDictionary )decodeHeightClassDeltaHeight ()(int64 ,error ){if _egac .IsHuffmanEncoded {return _egac .decodeHeightClassDeltaHeightWithHuffman ();};_debf ,_adfe :=_egac ._fffa .DecodeInt (_egac ._gcf );if _adfe !=nil {return 0,_adfe ;};return int64 (_debf ),nil ;};func (_dbaeg *SymbolDictionary )getUserTable (_ccfa int )(_gea .Tabler ,error ){var _bacf int ;for _ ,_bcff :=range _dbaeg .Header .RTSegments {if _bcff .Type ==53{if _bacf ==_ccfa {_cgbcb ,_bfgb :=_bcff .GetSegmentData ();if _bfgb !=nil {return nil ,_bfgb ;};_ddda :=_cgbcb .(_gea .BasicTabler );return _gea .NewEncodedTable (_ddda );};_bacf ++;};};return nil ,nil ;};func NewHeader (d Documenter ,r _f .StreamReader ,offset int64 ,organizationType OrganizationType )(*Header ,error ){_ggd :=&Header {Reader :r };if _bcada :=_ggd .parse (d ,r ,offset ,organizationType );_bcada !=nil {return nil ,_c .Wrap (_bcada ,"\u004ee\u0077\u0048\u0065\u0061\u0064\u0065r","");};return _ggd ,nil ;};func (_acdd *TextRegion )Init (header *Header ,r _f .StreamReader )error {_acdd .Header =header ;_acdd ._egeae =r ;_acdd .RegionInfo =NewRegionSegment (_acdd ._egeae );return _acdd .parseHeader ();};func (_dcbb *PatternDictionary )setGbAtPixels (){if _dcbb .HDTemplate ==0{_dcbb .GBAtX =make ([]int8 ,4);_dcbb .GBAtY =make ([]int8 ,4);_dcbb .GBAtX [0]=-int8 (_dcbb .HdpWidth );_dcbb .GBAtY [0]=0;_dcbb .GBAtX [1]=-3;_dcbb .GBAtY [1]=-1;_dcbb .GBAtX [2]=2;_dcbb .GBAtY [2]=-2;_dcbb .GBAtX [3]=-2;_dcbb .GBAtY [3]=-2;}else {_dcbb .GBAtX =[]int8 {-int8 (_dcbb .HdpWidth )};_dcbb .GBAtY =[]int8 {0};};};func (_bef *GenericRefinementRegion )overrideAtTemplate0 (_cba ,_fbgg ,_bea ,_cbg ,_adb int )int {if _bef ._df [0]{_cba &=0xfff7;if _bef .GrAtY [0]==0&&int (_bef .GrAtX [0])>=-_adb {_cba |=(_cbg >>uint (7-(_adb +int (_bef .GrAtX [0])))&0x1)<<3;}else {_cba |=_bef .getPixel (_bef .RegionBitmap ,_fbgg +int (_bef .GrAtX [0]),_bea +int (_bef .GrAtY [0]))<<3;};};if _bef ._df [1]{_cba &=0xefff;if _bef .GrAtY [1]==0&&int (_bef .GrAtX [1])>=-_adb {_cba |=(_cbg >>uint (7-(_adb +int (_bef .GrAtX [1])))&0x1)<<12;}else {_cba |=_bef .getPixel (_bef .ReferenceBitmap ,_fbgg +int (_bef .GrAtX [1]),_bea +int (_bef .GrAtY [1]));};};return _cba ;};func (_gbaa *TextRegion )decodeRdw ()(int64 ,error ){const _bfga ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064w";if _gbaa .IsHuffmanEncoded {if _gbaa .SbHuffRDWidth ==3{if _gbaa ._ggae ==nil {var (_gcggg int ;_gebf error ;);if _gbaa .SbHuffFS ==3{_gcggg ++;};if _gbaa .SbHuffDS ==3{_gcggg ++;};if _gbaa .SbHuffDT ==3{_gcggg ++;};_gbaa ._ggae ,_gebf =_gbaa .getUserTable (_gcggg );if _gebf !=nil {return 0,_c .Wrap (_gebf ,_bfga ,"");};};return _gbaa ._ggae .Decode (_gbaa ._egeae );};_aaaa ,_defa :=_gea .GetStandardTable (14+int (_gbaa .SbHuffRDWidth ));if _defa !=nil {return 0,_c .Wrap (_defa ,_bfga ,"");};return _aaaa .Decode (_gbaa ._egeae );};_bbad ,_bagb :=_gbaa ._dbeg .DecodeInt (_gbaa ._dceb );if _bagb !=nil {return 0,_c .Wrap (_bagb ,_bfga ,"");};return int64 (_bbad ),nil ;};func (_ecgd *SymbolDictionary )parseHeader ()(_daee error ){_gbd .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");defer func (){if _daee !=nil {_gbd .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u0020\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u005b\u0050\u0041\u0052SE\u002d\u0048\u0045A\u0044\u0045R\u005d\u0020\u0066\u0061\u0069\u006ce\u0064\u002e \u0025\u0076",_daee );}else {_gbd .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");};}();if _daee =_ecgd .readRegionFlags ();_daee !=nil {return _daee ;};if _daee =_ecgd .setAtPixels ();_daee !=nil {return _daee ;};if _daee =_ecgd .setRefinementAtPixels ();_daee !=nil {return _daee ;};if _daee =_ecgd .readNumberOfExportedSymbols ();_daee !=nil {return _daee ;};if _daee =_ecgd .readNumberOfNewSymbols ();_daee !=nil {return _daee ;};if _daee =_ecgd .setInSyms ();_daee !=nil {return _daee ;};if _ecgd ._ffcd {_acee :=_ecgd .Header .RTSegments ;for _ecag :=len (_acee )-1;_ecag >=0;_ecag --{if _acee [_ecag ].Type ==0{_bgee ,_dcfea :=_acee [_ecag ].SegmentData .(*SymbolDictionary );if !_dcfea {_daee =_da .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074:\u0020\u0025\u0076\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020S\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_acee [_ecag ]);return _daee ;};if _bgee ._ffcd {_ecgd .setRetainedCodingContexts (_bgee );};break ;};};};if _daee =_ecgd .checkInput ();_daee !=nil {return _daee ;};return nil ;};func (_dbcd *SymbolDictionary )encodeNumSyms (_deb _f .BinaryWriter )(_cagcg int ,_caff error ){const _aabd ="\u0065\u006e\u0063\u006f\u0064\u0065\u004e\u0075\u006d\u0053\u0079\u006d\u0073";_efba :=make ([]byte ,4);_e .BigEndian .PutUint32 (_efba ,_dbcd .NumberOfExportedSymbols );if _cagcg ,_caff =_deb .Write (_efba );_caff !=nil {return _cagcg ,_c .Wrap (_caff ,_aabd ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};_e .BigEndian .PutUint32 (_efba ,_dbcd .NumberOfNewSymbols );_gaee ,_caff :=_deb .Write (_efba );if _caff !=nil {return _cagcg ,_c .Wrap (_caff ,_aabd ,"n\u0065\u0077\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};return _cagcg +_gaee ,nil ;};func (_gc *EndOfStripe )Init (h *Header ,r _f .StreamReader )error {_gc ._fbg =r ;return _gc .parseHeader (h ,r );};func (_ecgf *TextRegion )setContexts (_debgc *_de .DecoderStats ,_ebag *_de .DecoderStats ,_egfcg *_de .DecoderStats ,_faed *_de .DecoderStats ,_cded *_de .DecoderStats ,_deegd *_de .DecoderStats ,_eadd *_de .DecoderStats ,_aaad *_de .DecoderStats ,_eefb *_de .DecoderStats ,_fged *_de .DecoderStats ){_ecgf ._fdad =_ebag ;_ecgf ._daggf =_egfcg ;_ecgf ._fggda =_faed ;_ecgf ._feaf =_cded ;_ecgf ._dceb =_eadd ;_ecgf ._beeed =_aaad ;_ecgf ._eagc =_deegd ;_ecgf ._cfea =_eefb ;_ecgf ._agfb =_fged ;_ecgf ._bcba =_debgc ;};func (_acf *GenericRefinementRegion )GetRegionInfo ()*RegionSegment {return _acf .RegionInfo };func (_gdgb *GenericRefinementRegion )updateOverride ()error {if _gdgb .GrAtX ==nil ||_gdgb .GrAtY ==nil {return _ge .New ("\u0041\u0054\u0020\u0070\u0069\u0078\u0065\u006c\u0073\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");};if len (_gdgb .GrAtX )!=len (_gdgb .GrAtY ){return _ge .New ("A\u0054\u0020\u0070\u0069xe\u006c \u0069\u006e\u0063\u006f\u006es\u0069\u0073\u0074\u0065\u006e\u0074");};_gdgb ._df =make ([]bool ,len (_gdgb .GrAtX ));switch _gdgb .TemplateID {case 0:if _gdgb .GrAtX [0]!=-1&&_gdgb .GrAtY [0]!=-1{_gdgb ._df [0]=true ;_gdgb ._af =true ;};if _gdgb .GrAtX [1]!=-1&&_gdgb .GrAtY [1]!=-1{_gdgb ._df [1]=true ;_gdgb ._af =true ;};case 1:_gdgb ._af =false ;};return nil ;};func _abge (_addbb _f .StreamReader ,_bbbb *Header )*TextRegion {_dfbgd :=&TextRegion {_egeae :_addbb ,Header :_bbbb ,RegionInfo :NewRegionSegment (_addbb )};return _dfbgd ;};func (_ggec *GenericRegion )setParametersWithAt (_adfd bool ,_bddf byte ,_gfg ,_fcba bool ,_afcf ,_cbb []int8 ,_gcad ,_bga uint32 ,_gcd *_de .DecoderStats ,_caca *_de .Decoder ){_ggec .IsMMREncoded =_adfd ;_ggec .GBTemplate =_bddf ;_ggec .IsTPGDon =_gfg ;_ggec .GBAtX =_afcf ;_ggec .GBAtY =_cbb ;_ggec .RegionSegment .BitmapHeight =_bga ;_ggec .RegionSegment .BitmapWidth =_gcad ;_ggec ._afg =nil ;_ggec .Bitmap =nil ;if _gcd !=nil {_ggec ._gef =_gcd ;};if _caca !=nil {_ggec ._egff =_caca ;};_gbd .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049O\u004e\u005d\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073\u0020\u0053\u0044\u0041t\u003a\u0020\u0025\u0073",_ggec );};func (_bggfc *PageInformationSegment )encodeFlags (_efdb _f .BinaryWriter )(_ggb error ){const _dfba ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _ggb =_efdb .SkipBits (1);_ggb !=nil {return _c .Wrap (_ggb ,_dfba ,"\u0072\u0065\u0073e\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074");};var _dcdc int ;if _bggfc .CombinationOperatorOverrideAllowed (){_dcdc =1;};if _ggb =_efdb .WriteBit (_dcdc );_ggb !=nil {return _c .Wrap (_ggb ,_dfba ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0064\u0065\u006e");};_dcdc =0;if _bggfc ._bac {_dcdc =1;};if _ggb =_efdb .WriteBit (_dcdc );_ggb !=nil {return _c .Wrap (_ggb ,_dfba ,"\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0061\u0075\u0078i\u006ci\u0061r\u0079\u0020\u0062\u0075\u0066\u0066\u0065r");};if _ggb =_efdb .WriteBit ((int (_bggfc ._aabc )>>1)&0x01);_ggb !=nil {return _c .Wrap (_ggb ,_dfba ,"\u0063\u006f\u006d\u0062\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006f\u0070\u0065\u0072\u0061\u0074o\u0072\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0062\u0069\u0074");};if _ggb =_efdb .WriteBit (int (_bggfc ._aabc )&0x01);_ggb !=nil {return _c .Wrap (_ggb ,_dfba ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0062\u0069\u0074");};_dcdc =int (_bggfc ._deeg );if _ggb =_efdb .WriteBit (_dcdc );_ggb !=nil {return _c .Wrap (_ggb ,_dfba ,"\u0064e\u0066\u0061\u0075\u006c\u0074\u0020\u0070\u0061\u0067\u0065\u0020p\u0069\u0078\u0065\u006c\u0020\u0076\u0061\u006c\u0075\u0065");};_dcdc =0;if _bggfc ._aadc {_dcdc =1;};if _ggb =_efdb .WriteBit (_dcdc );_ggb !=nil {return _c .Wrap (_ggb ,_dfba ,"\u0063\u006f\u006e\u0074ai\u006e\u0073\u0020\u0072\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074");};_dcdc =0;if _bggfc .IsLossless {_dcdc =1;};if _ggb =_efdb .WriteBit (_dcdc );_ggb !=nil {return _c .Wrap (_ggb ,_dfba ,"p\u0061\u0067\u0065\u0020\u0069\u0073 \u0065\u0076\u0065\u006e\u0074\u0075\u0061\u006c\u006cy\u0020\u006c\u006fs\u0073l\u0065\u0073\u0073");};return nil ;};type templater interface{form (_beed ,_dgf ,_bbe ,_cgc ,_eedc int16 )int16 ;setIndex (_cag *_de .DecoderStats );};type Documenter interface{GetPage (int )(Pager ,error );GetGlobalSegment (int )(*Header ,error );};func (_gaa *GenericRefinementRegion )decodeTypicalPredictedLineTemplate1 (_fdb ,_eba ,_gdge ,_cgf ,_fab ,_gcg ,_ffeg ,_fde ,_aad int )(_fcc error ){var (_cgff ,_bfb int ;_bfd ,_cce int ;_gg ,_afac int ;_bde byte ;);if _fdb > 0{_bde ,_fcc =_gaa .RegionBitmap .GetByte (_ffeg -_gdge );if _fcc !=nil {return ;};_bfd =int (_bde );};if _fde > 0&&_fde <=_gaa .ReferenceBitmap .Height {_bde ,_fcc =_gaa .ReferenceBitmap .GetByte (_aad -_cgf +_gcg );if _fcc !=nil {return ;};_cce =int (_bde )<<2;};if _fde >=0&&_fde < _gaa .ReferenceBitmap .Height {_bde ,_fcc =_gaa .ReferenceBitmap .GetByte (_aad +_gcg );if _fcc !=nil {return ;};_gg =int (_bde );};if _fde > -2&&_fde < _gaa .ReferenceBitmap .Height -1{_bde ,_fcc =_gaa .ReferenceBitmap .GetByte (_aad +_cgf +_gcg );if _fcc !=nil {return ;};_afac =int (_bde );};_cgff =((_bfd >>5)&0x6)|((_afac >>2)&0x30)|(_gg &0xc0)|(_cce &0x200);_bfb =((_afac >>2)&0x70)|(_gg &0xc0)|(_cce &0x700);var _ceb int ;for _gda :=0;_gda < _fab ;_gda =_ceb {var (_geab int ;_egf int ;);_ceb =_gda +8;if _geab =_eba -_gda ;_geab > 8{_geab =8;};_gag :=_ceb < _eba ;_cb :=_ceb < _gaa .ReferenceBitmap .Width ;_ade :=_gcg +1;if _fdb > 0{_bde =0;if _gag {_bde ,_fcc =_gaa .RegionBitmap .GetByte (_ffeg -_gdge +1);if _fcc !=nil {return ;};};_bfd =(_bfd <<8)|int (_bde );};if _fde > 0&&_fde <=_gaa .ReferenceBitmap .Height {var _aada int ;if _cb {_bde ,_fcc =_gaa .ReferenceBitmap .GetByte (_aad -_cgf +_ade );if _fcc !=nil {return ;};_aada =int (_bde )<<2;};_cce =(_cce <<8)|_aada ;};if _fde >=0&&_fde < _gaa .ReferenceBitmap .Height {_bde =0;if _cb {_bde ,_fcc =_gaa .ReferenceBitmap .GetByte (_aad +_ade );if _fcc !=nil {return ;};};_gg =(_gg <<8)|int (_bde );};if _fde > -2&&_fde < (_gaa .ReferenceBitmap .Height -1){_bde =0;if _cb {_bde ,_fcc =_gaa .ReferenceBitmap .GetByte (_aad +_cgf +_ade );if _fcc !=nil {return ;};};_afac =(_afac <<8)|int (_bde );};for _gfb :=0;_gfb < _geab ;_gfb ++{var _caa int ;_ecg :=(_bfb >>4)&0x1ff;switch _ecg {case 0x1ff:_caa =1;case 0x00:_caa =0;default:_gaa ._abd .SetIndex (int32 (_cgff ));_caa ,_fcc =_gaa ._ef .DecodeBit (_gaa ._abd );if _fcc !=nil {return ;};};_gae :=uint (7-_gfb );_egf |=_caa <<_gae ;_cgff =((_cgff &0x0d6)<<1)|_caa |(_bfd >>_gae +5)&0x002|((_afac >>_gae +2)&0x010)|((_gg >>_gae )&0x040)|((_cce >>_gae )&0x200);_bfb =((_bfb &0xdb)<<1)|((_afac >>_gae +2)&0x010)|((_gg >>_gae )&0x080)|((_cce >>_gae )&0x400);};_fcc =_gaa .RegionBitmap .SetByte (_ffeg ,byte (_egf ));if _fcc !=nil {return ;};_ffeg ++;_aad ++;};return nil ;};func (_afc *GenericRegion )InitEncode (bm *_gb .Bitmap ,xLoc ,yLoc ,template int ,duplicateLineRemoval bool )error {const _baa ="\u0047e\u006e\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069\u006f\u006e.\u0049\u006e\u0069\u0074\u0045\u006e\u0063\u006f\u0064\u0065";if bm ==nil {return _c .Error (_baa ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if xLoc < 0||yLoc < 0{return _c .Error (_baa ,"\u0078\u0020\u0061\u006e\u0064\u0020\u0079\u0020\u006c\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074h\u0061\u006e\u0020\u0030");};_afc .Bitmap =bm ;_afc .GBTemplate =byte (template );switch _afc .GBTemplate {case 0:_afc .GBAtX =[]int8 {3,-3,2,-2};_afc .GBAtY =[]int8 {-1,-1,-2,-2};case 1:_afc .GBAtX =[]int8 {3};_afc .GBAtY =[]int8 {-1};case 2,3:_afc .GBAtX =[]int8 {2};_afc .GBAtY =[]int8 {-1};default:return _c .Errorf (_baa ,"\u0070\u0072o\u0076\u0069\u0064\u0065\u0064 \u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u007b\u0030\u002c\u0031\u002c\u0032\u002c\u0033\u007d",template );};_afc .RegionSegment =&RegionSegment {BitmapHeight :uint32 (bm .Height ),BitmapWidth :uint32 (bm .Width ),XLocation :uint32 (xLoc ),YLocation :uint32 (yLoc )};_afc .IsTPGDon =duplicateLineRemoval ;return nil ;};func (_gecc *GenericRegion )overrideAtTemplate0a (_bccb ,_aef ,_ddf ,_fcg ,_bggb ,_daggd int )int {if _gecc .GBAtOverride [0]{_bccb &=0xFFEF;if _gecc .GBAtY [0]==0&&_gecc .GBAtX [0]>=-int8 (_bggb ){_bccb |=(_fcg >>uint (int8 (_daggd )-_gecc .GBAtX [0]&0x1))<<4;}else {_bccb |=int (_gecc .getPixel (_aef +int (_gecc .GBAtX [0]),_ddf +int (_gecc .GBAtY [0])))<<4;};};if _gecc .GBAtOverride [1]{_bccb &=0xFBFF;if _gecc .GBAtY [1]==0&&_gecc .GBAtX [1]>=-int8 (_bggb ){_bccb |=(_fcg >>uint (int8 (_daggd )-_gecc .GBAtX [1]&0x1))<<10;}else {_bccb |=int (_gecc .getPixel (_aef +int (_gecc .GBAtX [1]),_ddf +int (_gecc .GBAtY [1])))<<10;};};if _gecc .GBAtOverride [2]{_bccb &=0xF7FF;if _gecc .GBAtY [2]==0&&_gecc .GBAtX [2]>=-int8 (_bggb ){_bccb |=(_fcg >>uint (int8 (_daggd )-_gecc .GBAtX [2]&0x1))<<11;}else {_bccb |=int (_gecc .getPixel (_aef +int (_gecc .GBAtX [2]),_ddf +int (_gecc .GBAtY [2])))<<11;};};if _gecc .GBAtOverride [3]{_bccb &=0x7FFF;if _gecc .GBAtY [3]==0&&_gecc .GBAtX [3]>=-int8 (_bggb ){_bccb |=(_fcg >>uint (int8 (_daggd )-_gecc .GBAtX [3]&0x1))<<15;}else {_bccb |=int (_gecc .getPixel (_aef +int (_gecc .GBAtX [3]),_ddf +int (_gecc .GBAtY [3])))<<15;};};return _bccb ;};func (_dfdg *GenericRefinementRegion )parseHeader ()(_fgg error ){_gbd .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0048e\u0061\u0064e\u0072\u002e\u002e\u002e");_afd :=_ae .Now ();defer func (){if _fgg ==nil {_gbd .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045G\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020h\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0069\u006e\u0069\u0073\u0068id\u0020\u0069\u006e\u003a\u0020\u0025\u0064\u0020\u006e\u0073",_ae .Since (_afd ).Nanoseconds ());}else {_gbd .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0068\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0073",_fgg );};}();if _fgg =_dfdg .RegionInfo .parseHeader ();_fgg !=nil {return _fgg ;};_ ,_fgg =_dfdg ._ab .ReadBits (6);if _fgg !=nil {return _fgg ;};_dfdg .IsTPGROn ,_fgg =_dfdg ._ab .ReadBool ();if _fgg !=nil {return _fgg ;};var _agf int ;_agf ,_fgg =_dfdg ._ab .ReadBit ();if _fgg !=nil {return _fgg ;};_dfdg .TemplateID =int8 (_agf );switch _dfdg .TemplateID {case 0:_dfdg .Template =_dfdg ._fga ;if _fgg =_dfdg .readAtPixels ();_fgg !=nil {return ;};case 1:_dfdg .Template =_dfdg ._daf ;};return nil ;};func (_edbe *GenericRegion )Size ()int {return _edbe .RegionSegment .Size ()+1+2*len (_edbe .GBAtX )};func (_bedg *SymbolDictionary )decodeDifferenceWidth ()(int64 ,error ){if _bedg .IsHuffmanEncoded {switch _bedg .SdHuffDecodeWidthSelection {case 0:_eefe ,_gedb :=_gea .GetStandardTable (2);if _gedb !=nil {return 0,_gedb ;};return _eefe .Decode (_bedg ._dccg );case 1:_bfea ,_bcgb :=_gea .GetStandardTable (3);if _bcgb !=nil {return 0,_bcgb ;};return _bfea .Decode (_bedg ._dccg );case 3:if _bedg ._agbe ==nil {var _acaf int ;if _bedg .SdHuffDecodeHeightSelection ==3{_acaf ++;};_fbc ,_gcba :=_bedg .getUserTable (_acaf );if _gcba !=nil {return 0,_gcba ;};_bedg ._agbe =_fbc ;};return _bedg ._agbe .Decode (_bedg ._dccg );};}else {_fgdc ,_bege :=_bedg ._fffa .DecodeInt (_bedg ._gaaf );if _bege !=nil {return 0,_bege ;};return int64 (_fgdc ),nil ;};return 0,nil ;};func (_dabb *PageInformationSegment )CombinationOperator ()_gb .CombinationOperator {return _dabb ._aabc ;};func (_deagd *SymbolDictionary )getToExportFlags ()([]int ,error ){var (_dbfg int ;_dcbf int32 ;_gedf error ;_bcbf =int32 (_deagd ._aeac +_deagd .NumberOfNewSymbols );_cbgd =make ([]int ,_bcbf ););for _afga :=int32 (0);_afga < _bcbf ;_afga +=_dcbf {if _deagd .IsHuffmanEncoded {_caef ,_ggfa :=_gea .GetStandardTable (1);if _ggfa !=nil {return nil ,_ggfa ;};_bace ,_ggfa :=_caef .Decode (_deagd ._dccg );if _ggfa !=nil {return nil ,_ggfa ;};_dcbf =int32 (_bace );}else {_dcbf ,_gedf =_deagd ._fffa .DecodeInt (_deagd ._edc );if _gedf !=nil {return nil ,_gedf ;};};if _dcbf !=0{for _accb :=_afga ;_accb < _afga +_dcbf ;_accb ++{_cbgd [_accb ]=_dbfg ;};};if _dbfg ==0{_dbfg =1;}else {_dbfg =0;};};return _cbgd ,nil ;};func (_bgacd *TextRegion )decodeDT ()(_bbcg int64 ,_eaea error ){if _bgacd .IsHuffmanEncoded {if _bgacd .SbHuffDT ==3{_bbcg ,_eaea =_bgacd ._ebgb .Decode (_bgacd ._egeae );if _eaea !=nil {return 0,_eaea ;};}else {var _effb _gea .Tabler ;_effb ,_eaea =_gea .GetStandardTable (11+int (_bgacd .SbHuffDT ));if _eaea !=nil {return 0,_eaea ;};_bbcg ,_eaea =_effb .Decode (_bgacd ._egeae );if _eaea !=nil {return 0,_eaea ;};};}else {var _bdbd int32 ;_bdbd ,_eaea =_bgacd ._dbeg .DecodeInt (_bgacd ._fdad );if _eaea !=nil {return ;};_bbcg =int64 (_bdbd );};_bbcg *=int64 (_bgacd .SbStrips );return _bbcg ,nil ;};func (_dbdb *SymbolDictionary )readNumberOfExportedSymbols ()error {_aage ,_aebe :=_dbdb ._dccg .ReadBits (32);if _aebe !=nil {return _aebe ;};_dbdb .NumberOfExportedSymbols =uint32 (_aage &_g .MaxUint32 );return nil ;};func (_afe *SymbolDictionary )decodeHeightClassDeltaHeightWithHuffman ()(int64 ,error ){switch _afe .SdHuffDecodeHeightSelection {case 0:_gaga ,_aeab :=_gea .GetStandardTable (4);if _aeab !=nil {return 0,_aeab ;};return _gaga .Decode (_afe ._dccg );case 1:_cbee ,_aacd :=_gea .GetStandardTable (5);if _aacd !=nil {return 0,_aacd ;};return _cbee .Decode (_afe ._dccg );case 3:if _afe ._aec ==nil {_fdgbb ,_eagb :=_gea .GetStandardTable (0);if _eagb !=nil {return 0,_eagb ;};_afe ._aec =_fdgbb ;};return _afe ._aec .Decode (_afe ._dccg );};return 0,nil ;};func (_fgeb *TableSegment )HtRS ()int32 {return _fgeb ._cbegc };func (_fgdca *TextRegion )readAmountOfSymbolInstances ()error {_babf ,_cbcd :=_fgdca ._egeae .ReadBits (32);if _cbcd !=nil {return _cbcd ;};_fgdca .NumberOfSymbolInstances =uint32 (_babf &_g .MaxUint32 );_ddfe :=_fgdca .RegionInfo .BitmapWidth *_fgdca .RegionInfo .BitmapHeight ;if _ddfe < _fgdca .NumberOfSymbolInstances {_gbd .Log .Debug ("\u004c\u0069\u006d\u0069t\u0069\u006e\u0067\u0020t\u0068\u0065\u0020n\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020d\u0065\u0063\u006f\u0064e\u0064\u0020\u0073\u0079m\u0062\u006f\u006c\u0020\u0069n\u0073\u0074\u0061\u006e\u0063\u0065\u0073 \u0074\u006f\u0020\u006f\u006ee\u0020\u0070\u0065\u0072\u0020\u0070\u0069\u0078\u0065l\u0020\u0028\u0020\u0025\u0064\u0020\u0069\u006e\u0073\u0074\u0065\u0061\u0064\u0020\u006f\u0066\u0020\u0025\u0064\u0029",_ddfe ,_fgdca .NumberOfSymbolInstances );_fgdca .NumberOfSymbolInstances =_ddfe ;};return nil ;};func (_edfc *SymbolDictionary )setExportedSymbols (_ddcgd []int ){for _aebd :=uint32 (0);_aebd < _edfc ._aeac +_edfc .NumberOfNewSymbols ;_aebd ++{if _ddcgd [_aebd ]==1{var _ebaea *_gb .Bitmap ;if _aebd < _edfc ._aeac {_ebaea =_edfc ._cbdg [_aebd ];}else {_ebaea =_edfc ._fgae [_aebd -_edfc ._aeac ];};_gbd .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u002d\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u0020\u0041\u0064\u0064 E\u0078\u0070\u006fr\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027%\u0073\u0027",_ebaea );_edfc ._cfff =append (_edfc ._cfff ,_ebaea );};};};type Regioner interface{GetRegionBitmap ()(*_gb .Bitmap ,error );GetRegionInfo ()*RegionSegment ;};func (_babe *SymbolDictionary )decodeHeightClassCollectiveBitmap (_ffbf int64 ,_fdgd ,_baegb uint32 )(*_gb .Bitmap ,error ){if _ffbf ==0{_cece :=_gb .New (int (_baegb ),int (_fdgd ));var (_dfdcb byte ;_egfb error ;);for _dbed :=0;_dbed < len (_cece .Data );_dbed ++{_dfdcb ,_egfb =_babe ._dccg .ReadByte ();if _egfb !=nil {return nil ,_egfb ;};if _egfb =_cece .SetByte (_dbed ,_dfdcb );_egfb !=nil {return nil ,_egfb ;};};return _cece ,nil ;};if _babe ._edecc ==nil {_babe ._edecc =NewGenericRegion (_babe ._dccg );};_babe ._edecc .setParameters (true ,_babe ._dccg .StreamPosition (),_ffbf ,_fdgd ,_baegb );_bgga ,_eebb :=_babe ._edecc .GetRegionBitmap ();if _eebb !=nil {return nil ,_eebb ;};return _bgga ,nil ;};func (_aeaf *HalftoneRegion )checkInput ()error {if _aeaf .IsMMREncoded {if _aeaf .HTemplate !=0{_gbd .Log .Debug ("\u0048\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030",_aeaf .HTemplate );};if _aeaf .HSkipEnabled {_gbd .Log .Debug ("\u0048\u0053\u006b\u0069\u0070\u0045\u006e\u0061\u0062\u006c\u0065\u0064\u0020\u0030\u0020\u0025\u0076\u0020(\u0073\u0068\u006f\u0075\u006c\u0064\u0020c\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020v\u0061\u006c\u0075\u0065\u0020\u0066\u0061\u006c\u0073\u0065\u0029",_aeaf .HSkipEnabled );};};return nil ;};func (_dea *EndOfStripe )parseHeader (_db *Header ,_fg _f .StreamReader )error {_dee ,_deg :=_dea ._fbg .ReadBits (32);if _deg !=nil {return _deg ;};_dea ._ag =int (_dee &_g .MaxInt32 );return nil ;};func (_gcec *TextRegion )readRegionFlags ()error {var (_cgef int ;_ccad uint64 ;_ggde error ;);_cgef ,_ggde =_gcec ._egeae .ReadBit ();if _ggde !=nil {return _ggde ;};_gcec .SbrTemplate =int8 (_cgef );_ccad ,_ggde =_gcec ._egeae .ReadBits (5);if _ggde !=nil {return _ggde ;};_gcec .SbDsOffset =int8 (_ccad );if _gcec .SbDsOffset > 0x0f{_gcec .SbDsOffset -=0x20;};_cgef ,_ggde =_gcec ._egeae .ReadBit ();if _ggde !=nil {return _ggde ;};_gcec .DefaultPixel =int8 (_cgef );_ccad ,_ggde =_gcec ._egeae .ReadBits (2);if _ggde !=nil {return _ggde ;};_gcec .CombinationOperator =_gb .CombinationOperator (int (_ccad )&0x3);_cgef ,_ggde =_gcec ._egeae .ReadBit ();if _ggde !=nil {return _ggde ;};_gcec .IsTransposed =int8 (_cgef );_ccad ,_ggde =_gcec ._egeae .ReadBits (2);if _ggde !=nil {return _ggde ;};_gcec .ReferenceCorner =int16 (_ccad )&0x3;_ccad ,_ggde =_gcec ._egeae .ReadBits (2);if _ggde !=nil {return _ggde ;};_gcec .LogSBStrips =int16 (_ccad )&0x3;_gcec .SbStrips =1<<uint (_gcec .LogSBStrips );_cgef ,_ggde =_gcec ._egeae .ReadBit ();if _ggde !=nil {return _ggde ;};if _cgef ==1{_gcec .UseRefinement =true ;};_cgef ,_ggde =_gcec ._egeae .ReadBit ();if _ggde !=nil {return _ggde ;};if _cgef ==1{_gcec .IsHuffmanEncoded =true ;};return nil ;};func (_ddeb *Header )writeFlags (_cfec _f .BinaryWriter )(_bfdc error ){const _egg ="\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065F\u006c\u0061\u0067\u0073";_bded :=byte (_ddeb .Type );if _bfdc =_cfec .WriteByte (_bded );_bfdc !=nil {return _c .Wrap (_bfdc ,_egg ,"\u0077\u0072\u0069ti\u006e\u0067\u0020\u0073\u0065\u0067\u006d\u0065\u006et\u0020t\u0079p\u0065 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064");};if !_ddeb .RetainFlag &&!_ddeb .PageAssociationFieldSize {return nil ;};if _bfdc =_cfec .SkipBits (-8);_bfdc !=nil {return _c .Wrap (_bfdc ,_egg ,"\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0062\u0061\u0063\u006b\u0020\u0074\u0068\u0065\u0020\u0062\u0069\u0074\u0073\u0020\u0066\u0061il\u0065\u0064");};var _bbed int ;if _ddeb .RetainFlag {_bbed =1;};if _bfdc =_cfec .WriteBit (_bbed );_bfdc !=nil {return _c .Wrap (_bfdc ,_egg ,"\u0072\u0065\u0074\u0061in\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067\u0073");};_bbed =0;if _ddeb .PageAssociationFieldSize {_bbed =1;};if _bfdc =_cfec .WriteBit (_bbed );_bfdc !=nil {return _c .Wrap (_bfdc ,_egg ,"p\u0061\u0067\u0065\u0020as\u0073o\u0063\u0069\u0061\u0074\u0069o\u006e\u0020\u0066\u006c\u0061\u0067");};_cfec .FinishByte ();return nil ;};func (_bae *template1 )form (_fce ,_dfc ,_gde ,_gbc ,_aegb int16 )int16 {return ((_fce &0x02)<<8)|(_dfc <<6)|((_gde &0x03)<<4)|(_gbc <<1)|_aegb ;};func (_acfg *HalftoneRegion )computeY (_gdecg ,_eca int )int {return _acfg .shiftAndFill (int (_acfg .HGridY )+_gdecg *int (_acfg .HRegionX )-_eca *int (_acfg .HRegionY ));};func (_fdbc *Header )Encode (w _f .BinaryWriter )(_degd int ,_fecba error ){const _fffe ="\u0048\u0065\u0061d\u0065\u0072\u002e\u0057\u0072\u0069\u0074\u0065";var _bbab _f .BinaryWriter ;_gbd .Log .Trace ("\u005b\u0053\u0045G\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045\u0052\u005d[\u0045\u004e\u0043\u004f\u0044\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _fecba !=nil {_gbd .Log .Trace ("[\u0053\u0045\u0047\u004d\u0045\u004eT\u002d\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0045\u004e\u0043\u004f\u0044E\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020%\u0076",_fecba );}else {_gbd .Log .Trace ("\u005b\u0053\u0045\u0047ME\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0025\u0076",_fdbc );_gbd .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045N\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u005b\u0045\u004e\u0043O\u0044\u0045\u005d\u0020\u0046\u0069\u006ei\u0073\u0068\u0065\u0064");};}();w .FinishByte ();if _fdbc .SegmentData !=nil {_dafc ,_ccefb :=_fdbc .SegmentData .(SegmentEncoder );if !_ccefb {return 0,_c .Errorf (_fffe ,"\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0064\u006f\u0065s\u006e\u0027\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074 \u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0045\u006e\u0063\u006f\u0064er\u0020\u0069\u006e\u0074\u0065\u0072\u0066\u0061\u0063\u0065",_fdbc .SegmentData );};_bbab =_f .BufferedMSB ();_degd ,_fecba =_dafc .Encode (_bbab );if _fecba !=nil {return 0,_c .Wrap (_fecba ,_fffe ,"");};_fdbc .SegmentDataLength =uint64 (_degd );};if _fdbc .pageSize ()==4{_fdbc .PageAssociationFieldSize =true ;};var _aaa int ;_aaa ,_fecba =_fdbc .writeSegmentNumber (w );if _fecba !=nil {return 0,_c .Wrap (_fecba ,_fffe ,"");};_degd +=_aaa ;if _fecba =_fdbc .writeFlags (w );_fecba !=nil {return _degd ,_c .Wrap (_fecba ,_fffe ,"");};_degd ++;_aaa ,_fecba =_fdbc .writeReferredToCount (w );if _fecba !=nil {return 0,_c .Wrap (_fecba ,_fffe ,"");};_degd +=_aaa ;_aaa ,_fecba =_fdbc .writeReferredToSegments (w );if _fecba !=nil {return 0,_c .Wrap (_fecba ,_fffe ,"");};_degd +=_aaa ;_aaa ,_fecba =_fdbc .writeSegmentPageAssociation (w );if _fecba !=nil {return 0,_c .Wrap (_fecba ,_fffe ,"");};_degd +=_aaa ;_aaa ,_fecba =_fdbc .writeSegmentDataLength (w );if _fecba !=nil {return 0,_c .Wrap (_fecba ,_fffe ,"");};_degd +=_aaa ;_fdbc .HeaderLength =int64 (_degd )-int64 (_fdbc .SegmentDataLength );if _bbab !=nil {if _ ,_fecba =w .Write (_bbab .Data ());_fecba !=nil {return _degd ,_c .Wrap (_fecba ,_fffe ,"\u0077r\u0069t\u0065\u0020\u0073\u0065\u0067m\u0065\u006et\u0020\u0064\u0061\u0074\u0061");};};return _degd ,nil ;};func (_eeebf *SymbolDictionary )addSymbol (_gfdf Regioner )error {_bfgf ,_ecfbe :=_gfdf .GetRegionBitmap ();if _ecfbe !=nil {return _ecfbe ;};_eeebf ._fgae [_eeebf ._aaag ]=_bfgf ;_eeebf ._bbee =append (_eeebf ._bbee ,_bfgf );_gbd .Log .Trace ("\u005b\u0053YM\u0042\u004f\u004c \u0044\u0049\u0043\u0054ION\u0041RY\u005d\u0020\u0041\u0064\u0064\u0065\u0064 s\u0079\u006d\u0062\u006f\u006c\u003a\u0020%\u0073",_bfgf );return nil ;};func (_gagd *SymbolDictionary )setInSyms ()error {if _gagd .Header .RTSegments !=nil {return _gagd .retrieveImportSymbols ();};_gagd ._cbdg =make ([]*_gb .Bitmap ,0);return nil ;};func (_ddfg *GenericRegion )writeGBAtPixels (_eeaf _f .BinaryWriter )(_gefb int ,_gcdf error ){const _cbaf ="\u0077r\u0069t\u0065\u0047\u0042\u0041\u0074\u0050\u0069\u0078\u0065\u006c\u0073";if _ddfg .UseMMR {return 0,nil ;};_abf :=1;if _ddfg .GBTemplate ==0{_abf =4;}else if _ddfg .UseExtTemplates {_abf =12;};if len (_ddfg .GBAtX )!=_abf {return 0,_c .Errorf (_cbaf ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0058\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");};if len (_ddfg .GBAtY )!=_abf {return 0,_c .Errorf (_cbaf ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0059\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");};for _afgc :=0;_afgc < _abf ;_afgc ++{if _gcdf =_eeaf .WriteByte (byte (_ddfg .GBAtX [_afgc ]));_gcdf !=nil {return _gefb ,_c .Wrap (_gcdf ,_cbaf ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0058");};_gefb ++;if _gcdf =_eeaf .WriteByte (byte (_ddfg .GBAtY [_afgc ]));_gcdf !=nil {return _gefb ,_c .Wrap (_gcdf ,_cbaf ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0059");};_gefb ++;};return _gefb ,nil ;};const (TSymbolDictionary Type =0;TIntermediateTextRegion Type =4;TImmediateTextRegion Type =6;TImmediateLosslessTextRegion Type =7;TPatternDictionary Type =16;TIntermediateHalftoneRegion Type =20;TImmediateHalftoneRegion Type =22;TImmediateLosslessHalftoneRegion Type =23;TIntermediateGenericRegion Type =36;TImmediateGenericRegion Type =38;TImmediateLosslessGenericRegion Type =39;TIntermediateGenericRefinementRegion Type =40;TImmediateGenericRefinementRegion Type =42;TImmediateLosslessGenericRefinementRegion Type =43;TPageInformation Type =48;TEndOfPage Type =49;TEndOfStrip Type =50;TEndOfFile Type =51;TProfiles Type =52;TTables Type =53;TExtension Type =62;TBitmap Type =70;);