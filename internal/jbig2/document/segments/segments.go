//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package segments ;import (_e "encoding/binary";_fbc "errors";_fb "fmt";_ee "github.com/unidoc/unipdf/v3/common";_b "github.com/unidoc/unipdf/v3/internal/bitwise";_gd "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_ae "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";
_fbb "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/arithmetic";_db "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/huffman";_eg "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/mmr";_ea "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/arithmetic";
_cf "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_gc "github.com/unidoc/unipdf/v3/internal/jbig2/internal";_df "golang.org/x/xerrors";_d "image";_da "io";_g "math";_a "strings";_f "time";);func (_bga *GenericRefinementRegion )setParameters (_gec *_fbb .DecoderStats ,_fdg *_fbb .Decoder ,_bdg int8 ,_eef ,_afb uint32 ,_fdb *_ae .Bitmap ,_def ,_abbg int32 ,_gcag bool ,_ggc []int8 ,_dca []int8 ){_ee .Log .Trace ("\u005b\u0047\u0045NE\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052E\u0047I\u004fN\u005d \u0073\u0065\u0074\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073");
if _gec !=nil {_bga ._gg =_gec ;};if _fdg !=nil {_bga ._cdb =_fdg ;};_bga .TemplateID =_bdg ;_bga .RegionInfo .BitmapWidth =_eef ;_bga .RegionInfo .BitmapHeight =_afb ;_bga .ReferenceBitmap =_fdb ;_bga .ReferenceDX =_def ;_bga .ReferenceDY =_abbg ;_bga .IsTPGROn =_gcag ;
_bga .GrAtX =_ggc ;_bga .GrAtY =_dca ;_bga .RegionBitmap =nil ;_ee .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073 f\u0069\u006ei\u0073\u0068\u0065\u0064\u002e\u0020\u0025\u0073",_bga );
};func (_efffa *TextRegion )InitEncode (globalSymbolsMap ,localSymbolsMap map[int ]int ,comps []int ,inLL *_ae .Points ,symbols *_ae .Bitmaps ,classIDs *_gd .IntSlice ,boxes *_ae .Boxes ,width ,height ,symBits int ){_efffa .RegionInfo =&RegionSegment {BitmapWidth :uint32 (width ),BitmapHeight :uint32 (height )};
_efffa ._gdbb =globalSymbolsMap ;_efffa ._ebgff =localSymbolsMap ;_efffa ._aafc =comps ;_efffa ._bfec =inLL ;_efffa ._baaf =symbols ;_efffa ._efeea =classIDs ;_efffa ._adge =boxes ;_efffa ._fgbad =symBits ;};func (_eggf *SymbolDictionary )Encode (w _b .BinaryWriter )(_cef int ,_gbg error ){const _abef ="\u0053\u0079\u006dbo\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0045\u006e\u0063\u006f\u0064\u0065";
if _eggf ==nil {return 0,_cf .Error (_abef ,"\u0073\u0079m\u0062\u006f\u006c\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066in\u0065\u0064");};if _cef ,_gbg =_eggf .encodeFlags (w );_gbg !=nil {return _cef ,_cf .Wrap (_gbg ,_abef ,"");
};_ddegc ,_gbg :=_eggf .encodeATFlags (w );if _gbg !=nil {return _cef ,_cf .Wrap (_gbg ,_abef ,"");};_cef +=_ddegc ;if _ddegc ,_gbg =_eggf .encodeRefinementATFlags (w );_gbg !=nil {return _cef ,_cf .Wrap (_gbg ,_abef ,"");};_cef +=_ddegc ;if _ddegc ,_gbg =_eggf .encodeNumSyms (w );
_gbg !=nil {return _cef ,_cf .Wrap (_gbg ,_abef ,"");};_cef +=_ddegc ;if _ddegc ,_gbg =_eggf .encodeSymbols (w );_gbg !=nil {return _cef ,_cf .Wrap (_gbg ,_abef ,"");};_cef +=_ddegc ;return _cef ,nil ;};func (_fa *GenericRefinementRegion )decodeTypicalPredictedLineTemplate0 (_agfc ,_bcf ,_cbb ,_bbd ,_cea ,_cba ,_eaf ,_be ,_ggf int )error {var (_cdec ,_dd ,_dg ,_cacg ,_bbg ,_fd int ;
_bfb byte ;_gca error ;);if _agfc > 0{_bfb ,_gca =_fa .RegionBitmap .GetByte (_eaf -_cbb );if _gca !=nil {return _gca ;};_dg =int (_bfb );};if _be > 0&&_be <=_fa .ReferenceBitmap .Height {_bfb ,_gca =_fa .ReferenceBitmap .GetByte (_ggf -_bbd +_cba );if _gca !=nil {return _gca ;
};_cacg =int (_bfb )<<4;};if _be >=0&&_be < _fa .ReferenceBitmap .Height {_bfb ,_gca =_fa .ReferenceBitmap .GetByte (_ggf +_cba );if _gca !=nil {return _gca ;};_bbg =int (_bfb )<<1;};if _be > -2&&_be < _fa .ReferenceBitmap .Height -1{_bfb ,_gca =_fa .ReferenceBitmap .GetByte (_ggf +_bbd +_cba );
if _gca !=nil {return _gca ;};_fd =int (_bfb );};_cdec =((_dg >>5)&0x6)|((_fd >>2)&0x30)|(_bbg &0x180)|(_cacg &0xc00);var _cbg int ;for _ccfc :=0;_ccfc < _cea ;_ccfc =_cbg {var _bd int ;_cbg =_ccfc +8;var _gaf int ;if _gaf =_bcf -_ccfc ;_gaf > 8{_gaf =8;
};_cdd :=_cbg < _bcf ;_add :=_cbg < _fa .ReferenceBitmap .Width ;_ace :=_cba +1;if _agfc > 0{_bfb =0;if _cdd {_bfb ,_gca =_fa .RegionBitmap .GetByte (_eaf -_cbb +1);if _gca !=nil {return _gca ;};};_dg =(_dg <<8)|int (_bfb );};if _be > 0&&_be <=_fa .ReferenceBitmap .Height {var _fcd int ;
if _add {_bfb ,_gca =_fa .ReferenceBitmap .GetByte (_ggf -_bbd +_ace );if _gca !=nil {return _gca ;};_fcd =int (_bfb )<<4;};_cacg =(_cacg <<8)|_fcd ;};if _be >=0&&_be < _fa .ReferenceBitmap .Height {var _aefe int ;if _add {_bfb ,_gca =_fa .ReferenceBitmap .GetByte (_ggf +_ace );
if _gca !=nil {return _gca ;};_aefe =int (_bfb )<<1;};_bbg =(_bbg <<8)|_aefe ;};if _be > -2&&_be < (_fa .ReferenceBitmap .Height -1){_bfb =0;if _add {_bfb ,_gca =_fa .ReferenceBitmap .GetByte (_ggf +_bbd +_ace );if _gca !=nil {return _gca ;};};_fd =(_fd <<8)|int (_bfb );
};for _cgg :=0;_cgg < _gaf ;_cgg ++{var _bfg int ;_bbf :=false ;_gde :=(_cdec >>4)&0x1ff;if _gde ==0x1ff{_bbf =true ;_bfg =1;}else if _gde ==0x00{_bbf =true ;};if !_bbf {if _fa ._abf {_dd =_fa .overrideAtTemplate0 (_cdec ,_ccfc +_cgg ,_agfc ,_bd ,_cgg );
_fa ._gg .SetIndex (int32 (_dd ));}else {_fa ._gg .SetIndex (int32 (_cdec ));};_bfg ,_gca =_fa ._cdb .DecodeBit (_fa ._gg );if _gca !=nil {return _gca ;};};_eeba :=uint (7-_cgg );_bd |=_bfg <<_eeba ;_cdec =((_cdec &0xdb6)<<1)|_bfg |(_dg >>_eeba +5)&0x002|((_fd >>_eeba +2)&0x010)|((_bbg >>_eeba )&0x080)|((_cacg >>_eeba )&0x400);
};_gca =_fa .RegionBitmap .SetByte (_eaf ,byte (_bd ));if _gca !=nil {return _gca ;};_eaf ++;_ggf ++;};return nil ;};type template1 struct{};func (_ccea *GenericRegion )GetRegionBitmap ()(_edac *_ae .Bitmap ,_fgc error ){if _ccea .Bitmap !=nil {return _ccea .Bitmap ,nil ;
};if _ccea .IsMMREncoded {if _ccea ._fcda ==nil {_ccea ._fcda ,_fgc =_eg .New (_ccea ._fag ,int (_ccea .RegionSegment .BitmapWidth ),int (_ccea .RegionSegment .BitmapHeight ),_ccea .DataOffset ,_ccea .DataLength );if _fgc !=nil {return nil ,_fgc ;};};_ccea .Bitmap ,_fgc =_ccea ._fcda .UncompressMMR ();
return _ccea .Bitmap ,_fgc ;};if _fgc =_ccea .updateOverrideFlags ();_fgc !=nil {return nil ,_fgc ;};var _adf int ;if _ccea ._eeg ==nil {_ccea ._eeg ,_fgc =_fbb .New (_ccea ._fag );if _fgc !=nil {return nil ,_fgc ;};};if _ccea ._efc ==nil {_ccea ._efc =_fbb .NewStats (65536,1);
};_ccea .Bitmap =_ae .New (int (_ccea .RegionSegment .BitmapWidth ),int (_ccea .RegionSegment .BitmapHeight ));_bgf :=int (uint32 (_ccea .Bitmap .Width +7)&(^uint32 (7)));for _efbf :=0;_efbf < _ccea .Bitmap .Height ;_efbf ++{if _ccea .IsTPGDon {var _dcad int ;
_dcad ,_fgc =_ccea .decodeSLTP ();if _fgc !=nil {return nil ,_fgc ;};_adf ^=_dcad ;};if _adf ==1{if _efbf > 0{if _fgc =_ccea .copyLineAbove (_efbf );_fgc !=nil {return nil ,_fgc ;};};}else {if _fgc =_ccea .decodeLine (_efbf ,_ccea .Bitmap .Width ,_bgf );
_fgc !=nil {return nil ,_fgc ;};};};return _ccea .Bitmap ,nil ;};func (_dfgfb *TextRegion )decodeRI ()(int64 ,error ){if !_dfgfb .UseRefinement {return 0,nil ;};if _dfgfb .IsHuffmanEncoded {_gffa ,_cccag :=_dfgfb ._gdcdf .ReadBit ();return int64 (_gffa ),_cccag ;
};_beaf ,_ccedb :=_dfgfb ._eecdf .DecodeInt (_dfgfb ._badf );return int64 (_beaf ),_ccedb ;};func (_cbd *GenericRegion )InitEncode (bm *_ae .Bitmap ,xLoc ,yLoc ,template int ,duplicateLineRemoval bool )error {const _gbcd ="\u0047e\u006e\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069\u006f\u006e.\u0049\u006e\u0069\u0074\u0045\u006e\u0063\u006f\u0064\u0065";
if bm ==nil {return _cf .Error (_gbcd ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if xLoc < 0||yLoc < 0{return _cf .Error (_gbcd ,"\u0078\u0020\u0061\u006e\u0064\u0020\u0079\u0020\u006c\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074h\u0061\u006e\u0020\u0030");
};_cbd .Bitmap =bm ;_cbd .GBTemplate =byte (template );switch _cbd .GBTemplate {case 0:_cbd .GBAtX =[]int8 {3,-3,2,-2};_cbd .GBAtY =[]int8 {-1,-1,-2,-2};case 1:_cbd .GBAtX =[]int8 {3};_cbd .GBAtY =[]int8 {-1};case 2,3:_cbd .GBAtX =[]int8 {2};_cbd .GBAtY =[]int8 {-1};
default:return _cf .Errorf (_gbcd ,"\u0070\u0072o\u0076\u0069\u0064\u0065\u0064 \u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u007b\u0030\u002c\u0031\u002c\u0032\u002c\u0033\u007d",template );
};_cbd .RegionSegment =&RegionSegment {BitmapHeight :uint32 (bm .Height ),BitmapWidth :uint32 (bm .Width ),XLocation :uint32 (xLoc ),YLocation :uint32 (yLoc )};_cbd .IsTPGDon =duplicateLineRemoval ;return nil ;};func (_decc *TextRegion )readRegionFlags ()error {var (_ceeg int ;
_ebca uint64 ;_fgbg error ;);_ceeg ,_fgbg =_decc ._gdcdf .ReadBit ();if _fgbg !=nil {return _fgbg ;};_decc .SbrTemplate =int8 (_ceeg );_ebca ,_fgbg =_decc ._gdcdf .ReadBits (5);if _fgbg !=nil {return _fgbg ;};_decc .SbDsOffset =int8 (_ebca );if _decc .SbDsOffset > 0x0f{_decc .SbDsOffset -=0x20;
};_ceeg ,_fgbg =_decc ._gdcdf .ReadBit ();if _fgbg !=nil {return _fgbg ;};_decc .DefaultPixel =int8 (_ceeg );_ebca ,_fgbg =_decc ._gdcdf .ReadBits (2);if _fgbg !=nil {return _fgbg ;};_decc .CombinationOperator =_ae .CombinationOperator (int (_ebca )&0x3);
_ceeg ,_fgbg =_decc ._gdcdf .ReadBit ();if _fgbg !=nil {return _fgbg ;};_decc .IsTransposed =int8 (_ceeg );_ebca ,_fgbg =_decc ._gdcdf .ReadBits (2);if _fgbg !=nil {return _fgbg ;};_decc .ReferenceCorner =int16 (_ebca )&0x3;_ebca ,_fgbg =_decc ._gdcdf .ReadBits (2);
if _fgbg !=nil {return _fgbg ;};_decc .LogSBStrips =int16 (_ebca )&0x3;_decc .SbStrips =1<<uint (_decc .LogSBStrips );_ceeg ,_fgbg =_decc ._gdcdf .ReadBit ();if _fgbg !=nil {return _fgbg ;};if _ceeg ==1{_decc .UseRefinement =true ;};_ceeg ,_fgbg =_decc ._gdcdf .ReadBit ();
if _fgbg !=nil {return _fgbg ;};if _ceeg ==1{_decc .IsHuffmanEncoded =true ;};return nil ;};type TextRegion struct{_gdcdf _b .StreamReader ;RegionInfo *RegionSegment ;SbrTemplate int8 ;SbDsOffset int8 ;DefaultPixel int8 ;CombinationOperator _ae .CombinationOperator ;
IsTransposed int8 ;ReferenceCorner int16 ;LogSBStrips int16 ;UseRefinement bool ;IsHuffmanEncoded bool ;SbHuffRSize int8 ;SbHuffRDY int8 ;SbHuffRDX int8 ;SbHuffRDHeight int8 ;SbHuffRDWidth int8 ;SbHuffDT int8 ;SbHuffDS int8 ;SbHuffFS int8 ;SbrATX []int8 ;
SbrATY []int8 ;NumberOfSymbolInstances uint32 ;_gfcbe int64 ;SbStrips int8 ;NumberOfSymbols uint32 ;RegionBitmap *_ae .Bitmap ;Symbols []*_ae .Bitmap ;_eecdf *_fbb .Decoder ;_bgfe *GenericRefinementRegion ;_gaec *_fbb .DecoderStats ;_ggbg *_fbb .DecoderStats ;
_bgag *_fbb .DecoderStats ;_ebgb *_fbb .DecoderStats ;_badf *_fbb .DecoderStats ;_gaeg *_fbb .DecoderStats ;_fffd *_fbb .DecoderStats ;_bbbg *_fbb .DecoderStats ;_baab *_fbb .DecoderStats ;_cbddg *_fbb .DecoderStats ;_cdee *_fbb .DecoderStats ;_bfe int8 ;
_dfgb *_db .FixedSizeTable ;Header *Header ;_gebd _db .Tabler ;_gcef _db .Tabler ;_cbgf _db .Tabler ;_gcgfc _db .Tabler ;_fdea _db .Tabler ;_ccga _db .Tabler ;_babd _db .Tabler ;_gcga _db .Tabler ;_gdbb ,_ebgff map[int ]int ;_aafc []int ;_bfec *_ae .Points ;
_baaf *_ae .Bitmaps ;_efeea *_gd .IntSlice ;_dcde ,_fgbad int ;_adge *_ae .Boxes ;};func (_gef *template0 )setIndex (_agfcd *_fbb .DecoderStats ){_agfcd .SetIndex (0x100)};func (_afeg *TextRegion )GetRegionBitmap ()(*_ae .Bitmap ,error ){if _afeg .RegionBitmap !=nil {return _afeg .RegionBitmap ,nil ;
};if !_afeg .IsHuffmanEncoded {if _bgcb :=_afeg .setCodingStatistics ();_bgcb !=nil {return nil ,_bgcb ;};};if _acad :=_afeg .createRegionBitmap ();_acad !=nil {return nil ,_acad ;};if _geg :=_afeg .decodeSymbolInstances ();_geg !=nil {return nil ,_geg ;
};return _afeg .RegionBitmap ,nil ;};func (_efaa *PageInformationSegment )String ()string {_fage :=&_a .Builder {};_fage .WriteString ("\u000a\u005b\u0050\u0041G\u0045\u002d\u0049\u004e\u0046\u004f\u0052\u004d\u0041\u0054I\u004fN\u002d\u0053\u0045\u0047\u004d\u0045\u004eT\u005d\u000a");
_fage .WriteString (_fb .Sprintf ("\u0009\u002d \u0042\u004d\u0048e\u0069\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u000a",_efaa .PageBMHeight ));_fage .WriteString (_fb .Sprintf ("\u0009-\u0020B\u004d\u0057\u0069\u0064\u0074\u0068\u003a\u0020\u0025\u0064\u000a",_efaa .PageBMWidth ));
_fage .WriteString (_fb .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0058\u003a\u0020\u0025\u0064\u000a",_efaa .ResolutionX ));_fage .WriteString (_fb .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0059\u003a\u0020\u0025\u0064\u000a",_efaa .ResolutionY ));
_fage .WriteString (_fb .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0073\u000a",_efaa ._afec ));_fage .WriteString (_fb .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006eO\u0070\u0065\u0072\u0061\u0074\u006f\u0072O\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025v\u000a",_efaa ._degb ));
_fage .WriteString (_fb .Sprintf ("\u0009-\u0020I\u0073\u004c\u006f\u0073\u0073l\u0065\u0073s\u003a\u0020\u0025\u0076\u000a",_efaa .IsLossless ));_fage .WriteString (_fb .Sprintf ("\u0009\u002d\u0020R\u0065\u0071\u0075\u0069r\u0065\u0073\u0041\u0075\u0078\u0069\u006ci\u0061\u0072\u0079\u0042\u0075\u0066\u0066\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_efaa ._abbbf ));
_fage .WriteString (_fb .Sprintf ("\u0009\u002d\u0020M\u0069\u0067\u0068\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0052e\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0076\u000a",_efaa ._dfgf ));_fage .WriteString (_fb .Sprintf ("\u0009\u002d\u0020\u0049\u0073\u0053\u0074\u0072\u0069\u0070\u0065\u0064:\u0020\u0025\u0076\u000a",_efaa .IsStripe ));
_fage .WriteString (_fb .Sprintf ("\t\u002d\u0020\u004d\u0061xS\u0074r\u0069\u0070\u0065\u0053\u0069z\u0065\u003a\u0020\u0025\u0076\u000a",_efaa .MaxStripeSize ));return _fage .String ();};func (_cded *SymbolDictionary )getSymbol (_edgcf int )(*_ae .Bitmap ,error ){const _cfge ="\u0067e\u0074\u0053\u0079\u006d\u0062\u006fl";
_eedf ,_facb :=_cded ._agfb .GetBitmap (_cded ._feec [_edgcf ]);if _facb !=nil {return nil ,_cf .Wrap (_facb ,_cfge ,"\u0063\u0061n\u0027\u0074\u0020g\u0065\u0074\u0020\u0073\u0079\u006d\u0062\u006f\u006c");};return _eedf ,nil ;};func (_fgdb *TextRegion )checkInput ()error {const _ebeeg ="\u0063\u0068\u0065\u0063\u006b\u0049\u006e\u0070\u0075\u0074";
if !_fgdb .UseRefinement {if _fgdb .SbrTemplate !=0{_ee .Log .Debug ("\u0053\u0062\u0072Te\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_fgdb .SbrTemplate =0;};};if _fgdb .SbHuffFS ==2||_fgdb .SbHuffRDWidth ==2||_fgdb .SbHuffRDHeight ==2||_fgdb .SbHuffRDX ==2||_fgdb .SbHuffRDY ==2{return _cf .Error (_ebeeg ,"h\u0075\u0066\u0066\u006d\u0061\u006e \u0066\u006c\u0061\u0067\u0020\u0076a\u006c\u0075\u0065\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074e\u0064");
};if !_fgdb .UseRefinement {if _fgdb .SbHuffRSize !=0{_ee .Log .Debug ("\u0053\u0062\u0048uf\u0066\u0052\u0053\u0069\u007a\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_fgdb .SbHuffRSize =0;};if _fgdb .SbHuffRDY !=0{_ee .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044Y\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");
_fgdb .SbHuffRDY =0;};if _fgdb .SbHuffRDX !=0{_ee .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044X\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_fgdb .SbHuffRDX =0;};if _fgdb .SbHuffRDWidth !=0{_ee .Log .Debug ("\u0053b\u0048\u0075\u0066\u0066R\u0044\u0057\u0069\u0064\u0074h\u0020s\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u00200");
_fgdb .SbHuffRDWidth =0;};if _fgdb .SbHuffRDHeight !=0{_ee .Log .Debug ("\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069g\u0068\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0030");_fgdb .SbHuffRDHeight =0;};};return nil ;
};type GenericRefinementRegion struct{_ad templater ;_ga templater ;_gb _b .StreamReader ;_bf *Header ;RegionInfo *RegionSegment ;IsTPGROn bool ;TemplateID int8 ;Template templater ;GrAtX []int8 ;GrAtY []int8 ;RegionBitmap *_ae .Bitmap ;ReferenceBitmap *_ae .Bitmap ;
ReferenceDX int32 ;ReferenceDY int32 ;_cdb *_fbb .Decoder ;_gg *_fbb .DecoderStats ;_abf bool ;_dac []bool ;};func (_eed *GenericRefinementRegion )getPixel (_acee *_ae .Bitmap ,_fcc ,_fgb int )int {if _fcc < 0||_fcc >=_acee .Width {return 0;};if _fgb < 0||_fgb >=_acee .Height {return 0;
};if _acee .GetPixel (_fcc ,_fgb ){return 1;};return 0;};func (_dga *GenericRefinementRegion )updateOverride ()error {if _dga .GrAtX ==nil ||_dga .GrAtY ==nil {return _fbc .New ("\u0041\u0054\u0020\u0070\u0069\u0078\u0065\u006c\u0073\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");
};if len (_dga .GrAtX )!=len (_dga .GrAtY ){return _fbc .New ("A\u0054\u0020\u0070\u0069xe\u006c \u0069\u006e\u0063\u006f\u006es\u0069\u0073\u0074\u0065\u006e\u0074");};_dga ._dac =make ([]bool ,len (_dga .GrAtX ));switch _dga .TemplateID {case 0:if _dga .GrAtX [0]!=-1&&_dga .GrAtY [0]!=-1{_dga ._dac [0]=true ;
_dga ._abf =true ;};if _dga .GrAtX [1]!=-1&&_dga .GrAtY [1]!=-1{_dga ._dac [1]=true ;_dga ._abf =true ;};case 1:_dga ._abf =false ;};return nil ;};func (_cabe *PageInformationSegment )readMaxStripeSize ()error {_dccc ,_ggdg :=_cabe ._beed .ReadBits (15);
if _ggdg !=nil {return _ggdg ;};_cabe .MaxStripeSize =uint16 (_dccc &_g .MaxUint16 );return nil ;};func (_egc *GenericRegion )decodeLine (_afbb ,_cfgg ,_fagb int )error {const _egfc ="\u0064\u0065\u0063\u006f\u0064\u0065\u004c\u0069\u006e\u0065";_ffe :=_egc .Bitmap .GetByteIndex (0,_afbb );
_cdeg :=_ffe -_egc .Bitmap .RowStride ;switch _egc .GBTemplate {case 0:if !_egc .UseExtTemplates {return _egc .decodeTemplate0a (_afbb ,_cfgg ,_fagb ,_ffe ,_cdeg );};return _egc .decodeTemplate0b (_afbb ,_cfgg ,_fagb ,_ffe ,_cdeg );case 1:return _egc .decodeTemplate1 (_afbb ,_cfgg ,_fagb ,_ffe ,_cdeg );
case 2:return _egc .decodeTemplate2 (_afbb ,_cfgg ,_fagb ,_ffe ,_cdeg );case 3:return _egc .decodeTemplate3 (_afbb ,_cfgg ,_fagb ,_ffe ,_cdeg );};return _cf .Errorf (_egfc ,"\u0069\u006e\u0076a\u006c\u0069\u0064\u0020G\u0042\u0054\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u003a\u0020\u0025\u0064",_egc .GBTemplate );
};func (_gdea *GenericRegion )decodeTemplate2 (_dcf ,_acb ,_baa int ,_gfca ,_bca int )(_aeag error ){const _gcb ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0032";var (_ddg ,_babe int ;_feff ,_adb int ;_bafc byte ;_dcg ,_fbcb int ;
);if _dcf >=1{_bafc ,_aeag =_gdea .Bitmap .GetByte (_bca );if _aeag !=nil {return _cf .Wrap (_aeag ,_gcb ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0031");};_feff =int (_bafc );};if _dcf >=2{_bafc ,_aeag =_gdea .Bitmap .GetByte (_bca -_gdea .Bitmap .RowStride );
if _aeag !=nil {return _cf .Wrap (_aeag ,_gcb ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0032");};_adb =int (_bafc )<<4;};_ddg =(_feff >>3&0x7c)|(_adb >>3&0x380);for _fbga :=0;_fbga < _baa ;_fbga =_dcg {var (_fbfa byte ;
_eff int ;);_dcg =_fbga +8;if _gbdc :=_acb -_fbga ;_gbdc > 8{_eff =8;}else {_eff =_gbdc ;};if _dcf > 0{_feff <<=8;if _dcg < _acb {_bafc ,_aeag =_gdea .Bitmap .GetByte (_bca +1);if _aeag !=nil {return _cf .Wrap (_aeag ,_gcb ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0030");
};_feff |=int (_bafc );};};if _dcf > 1{_adb <<=8;if _dcg < _acb {_bafc ,_aeag =_gdea .Bitmap .GetByte (_bca -_gdea .Bitmap .RowStride +1);if _aeag !=nil {return _cf .Wrap (_aeag ,_gcb ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0031");
};_adb |=int (_bafc )<<4;};};for _eedb :=0;_eedb < _eff ;_eedb ++{_geb :=uint (10-_eedb );if _gdea ._aede {_babe =_gdea .overrideAtTemplate2 (_ddg ,_fbga +_eedb ,_dcf ,int (_fbfa ),_eedb );_gdea ._efc .SetIndex (int32 (_babe ));}else {_gdea ._efc .SetIndex (int32 (_ddg ));
};_fbcb ,_aeag =_gdea ._eeg .DecodeBit (_gdea ._efc );if _aeag !=nil {return _cf .Wrap (_aeag ,_gcb ,"");};_fbfa |=byte (_fbcb <<uint (7-_eedb ));_ddg =((_ddg &0x1bd)<<1)|_fbcb |((_feff >>_geb )&0x4)|((_adb >>_geb )&0x80);};if _ddf :=_gdea .Bitmap .SetByte (_gfca ,_fbfa );
_ddf !=nil {return _cf .Wrap (_ddf ,_gcb ,"");};_gfca ++;_bca ++;};return nil ;};func (_fge *template1 )form (_fgaf ,_edb ,_agbc ,_gfd ,_dbba int16 )int16 {return ((_fgaf &0x02)<<8)|(_edb <<6)|((_agbc &0x03)<<4)|(_gfd <<1)|_dbba ;};func (_bcec *SymbolDictionary )readRegionFlags ()error {var (_dged uint64 ;
_cafcb int ;);_ ,_ddbg :=_bcec ._gdge .ReadBits (3);if _ddbg !=nil {return _ddbg ;};_cafcb ,_ddbg =_bcec ._gdge .ReadBit ();if _ddbg !=nil {return _ddbg ;};_bcec .SdrTemplate =int8 (_cafcb );_dged ,_ddbg =_bcec ._gdge .ReadBits (2);if _ddbg !=nil {return _ddbg ;
};_bcec .SdTemplate =int8 (_dged &0xf);_cafcb ,_ddbg =_bcec ._gdge .ReadBit ();if _ddbg !=nil {return _ddbg ;};if _cafcb ==1{_bcec ._fcge =true ;};_cafcb ,_ddbg =_bcec ._gdge .ReadBit ();if _ddbg !=nil {return _ddbg ;};if _cafcb ==1{_bcec ._abdf =true ;
};_cafcb ,_ddbg =_bcec ._gdge .ReadBit ();if _ddbg !=nil {return _ddbg ;};if _cafcb ==1{_bcec .SdHuffAggInstanceSelection =true ;};_cafcb ,_ddbg =_bcec ._gdge .ReadBit ();if _ddbg !=nil {return _ddbg ;};_bcec .SdHuffBMSizeSelection =int8 (_cafcb );_dged ,_ddbg =_bcec ._gdge .ReadBits (2);
if _ddbg !=nil {return _ddbg ;};_bcec .SdHuffDecodeWidthSelection =int8 (_dged &0xf);_dged ,_ddbg =_bcec ._gdge .ReadBits (2);if _ddbg !=nil {return _ddbg ;};_bcec .SdHuffDecodeHeightSelection =int8 (_dged &0xf);_cafcb ,_ddbg =_bcec ._gdge .ReadBit ();
if _ddbg !=nil {return _ddbg ;};if _cafcb ==1{_bcec .UseRefinementAggregation =true ;};_cafcb ,_ddbg =_bcec ._gdge .ReadBit ();if _ddbg !=nil {return _ddbg ;};if _cafcb ==1{_bcec .IsHuffmanEncoded =true ;};return nil ;};func (_cbfa *Header )readHeaderFlags ()error {const _cada ="\u0072e\u0061d\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006c\u0061\u0067\u0073";
_egaa ,_ebfb :=_cbfa .Reader .ReadBit ();if _ebfb !=nil {return _cf .Wrap (_ebfb ,_cada ,"r\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067");};if _egaa !=0{_cbfa .RetainFlag =true ;};_egaa ,_ebfb =_cbfa .Reader .ReadBit ();if _ebfb !=nil {return _cf .Wrap (_ebfb ,_cada ,"\u0070\u0061g\u0065\u0020\u0061s\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e");
};if _egaa !=0{_cbfa .PageAssociationFieldSize =true ;};_fcg ,_ebfb :=_cbfa .Reader .ReadBits (6);if _ebfb !=nil {return _cf .Wrap (_ebfb ,_cada ,"\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065");};_cbfa .Type =Type (int (_fcg ));return nil ;
};func (_ced *RegionSegment )String ()string {_gfdd :=&_a .Builder {};_gfdd .WriteString ("\u0009[\u0052E\u0047\u0049\u004f\u004e\u0020S\u0045\u0047M\u0045\u004e\u0054\u005d\u000a");_gfdd .WriteString (_fb .Sprintf ("\t\u0009\u002d\u0020\u0042\u0069\u0074m\u0061\u0070\u0020\u0028\u0077\u0069d\u0074\u0068\u002c\u0020\u0068\u0065\u0069g\u0068\u0074\u0029\u0020\u005b\u0025\u0064\u0078\u0025\u0064]\u000a",_ced .BitmapWidth ,_ced .BitmapHeight ));
_gfdd .WriteString (_fb .Sprintf ("\u0009\u0009\u002d\u0020L\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0028\u0078,\u0079)\u003a\u0020\u005b\u0025\u0064\u002c\u0025d\u005d\u000a",_ced .XLocation ,_ced .YLocation ));_gfdd .WriteString (_fb .Sprintf ("\t\u0009\u002d\u0020\u0043\u006f\u006db\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070e\u0072\u0061\u0074o\u0072:\u0020\u0025\u0073",_ced .CombinaionOperator ));
return _gfdd .String ();};func (_aba *GenericRegion )Encode (w _b .BinaryWriter )(_efcb int ,_gbf error ){const _baf ="G\u0065n\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069o\u006e\u002e\u0045\u006eco\u0064\u0065";if _aba .Bitmap ==nil {return 0,_cf .Error (_baf ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");
};_fcf ,_gbf :=_aba .RegionSegment .Encode (w );if _gbf !=nil {return 0,_cf .Wrap (_gbf ,_baf ,"\u0052\u0065\u0067\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074");};_efcb +=_fcf ;if _gbf =w .SkipBits (4);_gbf !=nil {return _efcb ,_cf .Wrap (_gbf ,_baf ,"\u0073k\u0069p\u0020\u0072\u0065\u0073\u0065r\u0076\u0065d\u0020\u0062\u0069\u0074\u0073");
};var _gefb int ;if _aba .IsTPGDon {_gefb =1;};if _gbf =w .WriteBit (_gefb );_gbf !=nil {return _efcb ,_cf .Wrap (_gbf ,_baf ,"\u0074\u0070\u0067\u0064\u006f\u006e");};_gefb =0;if _gbf =w .WriteBit (int (_aba .GBTemplate >>1)&0x01);_gbf !=nil {return _efcb ,_cf .Wrap (_gbf ,_baf ,"f\u0069r\u0073\u0074\u0020\u0067\u0062\u0074\u0065\u006dp\u006c\u0061\u0074\u0065 b\u0069\u0074");
};if _gbf =w .WriteBit (int (_aba .GBTemplate )&0x01);_gbf !=nil {return _efcb ,_cf .Wrap (_gbf ,_baf ,"s\u0065\u0063\u006f\u006ed \u0067b\u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u0062\u0069\u0074");};if _aba .UseMMR {_gefb =1;};if _gbf =w .WriteBit (_gefb );
_gbf !=nil {return _efcb ,_cf .Wrap (_gbf ,_baf ,"u\u0073\u0065\u0020\u004d\u004d\u0052\u0020\u0062\u0069\u0074");};_efcb ++;if _fcf ,_gbf =_aba .writeGBAtPixels (w );_gbf !=nil {return _efcb ,_cf .Wrap (_gbf ,_baf ,"");};_efcb +=_fcf ;_fefa :=_ea .New ();
if _gbf =_fefa .EncodeBitmap (_aba .Bitmap ,_aba .IsTPGDon );_gbf !=nil {return _efcb ,_cf .Wrap (_gbf ,_baf ,"");};_fefa .Final ();var _gbdg int64 ;if _gbdg ,_gbf =_fefa .WriteTo (w );_gbf !=nil {return _efcb ,_cf .Wrap (_gbf ,_baf ,"");};_efcb +=int (_gbdg );
return _efcb ,nil ;};func (_fcce *GenericRegion )String ()string {_dfg :=&_a .Builder {};_dfg .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_dfg .WriteString (_fcce .RegionSegment .String ()+"\u000a");
_dfg .WriteString (_fb .Sprintf ("\u0009\u002d\u0020Us\u0065\u0045\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_fcce .UseExtTemplates ));_dfg .WriteString (_fb .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0044\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_fcce .IsTPGDon ));
_dfg .WriteString (_fb .Sprintf ("\u0009-\u0020G\u0042\u0054\u0065\u006d\u0070l\u0061\u0074e\u003a\u0020\u0025\u0064\u000a",_fcce .GBTemplate ));_dfg .WriteString (_fb .Sprintf ("\t\u002d \u0049\u0073\u004d\u004d\u0052\u0045\u006e\u0063o\u0064\u0065\u0064\u003a %\u0076\u000a",_fcce .IsMMREncoded ));
_dfg .WriteString (_fb .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_fcce .GBAtX ));_dfg .WriteString (_fb .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_fcce .GBAtY ));
_dfg .WriteString (_fb .Sprintf ("\t\u002d \u0047\u0042\u0041\u0074\u004f\u0076\u0065\u0072r\u0069\u0064\u0065\u003a %\u0076\u000a",_fcce .GBAtOverride ));return _dfg .String ();};func NewRegionSegment (r _b .StreamReader )*RegionSegment {return &RegionSegment {_dacf :r }};
type EndOfStripe struct{_cd _b .StreamReader ;_cde int ;};type HalftoneRegion struct{_gabg _b .StreamReader ;_fgfg *Header ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;HDefaultPixel int8 ;
CombinationOperator _ae .CombinationOperator ;HSkipEnabled bool ;HTemplate byte ;IsMMREncoded bool ;HGridWidth uint32 ;HGridHeight uint32 ;HGridX int32 ;HGridY int32 ;HRegionX uint16 ;HRegionY uint16 ;HalftoneRegionBitmap *_ae .Bitmap ;Patterns []*_ae .Bitmap ;
};func (_abed *TextRegion )readAmountOfSymbolInstances ()error {_baff ,_aeagb :=_abed ._gdcdf .ReadBits (32);if _aeagb !=nil {return _aeagb ;};_abed .NumberOfSymbolInstances =uint32 (_baff &_g .MaxUint32 );_cdege :=_abed .RegionInfo .BitmapWidth *_abed .RegionInfo .BitmapHeight ;
if _cdege < _abed .NumberOfSymbolInstances {_ee .Log .Debug ("\u004c\u0069\u006d\u0069t\u0069\u006e\u0067\u0020t\u0068\u0065\u0020n\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020d\u0065\u0063\u006f\u0064e\u0064\u0020\u0073\u0079m\u0062\u006f\u006c\u0020\u0069n\u0073\u0074\u0061\u006e\u0063\u0065\u0073 \u0074\u006f\u0020\u006f\u006ee\u0020\u0070\u0065\u0072\u0020\u0070\u0069\u0078\u0065l\u0020\u0028\u0020\u0025\u0064\u0020\u0069\u006e\u0073\u0074\u0065\u0061\u0064\u0020\u006f\u0066\u0020\u0025\u0064\u0029",_cdege ,_abed .NumberOfSymbolInstances );
_abed .NumberOfSymbolInstances =_cdege ;};return nil ;};func (_egge *Header )readSegmentPageAssociation (_eefb Documenter ,_ggg _b .StreamReader ,_ceec uint64 ,_agab ...int )(_egce error ){const _bgaa ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074P\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061t\u0069\u006f\u006e";
if !_egge .PageAssociationFieldSize {_cbcb ,_cgdb :=_ggg .ReadBits (8);if _cgdb !=nil {return _cf .Wrap (_cgdb ,_bgaa ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_egge .PageAssociation =int (_cbcb &0xFF);}else {_fbbf ,_cfda :=_ggg .ReadBits (32);
if _cfda !=nil {return _cf .Wrap (_cfda ,_bgaa ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_egge .PageAssociation =int (_fbbf &_g .MaxInt32 );};if _ceec ==0{return nil ;};if _egge .PageAssociation !=0{_dbeg ,_bgee :=_eefb .GetPage (_egge .PageAssociation );
if _bgee !=nil {return _cf .Wrap (_bgee ,_bgaa ,"\u0061s\u0073\u006f\u0063\u0069a\u0074\u0065\u0064\u0020\u0070a\u0067e\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006ed");};var _dfcc int ;for _adfe :=uint64 (0);_adfe < _ceec ;_adfe ++{_dfcc =_agab [_adfe ];
_egge .RTSegments [_adfe ],_bgee =_dbeg .GetSegment (_dfcc );if _bgee !=nil {var _dff error ;_egge .RTSegments [_adfe ],_dff =_eefb .GetGlobalSegment (_dfcc );if _dff !=nil {return _cf .Wrapf (_bgee ,_bgaa ,"\u0072\u0065\u0066\u0065\u0072\u0065n\u0063\u0065\u0020s\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064\u0020\u0061\u0074\u0020pa\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0072\u0020\u0069\u006e\u0020\u0067\u006c\u006f\u0062\u0061\u006c\u0073",_egge .PageAssociation );
};};};return nil ;};for _aecb :=uint64 (0);_aecb < _ceec ;_aecb ++{_egge .RTSegments [_aecb ],_egce =_eefb .GetGlobalSegment (_agab [_aecb ]);if _egce !=nil {return _cf .Wrapf (_egce ,_bgaa ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u003a\u0020\u0027\u0025d\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064",_agab [_aecb ]);
};};return nil ;};func (_ccca *TableSegment )StreamReader ()_b .StreamReader {return _ccca ._gceg };func (_ccde *SymbolDictionary )readNumberOfExportedSymbols ()error {_acec ,_dgdcd :=_ccde ._gdge .ReadBits (32);if _dgdcd !=nil {return _dgdcd ;};_ccde .NumberOfExportedSymbols =uint32 (_acec &_g .MaxUint32 );
return nil ;};func (_gecfa *RegionSegment )Encode (w _b .BinaryWriter )(_gdeca int ,_efbg error ){const _dfga ="R\u0065g\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065n\u0074\u002e\u0045\u006eco\u0064\u0065";_gafg :=make ([]byte ,4);_e .BigEndian .PutUint32 (_gafg ,_gecfa .BitmapWidth );
_gdeca ,_efbg =w .Write (_gafg );if _efbg !=nil {return 0,_cf .Wrap (_efbg ,_dfga ,"\u0057\u0069\u0064t\u0068");};_e .BigEndian .PutUint32 (_gafg ,_gecfa .BitmapHeight );var _dabc int ;_dabc ,_efbg =w .Write (_gafg );if _efbg !=nil {return 0,_cf .Wrap (_efbg ,_dfga ,"\u0048\u0065\u0069\u0067\u0068\u0074");
};_gdeca +=_dabc ;_e .BigEndian .PutUint32 (_gafg ,_gecfa .XLocation );_dabc ,_efbg =w .Write (_gafg );if _efbg !=nil {return 0,_cf .Wrap (_efbg ,_dfga ,"\u0058L\u006f\u0063\u0061\u0074\u0069\u006fn");};_gdeca +=_dabc ;_e .BigEndian .PutUint32 (_gafg ,_gecfa .YLocation );
_dabc ,_efbg =w .Write (_gafg );if _efbg !=nil {return 0,_cf .Wrap (_efbg ,_dfga ,"\u0059L\u006f\u0063\u0061\u0074\u0069\u006fn");};_gdeca +=_dabc ;if _efbg =w .WriteByte (byte (_gecfa .CombinaionOperator )&0x07);_efbg !=nil {return 0,_cf .Wrap (_efbg ,_dfga ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");
};_gdeca ++;return _gdeca ,nil ;};func _cfaf (_bacab _b .StreamReader ,_ccgag *Header )*TextRegion {_eaba :=&TextRegion {_gdcdf :_bacab ,Header :_ccgag ,RegionInfo :NewRegionSegment (_bacab )};return _eaba ;};func (_dcgc *PatternDictionary )Init (h *Header ,r _b .StreamReader )error {_dcgc ._eebb =r ;
return _dcgc .parseHeader ();};func (_dae *GenericRefinementRegion )decodeTemplate (_cge ,_bfd ,_cfgd ,_cfe ,_daf ,_aca ,_afa ,_dbb ,_gbd ,_dbad int ,_aed templater )(_eebac error ){var (_ebd ,_eea ,_ddc ,_bff ,_fdf int16 ;_edd ,_fgag ,_gcd ,_ccb int ;
_ffb byte ;);if _gbd >=1&&(_gbd -1)< _dae .ReferenceBitmap .Height {_ffb ,_eebac =_dae .ReferenceBitmap .GetByte (_dbad -_cfe );if _eebac !=nil {return ;};_edd =int (_ffb );};if _gbd >=0&&(_gbd )< _dae .ReferenceBitmap .Height {_ffb ,_eebac =_dae .ReferenceBitmap .GetByte (_dbad );
if _eebac !=nil {return ;};_fgag =int (_ffb );};if _gbd >=-1&&(_gbd +1)< _dae .ReferenceBitmap .Height {_ffb ,_eebac =_dae .ReferenceBitmap .GetByte (_dbad +_cfe );if _eebac !=nil {return ;};_gcd =int (_ffb );};_dbad ++;if _cge >=1{_ffb ,_eebac =_dae .RegionBitmap .GetByte (_dbb -_cfgd );
if _eebac !=nil {return ;};_ccb =int (_ffb );};_dbb ++;_ecb :=_dae .ReferenceDX %8;_dbd :=6+_ecb ;_cgf :=_dbad %_cfe ;if _dbd >=0{if _dbd < 8{_ebd =int16 (_edd >>uint (_dbd ))&0x07;};if _dbd < 8{_eea =int16 (_fgag >>uint (_dbd ))&0x07;};if _dbd < 8{_ddc =int16 (_gcd >>uint (_dbd ))&0x07;
};if _dbd ==6&&_cgf > 1{if _gbd >=1&&(_gbd -1)< _dae .ReferenceBitmap .Height {_ffb ,_eebac =_dae .ReferenceBitmap .GetByte (_dbad -_cfe -2);if _eebac !=nil {return _eebac ;};_ebd |=int16 (_ffb <<2)&0x04;};if _gbd >=0&&_gbd < _dae .ReferenceBitmap .Height {_ffb ,_eebac =_dae .ReferenceBitmap .GetByte (_dbad -2);
if _eebac !=nil {return _eebac ;};_eea |=int16 (_ffb <<2)&0x04;};if _gbd >=-1&&_gbd +1< _dae .ReferenceBitmap .Height {_ffb ,_eebac =_dae .ReferenceBitmap .GetByte (_dbad +_cfe -2);if _eebac !=nil {return _eebac ;};_ddc |=int16 (_ffb <<2)&0x04;};};if _dbd ==0{_edd =0;
_fgag =0;_gcd =0;if _cgf < _cfe -1{if _gbd >=1&&_gbd -1< _dae .ReferenceBitmap .Height {_ffb ,_eebac =_dae .ReferenceBitmap .GetByte (_dbad -_cfe );if _eebac !=nil {return _eebac ;};_edd =int (_ffb );};if _gbd >=0&&_gbd < _dae .ReferenceBitmap .Height {_ffb ,_eebac =_dae .ReferenceBitmap .GetByte (_dbad );
if _eebac !=nil {return _eebac ;};_fgag =int (_ffb );};if _gbd >=-1&&_gbd +1< _dae .ReferenceBitmap .Height {_ffb ,_eebac =_dae .ReferenceBitmap .GetByte (_dbad +_cfe );if _eebac !=nil {return _eebac ;};_gcd =int (_ffb );};};_dbad ++;};}else {_ebd =int16 (_edd <<1)&0x07;
_eea =int16 (_fgag <<1)&0x07;_ddc =int16 (_gcd <<1)&0x07;_edd =0;_fgag =0;_gcd =0;if _cgf < _cfe -1{if _gbd >=1&&_gbd -1< _dae .ReferenceBitmap .Height {_ffb ,_eebac =_dae .ReferenceBitmap .GetByte (_dbad -_cfe );if _eebac !=nil {return _eebac ;};_edd =int (_ffb );
};if _gbd >=0&&_gbd < _dae .ReferenceBitmap .Height {_ffb ,_eebac =_dae .ReferenceBitmap .GetByte (_dbad );if _eebac !=nil {return _eebac ;};_fgag =int (_ffb );};if _gbd >=-1&&_gbd +1< _dae .ReferenceBitmap .Height {_ffb ,_eebac =_dae .ReferenceBitmap .GetByte (_dbad +_cfe );
if _eebac !=nil {return _eebac ;};_gcd =int (_ffb );};_dbad ++;};_ebd |=int16 ((_edd >>7)&0x07);_eea |=int16 ((_fgag >>7)&0x07);_ddc |=int16 ((_gcd >>7)&0x07);};_bff =int16 (_ccb >>6);_fdf =0;_fddf :=(2-_ecb )%8;_edd <<=uint (_fddf );_fgag <<=uint (_fddf );
_gcd <<=uint (_fddf );_ccb <<=2;var _edf int ;for _bec :=0;_bec < _bfd ;_bec ++{_bae :=_bec &0x07;_eda :=_aed .form (_ebd ,_eea ,_ddc ,_bff ,_fdf );if _dae ._abf {_ffb ,_eebac =_dae .RegionBitmap .GetByte (_dae .RegionBitmap .GetByteIndex (_bec ,_cge ));
if _eebac !=nil {return _eebac ;};_dae ._gg .SetIndex (int32 (_dae .overrideAtTemplate0 (int (_eda ),_bec ,_cge ,int (_ffb ),_bae )));}else {_dae ._gg .SetIndex (int32 (_eda ));};_edf ,_eebac =_dae ._cdb .DecodeBit (_dae ._gg );if _eebac !=nil {return _eebac ;
};if _eebac =_dae .RegionBitmap .SetPixel (_bec ,_cge ,byte (_edf ));_eebac !=nil {return _eebac ;};_ebd =((_ebd <<1)|0x01&int16 (_edd >>7))&0x07;_eea =((_eea <<1)|0x01&int16 (_fgag >>7))&0x07;_ddc =((_ddc <<1)|0x01&int16 (_gcd >>7))&0x07;_bff =((_bff <<1)|0x01&int16 (_ccb >>7))&0x07;
_fdf =int16 (_edf );if (_bec -int (_dae .ReferenceDX ))%8==5{_edd =0;_fgag =0;_gcd =0;if ((_bec -int (_dae .ReferenceDX ))/8)+1< _dae .ReferenceBitmap .RowStride {if _gbd >=1&&(_gbd -1)< _dae .ReferenceBitmap .Height {_ffb ,_eebac =_dae .ReferenceBitmap .GetByte (_dbad -_cfe );
if _eebac !=nil {return _eebac ;};_edd =int (_ffb );};if _gbd >=0&&_gbd < _dae .ReferenceBitmap .Height {_ffb ,_eebac =_dae .ReferenceBitmap .GetByte (_dbad );if _eebac !=nil {return _eebac ;};_fgag =int (_ffb );};if _gbd >=-1&&(_gbd +1)< _dae .ReferenceBitmap .Height {_ffb ,_eebac =_dae .ReferenceBitmap .GetByte (_dbad +_cfe );
if _eebac !=nil {return _eebac ;};_gcd =int (_ffb );};};_dbad ++;}else {_edd <<=1;_fgag <<=1;_gcd <<=1;};if _bae ==5&&_cge >=1{if ((_bec >>3)+1)>=_dae .RegionBitmap .RowStride {_ccb =0;}else {_ffb ,_eebac =_dae .RegionBitmap .GetByte (_dbb -_cfgd );if _eebac !=nil {return _eebac ;
};_ccb =int (_ffb );};_dbb ++;}else {_ccb <<=1;};};return nil ;};func (_faec *Header )pageSize ()uint {if _faec .PageAssociation <=255{return 1;};return 4;};func (_ef *GenericRefinementRegion )decodeOptimized (_ba ,_aee ,_cac ,_dc ,_ebe ,_aef ,_dea int )error {var (_agf error ;
_bg int ;_bc int ;);_aea :=_ba -int (_ef .ReferenceDY );if _ccg :=int (-_ef .ReferenceDX );_ccg > 0{_bg =_ccg ;};_ggd :=_ef .ReferenceBitmap .GetByteIndex (_bg ,_aea );if _ef .ReferenceDX > 0{_bc =int (_ef .ReferenceDX );};_dfd :=_ef .RegionBitmap .GetByteIndex (_bc ,_ba );
switch _ef .TemplateID {case 0:_agf =_ef .decodeTemplate (_ba ,_aee ,_cac ,_dc ,_ebe ,_aef ,_dea ,_dfd ,_aea ,_ggd ,_ef ._ad );case 1:_agf =_ef .decodeTemplate (_ba ,_aee ,_cac ,_dc ,_ebe ,_aef ,_dea ,_dfd ,_aea ,_ggd ,_ef ._ga );};return _agf ;};func (_decba *PageInformationSegment )readCombinationOperator ()error {_gaeb ,_aab :=_decba ._beed .ReadBits (2);
if _aab !=nil {return _aab ;};_decba ._afec =_ae .CombinationOperator (int (_gaeb ));return nil ;};func (_abcf *SymbolDictionary )decodeHeightClassDeltaHeight ()(int64 ,error ){if _abcf .IsHuffmanEncoded {return _abcf .decodeHeightClassDeltaHeightWithHuffman ();
};_dggd ,_bfcca :=_abcf ._bbaf .DecodeInt (_abcf ._cfggc );if _bfcca !=nil {return 0,_bfcca ;};return int64 (_dggd ),nil ;};func (_fga *GenericRefinementRegion )decodeTypicalPredictedLineTemplate1 (_bag ,_ff ,_aa ,_aff ,_beg ,_fdd ,_fbg ,_ada ,_ggb int )(_cdc error ){var (_cff ,_fda int ;
_gf ,_agb int ;_dgd ,_cab int ;_gfb byte ;);if _bag > 0{_gfb ,_cdc =_fga .RegionBitmap .GetByte (_fbg -_aa );if _cdc !=nil {return ;};_gf =int (_gfb );};if _ada > 0&&_ada <=_fga .ReferenceBitmap .Height {_gfb ,_cdc =_fga .ReferenceBitmap .GetByte (_ggb -_aff +_fdd );
if _cdc !=nil {return ;};_agb =int (_gfb )<<2;};if _ada >=0&&_ada < _fga .ReferenceBitmap .Height {_gfb ,_cdc =_fga .ReferenceBitmap .GetByte (_ggb +_fdd );if _cdc !=nil {return ;};_dgd =int (_gfb );};if _ada > -2&&_ada < _fga .ReferenceBitmap .Height -1{_gfb ,_cdc =_fga .ReferenceBitmap .GetByte (_ggb +_aff +_fdd );
if _cdc !=nil {return ;};_cab =int (_gfb );};_cff =((_gf >>5)&0x6)|((_cab >>2)&0x30)|(_dgd &0xc0)|(_agb &0x200);_fda =((_cab >>2)&0x70)|(_dgd &0xc0)|(_agb &0x700);var _faa int ;for _fde :=0;_fde < _beg ;_fde =_faa {var (_bda int ;_ge int ;);_faa =_fde +8;
if _bda =_ff -_fde ;_bda > 8{_bda =8;};_eec :=_faa < _ff ;_bbfe :=_faa < _fga .ReferenceBitmap .Width ;_cad :=_fdd +1;if _bag > 0{_gfb =0;if _eec {_gfb ,_cdc =_fga .RegionBitmap .GetByte (_fbg -_aa +1);if _cdc !=nil {return ;};};_gf =(_gf <<8)|int (_gfb );
};if _ada > 0&&_ada <=_fga .ReferenceBitmap .Height {var _ccfe int ;if _bbfe {_gfb ,_cdc =_fga .ReferenceBitmap .GetByte (_ggb -_aff +_cad );if _cdc !=nil {return ;};_ccfe =int (_gfb )<<2;};_agb =(_agb <<8)|_ccfe ;};if _ada >=0&&_ada < _fga .ReferenceBitmap .Height {_gfb =0;
if _bbfe {_gfb ,_cdc =_fga .ReferenceBitmap .GetByte (_ggb +_cad );if _cdc !=nil {return ;};};_dgd =(_dgd <<8)|int (_gfb );};if _ada > -2&&_ada < (_fga .ReferenceBitmap .Height -1){_gfb =0;if _bbfe {_gfb ,_cdc =_fga .ReferenceBitmap .GetByte (_ggb +_aff +_cad );
if _cdc !=nil {return ;};};_cab =(_cab <<8)|int (_gfb );};for _abb :=0;_abb < _bda ;_abb ++{var _dfe int ;_dace :=(_fda >>4)&0x1ff;switch _dace {case 0x1ff:_dfe =1;case 0x00:_dfe =0;default:_fga ._gg .SetIndex (int32 (_cff ));_dfe ,_cdc =_fga ._cdb .DecodeBit (_fga ._gg );
if _cdc !=nil {return ;};};_ffd :=uint (7-_abb );_ge |=_dfe <<_ffd ;_cff =((_cff &0x0d6)<<1)|_dfe |(_gf >>_ffd +5)&0x002|((_cab >>_ffd +2)&0x010)|((_dgd >>_ffd )&0x040)|((_agb >>_ffd )&0x200);_fda =((_fda &0xdb)<<1)|((_cab >>_ffd +2)&0x010)|((_dgd >>_ffd )&0x080)|((_agb >>_ffd )&0x400);
};_cdc =_fga .RegionBitmap .SetByte (_fbg ,byte (_ge ));if _cdc !=nil {return ;};_fbg ++;_ggb ++;};return nil ;};func (_fgda *SymbolDictionary )encodeSymbols (_ccdb _b .BinaryWriter )(_dfbf int ,_fgba error ){const _bgg ="\u0065\u006e\u0063o\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c";
_aabg :=_ea .New ();_aabg .Init ();_dbff ,_fgba :=_fgda ._agfb .SelectByIndexes (_fgda ._feec );if _fgba !=nil {return 0,_cf .Wrap (_fgba ,_bgg ,"\u0069n\u0069\u0074\u0069\u0061\u006c");};_bfdf :=map[*_ae .Bitmap ]int {};for _adabb ,_ffec :=range _dbff .Values {_bfdf [_ffec ]=_adabb ;
};_dbff .SortByHeight ();var _efeg ,_edba int ;_gdbf ,_fgba :=_dbff .GroupByHeight ();if _fgba !=nil {return 0,_cf .Wrap (_fgba ,_bgg ,"");};for _ ,_gcfg :=range _gdbf .Values {_gcg :=_gcfg .Values [0].Height ;_addc :=_gcg -_efeg ;if _fgba =_aabg .EncodeInteger (_ea .IADH ,_addc );
_fgba !=nil {return 0,_cf .Wrapf (_fgba ,_bgg ,"\u0049\u0041\u0044\u0048\u0020\u0066\u006f\u0072\u0020\u0064\u0068\u003a \u0027\u0025\u0064\u0027",_addc );};_efeg =_gcg ;_afc ,_gbae :=_gcfg .GroupByWidth ();if _gbae !=nil {return 0,_cf .Wrapf (_gbae ,_bgg ,"\u0068\u0065\u0069g\u0068\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_gcg );
};var _fcgeg int ;for _ ,_dcef :=range _afc .Values {for _ ,_ebg :=range _dcef .Values {_eage :=_ebg .Width ;_aacb :=_eage -_fcgeg ;if _gbae =_aabg .EncodeInteger (_ea .IADW ,_aacb );_gbae !=nil {return 0,_cf .Wrapf (_gbae ,_bgg ,"\u0049\u0041\u0044\u0057\u0020\u0066\u006f\u0072\u0020\u0064\u0077\u003a \u0027\u0025\u0064\u0027",_aacb );
};_fcgeg +=_aacb ;if _gbae =_aabg .EncodeBitmap (_ebg ,false );_gbae !=nil {return 0,_cf .Wrapf (_gbae ,_bgg ,"H\u0065i\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u0020W\u0069\u0064\u0074\u0068: \u0025\u0064",_gcg ,_eage );};_ddgc :=_bfdf [_ebg ];_fgda ._beddc [_ddgc ]=_edba ;
_edba ++;};};if _gbae =_aabg .EncodeOOB (_ea .IADW );_gbae !=nil {return 0,_cf .Wrap (_gbae ,_bgg ,"\u0049\u0041\u0044\u0057");};};if _fgba =_aabg .EncodeInteger (_ea .IAEX ,0);_fgba !=nil {return 0,_cf .Wrap (_fgba ,_bgg ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};if _fgba =_aabg .EncodeInteger (_ea .IAEX ,len (_fgda ._feec ));_fgba !=nil {return 0,_cf .Wrap (_fgba ,_bgg ,"\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0073\u0079m\u0062\u006f\u006c\u0073");};_aabg .Final ();_bgbg ,_fgba :=_aabg .WriteTo (_ccdb );
if _fgba !=nil {return 0,_cf .Wrap (_fgba ,_bgg ,"\u0077\u0072i\u0074\u0069\u006e\u0067 \u0065\u006ec\u006f\u0064\u0065\u0072\u0020\u0063\u006f\u006et\u0065\u0078\u0074\u0020\u0074\u006f\u0020\u0027\u0077\u0027\u0020\u0077r\u0069\u0074\u0065\u0072");};
return int (_bgbg ),nil ;};type Type int ;func (_fdge *GenericRegion )writeGBAtPixels (_ebed _b .BinaryWriter )(_dgb int ,_gafd error ){const _ega ="\u0077r\u0069t\u0065\u0047\u0042\u0041\u0074\u0050\u0069\u0078\u0065\u006c\u0073";if _fdge .UseMMR {return 0,nil ;
};_gee :=1;if _fdge .GBTemplate ==0{_gee =4;}else if _fdge .UseExtTemplates {_gee =12;};if len (_fdge .GBAtX )!=_gee {return 0,_cf .Errorf (_ega ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0058\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};if len (_fdge .GBAtY )!=_gee {return 0,_cf .Errorf (_ega ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0059\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};for _aaag :=0;_aaag < _gee ;_aaag ++{if _gafd =_ebed .WriteByte (byte (_fdge .GBAtX [_aaag ]));_gafd !=nil {return _dgb ,_cf .Wrap (_gafd ,_ega ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0058");};_dgb ++;if _gafd =_ebed .WriteByte (byte (_fdge .GBAtY [_aaag ]));
_gafd !=nil {return _dgb ,_cf .Wrap (_gafd ,_ega ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0059");};_dgb ++;};return _dgb ,nil ;};func (_fddb *PatternDictionary )extractPatterns (_bacae *_ae .Bitmap )error {var _ebdg int ;_aegcc :=make ([]*_ae .Bitmap ,_fddb .GrayMax +1);
for _ebdg <=int (_fddb .GrayMax ){_gdde :=int (_fddb .HdpWidth )*_ebdg ;_edfa :=_d .Rect (_gdde ,0,_gdde +int (_fddb .HdpWidth ),int (_fddb .HdpHeight ));_gecf ,_cfef :=_ae .Extract (_edfa ,_bacae );if _cfef !=nil {return _cfef ;};_aegcc [_ebdg ]=_gecf ;
_ebdg ++;};_fddb .Patterns =_aegcc ;return nil ;};func (_acfd *RegionSegment )parseHeader ()error {const _dfcb ="p\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_ee .Log .Trace ("\u005b\u0052\u0045\u0047I\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002dH\u0045A\u0044\u0045\u0052\u005d\u0020\u0042\u0065g\u0069\u006e");
defer func (){_ee .Log .Trace ("\u005b\u0052\u0045G\u0049\u004f\u004e\u005d[\u0050\u0041\u0052\u0053\u0045\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");}();_cbfac ,_ffdd :=_acfd ._dacf .ReadBits (32);
if _ffdd !=nil {return _cf .Wrap (_ffdd ,_dfcb ,"\u0077\u0069\u0064t\u0068");};_acfd .BitmapWidth =uint32 (_cbfac &_g .MaxUint32 );_cbfac ,_ffdd =_acfd ._dacf .ReadBits (32);if _ffdd !=nil {return _cf .Wrap (_ffdd ,_dfcb ,"\u0068\u0065\u0069\u0067\u0068\u0074");
};_acfd .BitmapHeight =uint32 (_cbfac &_g .MaxUint32 );_cbfac ,_ffdd =_acfd ._dacf .ReadBits (32);if _ffdd !=nil {return _cf .Wrap (_ffdd ,_dfcb ,"\u0078\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_acfd .XLocation =uint32 (_cbfac &_g .MaxUint32 );
_cbfac ,_ffdd =_acfd ._dacf .ReadBits (32);if _ffdd !=nil {return _cf .Wrap (_ffdd ,_dfcb ,"\u0079\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_acfd .YLocation =uint32 (_cbfac &_g .MaxUint32 );if _ ,_ffdd =_acfd ._dacf .ReadBits (5);_ffdd !=nil {return _cf .Wrap (_ffdd ,_dfcb ,"\u0064i\u0072\u0079\u0020\u0072\u0065\u0061d");
};if _ffdd =_acfd .readCombinationOperator ();_ffdd !=nil {return _cf .Wrap (_ffdd ,_dfcb ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};return nil ;};func (_edee *SymbolDictionary )retrieveImportSymbols ()error {for _ ,_ebde :=range _edee .Header .RTSegments {if _ebde .Type ==0{_efdc ,_efegd :=_ebde .GetSegmentData ();
if _efegd !=nil {return _efegd ;};_gdgeb ,_cceed :=_efdc .(*SymbolDictionary );if !_cceed {return _fb .Errorf ("\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0044\u0061\u0074a\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u003a\u0020%\u0054",_efdc );
};_eeca ,_efegd :=_gdgeb .GetDictionary ();if _efegd !=nil {return _fb .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064 \u0073\u0065\u0067m\u0065\u006e\u0074 \u0077\u0069t\u0068\u0020\u0069\u006e\u0064\u0065x\u003a %\u0064\u0020\u0067\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0073",_ebde .SegmentNumber ,_efegd .Error ());
};_edee ._bdge =append (_edee ._bdge ,_eeca ...);_edee ._bacdf +=_gdgeb .NumberOfExportedSymbols ;};};return nil ;};func (_eab *GenericRegion )getPixel (_dec ,_gab int )int8 {if _dec < 0||_dec >=_eab .Bitmap .Width {return 0;};if _gab < 0||_gab >=_eab .Bitmap .Height {return 0;
};if _eab .Bitmap .GetPixel (_dec ,_gab ){return 1;};return 0;};func (_cdg *PageInformationSegment )CombinationOperator ()_ae .CombinationOperator {return _cdg ._afec };func (_gdg *GenericRegion )parseHeader ()(_aeee error ){_ee .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052I\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0050\u0061\u0072s\u0069\u006e\u0067\u0048\u0065\u0061\u0064e\u0072\u002e\u002e\u002e");
defer func (){if _aeee !=nil {_ee .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e]\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065r\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0077\u0069th\u0020\u0065\u0072\u0072\u006f\u0072\u002e\u0020\u0025\u0076",_aeee );
}else {_ee .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049C\u002d\u0052\u0045G\u0049\u004f\u004e]\u0020\u0050a\u0072\u0073\u0069\u006e\u0067\u0048e\u0061de\u0072\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0053\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079\u002e\u002e\u002e");
};}();var (_gcdd int ;_cafg uint64 ;);if _aeee =_gdg .RegionSegment .parseHeader ();_aeee !=nil {return _aeee ;};if _ ,_aeee =_gdg ._fag .ReadBits (3);_aeee !=nil {return _aeee ;};_gcdd ,_aeee =_gdg ._fag .ReadBit ();if _aeee !=nil {return _aeee ;};if _gcdd ==1{_gdg .UseExtTemplates =true ;
};_gcdd ,_aeee =_gdg ._fag .ReadBit ();if _aeee !=nil {return _aeee ;};if _gcdd ==1{_gdg .IsTPGDon =true ;};_cafg ,_aeee =_gdg ._fag .ReadBits (2);if _aeee !=nil {return _aeee ;};_gdg .GBTemplate =byte (_cafg &0xf);_gcdd ,_aeee =_gdg ._fag .ReadBit ();
if _aeee !=nil {return _aeee ;};if _gcdd ==1{_gdg .IsMMREncoded =true ;};if !_gdg .IsMMREncoded {_ddaf :=1;if _gdg .GBTemplate ==0{_ddaf =4;if _gdg .UseExtTemplates {_ddaf =12;};};if _aeee =_gdg .readGBAtPixels (_ddaf );_aeee !=nil {return _aeee ;};};if _aeee =_gdg .computeSegmentDataStructure ();
_aeee !=nil {return _aeee ;};_ee .Log .Trace ("\u0025\u0073",_gdg );return nil ;};func (_gggg *PageInformationSegment )readRequiresAuxiliaryBuffer ()error {_bece ,_cfeca :=_gggg ._beed .ReadBit ();if _cfeca !=nil {return _cfeca ;};if _bece ==1{_gggg ._abbbf =true ;
};return nil ;};func (_agae *TextRegion )readUseRefinement ()error {if !_agae .UseRefinement ||_agae .SbrTemplate !=0{return nil ;};var (_bbcea byte ;_cfga error ;);_agae .SbrATX =make ([]int8 ,2);_agae .SbrATY =make ([]int8 ,2);_bbcea ,_cfga =_agae ._gdcdf .ReadByte ();
if _cfga !=nil {return _cfga ;};_agae .SbrATX [0]=int8 (_bbcea );_bbcea ,_cfga =_agae ._gdcdf .ReadByte ();if _cfga !=nil {return _cfga ;};_agae .SbrATY [0]=int8 (_bbcea );_bbcea ,_cfga =_agae ._gdcdf .ReadByte ();if _cfga !=nil {return _cfga ;};_agae .SbrATX [1]=int8 (_bbcea );
_bbcea ,_cfga =_agae ._gdcdf .ReadByte ();if _cfga !=nil {return _cfga ;};_agae .SbrATY [1]=int8 (_bbcea );return nil ;};func (_cebe *Header )referenceSize ()uint {switch {case _cebe .SegmentNumber <=255:return 1;case _cebe .SegmentNumber <=65535:return 2;
default:return 4;};};var (_ Regioner =&TextRegion {};_ Segmenter =&TextRegion {};);func (_gabaa *GenericRegion )setParametersMMR (_gff bool ,_bgeg ,_bbce int64 ,_adad ,_dbabf uint32 ,_bgfb byte ,_bafd ,_baeg bool ,_gaae ,_agc []int8 ){_gabaa .DataOffset =_bgeg ;
_gabaa .DataLength =_bbce ;_gabaa .RegionSegment =&RegionSegment {};_gabaa .RegionSegment .BitmapHeight =_adad ;_gabaa .RegionSegment .BitmapWidth =_dbabf ;_gabaa .GBTemplate =_bgfb ;_gabaa .IsMMREncoded =_gff ;_gabaa .IsTPGDon =_bafd ;_gabaa .GBAtX =_gaae ;
_gabaa .GBAtY =_agc ;};func (_cddd *SymbolDictionary )decodeDirectlyThroughGenericRegion (_efae ,_ffgd uint32 )error {if _cddd ._eecgc ==nil {_cddd ._eecgc =NewGenericRegion (_cddd ._gdge );};_cddd ._eecgc .setParametersWithAt (false ,byte (_cddd .SdTemplate ),false ,false ,_cddd .SdATX ,_cddd .SdATY ,_efae ,_ffgd ,_cddd ._aefdb ,_cddd ._bbaf );
return _cddd .addSymbol (_cddd ._eecgc );};func (_bffcd *TextRegion )decodeDT ()(_feac int64 ,_gabe error ){if _bffcd .IsHuffmanEncoded {if _bffcd .SbHuffDT ==3{_feac ,_gabe =_bffcd ._cbgf .Decode (_bffcd ._gdcdf );if _gabe !=nil {return 0,_gabe ;};}else {var _dceg _db .Tabler ;
_dceg ,_gabe =_db .GetStandardTable (11+int (_bffcd .SbHuffDT ));if _gabe !=nil {return 0,_gabe ;};_feac ,_gabe =_dceg .Decode (_bffcd ._gdcdf );if _gabe !=nil {return 0,_gabe ;};};}else {var _dbgfc int32 ;_dbgfc ,_gabe =_bffcd ._eecdf .DecodeInt (_bffcd ._gaec );
if _gabe !=nil {return ;};_feac =int64 (_dbgfc );};_feac *=int64 (_bffcd .SbStrips );return _feac ,nil ;};func (_cdce *GenericRegion )GetRegionInfo ()*RegionSegment {return _cdce .RegionSegment };func (_gbdfd *SymbolDictionary )huffDecodeRefAggNInst ()(int64 ,error ){if !_gbdfd .SdHuffAggInstanceSelection {_dccg ,_cbbgb :=_db .GetStandardTable (1);
if _cbbgb !=nil {return 0,_cbbgb ;};return _dccg .Decode (_gbdfd ._gdge );};if _gbdfd ._eebf ==nil {var (_fggg int ;_baed error ;);if _gbdfd .SdHuffDecodeHeightSelection ==3{_fggg ++;};if _gbdfd .SdHuffDecodeWidthSelection ==3{_fggg ++;};if _gbdfd .SdHuffBMSizeSelection ==3{_fggg ++;
};_gbdfd ._eebf ,_baed =_gbdfd .getUserTable (_fggg );if _baed !=nil {return 0,_baed ;};};return _gbdfd ._eebf .Decode (_gbdfd ._gdge );};func (_cabc *PageInformationSegment )parseHeader ()(_dffe error ){_ee .Log .Trace ("\u005b\u0050\u0061\u0067\u0065I\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067m\u0065\u006e\u0074\u005d\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u002e\u002e");
defer func (){var _cggf ="[\u0050\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072m\u0061\u0074\u0069\u006f\u006e\u0053\u0065gm\u0065\u006e\u0074\u005d \u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065ad\u0065\u0072 \u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064";
if _dffe !=nil {_cggf +="\u0020\u0077\u0069t\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u0020"+_dffe .Error ();}else {_cggf +="\u0020\u0073\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079";};_ee .Log .Trace (_cggf );}();if _dffe =_cabc .readWidthAndHeight ();
_dffe !=nil {return _dffe ;};if _dffe =_cabc .readResolution ();_dffe !=nil {return _dffe ;};_ ,_dffe =_cabc ._beed .ReadBit ();if _dffe !=nil {return _dffe ;};if _dffe =_cabc .readCombinationOperatorOverrideAllowed ();_dffe !=nil {return _dffe ;};if _dffe =_cabc .readRequiresAuxiliaryBuffer ();
_dffe !=nil {return _dffe ;};if _dffe =_cabc .readCombinationOperator ();_dffe !=nil {return _dffe ;};if _dffe =_cabc .readDefaultPixelValue ();_dffe !=nil {return _dffe ;};if _dffe =_cabc .readContainsRefinement ();_dffe !=nil {return _dffe ;};if _dffe =_cabc .readIsLossless ();
_dffe !=nil {return _dffe ;};if _dffe =_cabc .readIsStriped ();_dffe !=nil {return _dffe ;};if _dffe =_cabc .readMaxStripeSize ();_dffe !=nil {return _dffe ;};if _dffe =_cabc .checkInput ();_dffe !=nil {return _dffe ;};_ee .Log .Trace ("\u0025\u0073",_cabc );
return nil ;};func (_cead *TextRegion )setParameters (_cfcc *_fbb .Decoder ,_ccac ,_aecaa bool ,_fabe ,_eecc uint32 ,_febd uint32 ,_gafgd int8 ,_baabc uint32 ,_gbce int8 ,_caca _ae .CombinationOperator ,_ccdc int8 ,_ffc int16 ,_cfece ,_ceecd ,_edfgc ,_ffdec ,_afcc ,_egdc ,_fegge ,_aeeb ,_aegd ,_gbbb int8 ,_bdbb ,_ggga []int8 ,_cacd []*_ae .Bitmap ,_ceaf int8 ){_cead ._eecdf =_cfcc ;
_cead .IsHuffmanEncoded =_ccac ;_cead .UseRefinement =_aecaa ;_cead .RegionInfo .BitmapWidth =_fabe ;_cead .RegionInfo .BitmapHeight =_eecc ;_cead .NumberOfSymbolInstances =_febd ;_cead .SbStrips =_gafgd ;_cead .NumberOfSymbols =_baabc ;_cead .DefaultPixel =_gbce ;
_cead .CombinationOperator =_caca ;_cead .IsTransposed =_ccdc ;_cead .ReferenceCorner =_ffc ;_cead .SbDsOffset =_cfece ;_cead .SbHuffFS =_ceecd ;_cead .SbHuffDS =_edfgc ;_cead .SbHuffDT =_ffdec ;_cead .SbHuffRDWidth =_afcc ;_cead .SbHuffRDHeight =_egdc ;
_cead .SbHuffRSize =_aegd ;_cead .SbHuffRDX =_fegge ;_cead .SbHuffRDY =_aeeb ;_cead .SbrTemplate =_gbbb ;_cead .SbrATX =_bdbb ;_cead .SbrATY =_ggga ;_cead .Symbols =_cacd ;_cead ._bfe =_ceaf ;};func (_bedg *TextRegion )decodeRdh ()(int64 ,error ){const _aadga ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064h";
if _bedg .IsHuffmanEncoded {if _bedg .SbHuffRDHeight ==3{if _bedg ._fdea ==nil {var (_agadf int ;_bgcbd error ;);if _bedg .SbHuffFS ==3{_agadf ++;};if _bedg .SbHuffDS ==3{_agadf ++;};if _bedg .SbHuffDT ==3{_agadf ++;};if _bedg .SbHuffRDWidth ==3{_agadf ++;
};_bedg ._fdea ,_bgcbd =_bedg .getUserTable (_agadf );if _bgcbd !=nil {return 0,_cf .Wrap (_bgcbd ,_aadga ,"");};};return _bedg ._fdea .Decode (_bedg ._gdcdf );};_ggdc ,_ebdba :=_db .GetStandardTable (14+int (_bedg .SbHuffRDHeight ));if _ebdba !=nil {return 0,_cf .Wrap (_ebdba ,_aadga ,"");
};return _ggdc .Decode (_bedg ._gdcdf );};_bdfb ,_ebgbg :=_bedg ._eecdf .DecodeInt (_bedg ._fffd );if _ebgbg !=nil {return 0,_cf .Wrap (_ebgbg ,_aadga ,"");};return int64 (_bdfb ),nil ;};func (_eacdd *TextRegion )initSymbols ()error {const _adfc ="i\u006e\u0069\u0074\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
for _ ,_abcd :=range _eacdd .Header .RTSegments {if _abcd ==nil {return _cf .Error (_adfc ,"\u006e\u0069\u006c\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020pr\u006f\u0076\u0069\u0064\u0065\u0064 \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0074\u0065\u0078\u0074\u0020\u0072\u0065g\u0069\u006f\u006e\u0020\u0053\u0079\u006d\u0062o\u006c\u0073");
};if _abcd .Type ==0{_aagb ,_fbae :=_abcd .GetSegmentData ();if _fbae !=nil {return _cf .Wrap (_fbae ,_adfc ,"");};_cfcad ,_eegfa :=_aagb .(*SymbolDictionary );if !_eegfa {return _cf .Error (_adfc ,"\u0072e\u0066\u0065r\u0072\u0065\u0064 \u0054\u006f\u0020\u0053\u0065\u0067\u006de\u006e\u0074\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_cfcad ._ccda =_eacdd ._bbbg ;_fdcde ,_fbae :=_cfcad .GetDictionary ();if _fbae !=nil {return _cf .Wrap (_fbae ,_adfc ,"");};_eacdd .Symbols =append (_eacdd .Symbols ,_fdcde ...);};};_eacdd .NumberOfSymbols =uint32 (len (_eacdd .Symbols ));return nil ;
};func (_bfcg *GenericRegion )Init (h *Header ,r _b .StreamReader )error {_bfcg .RegionSegment =NewRegionSegment (r );_bfcg ._fag =r ;return _bfcg .parseHeader ();};func (_gaga *Header )writeSegmentPageAssociation (_bdaac _b .BinaryWriter )(_eadf int ,_ecec error ){const _gaed ="w\u0072\u0069\u0074\u0065\u0053\u0065g\u006d\u0065\u006e\u0074\u0050\u0061\u0067\u0065\u0041s\u0073\u006f\u0063i\u0061t\u0069\u006f\u006e";
if _gaga .pageSize ()!=4{if _ecec =_bdaac .WriteByte (byte (_gaga .PageAssociation ));_ecec !=nil {return 0,_cf .Wrap (_ecec ,_gaed ,"\u0070\u0061\u0067\u0065\u0053\u0069\u007a\u0065\u0020\u0021\u003d\u0020\u0034");};return 1,nil ;};_aefb :=make ([]byte ,4);
_e .BigEndian .PutUint32 (_aefb ,uint32 (_gaga .PageAssociation ));if _eadf ,_ecec =_bdaac .Write (_aefb );_ecec !=nil {return 0,_cf .Wrap (_ecec ,_gaed ,"\u0034 \u0062y\u0074\u0065\u0020\u0070\u0061g\u0065\u0020n\u0075\u006d\u0062\u0065\u0072");};return _eadf ,nil ;
};func (_facc *SymbolDictionary )decodeThroughTextRegion (_cgcb ,_bfga ,_abc uint32 )error {if _facc ._ffaf ==nil {_facc ._ffaf =_cfaf (_facc ._gdge ,nil );_facc ._ffaf .setContexts (_facc ._aefdb ,_fbb .NewStats (512,1),_fbb .NewStats (512,1),_fbb .NewStats (512,1),_fbb .NewStats (512,1),_facc ._ccda ,_fbb .NewStats (512,1),_fbb .NewStats (512,1),_fbb .NewStats (512,1),_fbb .NewStats (512,1));
};if _ccdf :=_facc .setSymbolsArray ();_ccdf !=nil {return _ccdf ;};_facc ._ffaf .setParameters (_facc ._bbaf ,_facc .IsHuffmanEncoded ,true ,_cgcb ,_bfga ,_abc ,1,_facc ._bacdf +_facc ._fdee ,0,0,0,1,0,0,0,0,0,0,0,0,0,_facc .SdrTemplate ,_facc .SdrATX ,_facc .SdrATY ,_facc ._efff ,_facc ._daca );
return _facc .addSymbol (_facc ._ffaf );};func (_dded *SymbolDictionary )getUserTable (_adgc int )(_db .Tabler ,error ){var _dffd int ;for _ ,_fdfe :=range _dded .Header .RTSegments {if _fdfe .Type ==53{if _dffd ==_adgc {_fgaab ,_fcdd :=_fdfe .GetSegmentData ();
if _fcdd !=nil {return nil ,_fcdd ;};_egcae :=_fgaab .(_db .BasicTabler );return _db .NewEncodedTable (_egcae );};_dffd ++;};};return nil ,nil ;};type TableSegment struct{_gceg _b .StreamReader ;_bddb int32 ;_afab int32 ;_dgaga int32 ;_edbfc int32 ;_cbba int32 ;
};type Regioner interface{GetRegionBitmap ()(*_ae .Bitmap ,error );GetRegionInfo ()*RegionSegment ;};func (_cedg *SymbolDictionary )decodeRefinedSymbol (_dcccg ,_abaaf uint32 )error {var (_daef int ;_ggeg ,_ddcg int32 ;);if _cedg .IsHuffmanEncoded {_egceb ,_gage :=_cedg ._gdge .ReadBits (byte (_cedg ._daca ));
if _gage !=nil {return _gage ;};_daef =int (_egceb );_dbgb ,_gage :=_db .GetStandardTable (15);if _gage !=nil {return _gage ;};_gbea ,_gage :=_dbgb .Decode (_cedg ._gdge );if _gage !=nil {return _gage ;};_ggeg =int32 (_gbea );_gbea ,_gage =_dbgb .Decode (_cedg ._gdge );
if _gage !=nil {return _gage ;};_ddcg =int32 (_gbea );_dbgb ,_gage =_db .GetStandardTable (1);if _gage !=nil {return _gage ;};if _ ,_gage =_dbgb .Decode (_cedg ._gdge );_gage !=nil {return _gage ;};_cedg ._gdge .Align ();}else {_edbag ,_fff :=_cedg ._bbaf .DecodeIAID (uint64 (_cedg ._daca ),_cedg ._ccda );
if _fff !=nil {return _fff ;};_daef =int (_edbag );_ggeg ,_fff =_cedg ._bbaf .DecodeInt (_cedg ._aead );if _fff !=nil {return _fff ;};_ddcg ,_fff =_cedg ._bbaf .DecodeInt (_cedg ._eacd );if _fff !=nil {return _fff ;};};if _bagg :=_cedg .setSymbolsArray ();
_bagg !=nil {return _bagg ;};_gdfc :=_cedg ._efff [_daef ];if _edge :=_cedg .decodeNewSymbols (_dcccg ,_abaaf ,_gdfc ,_ggeg ,_ddcg );_edge !=nil {return _edge ;};if _cedg .IsHuffmanEncoded {_cedg ._gdge .Align ();};return nil ;};func (_ged *HalftoneRegion )parseHeader ()error {if _gfa :=_ged .RegionSegment .parseHeader ();
_gfa !=nil {return _gfa ;};_deba ,_defb :=_ged ._gabg .ReadBit ();if _defb !=nil {return _defb ;};_ged .HDefaultPixel =int8 (_deba );_aadg ,_defb :=_ged ._gabg .ReadBits (3);if _defb !=nil {return _defb ;};_ged .CombinationOperator =_ae .CombinationOperator (_aadg &0xf);
_deba ,_defb =_ged ._gabg .ReadBit ();if _defb !=nil {return _defb ;};if _deba ==1{_ged .HSkipEnabled =true ;};_aadg ,_defb =_ged ._gabg .ReadBits (2);if _defb !=nil {return _defb ;};_ged .HTemplate =byte (_aadg &0xf);_deba ,_defb =_ged ._gabg .ReadBit ();
if _defb !=nil {return _defb ;};if _deba ==1{_ged .IsMMREncoded =true ;};_aadg ,_defb =_ged ._gabg .ReadBits (32);if _defb !=nil {return _defb ;};_ged .HGridWidth =uint32 (_aadg &_g .MaxUint32 );_aadg ,_defb =_ged ._gabg .ReadBits (32);if _defb !=nil {return _defb ;
};_ged .HGridHeight =uint32 (_aadg &_g .MaxUint32 );_aadg ,_defb =_ged ._gabg .ReadBits (32);if _defb !=nil {return _defb ;};_ged .HGridX =int32 (_aadg &_g .MaxInt32 );_aadg ,_defb =_ged ._gabg .ReadBits (32);if _defb !=nil {return _defb ;};_ged .HGridY =int32 (_aadg &_g .MaxInt32 );
_aadg ,_defb =_ged ._gabg .ReadBits (16);if _defb !=nil {return _defb ;};_ged .HRegionX =uint16 (_aadg &_g .MaxUint16 );_aadg ,_defb =_ged ._gabg .ReadBits (16);if _defb !=nil {return _defb ;};_ged .HRegionY =uint16 (_aadg &_g .MaxUint16 );if _defb =_ged .computeSegmentDataStructure ();
_defb !=nil {return _defb ;};return _ged .checkInput ();};func (_gdf *GenericRegion )copyLineAbove (_baec int )error {_edfg :=_baec *_gdf .Bitmap .RowStride ;_bac :=_edfg -_gdf .Bitmap .RowStride ;for _bbb :=0;_bbb < _gdf .Bitmap .RowStride ;_bbb ++{_bbc ,_ebf :=_gdf .Bitmap .GetByte (_bac );
if _ebf !=nil {return _ebf ;};_bac ++;if _ebf =_gdf .Bitmap .SetByte (_edfg ,_bbc );_ebf !=nil {return _ebf ;};_edfg ++;};return nil ;};var _ SegmentEncoder =&RegionSegment {};func (_gbfd *GenericRegion )overrideAtTemplate3 (_efee ,_cgeg ,_ebb ,_bge ,_fbgd int )int {_efee &=0x3EF;
if _gbfd .GBAtY [0]==0&&_gbfd .GBAtX [0]>=-int8 (_fbgd ){_efee |=(_bge >>uint (7-(int8 (_fbgd )+_gbfd .GBAtX [0]))&0x1)<<4;}else {_efee |=int (_gbfd .getPixel (_cgeg +int (_gbfd .GBAtX [0]),_ebb +int (_gbfd .GBAtY [0])))<<4;};return _efee ;};func (_gfbaae *TextRegion )String ()string {_fcca :=&_a .Builder {};
_fcca .WriteString ("\u000a[\u0054E\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u000a");_fcca .WriteString (_gfbaae .RegionInfo .String ()+"\u000a");_fcca .WriteString (_fb .Sprintf ("\u0009\u002d\u0020\u0053br\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0025\u0076\u000a",_gfbaae .SbrTemplate ));
_fcca .WriteString (_fb .Sprintf ("\u0009-\u0020S\u0062\u0044\u0073\u004f\u0066f\u0073\u0065t\u003a\u0020\u0025\u0076\u000a",_gfbaae .SbDsOffset ));_fcca .WriteString (_fb .Sprintf ("\t\u002d \u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0050i\u0078\u0065\u006c\u003a %\u0076\u000a",_gfbaae .DefaultPixel ));
_fcca .WriteString (_fb .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0076\u000a",_gfbaae .CombinationOperator ));_fcca .WriteString (_fb .Sprintf ("\t\u002d \u0049\u0073\u0054\u0072\u0061\u006e\u0073\u0070o\u0073\u0065\u0064\u003a %\u0076\u000a",_gfbaae .IsTransposed ));
_fcca .WriteString (_fb .Sprintf ("\u0009\u002d\u0020Re\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0043\u006f\u0072\u006e\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_gfbaae .ReferenceCorner ));_fcca .WriteString (_fb .Sprintf ("\t\u002d\u0020\u0055\u0073eR\u0065f\u0069\u006e\u0065\u006d\u0065n\u0074\u003a\u0020\u0025\u0076\u000a",_gfbaae .UseRefinement ));
_fcca .WriteString (_fb .Sprintf ("\u0009-\u0020\u0049\u0073\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045n\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0076\u000a",_gfbaae .IsHuffmanEncoded ));if _gfbaae .IsHuffmanEncoded {_fcca .WriteString (_fb .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_gfbaae .SbHuffRSize ));
_fcca .WriteString (_fb .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0059:\u0020\u0025\u0076\u000a",_gfbaae .SbHuffRDY ));_fcca .WriteString (_fb .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0058:\u0020\u0025\u0076\u000a",_gfbaae .SbHuffRDX ));
_fcca .WriteString (_fb .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069\u0067\u0068\u0074\u003a\u0020\u0025v\u000a",_gfbaae .SbHuffRDHeight ));_fcca .WriteString (_fb .Sprintf ("\t\u002d\u0020\u0053\u0062Hu\u0066f\u0052\u0044\u0057\u0069\u0064t\u0068\u003a\u0020\u0025\u0076\u000a",_gfbaae .SbHuffRDWidth ));
_fcca .WriteString (_fb .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0054\u003a\u0020\u0025\u0076\u000a",_gfbaae .SbHuffDT ));_fcca .WriteString (_fb .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0053\u003a\u0020\u0025\u0076\u000a",_gfbaae .SbHuffDS ));
_fcca .WriteString (_fb .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0046\u0053\u003a\u0020\u0025\u0076\u000a",_gfbaae .SbHuffFS ));};_fcca .WriteString (_fb .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_gfbaae .SbrATX ));
_fcca .WriteString (_fb .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0059:\u0020\u0025\u0076\u000a",_gfbaae .SbrATY ));_fcca .WriteString (_fb .Sprintf ("\u0009\u002d\u0020N\u0075\u006d\u0062\u0065r\u004f\u0066\u0053\u0079\u006d\u0062\u006fl\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_gfbaae .NumberOfSymbolInstances ));
_fcca .WriteString (_fb .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_gfbaae .SbrATX ));return _fcca .String ();};func (_bea *HalftoneRegion )shiftAndFill (_dgaa int )int {_dgaa >>=8;if _dgaa < 0{_egdg :=int (_g .Log (float64 (_beec (_dgaa )))/_g .Log (2));
_dfeb :=31-_egdg ;for _bcb :=1;_bcb < _dfeb ;_bcb ++{_dgaa |=1<<uint (31-_bcb );};};return _dgaa ;};func (_ebdb *SymbolDictionary )encodeFlags (_gdgef _b .BinaryWriter )(_gdcf int ,_ffdda error ){const _gfga ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _ffdda =_gdgef .SkipBits (3);_ffdda !=nil {return 0,_cf .Wrap (_ffdda ,_gfga ,"\u0065\u006d\u0070\u0074\u0079\u0020\u0062\u0069\u0074\u0073");};var _cbdf int ;if _ebdb .SdrTemplate > 0{_cbdf =1;};if _ffdda =_gdgef .WriteBit (_cbdf );_ffdda !=nil {return _gdcf ,_cf .Wrap (_ffdda ,_gfga ,"s\u0064\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");
};_cbdf =0;if _ebdb .SdTemplate > 1{_cbdf =1;};if _ffdda =_gdgef .WriteBit (_cbdf );_ffdda !=nil {return _gdcf ,_cf .Wrap (_ffdda ,_gfga ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_cbdf =0;if _ebdb .SdTemplate ==1||_ebdb .SdTemplate ==3{_cbdf =1;
};if _ffdda =_gdgef .WriteBit (_cbdf );_ffdda !=nil {return _gdcf ,_cf .Wrap (_ffdda ,_gfga ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_cbdf =0;if _ebdb ._fcge {_cbdf =1;};if _ffdda =_gdgef .WriteBit (_cbdf );_ffdda !=nil {return _gdcf ,_cf .Wrap (_ffdda ,_gfga ,"\u0063\u006f\u0064in\u0067\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0065\u0064");
};_cbdf =0;if _ebdb ._abdf {_cbdf =1;};if _ffdda =_gdgef .WriteBit (_cbdf );_ffdda !=nil {return _gdcf ,_cf .Wrap (_ffdda ,_gfga ,"\u0063\u006f\u0064\u0069ng\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0075\u0073\u0065\u0064");};_cbdf =0;if _ebdb .SdHuffAggInstanceSelection {_cbdf =1;
};if _ffdda =_gdgef .WriteBit (_cbdf );_ffdda !=nil {return _gdcf ,_cf .Wrap (_ffdda ,_gfga ,"\u0073\u0064\u0048\u0075\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074");};_cbdf =int (_ebdb .SdHuffBMSizeSelection );if _ffdda =_gdgef .WriteBit (_cbdf );
_ffdda !=nil {return _gdcf ,_cf .Wrap (_ffdda ,_gfga ,"\u0073\u0064\u0048u\u0066\u0066\u0042\u006d\u0053\u0069\u007a\u0065");};_cbdf =0;if _ebdb .SdHuffDecodeWidthSelection > 1{_cbdf =1;};if _ffdda =_gdgef .WriteBit (_cbdf );_ffdda !=nil {return _gdcf ,_cf .Wrap (_ffdda ,_gfga ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");
};_cbdf =0;switch _ebdb .SdHuffDecodeWidthSelection {case 1,3:_cbdf =1;};if _ffdda =_gdgef .WriteBit (_cbdf );_ffdda !=nil {return _gdcf ,_cf .Wrap (_ffdda ,_gfga ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_cbdf =0;if _ebdb .SdHuffDecodeHeightSelection > 1{_cbdf =1;
};if _ffdda =_gdgef .WriteBit (_cbdf );_ffdda !=nil {return _gdcf ,_cf .Wrap (_ffdda ,_gfga ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_cbdf =0;switch _ebdb .SdHuffDecodeHeightSelection {case 1,3:_cbdf =1;};if _ffdda =_gdgef .WriteBit (_cbdf );
_ffdda !=nil {return _gdcf ,_cf .Wrap (_ffdda ,_gfga ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_cbdf =0;if _ebdb .UseRefinementAggregation {_cbdf =1;};if _ffdda =_gdgef .WriteBit (_cbdf );_ffdda !=nil {return _gdcf ,_cf .Wrap (_ffdda ,_gfga ,"\u0073\u0064\u0052\u0065\u0066\u0041\u0067\u0067");
};_cbdf =0;if _ebdb .IsHuffmanEncoded {_cbdf =1;};if _ffdda =_gdgef .WriteBit (_cbdf );_ffdda !=nil {return _gdcf ,_cf .Wrap (_ffdda ,_gfga ,"\u0073\u0064\u0048\u0075\u0066\u0066");};return 2,nil ;};func (_bcd *PageInformationSegment )readIsLossless ()error {_beca ,_bcg :=_bcd ._beed .ReadBit ();
if _bcg !=nil {return _bcg ;};if _beca ==1{_bcd .IsLossless =true ;};return nil ;};func (_dbe *HalftoneRegion )computeSegmentDataStructure ()error {_dbe .DataOffset =_dbe ._gabg .StreamPosition ();_dbe .DataHeaderLength =_dbe .DataOffset -_dbe .DataHeaderOffset ;
_dbe .DataLength =int64 (_dbe ._gabg .Length ())-_dbe .DataHeaderLength ;return nil ;};func (_dacee *GenericRegion )readGBAtPixels (_gaba int )error {const _efccc ="\u0072\u0065\u0061\u0064\u0047\u0042\u0041\u0074\u0050i\u0078\u0065\u006c\u0073";_dacee .GBAtX =make ([]int8 ,_gaba );
_dacee .GBAtY =make ([]int8 ,_gaba );for _effa :=0;_effa < _gaba ;_effa ++{_cgbe ,_bfcc :=_dacee ._fag .ReadByte ();if _bfcc !=nil {return _cf .Wrapf (_bfcc ,_efccc ,"\u0058\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_effa );};_dacee .GBAtX [_effa ]=int8 (_cgbe );
_cgbe ,_bfcc =_dacee ._fag .ReadByte ();if _bfcc !=nil {return _cf .Wrapf (_bfcc ,_efccc ,"\u0059\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_effa );};_dacee .GBAtY [_effa ]=int8 (_cgbe );};return nil ;};func (_ggbb *Header )readNumberOfReferredToSegments (_fdcc _b .StreamReader )(uint64 ,error ){const _abaf ="\u0072\u0065\u0061\u0064\u004e\u0075\u006d\u0062\u0065\u0072O\u0066\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
_faf ,_dbfc :=_fdcc .ReadBits (3);if _dbfc !=nil {return 0,_cf .Wrap (_dbfc ,_abaf ,"\u0063\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0072\u0074\u0073");};_faf &=0xf;var _fbad []byte ;if _faf <=4{_fbad =make ([]byte ,5);for _eafa :=0;_eafa <=4;_eafa ++{_ege ,_fdfb :=_fdcc .ReadBit ();
if _fdfb !=nil {return 0,_cf .Wrap (_fdfb ,_abaf ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_fbad [_eafa ]=byte (_ege );};}else {_faf ,_dbfc =_fdcc .ReadBits (29);if _dbfc !=nil {return 0,_dbfc ;};_faf &=_g .MaxInt32 ;_fbcd :=(_faf +8)>>3;
_fbcd <<=3;_fbad =make ([]byte ,_fbcd );var _cage uint64 ;for _cage =0;_cage < _fbcd ;_cage ++{_faag ,_fede :=_fdcc .ReadBit ();if _fede !=nil {return 0,_cf .Wrap (_fede ,_abaf ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_fbad [_cage ]=byte (_faag );
};};return _faf ,nil ;};func (_efec *Header )readSegmentNumber (_egca _b .StreamReader )error {const _cafc ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";_gdgg :=make ([]byte ,4);_ ,_geba :=_egca .Read (_gdgg );
if _geba !=nil {return _cf .Wrap (_geba ,_cafc ,"");};_efec .SegmentNumber =_e .BigEndian .Uint32 (_gdgg );return nil ;};func (_cdad *PatternDictionary )parseHeader ()error {_ee .Log .Trace ("\u005b\u0050\u0041\u0054\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054I\u004f\u004e\u0041\u0052\u0059\u005d[\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d\u0020b\u0065\u0067\u0069\u006e");
defer func (){_ee .Log .Trace ("\u005b\u0050\u0041T\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u005b\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
}();_ ,_faab :=_cdad ._eebb .ReadBits (5);if _faab !=nil {return _faab ;};if _faab =_cdad .readTemplate ();_faab !=nil {return _faab ;};if _faab =_cdad .readIsMMREncoded ();_faab !=nil {return _faab ;};if _faab =_cdad .readPatternWidthAndHeight ();_faab !=nil {return _faab ;
};if _faab =_cdad .readGrayMax ();_faab !=nil {return _faab ;};if _faab =_cdad .computeSegmentDataStructure ();_faab !=nil {return _faab ;};return _cdad .checkInput ();};func (_baadg *TextRegion )readHuffmanFlags ()error {var (_bcac int ;_cbdg uint64 ;
_degc error ;);_ ,_degc =_baadg ._gdcdf .ReadBit ();if _degc !=nil {return _degc ;};_bcac ,_degc =_baadg ._gdcdf .ReadBit ();if _degc !=nil {return _degc ;};_baadg .SbHuffRSize =int8 (_bcac );_cbdg ,_degc =_baadg ._gdcdf .ReadBits (2);if _degc !=nil {return _degc ;
};_baadg .SbHuffRDY =int8 (_cbdg )&0xf;_cbdg ,_degc =_baadg ._gdcdf .ReadBits (2);if _degc !=nil {return _degc ;};_baadg .SbHuffRDX =int8 (_cbdg )&0xf;_cbdg ,_degc =_baadg ._gdcdf .ReadBits (2);if _degc !=nil {return _degc ;};_baadg .SbHuffRDHeight =int8 (_cbdg )&0xf;
_cbdg ,_degc =_baadg ._gdcdf .ReadBits (2);if _degc !=nil {return _degc ;};_baadg .SbHuffRDWidth =int8 (_cbdg )&0xf;_cbdg ,_degc =_baadg ._gdcdf .ReadBits (2);if _degc !=nil {return _degc ;};_baadg .SbHuffDT =int8 (_cbdg )&0xf;_cbdg ,_degc =_baadg ._gdcdf .ReadBits (2);
if _degc !=nil {return _degc ;};_baadg .SbHuffDS =int8 (_cbdg )&0xf;_cbdg ,_degc =_baadg ._gdcdf .ReadBits (2);if _degc !=nil {return _degc ;};_baadg .SbHuffFS =int8 (_cbdg )&0xf;return nil ;};type template0 struct{};func (_ccff *TextRegion )getUserTable (_daa int )(_db .Tabler ,error ){const _ebgbe ="\u0067\u0065\u0074U\u0073\u0065\u0072\u0054\u0061\u0062\u006c\u0065";
var _gdab int ;for _ ,_dafca :=range _ccff .Header .RTSegments {if _dafca .Type ==53{if _gdab ==_daa {_dcff ,_efdd :=_dafca .GetSegmentData ();if _efdd !=nil {return nil ,_efdd ;};_gdbfc ,_gfgg :=_dcff .(*TableSegment );if !_gfgg {_ee .Log .Debug (_fb .Sprintf ("\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079p\u0065\u00205\u0033\u0020\u002d\u0020\u0061\u006ed\u0020in\u0064\u0065\u0078\u003a\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_dafca .SegmentNumber ));
return nil ,_cf .Error (_ebgbe ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079\u0070e\u0020\u0035\u0033\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u002a\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};return _db .NewEncodedTable (_gdbfc );};_gdab ++;};};return nil ,nil ;};func (_fdfd *Header )subInputReader ()(_b .StreamReader ,error ){return _b .NewSubstreamReader (_fdfd .Reader ,_fdfd .SegmentDataStartOffset ,_fdfd .SegmentDataLength );};type Documenter interface{GetPage (int )(Pager ,error );
GetGlobalSegment (int )(*Header ,error );};func (_cagd *Header )writeFlags (_ccdg _b .BinaryWriter )(_gddf error ){const _gbdf ="\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065F\u006c\u0061\u0067\u0073";_bedd :=byte (_cagd .Type );
if _gddf =_ccdg .WriteByte (_bedd );_gddf !=nil {return _cf .Wrap (_gddf ,_gbdf ,"\u0077\u0072\u0069ti\u006e\u0067\u0020\u0073\u0065\u0067\u006d\u0065\u006et\u0020t\u0079p\u0065 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};if !_cagd .RetainFlag &&!_cagd .PageAssociationFieldSize {return nil ;};if _gddf =_ccdg .SkipBits (-8);_gddf !=nil {return _cf .Wrap (_gddf ,_gbdf ,"\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0062\u0061\u0063\u006b\u0020\u0074\u0068\u0065\u0020\u0062\u0069\u0074\u0073\u0020\u0066\u0061il\u0065\u0064");
};var _cbaf int ;if _cagd .RetainFlag {_cbaf =1;};if _gddf =_ccdg .WriteBit (_cbaf );_gddf !=nil {return _cf .Wrap (_gddf ,_gbdf ,"\u0072\u0065\u0074\u0061in\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067\u0073");};_cbaf =0;if _cagd .PageAssociationFieldSize {_cbaf =1;
};if _gddf =_ccdg .WriteBit (_cbaf );_gddf !=nil {return _cf .Wrap (_gddf ,_gbdf ,"p\u0061\u0067\u0065\u0020as\u0073o\u0063\u0069\u0061\u0074\u0069o\u006e\u0020\u0066\u006c\u0061\u0067");};_ccdg .FinishByte ();return nil ;};func _beec (_bde int )int {if _bde ==0{return 0;
};_bde |=_bde >>1;_bde |=_bde >>2;_bde |=_bde >>4;_bde |=_bde >>8;_bde |=_bde >>16;return (_bde +1)>>1;};func (_agbdf *TextRegion )getSymbols ()error {if _agbdf .Header .RTSegments !=nil {return _agbdf .initSymbols ();};return nil ;};func (_gbca *SymbolDictionary )checkInput ()error {if _gbca .SdHuffDecodeHeightSelection ==2{_ee .Log .Debug ("\u0053\u0079\u006d\u0062\u006fl\u0020\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u0053e\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0070\u0065r\u006d\u0069\u0074\u0074\u0065\u0064",_gbca .SdHuffDecodeHeightSelection );
};if _gbca .SdHuffDecodeWidthSelection ==2{_ee .Log .Debug ("\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0057\u0069\u0064t\u0068\u0020\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061l\u0075\u0065\u0020\u006e\u006f\u0074 \u0070\u0065r\u006d\u0069t\u0074e\u0064",_gbca .SdHuffDecodeWidthSelection );
};if _gbca .IsHuffmanEncoded {if _gbca .SdTemplate !=0{_ee .Log .Debug ("\u0053\u0044T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e \u0030\u0029",_gbca .SdTemplate );
};if !_gbca .UseRefinementAggregation {if !_gbca .UseRefinementAggregation {if _gbca ._fcge {_ee .Log .Debug ("\u0049\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074ex\u0074\u0052\u0065\u0074\u0061\u0069n\u0065\u0064\u0020\u003d\u0020\u0074\u0072\u0075\u0065\u0020\u0028\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0066\u0061\u006cs\u0065\u0029");
_gbca ._fcge =false ;};if _gbca ._abdf {_ee .Log .Debug ("\u0069s\u0043\u006fd\u0069\u006e\u0067\u0043o\u006e\u0074\u0065x\u0074\u0055\u0073\u0065\u0064\u0020\u003d\u0020\u0074ru\u0065\u0020\u0028s\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020f\u0061\u006cs\u0065\u0029");
_gbca ._abdf =false ;};};};}else {if _gbca .SdHuffBMSizeSelection !=0{_ee .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066B\u004d\u0053\u0069\u007a\u0065\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_gbca .SdHuffBMSizeSelection =0;};if _gbca .SdHuffDecodeWidthSelection !=0{_ee .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068\u0053\u0065\u006c\u0065\u0063\u0074\u0069o\u006e\u0020\u0073\u0068\u006fu\u006c\u0064 \u0062\u0065\u0020\u0030");
_gbca .SdHuffDecodeWidthSelection =0;};if _gbca .SdHuffDecodeHeightSelection !=0{_ee .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0048e\u0069\u0067\u0068\u0074\u0053\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_gbca .SdHuffDecodeHeightSelection =0;};};if !_gbca .UseRefinementAggregation {if _gbca .SdrTemplate !=0{_ee .Log .Debug ("\u0053\u0044\u0052\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u003d\u0020\u0025\u0064\u0020\u0028s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_gbca .SdrTemplate );
_gbca .SdrTemplate =0;};};if !_gbca .IsHuffmanEncoded ||!_gbca .UseRefinementAggregation {if _gbca .SdHuffAggInstanceSelection {_ee .Log .Debug ("\u0053d\u0048\u0075f\u0066\u0041\u0067g\u0049\u006e\u0073\u0074\u0061\u006e\u0063e\u0053\u0065\u006c\u0065\u0063\u0074i\u006f\u006e\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_gbca .SdHuffAggInstanceSelection );
};};return nil ;};func (_cfac *PageInformationSegment )readCombinationOperatorOverrideAllowed ()error {_ffda ,_dfee :=_cfac ._beed .ReadBit ();if _dfee !=nil {return _dfee ;};if _ffda ==1{_cfac ._degb =true ;};return nil ;};type SymbolDictionary struct{_gdge _b .StreamReader ;
SdrTemplate int8 ;SdTemplate int8 ;_fcge bool ;_abdf bool ;SdHuffAggInstanceSelection bool ;SdHuffBMSizeSelection int8 ;SdHuffDecodeWidthSelection int8 ;SdHuffDecodeHeightSelection int8 ;UseRefinementAggregation bool ;IsHuffmanEncoded bool ;SdATX []int8 ;
SdATY []int8 ;SdrATX []int8 ;SdrATY []int8 ;NumberOfExportedSymbols uint32 ;NumberOfNewSymbols uint32 ;Header *Header ;_bacdf uint32 ;_bdge []*_ae .Bitmap ;_fdee uint32 ;_dgae []*_ae .Bitmap ;_dafb _db .Tabler ;_cdgb _db .Tabler ;_dee _db .Tabler ;_eebf _db .Tabler ;
_fdfa []*_ae .Bitmap ;_efff []*_ae .Bitmap ;_bbaf *_fbb .Decoder ;_ffaf *TextRegion ;_eecgc *GenericRegion ;_adba *GenericRefinementRegion ;_aefdb *_fbb .DecoderStats ;_cfggc *_fbb .DecoderStats ;_ecbc *_fbb .DecoderStats ;_dcb *_fbb .DecoderStats ;_bcfed *_fbb .DecoderStats ;
_aead *_fbb .DecoderStats ;_eacd *_fbb .DecoderStats ;_gcbg *_fbb .DecoderStats ;_ccda *_fbb .DecoderStats ;_daca int8 ;_agfb *_ae .Bitmaps ;_feec []int ;_beddc map[int ]int ;_edefb bool ;};var _ _db .BasicTabler =&TableSegment {};func (_bbbf *HalftoneRegion )computeX (_edbf ,_ddag int )int {return _bbbf .shiftAndFill (int (_bbbf .HGridX )+_edbf *int (_bbbf .HRegionY )+_ddag *int (_bbbf .HRegionX ));
};func (_ecfd *SymbolDictionary )parseHeader ()(_dacac error ){_ee .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _dacac !=nil {_ee .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u0020\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u005b\u0050\u0041\u0052SE\u002d\u0048\u0045A\u0044\u0045R\u005d\u0020\u0066\u0061\u0069\u006ce\u0064\u002e \u0025\u0076",_dacac );
}else {_ee .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _dacac =_ecfd .readRegionFlags ();_dacac !=nil {return _dacac ;};if _dacac =_ecfd .setAtPixels ();_dacac !=nil {return _dacac ;};if _dacac =_ecfd .setRefinementAtPixels ();_dacac !=nil {return _dacac ;};if _dacac =_ecfd .readNumberOfExportedSymbols ();
_dacac !=nil {return _dacac ;};if _dacac =_ecfd .readNumberOfNewSymbols ();_dacac !=nil {return _dacac ;};if _dacac =_ecfd .setInSyms ();_dacac !=nil {return _dacac ;};if _ecfd ._abdf {_debcf :=_ecfd .Header .RTSegments ;for _gffg :=len (_debcf )-1;_gffg >=0;
_gffg --{if _debcf [_gffg ].Type ==0{_bcgc ,_abfb :=_debcf [_gffg ].SegmentData .(*SymbolDictionary );if !_abfb {_dacac =_fb .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074:\u0020\u0025\u0076\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020S\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_debcf [_gffg ]);
return _dacac ;};if _bcgc ._abdf {_ecfd .setRetainedCodingContexts (_bcgc );};break ;};};};if _dacac =_ecfd .checkInput ();_dacac !=nil {return _dacac ;};return nil ;};type Pager interface{GetSegment (int )(*Header ,error );GetBitmap ()(*_ae .Bitmap ,error );
};type OrganizationType uint8 ;func (_dfbb *PatternDictionary )readGrayMax ()error {_bgc ,_adg :=_dfbb ._eebb .ReadBits (32);if _adg !=nil {return _adg ;};_dfbb .GrayMax =uint32 (_bgc &_g .MaxUint32 );return nil ;};type EncodeInitializer interface{InitEncode ();
};func (_fbdb *GenericRegion )setParametersWithAt (_eebag bool ,_gbcb byte ,_gbfa ,_ebag bool ,_ggcc ,_bbgfc []int8 ,_fcfa ,_ebdd uint32 ,_baca *_fbb .DecoderStats ,_ggbfa *_fbb .Decoder ){_fbdb .IsMMREncoded =_eebag ;_fbdb .GBTemplate =_gbcb ;_fbdb .IsTPGDon =_gbfa ;
_fbdb .GBAtX =_ggcc ;_fbdb .GBAtY =_bbgfc ;_fbdb .RegionSegment .BitmapHeight =_ebdd ;_fbdb .RegionSegment .BitmapWidth =_fcfa ;_fbdb ._fcda =nil ;_fbdb .Bitmap =nil ;if _baca !=nil {_fbdb ._efc =_baca ;};if _ggbfa !=nil {_fbdb ._eeg =_ggbfa ;};_ee .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049O\u004e\u005d\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073\u0020\u0053\u0044\u0041t\u003a\u0020\u0025\u0073",_fbdb );
};func NewHeader (d Documenter ,r _b .StreamReader ,offset int64 ,organizationType OrganizationType )(*Header ,error ){_cadd :=&Header {Reader :r };if _efd :=_cadd .parse (d ,r ,offset ,organizationType );_efd !=nil {return nil ,_cf .Wrap (_efd ,"\u004ee\u0077\u0048\u0065\u0061\u0064\u0065r","");
};return _cadd ,nil ;};func (_fdda *PatternDictionary )readPatternWidthAndHeight ()error {_afde ,_ddfb :=_fdda ._eebb .ReadByte ();if _ddfb !=nil {return _ddfb ;};_fdda .HdpWidth =_afde ;_afde ,_ddfb =_fdda ._eebb .ReadByte ();if _ddfb !=nil {return _ddfb ;
};_fdda .HdpHeight =_afde ;return nil ;};func (_eeaa *GenericRefinementRegion )parseHeader ()(_ffa error ){_ee .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0048e\u0061\u0064e\u0072\u002e\u002e\u002e");
_caf :=_f .Now ();defer func (){if _ffa ==nil {_ee .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045G\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020h\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0069\u006e\u0069\u0073\u0068id\u0020\u0069\u006e\u003a\u0020\u0025\u0064\u0020\u006e\u0073",_f .Since (_caf ).Nanoseconds ());
}else {_ee .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0068\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0073",_ffa );
};}();if _ffa =_eeaa .RegionInfo .parseHeader ();_ffa !=nil {return _ffa ;};_ ,_ffa =_eeaa ._gb .ReadBits (6);if _ffa !=nil {return _ffa ;};_eeaa .IsTPGROn ,_ffa =_eeaa ._gb .ReadBool ();if _ffa !=nil {return _ffa ;};var _ecc int ;_ecc ,_ffa =_eeaa ._gb .ReadBit ();
if _ffa !=nil {return _ffa ;};_eeaa .TemplateID =int8 (_ecc );switch _eeaa .TemplateID {case 0:_eeaa .Template =_eeaa ._ad ;if _ffa =_eeaa .readAtPixels ();_ffa !=nil {return ;};case 1:_eeaa .Template =_eeaa ._ga ;};return nil ;};func (_bafda *TextRegion )symbolIDCodeLengths ()error {var (_gabc []*_db .Code ;
_ddega uint64 ;_fcgb _db .Tabler ;_egea error ;);for _cfff :=0;_cfff < 35;_cfff ++{_ddega ,_egea =_bafda ._gdcdf .ReadBits (4);if _egea !=nil {return _egea ;};_gafgb :=int (_ddega &0xf);if _gafgb > 0{_gabc =append (_gabc ,_db .NewCode (int32 (_gafgb ),0,int32 (_cfff ),false ));
};};_fcgb ,_egea =_db .NewFixedSizeTable (_gabc );if _egea !=nil {return _egea ;};var (_bdec int64 ;_ddd uint32 ;_caaa []*_db .Code ;_ecg int64 ;);for _ddd < _bafda .NumberOfSymbols {_ecg ,_egea =_fcgb .Decode (_bafda ._gdcdf );if _egea !=nil {return _egea ;
};if _ecg < 32{if _ecg > 0{_caaa =append (_caaa ,_db .NewCode (int32 (_ecg ),0,int32 (_ddd ),false ));};_bdec =_ecg ;_ddd ++;}else {var _bbcc ,_eegdd int64 ;switch _ecg {case 32:_ddega ,_egea =_bafda ._gdcdf .ReadBits (2);if _egea !=nil {return _egea ;
};_bbcc =3+int64 (_ddega );if _ddd > 0{_eegdd =_bdec ;};case 33:_ddega ,_egea =_bafda ._gdcdf .ReadBits (3);if _egea !=nil {return _egea ;};_bbcc =3+int64 (_ddega );case 34:_ddega ,_egea =_bafda ._gdcdf .ReadBits (7);if _egea !=nil {return _egea ;};_bbcc =11+int64 (_ddega );
};for _baeca :=0;_baeca < int (_bbcc );_baeca ++{if _eegdd > 0{_caaa =append (_caaa ,_db .NewCode (int32 (_eegdd ),0,int32 (_ddd ),false ));};_ddd ++;};};};_bafda ._gdcdf .Align ();_bafda ._dfgb ,_egea =_db .NewFixedSizeTable (_caaa );return _egea ;};func (_eeac *PageInformationSegment )readWidthAndHeight ()error {_cgdea ,_dbee :=_eeac ._beed .ReadBits (32);
if _dbee !=nil {return _dbee ;};_eeac .PageBMWidth =int (_cgdea &_g .MaxInt32 );_cgdea ,_dbee =_eeac ._beed .ReadBits (32);if _dbee !=nil {return _dbee ;};_eeac .PageBMHeight =int (_cgdea &_g .MaxInt32 );return nil ;};func (_dfeg *HalftoneRegion )GetPatterns ()([]*_ae .Bitmap ,error ){var (_cgfd []*_ae .Bitmap ;
_aaf error ;);for _ ,_gag :=range _dfeg ._fgfg .RTSegments {var _agd Segmenter ;_agd ,_aaf =_gag .GetSegmentData ();if _aaf !=nil {_ee .Log .Debug ("\u0047e\u0074\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061 \u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025v",_aaf );
return nil ,_aaf ;};_acdb ,_dfde :=_agd .(*PatternDictionary );if !_dfde {_aaf =_fb .Errorf ("\u0072e\u006c\u0061t\u0065\u0064\u0020\u0073e\u0067\u006d\u0065n\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0070at\u0074\u0065\u0072n\u0020\u0064i\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u003a \u0025\u0054",_agd );
return nil ,_aaf ;};var _dfce []*_ae .Bitmap ;_dfce ,_aaf =_acdb .GetDictionary ();if _aaf !=nil {_ee .Log .Debug ("\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_aaf );
return nil ,_aaf ;};_cgfd =append (_cgfd ,_dfce ...);};return _cgfd ,nil ;};type PatternDictionary struct{_eebb _b .StreamReader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;GBAtX []int8 ;GBAtY []int8 ;IsMMREncoded bool ;
HDTemplate byte ;HdpWidth byte ;HdpHeight byte ;Patterns []*_ae .Bitmap ;GrayMax uint32 ;};func (_cfegb *TextRegion )decodeDfs ()(int64 ,error ){if _cfegb .IsHuffmanEncoded {if _cfegb .SbHuffFS ==3{if _cfegb ._gebd ==nil {var _gdgcc error ;_cfegb ._gebd ,_gdgcc =_cfegb .getUserTable (0);
if _gdgcc !=nil {return 0,_gdgcc ;};};return _cfegb ._gebd .Decode (_cfegb ._gdcdf );};_bcdd ,_fdcd :=_db .GetStandardTable (6+int (_cfegb .SbHuffFS ));if _fdcd !=nil {return 0,_fdcd ;};return _bcdd .Decode (_cfegb ._gdcdf );};_aaef ,_ebcc :=_cfegb ._eecdf .DecodeInt (_cfegb ._ggbg );
if _ebcc !=nil {return 0,_ebcc ;};return int64 (_aaef ),nil ;};func (_ebac *PatternDictionary )readTemplate ()error {_fab ,_cfcd :=_ebac ._eebb .ReadBits (2);if _cfcd !=nil {return _cfcd ;};_ebac .HDTemplate =byte (_fab );return nil ;};func (_ece *GenericRefinementRegion )String ()string {_egf :=&_a .Builder {};
_egf .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_egf .WriteString (_ece .RegionInfo .String ()+"\u000a");_egf .WriteString (_fb .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0052\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_ece .IsTPGROn ));
_egf .WriteString (_fb .Sprintf ("\u0009-\u0020T\u0065\u006d\u0070\u006c\u0061t\u0065\u0049D\u003a\u0020\u0025\u0076\u000a",_ece .TemplateID ));_egf .WriteString (_fb .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_ece .GrAtX ));
_egf .WriteString (_fb .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_ece .GrAtY ));_egf .WriteString (_fb .Sprintf ("\u0009-\u0020R\u0065\u0066\u0065\u0072\u0065n\u0063\u0065D\u0058\u0020\u0025\u0076\u000a",_ece .ReferenceDX ));
_egf .WriteString (_fb .Sprintf ("\u0009\u002d\u0020\u0052ef\u0065\u0072\u0065\u006e\u0063\u0044\u0065\u0059\u003a\u0020\u0025\u0076\u000a",_ece .ReferenceDY ));return _egf .String ();};func (_aae *Header )Encode (w _b .BinaryWriter )(_cffc int ,_aegc error ){const _cdaca ="\u0048\u0065\u0061d\u0065\u0072\u002e\u0057\u0072\u0069\u0074\u0065";
var _gge _b .BinaryWriter ;_ee .Log .Trace ("\u005b\u0053\u0045G\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045\u0052\u005d[\u0045\u004e\u0043\u004f\u0044\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _aegc !=nil {_ee .Log .Trace ("[\u0053\u0045\u0047\u004d\u0045\u004eT\u002d\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0045\u004e\u0043\u004f\u0044E\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020%\u0076",_aegc );
}else {_ee .Log .Trace ("\u005b\u0053\u0045\u0047ME\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0025\u0076",_aae );_ee .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045N\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u005b\u0045\u004e\u0043O\u0044\u0045\u005d\u0020\u0046\u0069\u006ei\u0073\u0068\u0065\u0064");
};}();w .FinishByte ();if _aae .SegmentData !=nil {_gfe ,_ffgb :=_aae .SegmentData .(SegmentEncoder );if !_ffgb {return 0,_cf .Errorf (_cdaca ,"\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0064\u006f\u0065s\u006e\u0027\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074 \u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0045\u006e\u0063\u006f\u0064er\u0020\u0069\u006e\u0074\u0065\u0072\u0066\u0061\u0063\u0065",_aae .SegmentData );
};_gge =_b .BufferedMSB ();_cffc ,_aegc =_gfe .Encode (_gge );if _aegc !=nil {return 0,_cf .Wrap (_aegc ,_cdaca ,"");};_aae .SegmentDataLength =uint64 (_cffc );};if _aae .pageSize ()==4{_aae .PageAssociationFieldSize =true ;};var _aedf int ;_aedf ,_aegc =_aae .writeSegmentNumber (w );
if _aegc !=nil {return 0,_cf .Wrap (_aegc ,_cdaca ,"");};_cffc +=_aedf ;if _aegc =_aae .writeFlags (w );_aegc !=nil {return _cffc ,_cf .Wrap (_aegc ,_cdaca ,"");};_cffc ++;_aedf ,_aegc =_aae .writeReferredToCount (w );if _aegc !=nil {return 0,_cf .Wrap (_aegc ,_cdaca ,"");
};_cffc +=_aedf ;_aedf ,_aegc =_aae .writeReferredToSegments (w );if _aegc !=nil {return 0,_cf .Wrap (_aegc ,_cdaca ,"");};_cffc +=_aedf ;_aedf ,_aegc =_aae .writeSegmentPageAssociation (w );if _aegc !=nil {return 0,_cf .Wrap (_aegc ,_cdaca ,"");};_cffc +=_aedf ;
_aedf ,_aegc =_aae .writeSegmentDataLength (w );if _aegc !=nil {return 0,_cf .Wrap (_aegc ,_cdaca ,"");};_cffc +=_aedf ;_aae .HeaderLength =int64 (_cffc )-int64 (_aae .SegmentDataLength );if _gge !=nil {if _ ,_aegc =w .Write (_gge .Data ());_aegc !=nil {return _cffc ,_cf .Wrap (_aegc ,_cdaca ,"\u0077r\u0069t\u0065\u0020\u0073\u0065\u0067m\u0065\u006et\u0020\u0064\u0061\u0074\u0061");
};};return _cffc ,nil ;};func (_bfgca *TableSegment )parseHeader ()error {var (_aadgc int ;_ebc uint64 ;_facbb error ;);_aadgc ,_facbb =_bfgca ._gceg .ReadBit ();if _facbb !=nil {return _facbb ;};if _aadgc ==1{return _fb .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0061\u0062\u006c\u0065 \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0064e\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u002e\u0020\u0042\u002e\u0032\u002e1\u0020\u0043\u006f\u0064\u0065\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0042\u0069\u0074\u0020\u0037\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u007a\u0065\u0072\u006f\u002e\u0020\u0057a\u0073\u003a \u0025\u0064",_aadgc );
};if _ebc ,_facbb =_bfgca ._gceg .ReadBits (3);_facbb !=nil {return _facbb ;};_bfgca ._dgaga =(int32 (_ebc )+1)&0xf;if _ebc ,_facbb =_bfgca ._gceg .ReadBits (3);_facbb !=nil {return _facbb ;};_bfgca ._afab =(int32 (_ebc )+1)&0xf;if _ebc ,_facbb =_bfgca ._gceg .ReadBits (32);
_facbb !=nil {return _facbb ;};_bfgca ._edbfc =int32 (_ebc &_g .MaxInt32 );if _ebc ,_facbb =_bfgca ._gceg .ReadBits (32);_facbb !=nil {return _facbb ;};_bfgca ._cbba =int32 (_ebc &_g .MaxInt32 );return nil ;};func (_fefc *PageInformationSegment )CombinationOperatorOverrideAllowed ()bool {return _fefc ._degb };
func (_cagb *SymbolDictionary )decodeAggregate (_efbe ,_fbcdf uint32 )error {var (_bgea int64 ;_efg error ;);if _cagb .IsHuffmanEncoded {_bgea ,_efg =_cagb .huffDecodeRefAggNInst ();if _efg !=nil {return _efg ;};}else {_dcadf ,_ffdb :=_cagb ._bbaf .DecodeInt (_cagb ._dcb );
if _ffdb !=nil {return _ffdb ;};_bgea =int64 (_dcadf );};if _bgea > 1{return _cagb .decodeThroughTextRegion (_efbe ,_fbcdf ,uint32 (_bgea ));}else if _bgea ==1{return _cagb .decodeRefinedSymbol (_efbe ,_fbcdf );};return nil ;};type Header struct{SegmentNumber uint32 ;
Type Type ;RetainFlag bool ;PageAssociation int ;PageAssociationFieldSize bool ;RTSegments []*Header ;HeaderLength int64 ;SegmentDataLength uint64 ;SegmentDataStartOffset uint64 ;Reader _b .StreamReader ;SegmentData Segmenter ;RTSNumbers []int ;RetainBits []uint8 ;
};func (_bcc *Header )parse (_abda Documenter ,_eecd _b .StreamReader ,_fgd int64 ,_babeb OrganizationType )(_baege error ){const _bgb ="\u0070\u0061\u0072s\u0065";_ee .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u005b\u0050A\u0052\u0053\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");
defer func (){if _baege !=nil {_ee .Log .Trace ("\u005b\u0053\u0045GM\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045R\u005d[\u0050A\u0052S\u0045\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_baege );}else {_ee .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052]\u005bP\u0041\u0052\u0053\u0045\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
};}();_ ,_baege =_eecd .Seek (_fgd ,_da .SeekStart );if _baege !=nil {return _cf .Wrap (_baege ,_bgb ,"\u0073\u0065\u0065\u006b\u0020\u0073\u0074\u0061\u0072\u0074");};if _baege =_bcc .readSegmentNumber (_eecd );_baege !=nil {return _cf .Wrap (_baege ,_bgb ,"");
};if _baege =_bcc .readHeaderFlags ();_baege !=nil {return _cf .Wrap (_baege ,_bgb ,"");};var _cee uint64 ;_cee ,_baege =_bcc .readNumberOfReferredToSegments (_eecd );if _baege !=nil {return _cf .Wrap (_baege ,_bgb ,"");};_bcc .RTSNumbers ,_baege =_bcc .readReferredToSegmentNumbers (_eecd ,int (_cee ));
if _baege !=nil {return _cf .Wrap (_baege ,_bgb ,"");};_baege =_bcc .readSegmentPageAssociation (_abda ,_eecd ,_cee ,_bcc .RTSNumbers ...);if _baege !=nil {return _cf .Wrap (_baege ,_bgb ,"");};if _bcc .Type !=TEndOfFile {if _baege =_bcc .readSegmentDataLength (_eecd );
_baege !=nil {return _cf .Wrap (_baege ,_bgb ,"");};};_bcc .readDataStartOffset (_eecd ,_babeb );_bcc .readHeaderLength (_eecd ,_fgd );_ee .Log .Trace ("\u0025\u0073",_bcc );return nil ;};func (_fadc *TableSegment )HtPS ()int32 {return _fadc ._afab };func (_ddfd *SymbolDictionary )setCodingStatistics ()error {if _ddfd ._gcbg ==nil {_ddfd ._gcbg =_fbb .NewStats (512,1);
};if _ddfd ._cfggc ==nil {_ddfd ._cfggc =_fbb .NewStats (512,1);};if _ddfd ._ecbc ==nil {_ddfd ._ecbc =_fbb .NewStats (512,1);};if _ddfd ._dcb ==nil {_ddfd ._dcb =_fbb .NewStats (512,1);};if _ddfd ._bcfed ==nil {_ddfd ._bcfed =_fbb .NewStats (512,1);};
if _ddfd .UseRefinementAggregation &&_ddfd ._ccda ==nil {_ddfd ._ccda =_fbb .NewStats (1<<uint (_ddfd ._daca ),1);_ddfd ._aead =_fbb .NewStats (512,1);_ddfd ._eacd =_fbb .NewStats (512,1);};if _ddfd ._aefdb ==nil {_ddfd ._aefdb =_fbb .NewStats (65536,1);
};if _ddfd ._bbaf ==nil {var _dabcc error ;_ddfd ._bbaf ,_dabcc =_fbb .New (_ddfd ._gdge );if _dabcc !=nil {return _dabcc ;};};return nil ;};func (_gae *HalftoneRegion )grayScaleDecoding (_bdae int )([][]int ,error ){var (_ebagb []int8 ;_cgd []int8 ;);
if !_gae .IsMMREncoded {_ebagb =make ([]int8 ,4);_cgd =make ([]int8 ,4);if _gae .HTemplate <=1{_ebagb [0]=3;}else if _gae .HTemplate >=2{_ebagb [0]=2;};_cgd [0]=-1;_ebagb [1]=-3;_cgd [1]=-1;_ebagb [2]=2;_cgd [2]=-2;_ebagb [3]=-2;_cgd [3]=-2;};_feg :=make ([]*_ae .Bitmap ,_bdae );
_fba :=NewGenericRegion (_gae ._gabg );_fba .setParametersMMR (_gae .IsMMREncoded ,_gae .DataOffset ,_gae .DataLength ,_gae .HGridHeight ,_gae .HGridWidth ,_gae .HTemplate ,false ,_gae .HSkipEnabled ,_ebagb ,_cgd );_aad :=_bdae -1;var _faed error ;_feg [_aad ],_faed =_fba .GetRegionBitmap ();
if _faed !=nil {return nil ,_faed ;};for _aad > 0{_aad --;_fba .Bitmap =nil ;_feg [_aad ],_faed =_fba .GetRegionBitmap ();if _faed !=nil {return nil ,_faed ;};if _faed =_gae .combineGrayscalePlanes (_feg ,_aad );_faed !=nil {return nil ,_faed ;};};return _gae .computeGrayScalePlanes (_feg ,_bdae );
};func (_gdfa *SymbolDictionary )setRefinementAtPixels ()error {if !_gdfa .UseRefinementAggregation ||_gdfa .SdrTemplate !=0{return nil ;};if _gcbgc :=_gdfa .readRefinementAtPixels (2);_gcbgc !=nil {return _gcbgc ;};return nil ;};func (_bfc *GenericRefinementRegion )getGrReference ()(*_ae .Bitmap ,error ){segments :=_bfc ._bf .RTSegments ;
if len (segments )==0{return nil ,_fbc .New ("\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0065\u0078is\u0074\u0073");};_fg ,_ag :=segments [0].GetSegmentData ();
if _ag !=nil {return nil ,_ag ;};_acf ,_eb :=_fg .(Regioner );if !_eb {return nil ,_fb .Errorf ("\u0072\u0065\u0066\u0065\u0072r\u0065\u0064\u0020\u0074\u006f\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_fg );
};return _acf .GetRegionBitmap ();};func (_egb *Header )CleanSegmentData (){if _egb .SegmentData !=nil {_egb .SegmentData =nil ;};};func (_ecbf *PatternDictionary )GetDictionary ()([]*_ae .Bitmap ,error ){if _ecbf .Patterns !=nil {return _ecbf .Patterns ,nil ;
};if !_ecbf .IsMMREncoded {_ecbf .setGbAtPixels ();};_ebab :=NewGenericRegion (_ecbf ._eebb );_ebab .setParametersMMR (_ecbf .IsMMREncoded ,_ecbf .DataOffset ,_ecbf .DataLength ,uint32 (_ecbf .HdpHeight ),(_ecbf .GrayMax +1)*uint32 (_ecbf .HdpWidth ),_ecbf .HDTemplate ,false ,false ,_ecbf .GBAtX ,_ecbf .GBAtY );
_fbaff ,_ccc :=_ebab .GetRegionBitmap ();if _ccc !=nil {return nil ,_ccc ;};if _ccc =_ecbf .extractPatterns (_fbaff );_ccc !=nil {return nil ,_ccc ;};return _ecbf .Patterns ,nil ;};func (_ecff *TableSegment )HtRS ()int32 {return _ecff ._dgaga };func (_edc *HalftoneRegion )checkInput ()error {if _edc .IsMMREncoded {if _edc .HTemplate !=0{_ee .Log .Debug ("\u0048\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030",_edc .HTemplate );
};if _edc .HSkipEnabled {_ee .Log .Debug ("\u0048\u0053\u006b\u0069\u0070\u0045\u006e\u0061\u0062\u006c\u0065\u0064\u0020\u0030\u0020\u0025\u0076\u0020(\u0073\u0068\u006f\u0075\u006c\u0064\u0020c\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020v\u0061\u006c\u0075\u0065\u0020\u0066\u0061\u006c\u0073\u0065\u0029",_edc .HSkipEnabled );
};};return nil ;};func (_dgf *HalftoneRegion )computeY (_gbfab ,_bfaa int )int {return _dgf .shiftAndFill (int (_dgf .HGridY )+_gbfab *int (_dgf .HRegionX )-_bfaa *int (_dgf .HRegionY ));};func (_edg *GenericRefinementRegion )Init (header *Header ,r _b .StreamReader )error {_edg ._bf =header ;
_edg ._gb =r ;_edg .RegionInfo =NewRegionSegment (r );return _edg .parseHeader ();};func (_efcc *GenericRegion )decodeTemplate3 (_eccb ,_bce ,_bedc int ,_fgf ,_dcd int )(_acd error ){const _gdee ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0033";
var (_dad ,_bdaa int ;_dgag int ;_ebee byte ;_gga ,_cae int ;);if _eccb >=1{_ebee ,_acd =_efcc .Bitmap .GetByte (_dcd );if _acd !=nil {return _cf .Wrap (_acd ,_gdee ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_dgag =int (_ebee );};_dad =(_dgag >>1)&0x70;
for _bdd :=0;_bdd < _bedc ;_bdd =_gga {var (_cfeg byte ;_bad int ;);_gga =_bdd +8;if _cbbg :=_bce -_bdd ;_cbbg > 8{_bad =8;}else {_bad =_cbbg ;};if _eccb >=1{_dgag <<=8;if _gga < _bce {_ebee ,_acd =_efcc .Bitmap .GetByte (_dcd +1);if _acd !=nil {return _cf .Wrap (_acd ,_gdee ,"\u0069\u006e\u006e\u0065\u0072\u0020\u002d\u0020\u006c\u0069\u006e\u0065 \u003e\u003d\u0020\u0031");
};_dgag |=int (_ebee );};};for _egd :=0;_egd < _bad ;_egd ++{if _efcc ._aede {_bdaa =_efcc .overrideAtTemplate3 (_dad ,_bdd +_egd ,_eccb ,int (_cfeg ),_egd );_efcc ._efc .SetIndex (int32 (_bdaa ));}else {_efcc ._efc .SetIndex (int32 (_dad ));};_cae ,_acd =_efcc ._eeg .DecodeBit (_efcc ._efc );
if _acd !=nil {return _cf .Wrap (_acd ,_gdee ,"");};_cfeg |=byte (_cae )<<byte (7-_egd );_dad =((_dad &0x1f7)<<1)|_cae |((_dgag >>uint (8-_egd ))&0x010);};if _agg :=_efcc .Bitmap .SetByte (_fgf ,_cfeg );_agg !=nil {return _cf .Wrap (_agg ,_gdee ,"");};
_fgf ++;_dcd ++;};return nil ;};func (_cafgc *RegionSegment )readCombinationOperator ()error {_eafea ,_dbfb :=_cafgc ._dacf .ReadBits (3);if _dbfb !=nil {return _dbfb ;};_cafgc .CombinaionOperator =_ae .CombinationOperator (_eafea &0xF);return nil ;};func (_agffc *Header )readReferredToSegmentNumbers (_dgff _b .StreamReader ,_efecd int )([]int ,error ){const _gdagg ="\u0072\u0065\u0061\u0064R\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053e\u0067m\u0065\u006e\u0074\u004e\u0075\u006d\u0062e\u0072\u0073";
_affe :=make ([]int ,_efecd );if _efecd > 0{_agffc .RTSegments =make ([]*Header ,_efecd );var (_bdaf uint64 ;_cgee error ;);for _efbfa :=0;_efbfa < _efecd ;_efbfa ++{_bdaf ,_cgee =_dgff .ReadBits (byte (_agffc .referenceSize ())<<3);if _cgee !=nil {return nil ,_cf .Wrapf (_cgee ,_gdagg ,"\u0027\u0025\u0064\u0027 \u0072\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0020\u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u0075\u006db\u0065\u0072",_efbfa );
};_affe [_efbfa ]=int (_bdaf &_g .MaxInt32 );};};return _affe ,nil ;};func (_fbdf *GenericRegion )overrideAtTemplate0b (_dbcfd ,_dfa ,_afad ,_fdgg ,_bcfg ,_ggbf int )int {if _fbdf .GBAtOverride [0]{_dbcfd &=0xFFFD;if _fbdf .GBAtY [0]==0&&_fbdf .GBAtX [0]>=-int8 (_bcfg ){_dbcfd |=(_fdgg >>uint (int8 (_ggbf )-_fbdf .GBAtX [0]&0x1))<<1;
}else {_dbcfd |=int (_fbdf .getPixel (_dfa +int (_fbdf .GBAtX [0]),_afad +int (_fbdf .GBAtY [0])))<<1;};};if _fbdf .GBAtOverride [1]{_dbcfd &=0xDFFF;if _fbdf .GBAtY [1]==0&&_fbdf .GBAtX [1]>=-int8 (_bcfg ){_dbcfd |=(_fdgg >>uint (int8 (_ggbf )-_fbdf .GBAtX [1]&0x1))<<13;
}else {_dbcfd |=int (_fbdf .getPixel (_dfa +int (_fbdf .GBAtX [1]),_afad +int (_fbdf .GBAtY [1])))<<13;};};if _fbdf .GBAtOverride [2]{_dbcfd &=0xFDFF;if _fbdf .GBAtY [2]==0&&_fbdf .GBAtX [2]>=-int8 (_bcfg ){_dbcfd |=(_fdgg >>uint (int8 (_ggbf )-_fbdf .GBAtX [2]&0x1))<<9;
}else {_dbcfd |=int (_fbdf .getPixel (_dfa +int (_fbdf .GBAtX [2]),_afad +int (_fbdf .GBAtY [2])))<<9;};};if _fbdf .GBAtOverride [3]{_dbcfd &=0xBFFF;if _fbdf .GBAtY [3]==0&&_fbdf .GBAtX [3]>=-int8 (_bcfg ){_dbcfd |=(_fdgg >>uint (int8 (_ggbf )-_fbdf .GBAtX [3]&0x1))<<14;
}else {_dbcfd |=int (_fbdf .getPixel (_dfa +int (_fbdf .GBAtX [3]),_afad +int (_fbdf .GBAtY [3])))<<14;};};if _fbdf .GBAtOverride [4]{_dbcfd &=0xEFFF;if _fbdf .GBAtY [4]==0&&_fbdf .GBAtX [4]>=-int8 (_bcfg ){_dbcfd |=(_fdgg >>uint (int8 (_ggbf )-_fbdf .GBAtX [4]&0x1))<<12;
}else {_dbcfd |=int (_fbdf .getPixel (_dfa +int (_fbdf .GBAtX [4]),_afad +int (_fbdf .GBAtY [4])))<<12;};};if _fbdf .GBAtOverride [5]{_dbcfd &=0xFFDF;if _fbdf .GBAtY [5]==0&&_fbdf .GBAtX [5]>=-int8 (_bcfg ){_dbcfd |=(_fdgg >>uint (int8 (_ggbf )-_fbdf .GBAtX [5]&0x1))<<5;
}else {_dbcfd |=int (_fbdf .getPixel (_dfa +int (_fbdf .GBAtX [5]),_afad +int (_fbdf .GBAtY [5])))<<5;};};if _fbdf .GBAtOverride [6]{_dbcfd &=0xFFFB;if _fbdf .GBAtY [6]==0&&_fbdf .GBAtX [6]>=-int8 (_bcfg ){_dbcfd |=(_fdgg >>uint (int8 (_ggbf )-_fbdf .GBAtX [6]&0x1))<<2;
}else {_dbcfd |=int (_fbdf .getPixel (_dfa +int (_fbdf .GBAtX [6]),_afad +int (_fbdf .GBAtY [6])))<<2;};};if _fbdf .GBAtOverride [7]{_dbcfd &=0xFFF7;if _fbdf .GBAtY [7]==0&&_fbdf .GBAtX [7]>=-int8 (_bcfg ){_dbcfd |=(_fdgg >>uint (int8 (_ggbf )-_fbdf .GBAtX [7]&0x1))<<3;
}else {_dbcfd |=int (_fbdf .getPixel (_dfa +int (_fbdf .GBAtX [7]),_afad +int (_fbdf .GBAtY [7])))<<3;};};if _fbdf .GBAtOverride [8]{_dbcfd &=0xF7FF;if _fbdf .GBAtY [8]==0&&_fbdf .GBAtX [8]>=-int8 (_bcfg ){_dbcfd |=(_fdgg >>uint (int8 (_ggbf )-_fbdf .GBAtX [8]&0x1))<<11;
}else {_dbcfd |=int (_fbdf .getPixel (_dfa +int (_fbdf .GBAtX [8]),_afad +int (_fbdf .GBAtY [8])))<<11;};};if _fbdf .GBAtOverride [9]{_dbcfd &=0xFFEF;if _fbdf .GBAtY [9]==0&&_fbdf .GBAtX [9]>=-int8 (_bcfg ){_dbcfd |=(_fdgg >>uint (int8 (_ggbf )-_fbdf .GBAtX [9]&0x1))<<4;
}else {_dbcfd |=int (_fbdf .getPixel (_dfa +int (_fbdf .GBAtX [9]),_afad +int (_fbdf .GBAtY [9])))<<4;};};if _fbdf .GBAtOverride [10]{_dbcfd &=0x7FFF;if _fbdf .GBAtY [10]==0&&_fbdf .GBAtX [10]>=-int8 (_bcfg ){_dbcfd |=(_fdgg >>uint (int8 (_ggbf )-_fbdf .GBAtX [10]&0x1))<<15;
}else {_dbcfd |=int (_fbdf .getPixel (_dfa +int (_fbdf .GBAtX [10]),_afad +int (_fbdf .GBAtY [10])))<<15;};};if _fbdf .GBAtOverride [11]{_dbcfd &=0xFDFF;if _fbdf .GBAtY [11]==0&&_fbdf .GBAtX [11]>=-int8 (_bcfg ){_dbcfd |=(_fdgg >>uint (int8 (_ggbf )-_fbdf .GBAtX [11]&0x1))<<10;
}else {_dbcfd |=int (_fbdf .getPixel (_dfa +int (_fbdf .GBAtX [11]),_afad +int (_fbdf .GBAtY [11])))<<10;};};return _dbcfd ;};func (_bcfe *Header )writeReferredToSegments (_cdca _b .BinaryWriter )(_cgde int ,_agfg error ){const _gfee ="\u0077\u0072\u0069te\u0052\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
var (_cgfe uint16 ;_dfad uint32 ;);_bbba :=_bcfe .referenceSize ();_egeb :=1;_gdff :=make ([]byte ,_bbba );for _ ,_caea :=range _bcfe .RTSNumbers {switch _bbba {case 4:_dfad =uint32 (_caea );_e .BigEndian .PutUint32 (_gdff ,_dfad );_egeb ,_agfg =_cdca .Write (_gdff );
if _agfg !=nil {return 0,_cf .Wrap (_agfg ,_gfee ,"u\u0069\u006e\u0074\u0033\u0032\u0020\u0073\u0069\u007a\u0065");};case 2:_cgfe =uint16 (_caea );_e .BigEndian .PutUint16 (_gdff ,_cgfe );_egeb ,_agfg =_cdca .Write (_gdff );if _agfg !=nil {return 0,_cf .Wrap (_agfg ,_gfee ,"\u0075\u0069\u006e\u0074\u0031\u0036");
};default:if _agfg =_cdca .WriteByte (byte (_caea ));_agfg !=nil {return 0,_cf .Wrap (_agfg ,_gfee ,"\u0075\u0069\u006et\u0038");};};_cgde +=_egeb ;};return _cgde ,nil ;};func (_bdcg *Header )writeReferredToCount (_cgad _b .BinaryWriter )(_gad int ,_ddeg error ){const _ddece ="w\u0072i\u0074\u0065\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0043ou\u006e\u0074";
_bdcg .RTSNumbers =make ([]int ,len (_bdcg .RTSegments ));for _gfcd ,_degg :=range _bdcg .RTSegments {_bdcg .RTSNumbers [_gfcd ]=int (_degg .SegmentNumber );};if len (_bdcg .RTSNumbers )<=4{var _cbea byte ;if len (_bdcg .RetainBits )>=1{_cbea =_bdcg .RetainBits [0];
};_cbea |=byte (len (_bdcg .RTSNumbers ))<<5;if _ddeg =_cgad .WriteByte (_cbea );_ddeg !=nil {return 0,_cf .Wrap (_ddeg ,_ddece ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return 1,nil ;};_gffd :=uint32 (len (_bdcg .RTSNumbers ));
_fdfg :=make ([]byte ,4+_gd .Ceil (len (_bdcg .RTSNumbers )+1,8));_gffd |=0x7<<29;_e .BigEndian .PutUint32 (_fdfg ,_gffd );copy (_fdfg [1:],_bdcg .RetainBits );_gad ,_ddeg =_cgad .Write (_fdfg );if _ddeg !=nil {return 0,_cf .Wrap (_ddeg ,_ddece ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");
};return _gad ,nil ;};func (_dge *PatternDictionary )setGbAtPixels (){if _dge .HDTemplate ==0{_dge .GBAtX =make ([]int8 ,4);_dge .GBAtY =make ([]int8 ,4);_dge .GBAtX [0]=-int8 (_dge .HdpWidth );_dge .GBAtY [0]=0;_dge .GBAtX [1]=-3;_dge .GBAtY [1]=-1;_dge .GBAtX [2]=2;
_dge .GBAtY [2]=-2;_dge .GBAtX [3]=-2;_dge .GBAtY [3]=-2;}else {_dge .GBAtX =[]int8 {-int8 (_dge .HdpWidth )};_dge .GBAtY =[]int8 {0};};};func (_eabc *SymbolDictionary )InitEncode (symbols *_ae .Bitmaps ,symbolList []int ,symbolMap map[int ]int ,unborderSymbols bool )error {const _dbbe ="S\u0079\u006d\u0062\u006f\u006c\u0044i\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002eI\u006e\u0069\u0074E\u006ec\u006f\u0064\u0065";
_eabc .SdATX =[]int8 {3,-3,2,-2};_eabc .SdATY =[]int8 {-1,-1,-2,-2};_eabc ._agfb =symbols ;_eabc ._feec =make ([]int ,len (symbolList ));copy (_eabc ._feec ,symbolList );if len (_eabc ._feec )!=_eabc ._agfb .Size (){return _cf .Error (_dbbe ,"s\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0061\u006e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u004ci\u0073\u0074\u0020\u006f\u0066\u0020\u0064\u0069\u0066\u0066er\u0065\u006e\u0074 \u0073i\u007a\u0065");
};_eabc .NumberOfNewSymbols =uint32 (symbols .Size ());_eabc .NumberOfExportedSymbols =uint32 (symbols .Size ());_eabc ._beddc =symbolMap ;_eabc ._edefb =unborderSymbols ;return nil ;};func (_ggab *Header )GetSegmentData ()(Segmenter ,error ){var _dbge Segmenter ;
if _ggab .SegmentData !=nil {_dbge =_ggab .SegmentData ;};if _dbge ==nil {_fbcf ,_ddga :=_gdeag [_ggab .Type ];if !_ddga {return nil ,_fb .Errorf ("\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0073\u002f\u0020\u0025\u0064\u0020\u0063\u0072e\u0061t\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e\u0020",_ggab .Type ,_ggab .Type );
};_dbge =_fbcf ();_ee .Log .Trace ("\u005b\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u0020\u0061\u0074\u0020\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0030\u0034\u0058",_ggab .SegmentNumber ,_ggab .SegmentDataStartOffset );
_dfb ,_bdc :=_ggab .subInputReader ();if _bdc !=nil {return nil ,_bdc ;};if _gbff :=_dbge .Init (_ggab ,_dfb );_gbff !=nil {_ee .Log .Debug ("\u0049\u006e\u0069\u0074 \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076 \u0066o\u0072\u0020\u0074\u0079\u0070\u0065\u003a \u0025\u0054",_gbff ,_dbge );
return nil ,_gbff ;};_ggab .SegmentData =_dbge ;};return _dbge ,nil ;};func (_ce *GenericRefinementRegion )GetRegionBitmap ()(*_ae .Bitmap ,error ){var _gac error ;_ee .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _gac !=nil {_ee .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0047\u0065\u0074R\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006dap\u0020\u0066a\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_gac );
}else {_ee .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _ce .RegionBitmap !=nil {return _ce .RegionBitmap ,nil ;};_de :=0;if _ce .ReferenceBitmap ==nil {_ce .ReferenceBitmap ,_gac =_ce .getGrReference ();if _gac !=nil {return nil ,_gac ;};};if _ce ._cdb ==nil {_ce ._cdb ,_gac =_fbb .New (_ce ._gb );
if _gac !=nil {return nil ,_gac ;};};if _ce ._gg ==nil {_ce ._gg =_fbb .NewStats (8192,1);};_ce .RegionBitmap =_ae .New (int (_ce .RegionInfo .BitmapWidth ),int (_ce .RegionInfo .BitmapHeight ));if _ce .TemplateID ==0{if _gac =_ce .updateOverride ();_gac !=nil {return nil ,_gac ;
};};_ec :=(_ce .RegionBitmap .Width +7)&-8;var _ccf int ;if _ce .IsTPGROn {_ccf =int (-_ce .ReferenceDY )*_ce .ReferenceBitmap .RowStride ;};_cdea :=_ccf +1;for _ac :=0;_ac < _ce .RegionBitmap .Height ;_ac ++{if _ce .IsTPGROn {_cg ,_gda :=_ce .decodeSLTP ();
if _gda !=nil {return nil ,_gda ;};_de ^=_cg ;};if _de ==0{_gac =_ce .decodeOptimized (_ac ,_ce .RegionBitmap .Width ,_ce .RegionBitmap .RowStride ,_ce .ReferenceBitmap .RowStride ,_ec ,_ccf ,_cdea );if _gac !=nil {return nil ,_gac ;};}else {_gac =_ce .decodeTypicalPredictedLine (_ac ,_ce .RegionBitmap .Width ,_ce .RegionBitmap .RowStride ,_ce .ReferenceBitmap .RowStride ,_ec ,_ccf );
if _gac !=nil {return nil ,_gac ;};};};return _ce .RegionBitmap ,nil ;};func (_cgcd *SymbolDictionary )setInSyms ()error {if _cgcd .Header .RTSegments !=nil {return _cgcd .retrieveImportSymbols ();};_cgcd ._bdge =make ([]*_ae .Bitmap ,0);return nil ;};
func (_defc *SymbolDictionary )readNumberOfNewSymbols ()error {_fbee ,_ebgf :=_defc ._gdge .ReadBits (32);if _ebgf !=nil {return _ebgf ;};_defc .NumberOfNewSymbols =uint32 (_fbee &_g .MaxUint32 );return nil ;};func (_ccbd *SymbolDictionary )decodeHeightClassCollectiveBitmap (_bdcf int64 ,_dfcga ,_dbdb uint32 )(*_ae .Bitmap ,error ){if _bdcf ==0{_fbe :=_ae .New (int (_dbdb ),int (_dfcga ));
var (_fbaffb byte ;_gafc error ;);for _aggda :=0;_aggda < len (_fbe .Data );_aggda ++{_fbaffb ,_gafc =_ccbd ._gdge .ReadByte ();if _gafc !=nil {return nil ,_gafc ;};if _gafc =_fbe .SetByte (_aggda ,_fbaffb );_gafc !=nil {return nil ,_gafc ;};};return _fbe ,nil ;
};if _ccbd ._eecgc ==nil {_ccbd ._eecgc =NewGenericRegion (_ccbd ._gdge );};_ccbd ._eecgc .setParameters (true ,_ccbd ._gdge .StreamPosition (),_bdcf ,_dfcga ,_dbdb );_acea ,_edafa :=_ccbd ._eecgc .GetRegionBitmap ();if _edafa !=nil {return nil ,_edafa ;
};return _acea ,nil ;};func (_aeb *PatternDictionary )computeSegmentDataStructure ()error {_aeb .DataOffset =_aeb ._eebb .StreamPosition ();_aeb .DataHeaderLength =_aeb .DataOffset -_aeb .DataHeaderOffset ;_aeb .DataLength =int64 (_aeb ._eebb .Length ())-_aeb .DataHeaderLength ;
return nil ;};func (_dfgg *SymbolDictionary )decodeHeightClassDeltaHeightWithHuffman ()(int64 ,error ){switch _dfgg .SdHuffDecodeHeightSelection {case 0:_dcdc ,_afeca :=_db .GetStandardTable (4);if _afeca !=nil {return 0,_afeca ;};return _dcdc .Decode (_dfgg ._gdge );
case 1:_ddee ,_agce :=_db .GetStandardTable (5);if _agce !=nil {return 0,_agce ;};return _ddee .Decode (_dfgg ._gdge );case 3:if _dfgg ._dafb ==nil {_aggg ,_gagf :=_db .GetStandardTable (0);if _gagf !=nil {return 0,_gagf ;};_dfgg ._dafb =_aggg ;};return _dfgg ._dafb .Decode (_dfgg ._gdge );
};return 0,nil ;};func (_dabf *SymbolDictionary )getToExportFlags ()([]int ,error ){var (_eaagf int ;_egfe int32 ;_gfbe error ;_fabc =int32 (_dabf ._bacdf +_dabf .NumberOfNewSymbols );_cdfe =make ([]int ,_fabc ););for _afbg :=int32 (0);_afbg < _fabc ;_afbg +=_egfe {if _dabf .IsHuffmanEncoded {_fefab ,_aadgd :=_db .GetStandardTable (1);
if _aadgd !=nil {return nil ,_aadgd ;};_gdga ,_aadgd :=_fefab .Decode (_dabf ._gdge );if _aadgd !=nil {return nil ,_aadgd ;};_egfe =int32 (_gdga );}else {_egfe ,_gfbe =_dabf ._bbaf .DecodeInt (_dabf ._bcfed );if _gfbe !=nil {return nil ,_gfbe ;};};if _egfe !=0{for _ccgea :=_afbg ;
_ccgea < _afbg +_egfe ;_ccgea ++{_cdfe [_ccgea ]=_eaagf ;};};if _eaagf ==0{_eaagf =1;}else {_eaagf =0;};};return _cdfe ,nil ;};func (_faff *PageInformationSegment )readDefaultPixelValue ()error {_aedec ,_caa :=_faff ._beed .ReadBit ();if _caa !=nil {return _caa ;
};_faff .DefaultPixelValue =uint8 (_aedec &0xf);return nil ;};func (_efgf *SymbolDictionary )decodeNewSymbols (_acc ,_cbeg uint32 ,_cbdd *_ae .Bitmap ,_bgce ,_aada int32 )error {if _efgf ._adba ==nil {_efgf ._adba =_bbgf (_efgf ._gdge ,nil );if _efgf ._bbaf ==nil {var _gcda error ;
_efgf ._bbaf ,_gcda =_fbb .New (_efgf ._gdge );if _gcda !=nil {return _gcda ;};};if _efgf ._aefdb ==nil {_efgf ._aefdb =_fbb .NewStats (65536,1);};};_efgf ._adba .setParameters (_efgf ._aefdb ,_efgf ._bbaf ,_efgf .SdrTemplate ,_acc ,_cbeg ,_cbdd ,_bgce ,_aada ,false ,_efgf .SdrATX ,_efgf .SdrATY );
return _efgf .addSymbol (_efgf ._adba );};func (_gcgf *SymbolDictionary )Init (h *Header ,r _b .StreamReader )error {_gcgf .Header =h ;_gcgf ._gdge =r ;return _gcgf .parseHeader ();};func (_dbgff *SymbolDictionary )getSbSymCodeLen ()int8 {_eeacg :=int8 (_g .Ceil (_g .Log (float64 (_dbgff ._bacdf +_dbgff .NumberOfNewSymbols ))/_g .Log (2)));
if _dbgff .IsHuffmanEncoded &&_eeacg < 1{return 1;};return _eeacg ;};func (_gfge *RegionSegment )Size ()int {return 17};var (_abdad Segmenter ;_gdeag =map[Type ]func ()Segmenter {TSymbolDictionary :func ()Segmenter {return &SymbolDictionary {}},TIntermediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateLosslessTextRegion :func ()Segmenter {return &TextRegion {}},TPatternDictionary :func ()Segmenter {return &PatternDictionary {}},TIntermediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateLosslessHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TIntermediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateLosslessGenericRegion :func ()Segmenter {return &GenericRegion {}},TIntermediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateLosslessGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TPageInformation :func ()Segmenter {return &PageInformationSegment {}},TEndOfPage :func ()Segmenter {return _abdad },TEndOfStrip :func ()Segmenter {return &EndOfStripe {}},TEndOfFile :func ()Segmenter {return _abdad },TProfiles :func ()Segmenter {return _abdad },TTables :func ()Segmenter {return &TableSegment {}},TExtension :func ()Segmenter {return _abdad },TBitmap :func ()Segmenter {return _abdad }};
);func (_dgba *SymbolDictionary )encodeNumSyms (_ddgd _b .BinaryWriter )(_acbe int ,_ggdd error ){const _badg ="\u0065\u006e\u0063\u006f\u0064\u0065\u004e\u0075\u006d\u0053\u0079\u006d\u0073";_ceff :=make ([]byte ,4);_e .BigEndian .PutUint32 (_ceff ,_dgba .NumberOfExportedSymbols );
if _acbe ,_ggdd =_ddgd .Write (_ceff );_ggdd !=nil {return _acbe ,_cf .Wrap (_ggdd ,_badg ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};_e .BigEndian .PutUint32 (_ceff ,_dgba .NumberOfNewSymbols );_acg ,_ggdd :=_ddgd .Write (_ceff );
if _ggdd !=nil {return _acbe ,_cf .Wrap (_ggdd ,_badg ,"n\u0065\u0077\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};return _acbe +_acg ,nil ;};func (_cda *GenericRefinementRegion )decodeTypicalPredictedLine (_cce ,_fbd ,_eeb ,_af ,_dcc ,_cb int )error {_fe :=_cce -int (_cda .ReferenceDY );
_aec :=_cda .ReferenceBitmap .GetByteIndex (0,_fe );_fc :=_cda .RegionBitmap .GetByteIndex (0,_cce );var _fef error ;switch _cda .TemplateID {case 0:_fef =_cda .decodeTypicalPredictedLineTemplate0 (_cce ,_fbd ,_eeb ,_af ,_dcc ,_cb ,_fc ,_fe ,_aec );case 1:_fef =_cda .decodeTypicalPredictedLineTemplate1 (_cce ,_fbd ,_eeb ,_af ,_dcc ,_cb ,_fc ,_fe ,_aec );
};return _fef ;};var _ SegmentEncoder =&GenericRegion {};var _ templater =&template0 {};func (_dba *GenericRefinementRegion )GetRegionInfo ()*RegionSegment {return _dba .RegionInfo };func (_fgebc *GenericRegion )overrideAtTemplate0a (_abe ,_dce ,_gdead ,_decb ,_ecf ,_abd int )int {if _fgebc .GBAtOverride [0]{_abe &=0xFFEF;
if _fgebc .GBAtY [0]==0&&_fgebc .GBAtX [0]>=-int8 (_ecf ){_abe |=(_decb >>uint (int8 (_abd )-_fgebc .GBAtX [0]&0x1))<<4;}else {_abe |=int (_fgebc .getPixel (_dce +int (_fgebc .GBAtX [0]),_gdead +int (_fgebc .GBAtY [0])))<<4;};};if _fgebc .GBAtOverride [1]{_abe &=0xFBFF;
if _fgebc .GBAtY [1]==0&&_fgebc .GBAtX [1]>=-int8 (_ecf ){_abe |=(_decb >>uint (int8 (_abd )-_fgebc .GBAtX [1]&0x1))<<10;}else {_abe |=int (_fgebc .getPixel (_dce +int (_fgebc .GBAtX [1]),_gdead +int (_fgebc .GBAtY [1])))<<10;};};if _fgebc .GBAtOverride [2]{_abe &=0xF7FF;
if _fgebc .GBAtY [2]==0&&_fgebc .GBAtX [2]>=-int8 (_ecf ){_abe |=(_decb >>uint (int8 (_abd )-_fgebc .GBAtX [2]&0x1))<<11;}else {_abe |=int (_fgebc .getPixel (_dce +int (_fgebc .GBAtX [2]),_gdead +int (_fgebc .GBAtY [2])))<<11;};};if _fgebc .GBAtOverride [3]{_abe &=0x7FFF;
if _fgebc .GBAtY [3]==0&&_fgebc .GBAtX [3]>=-int8 (_ecf ){_abe |=(_decb >>uint (int8 (_abd )-_fgebc .GBAtX [3]&0x1))<<15;}else {_abe |=int (_fgebc .getPixel (_dce +int (_fgebc .GBAtX [3]),_gdead +int (_fgebc .GBAtY [3])))<<15;};};return _abe ;};func (_gbcc *TextRegion )Encode (w _b .BinaryWriter )(_beee int ,_ggccg error ){const _fddbg ="\u0054\u0065\u0078\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u002e\u0045n\u0063\u006f\u0064\u0065";
if _beee ,_ggccg =_gbcc .RegionInfo .Encode (w );_ggccg !=nil {return _beee ,_cf .Wrap (_ggccg ,_fddbg ,"");};var _cbcf int ;if _cbcf ,_ggccg =_gbcc .encodeFlags (w );_ggccg !=nil {return _beee ,_cf .Wrap (_ggccg ,_fddbg ,"");};_beee +=_cbcf ;if _cbcf ,_ggccg =_gbcc .encodeSymbols (w );
_ggccg !=nil {return _beee ,_cf .Wrap (_ggccg ,_fddbg ,"");};_beee +=_cbcf ;return _beee ,nil ;};func (_effe *SymbolDictionary )readAtPixels (_cbbc int )error {_effe .SdATX =make ([]int8 ,_cbbc );_effe .SdATY =make ([]int8 ,_cbbc );var (_gada byte ;_dfada error ;
);for _gcbe :=0;_gcbe < _cbbc ;_gcbe ++{_gada ,_dfada =_effe ._gdge .ReadByte ();if _dfada !=nil {return _dfada ;};_effe .SdATX [_gcbe ]=int8 (_gada );_gada ,_dfada =_effe ._gdge .ReadByte ();if _dfada !=nil {return _dfada ;};_effe .SdATY [_gcbe ]=int8 (_gada );
};return nil ;};func (_gafdb *SymbolDictionary )decodeHeightClassBitmap (_cfdf *_ae .Bitmap ,_gcafe int64 ,_edfc int ,_afg []int )error {for _faagf :=_gcafe ;_faagf < int64 (_gafdb ._fdee );_faagf ++{var _bbbb int ;for _ggde :=_gcafe ;_ggde <=_faagf -1;
_ggde ++{_bbbb +=_afg [_ggde ];};_bdea :=_d .Rect (_bbbb ,0,_bbbb +_afg [_faagf ],_edfc );_age ,_bbcb :=_ae .Extract (_bdea ,_cfdf );if _bbcb !=nil {return _bbcb ;};_gafdb ._dgae [_faagf ]=_age ;_gafdb ._efff =append (_gafdb ._efff ,_age );};return nil ;
};func (_fac *Header )writeSegmentNumber (_gddg _b .BinaryWriter )(_fccb int ,_ebfbb error ){_gcaf :=make ([]byte ,4);_e .BigEndian .PutUint32 (_gcaf ,_fac .SegmentNumber );if _fccb ,_ebfbb =_gddg .Write (_gcaf );_ebfbb !=nil {return 0,_cf .Wrap (_ebfbb ,"\u0048e\u0061\u0064\u0065\u0072.\u0077\u0072\u0069\u0074\u0065S\u0065g\u006de\u006e\u0074\u004e\u0075\u006d\u0062\u0065r","");
};return _fccb ,nil ;};func (_fdec *PageInformationSegment )checkInput ()error {if _fdec .PageBMHeight ==_g .MaxInt32 {if !_fdec .IsStripe {_ee .Log .Debug ("P\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0053\u0065\u0067me\u006e\u0074\u002e\u0049s\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0073\u0068ou\u006c\u0064 \u0062\u0065\u0020\u0074\u0072\u0075\u0065\u002e");
};};return nil ;};func (_fdaa *SymbolDictionary )huffDecodeBmSize ()(int64 ,error ){if _fdaa ._dee ==nil {var (_agee int ;_gdfb error ;);if _fdaa .SdHuffDecodeHeightSelection ==3{_agee ++;};if _fdaa .SdHuffDecodeWidthSelection ==3{_agee ++;};_fdaa ._dee ,_gdfb =_fdaa .getUserTable (_agee );
if _gdfb !=nil {return 0,_gdfb ;};};return _fdaa ._dee .Decode (_fdaa ._gdge );};func (_edce *SymbolDictionary )setExportedSymbols (_abdc []int ){for _edag :=uint32 (0);_edag < _edce ._bacdf +_edce .NumberOfNewSymbols ;_edag ++{if _abdc [_edag ]==1{var _aecf *_ae .Bitmap ;
if _edag < _edce ._bacdf {_aecf =_edce ._bdge [_edag ];}else {_aecf =_edce ._dgae [_edag -_edce ._bacdf ];};_ee .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u002d\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u0020\u0041\u0064\u0064 E\u0078\u0070\u006fr\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027%\u0073\u0027",_aecf );
_edce ._fdfa =append (_edce ._fdfa ,_aecf );};};};func (_eac *PageInformationSegment )Size ()int {return 19};func (_gdd *Header )readHeaderLength (_adc _b .StreamReader ,_cfca int64 ){_gdd .HeaderLength =_adc .StreamPosition ()-_cfca ;};func (_fdag *TextRegion )Init (header *Header ,r _b .StreamReader )error {_fdag .Header =header ;
_fdag ._gdcdf =r ;_fdag .RegionInfo =NewRegionSegment (_fdag ._gdcdf );return _fdag .parseHeader ();};func (_acfe *SymbolDictionary )encodeRefinementATFlags (_fbadb _b .BinaryWriter )(_eacf int ,_dgg error ){const _gdgf ="\u0065\u006e\u0063od\u0065\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0041\u0054\u0046\u006c\u0061\u0067\u0073";
if !_acfe .UseRefinementAggregation ||_acfe .SdrTemplate !=0{return 0,nil ;};for _ade :=0;_ade < 2;_ade ++{if _dgg =_fbadb .WriteByte (byte (_acfe .SdrATX [_ade ]));_dgg !=nil {return _eacf ,_cf .Wrapf (_dgg ,_gdgf ,"\u0053\u0064\u0072\u0041\u0054\u0058\u005b\u0025\u0064\u005d",_ade );
};_eacf ++;if _dgg =_fbadb .WriteByte (byte (_acfe .SdrATY [_ade ]));_dgg !=nil {return _eacf ,_cf .Wrapf (_dgg ,_gdgf ,"\u0053\u0064\u0072\u0041\u0054\u0059\u005b\u0025\u0064\u005d",_ade );};_eacf ++;};return _eacf ,nil ;};type GenericRegion struct{_fag _b .StreamReader ;
DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;UseExtTemplates bool ;IsTPGDon bool ;GBTemplate byte ;IsMMREncoded bool ;UseMMR bool ;GBAtX []int8 ;GBAtY []int8 ;GBAtOverride []bool ;_aede bool ;
Bitmap *_ae .Bitmap ;_eeg *_fbb .Decoder ;_efc *_fbb .DecoderStats ;_fcda *_eg .Decoder ;};func (_cc *EndOfStripe )parseHeader (_ab *Header ,_ed _b .StreamReader )error {_abg ,_gcf :=_cc ._cd .ReadBits (32);if _gcf !=nil {return _gcf ;};_cc ._cde =int (_abg &_g .MaxInt32 );
return nil ;};func (_ca *EndOfStripe )LineNumber ()int {return _ca ._cde };func (_bacg *PatternDictionary )readIsMMREncoded ()error {_cega ,_cdacg :=_bacg ._eebb .ReadBit ();if _cdacg !=nil {return _cdacg ;};if _cega !=0{_bacg .IsMMREncoded =true ;};return nil ;
};func (_dbab *GenericRegion )decodeTemplate0b (_dgdc ,_ccaf ,_cbe int ,_bdb ,_gbdb int )(_ccfg error ){const _edef ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0062";var (_fded ,_edaf int ;_aefd ,_efe int ;_fee byte ;
_gaa int ;);if _dgdc >=1{_fee ,_ccfg =_dbab .Bitmap .GetByte (_gbdb );if _ccfg !=nil {return _cf .Wrap (_ccfg ,_edef ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_aefd =int (_fee );};if _dgdc >=2{_fee ,_ccfg =_dbab .Bitmap .GetByte (_gbdb -_dbab .Bitmap .RowStride );
if _ccfg !=nil {return _cf .Wrap (_ccfg ,_edef ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_efe =int (_fee )<<6;};_fded =(_aefd &0xf0)|(_efe &0x3800);for _bbgd :=0;_bbgd < _cbe ;_bbgd =_gaa {var (_fdc byte ;_bfbb int ;);_gaa =_bbgd +8;if _ffg :=_ccaf -_bbgd ;
_ffg > 8{_bfbb =8;}else {_bfbb =_ffg ;};if _dgdc > 0{_aefd <<=8;if _gaa < _ccaf {_fee ,_ccfg =_dbab .Bitmap .GetByte (_gbdb +1);if _ccfg !=nil {return _cf .Wrap (_ccfg ,_edef ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_aefd |=int (_fee );};
};if _dgdc > 1{_efe <<=8;if _gaa < _ccaf {_fee ,_ccfg =_dbab .Bitmap .GetByte (_gbdb -_dbab .Bitmap .RowStride +1);if _ccfg !=nil {return _cf .Wrap (_ccfg ,_edef ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_efe |=int (_fee )<<6;};};for _ccba :=0;
_ccba < _bfbb ;_ccba ++{_fgeb :=uint (7-_ccba );if _dbab ._aede {_edaf =_dbab .overrideAtTemplate0b (_fded ,_bbgd +_ccba ,_dgdc ,int (_fdc ),_ccba ,int (_fgeb ));_dbab ._efc .SetIndex (int32 (_edaf ));}else {_dbab ._efc .SetIndex (int32 (_fded ));};var _bee int ;
_bee ,_ccfg =_dbab ._eeg .DecodeBit (_dbab ._efc );if _ccfg !=nil {return _cf .Wrap (_ccfg ,_edef ,"");};_fdc |=byte (_bee <<_fgeb );_fded =((_fded &0x7bf7)<<1)|_bee |((_aefd >>_fgeb )&0x10)|((_efe >>_fgeb )&0x800);};if _cdf :=_dbab .Bitmap .SetByte (_bdb ,_fdc );
_cdf !=nil {return _cf .Wrap (_cdf ,_edef ,"");};_bdb ++;_gbdb ++;};return nil ;};func (_efef *PageInformationSegment )readIsStriped ()error {_gadc ,_cdfb :=_efef ._beed .ReadBit ();if _cdfb !=nil {return _cdfb ;};if _gadc ==1{_efef .IsStripe =true ;};
return nil ;};func (_bfff *SymbolDictionary )readRefinementAtPixels (_dbce int )error {_bfff .SdrATX =make ([]int8 ,_dbce );_bfff .SdrATY =make ([]int8 ,_dbce );var (_eceb byte ;_ggfeb error ;);for _fefgb :=0;_fefgb < _dbce ;_fefgb ++{_eceb ,_ggfeb =_bfff ._gdge .ReadByte ();
if _ggfeb !=nil {return _ggfeb ;};_bfff .SdrATX [_fefgb ]=int8 (_eceb );_eceb ,_ggfeb =_bfff ._gdge .ReadByte ();if _ggfeb !=nil {return _ggfeb ;};_bfff .SdrATY [_fefgb ]=int8 (_eceb );};return nil ;};type Segmenter interface{Init (_bgbb *Header ,_dfadg _b .StreamReader )error ;
};func (_ceb *template1 )setIndex (_gfg *_fbb .DecoderStats ){_gfg .SetIndex (0x080)};func (_egg *GenericRegion )Size ()int {return _egg .RegionSegment .Size ()+1+2*len (_egg .GBAtX )};func (_gaff *PageInformationSegment )encodeFlags (_bdgf _b .BinaryWriter )(_fbaf error ){const _gdgc ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _fbaf =_bdgf .SkipBits (1);_fbaf !=nil {return _cf .Wrap (_fbaf ,_gdgc ,"\u0072\u0065\u0073e\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074");};var _gfbaa int ;if _gaff .CombinationOperatorOverrideAllowed (){_gfbaa =1;};if _fbaf =_bdgf .WriteBit (_gfbaa );
_fbaf !=nil {return _cf .Wrap (_fbaf ,_gdgc ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0064\u0065\u006e");};_gfbaa =0;if _gaff ._abbbf {_gfbaa =1;
};if _fbaf =_bdgf .WriteBit (_gfbaa );_fbaf !=nil {return _cf .Wrap (_fbaf ,_gdgc ,"\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0061\u0075\u0078i\u006ci\u0061r\u0079\u0020\u0062\u0075\u0066\u0066\u0065r");};if _fbaf =_bdgf .WriteBit ((int (_gaff ._afec )>>1)&0x01);
_fbaf !=nil {return _cf .Wrap (_fbaf ,_gdgc ,"\u0063\u006f\u006d\u0062\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006f\u0070\u0065\u0072\u0061\u0074o\u0072\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0062\u0069\u0074");};if _fbaf =_bdgf .WriteBit (int (_gaff ._afec )&0x01);
_fbaf !=nil {return _cf .Wrap (_fbaf ,_gdgc ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0062\u0069\u0074");};_gfbaa =int (_gaff .DefaultPixelValue );
if _fbaf =_bdgf .WriteBit (_gfbaa );_fbaf !=nil {return _cf .Wrap (_fbaf ,_gdgc ,"\u0064e\u0066\u0061\u0075\u006c\u0074\u0020\u0070\u0061\u0067\u0065\u0020p\u0069\u0078\u0065\u006c\u0020\u0076\u0061\u006c\u0075\u0065");};_gfbaa =0;if _gaff ._dfgf {_gfbaa =1;
};if _fbaf =_bdgf .WriteBit (_gfbaa );_fbaf !=nil {return _cf .Wrap (_fbaf ,_gdgc ,"\u0063\u006f\u006e\u0074ai\u006e\u0073\u0020\u0072\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074");};_gfbaa =0;if _gaff .IsLossless {_gfbaa =1;};if _fbaf =_bdgf .WriteBit (_gfbaa );
_fbaf !=nil {return _cf .Wrap (_fbaf ,_gdgc ,"p\u0061\u0067\u0065\u0020\u0069\u0073 \u0065\u0076\u0065\u006e\u0074\u0075\u0061\u006c\u006cy\u0020\u006c\u006fs\u0073l\u0065\u0073\u0073");};return nil ;};func (_beeeg *TextRegion )decodeRdy ()(int64 ,error ){const _baac ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064y";
if _beeeg .IsHuffmanEncoded {if _beeeg .SbHuffRDY ==3{if _beeeg ._babd ==nil {var (_cgff int ;_gddee error ;);if _beeeg .SbHuffFS ==3{_cgff ++;};if _beeeg .SbHuffDS ==3{_cgff ++;};if _beeeg .SbHuffDT ==3{_cgff ++;};if _beeeg .SbHuffRDWidth ==3{_cgff ++;
};if _beeeg .SbHuffRDHeight ==3{_cgff ++;};if _beeeg .SbHuffRDX ==3{_cgff ++;};_beeeg ._babd ,_gddee =_beeeg .getUserTable (_cgff );if _gddee !=nil {return 0,_cf .Wrap (_gddee ,_baac ,"");};};return _beeeg ._babd .Decode (_beeeg ._gdcdf );};_fdedf ,_dfbbb :=_db .GetStandardTable (14+int (_beeeg .SbHuffRDY ));
if _dfbbb !=nil {return 0,_dfbbb ;};return _fdedf .Decode (_beeeg ._gdcdf );};_eebaf ,_afgd :=_beeeg ._eecdf .DecodeInt (_beeeg ._cbddg );if _afgd !=nil {return 0,_cf .Wrap (_afgd ,_baac ,"");};return int64 (_eebaf ),nil ;};func (_aggdf *TextRegion )createRegionBitmap ()error {_aggdf .RegionBitmap =_ae .New (int (_aggdf .RegionInfo .BitmapWidth ),int (_aggdf .RegionInfo .BitmapHeight ));
if _aggdf .DefaultPixel !=0{_aggdf .RegionBitmap .SetDefaultPixel ();};return nil ;};func (_deb *GenericRegion )decodeSLTP ()(int ,error ){switch _deb .GBTemplate {case 0:_deb ._efc .SetIndex (0x9B25);case 1:_deb ._efc .SetIndex (0x795);case 2:_deb ._efc .SetIndex (0xE5);
case 3:_deb ._efc .SetIndex (0x195);};return _deb ._eeg .DecodeBit (_deb ._efc );};func (_fca *TableSegment )HtOOB ()int32 {return _fca ._bddb };type RegionSegment struct{_dacf _b .StreamReader ;BitmapWidth uint32 ;BitmapHeight uint32 ;XLocation uint32 ;
YLocation uint32 ;CombinaionOperator _ae .CombinationOperator ;};func (_ggfa *GenericRegion )overrideAtTemplate1 (_gbb ,_cgc ,_afbbg ,_gce ,_eefa int )int {_gbb &=0x1FF7;if _ggfa .GBAtY [0]==0&&_ggfa .GBAtX [0]>=-int8 (_eefa ){_gbb |=(_gce >>uint (7-(int8 (_eefa )+_ggfa .GBAtX [0]))&0x1)<<3;
}else {_gbb |=int (_ggfa .getPixel (_cgc +int (_ggfa .GBAtX [0]),_afbbg +int (_ggfa .GBAtY [0])))<<3;};return _gbb ;};func (_ccgeg *HalftoneRegion )combineGrayscalePlanes (_ggdb []*_ae .Bitmap ,_cfa int )error {_agdc :=0;for _afbd :=0;_afbd < _ggdb [_cfa ].Height ;
_afbd ++{for _ccd :=0;_ccd < _ggdb [_cfa ].Width ;_ccd +=8{_bfgc ,_edbg :=_ggdb [_cfa +1].GetByte (_agdc );if _edbg !=nil {return _edbg ;};_cddc ,_edbg :=_ggdb [_cfa ].GetByte (_agdc );if _edbg !=nil {return _edbg ;};_edbg =_ggdb [_cfa ].SetByte (_agdc ,_ae .CombineBytes (_cddc ,_bfgc ,_ae .CmbOpXor ));
if _edbg !=nil {return _edbg ;};_agdc ++;};};return nil ;};func (_bfaad *PageInformationSegment )Init (h *Header ,r _b .StreamReader )(_eaag error ){_bfaad ._beed =r ;if _eaag =_bfaad .parseHeader ();_eaag !=nil {return _cf .Wrap (_eaag ,"P\u0061\u0067\u0065\u0049\u006e\u0066o\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065g\u006d\u0065\u006et\u002eI\u006e\u0069\u0074","");
};return nil ;};func (_ebagc *SymbolDictionary )GetDictionary ()([]*_ae .Bitmap ,error ){_ee .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c-\u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){_ee .Log .Trace ("\u005b\u0053\u0059M\u0042\u004f\u004c\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
_ee .Log .Trace ("\u005b\u0053Y\u004d\u0042\u004f\u004c\u002dD\u0049\u0043\u0054\u0049\u004fN\u0041\u0052\u0059\u005d\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020\u000a\u0045\u0078\u003a\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u000a\u006e\u0065\u0077\u003a\u0027\u0025\u0073\u0027",_ebagc ._fdfa ,_ebagc ._dgae );
}();if _ebagc ._fdfa ==nil {var _feade error ;if _ebagc .UseRefinementAggregation {_ebagc ._daca =_ebagc .getSbSymCodeLen ();};if !_ebagc .IsHuffmanEncoded {if _feade =_ebagc .setCodingStatistics ();_feade !=nil {return nil ,_feade ;};};_ebagc ._dgae =make ([]*_ae .Bitmap ,_ebagc .NumberOfNewSymbols );
var _gabf []int ;if _ebagc .IsHuffmanEncoded &&!_ebagc .UseRefinementAggregation {_gabf =make ([]int ,_ebagc .NumberOfNewSymbols );};if _feade =_ebagc .setSymbolsArray ();_feade !=nil {return nil ,_feade ;};var _gbgc ,_gfad int64 ;_ebagc ._fdee =0;for _ebagc ._fdee < _ebagc .NumberOfNewSymbols {_gfad ,_feade =_ebagc .decodeHeightClassDeltaHeight ();
if _feade !=nil {return nil ,_feade ;};_gbgc +=_gfad ;var _bede ,_babf uint32 ;_fegg :=int64 (_ebagc ._fdee );for {var _egda int64 ;_egda ,_feade =_ebagc .decodeDifferenceWidth ();if _df .Is (_feade ,_gc .ErrOOB ){break ;};if _feade !=nil {return nil ,_feade ;
};if _ebagc ._fdee >=_ebagc .NumberOfNewSymbols {break ;};_bede +=uint32 (_egda );_babf +=_bede ;if !_ebagc .IsHuffmanEncoded ||_ebagc .UseRefinementAggregation {if !_ebagc .UseRefinementAggregation {_feade =_ebagc .decodeDirectlyThroughGenericRegion (_bede ,uint32 (_gbgc ));
if _feade !=nil {return nil ,_feade ;};}else {_feade =_ebagc .decodeAggregate (_bede ,uint32 (_gbgc ));if _feade !=nil {return nil ,_feade ;};};}else if _ebagc .IsHuffmanEncoded &&!_ebagc .UseRefinementAggregation {_gabf [_ebagc ._fdee ]=int (_bede );};
_ebagc ._fdee ++;};if _ebagc .IsHuffmanEncoded &&!_ebagc .UseRefinementAggregation {var _ddcc int64 ;if _ebagc .SdHuffBMSizeSelection ==0{var _gadf _db .Tabler ;_gadf ,_feade =_db .GetStandardTable (1);if _feade !=nil {return nil ,_feade ;};_ddcc ,_feade =_gadf .Decode (_ebagc ._gdge );
if _feade !=nil {return nil ,_feade ;};}else {_ddcc ,_feade =_ebagc .huffDecodeBmSize ();if _feade !=nil {return nil ,_feade ;};};_ebagc ._gdge .Align ();var _gbga *_ae .Bitmap ;_gbga ,_feade =_ebagc .decodeHeightClassCollectiveBitmap (_ddcc ,uint32 (_gbgc ),_babf );
if _feade !=nil {return nil ,_feade ;};_feade =_ebagc .decodeHeightClassBitmap (_gbga ,_fegg ,int (_gbgc ),_gabf );if _feade !=nil {return nil ,_feade ;};};};_caec ,_feade :=_ebagc .getToExportFlags ();if _feade !=nil {return nil ,_feade ;};_ebagc .setExportedSymbols (_caec );
};return _ebagc ._fdfa ,nil ;};func _bbgf (_aega _b .StreamReader ,_cca *Header )*GenericRefinementRegion {return &GenericRefinementRegion {_gb :_aega ,RegionInfo :NewRegionSegment (_aega ),_bf :_cca ,_ad :&template0 {},_ga :&template1 {}};};func (_beb *HalftoneRegion )GetRegionInfo ()*RegionSegment {return _beb .RegionSegment };
func (_egga *PatternDictionary )checkInput ()error {if _egga .HdpHeight < 1||_egga .HdpWidth < 1{return _fbc .New ("in\u0076\u0061l\u0069\u0064\u0020\u0048\u0065\u0061\u0064\u0065\u0072 \u0056\u0061\u006c\u0075\u0065\u003a\u0020\u0057\u0069\u0064\u0074\u0068\u002f\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020g\u0072e\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020z\u0065\u0072o");
};if _egga .IsMMREncoded {if _egga .HDTemplate !=0{_ee .Log .Debug ("\u0076\u0061\u0072\u0069\u0061\u0062\u006c\u0065\u0020\u0048\u0044\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e \u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030");
};};return nil ;};func (_gfba *Header )readSegmentDataLength (_ccee _b .StreamReader )(_acfa error ){_gfba .SegmentDataLength ,_acfa =_ccee .ReadBits (32);if _acfa !=nil {return _acfa ;};_gfba .SegmentDataLength &=_g .MaxInt32 ;return nil ;};func (_dbcf *GenericRegion )decodeTemplate0a (_bfa ,_gbe ,_fgac int ,_afd ,_aac int )(_fed error ){const _dbgf ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0061";
var (_cbf ,_eafe int ;_abbb ,_cbc int ;_gea byte ;_dfgd int ;);if _bfa >=1{_gea ,_fed =_dbcf .Bitmap .GetByte (_aac );if _fed !=nil {return _cf .Wrap (_fed ,_dbgf ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_abbb =int (_gea );};if _bfa >=2{_gea ,_fed =_dbcf .Bitmap .GetByte (_aac -_dbcf .Bitmap .RowStride );
if _fed !=nil {return _cf .Wrap (_fed ,_dbgf ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_cbc =int (_gea )<<6;};_cbf =(_abbb &0xf0)|(_cbc &0x3800);for _cced :=0;_cced < _fgac ;_cced =_dfgd {var (_gdeg byte ;_bfdb int ;);_dfgd =_cced +8;if _cgb :=_gbe -_cced ;
_cgb > 8{_bfdb =8;}else {_bfdb =_cgb ;};if _bfa > 0{_abbb <<=8;if _dfgd < _gbe {_gea ,_fed =_dbcf .Bitmap .GetByte (_aac +1);if _fed !=nil {return _cf .Wrap (_fed ,_dbgf ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_abbb |=int (_gea );};};if _bfa > 1{_dcag :=_aac -_dbcf .Bitmap .RowStride +1;
_cbc <<=8;if _dfgd < _gbe {_gea ,_fed =_dbcf .Bitmap .GetByte (_dcag );if _fed !=nil {return _cf .Wrap (_fed ,_dbgf ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_cbc |=int (_gea )<<6;}else {_cbc |=0;};};for _aeca :=0;_aeca < _bfdb ;_aeca ++{_dafc :=uint (7-_aeca );
if _dbcf ._aede {_eafe =_dbcf .overrideAtTemplate0a (_cbf ,_cced +_aeca ,_bfa ,int (_gdeg ),_aeca ,int (_dafc ));_dbcf ._efc .SetIndex (int32 (_eafe ));}else {_dbcf ._efc .SetIndex (int32 (_cbf ));};var _ede int ;_ede ,_fed =_dbcf ._eeg .DecodeBit (_dbcf ._efc );
if _fed !=nil {return _cf .Wrap (_fed ,_dbgf ,"");};_gdeg |=byte (_ede )<<_dafc ;_cbf =((_cbf &0x7bf7)<<1)|_ede |((_abbb >>_dafc )&0x10)|((_cbc >>_dafc )&0x800);};if _cebf :=_dbcf .Bitmap .SetByte (_afd ,_gdeg );_cebf !=nil {return _cf .Wrap (_cebf ,_dbgf ,"");
};_afd ++;_aac ++;};return nil ;};func (_cebd *TableSegment )HtHigh ()int32 {return _cebd ._cbba };func (_cfefc *SymbolDictionary )setRetainedCodingContexts (_dbgbd *SymbolDictionary ){_cfefc ._bbaf =_dbgbd ._bbaf ;_cfefc .IsHuffmanEncoded =_dbgbd .IsHuffmanEncoded ;
_cfefc .UseRefinementAggregation =_dbgbd .UseRefinementAggregation ;_cfefc .SdTemplate =_dbgbd .SdTemplate ;_cfefc .SdrTemplate =_dbgbd .SdrTemplate ;_cfefc .SdATX =_dbgbd .SdATX ;_cfefc .SdATY =_dbgbd .SdATY ;_cfefc .SdrATX =_dbgbd .SdrATX ;_cfefc .SdrATY =_dbgbd .SdrATY ;
_cfefc ._aefdb =_dbgbd ._aefdb ;};func (_cfg *GenericRefinementRegion )decodeSLTP ()(int ,error ){_cfg .Template .setIndex (_cfg ._gg );return _cfg ._cdb .DecodeBit (_cfg ._gg );};func (_bgga *TextRegion )computeSymbolCodeLength ()error {if _bgga .IsHuffmanEncoded {return _bgga .symbolIDCodeLengths ();
};_bgga ._bfe =int8 (_g .Ceil (_g .Log (float64 (_bgga .NumberOfSymbols ))/_g .Log (2)));return nil ;};func (_edgc *HalftoneRegion )renderPattern (_dfcg [][]int )(_aeeg error ){var _abeg ,_fbab int ;for _aag :=0;_aag < int (_edgc .HGridHeight );_aag ++{for _badc :=0;
_badc < int (_edgc .HGridWidth );_badc ++{_abeg =_edgc .computeX (_aag ,_badc );_fbab =_edgc .computeY (_aag ,_badc );_aaab :=_edgc .Patterns [_dfcg [_aag ][_badc ]];if _aeeg =_ae .Blit (_aaab ,_edgc .HalftoneRegionBitmap ,_abeg +int (_edgc .HGridX ),_fbab +int (_edgc .HGridY ),_edgc .CombinationOperator );
_aeeg !=nil {return _aeeg ;};};};return nil ;};func (_begg *GenericRegion )setOverrideFlag (_dcfc int ){_begg .GBAtOverride [_dcfc ]=true ;_begg ._aede =true ;};func (_cfcf *PageInformationSegment )Encode (w _b .BinaryWriter )(_fgaga int ,_cgac error ){const _gdec ="\u0050\u0061g\u0065\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u002e\u0045\u006eco\u0064\u0065";
_fead :=make ([]byte ,4);_e .BigEndian .PutUint32 (_fead ,uint32 (_cfcf .PageBMWidth ));_fgaga ,_cgac =w .Write (_fead );if _cgac !=nil {return _fgaga ,_cf .Wrap (_cgac ,_gdec ,"\u0077\u0069\u0064t\u0068");};_e .BigEndian .PutUint32 (_fead ,uint32 (_cfcf .PageBMHeight ));
var _ded int ;_ded ,_cgac =w .Write (_fead );if _cgac !=nil {return _ded +_fgaga ,_cf .Wrap (_cgac ,_gdec ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_fgaga +=_ded ;_e .BigEndian .PutUint32 (_fead ,uint32 (_cfcf .ResolutionX ));_ded ,_cgac =w .Write (_fead );
if _cgac !=nil {return _ded +_fgaga ,_cf .Wrap (_cgac ,_gdec ,"\u0078\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_fgaga +=_ded ;_e .BigEndian .PutUint32 (_fead ,uint32 (_cfcf .ResolutionY ));if _ded ,_cgac =w .Write (_fead );_cgac !=nil {return _ded +_fgaga ,_cf .Wrap (_cgac ,_gdec ,"\u0079\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");
};_fgaga +=_ded ;if _cgac =_cfcf .encodeFlags (w );_cgac !=nil {return _fgaga ,_cf .Wrap (_cgac ,_gdec ,"");};_fgaga ++;if _ded ,_cgac =_cfcf .encodeStripingInformation (w );_cgac !=nil {return _fgaga ,_cf .Wrap (_cgac ,_gdec ,"");};_fgaga +=_ded ;return _fgaga ,nil ;
};func (_eaaa Type )String ()string {switch _eaaa {case TSymbolDictionary :return "\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079";case TIntermediateTextRegion :return "\u0049n\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020T\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TImmediateTextRegion :return "I\u006d\u006d\u0065\u0064ia\u0074e\u0020\u0054\u0065\u0078\u0074 \u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessTextRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020L\u006f\u0073\u0073\u006c\u0065\u0073\u0073 \u0054\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TPatternDictionary :return "\u0050a\u0074t\u0065\u0072\u006e\u0020\u0044i\u0063\u0074i\u006f\u006e\u0061\u0072\u0079";case TIntermediateHalftoneRegion :return "\u0049\u006e\u0074\u0065r\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0048\u0061l\u0066t\u006f\u006e\u0065\u0020\u0052\u0065\u0067i\u006f\u006e";
case TImmediateHalftoneRegion :return "\u0049m\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u0048\u0061l\u0066t\u006fn\u0065\u0020\u0052\u0065\u0067\u0069\u006fn";case TImmediateLosslessHalftoneRegion :return "\u0049\u006d\u006ded\u0069\u0061\u0074\u0065\u0020\u004c\u006f\u0073\u0073l\u0065s\u0073 \u0048a\u006c\u0066\u0074\u006f\u006e\u0065\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TIntermediateGenericRegion :return "I\u006e\u0074\u0065\u0072\u006d\u0065d\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020R\u0065g\u0069\u006f\u006e";case TImmediateGenericRegion :return "\u0049m\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006ee\u0072\u0069\u0063\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TImmediateLosslessGenericRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u004c\u006f\u0073\u0073\u006c\u0065\u0073\u0073\u0020\u0047e\u006e\u0065\u0072\u0069\u0063\u0020\u0052e\u0067\u0069\u006f\u006e";case TIntermediateGenericRefinementRegion :return "\u0049\u006e\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0020\u0052\u0065\u0066i\u006e\u0065\u006d\u0065\u006et\u0020\u0052e\u0067\u0069\u006f\u006e";
case TImmediateGenericRefinementRegion :return "I\u006d\u006d\u0065\u0064\u0069\u0061t\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020\u0052\u0065\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020\u0052\u0065\u0067\u0069o\u006e";case TImmediateLosslessGenericRefinementRegion :return "\u0049m\u006d\u0065d\u0069\u0061\u0074\u0065 \u004c\u006f\u0073s\u006c\u0065\u0073\u0073\u0020\u0047\u0065\u006e\u0065ri\u0063\u0020\u0052e\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020R\u0065\u0067i\u006f\u006e";
case TPageInformation :return "\u0050\u0061g\u0065\u0020\u0049n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e";case TEndOfPage :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0050\u0061\u0067\u0065";case TEndOfStrip :return "\u0045\u006e\u0064 \u004f\u0066\u0020\u0053\u0074\u0072\u0069\u0070";
case TEndOfFile :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0046\u0069\u006c\u0065";case TProfiles :return "\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0073";case TTables :return "\u0054\u0061\u0062\u006c\u0065\u0073";case TExtension :return "\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn";
case TBitmap :return "\u0042\u0069\u0074\u006d\u0061\u0070";};return "I\u006ev\u0061\u006c\u0069\u0064\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0020Ki\u006e\u0064";};const (TSymbolDictionary Type =0;TIntermediateTextRegion Type =4;TImmediateTextRegion Type =6;
TImmediateLosslessTextRegion Type =7;TPatternDictionary Type =16;TIntermediateHalftoneRegion Type =20;TImmediateHalftoneRegion Type =22;TImmediateLosslessHalftoneRegion Type =23;TIntermediateGenericRegion Type =36;TImmediateGenericRegion Type =38;TImmediateLosslessGenericRegion Type =39;
TIntermediateGenericRefinementRegion Type =40;TImmediateGenericRefinementRegion Type =42;TImmediateLosslessGenericRefinementRegion Type =43;TPageInformation Type =48;TEndOfPage Type =49;TEndOfStrip Type =50;TEndOfFile Type =51;TProfiles Type =52;TTables Type =53;
TExtension Type =62;TBitmap Type =70;);func (_ddab *GenericRegion )setParameters (_gbbd bool ,_cgfc ,_abgf int64 ,_ead ,_gdcb uint32 ){_ddab .IsMMREncoded =_gbbd ;_ddab .DataOffset =_cgfc ;_ddab .DataLength =_abgf ;_ddab .RegionSegment .BitmapHeight =_ead ;
_ddab .RegionSegment .BitmapWidth =_gdcb ;_ddab ._fcda =nil ;_ddab .Bitmap =nil ;};func (_febe *Header )writeSegmentDataLength (_edfgf _b .BinaryWriter )(_geea int ,_fce error ){_bagb :=make ([]byte ,4);_e .BigEndian .PutUint32 (_bagb ,uint32 (_febe .SegmentDataLength ));
if _geea ,_fce =_edfgf .Write (_bagb );_fce !=nil {return 0,_cf .Wrap (_fce ,"\u0048\u0065a\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u004c\u0065ng\u0074\u0068","");};return _geea ,nil ;
};func (_cgegb *TextRegion )decodeSymInRefSize ()(int64 ,error ){const _bafa ="\u0064e\u0063o\u0064\u0065\u0053\u0079\u006dI\u006e\u0052e\u0066\u0053\u0069\u007a\u0065";if _cgegb .SbHuffRSize ==0{_dcdea ,_dbae :=_db .GetStandardTable (1);if _dbae !=nil {return 0,_cf .Wrap (_dbae ,_bafa ,"");
};return _dcdea .Decode (_cgegb ._gdcdf );};if _cgegb ._gcga ==nil {var (_gffda int ;_fedg error ;);if _cgegb .SbHuffFS ==3{_gffda ++;};if _cgegb .SbHuffDS ==3{_gffda ++;};if _cgegb .SbHuffDT ==3{_gffda ++;};if _cgegb .SbHuffRDWidth ==3{_gffda ++;};if _cgegb .SbHuffRDHeight ==3{_gffda ++;
};if _cgegb .SbHuffRDX ==3{_gffda ++;};if _cgegb .SbHuffRDY ==3{_gffda ++;};_cgegb ._gcga ,_fedg =_cgegb .getUserTable (_gffda );if _fedg !=nil {return 0,_cf .Wrap (_fedg ,_bafa ,"");};};_afdf ,_egcbd :=_cgegb ._gcga .Decode (_cgegb ._gdcdf );if _egcbd !=nil {return 0,_cf .Wrap (_egcbd ,_bafa ,"");
};return _afdf ,nil ;};type templater interface{form (_deg ,_dbg ,_afe ,_fgaa ,_ccge int16 )int16 ;setIndex (_dbc *_fbb .DecoderStats );};func (_agcd *TextRegion )blit (_gfgeb *_ae .Bitmap ,_bebg int64 )error {if _agcd .IsTransposed ==0&&(_agcd .ReferenceCorner ==2||_agcd .ReferenceCorner ==3){_agcd ._gfcbe +=int64 (_gfgeb .Width -1);
}else if _agcd .IsTransposed ==1&&(_agcd .ReferenceCorner ==0||_agcd .ReferenceCorner ==2){_agcd ._gfcbe +=int64 (_gfgeb .Height -1);};_agbd :=_agcd ._gfcbe ;if _agcd .IsTransposed ==1{_agbd ,_bebg =_bebg ,_agbd ;};switch _agcd .ReferenceCorner {case 0:_bebg -=int64 (_gfgeb .Height -1);
case 2:_bebg -=int64 (_gfgeb .Height -1);_agbd -=int64 (_gfgeb .Width -1);case 3:_agbd -=int64 (_gfgeb .Width -1);};_gabgc :=_ae .Blit (_gfgeb ,_agcd .RegionBitmap ,int (_agbd ),int (_bebg ),_agcd .CombinationOperator );if _gabgc !=nil {return _gabgc ;
};if _agcd .IsTransposed ==0&&(_agcd .ReferenceCorner ==0||_agcd .ReferenceCorner ==1){_agcd ._gfcbe +=int64 (_gfgeb .Width -1);};if _agcd .IsTransposed ==1&&(_agcd .ReferenceCorner ==1||_agcd .ReferenceCorner ==3){_agcd ._gfcbe +=int64 (_gfgeb .Height -1);
};return nil ;};func (_gcfa *TextRegion )decodeIb (_aeea ,_abfd int64 )(*_ae .Bitmap ,error ){const _bface ="\u0064\u0065\u0063\u006f\u0064\u0065\u0049\u0062";var (_egac error ;_debcb *_ae .Bitmap ;);if _aeea ==0{if int (_abfd )> len (_gcfa .Symbols )-1{return nil ,_cf .Error (_bface ,"\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0049\u0042\u0020\u0062\u0069\u0074\u006d\u0061\u0070\u002e\u0020\u0069\u006e\u0064\u0065x\u0020\u006f\u0075\u0074\u0020o\u0066\u0020r\u0061\u006e\u0067\u0065");
};return _gcfa .Symbols [int (_abfd )],nil ;};var _fdcg ,_ffbf ,_bceb ,_bccc int64 ;_fdcg ,_egac =_gcfa .decodeRdw ();if _egac !=nil {return nil ,_cf .Wrap (_egac ,_bface ,"");};_ffbf ,_egac =_gcfa .decodeRdh ();if _egac !=nil {return nil ,_cf .Wrap (_egac ,_bface ,"");
};_bceb ,_egac =_gcfa .decodeRdx ();if _egac !=nil {return nil ,_cf .Wrap (_egac ,_bface ,"");};_bccc ,_egac =_gcfa .decodeRdy ();if _egac !=nil {return nil ,_cf .Wrap (_egac ,_bface ,"");};if _gcfa .IsHuffmanEncoded {if _ ,_egac =_gcfa .decodeSymInRefSize ();
_egac !=nil {return nil ,_cf .Wrap (_egac ,_bface ,"");};_gcfa ._gdcdf .Align ();};_ddfg :=_gcfa .Symbols [_abfd ];_aade :=uint32 (_ddfg .Width );_fgca :=uint32 (_ddfg .Height );_cbge :=int32 (uint32 (_fdcg )>>1)+int32 (_bceb );_ccbb :=int32 (uint32 (_ffbf )>>1)+int32 (_bccc );
if _gcfa ._bgfe ==nil {_gcfa ._bgfe =_bbgf (_gcfa ._gdcdf ,nil );};_gcfa ._bgfe .setParameters (_gcfa ._cdee ,_gcfa ._eecdf ,_gcfa .SbrTemplate ,_aade +uint32 (_fdcg ),_fgca +uint32 (_ffbf ),_ddfg ,_cbge ,_ccbb ,false ,_gcfa .SbrATX ,_gcfa .SbrATY );_debcb ,_egac =_gcfa ._bgfe .GetRegionBitmap ();
if _egac !=nil {return nil ,_cf .Wrap (_egac ,_bface ,"\u0067\u0072\u0066");};if _gcfa .IsHuffmanEncoded {_gcfa ._gdcdf .Align ();};return _debcb ,nil ;};func (_acdbe *TextRegion )decodeStripT ()(_cffg int64 ,_daea error ){if _acdbe .IsHuffmanEncoded {if _acdbe .SbHuffDT ==3{if _acdbe ._cbgf ==nil {var _eedfa int ;
if _acdbe .SbHuffFS ==3{_eedfa ++;};if _acdbe .SbHuffDS ==3{_eedfa ++;};_acdbe ._cbgf ,_daea =_acdbe .getUserTable (_eedfa );if _daea !=nil {return 0,_daea ;};};_cffg ,_daea =_acdbe ._cbgf .Decode (_acdbe ._gdcdf );if _daea !=nil {return 0,_daea ;};}else {var _faae _db .Tabler ;
_faae ,_daea =_db .GetStandardTable (11+int (_acdbe .SbHuffDT ));if _daea !=nil {return 0,_daea ;};_cffg ,_daea =_faae .Decode (_acdbe ._gdcdf );if _daea !=nil {return 0,_daea ;};};}else {var _fbba int32 ;_fbba ,_daea =_acdbe ._eecdf .DecodeInt (_acdbe ._gaec );
if _daea !=nil {return 0,_daea ;};_cffg =int64 (_fbba );};_cffg *=int64 (-_acdbe .SbStrips );return _cffg ,nil ;};func (_abbd *TableSegment )Init (h *Header ,r _b .StreamReader )error {_abbd ._gceg =r ;return _abbd .parseHeader ();};func (_eefe *TextRegion )decodeIds ()(int64 ,error ){const _eacb ="\u0064e\u0063\u006f\u0064\u0065\u0049\u0064s";
if _eefe .IsHuffmanEncoded {if _eefe .SbHuffDS ==3{if _eefe ._gcef ==nil {_cbef :=0;if _eefe .SbHuffFS ==3{_cbef ++;};var _ffeb error ;_eefe ._gcef ,_ffeb =_eefe .getUserTable (_cbef );if _ffeb !=nil {return 0,_cf .Wrap (_ffeb ,_eacb ,"");};};return _eefe ._gcef .Decode (_eefe ._gdcdf );
};_cacf ,_cgfg :=_db .GetStandardTable (8+int (_eefe .SbHuffDS ));if _cgfg !=nil {return 0,_cf .Wrap (_cgfg ,_eacb ,"");};return _cacf .Decode (_eefe ._gdcdf );};_dag ,_agdd :=_eefe ._eecdf .DecodeInt (_eefe ._bgag );if _agdd !=nil {return 0,_cf .Wrap (_agdd ,_eacb ,"\u0063\u0078\u0049\u0041\u0044\u0053");
};return int64 (_dag ),nil ;};func (_afed *GenericRegion )computeSegmentDataStructure ()error {_afed .DataOffset =_afed ._fag .StreamPosition ();_afed .DataHeaderLength =_afed .DataOffset -_afed .DataHeaderOffset ;_afed .DataLength =int64 (_afed ._fag .Length ())-_afed .DataHeaderLength ;
return nil ;};func (_caee *SymbolDictionary )encodeATFlags (_bfgb _b .BinaryWriter )(_gfab int ,_fcged error ){const _bded ="\u0065\u006e\u0063\u006f\u0064\u0065\u0041\u0054\u0046\u006c\u0061\u0067\u0073";if _caee .IsHuffmanEncoded ||_caee .SdTemplate !=0{return 0,nil ;
};_dedb :=4;if _caee .SdTemplate !=0{_dedb =1;};for _fdad :=0;_fdad < _dedb ;_fdad ++{if _fcged =_bfgb .WriteByte (byte (_caee .SdATX [_fdad ]));_fcged !=nil {return _gfab ,_cf .Wrapf (_fcged ,_bded ,"\u0053d\u0041\u0054\u0058\u005b\u0025\u0064]",_fdad );
};_gfab ++;if _fcged =_bfgb .WriteByte (byte (_caee .SdATY [_fdad ]));_fcged !=nil {return _gfab ,_cf .Wrapf (_fcged ,_bded ,"\u0053d\u0041\u0054\u0059\u005b\u0025\u0064]",_fdad );};_gfab ++;};return _gfab ,nil ;};func (_dacd *SymbolDictionary )setSymbolsArray ()error {if _dacd ._bdge ==nil {if _bbfec :=_dacd .retrieveImportSymbols ();
_bbfec !=nil {return _bbfec ;};};if _dacd ._efff ==nil {_dacd ._efff =append (_dacd ._efff ,_dacd ._bdge ...);};return nil ;};func (_eccg *TableSegment )HtLow ()int32 {return _eccg ._edbfc };func (_dcfe *TextRegion )decodeCurrentT ()(int64 ,error ){if _dcfe .SbStrips !=1{if _dcfe .IsHuffmanEncoded {_acfc ,_eaaae :=_dcfe ._gdcdf .ReadBits (byte (_dcfe .LogSBStrips ));
return int64 (_acfc ),_eaaae ;};_cbca ,_debce :=_dcfe ._eecdf .DecodeInt (_dcfe ._ebgb );if _debce !=nil {return 0,_debce ;};return int64 (_cbca ),nil ;};return 0,nil ;};func (_eebad *TextRegion )encodeSymbols (_eegd _b .BinaryWriter )(_aadc int ,_acaf error ){const _gdfbf ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
_bdeb :=make ([]byte ,4);_e .BigEndian .PutUint32 (_bdeb ,_eebad .NumberOfSymbols );if _aadc ,_acaf =_eegd .Write (_bdeb );_acaf !=nil {return _aadc ,_cf .Wrap (_acaf ,_gdfbf ,"\u004e\u0075\u006dbe\u0072\u004f\u0066\u0053\u0079\u006d\u0062\u006f\u006c\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073");
};_bgd ,_acaf :=_ae .NewClassedPoints (_eebad ._bfec ,_eebad ._aafc );if _acaf !=nil {return 0,_cf .Wrap (_acaf ,_gdfbf ,"");};var _cagde ,_edbge int ;_cbfbc :=_ea .New ();_cbfbc .Init ();if _acaf =_cbfbc .EncodeInteger (_ea .IADT ,0);_acaf !=nil {return _aadc ,_cf .Wrap (_acaf ,_gdfbf ,"\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0020\u0044\u0054");
};_gfag ,_acaf :=_bgd .GroupByY ();if _acaf !=nil {return 0,_cf .Wrap (_acaf ,_gdfbf ,"");};for _ ,_fegf :=range _gfag {_daec :=int (_fegf .YAtIndex (0));_gbfb :=_daec -_cagde ;if _acaf =_cbfbc .EncodeInteger (_ea .IADT ,_gbfb );_acaf !=nil {return _aadc ,_cf .Wrap (_acaf ,_gdfbf ,"");
};var _fedbd int ;for _eced ,_egag :=range _fegf .IntSlice {switch _eced {case 0:_eabcb :=int (_fegf .XAtIndex (_eced ))-_edbge ;if _acaf =_cbfbc .EncodeInteger (_ea .IAFS ,_eabcb );_acaf !=nil {return _aadc ,_cf .Wrap (_acaf ,_gdfbf ,"");};_edbge +=_eabcb ;
_fedbd =_edbge ;default:_dagf :=int (_fegf .XAtIndex (_eced ))-_fedbd ;if _acaf =_cbfbc .EncodeInteger (_ea .IADS ,_dagf );_acaf !=nil {return _aadc ,_cf .Wrap (_acaf ,_gdfbf ,"");};_fedbd +=_dagf ;};_cdgg ,_caae :=_eebad ._efeea .Get (_egag );if _caae !=nil {return _aadc ,_cf .Wrap (_caae ,_gdfbf ,"");
};_fdded ,_bbag :=_eebad ._gdbb [_cdgg ];if !_bbag {_fdded ,_bbag =_eebad ._ebgff [_cdgg ];if !_bbag {return _aadc ,_cf .Errorf (_gdfbf ,"\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027\u0025d\u0027\u0020\u0069s\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064 \u0069\u006e\u0020\u0067\u006cob\u0061\u006c\u0020\u0061\u006e\u0064\u0020\u006c\u006f\u0063\u0061\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020\u006d\u0061\u0070",_cdgg );
};};if _caae =_cbfbc .EncodeIAID (_eebad ._fgbad ,_fdded );_caae !=nil {return _aadc ,_cf .Wrap (_caae ,_gdfbf ,"");};};if _acaf =_cbfbc .EncodeOOB (_ea .IADS );_acaf !=nil {return _aadc ,_cf .Wrap (_acaf ,_gdfbf ,"");};};_cbfbc .Final ();_ecfe ,_acaf :=_cbfbc .WriteTo (_eegd );
if _acaf !=nil {return _aadc ,_cf .Wrap (_acaf ,_gdfbf ,"");};_aadc +=int (_ecfe );return _aadc ,nil ;};func (_baad *GenericRegion )overrideAtTemplate2 (_cbfb ,_ggfg ,_gdag ,_cfed ,_gbdd int )int {_cbfb &=0x3FB;if _baad .GBAtY [0]==0&&_baad .GBAtX [0]>=-int8 (_gbdd ){_cbfb |=(_cfed >>uint (7-(int8 (_gbdd )+_baad .GBAtX [0]))&0x1)<<2;
}else {_cbfb |=int (_baad .getPixel (_ggfg +int (_baad .GBAtX [0]),_gdag +int (_baad .GBAtY [0])))<<2;};return _cbfb ;};func (_fedb *SymbolDictionary )setAtPixels ()error {if _fedb .IsHuffmanEncoded {return nil ;};_cgbc :=1;if _fedb .SdTemplate ==0{_cgbc =4;
};if _cgae :=_fedb .readAtPixels (_cgbc );_cgae !=nil {return _cgae ;};return nil ;};func (_fcde *HalftoneRegion )Init (hd *Header ,r _b .StreamReader )error {_fcde ._gabg =r ;_fcde ._fgfg =hd ;_fcde .RegionSegment =NewRegionSegment (r );return _fcde .parseHeader ();
};func (_gdeee *TextRegion )decodeSymbolInstances ()error {_ccfb ,_gbdfde :=_gdeee .decodeStripT ();if _gbdfde !=nil {return _gbdfde ;};var (_cfdc int64 ;_fbade uint32 ;);for _fbade < _gdeee .NumberOfSymbolInstances {_efce ,_deef :=_gdeee .decodeDT ();
if _deef !=nil {return _deef ;};_ccfb +=_efce ;var _fcbc int64 ;_adgcc :=true ;_gdeee ._gfcbe =0;for {if _adgcc {_fcbc ,_deef =_gdeee .decodeDfs ();if _deef !=nil {return _deef ;};_cfdc +=_fcbc ;_gdeee ._gfcbe =_cfdc ;_adgcc =false ;}else {_bffc ,_cecb :=_gdeee .decodeIds ();
if _df .Is (_cecb ,_gc .ErrOOB ){break ;};if _cecb !=nil {return _cecb ;};if _fbade >=_gdeee .NumberOfSymbolInstances {break ;};_gdeee ._gfcbe +=_bffc +int64 (_gdeee .SbDsOffset );};_adaag ,_ceagf :=_gdeee .decodeCurrentT ();if _ceagf !=nil {return _ceagf ;
};_eeae :=_ccfb +_adaag ;_gebg ,_ceagf :=_gdeee .decodeID ();if _ceagf !=nil {return _ceagf ;};_cebef ,_ceagf :=_gdeee .decodeRI ();if _ceagf !=nil {return _ceagf ;};_abgfb ,_ceagf :=_gdeee .decodeIb (_cebef ,_gebg );if _ceagf !=nil {return _ceagf ;};if _ceagf =_gdeee .blit (_abgfb ,_eeae );
_ceagf !=nil {return _ceagf ;};_fbade ++;};};return nil ;};func (_bb *EndOfStripe )Init (h *Header ,r _b .StreamReader )error {_bb ._cd =r ;return _bb .parseHeader (h ,r );};func (_egdgd *TextRegion )parseHeader ()error {var _adgf error ;_ee .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069n\u0073\u002e\u002e\u002e");
defer func (){if _adgf !=nil {_ee .Log .Trace ("\u005b\u0054\u0045\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044E\u0052\u005d\u0020\u0066\u0061i\u006c\u0065d\u002e\u0020\u0025\u0076",_adgf );
}else {_ee .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069s\u0068\u0065\u0064\u002e");};}();if _adgf =_egdgd .RegionInfo .parseHeader ();
_adgf !=nil {return _adgf ;};if _adgf =_egdgd .readRegionFlags ();_adgf !=nil {return _adgf ;};if _egdgd .IsHuffmanEncoded {if _adgf =_egdgd .readHuffmanFlags ();_adgf !=nil {return _adgf ;};};if _adgf =_egdgd .readUseRefinement ();_adgf !=nil {return _adgf ;
};if _adgf =_egdgd .readAmountOfSymbolInstances ();_adgf !=nil {return _adgf ;};if _adgf =_egdgd .getSymbols ();_adgf !=nil {return _adgf ;};if _adgf =_egdgd .computeSymbolCodeLength ();_adgf !=nil {return _adgf ;};if _adgf =_egdgd .checkInput ();_adgf !=nil {return _adgf ;
};_ee .Log .Trace ("\u0025\u0073",_egdgd .String ());return nil ;};type SegmentEncoder interface{Encode (_bfgcc _b .BinaryWriter )(_gefbb int ,_aggd error );};func (_aeg *GenericRefinementRegion )overrideAtTemplate0 (_cfd ,_gfc ,_affd ,_adab ,_aaa int )int {if _aeg ._dac [0]{_cfd &=0xfff7;
if _aeg .GrAtY [0]==0&&int (_aeg .GrAtX [0])>=-_aaa {_cfd |=(_adab >>uint (7-(_aaa +int (_aeg .GrAtX [0])))&0x1)<<3;}else {_cfd |=_aeg .getPixel (_aeg .RegionBitmap ,_gfc +int (_aeg .GrAtX [0]),_affd +int (_aeg .GrAtY [0]))<<3;};};if _aeg ._dac [1]{_cfd &=0xefff;
if _aeg .GrAtY [1]==0&&int (_aeg .GrAtX [1])>=-_aaa {_cfd |=(_adab >>uint (7-(_aaa +int (_aeg .GrAtX [1])))&0x1)<<12;}else {_cfd |=_aeg .getPixel (_aeg .ReferenceBitmap ,_gfc +int (_aeg .GrAtX [1]),_affd +int (_aeg .GrAtY [1]));};};return _cfd ;};func (_abgb *Header )readDataStartOffset (_bfaab _b .StreamReader ,_dfff OrganizationType ){if _dfff ==OSequential {_abgb .SegmentDataStartOffset =uint64 (_bfaab .StreamPosition ());
};};func (_eag *PageInformationSegment )readContainsRefinement ()error {_ddgg ,_ddge :=_eag ._beed .ReadBit ();if _ddge !=nil {return _ddge ;};if _ddgg ==1{_eag ._dfgf =true ;};return nil ;};func (_beebe *TextRegion )decodeID ()(int64 ,error ){if _beebe .IsHuffmanEncoded {if _beebe ._dfgb ==nil {_gfbb ,_abab :=_beebe ._gdcdf .ReadBits (byte (_beebe ._bfe ));
return int64 (_gfbb ),_abab ;};return _beebe ._dfgb .Decode (_beebe ._gdcdf );};return _beebe ._eecdf .DecodeIAID (uint64 (_beebe ._bfe ),_beebe ._bbbg );};func (_dbcfc *TextRegion )setContexts (_acge *_fbb .DecoderStats ,_dcgg *_fbb .DecoderStats ,_gffgb *_fbb .DecoderStats ,_ffde *_fbb .DecoderStats ,_eeacb *_fbb .DecoderStats ,_cbafa *_fbb .DecoderStats ,_gdfd *_fbb .DecoderStats ,_fgfa *_fbb .DecoderStats ,_gccf *_fbb .DecoderStats ,_bagf *_fbb .DecoderStats ){_dbcfc ._gaec =_dcgg ;
_dbcfc ._ggbg =_gffgb ;_dbcfc ._bgag =_ffde ;_dbcfc ._ebgb =_eeacb ;_dbcfc ._gaeg =_gdfd ;_dbcfc ._fffd =_fgfa ;_dbcfc ._bbbg =_cbafa ;_dbcfc ._baab =_gccf ;_dbcfc ._cbddg =_bagf ;_dbcfc ._cdee =_acge ;};const (ORandom OrganizationType =iota ;OSequential ;
);func NewGenericRegion (r _b .StreamReader )*GenericRegion {return &GenericRegion {RegionSegment :NewRegionSegment (r ),_fag :r };};func (_dffea *SymbolDictionary )String ()string {_eebg :=&_a .Builder {};_eebg .WriteString ("\n\u005b\u0053\u0059\u004dBO\u004c-\u0044\u0049\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u000a");
_eebg .WriteString (_fb .Sprintf ("\u0009-\u0020S\u0064\u0072\u0054\u0065\u006dp\u006c\u0061t\u0065\u0020\u0025\u0076\u000a",_dffea .SdrTemplate ));_eebg .WriteString (_fb .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0025\u0076\u000a",_dffea .SdTemplate ));
_eebg .WriteString (_fb .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006eg\u0043\u006f\u006e\u0074\u0065\u0078\u0074R\u0065\u0074\u0061\u0069\u006e\u0065\u0064\u0020\u0025\u0076\u000a",_dffea ._fcge ));_eebg .WriteString (_fb .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074\u0065\u0078\u0074\u0055\u0073\u0065\u0064 \u0025\u0076\u000a",_dffea ._abdf ));
_eebg .WriteString (_fb .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_dffea .SdHuffAggInstanceSelection ));
_eebg .WriteString (_fb .Sprintf ("\u0009\u002d\u0020\u0053d\u0048\u0075\u0066\u0066\u0042\u004d\u0053\u0069\u007a\u0065S\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020%\u0076\u000a",_dffea .SdHuffBMSizeSelection ));_eebg .WriteString (_fb .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_dffea .SdHuffDecodeWidthSelection ));
_eebg .WriteString (_fb .Sprintf ("\u0009\u002d\u0020Sd\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064e\u0048e\u0069g\u0068t\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_dffea .SdHuffDecodeHeightSelection ));_eebg .WriteString (_fb .Sprintf ("\u0009\u002d\u0020U\u0073\u0065\u0052\u0065f\u0069\u006e\u0065\u006d\u0065\u006e\u0074A\u0067\u0067\u0072\u0065\u0067\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_dffea .UseRefinementAggregation ));
_eebg .WriteString (_fb .Sprintf ("\u0009\u002d\u0020is\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045\u006e\u0063\u006f\u0064\u0065\u0064\u0020\u0025\u0076\u000a",_dffea .IsHuffmanEncoded ));_eebg .WriteString (_fb .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_dffea .SdATX ));
_eebg .WriteString (_fb .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_dffea .SdATY ));_eebg .WriteString (_fb .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_dffea .SdrATX ));
_eebg .WriteString (_fb .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_dffea .SdrATY ));_eebg .WriteString (_fb .Sprintf ("\u0009\u002d\u0020\u004e\u0075\u006d\u0062\u0065\u0072\u004ff\u0045\u0078\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_dffea .NumberOfExportedSymbols ));
_eebg .WriteString (_fb .Sprintf ("\u0009-\u0020\u004e\u0075\u006db\u0065\u0072\u004f\u0066\u004ee\u0077S\u0079m\u0062\u006f\u006c\u0073\u0020\u0025\u0076\n",_dffea .NumberOfNewSymbols ));_eebg .WriteString (_fb .Sprintf ("\u0009\u002d\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u004ff\u0049\u006d\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_dffea ._bacdf ));
_eebg .WriteString (_fb .Sprintf ("\u0009\u002d \u006e\u0075\u006d\u0062\u0065\u0072\u004f\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0064\u0053\u0079\u006d\u0062\u006f\u006c\u0073 %\u0076\u000a",_dffea ._fdee ));return _eebg .String ();};type PageInformationSegment struct{_beed _b .StreamReader ;
PageBMHeight int ;PageBMWidth int ;ResolutionX int ;ResolutionY int ;_degb bool ;_afec _ae .CombinationOperator ;_abbbf bool ;DefaultPixelValue uint8 ;_dfgf bool ;IsLossless bool ;IsStripe bool ;MaxStripeSize uint16 ;};func (_ceag *HalftoneRegion )GetRegionBitmap ()(*_ae .Bitmap ,error ){if _ceag .HalftoneRegionBitmap !=nil {return _ceag .HalftoneRegionBitmap ,nil ;
};var _cgfb error ;_ceag .HalftoneRegionBitmap =_ae .New (int (_ceag .RegionSegment .BitmapWidth ),int (_ceag .RegionSegment .BitmapHeight ));if _ceag .Patterns ==nil ||len (_ceag .Patterns )==0{_ceag .Patterns ,_cgfb =_ceag .GetPatterns ();if _cgfb !=nil {return nil ,_cgfb ;
};};if _ceag .HDefaultPixel ==1{_ceag .HalftoneRegionBitmap .SetDefaultPixel ();};_cfec :=_g .Ceil (_g .Log (float64 (len (_ceag .Patterns )))/_g .Log (2));_fgcd :=int (_cfec );var _bbcee [][]int ;_bbcee ,_cgfb =_ceag .grayScaleDecoding (_fgcd );if _cgfb !=nil {return nil ,_cgfb ;
};if _cgfb =_ceag .renderPattern (_bbcee );_cgfb !=nil {return nil ,_cgfb ;};return _ceag .HalftoneRegionBitmap ,nil ;};func (_acgg *SymbolDictionary )decodeDifferenceWidth ()(int64 ,error ){if _acgg .IsHuffmanEncoded {switch _acgg .SdHuffDecodeWidthSelection {case 0:_dedg ,_edeg :=_db .GetStandardTable (2);
if _edeg !=nil {return 0,_edeg ;};return _dedg .Decode (_acgg ._gdge );case 1:_ebba ,_ecdg :=_db .GetStandardTable (3);if _ecdg !=nil {return 0,_ecdg ;};return _ebba .Decode (_acgg ._gdge );case 3:if _acgg ._cdgb ==nil {var _ggfe int ;if _acgg .SdHuffDecodeHeightSelection ==3{_ggfe ++;
};_deeb ,_caab :=_acgg .getUserTable (_ggfe );if _caab !=nil {return 0,_caab ;};_acgg ._cdgb =_deeb ;};return _acgg ._cdgb .Decode (_acgg ._gdge );};}else {_bffe ,_ddcce :=_acgg ._bbaf .DecodeInt (_acgg ._ecbc );if _ddcce !=nil {return 0,_ddcce ;};return int64 (_bffe ),nil ;
};return 0,nil ;};func (_abee *TextRegion )GetRegionInfo ()*RegionSegment {return _abee .RegionInfo };func (_fbdd *GenericRegion )decodeTemplate1 (_eae ,_ffae ,_eba int ,_ddae ,_bbcd int )(_fbf error ){const _dab ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0031";
var (_afeb ,_eecg int ;_dbf ,_fbgg int ;_dfc byte ;_adaa ,_gdc int ;);if _eae >=1{_dfc ,_fbf =_fbdd .Bitmap .GetByte (_bbcd );if _fbf !=nil {return _cf .Wrap (_fbf ,_dab ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_dbf =int (_dfc );};if _eae >=2{_dfc ,_fbf =_fbdd .Bitmap .GetByte (_bbcd -_fbdd .Bitmap .RowStride );
if _fbf !=nil {return _cf .Wrap (_fbf ,_dab ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_fbgg =int (_dfc )<<5;};_afeb =((_dbf >>1)&0x1f8)|((_fbgg >>1)&0x1e00);for _cec :=0;_cec < _eba ;_cec =_adaa {var (_gba byte ;_bab int ;);_adaa =_cec +8;if _bba :=_ffae -_cec ;
_bba > 8{_bab =8;}else {_bab =_bba ;};if _eae > 0{_dbf <<=8;if _adaa < _ffae {_dfc ,_fbf =_fbdd .Bitmap .GetByte (_bbcd +1);if _fbf !=nil {return _cf .Wrap (_fbf ,_dab ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_dbf |=int (_dfc );};};if _eae > 1{_fbgg <<=8;
if _adaa < _ffae {_dfc ,_fbf =_fbdd .Bitmap .GetByte (_bbcd -_fbdd .Bitmap .RowStride +1);if _fbf !=nil {return _cf .Wrap (_fbf ,_dab ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_fbgg |=int (_dfc )<<5;};};for _cga :=0;_cga < _bab ;_cga ++{if _fbdd ._aede {_eecg =_fbdd .overrideAtTemplate1 (_afeb ,_cec +_cga ,_eae ,int (_gba ),_cga );
_fbdd ._efc .SetIndex (int32 (_eecg ));}else {_fbdd ._efc .SetIndex (int32 (_afeb ));};_gdc ,_fbf =_fbdd ._eeg .DecodeBit (_fbdd ._efc );if _fbf !=nil {return _cf .Wrap (_fbf ,_dab ,"");};_gba |=byte (_gdc )<<uint (7-_cga );_bdbd :=uint (8-_cga );_afeb =((_afeb &0xefb)<<1)|_gdc |((_dbf >>_bdbd )&0x8)|((_fbgg >>_bdbd )&0x200);
};if _gfgf :=_fbdd .Bitmap .SetByte (_ddae ,_gba );_gfgf !=nil {return _cf .Wrap (_gfgf ,_dab ,"");};_ddae ++;_bbcd ++;};return nil ;};func (_abaa *PageInformationSegment )encodeStripingInformation (_edgca _b .BinaryWriter )(_bbceec int ,_ceg error ){const _gadd ="\u0065n\u0063\u006f\u0064\u0065S\u0074\u0072\u0069\u0070\u0069n\u0067I\u006ef\u006f\u0072\u006d\u0061\u0074\u0069\u006fn";
if !_abaa .IsStripe {if _bbceec ,_ceg =_edgca .Write ([]byte {0x00,0x00});_ceg !=nil {return 0,_cf .Wrap (_ceg ,_gadd ,"n\u006f\u0020\u0073\u0074\u0072\u0069\u0070\u0069\u006e\u0067");};return _bbceec ,nil ;};_facg :=make ([]byte ,2);_e .BigEndian .PutUint16 (_facg ,_abaa .MaxStripeSize |1<<15);
if _bbceec ,_ceg =_edgca .Write (_facg );_ceg !=nil {return 0,_cf .Wrapf (_ceg ,_gadd ,"\u0073\u0074\u0072i\u0070\u0069\u006e\u0067\u003a\u0020\u0025\u0064",_abaa .MaxStripeSize );};return _bbceec ,nil ;};func (_cag *HalftoneRegion )computeGrayScalePlanes (_eaa []*_ae .Bitmap ,_beeb int )([][]int ,error ){_ddec :=make ([][]int ,_cag .HGridHeight );
for _fgfe :=0;_fgfe < len (_ddec );_fgfe ++{_ddec [_fgfe ]=make ([]int ,_cag .HGridWidth );};for _cbgg :=0;_cbgg < int (_cag .HGridHeight );_cbgg ++{for _feb :=0;_feb < int (_cag .HGridWidth );_feb +=8{var _fbce int ;if _aga :=int (_cag .HGridWidth )-_feb ;
_aga > 8{_fbce =8;}else {_fbce =_aga ;};_agff :=_eaa [0].GetByteIndex (_feb ,_cbgg );for _gcc :=0;_gcc < _fbce ;_gcc ++{_efcd :=_gcc +_feb ;_ddec [_cbgg ][_efcd ]=0;for _gdcd :=0;_gdcd < _beeb ;_gdcd ++{_egcb ,_cdac :=_eaa [_gdcd ].GetByte (_agff );if _cdac !=nil {return nil ,_cdac ;
};_bgaf :=_egcb >>uint (7-_efcd &7);_fea :=_bgaf &1;_cbbf :=1<<uint (_gdcd );_fad :=int (_fea )*_cbbf ;_ddec [_cbgg ][_efcd ]+=_fad ;};};};};return _ddec ,nil ;};func (_ffaea *TextRegion )decodeRdx ()(int64 ,error ){const _cgfee ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064x";
if _ffaea .IsHuffmanEncoded {if _ffaea .SbHuffRDX ==3{if _ffaea ._ccga ==nil {var (_fagd int ;_gfgc error ;);if _ffaea .SbHuffFS ==3{_fagd ++;};if _ffaea .SbHuffDS ==3{_fagd ++;};if _ffaea .SbHuffDT ==3{_fagd ++;};if _ffaea .SbHuffRDWidth ==3{_fagd ++;
};if _ffaea .SbHuffRDHeight ==3{_fagd ++;};_ffaea ._ccga ,_gfgc =_ffaea .getUserTable (_fagd );if _gfgc !=nil {return 0,_cf .Wrap (_gfgc ,_cgfee ,"");};};return _ffaea ._ccga .Decode (_ffaea ._gdcdf );};_decbg ,_cbfg :=_db .GetStandardTable (14+int (_ffaea .SbHuffRDX ));
if _cbfg !=nil {return 0,_cf .Wrap (_cbfg ,_cgfee ,"");};return _decbg .Decode (_ffaea ._gdcdf );};_ccgb ,_bbbbc :=_ffaea ._eecdf .DecodeInt (_ffaea ._baab );if _bbbbc !=nil {return 0,_cf .Wrap (_bbbbc ,_cgfee ,"");};return int64 (_ccgb ),nil ;};func (_gbgd *TextRegion )decodeRdw ()(int64 ,error ){const _feded ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064w";
if _gbgd .IsHuffmanEncoded {if _gbgd .SbHuffRDWidth ==3{if _gbgd ._gcgfc ==nil {var (_cgbg int ;_dcdb error ;);if _gbgd .SbHuffFS ==3{_cgbg ++;};if _gbgd .SbHuffDS ==3{_cgbg ++;};if _gbgd .SbHuffDT ==3{_cgbg ++;};_gbgd ._gcgfc ,_dcdb =_gbgd .getUserTable (_cgbg );
if _dcdb !=nil {return 0,_cf .Wrap (_dcdb ,_feded ,"");};};return _gbgd ._gcgfc .Decode (_gbgd ._gdcdf );};_dbcg ,_baba :=_db .GetStandardTable (14+int (_gbgd .SbHuffRDWidth ));if _baba !=nil {return 0,_cf .Wrap (_baba ,_feded ,"");};return _dbcg .Decode (_gbgd ._gdcdf );
};_cfdb ,_ddaa :=_gbgd ._eecdf .DecodeInt (_gbgd ._gaeg );if _ddaa !=nil {return 0,_cf .Wrap (_ddaa ,_feded ,"");};return int64 (_cfdb ),nil ;};func (_bacag *TextRegion )setCodingStatistics ()error {if _bacag ._gaec ==nil {_bacag ._gaec =_fbb .NewStats (512,1);
};if _bacag ._ggbg ==nil {_bacag ._ggbg =_fbb .NewStats (512,1);};if _bacag ._bgag ==nil {_bacag ._bgag =_fbb .NewStats (512,1);};if _bacag ._ebgb ==nil {_bacag ._ebgb =_fbb .NewStats (512,1);};if _bacag ._badf ==nil {_bacag ._badf =_fbb .NewStats (512,1);
};if _bacag ._gaeg ==nil {_bacag ._gaeg =_fbb .NewStats (512,1);};if _bacag ._fffd ==nil {_bacag ._fffd =_fbb .NewStats (512,1);};if _bacag ._bbbg ==nil {_bacag ._bbbg =_fbb .NewStats (1<<uint (_bacag ._bfe ),1);};if _bacag ._baab ==nil {_bacag ._baab =_fbb .NewStats (512,1);
};if _bacag ._cbddg ==nil {_bacag ._cbddg =_fbb .NewStats (512,1);};if _bacag ._eecdf ==nil {var _acef error ;_bacag ._eecdf ,_acef =_fbb .New (_bacag ._gdcdf );if _acef !=nil {return _acef ;};};return nil ;};func (_fgg *PageInformationSegment )readResolution ()error {_adag ,_fec :=_fgg ._beed .ReadBits (32);
if _fec !=nil {return _fec ;};_fgg .ResolutionX =int (_adag &_g .MaxInt32 );_adag ,_fec =_fgg ._beed .ReadBits (32);if _fec !=nil {return _fec ;};_fgg .ResolutionY =int (_adag &_g .MaxInt32 );return nil ;};var _ templater =&template1 {};func (_bacd *Header )String ()string {_cbggc :=&_a .Builder {};
_cbggc .WriteString ("\u000a[\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045A\u0044\u0045\u0052\u005d\u000a");_cbggc .WriteString (_fb .Sprintf ("\t\u002d\u0020\u0053\u0065gm\u0065n\u0074\u004e\u0075\u006d\u0062e\u0072\u003a\u0020\u0025\u0076\u000a",_bacd .SegmentNumber ));
_cbggc .WriteString (_fb .Sprintf ("\u0009\u002d\u0020T\u0079\u0070\u0065\u003a\u0020\u0025\u0076\u000a",_bacd .Type ));_cbggc .WriteString (_fb .Sprintf ("\u0009-\u0020R\u0065\u0074\u0061\u0069\u006eF\u006c\u0061g\u003a\u0020\u0025\u0076\u000a",_bacd .RetainFlag ));
_cbggc .WriteString (_fb .Sprintf ("\u0009\u002d\u0020Pa\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_bacd .PageAssociation ));_cbggc .WriteString (_fb .Sprintf ("\u0009\u002d\u0020\u0050\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074i\u006fn\u0046\u0069\u0065\u006c\u0064\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_bacd .PageAssociationFieldSize ));
_cbggc .WriteString ("\u0009-\u0020R\u0054\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u0053\u003a\u000a");for _ ,_debc :=range _bacd .RTSNumbers {_cbggc .WriteString (_fb .Sprintf ("\u0009\t\u002d\u0020\u0025\u0064\u000a",_debc ));};_cbggc .WriteString (_fb .Sprintf ("\t\u002d \u0048\u0065\u0061\u0064\u0065\u0072\u004c\u0065n\u0067\u0074\u0068\u003a %\u0076\u000a",_bacd .HeaderLength ));
_cbggc .WriteString (_fb .Sprintf ("\u0009-\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061L\u0065n\u0067\u0074\u0068\u003a\u0020\u0025\u0076\n",_bacd .SegmentDataLength ));_cbggc .WriteString (_fb .Sprintf ("\u0009\u002d\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074D\u0061\u0074\u0061\u0053\u0074\u0061\u0072t\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0076\u000a",_bacd .SegmentDataStartOffset ));
return _cbggc .String ();};func (_fefd *template0 )form (_deaf ,_ecd ,_efb ,_cfc ,_dda int16 )int16 {return (_deaf <<10)|(_ecd <<7)|(_efb <<4)|(_cfc <<1)|_dda ;};func (_efac *SymbolDictionary )addSymbol (_fgdg Regioner )error {_eaff ,_egcad :=_fgdg .GetRegionBitmap ();
if _egcad !=nil {return _egcad ;};_efac ._dgae [_efac ._fdee ]=_eaff ;_efac ._efff =append (_efac ._efff ,_eaff );_ee .Log .Trace ("\u005b\u0053YM\u0042\u004f\u004c \u0044\u0049\u0043\u0054ION\u0041RY\u005d\u0020\u0041\u0064\u0064\u0065\u0064 s\u0079\u006d\u0062\u006f\u006c\u003a\u0020%\u0073",_eaff );
return nil ;};func (_fefg *GenericRegion )updateOverrideFlags ()error {const _bcaf ="\u0075\u0070\u0064\u0061te\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _fefg .GBAtX ==nil ||_fefg .GBAtY ==nil {return nil ;};if len (_fefg .GBAtX )!=len (_fefg .GBAtY ){return _cf .Errorf (_bcaf ,"i\u006eco\u0073i\u0073t\u0065\u006e\u0074\u0020\u0041T\u0020\u0070\u0069x\u0065\u006c\u002e\u0020\u0041m\u006f\u0075\u006et\u0020\u006f\u0066\u0020\u0027\u0078\u0027\u0020\u0070\u0069\u0078e\u006c\u0073\u003a %d\u002c\u0020\u0041\u006d\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0027\u0079\u0027\u0020\u0070\u0069\u0078e\u006cs\u003a\u0020\u0025\u0064",len (_fefg .GBAtX ),len (_fefg .GBAtY ));
};_fefg .GBAtOverride =make ([]bool ,len (_fefg .GBAtX ));switch _fefg .GBTemplate {case 0:if !_fefg .UseExtTemplates {if _fefg .GBAtX [0]!=3||_fefg .GBAtY [0]!=-1{_fefg .setOverrideFlag (0);};if _fefg .GBAtX [1]!=-3||_fefg .GBAtY [1]!=-1{_fefg .setOverrideFlag (1);
};if _fefg .GBAtX [2]!=2||_fefg .GBAtY [2]!=-2{_fefg .setOverrideFlag (2);};if _fefg .GBAtX [3]!=-2||_fefg .GBAtY [3]!=-2{_fefg .setOverrideFlag (3);};}else {if _fefg .GBAtX [0]!=-2||_fefg .GBAtY [0]!=0{_fefg .setOverrideFlag (0);};if _fefg .GBAtX [1]!=0||_fefg .GBAtY [1]!=-2{_fefg .setOverrideFlag (1);
};if _fefg .GBAtX [2]!=-2||_fefg .GBAtY [2]!=-1{_fefg .setOverrideFlag (2);};if _fefg .GBAtX [3]!=-1||_fefg .GBAtY [3]!=-2{_fefg .setOverrideFlag (3);};if _fefg .GBAtX [4]!=1||_fefg .GBAtY [4]!=-2{_fefg .setOverrideFlag (4);};if _fefg .GBAtX [5]!=2||_fefg .GBAtY [5]!=-1{_fefg .setOverrideFlag (5);
};if _fefg .GBAtX [6]!=-3||_fefg .GBAtY [6]!=0{_fefg .setOverrideFlag (6);};if _fefg .GBAtX [7]!=-4||_fefg .GBAtY [7]!=0{_fefg .setOverrideFlag (7);};if _fefg .GBAtX [8]!=2||_fefg .GBAtY [8]!=-2{_fefg .setOverrideFlag (8);};if _fefg .GBAtX [9]!=3||_fefg .GBAtY [9]!=-1{_fefg .setOverrideFlag (9);
};if _fefg .GBAtX [10]!=-2||_fefg .GBAtY [10]!=-2{_fefg .setOverrideFlag (10);};if _fefg .GBAtX [11]!=-3||_fefg .GBAtY [11]!=-1{_fefg .setOverrideFlag (11);};};case 1:if _fefg .GBAtX [0]!=3||_fefg .GBAtY [0]!=-1{_fefg .setOverrideFlag (0);};case 2:if _fefg .GBAtX [0]!=2||_fefg .GBAtY [0]!=-1{_fefg .setOverrideFlag (0);
};case 3:if _fefg .GBAtX [0]!=2||_fefg .GBAtY [0]!=-1{_fefg .setOverrideFlag (0);};};return nil ;};func (_gbc *GenericRefinementRegion )readAtPixels ()error {_gbc .GrAtX =make ([]int8 ,2);_gbc .GrAtY =make ([]int8 ,2);_afag ,_fdde :=_gbc ._gb .ReadByte ();
if _fdde !=nil {return _fdde ;};_gbc .GrAtX [0]=int8 (_afag );_afag ,_fdde =_gbc ._gb .ReadByte ();if _fdde !=nil {return _fdde ;};_gbc .GrAtY [0]=int8 (_afag );_afag ,_fdde =_gbc ._gb .ReadByte ();if _fdde !=nil {return _fdde ;};_gbc .GrAtX [1]=int8 (_afag );
_afag ,_fdde =_gbc ._gb .ReadByte ();if _fdde !=nil {return _fdde ;};_gbc .GrAtY [1]=int8 (_afag );return nil ;};func (_eaae *TextRegion )encodeFlags (_edfe _b .BinaryWriter )(_dccf int ,_eccf error ){const _dafa ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _eccf =_edfe .WriteBit (int (_eaae .SbrTemplate ));_eccf !=nil {return _dccf ,_cf .Wrap (_eccf ,_dafa ,"s\u0062\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};if _ ,_eccf =_edfe .WriteBits (uint64 (_eaae .SbDsOffset ),5);_eccf !=nil {return _dccf ,_cf .Wrap (_eccf ,_dafa ,"\u0073\u0062\u0044\u0073\u004f\u0066\u0066\u0073\u0065\u0074");
};if _eccf =_edfe .WriteBit (int (_eaae .DefaultPixel ));_eccf !=nil {return _dccf ,_cf .Wrap (_eccf ,_dafa ,"\u0044\u0065\u0066a\u0075\u006c\u0074\u0050\u0069\u0078\u0065\u006c");};if _ ,_eccf =_edfe .WriteBits (uint64 (_eaae .CombinationOperator ),2);
_eccf !=nil {return _dccf ,_cf .Wrap (_eccf ,_dafa ,"\u0043\u006f\u006d\u0062in\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072");};if _eccf =_edfe .WriteBit (int (_eaae .IsTransposed ));_eccf !=nil {return _dccf ,_cf .Wrap (_eccf ,_dafa ,"\u0069\u0073\u0020\u0074\u0072\u0061\u006e\u0073\u0070\u006f\u0073\u0065\u0064");
};if _ ,_eccf =_edfe .WriteBits (uint64 (_eaae .ReferenceCorner ),2);_eccf !=nil {return _dccf ,_cf .Wrap (_eccf ,_dafa ,"\u0072\u0065f\u0065\u0072\u0065n\u0063\u0065\u0020\u0063\u006f\u0072\u006e\u0065\u0072");};if _ ,_eccf =_edfe .WriteBits (uint64 (_eaae .LogSBStrips ),2);
_eccf !=nil {return _dccf ,_cf .Wrap (_eccf ,_dafa ,"L\u006f\u0067\u0053\u0042\u0053\u0074\u0072\u0069\u0070\u0073");};var _fbfg int ;if _eaae .UseRefinement {_fbfg =1;};if _eccf =_edfe .WriteBit (_fbfg );_eccf !=nil {return _dccf ,_cf .Wrap (_eccf ,_dafa ,"\u0075\u0073\u0065\u0020\u0072\u0065\u0066\u0069\u006ee\u006d\u0065\u006e\u0074");
};_fbfg =0;if _eaae .IsHuffmanEncoded {_fbfg =1;};if _eccf =_edfe .WriteBit (_fbfg );_eccf !=nil {return _dccf ,_cf .Wrap (_eccf ,_dafa ,"u\u0073\u0065\u0020\u0068\u0075\u0066\u0066\u006d\u0061\u006e");};_dccf =2;return _dccf ,nil ;};