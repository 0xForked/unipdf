//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package segments ;import (_gf "encoding/binary";_ef "errors";_f "fmt";_de "github.com/unidoc/unipdf/v3/common";_d "github.com/unidoc/unipdf/v3/internal/bitwise";_fg "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_ed "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";
_c "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/arithmetic";_bc "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/huffman";_ff "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/mmr";_fgb "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/arithmetic";
_df "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_edd "github.com/unidoc/unipdf/v3/internal/jbig2/internal";_gg "golang.org/x/xerrors";_a "image";_ab "io";_e "math";_gd "strings";_b "time";);func (_fabd *SymbolDictionary )encodeATFlags (_adfb _d .BinaryWriter )(_gfca int ,_bfag error ){const _bcffb ="\u0065\u006e\u0063\u006f\u0064\u0065\u0041\u0054\u0046\u006c\u0061\u0067\u0073";
if _fabd .IsHuffmanEncoded ||_fabd .SdTemplate !=0{return 0,nil ;};_cbbgg :=4;if _fabd .SdTemplate !=0{_cbbgg =1;};for _edaa :=0;_edaa < _cbbgg ;_edaa ++{if _bfag =_adfb .WriteByte (byte (_fabd .SdATX [_edaa ]));_bfag !=nil {return _gfca ,_df .Wrapf (_bfag ,_bcffb ,"\u0053d\u0041\u0054\u0058\u005b\u0025\u0064]",_edaa );
};_gfca ++;if _bfag =_adfb .WriteByte (byte (_fabd .SdATY [_edaa ]));_bfag !=nil {return _gfca ,_df .Wrapf (_bfag ,_bcffb ,"\u0053d\u0041\u0054\u0059\u005b\u0025\u0064]",_edaa );};_gfca ++;};return _gfca ,nil ;};const (ORandom OrganizationType =iota ;OSequential ;
);func (_fff *GenericRefinementRegion )decodeOptimized (_gdc ,_fe ,_ege ,_gee ,_af ,_agd ,_abd int )error {var (_abc error ;_bbf int ;_cag int ;);_dd :=_gdc -int (_fff .ReferenceDY );if _feb :=int (-_fff .ReferenceDX );_feb > 0{_bbf =_feb ;};_ac :=_fff .ReferenceBitmap .GetByteIndex (_bbf ,_dd );
if _fff .ReferenceDX > 0{_cag =int (_fff .ReferenceDX );};_ecd :=_fff .RegionBitmap .GetByteIndex (_cag ,_gdc );switch _fff .TemplateID {case 0:_abc =_fff .decodeTemplate (_gdc ,_fe ,_ege ,_gee ,_af ,_agd ,_abd ,_ecd ,_dd ,_ac ,_fff ._gda );case 1:_abc =_fff .decodeTemplate (_gdc ,_fe ,_ege ,_gee ,_af ,_agd ,_abd ,_ecd ,_dd ,_ac ,_fff ._efd );
};return _abc ;};func (_dbdf *TableSegment )HtHigh ()int32 {return _dbdf ._ebfe };func (_ba *GenericRefinementRegion )decodeSLTP ()(int ,error ){_ba .Template .setIndex (_ba ._bf );return _ba ._gfa .DecodeBit (_ba ._bf );};func (_dafb *PatternDictionary )GetDictionary ()([]*_ed .Bitmap ,error ){if _dafb .Patterns !=nil {return _dafb .Patterns ,nil ;
};if !_dafb .IsMMREncoded {_dafb .setGbAtPixels ();};_cac :=NewGenericRegion (_dafb ._cgff );_cac .setParametersMMR (_dafb .IsMMREncoded ,_dafb .DataOffset ,_dafb .DataLength ,uint32 (_dafb .HdpHeight ),(_dafb .GrayMax +1)*uint32 (_dafb .HdpWidth ),_dafb .HDTemplate ,false ,false ,_dafb .GBAtX ,_dafb .GBAtY );
_cbbf ,_bgfa :=_cac .GetRegionBitmap ();if _bgfa !=nil {return nil ,_bgfa ;};if _bgfa =_dafb .extractPatterns (_cbbf );_bgfa !=nil {return nil ,_bgfa ;};return _dafb .Patterns ,nil ;};func (_gbeb *SymbolDictionary )GetDictionary ()([]*_ed .Bitmap ,error ){_de .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c-\u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){_de .Log .Trace ("\u005b\u0053\u0059M\u0042\u004f\u004c\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
_de .Log .Trace ("\u005b\u0053Y\u004d\u0042\u004f\u004c\u002dD\u0049\u0043\u0054\u0049\u004fN\u0041\u0052\u0059\u005d\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020\u000a\u0045\u0078\u003a\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u000a\u006e\u0065\u0077\u003a\u0027\u0025\u0073\u0027",_gbeb ._ebba ,_gbeb ._bbfd );
}();if _gbeb ._ebba ==nil {var _dcg error ;if _gbeb .UseRefinementAggregation {_gbeb ._feeg =_gbeb .getSbSymCodeLen ();};if !_gbeb .IsHuffmanEncoded {if _dcg =_gbeb .setCodingStatistics ();_dcg !=nil {return nil ,_dcg ;};};_gbeb ._bbfd =make ([]*_ed .Bitmap ,_gbeb .NumberOfNewSymbols );
var _fbaag []int ;if _gbeb .IsHuffmanEncoded &&!_gbeb .UseRefinementAggregation {_fbaag =make ([]int ,_gbeb .NumberOfNewSymbols );};if _dcg =_gbeb .setSymbolsArray ();_dcg !=nil {return nil ,_dcg ;};var _acdg ,_accb int64 ;_gbeb ._bgag =0;for _gbeb ._bgag < _gbeb .NumberOfNewSymbols {_accb ,_dcg =_gbeb .decodeHeightClassDeltaHeight ();
if _dcg !=nil {return nil ,_dcg ;};_acdg +=_accb ;var _bedg ,_dcdd uint32 ;_efbeg :=int64 (_gbeb ._bgag );for {var _bcffc int64 ;_bcffc ,_dcg =_gbeb .decodeDifferenceWidth ();if _gg .Is (_dcg ,_edd .ErrOOB ){break ;};if _dcg !=nil {return nil ,_dcg ;};
if _gbeb ._bgag >=_gbeb .NumberOfNewSymbols {break ;};_bedg +=uint32 (_bcffc );_dcdd +=_bedg ;if !_gbeb .IsHuffmanEncoded ||_gbeb .UseRefinementAggregation {if !_gbeb .UseRefinementAggregation {_dcg =_gbeb .decodeDirectlyThroughGenericRegion (_bedg ,uint32 (_acdg ));
if _dcg !=nil {return nil ,_dcg ;};}else {_dcg =_gbeb .decodeAggregate (_bedg ,uint32 (_acdg ));if _dcg !=nil {return nil ,_dcg ;};};}else if _gbeb .IsHuffmanEncoded &&!_gbeb .UseRefinementAggregation {_fbaag [_gbeb ._bgag ]=int (_bedg );};_gbeb ._bgag ++;
};if _gbeb .IsHuffmanEncoded &&!_gbeb .UseRefinementAggregation {var _fgag int64 ;if _gbeb .SdHuffBMSizeSelection ==0{var _ggfgb _bc .Tabler ;_ggfgb ,_dcg =_bc .GetStandardTable (1);if _dcg !=nil {return nil ,_dcg ;};_fgag ,_dcg =_ggfgb .Decode (_gbeb ._dgbb );
if _dcg !=nil {return nil ,_dcg ;};}else {_fgag ,_dcg =_gbeb .huffDecodeBmSize ();if _dcg !=nil {return nil ,_dcg ;};};_gbeb ._dgbb .Align ();var _ccgf *_ed .Bitmap ;_ccgf ,_dcg =_gbeb .decodeHeightClassCollectiveBitmap (_fgag ,uint32 (_acdg ),_dcdd );
if _dcg !=nil {return nil ,_dcg ;};_dcg =_gbeb .decodeHeightClassBitmap (_ccgf ,_efbeg ,int (_acdg ),_fbaag );if _dcg !=nil {return nil ,_dcg ;};};};_ddab ,_dcg :=_gbeb .getToExportFlags ();if _dcg !=nil {return nil ,_dcg ;};_gbeb .setExportedSymbols (_ddab );
};return _gbeb ._ebba ,nil ;};func (_ce *GenericRefinementRegion )decodeTemplate (_dbf ,_fcb ,_acb ,_bge ,_cgag ,_decc ,_dcb ,_fab ,_daa ,_dgb int ,_fgd templater )(_gea error ){var (_ecf ,_ffa ,_fac ,_ffb ,_eeg int16 ;_deb ,_aag ,_fad ,_ccc int ;_fcca byte ;
);if _daa >=1&&(_daa -1)< _ce .ReferenceBitmap .Height {_fcca ,_gea =_ce .ReferenceBitmap .GetByte (_dgb -_bge );if _gea !=nil {return ;};_deb =int (_fcca );};if _daa >=0&&(_daa )< _ce .ReferenceBitmap .Height {_fcca ,_gea =_ce .ReferenceBitmap .GetByte (_dgb );
if _gea !=nil {return ;};_aag =int (_fcca );};if _daa >=-1&&(_daa +1)< _ce .ReferenceBitmap .Height {_fcca ,_gea =_ce .ReferenceBitmap .GetByte (_dgb +_bge );if _gea !=nil {return ;};_fad =int (_fcca );};_dgb ++;if _dbf >=1{_fcca ,_gea =_ce .RegionBitmap .GetByte (_fab -_acb );
if _gea !=nil {return ;};_ccc =int (_fcca );};_fab ++;_bcg :=_ce .ReferenceDX %8;_gfcf :=6+_bcg ;_defg :=_dgb %_bge ;if _gfcf >=0{if _gfcf < 8{_ecf =int16 (_deb >>uint (_gfcf ))&0x07;};if _gfcf < 8{_ffa =int16 (_aag >>uint (_gfcf ))&0x07;};if _gfcf < 8{_fac =int16 (_fad >>uint (_gfcf ))&0x07;
};if _gfcf ==6&&_defg > 1{if _daa >=1&&(_daa -1)< _ce .ReferenceBitmap .Height {_fcca ,_gea =_ce .ReferenceBitmap .GetByte (_dgb -_bge -2);if _gea !=nil {return _gea ;};_ecf |=int16 (_fcca <<2)&0x04;};if _daa >=0&&_daa < _ce .ReferenceBitmap .Height {_fcca ,_gea =_ce .ReferenceBitmap .GetByte (_dgb -2);
if _gea !=nil {return _gea ;};_ffa |=int16 (_fcca <<2)&0x04;};if _daa >=-1&&_daa +1< _ce .ReferenceBitmap .Height {_fcca ,_gea =_ce .ReferenceBitmap .GetByte (_dgb +_bge -2);if _gea !=nil {return _gea ;};_fac |=int16 (_fcca <<2)&0x04;};};if _gfcf ==0{_deb =0;
_aag =0;_fad =0;if _defg < _bge -1{if _daa >=1&&_daa -1< _ce .ReferenceBitmap .Height {_fcca ,_gea =_ce .ReferenceBitmap .GetByte (_dgb -_bge );if _gea !=nil {return _gea ;};_deb =int (_fcca );};if _daa >=0&&_daa < _ce .ReferenceBitmap .Height {_fcca ,_gea =_ce .ReferenceBitmap .GetByte (_dgb );
if _gea !=nil {return _gea ;};_aag =int (_fcca );};if _daa >=-1&&_daa +1< _ce .ReferenceBitmap .Height {_fcca ,_gea =_ce .ReferenceBitmap .GetByte (_dgb +_bge );if _gea !=nil {return _gea ;};_fad =int (_fcca );};};_dgb ++;};}else {_ecf =int16 (_deb <<1)&0x07;
_ffa =int16 (_aag <<1)&0x07;_fac =int16 (_fad <<1)&0x07;_deb =0;_aag =0;_fad =0;if _defg < _bge -1{if _daa >=1&&_daa -1< _ce .ReferenceBitmap .Height {_fcca ,_gea =_ce .ReferenceBitmap .GetByte (_dgb -_bge );if _gea !=nil {return _gea ;};_deb =int (_fcca );
};if _daa >=0&&_daa < _ce .ReferenceBitmap .Height {_fcca ,_gea =_ce .ReferenceBitmap .GetByte (_dgb );if _gea !=nil {return _gea ;};_aag =int (_fcca );};if _daa >=-1&&_daa +1< _ce .ReferenceBitmap .Height {_fcca ,_gea =_ce .ReferenceBitmap .GetByte (_dgb +_bge );
if _gea !=nil {return _gea ;};_fad =int (_fcca );};_dgb ++;};_ecf |=int16 ((_deb >>7)&0x07);_ffa |=int16 ((_aag >>7)&0x07);_fac |=int16 ((_fad >>7)&0x07);};_ffb =int16 (_ccc >>6);_eeg =0;_agb :=(2-_bcg )%8;_deb <<=uint (_agb );_aag <<=uint (_agb );_fad <<=uint (_agb );
_ccc <<=2;var _bfc int ;for _cf :=0;_cf < _fcb ;_cf ++{_ggb :=_cf &0x07;_ga :=_fgd .form (_ecf ,_ffa ,_fac ,_ffb ,_eeg );if _ce ._gb {_fcca ,_gea =_ce .RegionBitmap .GetByte (_ce .RegionBitmap .GetByteIndex (_cf ,_dbf ));if _gea !=nil {return _gea ;};_ce ._bf .SetIndex (int32 (_ce .overrideAtTemplate0 (int (_ga ),_cf ,_dbf ,int (_fcca ),_ggb )));
}else {_ce ._bf .SetIndex (int32 (_ga ));};_bfc ,_gea =_ce ._gfa .DecodeBit (_ce ._bf );if _gea !=nil {return _gea ;};if _gea =_ce .RegionBitmap .SetPixel (_cf ,_dbf ,byte (_bfc ));_gea !=nil {return _gea ;};_ecf =((_ecf <<1)|0x01&int16 (_deb >>7))&0x07;
_ffa =((_ffa <<1)|0x01&int16 (_aag >>7))&0x07;_fac =((_fac <<1)|0x01&int16 (_fad >>7))&0x07;_ffb =((_ffb <<1)|0x01&int16 (_ccc >>7))&0x07;_eeg =int16 (_bfc );if (_cf -int (_ce .ReferenceDX ))%8==5{_deb =0;_aag =0;_fad =0;if ((_cf -int (_ce .ReferenceDX ))/8)+1< _ce .ReferenceBitmap .RowStride {if _daa >=1&&(_daa -1)< _ce .ReferenceBitmap .Height {_fcca ,_gea =_ce .ReferenceBitmap .GetByte (_dgb -_bge );
if _gea !=nil {return _gea ;};_deb =int (_fcca );};if _daa >=0&&_daa < _ce .ReferenceBitmap .Height {_fcca ,_gea =_ce .ReferenceBitmap .GetByte (_dgb );if _gea !=nil {return _gea ;};_aag =int (_fcca );};if _daa >=-1&&(_daa +1)< _ce .ReferenceBitmap .Height {_fcca ,_gea =_ce .ReferenceBitmap .GetByte (_dgb +_bge );
if _gea !=nil {return _gea ;};_fad =int (_fcca );};};_dgb ++;}else {_deb <<=1;_aag <<=1;_fad <<=1;};if _ggb ==5&&_dbf >=1{if ((_cf >>3)+1)>=_ce .RegionBitmap .RowStride {_ccc =0;}else {_fcca ,_gea =_ce .RegionBitmap .GetByte (_fab -_acb );if _gea !=nil {return _gea ;
};_ccc =int (_fcca );};_fab ++;}else {_ccc <<=1;};};return nil ;};func (_ae *GenericRefinementRegion )decodeTypicalPredictedLine (_bdb ,_efe ,_gef ,_cb ,_def ,_bgg int )error {_gba :=_bdb -int (_ae .ReferenceDY );_cg :=_ae .ReferenceBitmap .GetByteIndex (0,_gba );
_fffe :=_ae .RegionBitmap .GetByteIndex (0,_bdb );var _febf error ;switch _ae .TemplateID {case 0:_febf =_ae .decodeTypicalPredictedLineTemplate0 (_bdb ,_efe ,_gef ,_cb ,_def ,_bgg ,_fffe ,_gba ,_cg );case 1:_febf =_ae .decodeTypicalPredictedLineTemplate1 (_bdb ,_efe ,_gef ,_cb ,_def ,_bgg ,_fffe ,_gba ,_cg );
};return _febf ;};func (_fafg *PageInformationSegment )checkInput ()error {if _fafg .PageBMHeight ==_e .MaxInt32 {if !_fafg .IsStripe {_de .Log .Debug ("P\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0053\u0065\u0067me\u006e\u0074\u002e\u0049s\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0073\u0068ou\u006c\u0064 \u0062\u0065\u0020\u0074\u0072\u0075\u0065\u002e");
};};return nil ;};func (_becf *HalftoneRegion )renderPattern (_efb [][]int )(_ecfc error ){var _deccb ,_babd int ;for _efeb :=0;_efeb < int (_becf .HGridHeight );_efeb ++{for _bbbd :=0;_bbbd < int (_becf .HGridWidth );_bbbd ++{_deccb =_becf .computeX (_efeb ,_bbbd );
_babd =_becf .computeY (_efeb ,_bbbd );_daffg :=_becf .Patterns [_efb [_efeb ][_bbbd ]];if _ecfc =_ed .Blit (_daffg ,_becf .HalftoneRegionBitmap ,_deccb +int (_becf .HGridX ),_babd +int (_becf .HGridY ),_becf .CombinationOperator );_ecfc !=nil {return _ecfc ;
};};};return nil ;};func (_agbg *GenericRegion )decodeLine (_deg ,_dcd ,_aec int )error {const _eff ="\u0064\u0065\u0063\u006f\u0064\u0065\u004c\u0069\u006e\u0065";_bec :=_agbg .Bitmap .GetByteIndex (0,_deg );_gbg :=_bec -_agbg .Bitmap .RowStride ;switch _agbg .GBTemplate {case 0:if !_agbg .UseExtTemplates {return _agbg .decodeTemplate0a (_deg ,_dcd ,_aec ,_bec ,_gbg );
};return _agbg .decodeTemplate0b (_deg ,_dcd ,_aec ,_bec ,_gbg );case 1:return _agbg .decodeTemplate1 (_deg ,_dcd ,_aec ,_bec ,_gbg );case 2:return _agbg .decodeTemplate2 (_deg ,_dcd ,_aec ,_bec ,_gbg );case 3:return _agbg .decodeTemplate3 (_deg ,_dcd ,_aec ,_bec ,_gbg );
};return _df .Errorf (_eff ,"\u0069\u006e\u0076a\u006c\u0069\u0064\u0020G\u0042\u0054\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u003a\u0020\u0025\u0064",_agbg .GBTemplate );};func (_cfe *Header )parse (_dgcg Documenter ,_dfee *_d .Reader ,_eegb int64 ,_gbae OrganizationType )(_efgb error ){const _ega ="\u0070\u0061\u0072s\u0065";
_de .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u005b\u0050A\u0052\u0053\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _efgb !=nil {_de .Log .Trace ("\u005b\u0053\u0045GM\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045R\u005d[\u0050A\u0052S\u0045\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_efgb );
}else {_de .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052]\u005bP\u0041\u0052\u0053\u0045\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");};}();_ ,_efgb =_dfee .Seek (_eegb ,_ab .SeekStart );
if _efgb !=nil {return _df .Wrap (_efgb ,_ega ,"\u0073\u0065\u0065\u006b\u0020\u0073\u0074\u0061\u0072\u0074");};if _efgb =_cfe .readSegmentNumber (_dfee );_efgb !=nil {return _df .Wrap (_efgb ,_ega ,"");};if _efgb =_cfe .readHeaderFlags ();_efgb !=nil {return _df .Wrap (_efgb ,_ega ,"");
};var _gdca uint64 ;_gdca ,_efgb =_cfe .readNumberOfReferredToSegments (_dfee );if _efgb !=nil {return _df .Wrap (_efgb ,_ega ,"");};_cfe .RTSNumbers ,_efgb =_cfe .readReferredToSegmentNumbers (_dfee ,int (_gdca ));if _efgb !=nil {return _df .Wrap (_efgb ,_ega ,"");
};_efgb =_cfe .readSegmentPageAssociation (_dgcg ,_dfee ,_gdca ,_cfe .RTSNumbers ...);if _efgb !=nil {return _df .Wrap (_efgb ,_ega ,"");};if _cfe .Type !=TEndOfFile {if _efgb =_cfe .readSegmentDataLength (_dfee );_efgb !=nil {return _df .Wrap (_efgb ,_ega ,"");
};};_cfe .readDataStartOffset (_dfee ,_gbae );_cfe .readHeaderLength (_dfee ,_eegb );_de .Log .Trace ("\u0025\u0073",_cfe );return nil ;};func (_eceb *TextRegion )GetRegionBitmap ()(*_ed .Bitmap ,error ){if _eceb .RegionBitmap !=nil {return _eceb .RegionBitmap ,nil ;
};if !_eceb .IsHuffmanEncoded {if _cfaab :=_eceb .setCodingStatistics ();_cfaab !=nil {return nil ,_cfaab ;};};if _edab :=_eceb .createRegionBitmap ();_edab !=nil {return nil ,_edab ;};if _fdgb :=_eceb .decodeSymbolInstances ();_fdgb !=nil {return nil ,_fdgb ;
};return _eceb .RegionBitmap ,nil ;};type GenericRegion struct{_adf *_d .Reader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;UseExtTemplates bool ;IsTPGDon bool ;GBTemplate byte ;IsMMREncoded bool ;
UseMMR bool ;GBAtX []int8 ;GBAtY []int8 ;GBAtOverride []bool ;_fb bool ;Bitmap *_ed .Bitmap ;_deba *_c .Decoder ;_fgaa *_c .DecoderStats ;_aeb *_ff .Decoder ;};func (_cdf *TextRegion )encodeSymbols (_agab _d .BinaryWriter )(_bfebb int ,_ggfd error ){const _gacf ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
_gdfb :=make ([]byte ,4);_gf .BigEndian .PutUint32 (_gdfb ,_cdf .NumberOfSymbols );if _bfebb ,_ggfd =_agab .Write (_gdfb );_ggfd !=nil {return _bfebb ,_df .Wrap (_ggfd ,_gacf ,"\u004e\u0075\u006dbe\u0072\u004f\u0066\u0053\u0079\u006d\u0062\u006f\u006c\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073");
};_aggd ,_ggfd :=_ed .NewClassedPoints (_cdf ._fdcf ,_cdf ._edcd );if _ggfd !=nil {return 0,_df .Wrap (_ggfd ,_gacf ,"");};var _fdag ,_begdf int ;_ecfed :=_fgb .New ();_ecfed .Init ();if _ggfd =_ecfed .EncodeInteger (_fgb .IADT ,0);_ggfd !=nil {return _bfebb ,_df .Wrap (_ggfd ,_gacf ,"\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0020\u0044\u0054");
};_ebgef ,_ggfd :=_aggd .GroupByY ();if _ggfd !=nil {return 0,_df .Wrap (_ggfd ,_gacf ,"");};for _ ,_gfbg :=range _ebgef {_eebc :=int (_gfbg .YAtIndex (0));_ecac :=_eebc -_fdag ;if _ggfd =_ecfed .EncodeInteger (_fgb .IADT ,_ecac );_ggfd !=nil {return _bfebb ,_df .Wrap (_ggfd ,_gacf ,"");
};var _bdgf int ;for _cbcdf ,_cbab :=range _gfbg .IntSlice {switch _cbcdf {case 0:_ebde :=int (_gfbg .XAtIndex (_cbcdf ))-_begdf ;if _ggfd =_ecfed .EncodeInteger (_fgb .IAFS ,_ebde );_ggfd !=nil {return _bfebb ,_df .Wrap (_ggfd ,_gacf ,"");};_begdf +=_ebde ;
_bdgf =_begdf ;default:_ecfa :=int (_gfbg .XAtIndex (_cbcdf ))-_bdgf ;if _ggfd =_ecfed .EncodeInteger (_fgb .IADS ,_ecfa );_ggfd !=nil {return _bfebb ,_df .Wrap (_ggfd ,_gacf ,"");};_bdgf +=_ecfa ;};_fbad ,_fccd :=_cdf ._cgae .Get (_cbab );if _fccd !=nil {return _bfebb ,_df .Wrap (_fccd ,_gacf ,"");
};_efcb ,_caeb :=_cdf ._cccf [_fbad ];if !_caeb {_efcb ,_caeb =_cdf ._fadec [_fbad ];if !_caeb {return _bfebb ,_df .Errorf (_gacf ,"\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027\u0025d\u0027\u0020\u0069s\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064 \u0069\u006e\u0020\u0067\u006cob\u0061\u006c\u0020\u0061\u006e\u0064\u0020\u006c\u006f\u0063\u0061\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020\u006d\u0061\u0070",_fbad );
};};if _fccd =_ecfed .EncodeIAID (_cdf ._deeae ,_efcb );_fccd !=nil {return _bfebb ,_df .Wrap (_fccd ,_gacf ,"");};};if _ggfd =_ecfed .EncodeOOB (_fgb .IADS );_ggfd !=nil {return _bfebb ,_df .Wrap (_ggfd ,_gacf ,"");};};_ecfed .Final ();_efdf ,_ggfd :=_ecfed .WriteTo (_agab );
if _ggfd !=nil {return _bfebb ,_df .Wrap (_ggfd ,_gacf ,"");};_bfebb +=int (_efdf );return _bfebb ,nil ;};func (_gebf *TextRegion )decodeDT ()(_gfag int64 ,_becfb error ){if _gebf .IsHuffmanEncoded {if _gebf .SbHuffDT ==3{_gfag ,_becfb =_gebf ._beaaa .Decode (_gebf ._fcdef );
if _becfb !=nil {return 0,_becfb ;};}else {var _bbaf _bc .Tabler ;_bbaf ,_becfb =_bc .GetStandardTable (11+int (_gebf .SbHuffDT ));if _becfb !=nil {return 0,_becfb ;};_gfag ,_becfb =_bbaf .Decode (_gebf ._fcdef );if _becfb !=nil {return 0,_becfb ;};};}else {var _cagd int32 ;
_cagd ,_becfb =_gebf ._geg .DecodeInt (_gebf ._fbdc );if _becfb !=nil {return ;};_gfag =int64 (_cagd );};_gfag *=int64 (_gebf .SbStrips );return _gfag ,nil ;};func NewGenericRegion (r *_d .Reader )*GenericRegion {return &GenericRegion {RegionSegment :NewRegionSegment (r ),_adf :r };
};func (_ebge *Header )writeSegmentPageAssociation (_accd _d .BinaryWriter )(_fegd int ,_ebe error ){const _cfad ="w\u0072\u0069\u0074\u0065\u0053\u0065g\u006d\u0065\u006e\u0074\u0050\u0061\u0067\u0065\u0041s\u0073\u006f\u0063i\u0061t\u0069\u006f\u006e";
if _ebge .pageSize ()!=4{if _ebe =_accd .WriteByte (byte (_ebge .PageAssociation ));_ebe !=nil {return 0,_df .Wrap (_ebe ,_cfad ,"\u0070\u0061\u0067\u0065\u0053\u0069\u007a\u0065\u0020\u0021\u003d\u0020\u0034");};return 1,nil ;};_dba :=make ([]byte ,4);
_gf .BigEndian .PutUint32 (_dba ,uint32 (_ebge .PageAssociation ));if _fegd ,_ebe =_accd .Write (_dba );_ebe !=nil {return 0,_df .Wrap (_ebe ,_cfad ,"\u0034 \u0062y\u0074\u0065\u0020\u0070\u0061g\u0065\u0020n\u0075\u006d\u0062\u0065\u0072");};return _fegd ,nil ;
};func (_cad *GenericRefinementRegion )parseHeader ()(_agdg error ){_de .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0048e\u0061\u0064e\u0072\u002e\u002e\u002e");
_fcf :=_b .Now ();defer func (){if _agdg ==nil {_de .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045G\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020h\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0069\u006e\u0069\u0073\u0068id\u0020\u0069\u006e\u003a\u0020\u0025\u0064\u0020\u006e\u0073",_b .Since (_fcf ).Nanoseconds ());
}else {_de .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0068\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0073",_agdg );
};}();if _agdg =_cad .RegionInfo .parseHeader ();_agdg !=nil {return _agdg ;};_ ,_agdg =_cad ._fga .ReadBits (6);if _agdg !=nil {return _agdg ;};_cad .IsTPGROn ,_agdg =_cad ._fga .ReadBool ();if _agdg !=nil {return _agdg ;};var _cce int ;_cce ,_agdg =_cad ._fga .ReadBit ();
if _agdg !=nil {return _agdg ;};_cad .TemplateID =int8 (_cce );switch _cad .TemplateID {case 0:_cad .Template =_cad ._gda ;if _agdg =_cad .readAtPixels ();_agdg !=nil {return ;};case 1:_cad .Template =_cad ._efd ;};return nil ;};func (_ddb *GenericRefinementRegion )readAtPixels ()error {_ddb .GrAtX =make ([]int8 ,2);
_ddb .GrAtY =make ([]int8 ,2);_cee ,_gge :=_ddb ._fga .ReadByte ();if _gge !=nil {return _gge ;};_ddb .GrAtX [0]=int8 (_cee );_cee ,_gge =_ddb ._fga .ReadByte ();if _gge !=nil {return _gge ;};_ddb .GrAtY [0]=int8 (_cee );_cee ,_gge =_ddb ._fga .ReadByte ();
if _gge !=nil {return _gge ;};_ddb .GrAtX [1]=int8 (_cee );_cee ,_gge =_ddb ._fga .ReadByte ();if _gge !=nil {return _gge ;};_ddb .GrAtY [1]=int8 (_cee );return nil ;};func (_cgfg *TextRegion )readUseRefinement ()error {if !_cgfg .UseRefinement ||_cgfg .SbrTemplate !=0{return nil ;
};var (_dgee byte ;_fadcb error ;);_cgfg .SbrATX =make ([]int8 ,2);_cgfg .SbrATY =make ([]int8 ,2);_dgee ,_fadcb =_cgfg ._fcdef .ReadByte ();if _fadcb !=nil {return _fadcb ;};_cgfg .SbrATX [0]=int8 (_dgee );_dgee ,_fadcb =_cgfg ._fcdef .ReadByte ();if _fadcb !=nil {return _fadcb ;
};_cgfg .SbrATY [0]=int8 (_dgee );_dgee ,_fadcb =_cgfg ._fcdef .ReadByte ();if _fadcb !=nil {return _fadcb ;};_cgfg .SbrATX [1]=int8 (_dgee );_dgee ,_fadcb =_cgfg ._fcdef .ReadByte ();if _fadcb !=nil {return _fadcb ;};_cgfg .SbrATY [1]=int8 (_dgee );return nil ;
};func (_deae *Header )writeReferredToSegments (_ddge _d .BinaryWriter )(_fcdd int ,_ffda error ){const _geab ="\u0077\u0072\u0069te\u0052\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";var (_cgfa uint16 ;
_eedg uint32 ;);_bdaf :=_deae .referenceSize ();_aeeec :=1;_aeefe :=make ([]byte ,_bdaf );for _ ,_ddff :=range _deae .RTSNumbers {switch _bdaf {case 4:_eedg =uint32 (_ddff );_gf .BigEndian .PutUint32 (_aeefe ,_eedg );_aeeec ,_ffda =_ddge .Write (_aeefe );
if _ffda !=nil {return 0,_df .Wrap (_ffda ,_geab ,"u\u0069\u006e\u0074\u0033\u0032\u0020\u0073\u0069\u007a\u0065");};case 2:_cgfa =uint16 (_ddff );_gf .BigEndian .PutUint16 (_aeefe ,_cgfa );_aeeec ,_ffda =_ddge .Write (_aeefe );if _ffda !=nil {return 0,_df .Wrap (_ffda ,_geab ,"\u0075\u0069\u006e\u0074\u0031\u0036");
};default:if _ffda =_ddge .WriteByte (byte (_ddff ));_ffda !=nil {return 0,_df .Wrap (_ffda ,_geab ,"\u0075\u0069\u006et\u0038");};};_fcdd +=_aeeec ;};return _fcdd ,nil ;};type Segmenter interface{Init (_ecec *Header ,_cec *_d .Reader )error ;};func (_fddf *TableSegment )HtLow ()int32 {return _fddf ._gdb };
func (_gbbaf *TextRegion )decodeRI ()(int64 ,error ){if !_gbbaf .UseRefinement {return 0,nil ;};if _gbbaf .IsHuffmanEncoded {_befd ,_ebca :=_gbbaf ._fcdef .ReadBit ();return int64 (_befd ),_ebca ;};_ecde ,_bega :=_gbbaf ._geg .DecodeInt (_gbbaf ._cbe );
return int64 (_ecde ),_bega ;};func (_gcfd *TableSegment )StreamReader ()*_d .Reader {return _gcfd ._fbdf };func (_gebd *HalftoneRegion )computeX (_bbage ,_fbe int )int {return _gebd .shiftAndFill (int (_gebd .HGridX )+_bbage *int (_gebd .HRegionY )+_fbe *int (_gebd .HRegionX ));
};func (_bed *GenericRegion )decodeTemplate2 (_dfa ,_dcfg ,_defd int ,_ddbe ,_ebagd int )(_edc error ){const _cgb ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0032";var (_ddd ,_cdb int ;_ffg ,_gefd int ;_bcb byte ;_bgcb ,_dddd int ;
);if _dfa >=1{_bcb ,_edc =_bed .Bitmap .GetByte (_ebagd );if _edc !=nil {return _df .Wrap (_edc ,_cgb ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0031");};_ffg =int (_bcb );};if _dfa >=2{_bcb ,_edc =_bed .Bitmap .GetByte (_ebagd -_bed .Bitmap .RowStride );
if _edc !=nil {return _df .Wrap (_edc ,_cgb ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0032");};_gefd =int (_bcb )<<4;};_ddd =(_ffg >>3&0x7c)|(_gefd >>3&0x380);for _feec :=0;_feec < _defd ;_feec =_bgcb {var (_gfe byte ;
_fbb int ;);_bgcb =_feec +8;if _agfg :=_dcfg -_feec ;_agfg > 8{_fbb =8;}else {_fbb =_agfg ;};if _dfa > 0{_ffg <<=8;if _bgcb < _dcfg {_bcb ,_edc =_bed .Bitmap .GetByte (_ebagd +1);if _edc !=nil {return _df .Wrap (_edc ,_cgb ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0030");
};_ffg |=int (_bcb );};};if _dfa > 1{_gefd <<=8;if _bgcb < _dcfg {_bcb ,_edc =_bed .Bitmap .GetByte (_ebagd -_bed .Bitmap .RowStride +1);if _edc !=nil {return _df .Wrap (_edc ,_cgb ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0031");
};_gefd |=int (_bcb )<<4;};};for _gcg :=0;_gcg < _fbb ;_gcg ++{_ggee :=uint (10-_gcg );if _bed ._fb {_cdb =_bed .overrideAtTemplate2 (_ddd ,_feec +_gcg ,_dfa ,int (_gfe ),_gcg );_bed ._fgaa .SetIndex (int32 (_cdb ));}else {_bed ._fgaa .SetIndex (int32 (_ddd ));
};_dddd ,_edc =_bed ._deba .DecodeBit (_bed ._fgaa );if _edc !=nil {return _df .Wrap (_edc ,_cgb ,"");};_gfe |=byte (_dddd <<uint (7-_gcg ));_ddd =((_ddd &0x1bd)<<1)|_dddd |((_ffg >>_ggee )&0x4)|((_gefd >>_ggee )&0x80);};if _bcde :=_bed .Bitmap .SetByte (_ddbe ,_gfe );
_bcde !=nil {return _df .Wrap (_bcde ,_cgb ,"");};_ddbe ++;_ebagd ++;};return nil ;};func (_beec *PageInformationSegment )CombinationOperatorOverrideAllowed ()bool {return _beec ._cdcf };func (_bfad *SymbolDictionary )InitEncode (symbols *_ed .Bitmaps ,symbolList []int ,symbolMap map[int ]int ,unborderSymbols bool )error {const _abgf ="S\u0079\u006d\u0062\u006f\u006c\u0044i\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002eI\u006e\u0069\u0074E\u006ec\u006f\u0064\u0065";
_bfad .SdATX =[]int8 {3,-3,2,-2};_bfad .SdATY =[]int8 {-1,-1,-2,-2};_bfad ._gfea =symbols ;_bfad ._fae =make ([]int ,len (symbolList ));copy (_bfad ._fae ,symbolList );if len (_bfad ._fae )!=_bfad ._gfea .Size (){return _df .Error (_abgf ,"s\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0061\u006e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u004ci\u0073\u0074\u0020\u006f\u0066\u0020\u0064\u0069\u0066\u0066er\u0065\u006e\u0074 \u0073i\u007a\u0065");
};_bfad .NumberOfNewSymbols =uint32 (symbols .Size ());_bfad .NumberOfExportedSymbols =uint32 (symbols .Size ());_bfad ._efa =symbolMap ;_bfad ._dcad =unborderSymbols ;return nil ;};func (_fd *EndOfStripe )parseHeader ()error {_eg ,_cd :=_fd ._bg .ReadBits (32);
if _cd !=nil {return _cd ;};_fd ._ggf =int (_eg &_e .MaxInt32 );return nil ;};func (_dbfd *GenericRefinementRegion )overrideAtTemplate0 (_dac ,_fdb ,_abf ,_gdag ,_geag int )int {if _dbfd ._ad [0]{_dac &=0xfff7;if _dbfd .GrAtY [0]==0&&int (_dbfd .GrAtX [0])>=-_geag {_dac |=(_gdag >>uint (7-(_geag +int (_dbfd .GrAtX [0])))&0x1)<<3;
}else {_dac |=_dbfd .getPixel (_dbfd .RegionBitmap ,_fdb +int (_dbfd .GrAtX [0]),_abf +int (_dbfd .GrAtY [0]))<<3;};};if _dbfd ._ad [1]{_dac &=0xefff;if _dbfd .GrAtY [1]==0&&int (_dbfd .GrAtX [1])>=-_geag {_dac |=(_gdag >>uint (7-(_geag +int (_dbfd .GrAtX [1])))&0x1)<<12;
}else {_dac |=_dbfd .getPixel (_dbfd .ReferenceBitmap ,_fdb +int (_dbfd .GrAtX [1]),_abf +int (_dbfd .GrAtY [1]));};};return _dac ;};func (_bfdf *SymbolDictionary )String ()string {_fcdf :=&_gd .Builder {};_fcdf .WriteString ("\n\u005b\u0053\u0059\u004dBO\u004c-\u0044\u0049\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u000a");
_fcdf .WriteString (_f .Sprintf ("\u0009-\u0020S\u0064\u0072\u0054\u0065\u006dp\u006c\u0061t\u0065\u0020\u0025\u0076\u000a",_bfdf .SdrTemplate ));_fcdf .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0025\u0076\u000a",_bfdf .SdTemplate ));
_fcdf .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006eg\u0043\u006f\u006e\u0074\u0065\u0078\u0074R\u0065\u0074\u0061\u0069\u006e\u0065\u0064\u0020\u0025\u0076\u000a",_bfdf ._cfbb ));_fcdf .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074\u0065\u0078\u0074\u0055\u0073\u0065\u0064 \u0025\u0076\u000a",_bfdf ._bfdd ));
_fcdf .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_bfdf .SdHuffAggInstanceSelection ));
_fcdf .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053d\u0048\u0075\u0066\u0066\u0042\u004d\u0053\u0069\u007a\u0065S\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020%\u0076\u000a",_bfdf .SdHuffBMSizeSelection ));_fcdf .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_bfdf .SdHuffDecodeWidthSelection ));
_fcdf .WriteString (_f .Sprintf ("\u0009\u002d\u0020Sd\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064e\u0048e\u0069g\u0068t\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_bfdf .SdHuffDecodeHeightSelection ));_fcdf .WriteString (_f .Sprintf ("\u0009\u002d\u0020U\u0073\u0065\u0052\u0065f\u0069\u006e\u0065\u006d\u0065\u006e\u0074A\u0067\u0067\u0072\u0065\u0067\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_bfdf .UseRefinementAggregation ));
_fcdf .WriteString (_f .Sprintf ("\u0009\u002d\u0020is\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045\u006e\u0063\u006f\u0064\u0065\u0064\u0020\u0025\u0076\u000a",_bfdf .IsHuffmanEncoded ));_fcdf .WriteString (_f .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_bfdf .SdATX ));
_fcdf .WriteString (_f .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_bfdf .SdATY ));_fcdf .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_bfdf .SdrATX ));_fcdf .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_bfdf .SdrATY ));
_fcdf .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u004e\u0075\u006d\u0062\u0065\u0072\u004ff\u0045\u0078\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_bfdf .NumberOfExportedSymbols ));_fcdf .WriteString (_f .Sprintf ("\u0009-\u0020\u004e\u0075\u006db\u0065\u0072\u004f\u0066\u004ee\u0077S\u0079m\u0062\u006f\u006c\u0073\u0020\u0025\u0076\n",_bfdf .NumberOfNewSymbols ));
_fcdf .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u004ff\u0049\u006d\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_bfdf ._dabdg ));_fcdf .WriteString (_f .Sprintf ("\u0009\u002d \u006e\u0075\u006d\u0062\u0065\u0072\u004f\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0064\u0053\u0079\u006d\u0062\u006f\u006c\u0073 %\u0076\u000a",_bfdf ._bgag ));
return _fcdf .String ();};func (_ccea *SymbolDictionary )getSbSymCodeLen ()int8 {_eefa :=int8 (_e .Ceil (_e .Log (float64 (_ccea ._dabdg +_ccea .NumberOfNewSymbols ))/_e .Log (2)));if _ccea .IsHuffmanEncoded &&_eefa < 1{return 1;};return _eefa ;};func (_dgad *TableSegment )parseHeader ()error {var (_feab int ;
_bfagf uint64 ;_fegf error ;);_feab ,_fegf =_dgad ._fbdf .ReadBit ();if _fegf !=nil {return _fegf ;};if _feab ==1{return _f .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0061\u0062\u006c\u0065 \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0064e\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u002e\u0020\u0042\u002e\u0032\u002e1\u0020\u0043\u006f\u0064\u0065\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0042\u0069\u0074\u0020\u0037\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u007a\u0065\u0072\u006f\u002e\u0020\u0057a\u0073\u003a \u0025\u0064",_feab );
};if _bfagf ,_fegf =_dgad ._fbdf .ReadBits (3);_fegf !=nil {return _fegf ;};_dgad ._afcad =(int32 (_bfagf )+1)&0xf;if _bfagf ,_fegf =_dgad ._fbdf .ReadBits (3);_fegf !=nil {return _fegf ;};_dgad ._dabf =(int32 (_bfagf )+1)&0xf;if _bfagf ,_fegf =_dgad ._fbdf .ReadBits (32);
_fegf !=nil {return _fegf ;};_dgad ._gdb =int32 (_bfagf &_e .MaxInt32 );if _bfagf ,_fegf =_dgad ._fbdf .ReadBits (32);_fegf !=nil {return _fegf ;};_dgad ._ebfe =int32 (_bfagf &_e .MaxInt32 );return nil ;};func (_bgfee *SymbolDictionary )getSymbol (_dbbd int )(*_ed .Bitmap ,error ){const _dbag ="\u0067e\u0074\u0053\u0079\u006d\u0062\u006fl";
_ggda ,_dbgc :=_bgfee ._gfea .GetBitmap (_bgfee ._fae [_dbbd ]);if _dbgc !=nil {return nil ,_df .Wrap (_dbgc ,_dbag ,"\u0063\u0061n\u0027\u0074\u0020g\u0065\u0074\u0020\u0073\u0079\u006d\u0062\u006f\u006c");};return _ggda ,nil ;};func (_abbg *SymbolDictionary )Init (h *Header ,r *_d .Reader )error {_abbg .Header =h ;
_abbg ._dgbb =r ;return _abbg .parseHeader ();};func (_daeg *Header )writeReferredToCount (_ffee _d .BinaryWriter )(_fadf int ,_ecfe error ){const _gaaf ="w\u0072i\u0074\u0065\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0043ou\u006e\u0074";
_daeg .RTSNumbers =make ([]int ,len (_daeg .RTSegments ));for _fabg ,_dea :=range _daeg .RTSegments {_daeg .RTSNumbers [_fabg ]=int (_dea .SegmentNumber );};if len (_daeg .RTSNumbers )<=4{var _bdda byte ;if len (_daeg .RetainBits )>=1{_bdda =_daeg .RetainBits [0];
};_bdda |=byte (len (_daeg .RTSNumbers ))<<5;if _ecfe =_ffee .WriteByte (_bdda );_ecfe !=nil {return 0,_df .Wrap (_ecfe ,_gaaf ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return 1,nil ;};_gdcd :=uint32 (len (_daeg .RTSNumbers ));
_gbgd :=make ([]byte ,4+_fg .Ceil (len (_daeg .RTSNumbers )+1,8));_gdcd |=0x7<<29;_gf .BigEndian .PutUint32 (_gbgd ,_gdcd );copy (_gbgd [1:],_daeg .RetainBits );_fadf ,_ecfe =_ffee .Write (_gbgd );if _ecfe !=nil {return 0,_df .Wrap (_ecfe ,_gaaf ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");
};return _fadf ,nil ;};func (_gafb *Header )readReferredToSegmentNumbers (_cgab *_d .Reader ,_gbcf int )([]int ,error ){const _badb ="\u0072\u0065\u0061\u0064R\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053e\u0067m\u0065\u006e\u0074\u004e\u0075\u006d\u0062e\u0072\u0073";
_ddg :=make ([]int ,_gbcf );if _gbcf > 0{_gafb .RTSegments =make ([]*Header ,_gbcf );var (_agg uint64 ;_cgee error ;);for _aade :=0;_aade < _gbcf ;_aade ++{_agg ,_cgee =_cgab .ReadBits (byte (_gafb .referenceSize ())<<3);if _cgee !=nil {return nil ,_df .Wrapf (_cgee ,_badb ,"\u0027\u0025\u0064\u0027 \u0072\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0020\u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u0075\u006db\u0065\u0072",_aade );
};_ddg [_aade ]=int (_agg &_e .MaxInt32 );};};return _ddg ,nil ;};func (_cab *PatternDictionary )setGbAtPixels (){if _cab .HDTemplate ==0{_cab .GBAtX =make ([]int8 ,4);_cab .GBAtY =make ([]int8 ,4);_cab .GBAtX [0]=-int8 (_cab .HdpWidth );_cab .GBAtY [0]=0;
_cab .GBAtX [1]=-3;_cab .GBAtY [1]=-1;_cab .GBAtX [2]=2;_cab .GBAtY [2]=-2;_cab .GBAtX [3]=-2;_cab .GBAtY [3]=-2;}else {_cab .GBAtX =[]int8 {-int8 (_cab .HdpWidth )};_cab .GBAtY =[]int8 {0};};};func (_bde *GenericRegion )readGBAtPixels (_ddae int )error {const _gbf ="\u0072\u0065\u0061\u0064\u0047\u0042\u0041\u0074\u0050i\u0078\u0065\u006c\u0073";
_bde .GBAtX =make ([]int8 ,_ddae );_bde .GBAtY =make ([]int8 ,_ddae );for _bbc :=0;_bbc < _ddae ;_bbc ++{_abfc ,_ecg :=_bde ._adf .ReadByte ();if _ecg !=nil {return _df .Wrapf (_ecg ,_gbf ,"\u0058\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_bbc );
};_bde .GBAtX [_bbc ]=int8 (_abfc );_abfc ,_ecg =_bde ._adf .ReadByte ();if _ecg !=nil {return _df .Wrapf (_ecg ,_gbf ,"\u0059\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_bbc );};_bde .GBAtY [_bbc ]=int8 (_abfc );};return nil ;};func (_aebe *SymbolDictionary )decodeDirectlyThroughGenericRegion (_defgc ,_gfdf uint32 )error {if _aebe ._gag ==nil {_aebe ._gag =NewGenericRegion (_aebe ._dgbb );
};_aebe ._gag .setParametersWithAt (false ,byte (_aebe .SdTemplate ),false ,false ,_aebe .SdATX ,_aebe .SdATY ,_defgc ,_gfdf ,_aebe ._eegg ,_aebe ._cfc );return _aebe .addSymbol (_aebe ._gag );};func (_ccfd *RegionSegment )Size ()int {return 17};func _bad (_eee *_d .Reader ,_ddc *Header )*GenericRefinementRegion {return &GenericRefinementRegion {_fga :_eee ,RegionInfo :NewRegionSegment (_eee ),_bb :_ddc ,_gda :&template0 {},_efd :&template1 {}};
};func (_ebg *HalftoneRegion )checkInput ()error {if _ebg .IsMMREncoded {if _ebg .HTemplate !=0{_de .Log .Debug ("\u0048\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030",_ebg .HTemplate );
};if _ebg .HSkipEnabled {_de .Log .Debug ("\u0048\u0053\u006b\u0069\u0070\u0045\u006e\u0061\u0062\u006c\u0065\u0064\u0020\u0030\u0020\u0025\u0076\u0020(\u0073\u0068\u006f\u0075\u006c\u0064\u0020c\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020v\u0061\u006c\u0075\u0065\u0020\u0066\u0061\u006c\u0073\u0065\u0029",_ebg .HSkipEnabled );
};};return nil ;};func (_eab *PageInformationSegment )String ()string {_faab :=&_gd .Builder {};_faab .WriteString ("\u000a\u005b\u0050\u0041G\u0045\u002d\u0049\u004e\u0046\u004f\u0052\u004d\u0041\u0054I\u004fN\u002d\u0053\u0045\u0047\u004d\u0045\u004eT\u005d\u000a");
_faab .WriteString (_f .Sprintf ("\u0009\u002d \u0042\u004d\u0048e\u0069\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u000a",_eab .PageBMHeight ));_faab .WriteString (_f .Sprintf ("\u0009-\u0020B\u004d\u0057\u0069\u0064\u0074\u0068\u003a\u0020\u0025\u0064\u000a",_eab .PageBMWidth ));
_faab .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0058\u003a\u0020\u0025\u0064\u000a",_eab .ResolutionX ));_faab .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0059\u003a\u0020\u0025\u0064\u000a",_eab .ResolutionY ));
_faab .WriteString (_f .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0073\u000a",_eab ._fbaa ));_faab .WriteString (_f .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006eO\u0070\u0065\u0072\u0061\u0074\u006f\u0072O\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025v\u000a",_eab ._cdcf ));
_faab .WriteString (_f .Sprintf ("\u0009-\u0020I\u0073\u004c\u006f\u0073\u0073l\u0065\u0073s\u003a\u0020\u0025\u0076\u000a",_eab .IsLossless ));_faab .WriteString (_f .Sprintf ("\u0009\u002d\u0020R\u0065\u0071\u0075\u0069r\u0065\u0073\u0041\u0075\u0078\u0069\u006ci\u0061\u0072\u0079\u0042\u0075\u0066\u0066\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_eab ._degf ));
_faab .WriteString (_f .Sprintf ("\u0009\u002d\u0020M\u0069\u0067\u0068\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0052e\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0076\u000a",_eab ._gdfga ));_faab .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0049\u0073\u0053\u0074\u0072\u0069\u0070\u0065\u0064:\u0020\u0025\u0076\u000a",_eab .IsStripe ));
_faab .WriteString (_f .Sprintf ("\t\u002d\u0020\u004d\u0061xS\u0074r\u0069\u0070\u0065\u0053\u0069z\u0065\u003a\u0020\u0025\u0076\u000a",_eab .MaxStripeSize ));return _faab .String ();};func (_dedf *SymbolDictionary )encodeFlags (_bgcd _d .BinaryWriter )(_cedd int ,_bgab error ){const _bbef ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _bgab =_bgcd .SkipBits (3);_bgab !=nil {return 0,_df .Wrap (_bgab ,_bbef ,"\u0065\u006d\u0070\u0074\u0079\u0020\u0062\u0069\u0074\u0073");};var _efee int ;if _dedf .SdrTemplate > 0{_efee =1;};if _bgab =_bgcd .WriteBit (_efee );_bgab !=nil {return _cedd ,_df .Wrap (_bgab ,_bbef ,"s\u0064\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");
};_efee =0;if _dedf .SdTemplate > 1{_efee =1;};if _bgab =_bgcd .WriteBit (_efee );_bgab !=nil {return _cedd ,_df .Wrap (_bgab ,_bbef ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_efee =0;if _dedf .SdTemplate ==1||_dedf .SdTemplate ==3{_efee =1;
};if _bgab =_bgcd .WriteBit (_efee );_bgab !=nil {return _cedd ,_df .Wrap (_bgab ,_bbef ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_efee =0;if _dedf ._cfbb {_efee =1;};if _bgab =_bgcd .WriteBit (_efee );_bgab !=nil {return _cedd ,_df .Wrap (_bgab ,_bbef ,"\u0063\u006f\u0064in\u0067\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0065\u0064");
};_efee =0;if _dedf ._bfdd {_efee =1;};if _bgab =_bgcd .WriteBit (_efee );_bgab !=nil {return _cedd ,_df .Wrap (_bgab ,_bbef ,"\u0063\u006f\u0064\u0069ng\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0075\u0073\u0065\u0064");};_efee =0;if _dedf .SdHuffAggInstanceSelection {_efee =1;
};if _bgab =_bgcd .WriteBit (_efee );_bgab !=nil {return _cedd ,_df .Wrap (_bgab ,_bbef ,"\u0073\u0064\u0048\u0075\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074");};_efee =int (_dedf .SdHuffBMSizeSelection );if _bgab =_bgcd .WriteBit (_efee );_bgab !=nil {return _cedd ,_df .Wrap (_bgab ,_bbef ,"\u0073\u0064\u0048u\u0066\u0066\u0042\u006d\u0053\u0069\u007a\u0065");
};_efee =0;if _dedf .SdHuffDecodeWidthSelection > 1{_efee =1;};if _bgab =_bgcd .WriteBit (_efee );_bgab !=nil {return _cedd ,_df .Wrap (_bgab ,_bbef ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_efee =0;switch _dedf .SdHuffDecodeWidthSelection {case 1,3:_efee =1;
};if _bgab =_bgcd .WriteBit (_efee );_bgab !=nil {return _cedd ,_df .Wrap (_bgab ,_bbef ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_efee =0;if _dedf .SdHuffDecodeHeightSelection > 1{_efee =1;};if _bgab =_bgcd .WriteBit (_efee );
_bgab !=nil {return _cedd ,_df .Wrap (_bgab ,_bbef ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_efee =0;switch _dedf .SdHuffDecodeHeightSelection {case 1,3:_efee =1;};if _bgab =_bgcd .WriteBit (_efee );_bgab !=nil {return _cedd ,_df .Wrap (_bgab ,_bbef ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");
};_efee =0;if _dedf .UseRefinementAggregation {_efee =1;};if _bgab =_bgcd .WriteBit (_efee );_bgab !=nil {return _cedd ,_df .Wrap (_bgab ,_bbef ,"\u0073\u0064\u0052\u0065\u0066\u0041\u0067\u0067");};_efee =0;if _dedf .IsHuffmanEncoded {_efee =1;};if _bgab =_bgcd .WriteBit (_efee );
_bgab !=nil {return _cedd ,_df .Wrap (_bgab ,_bbef ,"\u0073\u0064\u0048\u0075\u0066\u0066");};return 2,nil ;};func (_eebb *Header )readNumberOfReferredToSegments (_aegc *_d .Reader )(uint64 ,error ){const _gdac ="\u0072\u0065\u0061\u0064\u004e\u0075\u006d\u0062\u0065\u0072O\u0066\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
_ceab ,_fcaf :=_aegc .ReadBits (3);if _fcaf !=nil {return 0,_df .Wrap (_fcaf ,_gdac ,"\u0063\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0072\u0074\u0073");};_ceab &=0xf;var _cdcd []byte ;if _ceab <=4{_cdcd =make ([]byte ,5);for _ccb :=0;_ccb <=4;_ccb ++{_gcfa ,_bggd :=_aegc .ReadBit ();
if _bggd !=nil {return 0,_df .Wrap (_bggd ,_gdac ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_cdcd [_ccb ]=byte (_gcfa );};}else {_ceab ,_fcaf =_aegc .ReadBits (29);if _fcaf !=nil {return 0,_fcaf ;};_ceab &=_e .MaxInt32 ;_adac :=(_ceab +8)>>3;
_adac <<=3;_cdcd =make ([]byte ,_adac );var _bfa uint64 ;for _bfa =0;_bfa < _adac ;_bfa ++{_dagf ,_aecc :=_aegc .ReadBit ();if _aecc !=nil {return 0,_df .Wrap (_aecc ,_gdac ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_cdcd [_bfa ]=byte (_dagf );
};};return _ceab ,nil ;};func (_ecea *template0 )form (_bbg ,_gfcc ,_feea ,_bag ,_eceg int16 )int16 {return (_bbg <<10)|(_gfcc <<7)|(_feea <<4)|(_bag <<1)|_eceg ;};func (_aga *GenericRefinementRegion )decodeTypicalPredictedLineTemplate1 (_fa ,_agdf ,_bca ,_efc ,_gfc ,_db ,_agff ,_gcd ,_bgb int )(_abda error ){var (_aeef ,_ecdf int ;
_dec ,_dg int ;_ged ,_aeee int ;_aaf byte ;);if _fa > 0{_aaf ,_abda =_aga .RegionBitmap .GetByte (_agff -_bca );if _abda !=nil {return ;};_dec =int (_aaf );};if _gcd > 0&&_gcd <=_aga .ReferenceBitmap .Height {_aaf ,_abda =_aga .ReferenceBitmap .GetByte (_bgb -_efc +_db );
if _abda !=nil {return ;};_dg =int (_aaf )<<2;};if _gcd >=0&&_gcd < _aga .ReferenceBitmap .Height {_aaf ,_abda =_aga .ReferenceBitmap .GetByte (_bgb +_db );if _abda !=nil {return ;};_ged =int (_aaf );};if _gcd > -2&&_gcd < _aga .ReferenceBitmap .Height -1{_aaf ,_abda =_aga .ReferenceBitmap .GetByte (_bgb +_efc +_db );
if _abda !=nil {return ;};_aeee =int (_aaf );};_aeef =((_dec >>5)&0x6)|((_aeee >>2)&0x30)|(_ged &0xc0)|(_dg &0x200);_ecdf =((_aeee >>2)&0x70)|(_ged &0xc0)|(_dg &0x700);var _gfac int ;for _ada :=0;_ada < _gfc ;_ada =_gfac {var (_bcd int ;_eb int ;);_gfac =_ada +8;
if _bcd =_agdf -_ada ;_bcd > 8{_bcd =8;};_bcf :=_gfac < _agdf ;_gbaa :=_gfac < _aga .ReferenceBitmap .Width ;_dde :=_db +1;if _fa > 0{_aaf =0;if _bcf {_aaf ,_abda =_aga .RegionBitmap .GetByte (_agff -_bca +1);if _abda !=nil {return ;};};_dec =(_dec <<8)|int (_aaf );
};if _gcd > 0&&_gcd <=_aga .ReferenceBitmap .Height {var _cc int ;if _gbaa {_aaf ,_abda =_aga .ReferenceBitmap .GetByte (_bgb -_efc +_dde );if _abda !=nil {return ;};_cc =int (_aaf )<<2;};_dg =(_dg <<8)|_cc ;};if _gcd >=0&&_gcd < _aga .ReferenceBitmap .Height {_aaf =0;
if _gbaa {_aaf ,_abda =_aga .ReferenceBitmap .GetByte (_bgb +_dde );if _abda !=nil {return ;};};_ged =(_ged <<8)|int (_aaf );};if _gcd > -2&&_gcd < (_aga .ReferenceBitmap .Height -1){_aaf =0;if _gbaa {_aaf ,_abda =_aga .ReferenceBitmap .GetByte (_bgb +_efc +_dde );
if _abda !=nil {return ;};};_aeee =(_aeee <<8)|int (_aaf );};for _daf :=0;_daf < _bcd ;_daf ++{var _cgd int ;_gbd :=(_ecdf >>4)&0x1ff;switch _gbd {case 0x1ff:_cgd =1;case 0x00:_cgd =0;default:_aga ._bf .SetIndex (int32 (_aeef ));_cgd ,_abda =_aga ._gfa .DecodeBit (_aga ._bf );
if _abda !=nil {return ;};};_ffe :=uint (7-_daf );_eb |=_cgd <<_ffe ;_aeef =((_aeef &0x0d6)<<1)|_cgd |(_dec >>_ffe +5)&0x002|((_aeee >>_ffe +2)&0x010)|((_ged >>_ffe )&0x040)|((_dg >>_ffe )&0x200);_ecdf =((_ecdf &0xdb)<<1)|((_aeee >>_ffe +2)&0x010)|((_ged >>_ffe )&0x080)|((_dg >>_ffe )&0x400);
};_abda =_aga .RegionBitmap .SetByte (_agff ,byte (_eb ));if _abda !=nil {return ;};_agff ++;_bgb ++;};return nil ;};var _ templater =&template1 {};func (_cecd *TableSegment )HtOOB ()int32 {return _cecd ._cadc };func (_aega *SymbolDictionary )huffDecodeRefAggNInst ()(int64 ,error ){if !_aega .SdHuffAggInstanceSelection {_egece ,_gdga :=_bc .GetStandardTable (1);
if _gdga !=nil {return 0,_gdga ;};return _egece .Decode (_aega ._dgbb );};if _aega ._aaag ==nil {var (_gdgg int ;_agcf error ;);if _aega .SdHuffDecodeHeightSelection ==3{_gdgg ++;};if _aega .SdHuffDecodeWidthSelection ==3{_gdgg ++;};if _aega .SdHuffBMSizeSelection ==3{_gdgg ++;
};_aega ._aaag ,_agcf =_aega .getUserTable (_gdgg );if _agcf !=nil {return 0,_agcf ;};};return _aega ._aaag .Decode (_aega ._dgbb );};func (_adaa *TextRegion )createRegionBitmap ()error {_adaa .RegionBitmap =_ed .New (int (_adaa .RegionInfo .BitmapWidth ),int (_adaa .RegionInfo .BitmapHeight ));
if _adaa .DefaultPixel !=0{_adaa .RegionBitmap .SetDefaultPixel ();};return nil ;};func (_abfcb *PatternDictionary )readGrayMax ()error {_gddg ,_cgg :=_abfcb ._cgff .ReadBits (32);if _cgg !=nil {return _cgg ;};_abfcb .GrayMax =uint32 (_gddg &_e .MaxUint32 );
return nil ;};func (_aab *GenericRegion )InitEncode (bm *_ed .Bitmap ,xLoc ,yLoc ,template int ,duplicateLineRemoval bool )error {const _cgf ="\u0047e\u006e\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069\u006f\u006e.\u0049\u006e\u0069\u0074\u0045\u006e\u0063\u006f\u0064\u0065";
if bm ==nil {return _df .Error (_cgf ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if xLoc < 0||yLoc < 0{return _df .Error (_cgf ,"\u0078\u0020\u0061\u006e\u0064\u0020\u0079\u0020\u006c\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074h\u0061\u006e\u0020\u0030");
};_aab .Bitmap =bm ;_aab .GBTemplate =byte (template );switch _aab .GBTemplate {case 0:_aab .GBAtX =[]int8 {3,-3,2,-2};_aab .GBAtY =[]int8 {-1,-1,-2,-2};case 1:_aab .GBAtX =[]int8 {3};_aab .GBAtY =[]int8 {-1};case 2,3:_aab .GBAtX =[]int8 {2};_aab .GBAtY =[]int8 {-1};
default:return _df .Errorf (_cgf ,"\u0070\u0072o\u0076\u0069\u0064\u0065\u0064 \u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u007b\u0030\u002c\u0031\u002c\u0032\u002c\u0033\u007d",template );
};_aab .RegionSegment =&RegionSegment {BitmapHeight :uint32 (bm .Height ),BitmapWidth :uint32 (bm .Width ),XLocation :uint32 (xLoc ),YLocation :uint32 (yLoc )};_aab .IsTPGDon =duplicateLineRemoval ;return nil ;};func (_dede *GenericRefinementRegion )getPixel (_bdf *_ed .Bitmap ,_cgagf ,_ede int )int {if _cgagf < 0||_cgagf >=_bdf .Width {return 0;
};if _ede < 0||_ede >=_bdf .Height {return 0;};if _bdf .GetPixel (_cgagf ,_ede ){return 1;};return 0;};func (_gdd *HalftoneRegion )computeY (_geec ,_ecdfg int )int {return _gdd .shiftAndFill (int (_gdd .HGridY )+_geec *int (_gdd .HRegionX )-_ecdfg *int (_gdd .HRegionY ));
};func (_daab *SymbolDictionary )readNumberOfNewSymbols ()error {_bagd ,_fabc :=_daab ._dgbb .ReadBits (32);if _fabc !=nil {return _fabc ;};_daab .NumberOfNewSymbols =uint32 (_bagd &_e .MaxUint32 );return nil ;};func (_dafe *SymbolDictionary )decodeHeightClassDeltaHeightWithHuffman ()(int64 ,error ){switch _dafe .SdHuffDecodeHeightSelection {case 0:_cacb ,_cgcg :=_bc .GetStandardTable (4);
if _cgcg !=nil {return 0,_cgcg ;};return _cacb .Decode (_dafe ._dgbb );case 1:_egfc ,_ceeb :=_bc .GetStandardTable (5);if _ceeb !=nil {return 0,_ceeb ;};return _egfc .Decode (_dafe ._dgbb );case 3:if _dafe ._fgfd ==nil {_fag ,_fdcd :=_bc .GetStandardTable (0);
if _fdcd !=nil {return 0,_fdcd ;};_dafe ._fgfd =_fag ;};return _dafe ._fgfd .Decode (_dafe ._dgbb );};return 0,nil ;};const (TSymbolDictionary Type =0;TIntermediateTextRegion Type =4;TImmediateTextRegion Type =6;TImmediateLosslessTextRegion Type =7;TPatternDictionary Type =16;
TIntermediateHalftoneRegion Type =20;TImmediateHalftoneRegion Type =22;TImmediateLosslessHalftoneRegion Type =23;TIntermediateGenericRegion Type =36;TImmediateGenericRegion Type =38;TImmediateLosslessGenericRegion Type =39;TIntermediateGenericRefinementRegion Type =40;
TImmediateGenericRefinementRegion Type =42;TImmediateLosslessGenericRefinementRegion Type =43;TPageInformation Type =48;TEndOfPage Type =49;TEndOfStrip Type =50;TEndOfFile Type =51;TProfiles Type =52;TTables Type =53;TExtension Type =62;TBitmap Type =70;
);func (_cbga *Header )readSegmentPageAssociation (_dgcc Documenter ,_gbaf *_d .Reader ,_dbe uint64 ,_fbec ...int )(_egc error ){const _fcac ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074P\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061t\u0069\u006f\u006e";
if !_cbga .PageAssociationFieldSize {_acec ,_dabc :=_gbaf .ReadBits (8);if _dabc !=nil {return _df .Wrap (_dabc ,_fcac ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_cbga .PageAssociation =int (_acec &0xFF);}else {_fdc ,_bfcf :=_gbaf .ReadBits (32);
if _bfcf !=nil {return _df .Wrap (_bfcf ,_fcac ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_cbga .PageAssociation =int (_fdc &_e .MaxInt32 );};if _dbe ==0{return nil ;};if _cbga .PageAssociation !=0{_gadc ,_bdab :=_dgcc .GetPage (_cbga .PageAssociation );
if _bdab !=nil {return _df .Wrap (_bdab ,_fcac ,"\u0061s\u0073\u006f\u0063\u0069a\u0074\u0065\u0064\u0020\u0070a\u0067e\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006ed");};var _cde int ;for _aece :=uint64 (0);_aece < _dbe ;_aece ++{_cde =_fbec [_aece ];
_cbga .RTSegments [_aece ],_bdab =_gadc .GetSegment (_cde );if _bdab !=nil {var _ecaf error ;_cbga .RTSegments [_aece ],_ecaf =_dgcc .GetGlobalSegment (_cde );if _ecaf !=nil {return _df .Wrapf (_bdab ,_fcac ,"\u0072\u0065\u0066\u0065\u0072\u0065n\u0063\u0065\u0020s\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064\u0020\u0061\u0074\u0020pa\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0072\u0020\u0069\u006e\u0020\u0067\u006c\u006f\u0062\u0061\u006c\u0073",_cbga .PageAssociation );
};};};return nil ;};for _edgg :=uint64 (0);_edgg < _dbe ;_edgg ++{_cbga .RTSegments [_edgg ],_egc =_dgcc .GetGlobalSegment (_fbec [_edgg ]);if _egc !=nil {return _df .Wrapf (_egc ,_fcac ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u003a\u0020\u0027\u0025d\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064",_fbec [_edgg ]);
};};return nil ;};type Type int ;type HalftoneRegion struct{_eafd *_d .Reader ;_gbbd *Header ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;HDefaultPixel int8 ;CombinationOperator _ed .CombinationOperator ;
HSkipEnabled bool ;HTemplate byte ;IsMMREncoded bool ;HGridWidth uint32 ;HGridHeight uint32 ;HGridX int32 ;HGridY int32 ;HRegionX uint16 ;HRegionY uint16 ;HalftoneRegionBitmap *_ed .Bitmap ;Patterns []*_ed .Bitmap ;};func (_ddfa *SymbolDictionary )readRefinementAtPixels (_aegd int )error {_ddfa .SdrATX =make ([]int8 ,_aegd );
_ddfa .SdrATY =make ([]int8 ,_aegd );var (_cdab byte ;_dbac error ;);for _ddbd :=0;_ddbd < _aegd ;_ddbd ++{_cdab ,_dbac =_ddfa ._dgbb .ReadByte ();if _dbac !=nil {return _dbac ;};_ddfa .SdrATX [_ddbd ]=int8 (_cdab );_cdab ,_dbac =_ddfa ._dgbb .ReadByte ();
if _dbac !=nil {return _dbac ;};_ddfa .SdrATY [_ddbd ]=int8 (_cdab );};return nil ;};func (_afff *SymbolDictionary )decodeDifferenceWidth ()(int64 ,error ){if _afff .IsHuffmanEncoded {switch _afff .SdHuffDecodeWidthSelection {case 0:_fbffg ,_faea :=_bc .GetStandardTable (2);
if _faea !=nil {return 0,_faea ;};return _fbffg .Decode (_afff ._dgbb );case 1:_dcgf ,_eade :=_bc .GetStandardTable (3);if _eade !=nil {return 0,_eade ;};return _dcgf .Decode (_afff ._dgbb );case 3:if _afff ._bebe ==nil {var _fgcb int ;if _afff .SdHuffDecodeHeightSelection ==3{_fgcb ++;
};_eddg ,_eadeg :=_afff .getUserTable (_fgcb );if _eadeg !=nil {return 0,_eadeg ;};_afff ._bebe =_eddg ;};return _afff ._bebe .Decode (_afff ._dgbb );};}else {_bfgb ,_dbcbe :=_afff ._cfc .DecodeInt (_afff ._gcfbd );if _dbcbe !=nil {return 0,_dbcbe ;};return int64 (_bfgb ),nil ;
};return 0,nil ;};type EndOfStripe struct{_bg *_d .Reader ;_ggf int ;};func (_eggc *SymbolDictionary )readAtPixels (_gbfeg int )error {_eggc .SdATX =make ([]int8 ,_gbfeg );_eggc .SdATY =make ([]int8 ,_gbfeg );var (_dabg byte ;_adgd error ;);for _gbbb :=0;
_gbbb < _gbfeg ;_gbbb ++{_dabg ,_adgd =_eggc ._dgbb .ReadByte ();if _adgd !=nil {return _adgd ;};_eggc .SdATX [_gbbb ]=int8 (_dabg );_dabg ,_adgd =_eggc ._dgbb .ReadByte ();if _adgd !=nil {return _adgd ;};_eggc .SdATY [_gbbb ]=int8 (_dabg );};return nil ;
};func (_acdc *GenericRegion )decodeTemplate3 (_gabe ,_gfg ,_aad int ,_fgdf ,_bbga int )(_afe error ){const _dca ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0033";var (_febfg ,_aefe int ;_bdg int ;_acgb byte ;_fdd ,_dbcd int ;
);if _gabe >=1{_acgb ,_afe =_acdc .Bitmap .GetByte (_bbga );if _afe !=nil {return _df .Wrap (_afe ,_dca ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_bdg =int (_acgb );};_febfg =(_bdg >>1)&0x70;for _fgf :=0;_fgf < _aad ;_fgf =_fdd {var (_bgf byte ;
_bddb int ;);_fdd =_fgf +8;if _bbe :=_gfg -_fgf ;_bbe > 8{_bddb =8;}else {_bddb =_bbe ;};if _gabe >=1{_bdg <<=8;if _fdd < _gfg {_acgb ,_afe =_acdc .Bitmap .GetByte (_bbga +1);if _afe !=nil {return _df .Wrap (_afe ,_dca ,"\u0069\u006e\u006e\u0065\u0072\u0020\u002d\u0020\u006c\u0069\u006e\u0065 \u003e\u003d\u0020\u0031");
};_bdg |=int (_acgb );};};for _dda :=0;_dda < _bddb ;_dda ++{if _acdc ._fb {_aefe =_acdc .overrideAtTemplate3 (_febfg ,_fgf +_dda ,_gabe ,int (_bgf ),_dda );_acdc ._fgaa .SetIndex (int32 (_aefe ));}else {_acdc ._fgaa .SetIndex (int32 (_febfg ));};_dbcd ,_afe =_acdc ._deba .DecodeBit (_acdc ._fgaa );
if _afe !=nil {return _df .Wrap (_afe ,_dca ,"");};_bgf |=byte (_dbcd )<<byte (7-_dda );_febfg =((_febfg &0x1f7)<<1)|_dbcd |((_bdg >>uint (8-_dda ))&0x010);};if _fda :=_acdc .Bitmap .SetByte (_fgdf ,_bgf );_fda !=nil {return _df .Wrap (_fda ,_dca ,"");
};_fgdf ++;_bbga ++;};return nil ;};func (_egee *SymbolDictionary )decodeThroughTextRegion (_dgae ,_egg ,_ecagb uint32 )error {if _egee ._bebd ==nil {_egee ._bebd =_ecebe (_egee ._dgbb ,nil );_egee ._bebd .setContexts (_egee ._eegg ,_c .NewStats (512,1),_c .NewStats (512,1),_c .NewStats (512,1),_c .NewStats (512,1),_egee ._cbba ,_c .NewStats (512,1),_c .NewStats (512,1),_c .NewStats (512,1),_c .NewStats (512,1));
};if _ebcf :=_egee .setSymbolsArray ();_ebcf !=nil {return _ebcf ;};_egee ._bebd .setParameters (_egee ._cfc ,_egee .IsHuffmanEncoded ,true ,_dgae ,_egg ,_ecagb ,1,_egee ._dabdg +_egee ._bgag ,0,0,0,1,0,0,0,0,0,0,0,0,0,_egee .SdrTemplate ,_egee .SdrATX ,_egee .SdrATY ,_egee ._eada ,_egee ._feeg );
return _egee .addSymbol (_egee ._bebd );};func (_bedd *Header )readSegmentDataLength (_ggcb *_d .Reader )(_gbge error ){_bedd .SegmentDataLength ,_gbge =_ggcb .ReadBits (32);if _gbge !=nil {return _gbge ;};_bedd .SegmentDataLength &=_e .MaxInt32 ;return nil ;
};func NewHeader (d Documenter ,r *_d .Reader ,offset int64 ,organizationType OrganizationType )(*Header ,error ){_ceg :=&Header {Reader :r };if _feda :=_ceg .parse (d ,r ,offset ,organizationType );_feda !=nil {return nil ,_df .Wrap (_feda ,"\u004ee\u0077\u0048\u0065\u0061\u0064\u0065r","");
};return _ceg ,nil ;};func (_caf *GenericRegion )String ()string {_afgf :=&_gd .Builder {};_afgf .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_afgf .WriteString (_caf .RegionSegment .String ()+"\u000a");
_afgf .WriteString (_f .Sprintf ("\u0009\u002d\u0020Us\u0065\u0045\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_caf .UseExtTemplates ));_afgf .WriteString (_f .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0044\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_caf .IsTPGDon ));
_afgf .WriteString (_f .Sprintf ("\u0009-\u0020G\u0042\u0054\u0065\u006d\u0070l\u0061\u0074e\u003a\u0020\u0025\u0064\u000a",_caf .GBTemplate ));_afgf .WriteString (_f .Sprintf ("\t\u002d \u0049\u0073\u004d\u004d\u0052\u0045\u006e\u0063o\u0064\u0065\u0064\u003a %\u0076\u000a",_caf .IsMMREncoded ));
_afgf .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_caf .GBAtX ));_afgf .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_caf .GBAtY ));
_afgf .WriteString (_f .Sprintf ("\t\u002d \u0047\u0042\u0041\u0074\u004f\u0076\u0065\u0072r\u0069\u0064\u0065\u003a %\u0076\u000a",_caf .GBAtOverride ));return _afgf .String ();};type OrganizationType uint8 ;func (_fadc *template1 )form (_fcbd ,_bbd ,_ggg ,_aafa ,_eba int16 )int16 {return ((_fcbd &0x02)<<8)|(_bbd <<6)|((_ggg &0x03)<<4)|(_aafa <<1)|_eba ;
};func (_faed *TextRegion )Init (header *Header ,r *_d .Reader )error {_faed .Header =header ;_faed ._fcdef =r ;_faed .RegionInfo =NewRegionSegment (_faed ._fcdef );return _faed .parseHeader ();};func (_ccf *PageInformationSegment )encodeFlags (_cagg _d .BinaryWriter )(_eagf error ){const _bcgc ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _eagf =_cagg .SkipBits (1);_eagf !=nil {return _df .Wrap (_eagf ,_bcgc ,"\u0072\u0065\u0073e\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074");};var _agae int ;if _ccf .CombinationOperatorOverrideAllowed (){_agae =1;};if _eagf =_cagg .WriteBit (_agae );
_eagf !=nil {return _df .Wrap (_eagf ,_bcgc ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0064\u0065\u006e");};_agae =0;if _ccf ._degf {_agae =1;
};if _eagf =_cagg .WriteBit (_agae );_eagf !=nil {return _df .Wrap (_eagf ,_bcgc ,"\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0061\u0075\u0078i\u006ci\u0061r\u0079\u0020\u0062\u0075\u0066\u0066\u0065r");};if _eagf =_cagg .WriteBit ((int (_ccf ._fbaa )>>1)&0x01);
_eagf !=nil {return _df .Wrap (_eagf ,_bcgc ,"\u0063\u006f\u006d\u0062\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006f\u0070\u0065\u0072\u0061\u0074o\u0072\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0062\u0069\u0074");};if _eagf =_cagg .WriteBit (int (_ccf ._fbaa )&0x01);
_eagf !=nil {return _df .Wrap (_eagf ,_bcgc ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0062\u0069\u0074");};_agae =int (_ccf .DefaultPixelValue );
if _eagf =_cagg .WriteBit (_agae );_eagf !=nil {return _df .Wrap (_eagf ,_bcgc ,"\u0064e\u0066\u0061\u0075\u006c\u0074\u0020\u0070\u0061\u0067\u0065\u0020p\u0069\u0078\u0065\u006c\u0020\u0076\u0061\u006c\u0075\u0065");};_agae =0;if _ccf ._gdfga {_agae =1;
};if _eagf =_cagg .WriteBit (_agae );_eagf !=nil {return _df .Wrap (_eagf ,_bcgc ,"\u0063\u006f\u006e\u0074ai\u006e\u0073\u0020\u0072\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074");};_agae =0;if _ccf .IsLossless {_agae =1;};if _eagf =_cagg .WriteBit (_agae );
_eagf !=nil {return _df .Wrap (_eagf ,_bcgc ,"p\u0061\u0067\u0065\u0020\u0069\u0073 \u0065\u0076\u0065\u006e\u0074\u0075\u0061\u006c\u006cy\u0020\u006c\u006fs\u0073l\u0065\u0073\u0073");};return nil ;};func (_agde *SymbolDictionary )addSymbol (_bgbb Regioner )error {_dbca ,_bdge :=_bgbb .GetRegionBitmap ();
if _bdge !=nil {return _bdge ;};_agde ._bbfd [_agde ._bgag ]=_dbca ;_agde ._eada =append (_agde ._eada ,_dbca );_de .Log .Trace ("\u005b\u0053YM\u0042\u004f\u004c \u0044\u0049\u0043\u0054ION\u0041RY\u005d\u0020\u0041\u0064\u0064\u0065\u0064 s\u0079\u006d\u0062\u006f\u006c\u003a\u0020%\u0073",_dbca );
return nil ;};type RegionSegment struct{_dafba *_d .Reader ;BitmapWidth uint32 ;BitmapHeight uint32 ;XLocation uint32 ;YLocation uint32 ;CombinaionOperator _ed .CombinationOperator ;};var (_ Regioner =&TextRegion {};_ Segmenter =&TextRegion {};);func (_ee *EndOfStripe )LineNumber ()int {return _ee ._ggf };
func (_fge *GenericRegion )overrideAtTemplate1 (_gcf ,_dbg ,_bfca ,_edgb ,_bbdb int )int {_gcf &=0x1FF7;if _fge .GBAtY [0]==0&&_fge .GBAtX [0]>=-int8 (_bbdb ){_gcf |=(_edgb >>uint (7-(int8 (_bbdb )+_fge .GBAtX [0]))&0x1)<<3;}else {_gcf |=int (_fge .getPixel (_dbg +int (_fge .GBAtX [0]),_bfca +int (_fge .GBAtY [0])))<<3;
};return _gcf ;};func (_fefe *GenericRefinementRegion )setParameters (_ffaa *_c .DecoderStats ,_gbb *_c .Decoder ,_bgaf int8 ,_gab ,_cfg uint32 ,_ebb *_ed .Bitmap ,_ccg ,_gaf int32 ,_edf bool ,_decf []int8 ,_bbb []int8 ){_de .Log .Trace ("\u005b\u0047\u0045NE\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052E\u0047I\u004fN\u005d \u0073\u0065\u0074\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073");
if _ffaa !=nil {_fefe ._bf =_ffaa ;};if _gbb !=nil {_fefe ._gfa =_gbb ;};_fefe .TemplateID =_bgaf ;_fefe .RegionInfo .BitmapWidth =_gab ;_fefe .RegionInfo .BitmapHeight =_cfg ;_fefe .ReferenceBitmap =_ebb ;_fefe .ReferenceDX =_ccg ;_fefe .ReferenceDY =_gaf ;
_fefe .IsTPGROn =_edf ;_fefe .GrAtX =_decf ;_fefe .GrAtY =_bbb ;_fefe .RegionBitmap =nil ;_de .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073 f\u0069\u006ei\u0073\u0068\u0065\u0064\u002e\u0020\u0025\u0073",_fefe );
};func (_gagac *TextRegion )decodeID ()(int64 ,error ){if _gagac .IsHuffmanEncoded {if _gagac ._gbbg ==nil {_aegaf ,_gbcbe :=_gagac ._fcdef .ReadBits (byte (_gagac ._dbaf ));return int64 (_aegaf ),_gbcbe ;};return _gagac ._gbbg .Decode (_gagac ._fcdef );
};return _gagac ._geg .DecodeIAID (uint64 (_gagac ._dbaf ),_gagac ._fbecb );};func (_acce *PageInformationSegment )encodeStripingInformation (_ageb _d .BinaryWriter )(_cbge int ,_fdac error ){const _bdbb ="\u0065n\u0063\u006f\u0064\u0065S\u0074\u0072\u0069\u0070\u0069n\u0067I\u006ef\u006f\u0072\u006d\u0061\u0074\u0069\u006fn";
if !_acce .IsStripe {if _cbge ,_fdac =_ageb .Write ([]byte {0x00,0x00});_fdac !=nil {return 0,_df .Wrap (_fdac ,_bdbb ,"n\u006f\u0020\u0073\u0074\u0072\u0069\u0070\u0069\u006e\u0067");};return _cbge ,nil ;};_eaef :=make ([]byte ,2);_gf .BigEndian .PutUint16 (_eaef ,_acce .MaxStripeSize |1<<15);
if _cbge ,_fdac =_ageb .Write (_eaef );_fdac !=nil {return 0,_df .Wrapf (_fdac ,_bdbb ,"\u0073\u0074\u0072i\u0070\u0069\u006e\u0067\u003a\u0020\u0025\u0064",_acce .MaxStripeSize );};return _cbge ,nil ;};func (_gadcc *SymbolDictionary )readRegionFlags ()error {var (_bgfef uint64 ;
_gcbf int ;);_ ,_ceeg :=_gadcc ._dgbb .ReadBits (3);if _ceeg !=nil {return _ceeg ;};_gcbf ,_ceeg =_gadcc ._dgbb .ReadBit ();if _ceeg !=nil {return _ceeg ;};_gadcc .SdrTemplate =int8 (_gcbf );_bgfef ,_ceeg =_gadcc ._dgbb .ReadBits (2);if _ceeg !=nil {return _ceeg ;
};_gadcc .SdTemplate =int8 (_bgfef &0xf);_gcbf ,_ceeg =_gadcc ._dgbb .ReadBit ();if _ceeg !=nil {return _ceeg ;};if _gcbf ==1{_gadcc ._cfbb =true ;};_gcbf ,_ceeg =_gadcc ._dgbb .ReadBit ();if _ceeg !=nil {return _ceeg ;};if _gcbf ==1{_gadcc ._bfdd =true ;
};_gcbf ,_ceeg =_gadcc ._dgbb .ReadBit ();if _ceeg !=nil {return _ceeg ;};if _gcbf ==1{_gadcc .SdHuffAggInstanceSelection =true ;};_gcbf ,_ceeg =_gadcc ._dgbb .ReadBit ();if _ceeg !=nil {return _ceeg ;};_gadcc .SdHuffBMSizeSelection =int8 (_gcbf );_bgfef ,_ceeg =_gadcc ._dgbb .ReadBits (2);
if _ceeg !=nil {return _ceeg ;};_gadcc .SdHuffDecodeWidthSelection =int8 (_bgfef &0xf);_bgfef ,_ceeg =_gadcc ._dgbb .ReadBits (2);if _ceeg !=nil {return _ceeg ;};_gadcc .SdHuffDecodeHeightSelection =int8 (_bgfef &0xf);_gcbf ,_ceeg =_gadcc ._dgbb .ReadBit ();
if _ceeg !=nil {return _ceeg ;};if _gcbf ==1{_gadcc .UseRefinementAggregation =true ;};_gcbf ,_ceeg =_gadcc ._dgbb .ReadBit ();if _ceeg !=nil {return _ceeg ;};if _gcbf ==1{_gadcc .IsHuffmanEncoded =true ;};return nil ;};func (_gfda *Header )referenceSize ()uint {switch {case _gfda .SegmentNumber <=255:return 1;
case _gfda .SegmentNumber <=65535:return 2;default:return 4;};};func (_ffgf *PageInformationSegment )readMaxStripeSize ()error {_cdbe ,_ffdbc :=_ffgf ._ggef .ReadBits (15);if _ffdbc !=nil {return _ffdbc ;};_ffgf .MaxStripeSize =uint16 (_cdbe &_e .MaxUint16 );
return nil ;};func (_cdae *PatternDictionary )readPatternWidthAndHeight ()error {_gdcb ,_gadf :=_cdae ._cgff .ReadByte ();if _gadf !=nil {return _gadf ;};_cdae .HdpWidth =_gdcb ;_gdcb ,_gadf =_cdae ._cgff .ReadByte ();if _gadf !=nil {return _gadf ;};_cdae .HdpHeight =_gdcb ;
return nil ;};func (_eacc *template0 )setIndex (_ggbg *_c .DecoderStats ){_ggbg .SetIndex (0x100)};func (_adc *GenericRegion )decodeTemplate0b (_gaag ,_abb ,_dab int ,_beb ,_bcff int )(_fdf error ){const _cdc ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0062";
var (_dbbb ,_dad int ;_aeg ,_gad int ;_faf byte ;_gaba int ;);if _gaag >=1{_faf ,_fdf =_adc .Bitmap .GetByte (_bcff );if _fdf !=nil {return _df .Wrap (_fdf ,_cdc ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_aeg =int (_faf );};if _gaag >=2{_faf ,_fdf =_adc .Bitmap .GetByte (_bcff -_adc .Bitmap .RowStride );
if _fdf !=nil {return _df .Wrap (_fdf ,_cdc ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_gad =int (_faf )<<6;};_dbbb =(_aeg &0xf0)|(_gad &0x3800);for _acc :=0;_acc < _dab ;_acc =_gaba {var (_fgbc byte ;_cea int ;);_gaba =_acc +8;if _fbf :=_abb -_acc ;
_fbf > 8{_cea =8;}else {_cea =_fbf ;};if _gaag > 0{_aeg <<=8;if _gaba < _abb {_faf ,_fdf =_adc .Bitmap .GetByte (_bcff +1);if _fdf !=nil {return _df .Wrap (_fdf ,_cdc ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_aeg |=int (_faf );};};if _gaag > 1{_gad <<=8;
if _gaba < _abb {_faf ,_fdf =_adc .Bitmap .GetByte (_bcff -_adc .Bitmap .RowStride +1);if _fdf !=nil {return _df .Wrap (_fdf ,_cdc ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_gad |=int (_faf )<<6;};};for _dbdb :=0;_dbdb < _cea ;_dbdb ++{_abcg :=uint (7-_dbdb );
if _adc ._fb {_dad =_adc .overrideAtTemplate0b (_dbbb ,_acc +_dbdb ,_gaag ,int (_fgbc ),_dbdb ,int (_abcg ));_adc ._fgaa .SetIndex (int32 (_dad ));}else {_adc ._fgaa .SetIndex (int32 (_dbbb ));};var _bcgf int ;_bcgf ,_fdf =_adc ._deba .DecodeBit (_adc ._fgaa );
if _fdf !=nil {return _df .Wrap (_fdf ,_cdc ,"");};_fgbc |=byte (_bcgf <<_abcg );_dbbb =((_dbbb &0x7bf7)<<1)|_bcgf |((_aeg >>_abcg )&0x10)|((_gad >>_abcg )&0x800);};if _ffbc :=_adc .Bitmap .SetByte (_beb ,_fgbc );_ffbc !=nil {return _df .Wrap (_ffbc ,_cdc ,"");
};_beb ++;_bcff ++;};return nil ;};func (_bfdg *PatternDictionary )Init (h *Header ,r *_d .Reader )error {_bfdg ._cgff =r ;return _bfdg .parseHeader ();};func (_dacg *SymbolDictionary )encodeRefinementATFlags (_aadf _d .BinaryWriter )(_afge int ,_eege error ){const _cfaa ="\u0065\u006e\u0063od\u0065\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0041\u0054\u0046\u006c\u0061\u0067\u0073";
if !_dacg .UseRefinementAggregation ||_dacg .SdrTemplate !=0{return 0,nil ;};for _aged :=0;_aged < 2;_aged ++{if _eege =_aadf .WriteByte (byte (_dacg .SdrATX [_aged ]));_eege !=nil {return _afge ,_df .Wrapf (_eege ,_cfaa ,"\u0053\u0064\u0072\u0041\u0054\u0058\u005b\u0025\u0064\u005d",_aged );
};_afge ++;if _eege =_aadf .WriteByte (byte (_dacg .SdrATY [_aged ]));_eege !=nil {return _afge ,_df .Wrapf (_eege ,_cfaa ,"\u0053\u0064\u0072\u0041\u0054\u0059\u005b\u0025\u0064\u005d",_aged );};_afge ++;};return _afge ,nil ;};func (_bbac *TextRegion )readHuffmanFlags ()error {var (_aebc int ;
_efgg uint64 ;_aegf error ;);_ ,_aegf =_bbac ._fcdef .ReadBit ();if _aegf !=nil {return _aegf ;};_aebc ,_aegf =_bbac ._fcdef .ReadBit ();if _aegf !=nil {return _aegf ;};_bbac .SbHuffRSize =int8 (_aebc );_efgg ,_aegf =_bbac ._fcdef .ReadBits (2);if _aegf !=nil {return _aegf ;
};_bbac .SbHuffRDY =int8 (_efgg )&0xf;_efgg ,_aegf =_bbac ._fcdef .ReadBits (2);if _aegf !=nil {return _aegf ;};_bbac .SbHuffRDX =int8 (_efgg )&0xf;_efgg ,_aegf =_bbac ._fcdef .ReadBits (2);if _aegf !=nil {return _aegf ;};_bbac .SbHuffRDHeight =int8 (_efgg )&0xf;
_efgg ,_aegf =_bbac ._fcdef .ReadBits (2);if _aegf !=nil {return _aegf ;};_bbac .SbHuffRDWidth =int8 (_efgg )&0xf;_efgg ,_aegf =_bbac ._fcdef .ReadBits (2);if _aegf !=nil {return _aegf ;};_bbac .SbHuffDT =int8 (_efgg )&0xf;_efgg ,_aegf =_bbac ._fcdef .ReadBits (2);
if _aegf !=nil {return _aegf ;};_bbac .SbHuffDS =int8 (_efgg )&0xf;_efgg ,_aegf =_bbac ._fcdef .ReadBits (2);if _aegf !=nil {return _aegf ;};_bbac .SbHuffFS =int8 (_efgg )&0xf;return nil ;};func (_dead *SymbolDictionary )getToExportFlags ()([]int ,error ){var (_ebgae int ;
_fefcb int32 ;_dgdbd error ;_ffdf =int32 (_dead ._dabdg +_dead .NumberOfNewSymbols );_agba =make ([]int ,_ffdf ););for _ffbd :=int32 (0);_ffbd < _ffdf ;_ffbd +=_fefcb {if _dead .IsHuffmanEncoded {_ddgd ,_fdce :=_bc .GetStandardTable (1);if _fdce !=nil {return nil ,_fdce ;
};_cecc ,_fdce :=_ddgd .Decode (_dead ._dgbb );if _fdce !=nil {return nil ,_fdce ;};_fefcb =int32 (_cecc );}else {_fefcb ,_dgdbd =_dead ._cfc .DecodeInt (_dead ._acbe );if _dgdbd !=nil {return nil ,_dgdbd ;};};if _fefcb !=0{if _ffbd +_fefcb > _ffdf {return nil ,_df .Error ("\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0067\u0065\u0074T\u006f\u0045\u0078\u0070\u006f\u0072\u0074F\u006c\u0061\u0067\u0073","\u006d\u0061\u006c\u0066\u006f\u0072m\u0065\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0064\u0061\u0074\u0061\u0020\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u002e\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u006f\u0075\u0074\u0020\u006ff\u0020r\u0061\u006e\u0067\u0065");
};for _ecgc :=_ffbd ;_ecgc < _ffbd +_fefcb ;_ecgc ++{_agba [_ecgc ]=_ebgae ;};};if _ebgae ==0{_ebgae =1;}else {_ebgae =0;};};return _agba ,nil ;};func (_dbec *TextRegion )checkInput ()error {const _bgea ="\u0063\u0068\u0065\u0063\u006b\u0049\u006e\u0070\u0075\u0074";
if !_dbec .UseRefinement {if _dbec .SbrTemplate !=0{_de .Log .Debug ("\u0053\u0062\u0072Te\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_dbec .SbrTemplate =0;};};if _dbec .SbHuffFS ==2||_dbec .SbHuffRDWidth ==2||_dbec .SbHuffRDHeight ==2||_dbec .SbHuffRDX ==2||_dbec .SbHuffRDY ==2{return _df .Error (_bgea ,"h\u0075\u0066\u0066\u006d\u0061\u006e \u0066\u006c\u0061\u0067\u0020\u0076a\u006c\u0075\u0065\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074e\u0064");
};if !_dbec .UseRefinement {if _dbec .SbHuffRSize !=0{_de .Log .Debug ("\u0053\u0062\u0048uf\u0066\u0052\u0053\u0069\u007a\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_dbec .SbHuffRSize =0;};if _dbec .SbHuffRDY !=0{_de .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044Y\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");
_dbec .SbHuffRDY =0;};if _dbec .SbHuffRDX !=0{_de .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044X\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_dbec .SbHuffRDX =0;};if _dbec .SbHuffRDWidth !=0{_de .Log .Debug ("\u0053b\u0048\u0075\u0066\u0066R\u0044\u0057\u0069\u0064\u0074h\u0020s\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u00200");
_dbec .SbHuffRDWidth =0;};if _dbec .SbHuffRDHeight !=0{_de .Log .Debug ("\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069g\u0068\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0030");_dbec .SbHuffRDHeight =0;};};return nil ;
};type templater interface{form (_bda ,_abcf ,_daff ,_ece ,_dbd int16 )int16 ;setIndex (_dfd *_c .DecoderStats );};func (_ceec *PageInformationSegment )readIsStriped ()error {_aafc ,_ffcg :=_ceec ._ggef .ReadBit ();if _ffcg !=nil {return _ffcg ;};if _aafc ==1{_ceec .IsStripe =true ;
};return nil ;};func (_fcbf *SymbolDictionary )encodeSymbols (_aada _d .BinaryWriter )(_dgcd int ,_gbgdg error ){const _decd ="\u0065\u006e\u0063o\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c";_fcgc :=_fgb .New ();_fcgc .Init ();_eeda ,_gbgdg :=_fcbf ._gfea .SelectByIndexes (_fcbf ._fae );
if _gbgdg !=nil {return 0,_df .Wrap (_gbgdg ,_decd ,"\u0069n\u0069\u0074\u0069\u0061\u006c");};_gaagd :=map[*_ed .Bitmap ]int {};for _begd ,_abfg :=range _eeda .Values {_gaagd [_abfg ]=_begd ;};_eeda .SortByHeight ();var _fgeba ,_becd int ;_dfbe ,_gbgdg :=_eeda .GroupByHeight ();
if _gbgdg !=nil {return 0,_df .Wrap (_gbgdg ,_decd ,"");};for _ ,_cfae :=range _dfbe .Values {_acge :=_cfae .Values [0].Height ;_cbbcf :=_acge -_fgeba ;if _gbgdg =_fcgc .EncodeInteger (_fgb .IADH ,_cbbcf );_gbgdg !=nil {return 0,_df .Wrapf (_gbgdg ,_decd ,"\u0049\u0041\u0044\u0048\u0020\u0066\u006f\u0072\u0020\u0064\u0068\u003a \u0027\u0025\u0064\u0027",_cbbcf );
};_fgeba =_acge ;_dfbc ,_aadfc :=_cfae .GroupByWidth ();if _aadfc !=nil {return 0,_df .Wrapf (_aadfc ,_decd ,"\u0068\u0065\u0069g\u0068\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_acge );};var _ecag int ;for _ ,_bae :=range _dfbc .Values {for _ ,_gdge :=range _bae .Values {_acbg :=_gdge .Width ;
_acgg :=_acbg -_ecag ;if _aadfc =_fcgc .EncodeInteger (_fgb .IADW ,_acgg );_aadfc !=nil {return 0,_df .Wrapf (_aadfc ,_decd ,"\u0049\u0041\u0044\u0057\u0020\u0066\u006f\u0072\u0020\u0064\u0077\u003a \u0027\u0025\u0064\u0027",_acgg );};_ecag +=_acgg ;if _aadfc =_fcgc .EncodeBitmap (_gdge ,false );
_aadfc !=nil {return 0,_df .Wrapf (_aadfc ,_decd ,"H\u0065i\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u0020W\u0069\u0064\u0074\u0068: \u0025\u0064",_acge ,_acbg );};_cdcb :=_gaagd [_gdge ];_fcbf ._efa [_cdcb ]=_becd ;_becd ++;};};if _aadfc =_fcgc .EncodeOOB (_fgb .IADW );
_aadfc !=nil {return 0,_df .Wrap (_aadfc ,_decd ,"\u0049\u0041\u0044\u0057");};};if _gbgdg =_fcgc .EncodeInteger (_fgb .IAEX ,0);_gbgdg !=nil {return 0,_df .Wrap (_gbgdg ,_decd ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};if _gbgdg =_fcgc .EncodeInteger (_fgb .IAEX ,len (_fcbf ._fae ));_gbgdg !=nil {return 0,_df .Wrap (_gbgdg ,_decd ,"\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0073\u0079m\u0062\u006f\u006c\u0073");};_fcgc .Final ();_ddag ,_gbgdg :=_fcgc .WriteTo (_aada );
if _gbgdg !=nil {return 0,_df .Wrap (_gbgdg ,_decd ,"\u0077\u0072i\u0074\u0069\u006e\u0067 \u0065\u006ec\u006f\u0064\u0065\u0072\u0020\u0063\u006f\u006et\u0065\u0078\u0074\u0020\u0074\u006f\u0020\u0027\u0077\u0027\u0020\u0077r\u0069\u0074\u0065\u0072");
};return int (_ddag ),nil ;};func (_fc *GenericRefinementRegion )GetRegionBitmap ()(*_ed .Bitmap ,error ){var _ec error ;_de .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _ec !=nil {_de .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0047\u0065\u0074R\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006dap\u0020\u0066a\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_ec );
}else {_de .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _fc .RegionBitmap !=nil {return _fc .RegionBitmap ,nil ;};_gc :=0;if _fc .ReferenceBitmap ==nil {_fc .ReferenceBitmap ,_ec =_fc .getGrReference ();if _ec !=nil {return nil ,_ec ;};};if _fc ._gfa ==nil {_fc ._gfa ,_ec =_c .New (_fc ._fga );if _ec !=nil {return nil ,_ec ;
};};if _fc ._bf ==nil {_fc ._bf =_c .NewStats (8192,1);};_fc .RegionBitmap =_ed .New (int (_fc .RegionInfo .BitmapWidth ),int (_fc .RegionInfo .BitmapHeight ));if _fc .TemplateID ==0{if _ec =_fc .updateOverride ();_ec !=nil {return nil ,_ec ;};};_bba :=(_fc .RegionBitmap .Width +7)&-8;
var _be int ;if _fc .IsTPGROn {_be =int (-_fc .ReferenceDY )*_fc .ReferenceBitmap .RowStride ;};_gcb :=_be +1;for _eag :=0;_eag < _fc .RegionBitmap .Height ;_eag ++{if _fc .IsTPGROn {_ca ,_ge :=_fc .decodeSLTP ();if _ge !=nil {return nil ,_ge ;};_gc ^=_ca ;
};if _gc ==0{_ec =_fc .decodeOptimized (_eag ,_fc .RegionBitmap .Width ,_fc .RegionBitmap .RowStride ,_fc .ReferenceBitmap .RowStride ,_bba ,_be ,_gcb );if _ec !=nil {return nil ,_ec ;};}else {_ec =_fc .decodeTypicalPredictedLine (_eag ,_fc .RegionBitmap .Width ,_fc .RegionBitmap .RowStride ,_fc .ReferenceBitmap .RowStride ,_bba ,_be );
if _ec !=nil {return nil ,_ec ;};};};return _fc .RegionBitmap ,nil ;};func (_dfca *Header )readSegmentNumber (_ggc *_d .Reader )error {const _bgfg ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";_ffcd :=make ([]byte ,4);
_ ,_dfg :=_ggc .Read (_ffcd );if _dfg !=nil {return _df .Wrap (_dfg ,_bgfg ,"");};_dfca .SegmentNumber =_gf .BigEndian .Uint32 (_ffcd );return nil ;};func (_bgeb *SymbolDictionary )decodeNewSymbols (_dbcb ,_edcce uint32 ,_ccfdc *_ed .Bitmap ,_egcb ,_ebda int32 )error {if _bgeb ._bdbf ==nil {_bgeb ._bdbf =_bad (_bgeb ._dgbb ,nil );
if _bgeb ._cfc ==nil {var _baga error ;_bgeb ._cfc ,_baga =_c .New (_bgeb ._dgbb );if _baga !=nil {return _baga ;};};if _bgeb ._eegg ==nil {_bgeb ._eegg =_c .NewStats (65536,1);};};_bgeb ._bdbf .setParameters (_bgeb ._eegg ,_bgeb ._cfc ,_bgeb .SdrTemplate ,_dbcb ,_edcce ,_ccfdc ,_egcb ,_ebda ,false ,_bgeb .SdrATX ,_bgeb .SdrATY );
return _bgeb .addSymbol (_bgeb ._bdbf );};var (_afcg Segmenter ;_bfbb =map[Type ]func ()Segmenter {TSymbolDictionary :func ()Segmenter {return &SymbolDictionary {}},TIntermediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateLosslessTextRegion :func ()Segmenter {return &TextRegion {}},TPatternDictionary :func ()Segmenter {return &PatternDictionary {}},TIntermediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateLosslessHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TIntermediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateLosslessGenericRegion :func ()Segmenter {return &GenericRegion {}},TIntermediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateLosslessGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TPageInformation :func ()Segmenter {return &PageInformationSegment {}},TEndOfPage :func ()Segmenter {return _afcg },TEndOfStrip :func ()Segmenter {return &EndOfStripe {}},TEndOfFile :func ()Segmenter {return _afcg },TProfiles :func ()Segmenter {return _afcg },TTables :func ()Segmenter {return &TableSegment {}},TExtension :func ()Segmenter {return _afcg },TBitmap :func ()Segmenter {return _afcg }};
);func (_fbaea *PatternDictionary )parseHeader ()error {_de .Log .Trace ("\u005b\u0050\u0041\u0054\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054I\u004f\u004e\u0041\u0052\u0059\u005d[\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d\u0020b\u0065\u0067\u0069\u006e");
defer func (){_de .Log .Trace ("\u005b\u0050\u0041T\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u005b\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
}();_ ,_fea :=_fbaea ._cgff .ReadBits (5);if _fea !=nil {return _fea ;};if _fea =_fbaea .readTemplate ();_fea !=nil {return _fea ;};if _fea =_fbaea .readIsMMREncoded ();_fea !=nil {return _fea ;};if _fea =_fbaea .readPatternWidthAndHeight ();_fea !=nil {return _fea ;
};if _fea =_fbaea .readGrayMax ();_fea !=nil {return _fea ;};if _fea =_fbaea .computeSegmentDataStructure ();_fea !=nil {return _fea ;};return _fbaea .checkInput ();};func (_cfda *GenericRegion )Size ()int {return _cfda .RegionSegment .Size ()+1+2*len (_cfda .GBAtX )};
type PageInformationSegment struct{_ggef *_d .Reader ;PageBMHeight int ;PageBMWidth int ;ResolutionX int ;ResolutionY int ;_cdcf bool ;_fbaa _ed .CombinationOperator ;_degf bool ;DefaultPixelValue uint8 ;_gdfga bool ;IsLossless bool ;IsStripe bool ;MaxStripeSize uint16 ;
};func (_eaf *GenericRegion )decodeSLTP ()(int ,error ){switch _eaf .GBTemplate {case 0:_eaf ._fgaa .SetIndex (0x9B25);case 1:_eaf ._fgaa .SetIndex (0x795);case 2:_eaf ._fgaa .SetIndex (0xE5);case 3:_eaf ._fgaa .SetIndex (0x195);};return _eaf ._deba .DecodeBit (_eaf ._fgaa );
};func (_dedb *RegionSegment )String ()string {_cdac :=&_gd .Builder {};_cdac .WriteString ("\u0009[\u0052E\u0047\u0049\u004f\u004e\u0020S\u0045\u0047M\u0045\u004e\u0054\u005d\u000a");_cdac .WriteString (_f .Sprintf ("\t\u0009\u002d\u0020\u0042\u0069\u0074m\u0061\u0070\u0020\u0028\u0077\u0069d\u0074\u0068\u002c\u0020\u0068\u0065\u0069g\u0068\u0074\u0029\u0020\u005b\u0025\u0064\u0078\u0025\u0064]\u000a",_dedb .BitmapWidth ,_dedb .BitmapHeight ));
_cdac .WriteString (_f .Sprintf ("\u0009\u0009\u002d\u0020L\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0028\u0078,\u0079)\u003a\u0020\u005b\u0025\u0064\u002c\u0025d\u005d\u000a",_dedb .XLocation ,_dedb .YLocation ));_cdac .WriteString (_f .Sprintf ("\t\u0009\u002d\u0020\u0043\u006f\u006db\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070e\u0072\u0061\u0074o\u0072:\u0020\u0025\u0073",_dedb .CombinaionOperator ));
return _cdac .String ();};func (_eec *PatternDictionary )extractPatterns (_aaae *_ed .Bitmap )error {var _dcag int ;_eefg :=make ([]*_ed .Bitmap ,_eec .GrayMax +1);for _dcag <=int (_eec .GrayMax ){_dfga :=int (_eec .HdpWidth )*_dcag ;_gbfa :=_a .Rect (_dfga ,0,_dfga +int (_eec .HdpWidth ),int (_eec .HdpHeight ));
_dgbg ,_eccf :=_ed .Extract (_gbfa ,_aaae );if _eccf !=nil {return _eccf ;};_eefg [_dcag ]=_dgbg ;_dcag ++;};_eec .Patterns =_eefg ;return nil ;};func (_gdgcd *SymbolDictionary )setRetainedCodingContexts (_bfeb *SymbolDictionary ){_gdgcd ._cfc =_bfeb ._cfc ;
_gdgcd .IsHuffmanEncoded =_bfeb .IsHuffmanEncoded ;_gdgcd .UseRefinementAggregation =_bfeb .UseRefinementAggregation ;_gdgcd .SdTemplate =_bfeb .SdTemplate ;_gdgcd .SdrTemplate =_bfeb .SdrTemplate ;_gdgcd .SdATX =_bfeb .SdATX ;_gdgcd .SdATY =_bfeb .SdATY ;
_gdgcd .SdrATX =_bfeb .SdrATX ;_gdgcd .SdrATY =_bfeb .SdrATY ;_gdgcd ._eegg =_bfeb ._eegg ;};func _adg (_cbbc int )int {if _cbbc ==0{return 0;};_cbbc |=_cbbc >>1;_cbbc |=_cbbc >>2;_cbbc |=_cbbc >>4;_cbbc |=_cbbc >>8;_cbbc |=_cbbc >>16;return (_cbbc +1)>>1;
};func (_ag *EndOfStripe )Init (h *Header ,r *_d .Reader )error {_ag ._bg =r ;return _ag .parseHeader ()};func (_dcdc *SymbolDictionary )Encode (w _d .BinaryWriter )(_efbe int ,_dgbbb error ){const _cbfb ="\u0053\u0079\u006dbo\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0045\u006e\u0063\u006f\u0064\u0065";
if _dcdc ==nil {return 0,_df .Error (_cbfb ,"\u0073\u0079m\u0062\u006f\u006c\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066in\u0065\u0064");};if _efbe ,_dgbbb =_dcdc .encodeFlags (w );_dgbbb !=nil {return _efbe ,_df .Wrap (_dgbbb ,_cbfb ,"");
};_cacd ,_dgbbb :=_dcdc .encodeATFlags (w );if _dgbbb !=nil {return _efbe ,_df .Wrap (_dgbbb ,_cbfb ,"");};_efbe +=_cacd ;if _cacd ,_dgbbb =_dcdc .encodeRefinementATFlags (w );_dgbbb !=nil {return _efbe ,_df .Wrap (_dgbbb ,_cbfb ,"");};_efbe +=_cacd ;if _cacd ,_dgbbb =_dcdc .encodeNumSyms (w );
_dgbbb !=nil {return _efbe ,_df .Wrap (_dgbbb ,_cbfb ,"");};_efbe +=_cacd ;if _cacd ,_dgbbb =_dcdc .encodeSymbols (w );_dgbbb !=nil {return _efbe ,_df .Wrap (_dgbbb ,_cbfb ,"");};_efbe +=_cacd ;return _efbe ,nil ;};func (_dbbg *PageInformationSegment )Encode (w _d .BinaryWriter )(_eeeg int ,_gdgc error ){const _cgdf ="\u0050\u0061g\u0065\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u002e\u0045\u006eco\u0064\u0065";
_aaa :=make ([]byte ,4);_gf .BigEndian .PutUint32 (_aaa ,uint32 (_dbbg .PageBMWidth ));_eeeg ,_gdgc =w .Write (_aaa );if _gdgc !=nil {return _eeeg ,_df .Wrap (_gdgc ,_cgdf ,"\u0077\u0069\u0064t\u0068");};_gf .BigEndian .PutUint32 (_aaa ,uint32 (_dbbg .PageBMHeight ));
var _bbda int ;_bbda ,_gdgc =w .Write (_aaa );if _gdgc !=nil {return _bbda +_eeeg ,_df .Wrap (_gdgc ,_cgdf ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_eeeg +=_bbda ;_gf .BigEndian .PutUint32 (_aaa ,uint32 (_dbbg .ResolutionX ));_bbda ,_gdgc =w .Write (_aaa );
if _gdgc !=nil {return _bbda +_eeeg ,_df .Wrap (_gdgc ,_cgdf ,"\u0078\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_eeeg +=_bbda ;_gf .BigEndian .PutUint32 (_aaa ,uint32 (_dbbg .ResolutionY ));if _bbda ,_gdgc =w .Write (_aaa );_gdgc !=nil {return _bbda +_eeeg ,_df .Wrap (_gdgc ,_cgdf ,"\u0079\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");
};_eeeg +=_bbda ;if _gdgc =_dbbg .encodeFlags (w );_gdgc !=nil {return _eeeg ,_df .Wrap (_gdgc ,_cgdf ,"");};_eeeg ++;if _bbda ,_gdgc =_dbbg .encodeStripingInformation (w );_gdgc !=nil {return _eeeg ,_df .Wrap (_gdgc ,_cgdf ,"");};_eeeg +=_bbda ;return _eeeg ,nil ;
};func (_cfgff *TextRegion )InitEncode (globalSymbolsMap ,localSymbolsMap map[int ]int ,comps []int ,inLL *_ed .Points ,symbols *_ed .Bitmaps ,classIDs *_fg .IntSlice ,boxes *_ed .Boxes ,width ,height ,symBits int ){_cfgff .RegionInfo =&RegionSegment {BitmapWidth :uint32 (width ),BitmapHeight :uint32 (height )};
_cfgff ._cccf =globalSymbolsMap ;_cfgff ._fadec =localSymbolsMap ;_cfgff ._edcd =comps ;_cfgff ._fdcf =inLL ;_cfgff ._dfac =symbols ;_cfgff ._cgae =classIDs ;_cfgff ._bffg =boxes ;_cfgff ._deeae =symBits ;};func (_gfff *PatternDictionary )checkInput ()error {if _gfff .HdpHeight < 1||_gfff .HdpWidth < 1{return _ef .New ("in\u0076\u0061l\u0069\u0064\u0020\u0048\u0065\u0061\u0064\u0065\u0072 \u0056\u0061\u006c\u0075\u0065\u003a\u0020\u0057\u0069\u0064\u0074\u0068\u002f\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020g\u0072e\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020z\u0065\u0072o");
};if _gfff .IsMMREncoded {if _gfff .HDTemplate !=0{_de .Log .Debug ("\u0076\u0061\u0072\u0069\u0061\u0062\u006c\u0065\u0020\u0048\u0044\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e \u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030");
};};return nil ;};func (_cadd *SymbolDictionary )decodeHeightClassCollectiveBitmap (_aefa int64 ,_bcded ,_bbcb uint32 )(*_ed .Bitmap ,error ){if _aefa ==0{_bcfg :=_ed .New (int (_bbcb ),int (_bcded ));var (_adeg byte ;_gbfab error ;);for _ageba :=0;_ageba < len (_bcfg .Data );
_ageba ++{_adeg ,_gbfab =_cadd ._dgbb .ReadByte ();if _gbfab !=nil {return nil ,_gbfab ;};if _gbfab =_bcfg .SetByte (_ageba ,_adeg );_gbfab !=nil {return nil ,_gbfab ;};};return _bcfg ,nil ;};if _cadd ._gag ==nil {_cadd ._gag =NewGenericRegion (_cadd ._dgbb );
};_cadd ._gag .setParameters (true ,_cadd ._dgbb .AbsolutePosition (),_aefa ,_bcded ,_bbcb );_eedeb ,_cfgac :=_cadd ._gag .GetRegionBitmap ();if _cfgac !=nil {return nil ,_cfgac ;};return _eedeb ,nil ;};func (_dabd *PageInformationSegment )readCombinationOperatorOverrideAllowed ()error {_fgeb ,_abbd :=_dabd ._ggef .ReadBit ();
if _abbd !=nil {return _abbd ;};if _fgeb ==1{_dabd ._cdcf =true ;};return nil ;};func (_ea *GenericRefinementRegion )Init (header *Header ,r *_d .Reader )error {_ea ._bb =header ;_ea ._fga =r ;_ea .RegionInfo =NewRegionSegment (r );return _ea .parseHeader ();
};func (_dged *TextRegion )setCodingStatistics ()error {if _dged ._fbdc ==nil {_dged ._fbdc =_c .NewStats (512,1);};if _dged ._dcfc ==nil {_dged ._dcfc =_c .NewStats (512,1);};if _dged ._dceg ==nil {_dged ._dceg =_c .NewStats (512,1);};if _dged ._gcgbc ==nil {_dged ._gcgbc =_c .NewStats (512,1);
};if _dged ._cbe ==nil {_dged ._cbe =_c .NewStats (512,1);};if _dged ._fgff ==nil {_dged ._fgff =_c .NewStats (512,1);};if _dged ._agda ==nil {_dged ._agda =_c .NewStats (512,1);};if _dged ._fbecb ==nil {_dged ._fbecb =_c .NewStats (1<<uint (_dged ._dbaf ),1);
};if _dged ._dcdb ==nil {_dged ._dcdb =_c .NewStats (512,1);};if _dged ._ffac ==nil {_dged ._ffac =_c .NewStats (512,1);};if _dged ._geg ==nil {var _fcddb error ;_dged ._geg ,_fcddb =_c .New (_dged ._fcdef );if _fcddb !=nil {return _fcddb ;};};return nil ;
};type template0 struct{};func (_babb *GenericRegion )setParameters (_fffd bool ,_fafa ,_ecc int64 ,_dag ,_bdbe uint32 ){_babb .IsMMREncoded =_fffd ;_babb .DataOffset =_fafa ;_babb .DataLength =_ecc ;_babb .RegionSegment .BitmapHeight =_dag ;_babb .RegionSegment .BitmapWidth =_bdbe ;
_babb ._aeb =nil ;_babb .Bitmap =nil ;};func (_agga *Header )writeFlags (_dabb _d .BinaryWriter )(_fgcf error ){const _efcc ="\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065F\u006c\u0061\u0067\u0073";_ddgb :=byte (_agga .Type );
if _fgcf =_dabb .WriteByte (_ddgb );_fgcf !=nil {return _df .Wrap (_fgcf ,_efcc ,"\u0077\u0072\u0069ti\u006e\u0067\u0020\u0073\u0065\u0067\u006d\u0065\u006et\u0020t\u0079p\u0065 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};if !_agga .RetainFlag &&!_agga .PageAssociationFieldSize {return nil ;};if _fgcf =_dabb .SkipBits (-8);_fgcf !=nil {return _df .Wrap (_fgcf ,_efcc ,"\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0062\u0061\u0063\u006b\u0020\u0074\u0068\u0065\u0020\u0062\u0069\u0074\u0073\u0020\u0066\u0061il\u0065\u0064");
};var _eega int ;if _agga .RetainFlag {_eega =1;};if _fgcf =_dabb .WriteBit (_eega );_fgcf !=nil {return _df .Wrap (_fgcf ,_efcc ,"\u0072\u0065\u0074\u0061in\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067\u0073");};_eega =0;if _agga .PageAssociationFieldSize {_eega =1;
};if _fgcf =_dabb .WriteBit (_eega );_fgcf !=nil {return _df .Wrap (_fgcf ,_efcc ,"p\u0061\u0067\u0065\u0020as\u0073o\u0063\u0069\u0061\u0074\u0069o\u006e\u0020\u0066\u006c\u0061\u0067");};_dabb .FinishByte ();return nil ;};func (_ecfb *TextRegion )symbolIDCodeLengths ()error {var (_ggea []*_bc .Code ;
_eacg uint64 ;_afga _bc .Tabler ;_aedg error ;);for _bbgbe :=0;_bbgbe < 35;_bbgbe ++{_eacg ,_aedg =_ecfb ._fcdef .ReadBits (4);if _aedg !=nil {return _aedg ;};_efcg :=int (_eacg &0xf);if _efcg > 0{_ggea =append (_ggea ,_bc .NewCode (int32 (_efcg ),0,int32 (_bbgbe ),false ));
};};_afga ,_aedg =_bc .NewFixedSizeTable (_ggea );if _aedg !=nil {return _aedg ;};var (_gbebf int64 ;_gfdg uint32 ;_feee []*_bc .Code ;_cgeg int64 ;);for _gfdg < _ecfb .NumberOfSymbols {_cgeg ,_aedg =_afga .Decode (_ecfb ._fcdef );if _aedg !=nil {return _aedg ;
};if _cgeg < 32{if _cgeg > 0{_feee =append (_feee ,_bc .NewCode (int32 (_cgeg ),0,int32 (_gfdg ),false ));};_gbebf =_cgeg ;_gfdg ++;}else {var _dfdb ,_bbgdc int64 ;switch _cgeg {case 32:_eacg ,_aedg =_ecfb ._fcdef .ReadBits (2);if _aedg !=nil {return _aedg ;
};_dfdb =3+int64 (_eacg );if _gfdg > 0{_bbgdc =_gbebf ;};case 33:_eacg ,_aedg =_ecfb ._fcdef .ReadBits (3);if _aedg !=nil {return _aedg ;};_dfdb =3+int64 (_eacg );case 34:_eacg ,_aedg =_ecfb ._fcdef .ReadBits (7);if _aedg !=nil {return _aedg ;};_dfdb =11+int64 (_eacg );
};for _ecgbd :=0;_ecgbd < int (_dfdb );_ecgbd ++{if _bbgdc > 0{_feee =append (_feee ,_bc .NewCode (int32 (_bbgdc ),0,int32 (_gfdg ),false ));};_gfdg ++;};};};_ecfb ._fcdef .Align ();_ecfb ._gbbg ,_aedg =_bc .NewFixedSizeTable (_feee );return _aedg ;};func (_gca *GenericRegion )Encode (w _d .BinaryWriter )(_aca int ,_cfga error ){const _cfgf ="G\u0065n\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069o\u006e\u002e\u0045\u006eco\u0064\u0065";
if _gca .Bitmap ==nil {return 0,_df .Error (_cfgf ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};_afg ,_cfga :=_gca .RegionSegment .Encode (w );if _cfga !=nil {return 0,_df .Wrap (_cfga ,_cfgf ,"\u0052\u0065\u0067\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};_aca +=_afg ;if _cfga =w .SkipBits (4);_cfga !=nil {return _aca ,_df .Wrap (_cfga ,_cfgf ,"\u0073k\u0069p\u0020\u0072\u0065\u0073\u0065r\u0076\u0065d\u0020\u0062\u0069\u0074\u0073");};var _gdf int ;if _gca .IsTPGDon {_gdf =1;};if _cfga =w .WriteBit (_gdf );
_cfga !=nil {return _aca ,_df .Wrap (_cfga ,_cfgf ,"\u0074\u0070\u0067\u0064\u006f\u006e");};_gdf =0;if _cfga =w .WriteBit (int (_gca .GBTemplate >>1)&0x01);_cfga !=nil {return _aca ,_df .Wrap (_cfga ,_cfgf ,"f\u0069r\u0073\u0074\u0020\u0067\u0062\u0074\u0065\u006dp\u006c\u0061\u0074\u0065 b\u0069\u0074");
};if _cfga =w .WriteBit (int (_gca .GBTemplate )&0x01);_cfga !=nil {return _aca ,_df .Wrap (_cfga ,_cfgf ,"s\u0065\u0063\u006f\u006ed \u0067b\u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u0062\u0069\u0074");};if _gca .UseMMR {_gdf =1;};if _cfga =w .WriteBit (_gdf );
_cfga !=nil {return _aca ,_df .Wrap (_cfga ,_cfgf ,"u\u0073\u0065\u0020\u004d\u004d\u0052\u0020\u0062\u0069\u0074");};_aca ++;if _afg ,_cfga =_gca .writeGBAtPixels (w );_cfga !=nil {return _aca ,_df .Wrap (_cfga ,_cfgf ,"");};_aca +=_afg ;_egb :=_fgb .New ();
if _cfga =_egb .EncodeBitmap (_gca .Bitmap ,_gca .IsTPGDon );_cfga !=nil {return _aca ,_df .Wrap (_cfga ,_cfgf ,"");};_egb .Final ();var _gfd int64 ;if _gfd ,_cfga =_egb .WriteTo (w );_cfga !=nil {return _aca ,_df .Wrap (_cfga ,_cfgf ,"");};_aca +=int (_gfd );
return _aca ,nil ;};func (_gcfb *RegionSegment )readCombinationOperator ()error {_eddc ,_gcgf :=_gcfb ._dafba .ReadBits (3);if _gcgf !=nil {return _gcgf ;};_gcfb .CombinaionOperator =_ed .CombinationOperator (_eddc &0xF);return nil ;};func (_dcbe *HalftoneRegion )GetRegionBitmap ()(*_ed .Bitmap ,error ){if _dcbe .HalftoneRegionBitmap !=nil {return _dcbe .HalftoneRegionBitmap ,nil ;
};var _cfdb error ;_dcbe .HalftoneRegionBitmap =_ed .New (int (_dcbe .RegionSegment .BitmapWidth ),int (_dcbe .RegionSegment .BitmapHeight ));if _dcbe .Patterns ==nil ||len (_dcbe .Patterns )==0{_dcbe .Patterns ,_cfdb =_dcbe .GetPatterns ();if _cfdb !=nil {return nil ,_cfdb ;
};};if _dcbe .HDefaultPixel ==1{_dcbe .HalftoneRegionBitmap .SetDefaultPixel ();};_fcee :=_e .Ceil (_e .Log (float64 (len (_dcbe .Patterns )))/_e .Log (2));_efca :=int (_fcee );var _bddd [][]int ;_bddd ,_cfdb =_dcbe .grayScaleDecoding (_efca );if _cfdb !=nil {return nil ,_cfdb ;
};if _cfdb =_dcbe .renderPattern (_bddd );_cfdb !=nil {return nil ,_cfdb ;};return _dcbe .HalftoneRegionBitmap ,nil ;};func (_aabg *SymbolDictionary )setSymbolsArray ()error {if _aabg ._bdfb ==nil {if _ggcg :=_aabg .retrieveImportSymbols ();_ggcg !=nil {return _ggcg ;
};};if _aabg ._eada ==nil {_aabg ._eada =append (_aabg ._eada ,_aabg ._bdfb ...);};return nil ;};func (_fffc *TextRegion )setParameters (_facdc *_c .Decoder ,_ecae ,_fgea bool ,_gbbf ,_ffgec uint32 ,_gdbf uint32 ,_dcbf int8 ,_efbg uint32 ,_dacga int8 ,_agaeb _ed .CombinationOperator ,_efcbb int8 ,_fafcd int16 ,_fbgg ,_adde ,_bagag ,_deda ,_dfgb ,_gdcg ,_gdcgf ,_abca ,_efec ,_eaba int8 ,_edb ,_ccfa []int8 ,_fegc []*_ed .Bitmap ,_cdaec int8 ){_fffc ._geg =_facdc ;
_fffc .IsHuffmanEncoded =_ecae ;_fffc .UseRefinement =_fgea ;_fffc .RegionInfo .BitmapWidth =_gbbf ;_fffc .RegionInfo .BitmapHeight =_ffgec ;_fffc .NumberOfSymbolInstances =_gdbf ;_fffc .SbStrips =_dcbf ;_fffc .NumberOfSymbols =_efbg ;_fffc .DefaultPixel =_dacga ;
_fffc .CombinationOperator =_agaeb ;_fffc .IsTransposed =_efcbb ;_fffc .ReferenceCorner =_fafcd ;_fffc .SbDsOffset =_fbgg ;_fffc .SbHuffFS =_adde ;_fffc .SbHuffDS =_bagag ;_fffc .SbHuffDT =_deda ;_fffc .SbHuffRDWidth =_dfgb ;_fffc .SbHuffRDHeight =_gdcg ;
_fffc .SbHuffRSize =_efec ;_fffc .SbHuffRDX =_gdcgf ;_fffc .SbHuffRDY =_abca ;_fffc .SbrTemplate =_eaba ;_fffc .SbrATX =_edb ;_fffc .SbrATY =_ccfa ;_fffc .Symbols =_fegc ;_fffc ._dbaf =_cdaec ;};func (_dfge *TableSegment )HtPS ()int32 {return _dfge ._dabf };
func (_daee *SymbolDictionary )getUserTable (_agfb int )(_bc .Tabler ,error ){var _cdaef int ;for _ ,_gebc :=range _daee .Header .RTSegments {if _gebc .Type ==53{if _cdaef ==_agfb {_adda ,_aggag :=_gebc .GetSegmentData ();if _aggag !=nil {return nil ,_aggag ;
};_facd :=_adda .(_bc .BasicTabler );return _bc .NewEncodedTable (_facd );};_cdaef ++;};};return nil ,nil ;};func (_cabe *SymbolDictionary )encodeNumSyms (_abgc _d .BinaryWriter )(_debb int ,_gaga error ){const _dcadd ="\u0065\u006e\u0063\u006f\u0064\u0065\u004e\u0075\u006d\u0053\u0079\u006d\u0073";
_acga :=make ([]byte ,4);_gf .BigEndian .PutUint32 (_acga ,_cabe .NumberOfExportedSymbols );if _debb ,_gaga =_abgc .Write (_acga );_gaga !=nil {return _debb ,_df .Wrap (_gaga ,_dcadd ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};_gf .BigEndian .PutUint32 (_acga ,_cabe .NumberOfNewSymbols );_gabee ,_gaga :=_abgc .Write (_acga );if _gaga !=nil {return _debb ,_df .Wrap (_gaga ,_dcadd ,"n\u0065\u0077\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};return _debb +_gabee ,nil ;
};func (_edgd *TextRegion )decodeStripT ()(_efag int64 ,_ccfe error ){if _edgd .IsHuffmanEncoded {if _edgd .SbHuffDT ==3{if _edgd ._beaaa ==nil {var _aagef int ;if _edgd .SbHuffFS ==3{_aagef ++;};if _edgd .SbHuffDS ==3{_aagef ++;};_edgd ._beaaa ,_ccfe =_edgd .getUserTable (_aagef );
if _ccfe !=nil {return 0,_ccfe ;};};_efag ,_ccfe =_edgd ._beaaa .Decode (_edgd ._fcdef );if _ccfe !=nil {return 0,_ccfe ;};}else {var _ccdg _bc .Tabler ;_ccdg ,_ccfe =_bc .GetStandardTable (11+int (_edgd .SbHuffDT ));if _ccfe !=nil {return 0,_ccfe ;};_efag ,_ccfe =_ccdg .Decode (_edgd ._fcdef );
if _ccfe !=nil {return 0,_ccfe ;};};}else {var _gceg int32 ;_gceg ,_ccfe =_edgd ._geg .DecodeInt (_edgd ._fbdc );if _ccfe !=nil {return 0,_ccfe ;};_efag =int64 (_gceg );};_efag *=int64 (-_edgd .SbStrips );return _efag ,nil ;};func (_gede *GenericRegion )GetRegionInfo ()*RegionSegment {return _gede .RegionSegment };
func (_da *GenericRefinementRegion )getGrReference ()(*_ed .Bitmap ,error ){segments :=_da ._bb .RTSegments ;if len (segments )==0{return nil ,_ef .New ("\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0065\u0078is\u0074\u0073");
};_dae ,_ffc :=segments [0].GetSegmentData ();if _ffc !=nil {return nil ,_ffc ;};_eed ,_dff :=_dae .(Regioner );if !_dff {return nil ,_f .Errorf ("\u0072\u0065\u0066\u0065\u0072r\u0065\u0064\u0020\u0074\u006f\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_dae );
};return _eed .GetRegionBitmap ();};type Documenter interface{GetPage (int )(Pager ,error );GetGlobalSegment (int )(*Header ,error );};type Pager interface{GetSegment (int )(*Header ,error );GetBitmap ()(*_ed .Bitmap ,error );};func (_gfcff *GenericRegion )GetRegionBitmap ()(_fcd *_ed .Bitmap ,_cfd error ){if _gfcff .Bitmap !=nil {return _gfcff .Bitmap ,nil ;
};if _gfcff .IsMMREncoded {if _gfcff ._aeb ==nil {_gfcff ._aeb ,_cfd =_ff .New (_gfcff ._adf ,int (_gfcff .RegionSegment .BitmapWidth ),int (_gfcff .RegionSegment .BitmapHeight ),_gfcff .DataOffset ,_gfcff .DataLength );if _cfd !=nil {return nil ,_cfd ;
};};_gfcff .Bitmap ,_cfd =_gfcff ._aeb .UncompressMMR ();return _gfcff .Bitmap ,_cfd ;};if _cfd =_gfcff .updateOverrideFlags ();_cfd !=nil {return nil ,_cfd ;};var _cfa int ;if _gfcff ._deba ==nil {_gfcff ._deba ,_cfd =_c .New (_gfcff ._adf );if _cfd !=nil {return nil ,_cfd ;
};};if _gfcff ._fgaa ==nil {_gfcff ._fgaa =_c .NewStats (65536,1);};_gfcff .Bitmap =_ed .New (int (_gfcff .RegionSegment .BitmapWidth ),int (_gfcff .RegionSegment .BitmapHeight ));_cbc :=int (uint32 (_gfcff .Bitmap .Width +7)&(^uint32 (7)));for _ead :=0;
_ead < _gfcff .Bitmap .Height ;_ead ++{if _gfcff .IsTPGDon {var _gaa int ;_gaa ,_cfd =_gfcff .decodeSLTP ();if _cfd !=nil {return nil ,_cfd ;};_cfa ^=_gaa ;};if _cfa ==1{if _ead > 0{if _cfd =_gfcff .copyLineAbove (_ead );_cfd !=nil {return nil ,_cfd ;};
};}else {if _cfd =_gfcff .decodeLine (_ead ,_gfcff .Bitmap .Width ,_cbc );_cfd !=nil {return nil ,_cfd ;};};};return _gfcff .Bitmap ,nil ;};func (_bfg *GenericRegion )updateOverrideFlags ()error {const _cda ="\u0075\u0070\u0064\u0061te\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _bfg .GBAtX ==nil ||_bfg .GBAtY ==nil {return nil ;};if len (_bfg .GBAtX )!=len (_bfg .GBAtY ){return _df .Errorf (_cda ,"i\u006eco\u0073i\u0073t\u0065\u006e\u0074\u0020\u0041T\u0020\u0070\u0069x\u0065\u006c\u002e\u0020\u0041m\u006f\u0075\u006et\u0020\u006f\u0066\u0020\u0027\u0078\u0027\u0020\u0070\u0069\u0078e\u006c\u0073\u003a %d\u002c\u0020\u0041\u006d\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0027\u0079\u0027\u0020\u0070\u0069\u0078e\u006cs\u003a\u0020\u0025\u0064",len (_bfg .GBAtX ),len (_bfg .GBAtY ));
};_bfg .GBAtOverride =make ([]bool ,len (_bfg .GBAtX ));switch _bfg .GBTemplate {case 0:if !_bfg .UseExtTemplates {if _bfg .GBAtX [0]!=3||_bfg .GBAtY [0]!=-1{_bfg .setOverrideFlag (0);};if _bfg .GBAtX [1]!=-3||_bfg .GBAtY [1]!=-1{_bfg .setOverrideFlag (1);
};if _bfg .GBAtX [2]!=2||_bfg .GBAtY [2]!=-2{_bfg .setOverrideFlag (2);};if _bfg .GBAtX [3]!=-2||_bfg .GBAtY [3]!=-2{_bfg .setOverrideFlag (3);};}else {if _bfg .GBAtX [0]!=-2||_bfg .GBAtY [0]!=0{_bfg .setOverrideFlag (0);};if _bfg .GBAtX [1]!=0||_bfg .GBAtY [1]!=-2{_bfg .setOverrideFlag (1);
};if _bfg .GBAtX [2]!=-2||_bfg .GBAtY [2]!=-1{_bfg .setOverrideFlag (2);};if _bfg .GBAtX [3]!=-1||_bfg .GBAtY [3]!=-2{_bfg .setOverrideFlag (3);};if _bfg .GBAtX [4]!=1||_bfg .GBAtY [4]!=-2{_bfg .setOverrideFlag (4);};if _bfg .GBAtX [5]!=2||_bfg .GBAtY [5]!=-1{_bfg .setOverrideFlag (5);
};if _bfg .GBAtX [6]!=-3||_bfg .GBAtY [6]!=0{_bfg .setOverrideFlag (6);};if _bfg .GBAtX [7]!=-4||_bfg .GBAtY [7]!=0{_bfg .setOverrideFlag (7);};if _bfg .GBAtX [8]!=2||_bfg .GBAtY [8]!=-2{_bfg .setOverrideFlag (8);};if _bfg .GBAtX [9]!=3||_bfg .GBAtY [9]!=-1{_bfg .setOverrideFlag (9);
};if _bfg .GBAtX [10]!=-2||_bfg .GBAtY [10]!=-2{_bfg .setOverrideFlag (10);};if _bfg .GBAtX [11]!=-3||_bfg .GBAtY [11]!=-1{_bfg .setOverrideFlag (11);};};case 1:if _bfg .GBAtX [0]!=3||_bfg .GBAtY [0]!=-1{_bfg .setOverrideFlag (0);};case 2:if _bfg .GBAtX [0]!=2||_bfg .GBAtY [0]!=-1{_bfg .setOverrideFlag (0);
};case 3:if _bfg .GBAtX [0]!=2||_bfg .GBAtY [0]!=-1{_bfg .setOverrideFlag (0);};};return nil ;};func (_ddgf *TextRegion )decodeRdh ()(int64 ,error ){const _gcaf ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064h";if _ddgf .IsHuffmanEncoded {if _ddgf .SbHuffRDHeight ==3{if _ddgf ._cfaec ==nil {var (_eeega int ;
_ddgde error ;);if _ddgf .SbHuffFS ==3{_eeega ++;};if _ddgf .SbHuffDS ==3{_eeega ++;};if _ddgf .SbHuffDT ==3{_eeega ++;};if _ddgf .SbHuffRDWidth ==3{_eeega ++;};_ddgf ._cfaec ,_ddgde =_ddgf .getUserTable (_eeega );if _ddgde !=nil {return 0,_df .Wrap (_ddgde ,_gcaf ,"");
};};return _ddgf ._cfaec .Decode (_ddgf ._fcdef );};_edfc ,_fbfa :=_bc .GetStandardTable (14+int (_ddgf .SbHuffRDHeight ));if _fbfa !=nil {return 0,_df .Wrap (_fbfa ,_gcaf ,"");};return _edfc .Decode (_ddgf ._fcdef );};_aege ,_fcgf :=_ddgf ._geg .DecodeInt (_ddgf ._agda );
if _fcgf !=nil {return 0,_df .Wrap (_fcgf ,_gcaf ,"");};return int64 (_aege ),nil ;};func (_gde *GenericRegion )decodeTemplate0a (_add ,_fed ,_gce int ,_facf ,_ccag int )(_egd error ){const _dbc ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0061";
var (_dbb ,_eeb int ;_bbgf ,_gdg int ;_fbd byte ;_cafd int ;);if _add >=1{_fbd ,_egd =_gde .Bitmap .GetByte (_ccag );if _egd !=nil {return _df .Wrap (_egd ,_dbc ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_bbgf =int (_fbd );};if _add >=2{_fbd ,_egd =_gde .Bitmap .GetByte (_ccag -_gde .Bitmap .RowStride );
if _egd !=nil {return _df .Wrap (_egd ,_dbc ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_gdg =int (_fbd )<<6;};_dbb =(_bbgf &0xf0)|(_gdg &0x3800);for _daae :=0;_daae < _gce ;_daae =_cafd {var (_decgg byte ;_afbc int ;);_cafd =_daae +8;if _feed :=_fed -_daae ;
_feed > 8{_afbc =8;}else {_afbc =_feed ;};if _add > 0{_bbgf <<=8;if _cafd < _fed {_fbd ,_egd =_gde .Bitmap .GetByte (_ccag +1);if _egd !=nil {return _df .Wrap (_egd ,_dbc ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_bbgf |=int (_fbd );};};if _add > 1{_gfce :=_ccag -_gde .Bitmap .RowStride +1;
_gdg <<=8;if _cafd < _fed {_fbd ,_egd =_gde .Bitmap .GetByte (_gfce );if _egd !=nil {return _df .Wrap (_egd ,_dbc ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_gdg |=int (_fbd )<<6;}else {_gdg |=0;};};for _ddeg :=0;_ddeg < _afbc ;_ddeg ++{_aafd :=uint (7-_ddeg );
if _gde ._fb {_eeb =_gde .overrideAtTemplate0a (_dbb ,_daae +_ddeg ,_add ,int (_decgg ),_ddeg ,int (_aafd ));_gde ._fgaa .SetIndex (int32 (_eeb ));}else {_gde ._fgaa .SetIndex (int32 (_dbb ));};var _bdce int ;_bdce ,_egd =_gde ._deba .DecodeBit (_gde ._fgaa );
if _egd !=nil {return _df .Wrap (_egd ,_dbc ,"");};_decgg |=byte (_bdce )<<_aafd ;_dbb =((_dbb &0x7bf7)<<1)|_bdce |((_bbgf >>_aafd )&0x10)|((_gdg >>_aafd )&0x800);};if _ccab :=_gde .Bitmap .SetByte (_facf ,_decgg );_ccab !=nil {return _df .Wrap (_ccab ,_dbc ,"");
};_facf ++;_ccag ++;};return nil ;};func (_bded *TextRegion )blit (_ddcff *_ed .Bitmap ,_adbg int64 )error {if _bded .IsTransposed ==0&&(_bded .ReferenceCorner ==2||_bded .ReferenceCorner ==3){_bded ._bfcd +=int64 (_ddcff .Width -1);}else if _bded .IsTransposed ==1&&(_bded .ReferenceCorner ==0||_bded .ReferenceCorner ==2){_bded ._bfcd +=int64 (_ddcff .Height -1);
};_dgdc :=_bded ._bfcd ;if _bded .IsTransposed ==1{_dgdc ,_adbg =_adbg ,_dgdc ;};switch _bded .ReferenceCorner {case 0:_adbg -=int64 (_ddcff .Height -1);case 2:_adbg -=int64 (_ddcff .Height -1);_dgdc -=int64 (_ddcff .Width -1);case 3:_dgdc -=int64 (_ddcff .Width -1);
};_afgb :=_ed .Blit (_ddcff ,_bded .RegionBitmap ,int (_dgdc ),int (_adbg ),_bded .CombinationOperator );if _afgb !=nil {return _afgb ;};if _bded .IsTransposed ==0&&(_bded .ReferenceCorner ==0||_bded .ReferenceCorner ==1){_bded ._bfcd +=int64 (_ddcff .Width -1);
};if _bded .IsTransposed ==1&&(_bded .ReferenceCorner ==1||_bded .ReferenceCorner ==3){_bded ._bfcd +=int64 (_ddcff .Height -1);};return nil ;};func (_agdc *TextRegion )String ()string {_cfcb :=&_gd .Builder {};_cfcb .WriteString ("\u000a[\u0054E\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u000a");
_cfcb .WriteString (_agdc .RegionInfo .String ()+"\u000a");_cfcb .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053br\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0025\u0076\u000a",_agdc .SbrTemplate ));_cfcb .WriteString (_f .Sprintf ("\u0009-\u0020S\u0062\u0044\u0073\u004f\u0066f\u0073\u0065t\u003a\u0020\u0025\u0076\u000a",_agdc .SbDsOffset ));
_cfcb .WriteString (_f .Sprintf ("\t\u002d \u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0050i\u0078\u0065\u006c\u003a %\u0076\u000a",_agdc .DefaultPixel ));_cfcb .WriteString (_f .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0076\u000a",_agdc .CombinationOperator ));
_cfcb .WriteString (_f .Sprintf ("\t\u002d \u0049\u0073\u0054\u0072\u0061\u006e\u0073\u0070o\u0073\u0065\u0064\u003a %\u0076\u000a",_agdc .IsTransposed ));_cfcb .WriteString (_f .Sprintf ("\u0009\u002d\u0020Re\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0043\u006f\u0072\u006e\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_agdc .ReferenceCorner ));
_cfcb .WriteString (_f .Sprintf ("\t\u002d\u0020\u0055\u0073eR\u0065f\u0069\u006e\u0065\u006d\u0065n\u0074\u003a\u0020\u0025\u0076\u000a",_agdc .UseRefinement ));_cfcb .WriteString (_f .Sprintf ("\u0009-\u0020\u0049\u0073\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045n\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0076\u000a",_agdc .IsHuffmanEncoded ));
if _agdc .IsHuffmanEncoded {_cfcb .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_agdc .SbHuffRSize ));_cfcb .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0059:\u0020\u0025\u0076\u000a",_agdc .SbHuffRDY ));
_cfcb .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0058:\u0020\u0025\u0076\u000a",_agdc .SbHuffRDX ));_cfcb .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069\u0067\u0068\u0074\u003a\u0020\u0025v\u000a",_agdc .SbHuffRDHeight ));
_cfcb .WriteString (_f .Sprintf ("\t\u002d\u0020\u0053\u0062Hu\u0066f\u0052\u0044\u0057\u0069\u0064t\u0068\u003a\u0020\u0025\u0076\u000a",_agdc .SbHuffRDWidth ));_cfcb .WriteString (_f .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0054\u003a\u0020\u0025\u0076\u000a",_agdc .SbHuffDT ));
_cfcb .WriteString (_f .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0053\u003a\u0020\u0025\u0076\u000a",_agdc .SbHuffDS ));_cfcb .WriteString (_f .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0046\u0053\u003a\u0020\u0025\u0076\u000a",_agdc .SbHuffFS ));
};_cfcb .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_agdc .SbrATX ));_cfcb .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0059:\u0020\u0025\u0076\u000a",_agdc .SbrATY ));
_cfcb .WriteString (_f .Sprintf ("\u0009\u002d\u0020N\u0075\u006d\u0062\u0065r\u004f\u0066\u0053\u0079\u006d\u0062\u006fl\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_agdc .NumberOfSymbolInstances ));_cfcb .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_agdc .SbrATX ));
return _cfcb .String ();};func (_bage *Header )readHeaderLength (_gfccc *_d .Reader ,_bcag int64 ){_bage .HeaderLength =_gfccc .AbsolutePosition ()-_bcag ;};func (_ggge *SymbolDictionary )decodeAggregate (_cdeec ,_ecb uint32 )error {var (_eedd int64 ;_cdcg error ;
);if _ggge .IsHuffmanEncoded {_eedd ,_cdcg =_ggge .huffDecodeRefAggNInst ();if _cdcg !=nil {return _cdcg ;};}else {_begg ,_efeaa :=_ggge ._cfc .DecodeInt (_ggge ._ffdd );if _efeaa !=nil {return _efeaa ;};_eedd =int64 (_begg );};if _eedd > 1{return _ggge .decodeThroughTextRegion (_cdeec ,_ecb ,uint32 (_eedd ));
}else if _eedd ==1{return _ggge .decodeRefinedSymbol (_cdeec ,_ecb );};return nil ;};func (_cdef *TextRegion )setContexts (_bbcda *_c .DecoderStats ,_dcaa *_c .DecoderStats ,_fcbdf *_c .DecoderStats ,_eagfd *_c .DecoderStats ,_edcbea *_c .DecoderStats ,_gbcfd *_c .DecoderStats ,_gggf *_c .DecoderStats ,_cbca *_c .DecoderStats ,_aadfg *_c .DecoderStats ,_bfab *_c .DecoderStats ){_cdef ._fbdc =_dcaa ;
_cdef ._dcfc =_fcbdf ;_cdef ._dceg =_eagfd ;_cdef ._gcgbc =_edcbea ;_cdef ._fgff =_gggf ;_cdef ._agda =_cbca ;_cdef ._fbecb =_gbcfd ;_cdef ._dcdb =_aadfg ;_cdef ._ffac =_bfab ;_cdef ._bbad =_bbcda ;};func (_bfd *Header )CleanSegmentData (){if _bfd .SegmentData !=nil {_bfd .SegmentData =nil ;
};};func (_efef *GenericRegion )decodeTemplate1 (_adba ,_eef ,_abe int ,_fbg ,_gade int )(_faa error ){const _ggfg ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0031";var (_eadf ,_dfc int ;_cced ,_ddca int ;_fbc byte ;_afc ,_agfa int ;
);if _adba >=1{_fbc ,_faa =_efef .Bitmap .GetByte (_gade );if _faa !=nil {return _df .Wrap (_faa ,_ggfg ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_cced =int (_fbc );};if _adba >=2{_fbc ,_faa =_efef .Bitmap .GetByte (_gade -_efef .Bitmap .RowStride );
if _faa !=nil {return _df .Wrap (_faa ,_ggfg ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_ddca =int (_fbc )<<5;};_eadf =((_cced >>1)&0x1f8)|((_ddca >>1)&0x1e00);for _cae :=0;_cae < _abe ;_cae =_afc {var (_dacc byte ;_eeef int ;);_afc =_cae +8;if _gcc :=_eef -_cae ;
_gcc > 8{_eeef =8;}else {_eeef =_gcc ;};if _adba > 0{_cced <<=8;if _afc < _eef {_fbc ,_faa =_efef .Bitmap .GetByte (_gade +1);if _faa !=nil {return _df .Wrap (_faa ,_ggfg ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_cced |=int (_fbc );};};if _adba > 1{_ddca <<=8;
if _afc < _eef {_fbc ,_faa =_efef .Bitmap .GetByte (_gade -_efef .Bitmap .RowStride +1);if _faa !=nil {return _df .Wrap (_faa ,_ggfg ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_ddca |=int (_fbc )<<5;};};for _fdg :=0;_fdg < _eeef ;_fdg ++{if _efef ._fb {_dfc =_efef .overrideAtTemplate1 (_eadf ,_cae +_fdg ,_adba ,int (_dacc ),_fdg );
_efef ._fgaa .SetIndex (int32 (_dfc ));}else {_efef ._fgaa .SetIndex (int32 (_eadf ));};_agfa ,_faa =_efef ._deba .DecodeBit (_efef ._fgaa );if _faa !=nil {return _df .Wrap (_faa ,_ggfg ,"");};_dacc |=byte (_agfa )<<uint (7-_fdg );_dabe :=uint (8-_fdg );
_eadf =((_eadf &0xefb)<<1)|_agfa |((_cced >>_dabe )&0x8)|((_ddca >>_dabe )&0x200);};if _baa :=_efef .Bitmap .SetByte (_fbg ,_dacc );_baa !=nil {return _df .Wrap (_baa ,_ggfg ,"");};_fbg ++;_gade ++;};return nil ;};func (_bfba *PatternDictionary )computeSegmentDataStructure ()error {_bfba .DataOffset =_bfba ._cgff .AbsolutePosition ();
_bfba .DataHeaderLength =_bfba .DataOffset -_bfba .DataHeaderOffset ;_bfba .DataLength =int64 (_bfba ._cgff .AbsoluteLength ())-_bfba .DataHeaderLength ;return nil ;};func (_abbf *SymbolDictionary )checkInput ()error {if _abbf .SdHuffDecodeHeightSelection ==2{_de .Log .Debug ("\u0053\u0079\u006d\u0062\u006fl\u0020\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u0053e\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0070\u0065r\u006d\u0069\u0074\u0074\u0065\u0064",_abbf .SdHuffDecodeHeightSelection );
};if _abbf .SdHuffDecodeWidthSelection ==2{_de .Log .Debug ("\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0057\u0069\u0064t\u0068\u0020\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061l\u0075\u0065\u0020\u006e\u006f\u0074 \u0070\u0065r\u006d\u0069t\u0074e\u0064",_abbf .SdHuffDecodeWidthSelection );
};if _abbf .IsHuffmanEncoded {if _abbf .SdTemplate !=0{_de .Log .Debug ("\u0053\u0044T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e \u0030\u0029",_abbf .SdTemplate );
};if !_abbf .UseRefinementAggregation {if !_abbf .UseRefinementAggregation {if _abbf ._cfbb {_de .Log .Debug ("\u0049\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074ex\u0074\u0052\u0065\u0074\u0061\u0069n\u0065\u0064\u0020\u003d\u0020\u0074\u0072\u0075\u0065\u0020\u0028\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0066\u0061\u006cs\u0065\u0029");
_abbf ._cfbb =false ;};if _abbf ._bfdd {_de .Log .Debug ("\u0069s\u0043\u006fd\u0069\u006e\u0067\u0043o\u006e\u0074\u0065x\u0074\u0055\u0073\u0065\u0064\u0020\u003d\u0020\u0074ru\u0065\u0020\u0028s\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020f\u0061\u006cs\u0065\u0029");
_abbf ._bfdd =false ;};};};}else {if _abbf .SdHuffBMSizeSelection !=0{_de .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066B\u004d\u0053\u0069\u007a\u0065\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_abbf .SdHuffBMSizeSelection =0;};if _abbf .SdHuffDecodeWidthSelection !=0{_de .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068\u0053\u0065\u006c\u0065\u0063\u0074\u0069o\u006e\u0020\u0073\u0068\u006fu\u006c\u0064 \u0062\u0065\u0020\u0030");
_abbf .SdHuffDecodeWidthSelection =0;};if _abbf .SdHuffDecodeHeightSelection !=0{_de .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0048e\u0069\u0067\u0068\u0074\u0053\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_abbf .SdHuffDecodeHeightSelection =0;};};if !_abbf .UseRefinementAggregation {if _abbf .SdrTemplate !=0{_de .Log .Debug ("\u0053\u0044\u0052\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u003d\u0020\u0025\u0064\u0020\u0028s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_abbf .SdrTemplate );
_abbf .SdrTemplate =0;};};if !_abbf .IsHuffmanEncoded ||!_abbf .UseRefinementAggregation {if _abbf .SdHuffAggInstanceSelection {_de .Log .Debug ("\u0053d\u0048\u0075f\u0066\u0041\u0067g\u0049\u006e\u0073\u0074\u0061\u006e\u0063e\u0053\u0065\u006c\u0065\u0063\u0074i\u006f\u006e\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_abbf .SdHuffAggInstanceSelection );
};};return nil ;};func (_gecg *PageInformationSegment )readDefaultPixelValue ()error {_eaeec ,_fbff :=_gecg ._ggef .ReadBit ();if _fbff !=nil {return _fbff ;};_gecg .DefaultPixelValue =uint8 (_eaeec &0xf);return nil ;};func (_bbgd *GenericRegion )overrideAtTemplate0a (_gdagg ,_cadg ,_acad ,_gdgd ,_afgc ,_dbcf int )int {if _bbgd .GBAtOverride [0]{_gdagg &=0xFFEF;
if _bbgd .GBAtY [0]==0&&_bbgd .GBAtX [0]>=-int8 (_afgc ){_gdagg |=(_gdgd >>uint (int8 (_dbcf )-_bbgd .GBAtX [0]&0x1))<<4;}else {_gdagg |=int (_bbgd .getPixel (_cadg +int (_bbgd .GBAtX [0]),_acad +int (_bbgd .GBAtY [0])))<<4;};};if _bbgd .GBAtOverride [1]{_gdagg &=0xFBFF;
if _bbgd .GBAtY [1]==0&&_bbgd .GBAtX [1]>=-int8 (_afgc ){_gdagg |=(_gdgd >>uint (int8 (_dbcf )-_bbgd .GBAtX [1]&0x1))<<10;}else {_gdagg |=int (_bbgd .getPixel (_cadg +int (_bbgd .GBAtX [1]),_acad +int (_bbgd .GBAtY [1])))<<10;};};if _bbgd .GBAtOverride [2]{_gdagg &=0xF7FF;
if _bbgd .GBAtY [2]==0&&_bbgd .GBAtX [2]>=-int8 (_afgc ){_gdagg |=(_gdgd >>uint (int8 (_dbcf )-_bbgd .GBAtX [2]&0x1))<<11;}else {_gdagg |=int (_bbgd .getPixel (_cadg +int (_bbgd .GBAtX [2]),_acad +int (_bbgd .GBAtY [2])))<<11;};};if _bbgd .GBAtOverride [3]{_gdagg &=0x7FFF;
if _bbgd .GBAtY [3]==0&&_bbgd .GBAtX [3]>=-int8 (_afgc ){_gdagg |=(_gdgd >>uint (int8 (_dbcf )-_bbgd .GBAtX [3]&0x1))<<15;}else {_gdagg |=int (_bbgd .getPixel (_cadg +int (_bbgd .GBAtX [3]),_acad +int (_bbgd .GBAtY [3])))<<15;};};return _gdagg ;};func (_gfef *SymbolDictionary )setRefinementAtPixels ()error {if !_gfef .UseRefinementAggregation ||_gfef .SdrTemplate !=0{return nil ;
};if _cfcg :=_gfef .readRefinementAtPixels (2);_cfcg !=nil {return _cfcg ;};return nil ;};func (_afeg *PageInformationSegment )readCombinationOperator ()error {_acf ,_abcd :=_afeg ._ggef .ReadBits (2);if _abcd !=nil {return _abcd ;};_afeg ._fbaa =_ed .CombinationOperator (int (_acf ));
return nil ;};func (_edge *RegionSegment )Encode (w _d .BinaryWriter )(_cece int ,_dfcd error ){const _aead ="R\u0065g\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065n\u0074\u002e\u0045\u006eco\u0064\u0065";_fcg :=make ([]byte ,4);_gf .BigEndian .PutUint32 (_fcg ,_edge .BitmapWidth );
_cece ,_dfcd =w .Write (_fcg );if _dfcd !=nil {return 0,_df .Wrap (_dfcd ,_aead ,"\u0057\u0069\u0064t\u0068");};_gf .BigEndian .PutUint32 (_fcg ,_edge .BitmapHeight );var _gaad int ;_gaad ,_dfcd =w .Write (_fcg );if _dfcd !=nil {return 0,_df .Wrap (_dfcd ,_aead ,"\u0048\u0065\u0069\u0067\u0068\u0074");
};_cece +=_gaad ;_gf .BigEndian .PutUint32 (_fcg ,_edge .XLocation );_gaad ,_dfcd =w .Write (_fcg );if _dfcd !=nil {return 0,_df .Wrap (_dfcd ,_aead ,"\u0058L\u006f\u0063\u0061\u0074\u0069\u006fn");};_cece +=_gaad ;_gf .BigEndian .PutUint32 (_fcg ,_edge .YLocation );
_gaad ,_dfcd =w .Write (_fcg );if _dfcd !=nil {return 0,_df .Wrap (_dfcd ,_aead ,"\u0059L\u006f\u0063\u0061\u0074\u0069\u006fn");};_cece +=_gaad ;if _dfcd =w .WriteByte (byte (_edge .CombinaionOperator )&0x07);_dfcd !=nil {return 0,_df .Wrap (_dfcd ,_aead ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");
};_cece ++;return _cece ,nil ;};type TextRegion struct{_fcdef *_d .Reader ;RegionInfo *RegionSegment ;SbrTemplate int8 ;SbDsOffset int8 ;DefaultPixel int8 ;CombinationOperator _ed .CombinationOperator ;IsTransposed int8 ;ReferenceCorner int16 ;LogSBStrips int16 ;
UseRefinement bool ;IsHuffmanEncoded bool ;SbHuffRSize int8 ;SbHuffRDY int8 ;SbHuffRDX int8 ;SbHuffRDHeight int8 ;SbHuffRDWidth int8 ;SbHuffDT int8 ;SbHuffDS int8 ;SbHuffFS int8 ;SbrATX []int8 ;SbrATY []int8 ;NumberOfSymbolInstances uint32 ;_bfcd int64 ;
SbStrips int8 ;NumberOfSymbols uint32 ;RegionBitmap *_ed .Bitmap ;Symbols []*_ed .Bitmap ;_geg *_c .Decoder ;_cfde *GenericRefinementRegion ;_fbdc *_c .DecoderStats ;_dcfc *_c .DecoderStats ;_dceg *_c .DecoderStats ;_gcgbc *_c .DecoderStats ;_cbe *_c .DecoderStats ;
_fgff *_c .DecoderStats ;_agda *_c .DecoderStats ;_fbecb *_c .DecoderStats ;_dcdb *_c .DecoderStats ;_ffac *_c .DecoderStats ;_bbad *_c .DecoderStats ;_dbaf int8 ;_gbbg *_bc .FixedSizeTable ;Header *Header ;_fcdg _bc .Tabler ;_fgbf _bc .Tabler ;_beaaa _bc .Tabler ;
_ffge _bc .Tabler ;_cfaec _bc .Tabler ;_bggf _bc .Tabler ;_gcef _bc .Tabler ;_egfb _bc .Tabler ;_cccf ,_fadec map[int ]int ;_edcd []int ;_fdcf *_ed .Points ;_dfac *_ed .Bitmaps ;_cgae *_fg .IntSlice ;_gcfc ,_deeae int ;_bffg *_ed .Boxes ;};func (_ccgd *TextRegion )decodeDfs ()(int64 ,error ){if _ccgd .IsHuffmanEncoded {if _ccgd .SbHuffFS ==3{if _ccgd ._fcdg ==nil {var _gggcb error ;
_ccgd ._fcdg ,_gggcb =_ccgd .getUserTable (0);if _gggcb !=nil {return 0,_gggcb ;};};return _ccgd ._fcdg .Decode (_ccgd ._fcdef );};_dbbdd ,_gcgd :=_bc .GetStandardTable (6+int (_ccgd .SbHuffFS ));if _gcgd !=nil {return 0,_gcgd ;};return _dbbdd .Decode (_ccgd ._fcdef );
};_bgcgb ,_bgac :=_ccgd ._geg .DecodeInt (_ccgd ._dcfc );if _bgac !=nil {return 0,_bgac ;};return int64 (_bgcgb ),nil ;};func (_ceee *template1 )setIndex (_bcdg *_c .DecoderStats ){_bcdg .SetIndex (0x080)};func (_dga *HalftoneRegion )computeGrayScalePlanes (_bfge []*_ed .Bitmap ,_daga int )([][]int ,error ){_bbag :=make ([][]int ,_dga .HGridHeight );
for _gcdf :=0;_gcdf < len (_bbag );_gcdf ++{_bbag [_gcdf ]=make ([]int ,_dga .HGridWidth );};for _bgfe :=0;_bgfe < int (_dga .HGridHeight );_bgfe ++{for _dbdd :=0;_dbdd < int (_dga .HGridWidth );_dbdd +=8{var _badc int ;if _aecg :=int (_dga .HGridWidth )-_dbdd ;
_aecg > 8{_badc =8;}else {_badc =_aecg ;};_afcf :=_bfge [0].GetByteIndex (_dbdd ,_bgfe );for _cbf :=0;_cbf < _badc ;_cbf ++{_fbbd :=_cbf +_dbdd ;_bbag [_bgfe ][_fbbd ]=0;for _eede :=0;_eede < _daga ;_eede ++{_gebb ,_abba :=_bfge [_eede ].GetByte (_afcf );
if _abba !=nil {return nil ,_abba ;};_fade :=_gebb >>uint (7-_fbbd &7);_gcgb :=_fade &1;_bfb :=1<<uint (_eede );_bbfb :=int (_gcgb )*_bfb ;_bbag [_bgfe ][_fbbd ]+=_bbfb ;};};};};return _bbag ,nil ;};func (_cba *PatternDictionary )readTemplate ()error {_begb ,_aabc :=_cba ._cgff .ReadBits (2);
if _aabc !=nil {return _aabc ;};_cba .HDTemplate =byte (_begb );return nil ;};func (_fbdfe *TextRegion )decodeIds ()(int64 ,error ){const _ddcd ="\u0064e\u0063\u006f\u0064\u0065\u0049\u0064s";if _fbdfe .IsHuffmanEncoded {if _fbdfe .SbHuffDS ==3{if _fbdfe ._fgbf ==nil {_bcaf :=0;
if _fbdfe .SbHuffFS ==3{_bcaf ++;};var _bdedf error ;_fbdfe ._fgbf ,_bdedf =_fbdfe .getUserTable (_bcaf );if _bdedf !=nil {return 0,_df .Wrap (_bdedf ,_ddcd ,"");};};return _fbdfe ._fgbf .Decode (_fbdfe ._fcdef );};_bdcf ,_fbfga :=_bc .GetStandardTable (8+int (_fbdfe .SbHuffDS ));
if _fbfga !=nil {return 0,_df .Wrap (_fbfga ,_ddcd ,"");};return _bdcf .Decode (_fbdfe ._fcdef );};_fgac ,_bfadc :=_fbdfe ._geg .DecodeInt (_fbdfe ._dceg );if _bfadc !=nil {return 0,_df .Wrap (_bfadc ,_ddcd ,"\u0063\u0078\u0049\u0041\u0044\u0053");};return int64 (_fgac ),nil ;
};func (_ddddb *SymbolDictionary )setExportedSymbols (_ffbf []int ){for _bgbbb :=uint32 (0);_bgbbb < _ddddb ._dabdg +_ddddb .NumberOfNewSymbols ;_bgbbb ++{if _ffbf [_bgbbb ]==1{var _bcc *_ed .Bitmap ;if _bgbbb < _ddddb ._dabdg {_bcc =_ddddb ._bdfb [_bgbbb ];
}else {_bcc =_ddddb ._bbfd [_bgbbb -_ddddb ._dabdg ];};_de .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u002d\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u0020\u0041\u0064\u0064 E\u0078\u0070\u006fr\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027%\u0073\u0027",_bcc );
_ddddb ._ebba =append (_ddddb ._ebba ,_bcc );};};};func (_eea *Header )subInputReader ()(*_d .Reader ,error ){_beg :=int (_eea .SegmentDataLength );if _eea .SegmentDataLength ==_e .MaxInt32 {_beg =-1;};return _eea .Reader .NewPartialReader (int (_eea .SegmentDataStartOffset ),_beg ,false );
};func (_gbde *GenericRegion )setParametersMMR (_edgc bool ,_aba ,_edea int64 ,_abeg ,_gff uint32 ,_fbfg byte ,_ebd ,_fcbe bool ,_afbg ,_eaec []int8 ){_gbde .DataOffset =_aba ;_gbde .DataLength =_edea ;_gbde .RegionSegment =&RegionSegment {};_gbde .RegionSegment .BitmapHeight =_abeg ;
_gbde .RegionSegment .BitmapWidth =_gff ;_gbde .GBTemplate =_fbfg ;_gbde .IsMMREncoded =_edgc ;_gbde .IsTPGDon =_ebd ;_gbde .GBAtX =_afbg ;_gbde .GBAtY =_eaec ;};func (_bgbc *TextRegion )decodeSymInRefSize ()(int64 ,error ){const _edeg ="\u0064e\u0063o\u0064\u0065\u0053\u0079\u006dI\u006e\u0052e\u0066\u0053\u0069\u007a\u0065";
if _bgbc .SbHuffRSize ==0{_ddad ,_bedgf :=_bc .GetStandardTable (1);if _bedgf !=nil {return 0,_df .Wrap (_bedgf ,_edeg ,"");};return _ddad .Decode (_bgbc ._fcdef );};if _bgbc ._egfb ==nil {var (_gegf int ;_ddagg error ;);if _bgbc .SbHuffFS ==3{_gegf ++;
};if _bgbc .SbHuffDS ==3{_gegf ++;};if _bgbc .SbHuffDT ==3{_gegf ++;};if _bgbc .SbHuffRDWidth ==3{_gegf ++;};if _bgbc .SbHuffRDHeight ==3{_gegf ++;};if _bgbc .SbHuffRDX ==3{_gegf ++;};if _bgbc .SbHuffRDY ==3{_gegf ++;};_bgbc ._egfb ,_ddagg =_bgbc .getUserTable (_gegf );
if _ddagg !=nil {return 0,_df .Wrap (_ddagg ,_edeg ,"");};};_cfaf ,_cgecf :=_bgbc ._egfb .Decode (_bgbc ._fcdef );if _cgecf !=nil {return 0,_df .Wrap (_cgecf ,_edeg ,"");};return _cfaf ,nil ;};func (_afba *SymbolDictionary )parseHeader ()(_fbcf error ){_de .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _fbcf !=nil {_de .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u0020\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u005b\u0050\u0041\u0052SE\u002d\u0048\u0045A\u0044\u0045R\u005d\u0020\u0066\u0061\u0069\u006ce\u0064\u002e \u0025\u0076",_fbcf );
}else {_de .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _fbcf =_afba .readRegionFlags ();_fbcf !=nil {return _fbcf ;};if _fbcf =_afba .setAtPixels ();_fbcf !=nil {return _fbcf ;};if _fbcf =_afba .setRefinementAtPixels ();_fbcf !=nil {return _fbcf ;};if _fbcf =_afba .readNumberOfExportedSymbols ();_fbcf !=nil {return _fbcf ;
};if _fbcf =_afba .readNumberOfNewSymbols ();_fbcf !=nil {return _fbcf ;};if _fbcf =_afba .setInSyms ();_fbcf !=nil {return _fbcf ;};if _afba ._bfdd {_abbga :=_afba .Header .RTSegments ;for _faad :=len (_abbga )-1;_faad >=0;_faad --{if _abbga [_faad ].Type ==0{_faff ,_cdca :=_abbga [_faad ].SegmentData .(*SymbolDictionary );
if !_cdca {_fbcf =_f .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074:\u0020\u0025\u0076\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020S\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_abbga [_faad ]);
return _fbcf ;};if _faff ._bfdd {_afba .setRetainedCodingContexts (_faff );};break ;};};};if _fbcf =_afba .checkInput ();_fbcf !=nil {return _fbcf ;};return nil ;};func (_agc *HalftoneRegion )Init (hd *Header ,r *_d .Reader )error {_agc ._eafd =r ;_agc ._gbbd =hd ;
_agc .RegionSegment =NewRegionSegment (r );return _agc .parseHeader ();};func (_afca Type )String ()string {switch _afca {case TSymbolDictionary :return "\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079";
case TIntermediateTextRegion :return "\u0049n\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020T\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateTextRegion :return "I\u006d\u006d\u0065\u0064ia\u0074e\u0020\u0054\u0065\u0078\u0074 \u0052\u0065\u0067\u0069\u006f\u006e";
case TImmediateLosslessTextRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020L\u006f\u0073\u0073\u006c\u0065\u0073\u0073 \u0054\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TPatternDictionary :return "\u0050a\u0074t\u0065\u0072\u006e\u0020\u0044i\u0063\u0074i\u006f\u006e\u0061\u0072\u0079";
case TIntermediateHalftoneRegion :return "\u0049\u006e\u0074\u0065r\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0048\u0061l\u0066t\u006f\u006e\u0065\u0020\u0052\u0065\u0067i\u006f\u006e";case TImmediateHalftoneRegion :return "\u0049m\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u0048\u0061l\u0066t\u006fn\u0065\u0020\u0052\u0065\u0067\u0069\u006fn";
case TImmediateLosslessHalftoneRegion :return "\u0049\u006d\u006ded\u0069\u0061\u0074\u0065\u0020\u004c\u006f\u0073\u0073l\u0065s\u0073 \u0048a\u006c\u0066\u0074\u006f\u006e\u0065\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TIntermediateGenericRegion :return "I\u006e\u0074\u0065\u0072\u006d\u0065d\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020R\u0065g\u0069\u006f\u006e";
case TImmediateGenericRegion :return "\u0049m\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006ee\u0072\u0069\u0063\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessGenericRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u004c\u006f\u0073\u0073\u006c\u0065\u0073\u0073\u0020\u0047e\u006e\u0065\u0072\u0069\u0063\u0020\u0052e\u0067\u0069\u006f\u006e";
case TIntermediateGenericRefinementRegion :return "\u0049\u006e\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0020\u0052\u0065\u0066i\u006e\u0065\u006d\u0065\u006et\u0020\u0052e\u0067\u0069\u006f\u006e";
case TImmediateGenericRefinementRegion :return "I\u006d\u006d\u0065\u0064\u0069\u0061t\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020\u0052\u0065\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020\u0052\u0065\u0067\u0069o\u006e";case TImmediateLosslessGenericRefinementRegion :return "\u0049m\u006d\u0065d\u0069\u0061\u0074\u0065 \u004c\u006f\u0073s\u006c\u0065\u0073\u0073\u0020\u0047\u0065\u006e\u0065ri\u0063\u0020\u0052e\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020R\u0065\u0067i\u006f\u006e";
case TPageInformation :return "\u0050\u0061g\u0065\u0020\u0049n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e";case TEndOfPage :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0050\u0061\u0067\u0065";case TEndOfStrip :return "\u0045\u006e\u0064 \u004f\u0066\u0020\u0053\u0074\u0072\u0069\u0070";
case TEndOfFile :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0046\u0069\u006c\u0065";case TProfiles :return "\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0073";case TTables :return "\u0054\u0061\u0062\u006c\u0065\u0073";case TExtension :return "\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn";
case TBitmap :return "\u0042\u0069\u0074\u006d\u0061\u0070";};return "I\u006ev\u0061\u006c\u0069\u0064\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0020Ki\u006e\u0064";};func (_efgc *Header )readHeaderFlags ()error {const _cgbd ="\u0072e\u0061d\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006c\u0061\u0067\u0073";
_fadg ,_abcgc :=_efgc .Reader .ReadBit ();if _abcgc !=nil {return _df .Wrap (_abcgc ,_cgbd ,"r\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067");};if _fadg !=0{_efgc .RetainFlag =true ;};_fadg ,_abcgc =_efgc .Reader .ReadBit ();if _abcgc !=nil {return _df .Wrap (_abcgc ,_cgbd ,"\u0070\u0061g\u0065\u0020\u0061s\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e");
};if _fadg !=0{_efgc .PageAssociationFieldSize =true ;};_ffcf ,_abcgc :=_efgc .Reader .ReadBits (6);if _abcgc !=nil {return _df .Wrap (_abcgc ,_cgbd ,"\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065");};_efgc .Type =Type (int (_ffcf ));
return nil ;};type template1 struct{};func (_ade *GenericRegion )Init (h *Header ,r *_d .Reader )error {_ade .RegionSegment =NewRegionSegment (r );_ade ._adf =r ;return _ade .parseHeader ();};func (_fdge *Header )writeSegmentNumber (_ced _d .BinaryWriter )(_ecce int ,_ggeg error ){_abg :=make ([]byte ,4);
_gf .BigEndian .PutUint32 (_abg ,_fdge .SegmentNumber );if _ecce ,_ggeg =_ced .Write (_abg );_ggeg !=nil {return 0,_df .Wrap (_ggeg ,"\u0048e\u0061\u0064\u0065\u0072.\u0077\u0072\u0069\u0074\u0065S\u0065g\u006de\u006e\u0074\u004e\u0075\u006d\u0062\u0065r","");
};return _ecce ,nil ;};func (_fcfa *PageInformationSegment )Init (h *Header ,r *_d .Reader )(_acaa error ){_fcfa ._ggef =r ;if _acaa =_fcfa .parseHeader ();_acaa !=nil {return _df .Wrap (_acaa ,"P\u0061\u0067\u0065\u0049\u006e\u0066o\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065g\u006d\u0065\u006et\u002eI\u006e\u0069\u0074","");
};return nil ;};func (_gbba *SymbolDictionary )setInSyms ()error {if _gbba .Header .RTSegments !=nil {return _gbba .retrieveImportSymbols ();};_gbba ._bdfb =make ([]*_ed .Bitmap ,0);return nil ;};func (_cdcc *TextRegion )decodeRdw ()(int64 ,error ){const _fafc ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064w";
if _cdcc .IsHuffmanEncoded {if _cdcc .SbHuffRDWidth ==3{if _cdcc ._ffge ==nil {var (_fbef int ;_cbcd error ;);if _cdcc .SbHuffFS ==3{_fbef ++;};if _cdcc .SbHuffDS ==3{_fbef ++;};if _cdcc .SbHuffDT ==3{_fbef ++;};_cdcc ._ffge ,_cbcd =_cdcc .getUserTable (_fbef );
if _cbcd !=nil {return 0,_df .Wrap (_cbcd ,_fafc ,"");};};return _cdcc ._ffge .Decode (_cdcc ._fcdef );};_bbdca ,_dgge :=_bc .GetStandardTable (14+int (_cdcc .SbHuffRDWidth ));if _dgge !=nil {return 0,_df .Wrap (_dgge ,_fafc ,"");};return _bbdca .Decode (_cdcc ._fcdef );
};_gddc ,_dgcgg :=_cdcc ._geg .DecodeInt (_cdcc ._fgff );if _dgcgg !=nil {return 0,_df .Wrap (_dgcgg ,_fafc ,"");};return int64 (_gddc ),nil ;};func (_afgfg *TableSegment )HtRS ()int32 {return _afgfg ._afcad };type TableSegment struct{_fbdf *_d .Reader ;
_cadc int32 ;_dabf int32 ;_afcad int32 ;_gdb int32 ;_ebfe int32 ;};func (_geb *GenericRefinementRegion )updateOverride ()error {if _geb .GrAtX ==nil ||_geb .GrAtY ==nil {return _ef .New ("\u0041\u0054\u0020\u0070\u0069\u0078\u0065\u006c\u0073\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");
};if len (_geb .GrAtX )!=len (_geb .GrAtY ){return _ef .New ("A\u0054\u0020\u0070\u0069xe\u006c \u0069\u006e\u0063\u006f\u006es\u0069\u0073\u0074\u0065\u006e\u0074");};_geb ._ad =make ([]bool ,len (_geb .GrAtX ));switch _geb .TemplateID {case 0:if _geb .GrAtX [0]!=-1&&_geb .GrAtY [0]!=-1{_geb ._ad [0]=true ;
_geb ._gb =true ;};if _geb .GrAtX [1]!=-1&&_geb .GrAtY [1]!=-1{_geb ._ad [1]=true ;_geb ._gb =true ;};case 1:_geb ._gb =false ;};return nil ;};func (_gec *GenericRegion )copyLineAbove (_dge int )error {_cca :=_dge *_gec .Bitmap .RowStride ;_age :=_cca -_gec .Bitmap .RowStride ;
for _bdd :=0;_bdd < _gec .Bitmap .RowStride ;_bdd ++{_bdbd ,_afa :=_gec .Bitmap .GetByte (_age );if _afa !=nil {return _afa ;};_age ++;if _afa =_gec .Bitmap .SetByte (_cca ,_bdbd );_afa !=nil {return _afa ;};_cca ++;};return nil ;};func (_fgda *Header )String ()string {_fdgg :=&_gd .Builder {};
_fdgg .WriteString ("\u000a[\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045A\u0044\u0045\u0052\u005d\u000a");_fdgg .WriteString (_f .Sprintf ("\t\u002d\u0020\u0053\u0065gm\u0065n\u0074\u004e\u0075\u006d\u0062e\u0072\u003a\u0020\u0025\u0076\u000a",_fgda .SegmentNumber ));
_fdgg .WriteString (_f .Sprintf ("\u0009\u002d\u0020T\u0079\u0070\u0065\u003a\u0020\u0025\u0076\u000a",_fgda .Type ));_fdgg .WriteString (_f .Sprintf ("\u0009-\u0020R\u0065\u0074\u0061\u0069\u006eF\u006c\u0061g\u003a\u0020\u0025\u0076\u000a",_fgda .RetainFlag ));
_fdgg .WriteString (_f .Sprintf ("\u0009\u002d\u0020Pa\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_fgda .PageAssociation ));_fdgg .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0050\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074i\u006fn\u0046\u0069\u0065\u006c\u0064\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_fgda .PageAssociationFieldSize ));
_fdgg .WriteString ("\u0009-\u0020R\u0054\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u0053\u003a\u000a");for _ ,_edfg :=range _fgda .RTSNumbers {_fdgg .WriteString (_f .Sprintf ("\u0009\t\u002d\u0020\u0025\u0064\u000a",_edfg ));};_fdgg .WriteString (_f .Sprintf ("\t\u002d \u0048\u0065\u0061\u0064\u0065\u0072\u004c\u0065n\u0067\u0074\u0068\u003a %\u0076\u000a",_fgda .HeaderLength ));
_fdgg .WriteString (_f .Sprintf ("\u0009-\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061L\u0065n\u0067\u0074\u0068\u003a\u0020\u0025\u0076\n",_fgda .SegmentDataLength ));_fdgg .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074D\u0061\u0074\u0061\u0053\u0074\u0061\u0072t\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0076\u000a",_fgda .SegmentDataStartOffset ));
return _fdgg .String ();};func (_dgd *PageInformationSegment )parseHeader ()(_ccd error ){_de .Log .Trace ("\u005b\u0050\u0061\u0067\u0065I\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067m\u0065\u006e\u0074\u005d\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u002e\u002e");
defer func (){var _cff ="[\u0050\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072m\u0061\u0074\u0069\u006f\u006e\u0053\u0065gm\u0065\u006e\u0074\u005d \u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065ad\u0065\u0072 \u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064";
if _ccd !=nil {_cff +="\u0020\u0077\u0069t\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u0020"+_ccd .Error ();}else {_cff +="\u0020\u0073\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079";};_de .Log .Trace (_cff );}();if _ccd =_dgd .readWidthAndHeight ();
_ccd !=nil {return _ccd ;};if _ccd =_dgd .readResolution ();_ccd !=nil {return _ccd ;};_ ,_ccd =_dgd ._ggef .ReadBit ();if _ccd !=nil {return _ccd ;};if _ccd =_dgd .readCombinationOperatorOverrideAllowed ();_ccd !=nil {return _ccd ;};if _ccd =_dgd .readRequiresAuxiliaryBuffer ();
_ccd !=nil {return _ccd ;};if _ccd =_dgd .readCombinationOperator ();_ccd !=nil {return _ccd ;};if _ccd =_dgd .readDefaultPixelValue ();_ccd !=nil {return _ccd ;};if _ccd =_dgd .readContainsRefinement ();_ccd !=nil {return _ccd ;};if _ccd =_dgd .readIsLossless ();
_ccd !=nil {return _ccd ;};if _ccd =_dgd .readIsStriped ();_ccd !=nil {return _ccd ;};if _ccd =_dgd .readMaxStripeSize ();_ccd !=nil {return _ccd ;};if _ccd =_dgd .checkInput ();_ccd !=nil {return _ccd ;};_de .Log .Trace ("\u0025\u0073",_dgd );return nil ;
};func (_degfd *TextRegion )parseHeader ()error {var _cecg error ;_de .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069n\u0073\u002e\u002e\u002e");
defer func (){if _cecg !=nil {_de .Log .Trace ("\u005b\u0054\u0045\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044E\u0052\u005d\u0020\u0066\u0061i\u006c\u0065d\u002e\u0020\u0025\u0076",_cecg );
}else {_de .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069s\u0068\u0065\u0064\u002e");};}();if _cecg =_degfd .RegionInfo .parseHeader ();
_cecg !=nil {return _cecg ;};if _cecg =_degfd .readRegionFlags ();_cecg !=nil {return _cecg ;};if _degfd .IsHuffmanEncoded {if _cecg =_degfd .readHuffmanFlags ();_cecg !=nil {return _cecg ;};};if _cecg =_degfd .readUseRefinement ();_cecg !=nil {return _cecg ;
};if _cecg =_degfd .readAmountOfSymbolInstances ();_cecg !=nil {return _cecg ;};if _cecg =_degfd .getSymbols ();_cecg !=nil {return _cecg ;};if _cecg =_degfd .computeSymbolCodeLength ();_cecg !=nil {return _cecg ;};if _cecg =_degfd .checkInput ();_cecg !=nil {return _cecg ;
};_de .Log .Trace ("\u0025\u0073",_degfd .String ());return nil ;};func (_ebf *GenericRefinementRegion )String ()string {_fgc :=&_gd .Builder {};_fgc .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");
_fgc .WriteString (_ebf .RegionInfo .String ()+"\u000a");_fgc .WriteString (_f .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0052\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_ebf .IsTPGROn ));_fgc .WriteString (_f .Sprintf ("\u0009-\u0020T\u0065\u006d\u0070\u006c\u0061t\u0065\u0049D\u003a\u0020\u0025\u0076\u000a",_ebf .TemplateID ));
_fgc .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_ebf .GrAtX ));_fgc .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_ebf .GrAtY ));
_fgc .WriteString (_f .Sprintf ("\u0009-\u0020R\u0065\u0066\u0065\u0072\u0065n\u0063\u0065D\u0058\u0020\u0025\u0076\u000a",_ebf .ReferenceDX ));_fgc .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0052ef\u0065\u0072\u0065\u006e\u0063\u0044\u0065\u0059\u003a\u0020\u0025\u0076\u000a",_ebf .ReferenceDY ));
return _fgc .String ();};func (_aedc *SymbolDictionary )setCodingStatistics ()error {if _aedc ._fdfc ==nil {_aedc ._fdfc =_c .NewStats (512,1);};if _aedc ._ffcgf ==nil {_aedc ._ffcgf =_c .NewStats (512,1);};if _aedc ._gcfbd ==nil {_aedc ._gcfbd =_c .NewStats (512,1);
};if _aedc ._ffdd ==nil {_aedc ._ffdd =_c .NewStats (512,1);};if _aedc ._acbe ==nil {_aedc ._acbe =_c .NewStats (512,1);};if _aedc .UseRefinementAggregation &&_aedc ._cbba ==nil {_aedc ._cbba =_c .NewStats (1<<uint (_aedc ._feeg ),1);_aedc ._edcc =_c .NewStats (512,1);
_aedc ._agbe =_c .NewStats (512,1);};if _aedc ._eegg ==nil {_aedc ._eegg =_c .NewStats (65536,1);};if _aedc ._cfc ==nil {var _fabb error ;_aedc ._cfc ,_fabb =_c .New (_aedc ._dgbb );if _fabb !=nil {return _fabb ;};};return nil ;};func (_aee *GenericRefinementRegion )decodeTypicalPredictedLineTemplate0 (_feg ,_bee ,_bef ,_cga ,_egf ,_ded ,_fca ,_aef ,_bgc int )error {var (_eac ,_cdg ,_fege ,_bga ,_fcc ,_fcae int ;
_fef byte ;_acd error ;);if _feg > 0{_fef ,_acd =_aee .RegionBitmap .GetByte (_fca -_bef );if _acd !=nil {return _acd ;};_fege =int (_fef );};if _aef > 0&&_aef <=_aee .ReferenceBitmap .Height {_fef ,_acd =_aee .ReferenceBitmap .GetByte (_bgc -_cga +_ded );
if _acd !=nil {return _acd ;};_bga =int (_fef )<<4;};if _aef >=0&&_aef < _aee .ReferenceBitmap .Height {_fef ,_acd =_aee .ReferenceBitmap .GetByte (_bgc +_ded );if _acd !=nil {return _acd ;};_fcc =int (_fef )<<1;};if _aef > -2&&_aef < _aee .ReferenceBitmap .Height -1{_fef ,_acd =_aee .ReferenceBitmap .GetByte (_bgc +_cga +_ded );
if _acd !=nil {return _acd ;};_fcae =int (_fef );};_eac =((_fege >>5)&0x6)|((_fcae >>2)&0x30)|(_fcc &0x180)|(_bga &0xc00);var _dc int ;for _dee :=0;_dee < _egf ;_dee =_dc {var _gga int ;_dc =_dee +8;var _gcbe int ;if _gcbe =_bee -_dee ;_gcbe > 8{_gcbe =8;
};_dce :=_dc < _bee ;_bab :=_dc < _aee .ReferenceBitmap .Width ;_agf :=_ded +1;if _feg > 0{_fef =0;if _dce {_fef ,_acd =_aee .RegionBitmap .GetByte (_fca -_bef +1);if _acd !=nil {return _acd ;};};_fege =(_fege <<8)|int (_fef );};if _aef > 0&&_aef <=_aee .ReferenceBitmap .Height {var _afb int ;
if _bab {_fef ,_acd =_aee .ReferenceBitmap .GetByte (_bgc -_cga +_agf );if _acd !=nil {return _acd ;};_afb =int (_fef )<<4;};_bga =(_bga <<8)|_afb ;};if _aef >=0&&_aef < _aee .ReferenceBitmap .Height {var _acg int ;if _bab {_fef ,_acd =_aee .ReferenceBitmap .GetByte (_bgc +_agf );
if _acd !=nil {return _acd ;};_acg =int (_fef )<<1;};_fcc =(_fcc <<8)|_acg ;};if _aef > -2&&_aef < (_aee .ReferenceBitmap .Height -1){_fef =0;if _bab {_fef ,_acd =_aee .ReferenceBitmap .GetByte (_bgc +_cga +_agf );if _acd !=nil {return _acd ;};};_fcae =(_fcae <<8)|int (_fef );
};for _aa :=0;_aa < _gcbe ;_aa ++{var _adb int ;_eaga :=false ;_daef :=(_eac >>4)&0x1ff;if _daef ==0x1ff{_eaga =true ;_adb =1;}else if _daef ==0x00{_eaga =true ;};if !_eaga {if _aee ._gb {_cdg =_aee .overrideAtTemplate0 (_eac ,_dee +_aa ,_feg ,_gga ,_aa );
_aee ._bf .SetIndex (int32 (_cdg ));}else {_aee ._bf .SetIndex (int32 (_eac ));};_adb ,_acd =_aee ._gfa .DecodeBit (_aee ._bf );if _acd !=nil {return _acd ;};};_bgcg :=uint (7-_aa );_gga |=_adb <<_bgcg ;_eac =((_eac &0xdb6)<<1)|_adb |(_fege >>_bgcg +5)&0x002|((_fcae >>_bgcg +2)&0x010)|((_fcc >>_bgcg )&0x080)|((_bga >>_bgcg )&0x400);
};_acd =_aee .RegionBitmap .SetByte (_fca ,byte (_gga ));if _acd !=nil {return _acd ;};_fca ++;_bgc ++;};return nil ;};type SegmentEncoder interface{Encode (_gdffd _d .BinaryWriter )(_efde int ,_fddb error );};func (_bcgcf *PageInformationSegment )readContainsRefinement ()error {_cede ,_afcac :=_bcgcf ._ggef .ReadBit ();
if _afcac !=nil {return _afcac ;};if _cede ==1{_bcgcf ._gdfga =true ;};return nil ;};func (_gecb *HalftoneRegion )GetPatterns ()([]*_ed .Bitmap ,error ){var (_effb []*_ed .Bitmap ;_gfee error ;);for _ ,_fcde :=range _gecb ._gbbd .RTSegments {var _bfe Segmenter ;
_bfe ,_gfee =_fcde .GetSegmentData ();if _gfee !=nil {_de .Log .Debug ("\u0047e\u0074\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061 \u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025v",_gfee );return nil ,_gfee ;};_dfba ,_cge :=_bfe .(*PatternDictionary );
if !_cge {_gfee =_f .Errorf ("\u0072e\u006c\u0061t\u0065\u0064\u0020\u0073e\u0067\u006d\u0065n\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0070at\u0074\u0065\u0072n\u0020\u0064i\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u003a \u0025\u0054",_bfe );
return nil ,_gfee ;};var _ebc []*_ed .Bitmap ;_ebc ,_gfee =_dfba .GetDictionary ();if _gfee !=nil {_de .Log .Debug ("\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_gfee );
return nil ,_gfee ;};_effb =append (_effb ,_ebc ...);};return _effb ,nil ;};func (_efed *GenericRegion )setOverrideFlag (_fbae int ){_efed .GBAtOverride [_fbae ]=true ;_efed ._fb =true ;};func (_degc *RegionSegment )parseHeader ()error {const _ecgb ="p\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072";
_de .Log .Trace ("\u005b\u0052\u0045\u0047I\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002dH\u0045A\u0044\u0045\u0052\u005d\u0020\u0042\u0065g\u0069\u006e");defer func (){_de .Log .Trace ("\u005b\u0052\u0045G\u0049\u004f\u004e\u005d[\u0050\u0041\u0052\u0053\u0045\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
}();_cdbb ,_fbbdf :=_degc ._dafba .ReadBits (32);if _fbbdf !=nil {return _df .Wrap (_fbbdf ,_ecgb ,"\u0077\u0069\u0064t\u0068");};_degc .BitmapWidth =uint32 (_cdbb &_e .MaxUint32 );_cdbb ,_fbbdf =_degc ._dafba .ReadBits (32);if _fbbdf !=nil {return _df .Wrap (_fbbdf ,_ecgb ,"\u0068\u0065\u0069\u0067\u0068\u0074");
};_degc .BitmapHeight =uint32 (_cdbb &_e .MaxUint32 );_cdbb ,_fbbdf =_degc ._dafba .ReadBits (32);if _fbbdf !=nil {return _df .Wrap (_fbbdf ,_ecgb ,"\u0078\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_degc .XLocation =uint32 (_cdbb &_e .MaxUint32 );
_cdbb ,_fbbdf =_degc ._dafba .ReadBits (32);if _fbbdf !=nil {return _df .Wrap (_fbbdf ,_ecgb ,"\u0079\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_degc .YLocation =uint32 (_cdbb &_e .MaxUint32 );if _ ,_fbbdf =_degc ._dafba .ReadBits (5);_fbbdf !=nil {return _df .Wrap (_fbbdf ,_ecgb ,"\u0064i\u0072\u0079\u0020\u0072\u0065\u0061d");
};if _fbbdf =_degc .readCombinationOperator ();_fbbdf !=nil {return _df .Wrap (_fbbdf ,_ecgb ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};return nil ;};func (_bdee *SymbolDictionary )retrieveImportSymbols ()error {for _ ,_ddffa :=range _bdee .Header .RTSegments {if _ddffa .Type ==0{_cfaee ,_accdd :=_ddffa .GetSegmentData ();
if _accdd !=nil {return _accdd ;};_adag ,_adbd :=_cfaee .(*SymbolDictionary );if !_adbd {return _f .Errorf ("\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0044\u0061\u0074a\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u003a\u0020%\u0054",_cfaee );
};_fgbb ,_accdd :=_adag .GetDictionary ();if _accdd !=nil {return _f .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064 \u0073\u0065\u0067m\u0065\u006e\u0074 \u0077\u0069t\u0068\u0020\u0069\u006e\u0064\u0065x\u003a %\u0064\u0020\u0067\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0073",_ddffa .SegmentNumber ,_accdd .Error ());
};_bdee ._bdfb =append (_bdee ._bdfb ,_fgbb ...);_bdee ._dabdg +=_adag .NumberOfExportedSymbols ;};};return nil ;};func (_aefb *PageInformationSegment )readIsLossless ()error {_bgga ,_dace :=_aefb ._ggef .ReadBit ();if _dace !=nil {return _dace ;};if _bgga ==1{_aefb .IsLossless =true ;
};return nil ;};func (_gcea *GenericRegion )overrideAtTemplate3 (_ggbc ,_gbe ,_afeb ,_ddcf ,_eda int )int {_ggbc &=0x3EF;if _gcea .GBAtY [0]==0&&_gcea .GBAtX [0]>=-int8 (_eda ){_ggbc |=(_ddcf >>uint (7-(int8 (_eda )+_gcea .GBAtX [0]))&0x1)<<4;}else {_ggbc |=int (_gcea .getPixel (_gbe +int (_gcea .GBAtX [0]),_afeb +int (_gcea .GBAtY [0])))<<4;
};return _ggbc ;};func (_abbgb *TextRegion )readAmountOfSymbolInstances ()error {_bcca ,_efac :=_abbgb ._fcdef .ReadBits (32);if _efac !=nil {return _efac ;};_abbgb .NumberOfSymbolInstances =uint32 (_bcca &_e .MaxUint32 );_cfcc :=_abbgb .RegionInfo .BitmapWidth *_abbgb .RegionInfo .BitmapHeight ;
if _cfcc < _abbgb .NumberOfSymbolInstances {_de .Log .Debug ("\u004c\u0069\u006d\u0069t\u0069\u006e\u0067\u0020t\u0068\u0065\u0020n\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020d\u0065\u0063\u006f\u0064e\u0064\u0020\u0073\u0079m\u0062\u006f\u006c\u0020\u0069n\u0073\u0074\u0061\u006e\u0063\u0065\u0073 \u0074\u006f\u0020\u006f\u006ee\u0020\u0070\u0065\u0072\u0020\u0070\u0069\u0078\u0065l\u0020\u0028\u0020\u0025\u0064\u0020\u0069\u006e\u0073\u0074\u0065\u0061\u0064\u0020\u006f\u0066\u0020\u0025\u0064\u0029",_cfcc ,_abbgb .NumberOfSymbolInstances );
_abbgb .NumberOfSymbolInstances =_cfcc ;};return nil ;};func (_abgcg *SymbolDictionary )decodeRefinedSymbol (_aac ,_fcaa uint32 )error {var (_bce int ;_geac ,_cfgae int32 ;);if _abgcg .IsHuffmanEncoded {_dgdb ,_bdbee :=_abgcg ._dgbb .ReadBits (byte (_abgcg ._feeg ));
if _bdbee !=nil {return _bdbee ;};_bce =int (_dgdb );_eadfc ,_bdbee :=_bc .GetStandardTable (15);if _bdbee !=nil {return _bdbee ;};_eadb ,_bdbee :=_eadfc .Decode (_abgcg ._dgbb );if _bdbee !=nil {return _bdbee ;};_geac =int32 (_eadb );_eadb ,_bdbee =_eadfc .Decode (_abgcg ._dgbb );
if _bdbee !=nil {return _bdbee ;};_cfgae =int32 (_eadb );_eadfc ,_bdbee =_bc .GetStandardTable (1);if _bdbee !=nil {return _bdbee ;};if _ ,_bdbee =_eadfc .Decode (_abgcg ._dgbb );_bdbee !=nil {return _bdbee ;};_abgcg ._dgbb .Align ();}else {_fdad ,_eead :=_abgcg ._cfc .DecodeIAID (uint64 (_abgcg ._feeg ),_abgcg ._cbba );
if _eead !=nil {return _eead ;};_bce =int (_fdad );_geac ,_eead =_abgcg ._cfc .DecodeInt (_abgcg ._edcc );if _eead !=nil {return _eead ;};_cfgae ,_eead =_abgcg ._cfc .DecodeInt (_abgcg ._agbe );if _eead !=nil {return _eead ;};};if _fgef :=_abgcg .setSymbolsArray ();
_fgef !=nil {return _fgef ;};_gcdfc :=_abgcg ._eada [_bce ];if _cef :=_abgcg .decodeNewSymbols (_aac ,_fcaa ,_gcdfc ,_geac ,_cfgae );_cef !=nil {return _cef ;};if _abgcg .IsHuffmanEncoded {_abgcg ._dgbb .Align ();};return nil ;};func (_acfb *TableSegment )Init (h *Header ,r *_d .Reader )error {_acfb ._fbdf =r ;
return _acfb .parseHeader ();};func (_cfgfb *PageInformationSegment )readRequiresAuxiliaryBuffer ()error {_gfdad ,_dfcag :=_cfgfb ._ggef .ReadBit ();if _dfcag !=nil {return _dfcag ;};if _gfdad ==1{_cfgfb ._degf =true ;};return nil ;};func (_debd *SymbolDictionary )decodeHeightClassBitmap (_cdeeg *_ed .Bitmap ,_afac int64 ,_acfd int ,_bcbe []int )error {for _gbdc :=_afac ;
_gbdc < int64 (_debd ._bgag );_gbdc ++{var _fbeb int ;for _ccae :=_afac ;_ccae <=_gbdc -1;_ccae ++{_fbeb +=_bcbe [_ccae ];};_fddg :=_a .Rect (_fbeb ,0,_fbeb +_bcbe [_gbdc ],_acfd );_edcca ,_dfcf :=_ed .Extract (_fddg ,_cdeeg );if _dfcf !=nil {return _dfcf ;
};_debd ._bbfd [_gbdc ]=_edcca ;_debd ._eada =append (_debd ._eada ,_edcca );};return nil ;};func (_ddaeb *TextRegion )decodeSymbolInstances ()error {_bbgb ,_baf :=_ddaeb .decodeStripT ();if _baf !=nil {return _baf ;};var (_aafg int64 ;_fcdfg uint32 ;);
for _fcdfg < _ddaeb .NumberOfSymbolInstances {_efcf ,_ecgg :=_ddaeb .decodeDT ();if _ecgg !=nil {return _ecgg ;};_bbgb +=_efcf ;var _ceda int64 ;_bebeg :=true ;_ddaeb ._bfcd =0;for {if _bebeg {_ceda ,_ecgg =_ddaeb .decodeDfs ();if _ecgg !=nil {return _ecgg ;
};_aafg +=_ceda ;_ddaeb ._bfcd =_aafg ;_bebeg =false ;}else {_cfbd ,_ebed :=_ddaeb .decodeIds ();if _gg .Is (_ebed ,_edd .ErrOOB ){break ;};if _ebed !=nil {return _ebed ;};if _fcdfg >=_ddaeb .NumberOfSymbolInstances {break ;};_ddaeb ._bfcd +=_cfbd +int64 (_ddaeb .SbDsOffset );
};_gdgea ,_afec :=_ddaeb .decodeCurrentT ();if _afec !=nil {return _afec ;};_aagg :=_bbgb +_gdgea ;_aggf ,_afec :=_ddaeb .decodeID ();if _afec !=nil {return _afec ;};_ecgfb ,_afec :=_ddaeb .decodeRI ();if _afec !=nil {return _afec ;};_ceb ,_afec :=_ddaeb .decodeIb (_ecgfb ,_aggf );
if _afec !=nil {return _afec ;};if _afec =_ddaeb .blit (_ceb ,_aagg );_afec !=nil {return _afec ;};_fcdfg ++;};};return nil ;};func (_beaa *PageInformationSegment )readResolution ()error {_fcfad ,_ggag :=_beaa ._ggef .ReadBits (32);if _ggag !=nil {return _ggag ;
};_beaa .ResolutionX =int (_fcfad &_e .MaxInt32 );_fcfad ,_ggag =_beaa ._ggef .ReadBits (32);if _ggag !=nil {return _ggag ;};_beaa .ResolutionY =int (_fcfad &_e .MaxInt32 );return nil ;};func (_bbgg *HalftoneRegion )shiftAndFill (_cead int )int {_cead >>=8;
if _cead < 0{_gada :=int (_e .Log (float64 (_adg (_cead )))/_e .Log (2));_gcaa :=31-_gada ;for _fcff :=1;_fcff < _gcaa ;_fcff ++{_cead |=1<<uint (31-_fcff );};};return _cead ;};type Regioner interface{GetRegionBitmap ()(*_ed .Bitmap ,error );GetRegionInfo ()*RegionSegment ;
};type SymbolDictionary struct{_dgbb *_d .Reader ;SdrTemplate int8 ;SdTemplate int8 ;_cfbb bool ;_bfdd bool ;SdHuffAggInstanceSelection bool ;SdHuffBMSizeSelection int8 ;SdHuffDecodeWidthSelection int8 ;SdHuffDecodeHeightSelection int8 ;UseRefinementAggregation bool ;
IsHuffmanEncoded bool ;SdATX []int8 ;SdATY []int8 ;SdrATX []int8 ;SdrATY []int8 ;NumberOfExportedSymbols uint32 ;NumberOfNewSymbols uint32 ;Header *Header ;_dabdg uint32 ;_bdfb []*_ed .Bitmap ;_bgag uint32 ;_bbfd []*_ed .Bitmap ;_fgfd _bc .Tabler ;_bebe _bc .Tabler ;
_gae _bc .Tabler ;_aaag _bc .Tabler ;_ebba []*_ed .Bitmap ;_eada []*_ed .Bitmap ;_cfc *_c .Decoder ;_bebd *TextRegion ;_gag *GenericRegion ;_bdbf *GenericRefinementRegion ;_eegg *_c .DecoderStats ;_ffcgf *_c .DecoderStats ;_gcfbd *_c .DecoderStats ;_ffdd *_c .DecoderStats ;
_acbe *_c .DecoderStats ;_edcc *_c .DecoderStats ;_agbe *_c .DecoderStats ;_fdfc *_c .DecoderStats ;_cbba *_c .DecoderStats ;_feeg int8 ;_gfea *_ed .Bitmaps ;_fae []int ;_efa map[int ]int ;_dcad bool ;};func (_dbcg *TextRegion )decodeCurrentT ()(int64 ,error ){if _dbcg .SbStrips !=1{if _dbcg .IsHuffmanEncoded {_fbgc ,_gfb :=_dbcg ._fcdef .ReadBits (byte (_dbcg .LogSBStrips ));
return int64 (_fbgc ),_gfb ;};_abdf ,_gfde :=_dbcg ._geg .DecodeInt (_dbcg ._gcgbc );if _gfde !=nil {return 0,_gfde ;};return int64 (_abdf ),nil ;};return 0,nil ;};func (_fgg *GenericRegion )overrideAtTemplate2 (_cbg ,_deea ,_gbcd ,_bff ,_ddeb int )int {_cbg &=0x3FB;
if _fgg .GBAtY [0]==0&&_fgg .GBAtX [0]>=-int8 (_ddeb ){_cbg |=(_bff >>uint (7-(int8 (_ddeb )+_fgg .GBAtX [0]))&0x1)<<2;}else {_cbg |=int (_fgg .getPixel (_deea +int (_fgg .GBAtX [0]),_gbcd +int (_fgg .GBAtY [0])))<<2;};return _cbg ;};var _ SegmentEncoder =&RegionSegment {};
func (_gbgc *GenericRegion )setParametersWithAt (_babf bool ,_dfb byte ,_ace ,_ddcc bool ,_eca ,_ecgf []int8 ,_fce ,_edcb uint32 ,_cfb *_c .DecoderStats ,_ffbe *_c .Decoder ){_gbgc .IsMMREncoded =_babf ;_gbgc .GBTemplate =_dfb ;_gbgc .IsTPGDon =_ace ;_gbgc .GBAtX =_eca ;
_gbgc .GBAtY =_ecgf ;_gbgc .RegionSegment .BitmapHeight =_edcb ;_gbgc .RegionSegment .BitmapWidth =_fce ;_gbgc ._aeb =nil ;_gbgc .Bitmap =nil ;if _cfb !=nil {_gbgc ._fgaa =_cfb ;};if _ffbe !=nil {_gbgc ._deba =_ffbe ;};_de .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049O\u004e\u005d\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073\u0020\u0053\u0044\u0041t\u003a\u0020\u0025\u0073",_gbgc );
};func _ecebe (_egeb *_d .Reader ,_cbbb *Header )*TextRegion {_ddgba :=&TextRegion {_fcdef :_egeb ,Header :_cbbb ,RegionInfo :NewRegionSegment (_egeb )};return _ddgba ;};func (_ggbe *GenericRegion )getPixel (_adff ,_gdee int )int8 {if _adff < 0||_adff >=_ggbe .Bitmap .Width {return 0;
};if _gdee < 0||_gdee >=_ggbe .Bitmap .Height {return 0;};if _ggbe .Bitmap .GetPixel (_adff ,_gdee ){return 1;};return 0;};func (_bagc *TextRegion )computeSymbolCodeLength ()error {if _bagc .IsHuffmanEncoded {return _bagc .symbolIDCodeLengths ();};_bagc ._dbaf =int8 (_e .Ceil (_e .Log (float64 (_bagc .NumberOfSymbols ))/_e .Log (2)));
return nil ;};type Header struct{SegmentNumber uint32 ;Type Type ;RetainFlag bool ;PageAssociation int ;PageAssociationFieldSize bool ;RTSegments []*Header ;HeaderLength int64 ;SegmentDataLength uint64 ;SegmentDataStartOffset uint64 ;Reader *_d .Reader ;
SegmentData Segmenter ;RTSNumbers []int ;RetainBits []uint8 ;};func (_dbcfd *HalftoneRegion )combineGrayscalePlanes (_dedg []*_ed .Bitmap ,_cbb int )error {_aage :=0;for _agfac :=0;_agfac < _dedg [_cbb ].Height ;_agfac ++{for _aff :=0;_aff < _dedg [_cbb ].Width ;
_aff +=8{_fgce ,_fdbe :=_dedg [_cbb +1].GetByte (_aage );if _fdbe !=nil {return _fdbe ;};_dgc ,_fdbe :=_dedg [_cbb ].GetByte (_aage );if _fdbe !=nil {return _fdbe ;};_fdbe =_dedg [_cbb ].SetByte (_aage ,_ed .CombineBytes (_dgc ,_fgce ,_ed .CmbOpXor ));
if _fdbe !=nil {return _fdbe ;};_aage ++;};};return nil ;};type EncodeInitializer interface{InitEncode ();};func (_decg *GenericRegion )computeSegmentDataStructure ()error {_decg .DataOffset =_decg ._adf .AbsolutePosition ();_decg .DataHeaderLength =_decg .DataOffset -_decg .DataHeaderOffset ;
_decg .DataLength =int64 (_decg ._adf .AbsoluteLength ())-_decg .DataHeaderLength ;return nil ;};func (_cfgg *HalftoneRegion )GetRegionInfo ()*RegionSegment {return _cfgg .RegionSegment };func (_dgf *TextRegion )decodeRdx ()(int64 ,error ){const _dcfa ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064x";
if _dgf .IsHuffmanEncoded {if _dgf .SbHuffRDX ==3{if _dgf ._bggf ==nil {var (_cbccd int ;_fadb error ;);if _dgf .SbHuffFS ==3{_cbccd ++;};if _dgf .SbHuffDS ==3{_cbccd ++;};if _dgf .SbHuffDT ==3{_cbccd ++;};if _dgf .SbHuffRDWidth ==3{_cbccd ++;};if _dgf .SbHuffRDHeight ==3{_cbccd ++;
};_dgf ._bggf ,_fadb =_dgf .getUserTable (_cbccd );if _fadb !=nil {return 0,_df .Wrap (_fadb ,_dcfa ,"");};};return _dgf ._bggf .Decode (_dgf ._fcdef );};_bagce ,_fbaf :=_bc .GetStandardTable (14+int (_dgf .SbHuffRDX ));if _fbaf !=nil {return 0,_df .Wrap (_fbaf ,_dcfa ,"");
};return _bagce .Decode (_dgf ._fcdef );};_ggbf ,_gcab :=_dgf ._geg .DecodeInt (_dgf ._dcdb );if _gcab !=nil {return 0,_df .Wrap (_gcab ,_dcfa ,"");};return int64 (_ggbf ),nil ;};func (_fefc *HalftoneRegion )computeSegmentDataStructure ()error {_fefc .DataOffset =_fefc ._eafd .AbsolutePosition ();
_fefc .DataHeaderLength =_fefc .DataOffset -_fefc .DataHeaderOffset ;_fefc .DataLength =int64 (_fefc ._eafd .AbsoluteLength ())-_fefc .DataHeaderLength ;return nil ;};func (_dbbddg *TextRegion )getSymbols ()error {if _dbbddg .Header .RTSegments !=nil {return _dbbddg .initSymbols ();
};return nil ;};func (_cbbg *PageInformationSegment )CombinationOperator ()_ed .CombinationOperator {return _cbbg ._fbaa ;};func (_eagb *SymbolDictionary )readNumberOfExportedSymbols ()error {_fadfd ,_fcbdg :=_eagb ._dgbb .ReadBits (32);if _fcbdg !=nil {return _fcbdg ;
};_eagb .NumberOfExportedSymbols =uint32 (_fadfd &_e .MaxUint32 );return nil ;};func (_gffd *TextRegion )decodeIb (_aafcg ,_gbbgd int64 )(*_ed .Bitmap ,error ){const _becb ="\u0064\u0065\u0063\u006f\u0064\u0065\u0049\u0062";var (_geaa error ;_bccd *_ed .Bitmap ;
);if _aafcg ==0{if int (_gbbgd )> len (_gffd .Symbols )-1{return nil ,_df .Error (_becb ,"\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0049\u0042\u0020\u0062\u0069\u0074\u006d\u0061\u0070\u002e\u0020\u0069\u006e\u0064\u0065x\u0020\u006f\u0075\u0074\u0020o\u0066\u0020r\u0061\u006e\u0067\u0065");
};return _gffd .Symbols [int (_gbbgd )],nil ;};var _ccec ,_efdec ,_cgce ,_ddde int64 ;_ccec ,_geaa =_gffd .decodeRdw ();if _geaa !=nil {return nil ,_df .Wrap (_geaa ,_becb ,"");};_efdec ,_geaa =_gffd .decodeRdh ();if _geaa !=nil {return nil ,_df .Wrap (_geaa ,_becb ,"");
};_cgce ,_geaa =_gffd .decodeRdx ();if _geaa !=nil {return nil ,_df .Wrap (_geaa ,_becb ,"");};_ddde ,_geaa =_gffd .decodeRdy ();if _geaa !=nil {return nil ,_df .Wrap (_geaa ,_becb ,"");};if _gffd .IsHuffmanEncoded {if _ ,_geaa =_gffd .decodeSymInRefSize ();
_geaa !=nil {return nil ,_df .Wrap (_geaa ,_becb ,"");};_gffd ._fcdef .Align ();};_gffe :=_gffd .Symbols [_gbbgd ];_ecaff :=uint32 (_gffe .Width );_bbcg :=uint32 (_gffe .Height );_dcc :=int32 (uint32 (_ccec )>>1)+int32 (_cgce );_bbfdf :=int32 (uint32 (_efdec )>>1)+int32 (_ddde );
if _gffd ._cfde ==nil {_gffd ._cfde =_bad (_gffd ._fcdef ,nil );};_gffd ._cfde .setParameters (_gffd ._bbad ,_gffd ._geg ,_gffd .SbrTemplate ,_ecaff +uint32 (_ccec ),_bbcg +uint32 (_efdec ),_gffe ,_dcc ,_bbfdf ,false ,_gffd .SbrATX ,_gffd .SbrATY );_bccd ,_geaa =_gffd ._cfde .GetRegionBitmap ();
if _geaa !=nil {return nil ,_df .Wrap (_geaa ,_becb ,"\u0067\u0072\u0066");};if _gffd .IsHuffmanEncoded {_gffd ._fcdef .Align ();};return _bccd ,nil ;};type GenericRefinementRegion struct{_gda templater ;_efd templater ;_fga *_d .Reader ;_bb *Header ;RegionInfo *RegionSegment ;
IsTPGROn bool ;TemplateID int8 ;Template templater ;GrAtX []int8 ;GrAtY []int8 ;RegionBitmap *_ed .Bitmap ;ReferenceBitmap *_ed .Bitmap ;ReferenceDX int32 ;ReferenceDY int32 ;_gfa *_c .Decoder ;_bf *_c .DecoderStats ;_gb bool ;_ad []bool ;};func (_cbcc *GenericRegion )overrideAtTemplate0b (_bbdc ,_cgc ,_aeed ,_ggd ,_fba ,_efg int )int {if _cbcc .GBAtOverride [0]{_bbdc &=0xFFFD;
if _cbcc .GBAtY [0]==0&&_cbcc .GBAtX [0]>=-int8 (_fba ){_bbdc |=(_ggd >>uint (int8 (_efg )-_cbcc .GBAtX [0]&0x1))<<1;}else {_bbdc |=int (_cbcc .getPixel (_cgc +int (_cbcc .GBAtX [0]),_aeed +int (_cbcc .GBAtY [0])))<<1;};};if _cbcc .GBAtOverride [1]{_bbdc &=0xDFFF;
if _cbcc .GBAtY [1]==0&&_cbcc .GBAtX [1]>=-int8 (_fba ){_bbdc |=(_ggd >>uint (int8 (_efg )-_cbcc .GBAtX [1]&0x1))<<13;}else {_bbdc |=int (_cbcc .getPixel (_cgc +int (_cbcc .GBAtX [1]),_aeed +int (_cbcc .GBAtY [1])))<<13;};};if _cbcc .GBAtOverride [2]{_bbdc &=0xFDFF;
if _cbcc .GBAtY [2]==0&&_cbcc .GBAtX [2]>=-int8 (_fba ){_bbdc |=(_ggd >>uint (int8 (_efg )-_cbcc .GBAtX [2]&0x1))<<9;}else {_bbdc |=int (_cbcc .getPixel (_cgc +int (_cbcc .GBAtX [2]),_aeed +int (_cbcc .GBAtY [2])))<<9;};};if _cbcc .GBAtOverride [3]{_bbdc &=0xBFFF;
if _cbcc .GBAtY [3]==0&&_cbcc .GBAtX [3]>=-int8 (_fba ){_bbdc |=(_ggd >>uint (int8 (_efg )-_cbcc .GBAtX [3]&0x1))<<14;}else {_bbdc |=int (_cbcc .getPixel (_cgc +int (_cbcc .GBAtX [3]),_aeed +int (_cbcc .GBAtY [3])))<<14;};};if _cbcc .GBAtOverride [4]{_bbdc &=0xEFFF;
if _cbcc .GBAtY [4]==0&&_cbcc .GBAtX [4]>=-int8 (_fba ){_bbdc |=(_ggd >>uint (int8 (_efg )-_cbcc .GBAtX [4]&0x1))<<12;}else {_bbdc |=int (_cbcc .getPixel (_cgc +int (_cbcc .GBAtX [4]),_aeed +int (_cbcc .GBAtY [4])))<<12;};};if _cbcc .GBAtOverride [5]{_bbdc &=0xFFDF;
if _cbcc .GBAtY [5]==0&&_cbcc .GBAtX [5]>=-int8 (_fba ){_bbdc |=(_ggd >>uint (int8 (_efg )-_cbcc .GBAtX [5]&0x1))<<5;}else {_bbdc |=int (_cbcc .getPixel (_cgc +int (_cbcc .GBAtX [5]),_aeed +int (_cbcc .GBAtY [5])))<<5;};};if _cbcc .GBAtOverride [6]{_bbdc &=0xFFFB;
if _cbcc .GBAtY [6]==0&&_cbcc .GBAtX [6]>=-int8 (_fba ){_bbdc |=(_ggd >>uint (int8 (_efg )-_cbcc .GBAtX [6]&0x1))<<2;}else {_bbdc |=int (_cbcc .getPixel (_cgc +int (_cbcc .GBAtX [6]),_aeed +int (_cbcc .GBAtY [6])))<<2;};};if _cbcc .GBAtOverride [7]{_bbdc &=0xFFF7;
if _cbcc .GBAtY [7]==0&&_cbcc .GBAtX [7]>=-int8 (_fba ){_bbdc |=(_ggd >>uint (int8 (_efg )-_cbcc .GBAtX [7]&0x1))<<3;}else {_bbdc |=int (_cbcc .getPixel (_cgc +int (_cbcc .GBAtX [7]),_aeed +int (_cbcc .GBAtY [7])))<<3;};};if _cbcc .GBAtOverride [8]{_bbdc &=0xF7FF;
if _cbcc .GBAtY [8]==0&&_cbcc .GBAtX [8]>=-int8 (_fba ){_bbdc |=(_ggd >>uint (int8 (_efg )-_cbcc .GBAtX [8]&0x1))<<11;}else {_bbdc |=int (_cbcc .getPixel (_cgc +int (_cbcc .GBAtX [8]),_aeed +int (_cbcc .GBAtY [8])))<<11;};};if _cbcc .GBAtOverride [9]{_bbdc &=0xFFEF;
if _cbcc .GBAtY [9]==0&&_cbcc .GBAtX [9]>=-int8 (_fba ){_bbdc |=(_ggd >>uint (int8 (_efg )-_cbcc .GBAtX [9]&0x1))<<4;}else {_bbdc |=int (_cbcc .getPixel (_cgc +int (_cbcc .GBAtX [9]),_aeed +int (_cbcc .GBAtY [9])))<<4;};};if _cbcc .GBAtOverride [10]{_bbdc &=0x7FFF;
if _cbcc .GBAtY [10]==0&&_cbcc .GBAtX [10]>=-int8 (_fba ){_bbdc |=(_ggd >>uint (int8 (_efg )-_cbcc .GBAtX [10]&0x1))<<15;}else {_bbdc |=int (_cbcc .getPixel (_cgc +int (_cbcc .GBAtX [10]),_aeed +int (_cbcc .GBAtY [10])))<<15;};};if _cbcc .GBAtOverride [11]{_bbdc &=0xFDFF;
if _cbcc .GBAtY [11]==0&&_cbcc .GBAtX [11]>=-int8 (_fba ){_bbdc |=(_ggd >>uint (int8 (_efg )-_cbcc .GBAtX [11]&0x1))<<10;}else {_bbdc |=int (_cbcc .getPixel (_cgc +int (_cbcc .GBAtX [11]),_aeed +int (_cbcc .GBAtY [11])))<<10;};};return _bbdc ;};func (_dcef *PageInformationSegment )readWidthAndHeight ()error {_gfec ,_fec :=_dcef ._ggef .ReadBits (32);
if _fec !=nil {return _fec ;};_dcef .PageBMWidth =int (_gfec &_e .MaxInt32 );_gfec ,_fec =_dcef ._ggef .ReadBits (32);if _fec !=nil {return _fec ;};_dcef .PageBMHeight =int (_gfec &_e .MaxInt32 );return nil ;};func (_cdabc *TextRegion )initSymbols ()error {const _defa ="i\u006e\u0069\u0074\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
for _ ,_cdgd :=range _cdabc .Header .RTSegments {if _cdgd ==nil {return _df .Error (_defa ,"\u006e\u0069\u006c\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020pr\u006f\u0076\u0069\u0064\u0065\u0064 \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0074\u0065\u0078\u0074\u0020\u0072\u0065g\u0069\u006f\u006e\u0020\u0053\u0079\u006d\u0062o\u006c\u0073");
};if _cdgd .Type ==0{_ccfc ,_gbdb :=_cdgd .GetSegmentData ();if _gbdb !=nil {return _df .Wrap (_gbdb ,_defa ,"");};_gfgd ,_dbdda :=_ccfc .(*SymbolDictionary );if !_dbdda {return _df .Error (_defa ,"\u0072e\u0066\u0065r\u0072\u0065\u0064 \u0054\u006f\u0020\u0053\u0065\u0067\u006de\u006e\u0074\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_gfgd ._cbba =_cdabc ._fbecb ;_bgaa ,_gbdb :=_gfgd .GetDictionary ();if _gbdb !=nil {return _df .Wrap (_gbdb ,_defa ,"");};_cdabc .Symbols =append (_cdabc .Symbols ,_bgaa ...);};};_cdabc .NumberOfSymbols =uint32 (len (_cdabc .Symbols ));return nil ;};
func (_cggc *SymbolDictionary )huffDecodeBmSize ()(int64 ,error ){if _cggc ._gae ==nil {var (_facgb int ;_eafg error ;);if _cggc .SdHuffDecodeHeightSelection ==3{_facgb ++;};if _cggc .SdHuffDecodeWidthSelection ==3{_facgb ++;};_cggc ._gae ,_eafg =_cggc .getUserTable (_facgb );
if _eafg !=nil {return 0,_eafg ;};};return _cggc ._gae .Decode (_cggc ._dgbb );};func (_fede *TextRegion )readRegionFlags ()error {var (_efeef int ;_bbcd uint64 ;_dggef error ;);_efeef ,_dggef =_fede ._fcdef .ReadBit ();if _dggef !=nil {return _dggef ;
};_fede .SbrTemplate =int8 (_efeef );_bbcd ,_dggef =_fede ._fcdef .ReadBits (5);if _dggef !=nil {return _dggef ;};_fede .SbDsOffset =int8 (_bbcd );if _fede .SbDsOffset > 0x0f{_fede .SbDsOffset -=0x20;};_efeef ,_dggef =_fede ._fcdef .ReadBit ();if _dggef !=nil {return _dggef ;
};_fede .DefaultPixel =int8 (_efeef );_bbcd ,_dggef =_fede ._fcdef .ReadBits (2);if _dggef !=nil {return _dggef ;};_fede .CombinationOperator =_ed .CombinationOperator (int (_bbcd )&0x3);_efeef ,_dggef =_fede ._fcdef .ReadBit ();if _dggef !=nil {return _dggef ;
};_fede .IsTransposed =int8 (_efeef );_bbcd ,_dggef =_fede ._fcdef .ReadBits (2);if _dggef !=nil {return _dggef ;};_fede .ReferenceCorner =int16 (_bbcd )&0x3;_bbcd ,_dggef =_fede ._fcdef .ReadBits (2);if _dggef !=nil {return _dggef ;};_fede .LogSBStrips =int16 (_bbcd )&0x3;
_fede .SbStrips =1<<uint (_fede .LogSBStrips );_efeef ,_dggef =_fede ._fcdef .ReadBit ();if _dggef !=nil {return _dggef ;};if _efeef ==1{_fede .UseRefinement =true ;};_efeef ,_dggef =_fede ._fcdef .ReadBit ();if _dggef !=nil {return _dggef ;};if _efeef ==1{_fede .IsHuffmanEncoded =true ;
};return nil ;};func (_daba *TextRegion )getUserTable (_gcdg int )(_bc .Tabler ,error ){const _bcbc ="\u0067\u0065\u0074U\u0073\u0065\u0072\u0054\u0061\u0062\u006c\u0065";var _fffed int ;for _ ,_acgf :=range _daba .Header .RTSegments {if _acgf .Type ==53{if _fffed ==_gcdg {_bfff ,_abbdb :=_acgf .GetSegmentData ();
if _abbdb !=nil {return nil ,_abbdb ;};_efccd ,_cbee :=_bfff .(*TableSegment );if !_cbee {_de .Log .Debug (_f .Sprintf ("\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079p\u0065\u00205\u0033\u0020\u002d\u0020\u0061\u006ed\u0020in\u0064\u0065\u0078\u003a\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_acgf .SegmentNumber ));
return nil ,_df .Error (_bcbc ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079\u0070e\u0020\u0035\u0033\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u002a\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};return _bc .NewEncodedTable (_efccd );};_fffed ++;};};return nil ,nil ;};func (_beac *TextRegion )encodeFlags (_bfcc _d .BinaryWriter )(_fgfde int ,_cdge error ){const _gedc ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _cdge =_bfcc .WriteBit (int (_beac .SbrTemplate ));
_cdge !=nil {return _fgfde ,_df .Wrap (_cdge ,_gedc ,"s\u0062\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};if _ ,_cdge =_bfcc .WriteBits (uint64 (_beac .SbDsOffset ),5);_cdge !=nil {return _fgfde ,_df .Wrap (_cdge ,_gedc ,"\u0073\u0062\u0044\u0073\u004f\u0066\u0066\u0073\u0065\u0074");
};if _cdge =_bfcc .WriteBit (int (_beac .DefaultPixel ));_cdge !=nil {return _fgfde ,_df .Wrap (_cdge ,_gedc ,"\u0044\u0065\u0066a\u0075\u006c\u0074\u0050\u0069\u0078\u0065\u006c");};if _ ,_cdge =_bfcc .WriteBits (uint64 (_beac .CombinationOperator ),2);
_cdge !=nil {return _fgfde ,_df .Wrap (_cdge ,_gedc ,"\u0043\u006f\u006d\u0062in\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072");};if _cdge =_bfcc .WriteBit (int (_beac .IsTransposed ));_cdge !=nil {return _fgfde ,_df .Wrap (_cdge ,_gedc ,"\u0069\u0073\u0020\u0074\u0072\u0061\u006e\u0073\u0070\u006f\u0073\u0065\u0064");
};if _ ,_cdge =_bfcc .WriteBits (uint64 (_beac .ReferenceCorner ),2);_cdge !=nil {return _fgfde ,_df .Wrap (_cdge ,_gedc ,"\u0072\u0065f\u0065\u0072\u0065n\u0063\u0065\u0020\u0063\u006f\u0072\u006e\u0065\u0072");};if _ ,_cdge =_bfcc .WriteBits (uint64 (_beac .LogSBStrips ),2);
_cdge !=nil {return _fgfde ,_df .Wrap (_cdge ,_gedc ,"L\u006f\u0067\u0053\u0042\u0053\u0074\u0072\u0069\u0070\u0073");};var _ggeec int ;if _beac .UseRefinement {_ggeec =1;};if _cdge =_bfcc .WriteBit (_ggeec );_cdge !=nil {return _fgfde ,_df .Wrap (_cdge ,_gedc ,"\u0075\u0073\u0065\u0020\u0072\u0065\u0066\u0069\u006ee\u006d\u0065\u006e\u0074");
};_ggeec =0;if _beac .IsHuffmanEncoded {_ggeec =1;};if _cdge =_bfcc .WriteBit (_ggeec );_cdge !=nil {return _fgfde ,_df .Wrap (_cdge ,_gedc ,"u\u0073\u0065\u0020\u0068\u0075\u0066\u0066\u006d\u0061\u006e");};_fgfde =2;return _fgfde ,nil ;};func (_dcbef *Header )writeSegmentDataLength (_bdfd _d .BinaryWriter )(_befe int ,_gdfg error ){_aea :=make ([]byte ,4);
_gf .BigEndian .PutUint32 (_aea ,uint32 (_dcbef .SegmentDataLength ));if _befe ,_gdfg =_bdfd .Write (_aea );_gdfg !=nil {return 0,_df .Wrap (_gdfg ,"\u0048\u0065a\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u004c\u0065ng\u0074\u0068","");
};return _befe ,nil ;};func (_efcad *PatternDictionary )readIsMMREncoded ()error {_gdef ,_eddd :=_efcad ._cgff .ReadBit ();if _eddd !=nil {return _eddd ;};if _gdef !=0{_efcad .IsMMREncoded =true ;};return nil ;};func (_bea *Header )pageSize ()uint {if _bea .PageAssociation <=255{return 1;
};return 4;};func (_fedc *TextRegion )Encode (w _d .BinaryWriter )(_gccf int ,_ccdf error ){const _gccc ="\u0054\u0065\u0078\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u002e\u0045n\u0063\u006f\u0064\u0065";if _gccf ,_ccdf =_fedc .RegionInfo .Encode (w );
_ccdf !=nil {return _gccf ,_df .Wrap (_ccdf ,_gccc ,"");};var _dbagc int ;if _dbagc ,_ccdf =_fedc .encodeFlags (w );_ccdf !=nil {return _gccf ,_df .Wrap (_ccdf ,_gccc ,"");};_gccf +=_dbagc ;if _dbagc ,_ccdf =_fedc .encodeSymbols (w );_ccdf !=nil {return _gccf ,_df .Wrap (_ccdf ,_gccc ,"");
};_gccf +=_dbagc ;return _gccf ,nil ;};func (_cccg *TextRegion )decodeRdy ()(int64 ,error ){const _aeadc ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064y";if _cccg .IsHuffmanEncoded {if _cccg .SbHuffRDY ==3{if _cccg ._gcef ==nil {var (_bebeb int ;_dfed error ;
);if _cccg .SbHuffFS ==3{_bebeb ++;};if _cccg .SbHuffDS ==3{_bebeb ++;};if _cccg .SbHuffDT ==3{_bebeb ++;};if _cccg .SbHuffRDWidth ==3{_bebeb ++;};if _cccg .SbHuffRDHeight ==3{_bebeb ++;};if _cccg .SbHuffRDX ==3{_bebeb ++;};_cccg ._gcef ,_dfed =_cccg .getUserTable (_bebeb );
if _dfed !=nil {return 0,_df .Wrap (_dfed ,_aeadc ,"");};};return _cccg ._gcef .Decode (_cccg ._fcdef );};_dcgc ,_abbc :=_bc .GetStandardTable (14+int (_cccg .SbHuffRDY ));if _abbc !=nil {return 0,_abbc ;};return _dcgc .Decode (_cccg ._fcdef );};_daca ,_agcd :=_cccg ._geg .DecodeInt (_cccg ._ffac );
if _agcd !=nil {return 0,_df .Wrap (_agcd ,_aeadc ,"");};return int64 (_daca ),nil ;};var _ SegmentEncoder =&GenericRegion {};func (_bdc *GenericRegion )parseHeader ()(_ebag error ){_de .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052I\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0050\u0061\u0072s\u0069\u006e\u0067\u0048\u0065\u0061\u0064e\u0072\u002e\u002e\u002e");
defer func (){if _ebag !=nil {_de .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e]\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065r\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0077\u0069th\u0020\u0065\u0072\u0072\u006f\u0072\u002e\u0020\u0025\u0076",_ebag );
}else {_de .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049C\u002d\u0052\u0045G\u0049\u004f\u004e]\u0020\u0050a\u0072\u0073\u0069\u006e\u0067\u0048e\u0061de\u0072\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0053\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079\u002e\u002e\u002e");
};}();var (_edg int ;_efea uint64 ;);if _ebag =_bdc .RegionSegment .parseHeader ();_ebag !=nil {return _ebag ;};if _ ,_ebag =_bdc ._adf .ReadBits (3);_ebag !=nil {return _ebag ;};_edg ,_ebag =_bdc ._adf .ReadBit ();if _ebag !=nil {return _ebag ;};if _edg ==1{_bdc .UseExtTemplates =true ;
};_edg ,_ebag =_bdc ._adf .ReadBit ();if _ebag !=nil {return _ebag ;};if _edg ==1{_bdc .IsTPGDon =true ;};_efea ,_ebag =_bdc ._adf .ReadBits (2);if _ebag !=nil {return _ebag ;};_bdc .GBTemplate =byte (_efea &0xf);_edg ,_ebag =_bdc ._adf .ReadBit ();if _ebag !=nil {return _ebag ;
};if _edg ==1{_bdc .IsMMREncoded =true ;};if !_bdc .IsMMREncoded {_eae :=1;if _bdc .GBTemplate ==0{_eae =4;if _bdc .UseExtTemplates {_eae =12;};};if _ebag =_bdc .readGBAtPixels (_eae );_ebag !=nil {return _ebag ;};};if _ebag =_bdc .computeSegmentDataStructure ();
_ebag !=nil {return _ebag ;};_de .Log .Trace ("\u0025\u0073",_bdc );return nil ;};func (_ebga *HalftoneRegion )parseHeader ()error {if _aeca :=_ebga .RegionSegment .parseHeader ();_aeca !=nil {return _aeca ;};_facg ,_dcfe :=_ebga ._eafd .ReadBit ();if _dcfe !=nil {return _dcfe ;
};_ebga .HDefaultPixel =int8 (_facg );_agef ,_dcfe :=_ebga ._eafd .ReadBits (3);if _dcfe !=nil {return _dcfe ;};_ebga .CombinationOperator =_ed .CombinationOperator (_agef &0xf);_facg ,_dcfe =_ebga ._eafd .ReadBit ();if _dcfe !=nil {return _dcfe ;};if _facg ==1{_ebga .HSkipEnabled =true ;
};_agef ,_dcfe =_ebga ._eafd .ReadBits (2);if _dcfe !=nil {return _dcfe ;};_ebga .HTemplate =byte (_agef &0xf);_facg ,_dcfe =_ebga ._eafd .ReadBit ();if _dcfe !=nil {return _dcfe ;};if _facg ==1{_ebga .IsMMREncoded =true ;};_agef ,_dcfe =_ebga ._eafd .ReadBits (32);
if _dcfe !=nil {return _dcfe ;};_ebga .HGridWidth =uint32 (_agef &_e .MaxUint32 );_agef ,_dcfe =_ebga ._eafd .ReadBits (32);if _dcfe !=nil {return _dcfe ;};_ebga .HGridHeight =uint32 (_agef &_e .MaxUint32 );_agef ,_dcfe =_ebga ._eafd .ReadBits (32);if _dcfe !=nil {return _dcfe ;
};_ebga .HGridX =int32 (_agef &_e .MaxInt32 );_agef ,_dcfe =_ebga ._eafd .ReadBits (32);if _dcfe !=nil {return _dcfe ;};_ebga .HGridY =int32 (_agef &_e .MaxInt32 );_agef ,_dcfe =_ebga ._eafd .ReadBits (16);if _dcfe !=nil {return _dcfe ;};_ebga .HRegionX =uint16 (_agef &_e .MaxUint16 );
_agef ,_dcfe =_ebga ._eafd .ReadBits (16);if _dcfe !=nil {return _dcfe ;};_ebga .HRegionY =uint16 (_agef &_e .MaxUint16 );if _dcfe =_ebga .computeSegmentDataStructure ();_dcfe !=nil {return _dcfe ;};return _ebga .checkInput ();};var _ templater =&template0 {};
func (_gbc *GenericRefinementRegion )GetRegionInfo ()*RegionSegment {return _gbc .RegionInfo };func (_bdcc *TextRegion )GetRegionInfo ()*RegionSegment {return _bdcc .RegionInfo };func (_gedg *HalftoneRegion )grayScaleDecoding (_bgcc int )([][]int ,error ){var (_fgfb []int8 ;
_gggc []int8 ;);if !_gedg .IsMMREncoded {_fgfb =make ([]int8 ,4);_gggc =make ([]int8 ,4);if _gedg .HTemplate <=1{_fgfb [0]=3;}else if _gedg .HTemplate >=2{_fgfb [0]=2;};_gggc [0]=-1;_fgfb [1]=-3;_gggc [1]=-1;_fgfb [2]=2;_gggc [2]=-2;_fgfb [3]=-2;_gggc [3]=-2;
};_fccc :=make ([]*_ed .Bitmap ,_bgcc );_cgec :=NewGenericRegion (_gedg ._eafd );_cgec .setParametersMMR (_gedg .IsMMREncoded ,_gedg .DataOffset ,_gedg .DataLength ,_gedg .HGridHeight ,_gedg .HGridWidth ,_gedg .HTemplate ,false ,_gedg .HSkipEnabled ,_fgfb ,_gggc );
_gac :=_bgcc -1;var _dfe error ;_fccc [_gac ],_dfe =_cgec .GetRegionBitmap ();if _dfe !=nil {return nil ,_dfe ;};for _gac > 0{_gac --;_cgec .Bitmap =nil ;_fccc [_gac ],_dfe =_cgec .GetRegionBitmap ();if _dfe !=nil {return nil ,_dfe ;};if _dfe =_gedg .combineGrayscalePlanes (_fccc ,_gac );
_dfe !=nil {return nil ,_dfe ;};};return _gedg .computeGrayScalePlanes (_fccc ,_bgcc );};func (_aed *PageInformationSegment )Size ()int {return 19};func (_dbfe *SymbolDictionary )decodeHeightClassDeltaHeight ()(int64 ,error ){if _dbfe .IsHuffmanEncoded {return _dbfe .decodeHeightClassDeltaHeightWithHuffman ();
};_aede ,_dbce :=_dbfe ._cfc .DecodeInt (_dbfe ._ffcgf );if _dbce !=nil {return 0,_dbce ;};return int64 (_aede ),nil ;};func (_egba *GenericRegion )writeGBAtPixels (_dcdf _d .BinaryWriter )(_eaee int ,_gbfe error ){const _bgba ="\u0077r\u0069t\u0065\u0047\u0042\u0041\u0074\u0050\u0069\u0078\u0065\u006c\u0073";
if _egba .UseMMR {return 0,nil ;};_eadg :=1;if _egba .GBTemplate ==0{_eadg =4;}else if _egba .UseExtTemplates {_eadg =12;};if len (_egba .GBAtX )!=_eadg {return 0,_df .Errorf (_bgba ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0058\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};if len (_egba .GBAtY )!=_eadg {return 0,_df .Errorf (_bgba ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0059\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};for _dced :=0;_dced < _eadg ;_dced ++{if _gbfe =_dcdf .WriteByte (byte (_egba .GBAtX [_dced ]));_gbfe !=nil {return _eaee ,_df .Wrap (_gbfe ,_bgba ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0058");};_eaee ++;if _gbfe =_dcdf .WriteByte (byte (_egba .GBAtY [_dced ]));
_gbfe !=nil {return _eaee ,_df .Wrap (_gbfe ,_bgba ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0059");};_eaee ++;};return _eaee ,nil ;};func (_gbcb *Header )Encode (w _d .BinaryWriter )(_agbgc int ,_egec error ){const _bcbg ="\u0048\u0065\u0061d\u0065\u0072\u002e\u0057\u0072\u0069\u0074\u0065";
var _ffdb _d .BinaryWriter ;_de .Log .Trace ("\u005b\u0053\u0045G\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045\u0052\u005d[\u0045\u004e\u0043\u004f\u0044\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _egec !=nil {_de .Log .Trace ("[\u0053\u0045\u0047\u004d\u0045\u004eT\u002d\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0045\u004e\u0043\u004f\u0044E\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020%\u0076",_egec );
}else {_de .Log .Trace ("\u005b\u0053\u0045\u0047ME\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0025\u0076",_gbcb );_de .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045N\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u005b\u0045\u004e\u0043O\u0044\u0045\u005d\u0020\u0046\u0069\u006ei\u0073\u0068\u0065\u0064");
};}();w .FinishByte ();if _gbcb .SegmentData !=nil {_ceea ,_bgd :=_gbcb .SegmentData .(SegmentEncoder );if !_bgd {return 0,_df .Errorf (_bcbg ,"\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0064\u006f\u0065s\u006e\u0027\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074 \u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0045\u006e\u0063\u006f\u0064er\u0020\u0069\u006e\u0074\u0065\u0072\u0066\u0061\u0063\u0065",_gbcb .SegmentData );
};_ffdb =_d .BufferedMSB ();_agbgc ,_egec =_ceea .Encode (_ffdb );if _egec !=nil {return 0,_df .Wrap (_egec ,_bcbg ,"");};_gbcb .SegmentDataLength =uint64 (_agbgc );};if _gbcb .pageSize ()==4{_gbcb .PageAssociationFieldSize =true ;};var _edcbe int ;_edcbe ,_egec =_gbcb .writeSegmentNumber (w );
if _egec !=nil {return 0,_df .Wrap (_egec ,_bcbg ,"");};_agbgc +=_edcbe ;if _egec =_gbcb .writeFlags (w );_egec !=nil {return _agbgc ,_df .Wrap (_egec ,_bcbg ,"");};_agbgc ++;_edcbe ,_egec =_gbcb .writeReferredToCount (w );if _egec !=nil {return 0,_df .Wrap (_egec ,_bcbg ,"");
};_agbgc +=_edcbe ;_edcbe ,_egec =_gbcb .writeReferredToSegments (w );if _egec !=nil {return 0,_df .Wrap (_egec ,_bcbg ,"");};_agbgc +=_edcbe ;_edcbe ,_egec =_gbcb .writeSegmentPageAssociation (w );if _egec !=nil {return 0,_df .Wrap (_egec ,_bcbg ,"");
};_agbgc +=_edcbe ;_edcbe ,_egec =_gbcb .writeSegmentDataLength (w );if _egec !=nil {return 0,_df .Wrap (_egec ,_bcbg ,"");};_agbgc +=_edcbe ;_gbcb .HeaderLength =int64 (_agbgc )-int64 (_gbcb .SegmentDataLength );if _ffdb !=nil {if _ ,_egec =w .Write (_ffdb .Data ());
_egec !=nil {return _agbgc ,_df .Wrap (_egec ,_bcbg ,"\u0077r\u0069t\u0065\u0020\u0073\u0065\u0067m\u0065\u006et\u0020\u0064\u0061\u0074\u0061");};};return _agbgc ,nil ;};type PatternDictionary struct{_cgff *_d .Reader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;
DataOffset int64 ;DataLength int64 ;GBAtX []int8 ;GBAtY []int8 ;IsMMREncoded bool ;HDTemplate byte ;HdpWidth byte ;HdpHeight byte ;Patterns []*_ed .Bitmap ;GrayMax uint32 ;};func (_aadb *Header )readDataStartOffset (_ecda *_d .Reader ,_eeec OrganizationType ){if _eeec ==OSequential {_aadb .SegmentDataStartOffset =uint64 (_ecda .AbsolutePosition ());
};};func NewRegionSegment (r *_d .Reader )*RegionSegment {return &RegionSegment {_dafba :r }};var _ _bc .BasicTabler =&TableSegment {};func (_gcae *SymbolDictionary )setAtPixels ()error {if _gcae .IsHuffmanEncoded {return nil ;};_bgbbe :=1;if _gcae .SdTemplate ==0{_bgbbe =4;
};if _bcbd :=_gcae .readAtPixels (_bgbbe );_bcbd !=nil {return _bcbd ;};return nil ;};func (_bfga *Header )GetSegmentData ()(Segmenter ,error ){var _cgba Segmenter ;if _bfga .SegmentData !=nil {_cgba =_bfga .SegmentData ;};if _cgba ==nil {_gdff ,_bcga :=_bfbb [_bfga .Type ];
if !_bcga {return nil ,_f .Errorf ("\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0073\u002f\u0020\u0025\u0064\u0020\u0063\u0072e\u0061t\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e\u0020",_bfga .Type ,_bfga .Type );};_cgba =_gdff ();
_de .Log .Trace ("\u005b\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u0020\u0061\u0074\u0020\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0030\u0034\u0058",_bfga .SegmentNumber ,_bfga .SegmentDataStartOffset );
_dcac ,_fgca :=_bfga .subInputReader ();if _fgca !=nil {return nil ,_fgca ;};if _cbce :=_cgba .Init (_bfga ,_dcac );_cbce !=nil {_de .Log .Debug ("\u0049\u006e\u0069\u0074 \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076 \u0066o\u0072\u0020\u0074\u0079\u0070\u0065\u003a \u0025\u0054",_cbce ,_cgba );
return nil ,_cbce ;};_bfga .SegmentData =_cgba ;};return _cgba ,nil ;};