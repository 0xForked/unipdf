//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package segments ;import (_ag "encoding/binary";_b "errors";_ce "fmt";_ff "github.com/unidoc/unipdf/v3/common";_e "github.com/unidoc/unipdf/v3/internal/bitwise";_ac "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_ad "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";_agc "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/arithmetic";_fc "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/huffman";_dg "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/mmr";_de "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/arithmetic";_fg "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_df "image";_a "io";_c "math";_f "strings";_g "time";);func (_efce Type )String ()string {switch _efce {case TSymbolDictionary :return "\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079";case TIntermediateTextRegion :return "\u0049n\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020T\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateTextRegion :return "I\u006d\u006d\u0065\u0064ia\u0074e\u0020\u0054\u0065\u0078\u0074 \u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessTextRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020L\u006f\u0073\u0073\u006c\u0065\u0073\u0073 \u0054\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TPatternDictionary :return "\u0050a\u0074t\u0065\u0072\u006e\u0020\u0044i\u0063\u0074i\u006f\u006e\u0061\u0072\u0079";case TIntermediateHalftoneRegion :return "\u0049\u006e\u0074\u0065r\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0048\u0061l\u0066t\u006f\u006e\u0065\u0020\u0052\u0065\u0067i\u006f\u006e";case TImmediateHalftoneRegion :return "\u0049m\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u0048\u0061l\u0066t\u006fn\u0065\u0020\u0052\u0065\u0067\u0069\u006fn";case TImmediateLosslessHalftoneRegion :return "\u0049\u006d\u006ded\u0069\u0061\u0074\u0065\u0020\u004c\u006f\u0073\u0073l\u0065s\u0073 \u0048a\u006c\u0066\u0074\u006f\u006e\u0065\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TIntermediateGenericRegion :return "I\u006e\u0074\u0065\u0072\u006d\u0065d\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020R\u0065g\u0069\u006f\u006e";case TImmediateGenericRegion :return "\u0049m\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006ee\u0072\u0069\u0063\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessGenericRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u004c\u006f\u0073\u0073\u006c\u0065\u0073\u0073\u0020\u0047e\u006e\u0065\u0072\u0069\u0063\u0020\u0052e\u0067\u0069\u006f\u006e";case TIntermediateGenericRefinementRegion :return "\u0049\u006e\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0020\u0052\u0065\u0066i\u006e\u0065\u006d\u0065\u006et\u0020\u0052e\u0067\u0069\u006f\u006e";case TImmediateGenericRefinementRegion :return "I\u006d\u006d\u0065\u0064\u0069\u0061t\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020\u0052\u0065\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020\u0052\u0065\u0067\u0069o\u006e";case TImmediateLosslessGenericRefinementRegion :return "\u0049m\u006d\u0065d\u0069\u0061\u0074\u0065 \u004c\u006f\u0073s\u006c\u0065\u0073\u0073\u0020\u0047\u0065\u006e\u0065ri\u0063\u0020\u0052e\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020R\u0065\u0067i\u006f\u006e";case TPageInformation :return "\u0050\u0061g\u0065\u0020\u0049n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e";case TEndOfPage :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0050\u0061\u0067\u0065";case TEndOfStrip :return "\u0045\u006e\u0064 \u004f\u0066\u0020\u0053\u0074\u0072\u0069\u0070";case TEndOfFile :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0046\u0069\u006c\u0065";case TProfiles :return "\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0073";case TTables :return "\u0054\u0061\u0062\u006c\u0065\u0073";case TExtension :return "\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn";case TBitmap :return "\u0042\u0069\u0074\u006d\u0061\u0070";};return "I\u006ev\u0061\u006c\u0069\u0064\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0020Ki\u006e\u0064";};func (_ebdba *TextRegion )decodeRdx ()(int64 ,error ){const _gcfg ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064x";if _ebdba .IsHuffmanEncoded {if _ebdba .SbHuffRDX ==3{if _ebdba ._bbddf ==nil {var (_egcb int ;_ddcaa error ;);if _ebdba .SbHuffFS ==3{_egcb ++;};if _ebdba .SbHuffDS ==3{_egcb ++;};if _ebdba .SbHuffDT ==3{_egcb ++;};if _ebdba .SbHuffRDWidth ==3{_egcb ++;};if _ebdba .SbHuffRDHeight ==3{_egcb ++;};_ebdba ._bbddf ,_ddcaa =_ebdba .getUserTable (_egcb );if _ddcaa !=nil {return 0,_fg .Wrap (_ddcaa ,_gcfg ,"");};};return _ebdba ._bbddf .Decode (_ebdba ._bgbcd );};_edfa ,_aadb :=_fc .GetStandardTable (14+int (_ebdba .SbHuffRDX ));if _aadb !=nil {return 0,_fg .Wrap (_aadb ,_gcfg ,"");};return _edfa .Decode (_ebdba ._bgbcd );};_ebfb ,_fgea :=_ebdba ._gbfa .DecodeInt (_ebdba ._acbff );if _fgea !=nil {return 0,_fg .Wrap (_fgea ,_gcfg ,"");};return int64 (_ebfb ),nil ;};func (_fbbc *TextRegion )decodeRdw ()(int64 ,error ){const _afcb ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064w";if _fbbc .IsHuffmanEncoded {if _fbbc .SbHuffRDWidth ==3{if _fbbc ._fcdad ==nil {var (_bcdc int ;_egad error ;);if _fbbc .SbHuffFS ==3{_bcdc ++;};if _fbbc .SbHuffDS ==3{_bcdc ++;};if _fbbc .SbHuffDT ==3{_bcdc ++;};_fbbc ._fcdad ,_egad =_fbbc .getUserTable (_bcdc );if _egad !=nil {return 0,_fg .Wrap (_egad ,_afcb ,"");};};return _fbbc ._fcdad .Decode (_fbbc ._bgbcd );};_fdba ,_ebcbb :=_fc .GetStandardTable (14+int (_fbbc .SbHuffRDWidth ));if _ebcbb !=nil {return 0,_fg .Wrap (_ebcbb ,_afcb ,"");};return _fdba .Decode (_fbbc ._bgbcd );};_bgcff ,_cgaf :=_fbbc ._gbfa .DecodeInt (_fbbc ._gebd );if _cgaf !=nil {return 0,_fg .Wrap (_cgaf ,_afcb ,"");};return int64 (_bgcff ),nil ;};func (_fab *PageInformationSegment )Size ()int {return 19};func (_cf *GenericRefinementRegion )decodeTypicalPredictedLine (_ace ,_bfg ,_eg ,_bfa ,_dcg ,_ef int )error {_fb :=_ace -int (_cf .ReferenceDY );_cad :=_cf .ReferenceBitmap .GetByteIndex (0,_fb );_fffg :=_cf .RegionBitmap .GetByteIndex (0,_ace );var _dee error ;switch _cf .TemplateID {case 0:_dee =_cf .decodeTypicalPredictedLineTemplate0 (_ace ,_bfg ,_eg ,_bfa ,_dcg ,_ef ,_fffg ,_fb ,_cad );case 1:_dee =_cf .decodeTypicalPredictedLineTemplate1 (_ace ,_bfg ,_eg ,_bfa ,_dcg ,_ef ,_fffg ,_fb ,_cad );};return _dee ;};var _ templater =&template1 {};func (_ffcd *Header )readReferredToSegmentNumbers (_fec _e .StreamReader ,_badc int )([]int ,error ){const _fbadee ="\u0072\u0065\u0061\u0064R\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053e\u0067m\u0065\u006e\u0074\u004e\u0075\u006d\u0062e\u0072\u0073";_dadfc :=make ([]int ,_badc );if _badc > 0{_ffcd .RTSegments =make ([]*Header ,_badc );var (_bedd uint64 ;_cgea error ;);for _bfaec :=0;_bfaec < _badc ;_bfaec ++{_bedd ,_cgea =_fec .ReadBits (byte (_ffcd .referenceSize ())<<3);if _cgea !=nil {return nil ,_fg .Wrapf (_cgea ,_fbadee ,"\u0027\u0025\u0064\u0027 \u0072\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0020\u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u0075\u006db\u0065\u0072",_bfaec );};_dadfc [_bfaec ]=int (_bedd &_c .MaxInt32 );};};return _dadfc ,nil ;};type EncodeInitializer interface{InitEncode ();};func (_eecd *PatternDictionary )Init (h *Header ,r _e .StreamReader )error {_eecd ._abbe =r ;return _eecd .parseHeader ();};func (_eaeb *GenericRegion )Size ()int {return _eaeb .RegionSegment .Size ()+1+2*len (_eaeb .GBAtX )};func (_bec *GenericRefinementRegion )setParameters (_dac *_agc .DecoderStats ,_bed *_agc .Decoder ,_dbf int8 ,_acb ,_gfb uint32 ,_dbad *_ad .Bitmap ,_bfac ,_gae int32 ,_cfb bool ,_bfga []int8 ,_ggae []int8 ){_ff .Log .Trace ("\u005b\u0047\u0045NE\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052E\u0047I\u004fN\u005d \u0073\u0065\u0074\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073");if _dac !=nil {_bec ._ga =_dac ;};if _bed !=nil {_bec ._ab =_bed ;};_bec .TemplateID =_dbf ;_bec .RegionInfo .BitmapWidth =_acb ;_bec .RegionInfo .BitmapHeight =_gfb ;_bec .ReferenceBitmap =_dbad ;_bec .ReferenceDX =_bfac ;_bec .ReferenceDY =_gae ;_bec .IsTPGROn =_cfb ;_bec .GrAtX =_bfga ;_bec .GrAtY =_ggae ;_bec .RegionBitmap =nil ;_ff .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073 f\u0069\u006ei\u0073\u0068\u0065\u0064\u002e\u0020\u0025\u0073",_bec );};func (_cgf *GenericRefinementRegion )updateOverride ()error {if _cgf .GrAtX ==nil ||_cgf .GrAtY ==nil {return _b .New ("\u0041\u0054\u0020\u0070\u0069\u0078\u0065\u006c\u0073\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");};if len (_cgf .GrAtX )!=len (_cgf .GrAtY ){return _b .New ("A\u0054\u0020\u0070\u0069xe\u006c \u0069\u006e\u0063\u006f\u006es\u0069\u0073\u0074\u0065\u006e\u0074");};_cgf ._cc =make ([]bool ,len (_cgf .GrAtX ));switch _cgf .TemplateID {case 0:if _cgf .GrAtX [0]!=-1&&_cgf .GrAtY [0]!=-1{_cgf ._cc [0]=true ;_cgf ._db =true ;};if _cgf .GrAtX [1]!=-1&&_cgf .GrAtY [1]!=-1{_cgf ._cc [1]=true ;_cgf ._db =true ;};case 1:_cgf ._db =false ;};return nil ;};type template0 struct{};func (_edaa *PatternDictionary )readPatternWidthAndHeight ()error {_gfcf ,_bggg :=_edaa ._abbe .ReadByte ();if _bggg !=nil {return _bggg ;};_edaa .HdpWidth =_gfcf ;_gfcf ,_bggg =_edaa ._abbe .ReadByte ();if _bggg !=nil {return _bggg ;};_edaa .HdpHeight =_gfcf ;return nil ;};func (_adca *SymbolDictionary )setSymbolsArray ()error {if _adca ._edgg ==nil {if _eccc :=_adca .retrieveImportSymbols ();_eccc !=nil {return _eccc ;};};if _adca ._bbdg ==nil {_adca ._bbdg =append (_adca ._bbdg ,_adca ._edgg ...);};return nil ;};func (_daac *TextRegion )setParameters (_fdaba *_agc .Decoder ,_gcba ,_dadd bool ,_dbfgg ,_ccceg uint32 ,_fcge uint32 ,_dbcg int8 ,_efae uint32 ,_ccdg int8 ,_gbef _ad .CombinationOperator ,_ecdfg int8 ,_dbfed int16 ,_abee ,_fecgd ,_gdc ,_ccab ,_dafe ,_aefe ,_cbbc ,_cbddb ,_bfaa ,_gdac int8 ,_aeafb ,_aeea []int8 ,_badg []*_ad .Bitmap ,_dcba int8 ){_daac ._gbfa =_fdaba ;_daac .IsHuffmanEncoded =_gcba ;_daac .UseRefinement =_dadd ;_daac .RegionInfo .BitmapWidth =_dbfgg ;_daac .RegionInfo .BitmapHeight =_ccceg ;_daac .NumberOfSymbolInstances =_fcge ;_daac .SbStrips =_dbcg ;_daac .NumberOfSymbols =_efae ;_daac .DefaultPixel =_ccdg ;_daac .CombinationOperator =_gbef ;_daac .IsTransposed =_ecdfg ;_daac .ReferenceCorner =_dbfed ;_daac .SbdsOffset =_abee ;_daac .SbHuffFS =_fecgd ;_daac .SbHuffDS =_gdc ;_daac .SbHuffDT =_ccab ;_daac .SbHuffRDWidth =_dafe ;_daac .SbHuffRDHeight =_aefe ;_daac .SbHuffRDX =_cbbc ;_daac .SbHuffRDY =_cbddb ;_daac .SbrTemplate =_gdac ;_daac .SbrATX =_aeafb ;_daac .SbrATY =_aeea ;_daac .Symbols =_badg ;_daac ._gcbd =_dcba ;};func (_ebea *Header )writeReferredToCount (_aaaa _e .BinaryWriter )(_begf int ,_cffc error ){const _ecdg ="w\u0072i\u0074\u0065\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0043ou\u006e\u0074";_ebea .RTSNumbers =make ([]int ,len (_ebea .RTSegments ));for _degc ,_eaef :=range _ebea .RTSegments {_ebea .RTSNumbers [_degc ]=int (_eaef .SegmentNumber );};if len (_ebea .RTSNumbers )<=4{var _gddd byte ;if len (_ebea .RetainBits )>=1{_gddd =byte (_ebea .RetainBits [0]);};_gddd |=byte (len (_ebea .RTSNumbers ))<<5;if _cffc =_aaaa .WriteByte (_gddd );_cffc !=nil {return 0,_fg .Wrap (_cffc ,_ecdg ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return 1,nil ;};_gfga :=uint32 (len (_ebea .RTSNumbers ));_adda :=make ([]byte ,4+_ac .Ceil (len (_ebea .RTSNumbers )+1,8));_gfga |=0x7<<29;_ag .BigEndian .PutUint32 (_adda ,_gfga );copy (_adda [1:],_ebea .RetainBits );_begf ,_cffc =_aaaa .Write (_adda );if _cffc !=nil {return 0,_fg .Wrap (_cffc ,_ecdg ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return _begf ,nil ;};func (_ffea *HalftoneRegion )parseHeader ()error {if _dbd :=_ffea .RegionSegment .parseHeader ();_dbd !=nil {return _dbd ;};_bcf ,_ageb :=_ffea ._ecee .ReadBit ();if _ageb !=nil {return _ageb ;};_ffea .HDefaultPixel =int8 (_bcf );_dgb ,_ageb :=_ffea ._ecee .ReadBits (3);if _ageb !=nil {return _ageb ;};_ffea .CombinationOperator =_ad .CombinationOperator (_dgb &0xf);_bcf ,_ageb =_ffea ._ecee .ReadBit ();if _ageb !=nil {return _ageb ;};if _bcf ==1{_ffea .HSkipEnabled =true ;};_dgb ,_ageb =_ffea ._ecee .ReadBits (2);if _ageb !=nil {return _ageb ;};_ffea .HTemplate =byte (_dgb &0xf);_bcf ,_ageb =_ffea ._ecee .ReadBit ();if _ageb !=nil {return _ageb ;};if _bcf ==1{_ffea .IsMMREncoded =true ;};_dgb ,_ageb =_ffea ._ecee .ReadBits (32);if _ageb !=nil {return _ageb ;};_ffea .HGridWidth =uint32 (_dgb &_c .MaxUint32 );_dgb ,_ageb =_ffea ._ecee .ReadBits (32);if _ageb !=nil {return _ageb ;};_ffea .HGridHeight =uint32 (_dgb &_c .MaxUint32 );_dgb ,_ageb =_ffea ._ecee .ReadBits (32);if _ageb !=nil {return _ageb ;};_ffea .HGridX =int32 (_dgb &_c .MaxInt32 );_dgb ,_ageb =_ffea ._ecee .ReadBits (32);if _ageb !=nil {return _ageb ;};_ffea .HGridY =int32 (_dgb &_c .MaxInt32 );_dgb ,_ageb =_ffea ._ecee .ReadBits (16);if _ageb !=nil {return _ageb ;};_ffea .HRegionX =uint16 (_dgb &_c .MaxUint16 );_dgb ,_ageb =_ffea ._ecee .ReadBits (16);if _ageb !=nil {return _ageb ;};_ffea .HRegionY =uint16 (_dgb &_c .MaxUint16 );if _ageb =_ffea .computeSegmentDataStructure ();_ageb !=nil {return _ageb ;};return _ffea .checkInput ();};func (_eeef *TextRegion )decodeDT ()(_fagf int64 ,_bfcc error ){if _eeef .IsHuffmanEncoded {if _eeef .SbHuffDT ==3{_fagf ,_bfcc =_eeef ._ceadf .Decode (_eeef ._bgbcd );if _bfcc !=nil {return 0,_bfcc ;};}else {var _adbe _fc .Tabler ;_adbe ,_bfcc =_fc .GetStandardTable (11+int (_eeef .SbHuffDT ));if _bfcc !=nil {return 0,_bfcc ;};_fagf ,_bfcc =_adbe .Decode (_eeef ._bgbcd );if _bfcc !=nil {return 0,_bfcc ;};};}else {var _eggd int32 ;_eggd ,_bfcc =_eeef ._gbfa .DecodeInt (_eeef ._ggfcg );if _bfcc !=nil {return ;};_fagf =int64 (_eggd );};_fagf *=int64 (_eeef .SbStrips );return _fagf ,nil ;};func (_fecb *TextRegion )String ()string {_daec :=&_f .Builder {};_daec .WriteString ("\u000a[\u0054E\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u000a");_daec .WriteString (_fecb .RegionInfo .String ()+"\u000a");_daec .WriteString (_ce .Sprintf ("\u0009\u002d\u0020\u0053br\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0025\u0076\u000a",_fecb .SbrTemplate ));_daec .WriteString (_ce .Sprintf ("\u0009-\u0020S\u0062\u0064\u0073\u004f\u0066f\u0073\u0065t\u003a\u0020\u0025\u0076\u000a",_fecb .SbdsOffset ));_daec .WriteString (_ce .Sprintf ("\t\u002d \u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0050i\u0078\u0065\u006c\u003a %\u0076\u000a",_fecb .DefaultPixel ));_daec .WriteString (_ce .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0076\u000a",_fecb .CombinationOperator ));_daec .WriteString (_ce .Sprintf ("\t\u002d \u0049\u0073\u0054\u0072\u0061\u006e\u0073\u0070o\u0073\u0065\u0064\u003a %\u0076\u000a",_fecb .IsTransposed ));_daec .WriteString (_ce .Sprintf ("\u0009\u002d\u0020Re\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0043\u006f\u0072\u006e\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_fecb .ReferenceCorner ));_daec .WriteString (_ce .Sprintf ("\t\u002d\u0020\u0055\u0073eR\u0065f\u0069\u006e\u0065\u006d\u0065n\u0074\u003a\u0020\u0025\u0076\u000a",_fecb .UseRefinement ));_daec .WriteString (_ce .Sprintf ("\u0009-\u0020\u0049\u0073\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045n\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0076\u000a",_fecb .IsHuffmanEncoded ));if _fecb .IsHuffmanEncoded {_daec .WriteString (_ce .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_fecb .SbHuffRSize ));_daec .WriteString (_ce .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0059:\u0020\u0025\u0076\u000a",_fecb .SbHuffRDY ));_daec .WriteString (_ce .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0058:\u0020\u0025\u0076\u000a",_fecb .SbHuffRDX ));_daec .WriteString (_ce .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069\u0067\u0068\u0074\u003a\u0020\u0025v\u000a",_fecb .SbHuffRDHeight ));_daec .WriteString (_ce .Sprintf ("\t\u002d\u0020\u0053\u0062Hu\u0066f\u0052\u0044\u0057\u0069\u0064t\u0068\u003a\u0020\u0025\u0076\u000a",_fecb .SbHuffRDWidth ));_daec .WriteString (_ce .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0054\u003a\u0020\u0025\u0076\u000a",_fecb .SbHuffDT ));_daec .WriteString (_ce .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0053\u003a\u0020\u0025\u0076\u000a",_fecb .SbHuffDS ));_daec .WriteString (_ce .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0046\u0053\u003a\u0020\u0025\u0076\u000a",_fecb .SbHuffFS ));};_daec .WriteString (_ce .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_fecb .SbrATX ));_daec .WriteString (_ce .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0059:\u0020\u0025\u0076\u000a",_fecb .SbrATY ));_daec .WriteString (_ce .Sprintf ("\u0009\u002d\u0020N\u0075\u006d\u0062\u0065r\u004f\u0066\u0053\u0079\u006d\u0062\u006fl\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_fecb .NumberOfSymbolInstances ));_daec .WriteString (_ce .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_fecb .SbrATX ));return _daec .String ();};func (_fecc *TextRegion )setCodingStatistics ()error {if _fecc ._ggfcg ==nil {_fecc ._ggfcg =_agc .NewStats (512,1);};if _fecc ._bebad ==nil {_fecc ._bebad =_agc .NewStats (512,1);};if _fecc ._baaeb ==nil {_fecc ._baaeb =_agc .NewStats (512,1);};if _fecc ._bacg ==nil {_fecc ._bacg =_agc .NewStats (512,1);};if _fecc ._ebec ==nil {_fecc ._ebec =_agc .NewStats (512,1);};if _fecc ._gebd ==nil {_fecc ._gebd =_agc .NewStats (512,1);};if _fecc ._eege ==nil {_fecc ._eege =_agc .NewStats (512,1);};if _fecc ._acege ==nil {_fecc ._acege =_agc .NewStats (1<<uint (_fecc ._gcbd ),1);};if _fecc ._acbff ==nil {_fecc ._acbff =_agc .NewStats (512,1);};if _fecc ._ggagf ==nil {_fecc ._ggagf =_agc .NewStats (512,1);};if _fecc ._gbfa ==nil {var _gcgd error ;_fecc ._gbfa ,_gcgd =_agc .New (_fecc ._bgbcd );if _gcgd !=nil {return _gcgd ;};};return nil ;};func (_gab *Header )GetSegmentData ()(Segmenter ,error ){var _fde Segmenter ;if _gab .SegmentData !=nil {_fde =_gab .SegmentData ;};if _fde ==nil {_egc ,_gega :=_beaf [_gab .Type ];if !_gega {return nil ,_ce .Errorf ("\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0073\u002f\u0020\u0025\u0064\u0020\u0063\u0072e\u0061t\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e\u0020",_gab .Type ,_gab .Type );};_fde =_egc ();_ff .Log .Trace ("\u005b\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u0020\u0061\u0074\u0020\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0030\u0034\u0058",_gab .SegmentNumber ,_gab .SegmentDataStartOffset );_efc ,_ccbc :=_gab .subInputReader ();if _ccbc !=nil {return nil ,_ccbc ;};if _gfca :=_fde .Init (_gab ,_efc );_gfca !=nil {_ff .Log .Debug ("\u0049\u006e\u0069\u0074 \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076 \u0066o\u0072\u0020\u0074\u0079\u0070\u0065\u003a \u0025\u0054",_gfca ,_fde );return nil ,_gfca ;};_gab .SegmentData =_fde ;};return _fde ,nil ;};type SegmentEncoder interface{Encode (_aedd _e .BinaryWriter )(_gegf int ,_efca error );};func (_feaac *PatternDictionary )setGbAtPixels (){if _feaac .HDTemplate ==0{_feaac .GBAtX =make ([]int8 ,4);_feaac .GBAtY =make ([]int8 ,4);_feaac .GBAtX [0]=-int8 (_feaac .HdpWidth );_feaac .GBAtY [0]=0;_feaac .GBAtX [1]=-3;_feaac .GBAtY [1]=-1;_feaac .GBAtX [2]=2;_feaac .GBAtY [2]=-2;_feaac .GBAtX [3]=-2;_feaac .GBAtY [3]=-2;}else {_feaac .GBAtX =[]int8 {-int8 (_feaac .HdpWidth )};_feaac .GBAtY =[]int8 {0};};};func (_dfcd *TableSegment )HtRS ()int32 {return _dfcd ._babdc };func (_fdbd *Header )writeSegmentPageAssociation (_defb _e .BinaryWriter )(_fdggf int ,_dbc error ){const _fgef ="w\u0072\u0069\u0074\u0065\u0053\u0065g\u006d\u0065\u006e\u0074\u0050\u0061\u0067\u0065\u0041s\u0073\u006f\u0063i\u0061t\u0069\u006f\u006e";if _fdbd .pageSize ()!=4{if _dbc =_defb .WriteByte (byte (_fdbd .PageAssociation ));_dbc !=nil {return 0,_fg .Wrap (_dbc ,_fgef ,"\u0070\u0061\u0067\u0065\u0053\u0069\u007a\u0065\u0020\u0021\u003d\u0020\u0034");};return 1,nil ;};_cgbg :=make ([]byte ,4);_ag .BigEndian .PutUint32 (_cgbg ,uint32 (_fdbd .PageAssociation ));if _fdggf ,_dbc =_defb .Write (_cgbg );_dbc !=nil {return 0,_fg .Wrap (_dbc ,_fgef ,"\u0034 \u0062y\u0074\u0065\u0020\u0070\u0061g\u0065\u0020n\u0075\u006d\u0062\u0065\u0072");};return _fdggf ,nil ;};func (_fced *PageInformationSegment )Init (h *Header ,r _e .StreamReader )(_dbdf error ){_fced ._cgbc =r ;if _dbdf =_fced .parseHeader ();_dbdf !=nil {return _fg .Wrap (_dbdf ,"P\u0061\u0067\u0065\u0049\u006e\u0066o\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065g\u006d\u0065\u006et\u002eI\u006e\u0069\u0074","");};return nil ;};func (_cacde *TableSegment )HtOOB ()int32 {return _cacde ._eacd };func (_fgedc *TableSegment )Init (h *Header ,r _e .StreamReader )error {_fgedc ._fafa =r ;return _fgedc .parseHeader ();};var _ _fc .BasicTabler =&TableSegment {};func (_abd *GenericRefinementRegion )decodeTemplate (_fac ,_ceb ,_bfec ,_ccbd ,_dgc ,_faa ,_fffbg ,_deea ,_bcc ,_abde int ,_ddgd templater )(_gba error ){var (_aeg ,_deec ,_cgb ,_eefb ,_gad int16 ;_fcbg ,_fbd ,_aec ,_ffe int ;_cga byte ;);if _bcc >=1&&(_bcc -1)< _abd .ReferenceBitmap .Height {_cga ,_gba =_abd .ReferenceBitmap .GetByte (_abde -_ccbd );if _gba !=nil {return ;};_fcbg =int (_cga );};if _bcc >=0&&(_bcc )< _abd .ReferenceBitmap .Height {_cga ,_gba =_abd .ReferenceBitmap .GetByte (_abde );if _gba !=nil {return ;};_fbd =int (_cga );};if _bcc >=-1&&(_bcc +1)< _abd .ReferenceBitmap .Height {_cga ,_gba =_abd .ReferenceBitmap .GetByte (_abde +_ccbd );if _gba !=nil {return ;};_aec =int (_cga );};_abde ++;if _fac >=1{_cga ,_gba =_abd .RegionBitmap .GetByte (_deea -_bfec );if _gba !=nil {return ;};_ffe =int (_cga );};_deea ++;_cbf :=_abd .ReferenceDX %8;_aagg :=6+_cbf ;_gdf :=_abde %_ccbd ;if _aagg >=0{if _aagg < 8{_aeg =int16 (_fcbg >>uint (_aagg ))&0x07;};if _aagg < 8{_deec =int16 (_fbd >>uint (_aagg ))&0x07;};if _aagg < 8{_cgb =int16 (_aec >>uint (_aagg ))&0x07;};if _aagg ==6&&_gdf > 1{if _bcc >=1&&(_bcc -1)< _abd .ReferenceBitmap .Height {_cga ,_gba =_abd .ReferenceBitmap .GetByte (_abde -_ccbd -2);if _gba !=nil {return _gba ;};_aeg |=int16 (_cga <<2)&0x04;};if _bcc >=0&&_bcc < _abd .ReferenceBitmap .Height {_cga ,_gba =_abd .ReferenceBitmap .GetByte (_abde -2);if _gba !=nil {return _gba ;};_deec |=int16 (_cga <<2)&0x04;};if _bcc >=-1&&_bcc +1< _abd .ReferenceBitmap .Height {_cga ,_gba =_abd .ReferenceBitmap .GetByte (_abde +_ccbd -2);if _gba !=nil {return _gba ;};_cgb |=int16 (_cga <<2)&0x04;};};if _aagg ==0{_fcbg =0;_fbd =0;_aec =0;if _gdf < _ccbd -1{if _bcc >=1&&_bcc -1< _abd .ReferenceBitmap .Height {_cga ,_gba =_abd .ReferenceBitmap .GetByte (_abde -_ccbd );if _gba !=nil {return _gba ;};_fcbg =int (_cga );};if _bcc >=0&&_bcc < _abd .ReferenceBitmap .Height {_cga ,_gba =_abd .ReferenceBitmap .GetByte (_abde );if _gba !=nil {return _gba ;};_fbd =int (_cga );};if _bcc >=-1&&_bcc +1< _abd .ReferenceBitmap .Height {_cga ,_gba =_abd .ReferenceBitmap .GetByte (_abde +_ccbd );if _gba !=nil {return _gba ;};_aec =int (_cga );};};_abde ++;};}else {_aeg =int16 (_fcbg <<1)&0x07;_deec =int16 (_fbd <<1)&0x07;_cgb =int16 (_aec <<1)&0x07;_fcbg =0;_fbd =0;_aec =0;if _gdf < _ccbd -1{if _bcc >=1&&_bcc -1< _abd .ReferenceBitmap .Height {_cga ,_gba =_abd .ReferenceBitmap .GetByte (_abde -_ccbd );if _gba !=nil {return _gba ;};_fcbg =int (_cga );};if _bcc >=0&&_bcc < _abd .ReferenceBitmap .Height {_cga ,_gba =_abd .ReferenceBitmap .GetByte (_abde );if _gba !=nil {return _gba ;};_fbd =int (_cga );};if _bcc >=-1&&_bcc +1< _abd .ReferenceBitmap .Height {_cga ,_gba =_abd .ReferenceBitmap .GetByte (_abde +_ccbd );if _gba !=nil {return _gba ;};_aec =int (_cga );};_abde ++;};_aeg |=int16 ((_fcbg >>7)&0x07);_deec |=int16 ((_fbd >>7)&0x07);_cgb |=int16 ((_aec >>7)&0x07);};_eefb =int16 (_ffe >>6);_gad =0;_ece :=(2-_cbf )%8;_fcbg <<=uint (_ece );_fbd <<=uint (_ece );_aec <<=uint (_ece );_ffe <<=2;var _ebg int ;for _agb :=0;_agb < _ceb ;_agb ++{_dbg :=_agb &0x07;_bfd :=_ddgd .form (_aeg ,_deec ,_cgb ,_eefb ,_gad );if _abd ._db {_cga ,_gba =_abd .RegionBitmap .GetByte (_abd .RegionBitmap .GetByteIndex (_agb ,_fac ));if _gba !=nil {return _gba ;};_abd ._ga .SetIndex (int32 (_abd .overrideAtTemplate0 (int (_bfd ),_agb ,_fac ,int (_cga ),_dbg )));}else {_abd ._ga .SetIndex (int32 (_bfd ));};_ebg ,_gba =_abd ._ab .DecodeBit (_abd ._ga );if _gba !=nil {return _gba ;};if _gba =_abd .RegionBitmap .SetPixel (_agb ,_fac ,byte (_ebg ));_gba !=nil {return _gba ;};_aeg =((_aeg <<1)|0x01&int16 (_fcbg >>7))&0x07;_deec =((_deec <<1)|0x01&int16 (_fbd >>7))&0x07;_cgb =((_cgb <<1)|0x01&int16 (_aec >>7))&0x07;_eefb =((_eefb <<1)|0x01&int16 (_ffe >>7))&0x07;_gad =int16 (_ebg );if (_agb -int (_abd .ReferenceDX ))%8==5{_fcbg =0;_fbd =0;_aec =0;if ((_agb -int (_abd .ReferenceDX ))/8)+1< _abd .ReferenceBitmap .RowStride {if _bcc >=1&&(_bcc -1)< _abd .ReferenceBitmap .Height {_cga ,_gba =_abd .ReferenceBitmap .GetByte (_abde -_ccbd );if _gba !=nil {return _gba ;};_fcbg =int (_cga );};if _bcc >=0&&_bcc < _abd .ReferenceBitmap .Height {_cga ,_gba =_abd .ReferenceBitmap .GetByte (_abde );if _gba !=nil {return _gba ;};_fbd =int (_cga );};if _bcc >=-1&&(_bcc +1)< _abd .ReferenceBitmap .Height {_cga ,_gba =_abd .ReferenceBitmap .GetByte (_abde +_ccbd );if _gba !=nil {return _gba ;};_aec =int (_cga );};};_abde ++;}else {_fcbg <<=1;_fbd <<=1;_aec <<=1;};if _dbg ==5&&_fac >=1{if ((_agb >>3)+1)>=_abd .RegionBitmap .RowStride {_ffe =0;}else {_cga ,_gba =_abd .RegionBitmap .GetByte (_deea -_bfec );if _gba !=nil {return _gba ;};_ffe =int (_cga );};_deea ++;}else {_ffe <<=1;};};return nil ;};type GenericRefinementRegion struct{_adf templater ;_ada templater ;_ffc _e .StreamReader ;_ge *Header ;RegionInfo *RegionSegment ;IsTPGROn bool ;TemplateID int8 ;Template templater ;GrAtX []int8 ;GrAtY []int8 ;RegionBitmap *_ad .Bitmap ;ReferenceBitmap *_ad .Bitmap ;ReferenceDX int32 ;ReferenceDY int32 ;_ab *_agc .Decoder ;_ga *_agc .DecoderStats ;_db bool ;_cc []bool ;};type EndOfStripe struct{_aca _e .StreamReader ;_bd int ;};func (_fged *HalftoneRegion )grayScaleDecoding (_fega int )([][]int ,error ){var (_ecae []int8 ;_fedgg []int8 ;);if !_fged .IsMMREncoded {_ecae =make ([]int8 ,4);_fedgg =make ([]int8 ,4);if _fged .HTemplate <=1{_ecae [0]=3;}else if _fged .HTemplate >=2{_ecae [0]=2;};_fedgg [0]=-1;_ecae [1]=-3;_fedgg [1]=-1;_ecae [2]=2;_fedgg [2]=-2;_ecae [3]=-2;_fedgg [3]=-2;};_ceae :=make ([]*_ad .Bitmap ,_fega );_fdd :=NewGenericRegion (_fged ._ecee );_fdd .setParametersMMR (_fged .IsMMREncoded ,_fged .DataOffset ,_fged .DataLength ,_fged .HGridHeight ,_fged .HGridWidth ,_fged .HTemplate ,false ,_fged .HSkipEnabled ,_ecae ,_fedgg );_eceed :=_fega -1;var _beg error ;_ceae [_eceed ],_beg =_fdd .GetRegionBitmap ();if _beg !=nil {return nil ,_beg ;};for _eceed > 0{_eceed --;_fdd .Bitmap =nil ;_ceae [_eceed ],_beg =_fdd .GetRegionBitmap ();if _beg !=nil {return nil ,_beg ;};if _beg =_fged .combineGrayscalePlanes (_ceae ,_eceed );_beg !=nil {return nil ,_beg ;};};return _fged .computeGrayScalePlanes (_ceae ,_fega );};type GenericRegion struct{_efa _e .StreamReader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;UseExtTemplates bool ;IsTPGDon bool ;GBTemplate byte ;IsMMREncoded bool ;UseMMR bool ;GBAtX []int8 ;GBAtY []int8 ;GBAtOverride []bool ;_dfb bool ;Bitmap *_ad .Bitmap ;_cbb *_agc .Decoder ;_cee *_agc .DecoderStats ;_fbad *_dg .Decoder ;};func (_aggg *GenericRegion )decodeTemplate2 (_ceea ,_dec ,_bage int ,_gcg ,_gbf int )(_cde error ){const _babd ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0032";var (_bgb ,_bbc int ;_aaa ,_cdee int ;_cdgbf byte ;_gbfg ,_deca int ;);if _ceea >=1{_cdgbf ,_cde =_aggg .Bitmap .GetByte (_gbf );if _cde !=nil {return _fg .Wrap (_cde ,_babd ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0031");};_aaa =int (_cdgbf );};if _ceea >=2{_cdgbf ,_cde =_aggg .Bitmap .GetByte (_gbf -_aggg .Bitmap .RowStride );if _cde !=nil {return _fg .Wrap (_cde ,_babd ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0032");};_cdee =int (_cdgbf )<<4;};_bgb =(_aaa >>3&0x7c)|(_cdee >>3&0x380);for _abda :=0;_abda < _bage ;_abda =_gbfg {var (_cca byte ;_cdf int ;);_gbfg =_abda +8;if _cddc :=_dec -_abda ;_cddc > 8{_cdf =8;}else {_cdf =_cddc ;};if _ceea > 0{_aaa <<=8;if _gbfg < _dec {_cdgbf ,_cde =_aggg .Bitmap .GetByte (_gbf +1);if _cde !=nil {return _fg .Wrap (_cde ,_babd ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0030");};_aaa |=int (_cdgbf );};};if _ceea > 1{_cdee <<=8;if _gbfg < _dec {_cdgbf ,_cde =_aggg .Bitmap .GetByte (_gbf -_aggg .Bitmap .RowStride +1);if _cde !=nil {return _fg .Wrap (_cde ,_babd ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0031");};_cdee |=int (_cdgbf )<<4;};};for _edad :=0;_edad < _cdf ;_edad ++{_fcdb :=uint (10-_edad );if _aggg ._dfb {_bbc =_aggg .overrideAtTemplate2 (_bgb ,_abda +_edad ,_ceea ,int (_cca ),_edad );_aggg ._cee .SetIndex (int32 (_bbc ));}else {_aggg ._cee .SetIndex (int32 (_bgb ));};_deca ,_cde =_aggg ._cbb .DecodeBit (_aggg ._cee );if _cde !=nil {return _fg .Wrap (_cde ,_babd ,"");};_cca |=byte (_deca <<uint (7-_edad ));_bgb =((_bgb &0x1bd)<<1)|_deca |((_aaa >>_fcdb )&0x4)|((_cdee >>_fcdb )&0x80);};if _fcab :=_aggg .Bitmap .SetByte (_gcg ,_cca );_fcab !=nil {return _fg .Wrap (_fcab ,_babd ,"");};_gcg ++;_gbf ++;};return nil ;};func (_cdegg *TextRegion )initSymbols ()error {const _ecdga ="i\u006e\u0069\u0074\u0053\u0079\u006d\u0062\u006f\u006c\u0073";for _ ,_bbbd :=range _cdegg .Header .RTSegments {if _bbbd ==nil {return _fg .Error (_ecdga ,"\u006e\u0069\u006c\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020pr\u006f\u0076\u0069\u0064\u0065\u0064 \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0074\u0065\u0078\u0074\u0020\u0072\u0065g\u0069\u006f\u006e\u0020\u0053\u0079\u006d\u0062o\u006c\u0073");};if _bbbd .Type ==0{_gcefg ,_dbeg :=_bbbd .GetSegmentData ();if _dbeg !=nil {return _fg .Wrap (_dbeg ,_ecdga ,"");};_dbabb ,_badd :=_gcefg .(*SymbolDictionary );if !_badd {return _fg .Error (_ecdga ,"\u0072e\u0066\u0065r\u0072\u0065\u0064 \u0054\u006f\u0020\u0053\u0065\u0067\u006de\u006e\u0074\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_dbabb ._fcgcb =_cdegg ._acege ;_dgge ,_dbeg :=_dbabb .GetDictionary ();if _dbeg !=nil {return _fg .Wrap (_dbeg ,_ecdga ,"");};_cdegg .Symbols =append (_cdegg .Symbols ,_dgge ...);};};_cdegg .NumberOfSymbols =uint32 (len (_cdegg .Symbols ));return nil ;};func (_ccc *SymbolDictionary )encodeNumSyms (_gegfd _e .BinaryWriter )(_agaa int ,_eabbe error ){const _gff ="\u0065\u006e\u0063\u006f\u0064\u0065\u004e\u0075\u006d\u0053\u0079\u006d\u0073";_acf :=make ([]byte ,4);_ag .BigEndian .PutUint32 (_acf ,_ccc .NumberOfExportedSymbols );if _agaa ,_eabbe =_gegfd .Write (_acf );_eabbe !=nil {return _agaa ,_fg .Wrap (_eabbe ,_gff ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};_ag .BigEndian .PutUint32 (_acf ,_ccc .NumberOfNewSymbols );_dbb ,_eabbe :=_gegfd .Write (_acf );if _eabbe !=nil {return _agaa ,_fg .Wrap (_eabbe ,_gff ,"n\u0065\u0077\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};return _agaa +_dbb ,nil ;};func (_gedc *TableSegment )HtLow ()int32 {return _gedc ._cda };type TableSegment struct{_fafa _e .StreamReader ;_eacd int32 ;_dcac int32 ;_babdc int32 ;_cda int32 ;_aggd int32 ;};func (_deb *RegionSegment )Size ()int {return 17};func _fffbd (_egbc _e .StreamReader ,_fddb *Header )*TextRegion {_deeed :=&TextRegion {_bgbcd :_egbc ,Header :_fddb ,RegionInfo :NewRegionSegment (_egbc )};return _deeed ;};func (_fffa *GenericRegion )copyLineAbove (_dde int )error {_bceb :=_dde *_fffa .Bitmap .RowStride ;_cdd :=_bceb -_fffa .Bitmap .RowStride ;for _gcd :=0;_gcd < _fffa .Bitmap .RowStride ;_gcd ++{_fgf ,_beb :=_fffa .Bitmap .GetByte (_cdd );if _beb !=nil {return _beb ;};_cdd ++;if _beb =_fffa .Bitmap .SetByte (_bceb ,_fgf );_beb !=nil {return _beb ;};_bceb ++;};return nil ;};func (_gdb *PageInformationSegment )checkInput ()error {if _gdb .PageBMHeight ==_c .MaxInt32 {if !_gdb .IsStripe {_ff .Log .Debug ("P\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0053\u0065\u0067me\u006e\u0074\u002e\u0049s\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0073\u0068ou\u006c\u0064 \u0062\u0065\u0020\u0074\u0072\u0075\u0065\u002e");};};return nil ;};type Documenter interface{GetPage (int )(Pager ,error );GetGlobalSegment (int )(*Header ,error );};func (_gbcb *PageInformationSegment )readCombinationOperator ()error {_bfgf ,_eebc :=_gbcb ._cgbc .ReadBits (2);if _eebc !=nil {return _eebc ;};_gbcb ._ceee =_ad .CombinationOperator (int (_bfgf ));return nil ;};type OrganizationType uint8 ;func (_ccbg *PageInformationSegment )readIsStriped ()error {_gbfc ,_ffcgb :=_ccbg ._cgbc .ReadBit ();if _ffcgb !=nil {return _ffcgb ;};if _gbfc ==1{_ccbg .IsStripe =true ;};return nil ;};func (_bde *GenericRegion )Encode (w _e .BinaryWriter )(_gfg int ,_gca error ){const _ccg ="G\u0065n\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069o\u006e\u002e\u0045\u006eco\u0064\u0065";if _bde .Bitmap ==nil {return 0,_fg .Error (_ccg ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};_dbef ,_gca :=_bde .RegionSegment .Encode (w );if _gca !=nil {return 0,_fg .Wrap (_gca ,_ccg ,"\u0052\u0065\u0067\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074");};_gfg +=_dbef ;if _gca =w .SkipBits (4);_gca !=nil {return _gfg ,_fg .Wrap (_gca ,_ccg ,"\u0073k\u0069p\u0020\u0072\u0065\u0073\u0065r\u0076\u0065d\u0020\u0062\u0069\u0074\u0073");};var _fgd int ;if _bde .IsTPGDon {_fgd =1;};if _gca =w .WriteBit (_fgd );_gca !=nil {return _gfg ,_fg .Wrap (_gca ,_ccg ,"\u0074\u0070\u0067\u0064\u006f\u006e");};_fgd =0;if _gca =w .WriteBit (int (_bde .GBTemplate >>1)&0x01);_gca !=nil {return _gfg ,_fg .Wrap (_gca ,_ccg ,"f\u0069r\u0073\u0074\u0020\u0067\u0062\u0074\u0065\u006dp\u006c\u0061\u0074\u0065 b\u0069\u0074");};if _gca =w .WriteBit (int (_bde .GBTemplate )&0x01);_gca !=nil {return _gfg ,_fg .Wrap (_gca ,_ccg ,"s\u0065\u0063\u006f\u006ed \u0067b\u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u0062\u0069\u0074");};if _bde .UseMMR {_fgd =1;};if _gca =w .WriteBit (_fgd );_gca !=nil {return _gfg ,_fg .Wrap (_gca ,_ccg ,"u\u0073\u0065\u0020\u004d\u004d\u0052\u0020\u0062\u0069\u0074");};_gfg ++;if _dbef ,_gca =_bde .writeGBAtPixels (w );_gca !=nil {return _gfg ,_fg .Wrap (_gca ,_ccg ,"");};_gfg +=_dbef ;_fcd :=_de .New ();if _gca =_fcd .EncodeBitmap (_bde .Bitmap ,_bde .IsTPGDon );_gca !=nil {return _gfg ,_fg .Wrap (_gca ,_ccg ,"");};_fcd .Final ();var _bfaf int64 ;if _bfaf ,_gca =_fcd .WriteTo (w );_gca !=nil {return _gfg ,_fg .Wrap (_gca ,_ccg ,"");};_gfg +=int (_bfaf );return _gfg ,nil ;};func (_fgg *Header )pageSize ()uint {if _fgg .PageAssociation <=255{return 1;};return 4;};func (_bccf *HalftoneRegion )Init (hd *Header ,r _e .StreamReader )error {_bccf ._ecee =r ;_bccf ._fgde =hd ;_bccf .RegionSegment =NewRegionSegment (r );return _bccf .parseHeader ();};func (_bagf *GenericRegion )updateOverrideFlags ()error {const _acga ="\u0075\u0070\u0064\u0061te\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _bagf .GBAtX ==nil ||_bagf .GBAtY ==nil {return nil ;};if len (_bagf .GBAtX )!=len (_bagf .GBAtY ){return _fg .Errorf (_acga ,"i\u006eco\u0073i\u0073t\u0065\u006e\u0074\u0020\u0041T\u0020\u0070\u0069x\u0065\u006c\u002e\u0020\u0041m\u006f\u0075\u006et\u0020\u006f\u0066\u0020\u0027\u0078\u0027\u0020\u0070\u0069\u0078e\u006c\u0073\u003a %d\u002c\u0020\u0041\u006d\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0027\u0079\u0027\u0020\u0070\u0069\u0078e\u006cs\u003a\u0020\u0025\u0064",len (_bagf .GBAtX ),len (_bagf .GBAtY ));};_bagf .GBAtOverride =make ([]bool ,len (_bagf .GBAtX ));switch _bagf .GBTemplate {case 0:if !_bagf .UseExtTemplates {if _bagf .GBAtX [0]!=3||_bagf .GBAtY [0]!=-1{_bagf .setOverrideFlag (0);};if _bagf .GBAtX [1]!=-3||_bagf .GBAtY [1]!=-1{_bagf .setOverrideFlag (1);};if _bagf .GBAtX [2]!=2||_bagf .GBAtY [2]!=-2{_bagf .setOverrideFlag (2);};if _bagf .GBAtX [3]!=-2||_bagf .GBAtY [3]!=-2{_bagf .setOverrideFlag (3);};}else {if _bagf .GBAtX [0]!=-2||_bagf .GBAtY [0]!=0{_bagf .setOverrideFlag (0);};if _bagf .GBAtX [1]!=0||_bagf .GBAtY [1]!=-2{_bagf .setOverrideFlag (1);};if _bagf .GBAtX [2]!=-2||_bagf .GBAtY [2]!=-1{_bagf .setOverrideFlag (2);};if _bagf .GBAtX [3]!=-1||_bagf .GBAtY [3]!=-2{_bagf .setOverrideFlag (3);};if _bagf .GBAtX [4]!=1||_bagf .GBAtY [4]!=-2{_bagf .setOverrideFlag (4);};if _bagf .GBAtX [5]!=2||_bagf .GBAtY [5]!=-1{_bagf .setOverrideFlag (5);};if _bagf .GBAtX [6]!=-3||_bagf .GBAtY [6]!=0{_bagf .setOverrideFlag (6);};if _bagf .GBAtX [7]!=-4||_bagf .GBAtY [7]!=0{_bagf .setOverrideFlag (7);};if _bagf .GBAtX [8]!=2||_bagf .GBAtY [8]!=-2{_bagf .setOverrideFlag (8);};if _bagf .GBAtX [9]!=3||_bagf .GBAtY [9]!=-1{_bagf .setOverrideFlag (9);};if _bagf .GBAtX [10]!=-2||_bagf .GBAtY [10]!=-2{_bagf .setOverrideFlag (10);};if _bagf .GBAtX [11]!=-3||_bagf .GBAtY [11]!=-1{_bagf .setOverrideFlag (11);};};case 1:if _bagf .GBAtX [0]!=3||_bagf .GBAtY [0]!=-1{_bagf .setOverrideFlag (0);};case 2:if _bagf .GBAtX [0]!=2||_bagf .GBAtY [0]!=-1{_bagf .setOverrideFlag (0);};case 3:if _bagf .GBAtX [0]!=2||_bagf .GBAtY [0]!=-1{_bagf .setOverrideFlag (0);};};return nil ;};func (_ebdb *HalftoneRegion )GetRegionBitmap ()(*_ad .Bitmap ,error ){if _ebdb .HalftoneRegionBitmap !=nil {return _ebdb .HalftoneRegionBitmap ,nil ;};var _dcb error ;_ebdb .HalftoneRegionBitmap =_ad .New (int (_ebdb .RegionSegment .BitmapWidth ),int (_ebdb .RegionSegment .BitmapHeight ));if _ebdb .Patterns ==nil ||len (_ebdb .Patterns )==0{_ebdb .Patterns ,_dcb =_ebdb .GetPatterns ();if _dcb !=nil {return nil ,_dcb ;};};if _ebdb .HDefaultPixel ==1{_ebdb .HalftoneRegionBitmap .SetDefaultPixel ();};_cbda :=_c .Ceil (_c .Log (float64 (len (_ebdb .Patterns )))/_c .Log (2));_gcf :=int (_cbda );var _gcfa [][]int ;_gcfa ,_dcb =_ebdb .grayScaleDecoding (_gcf );if _dcb !=nil {return nil ,_dcb ;};if _dcb =_ebdb .renderPattern (_gcfa );_dcb !=nil {return nil ,_dcb ;};return _ebdb .HalftoneRegionBitmap ,nil ;};type PageInformationSegment struct{_cgbc _e .StreamReader ;PageBMHeight int ;PageBMWidth int ;ResolutionX int ;ResolutionY int ;_baac bool ;_ceee _ad .CombinationOperator ;_edg bool ;_eeb uint8 ;_ecdc bool ;IsLossless bool ;IsStripe bool ;MaxStripeSize uint16 ;};func (_gdge *SymbolDictionary )readRefinementAtPixels (_gcef int )error {_gdge .SdrATX =make ([]int8 ,_gcef );_gdge .SdrATY =make ([]int8 ,_gcef );var (_agfd byte ;_gcdbf error ;);for _acbd :=0;_acbd < _gcef ;_acbd ++{_agfd ,_gcdbf =_gdge ._gfgg .ReadByte ();if _gcdbf !=nil {return _gcdbf ;};_gdge .SdrATX [_acbd ]=int8 (_agfd );_agfd ,_gcdbf =_gdge ._gfgg .ReadByte ();if _gcdbf !=nil {return _gcdbf ;};_gdge .SdrATY [_acbd ]=int8 (_agfd );};return nil ;};func (_eeg *HalftoneRegion )GetPatterns ()([]*_ad .Bitmap ,error ){var (_cfeg []*_ad .Bitmap ;_cebe error ;);for _ ,_acda :=range _eeg ._fgde .RTSegments {var _dffac Segmenter ;_dffac ,_cebe =_acda .GetSegmentData ();if _cebe !=nil {_ff .Log .Debug ("\u0047e\u0074\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061 \u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025v",_cebe );return nil ,_cebe ;};_deef ,_faac :=_dffac .(*PatternDictionary );if !_faac {_cebe =_ce .Errorf ("\u0072e\u006c\u0061t\u0065\u0064\u0020\u0073e\u0067\u006d\u0065n\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0070at\u0074\u0065\u0072n\u0020\u0064i\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u003a \u0025\u0054",_dffac );return nil ,_cebe ;};var _bda []*_ad .Bitmap ;_bda ,_cebe =_deef .GetDictionary ();if _cebe !=nil {_ff .Log .Debug ("\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_cebe );return nil ,_cebe ;};_cfeg =append (_cfeg ,_bda ...);};return _cfeg ,nil ;};func (_bffc *Header )writeSegmentNumber (_gfeag _e .BinaryWriter )(_bbbb int ,_gbdf error ){_aaaf :=make ([]byte ,4);_ag .BigEndian .PutUint32 (_aaaf ,_bffc .SegmentNumber );if _bbbb ,_gbdf =_gfeag .Write (_aaaf );_gbdf !=nil {return 0,_fg .Wrap (_gbdf ,"\u0048e\u0061\u0064\u0065\u0072.\u0077\u0072\u0069\u0074\u0065S\u0065g\u006de\u006e\u0074\u004e\u0075\u006d\u0062\u0065r","");};return _bbbb ,nil ;};func (_cdea *SymbolDictionary )decodeDifferenceWidth ()(int64 ,error ){if _cdea .IsHuffmanEncoded {switch _cdea .SdHuffDecodeWidthSelection {case 0:_agea ,_egdg :=_fc .GetStandardTable (2);if _egdg !=nil {return 0,_egdg ;};return _agea .Decode (_cdea ._gfgg );case 1:_fbfb ,_geae :=_fc .GetStandardTable (3);if _geae !=nil {return 0,_geae ;};return _fbfb .Decode (_cdea ._gfgg );case 3:if _cdea ._afda ==nil {var _eddag int ;if _cdea .SdHuffDecodeHeightSelection ==3{_eddag ++;};_edac ,_afee :=_cdea .getUserTable (_eddag );if _afee !=nil {return 0,_afee ;};_cdea ._afda =_edac ;};return _cdea ._afda .Decode (_cdea ._gfgg );};}else {_ccce ,_acge :=_cdea ._acdaf .DecodeInt (_cdea ._cgae );if _acge !=nil {return 0,_acge ;};if _ccce ==_c .MaxInt32 {return int64 (_c .MaxInt64 ),nil ;};return int64 (_ccce ),nil ;};return 0,nil ;};func (_fdbe *SymbolDictionary )readNumberOfExportedSymbols ()error {_dcgg ,_gbgfe :=_fdbe ._gfgg .ReadBits (32);if _gbgfe !=nil {return _gbgfe ;};_fdbe .NumberOfExportedSymbols =uint32 (_dcgg &_c .MaxUint32 );return nil ;};func (_aagd *TextRegion )GetRegionBitmap ()(*_ad .Bitmap ,error ){if _aagd .RegionBitmap !=nil {return _aagd .RegionBitmap ,nil ;};if !_aagd .IsHuffmanEncoded {if _dcge :=_aagd .setCodingStatistics ();_dcge !=nil {return nil ,_dcge ;};};if _dcabd :=_aagd .createRegionBitmap ();_dcabd !=nil {return nil ,_dcabd ;};if _fbefe :=_aagd .decodeSymbolInstances ();_fbefe !=nil {return nil ,_fbefe ;};return _aagd .RegionBitmap ,nil ;};func (_bebg *Header )readDataStartOffset (_gbdg _e .StreamReader ,_afe OrganizationType ){if _afe ==OSequential {_bebg .SegmentDataStartOffset =uint64 (_gbdg .StreamPosition ());};};func (_edacf *TableSegment )StreamReader ()_e .StreamReader {return _edacf ._fafa };func (_acgac *Header )writeReferredToSegments (_fdgg _e .BinaryWriter )(_gfea int ,_aaee error ){const _gaae ="\u0077\u0072\u0069te\u0052\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";var (_ebb uint16 ;_dgaf uint32 ;);_fffe :=_acgac .referenceSize ();_eece :=1;_bfdd :=make ([]byte ,_fffe );for _ ,_eeeg :=range _acgac .RTSNumbers {switch _fffe {case 4:_dgaf =uint32 (_eeeg );_ag .BigEndian .PutUint32 (_bfdd ,_dgaf );_eece ,_aaee =_fdgg .Write (_bfdd );if _aaee !=nil {return 0,_fg .Wrap (_aaee ,_gaae ,"u\u0069\u006e\u0074\u0033\u0032\u0020\u0073\u0069\u007a\u0065");};case 2:_ebb =uint16 (_eeeg );_ag .BigEndian .PutUint16 (_bfdd ,_ebb );_eece ,_aaee =_fdgg .Write (_bfdd );if _aaee !=nil {return 0,_fg .Wrap (_aaee ,_gaae ,"\u0075\u0069\u006e\u0074\u0031\u0036");};default:if _aaee =_fdgg .WriteByte (byte (_eeeg ));_aaee !=nil {return 0,_fg .Wrap (_aaee ,_gaae ,"\u0075\u0069\u006et\u0038");};};_gfea +=_eece ;};return _gfea ,nil ;};func (_dce *GenericRegion )computeSegmentDataStructure ()error {_dce .DataOffset =_dce ._efa .StreamPosition ();_dce .DataHeaderLength =_dce .DataOffset -_dce .DataHeaderOffset ;_dce .DataLength =int64 (_dce ._efa .Length ())-_dce .DataHeaderLength ;return nil ;};func (_aae *Header )subInputReader ()(_e .StreamReader ,error ){return _e .NewSubstreamReader (_aae .Reader ,_aae .SegmentDataStartOffset ,_aae .SegmentDataLength );};func (_geda *GenericRegion )decodeTemplate0b (_geff ,_eab ,_bfdf int ,_cbbg ,_gda int )(_dadf error ){const _cfba ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0062";var (_gfe ,_bca int ;_eged ,_dceg int ;_bbg byte ;_cff int ;);if _geff >=1{_bbg ,_dadf =_geda .Bitmap .GetByte (_gda );if _dadf !=nil {return _fg .Wrap (_dadf ,_cfba ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_eged =int (_bbg );};if _geff >=2{_bbg ,_dadf =_geda .Bitmap .GetByte (_gda -_geda .Bitmap .RowStride );if _dadf !=nil {return _fg .Wrap (_dadf ,_cfba ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_dceg =int (_bbg )<<6;};_gfe =(_eged &0xf0)|(_dceg &0x3800);for _aea :=0;_aea < _bfdf ;_aea =_cff {var (_fedg byte ;_age int ;);_cff =_aea +8;if _fdaa :=_eab -_aea ;_fdaa > 8{_age =8;}else {_age =_fdaa ;};if _geff > 0{_eged <<=8;if _cff < _eab {_bbg ,_dadf =_geda .Bitmap .GetByte (_gda +1);if _dadf !=nil {return _fg .Wrap (_dadf ,_cfba ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_eged |=int (_bbg );};};if _geff > 1{_dceg <<=8;if _cff < _eab {_bbg ,_dadf =_geda .Bitmap .GetByte (_gda -_geda .Bitmap .RowStride +1);if _dadf !=nil {return _fg .Wrap (_dadf ,_cfba ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_dceg |=int (_bbg )<<6;};};for _cea :=0;_cea < _age ;_cea ++{_efec :=uint (7-_cea );if _geda ._dfb {_bca =_geda .overrideAtTemplate0b (_gfe ,_aea +_cea ,_geff ,int (_fedg ),_cea ,int (_efec ));_geda ._cee .SetIndex (int32 (_bca ));}else {_geda ._cee .SetIndex (int32 (_gfe ));};var _dda int ;_dda ,_dadf =_geda ._cbb .DecodeBit (_geda ._cee );if _dadf !=nil {return _fg .Wrap (_dadf ,_cfba ,"");};_fedg |=byte (_dda <<uint (_efec ));_gfe =((_gfe &0x7bf7)<<1)|_dda |((_eged >>_efec )&0x10)|((_dceg >>_efec )&0x800);};if _gfeg :=_geda .Bitmap .SetByte (_cbbg ,_fedg );_gfeg !=nil {return _fg .Wrap (_gfeg ,_cfba ,"");};_cbbg ++;_gda ++;};return nil ;};func (_gcegg *SymbolDictionary )encodeFlags (_abbb _e .BinaryWriter )(_bcad int ,_dgadc error ){const _afgg ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _dgadc =_abbb .SkipBits (3);_dgadc !=nil {return 0,_fg .Wrap (_dgadc ,_afgg ,"\u0065\u006d\u0070\u0074\u0079\u0020\u0062\u0069\u0074\u0073");};var _baee int ;if _gcegg .SdrTemplate > 0{_baee =1;};if _dgadc =_abbb .WriteBit (_baee );_dgadc !=nil {return _bcad ,_fg .Wrap (_dgadc ,_afgg ,"s\u0064\u0072\u0074\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_baee =0;if _gcegg .SdTemplate > 1{_baee =1;};if _dgadc =_abbb .WriteBit (_baee );_dgadc !=nil {return _bcad ,_fg .Wrap (_dgadc ,_afgg ,"\u0073\u0064\u0074\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_baee =0;if _gcegg .SdTemplate ==1||_gcegg .SdTemplate ==3{_baee =1;};if _dgadc =_abbb .WriteBit (_baee );_dgadc !=nil {return _bcad ,_fg .Wrap (_dgadc ,_afgg ,"\u0073\u0064\u0074\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_baee =0;if _gcegg ._cafa {_baee =1;};if _dgadc =_abbb .WriteBit (_baee );_dgadc !=nil {return _bcad ,_fg .Wrap (_dgadc ,_afgg ,"\u0063\u006f\u0064in\u0067\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0065\u0064");};_baee =0;if _gcegg ._fgfb {_baee =1;};if _dgadc =_abbb .WriteBit (_baee );_dgadc !=nil {return _bcad ,_fg .Wrap (_dgadc ,_afgg ,"\u0063\u006f\u0064\u0069ng\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0075\u0073\u0065\u0064");};_baee =0;if _gcegg .SdHuffAggInstanceSelection {_baee =1;};if _dgadc =_abbb .WriteBit (_baee );_dgadc !=nil {return _bcad ,_fg .Wrap (_dgadc ,_afgg ,"\u0073\u0064\u0068\u0075\u0066\u0066\u0061\u0067\u0067\u0069\u006e\u0073\u0074");};_baee =int (_gcegg .SdHuffBMSizeSelection );if _dgadc =_abbb .WriteBit (_baee );_dgadc !=nil {return _bcad ,_fg .Wrap (_dgadc ,_afgg ,"\u0073\u0064\u0068u\u0066\u0066\u0062\u006d\u0073\u0069\u007a\u0065");};_baee =0;if _gcegg .SdHuffDecodeWidthSelection > 1{_baee =1;};if _dgadc =_abbb .WriteBit (_baee );_dgadc !=nil {return _bcad ,_fg .Wrap (_dgadc ,_afgg ,"s\u0064\u0068\u0075\u0066\u0066\u0077\u0069\u0064\u0074\u0068");};_baee =0;switch _gcegg .SdHuffDecodeWidthSelection {case 1,3:_baee =1;};if _dgadc =_abbb .WriteBit (_baee );_dgadc !=nil {return _bcad ,_fg .Wrap (_dgadc ,_afgg ,"s\u0064\u0068\u0075\u0066\u0066\u0077\u0069\u0064\u0074\u0068");};_baee =0;if _gcegg .SdHuffDecodeHeightSelection > 1{_baee =1;};if _dgadc =_abbb .WriteBit (_baee );_dgadc !=nil {return _bcad ,_fg .Wrap (_dgadc ,_afgg ,"\u0073\u0064\u0068u\u0066\u0066\u0068\u0065\u0069\u0067\u0068\u0074");};_baee =0;switch _gcegg .SdHuffDecodeHeightSelection {case 1,3:_baee =1;};if _dgadc =_abbb .WriteBit (_baee );_dgadc !=nil {return _bcad ,_fg .Wrap (_dgadc ,_afgg ,"\u0073\u0064\u0068u\u0066\u0066\u0068\u0065\u0069\u0067\u0068\u0074");};_baee =0;if _gcegg .UseRefinementAggregation {_baee =1;};if _dgadc =_abbb .WriteBit (_baee );_dgadc !=nil {return _bcad ,_fg .Wrap (_dgadc ,_afgg ,"\u0073\u0064\u0072\u0065\u0066\u0061\u0067\u0067");};_baee =0;if _gcegg .IsHuffmanEncoded {_baee =1;};if _dgadc =_abbb .WriteBit (_baee );_dgadc !=nil {return _bcad ,_fg .Wrap (_dgadc ,_afgg ,"\u0073\u0064\u0068\u0075\u0066\u0066");};return 2,nil ;};func (_dgdb *SymbolDictionary )checkInput ()error {if _dgdb .SdHuffDecodeHeightSelection ==2{_ff .Log .Debug ("\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0048\u0065\u0069g\u0068\u0020\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061l\u0075\u0065\u0020\u006e\u006f\u0074 \u0070\u0065r\u006d\u0069t\u0074e\u0064",_dgdb .SdHuffDecodeHeightSelection );};if _dgdb .SdHuffDecodeWidthSelection ==2{_ff .Log .Debug ("\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0057\u0069\u0064t\u0068\u0020\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061l\u0075\u0065\u0020\u006e\u006f\u0074 \u0070\u0065r\u006d\u0069t\u0074e\u0064",_dgdb .SdHuffDecodeWidthSelection );};if _dgdb .IsHuffmanEncoded {if _dgdb .SdTemplate !=0{_ff .Log .Debug ("\u0053\u0044T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e \u0030\u0029",_dgdb .SdTemplate );};if !_dgdb .UseRefinementAggregation {if !_dgdb .UseRefinementAggregation {if _dgdb ._cafa {_ff .Log .Debug ("\u0049\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074ex\u0074\u0052\u0065\u0074\u0061\u0069n\u0065\u0064\u0020\u003d\u0020\u0074\u0072\u0075\u0065\u0020\u0028\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0066\u0061\u006cs\u0065\u0029");_dgdb ._cafa =false ;};if _dgdb ._fgfb {_ff .Log .Debug ("\u0069s\u0043\u006fd\u0069\u006e\u0067\u0043o\u006e\u0074\u0065x\u0074\u0055\u0073\u0065\u0064\u0020\u003d\u0020\u0074ru\u0065\u0020\u0028s\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020f\u0061\u006cs\u0065\u0029");_dgdb ._fgfb =false ;};};};}else {if _dgdb .SdHuffBMSizeSelection !=0{_ff .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066B\u004d\u0053\u0069\u007a\u0065\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");_dgdb .SdHuffBMSizeSelection =0;};if _dgdb .SdHuffDecodeWidthSelection !=0{_ff .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068\u0053\u0065\u006c\u0065\u0063\u0074\u0069o\u006e\u0020\u0073\u0068\u006fu\u006c\u0064 \u0062\u0065\u0020\u0030");_dgdb .SdHuffDecodeWidthSelection =0;};if _dgdb .SdHuffDecodeHeightSelection !=0{_ff .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0048e\u0069\u0067\u0068\u0074\u0053\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");_dgdb .SdHuffDecodeHeightSelection =0;};};if !_dgdb .UseRefinementAggregation {if _dgdb .SdrTemplate !=0{_ff .Log .Debug ("\u0053\u0044\u0052\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u003d\u0020\u0025\u0064\u0020\u0028s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_dgdb .SdrTemplate );_dgdb .SdrTemplate =0;};};if !_dgdb .IsHuffmanEncoded ||!_dgdb .UseRefinementAggregation {if _dgdb .SdHuffAggInstanceSelection {_ff .Log .Debug ("\u0053d\u0048\u0075f\u0066\u0041\u0067g\u0049\u006e\u0073\u0074\u0061\u006e\u0063e\u0053\u0065\u006c\u0065\u0063\u0074i\u006f\u006e\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_dgdb .SdHuffAggInstanceSelection );};};return nil ;};func (_dadb *SymbolDictionary )addSymbol (_eeacg Regioner )error {_dbgcg ,_fbed :=_eeacg .GetRegionBitmap ();if _fbed !=nil {return _fbed ;};_dadb ._eacge [_dadb ._bdc ]=_dbgcg ;_dadb ._bbdg =append (_dadb ._bbdg ,_dbgcg );_ff .Log .Trace ("\u005b\u0053YM\u0042\u004f\u004c \u0044\u0049\u0043\u0054ION\u0041RY\u005d\u0020\u0041\u0064\u0064\u0065\u0064 s\u0079\u006d\u0062\u006f\u006c\u003a\u0020%\u0073",_dbgcg );return nil ;};func (_baa *GenericRegion )overrideAtTemplate0b (_aegb ,_aega ,_bff ,_dfeg ,_ecag ,_fbcb int )int {if _baa .GBAtOverride [0]{_aegb &=0xFFFD;if _baa .GBAtY [0]==0&&_baa .GBAtX [0]>=-int8 (_ecag ){_aegb |=(_dfeg >>uint (int8 (_fbcb )-_baa .GBAtX [0]&0x1))<<1;}else {_aegb |=int (_baa .getPixel (_aega +int (_baa .GBAtX [0]),_bff +int (_baa .GBAtY [0])))<<1;};};if _baa .GBAtOverride [1]{_aegb &=0xDFFF;if _baa .GBAtY [1]==0&&_baa .GBAtX [1]>=-int8 (_ecag ){_aegb |=(_dfeg >>uint (int8 (_fbcb )-_baa .GBAtX [1]&0x1))<<13;}else {_aegb |=int (_baa .getPixel (_aega +int (_baa .GBAtX [1]),_bff +int (_baa .GBAtY [1])))<<13;};};if _baa .GBAtOverride [2]{_aegb &=0xFDFF;if _baa .GBAtY [2]==0&&_baa .GBAtX [2]>=-int8 (_ecag ){_aegb |=(_dfeg >>uint (int8 (_fbcb )-_baa .GBAtX [2]&0x1))<<9;}else {_aegb |=int (_baa .getPixel (_aega +int (_baa .GBAtX [2]),_bff +int (_baa .GBAtY [2])))<<9;};};if _baa .GBAtOverride [3]{_aegb &=0xBFFF;if _baa .GBAtY [3]==0&&_baa .GBAtX [3]>=-int8 (_ecag ){_aegb |=(_dfeg >>uint (int8 (_fbcb )-_baa .GBAtX [3]&0x1))<<14;}else {_aegb |=int (_baa .getPixel (_aega +int (_baa .GBAtX [3]),_bff +int (_baa .GBAtY [3])))<<14;};};if _baa .GBAtOverride [4]{_aegb &=0xEFFF;if _baa .GBAtY [4]==0&&_baa .GBAtX [4]>=-int8 (_ecag ){_aegb |=(_dfeg >>uint (int8 (_fbcb )-_baa .GBAtX [4]&0x1))<<12;}else {_aegb |=int (_baa .getPixel (_aega +int (_baa .GBAtX [4]),_bff +int (_baa .GBAtY [4])))<<12;};};if _baa .GBAtOverride [5]{_aegb &=0xFFDF;if _baa .GBAtY [5]==0&&_baa .GBAtX [5]>=-int8 (_ecag ){_aegb |=(_dfeg >>uint (int8 (_fbcb )-_baa .GBAtX [5]&0x1))<<5;}else {_aegb |=int (_baa .getPixel (_aega +int (_baa .GBAtX [5]),_bff +int (_baa .GBAtY [5])))<<5;};};if _baa .GBAtOverride [6]{_aegb &=0xFFFB;if _baa .GBAtY [6]==0&&_baa .GBAtX [6]>=-int8 (_ecag ){_aegb |=(_dfeg >>uint (int8 (_fbcb )-_baa .GBAtX [6]&0x1))<<2;}else {_aegb |=int (_baa .getPixel (_aega +int (_baa .GBAtX [6]),_bff +int (_baa .GBAtY [6])))<<2;};};if _baa .GBAtOverride [7]{_aegb &=0xFFF7;if _baa .GBAtY [7]==0&&_baa .GBAtX [7]>=-int8 (_ecag ){_aegb |=(_dfeg >>uint (int8 (_fbcb )-_baa .GBAtX [7]&0x1))<<3;}else {_aegb |=int (_baa .getPixel (_aega +int (_baa .GBAtX [7]),_bff +int (_baa .GBAtY [7])))<<3;};};if _baa .GBAtOverride [8]{_aegb &=0xF7FF;if _baa .GBAtY [8]==0&&_baa .GBAtX [8]>=-int8 (_ecag ){_aegb |=(_dfeg >>uint (int8 (_fbcb )-_baa .GBAtX [8]&0x1))<<11;}else {_aegb |=int (_baa .getPixel (_aega +int (_baa .GBAtX [8]),_bff +int (_baa .GBAtY [8])))<<11;};};if _baa .GBAtOverride [9]{_aegb &=0xFFEF;if _baa .GBAtY [9]==0&&_baa .GBAtX [9]>=-int8 (_ecag ){_aegb |=(_dfeg >>uint (int8 (_fbcb )-_baa .GBAtX [9]&0x1))<<4;}else {_aegb |=int (_baa .getPixel (_aega +int (_baa .GBAtX [9]),_bff +int (_baa .GBAtY [9])))<<4;};};if _baa .GBAtOverride [10]{_aegb &=0x7FFF;if _baa .GBAtY [10]==0&&_baa .GBAtX [10]>=-int8 (_ecag ){_aegb |=(_dfeg >>uint (int8 (_fbcb )-_baa .GBAtX [10]&0x1))<<15;}else {_aegb |=int (_baa .getPixel (_aega +int (_baa .GBAtX [10]),_bff +int (_baa .GBAtY [10])))<<15;};};if _baa .GBAtOverride [11]{_aegb &=0xFDFF;if _baa .GBAtY [11]==0&&_baa .GBAtX [11]>=-int8 (_ecag ){_aegb |=(_dfeg >>uint (int8 (_fbcb )-_baa .GBAtX [11]&0x1))<<10;}else {_aegb |=int (_baa .getPixel (_aega +int (_baa .GBAtX [11]),_bff +int (_baa .GBAtY [11])))<<10;};};return _aegb ;};func (_bad *HalftoneRegion )combineGrayscalePlanes (_gcbe []*_ad .Bitmap ,_ecbe int )error {_bgdc :=0;for _ffaf :=0;_ffaf < _gcbe [_ecbe ].Height ;_ffaf ++{for _cede :=0;_cede < _gcbe [_ecbe ].Width ;_cede +=8{_cbdae ,_dgcc :=_gcbe [_ecbe +1].GetByte (_bgdc );if _dgcc !=nil {return _dgcc ;};_bdbg ,_dgcc :=_gcbe [_ecbe ].GetByte (_bgdc );if _dgcc !=nil {return _dgcc ;};_dgcc =_gcbe [_ecbe ].SetByte (_bgdc ,_ad .CombineBytes (_bdbg ,_cbdae ,_ad .CmbOpXor ));if _dgcc !=nil {return _dgcc ;};_bgdc ++;};};return nil ;};type PatternDictionary struct{_abbe _e .StreamReader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;GBAtX []int8 ;GBAtY []int8 ;IsMMREncoded bool ;HDTemplate byte ;HdpWidth byte ;HdpHeight byte ;Patterns []*_ad .Bitmap ;GrayMax uint32 ;};func (_ffeg *GenericRegion )decodeTemplate0a (_gce ,_cacd ,_cabe int ,_cdb ,_fae int )(_bdb error ){const _bbbc ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0061";var (_fbade ,_ccd int ;_gaag ,_eca int ;_gbc byte ;_gcdd int ;);if _gce >=1{_gbc ,_bdb =_ffeg .Bitmap .GetByte (_fae );if _bdb !=nil {return _fg .Wrap (_bdb ,_bbbc ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_gaag =int (_gbc );};if _gce >=2{_gbc ,_bdb =_ffeg .Bitmap .GetByte (_fae -_ffeg .Bitmap .RowStride );if _bdb !=nil {return _fg .Wrap (_bdb ,_bbbc ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_eca =int (_gbc )<<6;};_fbade =(_gaag &0xf0)|(_eca &0x3800);for _dgac :=0;_dgac < _cabe ;_dgac =_gcdd {var (_gaaf byte ;_afg int ;);_gcdd =_dgac +8;if _bead :=_cacd -_dgac ;_bead > 8{_afg =8;}else {_afg =_bead ;};if _gce > 0{_gaag <<=8;if _gcdd < _cacd {_gbc ,_bdb =_ffeg .Bitmap .GetByte (_fae +1);if _bdb !=nil {return _fg .Wrap (_bdb ,_bbbc ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_gaag |=int (_gbc );};};if _gce > 1{_afd :=_fae -_ffeg .Bitmap .RowStride +1;_eca <<=8;if _gcdd < _cacd {_gbc ,_bdb =_ffeg .Bitmap .GetByte (_afd );if _bdb !=nil {return _fg .Wrap (_bdb ,_bbbc ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_eca |=int (_gbc )<<6;}else {_eca |=0;};};for _aagge :=0;_aagge < _afg ;_aagge ++{_eagg :=uint (7-_aagge );if _ffeg ._dfb {_ccd =_ffeg .overrideAtTemplate0a (_fbade ,_dgac +_aagge ,_gce ,int (_gaaf ),_aagge ,int (_eagg ));_ffeg ._cee .SetIndex (int32 (_ccd ));}else {_ffeg ._cee .SetIndex (int32 (_fbade ));};var _bfab int ;_bfab ,_bdb =_ffeg ._cbb .DecodeBit (_ffeg ._cee );if _bdb !=nil {return _fg .Wrap (_bdb ,_bbbc ,"");};_gaaf |=byte (_bfab )<<uint (_eagg );_fbade =((_fbade &0x7bf7)<<1)|_bfab |((_gaag >>_eagg )&0x10)|((_eca >>_eagg )&0x800);};if _ffb :=_ffeg .Bitmap .SetByte (_cdb ,_gaaf );_ffb !=nil {return _fg .Wrap (_ffb ,_bbbc ,"");};_cdb ++;_fae ++;};return nil ;};func (_ffbd *TextRegion )decodeDfs ()(int64 ,error ){if _ffbd .IsHuffmanEncoded {if _ffbd .SbHuffFS ==3{if _ffbd ._febd ==nil {var _aeaf error ;_ffbd ._febd ,_aeaf =_ffbd .getUserTable (0);if _aeaf !=nil {return 0,_aeaf ;};};return _ffbd ._febd .Decode (_ffbd ._bgbcd );};_abag ,_ccfg :=_fc .GetStandardTable (6+int (_ffbd .SbHuffFS ));if _ccfg !=nil {return 0,_ccfg ;};return _abag .Decode (_ffbd ._bgbcd );};_ggfg ,_afefg :=_ffbd ._gbfa .DecodeInt (_ffbd ._bebad );if _afefg !=nil {return 0,_afefg ;};return int64 (_ggfg ),nil ;};func (_abgb *TextRegion )decodeCurrentT ()(int64 ,error ){if _abgb .SbStrips !=1{if _abgb .IsHuffmanEncoded {_fcba ,_bbfff :=_abgb ._bgbcd .ReadBits (byte (_abgb .LogSBStrips ));return int64 (_fcba ),_bbfff ;};_cgdf ,_cccb :=_abgb ._gbfa .DecodeInt (_abgb ._bacg );if _cccb !=nil {return 0,_cccb ;};return int64 (_cgdf ),nil ;};return 0,nil ;};func (_bgdcc *PatternDictionary )readIsMMREncoded ()error {_dega ,_beab :=_bgdcc ._abbe .ReadBit ();if _beab !=nil {return _beab ;};if _dega !=0{_bgdcc .IsMMREncoded =true ;};return nil ;};func (_gc *GenericRefinementRegion )decodeOptimized (_abg ,_fff ,_fgc ,_ea ,_ecd ,_gb ,_gga int )error {var (_ee error ;_gbg int ;_ca int ;);_eac :=_abg -int (_gc .ReferenceDY );if _gef :=int (-_gc .ReferenceDX );_gef > 0{_gbg =_gef ;};_bbb :=_gc .ReferenceBitmap .GetByteIndex (_gbg ,_eac );if _gc .ReferenceDX > 0{_ca =int (_gc .ReferenceDX );};_aba :=_gc .RegionBitmap .GetByteIndex (_ca ,_abg );switch _gc .TemplateID {case 0:_ee =_gc .decodeTemplate (_abg ,_fff ,_fgc ,_ea ,_ecd ,_gb ,_gga ,_aba ,_eac ,_bbb ,_gc ._adf );case 1:_ee =_gc .decodeTemplate (_abg ,_fff ,_fgc ,_ea ,_ecd ,_gb ,_gga ,_aba ,_eac ,_bbb ,_gc ._ada );};return _ee ;};const BorderSize =6;func (_ddaf *PatternDictionary )checkInput ()error {if _ddaf .HdpHeight < 1||_ddaf .HdpWidth < 1{return _b .New ("in\u0076\u0061l\u0069\u0064\u0020\u0048\u0065\u0061\u0064\u0065\u0072 \u0056\u0061\u006c\u0075\u0065\u003a\u0020\u0057\u0069\u0064\u0074\u0068\u002f\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020g\u0072e\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020z\u0065\u0072o");};if _ddaf .IsMMREncoded {if _ddaf .HDTemplate !=0{_ff .Log .Debug ("\u0076\u0061\u0072\u0069\u0061\u0062\u006c\u0065\u0020\u0048\u0044\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e \u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030");};};return nil ;};func (_eeada *TextRegion )readRegionFlags ()error {var (_efgga int ;_afgb uint64 ;_degd error ;);_efgga ,_degd =_eeada ._bgbcd .ReadBit ();if _degd !=nil {return _degd ;};_eeada .SbrTemplate =int8 (_efgga );_afgb ,_degd =_eeada ._bgbcd .ReadBits (5);if _degd !=nil {return _degd ;};_eeada .SbdsOffset =int8 (_afgb );if _eeada .SbdsOffset > 0x0f{_eeada .SbdsOffset -=0x20;};_efgga ,_degd =_eeada ._bgbcd .ReadBit ();if _degd !=nil {return _degd ;};_eeada .DefaultPixel =int8 (_efgga );_afgb ,_degd =_eeada ._bgbcd .ReadBits (2);if _degd !=nil {return _degd ;};_eeada .CombinationOperator =_ad .CombinationOperator (int (_afgb )&0x3);_efgga ,_degd =_eeada ._bgbcd .ReadBit ();if _degd !=nil {return _degd ;};_eeada .IsTransposed =int8 (_efgga );_afgb ,_degd =_eeada ._bgbcd .ReadBits (2);if _degd !=nil {return _degd ;};_eeada .ReferenceCorner =int16 (_afgb )&0x3;_afgb ,_degd =_eeada ._bgbcd .ReadBits (2);if _degd !=nil {return _degd ;};_eeada .LogSBStrips =int16 (_afgb )&0x3;_eeada .SbStrips =1<<uint (_eeada .LogSBStrips );_efgga ,_degd =_eeada ._bgbcd .ReadBit ();if _degd !=nil {return _degd ;};if _efgga ==1{_eeada .UseRefinement =true ;};_efgga ,_degd =_eeada ._bgbcd .ReadBit ();if _degd !=nil {return _degd ;};if _efgga ==1{_eeada .IsHuffmanEncoded =true ;};return nil ;};func (_abdab *Header )readSegmentPageAssociation (_acdaa Documenter ,_ggg _e .StreamReader ,_feaa uint64 ,_aead ...int )(_gege error ){const _cdff ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074P\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061t\u0069\u006f\u006e";if !_abdab .PageAssociationFieldSize {_bfcbf ,_gaeab :=_ggg .ReadBits (8);if _gaeab !=nil {return _fg .Wrap (_gaeab ,_cdff ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_abdab .PageAssociation =int (_bfcbf &0xFF);}else {_decad ,_cafb :=_ggg .ReadBits (32);if _cafb !=nil {return _fg .Wrap (_cafb ,_cdff ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_abdab .PageAssociation =int (_decad &_c .MaxInt32 );};if _feaa ==0{return nil ;};if _abdab .PageAssociation !=0{_ebdc ,_egbee :=_acdaa .GetPage (_abdab .PageAssociation );if _egbee !=nil {return _fg .Wrap (_egbee ,_cdff ,"\u0061s\u0073\u006f\u0063\u0069a\u0074\u0065\u0064\u0020\u0070a\u0067e\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006ed");};var _bgfd int ;for _ffbg :=uint64 (0);_ffbg < _feaa ;_ffbg ++{_bgfd =_aead [_ffbg ];_abdab .RTSegments [_ffbg ],_egbee =_ebdc .GetSegment (_bgfd );if _egbee !=nil {var _becb error ;_abdab .RTSegments [_ffbg ],_becb =_acdaa .GetGlobalSegment (_bgfd );if _becb !=nil {return _fg .Wrapf (_egbee ,_cdff ,"\u0072\u0065\u0066\u0065\u0072\u0065n\u0063\u0065\u0020s\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064\u0020\u0061\u0074\u0020pa\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0072\u0020\u0069\u006e\u0020\u0067\u006c\u006f\u0062\u0061\u006c\u0073",_abdab .PageAssociation );};};};return nil ;};for _dag :=uint64 (0);_dag < _feaa ;_dag ++{_abdab .RTSegments [_dag ],_gege =_acdaa .GetGlobalSegment (_aead [_dag ]);if _gege !=nil {return _fg .Wrapf (_gege ,_cdff ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u003a\u0020\u0027\u0025d\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064",_aead [_dag ]);};};return nil ;};func (_ggff *SymbolDictionary )decodeHeightClassBitmap (_cdfb *_ad .Bitmap ,_cfbc int64 ,_eccg int ,_cgfg []int )error {for _dgaa :=_cfbc ;_dgaa < int64 (_ggff ._bdc );_dgaa ++{var _dabeb int ;for _fcgf :=_cfbc ;_fcgf <=_dgaa -1;_fcgf ++{_dabeb +=_cgfg [_fcgf ];};_aeada :=_df .Rect (_dabeb ,0,_dabeb +_cgfg [_dgaa ],_eccg );_afaf ,_cegb :=_ad .Extract (_aeada ,_cdfb );if _cegb !=nil {return _cegb ;};_ggff ._eacge [_dgaa ]=_afaf ;_ggff ._bbdg =append (_ggff ._bbdg ,_afaf );};return nil ;};func (_cceb *TextRegion )decodeRI ()(int64 ,error ){if !_cceb .UseRefinement {return 0,nil ;};if _cceb .IsHuffmanEncoded {_cffa ,_gbcg :=_cceb ._bgbcd .ReadBit ();return int64 (_cffa ),_gbcg ;};_cfaa ,_ggdfe :=_cceb ._gbfa .DecodeInt (_cceb ._ebec );return int64 (_cfaa ),_ggdfe ;};func (_caaf *SymbolDictionary )parseHeader ()(_dbfc error ){_ff .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");defer func (){if _dbfc !=nil {_ff .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u0020\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u005b\u0050\u0041\u0052SE\u002d\u0048\u0045A\u0044\u0045R\u005d\u0020\u0066\u0061\u0069\u006ce\u0064\u002e \u0025\u0076",_dbfc );}else {_ff .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");};}();if _dbfc =_caaf .readRegionFlags ();_dbfc !=nil {return _dbfc ;};if _dbfc =_caaf .setAtPixels ();_dbfc !=nil {return _dbfc ;};if _dbfc =_caaf .setRefinementAtPixels ();_dbfc !=nil {return _dbfc ;};if _dbfc =_caaf .readNumberOfExportedSymbols ();_dbfc !=nil {return _dbfc ;};if _dbfc =_caaf .readNumberOfNewSymbols ();_dbfc !=nil {return _dbfc ;};if _dbfc =_caaf .setInSyms ();_dbfc !=nil {return _dbfc ;};if _caaf ._fgfb {_bgebe :=_caaf .Header .RTSegments ;for _dabed :=len (_bgebe )-1;_dabed >=0;_dabed --{if _bgebe [_dabed ].Type ==0{_edc ,_bedc :=_bgebe [_dabed ].SegmentData .(*SymbolDictionary );if !_bedc {_dbfc =_ce .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074:\u0020\u0025\u0076\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020S\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_bgebe [_dabed ]);return _dbfc ;};if _edc ._fgfb {_caaf .setRetainedCodingContexts (_edc );};break ;};};};if _dbfc =_caaf .checkInput ();_dbfc !=nil {return _dbfc ;};return nil ;};func (_aebb *SymbolDictionary )GetDictionary ()([]*_ad .Bitmap ,error ){_ff .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c-\u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");defer func (){_ff .Log .Trace ("\u005b\u0053\u0059M\u0042\u004f\u004c\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");_ff .Log .Trace ("\u005b\u0053Y\u004d\u0042\u004f\u004c\u002dD\u0049\u0043\u0054\u0049\u004fN\u0041\u0052\u0059\u005d\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020\u000a\u0045\u0078\u003a\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u000a\u006e\u0065\u0077\u003a\u0027\u0025\u0073\u0027",_aebb ._agae ,_aebb ._eacge );}();if _aebb ._agae ==nil {var _ffegg error ;if _aebb .UseRefinementAggregation {_aebb ._gedf =_aebb .getSbSymCodeLen ();};if !_aebb .IsHuffmanEncoded {if _ffegg =_aebb .setCodingStatistics ();_ffegg !=nil {return nil ,_ffegg ;};};_aebb ._eacge =make ([]*_ad .Bitmap ,_aebb .NumberOfNewSymbols );var _dfff []int ;if _aebb .IsHuffmanEncoded &&!_aebb .UseRefinementAggregation {_dfff =make ([]int ,_aebb .NumberOfNewSymbols );};if _ffegg =_aebb .setSymbolsArray ();_ffegg !=nil {return nil ,_ffegg ;};var _cgbf ,_baed int64 ;_aebb ._bdc =0;for _aebb ._bdc < _aebb .NumberOfNewSymbols {_baed ,_ffegg =_aebb .decodeHeightClassDeltaHeight ();if _ffegg !=nil {return nil ,_ffegg ;};_cgbf +=_baed ;var _afef ,_agfc uint32 ;_bee :=int64 (_aebb ._bdc );for {var _aceeb int64 ;_aceeb ,_ffegg =_aebb .decodeDifferenceWidth ();if _ffegg !=nil {return nil ,_ffegg ;};if _aceeb ==int64 (_c .MaxInt64 )||_aebb ._bdc >=_aebb .NumberOfNewSymbols {break ;};_afef +=uint32 (_aceeb );_agfc +=_afef ;if !_aebb .IsHuffmanEncoded ||_aebb .UseRefinementAggregation {if !_aebb .UseRefinementAggregation {_ffegg =_aebb .decodeDirectlyThroughGenericRegion (_afef ,uint32 (_cgbf ));if _ffegg !=nil {return nil ,_ffegg ;};}else {_ffegg =_aebb .decodeAggregate (_afef ,uint32 (_cgbf ));if _ffegg !=nil {return nil ,_ffegg ;};};}else if _aebb .IsHuffmanEncoded &&!_aebb .UseRefinementAggregation {_dfff [_aebb ._bdc ]=int (_afef );};_aebb ._bdc ++;};if _aebb .IsHuffmanEncoded &&!_aebb .UseRefinementAggregation {var _gfba int64 ;if _aebb .SdHuffBMSizeSelection ==0{var _gagb _fc .Tabler ;_gagb ,_ffegg =_fc .GetStandardTable (1);if _ffegg !=nil {return nil ,_ffegg ;};_gfba ,_ffegg =_gagb .Decode (_aebb ._gfgg );if _ffegg !=nil {return nil ,_ffegg ;};}else {_gfba ,_ffegg =_aebb .huffDecodeBmSize ();if _ffegg !=nil {return nil ,_ffegg ;};};_aebb ._gfgg .Align ();var _faea *_ad .Bitmap ;_faea ,_ffegg =_aebb .decodeHeightClassCollectiveBitmap (_gfba ,uint32 (_cgbf ),_agfc );if _ffegg !=nil {return nil ,_ffegg ;};_ffegg =_aebb .decodeHeightClassBitmap (_faea ,_bee ,int (_cgbf ),_dfff );if _ffegg !=nil {return nil ,_ffegg ;};};};_ega ,_ffegg :=_aebb .getToExportFlags ();if _ffegg !=nil {return nil ,_ffegg ;};_aebb .setExportedSymbols (_ega );};return _aebb ._agae ,nil ;};func (_bdff *TextRegion )encodeFlags (_abfg _e .BinaryWriter )(_aef int ,_gfbae error ){const _ddd ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _gfbae =_abfg .WriteBit (int (_bdff .SbrTemplate ));_gfbae !=nil {return _aef ,_fg .Wrap (_gfbae ,_ddd ,"s\u0062\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};if _ ,_gfbae =_abfg .WriteBits (uint64 (_bdff .SbdsOffset ),5);_gfbae !=nil {return _aef ,_fg .Wrap (_gfbae ,_ddd ,"\u0073\u0062\u0064\u0073\u004f\u0066\u0066\u0073\u0065\u0074");};if _gfbae =_abfg .WriteBit (int (_bdff .DefaultPixel ));_gfbae !=nil {return _aef ,_fg .Wrap (_gfbae ,_ddd ,"\u0044\u0065\u0066a\u0075\u006c\u0074\u0050\u0069\u0078\u0065\u006c");};if _ ,_gfbae =_abfg .WriteBits (uint64 (_bdff .CombinationOperator ),2);_gfbae !=nil {return _aef ,_fg .Wrap (_gfbae ,_ddd ,"\u0043\u006f\u006d\u0062in\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072");};if _gfbae =_abfg .WriteBit (int (_bdff .IsTransposed ));_gfbae !=nil {return _aef ,_fg .Wrap (_gfbae ,_ddd ,"\u0069\u0073\u0020\u0074\u0072\u0061\u006e\u0073\u0070\u006f\u0073\u0065\u0064");};if _ ,_gfbae =_abfg .WriteBits (uint64 (_bdff .ReferenceCorner ),2);_gfbae !=nil {return _aef ,_fg .Wrap (_gfbae ,_ddd ,"\u0072\u0065f\u0065\u0072\u0065n\u0063\u0065\u0020\u0063\u006f\u0072\u006e\u0065\u0072");};if _ ,_gfbae =_abfg .WriteBits (uint64 (_bdff .LogSBStrips ),2);_gfbae !=nil {return _aef ,_fg .Wrap (_gfbae ,_ddd ,"L\u006f\u0067\u0053\u0042\u0053\u0074\u0072\u0069\u0070\u0073");};var _fbba int ;if _bdff .UseRefinement {_fbba =1;};if _gfbae =_abfg .WriteBit (_fbba );_gfbae !=nil {return _aef ,_fg .Wrap (_gfbae ,_ddd ,"\u0075\u0073\u0065\u0020\u0072\u0065\u0066\u0069\u006ee\u006d\u0065\u006e\u0074");};_fbba =0;if _bdff .IsHuffmanEncoded {_fbba =1;};if _gfbae =_abfg .WriteBit (_fbba );_gfbae !=nil {return _aef ,_fg .Wrap (_gfbae ,_ddd ,"u\u0073\u0065\u0020\u0068\u0075\u0066\u0066\u006d\u0061\u006e");};_aef =2;return _aef ,nil ;};func (_fegg *SymbolDictionary )encodeATFlags (_fcbb _e .BinaryWriter )(_dafa int ,_fcda error ){const _ggdg ="\u0065\u006e\u0063\u006f\u0064\u0065\u0041\u0054\u0046\u006c\u0061\u0067\u0073";if _fegg .IsHuffmanEncoded ||_fegg .SdTemplate !=0{return 0,nil ;};_gea :=4;if _fegg .SdTemplate !=0{_gea =1;};for _abfc :=0;_abfc < _gea ;_abfc ++{if _fcda =_fcbb .WriteByte (byte (_fegg .SdATX [_abfc ]));_fcda !=nil {return _dafa ,_fg .Wrapf (_fcda ,_ggdg ,"\u0053d\u0041\u0054\u0058\u005b\u0025\u0064]",_abfc );};_dafa ++;if _fcda =_fcbb .WriteByte (byte (_fegg .SdATY [_abfc ]));_fcda !=nil {return _dafa ,_fg .Wrapf (_fcda ,_ggdg ,"\u0053d\u0041\u0054\u0059\u005b\u0025\u0064]",_abfc );};_dafa ++;};return _dafa ,nil ;};func (_gde *GenericRegion )setParameters (_ecg bool ,_gdag ,_eea int64 ,_cadg ,_eefbd uint32 ){_gde .IsMMREncoded =_ecg ;_gde .DataOffset =_gdag ;_gde .DataLength =_eea ;_gde .RegionSegment .BitmapHeight =_cadg ;_gde .RegionSegment .BitmapWidth =_eefbd ;_gde ._fbad =nil ;_gde .Bitmap =nil ;};func (_deg *GenericRefinementRegion )GetRegionInfo ()*RegionSegment {return _deg .RegionInfo };func (_fcg *GenericRegion )Init (h *Header ,r _e .StreamReader )error {_fcg .RegionSegment =NewRegionSegment (r );_fcg ._efa =r ;return _fcg .parseHeader ();};func (_bgcb *HalftoneRegion )checkInput ()error {if _bgcb .IsMMREncoded {if _bgcb .HTemplate !=0{_ff .Log .Debug ("\u0048\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030",_bgcb .HTemplate );};if _bgcb .HSkipEnabled {_ff .Log .Debug ("\u0048\u0053\u006b\u0069\u0070\u0045\u006e\u0061\u0062\u006c\u0065\u0064\u0020\u0030\u0020\u0025\u0076\u0020(\u0073\u0068\u006f\u0075\u006c\u0064\u0020c\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020v\u0061\u006c\u0075\u0065\u0020\u0066\u0061\u006c\u0073\u0065\u0029",_bgcb .HSkipEnabled );};};return nil ;};func (_dcage *SymbolDictionary )decodeHeightClassDeltaHeight ()(int64 ,error ){if _dcage .IsHuffmanEncoded {return _dcage .decodeHeightClassDeltaHeightWithHuffman ();};_eebb ,_aebg :=_dcage ._acdaf .DecodeInt (_dcage ._gadg );if _aebg !=nil {return 0,_aebg ;};return int64 (_eebb ),nil ;};type Regioner interface{GetRegionBitmap ()(*_ad .Bitmap ,error );GetRegionInfo ()*RegionSegment ;};func (_dfgd *SymbolDictionary )setExportedSymbols (_fgdg []int ){for _fcf :=uint32 (0);_fcf < _dfgd ._ebbe +_dfgd .NumberOfNewSymbols ;_fcf ++{if _fgdg [_fcf ]==1{var _egbf *_ad .Bitmap ;if _fcf < _dfgd ._ebbe {_egbf =_dfgd ._edgg [_fcf ];}else {_egbf =_dfgd ._eacge [_fcf -_dfgd ._ebbe ];};_ff .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u002d\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u0020\u0041\u0064\u0064 E\u0078\u0070\u006fr\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027%\u0073\u0027",_egbf );_dfgd ._agae =append (_dfgd ._agae ,_egbf );};};};func (_dagd *PatternDictionary )extractPatterns (_cadfa *_ad .Bitmap )error {var _geed int ;_fbef :=make ([]*_ad .Bitmap ,_dagd .GrayMax +1);for _geed <=int (_dagd .GrayMax ){_ccgb :=int (_dagd .HdpWidth )*_geed ;_bgeb :=_df .Rect (_ccgb ,0,_ccgb +int (_dagd .HdpWidth ),int (_dagd .HdpHeight ));_gfed ,_dgcb :=_ad .Extract (_bgeb ,_cadfa );if _dgcb !=nil {return _dgcb ;};_fbef [_geed ]=_gfed ;_geed ++;};_dagd .Patterns =_fbef ;return nil ;};func (_eabb *Header )writeSegmentDataLength (_fggc _e .BinaryWriter )(_defc int ,_fgdf error ){_eafc :=make ([]byte ,4);_ag .BigEndian .PutUint32 (_eafc ,uint32 (_eabb .SegmentDataLength ));if _defc ,_fgdf =_fggc .Write (_eafc );_fgdf !=nil {return 0,_fg .Wrap (_fgdf ,"\u0048\u0065a\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u004c\u0065ng\u0074\u0068","");};return _defc ,nil ;};type HalftoneRegion struct{_ecee _e .StreamReader ;_fgde *Header ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;HDefaultPixel int8 ;CombinationOperator _ad .CombinationOperator ;HSkipEnabled bool ;HTemplate byte ;IsMMREncoded bool ;HGridWidth uint32 ;HGridHeight uint32 ;HGridX int32 ;HGridY int32 ;HRegionX uint16 ;HRegionY uint16 ;HalftoneRegionBitmap *_ad .Bitmap ;Patterns []*_ad .Bitmap ;};func NewRegionSegment (r _e .StreamReader )*RegionSegment {return &RegionSegment {_efde :r }};func (_ecfc *PageInformationSegment )CombinationOperator ()_ad .CombinationOperator {return _ecfc ._ceee ;};func (_dbda *PageInformationSegment )readDefaultPixelValue ()error {_dgcf ,_gcda :=_dbda ._cgbc .ReadBit ();if _gcda !=nil {return _gcda ;};_dbda ._eeb =uint8 (_dgcf &0xf);return nil ;};func (_fdc *Header )readHeaderFlags ()error {const _dgee ="\u0072e\u0061d\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006c\u0061\u0067\u0073";_eegd ,_dgbg :=_fdc .Reader .ReadBit ();if _dgbg !=nil {return _fg .Wrap (_dgbg ,_dgee ,"r\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067");};if _eegd !=0{_fdc .RetainFlag =true ;};_eegd ,_dgbg =_fdc .Reader .ReadBit ();if _dgbg !=nil {return _fg .Wrap (_dgbg ,_dgee ,"\u0070\u0061g\u0065\u0020\u0061s\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e");};if _eegd !=0{_fdc .PageAssociationFieldSize =true ;};_eceb ,_dgbg :=_fdc .Reader .ReadBits (6);if _dgbg !=nil {return _fg .Wrap (_dgbg ,_dgee ,"\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065");};_fdc .Type =Type (int (_eceb ));return nil ;};func (_dgace *TextRegion )readUseRefinement ()error {if !_dgace .UseRefinement ||_dgace .SbrTemplate !=0{return nil ;};var (_gdff byte ;_abfa error ;);_dgace .SbrATX =make ([]int8 ,2);_dgace .SbrATY =make ([]int8 ,2);_gdff ,_abfa =_dgace ._bgbcd .ReadByte ();if _abfa !=nil {return _abfa ;};_dgace .SbrATX [0]=int8 (_gdff );_gdff ,_abfa =_dgace ._bgbcd .ReadByte ();if _abfa !=nil {return _abfa ;};_dgace .SbrATY [0]=int8 (_gdff );_gdff ,_abfa =_dgace ._bgbcd .ReadByte ();if _abfa !=nil {return _abfa ;};_dgace .SbrATX [1]=int8 (_gdff );_gdff ,_abfa =_dgace ._bgbcd .ReadByte ();if _abfa !=nil {return _abfa ;};_dgace .SbrATY [1]=int8 (_gdff );return nil ;};func (_dbcb *TextRegion )readAmountOfSymbolInstances ()error {_abfad ,_daga :=_dbcb ._bgbcd .ReadBits (32);if _daga !=nil {return _daga ;};_dbcb .NumberOfSymbolInstances =uint32 (_abfad &_c .MaxUint32 );_cbbff :=_dbcb .RegionInfo .BitmapWidth *_dbcb .RegionInfo .BitmapHeight ;if _cbbff < _dbcb .NumberOfSymbolInstances {_ff .Log .Debug ("\u004c\u0069\u006d\u0069t\u0069\u006e\u0067\u0020t\u0068\u0065\u0020n\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020d\u0065\u0063\u006f\u0064e\u0064\u0020\u0073\u0079m\u0062\u006f\u006c\u0020\u0069n\u0073\u0074\u0061\u006e\u0063\u0065\u0073 \u0074\u006f\u0020\u006f\u006ee\u0020\u0070\u0065\u0072\u0020\u0070\u0069\u0078\u0065l\u0020\u0028\u0020\u0025\u0064\u0020\u0069\u006e\u0073\u0074\u0065\u0061\u0064\u0020\u006f\u0066\u0020\u0025\u0064\u0029",_cbbff ,_dbcb .NumberOfSymbolInstances );_dbcb .NumberOfSymbolInstances =_cbbff ;};return nil ;};func (_aaeg *SymbolDictionary )decodeDirectlyThroughGenericRegion (_eadd ,_aabf uint32 )error {if _aaeg ._begfe ==nil {_aaeg ._begfe =NewGenericRegion (_aaeg ._gfgg );};_aaeg ._begfe .setParametersWithAt (false ,byte (_aaeg .SdTemplate ),false ,false ,_aaeg .SdATX ,_aaeg .SdATY ,_eadd ,_aabf ,_aaeg ._edda ,_aaeg ._acdaf );return _aaeg .addSymbol (_aaeg ._begfe );};func (_cdcg *Header )writeFlags (_adc _e .BinaryWriter )(_ffcf error ){const _facd ="\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065F\u006c\u0061\u0067\u0073";_ebaf :=byte (_cdcg .Type );if _ffcf =_adc .WriteByte (_ebaf );_ffcf !=nil {return _fg .Wrap (_ffcf ,_facd ,"\u0077\u0072\u0069ti\u006e\u0067\u0020\u0073\u0065\u0067\u006d\u0065\u006et\u0020t\u0079p\u0065 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064");};if !_cdcg .RetainFlag &&!_cdcg .PageAssociationFieldSize {return nil ;};if _ffcf =_adc .SkipBits (-8);_ffcf !=nil {return _fg .Wrap (_ffcf ,_facd ,"\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0062\u0061\u0063\u006b\u0020\u0074\u0068\u0065\u0020\u0062\u0069\u0074\u0073\u0020\u0066\u0061il\u0065\u0064");};var _cbfa int ;if _cdcg .RetainFlag {_cbfa =1;};if _ffcf =_adc .WriteBit (_cbfa );_ffcf !=nil {return _fg .Wrap (_ffcf ,_facd ,"\u0072\u0065\u0074\u0061in\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067\u0073");};_cbfa =0;if _cdcg .PageAssociationFieldSize {_cbfa =1;};if _ffcf =_adc .WriteBit (_cbfa );_ffcf !=nil {return _fg .Wrap (_ffcf ,_facd ,"p\u0061\u0067\u0065\u0020as\u0073o\u0063\u0069\u0061\u0074\u0069o\u006e\u0020\u0066\u006c\u0061\u0067");};_adc .FinishByte ();return nil ;};func (_feaad *PageInformationSegment )readCombinationOperatorOverrideAllowed ()error {_bddd ,_fddf :=_feaad ._cgbc .ReadBit ();if _fddf !=nil {return _fddf ;};if _bddd ==1{_feaad ._baac =true ;};return nil ;};func (_cacg *PageInformationSegment )readIsLossless ()error {_ecdcf ,_gbeb :=_cacg ._cgbc .ReadBit ();if _gbeb !=nil {return _gbeb ;};if _ecdcf ==1{_cacg .IsLossless =true ;};return nil ;};func (_bbf *Header )readHeaderLength (_fdcf _e .StreamReader ,_fbaa int64 ){_bbf .HeaderLength =_fdcf .StreamPosition ()-_fbaa ;};func (_daf *GenericRegion )getPixel (_eacg ,_cgda int )int8 {if _eacg < 0||_eacg >=_daf .Bitmap .Width {return 0;};if _cgda < 0||_cgda >=_daf .Bitmap .Height {return 0;};if _daf .Bitmap .GetPixel (_eacg ,_cgda ){return 1;};return 0;};func (_cgeee *TextRegion )decodeIds ()(int64 ,error ){const _dgfa ="\u0064e\u0063\u006f\u0064\u0065\u0049\u0064s";if _cgeee .IsHuffmanEncoded {if _cgeee .SbHuffDS ==3{if _cgeee ._cadc ==nil {_cbbf :=0;if _cgeee .SbHuffFS ==3{_cbbf ++;};var _caegg error ;_cgeee ._cadc ,_caegg =_cgeee .getUserTable (_cbbf );if _caegg !=nil {return 0,_fg .Wrap (_caegg ,_dgfa ,"");};};return _cgeee ._cadc .Decode (_cgeee ._bgbcd );};_becbb ,_agfe :=_fc .GetStandardTable (8+int (_cgeee .SbHuffDS ));if _agfe !=nil {return 0,_fg .Wrap (_agfe ,_dgfa ,"");};return _becbb .Decode (_cgeee ._bgbcd );};_ggbbd ,_ecdce :=_cgeee ._gbfa .DecodeInt (_cgeee ._baaeb );if _ecdce !=nil {return 0,_fg .Wrap (_ecdce ,_dgfa ,"\u0063\u0078\u0049\u0041\u0044\u0053");};return int64 (_ggbbd ),nil ;};func (_gabe *PatternDictionary )readTemplate ()error {_ccda ,_ccbgc :=_gabe ._abbe .ReadBits (2);if _ccbgc !=nil {return _ccbgc ;};_gabe .HDTemplate =byte (_ccda );return nil ;};func (_fgfg *GenericRegion )setParametersMMR (_deae bool ,_gdfe ,_ede int64 ,_ceed ,_cgdd uint32 ,_gbd byte ,_cfcgc ,_aff bool ,_abc ,_dabca []int8 ){_fgfg .DataOffset =_gdfe ;_fgfg .DataLength =_ede ;_fgfg .RegionSegment =&RegionSegment {};_fgfg .RegionSegment .BitmapHeight =_ceed ;_fgfg .RegionSegment .BitmapWidth =_cgdd ;_fgfg .GBTemplate =_gbd ;_fgfg .IsMMREncoded =_deae ;_fgfg .IsTPGDon =_cfcgc ;_fgfg .GBAtX =_abc ;_fgfg .GBAtY =_dabca ;};func (_eba *GenericRefinementRegion )readAtPixels ()error {_eba .GrAtX =make ([]int8 ,2);_eba .GrAtY =make ([]int8 ,2);_bg ,_ggf :=_eba ._ffc .ReadByte ();if _ggf !=nil {return _ggf ;};_eba .GrAtX [0]=int8 (_bg );_bg ,_ggf =_eba ._ffc .ReadByte ();if _ggf !=nil {return _ggf ;};_eba .GrAtY [0]=int8 (_bg );_bg ,_ggf =_eba ._ffc .ReadByte ();if _ggf !=nil {return _ggf ;};_eba .GrAtX [1]=int8 (_bg );_bg ,_ggf =_eba ._ffc .ReadByte ();if _ggf !=nil {return _ggf ;};_eba .GrAtY [1]=int8 (_bg );return nil ;};func (_ecdf *TextRegion )decodeIb (_bdfc ,_cgde int64 )(*_ad .Bitmap ,error ){const _ffde ="\u0064\u0065\u0063\u006f\u0064\u0065\u0049\u0062";var (_bbec error ;_cebeg *_ad .Bitmap ;);if _bdfc ==0{if int (_cgde )> len (_ecdf .Symbols )-1{return nil ,_fg .Error (_ffde ,"\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0049\u0042\u0020\u0062\u0069\u0074\u006d\u0061\u0070\u002e\u0020\u0069\u006e\u0064\u0065x\u0020\u006f\u0075\u0074\u0020o\u0066\u0020r\u0061\u006e\u0067\u0065");};return _ecdf .Symbols [int (_cgde )],nil ;};var _efef ,_gabdc ,_gcddg ,_ccef int64 ;_efef ,_bbec =_ecdf .decodeRdw ();if _bbec !=nil {return nil ,_fg .Wrap (_bbec ,_ffde ,"");};_gabdc ,_bbec =_ecdf .decodeRdh ();if _bbec !=nil {return nil ,_fg .Wrap (_bbec ,_ffde ,"");};_gcddg ,_bbec =_ecdf .decodeRdx ();if _bbec !=nil {return nil ,_fg .Wrap (_bbec ,_ffde ,"");};_ccef ,_bbec =_ecdf .decodeRdy ();if _bbec !=nil {return nil ,_fg .Wrap (_bbec ,_ffde ,"");};if _ecdf .IsHuffmanEncoded {if _ ,_bbec =_ecdf .decodeSymInRefSize ();_bbec !=nil {return nil ,_fg .Wrap (_bbec ,_ffde ,"");};_ecdf ._bgbcd .Align ();};_dbgg :=_ecdf .Symbols [_cgde ];_ccaee :=uint32 (_dbgg .Width );_ebca :=uint32 (_dbgg .Height );_dbbg :=int32 (uint32 (_efef )>>1)+int32 (_gcddg );_eecc :=int32 (uint32 (_gabdc )>>1)+int32 (_ccef );if _ecdf ._geaee ==nil {_ecdf ._geaee =_gdg (_ecdf ._bgbcd ,nil );};_ecdf ._geaee .setParameters (_ecdf ._abded ,_ecdf ._gbfa ,_ecdf .SbrTemplate ,_ccaee +uint32 (_efef ),_ebca +uint32 (_gabdc ),_dbgg ,_dbbg ,_eecc ,false ,_ecdf .SbrATX ,_ecdf .SbrATY );_cebeg ,_bbec =_ecdf ._geaee .GetRegionBitmap ();if _bbec !=nil {return nil ,_fg .Wrap (_bbec ,_ffde ,"\u0067\u0072\u0066");};if _ecdf .IsHuffmanEncoded {_ecdf ._bgbcd .Align ();};return _cebeg ,nil ;};func (_fcc *PageInformationSegment )String ()string {_dcef :=&_f .Builder {};_dcef .WriteString ("\u000a\u005b\u0050\u0041G\u0045\u002d\u0049\u004e\u0046\u004f\u0052\u004d\u0041\u0054I\u004fN\u002d\u0053\u0045\u0047\u004d\u0045\u004eT\u005d\u000a");_dcef .WriteString (_ce .Sprintf ("\u0009\u002d \u0042\u004d\u0048e\u0069\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u000a",_fcc .PageBMHeight ));_dcef .WriteString (_ce .Sprintf ("\u0009-\u0020B\u004d\u0057\u0069\u0064\u0074\u0068\u003a\u0020\u0025\u0064\u000a",_fcc .PageBMWidth ));_dcef .WriteString (_ce .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0058\u003a\u0020\u0025\u0064\u000a",_fcc .ResolutionX ));_dcef .WriteString (_ce .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0059\u003a\u0020\u0025\u0064\u000a",_fcc .ResolutionY ));_dcef .WriteString (_ce .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0073\u000a",_fcc ._ceee ));_dcef .WriteString (_ce .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006eO\u0070\u0065\u0072\u0061\u0074\u006f\u0072O\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025v\u000a",_fcc ._baac ));_dcef .WriteString (_ce .Sprintf ("\u0009-\u0020I\u0073\u004c\u006f\u0073\u0073l\u0065\u0073s\u003a\u0020\u0025\u0076\u000a",_fcc .IsLossless ));_dcef .WriteString (_ce .Sprintf ("\u0009\u002d\u0020R\u0065\u0071\u0075\u0069r\u0065\u0073\u0041\u0075\u0078\u0069\u006ci\u0061\u0072\u0079\u0042\u0075\u0066\u0066\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_fcc ._edg ));_dcef .WriteString (_ce .Sprintf ("\u0009\u002d\u0020M\u0069\u0067\u0068\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0052e\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0076\u000a",_fcc ._ecdc ));_dcef .WriteString (_ce .Sprintf ("\u0009\u002d\u0020\u0049\u0073\u0053\u0074\u0072\u0069\u0070\u0065\u0064:\u0020\u0025\u0076\u000a",_fcc .IsStripe ));_dcef .WriteString (_ce .Sprintf ("\t\u002d\u0020\u004d\u0061xS\u0074r\u0069\u0070\u0065\u0053\u0069z\u0065\u003a\u0020\u0025\u0076\u000a",_fcc .MaxStripeSize ));return _dcef .String ();};func (_ccae *GenericRegion )overrideAtTemplate0a (_dabe ,_bac ,_ccag ,_gedab ,_eedg ,_egbe int )int {if _ccae .GBAtOverride [0]{_dabe &=0xFFEF;if _ccae .GBAtY [0]==0&&_ccae .GBAtX [0]>=-int8 (_eedg ){_dabe |=(_gedab >>uint (int8 (_egbe )-_ccae .GBAtX [0]&0x1))<<4;}else {_dabe |=int (_ccae .getPixel (_bac +int (_ccae .GBAtX [0]),_ccag +int (_ccae .GBAtY [0])))<<4;};};if _ccae .GBAtOverride [1]{_dabe &=0xFBFF;if _ccae .GBAtY [1]==0&&_ccae .GBAtX [1]>=-int8 (_eedg ){_dabe |=(_gedab >>uint (int8 (_egbe )-_ccae .GBAtX [1]&0x1))<<10;}else {_dabe |=int (_ccae .getPixel (_bac +int (_ccae .GBAtX [1]),_ccag +int (_ccae .GBAtY [1])))<<10;};};if _ccae .GBAtOverride [2]{_dabe &=0xF7FF;if _ccae .GBAtY [2]==0&&_ccae .GBAtX [2]>=-int8 (_eedg ){_dabe |=(_gedab >>uint (int8 (_egbe )-_ccae .GBAtX [2]&0x1))<<11;}else {_dabe |=int (_ccae .getPixel (_bac +int (_ccae .GBAtX [2]),_ccag +int (_ccae .GBAtY [2])))<<11;};};if _ccae .GBAtOverride [3]{_dabe &=0x7FFF;if _ccae .GBAtY [3]==0&&_ccae .GBAtX [3]>=-int8 (_eedg ){_dabe |=(_gedab >>uint (int8 (_egbe )-_ccae .GBAtX [3]&0x1))<<15;}else {_dabe |=int (_ccae .getPixel (_bac +int (_ccae .GBAtX [3]),_ccag +int (_ccae .GBAtY [3])))<<15;};};return _dabe ;};func (_affa *RegionSegment )Encode (w _e .BinaryWriter )(_dcc int ,_agda error ){const _daag ="R\u0065g\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065n\u0074\u002e\u0045\u006eco\u0064\u0065";_bbgda :=make ([]byte ,4);_ag .BigEndian .PutUint32 (_bbgda ,_affa .BitmapWidth );_dcc ,_agda =w .Write (_bbgda );if _agda !=nil {return 0,_fg .Wrap (_agda ,_daag ,"\u0057\u0069\u0064t\u0068");};_ag .BigEndian .PutUint32 (_bbgda ,_affa .BitmapHeight );var _efcc int ;_efcc ,_agda =w .Write (_bbgda );if _agda !=nil {return 0,_fg .Wrap (_agda ,_daag ,"\u0048\u0065\u0069\u0067\u0068\u0074");};_dcc +=_efcc ;_ag .BigEndian .PutUint32 (_bbgda ,_affa .XLocation );_efcc ,_agda =w .Write (_bbgda );if _agda !=nil {return 0,_fg .Wrap (_agda ,_daag ,"\u0058L\u006f\u0063\u0061\u0074\u0069\u006fn");};_dcc +=_efcc ;_ag .BigEndian .PutUint32 (_bbgda ,_affa .YLocation );_efcc ,_agda =w .Write (_bbgda );if _agda !=nil {return 0,_fg .Wrap (_agda ,_daag ,"\u0059L\u006f\u0063\u0061\u0074\u0069\u006fn");};_dcc +=_efcc ;if _agda =w .WriteByte (byte (_affa .CombinaionOperator )&0x07);_agda !=nil {return 0,_fg .Wrap (_agda ,_daag ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};_dcc ++;return _dcc ,nil ;};var (_bbda Segmenter ;_beaf =map[Type ]func ()Segmenter {TSymbolDictionary :func ()Segmenter {return &SymbolDictionary {}},TIntermediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateLosslessTextRegion :func ()Segmenter {return &TextRegion {}},TPatternDictionary :func ()Segmenter {return &PatternDictionary {}},TIntermediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateLosslessHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TIntermediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateLosslessGenericRegion :func ()Segmenter {return &GenericRegion {}},TIntermediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateLosslessGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TPageInformation :func ()Segmenter {return &PageInformationSegment {}},TEndOfPage :func ()Segmenter {return _bbda },TEndOfStrip :func ()Segmenter {return &EndOfStripe {}},TEndOfFile :func ()Segmenter {return _bbda },TProfiles :func ()Segmenter {return _bbda },TTables :func ()Segmenter {return &TableSegment {}},TExtension :func ()Segmenter {return _bbda },TBitmap :func ()Segmenter {return _bbda }};);func (_ggde *Header )Encode (w _e .BinaryWriter )(_egcg int ,_fcgg error ){const _bega ="\u0048\u0065\u0061d\u0065\u0072\u002e\u0057\u0072\u0069\u0074\u0065";var _fffgf _e .BinaryWriter ;_ff .Log .Trace ("\u005b\u0053\u0045G\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045\u0052\u005d[\u0045\u004e\u0043\u004f\u0044\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _fcgg !=nil {_ff .Log .Trace ("[\u0053\u0045\u0047\u004d\u0045\u004eT\u002d\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0045\u004e\u0043\u004f\u0044E\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020%\u0076",_fcgg );}else {_ff .Log .Trace ("\u005b\u0053\u0045\u0047ME\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0025\u0076",_ggde );_ff .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045N\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u005b\u0045\u004e\u0043O\u0044\u0045\u005d\u0020\u0046\u0069\u006ei\u0073\u0068\u0065\u0064");};}();w .FinishByte ();if _ggde .SegmentData !=nil {_egea ,_aegc :=_ggde .SegmentData .(SegmentEncoder );if !_aegc {return 0,_fg .Errorf (_bega ,"\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0064\u006f\u0065s\u006e\u0027\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074 \u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0045\u006e\u0063\u006f\u0064er\u0020\u0069\u006e\u0074\u0065\u0072\u0066\u0061\u0063\u0065",_ggde .SegmentData );};_fffgf =_e .BufferedMSB ();_egcg ,_fcgg =_egea .Encode (_fffgf );if _fcgg !=nil {return 0,_fg .Wrap (_fcgg ,_bega ,"");};_ggde .SegmentDataLength =uint64 (_egcg );};if _ggde .pageSize ()==4{_ggde .PageAssociationFieldSize =true ;};var _dbgf int ;_dbgf ,_fcgg =_ggde .writeSegmentNumber (w );if _fcgg !=nil {return 0,_fg .Wrap (_fcgg ,_bega ,"");};_egcg +=_dbgf ;if _fcgg =_ggde .writeFlags (w );_fcgg !=nil {return _egcg ,_fg .Wrap (_fcgg ,_bega ,"");};_egcg ++;_dbgf ,_fcgg =_ggde .writeReferredToCount (w );if _fcgg !=nil {return 0,_fg .Wrap (_fcgg ,_bega ,"");};_egcg +=_dbgf ;_dbgf ,_fcgg =_ggde .writeReferredToSegments (w );if _fcgg !=nil {return 0,_fg .Wrap (_fcgg ,_bega ,"");};_egcg +=_dbgf ;_dbgf ,_fcgg =_ggde .writeSegmentPageAssociation (w );if _fcgg !=nil {return 0,_fg .Wrap (_fcgg ,_bega ,"");};_egcg +=_dbgf ;_dbgf ,_fcgg =_ggde .writeSegmentDataLength (w );if _fcgg !=nil {return 0,_fg .Wrap (_fcgg ,_bega ,"");};_egcg +=_dbgf ;_ggde .HeaderLength =int64 (_egcg )-int64 (_ggde .SegmentDataLength );if _fffgf !=nil {if _ ,_fcgg =w .Write (_fffgf .Data ());_fcgg !=nil {return _egcg ,_fg .Wrap (_fcgg ,_bega ,"\u0077r\u0069t\u0065\u0020\u0073\u0065\u0067m\u0065\u006et\u0020\u0064\u0061\u0074\u0061");};};return _egcg ,nil ;};func (_bcag *SymbolDictionary )Init (h *Header ,r _e .StreamReader )error {_bcag .Header =h ;_bcag ._gfgg =r ;return _bcag .parseHeader ();};func (_acgc *SymbolDictionary )decodeThroughTextRegion (_gdec ,_dcec ,_feaaa uint32 )error {if _acgc ._ceafb ==nil {_acgc ._ceafb =_fffbd (_acgc ._gfgg ,nil );_acgc ._ceafb .setContexts (_acgc ._edda ,_agc .NewStats (512,1),_agc .NewStats (512,1),_agc .NewStats (512,1),_agc .NewStats (512,1),_acgc ._fcgcb ,_agc .NewStats (512,1),_agc .NewStats (512,1),_agc .NewStats (512,1),_agc .NewStats (512,1));};if _ebeb :=_acgc .setSymbolsArray ();_ebeb !=nil {return _ebeb ;};_acgc ._ceafb .setParameters (_acgc ._acdaf ,_acgc .IsHuffmanEncoded ,true ,_gdec ,_dcec ,_feaaa ,1,_acgc ._ebbe +_acgc ._bdc ,0,0,0,1,0,0,0,0,0,0,0,0,0,_acgc .SdrTemplate ,_acgc .SdrATX ,_acgc .SdrATY ,_acgc ._bbdg ,_acgc ._gedf );return _acgc .addSymbol (_acgc ._ceafb );};func (_fgac *GenericRegion )InitEncode (bm *_ad .Bitmap ,xLoc ,yLoc ,template int ,duplicateLineRemoval bool )error {const _cedf ="\u0047e\u006e\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069\u006f\u006e.\u0049\u006e\u0069\u0074\u0045\u006e\u0063\u006f\u0064\u0065";if bm ==nil {return _fg .Error (_cedf ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if xLoc < 0||yLoc < 0{return _fg .Error (_cedf ,"\u0078\u0020\u0061\u006e\u0064\u0020\u0079\u0020\u006c\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074h\u0061\u006e\u0020\u0030");};_fgac .Bitmap =bm ;_fgac .GBTemplate =byte (template );switch _fgac .GBTemplate {case 0:_fgac .GBAtX =[]int8 {3,-3,2,-2};_fgac .GBAtY =[]int8 {-1,-1,-2,-2};case 1:_fgac .GBAtX =[]int8 {3};_fgac .GBAtY =[]int8 {-1};case 2,3:_fgac .GBAtX =[]int8 {2};_fgac .GBAtY =[]int8 {-1};default:return _fg .Errorf (_cedf ,"\u0070\u0072o\u0076\u0069\u0064\u0065\u0064 \u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u007b\u0030\u002c\u0031\u002c\u0032\u002c\u0033\u007d",template );};_fgac .RegionSegment =&RegionSegment {BitmapHeight :uint32 (bm .Height ),BitmapWidth :uint32 (bm .Width ),XLocation :uint32 (xLoc ),YLocation :uint32 (yLoc )};_fgac .IsTPGDon =duplicateLineRemoval ;return nil ;};func _efgg (_cgfd int )int {if _cgfd ==0{return 0;};_cgfd |=_cgfd >>1;_cgfd |=_cgfd >>2;_cgfd |=_cgfd >>4;_cgfd |=_cgfd >>8;_cgfd |=_cgfd >>16;return (_cgfd +1)>>1;};func (_ec *GenericRefinementRegion )decodeSLTP ()(int ,error ){_ec .Template .setIndex (_ec ._ga );return _ec ._ab .DecodeBit (_ec ._ga );};func (_fabb *SymbolDictionary )huffDecodeRefAggNInst ()(int64 ,error ){if !_fabb .SdHuffAggInstanceSelection {_fdab ,_dadbe :=_fc .GetStandardTable (1);if _dadbe !=nil {return 0,_dadbe ;};return _fdab .Decode (_fabb ._gfgg );};if _fabb ._dfad ==nil {var (_addb int ;_edaab error ;);if _fabb .SdHuffDecodeHeightSelection ==3{_addb ++;};if _fabb .SdHuffDecodeWidthSelection ==3{_addb ++;};if _fabb .SdHuffBMSizeSelection ==3{_addb ++;};_fabb ._dfad ,_edaab =_fabb .getUserTable (_addb );if _edaab !=nil {return 0,_edaab ;};};return _fabb ._dfad .Decode (_fabb ._gfgg );};func (_acbf *HalftoneRegion )renderPattern (_gefd [][]int )(_cfad error ){var _deeb ,_bge int ;for _aace :=0;_aace < int (_acbf .HGridHeight );_aace ++{for _baae :=0;_baae < int (_acbf .HGridWidth );_baae ++{_deeb =_acbf .computeX (_aace ,_baae );_bge =_acbf .computeY (_aace ,_baae );_caab :=_acbf .Patterns [_gefd [_aace ][_baae ]];if _cfad =_ad .Blit (_caab ,_acbf .HalftoneRegionBitmap ,_deeb +int (_acbf .HGridX ),_bge +int (_acbf .HGridY ),_acbf .CombinationOperator );_cfad !=nil {return _cfad ;};};};return nil ;};func (_bae *GenericRegion )setParametersWithAt (_cba bool ,_fcbdf byte ,_geg ,_ceaf bool ,_bgg ,_gbb []int8 ,_cfag ,_aaab uint32 ,_adad *_agc .DecoderStats ,_dgfc *_agc .Decoder ){_bae .IsMMREncoded =_cba ;_bae .GBTemplate =_fcbdf ;_bae .IsTPGDon =_geg ;_bae .GBAtX =_bgg ;_bae .GBAtY =_gbb ;_bae .RegionSegment .BitmapHeight =_aaab ;_bae .RegionSegment .BitmapWidth =_cfag ;_bae ._fbad =nil ;_bae .Bitmap =nil ;if _adad !=nil {_bae ._cee =_adad ;};if _dgfc !=nil {_bae ._cbb =_dgfc ;};_ff .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049O\u004e\u005d\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073\u0020\u0053\u0044\u0041t\u003a\u0020\u0025\u0073",_bae );};func (_gecf *TextRegion )getUserTable (_eadg int )(_fc .Tabler ,error ){const _gecfc ="\u0067\u0065\u0074U\u0073\u0065\u0072\u0054\u0061\u0062\u006c\u0065";var _cbacg int ;for _ ,_abdeg :=range _gecf .Header .RTSegments {if _abdeg .Type ==53{if _cbacg ==_eadg {_eafb ,_ccgc :=_abdeg .GetSegmentData ();if _ccgc !=nil {return nil ,_ccgc ;};_decd ,_acgace :=_eafb .(*TableSegment );if !_acgace {_ff .Log .Debug (_ce .Sprintf ("\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079p\u0065\u00205\u0033\u0020\u002d\u0020\u0061\u006ed\u0020in\u0064\u0065\u0078\u003a\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_abdeg .SegmentNumber ));return nil ,_fg .Error (_gecfc ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079\u0070e\u0020\u0035\u0033\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u002a\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074");};return _fc .NewEncodedTable (_decd );};_cbacg ++;};};return nil ,nil ;};func (_dcegg *GenericRegion )setOverrideFlag (_gee int ){_dcegg .GBAtOverride [_gee ]=true ;_dcegg ._dfb =true ;};var _ SegmentEncoder =&RegionSegment {};func (_egf *Header )String ()string {_ffad :=&_f .Builder {};_ffad .WriteString ("\u000a[\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045A\u0044\u0045\u0052\u005d\u000a");_ffad .WriteString (_ce .Sprintf ("\t\u002d\u0020\u0053\u0065gm\u0065n\u0074\u004e\u0075\u006d\u0062e\u0072\u003a\u0020\u0025\u0076\u000a",_egf .SegmentNumber ));_ffad .WriteString (_ce .Sprintf ("\u0009\u002d\u0020T\u0079\u0070\u0065\u003a\u0020\u0025\u0076\u000a",_egf .Type ));_ffad .WriteString (_ce .Sprintf ("\u0009-\u0020R\u0065\u0074\u0061\u0069\u006eF\u006c\u0061g\u003a\u0020\u0025\u0076\u000a",_egf .RetainFlag ));_ffad .WriteString (_ce .Sprintf ("\u0009\u002d\u0020Pa\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_egf .PageAssociation ));_ffad .WriteString (_ce .Sprintf ("\u0009\u002d\u0020\u0050\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074i\u006fn\u0046\u0069\u0065\u006c\u0064\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_egf .PageAssociationFieldSize ));_ffad .WriteString ("\u0009-\u0020R\u0054\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u0053\u003a\u000a");for _ ,_bfcb :=range _egf .RTSNumbers {_ffad .WriteString (_ce .Sprintf ("\u0009\t\u002d\u0020\u0025\u0064\u000a",_bfcb ));};_ffad .WriteString (_ce .Sprintf ("\t\u002d \u0048\u0065\u0061\u0064\u0065\u0072\u004c\u0065n\u0067\u0074\u0068\u003a %\u0076\u000a",_egf .HeaderLength ));_ffad .WriteString (_ce .Sprintf ("\u0009-\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061L\u0065n\u0067\u0074\u0068\u003a\u0020\u0025\u0076\n",_egf .SegmentDataLength ));_ffad .WriteString (_ce .Sprintf ("\u0009\u002d\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074D\u0061\u0074\u0061\u0053\u0074\u0061\u0072t\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0076\u000a",_egf .SegmentDataStartOffset ));return _ffad .String ();};var _ SegmentEncoder =&GenericRegion {};func (_abdg *template0 )form (_eefg ,_gaa ,_eacf ,_efdc ,_fda int16 )int16 {return (_eefg <<10)|(_gaa <<7)|(_eacf <<4)|(_efdc <<1)|_fda ;};func (_cdfe *SymbolDictionary )setInSyms ()error {if _cdfe .Header .RTSegments !=nil {return _cdfe .retrieveImportSymbols ();};_cdfe ._edgg =make ([]*_ad .Bitmap ,0);return nil ;};func (_gaf *GenericRegion )overrideAtTemplate3 (_dge ,_bga ,_gafa ,_acd ,_aee int )int {_dge &=0x3EF;if _gaf .GBAtY [0]==0&&_gaf .GBAtX [0]>=-int8 (_aee ){_dge |=(_acd >>uint (7-(int8 (_aee )+_gaf .GBAtX [0]))&0x1)<<4;}else {_dge |=int (_gaf .getPixel (_bga +int (_gaf .GBAtX [0]),_gafa +int (_gaf .GBAtY [0])))<<4;};return _dge ;};var _ templater =&template0 {};func (_ddfe *TableSegment )parseHeader ()error {var (_fecgf int ;_bdf uint64 ;_defcd error ;);_fecgf ,_defcd =_ddfe ._fafa .ReadBit ();if _defcd !=nil {return _defcd ;};if _fecgf ==1{return _ce .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0061\u0062\u006c\u0065 \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0064e\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u002e\u0020\u0042\u002e\u0032\u002e1\u0020\u0043\u006f\u0064\u0065\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0042\u0069\u0074\u0020\u0037\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u007a\u0065\u0072\u006f\u002e\u0020\u0057a\u0073\u003a \u0025\u0064",_fecgf );};if _bdf ,_defcd =_ddfe ._fafa .ReadBits (3);_defcd !=nil {return _defcd ;};_ddfe ._babdc =(int32 (_bdf )+1)&0xf;if _bdf ,_defcd =_ddfe ._fafa .ReadBits (3);_defcd !=nil {return _defcd ;};_ddfe ._dcac =(int32 (_bdf )+1)&0xf;if _bdf ,_defcd =_ddfe ._fafa .ReadBits (32);_defcd !=nil {return _defcd ;};_ddfe ._cda =int32 (_bdf &_c .MaxInt32 );if _bdf ,_defcd =_ddfe ._fafa .ReadBits (32);_defcd !=nil {return _defcd ;};_ddfe ._aggd =int32 (_bdf &_c .MaxInt32 );return nil ;};func (_dca *GenericRegion )overrideAtTemplate1 (_ccf ,_dabc ,_ggagd ,_bcb ,_deaf int )int {_ccf &=0x1FF7;if _dca .GBAtY [0]==0&&_dca .GBAtX [0]>=-int8 (_deaf ){_ccf |=(_bcb >>uint (7-(int8 (_deaf )+_dca .GBAtX [0]))&0x1)<<3;}else {_ccf |=int (_dca .getPixel (_dabc +int (_dca .GBAtX [0]),_ggagd +int (_dca .GBAtY [0])))<<3;};return _ccf ;};func (_eggc *SymbolDictionary )retrieveImportSymbols ()error {for _ ,_bcgf :=range _eggc .Header .RTSegments {if _bcgf .Type ==0{_cadga ,_fcbcf :=_bcgf .GetSegmentData ();if _fcbcf !=nil {return _fcbcf ;};_deed ,_feca :=_cadga .(*SymbolDictionary );if !_feca {return _ce .Errorf ("\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0044\u0061\u0074a\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u003a\u0020%\u0054",_cadga );};_gbcf ,_fcbcf :=_deed .GetDictionary ();if _fcbcf !=nil {return _ce .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064 \u0073\u0065\u0067m\u0065\u006e\u0074 \u0077\u0069t\u0068\u0020\u0069\u006e\u0064\u0065x\u003a %\u0064\u0020\u0067\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0073",_bcgf .SegmentNumber ,_fcbcf .Error ());};_eggc ._edgg =append (_eggc ._edgg ,_gbcf ...);_eggc ._ebbe +=_deed .NumberOfExportedSymbols ;};};return nil ;};func (_aebc *PatternDictionary )computeSegmentDataStructure ()error {_aebc .DataOffset =_aebc ._abbe .StreamPosition ();_aebc .DataHeaderLength =_aebc .DataOffset -_aebc .DataHeaderOffset ;_aebc .DataLength =int64 (_aebc ._abbe .Length ())-_aebc .DataHeaderLength ;return nil ;};type Segmenter interface{Init (_daaa *Header ,_gabd _e .StreamReader )error ;};func (_eegb *Header )readNumberOfReferredToSegments (_fgagc _e .StreamReader )(uint64 ,error ){const _cgee ="\u0072\u0065\u0061\u0064\u004e\u0075\u006d\u0062\u0065\u0072O\u0066\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";_egff ,_eafd :=_fgagc .ReadBits (3);if _eafd !=nil {return 0,_fg .Wrap (_eafd ,_cgee ,"\u0063\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0072\u0074\u0073");};_egff &=0xf;var _feb []byte ;if _egff <=4{_feb =make ([]byte ,5);for _aeb :=0;_aeb <=4;_aeb ++{_ccge ,_cfdf :=_fgagc .ReadBit ();if _cfdf !=nil {return 0,_fg .Wrap (_cfdf ,_cgee ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_feb [_aeb ]=byte (_ccge );};}else {_egff ,_eafd =_fgagc .ReadBits (29);if _eafd !=nil {return 0,_eafd ;};_egff &=_c .MaxInt32 ;_cbc :=(_egff +8)>>3;_cbc <<=3;_feb =make ([]byte ,_cbc );var _cbe uint64 ;for _cbe =0;_cbe < _cbc ;_cbe ++{_eefa ,_cae :=_fgagc .ReadBit ();if _cae !=nil {return 0,_fg .Wrap (_cae ,_cgee ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_feb [_cbe ]=byte (_eefa );};};return _egff ,nil ;};func (_aceg *Header )CleanSegmentData (){if _aceg .SegmentData !=nil {_aceg .SegmentData =nil ;};};func (_feef *SymbolDictionary )huffDecodeBmSize ()(int64 ,error ){if _feef ._gbba ==nil {var (_adbf int ;_ecbae error ;);if _feef .SdHuffDecodeHeightSelection ==3{_adbf ++;};if _feef .SdHuffDecodeWidthSelection ==3{_adbf ++;};_feef ._gbba ,_ecbae =_feef .getUserTable (_adbf );if _ecbae !=nil {return 0,_ecbae ;};};return _feef ._gbba .Decode (_feef ._gfgg );};func (_efb *SymbolDictionary )setCodingStatistics ()error {if _efb ._gegb ==nil {_efb ._gegb =_agc .NewStats (512,1);};if _efb ._gadg ==nil {_efb ._gadg =_agc .NewStats (512,1);};if _efb ._cgae ==nil {_efb ._cgae =_agc .NewStats (512,1);};if _efb ._dgag ==nil {_efb ._dgag =_agc .NewStats (512,1);};if _efb ._gcddb ==nil {_efb ._gcddb =_agc .NewStats (512,1);};if _efb .UseRefinementAggregation &&_efb ._fcgcb ==nil {_efb ._fcgcb =_agc .NewStats (1<<uint (_efb ._gedf ),1);_efb ._fgca =_agc .NewStats (512,1);_efb ._caea =_agc .NewStats (512,1);};if _efb ._edda ==nil {_efb ._edda =_agc .NewStats (65536,1);};if _efb ._acdaf ==nil {var _cag error ;_efb ._acdaf ,_cag =_agc .New (_efb ._gfgg );if _cag !=nil {return _cag ;};};return nil ;};func (_cabf *TextRegion )blit (_dfdcf *_ad .Bitmap ,_ade int64 )error {if _cabf .IsTransposed ==0&&(_cabf .ReferenceCorner ==2||_cabf .ReferenceCorner ==3){_cabf ._agde +=int64 (_dfdcf .Width -1);}else if _cabf .IsTransposed ==1&&(_cabf .ReferenceCorner ==0||_cabf .ReferenceCorner ==2){_cabf ._agde +=int64 (_dfdcf .Height -1);};_faeab :=_cabf ._agde ;if _cabf .IsTransposed ==1{_faeab ,_ade =_ade ,_faeab ;};switch _cabf .ReferenceCorner {case 0:_ade -=int64 (_dfdcf .Height -1);case 2:_ade -=int64 (_dfdcf .Height -1);_faeab -=int64 (_dfdcf .Width -1);case 3:_faeab -=int64 (_dfdcf .Width -1);};_dafb :=_ad .Blit (_dfdcf ,_cabf .RegionBitmap ,int (_faeab ),int (_ade ),_cabf .CombinationOperator );if _dafb !=nil {return _dafb ;};if _cabf .IsTransposed ==0&&(_cabf .ReferenceCorner ==0||_cabf .ReferenceCorner ==1){_cabf ._agde +=int64 (_dfdcf .Width -1);};if _cabf .IsTransposed ==1&&(_cabf .ReferenceCorner ==1||_cabf .ReferenceCorner ==3){_cabf ._agde +=int64 (_dfdcf .Height -1);};return nil ;};func (_baefa *PageInformationSegment )Encode (w _e .BinaryWriter )(_bbff int ,_affc error ){const _efceg ="\u0050\u0061g\u0065\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u002e\u0045\u006eco\u0064\u0065";_caff :=make ([]byte ,4);_ag .BigEndian .PutUint32 (_caff ,uint32 (_baefa .PageBMWidth ));_bbff ,_affc =w .Write (_caff );if _affc !=nil {return _bbff ,_fg .Wrap (_affc ,_efceg ,"\u0077\u0069\u0064t\u0068");};_ag .BigEndian .PutUint32 (_caff ,uint32 (_baefa .PageBMHeight ));var _gcc int ;_gcc ,_affc =w .Write (_caff );if _affc !=nil {return _gcc +_bbff ,_fg .Wrap (_affc ,_efceg ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_bbff +=_gcc ;_ag .BigEndian .PutUint32 (_caff ,uint32 (_baefa .ResolutionX ));_gcc ,_affc =w .Write (_caff );if _affc !=nil {return _gcc +_bbff ,_fg .Wrap (_affc ,_efceg ,"\u0078\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_bbff +=_gcc ;_ag .BigEndian .PutUint32 (_caff ,uint32 (_baefa .ResolutionY ));if _gcc ,_affc =w .Write (_caff );_affc !=nil {return _gcc +_bbff ,_fg .Wrap (_affc ,_efceg ,"\u0079\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_bbff +=_gcc ;if _affc =_baefa .encodeFlags (w );_affc !=nil {return _bbff ,_fg .Wrap (_affc ,_efceg ,"");};_bbff ++;if _gcc ,_affc =_baefa .encodeStripingInformation (w );_affc !=nil {return _bbff ,_fg .Wrap (_affc ,_efceg ,"");};_bbff +=_gcc ;return _bbff ,nil ;};func (_fdec *TextRegion )decodeID ()(int64 ,error ){if _fdec .IsHuffmanEncoded {if _fdec ._feda ==nil {_ddad ,_fcgb :=_fdec ._bgbcd .ReadBits (byte (_fdec ._gcbd ));return int64 (_ddad ),_fcgb ;};return _fdec ._feda .Decode (_fdec ._bgbcd );};return _fdec ._gbfa .DecodeIAID (uint64 (_fdec ._gcbd ),_fdec ._acege );};func (_gabde *SymbolDictionary )setAtPixels ()error {if _gabde .IsHuffmanEncoded {return nil ;};_ffcfa :=1;if _gabde .SdTemplate ==0{_ffcfa =4;};if _bbdd :=_gabde .readAtPixels (_ffcfa );_bbdd !=nil {return _bbdd ;};return nil ;};type template1 struct{};func (_gabdg *SymbolDictionary )readNumberOfNewSymbols ()error {_gffa ,_aeddb :=_gabdg ._gfgg .ReadBits (32);if _aeddb !=nil {return _aeddb ;};_gabdg .NumberOfNewSymbols =uint32 (_gffa &_c .MaxUint32 );return nil ;};func (_gdgc *PatternDictionary )GetDictionary ()([]*_ad .Bitmap ,error ){if _gdgc .Patterns !=nil {return _gdgc .Patterns ,nil ;};if !_gdgc .IsMMREncoded {_gdgc .setGbAtPixels ();};_ffce :=NewGenericRegion (_gdgc ._abbe );_ffce .setParametersMMR (_gdgc .IsMMREncoded ,_gdgc .DataOffset ,_gdgc .DataLength ,uint32 (_gdgc .HdpHeight ),(_gdgc .GrayMax +1)*uint32 (_gdgc .HdpWidth ),_gdgc .HDTemplate ,false ,false ,_gdgc .GBAtX ,_gdgc .GBAtY );_dgd ,_geb :=_ffce .GetRegionBitmap ();if _geb !=nil {return nil ,_geb ;};if _geb =_gdgc .extractPatterns (_dgd );_geb !=nil {return nil ,_geb ;};return _gdgc .Patterns ,nil ;};func (_geac *TextRegion )createRegionBitmap ()error {_geac .RegionBitmap =_ad .New (int (_geac .RegionInfo .BitmapWidth ),int (_geac .RegionInfo .BitmapHeight ));if _geac .DefaultPixel !=0{_geac .RegionBitmap .SetDefaultPixel ();};return nil ;};func (_ead *template1 )setIndex (_ggfc *_agc .DecoderStats ){_ggfc .SetIndex (0x080)};func NewGenericRegion (r _e .StreamReader )*GenericRegion {return &GenericRegion {RegionSegment :NewRegionSegment (r ),_efa :r };};func (_dd *GenericRefinementRegion )GetRegionBitmap ()(*_ad .Bitmap ,error ){var _gg error ;_ff .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");defer func (){if _gg !=nil {_ff .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0047\u0065\u0074R\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006dap\u0020\u0066a\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_gg );}else {_ff .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");};}();if _dd .RegionBitmap !=nil {return _dd .RegionBitmap ,nil ;};_ggd :=0;if _dd .ReferenceBitmap ==nil {_dd .ReferenceBitmap ,_gg =_dd .getGrReference ();if _gg !=nil {return nil ,_gg ;};};if _dd ._ab ==nil {_dd ._ab ,_gg =_agc .New (_dd ._ffc );if _gg !=nil {return nil ,_gg ;};};if _dd ._ga ==nil {_dd ._ga =_agc .NewStats (8192,1);};_dd .RegionBitmap =_ad .New (int (_dd .RegionInfo .BitmapWidth ),int (_dd .RegionInfo .BitmapHeight ));if _dd .TemplateID ==0{if _gg =_dd .updateOverride ();_gg !=nil {return nil ,_gg ;};};_ded :=(_dd .RegionBitmap .Width +7)&-8;var _bb int ;if _dd .IsTPGROn {_bb =int (-_dd .ReferenceDY )*_dd .ReferenceBitmap .RowStride ;};_aac :=_bb +1;for _ffa :=0;_ffa < _dd .RegionBitmap .Height ;_ffa ++{if _dd .IsTPGROn {_cb ,_ed :=_dd .decodeSLTP ();if _ed !=nil {return nil ,_ed ;};_ggd ^=_cb ;};if _ggd ==0{_gg =_dd .decodeOptimized (_ffa ,_dd .RegionBitmap .Width ,_dd .RegionBitmap .RowStride ,_dd .ReferenceBitmap .RowStride ,_ded ,_bb ,_aac );if _gg !=nil {return nil ,_gg ;};}else {_gg =_dd .decodeTypicalPredictedLine (_ffa ,_dd .RegionBitmap .Width ,_dd .RegionBitmap .RowStride ,_dd .ReferenceBitmap .RowStride ,_ded ,_bb );if _gg !=nil {return nil ,_gg ;};};};return _dd .RegionBitmap ,nil ;};func (_fga *EndOfStripe )LineNumber ()int {return _fga ._bd };func (_efed *TextRegion )decodeSymInRefSize ()(int64 ,error ){const _bdbe ="\u0064e\u0063o\u0064\u0065\u0053\u0079\u006dI\u006e\u0052e\u0066\u0053\u0069\u007a\u0065";if _efed .SbHuffRSize ==0{_efecf ,_bfb :=_fc .GetStandardTable (1);if _bfb !=nil {return 0,_fg .Wrap (_bfb ,_bdbe ,"");};return _efecf .Decode (_efed ._bgbcd );};if _efed ._abadc ==nil {var (_abaga int ;_deeef error ;);if _efed .SbHuffFS ==3{_abaga ++;};if _efed .SbHuffDS ==3{_abaga ++;};if _efed .SbHuffDT ==3{_abaga ++;};if _efed .SbHuffRDWidth ==3{_abaga ++;};if _efed .SbHuffRDHeight ==3{_abaga ++;};if _efed .SbHuffRDX ==3{_abaga ++;};if _efed .SbHuffRDY ==3{_abaga ++;};_efed ._abadc ,_deeef =_efed .getUserTable (_abaga );if _deeef !=nil {return 0,_fg .Wrap (_deeef ,_bdbe ,"");};};_aegd ,_gegg :=_efed ._abadc .Decode (_efed ._bgbcd );if _gegg !=nil {return 0,_fg .Wrap (_gegg ,_bdbe ,"");};return _aegd ,nil ;};func _gdg (_ffaa _e .StreamReader ,_dfc *Header )*GenericRefinementRegion {return &GenericRefinementRegion {_ffc :_ffaa ,RegionInfo :NewRegionSegment (_ffaa ),_ge :_dfc ,_adf :&template0 {},_ada :&template1 {}};};func (_feed *HalftoneRegion )GetRegionInfo ()*RegionSegment {return _feed .RegionSegment };func (_dfbc *PatternDictionary )readGrayMax ()error {_bdaf ,_agbf :=_dfbc ._abbe .ReadBits (32);if _agbf !=nil {return _agbf ;};_dfbc .GrayMax =uint32 (_bdaf &_c .MaxUint32 );return nil ;};func (_accb *TextRegion )setContexts (_gadb *_agc .DecoderStats ,_defd *_agc .DecoderStats ,_afab *_agc .DecoderStats ,_egcge *_agc .DecoderStats ,_bccae *_agc .DecoderStats ,_babg *_agc .DecoderStats ,_cbca *_agc .DecoderStats ,_gaec *_agc .DecoderStats ,_dgagc *_agc .DecoderStats ,_gcaad *_agc .DecoderStats ){_accb ._ggfcg =_defd ;_accb ._bebad =_afab ;_accb ._baaeb =_egcge ;_accb ._bacg =_bccae ;_accb ._gebd =_cbca ;_accb ._eege =_gaec ;_accb ._acege =_babg ;_accb ._acbff =_dgagc ;_accb ._ggagf =_gcaad ;_accb ._abded =_gadb ;};func (_cfe *GenericRegion )decodeTemplate3 (_egb ,_dgad ,_gfcd int ,_cfcg ,_ggag int )(_cgd error ){const _fdb ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0033";var (_acg ,_bbgd int ;_cfd int ;_faeg byte ;_eedf ,_bgf int ;);if _egb >=1{_faeg ,_cgd =_cfe .Bitmap .GetByte (_ggag );if _cgd !=nil {return _fg .Wrap (_cgd ,_fdb ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_cfd =int (_faeg );};_acg =(_cfd >>1)&0x70;for _feg :=0;_feg < _gfcd ;_feg =_eedf {var (_fcbc byte ;_ffae int ;);_eedf =_feg +8;if _cce :=_dgad -_feg ;_cce > 8{_ffae =8;}else {_ffae =_cce ;};if _egb >=1{_cfd <<=8;if _eedf < _dgad {_faeg ,_cgd =_cfe .Bitmap .GetByte (_ggag +1);if _cgd !=nil {return _fg .Wrap (_cgd ,_fdb ,"\u0069\u006e\u006e\u0065\u0072\u0020\u002d\u0020\u006c\u0069\u006e\u0065 \u003e\u003d\u0020\u0031");};_cfd |=int (_faeg );};};for _ecc :=0;_ecc < _ffae ;_ecc ++{if _cfe ._dfb {_bbgd =_cfe .overrideAtTemplate3 (_acg ,_feg +_ecc ,_egb ,int (_fcbc ),_ecc );_cfe ._cee .SetIndex (int32 (_bbgd ));}else {_cfe ._cee .SetIndex (int32 (_acg ));};_bgf ,_cgd =_cfe ._cbb .DecodeBit (_cfe ._cee );if _cgd !=nil {return _fg .Wrap (_cgd ,_fdb ,"");};_fcbc |=byte (_bgf )<<byte (7-_ecc );_acg =((_acg &0x1f7)<<1)|_bgf |((_cfd >>uint (8-_ecc ))&0x010);};if _bbcb :=_cfe .Bitmap .SetByte (_cfcg ,_fcbc );_bbcb !=nil {return _fg .Wrap (_bbcb ,_fdb ,"");};_cfcg ++;_ggag ++;};return nil ;};func (_gaea *GenericRefinementRegion )String ()string {_ggda :=&_f .Builder {};_ggda .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_ggda .WriteString (_gaea .RegionInfo .String ()+"\u000a");_ggda .WriteString (_ce .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0052\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_gaea .IsTPGROn ));_ggda .WriteString (_ce .Sprintf ("\u0009-\u0020T\u0065\u006d\u0070\u006c\u0061t\u0065\u0049D\u003a\u0020\u0025\u0076\u000a",_gaea .TemplateID ));_ggda .WriteString (_ce .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_gaea .GrAtX ));_ggda .WriteString (_ce .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_gaea .GrAtY ));_ggda .WriteString (_ce .Sprintf ("\u0009-\u0020R\u0065\u0066\u0065\u0072\u0065n\u0063\u0065D\u0058\u0020\u0025\u0076\u000a",_gaea .ReferenceDX ));_ggda .WriteString (_ce .Sprintf ("\u0009\u002d\u0020\u0052ef\u0065\u0072\u0065\u006e\u0063\u0044\u0065\u0059\u003a\u0020\u0025\u0076\u000a",_gaea .ReferenceDY ));return _ggda .String ();};func (_ggc *SymbolDictionary )Encode (w _e .BinaryWriter )(_adb int ,_egcgf error ){const _eace ="\u0053\u0079\u006dbo\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0045\u006e\u0063\u006f\u0064\u0065";if _ggc ==nil {return 0,_fg .Error (_eace ,"\u0073\u0079m\u0062\u006f\u006c\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066in\u0065\u0064");};if _adb ,_egcgf =_ggc .encodeFlags (w );_egcgf !=nil {return _adb ,_fg .Wrap (_egcgf ,_eace ,"");};_ceef ,_egcgf :=_ggc .encodeATFlags (w );if _egcgf !=nil {return _adb ,_fg .Wrap (_egcgf ,_eace ,"");};_adb +=_ceef ;if _ceef ,_egcgf =_ggc .encodeRefinementATFlags (w );_egcgf !=nil {return _adb ,_fg .Wrap (_egcgf ,_eace ,"");};_adb +=_ceef ;if _ceef ,_egcgf =_ggc .encodeNumSyms (w );_egcgf !=nil {return _adb ,_fg .Wrap (_egcgf ,_eace ,"");};_adb +=_ceef ;if _ceef ,_egcgf =_ggc .encodeSymbols (w );_egcgf !=nil {return _adb ,_fg .Wrap (_egcgf ,_eace ,"");};_adb +=_ceef ;return _adb ,nil ;};func (_dbed *TextRegion )symbolIDCodeLengths ()error {var (_ffecb []*_fc .Code ;_beade uint64 ;_bece _fc .Tabler ;_fcbad error ;);for _egce :=0;_egce < 35;_egce ++{_beade ,_fcbad =_dbed ._bgbcd .ReadBits (4);if _fcbad !=nil {return _fcbad ;};_bfeb :=int (_beade &0xf);if _bfeb > 0{_ffecb =append (_ffecb ,_fc .NewCode (int32 (_bfeb ),0,int32 (_egce ),false ));};};_bece ,_fcbad =_fc .NewFixedSizeTable (_ffecb );if _fcbad !=nil {return _fcbad ;};var (_ddbc int64 ;_bbfd uint32 ;_aadbc []*_fc .Code ;_geccg int64 ;);for _bbfd < _dbed .NumberOfSymbols {_geccg ,_fcbad =_bece .Decode (_dbed ._bgbcd );if _fcbad !=nil {return _fcbad ;};if _geccg < 32{if _geccg > 0{_aadbc =append (_aadbc ,_fc .NewCode (int32 (_geccg ),0,int32 (_bbfd ),false ));};_ddbc =_geccg ;_bbfd ++;}else {var _degca ,_adde int64 ;switch _geccg {case 32:_beade ,_fcbad =_dbed ._bgbcd .ReadBits (2);if _fcbad !=nil {return _fcbad ;};_degca =3+int64 (_beade );if _bbfd > 0{_adde =_ddbc ;};case 33:_beade ,_fcbad =_dbed ._bgbcd .ReadBits (3);if _fcbad !=nil {return _fcbad ;};_degca =3+int64 (_beade );case 34:_beade ,_fcbad =_dbed ._bgbcd .ReadBits (7);if _fcbad !=nil {return _fcbad ;};_degca =11+int64 (_beade );};for _bcfe :=0;_bcfe < int (_degca );_bcfe ++{if _adde > 0{_aadbc =append (_aadbc ,_fc .NewCode (int32 (_adde ),0,int32 (_bbfd ),false ));};_bbfd ++;};};};_dbed ._bgbcd .Align ();_dbed ._feda ,_fcbad =_fc .NewFixedSizeTable (_aadbc );return _fcbad ;};func (_affac *SymbolDictionary )readAtPixels (_ffda int )error {_affac .SdATX =make ([]int8 ,_ffda );_affac .SdATY =make ([]int8 ,_ffda );var (_fgeg byte ;_cfbcc error ;);for _cgeae :=0;_cgeae < _ffda ;_cgeae ++{_fgeg ,_cfbcc =_affac ._gfgg .ReadByte ();if _cfbcc !=nil {return _cfbcc ;};_affac .SdATX [_cgeae ]=int8 (_fgeg );_fgeg ,_cfbcc =_affac ._gfgg .ReadByte ();if _cfbcc !=nil {return _cfbcc ;};_affac .SdATY [_cgeae ]=int8 (_fgeg );};return nil ;};func (_ccaa *TextRegion )encodeSymbols (_eecb _e .BinaryWriter )(_ccadb int ,_adg error ){const _eggfc ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";_abae :=make ([]byte ,4);_ag .BigEndian .PutUint32 (_abae ,_ccaa .NumberOfSymbols );if _ccadb ,_adg =_eecb .Write (_abae );_adg !=nil {return _ccadb ,_fg .Wrap (_adg ,_eggfc ,"\u004e\u0075\u006dbe\u0072\u004f\u0066\u0053\u0079\u006d\u0062\u006f\u006c\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073");};_bffg ,_adg :=_ad .NewClassedPoints (_ccaa ._beaff ,_ac .IntSlice (_ccaa ._bgec ));if _adg !=nil {return 0,_fg .Wrap (_adg ,_eggfc ,"");};var _daed ,_gacfc int ;_afdb :=_de .New ();_afdb .Init ();if _adg =_afdb .EncodeInteger (_de .IADT ,0);_adg !=nil {return _ccadb ,_fg .Wrap (_adg ,_eggfc ,"\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0020\u0044\u0054");};_eddbg ,_adg :=_bffg .GroupByY ();if _adg !=nil {return 0,_fg .Wrap (_adg ,_eggfc ,"");};for _ ,_fceg :=range _eddbg {_bfda :=int (_fceg .YAtIndex (0));_gdfgd :=_bfda -_daed ;if _adg =_afdb .EncodeInteger (_de .IADT ,_gdfgd );_adg !=nil {return _ccadb ,_fg .Wrap (_adg ,_eggfc ,"");};var _gcaa int ;for _gfgf ,_bgfa :=range _fceg .IntSlice {switch _gfgf {case 0:_eggdb :=int (_fceg .XAtIndex (_gfgf ))-_gacfc ;if _adg =_afdb .EncodeInteger (_de .IAFS ,_eggdb );_adg !=nil {return _ccadb ,_fg .Wrap (_adg ,_eggfc ,"");};_gacfc +=_eggdb ;_gcaa =_gacfc ;default:_acgae :=int (_fceg .XAtIndex (_gfgf ))-_gcaa ;if _adg =_afdb .EncodeInteger (_de .IADS ,_acgae );_adg !=nil {return _ccadb ,_fg .Wrap (_adg ,_eggfc ,"");};_gcaa +=_acgae ;};_caeea ,_abff :=_ccaa ._decaea .Get (_bgfa );if _abff !=nil {return _ccadb ,_fg .Wrap (_abff ,_eggfc ,"");};_gaee ,_dgadb :=_ccaa ._fdggd [_caeea ];if !_dgadb {_gaee ,_dgadb =_ccaa ._ececc [_caeea ];if !_dgadb {return _ccadb ,_fg .Errorf (_eggfc ,"\u0053\u0079\u006d\u006f\u0062\u006c:\u0020\u0027\u0025d\u0027\u0020\u0069s\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064 \u0069\u006e\u0020\u0067\u006cob\u0061\u006c\u0020\u0061\u006e\u0064\u0020\u006c\u006f\u0063\u0061\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020\u006d\u0061\u0070",_caeea );};};if _abff =_afdb .EncodeIAID (_ccaa ._dfcfc ,_gaee );_abff !=nil {return _ccadb ,_fg .Wrap (_abff ,_eggfc ,"");};};if _adg =_afdb .EncodeOOB (_de .IADS );_adg !=nil {return _ccadb ,_fg .Wrap (_adg ,_eggfc ,"");};};_afdb .Final ();_egfe ,_adg :=_afdb .WriteTo (_eecb );if _adg !=nil {return _ccadb ,_fg .Wrap (_adg ,_eggfc ,"");};_ccadb +=int (_egfe );return _ccadb ,nil ;};func (_bcec *Header )readSegmentDataLength (_afcc _e .StreamReader )(_gdgb error ){_bcec .SegmentDataLength ,_gdgb =_afcc .ReadBits (32);if _gdgb !=nil {return _gdgb ;};_bcec .SegmentDataLength &=_c .MaxInt32 ;return nil ;};func (_cbac *PageInformationSegment )readContainsRefinement ()error {_gcdb ,_aeec :=_cbac ._cgbc .ReadBit ();if _aeec !=nil {return _aeec ;};if _gcdb ==1{_cbac ._ecdc =true ;};return nil ;};type Pager interface{GetSegment (int )(*Header ,error );GetBitmap ()(*_ad .Bitmap ,error );};func (_aeag *TextRegion )InitEncode (globalSymbolsMap ,localSymbolsMap map[int ]int ,comps []int ,inLL *_ad .Points ,symbols *_ad .Bitmaps ,classIDs *_ac .IntSlice ,boxes *_ad .Boxes ,width ,height ,symbits int ){_aeag .RegionInfo =&RegionSegment {BitmapWidth :uint32 (width ),BitmapHeight :uint32 (height )};_aeag ._fdggd =globalSymbolsMap ;_aeag ._ececc =localSymbolsMap ;_aeag ._bgec =comps ;_aeag ._beaff =inLL ;_aeag ._adfc =symbols ;_aeag ._decaea =classIDs ;_aeag ._egcd =boxes ;_aeag ._dfcfc =symbits ;};func (_cd *GenericRefinementRegion )parseHeader ()(_ege error ){_ff .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0048e\u0061\u0064e\u0072\u002e\u002e\u002e");_abb :=_g .Now ();defer func (){if _ege ==nil {_ff .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045G\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020h\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0069\u006e\u0069\u0073\u0068id\u0020\u0069\u006e\u003a\u0020\u0025\u0064\u0020\u006e\u0073",_g .Since (_abb ).Nanoseconds ());}else {_ff .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0068\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0073",_ege );};}();if _ege =_cd .RegionInfo .parseHeader ();_ege !=nil {return _ege ;};_ ,_ege =_cd ._ffc .ReadBits (6);if _ege !=nil {return _ege ;};_cd .IsTPGROn ,_ege =_cd ._ffc .ReadBool ();if _ege !=nil {return _ege ;};var _cfa int ;_cfa ,_ege =_cd ._ffc .ReadBit ();if _ege !=nil {return _ege ;};_cd .TemplateID =int8 (_cfa );switch _cd .TemplateID {case 0:_cd .Template =_cd ._adf ;if _ege =_cd .readAtPixels ();_ege !=nil {return ;};case 1:_cd .Template =_cd ._ada ;};return nil ;};func (_ccb *GenericRefinementRegion )decodeTypicalPredictedLineTemplate1 (_efd ,_fa ,_cg ,_aed ,_da ,_eda ,_eae ,_caf ,_ddf int )(_bea error ){var (_eag ,_aedf int ;_edae ,_fea int ;_cge ,_gcb int ;_eee byte ;);if _efd > 0{_eee ,_bea =_ccb .RegionBitmap .GetByte (_eae -_cg );if _bea !=nil {return ;};_edae =int (_eee );};if _caf > 0&&_caf <=_ccb .ReferenceBitmap .Height {_eee ,_bea =_ccb .ReferenceBitmap .GetByte (_ddf -_aed +_eda );if _bea !=nil {return ;};_fea =int (_eee )<<2;};if _caf >=0&&_caf < _ccb .ReferenceBitmap .Height {_eee ,_bea =_ccb .ReferenceBitmap .GetByte (_ddf +_eda );if _bea !=nil {return ;};_cge =int (_eee );};if _caf > -2&&_caf < _ccb .ReferenceBitmap .Height -1{_eee ,_bea =_ccb .ReferenceBitmap .GetByte (_ddf +_aed +_eda );if _bea !=nil {return ;};_gcb =int (_eee );};_eag =((_edae >>5)&0x6)|((_gcb >>2)&0x30)|(_cge &0xc0)|(_fea &0x200);_aedf =((_gcb >>2)&0x70)|(_cge &0xc0)|(_fea &0x700);var _gfd int ;for _dbe :=0;_dbe < _da ;_dbe =_gfd {var (_fad int ;_abad int ;);_gfd =_dbe +8;if _fad =_fa -_dbe ;_fad > 8{_fad =8;};_fffb :=_gfd < _fa ;_ebd :=_gfd < _ccb .ReferenceBitmap .Width ;_eddf :=_eda +1;if _efd > 0{_eee =0;if _fffb {_eee ,_bea =_ccb .RegionBitmap .GetByte (_eae -_cg +1);if _bea !=nil {return ;};};_edae =(_edae <<8)|int (_eee );};if _caf > 0&&_caf <=_ccb .ReferenceBitmap .Height {var _ffd int ;if _ebd {_eee ,_bea =_ccb .ReferenceBitmap .GetByte (_ddf -_aed +_eddf );if _bea !=nil {return ;};_ffd =int (_eee )<<2;};_fea =(_fea <<8)|_ffd ;};if _caf >=0&&_caf < _ccb .ReferenceBitmap .Height {_eee =0;if _ebd {_eee ,_bea =_ccb .ReferenceBitmap .GetByte (_ddf +_eddf );if _bea !=nil {return ;};};_cge =(_cge <<8)|int (_eee );};if _caf > -2&&_caf < (_ccb .ReferenceBitmap .Height -1){_eee =0;if _ebd {_eee ,_bea =_ccb .ReferenceBitmap .GetByte (_ddf +_aed +_eddf );if _bea !=nil {return ;};};_gcb =(_gcb <<8)|int (_eee );};for _cef :=0;_cef < _fad ;_cef ++{var _dad int ;_daa :=(_aedf >>4)&0x1ff;switch _daa {case 0x1ff:_dad =1;case 0x00:_dad =0;default:_ccb ._ga .SetIndex (int32 (_eag ));_dad ,_bea =_ccb ._ab .DecodeBit (_ccb ._ga );if _bea !=nil {return ;};};_bce :=uint (7-_cef );_abad |=int (_dad <<_bce );_eag =((_eag &0x0d6)<<1)|_dad |(_edae >>_bce +5)&0x002|((_gcb >>_bce +2)&0x010)|((_cge >>_bce )&0x040)|((_fea >>_bce )&0x200);_aedf =((_aedf &0xdb)<<1)|((_gcb >>_bce +2)&0x010)|((_cge >>_bce )&0x080)|((_fea >>_bce )&0x400);};_bea =_ccb .RegionBitmap .SetByte (_eae ,byte (_abad ));if _bea !=nil {return ;};_eae ++;_ddf ++;};return nil ;};func (_ecfb *PatternDictionary )parseHeader ()error {_ff .Log .Trace ("\u005b\u0050\u0041\u0054\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054I\u004f\u004e\u0041\u0052\u0059\u005d[\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d\u0020b\u0065\u0067\u0069\u006e");defer func (){_ff .Log .Trace ("\u005b\u0050\u0041T\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u005b\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");}();_ ,_efdg :=_ecfb ._abbe .ReadBits (5);if _efdg !=nil {return _efdg ;};if _efdg =_ecfb .readTemplate ();_efdg !=nil {return _efdg ;};if _efdg =_ecfb .readIsMMREncoded ();_efdg !=nil {return _efdg ;};if _efdg =_ecfb .readPatternWidthAndHeight ();_efdg !=nil {return _efdg ;};if _efdg =_ecfb .readGrayMax ();_efdg !=nil {return _efdg ;};if _efdg =_ecfb .computeSegmentDataStructure ();_efdg !=nil {return _efdg ;};return _ecfb .checkInput ();};func (_bfc *GenericRegion )decodeLine (_dab ,_fee ,_fge int )error {const _dae ="\u0064\u0065\u0063\u006f\u0064\u0065\u004c\u0069\u006e\u0065";_fbcc :=_bfc .Bitmap .GetByteIndex (0,_dab );_bbe :=_fbcc -_bfc .Bitmap .RowStride ;switch _bfc .GBTemplate {case 0:if !_bfc .UseExtTemplates {return _bfc .decodeTemplate0a (_dab ,_fee ,_fge ,_fbcc ,_bbe );};return _bfc .decodeTemplate0b (_dab ,_fee ,_fge ,_fbcc ,_bbe );case 1:return _bfc .decodeTemplate1 (_dab ,_fee ,_fge ,_fbcc ,_bbe );case 2:return _bfc .decodeTemplate2 (_dab ,_fee ,_fge ,_fbcc ,_bbe );case 3:return _bfc .decodeTemplate3 (_dab ,_fee ,_fge ,_fbcc ,_bbe );};return _fg .Errorf (_dae ,"\u0069\u006e\u0076a\u006c\u0069\u0064\u0020G\u0042\u0054\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u003a\u0020\u0025\u0064",_bfc .GBTemplate );};func (_dga *EndOfStripe )Init (h *Header ,r _e .StreamReader )error {_dga ._aca =r ;return _dga .parseHeader (h ,r );};func (_dbfd *SymbolDictionary )setRefinementAtPixels ()error {if !_dbfd .UseRefinementAggregation ||_dbfd .SdrTemplate !=0{return nil ;};if _ebfc :=_dbfd .readRefinementAtPixels (2);_ebfc !=nil {return _ebfc ;};return nil ;};func (_dfd *GenericRegion )writeGBAtPixels (_bgab _e .BinaryWriter )(_daff int ,_eeac error ){const _bgff ="\u0077r\u0069t\u0065\u0047\u0042\u0041\u0074\u0050\u0069\u0078\u0065\u006c\u0073";if _dfd .UseMMR {return 0,nil ;};_cefe :=1;if _dfd .GBTemplate ==0{_cefe =4;}else if _dfd .UseExtTemplates {_cefe =12;};if len (_dfd .GBAtX )!=_cefe {return 0,_fg .Errorf (_bgff ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0058\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");};if len (_dfd .GBAtY )!=_cefe {return 0,_fg .Errorf (_bgff ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0059\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");};for _bdd :=0;_bdd < _cefe ;_bdd ++{if _eeac =_bgab .WriteByte (byte (_dfd .GBAtX [_bdd ]));_eeac !=nil {return _daff ,_fg .Wrap (_eeac ,_bgff ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0058");};_daff ++;if _eeac =_bgab .WriteByte (byte (_dfd .GBAtY [_bdd ]));_eeac !=nil {return _daff ,_fg .Wrap (_eeac ,_bgff ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0059");};_daff ++;};return _daff ,nil ;};func (_fbbe *TextRegion )getSymbols ()error {if _fbbe .Header .RTSegments !=nil {return _fbbe .initSymbols ();};return nil ;};func (_ffcg *HalftoneRegion )computeY (_edf ,_ddca int )int {return _ffcg .shiftAndFill (int (_ffcg .HGridY )+_edf *int (_ffcg .HRegionX )-_ddca *int (_ffcg .HRegionY ));};type Header struct{SegmentNumber uint32 ;Type Type ;RetainFlag bool ;PageAssociation int ;PageAssociationFieldSize bool ;RTSegments []*Header ;HeaderLength int64 ;SegmentDataLength uint64 ;SegmentDataStartOffset uint64 ;Reader _e .StreamReader ;SegmentData Segmenter ;RTSNumbers []int ;RetainBits []uint8 ;};func (_gcbed *TextRegion )decodeRdh ()(int64 ,error ){const _eaddg ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064h";if _gcbed .IsHuffmanEncoded {if _gcbed .SbHuffRDHeight ==3{if _gcbed ._gge ==nil {var (_cdeg int ;_ddcfg error ;);if _gcbed .SbHuffFS ==3{_cdeg ++;};if _gcbed .SbHuffDS ==3{_cdeg ++;};if _gcbed .SbHuffDT ==3{_cdeg ++;};if _gcbed .SbHuffRDWidth ==3{_cdeg ++;};_gcbed ._gge ,_ddcfg =_gcbed .getUserTable (_cdeg );if _ddcfg !=nil {return 0,_fg .Wrap (_ddcfg ,_eaddg ,"");};};return _gcbed ._gge .Decode (_gcbed ._bgbcd );};_fcfe ,_cbga :=_fc .GetStandardTable (14+int (_gcbed .SbHuffRDHeight ));if _cbga !=nil {return 0,_fg .Wrap (_cbga ,_eaddg ,"");};return _fcfe .Decode (_gcbed ._bgbcd );};_fafg ,_gefb :=_gcbed ._gbfa .DecodeInt (_gcbed ._eege );if _gefb !=nil {return 0,_fg .Wrap (_gefb ,_eaddg ,"");};return int64 (_fafg ),nil ;};func (_fcgc *GenericRegion )String ()string {_fbb :=&_f .Builder {};_fbb .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_fbb .WriteString (_fcgc .RegionSegment .String ()+"\u000a");_fbb .WriteString (_ce .Sprintf ("\u0009\u002d\u0020Us\u0065\u0045\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_fcgc .UseExtTemplates ));_fbb .WriteString (_ce .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0044\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_fcgc .IsTPGDon ));_fbb .WriteString (_ce .Sprintf ("\u0009-\u0020G\u0042\u0054\u0065\u006d\u0070l\u0061\u0074e\u003a\u0020\u0025\u0064\u000a",_fcgc .GBTemplate ));_fbb .WriteString (_ce .Sprintf ("\t\u002d \u0049\u0073\u004d\u004d\u0052\u0045\u006e\u0063o\u0064\u0065\u0064\u003a %\u0076\u000a",_fcgc .IsMMREncoded ));_fbb .WriteString (_ce .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_fcgc .GBAtX ));_fbb .WriteString (_ce .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_fcgc .GBAtY ));_fbb .WriteString (_ce .Sprintf ("\t\u002d \u0047\u0042\u0041\u0074\u004f\u0076\u0065\u0072r\u0069\u0064\u0065\u003a %\u0076\u000a",_fcgc .GBAtOverride ));return _fbb .String ();};func (_gebfg *TableSegment )HtHigh ()int32 {return _gebfg ._aggd };func (_ggdd *GenericRefinementRegion )overrideAtTemplate0 (_efe ,_add ,_ddgg ,_ggdb ,_abgf int )int {if _ggdd ._cc [0]{_efe &=0xfff7;if _ggdd .GrAtY [0]==0&&int (_ggdd .GrAtX [0])>=-_abgf {_efe |=(_ggdb >>uint (7-(_abgf +int (_ggdd .GrAtX [0])))&0x1)<<3;}else {_efe |=_ggdd .getPixel (_ggdd .RegionBitmap ,_add +int (_ggdd .GrAtX [0]),_ddgg +int (_ggdd .GrAtY [0]))<<3;};};if _ggdd ._cc [1]{_efe &=0xefff;if _ggdd .GrAtY [1]==0&&int (_ggdd .GrAtX [1])>=-_abgf {_efe |=(_ggdb >>uint (7-(_abgf +int (_ggdd .GrAtX [1])))&0x1)<<12;}else {_efe |=_ggdd .getPixel (_ggdd .ReferenceBitmap ,_add +int (_ggdd .GrAtX [1]),_ddgg +int (_ggdd .GrAtY [1]));};};return _efe ;};func (_cbd *GenericRefinementRegion )getPixel (_cfgd *_ad .Bitmap ,_caa ,_efdd int )int {if _caa < 0||_caa >=_cfgd .Width {return 0;};if _efdd < 0||_efdd >=_cfgd .Height {return 0;};if _cfgd .GetPixel (_caa ,_efdd ){return 1;};return 0;};func (_bcd *SymbolDictionary )encodeRefinementATFlags (_cgag _e .BinaryWriter )(_gcea int ,_gbee error ){const _bebf ="\u0065\u006e\u0063od\u0065\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0041\u0054\u0046\u006c\u0061\u0067\u0073";if !_bcd .UseRefinementAggregation ||_bcd .SdrTemplate !=0{return 0,nil ;};for _fdbdf :=0;_fdbdf < 2;_fdbdf ++{if _gbee =_cgag .WriteByte (byte (_bcd .SdrATX [_fdbdf ]));_gbee !=nil {return _gcea ,_fg .Wrapf (_gbee ,_bebf ,"\u0053\u0064\u0072\u0041\u0054\u0058\u005b\u0025\u0064\u005d",_fdbdf );};_gcea ++;if _gbee =_cgag .WriteByte (byte (_bcd .SdrATY [_fdbdf ]));_gbee !=nil {return _gcea ,_fg .Wrapf (_gbee ,_bebf ,"\u0053\u0064\u0072\u0041\u0054\u0059\u005b\u0025\u0064\u005d",_fdbdf );};_gcea ++;};return _gcea ,nil ;};func (_bfef *Header )parse (_eead Documenter ,_cgfb _e .StreamReader ,_dcae int64 ,_becf OrganizationType )(_ffg error ){const _cgfa ="\u0070\u0061\u0072s\u0065";_ff .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u005b\u0050A\u0052\u0053\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _ffg !=nil {_ff .Log .Trace ("\u005b\u0053\u0045GM\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045R\u005d[\u0050A\u0052S\u0045\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_ffg );}else {_ff .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052]\u005bP\u0041\u0052\u0053\u0045\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");};}();_ ,_ffg =_cgfb .Seek (_dcae ,_a .SeekStart );if _ffg !=nil {return _fg .Wrap (_ffg ,_cgfa ,"\u0073\u0065\u0065\u006b\u0020\u0073\u0074\u0061\u0072\u0074");};if _ffg =_bfef .readSegmentNumber (_cgfb );_ffg !=nil {return _fg .Wrap (_ffg ,_cgfa ,"");};if _ffg =_bfef .readHeaderFlags ();_ffg !=nil {return _fg .Wrap (_ffg ,_cgfa ,"");};var _aad uint64 ;_aad ,_ffg =_bfef .readNumberOfReferredToSegments (_cgfb );if _ffg !=nil {return _fg .Wrap (_ffg ,_cgfa ,"");};_bfef .RTSNumbers ,_ffg =_bfef .readReferredToSegmentNumbers (_cgfb ,int (_aad ));if _ffg !=nil {return _fg .Wrap (_ffg ,_cgfa ,"");};_ffg =_bfef .readSegmentPageAssociation (_eead ,_cgfb ,_aad ,_bfef .RTSNumbers ...);if _ffg !=nil {return _fg .Wrap (_ffg ,_cgfa ,"");};if _bfef .Type !=TEndOfFile {if _ffg =_bfef .readSegmentDataLength (_cgfb );_ffg !=nil {return _fg .Wrap (_ffg ,_cgfa ,"");};};_bfef .readDataStartOffset (_cgfb ,_becf );_bfef .readHeaderLength (_cgfb ,_dcae );_ff .Log .Trace ("\u0025\u0073",_bfef );return nil ;};func (_caabf *HalftoneRegion )shiftAndFill (_baef int )int {_baef >>=8;if _baef < 0{_dgfg :=int (_c .Log (float64 (_efgg (_baef )))/_c .Log (2));_aegbg :=31-_dgfg ;for _fbca :=1;_fbca < _aegbg ;_fbca ++{_baef |=1<<uint (31-_fbca );};};return _baef ;};func NewHeader (d Documenter ,r _e .StreamReader ,offset int64 ,organizationType OrganizationType )(*Header ,error ){_cdeb :=&Header {Reader :r };if _cefb :=_cdeb .parse (d ,r ,offset ,organizationType );_cefb !=nil {return nil ,_fg .Wrap (_cefb ,"\u004ee\u0077\u0048\u0065\u0061\u0064\u0065r","");};return _cdeb ,nil ;};func (_faca *SymbolDictionary )readRegionFlags ()error {var (_gddc uint64 ;_gedfe int ;);_ ,_ddgc :=_faca ._gfgg .ReadBits (3);if _ddgc !=nil {return _ddgc ;};_gedfe ,_ddgc =_faca ._gfgg .ReadBit ();if _ddgc !=nil {return _ddgc ;};_faca .SdrTemplate =int8 (_gedfe );_gddc ,_ddgc =_faca ._gfgg .ReadBits (2);if _ddgc !=nil {return _ddgc ;};_faca .SdTemplate =int8 (_gddc &0xf);_gedfe ,_ddgc =_faca ._gfgg .ReadBit ();if _ddgc !=nil {return _ddgc ;};if _gedfe ==1{_faca ._cafa =true ;};_gedfe ,_ddgc =_faca ._gfgg .ReadBit ();if _ddgc !=nil {return _ddgc ;};if _gedfe ==1{_faca ._fgfb =true ;};_gedfe ,_ddgc =_faca ._gfgg .ReadBit ();if _ddgc !=nil {return _ddgc ;};if _gedfe ==1{_faca .SdHuffAggInstanceSelection =true ;};_gedfe ,_ddgc =_faca ._gfgg .ReadBit ();if _ddgc !=nil {return _ddgc ;};_faca .SdHuffBMSizeSelection =int8 (_gedfe );_gddc ,_ddgc =_faca ._gfgg .ReadBits (2);if _ddgc !=nil {return _ddgc ;};_faca .SdHuffDecodeWidthSelection =int8 (_gddc &0xf);_gddc ,_ddgc =_faca ._gfgg .ReadBits (2);if _ddgc !=nil {return _ddgc ;};_faca .SdHuffDecodeHeightSelection =int8 (_gddc &0xf);_gedfe ,_ddgc =_faca ._gfgg .ReadBit ();if _ddgc !=nil {return _ddgc ;};if _gedfe ==1{_faca .UseRefinementAggregation =true ;};_gedfe ,_ddgc =_faca ._gfgg .ReadBit ();if _ddgc !=nil {return _ddgc ;};if _gedfe ==1{_faca .IsHuffmanEncoded =true ;};return nil ;};var (_ Regioner =&TextRegion {};_ Segmenter =&TextRegion {};);func (_dcgd *GenericRegion )parseHeader ()(_cdg error ){_ff .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052I\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0050\u0061\u0072s\u0069\u006e\u0067\u0048\u0065\u0061\u0064e\u0072\u002e\u002e\u002e");defer func (){if _cdg !=nil {_ff .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e]\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065r\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0077\u0069th\u0020\u0065\u0072\u0072\u006f\u0072\u002e\u0020\u0025\u0076",_cdg );}else {_ff .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049C\u002d\u0052\u0045G\u0049\u004f\u004e]\u0020\u0050a\u0072\u0073\u0069\u006e\u0067\u0048e\u0061de\u0072\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0053\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079\u002e\u002e\u002e");};}();var (_agd int ;_ggdba uint64 ;);if _cdg =_dcgd .RegionSegment .parseHeader ();_cdg !=nil {return _cdg ;};if _ ,_cdg =_dcgd ._efa .ReadBits (3);_cdg !=nil {return _cdg ;};_agd ,_cdg =_dcgd ._efa .ReadBit ();if _cdg !=nil {return _cdg ;};if _agd ==1{_dcgd .UseExtTemplates =true ;};_agd ,_cdg =_dcgd ._efa .ReadBit ();if _cdg !=nil {return _cdg ;};if _agd ==1{_dcgd .IsTPGDon =true ;};_ggdba ,_cdg =_dcgd ._efa .ReadBits (2);if _cdg !=nil {return _cdg ;};_dcgd .GBTemplate =byte (_ggdba &0xf);_agd ,_cdg =_dcgd ._efa .ReadBit ();if _cdg !=nil {return _cdg ;};if _agd ==1{_dcgd .IsMMREncoded =true ;};if !_dcgd .IsMMREncoded {_eceg :=1;if _dcgd .GBTemplate ==0{_eceg =4;if _dcgd .UseExtTemplates {_eceg =12;};};if _cdg =_dcgd .readGBAtPixels (_eceg );_cdg !=nil {return _cdg ;};};if _cdg =_dcgd .computeSegmentDataStructure ();_cdg !=nil {return _cdg ;};_ff .Log .Trace ("\u0025\u0073",_dcgd );return nil ;};func (_aaf *Header )referenceSize ()uint {switch {case _aaf .SegmentNumber <=255:return 1;case _aaf .SegmentNumber <=65535:return 2;default:return 4;};};func (_caad *HalftoneRegion )computeSegmentDataStructure ()error {_caad .DataOffset =_caad ._ecee .StreamPosition ();_caad .DataHeaderLength =_caad .DataOffset -_caad .DataHeaderOffset ;_caad .DataLength =int64 (_caad ._ecee .Length ())-_caad .DataHeaderLength ;return nil ;};func (_dfbe *TextRegion )Encode (w _e .BinaryWriter )(_gagc int ,_fcaf error ){const _bbgf ="\u0054\u0065\u0078\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u002e\u0045n\u0063\u006f\u0064\u0065";if _gagc ,_fcaf =_dfbe .RegionInfo .Encode (w );_fcaf !=nil {return _gagc ,_fg .Wrap (_fcaf ,_bbgf ,"");};var _ccec int ;if _ccec ,_fcaf =_dfbe .encodeFlags (w );_fcaf !=nil {return _gagc ,_fg .Wrap (_fcaf ,_bbgf ,"");};_gagc +=_ccec ;if _ccec ,_fcaf =_dfbe .encodeSymbols (w );_fcaf !=nil {return _gagc ,_fg .Wrap (_fcaf ,_bbgf ,"");};_gagc +=_ccec ;return _gagc ,nil ;};func (_ebf *SymbolDictionary )decodeAggregate (_dead ,_dffb uint32 )error {var (_egfd int64 ;_feae error ;);if _ebf .IsHuffmanEncoded {_egfd ,_feae =_ebf .huffDecodeRefAggNInst ();if _feae !=nil {return _feae ;};}else {_bfee ,_eaec :=_ebf ._acdaf .DecodeInt (_ebf ._dgag );if _eaec !=nil {return _eaec ;};_egfd =int64 (_bfee );};if _egfd > 1{return _ebf .decodeThroughTextRegion (_dead ,_dffb ,uint32 (_egfd ));}else if _egfd ==1{return _ebf .decodeRefinedSymbol (_dead ,_dffb );};return nil ;};type RegionSegment struct{_efde _e .StreamReader ;BitmapWidth uint32 ;BitmapHeight uint32 ;XLocation uint32 ;YLocation uint32 ;CombinaionOperator _ad .CombinationOperator ;};func (_agf *GenericRegion )readGBAtPixels (_fcac int )error {const _cdfd ="\u0072\u0065\u0061\u0064\u0047\u0042\u0041\u0074\u0050i\u0078\u0065\u006c\u0073";_agf .GBAtX =make ([]int8 ,_fcac );_agf .GBAtY =make ([]int8 ,_fcac );for _bbga :=0;_bbga < _fcac ;_bbga ++{_ebe ,_ebcb :=_agf ._efa .ReadByte ();if _ebcb !=nil {return _fg .Wrapf (_ebcb ,_cdfd ,"\u0058\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_bbga );};_agf .GBAtX [_bbga ]=int8 (_ebe );_ebe ,_ebcb =_agf ._efa .ReadByte ();if _ebcb !=nil {return _fg .Wrapf (_ebcb ,_cdfd ,"\u0059\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_bbga );};_agf .GBAtY [_bbga ]=int8 (_ebe );};return nil ;};type templater interface{form (_bfae ,_cafg ,_abfe ,_ba ,_cac int16 )int16 ;setIndex (_cab *_agc .DecoderStats );};func (_eddfe *PageInformationSegment )readMaxStripeSize ()error {_abeb ,_fedd :=_eddfe ._cgbc .ReadBits (15);if _fedd !=nil {return _fedd ;};_eddfe .MaxStripeSize =uint16 (_abeb &_c .MaxUint16 );return nil ;};func (_dfg *PageInformationSegment )readWidthAndHeight ()error {_cadb ,_bbcf :=_dfg ._cgbc .ReadBits (32);if _bbcf !=nil {return _bbcf ;};_dfg .PageBMWidth =int (_cadb &_c .MaxInt32 );_cadb ,_bbcf =_dfg ._cgbc .ReadBits (32);if _bbcf !=nil {return _bbcf ;};_dfg .PageBMHeight =int (_cadb &_c .MaxInt32 );return nil ;};func (_dacea *SymbolDictionary )getToExportFlags ()([]int ,error ){var (_dccc int ;_baacb int32 ;_fdccc error ;_afccb =int32 (_dacea ._ebbe +_dacea .NumberOfNewSymbols );_cbdde =make ([]int ,_afccb ););for _eacc :=int32 (0);_eacc < _afccb ;_eacc +=_baacb {if _dacea .IsHuffmanEncoded {_daef ,_gbbbb :=_fc .GetStandardTable (1);if _gbbbb !=nil {return nil ,_gbbbb ;};_eggf ,_gbbbb :=_daef .Decode (_dacea ._gfgg );if _gbbbb !=nil {return nil ,_gbbbb ;};_baacb =int32 (_eggf );}else {_baacb ,_fdccc =_dacea ._acdaf .DecodeInt (_dacea ._gcddb );if _fdccc !=nil {return nil ,_fdccc ;};};if _baacb !=0{for _geba :=_eacc ;_geba < _eacc +_baacb ;_geba ++{_cbdde [_geba ]=_dccc ;};};if _dccc ==0{_dccc =1;}else {_dccc =0;};};return _cbdde ,nil ;};func (_dfdc *SymbolDictionary )String ()string {_aegae :=&_f .Builder {};_aegae .WriteString ("\n\u005b\u0053\u0059\u004dBO\u004c-\u0044\u0049\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u000a");_aegae .WriteString (_ce .Sprintf ("\u0009-\u0020S\u0064\u0072\u0054\u0065\u006dp\u006c\u0061t\u0065\u0020\u0025\u0076\u000a",_dfdc .SdrTemplate ));_aegae .WriteString (_ce .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0025\u0076\u000a",_dfdc .SdTemplate ));_aegae .WriteString (_ce .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006eg\u0043\u006f\u006e\u0074\u0065\u0078\u0074R\u0065\u0074\u0061\u0069\u006e\u0065\u0064\u0020\u0025\u0076\u000a",_dfdc ._cafa ));_aegae .WriteString (_ce .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074\u0065\u0078\u0074\u0055\u0073\u0065\u0064 \u0025\u0076\u000a",_dfdc ._fgfb ));_aegae .WriteString (_ce .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_dfdc .SdHuffAggInstanceSelection ));_aegae .WriteString (_ce .Sprintf ("\u0009\u002d\u0020\u0053d\u0048\u0075\u0066\u0066\u0042\u004d\u0053\u0069\u007a\u0065S\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020%\u0076\u000a",_dfdc .SdHuffBMSizeSelection ));_aegae .WriteString (_ce .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_dfdc .SdHuffDecodeWidthSelection ));_aegae .WriteString (_ce .Sprintf ("\u0009\u002d\u0020Sd\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064e\u0048e\u0069g\u0068t\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_dfdc .SdHuffDecodeHeightSelection ));_aegae .WriteString (_ce .Sprintf ("\u0009\u002d\u0020U\u0073\u0065\u0052\u0065f\u0069\u006e\u0065\u006d\u0065\u006e\u0074A\u0067\u0067\u0072\u0065\u0067\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_dfdc .UseRefinementAggregation ));_aegae .WriteString (_ce .Sprintf ("\u0009\u002d\u0020is\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045\u006e\u0063\u006f\u0064\u0065\u0064\u0020\u0025\u0076\u000a",_dfdc .IsHuffmanEncoded ));_aegae .WriteString (_ce .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_dfdc .SdATX ));_aegae .WriteString (_ce .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_dfdc .SdATY ));_aegae .WriteString (_ce .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_dfdc .SdrATX ));_aegae .WriteString (_ce .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_dfdc .SdrATY ));_aegae .WriteString (_ce .Sprintf ("\u0009\u002d\u0020\u004e\u0075\u006d\u0062\u0065\u0072\u004ff\u0045\u0078\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_dfdc .NumberOfExportedSymbols ));_aegae .WriteString (_ce .Sprintf ("\u0009-\u0020\u004e\u0075\u006db\u0065\u0072\u004f\u0066\u004ee\u0077S\u0079m\u0062\u006f\u006c\u0073\u0020\u0025\u0076\n",_dfdc .NumberOfNewSymbols ));_aegae .WriteString (_ce .Sprintf ("\u0009\u002d\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u004ff\u0049\u006d\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_dfdc ._ebbe ));_aegae .WriteString (_ce .Sprintf ("\u0009\u002d \u006e\u0075\u006d\u0062\u0065\u0072\u004f\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0064\u0053\u0079\u006d\u0062\u006f\u006c\u0073 %\u0076\u000a",_dfdc ._bdc ));return _aegae .String ();};func (_cbeb *RegionSegment )String ()string {_dabcae :=&_f .Builder {};_dabcae .WriteString ("\u0009[\u0052E\u0047\u0049\u004f\u004e\u0020S\u0045\u0047M\u0045\u004e\u0054\u005d\u000a");_dabcae .WriteString (_ce .Sprintf ("\t\u0009\u002d\u0020\u0042\u0069\u0074m\u0061\u0070\u0020\u0028\u0077\u0069d\u0074\u0068\u002c\u0020\u0068\u0065\u0069g\u0068\u0074\u0029\u0020\u005b\u0025\u0064\u0078\u0025\u0064]\u000a",_cbeb .BitmapWidth ,_cbeb .BitmapHeight ));_dabcae .WriteString (_ce .Sprintf ("\u0009\u0009\u002d\u0020L\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0028\u0078,\u0079)\u003a\u0020\u005b\u0025\u0064\u002c\u0025d\u005d\u000a",_cbeb .XLocation ,_cbeb .YLocation ));_dabcae .WriteString (_ce .Sprintf ("\t\u0009\u002d\u0020\u0043\u006f\u006db\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070e\u0072\u0061\u0074o\u0072:\u0020\u0025\u0073",_cbeb .CombinaionOperator ));return _dabcae .String ();};const (TSymbolDictionary Type =0;TIntermediateTextRegion Type =4;TImmediateTextRegion Type =6;TImmediateLosslessTextRegion Type =7;TPatternDictionary Type =16;TIntermediateHalftoneRegion Type =20;TImmediateHalftoneRegion Type =22;TImmediateLosslessHalftoneRegion Type =23;TIntermediateGenericRegion Type =36;TImmediateGenericRegion Type =38;TImmediateLosslessGenericRegion Type =39;TIntermediateGenericRefinementRegion Type =40;TImmediateGenericRefinementRegion Type =42;TImmediateLosslessGenericRefinementRegion Type =43;TPageInformation Type =48;TEndOfPage Type =49;TEndOfStrip Type =50;TEndOfFile Type =51;TProfiles Type =52;TTables Type =53;TExtension Type =62;TBitmap Type =70;);func (_fdg *GenericRegion )decodeTemplate1 (_aecg ,_cfce ,_gceg int ,_abec ,_eec int )(_fbag error ){const _ebdd ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0031";var (_cdgb ,_cabc int ;_abef ,_egd int ;_dgff byte ;_bgd ,_cbdd int ;);if _aecg >=1{_dgff ,_fbag =_fdg .Bitmap .GetByte (_eec );if _fbag !=nil {return _fg .Wrap (_fbag ,_ebdd ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_abef =int (_dgff );};if _aecg >=2{_dgff ,_fbag =_fdg .Bitmap .GetByte (_eec -_fdg .Bitmap .RowStride );if _fbag !=nil {return _fg .Wrap (_fbag ,_ebdd ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_egd =int (_dgff )<<5;};_cdgb =((_abef >>1)&0x1f8)|((_egd >>1)&0x1e00);for _ebdf :=0;_ebdf < _gceg ;_ebdf =_bgd {var (_gag byte ;_deee int ;);_bgd =_ebdf +8;if _aga :=_cfce -_ebdf ;_aga > 8{_deee =8;}else {_deee =_aga ;};if _aecg > 0{_abef <<=8;if _bgd < _cfce {_dgff ,_fbag =_fdg .Bitmap .GetByte (_eec +1);if _fbag !=nil {return _fg .Wrap (_fbag ,_ebdd ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_abef |=int (_dgff );};};if _aecg > 1{_egd <<=8;if _bgd < _cfce {_dgff ,_fbag =_fdg .Bitmap .GetByte (_eec -_fdg .Bitmap .RowStride +1);if _fbag !=nil {return _fg .Wrap (_fbag ,_ebdd ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_egd |=int (_dgff )<<5;};};for _dcd :=0;_dcd < _deee ;_dcd ++{if _fdg ._dfb {_cabc =_fdg .overrideAtTemplate1 (_cdgb ,_ebdf +_dcd ,_aecg ,int (_gag ),_dcd );_fdg ._cee .SetIndex (int32 (_cabc ));}else {_fdg ._cee .SetIndex (int32 (_cdgb ));};_cbdd ,_fbag =_fdg ._cbb .DecodeBit (_fdg ._cee );if _fbag !=nil {return _fg .Wrap (_fbag ,_ebdd ,"");};_gag |=byte (_cbdd )<<uint (7-_dcd );_efg :=uint (8-_dcd );_cdgb =((_cdgb &0xefb)<<1)|_cbdd |((_abef >>_efg )&0x8)|((_egd >>_efg )&0x200);};if _gfc :=_fdg .Bitmap .SetByte (_abec ,_gag );_gfc !=nil {return _fg .Wrap (_gfc ,_ebdd ,"");};_abec ++;_eec ++;};return nil ;};func (_aaeb *TextRegion )computeSymbolCodeLength ()error {if _aaeb .IsHuffmanEncoded {return _aaeb .symbolIDCodeLengths ();};_aaeb ._gcbd =int8 (_c .Ceil (_c .Log (float64 (_aaeb .NumberOfSymbols ))/_c .Log (2)));return nil ;};func (_eaf *HalftoneRegion )computeX (_fgcb ,_cgba int )int {return _eaf .shiftAndFill (int (_eaf .HGridX )+_fgcb *int (_eaf .HRegionY )+_cgba *int (_eaf .HRegionX ));};func (_acgf *SymbolDictionary )setRetainedCodingContexts (_gacc *SymbolDictionary ){_acgf ._acdaf =_gacc ._acdaf ;_acgf .IsHuffmanEncoded =_gacc .IsHuffmanEncoded ;_acgf .UseRefinementAggregation =_gacc .UseRefinementAggregation ;_acgf .SdTemplate =_gacc .SdTemplate ;_acgf .SdrTemplate =_gacc .SdrTemplate ;_acgf .SdATX =_gacc .SdATX ;_acgf .SdATY =_gacc .SdATY ;_acgf .SdrATX =_gacc .SdrATX ;_acgf .SdrATY =_gacc .SdrATY ;_acgf ._edda =_gacc ._edda ;};func (_adfa *GenericRegion )decodeSLTP ()(int ,error ){switch _adfa .GBTemplate {case 0:_adfa ._cee .SetIndex (0x9B25);case 1:_adfa ._cee .SetIndex (0x795);case 2:_adfa ._cee .SetIndex (0xE5);case 3:_adfa ._cee .SetIndex (0x195);};return _adfa ._cbb .DecodeBit (_adfa ._cee );};func (_cada *PageInformationSegment )encodeStripingInformation (_caee _e .BinaryWriter )(_dbfe int ,_dgeb error ){const _ddce ="\u0065n\u0063\u006f\u0064\u0065S\u0074\u0072\u0069\u0070\u0069n\u0067I\u006ef\u006f\u0072\u006d\u0061\u0074\u0069\u006fn";if !_cada .IsStripe {if _dbfe ,_dgeb =_caee .Write ([]byte {0x00,0x00});_dgeb !=nil {return 0,_fg .Wrap (_dgeb ,_ddce ,"n\u006f\u0020\u0073\u0074\u0072\u0069\u0070\u0069\u006e\u0067");};return _dbfe ,nil ;};_ffge :=make ([]byte ,2);_ag .BigEndian .PutUint16 (_ffge ,_cada .MaxStripeSize |1<<15);if _dbfe ,_dgeb =_caee .Write (_ffge );_dgeb !=nil {return 0,_fg .Wrapf (_dgeb ,_ddce ,"\u0073\u0074\u0072i\u0070\u0069\u006e\u0067\u003a\u0020\u0025\u0064",_cada .MaxStripeSize );};return _dbfe ,nil ;};func (_bagef *PageInformationSegment )readRequiresAuxiliaryBuffer ()error {_gaff ,_fgga :=_bagef ._cgbc .ReadBit ();if _fgga !=nil {return _fgga ;};if _gaff ==1{_bagef ._edg =true ;};return nil ;};type Type int ;type SymbolDictionary struct{_gfgg _e .StreamReader ;SdrTemplate int8 ;SdTemplate int8 ;_cafa bool ;_fgfb bool ;SdHuffAggInstanceSelection bool ;SdHuffBMSizeSelection int8 ;SdHuffDecodeWidthSelection int8 ;SdHuffDecodeHeightSelection int8 ;UseRefinementAggregation bool ;IsHuffmanEncoded bool ;SdATX []int8 ;SdATY []int8 ;SdrATX []int8 ;SdrATY []int8 ;NumberOfExportedSymbols uint32 ;NumberOfNewSymbols uint32 ;Header *Header ;_ebbe uint32 ;_edgg []*_ad .Bitmap ;_bdc uint32 ;_eacge []*_ad .Bitmap ;_ecba _fc .Tabler ;_afda _fc .Tabler ;_gbba _fc .Tabler ;_dfad _fc .Tabler ;_agae []*_ad .Bitmap ;_bbdg []*_ad .Bitmap ;_acdaf *_agc .Decoder ;_ceafb *TextRegion ;_begfe *GenericRegion ;_edbb *GenericRefinementRegion ;_edda *_agc .DecoderStats ;_gadg *_agc .DecoderStats ;_cgae *_agc .DecoderStats ;_dgag *_agc .DecoderStats ;_gcddb *_agc .DecoderStats ;_fgca *_agc .DecoderStats ;_caea *_agc .DecoderStats ;_gegb *_agc .DecoderStats ;_fcgcb *_agc .DecoderStats ;_gedf int8 ;_dcab *_ad .Bitmaps ;_gddg []int ;_ceg map[int ]int ;_gegff bool ;};func (_aacd *PageInformationSegment )encodeFlags (_gdde _e .BinaryWriter )(_eddb error ){const _gdgg ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _eddb =_gdde .SkipBits (1);_eddb !=nil {return _fg .Wrap (_eddb ,_gdgg ,"\u0072\u0065\u0073e\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074");};var _fbg int ;if _aacd .CombinationOperatorOverrideAllowed (){_fbg =1;};if _eddb =_gdde .WriteBit (_fbg );_eddb !=nil {return _fg .Wrap (_eddb ,_gdgg ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0064\u0065\u006e");};_fbg =0;if _aacd ._edg {_fbg =1;};if _eddb =_gdde .WriteBit (_fbg );_eddb !=nil {return _fg .Wrap (_eddb ,_gdgg ,"\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0061\u0075\u0078i\u006ci\u0061r\u0079\u0020\u0062\u0075\u0066\u0066\u0065r");};if _eddb =_gdde .WriteBit ((int (_aacd ._ceee )>>1)&0x01);_eddb !=nil {return _fg .Wrap (_eddb ,_gdgg ,"\u0063\u006f\u006d\u0062\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006f\u0070\u0065\u0072\u0061\u0074o\u0072\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0062\u0069\u0074");};if _eddb =_gdde .WriteBit (int (_aacd ._ceee )&0x01);_eddb !=nil {return _fg .Wrap (_eddb ,_gdgg ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0062\u0069\u0074");};_fbg =int (_aacd ._eeb );if _eddb =_gdde .WriteBit (_fbg );_eddb !=nil {return _fg .Wrap (_eddb ,_gdgg ,"\u0064e\u0066\u0061\u0075\u006c\u0074\u0020\u0070\u0061\u0067\u0065\u0020p\u0069\u0078\u0065\u006c\u0020\u0076\u0061\u006c\u0075\u0065");};_fbg =0;if _aacd ._ecdc {_fbg =1;};if _eddb =_gdde .WriteBit (_fbg );_eddb !=nil {return _fg .Wrap (_eddb ,_gdgg ,"\u0063\u006f\u006e\u0074ai\u006e\u0073\u0020\u0072\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074");};_fbg =0;if _aacd .IsLossless {_fbg =1;};if _eddb =_gdde .WriteBit (_fbg );_eddb !=nil {return _fg .Wrap (_eddb ,_gdgg ,"p\u0061\u0067\u0065\u0020\u0069\u0073 \u0065\u0076\u0065\u006e\u0074\u0075\u0061\u006c\u006cy\u0020\u006c\u006fs\u0073l\u0065\u0073\u0073");};return nil ;};func (_bgdb *GenericRegion )overrideAtTemplate2 (_gfaf ,_faf ,_cgbb ,_dcf ,_edb int )int {_gfaf &=0x3FB;if _bgdb .GBAtY [0]==0&&_bgdb .GBAtX [0]>=-int8 (_edb ){_gfaf |=(_dcf >>uint (7-(int8 (_edb )+_bgdb .GBAtX [0]))&0x1)<<2;}else {_gfaf |=int (_bgdb .getPixel (_faf +int (_bgdb .GBAtX [0]),_cgbb +int (_bgdb .GBAtY [0])))<<2;};return _gfaf ;};func (_dgdbe *SymbolDictionary )getUserTable (_adaf int )(_fc .Tabler ,error ){var _gfafg int ;for _ ,_bcab :=range _dgdbe .Header .RTSegments {if _bcab .Type ==53{if _gfafg ==_adaf {_cgc ,_bgbc :=_bcab .GetSegmentData ();if _bgbc !=nil {return nil ,_bgbc ;};_ecec :=_cgc .(_fc .BasicTabler );return _fc .NewEncodedTable (_ecec );};_gfafg ++;};};return nil ,nil ;};func (_aa *EndOfStripe )parseHeader (_dea *Header ,_dc _e .StreamReader )error {_fe ,_dfe :=_aa ._aca .ReadBits (32);if _dfe !=nil {return _dfe ;};_aa ._bd =int (_fe &_c .MaxInt32 );return nil ;};func (_fbc *GenericRefinementRegion )decodeTypicalPredictedLineTemplate0 (_dba ,_abga ,_cfg ,_dff ,_eb ,_gf ,_fcb ,_bc ,_fce int )error {var (_abe ,_bfe ,_fca ,_be ,_eef ,_ged int ;_af byte ;_ecb error ;);if _dba > 0{_af ,_ecb =_fbc .RegionBitmap .GetByte (_fcb -_cfg );if _ecb !=nil {return _ecb ;};_fca =int (_af );};if _bc > 0&&_bc <=_fbc .ReferenceBitmap .Height {_af ,_ecb =_fbc .ReferenceBitmap .GetByte (_fce -_dff +_gf );if _ecb !=nil {return _ecb ;};_be =int (_af )<<4;};if _bc >=0&&_bc < _fbc .ReferenceBitmap .Height {_af ,_ecb =_fbc .ReferenceBitmap .GetByte (_fce +_gf );if _ecb !=nil {return _ecb ;};_eef =int (_af )<<1;};if _bc > -2&&_bc < _fbc .ReferenceBitmap .Height -1{_af ,_ecb =_fbc .ReferenceBitmap .GetByte (_fce +_dff +_gf );if _ecb !=nil {return _ecb ;};_ged =int (_af );};_abe =((_fca >>5)&0x6)|((_ged >>2)&0x30)|(_eef &0x180)|(_be &0xc00);var _eed int ;for _abf :=0;_abf < _eb ;_abf =_eed {var _fbf int ;_eed =_abf +8;var _acc int ;if _acc =_abga -_abf ;_acc > 8{_acc =8;};_aag :=_eed < _abga ;_ddg :=_eed < _fbc .ReferenceBitmap .Width ;_fcbd :=_gf +1;if _dba > 0{_af =0;if _aag {_af ,_ecb =_fbc .RegionBitmap .GetByte (_fcb -_cfg +1);if _ecb !=nil {return _ecb ;};};_fca =(_fca <<8)|int (_af );};if _bc > 0&&_bc <=_fbc .ReferenceBitmap .Height {var _ae int ;if _ddg {_af ,_ecb =_fbc .ReferenceBitmap .GetByte (_fce -_dff +_fcbd );if _ecb !=nil {return _ecb ;};_ae =int (_af )<<4;};_be =(_be <<8)|_ae ;};if _bc >=0&&_bc < _fbc .ReferenceBitmap .Height {var _edd int ;if _ddg {_af ,_ecb =_fbc .ReferenceBitmap .GetByte (_fce +_fcbd );if _ecb !=nil {return _ecb ;};_edd =int (_af )<<1;};_eef =(_eef <<8)|_edd ;};if _bc > -2&&_bc < (_fbc .ReferenceBitmap .Height -1){_af =0;if _ddg {_af ,_ecb =_fbc .ReferenceBitmap .GetByte (_fce +_dff +_fcbd );if _ecb !=nil {return _ecb ;};};_ged =(_ged <<8)|int (_af );};for _dbaf :=0;_dbaf < _acc ;_dbaf ++{var _cfc int ;_cadf :=false ;_ced :=(_abe >>4)&0x1ff;if _ced ==0x1ff{_cadf =true ;_cfc =1;}else if _ced ==0x00{_cadf =true ;};if !_cadf {if _fbc ._db {_bfe =_fbc .overrideAtTemplate0 (_abe ,_abf +_dbaf ,_dba ,_fbf ,_dbaf );_fbc ._ga .SetIndex (int32 (_bfe ));}else {_fbc ._ga .SetIndex (int32 (_abe ));};_cfc ,_ecb =_fbc ._ab .DecodeBit (_fbc ._ga );if _ecb !=nil {return _ecb ;};};_ebc :=uint (7-_dbaf );_fbf |=int (_cfc <<_ebc );_abe =((_abe &0xdb6)<<1)|_cfc |(_fca >>_ebc +5)&0x002|((_ged >>_ebc +2)&0x010)|((_eef >>_ebc )&0x080)|((_be >>_ebc )&0x400);};_ecb =_fbc .RegionBitmap .SetByte (_fcb ,byte (_fbf ));if _ecb !=nil {return _ecb ;};_fcb ++;_fce ++;};return nil ;};func (_gdfb *PageInformationSegment )DefaultPixelValue ()uint8 {return _gdfb ._eeb };func (_acec *GenericRegion )GetRegionInfo ()*RegionSegment {return _acec .RegionSegment };func (_cbddc *TextRegion )GetRegionInfo ()*RegionSegment {return _cbddc .RegionInfo };func (_eaee *TextRegion )readHuffmanFlags ()error {var (_cgad int ;_efba uint64 ;_eggg error ;);_ ,_eggg =_eaee ._bgbcd .ReadBit ();if _eggg !=nil {return _eggg ;};_cgad ,_eggg =_eaee ._bgbcd .ReadBit ();if _eggg !=nil {return _eggg ;};_eaee .SbHuffRSize =int8 (_cgad );_efba ,_eggg =_eaee ._bgbcd .ReadBits (2);if _eggg !=nil {return _eggg ;};_eaee .SbHuffRDY =int8 (_efba )&0xf;_efba ,_eggg =_eaee ._bgbcd .ReadBits (2);if _eggg !=nil {return _eggg ;};_eaee .SbHuffRDX =int8 (_efba )&0xf;_efba ,_eggg =_eaee ._bgbcd .ReadBits (2);if _eggg !=nil {return _eggg ;};_eaee .SbHuffRDHeight =int8 (_efba )&0xf;_efba ,_eggg =_eaee ._bgbcd .ReadBits (2);if _eggg !=nil {return _eggg ;};_eaee .SbHuffRDWidth =int8 (_efba )&0xf;_efba ,_eggg =_eaee ._bgbcd .ReadBits (2);if _eggg !=nil {return _eggg ;};_eaee .SbHuffDT =int8 (_efba )&0xf;_efba ,_eggg =_eaee ._bgbcd .ReadBits (2);if _eggg !=nil {return _eggg ;};_eaee .SbHuffDS =int8 (_efba )&0xf;_efba ,_eggg =_eaee ._bgbcd .ReadBits (2);if _eggg !=nil {return _eggg ;};_eaee .SbHuffFS =int8 (_efba )&0xf;return nil ;};func (_bcbc *SymbolDictionary )getSbSymCodeLen ()int8 {_aebd :=int8 (_c .Ceil (_c .Log (float64 (_bcbc ._ebbe +_bcbc .NumberOfNewSymbols ))/_c .Log (2)));if _bcbc .IsHuffmanEncoded &&_aebd < 1{return 1;};return _aebd ;};func (_fba *template1 )form (_bag ,_dgf ,_gbe ,_bbd ,_fbdb int16 )int16 {return ((_bag &0x02)<<8)|(_dgf <<6)|((_gbe &0x03)<<4)|(_bbd <<1)|_fbdb ;};func (_bgga *SymbolDictionary )InitEncode (symbols *_ad .Bitmaps ,symbolList []int ,symbolMap map[int ]int ,unborderSymbols bool )error {const _ddee ="S\u0079\u006d\u0062\u006f\u006c\u0044i\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002eI\u006e\u0069\u0074E\u006ec\u006f\u0064\u0065";_bgga .SdATX =[]int8 {3,-3,2,-2};_bgga .SdATY =[]int8 {-1,-1,-2,-2};_bgga ._dcab =symbols ;_bgga ._gddg =make ([]int ,len (symbolList ));copy (_bgga ._gddg ,symbolList );if len (_bgga ._gddg )!=_bgga ._dcab .Size (){return _fg .Error (_ddee ,"s\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0061\u006e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u004ci\u0073\u0074\u0020\u006f\u0066\u0020\u0064\u0069\u0066\u0066er\u0065\u006e\u0074 \u0073i\u007a\u0065");};_bgga .NumberOfNewSymbols =uint32 (symbols .Size ());_bgga .NumberOfExportedSymbols =uint32 (symbols .Size ());_bgga ._ceg =symbolMap ;_bgga ._gegff =unborderSymbols ;return nil ;};const (ORandom OrganizationType =iota ;OSequential ;);type TextRegion struct{_bgbcd _e .StreamReader ;RegionInfo *RegionSegment ;SbrTemplate int8 ;SbdsOffset int8 ;DefaultPixel int8 ;CombinationOperator _ad .CombinationOperator ;IsTransposed int8 ;ReferenceCorner int16 ;LogSBStrips int16 ;UseRefinement bool ;IsHuffmanEncoded bool ;SbHuffRSize int8 ;SbHuffRDY int8 ;SbHuffRDX int8 ;SbHuffRDHeight int8 ;SbHuffRDWidth int8 ;SbHuffDT int8 ;SbHuffDS int8 ;SbHuffFS int8 ;SbrATX []int8 ;SbrATY []int8 ;NumberOfSymbolInstances uint32 ;_agde int64 ;SbStrips int8 ;NumberOfSymbols uint32 ;RegionBitmap *_ad .Bitmap ;Symbols []*_ad .Bitmap ;_gbfa *_agc .Decoder ;_geaee *GenericRefinementRegion ;_ggfcg *_agc .DecoderStats ;_bebad *_agc .DecoderStats ;_baaeb *_agc .DecoderStats ;_bacg *_agc .DecoderStats ;_ebec *_agc .DecoderStats ;_gebd *_agc .DecoderStats ;_eege *_agc .DecoderStats ;_acege *_agc .DecoderStats ;_acbff *_agc .DecoderStats ;_ggagf *_agc .DecoderStats ;_abded *_agc .DecoderStats ;_gcbd int8 ;_feda *_fc .FixedSizeTable ;Header *Header ;_febd _fc .Tabler ;_cadc _fc .Tabler ;_ceadf _fc .Tabler ;_fcdad _fc .Tabler ;_gge _fc .Tabler ;_bbddf _fc .Tabler ;_ggdad _fc .Tabler ;_abadc _fc .Tabler ;_fdggd ,_ececc map[int ]int ;_bgec []int ;_beaff *_ad .Points ;_adfc *_ad .Bitmaps ;_decaea *_ac .IntSlice ;_cgfae ,_dfcfc int ;_egcd *_ad .Boxes ;};func (_def *GenericRefinementRegion )getGrReference ()(*_ad .Bitmap ,error ){segments :=_def ._ge .RTSegments ;if len (segments )==0{return nil ,_b .New ("\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0065\u0078is\u0074\u0073");};_agg ,_bf :=segments [0].GetSegmentData ();if _bf !=nil {return nil ,_bf ;};_gd ,_fd :=_agg .(Regioner );if !_fd {return nil ,_ce .Errorf ("\u0072\u0065\u0066\u0065\u0072r\u0065\u0064\u0020\u0074\u006f\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_agg );};return _gd .GetRegionBitmap ();};func (_eff *PageInformationSegment )readResolution ()error {_cgg ,_fdcc :=_eff ._cgbc .ReadBits (32);if _fdcc !=nil {return _fdcc ;};_eff .ResolutionX =int (_cgg &_c .MaxInt32 );_cgg ,_fdcc =_eff ._cgbc .ReadBits (32);if _fdcc !=nil {return _fdcc ;};_eff .ResolutionY =int (_cgg &_c .MaxInt32 );return nil ;};func (_bgcf *HalftoneRegion )computeGrayScalePlanes (_gaafe []*_ad .Bitmap ,_efecd int )([][]int ,error ){_gbfge :=make ([][]int ,_bgcf .HGridHeight );for _bggd :=0;_bggd < len (_gbfge );_bggd ++{_gbfge [_bggd ]=make ([]int ,_bgcf .HGridWidth );};for _dbgc :=0;_dbgc < int (_bgcf .HGridHeight );_dbgc ++{for _dbab :=0;_dbab < int (_bgcf .HGridWidth );_dbab +=8{var _eabc int ;if _fbe :=int (_bgcf .HGridWidth )-_dbab ;_fbe > 8{_eabc =8;}else {_eabc =_fbe ;};_faec :=_gaafe [0].GetByteIndex (_dbab ,_dbgc );for _bgag :=0;_bgag < _eabc ;_bgag ++{_fegd :=_bgag +_dbab ;_gbfge [_dbgc ][_fegd ]=0;for _bgbg :=0;_bgbg < _efecd ;_bgbg ++{_fbagb ,_gage :=_gaafe [_bgbg ].GetByte (_faec );if _gage !=nil {return nil ,_gage ;};_ccad :=_fbagb >>uint (7-_fegd &7);_feec :=_ccad &1;_cec :=1<<uint (_bgbg );_cdc :=int (_feec )*_cec ;_gbfge [_dbgc ][_fegd ]+=_cdc ;};};};};return _gbfge ,nil ;};func (_dbgb *SymbolDictionary )getSymbol (_bcda int )(*_ad .Bitmap ,error ){const _ddb ="\u0067e\u0074\u0053\u0079\u006d\u0062\u006fl";_adbc ,_fdaf :=_dbgb ._dcab .GetBitmap (_dbgb ._gddg [_bcda ]);if _fdaf !=nil {return nil ,_fg .Wrap (_fdaf ,_ddb ,"\u0063\u0061n\u0027\u0074\u0020g\u0065\u0074\u0020\u0073\u0079\u006d\u0062\u006f\u006c");};return _adbc ,nil ;};func (_gbff *SymbolDictionary )decodeHeightClassCollectiveBitmap (_bgage int64 ,_egg ,_cffb uint32 )(*_ad .Bitmap ,error ){if _bgage ==0{_fedc :=_ad .New (int (_cffb ),int (_egg ));var (_ecge byte ;_fbaaa error ;);for _fdeg :=0;_fdeg < len (_fedc .Data );_fdeg ++{_ecge ,_fbaaa =_gbff ._gfgg .ReadByte ();if _fbaaa !=nil {return nil ,_fbaaa ;};if _fbaaa =_fedc .SetByte (_fdeg ,_ecge );_fbaaa !=nil {return nil ,_fbaaa ;};};return _fedc ,nil ;};if _gbff ._begfe ==nil {_gbff ._begfe =NewGenericRegion (_gbff ._gfgg );};_gbff ._begfe .setParameters (true ,_gbff ._gfgg .StreamPosition (),_bgage ,_egg ,_cffb );_cebed ,_gbgf :=_gbff ._begfe .GetRegionBitmap ();if _gbgf !=nil {return nil ,_gbgf ;};return _cebed ,nil ;};func (_dfa *GenericRefinementRegion )Init (header *Header ,r _e .StreamReader )error {_dfa ._ge =header ;_dfa ._ffc =r ;_dfa .RegionInfo =NewRegionSegment (r );return _dfa .parseHeader ();};func (_cgdg *SymbolDictionary )encodeSymbols (_bbcfd _e .BinaryWriter )(_gac int ,_agcb error ){const _afed ="\u0065\u006e\u0063o\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c";_faae :=_de .New ();_faae .Init ();_gccb ,_agcb :=_cgdg ._dcab .SelectByIndexes (_cgdg ._gddg );if _agcb !=nil {return 0,_fg .Wrap (_agcb ,_afed ,"\u0069n\u0069\u0074\u0069\u0061\u006c");};_decae :=map[*_ad .Bitmap ]int {};for _deaec ,_decg :=range _gccb .Values {_decae [_decg ]=_deaec ;};_gccb .SortByHeight ();var _beba ,_ffbc int ;_fecg ,_agcb :=_gccb .GroupByHeight ();if _agcb !=nil {return 0,_fg .Wrap (_agcb ,_afed ,"");};for _ ,_cbdc :=range _fecg .Values {_fag :=_cbdc .Values [0].Height ;_deba :=_fag -_beba ;if _agcb =_faae .EncodeInteger (_de .IADH ,_deba );_agcb !=nil {return 0,_fg .Wrapf (_agcb ,_afed ,"\u0049\u0041\u0044\u0048\u0020\u0066\u006f\u0072\u0020\u0064\u0068\u003a \u0027\u0025\u0064\u0027",_deba );};_beba =_fag ;_ggggc ,_caeg :=_cbdc .GroupByWidth ();if _caeg !=nil {return 0,_fg .Wrapf (_caeg ,_afed ,"\u0068\u0065\u0069g\u0068\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_fag );};var _acee int ;for _ ,_dace :=range _ggggc .Values {for _ ,_gebf :=range _dace .Values {_bagb :=_gebf .Width ;_bgea :=_bagb -_acee ;if _caeg =_faae .EncodeInteger (_de .IADW ,_bgea );_caeg !=nil {return 0,_fg .Wrapf (_caeg ,_afed ,"\u0049\u0041\u0044\u0057\u0020\u0066\u006f\u0072\u0020\u0064\u0077\u003a \u0027\u0025\u0064\u0027",_bgea );};_acee +=_bgea ;if _caeg =_faae .EncodeBitmap (_gebf ,false );_caeg !=nil {return 0,_fg .Wrapf (_caeg ,_afed ,"H\u0065i\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u0020W\u0069\u0064\u0074\u0068: \u0025\u0064",_fag ,_bagb );};_eaa :=_decae [_gebf ];_cgdg ._ceg [_eaa ]=_ffbc ;_ffbc ++;};};if _caeg =_faae .EncodeOOB (_de .IADW );_caeg !=nil {return 0,_fg .Wrap (_caeg ,_afed ,"\u0049\u0041\u0044\u0057");};};if _agcb =_faae .EncodeInteger (_de .IAEX ,0);_agcb !=nil {return 0,_fg .Wrap (_agcb ,_afed ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};if _agcb =_faae .EncodeInteger (_de .IAEX ,len (_cgdg ._gddg ));_agcb !=nil {return 0,_fg .Wrap (_agcb ,_afed ,"\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0073\u0079m\u0062\u006f\u006c\u0073");};_faae .Final ();_bcca ,_agcb :=_faae .WriteTo (_bbcfd );if _agcb !=nil {return 0,_fg .Wrap (_agcb ,_afed ,"\u0077\u0072i\u0074\u0069\u006e\u0067 \u0065\u006ec\u006f\u0064\u0065\u0072\u0020\u0063\u006f\u006et\u0065\u0078\u0074\u0020\u0074\u006f\u0020\u0027\u0077\u0027\u0020\u0077r\u0069\u0074\u0065\u0072");};return int (_bcca ),nil ;};func (_dffa *GenericRegion )GetRegionBitmap ()(_gfdd *_ad .Bitmap ,_efag error ){if _dffa .Bitmap !=nil {return _dffa .Bitmap ,nil ;};if _dffa .IsMMREncoded {if _dffa ._fbad ==nil {_dffa ._fbad ,_efag =_dg .New (_dffa ._efa ,int (_dffa .RegionSegment .BitmapWidth ),int (_dffa .RegionSegment .BitmapHeight ),_dffa .DataOffset ,_dffa .DataLength );if _efag !=nil {return nil ,_efag ;};};_dffa .Bitmap ,_efag =_dffa ._fbad .UncompressMMR ();return _dffa .Bitmap ,_efag ;};if _efag =_dffa .updateOverrideFlags ();_efag !=nil {return nil ,_efag ;};var _bab int ;if _dffa ._cbb ==nil {_dffa ._cbb ,_efag =_agc .New (_dffa ._efa );if _efag !=nil {return nil ,_efag ;};};if _dffa ._cee ==nil {_dffa ._cee =_agc .NewStats (65536,1);};_dffa .Bitmap =_ad .New (int (_dffa .RegionSegment .BitmapWidth ),int (_dffa .RegionSegment .BitmapHeight ));_fed :=int (uint32 (_dffa .Bitmap .Width +7)&(^uint32 (7)));for _gfa :=0;_gfa < _dffa .Bitmap .Height ;_gfa ++{if _dffa .IsTPGDon {var _egeg int ;_egeg ,_efag =_dffa .decodeSLTP ();if _efag !=nil {return nil ,_efag ;};_bab ^=_egeg ;};if _bab ==1{if _gfa > 0{if _efag =_dffa .copyLineAbove (_gfa );_efag !=nil {return nil ,_efag ;};};}else {if _efag =_dffa .decodeLine (_gfa ,_dffa .Bitmap .Width ,_fed );_efag !=nil {return nil ,_efag ;};};};return _dffa .Bitmap ,nil ;};func (_aaeed *TextRegion )Init (header *Header ,r _e .StreamReader )error {_aaeed .Header =header ;_aaeed ._bgbcd =r ;_aaeed .RegionInfo =NewRegionSegment (_aaeed ._bgbcd );return _aaeed .parseHeader ();};func (_cebc *TextRegion )parseHeader ()error {var _ecff error ;_ff .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069n\u0073\u002e\u002e\u002e");defer func (){if _ecff !=nil {_ff .Log .Trace ("\u005b\u0054\u0045\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044E\u0052\u005d\u0020\u0066\u0061i\u006c\u0065d\u002e\u0020\u0025\u0076",_ecff );}else {_ff .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069s\u0068\u0065\u0064\u002e");};}();if _ecff =_cebc .RegionInfo .parseHeader ();_ecff !=nil {return _ecff ;};if _ecff =_cebc .readRegionFlags ();_ecff !=nil {return _ecff ;};if _cebc .IsHuffmanEncoded {if _ecff =_cebc .readHuffmanFlags ();_ecff !=nil {return _ecff ;};};if _ecff =_cebc .readUseRefinement ();_ecff !=nil {return _ecff ;};if _ecff =_cebc .readAmountOfSymbolInstances ();_ecff !=nil {return _ecff ;};if _ecff =_cebc .getSymbols ();_ecff !=nil {return _ecff ;};if _ecff =_cebc .computeSymbolCodeLength ();_ecff !=nil {return _ecff ;};if _ecff =_cebc .checkInput ();_ecff !=nil {return _ecff ;};_ff .Log .Trace ("\u0025\u0073",_cebc .String ());return nil ;};func (_afac *TextRegion )checkInput ()error {const _dbec ="\u0063\u0068\u0065\u0063\u006b\u0049\u006e\u0070\u0075\u0074";if !_afac .UseRefinement {if _afac .SbrTemplate !=0{_ff .Log .Debug ("\u0053\u0062\u0072Te\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_afac .SbrTemplate =0;};};if _afac .SbHuffFS ==2||_afac .SbHuffRDWidth ==2||_afac .SbHuffRDHeight ==2||_afac .SbHuffRDX ==2||_afac .SbHuffRDY ==2{return _fg .Error (_dbec ,"h\u0075\u0066\u0066\u006d\u0061\u006e \u0066\u006c\u0061\u0067\u0020\u0076a\u006c\u0075\u0065\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074e\u0064");};if !_afac .UseRefinement {if _afac .SbHuffRSize !=0{_ff .Log .Debug ("\u0053\u0062\u0048uf\u0066\u0052\u0053\u0069\u007a\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_afac .SbHuffRSize =0;};if _afac .SbHuffRDY !=0{_ff .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044Y\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_afac .SbHuffRDY =0;};if _afac .SbHuffRDX !=0{_ff .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044X\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_afac .SbHuffRDX =0;};if _afac .SbHuffRDWidth !=0{_ff .Log .Debug ("\u0053b\u0048\u0075\u0066\u0066R\u0044\u0057\u0069\u0064\u0074h\u0020s\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u00200");_afac .SbHuffRDWidth =0;};if _afac .SbHuffRDHeight !=0{_ff .Log .Debug ("\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069g\u0068\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0030");_afac .SbHuffRDHeight =0;};};return nil ;};func (_bdec *RegionSegment )readCombinationOperator ()error {_edaf ,_fcbga :=_bdec ._efde .ReadBits (3);if _fcbga !=nil {return _fcbga ;};_bdec .CombinaionOperator =_ad .CombinationOperator (_edaf &0xF);return nil ;};func (_dgg *template0 )setIndex (_deac *_agc .DecoderStats ){_deac .SetIndex (0x100)};func (_ceeg *TextRegion )decodeSymbolInstances ()error {_ffeaa ,_ecga :=_ceeg .decodeStripT ();if _ecga !=nil {return _ecga ;};var (_cebb int64 ;_ggdf uint32 ;);for _ggdf < _ceeg .NumberOfSymbolInstances {_gebe ,_dbae :=_ceeg .decodeDT ();if _dbae !=nil {return _dbae ;};_ffeaa +=_gebe ;var _ddcf int64 ;_cbg :=true ;_ceeg ._agde =0;for {if _cbg {_ddcf ,_dbae =_ceeg .decodeDfs ();if _dbae !=nil {return _dbae ;};_cebb +=_ddcf ;_ceeg ._agde =_cebb ;_cbg =false ;}else {_eeegb ,_gefe :=_ceeg .decodeIds ();if _gefe !=nil {return _gefe ;};if _eeegb ==_c .MaxInt32 ||_ggdf >=_ceeg .NumberOfSymbolInstances {break ;};_ceeg ._agde +=_eeegb +int64 (_ceeg .SbdsOffset );};_fddc ,_dacf :=_ceeg .decodeCurrentT ();if _dacf !=nil {return _dacf ;};_aeca :=_ffeaa +_fddc ;_dcbc ,_dacf :=_ceeg .decodeID ();if _dacf !=nil {return _dacf ;};_geec ,_dacf :=_ceeg .decodeRI ();if _dacf !=nil {return _dacf ;};_bggc ,_dacf :=_ceeg .decodeIb (_geec ,_dcbc );if _dacf !=nil {return _dacf ;};if _dacf =_ceeg .blit (_bggc ,_aeca );_dacf !=nil {return _dacf ;};_ggdf ++;};};return nil ;};func (_ecdd *PageInformationSegment )CombinationOperatorOverrideAllowed ()bool {return _ecdd ._baac };func (_adbb *SymbolDictionary )decodeNewSymbols (_aabb ,_bcg uint32 ,_bedf *_ad .Bitmap ,_gbbb ,_cgfc int32 )error {if _adbb ._edbb ==nil {_adbb ._edbb =_gdg (_adbb ._gfgg ,nil );if _adbb ._acdaf ==nil {var _deda error ;_adbb ._acdaf ,_deda =_agc .New (_adbb ._gfgg );if _deda !=nil {return _deda ;};};if _adbb ._edda ==nil {_adbb ._edda =_agc .NewStats (65536,1);};};_adbb ._edbb .setParameters (_adbb ._edda ,_adbb ._acdaf ,_adbb .SdrTemplate ,_aabb ,_bcg ,_bedf ,_gbbb ,_cgfc ,false ,_adbb .SdrATX ,_adbb .SdrATY );return _adbb .addSymbol (_adbb ._edbb );};func (_abaf *SymbolDictionary )decodeRefinedSymbol (_afedc ,_aafc uint32 )error {var (_cead int ;_cdfg ,_dcad int32 ;);if _abaf .IsHuffmanEncoded {_cade ,_daad :=_abaf ._gfgg .ReadBits (byte (_abaf ._gedf ));if _daad !=nil {return _daad ;};_cead =int (_cade );_agga ,_daad :=_fc .GetStandardTable (15);if _daad !=nil {return _daad ;};_debc ,_daad :=_agga .Decode (_abaf ._gfgg );if _daad !=nil {return _daad ;};_cdfg =int32 (_debc );_debc ,_daad =_agga .Decode (_abaf ._gfgg );if _daad !=nil {return _daad ;};_dcad =int32 (_debc );_agga ,_daad =_fc .GetStandardTable (1);if _daad !=nil {return _daad ;};if _ ,_daad =_agga .Decode (_abaf ._gfgg );_daad !=nil {return _daad ;};_abaf ._gfgg .Align ();}else {_fcgd ,_ggge :=_abaf ._acdaf .DecodeIAID (uint64 (_abaf ._gedf ),_abaf ._fcgcb );if _ggge !=nil {return _ggge ;};_cead =int (_fcgd );_cdfg ,_ggge =_abaf ._acdaf .DecodeInt (_abaf ._fgca );if _ggge !=nil {return _ggge ;};_dcad ,_ggge =_abaf ._acdaf .DecodeInt (_abaf ._caea );if _ggge !=nil {return _ggge ;};};if _dfcf :=_abaf .setSymbolsArray ();_dfcf !=nil {return _dfcf ;};_eecdg :=_abaf ._bbdg [_cead ];if _abbf :=_abaf .decodeNewSymbols (_afedc ,_aafc ,_eecdg ,_cdfg ,_dcad );_abbf !=nil {return _abbf ;};if _abaf .IsHuffmanEncoded {_abaf ._gfgg .Align ();};return nil ;};func (_bgffc *TextRegion )decodeRdy ()(int64 ,error ){const _gfccg ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064y";if _bgffc .IsHuffmanEncoded {if _bgffc .SbHuffRDY ==3{if _bgffc ._ggdad ==nil {var (_fddcb int ;_gbdge error ;);if _bgffc .SbHuffFS ==3{_fddcb ++;};if _bgffc .SbHuffDS ==3{_fddcb ++;};if _bgffc .SbHuffDT ==3{_fddcb ++;};if _bgffc .SbHuffRDWidth ==3{_fddcb ++;};if _bgffc .SbHuffRDHeight ==3{_fddcb ++;};if _bgffc .SbHuffRDX ==3{_fddcb ++;};_bgffc ._ggdad ,_gbdge =_bgffc .getUserTable (_fddcb );if _gbdge !=nil {return 0,_fg .Wrap (_gbdge ,_gfccg ,"");};};return _bgffc ._ggdad .Decode (_bgffc ._bgbcd );};_dgdd ,_dbfg :=_fc .GetStandardTable (14+int (_bgffc .SbHuffRDY ));if _dbfg !=nil {return 0,_dbfg ;};return _dgdd .Decode (_bgffc ._bgbcd );};_dfege ,_aafd :=_bgffc ._gbfa .DecodeInt (_bgffc ._ggagf );if _aafd !=nil {return 0,_fg .Wrap (_aafd ,_gfccg ,"");};return int64 (_dfege ),nil ;};func (_gec *TableSegment )HtPS ()int32 {return _gec ._dcac };func (_dcag *RegionSegment )parseHeader ()error {const _bfabc ="p\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_ff .Log .Trace ("\u005b\u0052\u0045\u0047I\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002dH\u0045A\u0044\u0045\u0052\u005d\u0020\u0042\u0065g\u0069\u006e");defer func (){_ff .Log .Trace ("\u005b\u0052\u0045G\u0049\u004f\u004e\u005d[\u0050\u0041\u0052\u0053\u0045\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");}();_bcfd ,_aaed :=_dcag ._efde .ReadBits (32);if _aaed !=nil {return _fg .Wrap (_aaed ,_bfabc ,"\u0077\u0069\u0064t\u0068");};_dcag .BitmapWidth =uint32 (_bcfd &_c .MaxUint32 );_bcfd ,_aaed =_dcag ._efde .ReadBits (32);if _aaed !=nil {return _fg .Wrap (_aaed ,_bfabc ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_dcag .BitmapHeight =uint32 (_bcfd &_c .MaxUint32 );_bcfd ,_aaed =_dcag ._efde .ReadBits (32);if _aaed !=nil {return _fg .Wrap (_aaed ,_bfabc ,"\u0078\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_dcag .XLocation =uint32 (_bcfd &_c .MaxUint32 );_bcfd ,_aaed =_dcag ._efde .ReadBits (32);if _aaed !=nil {return _fg .Wrap (_aaed ,_bfabc ,"\u0079\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_dcag .YLocation =uint32 (_bcfd &_c .MaxUint32 );if _ ,_aaed =_dcag ._efde .ReadBits (5);_aaed !=nil {return _fg .Wrap (_aaed ,_bfabc ,"\u0064i\u0072\u0079\u0020\u0072\u0065\u0061d");};if _aaed =_dcag .readCombinationOperator ();_aaed !=nil {return _fg .Wrap (_aaed ,_bfabc ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};return nil ;};func (_gggg *PageInformationSegment )parseHeader ()(_cecd error ){_ff .Log .Trace ("\u005b\u0050\u0061\u0067\u0065I\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067m\u0065\u006e\u0074\u005d\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u002e\u002e");defer func (){var _gbda ="[\u0050\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072m\u0061\u0074\u0069\u006f\u006e\u0053\u0065gm\u0065\u006e\u0074\u005d \u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065ad\u0065\u0072 \u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064";if _cecd !=nil {_gbda +="\u0020\u0077\u0069t\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u0020"+_cecd .Error ();}else {_gbda +="\u0020\u0073\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079";};_ff .Log .Trace (_gbda );}();if _cecd =_gggg .readWidthAndHeight ();_cecd !=nil {return _cecd ;};if _cecd =_gggg .readResolution ();_cecd !=nil {return _cecd ;};_ ,_cecd =_gggg ._cgbc .ReadBit ();if _cecd !=nil {return _cecd ;};if _cecd =_gggg .readCombinationOperatorOverrideAllowed ();_cecd !=nil {return _cecd ;};if _cecd =_gggg .readRequiresAuxiliaryBuffer ();_cecd !=nil {return _cecd ;};if _cecd =_gggg .readCombinationOperator ();_cecd !=nil {return _cecd ;};if _cecd =_gggg .readDefaultPixelValue ();_cecd !=nil {return _cecd ;};if _cecd =_gggg .readContainsRefinement ();_cecd !=nil {return _cecd ;};if _cecd =_gggg .readIsLossless ();_cecd !=nil {return _cecd ;};if _cecd =_gggg .readIsStriped ();_cecd !=nil {return _cecd ;};if _cecd =_gggg .readMaxStripeSize ();_cecd !=nil {return _cecd ;};if _cecd =_gggg .checkInput ();_cecd !=nil {return _cecd ;};_ff .Log .Trace ("\u0025\u0073",_gggg );return nil ;};func (_bgbgb *SymbolDictionary )decodeHeightClassDeltaHeightWithHuffman ()(int64 ,error ){switch _bgbgb .SdHuffDecodeHeightSelection {case 0:_aedb ,_dcbd :=_fc .GetStandardTable (4);if _dcbd !=nil {return 0,_dcbd ;};return _aedb .Decode (_bgbgb ._gfgg );case 1:_dcagef ,_gfce :=_fc .GetStandardTable (5);if _gfce !=nil {return 0,_gfce ;};return _dcagef .Decode (_bgbgb ._gfgg );case 3:if _bgbgb ._ecba ==nil {_dgcfe ,_fbefb :=_fc .GetStandardTable (0);if _fbefb !=nil {return 0,_fbefb ;};_bgbgb ._ecba =_dgcfe ;};return _bgbgb ._ecba .Decode (_bgbgb ._gfgg );};return 0,nil ;};func (_gfcc *Header )readSegmentNumber (_bbca _e .StreamReader )error {const _ecf ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";_ggb :=make ([]byte ,4);_ ,_gdd :=_bbca .Read (_ggb );if _gdd !=nil {return _fg .Wrap (_gdd ,_ecf ,"");};_gfcc .SegmentNumber =_ag .BigEndian .Uint32 (_ggb );return nil ;};func (_gecc *TextRegion )decodeStripT ()(_effd int64 ,_gacf error ){if _gecc .IsHuffmanEncoded {if _gecc .SbHuffDT ==3{if _gecc ._ceadf ==nil {var _cebf int ;if _gecc .SbHuffFS ==3{_cebf ++;};if _gecc .SbHuffDS ==3{_cebf ++;};_gecc ._ceadf ,_gacf =_gecc .getUserTable (_cebf );if _gacf !=nil {return 0,_gacf ;};};_effd ,_gacf =_gecc ._ceadf .Decode (_gecc ._bgbcd );if _gacf !=nil {return 0,_gacf ;};}else {var _gddec _fc .Tabler ;_gddec ,_gacf =_fc .GetStandardTable (11+int (_gecc .SbHuffDT ));if _gacf !=nil {return 0,_gacf ;};_effd ,_gacf =_gddec .Decode (_gecc ._bgbcd );if _gacf !=nil {return 0,_gacf ;};};}else {var _dfdb int32 ;_dfdb ,_gacf =_gecc ._gbfa .DecodeInt (_gecc ._ggfcg );if _gacf !=nil {return 0,_gacf ;};_effd =int64 (_dfdb );};_effd *=int64 (-_gecc .SbStrips );return _effd ,nil ;};