//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package segments ;import (_ff "encoding/binary";_fe "errors";_fga "fmt";_gc "github.com/unidoc/unipdf/v3/common";_cb "github.com/unidoc/unipdf/v3/internal/bitwise";_ffc "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_ge "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";
_bg "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/arithmetic";_gf "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/huffman";_d "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/mmr";_cf "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/arithmetic";
_cc "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_cbb "github.com/unidoc/unipdf/v3/internal/jbig2/internal";_fb "golang.org/x/xerrors";_g "image";_b "io";_fg "math";_bd "strings";_c "time";);type PatternDictionary struct{_afcf _cb .StreamReader ;
DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;GBAtX []int8 ;GBAtY []int8 ;IsMMREncoded bool ;HDTemplate byte ;HdpWidth byte ;HdpHeight byte ;Patterns []*_ge .Bitmap ;GrayMax uint32 ;};func (_gdgf *Header )writeSegmentPageAssociation (_bfdf _cb .BinaryWriter )(_efdf int ,_bgde error ){const _abbf ="w\u0072\u0069\u0074\u0065\u0053\u0065g\u006d\u0065\u006e\u0074\u0050\u0061\u0067\u0065\u0041s\u0073\u006f\u0063i\u0061t\u0069\u006f\u006e";
if _gdgf .pageSize ()!=4{if _bgde =_bfdf .WriteByte (byte (_gdgf .PageAssociation ));_bgde !=nil {return 0,_cc .Wrap (_bgde ,_abbf ,"\u0070\u0061\u0067\u0065\u0053\u0069\u007a\u0065\u0020\u0021\u003d\u0020\u0034");};return 1,nil ;};_aafd :=make ([]byte ,4);
_ff .BigEndian .PutUint32 (_aafd ,uint32 (_gdgf .PageAssociation ));if _efdf ,_bgde =_bfdf .Write (_aafd );_bgde !=nil {return 0,_cc .Wrap (_bgde ,_abbf ,"\u0034 \u0062y\u0074\u0065\u0020\u0070\u0061g\u0065\u0020n\u0075\u006d\u0062\u0065\u0072");};return _efdf ,nil ;
};func (_aee *GenericRefinementRegion )decodeTypicalPredictedLineTemplate1 (_beb ,_cfd ,_bfe ,_cae ,_abba ,_ded ,_fa ,_ddfa ,_fdff int )(_gecg error ){var (_bbf ,_bcfb int ;_abd ,_fce int ;_cgf ,_ead int ;_efd byte ;);if _beb > 0{_efd ,_gecg =_aee .RegionBitmap .GetByte (_fa -_bfe );
if _gecg !=nil {return ;};_abd =int (_efd );};if _ddfa > 0&&_ddfa <=_aee .ReferenceBitmap .Height {_efd ,_gecg =_aee .ReferenceBitmap .GetByte (_fdff -_cae +_ded );if _gecg !=nil {return ;};_fce =int (_efd )<<2;};if _ddfa >=0&&_ddfa < _aee .ReferenceBitmap .Height {_efd ,_gecg =_aee .ReferenceBitmap .GetByte (_fdff +_ded );
if _gecg !=nil {return ;};_cgf =int (_efd );};if _ddfa > -2&&_ddfa < _aee .ReferenceBitmap .Height -1{_efd ,_gecg =_aee .ReferenceBitmap .GetByte (_fdff +_cae +_ded );if _gecg !=nil {return ;};_ead =int (_efd );};_bbf =((_abd >>5)&0x6)|((_ead >>2)&0x30)|(_cgf &0xc0)|(_fce &0x200);
_bcfb =((_ead >>2)&0x70)|(_cgf &0xc0)|(_fce &0x700);var _bbe int ;for _dge :=0;_dge < _abba ;_dge =_bbe {var (_bge int ;_fceg int ;);_bbe =_dge +8;if _bge =_cfd -_dge ;_bge > 8{_bge =8;};_bba :=_bbe < _cfd ;_fff :=_bbe < _aee .ReferenceBitmap .Width ;_bfd :=_ded +1;
if _beb > 0{_efd =0;if _bba {_efd ,_gecg =_aee .RegionBitmap .GetByte (_fa -_bfe +1);if _gecg !=nil {return ;};};_abd =(_abd <<8)|int (_efd );};if _ddfa > 0&&_ddfa <=_aee .ReferenceBitmap .Height {var _ba int ;if _fff {_efd ,_gecg =_aee .ReferenceBitmap .GetByte (_fdff -_cae +_bfd );
if _gecg !=nil {return ;};_ba =int (_efd )<<2;};_fce =(_fce <<8)|_ba ;};if _ddfa >=0&&_ddfa < _aee .ReferenceBitmap .Height {_efd =0;if _fff {_efd ,_gecg =_aee .ReferenceBitmap .GetByte (_fdff +_bfd );if _gecg !=nil {return ;};};_cgf =(_cgf <<8)|int (_efd );
};if _ddfa > -2&&_ddfa < (_aee .ReferenceBitmap .Height -1){_efd =0;if _fff {_efd ,_gecg =_aee .ReferenceBitmap .GetByte (_fdff +_cae +_bfd );if _gecg !=nil {return ;};};_ead =(_ead <<8)|int (_efd );};for _bad :=0;_bad < _bge ;_bad ++{var _bgd int ;_bce :=(_bcfb >>4)&0x1ff;
switch _bce {case 0x1ff:_bgd =1;case 0x00:_bgd =0;default:_aee ._ab .SetIndex (int32 (_bbf ));_bgd ,_gecg =_aee ._bdf .DecodeBit (_aee ._ab );if _gecg !=nil {return ;};};_eb :=uint (7-_bad );_fceg |=_bgd <<_eb ;_bbf =((_bbf &0x0d6)<<1)|_bgd |(_abd >>_eb +5)&0x002|((_ead >>_eb +2)&0x010)|((_cgf >>_eb )&0x040)|((_fce >>_eb )&0x200);
_bcfb =((_bcfb &0xdb)<<1)|((_ead >>_eb +2)&0x010)|((_cgf >>_eb )&0x080)|((_fce >>_eb )&0x400);};_gecg =_aee .RegionBitmap .SetByte (_fa ,byte (_fceg ));if _gecg !=nil {return ;};_fa ++;_fdff ++;};return nil ;};func (_bgdb *TextRegion )decodeRdx ()(int64 ,error ){const _aaeg ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064x";
if _bgdb .IsHuffmanEncoded {if _bgdb .SbHuffRDX ==3{if _bgdb ._edag ==nil {var (_fged int ;_aacc error ;);if _bgdb .SbHuffFS ==3{_fged ++;};if _bgdb .SbHuffDS ==3{_fged ++;};if _bgdb .SbHuffDT ==3{_fged ++;};if _bgdb .SbHuffRDWidth ==3{_fged ++;};if _bgdb .SbHuffRDHeight ==3{_fged ++;
};_bgdb ._edag ,_aacc =_bgdb .getUserTable (_fged );if _aacc !=nil {return 0,_cc .Wrap (_aacc ,_aaeg ,"");};};return _bgdb ._edag .Decode (_bgdb ._ceace );};_cgfb ,_gcad :=_gf .GetStandardTable (14+int (_bgdb .SbHuffRDX ));if _gcad !=nil {return 0,_cc .Wrap (_gcad ,_aaeg ,"");
};return _cgfb .Decode (_bgdb ._ceace );};_gfec ,_cecc :=_bgdb ._cfcae .DecodeInt (_bgdb ._defa );if _cecc !=nil {return 0,_cc .Wrap (_cecc ,_aaeg ,"");};return int64 (_gfec ),nil ;};func (_gaee *TextRegion )readUseRefinement ()error {if !_gaee .UseRefinement ||_gaee .SbrTemplate !=0{return nil ;
};var (_ceff byte ;_fad error ;);_gaee .SbrATX =make ([]int8 ,2);_gaee .SbrATY =make ([]int8 ,2);_ceff ,_fad =_gaee ._ceace .ReadByte ();if _fad !=nil {return _fad ;};_gaee .SbrATX [0]=int8 (_ceff );_ceff ,_fad =_gaee ._ceace .ReadByte ();if _fad !=nil {return _fad ;
};_gaee .SbrATY [0]=int8 (_ceff );_ceff ,_fad =_gaee ._ceace .ReadByte ();if _fad !=nil {return _fad ;};_gaee .SbrATX [1]=int8 (_ceff );_ceff ,_fad =_gaee ._ceace .ReadByte ();if _fad !=nil {return _fad ;};_gaee .SbrATY [1]=int8 (_ceff );return nil ;};
func (_deb *HalftoneRegion )computeGrayScalePlanes (_gcc []*_ge .Bitmap ,_edfb int )([][]int ,error ){_daa :=make ([][]int ,_deb .HGridHeight );for _ccgg :=0;_ccgg < len (_daa );_ccgg ++{_daa [_ccgg ]=make ([]int ,_deb .HGridWidth );};for _aadg :=0;_aadg < int (_deb .HGridHeight );
_aadg ++{for _dcaf :=0;_dcaf < int (_deb .HGridWidth );_dcaf +=8{var _bfg int ;if _gaae :=int (_deb .HGridWidth )-_dcaf ;_gaae > 8{_bfg =8;}else {_bfg =_gaae ;};_caad :=_gcc [0].GetByteIndex (_dcaf ,_aadg );for _fbd :=0;_fbd < _bfg ;_fbd ++{_dcge :=_fbd +_dcaf ;
_daa [_aadg ][_dcge ]=0;for _eeeec :=0;_eeeec < _edfb ;_eeeec ++{_cda ,_ffbb :=_gcc [_eeeec ].GetByte (_caad );if _ffbb !=nil {return nil ,_ffbb ;};_gfad :=_cda >>uint (7-_dcge &7);_degg :=_gfad &1;_ffea :=1<<uint (_eeeec );_aeb :=int (_degg )*_ffea ;_daa [_aadg ][_dcge ]+=_aeb ;
};};};};return _daa ,nil ;};func (_dba *GenericRegion )computeSegmentDataStructure ()error {_dba .DataOffset =_dba ._cee .StreamPosition ();_dba .DataHeaderLength =_dba .DataOffset -_dba .DataHeaderOffset ;_dba .DataLength =int64 (_dba ._cee .Length ())-_dba .DataHeaderLength ;
return nil ;};func (_acd *GenericRefinementRegion )readAtPixels ()error {_acd .GrAtX =make ([]int8 ,2);_acd .GrAtY =make ([]int8 ,2);_ade ,_fde :=_acd ._a .ReadByte ();if _fde !=nil {return _fde ;};_acd .GrAtX [0]=int8 (_ade );_ade ,_fde =_acd ._a .ReadByte ();
if _fde !=nil {return _fde ;};_acd .GrAtY [0]=int8 (_ade );_ade ,_fde =_acd ._a .ReadByte ();if _fde !=nil {return _fde ;};_acd .GrAtX [1]=int8 (_ade );_ade ,_fde =_acd ._a .ReadByte ();if _fde !=nil {return _fde ;};_acd .GrAtY [1]=int8 (_ade );return nil ;
};func (_fbc *GenericRegion )InitEncode (bm *_ge .Bitmap ,xLoc ,yLoc ,template int ,duplicateLineRemoval bool )error {const _dcf ="\u0047e\u006e\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069\u006f\u006e.\u0049\u006e\u0069\u0074\u0045\u006e\u0063\u006f\u0064\u0065";
if bm ==nil {return _cc .Error (_dcf ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if xLoc < 0||yLoc < 0{return _cc .Error (_dcf ,"\u0078\u0020\u0061\u006e\u0064\u0020\u0079\u0020\u006c\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074h\u0061\u006e\u0020\u0030");
};_fbc .Bitmap =bm ;_fbc .GBTemplate =byte (template );switch _fbc .GBTemplate {case 0:_fbc .GBAtX =[]int8 {3,-3,2,-2};_fbc .GBAtY =[]int8 {-1,-1,-2,-2};case 1:_fbc .GBAtX =[]int8 {3};_fbc .GBAtY =[]int8 {-1};case 2,3:_fbc .GBAtX =[]int8 {2};_fbc .GBAtY =[]int8 {-1};
default:return _cc .Errorf (_dcf ,"\u0070\u0072o\u0076\u0069\u0064\u0065\u0064 \u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u007b\u0030\u002c\u0031\u002c\u0032\u002c\u0033\u007d",template );
};_fbc .RegionSegment =&RegionSegment {BitmapHeight :uint32 (bm .Height ),BitmapWidth :uint32 (bm .Width ),XLocation :uint32 (xLoc ),YLocation :uint32 (yLoc )};_fbc .IsTPGDon =duplicateLineRemoval ;return nil ;};func (_eabaa *Header )writeReferredToCount (_efea _cb .BinaryWriter )(_fcfg int ,_aacdb error ){const _efag ="w\u0072i\u0074\u0065\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0043ou\u006e\u0074";
_eabaa .RTSNumbers =make ([]int ,len (_eabaa .RTSegments ));for _eff ,_fgaef :=range _eabaa .RTSegments {_eabaa .RTSNumbers [_eff ]=int (_fgaef .SegmentNumber );};if len (_eabaa .RTSNumbers )<=4{var _cdgf byte ;if len (_eabaa .RetainBits )>=1{_cdgf =_eabaa .RetainBits [0];
};_cdgf |=byte (len (_eabaa .RTSNumbers ))<<5;if _aacdb =_efea .WriteByte (_cdgf );_aacdb !=nil {return 0,_cc .Wrap (_aacdb ,_efag ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return 1,nil ;};_face :=uint32 (len (_eabaa .RTSNumbers ));
_gebe :=make ([]byte ,4+_ffc .Ceil (len (_eabaa .RTSNumbers )+1,8));_face |=0x7<<29;_ff .BigEndian .PutUint32 (_gebe ,_face );copy (_gebe [1:],_eabaa .RetainBits );_fcfg ,_aacdb =_efea .Write (_gebe );if _aacdb !=nil {return 0,_cc .Wrap (_aacdb ,_efag ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");
};return _fcfg ,nil ;};func (_daada *TextRegion )GetRegionBitmap ()(*_ge .Bitmap ,error ){if _daada .RegionBitmap !=nil {return _daada .RegionBitmap ,nil ;};if !_daada .IsHuffmanEncoded {if _ceeag :=_daada .setCodingStatistics ();_ceeag !=nil {return nil ,_ceeag ;
};};if _gdcbc :=_daada .createRegionBitmap ();_gdcbc !=nil {return nil ,_gdcbc ;};if _fec :=_daada .decodeSymbolInstances ();_fec !=nil {return nil ,_fec ;};return _daada .RegionBitmap ,nil ;};func (_gdeeb *Header )writeSegmentNumber (_aacfe _cb .BinaryWriter )(_gccc int ,_ebea error ){_faeg :=make ([]byte ,4);
_ff .BigEndian .PutUint32 (_faeg ,_gdeeb .SegmentNumber );if _gccc ,_ebea =_aacfe .Write (_faeg );_ebea !=nil {return 0,_cc .Wrap (_ebea ,"\u0048e\u0061\u0064\u0065\u0072.\u0077\u0072\u0069\u0074\u0065S\u0065g\u006de\u006e\u0074\u004e\u0075\u006d\u0062\u0065r","");
};return _gccc ,nil ;};func (_fcf *GenericRefinementRegion )decodeOptimized (_gfg ,_cfc ,_bec ,_ecb ,_bde ,_ad ,_gff int )error {var (_fd error ;_bc int ;_abb int ;);_ggg :=_gfg -int (_fcf .ReferenceDY );if _cga :=int (-_fcf .ReferenceDX );_cga > 0{_bc =_cga ;
};_adf :=_fcf .ReferenceBitmap .GetByteIndex (_bc ,_ggg );if _fcf .ReferenceDX > 0{_abb =int (_fcf .ReferenceDX );};_ddb :=_fcf .RegionBitmap .GetByteIndex (_abb ,_gfg );switch _fcf .TemplateID {case 0:_fd =_fcf .decodeTemplate (_gfg ,_cfc ,_bec ,_ecb ,_bde ,_ad ,_gff ,_ddb ,_ggg ,_adf ,_fcf ._bdd );
case 1:_fd =_fcf .decodeTemplate (_gfg ,_cfc ,_bec ,_ecb ,_bde ,_ad ,_gff ,_ddb ,_ggg ,_adf ,_fcf ._bb );};return _fd ;};func (_dfga *GenericRegion )Encode (w _cb .BinaryWriter )(_aea int ,_cffc error ){const _efc ="G\u0065n\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069o\u006e\u002e\u0045\u006eco\u0064\u0065";
if _dfga .Bitmap ==nil {return 0,_cc .Error (_efc ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};_edd ,_cffc :=_dfga .RegionSegment .Encode (w );if _cffc !=nil {return 0,_cc .Wrap (_cffc ,_efc ,"\u0052\u0065\u0067\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};_aea +=_edd ;if _cffc =w .SkipBits (4);_cffc !=nil {return _aea ,_cc .Wrap (_cffc ,_efc ,"\u0073k\u0069p\u0020\u0072\u0065\u0073\u0065r\u0076\u0065d\u0020\u0062\u0069\u0074\u0073");};var _gde int ;if _dfga .IsTPGDon {_gde =1;};if _cffc =w .WriteBit (_gde );
_cffc !=nil {return _aea ,_cc .Wrap (_cffc ,_efc ,"\u0074\u0070\u0067\u0064\u006f\u006e");};_gde =0;if _cffc =w .WriteBit (int (_dfga .GBTemplate >>1)&0x01);_cffc !=nil {return _aea ,_cc .Wrap (_cffc ,_efc ,"f\u0069r\u0073\u0074\u0020\u0067\u0062\u0074\u0065\u006dp\u006c\u0061\u0074\u0065 b\u0069\u0074");
};if _cffc =w .WriteBit (int (_dfga .GBTemplate )&0x01);_cffc !=nil {return _aea ,_cc .Wrap (_cffc ,_efc ,"s\u0065\u0063\u006f\u006ed \u0067b\u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u0062\u0069\u0074");};if _dfga .UseMMR {_gde =1;};if _cffc =w .WriteBit (_gde );
_cffc !=nil {return _aea ,_cc .Wrap (_cffc ,_efc ,"u\u0073\u0065\u0020\u004d\u004d\u0052\u0020\u0062\u0069\u0074");};_aea ++;if _edd ,_cffc =_dfga .writeGBAtPixels (w );_cffc !=nil {return _aea ,_cc .Wrap (_cffc ,_efc ,"");};_aea +=_edd ;_fbbc :=_cf .New ();
if _cffc =_fbbc .EncodeBitmap (_dfga .Bitmap ,_dfga .IsTPGDon );_cffc !=nil {return _aea ,_cc .Wrap (_cffc ,_efc ,"");};_fbbc .Final ();var _aad int64 ;if _aad ,_cffc =_fbbc .WriteTo (w );_cffc !=nil {return _aea ,_cc .Wrap (_cffc ,_efc ,"");};_aea +=int (_aad );
return _aea ,nil ;};func (_ggcbe *SymbolDictionary )addSymbol (_acac Regioner )error {_efff ,_eeeg :=_acac .GetRegionBitmap ();if _eeeg !=nil {return _eeeg ;};_ggcbe ._ddd [_ggcbe ._gdcc ]=_efff ;_ggcbe ._dcae =append (_ggcbe ._dcae ,_efff );_gc .Log .Trace ("\u005b\u0053YM\u0042\u004f\u004c \u0044\u0049\u0043\u0054ION\u0041RY\u005d\u0020\u0041\u0064\u0064\u0065\u0064 s\u0079\u006d\u0062\u006f\u006c\u003a\u0020%\u0073",_efff );
return nil ;};func (_ggca *SymbolDictionary )huffDecodeRefAggNInst ()(int64 ,error ){if !_ggca .SdHuffAggInstanceSelection {_cfbdd ,_deed :=_gf .GetStandardTable (1);if _deed !=nil {return 0,_deed ;};return _cfbdd .Decode (_ggca ._acee );};if _ggca ._begf ==nil {var (_dedb int ;
_gadc error ;);if _ggca .SdHuffDecodeHeightSelection ==3{_dedb ++;};if _ggca .SdHuffDecodeWidthSelection ==3{_dedb ++;};if _ggca .SdHuffBMSizeSelection ==3{_dedb ++;};_ggca ._begf ,_gadc =_ggca .getUserTable (_dedb );if _gadc !=nil {return 0,_gadc ;};};
return _ggca ._begf .Decode (_ggca ._acee );};func (_gceg *TextRegion )checkInput ()error {const _eeff ="\u0063\u0068\u0065\u0063\u006b\u0049\u006e\u0070\u0075\u0074";if !_gceg .UseRefinement {if _gceg .SbrTemplate !=0{_gc .Log .Debug ("\u0053\u0062\u0072Te\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");
_gceg .SbrTemplate =0;};};if _gceg .SbHuffFS ==2||_gceg .SbHuffRDWidth ==2||_gceg .SbHuffRDHeight ==2||_gceg .SbHuffRDX ==2||_gceg .SbHuffRDY ==2{return _cc .Error (_eeff ,"h\u0075\u0066\u0066\u006d\u0061\u006e \u0066\u006c\u0061\u0067\u0020\u0076a\u006c\u0075\u0065\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074e\u0064");
};if !_gceg .UseRefinement {if _gceg .SbHuffRSize !=0{_gc .Log .Debug ("\u0053\u0062\u0048uf\u0066\u0052\u0053\u0069\u007a\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_gceg .SbHuffRSize =0;};if _gceg .SbHuffRDY !=0{_gc .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044Y\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");
_gceg .SbHuffRDY =0;};if _gceg .SbHuffRDX !=0{_gc .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044X\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_gceg .SbHuffRDX =0;};if _gceg .SbHuffRDWidth !=0{_gc .Log .Debug ("\u0053b\u0048\u0075\u0066\u0066R\u0044\u0057\u0069\u0064\u0074h\u0020s\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u00200");
_gceg .SbHuffRDWidth =0;};if _gceg .SbHuffRDHeight !=0{_gc .Log .Debug ("\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069g\u0068\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0030");_gceg .SbHuffRDHeight =0;};};return nil ;
};func (_cdfc *HalftoneRegion )GetRegionInfo ()*RegionSegment {return _cdfc .RegionSegment };type Documenter interface{GetPage (int )(Pager ,error );GetGlobalSegment (int )(*Header ,error );};func (_dfafd *TableSegment )StreamReader ()_cb .StreamReader {return _dfafd ._dae };
func (_gdd *GenericRefinementRegion )GetRegionBitmap ()(*_ge .Bitmap ,error ){var _af error ;_gc .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _af !=nil {_gc .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0047\u0065\u0074R\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006dap\u0020\u0066a\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_af );
}else {_gc .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _gdd .RegionBitmap !=nil {return _gdd .RegionBitmap ,nil ;};_da :=0;if _gdd .ReferenceBitmap ==nil {_gdd .ReferenceBitmap ,_af =_gdd .getGrReference ();if _af !=nil {return nil ,_af ;};};if _gdd ._bdf ==nil {_gdd ._bdf ,_af =_bg .New (_gdd ._a );
if _af !=nil {return nil ,_af ;};};if _gdd ._ab ==nil {_gdd ._ab =_bg .NewStats (8192,1);};_gdd .RegionBitmap =_ge .New (int (_gdd .RegionInfo .BitmapWidth ),int (_gdd .RegionInfo .BitmapHeight ));if _gdd .TemplateID ==0{if _af =_gdd .updateOverride ();
_af !=nil {return nil ,_af ;};};_dad :=(_gdd .RegionBitmap .Width +7)&-8;var _gga int ;if _gdd .IsTPGROn {_gga =int (-_gdd .ReferenceDY )*_gdd .ReferenceBitmap .RowStride ;};_cg :=_gga +1;for _ae :=0;_ae < _gdd .RegionBitmap .Height ;_ae ++{if _gdd .IsTPGROn {_df ,_dce :=_gdd .decodeSLTP ();
if _dce !=nil {return nil ,_dce ;};_da ^=_df ;};if _da ==0{_af =_gdd .decodeOptimized (_ae ,_gdd .RegionBitmap .Width ,_gdd .RegionBitmap .RowStride ,_gdd .ReferenceBitmap .RowStride ,_dad ,_gga ,_cg );if _af !=nil {return nil ,_af ;};}else {_af =_gdd .decodeTypicalPredictedLine (_ae ,_gdd .RegionBitmap .Width ,_gdd .RegionBitmap .RowStride ,_gdd .ReferenceBitmap .RowStride ,_dad ,_gga );
if _af !=nil {return nil ,_af ;};};};return _gdd .RegionBitmap ,nil ;};func (_eedb *PageInformationSegment )parseHeader ()(_fffc error ){_gc .Log .Trace ("\u005b\u0050\u0061\u0067\u0065I\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067m\u0065\u006e\u0074\u005d\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u002e\u002e");
defer func (){var _fdfd ="[\u0050\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072m\u0061\u0074\u0069\u006f\u006e\u0053\u0065gm\u0065\u006e\u0074\u005d \u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065ad\u0065\u0072 \u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064";
if _fffc !=nil {_fdfd +="\u0020\u0077\u0069t\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u0020"+_fffc .Error ();}else {_fdfd +="\u0020\u0073\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079";};_gc .Log .Trace (_fdfd );}();if _fffc =_eedb .readWidthAndHeight ();
_fffc !=nil {return _fffc ;};if _fffc =_eedb .readResolution ();_fffc !=nil {return _fffc ;};_ ,_fffc =_eedb ._gadb .ReadBit ();if _fffc !=nil {return _fffc ;};if _fffc =_eedb .readCombinationOperatorOverrideAllowed ();_fffc !=nil {return _fffc ;};if _fffc =_eedb .readRequiresAuxiliaryBuffer ();
_fffc !=nil {return _fffc ;};if _fffc =_eedb .readCombinationOperator ();_fffc !=nil {return _fffc ;};if _fffc =_eedb .readDefaultPixelValue ();_fffc !=nil {return _fffc ;};if _fffc =_eedb .readContainsRefinement ();_fffc !=nil {return _fffc ;};if _fffc =_eedb .readIsLossless ();
_fffc !=nil {return _fffc ;};if _fffc =_eedb .readIsStriped ();_fffc !=nil {return _fffc ;};if _fffc =_eedb .readMaxStripeSize ();_fffc !=nil {return _fffc ;};if _fffc =_eedb .checkInput ();_fffc !=nil {return _fffc ;};_gc .Log .Trace ("\u0025\u0073",_eedb );
return nil ;};func (_ddc *GenericRefinementRegion )decodeTemplate (_eggc ,_cge ,_ddff ,_ebf ,_abc ,_cea ,_dca ,_ggd ,_aga ,_bcgf int ,_ega templater )(_ebfc error ){var (_gggd ,_fcg ,_fac ,_aac ,_db int16 ;_dgec ,_gecd ,_gba ,_egae int ;_ccef byte ;);if _aga >=1&&(_aga -1)< _ddc .ReferenceBitmap .Height {_ccef ,_ebfc =_ddc .ReferenceBitmap .GetByte (_bcgf -_ebf );
if _ebfc !=nil {return ;};_dgec =int (_ccef );};if _aga >=0&&(_aga )< _ddc .ReferenceBitmap .Height {_ccef ,_ebfc =_ddc .ReferenceBitmap .GetByte (_bcgf );if _ebfc !=nil {return ;};_gecd =int (_ccef );};if _aga >=-1&&(_aga +1)< _ddc .ReferenceBitmap .Height {_ccef ,_ebfc =_ddc .ReferenceBitmap .GetByte (_bcgf +_ebf );
if _ebfc !=nil {return ;};_gba =int (_ccef );};_bcgf ++;if _eggc >=1{_ccef ,_ebfc =_ddc .RegionBitmap .GetByte (_ggd -_ddff );if _ebfc !=nil {return ;};_egae =int (_ccef );};_ggd ++;_dda :=_ddc .ReferenceDX %8;_cag :=6+_dda ;_aca :=_bcgf %_ebf ;if _cag >=0{if _cag < 8{_gggd =int16 (_dgec >>uint (_cag ))&0x07;
};if _cag < 8{_fcg =int16 (_gecd >>uint (_cag ))&0x07;};if _cag < 8{_fac =int16 (_gba >>uint (_cag ))&0x07;};if _cag ==6&&_aca > 1{if _aga >=1&&(_aga -1)< _ddc .ReferenceBitmap .Height {_ccef ,_ebfc =_ddc .ReferenceBitmap .GetByte (_bcgf -_ebf -2);if _ebfc !=nil {return _ebfc ;
};_gggd |=int16 (_ccef <<2)&0x04;};if _aga >=0&&_aga < _ddc .ReferenceBitmap .Height {_ccef ,_ebfc =_ddc .ReferenceBitmap .GetByte (_bcgf -2);if _ebfc !=nil {return _ebfc ;};_fcg |=int16 (_ccef <<2)&0x04;};if _aga >=-1&&_aga +1< _ddc .ReferenceBitmap .Height {_ccef ,_ebfc =_ddc .ReferenceBitmap .GetByte (_bcgf +_ebf -2);
if _ebfc !=nil {return _ebfc ;};_fac |=int16 (_ccef <<2)&0x04;};};if _cag ==0{_dgec =0;_gecd =0;_gba =0;if _aca < _ebf -1{if _aga >=1&&_aga -1< _ddc .ReferenceBitmap .Height {_ccef ,_ebfc =_ddc .ReferenceBitmap .GetByte (_bcgf -_ebf );if _ebfc !=nil {return _ebfc ;
};_dgec =int (_ccef );};if _aga >=0&&_aga < _ddc .ReferenceBitmap .Height {_ccef ,_ebfc =_ddc .ReferenceBitmap .GetByte (_bcgf );if _ebfc !=nil {return _ebfc ;};_gecd =int (_ccef );};if _aga >=-1&&_aga +1< _ddc .ReferenceBitmap .Height {_ccef ,_ebfc =_ddc .ReferenceBitmap .GetByte (_bcgf +_ebf );
if _ebfc !=nil {return _ebfc ;};_gba =int (_ccef );};};_bcgf ++;};}else {_gggd =int16 (_dgec <<1)&0x07;_fcg =int16 (_gecd <<1)&0x07;_fac =int16 (_gba <<1)&0x07;_dgec =0;_gecd =0;_gba =0;if _aca < _ebf -1{if _aga >=1&&_aga -1< _ddc .ReferenceBitmap .Height {_ccef ,_ebfc =_ddc .ReferenceBitmap .GetByte (_bcgf -_ebf );
if _ebfc !=nil {return _ebfc ;};_dgec =int (_ccef );};if _aga >=0&&_aga < _ddc .ReferenceBitmap .Height {_ccef ,_ebfc =_ddc .ReferenceBitmap .GetByte (_bcgf );if _ebfc !=nil {return _ebfc ;};_gecd =int (_ccef );};if _aga >=-1&&_aga +1< _ddc .ReferenceBitmap .Height {_ccef ,_ebfc =_ddc .ReferenceBitmap .GetByte (_bcgf +_ebf );
if _ebfc !=nil {return _ebfc ;};_gba =int (_ccef );};_bcgf ++;};_gggd |=int16 ((_dgec >>7)&0x07);_fcg |=int16 ((_gecd >>7)&0x07);_fac |=int16 ((_gba >>7)&0x07);};_aac =int16 (_egae >>6);_db =0;_eae :=(2-_dda )%8;_dgec <<=uint (_eae );_gecd <<=uint (_eae );
_gba <<=uint (_eae );_egae <<=2;var _dagg int ;for _ffee :=0;_ffee < _cge ;_ffee ++{_ffg :=_ffee &0x07;_bgf :=_ega .form (_gggd ,_fcg ,_fac ,_aac ,_db );if _ddc ._be {_ccef ,_ebfc =_ddc .RegionBitmap .GetByte (_ddc .RegionBitmap .GetByteIndex (_ffee ,_eggc ));
if _ebfc !=nil {return _ebfc ;};_ddc ._ab .SetIndex (int32 (_ddc .overrideAtTemplate0 (int (_bgf ),_ffee ,_eggc ,int (_ccef ),_ffg )));}else {_ddc ._ab .SetIndex (int32 (_bgf ));};_dagg ,_ebfc =_ddc ._bdf .DecodeBit (_ddc ._ab );if _ebfc !=nil {return _ebfc ;
};if _ebfc =_ddc .RegionBitmap .SetPixel (_ffee ,_eggc ,byte (_dagg ));_ebfc !=nil {return _ebfc ;};_gggd =((_gggd <<1)|0x01&int16 (_dgec >>7))&0x07;_fcg =((_fcg <<1)|0x01&int16 (_gecd >>7))&0x07;_fac =((_fac <<1)|0x01&int16 (_gba >>7))&0x07;_aac =((_aac <<1)|0x01&int16 (_egae >>7))&0x07;
_db =int16 (_dagg );if (_ffee -int (_ddc .ReferenceDX ))%8==5{_dgec =0;_gecd =0;_gba =0;if ((_ffee -int (_ddc .ReferenceDX ))/8)+1< _ddc .ReferenceBitmap .RowStride {if _aga >=1&&(_aga -1)< _ddc .ReferenceBitmap .Height {_ccef ,_ebfc =_ddc .ReferenceBitmap .GetByte (_bcgf -_ebf );
if _ebfc !=nil {return _ebfc ;};_dgec =int (_ccef );};if _aga >=0&&_aga < _ddc .ReferenceBitmap .Height {_ccef ,_ebfc =_ddc .ReferenceBitmap .GetByte (_bcgf );if _ebfc !=nil {return _ebfc ;};_gecd =int (_ccef );};if _aga >=-1&&(_aga +1)< _ddc .ReferenceBitmap .Height {_ccef ,_ebfc =_ddc .ReferenceBitmap .GetByte (_bcgf +_ebf );
if _ebfc !=nil {return _ebfc ;};_gba =int (_ccef );};};_bcgf ++;}else {_dgec <<=1;_gecd <<=1;_gba <<=1;};if _ffg ==5&&_eggc >=1{if ((_ffee >>3)+1)>=_ddc .RegionBitmap .RowStride {_egae =0;}else {_ccef ,_ebfc =_ddc .RegionBitmap .GetByte (_ggd -_ddff );
if _ebfc !=nil {return _ebfc ;};_egae =int (_ccef );};_ggd ++;}else {_egae <<=1;};};return nil ;};func (_caa *GenericRegion )setParameters (_ccdf bool ,_dbfc ,_gfa int64 ,_afce ,_eafa uint32 ){_caa .IsMMREncoded =_ccdf ;_caa .DataOffset =_dbfc ;_caa .DataLength =_gfa ;
_caa .RegionSegment .BitmapHeight =_afce ;_caa .RegionSegment .BitmapWidth =_eafa ;_caa ._bgb =nil ;_caa .Bitmap =nil ;};func (_ggfe *template1 )form (_cad ,_faf ,_eaf ,_dac ,_bbg int16 )int16 {return ((_cad &0x02)<<8)|(_faf <<6)|((_eaf &0x03)<<4)|(_dac <<1)|_bbg ;
};func (_bbeb *TextRegion )getSymbols ()error {if _bbeb .Header .RTSegments !=nil {return _bbeb .initSymbols ();};return nil ;};func (_dedc *GenericRegion )copyLineAbove (_adfc int )error {_bfdb :=_adfc *_dedc .Bitmap .RowStride ;_cgea :=_bfdb -_dedc .Bitmap .RowStride ;
for _bfc :=0;_bfc < _dedc .Bitmap .RowStride ;_bfc ++{_dec ,_cdd :=_dedc .Bitmap .GetByte (_cgea );if _cdd !=nil {return _cdd ;};_cgea ++;if _cdd =_dedc .Bitmap .SetByte (_bfdb ,_dec );_cdd !=nil {return _cdd ;};_bfdb ++;};return nil ;};type GenericRefinementRegion struct{_bdd templater ;
_bb templater ;_a _cb .StreamReader ;_dc *Header ;RegionInfo *RegionSegment ;IsTPGROn bool ;TemplateID int8 ;Template templater ;GrAtX []int8 ;GrAtY []int8 ;RegionBitmap *_ge .Bitmap ;ReferenceBitmap *_ge .Bitmap ;ReferenceDX int32 ;ReferenceDY int32 ;
_bdf *_bg .Decoder ;_ab *_bg .DecoderStats ;_be bool ;_dd []bool ;};func (_gdff *Header )subInputReader ()(_cb .StreamReader ,error ){return _cb .NewSubstreamReader (_gdff .Reader ,_gdff .SegmentDataStartOffset ,_gdff .SegmentDataLength );};func (_cacg *Header )readDataStartOffset (_ebbe _cb .StreamReader ,_dbc OrganizationType ){if _dbc ==OSequential {_cacg .SegmentDataStartOffset =uint64 (_ebbe .StreamPosition ());
};};type TextRegion struct{_ceace _cb .StreamReader ;RegionInfo *RegionSegment ;SbrTemplate int8 ;SbDsOffset int8 ;DefaultPixel int8 ;CombinationOperator _ge .CombinationOperator ;IsTransposed int8 ;ReferenceCorner int16 ;LogSBStrips int16 ;UseRefinement bool ;
IsHuffmanEncoded bool ;SbHuffRSize int8 ;SbHuffRDY int8 ;SbHuffRDX int8 ;SbHuffRDHeight int8 ;SbHuffRDWidth int8 ;SbHuffDT int8 ;SbHuffDS int8 ;SbHuffFS int8 ;SbrATX []int8 ;SbrATY []int8 ;NumberOfSymbolInstances uint32 ;_gcgdc int64 ;SbStrips int8 ;NumberOfSymbols uint32 ;
RegionBitmap *_ge .Bitmap ;Symbols []*_ge .Bitmap ;_cfcae *_bg .Decoder ;_dgcf *GenericRefinementRegion ;_aeagb *_bg .DecoderStats ;_eaff *_bg .DecoderStats ;_efdg *_bg .DecoderStats ;_fcca *_bg .DecoderStats ;_gbgf *_bg .DecoderStats ;_caag *_bg .DecoderStats ;
_dbfef *_bg .DecoderStats ;_cdffa *_bg .DecoderStats ;_defa *_bg .DecoderStats ;_adgg *_bg .DecoderStats ;_cagdc *_bg .DecoderStats ;_ggeg int8 ;_caagc *_gf .FixedSizeTable ;Header *Header ;_gbae _gf .Tabler ;_ccgde _gf .Tabler ;_gedb _gf .Tabler ;_bfdfc _gf .Tabler ;
_bgdg _gf .Tabler ;_edag _gf .Tabler ;_bgfdc _gf .Tabler ;_bdaac _gf .Tabler ;_aeac ,_cade map[int ]int ;_cfbg []int ;_fabeb *_ge .Points ;_afcd *_ge .Bitmaps ;_fcaff *_ffc .IntSlice ;_bdgb ,_faceb int ;_dcfeg *_ge .Boxes ;};func (_bcgg *SymbolDictionary )retrieveImportSymbols ()error {for _ ,_fbcfd :=range _bcgg .Header .RTSegments {if _fbcfd .Type ==0{_bbdfb ,_ccaag :=_fbcfd .GetSegmentData ();
if _ccaag !=nil {return _ccaag ;};_gffa ,_edbde :=_bbdfb .(*SymbolDictionary );if !_edbde {return _fga .Errorf ("\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0044\u0061\u0074a\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u003a\u0020%\u0054",_bbdfb );
};_bdff ,_ccaag :=_gffa .GetDictionary ();if _ccaag !=nil {return _fga .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064 \u0073\u0065\u0067m\u0065\u006e\u0074 \u0077\u0069t\u0068\u0020\u0069\u006e\u0064\u0065x\u003a %\u0064\u0020\u0067\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0073",_fbcfd .SegmentNumber ,_ccaag .Error ());
};_bcgg ._ecgb =append (_bcgg ._ecgb ,_bdff ...);_bcgg ._gbg +=_gffa .NumberOfExportedSymbols ;};};return nil ;};func (_edgb *GenericRegion )updateOverrideFlags ()error {const _cfde ="\u0075\u0070\u0064\u0061te\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _edgb .GBAtX ==nil ||_edgb .GBAtY ==nil {return nil ;};if len (_edgb .GBAtX )!=len (_edgb .GBAtY ){return _cc .Errorf (_cfde ,"i\u006eco\u0073i\u0073t\u0065\u006e\u0074\u0020\u0041T\u0020\u0070\u0069x\u0065\u006c\u002e\u0020\u0041m\u006f\u0075\u006et\u0020\u006f\u0066\u0020\u0027\u0078\u0027\u0020\u0070\u0069\u0078e\u006c\u0073\u003a %d\u002c\u0020\u0041\u006d\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0027\u0079\u0027\u0020\u0070\u0069\u0078e\u006cs\u003a\u0020\u0025\u0064",len (_edgb .GBAtX ),len (_edgb .GBAtY ));
};_edgb .GBAtOverride =make ([]bool ,len (_edgb .GBAtX ));switch _edgb .GBTemplate {case 0:if !_edgb .UseExtTemplates {if _edgb .GBAtX [0]!=3||_edgb .GBAtY [0]!=-1{_edgb .setOverrideFlag (0);};if _edgb .GBAtX [1]!=-3||_edgb .GBAtY [1]!=-1{_edgb .setOverrideFlag (1);
};if _edgb .GBAtX [2]!=2||_edgb .GBAtY [2]!=-2{_edgb .setOverrideFlag (2);};if _edgb .GBAtX [3]!=-2||_edgb .GBAtY [3]!=-2{_edgb .setOverrideFlag (3);};}else {if _edgb .GBAtX [0]!=-2||_edgb .GBAtY [0]!=0{_edgb .setOverrideFlag (0);};if _edgb .GBAtX [1]!=0||_edgb .GBAtY [1]!=-2{_edgb .setOverrideFlag (1);
};if _edgb .GBAtX [2]!=-2||_edgb .GBAtY [2]!=-1{_edgb .setOverrideFlag (2);};if _edgb .GBAtX [3]!=-1||_edgb .GBAtY [3]!=-2{_edgb .setOverrideFlag (3);};if _edgb .GBAtX [4]!=1||_edgb .GBAtY [4]!=-2{_edgb .setOverrideFlag (4);};if _edgb .GBAtX [5]!=2||_edgb .GBAtY [5]!=-1{_edgb .setOverrideFlag (5);
};if _edgb .GBAtX [6]!=-3||_edgb .GBAtY [6]!=0{_edgb .setOverrideFlag (6);};if _edgb .GBAtX [7]!=-4||_edgb .GBAtY [7]!=0{_edgb .setOverrideFlag (7);};if _edgb .GBAtX [8]!=2||_edgb .GBAtY [8]!=-2{_edgb .setOverrideFlag (8);};if _edgb .GBAtX [9]!=3||_edgb .GBAtY [9]!=-1{_edgb .setOverrideFlag (9);
};if _edgb .GBAtX [10]!=-2||_edgb .GBAtY [10]!=-2{_edgb .setOverrideFlag (10);};if _edgb .GBAtX [11]!=-3||_edgb .GBAtY [11]!=-1{_edgb .setOverrideFlag (11);};};case 1:if _edgb .GBAtX [0]!=3||_edgb .GBAtY [0]!=-1{_edgb .setOverrideFlag (0);};case 2:if _edgb .GBAtX [0]!=2||_edgb .GBAtY [0]!=-1{_edgb .setOverrideFlag (0);
};case 3:if _edgb .GBAtX [0]!=2||_edgb .GBAtY [0]!=-1{_edgb .setOverrideFlag (0);};};return nil ;};func (_cgeaf *SymbolDictionary )decodeHeightClassDeltaHeightWithHuffman ()(int64 ,error ){switch _cgeaf .SdHuffDecodeHeightSelection {case 0:_bebb ,_affb :=_gf .GetStandardTable (4);
if _affb !=nil {return 0,_affb ;};return _bebb .Decode (_cgeaf ._acee );case 1:_dddf ,_gbde :=_gf .GetStandardTable (5);if _gbde !=nil {return 0,_gbde ;};return _dddf .Decode (_cgeaf ._acee );case 3:if _cgeaf ._aeaf ==nil {_bgfc ,_aeca :=_gf .GetStandardTable (0);
if _aeca !=nil {return 0,_aeca ;};_cgeaf ._aeaf =_bgfc ;};return _cgeaf ._aeaf .Decode (_cgeaf ._acee );};return 0,nil ;};func (_gdcg *PageInformationSegment )CombinationOperatorOverrideAllowed ()bool {return _gdcg ._cefc };func (_bcfa *Header )readHeaderFlags ()error {const _gbad ="\u0072e\u0061d\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006c\u0061\u0067\u0073";
_edac ,_cbfb :=_bcfa .Reader .ReadBit ();if _cbfb !=nil {return _cc .Wrap (_cbfb ,_gbad ,"r\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067");};if _edac !=0{_bcfa .RetainFlag =true ;};_edac ,_cbfb =_bcfa .Reader .ReadBit ();if _cbfb !=nil {return _cc .Wrap (_cbfb ,_gbad ,"\u0070\u0061g\u0065\u0020\u0061s\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e");
};if _edac !=0{_bcfa .PageAssociationFieldSize =true ;};_agc ,_cbfb :=_bcfa .Reader .ReadBits (6);if _cbfb !=nil {return _cc .Wrap (_cbfb ,_gbad ,"\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065");};_bcfa .Type =Type (int (_agc ));return nil ;
};func (_bgbg *PageInformationSegment )readResolution ()error {_gbaf ,_efgd :=_bgbg ._gadb .ReadBits (32);if _efgd !=nil {return _efgd ;};_bgbg .ResolutionX =int (_gbaf &_fg .MaxInt32 );_gbaf ,_efgd =_bgbg ._gadb .ReadBits (32);if _efgd !=nil {return _efgd ;
};_bgbg .ResolutionY =int (_gbaf &_fg .MaxInt32 );return nil ;};func (_dgfe *GenericRegion )decodeTemplate1 (_gca ,_dega ,_cagbd int ,_bcff ,_caebf int )(_acdd error ){const _dcdg ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0031";
var (_fggc ,_bcbb int ;_acc ,_bda int ;_fbbe byte ;_abg ,_fcc int ;);if _gca >=1{_fbbe ,_acdd =_dgfe .Bitmap .GetByte (_caebf );if _acdd !=nil {return _cc .Wrap (_acdd ,_dcdg ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_acc =int (_fbbe );};if _gca >=2{_fbbe ,_acdd =_dgfe .Bitmap .GetByte (_caebf -_dgfe .Bitmap .RowStride );
if _acdd !=nil {return _cc .Wrap (_acdd ,_dcdg ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_bda =int (_fbbe )<<5;};_fggc =((_acc >>1)&0x1f8)|((_bda >>1)&0x1e00);for _aacf :=0;_aacf < _cagbd ;_aacf =_abg {var (_geef byte ;_aeeg int ;);_abg =_aacf +8;
if _cgba :=_dega -_aacf ;_cgba > 8{_aeeg =8;}else {_aeeg =_cgba ;};if _gca > 0{_acc <<=8;if _abg < _dega {_fbbe ,_acdd =_dgfe .Bitmap .GetByte (_caebf +1);if _acdd !=nil {return _cc .Wrap (_acdd ,_dcdg ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");
};_acc |=int (_fbbe );};};if _gca > 1{_bda <<=8;if _abg < _dega {_fbbe ,_acdd =_dgfe .Bitmap .GetByte (_caebf -_dgfe .Bitmap .RowStride +1);if _acdd !=nil {return _cc .Wrap (_acdd ,_dcdg ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_bda |=int (_fbbe )<<5;
};};for _efca :=0;_efca < _aeeg ;_efca ++{if _dgfe ._ffff {_bcbb =_dgfe .overrideAtTemplate1 (_fggc ,_aacf +_efca ,_gca ,int (_geef ),_efca );_dgfe ._efde .SetIndex (int32 (_bcbb ));}else {_dgfe ._efde .SetIndex (int32 (_fggc ));};_fcc ,_acdd =_dgfe ._efe .DecodeBit (_dgfe ._efde );
if _acdd !=nil {return _cc .Wrap (_acdd ,_dcdg ,"");};_geef |=byte (_fcc )<<uint (7-_efca );_facb :=uint (8-_efca );_fggc =((_fggc &0xefb)<<1)|_fcc |((_acc >>_facb )&0x8)|((_bda >>_facb )&0x200);};if _eeb :=_dgfe .Bitmap .SetByte (_bcff ,_geef );_eeb !=nil {return _cc .Wrap (_eeb ,_dcdg ,"");
};_bcff ++;_caebf ++;};return nil ;};func (_eafc *SymbolDictionary )decodeHeightClassCollectiveBitmap (_ccgc int64 ,_dcfe ,_eafb uint32 )(*_ge .Bitmap ,error ){if _ccgc ==0{_abfd :=_ge .New (int (_eafb ),int (_dcfe ));var (_bdcc byte ;_gdgc error ;);for _cegb :=0;
_cegb < len (_abfd .Data );_cegb ++{_bdcc ,_gdgc =_eafc ._acee .ReadByte ();if _gdgc !=nil {return nil ,_gdgc ;};if _gdgc =_abfd .SetByte (_cegb ,_bdcc );_gdgc !=nil {return nil ,_gdgc ;};};return _abfd ,nil ;};if _eafc ._dbbb ==nil {_eafc ._dbbb =NewGenericRegion (_eafc ._acee );
};_eafc ._dbbb .setParameters (true ,_eafc ._acee .StreamPosition (),_ccgc ,_dcfe ,_eafb );_cafdb ,_ecfbc :=_eafc ._dbbb .GetRegionBitmap ();if _ecfbc !=nil {return nil ,_ecfbc ;};return _cafdb ,nil ;};type EncodeInitializer interface{InitEncode ();};func (_fea *PageInformationSegment )CombinationOperator ()_ge .CombinationOperator {return _fea ._daad };
func (_fdf *GenericRefinementRegion )decodeTypicalPredictedLine (_ed ,_dcd ,_cff ,_gfe ,_eg ,_ffe int )error {_bf :=_ed -int (_fdf .ReferenceDY );_egg :=_fdf .ReferenceBitmap .GetByteIndex (0,_bf );_daf :=_fdf .RegionBitmap .GetByteIndex (0,_ed );var _gec error ;
switch _fdf .TemplateID {case 0:_gec =_fdf .decodeTypicalPredictedLineTemplate0 (_ed ,_dcd ,_cff ,_gfe ,_eg ,_ffe ,_daf ,_bf ,_egg );case 1:_gec =_fdf .decodeTypicalPredictedLineTemplate1 (_ed ,_dcd ,_cff ,_gfe ,_eg ,_ffe ,_daf ,_bf ,_egg );};return _gec ;
};func NewHeader (d Documenter ,r _cb .StreamReader ,offset int64 ,organizationType OrganizationType )(*Header ,error ){_efgg :=&Header {Reader :r };if _cbbge :=_efgg .parse (d ,r ,offset ,organizationType );_cbbge !=nil {return nil ,_cc .Wrap (_cbbge ,"\u004ee\u0077\u0048\u0065\u0061\u0064\u0065r","");
};return _efgg ,nil ;};func (_abbfa *TableSegment )HtPS ()int32 {return _abbfa ._cbea };func (_gecac *PageInformationSegment )readWidthAndHeight ()error {_begd ,_dfcg :=_gecac ._gadb .ReadBits (32);if _dfcg !=nil {return _dfcg ;};_gecac .PageBMWidth =int (_begd &_fg .MaxInt32 );
_begd ,_dfcg =_gecac ._gadb .ReadBits (32);if _dfcg !=nil {return _dfcg ;};_gecac .PageBMHeight =int (_begd &_fg .MaxInt32 );return nil ;};func (_dded *SymbolDictionary )getSbSymCodeLen ()int8 {_efbag :=int8 (_fg .Ceil (_fg .Log (float64 (_dded ._gbg +_dded .NumberOfNewSymbols ))/_fg .Log (2)));
if _dded .IsHuffmanEncoded &&_efbag < 1{return 1;};return _efbag ;};func (_bbbg *Header )readSegmentNumber (_gda _cb .StreamReader )error {const _bacf ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";
_eac :=make ([]byte ,4);_ ,_becb :=_gda .Read (_eac );if _becb !=nil {return _cc .Wrap (_becb ,_bacf ,"");};_bbbg .SegmentNumber =_ff .BigEndian .Uint32 (_eac );return nil ;};func (_edae *GenericRegion )overrideAtTemplate0a (_dfag ,_dcgc ,_ffa ,_ddcg ,_cbcf ,_aadb int )int {if _edae .GBAtOverride [0]{_dfag &=0xFFEF;
if _edae .GBAtY [0]==0&&_edae .GBAtX [0]>=-int8 (_cbcf ){_dfag |=(_ddcg >>uint (int8 (_aadb )-_edae .GBAtX [0]&0x1))<<4;}else {_dfag |=int (_edae .getPixel (_dcgc +int (_edae .GBAtX [0]),_ffa +int (_edae .GBAtY [0])))<<4;};};if _edae .GBAtOverride [1]{_dfag &=0xFBFF;
if _edae .GBAtY [1]==0&&_edae .GBAtX [1]>=-int8 (_cbcf ){_dfag |=(_ddcg >>uint (int8 (_aadb )-_edae .GBAtX [1]&0x1))<<10;}else {_dfag |=int (_edae .getPixel (_dcgc +int (_edae .GBAtX [1]),_ffa +int (_edae .GBAtY [1])))<<10;};};if _edae .GBAtOverride [2]{_dfag &=0xF7FF;
if _edae .GBAtY [2]==0&&_edae .GBAtX [2]>=-int8 (_cbcf ){_dfag |=(_ddcg >>uint (int8 (_aadb )-_edae .GBAtX [2]&0x1))<<11;}else {_dfag |=int (_edae .getPixel (_dcgc +int (_edae .GBAtX [2]),_ffa +int (_edae .GBAtY [2])))<<11;};};if _edae .GBAtOverride [3]{_dfag &=0x7FFF;
if _edae .GBAtY [3]==0&&_edae .GBAtX [3]>=-int8 (_cbcf ){_dfag |=(_ddcg >>uint (int8 (_aadb )-_edae .GBAtX [3]&0x1))<<15;}else {_dfag |=int (_edae .getPixel (_dcgc +int (_edae .GBAtX [3]),_ffa +int (_edae .GBAtY [3])))<<15;};};return _dfag ;};type SegmentEncoder interface{Encode (_bcea _cb .BinaryWriter )(_badc int ,_cafd error );
};func (_fdfcf *RegionSegment )Encode (w _cb .BinaryWriter )(_bbfcd int ,_dcdb error ){const _bcdg ="R\u0065g\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065n\u0074\u002e\u0045\u006eco\u0064\u0065";_accd :=make ([]byte ,4);_ff .BigEndian .PutUint32 (_accd ,_fdfcf .BitmapWidth );
_bbfcd ,_dcdb =w .Write (_accd );if _dcdb !=nil {return 0,_cc .Wrap (_dcdb ,_bcdg ,"\u0057\u0069\u0064t\u0068");};_ff .BigEndian .PutUint32 (_accd ,_fdfcf .BitmapHeight );var _gea int ;_gea ,_dcdb =w .Write (_accd );if _dcdb !=nil {return 0,_cc .Wrap (_dcdb ,_bcdg ,"\u0048\u0065\u0069\u0067\u0068\u0074");
};_bbfcd +=_gea ;_ff .BigEndian .PutUint32 (_accd ,_fdfcf .XLocation );_gea ,_dcdb =w .Write (_accd );if _dcdb !=nil {return 0,_cc .Wrap (_dcdb ,_bcdg ,"\u0058L\u006f\u0063\u0061\u0074\u0069\u006fn");};_bbfcd +=_gea ;_ff .BigEndian .PutUint32 (_accd ,_fdfcf .YLocation );
_gea ,_dcdb =w .Write (_accd );if _dcdb !=nil {return 0,_cc .Wrap (_dcdb ,_bcdg ,"\u0059L\u006f\u0063\u0061\u0074\u0069\u006fn");};_bbfcd +=_gea ;if _dcdb =w .WriteByte (byte (_fdfcf .CombinaionOperator )&0x07);_dcdb !=nil {return 0,_cc .Wrap (_dcdb ,_bcdg ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");
};_bbfcd ++;return _bbfcd ,nil ;};func (_ddcge *SymbolDictionary )decodeDirectlyThroughGenericRegion (_ada ,_edfc uint32 )error {if _ddcge ._dbbb ==nil {_ddcge ._dbbb =NewGenericRegion (_ddcge ._acee );};_ddcge ._dbbb .setParametersWithAt (false ,byte (_ddcge .SdTemplate ),false ,false ,_ddcge .SdATX ,_ddcge .SdATY ,_ada ,_edfc ,_ddcge ._ddce ,_ddcge ._bdaa );
return _ddcge .addSymbol (_ddcge ._dbbb );};func (_ffde *SymbolDictionary )GetDictionary ()([]*_ge .Bitmap ,error ){_gc .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c-\u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){_gc .Log .Trace ("\u005b\u0053\u0059M\u0042\u004f\u004c\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
_gc .Log .Trace ("\u005b\u0053Y\u004d\u0042\u004f\u004c\u002dD\u0049\u0043\u0054\u0049\u004fN\u0041\u0052\u0059\u005d\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020\u000a\u0045\u0078\u003a\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u000a\u006e\u0065\u0077\u003a\u0027\u0025\u0073\u0027",_ffde ._dffbd ,_ffde ._ddd );
}();if _ffde ._dffbd ==nil {var _eccfb error ;if _ffde .UseRefinementAggregation {_ffde ._agdb =_ffde .getSbSymCodeLen ();};if !_ffde .IsHuffmanEncoded {if _eccfb =_ffde .setCodingStatistics ();_eccfb !=nil {return nil ,_eccfb ;};};_ffde ._ddd =make ([]*_ge .Bitmap ,_ffde .NumberOfNewSymbols );
var _aefa []int ;if _ffde .IsHuffmanEncoded &&!_ffde .UseRefinementAggregation {_aefa =make ([]int ,_ffde .NumberOfNewSymbols );};if _eccfb =_ffde .setSymbolsArray ();_eccfb !=nil {return nil ,_eccfb ;};var _cgadf ,_acec int64 ;_ffde ._gdcc =0;for _ffde ._gdcc < _ffde .NumberOfNewSymbols {_acec ,_eccfb =_ffde .decodeHeightClassDeltaHeight ();
if _eccfb !=nil {return nil ,_eccfb ;};_cgadf +=_acec ;var _aagfd ,_dea uint32 ;_cfbd :=int64 (_ffde ._gdcc );for {var _ecfb int64 ;_ecfb ,_eccfb =_ffde .decodeDifferenceWidth ();if _fb .Is (_eccfb ,_cbb .ErrOOB ){break ;};if _eccfb !=nil {return nil ,_eccfb ;
};if _ffde ._gdcc >=_ffde .NumberOfNewSymbols {break ;};_aagfd +=uint32 (_ecfb );_dea +=_aagfd ;if !_ffde .IsHuffmanEncoded ||_ffde .UseRefinementAggregation {if !_ffde .UseRefinementAggregation {_eccfb =_ffde .decodeDirectlyThroughGenericRegion (_aagfd ,uint32 (_cgadf ));
if _eccfb !=nil {return nil ,_eccfb ;};}else {_eccfb =_ffde .decodeAggregate (_aagfd ,uint32 (_cgadf ));if _eccfb !=nil {return nil ,_eccfb ;};};}else if _ffde .IsHuffmanEncoded &&!_ffde .UseRefinementAggregation {_aefa [_ffde ._gdcc ]=int (_aagfd );};
_ffde ._gdcc ++;};if _ffde .IsHuffmanEncoded &&!_ffde .UseRefinementAggregation {var _cefgc int64 ;if _ffde .SdHuffBMSizeSelection ==0{var _fddcf _gf .Tabler ;_fddcf ,_eccfb =_gf .GetStandardTable (1);if _eccfb !=nil {return nil ,_eccfb ;};_cefgc ,_eccfb =_fddcf .Decode (_ffde ._acee );
if _eccfb !=nil {return nil ,_eccfb ;};}else {_cefgc ,_eccfb =_ffde .huffDecodeBmSize ();if _eccfb !=nil {return nil ,_eccfb ;};};_ffde ._acee .Align ();var _befg *_ge .Bitmap ;_befg ,_eccfb =_ffde .decodeHeightClassCollectiveBitmap (_cefgc ,uint32 (_cgadf ),_dea );
if _eccfb !=nil {return nil ,_eccfb ;};_eccfb =_ffde .decodeHeightClassBitmap (_befg ,_cfbd ,int (_cgadf ),_aefa );if _eccfb !=nil {return nil ,_eccfb ;};};};_dedf ,_eccfb :=_ffde .getToExportFlags ();if _eccfb !=nil {return nil ,_eccfb ;};_ffde .setExportedSymbols (_dedf );
};return _ffde ._dffbd ,nil ;};func (_gab *Header )parse (_agd Documenter ,_aaf _cb .StreamReader ,_cfgc int64 ,_dceb OrganizationType )(_bbgge error ){const _ecgc ="\u0070\u0061\u0072s\u0065";_gc .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u005b\u0050A\u0052\u0053\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");
defer func (){if _bbgge !=nil {_gc .Log .Trace ("\u005b\u0053\u0045GM\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045R\u005d[\u0050A\u0052S\u0045\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_bbgge );}else {_gc .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052]\u005bP\u0041\u0052\u0053\u0045\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
};}();_ ,_bbgge =_aaf .Seek (_cfgc ,_b .SeekStart );if _bbgge !=nil {return _cc .Wrap (_bbgge ,_ecgc ,"\u0073\u0065\u0065\u006b\u0020\u0073\u0074\u0061\u0072\u0074");};if _bbgge =_gab .readSegmentNumber (_aaf );_bbgge !=nil {return _cc .Wrap (_bbgge ,_ecgc ,"");
};if _bbgge =_gab .readHeaderFlags ();_bbgge !=nil {return _cc .Wrap (_bbgge ,_ecgc ,"");};var _fcaf uint64 ;_fcaf ,_bbgge =_gab .readNumberOfReferredToSegments (_aaf );if _bbgge !=nil {return _cc .Wrap (_bbgge ,_ecgc ,"");};_gab .RTSNumbers ,_bbgge =_gab .readReferredToSegmentNumbers (_aaf ,int (_fcaf ));
if _bbgge !=nil {return _cc .Wrap (_bbgge ,_ecgc ,"");};_bbgge =_gab .readSegmentPageAssociation (_agd ,_aaf ,_fcaf ,_gab .RTSNumbers ...);if _bbgge !=nil {return _cc .Wrap (_bbgge ,_ecgc ,"");};if _gab .Type !=TEndOfFile {if _bbgge =_gab .readSegmentDataLength (_aaf );
_bbgge !=nil {return _cc .Wrap (_bbgge ,_ecgc ,"");};};_gab .readDataStartOffset (_aaf ,_dceb );_gab .readHeaderLength (_aaf ,_cfgc );_gc .Log .Trace ("\u0025\u0073",_gab );return nil ;};func (_gbec *SymbolDictionary )Encode (w _cb .BinaryWriter )(_eedd int ,_dccd error ){const _efbf ="\u0053\u0079\u006dbo\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0045\u006e\u0063\u006f\u0064\u0065";
if _gbec ==nil {return 0,_cc .Error (_efbf ,"\u0073\u0079m\u0062\u006f\u006c\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066in\u0065\u0064");};if _eedd ,_dccd =_gbec .encodeFlags (w );_dccd !=nil {return _eedd ,_cc .Wrap (_dccd ,_efbf ,"");
};_dcfb ,_dccd :=_gbec .encodeATFlags (w );if _dccd !=nil {return _eedd ,_cc .Wrap (_dccd ,_efbf ,"");};_eedd +=_dcfb ;if _dcfb ,_dccd =_gbec .encodeRefinementATFlags (w );_dccd !=nil {return _eedd ,_cc .Wrap (_dccd ,_efbf ,"");};_eedd +=_dcfb ;if _dcfb ,_dccd =_gbec .encodeNumSyms (w );
_dccd !=nil {return _eedd ,_cc .Wrap (_dccd ,_efbf ,"");};_eedd +=_dcfb ;if _dcfb ,_dccd =_gbec .encodeSymbols (w );_dccd !=nil {return _eedd ,_cc .Wrap (_dccd ,_efbf ,"");};_eedd +=_dcfb ;return _eedd ,nil ;};func (_dfca *GenericRegion )decodeLine (_cde ,_age ,_fdfb int )error {const _acb ="\u0064\u0065\u0063\u006f\u0064\u0065\u004c\u0069\u006e\u0065";
_ecfa :=_dfca .Bitmap .GetByteIndex (0,_cde );_gac :=_ecfa -_dfca .Bitmap .RowStride ;switch _dfca .GBTemplate {case 0:if !_dfca .UseExtTemplates {return _dfca .decodeTemplate0a (_cde ,_age ,_fdfb ,_ecfa ,_gac );};return _dfca .decodeTemplate0b (_cde ,_age ,_fdfb ,_ecfa ,_gac );
case 1:return _dfca .decodeTemplate1 (_cde ,_age ,_fdfb ,_ecfa ,_gac );case 2:return _dfca .decodeTemplate2 (_cde ,_age ,_fdfb ,_ecfa ,_gac );case 3:return _dfca .decodeTemplate3 (_cde ,_age ,_fdfb ,_ecfa ,_gac );};return _cc .Errorf (_acb ,"\u0069\u006e\u0076a\u006c\u0069\u0064\u0020G\u0042\u0054\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u003a\u0020\u0025\u0064",_dfca .GBTemplate );
};func (_cfca *GenericRefinementRegion )decodeTypicalPredictedLineTemplate0 (_dg ,_ecf ,_bdeg ,_cce ,_dde ,_bcf ,_egd ,_gaa ,_fdd int )error {var (_ac ,_gaac ,_ee ,_cbf ,_dfc ,_ce int ;_bbb byte ;_bca error ;);if _dg > 0{_bbb ,_bca =_cfca .RegionBitmap .GetByte (_egd -_bdeg );
if _bca !=nil {return _bca ;};_ee =int (_bbb );};if _gaa > 0&&_gaa <=_cfca .ReferenceBitmap .Height {_bbb ,_bca =_cfca .ReferenceBitmap .GetByte (_fdd -_cce +_bcf );if _bca !=nil {return _bca ;};_cbf =int (_bbb )<<4;};if _gaa >=0&&_gaa < _cfca .ReferenceBitmap .Height {_bbb ,_bca =_cfca .ReferenceBitmap .GetByte (_fdd +_bcf );
if _bca !=nil {return _bca ;};_dfc =int (_bbb )<<1;};if _gaa > -2&&_gaa < _cfca .ReferenceBitmap .Height -1{_bbb ,_bca =_cfca .ReferenceBitmap .GetByte (_fdd +_cce +_bcf );if _bca !=nil {return _bca ;};_ce =int (_bbb );};_ac =((_ee >>5)&0x6)|((_ce >>2)&0x30)|(_dfc &0x180)|(_cbf &0xc00);
var _cfcc int ;for _cec :=0;_cec < _dde ;_cec =_cfcc {var _bcg int ;_cfcc =_cec +8;var _cab int ;if _cab =_ecf -_cec ;_cab > 8{_cab =8;};_efb :=_cfcc < _ecf ;_ag :=_cfcc < _cfca .ReferenceBitmap .Width ;_gffe :=_bcf +1;if _dg > 0{_bbb =0;if _efb {_bbb ,_bca =_cfca .RegionBitmap .GetByte (_egd -_bdeg +1);
if _bca !=nil {return _bca ;};};_ee =(_ee <<8)|int (_bbb );};if _gaa > 0&&_gaa <=_cfca .ReferenceBitmap .Height {var _fcd int ;if _ag {_bbb ,_bca =_cfca .ReferenceBitmap .GetByte (_fdd -_cce +_gffe );if _bca !=nil {return _bca ;};_fcd =int (_bbb )<<4;};
_cbf =(_cbf <<8)|_fcd ;};if _gaa >=0&&_gaa < _cfca .ReferenceBitmap .Height {var _eaa int ;if _ag {_bbb ,_bca =_cfca .ReferenceBitmap .GetByte (_fdd +_gffe );if _bca !=nil {return _bca ;};_eaa =int (_bbb )<<1;};_dfc =(_dfc <<8)|_eaa ;};if _gaa > -2&&_gaa < (_cfca .ReferenceBitmap .Height -1){_bbb =0;
if _ag {_bbb ,_bca =_cfca .ReferenceBitmap .GetByte (_fdd +_cce +_gffe );if _bca !=nil {return _bca ;};};_ce =(_ce <<8)|int (_bbb );};for _ggff :=0;_ggff < _cab ;_ggff ++{var _dcg int ;_abe :=false ;_aag :=(_ac >>4)&0x1ff;if _aag ==0x1ff{_abe =true ;_dcg =1;
}else if _aag ==0x00{_abe =true ;};if !_abe {if _cfca ._be {_gaac =_cfca .overrideAtTemplate0 (_ac ,_cec +_ggff ,_dg ,_bcg ,_ggff );_cfca ._ab .SetIndex (int32 (_gaac ));}else {_cfca ._ab .SetIndex (int32 (_ac ));};_dcg ,_bca =_cfca ._bdf .DecodeBit (_cfca ._ab );
if _bca !=nil {return _bca ;};};_gb :=uint (7-_ggff );_bcg |=_dcg <<_gb ;_ac =((_ac &0xdb6)<<1)|_dcg |(_ee >>_gb +5)&0x002|((_ce >>_gb +2)&0x010)|((_dfc >>_gb )&0x080)|((_cbf >>_gb )&0x400);};_bca =_cfca .RegionBitmap .SetByte (_egd ,byte (_bcg ));if _bca !=nil {return _bca ;
};_egd ++;_fdd ++;};return nil ;};func (_cbg *PageInformationSegment )Encode (w _cb .BinaryWriter )(_dafg int ,_febb error ){const _bbfa ="\u0050\u0061g\u0065\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u002e\u0045\u006eco\u0064\u0065";
_cebd :=make ([]byte ,4);_ff .BigEndian .PutUint32 (_cebd ,uint32 (_cbg .PageBMWidth ));_dafg ,_febb =w .Write (_cebd );if _febb !=nil {return _dafg ,_cc .Wrap (_febb ,_bbfa ,"\u0077\u0069\u0064t\u0068");};_ff .BigEndian .PutUint32 (_cebd ,uint32 (_cbg .PageBMHeight ));
var _fbgb int ;_fbgb ,_febb =w .Write (_cebd );if _febb !=nil {return _fbgb +_dafg ,_cc .Wrap (_febb ,_bbfa ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_dafg +=_fbgb ;_ff .BigEndian .PutUint32 (_cebd ,uint32 (_cbg .ResolutionX ));_fbgb ,_febb =w .Write (_cebd );
if _febb !=nil {return _fbgb +_dafg ,_cc .Wrap (_febb ,_bbfa ,"\u0078\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_dafg +=_fbgb ;_ff .BigEndian .PutUint32 (_cebd ,uint32 (_cbg .ResolutionY ));if _fbgb ,_febb =w .Write (_cebd );_febb !=nil {return _fbgb +_dafg ,_cc .Wrap (_febb ,_bbfa ,"\u0079\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");
};_dafg +=_fbgb ;if _febb =_cbg .encodeFlags (w );_febb !=nil {return _dafg ,_cc .Wrap (_febb ,_bbfa ,"");};_dafg ++;if _fbgb ,_febb =_cbg .encodeStripingInformation (w );_febb !=nil {return _dafg ,_cc .Wrap (_febb ,_bbfa ,"");};_dafg +=_fbgb ;return _dafg ,nil ;
};func (_fddc *GenericRegion )decodeTemplate3 (_aba ,_fcde ,_cgc int ,_ceb ,_bgbb int )(_cdg error ){const _ceac ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0033";var (_ageg ,_eec int ;_gfgd int ;_aead byte ;_gggf ,_cac int ;
);if _aba >=1{_aead ,_cdg =_fddc .Bitmap .GetByte (_bgbb );if _cdg !=nil {return _cc .Wrap (_cdg ,_ceac ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_gfgd =int (_aead );};_ageg =(_gfgd >>1)&0x70;for _fgad :=0;_fgad < _cgc ;_fgad =_gggf {var (_aacd byte ;
_eaag int ;);_gggf =_fgad +8;if _ecg :=_fcde -_fgad ;_ecg > 8{_eaag =8;}else {_eaag =_ecg ;};if _aba >=1{_gfgd <<=8;if _gggf < _fcde {_aead ,_cdg =_fddc .Bitmap .GetByte (_bgbb +1);if _cdg !=nil {return _cc .Wrap (_cdg ,_ceac ,"\u0069\u006e\u006e\u0065\u0072\u0020\u002d\u0020\u006c\u0069\u006e\u0065 \u003e\u003d\u0020\u0031");
};_gfgd |=int (_aead );};};for _bdc :=0;_bdc < _eaag ;_bdc ++{if _fddc ._ffff {_eec =_fddc .overrideAtTemplate3 (_ageg ,_fgad +_bdc ,_aba ,int (_aacd ),_bdc );_fddc ._efde .SetIndex (int32 (_eec ));}else {_fddc ._efde .SetIndex (int32 (_ageg ));};_cac ,_cdg =_fddc ._efe .DecodeBit (_fddc ._efde );
if _cdg !=nil {return _cc .Wrap (_cdg ,_ceac ,"");};_aacd |=byte (_cac )<<byte (7-_bdc );_ageg =((_ageg &0x1f7)<<1)|_cac |((_gfgd >>uint (8-_bdc ))&0x010);};if _ffcd :=_fddc .Bitmap .SetByte (_ceb ,_aacd );_ffcd !=nil {return _cc .Wrap (_ffcd ,_ceac ,"");
};_ceb ++;_bgbb ++;};return nil ;};func (_ga *GenericRefinementRegion )getGrReference ()(*_ge .Bitmap ,error ){segments :=_ga ._dc .RTSegments ;if len (segments )==0{return nil ,_fe .New ("\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0065\u0078is\u0074\u0073");
};_ea ,_ddf :=segments [0].GetSegmentData ();if _ddf !=nil {return nil ,_ddf ;};_dag ,_dee :=_ea .(Regioner );if !_dee {return nil ,_fga .Errorf ("\u0072\u0065\u0066\u0065\u0072r\u0065\u0064\u0020\u0074\u006f\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_ea );
};return _dag .GetRegionBitmap ();};func (_bggd *GenericRegion )decodeTemplate2 (_ebe ,_bcce ,_cfa int ,_bfec ,_acbfa int )(_dga error ){const _ccd ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0032";var (_bag ,_afc int ;
_acgg ,_cgee int ;_caeg byte ;_agfd ,_egee int ;);if _ebe >=1{_caeg ,_dga =_bggd .Bitmap .GetByte (_acbfa );if _dga !=nil {return _cc .Wrap (_dga ,_ccd ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0031");};_acgg =int (_caeg );
};if _ebe >=2{_caeg ,_dga =_bggd .Bitmap .GetByte (_acbfa -_bggd .Bitmap .RowStride );if _dga !=nil {return _cc .Wrap (_dga ,_ccd ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0032");};_cgee =int (_caeg )<<4;};_bag =(_acgg >>3&0x7c)|(_cgee >>3&0x380);
for _cbe :=0;_cbe < _cfa ;_cbe =_agfd {var (_dfec byte ;_dbf int ;);_agfd =_cbe +8;if _dafc :=_bcce -_cbe ;_dafc > 8{_dbf =8;}else {_dbf =_dafc ;};if _ebe > 0{_acgg <<=8;if _agfd < _bcce {_caeg ,_dga =_bggd .Bitmap .GetByte (_acbfa +1);if _dga !=nil {return _cc .Wrap (_dga ,_ccd ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0030");
};_acgg |=int (_caeg );};};if _ebe > 1{_cgee <<=8;if _agfd < _bcce {_caeg ,_dga =_bggd .Bitmap .GetByte (_acbfa -_bggd .Bitmap .RowStride +1);if _dga !=nil {return _cc .Wrap (_dga ,_ccd ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0031");
};_cgee |=int (_caeg )<<4;};};for _ced :=0;_ced < _dbf ;_ced ++{_bagd :=uint (10-_ced );if _bggd ._ffff {_afc =_bggd .overrideAtTemplate2 (_bag ,_cbe +_ced ,_ebe ,int (_dfec ),_ced );_bggd ._efde .SetIndex (int32 (_afc ));}else {_bggd ._efde .SetIndex (int32 (_bag ));
};_egee ,_dga =_bggd ._efe .DecodeBit (_bggd ._efde );if _dga !=nil {return _cc .Wrap (_dga ,_ccd ,"");};_dfec |=byte (_egee <<uint (7-_ced ));_bag =((_bag &0x1bd)<<1)|_egee |((_acgg >>_bagd )&0x4)|((_cgee >>_bagd )&0x80);};if _beg :=_bggd .Bitmap .SetByte (_bfec ,_dfec );
_beg !=nil {return _cc .Wrap (_beg ,_ccd ,"");};_bfec ++;_acbfa ++;};return nil ;};func (_dfa *GenericRegion )decodeTemplate0a (_baf ,_egaf ,_def int ,_edg ,_ecaa int )(_gad error ){const _cbbg ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0061";
var (_bdg ,_cfb int ;_caeea ,_aaae int ;_cbfa byte ;_eddd int ;);if _baf >=1{_cbfa ,_gad =_dfa .Bitmap .GetByte (_ecaa );if _gad !=nil {return _cc .Wrap (_gad ,_cbbg ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_caeea =int (_cbfa );};if _baf >=2{_cbfa ,_gad =_dfa .Bitmap .GetByte (_ecaa -_dfa .Bitmap .RowStride );
if _gad !=nil {return _cc .Wrap (_gad ,_cbbg ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_aaae =int (_cbfa )<<6;};_bdg =(_caeea &0xf0)|(_aaae &0x3800);for _aaaec :=0;_aaaec < _def ;_aaaec =_eddd {var (_ffeee byte ;_ebb int ;);_eddd =_aaaec +8;if _ggdd :=_egaf -_aaaec ;
_ggdd > 8{_ebb =8;}else {_ebb =_ggdd ;};if _baf > 0{_caeea <<=8;if _eddd < _egaf {_cbfa ,_gad =_dfa .Bitmap .GetByte (_ecaa +1);if _gad !=nil {return _cc .Wrap (_gad ,_cbbg ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_caeea |=int (_cbfa );};
};if _baf > 1{_fed :=_ecaa -_dfa .Bitmap .RowStride +1;_aaae <<=8;if _eddd < _egaf {_cbfa ,_gad =_dfa .Bitmap .GetByte (_fed );if _gad !=nil {return _cc .Wrap (_gad ,_cbbg ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_aaae |=int (_cbfa )<<6;}else {_aaae |=0;
};};for _ege :=0;_ege < _ebb ;_ege ++{_afe :=uint (7-_ege );if _dfa ._ffff {_cfb =_dfa .overrideAtTemplate0a (_bdg ,_aaaec +_ege ,_baf ,int (_ffeee ),_ege ,int (_afe ));_dfa ._efde .SetIndex (int32 (_cfb ));}else {_dfa ._efde .SetIndex (int32 (_bdg ));
};var _acbf int ;_acbf ,_gad =_dfa ._efe .DecodeBit (_dfa ._efde );if _gad !=nil {return _cc .Wrap (_gad ,_cbbg ,"");};_ffeee |=byte (_acbf )<<_afe ;_bdg =((_bdg &0x7bf7)<<1)|_acbf |((_caeea >>_afe )&0x10)|((_aaae >>_afe )&0x800);};if _cdf :=_dfa .Bitmap .SetByte (_edg ,_ffeee );
_cdf !=nil {return _cc .Wrap (_cdf ,_cbbg ,"");};_edg ++;_ecaa ++;};return nil ;};func (_cggg *SymbolDictionary )encodeSymbols (_badf _cb .BinaryWriter )(_cecf int ,_ebee error ){const _gefb ="\u0065\u006e\u0063o\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c";
_egdgf :=_cf .New ();_egdgf .Init ();_gae ,_ebee :=_cggg ._eeca .SelectByIndexes (_cggg ._agag );if _ebee !=nil {return 0,_cc .Wrap (_ebee ,_gefb ,"\u0069n\u0069\u0074\u0069\u0061\u006c");};_ece :=map[*_ge .Bitmap ]int {};for _bgdd ,_bgaa :=range _gae .Values {_ece [_bgaa ]=_bgdd ;
};_gae .SortByHeight ();var _eea ,_dged int ;_afag ,_ebee :=_gae .GroupByHeight ();if _ebee !=nil {return 0,_cc .Wrap (_ebee ,_gefb ,"");};for _ ,_gcf :=range _afag .Values {_agec :=_gcf .Values [0].Height ;_abad :=_agec -_eea ;if _ebee =_egdgf .EncodeInteger (_cf .IADH ,_abad );
_ebee !=nil {return 0,_cc .Wrapf (_ebee ,_gefb ,"\u0049\u0041\u0044\u0048\u0020\u0066\u006f\u0072\u0020\u0064\u0068\u003a \u0027\u0025\u0064\u0027",_abad );};_eea =_agec ;_caeee ,_egdgg :=_gcf .GroupByWidth ();if _egdgg !=nil {return 0,_cc .Wrapf (_egdgg ,_gefb ,"\u0068\u0065\u0069g\u0068\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_agec );
};var _faef int ;for _ ,_eafda :=range _caeee .Values {for _ ,_gaec :=range _eafda .Values {_cefg :=_gaec .Width ;_egeb :=_cefg -_faef ;if _egdgg =_egdgf .EncodeInteger (_cf .IADW ,_egeb );_egdgg !=nil {return 0,_cc .Wrapf (_egdgg ,_gefb ,"\u0049\u0041\u0044\u0057\u0020\u0066\u006f\u0072\u0020\u0064\u0077\u003a \u0027\u0025\u0064\u0027",_egeb );
};_faef +=_egeb ;if _egdgg =_egdgf .EncodeBitmap (_gaec ,false );_egdgg !=nil {return 0,_cc .Wrapf (_egdgg ,_gefb ,"H\u0065i\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u0020W\u0069\u0064\u0074\u0068: \u0025\u0064",_agec ,_cefg );};_gaecb :=_ece [_gaec ];
_cggg ._affa [_gaecb ]=_dged ;_dged ++;};};if _egdgg =_egdgf .EncodeOOB (_cf .IADW );_egdgg !=nil {return 0,_cc .Wrap (_egdgg ,_gefb ,"\u0049\u0041\u0044\u0057");};};if _ebee =_egdgf .EncodeInteger (_cf .IAEX ,0);_ebee !=nil {return 0,_cc .Wrap (_ebee ,_gefb ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};if _ebee =_egdgf .EncodeInteger (_cf .IAEX ,len (_cggg ._agag ));_ebee !=nil {return 0,_cc .Wrap (_ebee ,_gefb ,"\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0073\u0079m\u0062\u006f\u006c\u0073");};_egdgf .Final ();_egfgf ,_ebee :=_egdgf .WriteTo (_badf );
if _ebee !=nil {return 0,_cc .Wrap (_ebee ,_gefb ,"\u0077\u0072i\u0074\u0069\u006e\u0067 \u0065\u006ec\u006f\u0064\u0065\u0072\u0020\u0063\u006f\u006et\u0065\u0078\u0074\u0020\u0074\u006f\u0020\u0027\u0077\u0027\u0020\u0077r\u0069\u0074\u0065\u0072");};
return int (_egfgf ),nil ;};func (_fgcd *SymbolDictionary )readNumberOfExportedSymbols ()error {_ggfa ,_dage :=_fgcd ._acee .ReadBits (32);if _dage !=nil {return _dage ;};_fgcd .NumberOfExportedSymbols =uint32 (_ggfa &_fg .MaxUint32 );return nil ;};type template1 struct{};
func (_ccc *SymbolDictionary )Init (h *Header ,r _cb .StreamReader )error {_ccc .Header =h ;_ccc ._acee =r ;return _ccc .parseHeader ();};func (_cdagg *TextRegion )readAmountOfSymbolInstances ()error {_fgfff ,_cfee :=_cdagg ._ceace .ReadBits (32);if _cfee !=nil {return _cfee ;
};_cdagg .NumberOfSymbolInstances =uint32 (_fgfff &_fg .MaxUint32 );_cgggc :=_cdagg .RegionInfo .BitmapWidth *_cdagg .RegionInfo .BitmapHeight ;if _cgggc < _cdagg .NumberOfSymbolInstances {_gc .Log .Debug ("\u004c\u0069\u006d\u0069t\u0069\u006e\u0067\u0020t\u0068\u0065\u0020n\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020d\u0065\u0063\u006f\u0064e\u0064\u0020\u0073\u0079m\u0062\u006f\u006c\u0020\u0069n\u0073\u0074\u0061\u006e\u0063\u0065\u0073 \u0074\u006f\u0020\u006f\u006ee\u0020\u0070\u0065\u0072\u0020\u0070\u0069\u0078\u0065l\u0020\u0028\u0020\u0025\u0064\u0020\u0069\u006e\u0073\u0074\u0065\u0061\u0064\u0020\u006f\u0066\u0020\u0025\u0064\u0029",_cgggc ,_cdagg .NumberOfSymbolInstances );
_cdagg .NumberOfSymbolInstances =_cgggc ;};return nil ;};type SymbolDictionary struct{_acee _cb .StreamReader ;SdrTemplate int8 ;SdTemplate int8 ;_fgff bool ;_cddc bool ;SdHuffAggInstanceSelection bool ;SdHuffBMSizeSelection int8 ;SdHuffDecodeWidthSelection int8 ;
SdHuffDecodeHeightSelection int8 ;UseRefinementAggregation bool ;IsHuffmanEncoded bool ;SdATX []int8 ;SdATY []int8 ;SdrATX []int8 ;SdrATY []int8 ;NumberOfExportedSymbols uint32 ;NumberOfNewSymbols uint32 ;Header *Header ;_gbg uint32 ;_ecgb []*_ge .Bitmap ;
_gdcc uint32 ;_ddd []*_ge .Bitmap ;_aeaf _gf .Tabler ;_bea _gf .Tabler ;_acf _gf .Tabler ;_begf _gf .Tabler ;_dffbd []*_ge .Bitmap ;_dcae []*_ge .Bitmap ;_bdaa *_bg .Decoder ;_gcgg *TextRegion ;_dbbb *GenericRegion ;_cfba *GenericRefinementRegion ;_ddce *_bg .DecoderStats ;
_afbc *_bg .DecoderStats ;_gggcc *_bg .DecoderStats ;_dfaf *_bg .DecoderStats ;_bbggc *_bg .DecoderStats ;_eaee *_bg .DecoderStats ;_abbe *_bg .DecoderStats ;_bbfe *_bg .DecoderStats ;_edacf *_bg .DecoderStats ;_agdb int8 ;_eeca *_ge .Bitmaps ;_agag []int ;
_affa map[int ]int ;_egdga bool ;};func (_bbcf *PatternDictionary )GetDictionary ()([]*_ge .Bitmap ,error ){if _bbcf .Patterns !=nil {return _bbcf .Patterns ,nil ;};if !_bbcf .IsMMREncoded {_bbcf .setGbAtPixels ();};_eece :=NewGenericRegion (_bbcf ._afcf );
_eece .setParametersMMR (_bbcf .IsMMREncoded ,_bbcf .DataOffset ,_bbcf .DataLength ,uint32 (_bbcf .HdpHeight ),(_bbcf .GrayMax +1)*uint32 (_bbcf .HdpWidth ),_bbcf .HDTemplate ,false ,false ,_bbcf .GBAtX ,_bbcf .GBAtY );_adff ,_gfb :=_eece .GetRegionBitmap ();
if _gfb !=nil {return nil ,_gfb ;};if _gfb =_bbcf .extractPatterns (_adff );_gfb !=nil {return nil ,_gfb ;};return _bbcf .Patterns ,nil ;};func (_dfda *SymbolDictionary )readRegionFlags ()error {var (_bdga uint64 ;_cagd int ;);_ ,_gecda :=_dfda ._acee .ReadBits (3);
if _gecda !=nil {return _gecda ;};_cagd ,_gecda =_dfda ._acee .ReadBit ();if _gecda !=nil {return _gecda ;};_dfda .SdrTemplate =int8 (_cagd );_bdga ,_gecda =_dfda ._acee .ReadBits (2);if _gecda !=nil {return _gecda ;};_dfda .SdTemplate =int8 (_bdga &0xf);
_cagd ,_gecda =_dfda ._acee .ReadBit ();if _gecda !=nil {return _gecda ;};if _cagd ==1{_dfda ._fgff =true ;};_cagd ,_gecda =_dfda ._acee .ReadBit ();if _gecda !=nil {return _gecda ;};if _cagd ==1{_dfda ._cddc =true ;};_cagd ,_gecda =_dfda ._acee .ReadBit ();
if _gecda !=nil {return _gecda ;};if _cagd ==1{_dfda .SdHuffAggInstanceSelection =true ;};_cagd ,_gecda =_dfda ._acee .ReadBit ();if _gecda !=nil {return _gecda ;};_dfda .SdHuffBMSizeSelection =int8 (_cagd );_bdga ,_gecda =_dfda ._acee .ReadBits (2);if _gecda !=nil {return _gecda ;
};_dfda .SdHuffDecodeWidthSelection =int8 (_bdga &0xf);_bdga ,_gecda =_dfda ._acee .ReadBits (2);if _gecda !=nil {return _gecda ;};_dfda .SdHuffDecodeHeightSelection =int8 (_bdga &0xf);_cagd ,_gecda =_dfda ._acee .ReadBit ();if _gecda !=nil {return _gecda ;
};if _cagd ==1{_dfda .UseRefinementAggregation =true ;};_cagd ,_gecda =_dfda ._acee .ReadBit ();if _gecda !=nil {return _gecda ;};if _cagd ==1{_dfda .IsHuffmanEncoded =true ;};return nil ;};const (TSymbolDictionary Type =0;TIntermediateTextRegion Type =4;
TImmediateTextRegion Type =6;TImmediateLosslessTextRegion Type =7;TPatternDictionary Type =16;TIntermediateHalftoneRegion Type =20;TImmediateHalftoneRegion Type =22;TImmediateLosslessHalftoneRegion Type =23;TIntermediateGenericRegion Type =36;TImmediateGenericRegion Type =38;
TImmediateLosslessGenericRegion Type =39;TIntermediateGenericRefinementRegion Type =40;TImmediateGenericRefinementRegion Type =42;TImmediateLosslessGenericRefinementRegion Type =43;TPageInformation Type =48;TEndOfPage Type =49;TEndOfStrip Type =50;TEndOfFile Type =51;
TProfiles Type =52;TTables Type =53;TExtension Type =62;TBitmap Type =70;);func (_fgda *SymbolDictionary )setRetainedCodingContexts (_ceba *SymbolDictionary ){_fgda ._bdaa =_ceba ._bdaa ;_fgda .IsHuffmanEncoded =_ceba .IsHuffmanEncoded ;_fgda .UseRefinementAggregation =_ceba .UseRefinementAggregation ;
_fgda .SdTemplate =_ceba .SdTemplate ;_fgda .SdrTemplate =_ceba .SdrTemplate ;_fgda .SdATX =_ceba .SdATX ;_fgda .SdATY =_ceba .SdATY ;_fgda .SdrATX =_ceba .SdrATX ;_fgda .SdrATY =_ceba .SdrATY ;_fgda ._ddce =_ceba ._ddce ;};func (_acg *GenericRegion )Size ()int {return _acg .RegionSegment .Size ()+1+2*len (_acg .GBAtX )};
func (_egcc *SymbolDictionary )decodeThroughTextRegion (_bece ,_bdcb ,_bbgcf uint32 )error {if _egcc ._gcgg ==nil {_egcc ._gcgg =_edfg (_egcc ._acee ,nil );_egcc ._gcgg .setContexts (_egcc ._ddce ,_bg .NewStats (512,1),_bg .NewStats (512,1),_bg .NewStats (512,1),_bg .NewStats (512,1),_egcc ._edacf ,_bg .NewStats (512,1),_bg .NewStats (512,1),_bg .NewStats (512,1),_bg .NewStats (512,1));
};if _cgcb :=_egcc .setSymbolsArray ();_cgcb !=nil {return _cgcb ;};_egcc ._gcgg .setParameters (_egcc ._bdaa ,_egcc .IsHuffmanEncoded ,true ,_bece ,_bdcb ,_bbgcf ,1,_egcc ._gbg +_egcc ._gdcc ,0,0,0,1,0,0,0,0,0,0,0,0,0,_egcc .SdrTemplate ,_egcc .SdrATX ,_egcc .SdrATY ,_egcc ._dcae ,_egcc ._agdb );
return _egcc .addSymbol (_egcc ._gcgg );};func (_edad *PatternDictionary )readPatternWidthAndHeight ()error {_eccf ,_ffeb :=_edad ._afcf .ReadByte ();if _ffeb !=nil {return _ffeb ;};_edad .HdpWidth =_eccf ;_eccf ,_ffeb =_edad ._afcf .ReadByte ();if _ffeb !=nil {return _ffeb ;
};_edad .HdpHeight =_eccf ;return nil ;};func (_bcda *HalftoneRegion )Init (hd *Header ,r _cb .StreamReader )error {_bcda ._eabf =r ;_bcda ._ddcgf =hd ;_bcda .RegionSegment =NewRegionSegment (r );return _bcda .parseHeader ();};func (_gdce *SymbolDictionary )decodeAggregate (_caec ,_caffc uint32 )error {var (_fgee int64 ;
_becg error ;);if _gdce .IsHuffmanEncoded {_fgee ,_becg =_gdce .huffDecodeRefAggNInst ();if _becg !=nil {return _becg ;};}else {_fedg ,_agef :=_gdce ._bdaa .DecodeInt (_gdce ._dfaf );if _agef !=nil {return _agef ;};_fgee =int64 (_fedg );};if _fgee > 1{return _gdce .decodeThroughTextRegion (_caec ,_caffc ,uint32 (_fgee ));
}else if _fgee ==1{return _gdce .decodeRefinedSymbol (_caec ,_caffc );};return nil ;};func (_dfbd *HalftoneRegion )GetPatterns ()([]*_ge .Bitmap ,error ){var (_bcef []*_ge .Bitmap ;_eeee error ;);for _ ,_fbg :=range _dfbd ._ddcgf .RTSegments {var _edeg Segmenter ;
_edeg ,_eeee =_fbg .GetSegmentData ();if _eeee !=nil {_gc .Log .Debug ("\u0047e\u0074\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061 \u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025v",_eeee );return nil ,_eeee ;};_fbef ,_gddg :=_edeg .(*PatternDictionary );
if !_gddg {_eeee =_fga .Errorf ("\u0072e\u006c\u0061t\u0065\u0064\u0020\u0073e\u0067\u006d\u0065n\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0070at\u0074\u0065\u0072n\u0020\u0064i\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u003a \u0025\u0054",_edeg );
return nil ,_eeee ;};var _bgdc []*_ge .Bitmap ;_bgdc ,_eeee =_fbef .GetDictionary ();if _eeee !=nil {_gc .Log .Debug ("\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_eeee );
return nil ,_eeee ;};_bcef =append (_bcef ,_bgdc ...);};return _bcef ,nil ;};func (_dgd *GenericRegion )String ()string {_fgg :=&_bd .Builder {};_fgg .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");
_fgg .WriteString (_dgd .RegionSegment .String ()+"\u000a");_fgg .WriteString (_fga .Sprintf ("\u0009\u002d\u0020Us\u0065\u0045\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_dgd .UseExtTemplates ));_fgg .WriteString (_fga .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0044\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_dgd .IsTPGDon ));
_fgg .WriteString (_fga .Sprintf ("\u0009-\u0020G\u0042\u0054\u0065\u006d\u0070l\u0061\u0074e\u003a\u0020\u0025\u0064\u000a",_dgd .GBTemplate ));_fgg .WriteString (_fga .Sprintf ("\t\u002d \u0049\u0073\u004d\u004d\u0052\u0045\u006e\u0063o\u0064\u0065\u0064\u003a %\u0076\u000a",_dgd .IsMMREncoded ));
_fgg .WriteString (_fga .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_dgd .GBAtX ));_fgg .WriteString (_fga .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_dgd .GBAtY ));
_fgg .WriteString (_fga .Sprintf ("\t\u002d \u0047\u0042\u0041\u0074\u004f\u0076\u0065\u0072r\u0069\u0064\u0065\u003a %\u0076\u000a",_dgd .GBAtOverride ));return _fgg .String ();};func (_dadc *Header )writeFlags (_debb _cb .BinaryWriter )(_gddb error ){const _gabd ="\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065F\u006c\u0061\u0067\u0073";
_efbg :=byte (_dadc .Type );if _gddb =_debb .WriteByte (_efbg );_gddb !=nil {return _cc .Wrap (_gddb ,_gabd ,"\u0077\u0072\u0069ti\u006e\u0067\u0020\u0073\u0065\u0067\u006d\u0065\u006et\u0020t\u0079p\u0065 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};if !_dadc .RetainFlag &&!_dadc .PageAssociationFieldSize {return nil ;};if _gddb =_debb .SkipBits (-8);_gddb !=nil {return _cc .Wrap (_gddb ,_gabd ,"\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0062\u0061\u0063\u006b\u0020\u0074\u0068\u0065\u0020\u0062\u0069\u0074\u0073\u0020\u0066\u0061il\u0065\u0064");
};var _gcd int ;if _dadc .RetainFlag {_gcd =1;};if _gddb =_debb .WriteBit (_gcd );_gddb !=nil {return _cc .Wrap (_gddb ,_gabd ,"\u0072\u0065\u0074\u0061in\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067\u0073");};_gcd =0;if _dadc .PageAssociationFieldSize {_gcd =1;
};if _gddb =_debb .WriteBit (_gcd );_gddb !=nil {return _cc .Wrap (_gddb ,_gabd ,"p\u0061\u0067\u0065\u0020as\u0073o\u0063\u0069\u0061\u0074\u0069o\u006e\u0020\u0066\u006c\u0061\u0067");};_debb .FinishByte ();return nil ;};func (_acgf *TextRegion )computeSymbolCodeLength ()error {if _acgf .IsHuffmanEncoded {return _acgf .symbolIDCodeLengths ();
};_acgf ._ggeg =int8 (_fg .Ceil (_fg .Log (float64 (_acgf .NumberOfSymbols ))/_fg .Log (2)));return nil ;};func (_ebd *Header )readHeaderLength (_fedd _cb .StreamReader ,_bbd int64 ){_ebd .HeaderLength =_fedd .StreamPosition ()-_bbd ;};func (_aab *GenericRegion )Init (h *Header ,r _cb .StreamReader )error {_aab .RegionSegment =NewRegionSegment (r );
_aab ._cee =r ;return _aab .parseHeader ();};func (_dcafa *SymbolDictionary )setCodingStatistics ()error {if _dcafa ._bbfe ==nil {_dcafa ._bbfe =_bg .NewStats (512,1);};if _dcafa ._afbc ==nil {_dcafa ._afbc =_bg .NewStats (512,1);};if _dcafa ._gggcc ==nil {_dcafa ._gggcc =_bg .NewStats (512,1);
};if _dcafa ._dfaf ==nil {_dcafa ._dfaf =_bg .NewStats (512,1);};if _dcafa ._bbggc ==nil {_dcafa ._bbggc =_bg .NewStats (512,1);};if _dcafa .UseRefinementAggregation &&_dcafa ._edacf ==nil {_dcafa ._edacf =_bg .NewStats (1<<uint (_dcafa ._agdb ),1);_dcafa ._eaee =_bg .NewStats (512,1);
_dcafa ._abbe =_bg .NewStats (512,1);};if _dcafa ._ddce ==nil {_dcafa ._ddce =_bg .NewStats (65536,1);};if _dcafa ._bdaa ==nil {var _bbde error ;_dcafa ._bdaa ,_bbde =_bg .New (_dcafa ._acee );if _bbde !=nil {return _bbde ;};};return nil ;};func (_cbbae *Header )readNumberOfReferredToSegments (_ceceg _cb .StreamReader )(uint64 ,error ){const _bggac ="\u0072\u0065\u0061\u0064\u004e\u0075\u006d\u0062\u0065\u0072O\u0066\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
_gbac ,_fdb :=_ceceg .ReadBits (3);if _fdb !=nil {return 0,_cc .Wrap (_fdb ,_bggac ,"\u0063\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0072\u0074\u0073");};_gbac &=0xf;var _cefa []byte ;if _gbac <=4{_cefa =make ([]byte ,5);for _fccf :=0;_fccf <=4;_fccf ++{_edce ,_bdfe :=_ceceg .ReadBit ();
if _bdfe !=nil {return 0,_cc .Wrap (_bdfe ,_bggac ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_cefa [_fccf ]=byte (_edce );};}else {_gbac ,_fdb =_ceceg .ReadBits (29);if _fdb !=nil {return 0,_fdb ;};_gbac &=_fg .MaxInt32 ;
_fgdb :=(_gbac +8)>>3;_fgdb <<=3;_cefa =make ([]byte ,_fgdb );var _bacb uint64 ;for _bacb =0;_bacb < _fgdb ;_bacb ++{_ddge ,_aced :=_ceceg .ReadBit ();if _aced !=nil {return 0,_cc .Wrap (_aced ,_bggac ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");
};_cefa [_bacb ]=byte (_ddge );};};return _gbac ,nil ;};func (_bdgf *PageInformationSegment )readContainsRefinement ()error {_bggc ,_fcdd :=_bdgf ._gadb .ReadBit ();if _fcdd !=nil {return _fcdd ;};if _bggc ==1{_bdgf ._efdef =true ;};return nil ;};type HalftoneRegion struct{_eabf _cb .StreamReader ;
_ddcgf *Header ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;HDefaultPixel int8 ;CombinationOperator _ge .CombinationOperator ;HSkipEnabled bool ;HTemplate byte ;IsMMREncoded bool ;HGridWidth uint32 ;
HGridHeight uint32 ;HGridX int32 ;HGridY int32 ;HRegionX uint16 ;HRegionY uint16 ;HalftoneRegionBitmap *_ge .Bitmap ;Patterns []*_ge .Bitmap ;};func (_cgad *GenericRefinementRegion )overrideAtTemplate0 (_cba ,_cfg ,_ecff ,_edf ,_ede int )int {if _cgad ._dd [0]{_cba &=0xfff7;
if _cgad .GrAtY [0]==0&&int (_cgad .GrAtX [0])>=-_ede {_cba |=(_edf >>uint (7-(_ede +int (_cgad .GrAtX [0])))&0x1)<<3;}else {_cba |=_cgad .getPixel (_cgad .RegionBitmap ,_cfg +int (_cgad .GrAtX [0]),_ecff +int (_cgad .GrAtY [0]))<<3;};};if _cgad ._dd [1]{_cba &=0xefff;
if _cgad .GrAtY [1]==0&&int (_cgad .GrAtX [1])>=-_ede {_cba |=(_edf >>uint (7-(_ede +int (_cgad .GrAtX [1])))&0x1)<<12;}else {_cba |=_cgad .getPixel (_cgad .ReferenceBitmap ,_cfg +int (_cgad .GrAtX [1]),_ecff +int (_cgad .GrAtY [1]));};};return _cba ;};
func (_edc *template0 )setIndex (_fbf *_bg .DecoderStats ){_fbf .SetIndex (0x100)};func (_fca *GenericRefinementRegion )String ()string {_gcgd :=&_bd .Builder {};_gcgd .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");
_gcgd .WriteString (_fca .RegionInfo .String ()+"\u000a");_gcgd .WriteString (_fga .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0052\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_fca .IsTPGROn ));_gcgd .WriteString (_fga .Sprintf ("\u0009-\u0020T\u0065\u006d\u0070\u006c\u0061t\u0065\u0049D\u003a\u0020\u0025\u0076\u000a",_fca .TemplateID ));
_gcgd .WriteString (_fga .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_fca .GrAtX ));_gcgd .WriteString (_fga .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_fca .GrAtY ));
_gcgd .WriteString (_fga .Sprintf ("\u0009-\u0020R\u0065\u0066\u0065\u0072\u0065n\u0063\u0065D\u0058\u0020\u0025\u0076\u000a",_fca .ReferenceDX ));_gcgd .WriteString (_fga .Sprintf ("\u0009\u002d\u0020\u0052ef\u0065\u0072\u0065\u006e\u0063\u0044\u0065\u0059\u003a\u0020\u0025\u0076\u000a",_fca .ReferenceDY ));
return _gcgd .String ();};func (_afb *HalftoneRegion )grayScaleDecoding (_geca int )([][]int ,error ){var (_bgc []int8 ;_ggfc []int8 ;);if !_afb .IsMMREncoded {_bgc =make ([]int8 ,4);_ggfc =make ([]int8 ,4);if _afb .HTemplate <=1{_bgc [0]=3;}else if _afb .HTemplate >=2{_bgc [0]=2;
};_ggfc [0]=-1;_bgc [1]=-3;_ggfc [1]=-1;_bgc [2]=2;_ggfc [2]=-2;_bgc [3]=-2;_ggfc [3]=-2;};_afa :=make ([]*_ge .Bitmap ,_geca );_bdag :=NewGenericRegion (_afb ._eabf );_bdag .setParametersMMR (_afb .IsMMREncoded ,_afb .DataOffset ,_afb .DataLength ,_afb .HGridHeight ,_afb .HGridWidth ,_afb .HTemplate ,false ,_afb .HSkipEnabled ,_bgc ,_ggfc );
_fbde :=_geca -1;var _bbge error ;_afa [_fbde ],_bbge =_bdag .GetRegionBitmap ();if _bbge !=nil {return nil ,_bbge ;};for _fbde > 0{_fbde --;_bdag .Bitmap =nil ;_afa [_fbde ],_bbge =_bdag .GetRegionBitmap ();if _bbge !=nil {return nil ,_bbge ;};if _bbge =_afb .combineGrayscalePlanes (_afa ,_fbde );
_bbge !=nil {return nil ,_bbge ;};};return _afb .computeGrayScalePlanes (_afa ,_geca );};type PageInformationSegment struct{_gadb _cb .StreamReader ;PageBMHeight int ;PageBMWidth int ;ResolutionX int ;ResolutionY int ;_cefc bool ;_daad _ge .CombinationOperator ;
_afgb bool ;DefaultPixelValue uint8 ;_efdef bool ;IsLossless bool ;IsStripe bool ;MaxStripeSize uint16 ;};func (_acbd *TextRegion )setParameters (_eddbg *_bg .Decoder ,_fdgaa ,_gded bool ,_bgfa ,_ffdea uint32 ,_abdc uint32 ,_abbfab int8 ,_cffcc uint32 ,_fcgfe int8 ,_adgb _ge .CombinationOperator ,_edgba int8 ,_ebec int16 ,_bfag ,_dcdgc ,_bfgb ,_ababg ,_efffd ,_ffbbc ,_degd ,_afaf ,_fgdc ,_bbbb int8 ,_bdgff ,_cgac []int8 ,_fabag []*_ge .Bitmap ,_fegf int8 ){_acbd ._cfcae =_eddbg ;
_acbd .IsHuffmanEncoded =_fdgaa ;_acbd .UseRefinement =_gded ;_acbd .RegionInfo .BitmapWidth =_bgfa ;_acbd .RegionInfo .BitmapHeight =_ffdea ;_acbd .NumberOfSymbolInstances =_abdc ;_acbd .SbStrips =_abbfab ;_acbd .NumberOfSymbols =_cffcc ;_acbd .DefaultPixel =_fcgfe ;
_acbd .CombinationOperator =_adgb ;_acbd .IsTransposed =_edgba ;_acbd .ReferenceCorner =_ebec ;_acbd .SbDsOffset =_bfag ;_acbd .SbHuffFS =_dcdgc ;_acbd .SbHuffDS =_bfgb ;_acbd .SbHuffDT =_ababg ;_acbd .SbHuffRDWidth =_efffd ;_acbd .SbHuffRDHeight =_ffbbc ;
_acbd .SbHuffRSize =_fgdc ;_acbd .SbHuffRDX =_degd ;_acbd .SbHuffRDY =_afaf ;_acbd .SbrTemplate =_bbbb ;_acbd .SbrATX =_bdgff ;_acbd .SbrATY =_cgac ;_acbd .Symbols =_fabag ;_acbd ._ggeg =_fegf ;};func (_abbb *TextRegion )decodeCurrentT ()(int64 ,error ){if _abbb .SbStrips !=1{if _abbb .IsHuffmanEncoded {_cded ,_eabb :=_abbb ._ceace .ReadBits (byte (_abbb .LogSBStrips ));
return int64 (_cded ),_eabb ;};_aeed ,_agg :=_abbb ._cfcae .DecodeInt (_abbb ._fcca );if _agg !=nil {return 0,_agg ;};return int64 (_aeed ),nil ;};return 0,nil ;};func (_ecfc *HalftoneRegion )computeSegmentDataStructure ()error {_ecfc .DataOffset =_ecfc ._eabf .StreamPosition ();
_ecfc .DataHeaderLength =_ecfc .DataOffset -_ecfc .DataHeaderOffset ;_ecfc .DataLength =int64 (_ecfc ._eabf .Length ())-_ecfc .DataHeaderLength ;return nil ;};func (_dfb *GenericRegion )setParametersWithAt (_fbeb bool ,_cdb byte ,_bdgc ,_edcc bool ,_efgc ,_bbgga []int8 ,_ddg ,_edb uint32 ,_cbbe *_bg .DecoderStats ,_dcgf *_bg .Decoder ){_dfb .IsMMREncoded =_fbeb ;
_dfb .GBTemplate =_cdb ;_dfb .IsTPGDon =_bdgc ;_dfb .GBAtX =_efgc ;_dfb .GBAtY =_bbgga ;_dfb .RegionSegment .BitmapHeight =_edb ;_dfb .RegionSegment .BitmapWidth =_ddg ;_dfb ._bgb =nil ;_dfb .Bitmap =nil ;if _cbbe !=nil {_dfb ._efde =_cbbe ;};if _dcgf !=nil {_dfb ._efe =_dcgf ;
};_gc .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049O\u004e\u005d\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073\u0020\u0053\u0044\u0041t\u003a\u0020\u0025\u0073",_dfb );};func (_bgg *EndOfStripe )parseHeader (_gg *Header ,_e _cb .StreamReader )error {_fc ,_ef :=_bgg ._ca .ReadBits (32);
if _ef !=nil {return _ef ;};_bgg ._de =int (_fc &_fg .MaxInt32 );return nil ;};func (_egf *PageInformationSegment )encodeStripingInformation (_dadf _cb .BinaryWriter )(_dfbe int ,_gdcgc error ){const _dcfc ="\u0065n\u0063\u006f\u0064\u0065S\u0074\u0072\u0069\u0070\u0069n\u0067I\u006ef\u006f\u0072\u006d\u0061\u0074\u0069\u006fn";
if !_egf .IsStripe {if _dfbe ,_gdcgc =_dadf .Write ([]byte {0x00,0x00});_gdcgc !=nil {return 0,_cc .Wrap (_gdcgc ,_dcfc ,"n\u006f\u0020\u0073\u0074\u0072\u0069\u0070\u0069\u006e\u0067");};return _dfbe ,nil ;};_cfe :=make ([]byte ,2);_ff .BigEndian .PutUint16 (_cfe ,_egf .MaxStripeSize |1<<15);
if _dfbe ,_gdcgc =_dadf .Write (_cfe );_gdcgc !=nil {return 0,_cc .Wrapf (_gdcgc ,_dcfc ,"\u0073\u0074\u0072i\u0070\u0069\u006e\u0067\u003a\u0020\u0025\u0064",_egf .MaxStripeSize );};return _dfbe ,nil ;};func (_gd *EndOfStripe )LineNumber ()int {return _gd ._de };
func (_facd *template1 )setIndex (_dfg *_bg .DecoderStats ){_dfg .SetIndex (0x080)};func (_eedf *PageInformationSegment )readIsLossless ()error {_eeba ,_efcag :=_eedf ._gadb .ReadBit ();if _efcag !=nil {return _efcag ;};if _eeba ==1{_eedf .IsLossless =true ;
};return nil ;};func (_dcab *PatternDictionary )parseHeader ()error {_gc .Log .Trace ("\u005b\u0050\u0041\u0054\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054I\u004f\u004e\u0041\u0052\u0059\u005d[\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d\u0020b\u0065\u0067\u0069\u006e");
defer func (){_gc .Log .Trace ("\u005b\u0050\u0041T\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u005b\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
}();_ ,_eacg :=_dcab ._afcf .ReadBits (5);if _eacg !=nil {return _eacg ;};if _eacg =_dcab .readTemplate ();_eacg !=nil {return _eacg ;};if _eacg =_dcab .readIsMMREncoded ();_eacg !=nil {return _eacg ;};if _eacg =_dcab .readPatternWidthAndHeight ();_eacg !=nil {return _eacg ;
};if _eacg =_dcab .readGrayMax ();_eacg !=nil {return _eacg ;};if _eacg =_dcab .computeSegmentDataStructure ();_eacg !=nil {return _eacg ;};return _dcab .checkInput ();};func (_gef *GenericRefinementRegion )decodeSLTP ()(int ,error ){_gef .Template .setIndex (_gef ._ab );
return _gef ._bdf .DecodeBit (_gef ._ab );};func _bbed (_ecd int )int {if _ecd ==0{return 0;};_ecd |=_ecd >>1;_ecd |=_ecd >>2;_ecd |=_ecd >>4;_ecd |=_ecd >>8;_ecd |=_ecd >>16;return (_ecd +1)>>1;};var (_dbdf Segmenter ;_fdfc =map[Type ]func ()Segmenter {TSymbolDictionary :func ()Segmenter {return &SymbolDictionary {}},TIntermediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateLosslessTextRegion :func ()Segmenter {return &TextRegion {}},TPatternDictionary :func ()Segmenter {return &PatternDictionary {}},TIntermediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateLosslessHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TIntermediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateLosslessGenericRegion :func ()Segmenter {return &GenericRegion {}},TIntermediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateLosslessGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TPageInformation :func ()Segmenter {return &PageInformationSegment {}},TEndOfPage :func ()Segmenter {return _dbdf },TEndOfStrip :func ()Segmenter {return &EndOfStripe {}},TEndOfFile :func ()Segmenter {return _dbdf },TProfiles :func ()Segmenter {return _dbdf },TTables :func ()Segmenter {return &TableSegment {}},TExtension :func ()Segmenter {return _dbdf },TBitmap :func ()Segmenter {return _dbdf }};
);func (_agdc *Header )readSegmentDataLength (_dabc _cb .StreamReader )(_adba error ){_agdc .SegmentDataLength ,_adba =_dabc .ReadBits (32);if _adba !=nil {return _adba ;};_agdc .SegmentDataLength &=_fg .MaxInt32 ;return nil ;};func (_dcbdg *SymbolDictionary )getUserTable (_fcga int )(_gf .Tabler ,error ){var _ggcc int ;
for _ ,_bade :=range _dcbdg .Header .RTSegments {if _bade .Type ==53{if _ggcc ==_fcga {_cgde ,_aebb :=_bade .GetSegmentData ();if _aebb !=nil {return nil ,_aebb ;};_gdfc :=_cgde .(_gf .BasicTabler );return _gf .NewEncodedTable (_gdfc );};_ggcc ++;};};return nil ,nil ;
};func (_baga *GenericRegion )overrideAtTemplate2 (_gdbb ,_gbc ,_acda ,_ffec ,_fgcg int )int {_gdbb &=0x3FB;if _baga .GBAtY [0]==0&&_baga .GBAtX [0]>=-int8 (_fgcg ){_gdbb |=(_ffec >>uint (7-(int8 (_fgcg )+_baga .GBAtX [0]))&0x1)<<2;}else {_gdbb |=int (_baga .getPixel (_gbc +int (_baga .GBAtX [0]),_acda +int (_baga .GBAtY [0])))<<2;
};return _gdbb ;};func (_fcecd *TextRegion )decodeDT ()(_abef int64 ,_bfacb error ){if _fcecd .IsHuffmanEncoded {if _fcecd .SbHuffDT ==3{_abef ,_bfacb =_fcecd ._gedb .Decode (_fcecd ._ceace );if _bfacb !=nil {return 0,_bfacb ;};}else {var _fead _gf .Tabler ;
_fead ,_bfacb =_gf .GetStandardTable (11+int (_fcecd .SbHuffDT ));if _bfacb !=nil {return 0,_bfacb ;};_abef ,_bfacb =_fead .Decode (_fcecd ._ceace );if _bfacb !=nil {return 0,_bfacb ;};};}else {var _addb int32 ;_addb ,_bfacb =_fcecd ._cfcae .DecodeInt (_fcecd ._aeagb );
if _bfacb !=nil {return ;};_abef =int64 (_addb );};_abef *=int64 (_fcecd .SbStrips );return _abef ,nil ;};func (_ggdb *PageInformationSegment )readIsStriped ()error {_eef ,_fda :=_ggdb ._gadb .ReadBit ();if _fda !=nil {return _fda ;};if _eef ==1{_ggdb .IsStripe =true ;
};return nil ;};func (_geg *EndOfStripe )Init (h *Header ,r _cb .StreamReader )error {_geg ._ca =r ;return _geg .parseHeader (h ,r );};func (_ffcc *PageInformationSegment )readCombinationOperatorOverrideAllowed ()error {_egfg ,_ged :=_ffcc ._gadb .ReadBit ();
if _ged !=nil {return _ged ;};if _egfg ==1{_ffcc ._cefc =true ;};return nil ;};func (_bcdd *Header )writeSegmentDataLength (_abgf _cb .BinaryWriter )(_ggge int ,_ccge error ){_ecdf :=make ([]byte ,4);_ff .BigEndian .PutUint32 (_ecdf ,uint32 (_bcdd .SegmentDataLength ));
if _ggge ,_ccge =_abgf .Write (_ecdf );_ccge !=nil {return 0,_cc .Wrap (_ccge ,"\u0048\u0065a\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u004c\u0065ng\u0074\u0068","");};return _ggge ,nil ;
};type Type int ;func (_ceda *Header )referenceSize ()uint {switch {case _ceda .SegmentNumber <=255:return 1;case _ceda .SegmentNumber <=65535:return 2;default:return 4;};};func (_fbfe *TextRegion )Init (header *Header ,r _cb .StreamReader )error {_fbfe .Header =header ;
_fbfe ._ceace =r ;_fbfe .RegionInfo =NewRegionSegment (_fbfe ._ceace );return _fbfe .parseHeader ();};type EndOfStripe struct{_ca _cb .StreamReader ;_de int ;};func (_bbffb *TextRegion )getUserTable (_bgddb int )(_gf .Tabler ,error ){const _ebcc ="\u0067\u0065\u0074U\u0073\u0065\u0072\u0054\u0061\u0062\u006c\u0065";
var _efbgb int ;for _ ,_fcgg :=range _bbffb .Header .RTSegments {if _fcgg .Type ==53{if _efbgb ==_bgddb {_gfaf ,_cacdb :=_fcgg .GetSegmentData ();if _cacdb !=nil {return nil ,_cacdb ;};_dggd ,_eggfa :=_gfaf .(*TableSegment );if !_eggfa {_gc .Log .Debug (_fga .Sprintf ("\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079p\u0065\u00205\u0033\u0020\u002d\u0020\u0061\u006ed\u0020in\u0064\u0065\u0078\u003a\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_fcgg .SegmentNumber ));
return nil ,_cc .Error (_ebcc ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079\u0070e\u0020\u0035\u0033\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u002a\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};return _gf .NewEncodedTable (_dggd );};_efbgb ++;};};return nil ,nil ;};var (_ Regioner =&TextRegion {};_ Segmenter =&TextRegion {};);func (_fdbe *PageInformationSegment )readDefaultPixelValue ()error {_gfge ,_bbda :=_fdbe ._gadb .ReadBit ();if _bbda !=nil {return _bbda ;
};_fdbe .DefaultPixelValue =uint8 (_gfge &0xf);return nil ;};type template0 struct{};func (_cdgg *HalftoneRegion )GetRegionBitmap ()(*_ge .Bitmap ,error ){if _cdgg .HalftoneRegionBitmap !=nil {return _cdgg .HalftoneRegionBitmap ,nil ;};var _gdbc error ;
_cdgg .HalftoneRegionBitmap =_ge .New (int (_cdgg .RegionSegment .BitmapWidth ),int (_cdgg .RegionSegment .BitmapHeight ));if _cdgg .Patterns ==nil ||len (_cdgg .Patterns )==0{_cdgg .Patterns ,_gdbc =_cdgg .GetPatterns ();if _gdbc !=nil {return nil ,_gdbc ;
};};if _cdgg .HDefaultPixel ==1{_cdgg .HalftoneRegionBitmap .SetDefaultPixel ();};_adg :=_fg .Ceil (_fg .Log (float64 (len (_cdgg .Patterns )))/_fg .Log (2));_dgeg :=int (_adg );var _gcb [][]int ;_gcb ,_gdbc =_cdgg .grayScaleDecoding (_dgeg );if _gdbc !=nil {return nil ,_gdbc ;
};if _gdbc =_cdgg .renderPattern (_gcb );_gdbc !=nil {return nil ,_gdbc ;};return _cdgg .HalftoneRegionBitmap ,nil ;};func NewRegionSegment (r _cb .StreamReader )*RegionSegment {return &RegionSegment {_baag :r }};func (_gede *TextRegion )decodeSymbolInstances ()error {_aeaa ,_dgg :=_gede .decodeStripT ();
if _dgg !=nil {return _dgg ;};var (_cacd int64 ;_dfbfg uint32 ;);for _dfbfg < _gede .NumberOfSymbolInstances {_bcae ,_caed :=_gede .decodeDT ();if _caed !=nil {return _caed ;};_aeaa +=_bcae ;var _gbf int64 ;_bbcb :=true ;_gede ._gcgdc =0;for {if _bbcb {_gbf ,_caed =_gede .decodeDfs ();
if _caed !=nil {return _caed ;};_cacd +=_gbf ;_gede ._gcgdc =_cacd ;_bbcb =false ;}else {_ffbc ,_gbaec :=_gede .decodeIds ();if _fb .Is (_gbaec ,_cbb .ErrOOB ){break ;};if _gbaec !=nil {return _gbaec ;};if _dfbfg >=_gede .NumberOfSymbolInstances {break ;
};_gede ._gcgdc +=_ffbc +int64 (_gede .SbDsOffset );};_cdaede ,_gbfa :=_gede .decodeCurrentT ();if _gbfa !=nil {return _gbfa ;};_cecb :=_aeaa +_cdaede ;_edbc ,_gbfa :=_gede .decodeID ();if _gbfa !=nil {return _gbfa ;};_gfgg ,_gbfa :=_gede .decodeRI ();
if _gbfa !=nil {return _gbfa ;};_cafcd ,_gbfa :=_gede .decodeIb (_gfgg ,_edbc );if _gbfa !=nil {return _gbfa ;};if _gbfa =_gede .blit (_cafcd ,_cecb );_gbfa !=nil {return _gbfa ;};_dfbfg ++;};};return nil ;};func (_ceec *TableSegment )parseHeader ()error {var (_ebaf int ;
_egfe uint64 ;_ccb error ;);_ebaf ,_ccb =_ceec ._dae .ReadBit ();if _ccb !=nil {return _ccb ;};if _ebaf ==1{return _fga .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0061\u0062\u006c\u0065 \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0064e\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u002e\u0020\u0042\u002e\u0032\u002e1\u0020\u0043\u006f\u0064\u0065\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0042\u0069\u0074\u0020\u0037\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u007a\u0065\u0072\u006f\u002e\u0020\u0057a\u0073\u003a \u0025\u0064",_ebaf );
};if _egfe ,_ccb =_ceec ._dae .ReadBits (3);_ccb !=nil {return _ccb ;};_ceec ._gbcb =(int32 (_egfe )+1)&0xf;if _egfe ,_ccb =_ceec ._dae .ReadBits (3);_ccb !=nil {return _ccb ;};_ceec ._cbea =(int32 (_egfe )+1)&0xf;if _egfe ,_ccb =_ceec ._dae .ReadBits (32);
_ccb !=nil {return _ccb ;};_ceec ._ddfad =int32 (_egfe &_fg .MaxInt32 );if _egfe ,_ccb =_ceec ._dae .ReadBits (32);_ccb !=nil {return _ccb ;};_ceec ._ggba =int32 (_egfe &_fg .MaxInt32 );return nil ;};func (_dfee *SymbolDictionary )String ()string {_bdgd :=&_bd .Builder {};
_bdgd .WriteString ("\n\u005b\u0053\u0059\u004dBO\u004c-\u0044\u0049\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u000a");_bdgd .WriteString (_fga .Sprintf ("\u0009-\u0020S\u0064\u0072\u0054\u0065\u006dp\u006c\u0061t\u0065\u0020\u0025\u0076\u000a",_dfee .SdrTemplate ));
_bdgd .WriteString (_fga .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0025\u0076\u000a",_dfee .SdTemplate ));_bdgd .WriteString (_fga .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006eg\u0043\u006f\u006e\u0074\u0065\u0078\u0074R\u0065\u0074\u0061\u0069\u006e\u0065\u0064\u0020\u0025\u0076\u000a",_dfee ._fgff ));
_bdgd .WriteString (_fga .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074\u0065\u0078\u0074\u0055\u0073\u0065\u0064 \u0025\u0076\u000a",_dfee ._cddc ));_bdgd .WriteString (_fga .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_dfee .SdHuffAggInstanceSelection ));
_bdgd .WriteString (_fga .Sprintf ("\u0009\u002d\u0020\u0053d\u0048\u0075\u0066\u0066\u0042\u004d\u0053\u0069\u007a\u0065S\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020%\u0076\u000a",_dfee .SdHuffBMSizeSelection ));_bdgd .WriteString (_fga .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_dfee .SdHuffDecodeWidthSelection ));
_bdgd .WriteString (_fga .Sprintf ("\u0009\u002d\u0020Sd\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064e\u0048e\u0069g\u0068t\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_dfee .SdHuffDecodeHeightSelection ));_bdgd .WriteString (_fga .Sprintf ("\u0009\u002d\u0020U\u0073\u0065\u0052\u0065f\u0069\u006e\u0065\u006d\u0065\u006e\u0074A\u0067\u0067\u0072\u0065\u0067\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_dfee .UseRefinementAggregation ));
_bdgd .WriteString (_fga .Sprintf ("\u0009\u002d\u0020is\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045\u006e\u0063\u006f\u0064\u0065\u0064\u0020\u0025\u0076\u000a",_dfee .IsHuffmanEncoded ));_bdgd .WriteString (_fga .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_dfee .SdATX ));
_bdgd .WriteString (_fga .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_dfee .SdATY ));_bdgd .WriteString (_fga .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_dfee .SdrATX ));
_bdgd .WriteString (_fga .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_dfee .SdrATY ));_bdgd .WriteString (_fga .Sprintf ("\u0009\u002d\u0020\u004e\u0075\u006d\u0062\u0065\u0072\u004ff\u0045\u0078\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_dfee .NumberOfExportedSymbols ));
_bdgd .WriteString (_fga .Sprintf ("\u0009-\u0020\u004e\u0075\u006db\u0065\u0072\u004f\u0066\u004ee\u0077S\u0079m\u0062\u006f\u006c\u0073\u0020\u0025\u0076\n",_dfee .NumberOfNewSymbols ));_bdgd .WriteString (_fga .Sprintf ("\u0009\u002d\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u004ff\u0049\u006d\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_dfee ._gbg ));
_bdgd .WriteString (_fga .Sprintf ("\u0009\u002d \u006e\u0075\u006d\u0062\u0065\u0072\u004f\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0064\u0053\u0079\u006d\u0062\u006f\u006c\u0073 %\u0076\u000a",_dfee ._gdcc ));return _bdgd .String ();};func (_bgcd *SymbolDictionary )encodeATFlags (_gbdd _cb .BinaryWriter )(_dgde int ,_cfea error ){const _ffbd ="\u0065\u006e\u0063\u006f\u0064\u0065\u0041\u0054\u0046\u006c\u0061\u0067\u0073";
if _bgcd .IsHuffmanEncoded ||_bgcd .SdTemplate !=0{return 0,nil ;};_bggf :=4;if _bgcd .SdTemplate !=0{_bggf =1;};for _dbbbd :=0;_dbbbd < _bggf ;_dbbbd ++{if _cfea =_gbdd .WriteByte (byte (_bgcd .SdATX [_dbbbd ]));_cfea !=nil {return _dgde ,_cc .Wrapf (_cfea ,_ffbd ,"\u0053d\u0041\u0054\u0058\u005b\u0025\u0064]",_dbbbd );
};_dgde ++;if _cfea =_gbdd .WriteByte (byte (_bgcd .SdATY [_dbbbd ]));_cfea !=nil {return _dgde ,_cc .Wrapf (_cfea ,_ffbd ,"\u0053d\u0041\u0054\u0059\u005b\u0025\u0064]",_dbbbd );};_dgde ++;};return _dgde ,nil ;};type templater interface{form (_aaa ,_fgc ,_fgd ,_caeb ,_deg int16 )int16 ;
setIndex (_agf *_bg .DecoderStats );};func (_dfdag *TextRegion )encodeSymbols (_cafg _cb .BinaryWriter )(_gcff int ,_ceee error ){const _ddeaf ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";_cdgfa :=make ([]byte ,4);_ff .BigEndian .PutUint32 (_cdgfa ,_dfdag .NumberOfSymbols );
if _gcff ,_ceee =_cafg .Write (_cdgfa );_ceee !=nil {return _gcff ,_cc .Wrap (_ceee ,_ddeaf ,"\u004e\u0075\u006dbe\u0072\u004f\u0066\u0053\u0079\u006d\u0062\u006f\u006c\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073");};_afge ,_ceee :=_ge .NewClassedPoints (_dfdag ._fabeb ,_dfdag ._cfbg );
if _ceee !=nil {return 0,_cc .Wrap (_ceee ,_ddeaf ,"");};var _bgac ,_dbacc int ;_gcba :=_cf .New ();_gcba .Init ();if _ceee =_gcba .EncodeInteger (_cf .IADT ,0);_ceee !=nil {return _gcff ,_cc .Wrap (_ceee ,_ddeaf ,"\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0020\u0044\u0054");
};_fabef ,_ceee :=_afge .GroupByY ();if _ceee !=nil {return 0,_cc .Wrap (_ceee ,_ddeaf ,"");};for _ ,_egga :=range _fabef {_bbged :=int (_egga .YAtIndex (0));_ccce :=_bbged -_bgac ;if _ceee =_gcba .EncodeInteger (_cf .IADT ,_ccce );_ceee !=nil {return _gcff ,_cc .Wrap (_ceee ,_ddeaf ,"");
};var _acag int ;for _fcbd ,_fdffc :=range _egga .IntSlice {switch _fcbd {case 0:_fbca :=int (_egga .XAtIndex (_fcbd ))-_dbacc ;if _ceee =_gcba .EncodeInteger (_cf .IAFS ,_fbca );_ceee !=nil {return _gcff ,_cc .Wrap (_ceee ,_ddeaf ,"");};_dbacc +=_fbca ;
_acag =_dbacc ;default:_acdb :=int (_egga .XAtIndex (_fcbd ))-_acag ;if _ceee =_gcba .EncodeInteger (_cf .IADS ,_acdb );_ceee !=nil {return _gcff ,_cc .Wrap (_ceee ,_ddeaf ,"");};_acag +=_acdb ;};_gdgfa ,_ddbb :=_dfdag ._fcaff .Get (_fdffc );if _ddbb !=nil {return _gcff ,_cc .Wrap (_ddbb ,_ddeaf ,"");
};_fefa ,_eafg :=_dfdag ._aeac [_gdgfa ];if !_eafg {_fefa ,_eafg =_dfdag ._cade [_gdgfa ];if !_eafg {return _gcff ,_cc .Errorf (_ddeaf ,"\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027\u0025d\u0027\u0020\u0069s\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064 \u0069\u006e\u0020\u0067\u006cob\u0061\u006c\u0020\u0061\u006e\u0064\u0020\u006c\u006f\u0063\u0061\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020\u006d\u0061\u0070",_gdgfa );
};};if _ddbb =_gcba .EncodeIAID (_dfdag ._faceb ,_fefa );_ddbb !=nil {return _gcff ,_cc .Wrap (_ddbb ,_ddeaf ,"");};};if _ceee =_gcba .EncodeOOB (_cf .IADS );_ceee !=nil {return _gcff ,_cc .Wrap (_ceee ,_ddeaf ,"");};};_gcba .Final ();_ceecg ,_ceee :=_gcba .WriteTo (_cafg );
if _ceee !=nil {return _gcff ,_cc .Wrap (_ceee ,_ddeaf ,"");};_gcff +=int (_ceecg );return _gcff ,nil ;};func (_ebbed *SymbolDictionary )encodeNumSyms (_bae _cb .BinaryWriter )(_aace int ,_bcac error ){const _caff ="\u0065\u006e\u0063\u006f\u0064\u0065\u004e\u0075\u006d\u0053\u0079\u006d\u0073";
_daba :=make ([]byte ,4);_ff .BigEndian .PutUint32 (_daba ,_ebbed .NumberOfExportedSymbols );if _aace ,_bcac =_bae .Write (_daba );_bcac !=nil {return _aace ,_cc .Wrap (_bcac ,_caff ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};_ff .BigEndian .PutUint32 (_daba ,_ebbed .NumberOfNewSymbols );_abde ,_bcac :=_bae .Write (_daba );if _bcac !=nil {return _aace ,_cc .Wrap (_bcac ,_caff ,"n\u0065\u0077\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};return _aace +_abde ,nil ;};type Segmenter interface{Init (_fgeb *Header ,_adef _cb .StreamReader )error ;
};func (_ceaf *TextRegion )parseHeader ()error {var _afagd error ;_gc .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069n\u0073\u002e\u002e\u002e");
defer func (){if _afagd !=nil {_gc .Log .Trace ("\u005b\u0054\u0045\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044E\u0052\u005d\u0020\u0066\u0061i\u006c\u0065d\u002e\u0020\u0025\u0076",_afagd );
}else {_gc .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069s\u0068\u0065\u0064\u002e");};}();if _afagd =_ceaf .RegionInfo .parseHeader ();
_afagd !=nil {return _afagd ;};if _afagd =_ceaf .readRegionFlags ();_afagd !=nil {return _afagd ;};if _ceaf .IsHuffmanEncoded {if _afagd =_ceaf .readHuffmanFlags ();_afagd !=nil {return _afagd ;};};if _afagd =_ceaf .readUseRefinement ();_afagd !=nil {return _afagd ;
};if _afagd =_ceaf .readAmountOfSymbolInstances ();_afagd !=nil {return _afagd ;};if _afagd =_ceaf .getSymbols ();_afagd !=nil {return _afagd ;};if _afagd =_ceaf .computeSymbolCodeLength ();_afagd !=nil {return _afagd ;};if _afagd =_ceaf .checkInput ();
_afagd !=nil {return _afagd ;};_gc .Log .Trace ("\u0025\u0073",_ceaf .String ());return nil ;};func (_acea *PatternDictionary )extractPatterns (_bfaa *_ge .Bitmap )error {var _ffga int ;_daab :=make ([]*_ge .Bitmap ,_acea .GrayMax +1);for _ffga <=int (_acea .GrayMax ){_ccf :=int (_acea .HdpWidth )*_ffga ;
_cgab :=_g .Rect (_ccf ,0,_ccf +int (_acea .HdpWidth ),int (_acea .HdpHeight ));_bggb ,_gedd :=_ge .Extract (_cgab ,_bfaa );if _gedd !=nil {return _gedd ;};_daab [_ffga ]=_bggb ;_ffga ++;};_acea .Patterns =_daab ;return nil ;};func (_cgg *GenericRegion )GetRegionInfo ()*RegionSegment {return _cgg .RegionSegment };
func (_abf *GenericRefinementRegion )setParameters (_dbe *_bg .DecoderStats ,_gecf *_bg .Decoder ,_dcb int8 ,_bbee ,_deeg uint32 ,_cbd *_ge .Bitmap ,_caee ,_ggaa int32 ,_eggf bool ,_cbc []int8 ,_fbe []int8 ){_gc .Log .Trace ("\u005b\u0047\u0045NE\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052E\u0047I\u004fN\u005d \u0073\u0065\u0074\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073");
if _dbe !=nil {_abf ._ab =_dbe ;};if _gecf !=nil {_abf ._bdf =_gecf ;};_abf .TemplateID =_dcb ;_abf .RegionInfo .BitmapWidth =_bbee ;_abf .RegionInfo .BitmapHeight =_deeg ;_abf .ReferenceBitmap =_cbd ;_abf .ReferenceDX =_caee ;_abf .ReferenceDY =_ggaa ;
_abf .IsTPGROn =_eggf ;_abf .GrAtX =_cbc ;_abf .GrAtY =_fbe ;_abf .RegionBitmap =nil ;_gc .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073 f\u0069\u006ei\u0073\u0068\u0065\u0064\u002e\u0020\u0025\u0073",_abf );
};type Pager interface{GetSegment (int )(*Header ,error );GetBitmap ()(*_ge .Bitmap ,error );};func (_eaba *HalftoneRegion )renderPattern (_efdc [][]int )(_ddcf error ){var _cdae ,_ecbb int ;for _caaf :=0;_caaf < int (_eaba .HGridHeight );_caaf ++{for _cbab :=0;
_cbab < int (_eaba .HGridWidth );_cbab ++{_cdae =_eaba .computeX (_caaf ,_cbab );_ecbb =_eaba .computeY (_caaf ,_cbab );_adeg :=_eaba .Patterns [_efdc [_caaf ][_cbab ]];if _ddcf =_ge .Blit (_adeg ,_eaba .HalftoneRegionBitmap ,_cdae +int (_eaba .HGridX ),_ecbb +int (_eaba .HGridY ),_eaba .CombinationOperator );
_ddcf !=nil {return _ddcf ;};};};return nil ;};func (_bcge *TextRegion )decodeStripT ()(_dddff int64 ,_gfd error ){if _bcge .IsHuffmanEncoded {if _bcge .SbHuffDT ==3{if _bcge ._gedb ==nil {var _edfe int ;if _bcge .SbHuffFS ==3{_edfe ++;};if _bcge .SbHuffDS ==3{_edfe ++;
};_bcge ._gedb ,_gfd =_bcge .getUserTable (_edfe );if _gfd !=nil {return 0,_gfd ;};};_dddff ,_gfd =_bcge ._gedb .Decode (_bcge ._ceace );if _gfd !=nil {return 0,_gfd ;};}else {var _dfcce _gf .Tabler ;_dfcce ,_gfd =_gf .GetStandardTable (11+int (_bcge .SbHuffDT ));
if _gfd !=nil {return 0,_gfd ;};_dddff ,_gfd =_dfcce .Decode (_bcge ._ceace );if _gfd !=nil {return 0,_gfd ;};};}else {var _fcea int32 ;_fcea ,_gfd =_bcge ._cfcae .DecodeInt (_bcge ._aeagb );if _gfd !=nil {return 0,_gfd ;};_dddff =int64 (_fcea );};_dddff *=int64 (-_bcge .SbStrips );
return _dddff ,nil ;};func (_fedc Type )String ()string {switch _fedc {case TSymbolDictionary :return "\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079";case TIntermediateTextRegion :return "\u0049n\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020T\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TImmediateTextRegion :return "I\u006d\u006d\u0065\u0064ia\u0074e\u0020\u0054\u0065\u0078\u0074 \u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessTextRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020L\u006f\u0073\u0073\u006c\u0065\u0073\u0073 \u0054\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TPatternDictionary :return "\u0050a\u0074t\u0065\u0072\u006e\u0020\u0044i\u0063\u0074i\u006f\u006e\u0061\u0072\u0079";case TIntermediateHalftoneRegion :return "\u0049\u006e\u0074\u0065r\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0048\u0061l\u0066t\u006f\u006e\u0065\u0020\u0052\u0065\u0067i\u006f\u006e";
case TImmediateHalftoneRegion :return "\u0049m\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u0048\u0061l\u0066t\u006fn\u0065\u0020\u0052\u0065\u0067\u0069\u006fn";case TImmediateLosslessHalftoneRegion :return "\u0049\u006d\u006ded\u0069\u0061\u0074\u0065\u0020\u004c\u006f\u0073\u0073l\u0065s\u0073 \u0048a\u006c\u0066\u0074\u006f\u006e\u0065\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TIntermediateGenericRegion :return "I\u006e\u0074\u0065\u0072\u006d\u0065d\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020R\u0065g\u0069\u006f\u006e";case TImmediateGenericRegion :return "\u0049m\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006ee\u0072\u0069\u0063\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TImmediateLosslessGenericRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u004c\u006f\u0073\u0073\u006c\u0065\u0073\u0073\u0020\u0047e\u006e\u0065\u0072\u0069\u0063\u0020\u0052e\u0067\u0069\u006f\u006e";case TIntermediateGenericRefinementRegion :return "\u0049\u006e\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0020\u0052\u0065\u0066i\u006e\u0065\u006d\u0065\u006et\u0020\u0052e\u0067\u0069\u006f\u006e";
case TImmediateGenericRefinementRegion :return "I\u006d\u006d\u0065\u0064\u0069\u0061t\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020\u0052\u0065\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020\u0052\u0065\u0067\u0069o\u006e";case TImmediateLosslessGenericRefinementRegion :return "\u0049m\u006d\u0065d\u0069\u0061\u0074\u0065 \u004c\u006f\u0073s\u006c\u0065\u0073\u0073\u0020\u0047\u0065\u006e\u0065ri\u0063\u0020\u0052e\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020R\u0065\u0067i\u006f\u006e";
case TPageInformation :return "\u0050\u0061g\u0065\u0020\u0049n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e";case TEndOfPage :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0050\u0061\u0067\u0065";case TEndOfStrip :return "\u0045\u006e\u0064 \u004f\u0066\u0020\u0053\u0074\u0072\u0069\u0070";
case TEndOfFile :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0046\u0069\u006c\u0065";case TProfiles :return "\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0073";case TTables :return "\u0054\u0061\u0062\u006c\u0065\u0073";case TExtension :return "\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn";
case TBitmap :return "\u0042\u0069\u0074\u006d\u0061\u0070";};return "I\u006ev\u0061\u006c\u0069\u0064\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0020Ki\u006e\u0064";};func (_dcc *PatternDictionary )readIsMMREncoded ()error {_bccc ,_afba :=_dcc ._afcf .ReadBit ();
if _afba !=nil {return _afba ;};if _bccc !=0{_dcc .IsMMREncoded =true ;};return nil ;};func (_egac *SymbolDictionary )checkInput ()error {if _egac .SdHuffDecodeHeightSelection ==2{_gc .Log .Debug ("\u0053\u0079\u006d\u0062\u006fl\u0020\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u0053e\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0070\u0065r\u006d\u0069\u0074\u0074\u0065\u0064",_egac .SdHuffDecodeHeightSelection );
};if _egac .SdHuffDecodeWidthSelection ==2{_gc .Log .Debug ("\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0057\u0069\u0064t\u0068\u0020\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061l\u0075\u0065\u0020\u006e\u006f\u0074 \u0070\u0065r\u006d\u0069t\u0074e\u0064",_egac .SdHuffDecodeWidthSelection );
};if _egac .IsHuffmanEncoded {if _egac .SdTemplate !=0{_gc .Log .Debug ("\u0053\u0044T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e \u0030\u0029",_egac .SdTemplate );
};if !_egac .UseRefinementAggregation {if !_egac .UseRefinementAggregation {if _egac ._fgff {_gc .Log .Debug ("\u0049\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074ex\u0074\u0052\u0065\u0074\u0061\u0069n\u0065\u0064\u0020\u003d\u0020\u0074\u0072\u0075\u0065\u0020\u0028\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0066\u0061\u006cs\u0065\u0029");
_egac ._fgff =false ;};if _egac ._cddc {_gc .Log .Debug ("\u0069s\u0043\u006fd\u0069\u006e\u0067\u0043o\u006e\u0074\u0065x\u0074\u0055\u0073\u0065\u0064\u0020\u003d\u0020\u0074ru\u0065\u0020\u0028s\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020f\u0061\u006cs\u0065\u0029");
_egac ._cddc =false ;};};};}else {if _egac .SdHuffBMSizeSelection !=0{_gc .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066B\u004d\u0053\u0069\u007a\u0065\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_egac .SdHuffBMSizeSelection =0;};if _egac .SdHuffDecodeWidthSelection !=0{_gc .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068\u0053\u0065\u006c\u0065\u0063\u0074\u0069o\u006e\u0020\u0073\u0068\u006fu\u006c\u0064 \u0062\u0065\u0020\u0030");
_egac .SdHuffDecodeWidthSelection =0;};if _egac .SdHuffDecodeHeightSelection !=0{_gc .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0048e\u0069\u0067\u0068\u0074\u0053\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_egac .SdHuffDecodeHeightSelection =0;};};if !_egac .UseRefinementAggregation {if _egac .SdrTemplate !=0{_gc .Log .Debug ("\u0053\u0044\u0052\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u003d\u0020\u0025\u0064\u0020\u0028s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_egac .SdrTemplate );
_egac .SdrTemplate =0;};};if !_egac .IsHuffmanEncoded ||!_egac .UseRefinementAggregation {if _egac .SdHuffAggInstanceSelection {_gc .Log .Debug ("\u0053d\u0048\u0075f\u0066\u0041\u0067g\u0049\u006e\u0073\u0074\u0061\u006e\u0063e\u0053\u0065\u006c\u0065\u0063\u0074i\u006f\u006e\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_egac .SdHuffAggInstanceSelection );
};};return nil ;};func (_dcdf *SymbolDictionary )encodeRefinementATFlags (_fgfc _cb .BinaryWriter )(_fbebf int ,_gegf error ){const _ceacc ="\u0065\u006e\u0063od\u0065\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0041\u0054\u0046\u006c\u0061\u0067\u0073";
if !_dcdf .UseRefinementAggregation ||_dcdf .SdrTemplate !=0{return 0,nil ;};for _dccdd :=0;_dccdd < 2;_dccdd ++{if _gegf =_fgfc .WriteByte (byte (_dcdf .SdrATX [_dccdd ]));_gegf !=nil {return _fbebf ,_cc .Wrapf (_gegf ,_ceacc ,"\u0053\u0064\u0072\u0041\u0054\u0058\u005b\u0025\u0064\u005d",_dccdd );
};_fbebf ++;if _gegf =_fgfc .WriteByte (byte (_dcdf .SdrATY [_dccdd ]));_gegf !=nil {return _fbebf ,_cc .Wrapf (_gegf ,_ceacc ,"\u0053\u0064\u0072\u0041\u0054\u0059\u005b\u0025\u0064\u005d",_dccdd );};_fbebf ++;};return _fbebf ,nil ;};type TableSegment struct{_dae _cb .StreamReader ;
_effe int32 ;_cbea int32 ;_gbcb int32 ;_ddfad int32 ;_ggba int32 ;};func (_bebg *Header )Encode (w _cb .BinaryWriter )(_bbgc int ,_deca error ){const _eabfc ="\u0048\u0065\u0061d\u0065\u0072\u002e\u0057\u0072\u0069\u0074\u0065";var _ecfedd _cb .BinaryWriter ;
_gc .Log .Trace ("\u005b\u0053\u0045G\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045\u0052\u005d[\u0045\u004e\u0043\u004f\u0044\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _deca !=nil {_gc .Log .Trace ("[\u0053\u0045\u0047\u004d\u0045\u004eT\u002d\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0045\u004e\u0043\u004f\u0044E\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020%\u0076",_deca );
}else {_gc .Log .Trace ("\u005b\u0053\u0045\u0047ME\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0025\u0076",_bebg );_gc .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045N\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u005b\u0045\u004e\u0043O\u0044\u0045\u005d\u0020\u0046\u0069\u006ei\u0073\u0068\u0065\u0064");
};}();w .FinishByte ();if _bebg .SegmentData !=nil {_cfff ,_fae :=_bebg .SegmentData .(SegmentEncoder );if !_fae {return 0,_cc .Errorf (_eabfc ,"\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0064\u006f\u0065s\u006e\u0027\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074 \u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0045\u006e\u0063\u006f\u0064er\u0020\u0069\u006e\u0074\u0065\u0072\u0066\u0061\u0063\u0065",_bebg .SegmentData );
};_ecfedd =_cb .BufferedMSB ();_bbgc ,_deca =_cfff .Encode (_ecfedd );if _deca !=nil {return 0,_cc .Wrap (_deca ,_eabfc ,"");};_bebg .SegmentDataLength =uint64 (_bbgc );};if _bebg .pageSize ()==4{_bebg .PageAssociationFieldSize =true ;};var _bfdbe int ;
_bfdbe ,_deca =_bebg .writeSegmentNumber (w );if _deca !=nil {return 0,_cc .Wrap (_deca ,_eabfc ,"");};_bbgc +=_bfdbe ;if _deca =_bebg .writeFlags (w );_deca !=nil {return _bbgc ,_cc .Wrap (_deca ,_eabfc ,"");};_bbgc ++;_bfdbe ,_deca =_bebg .writeReferredToCount (w );
if _deca !=nil {return 0,_cc .Wrap (_deca ,_eabfc ,"");};_bbgc +=_bfdbe ;_bfdbe ,_deca =_bebg .writeReferredToSegments (w );if _deca !=nil {return 0,_cc .Wrap (_deca ,_eabfc ,"");};_bbgc +=_bfdbe ;_bfdbe ,_deca =_bebg .writeSegmentPageAssociation (w );
if _deca !=nil {return 0,_cc .Wrap (_deca ,_eabfc ,"");};_bbgc +=_bfdbe ;_bfdbe ,_deca =_bebg .writeSegmentDataLength (w );if _deca !=nil {return 0,_cc .Wrap (_deca ,_eabfc ,"");};_bbgc +=_bfdbe ;_bebg .HeaderLength =int64 (_bbgc )-int64 (_bebg .SegmentDataLength );
if _ecfedd !=nil {if _ ,_deca =w .Write (_ecfedd .Data ());_deca !=nil {return _bbgc ,_cc .Wrap (_deca ,_eabfc ,"\u0077r\u0069t\u0065\u0020\u0073\u0065\u0067m\u0065\u006et\u0020\u0064\u0061\u0074\u0061");};};return _bbgc ,nil ;};func (_gfac *TextRegion )readRegionFlags ()error {var (_bedcg int ;
_gggg uint64 ;_aed error ;);_bedcg ,_aed =_gfac ._ceace .ReadBit ();if _aed !=nil {return _aed ;};_gfac .SbrTemplate =int8 (_bedcg );_gggg ,_aed =_gfac ._ceace .ReadBits (5);if _aed !=nil {return _aed ;};_gfac .SbDsOffset =int8 (_gggg );if _gfac .SbDsOffset > 0x0f{_gfac .SbDsOffset -=0x20;
};_bedcg ,_aed =_gfac ._ceace .ReadBit ();if _aed !=nil {return _aed ;};_gfac .DefaultPixel =int8 (_bedcg );_gggg ,_aed =_gfac ._ceace .ReadBits (2);if _aed !=nil {return _aed ;};_gfac .CombinationOperator =_ge .CombinationOperator (int (_gggg )&0x3);_bedcg ,_aed =_gfac ._ceace .ReadBit ();
if _aed !=nil {return _aed ;};_gfac .IsTransposed =int8 (_bedcg );_gggg ,_aed =_gfac ._ceace .ReadBits (2);if _aed !=nil {return _aed ;};_gfac .ReferenceCorner =int16 (_gggg )&0x3;_gggg ,_aed =_gfac ._ceace .ReadBits (2);if _aed !=nil {return _aed ;};_gfac .LogSBStrips =int16 (_gggg )&0x3;
_gfac .SbStrips =1<<uint (_gfac .LogSBStrips );_bedcg ,_aed =_gfac ._ceace .ReadBit ();if _aed !=nil {return _aed ;};if _bedcg ==1{_gfac .UseRefinement =true ;};_bedcg ,_aed =_gfac ._ceace .ReadBit ();if _aed !=nil {return _aed ;};if _bedcg ==1{_gfac .IsHuffmanEncoded =true ;
};return nil ;};func (_ddfg *TextRegion )String ()string {_afbad :=&_bd .Builder {};_afbad .WriteString ("\u000a[\u0054E\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u000a");_afbad .WriteString (_ddfg .RegionInfo .String ()+"\u000a");_afbad .WriteString (_fga .Sprintf ("\u0009\u002d\u0020\u0053br\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0025\u0076\u000a",_ddfg .SbrTemplate ));
_afbad .WriteString (_fga .Sprintf ("\u0009-\u0020S\u0062\u0044\u0073\u004f\u0066f\u0073\u0065t\u003a\u0020\u0025\u0076\u000a",_ddfg .SbDsOffset ));_afbad .WriteString (_fga .Sprintf ("\t\u002d \u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0050i\u0078\u0065\u006c\u003a %\u0076\u000a",_ddfg .DefaultPixel ));
_afbad .WriteString (_fga .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0076\u000a",_ddfg .CombinationOperator ));_afbad .WriteString (_fga .Sprintf ("\t\u002d \u0049\u0073\u0054\u0072\u0061\u006e\u0073\u0070o\u0073\u0065\u0064\u003a %\u0076\u000a",_ddfg .IsTransposed ));
_afbad .WriteString (_fga .Sprintf ("\u0009\u002d\u0020Re\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0043\u006f\u0072\u006e\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_ddfg .ReferenceCorner ));_afbad .WriteString (_fga .Sprintf ("\t\u002d\u0020\u0055\u0073eR\u0065f\u0069\u006e\u0065\u006d\u0065n\u0074\u003a\u0020\u0025\u0076\u000a",_ddfg .UseRefinement ));
_afbad .WriteString (_fga .Sprintf ("\u0009-\u0020\u0049\u0073\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045n\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0076\u000a",_ddfg .IsHuffmanEncoded ));if _ddfg .IsHuffmanEncoded {_afbad .WriteString (_fga .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_ddfg .SbHuffRSize ));
_afbad .WriteString (_fga .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0059:\u0020\u0025\u0076\u000a",_ddfg .SbHuffRDY ));_afbad .WriteString (_fga .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0058:\u0020\u0025\u0076\u000a",_ddfg .SbHuffRDX ));
_afbad .WriteString (_fga .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069\u0067\u0068\u0074\u003a\u0020\u0025v\u000a",_ddfg .SbHuffRDHeight ));_afbad .WriteString (_fga .Sprintf ("\t\u002d\u0020\u0053\u0062Hu\u0066f\u0052\u0044\u0057\u0069\u0064t\u0068\u003a\u0020\u0025\u0076\u000a",_ddfg .SbHuffRDWidth ));
_afbad .WriteString (_fga .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0054\u003a\u0020\u0025\u0076\u000a",_ddfg .SbHuffDT ));_afbad .WriteString (_fga .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0053\u003a\u0020\u0025\u0076\u000a",_ddfg .SbHuffDS ));
_afbad .WriteString (_fga .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0046\u0053\u003a\u0020\u0025\u0076\u000a",_ddfg .SbHuffFS ));};_afbad .WriteString (_fga .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_ddfg .SbrATX ));
_afbad .WriteString (_fga .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0059:\u0020\u0025\u0076\u000a",_ddfg .SbrATY ));_afbad .WriteString (_fga .Sprintf ("\u0009\u002d\u0020N\u0075\u006d\u0062\u0065r\u004f\u0066\u0053\u0079\u006d\u0062\u006fl\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_ddfg .NumberOfSymbolInstances ));
_afbad .WriteString (_fga .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_ddfg .SbrATX ));return _afbad .String ();};func (_cgfe *Header )pageSize ()uint {if _cgfe .PageAssociation <=255{return 1;};return 4;
};func (_ffdf *PageInformationSegment )readCombinationOperator ()error {_gaag ,_efae :=_ffdf ._gadb .ReadBits (2);if _efae !=nil {return _efae ;};_ffdf ._daad =_ge .CombinationOperator (int (_gaag ));return nil ;};var _ SegmentEncoder =&RegionSegment {};
func (_caab *TextRegion )encodeFlags (_febc _cb .BinaryWriter )(_eeea int ,_abeef error ){const _cdag ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _abeef =_febc .WriteBit (int (_caab .SbrTemplate ));_abeef !=nil {return _eeea ,_cc .Wrap (_abeef ,_cdag ,"s\u0062\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");
};if _ ,_abeef =_febc .WriteBits (uint64 (_caab .SbDsOffset ),5);_abeef !=nil {return _eeea ,_cc .Wrap (_abeef ,_cdag ,"\u0073\u0062\u0044\u0073\u004f\u0066\u0066\u0073\u0065\u0074");};if _abeef =_febc .WriteBit (int (_caab .DefaultPixel ));_abeef !=nil {return _eeea ,_cc .Wrap (_abeef ,_cdag ,"\u0044\u0065\u0066a\u0075\u006c\u0074\u0050\u0069\u0078\u0065\u006c");
};if _ ,_abeef =_febc .WriteBits (uint64 (_caab .CombinationOperator ),2);_abeef !=nil {return _eeea ,_cc .Wrap (_abeef ,_cdag ,"\u0043\u006f\u006d\u0062in\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072");};if _abeef =_febc .WriteBit (int (_caab .IsTransposed ));
_abeef !=nil {return _eeea ,_cc .Wrap (_abeef ,_cdag ,"\u0069\u0073\u0020\u0074\u0072\u0061\u006e\u0073\u0070\u006f\u0073\u0065\u0064");};if _ ,_abeef =_febc .WriteBits (uint64 (_caab .ReferenceCorner ),2);_abeef !=nil {return _eeea ,_cc .Wrap (_abeef ,_cdag ,"\u0072\u0065f\u0065\u0072\u0065n\u0063\u0065\u0020\u0063\u006f\u0072\u006e\u0065\u0072");
};if _ ,_abeef =_febc .WriteBits (uint64 (_caab .LogSBStrips ),2);_abeef !=nil {return _eeea ,_cc .Wrap (_abeef ,_cdag ,"L\u006f\u0067\u0053\u0042\u0053\u0074\u0072\u0069\u0070\u0073");};var _affc int ;if _caab .UseRefinement {_affc =1;};if _abeef =_febc .WriteBit (_affc );
_abeef !=nil {return _eeea ,_cc .Wrap (_abeef ,_cdag ,"\u0075\u0073\u0065\u0020\u0072\u0065\u0066\u0069\u006ee\u006d\u0065\u006e\u0074");};_affc =0;if _caab .IsHuffmanEncoded {_affc =1;};if _abeef =_febc .WriteBit (_affc );_abeef !=nil {return _eeea ,_cc .Wrap (_abeef ,_cdag ,"u\u0073\u0065\u0020\u0068\u0075\u0066\u0066\u006d\u0061\u006e");
};_eeea =2;return _eeea ,nil ;};func (_dfge *TextRegion )decodeIb (_bffe ,_fbfd int64 )(*_ge .Bitmap ,error ){const _bedad ="\u0064\u0065\u0063\u006f\u0064\u0065\u0049\u0062";var (_fcfc error ;_dfgg *_ge .Bitmap ;);if _bffe ==0{if int (_fbfd )> len (_dfge .Symbols )-1{return nil ,_cc .Error (_bedad ,"\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0049\u0042\u0020\u0062\u0069\u0074\u006d\u0061\u0070\u002e\u0020\u0069\u006e\u0064\u0065x\u0020\u006f\u0075\u0074\u0020o\u0066\u0020r\u0061\u006e\u0067\u0065");
};return _dfge .Symbols [int (_fbfd )],nil ;};var _eddb ,_dfde ,_ccga ,_cagca int64 ;_eddb ,_fcfc =_dfge .decodeRdw ();if _fcfc !=nil {return nil ,_cc .Wrap (_fcfc ,_bedad ,"");};_dfde ,_fcfc =_dfge .decodeRdh ();if _fcfc !=nil {return nil ,_cc .Wrap (_fcfc ,_bedad ,"");
};_ccga ,_fcfc =_dfge .decodeRdx ();if _fcfc !=nil {return nil ,_cc .Wrap (_fcfc ,_bedad ,"");};_cagca ,_fcfc =_dfge .decodeRdy ();if _fcfc !=nil {return nil ,_cc .Wrap (_fcfc ,_bedad ,"");};if _dfge .IsHuffmanEncoded {if _ ,_fcfc =_dfge .decodeSymInRefSize ();
_fcfc !=nil {return nil ,_cc .Wrap (_fcfc ,_bedad ,"");};_dfge ._ceace .Align ();};_edea :=_dfge .Symbols [_fbfd ];_adec :=uint32 (_edea .Width );_dadfc :=uint32 (_edea .Height );_dcgfd :=int32 (uint32 (_eddb )>>1)+int32 (_ccga );_gaed :=int32 (uint32 (_dfde )>>1)+int32 (_cagca );
if _dfge ._dgcf ==nil {_dfge ._dgcf =_cceb (_dfge ._ceace ,nil );};_dfge ._dgcf .setParameters (_dfge ._cagdc ,_dfge ._cfcae ,_dfge .SbrTemplate ,_adec +uint32 (_eddb ),_dadfc +uint32 (_dfde ),_edea ,_dcgfd ,_gaed ,false ,_dfge .SbrATX ,_dfge .SbrATY );
_dfgg ,_fcfc =_dfge ._dgcf .GetRegionBitmap ();if _fcfc !=nil {return nil ,_cc .Wrap (_fcfc ,_bedad ,"\u0067\u0072\u0066");};if _dfge .IsHuffmanEncoded {_dfge ._ceace .Align ();};return _dfgg ,nil ;};func (_cafc *PageInformationSegment )Size ()int {return 19};
type GenericRegion struct{_cee _cb .StreamReader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;UseExtTemplates bool ;IsTPGDon bool ;GBTemplate byte ;IsMMREncoded bool ;UseMMR bool ;GBAtX []int8 ;
GBAtY []int8 ;GBAtOverride []bool ;_ffff bool ;Bitmap *_ge .Bitmap ;_efe *_bg .Decoder ;_efde *_bg .DecoderStats ;_bgb *_d .Decoder ;};func (_fcab *SymbolDictionary )parseHeader ()(_dbcf error ){_gc .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _dbcf !=nil {_gc .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u0020\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u005b\u0050\u0041\u0052SE\u002d\u0048\u0045A\u0044\u0045R\u005d\u0020\u0066\u0061\u0069\u006ce\u0064\u002e \u0025\u0076",_dbcf );
}else {_gc .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _dbcf =_fcab .readRegionFlags ();_dbcf !=nil {return _dbcf ;};if _dbcf =_fcab .setAtPixels ();_dbcf !=nil {return _dbcf ;};if _dbcf =_fcab .setRefinementAtPixels ();_dbcf !=nil {return _dbcf ;};if _dbcf =_fcab .readNumberOfExportedSymbols ();_dbcf !=nil {return _dbcf ;
};if _dbcf =_fcab .readNumberOfNewSymbols ();_dbcf !=nil {return _dbcf ;};if _dbcf =_fcab .setInSyms ();_dbcf !=nil {return _dbcf ;};if _fcab ._cddc {_cega :=_fcab .Header .RTSegments ;for _ecfcf :=len (_cega )-1;_ecfcf >=0;_ecfcf --{if _cega [_ecfcf ].Type ==0{_ggaab ,_ceeb :=_cega [_ecfcf ].SegmentData .(*SymbolDictionary );
if !_ceeb {_dbcf =_fga .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074:\u0020\u0025\u0076\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020S\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_cega [_ecfcf ]);
return _dbcf ;};if _ggaab ._cddc {_fcab .setRetainedCodingContexts (_ggaab );};break ;};};};if _dbcf =_fcab .checkInput ();_dbcf !=nil {return _dbcf ;};return nil ;};func (_ace *Header )String ()string {_edef :=&_bd .Builder {};_edef .WriteString ("\u000a[\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045A\u0044\u0045\u0052\u005d\u000a");
_edef .WriteString (_fga .Sprintf ("\t\u002d\u0020\u0053\u0065gm\u0065n\u0074\u004e\u0075\u006d\u0062e\u0072\u003a\u0020\u0025\u0076\u000a",_ace .SegmentNumber ));_edef .WriteString (_fga .Sprintf ("\u0009\u002d\u0020T\u0079\u0070\u0065\u003a\u0020\u0025\u0076\u000a",_ace .Type ));
_edef .WriteString (_fga .Sprintf ("\u0009-\u0020R\u0065\u0074\u0061\u0069\u006eF\u006c\u0061g\u003a\u0020\u0025\u0076\u000a",_ace .RetainFlag ));_edef .WriteString (_fga .Sprintf ("\u0009\u002d\u0020Pa\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_ace .PageAssociation ));
_edef .WriteString (_fga .Sprintf ("\u0009\u002d\u0020\u0050\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074i\u006fn\u0046\u0069\u0065\u006c\u0064\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_ace .PageAssociationFieldSize ));
_edef .WriteString ("\u0009-\u0020R\u0054\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u0053\u003a\u000a");for _ ,_aaad :=range _ace .RTSNumbers {_edef .WriteString (_fga .Sprintf ("\u0009\t\u002d\u0020\u0025\u0064\u000a",_aaad ));};_edef .WriteString (_fga .Sprintf ("\t\u002d \u0048\u0065\u0061\u0064\u0065\u0072\u004c\u0065n\u0067\u0074\u0068\u003a %\u0076\u000a",_ace .HeaderLength ));
_edef .WriteString (_fga .Sprintf ("\u0009-\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061L\u0065n\u0067\u0074\u0068\u003a\u0020\u0025\u0076\n",_ace .SegmentDataLength ));_edef .WriteString (_fga .Sprintf ("\u0009\u002d\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074D\u0061\u0074\u0061\u0053\u0074\u0061\u0072t\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0076\u000a",_ace .SegmentDataStartOffset ));
return _edef .String ();};func (_fbed *GenericRegion )writeGBAtPixels (_adfcf _cb .BinaryWriter )(_bgfe int ,_faba error ){const _ffd ="\u0077r\u0069t\u0065\u0047\u0042\u0041\u0074\u0050\u0069\u0078\u0065\u006c\u0073";if _fbed .UseMMR {return 0,nil ;};
_dfeca :=1;if _fbed .GBTemplate ==0{_dfeca =4;}else if _fbed .UseExtTemplates {_dfeca =12;};if len (_fbed .GBAtX )!=_dfeca {return 0,_cc .Errorf (_ffd ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0058\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};if len (_fbed .GBAtY )!=_dfeca {return 0,_cc .Errorf (_ffd ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0059\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};for _ddgb :=0;_ddgb < _dfeca ;_ddgb ++{if _faba =_adfcf .WriteByte (byte (_fbed .GBAtX [_ddgb ]));_faba !=nil {return _bgfe ,_cc .Wrap (_faba ,_ffd ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0058");};_bgfe ++;if _faba =_adfcf .WriteByte (byte (_fbed .GBAtY [_ddgb ]));
_faba !=nil {return _bgfe ,_cc .Wrap (_faba ,_ffd ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0059");};_bgfe ++;};return _bgfe ,nil ;};func (_cdaeb *PageInformationSegment )encodeFlags (_egge _cb .BinaryWriter )(_agfb error ){const _becc ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _agfb =_egge .SkipBits (1);_agfb !=nil {return _cc .Wrap (_agfb ,_becc ,"\u0072\u0065\u0073e\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074");};var _fabf int ;if _cdaeb .CombinationOperatorOverrideAllowed (){_fabf =1;};if _agfb =_egge .WriteBit (_fabf );
_agfb !=nil {return _cc .Wrap (_agfb ,_becc ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0064\u0065\u006e");};_fabf =0;if _cdaeb ._afgb {_fabf =1;
};if _agfb =_egge .WriteBit (_fabf );_agfb !=nil {return _cc .Wrap (_agfb ,_becc ,"\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0061\u0075\u0078i\u006ci\u0061r\u0079\u0020\u0062\u0075\u0066\u0066\u0065r");};if _agfb =_egge .WriteBit ((int (_cdaeb ._daad )>>1)&0x01);
_agfb !=nil {return _cc .Wrap (_agfb ,_becc ,"\u0063\u006f\u006d\u0062\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006f\u0070\u0065\u0072\u0061\u0074o\u0072\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0062\u0069\u0074");};if _agfb =_egge .WriteBit (int (_cdaeb ._daad )&0x01);
_agfb !=nil {return _cc .Wrap (_agfb ,_becc ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0062\u0069\u0074");};_fabf =int (_cdaeb .DefaultPixelValue );
if _agfb =_egge .WriteBit (_fabf );_agfb !=nil {return _cc .Wrap (_agfb ,_becc ,"\u0064e\u0066\u0061\u0075\u006c\u0074\u0020\u0070\u0061\u0067\u0065\u0020p\u0069\u0078\u0065\u006c\u0020\u0076\u0061\u006c\u0075\u0065");};_fabf =0;if _cdaeb ._efdef {_fabf =1;
};if _agfb =_egge .WriteBit (_fabf );_agfb !=nil {return _cc .Wrap (_agfb ,_becc ,"\u0063\u006f\u006e\u0074ai\u006e\u0073\u0020\u0072\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074");};_fabf =0;if _cdaeb .IsLossless {_fabf =1;};if _agfb =_egge .WriteBit (_fabf );
_agfb !=nil {return _cc .Wrap (_agfb ,_becc ,"p\u0061\u0067\u0065\u0020\u0069\u0073 \u0065\u0076\u0065\u006e\u0074\u0075\u0061\u006c\u006cy\u0020\u006c\u006fs\u0073l\u0065\u0073\u0073");};return nil ;};func (_cfce *TextRegion )decodeSymInRefSize ()(int64 ,error ){const _edeb ="\u0064e\u0063o\u0064\u0065\u0053\u0079\u006dI\u006e\u0052e\u0066\u0053\u0069\u007a\u0065";
if _cfce .SbHuffRSize ==0{_bcde ,_baac :=_gf .GetStandardTable (1);if _baac !=nil {return 0,_cc .Wrap (_baac ,_edeb ,"");};return _bcde .Decode (_cfce ._ceace );};if _cfce ._bdaac ==nil {var (_bffga int ;_debbe error ;);if _cfce .SbHuffFS ==3{_bffga ++;
};if _cfce .SbHuffDS ==3{_bffga ++;};if _cfce .SbHuffDT ==3{_bffga ++;};if _cfce .SbHuffRDWidth ==3{_bffga ++;};if _cfce .SbHuffRDHeight ==3{_bffga ++;};if _cfce .SbHuffRDX ==3{_bffga ++;};if _cfce .SbHuffRDY ==3{_bffga ++;};_cfce ._bdaac ,_debbe =_cfce .getUserTable (_bffga );
if _debbe !=nil {return 0,_cc .Wrap (_debbe ,_edeb ,"");};};_dbca ,_cfge :=_cfce ._bdaac .Decode (_cfce ._ceace );if _cfge !=nil {return 0,_cc .Wrap (_cfge ,_edeb ,"");};return _dbca ,nil ;};func (_bab *GenericRegion )overrideAtTemplate3 (_gefg ,_dcbd ,_bgga ,_ecbg ,_eged int )int {_gefg &=0x3EF;
if _bab .GBAtY [0]==0&&_bab .GBAtX [0]>=-int8 (_eged ){_gefg |=(_ecbg >>uint (7-(int8 (_eged )+_bab .GBAtX [0]))&0x1)<<4;}else {_gefg |=int (_bab .getPixel (_dcbd +int (_bab .GBAtX [0]),_bgga +int (_bab .GBAtY [0])))<<4;};return _gefg ;};func (_fcfd *GenericRegion )overrideAtTemplate0b (_ggc ,_abdg ,_bbc ,_fef ,_aagb ,_cebg int )int {if _fcfd .GBAtOverride [0]{_ggc &=0xFFFD;
if _fcfd .GBAtY [0]==0&&_fcfd .GBAtX [0]>=-int8 (_aagb ){_ggc |=(_fef >>uint (int8 (_cebg )-_fcfd .GBAtX [0]&0x1))<<1;}else {_ggc |=int (_fcfd .getPixel (_abdg +int (_fcfd .GBAtX [0]),_bbc +int (_fcfd .GBAtY [0])))<<1;};};if _fcfd .GBAtOverride [1]{_ggc &=0xDFFF;
if _fcfd .GBAtY [1]==0&&_fcfd .GBAtX [1]>=-int8 (_aagb ){_ggc |=(_fef >>uint (int8 (_cebg )-_fcfd .GBAtX [1]&0x1))<<13;}else {_ggc |=int (_fcfd .getPixel (_abdg +int (_fcfd .GBAtX [1]),_bbc +int (_fcfd .GBAtY [1])))<<13;};};if _fcfd .GBAtOverride [2]{_ggc &=0xFDFF;
if _fcfd .GBAtY [2]==0&&_fcfd .GBAtX [2]>=-int8 (_aagb ){_ggc |=(_fef >>uint (int8 (_cebg )-_fcfd .GBAtX [2]&0x1))<<9;}else {_ggc |=int (_fcfd .getPixel (_abdg +int (_fcfd .GBAtX [2]),_bbc +int (_fcfd .GBAtY [2])))<<9;};};if _fcfd .GBAtOverride [3]{_ggc &=0xBFFF;
if _fcfd .GBAtY [3]==0&&_fcfd .GBAtX [3]>=-int8 (_aagb ){_ggc |=(_fef >>uint (int8 (_cebg )-_fcfd .GBAtX [3]&0x1))<<14;}else {_ggc |=int (_fcfd .getPixel (_abdg +int (_fcfd .GBAtX [3]),_bbc +int (_fcfd .GBAtY [3])))<<14;};};if _fcfd .GBAtOverride [4]{_ggc &=0xEFFF;
if _fcfd .GBAtY [4]==0&&_fcfd .GBAtX [4]>=-int8 (_aagb ){_ggc |=(_fef >>uint (int8 (_cebg )-_fcfd .GBAtX [4]&0x1))<<12;}else {_ggc |=int (_fcfd .getPixel (_abdg +int (_fcfd .GBAtX [4]),_bbc +int (_fcfd .GBAtY [4])))<<12;};};if _fcfd .GBAtOverride [5]{_ggc &=0xFFDF;
if _fcfd .GBAtY [5]==0&&_fcfd .GBAtX [5]>=-int8 (_aagb ){_ggc |=(_fef >>uint (int8 (_cebg )-_fcfd .GBAtX [5]&0x1))<<5;}else {_ggc |=int (_fcfd .getPixel (_abdg +int (_fcfd .GBAtX [5]),_bbc +int (_fcfd .GBAtY [5])))<<5;};};if _fcfd .GBAtOverride [6]{_ggc &=0xFFFB;
if _fcfd .GBAtY [6]==0&&_fcfd .GBAtX [6]>=-int8 (_aagb ){_ggc |=(_fef >>uint (int8 (_cebg )-_fcfd .GBAtX [6]&0x1))<<2;}else {_ggc |=int (_fcfd .getPixel (_abdg +int (_fcfd .GBAtX [6]),_bbc +int (_fcfd .GBAtY [6])))<<2;};};if _fcfd .GBAtOverride [7]{_ggc &=0xFFF7;
if _fcfd .GBAtY [7]==0&&_fcfd .GBAtX [7]>=-int8 (_aagb ){_ggc |=(_fef >>uint (int8 (_cebg )-_fcfd .GBAtX [7]&0x1))<<3;}else {_ggc |=int (_fcfd .getPixel (_abdg +int (_fcfd .GBAtX [7]),_bbc +int (_fcfd .GBAtY [7])))<<3;};};if _fcfd .GBAtOverride [8]{_ggc &=0xF7FF;
if _fcfd .GBAtY [8]==0&&_fcfd .GBAtX [8]>=-int8 (_aagb ){_ggc |=(_fef >>uint (int8 (_cebg )-_fcfd .GBAtX [8]&0x1))<<11;}else {_ggc |=int (_fcfd .getPixel (_abdg +int (_fcfd .GBAtX [8]),_bbc +int (_fcfd .GBAtY [8])))<<11;};};if _fcfd .GBAtOverride [9]{_ggc &=0xFFEF;
if _fcfd .GBAtY [9]==0&&_fcfd .GBAtX [9]>=-int8 (_aagb ){_ggc |=(_fef >>uint (int8 (_cebg )-_fcfd .GBAtX [9]&0x1))<<4;}else {_ggc |=int (_fcfd .getPixel (_abdg +int (_fcfd .GBAtX [9]),_bbc +int (_fcfd .GBAtY [9])))<<4;};};if _fcfd .GBAtOverride [10]{_ggc &=0x7FFF;
if _fcfd .GBAtY [10]==0&&_fcfd .GBAtX [10]>=-int8 (_aagb ){_ggc |=(_fef >>uint (int8 (_cebg )-_fcfd .GBAtX [10]&0x1))<<15;}else {_ggc |=int (_fcfd .getPixel (_abdg +int (_fcfd .GBAtX [10]),_bbc +int (_fcfd .GBAtY [10])))<<15;};};if _fcfd .GBAtOverride [11]{_ggc &=0xFDFF;
if _fcfd .GBAtY [11]==0&&_fcfd .GBAtX [11]>=-int8 (_aagb ){_ggc |=(_fef >>uint (int8 (_cebg )-_fcfd .GBAtX [11]&0x1))<<10;}else {_ggc |=int (_fcfd .getPixel (_abdg +int (_fcfd .GBAtX [11]),_bbc +int (_fcfd .GBAtY [11])))<<10;};};return _ggc ;};func (_ggf *GenericRefinementRegion )Init (header *Header ,r _cb .StreamReader )error {_ggf ._dc =header ;
_ggf ._a =r ;_ggf .RegionInfo =NewRegionSegment (r );return _ggf .parseHeader ();};type Header struct{SegmentNumber uint32 ;Type Type ;RetainFlag bool ;PageAssociation int ;PageAssociationFieldSize bool ;RTSegments []*Header ;HeaderLength int64 ;SegmentDataLength uint64 ;
SegmentDataStartOffset uint64 ;Reader _cb .StreamReader ;SegmentData Segmenter ;RTSNumbers []int ;RetainBits []uint8 ;};func (_eafae *SymbolDictionary )setSymbolsArray ()error {if _eafae ._ecgb ==nil {if _bfbcc :=_eafae .retrieveImportSymbols ();_bfbcc !=nil {return _bfbcc ;
};};if _eafae ._dcae ==nil {_eafae ._dcae =append (_eafae ._dcae ,_eafae ._ecgb ...);};return nil ;};func (_cca *GenericRefinementRegion )getPixel (_bff *_ge .Bitmap ,_bcb ,_gee int )int {if _bcb < 0||_bcb >=_bff .Width {return 0;};if _gee < 0||_gee >=_bff .Height {return 0;
};if _bff .GetPixel (_bcb ,_gee ){return 1;};return 0;};func (_bcbe *PageInformationSegment )String ()string {_gcbc :=&_bd .Builder {};_gcbc .WriteString ("\u000a\u005b\u0050\u0041G\u0045\u002d\u0049\u004e\u0046\u004f\u0052\u004d\u0041\u0054I\u004fN\u002d\u0053\u0045\u0047\u004d\u0045\u004eT\u005d\u000a");
_gcbc .WriteString (_fga .Sprintf ("\u0009\u002d \u0042\u004d\u0048e\u0069\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u000a",_bcbe .PageBMHeight ));_gcbc .WriteString (_fga .Sprintf ("\u0009-\u0020B\u004d\u0057\u0069\u0064\u0074\u0068\u003a\u0020\u0025\u0064\u000a",_bcbe .PageBMWidth ));
_gcbc .WriteString (_fga .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0058\u003a\u0020\u0025\u0064\u000a",_bcbe .ResolutionX ));_gcbc .WriteString (_fga .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0059\u003a\u0020\u0025\u0064\u000a",_bcbe .ResolutionY ));
_gcbc .WriteString (_fga .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0073\u000a",_bcbe ._daad ));_gcbc .WriteString (_fga .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006eO\u0070\u0065\u0072\u0061\u0074\u006f\u0072O\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025v\u000a",_bcbe ._cefc ));
_gcbc .WriteString (_fga .Sprintf ("\u0009-\u0020I\u0073\u004c\u006f\u0073\u0073l\u0065\u0073s\u003a\u0020\u0025\u0076\u000a",_bcbe .IsLossless ));_gcbc .WriteString (_fga .Sprintf ("\u0009\u002d\u0020R\u0065\u0071\u0075\u0069r\u0065\u0073\u0041\u0075\u0078\u0069\u006ci\u0061\u0072\u0079\u0042\u0075\u0066\u0066\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_bcbe ._afgb ));
_gcbc .WriteString (_fga .Sprintf ("\u0009\u002d\u0020M\u0069\u0067\u0068\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0052e\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0076\u000a",_bcbe ._efdef ));_gcbc .WriteString (_fga .Sprintf ("\u0009\u002d\u0020\u0049\u0073\u0053\u0074\u0072\u0069\u0070\u0065\u0064:\u0020\u0025\u0076\u000a",_bcbe .IsStripe ));
_gcbc .WriteString (_fga .Sprintf ("\t\u002d\u0020\u004d\u0061xS\u0074r\u0069\u0070\u0065\u0053\u0069z\u0065\u003a\u0020\u0025\u0076\u000a",_bcbe .MaxStripeSize ));return _gcbc .String ();};const (ORandom OrganizationType =iota ;OSequential ;);func (_abdgbe *RegionSegment )parseHeader ()error {const _efcd ="p\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072";
_gc .Log .Trace ("\u005b\u0052\u0045\u0047I\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002dH\u0045A\u0044\u0045\u0052\u005d\u0020\u0042\u0065g\u0069\u006e");defer func (){_gc .Log .Trace ("\u005b\u0052\u0045G\u0049\u004f\u004e\u005d[\u0050\u0041\u0052\u0053\u0045\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
}();_gbaa ,_acbfe :=_abdgbe ._baag .ReadBits (32);if _acbfe !=nil {return _cc .Wrap (_acbfe ,_efcd ,"\u0077\u0069\u0064t\u0068");};_abdgbe .BitmapWidth =uint32 (_gbaa &_fg .MaxUint32 );_gbaa ,_acbfe =_abdgbe ._baag .ReadBits (32);if _acbfe !=nil {return _cc .Wrap (_acbfe ,_efcd ,"\u0068\u0065\u0069\u0067\u0068\u0074");
};_abdgbe .BitmapHeight =uint32 (_gbaa &_fg .MaxUint32 );_gbaa ,_acbfe =_abdgbe ._baag .ReadBits (32);if _acbfe !=nil {return _cc .Wrap (_acbfe ,_efcd ,"\u0078\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_abdgbe .XLocation =uint32 (_gbaa &_fg .MaxUint32 );
_gbaa ,_acbfe =_abdgbe ._baag .ReadBits (32);if _acbfe !=nil {return _cc .Wrap (_acbfe ,_efcd ,"\u0079\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_abdgbe .YLocation =uint32 (_gbaa &_fg .MaxUint32 );if _ ,_acbfe =_abdgbe ._baag .ReadBits (5);
_acbfe !=nil {return _cc .Wrap (_acbfe ,_efcd ,"\u0064i\u0072\u0079\u0020\u0072\u0065\u0061d");};if _acbfe =_abdgbe .readCombinationOperator ();_acbfe !=nil {return _cc .Wrap (_acbfe ,_efcd ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");
};return nil ;};func (_bbca *HalftoneRegion )shiftAndFill (_agb int )int {_agb >>=8;if _agb < 0{_aaac :=int (_fg .Log (float64 (_bbed (_agb )))/_fg .Log (2));_fcec :=31-_aaac ;for _aff :=1;_aff < _fcec ;_aff ++{_agb |=1<<uint (31-_aff );};};return _agb ;
};func (_add *SymbolDictionary )decodeHeightClassBitmap (_accda *_ge .Bitmap ,_gagb int64 ,_fcgb int ,_gbbg []int )error {for _fag :=_gagb ;_fag < int64 (_add ._gdcc );_fag ++{var _eecc int ;for _degf :=_gagb ;_degf <=_fag -1;_degf ++{_eecc +=_gbbg [_degf ];
};_ggb :=_g .Rect (_eecc ,0,_eecc +_gbbg [_fag ],_fcgb );_cefga ,_efeg :=_ge .Extract (_ggb ,_accda );if _efeg !=nil {return _efeg ;};_add ._ddd [_fag ]=_cefga ;_add ._dcae =append (_add ._dcae ,_cefga );};return nil ;};func (_fdacf *TextRegion )setCodingStatistics ()error {if _fdacf ._aeagb ==nil {_fdacf ._aeagb =_bg .NewStats (512,1);
};if _fdacf ._eaff ==nil {_fdacf ._eaff =_bg .NewStats (512,1);};if _fdacf ._efdg ==nil {_fdacf ._efdg =_bg .NewStats (512,1);};if _fdacf ._fcca ==nil {_fdacf ._fcca =_bg .NewStats (512,1);};if _fdacf ._gbgf ==nil {_fdacf ._gbgf =_bg .NewStats (512,1);
};if _fdacf ._caag ==nil {_fdacf ._caag =_bg .NewStats (512,1);};if _fdacf ._dbfef ==nil {_fdacf ._dbfef =_bg .NewStats (512,1);};if _fdacf ._cdffa ==nil {_fdacf ._cdffa =_bg .NewStats (1<<uint (_fdacf ._ggeg ),1);};if _fdacf ._defa ==nil {_fdacf ._defa =_bg .NewStats (512,1);
};if _fdacf ._adgg ==nil {_fdacf ._adgg =_bg .NewStats (512,1);};if _fdacf ._cfcae ==nil {var _aeagc error ;_fdacf ._cfcae ,_aeagc =_bg .New (_fdacf ._ceace );if _aeagc !=nil {return _aeagc ;};};return nil ;};func (_cagb *GenericRegion )parseHeader ()(_ccgd error ){_gc .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052I\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0050\u0061\u0072s\u0069\u006e\u0067\u0048\u0065\u0061\u0064e\u0072\u002e\u002e\u002e");
defer func (){if _ccgd !=nil {_gc .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e]\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065r\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0077\u0069th\u0020\u0065\u0072\u0072\u006f\u0072\u002e\u0020\u0025\u0076",_ccgd );
}else {_gc .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049C\u002d\u0052\u0045G\u0049\u004f\u004e]\u0020\u0050a\u0072\u0073\u0069\u006e\u0067\u0048e\u0061de\u0072\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0053\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079\u002e\u002e\u002e");
};}();var (_cbdb int ;_dgf uint64 ;);if _ccgd =_cagb .RegionSegment .parseHeader ();_ccgd !=nil {return _ccgd ;};if _ ,_ccgd =_cagb ._cee .ReadBits (3);_ccgd !=nil {return _ccgd ;};_cbdb ,_ccgd =_cagb ._cee .ReadBit ();if _ccgd !=nil {return _ccgd ;};if _cbdb ==1{_cagb .UseExtTemplates =true ;
};_cbdb ,_ccgd =_cagb ._cee .ReadBit ();if _ccgd !=nil {return _ccgd ;};if _cbdb ==1{_cagb .IsTPGDon =true ;};_dgf ,_ccgd =_cagb ._cee .ReadBits (2);if _ccgd !=nil {return _ccgd ;};_cagb .GBTemplate =byte (_dgf &0xf);_cbdb ,_ccgd =_cagb ._cee .ReadBit ();
if _ccgd !=nil {return _ccgd ;};if _cbdb ==1{_cagb .IsMMREncoded =true ;};if !_cagb .IsMMREncoded {_aagf :=1;if _cagb .GBTemplate ==0{_aagf =4;if _cagb .UseExtTemplates {_aagf =12;};};if _ccgd =_cagb .readGBAtPixels (_aagf );_ccgd !=nil {return _ccgd ;
};};if _ccgd =_cagb .computeSegmentDataStructure ();_ccgd !=nil {return _ccgd ;};_gc .Log .Trace ("\u0025\u0073",_cagb );return nil ;};func _edfg (_eege _cb .StreamReader ,_aebg *Header )*TextRegion {_cegag :=&TextRegion {_ceace :_eege ,Header :_aebg ,RegionInfo :NewRegionSegment (_eege )};
return _cegag ;};func (_fafe *GenericRegion )overrideAtTemplate1 (_fefb ,_eee ,_afgd ,_ecbe ,_gdc int )int {_fefb &=0x1FF7;if _fafe .GBAtY [0]==0&&_fafe .GBAtX [0]>=-int8 (_gdc ){_fefb |=(_ecbe >>uint (7-(int8 (_gdc )+_fafe .GBAtX [0]))&0x1)<<3;}else {_fefb |=int (_fafe .getPixel (_eee +int (_fafe .GBAtX [0]),_afgd +int (_fafe .GBAtY [0])))<<3;
};return _fefb ;};func (_bbfb *TextRegion )initSymbols ()error {const _befd ="i\u006e\u0069\u0074\u0053\u0079\u006d\u0062\u006f\u006c\u0073";for _ ,_agde :=range _bbfb .Header .RTSegments {if _agde ==nil {return _cc .Error (_befd ,"\u006e\u0069\u006c\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020pr\u006f\u0076\u0069\u0064\u0065\u0064 \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0074\u0065\u0078\u0074\u0020\u0072\u0065g\u0069\u006f\u006e\u0020\u0053\u0079\u006d\u0062o\u006c\u0073");
};if _agde .Type ==0{_cedf ,_gfgc :=_agde .GetSegmentData ();if _gfgc !=nil {return _cc .Wrap (_gfgc ,_befd ,"");};_dgcc ,_cdba :=_cedf .(*SymbolDictionary );if !_cdba {return _cc .Error (_befd ,"\u0072e\u0066\u0065r\u0072\u0065\u0064 \u0054\u006f\u0020\u0053\u0065\u0067\u006de\u006e\u0074\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_dgcc ._edacf =_bbfb ._cdffa ;_cbga ,_gfgc :=_dgcc .GetDictionary ();if _gfgc !=nil {return _cc .Wrap (_gfgc ,_befd ,"");};_bbfb .Symbols =append (_bbfb .Symbols ,_cbga ...);};};_bbfb .NumberOfSymbols =uint32 (len (_bbfb .Symbols ));return nil ;};func (_aeag *Header )GetSegmentData ()(Segmenter ,error ){var _bga Segmenter ;
if _aeag .SegmentData !=nil {_bga =_aeag .SegmentData ;};if _bga ==nil {_cgcc ,_efdce :=_fdfc [_aeag .Type ];if !_efdce {return nil ,_fga .Errorf ("\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0073\u002f\u0020\u0025\u0064\u0020\u0063\u0072e\u0061t\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e\u0020",_aeag .Type ,_aeag .Type );
};_bga =_cgcc ();_gc .Log .Trace ("\u005b\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u0020\u0061\u0074\u0020\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0030\u0034\u0058",_aeag .SegmentNumber ,_aeag .SegmentDataStartOffset );
_ddbd ,_fdg :=_aeag .subInputReader ();if _fdg !=nil {return nil ,_fdg ;};if _aadge :=_bga .Init (_aeag ,_ddbd );_aadge !=nil {_gc .Log .Debug ("\u0049\u006e\u0069\u0074 \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076 \u0066o\u0072\u0020\u0074\u0079\u0070\u0065\u003a \u0025\u0054",_aadge ,_bga );
return nil ,_aadge ;};_aeag .SegmentData =_bga ;};return _bga ,nil ;};func (_bcag *TextRegion )InitEncode (globalSymbolsMap ,localSymbolsMap map[int ]int ,comps []int ,inLL *_ge .Points ,symbols *_ge .Bitmaps ,classIDs *_ffc .IntSlice ,boxes *_ge .Boxes ,width ,height ,symBits int ){_bcag .RegionInfo =&RegionSegment {BitmapWidth :uint32 (width ),BitmapHeight :uint32 (height )};
_bcag ._aeac =globalSymbolsMap ;_bcag ._cade =localSymbolsMap ;_bcag ._cfbg =comps ;_bcag ._fabeb =inLL ;_bcag ._afcd =symbols ;_bcag ._fcaff =classIDs ;_bcag ._dcfeg =boxes ;_bcag ._faceb =symBits ;};func (_ecdg *SymbolDictionary )setRefinementAtPixels ()error {if !_ecdg .UseRefinementAggregation ||_ecdg .SdrTemplate !=0{return nil ;
};if _acff :=_ecdg .readRefinementAtPixels (2);_acff !=nil {return _acff ;};return nil ;};func (_fcbg *SymbolDictionary )setExportedSymbols (_edde []int ){for _eeg :=uint32 (0);_eeg < _fcbg ._gbg +_fcbg .NumberOfNewSymbols ;_eeg ++{if _edde [_eeg ]==1{var _fdgf *_ge .Bitmap ;
if _eeg < _fcbg ._gbg {_fdgf =_fcbg ._ecgb [_eeg ];}else {_fdgf =_fcbg ._ddd [_eeg -_fcbg ._gbg ];};_gc .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u002d\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u0020\u0041\u0064\u0064 E\u0078\u0070\u006fr\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027%\u0073\u0027",_fdgf );
_fcbg ._dffbd =append (_fcbg ._dffbd ,_fdgf );};};};var _ SegmentEncoder =&GenericRegion {};func (_cdff *SymbolDictionary )readNumberOfNewSymbols ()error {_gfbg ,_bbcc :=_cdff ._acee .ReadBits (32);if _bbcc !=nil {return _bbcc ;};_cdff .NumberOfNewSymbols =uint32 (_gfbg &_fg .MaxUint32 );
return nil ;};func (_ecc *HalftoneRegion )parseHeader ()error {if _cdfe :=_ecc .RegionSegment .parseHeader ();_cdfe !=nil {return _cdfe ;};_adb ,_fafc :=_ecc ._eabf .ReadBit ();if _fafc !=nil {return _fafc ;};_ecc .HDefaultPixel =int8 (_adb );_ceg ,_fafc :=_ecc ._eabf .ReadBits (3);
if _fafc !=nil {return _fafc ;};_ecc .CombinationOperator =_ge .CombinationOperator (_ceg &0xf);_adb ,_fafc =_ecc ._eabf .ReadBit ();if _fafc !=nil {return _fafc ;};if _adb ==1{_ecc .HSkipEnabled =true ;};_ceg ,_fafc =_ecc ._eabf .ReadBits (2);if _fafc !=nil {return _fafc ;
};_ecc .HTemplate =byte (_ceg &0xf);_adb ,_fafc =_ecc ._eabf .ReadBit ();if _fafc !=nil {return _fafc ;};if _adb ==1{_ecc .IsMMREncoded =true ;};_ceg ,_fafc =_ecc ._eabf .ReadBits (32);if _fafc !=nil {return _fafc ;};_ecc .HGridWidth =uint32 (_ceg &_fg .MaxUint32 );
_ceg ,_fafc =_ecc ._eabf .ReadBits (32);if _fafc !=nil {return _fafc ;};_ecc .HGridHeight =uint32 (_ceg &_fg .MaxUint32 );_ceg ,_fafc =_ecc ._eabf .ReadBits (32);if _fafc !=nil {return _fafc ;};_ecc .HGridX =int32 (_ceg &_fg .MaxInt32 );_ceg ,_fafc =_ecc ._eabf .ReadBits (32);
if _fafc !=nil {return _fafc ;};_ecc .HGridY =int32 (_ceg &_fg .MaxInt32 );_ceg ,_fafc =_ecc ._eabf .ReadBits (16);if _fafc !=nil {return _fafc ;};_ecc .HRegionX =uint16 (_ceg &_fg .MaxUint16 );_ceg ,_fafc =_ecc ._eabf .ReadBits (16);if _fafc !=nil {return _fafc ;
};_ecc .HRegionY =uint16 (_ceg &_fg .MaxUint16 );if _fafc =_ecc .computeSegmentDataStructure ();_fafc !=nil {return _fafc ;};return _ecc .checkInput ();};func (_deaa *SymbolDictionary )setAtPixels ()error {if _deaa .IsHuffmanEncoded {return nil ;};_fage :=1;
if _deaa .SdTemplate ==0{_fage =4;};if _cdfde :=_deaa .readAtPixels (_fage );_cdfde !=nil {return _cdfde ;};return nil ;};func (_dfbf *SymbolDictionary )huffDecodeBmSize ()(int64 ,error ){if _dfbf ._acf ==nil {var (_gge int ;_ecae error ;);if _dfbf .SdHuffDecodeHeightSelection ==3{_gge ++;
};if _dfbf .SdHuffDecodeWidthSelection ==3{_gge ++;};_dfbf ._acf ,_ecae =_dfbf .getUserTable (_gge );if _ecae !=nil {return 0,_ecae ;};};return _dfbf ._acf .Decode (_dfbf ._acee );};func (_cdad *TextRegion )decodeDfs ()(int64 ,error ){if _cdad .IsHuffmanEncoded {if _cdad .SbHuffFS ==3{if _cdad ._gbae ==nil {var _bafe error ;
_cdad ._gbae ,_bafe =_cdad .getUserTable (0);if _bafe !=nil {return 0,_bafe ;};};return _cdad ._gbae .Decode (_cdad ._ceace );};_fcgf ,_cgcbg :=_gf .GetStandardTable (6+int (_cdad .SbHuffFS ));if _cgcbg !=nil {return 0,_cgcbg ;};return _fcgf .Decode (_cdad ._ceace );
};_cgec ,_bcgd :=_cdad ._cfcae .DecodeInt (_cdad ._eaff );if _bcgd !=nil {return 0,_bcgd ;};return int64 (_cgec ),nil ;};var _ _gf .BasicTabler =&TableSegment {};func (_gdbf *HalftoneRegion )computeY (_ddea ,_ccaa int )int {return _gdbf .shiftAndFill (int (_gdbf .HGridY )+_ddea *int (_gdbf .HRegionX )-_ccaa *int (_gdbf .HRegionY ));
};func (_dfd *PageInformationSegment )Init (h *Header ,r _cb .StreamReader )(_gbe error ){_dfd ._gadb =r ;if _gbe =_dfd .parseHeader ();_gbe !=nil {return _cc .Wrap (_gbe ,"P\u0061\u0067\u0065\u0049\u006e\u0066o\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065g\u006d\u0065\u006et\u002eI\u006e\u0069\u0074","");
};return nil ;};func (_dadg *HalftoneRegion )computeX (_gdg ,_edgd int )int {return _dadg .shiftAndFill (int (_dadg .HGridX )+_gdg *int (_dadg .HRegionY )+_edgd *int (_dadg .HRegionX ));};func (_dbbac *SymbolDictionary )encodeFlags (_baaa _cb .BinaryWriter )(_cegc int ,_baea error ){const _aae ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _baea =_baaa .SkipBits (3);_baea !=nil {return 0,_cc .Wrap (_baea ,_aae ,"\u0065\u006d\u0070\u0074\u0079\u0020\u0062\u0069\u0074\u0073");};var _fbfc int ;if _dbbac .SdrTemplate > 0{_fbfc =1;};if _baea =_baaa .WriteBit (_fbfc );_baea !=nil {return _cegc ,_cc .Wrap (_baea ,_aae ,"s\u0064\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");
};_fbfc =0;if _dbbac .SdTemplate > 1{_fbfc =1;};if _baea =_baaa .WriteBit (_fbfc );_baea !=nil {return _cegc ,_cc .Wrap (_baea ,_aae ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_fbfc =0;if _dbbac .SdTemplate ==1||_dbbac .SdTemplate ==3{_fbfc =1;
};if _baea =_baaa .WriteBit (_fbfc );_baea !=nil {return _cegc ,_cc .Wrap (_baea ,_aae ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_fbfc =0;if _dbbac ._fgff {_fbfc =1;};if _baea =_baaa .WriteBit (_fbfc );_baea !=nil {return _cegc ,_cc .Wrap (_baea ,_aae ,"\u0063\u006f\u0064in\u0067\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0065\u0064");
};_fbfc =0;if _dbbac ._cddc {_fbfc =1;};if _baea =_baaa .WriteBit (_fbfc );_baea !=nil {return _cegc ,_cc .Wrap (_baea ,_aae ,"\u0063\u006f\u0064\u0069ng\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0075\u0073\u0065\u0064");};_fbfc =0;if _dbbac .SdHuffAggInstanceSelection {_fbfc =1;
};if _baea =_baaa .WriteBit (_fbfc );_baea !=nil {return _cegc ,_cc .Wrap (_baea ,_aae ,"\u0073\u0064\u0048\u0075\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074");};_fbfc =int (_dbbac .SdHuffBMSizeSelection );if _baea =_baaa .WriteBit (_fbfc );_baea !=nil {return _cegc ,_cc .Wrap (_baea ,_aae ,"\u0073\u0064\u0048u\u0066\u0066\u0042\u006d\u0053\u0069\u007a\u0065");
};_fbfc =0;if _dbbac .SdHuffDecodeWidthSelection > 1{_fbfc =1;};if _baea =_baaa .WriteBit (_fbfc );_baea !=nil {return _cegc ,_cc .Wrap (_baea ,_aae ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_fbfc =0;switch _dbbac .SdHuffDecodeWidthSelection {case 1,3:_fbfc =1;
};if _baea =_baaa .WriteBit (_fbfc );_baea !=nil {return _cegc ,_cc .Wrap (_baea ,_aae ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_fbfc =0;if _dbbac .SdHuffDecodeHeightSelection > 1{_fbfc =1;};if _baea =_baaa .WriteBit (_fbfc );
_baea !=nil {return _cegc ,_cc .Wrap (_baea ,_aae ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_fbfc =0;switch _dbbac .SdHuffDecodeHeightSelection {case 1,3:_fbfc =1;};if _baea =_baaa .WriteBit (_fbfc );_baea !=nil {return _cegc ,_cc .Wrap (_baea ,_aae ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");
};_fbfc =0;if _dbbac .UseRefinementAggregation {_fbfc =1;};if _baea =_baaa .WriteBit (_fbfc );_baea !=nil {return _cegc ,_cc .Wrap (_baea ,_aae ,"\u0073\u0064\u0052\u0065\u0066\u0041\u0067\u0067");};_fbfc =0;if _dbbac .IsHuffmanEncoded {_fbfc =1;};if _baea =_baaa .WriteBit (_fbfc );
_baea !=nil {return _cegc ,_cc .Wrap (_baea ,_aae ,"\u0073\u0064\u0048\u0075\u0066\u0066");};return 2,nil ;};func (_cfeaf *SymbolDictionary )getSymbol (_faega int )(*_ge .Bitmap ,error ){const _gcbf ="\u0067e\u0074\u0053\u0079\u006d\u0062\u006fl";_dadfa ,_gdcb :=_cfeaf ._eeca .GetBitmap (_cfeaf ._agag [_faega ]);
if _gdcb !=nil {return nil ,_cc .Wrap (_gdcb ,_gcbf ,"\u0063\u0061n\u0027\u0074\u0020g\u0065\u0074\u0020\u0073\u0079\u006d\u0062\u006f\u006c");};return _dadfa ,nil ;};func (_fabe *RegionSegment )Size ()int {return 17};func (_cgb *GenericRegion )decodeTemplate0b (_gbd ,_dfe ,_gbab int ,_cgaf ,_bcc int )(_eaea error ){const _edca ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0062";
var (_bccf ,_efg int ;_dff ,_gce int ;_eab byte ;_cef int ;);if _gbd >=1{_eab ,_eaea =_cgb .Bitmap .GetByte (_bcc );if _eaea !=nil {return _cc .Wrap (_eaea ,_edca ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_dff =int (_eab );};if _gbd >=2{_eab ,_eaea =_cgb .Bitmap .GetByte (_bcc -_cgb .Bitmap .RowStride );
if _eaea !=nil {return _cc .Wrap (_eaea ,_edca ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_gce =int (_eab )<<6;};_bccf =(_dff &0xf0)|(_gce &0x3800);for _ggga :=0;_ggga < _gbab ;_ggga =_cef {var (_aef byte ;_bebd int ;);_cef =_ggga +8;if _afg :=_dfe -_ggga ;
_afg > 8{_bebd =8;}else {_bebd =_afg ;};if _gbd > 0{_dff <<=8;if _cef < _dfe {_eab ,_eaea =_cgb .Bitmap .GetByte (_bcc +1);if _eaea !=nil {return _cc .Wrap (_eaea ,_edca ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_dff |=int (_eab );};};if _gbd > 1{_gce <<=8;
if _cef < _dfe {_eab ,_eaea =_cgb .Bitmap .GetByte (_bcc -_cgb .Bitmap .RowStride +1);if _eaea !=nil {return _cc .Wrap (_eaea ,_edca ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_gce |=int (_eab )<<6;};};for _afee :=0;_afee < _bebd ;_afee ++{_ecfe :=uint (7-_afee );
if _cgb ._ffff {_efg =_cgb .overrideAtTemplate0b (_bccf ,_ggga +_afee ,_gbd ,int (_aef ),_afee ,int (_ecfe ));_cgb ._efde .SetIndex (int32 (_efg ));}else {_cgb ._efde .SetIndex (int32 (_bccf ));};var _dbb int ;_dbb ,_eaea =_cgb ._efe .DecodeBit (_cgb ._efde );
if _eaea !=nil {return _cc .Wrap (_eaea ,_edca ,"");};_aef |=byte (_dbb <<_ecfe );_bccf =((_bccf &0x7bf7)<<1)|_dbb |((_dff >>_ecfe )&0x10)|((_gce >>_ecfe )&0x800);};if _bcd :=_cgb .Bitmap .SetByte (_cgaf ,_aef );_bcd !=nil {return _cc .Wrap (_bcd ,_edca ,"");
};_cgaf ++;_bcc ++;};return nil ;};func (_egeg *SymbolDictionary )getToExportFlags ()([]int ,error ){var (_fefc int ;_gddd int32 ;_afff error ;_eaad =int32 (_egeg ._gbg +_egeg .NumberOfNewSymbols );_bffa =make ([]int ,_eaad ););for _ecdd :=int32 (0);_ecdd < _eaad ;
_ecdd +=_gddd {if _egeg .IsHuffmanEncoded {_cgdg ,_gecgd :=_gf .GetStandardTable (1);if _gecgd !=nil {return nil ,_gecgd ;};_fdcd ,_gecgd :=_cgdg .Decode (_egeg ._acee );if _gecgd !=nil {return nil ,_gecgd ;};_gddd =int32 (_fdcd );}else {_gddd ,_afff =_egeg ._bdaa .DecodeInt (_egeg ._bbggc );
if _afff !=nil {return nil ,_afff ;};};if _gddd !=0{for _fdga :=_ecdd ;_fdga < _ecdd +_gddd ;_fdga ++{_bffa [_fdga ]=_fefc ;};};if _fefc ==0{_fefc =1;}else {_fefc =0;};};return _bffa ,nil ;};var _ templater =&template0 {};func (_bfa *template0 )form (_dceg ,_cgd ,_fab ,_aacb ,_bdef int16 )int16 {return (_dceg <<10)|(_cgd <<7)|(_fab <<4)|(_aacb <<1)|_bdef ;
};func (_ddced *TableSegment )HtOOB ()int32 {return _ddced ._effe };func (_acgd *Header )readSegmentPageAssociation (_eggfb Documenter ,_gbb _cb .StreamReader ,_caca uint64 ,_gaf ...int )(_dbba error ){const _caf ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074P\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061t\u0069\u006f\u006e";
if !_acgd .PageAssociationFieldSize {_abdgb ,_cbde :=_gbb .ReadBits (8);if _cbde !=nil {return _cc .Wrap (_cbde ,_caf ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_acgd .PageAssociation =int (_abdgb &0xFF);}else {_cdc ,_dcbe :=_gbb .ReadBits (32);
if _dcbe !=nil {return _cc .Wrap (_dcbe ,_caf ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_acgd .PageAssociation =int (_cdc &_fg .MaxInt32 );};if _caca ==0{return nil ;};if _acgd .PageAssociation !=0{_edab ,_eaca :=_eggfb .GetPage (_acgd .PageAssociation );
if _eaca !=nil {return _cc .Wrap (_eaca ,_caf ,"\u0061s\u0073\u006f\u0063\u0069a\u0074\u0065\u0064\u0020\u0070a\u0067e\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006ed");};var _ecda int ;for _bfac :=uint64 (0);_bfac < _caca ;_bfac ++{_ecda =_gaf [_bfac ];
_acgd .RTSegments [_bfac ],_eaca =_edab .GetSegment (_ecda );if _eaca !=nil {var _bagad error ;_acgd .RTSegments [_bfac ],_bagad =_eggfb .GetGlobalSegment (_ecda );if _bagad !=nil {return _cc .Wrapf (_eaca ,_caf ,"\u0072\u0065\u0066\u0065\u0072\u0065n\u0063\u0065\u0020s\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064\u0020\u0061\u0074\u0020pa\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0072\u0020\u0069\u006e\u0020\u0067\u006c\u006f\u0062\u0061\u006c\u0073",_acgd .PageAssociation );
};};};return nil ;};for _efba :=uint64 (0);_efba < _caca ;_efba ++{_acgd .RTSegments [_efba ],_dbba =_eggfb .GetGlobalSegment (_gaf [_efba ]);if _dbba !=nil {return _cc .Wrapf (_dbba ,_caf ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u003a\u0020\u0027\u0025d\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064",_gaf [_efba ]);
};};return nil ;};func (_dfce *TableSegment )HtHigh ()int32 {return _dfce ._ggba };func (_cece *GenericRegion )decodeSLTP ()(int ,error ){switch _cece .GBTemplate {case 0:_cece ._efde .SetIndex (0x9B25);case 1:_cece ._efde .SetIndex (0x795);case 2:_cece ._efde .SetIndex (0xE5);
case 3:_cece ._efde .SetIndex (0x195);};return _cece ._efe .DecodeBit (_cece ._efde );};func (_gbbe *TableSegment )Init (h *Header ,r _cb .StreamReader )error {_gbbe ._dae =r ;return _gbbe .parseHeader ();};func (_egdg *Header )readReferredToSegmentNumbers (_fgae _cb .StreamReader ,_geea int )([]int ,error ){const _cefb ="\u0072\u0065\u0061\u0064R\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053e\u0067m\u0065\u006e\u0074\u004e\u0075\u006d\u0062e\u0072\u0073";
_gdee :=make ([]int ,_geea );if _geea > 0{_egdg .RTSegments =make ([]*Header ,_geea );var (_gcbg uint64 ;_eeeee error ;);for _ebga :=0;_ebga < _geea ;_ebga ++{_gcbg ,_eeeee =_fgae .ReadBits (byte (_egdg .referenceSize ())<<3);if _eeeee !=nil {return nil ,_cc .Wrapf (_eeeee ,_cefb ,"\u0027\u0025\u0064\u0027 \u0072\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0020\u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u0075\u006db\u0065\u0072",_ebga );
};_gdee [_ebga ]=int (_gcbg &_fg .MaxInt32 );};};return _gdee ,nil ;};func (_ccg *GenericRefinementRegion )updateOverride ()error {if _ccg .GrAtX ==nil ||_ccg .GrAtY ==nil {return _fe .New ("\u0041\u0054\u0020\u0070\u0069\u0078\u0065\u006c\u0073\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");
};if len (_ccg .GrAtX )!=len (_ccg .GrAtY ){return _fe .New ("A\u0054\u0020\u0070\u0069xe\u006c \u0069\u006e\u0063\u006f\u006es\u0069\u0073\u0074\u0065\u006e\u0074");};_ccg ._dd =make ([]bool ,len (_ccg .GrAtX ));switch _ccg .TemplateID {case 0:if _ccg .GrAtX [0]!=-1&&_ccg .GrAtY [0]!=-1{_ccg ._dd [0]=true ;
_ccg ._be =true ;};if _ccg .GrAtX [1]!=-1&&_ccg .GrAtY [1]!=-1{_ccg ._dd [1]=true ;_ccg ._be =true ;};case 1:_ccg ._be =false ;};return nil ;};func (_ec *GenericRefinementRegion )GetRegionInfo ()*RegionSegment {return _ec .RegionInfo };type Regioner interface{GetRegionBitmap ()(*_ge .Bitmap ,error );
GetRegionInfo ()*RegionSegment ;};func (_aabe *TextRegion )GetRegionInfo ()*RegionSegment {return _aabe .RegionInfo };func (_bceg *PatternDictionary )Init (h *Header ,r _cb .StreamReader )error {_bceg ._afcf =r ;return _bceg .parseHeader ();};func (_fbcf *PageInformationSegment )checkInput ()error {if _fbcf .PageBMHeight ==_fg .MaxInt32 {if !_fbcf .IsStripe {_gc .Log .Debug ("P\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0053\u0065\u0067me\u006e\u0074\u002e\u0049s\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0073\u0068ou\u006c\u0064 \u0062\u0065\u0020\u0074\u0072\u0075\u0065\u002e");
};};return nil ;};func (_bcffa *PatternDictionary )setGbAtPixels (){if _bcffa .HDTemplate ==0{_bcffa .GBAtX =make ([]int8 ,4);_bcffa .GBAtY =make ([]int8 ,4);_bcffa .GBAtX [0]=-int8 (_bcffa .HdpWidth );_bcffa .GBAtY [0]=0;_bcffa .GBAtX [1]=-3;_bcffa .GBAtY [1]=-1;
_bcffa .GBAtX [2]=2;_bcffa .GBAtY [2]=-2;_bcffa .GBAtX [3]=-2;_bcffa .GBAtY [3]=-2;}else {_bcffa .GBAtX =[]int8 {-int8 (_bcffa .HdpWidth )};_bcffa .GBAtY =[]int8 {0};};};func (_ecce *PatternDictionary )readGrayMax ()error {_egc ,_ceea :=_ecce ._afcf .ReadBits (32);
if _ceea !=nil {return _ceea ;};_ecce .GrayMax =uint32 (_egc &_fg .MaxUint32 );return nil ;};func (_dcdba *SymbolDictionary )setInSyms ()error {if _dcdba .Header .RTSegments !=nil {return _dcdba .retrieveImportSymbols ();};_dcdba ._ecgb =make ([]*_ge .Bitmap ,0);
return nil ;};func NewGenericRegion (r _cb .StreamReader )*GenericRegion {return &GenericRegion {RegionSegment :NewRegionSegment (r ),_cee :r };};func (_afed *GenericRegion )setOverrideFlag (_fgcc int ){_afed .GBAtOverride [_fgcc ]=true ;_afed ._ffff =true ;
};func (_fgb *TextRegion )Encode (w _cb .BinaryWriter )(_cagc int ,_abab error ){const _aada ="\u0054\u0065\u0078\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u002e\u0045n\u0063\u006f\u0064\u0065";if _cagc ,_abab =_fgb .RegionInfo .Encode (w );_abab !=nil {return _cagc ,_cc .Wrap (_abab ,_aada ,"");
};var _fbee int ;if _fbee ,_abab =_fgb .encodeFlags (w );_abab !=nil {return _cagc ,_cc .Wrap (_abab ,_aada ,"");};_cagc +=_fbee ;if _fbee ,_abab =_fgb .encodeSymbols (w );_abab !=nil {return _cagc ,_cc .Wrap (_abab ,_aada ,"");};_cagc +=_fbee ;return _cagc ,nil ;
};func (_bbce *TableSegment )HtLow ()int32 {return _bbce ._ddfad };func (_beba *PatternDictionary )computeSegmentDataStructure ()error {_beba .DataOffset =_beba ._afcf .StreamPosition ();_beba .DataHeaderLength =_beba .DataOffset -_beba .DataHeaderOffset ;
_beba .DataLength =int64 (_beba ._afcf .Length ())-_beba .DataHeaderLength ;return nil ;};func (_fgf *PageInformationSegment )readMaxStripeSize ()error {_cfgg ,_beda :=_fgf ._gadb .ReadBits (15);if _beda !=nil {return _beda ;};_fgf .MaxStripeSize =uint16 (_cfgg &_fg .MaxUint16 );
return nil ;};func (_cdda *PageInformationSegment )readRequiresAuxiliaryBuffer ()error {_bef ,_bbae :=_cdda ._gadb .ReadBit ();if _bbae !=nil {return _bbae ;};if _bef ==1{_cdda ._afgb =true ;};return nil ;};func (_ecbd *TextRegion )createRegionBitmap ()error {_ecbd .RegionBitmap =_ge .New (int (_ecbd .RegionInfo .BitmapWidth ),int (_ecbd .RegionInfo .BitmapHeight ));
if _ecbd .DefaultPixel !=0{_ecbd .RegionBitmap .SetDefaultPixel ();};return nil ;};func (_egcg *TextRegion )blit (_fdfcfa *_ge .Bitmap ,_fafed int64 )error {if _egcg .IsTransposed ==0&&(_egcg .ReferenceCorner ==2||_egcg .ReferenceCorner ==3){_egcg ._gcgdc +=int64 (_fdfcfa .Width -1);
}else if _egcg .IsTransposed ==1&&(_egcg .ReferenceCorner ==0||_egcg .ReferenceCorner ==2){_egcg ._gcgdc +=int64 (_fdfcfa .Height -1);};_dadff :=_egcg ._gcgdc ;if _egcg .IsTransposed ==1{_dadff ,_fafed =_fafed ,_dadff ;};switch _egcg .ReferenceCorner {case 0:_fafed -=int64 (_fdfcfa .Height -1);
case 2:_fafed -=int64 (_fdfcfa .Height -1);_dadff -=int64 (_fdfcfa .Width -1);case 3:_dadff -=int64 (_fdfcfa .Width -1);};_fagec :=_ge .Blit (_fdfcfa ,_egcg .RegionBitmap ,int (_dadff ),int (_fafed ),_egcg .CombinationOperator );if _fagec !=nil {return _fagec ;
};if _egcg .IsTransposed ==0&&(_egcg .ReferenceCorner ==0||_egcg .ReferenceCorner ==1){_egcg ._gcgdc +=int64 (_fdfcfa .Width -1);};if _egcg .IsTransposed ==1&&(_egcg .ReferenceCorner ==1||_egcg .ReferenceCorner ==3){_egcg ._gcgdc +=int64 (_fdfcfa .Height -1);
};return nil ;};func (_gdac *TableSegment )HtRS ()int32 {return _gdac ._gbcb };func (_fcdg *TextRegion )symbolIDCodeLengths ()error {var (_gebeb []*_gf .Code ;_fecc uint64 ;_efcg _gf .Tabler ;_bbdb error ;);for _daee :=0;_daee < 35;_daee ++{_fecc ,_bbdb =_fcdg ._ceace .ReadBits (4);
if _bbdb !=nil {return _bbdb ;};_efegb :=int (_fecc &0xf);if _efegb > 0{_gebeb =append (_gebeb ,_gf .NewCode (int32 (_efegb ),0,int32 (_daee ),false ));};};_efcg ,_bbdb =_gf .NewFixedSizeTable (_gebeb );if _bbdb !=nil {return _bbdb ;};var (_fedgb int64 ;
_daeb uint32 ;_fegd []*_gf .Code ;_cfcb int64 ;);for _daeb < _fcdg .NumberOfSymbols {_cfcb ,_bbdb =_efcg .Decode (_fcdg ._ceace );if _bbdb !=nil {return _bbdb ;};if _cfcb < 32{if _cfcb > 0{_fegd =append (_fegd ,_gf .NewCode (int32 (_cfcb ),0,int32 (_daeb ),false ));
};_fedgb =_cfcb ;_daeb ++;}else {var _bebdb ,_gfc int64 ;switch _cfcb {case 32:_fecc ,_bbdb =_fcdg ._ceace .ReadBits (2);if _bbdb !=nil {return _bbdb ;};_bebdb =3+int64 (_fecc );if _daeb > 0{_gfc =_fedgb ;};case 33:_fecc ,_bbdb =_fcdg ._ceace .ReadBits (3);
if _bbdb !=nil {return _bbdb ;};_bebdb =3+int64 (_fecc );case 34:_fecc ,_bbdb =_fcdg ._ceace .ReadBits (7);if _bbdb !=nil {return _bbdb ;};_bebdb =11+int64 (_fecc );};for _ddcedd :=0;_ddcedd < int (_bebdb );_ddcedd ++{if _gfc > 0{_fegd =append (_fegd ,_gf .NewCode (int32 (_gfc ),0,int32 (_daeb ),false ));
};_daeb ++;};};};_fcdg ._ceace .Align ();_fcdg ._caagc ,_bbdb =_gf .NewFixedSizeTable (_fegd );return _bbdb ;};func (_eage *TextRegion )decodeRI ()(int64 ,error ){if !_eage .UseRefinement {return 0,nil ;};if _eage .IsHuffmanEncoded {_feg ,_dbbe :=_eage ._ceace .ReadBit ();
return int64 (_feg ),_dbbe ;};_fdbg ,_bccfg :=_eage ._cfcae .DecodeInt (_eage ._gbgf );return int64 (_fdbg ),_bccfg ;};func (_cd *GenericRegion )GetRegionBitmap ()(_gdb *_ge .Bitmap ,_bbfc error ){if _cd .Bitmap !=nil {return _cd .Bitmap ,nil ;};if _cd .IsMMREncoded {if _cd ._bgb ==nil {_cd ._bgb ,_bbfc =_d .New (_cd ._cee ,int (_cd .RegionSegment .BitmapWidth ),int (_cd .RegionSegment .BitmapHeight ),_cd .DataOffset ,_cd .DataLength );
if _bbfc !=nil {return nil ,_bbfc ;};};_cd .Bitmap ,_bbfc =_cd ._bgb .UncompressMMR ();return _cd .Bitmap ,_bbfc ;};if _bbfc =_cd .updateOverrideFlags ();_bbfc !=nil {return nil ,_bbfc ;};var _ddfaf int ;if _cd ._efe ==nil {_cd ._efe ,_bbfc =_bg .New (_cd ._cee );
if _bbfc !=nil {return nil ,_bbfc ;};};if _cd ._efde ==nil {_cd ._efde =_bg .NewStats (65536,1);};_cd .Bitmap =_ge .New (int (_cd .RegionSegment .BitmapWidth ),int (_cd .RegionSegment .BitmapHeight ));_gdf :=int (uint32 (_cd .Bitmap .Width +7)&(^uint32 (7)));
for _bfb :=0;_bfb < _cd .Bitmap .Height ;_bfb ++{if _cd .IsTPGDon {var _bbgg int ;_bbgg ,_bbfc =_cd .decodeSLTP ();if _bbfc !=nil {return nil ,_bbfc ;};_ddfaf ^=_bbgg ;};if _ddfaf ==1{if _bfb > 0{if _bbfc =_cd .copyLineAbove (_bfb );_bbfc !=nil {return nil ,_bbfc ;
};};}else {if _bbfc =_cd .decodeLine (_bfb ,_cd .Bitmap .Width ,_gdf );_bbfc !=nil {return nil ,_bbfc ;};};};return _cd .Bitmap ,nil ;};func (_eed *GenericRegion )readGBAtPixels (_dbac int )error {const _dab ="\u0072\u0065\u0061\u0064\u0047\u0042\u0041\u0074\u0050i\u0078\u0065\u006c\u0073";
_eed .GBAtX =make ([]int8 ,_dbac );_eed .GBAtY =make ([]int8 ,_dbac );for _dcga :=0;_dcga < _dbac ;_dcga ++{_ebg ,_ecfd :=_eed ._cee .ReadByte ();if _ecfd !=nil {return _cc .Wrapf (_ecfd ,_dab ,"\u0058\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_dcga );
};_eed .GBAtX [_dcga ]=int8 (_ebg );_ebg ,_ecfd =_eed ._cee .ReadByte ();if _ecfd !=nil {return _cc .Wrapf (_ecfd ,_dab ,"\u0059\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_dcga );};_eed .GBAtY [_dcga ]=int8 (_ebg );};return nil ;};func (_ccde *SymbolDictionary )InitEncode (symbols *_ge .Bitmaps ,symbolList []int ,symbolMap map[int ]int ,unborderSymbols bool )error {const _ggcb ="S\u0079\u006d\u0062\u006f\u006c\u0044i\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002eI\u006e\u0069\u0074E\u006ec\u006f\u0064\u0065";
_ccde .SdATX =[]int8 {3,-3,2,-2};_ccde .SdATY =[]int8 {-1,-1,-2,-2};_ccde ._eeca =symbols ;_ccde ._agag =make ([]int ,len (symbolList ));copy (_ccde ._agag ,symbolList );if len (_ccde ._agag )!=_ccde ._eeca .Size (){return _cc .Error (_ggcb ,"s\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0061\u006e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u004ci\u0073\u0074\u0020\u006f\u0066\u0020\u0064\u0069\u0066\u0066er\u0065\u006e\u0074 \u0073i\u007a\u0065");
};_ccde .NumberOfNewSymbols =uint32 (symbols .Size ());_ccde .NumberOfExportedSymbols =uint32 (symbols .Size ());_ccde ._affa =symbolMap ;_ccde ._egdga =unborderSymbols ;return nil ;};func (_fdba *TextRegion )decodeRdy ()(int64 ,error ){const _cagbe ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064y";
if _fdba .IsHuffmanEncoded {if _fdba .SbHuffRDY ==3{if _fdba ._bgfdc ==nil {var (_fcba int ;_bggaa error ;);if _fdba .SbHuffFS ==3{_fcba ++;};if _fdba .SbHuffDS ==3{_fcba ++;};if _fdba .SbHuffDT ==3{_fcba ++;};if _fdba .SbHuffRDWidth ==3{_fcba ++;};if _fdba .SbHuffRDHeight ==3{_fcba ++;
};if _fdba .SbHuffRDX ==3{_fcba ++;};_fdba ._bgfdc ,_bggaa =_fdba .getUserTable (_fcba );if _bggaa !=nil {return 0,_cc .Wrap (_bggaa ,_cagbe ,"");};};return _fdba ._bgfdc .Decode (_fdba ._ceace );};_ggde ,_ffcdc :=_gf .GetStandardTable (14+int (_fdba .SbHuffRDY ));
if _ffcdc !=nil {return 0,_ffcdc ;};return _ggde .Decode (_fdba ._ceace );};_bfeg ,_aece :=_fdba ._cfcae .DecodeInt (_fdba ._adgg );if _aece !=nil {return 0,_cc .Wrap (_aece ,_cagbe ,"");};return int64 (_bfeg ),nil ;};func (_ccgf *TextRegion )decodeID ()(int64 ,error ){if _ccgf .IsHuffmanEncoded {if _ccgf ._caagc ==nil {_gadbc ,_deeb :=_ccgf ._ceace .ReadBits (byte (_ccgf ._ggeg ));
return int64 (_gadbc ),_deeb ;};return _ccgf ._caagc .Decode (_ccgf ._ceace );};return _ccgf ._cfcae .DecodeIAID (uint64 (_ccgf ._ggeg ),_ccgf ._cdffa );};func (_ddeg *HalftoneRegion )checkInput ()error {if _ddeg .IsMMREncoded {if _ddeg .HTemplate !=0{_gc .Log .Debug ("\u0048\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030",_ddeg .HTemplate );
};if _ddeg .HSkipEnabled {_gc .Log .Debug ("\u0048\u0053\u006b\u0069\u0070\u0045\u006e\u0061\u0062\u006c\u0065\u0064\u0020\u0030\u0020\u0025\u0076\u0020(\u0073\u0068\u006f\u0075\u006c\u0064\u0020c\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020v\u0061\u006c\u0075\u0065\u0020\u0066\u0061\u006c\u0073\u0065\u0029",_ddeg .HSkipEnabled );
};};return nil ;};func (_fbfb *TextRegion )decodeIds ()(int64 ,error ){const _ecfab ="\u0064e\u0063\u006f\u0064\u0065\u0049\u0064s";if _fbfb .IsHuffmanEncoded {if _fbfb .SbHuffDS ==3{if _fbfb ._ccgde ==nil {_ddde :=0;if _fbfb .SbHuffFS ==3{_ddde ++;};var _ggag error ;
_fbfb ._ccgde ,_ggag =_fbfb .getUserTable (_ddde );if _ggag !=nil {return 0,_cc .Wrap (_ggag ,_ecfab ,"");};};return _fbfb ._ccgde .Decode (_fbfb ._ceace );};_abac ,_cddag :=_gf .GetStandardTable (8+int (_fbfb .SbHuffDS ));if _cddag !=nil {return 0,_cc .Wrap (_cddag ,_ecfab ,"");
};return _abac .Decode (_fbfb ._ceace );};_fgba ,_ffgf :=_fbfb ._cfcae .DecodeInt (_fbfb ._efdg );if _ffgf !=nil {return 0,_cc .Wrap (_ffgf ,_ecfab ,"\u0063\u0078\u0049\u0041\u0044\u0053");};return int64 (_fgba ),nil ;};func (_fdc *Header )writeReferredToSegments (_ecfcc _cb .BinaryWriter )(_baa int ,_bfdg error ){const _feb ="\u0077\u0072\u0069te\u0052\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
var (_fge uint16 ;_ecbc uint32 ;);_ccdfg :=_fdc .referenceSize ();_adbaf :=1;_gcbe :=make ([]byte ,_ccdfg );for _ ,_ebfe :=range _fdc .RTSNumbers {switch _ccdfg {case 4:_ecbc =uint32 (_ebfe );_ff .BigEndian .PutUint32 (_gcbe ,_ecbc );_adbaf ,_bfdg =_ecfcc .Write (_gcbe );
if _bfdg !=nil {return 0,_cc .Wrap (_bfdg ,_feb ,"u\u0069\u006e\u0074\u0033\u0032\u0020\u0073\u0069\u007a\u0065");};case 2:_fge =uint16 (_ebfe );_ff .BigEndian .PutUint16 (_gcbe ,_fge );_adbaf ,_bfdg =_ecfcc .Write (_gcbe );if _bfdg !=nil {return 0,_cc .Wrap (_bfdg ,_feb ,"\u0075\u0069\u006e\u0074\u0031\u0036");
};default:if _bfdg =_ecfcc .WriteByte (byte (_ebfe ));_bfdg !=nil {return 0,_cc .Wrap (_bfdg ,_feb ,"\u0075\u0069\u006et\u0038");};};_baa +=_adbaf ;};return _baa ,nil ;};func (_afeg *TextRegion )decodeRdh ()(int64 ,error ){const _ddec ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064h";
if _afeg .IsHuffmanEncoded {if _afeg .SbHuffRDHeight ==3{if _afeg ._bgdg ==nil {var (_cgdf int ;_cgeg error ;);if _afeg .SbHuffFS ==3{_cgdf ++;};if _afeg .SbHuffDS ==3{_cgdf ++;};if _afeg .SbHuffDT ==3{_cgdf ++;};if _afeg .SbHuffRDWidth ==3{_cgdf ++;};
_afeg ._bgdg ,_cgeg =_afeg .getUserTable (_cgdf );if _cgeg !=nil {return 0,_cc .Wrap (_cgeg ,_ddec ,"");};};return _afeg ._bgdg .Decode (_afeg ._ceace );};_edcg ,_gaace :=_gf .GetStandardTable (14+int (_afeg .SbHuffRDHeight ));if _gaace !=nil {return 0,_cc .Wrap (_gaace ,_ddec ,"");
};return _edcg .Decode (_afeg ._ceace );};_aafb ,_abec :=_afeg ._cfcae .DecodeInt (_afeg ._dbfef );if _abec !=nil {return 0,_cc .Wrap (_abec ,_ddec ,"");};return int64 (_aafb ),nil ;};func (_gfgf *SymbolDictionary )decodeNewSymbols (_aeeb ,_gcag uint32 ,_fcb *_ge .Bitmap ,_acaa ,_egdb int32 )error {if _gfgf ._cfba ==nil {_gfgf ._cfba =_cceb (_gfgf ._acee ,nil );
if _gfgf ._bdaa ==nil {var _gebc error ;_gfgf ._bdaa ,_gebc =_bg .New (_gfgf ._acee );if _gebc !=nil {return _gebc ;};};if _gfgf ._ddce ==nil {_gfgf ._ddce =_bg .NewStats (65536,1);};};_gfgf ._cfba .setParameters (_gfgf ._ddce ,_gfgf ._bdaa ,_gfgf .SdrTemplate ,_aeeb ,_gcag ,_fcb ,_acaa ,_egdb ,false ,_gfgf .SdrATX ,_gfgf .SdrATY );
return _gfgf .addSymbol (_gfgf ._cfba );};func (_bedc *PatternDictionary )checkInput ()error {if _bedc .HdpHeight < 1||_bedc .HdpWidth < 1{return _fe .New ("in\u0076\u0061l\u0069\u0064\u0020\u0048\u0065\u0061\u0064\u0065\u0072 \u0056\u0061\u006c\u0075\u0065\u003a\u0020\u0057\u0069\u0064\u0074\u0068\u002f\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020g\u0072e\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020z\u0065\u0072o");
};if _bedc .IsMMREncoded {if _bedc .HDTemplate !=0{_gc .Log .Debug ("\u0076\u0061\u0072\u0069\u0061\u0062\u006c\u0065\u0020\u0048\u0044\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e \u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030");
};};return nil ;};func (_bee *GenericRegion )setParametersMMR (_feda bool ,_fgdg ,_eddg int64 ,_dfgac ,_ggab uint32 ,_efa byte ,_ecfed ,_dabg bool ,_cacc ,_dgb []int8 ){_bee .DataOffset =_fgdg ;_bee .DataLength =_eddg ;_bee .RegionSegment =&RegionSegment {};
_bee .RegionSegment .BitmapHeight =_dfgac ;_bee .RegionSegment .BitmapWidth =_ggab ;_bee .GBTemplate =_efa ;_bee .IsMMREncoded =_feda ;_bee .IsTPGDon =_ecfed ;_bee .GBAtX =_cacc ;_bee .GBAtY =_dgb ;};func (_dgab *Header )CleanSegmentData (){if _dgab .SegmentData !=nil {_dgab .SegmentData =nil ;
};};func (_bfbc *PatternDictionary )readTemplate ()error {_fdea ,_cdde :=_bfbc ._afcf .ReadBits (2);if _cdde !=nil {return _cdde ;};_bfbc .HDTemplate =byte (_fdea );return nil ;};func (_cgeb *GenericRefinementRegion )parseHeader ()(_gag error ){_gc .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0048e\u0061\u0064e\u0072\u002e\u002e\u002e");
_eda :=_c .Now ();defer func (){if _gag ==nil {_gc .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045G\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020h\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0069\u006e\u0069\u0073\u0068id\u0020\u0069\u006e\u003a\u0020\u0025\u0064\u0020\u006e\u0073",_c .Since (_eda ).Nanoseconds ());
}else {_gc .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0068\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0073",_gag );
};}();if _gag =_cgeb .RegionInfo .parseHeader ();_gag !=nil {return _gag ;};_ ,_gag =_cgeb ._a .ReadBits (6);if _gag !=nil {return _gag ;};_cgeb .IsTPGROn ,_gag =_cgeb ._a .ReadBool ();if _gag !=nil {return _gag ;};var _bfdc int ;_bfdc ,_gag =_cgeb ._a .ReadBit ();
if _gag !=nil {return _gag ;};_cgeb .TemplateID =int8 (_bfdc );switch _cgeb .TemplateID {case 0:_cgeb .Template =_cgeb ._bdd ;if _gag =_cgeb .readAtPixels ();_gag !=nil {return ;};case 1:_cgeb .Template =_cgeb ._bb ;};return nil ;};var _ templater =&template1 {};
func (_babc *SymbolDictionary )decodeRefinedSymbol (_affg ,_feag uint32 )error {var (_ccda int ;_bbea ,_cabb int32 ;);if _babc .IsHuffmanEncoded {_dgc ,_cfac :=_babc ._acee .ReadBits (byte (_babc ._agdb ));if _cfac !=nil {return _cfac ;};_ccda =int (_dgc );
_beeg ,_cfac :=_gf .GetStandardTable (15);if _cfac !=nil {return _cfac ;};_cdaed ,_cfac :=_beeg .Decode (_babc ._acee );if _cfac !=nil {return _cfac ;};_bbea =int32 (_cdaed );_cdaed ,_cfac =_beeg .Decode (_babc ._acee );if _cfac !=nil {return _cfac ;};
_cabb =int32 (_cdaed );_beeg ,_cfac =_gf .GetStandardTable (1);if _cfac !=nil {return _cfac ;};if _ ,_cfac =_beeg .Decode (_babc ._acee );_cfac !=nil {return _cfac ;};_babc ._acee .Align ();}else {_gafb ,_dbfb :=_babc ._bdaa .DecodeIAID (uint64 (_babc ._agdb ),_babc ._edacf );
if _dbfb !=nil {return _dbfb ;};_ccda =int (_gafb );_bbea ,_dbfb =_babc ._bdaa .DecodeInt (_babc ._eaee );if _dbfb !=nil {return _dbfb ;};_cabb ,_dbfb =_babc ._bdaa .DecodeInt (_babc ._abbe );if _dbfb !=nil {return _dbfb ;};};if _gbbc :=_babc .setSymbolsArray ();
_gbbc !=nil {return _gbbc ;};_bffg :=_babc ._dcae [_ccda ];if _fbge :=_babc .decodeNewSymbols (_affg ,_feag ,_bffg ,_bbea ,_cabb );_fbge !=nil {return _fbge ;};if _babc .IsHuffmanEncoded {_babc ._acee .Align ();};return nil ;};type OrganizationType uint8 ;
func _cceb (_ffb _cb .StreamReader ,_faa *Header )*GenericRefinementRegion {return &GenericRefinementRegion {_a :_ffb ,RegionInfo :NewRegionSegment (_ffb ),_dc :_faa ,_bdd :&template0 {},_bb :&template1 {}};};func (_bed *GenericRegion )getPixel (_dbd ,_cfae int )int8 {if _dbd < 0||_dbd >=_bed .Bitmap .Width {return 0;
};if _cfae < 0||_cfae >=_bed .Bitmap .Height {return 0;};if _bed .Bitmap .GetPixel (_dbd ,_cfae ){return 1;};return 0;};func (_fceb *SymbolDictionary )decodeDifferenceWidth ()(int64 ,error ){if _fceb .IsHuffmanEncoded {switch _fceb .SdHuffDecodeWidthSelection {case 0:_decc ,_dbbbde :=_gf .GetStandardTable (2);
if _dbbbde !=nil {return 0,_dbbbde ;};return _decc .Decode (_fceb ._acee );case 1:_aabf ,_bgfd :=_gf .GetStandardTable (3);if _bgfd !=nil {return 0,_bgfd ;};return _aabf .Decode (_fceb ._acee );case 3:if _fceb ._bea ==nil {var _agac int ;if _fceb .SdHuffDecodeHeightSelection ==3{_agac ++;
};_aec ,_fdgg :=_fceb .getUserTable (_agac );if _fdgg !=nil {return 0,_fdgg ;};_fceb ._bea =_aec ;};return _fceb ._bea .Decode (_fceb ._acee );};}else {_bbff ,_aege :=_fceb ._bdaa .DecodeInt (_fceb ._gggcc );if _aege !=nil {return 0,_aege ;};return int64 (_bbff ),nil ;
};return 0,nil ;};func (_gfeg *TextRegion )decodeRdw ()(int64 ,error ){const _cgecf ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064w";if _gfeg .IsHuffmanEncoded {if _gfeg .SbHuffRDWidth ==3{if _gfeg ._bfdfc ==nil {var (_dgbf int ;_abee error ;);if _gfeg .SbHuffFS ==3{_dgbf ++;
};if _gfeg .SbHuffDS ==3{_dgbf ++;};if _gfeg .SbHuffDT ==3{_dgbf ++;};_gfeg ._bfdfc ,_abee =_gfeg .getUserTable (_dgbf );if _abee !=nil {return 0,_cc .Wrap (_abee ,_cgecf ,"");};};return _gfeg ._bfdfc .Decode (_gfeg ._ceace );};_gdacd ,_ggaf :=_gf .GetStandardTable (14+int (_gfeg .SbHuffRDWidth ));
if _ggaf !=nil {return 0,_cc .Wrap (_ggaf ,_cgecf ,"");};return _gdacd .Decode (_gfeg ._ceace );};_eafe ,_dbg :=_gfeg ._cfcae .DecodeInt (_gfeg ._caag );if _dbg !=nil {return 0,_cc .Wrap (_dbg ,_cgecf ,"");};return int64 (_eafe ),nil ;};func (_ccdc *RegionSegment )String ()string {_deba :=&_bd .Builder {};
_deba .WriteString ("\u0009[\u0052E\u0047\u0049\u004f\u004e\u0020S\u0045\u0047M\u0045\u004e\u0054\u005d\u000a");_deba .WriteString (_fga .Sprintf ("\t\u0009\u002d\u0020\u0042\u0069\u0074m\u0061\u0070\u0020\u0028\u0077\u0069d\u0074\u0068\u002c\u0020\u0068\u0065\u0069g\u0068\u0074\u0029\u0020\u005b\u0025\u0064\u0078\u0025\u0064]\u000a",_ccdc .BitmapWidth ,_ccdc .BitmapHeight ));
_deba .WriteString (_fga .Sprintf ("\u0009\u0009\u002d\u0020L\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0028\u0078,\u0079)\u003a\u0020\u005b\u0025\u0064\u002c\u0025d\u005d\u000a",_ccdc .XLocation ,_ccdc .YLocation ));_deba .WriteString (_fga .Sprintf ("\t\u0009\u002d\u0020\u0043\u006f\u006db\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070e\u0072\u0061\u0074o\u0072:\u0020\u0025\u0073",_ccdc .CombinaionOperator ));
return _deba .String ();};func (_fdec *HalftoneRegion )combineGrayscalePlanes (_dfcc []*_ge .Bitmap ,_edbd int )error {_cdfd :=0;for _eebd :=0;_eebd < _dfcc [_edbd ].Height ;_eebd ++{for _gcge :=0;_gcge < _dfcc [_edbd ].Width ;_gcge +=8{_cbba ,_gggc :=_dfcc [_edbd +1].GetByte (_cdfd );
if _gggc !=nil {return _gggc ;};_aeg ,_gggc :=_dfcc [_edbd ].GetByte (_cdfd );if _gggc !=nil {return _gggc ;};_gggc =_dfcc [_edbd ].SetByte (_cdfd ,_ge .CombineBytes (_aeg ,_cbba ,_ge .CmbOpXor ));if _gggc !=nil {return _gggc ;};_cdfd ++;};};return nil ;
};func (_fgga *SymbolDictionary )readAtPixels (_cdgd int )error {_fgga .SdATX =make ([]int8 ,_cdgd );_fgga .SdATY =make ([]int8 ,_cdgd );var (_aceec byte ;_ggfea error ;);for _gabf :=0;_gabf < _cdgd ;_gabf ++{_aceec ,_ggfea =_fgga ._acee .ReadByte ();if _ggfea !=nil {return _ggfea ;
};_fgga .SdATX [_gabf ]=int8 (_aceec );_aceec ,_ggfea =_fgga ._acee .ReadByte ();if _ggfea !=nil {return _ggfea ;};_fgga .SdATY [_gabf ]=int8 (_aceec );};return nil ;};func (_efgb *RegionSegment )readCombinationOperator ()error {_dbfe ,_ebgc :=_efgb ._baag .ReadBits (3);
if _ebgc !=nil {return _ebgc ;};_efgb .CombinaionOperator =_ge .CombinationOperator (_dbfe &0xF);return nil ;};func (_ebc *SymbolDictionary )readRefinementAtPixels (_cbfg int )error {_ebc .SdrATX =make ([]int8 ,_cbfg );_ebc .SdrATY =make ([]int8 ,_cbfg );
var (_ddag byte ;_ecde error ;);for _cgca :=0;_cgca < _cbfg ;_cgca ++{_ddag ,_ecde =_ebc ._acee .ReadByte ();if _ecde !=nil {return _ecde ;};_ebc .SdrATX [_cgca ]=int8 (_ddag );_ddag ,_ecde =_ebc ._acee .ReadByte ();if _ecde !=nil {return _ecde ;};_ebc .SdrATY [_cgca ]=int8 (_ddag );
};return nil ;};type RegionSegment struct{_baag _cb .StreamReader ;BitmapWidth uint32 ;BitmapHeight uint32 ;XLocation uint32 ;YLocation uint32 ;CombinaionOperator _ge .CombinationOperator ;};func (_eag *SymbolDictionary )decodeHeightClassDeltaHeight ()(int64 ,error ){if _eag .IsHuffmanEncoded {return _eag .decodeHeightClassDeltaHeightWithHuffman ();
};_fggf ,_cdge :=_eag ._bdaa .DecodeInt (_eag ._afbc );if _cdge !=nil {return 0,_cdge ;};return int64 (_fggf ),nil ;};func (_fcbgf *TextRegion )setContexts (_dada *_bg .DecoderStats ,_cdedf *_bg .DecoderStats ,_fccb *_bg .DecoderStats ,_feae *_bg .DecoderStats ,_addc *_bg .DecoderStats ,_bfde *_bg .DecoderStats ,_ddcfc *_bg .DecoderStats ,_dbda *_bg .DecoderStats ,_eeda *_bg .DecoderStats ,_babf *_bg .DecoderStats ){_fcbgf ._aeagb =_cdedf ;
_fcbgf ._eaff =_fccb ;_fcbgf ._efdg =_feae ;_fcbgf ._fcca =_addc ;_fcbgf ._caag =_ddcfc ;_fcbgf ._dbfef =_dbda ;_fcbgf ._cdffa =_bfde ;_fcbgf ._defa =_eeda ;_fcbgf ._adgg =_babf ;_fcbgf ._cagdc =_dada ;};func (_accb *TextRegion )readHuffmanFlags ()error {var (_fabfg int ;
_fgaf uint64 ;_accc error ;);_ ,_accc =_accb ._ceace .ReadBit ();if _accc !=nil {return _accc ;};_fabfg ,_accc =_accb ._ceace .ReadBit ();if _accc !=nil {return _accc ;};_accb .SbHuffRSize =int8 (_fabfg );_fgaf ,_accc =_accb ._ceace .ReadBits (2);if _accc !=nil {return _accc ;
};_accb .SbHuffRDY =int8 (_fgaf )&0xf;_fgaf ,_accc =_accb ._ceace .ReadBits (2);if _accc !=nil {return _accc ;};_accb .SbHuffRDX =int8 (_fgaf )&0xf;_fgaf ,_accc =_accb ._ceace .ReadBits (2);if _accc !=nil {return _accc ;};_accb .SbHuffRDHeight =int8 (_fgaf )&0xf;
_fgaf ,_accc =_accb ._ceace .ReadBits (2);if _accc !=nil {return _accc ;};_accb .SbHuffRDWidth =int8 (_fgaf )&0xf;_fgaf ,_accc =_accb ._ceace .ReadBits (2);if _accc !=nil {return _accc ;};_accb .SbHuffDT =int8 (_fgaf )&0xf;_fgaf ,_accc =_accb ._ceace .ReadBits (2);
if _accc !=nil {return _accc ;};_accb .SbHuffDS =int8 (_fgaf )&0xf;_fgaf ,_accc =_accb ._ceace .ReadBits (2);if _accc !=nil {return _accc ;};_accb .SbHuffFS =int8 (_fgaf )&0xf;return nil ;};