//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package segments ;import (_e "encoding/binary";_ba "errors";_d "fmt";_ab "github.com/unidoc/unipdf/v3/common";_de "github.com/unidoc/unipdf/v3/internal/bitwise";_eg "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_cf "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";
_ga "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/arithmetic";_ded "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/huffman";_cb "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/mmr";_ed "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/arithmetic";
_g "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_ff "github.com/unidoc/unipdf/v3/internal/jbig2/internal";_fd "golang.org/x/xerrors";_b "image";_bf "io";_f "math";_cg "strings";_a "time";);func (_gcgb *SymbolDictionary )addSymbol (_ccea Regioner )error {_fdfe ,_dccg :=_ccea .GetRegionBitmap ();
if _dccg !=nil {return _dccg ;};_gcgb ._aedga [_gcgb ._fdag ]=_fdfe ;_gcgb ._becb =append (_gcgb ._becb ,_fdfe );_ab .Log .Trace ("\u005b\u0053YM\u0042\u004f\u004c \u0044\u0049\u0043\u0054ION\u0041RY\u005d\u0020\u0041\u0064\u0064\u0065\u0064 s\u0079\u006d\u0062\u006f\u006c\u003a\u0020%\u0073",_fdfe );
return nil ;};type GenericRegion struct{_gec _de .StreamReader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;UseExtTemplates bool ;IsTPGDon bool ;GBTemplate byte ;IsMMREncoded bool ;UseMMR bool ;
GBAtX []int8 ;GBAtY []int8 ;GBAtOverride []bool ;_adg bool ;Bitmap *_cf .Bitmap ;_edc *_ga .Decoder ;_degg *_ga .DecoderStats ;_bed *_cb .Decoder ;};func (_efb *GenericRefinementRegion )decodeOptimized (_efd ,_af ,_ca ,_gef ,_fdc ,_gaf ,_gfg int )error {var (_fcf error ;
_gg int ;_ec int ;);_dd :=_efd -int (_efb .ReferenceDY );if _be :=int (-_efb .ReferenceDX );_be > 0{_gg =_be ;};_eda :=_efb .ReferenceBitmap .GetByteIndex (_gg ,_dd );if _efb .ReferenceDX > 0{_ec =int (_efb .ReferenceDX );};_fg :=_efb .RegionBitmap .GetByteIndex (_ec ,_efd );
switch _efb .TemplateID {case 0:_fcf =_efb .decodeTemplate (_efd ,_af ,_ca ,_gef ,_fdc ,_gaf ,_gfg ,_fg ,_dd ,_eda ,_efb ._ge );case 1:_fcf =_efb .decodeTemplate (_efd ,_af ,_ca ,_gef ,_fdc ,_gaf ,_gfg ,_fg ,_dd ,_eda ,_efb ._db );};return _fcf ;};func (_gcc *SymbolDictionary )setInSyms ()error {if _gcc .Header .RTSegments !=nil {return _gcc .retrieveImportSymbols ();
};_gcc ._gcg =make ([]*_cf .Bitmap ,0);return nil ;};func (_fbcd *PageInformationSegment )encodeStripingInformation (_abga _de .BinaryWriter )(_daad int ,_bcca error ){const _fbfe ="\u0065n\u0063\u006f\u0064\u0065S\u0074\u0072\u0069\u0070\u0069n\u0067I\u006ef\u006f\u0072\u006d\u0061\u0074\u0069\u006fn";
if !_fbcd .IsStripe {if _daad ,_bcca =_abga .Write ([]byte {0x00,0x00});_bcca !=nil {return 0,_g .Wrap (_bcca ,_fbfe ,"n\u006f\u0020\u0073\u0074\u0072\u0069\u0070\u0069\u006e\u0067");};return _daad ,nil ;};_gefc :=make ([]byte ,2);_e .BigEndian .PutUint16 (_gefc ,_fbcd .MaxStripeSize |1<<15);
if _daad ,_bcca =_abga .Write (_gefc );_bcca !=nil {return 0,_g .Wrapf (_bcca ,_fbfe ,"\u0073\u0074\u0072i\u0070\u0069\u006e\u0067\u003a\u0020\u0025\u0064",_fbcd .MaxStripeSize );};return _daad ,nil ;};func (_dbdd *TextRegion )decodeSymInRefSize ()(int64 ,error ){const _fced ="\u0064e\u0063o\u0064\u0065\u0053\u0079\u006dI\u006e\u0052e\u0066\u0053\u0069\u007a\u0065";
if _dbdd .SbHuffRSize ==0{_fffa ,_gfdd :=_ded .GetStandardTable (1);if _gfdd !=nil {return 0,_g .Wrap (_gfdd ,_fced ,"");};return _fffa .Decode (_dbdd ._egcf );};if _dbdd ._dgaea ==nil {var (_bdfb int ;_abgd error ;);if _dbdd .SbHuffFS ==3{_bdfb ++;};if _dbdd .SbHuffDS ==3{_bdfb ++;
};if _dbdd .SbHuffDT ==3{_bdfb ++;};if _dbdd .SbHuffRDWidth ==3{_bdfb ++;};if _dbdd .SbHuffRDHeight ==3{_bdfb ++;};if _dbdd .SbHuffRDX ==3{_bdfb ++;};if _dbdd .SbHuffRDY ==3{_bdfb ++;};_dbdd ._dgaea ,_abgd =_dbdd .getUserTable (_bdfb );if _abgd !=nil {return 0,_g .Wrap (_abgd ,_fced ,"");
};};_ccabb ,_fcage :=_dbdd ._dgaea .Decode (_dbdd ._egcf );if _fcage !=nil {return 0,_g .Wrap (_fcage ,_fced ,"");};return _ccabb ,nil ;};func NewRegionSegment (r _de .StreamReader )*RegionSegment {return &RegionSegment {_bcab :r }};func (_cegd *SymbolDictionary )checkInput ()error {if _cegd .SdHuffDecodeHeightSelection ==2{_ab .Log .Debug ("\u0053\u0079\u006d\u0062\u006fl\u0020\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u0053e\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0070\u0065r\u006d\u0069\u0074\u0074\u0065\u0064",_cegd .SdHuffDecodeHeightSelection );
};if _cegd .SdHuffDecodeWidthSelection ==2{_ab .Log .Debug ("\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0057\u0069\u0064t\u0068\u0020\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061l\u0075\u0065\u0020\u006e\u006f\u0074 \u0070\u0065r\u006d\u0069t\u0074e\u0064",_cegd .SdHuffDecodeWidthSelection );
};if _cegd .IsHuffmanEncoded {if _cegd .SdTemplate !=0{_ab .Log .Debug ("\u0053\u0044T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e \u0030\u0029",_cegd .SdTemplate );
};if !_cegd .UseRefinementAggregation {if !_cegd .UseRefinementAggregation {if _cegd ._cbf {_ab .Log .Debug ("\u0049\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074ex\u0074\u0052\u0065\u0074\u0061\u0069n\u0065\u0064\u0020\u003d\u0020\u0074\u0072\u0075\u0065\u0020\u0028\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0066\u0061\u006cs\u0065\u0029");
_cegd ._cbf =false ;};if _cegd ._ffaba {_ab .Log .Debug ("\u0069s\u0043\u006fd\u0069\u006e\u0067\u0043o\u006e\u0074\u0065x\u0074\u0055\u0073\u0065\u0064\u0020\u003d\u0020\u0074ru\u0065\u0020\u0028s\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020f\u0061\u006cs\u0065\u0029");
_cegd ._ffaba =false ;};};};}else {if _cegd .SdHuffBMSizeSelection !=0{_ab .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066B\u004d\u0053\u0069\u007a\u0065\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_cegd .SdHuffBMSizeSelection =0;};if _cegd .SdHuffDecodeWidthSelection !=0{_ab .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068\u0053\u0065\u006c\u0065\u0063\u0074\u0069o\u006e\u0020\u0073\u0068\u006fu\u006c\u0064 \u0062\u0065\u0020\u0030");
_cegd .SdHuffDecodeWidthSelection =0;};if _cegd .SdHuffDecodeHeightSelection !=0{_ab .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0048e\u0069\u0067\u0068\u0074\u0053\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_cegd .SdHuffDecodeHeightSelection =0;};};if !_cegd .UseRefinementAggregation {if _cegd .SdrTemplate !=0{_ab .Log .Debug ("\u0053\u0044\u0052\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u003d\u0020\u0025\u0064\u0020\u0028s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_cegd .SdrTemplate );
_cegd .SdrTemplate =0;};};if !_cegd .IsHuffmanEncoded ||!_cegd .UseRefinementAggregation {if _cegd .SdHuffAggInstanceSelection {_ab .Log .Debug ("\u0053d\u0048\u0075f\u0066\u0041\u0067g\u0049\u006e\u0073\u0074\u0061\u006e\u0063e\u0053\u0065\u006c\u0065\u0063\u0074i\u006f\u006e\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_cegd .SdHuffAggInstanceSelection );
};};return nil ;};func (_dgde *SymbolDictionary )decodeAggregate (_afge ,_cgea uint32 )error {var (_caec int64 ;_gfce error ;);if _dgde .IsHuffmanEncoded {_caec ,_gfce =_dgde .huffDecodeRefAggNInst ();if _gfce !=nil {return _gfce ;};}else {_gadf ,_gfbb :=_dgde ._ebgeg .DecodeInt (_dgde ._fgaage );
if _gfbb !=nil {return _gfbb ;};_caec =int64 (_gadf );};if _caec > 1{return _dgde .decodeThroughTextRegion (_afge ,_cgea ,uint32 (_caec ));}else if _caec ==1{return _dgde .decodeRefinedSymbol (_afge ,_cgea );};return nil ;};func (_abad *GenericRegion )overrideAtTemplate0b (_acca ,_fadd ,_deff ,_afe ,_afec ,_fcag int )int {if _abad .GBAtOverride [0]{_acca &=0xFFFD;
if _abad .GBAtY [0]==0&&_abad .GBAtX [0]>=-int8 (_afec ){_acca |=(_afe >>uint (int8 (_fcag )-_abad .GBAtX [0]&0x1))<<1;}else {_acca |=int (_abad .getPixel (_fadd +int (_abad .GBAtX [0]),_deff +int (_abad .GBAtY [0])))<<1;};};if _abad .GBAtOverride [1]{_acca &=0xDFFF;
if _abad .GBAtY [1]==0&&_abad .GBAtX [1]>=-int8 (_afec ){_acca |=(_afe >>uint (int8 (_fcag )-_abad .GBAtX [1]&0x1))<<13;}else {_acca |=int (_abad .getPixel (_fadd +int (_abad .GBAtX [1]),_deff +int (_abad .GBAtY [1])))<<13;};};if _abad .GBAtOverride [2]{_acca &=0xFDFF;
if _abad .GBAtY [2]==0&&_abad .GBAtX [2]>=-int8 (_afec ){_acca |=(_afe >>uint (int8 (_fcag )-_abad .GBAtX [2]&0x1))<<9;}else {_acca |=int (_abad .getPixel (_fadd +int (_abad .GBAtX [2]),_deff +int (_abad .GBAtY [2])))<<9;};};if _abad .GBAtOverride [3]{_acca &=0xBFFF;
if _abad .GBAtY [3]==0&&_abad .GBAtX [3]>=-int8 (_afec ){_acca |=(_afe >>uint (int8 (_fcag )-_abad .GBAtX [3]&0x1))<<14;}else {_acca |=int (_abad .getPixel (_fadd +int (_abad .GBAtX [3]),_deff +int (_abad .GBAtY [3])))<<14;};};if _abad .GBAtOverride [4]{_acca &=0xEFFF;
if _abad .GBAtY [4]==0&&_abad .GBAtX [4]>=-int8 (_afec ){_acca |=(_afe >>uint (int8 (_fcag )-_abad .GBAtX [4]&0x1))<<12;}else {_acca |=int (_abad .getPixel (_fadd +int (_abad .GBAtX [4]),_deff +int (_abad .GBAtY [4])))<<12;};};if _abad .GBAtOverride [5]{_acca &=0xFFDF;
if _abad .GBAtY [5]==0&&_abad .GBAtX [5]>=-int8 (_afec ){_acca |=(_afe >>uint (int8 (_fcag )-_abad .GBAtX [5]&0x1))<<5;}else {_acca |=int (_abad .getPixel (_fadd +int (_abad .GBAtX [5]),_deff +int (_abad .GBAtY [5])))<<5;};};if _abad .GBAtOverride [6]{_acca &=0xFFFB;
if _abad .GBAtY [6]==0&&_abad .GBAtX [6]>=-int8 (_afec ){_acca |=(_afe >>uint (int8 (_fcag )-_abad .GBAtX [6]&0x1))<<2;}else {_acca |=int (_abad .getPixel (_fadd +int (_abad .GBAtX [6]),_deff +int (_abad .GBAtY [6])))<<2;};};if _abad .GBAtOverride [7]{_acca &=0xFFF7;
if _abad .GBAtY [7]==0&&_abad .GBAtX [7]>=-int8 (_afec ){_acca |=(_afe >>uint (int8 (_fcag )-_abad .GBAtX [7]&0x1))<<3;}else {_acca |=int (_abad .getPixel (_fadd +int (_abad .GBAtX [7]),_deff +int (_abad .GBAtY [7])))<<3;};};if _abad .GBAtOverride [8]{_acca &=0xF7FF;
if _abad .GBAtY [8]==0&&_abad .GBAtX [8]>=-int8 (_afec ){_acca |=(_afe >>uint (int8 (_fcag )-_abad .GBAtX [8]&0x1))<<11;}else {_acca |=int (_abad .getPixel (_fadd +int (_abad .GBAtX [8]),_deff +int (_abad .GBAtY [8])))<<11;};};if _abad .GBAtOverride [9]{_acca &=0xFFEF;
if _abad .GBAtY [9]==0&&_abad .GBAtX [9]>=-int8 (_afec ){_acca |=(_afe >>uint (int8 (_fcag )-_abad .GBAtX [9]&0x1))<<4;}else {_acca |=int (_abad .getPixel (_fadd +int (_abad .GBAtX [9]),_deff +int (_abad .GBAtY [9])))<<4;};};if _abad .GBAtOverride [10]{_acca &=0x7FFF;
if _abad .GBAtY [10]==0&&_abad .GBAtX [10]>=-int8 (_afec ){_acca |=(_afe >>uint (int8 (_fcag )-_abad .GBAtX [10]&0x1))<<15;}else {_acca |=int (_abad .getPixel (_fadd +int (_abad .GBAtX [10]),_deff +int (_abad .GBAtY [10])))<<15;};};if _abad .GBAtOverride [11]{_acca &=0xFDFF;
if _abad .GBAtY [11]==0&&_abad .GBAtX [11]>=-int8 (_afec ){_acca |=(_afe >>uint (int8 (_fcag )-_abad .GBAtX [11]&0x1))<<10;}else {_acca |=int (_abad .getPixel (_fadd +int (_abad .GBAtX [11]),_deff +int (_abad .GBAtY [11])))<<10;};};return _acca ;};func (_cagg *PatternDictionary )readPatternWidthAndHeight ()error {_fbcf ,_agfbb :=_cagg ._ccd .ReadByte ();
if _agfbb !=nil {return _agfbb ;};_cagg .HdpWidth =_fbcf ;_fbcf ,_agfbb =_cagg ._ccd .ReadByte ();if _agfbb !=nil {return _agfbb ;};_cagg .HdpHeight =_fbcf ;return nil ;};func (_bgaa *PageInformationSegment )parseHeader ()(_fgfb error ){_ab .Log .Trace ("\u005b\u0050\u0061\u0067\u0065I\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067m\u0065\u006e\u0074\u005d\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u002e\u002e");
defer func (){var _cdgb ="[\u0050\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072m\u0061\u0074\u0069\u006f\u006e\u0053\u0065gm\u0065\u006e\u0074\u005d \u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065ad\u0065\u0072 \u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064";
if _fgfb !=nil {_cdgb +="\u0020\u0077\u0069t\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u0020"+_fgfb .Error ();}else {_cdgb +="\u0020\u0073\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079";};_ab .Log .Trace (_cdgb );}();if _fgfb =_bgaa .readWidthAndHeight ();
_fgfb !=nil {return _fgfb ;};if _fgfb =_bgaa .readResolution ();_fgfb !=nil {return _fgfb ;};_ ,_fgfb =_bgaa ._ggc .ReadBit ();if _fgfb !=nil {return _fgfb ;};if _fgfb =_bgaa .readCombinationOperatorOverrideAllowed ();_fgfb !=nil {return _fgfb ;};if _fgfb =_bgaa .readRequiresAuxiliaryBuffer ();
_fgfb !=nil {return _fgfb ;};if _fgfb =_bgaa .readCombinationOperator ();_fgfb !=nil {return _fgfb ;};if _fgfb =_bgaa .readDefaultPixelValue ();_fgfb !=nil {return _fgfb ;};if _fgfb =_bgaa .readContainsRefinement ();_fgfb !=nil {return _fgfb ;};if _fgfb =_bgaa .readIsLossless ();
_fgfb !=nil {return _fgfb ;};if _fgfb =_bgaa .readIsStriped ();_fgfb !=nil {return _fgfb ;};if _fgfb =_bgaa .readMaxStripeSize ();_fgfb !=nil {return _fgfb ;};if _fgfb =_bgaa .checkInput ();_fgfb !=nil {return _fgfb ;};_ab .Log .Trace ("\u0025\u0073",_bgaa );
return nil ;};type Regioner interface{GetRegionBitmap ()(*_cf .Bitmap ,error );GetRegionInfo ()*RegionSegment ;};func (_cbdcc *SymbolDictionary )decodeHeightClassDeltaHeightWithHuffman ()(int64 ,error ){switch _cbdcc .SdHuffDecodeHeightSelection {case 0:_aafg ,_cebb :=_ded .GetStandardTable (4);
if _cebb !=nil {return 0,_cebb ;};return _aafg .Decode (_cbdcc ._eegc );case 1:_afdd ,_gdfdc :=_ded .GetStandardTable (5);if _gdfdc !=nil {return 0,_gdfdc ;};return _afdd .Decode (_cbdcc ._eegc );case 3:if _cbdcc ._fbdc ==nil {_fdca ,_efde :=_ded .GetStandardTable (0);
if _efde !=nil {return 0,_efde ;};_cbdcc ._fbdc =_fdca ;};return _cbdcc ._fbdc .Decode (_cbdcc ._eegc );};return 0,nil ;};func (_dgab *SymbolDictionary )setExportedSymbols (_afea []int ){for _ecfca :=uint32 (0);_ecfca < _dgab ._cbff +_dgab .NumberOfNewSymbols ;
_ecfca ++{if _afea [_ecfca ]==1{var _fbdce *_cf .Bitmap ;if _ecfca < _dgab ._cbff {_fbdce =_dgab ._gcg [_ecfca ];}else {_fbdce =_dgab ._aedga [_ecfca -_dgab ._cbff ];};_ab .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u002d\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u0020\u0041\u0064\u0064 E\u0078\u0070\u006fr\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027%\u0073\u0027",_fbdce );
_dgab ._fgdeb =append (_dgab ._fgdeb ,_fbdce );};};};func (_eeac *SymbolDictionary )readRefinementAtPixels (_gcae int )error {_eeac .SdrATX =make ([]int8 ,_gcae );_eeac .SdrATY =make ([]int8 ,_gcae );var (_cbbg byte ;_aeecg error ;);for _adga :=0;_adga < _gcae ;
_adga ++{_cbbg ,_aeecg =_eeac ._eegc .ReadByte ();if _aeecg !=nil {return _aeecg ;};_eeac .SdrATX [_adga ]=int8 (_cbbg );_cbbg ,_aeecg =_eeac ._eegc .ReadByte ();if _aeecg !=nil {return _aeecg ;};_eeac .SdrATY [_adga ]=int8 (_cbbg );};return nil ;};func (_aaec *TextRegion )setContexts (_cegc *_ga .DecoderStats ,_acbeg *_ga .DecoderStats ,_ecbbg *_ga .DecoderStats ,_eggaf *_ga .DecoderStats ,_cdbd *_ga .DecoderStats ,_aaga *_ga .DecoderStats ,_edgec *_ga .DecoderStats ,_gcdc *_ga .DecoderStats ,_dbac *_ga .DecoderStats ,_fdfca *_ga .DecoderStats ){_aaec ._ccfd =_acbeg ;
_aaec ._dcgdd =_ecbbg ;_aaec ._gdga =_eggaf ;_aaec ._gbce =_cdbd ;_aaec ._becac =_edgec ;_aaec ._gddad =_gcdc ;_aaec ._bdac =_aaga ;_aaec ._abed =_dbac ;_aaec ._faa =_fdfca ;_aaec ._fffd =_cegc ;};var (_ecac Segmenter ;_fgfc =map[Type ]func ()Segmenter {TSymbolDictionary :func ()Segmenter {return &SymbolDictionary {}},TIntermediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateLosslessTextRegion :func ()Segmenter {return &TextRegion {}},TPatternDictionary :func ()Segmenter {return &PatternDictionary {}},TIntermediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateLosslessHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TIntermediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateLosslessGenericRegion :func ()Segmenter {return &GenericRegion {}},TIntermediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateLosslessGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TPageInformation :func ()Segmenter {return &PageInformationSegment {}},TEndOfPage :func ()Segmenter {return _ecac },TEndOfStrip :func ()Segmenter {return &EndOfStripe {}},TEndOfFile :func ()Segmenter {return _ecac },TProfiles :func ()Segmenter {return _ecac },TTables :func ()Segmenter {return &TableSegment {}},TExtension :func ()Segmenter {return _ecac },TBitmap :func ()Segmenter {return _ecac }};
);func (_edgf *Header )readSegmentPageAssociation (_adaab Documenter ,_acde _de .StreamReader ,_gacf uint64 ,_defd ...int )(_bdfc error ){const _bbgf ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074P\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061t\u0069\u006f\u006e";
if !_edgf .PageAssociationFieldSize {_ddg ,_bfbd :=_acde .ReadBits (8);if _bfbd !=nil {return _g .Wrap (_bfbd ,_bbgf ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_edgf .PageAssociation =int (_ddg &0xFF);}else {_dggd ,_dggf :=_acde .ReadBits (32);
if _dggf !=nil {return _g .Wrap (_dggf ,_bbgf ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_edgf .PageAssociation =int (_dggd &_f .MaxInt32 );};if _gacf ==0{return nil ;};if _edgf .PageAssociation !=0{_ecfg ,_aggf :=_adaab .GetPage (_edgf .PageAssociation );
if _aggf !=nil {return _g .Wrap (_aggf ,_bbgf ,"\u0061s\u0073\u006f\u0063\u0069a\u0074\u0065\u0064\u0020\u0070a\u0067e\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006ed");};var _eac int ;for _fbae :=uint64 (0);_fbae < _gacf ;_fbae ++{_eac =_defd [_fbae ];
_edgf .RTSegments [_fbae ],_aggf =_ecfg .GetSegment (_eac );if _aggf !=nil {var _agca error ;_edgf .RTSegments [_fbae ],_agca =_adaab .GetGlobalSegment (_eac );if _agca !=nil {return _g .Wrapf (_aggf ,_bbgf ,"\u0072\u0065\u0066\u0065\u0072\u0065n\u0063\u0065\u0020s\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064\u0020\u0061\u0074\u0020pa\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0072\u0020\u0069\u006e\u0020\u0067\u006c\u006f\u0062\u0061\u006c\u0073",_edgf .PageAssociation );
};};};return nil ;};for _befa :=uint64 (0);_befa < _gacf ;_befa ++{_edgf .RTSegments [_befa ],_bdfc =_adaab .GetGlobalSegment (_defd [_befa ]);if _bdfc !=nil {return _g .Wrapf (_bdfc ,_bbgf ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u003a\u0020\u0027\u0025d\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064",_defd [_befa ]);
};};return nil ;};func (_edee *PatternDictionary )computeSegmentDataStructure ()error {_edee .DataOffset =_edee ._ccd .StreamPosition ();_edee .DataHeaderLength =_edee .DataOffset -_edee .DataHeaderOffset ;_edee .DataLength =int64 (_edee ._ccd .Length ())-_edee .DataHeaderLength ;
return nil ;};func (_cfgc *Header )readHeaderFlags ()error {const _egdbg ="\u0072e\u0061d\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006c\u0061\u0067\u0073";_cbdg ,_fccc :=_cfgc .Reader .ReadBit ();if _fccc !=nil {return _g .Wrap (_fccc ,_egdbg ,"r\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067");
};if _cbdg !=0{_cfgc .RetainFlag =true ;};_cbdg ,_fccc =_cfgc .Reader .ReadBit ();if _fccc !=nil {return _g .Wrap (_fccc ,_egdbg ,"\u0070\u0061g\u0065\u0020\u0061s\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e");};if _cbdg !=0{_cfgc .PageAssociationFieldSize =true ;
};_dba ,_fccc :=_cfgc .Reader .ReadBits (6);if _fccc !=nil {return _g .Wrap (_fccc ,_egdbg ,"\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065");};_cfgc .Type =Type (int (_dba ));return nil ;};func (_ecb *GenericRegion )getPixel (_deac ,_cfcb int )int8 {if _deac < 0||_deac >=_ecb .Bitmap .Width {return 0;
};if _cfcb < 0||_cfcb >=_ecb .Bitmap .Height {return 0;};if _ecb .Bitmap .GetPixel (_deac ,_cfcb ){return 1;};return 0;};func (_fafc *PatternDictionary )readTemplate ()error {_fce ,_aedd :=_fafc ._ccd .ReadBits (2);if _aedd !=nil {return _aedd ;};_fafc .HDTemplate =byte (_fce );
return nil ;};func (_ac *EndOfStripe )parseHeader (_df *Header ,_gf _de .StreamReader )error {_deg ,_abc :=_ac ._abd .ReadBits (32);if _abc !=nil {return _abc ;};_ac ._cga =int (_deg &_f .MaxInt32 );return nil ;};func (_adaa *Header )readNumberOfReferredToSegments (_ecba _de .StreamReader )(uint64 ,error ){const _cfge ="\u0072\u0065\u0061\u0064\u004e\u0075\u006d\u0062\u0065\u0072O\u0066\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
_gadg ,_gea :=_ecba .ReadBits (3);if _gea !=nil {return 0,_g .Wrap (_gea ,_cfge ,"\u0063\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0072\u0074\u0073");};_gadg &=0xf;var _ffg []byte ;if _gadg <=4{_ffg =make ([]byte ,5);for _gefd :=0;_gefd <=4;_gefd ++{_bae ,_gdbc :=_ecba .ReadBit ();
if _gdbc !=nil {return 0,_g .Wrap (_gdbc ,_cfge ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_ffg [_gefd ]=byte (_bae );};}else {_gadg ,_gea =_ecba .ReadBits (29);if _gea !=nil {return 0,_gea ;};_gadg &=_f .MaxInt32 ;_afc :=(_gadg +8)>>3;
_afc <<=3;_ffg =make ([]byte ,_afc );var _fdbb uint64 ;for _fdbb =0;_fdbb < _afc ;_fdbb ++{_feg ,_cceb :=_ecba .ReadBit ();if _cceb !=nil {return 0,_g .Wrap (_cceb ,_cfge ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_ffg [_fdbb ]=byte (_feg );
};};return _gadg ,nil ;};func (_dde *GenericRegion )setParameters (_egda bool ,_ega ,_agbb int64 ,_geea ,_fgbc uint32 ){_dde .IsMMREncoded =_egda ;_dde .DataOffset =_ega ;_dde .DataLength =_agbb ;_dde .RegionSegment .BitmapHeight =_geea ;_dde .RegionSegment .BitmapWidth =_fgbc ;
_dde ._bed =nil ;_dde .Bitmap =nil ;};func (_agea *GenericRegion )overrideAtTemplate2 (_dgdf ,_cdfc ,_cbcg ,_egde ,_ffd int )int {_dgdf &=0x3FB;if _agea .GBAtY [0]==0&&_agea .GBAtX [0]>=-int8 (_ffd ){_dgdf |=(_egde >>uint (7-(int8 (_ffd )+_agea .GBAtX [0]))&0x1)<<2;
}else {_dgdf |=int (_agea .getPixel (_cdfc +int (_agea .GBAtX [0]),_cbcg +int (_agea .GBAtY [0])))<<2;};return _dgdf ;};type Header struct{SegmentNumber uint32 ;Type Type ;RetainFlag bool ;PageAssociation int ;PageAssociationFieldSize bool ;RTSegments []*Header ;
HeaderLength int64 ;SegmentDataLength uint64 ;SegmentDataStartOffset uint64 ;Reader _de .StreamReader ;SegmentData Segmenter ;RTSNumbers []int ;RetainBits []uint8 ;};func (_ffddb *PageInformationSegment )readIsStriped ()error {_cec ,_cddd :=_ffddb ._ggc .ReadBit ();
if _cddd !=nil {return _cddd ;};if _cec ==1{_ffddb .IsStripe =true ;};return nil ;};type PageInformationSegment struct{_ggc _de .StreamReader ;PageBMHeight int ;PageBMWidth int ;ResolutionX int ;ResolutionY int ;_beea bool ;_cbdgc _cf .CombinationOperator ;
_aeda bool ;DefaultPixelValue uint8 ;_geec bool ;IsLossless bool ;IsStripe bool ;MaxStripeSize uint16 ;};type Segmenter interface{Init (_bceg *Header ,_bgbc _de .StreamReader )error ;};func (_fbg *HalftoneRegion )parseHeader ()error {if _egfbf :=_fbg .RegionSegment .parseHeader ();
_egfbf !=nil {return _egfbf ;};_beg ,_gdeg :=_fbg ._ecc .ReadBit ();if _gdeg !=nil {return _gdeg ;};_fbg .HDefaultPixel =int8 (_beg );_ecbe ,_gdeg :=_fbg ._ecc .ReadBits (3);if _gdeg !=nil {return _gdeg ;};_fbg .CombinationOperator =_cf .CombinationOperator (_ecbe &0xf);
_beg ,_gdeg =_fbg ._ecc .ReadBit ();if _gdeg !=nil {return _gdeg ;};if _beg ==1{_fbg .HSkipEnabled =true ;};_ecbe ,_gdeg =_fbg ._ecc .ReadBits (2);if _gdeg !=nil {return _gdeg ;};_fbg .HTemplate =byte (_ecbe &0xf);_beg ,_gdeg =_fbg ._ecc .ReadBit ();if _gdeg !=nil {return _gdeg ;
};if _beg ==1{_fbg .IsMMREncoded =true ;};_ecbe ,_gdeg =_fbg ._ecc .ReadBits (32);if _gdeg !=nil {return _gdeg ;};_fbg .HGridWidth =uint32 (_ecbe &_f .MaxUint32 );_ecbe ,_gdeg =_fbg ._ecc .ReadBits (32);if _gdeg !=nil {return _gdeg ;};_fbg .HGridHeight =uint32 (_ecbe &_f .MaxUint32 );
_ecbe ,_gdeg =_fbg ._ecc .ReadBits (32);if _gdeg !=nil {return _gdeg ;};_fbg .HGridX =int32 (_ecbe &_f .MaxInt32 );_ecbe ,_gdeg =_fbg ._ecc .ReadBits (32);if _gdeg !=nil {return _gdeg ;};_fbg .HGridY =int32 (_ecbe &_f .MaxInt32 );_ecbe ,_gdeg =_fbg ._ecc .ReadBits (16);
if _gdeg !=nil {return _gdeg ;};_fbg .HRegionX =uint16 (_ecbe &_f .MaxUint16 );_ecbe ,_gdeg =_fbg ._ecc .ReadBits (16);if _gdeg !=nil {return _gdeg ;};_fbg .HRegionY =uint16 (_ecbe &_f .MaxUint16 );if _gdeg =_fbg .computeSegmentDataStructure ();_gdeg !=nil {return _gdeg ;
};return _fbg .checkInput ();};func (_edg *GenericRefinementRegion )getGrReference ()(*_cf .Bitmap ,error ){segments :=_edg ._abdg .RTSegments ;if len (segments )==0{return nil ,_ba .New ("\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0065\u0078is\u0074\u0073");
};_agd ,_bfe :=segments [0].GetSegmentData ();if _bfe !=nil {return nil ,_bfe ;};_abde ,_ad :=_agd .(Regioner );if !_ad {return nil ,_d .Errorf ("\u0072\u0065\u0066\u0065\u0072r\u0065\u0064\u0020\u0074\u006f\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_agd );
};return _abde .GetRegionBitmap ();};func (_fe *GenericRefinementRegion )decodeSLTP ()(int ,error ){_fe .Template .setIndex (_fe ._cgg );return _fe ._ag .DecodeBit (_fe ._cgg );};type Documenter interface{GetPage (int )(Pager ,error );GetGlobalSegment (int )(*Header ,error );
};func (_bbda *GenericRegion )String ()string {_acea :=&_cg .Builder {};_acea .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_acea .WriteString (_bbda .RegionSegment .String ()+"\u000a");_acea .WriteString (_d .Sprintf ("\u0009\u002d\u0020Us\u0065\u0045\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_bbda .UseExtTemplates ));
_acea .WriteString (_d .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0044\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_bbda .IsTPGDon ));_acea .WriteString (_d .Sprintf ("\u0009-\u0020G\u0042\u0054\u0065\u006d\u0070l\u0061\u0074e\u003a\u0020\u0025\u0064\u000a",_bbda .GBTemplate ));
_acea .WriteString (_d .Sprintf ("\t\u002d \u0049\u0073\u004d\u004d\u0052\u0045\u006e\u0063o\u0064\u0065\u0064\u003a %\u0076\u000a",_bbda .IsMMREncoded ));_acea .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_bbda .GBAtX ));
_acea .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_bbda .GBAtY ));_acea .WriteString (_d .Sprintf ("\t\u002d \u0047\u0042\u0041\u0074\u004f\u0076\u0065\u0072r\u0069\u0064\u0065\u003a %\u0076\u000a",_bbda .GBAtOverride ));
return _acea .String ();};func (_fceb *SymbolDictionary )setRefinementAtPixels ()error {if !_fceb .UseRefinementAggregation ||_fceb .SdrTemplate !=0{return nil ;};if _dcfa :=_fceb .readRefinementAtPixels (2);_dcfa !=nil {return _dcfa ;};return nil ;};func (_abdc *GenericRefinementRegion )getPixel (_gab *_cf .Bitmap ,_adf ,_cag int )int {if _adf < 0||_adf >=_gab .Width {return 0;
};if _cag < 0||_cag >=_gab .Height {return 0;};if _gab .GetPixel (_adf ,_cag ){return 1;};return 0;};func (_fddb *GenericRegion )readGBAtPixels (_afeb int )error {const _bbe ="\u0072\u0065\u0061\u0064\u0047\u0042\u0041\u0074\u0050i\u0078\u0065\u006c\u0073";
_fddb .GBAtX =make ([]int8 ,_afeb );_fddb .GBAtY =make ([]int8 ,_afeb );for _dgfa :=0;_dgfa < _afeb ;_dgfa ++{_edgeb ,_cddc :=_fddb ._gec .ReadByte ();if _cddc !=nil {return _g .Wrapf (_cddc ,_bbe ,"\u0058\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_dgfa );
};_fddb .GBAtX [_dgfa ]=int8 (_edgeb );_edgeb ,_cddc =_fddb ._gec .ReadByte ();if _cddc !=nil {return _g .Wrapf (_cddc ,_bbe ,"\u0059\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_dgfa );};_fddb .GBAtY [_dgfa ]=int8 (_edgeb );};return nil ;
};func (_fdgec *SymbolDictionary )huffDecodeBmSize ()(int64 ,error ){if _fdgec ._adgde ==nil {var (_ccg int ;_cbb error ;);if _fdgec .SdHuffDecodeHeightSelection ==3{_ccg ++;};if _fdgec .SdHuffDecodeWidthSelection ==3{_ccg ++;};_fdgec ._adgde ,_cbb =_fdgec .getUserTable (_ccg );
if _cbb !=nil {return 0,_cbb ;};};return _fdgec ._adgde .Decode (_fdgec ._eegc );};func (_gcd *TextRegion )decodeRdy ()(int64 ,error ){const _cfba ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064y";if _gcd .IsHuffmanEncoded {if _gcd .SbHuffRDY ==3{if _gcd ._dgbe ==nil {var (_eeeb int ;
_cgcfg error ;);if _gcd .SbHuffFS ==3{_eeeb ++;};if _gcd .SbHuffDS ==3{_eeeb ++;};if _gcd .SbHuffDT ==3{_eeeb ++;};if _gcd .SbHuffRDWidth ==3{_eeeb ++;};if _gcd .SbHuffRDHeight ==3{_eeeb ++;};if _gcd .SbHuffRDX ==3{_eeeb ++;};_gcd ._dgbe ,_cgcfg =_gcd .getUserTable (_eeeb );
if _cgcfg !=nil {return 0,_g .Wrap (_cgcfg ,_cfba ,"");};};return _gcd ._dgbe .Decode (_gcd ._egcf );};_ccbg ,_dbf :=_ded .GetStandardTable (14+int (_gcd .SbHuffRDY ));if _dbf !=nil {return 0,_dbf ;};return _ccbg .Decode (_gcd ._egcf );};_gbcef ,_adag :=_gcd ._cdgg .DecodeInt (_gcd ._faa );
if _adag !=nil {return 0,_g .Wrap (_adag ,_cfba ,"");};return int64 (_gbcef ),nil ;};func (_edf *SymbolDictionary )getToExportFlags ()([]int ,error ){var (_bdcd int ;_dbec int32 ;_gfaf error ;_afdag =int32 (_edf ._cbff +_edf .NumberOfNewSymbols );_fgdff =make ([]int ,_afdag );
);for _adfe :=int32 (0);_adfe < _afdag ;_adfe +=_dbec {if _edf .IsHuffmanEncoded {_bede ,_gfdb :=_ded .GetStandardTable (1);if _gfdb !=nil {return nil ,_gfdb ;};_afgf ,_gfdb :=_bede .Decode (_edf ._eegc );if _gfdb !=nil {return nil ,_gfdb ;};_dbec =int32 (_afgf );
}else {_dbec ,_gfaf =_edf ._ebgeg .DecodeInt (_edf ._bcef );if _gfaf !=nil {return nil ,_gfaf ;};};if _dbec !=0{for _gbg :=_adfe ;_gbg < _adfe +_dbec ;_gbg ++{_fgdff [_gbg ]=_bdcd ;};};if _bdcd ==0{_bdcd =1;}else {_bdcd =0;};};return _fgdff ,nil ;};func (_ffgg *TextRegion )initSymbols ()error {const _abdfb ="i\u006e\u0069\u0074\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
for _ ,_febb :=range _ffgg .Header .RTSegments {if _febb ==nil {return _g .Error (_abdfb ,"\u006e\u0069\u006c\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020pr\u006f\u0076\u0069\u0064\u0065\u0064 \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0074\u0065\u0078\u0074\u0020\u0072\u0065g\u0069\u006f\u006e\u0020\u0053\u0079\u006d\u0062o\u006c\u0073");
};if _febb .Type ==0{_eccb ,_befg :=_febb .GetSegmentData ();if _befg !=nil {return _g .Wrap (_befg ,_abdfb ,"");};_efad ,_aeaf :=_eccb .(*SymbolDictionary );if !_aeaf {return _g .Error (_abdfb ,"\u0072e\u0066\u0065r\u0072\u0065\u0064 \u0054\u006f\u0020\u0053\u0065\u0067\u006de\u006e\u0074\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_efad ._ddfad =_ffgg ._bdac ;_aadf ,_befg :=_efad .GetDictionary ();if _befg !=nil {return _g .Wrap (_befg ,_abdfb ,"");};_ffgg .Symbols =append (_ffgg .Symbols ,_aadf ...);};};_ffgg .NumberOfSymbols =uint32 (len (_ffgg .Symbols ));return nil ;};func (_abade *PageInformationSegment )readDefaultPixelValue ()error {_acdb ,_eadc :=_abade ._ggc .ReadBit ();
if _eadc !=nil {return _eadc ;};_abade .DefaultPixelValue =uint8 (_acdb &0xf);return nil ;};func (_gbda *RegionSegment )Encode (w _de .BinaryWriter )(_fcab int ,_bdag error ){const _cfcf ="R\u0065g\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065n\u0074\u002e\u0045\u006eco\u0064\u0065";
_egbb :=make ([]byte ,4);_e .BigEndian .PutUint32 (_egbb ,_gbda .BitmapWidth );_fcab ,_bdag =w .Write (_egbb );if _bdag !=nil {return 0,_g .Wrap (_bdag ,_cfcf ,"\u0057\u0069\u0064t\u0068");};_e .BigEndian .PutUint32 (_egbb ,_gbda .BitmapHeight );var _aege int ;
_aege ,_bdag =w .Write (_egbb );if _bdag !=nil {return 0,_g .Wrap (_bdag ,_cfcf ,"\u0048\u0065\u0069\u0067\u0068\u0074");};_fcab +=_aege ;_e .BigEndian .PutUint32 (_egbb ,_gbda .XLocation );_aege ,_bdag =w .Write (_egbb );if _bdag !=nil {return 0,_g .Wrap (_bdag ,_cfcf ,"\u0058L\u006f\u0063\u0061\u0074\u0069\u006fn");
};_fcab +=_aege ;_e .BigEndian .PutUint32 (_egbb ,_gbda .YLocation );_aege ,_bdag =w .Write (_egbb );if _bdag !=nil {return 0,_g .Wrap (_bdag ,_cfcf ,"\u0059L\u006f\u0063\u0061\u0074\u0069\u006fn");};_fcab +=_aege ;if _bdag =w .WriteByte (byte (_gbda .CombinaionOperator )&0x07);
_bdag !=nil {return 0,_g .Wrap (_bdag ,_cfcf ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};_fcab ++;return _fcab ,nil ;};func (_bbag *SymbolDictionary )getSymbol (_fegd int )(*_cf .Bitmap ,error ){const _cdgbg ="\u0067e\u0074\u0053\u0079\u006d\u0062\u006fl";
_gge ,_cabd :=_bbag ._fbfa .GetBitmap (_bbag ._gbfa [_fegd ]);if _cabd !=nil {return nil ,_g .Wrap (_cabd ,_cdgbg ,"\u0063\u0061n\u0027\u0074\u0020g\u0065\u0074\u0020\u0073\u0079\u006d\u0062\u006f\u006c");};return _gge ,nil ;};type HalftoneRegion struct{_ecc _de .StreamReader ;
_bffa *Header ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;HDefaultPixel int8 ;CombinationOperator _cf .CombinationOperator ;HSkipEnabled bool ;HTemplate byte ;IsMMREncoded bool ;HGridWidth uint32 ;
HGridHeight uint32 ;HGridX int32 ;HGridY int32 ;HRegionX uint16 ;HRegionY uint16 ;HalftoneRegionBitmap *_cf .Bitmap ;Patterns []*_cf .Bitmap ;};func (_gffe *template1 )form (_fagg ,_aec ,_faga ,_bbaa ,_cfe int16 )int16 {return ((_fagg &0x02)<<8)|(_aec <<6)|((_faga &0x03)<<4)|(_bbaa <<1)|_cfe ;
};func (_gbfd *TextRegion )computeSymbolCodeLength ()error {if _gbfd .IsHuffmanEncoded {return _gbfd .symbolIDCodeLengths ();};_gbfd ._bdcc =int8 (_f .Ceil (_f .Log (float64 (_gbfd .NumberOfSymbols ))/_f .Log (2)));return nil ;};func (_febfb *TextRegion )parseHeader ()error {var _abfdf error ;
_ab .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069n\u0073\u002e\u002e\u002e");defer func (){if _abfdf !=nil {_ab .Log .Trace ("\u005b\u0054\u0045\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044E\u0052\u005d\u0020\u0066\u0061i\u006c\u0065d\u002e\u0020\u0025\u0076",_abfdf );
}else {_ab .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069s\u0068\u0065\u0064\u002e");};}();if _abfdf =_febfb .RegionInfo .parseHeader ();
_abfdf !=nil {return _abfdf ;};if _abfdf =_febfb .readRegionFlags ();_abfdf !=nil {return _abfdf ;};if _febfb .IsHuffmanEncoded {if _abfdf =_febfb .readHuffmanFlags ();_abfdf !=nil {return _abfdf ;};};if _abfdf =_febfb .readUseRefinement ();_abfdf !=nil {return _abfdf ;
};if _abfdf =_febfb .readAmountOfSymbolInstances ();_abfdf !=nil {return _abfdf ;};if _abfdf =_febfb .getSymbols ();_abfdf !=nil {return _abfdf ;};if _abfdf =_febfb .computeSymbolCodeLength ();_abfdf !=nil {return _abfdf ;};if _abfdf =_febfb .checkInput ();
_abfdf !=nil {return _abfdf ;};_ab .Log .Trace ("\u0025\u0073",_febfb .String ());return nil ;};func (_ccag *SymbolDictionary )encodeATFlags (_fafe _de .BinaryWriter )(_fcba int ,_beafc error ){const _dega ="\u0065\u006e\u0063\u006f\u0064\u0065\u0041\u0054\u0046\u006c\u0061\u0067\u0073";
if _ccag .IsHuffmanEncoded ||_ccag .SdTemplate !=0{return 0,nil ;};_cdga :=4;if _ccag .SdTemplate !=0{_cdga =1;};for _cfee :=0;_cfee < _cdga ;_cfee ++{if _beafc =_fafe .WriteByte (byte (_ccag .SdATX [_cfee ]));_beafc !=nil {return _fcba ,_g .Wrapf (_beafc ,_dega ,"\u0053d\u0041\u0054\u0058\u005b\u0025\u0064]",_cfee );
};_fcba ++;if _beafc =_fafe .WriteByte (byte (_ccag .SdATY [_cfee ]));_beafc !=nil {return _fcba ,_g .Wrapf (_beafc ,_dega ,"\u0053d\u0041\u0054\u0059\u005b\u0025\u0064]",_cfee );};_fcba ++;};return _fcba ,nil ;};func (_fdge *HalftoneRegion )shiftAndFill (_gefgcb int )int {_gefgcb >>=8;
if _gefgcb < 0{_eca :=int (_f .Log (float64 (_eeaf (_gefgcb )))/_f .Log (2));_feb :=31-_eca ;for _ade :=1;_ade < _feb ;_ade ++{_gefgcb |=1<<uint (31-_ade );};};return _gefgcb ;};func (_cbdf *PatternDictionary )extractPatterns (_ebfg *_cf .Bitmap )error {var _cfbd int ;
_efcfgd :=make ([]*_cf .Bitmap ,_cbdf .GrayMax +1);for _cfbd <=int (_cbdf .GrayMax ){_acaa :=int (_cbdf .HdpWidth )*_cfbd ;_eaab :=_b .Rect (_acaa ,0,_acaa +int (_cbdf .HdpWidth ),int (_cbdf .HdpHeight ));_dcf ,_gegd :=_cf .Extract (_eaab ,_ebfg );if _gegd !=nil {return _gegd ;
};_efcfgd [_cfbd ]=_dcf ;_cfbd ++;};_cbdf .Patterns =_efcfgd ;return nil ;};func (_gdaf *TextRegion )readAmountOfSymbolInstances ()error {_daac ,_aecd :=_gdaf ._egcf .ReadBits (32);if _aecd !=nil {return _aecd ;};_gdaf .NumberOfSymbolInstances =uint32 (_daac &_f .MaxUint32 );
_egcc :=_gdaf .RegionInfo .BitmapWidth *_gdaf .RegionInfo .BitmapHeight ;if _egcc < _gdaf .NumberOfSymbolInstances {_ab .Log .Debug ("\u004c\u0069\u006d\u0069t\u0069\u006e\u0067\u0020t\u0068\u0065\u0020n\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020d\u0065\u0063\u006f\u0064e\u0064\u0020\u0073\u0079m\u0062\u006f\u006c\u0020\u0069n\u0073\u0074\u0061\u006e\u0063\u0065\u0073 \u0074\u006f\u0020\u006f\u006ee\u0020\u0070\u0065\u0072\u0020\u0070\u0069\u0078\u0065l\u0020\u0028\u0020\u0025\u0064\u0020\u0069\u006e\u0073\u0074\u0065\u0061\u0064\u0020\u006f\u0066\u0020\u0025\u0064\u0029",_egcc ,_gdaf .NumberOfSymbolInstances );
_gdaf .NumberOfSymbolInstances =_egcc ;};return nil ;};func (_ceaa *SymbolDictionary )encodeFlags (_caca _de .BinaryWriter )(_bdda int ,_aceaa error ){const _afdad ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _aceaa =_caca .SkipBits (3);
_aceaa !=nil {return 0,_g .Wrap (_aceaa ,_afdad ,"\u0065\u006d\u0070\u0074\u0079\u0020\u0062\u0069\u0074\u0073");};var _cagge int ;if _ceaa .SdrTemplate > 0{_cagge =1;};if _aceaa =_caca .WriteBit (_cagge );_aceaa !=nil {return _bdda ,_g .Wrap (_aceaa ,_afdad ,"s\u0064\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");
};_cagge =0;if _ceaa .SdTemplate > 1{_cagge =1;};if _aceaa =_caca .WriteBit (_cagge );_aceaa !=nil {return _bdda ,_g .Wrap (_aceaa ,_afdad ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_cagge =0;if _ceaa .SdTemplate ==1||_ceaa .SdTemplate ==3{_cagge =1;
};if _aceaa =_caca .WriteBit (_cagge );_aceaa !=nil {return _bdda ,_g .Wrap (_aceaa ,_afdad ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_cagge =0;if _ceaa ._cbf {_cagge =1;};if _aceaa =_caca .WriteBit (_cagge );_aceaa !=nil {return _bdda ,_g .Wrap (_aceaa ,_afdad ,"\u0063\u006f\u0064in\u0067\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0065\u0064");
};_cagge =0;if _ceaa ._ffaba {_cagge =1;};if _aceaa =_caca .WriteBit (_cagge );_aceaa !=nil {return _bdda ,_g .Wrap (_aceaa ,_afdad ,"\u0063\u006f\u0064\u0069ng\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0075\u0073\u0065\u0064");};_cagge =0;
if _ceaa .SdHuffAggInstanceSelection {_cagge =1;};if _aceaa =_caca .WriteBit (_cagge );_aceaa !=nil {return _bdda ,_g .Wrap (_aceaa ,_afdad ,"\u0073\u0064\u0048\u0075\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074");};_cagge =int (_ceaa .SdHuffBMSizeSelection );
if _aceaa =_caca .WriteBit (_cagge );_aceaa !=nil {return _bdda ,_g .Wrap (_aceaa ,_afdad ,"\u0073\u0064\u0048u\u0066\u0066\u0042\u006d\u0053\u0069\u007a\u0065");};_cagge =0;if _ceaa .SdHuffDecodeWidthSelection > 1{_cagge =1;};if _aceaa =_caca .WriteBit (_cagge );
_aceaa !=nil {return _bdda ,_g .Wrap (_aceaa ,_afdad ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_cagge =0;switch _ceaa .SdHuffDecodeWidthSelection {case 1,3:_cagge =1;};if _aceaa =_caca .WriteBit (_cagge );_aceaa !=nil {return _bdda ,_g .Wrap (_aceaa ,_afdad ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");
};_cagge =0;if _ceaa .SdHuffDecodeHeightSelection > 1{_cagge =1;};if _aceaa =_caca .WriteBit (_cagge );_aceaa !=nil {return _bdda ,_g .Wrap (_aceaa ,_afdad ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_cagge =0;switch _ceaa .SdHuffDecodeHeightSelection {case 1,3:_cagge =1;
};if _aceaa =_caca .WriteBit (_cagge );_aceaa !=nil {return _bdda ,_g .Wrap (_aceaa ,_afdad ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_cagge =0;if _ceaa .UseRefinementAggregation {_cagge =1;};if _aceaa =_caca .WriteBit (_cagge );
_aceaa !=nil {return _bdda ,_g .Wrap (_aceaa ,_afdad ,"\u0073\u0064\u0052\u0065\u0066\u0041\u0067\u0067");};_cagge =0;if _ceaa .IsHuffmanEncoded {_cagge =1;};if _aceaa =_caca .WriteBit (_cagge );_aceaa !=nil {return _bdda ,_g .Wrap (_aceaa ,_afdad ,"\u0073\u0064\u0048\u0075\u0066\u0066");
};return 2,nil ;};func (_gaeg *GenericRegion )decodeLine (_aae ,_bdbg ,_gefg int )error {const _bfg ="\u0064\u0065\u0063\u006f\u0064\u0065\u004c\u0069\u006e\u0065";_ecdf :=_gaeg .Bitmap .GetByteIndex (0,_aae );_fabb :=_ecdf -_gaeg .Bitmap .RowStride ;switch _gaeg .GBTemplate {case 0:if !_gaeg .UseExtTemplates {return _gaeg .decodeTemplate0a (_aae ,_bdbg ,_gefg ,_ecdf ,_fabb );
};return _gaeg .decodeTemplate0b (_aae ,_bdbg ,_gefg ,_ecdf ,_fabb );case 1:return _gaeg .decodeTemplate1 (_aae ,_bdbg ,_gefg ,_ecdf ,_fabb );case 2:return _gaeg .decodeTemplate2 (_aae ,_bdbg ,_gefg ,_ecdf ,_fabb );case 3:return _gaeg .decodeTemplate3 (_aae ,_bdbg ,_gefg ,_ecdf ,_fabb );
};return _g .Errorf (_bfg ,"\u0069\u006e\u0076a\u006c\u0069\u0064\u0020G\u0042\u0054\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u003a\u0020\u0025\u0064",_gaeg .GBTemplate );};func (_fa *GenericRefinementRegion )decodeTypicalPredictedLineTemplate0 (_ddb ,_bad ,_edaf ,_cac ,_fb ,_ae ,_geg ,_gafa ,_ecd int )error {var (_ecdc ,_dg ,_dfdg ,_acb ,_gda ,_dc int ;
_aee byte ;_cab error ;);if _ddb > 0{_aee ,_cab =_fa .RegionBitmap .GetByte (_geg -_edaf );if _cab !=nil {return _cab ;};_dfdg =int (_aee );};if _gafa > 0&&_gafa <=_fa .ReferenceBitmap .Height {_aee ,_cab =_fa .ReferenceBitmap .GetByte (_ecd -_cac +_ae );
if _cab !=nil {return _cab ;};_acb =int (_aee )<<4;};if _gafa >=0&&_gafa < _fa .ReferenceBitmap .Height {_aee ,_cab =_fa .ReferenceBitmap .GetByte (_ecd +_ae );if _cab !=nil {return _cab ;};_gda =int (_aee )<<1;};if _gafa > -2&&_gafa < _fa .ReferenceBitmap .Height -1{_aee ,_cab =_fa .ReferenceBitmap .GetByte (_ecd +_cac +_ae );
if _cab !=nil {return _cab ;};_dc =int (_aee );};_ecdc =((_dfdg >>5)&0x6)|((_dc >>2)&0x30)|(_gda &0x180)|(_acb &0xc00);var _ebb int ;for _faf :=0;_faf < _fb ;_faf =_ebb {var _dbg int ;_ebb =_faf +8;var _bec int ;if _bec =_bad -_faf ;_bec > 8{_bec =8;};
_gad :=_ebb < _bad ;_afb :=_ebb < _fa .ReferenceBitmap .Width ;_ccb :=_ae +1;if _ddb > 0{_aee =0;if _gad {_aee ,_cab =_fa .RegionBitmap .GetByte (_geg -_edaf +1);if _cab !=nil {return _cab ;};};_dfdg =(_dfdg <<8)|int (_aee );};if _gafa > 0&&_gafa <=_fa .ReferenceBitmap .Height {var _cba int ;
if _afb {_aee ,_cab =_fa .ReferenceBitmap .GetByte (_ecd -_cac +_ccb );if _cab !=nil {return _cab ;};_cba =int (_aee )<<4;};_acb =(_acb <<8)|_cba ;};if _gafa >=0&&_gafa < _fa .ReferenceBitmap .Height {var _ffc int ;if _afb {_aee ,_cab =_fa .ReferenceBitmap .GetByte (_ecd +_ccb );
if _cab !=nil {return _cab ;};_ffc =int (_aee )<<1;};_gda =(_gda <<8)|_ffc ;};if _gafa > -2&&_gafa < (_fa .ReferenceBitmap .Height -1){_aee =0;if _afb {_aee ,_cab =_fa .ReferenceBitmap .GetByte (_ecd +_cac +_ccb );if _cab !=nil {return _cab ;};};_dc =(_dc <<8)|int (_aee );
};for _ece :=0;_ece < _bec ;_ece ++{var _dcc int ;_ddbf :=false ;_da :=(_ecdc >>4)&0x1ff;if _da ==0x1ff{_ddbf =true ;_dcc =1;}else if _da ==0x00{_ddbf =true ;};if !_ddbf {if _fa ._cd {_dg =_fa .overrideAtTemplate0 (_ecdc ,_faf +_ece ,_ddb ,_dbg ,_ece );
_fa ._cgg .SetIndex (int32 (_dg ));}else {_fa ._cgg .SetIndex (int32 (_ecdc ));};_dcc ,_cab =_fa ._ag .DecodeBit (_fa ._cgg );if _cab !=nil {return _cab ;};};_afd :=uint (7-_ece );_dbg |=_dcc <<_afd ;_ecdc =((_ecdc &0xdb6)<<1)|_dcc |(_dfdg >>_afd +5)&0x002|((_dc >>_afd +2)&0x010)|((_gda >>_afd )&0x080)|((_acb >>_afd )&0x400);
};_cab =_fa .RegionBitmap .SetByte (_geg ,byte (_dbg ));if _cab !=nil {return _cab ;};_geg ++;_ecd ++;};return nil ;};func (_acbfg *SymbolDictionary )parseHeader ()(_ebefb error ){_ab .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _ebefb !=nil {_ab .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u0020\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u005b\u0050\u0041\u0052SE\u002d\u0048\u0045A\u0044\u0045R\u005d\u0020\u0066\u0061\u0069\u006ce\u0064\u002e \u0025\u0076",_ebefb );
}else {_ab .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _ebefb =_acbfg .readRegionFlags ();_ebefb !=nil {return _ebefb ;};if _ebefb =_acbfg .setAtPixels ();_ebefb !=nil {return _ebefb ;};if _ebefb =_acbfg .setRefinementAtPixels ();_ebefb !=nil {return _ebefb ;};if _ebefb =_acbfg .readNumberOfExportedSymbols ();
_ebefb !=nil {return _ebefb ;};if _ebefb =_acbfg .readNumberOfNewSymbols ();_ebefb !=nil {return _ebefb ;};if _ebefb =_acbfg .setInSyms ();_ebefb !=nil {return _ebefb ;};if _acbfg ._ffaba {_dcee :=_acbfg .Header .RTSegments ;for _bdcf :=len (_dcee )-1;
_bdcf >=0;_bdcf --{if _dcee [_bdcf ].Type ==0{_fegg ,_eega :=_dcee [_bdcf ].SegmentData .(*SymbolDictionary );if !_eega {_ebefb =_d .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074:\u0020\u0025\u0076\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020S\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_dcee [_bdcf ]);
return _ebefb ;};if _fegg ._ffaba {_acbfg .setRetainedCodingContexts (_fegg );};break ;};};};if _ebefb =_acbfg .checkInput ();_ebefb !=nil {return _ebefb ;};return nil ;};func (_caa *TextRegion )decodeRdx ()(int64 ,error ){const _fabf ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064x";
if _caa .IsHuffmanEncoded {if _caa .SbHuffRDX ==3{if _caa ._efgb ==nil {var (_dead int ;_dccbf error ;);if _caa .SbHuffFS ==3{_dead ++;};if _caa .SbHuffDS ==3{_dead ++;};if _caa .SbHuffDT ==3{_dead ++;};if _caa .SbHuffRDWidth ==3{_dead ++;};if _caa .SbHuffRDHeight ==3{_dead ++;
};_caa ._efgb ,_dccbf =_caa .getUserTable (_dead );if _dccbf !=nil {return 0,_g .Wrap (_dccbf ,_fabf ,"");};};return _caa ._efgb .Decode (_caa ._egcf );};_ccace ,_fddg :=_ded .GetStandardTable (14+int (_caa .SbHuffRDX ));if _fddg !=nil {return 0,_g .Wrap (_fddg ,_fabf ,"");
};return _ccace .Decode (_caa ._egcf );};_cbed ,_dddca :=_caa ._cdgg .DecodeInt (_caa ._abed );if _dddca !=nil {return 0,_g .Wrap (_dddca ,_fabf ,"");};return int64 (_cbed ),nil ;};func (_dfdb *Header )referenceSize ()uint {switch {case _dfdb .SegmentNumber <=255:return 1;
case _dfdb .SegmentNumber <=65535:return 2;default:return 4;};};func (_affa *TextRegion )setParameters (_aeeb *_ga .Decoder ,_ceab ,_ebdd bool ,_fdgc ,_feedg uint32 ,_febg uint32 ,_gfdc int8 ,_begae uint32 ,_fgdfb int8 ,_ecdg _cf .CombinationOperator ,_accf int8 ,_afef int16 ,_gdfe ,_cefc ,_afaee ,_efgfa ,_dbdc ,_adeb ,_ddgc ,_bcdf ,_deef ,_agde int8 ,_ecbag ,_cbgf []int8 ,_eece []*_cf .Bitmap ,_debb int8 ){_affa ._cdgg =_aeeb ;
_affa .IsHuffmanEncoded =_ceab ;_affa .UseRefinement =_ebdd ;_affa .RegionInfo .BitmapWidth =_fdgc ;_affa .RegionInfo .BitmapHeight =_feedg ;_affa .NumberOfSymbolInstances =_febg ;_affa .SbStrips =_gfdc ;_affa .NumberOfSymbols =_begae ;_affa .DefaultPixel =_fgdfb ;
_affa .CombinationOperator =_ecdg ;_affa .IsTransposed =_accf ;_affa .ReferenceCorner =_afef ;_affa .SbDsOffset =_gdfe ;_affa .SbHuffFS =_cefc ;_affa .SbHuffDS =_afaee ;_affa .SbHuffDT =_efgfa ;_affa .SbHuffRDWidth =_dbdc ;_affa .SbHuffRDHeight =_adeb ;
_affa .SbHuffRSize =_deef ;_affa .SbHuffRDX =_ddgc ;_affa .SbHuffRDY =_bcdf ;_affa .SbrTemplate =_agde ;_affa .SbrATX =_ecbag ;_affa .SbrATY =_cbgf ;_affa .Symbols =_eece ;_affa ._bdcc =_debb ;};func (_eggbe *SymbolDictionary )decodeRefinedSymbol (_gdfd ,_cddab uint32 )error {var (_bdfg int ;
_dedab ,_cbca int32 ;);if _eggbe .IsHuffmanEncoded {_edgbd ,_ecfb :=_eggbe ._eegc .ReadBits (byte (_eggbe ._dccc ));if _ecfb !=nil {return _ecfb ;};_bdfg =int (_edgbd );_egfa ,_ecfb :=_ded .GetStandardTable (15);if _ecfb !=nil {return _ecfb ;};_abfb ,_ecfb :=_egfa .Decode (_eggbe ._eegc );
if _ecfb !=nil {return _ecfb ;};_dedab =int32 (_abfb );_abfb ,_ecfb =_egfa .Decode (_eggbe ._eegc );if _ecfb !=nil {return _ecfb ;};_cbca =int32 (_abfb );_egfa ,_ecfb =_ded .GetStandardTable (1);if _ecfb !=nil {return _ecfb ;};if _ ,_ecfb =_egfa .Decode (_eggbe ._eegc );
_ecfb !=nil {return _ecfb ;};_eggbe ._eegc .Align ();}else {_dfa ,_bedb :=_eggbe ._ebgeg .DecodeIAID (uint64 (_eggbe ._dccc ),_eggbe ._ddfad );if _bedb !=nil {return _bedb ;};_bdfg =int (_dfa );_dedab ,_bedb =_eggbe ._ebgeg .DecodeInt (_eggbe ._ecfd );
if _bedb !=nil {return _bedb ;};_cbca ,_bedb =_eggbe ._ebgeg .DecodeInt (_eggbe ._dddc );if _bedb !=nil {return _bedb ;};};if _gdfgd :=_eggbe .setSymbolsArray ();_gdfgd !=nil {return _gdfgd ;};_cffb :=_eggbe ._becb [_bdfg ];if _fccf :=_eggbe .decodeNewSymbols (_gdfd ,_cddab ,_cffb ,_dedab ,_cbca );
_fccf !=nil {return _fccf ;};if _eggbe .IsHuffmanEncoded {_eggbe ._eegc .Align ();};return nil ;};func (_fff *GenericRegion )overrideAtTemplate3 (_gde ,_ffdd ,_fgc ,_bdbc ,_agcc int )int {_gde &=0x3EF;if _fff .GBAtY [0]==0&&_fff .GBAtX [0]>=-int8 (_agcc ){_gde |=(_bdbc >>uint (7-(int8 (_agcc )+_fff .GBAtX [0]))&0x1)<<4;
}else {_gde |=int (_fff .getPixel (_ffdd +int (_fff .GBAtX [0]),_fgc +int (_fff .GBAtY [0])))<<4;};return _gde ;};func (_dcab *Header )writeSegmentDataLength (_ddeg _de .BinaryWriter )(_acdf int ,_gdce error ){_dag :=make ([]byte ,4);_e .BigEndian .PutUint32 (_dag ,uint32 (_dcab .SegmentDataLength ));
if _acdf ,_gdce =_ddeg .Write (_dag );_gdce !=nil {return 0,_g .Wrap (_gdce ,"\u0048\u0065a\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u004c\u0065ng\u0074\u0068","");};return _acdf ,nil ;
};type template0 struct{};func NewGenericRegion (r _de .StreamReader )*GenericRegion {return &GenericRegion {RegionSegment :NewRegionSegment (r ),_gec :r };};func (_fdcb *GenericRefinementRegion )decodeTypicalPredictedLine (_gfb ,_fdff ,_eb ,_aa ,_cc ,_eed int )error {_bea :=_gfb -int (_fdcb .ReferenceDY );
_cbd :=_fdcb .ReferenceBitmap .GetByteIndex (0,_bea );_cff :=_fdcb .RegionBitmap .GetByteIndex (0,_gfb );var _edab error ;switch _fdcb .TemplateID {case 0:_edab =_fdcb .decodeTypicalPredictedLineTemplate0 (_gfb ,_fdff ,_eb ,_aa ,_cc ,_eed ,_cff ,_bea ,_cbd );
case 1:_edab =_fdcb .decodeTypicalPredictedLineTemplate1 (_gfb ,_fdff ,_eb ,_aa ,_cc ,_eed ,_cff ,_bea ,_cbd );};return _edab ;};func (_acga *PageInformationSegment )readResolution ()error {_ebeg ,_dad :=_acga ._ggc .ReadBits (32);if _dad !=nil {return _dad ;
};_acga .ResolutionX =int (_ebeg &_f .MaxInt32 );_ebeg ,_dad =_acga ._ggc .ReadBits (32);if _dad !=nil {return _dad ;};_acga .ResolutionY =int (_ebeg &_f .MaxInt32 );return nil ;};func (_bfaf *Header )Encode (w _de .BinaryWriter )(_bfef int ,_ceb error ){const _bcga ="\u0048\u0065\u0061d\u0065\u0072\u002e\u0057\u0072\u0069\u0074\u0065";
var _fde _de .BinaryWriter ;_ab .Log .Trace ("\u005b\u0053\u0045G\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045\u0052\u005d[\u0045\u004e\u0043\u004f\u0044\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _ceb !=nil {_ab .Log .Trace ("[\u0053\u0045\u0047\u004d\u0045\u004eT\u002d\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0045\u004e\u0043\u004f\u0044E\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020%\u0076",_ceb );
}else {_ab .Log .Trace ("\u005b\u0053\u0045\u0047ME\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0025\u0076",_bfaf );_ab .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045N\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u005b\u0045\u004e\u0043O\u0044\u0045\u005d\u0020\u0046\u0069\u006ei\u0073\u0068\u0065\u0064");
};}();w .FinishByte ();if _bfaf .SegmentData !=nil {_fgdec ,_dfdc :=_bfaf .SegmentData .(SegmentEncoder );if !_dfdc {return 0,_g .Errorf (_bcga ,"\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0064\u006f\u0065s\u006e\u0027\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074 \u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0045\u006e\u0063\u006f\u0064er\u0020\u0069\u006e\u0074\u0065\u0072\u0066\u0061\u0063\u0065",_bfaf .SegmentData );
};_fde =_de .BufferedMSB ();_bfef ,_ceb =_fgdec .Encode (_fde );if _ceb !=nil {return 0,_g .Wrap (_ceb ,_bcga ,"");};_bfaf .SegmentDataLength =uint64 (_bfef );};if _bfaf .pageSize ()==4{_bfaf .PageAssociationFieldSize =true ;};var _afa int ;_afa ,_ceb =_bfaf .writeSegmentNumber (w );
if _ceb !=nil {return 0,_g .Wrap (_ceb ,_bcga ,"");};_bfef +=_afa ;if _ceb =_bfaf .writeFlags (w );_ceb !=nil {return _bfef ,_g .Wrap (_ceb ,_bcga ,"");};_bfef ++;_afa ,_ceb =_bfaf .writeReferredToCount (w );if _ceb !=nil {return 0,_g .Wrap (_ceb ,_bcga ,"");
};_bfef +=_afa ;_afa ,_ceb =_bfaf .writeReferredToSegments (w );if _ceb !=nil {return 0,_g .Wrap (_ceb ,_bcga ,"");};_bfef +=_afa ;_afa ,_ceb =_bfaf .writeSegmentPageAssociation (w );if _ceb !=nil {return 0,_g .Wrap (_ceb ,_bcga ,"");};_bfef +=_afa ;_afa ,_ceb =_bfaf .writeSegmentDataLength (w );
if _ceb !=nil {return 0,_g .Wrap (_ceb ,_bcga ,"");};_bfef +=_afa ;_bfaf .HeaderLength =int64 (_bfef )-int64 (_bfaf .SegmentDataLength );if _fde !=nil {if _ ,_ceb =w .Write (_fde .Data ());_ceb !=nil {return _bfef ,_g .Wrap (_ceb ,_bcga ,"\u0077r\u0069t\u0065\u0020\u0073\u0065\u0067m\u0065\u006et\u0020\u0064\u0061\u0074\u0061");
};};return _bfef ,nil ;};func (_gae *GenericRegion )GetRegionBitmap ()(_abge *_cf .Bitmap ,_daf error ){if _gae .Bitmap !=nil {return _gae .Bitmap ,nil ;};if _gae .IsMMREncoded {if _gae ._bed ==nil {_gae ._bed ,_daf =_cb .New (_gae ._gec ,int (_gae .RegionSegment .BitmapWidth ),int (_gae .RegionSegment .BitmapHeight ),_gae .DataOffset ,_gae .DataLength );
if _daf !=nil {return nil ,_daf ;};};_gae .Bitmap ,_daf =_gae ._bed .UncompressMMR ();return _gae .Bitmap ,_daf ;};if _daf =_gae .updateOverrideFlags ();_daf !=nil {return nil ,_daf ;};var _gbf int ;if _gae ._edc ==nil {_gae ._edc ,_daf =_ga .New (_gae ._gec );
if _daf !=nil {return nil ,_daf ;};};if _gae ._degg ==nil {_gae ._degg =_ga .NewStats (65536,1);};_gae .Bitmap =_cf .New (int (_gae .RegionSegment .BitmapWidth ),int (_gae .RegionSegment .BitmapHeight ));_fdb :=int (uint32 (_gae .Bitmap .Width +7)&(^uint32 (7)));
for _bcaf :=0;_bcaf < _gae .Bitmap .Height ;_bcaf ++{if _gae .IsTPGDon {var _ecf int ;_ecf ,_daf =_gae .decodeSLTP ();if _daf !=nil {return nil ,_daf ;};_gbf ^=_ecf ;};if _gbf ==1{if _bcaf > 0{if _daf =_gae .copyLineAbove (_bcaf );_daf !=nil {return nil ,_daf ;
};};}else {if _daf =_gae .decodeLine (_bcaf ,_gae .Bitmap .Width ,_fdb );_daf !=nil {return nil ,_daf ;};};};return _gae .Bitmap ,nil ;};func (_ebge *RegionSegment )readCombinationOperator ()error {_fdec ,_aga :=_ebge ._bcab .ReadBits (3);if _aga !=nil {return _aga ;
};_ebge .CombinaionOperator =_cf .CombinationOperator (_fdec &0xF);return nil ;};func (_bebc *Header )pageSize ()uint {if _bebc .PageAssociation <=255{return 1;};return 4;};func (_bbef *PageInformationSegment )readWidthAndHeight ()error {_cdfe ,_ggbf :=_bbef ._ggc .ReadBits (32);
if _ggbf !=nil {return _ggbf ;};_bbef .PageBMWidth =int (_cdfe &_f .MaxInt32 );_cdfe ,_ggbf =_bbef ._ggc .ReadBits (32);if _ggbf !=nil {return _ggbf ;};_bbef .PageBMHeight =int (_cdfe &_f .MaxInt32 );return nil ;};func (_agdc *HalftoneRegion )computeX (_fccg ,_bbga int )int {return _agdc .shiftAndFill (int (_agdc .HGridX )+_fccg *int (_agdc .HRegionY )+_bbga *int (_agdc .HRegionX ));
};func (_ecdd *TableSegment )HtLow ()int32 {return _ecdd ._bgec };func (_ged *template1 )setIndex (_fcff *_ga .DecoderStats ){_fcff .SetIndex (0x080)};func (_ccbb *SymbolDictionary )readNumberOfNewSymbols ()error {_adbf ,_bagg :=_ccbb ._eegc .ReadBits (32);
if _bagg !=nil {return _bagg ;};_ccbb .NumberOfNewSymbols =uint32 (_adbf &_f .MaxUint32 );return nil ;};func (_dbbc *PageInformationSegment )readCombinationOperator ()error {_cfbb ,_eggb :=_dbbc ._ggc .ReadBits (2);if _eggb !=nil {return _eggb ;};_dbbc ._cbdgc =_cf .CombinationOperator (int (_cfbb ));
return nil ;};func (_abgb *SymbolDictionary )InitEncode (symbols *_cf .Bitmaps ,symbolList []int ,symbolMap map[int ]int ,unborderSymbols bool )error {const _dfbbe ="S\u0079\u006d\u0062\u006f\u006c\u0044i\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002eI\u006e\u0069\u0074E\u006ec\u006f\u0064\u0065";
_abgb .SdATX =[]int8 {3,-3,2,-2};_abgb .SdATY =[]int8 {-1,-1,-2,-2};_abgb ._fbfa =symbols ;_abgb ._gbfa =make ([]int ,len (symbolList ));copy (_abgb ._gbfa ,symbolList );if len (_abgb ._gbfa )!=_abgb ._fbfa .Size (){return _g .Error (_dfbbe ,"s\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0061\u006e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u004ci\u0073\u0074\u0020\u006f\u0066\u0020\u0064\u0069\u0066\u0066er\u0065\u006e\u0074 \u0073i\u007a\u0065");
};_abgb .NumberOfNewSymbols =uint32 (symbols .Size ());_abgb .NumberOfExportedSymbols =uint32 (symbols .Size ());_abgb ._dffe =symbolMap ;_abgb ._baaa =unborderSymbols ;return nil ;};func (_caee Type )String ()string {switch _caee {case TSymbolDictionary :return "\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079";
case TIntermediateTextRegion :return "\u0049n\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020T\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateTextRegion :return "I\u006d\u006d\u0065\u0064ia\u0074e\u0020\u0054\u0065\u0078\u0074 \u0052\u0065\u0067\u0069\u006f\u006e";
case TImmediateLosslessTextRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020L\u006f\u0073\u0073\u006c\u0065\u0073\u0073 \u0054\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TPatternDictionary :return "\u0050a\u0074t\u0065\u0072\u006e\u0020\u0044i\u0063\u0074i\u006f\u006e\u0061\u0072\u0079";
case TIntermediateHalftoneRegion :return "\u0049\u006e\u0074\u0065r\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0048\u0061l\u0066t\u006f\u006e\u0065\u0020\u0052\u0065\u0067i\u006f\u006e";case TImmediateHalftoneRegion :return "\u0049m\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u0048\u0061l\u0066t\u006fn\u0065\u0020\u0052\u0065\u0067\u0069\u006fn";
case TImmediateLosslessHalftoneRegion :return "\u0049\u006d\u006ded\u0069\u0061\u0074\u0065\u0020\u004c\u006f\u0073\u0073l\u0065s\u0073 \u0048a\u006c\u0066\u0074\u006f\u006e\u0065\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TIntermediateGenericRegion :return "I\u006e\u0074\u0065\u0072\u006d\u0065d\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020R\u0065g\u0069\u006f\u006e";
case TImmediateGenericRegion :return "\u0049m\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006ee\u0072\u0069\u0063\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessGenericRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u004c\u006f\u0073\u0073\u006c\u0065\u0073\u0073\u0020\u0047e\u006e\u0065\u0072\u0069\u0063\u0020\u0052e\u0067\u0069\u006f\u006e";
case TIntermediateGenericRefinementRegion :return "\u0049\u006e\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0020\u0052\u0065\u0066i\u006e\u0065\u006d\u0065\u006et\u0020\u0052e\u0067\u0069\u006f\u006e";
case TImmediateGenericRefinementRegion :return "I\u006d\u006d\u0065\u0064\u0069\u0061t\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020\u0052\u0065\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020\u0052\u0065\u0067\u0069o\u006e";case TImmediateLosslessGenericRefinementRegion :return "\u0049m\u006d\u0065d\u0069\u0061\u0074\u0065 \u004c\u006f\u0073s\u006c\u0065\u0073\u0073\u0020\u0047\u0065\u006e\u0065ri\u0063\u0020\u0052e\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020R\u0065\u0067i\u006f\u006e";
case TPageInformation :return "\u0050\u0061g\u0065\u0020\u0049n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e";case TEndOfPage :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0050\u0061\u0067\u0065";case TEndOfStrip :return "\u0045\u006e\u0064 \u004f\u0066\u0020\u0053\u0074\u0072\u0069\u0070";
case TEndOfFile :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0046\u0069\u006c\u0065";case TProfiles :return "\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0073";case TTables :return "\u0054\u0061\u0062\u006c\u0065\u0073";case TExtension :return "\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn";
case TBitmap :return "\u0042\u0069\u0074\u006d\u0061\u0070";};return "I\u006ev\u0061\u006c\u0069\u0064\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0020Ki\u006e\u0064";};func (_cgc *GenericRefinementRegion )updateOverride ()error {if _cgc .GrAtX ==nil ||_cgc .GrAtY ==nil {return _ba .New ("\u0041\u0054\u0020\u0070\u0069\u0078\u0065\u006c\u0073\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");
};if len (_cgc .GrAtX )!=len (_cgc .GrAtY ){return _ba .New ("A\u0054\u0020\u0070\u0069xe\u006c \u0069\u006e\u0063\u006f\u006es\u0069\u0073\u0074\u0065\u006e\u0074");};_cgc ._def =make ([]bool ,len (_cgc .GrAtX ));switch _cgc .TemplateID {case 0:if _cgc .GrAtX [0]!=-1&&_cgc .GrAtY [0]!=-1{_cgc ._def [0]=true ;
_cgc ._cd =true ;};if _cgc .GrAtX [1]!=-1&&_cgc .GrAtY [1]!=-1{_cgc ._def [1]=true ;_cgc ._cd =true ;};case 1:_cgc ._cd =false ;};return nil ;};func (_ddea *TextRegion )encodeSymbols (_bedg _de .BinaryWriter )(_caed int ,_acbg error ){const _ebdf ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
_cbdcg :=make ([]byte ,4);_e .BigEndian .PutUint32 (_cbdcg ,_ddea .NumberOfSymbols );if _caed ,_acbg =_bedg .Write (_cbdcg );_acbg !=nil {return _caed ,_g .Wrap (_acbg ,_ebdf ,"\u004e\u0075\u006dbe\u0072\u004f\u0066\u0053\u0079\u006d\u0062\u006f\u006c\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073");
};_fcac ,_acbg :=_cf .NewClassedPoints (_ddea ._gcaf ,_ddea ._cefag );if _acbg !=nil {return 0,_g .Wrap (_acbg ,_ebdf ,"");};var _fcgde ,_gfgdf int ;_faaf :=_ed .New ();_faaf .Init ();if _acbg =_faaf .EncodeInteger (_ed .IADT ,0);_acbg !=nil {return _caed ,_g .Wrap (_acbg ,_ebdf ,"\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0020\u0044\u0054");
};_acdc ,_acbg :=_fcac .GroupByY ();if _acbg !=nil {return 0,_g .Wrap (_acbg ,_ebdf ,"");};for _ ,_cfcbf :=range _acdc {_gcgab :=int (_cfcbf .YAtIndex (0));_abdca :=_gcgab -_fcgde ;if _acbg =_faaf .EncodeInteger (_ed .IADT ,_abdca );_acbg !=nil {return _caed ,_g .Wrap (_acbg ,_ebdf ,"");
};var _gdegf int ;for _aded ,_babe :=range _cfcbf .IntSlice {switch _aded {case 0:_ccgc :=int (_cfcbf .XAtIndex (_aded ))-_gfgdf ;if _acbg =_faaf .EncodeInteger (_ed .IAFS ,_ccgc );_acbg !=nil {return _caed ,_g .Wrap (_acbg ,_ebdf ,"");};_gfgdf +=_ccgc ;
_gdegf =_gfgdf ;default:_efae :=int (_cfcbf .XAtIndex (_aded ))-_gdegf ;if _acbg =_faaf .EncodeInteger (_ed .IADS ,_efae );_acbg !=nil {return _caed ,_g .Wrap (_acbg ,_ebdf ,"");};_gdegf +=_efae ;};_bcgd ,_gfcg :=_ddea ._bcgb .Get (_babe );if _gfcg !=nil {return _caed ,_g .Wrap (_gfcg ,_ebdf ,"");
};_fcbad ,_fffg :=_ddea ._edbc [_bcgd ];if !_fffg {_fcbad ,_fffg =_ddea ._fcda [_bcgd ];if !_fffg {return _caed ,_g .Errorf (_ebdf ,"\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027\u0025d\u0027\u0020\u0069s\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064 \u0069\u006e\u0020\u0067\u006cob\u0061\u006c\u0020\u0061\u006e\u0064\u0020\u006c\u006f\u0063\u0061\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020\u006d\u0061\u0070",_bcgd );
};};if _gfcg =_faaf .EncodeIAID (_ddea ._febf ,_fcbad );_gfcg !=nil {return _caed ,_g .Wrap (_gfcg ,_ebdf ,"");};};if _acbg =_faaf .EncodeOOB (_ed .IADS );_acbg !=nil {return _caed ,_g .Wrap (_acbg ,_ebdf ,"");};};_faaf .Final ();_baff ,_acbg :=_faaf .WriteTo (_bedg );
if _acbg !=nil {return _caed ,_g .Wrap (_acbg ,_ebdf ,"");};_caed +=int (_baff );return _caed ,nil ;};func (_badb *TableSegment )Init (h *Header ,r _de .StreamReader )error {_badb ._bcbba =r ;return _badb .parseHeader ();};const (TSymbolDictionary Type =0;
TIntermediateTextRegion Type =4;TImmediateTextRegion Type =6;TImmediateLosslessTextRegion Type =7;TPatternDictionary Type =16;TIntermediateHalftoneRegion Type =20;TImmediateHalftoneRegion Type =22;TImmediateLosslessHalftoneRegion Type =23;TIntermediateGenericRegion Type =36;
TImmediateGenericRegion Type =38;TImmediateLosslessGenericRegion Type =39;TIntermediateGenericRefinementRegion Type =40;TImmediateGenericRefinementRegion Type =42;TImmediateLosslessGenericRefinementRegion Type =43;TPageInformation Type =48;TEndOfPage Type =49;
TEndOfStrip Type =50;TEndOfFile Type =51;TProfiles Type =52;TTables Type =53;TExtension Type =62;TBitmap Type =70;);func (_efc *GenericRegion )setParametersMMR (_bce bool ,_aecc ,_gega int64 ,_cfef ,_adgdd uint32 ,_aff byte ,_dbgd ,_badc bool ,_cggb ,_efcf []int8 ){_efc .DataOffset =_aecc ;
_efc .DataLength =_gega ;_efc .RegionSegment =&RegionSegment {};_efc .RegionSegment .BitmapHeight =_cfef ;_efc .RegionSegment .BitmapWidth =_adgdd ;_efc .GBTemplate =_aff ;_efc .IsMMREncoded =_bce ;_efc .IsTPGDon =_dbgd ;_efc .GBAtX =_cggb ;_efc .GBAtY =_efcf ;
};func (_efge *GenericRegion )computeSegmentDataStructure ()error {_efge .DataOffset =_efge ._gec .StreamPosition ();_efge .DataHeaderLength =_efge .DataOffset -_efge .DataHeaderOffset ;_efge .DataLength =int64 (_efge ._gec .Length ())-_efge .DataHeaderLength ;
return nil ;};func (_afgd *TextRegion )decodeRdh ()(int64 ,error ){const _baba ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064h";if _afgd .IsHuffmanEncoded {if _afgd .SbHuffRDHeight ==3{if _afgd ._abfd ==nil {var (_aaba int ;_cgfac error ;);if _afgd .SbHuffFS ==3{_aaba ++;
};if _afgd .SbHuffDS ==3{_aaba ++;};if _afgd .SbHuffDT ==3{_aaba ++;};if _afgd .SbHuffRDWidth ==3{_aaba ++;};_afgd ._abfd ,_cgfac =_afgd .getUserTable (_aaba );if _cgfac !=nil {return 0,_g .Wrap (_cgfac ,_baba ,"");};};return _afgd ._abfd .Decode (_afgd ._egcf );
};_fbeb ,_cfgdc :=_ded .GetStandardTable (14+int (_afgd .SbHuffRDHeight ));if _cfgdc !=nil {return 0,_g .Wrap (_cfgdc ,_baba ,"");};return _fbeb .Decode (_afgd ._egcf );};_eadd ,_abda :=_afgd ._cdgg .DecodeInt (_afgd ._gddad );if _abda !=nil {return 0,_g .Wrap (_abda ,_baba ,"");
};return int64 (_eadd ),nil ;};func (_bgee *GenericRegion )setParametersWithAt (_eea bool ,_ffe byte ,_gdf ,_abdb bool ,_bggg ,_abf []int8 ,_bggb ,_deggd uint32 ,_eaf *_ga .DecoderStats ,_gefgc *_ga .Decoder ){_bgee .IsMMREncoded =_eea ;_bgee .GBTemplate =_ffe ;
_bgee .IsTPGDon =_gdf ;_bgee .GBAtX =_bggg ;_bgee .GBAtY =_abf ;_bgee .RegionSegment .BitmapHeight =_deggd ;_bgee .RegionSegment .BitmapWidth =_bggb ;_bgee ._bed =nil ;_bgee .Bitmap =nil ;if _eaf !=nil {_bgee ._degg =_eaf ;};if _gefgc !=nil {_bgee ._edc =_gefgc ;
};_ab .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049O\u004e\u005d\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073\u0020\u0053\u0044\u0041t\u003a\u0020\u0025\u0073",_bgee );};func (_degaa *SymbolDictionary )getUserTable (_fcfb int )(_ded .Tabler ,error ){var _ecag int ;
for _ ,_gdab :=range _degaa .Header .RTSegments {if _gdab .Type ==53{if _ecag ==_fcfb {_aefb ,_cefd :=_gdab .GetSegmentData ();if _cefd !=nil {return nil ,_cefd ;};_bebbb :=_aefb .(_ded .BasicTabler );return _ded .NewEncodedTable (_bebbb );};_ecag ++;};
};return nil ,nil ;};func (_bfbc *SymbolDictionary )decodeNewSymbols (_fcd ,_abee uint32 ,_bbdcf *_cf .Bitmap ,_eecd ,_gbafg int32 )error {if _bfbc ._bcdd ==nil {_bfbc ._bcdd =_edb (_bfbc ._eegc ,nil );if _bfbc ._ebgeg ==nil {var _cfed error ;_bfbc ._ebgeg ,_cfed =_ga .New (_bfbc ._eegc );
if _cfed !=nil {return _cfed ;};};if _bfbc ._edda ==nil {_bfbc ._edda =_ga .NewStats (65536,1);};};_bfbc ._bcdd .setParameters (_bfbc ._edda ,_bfbc ._ebgeg ,_bfbc .SdrTemplate ,_fcd ,_abee ,_bbdcf ,_eecd ,_gbafg ,false ,_bfbc .SdrATX ,_bfbc .SdrATY );return _bfbc .addSymbol (_bfbc ._bcdd );
};func (_gdd *Header )CleanSegmentData (){if _gdd .SegmentData !=nil {_gdd .SegmentData =nil ;};};func (_ffcef *TextRegion )getUserTable (_fbbg int )(_ded .Tabler ,error ){const _gdcd ="\u0067\u0065\u0074U\u0073\u0065\u0072\u0054\u0061\u0062\u006c\u0065";
var _cfeag int ;for _ ,_abadeg :=range _ffcef .Header .RTSegments {if _abadeg .Type ==53{if _cfeag ==_fbbg {_dcdd ,_egga :=_abadeg .GetSegmentData ();if _egga !=nil {return nil ,_egga ;};_dgge ,_gfda :=_dcdd .(*TableSegment );if !_gfda {_ab .Log .Debug (_d .Sprintf ("\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079p\u0065\u00205\u0033\u0020\u002d\u0020\u0061\u006ed\u0020in\u0064\u0065\u0078\u003a\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_abadeg .SegmentNumber ));
return nil ,_g .Error (_gdcd ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079\u0070e\u0020\u0035\u0033\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u002a\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};return _ded .NewEncodedTable (_dgge );};_cfeag ++;};};return nil ,nil ;};func (_dedc *GenericRegion )InitEncode (bm *_cf .Bitmap ,xLoc ,yLoc ,template int ,duplicateLineRemoval bool )error {const _dfe ="\u0047e\u006e\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069\u006f\u006e.\u0049\u006e\u0069\u0074\u0045\u006e\u0063\u006f\u0064\u0065";
if bm ==nil {return _g .Error (_dfe ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if xLoc < 0||yLoc < 0{return _g .Error (_dfe ,"\u0078\u0020\u0061\u006e\u0064\u0020\u0079\u0020\u006c\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074h\u0061\u006e\u0020\u0030");
};_dedc .Bitmap =bm ;_dedc .GBTemplate =byte (template );switch _dedc .GBTemplate {case 0:_dedc .GBAtX =[]int8 {3,-3,2,-2};_dedc .GBAtY =[]int8 {-1,-1,-2,-2};case 1:_dedc .GBAtX =[]int8 {3};_dedc .GBAtY =[]int8 {-1};case 2,3:_dedc .GBAtX =[]int8 {2};_dedc .GBAtY =[]int8 {-1};
default:return _g .Errorf (_dfe ,"\u0070\u0072o\u0076\u0069\u0064\u0065\u0064 \u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u007b\u0030\u002c\u0031\u002c\u0032\u002c\u0033\u007d",template );
};_dedc .RegionSegment =&RegionSegment {BitmapHeight :uint32 (bm .Height ),BitmapWidth :uint32 (bm .Width ),XLocation :uint32 (xLoc ),YLocation :uint32 (yLoc )};_dedc .IsTPGDon =duplicateLineRemoval ;return nil ;};func _edb (_egd _de .StreamReader ,_egg *Header )*GenericRefinementRegion {return &GenericRefinementRegion {_ef :_egd ,RegionInfo :NewRegionSegment (_egd ),_abdg :_egg ,_ge :&template0 {},_db :&template1 {}};
};func (_dcabd *TextRegion )decodeDT ()(_fabgg int64 ,_ffeg error ){if _dcabd .IsHuffmanEncoded {if _dcabd .SbHuffDT ==3{_fabgg ,_ffeg =_dcabd ._babb .Decode (_dcabd ._egcf );if _ffeg !=nil {return 0,_ffeg ;};}else {var _gbga _ded .Tabler ;_gbga ,_ffeg =_ded .GetStandardTable (11+int (_dcabd .SbHuffDT ));
if _ffeg !=nil {return 0,_ffeg ;};_fabgg ,_ffeg =_gbga .Decode (_dcabd ._egcf );if _ffeg !=nil {return 0,_ffeg ;};};}else {var _fecee int32 ;_fecee ,_ffeg =_dcabd ._cdgg .DecodeInt (_dcabd ._ccfd );if _ffeg !=nil {return ;};_fabgg =int64 (_fecee );};_fabgg *=int64 (_dcabd .SbStrips );
return _fabgg ,nil ;};func (_debe *SymbolDictionary )setRetainedCodingContexts (_ccebd *SymbolDictionary ){_debe ._ebgeg =_ccebd ._ebgeg ;_debe .IsHuffmanEncoded =_ccebd .IsHuffmanEncoded ;_debe .UseRefinementAggregation =_ccebd .UseRefinementAggregation ;
_debe .SdTemplate =_ccebd .SdTemplate ;_debe .SdrTemplate =_ccebd .SdrTemplate ;_debe .SdATX =_ccebd .SdATX ;_debe .SdATY =_ccebd .SdATY ;_debe .SdrATX =_ccebd .SdrATX ;_debe .SdrATY =_ccebd .SdrATY ;_debe ._edda =_ccebd ._edda ;};func (_bdbgg *PageInformationSegment )Encode (w _de .BinaryWriter )(_dbcc int ,_cefb error ){const _begg ="\u0050\u0061g\u0065\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u002e\u0045\u006eco\u0064\u0065";
_gdeb :=make ([]byte ,4);_e .BigEndian .PutUint32 (_gdeb ,uint32 (_bdbgg .PageBMWidth ));_dbcc ,_cefb =w .Write (_gdeb );if _cefb !=nil {return _dbcc ,_g .Wrap (_cefb ,_begg ,"\u0077\u0069\u0064t\u0068");};_e .BigEndian .PutUint32 (_gdeb ,uint32 (_bdbgg .PageBMHeight ));
var _ceac int ;_ceac ,_cefb =w .Write (_gdeb );if _cefb !=nil {return _ceac +_dbcc ,_g .Wrap (_cefb ,_begg ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_dbcc +=_ceac ;_e .BigEndian .PutUint32 (_gdeb ,uint32 (_bdbgg .ResolutionX ));_ceac ,_cefb =w .Write (_gdeb );
if _cefb !=nil {return _ceac +_dbcc ,_g .Wrap (_cefb ,_begg ,"\u0078\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_dbcc +=_ceac ;_e .BigEndian .PutUint32 (_gdeb ,uint32 (_bdbgg .ResolutionY ));if _ceac ,_cefb =w .Write (_gdeb );_cefb !=nil {return _ceac +_dbcc ,_g .Wrap (_cefb ,_begg ,"\u0079\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");
};_dbcc +=_ceac ;if _cefb =_bdbgg .encodeFlags (w );_cefb !=nil {return _dbcc ,_g .Wrap (_cefb ,_begg ,"");};_dbcc ++;if _ceac ,_cefb =_bdbgg .encodeStripingInformation (w );_cefb !=nil {return _dbcc ,_g .Wrap (_cefb ,_begg ,"");};_dbcc +=_ceac ;return _dbcc ,nil ;
};func (_feag *PageInformationSegment )String ()string {_gffb :=&_cg .Builder {};_gffb .WriteString ("\u000a\u005b\u0050\u0041G\u0045\u002d\u0049\u004e\u0046\u004f\u0052\u004d\u0041\u0054I\u004fN\u002d\u0053\u0045\u0047\u004d\u0045\u004eT\u005d\u000a");
_gffb .WriteString (_d .Sprintf ("\u0009\u002d \u0042\u004d\u0048e\u0069\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u000a",_feag .PageBMHeight ));_gffb .WriteString (_d .Sprintf ("\u0009-\u0020B\u004d\u0057\u0069\u0064\u0074\u0068\u003a\u0020\u0025\u0064\u000a",_feag .PageBMWidth ));
_gffb .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0058\u003a\u0020\u0025\u0064\u000a",_feag .ResolutionX ));_gffb .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0059\u003a\u0020\u0025\u0064\u000a",_feag .ResolutionY ));
_gffb .WriteString (_d .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0073\u000a",_feag ._cbdgc ));_gffb .WriteString (_d .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006eO\u0070\u0065\u0072\u0061\u0074\u006f\u0072O\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025v\u000a",_feag ._beea ));
_gffb .WriteString (_d .Sprintf ("\u0009-\u0020I\u0073\u004c\u006f\u0073\u0073l\u0065\u0073s\u003a\u0020\u0025\u0076\u000a",_feag .IsLossless ));_gffb .WriteString (_d .Sprintf ("\u0009\u002d\u0020R\u0065\u0071\u0075\u0069r\u0065\u0073\u0041\u0075\u0078\u0069\u006ci\u0061\u0072\u0079\u0042\u0075\u0066\u0066\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_feag ._aeda ));
_gffb .WriteString (_d .Sprintf ("\u0009\u002d\u0020M\u0069\u0067\u0068\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0052e\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0076\u000a",_feag ._geec ));_gffb .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0049\u0073\u0053\u0074\u0072\u0069\u0070\u0065\u0064:\u0020\u0025\u0076\u000a",_feag .IsStripe ));
_gffb .WriteString (_d .Sprintf ("\t\u002d\u0020\u004d\u0061xS\u0074r\u0069\u0070\u0065\u0053\u0069z\u0065\u003a\u0020\u0025\u0076\u000a",_feag .MaxStripeSize ));return _gffb .String ();};type EncodeInitializer interface{InitEncode ();};var _ SegmentEncoder =&RegionSegment {};
func (_eggf *PageInformationSegment )readMaxStripeSize ()error {_bacd ,_bdd :=_eggf ._ggc .ReadBits (15);if _bdd !=nil {return _bdd ;};_eggf .MaxStripeSize =uint16 (_bacd &_f .MaxUint16 );return nil ;};func (_gfdf *SymbolDictionary )readRegionFlags ()error {var (_fdfc uint64 ;
_begd int ;);_ ,_bbaag :=_gfdf ._eegc .ReadBits (3);if _bbaag !=nil {return _bbaag ;};_begd ,_bbaag =_gfdf ._eegc .ReadBit ();if _bbaag !=nil {return _bbaag ;};_gfdf .SdrTemplate =int8 (_begd );_fdfc ,_bbaag =_gfdf ._eegc .ReadBits (2);if _bbaag !=nil {return _bbaag ;
};_gfdf .SdTemplate =int8 (_fdfc &0xf);_begd ,_bbaag =_gfdf ._eegc .ReadBit ();if _bbaag !=nil {return _bbaag ;};if _begd ==1{_gfdf ._cbf =true ;};_begd ,_bbaag =_gfdf ._eegc .ReadBit ();if _bbaag !=nil {return _bbaag ;};if _begd ==1{_gfdf ._ffaba =true ;
};_begd ,_bbaag =_gfdf ._eegc .ReadBit ();if _bbaag !=nil {return _bbaag ;};if _begd ==1{_gfdf .SdHuffAggInstanceSelection =true ;};_begd ,_bbaag =_gfdf ._eegc .ReadBit ();if _bbaag !=nil {return _bbaag ;};_gfdf .SdHuffBMSizeSelection =int8 (_begd );_fdfc ,_bbaag =_gfdf ._eegc .ReadBits (2);
if _bbaag !=nil {return _bbaag ;};_gfdf .SdHuffDecodeWidthSelection =int8 (_fdfc &0xf);_fdfc ,_bbaag =_gfdf ._eegc .ReadBits (2);if _bbaag !=nil {return _bbaag ;};_gfdf .SdHuffDecodeHeightSelection =int8 (_fdfc &0xf);_begd ,_bbaag =_gfdf ._eegc .ReadBit ();
if _bbaag !=nil {return _bbaag ;};if _begd ==1{_gfdf .UseRefinementAggregation =true ;};_begd ,_bbaag =_gfdf ._eegc .ReadBit ();if _bbaag !=nil {return _bbaag ;};if _begd ==1{_gfdf .IsHuffmanEncoded =true ;};return nil ;};func (_fbe *GenericRegion )parseHeader ()(_cfa error ){_ab .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052I\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0050\u0061\u0072s\u0069\u006e\u0067\u0048\u0065\u0061\u0064e\u0072\u002e\u002e\u002e");
defer func (){if _cfa !=nil {_ab .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e]\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065r\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0077\u0069th\u0020\u0065\u0072\u0072\u006f\u0072\u002e\u0020\u0025\u0076",_cfa );
}else {_ab .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049C\u002d\u0052\u0045G\u0049\u004f\u004e]\u0020\u0050a\u0072\u0073\u0069\u006e\u0067\u0048e\u0061de\u0072\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0053\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079\u002e\u002e\u002e");
};}();var (_adc int ;_dabec uint64 ;);if _cfa =_fbe .RegionSegment .parseHeader ();_cfa !=nil {return _cfa ;};if _ ,_cfa =_fbe ._gec .ReadBits (3);_cfa !=nil {return _cfa ;};_adc ,_cfa =_fbe ._gec .ReadBit ();if _cfa !=nil {return _cfa ;};if _adc ==1{_fbe .UseExtTemplates =true ;
};_adc ,_cfa =_fbe ._gec .ReadBit ();if _cfa !=nil {return _cfa ;};if _adc ==1{_fbe .IsTPGDon =true ;};_dabec ,_cfa =_fbe ._gec .ReadBits (2);if _cfa !=nil {return _cfa ;};_fbe .GBTemplate =byte (_dabec &0xf);_adc ,_cfa =_fbe ._gec .ReadBit ();if _cfa !=nil {return _cfa ;
};if _adc ==1{_fbe .IsMMREncoded =true ;};if !_fbe .IsMMREncoded {_geb :=1;if _fbe .GBTemplate ==0{_geb =4;if _fbe .UseExtTemplates {_geb =12;};};if _cfa =_fbe .readGBAtPixels (_geb );_cfa !=nil {return _cfa ;};};if _cfa =_fbe .computeSegmentDataStructure ();
_cfa !=nil {return _cfa ;};_ab .Log .Trace ("\u0025\u0073",_fbe );return nil ;};func (_dfaa *TextRegion )readUseRefinement ()error {if !_dfaa .UseRefinement ||_dfaa .SbrTemplate !=0{return nil ;};var (_abeb byte ;_ceeg error ;);_dfaa .SbrATX =make ([]int8 ,2);
_dfaa .SbrATY =make ([]int8 ,2);_abeb ,_ceeg =_dfaa ._egcf .ReadByte ();if _ceeg !=nil {return _ceeg ;};_dfaa .SbrATX [0]=int8 (_abeb );_abeb ,_ceeg =_dfaa ._egcf .ReadByte ();if _ceeg !=nil {return _ceeg ;};_dfaa .SbrATY [0]=int8 (_abeb );_abeb ,_ceeg =_dfaa ._egcf .ReadByte ();
if _ceeg !=nil {return _ceeg ;};_dfaa .SbrATX [1]=int8 (_abeb );_abeb ,_ceeg =_dfaa ._egcf .ReadByte ();if _ceeg !=nil {return _ceeg ;};_dfaa .SbrATY [1]=int8 (_abeb );return nil ;};type Pager interface{GetSegment (int )(*Header ,error );GetBitmap ()(*_cf .Bitmap ,error );
};func (_acg *PageInformationSegment )encodeFlags (_efcfg _de .BinaryWriter )(_eagb error ){const _fbed ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _eagb =_efcfg .SkipBits (1);_eagb !=nil {return _g .Wrap (_eagb ,_fbed ,"\u0072\u0065\u0073e\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074");
};var _eagg int ;if _acg .CombinationOperatorOverrideAllowed (){_eagg =1;};if _eagb =_efcfg .WriteBit (_eagg );_eagb !=nil {return _g .Wrap (_eagb ,_fbed ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0064\u0065\u006e");
};_eagg =0;if _acg ._aeda {_eagg =1;};if _eagb =_efcfg .WriteBit (_eagg );_eagb !=nil {return _g .Wrap (_eagb ,_fbed ,"\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0061\u0075\u0078i\u006ci\u0061r\u0079\u0020\u0062\u0075\u0066\u0066\u0065r");};if _eagb =_efcfg .WriteBit ((int (_acg ._cbdgc )>>1)&0x01);
_eagb !=nil {return _g .Wrap (_eagb ,_fbed ,"\u0063\u006f\u006d\u0062\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006f\u0070\u0065\u0072\u0061\u0074o\u0072\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0062\u0069\u0074");};if _eagb =_efcfg .WriteBit (int (_acg ._cbdgc )&0x01);
_eagb !=nil {return _g .Wrap (_eagb ,_fbed ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0062\u0069\u0074");};_eagg =int (_acg .DefaultPixelValue );
if _eagb =_efcfg .WriteBit (_eagg );_eagb !=nil {return _g .Wrap (_eagb ,_fbed ,"\u0064e\u0066\u0061\u0075\u006c\u0074\u0020\u0070\u0061\u0067\u0065\u0020p\u0069\u0078\u0065\u006c\u0020\u0076\u0061\u006c\u0075\u0065");};_eagg =0;if _acg ._geec {_eagg =1;
};if _eagb =_efcfg .WriteBit (_eagg );_eagb !=nil {return _g .Wrap (_eagb ,_fbed ,"\u0063\u006f\u006e\u0074ai\u006e\u0073\u0020\u0072\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074");};_eagg =0;if _acg .IsLossless {_eagg =1;};if _eagb =_efcfg .WriteBit (_eagg );
_eagb !=nil {return _g .Wrap (_eagb ,_fbed ,"p\u0061\u0067\u0065\u0020\u0069\u0073 \u0065\u0076\u0065\u006e\u0074\u0075\u0061\u006c\u006cy\u0020\u006c\u006fs\u0073l\u0065\u0073\u0073");};return nil ;};const (ORandom OrganizationType =iota ;OSequential ;
);func (_edcg *TextRegion )blit (_fgdg *_cf .Bitmap ,_fbde int64 )error {if _edcg .IsTransposed ==0&&(_edcg .ReferenceCorner ==2||_edcg .ReferenceCorner ==3){_edcg ._fcffg +=int64 (_fgdg .Width -1);}else if _edcg .IsTransposed ==1&&(_edcg .ReferenceCorner ==0||_edcg .ReferenceCorner ==2){_edcg ._fcffg +=int64 (_fgdg .Height -1);
};_faef :=_edcg ._fcffg ;if _edcg .IsTransposed ==1{_faef ,_fbde =_fbde ,_faef ;};switch _edcg .ReferenceCorner {case 0:_fbde -=int64 (_fgdg .Height -1);case 2:_fbde -=int64 (_fgdg .Height -1);_faef -=int64 (_fgdg .Width -1);case 3:_faef -=int64 (_fgdg .Width -1);
};_aega :=_cf .Blit (_fgdg ,_edcg .RegionBitmap ,int (_faef ),int (_fbde ),_edcg .CombinationOperator );if _aega !=nil {return _aega ;};if _edcg .IsTransposed ==0&&(_edcg .ReferenceCorner ==0||_edcg .ReferenceCorner ==1){_edcg ._fcffg +=int64 (_fgdg .Width -1);
};if _edcg .IsTransposed ==1&&(_edcg .ReferenceCorner ==1||_edcg .ReferenceCorner ==3){_edcg ._fcffg +=int64 (_fgdg .Height -1);};return nil ;};func (_cdc *GenericRegion )updateOverrideFlags ()error {const _cbaa ="\u0075\u0070\u0064\u0061te\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _cdc .GBAtX ==nil ||_cdc .GBAtY ==nil {return nil ;};if len (_cdc .GBAtX )!=len (_cdc .GBAtY ){return _g .Errorf (_cbaa ,"i\u006eco\u0073i\u0073t\u0065\u006e\u0074\u0020\u0041T\u0020\u0070\u0069x\u0065\u006c\u002e\u0020\u0041m\u006f\u0075\u006et\u0020\u006f\u0066\u0020\u0027\u0078\u0027\u0020\u0070\u0069\u0078e\u006c\u0073\u003a %d\u002c\u0020\u0041\u006d\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0027\u0079\u0027\u0020\u0070\u0069\u0078e\u006cs\u003a\u0020\u0025\u0064",len (_cdc .GBAtX ),len (_cdc .GBAtY ));
};_cdc .GBAtOverride =make ([]bool ,len (_cdc .GBAtX ));switch _cdc .GBTemplate {case 0:if !_cdc .UseExtTemplates {if _cdc .GBAtX [0]!=3||_cdc .GBAtY [0]!=-1{_cdc .setOverrideFlag (0);};if _cdc .GBAtX [1]!=-3||_cdc .GBAtY [1]!=-1{_cdc .setOverrideFlag (1);
};if _cdc .GBAtX [2]!=2||_cdc .GBAtY [2]!=-2{_cdc .setOverrideFlag (2);};if _cdc .GBAtX [3]!=-2||_cdc .GBAtY [3]!=-2{_cdc .setOverrideFlag (3);};}else {if _cdc .GBAtX [0]!=-2||_cdc .GBAtY [0]!=0{_cdc .setOverrideFlag (0);};if _cdc .GBAtX [1]!=0||_cdc .GBAtY [1]!=-2{_cdc .setOverrideFlag (1);
};if _cdc .GBAtX [2]!=-2||_cdc .GBAtY [2]!=-1{_cdc .setOverrideFlag (2);};if _cdc .GBAtX [3]!=-1||_cdc .GBAtY [3]!=-2{_cdc .setOverrideFlag (3);};if _cdc .GBAtX [4]!=1||_cdc .GBAtY [4]!=-2{_cdc .setOverrideFlag (4);};if _cdc .GBAtX [5]!=2||_cdc .GBAtY [5]!=-1{_cdc .setOverrideFlag (5);
};if _cdc .GBAtX [6]!=-3||_cdc .GBAtY [6]!=0{_cdc .setOverrideFlag (6);};if _cdc .GBAtX [7]!=-4||_cdc .GBAtY [7]!=0{_cdc .setOverrideFlag (7);};if _cdc .GBAtX [8]!=2||_cdc .GBAtY [8]!=-2{_cdc .setOverrideFlag (8);};if _cdc .GBAtX [9]!=3||_cdc .GBAtY [9]!=-1{_cdc .setOverrideFlag (9);
};if _cdc .GBAtX [10]!=-2||_cdc .GBAtY [10]!=-2{_cdc .setOverrideFlag (10);};if _cdc .GBAtX [11]!=-3||_cdc .GBAtY [11]!=-1{_cdc .setOverrideFlag (11);};};case 1:if _cdc .GBAtX [0]!=3||_cdc .GBAtY [0]!=-1{_cdc .setOverrideFlag (0);};case 2:if _cdc .GBAtX [0]!=2||_cdc .GBAtY [0]!=-1{_cdc .setOverrideFlag (0);
};case 3:if _cdc .GBAtX [0]!=2||_cdc .GBAtY [0]!=-1{_cdc .setOverrideFlag (0);};};return nil ;};func (_dcd *GenericRegion )Init (h *Header ,r _de .StreamReader )error {_dcd .RegionSegment =NewRegionSegment (r );_dcd ._gec =r ;return _dcd .parseHeader ();
};type Type int ;func (_bacb *SymbolDictionary )getSbSymCodeLen ()int8 {_caba :=int8 (_f .Ceil (_f .Log (float64 (_bacb ._cbff +_bacb .NumberOfNewSymbols ))/_f .Log (2)));if _bacb .IsHuffmanEncoded &&_caba < 1{return 1;};return _caba ;};func (_bc *EndOfStripe )Init (h *Header ,r _de .StreamReader )error {_bc ._abd =r ;
return _bc .parseHeader (h ,r );};func (_dafg *RegionSegment )parseHeader ()error {const _bega ="p\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_ab .Log .Trace ("\u005b\u0052\u0045\u0047I\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002dH\u0045A\u0044\u0045\u0052\u005d\u0020\u0042\u0065g\u0069\u006e");
defer func (){_ab .Log .Trace ("\u005b\u0052\u0045G\u0049\u004f\u004e\u005d[\u0050\u0041\u0052\u0053\u0045\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");}();_fdbba ,_bdgc :=_dafg ._bcab .ReadBits (32);
if _bdgc !=nil {return _g .Wrap (_bdgc ,_bega ,"\u0077\u0069\u0064t\u0068");};_dafg .BitmapWidth =uint32 (_fdbba &_f .MaxUint32 );_fdbba ,_bdgc =_dafg ._bcab .ReadBits (32);if _bdgc !=nil {return _g .Wrap (_bdgc ,_bega ,"\u0068\u0065\u0069\u0067\u0068\u0074");
};_dafg .BitmapHeight =uint32 (_fdbba &_f .MaxUint32 );_fdbba ,_bdgc =_dafg ._bcab .ReadBits (32);if _bdgc !=nil {return _g .Wrap (_bdgc ,_bega ,"\u0078\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_dafg .XLocation =uint32 (_fdbba &_f .MaxUint32 );
_fdbba ,_bdgc =_dafg ._bcab .ReadBits (32);if _bdgc !=nil {return _g .Wrap (_bdgc ,_bega ,"\u0079\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_dafg .YLocation =uint32 (_fdbba &_f .MaxUint32 );if _ ,_bdgc =_dafg ._bcab .ReadBits (5);_bdgc !=nil {return _g .Wrap (_bdgc ,_bega ,"\u0064i\u0072\u0079\u0020\u0072\u0065\u0061d");
};if _bdgc =_dafg .readCombinationOperator ();_bdgc !=nil {return _g .Wrap (_bdgc ,_bega ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};return nil ;};func (_abae *SymbolDictionary )readNumberOfExportedSymbols ()error {_cacc ,_dgdb :=_abae ._eegc .ReadBits (32);
if _dgdb !=nil {return _dgdb ;};_abae .NumberOfExportedSymbols =uint32 (_cacc &_f .MaxUint32 );return nil ;};func (_fbcff *PatternDictionary )setGbAtPixels (){if _fbcff .HDTemplate ==0{_fbcff .GBAtX =make ([]int8 ,4);_fbcff .GBAtY =make ([]int8 ,4);_fbcff .GBAtX [0]=-int8 (_fbcff .HdpWidth );
_fbcff .GBAtY [0]=0;_fbcff .GBAtX [1]=-3;_fbcff .GBAtY [1]=-1;_fbcff .GBAtX [2]=2;_fbcff .GBAtY [2]=-2;_fbcff .GBAtX [3]=-2;_fbcff .GBAtY [3]=-2;}else {_fbcff .GBAtX =[]int8 {-int8 (_fbcff .HdpWidth )};_fbcff .GBAtY =[]int8 {0};};};func (_ebff *Header )subInputReader ()(_de .StreamReader ,error ){return _de .NewSubstreamReader (_ebff .Reader ,_ebff .SegmentDataStartOffset ,_ebff .SegmentDataLength );
};func (_gecb *SymbolDictionary )Init (h *Header ,r _de .StreamReader )error {_gecb .Header =h ;_gecb ._eegc =r ;return _gecb .parseHeader ();};func (_ggdc *PageInformationSegment )readContainsRefinement ()error {_aeee ,_abdec :=_ggdc ._ggc .ReadBit ();
if _abdec !=nil {return _abdec ;};if _aeee ==1{_ggdc ._geec =true ;};return nil ;};func (_cdg *Header )readSegmentNumber (_dgaa _de .StreamReader )error {const _cgfa ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";
_cbgb :=make ([]byte ,4);_ ,_ebec :=_dgaa .Read (_cbgb );if _ebec !=nil {return _g .Wrap (_ebec ,_cgfa ,"");};_cdg .SegmentNumber =_e .BigEndian .Uint32 (_cbgb );return nil ;};func _eeaf (_baga int )int {if _baga ==0{return 0;};_baga |=_baga >>1;_baga |=_baga >>2;
_baga |=_baga >>4;_baga |=_baga >>8;_baga |=_baga >>16;return (_baga +1)>>1;};func (_cfd *GenericRegion )Encode (w _de .BinaryWriter )(_ceg int ,_ffce error ){const _bcc ="G\u0065n\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069o\u006e\u002e\u0045\u006eco\u0064\u0065";
if _cfd .Bitmap ==nil {return 0,_g .Error (_bcc ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};_dcb ,_ffce :=_cfd .RegionSegment .Encode (w );if _ffce !=nil {return 0,_g .Wrap (_ffce ,_bcc ,"\u0052\u0065\u0067\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};_ceg +=_dcb ;if _ffce =w .SkipBits (4);_ffce !=nil {return _ceg ,_g .Wrap (_ffce ,_bcc ,"\u0073k\u0069p\u0020\u0072\u0065\u0073\u0065r\u0076\u0065d\u0020\u0062\u0069\u0074\u0073");};var _egf int ;if _cfd .IsTPGDon {_egf =1;};if _ffce =w .WriteBit (_egf );
_ffce !=nil {return _ceg ,_g .Wrap (_ffce ,_bcc ,"\u0074\u0070\u0067\u0064\u006f\u006e");};_egf =0;if _ffce =w .WriteBit (int (_cfd .GBTemplate >>1)&0x01);_ffce !=nil {return _ceg ,_g .Wrap (_ffce ,_bcc ,"f\u0069r\u0073\u0074\u0020\u0067\u0062\u0074\u0065\u006dp\u006c\u0061\u0074\u0065 b\u0069\u0074");
};if _ffce =w .WriteBit (int (_cfd .GBTemplate )&0x01);_ffce !=nil {return _ceg ,_g .Wrap (_ffce ,_bcc ,"s\u0065\u0063\u006f\u006ed \u0067b\u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u0062\u0069\u0074");};if _cfd .UseMMR {_egf =1;};if _ffce =w .WriteBit (_egf );
_ffce !=nil {return _ceg ,_g .Wrap (_ffce ,_bcc ,"u\u0073\u0065\u0020\u004d\u004d\u0052\u0020\u0062\u0069\u0074");};_ceg ++;if _dcb ,_ffce =_cfd .writeGBAtPixels (w );_ffce !=nil {return _ceg ,_g .Wrap (_ffce ,_bcc ,"");};_ceg +=_dcb ;_effa :=_ed .New ();
if _ffce =_effa .EncodeBitmap (_cfd .Bitmap ,_cfd .IsTPGDon );_ffce !=nil {return _ceg ,_g .Wrap (_ffce ,_bcc ,"");};_effa .Final ();var _fab int64 ;if _fab ,_ffce =_effa .WriteTo (w );_ffce !=nil {return _ceg ,_g .Wrap (_ffce ,_bcc ,"");};_ceg +=int (_fab );
return _ceg ,nil ;};func (_fede *GenericRegion )decodeTemplate1 (_fdg ,_fece ,_fcb int ,_eaec ,_deda int )(_adde error ){const _gfcc ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0031";var (_bfb ,_adda int ;_fagd ,_bfc int ;
_ddff byte ;_ccec ,_bfa int ;);if _fdg >=1{_ddff ,_adde =_fede .Bitmap .GetByte (_deda );if _adde !=nil {return _g .Wrap (_adde ,_gfcc ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_fagd =int (_ddff );};if _fdg >=2{_ddff ,_adde =_fede .Bitmap .GetByte (_deda -_fede .Bitmap .RowStride );
if _adde !=nil {return _g .Wrap (_adde ,_gfcc ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_bfc =int (_ddff )<<5;};_bfb =((_fagd >>1)&0x1f8)|((_bfc >>1)&0x1e00);for _fggg :=0;_fggg < _fcb ;_fggg =_ccec {var (_bda byte ;_cbc int ;);_ccec =_fggg +8;
if _bcg :=_fece -_fggg ;_bcg > 8{_cbc =8;}else {_cbc =_bcg ;};if _fdg > 0{_fagd <<=8;if _ccec < _fece {_ddff ,_adde =_fede .Bitmap .GetByte (_deda +1);if _adde !=nil {return _g .Wrap (_adde ,_gfcc ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};
_fagd |=int (_ddff );};};if _fdg > 1{_bfc <<=8;if _ccec < _fece {_ddff ,_adde =_fede .Bitmap .GetByte (_deda -_fede .Bitmap .RowStride +1);if _adde !=nil {return _g .Wrap (_adde ,_gfcc ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_bfc |=int (_ddff )<<5;
};};for _gdb :=0;_gdb < _cbc ;_gdb ++{if _fede ._adg {_adda =_fede .overrideAtTemplate1 (_bfb ,_fggg +_gdb ,_fdg ,int (_bda ),_gdb );_fede ._degg .SetIndex (int32 (_adda ));}else {_fede ._degg .SetIndex (int32 (_bfb ));};_bfa ,_adde =_fede ._edc .DecodeBit (_fede ._degg );
if _adde !=nil {return _g .Wrap (_adde ,_gfcc ,"");};_bda |=byte (_bfa )<<uint (7-_gdb );_ageea :=uint (8-_gdb );_bfb =((_bfb &0xefb)<<1)|_bfa |((_fagd >>_ageea )&0x8)|((_bfc >>_ageea )&0x200);};if _ecfa :=_fede .Bitmap .SetByte (_eaec ,_bda );_ecfa !=nil {return _g .Wrap (_ecfa ,_gfcc ,"");
};_eaec ++;_deda ++;};return nil ;};var _ SegmentEncoder =&GenericRegion {};var _ templater =&template1 {};func (_cdf *GenericRegion )overrideAtTemplate0a (_ecef ,_fcfg ,_fdd ,_fdae ,_acedb ,_dfbde int )int {if _cdf .GBAtOverride [0]{_ecef &=0xFFEF;if _cdf .GBAtY [0]==0&&_cdf .GBAtX [0]>=-int8 (_acedb ){_ecef |=(_fdae >>uint (int8 (_dfbde )-_cdf .GBAtX [0]&0x1))<<4;
}else {_ecef |=int (_cdf .getPixel (_fcfg +int (_cdf .GBAtX [0]),_fdd +int (_cdf .GBAtY [0])))<<4;};};if _cdf .GBAtOverride [1]{_ecef &=0xFBFF;if _cdf .GBAtY [1]==0&&_cdf .GBAtX [1]>=-int8 (_acedb ){_ecef |=(_fdae >>uint (int8 (_dfbde )-_cdf .GBAtX [1]&0x1))<<10;
}else {_ecef |=int (_cdf .getPixel (_fcfg +int (_cdf .GBAtX [1]),_fdd +int (_cdf .GBAtY [1])))<<10;};};if _cdf .GBAtOverride [2]{_ecef &=0xF7FF;if _cdf .GBAtY [2]==0&&_cdf .GBAtX [2]>=-int8 (_acedb ){_ecef |=(_fdae >>uint (int8 (_dfbde )-_cdf .GBAtX [2]&0x1))<<11;
}else {_ecef |=int (_cdf .getPixel (_fcfg +int (_cdf .GBAtX [2]),_fdd +int (_cdf .GBAtY [2])))<<11;};};if _cdf .GBAtOverride [3]{_ecef &=0x7FFF;if _cdf .GBAtY [3]==0&&_cdf .GBAtX [3]>=-int8 (_acedb ){_ecef |=(_fdae >>uint (int8 (_dfbde )-_cdf .GBAtX [3]&0x1))<<15;
}else {_ecef |=int (_cdf .getPixel (_fcfg +int (_cdf .GBAtX [3]),_fdd +int (_cdf .GBAtY [3])))<<15;};};return _ecef ;};type SegmentEncoder interface{Encode (_cgaa _de .BinaryWriter )(_edgfd int ,_adcf error );};func (_aebe *Header )GetSegmentData ()(Segmenter ,error ){var _ebd Segmenter ;
if _aebe .SegmentData !=nil {_ebd =_aebe .SegmentData ;};if _ebd ==nil {_gdc ,_ecfcb :=_fgfc [_aebe .Type ];if !_ecfcb {return nil ,_d .Errorf ("\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0073\u002f\u0020\u0025\u0064\u0020\u0063\u0072e\u0061t\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e\u0020",_aebe .Type ,_aebe .Type );
};_ebd =_gdc ();_ab .Log .Trace ("\u005b\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u0020\u0061\u0074\u0020\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0030\u0034\u0058",_aebe .SegmentNumber ,_aebe .SegmentDataStartOffset );
_bfae ,_cgfe :=_aebe .subInputReader ();if _cgfe !=nil {return nil ,_cgfe ;};if _cefg :=_ebd .Init (_aebe ,_bfae );_cefg !=nil {_ab .Log .Debug ("\u0049\u006e\u0069\u0074 \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076 \u0066o\u0072\u0020\u0074\u0079\u0070\u0065\u003a \u0025\u0054",_cefg ,_ebd );
return nil ,_cefg ;};_aebe .SegmentData =_ebd ;};return _ebd ,nil ;};func (_efff *TextRegion )decodeDfs ()(int64 ,error ){if _efff .IsHuffmanEncoded {if _efff .SbHuffFS ==3{if _efff ._geeg ==nil {var _gcgbg error ;_efff ._geeg ,_gcgbg =_efff .getUserTable (0);
if _gcgbg !=nil {return 0,_gcgbg ;};};return _efff ._geeg .Decode (_efff ._egcf );};_dgcc ,_bgfce :=_ded .GetStandardTable (6+int (_efff .SbHuffFS ));if _bgfce !=nil {return 0,_bgfce ;};return _dgcc .Decode (_efff ._egcf );};_gcffb ,_aedac :=_efff ._cdgg .DecodeInt (_efff ._dcgdd );
if _aedac !=nil {return 0,_aedac ;};return int64 (_gcffb ),nil ;};func (_fbcg *TextRegion )GetRegionBitmap ()(*_cf .Bitmap ,error ){if _fbcg .RegionBitmap !=nil {return _fbcg .RegionBitmap ,nil ;};if !_fbcg .IsHuffmanEncoded {if _bbgfa :=_fbcg .setCodingStatistics ();
_bbgfa !=nil {return nil ,_bbgfa ;};};if _ccad :=_fbcg .createRegionBitmap ();_ccad !=nil {return nil ,_ccad ;};if _dcbe :=_fbcg .decodeSymbolInstances ();_dcbe !=nil {return nil ,_dcbe ;};return _fbcg .RegionBitmap ,nil ;};func (_debd *SymbolDictionary )decodeHeightClassCollectiveBitmap (_aagc int64 ,_ddfb ,_gcag uint32 )(*_cf .Bitmap ,error ){if _aagc ==0{_dbdg :=_cf .New (int (_gcag ),int (_ddfb ));
var (_dcdg byte ;_aad error ;);for _bfbee :=0;_bfbee < len (_dbdg .Data );_bfbee ++{_dcdg ,_aad =_debd ._eegc .ReadByte ();if _aad !=nil {return nil ,_aad ;};if _aad =_dbdg .SetByte (_bfbee ,_dcdg );_aad !=nil {return nil ,_aad ;};};return _dbdg ,nil ;
};if _debd ._fgdf ==nil {_debd ._fgdf =NewGenericRegion (_debd ._eegc );};_debd ._fgdf .setParameters (true ,_debd ._eegc .StreamPosition (),_aagc ,_ddfb ,_gcag );_bdae ,_cdfca :=_debd ._fgdf .GetRegionBitmap ();if _cdfca !=nil {return nil ,_cdfca ;};return _bdae ,nil ;
};type templater interface{form (_add ,_gbe ,_egb ,_ffab ,_gafge int16 )int16 ;setIndex (_egef *_ga .DecoderStats );};func (_bgd *RegionSegment )String ()string {_dcdc :=&_cg .Builder {};_dcdc .WriteString ("\u0009[\u0052E\u0047\u0049\u004f\u004e\u0020S\u0045\u0047M\u0045\u004e\u0054\u005d\u000a");
_dcdc .WriteString (_d .Sprintf ("\t\u0009\u002d\u0020\u0042\u0069\u0074m\u0061\u0070\u0020\u0028\u0077\u0069d\u0074\u0068\u002c\u0020\u0068\u0065\u0069g\u0068\u0074\u0029\u0020\u005b\u0025\u0064\u0078\u0025\u0064]\u000a",_bgd .BitmapWidth ,_bgd .BitmapHeight ));
_dcdc .WriteString (_d .Sprintf ("\u0009\u0009\u002d\u0020L\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0028\u0078,\u0079)\u003a\u0020\u005b\u0025\u0064\u002c\u0025d\u005d\u000a",_bgd .XLocation ,_bgd .YLocation ));_dcdc .WriteString (_d .Sprintf ("\t\u0009\u002d\u0020\u0043\u006f\u006db\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070e\u0072\u0061\u0074o\u0072:\u0020\u0025\u0073",_bgd .CombinaionOperator ));
return _dcdc .String ();};func (_fda *EndOfStripe )LineNumber ()int {return _fda ._cga };func (_fcbd *HalftoneRegion )renderPattern (_gdba [][]int )(_cef error ){var _defc ,_bfga int ;for _ebc :=0;_ebc < int (_fcbd .HGridHeight );_ebc ++{for _becc :=0;
_becc < int (_fcbd .HGridWidth );_becc ++{_defc =_fcbd .computeX (_ebc ,_becc );_bfga =_fcbd .computeY (_ebc ,_becc );_fedc :=_fcbd .Patterns [_gdba [_ebc ][_becc ]];if _cef =_cf .Blit (_fedc ,_fcbd .HalftoneRegionBitmap ,_defc +int (_fcbd .HGridX ),_bfga +int (_fcbd .HGridY ),_fcbd .CombinationOperator );
_cef !=nil {return _cef ;};};};return nil ;};func (_aef *GenericRegion )decodeTemplate3 (_efga ,_fae ,_dff int ,_gaa ,_ebaf int )(_bdc error ){const _cgcb ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0033";var (_bcce ,_gabg int ;
_dgb int ;_dfbgc byte ;_ede ,_cfc int ;);if _efga >=1{_dfbgc ,_bdc =_aef .Bitmap .GetByte (_ebaf );if _bdc !=nil {return _g .Wrap (_bdc ,_cgcb ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_dgb =int (_dfbgc );};_bcce =(_dgb >>1)&0x70;for _edga :=0;
_edga < _dff ;_edga =_ede {var (_cee byte ;_fbbd int ;);_ede =_edga +8;if _fgde :=_fae -_edga ;_fgde > 8{_fbbd =8;}else {_fbbd =_fgde ;};if _efga >=1{_dgb <<=8;if _ede < _fae {_dfbgc ,_bdc =_aef .Bitmap .GetByte (_ebaf +1);if _bdc !=nil {return _g .Wrap (_bdc ,_cgcb ,"\u0069\u006e\u006e\u0065\u0072\u0020\u002d\u0020\u006c\u0069\u006e\u0065 \u003e\u003d\u0020\u0031");
};_dgb |=int (_dfbgc );};};for _ageb :=0;_ageb < _fbbd ;_ageb ++{if _aef ._adg {_gabg =_aef .overrideAtTemplate3 (_bcce ,_edga +_ageb ,_efga ,int (_cee ),_ageb );_aef ._degg .SetIndex (int32 (_gabg ));}else {_aef ._degg .SetIndex (int32 (_bcce ));};_cfc ,_bdc =_aef ._edc .DecodeBit (_aef ._degg );
if _bdc !=nil {return _g .Wrap (_bdc ,_cgcb ,"");};_cee |=byte (_cfc )<<byte (7-_ageb );_bcce =((_bcce &0x1f7)<<1)|_cfc |((_dgb >>uint (8-_ageb ))&0x010);};if _aeb :=_aef .Bitmap .SetByte (_gaa ,_cee );_aeb !=nil {return _g .Wrap (_aeb ,_cgcb ,"");};_gaa ++;
_ebaf ++;};return nil ;};func (_dgd *GenericRefinementRegion )overrideAtTemplate0 (_fba ,_bff ,_dec ,_gfe ,_bbd int )int {if _dgd ._def [0]{_fba &=0xfff7;if _dgd .GrAtY [0]==0&&int (_dgd .GrAtX [0])>=-_bbd {_fba |=(_gfe >>uint (7-(_bbd +int (_dgd .GrAtX [0])))&0x1)<<3;
}else {_fba |=_dgd .getPixel (_dgd .RegionBitmap ,_bff +int (_dgd .GrAtX [0]),_dec +int (_dgd .GrAtY [0]))<<3;};};if _dgd ._def [1]{_fba &=0xefff;if _dgd .GrAtY [1]==0&&int (_dgd .GrAtX [1])>=-_bbd {_fba |=(_gfe >>uint (7-(_bbd +int (_dgd .GrAtX [1])))&0x1)<<12;
}else {_fba |=_dgd .getPixel (_dgd .ReferenceBitmap ,_bff +int (_dgd .GrAtX [1]),_dec +int (_dgd .GrAtY [1]));};};return _fba ;};func (_gcb *RegionSegment )Size ()int {return 17};func _aaa (_ecdgc _de .StreamReader ,_edcf *Header )*TextRegion {_bged :=&TextRegion {_egcf :_ecdgc ,Header :_edcf ,RegionInfo :NewRegionSegment (_ecdgc )};
return _bged ;};func NewHeader (d Documenter ,r _de .StreamReader ,offset int64 ,organizationType OrganizationType )(*Header ,error ){_efbbf :=&Header {Reader :r };if _gbec :=_efbbf .parse (d ,r ,offset ,organizationType );_gbec !=nil {return nil ,_g .Wrap (_gbec ,"\u004ee\u0077\u0048\u0065\u0061\u0064\u0065r","");
};return _efbbf ,nil ;};var _ templater =&template0 {};func (_bcb *GenericRegion )copyLineAbove (_egdd int )error {_ebe :=_egdd *_bcb .Bitmap .RowStride ;_eae :=_ebe -_bcb .Bitmap .RowStride ;for _cda :=0;_cda < _bcb .Bitmap .RowStride ;_cda ++{_bcag ,_adcd :=_bcb .Bitmap .GetByte (_eae );
if _adcd !=nil {return _adcd ;};_eae ++;if _adcd =_bcb .Bitmap .SetByte (_ebe ,_bcag );_adcd !=nil {return _adcd ;};_ebe ++;};return nil ;};func (_bacfbd *TextRegion )GetRegionInfo ()*RegionSegment {return _bacfbd .RegionInfo };func (_bacfb *TableSegment )HtRS ()int32 {return _bacfb ._cffbc };
func (_gbff *TextRegion )getSymbols ()error {if _gbff .Header .RTSegments !=nil {return _gbff .initSymbols ();};return nil ;};func (_gabb *SymbolDictionary )decodeHeightClassDeltaHeight ()(int64 ,error ){if _gabb .IsHuffmanEncoded {return _gabb .decodeHeightClassDeltaHeightWithHuffman ();
};_fbcdc ,_agaee :=_gabb ._ebgeg .DecodeInt (_gabb ._afdc );if _agaee !=nil {return 0,_agaee ;};return int64 (_fbcdc ),nil ;};func (_cabbe *PageInformationSegment )CombinationOperatorOverrideAllowed ()bool {return _cabbe ._beea };func (_aca *template0 )form (_dac ,_gbb ,_dcaf ,_fdcd ,_abef int16 )int16 {return (_dac <<10)|(_gbb <<7)|(_dcaf <<4)|(_fdcd <<1)|_abef ;
};func (_aegb *HalftoneRegion )Init (hd *Header ,r _de .StreamReader )error {_aegb ._ecc =r ;_aegb ._bffa =hd ;_aegb .RegionSegment =NewRegionSegment (r );return _aegb .parseHeader ();};func (_eedg *TextRegion )decodeStripT ()(_ddde int64 ,_cggd error ){if _eedg .IsHuffmanEncoded {if _eedg .SbHuffDT ==3{if _eedg ._babb ==nil {var _dgbee int ;
if _eedg .SbHuffFS ==3{_dgbee ++;};if _eedg .SbHuffDS ==3{_dgbee ++;};_eedg ._babb ,_cggd =_eedg .getUserTable (_dgbee );if _cggd !=nil {return 0,_cggd ;};};_ddde ,_cggd =_eedg ._babb .Decode (_eedg ._egcf );if _cggd !=nil {return 0,_cggd ;};}else {var _ebage _ded .Tabler ;
_ebage ,_cggd =_ded .GetStandardTable (11+int (_eedg .SbHuffDT ));if _cggd !=nil {return 0,_cggd ;};_ddde ,_cggd =_ebage .Decode (_eedg ._egcf );if _cggd !=nil {return 0,_cggd ;};};}else {var _abgg int32 ;_abgg ,_cggd =_eedg ._cdgg .DecodeInt (_eedg ._ccfd );
if _cggd !=nil {return 0,_cggd ;};_ddde =int64 (_abgg );};_ddde *=int64 (-_eedg .SbStrips );return _ddde ,nil ;};func (_dcdeg *SymbolDictionary )decodeThroughTextRegion (_dbegf ,_ced ,_cfaf uint32 )error {if _dcdeg ._cfbbd ==nil {_dcdeg ._cfbbd =_aaa (_dcdeg ._eegc ,nil );
_dcdeg ._cfbbd .setContexts (_dcdeg ._edda ,_ga .NewStats (512,1),_ga .NewStats (512,1),_ga .NewStats (512,1),_ga .NewStats (512,1),_dcdeg ._ddfad ,_ga .NewStats (512,1),_ga .NewStats (512,1),_ga .NewStats (512,1),_ga .NewStats (512,1));};if _ffda :=_dcdeg .setSymbolsArray ();
_ffda !=nil {return _ffda ;};_dcdeg ._cfbbd .setParameters (_dcdeg ._ebgeg ,_dcdeg .IsHuffmanEncoded ,true ,_dbegf ,_ced ,_cfaf ,1,_dcdeg ._cbff +_dcdeg ._fdag ,0,0,0,1,0,0,0,0,0,0,0,0,0,_dcdeg .SdrTemplate ,_dcdeg .SdrATX ,_dcdeg .SdrATY ,_dcdeg ._becb ,_dcdeg ._dccc );
return _dcdeg .addSymbol (_dcdeg ._cfbbd );};func (_ecfc *GenericRegion )decodeSLTP ()(int ,error ){switch _ecfc .GBTemplate {case 0:_ecfc ._degg .SetIndex (0x9B25);case 1:_ecfc ._degg .SetIndex (0x795);case 2:_ecfc ._degg .SetIndex (0xE5);case 3:_ecfc ._degg .SetIndex (0x195);
};return _ecfc ._edc .DecodeBit (_ecfc ._degg );};func (_bba *GenericRefinementRegion )setParameters (_fef *_ga .DecoderStats ,_abe *_ga .Decoder ,_caef int8 ,_gff ,_agf uint32 ,_gefa *_cf .Bitmap ,_acc ,_ffa int32 ,_dce bool ,_bbac []int8 ,_ada []int8 ){_ab .Log .Trace ("\u005b\u0047\u0045NE\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052E\u0047I\u004fN\u005d \u0073\u0065\u0074\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073");
if _fef !=nil {_bba ._cgg =_fef ;};if _abe !=nil {_bba ._ag =_abe ;};_bba .TemplateID =_caef ;_bba .RegionInfo .BitmapWidth =_gff ;_bba .RegionInfo .BitmapHeight =_agf ;_bba .ReferenceBitmap =_gefa ;_bba .ReferenceDX =_acc ;_bba .ReferenceDY =_ffa ;_bba .IsTPGROn =_dce ;
_bba .GrAtX =_bbac ;_bba .GrAtY =_ada ;_bba .RegionBitmap =nil ;_ab .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073 f\u0069\u006ei\u0073\u0068\u0065\u0064\u002e\u0020\u0025\u0073",_bba );
};func (_fafca *TextRegion )decodeIb (_bfega ,_bdge int64 )(*_cf .Bitmap ,error ){const _gcgc ="\u0064\u0065\u0063\u006f\u0064\u0065\u0049\u0062";var (_dgbf error ;_eecb *_cf .Bitmap ;);if _bfega ==0{if int (_bdge )> len (_fafca .Symbols )-1{return nil ,_g .Error (_gcgc ,"\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0049\u0042\u0020\u0062\u0069\u0074\u006d\u0061\u0070\u002e\u0020\u0069\u006e\u0064\u0065x\u0020\u006f\u0075\u0074\u0020o\u0066\u0020r\u0061\u006e\u0067\u0065");
};return _fafca .Symbols [int (_bdge )],nil ;};var _beegf ,_fdfag ,_ggde ,_edad int64 ;_beegf ,_dgbf =_fafca .decodeRdw ();if _dgbf !=nil {return nil ,_g .Wrap (_dgbf ,_gcgc ,"");};_fdfag ,_dgbf =_fafca .decodeRdh ();if _dgbf !=nil {return nil ,_g .Wrap (_dgbf ,_gcgc ,"");
};_ggde ,_dgbf =_fafca .decodeRdx ();if _dgbf !=nil {return nil ,_g .Wrap (_dgbf ,_gcgc ,"");};_edad ,_dgbf =_fafca .decodeRdy ();if _dgbf !=nil {return nil ,_g .Wrap (_dgbf ,_gcgc ,"");};if _fafca .IsHuffmanEncoded {if _ ,_dgbf =_fafca .decodeSymInRefSize ();
_dgbf !=nil {return nil ,_g .Wrap (_dgbf ,_gcgc ,"");};_fafca ._egcf .Align ();};_gdcf :=_fafca .Symbols [_bdge ];_efcc :=uint32 (_gdcf .Width );_feee :=uint32 (_gdcf .Height );_eeec :=int32 (uint32 (_beegf )>>1)+int32 (_ggde );_afead :=int32 (uint32 (_fdfag )>>1)+int32 (_edad );
if _fafca ._daebg ==nil {_fafca ._daebg =_edb (_fafca ._egcf ,nil );};_fafca ._daebg .setParameters (_fafca ._fffd ,_fafca ._cdgg ,_fafca .SbrTemplate ,_efcc +uint32 (_beegf ),_feee +uint32 (_fdfag ),_gdcf ,_eeec ,_afead ,false ,_fafca .SbrATX ,_fafca .SbrATY );
_eecb ,_dgbf =_fafca ._daebg .GetRegionBitmap ();if _dgbf !=nil {return nil ,_g .Wrap (_dgbf ,_gcgc ,"\u0067\u0072\u0066");};if _fafca .IsHuffmanEncoded {_fafca ._egcf .Align ();};return _eecb ,nil ;};type RegionSegment struct{_bcab _de .StreamReader ;
BitmapWidth uint32 ;BitmapHeight uint32 ;XLocation uint32 ;YLocation uint32 ;CombinaionOperator _cf .CombinationOperator ;};func (_acbf *GenericRegion )GetRegionInfo ()*RegionSegment {return _acbf .RegionSegment };var _ _ded .BasicTabler =&TableSegment {};
func (_gfca *TableSegment )parseHeader ()error {var (_edabb int ;_ebab uint64 ;_afgb error ;);_edabb ,_afgb =_gfca ._bcbba .ReadBit ();if _afgb !=nil {return _afgb ;};if _edabb ==1{return _d .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0061\u0062\u006c\u0065 \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0064e\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u002e\u0020\u0042\u002e\u0032\u002e1\u0020\u0043\u006f\u0064\u0065\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0042\u0069\u0074\u0020\u0037\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u007a\u0065\u0072\u006f\u002e\u0020\u0057a\u0073\u003a \u0025\u0064",_edabb );
};if _ebab ,_afgb =_gfca ._bcbba .ReadBits (3);_afgb !=nil {return _afgb ;};_gfca ._cffbc =(int32 (_ebab )+1)&0xf;if _ebab ,_afgb =_gfca ._bcbba .ReadBits (3);_afgb !=nil {return _afgb ;};_gfca ._adge =(int32 (_ebab )+1)&0xf;if _ebab ,_afgb =_gfca ._bcbba .ReadBits (32);
_afgb !=nil {return _afgb ;};_gfca ._bgec =int32 (_ebab &_f .MaxInt32 );if _ebab ,_afgb =_gfca ._bcbba .ReadBits (32);_afgb !=nil {return _afgb ;};_gfca ._ecefg =int32 (_ebab &_f .MaxInt32 );return nil ;};func (_egae *PageInformationSegment )CombinationOperator ()_cf .CombinationOperator {return _egae ._cbdgc ;
};func (_aabd *TableSegment )HtPS ()int32 {return _aabd ._adge };func (_fcc *GenericRefinementRegion )decodeTypicalPredictedLineTemplate1 (_gfc ,_gafg ,_dfc ,_gfgd ,_gb ,_dca ,_cgaf ,_cae ,_efg int )(_cgb error ){var (_dfb ,_eaa int ;_baf ,_badg int ;_ccc ,_eff int ;
_bg byte ;);if _gfc > 0{_bg ,_cgb =_fcc .RegionBitmap .GetByte (_cgaf -_dfc );if _cgb !=nil {return ;};_baf =int (_bg );};if _cae > 0&&_cae <=_fcc .ReferenceBitmap .Height {_bg ,_cgb =_fcc .ReferenceBitmap .GetByte (_efg -_gfgd +_dca );if _cgb !=nil {return ;
};_badg =int (_bg )<<2;};if _cae >=0&&_cae < _fcc .ReferenceBitmap .Height {_bg ,_cgb =_fcc .ReferenceBitmap .GetByte (_efg +_dca );if _cgb !=nil {return ;};_ccc =int (_bg );};if _cae > -2&&_cae < _fcc .ReferenceBitmap .Height -1{_bg ,_cgb =_fcc .ReferenceBitmap .GetByte (_efg +_gfgd +_dca );
if _cgb !=nil {return ;};_eff =int (_bg );};_dfb =((_baf >>5)&0x6)|((_eff >>2)&0x30)|(_ccc &0xc0)|(_badg &0x200);_eaa =((_eff >>2)&0x70)|(_ccc &0xc0)|(_badg &0x700);var _fga int ;for _bag :=0;_bag < _gb ;_bag =_fga {var (_cce int ;_gfa int ;);_fga =_bag +8;
if _cce =_gafg -_bag ;_cce > 8{_cce =8;};_cfb :=_fga < _gafg ;_eee :=_fga < _fcc .ReferenceBitmap .Width ;_eba :=_dca +1;if _gfc > 0{_bg =0;if _cfb {_bg ,_cgb =_fcc .RegionBitmap .GetByte (_cgaf -_dfc +1);if _cgb !=nil {return ;};};_baf =(_baf <<8)|int (_bg );
};if _cae > 0&&_cae <=_fcc .ReferenceBitmap .Height {var _gee int ;if _eee {_bg ,_cgb =_fcc .ReferenceBitmap .GetByte (_efg -_gfgd +_eba );if _cgb !=nil {return ;};_gee =int (_bg )<<2;};_badg =(_badg <<8)|_gee ;};if _cae >=0&&_cae < _fcc .ReferenceBitmap .Height {_bg =0;
if _eee {_bg ,_cgb =_fcc .ReferenceBitmap .GetByte (_efg +_eba );if _cgb !=nil {return ;};};_ccc =(_ccc <<8)|int (_bg );};if _cae > -2&&_cae < (_fcc .ReferenceBitmap .Height -1){_bg =0;if _eee {_bg ,_cgb =_fcc .ReferenceBitmap .GetByte (_efg +_gfgd +_eba );
if _cgb !=nil {return ;};};_eff =(_eff <<8)|int (_bg );};for _dfbg :=0;_dfbg < _cce ;_dfbg ++{var _eec int ;_afg :=(_eaa >>4)&0x1ff;switch _afg {case 0x1ff:_eec =1;case 0x00:_eec =0;default:_fcc ._cgg .SetIndex (int32 (_dfb ));_eec ,_cgb =_fcc ._ag .DecodeBit (_fcc ._cgg );
if _cgb !=nil {return ;};};_beca :=uint (7-_dfbg );_gfa |=_eec <<_beca ;_dfb =((_dfb &0x0d6)<<1)|_eec |(_baf >>_beca +5)&0x002|((_eff >>_beca +2)&0x010)|((_ccc >>_beca )&0x040)|((_badg >>_beca )&0x200);_eaa =((_eaa &0xdb)<<1)|((_eff >>_beca +2)&0x010)|((_ccc >>_beca )&0x080)|((_badg >>_beca )&0x400);
};_cgb =_fcc .RegionBitmap .SetByte (_cgaf ,byte (_gfa ));if _cgb !=nil {return ;};_cgaf ++;_efg ++;};return nil ;};func (_dbce *GenericRefinementRegion )readAtPixels ()error {_dbce .GrAtX =make ([]int8 ,2);_dbce .GrAtY =make ([]int8 ,2);_dbge ,_bd :=_dbce ._ef .ReadByte ();
if _bd !=nil {return _bd ;};_dbce .GrAtX [0]=int8 (_dbge );_dbge ,_bd =_dbce ._ef .ReadByte ();if _bd !=nil {return _bd ;};_dbce .GrAtY [0]=int8 (_dbge );_dbge ,_bd =_dbce ._ef .ReadByte ();if _bd !=nil {return _bd ;};_dbce .GrAtX [1]=int8 (_dbge );_dbge ,_bd =_dbce ._ef .ReadByte ();
if _bd !=nil {return _bd ;};_dbce .GrAtY [1]=int8 (_dbge );return nil ;};type OrganizationType uint8 ;func (_deab *TextRegion )createRegionBitmap ()error {_deab .RegionBitmap =_cf .New (int (_deab .RegionInfo .BitmapWidth ),int (_deab .RegionInfo .BitmapHeight ));
if _deab .DefaultPixel !=0{_deab .RegionBitmap .SetDefaultPixel ();};return nil ;};type TextRegion struct{_egcf _de .StreamReader ;RegionInfo *RegionSegment ;SbrTemplate int8 ;SbDsOffset int8 ;DefaultPixel int8 ;CombinationOperator _cf .CombinationOperator ;
IsTransposed int8 ;ReferenceCorner int16 ;LogSBStrips int16 ;UseRefinement bool ;IsHuffmanEncoded bool ;SbHuffRSize int8 ;SbHuffRDY int8 ;SbHuffRDX int8 ;SbHuffRDHeight int8 ;SbHuffRDWidth int8 ;SbHuffDT int8 ;SbHuffDS int8 ;SbHuffFS int8 ;SbrATX []int8 ;
SbrATY []int8 ;NumberOfSymbolInstances uint32 ;_fcffg int64 ;SbStrips int8 ;NumberOfSymbols uint32 ;RegionBitmap *_cf .Bitmap ;Symbols []*_cf .Bitmap ;_cdgg *_ga .Decoder ;_daebg *GenericRefinementRegion ;_ccfd *_ga .DecoderStats ;_dcgdd *_ga .DecoderStats ;
_gdga *_ga .DecoderStats ;_gbce *_ga .DecoderStats ;_gceg *_ga .DecoderStats ;_becac *_ga .DecoderStats ;_gddad *_ga .DecoderStats ;_bdac *_ga .DecoderStats ;_abed *_ga .DecoderStats ;_faa *_ga .DecoderStats ;_fffd *_ga .DecoderStats ;_bdcc int8 ;_adba *_ded .FixedSizeTable ;
Header *Header ;_geeg _ded .Tabler ;_edeee _ded .Tabler ;_babb _ded .Tabler ;_eafcd _ded .Tabler ;_abfd _ded .Tabler ;_efgb _ded .Tabler ;_dgbe _ded .Tabler ;_dgaea _ded .Tabler ;_edbc ,_fcda map[int ]int ;_cefag []int ;_gcaf *_cf .Points ;_dgbef *_cf .Bitmaps ;
_bcgb *_eg .IntSlice ;_afde ,_febf int ;_aceb *_cf .Boxes ;};func (_ecfe *HalftoneRegion )GetPatterns ()([]*_cf .Bitmap ,error ){var (_ebea []*_cf .Bitmap ;_ccfe error ;);for _ ,_bcbf :=range _ecfe ._bffa .RTSegments {var _dacca Segmenter ;_dacca ,_ccfe =_bcbf .GetSegmentData ();
if _ccfe !=nil {_ab .Log .Debug ("\u0047e\u0074\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061 \u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025v",_ccfe );return nil ,_ccfe ;};_cad ,_bcge :=_dacca .(*PatternDictionary );if !_bcge {_ccfe =_d .Errorf ("\u0072e\u006c\u0061t\u0065\u0064\u0020\u0073e\u0067\u006d\u0065n\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0070at\u0074\u0065\u0072n\u0020\u0064i\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u003a \u0025\u0054",_dacca );
return nil ,_ccfe ;};var _cgcf []*_cf .Bitmap ;_cgcf ,_ccfe =_cad .GetDictionary ();if _ccfe !=nil {_ab .Log .Debug ("\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_ccfe );
return nil ,_ccfe ;};_ebea =append (_ebea ,_cgcf ...);};return _ebea ,nil ;};func (_ea *GenericRefinementRegion )GetRegionInfo ()*RegionSegment {return _ea .RegionInfo };func (_gcf *GenericRegion )writeGBAtPixels (_fgad _de .BinaryWriter )(_ebbc int ,_gbaf error ){const _bbg ="\u0077r\u0069t\u0065\u0047\u0042\u0041\u0074\u0050\u0069\u0078\u0065\u006c\u0073";
if _gcf .UseMMR {return 0,nil ;};_efa :=1;if _gcf .GBTemplate ==0{_efa =4;}else if _gcf .UseExtTemplates {_efa =12;};if len (_gcf .GBAtX )!=_efa {return 0,_g .Errorf (_bbg ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0058\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};if len (_gcf .GBAtY )!=_efa {return 0,_g .Errorf (_bbg ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0059\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};for _bac :=0;_bac < _efa ;_bac ++{if _gbaf =_fgad .WriteByte (byte (_gcf .GBAtX [_bac ]));_gbaf !=nil {return _ebbc ,_g .Wrap (_gbaf ,_bbg ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0058");};_ebbc ++;if _gbaf =_fgad .WriteByte (byte (_gcf .GBAtY [_bac ]));
_gbaf !=nil {return _ebbc ,_g .Wrap (_gbaf ,_bbg ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0059");};_ebbc ++;};return _ebbc ,nil ;};func (_ddcb *SymbolDictionary )decodeDifferenceWidth ()(int64 ,error ){if _ddcb .IsHuffmanEncoded {switch _ddcb .SdHuffDecodeWidthSelection {case 0:_fegdf ,_cbe :=_ded .GetStandardTable (2);
if _cbe !=nil {return 0,_cbe ;};return _fegdf .Decode (_ddcb ._eegc );case 1:_aggec ,_agdfc :=_ded .GetStandardTable (3);if _agdfc !=nil {return 0,_agdfc ;};return _aggec .Decode (_ddcb ._eegc );case 3:if _ddcb ._agdf ==nil {var _eaed int ;if _ddcb .SdHuffDecodeHeightSelection ==3{_eaed ++;
};_cceg ,_abac :=_ddcb .getUserTable (_eaed );if _abac !=nil {return 0,_abac ;};_ddcb ._agdf =_cceg ;};return _ddcb ._agdf .Decode (_ddcb ._eegc );};}else {_bfcd ,_gcga :=_ddcb ._ebgeg .DecodeInt (_ddcb ._cdcf );if _gcga !=nil {return 0,_gcga ;};return int64 (_bfcd ),nil ;
};return 0,nil ;};func (_ddfa *HalftoneRegion )computeGrayScalePlanes (_ddc []*_cf .Bitmap ,_dcca int )([][]int ,error ){_bga :=make ([][]int ,_ddfa .HGridHeight );for _ddbb :=0;_ddbb < len (_bga );_ddbb ++{_bga [_ddbb ]=make ([]int ,_ddfa .HGridWidth );
};for _dbcg :=0;_dbcg < int (_ddfa .HGridHeight );_dbcg ++{for _gbdg :=0;_gbdg < int (_ddfa .HGridWidth );_gbdg +=8{var _abcb int ;if _bdf :=int (_ddfa .HGridWidth )-_gbdg ;_bdf > 8{_abcb =8;}else {_abcb =_bdf ;};_gag :=_ddc [0].GetByteIndex (_gbdg ,_dbcg );
for _ddd :=0;_ddd < _abcb ;_ddd ++{_dbefb :=_ddd +_gbdg ;_bga [_dbcg ][_dbefb ]=0;for _ccfc :=0;_ccfc < _dcca ;_ccfc ++{_egad ,_gefe :=_ddc [_ccfc ].GetByte (_gag );if _gefe !=nil {return nil ,_gefe ;};_efed :=_egad >>uint (7-_dbefb &7);_aed :=_efed &1;
_cffdc :=1<<uint (_ccfc );_decf :=int (_aed )*_cffdc ;_bga [_dbcg ][_dbefb ]+=_decf ;};};};};return _bga ,nil ;};func (_geca *TextRegion )symbolIDCodeLengths ()error {var (_bbce []*_ded .Code ;_cgag uint64 ;_bfegf _ded .Tabler ;_edafg error ;);for _eegd :=0;
_eegd < 35;_eegd ++{_cgag ,_edafg =_geca ._egcf .ReadBits (4);if _edafg !=nil {return _edafg ;};_ccbge :=int (_cgag &0xf);if _ccbge > 0{_bbce =append (_bbce ,_ded .NewCode (int32 (_ccbge ),0,int32 (_eegd ),false ));};};_bfegf ,_edafg =_ded .NewFixedSizeTable (_bbce );
if _edafg !=nil {return _edafg ;};var (_gaec int64 ;_cbffe uint32 ;_gddade []*_ded .Code ;_gfdg int64 ;);for _cbffe < _geca .NumberOfSymbols {_gfdg ,_edafg =_bfegf .Decode (_geca ._egcf );if _edafg !=nil {return _edafg ;};if _gfdg < 32{if _gfdg > 0{_gddade =append (_gddade ,_ded .NewCode (int32 (_gfdg ),0,int32 (_cbffe ),false ));
};_gaec =_gfdg ;_cbffe ++;}else {var _ddab ,_eeaff int64 ;switch _gfdg {case 32:_cgag ,_edafg =_geca ._egcf .ReadBits (2);if _edafg !=nil {return _edafg ;};_ddab =3+int64 (_cgag );if _cbffe > 0{_eeaff =_gaec ;};case 33:_cgag ,_edafg =_geca ._egcf .ReadBits (3);
if _edafg !=nil {return _edafg ;};_ddab =3+int64 (_cgag );case 34:_cgag ,_edafg =_geca ._egcf .ReadBits (7);if _edafg !=nil {return _edafg ;};_ddab =11+int64 (_cgag );};for _bbba :=0;_bbba < int (_ddab );_bbba ++{if _eeaff > 0{_gddade =append (_gddade ,_ded .NewCode (int32 (_eeaff ),0,int32 (_cbffe ),false ));
};_cbffe ++;};};};_geca ._egcf .Align ();_geca ._adba ,_edafg =_ded .NewFixedSizeTable (_gddade );return _edafg ;};func (_dccd *PatternDictionary )readIsMMREncoded ()error {_fgae ,_dfbf :=_dccd ._ccd .ReadBit ();if _dfbf !=nil {return _dfbf ;};if _fgae !=0{_dccd .IsMMREncoded =true ;
};return nil ;};func (_dgg *HalftoneRegion )checkInput ()error {if _dgg .IsMMREncoded {if _dgg .HTemplate !=0{_ab .Log .Debug ("\u0048\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030",_dgg .HTemplate );
};if _dgg .HSkipEnabled {_ab .Log .Debug ("\u0048\u0053\u006b\u0069\u0070\u0045\u006e\u0061\u0062\u006c\u0065\u0064\u0020\u0030\u0020\u0025\u0076\u0020(\u0073\u0068\u006f\u0075\u006c\u0064\u0020c\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020v\u0061\u006c\u0075\u0065\u0020\u0066\u0061\u006c\u0073\u0065\u0029",_dgg .HSkipEnabled );
};};return nil ;};func (_fgbf *TextRegion )decodeRI ()(int64 ,error ){if !_fgbf .UseRefinement {return 0,nil ;};if _fgbf .IsHuffmanEncoded {_caeeg ,_cdcd :=_fgbf ._egcf .ReadBit ();return int64 (_caeeg ),_cdcd ;};_bgdd ,_baad :=_fgbf ._cdgg .DecodeInt (_fgbf ._gceg );
return int64 (_bgdd ),_baad ;};func (_cgec *TableSegment )StreamReader ()_de .StreamReader {return _cgec ._bcbba };func (_fabg *HalftoneRegion )combineGrayscalePlanes (_cadc []*_cf .Bitmap ,_dga int )error {_edgac :=0;for _ggda :=0;_ggda < _cadc [_dga ].Height ;
_ggda ++{for _eaea :=0;_eaea < _cadc [_dga ].Width ;_eaea +=8{_caga ,_gdac :=_cadc [_dga +1].GetByte (_edgac );if _gdac !=nil {return _gdac ;};_dcgd ,_gdac :=_cadc [_dga ].GetByte (_edgac );if _gdac !=nil {return _gdac ;};_gdac =_cadc [_dga ].SetByte (_edgac ,_cf .CombineBytes (_dcgd ,_caga ,_cf .CmbOpXor ));
if _gdac !=nil {return _gdac ;};_edgac ++;};};return nil ;};func (_dccb *PageInformationSegment )readIsLossless ()error {_ccef ,_fbdf :=_dccb ._ggc .ReadBit ();if _fbdf !=nil {return _fbdf ;};if _ccef ==1{_dccb .IsLossless =true ;};return nil ;};func (_cefa *Header )readSegmentDataLength (_dedg _de .StreamReader )(_cdda error ){_cefa .SegmentDataLength ,_cdda =_dedg .ReadBits (32);
if _cdda !=nil {return _cdda ;};_cefa .SegmentDataLength &=_f .MaxInt32 ;return nil ;};func (_eeb *SymbolDictionary )setCodingStatistics ()error {if _eeb ._afdcd ==nil {_eeb ._afdcd =_ga .NewStats (512,1);};if _eeb ._afdc ==nil {_eeb ._afdc =_ga .NewStats (512,1);
};if _eeb ._cdcf ==nil {_eeb ._cdcf =_ga .NewStats (512,1);};if _eeb ._fgaage ==nil {_eeb ._fgaage =_ga .NewStats (512,1);};if _eeb ._bcef ==nil {_eeb ._bcef =_ga .NewStats (512,1);};if _eeb .UseRefinementAggregation &&_eeb ._ddfad ==nil {_eeb ._ddfad =_ga .NewStats (1<<uint (_eeb ._dccc ),1);
_eeb ._ecfd =_ga .NewStats (512,1);_eeb ._dddc =_ga .NewStats (512,1);};if _eeb ._edda ==nil {_eeb ._edda =_ga .NewStats (65536,1);};if _eeb ._ebgeg ==nil {var _bfeg error ;_eeb ._ebgeg ,_bfeg =_ga .New (_eeb ._eegc );if _bfeg !=nil {return _bfeg ;};};
return nil ;};func (_egc *SymbolDictionary )huffDecodeRefAggNInst ()(int64 ,error ){if !_egc .SdHuffAggInstanceSelection {_agff ,_bccd :=_ded .GetStandardTable (1);if _bccd !=nil {return 0,_bccd ;};return _agff .Decode (_egc ._eegc );};if _egc ._gca ==nil {var (_bacg int ;
_bgaf error ;);if _egc .SdHuffDecodeHeightSelection ==3{_bacg ++;};if _egc .SdHuffDecodeWidthSelection ==3{_bacg ++;};if _egc .SdHuffBMSizeSelection ==3{_bacg ++;};_egc ._gca ,_bgaf =_egc .getUserTable (_bacg );if _bgaf !=nil {return 0,_bgaf ;};};return _egc ._gca .Decode (_egc ._eegc );
};func (_cagac *SymbolDictionary )encodeSymbols (_efaa _de .BinaryWriter )(_cdge int ,_egag error ){const _fcfd ="\u0065\u006e\u0063o\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c";_ggbfd :=_ed .New ();_ggbfd .Init ();_ddge ,_egag :=_cagac ._fbfa .SelectByIndexes (_cagac ._gbfa );
if _egag !=nil {return 0,_g .Wrap (_egag ,_fcfd ,"\u0069n\u0069\u0074\u0069\u0061\u006c");};_gdg :=map[*_cf .Bitmap ]int {};for _eegg ,_bfea :=range _ddge .Values {_gdg [_bfea ]=_eegg ;};_ddge .SortByHeight ();var _befb ,_edgb int ;_degc ,_egag :=_ddge .GroupByHeight ();
if _egag !=nil {return 0,_g .Wrap (_egag ,_fcfd ,"");};for _ ,_aefd :=range _degc .Values {_dfgg :=_aefd .Values [0].Height ;_bbf :=_dfgg -_befb ;if _egag =_ggbfd .EncodeInteger (_ed .IADH ,_bbf );_egag !=nil {return 0,_g .Wrapf (_egag ,_fcfd ,"\u0049\u0041\u0044\u0048\u0020\u0066\u006f\u0072\u0020\u0064\u0068\u003a \u0027\u0025\u0064\u0027",_bbf );
};_befb =_dfgg ;_dgaf ,_agae :=_aefd .GroupByWidth ();if _agae !=nil {return 0,_g .Wrapf (_agae ,_fcfd ,"\u0068\u0065\u0069g\u0068\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_dfgg );};var _ecca int ;for _ ,_badgc :=range _dgaf .Values {for _ ,_gfgc :=range _badgc .Values {_ffeb :=_gfgc .Width ;
_eafc :=_ffeb -_ecca ;if _agae =_ggbfd .EncodeInteger (_ed .IADW ,_eafc );_agae !=nil {return 0,_g .Wrapf (_agae ,_fcfd ,"\u0049\u0041\u0044\u0057\u0020\u0066\u006f\u0072\u0020\u0064\u0077\u003a \u0027\u0025\u0064\u0027",_eafc );};_ecca +=_eafc ;if _agae =_ggbfd .EncodeBitmap (_gfgc ,false );
_agae !=nil {return 0,_g .Wrapf (_agae ,_fcfd ,"H\u0065i\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u0020W\u0069\u0064\u0074\u0068: \u0025\u0064",_dfgg ,_ffeb );};_bab :=_gdg [_gfgc ];_cagac ._dffe [_bab ]=_edgb ;_edgb ++;};};if _agae =_ggbfd .EncodeOOB (_ed .IADW );
_agae !=nil {return 0,_g .Wrap (_agae ,_fcfd ,"\u0049\u0041\u0044\u0057");};};if _egag =_ggbfd .EncodeInteger (_ed .IAEX ,0);_egag !=nil {return 0,_g .Wrap (_egag ,_fcfd ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};if _egag =_ggbfd .EncodeInteger (_ed .IAEX ,len (_cagac ._gbfa ));_egag !=nil {return 0,_g .Wrap (_egag ,_fcfd ,"\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0073\u0079m\u0062\u006f\u006c\u0073");};_ggbfd .Final ();_ddag ,_egag :=_ggbfd .WriteTo (_efaa );
if _egag !=nil {return 0,_g .Wrap (_egag ,_fcfd ,"\u0077\u0072i\u0074\u0069\u006e\u0067 \u0065\u006ec\u006f\u0064\u0065\u0072\u0020\u0063\u006f\u006et\u0065\u0078\u0074\u0020\u0074\u006f\u0020\u0027\u0077\u0027\u0020\u0077r\u0069\u0074\u0065\u0072");};
return int (_ddag ),nil ;};func (_cfeg *TextRegion )decodeIds ()(int64 ,error ){const _ddcf ="\u0064e\u0063\u006f\u0064\u0065\u0049\u0064s";if _cfeg .IsHuffmanEncoded {if _cfeg .SbHuffDS ==3{if _cfeg ._edeee ==nil {_ccaa :=0;if _cfeg .SbHuffFS ==3{_ccaa ++;
};var _dfee error ;_cfeg ._edeee ,_dfee =_cfeg .getUserTable (_ccaa );if _dfee !=nil {return 0,_g .Wrap (_dfee ,_ddcf ,"");};};return _cfeg ._edeee .Decode (_cfeg ._egcf );};_gcage ,_acff :=_ded .GetStandardTable (8+int (_cfeg .SbHuffDS ));if _acff !=nil {return 0,_g .Wrap (_acff ,_ddcf ,"");
};return _gcage .Decode (_cfeg ._egcf );};_edgdd ,_bffc :=_cfeg ._cdgg .DecodeInt (_cfeg ._gdga );if _bffc !=nil {return 0,_g .Wrap (_bffc ,_ddcf ,"\u0063\u0078\u0049\u0041\u0044\u0053");};return int64 (_edgdd ),nil ;};func (_gaegc *Header )readHeaderLength (_ddeb _de .StreamReader ,_ddfg int64 ){_gaegc .HeaderLength =_ddeb .StreamPosition ()-_ddfg ;
};func (_aafc *HalftoneRegion )GetRegionInfo ()*RegionSegment {return _aafc .RegionSegment };func (_cfff *Header )parse (_cddce Documenter ,_ebf _de .StreamReader ,_agcf int64 ,_agdg OrganizationType )(_aebf error ){const _fcgb ="\u0070\u0061\u0072s\u0065";
_ab .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u005b\u0050A\u0052\u0053\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _aebf !=nil {_ab .Log .Trace ("\u005b\u0053\u0045GM\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045R\u005d[\u0050A\u0052S\u0045\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_aebf );
}else {_ab .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052]\u005bP\u0041\u0052\u0053\u0045\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");};}();_ ,_aebf =_ebf .Seek (_agcf ,_bf .SeekStart );
if _aebf !=nil {return _g .Wrap (_aebf ,_fcgb ,"\u0073\u0065\u0065\u006b\u0020\u0073\u0074\u0061\u0072\u0074");};if _aebf =_cfff .readSegmentNumber (_ebf );_aebf !=nil {return _g .Wrap (_aebf ,_fcgb ,"");};if _aebf =_cfff .readHeaderFlags ();_aebf !=nil {return _g .Wrap (_aebf ,_fcgb ,"");
};var _ebfe uint64 ;_ebfe ,_aebf =_cfff .readNumberOfReferredToSegments (_ebf );if _aebf !=nil {return _g .Wrap (_aebf ,_fcgb ,"");};_cfff .RTSNumbers ,_aebf =_cfff .readReferredToSegmentNumbers (_ebf ,int (_ebfe ));if _aebf !=nil {return _g .Wrap (_aebf ,_fcgb ,"");
};_aebf =_cfff .readSegmentPageAssociation (_cddce ,_ebf ,_ebfe ,_cfff .RTSNumbers ...);if _aebf !=nil {return _g .Wrap (_aebf ,_fcgb ,"");};if _cfff .Type !=TEndOfFile {if _aebf =_cfff .readSegmentDataLength (_ebf );_aebf !=nil {return _g .Wrap (_aebf ,_fcgb ,"");
};};_cfff .readDataStartOffset (_ebf ,_agdg );_cfff .readHeaderLength (_ebf ,_agcf );_ab .Log .Trace ("\u0025\u0073",_cfff );return nil ;};func (_aegc *PatternDictionary )checkInput ()error {if _aegc .HdpHeight < 1||_aegc .HdpWidth < 1{return _ba .New ("in\u0076\u0061l\u0069\u0064\u0020\u0048\u0065\u0061\u0064\u0065\u0072 \u0056\u0061\u006c\u0075\u0065\u003a\u0020\u0057\u0069\u0064\u0074\u0068\u002f\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020g\u0072e\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020z\u0065\u0072o");
};if _aegc .IsMMREncoded {if _aegc .HDTemplate !=0{_ab .Log .Debug ("\u0076\u0061\u0072\u0069\u0061\u0062\u006c\u0065\u0020\u0048\u0044\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e \u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030");
};};return nil ;};func (_gc *GenericRefinementRegion )Init (header *Header ,r _de .StreamReader )error {_gc ._abdg =header ;_gc ._ef =r ;_gc .RegionInfo =NewRegionSegment (r );return _gc .parseHeader ();};type EndOfStripe struct{_abd _de .StreamReader ;
_cga int ;};func (_eagf *TextRegion )setCodingStatistics ()error {if _eagf ._ccfd ==nil {_eagf ._ccfd =_ga .NewStats (512,1);};if _eagf ._dcgdd ==nil {_eagf ._dcgdd =_ga .NewStats (512,1);};if _eagf ._gdga ==nil {_eagf ._gdga =_ga .NewStats (512,1);};if _eagf ._gbce ==nil {_eagf ._gbce =_ga .NewStats (512,1);
};if _eagf ._gceg ==nil {_eagf ._gceg =_ga .NewStats (512,1);};if _eagf ._becac ==nil {_eagf ._becac =_ga .NewStats (512,1);};if _eagf ._gddad ==nil {_eagf ._gddad =_ga .NewStats (512,1);};if _eagf ._bdac ==nil {_eagf ._bdac =_ga .NewStats (1<<uint (_eagf ._bdcc ),1);
};if _eagf ._abed ==nil {_eagf ._abed =_ga .NewStats (512,1);};if _eagf ._faa ==nil {_eagf ._faa =_ga .NewStats (512,1);};if _eagf ._cdgg ==nil {var _cdaac error ;_eagf ._cdgg ,_cdaac =_ga .New (_eagf ._egcf );if _cdaac !=nil {return _cdaac ;};};return nil ;
};func (_fad *GenericRegion )Size ()int {return _fad .RegionSegment .Size ()+1+2*len (_fad .GBAtX )};type GenericRefinementRegion struct{_ge templater ;_db templater ;_ef _de .StreamReader ;_abdg *Header ;RegionInfo *RegionSegment ;IsTPGROn bool ;TemplateID int8 ;
Template templater ;GrAtX []int8 ;GrAtY []int8 ;RegionBitmap *_cf .Bitmap ;ReferenceBitmap *_cf .Bitmap ;ReferenceDX int32 ;ReferenceDY int32 ;_ag *_ga .Decoder ;_cgg *_ga .DecoderStats ;_cd bool ;_def []bool ;};func (_dbeg *HalftoneRegion )grayScaleDecoding (_bbdg int )([][]int ,error ){var (_cfga []int8 ;
_aedg []int8 ;);if !_dbeg .IsMMREncoded {_cfga =make ([]int8 ,4);_aedg =make ([]int8 ,4);if _dbeg .HTemplate <=1{_cfga [0]=3;}else if _dbeg .HTemplate >=2{_cfga [0]=2;};_aedg [0]=-1;_cfga [1]=-3;_aedg [1]=-1;_cfga [2]=2;_aedg [2]=-2;_cfga [3]=-2;_aedg [3]=-2;
};_faec :=make ([]*_cf .Bitmap ,_bbdg );_gdacd :=NewGenericRegion (_dbeg ._ecc );_gdacd .setParametersMMR (_dbeg .IsMMREncoded ,_dbeg .DataOffset ,_dbeg .DataLength ,_dbeg .HGridHeight ,_dbeg .HGridWidth ,_dbeg .HTemplate ,false ,_dbeg .HSkipEnabled ,_cfga ,_aedg );
_ccab :=_bbdg -1;var _egdb error ;_faec [_ccab ],_egdb =_gdacd .GetRegionBitmap ();if _egdb !=nil {return nil ,_egdb ;};for _ccab > 0{_ccab --;_gdacd .Bitmap =nil ;_faec [_ccab ],_egdb =_gdacd .GetRegionBitmap ();if _egdb !=nil {return nil ,_egdb ;};if _egdb =_dbeg .combineGrayscalePlanes (_faec ,_ccab );
_egdb !=nil {return nil ,_egdb ;};};return _dbeg .computeGrayScalePlanes (_faec ,_bbdg );};func (_edde *GenericRegion )decodeTemplate0b (_edge ,_beaf ,_fcg int ,_cdd ,_efe int )(_cbgc error ){const _dbb ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0062";
var (_dbbb ,_fgg int ;_agfb ,_fbb int ;_ebbd byte ;_bcd int ;);if _edge >=1{_ebbd ,_cbgc =_edde .Bitmap .GetByte (_efe );if _cbgc !=nil {return _g .Wrap (_cbgc ,_dbb ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_agfb =int (_ebbd );};if _edge >=2{_ebbd ,_cbgc =_edde .Bitmap .GetByte (_efe -_edde .Bitmap .RowStride );
if _cbgc !=nil {return _g .Wrap (_cbgc ,_dbb ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_fbb =int (_ebbd )<<6;};_dbbb =(_agfb &0xf0)|(_fbb &0x3800);for _acf :=0;_acf < _fcg ;_acf =_bcd {var (_fdad byte ;_bcbb int ;);_bcd =_acf +8;if _dbd :=_beaf -_acf ;
_dbd > 8{_bcbb =8;}else {_bcbb =_dbd ;};if _edge > 0{_agfb <<=8;if _bcd < _beaf {_ebbd ,_cbgc =_edde .Bitmap .GetByte (_efe +1);if _cbgc !=nil {return _g .Wrap (_cbgc ,_dbb ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_agfb |=int (_ebbd );};};
if _edge > 1{_fbb <<=8;if _bcd < _beaf {_ebbd ,_cbgc =_edde .Bitmap .GetByte (_efe -_edde .Bitmap .RowStride +1);if _cbgc !=nil {return _g .Wrap (_cbgc ,_dbb ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_fbb |=int (_ebbd )<<6;};};for _gecc :=0;
_gecc < _bcbb ;_gecc ++{_fgb :=uint (7-_gecc );if _edde ._adg {_fgg =_edde .overrideAtTemplate0b (_dbbb ,_acf +_gecc ,_edge ,int (_fdad ),_gecc ,int (_fgb ));_edde ._degg .SetIndex (int32 (_fgg ));}else {_edde ._degg .SetIndex (int32 (_dbbb ));};var _cgac int ;
_cgac ,_cbgc =_edde ._edc .DecodeBit (_edde ._degg );if _cbgc !=nil {return _g .Wrap (_cbgc ,_dbb ,"");};_fdad |=byte (_cgac <<_fgb );_dbbb =((_dbbb &0x7bf7)<<1)|_cgac |((_agfb >>_fgb )&0x10)|((_fbb >>_fgb )&0x800);};if _aba :=_edde .Bitmap .SetByte (_cdd ,_fdad );
_aba !=nil {return _g .Wrap (_aba ,_dbb ,"");};_cdd ++;_efe ++;};return nil ;};func (_faaa *TextRegion )readHuffmanFlags ()error {var (_egab int ;_ggcg uint64 ;_adce error ;);_ ,_adce =_faaa ._egcf .ReadBit ();if _adce !=nil {return _adce ;};_egab ,_adce =_faaa ._egcf .ReadBit ();
if _adce !=nil {return _adce ;};_faaa .SbHuffRSize =int8 (_egab );_ggcg ,_adce =_faaa ._egcf .ReadBits (2);if _adce !=nil {return _adce ;};_faaa .SbHuffRDY =int8 (_ggcg )&0xf;_ggcg ,_adce =_faaa ._egcf .ReadBits (2);if _adce !=nil {return _adce ;};_faaa .SbHuffRDX =int8 (_ggcg )&0xf;
_ggcg ,_adce =_faaa ._egcf .ReadBits (2);if _adce !=nil {return _adce ;};_faaa .SbHuffRDHeight =int8 (_ggcg )&0xf;_ggcg ,_adce =_faaa ._egcf .ReadBits (2);if _adce !=nil {return _adce ;};_faaa .SbHuffRDWidth =int8 (_ggcg )&0xf;_ggcg ,_adce =_faaa ._egcf .ReadBits (2);
if _adce !=nil {return _adce ;};_faaa .SbHuffDT =int8 (_ggcg )&0xf;_ggcg ,_adce =_faaa ._egcf .ReadBits (2);if _adce !=nil {return _adce ;};_faaa .SbHuffDS =int8 (_ggcg )&0xf;_ggcg ,_adce =_faaa ._egcf .ReadBits (2);if _adce !=nil {return _adce ;};_faaa .SbHuffFS =int8 (_ggcg )&0xf;
return nil ;};func (_bbb *PatternDictionary )GetDictionary ()([]*_cf .Bitmap ,error ){if _bbb .Patterns !=nil {return _bbb .Patterns ,nil ;};if !_bbb .IsMMREncoded {_bbb .setGbAtPixels ();};_dagb :=NewGenericRegion (_bbb ._ccd );_dagb .setParametersMMR (_bbb .IsMMREncoded ,_bbb .DataOffset ,_bbb .DataLength ,uint32 (_bbb .HdpHeight ),(_bbb .GrayMax +1)*uint32 (_bbb .HdpWidth ),_bbb .HDTemplate ,false ,false ,_bbb .GBAtX ,_bbb .GBAtY );
_abdf ,_agge :=_dagb .GetRegionBitmap ();if _agge !=nil {return nil ,_agge ;};if _agge =_bbb .extractPatterns (_abdf );_agge !=nil {return nil ,_agge ;};return _bbb .Patterns ,nil ;};var (_ Regioner =&TextRegion {};_ Segmenter =&TextRegion {};);func (_dda *SymbolDictionary )Encode (w _de .BinaryWriter )(_efab int ,_bedd error ){const _dbefe ="\u0053\u0079\u006dbo\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0045\u006e\u0063\u006f\u0064\u0065";
if _dda ==nil {return 0,_g .Error (_dbefe ,"\u0073\u0079m\u0062\u006f\u006c\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066in\u0065\u0064");};if _efab ,_bedd =_dda .encodeFlags (w );_bedd !=nil {return _efab ,_g .Wrap (_bedd ,_dbefe ,"");
};_bebb ,_bedd :=_dda .encodeATFlags (w );if _bedd !=nil {return _efab ,_g .Wrap (_bedd ,_dbefe ,"");};_efab +=_bebb ;if _bebb ,_bedd =_dda .encodeRefinementATFlags (w );_bedd !=nil {return _efab ,_g .Wrap (_bedd ,_dbefe ,"");};_efab +=_bebb ;if _bebb ,_bedd =_dda .encodeNumSyms (w );
_bedd !=nil {return _efab ,_g .Wrap (_bedd ,_dbefe ,"");};_efab +=_bebb ;if _bebb ,_bedd =_dda .encodeSymbols (w );_bedd !=nil {return _efab ,_g .Wrap (_bedd ,_dbefe ,"");};_efab +=_bebb ;return _efab ,nil ;};func (_gba *GenericRegion )setOverrideFlag (_ggf int ){_gba .GBAtOverride [_ggf ]=true ;
_gba ._adg =true ;};func (_gfgcb *TextRegion )decodeSymbolInstances ()error {_dbcb ,_cbec :=_gfgcb .decodeStripT ();if _cbec !=nil {return _cbec ;};var (_fdgb int64 ;_edgef uint32 ;);for _edgef < _gfgcb .NumberOfSymbolInstances {_cbga ,_dceb :=_gfgcb .decodeDT ();
if _dceb !=nil {return _dceb ;};_dbcb +=_cbga ;var _aabeb int64 ;_eafg :=true ;_gfgcb ._fcffg =0;for {if _eafg {_aabeb ,_dceb =_gfgcb .decodeDfs ();if _dceb !=nil {return _dceb ;};_fdgb +=_aabeb ;_gfgcb ._fcffg =_fdgb ;_eafg =false ;}else {_cabac ,_dee :=_gfgcb .decodeIds ();
if _fd .Is (_dee ,_ff .ErrOOB ){break ;};if _dee !=nil {return _dee ;};if _edgef >=_gfgcb .NumberOfSymbolInstances {break ;};_gfgcb ._fcffg +=_cabac +int64 (_gfgcb .SbDsOffset );};_efea ,_ccga :=_gfgcb .decodeCurrentT ();if _ccga !=nil {return _ccga ;};
_geaab :=_dbcb +_efea ;_afeg ,_ccga :=_gfgcb .decodeID ();if _ccga !=nil {return _ccga ;};_bafc ,_ccga :=_gfgcb .decodeRI ();if _ccga !=nil {return _ccga ;};_fcge ,_ccga :=_gfgcb .decodeIb (_bafc ,_afeg );if _ccga !=nil {return _ccga ;};if _ccga =_gfgcb .blit (_fcge ,_geaab );
_ccga !=nil {return _ccga ;};_edgef ++;};};return nil ;};func (_bgfc *TextRegion )checkInput ()error {const _gdge ="\u0063\u0068\u0065\u0063\u006b\u0049\u006e\u0070\u0075\u0074";if !_bgfc .UseRefinement {if _bgfc .SbrTemplate !=0{_ab .Log .Debug ("\u0053\u0062\u0072Te\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");
_bgfc .SbrTemplate =0;};};if _bgfc .SbHuffFS ==2||_bgfc .SbHuffRDWidth ==2||_bgfc .SbHuffRDHeight ==2||_bgfc .SbHuffRDX ==2||_bgfc .SbHuffRDY ==2{return _g .Error (_gdge ,"h\u0075\u0066\u0066\u006d\u0061\u006e \u0066\u006c\u0061\u0067\u0020\u0076a\u006c\u0075\u0065\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074e\u0064");
};if !_bgfc .UseRefinement {if _bgfc .SbHuffRSize !=0{_ab .Log .Debug ("\u0053\u0062\u0048uf\u0066\u0052\u0053\u0069\u007a\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_bgfc .SbHuffRSize =0;};if _bgfc .SbHuffRDY !=0{_ab .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044Y\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");
_bgfc .SbHuffRDY =0;};if _bgfc .SbHuffRDX !=0{_ab .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044X\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_bgfc .SbHuffRDX =0;};if _bgfc .SbHuffRDWidth !=0{_ab .Log .Debug ("\u0053b\u0048\u0075\u0066\u0066R\u0044\u0057\u0069\u0064\u0074h\u0020s\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u00200");
_bgfc .SbHuffRDWidth =0;};if _bgfc .SbHuffRDHeight !=0{_ab .Log .Debug ("\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069g\u0068\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0030");_bgfc .SbHuffRDHeight =0;};};return nil ;
};func (_cca *HalftoneRegion )computeSegmentDataStructure ()error {_cca .DataOffset =_cca ._ecc .StreamPosition ();_cca .DataHeaderLength =_cca .DataOffset -_cca .DataHeaderOffset ;_cca .DataLength =int64 (_cca ._ecc .Length ())-_cca .DataHeaderLength ;
return nil ;};func (_cde *Header )writeSegmentNumber (_cbgca _de .BinaryWriter )(_abdd int ,_ddbd error ){_agbbb :=make ([]byte ,4);_e .BigEndian .PutUint32 (_agbbb ,_cde .SegmentNumber );if _abdd ,_ddbd =_cbgca .Write (_agbbb );_ddbd !=nil {return 0,_g .Wrap (_ddbd ,"\u0048e\u0061\u0064\u0065\u0072.\u0077\u0072\u0069\u0074\u0065S\u0065g\u006de\u006e\u0074\u004e\u0075\u006d\u0062\u0065r","");
};return _abdd ,nil ;};type TableSegment struct{_bcbba _de .StreamReader ;_dafc int32 ;_adge int32 ;_cffbc int32 ;_bgec int32 ;_ecefg int32 ;};func (_ecgd *Header )readDataStartOffset (_ebg _de .StreamReader ,_gdfg OrganizationType ){if _gdfg ==OSequential {_ecgd .SegmentDataStartOffset =uint64 (_ebg .StreamPosition ());
};};func (_ebged *TextRegion )decodeID ()(int64 ,error ){if _ebged .IsHuffmanEncoded {if _ebged ._adba ==nil {_gabgb ,_efgf :=_ebged ._egcf .ReadBits (byte (_ebged ._bdcc ));return int64 (_gabgb ),_efgf ;};return _ebged ._adba .Decode (_ebged ._egcf );
};return _ebged ._cdgg .DecodeIAID (uint64 (_ebged ._bdcc ),_ebged ._bdac );};func (_aggff *SymbolDictionary )encodeNumSyms (_ffac _de .BinaryWriter )(_ecaf int ,_ffdcb error ){const _bfafd ="\u0065\u006e\u0063\u006f\u0064\u0065\u004e\u0075\u006d\u0053\u0079\u006d\u0073";
_gffc :=make ([]byte ,4);_e .BigEndian .PutUint32 (_gffc ,_aggff .NumberOfExportedSymbols );if _ecaf ,_ffdcb =_ffac .Write (_gffc );_ffdcb !=nil {return _ecaf ,_g .Wrap (_ffdcb ,_bfafd ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};_e .BigEndian .PutUint32 (_gffc ,_aggff .NumberOfNewSymbols );_dfdf ,_ffdcb :=_ffac .Write (_gffc );if _ffdcb !=nil {return _ecaf ,_g .Wrap (_ffdcb ,_bfafd ,"n\u0065\u0077\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};return _ecaf +_dfdf ,nil ;
};func (_gdec *Header )writeSegmentPageAssociation (_fgf _de .BinaryWriter )(_daaa int ,_gage error ){const _fee ="w\u0072\u0069\u0074\u0065\u0053\u0065g\u006d\u0065\u006e\u0074\u0050\u0061\u0067\u0065\u0041s\u0073\u006f\u0063i\u0061t\u0069\u006f\u006e";
if _gdec .pageSize ()!=4{if _gage =_fgf .WriteByte (byte (_gdec .PageAssociation ));_gage !=nil {return 0,_g .Wrap (_gage ,_fee ,"\u0070\u0061\u0067\u0065\u0053\u0069\u007a\u0065\u0020\u0021\u003d\u0020\u0034");};return 1,nil ;};_aeec :=make ([]byte ,4);
_e .BigEndian .PutUint32 (_aeec ,uint32 (_gdec .PageAssociation ));if _daaa ,_gage =_fgf .Write (_aeec );_gage !=nil {return 0,_g .Wrap (_gage ,_fee ,"\u0034 \u0062y\u0074\u0065\u0020\u0070\u0061g\u0065\u0020n\u0075\u006d\u0062\u0065\u0072");};return _daaa ,nil ;
};func (_dgae *TableSegment )HtHigh ()int32 {return _dgae ._ecefg };func (_beeg *TextRegion )Init (header *Header ,r _de .StreamReader )error {_beeg .Header =header ;_beeg ._egcf =r ;_beeg .RegionInfo =NewRegionSegment (_beeg ._egcf );return _beeg .parseHeader ();
};func (_aegd *PageInformationSegment )readCombinationOperatorOverrideAllowed ()error {_cabe ,_ecec :=_aegd ._ggc .ReadBit ();if _ecec !=nil {return _ecec ;};if _cabe ==1{_aegd ._beea =true ;};return nil ;};func (_afca *TextRegion )InitEncode (globalSymbolsMap ,localSymbolsMap map[int ]int ,comps []int ,inLL *_cf .Points ,symbols *_cf .Bitmaps ,classIDs *_eg .IntSlice ,boxes *_cf .Boxes ,width ,height ,symBits int ){_afca .RegionInfo =&RegionSegment {BitmapWidth :uint32 (width ),BitmapHeight :uint32 (height )};
_afca ._edbc =globalSymbolsMap ;_afca ._fcda =localSymbolsMap ;_afca ._cefag =comps ;_afca ._gcaf =inLL ;_afca ._dgbef =symbols ;_afca ._bcgb =classIDs ;_afca ._aceb =boxes ;_afca ._febf =symBits ;};func (_geeag *HalftoneRegion )computeY (_acd ,_bfec int )int {return _geeag .shiftAndFill (int (_geeag .HGridY )+_acd *int (_geeag .HRegionX )-_bfec *int (_geeag .HRegionY ));
};func (_eeea *TableSegment )HtOOB ()int32 {return _eeea ._dafc };func (_bgbb *TextRegion )Encode (w _de .BinaryWriter )(_bdaa int ,_cgecf error ){const _acag ="\u0054\u0065\u0078\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u002e\u0045n\u0063\u006f\u0064\u0065";
if _bdaa ,_cgecf =_bgbb .RegionInfo .Encode (w );_cgecf !=nil {return _bdaa ,_g .Wrap (_cgecf ,_acag ,"");};var _agfg int ;if _agfg ,_cgecf =_bgbb .encodeFlags (w );_cgecf !=nil {return _bdaa ,_g .Wrap (_cgecf ,_acag ,"");};_bdaa +=_agfg ;if _agfg ,_cgecf =_bgbb .encodeSymbols (w );
_cgecf !=nil {return _bdaa ,_g .Wrap (_cgecf ,_acag ,"");};_bdaa +=_agfg ;return _bdaa ,nil ;};func (_ffcd *GenericRefinementRegion )String ()string {_efbb :=&_cg .Builder {};_efbb .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");
_efbb .WriteString (_ffcd .RegionInfo .String ()+"\u000a");_efbb .WriteString (_d .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0052\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_ffcd .IsTPGROn ));_efbb .WriteString (_d .Sprintf ("\u0009-\u0020T\u0065\u006d\u0070\u006c\u0061t\u0065\u0049D\u003a\u0020\u0025\u0076\u000a",_ffcd .TemplateID ));
_efbb .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_ffcd .GrAtX ));_efbb .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_ffcd .GrAtY ));
_efbb .WriteString (_d .Sprintf ("\u0009-\u0020R\u0065\u0066\u0065\u0072\u0065n\u0063\u0065D\u0058\u0020\u0025\u0076\u000a",_ffcd .ReferenceDX ));_efbb .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0052ef\u0065\u0072\u0065\u006e\u0063\u0044\u0065\u0059\u003a\u0020\u0025\u0076\u000a",_ffcd .ReferenceDY ));
return _efbb .String ();};func (_effab *PageInformationSegment )readRequiresAuxiliaryBuffer ()error {_fbbda ,_egac :=_effab ._ggc .ReadBit ();if _egac !=nil {return _egac ;};if _fbbda ==1{_effab ._aeda =true ;};return nil ;};func (_ccac *SymbolDictionary )setSymbolsArray ()error {if _ccac ._gcg ==nil {if _cdff :=_ccac .retrieveImportSymbols ();
_cdff !=nil {return _cdff ;};};if _ccac ._becb ==nil {_ccac ._becb =append (_ccac ._becb ,_ccac ._gcg ...);};return nil ;};func (_aaee *PatternDictionary )Init (h *Header ,r _de .StreamReader )error {_aaee ._ccd =r ;return _aaee .parseHeader ();};func (_gade *SymbolDictionary )readAtPixels (_ffcf int )error {_gade .SdATX =make ([]int8 ,_ffcf );
_gade .SdATY =make ([]int8 ,_ffcf );var (_adb byte ;_fdfa error ;);for _bacf :=0;_bacf < _ffcf ;_bacf ++{_adb ,_fdfa =_gade ._eegc .ReadByte ();if _fdfa !=nil {return _fdfa ;};_gade .SdATX [_bacf ]=int8 (_adb );_adb ,_fdfa =_gade ._eegc .ReadByte ();if _fdfa !=nil {return _fdfa ;
};_gade .SdATY [_bacf ]=int8 (_adb );};return nil ;};func (_agce *GenericRefinementRegion )parseHeader ()(_fag error ){_ab .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0048e\u0061\u0064e\u0072\u002e\u002e\u002e");
_ccf :=_a .Now ();defer func (){if _fag ==nil {_ab .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045G\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020h\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0069\u006e\u0069\u0073\u0068id\u0020\u0069\u006e\u003a\u0020\u0025\u0064\u0020\u006e\u0073",_a .Since (_ccf ).Nanoseconds ());
}else {_ab .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0068\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0073",_fag );
};}();if _fag =_agce .RegionInfo .parseHeader ();_fag !=nil {return _fag ;};_ ,_fag =_agce ._ef .ReadBits (6);if _fag !=nil {return _fag ;};_agce .IsTPGROn ,_fag =_agce ._ef .ReadBool ();if _fag !=nil {return _fag ;};var _cdb int ;_cdb ,_fag =_agce ._ef .ReadBit ();
if _fag !=nil {return _fag ;};_agce .TemplateID =int8 (_cdb );switch _agce .TemplateID {case 0:_agce .Template =_agce ._ge ;if _fag =_agce .readAtPixels ();_fag !=nil {return ;};case 1:_agce .Template =_agce ._db ;};return nil ;};func (_ebfa *Header )writeReferredToCount (_fgaag _de .BinaryWriter )(_daa int ,_cfaa error ){const _gdda ="w\u0072i\u0074\u0065\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0043ou\u006e\u0074";
_ebfa .RTSNumbers =make ([]int ,len (_ebfa .RTSegments ));for _bbc ,_eef :=range _ebfa .RTSegments {_ebfa .RTSNumbers [_bbc ]=int (_eef .SegmentNumber );};if len (_ebfa .RTSNumbers )<=4{var _ead byte ;if len (_ebfa .RetainBits )>=1{_ead =_ebfa .RetainBits [0];
};_ead |=byte (len (_ebfa .RTSNumbers ))<<5;if _cfaa =_fgaag .WriteByte (_ead );_cfaa !=nil {return 0,_g .Wrap (_cfaa ,_gdda ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return 1,nil ;};_abgf :=uint32 (len (_ebfa .RTSNumbers ));
_cabb :=make ([]byte ,4+_eg .Ceil (len (_ebfa .RTSNumbers )+1,8));_abgf |=0x7<<29;_e .BigEndian .PutUint32 (_cabb ,_abgf );copy (_cabb [1:],_ebfa .RetainBits );_daa ,_cfaa =_fgaag .Write (_cabb );if _cfaa !=nil {return 0,_g .Wrap (_cfaa ,_gdda ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");
};return _daa ,nil ;};type PatternDictionary struct{_ccd _de .StreamReader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;GBAtX []int8 ;GBAtY []int8 ;IsMMREncoded bool ;HDTemplate byte ;HdpWidth byte ;HdpHeight byte ;
Patterns []*_cf .Bitmap ;GrayMax uint32 ;};func (_edgd *SymbolDictionary )retrieveImportSymbols ()error {for _ ,_cffg :=range _edgd .Header .RTSegments {if _cffg .Type ==0{_efdf ,_gfecb :=_cffg .GetSegmentData ();if _gfecb !=nil {return _gfecb ;};_bgc ,_bdeg :=_efdf .(*SymbolDictionary );
if !_bdeg {return _d .Errorf ("\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0044\u0061\u0074a\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u003a\u0020%\u0054",_efdf );
};_gadc ,_gfecb :=_bgc .GetDictionary ();if _gfecb !=nil {return _d .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064 \u0073\u0065\u0067m\u0065\u006e\u0074 \u0077\u0069t\u0068\u0020\u0069\u006e\u0064\u0065x\u003a %\u0064\u0020\u0067\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0073",_cffg .SegmentNumber ,_gfecb .Error ());
};_edgd ._gcg =append (_edgd ._gcg ,_gadc ...);_edgd ._cbff +=_bgc .NumberOfExportedSymbols ;};};return nil ;};func (_fbd *Header )writeFlags (_geaa _de .BinaryWriter )(_dgdfa error ){const _cabf ="\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065F\u006c\u0061\u0067\u0073";
_gada :=byte (_fbd .Type );if _dgdfa =_geaa .WriteByte (_gada );_dgdfa !=nil {return _g .Wrap (_dgdfa ,_cabf ,"\u0077\u0072\u0069ti\u006e\u0067\u0020\u0073\u0065\u0067\u006d\u0065\u006et\u0020t\u0079p\u0065 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};if !_fbd .RetainFlag &&!_fbd .PageAssociationFieldSize {return nil ;};if _dgdfa =_geaa .SkipBits (-8);_dgdfa !=nil {return _g .Wrap (_dgdfa ,_cabf ,"\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0062\u0061\u0063\u006b\u0020\u0074\u0068\u0065\u0020\u0062\u0069\u0074\u0073\u0020\u0066\u0061il\u0065\u0064");
};var _bbdc int ;if _fbd .RetainFlag {_bbdc =1;};if _dgdfa =_geaa .WriteBit (_bbdc );_dgdfa !=nil {return _g .Wrap (_dgdfa ,_cabf ,"\u0072\u0065\u0074\u0061in\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067\u0073");};_bbdc =0;if _fbd .PageAssociationFieldSize {_bbdc =1;
};if _dgdfa =_geaa .WriteBit (_bbdc );_dgdfa !=nil {return _g .Wrap (_dgdfa ,_cabf ,"p\u0061\u0067\u0065\u0020as\u0073o\u0063\u0069\u0061\u0074\u0069o\u006e\u0020\u0066\u006c\u0061\u0067");};_geaa .FinishByte ();return nil ;};func (_agcaa *Header )writeReferredToSegments (_bee _de .BinaryWriter )(_dgba int ,_bcf error ){const _agbf ="\u0077\u0072\u0069te\u0052\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
var (_ffdb uint16 ;_ggdg uint32 ;);_edbe :=_agcaa .referenceSize ();_fbc :=1;_bde :=make ([]byte ,_edbe );for _ ,_ecgc :=range _agcaa .RTSNumbers {switch _edbe {case 4:_ggdg =uint32 (_ecgc );_e .BigEndian .PutUint32 (_bde ,_ggdg );_fbc ,_bcf =_bee .Write (_bde );
if _bcf !=nil {return 0,_g .Wrap (_bcf ,_agbf ,"u\u0069\u006e\u0074\u0033\u0032\u0020\u0073\u0069\u007a\u0065");};case 2:_ffdb =uint16 (_ecgc );_e .BigEndian .PutUint16 (_bde ,_ffdb );_fbc ,_bcf =_bee .Write (_bde );if _bcf !=nil {return 0,_g .Wrap (_bcf ,_agbf ,"\u0075\u0069\u006e\u0074\u0031\u0036");
};default:if _bcf =_bee .WriteByte (byte (_ecgc ));_bcf !=nil {return 0,_g .Wrap (_bcf ,_agbf ,"\u0075\u0069\u006et\u0038");};};_dgba +=_fbc ;};return _dgba ,nil ;};func (_cggf *PageInformationSegment )checkInput ()error {if _cggf .PageBMHeight ==_f .MaxInt32 {if !_cggf .IsStripe {_ab .Log .Debug ("P\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0053\u0065\u0067me\u006e\u0074\u002e\u0049s\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0073\u0068ou\u006c\u0064 \u0062\u0065\u0020\u0074\u0072\u0075\u0065\u002e");
};};return nil ;};func (_agef *PatternDictionary )readGrayMax ()error {_ffdc ,_aebg :=_agef ._ccd .ReadBits (32);if _aebg !=nil {return _aebg ;};_agef .GrayMax =uint32 (_ffdc &_f .MaxUint32 );return nil ;};func (_cfgd *PatternDictionary )parseHeader ()error {_ab .Log .Trace ("\u005b\u0050\u0041\u0054\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054I\u004f\u004e\u0041\u0052\u0059\u005d[\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d\u0020b\u0065\u0067\u0069\u006e");
defer func (){_ab .Log .Trace ("\u005b\u0050\u0041T\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u005b\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
}();_ ,_aaeg :=_cfgd ._ccd .ReadBits (5);if _aaeg !=nil {return _aaeg ;};if _aaeg =_cfgd .readTemplate ();_aaeg !=nil {return _aaeg ;};if _aaeg =_cfgd .readIsMMREncoded ();_aaeg !=nil {return _aaeg ;};if _aaeg =_cfgd .readPatternWidthAndHeight ();_aaeg !=nil {return _aaeg ;
};if _aaeg =_cfgd .readGrayMax ();_aaeg !=nil {return _aaeg ;};if _aaeg =_cfgd .computeSegmentDataStructure ();_aaeg !=nil {return _aaeg ;};return _cfgd .checkInput ();};func (_fdbc *Header )String ()string {_aecf :=&_cg .Builder {};_aecf .WriteString ("\u000a[\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045A\u0044\u0045\u0052\u005d\u000a");
_aecf .WriteString (_d .Sprintf ("\t\u002d\u0020\u0053\u0065gm\u0065n\u0074\u004e\u0075\u006d\u0062e\u0072\u003a\u0020\u0025\u0076\u000a",_fdbc .SegmentNumber ));_aecf .WriteString (_d .Sprintf ("\u0009\u002d\u0020T\u0079\u0070\u0065\u003a\u0020\u0025\u0076\u000a",_fdbc .Type ));
_aecf .WriteString (_d .Sprintf ("\u0009-\u0020R\u0065\u0074\u0061\u0069\u006eF\u006c\u0061g\u003a\u0020\u0025\u0076\u000a",_fdbc .RetainFlag ));_aecf .WriteString (_d .Sprintf ("\u0009\u002d\u0020Pa\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_fdbc .PageAssociation ));
_aecf .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0050\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074i\u006fn\u0046\u0069\u0065\u006c\u0064\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_fdbc .PageAssociationFieldSize ));
_aecf .WriteString ("\u0009-\u0020R\u0054\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u0053\u003a\u000a");for _ ,_acdg :=range _fdbc .RTSNumbers {_aecf .WriteString (_d .Sprintf ("\u0009\t\u002d\u0020\u0025\u0064\u000a",_acdg ));};_aecf .WriteString (_d .Sprintf ("\t\u002d \u0048\u0065\u0061\u0064\u0065\u0072\u004c\u0065n\u0067\u0074\u0068\u003a %\u0076\u000a",_fdbc .HeaderLength ));
_aecf .WriteString (_d .Sprintf ("\u0009-\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061L\u0065n\u0067\u0074\u0068\u003a\u0020\u0025\u0076\n",_fdbc .SegmentDataLength ));_aecf .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074D\u0061\u0074\u0061\u0053\u0074\u0061\u0072t\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0076\u000a",_fdbc .SegmentDataStartOffset ));
return _aecf .String ();};func (_gbd *GenericRegion )decodeTemplate2 (_bfd ,_degd ,_aag int ,_aaef ,_ecg int )(_aagb error ){const _ggd ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0032";var (_fgd ,_ggb int ;_efgc ,_gedc int ;
_agg byte ;_ebag ,_gecf int ;);if _bfd >=1{_agg ,_aagb =_gbd .Bitmap .GetByte (_ecg );if _aagb !=nil {return _g .Wrap (_aagb ,_ggd ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0031");};_efgc =int (_agg );};if _bfd >=2{_agg ,_aagb =_gbd .Bitmap .GetByte (_ecg -_gbd .Bitmap .RowStride );
if _aagb !=nil {return _g .Wrap (_aagb ,_ggd ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0032");};_gedc =int (_agg )<<4;};_fgd =(_efgc >>3&0x7c)|(_gedc >>3&0x380);for _bgf :=0;_bgf < _aag ;_bgf =_ebag {var (_egfb byte ;
_dae int ;);_ebag =_bgf +8;if _dacc :=_degd -_bgf ;_dacc > 8{_dae =8;}else {_dae =_dacc ;};if _bfd > 0{_efgc <<=8;if _ebag < _degd {_agg ,_aagb =_gbd .Bitmap .GetByte (_ecg +1);if _aagb !=nil {return _g .Wrap (_aagb ,_ggd ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0030");
};_efgc |=int (_agg );};};if _bfd > 1{_gedc <<=8;if _ebag < _degd {_agg ,_aagb =_gbd .Bitmap .GetByte (_ecg -_gbd .Bitmap .RowStride +1);if _aagb !=nil {return _g .Wrap (_aagb ,_ggd ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0031");
};_gedc |=int (_agg )<<4;};};for _gfgb :=0;_gfgb < _dae ;_gfgb ++{_ecff :=uint (10-_gfgb );if _gbd ._adg {_ggb =_gbd .overrideAtTemplate2 (_fgd ,_bgf +_gfgb ,_bfd ,int (_egfb ),_gfgb );_gbd ._degg .SetIndex (int32 (_ggb ));}else {_gbd ._degg .SetIndex (int32 (_fgd ));
};_gecf ,_aagb =_gbd ._edc .DecodeBit (_gbd ._degg );if _aagb !=nil {return _g .Wrap (_aagb ,_ggd ,"");};_egfb |=byte (_gecf <<uint (7-_gfgb ));_fgd =((_fgd &0x1bd)<<1)|_gecf |((_efgc >>_ecff )&0x4)|((_gedc >>_ecff )&0x80);};if _gaea :=_gbd .Bitmap .SetByte (_aaef ,_egfb );
_gaea !=nil {return _g .Wrap (_gaea ,_ggd ,"");};_aaef ++;_ecg ++;};return nil ;};func (_aabe *PageInformationSegment )Size ()int {return 19};func (_ggfdd *TextRegion )readRegionFlags ()error {var (_bfcda int ;_fgcc uint64 ;_feeg error ;);_bfcda ,_feeg =_ggfdd ._egcf .ReadBit ();
if _feeg !=nil {return _feeg ;};_ggfdd .SbrTemplate =int8 (_bfcda );_fgcc ,_feeg =_ggfdd ._egcf .ReadBits (5);if _feeg !=nil {return _feeg ;};_ggfdd .SbDsOffset =int8 (_fgcc );if _ggfdd .SbDsOffset > 0x0f{_ggfdd .SbDsOffset -=0x20;};_bfcda ,_feeg =_ggfdd ._egcf .ReadBit ();
if _feeg !=nil {return _feeg ;};_ggfdd .DefaultPixel =int8 (_bfcda );_fgcc ,_feeg =_ggfdd ._egcf .ReadBits (2);if _feeg !=nil {return _feeg ;};_ggfdd .CombinationOperator =_cf .CombinationOperator (int (_fgcc )&0x3);_bfcda ,_feeg =_ggfdd ._egcf .ReadBit ();
if _feeg !=nil {return _feeg ;};_ggfdd .IsTransposed =int8 (_bfcda );_fgcc ,_feeg =_ggfdd ._egcf .ReadBits (2);if _feeg !=nil {return _feeg ;};_ggfdd .ReferenceCorner =int16 (_fgcc )&0x3;_fgcc ,_feeg =_ggfdd ._egcf .ReadBits (2);if _feeg !=nil {return _feeg ;
};_ggfdd .LogSBStrips =int16 (_fgcc )&0x3;_ggfdd .SbStrips =1<<uint (_ggfdd .LogSBStrips );_bfcda ,_feeg =_ggfdd ._egcf .ReadBit ();if _feeg !=nil {return _feeg ;};if _bfcda ==1{_ggfdd .UseRefinement =true ;};_bfcda ,_feeg =_ggfdd ._egcf .ReadBit ();if _feeg !=nil {return _feeg ;
};if _bfcda ==1{_ggfdd .IsHuffmanEncoded =true ;};return nil ;};func (_ecfbb *TextRegion )decodeRdw ()(int64 ,error ){const _aeba ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064w";if _ecfbb .IsHuffmanEncoded {if _ecfbb .SbHuffRDWidth ==3{if _ecfbb ._eafcd ==nil {var (_gacd int ;
_ecfeb error ;);if _ecfbb .SbHuffFS ==3{_gacd ++;};if _ecfbb .SbHuffDS ==3{_gacd ++;};if _ecfbb .SbHuffDT ==3{_gacd ++;};_ecfbb ._eafcd ,_ecfeb =_ecfbb .getUserTable (_gacd );if _ecfeb !=nil {return 0,_g .Wrap (_ecfeb ,_aeba ,"");};};return _ecfbb ._eafcd .Decode (_ecfbb ._egcf );
};_cdaa ,_agcfg :=_ded .GetStandardTable (14+int (_ecfbb .SbHuffRDWidth ));if _agcfg !=nil {return 0,_g .Wrap (_agcfg ,_aeba ,"");};return _cdaa .Decode (_ecfbb ._egcf );};_ggfe ,_fgfe :=_ecfbb ._cdgg .DecodeInt (_ecfbb ._becac );if _fgfe !=nil {return 0,_g .Wrap (_fgfe ,_aeba ,"");
};return int64 (_ggfe ),nil ;};func (_dgfg *TextRegion )encodeFlags (_bcddf _de .BinaryWriter )(_aeac int ,_cfea error ){const _ccae ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _cfea =_bcddf .WriteBit (int (_dgfg .SbrTemplate ));
_cfea !=nil {return _aeac ,_g .Wrap (_cfea ,_ccae ,"s\u0062\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};if _ ,_cfea =_bcddf .WriteBits (uint64 (_dgfg .SbDsOffset ),5);_cfea !=nil {return _aeac ,_g .Wrap (_cfea ,_ccae ,"\u0073\u0062\u0044\u0073\u004f\u0066\u0066\u0073\u0065\u0074");
};if _cfea =_bcddf .WriteBit (int (_dgfg .DefaultPixel ));_cfea !=nil {return _aeac ,_g .Wrap (_cfea ,_ccae ,"\u0044\u0065\u0066a\u0075\u006c\u0074\u0050\u0069\u0078\u0065\u006c");};if _ ,_cfea =_bcddf .WriteBits (uint64 (_dgfg .CombinationOperator ),2);
_cfea !=nil {return _aeac ,_g .Wrap (_cfea ,_ccae ,"\u0043\u006f\u006d\u0062in\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072");};if _cfea =_bcddf .WriteBit (int (_dgfg .IsTransposed ));_cfea !=nil {return _aeac ,_g .Wrap (_cfea ,_ccae ,"\u0069\u0073\u0020\u0074\u0072\u0061\u006e\u0073\u0070\u006f\u0073\u0065\u0064");
};if _ ,_cfea =_bcddf .WriteBits (uint64 (_dgfg .ReferenceCorner ),2);_cfea !=nil {return _aeac ,_g .Wrap (_cfea ,_ccae ,"\u0072\u0065f\u0065\u0072\u0065n\u0063\u0065\u0020\u0063\u006f\u0072\u006e\u0065\u0072");};if _ ,_cfea =_bcddf .WriteBits (uint64 (_dgfg .LogSBStrips ),2);
_cfea !=nil {return _aeac ,_g .Wrap (_cfea ,_ccae ,"L\u006f\u0067\u0053\u0042\u0053\u0074\u0072\u0069\u0070\u0073");};var _addg int ;if _dgfg .UseRefinement {_addg =1;};if _cfea =_bcddf .WriteBit (_addg );_cfea !=nil {return _aeac ,_g .Wrap (_cfea ,_ccae ,"\u0075\u0073\u0065\u0020\u0072\u0065\u0066\u0069\u006ee\u006d\u0065\u006e\u0074");
};_addg =0;if _dgfg .IsHuffmanEncoded {_addg =1;};if _cfea =_bcddf .WriteBit (_addg );_cfea !=nil {return _aeac ,_g .Wrap (_cfea ,_ccae ,"u\u0073\u0065\u0020\u0068\u0075\u0066\u0066\u006d\u0061\u006e");};_aeac =2;return _aeac ,nil ;};func (_geab *SymbolDictionary )decodeHeightClassBitmap (_afae *_cf .Bitmap ,_ebeb int64 ,_adgf int ,_ffee []int )error {for _fcgd :=_ebeb ;
_fcgd < int64 (_geab ._fdag );_fcgd ++{var _fgee int ;for _feed :=_ebeb ;_feed <=_fcgd -1;_feed ++{_fgee +=_ffee [_feed ];};_egbba :=_b .Rect (_fgee ,0,_fgee +_ffee [_fcgd ],_adgf );_aac ,_baed :=_cf .Extract (_egbba ,_afae );if _baed !=nil {return _baed ;
};_geab ._aedga [_fcgd ]=_aac ;_geab ._becb =append (_geab ._becb ,_aac );};return nil ;};func (_defdc *PageInformationSegment )Init (h *Header ,r _de .StreamReader )(_fbca error ){_defdc ._ggc =r ;if _fbca =_defdc .parseHeader ();_fbca !=nil {return _g .Wrap (_fbca ,"P\u0061\u0067\u0065\u0049\u006e\u0066o\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065g\u006d\u0065\u006et\u002eI\u006e\u0069\u0074","");
};return nil ;};func (_deb *template0 )setIndex (_bdb *_ga .DecoderStats ){_bdb .SetIndex (0x100)};type SymbolDictionary struct{_eegc _de .StreamReader ;SdrTemplate int8 ;SdTemplate int8 ;_cbf bool ;_ffaba bool ;SdHuffAggInstanceSelection bool ;SdHuffBMSizeSelection int8 ;
SdHuffDecodeWidthSelection int8 ;SdHuffDecodeHeightSelection int8 ;UseRefinementAggregation bool ;IsHuffmanEncoded bool ;SdATX []int8 ;SdATY []int8 ;SdrATX []int8 ;SdrATY []int8 ;NumberOfExportedSymbols uint32 ;NumberOfNewSymbols uint32 ;Header *Header ;
_cbff uint32 ;_gcg []*_cf .Bitmap ;_fdag uint32 ;_aedga []*_cf .Bitmap ;_fbdc _ded .Tabler ;_agdf _ded .Tabler ;_adgde _ded .Tabler ;_gca _ded .Tabler ;_fgdeb []*_cf .Bitmap ;_becb []*_cf .Bitmap ;_ebgeg *_ga .Decoder ;_cfbbd *TextRegion ;_fgdf *GenericRegion ;
_bcdd *GenericRefinementRegion ;_edda *_ga .DecoderStats ;_afdc *_ga .DecoderStats ;_cdcf *_ga .DecoderStats ;_fgaage *_ga .DecoderStats ;_bcef *_ga .DecoderStats ;_ecfd *_ga .DecoderStats ;_dddc *_ga .DecoderStats ;_afdcd *_ga .DecoderStats ;_ddfad *_ga .DecoderStats ;
_dccc int8 ;_fbfa *_cf .Bitmaps ;_gbfa []int ;_dffe map[int ]int ;_baaa bool ;};func (_abg *GenericRefinementRegion )GetRegionBitmap ()(*_cf .Bitmap ,error ){var _dbe error ;_ab .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _dbe !=nil {_ab .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0047\u0065\u0074R\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006dap\u0020\u0066a\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_dbe );
}else {_ab .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _abg .RegionBitmap !=nil {return _abg .RegionBitmap ,nil ;};_gd :=0;if _abg .ReferenceBitmap ==nil {_abg .ReferenceBitmap ,_dbe =_abg .getGrReference ();if _dbe !=nil {return nil ,_dbe ;};};if _abg ._ag ==nil {_abg ._ag ,_dbe =_ga .New (_abg ._ef );
if _dbe !=nil {return nil ,_dbe ;};};if _abg ._cgg ==nil {_abg ._cgg =_ga .NewStats (8192,1);};_abg .RegionBitmap =_cf .New (int (_abg .RegionInfo .BitmapWidth ),int (_abg .RegionInfo .BitmapHeight ));if _abg .TemplateID ==0{if _dbe =_abg .updateOverride ();
_dbe !=nil {return nil ,_dbe ;};};_ee :=(_abg .RegionBitmap .Width +7)&-8;var _cbg int ;if _abg .IsTPGROn {_cbg =int (-_abg .ReferenceDY )*_abg .ReferenceBitmap .RowStride ;};_dea :=_cbg +1;for _fc :=0;_fc < _abg .RegionBitmap .Height ;_fc ++{if _abg .IsTPGROn {_cggc ,_fdf :=_abg .decodeSLTP ();
if _fdf !=nil {return nil ,_fdf ;};_gd ^=_cggc ;};if _gd ==0{_dbe =_abg .decodeOptimized (_fc ,_abg .RegionBitmap .Width ,_abg .RegionBitmap .RowStride ,_abg .ReferenceBitmap .RowStride ,_ee ,_cbg ,_dea );if _dbe !=nil {return nil ,_dbe ;};}else {_dbe =_abg .decodeTypicalPredictedLine (_fc ,_abg .RegionBitmap .Width ,_abg .RegionBitmap .RowStride ,_abg .ReferenceBitmap .RowStride ,_ee ,_cbg );
if _dbe !=nil {return nil ,_dbe ;};};};return _abg .RegionBitmap ,nil ;};func (_badf *GenericRefinementRegion )decodeTemplate (_dcg ,_beb ,_ce ,_baa ,_ace ,_dbc ,_dgc ,_age ,_dab ,_aab int ,_ggg templater )(_agee error ){var (_bb ,_bca ,_dfbb ,_gbc ,_dgf int16 ;
_cffd ,_bge ,_gac ,_fac int ;_cge byte ;);if _dab >=1&&(_dab -1)< _badf .ReferenceBitmap .Height {_cge ,_agee =_badf .ReferenceBitmap .GetByte (_aab -_baa );if _agee !=nil {return ;};_cffd =int (_cge );};if _dab >=0&&(_dab )< _badf .ReferenceBitmap .Height {_cge ,_agee =_badf .ReferenceBitmap .GetByte (_aab );
if _agee !=nil {return ;};_bge =int (_cge );};if _dab >=-1&&(_dab +1)< _badf .ReferenceBitmap .Height {_cge ,_agee =_badf .ReferenceBitmap .GetByte (_aab +_baa );if _agee !=nil {return ;};_gac =int (_cge );};_aab ++;if _dcg >=1{_cge ,_agee =_badf .RegionBitmap .GetByte (_age -_ce );
if _agee !=nil {return ;};_fac =int (_cge );};_age ++;_ege :=_badf .ReferenceDX %8;_aeg :=6+_ege ;_cfbc :=_aab %_baa ;if _aeg >=0{if _aeg < 8{_bb =int16 (_cffd >>uint (_aeg ))&0x07;};if _aeg < 8{_bca =int16 (_bge >>uint (_aeg ))&0x07;};if _aeg < 8{_dfbb =int16 (_gac >>uint (_aeg ))&0x07;
};if _aeg ==6&&_cfbc > 1{if _dab >=1&&(_dab -1)< _badf .ReferenceBitmap .Height {_cge ,_agee =_badf .ReferenceBitmap .GetByte (_aab -_baa -2);if _agee !=nil {return _agee ;};_bb |=int16 (_cge <<2)&0x04;};if _dab >=0&&_dab < _badf .ReferenceBitmap .Height {_cge ,_agee =_badf .ReferenceBitmap .GetByte (_aab -2);
if _agee !=nil {return _agee ;};_bca |=int16 (_cge <<2)&0x04;};if _dab >=-1&&_dab +1< _badf .ReferenceBitmap .Height {_cge ,_agee =_badf .ReferenceBitmap .GetByte (_aab +_baa -2);if _agee !=nil {return _agee ;};_dfbb |=int16 (_cge <<2)&0x04;};};if _aeg ==0{_cffd =0;
_bge =0;_gac =0;if _cfbc < _baa -1{if _dab >=1&&_dab -1< _badf .ReferenceBitmap .Height {_cge ,_agee =_badf .ReferenceBitmap .GetByte (_aab -_baa );if _agee !=nil {return _agee ;};_cffd =int (_cge );};if _dab >=0&&_dab < _badf .ReferenceBitmap .Height {_cge ,_agee =_badf .ReferenceBitmap .GetByte (_aab );
if _agee !=nil {return _agee ;};_bge =int (_cge );};if _dab >=-1&&_dab +1< _badf .ReferenceBitmap .Height {_cge ,_agee =_badf .ReferenceBitmap .GetByte (_aab +_baa );if _agee !=nil {return _agee ;};_gac =int (_cge );};};_aab ++;};}else {_bb =int16 (_cffd <<1)&0x07;
_bca =int16 (_bge <<1)&0x07;_dfbb =int16 (_gac <<1)&0x07;_cffd =0;_bge =0;_gac =0;if _cfbc < _baa -1{if _dab >=1&&_dab -1< _badf .ReferenceBitmap .Height {_cge ,_agee =_badf .ReferenceBitmap .GetByte (_aab -_baa );if _agee !=nil {return _agee ;};_cffd =int (_cge );
};if _dab >=0&&_dab < _badf .ReferenceBitmap .Height {_cge ,_agee =_badf .ReferenceBitmap .GetByte (_aab );if _agee !=nil {return _agee ;};_bge =int (_cge );};if _dab >=-1&&_dab +1< _badf .ReferenceBitmap .Height {_cge ,_agee =_badf .ReferenceBitmap .GetByte (_aab +_baa );
if _agee !=nil {return _agee ;};_gac =int (_cge );};_aab ++;};_bb |=int16 ((_cffd >>7)&0x07);_bca |=int16 ((_bge >>7)&0x07);_dfbb |=int16 ((_gac >>7)&0x07);};_gbc =int16 (_fac >>6);_dgf =0;_agc :=(2-_ege )%8;_cffd <<=uint (_agc );_bge <<=uint (_agc );_gac <<=uint (_agc );
_fac <<=2;var _aaf int ;for _dfg :=0;_dfg < _beb ;_dfg ++{_bgg :=_dfg &0x07;_dabe :=_ggg .form (_bb ,_bca ,_dfbb ,_gbc ,_dgf );if _badf ._cd {_cge ,_agee =_badf .RegionBitmap .GetByte (_badf .RegionBitmap .GetByteIndex (_dfg ,_dcg ));if _agee !=nil {return _agee ;
};_badf ._cgg .SetIndex (int32 (_badf .overrideAtTemplate0 (int (_dabe ),_dfg ,_dcg ,int (_cge ),_bgg )));}else {_badf ._cgg .SetIndex (int32 (_dabe ));};_aaf ,_agee =_badf ._ag .DecodeBit (_badf ._cgg );if _agee !=nil {return _agee ;};if _agee =_badf .RegionBitmap .SetPixel (_dfg ,_dcg ,byte (_aaf ));
_agee !=nil {return _agee ;};_bb =((_bb <<1)|0x01&int16 (_cffd >>7))&0x07;_bca =((_bca <<1)|0x01&int16 (_bge >>7))&0x07;_dfbb =((_dfbb <<1)|0x01&int16 (_gac >>7))&0x07;_gbc =((_gbc <<1)|0x01&int16 (_fac >>7))&0x07;_dgf =int16 (_aaf );if (_dfg -int (_badf .ReferenceDX ))%8==5{_cffd =0;
_bge =0;_gac =0;if ((_dfg -int (_badf .ReferenceDX ))/8)+1< _badf .ReferenceBitmap .RowStride {if _dab >=1&&(_dab -1)< _badf .ReferenceBitmap .Height {_cge ,_agee =_badf .ReferenceBitmap .GetByte (_aab -_baa );if _agee !=nil {return _agee ;};_cffd =int (_cge );
};if _dab >=0&&_dab < _badf .ReferenceBitmap .Height {_cge ,_agee =_badf .ReferenceBitmap .GetByte (_aab );if _agee !=nil {return _agee ;};_bge =int (_cge );};if _dab >=-1&&(_dab +1)< _badf .ReferenceBitmap .Height {_cge ,_agee =_badf .ReferenceBitmap .GetByte (_aab +_baa );
if _agee !=nil {return _agee ;};_gac =int (_cge );};};_aab ++;}else {_cffd <<=1;_bge <<=1;_gac <<=1;};if _bgg ==5&&_dcg >=1{if ((_dfg >>3)+1)>=_badf .RegionBitmap .RowStride {_fac =0;}else {_cge ,_agee =_badf .RegionBitmap .GetByte (_age -_ce );if _agee !=nil {return _agee ;
};_fac =int (_cge );};_age ++;}else {_fac <<=1;};};return nil ;};func (_ggfd *SymbolDictionary )String ()string {_cbdc :=&_cg .Builder {};_cbdc .WriteString ("\n\u005b\u0053\u0059\u004dBO\u004c-\u0044\u0049\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u000a");
_cbdc .WriteString (_d .Sprintf ("\u0009-\u0020S\u0064\u0072\u0054\u0065\u006dp\u006c\u0061t\u0065\u0020\u0025\u0076\u000a",_ggfd .SdrTemplate ));_cbdc .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0025\u0076\u000a",_ggfd .SdTemplate ));
_cbdc .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006eg\u0043\u006f\u006e\u0074\u0065\u0078\u0074R\u0065\u0074\u0061\u0069\u006e\u0065\u0064\u0020\u0025\u0076\u000a",_ggfd ._cbf ));_cbdc .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074\u0065\u0078\u0074\u0055\u0073\u0065\u0064 \u0025\u0076\u000a",_ggfd ._ffaba ));
_cbdc .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_ggfd .SdHuffAggInstanceSelection ));
_cbdc .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0053d\u0048\u0075\u0066\u0066\u0042\u004d\u0053\u0069\u007a\u0065S\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020%\u0076\u000a",_ggfd .SdHuffBMSizeSelection ));_cbdc .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_ggfd .SdHuffDecodeWidthSelection ));
_cbdc .WriteString (_d .Sprintf ("\u0009\u002d\u0020Sd\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064e\u0048e\u0069g\u0068t\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_ggfd .SdHuffDecodeHeightSelection ));_cbdc .WriteString (_d .Sprintf ("\u0009\u002d\u0020U\u0073\u0065\u0052\u0065f\u0069\u006e\u0065\u006d\u0065\u006e\u0074A\u0067\u0067\u0072\u0065\u0067\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_ggfd .UseRefinementAggregation ));
_cbdc .WriteString (_d .Sprintf ("\u0009\u002d\u0020is\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045\u006e\u0063\u006f\u0064\u0065\u0064\u0020\u0025\u0076\u000a",_ggfd .IsHuffmanEncoded ));_cbdc .WriteString (_d .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_ggfd .SdATX ));
_cbdc .WriteString (_d .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_ggfd .SdATY ));_cbdc .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_ggfd .SdrATX ));_cbdc .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_ggfd .SdrATY ));
_cbdc .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u004e\u0075\u006d\u0062\u0065\u0072\u004ff\u0045\u0078\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_ggfd .NumberOfExportedSymbols ));_cbdc .WriteString (_d .Sprintf ("\u0009-\u0020\u004e\u0075\u006db\u0065\u0072\u004f\u0066\u004ee\u0077S\u0079m\u0062\u006f\u006c\u0073\u0020\u0025\u0076\n",_ggfd .NumberOfNewSymbols ));
_cbdc .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u004ff\u0049\u006d\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_ggfd ._cbff ));_cbdc .WriteString (_d .Sprintf ("\u0009\u002d \u006e\u0075\u006d\u0062\u0065\u0072\u004f\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0064\u0053\u0079\u006d\u0062\u006f\u006c\u0073 %\u0076\u000a",_ggfd ._fdag ));
return _cbdc .String ();};func (_eeg *HalftoneRegion )GetRegionBitmap ()(*_cf .Bitmap ,error ){if _eeg .HalftoneRegionBitmap !=nil {return _eeg .HalftoneRegionBitmap ,nil ;};var _gfd error ;_eeg .HalftoneRegionBitmap =_cf .New (int (_eeg .RegionSegment .BitmapWidth ),int (_eeg .RegionSegment .BitmapHeight ));
if _eeg .Patterns ==nil ||len (_eeg .Patterns )==0{_eeg .Patterns ,_gfd =_eeg .GetPatterns ();if _gfd !=nil {return nil ,_gfd ;};};if _eeg .HDefaultPixel ==1{_eeg .HalftoneRegionBitmap .SetDefaultPixel ();};_bfbe :=_f .Ceil (_f .Log (float64 (len (_eeg .Patterns )))/_f .Log (2));
_afda :=int (_bfbe );var _geba [][]int ;_geba ,_gfd =_eeg .grayScaleDecoding (_afda );if _gfd !=nil {return nil ,_gfd ;};if _gfd =_eeg .renderPattern (_geba );_gfd !=nil {return nil ,_gfd ;};return _eeg .HalftoneRegionBitmap ,nil ;};func (_bgb *GenericRegion )overrideAtTemplate1 (_gbde ,_dbbe ,_bfdb ,_gede ,_dacg int )int {_gbde &=0x1FF7;
if _bgb .GBAtY [0]==0&&_bgb .GBAtX [0]>=-int8 (_dacg ){_gbde |=(_gede >>uint (7-(int8 (_dacg )+_bgb .GBAtX [0]))&0x1)<<3;}else {_gbde |=int (_bgb .getPixel (_dbbe +int (_bgb .GBAtX [0]),_bfdb +int (_bgb .GBAtY [0])))<<3;};return _gbde ;};func (_daadd *TextRegion )decodeCurrentT ()(int64 ,error ){if _daadd .SbStrips !=1{if _daadd .IsHuffmanEncoded {_caeee ,_bgfb :=_daadd ._egcf .ReadBits (byte (_daadd .LogSBStrips ));
return int64 (_caeee ),_bgfb ;};_ceacf ,_fecf :=_daadd ._cdgg .DecodeInt (_daadd ._gbce );if _fecf !=nil {return 0,_fecf ;};return int64 (_ceacf ),nil ;};return 0,nil ;};func (_fdeg *SymbolDictionary )encodeRefinementATFlags (_dafd _de .BinaryWriter )(_agad int ,_cfbg error ){const _cfcd ="\u0065\u006e\u0063od\u0065\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0041\u0054\u0046\u006c\u0061\u0067\u0073";
if !_fdeg .UseRefinementAggregation ||_fdeg .SdrTemplate !=0{return 0,nil ;};for _ebef :=0;_ebef < 2;_ebef ++{if _cfbg =_dafd .WriteByte (byte (_fdeg .SdrATX [_ebef ]));_cfbg !=nil {return _agad ,_g .Wrapf (_cfbg ,_cfcd ,"\u0053\u0064\u0072\u0041\u0054\u0058\u005b\u0025\u0064\u005d",_ebef );
};_agad ++;if _cfbg =_dafd .WriteByte (byte (_fdeg .SdrATY [_ebef ]));_cfbg !=nil {return _agad ,_g .Wrapf (_cfbg ,_cfcd ,"\u0053\u0064\u0072\u0041\u0054\u0059\u005b\u0025\u0064\u005d",_ebef );};_agad ++;};return _agad ,nil ;};func (_bcdc *TextRegion )String ()string {_ddfaa :=&_cg .Builder {};
_ddfaa .WriteString ("\u000a[\u0054E\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u000a");_ddfaa .WriteString (_bcdc .RegionInfo .String ()+"\u000a");_ddfaa .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0053br\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0025\u0076\u000a",_bcdc .SbrTemplate ));
_ddfaa .WriteString (_d .Sprintf ("\u0009-\u0020S\u0062\u0044\u0073\u004f\u0066f\u0073\u0065t\u003a\u0020\u0025\u0076\u000a",_bcdc .SbDsOffset ));_ddfaa .WriteString (_d .Sprintf ("\t\u002d \u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0050i\u0078\u0065\u006c\u003a %\u0076\u000a",_bcdc .DefaultPixel ));
_ddfaa .WriteString (_d .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0076\u000a",_bcdc .CombinationOperator ));_ddfaa .WriteString (_d .Sprintf ("\t\u002d \u0049\u0073\u0054\u0072\u0061\u006e\u0073\u0070o\u0073\u0065\u0064\u003a %\u0076\u000a",_bcdc .IsTransposed ));
_ddfaa .WriteString (_d .Sprintf ("\u0009\u002d\u0020Re\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0043\u006f\u0072\u006e\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_bcdc .ReferenceCorner ));_ddfaa .WriteString (_d .Sprintf ("\t\u002d\u0020\u0055\u0073eR\u0065f\u0069\u006e\u0065\u006d\u0065n\u0074\u003a\u0020\u0025\u0076\u000a",_bcdc .UseRefinement ));
_ddfaa .WriteString (_d .Sprintf ("\u0009-\u0020\u0049\u0073\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045n\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0076\u000a",_bcdc .IsHuffmanEncoded ));if _bcdc .IsHuffmanEncoded {_ddfaa .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_bcdc .SbHuffRSize ));
_ddfaa .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0059:\u0020\u0025\u0076\u000a",_bcdc .SbHuffRDY ));_ddfaa .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0058:\u0020\u0025\u0076\u000a",_bcdc .SbHuffRDX ));
_ddfaa .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069\u0067\u0068\u0074\u003a\u0020\u0025v\u000a",_bcdc .SbHuffRDHeight ));_ddfaa .WriteString (_d .Sprintf ("\t\u002d\u0020\u0053\u0062Hu\u0066f\u0052\u0044\u0057\u0069\u0064t\u0068\u003a\u0020\u0025\u0076\u000a",_bcdc .SbHuffRDWidth ));
_ddfaa .WriteString (_d .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0054\u003a\u0020\u0025\u0076\u000a",_bcdc .SbHuffDT ));_ddfaa .WriteString (_d .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0053\u003a\u0020\u0025\u0076\u000a",_bcdc .SbHuffDS ));
_ddfaa .WriteString (_d .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0046\u0053\u003a\u0020\u0025\u0076\u000a",_bcdc .SbHuffFS ));};_ddfaa .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_bcdc .SbrATX ));
_ddfaa .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0059:\u0020\u0025\u0076\u000a",_bcdc .SbrATY ));_ddfaa .WriteString (_d .Sprintf ("\u0009\u002d\u0020N\u0075\u006d\u0062\u0065r\u004f\u0066\u0053\u0079\u006d\u0062\u006fl\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_bcdc .NumberOfSymbolInstances ));
_ddfaa .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_bcdc .SbrATX ));return _ddfaa .String ();};func (_geff *Header )readReferredToSegmentNumbers (_acbe _de .StreamReader ,_fea int )([]int ,error ){const _agba ="\u0072\u0065\u0061\u0064R\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053e\u0067m\u0065\u006e\u0074\u004e\u0075\u006d\u0062e\u0072\u0073";
_aefc :=make ([]int ,_fea );if _fea > 0{_geff .RTSegments =make ([]*Header ,_fea );var (_cea uint64 ;_ebcg error ;);for _cgabd :=0;_cgabd < _fea ;_cgabd ++{_cea ,_ebcg =_acbe .ReadBits (byte (_geff .referenceSize ())<<3);if _ebcg !=nil {return nil ,_g .Wrapf (_ebcg ,_agba ,"\u0027\u0025\u0064\u0027 \u0072\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0020\u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u0075\u006db\u0065\u0072",_cgabd );
};_aefc [_cgabd ]=int (_cea &_f .MaxInt32 );};};return _aefc ,nil ;};type template1 struct{};func (_bef *GenericRegion )decodeTemplate0a (_edd ,_bade ,_ddf int ,_fgaa ,_dbef int )(_beaa error ){const _dcde ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0061";
var (_fge ,_dcac int ;_aea ,_bbaca int ;_cgab byte ;_fbf int ;);if _edd >=1{_cgab ,_beaa =_bef .Bitmap .GetByte (_dbef );if _beaa !=nil {return _g .Wrap (_beaa ,_dcde ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_aea =int (_cgab );};if _edd >=2{_cgab ,_beaa =_bef .Bitmap .GetByte (_dbef -_bef .Bitmap .RowStride );
if _beaa !=nil {return _g .Wrap (_beaa ,_dcde ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_bbaca =int (_cgab )<<6;};_fge =(_aea &0xf0)|(_bbaca &0x3800);for _dbee :=0;_dbee < _ddf ;_dbee =_fbf {var (_cgf byte ;_cfg int ;);_fbf =_dbee +8;if _egbc :=_bade -_dbee ;
_egbc > 8{_cfg =8;}else {_cfg =_egbc ;};if _edd > 0{_aea <<=8;if _fbf < _bade {_cgab ,_beaa =_bef .Bitmap .GetByte (_dbef +1);if _beaa !=nil {return _g .Wrap (_beaa ,_dcde ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_aea |=int (_cgab );};};if _edd > 1{_agfa :=_dbef -_bef .Bitmap .RowStride +1;
_bbaca <<=8;if _fbf < _bade {_cgab ,_beaa =_bef .Bitmap .GetByte (_agfa );if _beaa !=nil {return _g .Wrap (_beaa ,_dcde ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_bbaca |=int (_cgab )<<6;}else {_bbaca |=0;};};for _fec :=0;_fec < _cfg ;_fec ++{_adgd :=uint (7-_fec );
if _bef ._adg {_dcac =_bef .overrideAtTemplate0a (_fge ,_dbee +_fec ,_edd ,int (_cgf ),_fec ,int (_adgd ));_bef ._degg .SetIndex (int32 (_dcac ));}else {_bef ._degg .SetIndex (int32 (_fge ));};var _agb int ;_agb ,_beaa =_bef ._edc .DecodeBit (_bef ._degg );
if _beaa !=nil {return _g .Wrap (_beaa ,_dcde ,"");};_cgf |=byte (_agb )<<_adgd ;_fge =((_fge &0x7bf7)<<1)|_agb |((_aea >>_adgd )&0x10)|((_bbaca >>_adgd )&0x800);};if _fed :=_bef .Bitmap .SetByte (_fgaa ,_cgf );_fed !=nil {return _g .Wrap (_fed ,_dcde ,"");
};_fgaa ++;_dbef ++;};return nil ;};func (_debc *SymbolDictionary )GetDictionary ()([]*_cf .Bitmap ,error ){_ab .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c-\u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){_ab .Log .Trace ("\u005b\u0053\u0059M\u0042\u004f\u004c\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
_ab .Log .Trace ("\u005b\u0053Y\u004d\u0042\u004f\u004c\u002dD\u0049\u0043\u0054\u0049\u004fN\u0041\u0052\u0059\u005d\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020\u000a\u0045\u0078\u003a\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u000a\u006e\u0065\u0077\u003a\u0027\u0025\u0073\u0027",_debc ._fgdeb ,_debc ._aedga );
}();if _debc ._fgdeb ==nil {var _dgfc error ;if _debc .UseRefinementAggregation {_debc ._dccc =_debc .getSbSymCodeLen ();};if !_debc .IsHuffmanEncoded {if _dgfc =_debc .setCodingStatistics ();_dgfc !=nil {return nil ,_dgfc ;};};_debc ._aedga =make ([]*_cf .Bitmap ,_debc .NumberOfNewSymbols );
var _ecbb []int ;if _debc .IsHuffmanEncoded &&!_debc .UseRefinementAggregation {_ecbb =make ([]int ,_debc .NumberOfNewSymbols );};if _dgfc =_debc .setSymbolsArray ();_dgfc !=nil {return nil ,_dgfc ;};var _fdfff ,_acbb int64 ;_debc ._fdag =0;for _debc ._fdag < _debc .NumberOfNewSymbols {_acbb ,_dgfc =_debc .decodeHeightClassDeltaHeight ();
if _dgfc !=nil {return nil ,_dgfc ;};_fdfff +=_acbb ;var _ecdb ,_baeg uint32 ;_gebad :=int64 (_debc ._fdag );for {var _egdee int64 ;_egdee ,_dgfc =_debc .decodeDifferenceWidth ();if _fd .Is (_dgfc ,_ff .ErrOOB ){break ;};if _dgfc !=nil {return nil ,_dgfc ;
};if _debc ._fdag >=_debc .NumberOfNewSymbols {break ;};_ecdb +=uint32 (_egdee );_baeg +=_ecdb ;if !_debc .IsHuffmanEncoded ||_debc .UseRefinementAggregation {if !_debc .UseRefinementAggregation {_dgfc =_debc .decodeDirectlyThroughGenericRegion (_ecdb ,uint32 (_fdfff ));
if _dgfc !=nil {return nil ,_dgfc ;};}else {_dgfc =_debc .decodeAggregate (_ecdb ,uint32 (_fdfff ));if _dgfc !=nil {return nil ,_dgfc ;};};}else if _debc .IsHuffmanEncoded &&!_debc .UseRefinementAggregation {_ecbb [_debc ._fdag ]=int (_ecdb );};_debc ._fdag ++;
};if _debc .IsHuffmanEncoded &&!_debc .UseRefinementAggregation {var _gbca int64 ;if _debc .SdHuffBMSizeSelection ==0{var _dbgdb _ded .Tabler ;_dbgdb ,_dgfc =_ded .GetStandardTable (1);if _dgfc !=nil {return nil ,_dgfc ;};_gbca ,_dgfc =_dbgdb .Decode (_debc ._eegc );
if _dgfc !=nil {return nil ,_dgfc ;};}else {_gbca ,_dgfc =_debc .huffDecodeBmSize ();if _dgfc !=nil {return nil ,_dgfc ;};};_debc ._eegc .Align ();var _facb *_cf .Bitmap ;_facb ,_dgfc =_debc .decodeHeightClassCollectiveBitmap (_gbca ,uint32 (_fdfff ),_baeg );
if _dgfc !=nil {return nil ,_dgfc ;};_dgfc =_debc .decodeHeightClassBitmap (_facb ,_gebad ,int (_fdfff ),_ecbb );if _dgfc !=nil {return nil ,_dgfc ;};};};_bgbe ,_dgfc :=_debc .getToExportFlags ();if _dgfc !=nil {return nil ,_dgfc ;};_debc .setExportedSymbols (_bgbe );
};return _debc ._fgdeb ,nil ;};func (_eege *SymbolDictionary )decodeDirectlyThroughGenericRegion (_fdcda ,_fgeeg uint32 )error {if _eege ._fgdf ==nil {_eege ._fgdf =NewGenericRegion (_eege ._eegc );};_eege ._fgdf .setParametersWithAt (false ,byte (_eege .SdTemplate ),false ,false ,_eege .SdATX ,_eege .SdATY ,_fdcda ,_fgeeg ,_eege ._edda ,_eege ._ebgeg );
return _eege .addSymbol (_eege ._fgdf );};func (_efdef *SymbolDictionary )setAtPixels ()error {if _efdef .IsHuffmanEncoded {return nil ;};_bddc :=1;if _efdef .SdTemplate ==0{_bddc =4;};if _bfce :=_efdef .readAtPixels (_bddc );_bfce !=nil {return _bfce ;
};return nil ;};