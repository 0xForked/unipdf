//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package segments ;import (_d "encoding/binary";_g "errors";_eg "fmt";_b "github.com/unidoc/unipdf/v3/common";_a "github.com/unidoc/unipdf/v3/internal/bitwise";_dfc "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_cb "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";
_egg "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/arithmetic";_ga "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/huffman";_ac "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/mmr";_db "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/arithmetic";
_ag "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_ae "github.com/unidoc/unipdf/v3/internal/jbig2/internal";_dfa "golang.org/x/xerrors";_e "image";_fa "io";_fg "math";_c "strings";_df "time";);func (_cfae *TextRegion )parseHeader ()error {var _gecc error ;
_b .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069n\u0073\u002e\u002e\u002e");defer func (){if _gecc !=nil {_b .Log .Trace ("\u005b\u0054\u0045\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044E\u0052\u005d\u0020\u0066\u0061i\u006c\u0065d\u002e\u0020\u0025\u0076",_gecc );
}else {_b .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069s\u0068\u0065\u0064\u002e");};}();if _gecc =_cfae .RegionInfo .parseHeader ();
_gecc !=nil {return _gecc ;};if _gecc =_cfae .readRegionFlags ();_gecc !=nil {return _gecc ;};if _cfae .IsHuffmanEncoded {if _gecc =_cfae .readHuffmanFlags ();_gecc !=nil {return _gecc ;};};if _gecc =_cfae .readUseRefinement ();_gecc !=nil {return _gecc ;
};if _gecc =_cfae .readAmountOfSymbolInstances ();_gecc !=nil {return _gecc ;};if _gecc =_cfae .getSymbols ();_gecc !=nil {return _gecc ;};if _gecc =_cfae .computeSymbolCodeLength ();_gecc !=nil {return _gecc ;};if _gecc =_cfae .checkInput ();_gecc !=nil {return _gecc ;
};_b .Log .Trace ("\u0025\u0073",_cfae .String ());return nil ;};type TableSegment struct{_gcdf _a .StreamReader ;_fdee int32 ;_dbcf int32 ;_bagb int32 ;_feae int32 ;_cbgg int32 ;};func (_ebac *SymbolDictionary )getUserTable (_dabg int )(_ga .Tabler ,error ){var _caee int ;
for _ ,_faca :=range _ebac .Header .RTSegments {if _faca .Type ==53{if _caee ==_dabg {_cebef ,_cade :=_faca .GetSegmentData ();if _cade !=nil {return nil ,_cade ;};_efaee :=_cebef .(_ga .BasicTabler );return _ga .NewEncodedTable (_efaee );};_caee ++;};
};return nil ,nil ;};func (_fbce *TextRegion )readRegionFlags ()error {var (_addg int ;_dfafa uint64 ;_cbcc error ;);_addg ,_cbcc =_fbce ._ceed .ReadBit ();if _cbcc !=nil {return _cbcc ;};_fbce .SbrTemplate =int8 (_addg );_dfafa ,_cbcc =_fbce ._ceed .ReadBits (5);
if _cbcc !=nil {return _cbcc ;};_fbce .SbDsOffset =int8 (_dfafa );if _fbce .SbDsOffset > 0x0f{_fbce .SbDsOffset -=0x20;};_addg ,_cbcc =_fbce ._ceed .ReadBit ();if _cbcc !=nil {return _cbcc ;};_fbce .DefaultPixel =int8 (_addg );_dfafa ,_cbcc =_fbce ._ceed .ReadBits (2);
if _cbcc !=nil {return _cbcc ;};_fbce .CombinationOperator =_cb .CombinationOperator (int (_dfafa )&0x3);_addg ,_cbcc =_fbce ._ceed .ReadBit ();if _cbcc !=nil {return _cbcc ;};_fbce .IsTransposed =int8 (_addg );_dfafa ,_cbcc =_fbce ._ceed .ReadBits (2);
if _cbcc !=nil {return _cbcc ;};_fbce .ReferenceCorner =int16 (_dfafa )&0x3;_dfafa ,_cbcc =_fbce ._ceed .ReadBits (2);if _cbcc !=nil {return _cbcc ;};_fbce .LogSBStrips =int16 (_dfafa )&0x3;_fbce .SbStrips =1<<uint (_fbce .LogSBStrips );_addg ,_cbcc =_fbce ._ceed .ReadBit ();
if _cbcc !=nil {return _cbcc ;};if _addg ==1{_fbce .UseRefinement =true ;};_addg ,_cbcc =_fbce ._ceed .ReadBit ();if _cbcc !=nil {return _cbcc ;};if _addg ==1{_fbce .IsHuffmanEncoded =true ;};return nil ;};func (_fcef *Header )readSegmentPageAssociation (_abb Documenter ,_bbgd _a .StreamReader ,_egec uint64 ,_dbag ...int )(_cgfb error ){const _fbbg ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074P\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061t\u0069\u006f\u006e";
if !_fcef .PageAssociationFieldSize {_aebga ,_fcad :=_bbgd .ReadBits (8);if _fcad !=nil {return _ag .Wrap (_fcad ,_fbbg ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_fcef .PageAssociation =int (_aebga &0xFF);}else {_aebbd ,_fffe :=_bbgd .ReadBits (32);
if _fffe !=nil {return _ag .Wrap (_fffe ,_fbbg ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_fcef .PageAssociation =int (_aebbd &_fg .MaxInt32 );};if _egec ==0{return nil ;};if _fcef .PageAssociation !=0{_ffab ,_fbdgc :=_abb .GetPage (_fcef .PageAssociation );
if _fbdgc !=nil {return _ag .Wrap (_fbdgc ,_fbbg ,"\u0061s\u0073\u006f\u0063\u0069a\u0074\u0065\u0064\u0020\u0070a\u0067e\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006ed");};var _ggdd int ;for _edaa :=uint64 (0);_edaa < _egec ;_edaa ++{_ggdd =_dbag [_edaa ];
_fcef .RTSegments [_edaa ],_fbdgc =_ffab .GetSegment (_ggdd );if _fbdgc !=nil {var _dffge error ;_fcef .RTSegments [_edaa ],_dffge =_abb .GetGlobalSegment (_ggdd );if _dffge !=nil {return _ag .Wrapf (_fbdgc ,_fbbg ,"\u0072\u0065\u0066\u0065\u0072\u0065n\u0063\u0065\u0020s\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064\u0020\u0061\u0074\u0020pa\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0072\u0020\u0069\u006e\u0020\u0067\u006c\u006f\u0062\u0061\u006c\u0073",_fcef .PageAssociation );
};};};return nil ;};for _dfeb :=uint64 (0);_dfeb < _egec ;_dfeb ++{_fcef .RTSegments [_dfeb ],_cgfb =_abb .GetGlobalSegment (_dbag [_dfeb ]);if _cgfb !=nil {return _ag .Wrapf (_cgfb ,_fbbg ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u003a\u0020\u0027\u0025d\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064",_dbag [_dfeb ]);
};};return nil ;};func (_deef *GenericRegion )overrideAtTemplate3 (_bdad ,_egeg ,_ebd ,_aac ,_gaf int )int {_bdad &=0x3EF;if _deef .GBAtY [0]==0&&_deef .GBAtX [0]>=-int8 (_gaf ){_bdad |=(_aac >>uint (7-(int8 (_gaf )+_deef .GBAtX [0]))&0x1)<<4;}else {_bdad |=int (_deef .getPixel (_egeg +int (_deef .GBAtX [0]),_ebd +int (_deef .GBAtY [0])))<<4;
};return _bdad ;};func (_fead *GenericRegion )overrideAtTemplate1 (_aegdf ,_cga ,_baeb ,_fgbcg ,_ecfa int )int {_aegdf &=0x1FF7;if _fead .GBAtY [0]==0&&_fead .GBAtX [0]>=-int8 (_ecfa ){_aegdf |=(_fgbcg >>uint (7-(int8 (_ecfa )+_fead .GBAtX [0]))&0x1)<<3;
}else {_aegdf |=int (_fead .getPixel (_cga +int (_fead .GBAtX [0]),_baeb +int (_fead .GBAtY [0])))<<3;};return _aegdf ;};func (_ebfcd *SymbolDictionary )decodeHeightClassBitmap (_cbc *_cb .Bitmap ,_fcab int64 ,_bfdg int ,_gegb []int )error {for _egcd :=_fcab ;
_egcd < int64 (_ebfcd ._bbdg );_egcd ++{var _bdcc int ;for _agdbf :=_fcab ;_agdbf <=_egcd -1;_agdbf ++{_bdcc +=_gegb [_agdbf ];};_aeef :=_e .Rect (_bdcc ,0,_bdcc +_gegb [_egcd ],_bfdg );_ffaf ,_bdfd :=_cb .Extract (_aeef ,_cbc );if _bdfd !=nil {return _bdfd ;
};_ebfcd ._ffge [_egcd ]=_ffaf ;_ebfcd ._cbfdc =append (_ebfcd ._cbfdc ,_ffaf );};return nil ;};func (_aadc *SymbolDictionary )getSymbol (_bagg int )(*_cb .Bitmap ,error ){const _acab ="\u0067e\u0074\u0053\u0079\u006d\u0062\u006fl";_eafb ,_daaf :=_aadc ._gbcac .GetBitmap (_aadc ._gcf [_bagg ]);
if _daaf !=nil {return nil ,_ag .Wrap (_daaf ,_acab ,"\u0063\u0061n\u0027\u0074\u0020g\u0065\u0074\u0020\u0073\u0079\u006d\u0062\u006f\u006c");};return _eafb ,nil ;};func (_cdg *PatternDictionary )computeSegmentDataStructure ()error {_cdg .DataOffset =_cdg ._bbbf .StreamPosition ();
_cdg .DataHeaderLength =_cdg .DataOffset -_cdg .DataHeaderOffset ;_cdg .DataLength =int64 (_cdg ._bbbf .Length ())-_cdg .DataHeaderLength ;return nil ;};func (_beg *SymbolDictionary )setAtPixels ()error {if _beg .IsHuffmanEncoded {return nil ;};_gegda :=1;
if _beg .SdTemplate ==0{_gegda =4;};if _gcfa :=_beg .readAtPixels (_gegda );_gcfa !=nil {return _gcfa ;};return nil ;};func (_efbfd *TableSegment )HtRS ()int32 {return _efbfd ._bagb };func (_acb *template0 )setIndex (_bcc *_egg .DecoderStats ){_bcc .SetIndex (0x100)};
type GenericRegion struct{_dad _a .StreamReader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;UseExtTemplates bool ;IsTPGDon bool ;GBTemplate byte ;IsMMREncoded bool ;UseMMR bool ;GBAtX []int8 ;
GBAtY []int8 ;GBAtOverride []bool ;_cgg bool ;Bitmap *_cb .Bitmap ;_age *_egg .Decoder ;_dfef *_egg .DecoderStats ;_dbb *_ac .Decoder ;};func (_abecg *PageInformationSegment )Init (h *Header ,r _a .StreamReader )(_fbada error ){_abecg ._afefc =r ;if _fbada =_abecg .parseHeader ();
_fbada !=nil {return _ag .Wrap (_fbada ,"P\u0061\u0067\u0065\u0049\u006e\u0066o\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065g\u006d\u0065\u006et\u002eI\u006e\u0069\u0074","");};return nil ;};type Pager interface{GetSegment (int )(*Header ,error );
GetBitmap ()(*_cb .Bitmap ,error );};func (_gbga *HalftoneRegion )computeY (_eaeg ,_acee int )int {return _gbga .shiftAndFill (int (_gbga .HGridY )+_eaeg *int (_gbga .HRegionX )-_acee *int (_gbga .HRegionY ));};func (_fbega *TextRegion )getSymbols ()error {if _fbega .Header .RTSegments !=nil {return _fbega .initSymbols ();
};return nil ;};func (_egc *GenericRegion )Size ()int {return _egc .RegionSegment .Size ()+1+2*len (_egc .GBAtX )};func (_gccb *TextRegion )encodeSymbols (_acfe _a .BinaryWriter )(_efad int ,_ffeec error ){const _dadcc ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
_bbce :=make ([]byte ,4);_d .BigEndian .PutUint32 (_bbce ,_gccb .NumberOfSymbols );if _efad ,_ffeec =_acfe .Write (_bbce );_ffeec !=nil {return _efad ,_ag .Wrap (_ffeec ,_dadcc ,"\u004e\u0075\u006dbe\u0072\u004f\u0066\u0053\u0079\u006d\u0062\u006f\u006c\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073");
};_edcg ,_ffeec :=_cb .NewClassedPoints (_gccb ._egcc ,_gccb ._fbfgd );if _ffeec !=nil {return 0,_ag .Wrap (_ffeec ,_dadcc ,"");};var _gefd ,_fbed int ;_ecbd :=_db .New ();_ecbd .Init ();if _ffeec =_ecbd .EncodeInteger (_db .IADT ,0);_ffeec !=nil {return _efad ,_ag .Wrap (_ffeec ,_dadcc ,"\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0020\u0044\u0054");
};_dcgb ,_ffeec :=_edcg .GroupByY ();if _ffeec !=nil {return 0,_ag .Wrap (_ffeec ,_dadcc ,"");};for _ ,_dabd :=range _dcgb {_fcce :=int (_dabd .YAtIndex (0));_egfb :=_fcce -_gefd ;if _ffeec =_ecbd .EncodeInteger (_db .IADT ,_egfb );_ffeec !=nil {return _efad ,_ag .Wrap (_ffeec ,_dadcc ,"");
};var _gbbbf int ;for _ebbeb ,_cacf :=range _dabd .IntSlice {switch _ebbeb {case 0:_agff :=int (_dabd .XAtIndex (_ebbeb ))-_fbed ;if _ffeec =_ecbd .EncodeInteger (_db .IAFS ,_agff );_ffeec !=nil {return _efad ,_ag .Wrap (_ffeec ,_dadcc ,"");};_fbed +=_agff ;
_gbbbf =_fbed ;default:_eeab :=int (_dabd .XAtIndex (_ebbeb ))-_gbbbf ;if _ffeec =_ecbd .EncodeInteger (_db .IADS ,_eeab );_ffeec !=nil {return _efad ,_ag .Wrap (_ffeec ,_dadcc ,"");};_gbbbf +=_eeab ;};_dfdg ,_agce :=_gccb ._bedbb .Get (_cacf );if _agce !=nil {return _efad ,_ag .Wrap (_agce ,_dadcc ,"");
};_ecfae ,_ebcec :=_gccb ._acea [_dfdg ];if !_ebcec {_ecfae ,_ebcec =_gccb ._agaa [_dfdg ];if !_ebcec {return _efad ,_ag .Errorf (_dadcc ,"\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027\u0025d\u0027\u0020\u0069s\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064 \u0069\u006e\u0020\u0067\u006cob\u0061\u006c\u0020\u0061\u006e\u0064\u0020\u006c\u006f\u0063\u0061\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020\u006d\u0061\u0070",_dfdg );
};};if _agce =_ecbd .EncodeIAID (_gccb ._eada ,_ecfae );_agce !=nil {return _efad ,_ag .Wrap (_agce ,_dadcc ,"");};};if _ffeec =_ecbd .EncodeOOB (_db .IADS );_ffeec !=nil {return _efad ,_ag .Wrap (_ffeec ,_dadcc ,"");};};_ecbd .Final ();_fgcb ,_ffeec :=_ecbd .WriteTo (_acfe );
if _ffeec !=nil {return _efad ,_ag .Wrap (_ffeec ,_dadcc ,"");};_efad +=int (_fgcb );return _efad ,nil ;};func (_dgba *SymbolDictionary )readNumberOfNewSymbols ()error {_beab ,_ccgf :=_dgba ._bdgd .ReadBits (32);if _ccgf !=nil {return _ccgf ;};_dgba .NumberOfNewSymbols =uint32 (_beab &_fg .MaxUint32 );
return nil ;};func (_cdf *PageInformationSegment )readRequiresAuxiliaryBuffer ()error {_gaae ,_efdg :=_cdf ._afefc .ReadBit ();if _efdg !=nil {return _efdg ;};if _gaae ==1{_cdf ._ccaf =true ;};return nil ;};func (_becg *RegionSegment )String ()string {_egdb :=&_c .Builder {};
_egdb .WriteString ("\u0009[\u0052E\u0047\u0049\u004f\u004e\u0020S\u0045\u0047M\u0045\u004e\u0054\u005d\u000a");_egdb .WriteString (_eg .Sprintf ("\t\u0009\u002d\u0020\u0042\u0069\u0074m\u0061\u0070\u0020\u0028\u0077\u0069d\u0074\u0068\u002c\u0020\u0068\u0065\u0069g\u0068\u0074\u0029\u0020\u005b\u0025\u0064\u0078\u0025\u0064]\u000a",_becg .BitmapWidth ,_becg .BitmapHeight ));
_egdb .WriteString (_eg .Sprintf ("\u0009\u0009\u002d\u0020L\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0028\u0078,\u0079)\u003a\u0020\u005b\u0025\u0064\u002c\u0025d\u005d\u000a",_becg .XLocation ,_becg .YLocation ));_egdb .WriteString (_eg .Sprintf ("\t\u0009\u002d\u0020\u0043\u006f\u006db\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070e\u0072\u0061\u0074o\u0072:\u0020\u0025\u0073",_becg .CombinaionOperator ));
return _egdb .String ();};func (_fbeg *Header )subInputReader ()(_a .StreamReader ,error ){return _a .NewSubstreamReader (_fbeg .Reader ,_fbeg .SegmentDataStartOffset ,_fbeg .SegmentDataLength );};func (_agee *HalftoneRegion )computeGrayScalePlanes (_befb []*_cb .Bitmap ,_dedb int )([][]int ,error ){_aggb :=make ([][]int ,_agee .HGridHeight );
for _cgbe :=0;_cgbe < len (_aggb );_cgbe ++{_aggb [_cgbe ]=make ([]int ,_agee .HGridWidth );};for _afbd :=0;_afbd < int (_agee .HGridHeight );_afbd ++{for _bbgc :=0;_bbgc < int (_agee .HGridWidth );_bbgc +=8{var _deefg int ;if _gcgf :=int (_agee .HGridWidth )-_bbgc ;
_gcgf > 8{_deefg =8;}else {_deefg =_gcgf ;};_gdb :=_befb [0].GetByteIndex (_bbgc ,_afbd );for _bdce :=0;_bdce < _deefg ;_bdce ++{_baeg :=_bdce +_bbgc ;_aggb [_afbd ][_baeg ]=0;for _acacb :=0;_acacb < _dedb ;_acacb ++{_ecdd ,_gbbd :=_befb [_acacb ].GetByte (_gdb );
if _gbbd !=nil {return nil ,_gbbd ;};_cfbg :=_ecdd >>uint (7-_baeg &7);_ffbfa :=_cfbg &1;_faf :=1<<uint (_acacb );_fdfd :=int (_ffbfa )*_faf ;_aggb [_afbd ][_baeg ]+=_fdfd ;};};};};return _aggb ,nil ;};func (_aecf *PatternDictionary )checkInput ()error {if _aecf .HdpHeight < 1||_aecf .HdpWidth < 1{return _g .New ("in\u0076\u0061l\u0069\u0064\u0020\u0048\u0065\u0061\u0064\u0065\u0072 \u0056\u0061\u006c\u0075\u0065\u003a\u0020\u0057\u0069\u0064\u0074\u0068\u002f\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020g\u0072e\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020z\u0065\u0072o");
};if _aecf .IsMMREncoded {if _aecf .HDTemplate !=0{_b .Log .Debug ("\u0076\u0061\u0072\u0069\u0061\u0062\u006c\u0065\u0020\u0048\u0044\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e \u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030");
};};return nil ;};func (_gca *GenericRefinementRegion )parseHeader ()(_gbb error ){_b .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0048e\u0061\u0064e\u0072\u002e\u002e\u002e");
_efag :=_df .Now ();defer func (){if _gbb ==nil {_b .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045G\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020h\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0069\u006e\u0069\u0073\u0068id\u0020\u0069\u006e\u003a\u0020\u0025\u0064\u0020\u006e\u0073",_df .Since (_efag ).Nanoseconds ());
}else {_b .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0068\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0073",_gbb );
};}();if _gbb =_gca .RegionInfo .parseHeader ();_gbb !=nil {return _gbb ;};_ ,_gbb =_gca ._ec .ReadBits (6);if _gbb !=nil {return _gbb ;};_gca .IsTPGROn ,_gbb =_gca ._ec .ReadBool ();if _gbb !=nil {return _gbb ;};var _dffg int ;_dffg ,_gbb =_gca ._ec .ReadBit ();
if _gbb !=nil {return _gbb ;};_gca .TemplateID =int8 (_dffg );switch _gca .TemplateID {case 0:_gca .Template =_gca ._bf ;if _gbb =_gca .readAtPixels ();_gbb !=nil {return ;};case 1:_gca .Template =_gca ._eb ;};return nil ;};func (_gf *GenericRefinementRegion )decodeTemplate (_dbea ,_cabc ,_ead ,_abg ,_ebb ,_egb ,_eda ,_dfcfd ,_bbb ,_cae int ,_dac templater )(_efbf error ){var (_dfgc ,_gad ,_fef ,_gcb ,_dcad int16 ;
_cef ,_feba ,_afb ,_efac int ;_cedg byte ;);if _bbb >=1&&(_bbb -1)< _gf .ReferenceBitmap .Height {_cedg ,_efbf =_gf .ReferenceBitmap .GetByte (_cae -_abg );if _efbf !=nil {return ;};_cef =int (_cedg );};if _bbb >=0&&(_bbb )< _gf .ReferenceBitmap .Height {_cedg ,_efbf =_gf .ReferenceBitmap .GetByte (_cae );
if _efbf !=nil {return ;};_feba =int (_cedg );};if _bbb >=-1&&(_bbb +1)< _gf .ReferenceBitmap .Height {_cedg ,_efbf =_gf .ReferenceBitmap .GetByte (_cae +_abg );if _efbf !=nil {return ;};_afb =int (_cedg );};_cae ++;if _dbea >=1{_cedg ,_efbf =_gf .RegionBitmap .GetByte (_dfcfd -_ead );
if _efbf !=nil {return ;};_efac =int (_cedg );};_dfcfd ++;_cea :=_gf .ReferenceDX %8;_cdef :=6+_cea ;_gag :=_cae %_abg ;if _cdef >=0{if _cdef < 8{_dfgc =int16 (_cef >>uint (_cdef ))&0x07;};if _cdef < 8{_gad =int16 (_feba >>uint (_cdef ))&0x07;};if _cdef < 8{_fef =int16 (_afb >>uint (_cdef ))&0x07;
};if _cdef ==6&&_gag > 1{if _bbb >=1&&(_bbb -1)< _gf .ReferenceBitmap .Height {_cedg ,_efbf =_gf .ReferenceBitmap .GetByte (_cae -_abg -2);if _efbf !=nil {return _efbf ;};_dfgc |=int16 (_cedg <<2)&0x04;};if _bbb >=0&&_bbb < _gf .ReferenceBitmap .Height {_cedg ,_efbf =_gf .ReferenceBitmap .GetByte (_cae -2);
if _efbf !=nil {return _efbf ;};_gad |=int16 (_cedg <<2)&0x04;};if _bbb >=-1&&_bbb +1< _gf .ReferenceBitmap .Height {_cedg ,_efbf =_gf .ReferenceBitmap .GetByte (_cae +_abg -2);if _efbf !=nil {return _efbf ;};_fef |=int16 (_cedg <<2)&0x04;};};if _cdef ==0{_cef =0;
_feba =0;_afb =0;if _gag < _abg -1{if _bbb >=1&&_bbb -1< _gf .ReferenceBitmap .Height {_cedg ,_efbf =_gf .ReferenceBitmap .GetByte (_cae -_abg );if _efbf !=nil {return _efbf ;};_cef =int (_cedg );};if _bbb >=0&&_bbb < _gf .ReferenceBitmap .Height {_cedg ,_efbf =_gf .ReferenceBitmap .GetByte (_cae );
if _efbf !=nil {return _efbf ;};_feba =int (_cedg );};if _bbb >=-1&&_bbb +1< _gf .ReferenceBitmap .Height {_cedg ,_efbf =_gf .ReferenceBitmap .GetByte (_cae +_abg );if _efbf !=nil {return _efbf ;};_afb =int (_cedg );};};_cae ++;};}else {_dfgc =int16 (_cef <<1)&0x07;
_gad =int16 (_feba <<1)&0x07;_fef =int16 (_afb <<1)&0x07;_cef =0;_feba =0;_afb =0;if _gag < _abg -1{if _bbb >=1&&_bbb -1< _gf .ReferenceBitmap .Height {_cedg ,_efbf =_gf .ReferenceBitmap .GetByte (_cae -_abg );if _efbf !=nil {return _efbf ;};_cef =int (_cedg );
};if _bbb >=0&&_bbb < _gf .ReferenceBitmap .Height {_cedg ,_efbf =_gf .ReferenceBitmap .GetByte (_cae );if _efbf !=nil {return _efbf ;};_feba =int (_cedg );};if _bbb >=-1&&_bbb +1< _gf .ReferenceBitmap .Height {_cedg ,_efbf =_gf .ReferenceBitmap .GetByte (_cae +_abg );
if _efbf !=nil {return _efbf ;};_afb =int (_cedg );};_cae ++;};_dfgc |=int16 ((_cef >>7)&0x07);_gad |=int16 ((_feba >>7)&0x07);_fef |=int16 ((_afb >>7)&0x07);};_gcb =int16 (_efac >>6);_dcad =0;_bef :=(2-_cea )%8;_cef <<=uint (_bef );_feba <<=uint (_bef );
_afb <<=uint (_bef );_efac <<=2;var _cdee int ;for _edc :=0;_edc < _cabc ;_edc ++{_deg :=_edc &0x07;_bae :=_dac .form (_dfgc ,_gad ,_fef ,_gcb ,_dcad );if _gf ._fgb {_cedg ,_efbf =_gf .RegionBitmap .GetByte (_gf .RegionBitmap .GetByteIndex (_edc ,_dbea ));
if _efbf !=nil {return _efbf ;};_gf ._gac .SetIndex (int32 (_gf .overrideAtTemplate0 (int (_bae ),_edc ,_dbea ,int (_cedg ),_deg )));}else {_gf ._gac .SetIndex (int32 (_bae ));};_cdee ,_efbf =_gf ._aeb .DecodeBit (_gf ._gac );if _efbf !=nil {return _efbf ;
};if _efbf =_gf .RegionBitmap .SetPixel (_edc ,_dbea ,byte (_cdee ));_efbf !=nil {return _efbf ;};_dfgc =((_dfgc <<1)|0x01&int16 (_cef >>7))&0x07;_gad =((_gad <<1)|0x01&int16 (_feba >>7))&0x07;_fef =((_fef <<1)|0x01&int16 (_afb >>7))&0x07;_gcb =((_gcb <<1)|0x01&int16 (_efac >>7))&0x07;
_dcad =int16 (_cdee );if (_edc -int (_gf .ReferenceDX ))%8==5{_cef =0;_feba =0;_afb =0;if ((_edc -int (_gf .ReferenceDX ))/8)+1< _gf .ReferenceBitmap .RowStride {if _bbb >=1&&(_bbb -1)< _gf .ReferenceBitmap .Height {_cedg ,_efbf =_gf .ReferenceBitmap .GetByte (_cae -_abg );
if _efbf !=nil {return _efbf ;};_cef =int (_cedg );};if _bbb >=0&&_bbb < _gf .ReferenceBitmap .Height {_cedg ,_efbf =_gf .ReferenceBitmap .GetByte (_cae );if _efbf !=nil {return _efbf ;};_feba =int (_cedg );};if _bbb >=-1&&(_bbb +1)< _gf .ReferenceBitmap .Height {_cedg ,_efbf =_gf .ReferenceBitmap .GetByte (_cae +_abg );
if _efbf !=nil {return _efbf ;};_afb =int (_cedg );};};_cae ++;}else {_cef <<=1;_feba <<=1;_afb <<=1;};if _deg ==5&&_dbea >=1{if ((_edc >>3)+1)>=_gf .RegionBitmap .RowStride {_efac =0;}else {_cedg ,_efbf =_gf .RegionBitmap .GetByte (_dfcfd -_ead );if _efbf !=nil {return _efbf ;
};_efac =int (_cedg );};_dfcfd ++;}else {_efac <<=1;};};return nil ;};func (_ffged *SymbolDictionary )parseHeader ()(_ebbg error ){_b .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _ebbg !=nil {_b .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u0020\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u005b\u0050\u0041\u0052SE\u002d\u0048\u0045A\u0044\u0045R\u005d\u0020\u0066\u0061\u0069\u006ce\u0064\u002e \u0025\u0076",_ebbg );
}else {_b .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _ebbg =_ffged .readRegionFlags ();_ebbg !=nil {return _ebbg ;};if _ebbg =_ffged .setAtPixels ();_ebbg !=nil {return _ebbg ;};if _ebbg =_ffged .setRefinementAtPixels ();_ebbg !=nil {return _ebbg ;};if _ebbg =_ffged .readNumberOfExportedSymbols ();
_ebbg !=nil {return _ebbg ;};if _ebbg =_ffged .readNumberOfNewSymbols ();_ebbg !=nil {return _ebbg ;};if _ebbg =_ffged .setInSyms ();_ebbg !=nil {return _ebbg ;};if _ffged ._gfbd {_dfca :=_ffged .Header .RTSegments ;for _fbef :=len (_dfca )-1;_fbef >=0;
_fbef --{if _dfca [_fbef ].Type ==0{_dfcg ,_afbbd :=_dfca [_fbef ].SegmentData .(*SymbolDictionary );if !_afbbd {_ebbg =_eg .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074:\u0020\u0025\u0076\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020S\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_dfca [_fbef ]);
return _ebbg ;};if _dfcg ._gfbd {_ffged .setRetainedCodingContexts (_dfcg );};break ;};};};if _ebbg =_ffged .checkInput ();_ebbg !=nil {return _ebbg ;};return nil ;};type template1 struct{};func (_agg *GenericRefinementRegion )decodeTypicalPredictedLine (_ca ,_fb ,_cd ,_dgd ,_bb ,_bc int )error {_gd :=_ca -int (_agg .ReferenceDY );
_adc :=_agg .ReferenceBitmap .GetByteIndex (0,_gd );_dbe :=_agg .RegionBitmap .GetByteIndex (0,_ca );var _gaa error ;switch _agg .TemplateID {case 0:_gaa =_agg .decodeTypicalPredictedLineTemplate0 (_ca ,_fb ,_cd ,_dgd ,_bb ,_bc ,_dbe ,_gd ,_adc );case 1:_gaa =_agg .decodeTypicalPredictedLineTemplate1 (_ca ,_fb ,_cd ,_dgd ,_bb ,_bc ,_dbe ,_gd ,_adc );
};return _gaa ;};type PatternDictionary struct{_bbbf _a .StreamReader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;GBAtX []int8 ;GBAtY []int8 ;IsMMREncoded bool ;HDTemplate byte ;HdpWidth byte ;HdpHeight byte ;Patterns []*_cb .Bitmap ;
GrayMax uint32 ;};func (_agfc *Header )pageSize ()uint {if _agfc .PageAssociation <=255{return 1;};return 4;};func (_cdab *GenericRegion )setParametersWithAt (_cag bool ,_cbgc byte ,_agga ,_ged bool ,_bfae ,_geeb []int8 ,_fefc ,_fefd uint32 ,_gcge *_egg .DecoderStats ,_babd *_egg .Decoder ){_cdab .IsMMREncoded =_cag ;
_cdab .GBTemplate =_cbgc ;_cdab .IsTPGDon =_agga ;_cdab .GBAtX =_bfae ;_cdab .GBAtY =_geeb ;_cdab .RegionSegment .BitmapHeight =_fefd ;_cdab .RegionSegment .BitmapWidth =_fefc ;_cdab ._dbb =nil ;_cdab .Bitmap =nil ;if _gcge !=nil {_cdab ._dfef =_gcge ;
};if _babd !=nil {_cdab ._age =_babd ;};_b .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049O\u004e\u005d\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073\u0020\u0053\u0044\u0041t\u003a\u0020\u0025\u0073",_cdab );
};var _ templater =&template0 {};func (_fdcf *GenericRegion )readGBAtPixels (_ceba int )error {const _eaec ="\u0072\u0065\u0061\u0064\u0047\u0042\u0041\u0074\u0050i\u0078\u0065\u006c\u0073";_fdcf .GBAtX =make ([]int8 ,_ceba );_fdcf .GBAtY =make ([]int8 ,_ceba );
for _ecg :=0;_ecg < _ceba ;_ecg ++{_efd ,_gggg :=_fdcf ._dad .ReadByte ();if _gggg !=nil {return _ag .Wrapf (_gggg ,_eaec ,"\u0058\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_ecg );};_fdcf .GBAtX [_ecg ]=int8 (_efd );_efd ,_gggg =_fdcf ._dad .ReadByte ();
if _gggg !=nil {return _ag .Wrapf (_gggg ,_eaec ,"\u0059\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_ecg );};_fdcf .GBAtY [_ecg ]=int8 (_efd );};return nil ;};func (_ggfe *SymbolDictionary )decodeNewSymbols (_cgad ,_befd uint32 ,_cdfc *_cb .Bitmap ,_cgffc ,_gbaf int32 )error {if _ggfe ._cedc ==nil {_ggfe ._cedc =_ge (_ggfe ._bdgd ,nil );
if _ggfe ._ddc ==nil {var _egfd error ;_ggfe ._ddc ,_egfd =_egg .New (_ggfe ._bdgd );if _egfd !=nil {return _egfd ;};};if _ggfe ._gffe ==nil {_ggfe ._gffe =_egg .NewStats (65536,1);};};_ggfe ._cedc .setParameters (_ggfe ._gffe ,_ggfe ._ddc ,_ggfe .SdrTemplate ,_cgad ,_befd ,_cdfc ,_cgffc ,_gbaf ,false ,_ggfe .SdrATX ,_ggfe .SdrATY );
return _ggfe .addSymbol (_ggfe ._cedc );};type PageInformationSegment struct{_afefc _a .StreamReader ;PageBMHeight int ;PageBMWidth int ;ResolutionX int ;ResolutionY int ;_eee bool ;_efab _cb .CombinationOperator ;_ccaf bool ;DefaultPixelValue uint8 ;_agfb bool ;
IsLossless bool ;IsStripe bool ;MaxStripeSize uint16 ;};func (_dffd *RegionSegment )parseHeader ()error {const _fegd ="p\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_b .Log .Trace ("\u005b\u0052\u0045\u0047I\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002dH\u0045A\u0044\u0045\u0052\u005d\u0020\u0042\u0065g\u0069\u006e");
defer func (){_b .Log .Trace ("\u005b\u0052\u0045G\u0049\u004f\u004e\u005d[\u0050\u0041\u0052\u0053\u0045\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");}();_bcaf ,_bfc :=_dffd ._eadg .ReadBits (32);if _bfc !=nil {return _ag .Wrap (_bfc ,_fegd ,"\u0077\u0069\u0064t\u0068");
};_dffd .BitmapWidth =uint32 (_bcaf &_fg .MaxUint32 );_bcaf ,_bfc =_dffd ._eadg .ReadBits (32);if _bfc !=nil {return _ag .Wrap (_bfc ,_fegd ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_dffd .BitmapHeight =uint32 (_bcaf &_fg .MaxUint32 );_bcaf ,_bfc =_dffd ._eadg .ReadBits (32);
if _bfc !=nil {return _ag .Wrap (_bfc ,_fegd ,"\u0078\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_dffd .XLocation =uint32 (_bcaf &_fg .MaxUint32 );_bcaf ,_bfc =_dffd ._eadg .ReadBits (32);if _bfc !=nil {return _ag .Wrap (_bfc ,_fegd ,"\u0079\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");
};_dffd .YLocation =uint32 (_bcaf &_fg .MaxUint32 );if _ ,_bfc =_dffd ._eadg .ReadBits (5);_bfc !=nil {return _ag .Wrap (_bfc ,_fegd ,"\u0064i\u0072\u0079\u0020\u0072\u0065\u0061d");};if _bfc =_dffd .readCombinationOperator ();_bfc !=nil {return _ag .Wrap (_bfc ,_fegd ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");
};return nil ;};func (_gbde *TextRegion )readAmountOfSymbolInstances ()error {_fbgf ,_cgaa :=_gbde ._ceed .ReadBits (32);if _cgaa !=nil {return _cgaa ;};_gbde .NumberOfSymbolInstances =uint32 (_fbgf &_fg .MaxUint32 );_egad :=_gbde .RegionInfo .BitmapWidth *_gbde .RegionInfo .BitmapHeight ;
if _egad < _gbde .NumberOfSymbolInstances {_b .Log .Debug ("\u004c\u0069\u006d\u0069t\u0069\u006e\u0067\u0020t\u0068\u0065\u0020n\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020d\u0065\u0063\u006f\u0064e\u0064\u0020\u0073\u0079m\u0062\u006f\u006c\u0020\u0069n\u0073\u0074\u0061\u006e\u0063\u0065\u0073 \u0074\u006f\u0020\u006f\u006ee\u0020\u0070\u0065\u0072\u0020\u0070\u0069\u0078\u0065l\u0020\u0028\u0020\u0025\u0064\u0020\u0069\u006e\u0073\u0074\u0065\u0061\u0064\u0020\u006f\u0066\u0020\u0025\u0064\u0029",_egad ,_gbde .NumberOfSymbolInstances );
_gbde .NumberOfSymbolInstances =_egad ;};return nil ;};func (_cfeg *TableSegment )HtPS ()int32 {return _cfeg ._dbcf };func (_gbfe *HalftoneRegion )computeSegmentDataStructure ()error {_gbfe .DataOffset =_gbfe ._dbdd .StreamPosition ();_gbfe .DataHeaderLength =_gbfe .DataOffset -_gbfe .DataHeaderOffset ;
_gbfe .DataLength =int64 (_gbfe ._dbdd .Length ())-_gbfe .DataHeaderLength ;return nil ;};func (_acgd *SymbolDictionary )readRegionFlags ()error {var (_feee uint64 ;_bdfg int ;);_ ,_efaf :=_acgd ._bdgd .ReadBits (3);if _efaf !=nil {return _efaf ;};_bdfg ,_efaf =_acgd ._bdgd .ReadBit ();
if _efaf !=nil {return _efaf ;};_acgd .SdrTemplate =int8 (_bdfg );_feee ,_efaf =_acgd ._bdgd .ReadBits (2);if _efaf !=nil {return _efaf ;};_acgd .SdTemplate =int8 (_feee &0xf);_bdfg ,_efaf =_acgd ._bdgd .ReadBit ();if _efaf !=nil {return _efaf ;};if _bdfg ==1{_acgd ._fegc =true ;
};_bdfg ,_efaf =_acgd ._bdgd .ReadBit ();if _efaf !=nil {return _efaf ;};if _bdfg ==1{_acgd ._gfbd =true ;};_bdfg ,_efaf =_acgd ._bdgd .ReadBit ();if _efaf !=nil {return _efaf ;};if _bdfg ==1{_acgd .SdHuffAggInstanceSelection =true ;};_bdfg ,_efaf =_acgd ._bdgd .ReadBit ();
if _efaf !=nil {return _efaf ;};_acgd .SdHuffBMSizeSelection =int8 (_bdfg );_feee ,_efaf =_acgd ._bdgd .ReadBits (2);if _efaf !=nil {return _efaf ;};_acgd .SdHuffDecodeWidthSelection =int8 (_feee &0xf);_feee ,_efaf =_acgd ._bdgd .ReadBits (2);if _efaf !=nil {return _efaf ;
};_acgd .SdHuffDecodeHeightSelection =int8 (_feee &0xf);_bdfg ,_efaf =_acgd ._bdgd .ReadBit ();if _efaf !=nil {return _efaf ;};if _bdfg ==1{_acgd .UseRefinementAggregation =true ;};_bdfg ,_efaf =_acgd ._bdgd .ReadBit ();if _efaf !=nil {return _efaf ;};
if _bdfg ==1{_acgd .IsHuffmanEncoded =true ;};return nil ;};func (_cac *TextRegion )InitEncode (globalSymbolsMap ,localSymbolsMap map[int ]int ,comps []int ,inLL *_cb .Points ,symbols *_cb .Bitmaps ,classIDs *_dfc .IntSlice ,boxes *_cb .Boxes ,width ,height ,symBits int ){_cac .RegionInfo =&RegionSegment {BitmapWidth :uint32 (width ),BitmapHeight :uint32 (height )};
_cac ._acea =globalSymbolsMap ;_cac ._agaa =localSymbolsMap ;_cac ._fbfgd =comps ;_cac ._egcc =inLL ;_cac ._gfbg =symbols ;_cac ._bedbb =classIDs ;_cac ._gfgb =boxes ;_cac ._eada =symBits ;};func (_dddd *GenericRegion )decodeTemplate1 (_eef ,_ebbb ,_egce int ,_eaf ,_cgc int )(_bfea error ){const _geg ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0031";
var (_fab ,_aae int ;_fcg ,_cgfg int ;_dage byte ;_gee ,_dcb int ;);if _eef >=1{_dage ,_bfea =_dddd .Bitmap .GetByte (_cgc );if _bfea !=nil {return _ag .Wrap (_bfea ,_geg ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_fcg =int (_dage );};if _eef >=2{_dage ,_bfea =_dddd .Bitmap .GetByte (_cgc -_dddd .Bitmap .RowStride );
if _bfea !=nil {return _ag .Wrap (_bfea ,_geg ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_cgfg =int (_dage )<<5;};_fab =((_fcg >>1)&0x1f8)|((_cgfg >>1)&0x1e00);for _gagg :=0;_gagg < _egce ;_gagg =_gee {var (_aface byte ;_fegb int ;);_gee =_gagg +8;
if _aefe :=_ebbb -_gagg ;_aefe > 8{_fegb =8;}else {_fegb =_aefe ;};if _eef > 0{_fcg <<=8;if _gee < _ebbb {_dage ,_bfea =_dddd .Bitmap .GetByte (_cgc +1);if _bfea !=nil {return _ag .Wrap (_bfea ,_geg ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");
};_fcg |=int (_dage );};};if _eef > 1{_cgfg <<=8;if _gee < _ebbb {_dage ,_bfea =_dddd .Bitmap .GetByte (_cgc -_dddd .Bitmap .RowStride +1);if _bfea !=nil {return _ag .Wrap (_bfea ,_geg ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_cgfg |=int (_dage )<<5;
};};for _ddac :=0;_ddac < _fegb ;_ddac ++{if _dddd ._cgg {_aae =_dddd .overrideAtTemplate1 (_fab ,_gagg +_ddac ,_eef ,int (_aface ),_ddac );_dddd ._dfef .SetIndex (int32 (_aae ));}else {_dddd ._dfef .SetIndex (int32 (_fab ));};_dcb ,_bfea =_dddd ._age .DecodeBit (_dddd ._dfef );
if _bfea !=nil {return _ag .Wrap (_bfea ,_geg ,"");};_aface |=byte (_dcb )<<uint (7-_ddac );_bda :=uint (8-_ddac );_fab =((_fab &0xefb)<<1)|_dcb |((_fcg >>_bda )&0x8)|((_cgfg >>_bda )&0x200);};if _gcd :=_dddd .Bitmap .SetByte (_eaf ,_aface );_gcd !=nil {return _ag .Wrap (_gcd ,_geg ,"");
};_eaf ++;_cgc ++;};return nil ;};func (_fgfg *PageInformationSegment )String ()string {_edda :=&_c .Builder {};_edda .WriteString ("\u000a\u005b\u0050\u0041G\u0045\u002d\u0049\u004e\u0046\u004f\u0052\u004d\u0041\u0054I\u004fN\u002d\u0053\u0045\u0047\u004d\u0045\u004eT\u005d\u000a");
_edda .WriteString (_eg .Sprintf ("\u0009\u002d \u0042\u004d\u0048e\u0069\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u000a",_fgfg .PageBMHeight ));_edda .WriteString (_eg .Sprintf ("\u0009-\u0020B\u004d\u0057\u0069\u0064\u0074\u0068\u003a\u0020\u0025\u0064\u000a",_fgfg .PageBMWidth ));
_edda .WriteString (_eg .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0058\u003a\u0020\u0025\u0064\u000a",_fgfg .ResolutionX ));_edda .WriteString (_eg .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0059\u003a\u0020\u0025\u0064\u000a",_fgfg .ResolutionY ));
_edda .WriteString (_eg .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0073\u000a",_fgfg ._efab ));_edda .WriteString (_eg .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006eO\u0070\u0065\u0072\u0061\u0074\u006f\u0072O\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025v\u000a",_fgfg ._eee ));
_edda .WriteString (_eg .Sprintf ("\u0009-\u0020I\u0073\u004c\u006f\u0073\u0073l\u0065\u0073s\u003a\u0020\u0025\u0076\u000a",_fgfg .IsLossless ));_edda .WriteString (_eg .Sprintf ("\u0009\u002d\u0020R\u0065\u0071\u0075\u0069r\u0065\u0073\u0041\u0075\u0078\u0069\u006ci\u0061\u0072\u0079\u0042\u0075\u0066\u0066\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_fgfg ._ccaf ));
_edda .WriteString (_eg .Sprintf ("\u0009\u002d\u0020M\u0069\u0067\u0068\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0052e\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0076\u000a",_fgfg ._agfb ));_edda .WriteString (_eg .Sprintf ("\u0009\u002d\u0020\u0049\u0073\u0053\u0074\u0072\u0069\u0070\u0065\u0064:\u0020\u0025\u0076\u000a",_fgfg .IsStripe ));
_edda .WriteString (_eg .Sprintf ("\t\u002d\u0020\u004d\u0061xS\u0074r\u0069\u0070\u0065\u0053\u0069z\u0065\u003a\u0020\u0025\u0076\u000a",_fgfg .MaxStripeSize ));return _edda .String ();};var (_bdgg Segmenter ;_dffb =map[Type ]func ()Segmenter {TSymbolDictionary :func ()Segmenter {return &SymbolDictionary {}},TIntermediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateLosslessTextRegion :func ()Segmenter {return &TextRegion {}},TPatternDictionary :func ()Segmenter {return &PatternDictionary {}},TIntermediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateLosslessHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TIntermediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateLosslessGenericRegion :func ()Segmenter {return &GenericRegion {}},TIntermediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateLosslessGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TPageInformation :func ()Segmenter {return &PageInformationSegment {}},TEndOfPage :func ()Segmenter {return _bdgg },TEndOfStrip :func ()Segmenter {return &EndOfStripe {}},TEndOfFile :func ()Segmenter {return _bdgg },TProfiles :func ()Segmenter {return _bdgg },TTables :func ()Segmenter {return &TableSegment {}},TExtension :func ()Segmenter {return _bdgg },TBitmap :func ()Segmenter {return _bdgg }};
);func (_gfba *TableSegment )Init (h *Header ,r _a .StreamReader )error {_gfba ._gcdf =r ;return _gfba .parseHeader ();};func (_dcba *TextRegion )decodeDT ()(_gcfaa int64 ,_aebbc error ){if _dcba .IsHuffmanEncoded {if _dcba .SbHuffDT ==3{_gcfaa ,_aebbc =_dcba ._ebgg .Decode (_dcba ._ceed );
if _aebbc !=nil {return 0,_aebbc ;};}else {var _dedf _ga .Tabler ;_dedf ,_aebbc =_ga .GetStandardTable (11+int (_dcba .SbHuffDT ));if _aebbc !=nil {return 0,_aebbc ;};_gcfaa ,_aebbc =_dedf .Decode (_dcba ._ceed );if _aebbc !=nil {return 0,_aebbc ;};};}else {var _cebc int32 ;
_cebc ,_aebbc =_dcba ._ffdcg .DecodeInt (_dcba ._cfaba );if _aebbc !=nil {return ;};_gcfaa =int64 (_cebc );};_gcfaa *=int64 (_dcba .SbStrips );return _gcfaa ,nil ;};func (_defb *GenericRegion )overrideAtTemplate0b (_ggf ,_gbc ,_fgc ,_fgbc ,_fddg ,_ccg int )int {if _defb .GBAtOverride [0]{_ggf &=0xFFFD;
if _defb .GBAtY [0]==0&&_defb .GBAtX [0]>=-int8 (_fddg ){_ggf |=(_fgbc >>uint (int8 (_ccg )-_defb .GBAtX [0]&0x1))<<1;}else {_ggf |=int (_defb .getPixel (_gbc +int (_defb .GBAtX [0]),_fgc +int (_defb .GBAtY [0])))<<1;};};if _defb .GBAtOverride [1]{_ggf &=0xDFFF;
if _defb .GBAtY [1]==0&&_defb .GBAtX [1]>=-int8 (_fddg ){_ggf |=(_fgbc >>uint (int8 (_ccg )-_defb .GBAtX [1]&0x1))<<13;}else {_ggf |=int (_defb .getPixel (_gbc +int (_defb .GBAtX [1]),_fgc +int (_defb .GBAtY [1])))<<13;};};if _defb .GBAtOverride [2]{_ggf &=0xFDFF;
if _defb .GBAtY [2]==0&&_defb .GBAtX [2]>=-int8 (_fddg ){_ggf |=(_fgbc >>uint (int8 (_ccg )-_defb .GBAtX [2]&0x1))<<9;}else {_ggf |=int (_defb .getPixel (_gbc +int (_defb .GBAtX [2]),_fgc +int (_defb .GBAtY [2])))<<9;};};if _defb .GBAtOverride [3]{_ggf &=0xBFFF;
if _defb .GBAtY [3]==0&&_defb .GBAtX [3]>=-int8 (_fddg ){_ggf |=(_fgbc >>uint (int8 (_ccg )-_defb .GBAtX [3]&0x1))<<14;}else {_ggf |=int (_defb .getPixel (_gbc +int (_defb .GBAtX [3]),_fgc +int (_defb .GBAtY [3])))<<14;};};if _defb .GBAtOverride [4]{_ggf &=0xEFFF;
if _defb .GBAtY [4]==0&&_defb .GBAtX [4]>=-int8 (_fddg ){_ggf |=(_fgbc >>uint (int8 (_ccg )-_defb .GBAtX [4]&0x1))<<12;}else {_ggf |=int (_defb .getPixel (_gbc +int (_defb .GBAtX [4]),_fgc +int (_defb .GBAtY [4])))<<12;};};if _defb .GBAtOverride [5]{_ggf &=0xFFDF;
if _defb .GBAtY [5]==0&&_defb .GBAtX [5]>=-int8 (_fddg ){_ggf |=(_fgbc >>uint (int8 (_ccg )-_defb .GBAtX [5]&0x1))<<5;}else {_ggf |=int (_defb .getPixel (_gbc +int (_defb .GBAtX [5]),_fgc +int (_defb .GBAtY [5])))<<5;};};if _defb .GBAtOverride [6]{_ggf &=0xFFFB;
if _defb .GBAtY [6]==0&&_defb .GBAtX [6]>=-int8 (_fddg ){_ggf |=(_fgbc >>uint (int8 (_ccg )-_defb .GBAtX [6]&0x1))<<2;}else {_ggf |=int (_defb .getPixel (_gbc +int (_defb .GBAtX [6]),_fgc +int (_defb .GBAtY [6])))<<2;};};if _defb .GBAtOverride [7]{_ggf &=0xFFF7;
if _defb .GBAtY [7]==0&&_defb .GBAtX [7]>=-int8 (_fddg ){_ggf |=(_fgbc >>uint (int8 (_ccg )-_defb .GBAtX [7]&0x1))<<3;}else {_ggf |=int (_defb .getPixel (_gbc +int (_defb .GBAtX [7]),_fgc +int (_defb .GBAtY [7])))<<3;};};if _defb .GBAtOverride [8]{_ggf &=0xF7FF;
if _defb .GBAtY [8]==0&&_defb .GBAtX [8]>=-int8 (_fddg ){_ggf |=(_fgbc >>uint (int8 (_ccg )-_defb .GBAtX [8]&0x1))<<11;}else {_ggf |=int (_defb .getPixel (_gbc +int (_defb .GBAtX [8]),_fgc +int (_defb .GBAtY [8])))<<11;};};if _defb .GBAtOverride [9]{_ggf &=0xFFEF;
if _defb .GBAtY [9]==0&&_defb .GBAtX [9]>=-int8 (_fddg ){_ggf |=(_fgbc >>uint (int8 (_ccg )-_defb .GBAtX [9]&0x1))<<4;}else {_ggf |=int (_defb .getPixel (_gbc +int (_defb .GBAtX [9]),_fgc +int (_defb .GBAtY [9])))<<4;};};if _defb .GBAtOverride [10]{_ggf &=0x7FFF;
if _defb .GBAtY [10]==0&&_defb .GBAtX [10]>=-int8 (_fddg ){_ggf |=(_fgbc >>uint (int8 (_ccg )-_defb .GBAtX [10]&0x1))<<15;}else {_ggf |=int (_defb .getPixel (_gbc +int (_defb .GBAtX [10]),_fgc +int (_defb .GBAtY [10])))<<15;};};if _defb .GBAtOverride [11]{_ggf &=0xFDFF;
if _defb .GBAtY [11]==0&&_defb .GBAtX [11]>=-int8 (_fddg ){_ggf |=(_fgbc >>uint (int8 (_ccg )-_defb .GBAtX [11]&0x1))<<10;}else {_ggf |=int (_defb .getPixel (_gbc +int (_defb .GBAtX [11]),_fgc +int (_defb .GBAtY [11])))<<10;};};return _ggf ;};func (_cebab *RegionSegment )Size ()int {return 17};
func (_bfec *SymbolDictionary )decodeHeightClassDeltaHeight ()(int64 ,error ){if _bfec .IsHuffmanEncoded {return _bfec .decodeHeightClassDeltaHeightWithHuffman ();};_bfaf ,_ceaa :=_bfec ._ddc .DecodeInt (_bfec ._dddf );if _ceaa !=nil {return 0,_ceaa ;};
return int64 (_bfaf ),nil ;};type Documenter interface{GetPage (int )(Pager ,error );GetGlobalSegment (int )(*Header ,error );};func (_bab *GenericRefinementRegion )decodeTypicalPredictedLineTemplate1 (_eca ,_cf ,_bdc ,_abce ,_edg ,_cda ,_bdb ,_dfe ,_fac int )(_cg error ){var (_fdc ,_bbg int ;
_efa ,_cedb int ;_baf ,_ebc int ;_dda byte ;);if _eca > 0{_dda ,_cg =_bab .RegionBitmap .GetByte (_bdb -_bdc );if _cg !=nil {return ;};_efa =int (_dda );};if _dfe > 0&&_dfe <=_bab .ReferenceBitmap .Height {_dda ,_cg =_bab .ReferenceBitmap .GetByte (_fac -_abce +_cda );
if _cg !=nil {return ;};_cedb =int (_dda )<<2;};if _dfe >=0&&_dfe < _bab .ReferenceBitmap .Height {_dda ,_cg =_bab .ReferenceBitmap .GetByte (_fac +_cda );if _cg !=nil {return ;};_baf =int (_dda );};if _dfe > -2&&_dfe < _bab .ReferenceBitmap .Height -1{_dda ,_cg =_bab .ReferenceBitmap .GetByte (_fac +_abce +_cda );
if _cg !=nil {return ;};_ebc =int (_dda );};_fdc =((_efa >>5)&0x6)|((_ebc >>2)&0x30)|(_baf &0xc0)|(_cedb &0x200);_bbg =((_ebc >>2)&0x70)|(_baf &0xc0)|(_cedb &0x700);var _dcc int ;for _cab :=0;_cab < _edg ;_cab =_dcc {var (_aedb int ;_dfeg int ;);_dcc =_cab +8;
if _aedb =_cf -_cab ;_aedb > 8{_aedb =8;};_bdd :=_dcc < _cf ;_dfdf :=_dcc < _bab .ReferenceBitmap .Width ;_fcbd :=_cda +1;if _eca > 0{_dda =0;if _bdd {_dda ,_cg =_bab .RegionBitmap .GetByte (_bdb -_bdc +1);if _cg !=nil {return ;};};_efa =(_efa <<8)|int (_dda );
};if _dfe > 0&&_dfe <=_bab .ReferenceBitmap .Height {var _dff int ;if _dfdf {_dda ,_cg =_bab .ReferenceBitmap .GetByte (_fac -_abce +_fcbd );if _cg !=nil {return ;};_dff =int (_dda )<<2;};_cedb =(_cedb <<8)|_dff ;};if _dfe >=0&&_dfe < _bab .ReferenceBitmap .Height {_dda =0;
if _dfdf {_dda ,_cg =_bab .ReferenceBitmap .GetByte (_fac +_fcbd );if _cg !=nil {return ;};};_baf =(_baf <<8)|int (_dda );};if _dfe > -2&&_dfe < (_bab .ReferenceBitmap .Height -1){_dda =0;if _dfdf {_dda ,_cg =_bab .ReferenceBitmap .GetByte (_fac +_abce +_fcbd );
if _cg !=nil {return ;};};_ebc =(_ebc <<8)|int (_dda );};for _dce :=0;_dce < _aedb ;_dce ++{var _fea int ;_agbc :=(_bbg >>4)&0x1ff;switch _agbc {case 0x1ff:_fea =1;case 0x00:_fea =0;default:_bab ._gac .SetIndex (int32 (_fdc ));_fea ,_cg =_bab ._aeb .DecodeBit (_bab ._gac );
if _cg !=nil {return ;};};_agd :=uint (7-_dce );_dfeg |=_fea <<_agd ;_fdc =((_fdc &0x0d6)<<1)|_fea |(_efa >>_agd +5)&0x002|((_ebc >>_agd +2)&0x010)|((_baf >>_agd )&0x040)|((_cedb >>_agd )&0x200);_bbg =((_bbg &0xdb)<<1)|((_ebc >>_agd +2)&0x010)|((_baf >>_agd )&0x080)|((_cedb >>_agd )&0x400);
};_cg =_bab .RegionBitmap .SetByte (_bdb ,byte (_dfeg ));if _cg !=nil {return ;};_bdb ++;_fac ++;};return nil ;};func (_fege *SymbolDictionary )readNumberOfExportedSymbols ()error {_eaef ,_cec :=_fege ._bdgd .ReadBits (32);if _cec !=nil {return _cec ;};
_fege .NumberOfExportedSymbols =uint32 (_eaef &_fg .MaxUint32 );return nil ;};func (_dgca *HalftoneRegion )shiftAndFill (_gae int )int {_gae >>=8;if _gae < 0{_feec :=int (_fg .Log (float64 (_bagc (_gae )))/_fg .Log (2));_fdfa :=31-_feec ;for _dfaf :=1;
_dfaf < _fdfa ;_dfaf ++{_gae |=1<<uint (31-_dfaf );};};return _gae ;};func (_ef *GenericRefinementRegion )decodeOptimized (_aed ,_ba ,_af ,_da ,_ffbf ,_ggb ,_ffa int )error {var (_dg error ;_ggg int ;_gb int ;);_ecb :=_aed -int (_ef .ReferenceDY );if _abf :=int (-_ef .ReferenceDX );
_abf > 0{_ggg =_abf ;};_fe :=_ef .ReferenceBitmap .GetByteIndex (_ggg ,_ecb );if _ef .ReferenceDX > 0{_gb =int (_ef .ReferenceDX );};_adb :=_ef .RegionBitmap .GetByteIndex (_gb ,_aed );switch _ef .TemplateID {case 0:_dg =_ef .decodeTemplate (_aed ,_ba ,_af ,_da ,_ffbf ,_ggb ,_ffa ,_adb ,_ecb ,_fe ,_ef ._bf );
case 1:_dg =_ef .decodeTemplate (_aed ,_ba ,_af ,_da ,_ffbf ,_ggb ,_ffa ,_adb ,_ecb ,_fe ,_ef ._eb );};return _dg ;};func (_dec *TextRegion )blit (_edcc *_cb .Bitmap ,_cagc int64 )error {if _dec .IsTransposed ==0&&(_dec .ReferenceCorner ==2||_dec .ReferenceCorner ==3){_dec ._ebcg +=int64 (_edcc .Width -1);
}else if _dec .IsTransposed ==1&&(_dec .ReferenceCorner ==0||_dec .ReferenceCorner ==2){_dec ._ebcg +=int64 (_edcc .Height -1);};_bcdb :=_dec ._ebcg ;if _dec .IsTransposed ==1{_bcdb ,_cagc =_cagc ,_bcdb ;};switch _dec .ReferenceCorner {case 0:_cagc -=int64 (_edcc .Height -1);
case 2:_cagc -=int64 (_edcc .Height -1);_bcdb -=int64 (_edcc .Width -1);case 3:_bcdb -=int64 (_edcc .Width -1);};_fdgc :=_cb .Blit (_edcc ,_dec .RegionBitmap ,int (_bcdb ),int (_cagc ),_dec .CombinationOperator );if _fdgc !=nil {return _fdgc ;};if _dec .IsTransposed ==0&&(_dec .ReferenceCorner ==0||_dec .ReferenceCorner ==1){_dec ._ebcg +=int64 (_edcc .Width -1);
};if _dec .IsTransposed ==1&&(_dec .ReferenceCorner ==1||_dec .ReferenceCorner ==3){_dec ._ebcg +=int64 (_edcc .Height -1);};return nil ;};func (_gccf *TextRegion )decodeRdx ()(int64 ,error ){const _becf ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064x";
if _gccf .IsHuffmanEncoded {if _gccf .SbHuffRDX ==3{if _gccf ._agfd ==nil {var (_feaaa int ;_dege error ;);if _gccf .SbHuffFS ==3{_feaaa ++;};if _gccf .SbHuffDS ==3{_feaaa ++;};if _gccf .SbHuffDT ==3{_feaaa ++;};if _gccf .SbHuffRDWidth ==3{_feaaa ++;};
if _gccf .SbHuffRDHeight ==3{_feaaa ++;};_gccf ._agfd ,_dege =_gccf .getUserTable (_feaaa );if _dege !=nil {return 0,_ag .Wrap (_dege ,_becf ,"");};};return _gccf ._agfd .Decode (_gccf ._ceed );};_ecccf ,_bgbc :=_ga .GetStandardTable (14+int (_gccf .SbHuffRDX ));
if _bgbc !=nil {return 0,_ag .Wrap (_bgbc ,_becf ,"");};return _ecccf .Decode (_gccf ._ceed );};_cfabf ,_fede :=_gccf ._ffdcg .DecodeInt (_gccf ._afeb );if _fede !=nil {return 0,_ag .Wrap (_fede ,_becf ,"");};return int64 (_cfabf ),nil ;};type GenericRefinementRegion struct{_bf templater ;
_eb templater ;_ec _a .StreamReader ;_ff *Header ;RegionInfo *RegionSegment ;IsTPGROn bool ;TemplateID int8 ;Template templater ;GrAtX []int8 ;GrAtY []int8 ;RegionBitmap *_cb .Bitmap ;ReferenceBitmap *_cb .Bitmap ;ReferenceDX int32 ;ReferenceDY int32 ;
_aeb *_egg .Decoder ;_gac *_egg .DecoderStats ;_fgb bool ;_bfe []bool ;};func (_fdb *SymbolDictionary )decodeAggregate (_aceb ,_fecc uint32 )error {var (_acgc int64 ;_edaab error ;);if _fdb .IsHuffmanEncoded {_acgc ,_edaab =_fdb .huffDecodeRefAggNInst ();
if _edaab !=nil {return _edaab ;};}else {_cce ,_adbbf :=_fdb ._ddc .DecodeInt (_fdb ._adbbd );if _adbbf !=nil {return _adbbf ;};_acgc =int64 (_cce );};if _acgc > 1{return _fdb .decodeThroughTextRegion (_aceb ,_fecc ,uint32 (_acgc ));}else if _acgc ==1{return _fdb .decodeRefinedSymbol (_aceb ,_fecc );
};return nil ;};func (_gdge *GenericRegion )GetRegionBitmap ()(_edgb *_cb .Bitmap ,_bcb error ){if _gdge .Bitmap !=nil {return _gdge .Bitmap ,nil ;};if _gdge .IsMMREncoded {if _gdge ._dbb ==nil {_gdge ._dbb ,_bcb =_ac .New (_gdge ._dad ,int (_gdge .RegionSegment .BitmapWidth ),int (_gdge .RegionSegment .BitmapHeight ),_gdge .DataOffset ,_gdge .DataLength );
if _bcb !=nil {return nil ,_bcb ;};};_gdge .Bitmap ,_bcb =_gdge ._dbb .UncompressMMR ();return _gdge .Bitmap ,_bcb ;};if _bcb =_gdge .updateOverrideFlags ();_bcb !=nil {return nil ,_bcb ;};var _deea int ;if _gdge ._age ==nil {_gdge ._age ,_bcb =_egg .New (_gdge ._dad );
if _bcb !=nil {return nil ,_bcb ;};};if _gdge ._dfef ==nil {_gdge ._dfef =_egg .NewStats (65536,1);};_gdge .Bitmap =_cb .New (int (_gdge .RegionSegment .BitmapWidth ),int (_gdge .RegionSegment .BitmapHeight ));_bbf :=int (uint32 (_gdge .Bitmap .Width +7)&(^uint32 (7)));
for _dgf :=0;_dgf < _gdge .Bitmap .Height ;_dgf ++{if _gdge .IsTPGDon {var _ecbb int ;_ecbb ,_bcb =_gdge .decodeSLTP ();if _bcb !=nil {return nil ,_bcb ;};_deea ^=_ecbb ;};if _deea ==1{if _dgf > 0{if _bcb =_gdge .copyLineAbove (_dgf );_bcb !=nil {return nil ,_bcb ;
};};}else {if _bcb =_gdge .decodeLine (_dgf ,_gdge .Bitmap .Width ,_bbf );_bcb !=nil {return nil ,_bcb ;};};};return _gdge .Bitmap ,nil ;};func (_gdc *GenericRegion )overrideAtTemplate0a (_cfg ,_ecdf ,_edb ,_fcac ,_fcc ,_affg int )int {if _gdc .GBAtOverride [0]{_cfg &=0xFFEF;
if _gdc .GBAtY [0]==0&&_gdc .GBAtX [0]>=-int8 (_fcc ){_cfg |=(_fcac >>uint (int8 (_affg )-_gdc .GBAtX [0]&0x1))<<4;}else {_cfg |=int (_gdc .getPixel (_ecdf +int (_gdc .GBAtX [0]),_edb +int (_gdc .GBAtY [0])))<<4;};};if _gdc .GBAtOverride [1]{_cfg &=0xFBFF;
if _gdc .GBAtY [1]==0&&_gdc .GBAtX [1]>=-int8 (_fcc ){_cfg |=(_fcac >>uint (int8 (_affg )-_gdc .GBAtX [1]&0x1))<<10;}else {_cfg |=int (_gdc .getPixel (_ecdf +int (_gdc .GBAtX [1]),_edb +int (_gdc .GBAtY [1])))<<10;};};if _gdc .GBAtOverride [2]{_cfg &=0xF7FF;
if _gdc .GBAtY [2]==0&&_gdc .GBAtX [2]>=-int8 (_fcc ){_cfg |=(_fcac >>uint (int8 (_affg )-_gdc .GBAtX [2]&0x1))<<11;}else {_cfg |=int (_gdc .getPixel (_ecdf +int (_gdc .GBAtX [2]),_edb +int (_gdc .GBAtY [2])))<<11;};};if _gdc .GBAtOverride [3]{_cfg &=0x7FFF;
if _gdc .GBAtY [3]==0&&_gdc .GBAtX [3]>=-int8 (_fcc ){_cfg |=(_fcac >>uint (int8 (_affg )-_gdc .GBAtX [3]&0x1))<<15;}else {_cfg |=int (_gdc .getPixel (_ecdf +int (_gdc .GBAtX [3]),_edb +int (_gdc .GBAtY [3])))<<15;};};return _cfg ;};const (ORandom OrganizationType =iota ;
OSequential ;);func (_aegd *template1 )form (_febb ,_fgaa ,_faa ,_ebbc ,_cead int16 )int16 {return ((_febb &0x02)<<8)|(_fgaa <<6)|((_faa &0x03)<<4)|(_ebbc <<1)|_cead ;};func (_bdcgg *SymbolDictionary )encodeSymbols (_cdbd _a .BinaryWriter )(_ecgc int ,_gfdc error ){const _cgac ="\u0065\u006e\u0063o\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c";
_caba :=_db .New ();_caba .Init ();_eecg ,_gfdc :=_bdcgg ._gbcac .SelectByIndexes (_bdcgg ._gcf );if _gfdc !=nil {return 0,_ag .Wrap (_gfdc ,_cgac ,"\u0069n\u0069\u0074\u0069\u0061\u006c");};_aeab :=map[*_cb .Bitmap ]int {};for _fgab ,_bge :=range _eecg .Values {_aeab [_bge ]=_fgab ;
};_eecg .SortByHeight ();var _cff ,_eaac int ;_bfgb ,_gfdc :=_eecg .GroupByHeight ();if _gfdc !=nil {return 0,_ag .Wrap (_gfdc ,_cgac ,"");};for _ ,_afcd :=range _bfgb .Values {_gfbb :=_afcd .Values [0].Height ;_ggbce :=_gfbb -_cff ;if _gfdc =_caba .EncodeInteger (_db .IADH ,_ggbce );
_gfdc !=nil {return 0,_ag .Wrapf (_gfdc ,_cgac ,"\u0049\u0041\u0044\u0048\u0020\u0066\u006f\u0072\u0020\u0064\u0068\u003a \u0027\u0025\u0064\u0027",_ggbce );};_cff =_gfbb ;_affc ,_efc :=_afcd .GroupByWidth ();if _efc !=nil {return 0,_ag .Wrapf (_efc ,_cgac ,"\u0068\u0065\u0069g\u0068\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_gfbb );
};var _cdge int ;for _ ,_degb :=range _affc .Values {for _ ,_bga :=range _degb .Values {_ebcd :=_bga .Width ;_ageg :=_ebcd -_cdge ;if _efc =_caba .EncodeInteger (_db .IADW ,_ageg );_efc !=nil {return 0,_ag .Wrapf (_efc ,_cgac ,"\u0049\u0041\u0044\u0057\u0020\u0066\u006f\u0072\u0020\u0064\u0077\u003a \u0027\u0025\u0064\u0027",_ageg );
};_cdge +=_ageg ;if _efc =_caba .EncodeBitmap (_bga ,false );_efc !=nil {return 0,_ag .Wrapf (_efc ,_cgac ,"H\u0065i\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u0020W\u0069\u0064\u0074\u0068: \u0025\u0064",_gfbb ,_ebcd );};_cdeea :=_aeab [_bga ];_bdcgg ._cdd [_cdeea ]=_eaac ;
_eaac ++;};};if _efc =_caba .EncodeOOB (_db .IADW );_efc !=nil {return 0,_ag .Wrap (_efc ,_cgac ,"\u0049\u0041\u0044\u0057");};};if _gfdc =_caba .EncodeInteger (_db .IAEX ,0);_gfdc !=nil {return 0,_ag .Wrap (_gfdc ,_cgac ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};if _gfdc =_caba .EncodeInteger (_db .IAEX ,len (_bdcgg ._gcf ));_gfdc !=nil {return 0,_ag .Wrap (_gfdc ,_cgac ,"\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0073\u0079m\u0062\u006f\u006c\u0073");};_caba .Final ();_fgbe ,_gfdc :=_caba .WriteTo (_cdbd );
if _gfdc !=nil {return 0,_ag .Wrap (_gfdc ,_cgac ,"\u0077\u0072i\u0074\u0069\u006e\u0067 \u0065\u006ec\u006f\u0064\u0065\u0072\u0020\u0063\u006f\u006et\u0065\u0078\u0074\u0020\u0074\u006f\u0020\u0027\u0077\u0027\u0020\u0077r\u0069\u0074\u0065\u0072");};
return int (_fgbe ),nil ;};func (_egced *PatternDictionary )readTemplate ()error {_cdaa ,_dgac :=_egced ._bbbf .ReadBits (2);if _dgac !=nil {return _dgac ;};_egced .HDTemplate =byte (_cdaa );return nil ;};func (_agba *PatternDictionary )Init (h *Header ,r _a .StreamReader )error {_agba ._bbbf =r ;
return _agba .parseHeader ();};func (_bdba *SymbolDictionary )setRetainedCodingContexts (_ffae *SymbolDictionary ){_bdba ._ddc =_ffae ._ddc ;_bdba .IsHuffmanEncoded =_ffae .IsHuffmanEncoded ;_bdba .UseRefinementAggregation =_ffae .UseRefinementAggregation ;
_bdba .SdTemplate =_ffae .SdTemplate ;_bdba .SdrTemplate =_ffae .SdrTemplate ;_bdba .SdATX =_ffae .SdATX ;_bdba .SdATY =_ffae .SdATY ;_bdba .SdrATX =_ffae .SdrATX ;_bdba .SdrATY =_ffae .SdrATY ;_bdba ._gffe =_ffae ._gffe ;};func (_aadd *PageInformationSegment )Size ()int {return 19};
type Header struct{SegmentNumber uint32 ;Type Type ;RetainFlag bool ;PageAssociation int ;PageAssociationFieldSize bool ;RTSegments []*Header ;HeaderLength int64 ;SegmentDataLength uint64 ;SegmentDataStartOffset uint64 ;Reader _a .StreamReader ;SegmentData Segmenter ;
RTSNumbers []int ;RetainBits []uint8 ;};func (_fcbf *SymbolDictionary )readRefinementAtPixels (_cced int )error {_fcbf .SdrATX =make ([]int8 ,_cced );_fcbf .SdrATY =make ([]int8 ,_cced );var (_eacd byte ;_dgbf error ;);for _gdaa :=0;_gdaa < _cced ;_gdaa ++{_eacd ,_dgbf =_fcbf ._bdgd .ReadByte ();
if _dgbf !=nil {return _dgbf ;};_fcbf .SdrATX [_gdaa ]=int8 (_eacd );_eacd ,_dgbf =_fcbf ._bdgd .ReadByte ();if _dgbf !=nil {return _dgbf ;};_fcbf .SdrATY [_gdaa ]=int8 (_eacd );};return nil ;};var _ templater =&template1 {};func (_fc *GenericRefinementRegion )GetRegionInfo ()*RegionSegment {return _fc .RegionInfo };
func (_dagc *HalftoneRegion )checkInput ()error {if _dagc .IsMMREncoded {if _dagc .HTemplate !=0{_b .Log .Debug ("\u0048\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030",_dagc .HTemplate );
};if _dagc .HSkipEnabled {_b .Log .Debug ("\u0048\u0053\u006b\u0069\u0070\u0045\u006e\u0061\u0062\u006c\u0065\u0064\u0020\u0030\u0020\u0025\u0076\u0020(\u0073\u0068\u006f\u0075\u006c\u0064\u0020c\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020v\u0061\u006c\u0075\u0065\u0020\u0066\u0061\u006c\u0073\u0065\u0029",_dagc .HSkipEnabled );
};};return nil ;};func (_ccadb *TableSegment )HtLow ()int32 {return _ccadb ._feae };type Type int ;func (_efcg *SymbolDictionary )retrieveImportSymbols ()error {for _ ,_fgccc :=range _efcg .Header .RTSegments {if _fgccc .Type ==0{_acde ,_aeaf :=_fgccc .GetSegmentData ();
if _aeaf !=nil {return _aeaf ;};_cfac ,_bfac :=_acde .(*SymbolDictionary );if !_bfac {return _eg .Errorf ("\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0044\u0061\u0074a\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u003a\u0020%\u0054",_acde );
};_bfcg ,_aeaf :=_cfac .GetDictionary ();if _aeaf !=nil {return _eg .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064 \u0073\u0065\u0067m\u0065\u006e\u0074 \u0077\u0069t\u0068\u0020\u0069\u006e\u0064\u0065x\u003a %\u0064\u0020\u0067\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0073",_fgccc .SegmentNumber ,_aeaf .Error ());
};_efcg ._cgeg =append (_efcg ._cgeg ,_bfcg ...);_efcg ._abfc +=_cfac .NumberOfExportedSymbols ;};};return nil ;};func (_cdfg *TextRegion )decodeSymInRefSize ()(int64 ,error ){const _ceab ="\u0064e\u0063o\u0064\u0065\u0053\u0079\u006dI\u006e\u0052e\u0066\u0053\u0069\u007a\u0065";
if _cdfg .SbHuffRSize ==0{_bcee ,_ffee :=_ga .GetStandardTable (1);if _ffee !=nil {return 0,_ag .Wrap (_ffee ,_ceab ,"");};return _bcee .Decode (_cdfg ._ceed );};if _cdfg ._gebe ==nil {var (_ebaa int ;_cedgd error ;);if _cdfg .SbHuffFS ==3{_ebaa ++;};if _cdfg .SbHuffDS ==3{_ebaa ++;
};if _cdfg .SbHuffDT ==3{_ebaa ++;};if _cdfg .SbHuffRDWidth ==3{_ebaa ++;};if _cdfg .SbHuffRDHeight ==3{_ebaa ++;};if _cdfg .SbHuffRDX ==3{_ebaa ++;};if _cdfg .SbHuffRDY ==3{_ebaa ++;};_cdfg ._gebe ,_cedgd =_cdfg .getUserTable (_ebaa );if _cedgd !=nil {return 0,_ag .Wrap (_cedgd ,_ceab ,"");
};};_dcd ,_gcgcg :=_cdfg ._gebe .Decode (_cdfg ._ceed );if _gcgcg !=nil {return 0,_ag .Wrap (_gcgcg ,_ceab ,"");};return _dcd ,nil ;};func (_edf *SymbolDictionary )encodeRefinementATFlags (_ebfc _a .BinaryWriter )(_ffeb int ,_dbddd error ){const _bgc ="\u0065\u006e\u0063od\u0065\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0041\u0054\u0046\u006c\u0061\u0067\u0073";
if !_edf .UseRefinementAggregation ||_edf .SdrTemplate !=0{return 0,nil ;};for _gbbf :=0;_gbbf < 2;_gbbf ++{if _dbddd =_ebfc .WriteByte (byte (_edf .SdrATX [_gbbf ]));_dbddd !=nil {return _ffeb ,_ag .Wrapf (_dbddd ,_bgc ,"\u0053\u0064\u0072\u0041\u0054\u0058\u005b\u0025\u0064\u005d",_gbbf );
};_ffeb ++;if _dbddd =_ebfc .WriteByte (byte (_edf .SdrATY [_gbbf ]));_dbddd !=nil {return _ffeb ,_ag .Wrapf (_dbddd ,_bgc ,"\u0053\u0064\u0072\u0041\u0054\u0059\u005b\u0025\u0064\u005d",_gbbf );};_ffeb ++;};return _ffeb ,nil ;};func (_gaad *Header )referenceSize ()uint {switch {case _gaad .SegmentNumber <=255:return 1;
case _gaad .SegmentNumber <=65535:return 2;default:return 4;};};func (_egd *GenericRefinementRegion )updateOverride ()error {if _egd .GrAtX ==nil ||_egd .GrAtY ==nil {return _g .New ("\u0041\u0054\u0020\u0070\u0069\u0078\u0065\u006c\u0073\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");
};if len (_egd .GrAtX )!=len (_egd .GrAtY ){return _g .New ("A\u0054\u0020\u0070\u0069xe\u006c \u0069\u006e\u0063\u006f\u006es\u0069\u0073\u0074\u0065\u006e\u0074");};_egd ._bfe =make ([]bool ,len (_egd .GrAtX ));switch _egd .TemplateID {case 0:if _egd .GrAtX [0]!=-1&&_egd .GrAtY [0]!=-1{_egd ._bfe [0]=true ;
_egd ._fgb =true ;};if _egd .GrAtX [1]!=-1&&_egd .GrAtY [1]!=-1{_egd ._bfe [1]=true ;_egd ._fgb =true ;};case 1:_egd ._fgb =false ;};return nil ;};func (_bdga *TableSegment )StreamReader ()_a .StreamReader {return _bdga ._gcdf };func (_bdf *PageInformationSegment )readContainsRefinement ()error {_fagb ,_ddgab :=_bdf ._afefc .ReadBit ();
if _ddgab !=nil {return _ddgab ;};if _fagb ==1{_bdf ._agfb =true ;};return nil ;};func NewGenericRegion (r _a .StreamReader )*GenericRegion {return &GenericRegion {RegionSegment :NewRegionSegment (r ),_dad :r };};func (_cceg *TextRegion )initSymbols ()error {const _cfbb ="i\u006e\u0069\u0074\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
for _ ,_gcac :=range _cceg .Header .RTSegments {if _gcac ==nil {return _ag .Error (_cfbb ,"\u006e\u0069\u006c\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020pr\u006f\u0076\u0069\u0064\u0065\u0064 \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0074\u0065\u0078\u0074\u0020\u0072\u0065g\u0069\u006f\u006e\u0020\u0053\u0079\u006d\u0062o\u006c\u0073");
};if _gcac .Type ==0{_ffed ,_egea :=_gcac .GetSegmentData ();if _egea !=nil {return _ag .Wrap (_egea ,_cfbb ,"");};_dgeg ,_gbd :=_ffed .(*SymbolDictionary );if !_gbd {return _ag .Error (_cfbb ,"\u0072e\u0066\u0065r\u0072\u0065\u0064 \u0054\u006f\u0020\u0053\u0065\u0067\u006de\u006e\u0074\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_dgeg ._acc =_cceg ._edfd ;_gbcf ,_egea :=_dgeg .GetDictionary ();if _egea !=nil {return _ag .Wrap (_egea ,_cfbb ,"");};_cceg .Symbols =append (_cceg .Symbols ,_gbcf ...);};};_cceg .NumberOfSymbols =uint32 (len (_cceg .Symbols ));return nil ;};type EncodeInitializer interface{InitEncode ();
};func (_fae *Header )readNumberOfReferredToSegments (_gdgf _a .StreamReader )(uint64 ,error ){const _bfg ="\u0072\u0065\u0061\u0064\u004e\u0075\u006d\u0062\u0065\u0072O\u0066\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
_gfgd ,_bcef :=_gdgf .ReadBits (3);if _bcef !=nil {return 0,_ag .Wrap (_bcef ,_bfg ,"\u0063\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0072\u0074\u0073");};_gfgd &=0xf;var _bade []byte ;if _gfgd <=4{_bade =make ([]byte ,5);for _eaa :=0;_eaa <=4;_eaa ++{_ddga ,_egef :=_gdgf .ReadBit ();
if _egef !=nil {return 0,_ag .Wrap (_egef ,_bfg ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_bade [_eaa ]=byte (_ddga );};}else {_gfgd ,_bcef =_gdgf .ReadBits (29);if _bcef !=nil {return 0,_bcef ;};_gfgd &=_fg .MaxInt32 ;_faae :=(_gfgd +8)>>3;
_faae <<=3;_bade =make ([]byte ,_faae );var _affb uint64 ;for _affb =0;_affb < _faae ;_affb ++{_dde ,_cede :=_gdgf .ReadBit ();if _cede !=nil {return 0,_ag .Wrap (_cede ,_bfg ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_bade [_affb ]=byte (_dde );
};};return _gfgd ,nil ;};func (_cgee *SymbolDictionary )setExportedSymbols (_efca []int ){for _gaba :=uint32 (0);_gaba < _cgee ._abfc +_cgee .NumberOfNewSymbols ;_gaba ++{if _efca [_gaba ]==1{var _bgaa *_cb .Bitmap ;if _gaba < _cgee ._abfc {_bgaa =_cgee ._cgeg [_gaba ];
}else {_bgaa =_cgee ._ffge [_gaba -_cgee ._abfc ];};_b .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u002d\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u0020\u0041\u0064\u0064 E\u0078\u0070\u006fr\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027%\u0073\u0027",_bgaa );
_cgee ._cdege =append (_cgee ._cdege ,_bgaa );};};};func (_ebfeb *SymbolDictionary )setRefinementAtPixels ()error {if !_ebfeb .UseRefinementAggregation ||_ebfeb .SdrTemplate !=0{return nil ;};if _eeec :=_ebfeb .readRefinementAtPixels (2);_eeec !=nil {return _eeec ;
};return nil ;};func (_dfgf *HalftoneRegion )GetRegionBitmap ()(*_cb .Bitmap ,error ){if _dfgf .HalftoneRegionBitmap !=nil {return _dfgf .HalftoneRegionBitmap ,nil ;};var _bgb error ;_dfgf .HalftoneRegionBitmap =_cb .New (int (_dfgf .RegionSegment .BitmapWidth ),int (_dfgf .RegionSegment .BitmapHeight ));
if _dfgf .Patterns ==nil ||len (_dfgf .Patterns )==0{_dfgf .Patterns ,_bgb =_dfgf .GetPatterns ();if _bgb !=nil {return nil ,_bgb ;};};if _dfgf .HDefaultPixel ==1{_dfgf .HalftoneRegionBitmap .SetDefaultPixel ();};_fcfd :=_fg .Ceil (_fg .Log (float64 (len (_dfgf .Patterns )))/_fg .Log (2));
_dced :=int (_fcfd );var _aggd [][]int ;_aggd ,_bgb =_dfgf .grayScaleDecoding (_dced );if _bgb !=nil {return nil ,_bgb ;};if _bgb =_dfgf .renderPattern (_aggd );_bgb !=nil {return nil ,_bgb ;};return _dfgf .HalftoneRegionBitmap ,nil ;};func _ge (_dfcd _a .StreamReader ,_ffc *Header )*GenericRefinementRegion {return &GenericRefinementRegion {_ec :_dfcd ,RegionInfo :NewRegionSegment (_dfcd ),_ff :_ffc ,_bf :&template0 {},_eb :&template1 {}};
};func _bagc (_dcbc int )int {if _dcbc ==0{return 0;};_dcbc |=_dcbc >>1;_dcbc |=_dcbc >>2;_dcbc |=_dcbc >>4;_dcbc |=_dcbc >>8;_dcbc |=_dcbc >>16;return (_dcbc +1)>>1;};func (_ebbe *PatternDictionary )extractPatterns (_cebe *_cb .Bitmap )error {var _cgcg int ;
_feeb :=make ([]*_cb .Bitmap ,_ebbe .GrayMax +1);for _cgcg <=int (_ebbe .GrayMax ){_cdcf :=int (_ebbe .HdpWidth )*_cgcg ;_agcd :=_e .Rect (_cdcf ,0,_cdcf +int (_ebbe .HdpWidth ),int (_ebbe .HdpHeight ));_bfefb ,_gbca :=_cb .Extract (_agcd ,_cebe );if _gbca !=nil {return _gbca ;
};_feeb [_cgcg ]=_bfefb ;_cgcg ++;};_ebbe .Patterns =_feeb ;return nil ;};func (_dgdf *PageInformationSegment )encodeFlags (_aebc _a .BinaryWriter )(_dbdg error ){const _ceec ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _dbdg =_aebc .SkipBits (1);
_dbdg !=nil {return _ag .Wrap (_dbdg ,_ceec ,"\u0072\u0065\u0073e\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074");};var _cfdd int ;if _dgdf .CombinationOperatorOverrideAllowed (){_cfdd =1;};if _dbdg =_aebc .WriteBit (_cfdd );_dbdg !=nil {return _ag .Wrap (_dbdg ,_ceec ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0064\u0065\u006e");
};_cfdd =0;if _dgdf ._ccaf {_cfdd =1;};if _dbdg =_aebc .WriteBit (_cfdd );_dbdg !=nil {return _ag .Wrap (_dbdg ,_ceec ,"\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0061\u0075\u0078i\u006ci\u0061r\u0079\u0020\u0062\u0075\u0066\u0066\u0065r");};if _dbdg =_aebc .WriteBit ((int (_dgdf ._efab )>>1)&0x01);
_dbdg !=nil {return _ag .Wrap (_dbdg ,_ceec ,"\u0063\u006f\u006d\u0062\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006f\u0070\u0065\u0072\u0061\u0074o\u0072\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0062\u0069\u0074");};if _dbdg =_aebc .WriteBit (int (_dgdf ._efab )&0x01);
_dbdg !=nil {return _ag .Wrap (_dbdg ,_ceec ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0062\u0069\u0074");};_cfdd =int (_dgdf .DefaultPixelValue );
if _dbdg =_aebc .WriteBit (_cfdd );_dbdg !=nil {return _ag .Wrap (_dbdg ,_ceec ,"\u0064e\u0066\u0061\u0075\u006c\u0074\u0020\u0070\u0061\u0067\u0065\u0020p\u0069\u0078\u0065\u006c\u0020\u0076\u0061\u006c\u0075\u0065");};_cfdd =0;if _dgdf ._agfb {_cfdd =1;
};if _dbdg =_aebc .WriteBit (_cfdd );_dbdg !=nil {return _ag .Wrap (_dbdg ,_ceec ,"\u0063\u006f\u006e\u0074ai\u006e\u0073\u0020\u0072\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074");};_cfdd =0;if _dgdf .IsLossless {_cfdd =1;};if _dbdg =_aebc .WriteBit (_cfdd );
_dbdg !=nil {return _ag .Wrap (_dbdg ,_ceec ,"p\u0061\u0067\u0065\u0020\u0069\u0073 \u0065\u0076\u0065\u006e\u0074\u0075\u0061\u006c\u006cy\u0020\u006c\u006fs\u0073l\u0065\u0073\u0073");};return nil ;};func (_cabe *HalftoneRegion )GetRegionInfo ()*RegionSegment {return _cabe .RegionSegment };
type Regioner interface{GetRegionBitmap ()(*_cb .Bitmap ,error );GetRegionInfo ()*RegionSegment ;};type OrganizationType uint8 ;func (_fdgb *HalftoneRegion )grayScaleDecoding (_dgbe int )([][]int ,error ){var (_beef []int8 ;_gcecg []int8 ;);if !_fdgb .IsMMREncoded {_beef =make ([]int8 ,4);
_gcecg =make ([]int8 ,4);if _fdgb .HTemplate <=1{_beef [0]=3;}else if _fdgb .HTemplate >=2{_beef [0]=2;};_gcecg [0]=-1;_beef [1]=-3;_gcecg [1]=-1;_beef [2]=2;_gcecg [2]=-2;_beef [3]=-2;_gcecg [3]=-2;};_fcbe :=make ([]*_cb .Bitmap ,_dgbe );_cdea :=NewGenericRegion (_fdgb ._dbdd );
_cdea .setParametersMMR (_fdgb .IsMMREncoded ,_fdgb .DataOffset ,_fdgb .DataLength ,_fdgb .HGridHeight ,_fdgb .HGridWidth ,_fdgb .HTemplate ,false ,_fdgb .HSkipEnabled ,_beef ,_gcecg );_fagc :=_dgbe -1;var _cfce error ;_fcbe [_fagc ],_cfce =_cdea .GetRegionBitmap ();
if _cfce !=nil {return nil ,_cfce ;};for _fagc > 0{_fagc --;_cdea .Bitmap =nil ;_fcbe [_fagc ],_cfce =_cdea .GetRegionBitmap ();if _cfce !=nil {return nil ,_cfce ;};if _cfce =_fdgb .combineGrayscalePlanes (_fcbe ,_fagc );_cfce !=nil {return nil ,_cfce ;
};};return _fdgb .computeGrayScalePlanes (_fcbe ,_dgbe );};func (_dgde *Header )readSegmentDataLength (_adbf _a .StreamReader )(_gaga error ){_dgde .SegmentDataLength ,_gaga =_adbf .ReadBits (32);if _gaga !=nil {return _gaga ;};_dgde .SegmentDataLength &=_fg .MaxInt32 ;
return nil ;};func (_fgegc *SymbolDictionary )setSymbolsArray ()error {if _fgegc ._cgeg ==nil {if _cdbg :=_fgegc .retrieveImportSymbols ();_cdbg !=nil {return _cdbg ;};};if _fgegc ._cbfdc ==nil {_fgegc ._cbfdc =append (_fgegc ._cbfdc ,_fgegc ._cgeg ...);
};return nil ;};type EndOfStripe struct{_dfg _a .StreamReader ;_aa int ;};func (_gbfed *PatternDictionary )parseHeader ()error {_b .Log .Trace ("\u005b\u0050\u0041\u0054\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054I\u004f\u004e\u0041\u0052\u0059\u005d[\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d\u0020b\u0065\u0067\u0069\u006e");
defer func (){_b .Log .Trace ("\u005b\u0050\u0041T\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u005b\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
}();_ ,_aegg :=_gbfed ._bbbf .ReadBits (5);if _aegg !=nil {return _aegg ;};if _aegg =_gbfed .readTemplate ();_aegg !=nil {return _aegg ;};if _aegg =_gbfed .readIsMMREncoded ();_aegg !=nil {return _aegg ;};if _aegg =_gbfed .readPatternWidthAndHeight ();
_aegg !=nil {return _aegg ;};if _aegg =_gbfed .readGrayMax ();_aegg !=nil {return _aegg ;};if _aegg =_gbfed .computeSegmentDataStructure ();_aegg !=nil {return _aegg ;};return _gbfed .checkInput ();};var (_ Regioner =&TextRegion {};_ Segmenter =&TextRegion {};
);func (_fd *GenericRefinementRegion )Init (header *Header ,r _a .StreamReader )error {_fd ._ff =header ;_fd ._ec =r ;_fd .RegionInfo =NewRegionSegment (r );return _fd .parseHeader ();};type HalftoneRegion struct{_dbdd _a .StreamReader ;_badc *Header ;
DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;HDefaultPixel int8 ;CombinationOperator _cb .CombinationOperator ;HSkipEnabled bool ;HTemplate byte ;IsMMREncoded bool ;HGridWidth uint32 ;
HGridHeight uint32 ;HGridX int32 ;HGridY int32 ;HRegionX uint16 ;HRegionY uint16 ;HalftoneRegionBitmap *_cb .Bitmap ;Patterns []*_cb .Bitmap ;};func (_gcce *PatternDictionary )GetDictionary ()([]*_cb .Bitmap ,error ){if _gcce .Patterns !=nil {return _gcce .Patterns ,nil ;
};if !_gcce .IsMMREncoded {_gcce .setGbAtPixels ();};_ddag :=NewGenericRegion (_gcce ._bbbf );_ddag .setParametersMMR (_gcce .IsMMREncoded ,_gcce .DataOffset ,_gcce .DataLength ,uint32 (_gcce .HdpHeight ),(_gcce .GrayMax +1)*uint32 (_gcce .HdpWidth ),_gcce .HDTemplate ,false ,false ,_gcce .GBAtX ,_gcce .GBAtY );
_ddb ,_eab :=_ddag .GetRegionBitmap ();if _eab !=nil {return nil ,_eab ;};if _eab =_gcce .extractPatterns (_ddb );_eab !=nil {return nil ,_eab ;};return _gcce .Patterns ,nil ;};func (_fgeg *Header )readSegmentNumber (_eegfg _a .StreamReader )error {const _bgg ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";
_fbdg :=make ([]byte ,4);_ ,_fbec :=_eegfg .Read (_fbdg );if _fbec !=nil {return _ag .Wrap (_fbec ,_bgg ,"");};_fgeg .SegmentNumber =_d .BigEndian .Uint32 (_fbdg );return nil ;};func (_cbb *SymbolDictionary )addSymbol (_cfe Regioner )error {_bafa ,_cgfc :=_cfe .GetRegionBitmap ();
if _cgfc !=nil {return _cgfc ;};_cbb ._ffge [_cbb ._bbdg ]=_bafa ;_cbb ._cbfdc =append (_cbb ._cbfdc ,_bafa );_b .Log .Trace ("\u005b\u0053YM\u0042\u004f\u004c \u0044\u0049\u0043\u0054ION\u0041RY\u005d\u0020\u0041\u0064\u0064\u0065\u0064 s\u0079\u006d\u0062\u006f\u006c\u003a\u0020%\u0073",_bafa );
return nil ;};func NewRegionSegment (r _a .StreamReader )*RegionSegment {return &RegionSegment {_eadg :r }};func (_beff *TextRegion )readHuffmanFlags ()error {var (_gegf int ;_fcabe uint64 ;_efeb error ;);_ ,_efeb =_beff ._ceed .ReadBit ();if _efeb !=nil {return _efeb ;
};_gegf ,_efeb =_beff ._ceed .ReadBit ();if _efeb !=nil {return _efeb ;};_beff .SbHuffRSize =int8 (_gegf );_fcabe ,_efeb =_beff ._ceed .ReadBits (2);if _efeb !=nil {return _efeb ;};_beff .SbHuffRDY =int8 (_fcabe )&0xf;_fcabe ,_efeb =_beff ._ceed .ReadBits (2);
if _efeb !=nil {return _efeb ;};_beff .SbHuffRDX =int8 (_fcabe )&0xf;_fcabe ,_efeb =_beff ._ceed .ReadBits (2);if _efeb !=nil {return _efeb ;};_beff .SbHuffRDHeight =int8 (_fcabe )&0xf;_fcabe ,_efeb =_beff ._ceed .ReadBits (2);if _efeb !=nil {return _efeb ;
};_beff .SbHuffRDWidth =int8 (_fcabe )&0xf;_fcabe ,_efeb =_beff ._ceed .ReadBits (2);if _efeb !=nil {return _efeb ;};_beff .SbHuffDT =int8 (_fcabe )&0xf;_fcabe ,_efeb =_beff ._ceed .ReadBits (2);if _efeb !=nil {return _efeb ;};_beff .SbHuffDS =int8 (_fcabe )&0xf;
_fcabe ,_efeb =_beff ._ceed .ReadBits (2);if _efeb !=nil {return _efeb ;};_beff .SbHuffFS =int8 (_fcabe )&0xf;return nil ;};func (_gdfc *TextRegion )readUseRefinement ()error {if !_gdfc .UseRefinement ||_gdfc .SbrTemplate !=0{return nil ;};var (_afbc byte ;
_gcgg error ;);_gdfc .SbrATX =make ([]int8 ,2);_gdfc .SbrATY =make ([]int8 ,2);_afbc ,_gcgg =_gdfc ._ceed .ReadByte ();if _gcgg !=nil {return _gcgg ;};_gdfc .SbrATX [0]=int8 (_afbc );_afbc ,_gcgg =_gdfc ._ceed .ReadByte ();if _gcgg !=nil {return _gcgg ;
};_gdfc .SbrATY [0]=int8 (_afbc );_afbc ,_gcgg =_gdfc ._ceed .ReadByte ();if _gcgg !=nil {return _gcgg ;};_gdfc .SbrATX [1]=int8 (_afbc );_afbc ,_gcgg =_gdfc ._ceed .ReadByte ();if _gcgg !=nil {return _gcgg ;};_gdfc .SbrATY [1]=int8 (_afbc );return nil ;
};func (_bcbb *SymbolDictionary )decodeThroughTextRegion (_gggfc ,_fdcb ,_aggdc uint32 )error {if _bcbb ._eba ==nil {_bcbb ._eba =_fagaf (_bcbb ._bdgd ,nil );_bcbb ._eba .setContexts (_bcbb ._gffe ,_egg .NewStats (512,1),_egg .NewStats (512,1),_egg .NewStats (512,1),_egg .NewStats (512,1),_bcbb ._acc ,_egg .NewStats (512,1),_egg .NewStats (512,1),_egg .NewStats (512,1),_egg .NewStats (512,1));
};if _bagd :=_bcbb .setSymbolsArray ();_bagd !=nil {return _bagd ;};_bcbb ._eba .setParameters (_bcbb ._ddc ,_bcbb .IsHuffmanEncoded ,true ,_gggfc ,_fdcb ,_aggdc ,1,_bcbb ._abfc +_bcbb ._bbdg ,0,0,0,1,0,0,0,0,0,0,0,0,0,_bcbb .SdrTemplate ,_bcbb .SdrATX ,_bcbb .SdrATY ,_bcbb ._cbfdc ,_bcbb ._dbc );
return _bcbb .addSymbol (_bcbb ._eba );};func (_gddg *GenericRegion )setParametersMMR (_bbdb bool ,_fcca ,_faac int64 ,_gcga ,_bce uint32 ,_fff byte ,_ebcc ,_ega bool ,_ggcc ,_dfdb []int8 ){_gddg .DataOffset =_fcca ;_gddg .DataLength =_faac ;_gddg .RegionSegment =&RegionSegment {};
_gddg .RegionSegment .BitmapHeight =_gcga ;_gddg .RegionSegment .BitmapWidth =_bce ;_gddg .GBTemplate =_fff ;_gddg .IsMMREncoded =_bbdb ;_gddg .IsTPGDon =_ebcc ;_gddg .GBAtX =_ggcc ;_gddg .GBAtY =_dfdb ;};var _ _ga .BasicTabler =&TableSegment {};func (_dcea *PatternDictionary )readGrayMax ()error {_ffgg ,_efbc :=_dcea ._bbbf .ReadBits (32);
if _efbc !=nil {return _efbc ;};_dcea .GrayMax =uint32 (_ffgg &_fg .MaxUint32 );return nil ;};func (_dccg *SymbolDictionary )GetDictionary ()([]*_cb .Bitmap ,error ){_b .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c-\u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){_b .Log .Trace ("\u005b\u0053\u0059M\u0042\u004f\u004c\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
_b .Log .Trace ("\u005b\u0053Y\u004d\u0042\u004f\u004c\u002dD\u0049\u0043\u0054\u0049\u004fN\u0041\u0052\u0059\u005d\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020\u000a\u0045\u0078\u003a\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u000a\u006e\u0065\u0077\u003a\u0027\u0025\u0073\u0027",_dccg ._cdege ,_dccg ._ffge );
}();if _dccg ._cdege ==nil {var _ffbfb error ;if _dccg .UseRefinementAggregation {_dccg ._dbc =_dccg .getSbSymCodeLen ();};if !_dccg .IsHuffmanEncoded {if _ffbfb =_dccg .setCodingStatistics ();_ffbfb !=nil {return nil ,_ffbfb ;};};_dccg ._ffge =make ([]*_cb .Bitmap ,_dccg .NumberOfNewSymbols );
var _dcabe []int ;if _dccg .IsHuffmanEncoded &&!_dccg .UseRefinementAggregation {_dcabe =make ([]int ,_dccg .NumberOfNewSymbols );};if _ffbfb =_dccg .setSymbolsArray ();_ffbfb !=nil {return nil ,_ffbfb ;};var _fbee ,_gcae int64 ;_dccg ._bbdg =0;for _dccg ._bbdg < _dccg .NumberOfNewSymbols {_gcae ,_ffbfb =_dccg .decodeHeightClassDeltaHeight ();
if _ffbfb !=nil {return nil ,_ffbfb ;};_fbee +=_gcae ;var _bcgd ,_eddb uint32 ;_eaaaa :=int64 (_dccg ._bbdg );for {var _aaaa int64 ;_aaaa ,_ffbfb =_dccg .decodeDifferenceWidth ();if _dfa .Is (_ffbfb ,_ae .ErrOOB ){break ;};if _ffbfb !=nil {return nil ,_ffbfb ;
};if _dccg ._bbdg >=_dccg .NumberOfNewSymbols {break ;};_bcgd +=uint32 (_aaaa );_eddb +=_bcgd ;if !_dccg .IsHuffmanEncoded ||_dccg .UseRefinementAggregation {if !_dccg .UseRefinementAggregation {_ffbfb =_dccg .decodeDirectlyThroughGenericRegion (_bcgd ,uint32 (_fbee ));
if _ffbfb !=nil {return nil ,_ffbfb ;};}else {_ffbfb =_dccg .decodeAggregate (_bcgd ,uint32 (_fbee ));if _ffbfb !=nil {return nil ,_ffbfb ;};};}else if _dccg .IsHuffmanEncoded &&!_dccg .UseRefinementAggregation {_dcabe [_dccg ._bbdg ]=int (_bcgd );};_dccg ._bbdg ++;
};if _dccg .IsHuffmanEncoded &&!_dccg .UseRefinementAggregation {var _edbf int64 ;if _dccg .SdHuffBMSizeSelection ==0{var _affd _ga .Tabler ;_affd ,_ffbfb =_ga .GetStandardTable (1);if _ffbfb !=nil {return nil ,_ffbfb ;};_edbf ,_ffbfb =_affd .Decode (_dccg ._bdgd );
if _ffbfb !=nil {return nil ,_ffbfb ;};}else {_edbf ,_ffbfb =_dccg .huffDecodeBmSize ();if _ffbfb !=nil {return nil ,_ffbfb ;};};_dccg ._bdgd .Align ();var _bgab *_cb .Bitmap ;_bgab ,_ffbfb =_dccg .decodeHeightClassCollectiveBitmap (_edbf ,uint32 (_fbee ),_eddb );
if _ffbfb !=nil {return nil ,_ffbfb ;};_ffbfb =_dccg .decodeHeightClassBitmap (_bgab ,_eaaaa ,int (_fbee ),_dcabe );if _ffbfb !=nil {return nil ,_ffbfb ;};};};_ffbfbb ,_ffbfb :=_dccg .getToExportFlags ();if _ffbfb !=nil {return nil ,_ffbfb ;};_dccg .setExportedSymbols (_ffbfbb );
};return _dccg ._cdege ,nil ;};func (_abcfc *TextRegion )computeSymbolCodeLength ()error {if _abcfc .IsHuffmanEncoded {return _abcfc .symbolIDCodeLengths ();};_abcfc ._eafa =int8 (_fg .Ceil (_fg .Log (float64 (_abcfc .NumberOfSymbols ))/_fg .Log (2)));
return nil ;};func (_bfd *GenericRegion )Encode (w _a .BinaryWriter )(_aad int ,_aebb error ){const _abee ="G\u0065n\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069o\u006e\u002e\u0045\u006eco\u0064\u0065";if _bfd .Bitmap ==nil {return 0,_ag .Error (_abee ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");
};_cbg ,_aebb :=_bfd .RegionSegment .Encode (w );if _aebb !=nil {return 0,_ag .Wrap (_aebb ,_abee ,"\u0052\u0065\u0067\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074");};_aad +=_cbg ;if _aebb =w .SkipBits (4);_aebb !=nil {return _aad ,_ag .Wrap (_aebb ,_abee ,"\u0073k\u0069p\u0020\u0072\u0065\u0073\u0065r\u0076\u0065d\u0020\u0062\u0069\u0074\u0073");
};var _bbbc int ;if _bfd .IsTPGDon {_bbbc =1;};if _aebb =w .WriteBit (_bbbc );_aebb !=nil {return _aad ,_ag .Wrap (_aebb ,_abee ,"\u0074\u0070\u0067\u0064\u006f\u006e");};_bbbc =0;if _aebb =w .WriteBit (int (_bfd .GBTemplate >>1)&0x01);_aebb !=nil {return _aad ,_ag .Wrap (_aebb ,_abee ,"f\u0069r\u0073\u0074\u0020\u0067\u0062\u0074\u0065\u006dp\u006c\u0061\u0074\u0065 b\u0069\u0074");
};if _aebb =w .WriteBit (int (_bfd .GBTemplate )&0x01);_aebb !=nil {return _aad ,_ag .Wrap (_aebb ,_abee ,"s\u0065\u0063\u006f\u006ed \u0067b\u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u0062\u0069\u0074");};if _bfd .UseMMR {_bbbc =1;};if _aebb =w .WriteBit (_bbbc );
_aebb !=nil {return _aad ,_ag .Wrap (_aebb ,_abee ,"u\u0073\u0065\u0020\u004d\u004d\u0052\u0020\u0062\u0069\u0074");};_aad ++;if _cbg ,_aebb =_bfd .writeGBAtPixels (w );_aebb !=nil {return _aad ,_ag .Wrap (_aebb ,_abee ,"");};_aad +=_cbg ;_aegf :=_db .New ();
if _aebb =_aegf .EncodeBitmap (_bfd .Bitmap ,_bfd .IsTPGDon );_aebb !=nil {return _aad ,_ag .Wrap (_aebb ,_abee ,"");};_aegf .Final ();var _daa int64 ;if _daa ,_aebb =_aegf .WriteTo (w );_aebb !=nil {return _aad ,_ag .Wrap (_aebb ,_abee ,"");};_aad +=int (_daa );
return _aad ,nil ;};func (_beag *template1 )setIndex (_bad *_egg .DecoderStats ){_bad .SetIndex (0x080)};func (_gbcg *PatternDictionary )readIsMMREncoded ()error {_eacf ,_gfce :=_gbcg ._bbbf .ReadBit ();if _gfce !=nil {return _gfce ;};if _eacf !=0{_gbcg .IsMMREncoded =true ;
};return nil ;};func (_bebb *HalftoneRegion )Init (hd *Header ,r _a .StreamReader )error {_bebb ._dbdd =r ;_bebb ._badc =hd ;_bebb .RegionSegment =NewRegionSegment (r );return _bebb .parseHeader ();};func (_eabc *RegionSegment )Encode (w _a .BinaryWriter )(_febg int ,_gacd error ){const _efdbd ="R\u0065g\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065n\u0074\u002e\u0045\u006eco\u0064\u0065";
_afff :=make ([]byte ,4);_d .BigEndian .PutUint32 (_afff ,_eabc .BitmapWidth );_febg ,_gacd =w .Write (_afff );if _gacd !=nil {return 0,_ag .Wrap (_gacd ,_efdbd ,"\u0057\u0069\u0064t\u0068");};_d .BigEndian .PutUint32 (_afff ,_eabc .BitmapHeight );var _dcab int ;
_dcab ,_gacd =w .Write (_afff );if _gacd !=nil {return 0,_ag .Wrap (_gacd ,_efdbd ,"\u0048\u0065\u0069\u0067\u0068\u0074");};_febg +=_dcab ;_d .BigEndian .PutUint32 (_afff ,_eabc .XLocation );_dcab ,_gacd =w .Write (_afff );if _gacd !=nil {return 0,_ag .Wrap (_gacd ,_efdbd ,"\u0058L\u006f\u0063\u0061\u0074\u0069\u006fn");
};_febg +=_dcab ;_d .BigEndian .PutUint32 (_afff ,_eabc .YLocation );_dcab ,_gacd =w .Write (_afff );if _gacd !=nil {return 0,_ag .Wrap (_gacd ,_efdbd ,"\u0059L\u006f\u0063\u0061\u0074\u0069\u006fn");};_febg +=_dcab ;if _gacd =w .WriteByte (byte (_eabc .CombinaionOperator )&0x07);
_gacd !=nil {return 0,_ag .Wrap (_gacd ,_efdbd ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};_febg ++;return _febg ,nil ;};func (_aba *template0 )form (_ddf ,_fga ,_febc ,_fbd ,_abcf int16 )int16 {return (_ddf <<10)|(_fga <<7)|(_febc <<4)|(_fbd <<1)|_abcf ;
};func (_dba *GenericRegion )decodeTemplate2 (_eecb ,_geeg ,_dbaf int ,_dgc ,_fca int )(_eggf error ){const _aadg ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0032";var (_bfa ,_geec int ;_cedd ,_cgfgd int ;_bfag byte ;_cgcf ,_ccfc int ;
);if _eecb >=1{_bfag ,_eggf =_dba .Bitmap .GetByte (_fca );if _eggf !=nil {return _ag .Wrap (_eggf ,_aadg ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0031");};_cedd =int (_bfag );};if _eecb >=2{_bfag ,_eggf =_dba .Bitmap .GetByte (_fca -_dba .Bitmap .RowStride );
if _eggf !=nil {return _ag .Wrap (_eggf ,_aadg ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0032");};_cgfgd =int (_bfag )<<4;};_bfa =(_cedd >>3&0x7c)|(_cgfgd >>3&0x380);for _gcg :=0;_gcg < _dbaf ;_gcg =_cgcf {var (_eggc byte ;
_eae int ;);_cgcf =_gcg +8;if _cgff :=_geeg -_gcg ;_cgff > 8{_eae =8;}else {_eae =_cgff ;};if _eecb > 0{_cedd <<=8;if _cgcf < _geeg {_bfag ,_eggf =_dba .Bitmap .GetByte (_fca +1);if _eggf !=nil {return _ag .Wrap (_eggf ,_aadg ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0030");
};_cedd |=int (_bfag );};};if _eecb > 1{_cgfgd <<=8;if _cgcf < _geeg {_bfag ,_eggf =_dba .Bitmap .GetByte (_fca -_dba .Bitmap .RowStride +1);if _eggf !=nil {return _ag .Wrap (_eggf ,_aadg ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0031");
};_cgfgd |=int (_bfag )<<4;};};for _gcbg :=0;_gcbg < _eae ;_gcbg ++{_bag :=uint (10-_gcbg );if _dba ._cgg {_geec =_dba .overrideAtTemplate2 (_bfa ,_gcg +_gcbg ,_eecb ,int (_eggc ),_gcbg );_dba ._dfef .SetIndex (int32 (_geec ));}else {_dba ._dfef .SetIndex (int32 (_bfa ));
};_ccfc ,_eggf =_dba ._age .DecodeBit (_dba ._dfef );if _eggf !=nil {return _ag .Wrap (_eggf ,_aadg ,"");};_eggc |=byte (_ccfc <<uint (7-_gcbg ));_bfa =((_bfa &0x1bd)<<1)|_ccfc |((_cedd >>_bag )&0x4)|((_cgfgd >>_bag )&0x80);};if _fce :=_dba .Bitmap .SetByte (_dgc ,_eggc );
_fce !=nil {return _ag .Wrap (_fce ,_aadg ,"");};_dgc ++;_fca ++;};return nil ;};func (_gab *PageInformationSegment )CombinationOperatorOverrideAllowed ()bool {return _gab ._eee };type templater interface{form (_fed ,_agbd ,_eeg ,_cbd ,_eedd int16 )int16 ;
setIndex (_fdf *_egg .DecoderStats );};func (_beb *GenericRegion )decodeSLTP ()(int ,error ){switch _beb .GBTemplate {case 0:_beb ._dfef .SetIndex (0x9B25);case 1:_beb ._dfef .SetIndex (0x795);case 2:_beb ._dfef .SetIndex (0xE5);case 3:_beb ._dfef .SetIndex (0x195);
};return _beb ._age .DecodeBit (_beb ._dfef );};type TextRegion struct{_ceed _a .StreamReader ;RegionInfo *RegionSegment ;SbrTemplate int8 ;SbDsOffset int8 ;DefaultPixel int8 ;CombinationOperator _cb .CombinationOperator ;IsTransposed int8 ;ReferenceCorner int16 ;
LogSBStrips int16 ;UseRefinement bool ;IsHuffmanEncoded bool ;SbHuffRSize int8 ;SbHuffRDY int8 ;SbHuffRDX int8 ;SbHuffRDHeight int8 ;SbHuffRDWidth int8 ;SbHuffDT int8 ;SbHuffDS int8 ;SbHuffFS int8 ;SbrATX []int8 ;SbrATY []int8 ;NumberOfSymbolInstances uint32 ;
_ebcg int64 ;SbStrips int8 ;NumberOfSymbols uint32 ;RegionBitmap *_cb .Bitmap ;Symbols []*_cb .Bitmap ;_ffdcg *_egg .Decoder ;_bged *GenericRefinementRegion ;_cfaba *_egg .DecoderStats ;_dbdb *_egg .DecoderStats ;_dddg *_egg .DecoderStats ;_bgge *_egg .DecoderStats ;
_ddbc *_egg .DecoderStats ;_deed *_egg .DecoderStats ;_bdcga *_egg .DecoderStats ;_edfd *_egg .DecoderStats ;_afeb *_egg .DecoderStats ;_fddc *_egg .DecoderStats ;_bfcd *_egg .DecoderStats ;_eafa int8 ;_ggcg *_ga .FixedSizeTable ;Header *Header ;_debb _ga .Tabler ;
_fbbb _ga .Tabler ;_ebgg _ga .Tabler ;_dfdfe _ga .Tabler ;_eccf _ga .Tabler ;_agfd _ga .Tabler ;_bbfd _ga .Tabler ;_gebe _ga .Tabler ;_acea ,_agaa map[int ]int ;_fbfgd []int ;_egcc *_cb .Points ;_gfbg *_cb .Bitmaps ;_bedbb *_dfc .IntSlice ;_bgd ,_eada int ;
_gfgb *_cb .Boxes ;};type template0 struct{};func (_abd *GenericRegion )getPixel (_fedb ,_fdg int )int8 {if _fedb < 0||_fedb >=_abd .Bitmap .Width {return 0;};if _fdg < 0||_fdg >=_abd .Bitmap .Height {return 0;};if _abd .Bitmap .GetPixel (_fedb ,_fdg ){return 1;
};return 0;};func (_acg *EndOfStripe )Init (h *Header ,r _a .StreamReader )error {_acg ._dfg =r ;return _acg .parseHeader (h ,r );};func (_geae *TextRegion )Init (header *Header ,r _a .StreamReader )error {_geae .Header =header ;_geae ._ceed =r ;_geae .RegionInfo =NewRegionSegment (_geae ._ceed );
return _geae .parseHeader ();};func (_ege *GenericRefinementRegion )readAtPixels ()error {_ege .GrAtX =make ([]int8 ,2);_ege .GrAtY =make ([]int8 ,2);_dfb ,_cbe :=_ege ._ec .ReadByte ();if _cbe !=nil {return _cbe ;};_ege .GrAtX [0]=int8 (_dfb );_dfb ,_cbe =_ege ._ec .ReadByte ();
if _cbe !=nil {return _cbe ;};_ege .GrAtY [0]=int8 (_dfb );_dfb ,_cbe =_ege ._ec .ReadByte ();if _cbe !=nil {return _cbe ;};_ege .GrAtX [1]=int8 (_dfb );_dfb ,_cbe =_ege ._ec .ReadByte ();if _cbe !=nil {return _cbe ;};_ege .GrAtY [1]=int8 (_dfb );return nil ;
};func (_add *TextRegion )GetRegionBitmap ()(*_cb .Bitmap ,error ){if _add .RegionBitmap !=nil {return _add .RegionBitmap ,nil ;};if !_add .IsHuffmanEncoded {if _bgac :=_add .setCodingStatistics ();_bgac !=nil {return nil ,_bgac ;};};if _gfgca :=_add .createRegionBitmap ();
_gfgca !=nil {return nil ,_gfgca ;};if _adcgb :=_add .decodeSymbolInstances ();_adcgb !=nil {return nil ,_adcgb ;};return _add .RegionBitmap ,nil ;};func (_afefa *PageInformationSegment )readIsLossless ()error {_fbcg ,_febcf :=_afefa ._afefc .ReadBit ();
if _febcf !=nil {return _febcf ;};if _fbcg ==1{_afefa .IsLossless =true ;};return nil ;};func (_abbf *Header )writeSegmentPageAssociation (_afbg _a .BinaryWriter )(_adfb int ,_bccb error ){const _fdab ="w\u0072\u0069\u0074\u0065\u0053\u0065g\u006d\u0065\u006e\u0074\u0050\u0061\u0067\u0065\u0041s\u0073\u006f\u0063i\u0061t\u0069\u006f\u006e";
if _abbf .pageSize ()!=4{if _bccb =_afbg .WriteByte (byte (_abbf .PageAssociation ));_bccb !=nil {return 0,_ag .Wrap (_bccb ,_fdab ,"\u0070\u0061\u0067\u0065\u0053\u0069\u007a\u0065\u0020\u0021\u003d\u0020\u0034");};return 1,nil ;};_fccac :=make ([]byte ,4);
_d .BigEndian .PutUint32 (_fccac ,uint32 (_abbf .PageAssociation ));if _adfb ,_bccb =_afbg .Write (_fccac );_bccb !=nil {return 0,_ag .Wrap (_bccb ,_fdab ,"\u0034 \u0062y\u0074\u0065\u0020\u0070\u0061g\u0065\u0020n\u0075\u006d\u0062\u0065\u0072");};return _adfb ,nil ;
};func (_dbbdc *SymbolDictionary )decodeHeightClassDeltaHeightWithHuffman ()(int64 ,error ){switch _dbbdc .SdHuffDecodeHeightSelection {case 0:_befbb ,_acd :=_ga .GetStandardTable (4);if _acd !=nil {return 0,_acd ;};return _befbb .Decode (_dbbdc ._bdgd );
case 1:_ggcfc ,_becb :=_ga .GetStandardTable (5);if _becb !=nil {return 0,_becb ;};return _ggcfc .Decode (_dbbdc ._bdgd );case 3:if _dbbdc ._eag ==nil {_gcgc ,_cbbd :=_ga .GetStandardTable (0);if _cbbd !=nil {return 0,_cbbd ;};_dbbdc ._eag =_gcgc ;};return _dbbdc ._eag .Decode (_dbbdc ._bdgd );
};return 0,nil ;};func (_gggd *SymbolDictionary )encodeNumSyms (_gfga _a .BinaryWriter )(_ecea int ,_acf error ){const _adee ="\u0065\u006e\u0063\u006f\u0064\u0065\u004e\u0075\u006d\u0053\u0079\u006d\u0073";_aee :=make ([]byte ,4);_d .BigEndian .PutUint32 (_aee ,_gggd .NumberOfExportedSymbols );
if _ecea ,_acf =_gfga .Write (_aee );_acf !=nil {return _ecea ,_ag .Wrap (_acf ,_adee ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};_d .BigEndian .PutUint32 (_aee ,_gggd .NumberOfNewSymbols );_ebfed ,_acf :=_gfga .Write (_aee );
if _acf !=nil {return _ecea ,_ag .Wrap (_acf ,_adee ,"n\u0065\u0077\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};return _ecea +_ebfed ,nil ;};func (_dd *EndOfStripe )LineNumber ()int {return _dd ._aa };func (_bbcd *Header )GetSegmentData ()(Segmenter ,error ){var _aec Segmenter ;
if _bbcd .SegmentData !=nil {_aec =_bbcd .SegmentData ;};if _aec ==nil {_ceda ,_ddfd :=_dffb [_bbcd .Type ];if !_ddfd {return nil ,_eg .Errorf ("\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0073\u002f\u0020\u0025\u0064\u0020\u0063\u0072e\u0061t\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e\u0020",_bbcd .Type ,_bbcd .Type );
};_aec =_ceda ();_b .Log .Trace ("\u005b\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u0020\u0061\u0074\u0020\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0030\u0034\u0058",_bbcd .SegmentNumber ,_bbcd .SegmentDataStartOffset );
_gdga ,_gge :=_bbcd .subInputReader ();if _gge !=nil {return nil ,_gge ;};if _cefb :=_aec .Init (_bbcd ,_gdga );_cefb !=nil {_b .Log .Debug ("\u0049\u006e\u0069\u0074 \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076 \u0066o\u0072\u0020\u0074\u0079\u0070\u0065\u003a \u0025\u0054",_cefb ,_aec );
return nil ,_cefb ;};_bbcd .SegmentData =_aec ;};return _aec ,nil ;};func (_bedb *SymbolDictionary )huffDecodeRefAggNInst ()(int64 ,error ){if !_bedb .SdHuffAggInstanceSelection {_agab ,_gdcf :=_ga .GetStandardTable (1);if _gdcf !=nil {return 0,_gdcf ;
};return _agab .Decode (_bedb ._bdgd );};if _bedb ._agbb ==nil {var (_afcg int ;_bddg error ;);if _bedb .SdHuffDecodeHeightSelection ==3{_afcg ++;};if _bedb .SdHuffDecodeWidthSelection ==3{_afcg ++;};if _bedb .SdHuffBMSizeSelection ==3{_afcg ++;};_bedb ._agbb ,_bddg =_bedb .getUserTable (_afcg );
if _bddg !=nil {return 0,_bddg ;};};return _bedb ._agbb .Decode (_bedb ._bdgd );};func (_fefe *GenericRefinementRegion )setParameters (_aebg *_egg .DecoderStats ,_bea *_egg .Decoder ,_ceb int8 ,_ddd ,_dede uint32 ,_dfed *_cb .Bitmap ,_edd ,_aaa int32 ,_dge bool ,_bcf []int8 ,_adbb []int8 ){_b .Log .Trace ("\u005b\u0047\u0045NE\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052E\u0047I\u004fN\u005d \u0073\u0065\u0074\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073");
if _aebg !=nil {_fefe ._gac =_aebg ;};if _bea !=nil {_fefe ._aeb =_bea ;};_fefe .TemplateID =_ceb ;_fefe .RegionInfo .BitmapWidth =_ddd ;_fefe .RegionInfo .BitmapHeight =_dede ;_fefe .ReferenceBitmap =_dfed ;_fefe .ReferenceDX =_edd ;_fefe .ReferenceDY =_aaa ;
_fefe .IsTPGROn =_dge ;_fefe .GrAtX =_bcf ;_fefe .GrAtY =_adbb ;_fefe .RegionBitmap =nil ;_b .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073 f\u0069\u006ei\u0073\u0068\u0065\u0064\u002e\u0020\u0025\u0073",_fefe );
};func (_ggbg *GenericRegion )writeGBAtPixels (_gdfb _a .BinaryWriter )(_bbcf int ,_fded error ){const _cge ="\u0077r\u0069t\u0065\u0047\u0042\u0041\u0074\u0050\u0069\u0078\u0065\u006c\u0073";if _ggbg .UseMMR {return 0,nil ;};_gffa :=1;if _ggbg .GBTemplate ==0{_gffa =4;
}else if _ggbg .UseExtTemplates {_gffa =12;};if len (_ggbg .GBAtX )!=_gffa {return 0,_ag .Errorf (_cge ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0058\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};if len (_ggbg .GBAtY )!=_gffa {return 0,_ag .Errorf (_cge ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0059\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};for _fcge :=0;_fcge < _gffa ;_fcge ++{if _fded =_gdfb .WriteByte (byte (_ggbg .GBAtX [_fcge ]));_fded !=nil {return _bbcf ,_ag .Wrap (_fded ,_cge ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0058");};_bbcf ++;if _fded =_gdfb .WriteByte (byte (_ggbg .GBAtY [_fcge ]));
_fded !=nil {return _bbcf ,_ag .Wrap (_fded ,_cge ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0059");};_bbcf ++;};return _bbcf ,nil ;};func (_gfcd *PatternDictionary )readPatternWidthAndHeight ()error {_fecb ,_ebgb :=_gfcd ._bbbf .ReadByte ();
if _ebgb !=nil {return _ebgb ;};_gfcd .HdpWidth =_fecb ;_fecb ,_ebgb =_gfcd ._bbbf .ReadByte ();if _ebgb !=nil {return _ebgb ;};_gfcd .HdpHeight =_fecb ;return nil ;};func (_agfe *PageInformationSegment )readMaxStripeSize ()error {_dbbd ,_abgga :=_agfe ._afefc .ReadBits (15);
if _abgga !=nil {return _abgga ;};_agfe .MaxStripeSize =uint16 (_dbbd &_fg .MaxUint16 );return nil ;};func (_afec *Header )readReferredToSegmentNumbers (_egbb _a .StreamReader ,_ccad int )([]int ,error ){const _bbab ="\u0072\u0065\u0061\u0064R\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053e\u0067m\u0065\u006e\u0074\u004e\u0075\u006d\u0062e\u0072\u0073";
_babeb :=make ([]int ,_ccad );if _ccad > 0{_afec .RTSegments =make ([]*Header ,_ccad );var (_gedd uint64 ;_aaae error ;);for _ddgd :=0;_ddgd < _ccad ;_ddgd ++{_gedd ,_aaae =_egbb .ReadBits (byte (_afec .referenceSize ())<<3);if _aaae !=nil {return nil ,_ag .Wrapf (_aaae ,_bbab ,"\u0027\u0025\u0064\u0027 \u0072\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0020\u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u0075\u006db\u0065\u0072",_ddgd );
};_babeb [_ddgd ]=int (_gedd &_fg .MaxInt32 );};};return _babeb ,nil ;};func (_daac *SymbolDictionary )huffDecodeBmSize ()(int64 ,error ){if _daac ._cgd ==nil {var (_adge int ;_gffec error ;);if _daac .SdHuffDecodeHeightSelection ==3{_adge ++;};if _daac .SdHuffDecodeWidthSelection ==3{_adge ++;
};_daac ._cgd ,_gffec =_daac .getUserTable (_adge );if _gffec !=nil {return 0,_gffec ;};};return _daac ._cgd .Decode (_daac ._bdgd );};func (_abca *SymbolDictionary )Encode (w _a .BinaryWriter )(_bcea int ,_gbcad error ){const _feaa ="\u0053\u0079\u006dbo\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0045\u006e\u0063\u006f\u0064\u0065";
if _abca ==nil {return 0,_ag .Error (_feaa ,"\u0073\u0079m\u0062\u006f\u006c\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066in\u0065\u0064");};if _bcea ,_gbcad =_abca .encodeFlags (w );_gbcad !=nil {return _bcea ,_ag .Wrap (_gbcad ,_feaa ,"");
};_faag ,_gbcad :=_abca .encodeATFlags (w );if _gbcad !=nil {return _bcea ,_ag .Wrap (_gbcad ,_feaa ,"");};_bcea +=_faag ;if _faag ,_gbcad =_abca .encodeRefinementATFlags (w );_gbcad !=nil {return _bcea ,_ag .Wrap (_gbcad ,_feaa ,"");};_bcea +=_faag ;if _faag ,_gbcad =_abca .encodeNumSyms (w );
_gbcad !=nil {return _bcea ,_ag .Wrap (_gbcad ,_feaa ,"");};_bcea +=_faag ;if _faag ,_gbcad =_abca .encodeSymbols (w );_gbcad !=nil {return _bcea ,_ag .Wrap (_gbcad ,_feaa ,"");};_bcea +=_faag ;return _bcea ,nil ;};func (_gfcc *TableSegment )HtHigh ()int32 {return _gfcc ._cbgg };
func (_fcb *GenericRefinementRegion )decodeTypicalPredictedLineTemplate0 (_gdd ,_ggc ,_afe ,_def ,_bd ,_dca ,_defd ,_ccc ,_agb int )error {var (_ee ,_bbc ,_eec ,_cca ,_ace ,_be int ;_efb byte ;_bcd error ;);if _gdd > 0{_efb ,_bcd =_fcb .RegionBitmap .GetByte (_defd -_afe );
if _bcd !=nil {return _bcd ;};_eec =int (_efb );};if _ccc > 0&&_ccc <=_fcb .ReferenceBitmap .Height {_efb ,_bcd =_fcb .ReferenceBitmap .GetByte (_agb -_def +_dca );if _bcd !=nil {return _bcd ;};_cca =int (_efb )<<4;};if _ccc >=0&&_ccc < _fcb .ReferenceBitmap .Height {_efb ,_bcd =_fcb .ReferenceBitmap .GetByte (_agb +_dca );
if _bcd !=nil {return _bcd ;};_ace =int (_efb )<<1;};if _ccc > -2&&_ccc < _fcb .ReferenceBitmap .Height -1{_efb ,_bcd =_fcb .ReferenceBitmap .GetByte (_agb +_def +_dca );if _bcd !=nil {return _bcd ;};_be =int (_efb );};_ee =((_eec >>5)&0x6)|((_be >>2)&0x30)|(_ace &0x180)|(_cca &0xc00);
var _dae int ;for _ece :=0;_ece < _bd ;_ece =_dae {var _ebf int ;_dae =_ece +8;var _dfcf int ;if _dfcf =_ggc -_ece ;_dfcf > 8{_dfcf =8;};_eed :=_dae < _ggc ;_ced :=_dae < _fcb .ReferenceBitmap .Width ;_dgg :=_dca +1;if _gdd > 0{_efb =0;if _eed {_efb ,_bcd =_fcb .RegionBitmap .GetByte (_defd -_afe +1);
if _bcd !=nil {return _bcd ;};};_eec =(_eec <<8)|int (_efb );};if _ccc > 0&&_ccc <=_fcb .ReferenceBitmap .Height {var _dfd int ;if _ced {_efb ,_bcd =_fcb .ReferenceBitmap .GetByte (_agb -_def +_dgg );if _bcd !=nil {return _bcd ;};_dfd =int (_efb )<<4;};
_cca =(_cca <<8)|_dfd ;};if _ccc >=0&&_ccc < _fcb .ReferenceBitmap .Height {var _fec int ;if _ced {_efb ,_bcd =_fcb .ReferenceBitmap .GetByte (_agb +_dgg );if _bcd !=nil {return _bcd ;};_fec =int (_efb )<<1;};_ace =(_ace <<8)|_fec ;};if _ccc > -2&&_ccc < (_fcb .ReferenceBitmap .Height -1){_efb =0;
if _ced {_efb ,_bcd =_fcb .ReferenceBitmap .GetByte (_agb +_def +_dgg );if _bcd !=nil {return _bcd ;};};_be =(_be <<8)|int (_efb );};for _ede :=0;_ede < _dfcf ;_ede ++{var _dcg int ;_dee :=false ;_cde :=(_ee >>4)&0x1ff;if _cde ==0x1ff{_dee =true ;_dcg =1;
}else if _cde ==0x00{_dee =true ;};if !_dee {if _fcb ._fgb {_bbc =_fcb .overrideAtTemplate0 (_ee ,_ece +_ede ,_gdd ,_ebf ,_ede );_fcb ._gac .SetIndex (int32 (_bbc ));}else {_fcb ._gac .SetIndex (int32 (_ee ));};_dcg ,_bcd =_fcb ._aeb .DecodeBit (_fcb ._gac );
if _bcd !=nil {return _bcd ;};};_feb :=uint (7-_ede );_ebf |=_dcg <<_feb ;_ee =((_ee &0xdb6)<<1)|_dcg |(_eec >>_feb +5)&0x002|((_be >>_feb +2)&0x010)|((_ace >>_feb )&0x080)|((_cca >>_feb )&0x400);};_bcd =_fcb .RegionBitmap .SetByte (_defd ,byte (_ebf ));
if _bcd !=nil {return _bcd ;};_defd ++;_agb ++;};return nil ;};func (_ffbg *GenericRegion )parseHeader ()(_bfb error ){_b .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052I\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0050\u0061\u0072s\u0069\u006e\u0067\u0048\u0065\u0061\u0064e\u0072\u002e\u002e\u002e");
defer func (){if _bfb !=nil {_b .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e]\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065r\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0077\u0069th\u0020\u0065\u0072\u0072\u006f\u0072\u002e\u0020\u0025\u0076",_bfb );
}else {_b .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049C\u002d\u0052\u0045G\u0049\u004f\u004e]\u0020\u0050a\u0072\u0073\u0069\u006e\u0067\u0048e\u0061de\u0072\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0053\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079\u002e\u002e\u002e");
};}();var (_cfb int ;_efae uint64 ;);if _bfb =_ffbg .RegionSegment .parseHeader ();_bfb !=nil {return _bfb ;};if _ ,_bfb =_ffbg ._dad .ReadBits (3);_bfb !=nil {return _bfb ;};_cfb ,_bfb =_ffbg ._dad .ReadBit ();if _bfb !=nil {return _bfb ;};if _cfb ==1{_ffbg .UseExtTemplates =true ;
};_cfb ,_bfb =_ffbg ._dad .ReadBit ();if _bfb !=nil {return _bfb ;};if _cfb ==1{_ffbg .IsTPGDon =true ;};_efae ,_bfb =_ffbg ._dad .ReadBits (2);if _bfb !=nil {return _bfb ;};_ffbg .GBTemplate =byte (_efae &0xf);_cfb ,_bfb =_ffbg ._dad .ReadBit ();if _bfb !=nil {return _bfb ;
};if _cfb ==1{_ffbg .IsMMREncoded =true ;};if !_ffbg .IsMMREncoded {_gcec :=1;if _ffbg .GBTemplate ==0{_gcec =4;if _ffbg .UseExtTemplates {_gcec =12;};};if _bfb =_ffbg .readGBAtPixels (_gcec );_bfb !=nil {return _bfb ;};};if _bfb =_ffbg .computeSegmentDataStructure ();
_bfb !=nil {return _bfb ;};_b .Log .Trace ("\u0025\u0073",_ffbg );return nil ;};func (_gggcg *TextRegion )getUserTable (_bbcc int )(_ga .Tabler ,error ){const _cbff ="\u0067\u0065\u0074U\u0073\u0065\u0072\u0054\u0061\u0062\u006c\u0065";var _daag int ;for _ ,_bbfe :=range _gggcg .Header .RTSegments {if _bbfe .Type ==53{if _daag ==_bbcc {_edbce ,_dddgf :=_bbfe .GetSegmentData ();
if _dddgf !=nil {return nil ,_dddgf ;};_bbcb ,_ceag :=_edbce .(*TableSegment );if !_ceag {_b .Log .Debug (_eg .Sprintf ("\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079p\u0065\u00205\u0033\u0020\u002d\u0020\u0061\u006ed\u0020in\u0064\u0065\u0078\u003a\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_bbfe .SegmentNumber ));
return nil ,_ag .Error (_cbff ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079\u0070e\u0020\u0035\u0033\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u002a\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};return _ga .NewEncodedTable (_bbcb );};_daag ++;};};return nil ,nil ;};func (_dc *EndOfStripe )parseHeader (_ab *Header ,_abc _a .StreamReader )error {_ad ,_ed :=_dc ._dfg .ReadBits (32);if _ed !=nil {return _ed ;};_dc ._aa =int (_ad &_fg .MaxInt32 );
return nil ;};func (_gcaa *Header )String ()string {_abde :=&_c .Builder {};_abde .WriteString ("\u000a[\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045A\u0044\u0045\u0052\u005d\u000a");_abde .WriteString (_eg .Sprintf ("\t\u002d\u0020\u0053\u0065gm\u0065n\u0074\u004e\u0075\u006d\u0062e\u0072\u003a\u0020\u0025\u0076\u000a",_gcaa .SegmentNumber ));
_abde .WriteString (_eg .Sprintf ("\u0009\u002d\u0020T\u0079\u0070\u0065\u003a\u0020\u0025\u0076\u000a",_gcaa .Type ));_abde .WriteString (_eg .Sprintf ("\u0009-\u0020R\u0065\u0074\u0061\u0069\u006eF\u006c\u0061g\u003a\u0020\u0025\u0076\u000a",_gcaa .RetainFlag ));
_abde .WriteString (_eg .Sprintf ("\u0009\u002d\u0020Pa\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_gcaa .PageAssociation ));_abde .WriteString (_eg .Sprintf ("\u0009\u002d\u0020\u0050\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074i\u006fn\u0046\u0069\u0065\u006c\u0064\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_gcaa .PageAssociationFieldSize ));
_abde .WriteString ("\u0009-\u0020R\u0054\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u0053\u003a\u000a");for _ ,_cbda :=range _gcaa .RTSNumbers {_abde .WriteString (_eg .Sprintf ("\u0009\t\u002d\u0020\u0025\u0064\u000a",_cbda ));};_abde .WriteString (_eg .Sprintf ("\t\u002d \u0048\u0065\u0061\u0064\u0065\u0072\u004c\u0065n\u0067\u0074\u0068\u003a %\u0076\u000a",_gcaa .HeaderLength ));
_abde .WriteString (_eg .Sprintf ("\u0009-\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061L\u0065n\u0067\u0074\u0068\u003a\u0020\u0025\u0076\n",_gcaa .SegmentDataLength ));_abde .WriteString (_eg .Sprintf ("\u0009\u002d\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074D\u0061\u0074\u0061\u0053\u0074\u0061\u0072t\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0076\u000a",_gcaa .SegmentDataStartOffset ));
return _abde .String ();};func (_aff *GenericRegion )computeSegmentDataStructure ()error {_aff .DataOffset =_aff ._dad .StreamPosition ();_aff .DataHeaderLength =_aff .DataOffset -_aff .DataHeaderOffset ;_aff .DataLength =int64 (_aff ._dad .Length ())-_aff .DataHeaderLength ;
return nil ;};func (_daf *SymbolDictionary )setCodingStatistics ()error {if _daf ._dfbd ==nil {_daf ._dfbd =_egg .NewStats (512,1);};if _daf ._dddf ==nil {_daf ._dddf =_egg .NewStats (512,1);};if _daf ._fgfc ==nil {_daf ._fgfc =_egg .NewStats (512,1);};
if _daf ._adbbd ==nil {_daf ._adbbd =_egg .NewStats (512,1);};if _daf ._cdbe ==nil {_daf ._cdbe =_egg .NewStats (512,1);};if _daf .UseRefinementAggregation &&_daf ._acc ==nil {_daf ._acc =_egg .NewStats (1<<uint (_daf ._dbc ),1);_daf ._beca =_egg .NewStats (512,1);
_daf ._afaf =_egg .NewStats (512,1);};if _daf ._gffe ==nil {_daf ._gffe =_egg .NewStats (65536,1);};if _daf ._ddc ==nil {var _efcb error ;_daf ._ddc ,_efcb =_egg .New (_daf ._bdgd );if _efcb !=nil {return _efcb ;};};return nil ;};func (_cdc *PageInformationSegment )readIsStriped ()error {_gaggc ,_bec :=_cdc ._afefc .ReadBit ();
if _bec !=nil {return _bec ;};if _gaggc ==1{_cdc .IsStripe =true ;};return nil ;};func (_ddad *SymbolDictionary )readAtPixels (_afab int )error {_ddad .SdATX =make ([]int8 ,_afab );_ddad .SdATY =make ([]int8 ,_afab );var (_fbgc byte ;_gbbe error ;);for _fgcc :=0;
_fgcc < _afab ;_fgcc ++{_fbgc ,_gbbe =_ddad ._bdgd .ReadByte ();if _gbbe !=nil {return _gbbe ;};_ddad .SdATX [_fgcc ]=int8 (_fbgc );_fbgc ,_gbbe =_ddad ._bdgd .ReadByte ();if _gbbe !=nil {return _gbbe ;};_ddad .SdATY [_fgcc ]=int8 (_fbgc );};return nil ;
};func (_gggc *TextRegion )GetRegionInfo ()*RegionSegment {return _gggc .RegionInfo };func (_adec *Header )Encode (w _a .BinaryWriter )(_defe int ,_fedd error ){const _edgc ="\u0048\u0065\u0061d\u0065\u0072\u002e\u0057\u0072\u0069\u0074\u0065";var _dggc _a .BinaryWriter ;
_b .Log .Trace ("\u005b\u0053\u0045G\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045\u0052\u005d[\u0045\u004e\u0043\u004f\u0044\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _fedd !=nil {_b .Log .Trace ("[\u0053\u0045\u0047\u004d\u0045\u004eT\u002d\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0045\u004e\u0043\u004f\u0044E\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020%\u0076",_fedd );
}else {_b .Log .Trace ("\u005b\u0053\u0045\u0047ME\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0025\u0076",_adec );_b .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045N\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u005b\u0045\u004e\u0043O\u0044\u0045\u005d\u0020\u0046\u0069\u006ei\u0073\u0068\u0065\u0064");
};}();w .FinishByte ();if _adec .SegmentData !=nil {_adag ,_faad :=_adec .SegmentData .(SegmentEncoder );if !_faad {return 0,_ag .Errorf (_edgc ,"\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0064\u006f\u0065s\u006e\u0027\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074 \u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0045\u006e\u0063\u006f\u0064er\u0020\u0069\u006e\u0074\u0065\u0072\u0066\u0061\u0063\u0065",_adec .SegmentData );
};_dggc =_a .BufferedMSB ();_defe ,_fedd =_adag .Encode (_dggc );if _fedd !=nil {return 0,_ag .Wrap (_fedd ,_edgc ,"");};_adec .SegmentDataLength =uint64 (_defe );};if _adec .pageSize ()==4{_adec .PageAssociationFieldSize =true ;};var _edbg int ;_edbg ,_fedd =_adec .writeSegmentNumber (w );
if _fedd !=nil {return 0,_ag .Wrap (_fedd ,_edgc ,"");};_defe +=_edbg ;if _fedd =_adec .writeFlags (w );_fedd !=nil {return _defe ,_ag .Wrap (_fedd ,_edgc ,"");};_defe ++;_edbg ,_fedd =_adec .writeReferredToCount (w );if _fedd !=nil {return 0,_ag .Wrap (_fedd ,_edgc ,"");
};_defe +=_edbg ;_edbg ,_fedd =_adec .writeReferredToSegments (w );if _fedd !=nil {return 0,_ag .Wrap (_fedd ,_edgc ,"");};_defe +=_edbg ;_edbg ,_fedd =_adec .writeSegmentPageAssociation (w );if _fedd !=nil {return 0,_ag .Wrap (_fedd ,_edgc ,"");};_defe +=_edbg ;
_edbg ,_fedd =_adec .writeSegmentDataLength (w );if _fedd !=nil {return 0,_ag .Wrap (_fedd ,_edgc ,"");};_defe +=_edbg ;_adec .HeaderLength =int64 (_defe )-int64 (_adec .SegmentDataLength );if _dggc !=nil {if _ ,_fedd =w .Write (_dggc .Data ());_fedd !=nil {return _defe ,_ag .Wrap (_fedd ,_edgc ,"\u0077r\u0069t\u0065\u0020\u0073\u0065\u0067m\u0065\u006et\u0020\u0064\u0061\u0074\u0061");
};};return _defe ,nil ;};func (_fdac *TextRegion )setContexts (_ecddd *_egg .DecoderStats ,_ecde *_egg .DecoderStats ,_agdg *_egg .DecoderStats ,_ebgd *_egg .DecoderStats ,_fafa *_egg .DecoderStats ,_bead *_egg .DecoderStats ,_bfca *_egg .DecoderStats ,_gfbdf *_egg .DecoderStats ,_ffgf *_egg .DecoderStats ,_fgbbf *_egg .DecoderStats ){_fdac ._cfaba =_ecde ;
_fdac ._dbdb =_agdg ;_fdac ._dddg =_ebgd ;_fdac ._bgge =_fafa ;_fdac ._deed =_bfca ;_fdac ._bdcga =_gfbdf ;_fdac ._edfd =_bead ;_fdac ._afeb =_ffgf ;_fdac ._fddc =_fgbbf ;_fdac ._bfcd =_ecddd ;};func (_beaf *TextRegion )decodeRdh ()(int64 ,error ){const _fbea ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064h";
if _beaf .IsHuffmanEncoded {if _beaf .SbHuffRDHeight ==3{if _beaf ._eccf ==nil {var (_gcfc int ;_fefb error ;);if _beaf .SbHuffFS ==3{_gcfc ++;};if _beaf .SbHuffDS ==3{_gcfc ++;};if _beaf .SbHuffDT ==3{_gcfc ++;};if _beaf .SbHuffRDWidth ==3{_gcfc ++;};
_beaf ._eccf ,_fefb =_beaf .getUserTable (_gcfc );if _fefb !=nil {return 0,_ag .Wrap (_fefb ,_fbea ,"");};};return _beaf ._eccf .Decode (_beaf ._ceed );};_bacd ,_gabc :=_ga .GetStandardTable (14+int (_beaf .SbHuffRDHeight ));if _gabc !=nil {return 0,_ag .Wrap (_gabc ,_fbea ,"");
};return _bacd .Decode (_beaf ._ceed );};_fbbf ,_abbg :=_beaf ._ffdcg .DecodeInt (_beaf ._bdcga );if _abbg !=nil {return 0,_ag .Wrap (_abbg ,_fbea ,"");};return int64 (_fbbf ),nil ;};func (_abaa *HalftoneRegion )computeX (_dgb ,_abdd int )int {return _abaa .shiftAndFill (int (_abaa .HGridX )+_dgb *int (_abaa .HRegionY )+_abdd *int (_abaa .HRegionX ));
};var _ SegmentEncoder =&GenericRegion {};func (_eceg *GenericRefinementRegion )overrideAtTemplate0 (_gdg ,_bee ,_efg ,_gfg ,_gff int )int {if _eceg ._bfe [0]{_gdg &=0xfff7;if _eceg .GrAtY [0]==0&&int (_eceg .GrAtX [0])>=-_gff {_gdg |=(_gfg >>uint (7-(_gff +int (_eceg .GrAtX [0])))&0x1)<<3;
}else {_gdg |=_eceg .getPixel (_eceg .RegionBitmap ,_bee +int (_eceg .GrAtX [0]),_efg +int (_eceg .GrAtY [0]))<<3;};};if _eceg ._bfe [1]{_gdg &=0xefff;if _eceg .GrAtY [1]==0&&int (_eceg .GrAtX [1])>=-_gff {_gdg |=(_gfg >>uint (7-(_gff +int (_eceg .GrAtX [1])))&0x1)<<12;
}else {_gdg |=_eceg .getPixel (_eceg .ReferenceBitmap ,_bee +int (_eceg .GrAtX [1]),_efg +int (_eceg .GrAtY [1]));};};return _gdg ;};func (_fcf *GenericRegion )decodeTemplate0b (_bg ,_bbd ,_abec int ,_badb ,_gbg int )(_ddg error ){const _edag ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0062";
var (_edec ,_gfb int ;_ada ,_feg int ;_gef byte ;_cfd int ;);if _bg >=1{_gef ,_ddg =_fcf .Bitmap .GetByte (_gbg );if _ddg !=nil {return _ag .Wrap (_ddg ,_edag ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_ada =int (_gef );};if _bg >=2{_gef ,_ddg =_fcf .Bitmap .GetByte (_gbg -_fcf .Bitmap .RowStride );
if _ddg !=nil {return _ag .Wrap (_ddg ,_edag ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_feg =int (_gef )<<6;};_edec =(_ada &0xf0)|(_feg &0x3800);for _bbbcc :=0;_bbbcc < _abec ;_bbbcc =_cfd {var (_adcd byte ;_dga int ;);_cfd =_bbbcc +8;if _caec :=_bbd -_bbbcc ;
_caec > 8{_dga =8;}else {_dga =_caec ;};if _bg > 0{_ada <<=8;if _cfd < _bbd {_gef ,_ddg =_fcf .Bitmap .GetByte (_gbg +1);if _ddg !=nil {return _ag .Wrap (_ddg ,_edag ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_ada |=int (_gef );};};if _bg > 1{_feg <<=8;
if _cfd < _bbd {_gef ,_ddg =_fcf .Bitmap .GetByte (_gbg -_fcf .Bitmap .RowStride +1);if _ddg !=nil {return _ag .Wrap (_ddg ,_edag ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_feg |=int (_gef )<<6;};};for _ebcb :=0;_ebcb < _dga ;_ebcb ++{_egee :=uint (7-_ebcb );
if _fcf ._cgg {_gfb =_fcf .overrideAtTemplate0b (_edec ,_bbbcc +_ebcb ,_bg ,int (_adcd ),_ebcb ,int (_egee ));_fcf ._dfef .SetIndex (int32 (_gfb ));}else {_fcf ._dfef .SetIndex (int32 (_edec ));};var _fgaaf int ;_fgaaf ,_ddg =_fcf ._age .DecodeBit (_fcf ._dfef );
if _ddg !=nil {return _ag .Wrap (_ddg ,_edag ,"");};_adcd |=byte (_fgaaf <<_egee );_edec =((_edec &0x7bf7)<<1)|_fgaaf |((_ada >>_egee )&0x10)|((_feg >>_egee )&0x800);};if _bcca :=_fcf .Bitmap .SetByte (_badb ,_adcd );_bcca !=nil {return _ag .Wrap (_bcca ,_edag ,"");
};_badb ++;_gbg ++;};return nil ;};func (_dddc *PageInformationSegment )CombinationOperator ()_cb .CombinationOperator {return _dddc ._efab ;};func (_aebbf *Header )parse (_gfd Documenter ,_bdda _a .StreamReader ,_ebce int64 ,_gcbc OrganizationType )(_ccgb error ){const _bebc ="\u0070\u0061\u0072s\u0065";
_b .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u005b\u0050A\u0052\u0053\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _ccgb !=nil {_b .Log .Trace ("\u005b\u0053\u0045GM\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045R\u005d[\u0050A\u0052S\u0045\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_ccgb );
}else {_b .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052]\u005bP\u0041\u0052\u0053\u0045\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");};}();_ ,_ccgb =_bdda .Seek (_ebce ,_fa .SeekStart );
if _ccgb !=nil {return _ag .Wrap (_ccgb ,_bebc ,"\u0073\u0065\u0065\u006b\u0020\u0073\u0074\u0061\u0072\u0074");};if _ccgb =_aebbf .readSegmentNumber (_bdda );_ccgb !=nil {return _ag .Wrap (_ccgb ,_bebc ,"");};if _ccgb =_aebbf .readHeaderFlags ();_ccgb !=nil {return _ag .Wrap (_ccgb ,_bebc ,"");
};var _babe uint64 ;_babe ,_ccgb =_aebbf .readNumberOfReferredToSegments (_bdda );if _ccgb !=nil {return _ag .Wrap (_ccgb ,_bebc ,"");};_aebbf .RTSNumbers ,_ccgb =_aebbf .readReferredToSegmentNumbers (_bdda ,int (_babe ));if _ccgb !=nil {return _ag .Wrap (_ccgb ,_bebc ,"");
};_ccgb =_aebbf .readSegmentPageAssociation (_gfd ,_bdda ,_babe ,_aebbf .RTSNumbers ...);if _ccgb !=nil {return _ag .Wrap (_ccgb ,_bebc ,"");};if _aebbf .Type !=TEndOfFile {if _ccgb =_aebbf .readSegmentDataLength (_bdda );_ccgb !=nil {return _ag .Wrap (_ccgb ,_bebc ,"");
};};_aebbf .readDataStartOffset (_bdda ,_gcbc );_aebbf .readHeaderLength (_bdda ,_ebce );_b .Log .Trace ("\u0025\u0073",_aebbf );return nil ;};func (_bdge *Header )readHeaderLength (_abbe _a .StreamReader ,_ebfe int64 ){_bdge .HeaderLength =_abbe .StreamPosition ()-_ebfe ;
};func (_gce *GenericRegion )InitEncode (bm *_cb .Bitmap ,xLoc ,yLoc ,template int ,duplicateLineRemoval bool )error {const _ecdg ="\u0047e\u006e\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069\u006f\u006e.\u0049\u006e\u0069\u0074\u0045\u006e\u0063\u006f\u0064\u0065";
if bm ==nil {return _ag .Error (_ecdg ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if xLoc < 0||yLoc < 0{return _ag .Error (_ecdg ,"\u0078\u0020\u0061\u006e\u0064\u0020\u0079\u0020\u006c\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074h\u0061\u006e\u0020\u0030");
};_gce .Bitmap =bm ;_gce .GBTemplate =byte (template );switch _gce .GBTemplate {case 0:_gce .GBAtX =[]int8 {3,-3,2,-2};_gce .GBAtY =[]int8 {-1,-1,-2,-2};case 1:_gce .GBAtX =[]int8 {3};_gce .GBAtY =[]int8 {-1};case 2,3:_gce .GBAtX =[]int8 {2};_gce .GBAtY =[]int8 {-1};
default:return _ag .Errorf (_ecdg ,"\u0070\u0072o\u0076\u0069\u0064\u0065\u0064 \u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u007b\u0030\u002c\u0031\u002c\u0032\u002c\u0033\u007d",template );
};_gce .RegionSegment =&RegionSegment {BitmapHeight :uint32 (bm .Height ),BitmapWidth :uint32 (bm .Width ),XLocation :uint32 (xLoc ),YLocation :uint32 (yLoc )};_gce .IsTPGDon =duplicateLineRemoval ;return nil ;};func (_aeg *GenericRefinementRegion )decodeSLTP ()(int ,error ){_aeg .Template .setIndex (_aeg ._gac );
return _aeg ._aeb .DecodeBit (_aeg ._gac );};func (_gdgac *TextRegion )decodeRI ()(int64 ,error ){if !_gdgac .UseRefinement {return 0,nil ;};if _gdgac .IsHuffmanEncoded {_cabac ,_fbeb :=_gdgac ._ceed .ReadBit ();return int64 (_cabac ),_fbeb ;};_aadca ,_bcff :=_gdgac ._ffdcg .DecodeInt (_gdgac ._ddbc );
return int64 (_aadca ),_bcff ;};func (_fee *GenericRefinementRegion )String ()string {_bdbd :=&_c .Builder {};_bdbd .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_bdbd .WriteString (_fee .RegionInfo .String ()+"\u000a");
_bdbd .WriteString (_eg .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0052\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_fee .IsTPGROn ));_bdbd .WriteString (_eg .Sprintf ("\u0009-\u0020T\u0065\u006d\u0070\u006c\u0061t\u0065\u0049D\u003a\u0020\u0025\u0076\u000a",_fee .TemplateID ));
_bdbd .WriteString (_eg .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_fee .GrAtX ));_bdbd .WriteString (_eg .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_fee .GrAtY ));
_bdbd .WriteString (_eg .Sprintf ("\u0009-\u0020R\u0065\u0066\u0065\u0072\u0065n\u0063\u0065D\u0058\u0020\u0025\u0076\u000a",_fee .ReferenceDX ));_bdbd .WriteString (_eg .Sprintf ("\u0009\u002d\u0020\u0052ef\u0065\u0072\u0065\u006e\u0063\u0044\u0065\u0059\u003a\u0020\u0025\u0076\u000a",_fee .ReferenceDY ));
return _bdbd .String ();};func (_dbd *GenericRegion )copyLineAbove (_caa int )error {_ffcf :=_caa *_dbd .Bitmap .RowStride ;_ccb :=_ffcf -_dbd .Bitmap .RowStride ;for _gda :=0;_gda < _dbd .Bitmap .RowStride ;_gda ++{_cgf ,_dffe :=_dbd .Bitmap .GetByte (_ccb );
if _dffe !=nil {return _dffe ;};_ccb ++;if _dffe =_dbd .Bitmap .SetByte (_ffcf ,_cgf );_dffe !=nil {return _dffe ;};_ffcf ++;};return nil ;};func (_efde *TextRegion )decodeDfs ()(int64 ,error ){if _efde .IsHuffmanEncoded {if _efde .SbHuffFS ==3{if _efde ._debb ==nil {var _cddb error ;
_efde ._debb ,_cddb =_efde .getUserTable (0);if _cddb !=nil {return 0,_cddb ;};};return _efde ._debb .Decode (_efde ._ceed );};_adcc ,_bdec :=_ga .GetStandardTable (6+int (_efde .SbHuffFS ));if _bdec !=nil {return 0,_bdec ;};return _adcc .Decode (_efde ._ceed );
};_baegc ,_eacb :=_efde ._ffdcg .DecodeInt (_efde ._dbdb );if _eacb !=nil {return 0,_eacb ;};return int64 (_baegc ),nil ;};func NewHeader (d Documenter ,r _a .StreamReader ,offset int64 ,organizationType OrganizationType )(*Header ,error ){_fcaa :=&Header {Reader :r };
if _fdfe :=_fcaa .parse (d ,r ,offset ,organizationType );_fdfe !=nil {return nil ,_ag .Wrap (_fdfe ,"\u004ee\u0077\u0048\u0065\u0061\u0064\u0065r","");};return _fcaa ,nil ;};func (_cdaf *TextRegion )decodeSymbolInstances ()error {_dgff ,_bedc :=_cdaf .decodeStripT ();
if _bedc !=nil {return _bedc ;};var (_cdfe int64 ;_fbdf uint32 ;);for _fbdf < _cdaf .NumberOfSymbolInstances {_fffg ,_fbbe :=_cdaf .decodeDT ();if _fbbe !=nil {return _fbbe ;};_dgff +=_fffg ;var _ccgc int64 ;_ccdd :=true ;_cdaf ._ebcg =0;for {if _ccdd {_ccgc ,_fbbe =_cdaf .decodeDfs ();
if _fbbe !=nil {return _fbbe ;};_cdfe +=_ccgc ;_cdaf ._ebcg =_cdfe ;_ccdd =false ;}else {_gbff ,_egcec :=_cdaf .decodeIds ();if _dfa .Is (_egcec ,_ae .ErrOOB ){break ;};if _egcec !=nil {return _egcec ;};if _fbdf >=_cdaf .NumberOfSymbolInstances {break ;
};_cdaf ._ebcg +=_gbff +int64 (_cdaf .SbDsOffset );};_gga ,_bgaae :=_cdaf .decodeCurrentT ();if _bgaae !=nil {return _bgaae ;};_ggddc :=_dgff +_gga ;_bdgad ,_bgaae :=_cdaf .decodeID ();if _bgaae !=nil {return _bgaae ;};_dgbg ,_bgaae :=_cdaf .decodeRI ();
if _bgaae !=nil {return _bgaae ;};_edfa ,_bgaae :=_cdaf .decodeIb (_dgbg ,_bdgad );if _bgaae !=nil {return _bgaae ;};if _bgaae =_cdaf .blit (_edfa ,_ggddc );_bgaae !=nil {return _bgaae ;};_fbdf ++;};};return nil ;};func (_cdeg *PageInformationSegment )parseHeader ()(_bffg error ){_b .Log .Trace ("\u005b\u0050\u0061\u0067\u0065I\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067m\u0065\u006e\u0074\u005d\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u002e\u002e");
defer func (){var _bdaa ="[\u0050\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072m\u0061\u0074\u0069\u006f\u006e\u0053\u0065gm\u0065\u006e\u0074\u005d \u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065ad\u0065\u0072 \u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064";
if _bffg !=nil {_bdaa +="\u0020\u0077\u0069t\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u0020"+_bffg .Error ();}else {_bdaa +="\u0020\u0073\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079";};_b .Log .Trace (_bdaa );}();if _bffg =_cdeg .readWidthAndHeight ();
_bffg !=nil {return _bffg ;};if _bffg =_cdeg .readResolution ();_bffg !=nil {return _bffg ;};_ ,_bffg =_cdeg ._afefc .ReadBit ();if _bffg !=nil {return _bffg ;};if _bffg =_cdeg .readCombinationOperatorOverrideAllowed ();_bffg !=nil {return _bffg ;};if _bffg =_cdeg .readRequiresAuxiliaryBuffer ();
_bffg !=nil {return _bffg ;};if _bffg =_cdeg .readCombinationOperator ();_bffg !=nil {return _bffg ;};if _bffg =_cdeg .readDefaultPixelValue ();_bffg !=nil {return _bffg ;};if _bffg =_cdeg .readContainsRefinement ();_bffg !=nil {return _bffg ;};if _bffg =_cdeg .readIsLossless ();
_bffg !=nil {return _bffg ;};if _bffg =_cdeg .readIsStriped ();_bffg !=nil {return _bffg ;};if _bffg =_cdeg .readMaxStripeSize ();_bffg !=nil {return _bffg ;};if _bffg =_cdeg .checkInput ();_bffg !=nil {return _bffg ;};_b .Log .Trace ("\u0025\u0073",_cdeg );
return nil ;};func (_badg *GenericRegion )overrideAtTemplate2 (_gea ,_ebe ,_geag ,_cdbb ,_cfc int )int {_gea &=0x3FB;if _badg .GBAtY [0]==0&&_badg .GBAtX [0]>=-int8 (_cfc ){_gea |=(_cdbb >>uint (7-(int8 (_cfc )+_badg .GBAtX [0]))&0x1)<<2;}else {_gea |=int (_badg .getPixel (_ebe +int (_badg .GBAtX [0]),_geag +int (_badg .GBAtY [0])))<<2;
};return _gea ;};func (_caff *SymbolDictionary )String ()string {_ggdc :=&_c .Builder {};_ggdc .WriteString ("\n\u005b\u0053\u0059\u004dBO\u004c-\u0044\u0049\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u000a");_ggdc .WriteString (_eg .Sprintf ("\u0009-\u0020S\u0064\u0072\u0054\u0065\u006dp\u006c\u0061t\u0065\u0020\u0025\u0076\u000a",_caff .SdrTemplate ));
_ggdc .WriteString (_eg .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0025\u0076\u000a",_caff .SdTemplate ));_ggdc .WriteString (_eg .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006eg\u0043\u006f\u006e\u0074\u0065\u0078\u0074R\u0065\u0074\u0061\u0069\u006e\u0065\u0064\u0020\u0025\u0076\u000a",_caff ._fegc ));
_ggdc .WriteString (_eg .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074\u0065\u0078\u0074\u0055\u0073\u0065\u0064 \u0025\u0076\u000a",_caff ._gfbd ));_ggdc .WriteString (_eg .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_caff .SdHuffAggInstanceSelection ));
_ggdc .WriteString (_eg .Sprintf ("\u0009\u002d\u0020\u0053d\u0048\u0075\u0066\u0066\u0042\u004d\u0053\u0069\u007a\u0065S\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020%\u0076\u000a",_caff .SdHuffBMSizeSelection ));_ggdc .WriteString (_eg .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_caff .SdHuffDecodeWidthSelection ));
_ggdc .WriteString (_eg .Sprintf ("\u0009\u002d\u0020Sd\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064e\u0048e\u0069g\u0068t\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_caff .SdHuffDecodeHeightSelection ));_ggdc .WriteString (_eg .Sprintf ("\u0009\u002d\u0020U\u0073\u0065\u0052\u0065f\u0069\u006e\u0065\u006d\u0065\u006e\u0074A\u0067\u0067\u0072\u0065\u0067\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_caff .UseRefinementAggregation ));
_ggdc .WriteString (_eg .Sprintf ("\u0009\u002d\u0020is\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045\u006e\u0063\u006f\u0064\u0065\u0064\u0020\u0025\u0076\u000a",_caff .IsHuffmanEncoded ));_ggdc .WriteString (_eg .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_caff .SdATX ));
_ggdc .WriteString (_eg .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_caff .SdATY ));_ggdc .WriteString (_eg .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_caff .SdrATX ));
_ggdc .WriteString (_eg .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_caff .SdrATY ));_ggdc .WriteString (_eg .Sprintf ("\u0009\u002d\u0020\u004e\u0075\u006d\u0062\u0065\u0072\u004ff\u0045\u0078\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_caff .NumberOfExportedSymbols ));
_ggdc .WriteString (_eg .Sprintf ("\u0009-\u0020\u004e\u0075\u006db\u0065\u0072\u004f\u0066\u004ee\u0077S\u0079m\u0062\u006f\u006c\u0073\u0020\u0025\u0076\n",_caff .NumberOfNewSymbols ));_ggdc .WriteString (_eg .Sprintf ("\u0009\u002d\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u004ff\u0049\u006d\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_caff ._abfc ));
_ggdc .WriteString (_eg .Sprintf ("\u0009\u002d \u006e\u0075\u006d\u0062\u0065\u0072\u004f\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0064\u0053\u0079\u006d\u0062\u006f\u006c\u0073 %\u0076\u000a",_caff ._bbdg ));return _ggdc .String ();};func (_cfab *SymbolDictionary )decodeHeightClassCollectiveBitmap (_baegb int64 ,_gfef ,_aeabd uint32 )(*_cb .Bitmap ,error ){if _baegb ==0{_debe :=_cb .New (int (_aeabd ),int (_gfef ));
var (_badee byte ;_dfdd error ;);for _cgda :=0;_cgda < len (_debe .Data );_cgda ++{_badee ,_dfdd =_cfab ._bdgd .ReadByte ();if _dfdd !=nil {return nil ,_dfdd ;};if _dfdd =_debe .SetByte (_cgda ,_badee );_dfdd !=nil {return nil ,_dfdd ;};};return _debe ,nil ;
};if _cfab ._edbgg ==nil {_cfab ._edbgg =NewGenericRegion (_cfab ._bdgd );};_cfab ._edbgg .setParameters (true ,_cfab ._bdgd .StreamPosition (),_baegb ,_gfef ,_aeabd );_efdgf ,_dcbb :=_cfab ._edbgg .GetRegionBitmap ();if _dcbb !=nil {return nil ,_dcbb ;
};return _efdgf ,nil ;};func (_bbcfa *SymbolDictionary )encodeATFlags (_fbfb _a .BinaryWriter )(_gba int ,_fffc error ){const _ffdb ="\u0065\u006e\u0063\u006f\u0064\u0065\u0041\u0054\u0046\u006c\u0061\u0067\u0073";if _bbcfa .IsHuffmanEncoded ||_bbcfa .SdTemplate !=0{return 0,nil ;
};_aea :=4;if _bbcfa .SdTemplate !=0{_aea =1;};for _eecfd :=0;_eecfd < _aea ;_eecfd ++{if _fffc =_fbfb .WriteByte (byte (_bbcfa .SdATX [_eecfd ]));_fffc !=nil {return _gba ,_ag .Wrapf (_fffc ,_ffdb ,"\u0053d\u0041\u0054\u0058\u005b\u0025\u0064]",_eecfd );
};_gba ++;if _fffc =_fbfb .WriteByte (byte (_bbcfa .SdATY [_eecfd ]));_fffc !=nil {return _gba ,_ag .Wrapf (_fffc ,_ffdb ,"\u0053d\u0041\u0054\u0059\u005b\u0025\u0064]",_eecfd );};_gba ++;};return _gba ,nil ;};const (TSymbolDictionary Type =0;TIntermediateTextRegion Type =4;
TImmediateTextRegion Type =6;TImmediateLosslessTextRegion Type =7;TPatternDictionary Type =16;TIntermediateHalftoneRegion Type =20;TImmediateHalftoneRegion Type =22;TImmediateLosslessHalftoneRegion Type =23;TIntermediateGenericRegion Type =36;TImmediateGenericRegion Type =38;
TImmediateLosslessGenericRegion Type =39;TIntermediateGenericRefinementRegion Type =40;TImmediateGenericRefinementRegion Type =42;TImmediateLosslessGenericRefinementRegion Type =43;TPageInformation Type =48;TEndOfPage Type =49;TEndOfStrip Type =50;TEndOfFile Type =51;
TProfiles Type =52;TTables Type =53;TExtension Type =62;TBitmap Type =70;);func (_aebce *SymbolDictionary )getSbSymCodeLen ()int8 {_aebf :=int8 (_fg .Ceil (_fg .Log (float64 (_aebce ._abfc +_aebce .NumberOfNewSymbols ))/_fg .Log (2)));if _aebce .IsHuffmanEncoded &&_aebf < 1{return 1;
};return _aebf ;};func (_efed *PageInformationSegment )encodeStripingInformation (_gggf _a .BinaryWriter )(_bede int ,_aadf error ){const _caae ="\u0065n\u0063\u006f\u0064\u0065S\u0074\u0072\u0069\u0070\u0069n\u0067I\u006ef\u006f\u0072\u006d\u0061\u0074\u0069\u006fn";
if !_efed .IsStripe {if _bede ,_aadf =_gggf .Write ([]byte {0x00,0x00});_aadf !=nil {return 0,_ag .Wrap (_aadf ,_caae ,"n\u006f\u0020\u0073\u0074\u0072\u0069\u0070\u0069\u006e\u0067");};return _bede ,nil ;};_bgbg :=make ([]byte ,2);_d .BigEndian .PutUint16 (_bgbg ,_efed .MaxStripeSize |1<<15);
if _bede ,_aadf =_gggf .Write (_bgbg );_aadf !=nil {return 0,_ag .Wrapf (_aadf ,_caae ,"\u0073\u0074\u0072i\u0070\u0069\u006e\u0067\u003a\u0020\u0025\u0064",_efed .MaxStripeSize );};return _bede ,nil ;};func (_ffdc *GenericRegion )decodeTemplate0a (_agc ,_afa ,_aef int ,_efgd ,_aga int )(_afac error ){const _fbb ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0061";
var (_gfgc ,_dcgd int ;_bed ,_fgbb int ;_gbe byte ;_gdf int ;);if _agc >=1{_gbe ,_afac =_ffdc .Bitmap .GetByte (_aga );if _afac !=nil {return _ag .Wrap (_afac ,_fbb ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_bed =int (_gbe );};if _agc >=2{_gbe ,_afac =_ffdc .Bitmap .GetByte (_aga -_ffdc .Bitmap .RowStride );
if _afac !=nil {return _ag .Wrap (_afac ,_fbb ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_fgbb =int (_gbe )<<6;};_gfgc =(_bed &0xf0)|(_fgbb &0x3800);for _egda :=0;_egda < _aef ;_egda =_gdf {var (_agf byte ;_fag int ;);_gdf =_egda +8;if _cedf :=_afa -_egda ;
_cedf > 8{_fag =8;}else {_fag =_cedf ;};if _agc > 0{_bed <<=8;if _gdf < _afa {_gbe ,_afac =_ffdc .Bitmap .GetByte (_aga +1);if _afac !=nil {return _ag .Wrap (_afac ,_fbb ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_bed |=int (_gbe );};};if _agc > 1{_abff :=_aga -_ffdc .Bitmap .RowStride +1;
_fgbb <<=8;if _gdf < _afa {_gbe ,_afac =_ffdc .Bitmap .GetByte (_abff );if _afac !=nil {return _ag .Wrap (_afac ,_fbb ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_fgbb |=int (_gbe )<<6;}else {_fgbb |=0;};};for _ggd :=0;_ggd < _fag ;_ggd ++{_abgg :=uint (7-_ggd );
if _ffdc ._cgg {_dcgd =_ffdc .overrideAtTemplate0a (_gfgc ,_egda +_ggd ,_agc ,int (_agf ),_ggd ,int (_abgg ));_ffdc ._dfef .SetIndex (int32 (_dcgd ));}else {_ffdc ._dfef .SetIndex (int32 (_gfgc ));};var _gde int ;_gde ,_afac =_ffdc ._age .DecodeBit (_ffdc ._dfef );
if _afac !=nil {return _ag .Wrap (_afac ,_fbb ,"");};_agf |=byte (_gde )<<_abgg ;_gfgc =((_gfgc &0x7bf7)<<1)|_gde |((_bed >>_abgg )&0x10)|((_fgbb >>_abgg )&0x800);};if _acgb :=_ffdc .Bitmap .SetByte (_efgd ,_agf );_acgb !=nil {return _ag .Wrap (_acgb ,_fbb ,"");
};_efgd ++;_aga ++;};return nil ;};func (_bdbb *TextRegion )decodeStripT ()(_gaeg int64 ,_dfbb error ){if _bdbb .IsHuffmanEncoded {if _bdbb .SbHuffDT ==3{if _bdbb ._ebgg ==nil {var _ccee int ;if _bdbb .SbHuffFS ==3{_ccee ++;};if _bdbb .SbHuffDS ==3{_ccee ++;
};_bdbb ._ebgg ,_dfbb =_bdbb .getUserTable (_ccee );if _dfbb !=nil {return 0,_dfbb ;};};_gaeg ,_dfbb =_bdbb ._ebgg .Decode (_bdbb ._ceed );if _dfbb !=nil {return 0,_dfbb ;};}else {var _ebgc _ga .Tabler ;_ebgc ,_dfbb =_ga .GetStandardTable (11+int (_bdbb .SbHuffDT ));
if _dfbb !=nil {return 0,_dfbb ;};_gaeg ,_dfbb =_ebgc .Decode (_bdbb ._ceed );if _dfbb !=nil {return 0,_dfbb ;};};}else {var _bcfg int32 ;_bcfg ,_dfbb =_bdbb ._ffdcg .DecodeInt (_bdbb ._cfaba );if _dfbb !=nil {return 0,_dfbb ;};_gaeg =int64 (_bcfg );};
_gaeg *=int64 (-_bdbb .SbStrips );return _gaeg ,nil ;};func (_fge *HalftoneRegion )renderPattern (_afc [][]int )(_fbg error ){var _daae ,_ggbdd int ;for _cbf :=0;_cbf < int (_fge .HGridHeight );_cbf ++{for _agdb :=0;_agdb < int (_fge .HGridWidth );_agdb ++{_daae =_fge .computeX (_cbf ,_agdb );
_ggbdd =_fge .computeY (_cbf ,_agdb );_afd :=_fge .Patterns [_afc [_cbf ][_agdb ]];if _fbg =_cb .Blit (_afd ,_fge .HalftoneRegionBitmap ,_daae +int (_fge .HGridX ),_ggbdd +int (_fge .HGridY ),_fge .CombinationOperator );_fbg !=nil {return _fbg ;};};};return nil ;
};func (_fbe *GenericRegion )String ()string {_adfa :=&_c .Builder {};_adfa .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_adfa .WriteString (_fbe .RegionSegment .String ()+"\u000a");_adfa .WriteString (_eg .Sprintf ("\u0009\u002d\u0020Us\u0065\u0045\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_fbe .UseExtTemplates ));
_adfa .WriteString (_eg .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0044\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_fbe .IsTPGDon ));_adfa .WriteString (_eg .Sprintf ("\u0009-\u0020G\u0042\u0054\u0065\u006d\u0070l\u0061\u0074e\u003a\u0020\u0025\u0064\u000a",_fbe .GBTemplate ));
_adfa .WriteString (_eg .Sprintf ("\t\u002d \u0049\u0073\u004d\u004d\u0052\u0045\u006e\u0063o\u0064\u0065\u0064\u003a %\u0076\u000a",_fbe .IsMMREncoded ));_adfa .WriteString (_eg .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_fbe .GBAtX ));
_adfa .WriteString (_eg .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_fbe .GBAtY ));_adfa .WriteString (_eg .Sprintf ("\t\u002d \u0047\u0042\u0041\u0074\u004f\u0076\u0065\u0072r\u0069\u0064\u0065\u003a %\u0076\u000a",_fbe .GBAtOverride ));
return _adfa .String ();};func (_gfe *RegionSegment )readCombinationOperator ()error {_fgee ,_ggcf :=_gfe ._eadg .ReadBits (3);if _ggcf !=nil {return _ggcf ;};_gfe .CombinaionOperator =_cb .CombinationOperator (_fgee &0xF);return nil ;};func (_ceg *Header )writeReferredToSegments (_bbda _a .BinaryWriter )(_efdb int ,_egf error ){const _bcg ="\u0077\u0072\u0069te\u0052\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
var (_deff uint16 ;_cgfe uint32 ;);_adg :=_ceg .referenceSize ();_eeb :=1;_aaaf :=make ([]byte ,_adg );for _ ,_ggcd :=range _ceg .RTSNumbers {switch _adg {case 4:_cgfe =uint32 (_ggcd );_d .BigEndian .PutUint32 (_aaaf ,_cgfe );_eeb ,_egf =_bbda .Write (_aaaf );
if _egf !=nil {return 0,_ag .Wrap (_egf ,_bcg ,"u\u0069\u006e\u0074\u0033\u0032\u0020\u0073\u0069\u007a\u0065");};case 2:_deff =uint16 (_ggcd );_d .BigEndian .PutUint16 (_aaaf ,_deff );_eeb ,_egf =_bbda .Write (_aaaf );if _egf !=nil {return 0,_ag .Wrap (_egf ,_bcg ,"\u0075\u0069\u006e\u0074\u0031\u0036");
};default:if _egf =_bbda .WriteByte (byte (_ggcd ));_egf !=nil {return 0,_ag .Wrap (_egf ,_bcg ,"\u0075\u0069\u006et\u0038");};};_efdb +=_eeb ;};return _efdb ,nil ;};func (_geb *GenericRegion )Init (h *Header ,r _a .StreamReader )error {_geb .RegionSegment =NewRegionSegment (r );
_geb ._dad =r ;return _geb .parseHeader ();};func (_geege *HalftoneRegion )GetPatterns ()([]*_cb .Bitmap ,error ){var (_efgg []*_cb .Bitmap ;_babb error ;);for _ ,_eff :=range _geege ._badc .RTSegments {var _edbc Segmenter ;_edbc ,_babb =_eff .GetSegmentData ();
if _babb !=nil {_b .Log .Debug ("\u0047e\u0074\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061 \u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025v",_babb );return nil ,_babb ;};_aag ,_acac :=_edbc .(*PatternDictionary );if !_acac {_babb =_eg .Errorf ("\u0072e\u006c\u0061t\u0065\u0064\u0020\u0073e\u0067\u006d\u0065n\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0070at\u0074\u0065\u0072n\u0020\u0064i\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u003a \u0025\u0054",_edbc );
return nil ,_babb ;};var _beac []*_cb .Bitmap ;_beac ,_babb =_aag .GetDictionary ();if _babb !=nil {_b .Log .Debug ("\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_babb );
return nil ,_babb ;};_efgg =append (_efgg ,_beac ...);};return _efgg ,nil ;};func (_cgba *SymbolDictionary )decodeDifferenceWidth ()(int64 ,error ){if _cgba .IsHuffmanEncoded {switch _cgba .SdHuffDecodeWidthSelection {case 0:_gadg ,_efea :=_ga .GetStandardTable (2);
if _efea !=nil {return 0,_efea ;};return _gadg .Decode (_cgba ._bdgd );case 1:_adcg ,_eafd :=_ga .GetStandardTable (3);if _eafd !=nil {return 0,_eafd ;};return _adcg .Decode (_cgba ._bdgd );case 3:if _cgba ._fbdc ==nil {var _bcbg int ;if _cgba .SdHuffDecodeHeightSelection ==3{_bcbg ++;
};_deeaa ,_ccd :=_cgba .getUserTable (_bcbg );if _ccd !=nil {return 0,_ccd ;};_cgba ._fbdc =_deeaa ;};return _cgba ._fbdc .Decode (_cgba ._bdgd );};}else {_cgffg ,_bcdd :=_cgba ._ddc .DecodeInt (_cgba ._fgfc );if _bcdd !=nil {return 0,_bcdd ;};return int64 (_cgffg ),nil ;
};return 0,nil ;};func (_fage *TextRegion )createRegionBitmap ()error {_fage .RegionBitmap =_cb .New (int (_fage .RegionInfo .BitmapWidth ),int (_fage .RegionInfo .BitmapHeight ));if _fage .DefaultPixel !=0{_fage .RegionBitmap .SetDefaultPixel ();};return nil ;
};func (_aegff *TextRegion )decodeIds ()(int64 ,error ){const _cgbc ="\u0064e\u0063\u006f\u0064\u0065\u0049\u0064s";if _aegff .IsHuffmanEncoded {if _aegff .SbHuffDS ==3{if _aegff ._fbbb ==nil {_eccfg :=0;if _aegff .SbHuffFS ==3{_eccfg ++;};var _ddcd error ;
_aegff ._fbbb ,_ddcd =_aegff .getUserTable (_eccfg );if _ddcd !=nil {return 0,_ag .Wrap (_ddcd ,_cgbc ,"");};};return _aegff ._fbbb .Decode (_aegff ._ceed );};_dfcdb ,_abeb :=_ga .GetStandardTable (8+int (_aegff .SbHuffDS ));if _abeb !=nil {return 0,_ag .Wrap (_abeb ,_cgbc ,"");
};return _dfcdb .Decode (_aegff ._ceed );};_ffeff ,_bafb :=_aegff ._ffdcg .DecodeInt (_aegff ._dddg );if _bafb !=nil {return 0,_ag .Wrap (_bafb ,_cgbc ,"\u0063\u0078\u0049\u0041\u0044\u0053");};return int64 (_ffeff ),nil ;};func (_cedag *TextRegion )setParameters (_bceef *_egg .Decoder ,_dgcc ,_bgbge bool ,_dabdg ,_aedd uint32 ,_ggdf uint32 ,_adgg int8 ,_gbfg uint32 ,_fcgc int8 ,_ebdb _cb .CombinationOperator ,_fegde int8 ,_bfeaf int16 ,_dfdbf ,_fdbf ,_gbafc ,_agceb ,_caaf ,_bbgcb ,_bcaa ,_dade ,_fbefe ,_bbfdd int8 ,_gffb ,_gceg []int8 ,_gfceb []*_cb .Bitmap ,_caeg int8 ){_cedag ._ffdcg =_bceef ;
_cedag .IsHuffmanEncoded =_dgcc ;_cedag .UseRefinement =_bgbge ;_cedag .RegionInfo .BitmapWidth =_dabdg ;_cedag .RegionInfo .BitmapHeight =_aedd ;_cedag .NumberOfSymbolInstances =_ggdf ;_cedag .SbStrips =_adgg ;_cedag .NumberOfSymbols =_gbfg ;_cedag .DefaultPixel =_fcgc ;
_cedag .CombinationOperator =_ebdb ;_cedag .IsTransposed =_fegde ;_cedag .ReferenceCorner =_bfeaf ;_cedag .SbDsOffset =_dfdbf ;_cedag .SbHuffFS =_fdbf ;_cedag .SbHuffDS =_gbafc ;_cedag .SbHuffDT =_agceb ;_cedag .SbHuffRDWidth =_caaf ;_cedag .SbHuffRDHeight =_bbgcb ;
_cedag .SbHuffRSize =_fbefe ;_cedag .SbHuffRDX =_bcaa ;_cedag .SbHuffRDY =_dade ;_cedag .SbrTemplate =_bbfdd ;_cedag .SbrATX =_gffb ;_cedag .SbrATY =_gceg ;_cedag .Symbols =_gfceb ;_cedag ._eafa =_caeg ;};func (_fabf *TableSegment )HtOOB ()int32 {return _fabf ._fdee };
func (_ccddc *TextRegion )decodeIb (_bdgdg ,_fdeg int64 )(*_cb .Bitmap ,error ){const _fcd ="\u0064\u0065\u0063\u006f\u0064\u0065\u0049\u0062";var (_bgaca error ;_eadc *_cb .Bitmap ;);if _bdgdg ==0{if int (_fdeg )> len (_ccddc .Symbols )-1{return nil ,_ag .Error (_fcd ,"\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0049\u0042\u0020\u0062\u0069\u0074\u006d\u0061\u0070\u002e\u0020\u0069\u006e\u0064\u0065x\u0020\u006f\u0075\u0074\u0020o\u0066\u0020r\u0061\u006e\u0067\u0065");
};return _ccddc .Symbols [int (_fdeg )],nil ;};var _ddagf ,_gffg ,_cba ,_cdac int64 ;_ddagf ,_bgaca =_ccddc .decodeRdw ();if _bgaca !=nil {return nil ,_ag .Wrap (_bgaca ,_fcd ,"");};_gffg ,_bgaca =_ccddc .decodeRdh ();if _bgaca !=nil {return nil ,_ag .Wrap (_bgaca ,_fcd ,"");
};_cba ,_bgaca =_ccddc .decodeRdx ();if _bgaca !=nil {return nil ,_ag .Wrap (_bgaca ,_fcd ,"");};_cdac ,_bgaca =_ccddc .decodeRdy ();if _bgaca !=nil {return nil ,_ag .Wrap (_bgaca ,_fcd ,"");};if _ccddc .IsHuffmanEncoded {if _ ,_bgaca =_ccddc .decodeSymInRefSize ();
_bgaca !=nil {return nil ,_ag .Wrap (_bgaca ,_fcd ,"");};_ccddc ._ceed .Align ();};_aede :=_ccddc .Symbols [_fdeg ];_dbcc :=uint32 (_aede .Width );_adfd :=uint32 (_aede .Height );_cfdg :=int32 (uint32 (_ddagf )>>1)+int32 (_cba );_cabb :=int32 (uint32 (_gffg )>>1)+int32 (_cdac );
if _ccddc ._bged ==nil {_ccddc ._bged =_ge (_ccddc ._ceed ,nil );};_ccddc ._bged .setParameters (_ccddc ._bfcd ,_ccddc ._ffdcg ,_ccddc .SbrTemplate ,_dbcc +uint32 (_ddagf ),_adfd +uint32 (_gffg ),_aede ,_cfdg ,_cabb ,false ,_ccddc .SbrATX ,_ccddc .SbrATY );
_eadc ,_bgaca =_ccddc ._bged .GetRegionBitmap ();if _bgaca !=nil {return nil ,_ag .Wrap (_bgaca ,_fcd ,"\u0067\u0072\u0066");};if _ccddc .IsHuffmanEncoded {_ccddc ._ceed .Align ();};return _eadc ,nil ;};func (_ddfg *GenericRegion )setOverrideFlag (_adbc int ){_ddfg .GBAtOverride [_adbc ]=true ;
_ddfg ._cgg =true ;};func (_gegdc *PageInformationSegment )readWidthAndHeight ()error {_abba ,_egdd :=_gegdc ._afefc .ReadBits (32);if _egdd !=nil {return _egdd ;};_gegdc .PageBMWidth =int (_abba &_fg .MaxInt32 );_abba ,_egdd =_gegdc ._afefc .ReadBits (32);
if _egdd !=nil {return _egdd ;};_gegdc .PageBMHeight =int (_abba &_fg .MaxInt32 );return nil ;};func (_gbea *GenericRegion )decodeTemplate3 (_dgdb ,_aca ,_fda int ,_feda ,_eccc int )(_bac error ){const _ade ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0033";
var (_efe ,_fde int ;_eegf int ;_cgga byte ;_bacf ,_ccbe int ;);if _dgdb >=1{_cgga ,_bac =_gbea .Bitmap .GetByte (_eccc );if _bac !=nil {return _ag .Wrap (_bac ,_ade ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_eegf =int (_cgga );};_efe =(_eegf >>1)&0x70;
for _bagf :=0;_bagf < _fda ;_bagf =_bacf {var (_fabg byte ;_fcbg int ;);_bacf =_bagf +8;if _dea :=_aca -_bagf ;_dea > 8{_fcbg =8;}else {_fcbg =_dea ;};if _dgdb >=1{_eegf <<=8;if _bacf < _aca {_cgga ,_bac =_gbea .Bitmap .GetByte (_eccc +1);if _bac !=nil {return _ag .Wrap (_bac ,_ade ,"\u0069\u006e\u006e\u0065\u0072\u0020\u002d\u0020\u006c\u0069\u006e\u0065 \u003e\u003d\u0020\u0031");
};_eegf |=int (_cgga );};};for _fcec :=0;_fcec < _fcbg ;_fcec ++{if _gbea ._cgg {_fde =_gbea .overrideAtTemplate3 (_efe ,_bagf +_fcec ,_dgdb ,int (_fabg ),_fcec );_gbea ._dfef .SetIndex (int32 (_fde ));}else {_gbea ._dfef .SetIndex (int32 (_efe ));};_ccbe ,_bac =_gbea ._age .DecodeBit (_gbea ._dfef );
if _bac !=nil {return _ag .Wrap (_bac ,_ade ,"");};_fabg |=byte (_ccbe )<<byte (7-_fcec );_efe =((_efe &0x1f7)<<1)|_ccbe |((_eegf >>uint (8-_fcec ))&0x010);};if _gbf :=_gbea .Bitmap .SetByte (_feda ,_fabg );_gbf !=nil {return _ag .Wrap (_gbf ,_ade ,"");
};_feda ++;_eccc ++;};return nil ;};func (_dfgb *SymbolDictionary )getToExportFlags ()([]int ,error ){var (_ffbe int ;_fbcc int32 ;_befbbe error ;_edbb =int32 (_dfgb ._abfc +_dfgb .NumberOfNewSymbols );_gfge =make ([]int ,_edbb ););for _gefg :=int32 (0);
_gefg < _edbb ;_gefg +=_fbcc {if _dfgb .IsHuffmanEncoded {_fdda ,_gaca :=_ga .GetStandardTable (1);if _gaca !=nil {return nil ,_gaca ;};_dadb ,_gaca :=_fdda .Decode (_dfgb ._bdgd );if _gaca !=nil {return nil ,_gaca ;};_fbcc =int32 (_dadb );}else {_fbcc ,_befbbe =_dfgb ._ddc .DecodeInt (_dfgb ._cdbe );
if _befbbe !=nil {return nil ,_befbbe ;};};if _fbcc !=0{for _cad :=_gefg ;_cad < _gefg +_fbcc ;_cad ++{_gfge [_cad ]=_ffbe ;};};if _ffbe ==0{_ffbe =1;}else {_ffbe =0;};};return _gfge ,nil ;};func (_ebad *TextRegion )symbolIDCodeLengths ()error {var (_fad []*_ga .Code ;
_ggbcg uint64 ;_gdeb _ga .Tabler ;_dfge error ;);for _bgf :=0;_bgf < 35;_bgf ++{_ggbcg ,_dfge =_ebad ._ceed .ReadBits (4);if _dfge !=nil {return _dfge ;};_cafa :=int (_ggbcg &0xf);if _cafa > 0{_fad =append (_fad ,_ga .NewCode (int32 (_cafa ),0,int32 (_bgf ),false ));
};};_gdeb ,_dfge =_ga .NewFixedSizeTable (_fad );if _dfge !=nil {return _dfge ;};var (_gaea int64 ;_fbaa uint32 ;_bgff []*_ga .Code ;_gafb int64 ;);for _fbaa < _ebad .NumberOfSymbols {_gafb ,_dfge =_gdeb .Decode (_ebad ._ceed );if _dfge !=nil {return _dfge ;
};if _gafb < 32{if _gafb > 0{_bgff =append (_bgff ,_ga .NewCode (int32 (_gafb ),0,int32 (_fbaa ),false ));};_gaea =_gafb ;_fbaa ++;}else {var _efgb ,_fedbb int64 ;switch _gafb {case 32:_ggbcg ,_dfge =_ebad ._ceed .ReadBits (2);if _dfge !=nil {return _dfge ;
};_efgb =3+int64 (_ggbcg );if _fbaa > 0{_fedbb =_gaea ;};case 33:_ggbcg ,_dfge =_ebad ._ceed .ReadBits (3);if _dfge !=nil {return _dfge ;};_efgb =3+int64 (_ggbcg );case 34:_ggbcg ,_dfge =_ebad ._ceed .ReadBits (7);if _dfge !=nil {return _dfge ;};_efgb =11+int64 (_ggbcg );
};for _bccbg :=0;_bccbg < int (_efgb );_bccbg ++{if _fedbb > 0{_bgff =append (_bgff ,_ga .NewCode (int32 (_fedbb ),0,int32 (_fbaa ),false ));};_fbaa ++;};};};_ebad ._ceed .Align ();_ebad ._ggcg ,_dfge =_ga .NewFixedSizeTable (_bgff );return _dfge ;};func (_geaa *TextRegion )decodeRdw ()(int64 ,error ){const _dbbag ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064w";
if _geaa .IsHuffmanEncoded {if _geaa .SbHuffRDWidth ==3{if _geaa ._dfdfe ==nil {var (_dgaca int ;_gdfd error ;);if _geaa .SbHuffFS ==3{_dgaca ++;};if _geaa .SbHuffDS ==3{_dgaca ++;};if _geaa .SbHuffDT ==3{_dgaca ++;};_geaa ._dfdfe ,_gdfd =_geaa .getUserTable (_dgaca );
if _gdfd !=nil {return 0,_ag .Wrap (_gdfd ,_dbbag ,"");};};return _geaa ._dfdfe .Decode (_geaa ._ceed );};_cfda ,_cebg :=_ga .GetStandardTable (14+int (_geaa .SbHuffRDWidth ));if _cebg !=nil {return 0,_ag .Wrap (_cebg ,_dbbag ,"");};return _cfda .Decode (_geaa ._ceed );
};_bbcfc ,_ceeb :=_geaa ._ffdcg .DecodeInt (_geaa ._deed );if _ceeb !=nil {return 0,_ag .Wrap (_ceeb ,_dbbag ,"");};return int64 (_bbcfc ),nil ;};func (_ggbb *TextRegion )checkInput ()error {const _facg ="\u0063\u0068\u0065\u0063\u006b\u0049\u006e\u0070\u0075\u0074";
if !_ggbb .UseRefinement {if _ggbb .SbrTemplate !=0{_b .Log .Debug ("\u0053\u0062\u0072Te\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_ggbb .SbrTemplate =0;};};if _ggbb .SbHuffFS ==2||_ggbb .SbHuffRDWidth ==2||_ggbb .SbHuffRDHeight ==2||_ggbb .SbHuffRDX ==2||_ggbb .SbHuffRDY ==2{return _ag .Error (_facg ,"h\u0075\u0066\u0066\u006d\u0061\u006e \u0066\u006c\u0061\u0067\u0020\u0076a\u006c\u0075\u0065\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074e\u0064");
};if !_ggbb .UseRefinement {if _ggbb .SbHuffRSize !=0{_b .Log .Debug ("\u0053\u0062\u0048uf\u0066\u0052\u0053\u0069\u007a\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_ggbb .SbHuffRSize =0;};if _ggbb .SbHuffRDY !=0{_b .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044Y\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");
_ggbb .SbHuffRDY =0;};if _ggbb .SbHuffRDX !=0{_b .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044X\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_ggbb .SbHuffRDX =0;};if _ggbb .SbHuffRDWidth !=0{_b .Log .Debug ("\u0053b\u0048\u0075\u0066\u0066R\u0044\u0057\u0069\u0064\u0074h\u0020s\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u00200");
_ggbb .SbHuffRDWidth =0;};if _ggbb .SbHuffRDHeight !=0{_b .Log .Debug ("\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069g\u0068\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0030");_ggbb .SbHuffRDHeight =0;};};return nil ;
};func (_gec *TextRegion )decodeCurrentT ()(int64 ,error ){if _gec .SbStrips !=1{if _gec .IsHuffmanEncoded {_fbbc ,_bgbf :=_gec ._ceed .ReadBits (byte (_gec .LogSBStrips ));return int64 (_fbbc ),_bgbf ;};_bfdd ,_cfba :=_gec ._ffdcg .DecodeInt (_gec ._bgge );
if _cfba !=nil {return 0,_cfba ;};return int64 (_bfdd ),nil ;};return 0,nil ;};func (_fffb *TextRegion )decodeRdy ()(int64 ,error ){const _efbd ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064y";if _fffb .IsHuffmanEncoded {if _fffb .SbHuffRDY ==3{if _fffb ._bbfd ==nil {var (_afbf int ;
_dbdgd error ;);if _fffb .SbHuffFS ==3{_afbf ++;};if _fffb .SbHuffDS ==3{_afbf ++;};if _fffb .SbHuffDT ==3{_afbf ++;};if _fffb .SbHuffRDWidth ==3{_afbf ++;};if _fffb .SbHuffRDHeight ==3{_afbf ++;};if _fffb .SbHuffRDX ==3{_afbf ++;};_fffb ._bbfd ,_dbdgd =_fffb .getUserTable (_afbf );
if _dbdgd !=nil {return 0,_ag .Wrap (_dbdgd ,_efbd ,"");};};return _fffb ._bbfd .Decode (_fffb ._ceed );};_bedca ,_fbge :=_ga .GetStandardTable (14+int (_fffb .SbHuffRDY ));if _fbge !=nil {return 0,_fbge ;};return _bedca .Decode (_fffb ._ceed );};_dbeae ,_bffb :=_fffb ._ffdcg .DecodeInt (_fffb ._fddc );
if _bffb !=nil {return 0,_ag .Wrap (_bffb ,_efbd ,"");};return int64 (_dbeae ),nil ;};func (_dgcf *Header )readDataStartOffset (_aced _a .StreamReader ,_cgec OrganizationType ){if _cgec ==OSequential {_dgcf .SegmentDataStartOffset =uint64 (_aced .StreamPosition ());
};};type SegmentEncoder interface{Encode (_dceb _a .BinaryWriter )(_gddd int ,_dadg error );};func (_ded *GenericRefinementRegion )getGrReference ()(*_cb .Bitmap ,error ){segments :=_ded ._ff .RTSegments ;if len (segments )==0{return nil ,_g .New ("\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0065\u0078is\u0074\u0073");
};_ea ,_ecd :=segments [0].GetSegmentData ();if _ecd !=nil {return nil ,_ecd ;};_abe ,_cc :=_ea .(Regioner );if !_cc {return nil ,_eg .Errorf ("\u0072\u0065\u0066\u0065\u0072r\u0065\u0064\u0020\u0074\u006f\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_ea );
};return _abe .GetRegionBitmap ();};func (_cbec *Header )readHeaderFlags ()error {const _gbfa ="\u0072e\u0061d\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006c\u0061\u0067\u0073";_gegd ,_dbab :=_cbec .Reader .ReadBit ();if _dbab !=nil {return _ag .Wrap (_dbab ,_gbfa ,"r\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067");
};if _gegd !=0{_cbec .RetainFlag =true ;};_gegd ,_dbab =_cbec .Reader .ReadBit ();if _dbab !=nil {return _ag .Wrap (_dbab ,_gbfa ,"\u0070\u0061g\u0065\u0020\u0061s\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e");};if _gegd !=0{_cbec .PageAssociationFieldSize =true ;
};_dab ,_dbab :=_cbec .Reader .ReadBits (6);if _dbab !=nil {return _ag .Wrap (_dbab ,_gbfa ,"\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065");};_cbec .Type =Type (int (_dab ));return nil ;};func (_cbfd *PageInformationSegment )readCombinationOperator ()error {_gagd ,_ffbfg :=_cbfd ._afefc .ReadBits (2);
if _ffbfg !=nil {return _ffbfg ;};_cbfd ._efab =_cb .CombinationOperator (int (_gagd ));return nil ;};func (_dcf *PageInformationSegment )readDefaultPixelValue ()error {_egfe ,_adgf :=_dcf ._afefc .ReadBit ();if _adgf !=nil {return _adgf ;};_dcf .DefaultPixelValue =uint8 (_egfe &0xf);
return nil ;};func (_dcgc *GenericRefinementRegion )getPixel (_dag *_cb .Bitmap ,_ffd ,_dacc int )int {if _ffd < 0||_ffd >=_dag .Width {return 0;};if _dacc < 0||_dacc >=_dag .Height {return 0;};if _dag .GetPixel (_ffd ,_dacc ){return 1;};return 0;};func (_cecb *TextRegion )decodeID ()(int64 ,error ){if _cecb .IsHuffmanEncoded {if _cecb ._ggcg ==nil {_gead ,_egddd :=_cecb ._ceed .ReadBits (byte (_cecb ._eafa ));
return int64 (_gead ),_egddd ;};return _cecb ._ggcg .Decode (_cecb ._ceed );};return _cecb ._ffdcg .DecodeIAID (uint64 (_cecb ._eafa ),_cecb ._edfd );};type Segmenter interface{Init (_adbfd *Header ,_cdbf _a .StreamReader )error ;};func (_egga *SymbolDictionary )setInSyms ()error {if _egga .Header .RTSegments !=nil {return _egga .retrieveImportSymbols ();
};_egga ._cgeg =make ([]*_cb .Bitmap ,0);return nil ;};func (_gced *GenericRegion )updateOverrideFlags ()error {const _gfc ="\u0075\u0070\u0064\u0061te\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _gced .GBAtX ==nil ||_gced .GBAtY ==nil {return nil ;
};if len (_gced .GBAtX )!=len (_gced .GBAtY ){return _ag .Errorf (_gfc ,"i\u006eco\u0073i\u0073t\u0065\u006e\u0074\u0020\u0041T\u0020\u0070\u0069x\u0065\u006c\u002e\u0020\u0041m\u006f\u0075\u006et\u0020\u006f\u0066\u0020\u0027\u0078\u0027\u0020\u0070\u0069\u0078e\u006c\u0073\u003a %d\u002c\u0020\u0041\u006d\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0027\u0079\u0027\u0020\u0070\u0069\u0078e\u006cs\u003a\u0020\u0025\u0064",len (_gced .GBAtX ),len (_gced .GBAtY ));
};_gced .GBAtOverride =make ([]bool ,len (_gced .GBAtX ));switch _gced .GBTemplate {case 0:if !_gced .UseExtTemplates {if _gced .GBAtX [0]!=3||_gced .GBAtY [0]!=-1{_gced .setOverrideFlag (0);};if _gced .GBAtX [1]!=-3||_gced .GBAtY [1]!=-1{_gced .setOverrideFlag (1);
};if _gced .GBAtX [2]!=2||_gced .GBAtY [2]!=-2{_gced .setOverrideFlag (2);};if _gced .GBAtX [3]!=-2||_gced .GBAtY [3]!=-2{_gced .setOverrideFlag (3);};}else {if _gced .GBAtX [0]!=-2||_gced .GBAtY [0]!=0{_gced .setOverrideFlag (0);};if _gced .GBAtX [1]!=0||_gced .GBAtY [1]!=-2{_gced .setOverrideFlag (1);
};if _gced .GBAtX [2]!=-2||_gced .GBAtY [2]!=-1{_gced .setOverrideFlag (2);};if _gced .GBAtX [3]!=-1||_gced .GBAtY [3]!=-2{_gced .setOverrideFlag (3);};if _gced .GBAtX [4]!=1||_gced .GBAtY [4]!=-2{_gced .setOverrideFlag (4);};if _gced .GBAtX [5]!=2||_gced .GBAtY [5]!=-1{_gced .setOverrideFlag (5);
};if _gced .GBAtX [6]!=-3||_gced .GBAtY [6]!=0{_gced .setOverrideFlag (6);};if _gced .GBAtX [7]!=-4||_gced .GBAtY [7]!=0{_gced .setOverrideFlag (7);};if _gced .GBAtX [8]!=2||_gced .GBAtY [8]!=-2{_gced .setOverrideFlag (8);};if _gced .GBAtX [9]!=3||_gced .GBAtY [9]!=-1{_gced .setOverrideFlag (9);
};if _gced .GBAtX [10]!=-2||_gced .GBAtY [10]!=-2{_gced .setOverrideFlag (10);};if _gced .GBAtX [11]!=-3||_gced .GBAtY [11]!=-1{_gced .setOverrideFlag (11);};};case 1:if _gced .GBAtX [0]!=3||_gced .GBAtY [0]!=-1{_gced .setOverrideFlag (0);};case 2:if _gced .GBAtX [0]!=2||_gced .GBAtY [0]!=-1{_gced .setOverrideFlag (0);
};case 3:if _gced .GBAtX [0]!=2||_gced .GBAtY [0]!=-1{_gced .setOverrideFlag (0);};};return nil ;};func (_accc *TextRegion )Encode (w _a .BinaryWriter )(_eege int ,_ccda error ){const _bced ="\u0054\u0065\u0078\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u002e\u0045n\u0063\u006f\u0064\u0065";
if _eege ,_ccda =_accc .RegionInfo .Encode (w );_ccda !=nil {return _eege ,_ag .Wrap (_ccda ,_bced ,"");};var _ffef int ;if _ffef ,_ccda =_accc .encodeFlags (w );_ccda !=nil {return _eege ,_ag .Wrap (_ccda ,_bced ,"");};_eege +=_ffef ;if _ffef ,_ccda =_accc .encodeSymbols (w );
_ccda !=nil {return _eege ,_ag .Wrap (_ccda ,_bced ,"");};_eege +=_ffef ;return _eege ,nil ;};func (_eacc *PageInformationSegment )Encode (w _a .BinaryWriter )(_daef int ,_edbe error ){const _acbe ="\u0050\u0061g\u0065\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u002e\u0045\u006eco\u0064\u0065";
_bcgg :=make ([]byte ,4);_d .BigEndian .PutUint32 (_bcgg ,uint32 (_eacc .PageBMWidth ));_daef ,_edbe =w .Write (_bcgg );if _edbe !=nil {return _daef ,_ag .Wrap (_edbe ,_acbe ,"\u0077\u0069\u0064t\u0068");};_d .BigEndian .PutUint32 (_bcgg ,uint32 (_eacc .PageBMHeight ));
var _aacd int ;_aacd ,_edbe =w .Write (_bcgg );if _edbe !=nil {return _aacd +_daef ,_ag .Wrap (_edbe ,_acbe ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_daef +=_aacd ;_d .BigEndian .PutUint32 (_bcgg ,uint32 (_eacc .ResolutionX ));_aacd ,_edbe =w .Write (_bcgg );
if _edbe !=nil {return _aacd +_daef ,_ag .Wrap (_edbe ,_acbe ,"\u0078\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_daef +=_aacd ;_d .BigEndian .PutUint32 (_bcgg ,uint32 (_eacc .ResolutionY ));if _aacd ,_edbe =w .Write (_bcgg );_edbe !=nil {return _aacd +_daef ,_ag .Wrap (_edbe ,_acbe ,"\u0079\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");
};_daef +=_aacd ;if _edbe =_eacc .encodeFlags (w );_edbe !=nil {return _daef ,_ag .Wrap (_edbe ,_acbe ,"");};_daef ++;if _aacd ,_edbe =_eacc .encodeStripingInformation (w );_edbe !=nil {return _daef ,_ag .Wrap (_edbe ,_acbe ,"");};_daef +=_aacd ;return _daef ,nil ;
};func (_eccd *Header )writeReferredToCount (_fbfg _a .BinaryWriter )(_ccbb int ,_afef error ){const _geddc ="w\u0072i\u0074\u0065\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0043ou\u006e\u0074";_eccd .RTSNumbers =make ([]int ,len (_eccd .RTSegments ));
for _afg ,_eece :=range _eccd .RTSegments {_eccd .RTSNumbers [_afg ]=int (_eece .SegmentNumber );};if len (_eccd .RTSNumbers )<=4{var _bca byte ;if len (_eccd .RetainBits )>=1{_bca =_eccd .RetainBits [0];};_bca |=byte (len (_eccd .RTSNumbers ))<<5;if _afef =_fbfg .WriteByte (_bca );
_afef !=nil {return 0,_ag .Wrap (_afef ,_geddc ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return 1,nil ;};_faeg :=uint32 (len (_eccd .RTSNumbers ));_fdcfd :=make ([]byte ,4+_dfc .Ceil (len (_eccd .RTSNumbers )+1,8));_faeg |=0x7<<29;
_d .BigEndian .PutUint32 (_fdcfd ,_faeg );copy (_fdcfd [1:],_eccd .RetainBits );_ccbb ,_afef =_fbfg .Write (_fdcfd );if _afef !=nil {return 0,_ag .Wrap (_afef ,_geddc ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return _ccbb ,nil ;
};func (_gc *GenericRefinementRegion )GetRegionBitmap ()(*_cb .Bitmap ,error ){var _ecc error ;_b .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _ecc !=nil {_b .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0047\u0065\u0074R\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006dap\u0020\u0066a\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_ecc );
}else {_b .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _gc .RegionBitmap !=nil {return _gc .RegionBitmap ,nil ;};_gcc :=0;if _gc .ReferenceBitmap ==nil {_gc .ReferenceBitmap ,_ecc =_gc .getGrReference ();if _ecc !=nil {return nil ,_ecc ;};};if _gc ._aeb ==nil {_gc ._aeb ,_ecc =_egg .New (_gc ._ec );
if _ecc !=nil {return nil ,_ecc ;};};if _gc ._gac ==nil {_gc ._gac =_egg .NewStats (8192,1);};_gc .RegionBitmap =_cb .New (int (_gc .RegionInfo .BitmapWidth ),int (_gc .RegionInfo .BitmapHeight ));if _gc .TemplateID ==0{if _ecc =_gc .updateOverride ();
_ecc !=nil {return nil ,_ecc ;};};_ffb :=(_gc .RegionBitmap .Width +7)&-8;var _ce int ;if _gc .IsTPGROn {_ce =int (-_gc .ReferenceDY )*_gc .ReferenceBitmap .RowStride ;};_de :=_ce +1;for _bfef :=0;_bfef < _gc .RegionBitmap .Height ;_bfef ++{if _gc .IsTPGROn {_fgf ,_gg :=_gc .decodeSLTP ();
if _gg !=nil {return nil ,_gg ;};_gcc ^=_fgf ;};if _gcc ==0{_ecc =_gc .decodeOptimized (_bfef ,_gc .RegionBitmap .Width ,_gc .RegionBitmap .RowStride ,_gc .ReferenceBitmap .RowStride ,_ffb ,_ce ,_de );if _ecc !=nil {return nil ,_ecc ;};}else {_ecc =_gc .decodeTypicalPredictedLine (_bfef ,_gc .RegionBitmap .Width ,_gc .RegionBitmap .RowStride ,_gc .ReferenceBitmap .RowStride ,_ffb ,_ce );
if _ecc !=nil {return nil ,_ecc ;};};};return _gc .RegionBitmap ,nil ;};func (_becc *SymbolDictionary )checkInput ()error {if _becc .SdHuffDecodeHeightSelection ==2{_b .Log .Debug ("\u0053\u0079\u006d\u0062\u006fl\u0020\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u0053e\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0070\u0065r\u006d\u0069\u0074\u0074\u0065\u0064",_becc .SdHuffDecodeHeightSelection );
};if _becc .SdHuffDecodeWidthSelection ==2{_b .Log .Debug ("\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0057\u0069\u0064t\u0068\u0020\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061l\u0075\u0065\u0020\u006e\u006f\u0074 \u0070\u0065r\u006d\u0069t\u0074e\u0064",_becc .SdHuffDecodeWidthSelection );
};if _becc .IsHuffmanEncoded {if _becc .SdTemplate !=0{_b .Log .Debug ("\u0053\u0044T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e \u0030\u0029",_becc .SdTemplate );
};if !_becc .UseRefinementAggregation {if !_becc .UseRefinementAggregation {if _becc ._fegc {_b .Log .Debug ("\u0049\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074ex\u0074\u0052\u0065\u0074\u0061\u0069n\u0065\u0064\u0020\u003d\u0020\u0074\u0072\u0075\u0065\u0020\u0028\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0066\u0061\u006cs\u0065\u0029");
_becc ._fegc =false ;};if _becc ._gfbd {_b .Log .Debug ("\u0069s\u0043\u006fd\u0069\u006e\u0067\u0043o\u006e\u0074\u0065x\u0074\u0055\u0073\u0065\u0064\u0020\u003d\u0020\u0074ru\u0065\u0020\u0028s\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020f\u0061\u006cs\u0065\u0029");
_becc ._gfbd =false ;};};};}else {if _becc .SdHuffBMSizeSelection !=0{_b .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066B\u004d\u0053\u0069\u007a\u0065\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_becc .SdHuffBMSizeSelection =0;};if _becc .SdHuffDecodeWidthSelection !=0{_b .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068\u0053\u0065\u006c\u0065\u0063\u0074\u0069o\u006e\u0020\u0073\u0068\u006fu\u006c\u0064 \u0062\u0065\u0020\u0030");
_becc .SdHuffDecodeWidthSelection =0;};if _becc .SdHuffDecodeHeightSelection !=0{_b .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0048e\u0069\u0067\u0068\u0074\u0053\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_becc .SdHuffDecodeHeightSelection =0;};};if !_becc .UseRefinementAggregation {if _becc .SdrTemplate !=0{_b .Log .Debug ("\u0053\u0044\u0052\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u003d\u0020\u0025\u0064\u0020\u0028s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_becc .SdrTemplate );
_becc .SdrTemplate =0;};};if !_becc .IsHuffmanEncoded ||!_becc .UseRefinementAggregation {if _becc .SdHuffAggInstanceSelection {_b .Log .Debug ("\u0053d\u0048\u0075f\u0066\u0041\u0067g\u0049\u006e\u0073\u0074\u0061\u006e\u0063e\u0053\u0065\u006c\u0065\u0063\u0074i\u006f\u006e\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_becc .SdHuffAggInstanceSelection );
};};return nil ;};func (_aefed *TableSegment )parseHeader ()error {var (_agbda int ;_edaf uint64 ;_aaf error ;);_agbda ,_aaf =_aefed ._gcdf .ReadBit ();if _aaf !=nil {return _aaf ;};if _agbda ==1{return _eg .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0061\u0062\u006c\u0065 \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0064e\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u002e\u0020\u0042\u002e\u0032\u002e1\u0020\u0043\u006f\u0064\u0065\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0042\u0069\u0074\u0020\u0037\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u007a\u0065\u0072\u006f\u002e\u0020\u0057a\u0073\u003a \u0025\u0064",_agbda );
};if _edaf ,_aaf =_aefed ._gcdf .ReadBits (3);_aaf !=nil {return _aaf ;};_aefed ._bagb =(int32 (_edaf )+1)&0xf;if _edaf ,_aaf =_aefed ._gcdf .ReadBits (3);_aaf !=nil {return _aaf ;};_aefed ._dbcf =(int32 (_edaf )+1)&0xf;if _edaf ,_aaf =_aefed ._gcdf .ReadBits (32);
_aaf !=nil {return _aaf ;};_aefed ._feae =int32 (_edaf &_fg .MaxInt32 );if _edaf ,_aaf =_aefed ._gcdf .ReadBits (32);_aaf !=nil {return _aaf ;};_aefed ._cbgg =int32 (_edaf &_fg .MaxInt32 );return nil ;};func (_bddab *PageInformationSegment )checkInput ()error {if _bddab .PageBMHeight ==_fg .MaxInt32 {if !_bddab .IsStripe {_b .Log .Debug ("P\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0053\u0065\u0067me\u006e\u0074\u002e\u0049s\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0073\u0068ou\u006c\u0064 \u0062\u0065\u0020\u0074\u0072\u0075\u0065\u002e");
};};return nil ;};func (_dbba *Header )CleanSegmentData (){if _dbba .SegmentData !=nil {_dbba .SegmentData =nil ;};};var _ SegmentEncoder =&RegionSegment {};func (_fdff *GenericRegion )decodeLine (_ccf ,_adbbg ,_bba int )error {const _fdd ="\u0064\u0065\u0063\u006f\u0064\u0065\u004c\u0069\u006e\u0065";
_fgff :=_fdff .Bitmap .GetByteIndex (0,_ccf );_fba :=_fgff -_fdff .Bitmap .RowStride ;switch _fdff .GBTemplate {case 0:if !_fdff .UseExtTemplates {return _fdff .decodeTemplate0a (_ccf ,_adbbg ,_bba ,_fgff ,_fba );};return _fdff .decodeTemplate0b (_ccf ,_adbbg ,_bba ,_fgff ,_fba );
case 1:return _fdff .decodeTemplate1 (_ccf ,_adbbg ,_bba ,_fgff ,_fba );case 2:return _fdff .decodeTemplate2 (_ccf ,_adbbg ,_bba ,_fgff ,_fba );case 3:return _fdff .decodeTemplate3 (_ccf ,_adbbg ,_bba ,_fgff ,_fba );};return _ag .Errorf (_fdd ,"\u0069\u006e\u0076a\u006c\u0069\u0064\u0020G\u0042\u0054\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u003a\u0020\u0025\u0064",_fdff .GBTemplate );
};func (_gbegb *SymbolDictionary )encodeFlags (_eaad _a .BinaryWriter )(_dadf int ,_febcd error ){const _egeeb ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _febcd =_eaad .SkipBits (3);_febcd !=nil {return 0,_ag .Wrap (_febcd ,_egeeb ,"\u0065\u006d\u0070\u0074\u0079\u0020\u0062\u0069\u0074\u0073");
};var _bde int ;if _gbegb .SdrTemplate > 0{_bde =1;};if _febcd =_eaad .WriteBit (_bde );_febcd !=nil {return _dadf ,_ag .Wrap (_febcd ,_egeeb ,"s\u0064\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_bde =0;if _gbegb .SdTemplate > 1{_bde =1;
};if _febcd =_eaad .WriteBit (_bde );_febcd !=nil {return _dadf ,_ag .Wrap (_febcd ,_egeeb ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_bde =0;if _gbegb .SdTemplate ==1||_gbegb .SdTemplate ==3{_bde =1;};if _febcd =_eaad .WriteBit (_bde );
_febcd !=nil {return _dadf ,_ag .Wrap (_febcd ,_egeeb ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_bde =0;if _gbegb ._fegc {_bde =1;};if _febcd =_eaad .WriteBit (_bde );_febcd !=nil {return _dadf ,_ag .Wrap (_febcd ,_egeeb ,"\u0063\u006f\u0064in\u0067\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0065\u0064");
};_bde =0;if _gbegb ._gfbd {_bde =1;};if _febcd =_eaad .WriteBit (_bde );_febcd !=nil {return _dadf ,_ag .Wrap (_febcd ,_egeeb ,"\u0063\u006f\u0064\u0069ng\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0075\u0073\u0065\u0064");};_bde =0;if _gbegb .SdHuffAggInstanceSelection {_bde =1;
};if _febcd =_eaad .WriteBit (_bde );_febcd !=nil {return _dadf ,_ag .Wrap (_febcd ,_egeeb ,"\u0073\u0064\u0048\u0075\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074");};_bde =int (_gbegb .SdHuffBMSizeSelection );if _febcd =_eaad .WriteBit (_bde );
_febcd !=nil {return _dadf ,_ag .Wrap (_febcd ,_egeeb ,"\u0073\u0064\u0048u\u0066\u0066\u0042\u006d\u0053\u0069\u007a\u0065");};_bde =0;if _gbegb .SdHuffDecodeWidthSelection > 1{_bde =1;};if _febcd =_eaad .WriteBit (_bde );_febcd !=nil {return _dadf ,_ag .Wrap (_febcd ,_egeeb ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");
};_bde =0;switch _gbegb .SdHuffDecodeWidthSelection {case 1,3:_bde =1;};if _febcd =_eaad .WriteBit (_bde );_febcd !=nil {return _dadf ,_ag .Wrap (_febcd ,_egeeb ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_bde =0;if _gbegb .SdHuffDecodeHeightSelection > 1{_bde =1;
};if _febcd =_eaad .WriteBit (_bde );_febcd !=nil {return _dadf ,_ag .Wrap (_febcd ,_egeeb ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_bde =0;switch _gbegb .SdHuffDecodeHeightSelection {case 1,3:_bde =1;};if _febcd =_eaad .WriteBit (_bde );
_febcd !=nil {return _dadf ,_ag .Wrap (_febcd ,_egeeb ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_bde =0;if _gbegb .UseRefinementAggregation {_bde =1;};if _febcd =_eaad .WriteBit (_bde );_febcd !=nil {return _dadf ,_ag .Wrap (_febcd ,_egeeb ,"\u0073\u0064\u0052\u0065\u0066\u0041\u0067\u0067");
};_bde =0;if _gbegb .IsHuffmanEncoded {_bde =1;};if _febcd =_eaad .WriteBit (_bde );_febcd !=nil {return _dadf ,_ag .Wrap (_febcd ,_egeeb ,"\u0073\u0064\u0048\u0075\u0066\u0066");};return 2,nil ;};type SymbolDictionary struct{_bdgd _a .StreamReader ;SdrTemplate int8 ;
SdTemplate int8 ;_fegc bool ;_gfbd bool ;SdHuffAggInstanceSelection bool ;SdHuffBMSizeSelection int8 ;SdHuffDecodeWidthSelection int8 ;SdHuffDecodeHeightSelection int8 ;UseRefinementAggregation bool ;IsHuffmanEncoded bool ;SdATX []int8 ;SdATY []int8 ;SdrATX []int8 ;
SdrATY []int8 ;NumberOfExportedSymbols uint32 ;NumberOfNewSymbols uint32 ;Header *Header ;_abfc uint32 ;_cgeg []*_cb .Bitmap ;_bbdg uint32 ;_ffge []*_cb .Bitmap ;_eag _ga .Tabler ;_fbdc _ga .Tabler ;_cgd _ga .Tabler ;_agbb _ga .Tabler ;_cdege []*_cb .Bitmap ;
_cbfdc []*_cb .Bitmap ;_ddc *_egg .Decoder ;_eba *TextRegion ;_edbgg *GenericRegion ;_cedc *GenericRefinementRegion ;_gffe *_egg .DecoderStats ;_dddf *_egg .DecoderStats ;_fgfc *_egg .DecoderStats ;_adbbd *_egg .DecoderStats ;_cdbe *_egg .DecoderStats ;
_beca *_egg .DecoderStats ;_afaf *_egg .DecoderStats ;_dfbd *_egg .DecoderStats ;_acc *_egg .DecoderStats ;_dbc int8 ;_gbcac *_cb .Bitmaps ;_gcf []int ;_cdd map[int ]int ;_gbbb bool ;};func (_aeggd *TextRegion )String ()string {_eaedg :=&_c .Builder {};
_eaedg .WriteString ("\u000a[\u0054E\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u000a");_eaedg .WriteString (_aeggd .RegionInfo .String ()+"\u000a");_eaedg .WriteString (_eg .Sprintf ("\u0009\u002d\u0020\u0053br\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0025\u0076\u000a",_aeggd .SbrTemplate ));
_eaedg .WriteString (_eg .Sprintf ("\u0009-\u0020S\u0062\u0044\u0073\u004f\u0066f\u0073\u0065t\u003a\u0020\u0025\u0076\u000a",_aeggd .SbDsOffset ));_eaedg .WriteString (_eg .Sprintf ("\t\u002d \u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0050i\u0078\u0065\u006c\u003a %\u0076\u000a",_aeggd .DefaultPixel ));
_eaedg .WriteString (_eg .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0076\u000a",_aeggd .CombinationOperator ));_eaedg .WriteString (_eg .Sprintf ("\t\u002d \u0049\u0073\u0054\u0072\u0061\u006e\u0073\u0070o\u0073\u0065\u0064\u003a %\u0076\u000a",_aeggd .IsTransposed ));
_eaedg .WriteString (_eg .Sprintf ("\u0009\u002d\u0020Re\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0043\u006f\u0072\u006e\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_aeggd .ReferenceCorner ));_eaedg .WriteString (_eg .Sprintf ("\t\u002d\u0020\u0055\u0073eR\u0065f\u0069\u006e\u0065\u006d\u0065n\u0074\u003a\u0020\u0025\u0076\u000a",_aeggd .UseRefinement ));
_eaedg .WriteString (_eg .Sprintf ("\u0009-\u0020\u0049\u0073\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045n\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0076\u000a",_aeggd .IsHuffmanEncoded ));if _aeggd .IsHuffmanEncoded {_eaedg .WriteString (_eg .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_aeggd .SbHuffRSize ));
_eaedg .WriteString (_eg .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0059:\u0020\u0025\u0076\u000a",_aeggd .SbHuffRDY ));_eaedg .WriteString (_eg .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0058:\u0020\u0025\u0076\u000a",_aeggd .SbHuffRDX ));
_eaedg .WriteString (_eg .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069\u0067\u0068\u0074\u003a\u0020\u0025v\u000a",_aeggd .SbHuffRDHeight ));_eaedg .WriteString (_eg .Sprintf ("\t\u002d\u0020\u0053\u0062Hu\u0066f\u0052\u0044\u0057\u0069\u0064t\u0068\u003a\u0020\u0025\u0076\u000a",_aeggd .SbHuffRDWidth ));
_eaedg .WriteString (_eg .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0054\u003a\u0020\u0025\u0076\u000a",_aeggd .SbHuffDT ));_eaedg .WriteString (_eg .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0053\u003a\u0020\u0025\u0076\u000a",_aeggd .SbHuffDS ));
_eaedg .WriteString (_eg .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0046\u0053\u003a\u0020\u0025\u0076\u000a",_aeggd .SbHuffFS ));};_eaedg .WriteString (_eg .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_aeggd .SbrATX ));
_eaedg .WriteString (_eg .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0059:\u0020\u0025\u0076\u000a",_aeggd .SbrATY ));_eaedg .WriteString (_eg .Sprintf ("\u0009\u002d\u0020N\u0075\u006d\u0062\u0065r\u004f\u0066\u0053\u0079\u006d\u0062\u006fl\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_aeggd .NumberOfSymbolInstances ));
_eaedg .WriteString (_eg .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_aeggd .SbrATX ));return _eaedg .String ();};func (_faga *Header )writeFlags (_eaaa _a .BinaryWriter )(_dbbc error ){const _aefg ="\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065F\u006c\u0061\u0067\u0073";
_ggff :=byte (_faga .Type );if _dbbc =_eaaa .WriteByte (_ggff );_dbbc !=nil {return _ag .Wrap (_dbbc ,_aefg ,"\u0077\u0072\u0069ti\u006e\u0067\u0020\u0073\u0065\u0067\u006d\u0065\u006et\u0020t\u0079p\u0065 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};if !_faga .RetainFlag &&!_faga .PageAssociationFieldSize {return nil ;};if _dbbc =_eaaa .SkipBits (-8);_dbbc !=nil {return _ag .Wrap (_dbbc ,_aefg ,"\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0062\u0061\u0063\u006b\u0020\u0074\u0068\u0065\u0020\u0062\u0069\u0074\u0073\u0020\u0066\u0061il\u0065\u0064");
};var _eaed int ;if _faga .RetainFlag {_eaed =1;};if _dbbc =_eaaa .WriteBit (_eaed );_dbbc !=nil {return _ag .Wrap (_dbbc ,_aefg ,"\u0072\u0065\u0074\u0061in\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067\u0073");};_eaed =0;if _faga .PageAssociationFieldSize {_eaed =1;
};if _dbbc =_eaaa .WriteBit (_eaed );_dbbc !=nil {return _ag .Wrap (_dbbc ,_aefg ,"p\u0061\u0067\u0065\u0020as\u0073o\u0063\u0069\u0061\u0074\u0069o\u006e\u0020\u0066\u006c\u0061\u0067");};_eaaa .FinishByte ();return nil ;};func (_bfbb *SymbolDictionary )Init (h *Header ,r _a .StreamReader )error {_bfbb .Header =h ;
_bfbb ._bdgd =r ;return _bfbb .parseHeader ();};func (_gggfe *PageInformationSegment )readCombinationOperatorOverrideAllowed ()error {_bbfa ,_cedgc :=_gggfe ._afefc .ReadBit ();if _cedgc !=nil {return _cedgc ;};if _bbfa ==1{_gggfe ._eee =true ;};return nil ;
};func (_cbfa *SymbolDictionary )InitEncode (symbols *_cb .Bitmaps ,symbolList []int ,symbolMap map[int ]int ,unborderSymbols bool )error {const _aacb ="S\u0079\u006d\u0062\u006f\u006c\u0044i\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002eI\u006e\u0069\u0074E\u006ec\u006f\u0064\u0065";
_cbfa .SdATX =[]int8 {3,-3,2,-2};_cbfa .SdATY =[]int8 {-1,-1,-2,-2};_cbfa ._gbcac =symbols ;_cbfa ._gcf =make ([]int ,len (symbolList ));copy (_cbfa ._gcf ,symbolList );if len (_cbfa ._gcf )!=_cbfa ._gbcac .Size (){return _ag .Error (_aacb ,"s\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0061\u006e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u004ci\u0073\u0074\u0020\u006f\u0066\u0020\u0064\u0069\u0066\u0066er\u0065\u006e\u0074 \u0073i\u007a\u0065");
};_cbfa .NumberOfNewSymbols =uint32 (symbols .Size ());_cbfa .NumberOfExportedSymbols =uint32 (symbols .Size ());_cbfa ._cdd =symbolMap ;_cbfa ._gbbb =unborderSymbols ;return nil ;};func (_bbaa *Header )writeSegmentDataLength (_ebge _a .BinaryWriter )(_cee int ,_bdag error ){_gebd :=make ([]byte ,4);
_d .BigEndian .PutUint32 (_gebd ,uint32 (_bbaa .SegmentDataLength ));if _cee ,_bdag =_ebge .Write (_gebd );_bdag !=nil {return 0,_ag .Wrap (_bdag ,"\u0048\u0065a\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u004c\u0065ng\u0074\u0068","");
};return _cee ,nil ;};func (_fbc Type )String ()string {switch _fbc {case TSymbolDictionary :return "\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079";case TIntermediateTextRegion :return "\u0049n\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020T\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TImmediateTextRegion :return "I\u006d\u006d\u0065\u0064ia\u0074e\u0020\u0054\u0065\u0078\u0074 \u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessTextRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020L\u006f\u0073\u0073\u006c\u0065\u0073\u0073 \u0054\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TPatternDictionary :return "\u0050a\u0074t\u0065\u0072\u006e\u0020\u0044i\u0063\u0074i\u006f\u006e\u0061\u0072\u0079";case TIntermediateHalftoneRegion :return "\u0049\u006e\u0074\u0065r\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0048\u0061l\u0066t\u006f\u006e\u0065\u0020\u0052\u0065\u0067i\u006f\u006e";
case TImmediateHalftoneRegion :return "\u0049m\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u0048\u0061l\u0066t\u006fn\u0065\u0020\u0052\u0065\u0067\u0069\u006fn";case TImmediateLosslessHalftoneRegion :return "\u0049\u006d\u006ded\u0069\u0061\u0074\u0065\u0020\u004c\u006f\u0073\u0073l\u0065s\u0073 \u0048a\u006c\u0066\u0074\u006f\u006e\u0065\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TIntermediateGenericRegion :return "I\u006e\u0074\u0065\u0072\u006d\u0065d\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020R\u0065g\u0069\u006f\u006e";case TImmediateGenericRegion :return "\u0049m\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006ee\u0072\u0069\u0063\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TImmediateLosslessGenericRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u004c\u006f\u0073\u0073\u006c\u0065\u0073\u0073\u0020\u0047e\u006e\u0065\u0072\u0069\u0063\u0020\u0052e\u0067\u0069\u006f\u006e";case TIntermediateGenericRefinementRegion :return "\u0049\u006e\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0020\u0052\u0065\u0066i\u006e\u0065\u006d\u0065\u006et\u0020\u0052e\u0067\u0069\u006f\u006e";
case TImmediateGenericRefinementRegion :return "I\u006d\u006d\u0065\u0064\u0069\u0061t\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020\u0052\u0065\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020\u0052\u0065\u0067\u0069o\u006e";case TImmediateLosslessGenericRefinementRegion :return "\u0049m\u006d\u0065d\u0069\u0061\u0074\u0065 \u004c\u006f\u0073s\u006c\u0065\u0073\u0073\u0020\u0047\u0065\u006e\u0065ri\u0063\u0020\u0052e\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020R\u0065\u0067i\u006f\u006e";
case TPageInformation :return "\u0050\u0061g\u0065\u0020\u0049n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e";case TEndOfPage :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0050\u0061\u0067\u0065";case TEndOfStrip :return "\u0045\u006e\u0064 \u004f\u0066\u0020\u0053\u0074\u0072\u0069\u0070";
case TEndOfFile :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0046\u0069\u006c\u0065";case TProfiles :return "\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0073";case TTables :return "\u0054\u0061\u0062\u006c\u0065\u0073";case TExtension :return "\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn";
case TBitmap :return "\u0042\u0069\u0074\u006d\u0061\u0070";};return "I\u006ev\u0061\u006c\u0069\u0064\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0020Ki\u006e\u0064";};func (_baef *GenericRegion )setParameters (_bdg bool ,_fcaf ,_ffg int64 ,_gbeg ,_baed uint32 ){_baef .IsMMREncoded =_bdg ;
_baef .DataOffset =_fcaf ;_baef .DataLength =_ffg ;_baef .RegionSegment .BitmapHeight =_gbeg ;_baef .RegionSegment .BitmapWidth =_baed ;_baef ._dbb =nil ;_baef .Bitmap =nil ;};func (_dfac *SymbolDictionary )decodeRefinedSymbol (_eea ,_cfgc uint32 )error {var (_afbb int ;
_ccef ,_eadgf int32 ;);if _dfac .IsHuffmanEncoded {_gcca ,_dega :=_dfac ._bdgd .ReadBits (byte (_dfac ._dbc ));if _dega !=nil {return _dega ;};_afbb =int (_gcca );_ddde ,_dega :=_ga .GetStandardTable (15);if _dega !=nil {return _dega ;};_ecdgf ,_dega :=_ddde .Decode (_dfac ._bdgd );
if _dega !=nil {return _dega ;};_ccef =int32 (_ecdgf );_ecdgf ,_dega =_ddde .Decode (_dfac ._bdgd );if _dega !=nil {return _dega ;};_eadgf =int32 (_ecdgf );_ddde ,_dega =_ga .GetStandardTable (1);if _dega !=nil {return _dega ;};if _ ,_dega =_ddde .Decode (_dfac ._bdgd );
_dega !=nil {return _dega ;};_dfac ._bdgd .Align ();}else {_aab ,_eaadc :=_dfac ._ddc .DecodeIAID (uint64 (_dfac ._dbc ),_dfac ._acc );if _eaadc !=nil {return _eaadc ;};_afbb =int (_aab );_ccef ,_eaadc =_dfac ._ddc .DecodeInt (_dfac ._beca );if _eaadc !=nil {return _eaadc ;
};_eadgf ,_eaadc =_dfac ._ddc .DecodeInt (_dfac ._afaf );if _eaadc !=nil {return _eaadc ;};};if _dadc :=_dfac .setSymbolsArray ();_dadc !=nil {return _dadc ;};_agfbf :=_dfac ._cbfdc [_afbb ];if _efbff :=_dfac .decodeNewSymbols (_eea ,_cfgc ,_agfbf ,_ccef ,_eadgf );
_efbff !=nil {return _efbff ;};if _dfac .IsHuffmanEncoded {_dfac ._bdgd .Align ();};return nil ;};func (_eeced *PageInformationSegment )readResolution ()error {_fdfde ,_dcce :=_eeced ._afefc .ReadBits (32);if _dcce !=nil {return _dcce ;};_eeced .ResolutionX =int (_fdfde &_fg .MaxInt32 );
_fdfde ,_dcce =_eeced ._afefc .ReadBits (32);if _dcce !=nil {return _dcce ;};_eeced .ResolutionY =int (_fdfde &_fg .MaxInt32 );return nil ;};func (_ecf *GenericRegion )GetRegionInfo ()*RegionSegment {return _ecf .RegionSegment };func (_cegc *Header )writeSegmentNumber (_ebde _a .BinaryWriter )(_beae int ,_dagf error ){_ddgc :=make ([]byte ,4);
_d .BigEndian .PutUint32 (_ddgc ,_cegc .SegmentNumber );if _beae ,_dagf =_ebde .Write (_ddgc );_dagf !=nil {return 0,_ag .Wrap (_dagf ,"\u0048e\u0061\u0064\u0065\u0072.\u0077\u0072\u0069\u0074\u0065S\u0065g\u006de\u006e\u0074\u004e\u0075\u006d\u0062\u0065r","");
};return _beae ,nil ;};type RegionSegment struct{_eadg _a .StreamReader ;BitmapWidth uint32 ;BitmapHeight uint32 ;XLocation uint32 ;YLocation uint32 ;CombinaionOperator _cb .CombinationOperator ;};func (_gafg *PatternDictionary )setGbAtPixels (){if _gafg .HDTemplate ==0{_gafg .GBAtX =make ([]int8 ,4);
_gafg .GBAtY =make ([]int8 ,4);_gafg .GBAtX [0]=-int8 (_gafg .HdpWidth );_gafg .GBAtY [0]=0;_gafg .GBAtX [1]=-3;_gafg .GBAtY [1]=-1;_gafg .GBAtX [2]=2;_gafg .GBAtY [2]=-2;_gafg .GBAtX [3]=-2;_gafg .GBAtY [3]=-2;}else {_gafg .GBAtX =[]int8 {-int8 (_gafg .HdpWidth )};
_gafg .GBAtY =[]int8 {0};};};func (_eeac *SymbolDictionary )decodeDirectlyThroughGenericRegion (_dceg ,_faba uint32 )error {if _eeac ._edbgg ==nil {_eeac ._edbgg =NewGenericRegion (_eeac ._bdgd );};_eeac ._edbgg .setParametersWithAt (false ,byte (_eeac .SdTemplate ),false ,false ,_eeac .SdATX ,_eeac .SdATY ,_dceg ,_faba ,_eeac ._gffe ,_eeac ._ddc );
return _eeac .addSymbol (_eeac ._edbgg );};func _fagaf (_agffg _a .StreamReader ,_geea *Header )*TextRegion {_fdbb :=&TextRegion {_ceed :_agffg ,Header :_geea ,RegionInfo :NewRegionSegment (_agffg )};return _fdbb ;};func (_deee *HalftoneRegion )parseHeader ()error {if _aaab :=_deee .RegionSegment .parseHeader ();
_aaab !=nil {return _aaab ;};_bcfb ,_febf :=_deee ._dbdd .ReadBit ();if _febf !=nil {return _febf ;};_deee .HDefaultPixel =int8 (_bcfb );_bff ,_febf :=_deee ._dbdd .ReadBits (3);if _febf !=nil {return _febf ;};_deee .CombinationOperator =_cb .CombinationOperator (_bff &0xf);
_bcfb ,_febf =_deee ._dbdd .ReadBit ();if _febf !=nil {return _febf ;};if _bcfb ==1{_deee .HSkipEnabled =true ;};_bff ,_febf =_deee ._dbdd .ReadBits (2);if _febf !=nil {return _febf ;};_deee .HTemplate =byte (_bff &0xf);_bcfb ,_febf =_deee ._dbdd .ReadBit ();
if _febf !=nil {return _febf ;};if _bcfb ==1{_deee .IsMMREncoded =true ;};_bff ,_febf =_deee ._dbdd .ReadBits (32);if _febf !=nil {return _febf ;};_deee .HGridWidth =uint32 (_bff &_fg .MaxUint32 );_bff ,_febf =_deee ._dbdd .ReadBits (32);if _febf !=nil {return _febf ;
};_deee .HGridHeight =uint32 (_bff &_fg .MaxUint32 );_bff ,_febf =_deee ._dbdd .ReadBits (32);if _febf !=nil {return _febf ;};_deee .HGridX =int32 (_bff &_fg .MaxInt32 );_bff ,_febf =_deee ._dbdd .ReadBits (32);if _febf !=nil {return _febf ;};_deee .HGridY =int32 (_bff &_fg .MaxInt32 );
_bff ,_febf =_deee ._dbdd .ReadBits (16);if _febf !=nil {return _febf ;};_deee .HRegionX =uint16 (_bff &_fg .MaxUint16 );_bff ,_febf =_deee ._dbdd .ReadBits (16);if _febf !=nil {return _febf ;};_deee .HRegionY =uint16 (_bff &_fg .MaxUint16 );if _febf =_deee .computeSegmentDataStructure ();
_febf !=nil {return _febf ;};return _deee .checkInput ();};func (_babdb *TextRegion )encodeFlags (_dffed _a .BinaryWriter )(_abaf int ,_ccae error ){const _gade ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _ccae =_dffed .WriteBit (int (_babdb .SbrTemplate ));
_ccae !=nil {return _abaf ,_ag .Wrap (_ccae ,_gade ,"s\u0062\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};if _ ,_ccae =_dffed .WriteBits (uint64 (_babdb .SbDsOffset ),5);_ccae !=nil {return _abaf ,_ag .Wrap (_ccae ,_gade ,"\u0073\u0062\u0044\u0073\u004f\u0066\u0066\u0073\u0065\u0074");
};if _ccae =_dffed .WriteBit (int (_babdb .DefaultPixel ));_ccae !=nil {return _abaf ,_ag .Wrap (_ccae ,_gade ,"\u0044\u0065\u0066a\u0075\u006c\u0074\u0050\u0069\u0078\u0065\u006c");};if _ ,_ccae =_dffed .WriteBits (uint64 (_babdb .CombinationOperator ),2);
_ccae !=nil {return _abaf ,_ag .Wrap (_ccae ,_gade ,"\u0043\u006f\u006d\u0062in\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072");};if _ccae =_dffed .WriteBit (int (_babdb .IsTransposed ));_ccae !=nil {return _abaf ,_ag .Wrap (_ccae ,_gade ,"\u0069\u0073\u0020\u0074\u0072\u0061\u006e\u0073\u0070\u006f\u0073\u0065\u0064");
};if _ ,_ccae =_dffed .WriteBits (uint64 (_babdb .ReferenceCorner ),2);_ccae !=nil {return _abaf ,_ag .Wrap (_ccae ,_gade ,"\u0072\u0065f\u0065\u0072\u0065n\u0063\u0065\u0020\u0063\u006f\u0072\u006e\u0065\u0072");};if _ ,_ccae =_dffed .WriteBits (uint64 (_babdb .LogSBStrips ),2);
_ccae !=nil {return _abaf ,_ag .Wrap (_ccae ,_gade ,"L\u006f\u0067\u0053\u0042\u0053\u0074\u0072\u0069\u0070\u0073");};var _cgce int ;if _babdb .UseRefinement {_cgce =1;};if _ccae =_dffed .WriteBit (_cgce );_ccae !=nil {return _abaf ,_ag .Wrap (_ccae ,_gade ,"\u0075\u0073\u0065\u0020\u0072\u0065\u0066\u0069\u006ee\u006d\u0065\u006e\u0074");
};_cgce =0;if _babdb .IsHuffmanEncoded {_cgce =1;};if _ccae =_dffed .WriteBit (_cgce );_ccae !=nil {return _abaf ,_ag .Wrap (_ccae ,_gade ,"u\u0073\u0065\u0020\u0068\u0075\u0066\u0066\u006d\u0061\u006e");};_abaf =2;return _abaf ,nil ;};func (_ebg *HalftoneRegion )combineGrayscalePlanes (_fgd []*_cb .Bitmap ,_gafd int )error {_eecf :=0;
for _fbf :=0;_fbf < _fgd [_gafd ].Height ;_fbf ++{for _dfea :=0;_dfea < _fgd [_gafd ].Width ;_dfea +=8{_fdeb ,_feed :=_fgd [_gafd +1].GetByte (_eecf );if _feed !=nil {return _feed ;};_fbad ,_feed :=_fgd [_gafd ].GetByte (_eecf );if _feed !=nil {return _feed ;
};_feed =_fgd [_gafd ].SetByte (_eecf ,_cb .CombineBytes (_fbad ,_fdeb ,_cb .CmbOpXor ));if _feed !=nil {return _feed ;};_eecf ++;};};return nil ;};func (_adage *TextRegion )setCodingStatistics ()error {if _adage ._cfaba ==nil {_adage ._cfaba =_egg .NewStats (512,1);
};if _adage ._dbdb ==nil {_adage ._dbdb =_egg .NewStats (512,1);};if _adage ._dddg ==nil {_adage ._dddg =_egg .NewStats (512,1);};if _adage ._bgge ==nil {_adage ._bgge =_egg .NewStats (512,1);};if _adage ._ddbc ==nil {_adage ._ddbc =_egg .NewStats (512,1);
};if _adage ._deed ==nil {_adage ._deed =_egg .NewStats (512,1);};if _adage ._bdcga ==nil {_adage ._bdcga =_egg .NewStats (512,1);};if _adage ._edfd ==nil {_adage ._edfd =_egg .NewStats (1<<uint (_adage ._eafa ),1);};if _adage ._afeb ==nil {_adage ._afeb =_egg .NewStats (512,1);
};if _adage ._fddc ==nil {_adage ._fddc =_egg .NewStats (512,1);};if _adage ._ffdcg ==nil {var _cgdg error ;_adage ._ffdcg ,_cgdg =_egg .New (_adage ._ceed );if _cgdg !=nil {return _cgdg ;};};return nil ;};