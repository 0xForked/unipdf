//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package segments ;import (_a "encoding/binary";_aa "errors";_f "fmt";_bc "github.com/unidoc/unipdf/v3/common";_ge "github.com/unidoc/unipdf/v3/internal/bitwise";_dc "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_fc "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";_ce "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/arithmetic";_db "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/huffman";_gd "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/mmr";_fb "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/arithmetic";_be "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_c "image";_d "io";_g "math";_e "strings";_bg "time";);func (_aaaagc *SymbolDictionary )setRefinementAtPixels ()error {if !_aaaagc .UseRefinementAggregation ||_aaaagc .SdrTemplate !=0{return nil ;};if _gfea :=_aaaagc .readRefinementAtPixels (2);_gfea !=nil {return _gfea ;};return nil ;};type EncodeInitializer interface{InitEncode ();};func (_edfa *HalftoneRegion )renderPattern (_baaa [][]int )(_edaef error ){var _gaf ,_faa int ;for _eadc :=0;_eadc < int (_edfa .HGridHeight );_eadc ++{for _abda :=0;_abda < int (_edfa .HGridWidth );_abda ++{_gaf =_edfa .computeX (_eadc ,_abda );_faa =_edfa .computeY (_eadc ,_abda );_dbeg :=_edfa .Patterns [_baaa [_eadc ][_abda ]];if _edaef =_fc .Blit (_dbeg ,_edfa .HalftoneRegionBitmap ,_gaf +int (_edfa .HGridX ),_faa +int (_edfa .HGridY ),_edfa .CombinationOperator );_edaef !=nil {return _edaef ;};};};return nil ;};func (_cc *GenericRefinementRegion )Init (header *Header ,r _ge .StreamReader )error {_cc ._eb =header ;_cc ._fcb =r ;_cc .RegionInfo =NewRegionSegment (r );return _cc .parseHeader ();};func (_ccc *GenericRefinementRegion )getPixel (_de *_fc .Bitmap ,_aaed ,_bedb int )int {if _aaed < 0||_aaed >=_de .Width {return 0;};if _bedb < 0||_bedb >=_de .Height {return 0;};if _de .GetPixel (_aaed ,_bedb ){return 1;};return 0;};func (_dbcd *HalftoneRegion )combineGrayscalePlanes (_cacb []*_fc .Bitmap ,_fdga int )error {_fddc :=0;for _ccfg :=0;_ccfg < _cacb [_fdga ].Height ;_ccfg ++{for _abb :=0;_abb < _cacb [_fdga ].Width ;_abb +=8{_bdab ,_eda :=_cacb [_fdga +1].GetByte (_fddc );if _eda !=nil {return _eda ;};_fcdd ,_eda :=_cacb [_fdga ].GetByte (_fddc );if _eda !=nil {return _eda ;};_eda =_cacb [_fdga ].SetByte (_fddc ,_fc .CombineBytes (_fcdd ,_bdab ,_fc .CmbOpXor ));if _eda !=nil {return _eda ;};_fddc ++;};};return nil ;};type Header struct{SegmentNumber uint32 ;Type Type ;RetainFlag bool ;PageAssociation int ;PageAssociationFieldSize bool ;RTSegments []*Header ;HeaderLength int64 ;SegmentDataLength uint64 ;SegmentDataStartOffset uint64 ;Reader _ge .StreamReader ;SegmentData Segmenter ;RTSNumbers []int ;RetainBits []uint8 ;};func (_eea *GenericRefinementRegion )getGrReference ()(*_fc .Bitmap ,error ){segments :=_eea ._eb .RTSegments ;if len (segments )==0{return nil ,_aa .New ("\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0065\u0078is\u0074\u0073");};_ed ,_dcd :=segments [0].GetSegmentData ();if _dcd !=nil {return nil ,_dcd ;};_cca ,_gg :=_ed .(Regioner );if !_gg {return nil ,_f .Errorf ("\u0072\u0065\u0066\u0065\u0072r\u0065\u0064\u0020\u0074\u006f\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_ed );};return _cca .GetRegionBitmap ();};const BorderSize =6;func (_dgddd *PageInformationSegment )readDefaultPixelValue ()error {_bdcb ,_dfgb :=_dgddd ._cgde .ReadBit ();if _dfgb !=nil {return _dfgb ;};_dgddd ._bgcf =uint8 (_bdcb &0xf);return nil ;};func (_gcfb *PatternDictionary )readPatternWidthAndHeight ()error {_cacd ,_acbg :=_gcfb ._ebfgb .ReadByte ();if _acbg !=nil {return _acbg ;};_gcfb .HdpWidth =_cacd ;_cacd ,_acbg =_gcfb ._ebfgb .ReadByte ();if _acbg !=nil {return _acbg ;};_gcfb .HdpHeight =_cacd ;return nil ;};type templater interface{form (_ddfa ,_bec ,_cfc ,_ggc ,_ddg int16 )int16 ;setIndex (_gbe *_ce .DecoderStats );};func (_eedb *HalftoneRegion )checkInput ()error {if _eedb .IsMMREncoded {if _eedb .HTemplate !=0{_bc .Log .Debug ("\u0048\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030",_eedb .HTemplate );};if _eedb .HSkipEnabled {_bc .Log .Debug ("\u0048\u0053\u006b\u0069\u0070\u0045\u006e\u0061\u0062\u006c\u0065\u0064\u0020\u0030\u0020\u0025\u0076\u0020(\u0073\u0068\u006f\u0075\u006c\u0064\u0020c\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020v\u0061\u006c\u0075\u0065\u0020\u0066\u0061\u006c\u0073\u0065\u0029",_eedb .HSkipEnabled );};};return nil ;};func (_ccbe *SymbolDictionary )decodeNewSymbols (_afcea ,_fgggd uint32 ,_fddce *_fc .Bitmap ,_deg ,_bgdb int32 )error {if _ccbe ._dfcd ==nil {_ccbe ._dfcd =_gbb (_ccbe ._gabb ,nil );if _ccbe ._aafa ==nil {var _cdee error ;_ccbe ._aafa ,_cdee =_ce .New (_ccbe ._gabb );if _cdee !=nil {return _cdee ;};};if _ccbe ._ffddf ==nil {_ccbe ._ffddf =_ce .NewStats (65536,1);};};_ccbe ._dfcd .setParameters (_ccbe ._ffddf ,_ccbe ._aafa ,_ccbe .SdrTemplate ,_afcea ,_fgggd ,_fddce ,_deg ,_bgdb ,false ,_ccbe .SdrATX ,_ccbe .SdrATY );return _ccbe .addSymbol (_ccbe ._dfcd );};func (_cgbg *TextRegion )createRegionBitmap ()error {_cgbg .RegionBitmap =_fc .New (int (_cgbg .RegionInfo .BitmapWidth ),int (_cgbg .RegionInfo .BitmapHeight ));if _cgbg .DefaultPixel !=0{_cgbg .RegionBitmap .SetDefaultPixel ();};return nil ;};func (_cac *GenericRegion )decodeSLTP ()(int ,error ){switch _cac .GBTemplate {case 0:_cac ._ccda .SetIndex (0x9B25);case 1:_cac ._ccda .SetIndex (0x795);case 2:_cac ._ccda .SetIndex (0xE5);case 3:_cac ._ccda .SetIndex (0x195);};return _cac ._deb .DecodeBit (_cac ._ccda );};func (_ecfg *SymbolDictionary )GetDictionary ()([]*_fc .Bitmap ,error ){_bc .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c-\u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");defer func (){_bc .Log .Trace ("\u005b\u0053\u0059M\u0042\u004f\u004c\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");_bc .Log .Trace ("\u005b\u0053Y\u004d\u0042\u004f\u004c\u002dD\u0049\u0043\u0054\u0049\u004fN\u0041\u0052\u0059\u005d\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020\u000a\u0045\u0078\u003a\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u000a\u006e\u0065\u0077\u003a\u0027\u0025\u0073\u0027",_ecfg ._cdeg ,_ecfg ._fegg );}();if _ecfg ._cdeg ==nil {var _ccggd error ;if _ecfg .UseRefinementAggregation {_ecfg ._gcgdg =_ecfg .getSbSymCodeLen ();};if !_ecfg .IsHuffmanEncoded {if _ccggd =_ecfg .setCodingStatistics ();_ccggd !=nil {return nil ,_ccggd ;};};_ecfg ._fegg =make ([]*_fc .Bitmap ,_ecfg .NumberOfNewSymbols );var _adaf []int ;if _ecfg .IsHuffmanEncoded &&!_ecfg .UseRefinementAggregation {_adaf =make ([]int ,_ecfg .NumberOfNewSymbols );};if _ccggd =_ecfg .setSymbolsArray ();_ccggd !=nil {return nil ,_ccggd ;};var _bgbbc ,_decd int64 ;_ecfg ._fgeec =0;for _ecfg ._fgeec < _ecfg .NumberOfNewSymbols {_decd ,_ccggd =_ecfg .decodeHeightClassDeltaHeight ();if _ccggd !=nil {return nil ,_ccggd ;};_bgbbc +=_decd ;var _eaec ,_decdc uint32 ;_eca :=int64 (_ecfg ._fgeec );for {var _acacb int64 ;_acacb ,_ccggd =_ecfg .decodeDifferenceWidth ();if _ccggd !=nil {return nil ,_ccggd ;};if _acacb ==int64 (_g .MaxInt64 )||_ecfg ._fgeec >=_ecfg .NumberOfNewSymbols {break ;};_eaec +=uint32 (_acacb );_decdc +=_eaec ;if !_ecfg .IsHuffmanEncoded ||_ecfg .UseRefinementAggregation {if !_ecfg .UseRefinementAggregation {_ccggd =_ecfg .decodeDirectlyThroughGenericRegion (_eaec ,uint32 (_bgbbc ));if _ccggd !=nil {return nil ,_ccggd ;};}else {_ccggd =_ecfg .decodeAggregate (_eaec ,uint32 (_bgbbc ));if _ccggd !=nil {return nil ,_ccggd ;};};}else if _ecfg .IsHuffmanEncoded &&!_ecfg .UseRefinementAggregation {_adaf [_ecfg ._fgeec ]=int (_eaec );};_ecfg ._fgeec ++;};if _ecfg .IsHuffmanEncoded &&!_ecfg .UseRefinementAggregation {var _ceffa int64 ;if _ecfg .SdHuffBMSizeSelection ==0{var _edcg _db .Tabler ;_edcg ,_ccggd =_db .GetStandardTable (1);if _ccggd !=nil {return nil ,_ccggd ;};_ceffa ,_ccggd =_edcg .Decode (_ecfg ._gabb );if _ccggd !=nil {return nil ,_ccggd ;};}else {_ceffa ,_ccggd =_ecfg .huffDecodeBmSize ();if _ccggd !=nil {return nil ,_ccggd ;};};_ecfg ._gabb .Align ();var _baef *_fc .Bitmap ;_baef ,_ccggd =_ecfg .decodeHeightClassCollectiveBitmap (_ceffa ,uint32 (_bgbbc ),_decdc );if _ccggd !=nil {return nil ,_ccggd ;};_ccggd =_ecfg .decodeHeightClassBitmap (_baef ,_eca ,int (_bgbbc ),_adaf );if _ccggd !=nil {return nil ,_ccggd ;};};};_cabdf ,_ccggd :=_ecfg .getToExportFlags ();if _ccggd !=nil {return nil ,_ccggd ;};_ecfg .setExportedSymbols (_cabdf );};return _ecfg ._cdeg ,nil ;};func (_fbdd *Header )subInputReader ()(_ge .StreamReader ,error ){return _ge .NewSubstreamReader (_fbdd .Reader ,_fbdd .SegmentDataStartOffset ,_fbdd .SegmentDataLength );};func (_aadd *TextRegion )decodeRdw ()(int64 ,error ){const _cefb ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064w";if _aadd .IsHuffmanEncoded {if _aadd .SbHuffRDWidth ==3{if _aadd ._daaf ==nil {var (_fdff int ;_feffa error ;);if _aadd .SbHuffFS ==3{_fdff ++;};if _aadd .SbHuffDS ==3{_fdff ++;};if _aadd .SbHuffDT ==3{_fdff ++;};_aadd ._daaf ,_feffa =_aadd .getUserTable (_fdff );if _feffa !=nil {return 0,_be .Wrap (_feffa ,_cefb ,"");};};return _aadd ._daaf .Decode (_aadd ._bfd );};_becb ,_aeec :=_db .GetStandardTable (14+int (_aadd .SbHuffRDWidth ));if _aeec !=nil {return 0,_be .Wrap (_aeec ,_cefb ,"");};return _becb .Decode (_aadd ._bfd );};_eafgb ,_acbc :=_aadd ._cfdbc .DecodeInt (_aadd ._fbdce );if _acbc !=nil {return 0,_be .Wrap (_acbc ,_cefb ,"");};return int64 (_eafgb ),nil ;};func (_aafe *PageInformationSegment )readIsLossless ()error {_ebcc ,_fgbf :=_aafe ._cgde .ReadBit ();if _fgbf !=nil {return _fgbf ;};if _ebcc ==1{_aafe .IsLossless =true ;};return nil ;};func (_bbdba *SymbolDictionary )parseHeader ()(_fgeea error ){_bc .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");defer func (){if _fgeea !=nil {_bc .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u0020\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u005b\u0050\u0041\u0052SE\u002d\u0048\u0045A\u0044\u0045R\u005d\u0020\u0066\u0061\u0069\u006ce\u0064\u002e \u0025\u0076",_fgeea );}else {_bc .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");};}();if _fgeea =_bbdba .readRegionFlags ();_fgeea !=nil {return _fgeea ;};if _fgeea =_bbdba .setAtPixels ();_fgeea !=nil {return _fgeea ;};if _fgeea =_bbdba .setRefinementAtPixels ();_fgeea !=nil {return _fgeea ;};if _fgeea =_bbdba .readNumberOfExportedSymbols ();_fgeea !=nil {return _fgeea ;};if _fgeea =_bbdba .readNumberOfNewSymbols ();_fgeea !=nil {return _fgeea ;};if _fgeea =_bbdba .setInSyms ();_fgeea !=nil {return _fgeea ;};if _bbdba ._ffee {_ggfa :=_bbdba .Header .RTSegments ;for _efdcc :=len (_ggfa )-1;_efdcc >=0;_efdcc --{if _ggfa [_efdcc ].Type ==0{_beffc ,_edbfd :=_ggfa [_efdcc ].SegmentData .(*SymbolDictionary );if !_edbfd {_fgeea =_f .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074:\u0020\u0025\u0076\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020S\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_ggfa [_efdcc ]);return _fgeea ;};if _beffc ._ffee {_bbdba .setRetainedCodingContexts (_beffc );};break ;};};};if _fgeea =_bbdba .checkInput ();_fgeea !=nil {return _fgeea ;};return nil ;};var _ SegmentEncoder =&RegionSegment {};func (_cfga *Header )writeSegmentNumber (_fcbf _ge .BinaryWriter )(_acba int ,_eafd error ){_fdcgg :=make ([]byte ,4);_a .BigEndian .PutUint32 (_fdcgg ,_cfga .SegmentNumber );if _acba ,_eafd =_fcbf .Write (_fdcgg );_eafd !=nil {return 0,_be .Wrap (_eafd ,"\u0048e\u0061\u0064\u0065\u0072.\u0077\u0072\u0069\u0074\u0065S\u0065g\u006de\u006e\u0074\u004e\u0075\u006d\u0062\u0065r","");};return _acba ,nil ;};func (_dcbee *TextRegion )GetRegionInfo ()*RegionSegment {return _dcbee .RegionInfo };func (_feg *GenericRefinementRegion )String ()string {_bccc :=&_e .Builder {};_bccc .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_bccc .WriteString (_feg .RegionInfo .String ()+"\u000a");_bccc .WriteString (_f .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0052\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_feg .IsTPGROn ));_bccc .WriteString (_f .Sprintf ("\u0009-\u0020T\u0065\u006d\u0070\u006c\u0061t\u0065\u0049D\u003a\u0020\u0025\u0076\u000a",_feg .TemplateID ));_bccc .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_feg .GrAtX ));_bccc .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_feg .GrAtY ));_bccc .WriteString (_f .Sprintf ("\u0009-\u0020R\u0065\u0066\u0065\u0072\u0065n\u0063\u0065D\u0058\u0020\u0025\u0076\u000a",_feg .ReferenceDX ));_bccc .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0052ef\u0065\u0072\u0065\u006e\u0063\u0044\u0065\u0059\u003a\u0020\u0025\u0076\u000a",_feg .ReferenceDY ));return _bccc .String ();};func (_dbff *GenericRegion )setOverrideFlag (_cef int ){_dbff .GBAtOverride [_cef ]=true ;_dbff ._abd =true ;};func (_eceg *TextRegion )encodeFlags (_cgac _ge .BinaryWriter )(_cddf int ,_ddge error ){const _bagba ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _ddge =_cgac .WriteBit (int (_eceg .SbrTemplate ));_ddge !=nil {return _cddf ,_be .Wrap (_ddge ,_bagba ,"s\u0062\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};if _ ,_ddge =_cgac .WriteBits (uint64 (_eceg .SbdsOffset ),5);_ddge !=nil {return _cddf ,_be .Wrap (_ddge ,_bagba ,"\u0073\u0062\u0064\u0073\u004f\u0066\u0066\u0073\u0065\u0074");};if _ddge =_cgac .WriteBit (int (_eceg .DefaultPixel ));_ddge !=nil {return _cddf ,_be .Wrap (_ddge ,_bagba ,"\u0044\u0065\u0066a\u0075\u006c\u0074\u0050\u0069\u0078\u0065\u006c");};if _ ,_ddge =_cgac .WriteBits (uint64 (_eceg .CombinationOperator ),2);_ddge !=nil {return _cddf ,_be .Wrap (_ddge ,_bagba ,"\u0043\u006f\u006d\u0062in\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072");};if _ddge =_cgac .WriteBit (int (_eceg .IsTransposed ));_ddge !=nil {return _cddf ,_be .Wrap (_ddge ,_bagba ,"\u0069\u0073\u0020\u0074\u0072\u0061\u006e\u0073\u0070\u006f\u0073\u0065\u0064");};if _ ,_ddge =_cgac .WriteBits (uint64 (_eceg .ReferenceCorner ),2);_ddge !=nil {return _cddf ,_be .Wrap (_ddge ,_bagba ,"\u0072\u0065f\u0065\u0072\u0065n\u0063\u0065\u0020\u0063\u006f\u0072\u006e\u0065\u0072");};if _ ,_ddge =_cgac .WriteBits (uint64 (_eceg .LogSBStrips ),2);_ddge !=nil {return _cddf ,_be .Wrap (_ddge ,_bagba ,"L\u006f\u0067\u0053\u0042\u0053\u0074\u0072\u0069\u0070\u0073");};var _dbggg int ;if _eceg .UseRefinement {_dbggg =1;};if _ddge =_cgac .WriteBit (_dbggg );_ddge !=nil {return _cddf ,_be .Wrap (_ddge ,_bagba ,"\u0075\u0073\u0065\u0020\u0072\u0065\u0066\u0069\u006ee\u006d\u0065\u006e\u0074");};_dbggg =0;if _eceg .IsHuffmanEncoded {_dbggg =1;};if _ddge =_cgac .WriteBit (_dbggg );_ddge !=nil {return _cddf ,_be .Wrap (_ddge ,_bagba ,"u\u0073\u0065\u0020\u0068\u0075\u0066\u0066\u006d\u0061\u006e");};_cddf =2;return _cddf ,nil ;};func (_bdb *GenericRegion )computeSegmentDataStructure ()error {_bdb .DataOffset =_bdb ._deff .StreamPosition ();_bdb .DataHeaderLength =_bdb .DataOffset -_bdb .DataHeaderOffset ;_bdb .DataLength =int64 (_bdb ._deff .Length ())-_bdb .DataHeaderLength ;return nil ;};func (_faea *Header )pageSize ()uint {if _faea .PageAssociation <=255{return 1;};return 4;};func (_ecbb *GenericRegion )updateOverrideFlags ()error {const _dde ="\u0075\u0070\u0064\u0061te\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _ecbb .GBAtX ==nil ||_ecbb .GBAtY ==nil {return nil ;};if len (_ecbb .GBAtX )!=len (_ecbb .GBAtY ){return _be .Errorf (_dde ,"i\u006eco\u0073i\u0073t\u0065\u006e\u0074\u0020\u0041T\u0020\u0070\u0069x\u0065\u006c\u002e\u0020\u0041m\u006f\u0075\u006et\u0020\u006f\u0066\u0020\u0027\u0078\u0027\u0020\u0070\u0069\u0078e\u006c\u0073\u003a %d\u002c\u0020\u0041\u006d\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0027\u0079\u0027\u0020\u0070\u0069\u0078e\u006cs\u003a\u0020\u0025\u0064",len (_ecbb .GBAtX ),len (_ecbb .GBAtY ));};_ecbb .GBAtOverride =make ([]bool ,len (_ecbb .GBAtX ));switch _ecbb .GBTemplate {case 0:if !_ecbb .UseExtTemplates {if _ecbb .GBAtX [0]!=3||_ecbb .GBAtY [0]!=-1{_ecbb .setOverrideFlag (0);};if _ecbb .GBAtX [1]!=-3||_ecbb .GBAtY [1]!=-1{_ecbb .setOverrideFlag (1);};if _ecbb .GBAtX [2]!=2||_ecbb .GBAtY [2]!=-2{_ecbb .setOverrideFlag (2);};if _ecbb .GBAtX [3]!=-2||_ecbb .GBAtY [3]!=-2{_ecbb .setOverrideFlag (3);};}else {if _ecbb .GBAtX [0]!=-2||_ecbb .GBAtY [0]!=0{_ecbb .setOverrideFlag (0);};if _ecbb .GBAtX [1]!=0||_ecbb .GBAtY [1]!=-2{_ecbb .setOverrideFlag (1);};if _ecbb .GBAtX [2]!=-2||_ecbb .GBAtY [2]!=-1{_ecbb .setOverrideFlag (2);};if _ecbb .GBAtX [3]!=-1||_ecbb .GBAtY [3]!=-2{_ecbb .setOverrideFlag (3);};if _ecbb .GBAtX [4]!=1||_ecbb .GBAtY [4]!=-2{_ecbb .setOverrideFlag (4);};if _ecbb .GBAtX [5]!=2||_ecbb .GBAtY [5]!=-1{_ecbb .setOverrideFlag (5);};if _ecbb .GBAtX [6]!=-3||_ecbb .GBAtY [6]!=0{_ecbb .setOverrideFlag (6);};if _ecbb .GBAtX [7]!=-4||_ecbb .GBAtY [7]!=0{_ecbb .setOverrideFlag (7);};if _ecbb .GBAtX [8]!=2||_ecbb .GBAtY [8]!=-2{_ecbb .setOverrideFlag (8);};if _ecbb .GBAtX [9]!=3||_ecbb .GBAtY [9]!=-1{_ecbb .setOverrideFlag (9);};if _ecbb .GBAtX [10]!=-2||_ecbb .GBAtY [10]!=-2{_ecbb .setOverrideFlag (10);};if _ecbb .GBAtX [11]!=-3||_ecbb .GBAtY [11]!=-1{_ecbb .setOverrideFlag (11);};};case 1:if _ecbb .GBAtX [0]!=3||_ecbb .GBAtY [0]!=-1{_ecbb .setOverrideFlag (0);};case 2:if _ecbb .GBAtX [0]!=2||_ecbb .GBAtY [0]!=-1{_ecbb .setOverrideFlag (0);};case 3:if _ecbb .GBAtX [0]!=2||_ecbb .GBAtY [0]!=-1{_ecbb .setOverrideFlag (0);};};return nil ;};func (_eeb *GenericRegion )InitEncode (bm *_fc .Bitmap ,xLoc ,yLoc ,template int ,duplicateLineRemoval bool )error {const _efdc ="\u0047e\u006e\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069\u006f\u006e.\u0049\u006e\u0069\u0074\u0045\u006e\u0063\u006f\u0064\u0065";if bm ==nil {return _be .Error (_efdc ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if xLoc < 0||yLoc < 0{return _be .Error (_efdc ,"\u0078\u0020\u0061\u006e\u0064\u0020\u0079\u0020\u006c\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074h\u0061\u006e\u0020\u0030");};_eeb .Bitmap =bm ;_eeb .GBTemplate =byte (template );switch _eeb .GBTemplate {case 0:_eeb .GBAtX =[]int8 {3,-3,2,-2};_eeb .GBAtY =[]int8 {-1,-1,-2,-2};case 1:_eeb .GBAtX =[]int8 {3};_eeb .GBAtY =[]int8 {-1};case 2,3:_eeb .GBAtX =[]int8 {2};_eeb .GBAtY =[]int8 {-1};default:return _be .Errorf (_efdc ,"\u0070\u0072o\u0076\u0069\u0064\u0065\u0064 \u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u007b\u0030\u002c\u0031\u002c\u0032\u002c\u0033\u007d",template );};_eeb .RegionSegment =&RegionSegment {BitmapHeight :uint32 (bm .Height ),BitmapWidth :uint32 (bm .Width ),XLocation :uint32 (xLoc ),YLocation :uint32 (yLoc )};_eeb .IsTPGDon =duplicateLineRemoval ;return nil ;};func (_dcad *PageInformationSegment )readIsStriped ()error {_bbdb ,_gbda :=_dcad ._cgde .ReadBit ();if _gbda !=nil {return _gbda ;};if _bbdb ==1{_dcad .IsStripe =true ;};return nil ;};func (_cedb *HalftoneRegion )grayScaleDecoding (_gace int )([][]int ,error ){var (_adad []int8 ;_bcga []int8 ;);if !_cedb .IsMMREncoded {_adad =make ([]int8 ,4);_bcga =make ([]int8 ,4);if _cedb .HTemplate <=1{_adad [0]=3;}else if _cedb .HTemplate >=2{_adad [0]=2;};_bcga [0]=-1;_adad [1]=-3;_bcga [1]=-1;_adad [2]=2;_bcga [2]=-2;_adad [3]=-2;_bcga [3]=-2;};_cccd :=make ([]*_fc .Bitmap ,_gace );_defg :=NewGenericRegion (_cedb ._cbf );_defg .setParametersMMR (_cedb .IsMMREncoded ,_cedb .DataOffset ,_cedb .DataLength ,_cedb .HGridHeight ,_cedb .HGridWidth ,_cedb .HTemplate ,false ,_cedb .HSkipEnabled ,_adad ,_bcga );_dab :=_gace -1;var _bbd error ;_cccd [_dab ],_bbd =_defg .GetRegionBitmap ();if _bbd !=nil {return nil ,_bbd ;};for _dab > 0{_dab --;_defg .Bitmap =nil ;_cccd [_dab ],_bbd =_defg .GetRegionBitmap ();if _bbd !=nil {return nil ,_bbd ;};if _bbd =_cedb .combineGrayscalePlanes (_cccd ,_dab );_bbd !=nil {return nil ,_bbd ;};};return _cedb .computeGrayScalePlanes (_cccd ,_gace );};func (_gadd *TableSegment )Init (h *Header ,r _ge .StreamReader )error {_gadd ._aagff =r ;return _gadd .parseHeader ();};func (_dcee *Header )Encode (w _ge .BinaryWriter )(_dcbb int ,_dgce error ){const _egc ="\u0048\u0065\u0061d\u0065\u0072\u002e\u0057\u0072\u0069\u0074\u0065";var _fagc _ge .BinaryWriter ;_bc .Log .Trace ("\u005b\u0053\u0045G\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045\u0052\u005d[\u0045\u004e\u0043\u004f\u0044\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _dgce !=nil {_bc .Log .Trace ("[\u0053\u0045\u0047\u004d\u0045\u004eT\u002d\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0045\u004e\u0043\u004f\u0044E\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020%\u0076",_dgce );}else {_bc .Log .Trace ("\u005b\u0053\u0045\u0047ME\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0025\u0076",_dcee );_bc .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045N\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u005b\u0045\u004e\u0043O\u0044\u0045\u005d\u0020\u0046\u0069\u006ei\u0073\u0068\u0065\u0064");};}();w .FinishByte ();if _dcee .SegmentData !=nil {_cbbgd ,_fgdc :=_dcee .SegmentData .(SegmentEncoder );if !_fgdc {return 0,_be .Errorf (_egc ,"\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0064\u006f\u0065s\u006e\u0027\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074 \u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0045\u006e\u0063\u006f\u0064er\u0020\u0069\u006e\u0074\u0065\u0072\u0066\u0061\u0063\u0065",_dcee .SegmentData );};_fagc =_ge .BufferedMSB ();_dcbb ,_dgce =_cbbgd .Encode (_fagc );if _dgce !=nil {return 0,_be .Wrap (_dgce ,_egc ,"");};_dcee .SegmentDataLength =uint64 (_dcbb );};if _dcee .pageSize ()==4{_dcee .PageAssociationFieldSize =true ;};var _fagf int ;_fagf ,_dgce =_dcee .writeSegmentNumber (w );if _dgce !=nil {return 0,_be .Wrap (_dgce ,_egc ,"");};_dcbb +=_fagf ;if _dgce =_dcee .writeFlags (w );_dgce !=nil {return _dcbb ,_be .Wrap (_dgce ,_egc ,"");};_dcbb ++;_fagf ,_dgce =_dcee .writeReferredToCount (w );if _dgce !=nil {return 0,_be .Wrap (_dgce ,_egc ,"");};_dcbb +=_fagf ;_fagf ,_dgce =_dcee .writeReferredToSegments (w );if _dgce !=nil {return 0,_be .Wrap (_dgce ,_egc ,"");};_dcbb +=_fagf ;_fagf ,_dgce =_dcee .writeSegmentPageAssociation (w );if _dgce !=nil {return 0,_be .Wrap (_dgce ,_egc ,"");};_dcbb +=_fagf ;_fagf ,_dgce =_dcee .writeSegmentDataLength (w );if _dgce !=nil {return 0,_be .Wrap (_dgce ,_egc ,"");};_dcbb +=_fagf ;_dcee .HeaderLength =int64 (_dcbb )-int64 (_dcee .SegmentDataLength );if _fagc !=nil {if _ ,_dgce =w .Write (_fagc .Data ());_dgce !=nil {return _dcbb ,_be .Wrap (_dgce ,_egc ,"\u0077r\u0069t\u0065\u0020\u0073\u0065\u0067m\u0065\u006et\u0020\u0064\u0061\u0074\u0061");};};return _dcbb ,nil ;};func (_fgdg *SymbolDictionary )encodeSymbols (_eddg _ge .BinaryWriter )(_bdfg int ,_ddgg error ){const _gdegc ="\u0065\u006e\u0063o\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c";_bgd :=_fb .New ();_bgd .Init ();_effc ,_ddgg :=_fgdg ._efc .SelectByIndexes (_fgdg ._ccgg );if _ddgg !=nil {return 0,_be .Wrap (_ddgg ,_gdegc ,"\u0069n\u0069\u0074\u0069\u0061\u006c");};_gdec :=map[*_fc .Bitmap ]int {};for _fabd ,_ccfe :=range _effc .Values {_gdec [_ccfe ]=_fabd ;};_effc .SortByHeight ();var _fggg ,_bedd int ;_abcfc ,_ddgg :=_effc .GroupByHeight ();if _ddgg !=nil {return 0,_be .Wrap (_ddgg ,_gdegc ,"");};for _ ,_gaada :=range _abcfc .Values {_ceb :=_gaada .Values [0].Height ;_ccaab :=_ceb -_fggg ;if _ddgg =_bgd .EncodeInteger (_fb .IADH ,_ccaab );_ddgg !=nil {return 0,_be .Wrapf (_ddgg ,_gdegc ,"\u0049\u0041\u0044\u0048\u0020\u0066\u006f\u0072\u0020\u0064\u0068\u003a \u0027\u0025\u0064\u0027",_ccaab );};_fggg =_ceb ;_gcgb ,_dcgf :=_gaada .GroupByWidth ();if _dcgf !=nil {return 0,_be .Wrapf (_dcgf ,_gdegc ,"\u0068\u0065\u0069g\u0068\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_ceb );};var _caef int ;for _ ,_ggfg :=range _gcgb .Values {for _ ,_fcbfb :=range _ggfg .Values {_cdgbb :=_fcbfb .Width ;_debc :=_cdgbb -_caef ;if _dcgf =_bgd .EncodeInteger (_fb .IADW ,_debc );_dcgf !=nil {return 0,_be .Wrapf (_dcgf ,_gdegc ,"\u0049\u0041\u0044\u0057\u0020\u0066\u006f\u0072\u0020\u0064\u0077\u003a \u0027\u0025\u0064\u0027",_debc );};_caef +=_debc ;if _dcgf =_bgd .EncodeBitmap (_fcbfb ,false );_dcgf !=nil {return 0,_be .Wrapf (_dcgf ,_gdegc ,"H\u0065i\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u0020W\u0069\u0064\u0074\u0068: \u0025\u0064",_ceb ,_cdgbb );};_cgg :=_gdec [_fcbfb ];_fgdg ._fbgc [_cgg ]=_bedd ;_bedd ++;};};if _dcgf =_bgd .EncodeOOB (_fb .IADW );_dcgf !=nil {return 0,_be .Wrap (_dcgf ,_gdegc ,"\u0049\u0041\u0044\u0057");};};if _ddgg =_bgd .EncodeInteger (_fb .IAEX ,0);_ddgg !=nil {return 0,_be .Wrap (_ddgg ,_gdegc ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};if _ddgg =_bgd .EncodeInteger (_fb .IAEX ,len (_fgdg ._ccgg ));_ddgg !=nil {return 0,_be .Wrap (_ddgg ,_gdegc ,"\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0073\u0079m\u0062\u006f\u006c\u0073");};_bgd .Final ();_ffa ,_ddgg :=_bgd .WriteTo (_eddg );if _ddgg !=nil {return 0,_be .Wrap (_ddgg ,_gdegc ,"\u0077\u0072i\u0074\u0069\u006e\u0067 \u0065\u006ec\u006f\u0064\u0065\u0072\u0020\u0063\u006f\u006et\u0065\u0078\u0074\u0020\u0074\u006f\u0020\u0027\u0077\u0027\u0020\u0077r\u0069\u0074\u0065\u0072");};return int (_ffa ),nil ;};func (_dgfc *TextRegion )decodeDT ()(_bbaf int64 ,_ffedc error ){if _dgfc .IsHuffmanEncoded {if _dgfc .SbHuffDT ==3{_bbaf ,_ffedc =_dgfc ._bbgc .Decode (_dgfc ._bfd );if _ffedc !=nil {return 0,_ffedc ;};}else {var _afa _db .Tabler ;_afa ,_ffedc =_db .GetStandardTable (11+int (_dgfc .SbHuffDT ));if _ffedc !=nil {return 0,_ffedc ;};_bbaf ,_ffedc =_afa .Decode (_dgfc ._bfd );if _ffedc !=nil {return 0,_ffedc ;};};}else {var _cbcb int32 ;_cbcb ,_ffedc =_dgfc ._cfdbc .DecodeInt (_dgfc ._dfcc );if _ffedc !=nil {return ;};_bbaf =int64 (_cbcb );};_bbaf *=int64 (_dgfc .SbStrips );return _bbaf ,nil ;};func (_becfb *SymbolDictionary )getToExportFlags ()([]int ,error ){var (_egf int ;_bcff int32 ;_eec error ;_eafb =int32 (_becfb ._fea +_becfb .NumberOfNewSymbols );_ggff =make ([]int ,_eafb ););for _cgcde :=int32 (0);_cgcde < _eafb ;_cgcde +=_bcff {if _becfb .IsHuffmanEncoded {_gdegf ,_dbea :=_db .GetStandardTable (1);if _dbea !=nil {return nil ,_dbea ;};_ecdf ,_dbea :=_gdegf .Decode (_becfb ._gabb );if _dbea !=nil {return nil ,_dbea ;};_bcff =int32 (_ecdf );}else {_bcff ,_eec =_becfb ._aafa .DecodeInt (_becfb ._cbcd );if _eec !=nil {return nil ,_eec ;};};if _bcff !=0{for _eagf :=_cgcde ;_eagf < _cgcde +_bcff ;_eagf ++{_ggff [_eagf ]=_egf ;};};if _egf ==0{_egf =1;}else {_egf =0;};};return _ggff ,nil ;};type Pager interface{GetSegment (int )(*Header ,error );GetBitmap ()(*_fc .Bitmap ,error );};type SymbolDictionary struct{_gabb _ge .StreamReader ;SdrTemplate int8 ;SdTemplate int8 ;_cbbb bool ;_ffee bool ;SdHuffAggInstanceSelection bool ;SdHuffBMSizeSelection int8 ;SdHuffDecodeWidthSelection int8 ;SdHuffDecodeHeightSelection int8 ;UseRefinementAggregation bool ;IsHuffmanEncoded bool ;SdATX []int8 ;SdATY []int8 ;SdrATX []int8 ;SdrATY []int8 ;NumberOfExportedSymbols uint32 ;NumberOfNewSymbols uint32 ;Header *Header ;_fea uint32 ;_gdcd []*_fc .Bitmap ;_fgeec uint32 ;_fegg []*_fc .Bitmap ;_bfcgc _db .Tabler ;_deffg _db .Tabler ;_ffcd _db .Tabler ;_dgef _db .Tabler ;_cdeg []*_fc .Bitmap ;_ddfad []*_fc .Bitmap ;_aafa *_ce .Decoder ;_fcfc *TextRegion ;_fda *GenericRegion ;_dfcd *GenericRefinementRegion ;_ffddf *_ce .DecoderStats ;_gcgf *_ce .DecoderStats ;_edde *_ce .DecoderStats ;_fdfe *_ce .DecoderStats ;_cbcd *_ce .DecoderStats ;_dfbb *_ce .DecoderStats ;_bbdcg *_ce .DecoderStats ;_ffeg *_ce .DecoderStats ;_fagbd *_ce .DecoderStats ;_gcgdg int8 ;_efc *_fc .Bitmaps ;_ccgg []int ;_fbgc map[int ]int ;_dbgd bool ;};func (_bfea *SymbolDictionary )getSymbol (_befc int )(*_fc .Bitmap ,error ){const _beff ="\u0067e\u0074\u0053\u0079\u006d\u0062\u006fl";_begc ,_affc :=_bfea ._efc .GetBitmap (_bfea ._ccgg [_befc ]);if _affc !=nil {return nil ,_be .Wrap (_affc ,_beff ,"\u0063\u0061n\u0027\u0074\u0020g\u0065\u0074\u0020\u0073\u0079\u006d\u0062\u006f\u006c");};return _begc ,nil ;};func (_ebfa *SymbolDictionary )retrieveImportSymbols ()error {for _ ,_bfff :=range _ebfa .Header .RTSegments {if _bfff .Type ==0{_gfgcb ,_eeae :=_bfff .GetSegmentData ();if _eeae !=nil {return _eeae ;};_fgfc ,_gbbad :=_gfgcb .(*SymbolDictionary );if !_gbbad {return _f .Errorf ("\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0044\u0061\u0074a\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u003a\u0020%\u0054",_gfgcb );};_afda ,_eeae :=_fgfc .GetDictionary ();if _eeae !=nil {return _f .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064 \u0073\u0065\u0067m\u0065\u006e\u0074 \u0077\u0069t\u0068\u0020\u0069\u006e\u0064\u0065x\u003a %\u0064\u0020\u0067\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0073",_bfff .SegmentNumber ,_eeae .Error ());};_ebfa ._gdcd =append (_ebfa ._gdcd ,_afda ...);_ebfa ._fea +=_fgfc .NumberOfExportedSymbols ;};};return nil ;};type PatternDictionary struct{_ebfgb _ge .StreamReader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;GBAtX []int8 ;GBAtY []int8 ;IsMMREncoded bool ;HDTemplate byte ;HdpWidth byte ;HdpHeight byte ;Patterns []*_fc .Bitmap ;GrayMax uint32 ;};func _gbb (_gfb _ge .StreamReader ,_dbg *Header )*GenericRefinementRegion {return &GenericRefinementRegion {_fcb :_gfb ,RegionInfo :NewRegionSegment (_gfb ),_eb :_dbg ,_ff :&template0 {},_gag :&template1 {}};};func (_aae *EndOfStripe )parseHeader (_cg *Header ,_ga _ge .StreamReader )error {_ab ,_dce :=_aae ._fa .ReadBits (32);if _dce !=nil {return _dce ;};_aae ._bb =int (_ab &_g .MaxInt32 );return nil ;};func (_fffff *PatternDictionary )readTemplate ()error {_fcgb ,_eaaf :=_fffff ._ebfgb .ReadBits (2);if _eaaf !=nil {return _eaaf ;};_fffff .HDTemplate =byte (_fcgb );return nil ;};func (_gacb *Header )readReferredToSegmentNumbers (_edef _ge .StreamReader ,_cgbe int )([]int ,error ){const _ggge ="\u0072\u0065\u0061\u0064R\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053e\u0067m\u0065\u006e\u0074\u004e\u0075\u006d\u0062e\u0072\u0073";_egce :=make ([]int ,_cgbe );if _cgbe > 0{_gacb .RTSegments =make ([]*Header ,_cgbe );var (_aecd uint64 ;_cffd error ;);for _bdef :=0;_bdef < _cgbe ;_bdef ++{_aecd ,_cffd =_edef .ReadBits (byte (_gacb .referenceSize ())<<3);if _cffd !=nil {return nil ,_be .Wrapf (_cffd ,_ggge ,"\u0027\u0025\u0064\u0027 \u0072\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0020\u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u0075\u006db\u0065\u0072",_bdef );};_egce [_bdef ]=int (_aecd &_g .MaxInt32 );};};return _egce ,nil ;};func (_fagd *Header )readHeaderFlags ()error {const _edda ="\u0072e\u0061d\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006c\u0061\u0067\u0073";_ageg ,_facg :=_fagd .Reader .ReadBit ();if _facg !=nil {return _be .Wrap (_facg ,_edda ,"r\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067");};if _ageg !=0{_fagd .RetainFlag =true ;};_ageg ,_facg =_fagd .Reader .ReadBit ();if _facg !=nil {return _be .Wrap (_facg ,_edda ,"\u0070\u0061g\u0065\u0020\u0061s\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e");};if _ageg !=0{_fagd .PageAssociationFieldSize =true ;};_edfea ,_facg :=_fagd .Reader .ReadBits (6);if _facg !=nil {return _be .Wrap (_facg ,_edda ,"\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065");};_fagd .Type =Type (int (_edfea ));return nil ;};func (_ebg *RegionSegment )Size ()int {return 17};func (_debff *PageInformationSegment )String ()string {_gbef :=&_e .Builder {};_gbef .WriteString ("\u000a\u005b\u0050\u0041G\u0045\u002d\u0049\u004e\u0046\u004f\u0052\u004d\u0041\u0054I\u004fN\u002d\u0053\u0045\u0047\u004d\u0045\u004eT\u005d\u000a");_gbef .WriteString (_f .Sprintf ("\u0009\u002d \u0042\u004d\u0048e\u0069\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u000a",_debff .PageBMHeight ));_gbef .WriteString (_f .Sprintf ("\u0009-\u0020B\u004d\u0057\u0069\u0064\u0074\u0068\u003a\u0020\u0025\u0064\u000a",_debff .PageBMWidth ));_gbef .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0058\u003a\u0020\u0025\u0064\u000a",_debff .ResolutionX ));_gbef .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0059\u003a\u0020\u0025\u0064\u000a",_debff .ResolutionY ));_gbef .WriteString (_f .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0073\u000a",_debff ._edcd ));_gbef .WriteString (_f .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006eO\u0070\u0065\u0072\u0061\u0074\u006f\u0072O\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025v\u000a",_debff ._ddb ));_gbef .WriteString (_f .Sprintf ("\u0009-\u0020I\u0073\u004c\u006f\u0073\u0073l\u0065\u0073s\u003a\u0020\u0025\u0076\u000a",_debff .IsLossless ));_gbef .WriteString (_f .Sprintf ("\u0009\u002d\u0020R\u0065\u0071\u0075\u0069r\u0065\u0073\u0041\u0075\u0078\u0069\u006ci\u0061\u0072\u0079\u0042\u0075\u0066\u0066\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_debff ._bgc ));_gbef .WriteString (_f .Sprintf ("\u0009\u002d\u0020M\u0069\u0067\u0068\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0052e\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0076\u000a",_debff ._gce ));_gbef .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0049\u0073\u0053\u0074\u0072\u0069\u0070\u0065\u0064:\u0020\u0025\u0076\u000a",_debff .IsStripe ));_gbef .WriteString (_f .Sprintf ("\t\u002d\u0020\u004d\u0061xS\u0074r\u0069\u0070\u0065\u0053\u0069z\u0065\u003a\u0020\u0025\u0076\u000a",_debff .MaxStripeSize ));return _gbef .String ();};func (_gecb *SymbolDictionary )readNumberOfNewSymbols ()error {_bbga ,_ceef :=_gecb ._gabb .ReadBits (32);if _ceef !=nil {return _ceef ;};_gecb .NumberOfNewSymbols =uint32 (_bbga &_g .MaxUint32 );return nil ;};func (_gebd *GenericRegion )GetRegionInfo ()*RegionSegment {return _gebd .RegionSegment };func NewHeader (d Documenter ,r _ge .StreamReader ,offset int64 ,organizationType OrganizationType )(*Header ,error ){_gccc :=&Header {Reader :r };if _bbc :=_gccc .parse (d ,r ,offset ,organizationType );_bbc !=nil {return nil ,_be .Wrap (_bbc ,"\u004ee\u0077\u0048\u0065\u0061\u0064\u0065r","");};return _gccc ,nil ;};const (TSymbolDictionary Type =0;TIntermediateTextRegion Type =4;TImmediateTextRegion Type =6;TImmediateLosslessTextRegion Type =7;TPatternDictionary Type =16;TIntermediateHalftoneRegion Type =20;TImmediateHalftoneRegion Type =22;TImmediateLosslessHalftoneRegion Type =23;TIntermediateGenericRegion Type =36;TImmediateGenericRegion Type =38;TImmediateLosslessGenericRegion Type =39;TIntermediateGenericRefinementRegion Type =40;TImmediateGenericRefinementRegion Type =42;TImmediateLosslessGenericRefinementRegion Type =43;TPageInformation Type =48;TEndOfPage Type =49;TEndOfStrip Type =50;TEndOfFile Type =51;TProfiles Type =52;TTables Type =53;TExtension Type =62;TBitmap Type =70;);func (_dgaf *TextRegion )decodeIds ()(int64 ,error ){const _cacad ="\u0064e\u0063\u006f\u0064\u0065\u0049\u0064s";if _dgaf .IsHuffmanEncoded {if _dgaf .SbHuffDS ==3{if _dgaf ._daeb ==nil {_fabda :=0;if _dgaf .SbHuffFS ==3{_fabda ++;};var _fddd error ;_dgaf ._daeb ,_fddd =_dgaf .getUserTable (_fabda );if _fddd !=nil {return 0,_be .Wrap (_fddd ,_cacad ,"");};};return _dgaf ._daeb .Decode (_dgaf ._bfd );};_gccdb ,_fggc :=_db .GetStandardTable (8+int (_dgaf .SbHuffDS ));if _fggc !=nil {return 0,_be .Wrap (_fggc ,_cacad ,"");};return _gccdb .Decode (_dgaf ._bfd );};_dadc ,_ebcd :=_dgaf ._cfdbc .DecodeInt (_dgaf ._afbc );if _ebcd !=nil {return 0,_be .Wrap (_ebcd ,_cacad ,"\u0063\u0078\u0049\u0041\u0044\u0053");};return int64 (_dadc ),nil ;};func (_egeg *TableSegment )parseHeader ()error {var (_daag int ;_gdac uint64 ;_gfdd error ;);_daag ,_gfdd =_egeg ._aagff .ReadBit ();if _gfdd !=nil {return _gfdd ;};if _daag ==1{return _f .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0061\u0062\u006c\u0065 \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0064e\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u002e\u0020\u0042\u002e\u0032\u002e1\u0020\u0043\u006f\u0064\u0065\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0042\u0069\u0074\u0020\u0037\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u007a\u0065\u0072\u006f\u002e\u0020\u0057a\u0073\u003a \u0025\u0064",_daag );};if _gdac ,_gfdd =_egeg ._aagff .ReadBits (3);_gfdd !=nil {return _gfdd ;};_egeg ._dgcg =(int32 (_gdac )+1)&0xf;if _gdac ,_gfdd =_egeg ._aagff .ReadBits (3);_gfdd !=nil {return _gfdd ;};_egeg ._cgfcg =(int32 (_gdac )+1)&0xf;if _gdac ,_gfdd =_egeg ._aagff .ReadBits (32);_gfdd !=nil {return _gfdd ;};_egeg ._agaae =int32 (_gdac &_g .MaxInt32 );if _gdac ,_gfdd =_egeg ._aagff .ReadBits (32);_gfdd !=nil {return _gfdd ;};_egeg ._fabb =int32 (_gdac &_g .MaxInt32 );return nil ;};type Type int ;func (_efcd *SymbolDictionary )setSymbolsArray ()error {if _efcd ._gdcd ==nil {if _eadfc :=_efcd .retrieveImportSymbols ();_eadfc !=nil {return _eadfc ;};};if _efcd ._ddfad ==nil {_efcd ._ddfad =append (_efcd ._ddfad ,_efcd ._gdcd ...);};return nil ;};func (_fcbg *PageInformationSegment )readCombinationOperatorOverrideAllowed ()error {_agaa ,_bgeb :=_fcbg ._cgde .ReadBit ();if _bgeb !=nil {return _bgeb ;};if _agaa ==1{_fcbg ._ddb =true ;};return nil ;};func (_aedca *PageInformationSegment )readContainsRefinement ()error {_dcdge ,_dadf :=_aedca ._cgde .ReadBit ();if _dadf !=nil {return _dadf ;};if _dcdge ==1{_aedca ._gce =true ;};return nil ;};func (_eded *TextRegion )decodeID ()(int64 ,error ){if _eded .IsHuffmanEncoded {if _eded ._cdde ==nil {_aaeee ,_fgbc :=_eded ._bfd .ReadBits (byte (_eded ._eeaf ));return int64 (_aaeee ),_fgbc ;};return _eded ._cdde .Decode (_eded ._bfd );};return _eded ._cfdbc .DecodeIAID (uint64 (_eded ._eeaf ),_eded ._gdege );};func NewRegionSegment (r _ge .StreamReader )*RegionSegment {return &RegionSegment {_eaagc :r }};func (_ggba *Header )writeSegmentPageAssociation (_gdea _ge .BinaryWriter )(_afcg int ,_affg error ){const _fec ="w\u0072\u0069\u0074\u0065\u0053\u0065g\u006d\u0065\u006e\u0074\u0050\u0061\u0067\u0065\u0041s\u0073\u006f\u0063i\u0061t\u0069\u006f\u006e";if _ggba .pageSize ()!=4{if _affg =_gdea .WriteByte (byte (_ggba .PageAssociation ));_affg !=nil {return 0,_be .Wrap (_affg ,_fec ,"\u0070\u0061\u0067\u0065\u0053\u0069\u007a\u0065\u0020\u0021\u003d\u0020\u0034");};return 1,nil ;};_eadfd :=make ([]byte ,4);_a .BigEndian .PutUint32 (_eadfd ,uint32 (_ggba .PageAssociation ));if _afcg ,_affg =_gdea .Write (_eadfd );_affg !=nil {return 0,_be .Wrap (_affg ,_fec ,"\u0034 \u0062y\u0074\u0065\u0020\u0070\u0061g\u0065\u0020n\u0075\u006d\u0062\u0065\u0072");};return _afcg ,nil ;};func (_ceac *TextRegion )getSymbols ()error {if _ceac .Header .RTSegments !=nil {return _ceac .initSymbols ();};return nil ;};func (_efbd *PatternDictionary )GetDictionary ()([]*_fc .Bitmap ,error ){if _efbd .Patterns !=nil {return _efbd .Patterns ,nil ;};if !_efbd .IsMMREncoded {_efbd .setGbAtPixels ();};_gggga :=NewGenericRegion (_efbd ._ebfgb );_gggga .setParametersMMR (_efbd .IsMMREncoded ,_efbd .DataOffset ,_efbd .DataLength ,uint32 (_efbd .HdpHeight ),(_efbd .GrayMax +1)*uint32 (_efbd .HdpWidth ),_efbd .HDTemplate ,false ,false ,_efbd .GBAtX ,_efbd .GBAtY );_bgbb ,_decf :=_gggga .GetRegionBitmap ();if _decf !=nil {return nil ,_decf ;};if _decf =_efbd .extractPatterns (_bgbb );_decf !=nil {return nil ,_decf ;};return _efbd .Patterns ,nil ;};func (_acbgf *TextRegion )decodeIb (_acdd ,_gbeb int64 )(*_fc .Bitmap ,error ){const _feca ="\u0064\u0065\u0063\u006f\u0064\u0065\u0049\u0062";var (_aefe error ;_eafg *_fc .Bitmap ;);if _acdd ==0{if int (_gbeb )> len (_acbgf .Symbols )-1{return nil ,_be .Error (_feca ,"\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0049\u0042\u0020\u0062\u0069\u0074\u006d\u0061\u0070\u002e\u0020\u0069\u006e\u0064\u0065x\u0020\u006f\u0075\u0074\u0020o\u0066\u0020r\u0061\u006e\u0067\u0065");};return _acbgf .Symbols [int (_gbeb )],nil ;};var _bebd ,_cbfa ,_gedc ,_bbdf int64 ;_bebd ,_aefe =_acbgf .decodeRdw ();if _aefe !=nil {return nil ,_be .Wrap (_aefe ,_feca ,"");};_cbfa ,_aefe =_acbgf .decodeRdh ();if _aefe !=nil {return nil ,_be .Wrap (_aefe ,_feca ,"");};_gedc ,_aefe =_acbgf .decodeRdx ();if _aefe !=nil {return nil ,_be .Wrap (_aefe ,_feca ,"");};_bbdf ,_aefe =_acbgf .decodeRdy ();if _aefe !=nil {return nil ,_be .Wrap (_aefe ,_feca ,"");};if _acbgf .IsHuffmanEncoded {if _ ,_aefe =_acbgf .decodeSymInRefSize ();_aefe !=nil {return nil ,_be .Wrap (_aefe ,_feca ,"");};_acbgf ._bfd .Align ();};_gddda :=_acbgf .Symbols [_gbeb ];_ddgc :=uint32 (_gddda .Width );_decb :=uint32 (_gddda .Height );_fbed :=int32 (uint32 (_bebd )>>1)+int32 (_gedc );_dgebf :=int32 (uint32 (_cbfa )>>1)+int32 (_bbdf );if _acbgf ._gfef ==nil {_acbgf ._gfef =_gbb (_acbgf ._bfd ,nil );};_acbgf ._gfef .setParameters (_acbgf ._accd ,_acbgf ._cfdbc ,_acbgf .SbrTemplate ,_ddgc +uint32 (_bebd ),_decb +uint32 (_cbfa ),_gddda ,_fbed ,_dgebf ,false ,_acbgf .SbrATX ,_acbgf .SbrATY );_eafg ,_aefe =_acbgf ._gfef .GetRegionBitmap ();if _aefe !=nil {return nil ,_be .Wrap (_aefe ,_feca ,"\u0067\u0072\u0066");};if _acbgf .IsHuffmanEncoded {_acbgf ._bfd .Align ();};return _eafg ,nil ;};func (_dfde *HalftoneRegion )shiftAndFill (_cfdb int )int {_cfdb >>=8;if _cfdb < 0{_aaag :=int (_g .Log (float64 (_bfcga (_cfdb )))/_g .Log (2));_gab :=31-_aaag ;for _aeef :=1;_aeef < _gab ;_aeef ++{_cfdb |=1<<uint (31-_aeef );};};return _cfdb ;};func (_dceg *TextRegion )Encode (w _ge .BinaryWriter )(_fbdba int ,_gfbc error ){const _bdaa ="\u0054\u0065\u0078\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u002e\u0045n\u0063\u006f\u0064\u0065";if _fbdba ,_gfbc =_dceg .RegionInfo .Encode (w );_gfbc !=nil {return _fbdba ,_be .Wrap (_gfbc ,_bdaa ,"");};var _ddgd int ;if _ddgd ,_gfbc =_dceg .encodeFlags (w );_gfbc !=nil {return _fbdba ,_be .Wrap (_gfbc ,_bdaa ,"");};_fbdba +=_ddgd ;if _ddgd ,_gfbc =_dceg .encodeSymbols (w );_gfbc !=nil {return _fbdba ,_be .Wrap (_gfbc ,_bdaa ,"");};_fbdba +=_ddgd ;return _fbdba ,nil ;};func (_eeab *TextRegion )readRegionFlags ()error {var (_gaef int ;_dggdb uint64 ;_fbdca error ;);_gaef ,_fbdca =_eeab ._bfd .ReadBit ();if _fbdca !=nil {return _fbdca ;};_eeab .SbrTemplate =int8 (_gaef );_dggdb ,_fbdca =_eeab ._bfd .ReadBits (5);if _fbdca !=nil {return _fbdca ;};_eeab .SbdsOffset =int8 (_dggdb );if _eeab .SbdsOffset > 0x0f{_eeab .SbdsOffset -=0x20;};_gaef ,_fbdca =_eeab ._bfd .ReadBit ();if _fbdca !=nil {return _fbdca ;};_eeab .DefaultPixel =int8 (_gaef );_dggdb ,_fbdca =_eeab ._bfd .ReadBits (2);if _fbdca !=nil {return _fbdca ;};_eeab .CombinationOperator =_fc .CombinationOperator (int (_dggdb )&0x3);_gaef ,_fbdca =_eeab ._bfd .ReadBit ();if _fbdca !=nil {return _fbdca ;};_eeab .IsTransposed =int8 (_gaef );_dggdb ,_fbdca =_eeab ._bfd .ReadBits (2);if _fbdca !=nil {return _fbdca ;};_eeab .ReferenceCorner =int16 (_dggdb )&0x3;_dggdb ,_fbdca =_eeab ._bfd .ReadBits (2);if _fbdca !=nil {return _fbdca ;};_eeab .LogSBStrips =int16 (_dggdb )&0x3;_eeab .SbStrips =1<<uint (_eeab .LogSBStrips );_gaef ,_fbdca =_eeab ._bfd .ReadBit ();if _fbdca !=nil {return _fbdca ;};if _gaef ==1{_eeab .UseRefinement =true ;};_gaef ,_fbdca =_eeab ._bfd .ReadBit ();if _fbdca !=nil {return _fbdca ;};if _gaef ==1{_eeab .IsHuffmanEncoded =true ;};return nil ;};func (_gagc *SymbolDictionary )decodeRefinedSymbol (_bfa ,_dcbc uint32 )error {var (_dgge int ;_gddcf ,_befe int32 ;);if _gagc .IsHuffmanEncoded {_ggfc ,_dfe :=_gagc ._gabb .ReadBits (byte (_gagc ._gcgdg ));if _dfe !=nil {return _dfe ;};_dgge =int (_ggfc );_fecb ,_dfe :=_db .GetStandardTable (15);if _dfe !=nil {return _dfe ;};_gdcc ,_dfe :=_fecb .Decode (_gagc ._gabb );if _dfe !=nil {return _dfe ;};_gddcf =int32 (_gdcc );_gdcc ,_dfe =_fecb .Decode (_gagc ._gabb );if _dfe !=nil {return _dfe ;};_befe =int32 (_gdcc );_fecb ,_dfe =_db .GetStandardTable (1);if _dfe !=nil {return _dfe ;};if _ ,_dfe =_fecb .Decode (_gagc ._gabb );_dfe !=nil {return _dfe ;};_gagc ._gabb .Align ();}else {_bfac ,_edbg :=_gagc ._aafa .DecodeIAID (uint64 (_gagc ._gcgdg ),_gagc ._fagbd );if _edbg !=nil {return _edbg ;};_dgge =int (_bfac );_gddcf ,_edbg =_gagc ._aafa .DecodeInt (_gagc ._dfbb );if _edbg !=nil {return _edbg ;};_befe ,_edbg =_gagc ._aafa .DecodeInt (_gagc ._bbdcg );if _edbg !=nil {return _edbg ;};};if _gbbb :=_gagc .setSymbolsArray ();_gbbb !=nil {return _gbbb ;};_baad :=_gagc ._ddfad [_dgge ];if _gdaf :=_gagc .decodeNewSymbols (_bfa ,_dcbc ,_baad ,_gddcf ,_befe );_gdaf !=nil {return _gdaf ;};if _gagc .IsHuffmanEncoded {_gagc ._gabb .Align ();};return nil ;};func (_facc *Header )writeSegmentDataLength (_gabe _ge .BinaryWriter )(_dbca int ,_acfc error ){_fedc :=make ([]byte ,4);_a .BigEndian .PutUint32 (_fedc ,uint32 (_facc .SegmentDataLength ));if _dbca ,_acfc =_gabe .Write (_fedc );_acfc !=nil {return 0,_be .Wrap (_acfc ,"\u0048\u0065a\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u004c\u0065ng\u0074\u0068","");};return _dbca ,nil ;};func (_ddcg *TextRegion )decodeRdh ()(int64 ,error ){const _feaa ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064h";if _ddcg .IsHuffmanEncoded {if _ddcg .SbHuffRDHeight ==3{if _ddcg ._fdgf ==nil {var (_cdcca int ;_cegg error ;);if _ddcg .SbHuffFS ==3{_cdcca ++;};if _ddcg .SbHuffDS ==3{_cdcca ++;};if _ddcg .SbHuffDT ==3{_cdcca ++;};if _ddcg .SbHuffRDWidth ==3{_cdcca ++;};_ddcg ._fdgf ,_cegg =_ddcg .getUserTable (_cdcca );if _cegg !=nil {return 0,_be .Wrap (_cegg ,_feaa ,"");};};return _ddcg ._fdgf .Decode (_ddcg ._bfd );};_afefa ,_dgcd :=_db .GetStandardTable (14+int (_ddcg .SbHuffRDHeight ));if _dgcd !=nil {return 0,_be .Wrap (_dgcd ,_feaa ,"");};return _afefa .Decode (_ddcg ._bfd );};_adeg ,_efgd :=_ddcg ._cfdbc .DecodeInt (_ddcg ._dgdaa );if _efgd !=nil {return 0,_be .Wrap (_efgd ,_feaa ,"");};return int64 (_adeg ),nil ;};var _ _db .BasicTabler =&TableSegment {};var (_cdgb Segmenter ;_cfca =map[Type ]func ()Segmenter {TSymbolDictionary :func ()Segmenter {return &SymbolDictionary {}},TIntermediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateLosslessTextRegion :func ()Segmenter {return &TextRegion {}},TPatternDictionary :func ()Segmenter {return &PatternDictionary {}},TIntermediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateLosslessHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TIntermediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateLosslessGenericRegion :func ()Segmenter {return &GenericRegion {}},TIntermediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateLosslessGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TPageInformation :func ()Segmenter {return &PageInformationSegment {}},TEndOfPage :func ()Segmenter {return _cdgb },TEndOfStrip :func ()Segmenter {return &EndOfStripe {}},TEndOfFile :func ()Segmenter {return _cdgb },TProfiles :func ()Segmenter {return _cdgb },TTables :func ()Segmenter {return &TableSegment {}},TExtension :func ()Segmenter {return _cdgb },TBitmap :func ()Segmenter {return _cdgb }};);var (_ Regioner =&TextRegion {};_ Segmenter =&TextRegion {};);const (ORandom OrganizationType =iota ;OSequential ;);func (_dggac *SymbolDictionary )readNumberOfExportedSymbols ()error {_adgf ,_ggad :=_dggac ._gabb .ReadBits (32);if _ggad !=nil {return _ggad ;};_dggac .NumberOfExportedSymbols =uint32 (_adgf &_g .MaxUint32 );return nil ;};func (_bbbd *Header )parse (_cea Documenter ,_ebdd _ge .StreamReader ,_abef int64 ,_dbeeb OrganizationType )(_cccg error ){const _agbg ="\u0070\u0061\u0072s\u0065";_bc .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u005b\u0050A\u0052\u0053\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _cccg !=nil {_bc .Log .Trace ("\u005b\u0053\u0045GM\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045R\u005d[\u0050A\u0052S\u0045\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_cccg );}else {_bc .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052]\u005bP\u0041\u0052\u0053\u0045\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");};}();_ ,_cccg =_ebdd .Seek (_abef ,_d .SeekStart );if _cccg !=nil {return _be .Wrap (_cccg ,_agbg ,"\u0073\u0065\u0065\u006b\u0020\u0073\u0074\u0061\u0072\u0074");};if _cccg =_bbbd .readSegmentNumber (_ebdd );_cccg !=nil {return _be .Wrap (_cccg ,_agbg ,"");};if _cccg =_bbbd .readHeaderFlags ();_cccg !=nil {return _be .Wrap (_cccg ,_agbg ,"");};var _bgfd uint64 ;_bgfd ,_cccg =_bbbd .readNumberOfReferredToSegments (_ebdd );if _cccg !=nil {return _be .Wrap (_cccg ,_agbg ,"");};_bbbd .RTSNumbers ,_cccg =_bbbd .readReferredToSegmentNumbers (_ebdd ,int (_bgfd ));if _cccg !=nil {return _be .Wrap (_cccg ,_agbg ,"");};_cccg =_bbbd .readSegmentPageAssociation (_cea ,_ebdd ,_bgfd ,_bbbd .RTSNumbers ...);if _cccg !=nil {return _be .Wrap (_cccg ,_agbg ,"");};if _bbbd .Type !=TEndOfFile {if _cccg =_bbbd .readSegmentDataLength (_ebdd );_cccg !=nil {return _be .Wrap (_cccg ,_agbg ,"");};};_bbbd .readDataStartOffset (_ebdd ,_dbeeb );_bbbd .readHeaderLength (_ebdd ,_abef );_bc .Log .Trace ("\u0025\u0073",_bbbd );return nil ;};func (_dgec *PageInformationSegment )CombinationOperator ()_fc .CombinationOperator {return _dgec ._edcd ;};func (_fefc *SymbolDictionary )encodeATFlags (_cdab _ge .BinaryWriter )(_gfde int ,_cfbaf error ){const _ega ="\u0065\u006e\u0063\u006f\u0064\u0065\u0041\u0054\u0046\u006c\u0061\u0067\u0073";if _fefc .IsHuffmanEncoded ||_fefc .SdTemplate !=0{return 0,nil ;};_fabc :=4;if _fefc .SdTemplate !=0{_fabc =1;};for _eade :=0;_eade < _fabc ;_eade ++{if _cfbaf =_cdab .WriteByte (byte (_fefc .SdATX [_eade ]));_cfbaf !=nil {return _gfde ,_be .Wrapf (_cfbaf ,_ega ,"\u0053d\u0041\u0054\u0058\u005b\u0025\u0064]",_eade );};_gfde ++;if _cfbaf =_cdab .WriteByte (byte (_fefc .SdATY [_eade ]));_cfbaf !=nil {return _gfde ,_be .Wrapf (_cfbaf ,_ega ,"\u0053d\u0041\u0054\u0059\u005b\u0025\u0064]",_eade );};_gfde ++;};return _gfde ,nil ;};func (_fgec *RegionSegment )parseHeader ()error {const _faag ="p\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_bc .Log .Trace ("\u005b\u0052\u0045\u0047I\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002dH\u0045A\u0044\u0045\u0052\u005d\u0020\u0042\u0065g\u0069\u006e");defer func (){_bc .Log .Trace ("\u005b\u0052\u0045G\u0049\u004f\u004e\u005d[\u0050\u0041\u0052\u0053\u0045\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");}();_adfg ,_ecef :=_fgec ._eaagc .ReadBits (32);if _ecef !=nil {return _be .Wrap (_ecef ,_faag ,"\u0077\u0069\u0064t\u0068");};_fgec .BitmapWidth =uint32 (_adfg &_g .MaxUint32 );_adfg ,_ecef =_fgec ._eaagc .ReadBits (32);if _ecef !=nil {return _be .Wrap (_ecef ,_faag ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_fgec .BitmapHeight =uint32 (_adfg &_g .MaxUint32 );_adfg ,_ecef =_fgec ._eaagc .ReadBits (32);if _ecef !=nil {return _be .Wrap (_ecef ,_faag ,"\u0078\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_fgec .XLocation =uint32 (_adfg &_g .MaxUint32 );_adfg ,_ecef =_fgec ._eaagc .ReadBits (32);if _ecef !=nil {return _be .Wrap (_ecef ,_faag ,"\u0079\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_fgec .YLocation =uint32 (_adfg &_g .MaxUint32 );if _ ,_ecef =_fgec ._eaagc .ReadBits (5);_ecef !=nil {return _be .Wrap (_ecef ,_faag ,"\u0064i\u0072\u0079\u0020\u0072\u0065\u0061d");};if _ecef =_fgec .readCombinationOperator ();_ecef !=nil {return _be .Wrap (_ecef ,_faag ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};return nil ;};func (_fbgd *GenericRefinementRegion )decodeTypicalPredictedLine (_ea ,_dcf ,_dgdd ,_geee ,_ebea ,_df int )error {_ebf :=_ea -int (_fbgd .ReferenceDY );_ece :=_fbgd .ReferenceBitmap .GetByteIndex (0,_ebf );_ad :=_fbgd .RegionBitmap .GetByteIndex (0,_ea );var _af error ;switch _fbgd .TemplateID {case 0:_af =_fbgd .decodeTypicalPredictedLineTemplate0 (_ea ,_dcf ,_dgdd ,_geee ,_ebea ,_df ,_ad ,_ebf ,_ece );case 1:_af =_fbgd .decodeTypicalPredictedLineTemplate1 (_ea ,_dcf ,_dgdd ,_geee ,_ebea ,_df ,_ad ,_ebf ,_ece );};return _af ;};func (_beag *GenericRegion )writeGBAtPixels (_bdcc _ge .BinaryWriter )(_gfe int ,_bfg error ){const _aedc ="\u0077r\u0069t\u0065\u0047\u0042\u0041\u0074\u0050\u0069\u0078\u0065\u006c\u0073";if _beag .UseMMR {return 0,nil ;};_aea :=1;if _beag .GBTemplate ==0{_aea =4;}else if _beag .UseExtTemplates {_aea =12;};if len (_beag .GBAtX )!=_aea {return 0,_be .Errorf (_aedc ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0058\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");};if len (_beag .GBAtY )!=_aea {return 0,_be .Errorf (_aedc ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0059\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");};for _cabd :=0;_cabd < _aea ;_cabd ++{if _bfg =_bdcc .WriteByte (byte (_beag .GBAtX [_cabd ]));_bfg !=nil {return _gfe ,_be .Wrap (_bfg ,_aedc ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0058");};_gfe ++;if _bfg =_bdcc .WriteByte (byte (_beag .GBAtY [_cabd ]));_bfg !=nil {return _gfe ,_be .Wrap (_bfg ,_aedc ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0059");};_gfe ++;};return _gfe ,nil ;};func (_gdfba *TextRegion )initSymbols ()error {const _ddgeb ="i\u006e\u0069\u0074\u0053\u0079\u006d\u0062\u006f\u006c\u0073";for _ ,_gade :=range _gdfba .Header .RTSegments {if _gade ==nil {return _be .Error (_ddgeb ,"\u006e\u0069\u006c\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020pr\u006f\u0076\u0069\u0064\u0065\u0064 \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0074\u0065\u0078\u0074\u0020\u0072\u0065g\u0069\u006f\u006e\u0020\u0053\u0079\u006d\u0062o\u006c\u0073");};if _gade .Type ==0{_eeac ,_dcaef :=_gade .GetSegmentData ();if _dcaef !=nil {return _be .Wrap (_dcaef ,_ddgeb ,"");};_dcggb ,_ddbd :=_eeac .(*SymbolDictionary );if !_ddbd {return _be .Error (_ddgeb ,"\u0072e\u0066\u0065r\u0072\u0065\u0064 \u0054\u006f\u0020\u0053\u0065\u0067\u006de\u006e\u0074\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_dcggb ._fagbd =_gdfba ._gdege ;_cebf ,_dcaef :=_dcggb .GetDictionary ();if _dcaef !=nil {return _be .Wrap (_dcaef ,_ddgeb ,"");};_gdfba .Symbols =append (_gdfba .Symbols ,_cebf ...);};};_gdfba .NumberOfSymbols =uint32 (len (_gdfba .Symbols ));return nil ;};func (_bcbg *TextRegion )readUseRefinement ()error {if !_bcbg .UseRefinement ||_bcbg .SbrTemplate !=0{return nil ;};var (_efdb byte ;_edaa error ;);_bcbg .SbrATX =make ([]int8 ,2);_bcbg .SbrATY =make ([]int8 ,2);_efdb ,_edaa =_bcbg ._bfd .ReadByte ();if _edaa !=nil {return _edaa ;};_bcbg .SbrATX [0]=int8 (_efdb );_efdb ,_edaa =_bcbg ._bfd .ReadByte ();if _edaa !=nil {return _edaa ;};_bcbg .SbrATY [0]=int8 (_efdb );_efdb ,_edaa =_bcbg ._bfd .ReadByte ();if _edaa !=nil {return _edaa ;};_bcbg .SbrATX [1]=int8 (_efdb );_efdb ,_edaa =_bcbg ._bfd .ReadByte ();if _edaa !=nil {return _edaa ;};_bcbg .SbrATY [1]=int8 (_efdb );return nil ;};func (_cdb *SymbolDictionary )decodeAggregate (_bade ,_daae uint32 )error {var (_aeb int64 ;_aeba error ;);if _cdb .IsHuffmanEncoded {_aeb ,_aeba =_cdb .huffDecodeRefAggNInst ();if _aeba !=nil {return _aeba ;};}else {_cfcg ,_bdbe :=_cdb ._aafa .DecodeInt (_cdb ._fdfe );if _bdbe !=nil {return _bdbe ;};_aeb =int64 (_cfcg );};if _aeb > 1{return _cdb .decodeThroughTextRegion (_bade ,_daae ,uint32 (_aeb ));}else if _aeb ==1{return _cdb .decodeRefinedSymbol (_bade ,_daae );};return nil ;};func (_bdccd *SymbolDictionary )checkInput ()error {if _bdccd .SdHuffDecodeHeightSelection ==2{_bc .Log .Debug ("\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0048\u0065\u0069g\u0068\u0020\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061l\u0075\u0065\u0020\u006e\u006f\u0074 \u0070\u0065r\u006d\u0069t\u0074e\u0064",_bdccd .SdHuffDecodeHeightSelection );};if _bdccd .SdHuffDecodeWidthSelection ==2{_bc .Log .Debug ("\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0057\u0069\u0064t\u0068\u0020\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061l\u0075\u0065\u0020\u006e\u006f\u0074 \u0070\u0065r\u006d\u0069t\u0074e\u0064",_bdccd .SdHuffDecodeWidthSelection );};if _bdccd .IsHuffmanEncoded {if _bdccd .SdTemplate !=0{_bc .Log .Debug ("\u0053\u0044T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e \u0030\u0029",_bdccd .SdTemplate );};if !_bdccd .UseRefinementAggregation {if !_bdccd .UseRefinementAggregation {if _bdccd ._cbbb {_bc .Log .Debug ("\u0049\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074ex\u0074\u0052\u0065\u0074\u0061\u0069n\u0065\u0064\u0020\u003d\u0020\u0074\u0072\u0075\u0065\u0020\u0028\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0066\u0061\u006cs\u0065\u0029");_bdccd ._cbbb =false ;};if _bdccd ._ffee {_bc .Log .Debug ("\u0069s\u0043\u006fd\u0069\u006e\u0067\u0043o\u006e\u0074\u0065x\u0074\u0055\u0073\u0065\u0064\u0020\u003d\u0020\u0074ru\u0065\u0020\u0028s\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020f\u0061\u006cs\u0065\u0029");_bdccd ._ffee =false ;};};};}else {if _bdccd .SdHuffBMSizeSelection !=0{_bc .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066B\u004d\u0053\u0069\u007a\u0065\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");_bdccd .SdHuffBMSizeSelection =0;};if _bdccd .SdHuffDecodeWidthSelection !=0{_bc .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068\u0053\u0065\u006c\u0065\u0063\u0074\u0069o\u006e\u0020\u0073\u0068\u006fu\u006c\u0064 \u0062\u0065\u0020\u0030");_bdccd .SdHuffDecodeWidthSelection =0;};if _bdccd .SdHuffDecodeHeightSelection !=0{_bc .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0048e\u0069\u0067\u0068\u0074\u0053\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");_bdccd .SdHuffDecodeHeightSelection =0;};};if !_bdccd .UseRefinementAggregation {if _bdccd .SdrTemplate !=0{_bc .Log .Debug ("\u0053\u0044\u0052\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u003d\u0020\u0025\u0064\u0020\u0028s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_bdccd .SdrTemplate );_bdccd .SdrTemplate =0;};};if !_bdccd .IsHuffmanEncoded ||!_bdccd .UseRefinementAggregation {if _bdccd .SdHuffAggInstanceSelection {_bc .Log .Debug ("\u0053d\u0048\u0075f\u0066\u0041\u0067g\u0049\u006e\u0073\u0074\u0061\u006e\u0063e\u0053\u0065\u006c\u0065\u0063\u0074i\u006f\u006e\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_bdccd .SdHuffAggInstanceSelection );};};return nil ;};func (_gaee *TextRegion )decodeRI ()(int64 ,error ){if !_gaee .UseRefinement {return 0,nil ;};if _gaee .IsHuffmanEncoded {_edea ,_gagfb :=_gaee ._bfd .ReadBit ();return int64 (_edea ),_gagfb ;};_cacdd ,_dac :=_gaee ._cfdbc .DecodeInt (_gaee ._abdc );return int64 (_cacdd ),_dac ;};func (_dgeb *PageInformationSegment )encodeStripingInformation (_cec _ge .BinaryWriter )(_deca int ,_ffff error ){const _ecd ="\u0065n\u0063\u006f\u0064\u0065S\u0074\u0072\u0069\u0070\u0069n\u0067I\u006ef\u006f\u0072\u006d\u0061\u0074\u0069\u006fn";if !_dgeb .IsStripe {if _deca ,_ffff =_cec .Write ([]byte {0x00,0x00});_ffff !=nil {return 0,_be .Wrap (_ffff ,_ecd ,"n\u006f\u0020\u0073\u0074\u0072\u0069\u0070\u0069\u006e\u0067");};return _deca ,nil ;};_bgcb :=make ([]byte ,2);_a .BigEndian .PutUint16 (_bgcb ,_dgeb .MaxStripeSize |1<<15);if _deca ,_ffff =_cec .Write (_bgcb );_ffff !=nil {return 0,_be .Wrapf (_ffff ,_ecd ,"\u0073\u0074\u0072i\u0070\u0069\u006e\u0067\u003a\u0020\u0025\u0064",_dgeb .MaxStripeSize );};return _deca ,nil ;};func (_abfd *PatternDictionary )Init (h *Header ,r _ge .StreamReader )error {_abfd ._ebfgb =r ;return _abfd .parseHeader ();};func (_egfg *TextRegion )setParameters (_geae *_ce .Decoder ,_cadg ,_ddgdb bool ,_gabd ,_efbf uint32 ,_cfbb uint32 ,_agec int8 ,_fbcf uint32 ,_efda int8 ,_dfdd _fc .CombinationOperator ,_ecac int8 ,_efdg int16 ,_fdag ,_eabc ,_faeebe ,_ggbfb ,_ecad ,_abegb ,_fgdde ,_fffdb ,_aebdc ,_gfeg int8 ,_agac ,_gcce []int8 ,_fcee []*_fc .Bitmap ,_dcec int8 ){_egfg ._cfdbc =_geae ;_egfg .IsHuffmanEncoded =_cadg ;_egfg .UseRefinement =_ddgdb ;_egfg .RegionInfo .BitmapWidth =_gabd ;_egfg .RegionInfo .BitmapHeight =_efbf ;_egfg .NumberOfSymbolInstances =_cfbb ;_egfg .SbStrips =_agec ;_egfg .NumberOfSymbols =_fbcf ;_egfg .DefaultPixel =_efda ;_egfg .CombinationOperator =_dfdd ;_egfg .IsTransposed =_ecac ;_egfg .ReferenceCorner =_efdg ;_egfg .SbdsOffset =_fdag ;_egfg .SbHuffFS =_eabc ;_egfg .SbHuffDS =_faeebe ;_egfg .SbHuffDT =_ggbfb ;_egfg .SbHuffRDWidth =_ecad ;_egfg .SbHuffRDHeight =_abegb ;_egfg .SbHuffRDX =_fgdde ;_egfg .SbHuffRDY =_fffdb ;_egfg .SbrTemplate =_gfeg ;_egfg .SbrATX =_agac ;_egfg .SbrATY =_gcce ;_egfg .Symbols =_fcee ;_egfg ._eeaf =_dcec ;};func (_fcgbg *TextRegion )decodeSymInRefSize ()(int64 ,error ){const _gdfb ="\u0064e\u0063o\u0064\u0065\u0053\u0079\u006dI\u006e\u0052e\u0066\u0053\u0069\u007a\u0065";if _fcgbg .SbHuffRSize ==0{_dbgg ,_agea :=_db .GetStandardTable (1);if _agea !=nil {return 0,_be .Wrap (_agea ,_gdfb ,"");};return _dbgg .Decode (_fcgbg ._bfd );};if _fcgbg ._ade ==nil {var (_gfbae int ;_eddga error ;);if _fcgbg .SbHuffFS ==3{_gfbae ++;};if _fcgbg .SbHuffDS ==3{_gfbae ++;};if _fcgbg .SbHuffDT ==3{_gfbae ++;};if _fcgbg .SbHuffRDWidth ==3{_gfbae ++;};if _fcgbg .SbHuffRDHeight ==3{_gfbae ++;};if _fcgbg .SbHuffRDX ==3{_gfbae ++;};if _fcgbg .SbHuffRDY ==3{_gfbae ++;};_fcgbg ._ade ,_eddga =_fcgbg .getUserTable (_gfbae );if _eddga !=nil {return 0,_be .Wrap (_eddga ,_gdfb ,"");};};_faeda ,_fade :=_fcgbg ._ade .Decode (_fcgbg ._bfd );if _fade !=nil {return 0,_be .Wrap (_fade ,_gdfb ,"");};return _faeda ,nil ;};type SegmentEncoder interface{Encode (_ffebb _ge .BinaryWriter )(_gfad int ,_dagcf error );};func (_cefc *HalftoneRegion )parseHeader ()error {if _faeeb :=_cefc .RegionSegment .parseHeader ();_faeeb !=nil {return _faeeb ;};_dgddb ,_ebad :=_cefc ._cbf .ReadBit ();if _ebad !=nil {return _ebad ;};_cefc .HDefaultPixel =int8 (_dgddb );_deac ,_ebad :=_cefc ._cbf .ReadBits (3);if _ebad !=nil {return _ebad ;};_cefc .CombinationOperator =_fc .CombinationOperator (_deac &0xf);_dgddb ,_ebad =_cefc ._cbf .ReadBit ();if _ebad !=nil {return _ebad ;};if _dgddb ==1{_cefc .HSkipEnabled =true ;};_deac ,_ebad =_cefc ._cbf .ReadBits (2);if _ebad !=nil {return _ebad ;};_cefc .HTemplate =byte (_deac &0xf);_dgddb ,_ebad =_cefc ._cbf .ReadBit ();if _ebad !=nil {return _ebad ;};if _dgddb ==1{_cefc .IsMMREncoded =true ;};_deac ,_ebad =_cefc ._cbf .ReadBits (32);if _ebad !=nil {return _ebad ;};_cefc .HGridWidth =uint32 (_deac &_g .MaxUint32 );_deac ,_ebad =_cefc ._cbf .ReadBits (32);if _ebad !=nil {return _ebad ;};_cefc .HGridHeight =uint32 (_deac &_g .MaxUint32 );_deac ,_ebad =_cefc ._cbf .ReadBits (32);if _ebad !=nil {return _ebad ;};_cefc .HGridX =int32 (_deac &_g .MaxInt32 );_deac ,_ebad =_cefc ._cbf .ReadBits (32);if _ebad !=nil {return _ebad ;};_cefc .HGridY =int32 (_deac &_g .MaxInt32 );_deac ,_ebad =_cefc ._cbf .ReadBits (16);if _ebad !=nil {return _ebad ;};_cefc .HRegionX =uint16 (_deac &_g .MaxUint16 );_deac ,_ebad =_cefc ._cbf .ReadBits (16);if _ebad !=nil {return _ebad ;};_cefc .HRegionY =uint16 (_deac &_g .MaxUint16 );if _ebad =_cefc .computeSegmentDataStructure ();_ebad !=nil {return _ebad ;};return _cefc .checkInput ();};func (_ccec *Header )readSegmentPageAssociation (_bdad Documenter ,_aeaa _ge .StreamReader ,_dfa uint64 ,_gbg ...int )(_fdgb error ){const _ddae ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074P\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061t\u0069\u006f\u006e";if !_ccec .PageAssociationFieldSize {_fffb ,_eef :=_aeaa .ReadBits (8);if _eef !=nil {return _be .Wrap (_eef ,_ddae ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_ccec .PageAssociation =int (_fffb &0xFF);}else {_gfdfg ,_bada :=_aeaa .ReadBits (32);if _bada !=nil {return _be .Wrap (_bada ,_ddae ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_ccec .PageAssociation =int (_gfdfg &_g .MaxInt32 );};if _dfa ==0{return nil ;};if _ccec .PageAssociation !=0{_cfg ,_begb :=_bdad .GetPage (_ccec .PageAssociation );if _begb !=nil {return _be .Wrap (_begb ,_ddae ,"\u0061s\u0073\u006f\u0063\u0069a\u0074\u0065\u0064\u0020\u0070a\u0067e\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006ed");};var _edbf int ;for _fga :=uint64 (0);_fga < _dfa ;_fga ++{_edbf =_gbg [_fga ];_ccec .RTSegments [_fga ],_begb =_cfg .GetSegment (_edbf );if _begb !=nil {var _gdc error ;_ccec .RTSegments [_fga ],_gdc =_bdad .GetGlobalSegment (_edbf );if _gdc !=nil {return _be .Wrapf (_begb ,_ddae ,"\u0072\u0065\u0066\u0065\u0072\u0065n\u0063\u0065\u0020s\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064\u0020\u0061\u0074\u0020pa\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0072\u0020\u0069\u006e\u0020\u0067\u006c\u006f\u0062\u0061\u006c\u0073",_ccec .PageAssociation );};};};return nil ;};for _gga :=uint64 (0);_gga < _dfa ;_gga ++{_ccec .RTSegments [_gga ],_fdgb =_bdad .GetGlobalSegment (_gbg [_gga ]);if _fdgb !=nil {return _be .Wrapf (_fdgb ,_ddae ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u003a\u0020\u0027\u0025d\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064",_gbg [_gga ]);};};return nil ;};func (_cfge *PageInformationSegment )Size ()int {return 19};func (_cfeb *SymbolDictionary )huffDecodeBmSize ()(int64 ,error ){if _cfeb ._ffcd ==nil {var (_ddde int ;_accec error ;);if _cfeb .SdHuffDecodeHeightSelection ==3{_ddde ++;};if _cfeb .SdHuffDecodeWidthSelection ==3{_ddde ++;};_cfeb ._ffcd ,_accec =_cfeb .getUserTable (_ddde );if _accec !=nil {return 0,_accec ;};};return _cfeb ._ffcd .Decode (_cfeb ._gabb );};func (_eafe *SymbolDictionary )Encode (w _ge .BinaryWriter )(_cgdcf int ,_gafc error ){const _feda ="\u0053\u0079\u006dbo\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0045\u006e\u0063\u006f\u0064\u0065";if _eafe ==nil {return 0,_be .Error (_feda ,"\u0073\u0079m\u0062\u006f\u006c\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066in\u0065\u0064");};if _cgdcf ,_gafc =_eafe .encodeFlags (w );_gafc !=nil {return _cgdcf ,_be .Wrap (_gafc ,_feda ,"");};_cbfb ,_gafc :=_eafe .encodeATFlags (w );if _gafc !=nil {return _cgdcf ,_be .Wrap (_gafc ,_feda ,"");};_cgdcf +=_cbfb ;if _cbfb ,_gafc =_eafe .encodeRefinementATFlags (w );_gafc !=nil {return _cgdcf ,_be .Wrap (_gafc ,_feda ,"");};_cgdcf +=_cbfb ;if _cbfb ,_gafc =_eafe .encodeNumSyms (w );_gafc !=nil {return _cgdcf ,_be .Wrap (_gafc ,_feda ,"");};_cgdcf +=_cbfb ;if _cbfb ,_gafc =_eafe .encodeSymbols (w );_gafc !=nil {return _cgdcf ,_be .Wrap (_gafc ,_feda ,"");};_cgdcf +=_cbfb ;return _cgdcf ,nil ;};func (_bbcb *SymbolDictionary )decodeHeightClassCollectiveBitmap (_fbdc int64 ,_ggcge ,_ecba uint32 )(*_fc .Bitmap ,error ){if _fbdc ==0{_acbga :=_fc .New (int (_ecba ),int (_ggcge ));var (_gfdb byte ;_cccb error ;);for _beec :=0;_beec < len (_acbga .Data );_beec ++{_gfdb ,_cccb =_bbcb ._gabb .ReadByte ();if _cccb !=nil {return nil ,_cccb ;};if _cccb =_acbga .SetByte (_beec ,_gfdb );_cccb !=nil {return nil ,_cccb ;};};return _acbga ,nil ;};if _bbcb ._fda ==nil {_bbcb ._fda =NewGenericRegion (_bbcb ._gabb );};_bbcb ._fda .setParameters (true ,_bbcb ._gabb .StreamPosition (),_fbdc ,_ggcge ,_ecba );_cdfg ,_ffbb :=_bbcb ._fda .GetRegionBitmap ();if _ffbb !=nil {return nil ,_ffbb ;};return _cdfg ,nil ;};func (_bgee *Header )referenceSize ()uint {switch {case _bgee .SegmentNumber <=255:return 1;case _bgee .SegmentNumber <=65535:return 2;default:return 4;};};func _bfcga (_edfe int )int {if _edfe ==0{return 0;};_edfe |=_edfe >>1;_edfe |=_edfe >>2;_edfe |=_edfe >>4;_edfe |=_edfe >>8;_edfe |=_edfe >>16;return (_edfe +1)>>1;};func (_caeab *PageInformationSegment )Init (h *Header ,r _ge .StreamReader )(_adbdf error ){_caeab ._cgde =r ;if _adbdf =_caeab .parseHeader ();_adbdf !=nil {return _be .Wrap (_adbdf ,"P\u0061\u0067\u0065\u0049\u006e\u0066o\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065g\u006d\u0065\u006et\u002eI\u006e\u0069\u0074","");};return nil ;};func (_cgcd *PageInformationSegment )readCombinationOperator ()error {_dadb ,_bagbc :=_cgcd ._cgde .ReadBits (2);if _bagbc !=nil {return _bagbc ;};_cgcd ._edcd =_fc .CombinationOperator (int (_dadb ));return nil ;};func (_fad *GenericRegion )Size ()int {return _fad .RegionSegment .Size ()+1+2*len (_fad .GBAtX )};func (_bfcd *HalftoneRegion )computeGrayScalePlanes (_dccd []*_fc .Bitmap ,_bebf int )([][]int ,error ){_eba :=make ([][]int ,_bfcd .HGridHeight );for _adfd :=0;_adfd < len (_eba );_adfd ++{_eba [_adfd ]=make ([]int ,_bfcd .HGridWidth );};for _dffe :=0;_dffe < int (_bfcd .HGridHeight );_dffe ++{for _agb :=0;_agb < int (_bfcd .HGridWidth );_agb +=8{var _eddc int ;if _caa :=int (_bfcd .HGridWidth )-_agb ;_caa > 8{_eddc =8;}else {_eddc =_caa ;};_ced :=_dccd [0].GetByteIndex (_agb ,_dffe );for _eee :=0;_eee < _eddc ;_eee ++{_baa :=_eee +_agb ;_eba [_dffe ][_baa ]=0;for _bdgd :=0;_bdgd < _bebf ;_bdgd ++{_acd ,_cafd :=_dccd [_bdgd ].GetByte (_ced );if _cafd !=nil {return nil ,_cafd ;};_caeg :=_acd >>uint (7-_baa &7);_cgdaf :=_caeg &1;_bacg :=1<<uint (_bdgd );_dgac :=int (_cgdaf )*_bacg ;_eba [_dffe ][_baa ]+=_dgac ;};};};};return _eba ,nil ;};func (_gac *GenericRegion )Encode (w _ge .BinaryWriter )(_fd int ,_bcb error ){const _gcfe ="G\u0065n\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069o\u006e\u002e\u0045\u006eco\u0064\u0065";if _gac .Bitmap ==nil {return 0,_be .Error (_gcfe ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};_gcgd ,_bcb :=_gac .RegionSegment .Encode (w );if _bcb !=nil {return 0,_be .Wrap (_bcb ,_gcfe ,"\u0052\u0065\u0067\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074");};_fd +=_gcgd ;if _bcb =w .SkipBits (4);_bcb !=nil {return _fd ,_be .Wrap (_bcb ,_gcfe ,"\u0073k\u0069p\u0020\u0072\u0065\u0073\u0065r\u0076\u0065d\u0020\u0062\u0069\u0074\u0073");};var _gbc int ;if _gac .IsTPGDon {_gbc =1;};if _bcb =w .WriteBit (_gbc );_bcb !=nil {return _fd ,_be .Wrap (_bcb ,_gcfe ,"\u0074\u0070\u0067\u0064\u006f\u006e");};_gbc =0;if _bcb =w .WriteBit (int (_gac .GBTemplate >>1)&0x01);_bcb !=nil {return _fd ,_be .Wrap (_bcb ,_gcfe ,"f\u0069r\u0073\u0074\u0020\u0067\u0062\u0074\u0065\u006dp\u006c\u0061\u0074\u0065 b\u0069\u0074");};if _bcb =w .WriteBit (int (_gac .GBTemplate )&0x01);_bcb !=nil {return _fd ,_be .Wrap (_bcb ,_gcfe ,"s\u0065\u0063\u006f\u006ed \u0067b\u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u0062\u0069\u0074");};if _gac .UseMMR {_gbc =1;};if _bcb =w .WriteBit (_gbc );_bcb !=nil {return _fd ,_be .Wrap (_bcb ,_gcfe ,"u\u0073\u0065\u0020\u004d\u004d\u0052\u0020\u0062\u0069\u0074");};_fd ++;if _gcgd ,_bcb =_gac .writeGBAtPixels (w );_bcb !=nil {return _fd ,_be .Wrap (_bcb ,_gcfe ,"");};_fd +=_gcgd ;_eaa :=_fb .New ();if _bcb =_eaa .EncodeBitmap (_gac .Bitmap ,_gac .IsTPGDon );_bcb !=nil {return _fd ,_be .Wrap (_bcb ,_gcfe ,"");};_eaa .Final ();var _efe int64 ;if _efe ,_bcb =_eaa .WriteTo (w );_bcb !=nil {return _fd ,_be .Wrap (_bcb ,_gcfe ,"");};_fd +=int (_efe );return _fd ,nil ;};func (_feab *SymbolDictionary )readRefinementAtPixels (_fdbd int )error {_feab .SdrATX =make ([]int8 ,_fdbd );_feab .SdrATY =make ([]int8 ,_fdbd );var (_gfed byte ;_ecfa error ;);for _bebe :=0;_bebe < _fdbd ;_bebe ++{_gfed ,_ecfa =_feab ._gabb .ReadByte ();if _ecfa !=nil {return _ecfa ;};_feab .SdrATX [_bebe ]=int8 (_gfed );_gfed ,_ecfa =_feab ._gabb .ReadByte ();if _ecfa !=nil {return _ecfa ;};_feab .SdrATY [_bebe ]=int8 (_gfed );};return nil ;};func (_eae *PageInformationSegment )checkInput ()error {if _eae .PageBMHeight ==_g .MaxInt32 {if !_eae .IsStripe {_bc .Log .Debug ("P\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0053\u0065\u0067me\u006e\u0074\u002e\u0049s\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0073\u0068ou\u006c\u0064 \u0062\u0065\u0020\u0074\u0072\u0075\u0065\u002e");};};return nil ;};func NewGenericRegion (r _ge .StreamReader )*GenericRegion {return &GenericRegion {RegionSegment :NewRegionSegment (r ),_deff :r };};type template0 struct{};func (_gfgcc *PageInformationSegment )readRequiresAuxiliaryBuffer ()error {_becf ,_aged :=_gfgcc ._cgde .ReadBit ();if _aged !=nil {return _aged ;};if _becf ==1{_gfgcc ._bgc =true ;};return nil ;};var _ templater =&template1 {};func (_acb *GenericRegion )getPixel (_ccaae ,_cgeg int )int8 {if _ccaae < 0||_ccaae >=_acb .Bitmap .Width {return 0;};if _cgeg < 0||_cgeg >=_acb .Bitmap .Height {return 0;};if _acb .Bitmap .GetPixel (_ccaae ,_cgeg ){return 1;};return 0;};func (_bff *Header )readSegmentNumber (_aaaa _ge .StreamReader )error {const _edgd ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";_aagd :=make ([]byte ,4);_ ,_cdd :=_aaaa .Read (_aagd );if _cdd !=nil {return _be .Wrap (_cdd ,_edgd ,"");};_bff .SegmentNumber =_a .BigEndian .Uint32 (_aagd );return nil ;};func (_eabg *GenericRegion )Init (h *Header ,r _ge .StreamReader )error {_eabg .RegionSegment =NewRegionSegment (r );_eabg ._deff =r ;return _eabg .parseHeader ();};type RegionSegment struct{_eaagc _ge .StreamReader ;BitmapWidth uint32 ;BitmapHeight uint32 ;XLocation uint32 ;YLocation uint32 ;CombinaionOperator _fc .CombinationOperator ;};func (_dfafc *TextRegion )readHuffmanFlags ()error {var (_addd int ;_gedbg uint64 ;_eggb error ;);_ ,_eggb =_dfafc ._bfd .ReadBit ();if _eggb !=nil {return _eggb ;};_addd ,_eggb =_dfafc ._bfd .ReadBit ();if _eggb !=nil {return _eggb ;};_dfafc .SbHuffRSize =int8 (_addd );_gedbg ,_eggb =_dfafc ._bfd .ReadBits (2);if _eggb !=nil {return _eggb ;};_dfafc .SbHuffRDY =int8 (_gedbg )&0xf;_gedbg ,_eggb =_dfafc ._bfd .ReadBits (2);if _eggb !=nil {return _eggb ;};_dfafc .SbHuffRDX =int8 (_gedbg )&0xf;_gedbg ,_eggb =_dfafc ._bfd .ReadBits (2);if _eggb !=nil {return _eggb ;};_dfafc .SbHuffRDHeight =int8 (_gedbg )&0xf;_gedbg ,_eggb =_dfafc ._bfd .ReadBits (2);if _eggb !=nil {return _eggb ;};_dfafc .SbHuffRDWidth =int8 (_gedbg )&0xf;_gedbg ,_eggb =_dfafc ._bfd .ReadBits (2);if _eggb !=nil {return _eggb ;};_dfafc .SbHuffDT =int8 (_gedbg )&0xf;_gedbg ,_eggb =_dfafc ._bfd .ReadBits (2);if _eggb !=nil {return _eggb ;};_dfafc .SbHuffDS =int8 (_gedbg )&0xf;_gedbg ,_eggb =_dfafc ._bfd .ReadBits (2);if _eggb !=nil {return _eggb ;};_dfafc .SbHuffFS =int8 (_gedbg )&0xf;return nil ;};func (_baed *PatternDictionary )extractPatterns (_fbac *_fc .Bitmap )error {var _ggdb int ;_cgfc :=make ([]*_fc .Bitmap ,_baed .GrayMax +1);for _ggdb <=int (_baed .GrayMax ){_gdce :=int (_baed .HdpWidth )*_ggdb ;_acaa :=_c .Rect (_gdce ,0,_gdce +int (_baed .HdpWidth ),int (_baed .HdpHeight ));_dbef ,_ccdgg :=_fc .Extract (_acaa ,_fbac );if _ccdgg !=nil {return _ccdgg ;};_cgfc [_ggdb ]=_dbef ;_ggdb ++;};_baed .Patterns =_cgfc ;return nil ;};func (_dcc *GenericRefinementRegion )decodeSLTP ()(int ,error ){_dcc .Template .setIndex (_dcc ._bga );return _dcc ._ffe .DecodeBit (_dcc ._bga );};func (_aabag *RegionSegment )readCombinationOperator ()error {_gbbe ,_fgfg :=_aabag ._eaagc .ReadBits (3);if _fgfg !=nil {return _fgfg ;};_aabag .CombinaionOperator =_fc .CombinationOperator (_gbbe &0xF);return nil ;};func (_ddgb *TextRegion )Init (header *Header ,r _ge .StreamReader )error {_ddgb .Header =header ;_ddgb ._bfd =r ;_ddgb .RegionInfo =NewRegionSegment (_ddgb ._bfd );return _ddgb .parseHeader ();};func (_ggf *SymbolDictionary )encodeNumSyms (_afb _ge .BinaryWriter )(_bgbc int ,_fgba error ){const _dabe ="\u0065\u006e\u0063\u006f\u0064\u0065\u004e\u0075\u006d\u0053\u0079\u006d\u0073";_egag :=make ([]byte ,4);_a .BigEndian .PutUint32 (_egag ,_ggf .NumberOfExportedSymbols );if _bgbc ,_fgba =_afb .Write (_egag );_fgba !=nil {return _bgbc ,_be .Wrap (_fgba ,_dabe ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};_a .BigEndian .PutUint32 (_egag ,_ggf .NumberOfNewSymbols );_gefb ,_fgba :=_afb .Write (_egag );if _fgba !=nil {return _bgbc ,_be .Wrap (_fgba ,_dabe ,"n\u0065\u0077\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};return _bgbc +_gefb ,nil ;};type GenericRegion struct{_deff _ge .StreamReader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;UseExtTemplates bool ;IsTPGDon bool ;GBTemplate byte ;IsMMREncoded bool ;UseMMR bool ;GBAtX []int8 ;GBAtY []int8 ;GBAtOverride []bool ;_abd bool ;Bitmap *_fc .Bitmap ;_deb *_ce .Decoder ;_ccda *_ce .DecoderStats ;_cccc *_gd .Decoder ;};func (_babb *template0 )setIndex (_defb *_ce .DecoderStats ){_defb .SetIndex (0x100)};func (_dbfc *Header )readHeaderLength (_ddd _ge .StreamReader ,_ecg int64 ){_dbfc .HeaderLength =_ddd .StreamPosition ()-_ecg ;};func (_adag *TextRegion )decodeRdy ()(int64 ,error ){const _agf ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064y";if _adag .IsHuffmanEncoded {if _adag .SbHuffRDY ==3{if _adag ._bcd ==nil {var (_fdae int ;_cddd error ;);if _adag .SbHuffFS ==3{_fdae ++;};if _adag .SbHuffDS ==3{_fdae ++;};if _adag .SbHuffDT ==3{_fdae ++;};if _adag .SbHuffRDWidth ==3{_fdae ++;};if _adag .SbHuffRDHeight ==3{_fdae ++;};if _adag .SbHuffRDX ==3{_fdae ++;};_adag ._bcd ,_cddd =_adag .getUserTable (_fdae );if _cddd !=nil {return 0,_be .Wrap (_cddd ,_agf ,"");};};return _adag ._bcd .Decode (_adag ._bfd );};_ded ,_bdbee :=_db .GetStandardTable (14+int (_adag .SbHuffRDY ));if _bdbee !=nil {return 0,_bdbee ;};return _ded .Decode (_adag ._bfd );};_fdba ,_fgdd :=_adag ._cfdbc .DecodeInt (_adag ._gefc );if _fgdd !=nil {return 0,_be .Wrap (_fgdd ,_agf ,"");};return int64 (_fdba ),nil ;};func (_fbaec *SymbolDictionary )decodeHeightClassDeltaHeightWithHuffman ()(int64 ,error ){switch _fbaec .SdHuffDecodeHeightSelection {case 0:_bcge ,_dfgg :=_db .GetStandardTable (4);if _dfgg !=nil {return 0,_dfgg ;};return _bcge .Decode (_fbaec ._gabb );case 1:_gagf ,_dfbf :=_db .GetStandardTable (5);if _dfbf !=nil {return 0,_dfbf ;};return _gagf .Decode (_fbaec ._gabb );case 3:if _fbaec ._bfcgc ==nil {_bgg ,_eebfe :=_db .GetStandardTable (0);if _eebfe !=nil {return 0,_eebfe ;};_fbaec ._bfcgc =_bgg ;};return _fbaec ._bfcgc .Decode (_fbaec ._gabb );};return 0,nil ;};type OrganizationType uint8 ;type Segmenter interface{Init (_baab *Header ,_cgfa _ge .StreamReader )error ;};func (_ffede *SymbolDictionary )setExportedSymbols (_abfg []int ){for _fdfab :=uint32 (0);_fdfab < _ffede ._fea +_ffede .NumberOfNewSymbols ;_fdfab ++{if _abfg [_fdfab ]==1{var _fddb *_fc .Bitmap ;if _fdfab < _ffede ._fea {_fddb =_ffede ._gdcd [_fdfab ];}else {_fddb =_ffede ._fegg [_fdfab -_ffede ._fea ];};_bc .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u002d\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u0020\u0041\u0064\u0064 E\u0078\u0070\u006fr\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027%\u0073\u0027",_fddb );_ffede ._cdeg =append (_ffede ._cdeg ,_fddb );};};};func (_aegg *TextRegion )setCodingStatistics ()error {if _aegg ._dfcc ==nil {_aegg ._dfcc =_ce .NewStats (512,1);};if _aegg ._acgf ==nil {_aegg ._acgf =_ce .NewStats (512,1);};if _aegg ._afbc ==nil {_aegg ._afbc =_ce .NewStats (512,1);};if _aegg ._cbeb ==nil {_aegg ._cbeb =_ce .NewStats (512,1);};if _aegg ._abdc ==nil {_aegg ._abdc =_ce .NewStats (512,1);};if _aegg ._fbdce ==nil {_aegg ._fbdce =_ce .NewStats (512,1);};if _aegg ._dgdaa ==nil {_aegg ._dgdaa =_ce .NewStats (512,1);};if _aegg ._gdege ==nil {_aegg ._gdege =_ce .NewStats (1<<uint (_aegg ._eeaf ),1);};if _aegg ._fca ==nil {_aegg ._fca =_ce .NewStats (512,1);};if _aegg ._gefc ==nil {_aegg ._gefc =_ce .NewStats (512,1);};if _aegg ._cfdbc ==nil {var _cad error ;_aegg ._cfdbc ,_cad =_ce .New (_aegg ._bfd );if _cad !=nil {return _cad ;};};return nil ;};func (_accab *Header )String ()string {_adada :=&_e .Builder {};_adada .WriteString ("\u000a[\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045A\u0044\u0045\u0052\u005d\u000a");_adada .WriteString (_f .Sprintf ("\t\u002d\u0020\u0053\u0065gm\u0065n\u0074\u004e\u0075\u006d\u0062e\u0072\u003a\u0020\u0025\u0076\u000a",_accab .SegmentNumber ));_adada .WriteString (_f .Sprintf ("\u0009\u002d\u0020T\u0079\u0070\u0065\u003a\u0020\u0025\u0076\u000a",_accab .Type ));_adada .WriteString (_f .Sprintf ("\u0009-\u0020R\u0065\u0074\u0061\u0069\u006eF\u006c\u0061g\u003a\u0020\u0025\u0076\u000a",_accab .RetainFlag ));_adada .WriteString (_f .Sprintf ("\u0009\u002d\u0020Pa\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_accab .PageAssociation ));_adada .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0050\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074i\u006fn\u0046\u0069\u0065\u006c\u0064\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_accab .PageAssociationFieldSize ));_adada .WriteString ("\u0009-\u0020R\u0054\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u0053\u003a\u000a");for _ ,_ggec :=range _accab .RTSNumbers {_adada .WriteString (_f .Sprintf ("\u0009\t\u002d\u0020\u0025\u0064\u000a",_ggec ));};_adada .WriteString (_f .Sprintf ("\t\u002d \u0048\u0065\u0061\u0064\u0065\u0072\u004c\u0065n\u0067\u0074\u0068\u003a %\u0076\u000a",_accab .HeaderLength ));_adada .WriteString (_f .Sprintf ("\u0009-\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061L\u0065n\u0067\u0074\u0068\u003a\u0020\u0025\u0076\n",_accab .SegmentDataLength ));_adada .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074D\u0061\u0074\u0061\u0053\u0074\u0061\u0072t\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0076\u000a",_accab .SegmentDataStartOffset ));return _adada .String ();};func (_edc *GenericRefinementRegion )readAtPixels ()error {_edc .GrAtX =make ([]int8 ,2);_edc .GrAtY =make ([]int8 ,2);_ffbd ,_agc :=_edc ._fcb .ReadByte ();if _agc !=nil {return _agc ;};_edc .GrAtX [0]=int8 (_ffbd );_ffbd ,_agc =_edc ._fcb .ReadByte ();if _agc !=nil {return _agc ;};_edc .GrAtY [0]=int8 (_ffbd );_ffbd ,_agc =_edc ._fcb .ReadByte ();if _agc !=nil {return _agc ;};_edc .GrAtX [1]=int8 (_ffbd );_ffbd ,_agc =_edc ._fcb .ReadByte ();if _agc !=nil {return _agc ;};_edc .GrAtY [1]=int8 (_ffbd );return nil ;};func (_fadf *GenericRegion )overrideAtTemplate1 (_gebe ,_cab ,_gbba ,_effb ,_dbfe int )int {_gebe &=0x1FF7;if _fadf .GBAtY [0]==0&&_fadf .GBAtX [0]>=-int8 (_dbfe ){_gebe |=(_effb >>uint (7-(int8 (_dbfe )+_fadf .GBAtX [0]))&0x1)<<3;}else {_gebe |=int (_fadf .getPixel (_cab +int (_fadf .GBAtX [0]),_gbba +int (_fadf .GBAtY [0])))<<3;};return _gebe ;};func (_gaaf *SymbolDictionary )encodeRefinementATFlags (_gccd _ge .BinaryWriter )(_aggg int ,_gadg error ){const _ccdggf ="\u0065\u006e\u0063od\u0065\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0041\u0054\u0046\u006c\u0061\u0067\u0073";if !_gaaf .UseRefinementAggregation ||_gaaf .SdrTemplate !=0{return 0,nil ;};for _dabga :=0;_dabga < 2;_dabga ++{if _gadg =_gccd .WriteByte (byte (_gaaf .SdrATX [_dabga ]));_gadg !=nil {return _aggg ,_be .Wrapf (_gadg ,_ccdggf ,"\u0053\u0064\u0072\u0041\u0054\u0058\u005b\u0025\u0064\u005d",_dabga );};_aggg ++;if _gadg =_gccd .WriteByte (byte (_gaaf .SdrATY [_dabga ]));_gadg !=nil {return _aggg ,_be .Wrapf (_gadg ,_ccdggf ,"\u0053\u0064\u0072\u0041\u0054\u0059\u005b\u0025\u0064\u005d",_dabga );};_aggg ++;};return _aggg ,nil ;};func (_dceb *HalftoneRegion )GetRegionInfo ()*RegionSegment {return _dceb .RegionSegment };func (_cfdg *TableSegment )HtOOB ()int32 {return _cfdg ._cga };func (_gedb *RegionSegment )Encode (w _ge .BinaryWriter )(_acff int ,_gdaa error ){const _dgde ="R\u0065g\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065n\u0074\u002e\u0045\u006eco\u0064\u0065";_gdabd :=make ([]byte ,4);_a .BigEndian .PutUint32 (_gdabd ,_gedb .BitmapWidth );_acff ,_gdaa =w .Write (_gdabd );if _gdaa !=nil {return 0,_be .Wrap (_gdaa ,_dgde ,"\u0057\u0069\u0064t\u0068");};_a .BigEndian .PutUint32 (_gdabd ,_gedb .BitmapHeight );var _gcbd int ;_gcbd ,_gdaa =w .Write (_gdabd );if _gdaa !=nil {return 0,_be .Wrap (_gdaa ,_dgde ,"\u0048\u0065\u0069\u0067\u0068\u0074");};_acff +=_gcbd ;_a .BigEndian .PutUint32 (_gdabd ,_gedb .XLocation );_gcbd ,_gdaa =w .Write (_gdabd );if _gdaa !=nil {return 0,_be .Wrap (_gdaa ,_dgde ,"\u0058L\u006f\u0063\u0061\u0074\u0069\u006fn");};_acff +=_gcbd ;_a .BigEndian .PutUint32 (_gdabd ,_gedb .YLocation );_gcbd ,_gdaa =w .Write (_gdabd );if _gdaa !=nil {return 0,_be .Wrap (_gdaa ,_dgde ,"\u0059L\u006f\u0063\u0061\u0074\u0069\u006fn");};_acff +=_gcbd ;if _gdaa =w .WriteByte (byte (_gedb .CombinaionOperator )&0x07);_gdaa !=nil {return 0,_be .Wrap (_gdaa ,_dgde ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};_acff ++;return _acff ,nil ;};func (_aecag *Header )writeFlags (_efb _ge .BinaryWriter )(_faed error ){const _aece ="\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065F\u006c\u0061\u0067\u0073";_fadd :=byte (_aecag .Type );if _faed =_efb .WriteByte (_fadd );_faed !=nil {return _be .Wrap (_faed ,_aece ,"\u0077\u0072\u0069ti\u006e\u0067\u0020\u0073\u0065\u0067\u006d\u0065\u006et\u0020t\u0079p\u0065 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064");};if !_aecag .RetainFlag &&!_aecag .PageAssociationFieldSize {return nil ;};if _faed =_efb .SkipBits (-8);_faed !=nil {return _be .Wrap (_faed ,_aece ,"\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0062\u0061\u0063\u006b\u0020\u0074\u0068\u0065\u0020\u0062\u0069\u0074\u0073\u0020\u0066\u0061il\u0065\u0064");};var _faec int ;if _aecag .RetainFlag {_faec =1;};if _faed =_efb .WriteBit (_faec );_faed !=nil {return _be .Wrap (_faed ,_aece ,"\u0072\u0065\u0074\u0061in\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067\u0073");};_faec =0;if _aecag .PageAssociationFieldSize {_faec =1;};if _faed =_efb .WriteBit (_faec );_faed !=nil {return _be .Wrap (_faed ,_aece ,"p\u0061\u0067\u0065\u0020as\u0073o\u0063\u0069\u0061\u0074\u0069o\u006e\u0020\u0066\u006c\u0061\u0067");};_efb .FinishByte ();return nil ;};func (_bfbge *SymbolDictionary )readRegionFlags ()error {var (_ebff uint64 ;_dfgf int ;);_ ,_efg :=_bfbge ._gabb .ReadBits (3);if _efg !=nil {return _efg ;};_dfgf ,_efg =_bfbge ._gabb .ReadBit ();if _efg !=nil {return _efg ;};_bfbge .SdrTemplate =int8 (_dfgf );_ebff ,_efg =_bfbge ._gabb .ReadBits (2);if _efg !=nil {return _efg ;};_bfbge .SdTemplate =int8 (_ebff &0xf);_dfgf ,_efg =_bfbge ._gabb .ReadBit ();if _efg !=nil {return _efg ;};if _dfgf ==1{_bfbge ._cbbb =true ;};_dfgf ,_efg =_bfbge ._gabb .ReadBit ();if _efg !=nil {return _efg ;};if _dfgf ==1{_bfbge ._ffee =true ;};_dfgf ,_efg =_bfbge ._gabb .ReadBit ();if _efg !=nil {return _efg ;};if _dfgf ==1{_bfbge .SdHuffAggInstanceSelection =true ;};_dfgf ,_efg =_bfbge ._gabb .ReadBit ();if _efg !=nil {return _efg ;};_bfbge .SdHuffBMSizeSelection =int8 (_dfgf );_ebff ,_efg =_bfbge ._gabb .ReadBits (2);if _efg !=nil {return _efg ;};_bfbge .SdHuffDecodeWidthSelection =int8 (_ebff &0xf);_ebff ,_efg =_bfbge ._gabb .ReadBits (2);if _efg !=nil {return _efg ;};_bfbge .SdHuffDecodeHeightSelection =int8 (_ebff &0xf);_dfgf ,_efg =_bfbge ._gabb .ReadBit ();if _efg !=nil {return _efg ;};if _dfgf ==1{_bfbge .UseRefinementAggregation =true ;};_dfgf ,_efg =_bfbge ._gabb .ReadBit ();if _efg !=nil {return _efg ;};if _dfgf ==1{_bfbge .IsHuffmanEncoded =true ;};return nil ;};func (_gcdd *HalftoneRegion )computeX (_bde ,_adbe int )int {return _gcdd .shiftAndFill (int (_gcdd .HGridX )+_bde *int (_gcdd .HRegionY )+_adbe *int (_gcdd .HRegionX ));};type template1 struct{};func (_cege *HalftoneRegion )computeSegmentDataStructure ()error {_cege .DataOffset =_cege ._cbf .StreamPosition ();_cege .DataHeaderLength =_cege .DataOffset -_cege .DataHeaderOffset ;_cege .DataLength =int64 (_cege ._cbf .Length ())-_cege .DataHeaderLength ;return nil ;};func (_fabge *SymbolDictionary )decodeDirectlyThroughGenericRegion (_fgad ,_bdac uint32 )error {if _fabge ._fda ==nil {_fabge ._fda =NewGenericRegion (_fabge ._gabb );};_fabge ._fda .setParametersWithAt (false ,byte (_fabge .SdTemplate ),false ,false ,_fabge .SdATX ,_fabge .SdATY ,_fgad ,_bdac ,_fabge ._ffddf ,_fabge ._aafa );return _fabge .addSymbol (_fabge ._fda );};func (_ffdd *Header )writeReferredToCount (_abceg _ge .BinaryWriter )(_agge int ,_dfded error ){const _daf ="w\u0072i\u0074\u0065\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0043ou\u006e\u0074";_ffdd .RTSNumbers =make ([]int ,len (_ffdd .RTSegments ));for _adae ,_fdb :=range _ffdd .RTSegments {_ffdd .RTSNumbers [_adae ]=int (_fdb .SegmentNumber );};if len (_ffdd .RTSNumbers )<=4{var _aef byte ;if len (_ffdd .RetainBits )>=1{_aef =byte (_ffdd .RetainBits [0]);};_aef |=byte (len (_ffdd .RTSNumbers ))<<5;if _dfded =_abceg .WriteByte (_aef );_dfded !=nil {return 0,_be .Wrap (_dfded ,_daf ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return 1,nil ;};_cfb :=uint32 (len (_ffdd .RTSNumbers ));_dfaf :=make ([]byte ,4+_dc .Ceil (len (_ffdd .RTSNumbers )+1,8));_cfb |=0x7<<29;_a .BigEndian .PutUint32 (_dfaf ,_cfb );copy (_dfaf [1:],_ffdd .RetainBits );_agge ,_dfded =_abceg .Write (_dfaf );if _dfded !=nil {return 0,_be .Wrap (_dfded ,_daf ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return _agge ,nil ;};func (_gcde *GenericRegion )GetRegionBitmap ()(_dagb *_fc .Bitmap ,_fab error ){if _gcde .Bitmap !=nil {return _gcde .Bitmap ,nil ;};if _gcde .IsMMREncoded {if _gcde ._cccc ==nil {_gcde ._cccc ,_fab =_gd .New (_gcde ._deff ,int (_gcde .RegionSegment .BitmapWidth ),int (_gcde .RegionSegment .BitmapHeight ),_gcde .DataOffset ,_gcde .DataLength );if _fab !=nil {return nil ,_fab ;};};_gcde .Bitmap ,_fab =_gcde ._cccc .UncompressMMR ();return _gcde .Bitmap ,_fab ;};if _fab =_gcde .updateOverrideFlags ();_fab !=nil {return nil ,_fab ;};var _ffd int ;if _gcde ._deb ==nil {_gcde ._deb ,_fab =_ce .New (_gcde ._deff );if _fab !=nil {return nil ,_fab ;};};if _gcde ._ccda ==nil {_gcde ._ccda =_ce .NewStats (65536,1);};_gcde .Bitmap =_fc .New (int (_gcde .RegionSegment .BitmapWidth ),int (_gcde .RegionSegment .BitmapHeight ));_fcff :=int (uint32 (_gcde .Bitmap .Width +7)&(^uint32 (7)));for _aff :=0;_aff < _gcde .Bitmap .Height ;_aff ++{if _gcde .IsTPGDon {var _gggg int ;_gggg ,_fab =_gcde .decodeSLTP ();if _fab !=nil {return nil ,_fab ;};_ffd ^=_gggg ;};if _ffd ==1{if _aff > 0{if _fab =_gcde .copyLineAbove (_aff );_fab !=nil {return nil ,_fab ;};};}else {if _fab =_gcde .decodeLine (_aff ,_gcde .Bitmap .Width ,_fcff );_fab !=nil {return nil ,_fab ;};};};return _gcde .Bitmap ,nil ;};func (_cbc *PageInformationSegment )parseHeader ()(_bbde error ){_bc .Log .Trace ("\u005b\u0050\u0061\u0067\u0065I\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067m\u0065\u006e\u0074\u005d\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u002e\u002e");defer func (){var _dbfcf ="[\u0050\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072m\u0061\u0074\u0069\u006f\u006e\u0053\u0065gm\u0065\u006e\u0074\u005d \u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065ad\u0065\u0072 \u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064";if _bbde !=nil {_dbfcf +="\u0020\u0077\u0069t\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u0020"+_bbde .Error ();}else {_dbfcf +="\u0020\u0073\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079";};_bc .Log .Trace (_dbfcf );}();if _bbde =_cbc .readWidthAndHeight ();_bbde !=nil {return _bbde ;};if _bbde =_cbc .readResolution ();_bbde !=nil {return _bbde ;};_ ,_bbde =_cbc ._cgde .ReadBit ();if _bbde !=nil {return _bbde ;};if _bbde =_cbc .readCombinationOperatorOverrideAllowed ();_bbde !=nil {return _bbde ;};if _bbde =_cbc .readRequiresAuxiliaryBuffer ();_bbde !=nil {return _bbde ;};if _bbde =_cbc .readCombinationOperator ();_bbde !=nil {return _bbde ;};if _bbde =_cbc .readDefaultPixelValue ();_bbde !=nil {return _bbde ;};if _bbde =_cbc .readContainsRefinement ();_bbde !=nil {return _bbde ;};if _bbde =_cbc .readIsLossless ();_bbde !=nil {return _bbde ;};if _bbde =_cbc .readIsStriped ();_bbde !=nil {return _bbde ;};if _bbde =_cbc .readMaxStripeSize ();_bbde !=nil {return _bbde ;};if _bbde =_cbc .checkInput ();_bbde !=nil {return _bbde ;};_bc .Log .Trace ("\u0025\u0073",_cbc );return nil ;};func (_gedg *GenericRegion )overrideAtTemplate0b (_aaaf ,_dbee ,_cfdd ,_cgff ,_acg ,_abf int )int {if _gedg .GBAtOverride [0]{_aaaf &=0xFFFD;if _gedg .GBAtY [0]==0&&_gedg .GBAtX [0]>=-int8 (_acg ){_aaaf |=(_cgff >>uint (int8 (_abf )-_gedg .GBAtX [0]&0x1))<<1;}else {_aaaf |=int (_gedg .getPixel (_dbee +int (_gedg .GBAtX [0]),_cfdd +int (_gedg .GBAtY [0])))<<1;};};if _gedg .GBAtOverride [1]{_aaaf &=0xDFFF;if _gedg .GBAtY [1]==0&&_gedg .GBAtX [1]>=-int8 (_acg ){_aaaf |=(_cgff >>uint (int8 (_abf )-_gedg .GBAtX [1]&0x1))<<13;}else {_aaaf |=int (_gedg .getPixel (_dbee +int (_gedg .GBAtX [1]),_cfdd +int (_gedg .GBAtY [1])))<<13;};};if _gedg .GBAtOverride [2]{_aaaf &=0xFDFF;if _gedg .GBAtY [2]==0&&_gedg .GBAtX [2]>=-int8 (_acg ){_aaaf |=(_cgff >>uint (int8 (_abf )-_gedg .GBAtX [2]&0x1))<<9;}else {_aaaf |=int (_gedg .getPixel (_dbee +int (_gedg .GBAtX [2]),_cfdd +int (_gedg .GBAtY [2])))<<9;};};if _gedg .GBAtOverride [3]{_aaaf &=0xBFFF;if _gedg .GBAtY [3]==0&&_gedg .GBAtX [3]>=-int8 (_acg ){_aaaf |=(_cgff >>uint (int8 (_abf )-_gedg .GBAtX [3]&0x1))<<14;}else {_aaaf |=int (_gedg .getPixel (_dbee +int (_gedg .GBAtX [3]),_cfdd +int (_gedg .GBAtY [3])))<<14;};};if _gedg .GBAtOverride [4]{_aaaf &=0xEFFF;if _gedg .GBAtY [4]==0&&_gedg .GBAtX [4]>=-int8 (_acg ){_aaaf |=(_cgff >>uint (int8 (_abf )-_gedg .GBAtX [4]&0x1))<<12;}else {_aaaf |=int (_gedg .getPixel (_dbee +int (_gedg .GBAtX [4]),_cfdd +int (_gedg .GBAtY [4])))<<12;};};if _gedg .GBAtOverride [5]{_aaaf &=0xFFDF;if _gedg .GBAtY [5]==0&&_gedg .GBAtX [5]>=-int8 (_acg ){_aaaf |=(_cgff >>uint (int8 (_abf )-_gedg .GBAtX [5]&0x1))<<5;}else {_aaaf |=int (_gedg .getPixel (_dbee +int (_gedg .GBAtX [5]),_cfdd +int (_gedg .GBAtY [5])))<<5;};};if _gedg .GBAtOverride [6]{_aaaf &=0xFFFB;if _gedg .GBAtY [6]==0&&_gedg .GBAtX [6]>=-int8 (_acg ){_aaaf |=(_cgff >>uint (int8 (_abf )-_gedg .GBAtX [6]&0x1))<<2;}else {_aaaf |=int (_gedg .getPixel (_dbee +int (_gedg .GBAtX [6]),_cfdd +int (_gedg .GBAtY [6])))<<2;};};if _gedg .GBAtOverride [7]{_aaaf &=0xFFF7;if _gedg .GBAtY [7]==0&&_gedg .GBAtX [7]>=-int8 (_acg ){_aaaf |=(_cgff >>uint (int8 (_abf )-_gedg .GBAtX [7]&0x1))<<3;}else {_aaaf |=int (_gedg .getPixel (_dbee +int (_gedg .GBAtX [7]),_cfdd +int (_gedg .GBAtY [7])))<<3;};};if _gedg .GBAtOverride [8]{_aaaf &=0xF7FF;if _gedg .GBAtY [8]==0&&_gedg .GBAtX [8]>=-int8 (_acg ){_aaaf |=(_cgff >>uint (int8 (_abf )-_gedg .GBAtX [8]&0x1))<<11;}else {_aaaf |=int (_gedg .getPixel (_dbee +int (_gedg .GBAtX [8]),_cfdd +int (_gedg .GBAtY [8])))<<11;};};if _gedg .GBAtOverride [9]{_aaaf &=0xFFEF;if _gedg .GBAtY [9]==0&&_gedg .GBAtX [9]>=-int8 (_acg ){_aaaf |=(_cgff >>uint (int8 (_abf )-_gedg .GBAtX [9]&0x1))<<4;}else {_aaaf |=int (_gedg .getPixel (_dbee +int (_gedg .GBAtX [9]),_cfdd +int (_gedg .GBAtY [9])))<<4;};};if _gedg .GBAtOverride [10]{_aaaf &=0x7FFF;if _gedg .GBAtY [10]==0&&_gedg .GBAtX [10]>=-int8 (_acg ){_aaaf |=(_cgff >>uint (int8 (_abf )-_gedg .GBAtX [10]&0x1))<<15;}else {_aaaf |=int (_gedg .getPixel (_dbee +int (_gedg .GBAtX [10]),_cfdd +int (_gedg .GBAtY [10])))<<15;};};if _gedg .GBAtOverride [11]{_aaaf &=0xFDFF;if _gedg .GBAtY [11]==0&&_gedg .GBAtX [11]>=-int8 (_acg ){_aaaf |=(_cgff >>uint (int8 (_abf )-_gedg .GBAtX [11]&0x1))<<10;}else {_aaaf |=int (_gedg .getPixel (_dbee +int (_gedg .GBAtX [11]),_cfdd +int (_gedg .GBAtY [11])))<<10;};};return _aaaf ;};func (_cfbg *SymbolDictionary )decodeDifferenceWidth ()(int64 ,error ){if _cfbg .IsHuffmanEncoded {switch _cfbg .SdHuffDecodeWidthSelection {case 0:_ffgg ,_gcbe :=_db .GetStandardTable (2);if _gcbe !=nil {return 0,_gcbe ;};return _ffgg .Decode (_cfbg ._gabb );case 1:_bcee ,_feb :=_db .GetStandardTable (3);if _feb !=nil {return 0,_feb ;};return _bcee .Decode (_cfbg ._gabb );case 3:if _cfbg ._deffg ==nil {var _ddgge int ;if _cfbg .SdHuffDecodeHeightSelection ==3{_ddgge ++;};_bcfg ,_bfeb :=_cfbg .getUserTable (_ddgge );if _bfeb !=nil {return 0,_bfeb ;};_cfbg ._deffg =_bcfg ;};return _cfbg ._deffg .Decode (_cfbg ._gabb );};}else {_cffg ,_cffce :=_cfbg ._aafa .DecodeInt (_cfbg ._edde );if _cffce !=nil {return 0,_cffce ;};if _cffg ==_g .MaxInt32 {return int64 (_g .MaxInt64 ),nil ;};return int64 (_cffg ),nil ;};return 0,nil ;};func (_fbcc *TextRegion )decodeDfs ()(int64 ,error ){if _fbcc .IsHuffmanEncoded {if _fbcc .SbHuffFS ==3{if _fbcc ._edag ==nil {var _bbeg error ;_fbcc ._edag ,_bbeg =_fbcc .getUserTable (0);if _bbeg !=nil {return 0,_bbeg ;};};return _fbcc ._edag .Decode (_fbcc ._bfd );};_bcdb ,_gage :=_db .GetStandardTable (6+int (_fbcc .SbHuffFS ));if _gage !=nil {return 0,_gage ;};return _bcdb .Decode (_fbcc ._bfd );};_abcfcb ,_dcbf :=_fbcc ._cfdbc .DecodeInt (_fbcc ._acgf );if _dcbf !=nil {return 0,_dcbf ;};return int64 (_abcfcb ),nil ;};type Regioner interface{GetRegionBitmap ()(*_fc .Bitmap ,error );GetRegionInfo ()*RegionSegment ;};func (_daafc *TextRegion )readAmountOfSymbolInstances ()error {_ffgf ,_dbec :=_daafc ._bfd .ReadBits (32);if _dbec !=nil {return _dbec ;};_daafc .NumberOfSymbolInstances =uint32 (_ffgf &_g .MaxUint32 );_dada :=_daafc .RegionInfo .BitmapWidth *_daafc .RegionInfo .BitmapHeight ;if _dada < _daafc .NumberOfSymbolInstances {_bc .Log .Debug ("\u004c\u0069\u006d\u0069t\u0069\u006e\u0067\u0020t\u0068\u0065\u0020n\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020d\u0065\u0063\u006f\u0064e\u0064\u0020\u0073\u0079m\u0062\u006f\u006c\u0020\u0069n\u0073\u0074\u0061\u006e\u0063\u0065\u0073 \u0074\u006f\u0020\u006f\u006ee\u0020\u0070\u0065\u0072\u0020\u0070\u0069\u0078\u0065l\u0020\u0028\u0020\u0025\u0064\u0020\u0069\u006e\u0073\u0074\u0065\u0061\u0064\u0020\u006f\u0066\u0020\u0025\u0064\u0029",_dada ,_daafc .NumberOfSymbolInstances );_daafc .NumberOfSymbolInstances =_dada ;};return nil ;};func (_fcga *TextRegion )encodeSymbols (_bdcce _ge .BinaryWriter )(_efee int ,_bcfb error ){const _dgbg ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";_faccb :=make ([]byte ,4);_a .BigEndian .PutUint32 (_faccb ,_fcga .NumberOfSymbols );if _efee ,_bcfb =_bdcce .Write (_faccb );_bcfb !=nil {return _efee ,_be .Wrap (_bcfb ,_dgbg ,"\u004e\u0075\u006dbe\u0072\u004f\u0066\u0053\u0079\u006d\u0062\u006f\u006c\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073");};_gdcga ,_bcfb :=_fc .NewClassedPoints (_fcga ._eaca ,_dc .IntSlice (_fcga ._abaf ));if _bcfb !=nil {return 0,_be .Wrap (_bcfb ,_dgbg ,"");};var _aaeg ,_bdba int ;_ggfcf :=_fb .New ();_ggfcf .Init ();if _bcfb =_ggfcf .EncodeInteger (_fb .IADT ,0);_bcfb !=nil {return _efee ,_be .Wrap (_bcfb ,_dgbg ,"\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0020\u0044\u0054");};_gggef ,_bcfb :=_gdcga .GroupByY ();if _bcfb !=nil {return 0,_be .Wrap (_bcfb ,_dgbg ,"");};for _ ,_fbge :=range _gggef {_dcbg :=int (_fbge .YAtIndex (0));_cfcc :=_dcbg -_aaeg ;if _bcfb =_ggfcf .EncodeInteger (_fb .IADT ,_cfcc );_bcfb !=nil {return _efee ,_be .Wrap (_bcfb ,_dgbg ,"");};var _gbcda int ;for _ccbd ,_cbcf :=range _fbge .IntSlice {switch _ccbd {case 0:_bbgb :=int (_fbge .XAtIndex (_ccbd ))-_bdba ;if _bcfb =_ggfcf .EncodeInteger (_fb .IAFS ,_bbgb );_bcfb !=nil {return _efee ,_be .Wrap (_bcfb ,_dgbg ,"");};_bdba +=_bbgb ;_gbcda =_bdba ;default:_aecae :=int (_fbge .XAtIndex (_ccbd ))-_gbcda ;if _bcfb =_ggfcf .EncodeInteger (_fb .IADS ,_aecae );_bcfb !=nil {return _efee ,_be .Wrap (_bcfb ,_dgbg ,"");};_gbcda +=_aecae ;};_gbea ,_ace :=_fcga ._ebecd .Get (_cbcf );if _ace !=nil {return _efee ,_be .Wrap (_ace ,_dgbg ,"");};_bebeb ,_fbec :=_fcga ._bgbcd [_gbea ];if !_fbec {_bebeb ,_fbec =_fcga ._aecb [_gbea ];if !_fbec {return _efee ,_be .Errorf (_dgbg ,"\u0053\u0079\u006d\u006f\u0062\u006c:\u0020\u0027\u0025d\u0027\u0020\u0069s\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064 \u0069\u006e\u0020\u0067\u006cob\u0061\u006c\u0020\u0061\u006e\u0064\u0020\u006c\u006f\u0063\u0061\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020\u006d\u0061\u0070",_gbea );};};if _ace =_ggfcf .EncodeIAID (_fcga ._begd ,_bebeb );_ace !=nil {return _efee ,_be .Wrap (_ace ,_dgbg ,"");};};if _bcfb =_ggfcf .EncodeOOB (_fb .IADS );_bcfb !=nil {return _efee ,_be .Wrap (_bcfb ,_dgbg ,"");};};_ggfcf .Final ();_cgdg ,_bcfb :=_ggfcf .WriteTo (_bdcce );if _bcfb !=nil {return _efee ,_be .Wrap (_bcfb ,_dgbg ,"");};_efee +=int (_cgdg );return _efee ,nil ;};func (_bba *PatternDictionary )parseHeader ()error {_bc .Log .Trace ("\u005b\u0050\u0041\u0054\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054I\u004f\u004e\u0041\u0052\u0059\u005d[\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d\u0020b\u0065\u0067\u0069\u006e");defer func (){_bc .Log .Trace ("\u005b\u0050\u0041T\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u005b\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");}();_ ,_dfdae :=_bba ._ebfgb .ReadBits (5);if _dfdae !=nil {return _dfdae ;};if _dfdae =_bba .readTemplate ();_dfdae !=nil {return _dfdae ;};if _dfdae =_bba .readIsMMREncoded ();_dfdae !=nil {return _dfdae ;};if _dfdae =_bba .readPatternWidthAndHeight ();_dfdae !=nil {return _dfdae ;};if _dfdae =_bba .readGrayMax ();_dfdae !=nil {return _dfdae ;};if _dfdae =_bba .computeSegmentDataStructure ();_dfdae !=nil {return _dfdae ;};return _bba .checkInput ();};func (_eeed *Header )readDataStartOffset (_faf _ge .StreamReader ,_acag OrganizationType ){if _acag ==OSequential {_eeed .SegmentDataStartOffset =uint64 (_faf .StreamPosition ());};};type PageInformationSegment struct{_cgde _ge .StreamReader ;PageBMHeight int ;PageBMWidth int ;ResolutionX int ;ResolutionY int ;_ddb bool ;_edcd _fc .CombinationOperator ;_bgc bool ;_bgcf uint8 ;_gce bool ;IsLossless bool ;IsStripe bool ;MaxStripeSize uint16 ;};func (_acca *GenericRegion )setParametersMMR (_dead bool ,_gbbc ,_bea int64 ,_eaae ,_ccebd uint32 ,_ccfd byte ,_cag ,_fdcg bool ,_dba ,_debf []int8 ){_acca .DataOffset =_gbbc ;_acca .DataLength =_bea ;_acca .RegionSegment =&RegionSegment {};_acca .RegionSegment .BitmapHeight =_eaae ;_acca .RegionSegment .BitmapWidth =_ccebd ;_acca .GBTemplate =_ccfd ;_acca .IsMMREncoded =_dead ;_acca .IsTPGDon =_cag ;_acca .GBAtX =_dba ;_acca .GBAtY =_debf ;};func (_cgec *GenericRegion )overrideAtTemplate2 (_gdee ,_bbg ,_affb ,_afce ,_bbef int )int {_gdee &=0x3FB;if _cgec .GBAtY [0]==0&&_cgec .GBAtX [0]>=-int8 (_bbef ){_gdee |=(_afce >>uint (7-(int8 (_bbef )+_cgec .GBAtX [0]))&0x1)<<2;}else {_gdee |=int (_cgec .getPixel (_bbg +int (_cgec .GBAtX [0]),_affb +int (_cgec .GBAtY [0])))<<2;};return _gdee ;};func (_fcc *EndOfStripe )Init (h *Header ,r _ge .StreamReader )error {_fcc ._fa =r ;return _fcc .parseHeader (h ,r );};func (_fbdb *SymbolDictionary )setRetainedCodingContexts (_badac *SymbolDictionary ){_fbdb ._aafa =_badac ._aafa ;_fbdb .IsHuffmanEncoded =_badac .IsHuffmanEncoded ;_fbdb .UseRefinementAggregation =_badac .UseRefinementAggregation ;_fbdb .SdTemplate =_badac .SdTemplate ;_fbdb .SdrTemplate =_badac .SdrTemplate ;_fbdb .SdATX =_badac .SdATX ;_fbdb .SdATY =_badac .SdATY ;_fbdb .SdrATX =_badac .SdrATX ;_fbdb .SdrATY =_badac .SdrATY ;_fbdb ._ffddf =_badac ._ffddf ;};func (_cggb *TextRegion )parseHeader ()error {var _dfba error ;_bc .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069n\u0073\u002e\u002e\u002e");defer func (){if _dfba !=nil {_bc .Log .Trace ("\u005b\u0054\u0045\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044E\u0052\u005d\u0020\u0066\u0061i\u006c\u0065d\u002e\u0020\u0025\u0076",_dfba );}else {_bc .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069s\u0068\u0065\u0064\u002e");};}();if _dfba =_cggb .RegionInfo .parseHeader ();_dfba !=nil {return _dfba ;};if _dfba =_cggb .readRegionFlags ();_dfba !=nil {return _dfba ;};if _cggb .IsHuffmanEncoded {if _dfba =_cggb .readHuffmanFlags ();_dfba !=nil {return _dfba ;};};if _dfba =_cggb .readUseRefinement ();_dfba !=nil {return _dfba ;};if _dfba =_cggb .readAmountOfSymbolInstances ();_dfba !=nil {return _dfba ;};if _dfba =_cggb .getSymbols ();_dfba !=nil {return _dfba ;};if _dfba =_cggb .computeSymbolCodeLength ();_dfba !=nil {return _dfba ;};if _dfba =_cggb .checkInput ();_dfba !=nil {return _dfba ;};_bc .Log .Trace ("\u0025\u0073",_cggb .String ());return nil ;};func (_aaef *SymbolDictionary )decodeHeightClassBitmap (_bgcbd *_fc .Bitmap ,_bfbg int64 ,_cbca int ,_bbf []int )error {for _fbfc :=_bfbg ;_fbfc < int64 (_aaef ._fgeec );_fbfc ++{var _fedg int ;for _bcgc :=_bfbg ;_bcgc <=_fbfc -1;_bcgc ++{_fedg +=_bbf [_bcgc ];};_eeede :=_c .Rect (_fedg ,0,_fedg +_bbf [_fbfc ],_cbca );_gdge ,_ffef :=_fc .Extract (_eeede ,_bgcbd );if _ffef !=nil {return _ffef ;};_aaef ._fegg [_fbfc ]=_gdge ;_aaef ._ddfad =append (_aaef ._ddfad ,_gdge );};return nil ;};func (_ggcf *PatternDictionary )readGrayMax ()error {_fdbb ,_aeeff :=_ggcf ._ebfgb .ReadBits (32);if _aeeff !=nil {return _aeeff ;};_ggcf .GrayMax =uint32 (_fdbb &_g .MaxUint32 );return nil ;};func (_aafd *GenericRegion )decodeTemplate3 (_gebg ,_ccdc ,_caea int ,_fbae ,_cbb int )(_ede error ){const _fdf ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0033";var (_eabe ,_cbbg int ;_cfcb int ;_ddfg byte ;_edfg ,_dfg int ;);if _gebg >=1{_ddfg ,_ede =_aafd .Bitmap .GetByte (_cbb );if _ede !=nil {return _be .Wrap (_ede ,_fdf ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_cfcb =int (_ddfg );};_eabe =(_cfcb >>1)&0x70;for _ccaa :=0;_ccaa < _caea ;_ccaa =_edfg {var (_ccg byte ;_ggce int ;);_edfg =_ccaa +8;if _age :=_ccdc -_ccaa ;_age > 8{_ggce =8;}else {_ggce =_age ;};if _gebg >=1{_cfcb <<=8;if _edfg < _ccdc {_ddfg ,_ede =_aafd .Bitmap .GetByte (_cbb +1);if _ede !=nil {return _be .Wrap (_ede ,_fdf ,"\u0069\u006e\u006e\u0065\u0072\u0020\u002d\u0020\u006c\u0069\u006e\u0065 \u003e\u003d\u0020\u0031");};_cfcb |=int (_ddfg );};};for _dga :=0;_dga < _ggce ;_dga ++{if _aafd ._abd {_cbbg =_aafd .overrideAtTemplate3 (_eabe ,_ccaa +_dga ,_gebg ,int (_ccg ),_dga );_aafd ._ccda .SetIndex (int32 (_cbbg ));}else {_aafd ._ccda .SetIndex (int32 (_eabe ));};_dfg ,_ede =_aafd ._deb .DecodeBit (_aafd ._ccda );if _ede !=nil {return _be .Wrap (_ede ,_fdf ,"");};_ccg |=byte (_dfg )<<byte (7-_dga );_eabe =((_eabe &0x1f7)<<1)|_dfg |((_cfcb >>uint (8-_dga ))&0x010);};if _cgb :=_aafd .Bitmap .SetByte (_fbae ,_ccg );_cgb !=nil {return _be .Wrap (_cgb ,_fdf ,"");};_fbae ++;_cbb ++;};return nil ;};func (_ebag *TableSegment )StreamReader ()_ge .StreamReader {return _ebag ._aagff };func (_gbcd *GenericRegion )decodeTemplate2 (_edg ,_fbaf ,_dae int ,_dffc ,_aaggb int )(_bcef error ){const _afgd ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0032";var (_cge ,_cbgg int ;_efa ,_fabg int ;_ggcg byte ;_bdda ,_fgee int ;);if _edg >=1{_ggcg ,_bcef =_gbcd .Bitmap .GetByte (_aaggb );if _bcef !=nil {return _be .Wrap (_bcef ,_afgd ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0031");};_efa =int (_ggcg );};if _edg >=2{_ggcg ,_bcef =_gbcd .Bitmap .GetByte (_aaggb -_gbcd .Bitmap .RowStride );if _bcef !=nil {return _be .Wrap (_bcef ,_afgd ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0032");};_fabg =int (_ggcg )<<4;};_cge =(_efa >>3&0x7c)|(_fabg >>3&0x380);for _effe :=0;_effe < _dae ;_effe =_bdda {var (_abc byte ;_cgdb int ;);_bdda =_effe +8;if _fdc :=_fbaf -_effe ;_fdc > 8{_cgdb =8;}else {_cgdb =_fdc ;};if _edg > 0{_efa <<=8;if _bdda < _fbaf {_ggcg ,_bcef =_gbcd .Bitmap .GetByte (_aaggb +1);if _bcef !=nil {return _be .Wrap (_bcef ,_afgd ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0030");};_efa |=int (_ggcg );};};if _edg > 1{_fabg <<=8;if _bdda < _fbaf {_ggcg ,_bcef =_gbcd .Bitmap .GetByte (_aaggb -_gbcd .Bitmap .RowStride +1);if _bcef !=nil {return _be .Wrap (_bcef ,_afgd ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0031");};_fabg |=int (_ggcg )<<4;};};for _debg :=0;_debg < _cgdb ;_debg ++{_gfgbb :=uint (10-_debg );if _gbcd ._abd {_cbgg =_gbcd .overrideAtTemplate2 (_cge ,_effe +_debg ,_edg ,int (_abc ),_debg );_gbcd ._ccda .SetIndex (int32 (_cbgg ));}else {_gbcd ._ccda .SetIndex (int32 (_cge ));};_fgee ,_bcef =_gbcd ._deb .DecodeBit (_gbcd ._ccda );if _bcef !=nil {return _be .Wrap (_bcef ,_afgd ,"");};_abc |=byte (_fgee <<uint (7-_debg ));_cge =((_cge &0x1bd)<<1)|_fgee |((_efa >>_gfgbb )&0x4)|((_fabg >>_gfgbb )&0x80);};if _eagc :=_gbcd .Bitmap .SetByte (_dffc ,_abc );_eagc !=nil {return _be .Wrap (_eagc ,_afgd ,"");};_dffc ++;_aaggb ++;};return nil ;};var _ SegmentEncoder =&GenericRegion {};func (_cgab *TableSegment )HtLow ()int32 {return _cgab ._agaae };func (_ecc *SymbolDictionary )encodeFlags (_bacc _ge .BinaryWriter )(_cfaa int ,_badd error ){const _eaef ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _badd =_bacc .SkipBits (3);_badd !=nil {return 0,_be .Wrap (_badd ,_eaef ,"\u0065\u006d\u0070\u0074\u0079\u0020\u0062\u0069\u0074\u0073");};var _aba int ;if _ecc .SdrTemplate > 0{_aba =1;};if _badd =_bacc .WriteBit (_aba );_badd !=nil {return _cfaa ,_be .Wrap (_badd ,_eaef ,"s\u0064\u0072\u0074\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_aba =0;if _ecc .SdTemplate > 1{_aba =1;};if _badd =_bacc .WriteBit (_aba );_badd !=nil {return _cfaa ,_be .Wrap (_badd ,_eaef ,"\u0073\u0064\u0074\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_aba =0;if _ecc .SdTemplate ==1||_ecc .SdTemplate ==3{_aba =1;};if _badd =_bacc .WriteBit (_aba );_badd !=nil {return _cfaa ,_be .Wrap (_badd ,_eaef ,"\u0073\u0064\u0074\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_aba =0;if _ecc ._cbbb {_aba =1;};if _badd =_bacc .WriteBit (_aba );_badd !=nil {return _cfaa ,_be .Wrap (_badd ,_eaef ,"\u0063\u006f\u0064in\u0067\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0065\u0064");};_aba =0;if _ecc ._ffee {_aba =1;};if _badd =_bacc .WriteBit (_aba );_badd !=nil {return _cfaa ,_be .Wrap (_badd ,_eaef ,"\u0063\u006f\u0064\u0069ng\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0075\u0073\u0065\u0064");};_aba =0;if _ecc .SdHuffAggInstanceSelection {_aba =1;};if _badd =_bacc .WriteBit (_aba );_badd !=nil {return _cfaa ,_be .Wrap (_badd ,_eaef ,"\u0073\u0064\u0068\u0075\u0066\u0066\u0061\u0067\u0067\u0069\u006e\u0073\u0074");};_aba =int (_ecc .SdHuffBMSizeSelection );if _badd =_bacc .WriteBit (_aba );_badd !=nil {return _cfaa ,_be .Wrap (_badd ,_eaef ,"\u0073\u0064\u0068u\u0066\u0066\u0062\u006d\u0073\u0069\u007a\u0065");};_aba =0;if _ecc .SdHuffDecodeWidthSelection > 1{_aba =1;};if _badd =_bacc .WriteBit (_aba );_badd !=nil {return _cfaa ,_be .Wrap (_badd ,_eaef ,"s\u0064\u0068\u0075\u0066\u0066\u0077\u0069\u0064\u0074\u0068");};_aba =0;switch _ecc .SdHuffDecodeWidthSelection {case 1,3:_aba =1;};if _badd =_bacc .WriteBit (_aba );_badd !=nil {return _cfaa ,_be .Wrap (_badd ,_eaef ,"s\u0064\u0068\u0075\u0066\u0066\u0077\u0069\u0064\u0074\u0068");};_aba =0;if _ecc .SdHuffDecodeHeightSelection > 1{_aba =1;};if _badd =_bacc .WriteBit (_aba );_badd !=nil {return _cfaa ,_be .Wrap (_badd ,_eaef ,"\u0073\u0064\u0068u\u0066\u0066\u0068\u0065\u0069\u0067\u0068\u0074");};_aba =0;switch _ecc .SdHuffDecodeHeightSelection {case 1,3:_aba =1;};if _badd =_bacc .WriteBit (_aba );_badd !=nil {return _cfaa ,_be .Wrap (_badd ,_eaef ,"\u0073\u0064\u0068u\u0066\u0066\u0068\u0065\u0069\u0067\u0068\u0074");};_aba =0;if _ecc .UseRefinementAggregation {_aba =1;};if _badd =_bacc .WriteBit (_aba );_badd !=nil {return _cfaa ,_be .Wrap (_badd ,_eaef ,"\u0073\u0064\u0072\u0065\u0066\u0061\u0067\u0067");};_aba =0;if _ecc .IsHuffmanEncoded {_aba =1;};if _badd =_bacc .WriteBit (_aba );_badd !=nil {return _cfaa ,_be .Wrap (_badd ,_eaef ,"\u0073\u0064\u0068\u0075\u0066\u0066");};return 2,nil ;};func (_dggd *TableSegment )HtRS ()int32 {return _dggd ._dgcg };func (_afef *GenericRegion )setParameters (_aage bool ,_fbfb ,_dgc int64 ,_aad ,_acc uint32 ){_afef .IsMMREncoded =_aage ;_afef .DataOffset =_fbfb ;_afef .DataLength =_dgc ;_afef .RegionSegment .BitmapHeight =_aad ;_afef .RegionSegment .BitmapWidth =_acc ;_afef ._cccc =nil ;_afef .Bitmap =nil ;};func (_bgfa *SymbolDictionary )getSbSymCodeLen ()int8 {_cdcd :=int8 (_g .Ceil (_g .Log (float64 (_bgfa ._fea +_bgfa .NumberOfNewSymbols ))/_g .Log (2)));if _bgfa .IsHuffmanEncoded &&_cdcd < 1{return 1;};return _cdcd ;};func (_fbfe *GenericRefinementRegion )decodeTypicalPredictedLineTemplate1 (_dbf ,_aeg ,_ef ,_eff ,_efd ,_cgd ,_ggg ,_bee ,_afe int )(_fbce error ){var (_bab ,_cgdf int ;_bed ,_bcg int ;_ebfg ,_dbc int ;_ccb byte ;);if _dbf > 0{_ccb ,_fbce =_fbfe .RegionBitmap .GetByte (_ggg -_ef );if _fbce !=nil {return ;};_bed =int (_ccb );};if _bee > 0&&_bee <=_fbfe .ReferenceBitmap .Height {_ccb ,_fbce =_fbfe .ReferenceBitmap .GetByte (_afe -_eff +_cgd );if _fbce !=nil {return ;};_bcg =int (_ccb )<<2;};if _bee >=0&&_bee < _fbfe .ReferenceBitmap .Height {_ccb ,_fbce =_fbfe .ReferenceBitmap .GetByte (_afe +_cgd );if _fbce !=nil {return ;};_ebfg =int (_ccb );};if _bee > -2&&_bee < _fbfe .ReferenceBitmap .Height -1{_ccb ,_fbce =_fbfe .ReferenceBitmap .GetByte (_afe +_eff +_cgd );if _fbce !=nil {return ;};_dbc =int (_ccb );};_bab =((_bed >>5)&0x6)|((_dbc >>2)&0x30)|(_ebfg &0xc0)|(_bcg &0x200);_cgdf =((_dbc >>2)&0x70)|(_ebfg &0xc0)|(_bcg &0x700);var _ada int ;for _ebcf :=0;_ebcf < _efd ;_ebcf =_ada {var (_gfgc int ;_ac int ;);_ada =_ebcf +8;if _gfgc =_aeg -_ebcf ;_gfgc > 8{_gfgc =8;};_gbfg :=_ada < _aeg ;_ecb :=_ada < _fbfe .ReferenceBitmap .Width ;_cf :=_cgd +1;if _dbf > 0{_ccb =0;if _gbfg {_ccb ,_fbce =_fbfe .RegionBitmap .GetByte (_ggg -_ef +1);if _fbce !=nil {return ;};};_bed =(_bed <<8)|int (_ccb );};if _bee > 0&&_bee <=_fbfe .ReferenceBitmap .Height {var _cdf int ;if _ecb {_ccb ,_fbce =_fbfe .ReferenceBitmap .GetByte (_afe -_eff +_cf );if _fbce !=nil {return ;};_cdf =int (_ccb )<<2;};_bcg =(_bcg <<8)|_cdf ;};if _bee >=0&&_bee < _fbfe .ReferenceBitmap .Height {_ccb =0;if _ecb {_ccb ,_fbce =_fbfe .ReferenceBitmap .GetByte (_afe +_cf );if _fbce !=nil {return ;};};_ebfg =(_ebfg <<8)|int (_ccb );};if _bee > -2&&_bee < (_fbfe .ReferenceBitmap .Height -1){_ccb =0;if _ecb {_ccb ,_fbce =_fbfe .ReferenceBitmap .GetByte (_afe +_eff +_cf );if _fbce !=nil {return ;};};_dbc =(_dbc <<8)|int (_ccb );};for _fcg :=0;_fcg < _gfgc ;_fcg ++{var _eage int ;_cb :=(_cgdf >>4)&0x1ff;switch _cb {case 0x1ff:_eage =1;case 0x00:_eage =0;default:_fbfe ._bga .SetIndex (int32 (_bab ));_eage ,_fbce =_fbfe ._ffe .DecodeBit (_fbfe ._bga );if _fbce !=nil {return ;};};_cgf :=uint (7-_fcg );_ac |=int (_eage <<_cgf );_bab =((_bab &0x0d6)<<1)|_eage |(_bed >>_cgf +5)&0x002|((_dbc >>_cgf +2)&0x010)|((_ebfg >>_cgf )&0x040)|((_bcg >>_cgf )&0x200);_cgdf =((_cgdf &0xdb)<<1)|((_dbc >>_cgf +2)&0x010)|((_ebfg >>_cgf )&0x080)|((_bcg >>_cgf )&0x400);};_fbce =_fbfe .RegionBitmap .SetByte (_ggg ,byte (_ac ));if _fbce !=nil {return ;};_ggg ++;_afe ++;};return nil ;};func (_aedb *TableSegment )HtHigh ()int32 {return _aedb ._fabb };func (_cfba *PageInformationSegment )encodeFlags (_cffc _ge .BinaryWriter )(_bagb error ){const _fggb ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _bagb =_cffc .SkipBits (1);_bagb !=nil {return _be .Wrap (_bagb ,_fggb ,"\u0072\u0065\u0073e\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074");};var _dfab int ;if _cfba .CombinationOperatorOverrideAllowed (){_dfab =1;};if _bagb =_cffc .WriteBit (_dfab );_bagb !=nil {return _be .Wrap (_bagb ,_fggb ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0064\u0065\u006e");};_dfab =0;if _cfba ._bgc {_dfab =1;};if _bagb =_cffc .WriteBit (_dfab );_bagb !=nil {return _be .Wrap (_bagb ,_fggb ,"\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0061\u0075\u0078i\u006ci\u0061r\u0079\u0020\u0062\u0075\u0066\u0066\u0065r");};if _bagb =_cffc .WriteBit ((int (_cfba ._edcd )>>1)&0x01);_bagb !=nil {return _be .Wrap (_bagb ,_fggb ,"\u0063\u006f\u006d\u0062\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006f\u0070\u0065\u0072\u0061\u0074o\u0072\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0062\u0069\u0074");};if _bagb =_cffc .WriteBit (int (_cfba ._edcd )&0x01);_bagb !=nil {return _be .Wrap (_bagb ,_fggb ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0062\u0069\u0074");};_dfab =int (_cfba ._bgcf );if _bagb =_cffc .WriteBit (_dfab );_bagb !=nil {return _be .Wrap (_bagb ,_fggb ,"\u0064e\u0066\u0061\u0075\u006c\u0074\u0020\u0070\u0061\u0067\u0065\u0020p\u0069\u0078\u0065\u006c\u0020\u0076\u0061\u006c\u0075\u0065");};_dfab =0;if _cfba ._gce {_dfab =1;};if _bagb =_cffc .WriteBit (_dfab );_bagb !=nil {return _be .Wrap (_bagb ,_fggb ,"\u0063\u006f\u006e\u0074ai\u006e\u0073\u0020\u0072\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074");};_dfab =0;if _cfba .IsLossless {_dfab =1;};if _bagb =_cffc .WriteBit (_dfab );_bagb !=nil {return _be .Wrap (_bagb ,_fggb ,"p\u0061\u0067\u0065\u0020\u0069\u0073 \u0065\u0076\u0065\u006e\u0074\u0075\u0061\u006c\u006cy\u0020\u006c\u006fs\u0073l\u0065\u0073\u0073");};return nil ;};func (_egb *SymbolDictionary )String ()string {_eefa :=&_e .Builder {};_eefa .WriteString ("\n\u005b\u0053\u0059\u004dBO\u004c-\u0044\u0049\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u000a");_eefa .WriteString (_f .Sprintf ("\u0009-\u0020S\u0064\u0072\u0054\u0065\u006dp\u006c\u0061t\u0065\u0020\u0025\u0076\u000a",_egb .SdrTemplate ));_eefa .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0025\u0076\u000a",_egb .SdTemplate ));_eefa .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006eg\u0043\u006f\u006e\u0074\u0065\u0078\u0074R\u0065\u0074\u0061\u0069\u006e\u0065\u0064\u0020\u0025\u0076\u000a",_egb ._cbbb ));_eefa .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074\u0065\u0078\u0074\u0055\u0073\u0065\u0064 \u0025\u0076\u000a",_egb ._ffee ));_eefa .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_egb .SdHuffAggInstanceSelection ));_eefa .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053d\u0048\u0075\u0066\u0066\u0042\u004d\u0053\u0069\u007a\u0065S\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020%\u0076\u000a",_egb .SdHuffBMSizeSelection ));_eefa .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_egb .SdHuffDecodeWidthSelection ));_eefa .WriteString (_f .Sprintf ("\u0009\u002d\u0020Sd\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064e\u0048e\u0069g\u0068t\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_egb .SdHuffDecodeHeightSelection ));_eefa .WriteString (_f .Sprintf ("\u0009\u002d\u0020U\u0073\u0065\u0052\u0065f\u0069\u006e\u0065\u006d\u0065\u006e\u0074A\u0067\u0067\u0072\u0065\u0067\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_egb .UseRefinementAggregation ));_eefa .WriteString (_f .Sprintf ("\u0009\u002d\u0020is\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045\u006e\u0063\u006f\u0064\u0065\u0064\u0020\u0025\u0076\u000a",_egb .IsHuffmanEncoded ));_eefa .WriteString (_f .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_egb .SdATX ));_eefa .WriteString (_f .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_egb .SdATY ));_eefa .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_egb .SdrATX ));_eefa .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_egb .SdrATY ));_eefa .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u004e\u0075\u006d\u0062\u0065\u0072\u004ff\u0045\u0078\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_egb .NumberOfExportedSymbols ));_eefa .WriteString (_f .Sprintf ("\u0009-\u0020\u004e\u0075\u006db\u0065\u0072\u004f\u0066\u004ee\u0077S\u0079m\u0062\u006f\u006c\u0073\u0020\u0025\u0076\n",_egb .NumberOfNewSymbols ));_eefa .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u004ff\u0049\u006d\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_egb ._fea ));_eefa .WriteString (_f .Sprintf ("\u0009\u002d \u006e\u0075\u006d\u0062\u0065\u0072\u004f\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0064\u0053\u0079\u006d\u0062\u006f\u006c\u0073 %\u0076\u000a",_egb ._fgeec ));return _eefa .String ();};func (_aggc *TextRegion )computeSymbolCodeLength ()error {if _aggc .IsHuffmanEncoded {return _aggc .symbolIDCodeLengths ();};_aggc ._eeaf =int8 (_g .Ceil (_g .Log (float64 (_aggc .NumberOfSymbols ))/_g .Log (2)));return nil ;};func (_cgbf *GenericRegion )overrideAtTemplate3 (_aga ,_bece ,_gfaa ,_fdg ,_bdf int )int {_aga &=0x3EF;if _cgbf .GBAtY [0]==0&&_cgbf .GBAtX [0]>=-int8 (_bdf ){_aga |=(_fdg >>uint (7-(int8 (_bdf )+_cgbf .GBAtX [0]))&0x1)<<4;}else {_aga |=int (_cgbf .getPixel (_bece +int (_cgbf .GBAtX [0]),_gfaa +int (_cgbf .GBAtY [0])))<<4;};return _aga ;};type EndOfStripe struct{_fa _ge .StreamReader ;_bb int ;};func (_ccf *GenericRegion )copyLineAbove (_aabc int )error {_cbg :=_aabc *_ccf .Bitmap .RowStride ;_cdg :=_cbg -_ccf .Bitmap .RowStride ;for _bad :=0;_bad < _ccf .Bitmap .RowStride ;_bad ++{_baeg ,_dea :=_ccf .Bitmap .GetByte (_cdg );if _dea !=nil {return _dea ;};_cdg ++;if _dea =_ccf .Bitmap .SetByte (_cbg ,_baeg );_dea !=nil {return _dea ;};_cbg ++;};return nil ;};func (_cdegf *TextRegion )decodeRdx ()(int64 ,error ){const _cedgc ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064x";if _cdegf .IsHuffmanEncoded {if _cdegf .SbHuffRDX ==3{if _cdegf ._gadc ==nil {var (_gacd int ;_bbcc error ;);if _cdegf .SbHuffFS ==3{_gacd ++;};if _cdegf .SbHuffDS ==3{_gacd ++;};if _cdegf .SbHuffDT ==3{_gacd ++;};if _cdegf .SbHuffRDWidth ==3{_gacd ++;};if _cdegf .SbHuffRDHeight ==3{_gacd ++;};_cdegf ._gadc ,_bbcc =_cdegf .getUserTable (_gacd );if _bbcc !=nil {return 0,_be .Wrap (_bbcc ,_cedgc ,"");};};return _cdegf ._gadc .Decode (_cdegf ._bfd );};_dfgcf ,_dcae :=_db .GetStandardTable (14+int (_cdegf .SbHuffRDX ));if _dcae !=nil {return 0,_be .Wrap (_dcae ,_cedgc ,"");};return _dfgcf .Decode (_cdegf ._bfd );};_bdfe ,_daec :=_cdegf ._cfdbc .DecodeInt (_cdegf ._fca );if _daec !=nil {return 0,_be .Wrap (_daec ,_cedgc ,"");};return int64 (_bdfe ),nil ;};func (_fgcf *PageInformationSegment )readWidthAndHeight ()error {_dfgc ,_gdab :=_fgcf ._cgde .ReadBits (32);if _gdab !=nil {return _gdab ;};_fgcf .PageBMWidth =int (_dfgc &_g .MaxInt32 );_dfgc ,_gdab =_fgcf ._cgde .ReadBits (32);if _gdab !=nil {return _gdab ;};_fgcf .PageBMHeight =int (_dfgc &_g .MaxInt32 );return nil ;};func (_ggd *template1 )form (_ebfb ,_ffbg ,_gdd ,_faee ,_ged int16 )int16 {return ((_ebfb &0x02)<<8)|(_ffbg <<6)|((_gdd &0x03)<<4)|(_faee <<1)|_ged ;};func (_fafd *TextRegion )decodeCurrentT ()(int64 ,error ){if _fafd .SbStrips !=1{if _fafd .IsHuffmanEncoded {_cedg ,_eecb :=_fafd ._bfd .ReadBits (byte (_fafd .LogSBStrips ));return int64 (_cedg ),_eecb ;};_dabc ,_ffaf :=_fafd ._cfdbc .DecodeInt (_fafd ._cbeb );if _ffaf !=nil {return 0,_ffaf ;};return int64 (_dabc ),nil ;};return 0,nil ;};func (_ebc *GenericRefinementRegion )decodeOptimized (_gb ,_fe ,_dcg ,_fbg ,_ebe ,_gbf ,_gee int )error {var (_ca error ;_gcd int ;_bca int ;);_cae :=_gb -int (_ebc .ReferenceDY );if _dgd :=int (-_ebc .ReferenceDX );_dgd > 0{_gcd =_dgd ;};_edf :=_ebc .ReferenceBitmap .GetByteIndex (_gcd ,_cae );if _ebc .ReferenceDX > 0{_bca =int (_ebc .ReferenceDX );};_ba :=_ebc .RegionBitmap .GetByteIndex (_bca ,_gb );switch _ebc .TemplateID {case 0:_ca =_ebc .decodeTemplate (_gb ,_fe ,_dcg ,_fbg ,_ebe ,_gbf ,_gee ,_ba ,_cae ,_edf ,_ebc ._ff );case 1:_ca =_ebc .decodeTemplate (_gb ,_fe ,_dcg ,_fbg ,_ebe ,_gbf ,_gee ,_ba ,_cae ,_edf ,_ebc ._gag );};return _ca ;};func (_dfea *TextRegion )String ()string {_ddac :=&_e .Builder {};_ddac .WriteString ("\u000a[\u0054E\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u000a");_ddac .WriteString (_dfea .RegionInfo .String ()+"\u000a");_ddac .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053br\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0025\u0076\u000a",_dfea .SbrTemplate ));_ddac .WriteString (_f .Sprintf ("\u0009-\u0020S\u0062\u0064\u0073\u004f\u0066f\u0073\u0065t\u003a\u0020\u0025\u0076\u000a",_dfea .SbdsOffset ));_ddac .WriteString (_f .Sprintf ("\t\u002d \u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0050i\u0078\u0065\u006c\u003a %\u0076\u000a",_dfea .DefaultPixel ));_ddac .WriteString (_f .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0076\u000a",_dfea .CombinationOperator ));_ddac .WriteString (_f .Sprintf ("\t\u002d \u0049\u0073\u0054\u0072\u0061\u006e\u0073\u0070o\u0073\u0065\u0064\u003a %\u0076\u000a",_dfea .IsTransposed ));_ddac .WriteString (_f .Sprintf ("\u0009\u002d\u0020Re\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0043\u006f\u0072\u006e\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_dfea .ReferenceCorner ));_ddac .WriteString (_f .Sprintf ("\t\u002d\u0020\u0055\u0073eR\u0065f\u0069\u006e\u0065\u006d\u0065n\u0074\u003a\u0020\u0025\u0076\u000a",_dfea .UseRefinement ));_ddac .WriteString (_f .Sprintf ("\u0009-\u0020\u0049\u0073\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045n\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0076\u000a",_dfea .IsHuffmanEncoded ));if _dfea .IsHuffmanEncoded {_ddac .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_dfea .SbHuffRSize ));_ddac .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0059:\u0020\u0025\u0076\u000a",_dfea .SbHuffRDY ));_ddac .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0058:\u0020\u0025\u0076\u000a",_dfea .SbHuffRDX ));_ddac .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069\u0067\u0068\u0074\u003a\u0020\u0025v\u000a",_dfea .SbHuffRDHeight ));_ddac .WriteString (_f .Sprintf ("\t\u002d\u0020\u0053\u0062Hu\u0066f\u0052\u0044\u0057\u0069\u0064t\u0068\u003a\u0020\u0025\u0076\u000a",_dfea .SbHuffRDWidth ));_ddac .WriteString (_f .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0054\u003a\u0020\u0025\u0076\u000a",_dfea .SbHuffDT ));_ddac .WriteString (_f .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0053\u003a\u0020\u0025\u0076\u000a",_dfea .SbHuffDS ));_ddac .WriteString (_f .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0046\u0053\u003a\u0020\u0025\u0076\u000a",_dfea .SbHuffFS ));};_ddac .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_dfea .SbrATX ));_ddac .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0059:\u0020\u0025\u0076\u000a",_dfea .SbrATY ));_ddac .WriteString (_f .Sprintf ("\u0009\u002d\u0020N\u0075\u006d\u0062\u0065r\u004f\u0066\u0053\u0079\u006d\u0062\u006fl\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_dfea .NumberOfSymbolInstances ));_ddac .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_dfea .SbrATX ));return _ddac .String ();};func (_gec *PageInformationSegment )readResolution ()error {_acda ,_ddee :=_gec ._cgde .ReadBits (32);if _ddee !=nil {return _ddee ;};_gec .ResolutionX =int (_acda &_g .MaxInt32 );_acda ,_ddee =_gec ._cgde .ReadBits (32);if _ddee !=nil {return _ddee ;};_gec .ResolutionY =int (_acda &_g .MaxInt32 );return nil ;};func (_gad *GenericRegion )setParametersWithAt (_fed bool ,_fdd byte ,_acce ,_cgece bool ,_dad ,_acbb []int8 ,_bdcf ,_eadf uint32 ,_dfcg *_ce .DecoderStats ,_daab *_ce .Decoder ){_gad .IsMMREncoded =_fed ;_gad .GBTemplate =_fdd ;_gad .IsTPGDon =_acce ;_gad .GBAtX =_dad ;_gad .GBAtY =_acbb ;_gad .RegionSegment .BitmapHeight =_eadf ;_gad .RegionSegment .BitmapWidth =_bdcf ;_gad ._cccc =nil ;_gad .Bitmap =nil ;if _dfcg !=nil {_gad ._ccda =_dfcg ;};if _daab !=nil {_gad ._deb =_daab ;};_bc .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049O\u004e\u005d\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073\u0020\u0053\u0044\u0041t\u003a\u0020\u0025\u0073",_gad );};func (_caag *SymbolDictionary )setCodingStatistics ()error {if _caag ._ffeg ==nil {_caag ._ffeg =_ce .NewStats (512,1);};if _caag ._gcgf ==nil {_caag ._gcgf =_ce .NewStats (512,1);};if _caag ._edde ==nil {_caag ._edde =_ce .NewStats (512,1);};if _caag ._fdfe ==nil {_caag ._fdfe =_ce .NewStats (512,1);};if _caag ._cbcd ==nil {_caag ._cbcd =_ce .NewStats (512,1);};if _caag .UseRefinementAggregation &&_caag ._fagbd ==nil {_caag ._fagbd =_ce .NewStats (1<<uint (_caag ._gcgdg ),1);_caag ._dfbb =_ce .NewStats (512,1);_caag ._bbdcg =_ce .NewStats (512,1);};if _caag ._ffddf ==nil {_caag ._ffddf =_ce .NewStats (65536,1);};if _caag ._aafa ==nil {var _fbadf error ;_caag ._aafa ,_fbadf =_ce .New (_caag ._gabb );if _fbadf !=nil {return _fbadf ;};};return nil ;};func (_fege *TextRegion )decodeStripT ()(_dfcf int64 ,_ggef error ){if _fege .IsHuffmanEncoded {if _fege .SbHuffDT ==3{if _fege ._bbgc ==nil {var _ddga int ;if _fege .SbHuffFS ==3{_ddga ++;};if _fege .SbHuffDS ==3{_ddga ++;};_fege ._bbgc ,_ggef =_fege .getUserTable (_ddga );if _ggef !=nil {return 0,_ggef ;};};_dfcf ,_ggef =_fege ._bbgc .Decode (_fege ._bfd );if _ggef !=nil {return 0,_ggef ;};}else {var _aac _db .Tabler ;_aac ,_ggef =_db .GetStandardTable (11+int (_fege .SbHuffDT ));if _ggef !=nil {return 0,_ggef ;};_dfcf ,_ggef =_aac .Decode (_fege ._bfd );if _ggef !=nil {return 0,_ggef ;};};}else {var _cfddc int32 ;_cfddc ,_ggef =_fege ._cfdbc .DecodeInt (_fege ._dfcc );if _ggef !=nil {return 0,_ggef ;};_dfcf =int64 (_cfddc );};_dfcf *=int64 (-_fege .SbStrips );return _dfcf ,nil ;};func (_def *GenericRefinementRegion )updateOverride ()error {if _def .GrAtX ==nil ||_def .GrAtY ==nil {return _aa .New ("\u0041\u0054\u0020\u0070\u0069\u0078\u0065\u006c\u0073\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");};if len (_def .GrAtX )!=len (_def .GrAtY ){return _aa .New ("A\u0054\u0020\u0070\u0069xe\u006c \u0069\u006e\u0063\u006f\u006es\u0069\u0073\u0074\u0065\u006e\u0074");};_def ._ec =make ([]bool ,len (_def .GrAtX ));switch _def .TemplateID {case 0:if _def .GrAtX [0]!=-1&&_def .GrAtY [0]!=-1{_def ._ec [0]=true ;_def ._ee =true ;};if _def .GrAtX [1]!=-1&&_def .GrAtY [1]!=-1{_def ._ec [1]=true ;_def ._ee =true ;};case 1:_def ._ee =false ;};return nil ;};func (_gdeg *template1 )setIndex (_ffc *_ce .DecoderStats ){_ffc .SetIndex (0x080)};func (_dg *EndOfStripe )LineNumber ()int {return _dg ._bb };func (_gdf *SymbolDictionary )getUserTable (_fgcb int )(_db .Tabler ,error ){var _fdfa int ;for _ ,_cced :=range _gdf .Header .RTSegments {if _cced .Type ==53{if _fdfa ==_fgcb {_facd ,_eedag :=_cced .GetSegmentData ();if _eedag !=nil {return nil ,_eedag ;};_egff :=_facd .(_db .BasicTabler );return _db .NewEncodedTable (_egff );};_fdfa ++;};};return nil ,nil ;};func (_adbd *GenericRefinementRegion )overrideAtTemplate0 (_bdg ,_effd ,_gcc ,_eab ,_gfgb int )int {if _adbd ._ec [0]{_bdg &=0xfff7;if _adbd .GrAtY [0]==0&&int (_adbd .GrAtX [0])>=-_gfgb {_bdg |=(_eab >>uint (7-(_gfgb +int (_adbd .GrAtX [0])))&0x1)<<3;}else {_bdg |=_adbd .getPixel (_adbd .RegionBitmap ,_effd +int (_adbd .GrAtX [0]),_gcc +int (_adbd .GrAtY [0]))<<3;};};if _adbd ._ec [1]{_bdg &=0xefff;if _adbd .GrAtY [1]==0&&int (_adbd .GrAtX [1])>=-_gfgb {_bdg |=(_eab >>uint (7-(_gfgb +int (_adbd .GrAtX [1])))&0x1)<<12;}else {_bdg |=_adbd .getPixel (_adbd .ReferenceBitmap ,_effd +int (_adbd .GrAtX [1]),_gcc +int (_adbd .GrAtY [1]));};};return _bdg ;};func (_gc *GenericRefinementRegion )GetRegionInfo ()*RegionSegment {return _gc .RegionInfo };func (_debb *PageInformationSegment )CombinationOperatorOverrideAllowed ()bool {return _debb ._ddb };func (_dcb *GenericRegion )decodeTemplate0a (_ead ,_ecee ,_eebf int ,_debd ,_feee int )(_fbd error ){const _aaee ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0061";var (_dbgb ,_edb int ;_bdc ,_ffg int ;_fefa byte ;_ccba int ;);if _ead >=1{_fefa ,_fbd =_dcb .Bitmap .GetByte (_feee );if _fbd !=nil {return _be .Wrap (_fbd ,_aaee ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_bdc =int (_fefa );};if _ead >=2{_fefa ,_fbd =_dcb .Bitmap .GetByte (_feee -_dcb .Bitmap .RowStride );if _fbd !=nil {return _be .Wrap (_fbd ,_aaee ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_ffg =int (_fefa )<<6;};_dbgb =(_bdc &0xf0)|(_ffg &0x3800);for _dff :=0;_dff < _eebf ;_dff =_ccba {var (_ffbc byte ;_cba int ;);_ccba =_dff +8;if _cff :=_ecee -_dff ;_cff > 8{_cba =8;}else {_cba =_cff ;};if _ead > 0{_bdc <<=8;if _ccba < _ecee {_fefa ,_fbd =_dcb .Bitmap .GetByte (_feee +1);if _fbd !=nil {return _be .Wrap (_fbd ,_aaee ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_bdc |=int (_fefa );};};if _ead > 1{_ggbb :=_feee -_dcb .Bitmap .RowStride +1;_ffg <<=8;if _ccba < _ecee {_fefa ,_fbd =_dcb .Bitmap .GetByte (_ggbb );if _fbd !=nil {return _be .Wrap (_fbd ,_aaee ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_ffg |=int (_fefa )<<6;}else {_ffg |=0;};};for _egg :=0;_egg < _cba ;_egg ++{_afgg :=uint (7-_egg );if _dcb ._abd {_edb =_dcb .overrideAtTemplate0a (_dbgb ,_dff +_egg ,_ead ,int (_ffbc ),_egg ,int (_afgg ));_dcb ._ccda .SetIndex (int32 (_edb ));}else {_dcb ._ccda .SetIndex (int32 (_dbgb ));};var _gddc int ;_gddc ,_fbd =_dcb ._deb .DecodeBit (_dcb ._ccda );if _fbd !=nil {return _be .Wrap (_fbd ,_aaee ,"");};_ffbc |=byte (_gddc )<<uint (_afgg );_dbgb =((_dbgb &0x7bf7)<<1)|_gddc |((_bdc >>_afgg )&0x10)|((_ffg >>_afgg )&0x800);};if _caf :=_dcb .Bitmap .SetByte (_debd ,_ffbc );_caf !=nil {return _be .Wrap (_caf ,_aaee ,"");};_debd ++;_feee ++;};return nil ;};type TextRegion struct{_bfd _ge .StreamReader ;RegionInfo *RegionSegment ;SbrTemplate int8 ;SbdsOffset int8 ;DefaultPixel int8 ;CombinationOperator _fc .CombinationOperator ;IsTransposed int8 ;ReferenceCorner int16 ;LogSBStrips int16 ;UseRefinement bool ;IsHuffmanEncoded bool ;SbHuffRSize int8 ;SbHuffRDY int8 ;SbHuffRDX int8 ;SbHuffRDHeight int8 ;SbHuffRDWidth int8 ;SbHuffDT int8 ;SbHuffDS int8 ;SbHuffFS int8 ;SbrATX []int8 ;SbrATY []int8 ;NumberOfSymbolInstances uint32 ;_dadd int64 ;SbStrips int8 ;NumberOfSymbols uint32 ;RegionBitmap *_fc .Bitmap ;Symbols []*_fc .Bitmap ;_cfdbc *_ce .Decoder ;_gfef *GenericRefinementRegion ;_dfcc *_ce .DecoderStats ;_acgf *_ce .DecoderStats ;_afbc *_ce .DecoderStats ;_cbeb *_ce .DecoderStats ;_abdc *_ce .DecoderStats ;_fbdce *_ce .DecoderStats ;_dgdaa *_ce .DecoderStats ;_gdege *_ce .DecoderStats ;_fca *_ce .DecoderStats ;_gefc *_ce .DecoderStats ;_accd *_ce .DecoderStats ;_eeaf int8 ;_cdde *_db .FixedSizeTable ;Header *Header ;_edag _db .Tabler ;_daeb _db .Tabler ;_bbgc _db .Tabler ;_daaf _db .Tabler ;_fdgf _db .Tabler ;_gadc _db .Tabler ;_bcd _db .Tabler ;_ade _db .Tabler ;_bgbcd ,_aecb map[int ]int ;_abaf []int ;_eaca *_fc .Points ;_gbgb *_fc .Bitmaps ;_ebecd *_dc .IntSlice ;_add ,_begd int ;_badea *_fc .Boxes ;};func (_gdcg *SymbolDictionary )decodeThroughTextRegion (_feec ,_fffg ,_bdeb uint32 )error {if _gdcg ._fcfc ==nil {_gdcg ._fcfc =_aeac (_gdcg ._gabb ,nil );_gdcg ._fcfc .setContexts (_gdcg ._ffddf ,_ce .NewStats (512,1),_ce .NewStats (512,1),_ce .NewStats (512,1),_ce .NewStats (512,1),_gdcg ._fagbd ,_ce .NewStats (512,1),_ce .NewStats (512,1),_ce .NewStats (512,1),_ce .NewStats (512,1));};if _becg :=_gdcg .setSymbolsArray ();_becg !=nil {return _becg ;};_gdcg ._fcfc .setParameters (_gdcg ._aafa ,_gdcg .IsHuffmanEncoded ,true ,_feec ,_fffg ,_bdeb ,1,_gdcg ._fea +_gdcg ._fgeec ,0,0,0,1,0,0,0,0,0,0,0,0,0,_gdcg .SdrTemplate ,_gdcg .SdrATX ,_gdcg .SdrATY ,_gdcg ._ddfad ,_gdcg ._gcgdg );return _gdcg .addSymbol (_gdcg ._fcfc );};func (_degg *SymbolDictionary )decodeHeightClassDeltaHeight ()(int64 ,error ){if _degg .IsHuffmanEncoded {return _degg .decodeHeightClassDeltaHeightWithHuffman ();};_cbe ,_ddcd :=_degg ._aafa .DecodeInt (_degg ._gcgf );if _ddcd !=nil {return 0,_ddcd ;};return int64 (_cbe ),nil ;};func (_gf *GenericRefinementRegion )GetRegionBitmap ()(*_fc .Bitmap ,error ){var _fcf error ;_bc .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");defer func (){if _fcf !=nil {_bc .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0047\u0065\u0074R\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006dap\u0020\u0066a\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_fcf );}else {_bc .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");};}();if _gf .RegionBitmap !=nil {return _gf .RegionBitmap ,nil ;};_eeg :=0;if _gf .ReferenceBitmap ==nil {_gf .ReferenceBitmap ,_fcf =_gf .getGrReference ();if _fcf !=nil {return nil ,_fcf ;};};if _gf ._ffe ==nil {_gf ._ffe ,_fcf =_ce .New (_gf ._fcb );if _fcf !=nil {return nil ,_fcf ;};};if _gf ._bga ==nil {_gf ._bga =_ce .NewStats (8192,1);};_gf .RegionBitmap =_fc .New (int (_gf .RegionInfo .BitmapWidth ),int (_gf .RegionInfo .BitmapHeight ));if _gf .TemplateID ==0{if _fcf =_gf .updateOverride ();_fcf !=nil {return nil ,_fcf ;};};_fbc :=(_gf .RegionBitmap .Width +7)&-8;var _bbe int ;if _gf .IsTPGROn {_bbe =int (-_gf .ReferenceDY )*_gf .ReferenceBitmap .RowStride ;};_cgc :=_bbe +1;for _geb :=0;_geb < _gf .RegionBitmap .Height ;_geb ++{if _gf .IsTPGROn {_fac ,_fg :=_gf .decodeSLTP ();if _fg !=nil {return nil ,_fg ;};_eeg ^=_fac ;};if _eeg ==0{_fcf =_gf .decodeOptimized (_geb ,_gf .RegionBitmap .Width ,_gf .RegionBitmap .RowStride ,_gf .ReferenceBitmap .RowStride ,_fbc ,_bbe ,_cgc );if _fcf !=nil {return nil ,_fcf ;};}else {_fcf =_gf .decodeTypicalPredictedLine (_geb ,_gf .RegionBitmap .Width ,_gf .RegionBitmap .RowStride ,_gf .ReferenceBitmap .RowStride ,_fbc ,_bbe );if _fcf !=nil {return nil ,_fcf ;};};};return _gf .RegionBitmap ,nil ;};type TableSegment struct{_aagff _ge .StreamReader ;_cga int32 ;_cgfcg int32 ;_dgcg int32 ;_agaae int32 ;_fabb int32 ;};type Documenter interface{GetPage (int )(Pager ,error );GetGlobalSegment (int )(*Header ,error );};func (_gcbb *PatternDictionary )setGbAtPixels (){if _gcbb .HDTemplate ==0{_gcbb .GBAtX =make ([]int8 ,4);_gcbb .GBAtY =make ([]int8 ,4);_gcbb .GBAtX [0]=-int8 (_gcbb .HdpWidth );_gcbb .GBAtY [0]=0;_gcbb .GBAtX [1]=-3;_gcbb .GBAtY [1]=-1;_gcbb .GBAtX [2]=2;_gcbb .GBAtY [2]=-2;_gcbb .GBAtX [3]=-2;_gcbb .GBAtY [3]=-2;}else {_gcbb .GBAtX =[]int8 {-int8 (_gcbb .HdpWidth )};_gcbb .GBAtY =[]int8 {0};};};func (_geg *GenericRefinementRegion )setParameters (_fcd *_ce .DecoderStats ,_eed *_ce .Decoder ,_aaf int8 ,_fba ,_fef uint32 ,_fge *_fc .Bitmap ,_bfe ,_dgda int32 ,_bcf bool ,_bgea []int8 ,_adab []int8 ){_bc .Log .Trace ("\u005b\u0047\u0045NE\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052E\u0047I\u004fN\u005d \u0073\u0065\u0074\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073");if _fcd !=nil {_geg ._bga =_fcd ;};if _eed !=nil {_geg ._ffe =_eed ;};_geg .TemplateID =_aaf ;_geg .RegionInfo .BitmapWidth =_fba ;_geg .RegionInfo .BitmapHeight =_fef ;_geg .ReferenceBitmap =_fge ;_geg .ReferenceDX =_bfe ;_geg .ReferenceDY =_dgda ;_geg .IsTPGROn =_bcf ;_geg .GrAtX =_bgea ;_geg .GrAtY =_adab ;_geg .RegionBitmap =nil ;_bc .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073 f\u0069\u006ei\u0073\u0068\u0065\u0064\u002e\u0020\u0025\u0073",_geg );};func (_ggbg *TextRegion )InitEncode (globalSymbolsMap ,localSymbolsMap map[int ]int ,comps []int ,inLL *_fc .Points ,symbols *_fc .Bitmaps ,classIDs *_dc .IntSlice ,boxes *_fc .Boxes ,width ,height ,symbits int ){_ggbg .RegionInfo =&RegionSegment {BitmapWidth :uint32 (width ),BitmapHeight :uint32 (height )};_ggbg ._bgbcd =globalSymbolsMap ;_ggbg ._aecb =localSymbolsMap ;_ggbg ._abaf =comps ;_ggbg ._eaca =inLL ;_ggbg ._gbgb =symbols ;_ggbg ._ebecd =classIDs ;_ggbg ._badea =boxes ;_ggbg ._begd =symbits ;};func (_cgcf *RegionSegment )String ()string {_gcdbe :=&_e .Builder {};_gcdbe .WriteString ("\u0009[\u0052E\u0047\u0049\u004f\u004e\u0020S\u0045\u0047M\u0045\u004e\u0054\u005d\u000a");_gcdbe .WriteString (_f .Sprintf ("\t\u0009\u002d\u0020\u0042\u0069\u0074m\u0061\u0070\u0020\u0028\u0077\u0069d\u0074\u0068\u002c\u0020\u0068\u0065\u0069g\u0068\u0074\u0029\u0020\u005b\u0025\u0064\u0078\u0025\u0064]\u000a",_cgcf .BitmapWidth ,_cgcf .BitmapHeight ));_gcdbe .WriteString (_f .Sprintf ("\u0009\u0009\u002d\u0020L\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0028\u0078,\u0079)\u003a\u0020\u005b\u0025\u0064\u002c\u0025d\u005d\u000a",_cgcf .XLocation ,_cgcf .YLocation ));_gcdbe .WriteString (_f .Sprintf ("\t\u0009\u002d\u0020\u0043\u006f\u006db\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070e\u0072\u0061\u0074o\u0072:\u0020\u0025\u0073",_cgcf .CombinaionOperator ));return _gcdbe .String ();};func _aeac (_gccdc _ge .StreamReader ,_bddc *Header )*TextRegion {_edfd :=&TextRegion {_bfd :_gccdc ,Header :_bddc ,RegionInfo :NewRegionSegment (_gccdc )};return _edfd ;};func (_gbdaa *SymbolDictionary )readAtPixels (_acbgd int )error {_gbdaa .SdATX =make ([]int8 ,_acbgd );_gbdaa .SdATY =make ([]int8 ,_acbgd );var (_beaf byte ;_eafa error ;);for _dbaa :=0;_dbaa < _acbgd ;_dbaa ++{_beaf ,_eafa =_gbdaa ._gabb .ReadByte ();if _eafa !=nil {return _eafa ;};_gbdaa .SdATX [_dbaa ]=int8 (_beaf );_beaf ,_eafa =_gbdaa ._gabb .ReadByte ();if _eafa !=nil {return _eafa ;};_gbdaa .SdATY [_dbaa ]=int8 (_beaf );};return nil ;};func (_fce *Header )readSegmentDataLength (_fgab _ge .StreamReader )(_edac error ){_fce .SegmentDataLength ,_edac =_fgab .ReadBits (32);if _edac !=nil {return _edac ;};_fce .SegmentDataLength &=_g .MaxInt32 ;return nil ;};func (_cbaf *GenericRegion )decodeTemplate1 (_efde ,_aeca ,_ggbf int ,_cbad ,_adbdc int )(_abe error ){const _gacc ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0031";var (_eeda ,_aecg int ;_dfb ,_dagbf int ;_cgdc byte ;_ddfc ,_aed int ;);if _efde >=1{_cgdc ,_abe =_cbaf .Bitmap .GetByte (_adbdc );if _abe !=nil {return _be .Wrap (_abe ,_gacc ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_dfb =int (_cgdc );};if _efde >=2{_cgdc ,_abe =_cbaf .Bitmap .GetByte (_adbdc -_cbaf .Bitmap .RowStride );if _abe !=nil {return _be .Wrap (_abe ,_gacc ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_dagbf =int (_cgdc )<<5;};_eeda =((_dfb >>1)&0x1f8)|((_dagbf >>1)&0x1e00);for _affd :=0;_affd < _ggbf ;_affd =_ddfc {var (_dbb byte ;_bddb int ;);_ddfc =_affd +8;if _bgb :=_aeca -_affd ;_bgb > 8{_bddb =8;}else {_bddb =_bgb ;};if _efde > 0{_dfb <<=8;if _ddfc < _aeca {_cgdc ,_abe =_cbaf .Bitmap .GetByte (_adbdc +1);if _abe !=nil {return _be .Wrap (_abe ,_gacc ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_dfb |=int (_cgdc );};};if _efde > 1{_dagbf <<=8;if _ddfc < _aeca {_cgdc ,_abe =_cbaf .Bitmap .GetByte (_adbdc -_cbaf .Bitmap .RowStride +1);if _abe !=nil {return _be .Wrap (_abe ,_gacc ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_dagbf |=int (_cgdc )<<5;};};for _dca :=0;_dca < _bddb ;_dca ++{if _cbaf ._abd {_aecg =_cbaf .overrideAtTemplate1 (_eeda ,_affd +_dca ,_efde ,int (_dbb ),_dca );_cbaf ._ccda .SetIndex (int32 (_aecg ));}else {_cbaf ._ccda .SetIndex (int32 (_eeda ));};_aed ,_abe =_cbaf ._deb .DecodeBit (_cbaf ._ccda );if _abe !=nil {return _be .Wrap (_abe ,_gacc ,"");};_dbb |=byte (_aed )<<uint (7-_dca );_ddc :=uint (8-_dca );_eeda =((_eeda &0xefb)<<1)|_aed |((_dfb >>_ddc )&0x8)|((_dagbf >>_ddc )&0x200);};if _egge :=_cbaf .Bitmap .SetByte (_cbad ,_dbb );_egge !=nil {return _be .Wrap (_egge ,_gacc ,"");};_cbad ++;_adbdc ++;};return nil ;};func (_ccdg *Header )writeReferredToSegments (_gfbf _ge .BinaryWriter )(_edgg int ,_befa error ){const _ffed ="\u0077\u0072\u0069te\u0052\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";var (_gcfg uint16 ;_gagg uint32 ;);_cdea :=_ccdg .referenceSize ();_dgdab :=1;_eddcc :=make ([]byte ,_cdea );for _ ,_egd :=range _ccdg .RTSNumbers {switch _cdea {case 4:_gagg =uint32 (_egd );_a .BigEndian .PutUint32 (_eddcc ,_gagg );_dgdab ,_befa =_gfbf .Write (_eddcc );if _befa !=nil {return 0,_be .Wrap (_befa ,_ffed ,"u\u0069\u006e\u0074\u0033\u0032\u0020\u0073\u0069\u007a\u0065");};case 2:_gcfg =uint16 (_egd );_a .BigEndian .PutUint16 (_eddcc ,_gcfg );_dgdab ,_befa =_gfbf .Write (_eddcc );if _befa !=nil {return 0,_be .Wrap (_befa ,_ffed ,"\u0075\u0069\u006e\u0074\u0031\u0036");};default:if _befa =_gfbf .WriteByte (byte (_egd ));_befa !=nil {return 0,_be .Wrap (_befa ,_ffed ,"\u0075\u0069\u006et\u0038");};};_edgg +=_dgdab ;};return _edgg ,nil ;};func (_dfda *PageInformationSegment )readMaxStripeSize ()error {_gbfc ,_cacab :=_dfda ._cgde .ReadBits (15);if _cacab !=nil {return _cacab ;};_dfda .MaxStripeSize =uint16 (_gbfc &_g .MaxUint16 );return nil ;};func (_cfd *GenericRegion )parseHeader ()(_agcf error ){_bc .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052I\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0050\u0061\u0072s\u0069\u006e\u0067\u0048\u0065\u0061\u0064e\u0072\u002e\u002e\u002e");defer func (){if _agcf !=nil {_bc .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e]\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065r\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0077\u0069th\u0020\u0065\u0072\u0072\u006f\u0072\u002e\u0020\u0025\u0076",_agcf );}else {_bc .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049C\u002d\u0052\u0045G\u0049\u004f\u004e]\u0020\u0050a\u0072\u0073\u0069\u006e\u0067\u0048e\u0061de\u0072\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0053\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079\u002e\u002e\u002e");};}();var (_gbcf int ;_dcgg uint64 ;);if _agcf =_cfd .RegionSegment .parseHeader ();_agcf !=nil {return _agcf ;};if _ ,_agcf =_cfd ._deff .ReadBits (3);_agcf !=nil {return _agcf ;};_gbcf ,_agcf =_cfd ._deff .ReadBit ();if _agcf !=nil {return _agcf ;};if _gbcf ==1{_cfd .UseExtTemplates =true ;};_gbcf ,_agcf =_cfd ._deff .ReadBit ();if _agcf !=nil {return _agcf ;};if _gbcf ==1{_cfd .IsTPGDon =true ;};_dcgg ,_agcf =_cfd ._deff .ReadBits (2);if _agcf !=nil {return _agcf ;};_cfd .GBTemplate =byte (_dcgg &0xf);_gbcf ,_agcf =_cfd ._deff .ReadBit ();if _agcf !=nil {return _agcf ;};if _gbcf ==1{_cfd .IsMMREncoded =true ;};if !_cfd .IsMMREncoded {_dbcf :=1;if _cfd .GBTemplate ==0{_dbcf =4;if _cfd .UseExtTemplates {_dbcf =12;};};if _agcf =_cfd .readGBAtPixels (_dbcf );_agcf !=nil {return _agcf ;};};if _agcf =_cfd .computeSegmentDataStructure ();_agcf !=nil {return _agcf ;};_bc .Log .Trace ("\u0025\u0073",_cfd );return nil ;};func (_fgca *HalftoneRegion )GetPatterns ()([]*_fc .Bitmap ,error ){var (_cefe []*_fc .Bitmap ;_fdca error ;);for _ ,_adce :=range _fgca ._eaag .RTSegments {var _fgcc Segmenter ;_fgcc ,_fdca =_adce .GetSegmentData ();if _fdca !=nil {_bc .Log .Debug ("\u0047e\u0074\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061 \u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025v",_fdca );return nil ,_fdca ;};_dgga ,_bag :=_fgcc .(*PatternDictionary );if !_bag {_fdca =_f .Errorf ("\u0072e\u006c\u0061t\u0065\u0064\u0020\u0073e\u0067\u006d\u0065n\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0070at\u0074\u0065\u0072n\u0020\u0064i\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u003a \u0025\u0054",_fgcc );return nil ,_fdca ;};var _cdfd []*_fc .Bitmap ;_cdfd ,_fdca =_dgga .GetDictionary ();if _fdca !=nil {_bc .Log .Debug ("\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_fdca );return nil ,_fdca ;};_cefe =append (_cefe ,_cdfd ...);};return _cefe ,nil ;};func (_ddff *TextRegion )setContexts (_bcdc *_ce .DecoderStats ,_aebd *_ce .DecoderStats ,_aegb *_ce .DecoderStats ,_acdb *_ce .DecoderStats ,_dbeed *_ce .DecoderStats ,_ddeb *_ce .DecoderStats ,_fffef *_ce .DecoderStats ,_afee *_ce .DecoderStats ,_aaeff *_ce .DecoderStats ,_gced *_ce .DecoderStats ){_ddff ._dfcc =_aebd ;_ddff ._acgf =_aegb ;_ddff ._afbc =_acdb ;_ddff ._cbeb =_dbeed ;_ddff ._fbdce =_fffef ;_ddff ._dgdaa =_afee ;_ddff ._gdege =_ddeb ;_ddff ._fca =_aaeff ;_ddff ._gefc =_gced ;_ddff ._accd =_bcdc ;};func (_deafa *PatternDictionary )checkInput ()error {if _deafa .HdpHeight < 1||_deafa .HdpWidth < 1{return _aa .New ("in\u0076\u0061l\u0069\u0064\u0020\u0048\u0065\u0061\u0064\u0065\u0072 \u0056\u0061\u006c\u0075\u0065\u003a\u0020\u0057\u0069\u0064\u0074\u0068\u002f\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020g\u0072e\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020z\u0065\u0072o");};if _deafa .IsMMREncoded {if _deafa .HDTemplate !=0{_bc .Log .Debug ("\u0076\u0061\u0072\u0069\u0061\u0062\u006c\u0065\u0020\u0048\u0044\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e \u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030");};};return nil ;};func (_cgda *GenericRefinementRegion )decodeTemplate (_gaa ,_gfd ,_gae ,_afc ,_ggb ,_adb ,_cfa ,_bfc ,_aaga ,_ffb int ,_edd templater )(_ceg error ){var (_eac ,_aec ,_gcg ,_gfa ,_gff int16 ;_gde ,_adg ,_gdg ,_fff int ;_bfcg byte ;);if _aaga >=1&&(_aaga -1)< _cgda .ReferenceBitmap .Height {_bfcg ,_ceg =_cgda .ReferenceBitmap .GetByte (_ffb -_afc );if _ceg !=nil {return ;};_gde =int (_bfcg );};if _aaga >=0&&(_aaga )< _cgda .ReferenceBitmap .Height {_bfcg ,_ceg =_cgda .ReferenceBitmap .GetByte (_ffb );if _ceg !=nil {return ;};_adg =int (_bfcg );};if _aaga >=-1&&(_aaga +1)< _cgda .ReferenceBitmap .Height {_bfcg ,_ceg =_cgda .ReferenceBitmap .GetByte (_ffb +_afc );if _ceg !=nil {return ;};_gdg =int (_bfcg );};_ffb ++;if _gaa >=1{_bfcg ,_ceg =_cgda .RegionBitmap .GetByte (_bfc -_gae );if _ceg !=nil {return ;};_fff =int (_bfcg );};_bfc ++;_aagg :=_cgda .ReferenceDX %8;_fffd :=6+_aagg ;_fffdg :=_ffb %_afc ;if _fffd >=0{if _fffd < 8{_eac =int16 (_gde >>uint (_fffd ))&0x07;};if _fffd < 8{_aec =int16 (_adg >>uint (_fffd ))&0x07;};if _fffd < 8{_gcg =int16 (_gdg >>uint (_fffd ))&0x07;};if _fffd ==6&&_fffdg > 1{if _aaga >=1&&(_aaga -1)< _cgda .ReferenceBitmap .Height {_bfcg ,_ceg =_cgda .ReferenceBitmap .GetByte (_ffb -_afc -2);if _ceg !=nil {return _ceg ;};_eac |=int16 (_bfcg <<2)&0x04;};if _aaga >=0&&_aaga < _cgda .ReferenceBitmap .Height {_bfcg ,_ceg =_cgda .ReferenceBitmap .GetByte (_ffb -2);if _ceg !=nil {return _ceg ;};_aec |=int16 (_bfcg <<2)&0x04;};if _aaga >=-1&&_aaga +1< _cgda .ReferenceBitmap .Height {_bfcg ,_ceg =_cgda .ReferenceBitmap .GetByte (_ffb +_afc -2);if _ceg !=nil {return _ceg ;};_gcg |=int16 (_bfcg <<2)&0x04;};};if _fffd ==0{_gde =0;_adg =0;_gdg =0;if _fffdg < _afc -1{if _aaga >=1&&_aaga -1< _cgda .ReferenceBitmap .Height {_bfcg ,_ceg =_cgda .ReferenceBitmap .GetByte (_ffb -_afc );if _ceg !=nil {return _ceg ;};_gde =int (_bfcg );};if _aaga >=0&&_aaga < _cgda .ReferenceBitmap .Height {_bfcg ,_ceg =_cgda .ReferenceBitmap .GetByte (_ffb );if _ceg !=nil {return _ceg ;};_adg =int (_bfcg );};if _aaga >=-1&&_aaga +1< _cgda .ReferenceBitmap .Height {_bfcg ,_ceg =_cgda .ReferenceBitmap .GetByte (_ffb +_afc );if _ceg !=nil {return _ceg ;};_gdg =int (_bfcg );};};_ffb ++;};}else {_eac =int16 (_gde <<1)&0x07;_aec =int16 (_adg <<1)&0x07;_gcg =int16 (_gdg <<1)&0x07;_gde =0;_adg =0;_gdg =0;if _fffdg < _afc -1{if _aaga >=1&&_aaga -1< _cgda .ReferenceBitmap .Height {_bfcg ,_ceg =_cgda .ReferenceBitmap .GetByte (_ffb -_afc );if _ceg !=nil {return _ceg ;};_gde =int (_bfcg );};if _aaga >=0&&_aaga < _cgda .ReferenceBitmap .Height {_bfcg ,_ceg =_cgda .ReferenceBitmap .GetByte (_ffb );if _ceg !=nil {return _ceg ;};_adg =int (_bfcg );};if _aaga >=-1&&_aaga +1< _cgda .ReferenceBitmap .Height {_bfcg ,_ceg =_cgda .ReferenceBitmap .GetByte (_ffb +_afc );if _ceg !=nil {return _ceg ;};_gdg =int (_bfcg );};_ffb ++;};_eac |=int16 ((_gde >>7)&0x07);_aec |=int16 ((_adg >>7)&0x07);_gcg |=int16 ((_gdg >>7)&0x07);};_gfa =int16 (_fff >>6);_gff =0;_bce :=(2-_aagg )%8;_gde <<=uint (_bce );_adg <<=uint (_bce );_gdg <<=uint (_bce );_fff <<=2;var _ccd int ;for _bcc :=0;_bcc < _gfd ;_bcc ++{_afgc :=_bcc &0x07;_gcdb :=_edd .form (_eac ,_aec ,_gcg ,_gfa ,_gff );if _cgda ._ee {_bfcg ,_ceg =_cgda .RegionBitmap .GetByte (_cgda .RegionBitmap .GetByteIndex (_bcc ,_gaa ));if _ceg !=nil {return _ceg ;};_cgda ._bga .SetIndex (int32 (_cgda .overrideAtTemplate0 (int (_gcdb ),_bcc ,_gaa ,int (_bfcg ),_afgc )));}else {_cgda ._bga .SetIndex (int32 (_gcdb ));};_ccd ,_ceg =_cgda ._ffe .DecodeBit (_cgda ._bga );if _ceg !=nil {return _ceg ;};if _ceg =_cgda .RegionBitmap .SetPixel (_bcc ,_gaa ,byte (_ccd ));_ceg !=nil {return _ceg ;};_eac =((_eac <<1)|0x01&int16 (_gde >>7))&0x07;_aec =((_aec <<1)|0x01&int16 (_adg >>7))&0x07;_gcg =((_gcg <<1)|0x01&int16 (_gdg >>7))&0x07;_gfa =((_gfa <<1)|0x01&int16 (_fff >>7))&0x07;_gff =int16 (_ccd );if (_bcc -int (_cgda .ReferenceDX ))%8==5{_gde =0;_adg =0;_gdg =0;if ((_bcc -int (_cgda .ReferenceDX ))/8)+1< _cgda .ReferenceBitmap .RowStride {if _aaga >=1&&(_aaga -1)< _cgda .ReferenceBitmap .Height {_bfcg ,_ceg =_cgda .ReferenceBitmap .GetByte (_ffb -_afc );if _ceg !=nil {return _ceg ;};_gde =int (_bfcg );};if _aaga >=0&&_aaga < _cgda .ReferenceBitmap .Height {_bfcg ,_ceg =_cgda .ReferenceBitmap .GetByte (_ffb );if _ceg !=nil {return _ceg ;};_adg =int (_bfcg );};if _aaga >=-1&&(_aaga +1)< _cgda .ReferenceBitmap .Height {_bfcg ,_ceg =_cgda .ReferenceBitmap .GetByte (_ffb +_afc );if _ceg !=nil {return _ceg ;};_gdg =int (_bfcg );};};_ffb ++;}else {_gde <<=1;_adg <<=1;_gdg <<=1;};if _afgc ==5&&_gaa >=1{if ((_bcc >>3)+1)>=_cgda .RegionBitmap .RowStride {_fff =0;}else {_bfcg ,_ceg =_cgda .RegionBitmap .GetByte (_bfc -_gae );if _ceg !=nil {return _ceg ;};_fff =int (_bfcg );};_bfc ++;}else {_fff <<=1;};};return nil ;};func (_fcea *SymbolDictionary )InitEncode (symbols *_fc .Bitmaps ,symbolList []int ,symbolMap map[int ]int ,unborderSymbols bool )error {const _gcec ="S\u0079\u006d\u0062\u006f\u006c\u0044i\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002eI\u006e\u0069\u0074E\u006ec\u006f\u0064\u0065";_fcea .SdATX =[]int8 {3,-3,2,-2};_fcea .SdATY =[]int8 {-1,-1,-2,-2};_fcea ._efc =symbols ;_fcea ._ccgg =make ([]int ,len (symbolList ));copy (_fcea ._ccgg ,symbolList );if len (_fcea ._ccgg )!=_fcea ._efc .Size (){return _be .Error (_gcec ,"s\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0061\u006e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u004ci\u0073\u0074\u0020\u006f\u0066\u0020\u0064\u0069\u0066\u0066er\u0065\u006e\u0074 \u0073i\u007a\u0065");};_fcea .NumberOfNewSymbols =uint32 (symbols .Size ());_fcea .NumberOfExportedSymbols =uint32 (symbols .Size ());_fcea ._fbgc =symbolMap ;_fcea ._dbgd =unborderSymbols ;return nil ;};func (_afd *SymbolDictionary )addSymbol (_bbcf Regioner )error {_gbce ,_adbf :=_bbcf .GetRegionBitmap ();if _adbf !=nil {return _adbf ;};_afd ._fegg [_afd ._fgeec ]=_gbce ;_afd ._ddfad =append (_afd ._ddfad ,_gbce );_bc .Log .Trace ("\u005b\u0053YM\u0042\u004f\u004c \u0044\u0049\u0043\u0054ION\u0041RY\u005d\u0020\u0041\u0064\u0064\u0065\u0064 s\u0079\u006d\u0062\u006f\u006c\u003a\u0020%\u0073",_gbce );return nil ;};func (_dgb *TextRegion )GetRegionBitmap ()(*_fc .Bitmap ,error ){if _dgb .RegionBitmap !=nil {return _dgb .RegionBitmap ,nil ;};if !_dgb .IsHuffmanEncoded {if _abeg :=_dgb .setCodingStatistics ();_abeg !=nil {return nil ,_abeg ;};};if _agcfc :=_dgb .createRegionBitmap ();_agcfc !=nil {return nil ,_agcfc ;};if _abg :=_dgb .decodeSymbolInstances ();_abg !=nil {return nil ,_abg ;};return _dgb .RegionBitmap ,nil ;};var _ templater =&template0 {};func (_ggcd *HalftoneRegion )GetRegionBitmap ()(*_fc .Bitmap ,error ){if _ggcd .HalftoneRegionBitmap !=nil {return _ggcd .HalftoneRegionBitmap ,nil ;};var _ecec error ;_ggcd .HalftoneRegionBitmap =_fc .New (int (_ggcd .RegionSegment .BitmapWidth ),int (_ggcd .RegionSegment .BitmapHeight ));if _ggcd .Patterns ==nil ||len (_ggcd .Patterns )==0{_ggcd .Patterns ,_ecec =_ggcd .GetPatterns ();if _ecec !=nil {return nil ,_ecec ;};};if _ggcd .HDefaultPixel ==1{_ggcd .HalftoneRegionBitmap .SetDefaultPixel ();};_adf :=_g .Ceil (_g .Log (float64 (len (_ggcd .Patterns )))/_g .Log (2));_eebff :=int (_adf );var _abce [][]int ;_abce ,_ecec =_ggcd .grayScaleDecoding (_eebff );if _ecec !=nil {return nil ,_ecec ;};if _ecec =_ggcd .renderPattern (_abce );_ecec !=nil {return nil ,_ecec ;};return _ggcd .HalftoneRegionBitmap ,nil ;};func (_deaf *GenericRegion )decodeTemplate0b (_fgf ,_caca ,_bda int ,_bccf ,_fagb int )(_dagc error ){const _gfba ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0062";var (_baf ,_gcb int ;_daa ,_bced int ;_gddf byte ;_ecf int ;);if _fgf >=1{_gddf ,_dagc =_deaf .Bitmap .GetByte (_fagb );if _dagc !=nil {return _be .Wrap (_dagc ,_gfba ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_daa =int (_gddf );};if _fgf >=2{_gddf ,_dagc =_deaf .Bitmap .GetByte (_fagb -_deaf .Bitmap .RowStride );if _dagc !=nil {return _be .Wrap (_dagc ,_gfba ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_bced =int (_gddf )<<6;};_baf =(_daa &0xf0)|(_bced &0x3800);for _fcca :=0;_fcca < _bda ;_fcca =_ecf {var (_bdd byte ;_ggcb int ;);_ecf =_fcca +8;if _gebf :=_caca -_fcca ;_gebf > 8{_ggcb =8;}else {_ggcb =_gebf ;};if _fgf > 0{_daa <<=8;if _ecf < _caca {_gddf ,_dagc =_deaf .Bitmap .GetByte (_fagb +1);if _dagc !=nil {return _be .Wrap (_dagc ,_gfba ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_daa |=int (_gddf );};};if _fgf > 1{_bced <<=8;if _ecf < _caca {_gddf ,_dagc =_deaf .Bitmap .GetByte (_fagb -_deaf .Bitmap .RowStride +1);if _dagc !=nil {return _be .Wrap (_dagc ,_gfba ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_bced |=int (_gddf )<<6;};};for _agg :=0;_agg < _ggcb ;_agg ++{_eeba :=uint (7-_agg );if _deaf ._abd {_gcb =_deaf .overrideAtTemplate0b (_baf ,_fcca +_agg ,_fgf ,int (_bdd ),_agg ,int (_eeba ));_deaf ._ccda .SetIndex (int32 (_gcb ));}else {_deaf ._ccda .SetIndex (int32 (_baf ));};var _aee int ;_aee ,_dagc =_deaf ._deb .DecodeBit (_deaf ._ccda );if _dagc !=nil {return _be .Wrap (_dagc ,_gfba ,"");};_bdd |=byte (_aee <<uint (_eeba ));_baf =((_baf &0x7bf7)<<1)|_aee |((_daa >>_eeba )&0x10)|((_bced >>_eeba )&0x800);};if _beeg :=_deaf .Bitmap .SetByte (_bccf ,_bdd );_beeg !=nil {return _be .Wrap (_beeg ,_gfba ,"");};_bccf ++;_fagb ++;};return nil ;};func (_fbab *TextRegion )blit (_fcbgg *_fc .Bitmap ,_fegf int64 )error {if _fbab .IsTransposed ==0&&(_fbab .ReferenceCorner ==2||_fbab .ReferenceCorner ==3){_fbab ._dadd +=int64 (_fcbgg .Width -1);}else if _fbab .IsTransposed ==1&&(_fbab .ReferenceCorner ==0||_fbab .ReferenceCorner ==2){_fbab ._dadd +=int64 (_fcbgg .Height -1);};_egef :=_fbab ._dadd ;if _fbab .IsTransposed ==1{_egef ,_fegf =_fegf ,_egef ;};switch _fbab .ReferenceCorner {case 0:_fegf -=int64 (_fcbgg .Height -1);case 2:_fegf -=int64 (_fcbgg .Height -1);_egef -=int64 (_fcbgg .Width -1);case 3:_egef -=int64 (_fcbgg .Width -1);};_acacg :=_fc .Blit (_fcbgg ,_fbab .RegionBitmap ,int (_egef ),int (_fegf ),_fbab .CombinationOperator );if _acacg !=nil {return _acacg ;};if _fbab .IsTransposed ==0&&(_fbab .ReferenceCorner ==0||_fbab .ReferenceCorner ==1){_fbab ._dadd +=int64 (_fcbgg .Width -1);};if _fbab .IsTransposed ==1&&(_fbab .ReferenceCorner ==1||_fbab .ReferenceCorner ==3){_fbab ._dadd +=int64 (_fcbgg .Height -1);};return nil ;};type HalftoneRegion struct{_cbf _ge .StreamReader ;_eaag *Header ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;HDefaultPixel int8 ;CombinationOperator _fc .CombinationOperator ;HSkipEnabled bool ;HTemplate byte ;IsMMREncoded bool ;HGridWidth uint32 ;HGridHeight uint32 ;HGridX int32 ;HGridY int32 ;HRegionX uint16 ;HRegionY uint16 ;HalftoneRegionBitmap *_fc .Bitmap ;Patterns []*_fc .Bitmap ;};func (_accf *TextRegion )decodeSymbolInstances ()error {_dcga ,_gaag :=_accf .decodeStripT ();if _gaag !=nil {return _gaag ;};var (_fffa int64 ;_cdec uint32 ;);for _cdec < _accf .NumberOfSymbolInstances {_aecgd ,_feefa :=_accf .decodeDT ();if _feefa !=nil {return _feefa ;};_dcga +=_aecgd ;var _gea int64 ;_fdcb :=true ;_accf ._dadd =0;for {if _fdcb {_gea ,_feefa =_accf .decodeDfs ();if _feefa !=nil {return _feefa ;};_fffa +=_gea ;_accf ._dadd =_fffa ;_fdcb =false ;}else {_cgfad ,_beae :=_accf .decodeIds ();if _beae !=nil {return _beae ;};if _cgfad ==_g .MaxInt32 ||_cdec >=_accf .NumberOfSymbolInstances {break ;};_accf ._dadd +=_cgfad +int64 (_accf .SbdsOffset );};_dfbe ,_fcag :=_accf .decodeCurrentT ();if _fcag !=nil {return _fcag ;};_cdag :=_dcga +_dfbe ;_cdcc ,_fcag :=_accf .decodeID ();if _fcag !=nil {return _fcag ;};_ddfgd ,_fcag :=_accf .decodeRI ();if _fcag !=nil {return _fcag ;};_aagc ,_fcag :=_accf .decodeIb (_ddfgd ,_cdcc );if _fcag !=nil {return _fcag ;};if _fcag =_accf .blit (_aagc ,_cdag );_fcag !=nil {return _fcag ;};_cdec ++;};};return nil ;};func (_eaf *Header )CleanSegmentData (){if _eaf .SegmentData !=nil {_eaf .SegmentData =nil ;};};func (_deag *Header )GetSegmentData ()(Segmenter ,error ){var _fdce Segmenter ;if _deag .SegmentData !=nil {_fdce =_deag .SegmentData ;};if _fdce ==nil {_effbg ,_acac :=_cfca [_deag .Type ];if !_acac {return nil ,_f .Errorf ("\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0073\u002f\u0020\u0025\u0064\u0020\u0063\u0072e\u0061t\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e\u0020",_deag .Type ,_deag .Type );};_fdce =_effbg ();_bc .Log .Trace ("\u005b\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u0020\u0061\u0074\u0020\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0030\u0034\u0058",_deag .SegmentNumber ,_deag .SegmentDataStartOffset );_dcce ,_dffb :=_deag .subInputReader ();if _dffb !=nil {return nil ,_dffb ;};if _gaad :=_fdce .Init (_deag ,_dcce );_gaad !=nil {_bc .Log .Debug ("\u0049\u006e\u0069\u0074 \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076 \u0066o\u0072\u0020\u0074\u0079\u0070\u0065\u003a \u0025\u0054",_gaad ,_fdce );return nil ,_gaad ;};_deag .SegmentData =_fdce ;};return _fdce ,nil ;};func (_cda *template0 )form (_gfdg ,_bef ,_beb ,_dag ,_dgf int16 )int16 {return (_gfdg <<10)|(_bef <<7)|(_beb <<4)|(_dag <<1)|_dgf ;};func (_fegc *HalftoneRegion )Init (hd *Header ,r _ge .StreamReader )error {_fegc ._cbf =r ;_fegc ._eaag =hd ;_fegc .RegionSegment =NewRegionSegment (r );return _fegc .parseHeader ();};func (_cfe *GenericRegion )decodeLine (_beda ,_dge ,_adc int )error {const _feef ="\u0064\u0065\u0063\u006f\u0064\u0065\u004c\u0069\u006e\u0065";_abde :=_cfe .Bitmap .GetByteIndex (0,_beda );_dfdc :=_abde -_cfe .Bitmap .RowStride ;switch _cfe .GBTemplate {case 0:if !_cfe .UseExtTemplates {return _cfe .decodeTemplate0a (_beda ,_dge ,_adc ,_abde ,_dfdc );};return _cfe .decodeTemplate0b (_beda ,_dge ,_adc ,_abde ,_dfdc );case 1:return _cfe .decodeTemplate1 (_beda ,_dge ,_adc ,_abde ,_dfdc );case 2:return _cfe .decodeTemplate2 (_beda ,_dge ,_adc ,_abde ,_dfdc );case 3:return _cfe .decodeTemplate3 (_beda ,_dge ,_adc ,_abde ,_dfdc );};return _be .Errorf (_feef ,"\u0069\u006e\u0076a\u006c\u0069\u0064\u0020G\u0042\u0054\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u003a\u0020\u0025\u0064",_cfe .GBTemplate );};func (_gcgg *SymbolDictionary )setAtPixels ()error {if _gcgg .IsHuffmanEncoded {return nil ;};_fcbc :=1;if _gcgg .SdTemplate ==0{_fcbc =4;};if _bgbg :=_gcgg .readAtPixels (_fcbc );_bgbg !=nil {return _bgbg ;};return nil ;};func (_fbcb *GenericRegion )readGBAtPixels (_adcg int )error {const _cceb ="\u0072\u0065\u0061\u0064\u0047\u0042\u0041\u0074\u0050i\u0078\u0065\u006c\u0073";_fbcb .GBAtX =make ([]int8 ,_adcg );_fbcb .GBAtY =make ([]int8 ,_adcg );for _cgfe :=0;_cgfe < _adcg ;_cgfe ++{_dda ,_aaba :=_fbcb ._deff .ReadByte ();if _aaba !=nil {return _be .Wrapf (_aaba ,_cceb ,"\u0058\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_cgfe );};_fbcb .GBAtX [_cgfe ]=int8 (_dda );_dda ,_aaba =_fbcb ._deff .ReadByte ();if _aaba !=nil {return _be .Wrapf (_aaba ,_cceb ,"\u0059\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_cgfe );};_fbcb .GBAtY [_cgfe ]=int8 (_dda );};return nil ;};func (_gdegd *SymbolDictionary )huffDecodeRefAggNInst ()(int64 ,error ){if !_gdegd .SdHuffAggInstanceSelection {_dddc ,_debdb :=_db .GetStandardTable (1);if _debdb !=nil {return 0,_debdb ;};return _dddc .Decode (_gdegd ._gabb );};if _gdegd ._dgef ==nil {var (_aagf int ;_gbgf error ;);if _gdegd .SdHuffDecodeHeightSelection ==3{_aagf ++;};if _gdegd .SdHuffDecodeWidthSelection ==3{_aagf ++;};if _gdegd .SdHuffBMSizeSelection ==3{_aagf ++;};_gdegd ._dgef ,_gbgf =_gdegd .getUserTable (_aagf );if _gbgf !=nil {return 0,_gbgf ;};};return _gdegd ._dgef .Decode (_gdegd ._gabb );};func (_bgda *SymbolDictionary )setInSyms ()error {if _bgda .Header .RTSegments !=nil {return _bgda .retrieveImportSymbols ();};_bgda ._gdcd =make ([]*_fc .Bitmap ,0);return nil ;};func (_cbag *Header )readNumberOfReferredToSegments (_cee _ge .StreamReader )(uint64 ,error ){const _dec ="\u0072\u0065\u0061\u0064\u004e\u0075\u006d\u0062\u0065\u0072O\u0066\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";_gef ,_acf :=_cee .ReadBits (3);if _acf !=nil {return 0,_be .Wrap (_acf ,_dec ,"\u0063\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0072\u0074\u0073");};_gef &=0xf;var _ceff []byte ;if _gef <=4{_ceff =make ([]byte ,5);for _aaaag :=0;_aaaag <=4;_aaaag ++{_afed ,_dfcgg :=_cee .ReadBit ();if _dfcgg !=nil {return 0,_be .Wrap (_dfcgg ,_dec ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_ceff [_aaaag ]=byte (_afed );};}else {_gef ,_acf =_cee .ReadBits (29);if _acf !=nil {return 0,_acf ;};_gef &=_g .MaxInt32 ;_gddd :=(_gef +8)>>3;_gddd <<=3;_ceff =make ([]byte ,_gddd );var _abcf uint64 ;for _abcf =0;_abcf < _gddd ;_abcf ++{_bedbc ,_ege :=_cee .ReadBit ();if _ege !=nil {return 0,_be .Wrap (_ege ,_dec ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_ceff [_abcf ]=byte (_bedbc );};};return _gef ,nil ;};func (_bfb *PatternDictionary )readIsMMREncoded ()error {_ebde ,_dbcc :=_bfb ._ebfgb .ReadBit ();if _dbcc !=nil {return _dbcc ;};if _ebde !=0{_bfb .IsMMREncoded =true ;};return nil ;};func (_abge *TextRegion )getUserTable (_eddd int )(_db .Tabler ,error ){const _deaa ="\u0067\u0065\u0074U\u0073\u0065\u0072\u0054\u0061\u0062\u006c\u0065";var _egad int ;for _ ,_cfff :=range _abge .Header .RTSegments {if _cfff .Type ==53{if _egad ==_eddd {_acbae ,_adcb :=_cfff .GetSegmentData ();if _adcb !=nil {return nil ,_adcb ;};_fecf ,_aadb :=_acbae .(*TableSegment );if !_aadb {_bc .Log .Debug (_f .Sprintf ("\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079p\u0065\u00205\u0033\u0020\u002d\u0020\u0061\u006ed\u0020in\u0064\u0065\u0078\u003a\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_cfff .SegmentNumber ));return nil ,_be .Error (_deaa ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079\u0070e\u0020\u0035\u0033\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u002a\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074");};return _db .NewEncodedTable (_fecf );};_egad ++;};};return nil ,nil ;};func (_eeca *TextRegion )checkInput ()error {const _cfebg ="\u0063\u0068\u0065\u0063\u006b\u0049\u006e\u0070\u0075\u0074";if !_eeca .UseRefinement {if _eeca .SbrTemplate !=0{_bc .Log .Debug ("\u0053\u0062\u0072Te\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_eeca .SbrTemplate =0;};};if _eeca .SbHuffFS ==2||_eeca .SbHuffRDWidth ==2||_eeca .SbHuffRDHeight ==2||_eeca .SbHuffRDX ==2||_eeca .SbHuffRDY ==2{return _be .Error (_cfebg ,"h\u0075\u0066\u0066\u006d\u0061\u006e \u0066\u006c\u0061\u0067\u0020\u0076a\u006c\u0075\u0065\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074e\u0064");};if !_eeca .UseRefinement {if _eeca .SbHuffRSize !=0{_bc .Log .Debug ("\u0053\u0062\u0048uf\u0066\u0052\u0053\u0069\u007a\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_eeca .SbHuffRSize =0;};if _eeca .SbHuffRDY !=0{_bc .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044Y\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_eeca .SbHuffRDY =0;};if _eeca .SbHuffRDX !=0{_bc .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044X\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_eeca .SbHuffRDX =0;};if _eeca .SbHuffRDWidth !=0{_bc .Log .Debug ("\u0053b\u0048\u0075\u0066\u0066R\u0044\u0057\u0069\u0064\u0074h\u0020s\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u00200");_eeca .SbHuffRDWidth =0;};if _eeca .SbHuffRDHeight !=0{_bc .Log .Debug ("\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069g\u0068\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0030");_eeca .SbHuffRDHeight =0;};};return nil ;};func (_dbe *GenericRefinementRegion )parseHeader ()(_aca error ){_bc .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0048e\u0061\u0064e\u0072\u002e\u002e\u002e");_gdae :=_bg .Now ();defer func (){if _aca ==nil {_bc .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045G\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020h\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0069\u006e\u0069\u0073\u0068id\u0020\u0069\u006e\u003a\u0020\u0025\u0064\u0020\u006e\u0073",_bg .Since (_gdae ).Nanoseconds ());}else {_bc .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0068\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0073",_aca );};}();if _aca =_dbe .RegionInfo .parseHeader ();_aca !=nil {return _aca ;};_ ,_aca =_dbe ._fcb .ReadBits (6);if _aca !=nil {return _aca ;};_dbe .IsTPGROn ,_aca =_dbe ._fcb .ReadBool ();if _aca !=nil {return _aca ;};var _ddf int ;_ddf ,_aca =_dbe ._fcb .ReadBit ();if _aca !=nil {return _aca ;};_dbe .TemplateID =int8 (_ddf );switch _dbe .TemplateID {case 0:_dbe .Template =_dbe ._ff ;if _aca =_dbe .readAtPixels ();_aca !=nil {return ;};case 1:_dbe .Template =_dbe ._gag ;};return nil ;};func (_fbad *SymbolDictionary )Init (h *Header ,r _ge .StreamReader )error {_fbad .Header =h ;_fbad ._gabb =r ;return _fbad .parseHeader ();};func (_dbecf *TextRegion )symbolIDCodeLengths ()error {var (_cegd []*_db .Code ;_gecf uint64 ;_eaab _db .Tabler ;_aagfg error ;);for _gedf :=0;_gedf < 35;_gedf ++{_gecf ,_aagfg =_dbecf ._bfd .ReadBits (4);if _aagfg !=nil {return _aagfg ;};_deggf :=int (_gecf &0xf);if _deggf > 0{_cegd =append (_cegd ,_db .NewCode (int32 (_deggf ),0,int32 (_gedf ),false ));};};_eaab ,_aagfg =_db .NewFixedSizeTable (_cegd );if _aagfg !=nil {return _aagfg ;};var (_befg int64 ;_baba uint32 ;_cfae []*_db .Code ;_ccce int64 ;);for _baba < _dbecf .NumberOfSymbols {_ccce ,_aagfg =_eaab .Decode (_dbecf ._bfd );if _aagfg !=nil {return _aagfg ;};if _ccce < 32{if _ccce > 0{_cfae =append (_cfae ,_db .NewCode (int32 (_ccce ),0,int32 (_baba ),false ));};_befg =_ccce ;_baba ++;}else {var _eddde ,_dggad int64 ;switch _ccce {case 32:_gecf ,_aagfg =_dbecf ._bfd .ReadBits (2);if _aagfg !=nil {return _aagfg ;};_eddde =3+int64 (_gecf );if _baba > 0{_dggad =_befg ;};case 33:_gecf ,_aagfg =_dbecf ._bfd .ReadBits (3);if _aagfg !=nil {return _aagfg ;};_eddde =3+int64 (_gecf );case 34:_gecf ,_aagfg =_dbecf ._bfd .ReadBits (7);if _aagfg !=nil {return _aagfg ;};_eddde =11+int64 (_gecf );};for _ggdd :=0;_ggdd < int (_eddde );_ggdd ++{if _dggad > 0{_cfae =append (_cfae ,_db .NewCode (int32 (_dggad ),0,int32 (_baba ),false ));};_baba ++;};};};_dbecf ._bfd .Align ();_dbecf ._cdde ,_aagfg =_db .NewFixedSizeTable (_cfae );return _aagfg ;};func (_fbdf *PageInformationSegment )DefaultPixelValue ()uint8 {return _fbdf ._bgcf };func (_cde *GenericRegion )overrideAtTemplate0a (_gge ,_dgg ,_feff ,_aaa ,_cdeb ,_fffe int )int {if _cde .GBAtOverride [0]{_gge &=0xFFEF;if _cde .GBAtY [0]==0&&_cde .GBAtX [0]>=-int8 (_cdeb ){_gge |=(_aaa >>uint (int8 (_fffe )-_cde .GBAtX [0]&0x1))<<4;}else {_gge |=int (_cde .getPixel (_dgg +int (_cde .GBAtX [0]),_feff +int (_cde .GBAtY [0])))<<4;};};if _cde .GBAtOverride [1]{_gge &=0xFBFF;if _cde .GBAtY [1]==0&&_cde .GBAtX [1]>=-int8 (_cdeb ){_gge |=(_aaa >>uint (int8 (_fffe )-_cde .GBAtX [1]&0x1))<<10;}else {_gge |=int (_cde .getPixel (_dgg +int (_cde .GBAtX [1]),_feff +int (_cde .GBAtY [1])))<<10;};};if _cde .GBAtOverride [2]{_gge &=0xF7FF;if _cde .GBAtY [2]==0&&_cde .GBAtX [2]>=-int8 (_cdeb ){_gge |=(_aaa >>uint (int8 (_fffe )-_cde .GBAtX [2]&0x1))<<11;}else {_gge |=int (_cde .getPixel (_dgg +int (_cde .GBAtX [2]),_feff +int (_cde .GBAtY [2])))<<11;};};if _cde .GBAtOverride [3]{_gge &=0x7FFF;if _cde .GBAtY [3]==0&&_cde .GBAtX [3]>=-int8 (_cdeb ){_gge |=(_aaa >>uint (int8 (_fffe )-_cde .GBAtX [3]&0x1))<<15;}else {_gge |=int (_cde .getPixel (_dgg +int (_cde .GBAtX [3]),_feff +int (_cde .GBAtY [3])))<<15;};};return _gge ;};func (_agbe Type )String ()string {switch _agbe {case TSymbolDictionary :return "\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079";case TIntermediateTextRegion :return "\u0049n\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020T\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateTextRegion :return "I\u006d\u006d\u0065\u0064ia\u0074e\u0020\u0054\u0065\u0078\u0074 \u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessTextRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020L\u006f\u0073\u0073\u006c\u0065\u0073\u0073 \u0054\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TPatternDictionary :return "\u0050a\u0074t\u0065\u0072\u006e\u0020\u0044i\u0063\u0074i\u006f\u006e\u0061\u0072\u0079";case TIntermediateHalftoneRegion :return "\u0049\u006e\u0074\u0065r\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0048\u0061l\u0066t\u006f\u006e\u0065\u0020\u0052\u0065\u0067i\u006f\u006e";case TImmediateHalftoneRegion :return "\u0049m\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u0048\u0061l\u0066t\u006fn\u0065\u0020\u0052\u0065\u0067\u0069\u006fn";case TImmediateLosslessHalftoneRegion :return "\u0049\u006d\u006ded\u0069\u0061\u0074\u0065\u0020\u004c\u006f\u0073\u0073l\u0065s\u0073 \u0048a\u006c\u0066\u0074\u006f\u006e\u0065\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TIntermediateGenericRegion :return "I\u006e\u0074\u0065\u0072\u006d\u0065d\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020R\u0065g\u0069\u006f\u006e";case TImmediateGenericRegion :return "\u0049m\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006ee\u0072\u0069\u0063\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessGenericRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u004c\u006f\u0073\u0073\u006c\u0065\u0073\u0073\u0020\u0047e\u006e\u0065\u0072\u0069\u0063\u0020\u0052e\u0067\u0069\u006f\u006e";case TIntermediateGenericRefinementRegion :return "\u0049\u006e\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0020\u0052\u0065\u0066i\u006e\u0065\u006d\u0065\u006et\u0020\u0052e\u0067\u0069\u006f\u006e";case TImmediateGenericRefinementRegion :return "I\u006d\u006d\u0065\u0064\u0069\u0061t\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020\u0052\u0065\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020\u0052\u0065\u0067\u0069o\u006e";case TImmediateLosslessGenericRefinementRegion :return "\u0049m\u006d\u0065d\u0069\u0061\u0074\u0065 \u004c\u006f\u0073s\u006c\u0065\u0073\u0073\u0020\u0047\u0065\u006e\u0065ri\u0063\u0020\u0052e\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020R\u0065\u0067i\u006f\u006e";case TPageInformation :return "\u0050\u0061g\u0065\u0020\u0049n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e";case TEndOfPage :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0050\u0061\u0067\u0065";case TEndOfStrip :return "\u0045\u006e\u0064 \u004f\u0066\u0020\u0053\u0074\u0072\u0069\u0070";case TEndOfFile :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0046\u0069\u006c\u0065";case TProfiles :return "\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0073";case TTables :return "\u0054\u0061\u0062\u006c\u0065\u0073";case TExtension :return "\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn";case TBitmap :return "\u0042\u0069\u0074\u006d\u0061\u0070";};return "I\u006ev\u0061\u006c\u0069\u0064\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0020Ki\u006e\u0064";};func (_dbba *TableSegment )HtPS ()int32 {return _dbba ._cgfcg };func (_dfc *GenericRegion )String ()string {_gaca :=&_e .Builder {};_gaca .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_gaca .WriteString (_dfc .RegionSegment .String ()+"\u000a");_gaca .WriteString (_f .Sprintf ("\u0009\u002d\u0020Us\u0065\u0045\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_dfc .UseExtTemplates ));_gaca .WriteString (_f .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0044\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_dfc .IsTPGDon ));_gaca .WriteString (_f .Sprintf ("\u0009-\u0020G\u0042\u0054\u0065\u006d\u0070l\u0061\u0074e\u003a\u0020\u0025\u0064\u000a",_dfc .GBTemplate ));_gaca .WriteString (_f .Sprintf ("\t\u002d \u0049\u0073\u004d\u004d\u0052\u0045\u006e\u0063o\u0064\u0065\u0064\u003a %\u0076\u000a",_dfc .IsMMREncoded ));_gaca .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_dfc .GBAtX ));_gaca .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_dfc .GBAtY ));_gaca .WriteString (_f .Sprintf ("\t\u002d \u0047\u0042\u0041\u0074\u004f\u0076\u0065\u0072r\u0069\u0064\u0065\u003a %\u0076\u000a",_dfc .GBAtOverride ));return _gaca .String ();};func (_ceged *HalftoneRegion )computeY (_edga ,_edae int )int {return _ceged .shiftAndFill (int (_ceged .HGridY )+_edga *int (_ceged .HRegionX )-_edae *int (_ceged .HRegionY ));};type GenericRefinementRegion struct{_ff templater ;_gag templater ;_fcb _ge .StreamReader ;_eb *Header ;RegionInfo *RegionSegment ;IsTPGROn bool ;TemplateID int8 ;Template templater ;GrAtX []int8 ;GrAtY []int8 ;RegionBitmap *_fc .Bitmap ;ReferenceBitmap *_fc .Bitmap ;ReferenceDX int32 ;ReferenceDY int32 ;_ffe *_ce .Decoder ;_bga *_ce .DecoderStats ;_ee bool ;_ec []bool ;};func (_fag *GenericRefinementRegion )decodeTypicalPredictedLineTemplate0 (_bge ,_eag ,_fae ,_dd ,_gcf ,_gda ,_bd ,_aag ,_ebec int )error {var (_afg ,_ag ,_bae ,_gfg ,_cce ,_cd int ;_da byte ;_fbf error ;);if _bge > 0{_da ,_fbf =_fag .RegionBitmap .GetByte (_bd -_fae );if _fbf !=nil {return _fbf ;};_bae =int (_da );};if _aag > 0&&_aag <=_fag .ReferenceBitmap .Height {_da ,_fbf =_fag .ReferenceBitmap .GetByte (_ebec -_dd +_gda );if _fbf !=nil {return _fbf ;};_gfg =int (_da )<<4;};if _aag >=0&&_aag < _fag .ReferenceBitmap .Height {_da ,_fbf =_fag .ReferenceBitmap .GetByte (_ebec +_gda );if _fbf !=nil {return _fbf ;};_cce =int (_da )<<1;};if _aag > -2&&_aag < _fag .ReferenceBitmap .Height -1{_da ,_fbf =_fag .ReferenceBitmap .GetByte (_ebec +_dd +_gda );if _fbf !=nil {return _fbf ;};_cd =int (_da );};_afg =((_bae >>5)&0x6)|((_cd >>2)&0x30)|(_cce &0x180)|(_gfg &0xc00);var _fgd int ;for _bgf :=0;_bgf < _gcf ;_bgf =_fgd {var _beg int ;_fgd =_bgf +8;var _fee int ;if _fee =_eag -_bgf ;_fee > 8{_fee =8;};_gbd :=_fgd < _eag ;_dcfg :=_fgd < _fag .ReferenceBitmap .Width ;_aab :=_gda +1;if _bge > 0{_da =0;if _gbd {_da ,_fbf =_fag .RegionBitmap .GetByte (_bd -_fae +1);if _fbf !=nil {return _fbf ;};};_bae =(_bae <<8)|int (_da );};if _aag > 0&&_aag <=_fag .ReferenceBitmap .Height {var _ffeb int ;if _dcfg {_da ,_fbf =_fag .ReferenceBitmap .GetByte (_ebec -_dd +_aab );if _fbf !=nil {return _fbf ;};_ffeb =int (_da )<<4;};_gfg =(_gfg <<8)|_ffeb ;};if _aag >=0&&_aag < _fag .ReferenceBitmap .Height {var _bac int ;if _dcfg {_da ,_fbf =_fag .ReferenceBitmap .GetByte (_ebec +_aab );if _fbf !=nil {return _fbf ;};_bac =int (_da )<<1;};_cce =(_cce <<8)|_bac ;};if _aag > -2&&_aag < (_fag .ReferenceBitmap .Height -1){_da =0;if _dcfg {_da ,_fbf =_fag .ReferenceBitmap .GetByte (_ebec +_dd +_aab );if _fbf !=nil {return _fbf ;};};_cd =(_cd <<8)|int (_da );};for _dfd :=0;_dfd < _fee ;_dfd ++{var _eg int ;_dcdg :=false ;_bf :=(_afg >>4)&0x1ff;if _bf ==0x1ff{_dcdg =true ;_eg =1;}else if _bf ==0x00{_dcdg =true ;};if !_dcdg {if _fag ._ee {_ag =_fag .overrideAtTemplate0 (_afg ,_bgf +_dfd ,_bge ,_beg ,_dfd );_fag ._bga .SetIndex (int32 (_ag ));}else {_fag ._bga .SetIndex (int32 (_afg ));};_eg ,_fbf =_fag ._ffe .DecodeBit (_fag ._bga );if _fbf !=nil {return _fbf ;};};_cdc :=uint (7-_dfd );_beg |=int (_eg <<_cdc );_afg =((_afg &0xdb6)<<1)|_eg |(_bae >>_cdc +5)&0x002|((_cd >>_cdc +2)&0x010)|((_cce >>_cdc )&0x080)|((_gfg >>_cdc )&0x400);};_fbf =_fag .RegionBitmap .SetByte (_bd ,byte (_beg ));if _fbf !=nil {return _fbf ;};_bd ++;_ebec ++;};return nil ;};func (_bebb *PatternDictionary )computeSegmentDataStructure ()error {_bebb .DataOffset =_bebb ._ebfgb .StreamPosition ();_bebb .DataHeaderLength =_bebb .DataOffset -_bebb .DataHeaderOffset ;_bebb .DataLength =int64 (_bebb ._ebfgb .Length ())-_bebb .DataHeaderLength ;return nil ;};func (_defff *PageInformationSegment )Encode (w _ge .BinaryWriter )(_fgg int ,_cdgd error ){const _bbdc ="\u0050\u0061g\u0065\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u002e\u0045\u006eco\u0064\u0065";_aabcd :=make ([]byte ,4);_a .BigEndian .PutUint32 (_aabcd ,uint32 (_defff .PageBMWidth ));_fgg ,_cdgd =w .Write (_aabcd );if _cdgd !=nil {return _fgg ,_be .Wrap (_cdgd ,_bbdc ,"\u0077\u0069\u0064t\u0068");};_a .BigEndian .PutUint32 (_aabcd ,uint32 (_defff .PageBMHeight ));var _cdce int ;_cdce ,_cdgd =w .Write (_aabcd );if _cdgd !=nil {return _cdce +_fgg ,_be .Wrap (_cdgd ,_bbdc ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_fgg +=_cdce ;_a .BigEndian .PutUint32 (_aabcd ,uint32 (_defff .ResolutionX ));_cdce ,_cdgd =w .Write (_aabcd );if _cdgd !=nil {return _cdce +_fgg ,_be .Wrap (_cdgd ,_bbdc ,"\u0078\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_fgg +=_cdce ;_a .BigEndian .PutUint32 (_aabcd ,uint32 (_defff .ResolutionY ));if _cdce ,_cdgd =w .Write (_aabcd );_cdgd !=nil {return _cdce +_fgg ,_be .Wrap (_cdgd ,_bbdc ,"\u0079\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_fgg +=_cdce ;if _cdgd =_defff .encodeFlags (w );_cdgd !=nil {return _fgg ,_be .Wrap (_cdgd ,_bbdc ,"");};_fgg ++;if _cdce ,_cdgd =_defff .encodeStripingInformation (w );_cdgd !=nil {return _fgg ,_be .Wrap (_cdgd ,_bbdc ,"");};_fgg +=_cdce ;return _fgg ,nil ;};