//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package segments ;import (_d "encoding/binary";_dc "errors";_f "fmt";_ge "github.com/unidoc/unipdf/v3/common";_ca "github.com/unidoc/unipdf/v3/internal/bitwise";_agc "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_ag "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";
_cd "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/arithmetic";_ga "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/huffman";_fd "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/mmr";_g "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/arithmetic";
_cbg "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_cb "github.com/unidoc/unipdf/v3/internal/jbig2/internal";_b "golang.org/x/xerrors";_eg "image";_a "io";_c "math";_dba "strings";_db "time";);func (_eddd *HalftoneRegion )computeSegmentDataStructure ()error {_eddd .DataOffset =_eddd ._abab .StreamPosition ();
_eddd .DataHeaderLength =_eddd .DataOffset -_eddd .DataHeaderOffset ;_eddd .DataLength =int64 (_eddd ._abab .Length ())-_eddd .DataHeaderLength ;return nil ;};func (_cef *HalftoneRegion )computeY (_efbf ,_bgcg int )int {return _cef .shiftAndFill (int (_cef .HGridY )+_efbf *int (_cef .HRegionX )-_bgcg *int (_cef .HRegionY ));
};func (_egce *PageInformationSegment )readCombinationOperatorOverrideAllowed ()error {_gafb ,_cccf :=_egce ._gaec .ReadBit ();if _cccf !=nil {return _cccf ;};if _gafb ==1{_egce ._bfd =true ;};return nil ;};func (_ccafa *Header )writeFlags (_daac _ca .BinaryWriter )(_daaac error ){const _dcfa ="\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065F\u006c\u0061\u0067\u0073";
_dbd :=byte (_ccafa .Type );if _daaac =_daac .WriteByte (_dbd );_daaac !=nil {return _cbg .Wrap (_daaac ,_dcfa ,"\u0077\u0072\u0069ti\u006e\u0067\u0020\u0073\u0065\u0067\u006d\u0065\u006et\u0020t\u0079p\u0065 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};if !_ccafa .RetainFlag &&!_ccafa .PageAssociationFieldSize {return nil ;};if _daaac =_daac .SkipBits (-8);_daaac !=nil {return _cbg .Wrap (_daaac ,_dcfa ,"\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0062\u0061\u0063\u006b\u0020\u0074\u0068\u0065\u0020\u0062\u0069\u0074\u0073\u0020\u0066\u0061il\u0065\u0064");
};var _febgc int ;if _ccafa .RetainFlag {_febgc =1;};if _daaac =_daac .WriteBit (_febgc );_daaac !=nil {return _cbg .Wrap (_daaac ,_dcfa ,"\u0072\u0065\u0074\u0061in\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067\u0073");};_febgc =0;
if _ccafa .PageAssociationFieldSize {_febgc =1;};if _daaac =_daac .WriteBit (_febgc );_daaac !=nil {return _cbg .Wrap (_daaac ,_dcfa ,"p\u0061\u0067\u0065\u0020as\u0073o\u0063\u0069\u0061\u0074\u0069o\u006e\u0020\u0066\u006c\u0061\u0067");};_daac .FinishByte ();
return nil ;};func (_ebgb *SymbolDictionary )decodeHeightClassDeltaHeight ()(int64 ,error ){if _ebgb .IsHuffmanEncoded {return _ebgb .decodeHeightClassDeltaHeightWithHuffman ();};_ebaf ,_gggfg :=_ebgb ._bcd .DecodeInt (_ebgb ._fcfed );if _gggfg !=nil {return 0,_gggfg ;
};return int64 (_ebaf ),nil ;};func (_cgfd *Header )referenceSize ()uint {switch {case _cgfd .SegmentNumber <=255:return 1;case _cgfd .SegmentNumber <=65535:return 2;default:return 4;};};func (_bbf *GenericRefinementRegion )GetRegionBitmap ()(*_ag .Bitmap ,error ){var _af error ;
_ge .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _af !=nil {_ge .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0047\u0065\u0074R\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006dap\u0020\u0066a\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_af );
}else {_ge .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _bbf .RegionBitmap !=nil {return _bbf .RegionBitmap ,nil ;};_ac :=0;if _bbf .ReferenceBitmap ==nil {_bbf .ReferenceBitmap ,_af =_bbf .getGrReference ();if _af !=nil {return nil ,_af ;};};if _bbf ._aa ==nil {_bbf ._aa ,_af =_cd .New (_bbf ._da );
if _af !=nil {return nil ,_af ;};};if _bbf ._agb ==nil {_bbf ._agb =_cd .NewStats (8192,1);};_bbf .RegionBitmap =_ag .New (int (_bbf .RegionInfo .BitmapWidth ),int (_bbf .RegionInfo .BitmapHeight ));if _bbf .TemplateID ==0{if _af =_bbf .updateOverride ();
_af !=nil {return nil ,_af ;};};_df :=(_bbf .RegionBitmap .Width +7)&-8;var _afa int ;if _bbf .IsTPGROn {_afa =int (-_bbf .ReferenceDY )*_bbf .ReferenceBitmap .RowStride ;};_gef :=_afa +1;for _ef :=0;_ef < _bbf .RegionBitmap .Height ;_ef ++{if _bbf .IsTPGROn {_acf ,_ab :=_bbf .decodeSLTP ();
if _ab !=nil {return nil ,_ab ;};_ac ^=_acf ;};if _ac ==0{_af =_bbf .decodeOptimized (_ef ,_bbf .RegionBitmap .Width ,_bbf .RegionBitmap .RowStride ,_bbf .ReferenceBitmap .RowStride ,_df ,_afa ,_gef );if _af !=nil {return nil ,_af ;};}else {_af =_bbf .decodeTypicalPredictedLine (_ef ,_bbf .RegionBitmap .Width ,_bbf .RegionBitmap .RowStride ,_bbf .ReferenceBitmap .RowStride ,_df ,_afa );
if _af !=nil {return nil ,_af ;};};};return _bbf .RegionBitmap ,nil ;};func (_agca *PageInformationSegment )readContainsRefinement ()error {_fbcf ,_agg :=_agca ._gaec .ReadBit ();if _agg !=nil {return _agg ;};if _fbcf ==1{_agca ._cfec =true ;};return nil ;
};func (_dbed *GenericRegion )GetRegionInfo ()*RegionSegment {return _dbed .RegionSegment };func (_beec *Header )readHeaderLength (_gebf _ca .StreamReader ,_dbga int64 ){_beec .HeaderLength =_gebf .StreamPosition ()-_dbga ;};func (_cga *GenericRegion )parseHeader ()(_fgcc error ){_ge .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052I\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0050\u0061\u0072s\u0069\u006e\u0067\u0048\u0065\u0061\u0064e\u0072\u002e\u002e\u002e");
defer func (){if _fgcc !=nil {_ge .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e]\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065r\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0077\u0069th\u0020\u0065\u0072\u0072\u006f\u0072\u002e\u0020\u0025\u0076",_fgcc );
}else {_ge .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049C\u002d\u0052\u0045G\u0049\u004f\u004e]\u0020\u0050a\u0072\u0073\u0069\u006e\u0067\u0048e\u0061de\u0072\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0053\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079\u002e\u002e\u002e");
};}();var (_babba int ;_gddd uint64 ;);if _fgcc =_cga .RegionSegment .parseHeader ();_fgcc !=nil {return _fgcc ;};if _ ,_fgcc =_cga ._gdab .ReadBits (3);_fgcc !=nil {return _fgcc ;};_babba ,_fgcc =_cga ._gdab .ReadBit ();if _fgcc !=nil {return _fgcc ;};
if _babba ==1{_cga .UseExtTemplates =true ;};_babba ,_fgcc =_cga ._gdab .ReadBit ();if _fgcc !=nil {return _fgcc ;};if _babba ==1{_cga .IsTPGDon =true ;};_gddd ,_fgcc =_cga ._gdab .ReadBits (2);if _fgcc !=nil {return _fgcc ;};_cga .GBTemplate =byte (_gddd &0xf);
_babba ,_fgcc =_cga ._gdab .ReadBit ();if _fgcc !=nil {return _fgcc ;};if _babba ==1{_cga .IsMMREncoded =true ;};if !_cga .IsMMREncoded {_daa :=1;if _cga .GBTemplate ==0{_daa =4;if _cga .UseExtTemplates {_daa =12;};};if _fgcc =_cga .readGBAtPixels (_daa );
_fgcc !=nil {return _fgcc ;};};if _fgcc =_cga .computeSegmentDataStructure ();_fgcc !=nil {return _fgcc ;};_ge .Log .Trace ("\u0025\u0073",_cga );return nil ;};func (_ccb *Header )GetSegmentData ()(Segmenter ,error ){var _fad Segmenter ;if _ccb .SegmentData !=nil {_fad =_ccb .SegmentData ;
};if _fad ==nil {_ecbc ,_fda :=_fdb [_ccb .Type ];if !_fda {return nil ,_f .Errorf ("\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0073\u002f\u0020\u0025\u0064\u0020\u0063\u0072e\u0061t\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e\u0020",_ccb .Type ,_ccb .Type );
};_fad =_ecbc ();_ge .Log .Trace ("\u005b\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u0020\u0061\u0074\u0020\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0030\u0034\u0058",_ccb .SegmentNumber ,_ccb .SegmentDataStartOffset );
_eaad ,_ccaff :=_ccb .subInputReader ();if _ccaff !=nil {return nil ,_ccaff ;};if _bddf :=_fad .Init (_ccb ,_eaad );_bddf !=nil {_ge .Log .Debug ("\u0049\u006e\u0069\u0074 \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076 \u0066o\u0072\u0020\u0074\u0079\u0070\u0065\u003a \u0025\u0054",_bddf ,_fad );
return nil ,_bddf ;};_ccb .SegmentData =_fad ;};return _fad ,nil ;};func (_ffdd *TextRegion )checkInput ()error {const _gfbc ="\u0063\u0068\u0065\u0063\u006b\u0049\u006e\u0070\u0075\u0074";if !_ffdd .UseRefinement {if _ffdd .SbrTemplate !=0{_ge .Log .Debug ("\u0053\u0062\u0072Te\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");
_ffdd .SbrTemplate =0;};};if _ffdd .SbHuffFS ==2||_ffdd .SbHuffRDWidth ==2||_ffdd .SbHuffRDHeight ==2||_ffdd .SbHuffRDX ==2||_ffdd .SbHuffRDY ==2{return _cbg .Error (_gfbc ,"h\u0075\u0066\u0066\u006d\u0061\u006e \u0066\u006c\u0061\u0067\u0020\u0076a\u006c\u0075\u0065\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074e\u0064");
};if !_ffdd .UseRefinement {if _ffdd .SbHuffRSize !=0{_ge .Log .Debug ("\u0053\u0062\u0048uf\u0066\u0052\u0053\u0069\u007a\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_ffdd .SbHuffRSize =0;};if _ffdd .SbHuffRDY !=0{_ge .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044Y\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");
_ffdd .SbHuffRDY =0;};if _ffdd .SbHuffRDX !=0{_ge .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044X\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_ffdd .SbHuffRDX =0;};if _ffdd .SbHuffRDWidth !=0{_ge .Log .Debug ("\u0053b\u0048\u0075\u0066\u0066R\u0044\u0057\u0069\u0064\u0074h\u0020s\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u00200");
_ffdd .SbHuffRDWidth =0;};if _ffdd .SbHuffRDHeight !=0{_ge .Log .Debug ("\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069g\u0068\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0030");_ffdd .SbHuffRDHeight =0;};};return nil ;
};func (_gdea *GenericRegion )String ()string {_cfcg :=&_dba .Builder {};_cfcg .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_cfcg .WriteString (_gdea .RegionSegment .String ()+"\u000a");_cfcg .WriteString (_f .Sprintf ("\u0009\u002d\u0020Us\u0065\u0045\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_gdea .UseExtTemplates ));
_cfcg .WriteString (_f .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0044\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_gdea .IsTPGDon ));_cfcg .WriteString (_f .Sprintf ("\u0009-\u0020G\u0042\u0054\u0065\u006d\u0070l\u0061\u0074e\u003a\u0020\u0025\u0064\u000a",_gdea .GBTemplate ));
_cfcg .WriteString (_f .Sprintf ("\t\u002d \u0049\u0073\u004d\u004d\u0052\u0045\u006e\u0063o\u0064\u0065\u0064\u003a %\u0076\u000a",_gdea .IsMMREncoded ));_cfcg .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_gdea .GBAtX ));
_cfcg .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_gdea .GBAtY ));_cfcg .WriteString (_f .Sprintf ("\t\u002d \u0047\u0042\u0041\u0074\u004f\u0076\u0065\u0072r\u0069\u0064\u0065\u003a %\u0076\u000a",_gdea .GBAtOverride ));
return _cfcg .String ();};func (_gacdc *PatternDictionary )GetDictionary ()([]*_ag .Bitmap ,error ){if _gacdc .Patterns !=nil {return _gacdc .Patterns ,nil ;};if !_gacdc .IsMMREncoded {_gacdc .setGbAtPixels ();};_gbbb :=NewGenericRegion (_gacdc ._cggb );
_gbbb .setParametersMMR (_gacdc .IsMMREncoded ,_gacdc .DataOffset ,_gacdc .DataLength ,uint32 (_gacdc .HdpHeight ),(_gacdc .GrayMax +1)*uint32 (_gacdc .HdpWidth ),_gacdc .HDTemplate ,false ,false ,_gacdc .GBAtX ,_gacdc .GBAtY );_aebf ,_ddbf :=_gbbb .GetRegionBitmap ();
if _ddbf !=nil {return nil ,_ddbf ;};if _ddbf =_gacdc .extractPatterns (_aebf );_ddbf !=nil {return nil ,_ddbf ;};return _gacdc .Patterns ,nil ;};func (_adbc *GenericRegion )decodeSLTP ()(int ,error ){switch _adbc .GBTemplate {case 0:_adbc ._fcb .SetIndex (0x9B25);
case 1:_adbc ._fcb .SetIndex (0x795);case 2:_adbc ._fcb .SetIndex (0xE5);case 3:_adbc ._fcb .SetIndex (0x195);};return _adbc ._feb .DecodeBit (_adbc ._fcb );};func (_cgbe *PageInformationSegment )CombinationOperatorOverrideAllowed ()bool {return _cgbe ._bfd };
func (_agdg *TextRegion )blit (_gbag *_ag .Bitmap ,_egcc int64 )error {if _agdg .IsTransposed ==0&&(_agdg .ReferenceCorner ==2||_agdg .ReferenceCorner ==3){_agdg ._fagd +=int64 (_gbag .Width -1);}else if _agdg .IsTransposed ==1&&(_agdg .ReferenceCorner ==0||_agdg .ReferenceCorner ==2){_agdg ._fagd +=int64 (_gbag .Height -1);
};_dcfcd :=_agdg ._fagd ;if _agdg .IsTransposed ==1{_dcfcd ,_egcc =_egcc ,_dcfcd ;};switch _agdg .ReferenceCorner {case 0:_egcc -=int64 (_gbag .Height -1);case 2:_egcc -=int64 (_gbag .Height -1);_dcfcd -=int64 (_gbag .Width -1);case 3:_dcfcd -=int64 (_gbag .Width -1);
};_bcbc :=_ag .Blit (_gbag ,_agdg .RegionBitmap ,int (_dcfcd ),int (_egcc ),_agdg .CombinationOperator );if _bcbc !=nil {return _bcbc ;};if _agdg .IsTransposed ==0&&(_agdg .ReferenceCorner ==0||_agdg .ReferenceCorner ==1){_agdg ._fagd +=int64 (_gbag .Width -1);
};if _agdg .IsTransposed ==1&&(_agdg .ReferenceCorner ==1||_agdg .ReferenceCorner ==3){_agdg ._fagd +=int64 (_gbag .Height -1);};return nil ;};func (_fdg *GenericRefinementRegion )updateOverride ()error {if _fdg .GrAtX ==nil ||_fdg .GrAtY ==nil {return _dc .New ("\u0041\u0054\u0020\u0070\u0069\u0078\u0065\u006c\u0073\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");
};if len (_fdg .GrAtX )!=len (_fdg .GrAtY ){return _dc .New ("A\u0054\u0020\u0070\u0069xe\u006c \u0069\u006e\u0063\u006f\u006es\u0069\u0073\u0074\u0065\u006e\u0074");};_fdg ._gea =make ([]bool ,len (_fdg .GrAtX ));switch _fdg .TemplateID {case 0:if _fdg .GrAtX [0]!=-1&&_fdg .GrAtY [0]!=-1{_fdg ._gea [0]=true ;
_fdg ._ad =true ;};if _fdg .GrAtX [1]!=-1&&_fdg .GrAtY [1]!=-1{_fdg ._gea [1]=true ;_fdg ._ad =true ;};case 1:_fdg ._ad =false ;};return nil ;};func (_dcg *GenericRefinementRegion )overrideAtTemplate0 (_gfg ,_gce ,_bacc ,_eaa ,_gde int )int {if _dcg ._gea [0]{_gfg &=0xfff7;
if _dcg .GrAtY [0]==0&&int (_dcg .GrAtX [0])>=-_gde {_gfg |=(_eaa >>uint (7-(_gde +int (_dcg .GrAtX [0])))&0x1)<<3;}else {_gfg |=_dcg .getPixel (_dcg .RegionBitmap ,_gce +int (_dcg .GrAtX [0]),_bacc +int (_dcg .GrAtY [0]))<<3;};};if _dcg ._gea [1]{_gfg &=0xefff;
if _dcg .GrAtY [1]==0&&int (_dcg .GrAtX [1])>=-_gde {_gfg |=(_eaa >>uint (7-(_gde +int (_dcg .GrAtX [1])))&0x1)<<12;}else {_gfg |=_dcg .getPixel (_dcg .ReferenceBitmap ,_gce +int (_dcg .GrAtX [1]),_bacc +int (_dcg .GrAtY [1]));};};return _gfg ;};func (_eegd *TextRegion )GetRegionBitmap ()(*_ag .Bitmap ,error ){if _eegd .RegionBitmap !=nil {return _eegd .RegionBitmap ,nil ;
};if !_eegd .IsHuffmanEncoded {if _fefcf :=_eegd .setCodingStatistics ();_fefcf !=nil {return nil ,_fefcf ;};};if _ecdcg :=_eegd .createRegionBitmap ();_ecdcg !=nil {return nil ,_ecdcg ;};if _fcbg :=_eegd .decodeSymbolInstances ();_fcbg !=nil {return nil ,_fcbg ;
};return _eegd .RegionBitmap ,nil ;};func (_bgb *PageInformationSegment )readDefaultPixelValue ()error {_edgc ,_cacc :=_bgb ._gaec .ReadBit ();if _cacc !=nil {return _cacc ;};_bgb .DefaultPixelValue =uint8 (_edgc &0xf);return nil ;};func (_ccfa *GenericRegion )InitEncode (bm *_ag .Bitmap ,xLoc ,yLoc ,template int ,duplicateLineRemoval bool )error {const _gceg ="\u0047e\u006e\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069\u006f\u006e.\u0049\u006e\u0069\u0074\u0045\u006e\u0063\u006f\u0064\u0065";
if bm ==nil {return _cbg .Error (_gceg ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if xLoc < 0||yLoc < 0{return _cbg .Error (_gceg ,"\u0078\u0020\u0061\u006e\u0064\u0020\u0079\u0020\u006c\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074h\u0061\u006e\u0020\u0030");
};_ccfa .Bitmap =bm ;_ccfa .GBTemplate =byte (template );switch _ccfa .GBTemplate {case 0:_ccfa .GBAtX =[]int8 {3,-3,2,-2};_ccfa .GBAtY =[]int8 {-1,-1,-2,-2};case 1:_ccfa .GBAtX =[]int8 {3};_ccfa .GBAtY =[]int8 {-1};case 2,3:_ccfa .GBAtX =[]int8 {2};_ccfa .GBAtY =[]int8 {-1};
default:return _cbg .Errorf (_gceg ,"\u0070\u0072o\u0076\u0069\u0064\u0065\u0064 \u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u007b\u0030\u002c\u0031\u002c\u0032\u002c\u0033\u007d",template );
};_ccfa .RegionSegment =&RegionSegment {BitmapHeight :uint32 (bm .Height ),BitmapWidth :uint32 (bm .Width ),XLocation :uint32 (xLoc ),YLocation :uint32 (yLoc )};_ccfa .IsTPGDon =duplicateLineRemoval ;return nil ;};func (_eggab *PatternDictionary )checkInput ()error {if _eggab .HdpHeight < 1||_eggab .HdpWidth < 1{return _dc .New ("in\u0076\u0061l\u0069\u0064\u0020\u0048\u0065\u0061\u0064\u0065\u0072 \u0056\u0061\u006c\u0075\u0065\u003a\u0020\u0057\u0069\u0064\u0074\u0068\u002f\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020g\u0072e\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020z\u0065\u0072o");
};if _eggab .IsMMREncoded {if _eggab .HDTemplate !=0{_ge .Log .Debug ("\u0076\u0061\u0072\u0069\u0061\u0062\u006c\u0065\u0020\u0048\u0044\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e \u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030");
};};return nil ;};func (_aeab *TextRegion )decodeDfs ()(int64 ,error ){if _aeab .IsHuffmanEncoded {if _aeab .SbHuffFS ==3{if _aeab ._cged ==nil {var _gaea error ;_aeab ._cged ,_gaea =_aeab .getUserTable (0);if _gaea !=nil {return 0,_gaea ;};};return _aeab ._cged .Decode (_aeab ._ccbg );
};_cegbb ,_bfdb :=_ga .GetStandardTable (6+int (_aeab .SbHuffFS ));if _bfdb !=nil {return 0,_bfdb ;};return _cegbb .Decode (_aeab ._ccbg );};_dcbd ,_daaca :=_aeab ._ffad .DecodeInt (_aeab ._daed );if _daaca !=nil {return 0,_daaca ;};return int64 (_dcbd ),nil ;
};func (_deae *PageInformationSegment )readMaxStripeSize ()error {_efcbf ,_dfcc :=_deae ._gaec .ReadBits (15);if _dfcc !=nil {return _dfcc ;};_deae .MaxStripeSize =uint16 (_efcbf &_c .MaxUint16 );return nil ;};func (_gfea *GenericRegion )GetRegionBitmap ()(_dbbe *_ag .Bitmap ,_dde error ){if _gfea .Bitmap !=nil {return _gfea .Bitmap ,nil ;
};if _gfea .IsMMREncoded {if _gfea ._dabga ==nil {_gfea ._dabga ,_dde =_fd .New (_gfea ._gdab ,int (_gfea .RegionSegment .BitmapWidth ),int (_gfea .RegionSegment .BitmapHeight ),_gfea .DataOffset ,_gfea .DataLength );if _dde !=nil {return nil ,_dde ;};
};_gfea .Bitmap ,_dde =_gfea ._dabga .UncompressMMR ();return _gfea .Bitmap ,_dde ;};if _dde =_gfea .updateOverrideFlags ();_dde !=nil {return nil ,_dde ;};var _deg int ;if _gfea ._feb ==nil {_gfea ._feb ,_dde =_cd .New (_gfea ._gdab );if _dde !=nil {return nil ,_dde ;
};};if _gfea ._fcb ==nil {_gfea ._fcb =_cd .NewStats (65536,1);};_gfea .Bitmap =_ag .New (int (_gfea .RegionSegment .BitmapWidth ),int (_gfea .RegionSegment .BitmapHeight ));_ggaa :=int (uint32 (_gfea .Bitmap .Width +7)&(^uint32 (7)));for _add :=0;_add < _gfea .Bitmap .Height ;
_add ++{if _gfea .IsTPGDon {var _bba int ;_bba ,_dde =_gfea .decodeSLTP ();if _dde !=nil {return nil ,_dde ;};_deg ^=_bba ;};if _deg ==1{if _add > 0{if _dde =_gfea .copyLineAbove (_add );_dde !=nil {return nil ,_dde ;};};}else {if _dde =_gfea .decodeLine (_add ,_gfea .Bitmap .Width ,_ggaa );
_dde !=nil {return nil ,_dde ;};};};return _gfea .Bitmap ,nil ;};func (_ddae *GenericRegion )Init (h *Header ,r _ca .StreamReader )error {_ddae .RegionSegment =NewRegionSegment (r );_ddae ._gdab =r ;return _ddae .parseHeader ();};type OrganizationType uint8 ;
type Regioner interface{GetRegionBitmap ()(*_ag .Bitmap ,error );GetRegionInfo ()*RegionSegment ;};func (_abc *SymbolDictionary )setCodingStatistics ()error {if _abc ._gadgf ==nil {_abc ._gadgf =_cd .NewStats (512,1);};if _abc ._fcfed ==nil {_abc ._fcfed =_cd .NewStats (512,1);
};if _abc ._deda ==nil {_abc ._deda =_cd .NewStats (512,1);};if _abc ._cbbdf ==nil {_abc ._cbbdf =_cd .NewStats (512,1);};if _abc ._ffaf ==nil {_abc ._ffaf =_cd .NewStats (512,1);};if _abc .UseRefinementAggregation &&_abc ._faacd ==nil {_abc ._faacd =_cd .NewStats (1<<uint (_abc ._gbg ),1);
_abc ._dbca =_cd .NewStats (512,1);_abc ._bgeb =_cd .NewStats (512,1);};if _abc ._gdcb ==nil {_abc ._gdcb =_cd .NewStats (65536,1);};if _abc ._bcd ==nil {var _baae error ;_abc ._bcd ,_baae =_cd .New (_abc ._cabd );if _baae !=nil {return _baae ;};};return nil ;
};type TableSegment struct{_bddb _ca .StreamReader ;_acfb int32 ;_dbaf int32 ;_fecd int32 ;_bcgg int32 ;_ccbe int32 ;};func (_acaf *Header )CleanSegmentData (){if _acaf .SegmentData !=nil {_acaf .SegmentData =nil ;};};func (_ccce *SymbolDictionary )encodeSymbols (_gage _ca .BinaryWriter )(_fbcg int ,_aeef error ){const _efcg ="\u0065\u006e\u0063o\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c";
_bagg :=_g .New ();_bagg .Init ();_cdca ,_aeef :=_ccce ._eag .SelectByIndexes (_ccce ._eaga );if _aeef !=nil {return 0,_cbg .Wrap (_aeef ,_efcg ,"\u0069n\u0069\u0074\u0069\u0061\u006c");};_cfgf :=map[*_ag .Bitmap ]int {};for _dcdb ,_bafg :=range _cdca .Values {_cfgf [_bafg ]=_dcdb ;
};_cdca .SortByHeight ();var _cbee ,_ebed int ;_cgec ,_aeef :=_cdca .GroupByHeight ();if _aeef !=nil {return 0,_cbg .Wrap (_aeef ,_efcg ,"");};for _ ,_fde :=range _cgec .Values {_febab :=_fde .Values [0].Height ;_fbbb :=_febab -_cbee ;if _aeef =_bagg .EncodeInteger (_g .IADH ,_fbbb );
_aeef !=nil {return 0,_cbg .Wrapf (_aeef ,_efcg ,"\u0049\u0041\u0044\u0048\u0020\u0066\u006f\u0072\u0020\u0064\u0068\u003a \u0027\u0025\u0064\u0027",_fbbb );};_cbee =_febab ;_cafcg ,_ffaed :=_fde .GroupByWidth ();if _ffaed !=nil {return 0,_cbg .Wrapf (_ffaed ,_efcg ,"\u0068\u0065\u0069g\u0068\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_febab );
};var _cdccd int ;for _ ,_cfedb :=range _cafcg .Values {for _ ,_egab :=range _cfedb .Values {_bdgd :=_egab .Width ;_edeg :=_bdgd -_cdccd ;if _ffaed =_bagg .EncodeInteger (_g .IADW ,_edeg );_ffaed !=nil {return 0,_cbg .Wrapf (_ffaed ,_efcg ,"\u0049\u0041\u0044\u0057\u0020\u0066\u006f\u0072\u0020\u0064\u0077\u003a \u0027\u0025\u0064\u0027",_edeg );
};_cdccd +=_edeg ;if _ffaed =_bagg .EncodeBitmap (_egab ,false );_ffaed !=nil {return 0,_cbg .Wrapf (_ffaed ,_efcg ,"H\u0065i\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u0020W\u0069\u0064\u0074\u0068: \u0025\u0064",_febab ,_bdgd );};_cbab :=_cfgf [_egab ];
_ccce ._dcd [_cbab ]=_ebed ;_ebed ++;};};if _ffaed =_bagg .EncodeOOB (_g .IADW );_ffaed !=nil {return 0,_cbg .Wrap (_ffaed ,_efcg ,"\u0049\u0041\u0044\u0057");};};if _aeef =_bagg .EncodeInteger (_g .IAEX ,0);_aeef !=nil {return 0,_cbg .Wrap (_aeef ,_efcg ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};if _aeef =_bagg .EncodeInteger (_g .IAEX ,len (_ccce ._eaga ));_aeef !=nil {return 0,_cbg .Wrap (_aeef ,_efcg ,"\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0073\u0079m\u0062\u006f\u006c\u0073");};_bagg .Final ();_badd ,_aeef :=_bagg .WriteTo (_gage );
if _aeef !=nil {return 0,_cbg .Wrap (_aeef ,_efcg ,"\u0077\u0072i\u0074\u0069\u006e\u0067 \u0065\u006ec\u006f\u0064\u0065\u0072\u0020\u0063\u006f\u006et\u0065\u0078\u0074\u0020\u0074\u006f\u0020\u0027\u0077\u0027\u0020\u0077r\u0069\u0074\u0065\u0072");
};return int (_badd ),nil ;};func NewGenericRegion (r _ca .StreamReader )*GenericRegion {return &GenericRegion {RegionSegment :NewRegionSegment (r ),_gdab :r };};func (_bacca *Header )writeSegmentPageAssociation (_bcc _ca .BinaryWriter )(_bedd int ,_cac error ){const _cdda ="w\u0072\u0069\u0074\u0065\u0053\u0065g\u006d\u0065\u006e\u0074\u0050\u0061\u0067\u0065\u0041s\u0073\u006f\u0063i\u0061t\u0069\u006f\u006e";
if _bacca .pageSize ()!=4{if _cac =_bcc .WriteByte (byte (_bacca .PageAssociation ));_cac !=nil {return 0,_cbg .Wrap (_cac ,_cdda ,"\u0070\u0061\u0067\u0065\u0053\u0069\u007a\u0065\u0020\u0021\u003d\u0020\u0034");};return 1,nil ;};_agbc :=make ([]byte ,4);
_d .BigEndian .PutUint32 (_agbc ,uint32 (_bacca .PageAssociation ));if _bedd ,_cac =_bcc .Write (_agbc );_cac !=nil {return 0,_cbg .Wrap (_cac ,_cdda ,"\u0034 \u0062y\u0074\u0065\u0020\u0070\u0061g\u0065\u0020n\u0075\u006d\u0062\u0065\u0072");};return _bedd ,nil ;
};func (_egcb *PatternDictionary )readIsMMREncoded ()error {_abed ,_cbde :=_egcb ._cggb .ReadBit ();if _cbde !=nil {return _cbde ;};if _abed !=0{_egcb .IsMMREncoded =true ;};return nil ;};func (_cdcg *Header )writeReferredToSegments (_edb _ca .BinaryWriter )(_cfgb int ,_afgb error ){const _defd ="\u0077\u0072\u0069te\u0052\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
var (_ggeed uint16 ;_eae uint32 ;);_bda :=_cdcg .referenceSize ();_adab :=1;_gfab :=make ([]byte ,_bda );for _ ,_bffg :=range _cdcg .RTSNumbers {switch _bda {case 4:_eae =uint32 (_bffg );_d .BigEndian .PutUint32 (_gfab ,_eae );_adab ,_afgb =_edb .Write (_gfab );
if _afgb !=nil {return 0,_cbg .Wrap (_afgb ,_defd ,"u\u0069\u006e\u0074\u0033\u0032\u0020\u0073\u0069\u007a\u0065");};case 2:_ggeed =uint16 (_bffg );_d .BigEndian .PutUint16 (_gfab ,_ggeed );_adab ,_afgb =_edb .Write (_gfab );if _afgb !=nil {return 0,_cbg .Wrap (_afgb ,_defd ,"\u0075\u0069\u006e\u0074\u0031\u0036");
};default:if _afgb =_edb .WriteByte (byte (_bffg ));_afgb !=nil {return 0,_cbg .Wrap (_afgb ,_defd ,"\u0075\u0069\u006et\u0038");};};_cfgb +=_adab ;};return _cfgb ,nil ;};var (_ Regioner =&TextRegion {};_ Segmenter =&TextRegion {};);func (_cfdb *SymbolDictionary )decodeHeightClassDeltaHeightWithHuffman ()(int64 ,error ){switch _cfdb .SdHuffDecodeHeightSelection {case 0:_cefc ,_efde :=_ga .GetStandardTable (4);
if _efde !=nil {return 0,_efde ;};return _cefc .Decode (_cfdb ._cabd );case 1:_dada ,_dfef :=_ga .GetStandardTable (5);if _dfef !=nil {return 0,_dfef ;};return _dada .Decode (_cfdb ._cabd );case 3:if _cfdb ._dag ==nil {_cbge ,_dcdg :=_ga .GetStandardTable (0);
if _dcdg !=nil {return 0,_dcdg ;};_cfdb ._dag =_cbge ;};return _cfdb ._dag .Decode (_cfdb ._cabd );};return 0,nil ;};func (_ddgc *PageInformationSegment )checkInput ()error {if _ddgc .PageBMHeight ==_c .MaxInt32 {if !_ddgc .IsStripe {_ge .Log .Debug ("P\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0053\u0065\u0067me\u006e\u0074\u002e\u0049s\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0073\u0068ou\u006c\u0064 \u0062\u0065\u0020\u0074\u0072\u0075\u0065\u002e");
};};return nil ;};func (_cfbc *GenericRegion )updateOverrideFlags ()error {const _degb ="\u0075\u0070\u0064\u0061te\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _cfbc .GBAtX ==nil ||_cfbc .GBAtY ==nil {return nil ;};
if len (_cfbc .GBAtX )!=len (_cfbc .GBAtY ){return _cbg .Errorf (_degb ,"i\u006eco\u0073i\u0073t\u0065\u006e\u0074\u0020\u0041T\u0020\u0070\u0069x\u0065\u006c\u002e\u0020\u0041m\u006f\u0075\u006et\u0020\u006f\u0066\u0020\u0027\u0078\u0027\u0020\u0070\u0069\u0078e\u006c\u0073\u003a %d\u002c\u0020\u0041\u006d\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0027\u0079\u0027\u0020\u0070\u0069\u0078e\u006cs\u003a\u0020\u0025\u0064",len (_cfbc .GBAtX ),len (_cfbc .GBAtY ));
};_cfbc .GBAtOverride =make ([]bool ,len (_cfbc .GBAtX ));switch _cfbc .GBTemplate {case 0:if !_cfbc .UseExtTemplates {if _cfbc .GBAtX [0]!=3||_cfbc .GBAtY [0]!=-1{_cfbc .setOverrideFlag (0);};if _cfbc .GBAtX [1]!=-3||_cfbc .GBAtY [1]!=-1{_cfbc .setOverrideFlag (1);
};if _cfbc .GBAtX [2]!=2||_cfbc .GBAtY [2]!=-2{_cfbc .setOverrideFlag (2);};if _cfbc .GBAtX [3]!=-2||_cfbc .GBAtY [3]!=-2{_cfbc .setOverrideFlag (3);};}else {if _cfbc .GBAtX [0]!=-2||_cfbc .GBAtY [0]!=0{_cfbc .setOverrideFlag (0);};if _cfbc .GBAtX [1]!=0||_cfbc .GBAtY [1]!=-2{_cfbc .setOverrideFlag (1);
};if _cfbc .GBAtX [2]!=-2||_cfbc .GBAtY [2]!=-1{_cfbc .setOverrideFlag (2);};if _cfbc .GBAtX [3]!=-1||_cfbc .GBAtY [3]!=-2{_cfbc .setOverrideFlag (3);};if _cfbc .GBAtX [4]!=1||_cfbc .GBAtY [4]!=-2{_cfbc .setOverrideFlag (4);};if _cfbc .GBAtX [5]!=2||_cfbc .GBAtY [5]!=-1{_cfbc .setOverrideFlag (5);
};if _cfbc .GBAtX [6]!=-3||_cfbc .GBAtY [6]!=0{_cfbc .setOverrideFlag (6);};if _cfbc .GBAtX [7]!=-4||_cfbc .GBAtY [7]!=0{_cfbc .setOverrideFlag (7);};if _cfbc .GBAtX [8]!=2||_cfbc .GBAtY [8]!=-2{_cfbc .setOverrideFlag (8);};if _cfbc .GBAtX [9]!=3||_cfbc .GBAtY [9]!=-1{_cfbc .setOverrideFlag (9);
};if _cfbc .GBAtX [10]!=-2||_cfbc .GBAtY [10]!=-2{_cfbc .setOverrideFlag (10);};if _cfbc .GBAtX [11]!=-3||_cfbc .GBAtY [11]!=-1{_cfbc .setOverrideFlag (11);};};case 1:if _cfbc .GBAtX [0]!=3||_cfbc .GBAtY [0]!=-1{_cfbc .setOverrideFlag (0);};case 2:if _cfbc .GBAtX [0]!=2||_cfbc .GBAtY [0]!=-1{_cfbc .setOverrideFlag (0);
};case 3:if _cfbc .GBAtX [0]!=2||_cfbc .GBAtY [0]!=-1{_cfbc .setOverrideFlag (0);};};return nil ;};func (_eccb *TableSegment )HtPS ()int32 {return _eccb ._dbaf };func (_fed *GenericRefinementRegion )decodeTypicalPredictedLineTemplate1 (_cfb ,_fa ,_fcc ,_agcb ,_bbfa ,_dd ,_gdb ,_bbfce ,_bbg int )(_cfg error ){var (_fcd ,_bff int ;
_caf ,_cgf int ;_dgb ,_cbec int ;_fea byte ;);if _cfb > 0{_fea ,_cfg =_fed .RegionBitmap .GetByte (_gdb -_fcc );if _cfg !=nil {return ;};_caf =int (_fea );};if _bbfce > 0&&_bbfce <=_fed .ReferenceBitmap .Height {_fea ,_cfg =_fed .ReferenceBitmap .GetByte (_bbg -_agcb +_dd );
if _cfg !=nil {return ;};_cgf =int (_fea )<<2;};if _bbfce >=0&&_bbfce < _fed .ReferenceBitmap .Height {_fea ,_cfg =_fed .ReferenceBitmap .GetByte (_bbg +_dd );if _cfg !=nil {return ;};_dgb =int (_fea );};if _bbfce > -2&&_bbfce < _fed .ReferenceBitmap .Height -1{_fea ,_cfg =_fed .ReferenceBitmap .GetByte (_bbg +_agcb +_dd );
if _cfg !=nil {return ;};_cbec =int (_fea );};_fcd =((_caf >>5)&0x6)|((_cbec >>2)&0x30)|(_dgb &0xc0)|(_cgf &0x200);_bff =((_cbec >>2)&0x70)|(_dgb &0xc0)|(_cgf &0x700);var _gf int ;for _adbg :=0;_adbg < _bbfa ;_adbg =_gf {var (_bagf int ;_aad int ;);_gf =_adbg +8;
if _bagf =_fa -_adbg ;_bagf > 8{_bagf =8;};_dfg :=_gf < _fa ;_gda :=_gf < _fed .ReferenceBitmap .Width ;_fgc :=_dd +1;if _cfb > 0{_fea =0;if _dfg {_fea ,_cfg =_fed .RegionBitmap .GetByte (_gdb -_fcc +1);if _cfg !=nil {return ;};};_caf =(_caf <<8)|int (_fea );
};if _bbfce > 0&&_bbfce <=_fed .ReferenceBitmap .Height {var _cgg int ;if _gda {_fea ,_cfg =_fed .ReferenceBitmap .GetByte (_bbg -_agcb +_fgc );if _cfg !=nil {return ;};_cgg =int (_fea )<<2;};_cgf =(_cgf <<8)|_cgg ;};if _bbfce >=0&&_bbfce < _fed .ReferenceBitmap .Height {_fea =0;
if _gda {_fea ,_cfg =_fed .ReferenceBitmap .GetByte (_bbg +_fgc );if _cfg !=nil {return ;};};_dgb =(_dgb <<8)|int (_fea );};if _bbfce > -2&&_bbfce < (_fed .ReferenceBitmap .Height -1){_fea =0;if _gda {_fea ,_cfg =_fed .ReferenceBitmap .GetByte (_bbg +_agcb +_fgc );
if _cfg !=nil {return ;};};_cbec =(_cbec <<8)|int (_fea );};for _ccf :=0;_ccf < _bagf ;_ccf ++{var _bga int ;_baf :=(_bff >>4)&0x1ff;switch _baf {case 0x1ff:_bga =1;case 0x00:_bga =0;default:_fed ._agb .SetIndex (int32 (_fcd ));_bga ,_cfg =_fed ._aa .DecodeBit (_fed ._agb );
if _cfg !=nil {return ;};};_faf :=uint (7-_ccf );_aad |=_bga <<_faf ;_fcd =((_fcd &0x0d6)<<1)|_bga |(_caf >>_faf +5)&0x002|((_cbec >>_faf +2)&0x010)|((_dgb >>_faf )&0x040)|((_cgf >>_faf )&0x200);_bff =((_bff &0xdb)<<1)|((_cbec >>_faf +2)&0x010)|((_dgb >>_faf )&0x080)|((_cgf >>_faf )&0x400);
};_cfg =_fed .RegionBitmap .SetByte (_gdb ,byte (_aad ));if _cfg !=nil {return ;};_gdb ++;_bbg ++;};return nil ;};type templater interface{form (_agd ,_ddb ,_aaf ,_daff ,_gga int16 )int16 ;setIndex (_bdg *_cd .DecoderStats );};func (_ccdf *SymbolDictionary )addSymbol (_bfbd Regioner )error {_edea ,_ceaa :=_bfbd .GetRegionBitmap ();
if _ceaa !=nil {return _ceaa ;};_ccdf ._aeaa [_ccdf ._cedf ]=_edea ;_ccdf ._bdde =append (_ccdf ._bdde ,_edea );_ge .Log .Trace ("\u005b\u0053YM\u0042\u004f\u004c \u0044\u0049\u0043\u0054ION\u0041RY\u005d\u0020\u0041\u0064\u0064\u0065\u0064 s\u0079\u006d\u0062\u006f\u006c\u003a\u0020%\u0073",_edea );
return nil ;};func (_egga *HalftoneRegion )renderPattern (_ded [][]int )(_ddaf error ){var _afff ,_cbeg int ;for _cbc :=0;_cbc < int (_egga .HGridHeight );_cbc ++{for _bfga :=0;_bfga < int (_egga .HGridWidth );_bfga ++{_afff =_egga .computeX (_cbc ,_bfga );
_cbeg =_egga .computeY (_cbc ,_bfga );_dcgfe :=_egga .Patterns [_ded [_cbc ][_bfga ]];if _ddaf =_ag .Blit (_dcgfe ,_egga .HalftoneRegionBitmap ,_afff +int (_egga .HGridX ),_cbeg +int (_egga .HGridY ),_egga .CombinationOperator );_ddaf !=nil {return _ddaf ;
};};};return nil ;};func (_dbfa *PageInformationSegment )parseHeader ()(_eeba error ){_ge .Log .Trace ("\u005b\u0050\u0061\u0067\u0065I\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067m\u0065\u006e\u0074\u005d\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u002e\u002e");
defer func (){var _fdgc ="[\u0050\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072m\u0061\u0074\u0069\u006f\u006e\u0053\u0065gm\u0065\u006e\u0074\u005d \u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065ad\u0065\u0072 \u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064";
if _eeba !=nil {_fdgc +="\u0020\u0077\u0069t\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u0020"+_eeba .Error ();}else {_fdgc +="\u0020\u0073\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079";};_ge .Log .Trace (_fdgc );}();if _eeba =_dbfa .readWidthAndHeight ();
_eeba !=nil {return _eeba ;};if _eeba =_dbfa .readResolution ();_eeba !=nil {return _eeba ;};_ ,_eeba =_dbfa ._gaec .ReadBit ();if _eeba !=nil {return _eeba ;};if _eeba =_dbfa .readCombinationOperatorOverrideAllowed ();_eeba !=nil {return _eeba ;};if _eeba =_dbfa .readRequiresAuxiliaryBuffer ();
_eeba !=nil {return _eeba ;};if _eeba =_dbfa .readCombinationOperator ();_eeba !=nil {return _eeba ;};if _eeba =_dbfa .readDefaultPixelValue ();_eeba !=nil {return _eeba ;};if _eeba =_dbfa .readContainsRefinement ();_eeba !=nil {return _eeba ;};if _eeba =_dbfa .readIsLossless ();
_eeba !=nil {return _eeba ;};if _eeba =_dbfa .readIsStriped ();_eeba !=nil {return _eeba ;};if _eeba =_dbfa .readMaxStripeSize ();_eeba !=nil {return _eeba ;};if _eeba =_dbfa .checkInput ();_eeba !=nil {return _eeba ;};_ge .Log .Trace ("\u0025\u0073",_dbfa );
return nil ;};func (_dfcb *PatternDictionary )extractPatterns (_aggb *_ag .Bitmap )error {var _faeae int ;_bef :=make ([]*_ag .Bitmap ,_dfcb .GrayMax +1);for _faeae <=int (_dfcb .GrayMax ){_gdf :=int (_dfcb .HdpWidth )*_faeae ;_cba :=_eg .Rect (_gdf ,0,_gdf +int (_dfcb .HdpWidth ),int (_dfcb .HdpHeight ));
_bgca ,_aafc :=_ag .Extract (_cba ,_aggb );if _aafc !=nil {return _aafc ;};_bef [_faeae ]=_bgca ;_faeae ++;};_dfcb .Patterns =_bef ;return nil ;};func (_dgbb *TextRegion )parseHeader ()error {var _bade error ;_ge .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069n\u0073\u002e\u002e\u002e");
defer func (){if _bade !=nil {_ge .Log .Trace ("\u005b\u0054\u0045\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044E\u0052\u005d\u0020\u0066\u0061i\u006c\u0065d\u002e\u0020\u0025\u0076",_bade );
}else {_ge .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069s\u0068\u0065\u0064\u002e");};}();if _bade =_dgbb .RegionInfo .parseHeader ();
_bade !=nil {return _bade ;};if _bade =_dgbb .readRegionFlags ();_bade !=nil {return _bade ;};if _dgbb .IsHuffmanEncoded {if _bade =_dgbb .readHuffmanFlags ();_bade !=nil {return _bade ;};};if _bade =_dgbb .readUseRefinement ();_bade !=nil {return _bade ;
};if _bade =_dgbb .readAmountOfSymbolInstances ();_bade !=nil {return _bade ;};if _bade =_dgbb .getSymbols ();_bade !=nil {return _bade ;};if _bade =_dgbb .computeSymbolCodeLength ();_bade !=nil {return _bade ;};if _bade =_dgbb .checkInput ();_bade !=nil {return _bade ;
};_ge .Log .Trace ("\u0025\u0073",_dgbb .String ());return nil ;};func (_bcbdc *TextRegion )Encode (w _ca .BinaryWriter )(_fegc int ,_acdf error ){const _fdcf ="\u0054\u0065\u0078\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u002e\u0045n\u0063\u006f\u0064\u0065";
if _fegc ,_acdf =_bcbdc .RegionInfo .Encode (w );_acdf !=nil {return _fegc ,_cbg .Wrap (_acdf ,_fdcf ,"");};var _bgebd int ;if _bgebd ,_acdf =_bcbdc .encodeFlags (w );_acdf !=nil {return _fegc ,_cbg .Wrap (_acdf ,_fdcf ,"");};_fegc +=_bgebd ;if _bgebd ,_acdf =_bcbdc .encodeSymbols (w );
_acdf !=nil {return _fegc ,_cbg .Wrap (_acdf ,_fdcf ,"");};_fegc +=_bgebd ;return _fegc ,nil ;};var _ SegmentEncoder =&RegionSegment {};func (_gecg *TextRegion )Init (header *Header ,r _ca .StreamReader )error {_gecg .Header =header ;_gecg ._ccbg =r ;_gecg .RegionInfo =NewRegionSegment (_gecg ._ccbg );
return _gecg .parseHeader ();};func (_adbge *Header )readReferredToSegmentNumbers (_bbcd _ca .StreamReader ,_cdge int )([]int ,error ){const _dca ="\u0072\u0065\u0061\u0064R\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053e\u0067m\u0065\u006e\u0074\u004e\u0075\u006d\u0062e\u0072\u0073";
_cgfb :=make ([]int ,_cdge );if _cdge > 0{_adbge .RTSegments =make ([]*Header ,_cdge );var (_faea uint64 ;_dgaec error ;);for _gbaa :=0;_gbaa < _cdge ;_gbaa ++{_faea ,_dgaec =_bbcd .ReadBits (byte (_adbge .referenceSize ())<<3);if _dgaec !=nil {return nil ,_cbg .Wrapf (_dgaec ,_dca ,"\u0027\u0025\u0064\u0027 \u0072\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0020\u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u0075\u006db\u0065\u0072",_gbaa );
};_cgfb [_gbaa ]=int (_faea &_c .MaxInt32 );};};return _cgfb ,nil ;};func (_bdb *HalftoneRegion )computeGrayScalePlanes (_bfge []*_ag .Bitmap ,_fedb int )([][]int ,error ){_cgce :=make ([][]int ,_bdb .HGridHeight );for _fcea :=0;_fcea < len (_cgce );_fcea ++{_cgce [_fcea ]=make ([]int ,_bdb .HGridWidth );
};for _cfe :=0;_cfe < int (_bdb .HGridHeight );_cfe ++{for _cfca :=0;_cfca < int (_bdb .HGridWidth );_cfca +=8{var _ggdff int ;if _dfc :=int (_bdb .HGridWidth )-_cfca ;_dfc > 8{_ggdff =8;}else {_ggdff =_dfc ;};_bged :=_bfge [0].GetByteIndex (_cfca ,_cfe );
for _edaf :=0;_edaf < _ggdff ;_edaf ++{_cad :=_edaf +_cfca ;_cgce [_cfe ][_cad ]=0;for _ffb :=0;_ffb < _fedb ;_ffb ++{_ecca ,_ggb :=_bfge [_ffb ].GetByte (_bged );if _ggb !=nil {return nil ,_ggb ;};_dea :=_ecca >>uint (7-_cad &7);_fedc :=_dea &1;_ggffg :=1<<uint (_ffb );
_egaa :=int (_fedc )*_ggffg ;_cgce [_cfe ][_cad ]+=_egaa ;};};};};return _cgce ,nil ;};func (_beca *SymbolDictionary )setRetainedCodingContexts (_bgbb *SymbolDictionary ){_beca ._bcd =_bgbb ._bcd ;_beca .IsHuffmanEncoded =_bgbb .IsHuffmanEncoded ;_beca .UseRefinementAggregation =_bgbb .UseRefinementAggregation ;
_beca .SdTemplate =_bgbb .SdTemplate ;_beca .SdrTemplate =_bgbb .SdrTemplate ;_beca .SdATX =_bgbb .SdATX ;_beca .SdATY =_bgbb .SdATY ;_beca .SdrATX =_bgbb .SdrATX ;_beca .SdrATY =_bgbb .SdrATY ;_beca ._gdcb =_bgbb ._gdcb ;};func (_ecdc *SymbolDictionary )decodeHeightClassBitmap (_ecaf *_ag .Bitmap ,_befg int64 ,_dega int ,_cacd []int )error {for _agab :=_befg ;
_agab < int64 (_ecdc ._cedf );_agab ++{var _eade int ;for _eddg :=_befg ;_eddg <=_agab -1;_eddg ++{_eade +=_cacd [_eddg ];};_abfce :=_eg .Rect (_eade ,0,_eade +_cacd [_agab ],_dega );_eacf ,_ebce :=_ag .Extract (_abfce ,_ecaf );if _ebce !=nil {return _ebce ;
};_ecdc ._aeaa [_agab ]=_eacf ;_ecdc ._bdde =append (_ecdc ._bdde ,_eacf );};return nil ;};func (_cgfde *SymbolDictionary )setInSyms ()error {if _cgfde .Header .RTSegments !=nil {return _cgfde .retrieveImportSymbols ();};_cgfde ._edfd =make ([]*_ag .Bitmap ,0);
return nil ;};type Pager interface{GetSegment (int )(*Header ,error );GetBitmap ()(*_ag .Bitmap ,error );};func (_eaca *HalftoneRegion )checkInput ()error {if _eaca .IsMMREncoded {if _eaca .HTemplate !=0{_ge .Log .Debug ("\u0048\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030",_eaca .HTemplate );
};if _eaca .HSkipEnabled {_ge .Log .Debug ("\u0048\u0053\u006b\u0069\u0070\u0045\u006e\u0061\u0062\u006c\u0065\u0064\u0020\u0030\u0020\u0025\u0076\u0020(\u0073\u0068\u006f\u0075\u006c\u0064\u0020c\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020v\u0061\u006c\u0075\u0065\u0020\u0066\u0061\u006c\u0073\u0065\u0029",_eaca .HSkipEnabled );
};};return nil ;};func (_eaea *SymbolDictionary )readNumberOfNewSymbols ()error {_eaec ,_gcd :=_eaea ._cabd .ReadBits (32);if _gcd !=nil {return _gcd ;};_eaea .NumberOfNewSymbols =uint32 (_eaec &_c .MaxUint32 );return nil ;};func (_fba *GenericRefinementRegion )readAtPixels ()error {_fba .GrAtX =make ([]int8 ,2);
_fba .GrAtY =make ([]int8 ,2);_abg ,_ffg :=_fba ._da .ReadByte ();if _ffg !=nil {return _ffg ;};_fba .GrAtX [0]=int8 (_abg );_abg ,_ffg =_fba ._da .ReadByte ();if _ffg !=nil {return _ffg ;};_fba .GrAtY [0]=int8 (_abg );_abg ,_ffg =_fba ._da .ReadByte ();
if _ffg !=nil {return _ffg ;};_fba .GrAtX [1]=int8 (_abg );_abg ,_ffg =_fba ._da .ReadByte ();if _ffg !=nil {return _ffg ;};_fba .GrAtY [1]=int8 (_abg );return nil ;};func (_acd *GenericRefinementRegion )decodeTypicalPredictedLine (_adg ,_ggd ,_cca ,_aae ,_cgb ,_cbd int )error {_cbe :=_adg -int (_acd .ReferenceDY );
_cfc :=_acd .ReferenceBitmap .GetByteIndex (0,_cbe );_dbae :=_acd .RegionBitmap .GetByteIndex (0,_adg );var _bf error ;switch _acd .TemplateID {case 0:_bf =_acd .decodeTypicalPredictedLineTemplate0 (_adg ,_ggd ,_cca ,_aae ,_cgb ,_cbd ,_dbae ,_cbe ,_cfc );
case 1:_bf =_acd .decodeTypicalPredictedLineTemplate1 (_adg ,_ggd ,_cca ,_aae ,_cgb ,_cbd ,_dbae ,_cbe ,_cfc );};return _bf ;};func (_fead *GenericRegion )decodeLine (_ddc ,_daaa ,_cfa int )error {const _ccaf ="\u0064\u0065\u0063\u006f\u0064\u0065\u004c\u0069\u006e\u0065";
_eba :=_fead .Bitmap .GetByteIndex (0,_ddc );_ace :=_eba -_fead .Bitmap .RowStride ;switch _fead .GBTemplate {case 0:if !_fead .UseExtTemplates {return _fead .decodeTemplate0a (_ddc ,_daaa ,_cfa ,_eba ,_ace );};return _fead .decodeTemplate0b (_ddc ,_daaa ,_cfa ,_eba ,_ace );
case 1:return _fead .decodeTemplate1 (_ddc ,_daaa ,_cfa ,_eba ,_ace );case 2:return _fead .decodeTemplate2 (_ddc ,_daaa ,_cfa ,_eba ,_ace );case 3:return _fead .decodeTemplate3 (_ddc ,_daaa ,_cfa ,_eba ,_ace );};return _cbg .Errorf (_ccaf ,"\u0069\u006e\u0076a\u006c\u0069\u0064\u0020G\u0042\u0054\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u003a\u0020\u0025\u0064",_fead .GBTemplate );
};func (_eefg *GenericRegion )overrideAtTemplate3 (_aedc ,_gba ,_abga ,_cea ,_agdf int )int {_aedc &=0x3EF;if _eefg .GBAtY [0]==0&&_eefg .GBAtX [0]>=-int8 (_agdf ){_aedc |=(_cea >>uint (7-(int8 (_agdf )+_eefg .GBAtX [0]))&0x1)<<4;}else {_aedc |=int (_eefg .getPixel (_gba +int (_eefg .GBAtX [0]),_abga +int (_eefg .GBAtY [0])))<<4;
};return _aedc ;};func (_dbad *RegionSegment )String ()string {_caca :=&_dba .Builder {};_caca .WriteString ("\u0009[\u0052E\u0047\u0049\u004f\u004e\u0020S\u0045\u0047M\u0045\u004e\u0054\u005d\u000a");_caca .WriteString (_f .Sprintf ("\t\u0009\u002d\u0020\u0042\u0069\u0074m\u0061\u0070\u0020\u0028\u0077\u0069d\u0074\u0068\u002c\u0020\u0068\u0065\u0069g\u0068\u0074\u0029\u0020\u005b\u0025\u0064\u0078\u0025\u0064]\u000a",_dbad .BitmapWidth ,_dbad .BitmapHeight ));
_caca .WriteString (_f .Sprintf ("\u0009\u0009\u002d\u0020L\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0028\u0078,\u0079)\u003a\u0020\u005b\u0025\u0064\u002c\u0025d\u005d\u000a",_dbad .XLocation ,_dbad .YLocation ));_caca .WriteString (_f .Sprintf ("\t\u0009\u002d\u0020\u0043\u006f\u006db\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070e\u0072\u0061\u0074o\u0072:\u0020\u0025\u0073",_dbad .CombinaionOperator ));
return _caca .String ();};func (_aggg *SymbolDictionary )readNumberOfExportedSymbols ()error {_gdbg ,_gafbd :=_aggg ._cabd .ReadBits (32);if _gafbd !=nil {return _gafbd ;};_aggg .NumberOfExportedSymbols =uint32 (_gdbg &_c .MaxUint32 );return nil ;};func (_agbca *SymbolDictionary )setAtPixels ()error {if _agbca .IsHuffmanEncoded {return nil ;
};_dgab :=1;if _agbca .SdTemplate ==0{_dgab =4;};if _bdfa :=_agbca .readAtPixels (_dgab );_bdfa !=nil {return _bdfa ;};return nil ;};func (_dgcb *SymbolDictionary )retrieveImportSymbols ()error {for _ ,_eace :=range _dgcb .Header .RTSegments {if _eace .Type ==0{_bbbb ,_dcfc :=_eace .GetSegmentData ();
if _dcfc !=nil {return _dcfc ;};_ebbd ,_cfedf :=_bbbb .(*SymbolDictionary );if !_cfedf {return _f .Errorf ("\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0044\u0061\u0074a\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u003a\u0020%\u0054",_bbbb );
};_bdfba ,_dcfc :=_ebbd .GetDictionary ();if _dcfc !=nil {return _f .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064 \u0073\u0065\u0067m\u0065\u006e\u0074 \u0077\u0069t\u0068\u0020\u0069\u006e\u0064\u0065x\u003a %\u0064\u0020\u0067\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0073",_eace .SegmentNumber ,_dcfc .Error ());
};_dgcb ._edfd =append (_dgcb ._edfd ,_bdfba ...);_dgcb ._fbf +=_ebbd .NumberOfExportedSymbols ;};};return nil ;};func (_gegc *PageInformationSegment )readRequiresAuxiliaryBuffer ()error {_fceg ,_eacd :=_gegc ._gaec .ReadBit ();if _eacd !=nil {return _eacd ;
};if _fceg ==1{_gegc ._abfc =true ;};return nil ;};func (_gfcf *SymbolDictionary )readAtPixels (_ffafa int )error {_gfcf .SdATX =make ([]int8 ,_ffafa );_gfcf .SdATY =make ([]int8 ,_ffafa );var (_bdad byte ;_adcd error ;);for _gadec :=0;_gadec < _ffafa ;
_gadec ++{_bdad ,_adcd =_gfcf ._cabd .ReadByte ();if _adcd !=nil {return _adcd ;};_gfcf .SdATX [_gadec ]=int8 (_bdad );_bdad ,_adcd =_gfcf ._cabd .ReadByte ();if _adcd !=nil {return _adcd ;};_gfcf .SdATY [_gadec ]=int8 (_bdad );};return nil ;};type PageInformationSegment struct{_gaec _ca .StreamReader ;
PageBMHeight int ;PageBMWidth int ;ResolutionX int ;ResolutionY int ;_bfd bool ;_ccdc _ag .CombinationOperator ;_abfc bool ;DefaultPixelValue uint8 ;_cfec bool ;IsLossless bool ;IsStripe bool ;MaxStripeSize uint16 ;};func (_dbab *TextRegion )getSymbols ()error {if _dbab .Header .RTSegments !=nil {return _dbab .initSymbols ();
};return nil ;};func _fgdd (_dfa _ca .StreamReader ,_gbe *Header )*GenericRefinementRegion {return &GenericRefinementRegion {_da :_dfa ,RegionInfo :NewRegionSegment (_dfa ),_daf :_gbe ,_ae :&template0 {},_gd :&template1 {}};};func (_be *EndOfStripe )LineNumber ()int {return _be ._ec };
type PatternDictionary struct{_cggb _ca .StreamReader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;GBAtX []int8 ;GBAtY []int8 ;IsMMREncoded bool ;HDTemplate byte ;HdpWidth byte ;HdpHeight byte ;Patterns []*_ag .Bitmap ;
GrayMax uint32 ;};func (_cdcc *HalftoneRegion )Init (hd *Header ,r _ca .StreamReader )error {_cdcc ._abab =r ;_cdcc ._afgg =hd ;_cdcc .RegionSegment =NewRegionSegment (r );return _cdcc .parseHeader ();};func (_egbdg *PageInformationSegment )readResolution ()error {_gfec ,_fdf :=_egbdg ._gaec .ReadBits (32);
if _fdf !=nil {return _fdf ;};_egbdg .ResolutionX =int (_gfec &_c .MaxInt32 );_gfec ,_fdf =_egbdg ._gaec .ReadBits (32);if _fdf !=nil {return _fdf ;};_egbdg .ResolutionY =int (_gfec &_c .MaxInt32 );return nil ;};func (_gc *EndOfStripe )Init (h *Header ,r _ca .StreamReader )error {_gc ._eb =r ;
return _gc .parseHeader (h ,r );};func (_fdad *TextRegion )decodeSymInRefSize ()(int64 ,error ){const _gefa ="\u0064e\u0063o\u0064\u0065\u0053\u0079\u006dI\u006e\u0052e\u0066\u0053\u0069\u007a\u0065";if _fdad .SbHuffRSize ==0{_afbe ,_ddca :=_ga .GetStandardTable (1);
if _ddca !=nil {return 0,_cbg .Wrap (_ddca ,_gefa ,"");};return _afbe .Decode (_fdad ._ccbg );};if _fdad ._ddbd ==nil {var (_gegf int ;_bdacc error ;);if _fdad .SbHuffFS ==3{_gegf ++;};if _fdad .SbHuffDS ==3{_gegf ++;};if _fdad .SbHuffDT ==3{_gegf ++;};
if _fdad .SbHuffRDWidth ==3{_gegf ++;};if _fdad .SbHuffRDHeight ==3{_gegf ++;};if _fdad .SbHuffRDX ==3{_gegf ++;};if _fdad .SbHuffRDY ==3{_gegf ++;};_fdad ._ddbd ,_bdacc =_fdad .getUserTable (_gegf );if _bdacc !=nil {return 0,_cbg .Wrap (_bdacc ,_gefa ,"");
};};_abbba ,_afeg :=_fdad ._ddbd .Decode (_fdad ._ccbg );if _afeg !=nil {return 0,_cbg .Wrap (_afeg ,_gefa ,"");};return _abbba ,nil ;};func (_eab *GenericRegion )decodeTemplate0b (_ffge ,_ddeb ,_ggc int ,_ceca ,_fbed int )(_ggdf error ){const _fefe ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0062";
var (_gca ,_egb int ;_bbfcf ,_aceb int ;_ccda byte ;_cdf int ;);if _ffge >=1{_ccda ,_ggdf =_eab .Bitmap .GetByte (_fbed );if _ggdf !=nil {return _cbg .Wrap (_ggdf ,_fefe ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_bbfcf =int (_ccda );};if _ffge >=2{_ccda ,_ggdf =_eab .Bitmap .GetByte (_fbed -_eab .Bitmap .RowStride );
if _ggdf !=nil {return _cbg .Wrap (_ggdf ,_fefe ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_aceb =int (_ccda )<<6;};_gca =(_bbfcf &0xf0)|(_aceb &0x3800);for _cafc :=0;_cafc < _ggc ;_cafc =_cdf {var (_ebd byte ;_acc int ;);_cdf =_cafc +8;if _bfa :=_ddeb -_cafc ;
_bfa > 8{_acc =8;}else {_acc =_bfa ;};if _ffge > 0{_bbfcf <<=8;if _cdf < _ddeb {_ccda ,_ggdf =_eab .Bitmap .GetByte (_fbed +1);if _ggdf !=nil {return _cbg .Wrap (_ggdf ,_fefe ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_bbfcf |=int (_ccda );
};};if _ffge > 1{_aceb <<=8;if _cdf < _ddeb {_ccda ,_ggdf =_eab .Bitmap .GetByte (_fbed -_eab .Bitmap .RowStride +1);if _ggdf !=nil {return _cbg .Wrap (_ggdf ,_fefe ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_aceb |=int (_ccda )<<6;};};for _gfgf :=0;
_gfgf < _acc ;_gfgf ++{_fddg :=uint (7-_gfgf );if _eab ._bbfd {_egb =_eab .overrideAtTemplate0b (_gca ,_cafc +_gfgf ,_ffge ,int (_ebd ),_gfgf ,int (_fddg ));_eab ._fcb .SetIndex (int32 (_egb ));}else {_eab ._fcb .SetIndex (int32 (_gca ));};var _cage int ;
_cage ,_ggdf =_eab ._feb .DecodeBit (_eab ._fcb );if _ggdf !=nil {return _cbg .Wrap (_ggdf ,_fefe ,"");};_ebd |=byte (_cage <<_fddg );_gca =((_gca &0x7bf7)<<1)|_cage |((_bbfcf >>_fddg )&0x10)|((_aceb >>_fddg )&0x800);};if _ada :=_eab .Bitmap .SetByte (_ceca ,_ebd );
_ada !=nil {return _cbg .Wrap (_ada ,_fefe ,"");};_ceca ++;_fbed ++;};return nil ;};type SymbolDictionary struct{_cabd _ca .StreamReader ;SdrTemplate int8 ;SdTemplate int8 ;_fagb bool ;_fbgc bool ;SdHuffAggInstanceSelection bool ;SdHuffBMSizeSelection int8 ;
SdHuffDecodeWidthSelection int8 ;SdHuffDecodeHeightSelection int8 ;UseRefinementAggregation bool ;IsHuffmanEncoded bool ;SdATX []int8 ;SdATY []int8 ;SdrATX []int8 ;SdrATY []int8 ;NumberOfExportedSymbols uint32 ;NumberOfNewSymbols uint32 ;Header *Header ;
_fbf uint32 ;_edfd []*_ag .Bitmap ;_cedf uint32 ;_aeaa []*_ag .Bitmap ;_dag _ga .Tabler ;_abae _ga .Tabler ;_bgg _ga .Tabler ;_dade _ga .Tabler ;_cgbf []*_ag .Bitmap ;_bdde []*_ag .Bitmap ;_bcd *_cd .Decoder ;_dfb *TextRegion ;_fbdd *GenericRegion ;_feab *GenericRefinementRegion ;
_gdcb *_cd .DecoderStats ;_fcfed *_cd .DecoderStats ;_deda *_cd .DecoderStats ;_cbbdf *_cd .DecoderStats ;_ffaf *_cd .DecoderStats ;_dbca *_cd .DecoderStats ;_bgeb *_cd .DecoderStats ;_gadgf *_cd .DecoderStats ;_faacd *_cd .DecoderStats ;_gbg int8 ;_eag *_ag .Bitmaps ;
_eaga []int ;_dcd map[int ]int ;_eadc bool ;};func (_gac *GenericRefinementRegion )Init (header *Header ,r _ca .StreamReader )error {_gac ._daf =header ;_gac ._da =r ;_gac .RegionInfo =NewRegionSegment (r );return _gac .parseHeader ();};func (_dced *TextRegion )decodeSymbolInstances ()error {_bfab ,_cgef :=_dced .decodeStripT ();
if _cgef !=nil {return _cgef ;};var (_cabdf int64 ;_efdd uint32 ;);for _efdd < _dced .NumberOfSymbolInstances {_edfgg ,_edgb :=_dced .decodeDT ();if _edgb !=nil {return _edgb ;};_bfab +=_edfgg ;var _cgbc int64 ;_ffc :=true ;_dced ._fagd =0;for {if _ffc {_cgbc ,_edgb =_dced .decodeDfs ();
if _edgb !=nil {return _edgb ;};_cabdf +=_cgbc ;_dced ._fagd =_cabdf ;_ffc =false ;}else {_cbad ,_adea :=_dced .decodeIds ();if _b .Is (_adea ,_cb .ErrOOB ){break ;};if _adea !=nil {return _adea ;};if _efdd >=_dced .NumberOfSymbolInstances {break ;};_dced ._fagd +=_cbad +int64 (_dced .SbDsOffset );
};_dffd ,_befb :=_dced .decodeCurrentT ();if _befb !=nil {return _befb ;};_fgfga :=_bfab +_dffd ;_caac ,_befb :=_dced .decodeID ();if _befb !=nil {return _befb ;};_degc ,_befb :=_dced .decodeRI ();if _befb !=nil {return _befb ;};_cagf ,_befb :=_dced .decodeIb (_degc ,_caac );
if _befb !=nil {return _befb ;};if _befb =_dced .blit (_cagf ,_fgfga );_befb !=nil {return _befb ;};_efdd ++;};};return nil ;};func (_bdbg *Header )writeSegmentDataLength (_bafb _ca .BinaryWriter )(_ffeb int ,_dbdb error ){_egad :=make ([]byte ,4);_d .BigEndian .PutUint32 (_egad ,uint32 (_bdbg .SegmentDataLength ));
if _ffeb ,_dbdb =_bafb .Write (_egad );_dbdb !=nil {return 0,_cbg .Wrap (_dbdb ,"\u0048\u0065a\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u004c\u0065ng\u0074\u0068","");};return _ffeb ,nil ;
};func (_fdgfg *SymbolDictionary )setSymbolsArray ()error {if _fdgfg ._edfd ==nil {if _adgg :=_fdgfg .retrieveImportSymbols ();_adgg !=nil {return _adgg ;};};if _fdgfg ._bdde ==nil {_fdgfg ._bdde =append (_fdgfg ._bdde ,_fdgfg ._edfd ...);};return nil ;
};func (_cedb *SymbolDictionary )huffDecodeBmSize ()(int64 ,error ){if _cedb ._bgg ==nil {var (_fbcc int ;_egabd error ;);if _cedb .SdHuffDecodeHeightSelection ==3{_fbcc ++;};if _cedb .SdHuffDecodeWidthSelection ==3{_fbcc ++;};_cedb ._bgg ,_egabd =_cedb .getUserTable (_fbcc );
if _egabd !=nil {return 0,_egabd ;};};return _cedb ._bgg .Decode (_cedb ._cabd );};type SegmentEncoder interface{Encode (_fccc _ca .BinaryWriter )(_ffae int ,_debd error );};func (_face *TextRegion )decodeRdw ()(int64 ,error ){const _dbgc ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064w";
if _face .IsHuffmanEncoded {if _face .SbHuffRDWidth ==3{if _face ._fgfd ==nil {var (_aggbe int ;_bbgf error ;);if _face .SbHuffFS ==3{_aggbe ++;};if _face .SbHuffDS ==3{_aggbe ++;};if _face .SbHuffDT ==3{_aggbe ++;};_face ._fgfd ,_bbgf =_face .getUserTable (_aggbe );
if _bbgf !=nil {return 0,_cbg .Wrap (_bbgf ,_dbgc ,"");};};return _face ._fgfd .Decode (_face ._ccbg );};_gbaef ,_aec :=_ga .GetStandardTable (14+int (_face .SbHuffRDWidth ));if _aec !=nil {return 0,_cbg .Wrap (_aec ,_dbgc ,"");};return _gbaef .Decode (_face ._ccbg );
};_dbde ,_eecf :=_face ._ffad .DecodeInt (_face ._bffb );if _eecf !=nil {return 0,_cbg .Wrap (_eecf ,_dbgc ,"");};return int64 (_dbde ),nil ;};type Segmenter interface{Init (_fgccb *Header ,_fbad _ca .StreamReader )error ;};func (_fcba *GenericRegion )decodeTemplate0a (_febe ,_bgeg ,_gbb int ,_eea ,_febc int )(_fab error ){const _dgbg ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0061";
var (_cda ,_ecc int ;_ffgg ,_cee int ;_ead byte ;_fcfc int ;);if _febe >=1{_ead ,_fab =_fcba .Bitmap .GetByte (_febc );if _fab !=nil {return _cbg .Wrap (_fab ,_dgbg ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_ffgg =int (_ead );};if _febe >=2{_ead ,_fab =_fcba .Bitmap .GetByte (_febc -_fcba .Bitmap .RowStride );
if _fab !=nil {return _cbg .Wrap (_fab ,_dgbg ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_cee =int (_ead )<<6;};_cda =(_ffgg &0xf0)|(_cee &0x3800);for _ggaaa :=0;_ggaaa < _gbb ;_ggaaa =_fcfc {var (_gdaga byte ;_bbc int ;);_fcfc =_ggaaa +8;if _aade :=_bgeg -_ggaaa ;
_aade > 8{_bbc =8;}else {_bbc =_aade ;};if _febe > 0{_ffgg <<=8;if _fcfc < _bgeg {_ead ,_fab =_fcba .Bitmap .GetByte (_febc +1);if _fab !=nil {return _cbg .Wrap (_fab ,_dgbg ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_ffgg |=int (_ead );};};
if _febe > 1{_cgaa :=_febc -_fcba .Bitmap .RowStride +1;_cee <<=8;if _fcfc < _bgeg {_ead ,_fab =_fcba .Bitmap .GetByte (_cgaa );if _fab !=nil {return _cbg .Wrap (_fab ,_dgbg ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_cee |=int (_ead )<<6;}else {_cee |=0;
};};for _addf :=0;_addf < _bbc ;_addf ++{_gff :=uint (7-_addf );if _fcba ._bbfd {_ecc =_fcba .overrideAtTemplate0a (_cda ,_ggaaa +_addf ,_febe ,int (_gdaga ),_addf ,int (_gff ));_fcba ._fcb .SetIndex (int32 (_ecc ));}else {_fcba ._fcb .SetIndex (int32 (_cda ));
};var _fbgb int ;_fbgb ,_fab =_fcba ._feb .DecodeBit (_fcba ._fcb );if _fab !=nil {return _cbg .Wrap (_fab ,_dgbg ,"");};_gdaga |=byte (_fbgb )<<_gff ;_cda =((_cda &0x7bf7)<<1)|_fbgb |((_ffgg >>_gff )&0x10)|((_cee >>_gff )&0x800);};if _fef :=_fcba .Bitmap .SetByte (_eea ,_gdaga );
_fef !=nil {return _cbg .Wrap (_fef ,_dgbg ,"");};_eea ++;_febc ++;};return nil ;};func (_dac *Header )writeSegmentNumber (_egfad _ca .BinaryWriter )(_egbe int ,_adfe error ){_fgddd :=make ([]byte ,4);_d .BigEndian .PutUint32 (_fgddd ,_dac .SegmentNumber );
if _egbe ,_adfe =_egfad .Write (_fgddd );_adfe !=nil {return 0,_cbg .Wrap (_adfe ,"\u0048e\u0061\u0064\u0065\u0072.\u0077\u0072\u0069\u0074\u0065S\u0065g\u006de\u006e\u0074\u004e\u0075\u006d\u0062\u0065r","");};return _egbe ,nil ;};func (_de *GenericRefinementRegion )getGrReference ()(*_ag .Bitmap ,error ){segments :=_de ._daf .RTSegments ;
if len (segments )==0{return nil ,_dc .New ("\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0065\u0078is\u0074\u0073");};_dbg ,_dg :=segments [0].GetSegmentData ();
if _dg !=nil {return nil ,_dg ;};_edf ,_egc :=_dbg .(Regioner );if !_egc {return nil ,_f .Errorf ("\u0072\u0065\u0066\u0065\u0072r\u0065\u0064\u0020\u0074\u006f\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_dbg );
};return _edf .GetRegionBitmap ();};func (_ecdea *PageInformationSegment )readWidthAndHeight ()error {_adbgec ,_bcfb :=_ecdea ._gaec .ReadBits (32);if _bcfb !=nil {return _bcfb ;};_ecdea .PageBMWidth =int (_adbgec &_c .MaxInt32 );_adbgec ,_bcfb =_ecdea ._gaec .ReadBits (32);
if _bcfb !=nil {return _bcfb ;};_ecdea .PageBMHeight =int (_adbgec &_c .MaxInt32 );return nil ;};const (ORandom OrganizationType =iota ;OSequential ;);type template0 struct{};func (_bbabg *Header )String ()string {_ggcb :=&_dba .Builder {};_ggcb .WriteString ("\u000a[\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045A\u0044\u0045\u0052\u005d\u000a");
_ggcb .WriteString (_f .Sprintf ("\t\u002d\u0020\u0053\u0065gm\u0065n\u0074\u004e\u0075\u006d\u0062e\u0072\u003a\u0020\u0025\u0076\u000a",_bbabg .SegmentNumber ));_ggcb .WriteString (_f .Sprintf ("\u0009\u002d\u0020T\u0079\u0070\u0065\u003a\u0020\u0025\u0076\u000a",_bbabg .Type ));
_ggcb .WriteString (_f .Sprintf ("\u0009-\u0020R\u0065\u0074\u0061\u0069\u006eF\u006c\u0061g\u003a\u0020\u0025\u0076\u000a",_bbabg .RetainFlag ));_ggcb .WriteString (_f .Sprintf ("\u0009\u002d\u0020Pa\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_bbabg .PageAssociation ));
_ggcb .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0050\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074i\u006fn\u0046\u0069\u0065\u006c\u0064\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_bbabg .PageAssociationFieldSize ));
_ggcb .WriteString ("\u0009-\u0020R\u0054\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u0053\u003a\u000a");for _ ,_afe :=range _bbabg .RTSNumbers {_ggcb .WriteString (_f .Sprintf ("\u0009\t\u002d\u0020\u0025\u0064\u000a",_afe ));};_ggcb .WriteString (_f .Sprintf ("\t\u002d \u0048\u0065\u0061\u0064\u0065\u0072\u004c\u0065n\u0067\u0074\u0068\u003a %\u0076\u000a",_bbabg .HeaderLength ));
_ggcb .WriteString (_f .Sprintf ("\u0009-\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061L\u0065n\u0067\u0074\u0068\u003a\u0020\u0025\u0076\n",_bbabg .SegmentDataLength ));_ggcb .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074D\u0061\u0074\u0061\u0053\u0074\u0061\u0072t\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0076\u000a",_bbabg .SegmentDataStartOffset ));
return _ggcb .String ();};func (_abeg *Header )readSegmentNumber (_ecee _ca .StreamReader )error {const _bbfag ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";_afcf :=make ([]byte ,4);_ ,_dbedg :=_ecee .Read (_afcf );
if _dbedg !=nil {return _cbg .Wrap (_dbedg ,_bbfag ,"");};_abeg .SegmentNumber =_d .BigEndian .Uint32 (_afcf );return nil ;};func (_abe *GenericRegion )readGBAtPixels (_afab int )error {const _agfgb ="\u0072\u0065\u0061\u0064\u0047\u0042\u0041\u0074\u0050i\u0078\u0065\u006c\u0073";
_abe .GBAtX =make ([]int8 ,_afab );_abe .GBAtY =make ([]int8 ,_afab );for _fbda :=0;_fbda < _afab ;_fbda ++{_dfd ,_gcbe :=_abe ._gdab .ReadByte ();if _gcbe !=nil {return _cbg .Wrapf (_gcbe ,_agfgb ,"\u0058\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_fbda );
};_abe .GBAtX [_fbda ]=int8 (_dfd );_dfd ,_gcbe =_abe ._gdab .ReadByte ();if _gcbe !=nil {return _cbg .Wrapf (_gcbe ,_agfgb ,"\u0059\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_fbda );};_abe .GBAtY [_fbda ]=int8 (_dfd );};return nil ;
};func (_ecdd *TextRegion )encodeFlags (_gagc _ca .BinaryWriter )(_gaeed int ,_befe error ){const _gbdc ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _befe =_gagc .WriteBit (int (_ecdd .SbrTemplate ));_befe !=nil {return _gaeed ,_cbg .Wrap (_befe ,_gbdc ,"s\u0062\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");
};if _ ,_befe =_gagc .WriteBits (uint64 (_ecdd .SbDsOffset ),5);_befe !=nil {return _gaeed ,_cbg .Wrap (_befe ,_gbdc ,"\u0073\u0062\u0044\u0073\u004f\u0066\u0066\u0073\u0065\u0074");};if _befe =_gagc .WriteBit (int (_ecdd .DefaultPixel ));_befe !=nil {return _gaeed ,_cbg .Wrap (_befe ,_gbdc ,"\u0044\u0065\u0066a\u0075\u006c\u0074\u0050\u0069\u0078\u0065\u006c");
};if _ ,_befe =_gagc .WriteBits (uint64 (_ecdd .CombinationOperator ),2);_befe !=nil {return _gaeed ,_cbg .Wrap (_befe ,_gbdc ,"\u0043\u006f\u006d\u0062in\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072");};if _befe =_gagc .WriteBit (int (_ecdd .IsTransposed ));
_befe !=nil {return _gaeed ,_cbg .Wrap (_befe ,_gbdc ,"\u0069\u0073\u0020\u0074\u0072\u0061\u006e\u0073\u0070\u006f\u0073\u0065\u0064");};if _ ,_befe =_gagc .WriteBits (uint64 (_ecdd .ReferenceCorner ),2);_befe !=nil {return _gaeed ,_cbg .Wrap (_befe ,_gbdc ,"\u0072\u0065f\u0065\u0072\u0065n\u0063\u0065\u0020\u0063\u006f\u0072\u006e\u0065\u0072");
};if _ ,_befe =_gagc .WriteBits (uint64 (_ecdd .LogSBStrips ),2);_befe !=nil {return _gaeed ,_cbg .Wrap (_befe ,_gbdc ,"L\u006f\u0067\u0053\u0042\u0053\u0074\u0072\u0069\u0070\u0073");};var _abgab int ;if _ecdd .UseRefinement {_abgab =1;};if _befe =_gagc .WriteBit (_abgab );
_befe !=nil {return _gaeed ,_cbg .Wrap (_befe ,_gbdc ,"\u0075\u0073\u0065\u0020\u0072\u0065\u0066\u0069\u006ee\u006d\u0065\u006e\u0074");};_abgab =0;if _ecdd .IsHuffmanEncoded {_abgab =1;};if _befe =_gagc .WriteBit (_abgab );_befe !=nil {return _gaeed ,_cbg .Wrap (_befe ,_gbdc ,"u\u0073\u0065\u0020\u0068\u0075\u0066\u0066\u006d\u0061\u006e");
};_gaeed =2;return _gaeed ,nil ;};func (_aefd *HalftoneRegion )GetRegionBitmap ()(*_ag .Bitmap ,error ){if _aefd .HalftoneRegionBitmap !=nil {return _aefd .HalftoneRegionBitmap ,nil ;};var _ddde error ;_aefd .HalftoneRegionBitmap =_ag .New (int (_aefd .RegionSegment .BitmapWidth ),int (_aefd .RegionSegment .BitmapHeight ));
if _aefd .Patterns ==nil ||len (_aefd .Patterns )==0{_aefd .Patterns ,_ddde =_aefd .GetPatterns ();if _ddde !=nil {return nil ,_ddde ;};};if _aefd .HDefaultPixel ==1{_aefd .HalftoneRegionBitmap .SetDefaultPixel ();};_ggef :=_c .Ceil (_c .Log (float64 (len (_aefd .Patterns )))/_c .Log (2));
_gdabe :=int (_ggef );var _dce [][]int ;_dce ,_ddde =_aefd .grayScaleDecoding (_gdabe );if _ddde !=nil {return nil ,_ddde ;};if _ddde =_aefd .renderPattern (_dce );_ddde !=nil {return nil ,_ddde ;};return _aefd .HalftoneRegionBitmap ,nil ;};func (_cgfc *GenericRegion )decodeTemplate2 (_def ,_efd ,_cgc int ,_dga ,_fcaa int )(_bacb error ){const _bde ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0032";
var (_cebg ,_efe int ;_efaf ,_gee int ;_gbbf byte ;_febg ,_edgg int ;);if _def >=1{_gbbf ,_bacb =_cgfc .Bitmap .GetByte (_fcaa );if _bacb !=nil {return _cbg .Wrap (_bacb ,_bde ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0031");
};_efaf =int (_gbbf );};if _def >=2{_gbbf ,_bacb =_cgfc .Bitmap .GetByte (_fcaa -_cgfc .Bitmap .RowStride );if _bacb !=nil {return _cbg .Wrap (_bacb ,_bde ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0032");};_gee =int (_gbbf )<<4;
};_cebg =(_efaf >>3&0x7c)|(_gee >>3&0x380);for _ccfaa :=0;_ccfaa < _cgc ;_ccfaa =_febg {var (_cdbb byte ;_eaf int ;);_febg =_ccfaa +8;if _adda :=_efd -_ccfaa ;_adda > 8{_eaf =8;}else {_eaf =_adda ;};if _def > 0{_efaf <<=8;if _febg < _efd {_gbbf ,_bacb =_cgfc .Bitmap .GetByte (_fcaa +1);
if _bacb !=nil {return _cbg .Wrap (_bacb ,_bde ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0030");};_efaf |=int (_gbbf );};};if _def > 1{_gee <<=8;if _febg < _efd {_gbbf ,_bacb =_cgfc .Bitmap .GetByte (_fcaa -_cgfc .Bitmap .RowStride +1);
if _bacb !=nil {return _cbg .Wrap (_bacb ,_bde ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0031");};_gee |=int (_gbbf )<<4;};};for _eabc :=0;_eabc < _eaf ;_eabc ++{_aea :=uint (10-_eabc );if _cgfc ._bbfd {_efe =_cgfc .overrideAtTemplate2 (_cebg ,_ccfaa +_eabc ,_def ,int (_cdbb ),_eabc );
_cgfc ._fcb .SetIndex (int32 (_efe ));}else {_cgfc ._fcb .SetIndex (int32 (_cebg ));};_edgg ,_bacb =_cgfc ._feb .DecodeBit (_cgfc ._fcb );if _bacb !=nil {return _cbg .Wrap (_bacb ,_bde ,"");};_cdbb |=byte (_edgg <<uint (7-_eabc ));_cebg =((_cebg &0x1bd)<<1)|_edgg |((_efaf >>_aea )&0x4)|((_gee >>_aea )&0x80);
};if _abf :=_cgfc .Bitmap .SetByte (_dga ,_cdbb );_abf !=nil {return _cbg .Wrap (_abf ,_bde ,"");};_dga ++;_fcaa ++;};return nil ;};func (_dbeg *GenericRegion )overrideAtTemplate2 (_bea ,_bfag ,_dgae ,_bed ,_cfge int )int {_bea &=0x3FB;if _dbeg .GBAtY [0]==0&&_dbeg .GBAtX [0]>=-int8 (_cfge ){_bea |=(_bed >>uint (7-(int8 (_cfge )+_dbeg .GBAtX [0]))&0x1)<<2;
}else {_bea |=int (_dbeg .getPixel (_bfag +int (_dbeg .GBAtX [0]),_dgae +int (_dbeg .GBAtY [0])))<<2;};return _bea ;};func (_efa *template1 )setIndex (_fbae *_cd .DecoderStats ){_fbae .SetIndex (0x080)};func (_dgcd *SymbolDictionary )decodeAggregate (_egag ,_daef uint32 )error {var (_adge int64 ;
_aaeab error ;);if _dgcd .IsHuffmanEncoded {_adge ,_aaeab =_dgcd .huffDecodeRefAggNInst ();if _aaeab !=nil {return _aaeab ;};}else {_fcgb ,_eeg :=_dgcd ._bcd .DecodeInt (_dgcd ._cbbdf );if _eeg !=nil {return _eeg ;};_adge =int64 (_fcgb );};if _adge > 1{return _dgcd .decodeThroughTextRegion (_egag ,_daef ,uint32 (_adge ));
}else if _adge ==1{return _dgcd .decodeRefinedSymbol (_egag ,_daef );};return nil ;};func (_dgde *Header )readSegmentPageAssociation (_gfba Documenter ,_aace _ca .StreamReader ,_ebba uint64 ,_fceb ...int )(_bdf error ){const _eggg ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074P\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061t\u0069\u006f\u006e";
if !_dgde .PageAssociationFieldSize {_eabf ,_egfa :=_aace .ReadBits (8);if _egfa !=nil {return _cbg .Wrap (_egfa ,_eggg ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_dgde .PageAssociation =int (_eabf &0xFF);}else {_ecdf ,_egfg :=_aace .ReadBits (32);
if _egfg !=nil {return _cbg .Wrap (_egfg ,_eggg ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_dgde .PageAssociation =int (_ecdf &_c .MaxInt32 );};if _ebba ==0{return nil ;};if _dgde .PageAssociation !=0{_fcfea ,_gefb :=_gfba .GetPage (_dgde .PageAssociation );
if _gefb !=nil {return _cbg .Wrap (_gefb ,_eggg ,"\u0061s\u0073\u006f\u0063\u0069a\u0074\u0065\u0064\u0020\u0070a\u0067e\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006ed");};var _ebebg int ;for _geb :=uint64 (0);_geb < _ebba ;_geb ++{_ebebg =_fceb [_geb ];
_dgde .RTSegments [_geb ],_gefb =_fcfea .GetSegment (_ebebg );if _gefb !=nil {var _ebad error ;_dgde .RTSegments [_geb ],_ebad =_gfba .GetGlobalSegment (_ebebg );if _ebad !=nil {return _cbg .Wrapf (_gefb ,_eggg ,"\u0072\u0065\u0066\u0065\u0072\u0065n\u0063\u0065\u0020s\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064\u0020\u0061\u0074\u0020pa\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0072\u0020\u0069\u006e\u0020\u0067\u006c\u006f\u0062\u0061\u006c\u0073",_dgde .PageAssociation );
};};};return nil ;};for _gade :=uint64 (0);_gade < _ebba ;_gade ++{_dgde .RTSegments [_gade ],_bdf =_gfba .GetGlobalSegment (_fceb [_gade ]);if _bdf !=nil {return _cbg .Wrapf (_bdf ,_eggg ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u003a\u0020\u0027\u0025d\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064",_fceb [_gade ]);
};};return nil ;};func (_ddda *TextRegion )readUseRefinement ()error {if !_ddda .UseRefinement ||_ddda .SbrTemplate !=0{return nil ;};var (_dbbf byte ;_dcfdf error ;);_ddda .SbrATX =make ([]int8 ,2);_ddda .SbrATY =make ([]int8 ,2);_dbbf ,_dcfdf =_ddda ._ccbg .ReadByte ();
if _dcfdf !=nil {return _dcfdf ;};_ddda .SbrATX [0]=int8 (_dbbf );_dbbf ,_dcfdf =_ddda ._ccbg .ReadByte ();if _dcfdf !=nil {return _dcfdf ;};_ddda .SbrATY [0]=int8 (_dbbf );_dbbf ,_dcfdf =_ddda ._ccbg .ReadByte ();if _dcfdf !=nil {return _dcfdf ;};_ddda .SbrATX [1]=int8 (_dbbf );
_dbbf ,_dcfdf =_ddda ._ccbg .ReadByte ();if _dcfdf !=nil {return _dcfdf ;};_ddda .SbrATY [1]=int8 (_dbbf );return nil ;};func (_cbdd *RegionSegment )readCombinationOperator ()error {_gadg ,_fbcd :=_cbdd ._ddaa .ReadBits (3);if _fbcd !=nil {return _fbcd ;
};_cbdd .CombinaionOperator =_ag .CombinationOperator (_gadg &0xF);return nil ;};func (_aga *GenericRegion )copyLineAbove (_ggg int )error {_aefe :=_ggg *_aga .Bitmap .RowStride ;_dccf :=_aefe -_aga .Bitmap .RowStride ;for _faec :=0;_faec < _aga .Bitmap .RowStride ;
_faec ++{_beg ,_agcg :=_aga .Bitmap .GetByte (_dccf );if _agcg !=nil {return _agcg ;};_dccf ++;if _agcg =_aga .Bitmap .SetByte (_aefe ,_beg );_agcg !=nil {return _agcg ;};_aefe ++;};return nil ;};func (_gbec *Header )parse (_afdg Documenter ,_gcae _ca .StreamReader ,_geaf int64 ,_egf OrganizationType )(_eeac error ){const _cagg ="\u0070\u0061\u0072s\u0065";
_ge .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u005b\u0050A\u0052\u0053\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _eeac !=nil {_ge .Log .Trace ("\u005b\u0053\u0045GM\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045R\u005d[\u0050A\u0052S\u0045\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_eeac );
}else {_ge .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052]\u005bP\u0041\u0052\u0053\u0045\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");};}();_ ,_eeac =_gcae .Seek (_geaf ,_a .SeekStart );
if _eeac !=nil {return _cbg .Wrap (_eeac ,_cagg ,"\u0073\u0065\u0065\u006b\u0020\u0073\u0074\u0061\u0072\u0074");};if _eeac =_gbec .readSegmentNumber (_gcae );_eeac !=nil {return _cbg .Wrap (_eeac ,_cagg ,"");};if _eeac =_gbec .readHeaderFlags ();_eeac !=nil {return _cbg .Wrap (_eeac ,_cagg ,"");
};var _cfd uint64 ;_cfd ,_eeac =_gbec .readNumberOfReferredToSegments (_gcae );if _eeac !=nil {return _cbg .Wrap (_eeac ,_cagg ,"");};_gbec .RTSNumbers ,_eeac =_gbec .readReferredToSegmentNumbers (_gcae ,int (_cfd ));if _eeac !=nil {return _cbg .Wrap (_eeac ,_cagg ,"");
};_eeac =_gbec .readSegmentPageAssociation (_afdg ,_gcae ,_cfd ,_gbec .RTSNumbers ...);if _eeac !=nil {return _cbg .Wrap (_eeac ,_cagg ,"");};if _gbec .Type !=TEndOfFile {if _eeac =_gbec .readSegmentDataLength (_gcae );_eeac !=nil {return _cbg .Wrap (_eeac ,_cagg ,"");
};};_gbec .readDataStartOffset (_gcae ,_egf );_gbec .readHeaderLength (_gcae ,_geaf );_ge .Log .Trace ("\u0025\u0073",_gbec );return nil ;};func (_cdac *SymbolDictionary )Encode (w _ca .BinaryWriter )(_bbeb int ,_cdgf error ){const _ddfg ="\u0053\u0079\u006dbo\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0045\u006e\u0063\u006f\u0064\u0065";
if _cdac ==nil {return 0,_cbg .Error (_ddfg ,"\u0073\u0079m\u0062\u006f\u006c\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066in\u0065\u0064");};if _bbeb ,_cdgf =_cdac .encodeFlags (w );_cdgf !=nil {return _bbeb ,_cbg .Wrap (_cdgf ,_ddfg ,"");
};_bdaf ,_cdgf :=_cdac .encodeATFlags (w );if _cdgf !=nil {return _bbeb ,_cbg .Wrap (_cdgf ,_ddfg ,"");};_bbeb +=_bdaf ;if _bdaf ,_cdgf =_cdac .encodeRefinementATFlags (w );_cdgf !=nil {return _bbeb ,_cbg .Wrap (_cdgf ,_ddfg ,"");};_bbeb +=_bdaf ;if _bdaf ,_cdgf =_cdac .encodeNumSyms (w );
_cdgf !=nil {return _bbeb ,_cbg .Wrap (_cdgf ,_ddfg ,"");};_bbeb +=_bdaf ;if _bdaf ,_cdgf =_cdac .encodeSymbols (w );_cdgf !=nil {return _bbeb ,_cbg .Wrap (_cdgf ,_ddfg ,"");};_bbeb +=_bdaf ;return _bbeb ,nil ;};func (_gdag *GenericRefinementRegion )setParameters (_dgd *_cd .DecoderStats ,_agfg *_cd .Decoder ,_cec int8 ,_ggff ,_fbe uint32 ,_abd *_ag .Bitmap ,_cdce ,_dbc int32 ,_bce bool ,_ebe []int8 ,_ceg []int8 ){_ge .Log .Trace ("\u005b\u0047\u0045NE\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052E\u0047I\u004fN\u005d \u0073\u0065\u0074\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073");
if _dgd !=nil {_gdag ._agb =_dgd ;};if _agfg !=nil {_gdag ._aa =_agfg ;};_gdag .TemplateID =_cec ;_gdag .RegionInfo .BitmapWidth =_ggff ;_gdag .RegionInfo .BitmapHeight =_fbe ;_gdag .ReferenceBitmap =_abd ;_gdag .ReferenceDX =_cdce ;_gdag .ReferenceDY =_dbc ;
_gdag .IsTPGROn =_bce ;_gdag .GrAtX =_ebe ;_gdag .GrAtY =_ceg ;_gdag .RegionBitmap =nil ;_ge .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073 f\u0069\u006ei\u0073\u0068\u0065\u0064\u002e\u0020\u0025\u0073",_gdag );
};var (_dafd Segmenter ;_fdb =map[Type ]func ()Segmenter {TSymbolDictionary :func ()Segmenter {return &SymbolDictionary {}},TIntermediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateLosslessTextRegion :func ()Segmenter {return &TextRegion {}},TPatternDictionary :func ()Segmenter {return &PatternDictionary {}},TIntermediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateLosslessHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TIntermediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateLosslessGenericRegion :func ()Segmenter {return &GenericRegion {}},TIntermediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateLosslessGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TPageInformation :func ()Segmenter {return &PageInformationSegment {}},TEndOfPage :func ()Segmenter {return _dafd },TEndOfStrip :func ()Segmenter {return &EndOfStripe {}},TEndOfFile :func ()Segmenter {return _dafd },TProfiles :func ()Segmenter {return _dafd },TTables :func ()Segmenter {return &TableSegment {}},TExtension :func ()Segmenter {return _dafd },TBitmap :func ()Segmenter {return _dafd }};
);func (_aeec *template1 )form (_fce ,_fff ,_ece ,_ecg ,_bfba int16 )int16 {return ((_fce &0x02)<<8)|(_fff <<6)|((_ece &0x03)<<4)|(_ecg <<1)|_bfba ;};func (_bdba *TextRegion )String ()string {_acdb :=&_dba .Builder {};_acdb .WriteString ("\u000a[\u0054E\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u000a");
_acdb .WriteString (_bdba .RegionInfo .String ()+"\u000a");_acdb .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053br\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0025\u0076\u000a",_bdba .SbrTemplate ));_acdb .WriteString (_f .Sprintf ("\u0009-\u0020S\u0062\u0044\u0073\u004f\u0066f\u0073\u0065t\u003a\u0020\u0025\u0076\u000a",_bdba .SbDsOffset ));
_acdb .WriteString (_f .Sprintf ("\t\u002d \u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0050i\u0078\u0065\u006c\u003a %\u0076\u000a",_bdba .DefaultPixel ));_acdb .WriteString (_f .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0076\u000a",_bdba .CombinationOperator ));
_acdb .WriteString (_f .Sprintf ("\t\u002d \u0049\u0073\u0054\u0072\u0061\u006e\u0073\u0070o\u0073\u0065\u0064\u003a %\u0076\u000a",_bdba .IsTransposed ));_acdb .WriteString (_f .Sprintf ("\u0009\u002d\u0020Re\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0043\u006f\u0072\u006e\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_bdba .ReferenceCorner ));
_acdb .WriteString (_f .Sprintf ("\t\u002d\u0020\u0055\u0073eR\u0065f\u0069\u006e\u0065\u006d\u0065n\u0074\u003a\u0020\u0025\u0076\u000a",_bdba .UseRefinement ));_acdb .WriteString (_f .Sprintf ("\u0009-\u0020\u0049\u0073\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045n\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0076\u000a",_bdba .IsHuffmanEncoded ));
if _bdba .IsHuffmanEncoded {_acdb .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_bdba .SbHuffRSize ));_acdb .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0059:\u0020\u0025\u0076\u000a",_bdba .SbHuffRDY ));
_acdb .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0058:\u0020\u0025\u0076\u000a",_bdba .SbHuffRDX ));_acdb .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069\u0067\u0068\u0074\u003a\u0020\u0025v\u000a",_bdba .SbHuffRDHeight ));
_acdb .WriteString (_f .Sprintf ("\t\u002d\u0020\u0053\u0062Hu\u0066f\u0052\u0044\u0057\u0069\u0064t\u0068\u003a\u0020\u0025\u0076\u000a",_bdba .SbHuffRDWidth ));_acdb .WriteString (_f .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0054\u003a\u0020\u0025\u0076\u000a",_bdba .SbHuffDT ));
_acdb .WriteString (_f .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0053\u003a\u0020\u0025\u0076\u000a",_bdba .SbHuffDS ));_acdb .WriteString (_f .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0046\u0053\u003a\u0020\u0025\u0076\u000a",_bdba .SbHuffFS ));
};_acdb .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_bdba .SbrATX ));_acdb .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0059:\u0020\u0025\u0076\u000a",_bdba .SbrATY ));
_acdb .WriteString (_f .Sprintf ("\u0009\u002d\u0020N\u0075\u006d\u0062\u0065r\u004f\u0066\u0053\u0079\u006d\u0062\u006fl\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_bdba .NumberOfSymbolInstances ));_acdb .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_bdba .SbrATX ));
return _acdb .String ();};func (_dcaa *TableSegment )parseHeader ()error {var (_dffa int ;_edae uint64 ;_cgdg error ;);_dffa ,_cgdg =_dcaa ._bddb .ReadBit ();if _cgdg !=nil {return _cgdg ;};if _dffa ==1{return _f .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0061\u0062\u006c\u0065 \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0064e\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u002e\u0020\u0042\u002e\u0032\u002e1\u0020\u0043\u006f\u0064\u0065\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0042\u0069\u0074\u0020\u0037\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u007a\u0065\u0072\u006f\u002e\u0020\u0057a\u0073\u003a \u0025\u0064",_dffa );
};if _edae ,_cgdg =_dcaa ._bddb .ReadBits (3);_cgdg !=nil {return _cgdg ;};_dcaa ._fecd =(int32 (_edae )+1)&0xf;if _edae ,_cgdg =_dcaa ._bddb .ReadBits (3);_cgdg !=nil {return _cgdg ;};_dcaa ._dbaf =(int32 (_edae )+1)&0xf;if _edae ,_cgdg =_dcaa ._bddb .ReadBits (32);
_cgdg !=nil {return _cgdg ;};_dcaa ._bcgg =int32 (_edae &_c .MaxInt32 );if _edae ,_cgdg =_dcaa ._bddb .ReadBits (32);_cgdg !=nil {return _cgdg ;};_dcaa ._ccbe =int32 (_edae &_c .MaxInt32 );return nil ;};var _ SegmentEncoder =&GenericRegion {};func (_aeaf *SymbolDictionary )setExportedSymbols (_accc []int ){for _gddb :=uint32 (0);
_gddb < _aeaf ._fbf +_aeaf .NumberOfNewSymbols ;_gddb ++{if _accc [_gddb ]==1{var _bbdg *_ag .Bitmap ;if _gddb < _aeaf ._fbf {_bbdg =_aeaf ._edfd [_gddb ];}else {_bbdg =_aeaf ._aeaa [_gddb -_aeaf ._fbf ];};_ge .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u002d\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u0020\u0041\u0064\u0064 E\u0078\u0070\u006fr\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027%\u0073\u0027",_bbdg );
_aeaf ._cgbf =append (_aeaf ._cgbf ,_bbdg );};};};func (_dcegd *TableSegment )HtRS ()int32 {return _dcegd ._fecd };func (_bbff *GenericRefinementRegion )getPixel (_cag *_ag .Bitmap ,_gcc ,_fgfg int )int {if _gcc < 0||_gcc >=_cag .Width {return 0;};if _fgfg < 0||_fgfg >=_cag .Height {return 0;
};if _cag .GetPixel (_gcc ,_fgfg ){return 1;};return 0;};func (_ebdc *TextRegion )initSymbols ()error {const _faca ="i\u006e\u0069\u0074\u0053\u0079\u006d\u0062\u006f\u006c\u0073";for _ ,_dgge :=range _ebdc .Header .RTSegments {if _dgge ==nil {return _cbg .Error (_faca ,"\u006e\u0069\u006c\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020pr\u006f\u0076\u0069\u0064\u0065\u0064 \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0074\u0065\u0078\u0074\u0020\u0072\u0065g\u0069\u006f\u006e\u0020\u0053\u0079\u006d\u0062o\u006c\u0073");
};if _dgge .Type ==0{_cfeff ,_gfbad :=_dgge .GetSegmentData ();if _gfbad !=nil {return _cbg .Wrap (_gfbad ,_faca ,"");};_gcca ,_dedag :=_cfeff .(*SymbolDictionary );if !_dedag {return _cbg .Error (_faca ,"\u0072e\u0066\u0065r\u0072\u0065\u0064 \u0054\u006f\u0020\u0053\u0065\u0067\u006de\u006e\u0074\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_gcca ._faacd =_ebdc ._bfgef ;_ecbg ,_gfbad :=_gcca .GetDictionary ();if _gfbad !=nil {return _cbg .Wrap (_gfbad ,_faca ,"");};_ebdc .Symbols =append (_ebdc .Symbols ,_ecbg ...);};};_ebdc .NumberOfSymbols =uint32 (len (_ebdc .Symbols ));return nil ;};
func (_bgabg *SymbolDictionary )decodeHeightClassCollectiveBitmap (_bdec int64 ,_bggg ,_afged uint32 )(*_ag .Bitmap ,error ){if _bdec ==0{_acea :=_ag .New (int (_afged ),int (_bggg ));var (_eegb byte ;_fdde error ;);for _dbdc :=0;_dbdc < len (_acea .Data );
_dbdc ++{_eegb ,_fdde =_bgabg ._cabd .ReadByte ();if _fdde !=nil {return nil ,_fdde ;};if _fdde =_acea .SetByte (_dbdc ,_eegb );_fdde !=nil {return nil ,_fdde ;};};return _acea ,nil ;};if _bgabg ._fbdd ==nil {_bgabg ._fbdd =NewGenericRegion (_bgabg ._cabd );
};_bgabg ._fbdd .setParameters (true ,_bgabg ._cabd .StreamPosition (),_bdec ,_bggg ,_afged );_gdbf ,_cde :=_bgabg ._fbdd .GetRegionBitmap ();if _cde !=nil {return nil ,_cde ;};return _gdbf ,nil ;};func (_afag *PageInformationSegment )encodeFlags (_ceed _ca .BinaryWriter )(_beaa error ){const _bfc ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _beaa =_ceed .SkipBits (1);_beaa !=nil {return _cbg .Wrap (_beaa ,_bfc ,"\u0072\u0065\u0073e\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074");};var _gacfd int ;if _afag .CombinationOperatorOverrideAllowed (){_gacfd =1;};if _beaa =_ceed .WriteBit (_gacfd );
_beaa !=nil {return _cbg .Wrap (_beaa ,_bfc ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0064\u0065\u006e");};_gacfd =0;if _afag ._abfc {_gacfd =1;
};if _beaa =_ceed .WriteBit (_gacfd );_beaa !=nil {return _cbg .Wrap (_beaa ,_bfc ,"\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0061\u0075\u0078i\u006ci\u0061r\u0079\u0020\u0062\u0075\u0066\u0066\u0065r");};if _beaa =_ceed .WriteBit ((int (_afag ._ccdc )>>1)&0x01);
_beaa !=nil {return _cbg .Wrap (_beaa ,_bfc ,"\u0063\u006f\u006d\u0062\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006f\u0070\u0065\u0072\u0061\u0074o\u0072\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0062\u0069\u0074");};if _beaa =_ceed .WriteBit (int (_afag ._ccdc )&0x01);
_beaa !=nil {return _cbg .Wrap (_beaa ,_bfc ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0062\u0069\u0074");};_gacfd =int (_afag .DefaultPixelValue );
if _beaa =_ceed .WriteBit (_gacfd );_beaa !=nil {return _cbg .Wrap (_beaa ,_bfc ,"\u0064e\u0066\u0061\u0075\u006c\u0074\u0020\u0070\u0061\u0067\u0065\u0020p\u0069\u0078\u0065\u006c\u0020\u0076\u0061\u006c\u0075\u0065");};_gacfd =0;if _afag ._cfec {_gacfd =1;
};if _beaa =_ceed .WriteBit (_gacfd );_beaa !=nil {return _cbg .Wrap (_beaa ,_bfc ,"\u0063\u006f\u006e\u0074ai\u006e\u0073\u0020\u0072\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074");};_gacfd =0;if _afag .IsLossless {_gacfd =1;};if _beaa =_ceed .WriteBit (_gacfd );
_beaa !=nil {return _cbg .Wrap (_beaa ,_bfc ,"p\u0061\u0067\u0065\u0020\u0069\u0073 \u0065\u0076\u0065\u006e\u0074\u0075\u0061\u006c\u006cy\u0020\u006c\u006fs\u0073l\u0065\u0073\u0073");};return nil ;};func (_eee *SymbolDictionary )encodeFlags (_ggfd _ca .BinaryWriter )(_cdgb int ,_cae error ){const _gbcd ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _cae =_ggfd .SkipBits (3);_cae !=nil {return 0,_cbg .Wrap (_cae ,_gbcd ,"\u0065\u006d\u0070\u0074\u0079\u0020\u0062\u0069\u0074\u0073");};var _gab int ;if _eee .SdrTemplate > 0{_gab =1;};if _cae =_ggfd .WriteBit (_gab );_cae !=nil {return _cdgb ,_cbg .Wrap (_cae ,_gbcd ,"s\u0064\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");
};_gab =0;if _eee .SdTemplate > 1{_gab =1;};if _cae =_ggfd .WriteBit (_gab );_cae !=nil {return _cdgb ,_cbg .Wrap (_cae ,_gbcd ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_gab =0;if _eee .SdTemplate ==1||_eee .SdTemplate ==3{_gab =1;
};if _cae =_ggfd .WriteBit (_gab );_cae !=nil {return _cdgb ,_cbg .Wrap (_cae ,_gbcd ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_gab =0;if _eee ._fagb {_gab =1;};if _cae =_ggfd .WriteBit (_gab );_cae !=nil {return _cdgb ,_cbg .Wrap (_cae ,_gbcd ,"\u0063\u006f\u0064in\u0067\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0065\u0064");
};_gab =0;if _eee ._fbgc {_gab =1;};if _cae =_ggfd .WriteBit (_gab );_cae !=nil {return _cdgb ,_cbg .Wrap (_cae ,_gbcd ,"\u0063\u006f\u0064\u0069ng\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0075\u0073\u0065\u0064");};_gab =0;if _eee .SdHuffAggInstanceSelection {_gab =1;
};if _cae =_ggfd .WriteBit (_gab );_cae !=nil {return _cdgb ,_cbg .Wrap (_cae ,_gbcd ,"\u0073\u0064\u0048\u0075\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074");};_gab =int (_eee .SdHuffBMSizeSelection );if _cae =_ggfd .WriteBit (_gab );_cae !=nil {return _cdgb ,_cbg .Wrap (_cae ,_gbcd ,"\u0073\u0064\u0048u\u0066\u0066\u0042\u006d\u0053\u0069\u007a\u0065");
};_gab =0;if _eee .SdHuffDecodeWidthSelection > 1{_gab =1;};if _cae =_ggfd .WriteBit (_gab );_cae !=nil {return _cdgb ,_cbg .Wrap (_cae ,_gbcd ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_gab =0;switch _eee .SdHuffDecodeWidthSelection {case 1,3:_gab =1;
};if _cae =_ggfd .WriteBit (_gab );_cae !=nil {return _cdgb ,_cbg .Wrap (_cae ,_gbcd ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_gab =0;if _eee .SdHuffDecodeHeightSelection > 1{_gab =1;};if _cae =_ggfd .WriteBit (_gab );_cae !=nil {return _cdgb ,_cbg .Wrap (_cae ,_gbcd ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");
};_gab =0;switch _eee .SdHuffDecodeHeightSelection {case 1,3:_gab =1;};if _cae =_ggfd .WriteBit (_gab );_cae !=nil {return _cdgb ,_cbg .Wrap (_cae ,_gbcd ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_gab =0;if _eee .UseRefinementAggregation {_gab =1;
};if _cae =_ggfd .WriteBit (_gab );_cae !=nil {return _cdgb ,_cbg .Wrap (_cae ,_gbcd ,"\u0073\u0064\u0052\u0065\u0066\u0041\u0067\u0067");};_gab =0;if _eee .IsHuffmanEncoded {_gab =1;};if _cae =_ggfd .WriteBit (_gab );_cae !=nil {return _cdgb ,_cbg .Wrap (_cae ,_gbcd ,"\u0073\u0064\u0048\u0075\u0066\u0066");
};return 2,nil ;};func (_gecgg *TextRegion )decodeID ()(int64 ,error ){if _gecgg .IsHuffmanEncoded {if _gecgg ._defag ==nil {_abbb ,_gfca :=_gecgg ._ccbg .ReadBits (byte (_gecgg ._bdcb ));return int64 (_abbb ),_gfca ;};return _gecgg ._defag .Decode (_gecgg ._ccbg );
};return _gecgg ._ffad .DecodeIAID (uint64 (_gecgg ._bdcb ),_gecgg ._bfgef );};func NewHeader (d Documenter ,r _ca .StreamReader ,offset int64 ,organizationType OrganizationType )(*Header ,error ){_dfea :=&Header {Reader :r };if _agbe :=_dfea .parse (d ,r ,offset ,organizationType );
_agbe !=nil {return nil ,_cbg .Wrap (_agbe ,"\u004ee\u0077\u0048\u0065\u0061\u0064\u0065r","");};return _dfea ,nil ;};func (_fbbf *TextRegion )InitEncode (globalSymbolsMap ,localSymbolsMap map[int ]int ,comps []int ,inLL *_ag .Points ,symbols *_ag .Bitmaps ,classIDs *_agc .IntSlice ,boxes *_ag .Boxes ,width ,height ,symBits int ){_fbbf .RegionInfo =&RegionSegment {BitmapWidth :uint32 (width ),BitmapHeight :uint32 (height )};
_fbbf ._cbeb =globalSymbolsMap ;_fbbf ._edag =localSymbolsMap ;_fbbf ._degd =comps ;_fbbf ._dddb =inLL ;_fbbf ._bgfa =symbols ;_fbbf ._cdcf =classIDs ;_fbbf ._bffbf =boxes ;_fbbf ._cagef =symBits ;};func (_ade *GenericRefinementRegion )decodeOptimized (_ccd ,_cg ,_bgc ,_eff ,_cf ,_gg ,_bbe int )error {var (_fg error ;
_dab int ;_dfe int ;);_cgd :=_ccd -int (_ade .ReferenceDY );if _bee :=int (-_ade .ReferenceDX );_bee > 0{_dab =_bee ;};_aef :=_ade .ReferenceBitmap .GetByteIndex (_dab ,_cgd );if _ade .ReferenceDX > 0{_dfe =int (_ade .ReferenceDX );};_ee :=_ade .RegionBitmap .GetByteIndex (_dfe ,_ccd );
switch _ade .TemplateID {case 0:_fg =_ade .decodeTemplate (_ccd ,_cg ,_bgc ,_eff ,_cf ,_gg ,_bbe ,_ee ,_cgd ,_aef ,_ade ._ae );case 1:_fg =_ade .decodeTemplate (_ccd ,_cg ,_bgc ,_eff ,_cf ,_gg ,_bbe ,_ee ,_cgd ,_aef ,_ade ._gd );};return _fg ;};func (_ebcca *PageInformationSegment )encodeStripingInformation (_dbdd _ca .BinaryWriter )(_dbee int ,_bcce error ){const _dgg ="\u0065n\u0063\u006f\u0064\u0065S\u0074\u0072\u0069\u0070\u0069n\u0067I\u006ef\u006f\u0072\u006d\u0061\u0074\u0069\u006fn";
if !_ebcca .IsStripe {if _dbee ,_bcce =_dbdd .Write ([]byte {0x00,0x00});_bcce !=nil {return 0,_cbg .Wrap (_bcce ,_dgg ,"n\u006f\u0020\u0073\u0074\u0072\u0069\u0070\u0069\u006e\u0067");};return _dbee ,nil ;};_eceg :=make ([]byte ,2);_d .BigEndian .PutUint16 (_eceg ,_ebcca .MaxStripeSize |1<<15);
if _dbee ,_bcce =_dbdd .Write (_eceg );_bcce !=nil {return 0,_cbg .Wrapf (_bcce ,_dgg ,"\u0073\u0074\u0072i\u0070\u0069\u006e\u0067\u003a\u0020\u0025\u0064",_ebcca .MaxStripeSize );};return _dbee ,nil ;};func (_gaae *TableSegment )HtLow ()int32 {return _gaae ._bcgg };
type Header struct{SegmentNumber uint32 ;Type Type ;RetainFlag bool ;PageAssociation int ;PageAssociationFieldSize bool ;RTSegments []*Header ;HeaderLength int64 ;SegmentDataLength uint64 ;SegmentDataStartOffset uint64 ;Reader _ca .StreamReader ;SegmentData Segmenter ;
RTSNumbers []int ;RetainBits []uint8 ;};func (_cgcg *PageInformationSegment )readIsStriped ()error {_afb ,_ecfb :=_cgcg ._gaec .ReadBit ();if _ecfb !=nil {return _ecfb ;};if _afb ==1{_cgcg .IsStripe =true ;};return nil ;};func (_dfdg *HalftoneRegion )combineGrayscalePlanes (_edfcg []*_ag .Bitmap ,_gccc int )error {_fec :=0;
for _cdd :=0;_cdd < _edfcg [_gccc ].Height ;_cdd ++{for _acg :=0;_acg < _edfcg [_gccc ].Width ;_acg +=8{_afcd ,_dcgf :=_edfcg [_gccc +1].GetByte (_fec );if _dcgf !=nil {return _dcgf ;};_dccd ,_dcgf :=_edfcg [_gccc ].GetByte (_fec );if _dcgf !=nil {return _dcgf ;
};_dcgf =_edfcg [_gccc ].SetByte (_fec ,_ag .CombineBytes (_dccd ,_afcd ,_ag .CmbOpXor ));if _dcgf !=nil {return _dcgf ;};_fec ++;};};return nil ;};func (_eddga *SymbolDictionary )decodeDirectlyThroughGenericRegion (_afdb ,_fgde uint32 )error {if _eddga ._fbdd ==nil {_eddga ._fbdd =NewGenericRegion (_eddga ._cabd );
};_eddga ._fbdd .setParametersWithAt (false ,byte (_eddga .SdTemplate ),false ,false ,_eddga .SdATX ,_eddga .SdATY ,_afdb ,_fgde ,_eddga ._gdcb ,_eddga ._bcd );return _eddga .addSymbol (_eddga ._fbdd );};func (_dafc *SymbolDictionary )decodeNewSymbols (_gcac ,_cbgb uint32 ,_dgbe *_ag .Bitmap ,_defc ,_dfgb int32 )error {if _dafc ._feab ==nil {_dafc ._feab =_fgdd (_dafc ._cabd ,nil );
if _dafc ._bcd ==nil {var _dcae error ;_dafc ._bcd ,_dcae =_cd .New (_dafc ._cabd );if _dcae !=nil {return _dcae ;};};if _dafc ._gdcb ==nil {_dafc ._gdcb =_cd .NewStats (65536,1);};};_dafc ._feab .setParameters (_dafc ._gdcb ,_dafc ._bcd ,_dafc .SdrTemplate ,_gcac ,_cbgb ,_dgbe ,_defc ,_dfgb ,false ,_dafc .SdrATX ,_dafc .SdrATY );
return _dafc .addSymbol (_dafc ._feab );};func (_aeecc *TextRegion )readRegionFlags ()error {var (_gcda int ;_ebdb uint64 ;_cggc error ;);_gcda ,_cggc =_aeecc ._ccbg .ReadBit ();if _cggc !=nil {return _cggc ;};_aeecc .SbrTemplate =int8 (_gcda );_ebdb ,_cggc =_aeecc ._ccbg .ReadBits (5);
if _cggc !=nil {return _cggc ;};_aeecc .SbDsOffset =int8 (_ebdb );if _aeecc .SbDsOffset > 0x0f{_aeecc .SbDsOffset -=0x20;};_gcda ,_cggc =_aeecc ._ccbg .ReadBit ();if _cggc !=nil {return _cggc ;};_aeecc .DefaultPixel =int8 (_gcda );_ebdb ,_cggc =_aeecc ._ccbg .ReadBits (2);
if _cggc !=nil {return _cggc ;};_aeecc .CombinationOperator =_ag .CombinationOperator (int (_ebdb )&0x3);_gcda ,_cggc =_aeecc ._ccbg .ReadBit ();if _cggc !=nil {return _cggc ;};_aeecc .IsTransposed =int8 (_gcda );_ebdb ,_cggc =_aeecc ._ccbg .ReadBits (2);
if _cggc !=nil {return _cggc ;};_aeecc .ReferenceCorner =int16 (_ebdb )&0x3;_ebdb ,_cggc =_aeecc ._ccbg .ReadBits (2);if _cggc !=nil {return _cggc ;};_aeecc .LogSBStrips =int16 (_ebdb )&0x3;_aeecc .SbStrips =1<<uint (_aeecc .LogSBStrips );_gcda ,_cggc =_aeecc ._ccbg .ReadBit ();
if _cggc !=nil {return _cggc ;};if _gcda ==1{_aeecc .UseRefinement =true ;};_gcda ,_cggc =_aeecc ._ccbg .ReadBit ();if _cggc !=nil {return _cggc ;};if _gcda ==1{_aeecc .IsHuffmanEncoded =true ;};return nil ;};func (_afea *TextRegion )createRegionBitmap ()error {_afea .RegionBitmap =_ag .New (int (_afea .RegionInfo .BitmapWidth ),int (_afea .RegionInfo .BitmapHeight ));
if _afea .DefaultPixel !=0{_afea .RegionBitmap .SetDefaultPixel ();};return nil ;};func (_cfedbf *TextRegion )readHuffmanFlags ()error {var (_bfaa int ;_abfd uint64 ;_ebab error ;);_ ,_ebab =_cfedbf ._ccbg .ReadBit ();if _ebab !=nil {return _ebab ;};_bfaa ,_ebab =_cfedbf ._ccbg .ReadBit ();
if _ebab !=nil {return _ebab ;};_cfedbf .SbHuffRSize =int8 (_bfaa );_abfd ,_ebab =_cfedbf ._ccbg .ReadBits (2);if _ebab !=nil {return _ebab ;};_cfedbf .SbHuffRDY =int8 (_abfd )&0xf;_abfd ,_ebab =_cfedbf ._ccbg .ReadBits (2);if _ebab !=nil {return _ebab ;
};_cfedbf .SbHuffRDX =int8 (_abfd )&0xf;_abfd ,_ebab =_cfedbf ._ccbg .ReadBits (2);if _ebab !=nil {return _ebab ;};_cfedbf .SbHuffRDHeight =int8 (_abfd )&0xf;_abfd ,_ebab =_cfedbf ._ccbg .ReadBits (2);if _ebab !=nil {return _ebab ;};_cfedbf .SbHuffRDWidth =int8 (_abfd )&0xf;
_abfd ,_ebab =_cfedbf ._ccbg .ReadBits (2);if _ebab !=nil {return _ebab ;};_cfedbf .SbHuffDT =int8 (_abfd )&0xf;_abfd ,_ebab =_cfedbf ._ccbg .ReadBits (2);if _ebab !=nil {return _ebab ;};_cfedbf .SbHuffDS =int8 (_abfd )&0xf;_abfd ,_ebab =_cfedbf ._ccbg .ReadBits (2);
if _ebab !=nil {return _ebab ;};_cfedbf .SbHuffFS =int8 (_abfd )&0xf;return nil ;};func (_ccbf *PageInformationSegment )Encode (w _ca .BinaryWriter )(_bfe int ,_cfee error ){const _gfd ="\u0050\u0061g\u0065\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u002e\u0045\u006eco\u0064\u0065";
_gaf :=make ([]byte ,4);_d .BigEndian .PutUint32 (_gaf ,uint32 (_ccbf .PageBMWidth ));_bfe ,_cfee =w .Write (_gaf );if _cfee !=nil {return _bfe ,_cbg .Wrap (_cfee ,_gfd ,"\u0077\u0069\u0064t\u0068");};_d .BigEndian .PutUint32 (_gaf ,uint32 (_ccbf .PageBMHeight ));
var _gdg int ;_gdg ,_cfee =w .Write (_gaf );if _cfee !=nil {return _gdg +_bfe ,_cbg .Wrap (_cfee ,_gfd ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_bfe +=_gdg ;_d .BigEndian .PutUint32 (_gaf ,uint32 (_ccbf .ResolutionX ));_gdg ,_cfee =w .Write (_gaf );if _cfee !=nil {return _gdg +_bfe ,_cbg .Wrap (_cfee ,_gfd ,"\u0078\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");
};_bfe +=_gdg ;_d .BigEndian .PutUint32 (_gaf ,uint32 (_ccbf .ResolutionY ));if _gdg ,_cfee =w .Write (_gaf );_cfee !=nil {return _gdg +_bfe ,_cbg .Wrap (_cfee ,_gfd ,"\u0079\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_bfe +=_gdg ;
if _cfee =_ccbf .encodeFlags (w );_cfee !=nil {return _bfe ,_cbg .Wrap (_cfee ,_gfd ,"");};_bfe ++;if _gdg ,_cfee =_ccbf .encodeStripingInformation (w );_cfee !=nil {return _bfe ,_cbg .Wrap (_cfee ,_gfd ,"");};_bfe +=_gdg ;return _bfe ,nil ;};func (_cbgd *TextRegion )readAmountOfSymbolInstances ()error {_fegg ,_ecea :=_cbgd ._ccbg .ReadBits (32);
if _ecea !=nil {return _ecea ;};_cbgd .NumberOfSymbolInstances =uint32 (_fegg &_c .MaxUint32 );_eaab :=_cbgd .RegionInfo .BitmapWidth *_cbgd .RegionInfo .BitmapHeight ;if _eaab < _cbgd .NumberOfSymbolInstances {_ge .Log .Debug ("\u004c\u0069\u006d\u0069t\u0069\u006e\u0067\u0020t\u0068\u0065\u0020n\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020d\u0065\u0063\u006f\u0064e\u0064\u0020\u0073\u0079m\u0062\u006f\u006c\u0020\u0069n\u0073\u0074\u0061\u006e\u0063\u0065\u0073 \u0074\u006f\u0020\u006f\u006ee\u0020\u0070\u0065\u0072\u0020\u0070\u0069\u0078\u0065l\u0020\u0028\u0020\u0025\u0064\u0020\u0069\u006e\u0073\u0074\u0065\u0061\u0064\u0020\u006f\u0066\u0020\u0025\u0064\u0029",_eaab ,_cbgd .NumberOfSymbolInstances );
_cbgd .NumberOfSymbolInstances =_eaab ;};return nil ;};func (_aefec *SymbolDictionary )decodeRefinedSymbol (_edfg ,_daba uint32 )error {var (_bae int ;_bdac ,_dgcf int32 ;);if _aefec .IsHuffmanEncoded {_gfcc ,_eebg :=_aefec ._cabd .ReadBits (byte (_aefec ._gbg ));
if _eebg !=nil {return _eebg ;};_bae =int (_gfcc );_caag ,_eebg :=_ga .GetStandardTable (15);if _eebg !=nil {return _eebg ;};_eebfa ,_eebg :=_caag .Decode (_aefec ._cabd );if _eebg !=nil {return _eebg ;};_bdac =int32 (_eebfa );_eebfa ,_eebg =_caag .Decode (_aefec ._cabd );
if _eebg !=nil {return _eebg ;};_dgcf =int32 (_eebfa );_caag ,_eebg =_ga .GetStandardTable (1);if _eebg !=nil {return _eebg ;};if _ ,_eebg =_caag .Decode (_aefec ._cabd );_eebg !=nil {return _eebg ;};_aefec ._cabd .Align ();}else {_dff ,_ceef :=_aefec ._bcd .DecodeIAID (uint64 (_aefec ._gbg ),_aefec ._faacd );
if _ceef !=nil {return _ceef ;};_bae =int (_dff );_bdac ,_ceef =_aefec ._bcd .DecodeInt (_aefec ._dbca );if _ceef !=nil {return _ceef ;};_dgcf ,_ceef =_aefec ._bcd .DecodeInt (_aefec ._bgeb );if _ceef !=nil {return _ceef ;};};if _faae :=_aefec .setSymbolsArray ();
_faae !=nil {return _faae ;};_bdfg :=_aefec ._bdde [_bae ];if _aggbd :=_aefec .decodeNewSymbols (_edfg ,_daba ,_bdfg ,_bdac ,_dgcf );_aggbd !=nil {return _aggbd ;};if _aefec .IsHuffmanEncoded {_aefec ._cabd .Align ();};return nil ;};func (_cfba *PageInformationSegment )readIsLossless ()error {_bgab ,_fabc :=_cfba ._gaec .ReadBit ();
if _fabc !=nil {return _fabc ;};if _bgab ==1{_cfba .IsLossless =true ;};return nil ;};func (_gbd *GenericRegion )overrideAtTemplate0b (_ecb ,_ddg ,_gaee ,_ebgc ,_gcf ,_fcg int )int {if _gbd .GBAtOverride [0]{_ecb &=0xFFFD;if _gbd .GBAtY [0]==0&&_gbd .GBAtX [0]>=-int8 (_gcf ){_ecb |=(_ebgc >>uint (int8 (_fcg )-_gbd .GBAtX [0]&0x1))<<1;
}else {_ecb |=int (_gbd .getPixel (_ddg +int (_gbd .GBAtX [0]),_gaee +int (_gbd .GBAtY [0])))<<1;};};if _gbd .GBAtOverride [1]{_ecb &=0xDFFF;if _gbd .GBAtY [1]==0&&_gbd .GBAtX [1]>=-int8 (_gcf ){_ecb |=(_ebgc >>uint (int8 (_fcg )-_gbd .GBAtX [1]&0x1))<<13;
}else {_ecb |=int (_gbd .getPixel (_ddg +int (_gbd .GBAtX [1]),_gaee +int (_gbd .GBAtY [1])))<<13;};};if _gbd .GBAtOverride [2]{_ecb &=0xFDFF;if _gbd .GBAtY [2]==0&&_gbd .GBAtX [2]>=-int8 (_gcf ){_ecb |=(_ebgc >>uint (int8 (_fcg )-_gbd .GBAtX [2]&0x1))<<9;
}else {_ecb |=int (_gbd .getPixel (_ddg +int (_gbd .GBAtX [2]),_gaee +int (_gbd .GBAtY [2])))<<9;};};if _gbd .GBAtOverride [3]{_ecb &=0xBFFF;if _gbd .GBAtY [3]==0&&_gbd .GBAtX [3]>=-int8 (_gcf ){_ecb |=(_ebgc >>uint (int8 (_fcg )-_gbd .GBAtX [3]&0x1))<<14;
}else {_ecb |=int (_gbd .getPixel (_ddg +int (_gbd .GBAtX [3]),_gaee +int (_gbd .GBAtY [3])))<<14;};};if _gbd .GBAtOverride [4]{_ecb &=0xEFFF;if _gbd .GBAtY [4]==0&&_gbd .GBAtX [4]>=-int8 (_gcf ){_ecb |=(_ebgc >>uint (int8 (_fcg )-_gbd .GBAtX [4]&0x1))<<12;
}else {_ecb |=int (_gbd .getPixel (_ddg +int (_gbd .GBAtX [4]),_gaee +int (_gbd .GBAtY [4])))<<12;};};if _gbd .GBAtOverride [5]{_ecb &=0xFFDF;if _gbd .GBAtY [5]==0&&_gbd .GBAtX [5]>=-int8 (_gcf ){_ecb |=(_ebgc >>uint (int8 (_fcg )-_gbd .GBAtX [5]&0x1))<<5;
}else {_ecb |=int (_gbd .getPixel (_ddg +int (_gbd .GBAtX [5]),_gaee +int (_gbd .GBAtY [5])))<<5;};};if _gbd .GBAtOverride [6]{_ecb &=0xFFFB;if _gbd .GBAtY [6]==0&&_gbd .GBAtX [6]>=-int8 (_gcf ){_ecb |=(_ebgc >>uint (int8 (_fcg )-_gbd .GBAtX [6]&0x1))<<2;
}else {_ecb |=int (_gbd .getPixel (_ddg +int (_gbd .GBAtX [6]),_gaee +int (_gbd .GBAtY [6])))<<2;};};if _gbd .GBAtOverride [7]{_ecb &=0xFFF7;if _gbd .GBAtY [7]==0&&_gbd .GBAtX [7]>=-int8 (_gcf ){_ecb |=(_ebgc >>uint (int8 (_fcg )-_gbd .GBAtX [7]&0x1))<<3;
}else {_ecb |=int (_gbd .getPixel (_ddg +int (_gbd .GBAtX [7]),_gaee +int (_gbd .GBAtY [7])))<<3;};};if _gbd .GBAtOverride [8]{_ecb &=0xF7FF;if _gbd .GBAtY [8]==0&&_gbd .GBAtX [8]>=-int8 (_gcf ){_ecb |=(_ebgc >>uint (int8 (_fcg )-_gbd .GBAtX [8]&0x1))<<11;
}else {_ecb |=int (_gbd .getPixel (_ddg +int (_gbd .GBAtX [8]),_gaee +int (_gbd .GBAtY [8])))<<11;};};if _gbd .GBAtOverride [9]{_ecb &=0xFFEF;if _gbd .GBAtY [9]==0&&_gbd .GBAtX [9]>=-int8 (_gcf ){_ecb |=(_ebgc >>uint (int8 (_fcg )-_gbd .GBAtX [9]&0x1))<<4;
}else {_ecb |=int (_gbd .getPixel (_ddg +int (_gbd .GBAtX [9]),_gaee +int (_gbd .GBAtY [9])))<<4;};};if _gbd .GBAtOverride [10]{_ecb &=0x7FFF;if _gbd .GBAtY [10]==0&&_gbd .GBAtX [10]>=-int8 (_gcf ){_ecb |=(_ebgc >>uint (int8 (_fcg )-_gbd .GBAtX [10]&0x1))<<15;
}else {_ecb |=int (_gbd .getPixel (_ddg +int (_gbd .GBAtX [10]),_gaee +int (_gbd .GBAtY [10])))<<15;};};if _gbd .GBAtOverride [11]{_ecb &=0xFDFF;if _gbd .GBAtY [11]==0&&_gbd .GBAtX [11]>=-int8 (_gcf ){_ecb |=(_ebgc >>uint (int8 (_fcg )-_gbd .GBAtX [11]&0x1))<<10;
}else {_ecb |=int (_gbd .getPixel (_ddg +int (_gbd .GBAtX [11]),_gaee +int (_gbd .GBAtY [11])))<<10;};};return _ecb ;};func (_edafb *PageInformationSegment )Size ()int {return 19};const (TSymbolDictionary Type =0;TIntermediateTextRegion Type =4;TImmediateTextRegion Type =6;
TImmediateLosslessTextRegion Type =7;TPatternDictionary Type =16;TIntermediateHalftoneRegion Type =20;TImmediateHalftoneRegion Type =22;TImmediateLosslessHalftoneRegion Type =23;TIntermediateGenericRegion Type =36;TImmediateGenericRegion Type =38;TImmediateLosslessGenericRegion Type =39;
TIntermediateGenericRefinementRegion Type =40;TImmediateGenericRefinementRegion Type =42;TImmediateLosslessGenericRefinementRegion Type =43;TPageInformation Type =48;TEndOfPage Type =49;TEndOfStrip Type =50;TEndOfFile Type =51;TProfiles Type =52;TTables Type =53;
TExtension Type =62;TBitmap Type =70;);func (_dafe *GenericRefinementRegion )decodeTemplate (_faa ,_agce ,_dda ,_acff ,_afc ,_dabg ,_cdb ,_fb ,_gfe ,_aaea int ,_ccab templater )(_gag error ){var (_ebg ,_bd ,_ea ,_fbg ,_bab int16 ;_fae ,_fee ,_ce ,_bac int ;
_ecf byte ;);if _gfe >=1&&(_gfe -1)< _dafe .ReferenceBitmap .Height {_ecf ,_gag =_dafe .ReferenceBitmap .GetByte (_aaea -_acff );if _gag !=nil {return ;};_fae =int (_ecf );};if _gfe >=0&&(_gfe )< _dafe .ReferenceBitmap .Height {_ecf ,_gag =_dafe .ReferenceBitmap .GetByte (_aaea );
if _gag !=nil {return ;};_fee =int (_ecf );};if _gfe >=-1&&(_gfe +1)< _dafe .ReferenceBitmap .Height {_ecf ,_gag =_dafe .ReferenceBitmap .GetByte (_aaea +_acff );if _gag !=nil {return ;};_ce =int (_ecf );};_aaea ++;if _faa >=1{_ecf ,_gag =_dafe .RegionBitmap .GetByte (_fb -_dda );
if _gag !=nil {return ;};_bac =int (_ecf );};_fb ++;_gec :=_dafe .ReferenceDX %8;_babb :=6+_gec ;_bdd :=_aaea %_acff ;if _babb >=0{if _babb < 8{_ebg =int16 (_fae >>uint (_babb ))&0x07;};if _babb < 8{_bd =int16 (_fee >>uint (_babb ))&0x07;};if _babb < 8{_ea =int16 (_ce >>uint (_babb ))&0x07;
};if _babb ==6&&_bdd > 1{if _gfe >=1&&(_gfe -1)< _dafe .ReferenceBitmap .Height {_ecf ,_gag =_dafe .ReferenceBitmap .GetByte (_aaea -_acff -2);if _gag !=nil {return _gag ;};_ebg |=int16 (_ecf <<2)&0x04;};if _gfe >=0&&_gfe < _dafe .ReferenceBitmap .Height {_ecf ,_gag =_dafe .ReferenceBitmap .GetByte (_aaea -2);
if _gag !=nil {return _gag ;};_bd |=int16 (_ecf <<2)&0x04;};if _gfe >=-1&&_gfe +1< _dafe .ReferenceBitmap .Height {_ecf ,_gag =_dafe .ReferenceBitmap .GetByte (_aaea +_acff -2);if _gag !=nil {return _gag ;};_ea |=int16 (_ecf <<2)&0x04;};};if _babb ==0{_fae =0;
_fee =0;_ce =0;if _bdd < _acff -1{if _gfe >=1&&_gfe -1< _dafe .ReferenceBitmap .Height {_ecf ,_gag =_dafe .ReferenceBitmap .GetByte (_aaea -_acff );if _gag !=nil {return _gag ;};_fae =int (_ecf );};if _gfe >=0&&_gfe < _dafe .ReferenceBitmap .Height {_ecf ,_gag =_dafe .ReferenceBitmap .GetByte (_aaea );
if _gag !=nil {return _gag ;};_fee =int (_ecf );};if _gfe >=-1&&_gfe +1< _dafe .ReferenceBitmap .Height {_ecf ,_gag =_dafe .ReferenceBitmap .GetByte (_aaea +_acff );if _gag !=nil {return _gag ;};_ce =int (_ecf );};};_aaea ++;};}else {_ebg =int16 (_fae <<1)&0x07;
_bd =int16 (_fee <<1)&0x07;_ea =int16 (_ce <<1)&0x07;_fae =0;_fee =0;_ce =0;if _bdd < _acff -1{if _gfe >=1&&_gfe -1< _dafe .ReferenceBitmap .Height {_ecf ,_gag =_dafe .ReferenceBitmap .GetByte (_aaea -_acff );if _gag !=nil {return _gag ;};_fae =int (_ecf );
};if _gfe >=0&&_gfe < _dafe .ReferenceBitmap .Height {_ecf ,_gag =_dafe .ReferenceBitmap .GetByte (_aaea );if _gag !=nil {return _gag ;};_fee =int (_ecf );};if _gfe >=-1&&_gfe +1< _dafe .ReferenceBitmap .Height {_ecf ,_gag =_dafe .ReferenceBitmap .GetByte (_aaea +_acff );
if _gag !=nil {return _gag ;};_ce =int (_ecf );};_aaea ++;};_ebg |=int16 ((_fae >>7)&0x07);_bd |=int16 ((_fee >>7)&0x07);_ea |=int16 ((_ce >>7)&0x07);};_fbg =int16 (_bac >>6);_bab =0;_aaa :=(2-_gec )%8;_fae <<=uint (_aaa );_fee <<=uint (_aaa );_ce <<=uint (_aaa );
_bac <<=2;var _ggdg int ;for _cgbb :=0;_cgbb < _agce ;_cgbb ++{_fca :=_cgbb &0x07;_acfg :=_ccab .form (_ebg ,_bd ,_ea ,_fbg ,_bab );if _dafe ._ad {_ecf ,_gag =_dafe .RegionBitmap .GetByte (_dafe .RegionBitmap .GetByteIndex (_cgbb ,_faa ));if _gag !=nil {return _gag ;
};_dafe ._agb .SetIndex (int32 (_dafe .overrideAtTemplate0 (int (_acfg ),_cgbb ,_faa ,int (_ecf ),_fca )));}else {_dafe ._agb .SetIndex (int32 (_acfg ));};_ggdg ,_gag =_dafe ._aa .DecodeBit (_dafe ._agb );if _gag !=nil {return _gag ;};if _gag =_dafe .RegionBitmap .SetPixel (_cgbb ,_faa ,byte (_ggdg ));
_gag !=nil {return _gag ;};_ebg =((_ebg <<1)|0x01&int16 (_fae >>7))&0x07;_bd =((_bd <<1)|0x01&int16 (_fee >>7))&0x07;_ea =((_ea <<1)|0x01&int16 (_ce >>7))&0x07;_fbg =((_fbg <<1)|0x01&int16 (_bac >>7))&0x07;_bab =int16 (_ggdg );if (_cgbb -int (_dafe .ReferenceDX ))%8==5{_fae =0;
_fee =0;_ce =0;if ((_cgbb -int (_dafe .ReferenceDX ))/8)+1< _dafe .ReferenceBitmap .RowStride {if _gfe >=1&&(_gfe -1)< _dafe .ReferenceBitmap .Height {_ecf ,_gag =_dafe .ReferenceBitmap .GetByte (_aaea -_acff );if _gag !=nil {return _gag ;};_fae =int (_ecf );
};if _gfe >=0&&_gfe < _dafe .ReferenceBitmap .Height {_ecf ,_gag =_dafe .ReferenceBitmap .GetByte (_aaea );if _gag !=nil {return _gag ;};_fee =int (_ecf );};if _gfe >=-1&&(_gfe +1)< _dafe .ReferenceBitmap .Height {_ecf ,_gag =_dafe .ReferenceBitmap .GetByte (_aaea +_acff );
if _gag !=nil {return _gag ;};_ce =int (_ecf );};};_aaea ++;}else {_fae <<=1;_fee <<=1;_ce <<=1;};if _fca ==5&&_faa >=1{if ((_cgbb >>3)+1)>=_dafe .RegionBitmap .RowStride {_bac =0;}else {_ecf ,_gag =_dafe .RegionBitmap .GetByte (_fb -_dda );if _gag !=nil {return _gag ;
};_bac =int (_ecf );};_fb ++;}else {_bac <<=1;};};return nil ;};func (_gcef *TextRegion )GetRegionInfo ()*RegionSegment {return _gcef .RegionInfo };func (_fggb *TextRegion )setCodingStatistics ()error {if _fggb ._acbc ==nil {_fggb ._acbc =_cd .NewStats (512,1);
};if _fggb ._daed ==nil {_fggb ._daed =_cd .NewStats (512,1);};if _fggb ._cabb ==nil {_fggb ._cabb =_cd .NewStats (512,1);};if _fggb ._ffaeb ==nil {_fggb ._ffaeb =_cd .NewStats (512,1);};if _fggb ._cadg ==nil {_fggb ._cadg =_cd .NewStats (512,1);};if _fggb ._bffb ==nil {_fggb ._bffb =_cd .NewStats (512,1);
};if _fggb ._fddb ==nil {_fggb ._fddb =_cd .NewStats (512,1);};if _fggb ._bfgef ==nil {_fggb ._bfgef =_cd .NewStats (1<<uint (_fggb ._bdcb ),1);};if _fggb ._abge ==nil {_fggb ._abge =_cd .NewStats (512,1);};if _fggb ._afcdd ==nil {_fggb ._afcdd =_cd .NewStats (512,1);
};if _fggb ._ffad ==nil {var _agef error ;_fggb ._ffad ,_agef =_cd .New (_fggb ._ccbg );if _agef !=nil {return _agef ;};};return nil ;};func (_ffba Type )String ()string {switch _ffba {case TSymbolDictionary :return "\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079";
case TIntermediateTextRegion :return "\u0049n\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020T\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateTextRegion :return "I\u006d\u006d\u0065\u0064ia\u0074e\u0020\u0054\u0065\u0078\u0074 \u0052\u0065\u0067\u0069\u006f\u006e";
case TImmediateLosslessTextRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020L\u006f\u0073\u0073\u006c\u0065\u0073\u0073 \u0054\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TPatternDictionary :return "\u0050a\u0074t\u0065\u0072\u006e\u0020\u0044i\u0063\u0074i\u006f\u006e\u0061\u0072\u0079";
case TIntermediateHalftoneRegion :return "\u0049\u006e\u0074\u0065r\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0048\u0061l\u0066t\u006f\u006e\u0065\u0020\u0052\u0065\u0067i\u006f\u006e";case TImmediateHalftoneRegion :return "\u0049m\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u0048\u0061l\u0066t\u006fn\u0065\u0020\u0052\u0065\u0067\u0069\u006fn";
case TImmediateLosslessHalftoneRegion :return "\u0049\u006d\u006ded\u0069\u0061\u0074\u0065\u0020\u004c\u006f\u0073\u0073l\u0065s\u0073 \u0048a\u006c\u0066\u0074\u006f\u006e\u0065\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TIntermediateGenericRegion :return "I\u006e\u0074\u0065\u0072\u006d\u0065d\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020R\u0065g\u0069\u006f\u006e";
case TImmediateGenericRegion :return "\u0049m\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006ee\u0072\u0069\u0063\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessGenericRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u004c\u006f\u0073\u0073\u006c\u0065\u0073\u0073\u0020\u0047e\u006e\u0065\u0072\u0069\u0063\u0020\u0052e\u0067\u0069\u006f\u006e";
case TIntermediateGenericRefinementRegion :return "\u0049\u006e\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0020\u0052\u0065\u0066i\u006e\u0065\u006d\u0065\u006et\u0020\u0052e\u0067\u0069\u006f\u006e";
case TImmediateGenericRefinementRegion :return "I\u006d\u006d\u0065\u0064\u0069\u0061t\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020\u0052\u0065\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020\u0052\u0065\u0067\u0069o\u006e";case TImmediateLosslessGenericRefinementRegion :return "\u0049m\u006d\u0065d\u0069\u0061\u0074\u0065 \u004c\u006f\u0073s\u006c\u0065\u0073\u0073\u0020\u0047\u0065\u006e\u0065ri\u0063\u0020\u0052e\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020R\u0065\u0067i\u006f\u006e";
case TPageInformation :return "\u0050\u0061g\u0065\u0020\u0049n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e";case TEndOfPage :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0050\u0061\u0067\u0065";case TEndOfStrip :return "\u0045\u006e\u0064 \u004f\u0066\u0020\u0053\u0074\u0072\u0069\u0070";
case TEndOfFile :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0046\u0069\u006c\u0065";case TProfiles :return "\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0073";case TTables :return "\u0054\u0061\u0062\u006c\u0065\u0073";case TExtension :return "\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn";
case TBitmap :return "\u0042\u0069\u0074\u006d\u0061\u0070";};return "I\u006ev\u0061\u006c\u0069\u0064\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0020Ki\u006e\u0064";};func (_adc *template0 )setIndex (_cab *_cd .DecoderStats ){_cab .SetIndex (0x100)};
func (_fac *HalftoneRegion )shiftAndFill (_ebc int )int {_ebc >>=8;if _ebc < 0{_bbggf :=int (_c .Log (float64 (_feade (_ebc )))/_c .Log (2));_gefg :=31-_bbggf ;for _dbf :=1;_dbf < _gefg ;_dbf ++{_ebc |=1<<uint (31-_dbf );};};return _ebc ;};func (_cfaa *SymbolDictionary )parseHeader ()(_ddafe error ){_ge .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _ddafe !=nil {_ge .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u0020\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u005b\u0050\u0041\u0052SE\u002d\u0048\u0045A\u0044\u0045R\u005d\u0020\u0066\u0061\u0069\u006ce\u0064\u002e \u0025\u0076",_ddafe );
}else {_ge .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _ddafe =_cfaa .readRegionFlags ();_ddafe !=nil {return _ddafe ;};if _ddafe =_cfaa .setAtPixels ();_ddafe !=nil {return _ddafe ;};if _ddafe =_cfaa .setRefinementAtPixels ();_ddafe !=nil {return _ddafe ;};if _ddafe =_cfaa .readNumberOfExportedSymbols ();
_ddafe !=nil {return _ddafe ;};if _ddafe =_cfaa .readNumberOfNewSymbols ();_ddafe !=nil {return _ddafe ;};if _ddafe =_cfaa .setInSyms ();_ddafe !=nil {return _ddafe ;};if _cfaa ._fbgc {_efce :=_cfaa .Header .RTSegments ;for _bgea :=len (_efce )-1;_bgea >=0;
_bgea --{if _efce [_bgea ].Type ==0{_bbfff ,_fcgf :=_efce [_bgea ].SegmentData .(*SymbolDictionary );if !_fcgf {_ddafe =_f .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074:\u0020\u0025\u0076\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020S\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_efce [_bgea ]);
return _ddafe ;};if _bbfff ._fbgc {_cfaa .setRetainedCodingContexts (_bbfff );};break ;};};};if _ddafe =_cfaa .checkInput ();_ddafe !=nil {return _ddafe ;};return nil ;};func (_afabe *RegionSegment )Size ()int {return 17};func (_dadf *HalftoneRegion )grayScaleDecoding (_cggf int )([][]int ,error ){var (_beb []int8 ;
_bcf []int8 ;);if !_dadf .IsMMREncoded {_beb =make ([]int8 ,4);_bcf =make ([]int8 ,4);if _dadf .HTemplate <=1{_beb [0]=3;}else if _dadf .HTemplate >=2{_beb [0]=2;};_bcf [0]=-1;_beb [1]=-3;_bcf [1]=-1;_beb [2]=2;_bcf [2]=-2;_beb [3]=-2;_bcf [3]=-2;};_gfaf :=make ([]*_ag .Bitmap ,_cggf );
_fcad :=NewGenericRegion (_dadf ._abab );_fcad .setParametersMMR (_dadf .IsMMREncoded ,_dadf .DataOffset ,_dadf .DataLength ,_dadf .HGridHeight ,_dadf .HGridWidth ,_dadf .HTemplate ,false ,_dadf .HSkipEnabled ,_beb ,_bcf );_eefc :=_cggf -1;var _dcca error ;
_gfaf [_eefc ],_dcca =_fcad .GetRegionBitmap ();if _dcca !=nil {return nil ,_dcca ;};for _eefc > 0{_eefc --;_fcad .Bitmap =nil ;_gfaf [_eefc ],_dcca =_fcad .GetRegionBitmap ();if _dcca !=nil {return nil ,_dcca ;};if _dcca =_dadf .combineGrayscalePlanes (_gfaf ,_eefc );
_dcca !=nil {return nil ,_dcca ;};};return _dadf .computeGrayScalePlanes (_gfaf ,_cggf );};func (_aefgd *SymbolDictionary )encodeNumSyms (_feg _ca .BinaryWriter )(_dcfb int ,_fdff error ){const _bdc ="\u0065\u006e\u0063\u006f\u0064\u0065\u004e\u0075\u006d\u0053\u0079\u006d\u0073";
_gebc :=make ([]byte ,4);_d .BigEndian .PutUint32 (_gebc ,_aefgd .NumberOfExportedSymbols );if _dcfb ,_fdff =_feg .Write (_gebc );_fdff !=nil {return _dcfb ,_cbg .Wrap (_fdff ,_bdc ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};_d .BigEndian .PutUint32 (_gebc ,_aefgd .NumberOfNewSymbols );_feba ,_fdff :=_feg .Write (_gebc );if _fdff !=nil {return _dcfb ,_cbg .Wrap (_fdff ,_bdc ,"n\u0065\u0077\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};return _dcfb +_feba ,nil ;};func (_baff *SymbolDictionary )readRegionFlags ()error {var (_cgea uint64 ;
_adgeg int ;);_ ,_gafbg :=_baff ._cabd .ReadBits (3);if _gafbg !=nil {return _gafbg ;};_adgeg ,_gafbg =_baff ._cabd .ReadBit ();if _gafbg !=nil {return _gafbg ;};_baff .SdrTemplate =int8 (_adgeg );_cgea ,_gafbg =_baff ._cabd .ReadBits (2);if _gafbg !=nil {return _gafbg ;
};_baff .SdTemplate =int8 (_cgea &0xf);_adgeg ,_gafbg =_baff ._cabd .ReadBit ();if _gafbg !=nil {return _gafbg ;};if _adgeg ==1{_baff ._fagb =true ;};_adgeg ,_gafbg =_baff ._cabd .ReadBit ();if _gafbg !=nil {return _gafbg ;};if _adgeg ==1{_baff ._fbgc =true ;
};_adgeg ,_gafbg =_baff ._cabd .ReadBit ();if _gafbg !=nil {return _gafbg ;};if _adgeg ==1{_baff .SdHuffAggInstanceSelection =true ;};_adgeg ,_gafbg =_baff ._cabd .ReadBit ();if _gafbg !=nil {return _gafbg ;};_baff .SdHuffBMSizeSelection =int8 (_adgeg );
_cgea ,_gafbg =_baff ._cabd .ReadBits (2);if _gafbg !=nil {return _gafbg ;};_baff .SdHuffDecodeWidthSelection =int8 (_cgea &0xf);_cgea ,_gafbg =_baff ._cabd .ReadBits (2);if _gafbg !=nil {return _gafbg ;};_baff .SdHuffDecodeHeightSelection =int8 (_cgea &0xf);
_adgeg ,_gafbg =_baff ._cabd .ReadBit ();if _gafbg !=nil {return _gafbg ;};if _adgeg ==1{_baff .UseRefinementAggregation =true ;};_adgeg ,_gafbg =_baff ._cabd .ReadBit ();if _gafbg !=nil {return _gafbg ;};if _adgeg ==1{_baff .IsHuffmanEncoded =true ;};
return nil ;};func (_bdgb *Header )readSegmentDataLength (_dgbf _ca .StreamReader )(_cegb error ){_bdgb .SegmentDataLength ,_cegb =_dgbf .ReadBits (32);if _cegb !=nil {return _cegb ;};_bdgb .SegmentDataLength &=_c .MaxInt32 ;if _bdgb .SegmentDataLength > _dgbf .Length (){_bdgb .SegmentDataLength =_dgbf .Length ();
};return nil ;};func (_egac *SymbolDictionary )decodeDifferenceWidth ()(int64 ,error ){if _egac .IsHuffmanEncoded {switch _egac .SdHuffDecodeWidthSelection {case 0:_deab ,_dbfb :=_ga .GetStandardTable (2);if _dbfb !=nil {return 0,_dbfb ;};return _deab .Decode (_egac ._cabd );
case 1:_beaad ,_dfbd :=_ga .GetStandardTable (3);if _dfbd !=nil {return 0,_dfbd ;};return _beaad .Decode (_egac ._cabd );case 3:if _egac ._abae ==nil {var _fcef int ;if _egac .SdHuffDecodeHeightSelection ==3{_fcef ++;};_ddba ,_eggd :=_egac .getUserTable (_fcef );
if _eggd !=nil {return 0,_eggd ;};_egac ._abae =_ddba ;};return _egac ._abae .Decode (_egac ._cabd );};}else {_efdc ,_fcfeab :=_egac ._bcd .DecodeInt (_egac ._deda );if _fcfeab !=nil {return 0,_fcfeab ;};return int64 (_efdc ),nil ;};return 0,nil ;};func (_gbbc *SymbolDictionary )encodeRefinementATFlags (_gadf _ca .BinaryWriter )(_ccabb int ,_cdace error ){const _cace ="\u0065\u006e\u0063od\u0065\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0041\u0054\u0046\u006c\u0061\u0067\u0073";
if !_gbbc .UseRefinementAggregation ||_gbbc .SdrTemplate !=0{return 0,nil ;};for _aeae :=0;_aeae < 2;_aeae ++{if _cdace =_gadf .WriteByte (byte (_gbbc .SdrATX [_aeae ]));_cdace !=nil {return _ccabb ,_cbg .Wrapf (_cdace ,_cace ,"\u0053\u0064\u0072\u0041\u0054\u0058\u005b\u0025\u0064\u005d",_aeae );
};_ccabb ++;if _cdace =_gadf .WriteByte (byte (_gbbc .SdrATY [_aeae ]));_cdace !=nil {return _ccabb ,_cbg .Wrapf (_cdace ,_cace ,"\u0053\u0064\u0072\u0041\u0054\u0059\u005b\u0025\u0064\u005d",_aeae );};_ccabb ++;};return _ccabb ,nil ;};func (_efad *GenericRegion )overrideAtTemplate1 (_ffa ,_feff ,_edcf ,_geed ,_ddec int )int {_ffa &=0x1FF7;
if _efad .GBAtY [0]==0&&_efad .GBAtX [0]>=-int8 (_ddec ){_ffa |=(_geed >>uint (7-(int8 (_ddec )+_efad .GBAtX [0]))&0x1)<<3;}else {_ffa |=int (_efad .getPixel (_feff +int (_efad .GBAtX [0]),_edcf +int (_efad .GBAtY [0])))<<3;};return _ffa ;};func (_gbc *RegionSegment )parseHeader ()error {const _afcg ="p\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072";
_ge .Log .Trace ("\u005b\u0052\u0045\u0047I\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002dH\u0045A\u0044\u0045\u0052\u005d\u0020\u0042\u0065g\u0069\u006e");defer func (){_ge .Log .Trace ("\u005b\u0052\u0045G\u0049\u004f\u004e\u005d[\u0050\u0041\u0052\u0053\u0045\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
}();_baa ,_ceab :=_gbc ._ddaa .ReadBits (32);if _ceab !=nil {return _cbg .Wrap (_ceab ,_afcg ,"\u0077\u0069\u0064t\u0068");};_gbc .BitmapWidth =uint32 (_baa &_c .MaxUint32 );_baa ,_ceab =_gbc ._ddaa .ReadBits (32);if _ceab !=nil {return _cbg .Wrap (_ceab ,_afcg ,"\u0068\u0065\u0069\u0067\u0068\u0074");
};_gbc .BitmapHeight =uint32 (_baa &_c .MaxUint32 );_baa ,_ceab =_gbc ._ddaa .ReadBits (32);if _ceab !=nil {return _cbg .Wrap (_ceab ,_afcg ,"\u0078\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_gbc .XLocation =uint32 (_baa &_c .MaxUint32 );
_baa ,_ceab =_gbc ._ddaa .ReadBits (32);if _ceab !=nil {return _cbg .Wrap (_ceab ,_afcg ,"\u0079\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_gbc .YLocation =uint32 (_baa &_c .MaxUint32 );if _ ,_ceab =_gbc ._ddaa .ReadBits (5);_ceab !=nil {return _cbg .Wrap (_ceab ,_afcg ,"\u0064i\u0072\u0079\u0020\u0072\u0065\u0061d");
};if _ceab =_gbc .readCombinationOperator ();_ceab !=nil {return _cbg .Wrap (_ceab ,_afcg ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};return nil ;};func (_egbf *GenericRegion )decodeTemplate1 (_aeg ,_cfad ,_ggee int ,_afge ,_cgac int )(_efc error ){const _baba ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0031";
var (_cfbb ,_dcgd int ;_fgfe ,_afd int ;_efaa byte ;_cbf ,_gdec int ;);if _aeg >=1{_efaa ,_efc =_egbf .Bitmap .GetByte (_cgac );if _efc !=nil {return _cbg .Wrap (_efc ,_baba ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_fgfe =int (_efaa );};if _aeg >=2{_efaa ,_efc =_egbf .Bitmap .GetByte (_cgac -_egbf .Bitmap .RowStride );
if _efc !=nil {return _cbg .Wrap (_efc ,_baba ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_afd =int (_efaa )<<5;};_cfbb =((_fgfe >>1)&0x1f8)|((_afd >>1)&0x1e00);for _bfbf :=0;_bfbf < _ggee ;_bfbf =_cbf {var (_dgf byte ;_efac int ;);_cbf =_bfbf +8;
if _edc :=_cfad -_bfbf ;_edc > 8{_efac =8;}else {_efac =_edc ;};if _aeg > 0{_fgfe <<=8;if _cbf < _cfad {_efaa ,_efc =_egbf .Bitmap .GetByte (_cgac +1);if _efc !=nil {return _cbg .Wrap (_efc ,_baba ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};
_fgfe |=int (_efaa );};};if _aeg > 1{_afd <<=8;if _cbf < _cfad {_efaa ,_efc =_egbf .Bitmap .GetByte (_cgac -_egbf .Bitmap .RowStride +1);if _efc !=nil {return _cbg .Wrap (_efc ,_baba ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_afd |=int (_efaa )<<5;
};};for _edfc :=0;_edfc < _efac ;_edfc ++{if _egbf ._bbfd {_dcgd =_egbf .overrideAtTemplate1 (_cfbb ,_bfbf +_edfc ,_aeg ,int (_dgf ),_edfc );_egbf ._fcb .SetIndex (int32 (_dcgd ));}else {_egbf ._fcb .SetIndex (int32 (_cfbb ));};_gdec ,_efc =_egbf ._feb .DecodeBit (_egbf ._fcb );
if _efc !=nil {return _cbg .Wrap (_efc ,_baba ,"");};_dgf |=byte (_gdec )<<uint (7-_edfc );_gggf :=uint (8-_edfc );_cfbb =((_cfbb &0xefb)<<1)|_gdec |((_fgfe >>_gggf )&0x8)|((_afd >>_gggf )&0x200);};if _ffd :=_egbf .Bitmap .SetByte (_afge ,_dgf );_ffd !=nil {return _cbg .Wrap (_ffd ,_baba ,"");
};_afge ++;_cgac ++;};return nil ;};type Type int ;func (_cdacg *TextRegion )setContexts (_agfad *_cd .DecoderStats ,_afec *_cd .DecoderStats ,_afcae *_cd .DecoderStats ,_gege *_cd .DecoderStats ,_fbaf *_cd .DecoderStats ,_fgdef *_cd .DecoderStats ,_fcbe *_cd .DecoderStats ,_fffe *_cd .DecoderStats ,_agad *_cd .DecoderStats ,_dfee *_cd .DecoderStats ){_cdacg ._acbc =_afec ;
_cdacg ._daed =_afcae ;_cdacg ._cabb =_gege ;_cdacg ._ffaeb =_fbaf ;_cdacg ._bffb =_fcbe ;_cdacg ._fddb =_fffe ;_cdacg ._bfgef =_fgdef ;_cdacg ._abge =_agad ;_cdacg ._afcdd =_dfee ;_cdacg ._bfdf =_agfad ;};func (_bbfca *HalftoneRegion )GetPatterns ()([]*_ag .Bitmap ,error ){var (_agff []*_ag .Bitmap ;
_dcb error ;);for _ ,_fffa :=range _bbfca ._afgg .RTSegments {var _fcfe Segmenter ;_fcfe ,_dcb =_fffa .GetSegmentData ();if _dcb !=nil {_ge .Log .Debug ("\u0047e\u0074\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061 \u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025v",_dcb );
return nil ,_dcb ;};_efdf ,_cbda :=_fcfe .(*PatternDictionary );if !_cbda {_dcb =_f .Errorf ("\u0072e\u006c\u0061t\u0065\u0064\u0020\u0073e\u0067\u006d\u0065n\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0070at\u0074\u0065\u0072n\u0020\u0064i\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u003a \u0025\u0054",_fcfe );
return nil ,_dcb ;};var _defaa []*_ag .Bitmap ;_defaa ,_dcb =_efdf .GetDictionary ();if _dcb !=nil {_ge .Log .Debug ("\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_dcb );
return nil ,_dcb ;};_agff =append (_agff ,_defaa ...);};return _agff ,nil ;};func (_dae *GenericRegion )overrideAtTemplate0a (_cdg ,_edd ,_geec ,_addg ,_eef ,_bfbe int )int {if _dae .GBAtOverride [0]{_cdg &=0xFFEF;if _dae .GBAtY [0]==0&&_dae .GBAtX [0]>=-int8 (_eef ){_cdg |=(_addg >>uint (int8 (_bfbe )-_dae .GBAtX [0]&0x1))<<4;
}else {_cdg |=int (_dae .getPixel (_edd +int (_dae .GBAtX [0]),_geec +int (_dae .GBAtY [0])))<<4;};};if _dae .GBAtOverride [1]{_cdg &=0xFBFF;if _dae .GBAtY [1]==0&&_dae .GBAtX [1]>=-int8 (_eef ){_cdg |=(_addg >>uint (int8 (_bfbe )-_dae .GBAtX [1]&0x1))<<10;
}else {_cdg |=int (_dae .getPixel (_edd +int (_dae .GBAtX [1]),_geec +int (_dae .GBAtY [1])))<<10;};};if _dae .GBAtOverride [2]{_cdg &=0xF7FF;if _dae .GBAtY [2]==0&&_dae .GBAtX [2]>=-int8 (_eef ){_cdg |=(_addg >>uint (int8 (_bfbe )-_dae .GBAtX [2]&0x1))<<11;
}else {_cdg |=int (_dae .getPixel (_edd +int (_dae .GBAtX [2]),_geec +int (_dae .GBAtY [2])))<<11;};};if _dae .GBAtOverride [3]{_cdg &=0x7FFF;if _dae .GBAtY [3]==0&&_dae .GBAtX [3]>=-int8 (_eef ){_cdg |=(_addg >>uint (int8 (_bfbe )-_dae .GBAtX [3]&0x1))<<15;
}else {_cdg |=int (_dae .getPixel (_edd +int (_dae .GBAtX [3]),_geec +int (_dae .GBAtY [3])))<<15;};};return _cdg ;};func (_gfff *PageInformationSegment )String ()string {_eefb :=&_dba .Builder {};_eefb .WriteString ("\u000a\u005b\u0050\u0041G\u0045\u002d\u0049\u004e\u0046\u004f\u0052\u004d\u0041\u0054I\u004fN\u002d\u0053\u0045\u0047\u004d\u0045\u004eT\u005d\u000a");
_eefb .WriteString (_f .Sprintf ("\u0009\u002d \u0042\u004d\u0048e\u0069\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u000a",_gfff .PageBMHeight ));_eefb .WriteString (_f .Sprintf ("\u0009-\u0020B\u004d\u0057\u0069\u0064\u0074\u0068\u003a\u0020\u0025\u0064\u000a",_gfff .PageBMWidth ));
_eefb .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0058\u003a\u0020\u0025\u0064\u000a",_gfff .ResolutionX ));_eefb .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0059\u003a\u0020\u0025\u0064\u000a",_gfff .ResolutionY ));
_eefb .WriteString (_f .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0073\u000a",_gfff ._ccdc ));_eefb .WriteString (_f .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006eO\u0070\u0065\u0072\u0061\u0074\u006f\u0072O\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025v\u000a",_gfff ._bfd ));
_eefb .WriteString (_f .Sprintf ("\u0009-\u0020I\u0073\u004c\u006f\u0073\u0073l\u0065\u0073s\u003a\u0020\u0025\u0076\u000a",_gfff .IsLossless ));_eefb .WriteString (_f .Sprintf ("\u0009\u002d\u0020R\u0065\u0071\u0075\u0069r\u0065\u0073\u0041\u0075\u0078\u0069\u006ci\u0061\u0072\u0079\u0042\u0075\u0066\u0066\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_gfff ._abfc ));
_eefb .WriteString (_f .Sprintf ("\u0009\u002d\u0020M\u0069\u0067\u0068\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0052e\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0076\u000a",_gfff ._cfec ));_eefb .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0049\u0073\u0053\u0074\u0072\u0069\u0070\u0065\u0064:\u0020\u0025\u0076\u000a",_gfff .IsStripe ));
_eefb .WriteString (_f .Sprintf ("\t\u002d\u0020\u004d\u0061xS\u0074r\u0069\u0070\u0065\u0053\u0069z\u0065\u003a\u0020\u0025\u0076\u000a",_gfff .MaxStripeSize ));return _eefb .String ();};func (_bbag *SymbolDictionary )getUserTable (_fdef int )(_ga .Tabler ,error ){var _acfd int ;
for _ ,_dfcf :=range _bbag .Header .RTSegments {if _dfcf .Type ==53{if _acfd ==_fdef {_edgce ,_gfeac :=_dfcf .GetSegmentData ();if _gfeac !=nil {return nil ,_gfeac ;};_caab :=_edgce .(_ga .BasicTabler );return _ga .NewEncodedTable (_caab );};_acfd ++;};
};return nil ,nil ;};func (_adb *GenericRefinementRegion )GetRegionInfo ()*RegionSegment {return _adb .RegionInfo };type TextRegion struct{_ccbg _ca .StreamReader ;RegionInfo *RegionSegment ;SbrTemplate int8 ;SbDsOffset int8 ;DefaultPixel int8 ;CombinationOperator _ag .CombinationOperator ;
IsTransposed int8 ;ReferenceCorner int16 ;LogSBStrips int16 ;UseRefinement bool ;IsHuffmanEncoded bool ;SbHuffRSize int8 ;SbHuffRDY int8 ;SbHuffRDX int8 ;SbHuffRDHeight int8 ;SbHuffRDWidth int8 ;SbHuffDT int8 ;SbHuffDS int8 ;SbHuffFS int8 ;SbrATX []int8 ;
SbrATY []int8 ;NumberOfSymbolInstances uint32 ;_fagd int64 ;SbStrips int8 ;NumberOfSymbols uint32 ;RegionBitmap *_ag .Bitmap ;Symbols []*_ag .Bitmap ;_ffad *_cd .Decoder ;_fbab *GenericRefinementRegion ;_acbc *_cd .DecoderStats ;_daed *_cd .DecoderStats ;
_cabb *_cd .DecoderStats ;_ffaeb *_cd .DecoderStats ;_cadg *_cd .DecoderStats ;_bffb *_cd .DecoderStats ;_fddb *_cd .DecoderStats ;_bfgef *_cd .DecoderStats ;_abge *_cd .DecoderStats ;_afcdd *_cd .DecoderStats ;_bfdf *_cd .DecoderStats ;_bdcb int8 ;_defag *_ga .FixedSizeTable ;
Header *Header ;_cged _ga .Tabler ;_gaad _ga .Tabler ;_ddbb _ga .Tabler ;_fgfd _ga .Tabler ;_gefbe _ga .Tabler ;_dbag _ga .Tabler ;_geae _ga .Tabler ;_ddbd _ga .Tabler ;_cbeb ,_edag map[int ]int ;_degd []int ;_dddb *_ag .Points ;_bgfa *_ag .Bitmaps ;_cdcf *_agc .IntSlice ;
_acge ,_cagef int ;_bffbf *_ag .Boxes ;};func (_ceaf *PatternDictionary )computeSegmentDataStructure ()error {_ceaf .DataOffset =_ceaf ._cggb .StreamPosition ();_ceaf .DataHeaderLength =_ceaf .DataOffset -_ceaf .DataHeaderOffset ;_ceaf .DataLength =int64 (_ceaf ._cggb .Length ())-_ceaf .DataHeaderLength ;
return nil ;};func (_cdcd *TextRegion )computeSymbolCodeLength ()error {if _cdcd .IsHuffmanEncoded {return _cdcd .symbolIDCodeLengths ();};_cdcd ._bdcb =int8 (_c .Ceil (_c .Log (float64 (_cdcd .NumberOfSymbols ))/_c .Log (2)));return nil ;};func (_dggd *SymbolDictionary )String ()string {_ddbc :=&_dba .Builder {};
_ddbc .WriteString ("\n\u005b\u0053\u0059\u004dBO\u004c-\u0044\u0049\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u000a");_ddbc .WriteString (_f .Sprintf ("\u0009-\u0020S\u0064\u0072\u0054\u0065\u006dp\u006c\u0061t\u0065\u0020\u0025\u0076\u000a",_dggd .SdrTemplate ));
_ddbc .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0025\u0076\u000a",_dggd .SdTemplate ));_ddbc .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006eg\u0043\u006f\u006e\u0074\u0065\u0078\u0074R\u0065\u0074\u0061\u0069\u006e\u0065\u0064\u0020\u0025\u0076\u000a",_dggd ._fagb ));
_ddbc .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074\u0065\u0078\u0074\u0055\u0073\u0065\u0064 \u0025\u0076\u000a",_dggd ._fbgc ));_ddbc .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_dggd .SdHuffAggInstanceSelection ));
_ddbc .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053d\u0048\u0075\u0066\u0066\u0042\u004d\u0053\u0069\u007a\u0065S\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020%\u0076\u000a",_dggd .SdHuffBMSizeSelection ));_ddbc .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_dggd .SdHuffDecodeWidthSelection ));
_ddbc .WriteString (_f .Sprintf ("\u0009\u002d\u0020Sd\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064e\u0048e\u0069g\u0068t\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_dggd .SdHuffDecodeHeightSelection ));_ddbc .WriteString (_f .Sprintf ("\u0009\u002d\u0020U\u0073\u0065\u0052\u0065f\u0069\u006e\u0065\u006d\u0065\u006e\u0074A\u0067\u0067\u0072\u0065\u0067\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_dggd .UseRefinementAggregation ));
_ddbc .WriteString (_f .Sprintf ("\u0009\u002d\u0020is\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045\u006e\u0063\u006f\u0064\u0065\u0064\u0020\u0025\u0076\u000a",_dggd .IsHuffmanEncoded ));_ddbc .WriteString (_f .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_dggd .SdATX ));
_ddbc .WriteString (_f .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_dggd .SdATY ));_ddbc .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_dggd .SdrATX ));_ddbc .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_dggd .SdrATY ));
_ddbc .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u004e\u0075\u006d\u0062\u0065\u0072\u004ff\u0045\u0078\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_dggd .NumberOfExportedSymbols ));_ddbc .WriteString (_f .Sprintf ("\u0009-\u0020\u004e\u0075\u006db\u0065\u0072\u004f\u0066\u004ee\u0077S\u0079m\u0062\u006f\u006c\u0073\u0020\u0025\u0076\n",_dggd .NumberOfNewSymbols ));
_ddbc .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u004ff\u0049\u006d\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_dggd ._fbf ));_ddbc .WriteString (_f .Sprintf ("\u0009\u002d \u006e\u0075\u006d\u0062\u0065\u0072\u004f\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0064\u0053\u0079\u006d\u0062\u006f\u006c\u0073 %\u0076\u000a",_dggd ._cedf ));
return _ddbc .String ();};type EndOfStripe struct{_eb _ca .StreamReader ;_ec int ;};func (_gfbd *SymbolDictionary )Init (h *Header ,r _ca .StreamReader )error {_gfbd .Header =h ;_gfbd ._cabd =r ;return _gfbd .parseHeader ();};func (_gdeg *SymbolDictionary )InitEncode (symbols *_ag .Bitmaps ,symbolList []int ,symbolMap map[int ]int ,unborderSymbols bool )error {const _beeg ="S\u0079\u006d\u0062\u006f\u006c\u0044i\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002eI\u006e\u0069\u0074E\u006ec\u006f\u0064\u0065";
_gdeg .SdATX =[]int8 {3,-3,2,-2};_gdeg .SdATY =[]int8 {-1,-1,-2,-2};_gdeg ._eag =symbols ;_gdeg ._eaga =make ([]int ,len (symbolList ));copy (_gdeg ._eaga ,symbolList );if len (_gdeg ._eaga )!=_gdeg ._eag .Size (){return _cbg .Error (_beeg ,"s\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0061\u006e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u004ci\u0073\u0074\u0020\u006f\u0066\u0020\u0064\u0069\u0066\u0066er\u0065\u006e\u0074 \u0073i\u007a\u0065");
};_gdeg .NumberOfNewSymbols =uint32 (symbols .Size ());_gdeg .NumberOfExportedSymbols =uint32 (symbols .Size ());_gdeg ._dcd =symbolMap ;_gdeg ._eadc =unborderSymbols ;return nil ;};func (_adf *HalftoneRegion )GetRegionInfo ()*RegionSegment {return _adf .RegionSegment };
func (_bddc *TextRegion )decodeRdh ()(int64 ,error ){const _gede ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064h";if _bddc .IsHuffmanEncoded {if _bddc .SbHuffRDHeight ==3{if _bddc ._gefbe ==nil {var (_gbaf int ;_gbab error ;);if _bddc .SbHuffFS ==3{_gbaf ++;
};if _bddc .SbHuffDS ==3{_gbaf ++;};if _bddc .SbHuffDT ==3{_gbaf ++;};if _bddc .SbHuffRDWidth ==3{_gbaf ++;};_bddc ._gefbe ,_gbab =_bddc .getUserTable (_gbaf );if _gbab !=nil {return 0,_cbg .Wrap (_gbab ,_gede ,"");};};return _bddc ._gefbe .Decode (_bddc ._ccbg );
};_agag ,_gcad :=_ga .GetStandardTable (14+int (_bddc .SbHuffRDHeight ));if _gcad !=nil {return 0,_cbg .Wrap (_gcad ,_gede ,"");};return _agag .Decode (_bddc ._ccbg );};_age ,_cbcg :=_bddc ._ffad .DecodeInt (_bddc ._fddb );if _cbcg !=nil {return 0,_cbg .Wrap (_cbcg ,_gede ,"");
};return int64 (_age ),nil ;};func (_ged *SymbolDictionary )getSbSymCodeLen ()int8 {_dafg :=int8 (_c .Ceil (_c .Log (float64 (_ged ._fbf +_ged .NumberOfNewSymbols ))/_c .Log (2)));if _ged .IsHuffmanEncoded &&_dafg < 1{return 1;};return _dafg ;};func (_bgd *TextRegion )decodeRI ()(int64 ,error ){if !_bgd .UseRefinement {return 0,nil ;
};if _bgd .IsHuffmanEncoded {_eebdf ,_dfeb :=_bgd ._ccbg .ReadBit ();return int64 (_eebdf ),_dfeb ;};_fgda ,_gbae :=_bgd ._ffad .DecodeInt (_bgd ._cadg );return int64 (_fgda ),_gbae ;};func (_gaac *RegionSegment )Encode (w _ca .BinaryWriter )(_afgbf int ,_ebf error ){const _ccfc ="R\u0065g\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065n\u0074\u002e\u0045\u006eco\u0064\u0065";
_feeb :=make ([]byte ,4);_d .BigEndian .PutUint32 (_feeb ,_gaac .BitmapWidth );_afgbf ,_ebf =w .Write (_feeb );if _ebf !=nil {return 0,_cbg .Wrap (_ebf ,_ccfc ,"\u0057\u0069\u0064t\u0068");};_d .BigEndian .PutUint32 (_feeb ,_gaac .BitmapHeight );var _egfc int ;
_egfc ,_ebf =w .Write (_feeb );if _ebf !=nil {return 0,_cbg .Wrap (_ebf ,_ccfc ,"\u0048\u0065\u0069\u0067\u0068\u0074");};_afgbf +=_egfc ;_d .BigEndian .PutUint32 (_feeb ,_gaac .XLocation );_egfc ,_ebf =w .Write (_feeb );if _ebf !=nil {return 0,_cbg .Wrap (_ebf ,_ccfc ,"\u0058L\u006f\u0063\u0061\u0074\u0069\u006fn");
};_afgbf +=_egfc ;_d .BigEndian .PutUint32 (_feeb ,_gaac .YLocation );_egfc ,_ebf =w .Write (_feeb );if _ebf !=nil {return 0,_cbg .Wrap (_ebf ,_ccfc ,"\u0059L\u006f\u0063\u0061\u0074\u0069\u006fn");};_afgbf +=_egfc ;if _ebf =w .WriteByte (byte (_gaac .CombinaionOperator )&0x07);
_ebf !=nil {return 0,_cbg .Wrap (_ebf ,_ccfc ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};_afgbf ++;return _afgbf ,nil ;};var _ templater =&template1 {};func (_cbfe *Header )pageSize ()uint {if _cbfe .PageAssociation <=255{return 1;
};return 4;};func (_eceb *HalftoneRegion )parseHeader ()error {if _dcf :=_eceb .RegionSegment .parseHeader ();_dcf !=nil {return _dcf ;};_cced ,_fag :=_eceb ._abab .ReadBit ();if _fag !=nil {return _fag ;};_eceb .HDefaultPixel =int8 (_cced );_adaf ,_fag :=_eceb ._abab .ReadBits (3);
if _fag !=nil {return _fag ;};_eceb .CombinationOperator =_ag .CombinationOperator (_adaf &0xf);_cced ,_fag =_eceb ._abab .ReadBit ();if _fag !=nil {return _fag ;};if _cced ==1{_eceb .HSkipEnabled =true ;};_adaf ,_fag =_eceb ._abab .ReadBits (2);if _fag !=nil {return _fag ;
};_eceb .HTemplate =byte (_adaf &0xf);_cced ,_fag =_eceb ._abab .ReadBit ();if _fag !=nil {return _fag ;};if _cced ==1{_eceb .IsMMREncoded =true ;};_adaf ,_fag =_eceb ._abab .ReadBits (32);if _fag !=nil {return _fag ;};_eceb .HGridWidth =uint32 (_adaf &_c .MaxUint32 );
_adaf ,_fag =_eceb ._abab .ReadBits (32);if _fag !=nil {return _fag ;};_eceb .HGridHeight =uint32 (_adaf &_c .MaxUint32 );_adaf ,_fag =_eceb ._abab .ReadBits (32);if _fag !=nil {return _fag ;};_eceb .HGridX =int32 (_adaf &_c .MaxInt32 );_adaf ,_fag =_eceb ._abab .ReadBits (32);
if _fag !=nil {return _fag ;};_eceb .HGridY =int32 (_adaf &_c .MaxInt32 );_adaf ,_fag =_eceb ._abab .ReadBits (16);if _fag !=nil {return _fag ;};_eceb .HRegionX =uint16 (_adaf &_c .MaxUint16 );_adaf ,_fag =_eceb ._abab .ReadBits (16);if _fag !=nil {return _fag ;
};_eceb .HRegionY =uint16 (_adaf &_c .MaxUint16 );if _fag =_eceb .computeSegmentDataStructure ();_fag !=nil {return _fag ;};return _eceb .checkInput ();};func (_faga *Header )subInputReader ()(_ca .StreamReader ,error ){return _ca .NewSubstreamReader (_faga .Reader ,_faga .SegmentDataStartOffset ,_faga .SegmentDataLength );
};func NewRegionSegment (r _ca .StreamReader )*RegionSegment {return &RegionSegment {_ddaa :r }};func (_ddbe *PageInformationSegment )CombinationOperator ()_ag .CombinationOperator {return _ddbe ._ccdc ;};func _feade (_eebf int )int {if _eebf ==0{return 0;
};_eebf |=_eebf >>1;_eebf |=_eebf >>2;_eebf |=_eebf >>4;_eebf |=_eebf >>8;_eebf |=_eebf >>16;return (_eebf +1)>>1;};func (_cgdf *SymbolDictionary )decodeThroughTextRegion (_aefea ,_caad ,_gfad uint32 )error {if _cgdf ._dfb ==nil {_cgdf ._dfb =_afadf (_cgdf ._cabd ,nil );
_cgdf ._dfb .setContexts (_cgdf ._gdcb ,_cd .NewStats (512,1),_cd .NewStats (512,1),_cd .NewStats (512,1),_cd .NewStats (512,1),_cgdf ._faacd ,_cd .NewStats (512,1),_cd .NewStats (512,1),_cd .NewStats (512,1),_cd .NewStats (512,1));};if _fbbd :=_cgdf .setSymbolsArray ();
_fbbd !=nil {return _fbbd ;};_cgdf ._dfb .setParameters (_cgdf ._bcd ,_cgdf .IsHuffmanEncoded ,true ,_aefea ,_caad ,_gfad ,1,_cgdf ._fbf +_cgdf ._cedf ,0,0,0,1,0,0,0,0,0,0,0,0,0,_cgdf .SdrTemplate ,_cgdf .SdrATX ,_cgdf .SdrATY ,_cgdf ._bdde ,_cgdf ._gbg );
return _cgdf .addSymbol (_cgdf ._dfb );};func (_egfgd *TextRegion )decodeRdy ()(int64 ,error ){const _fbdag ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064y";if _egfgd .IsHuffmanEncoded {if _egfgd .SbHuffRDY ==3{if _egfgd ._geae ==nil {var (_dcbf int ;_gfccc error ;
);if _egfgd .SbHuffFS ==3{_dcbf ++;};if _egfgd .SbHuffDS ==3{_dcbf ++;};if _egfgd .SbHuffDT ==3{_dcbf ++;};if _egfgd .SbHuffRDWidth ==3{_dcbf ++;};if _egfgd .SbHuffRDHeight ==3{_dcbf ++;};if _egfgd .SbHuffRDX ==3{_dcbf ++;};_egfgd ._geae ,_gfccc =_egfgd .getUserTable (_dcbf );
if _gfccc !=nil {return 0,_cbg .Wrap (_gfccc ,_fbdag ,"");};};return _egfgd ._geae .Decode (_egfgd ._ccbg );};_cfcd ,_bcaf :=_ga .GetStandardTable (14+int (_egfgd .SbHuffRDY ));if _bcaf !=nil {return 0,_bcaf ;};return _cfcd .Decode (_egfgd ._ccbg );};_aecd ,_bfde :=_egfgd ._ffad .DecodeInt (_egfgd ._afcdd );
if _bfde !=nil {return 0,_cbg .Wrap (_bfde ,_fbdag ,"");};return int64 (_aecd ),nil ;};func (_gfde *TextRegion )encodeSymbols (_cbfd _ca .BinaryWriter )(_efdca int ,_dbdeb error ){const _ccad ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
_fbbe :=make ([]byte ,4);_d .BigEndian .PutUint32 (_fbbe ,_gfde .NumberOfSymbols );if _efdca ,_dbdeb =_cbfd .Write (_fbbe );_dbdeb !=nil {return _efdca ,_cbg .Wrap (_dbdeb ,_ccad ,"\u004e\u0075\u006dbe\u0072\u004f\u0066\u0053\u0079\u006d\u0062\u006f\u006c\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073");
};_daga ,_dbdeb :=_ag .NewClassedPoints (_gfde ._dddb ,_gfde ._degd );if _dbdeb !=nil {return 0,_cbg .Wrap (_dbdeb ,_ccad ,"");};var _dcfd ,_ggcce int ;_abegb :=_g .New ();_abegb .Init ();if _dbdeb =_abegb .EncodeInteger (_g .IADT ,0);_dbdeb !=nil {return _efdca ,_cbg .Wrap (_dbdeb ,_ccad ,"\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0020\u0044\u0054");
};_gdegb ,_dbdeb :=_daga .GroupByY ();if _dbdeb !=nil {return 0,_cbg .Wrap (_dbdeb ,_ccad ,"");};for _ ,_befba :=range _gdegb {_dcgda :=int (_befba .YAtIndex (0));_ecge :=_dcgda -_dcfd ;if _dbdeb =_abegb .EncodeInteger (_g .IADT ,_ecge );_dbdeb !=nil {return _efdca ,_cbg .Wrap (_dbdeb ,_ccad ,"");
};var _cgga int ;for _abce ,_fadc :=range _befba .IntSlice {switch _abce {case 0:_egca :=int (_befba .XAtIndex (_abce ))-_ggcce ;if _dbdeb =_abegb .EncodeInteger (_g .IAFS ,_egca );_dbdeb !=nil {return _efdca ,_cbg .Wrap (_dbdeb ,_ccad ,"");};_ggcce +=_egca ;
_cgga =_ggcce ;default:_agda :=int (_befba .XAtIndex (_abce ))-_cgga ;if _dbdeb =_abegb .EncodeInteger (_g .IADS ,_agda );_dbdeb !=nil {return _efdca ,_cbg .Wrap (_dbdeb ,_ccad ,"");};_cgga +=_agda ;};_ggea ,_bdgdd :=_gfde ._cdcf .Get (_fadc );if _bdgdd !=nil {return _efdca ,_cbg .Wrap (_bdgdd ,_ccad ,"");
};_ggbd ,_cafa :=_gfde ._cbeb [_ggea ];if !_cafa {_ggbd ,_cafa =_gfde ._edag [_ggea ];if !_cafa {return _efdca ,_cbg .Errorf (_ccad ,"\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027\u0025d\u0027\u0020\u0069s\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064 \u0069\u006e\u0020\u0067\u006cob\u0061\u006c\u0020\u0061\u006e\u0064\u0020\u006c\u006f\u0063\u0061\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020\u006d\u0061\u0070",_ggea );
};};if _bdgdd =_abegb .EncodeIAID (_gfde ._cagef ,_ggbd );_bdgdd !=nil {return _efdca ,_cbg .Wrap (_bdgdd ,_ccad ,"");};};if _dbdeb =_abegb .EncodeOOB (_g .IADS );_dbdeb !=nil {return _efdca ,_cbg .Wrap (_dbdeb ,_ccad ,"");};};_abegb .Final ();_begg ,_dbdeb :=_abegb .WriteTo (_cbfd );
if _dbdeb !=nil {return _efdca ,_cbg .Wrap (_dbdeb ,_ccad ,"");};_efdca +=int (_begg );return _efdca ,nil ;};func (_dabb *PageInformationSegment )Init (h *Header ,r _ca .StreamReader )(_ebcc error ){_dabb ._gaec =r ;if _ebcc =_dabb .parseHeader ();_ebcc !=nil {return _cbg .Wrap (_ebcc ,"P\u0061\u0067\u0065\u0049\u006e\u0066o\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065g\u006d\u0065\u006et\u002eI\u006e\u0069\u0074","");
};return nil ;};func (_gfef *TextRegion )decodeCurrentT ()(int64 ,error ){if _gfef .SbStrips !=1{if _gfef .IsHuffmanEncoded {_cfda ,_geff :=_gfef ._ccbg .ReadBits (byte (_gfef .LogSBStrips ));return int64 (_cfda ),_geff ;};_efafg ,_bfef :=_gfef ._ffad .DecodeInt (_gfef ._ffaeb );
if _bfef !=nil {return 0,_bfef ;};return int64 (_efafg ),nil ;};return 0,nil ;};type EncodeInitializer interface{InitEncode ();};func (_cggba *TextRegion )decodeIds ()(int64 ,error ){const _afga ="\u0064e\u0063\u006f\u0064\u0065\u0049\u0064s";if _cggba .IsHuffmanEncoded {if _cggba .SbHuffDS ==3{if _cggba ._gaad ==nil {_cgag :=0;
if _cggba .SbHuffFS ==3{_cgag ++;};var _caeg error ;_cggba ._gaad ,_caeg =_cggba .getUserTable (_cgag );if _caeg !=nil {return 0,_cbg .Wrap (_caeg ,_afga ,"");};};return _cggba ._gaad .Decode (_cggba ._ccbg );};_efg ,_cagd :=_ga .GetStandardTable (8+int (_cggba .SbHuffDS ));
if _cagd !=nil {return 0,_cbg .Wrap (_cagd ,_afga ,"");};return _efg .Decode (_cggba ._ccbg );};_eddgc ,_eacdg :=_cggba ._ffad .DecodeInt (_cggba ._cabb );if _eacdg !=nil {return 0,_cbg .Wrap (_eacdg ,_afga ,"\u0063\u0078\u0049\u0041\u0044\u0053");};return int64 (_eddgc ),nil ;
};func (_gfbf *TextRegion )setParameters (_acef *_cd .Decoder ,_gccg ,_geac bool ,_ffbg ,_adgc uint32 ,_beeb uint32 ,_ccbeg int8 ,_febb uint32 ,_bbbba int8 ,_fecdd _ag .CombinationOperator ,_beag int8 ,_cbcc int16 ,_dcaaa ,_cddb ,_ffdga ,_aefc ,_aeea ,_cgda ,_agdad ,_agfgf ,_gefee ,_aadcc int8 ,_cfbcb ,_gdbc []int8 ,_fbbfg []*_ag .Bitmap ,_geaeg int8 ){_gfbf ._ffad =_acef ;
_gfbf .IsHuffmanEncoded =_gccg ;_gfbf .UseRefinement =_geac ;_gfbf .RegionInfo .BitmapWidth =_ffbg ;_gfbf .RegionInfo .BitmapHeight =_adgc ;_gfbf .NumberOfSymbolInstances =_beeb ;_gfbf .SbStrips =_ccbeg ;_gfbf .NumberOfSymbols =_febb ;_gfbf .DefaultPixel =_bbbba ;
_gfbf .CombinationOperator =_fecdd ;_gfbf .IsTransposed =_beag ;_gfbf .ReferenceCorner =_cbcc ;_gfbf .SbDsOffset =_dcaaa ;_gfbf .SbHuffFS =_cddb ;_gfbf .SbHuffDS =_ffdga ;_gfbf .SbHuffDT =_aefc ;_gfbf .SbHuffRDWidth =_aeea ;_gfbf .SbHuffRDHeight =_cgda ;
_gfbf .SbHuffRSize =_gefee ;_gfbf .SbHuffRDX =_agdad ;_gfbf .SbHuffRDY =_agfgf ;_gfbf .SbrTemplate =_aadcc ;_gfbf .SbrATX =_cfbcb ;_gfbf .SbrATY =_gdbc ;_gfbf .Symbols =_fbbfg ;_gfbf ._bdcb =_geaeg ;};func (_debf *SymbolDictionary )huffDecodeRefAggNInst ()(int64 ,error ){if !_debf .SdHuffAggInstanceSelection {_fbag ,_bfdg :=_ga .GetStandardTable (1);
if _bfdg !=nil {return 0,_bfdg ;};return _fbag .Decode (_debf ._cabd );};if _debf ._dade ==nil {var (_afac int ;_eggdf error ;);if _debf .SdHuffDecodeHeightSelection ==3{_afac ++;};if _debf .SdHuffDecodeWidthSelection ==3{_afac ++;};if _debf .SdHuffBMSizeSelection ==3{_afac ++;
};_debf ._dade ,_eggdf =_debf .getUserTable (_afac );if _eggdf !=nil {return 0,_eggdf ;};};return _debf ._dade .Decode (_debf ._cabd );};func (_bcb *template0 )form (_dcc ,_ebb ,_ecd ,_cgff ,_fgd int16 )int16 {return (_dcc <<10)|(_ebb <<7)|(_ecd <<4)|(_cgff <<1)|_fgd ;
};func (_faaec *TextRegion )symbolIDCodeLengths ()error {var (_adbcf []*_ga .Code ;_abgea uint64 ;_bdfbd _ga .Tabler ;_cdgbg error ;);for _bega :=0;_bega < 35;_bega ++{_abgea ,_cdgbg =_faaec ._ccbg .ReadBits (4);if _cdgbg !=nil {return _cdgbg ;};_eeec :=int (_abgea &0xf);
if _eeec > 0{_adbcf =append (_adbcf ,_ga .NewCode (int32 (_eeec ),0,int32 (_bega ),false ));};};_bdfbd ,_cdgbg =_ga .NewFixedSizeTable (_adbcf );if _cdgbg !=nil {return _cdgbg ;};var (_daaae int64 ;_cgdd uint32 ;_abee []*_ga .Code ;_edcd int64 ;);for _cgdd < _faaec .NumberOfSymbols {_edcd ,_cdgbg =_bdfbd .Decode (_faaec ._ccbg );
if _cdgbg !=nil {return _cdgbg ;};if _edcd < 32{if _edcd > 0{_abee =append (_abee ,_ga .NewCode (int32 (_edcd ),0,int32 (_cgdd ),false ));};_daaae =_edcd ;_cgdd ++;}else {var _dgbed ,_gdgc int64 ;switch _edcd {case 32:_abgea ,_cdgbg =_faaec ._ccbg .ReadBits (2);
if _cdgbg !=nil {return _cdgbg ;};_dgbed =3+int64 (_abgea );if _cgdd > 0{_gdgc =_daaae ;};case 33:_abgea ,_cdgbg =_faaec ._ccbg .ReadBits (3);if _cdgbg !=nil {return _cdgbg ;};_dgbed =3+int64 (_abgea );case 34:_abgea ,_cdgbg =_faaec ._ccbg .ReadBits (7);
if _cdgbg !=nil {return _cdgbg ;};_dgbed =11+int64 (_abgea );};for _bdab :=0;_bdab < int (_dgbed );_bdab ++{if _gdgc > 0{_abee =append (_abee ,_ga .NewCode (int32 (_gdgc ),0,int32 (_cgdd ),false ));};_cgdd ++;};};};_faaec ._ccbg .Align ();_faaec ._defag ,_cdgbg =_ga .NewFixedSizeTable (_abee );
return _cdgbg ;};func (_gfa *GenericRegion )writeGBAtPixels (_cce _ca .BinaryWriter )(_ggcc int ,_fdgf error ){const _daffb ="\u0077r\u0069t\u0065\u0047\u0042\u0041\u0074\u0050\u0069\u0078\u0065\u006c\u0073";if _gfa .UseMMR {return 0,nil ;};_ega :=1;if _gfa .GBTemplate ==0{_ega =4;
}else if _gfa .UseExtTemplates {_ega =12;};if len (_gfa .GBAtX )!=_ega {return 0,_cbg .Errorf (_daffb ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0058\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};if len (_gfa .GBAtY )!=_ega {return 0,_cbg .Errorf (_daffb ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0059\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};for _efdb :=0;_efdb < _ega ;_efdb ++{if _fdgf =_cce .WriteByte (byte (_gfa .GBAtX [_efdb ]));_fdgf !=nil {return _ggcc ,_cbg .Wrap (_fdgf ,_daffb ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0058");};_ggcc ++;if _fdgf =_cce .WriteByte (byte (_gfa .GBAtY [_efdb ]));
_fdgf !=nil {return _ggcc ,_cbg .Wrap (_fdgf ,_daffb ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0059");};_ggcc ++;};return _ggcc ,nil ;};func (_ecfe *PatternDictionary )readTemplate ()error {_eec ,_geab :=_ecfe ._cggb .ReadBits (2);if _geab !=nil {return _geab ;
};_ecfe .HDTemplate =byte (_eec );return nil ;};type HalftoneRegion struct{_abab _ca .StreamReader ;_afgg *Header ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;HDefaultPixel int8 ;CombinationOperator _ag .CombinationOperator ;
HSkipEnabled bool ;HTemplate byte ;IsMMREncoded bool ;HGridWidth uint32 ;HGridHeight uint32 ;HGridX int32 ;HGridY int32 ;HRegionX uint16 ;HRegionY uint16 ;HalftoneRegionBitmap *_ag .Bitmap ;Patterns []*_ag .Bitmap ;};func (_bg *GenericRefinementRegion )decodeSLTP ()(int ,error ){_bg .Template .setIndex (_bg ._agb );
return _bg ._aa .DecodeBit (_bg ._agb );};func (_cfgc *TableSegment )HtHigh ()int32 {return _cfgc ._ccbe };func (_aff *GenericRegion )setParametersMMR (_abdd bool ,_eddf ,_addfc int64 ,_bcbd ,_ccc uint32 ,_cge byte ,_cdbc ,_bbb bool ,_efcb ,_eda []int8 ){_aff .DataOffset =_eddf ;
_aff .DataLength =_addfc ;_aff .RegionSegment =&RegionSegment {};_aff .RegionSegment .BitmapHeight =_bcbd ;_aff .RegionSegment .BitmapWidth =_ccc ;_aff .GBTemplate =_cge ;_aff .IsMMREncoded =_abdd ;_aff .IsTPGDon =_cdbc ;_aff .GBAtX =_efcb ;_aff .GBAtY =_eda ;
};func (_defe *HalftoneRegion )computeX (_aaab ,_ebeb int )int {return _defe .shiftAndFill (int (_defe .HGridX )+_aaab *int (_defe .HRegionY )+_ebeb *int (_defe .HRegionX ));};func (_fdcc *TextRegion )decodeDT ()(_daab int64 ,_bdbae error ){if _fdcc .IsHuffmanEncoded {if _fdcc .SbHuffDT ==3{_daab ,_bdbae =_fdcc ._ddbb .Decode (_fdcc ._ccbg );
if _bdbae !=nil {return 0,_bdbae ;};}else {var _bbfe _ga .Tabler ;_bbfe ,_bdbae =_ga .GetStandardTable (11+int (_fdcc .SbHuffDT ));if _bdbae !=nil {return 0,_bdbae ;};_daab ,_bdbae =_bbfe .Decode (_fdcc ._ccbg );if _bdbae !=nil {return 0,_bdbae ;};};}else {var _ecbcb int32 ;
_ecbcb ,_bdbae =_fdcc ._ffad .DecodeInt (_fdcc ._acbc );if _bdbae !=nil {return ;};_daab =int64 (_ecbcb );};_daab *=int64 (_fdcc .SbStrips );return _daab ,nil ;};func (_edec *TableSegment )HtOOB ()int32 {return _edec ._acfb };func (_fge *TextRegion )decodeRdx ()(int64 ,error ){const _agfa ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064x";
if _fge .IsHuffmanEncoded {if _fge .SbHuffRDX ==3{if _fge ._dbag ==nil {var (_eddc int ;_bcae error ;);if _fge .SbHuffFS ==3{_eddc ++;};if _fge .SbHuffDS ==3{_eddc ++;};if _fge .SbHuffDT ==3{_eddc ++;};if _fge .SbHuffRDWidth ==3{_eddc ++;};if _fge .SbHuffRDHeight ==3{_eddc ++;
};_fge ._dbag ,_bcae =_fge .getUserTable (_eddc );if _bcae !=nil {return 0,_cbg .Wrap (_bcae ,_agfa ,"");};};return _fge ._dbag .Decode (_fge ._ccbg );};_cdgd ,_gbbfc :=_ga .GetStandardTable (14+int (_fge .SbHuffRDX ));if _gbbfc !=nil {return 0,_cbg .Wrap (_gbbfc ,_agfa ,"");
};return _cdgd .Decode (_fge ._ccbg );};_dadeb ,_ffgb :=_fge ._ffad .DecodeInt (_fge ._abge );if _ffgb !=nil {return 0,_cbg .Wrap (_ffgb ,_agfa ,"");};return int64 (_dadeb ),nil ;};var _ _ga .BasicTabler =&TableSegment {};func _afadf (_edab _ca .StreamReader ,_accd *Header )*TextRegion {_acbf :=&TextRegion {_ccbg :_edab ,Header :_accd ,RegionInfo :NewRegionSegment (_edab )};
return _acbf ;};func (_dffb *TableSegment )StreamReader ()_ca .StreamReader {return _dffb ._bddb };func (_degf *SymbolDictionary )readRefinementAtPixels (_faag int )error {_degf .SdrATX =make ([]int8 ,_faag );_degf .SdrATY =make ([]int8 ,_faag );var (_becd byte ;
_bcfa error ;);for _cfab :=0;_cfab < _faag ;_cfab ++{_becd ,_bcfa =_degf ._cabd .ReadByte ();if _bcfa !=nil {return _bcfa ;};_degf .SdrATX [_cfab ]=int8 (_becd );_becd ,_bcfa =_degf ._cabd .ReadByte ();if _bcfa !=nil {return _bcfa ;};_degf .SdrATY [_cfab ]=int8 (_becd );
};return nil ;};var _ templater =&template0 {};func (_cbbd *GenericRegion )setParametersWithAt (_gbdg bool ,_aagf byte ,_bbcc ,_bbab bool ,_bacce ,_cecd []int8 ,_ddf ,_acae uint32 ,_aac *_cd .DecoderStats ,_eca *_cd .Decoder ){_cbbd .IsMMREncoded =_gbdg ;
_cbbd .GBTemplate =_aagf ;_cbbd .IsTPGDon =_bbcc ;_cbbd .GBAtX =_bacce ;_cbbd .GBAtY =_cecd ;_cbbd .RegionSegment .BitmapHeight =_acae ;_cbbd .RegionSegment .BitmapWidth =_ddf ;_cbbd ._dabga =nil ;_cbbd .Bitmap =nil ;if _aac !=nil {_cbbd ._fcb =_aac ;};
if _eca !=nil {_cbbd ._feb =_eca ;};_ge .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049O\u004e\u005d\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073\u0020\u0053\u0044\u0041t\u003a\u0020\u0025\u0073",_cbbd );
};func (_fedg *GenericRegion )getPixel (_bdee ,_ccafe int )int8 {if _bdee < 0||_bdee >=_fedg .Bitmap .Width {return 0;};if _ccafe < 0||_ccafe >=_fedg .Bitmap .Height {return 0;};if _fedg .Bitmap .GetPixel (_bdee ,_ccafe ){return 1;};return 0;};type GenericRefinementRegion struct{_ae templater ;
_gd templater ;_da _ca .StreamReader ;_daf *Header ;RegionInfo *RegionSegment ;IsTPGROn bool ;TemplateID int8 ;Template templater ;GrAtX []int8 ;GrAtY []int8 ;RegionBitmap *_ag .Bitmap ;ReferenceBitmap *_ag .Bitmap ;ReferenceDX int32 ;ReferenceDY int32 ;
_aa *_cd .Decoder ;_agb *_cd .DecoderStats ;_ad bool ;_gea []bool ;};func (_fcbb *SymbolDictionary )GetDictionary ()([]*_ag .Bitmap ,error ){_ge .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c-\u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){_ge .Log .Trace ("\u005b\u0053\u0059M\u0042\u004f\u004c\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
_ge .Log .Trace ("\u005b\u0053Y\u004d\u0042\u004f\u004c\u002dD\u0049\u0043\u0054\u0049\u004fN\u0041\u0052\u0059\u005d\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020\u000a\u0045\u0078\u003a\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u000a\u006e\u0065\u0077\u003a\u0027\u0025\u0073\u0027",_fcbb ._cgbf ,_fcbb ._aeaa );
}();if _fcbb ._cgbf ==nil {var _dadd error ;if _fcbb .UseRefinementAggregation {_fcbb ._gbg =_fcbb .getSbSymCodeLen ();};if !_fcbb .IsHuffmanEncoded {if _dadd =_fcbb .setCodingStatistics ();_dadd !=nil {return nil ,_dadd ;};};_fcbb ._aeaa =make ([]*_ag .Bitmap ,_fcbb .NumberOfNewSymbols );
var _eeee []int ;if _fcbb .IsHuffmanEncoded &&!_fcbb .UseRefinementAggregation {_eeee =make ([]int ,_fcbb .NumberOfNewSymbols );};if _dadd =_fcbb .setSymbolsArray ();_dadd !=nil {return nil ,_dadd ;};var _afad ,_dfcce int64 ;_fcbb ._cedf =0;for _fcbb ._cedf < _fcbb .NumberOfNewSymbols {_dfcce ,_dadd =_fcbb .decodeHeightClassDeltaHeight ();
if _dadd !=nil {return nil ,_dadd ;};_afad +=_dfcce ;var _fefc ,_bbeba uint32 ;_gfbaf :=int64 (_fcbb ._cedf );for {var _dgba int64 ;_dgba ,_dadd =_fcbb .decodeDifferenceWidth ();if _b .Is (_dadd ,_cb .ErrOOB ){break ;};if _dadd !=nil {return nil ,_dadd ;
};if _fcbb ._cedf >=_fcbb .NumberOfNewSymbols {break ;};_fefc +=uint32 (_dgba );_bbeba +=_fefc ;if !_fcbb .IsHuffmanEncoded ||_fcbb .UseRefinementAggregation {if !_fcbb .UseRefinementAggregation {_dadd =_fcbb .decodeDirectlyThroughGenericRegion (_fefc ,uint32 (_afad ));
if _dadd !=nil {return nil ,_dadd ;};}else {_dadd =_fcbb .decodeAggregate (_fefc ,uint32 (_afad ));if _dadd !=nil {return nil ,_dadd ;};};}else if _fcbb .IsHuffmanEncoded &&!_fcbb .UseRefinementAggregation {_eeee [_fcbb ._cedf ]=int (_fefc );};_fcbb ._cedf ++;
};if _fcbb .IsHuffmanEncoded &&!_fcbb .UseRefinementAggregation {var _gead int64 ;if _fcbb .SdHuffBMSizeSelection ==0{var _bcfbc _ga .Tabler ;_bcfbc ,_dadd =_ga .GetStandardTable (1);if _dadd !=nil {return nil ,_dadd ;};_gead ,_dadd =_bcfbc .Decode (_fcbb ._cabd );
if _dadd !=nil {return nil ,_dadd ;};}else {_gead ,_dadd =_fcbb .huffDecodeBmSize ();if _dadd !=nil {return nil ,_dadd ;};};_fcbb ._cabd .Align ();var _gbcf *_ag .Bitmap ;_gbcf ,_dadd =_fcbb .decodeHeightClassCollectiveBitmap (_gead ,uint32 (_afad ),_bbeba );
if _dadd !=nil {return nil ,_dadd ;};_dadd =_fcbb .decodeHeightClassBitmap (_gbcf ,_gfbaf ,int (_afad ),_eeee );if _dadd !=nil {return nil ,_dadd ;};};};_ccg ,_dadd :=_fcbb .getToExportFlags ();if _dadd !=nil {return nil ,_dadd ;};_fcbb .setExportedSymbols (_ccg );
};return _fcbb ._cgbf ,nil ;};func (_fga *SymbolDictionary )encodeATFlags (_feaa _ca .BinaryWriter )(_aaba int ,_cfbcc error ){const _ddbee ="\u0065\u006e\u0063\u006f\u0064\u0065\u0041\u0054\u0046\u006c\u0061\u0067\u0073";if _fga .IsHuffmanEncoded ||_fga .SdTemplate !=0{return 0,nil ;
};_cddg :=4;if _fga .SdTemplate !=0{_cddg =1;};for _adfd :=0;_adfd < _cddg ;_adfd ++{if _cfbcc =_feaa .WriteByte (byte (_fga .SdATX [_adfd ]));_cfbcc !=nil {return _aaba ,_cbg .Wrapf (_cfbcc ,_ddbee ,"\u0053d\u0041\u0054\u0058\u005b\u0025\u0064]",_adfd );
};_aaba ++;if _cfbcc =_feaa .WriteByte (byte (_fga .SdATY [_adfd ]));_cfbcc !=nil {return _aaba ,_cbg .Wrapf (_cfbcc ,_ddbee ,"\u0053d\u0041\u0054\u0059\u005b\u0025\u0064]",_adfd );};_aaba ++;};return _aaba ,nil ;};func (_geag *SymbolDictionary )checkInput ()error {if _geag .SdHuffDecodeHeightSelection ==2{_ge .Log .Debug ("\u0053\u0079\u006d\u0062\u006fl\u0020\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u0053e\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0070\u0065r\u006d\u0069\u0074\u0074\u0065\u0064",_geag .SdHuffDecodeHeightSelection );
};if _geag .SdHuffDecodeWidthSelection ==2{_ge .Log .Debug ("\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0057\u0069\u0064t\u0068\u0020\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061l\u0075\u0065\u0020\u006e\u006f\u0074 \u0070\u0065r\u006d\u0069t\u0074e\u0064",_geag .SdHuffDecodeWidthSelection );
};if _geag .IsHuffmanEncoded {if _geag .SdTemplate !=0{_ge .Log .Debug ("\u0053\u0044T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e \u0030\u0029",_geag .SdTemplate );
};if !_geag .UseRefinementAggregation {if !_geag .UseRefinementAggregation {if _geag ._fagb {_ge .Log .Debug ("\u0049\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074ex\u0074\u0052\u0065\u0074\u0061\u0069n\u0065\u0064\u0020\u003d\u0020\u0074\u0072\u0075\u0065\u0020\u0028\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0066\u0061\u006cs\u0065\u0029");
_geag ._fagb =false ;};if _geag ._fbgc {_ge .Log .Debug ("\u0069s\u0043\u006fd\u0069\u006e\u0067\u0043o\u006e\u0074\u0065x\u0074\u0055\u0073\u0065\u0064\u0020\u003d\u0020\u0074ru\u0065\u0020\u0028s\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020f\u0061\u006cs\u0065\u0029");
_geag ._fbgc =false ;};};};}else {if _geag .SdHuffBMSizeSelection !=0{_ge .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066B\u004d\u0053\u0069\u007a\u0065\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_geag .SdHuffBMSizeSelection =0;};if _geag .SdHuffDecodeWidthSelection !=0{_ge .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068\u0053\u0065\u006c\u0065\u0063\u0074\u0069o\u006e\u0020\u0073\u0068\u006fu\u006c\u0064 \u0062\u0065\u0020\u0030");
_geag .SdHuffDecodeWidthSelection =0;};if _geag .SdHuffDecodeHeightSelection !=0{_ge .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0048e\u0069\u0067\u0068\u0074\u0053\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_geag .SdHuffDecodeHeightSelection =0;};};if !_geag .UseRefinementAggregation {if _geag .SdrTemplate !=0{_ge .Log .Debug ("\u0053\u0044\u0052\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u003d\u0020\u0025\u0064\u0020\u0028s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_geag .SdrTemplate );
_geag .SdrTemplate =0;};};if !_geag .IsHuffmanEncoded ||!_geag .UseRefinementAggregation {if _geag .SdHuffAggInstanceSelection {_ge .Log .Debug ("\u0053d\u0048\u0075f\u0066\u0041\u0067g\u0049\u006e\u0073\u0074\u0061\u006e\u0063e\u0053\u0065\u006c\u0065\u0063\u0074i\u006f\u006e\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_geag .SdHuffAggInstanceSelection );
};};return nil ;};func (_abgg *PatternDictionary )readPatternWidthAndHeight ()error {_dge ,_cebf :=_abgg ._cggb .ReadByte ();if _cebf !=nil {return _cebf ;};_abgg .HdpWidth =_dge ;_dge ,_cebf =_abgg ._cggb .ReadByte ();if _cebf !=nil {return _cebf ;};_abgg .HdpHeight =_dge ;
return nil ;};func (_edcfg *GenericRegion )setOverrideFlag (_fbb int ){_edcfg .GBAtOverride [_fbb ]=true ;_edcfg ._bbfd =true ;};func (_ced *Header )readNumberOfReferredToSegments (_dceg _ca .StreamReader )(uint64 ,error ){const _efcbe ="\u0072\u0065\u0061\u0064\u004e\u0075\u006d\u0062\u0065\u0072O\u0066\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
_gfgd ,_edac :=_dceg .ReadBits (3);if _edac !=nil {return 0,_cbg .Wrap (_edac ,_efcbe ,"\u0063\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0072\u0074\u0073");};_gfgd &=0xf;var _cfcb []byte ;if _gfgd <=4{_cfcb =make ([]byte ,5);for _dbgd :=0;_dbgd <=4;_dbgd ++{_acb ,_eebd :=_dceg .ReadBit ();
if _eebd !=nil {return 0,_cbg .Wrap (_eebd ,_efcbe ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_cfcb [_dbgd ]=byte (_acb );};}else {_gfgd ,_edac =_dceg .ReadBits (29);if _edac !=nil {return 0,_edac ;};_gfgd &=_c .MaxInt32 ;
_bbaa :=(_gfgd +8)>>3;_bbaa <<=3;_cfcb =make ([]byte ,_bbaa );var _bbd uint64 ;for _bbd =0;_bbd < _bbaa ;_bbd ++{_cfed ,_abb :=_dceg .ReadBit ();if _abb !=nil {return 0,_cbg .Wrap (_abb ,_efcbe ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");
};_cfcb [_bbd ]=byte (_cfed );};};return _gfgd ,nil ;};type GenericRegion struct{_gdab _ca .StreamReader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;UseExtTemplates bool ;IsTPGDon bool ;
GBTemplate byte ;IsMMREncoded bool ;UseMMR bool ;GBAtX []int8 ;GBAtY []int8 ;GBAtOverride []bool ;_bbfd bool ;Bitmap *_ag .Bitmap ;_feb *_cd .Decoder ;_fcb *_cd .DecoderStats ;_dabga *_fd .Decoder ;};func (_dad *GenericRefinementRegion )decodeTypicalPredictedLineTemplate0 (_fc ,_caa ,_gaa ,_bge ,_ggf ,_edg ,_cbef ,_cdc ,_gdc int )error {var (_bbfc ,_dbe ,_aca ,_aefg ,_aed ,_bfb int ;
_fgf byte ;_gacd error ;);if _fc > 0{_fgf ,_gacd =_dad .RegionBitmap .GetByte (_cbef -_gaa );if _gacd !=nil {return _gacd ;};_aca =int (_fgf );};if _cdc > 0&&_cdc <=_dad .ReferenceBitmap .Height {_fgf ,_gacd =_dad .ReferenceBitmap .GetByte (_gdc -_bge +_edg );
if _gacd !=nil {return _gacd ;};_aefg =int (_fgf )<<4;};if _cdc >=0&&_cdc < _dad .ReferenceBitmap .Height {_fgf ,_gacd =_dad .ReferenceBitmap .GetByte (_gdc +_edg );if _gacd !=nil {return _gacd ;};_aed =int (_fgf )<<1;};if _cdc > -2&&_cdc < _dad .ReferenceBitmap .Height -1{_fgf ,_gacd =_dad .ReferenceBitmap .GetByte (_gdc +_bge +_edg );
if _gacd !=nil {return _gacd ;};_bfb =int (_fgf );};_bbfc =((_aca >>5)&0x6)|((_bfb >>2)&0x30)|(_aed &0x180)|(_aefg &0xc00);var _dbb int ;for _aag :=0;_aag < _ggf ;_aag =_dbb {var _fe int ;_dbb =_aag +8;var _fdd int ;if _fdd =_caa -_aag ;_fdd > 8{_fdd =8;
};_agf :=_dbb < _caa ;_ba :=_dbb < _dad .ReferenceBitmap .Width ;_geg :=_edg +1;if _fc > 0{_fgf =0;if _agf {_fgf ,_gacd =_dad .RegionBitmap .GetByte (_cbef -_gaa +1);if _gacd !=nil {return _gacd ;};};_aca =(_aca <<8)|int (_fgf );};if _cdc > 0&&_cdc <=_dad .ReferenceBitmap .Height {var _fcf int ;
if _ba {_fgf ,_gacd =_dad .ReferenceBitmap .GetByte (_gdc -_bge +_geg );if _gacd !=nil {return _gacd ;};_fcf =int (_fgf )<<4;};_aefg =(_aefg <<8)|_fcf ;};if _cdc >=0&&_cdc < _dad .ReferenceBitmap .Height {var _aab int ;if _ba {_fgf ,_gacd =_dad .ReferenceBitmap .GetByte (_gdc +_geg );
if _gacd !=nil {return _gacd ;};_aab =int (_fgf )<<1;};_aed =(_aed <<8)|_aab ;};if _cdc > -2&&_cdc < (_dad .ReferenceBitmap .Height -1){_fgf =0;if _ba {_fgf ,_gacd =_dad .ReferenceBitmap .GetByte (_gdc +_bge +_geg );if _gacd !=nil {return _gacd ;};};_bfb =(_bfb <<8)|int (_fgf );
};for _bag :=0;_bag < _fdd ;_bag ++{var _gdd int ;_gb :=false ;_bfg :=(_bbfc >>4)&0x1ff;if _bfg ==0x1ff{_gb =true ;_gdd =1;}else if _bfg ==0x00{_gb =true ;};if !_gb {if _dad ._ad {_dbe =_dad .overrideAtTemplate0 (_bbfc ,_aag +_bag ,_fc ,_fe ,_bag );_dad ._agb .SetIndex (int32 (_dbe ));
}else {_dad ._agb .SetIndex (int32 (_bbfc ));};_gdd ,_gacd =_dad ._aa .DecodeBit (_dad ._agb );if _gacd !=nil {return _gacd ;};};_ede :=uint (7-_bag );_fe |=_gdd <<_ede ;_bbfc =((_bbfc &0xdb6)<<1)|_gdd |(_aca >>_ede +5)&0x002|((_bfb >>_ede +2)&0x010)|((_aed >>_ede )&0x080)|((_aefg >>_ede )&0x400);
};_gacd =_dad .RegionBitmap .SetByte (_cbef ,byte (_fe ));if _gacd !=nil {return _gacd ;};_cbef ++;_gdc ++;};return nil ;};func (_eac *GenericRegion )decodeTemplate3 (_egbd ,_gae ,_eccd int ,_fbdf ,_ddad int )(_dgcc error ){const _ecgf ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0033";
var (_ggcf ,_gffc int ;_abaa int ;_caba byte ;_defa ,_ggad int ;);if _egbd >=1{_caba ,_dgcc =_eac .Bitmap .GetByte (_ddad );if _dgcc !=nil {return _cbg .Wrap (_dgcc ,_ecgf ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_abaa =int (_caba );};_ggcf =(_abaa >>1)&0x70;
for _bad :=0;_bad < _eccd ;_bad =_defa {var (_gacf byte ;_ddd int ;);_defa =_bad +8;if _geeb :=_gae -_bad ;_geeb > 8{_ddd =8;}else {_ddd =_geeb ;};if _egbd >=1{_abaa <<=8;if _defa < _gae {_caba ,_dgcc =_eac .Bitmap .GetByte (_ddad +1);if _dgcc !=nil {return _cbg .Wrap (_dgcc ,_ecgf ,"\u0069\u006e\u006e\u0065\u0072\u0020\u002d\u0020\u006c\u0069\u006e\u0065 \u003e\u003d\u0020\u0031");
};_abaa |=int (_caba );};};for _eeb :=0;_eeb < _ddd ;_eeb ++{if _eac ._bbfd {_gffc =_eac .overrideAtTemplate3 (_ggcf ,_bad +_eeb ,_egbd ,int (_gacf ),_eeb );_eac ._fcb .SetIndex (int32 (_gffc ));}else {_eac ._fcb .SetIndex (int32 (_ggcf ));};_ggad ,_dgcc =_eac ._feb .DecodeBit (_eac ._fcb );
if _dgcc !=nil {return _cbg .Wrap (_dgcc ,_ecgf ,"");};_gacf |=byte (_ggad )<<byte (7-_eeb );_ggcf =((_ggcf &0x1f7)<<1)|_ggad |((_abaa >>uint (8-_eeb ))&0x010);};if _fgg :=_eac .Bitmap .SetByte (_fbdf ,_gacf );_fgg !=nil {return _cbg .Wrap (_fgg ,_ecgf ,"");
};_fbdf ++;_ddad ++;};return nil ;};func (_edgd *GenericRefinementRegion )String ()string {_edge :=&_dba .Builder {};_edge .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_edge .WriteString (_edgd .RegionInfo .String ()+"\u000a");
_edge .WriteString (_f .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0052\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_edgd .IsTPGROn ));_edge .WriteString (_f .Sprintf ("\u0009-\u0020T\u0065\u006d\u0070\u006c\u0061t\u0065\u0049D\u003a\u0020\u0025\u0076\u000a",_edgd .TemplateID ));
_edge .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_edgd .GrAtX ));_edge .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_edgd .GrAtY ));
_edge .WriteString (_f .Sprintf ("\u0009-\u0020R\u0065\u0066\u0065\u0072\u0065n\u0063\u0065D\u0058\u0020\u0025\u0076\u000a",_edgd .ReferenceDX ));_edge .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0052ef\u0065\u0072\u0065\u006e\u0063\u0044\u0065\u0059\u003a\u0020\u0025\u0076\u000a",_edgd .ReferenceDY ));
return _edge .String ();};func (_fbd *GenericRegion )computeSegmentDataStructure ()error {_fbd .DataOffset =_fbd ._gdab .StreamPosition ();_fbd .DataHeaderLength =_fbd .DataOffset -_fbd .DataHeaderOffset ;_fbd .DataLength =int64 (_fbd ._gdab .Length ())-_fbd .DataHeaderLength ;
return nil ;};func (_gceb *TextRegion )decodeIb (_babf ,_fbba int64 )(*_ag .Bitmap ,error ){const _cbbe ="\u0064\u0065\u0063\u006f\u0064\u0065\u0049\u0062";var (_ddfb error ;_cff *_ag .Bitmap ;);if _babf ==0{if int (_fbba )> len (_gceb .Symbols )-1{return nil ,_cbg .Error (_cbbe ,"\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0049\u0042\u0020\u0062\u0069\u0074\u006d\u0061\u0070\u002e\u0020\u0069\u006e\u0064\u0065x\u0020\u006f\u0075\u0074\u0020o\u0066\u0020r\u0061\u006e\u0067\u0065");
};return _gceb .Symbols [int (_fbba )],nil ;};var _ddaec ,_cbcb ,_bfbfd ,_aaeb int64 ;_ddaec ,_ddfb =_gceb .decodeRdw ();if _ddfb !=nil {return nil ,_cbg .Wrap (_ddfb ,_cbbe ,"");};_cbcb ,_ddfb =_gceb .decodeRdh ();if _ddfb !=nil {return nil ,_cbg .Wrap (_ddfb ,_cbbe ,"");
};_bfbfd ,_ddfb =_gceb .decodeRdx ();if _ddfb !=nil {return nil ,_cbg .Wrap (_ddfb ,_cbbe ,"");};_aaeb ,_ddfb =_gceb .decodeRdy ();if _ddfb !=nil {return nil ,_cbg .Wrap (_ddfb ,_cbbe ,"");};if _gceb .IsHuffmanEncoded {if _ ,_ddfb =_gceb .decodeSymInRefSize ();
_ddfb !=nil {return nil ,_cbg .Wrap (_ddfb ,_cbbe ,"");};_gceb ._ccbg .Align ();};_aabe :=_gceb .Symbols [_fbba ];_gcg :=uint32 (_aabe .Width );_dffc :=uint32 (_aabe .Height );_bfgad :=int32 (uint32 (_ddaec )>>1)+int32 (_bfbfd );_dbbd :=int32 (uint32 (_cbcb )>>1)+int32 (_aaeb );
if _gceb ._fbab ==nil {_gceb ._fbab =_fgdd (_gceb ._ccbg ,nil );};_gceb ._fbab .setParameters (_gceb ._bfdf ,_gceb ._ffad ,_gceb .SbrTemplate ,_gcg +uint32 (_ddaec ),_dffc +uint32 (_cbcb ),_aabe ,_bfgad ,_dbbd ,false ,_gceb .SbrATX ,_gceb .SbrATY );_cff ,_ddfb =_gceb ._fbab .GetRegionBitmap ();
if _ddfb !=nil {return nil ,_cbg .Wrap (_ddfb ,_cbbe ,"\u0067\u0072\u0066");};if _gceb .IsHuffmanEncoded {_gceb ._ccbg .Align ();};return _cff ,nil ;};type template1 struct{};func (_dec *Header )Encode (w _ca .BinaryWriter )(_afggd int ,_feafg error ){const _cdcce ="\u0048\u0065\u0061d\u0065\u0072\u002e\u0057\u0072\u0069\u0074\u0065";
var _cgfe _ca .BinaryWriter ;_ge .Log .Trace ("\u005b\u0053\u0045G\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045\u0052\u005d[\u0045\u004e\u0043\u004f\u0044\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _feafg !=nil {_ge .Log .Trace ("[\u0053\u0045\u0047\u004d\u0045\u004eT\u002d\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0045\u004e\u0043\u004f\u0044E\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020%\u0076",_feafg );
}else {_ge .Log .Trace ("\u005b\u0053\u0045\u0047ME\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0025\u0076",_dec );_ge .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045N\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u005b\u0045\u004e\u0043O\u0044\u0045\u005d\u0020\u0046\u0069\u006ei\u0073\u0068\u0065\u0064");
};}();w .FinishByte ();if _dec .SegmentData !=nil {_cfae ,_bdga :=_dec .SegmentData .(SegmentEncoder );if !_bdga {return 0,_cbg .Errorf (_cdcce ,"\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0064\u006f\u0065s\u006e\u0027\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074 \u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0045\u006e\u0063\u006f\u0064er\u0020\u0069\u006e\u0074\u0065\u0072\u0066\u0061\u0063\u0065",_dec .SegmentData );
};_cgfe =_ca .BufferedMSB ();_afggd ,_feafg =_cfae .Encode (_cgfe );if _feafg !=nil {return 0,_cbg .Wrap (_feafg ,_cdcce ,"");};_dec .SegmentDataLength =uint64 (_afggd );};if _dec .pageSize ()==4{_dec .PageAssociationFieldSize =true ;};var _eeae int ;_eeae ,_feafg =_dec .writeSegmentNumber (w );
if _feafg !=nil {return 0,_cbg .Wrap (_feafg ,_cdcce ,"");};_afggd +=_eeae ;if _feafg =_dec .writeFlags (w );_feafg !=nil {return _afggd ,_cbg .Wrap (_feafg ,_cdcce ,"");};_afggd ++;_eeae ,_feafg =_dec .writeReferredToCount (w );if _feafg !=nil {return 0,_cbg .Wrap (_feafg ,_cdcce ,"");
};_afggd +=_eeae ;_eeae ,_feafg =_dec .writeReferredToSegments (w );if _feafg !=nil {return 0,_cbg .Wrap (_feafg ,_cdcce ,"");};_afggd +=_eeae ;_eeae ,_feafg =_dec .writeSegmentPageAssociation (w );if _feafg !=nil {return 0,_cbg .Wrap (_feafg ,_cdcce ,"");
};_afggd +=_eeae ;_eeae ,_feafg =_dec .writeSegmentDataLength (w );if _feafg !=nil {return 0,_cbg .Wrap (_feafg ,_cdcce ,"");};_afggd +=_eeae ;_dec .HeaderLength =int64 (_afggd )-int64 (_dec .SegmentDataLength );if _cgfe !=nil {if _ ,_feafg =w .Write (_cgfe .Data ());
_feafg !=nil {return _afggd ,_cbg .Wrap (_feafg ,_cdcce ,"\u0077r\u0069t\u0065\u0020\u0073\u0065\u0067m\u0065\u006et\u0020\u0064\u0061\u0074\u0061");};};return _afggd ,nil ;};func (_aeb *GenericRegion )setParameters (_bgac bool ,_fcag ,_aadb int64 ,_gfc ,_gefe uint32 ){_aeb .IsMMREncoded =_bgac ;
_aeb .DataOffset =_fcag ;_aeb .DataLength =_aadb ;_aeb .RegionSegment .BitmapHeight =_gfc ;_aeb .RegionSegment .BitmapWidth =_gefe ;_aeb ._dabga =nil ;_aeb .Bitmap =nil ;};func (_gegcc *SymbolDictionary )getSymbol (_geedb int )(*_ag .Bitmap ,error ){const _ffbag ="\u0067e\u0074\u0053\u0079\u006d\u0062\u006fl";
_fbdfd ,_ccdb :=_gegcc ._eag .GetBitmap (_gegcc ._eaga [_geedb ]);if _ccdb !=nil {return nil ,_cbg .Wrap (_ccdb ,_ffbag ,"\u0063\u0061n\u0027\u0074\u0020g\u0065\u0074\u0020\u0073\u0079\u006d\u0062\u006f\u006c");};return _fbdfd ,nil ;};func (_dgdf *SymbolDictionary )setRefinementAtPixels ()error {if !_dgdf .UseRefinementAggregation ||_dgdf .SdrTemplate !=0{return nil ;
};if _afca :=_dgdf .readRefinementAtPixels (2);_afca !=nil {return _afca ;};return nil ;};func (_ed *EndOfStripe )parseHeader (_cc *Header ,_bb _ca .StreamReader )error {_gcb ,_ff :=_ed ._eb .ReadBits (32);if _ff !=nil {return _ff ;};_ed ._ec =int (_gcb &_c .MaxInt32 );
return nil ;};func (_gad *GenericRefinementRegion )parseHeader ()(_aadc error ){_ge .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0048e\u0061\u0064e\u0072\u002e\u002e\u002e");
_deb :=_db .Now ();defer func (){if _aadc ==nil {_ge .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045G\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020h\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0069\u006e\u0069\u0073\u0068id\u0020\u0069\u006e\u003a\u0020\u0025\u0064\u0020\u006e\u0073",_db .Since (_deb ).Nanoseconds ());
}else {_ge .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0068\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0073",_aadc );
};}();if _aadc =_gad .RegionInfo .parseHeader ();_aadc !=nil {return _aadc ;};_ ,_aadc =_gad ._da .ReadBits (6);if _aadc !=nil {return _aadc ;};_gad .IsTPGROn ,_aadc =_gad ._da .ReadBool ();if _aadc !=nil {return _aadc ;};var _bc int ;_bc ,_aadc =_gad ._da .ReadBit ();
if _aadc !=nil {return _aadc ;};_gad .TemplateID =int8 (_bc );switch _gad .TemplateID {case 0:_gad .Template =_gad ._ae ;if _aadc =_gad .readAtPixels ();_aadc !=nil {return ;};case 1:_gad .Template =_gad ._gd ;};return nil ;};func (_ggab *Header )readDataStartOffset (_bca _ca .StreamReader ,_debb OrganizationType ){if _debb ==OSequential {_ggab .SegmentDataStartOffset =uint64 (_bca .StreamPosition ());
};};func (_gacc *GenericRegion )Size ()int {return _gacc .RegionSegment .Size ()+1+2*len (_gacc .GBAtX )};func (_cfaf *PatternDictionary )setGbAtPixels (){if _cfaf .HDTemplate ==0{_cfaf .GBAtX =make ([]int8 ,4);_cfaf .GBAtY =make ([]int8 ,4);_cfaf .GBAtX [0]=-int8 (_cfaf .HdpWidth );
_cfaf .GBAtY [0]=0;_cfaf .GBAtX [1]=-3;_cfaf .GBAtY [1]=-1;_cfaf .GBAtX [2]=2;_cfaf .GBAtY [2]=-2;_cfaf .GBAtX [3]=-2;_cfaf .GBAtY [3]=-2;}else {_cfaf .GBAtX =[]int8 {-int8 (_cfaf .HdpWidth )};_cfaf .GBAtY =[]int8 {0};};};func (_dfec *TextRegion )decodeStripT ()(_fdeg int64 ,_bgbc error ){if _dfec .IsHuffmanEncoded {if _dfec .SbHuffDT ==3{if _dfec ._ddbb ==nil {var _gfdf int ;
if _dfec .SbHuffFS ==3{_gfdf ++;};if _dfec .SbHuffDS ==3{_gfdf ++;};_dfec ._ddbb ,_bgbc =_dfec .getUserTable (_gfdf );if _bgbc !=nil {return 0,_bgbc ;};};_fdeg ,_bgbc =_dfec ._ddbb .Decode (_dfec ._ccbg );if _bgbc !=nil {return 0,_bgbc ;};}else {var _ceafc _ga .Tabler ;
_ceafc ,_bgbc =_ga .GetStandardTable (11+int (_dfec .SbHuffDT ));if _bgbc !=nil {return 0,_bgbc ;};_fdeg ,_bgbc =_ceafc .Decode (_dfec ._ccbg );if _bgbc !=nil {return 0,_bgbc ;};};}else {var _gefbc int32 ;_gefbc ,_bgbc =_dfec ._ffad .DecodeInt (_dfec ._acbc );
if _bgbc !=nil {return 0,_bgbc ;};_fdeg =int64 (_gefbc );};_fdeg *=int64 (-_dfec .SbStrips );return _fdeg ,nil ;};func (_deaf *PageInformationSegment )readCombinationOperator ()error {_bec ,_ggac :=_deaf ._gaec .ReadBits (2);if _ggac !=nil {return _ggac ;
};_deaf ._ccdc =_ag .CombinationOperator (int (_bec ));return nil ;};func (_adae *PatternDictionary )Init (h *Header ,r _ca .StreamReader )error {_adae ._cggb =r ;return _adae .parseHeader ();};func (_edeb *PatternDictionary )readGrayMax ()error {_gece ,_dbfd :=_edeb ._cggb .ReadBits (32);
if _dbfd !=nil {return _dbfd ;};_edeb .GrayMax =uint32 (_gece &_c .MaxUint32 );return nil ;};type Documenter interface{GetPage (int )(Pager ,error );GetGlobalSegment (int )(*Header ,error );};func (_dgc *GenericRegion )Encode (w _ca .BinaryWriter )(_gegg int ,_cbb error ){const _bbge ="G\u0065n\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069o\u006e\u002e\u0045\u006eco\u0064\u0065";
if _dgc .Bitmap ==nil {return 0,_cbg .Error (_bbge ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};_feaf ,_cbb :=_dgc .RegionSegment .Encode (w );if _cbb !=nil {return 0,_cbg .Wrap (_cbb ,_bbge ,"\u0052\u0065\u0067\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};_gegg +=_feaf ;if _cbb =w .SkipBits (4);_cbb !=nil {return _gegg ,_cbg .Wrap (_cbb ,_bbge ,"\u0073k\u0069p\u0020\u0072\u0065\u0073\u0065r\u0076\u0065d\u0020\u0062\u0069\u0074\u0073");};var _ceb int ;if _dgc .IsTPGDon {_ceb =1;};if _cbb =w .WriteBit (_ceb );
_cbb !=nil {return _gegg ,_cbg .Wrap (_cbb ,_bbge ,"\u0074\u0070\u0067\u0064\u006f\u006e");};_ceb =0;if _cbb =w .WriteBit (int (_dgc .GBTemplate >>1)&0x01);_cbb !=nil {return _gegg ,_cbg .Wrap (_cbb ,_bbge ,"f\u0069r\u0073\u0074\u0020\u0067\u0062\u0074\u0065\u006dp\u006c\u0061\u0074\u0065 b\u0069\u0074");
};if _cbb =w .WriteBit (int (_dgc .GBTemplate )&0x01);_cbb !=nil {return _gegg ,_cbg .Wrap (_cbb ,_bbge ,"s\u0065\u0063\u006f\u006ed \u0067b\u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u0062\u0069\u0074");};if _dgc .UseMMR {_ceb =1;};if _cbb =w .WriteBit (_ceb );
_cbb !=nil {return _gegg ,_cbg .Wrap (_cbb ,_bbge ,"u\u0073\u0065\u0020\u004d\u004d\u0052\u0020\u0062\u0069\u0074");};_gegg ++;if _feaf ,_cbb =_dgc .writeGBAtPixels (w );_cbb !=nil {return _gegg ,_cbg .Wrap (_cbb ,_bbge ,"");};_gegg +=_feaf ;_dbgb :=_g .New ();
if _cbb =_dbgb .EncodeBitmap (_dgc .Bitmap ,_dgc .IsTPGDon );_cbb !=nil {return _gegg ,_cbg .Wrap (_cbb ,_bbge ,"");};_dbgb .Final ();var _aba int64 ;if _aba ,_cbb =_dbgb .WriteTo (w );_cbb !=nil {return _gegg ,_cbg .Wrap (_cbb ,_bbge ,"");};_gegg +=int (_aba );
return _gegg ,nil ;};func (_bdfb *SymbolDictionary )getToExportFlags ()([]int ,error ){var (_fded int ;_bffc int32 ;_cfef error ;_aadbg =int32 (_bdfb ._fbf +_bdfb .NumberOfNewSymbols );_cgfa =make ([]int ,_aadbg ););for _eabb :=int32 (0);_eabb < _aadbg ;
_eabb +=_bffc {if _bdfb .IsHuffmanEncoded {_gdbb ,_bgf :=_ga .GetStandardTable (1);if _bgf !=nil {return nil ,_bgf ;};_fdcb ,_bgf :=_gdbb .Decode (_bdfb ._cabd );if _bgf !=nil {return nil ,_bgf ;};_bffc =int32 (_fdcb );}else {_bffc ,_cfef =_bdfb ._bcd .DecodeInt (_bdfb ._ffaf );
if _cfef !=nil {return nil ,_cfef ;};};if _bffc !=0{for _feeg :=_eabb ;_feeg < _eabb +_bffc ;_feeg ++{_cgfa [_feeg ]=_fded ;};};if _fded ==0{_fded =1;}else {_fded =0;};};return _cgfa ,nil ;};type RegionSegment struct{_ddaa _ca .StreamReader ;BitmapWidth uint32 ;
BitmapHeight uint32 ;XLocation uint32 ;YLocation uint32 ;CombinaionOperator _ag .CombinationOperator ;};func (_bgcb *TableSegment )Init (h *Header ,r _ca .StreamReader )error {_bgcb ._bddb =r ;return _bgcb .parseHeader ();};func (_gfb *Header )readHeaderFlags ()error {const _ddfe ="\u0072e\u0061d\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006c\u0061\u0067\u0073";
_afef ,_eada :=_gfb .Reader .ReadBit ();if _eada !=nil {return _cbg .Wrap (_eada ,_ddfe ,"r\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067");};if _afef !=0{_gfb .RetainFlag =true ;};_afef ,_eada =_gfb .Reader .ReadBit ();if _eada !=nil {return _cbg .Wrap (_eada ,_ddfe ,"\u0070\u0061g\u0065\u0020\u0061s\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e");
};if _afef !=0{_gfb .PageAssociationFieldSize =true ;};_faac ,_eada :=_gfb .Reader .ReadBits (6);if _eada !=nil {return _cbg .Wrap (_eada ,_ddfe ,"\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065");};_gfb .Type =Type (int (_faac ));return nil ;
};func (_fcec *TextRegion )getUserTable (_edgea int )(_ga .Tabler ,error ){const _bbec ="\u0067\u0065\u0074U\u0073\u0065\u0072\u0054\u0061\u0062\u006c\u0065";var _fccb int ;for _ ,_cefg :=range _fcec .Header .RTSegments {if _cefg .Type ==53{if _fccb ==_edgea {_fgb ,_dagg :=_cefg .GetSegmentData ();
if _dagg !=nil {return nil ,_dagg ;};_aadd ,_ecaa :=_fgb .(*TableSegment );if !_ecaa {_ge .Log .Debug (_f .Sprintf ("\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079p\u0065\u00205\u0033\u0020\u002d\u0020\u0061\u006ed\u0020in\u0064\u0065\u0078\u003a\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_cefg .SegmentNumber ));
return nil ,_cbg .Error (_bbec ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079\u0070e\u0020\u0035\u0033\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u002a\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};return _ga .NewEncodedTable (_aadd );};_fccb ++;};};return nil ,nil ;};func (_dgfc *PatternDictionary )parseHeader ()error {_ge .Log .Trace ("\u005b\u0050\u0041\u0054\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054I\u004f\u004e\u0041\u0052\u0059\u005d[\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d\u0020b\u0065\u0067\u0069\u006e");
defer func (){_ge .Log .Trace ("\u005b\u0050\u0041T\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u005b\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
}();_ ,_daeg :=_dgfc ._cggb .ReadBits (5);if _daeg !=nil {return _daeg ;};if _daeg =_dgfc .readTemplate ();_daeg !=nil {return _daeg ;};if _daeg =_dgfc .readIsMMREncoded ();_daeg !=nil {return _daeg ;};if _daeg =_dgfc .readPatternWidthAndHeight ();_daeg !=nil {return _daeg ;
};if _daeg =_dgfc .readGrayMax ();_daeg !=nil {return _daeg ;};if _daeg =_dgfc .computeSegmentDataStructure ();_daeg !=nil {return _daeg ;};return _dgfc .checkInput ();};func (_aadg *Header )writeReferredToCount (_ddfa _ca .BinaryWriter )(_abfg int ,_fbc error ){const _bbffe ="w\u0072i\u0074\u0065\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0043ou\u006e\u0074";
_aadg .RTSNumbers =make ([]int ,len (_aadg .RTSegments ));for _agcd ,_gacce :=range _aadg .RTSegments {_aadg .RTSNumbers [_agcd ]=int (_gacce .SegmentNumber );};if len (_aadg .RTSNumbers )<=4{var _efda byte ;if len (_aadg .RetainBits )>=1{_efda =_aadg .RetainBits [0];
};_efda |=byte (len (_aadg .RTSNumbers ))<<5;if _fbc =_ddfa .WriteByte (_efda );_fbc !=nil {return 0,_cbg .Wrap (_fbc ,_bbffe ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return 1,nil ;};_ffe :=uint32 (len (_aadg .RTSNumbers ));
_dcab :=make ([]byte ,4+_agc .Ceil (len (_aadg .RTSNumbers )+1,8));_ffe |=0x7<<29;_d .BigEndian .PutUint32 (_dcab ,_ffe );copy (_dcab [1:],_aadg .RetainBits );_abfg ,_fbc =_ddfa .Write (_dcab );if _fbc !=nil {return 0,_cbg .Wrap (_fbc ,_bbffe ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");
};return _abfg ,nil ;};