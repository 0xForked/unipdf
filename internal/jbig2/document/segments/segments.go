//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package segments ;import (_gd "encoding/binary";_be "errors";_f "fmt";_dc "github.com/unidoc/unipdf/v3/common";_d "github.com/unidoc/unipdf/v3/internal/bitwise";_a "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_bf "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";
_gdg "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/arithmetic";_ae "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/huffman";_dac "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/mmr";_fd "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/arithmetic";
_dd "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_da "github.com/unidoc/unipdf/v3/internal/jbig2/internal";_ce "golang.org/x/xerrors";_ca "image";_b "io";_c "math";_bb "strings";_e "time";);func (_ebdc *SymbolDictionary )decodeHeightClassDeltaHeightWithHuffman ()(int64 ,error ){switch _ebdc .SdHuffDecodeHeightSelection {case 0:_fefd ,_gdad :=_ae .GetStandardTable (4);
if _gdad !=nil {return 0,_gdad ;};return _fefd .Decode (_ebdc ._ccba );case 1:_eeab ,_cagg :=_ae .GetStandardTable (5);if _cagg !=nil {return 0,_cagg ;};return _eeab .Decode (_ebdc ._ccba );case 3:if _ebdc ._abee ==nil {_fcgdg ,_gega :=_ae .GetStandardTable (0);
if _gega !=nil {return 0,_gega ;};_ebdc ._abee =_fcgdg ;};return _ebdc ._abee .Decode (_ebdc ._ccba );};return 0,nil ;};func (_faeab *SymbolDictionary )readAtPixels (_faae int )error {_faeab .SdATX =make ([]int8 ,_faae );_faeab .SdATY =make ([]int8 ,_faae );
var (_afbf byte ;_deafb error ;);for _edeb :=0;_edeb < _faae ;_edeb ++{_afbf ,_deafb =_faeab ._ccba .ReadByte ();if _deafb !=nil {return _deafb ;};_faeab .SdATX [_edeb ]=int8 (_afbf );_afbf ,_deafb =_faeab ._ccba .ReadByte ();if _deafb !=nil {return _deafb ;
};_faeab .SdATY [_edeb ]=int8 (_afbf );};return nil ;};func (_ada *GenericRefinementRegion )decodeSLTP ()(int ,error ){_ada .Template .setIndex (_ada ._ed );return _ada ._gg .DecodeBit (_ada ._ed );};type template1 struct{};func (_cfdgf *TableSegment )HtRS ()int32 {return _cfdgf ._gabde };
func (_adfed *TableSegment )HtOOB ()int32 {return _adfed ._edbf };func (_cdba *Header )readHeaderLength (_gade *_d .Reader ,_fgabb int64 ){_cdba .HeaderLength =_gade .AbsolutePosition ()-_fgabb ;};func (_ddfdb *TextRegion )blit (_eafc *_bf .Bitmap ,_febb int64 )error {if _ddfdb .IsTransposed ==0&&(_ddfdb .ReferenceCorner ==2||_ddfdb .ReferenceCorner ==3){_ddfdb ._abab +=int64 (_eafc .Width -1);
}else if _ddfdb .IsTransposed ==1&&(_ddfdb .ReferenceCorner ==0||_ddfdb .ReferenceCorner ==2){_ddfdb ._abab +=int64 (_eafc .Height -1);};_gefd :=_ddfdb ._abab ;if _ddfdb .IsTransposed ==1{_gefd ,_febb =_febb ,_gefd ;};switch _ddfdb .ReferenceCorner {case 0:_febb -=int64 (_eafc .Height -1);
case 2:_febb -=int64 (_eafc .Height -1);_gefd -=int64 (_eafc .Width -1);case 3:_gefd -=int64 (_eafc .Width -1);};_gcfgg :=_bf .Blit (_eafc ,_ddfdb .RegionBitmap ,int (_gefd ),int (_febb ),_ddfdb .CombinationOperator );if _gcfgg !=nil {return _gcfgg ;};
if _ddfdb .IsTransposed ==0&&(_ddfdb .ReferenceCorner ==0||_ddfdb .ReferenceCorner ==1){_ddfdb ._abab +=int64 (_eafc .Width -1);};if _ddfdb .IsTransposed ==1&&(_ddfdb .ReferenceCorner ==1||_ddfdb .ReferenceCorner ==3){_ddfdb ._abab +=int64 (_eafc .Height -1);
};return nil ;};func (_aae *GenericRegion )getPixel (_eadf ,_fccf int )int8 {if _eadf < 0||_eadf >=_aae .Bitmap .Width {return 0;};if _fccf < 0||_fccf >=_aae .Bitmap .Height {return 0;};if _aae .Bitmap .GetPixel (_eadf ,_fccf ){return 1;};return 0;};func (_fagg *template0 )setIndex (_gff *_gdg .DecoderStats ){_gff .SetIndex (0x100)};
func (_adgbdg *TextRegion )getSymbols ()error {if _adgbdg .Header .RTSegments !=nil {return _adgbdg .initSymbols ();};return nil ;};func (_eeae *TextRegion )setContexts (_beac *_gdg .DecoderStats ,_bef *_gdg .DecoderStats ,_ebga *_gdg .DecoderStats ,_gcbd *_gdg .DecoderStats ,_cgcd *_gdg .DecoderStats ,_aecc *_gdg .DecoderStats ,_adbf *_gdg .DecoderStats ,_cfbaf *_gdg .DecoderStats ,_eade *_gdg .DecoderStats ,_bfab *_gdg .DecoderStats ){_eeae ._fcce =_bef ;
_eeae ._efce =_ebga ;_eeae ._cfeb =_gcbd ;_eeae ._fffc =_cgcd ;_eeae ._dfbbc =_adbf ;_eeae ._cdad =_cfbaf ;_eeae ._dged =_aecc ;_eeae ._efbc =_eade ;_eeae ._cbggb =_bfab ;_eeae ._ggebe =_beac ;};func (_eafd *SymbolDictionary )decodeAggregate (_efae ,_fcefg uint32 )error {var (_ecgb int64 ;
_gabd error ;);if _eafd .IsHuffmanEncoded {_ecgb ,_gabd =_eafd .huffDecodeRefAggNInst ();if _gabd !=nil {return _gabd ;};}else {_cadg ,_abdf :=_eafd ._acd .DecodeInt (_eafd ._faed );if _abdf !=nil {return _abdf ;};_ecgb =int64 (_cadg );};if _ecgb > 1{return _eafd .decodeThroughTextRegion (_efae ,_fcefg ,uint32 (_ecgb ));
}else if _ecgb ==1{return _eafd .decodeRefinedSymbol (_efae ,_fcefg );};return nil ;};func (_fceb *SymbolDictionary )Init (h *Header ,r *_d .Reader )error {_fceb .Header =h ;_fceb ._ccba =r ;return _fceb .parseHeader ();};func (_gce *template0 )form (_dea ,_ead ,_dfac ,_abf ,_eff int16 )int16 {return (_dea <<10)|(_ead <<7)|(_dfac <<4)|(_abf <<1)|_eff ;
};func (_aba *HalftoneRegion )combineGrayscalePlanes (_dgab []*_bf .Bitmap ,_ffb int )error {_eedg :=0;for _ggegc :=0;_ggegc < _dgab [_ffb ].Height ;_ggegc ++{for _agc :=0;_agc < _dgab [_ffb ].Width ;_agc +=8{_ggbf ,_ddbg :=_dgab [_ffb +1].GetByte (_eedg );
if _ddbg !=nil {return _ddbg ;};_cgga ,_ddbg :=_dgab [_ffb ].GetByte (_eedg );if _ddbg !=nil {return _ddbg ;};_ddbg =_dgab [_ffb ].SetByte (_eedg ,_bf .CombineBytes (_cgga ,_ggbf ,_bf .CmbOpXor ));if _ddbg !=nil {return _ddbg ;};_eedg ++;};};return nil ;
};func (_dbfgg *RegionSegment )parseHeader ()error {const _gcgc ="p\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_dc .Log .Trace ("\u005b\u0052\u0045\u0047I\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002dH\u0045A\u0044\u0045\u0052\u005d\u0020\u0042\u0065g\u0069\u006e");
defer func (){_dc .Log .Trace ("\u005b\u0052\u0045G\u0049\u004f\u004e\u005d[\u0050\u0041\u0052\u0053\u0045\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");}();_edfd ,_efbb :=_dbfgg ._bbdb .ReadBits (32);
if _efbb !=nil {return _dd .Wrap (_efbb ,_gcgc ,"\u0077\u0069\u0064t\u0068");};_dbfgg .BitmapWidth =uint32 (_edfd &_c .MaxUint32 );_edfd ,_efbb =_dbfgg ._bbdb .ReadBits (32);if _efbb !=nil {return _dd .Wrap (_efbb ,_gcgc ,"\u0068\u0065\u0069\u0067\u0068\u0074");
};_dbfgg .BitmapHeight =uint32 (_edfd &_c .MaxUint32 );_edfd ,_efbb =_dbfgg ._bbdb .ReadBits (32);if _efbb !=nil {return _dd .Wrap (_efbb ,_gcgc ,"\u0078\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_dbfgg .XLocation =uint32 (_edfd &_c .MaxUint32 );
_edfd ,_efbb =_dbfgg ._bbdb .ReadBits (32);if _efbb !=nil {return _dd .Wrap (_efbb ,_gcgc ,"\u0079\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_dbfgg .YLocation =uint32 (_edfd &_c .MaxUint32 );if _ ,_efbb =_dbfgg ._bbdb .ReadBits (5);_efbb !=nil {return _dd .Wrap (_efbb ,_gcgc ,"\u0064i\u0072\u0079\u0020\u0072\u0065\u0061d");
};if _efbb =_dbfgg .readCombinationOperator ();_efbb !=nil {return _dd .Wrap (_efbb ,_gcgc ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};return nil ;};func (_cbcb *TextRegion )encodeFlags (_fgfef _d .BinaryWriter )(_dfegb int ,_dgbc error ){const _dbad ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _dgbc =_fgfef .WriteBit (int (_cbcb .SbrTemplate ));_dgbc !=nil {return _dfegb ,_dd .Wrap (_dgbc ,_dbad ,"s\u0062\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};if _ ,_dgbc =_fgfef .WriteBits (uint64 (_cbcb .SbDsOffset ),5);_dgbc !=nil {return _dfegb ,_dd .Wrap (_dgbc ,_dbad ,"\u0073\u0062\u0044\u0073\u004f\u0066\u0066\u0073\u0065\u0074");
};if _dgbc =_fgfef .WriteBit (int (_cbcb .DefaultPixel ));_dgbc !=nil {return _dfegb ,_dd .Wrap (_dgbc ,_dbad ,"\u0044\u0065\u0066a\u0075\u006c\u0074\u0050\u0069\u0078\u0065\u006c");};if _ ,_dgbc =_fgfef .WriteBits (uint64 (_cbcb .CombinationOperator ),2);
_dgbc !=nil {return _dfegb ,_dd .Wrap (_dgbc ,_dbad ,"\u0043\u006f\u006d\u0062in\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072");};if _dgbc =_fgfef .WriteBit (int (_cbcb .IsTransposed ));_dgbc !=nil {return _dfegb ,_dd .Wrap (_dgbc ,_dbad ,"\u0069\u0073\u0020\u0074\u0072\u0061\u006e\u0073\u0070\u006f\u0073\u0065\u0064");
};if _ ,_dgbc =_fgfef .WriteBits (uint64 (_cbcb .ReferenceCorner ),2);_dgbc !=nil {return _dfegb ,_dd .Wrap (_dgbc ,_dbad ,"\u0072\u0065f\u0065\u0072\u0065n\u0063\u0065\u0020\u0063\u006f\u0072\u006e\u0065\u0072");};if _ ,_dgbc =_fgfef .WriteBits (uint64 (_cbcb .LogSBStrips ),2);
_dgbc !=nil {return _dfegb ,_dd .Wrap (_dgbc ,_dbad ,"L\u006f\u0067\u0053\u0042\u0053\u0074\u0072\u0069\u0070\u0073");};var _ffbf int ;if _cbcb .UseRefinement {_ffbf =1;};if _dgbc =_fgfef .WriteBit (_ffbf );_dgbc !=nil {return _dfegb ,_dd .Wrap (_dgbc ,_dbad ,"\u0075\u0073\u0065\u0020\u0072\u0065\u0066\u0069\u006ee\u006d\u0065\u006e\u0074");
};_ffbf =0;if _cbcb .IsHuffmanEncoded {_ffbf =1;};if _dgbc =_fgfef .WriteBit (_ffbf );_dgbc !=nil {return _dfegb ,_dd .Wrap (_dgbc ,_dbad ,"u\u0073\u0065\u0020\u0068\u0075\u0066\u0066\u006d\u0061\u006e");};_dfegb =2;return _dfegb ,nil ;};func (_cffc *SymbolDictionary )String ()string {_debb :=&_bb .Builder {};
_debb .WriteString ("\n\u005b\u0053\u0059\u004dBO\u004c-\u0044\u0049\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u000a");_debb .WriteString (_f .Sprintf ("\u0009-\u0020S\u0064\u0072\u0054\u0065\u006dp\u006c\u0061t\u0065\u0020\u0025\u0076\u000a",_cffc .SdrTemplate ));
_debb .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0025\u0076\u000a",_cffc .SdTemplate ));_debb .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006eg\u0043\u006f\u006e\u0074\u0065\u0078\u0074R\u0065\u0074\u0061\u0069\u006e\u0065\u0064\u0020\u0025\u0076\u000a",_cffc ._ggfgb ));
_debb .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074\u0065\u0078\u0074\u0055\u0073\u0065\u0064 \u0025\u0076\u000a",_cffc ._abea ));_debb .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_cffc .SdHuffAggInstanceSelection ));
_debb .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053d\u0048\u0075\u0066\u0066\u0042\u004d\u0053\u0069\u007a\u0065S\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020%\u0076\u000a",_cffc .SdHuffBMSizeSelection ));_debb .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_cffc .SdHuffDecodeWidthSelection ));
_debb .WriteString (_f .Sprintf ("\u0009\u002d\u0020Sd\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064e\u0048e\u0069g\u0068t\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_cffc .SdHuffDecodeHeightSelection ));_debb .WriteString (_f .Sprintf ("\u0009\u002d\u0020U\u0073\u0065\u0052\u0065f\u0069\u006e\u0065\u006d\u0065\u006e\u0074A\u0067\u0067\u0072\u0065\u0067\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_cffc .UseRefinementAggregation ));
_debb .WriteString (_f .Sprintf ("\u0009\u002d\u0020is\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045\u006e\u0063\u006f\u0064\u0065\u0064\u0020\u0025\u0076\u000a",_cffc .IsHuffmanEncoded ));_debb .WriteString (_f .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_cffc .SdATX ));
_debb .WriteString (_f .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_cffc .SdATY ));_debb .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_cffc .SdrATX ));_debb .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_cffc .SdrATY ));
_debb .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u004e\u0075\u006d\u0062\u0065\u0072\u004ff\u0045\u0078\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_cffc .NumberOfExportedSymbols ));_debb .WriteString (_f .Sprintf ("\u0009-\u0020\u004e\u0075\u006db\u0065\u0072\u004f\u0066\u004ee\u0077S\u0079m\u0062\u006f\u006c\u0073\u0020\u0025\u0076\n",_cffc .NumberOfNewSymbols ));
_debb .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u004ff\u0049\u006d\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_cffc ._gdeaa ));_debb .WriteString (_f .Sprintf ("\u0009\u002d \u006e\u0075\u006d\u0062\u0065\u0072\u004f\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0064\u0053\u0079\u006d\u0062\u006f\u006c\u0073 %\u0076\u000a",_cffc ._ageeg ));
return _debb .String ();};func (_gdeff *template1 )setIndex (_dae *_gdg .DecoderStats ){_dae .SetIndex (0x080)};func (_cfaf *SymbolDictionary )huffDecodeRefAggNInst ()(int64 ,error ){if !_cfaf .SdHuffAggInstanceSelection {_egfgg ,_cafa :=_ae .GetStandardTable (1);
if _cafa !=nil {return 0,_cafa ;};return _egfgg .Decode (_cfaf ._ccba );};if _cfaf ._ebf ==nil {var (_ccgb int ;_eaae error ;);if _cfaf .SdHuffDecodeHeightSelection ==3{_ccgb ++;};if _cfaf .SdHuffDecodeWidthSelection ==3{_ccgb ++;};if _cfaf .SdHuffBMSizeSelection ==3{_ccgb ++;
};_cfaf ._ebf ,_eaae =_cfaf .getUserTable (_ccgb );if _eaae !=nil {return 0,_eaae ;};};return _cfaf ._ebf .Decode (_cfaf ._ccba );};func (_bgbfc *TableSegment )HtPS ()int32 {return _bgbfc ._bdbb };func (_ddab *SymbolDictionary )decodeDifferenceWidth ()(int64 ,error ){if _ddab .IsHuffmanEncoded {switch _ddab .SdHuffDecodeWidthSelection {case 0:_fegeb ,_debg :=_ae .GetStandardTable (2);
if _debg !=nil {return 0,_debg ;};return _fegeb .Decode (_ddab ._ccba );case 1:_dada ,_aeec :=_ae .GetStandardTable (3);if _aeec !=nil {return 0,_aeec ;};return _dada .Decode (_ddab ._ccba );case 3:if _ddab ._fgeg ==nil {var _dffe int ;if _ddab .SdHuffDecodeHeightSelection ==3{_dffe ++;
};_efcbe ,_ecgdg :=_ddab .getUserTable (_dffe );if _ecgdg !=nil {return 0,_ecgdg ;};_ddab ._fgeg =_efcbe ;};return _ddab ._fgeg .Decode (_ddab ._ccba );};}else {_bdfda ,_gdga :=_ddab ._acd .DecodeInt (_ddab ._dgfga );if _gdga !=nil {return 0,_gdga ;};return int64 (_bdfda ),nil ;
};return 0,nil ;};func (_gegc *SymbolDictionary )readNumberOfNewSymbols ()error {_abcc ,_bfaa :=_gegc ._ccba .ReadBits (32);if _bfaa !=nil {return _bfaa ;};_gegc .NumberOfNewSymbols =uint32 (_abcc &_c .MaxUint32 );return nil ;};func (_fadfc *GenericRegion )parseHeader ()(_cfga error ){_dc .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052I\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0050\u0061\u0072s\u0069\u006e\u0067\u0048\u0065\u0061\u0064e\u0072\u002e\u002e\u002e");
defer func (){if _cfga !=nil {_dc .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e]\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065r\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0077\u0069th\u0020\u0065\u0072\u0072\u006f\u0072\u002e\u0020\u0025\u0076",_cfga );
}else {_dc .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049C\u002d\u0052\u0045G\u0049\u004f\u004e]\u0020\u0050a\u0072\u0073\u0069\u006e\u0067\u0048e\u0061de\u0072\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0053\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079\u002e\u002e\u002e");
};}();var (_ccag int ;_dga uint64 ;);if _cfga =_fadfc .RegionSegment .parseHeader ();_cfga !=nil {return _cfga ;};if _ ,_cfga =_fadfc ._dcg .ReadBits (3);_cfga !=nil {return _cfga ;};_ccag ,_cfga =_fadfc ._dcg .ReadBit ();if _cfga !=nil {return _cfga ;
};if _ccag ==1{_fadfc .UseExtTemplates =true ;};_ccag ,_cfga =_fadfc ._dcg .ReadBit ();if _cfga !=nil {return _cfga ;};if _ccag ==1{_fadfc .IsTPGDon =true ;};_dga ,_cfga =_fadfc ._dcg .ReadBits (2);if _cfga !=nil {return _cfga ;};_fadfc .GBTemplate =byte (_dga &0xf);
_ccag ,_cfga =_fadfc ._dcg .ReadBit ();if _cfga !=nil {return _cfga ;};if _ccag ==1{_fadfc .IsMMREncoded =true ;};if !_fadfc .IsMMREncoded {_eea :=1;if _fadfc .GBTemplate ==0{_eea =4;if _fadfc .UseExtTemplates {_eea =12;};};if _cfga =_fadfc .readGBAtPixels (_eea );
_cfga !=nil {return _cfga ;};};if _cfga =_fadfc .computeSegmentDataStructure ();_cfga !=nil {return _cfga ;};_dc .Log .Trace ("\u0025\u0073",_fadfc );return nil ;};func (_gggc *HalftoneRegion )computeX (_gecc ,_ffbb int )int {return _gggc .shiftAndFill (int (_gggc .HGridX )+_gecc *int (_gggc .HRegionY )+_ffbb *int (_gggc .HRegionX ));
};func (_dcaa *SymbolDictionary )decodeHeightClassCollectiveBitmap (_cefb int64 ,_cafe ,_dafa uint32 )(*_bf .Bitmap ,error ){if _cefb ==0{_faddc :=_bf .New (int (_dafa ),int (_cafe ));var (_fegd byte ;_bgee error ;);for _gfea :=0;_gfea < len (_faddc .Data );
_gfea ++{_fegd ,_bgee =_dcaa ._ccba .ReadByte ();if _bgee !=nil {return nil ,_bgee ;};if _bgee =_faddc .SetByte (_gfea ,_fegd );_bgee !=nil {return nil ,_bgee ;};};return _faddc ,nil ;};if _dcaa ._dfbd ==nil {_dcaa ._dfbd =NewGenericRegion (_dcaa ._ccba );
};_dcaa ._dfbd .setParameters (true ,_dcaa ._ccba .AbsolutePosition (),_cefb ,_cafe ,_dafa );_baag ,_decdc :=_dcaa ._dfbd .GetRegionBitmap ();if _decdc !=nil {return nil ,_decdc ;};return _baag ,nil ;};func (_gb *EndOfStripe )parseHeader ()error {_de ,_aec :=_gb ._ba .ReadBits (32);
if _aec !=nil {return _aec ;};_gb ._ag =int (_de &_c .MaxInt32 );return nil ;};func (_bgfc *Header )subInputReader ()(*_d .Reader ,error ){_cabea :=int (_bgfc .SegmentDataLength );if _bgfc .SegmentDataLength ==_c .MaxInt32 {_cabea =-1;};return _bgfc .Reader .NewPartialReader (int (_bgfc .SegmentDataStartOffset ),_cabea ,false );
};func (_cabff *PageInformationSegment )encodeStripingInformation (_cge _d .BinaryWriter )(_dfd int ,_edac error ){const _dfab ="\u0065n\u0063\u006f\u0064\u0065S\u0074\u0072\u0069\u0070\u0069n\u0067I\u006ef\u006f\u0072\u006d\u0061\u0074\u0069\u006fn";if !_cabff .IsStripe {if _dfd ,_edac =_cge .Write ([]byte {0x00,0x00});
_edac !=nil {return 0,_dd .Wrap (_edac ,_dfab ,"n\u006f\u0020\u0073\u0074\u0072\u0069\u0070\u0069\u006e\u0067");};return _dfd ,nil ;};_egdb :=make ([]byte ,2);_gd .BigEndian .PutUint16 (_egdb ,_cabff .MaxStripeSize |1<<15);if _dfd ,_edac =_cge .Write (_egdb );
_edac !=nil {return 0,_dd .Wrapf (_edac ,_dfab ,"\u0073\u0074\u0072i\u0070\u0069\u006e\u0067\u003a\u0020\u0025\u0064",_cabff .MaxStripeSize );};return _dfd ,nil ;};func (_ccagc *RegionSegment )readCombinationOperator ()error {_cggb ,_dbcg :=_ccagc ._bbdb .ReadBits (3);
if _dbcg !=nil {return _dbcg ;};_ccagc .CombinaionOperator =_bf .CombinationOperator (_cggb &0xF);return nil ;};func (_afdaa *TextRegion )decodeRI ()(int64 ,error ){if !_afdaa .UseRefinement {return 0,nil ;};if _afdaa .IsHuffmanEncoded {_fegg ,_dgfc :=_afdaa ._gebc .ReadBit ();
return int64 (_fegg ),_dgfc ;};_afae ,_gcc :=_afdaa ._geeg .DecodeInt (_afdaa ._cebae );return int64 (_afae ),_gcc ;};func (_dfec *RegionSegment )String ()string {_cgba :=&_bb .Builder {};_cgba .WriteString ("\u0009[\u0052E\u0047\u0049\u004f\u004e\u0020S\u0045\u0047M\u0045\u004e\u0054\u005d\u000a");
_cgba .WriteString (_f .Sprintf ("\t\u0009\u002d\u0020\u0042\u0069\u0074m\u0061\u0070\u0020\u0028\u0077\u0069d\u0074\u0068\u002c\u0020\u0068\u0065\u0069g\u0068\u0074\u0029\u0020\u005b\u0025\u0064\u0078\u0025\u0064]\u000a",_dfec .BitmapWidth ,_dfec .BitmapHeight ));
_cgba .WriteString (_f .Sprintf ("\u0009\u0009\u002d\u0020L\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0028\u0078,\u0079)\u003a\u0020\u005b\u0025\u0064\u002c\u0025d\u005d\u000a",_dfec .XLocation ,_dfec .YLocation ));_cgba .WriteString (_f .Sprintf ("\t\u0009\u002d\u0020\u0043\u006f\u006db\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070e\u0072\u0061\u0074o\u0072:\u0020\u0025\u0073",_dfec .CombinaionOperator ));
return _cgba .String ();};func (_ddga *RegionSegment )Encode (w _d .BinaryWriter )(_bbf int ,_dbfg error ){const _abag ="R\u0065g\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065n\u0074\u002e\u0045\u006eco\u0064\u0065";_ecd :=make ([]byte ,4);_gd .BigEndian .PutUint32 (_ecd ,_ddga .BitmapWidth );
_bbf ,_dbfg =w .Write (_ecd );if _dbfg !=nil {return 0,_dd .Wrap (_dbfg ,_abag ,"\u0057\u0069\u0064t\u0068");};_gd .BigEndian .PutUint32 (_ecd ,_ddga .BitmapHeight );var _cgffa int ;_cgffa ,_dbfg =w .Write (_ecd );if _dbfg !=nil {return 0,_dd .Wrap (_dbfg ,_abag ,"\u0048\u0065\u0069\u0067\u0068\u0074");
};_bbf +=_cgffa ;_gd .BigEndian .PutUint32 (_ecd ,_ddga .XLocation );_cgffa ,_dbfg =w .Write (_ecd );if _dbfg !=nil {return 0,_dd .Wrap (_dbfg ,_abag ,"\u0058L\u006f\u0063\u0061\u0074\u0069\u006fn");};_bbf +=_cgffa ;_gd .BigEndian .PutUint32 (_ecd ,_ddga .YLocation );
_cgffa ,_dbfg =w .Write (_ecd );if _dbfg !=nil {return 0,_dd .Wrap (_dbfg ,_abag ,"\u0059L\u006f\u0063\u0061\u0074\u0069\u006fn");};_bbf +=_cgffa ;if _dbfg =w .WriteByte (byte (_ddga .CombinaionOperator )&0x07);_dbfg !=nil {return 0,_dd .Wrap (_dbfg ,_abag ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");
};_bbf ++;return _bbf ,nil ;};func (_ecgbd *SymbolDictionary )getToExportFlags ()([]int ,error ){var (_faebb int ;_bcdd int32 ;_gcgac error ;_bebda =int32 (_ecgbd ._gdeaa +_ecgbd .NumberOfNewSymbols );_cdab =make ([]int ,_bebda ););for _daggf :=int32 (0);
_daggf < _bebda ;_daggf +=_bcdd {if _ecgbd .IsHuffmanEncoded {_efde ,_gbbf :=_ae .GetStandardTable (1);if _gbbf !=nil {return nil ,_gbbf ;};_ccdd ,_gbbf :=_efde .Decode (_ecgbd ._ccba );if _gbbf !=nil {return nil ,_gbbf ;};_bcdd =int32 (_ccdd );}else {_bcdd ,_gcgac =_ecgbd ._acd .DecodeInt (_ecgbd ._baed );
if _gcgac !=nil {return nil ,_gcgac ;};};if _bcdd !=0{if _daggf +_bcdd > _bebda {return nil ,_dd .Error ("\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0067\u0065\u0074T\u006f\u0045\u0078\u0070\u006f\u0072\u0074F\u006c\u0061\u0067\u0073","\u006d\u0061\u006c\u0066\u006f\u0072m\u0065\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0064\u0061\u0074\u0061\u0020\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u002e\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u006f\u0075\u0074\u0020\u006ff\u0020r\u0061\u006e\u0067\u0065");
};for _bbbab :=_daggf ;_bbbab < _daggf +_bcdd ;_bbbab ++{_cdab [_bbbab ]=_faebb ;};};if _faebb ==0{_faebb =1;}else {_faebb =0;};};return _cdab ,nil ;};func (_bfcg *GenericRegion )writeGBAtPixels (_fbfa _d .BinaryWriter )(_fdff int ,_cfd error ){const _adbc ="\u0077r\u0069t\u0065\u0047\u0042\u0041\u0074\u0050\u0069\u0078\u0065\u006c\u0073";
if _bfcg .UseMMR {return 0,nil ;};_fcgda :=1;if _bfcg .GBTemplate ==0{_fcgda =4;}else if _bfcg .UseExtTemplates {_fcgda =12;};if len (_bfcg .GBAtX )!=_fcgda {return 0,_dd .Errorf (_adbc ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0058\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};if len (_bfcg .GBAtY )!=_fcgda {return 0,_dd .Errorf (_adbc ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0059\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};for _gbcea :=0;_gbcea < _fcgda ;_gbcea ++{if _cfd =_fbfa .WriteByte (byte (_bfcg .GBAtX [_gbcea ]));_cfd !=nil {return _fdff ,_dd .Wrap (_cfd ,_adbc ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0058");};_fdff ++;if _cfd =_fbfa .WriteByte (byte (_bfcg .GBAtY [_gbcea ]));
_cfd !=nil {return _fdff ,_dd .Wrap (_cfd ,_adbc ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0059");};_fdff ++;};return _fdff ,nil ;};func (_faeb *PageInformationSegment )readResolution ()error {_fbcf ,_cdef :=_faeb ._afa .ReadBits (32);
if _cdef !=nil {return _cdef ;};_faeb .ResolutionX =int (_fbcf &_c .MaxInt32 );_fbcf ,_cdef =_faeb ._afa .ReadBits (32);if _cdef !=nil {return _cdef ;};_faeb .ResolutionY =int (_fbcf &_c .MaxInt32 );return nil ;};func (_aecf *TextRegion )decodeRdx ()(int64 ,error ){const _begf ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064x";
if _aecf .IsHuffmanEncoded {if _aecf .SbHuffRDX ==3{if _aecf ._baca ==nil {var (_gbea int ;_bddb error ;);if _aecf .SbHuffFS ==3{_gbea ++;};if _aecf .SbHuffDS ==3{_gbea ++;};if _aecf .SbHuffDT ==3{_gbea ++;};if _aecf .SbHuffRDWidth ==3{_gbea ++;};if _aecf .SbHuffRDHeight ==3{_gbea ++;
};_aecf ._baca ,_bddb =_aecf .getUserTable (_gbea );if _bddb !=nil {return 0,_dd .Wrap (_bddb ,_begf ,"");};};return _aecf ._baca .Decode (_aecf ._gebc );};_fgag ,_begfa :=_ae .GetStandardTable (14+int (_aecf .SbHuffRDX ));if _begfa !=nil {return 0,_dd .Wrap (_begfa ,_begf ,"");
};return _fgag .Decode (_aecf ._gebc );};_baaa ,_feee :=_aecf ._geeg .DecodeInt (_aecf ._efbc );if _feee !=nil {return 0,_dd .Wrap (_feee ,_begf ,"");};return int64 (_baaa ),nil ;};func (_cgfb *GenericRegion )decodeLine (_fcf ,_gbb ,_aeca int )error {const _egg ="\u0064\u0065\u0063\u006f\u0064\u0065\u004c\u0069\u006e\u0065";
_abfa :=_cgfb .Bitmap .GetByteIndex (0,_fcf );_fcg :=_abfa -_cgfb .Bitmap .RowStride ;switch _cgfb .GBTemplate {case 0:if !_cgfb .UseExtTemplates {return _cgfb .decodeTemplate0a (_fcf ,_gbb ,_aeca ,_abfa ,_fcg );};return _cgfb .decodeTemplate0b (_fcf ,_gbb ,_aeca ,_abfa ,_fcg );
case 1:return _cgfb .decodeTemplate1 (_fcf ,_gbb ,_aeca ,_abfa ,_fcg );case 2:return _cgfb .decodeTemplate2 (_fcf ,_gbb ,_aeca ,_abfa ,_fcg );case 3:return _cgfb .decodeTemplate3 (_fcf ,_gbb ,_aeca ,_abfa ,_fcg );};return _dd .Errorf (_egg ,"\u0069\u006e\u0076a\u006c\u0069\u0064\u0020G\u0042\u0054\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u003a\u0020\u0025\u0064",_cgfb .GBTemplate );
};func (_gbdc *SymbolDictionary )setRetainedCodingContexts (_addf *SymbolDictionary ){_gbdc ._acd =_addf ._acd ;_gbdc .IsHuffmanEncoded =_addf .IsHuffmanEncoded ;_gbdc .UseRefinementAggregation =_addf .UseRefinementAggregation ;_gbdc .SdTemplate =_addf .SdTemplate ;
_gbdc .SdrTemplate =_addf .SdrTemplate ;_gbdc .SdATX =_addf .SdATX ;_gbdc .SdATY =_addf .SdATY ;_gbdc .SdrATX =_addf .SdrATX ;_gbdc .SdrATY =_addf .SdrATY ;_gbdc ._fcef =_addf ._fcef ;};const (TSymbolDictionary Type =0;TIntermediateTextRegion Type =4;TImmediateTextRegion Type =6;
TImmediateLosslessTextRegion Type =7;TPatternDictionary Type =16;TIntermediateHalftoneRegion Type =20;TImmediateHalftoneRegion Type =22;TImmediateLosslessHalftoneRegion Type =23;TIntermediateGenericRegion Type =36;TImmediateGenericRegion Type =38;TImmediateLosslessGenericRegion Type =39;
TIntermediateGenericRefinementRegion Type =40;TImmediateGenericRefinementRegion Type =42;TImmediateLosslessGenericRefinementRegion Type =43;TPageInformation Type =48;TEndOfPage Type =49;TEndOfStrip Type =50;TEndOfFile Type =51;TProfiles Type =52;TTables Type =53;
TExtension Type =62;TBitmap Type =70;);func (_abga *SymbolDictionary )getUserTable (_gcbb int )(_ae .Tabler ,error ){var _gdgf int ;for _ ,_afaa :=range _abga .Header .RTSegments {if _afaa .Type ==53{if _gdgf ==_gcbb {_cecb ,_dgac :=_afaa .GetSegmentData ();
if _dgac !=nil {return nil ,_dgac ;};_gbgf :=_cecb .(_ae .BasicTabler );return _ae .NewEncodedTable (_gbgf );};_gdgf ++;};};return nil ,nil ;};func (_ab *GenericRefinementRegion )GetRegionBitmap ()(*_bf .Bitmap ,error ){var _faa error ;_dc .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _faa !=nil {_dc .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0047\u0065\u0074R\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006dap\u0020\u0066a\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_faa );
}else {_dc .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _ab .RegionBitmap !=nil {return _ab .RegionBitmap ,nil ;};_cd :=0;if _ab .ReferenceBitmap ==nil {_ab .ReferenceBitmap ,_faa =_ab .getGrReference ();if _faa !=nil {return nil ,_faa ;};};if _ab ._gg ==nil {_ab ._gg ,_faa =_gdg .New (_ab ._aee );
if _faa !=nil {return nil ,_faa ;};};if _ab ._ed ==nil {_ab ._ed =_gdg .NewStats (8192,1);};_ab .RegionBitmap =_bf .New (int (_ab .RegionInfo .BitmapWidth ),int (_ab .RegionInfo .BitmapHeight ));if _ab .TemplateID ==0{if _faa =_ab .updateOverride ();_faa !=nil {return nil ,_faa ;
};};_cb :=(_ab .RegionBitmap .Width +7)&-8;var _cc int ;if _ab .IsTPGROn {_cc =int (-_ab .ReferenceDY )*_ab .ReferenceBitmap .RowStride ;};_ad :=_cc +1;for _ceb :=0;_ceb < _ab .RegionBitmap .Height ;_ceb ++{if _ab .IsTPGROn {_dcc ,_fg :=_ab .decodeSLTP ();
if _fg !=nil {return nil ,_fg ;};_cd ^=_dcc ;};if _cd ==0{_faa =_ab .decodeOptimized (_ceb ,_ab .RegionBitmap .Width ,_ab .RegionBitmap .RowStride ,_ab .ReferenceBitmap .RowStride ,_cb ,_cc ,_ad );if _faa !=nil {return nil ,_faa ;};}else {_faa =_ab .decodeTypicalPredictedLine (_ceb ,_ab .RegionBitmap .Width ,_ab .RegionBitmap .RowStride ,_ab .ReferenceBitmap .RowStride ,_cb ,_cc );
if _faa !=nil {return nil ,_faa ;};};};return _ab .RegionBitmap ,nil ;};func (_bgbg *GenericRegion )decodeTemplate2 (_geff ,_bgfe ,_bbb int ,_faga ,_faea int )(_gadg error ){const _acad ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0032";
var (_acag ,_egfb int ;_ceabf ,_dcgd int ;_dge byte ;_dfe ,_ggea int ;);if _geff >=1{_dge ,_gadg =_bgbg .Bitmap .GetByte (_faea );if _gadg !=nil {return _dd .Wrap (_gadg ,_acad ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0031");
};_ceabf =int (_dge );};if _geff >=2{_dge ,_gadg =_bgbg .Bitmap .GetByte (_faea -_bgbg .Bitmap .RowStride );if _gadg !=nil {return _dd .Wrap (_gadg ,_acad ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0032");};_dcgd =int (_dge )<<4;
};_acag =(_ceabf >>3&0x7c)|(_dcgd >>3&0x380);for _cbcef :=0;_cbcef < _bbb ;_cbcef =_dfe {var (_cde byte ;_fcab int ;);_dfe =_cbcef +8;if _bbg :=_bgfe -_cbcef ;_bbg > 8{_fcab =8;}else {_fcab =_bbg ;};if _geff > 0{_ceabf <<=8;if _dfe < _bgfe {_dge ,_gadg =_bgbg .Bitmap .GetByte (_faea +1);
if _gadg !=nil {return _dd .Wrap (_gadg ,_acad ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0030");};_ceabf |=int (_dge );};};if _geff > 1{_dcgd <<=8;if _dfe < _bgfe {_dge ,_gadg =_bgbg .Bitmap .GetByte (_faea -_bgbg .Bitmap .RowStride +1);
if _gadg !=nil {return _dd .Wrap (_gadg ,_acad ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0031");};_dcgd |=int (_dge )<<4;};};for _bdfa :=0;_bdfa < _fcab ;_bdfa ++{_bcc :=uint (10-_bdfa );if _bgbg ._ceab {_egfb =_bgbg .overrideAtTemplate2 (_acag ,_cbcef +_bdfa ,_geff ,int (_cde ),_bdfa );
_bgbg ._add .SetIndex (int32 (_egfb ));}else {_bgbg ._add .SetIndex (int32 (_acag ));};_ggea ,_gadg =_bgbg ._cgf .DecodeBit (_bgbg ._add );if _gadg !=nil {return _dd .Wrap (_gadg ,_acad ,"");};_cde |=byte (_ggea <<uint (7-_bdfa ));_acag =((_acag &0x1bd)<<1)|_ggea |((_ceabf >>_bcc )&0x4)|((_dcgd >>_bcc )&0x80);
};if _fbdd :=_bgbg .Bitmap .SetByte (_faga ,_cde );_fbdd !=nil {return _dd .Wrap (_fbdd ,_acad ,"");};_faga ++;_faea ++;};return nil ;};func (_aagg *TextRegion )decodeSymbolInstances ()error {_gdb ,_addb :=_aagg .decodeStripT ();if _addb !=nil {return _addb ;
};var (_aaeb int64 ;_geab uint32 ;);for _geab < _aagg .NumberOfSymbolInstances {_dfcdg ,_dcfb :=_aagg .decodeDT ();if _dcfb !=nil {return _dcfb ;};_gdb +=_dfcdg ;var _aebc int64 ;_bfba :=true ;_aagg ._abab =0;for {if _bfba {_aebc ,_dcfb =_aagg .decodeDfs ();
if _dcfb !=nil {return _dcfb ;};_aaeb +=_aebc ;_aagg ._abab =_aaeb ;_bfba =false ;}else {_cabd ,_deefa :=_aagg .decodeIds ();if _ce .Is (_deefa ,_da .ErrOOB ){break ;};if _deefa !=nil {return _deefa ;};if _geab >=_aagg .NumberOfSymbolInstances {break ;
};_aagg ._abab +=_cabd +int64 (_aagg .SbDsOffset );};_agdg ,_dfcdd :=_aagg .decodeCurrentT ();if _dfcdd !=nil {return _dfcdd ;};_ceedc :=_gdb +_agdg ;_ccgc ,_dfcdd :=_aagg .decodeID ();if _dfcdd !=nil {return _dfcdd ;};_dfacce ,_dfcdd :=_aagg .decodeRI ();
if _dfcdd !=nil {return _dfcdd ;};_cddc ,_dfcdd :=_aagg .decodeIb (_dfacce ,_ccgc );if _dfcdd !=nil {return _dfcdd ;};if _dfcdd =_aagg .blit (_cddc ,_ceedc );_dfcdd !=nil {return _dfcdd ;};_geab ++;};};return nil ;};func (_fadb Type )String ()string {switch _fadb {case TSymbolDictionary :return "\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079";
case TIntermediateTextRegion :return "\u0049n\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020T\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateTextRegion :return "I\u006d\u006d\u0065\u0064ia\u0074e\u0020\u0054\u0065\u0078\u0074 \u0052\u0065\u0067\u0069\u006f\u006e";
case TImmediateLosslessTextRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020L\u006f\u0073\u0073\u006c\u0065\u0073\u0073 \u0054\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TPatternDictionary :return "\u0050a\u0074t\u0065\u0072\u006e\u0020\u0044i\u0063\u0074i\u006f\u006e\u0061\u0072\u0079";
case TIntermediateHalftoneRegion :return "\u0049\u006e\u0074\u0065r\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0048\u0061l\u0066t\u006f\u006e\u0065\u0020\u0052\u0065\u0067i\u006f\u006e";case TImmediateHalftoneRegion :return "\u0049m\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u0048\u0061l\u0066t\u006fn\u0065\u0020\u0052\u0065\u0067\u0069\u006fn";
case TImmediateLosslessHalftoneRegion :return "\u0049\u006d\u006ded\u0069\u0061\u0074\u0065\u0020\u004c\u006f\u0073\u0073l\u0065s\u0073 \u0048a\u006c\u0066\u0074\u006f\u006e\u0065\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TIntermediateGenericRegion :return "I\u006e\u0074\u0065\u0072\u006d\u0065d\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020R\u0065g\u0069\u006f\u006e";
case TImmediateGenericRegion :return "\u0049m\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006ee\u0072\u0069\u0063\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessGenericRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u004c\u006f\u0073\u0073\u006c\u0065\u0073\u0073\u0020\u0047e\u006e\u0065\u0072\u0069\u0063\u0020\u0052e\u0067\u0069\u006f\u006e";
case TIntermediateGenericRefinementRegion :return "\u0049\u006e\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0020\u0052\u0065\u0066i\u006e\u0065\u006d\u0065\u006et\u0020\u0052e\u0067\u0069\u006f\u006e";
case TImmediateGenericRefinementRegion :return "I\u006d\u006d\u0065\u0064\u0069\u0061t\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020\u0052\u0065\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020\u0052\u0065\u0067\u0069o\u006e";case TImmediateLosslessGenericRefinementRegion :return "\u0049m\u006d\u0065d\u0069\u0061\u0074\u0065 \u004c\u006f\u0073s\u006c\u0065\u0073\u0073\u0020\u0047\u0065\u006e\u0065ri\u0063\u0020\u0052e\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020R\u0065\u0067i\u006f\u006e";
case TPageInformation :return "\u0050\u0061g\u0065\u0020\u0049n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e";case TEndOfPage :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0050\u0061\u0067\u0065";case TEndOfStrip :return "\u0045\u006e\u0064 \u004f\u0066\u0020\u0053\u0074\u0072\u0069\u0070";
case TEndOfFile :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0046\u0069\u006c\u0065";case TProfiles :return "\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0073";case TTables :return "\u0054\u0061\u0062\u006c\u0065\u0073";case TExtension :return "\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn";
case TBitmap :return "\u0042\u0069\u0074\u006d\u0061\u0070";};return "I\u006ev\u0061\u006c\u0069\u0064\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0020Ki\u006e\u0064";};func (_baa *GenericRegion )decodeTemplate3 (_fcfc ,_edcf ,_aga int ,_caaf ,_gceb int )(_cec error ){const _bgdc ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0033";
var (_ggg ,_agg int ;_dbb int ;_bcdb byte ;_ecff ,_bae int ;);if _fcfc >=1{_bcdb ,_cec =_baa .Bitmap .GetByte (_gceb );if _cec !=nil {return _dd .Wrap (_cec ,_bgdc ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_dbb =int (_bcdb );};_ggg =(_dbb >>1)&0x70;
for _fcb :=0;_fcb < _aga ;_fcb =_ecff {var (_bfgg byte ;_edced int ;);_ecff =_fcb +8;if _bge :=_edcf -_fcb ;_bge > 8{_edced =8;}else {_edced =_bge ;};if _fcfc >=1{_dbb <<=8;if _ecff < _edcf {_bcdb ,_cec =_baa .Bitmap .GetByte (_gceb +1);if _cec !=nil {return _dd .Wrap (_cec ,_bgdc ,"\u0069\u006e\u006e\u0065\u0072\u0020\u002d\u0020\u006c\u0069\u006e\u0065 \u003e\u003d\u0020\u0031");
};_dbb |=int (_bcdb );};};for _bfb :=0;_bfb < _edced ;_bfb ++{if _baa ._ceab {_agg =_baa .overrideAtTemplate3 (_ggg ,_fcb +_bfb ,_fcfc ,int (_bfgg ),_bfb );_baa ._add .SetIndex (int32 (_agg ));}else {_baa ._add .SetIndex (int32 (_ggg ));};_bae ,_cec =_baa ._cgf .DecodeBit (_baa ._add );
if _cec !=nil {return _dd .Wrap (_cec ,_bgdc ,"");};_bfgg |=byte (_bae )<<byte (7-_bfb );_ggg =((_ggg &0x1f7)<<1)|_bae |((_dbb >>uint (8-_bfb ))&0x010);};if _fcc :=_baa .Bitmap .SetByte (_caaf ,_bfgg );_fcc !=nil {return _dd .Wrap (_fcc ,_bgdc ,"");};_caaf ++;
_gceb ++;};return nil ;};func (_fdg *GenericRegion )overrideAtTemplate2 (_ecca ,_dgf ,_ggeg ,_fdgg ,_fbc int )int {_ecca &=0x3FB;if _fdg .GBAtY [0]==0&&_fdg .GBAtX [0]>=-int8 (_fbc ){_ecca |=(_fdgg >>uint (7-(int8 (_fbc )+_fdg .GBAtX [0]))&0x1)<<2;}else {_ecca |=int (_fdg .getPixel (_dgf +int (_fdg .GBAtX [0]),_ggeg +int (_fdg .GBAtY [0])))<<2;
};return _ecca ;};func (_cgfd *GenericRegion )overrideAtTemplate1 (_bee ,_acfd ,_eag ,_cdg ,_fgfe int )int {_bee &=0x1FF7;if _cgfd .GBAtY [0]==0&&_cgfd .GBAtX [0]>=-int8 (_fgfe ){_bee |=(_cdg >>uint (7-(int8 (_fgfe )+_cgfd .GBAtX [0]))&0x1)<<3;}else {_bee |=int (_cgfd .getPixel (_acfd +int (_cgfd .GBAtX [0]),_eag +int (_cgfd .GBAtY [0])))<<3;
};return _bee ;};type EndOfStripe struct{_ba *_d .Reader ;_ag int ;};func (_eacc *SymbolDictionary )readRegionFlags ()error {var (_afd uint64 ;_dgfdb int ;);_ ,_eaef :=_eacc ._ccba .ReadBits (3);if _eaef !=nil {return _eaef ;};_dgfdb ,_eaef =_eacc ._ccba .ReadBit ();
if _eaef !=nil {return _eaef ;};_eacc .SdrTemplate =int8 (_dgfdb );_afd ,_eaef =_eacc ._ccba .ReadBits (2);if _eaef !=nil {return _eaef ;};_eacc .SdTemplate =int8 (_afd &0xf);_dgfdb ,_eaef =_eacc ._ccba .ReadBit ();if _eaef !=nil {return _eaef ;};if _dgfdb ==1{_eacc ._ggfgb =true ;
};_dgfdb ,_eaef =_eacc ._ccba .ReadBit ();if _eaef !=nil {return _eaef ;};if _dgfdb ==1{_eacc ._abea =true ;};_dgfdb ,_eaef =_eacc ._ccba .ReadBit ();if _eaef !=nil {return _eaef ;};if _dgfdb ==1{_eacc .SdHuffAggInstanceSelection =true ;};_dgfdb ,_eaef =_eacc ._ccba .ReadBit ();
if _eaef !=nil {return _eaef ;};_eacc .SdHuffBMSizeSelection =int8 (_dgfdb );_afd ,_eaef =_eacc ._ccba .ReadBits (2);if _eaef !=nil {return _eaef ;};_eacc .SdHuffDecodeWidthSelection =int8 (_afd &0xf);_afd ,_eaef =_eacc ._ccba .ReadBits (2);if _eaef !=nil {return _eaef ;
};_eacc .SdHuffDecodeHeightSelection =int8 (_afd &0xf);_dgfdb ,_eaef =_eacc ._ccba .ReadBit ();if _eaef !=nil {return _eaef ;};if _dgfdb ==1{_eacc .UseRefinementAggregation =true ;};_dgfdb ,_eaef =_eacc ._ccba .ReadBit ();if _eaef !=nil {return _eaef ;
};if _dgfdb ==1{_eacc .IsHuffmanEncoded =true ;};return nil ;};func (_adffe *TextRegion )encodeSymbols (_dcda _d .BinaryWriter )(_dgfba int ,_dgbf error ){const _efgg ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";_gfce :=make ([]byte ,4);
_gd .BigEndian .PutUint32 (_gfce ,_adffe .NumberOfSymbols );if _dgfba ,_dgbf =_dcda .Write (_gfce );_dgbf !=nil {return _dgfba ,_dd .Wrap (_dgbf ,_efgg ,"\u004e\u0075\u006dbe\u0072\u004f\u0066\u0053\u0079\u006d\u0062\u006f\u006c\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073");
};_gaegf ,_dgbf :=_bf .NewClassedPoints (_adffe ._aceg ,_adffe ._aceed );if _dgbf !=nil {return 0,_dd .Wrap (_dgbf ,_efgg ,"");};var _ebbcc ,_edgf int ;_fdaeg :=_fd .New ();_fdaeg .Init ();if _dgbf =_fdaeg .EncodeInteger (_fd .IADT ,0);_dgbf !=nil {return _dgfba ,_dd .Wrap (_dgbf ,_efgg ,"\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0020\u0044\u0054");
};_dfeb ,_dgbf :=_gaegf .GroupByY ();if _dgbf !=nil {return 0,_dd .Wrap (_dgbf ,_efgg ,"");};for _ ,_bgdg :=range _dfeb {_bacf :=int (_bgdg .YAtIndex (0));_dgag :=_bacf -_ebbcc ;if _dgbf =_fdaeg .EncodeInteger (_fd .IADT ,_dgag );_dgbf !=nil {return _dgfba ,_dd .Wrap (_dgbf ,_efgg ,"");
};var _cggaf int ;for _eafda ,_bbfgd :=range _bgdg .IntSlice {switch _eafda {case 0:_agbg :=int (_bgdg .XAtIndex (_eafda ))-_edgf ;if _dgbf =_fdaeg .EncodeInteger (_fd .IAFS ,_agbg );_dgbf !=nil {return _dgfba ,_dd .Wrap (_dgbf ,_efgg ,"");};_edgf +=_agbg ;
_cggaf =_edgf ;default:_fdaac :=int (_bgdg .XAtIndex (_eafda ))-_cggaf ;if _dgbf =_fdaeg .EncodeInteger (_fd .IADS ,_fdaac );_dgbf !=nil {return _dgfba ,_dd .Wrap (_dgbf ,_efgg ,"");};_cggaf +=_fdaac ;};_gagff ,_afef :=_adffe ._gbbe .Get (_bbfgd );if _afef !=nil {return _dgfba ,_dd .Wrap (_afef ,_efgg ,"");
};_acece ,_dgad :=_adffe ._fgaff [_gagff ];if !_dgad {_acece ,_dgad =_adffe ._gaca [_gagff ];if !_dgad {return _dgfba ,_dd .Errorf (_efgg ,"\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027\u0025d\u0027\u0020\u0069s\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064 \u0069\u006e\u0020\u0067\u006cob\u0061\u006c\u0020\u0061\u006e\u0064\u0020\u006c\u006f\u0063\u0061\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020\u006d\u0061\u0070",_gagff );
};};if _afef =_fdaeg .EncodeIAID (_adffe ._ecde ,_acece );_afef !=nil {return _dgfba ,_dd .Wrap (_afef ,_efgg ,"");};};if _dgbf =_fdaeg .EncodeOOB (_fd .IADS );_dgbf !=nil {return _dgfba ,_dd .Wrap (_dgbf ,_efgg ,"");};};_fdaeg .Final ();_begfb ,_dgbf :=_fdaeg .WriteTo (_dcda );
if _dgbf !=nil {return _dgfba ,_dd .Wrap (_dgbf ,_efgg ,"");};_dgfba +=int (_begfb );return _dgfba ,nil ;};func (_fbcc *SymbolDictionary )parseHeader ()(_cgce error ){_dc .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _cgce !=nil {_dc .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u0020\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u005b\u0050\u0041\u0052SE\u002d\u0048\u0045A\u0044\u0045R\u005d\u0020\u0066\u0061\u0069\u006ce\u0064\u002e \u0025\u0076",_cgce );
}else {_dc .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _cgce =_fbcc .readRegionFlags ();_cgce !=nil {return _cgce ;};if _cgce =_fbcc .setAtPixels ();_cgce !=nil {return _cgce ;};if _cgce =_fbcc .setRefinementAtPixels ();_cgce !=nil {return _cgce ;};if _cgce =_fbcc .readNumberOfExportedSymbols ();_cgce !=nil {return _cgce ;
};if _cgce =_fbcc .readNumberOfNewSymbols ();_cgce !=nil {return _cgce ;};if _cgce =_fbcc .setInSyms ();_cgce !=nil {return _cgce ;};if _fbcc ._abea {_eggdf :=_fbcc .Header .RTSegments ;for _ddfa :=len (_eggdf )-1;_ddfa >=0;_ddfa --{if _eggdf [_ddfa ].Type ==0{_gaba ,_gegad :=_eggdf [_ddfa ].SegmentData .(*SymbolDictionary );
if !_gegad {_cgce =_f .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074:\u0020\u0025\u0076\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020S\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_eggdf [_ddfa ]);
return _cgce ;};if _gaba ._abea {_fbcc .setRetainedCodingContexts (_gaba );};break ;};};};if _cgce =_fbcc .checkInput ();_cgce !=nil {return _cgce ;};return nil ;};func (_bac *Header )readHeaderFlags ()error {const _cdfb ="\u0072e\u0061d\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006c\u0061\u0067\u0073";
_afc ,_gba :=_bac .Reader .ReadBit ();if _gba !=nil {return _dd .Wrap (_gba ,_cdfb ,"r\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067");};if _afc !=0{_bac .RetainFlag =true ;};_afc ,_gba =_bac .Reader .ReadBit ();if _gba !=nil {return _dd .Wrap (_gba ,_cdfb ,"\u0070\u0061g\u0065\u0020\u0061s\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e");
};if _afc !=0{_bac .PageAssociationFieldSize =true ;};_cdb ,_gba :=_bac .Reader .ReadBits (6);if _gba !=nil {return _dd .Wrap (_gba ,_cdfb ,"\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065");};_bac .Type =Type (int (_cdb ));return nil ;
};func (_dfacc *PageInformationSegment )parseHeader ()(_afcd error ){_dc .Log .Trace ("\u005b\u0050\u0061\u0067\u0065I\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067m\u0065\u006e\u0074\u005d\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u002e\u002e");
defer func (){var _efga ="[\u0050\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072m\u0061\u0074\u0069\u006f\u006e\u0053\u0065gm\u0065\u006e\u0074\u005d \u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065ad\u0065\u0072 \u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064";
if _afcd !=nil {_efga +="\u0020\u0077\u0069t\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u0020"+_afcd .Error ();}else {_efga +="\u0020\u0073\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079";};_dc .Log .Trace (_efga );}();if _afcd =_dfacc .readWidthAndHeight ();
_afcd !=nil {return _afcd ;};if _afcd =_dfacc .readResolution ();_afcd !=nil {return _afcd ;};_ ,_afcd =_dfacc ._afa .ReadBit ();if _afcd !=nil {return _afcd ;};if _afcd =_dfacc .readCombinationOperatorOverrideAllowed ();_afcd !=nil {return _afcd ;};if _afcd =_dfacc .readRequiresAuxiliaryBuffer ();
_afcd !=nil {return _afcd ;};if _afcd =_dfacc .readCombinationOperator ();_afcd !=nil {return _afcd ;};if _afcd =_dfacc .readDefaultPixelValue ();_afcd !=nil {return _afcd ;};if _afcd =_dfacc .readContainsRefinement ();_afcd !=nil {return _afcd ;};if _afcd =_dfacc .readIsLossless ();
_afcd !=nil {return _afcd ;};if _afcd =_dfacc .readIsStriped ();_afcd !=nil {return _afcd ;};if _afcd =_dfacc .readMaxStripeSize ();_afcd !=nil {return _afcd ;};if _afcd =_dfacc .checkInput ();_afcd !=nil {return _afcd ;};_dc .Log .Trace ("\u0025\u0073",_dfacc );
return nil ;};func (_efdb *PageInformationSegment )String ()string {_eeeff :=&_bb .Builder {};_eeeff .WriteString ("\u000a\u005b\u0050\u0041G\u0045\u002d\u0049\u004e\u0046\u004f\u0052\u004d\u0041\u0054I\u004fN\u002d\u0053\u0045\u0047\u004d\u0045\u004eT\u005d\u000a");
_eeeff .WriteString (_f .Sprintf ("\u0009\u002d \u0042\u004d\u0048e\u0069\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u000a",_efdb .PageBMHeight ));_eeeff .WriteString (_f .Sprintf ("\u0009-\u0020B\u004d\u0057\u0069\u0064\u0074\u0068\u003a\u0020\u0025\u0064\u000a",_efdb .PageBMWidth ));
_eeeff .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0058\u003a\u0020\u0025\u0064\u000a",_efdb .ResolutionX ));_eeeff .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0059\u003a\u0020\u0025\u0064\u000a",_efdb .ResolutionY ));
_eeeff .WriteString (_f .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0073\u000a",_efdb ._ggeb ));_eeeff .WriteString (_f .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006eO\u0070\u0065\u0072\u0061\u0074\u006f\u0072O\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025v\u000a",_efdb ._cfab ));
_eeeff .WriteString (_f .Sprintf ("\u0009-\u0020I\u0073\u004c\u006f\u0073\u0073l\u0065\u0073s\u003a\u0020\u0025\u0076\u000a",_efdb .IsLossless ));_eeeff .WriteString (_f .Sprintf ("\u0009\u002d\u0020R\u0065\u0071\u0075\u0069r\u0065\u0073\u0041\u0075\u0078\u0069\u006ci\u0061\u0072\u0079\u0042\u0075\u0066\u0066\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_efdb ._cfbbf ));
_eeeff .WriteString (_f .Sprintf ("\u0009\u002d\u0020M\u0069\u0067\u0068\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0052e\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0076\u000a",_efdb ._eeee ));_eeeff .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0049\u0073\u0053\u0074\u0072\u0069\u0070\u0065\u0064:\u0020\u0025\u0076\u000a",_efdb .IsStripe ));
_eeeff .WriteString (_f .Sprintf ("\t\u002d\u0020\u004d\u0061xS\u0074r\u0069\u0070\u0065\u0053\u0069z\u0065\u003a\u0020\u0025\u0076\u000a",_efdb .MaxStripeSize ));return _eeeff .String ();};type PageInformationSegment struct{_afa *_d .Reader ;PageBMHeight int ;
PageBMWidth int ;ResolutionX int ;ResolutionY int ;_cfab bool ;_ggeb _bf .CombinationOperator ;_cfbbf bool ;DefaultPixelValue uint8 ;_eeee bool ;IsLossless bool ;IsStripe bool ;MaxStripeSize uint16 ;};func (_bgd *GenericRefinementRegion )decodeTypicalPredictedLineTemplate1 (_adb ,_cag ,_eaa ,_dde ,_egd ,_gfc ,_gbce ,_bba ,_ecf int )(_cac error ){var (_fege ,_ccb int ;
_cg ,_gde int ;_dag ,_efd int ;_bgbf byte ;);if _adb > 0{_bgbf ,_cac =_bgd .RegionBitmap .GetByte (_gbce -_eaa );if _cac !=nil {return ;};_cg =int (_bgbf );};if _bba > 0&&_bba <=_bgd .ReferenceBitmap .Height {_bgbf ,_cac =_bgd .ReferenceBitmap .GetByte (_ecf -_dde +_gfc );
if _cac !=nil {return ;};_gde =int (_bgbf )<<2;};if _bba >=0&&_bba < _bgd .ReferenceBitmap .Height {_bgbf ,_cac =_bgd .ReferenceBitmap .GetByte (_ecf +_gfc );if _cac !=nil {return ;};_dag =int (_bgbf );};if _bba > -2&&_bba < _bgd .ReferenceBitmap .Height -1{_bgbf ,_cac =_bgd .ReferenceBitmap .GetByte (_ecf +_dde +_gfc );
if _cac !=nil {return ;};_efd =int (_bgbf );};_fege =((_cg >>5)&0x6)|((_efd >>2)&0x30)|(_dag &0xc0)|(_gde &0x200);_ccb =((_efd >>2)&0x70)|(_dag &0xc0)|(_gde &0x700);var _edd int ;for _acc :=0;_acc < _egd ;_acc =_edd {var (_bfec int ;_egdg int ;);_edd =_acc +8;
if _bfec =_cag -_acc ;_bfec > 8{_bfec =8;};_bcag :=_edd < _cag ;_cfb :=_edd < _bgd .ReferenceBitmap .Width ;_fad :=_gfc +1;if _adb > 0{_bgbf =0;if _bcag {_bgbf ,_cac =_bgd .RegionBitmap .GetByte (_gbce -_eaa +1);if _cac !=nil {return ;};};_cg =(_cg <<8)|int (_bgbf );
};if _bba > 0&&_bba <=_bgd .ReferenceBitmap .Height {var _fca int ;if _cfb {_bgbf ,_cac =_bgd .ReferenceBitmap .GetByte (_ecf -_dde +_fad );if _cac !=nil {return ;};_fca =int (_bgbf )<<2;};_gde =(_gde <<8)|_fca ;};if _bba >=0&&_bba < _bgd .ReferenceBitmap .Height {_bgbf =0;
if _cfb {_bgbf ,_cac =_bgd .ReferenceBitmap .GetByte (_ecf +_fad );if _cac !=nil {return ;};};_dag =(_dag <<8)|int (_bgbf );};if _bba > -2&&_bba < (_bgd .ReferenceBitmap .Height -1){_bgbf =0;if _cfb {_bgbf ,_cac =_bgd .ReferenceBitmap .GetByte (_ecf +_dde +_fad );
if _cac !=nil {return ;};};_efd =(_efd <<8)|int (_bgbf );};for _ffg :=0;_ffg < _bfec ;_ffg ++{var _cae int ;_cfbb :=(_ccb >>4)&0x1ff;switch _cfbb {case 0x1ff:_cae =1;case 0x00:_cae =0;default:_bgd ._ed .SetIndex (int32 (_fege ));_cae ,_cac =_bgd ._gg .DecodeBit (_bgd ._ed );
if _cac !=nil {return ;};};_eafg :=uint (7-_ffg );_egdg |=_cae <<_eafg ;_fege =((_fege &0x0d6)<<1)|_cae |(_cg >>_eafg +5)&0x002|((_efd >>_eafg +2)&0x010)|((_dag >>_eafg )&0x040)|((_gde >>_eafg )&0x200);_ccb =((_ccb &0xdb)<<1)|((_efd >>_eafg +2)&0x010)|((_dag >>_eafg )&0x080)|((_gde >>_eafg )&0x400);
};_cac =_bgd .RegionBitmap .SetByte (_gbce ,byte (_egdg ));if _cac !=nil {return ;};_gbce ++;_ecf ++;};return nil ;};func (_fdge *PatternDictionary )readIsMMREncoded ()error {_bddg ,_eae :=_fdge ._fgbg .ReadBit ();if _eae !=nil {return _eae ;};if _bddg !=0{_fdge .IsMMREncoded =true ;
};return nil ;};func (_ffd *HalftoneRegion )computeSegmentDataStructure ()error {_ffd .DataOffset =_ffd ._ceed .AbsolutePosition ();_ffd .DataHeaderLength =_ffd .DataOffset -_ffd .DataHeaderOffset ;_ffd .DataLength =int64 (_ffd ._ceed .AbsoluteLength ())-_ffd .DataHeaderLength ;
return nil ;};type HalftoneRegion struct{_ceed *_d .Reader ;_bbae *Header ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;HDefaultPixel int8 ;CombinationOperator _bf .CombinationOperator ;
HSkipEnabled bool ;HTemplate byte ;IsMMREncoded bool ;HGridWidth uint32 ;HGridHeight uint32 ;HGridX int32 ;HGridY int32 ;HRegionX uint16 ;HRegionY uint16 ;HalftoneRegionBitmap *_bf .Bitmap ;Patterns []*_bf .Bitmap ;};func (_aeecd *SymbolDictionary )setCodingStatistics ()error {if _aeecd ._beag ==nil {_aeecd ._beag =_gdg .NewStats (512,1);
};if _aeecd ._ffdb ==nil {_aeecd ._ffdb =_gdg .NewStats (512,1);};if _aeecd ._dgfga ==nil {_aeecd ._dgfga =_gdg .NewStats (512,1);};if _aeecd ._faed ==nil {_aeecd ._faed =_gdg .NewStats (512,1);};if _aeecd ._baed ==nil {_aeecd ._baed =_gdg .NewStats (512,1);
};if _aeecd .UseRefinementAggregation &&_aeecd ._bfbb ==nil {_aeecd ._bfbb =_gdg .NewStats (1<<uint (_aeecd ._bdbae ),1);_aeecd ._ggec =_gdg .NewStats (512,1);_aeecd ._ecffa =_gdg .NewStats (512,1);};if _aeecd ._fcef ==nil {_aeecd ._fcef =_gdg .NewStats (65536,1);
};if _aeecd ._acd ==nil {var _adgdf error ;_aeecd ._acd ,_adgdf =_gdg .New (_aeecd ._ccba );if _adgdf !=nil {return _adgdf ;};};return nil ;};func (_bdef *PageInformationSegment )readIsLossless ()error {_gefa ,_ceedb :=_bdef ._afa .ReadBit ();if _ceedb !=nil {return _ceedb ;
};if _gefa ==1{_bdef .IsLossless =true ;};return nil ;};func (_gagg *Header )writeSegmentDataLength (_geec _d .BinaryWriter )(_fec int ,_cagf error ){_ccgf :=make ([]byte ,4);_gd .BigEndian .PutUint32 (_ccgf ,uint32 (_gagg .SegmentDataLength ));if _fec ,_cagf =_geec .Write (_ccgf );
_cagf !=nil {return 0,_dd .Wrap (_cagf ,"\u0048\u0065a\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u004c\u0065ng\u0074\u0068","");};return _fec ,nil ;};type Regioner interface{GetRegionBitmap ()(*_bf .Bitmap ,error );
GetRegionInfo ()*RegionSegment ;};func (_cddd *GenericRegion )copyLineAbove (_ffcb int )error {_dbee :=_ffcb *_cddd .Bitmap .RowStride ;_gae :=_dbee -_cddd .Bitmap .RowStride ;for _cbce :=0;_cbce < _cddd .Bitmap .RowStride ;_cbce ++{_agd ,_aeed :=_cddd .Bitmap .GetByte (_gae );
if _aeed !=nil {return _aeed ;};_gae ++;if _aeed =_cddd .Bitmap .SetByte (_dbee ,_agd );_aeed !=nil {return _aeed ;};_dbee ++;};return nil ;};func NewRegionSegment (r *_d .Reader )*RegionSegment {return &RegionSegment {_bbdb :r }};func (_bd *GenericRefinementRegion )Init (header *Header ,r *_d .Reader )error {_bd ._eaf =header ;
_bd ._aee =r ;_bd .RegionInfo =NewRegionSegment (r );return _bd .parseHeader ();};func (_bbe *Header )Encode (w _d .BinaryWriter )(_afbc int ,_bada error ){const _ecac ="\u0048\u0065\u0061d\u0065\u0072\u002e\u0057\u0072\u0069\u0074\u0065";var _dgfdd _d .BinaryWriter ;
_dc .Log .Trace ("\u005b\u0053\u0045G\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045\u0052\u005d[\u0045\u004e\u0043\u004f\u0044\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _bada !=nil {_dc .Log .Trace ("[\u0053\u0045\u0047\u004d\u0045\u004eT\u002d\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0045\u004e\u0043\u004f\u0044E\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020%\u0076",_bada );
}else {_dc .Log .Trace ("\u005b\u0053\u0045\u0047ME\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0025\u0076",_bbe );_dc .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045N\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u005b\u0045\u004e\u0043O\u0044\u0045\u005d\u0020\u0046\u0069\u006ei\u0073\u0068\u0065\u0064");
};}();w .FinishByte ();if _bbe .SegmentData !=nil {_bead ,_bed :=_bbe .SegmentData .(SegmentEncoder );if !_bed {return 0,_dd .Errorf (_ecac ,"\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0064\u006f\u0065s\u006e\u0027\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074 \u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0045\u006e\u0063\u006f\u0064er\u0020\u0069\u006e\u0074\u0065\u0072\u0066\u0061\u0063\u0065",_bbe .SegmentData );
};_dgfdd =_d .BufferedMSB ();_afbc ,_bada =_bead .Encode (_dgfdd );if _bada !=nil {return 0,_dd .Wrap (_bada ,_ecac ,"");};_bbe .SegmentDataLength =uint64 (_afbc );};if _bbe .pageSize ()==4{_bbe .PageAssociationFieldSize =true ;};var _gac int ;_gac ,_bada =_bbe .writeSegmentNumber (w );
if _bada !=nil {return 0,_dd .Wrap (_bada ,_ecac ,"");};_afbc +=_gac ;if _bada =_bbe .writeFlags (w );_bada !=nil {return _afbc ,_dd .Wrap (_bada ,_ecac ,"");};_afbc ++;_gac ,_bada =_bbe .writeReferredToCount (w );if _bada !=nil {return 0,_dd .Wrap (_bada ,_ecac ,"");
};_afbc +=_gac ;_gac ,_bada =_bbe .writeReferredToSegments (w );if _bada !=nil {return 0,_dd .Wrap (_bada ,_ecac ,"");};_afbc +=_gac ;_gac ,_bada =_bbe .writeSegmentPageAssociation (w );if _bada !=nil {return 0,_dd .Wrap (_bada ,_ecac ,"");};_afbc +=_gac ;
_gac ,_bada =_bbe .writeSegmentDataLength (w );if _bada !=nil {return 0,_dd .Wrap (_bada ,_ecac ,"");};_afbc +=_gac ;_bbe .HeaderLength =int64 (_afbc )-int64 (_bbe .SegmentDataLength );if _dgfdd !=nil {if _ ,_bada =w .Write (_dgfdd .Data ());_bada !=nil {return _afbc ,_dd .Wrap (_bada ,_ecac ,"\u0077r\u0069t\u0065\u0020\u0073\u0065\u0067m\u0065\u006et\u0020\u0064\u0061\u0074\u0061");
};};return _afbc ,nil ;};const (ORandom OrganizationType =iota ;OSequential ;);func (_edgd *SymbolDictionary )decodeRefinedSymbol (_bbda ,_bgcc uint32 )error {var (_bded int ;_faf ,_ffgc int32 ;);if _edgd .IsHuffmanEncoded {_ddc ,_fdfdf :=_edgd ._ccba .ReadBits (byte (_edgd ._bdbae ));
if _fdfdf !=nil {return _fdfdf ;};_bded =int (_ddc );_fff ,_fdfdf :=_ae .GetStandardTable (15);if _fdfdf !=nil {return _fdfdf ;};_dcbcb ,_fdfdf :=_fff .Decode (_edgd ._ccba );if _fdfdf !=nil {return _fdfdf ;};_faf =int32 (_dcbcb );_dcbcb ,_fdfdf =_fff .Decode (_edgd ._ccba );
if _fdfdf !=nil {return _fdfdf ;};_ffgc =int32 (_dcbcb );_fff ,_fdfdf =_ae .GetStandardTable (1);if _fdfdf !=nil {return _fdfdf ;};if _ ,_fdfdf =_fff .Decode (_edgd ._ccba );_fdfdf !=nil {return _fdfdf ;};_edgd ._ccba .Align ();}else {_eefdb ,_fbce :=_edgd ._acd .DecodeIAID (uint64 (_edgd ._bdbae ),_edgd ._bfbb );
if _fbce !=nil {return _fbce ;};_bded =int (_eefdb );_faf ,_fbce =_edgd ._acd .DecodeInt (_edgd ._ggec );if _fbce !=nil {return _fbce ;};_ffgc ,_fbce =_edgd ._acd .DecodeInt (_edgd ._ecffa );if _fbce !=nil {return _fbce ;};};if _fbee :=_edgd .setSymbolsArray ();
_fbee !=nil {return _fbee ;};_adgbd :=_edgd ._agfa [_bded ];if _bbba :=_edgd .decodeNewSymbols (_bbda ,_bgcc ,_adgbd ,_faf ,_ffgc );_bbba !=nil {return _bbba ;};if _edgd .IsHuffmanEncoded {_edgd ._ccba .Align ();};return nil ;};func (_ecag *SymbolDictionary )getSbSymCodeLen ()int8 {_ebbc :=int8 (_c .Ceil (_c .Log (float64 (_ecag ._gdeaa +_ecag .NumberOfNewSymbols ))/_c .Log (2)));
if _ecag .IsHuffmanEncoded &&_ebbc < 1{return 1;};return _ebbc ;};func (_faab *GenericRefinementRegion )getPixel (_gbcd *_bf .Bitmap ,_cfgd ,_gbcdf int )int {if _cfgd < 0||_cfgd >=_gbcd .Width {return 0;};if _gbcdf < 0||_gbcdf >=_gbcd .Height {return 0;
};if _gbcd .GetPixel (_cfgd ,_gbcdf ){return 1;};return 0;};func (_cgc *GenericRegion )readGBAtPixels (_eggb int )error {const _adff ="\u0072\u0065\u0061\u0064\u0047\u0042\u0041\u0074\u0050i\u0078\u0065\u006c\u0073";_cgc .GBAtX =make ([]int8 ,_eggb );_cgc .GBAtY =make ([]int8 ,_eggb );
for _daca :=0;_daca < _eggb ;_daca ++{_daeb ,_bafa :=_cgc ._dcg .ReadByte ();if _bafa !=nil {return _dd .Wrapf (_bafa ,_adff ,"\u0058\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_daca );};_cgc .GBAtX [_daca ]=int8 (_daeb );_daeb ,_bafa =_cgc ._dcg .ReadByte ();
if _bafa !=nil {return _dd .Wrapf (_bafa ,_adff ,"\u0059\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_daca );};_cgc .GBAtY [_daca ]=int8 (_daeb );};return nil ;};func (_caga *GenericRefinementRegion )String ()string {_cea :=&_bb .Builder {};
_cea .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_cea .WriteString (_caga .RegionInfo .String ()+"\u000a");_cea .WriteString (_f .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0052\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_caga .IsTPGROn ));
_cea .WriteString (_f .Sprintf ("\u0009-\u0020T\u0065\u006d\u0070\u006c\u0061t\u0065\u0049D\u003a\u0020\u0025\u0076\u000a",_caga .TemplateID ));_cea .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_caga .GrAtX ));
_cea .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_caga .GrAtY ));_cea .WriteString (_f .Sprintf ("\u0009-\u0020R\u0065\u0066\u0065\u0072\u0065n\u0063\u0065D\u0058\u0020\u0025\u0076\u000a",_caga .ReferenceDX ));
_cea .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0052ef\u0065\u0072\u0065\u006e\u0063\u0044\u0065\u0059\u003a\u0020\u0025\u0076\u000a",_caga .ReferenceDY ));return _cea .String ();};func (_fag *GenericRefinementRegion )getGrReference ()(*_bf .Bitmap ,error ){segments :=_fag ._eaf .RTSegments ;
if len (segments )==0{return nil ,_be .New ("\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0065\u0078is\u0074\u0073");};_cf ,_gf :=segments [0].GetSegmentData ();if _gf !=nil {return nil ,_gf ;
};_gdf ,_cdd :=_cf .(Regioner );if !_cdd {return nil ,_f .Errorf ("\u0072\u0065\u0066\u0065\u0072r\u0065\u0064\u0020\u0074\u006f\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_cf );
};return _gdf .GetRegionBitmap ();};func (_fbefe *TextRegion )setParameters (_gceg *_gdg .Decoder ,_fcbfd ,_ecea bool ,_addg ,_fcfdd uint32 ,_agfe uint32 ,_gaa int8 ,_egfe uint32 ,_ababe int8 ,_dgceb _bf .CombinationOperator ,_degg int8 ,_dded int16 ,_fed ,_adcgb ,_bfedf ,_gbbefa ,_cgbc ,_ffad ,_beda ,_bbdbf ,_faffd ,_egfc int8 ,_dacaf ,_dfgf []int8 ,_dccae []*_bf .Bitmap ,_bdbf int8 ){_fbefe ._geeg =_gceg ;
_fbefe .IsHuffmanEncoded =_fcbfd ;_fbefe .UseRefinement =_ecea ;_fbefe .RegionInfo .BitmapWidth =_addg ;_fbefe .RegionInfo .BitmapHeight =_fcfdd ;_fbefe .NumberOfSymbolInstances =_agfe ;_fbefe .SbStrips =_gaa ;_fbefe .NumberOfSymbols =_egfe ;_fbefe .DefaultPixel =_ababe ;
_fbefe .CombinationOperator =_dgceb ;_fbefe .IsTransposed =_degg ;_fbefe .ReferenceCorner =_dded ;_fbefe .SbDsOffset =_fed ;_fbefe .SbHuffFS =_adcgb ;_fbefe .SbHuffDS =_bfedf ;_fbefe .SbHuffDT =_gbbefa ;_fbefe .SbHuffRDWidth =_cgbc ;_fbefe .SbHuffRDHeight =_ffad ;
_fbefe .SbHuffRSize =_faffd ;_fbefe .SbHuffRDX =_beda ;_fbefe .SbHuffRDY =_bbdbf ;_fbefe .SbrTemplate =_egfc ;_fbefe .SbrATX =_dacaf ;_fbefe .SbrATY =_dfgf ;_fbefe .Symbols =_dccae ;_fbefe ._fgd =_bdbf ;};func (_eada *template1 )form (_fadf ,_cdfg ,_eda ,_ddd ,_ggaa int16 )int16 {return ((_fadf &0x02)<<8)|(_cdfg <<6)|((_eda &0x03)<<4)|(_ddd <<1)|_ggaa ;
};func (_cgdd *GenericRegion )decodeTemplate0a (_fcge ,_fdef ,_fbf int ,_cba ,_fagee int )(_egae error ){const _cgda ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0061";var (_adc ,_fba int ;_cee ,_acb int ;_ddbe byte ;
_edce int ;);if _fcge >=1{_ddbe ,_egae =_cgdd .Bitmap .GetByte (_fagee );if _egae !=nil {return _dd .Wrap (_egae ,_cgda ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_cee =int (_ddbe );};if _fcge >=2{_ddbe ,_egae =_cgdd .Bitmap .GetByte (_fagee -_cgdd .Bitmap .RowStride );
if _egae !=nil {return _dd .Wrap (_egae ,_cgda ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_acb =int (_ddbe )<<6;};_adc =(_cee &0xf0)|(_acb &0x3800);for _dgc :=0;_dgc < _fbf ;_dgc =_edce {var (_cdff byte ;_adce int ;);_edce =_dgc +8;if _gec :=_fdef -_dgc ;
_gec > 8{_adce =8;}else {_adce =_gec ;};if _fcge > 0{_cee <<=8;if _edce < _fdef {_ddbe ,_egae =_cgdd .Bitmap .GetByte (_fagee +1);if _egae !=nil {return _dd .Wrap (_egae ,_cgda ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_cee |=int (_ddbe );
};};if _fcge > 1{_dfb :=_fagee -_cgdd .Bitmap .RowStride +1;_acb <<=8;if _edce < _fdef {_ddbe ,_egae =_cgdd .Bitmap .GetByte (_dfb );if _egae !=nil {return _dd .Wrap (_egae ,_cgda ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_acb |=int (_ddbe )<<6;
}else {_acb |=0;};};for _decd :=0;_decd < _adce ;_decd ++{_abe :=uint (7-_decd );if _cgdd ._ceab {_fba =_cgdd .overrideAtTemplate0a (_adc ,_dgc +_decd ,_fcge ,int (_cdff ),_decd ,int (_abe ));_cgdd ._add .SetIndex (int32 (_fba ));}else {_cgdd ._add .SetIndex (int32 (_adc ));
};var _gcg int ;_gcg ,_egae =_cgdd ._cgf .DecodeBit (_cgdd ._add );if _egae !=nil {return _dd .Wrap (_egae ,_cgda ,"");};_cdff |=byte (_gcg )<<_abe ;_adc =((_adc &0x7bf7)<<1)|_gcg |((_cee >>_abe )&0x10)|((_acb >>_abe )&0x800);};if _ged :=_cgdd .Bitmap .SetByte (_cba ,_cdff );
_ged !=nil {return _dd .Wrap (_ged ,_cgda ,"");};_cba ++;_fagee ++;};return nil ;};func (_cgfc *TextRegion )decodeCurrentT ()(int64 ,error ){if _cgfc .SbStrips !=1{if _cgfc .IsHuffmanEncoded {_cfag ,_ggebg :=_cgfc ._gebc .ReadBits (byte (_cgfc .LogSBStrips ));
return int64 (_cfag ),_ggebg ;};_afcdd ,_egcgf :=_cgfc ._geeg .DecodeInt (_cgfc ._fffc );if _egcgf !=nil {return 0,_egcgf ;};return int64 (_afcdd ),nil ;};return 0,nil ;};func (_acaf *GenericRefinementRegion )overrideAtTemplate0 (_bdf ,_def ,_adgb ,_dfa ,_bff int )int {if _acaf ._ac [0]{_bdf &=0xfff7;
if _acaf .GrAtY [0]==0&&int (_acaf .GrAtX [0])>=-_bff {_bdf |=(_dfa >>uint (7-(_bff +int (_acaf .GrAtX [0])))&0x1)<<3;}else {_bdf |=_acaf .getPixel (_acaf .RegionBitmap ,_def +int (_acaf .GrAtX [0]),_adgb +int (_acaf .GrAtY [0]))<<3;};};if _acaf ._ac [1]{_bdf &=0xefff;
if _acaf .GrAtY [1]==0&&int (_acaf .GrAtX [1])>=-_bff {_bdf |=(_dfa >>uint (7-(_bff +int (_acaf .GrAtX [1])))&0x1)<<12;}else {_bdf |=_acaf .getPixel (_acaf .ReferenceBitmap ,_def +int (_acaf .GrAtX [1]),_adgb +int (_acaf .GrAtY [1]));};};return _bdf ;};
func (_ffae *SymbolDictionary )setRefinementAtPixels ()error {if !_ffae .UseRefinementAggregation ||_ffae .SdrTemplate !=0{return nil ;};if _bdefe :=_ffae .readRefinementAtPixels (2);_bdefe !=nil {return _bdefe ;};return nil ;};func (_ddfce *TextRegion )decodeDfs ()(int64 ,error ){if _ddfce .IsHuffmanEncoded {if _ddfce .SbHuffFS ==3{if _ddfce ._cefc ==nil {var _ccgca error ;
_ddfce ._cefc ,_ccgca =_ddfce .getUserTable (0);if _ccgca !=nil {return 0,_ccgca ;};};return _ddfce ._cefc .Decode (_ddfce ._gebc );};_cfdaa ,_gabb :=_ae .GetStandardTable (6+int (_ddfce .SbHuffFS ));if _gabb !=nil {return 0,_gabb ;};return _cfdaa .Decode (_ddfce ._gebc );
};_bddgg ,_begd :=_ddfce ._geeg .DecodeInt (_ddfce ._efce );if _begd !=nil {return 0,_begd ;};return int64 (_bddgg ),nil ;};func (_ebdac *TextRegion )symbolIDCodeLengths ()error {var (_gccc []*_ae .Code ;_bbbae uint64 ;_aeaf _ae .Tabler ;_fccg error ;);
for _egbf :=0;_egbf < 35;_egbf ++{_bbbae ,_fccg =_ebdac ._gebc .ReadBits (4);if _fccg !=nil {return _fccg ;};_agad :=int (_bbbae &0xf);if _agad > 0{_gccc =append (_gccc ,_ae .NewCode (int32 (_agad ),0,int32 (_egbf ),false ));};};_aeaf ,_fccg =_ae .NewFixedSizeTable (_gccc );
if _fccg !=nil {return _fccg ;};var (_afbdf int64 ;_gdgb uint32 ;_ebfd []*_ae .Code ;_bgbd int64 ;);for _gdgb < _ebdac .NumberOfSymbols {_bgbd ,_fccg =_aeaf .Decode (_ebdac ._gebc );if _fccg !=nil {return _fccg ;};if _bgbd < 32{if _bgbd > 0{_ebfd =append (_ebfd ,_ae .NewCode (int32 (_bgbd ),0,int32 (_gdgb ),false ));
};_afbdf =_bgbd ;_gdgb ++;}else {var _fgfed ,_gaag int64 ;switch _bgbd {case 32:_bbbae ,_fccg =_ebdac ._gebc .ReadBits (2);if _fccg !=nil {return _fccg ;};_fgfed =3+int64 (_bbbae );if _gdgb > 0{_gaag =_afbdf ;};case 33:_bbbae ,_fccg =_ebdac ._gebc .ReadBits (3);
if _fccg !=nil {return _fccg ;};_fgfed =3+int64 (_bbbae );case 34:_bbbae ,_fccg =_ebdac ._gebc .ReadBits (7);if _fccg !=nil {return _fccg ;};_fgfed =11+int64 (_bbbae );};for _dcaac :=0;_dcaac < int (_fgfed );_dcaac ++{if _gaag > 0{_ebfd =append (_ebfd ,_ae .NewCode (int32 (_gaag ),0,int32 (_gdgb ),false ));
};_gdgb ++;};};};_ebdac ._gebc .Align ();_ebdac ._accb ,_fccg =_ae .NewFixedSizeTable (_ebfd );return _fccg ;};func (_bgg *GenericRegion )computeSegmentDataStructure ()error {_bgg .DataOffset =_bgg ._dcg .AbsolutePosition ();_bgg .DataHeaderLength =_bgg .DataOffset -_bgg .DataHeaderOffset ;
_bgg .DataLength =int64 (_bgg ._dcg .AbsoluteLength ())-_bgg .DataHeaderLength ;return nil ;};func (_cfbbg *HalftoneRegion )Init (hd *Header ,r *_d .Reader )error {_cfbbg ._ceed =r ;_cfbbg ._bbae =hd ;_cfbbg .RegionSegment =NewRegionSegment (r );return _cfbbg .parseHeader ();
};func (_bdc *GenericRegion )String ()string {_aeg :=&_bb .Builder {};_aeg .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_aeg .WriteString (_bdc .RegionSegment .String ()+"\u000a");_aeg .WriteString (_f .Sprintf ("\u0009\u002d\u0020Us\u0065\u0045\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_bdc .UseExtTemplates ));
_aeg .WriteString (_f .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0044\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_bdc .IsTPGDon ));_aeg .WriteString (_f .Sprintf ("\u0009-\u0020G\u0042\u0054\u0065\u006d\u0070l\u0061\u0074e\u003a\u0020\u0025\u0064\u000a",_bdc .GBTemplate ));
_aeg .WriteString (_f .Sprintf ("\t\u002d \u0049\u0073\u004d\u004d\u0052\u0045\u006e\u0063o\u0064\u0065\u0064\u003a %\u0076\u000a",_bdc .IsMMREncoded ));_aeg .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_bdc .GBAtX ));
_aeg .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_bdc .GBAtY ));_aeg .WriteString (_f .Sprintf ("\t\u002d \u0047\u0042\u0041\u0074\u004f\u0076\u0065\u0072r\u0069\u0064\u0065\u003a %\u0076\u000a",_bdc .GBAtOverride ));
return _aeg .String ();};func (_ffaf *SymbolDictionary )decodeDirectlyThroughGenericRegion (_cdddd ,_bbfg uint32 )error {if _ffaf ._dfbd ==nil {_ffaf ._dfbd =NewGenericRegion (_ffaf ._ccba );};_ffaf ._dfbd .setParametersWithAt (false ,byte (_ffaf .SdTemplate ),false ,false ,_ffaf .SdATX ,_ffaf .SdATY ,_cdddd ,_bbfg ,_ffaf ._fcef ,_ffaf ._acd );
return _ffaf .addSymbol (_ffaf ._dfbd );};var _ templater =&template1 {};func (_fdae *PageInformationSegment )encodeFlags (_bedca _d .BinaryWriter )(_gagf error ){const _eafe ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _gagf =_bedca .SkipBits (1);
_gagf !=nil {return _dd .Wrap (_gagf ,_eafe ,"\u0072\u0065\u0073e\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074");};var _adfgc int ;if _fdae .CombinationOperatorOverrideAllowed (){_adfgc =1;};if _gagf =_bedca .WriteBit (_adfgc );_gagf !=nil {return _dd .Wrap (_gagf ,_eafe ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0064\u0065\u006e");
};_adfgc =0;if _fdae ._cfbbf {_adfgc =1;};if _gagf =_bedca .WriteBit (_adfgc );_gagf !=nil {return _dd .Wrap (_gagf ,_eafe ,"\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0061\u0075\u0078i\u006ci\u0061r\u0079\u0020\u0062\u0075\u0066\u0066\u0065r");};if _gagf =_bedca .WriteBit ((int (_fdae ._ggeb )>>1)&0x01);
_gagf !=nil {return _dd .Wrap (_gagf ,_eafe ,"\u0063\u006f\u006d\u0062\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006f\u0070\u0065\u0072\u0061\u0074o\u0072\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0062\u0069\u0074");};if _gagf =_bedca .WriteBit (int (_fdae ._ggeb )&0x01);
_gagf !=nil {return _dd .Wrap (_gagf ,_eafe ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0062\u0069\u0074");};_adfgc =int (_fdae .DefaultPixelValue );
if _gagf =_bedca .WriteBit (_adfgc );_gagf !=nil {return _dd .Wrap (_gagf ,_eafe ,"\u0064e\u0066\u0061\u0075\u006c\u0074\u0020\u0070\u0061\u0067\u0065\u0020p\u0069\u0078\u0065\u006c\u0020\u0076\u0061\u006c\u0075\u0065");};_adfgc =0;if _fdae ._eeee {_adfgc =1;
};if _gagf =_bedca .WriteBit (_adfgc );_gagf !=nil {return _dd .Wrap (_gagf ,_eafe ,"\u0063\u006f\u006e\u0074ai\u006e\u0073\u0020\u0072\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074");};_adfgc =0;if _fdae .IsLossless {_adfgc =1;};if _gagf =_bedca .WriteBit (_adfgc );
_gagf !=nil {return _dd .Wrap (_gagf ,_eafe ,"p\u0061\u0067\u0065\u0020\u0069\u0073 \u0065\u0076\u0065\u006e\u0074\u0075\u0061\u006c\u006cy\u0020\u006c\u006fs\u0073l\u0065\u0073\u0073");};return nil ;};func (_gaee *TextRegion )decodeRdy ()(int64 ,error ){const _cdgc ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064y";
if _gaee .IsHuffmanEncoded {if _gaee .SbHuffRDY ==3{if _gaee ._efed ==nil {var (_ebaeb int ;_abdfd error ;);if _gaee .SbHuffFS ==3{_ebaeb ++;};if _gaee .SbHuffDS ==3{_ebaeb ++;};if _gaee .SbHuffDT ==3{_ebaeb ++;};if _gaee .SbHuffRDWidth ==3{_ebaeb ++;};
if _gaee .SbHuffRDHeight ==3{_ebaeb ++;};if _gaee .SbHuffRDX ==3{_ebaeb ++;};_gaee ._efed ,_abdfd =_gaee .getUserTable (_ebaeb );if _abdfd !=nil {return 0,_dd .Wrap (_abdfd ,_cdgc ,"");};};return _gaee ._efed .Decode (_gaee ._gebc );};_dgcb ,_cdgfd :=_ae .GetStandardTable (14+int (_gaee .SbHuffRDY ));
if _cdgfd !=nil {return 0,_cdgfd ;};return _dgcb .Decode (_gaee ._gebc );};_gbdf ,_begdc :=_gaee ._geeg .DecodeInt (_gaee ._cbggb );if _begdc !=nil {return 0,_dd .Wrap (_begdc ,_cdgc ,"");};return int64 (_gbdf ),nil ;};func (_fae *GenericRefinementRegion )decodeTypicalPredictedLineTemplate0 (_faef ,_gge ,_dcb ,_efc ,_fdb ,_bgb ,_ffe ,_cfea ,_cda int )error {var (_ddb ,_ccd ,_dda ,_dg ,_eb ,_dbe int ;
_bcf byte ;_caf error ;);if _faef > 0{_bcf ,_caf =_fae .RegionBitmap .GetByte (_ffe -_dcb );if _caf !=nil {return _caf ;};_dda =int (_bcf );};if _cfea > 0&&_cfea <=_fae .ReferenceBitmap .Height {_bcf ,_caf =_fae .ReferenceBitmap .GetByte (_cda -_efc +_bgb );
if _caf !=nil {return _caf ;};_dg =int (_bcf )<<4;};if _cfea >=0&&_cfea < _fae .ReferenceBitmap .Height {_bcf ,_caf =_fae .ReferenceBitmap .GetByte (_cda +_bgb );if _caf !=nil {return _caf ;};_eb =int (_bcf )<<1;};if _cfea > -2&&_cfea < _fae .ReferenceBitmap .Height -1{_bcf ,_caf =_fae .ReferenceBitmap .GetByte (_cda +_efc +_bgb );
if _caf !=nil {return _caf ;};_dbe =int (_bcf );};_ddb =((_dda >>5)&0x6)|((_dbe >>2)&0x30)|(_eb &0x180)|(_dg &0xc00);var _ddaf int ;for _fda :=0;_fda < _fdb ;_fda =_ddaf {var _eg int ;_ddaf =_fda +8;var _fgf int ;if _fgf =_gge -_fda ;_fgf > 8{_fgf =8;};
_egb :=_ddaf < _gge ;_af :=_ddaf < _fae .ReferenceBitmap .Width ;_ede :=_bgb +1;if _faef > 0{_bcf =0;if _egb {_bcf ,_caf =_fae .RegionBitmap .GetByte (_ffe -_dcb +1);if _caf !=nil {return _caf ;};};_dda =(_dda <<8)|int (_bcf );};if _cfea > 0&&_cfea <=_fae .ReferenceBitmap .Height {var _faaa int ;
if _af {_bcf ,_caf =_fae .ReferenceBitmap .GetByte (_cda -_efc +_ede );if _caf !=nil {return _caf ;};_faaa =int (_bcf )<<4;};_dg =(_dg <<8)|_faaa ;};if _cfea >=0&&_cfea < _fae .ReferenceBitmap .Height {var _feg int ;if _af {_bcf ,_caf =_fae .ReferenceBitmap .GetByte (_cda +_ede );
if _caf !=nil {return _caf ;};_feg =int (_bcf )<<1;};_eb =(_eb <<8)|_feg ;};if _cfea > -2&&_cfea < (_fae .ReferenceBitmap .Height -1){_bcf =0;if _af {_bcf ,_caf =_fae .ReferenceBitmap .GetByte (_cda +_efc +_ede );if _caf !=nil {return _caf ;};};_dbe =(_dbe <<8)|int (_bcf );
};for _cdf :=0;_cdf < _fgf ;_cdf ++{var _ecc int ;_cfg :=false ;_cce :=(_ddb >>4)&0x1ff;if _cce ==0x1ff{_cfg =true ;_ecc =1;}else if _cce ==0x00{_cfg =true ;};if !_cfg {if _fae ._fa {_ccd =_fae .overrideAtTemplate0 (_ddb ,_fda +_cdf ,_faef ,_eg ,_cdf );
_fae ._ed .SetIndex (int32 (_ccd ));}else {_fae ._ed .SetIndex (int32 (_ddb ));};_ecc ,_caf =_fae ._gg .DecodeBit (_fae ._ed );if _caf !=nil {return _caf ;};};_ecg :=uint (7-_cdf );_eg |=_ecc <<_ecg ;_ddb =((_ddb &0xdb6)<<1)|_ecc |(_dda >>_ecg +5)&0x002|((_dbe >>_ecg +2)&0x010)|((_eb >>_ecg )&0x080)|((_dg >>_ecg )&0x400);
};_caf =_fae .RegionBitmap .SetByte (_ffe ,byte (_eg ));if _caf !=nil {return _caf ;};_ffe ++;_cda ++;};return nil ;};func (_agba *TextRegion )GetRegionInfo ()*RegionSegment {return _agba .RegionInfo };func (_eccga *TableSegment )HtHigh ()int32 {return _eccga ._faba };
func (_gbff *TextRegion )decodeStripT ()(_eedcd int64 ,_dbba error ){if _gbff .IsHuffmanEncoded {if _gbff .SbHuffDT ==3{if _gbff ._bfgc ==nil {var _gfff int ;if _gbff .SbHuffFS ==3{_gfff ++;};if _gbff .SbHuffDS ==3{_gfff ++;};_gbff ._bfgc ,_dbba =_gbff .getUserTable (_gfff );
if _dbba !=nil {return 0,_dbba ;};};_eedcd ,_dbba =_gbff ._bfgc .Decode (_gbff ._gebc );if _dbba !=nil {return 0,_dbba ;};}else {var _dcce _ae .Tabler ;_dcce ,_dbba =_ae .GetStandardTable (11+int (_gbff .SbHuffDT ));if _dbba !=nil {return 0,_dbba ;};_eedcd ,_dbba =_dcce .Decode (_gbff ._gebc );
if _dbba !=nil {return 0,_dbba ;};};}else {var _ecbc int32 ;_ecbc ,_dbba =_gbff ._geeg .DecodeInt (_gbff ._fcce );if _dbba !=nil {return 0,_dbba ;};_eedcd =int64 (_ecbc );};_eedcd *=int64 (-_gbff .SbStrips );return _eedcd ,nil ;};type GenericRefinementRegion struct{_fe templater ;
_bfd templater ;_aee *_d .Reader ;_eaf *Header ;RegionInfo *RegionSegment ;IsTPGROn bool ;TemplateID int8 ;Template templater ;GrAtX []int8 ;GrAtY []int8 ;RegionBitmap *_bf .Bitmap ;ReferenceBitmap *_bf .Bitmap ;ReferenceDX int32 ;ReferenceDY int32 ;_gg *_gdg .Decoder ;
_ed *_gdg .DecoderStats ;_fa bool ;_ac []bool ;};func (_ea *EndOfStripe )LineNumber ()int {return _ea ._ag };func (_gdae *TableSegment )Init (h *Header ,r *_d .Reader )error {_gdae ._fgeeg =r ;return _gdae .parseHeader ();};type Segmenter interface{Init (_ggdf *Header ,_bbbb *_d .Reader )error ;
};func (_cbca *SymbolDictionary )encodeATFlags (_fbaf _d .BinaryWriter )(_gabf int ,_bfgb error ){const _bdce ="\u0065\u006e\u0063\u006f\u0064\u0065\u0041\u0054\u0046\u006c\u0061\u0067\u0073";if _cbca .IsHuffmanEncoded ||_cbca .SdTemplate !=0{return 0,nil ;
};_agdd :=4;if _cbca .SdTemplate !=0{_agdd =1;};for _bdfd :=0;_bdfd < _agdd ;_bdfd ++{if _bfgb =_fbaf .WriteByte (byte (_cbca .SdATX [_bdfd ]));_bfgb !=nil {return _gabf ,_dd .Wrapf (_bfgb ,_bdce ,"\u0053d\u0041\u0054\u0058\u005b\u0025\u0064]",_bdfd );
};_gabf ++;if _bfgb =_fbaf .WriteByte (byte (_cbca .SdATY [_bdfd ]));_bfgb !=nil {return _gabf ,_dd .Wrapf (_bfgb ,_bdce ,"\u0053d\u0041\u0054\u0059\u005b\u0025\u0064]",_bdfd );};_gabf ++;};return _gabf ,nil ;};func (_abd *Header )writeReferredToSegments (_eadfa _d .BinaryWriter )(_aeae int ,_ggfg error ){const _fea ="\u0077\u0072\u0069te\u0052\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
var (_cecf uint16 ;_bcfa uint32 ;);_ecae :=_abd .referenceSize ();_badbd :=1;_dgg :=make ([]byte ,_ecae );for _ ,_ebddf :=range _abd .RTSNumbers {switch _ecae {case 4:_bcfa =uint32 (_ebddf );_gd .BigEndian .PutUint32 (_dgg ,_bcfa );_badbd ,_ggfg =_eadfa .Write (_dgg );
if _ggfg !=nil {return 0,_dd .Wrap (_ggfg ,_fea ,"u\u0069\u006e\u0074\u0033\u0032\u0020\u0073\u0069\u007a\u0065");};case 2:_cecf =uint16 (_ebddf );_gd .BigEndian .PutUint16 (_dgg ,_cecf );_badbd ,_ggfg =_eadfa .Write (_dgg );if _ggfg !=nil {return 0,_dd .Wrap (_ggfg ,_fea ,"\u0075\u0069\u006e\u0074\u0031\u0036");
};default:if _ggfg =_eadfa .WriteByte (byte (_ebddf ));_ggfg !=nil {return 0,_dd .Wrap (_ggfg ,_fea ,"\u0075\u0069\u006et\u0038");};};_aeae +=_badbd ;};return _aeae ,nil ;};func (_dafg *GenericRegion )overrideAtTemplate3 (_bdca ,_dagf ,_gcf ,_bffc ,_fcgd int )int {_bdca &=0x3EF;
if _dafg .GBAtY [0]==0&&_dafg .GBAtX [0]>=-int8 (_fcgd ){_bdca |=(_bffc >>uint (7-(int8 (_fcgd )+_dafg .GBAtX [0]))&0x1)<<4;}else {_bdca |=int (_dafg .getPixel (_dagf +int (_dafg .GBAtX [0]),_gcf +int (_dafg .GBAtY [0])))<<4;};return _bdca ;};func (_dafd *Header )writeSegmentNumber (_dfcd _d .BinaryWriter )(_geb int ,_efac error ){_eeef :=make ([]byte ,4);
_gd .BigEndian .PutUint32 (_eeef ,_dafd .SegmentNumber );if _geb ,_efac =_dfcd .Write (_eeef );_efac !=nil {return 0,_dd .Wrap (_efac ,"\u0048e\u0061\u0064\u0065\u0072.\u0077\u0072\u0069\u0074\u0065S\u0065g\u006de\u006e\u0074\u004e\u0075\u006d\u0062\u0065r","");
};return _geb ,nil ;};type GenericRegion struct{_dcg *_d .Reader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;UseExtTemplates bool ;IsTPGDon bool ;GBTemplate byte ;IsMMREncoded bool ;
UseMMR bool ;GBAtX []int8 ;GBAtY []int8 ;GBAtOverride []bool ;_ceab bool ;Bitmap *_bf .Bitmap ;_cgf *_gdg .Decoder ;_add *_gdg .DecoderStats ;_cfa *_dac .Decoder ;};var _ SegmentEncoder =&RegionSegment {};func (_acac *PageInformationSegment )checkInput ()error {if _acac .PageBMHeight ==_c .MaxInt32 {if !_acac .IsStripe {_dc .Log .Debug ("P\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0053\u0065\u0067me\u006e\u0074\u002e\u0049s\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0073\u0068ou\u006c\u0064 \u0062\u0065\u0020\u0074\u0072\u0075\u0065\u002e");
};};return nil ;};func (_geeb *PageInformationSegment )readContainsRefinement ()error {_ebdg ,_bdd :=_geeb ._afa .ReadBit ();if _bdd !=nil {return _bdd ;};if _ebdg ==1{_geeb ._eeee =true ;};return nil ;};func _ceg (_cbd *_d .Reader ,_acea *Header )*GenericRefinementRegion {return &GenericRefinementRegion {_aee :_cbd ,RegionInfo :NewRegionSegment (_cbd ),_eaf :_acea ,_fe :&template0 {},_bfd :&template1 {}};
};func (_aed *HalftoneRegion )GetRegionBitmap ()(*_bf .Bitmap ,error ){if _aed .HalftoneRegionBitmap !=nil {return _aed .HalftoneRegionBitmap ,nil ;};var _bfea error ;_aed .HalftoneRegionBitmap =_bf .New (int (_aed .RegionSegment .BitmapWidth ),int (_aed .RegionSegment .BitmapHeight ));
if _aed .Patterns ==nil ||len (_aed .Patterns )==0{_aed .Patterns ,_bfea =_aed .GetPatterns ();if _bfea !=nil {return nil ,_bfea ;};};if _aed .HDefaultPixel ==1{_aed .HalftoneRegionBitmap .SetDefaultPixel ();};_fge :=_c .Ceil (_c .Log (float64 (len (_aed .Patterns )))/_c .Log (2));
_ecce :=int (_fge );var _gdaf [][]int ;_gdaf ,_bfea =_aed .grayScaleDecoding (_ecce );if _bfea !=nil {return nil ,_bfea ;};if _bfea =_aed .renderPattern (_gdaf );_bfea !=nil {return nil ,_bfea ;};return _aed .HalftoneRegionBitmap ,nil ;};func (_eggd *HalftoneRegion )computeY (_ggbb ,_cgcc int )int {return _eggd .shiftAndFill (int (_eggd .HGridY )+_ggbb *int (_eggd .HRegionX )-_cgcc *int (_eggd .HRegionY ));
};func (_aag *Header )writeFlags (_bggg _d .BinaryWriter )(_dgae error ){const _gefe ="\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065F\u006c\u0061\u0067\u0073";_cbe :=byte (_aag .Type );if _dgae =_bggg .WriteByte (_cbe );_dgae !=nil {return _dd .Wrap (_dgae ,_gefe ,"\u0077\u0072\u0069ti\u006e\u0067\u0020\u0073\u0065\u0067\u006d\u0065\u006et\u0020t\u0079p\u0065 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};if !_aag .RetainFlag &&!_aag .PageAssociationFieldSize {return nil ;};if _dgae =_bggg .SkipBits (-8);_dgae !=nil {return _dd .Wrap (_dgae ,_gefe ,"\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0062\u0061\u0063\u006b\u0020\u0074\u0068\u0065\u0020\u0062\u0069\u0074\u0073\u0020\u0066\u0061il\u0065\u0064");
};var _gdea int ;if _aag .RetainFlag {_gdea =1;};if _dgae =_bggg .WriteBit (_gdea );_dgae !=nil {return _dd .Wrap (_dgae ,_gefe ,"\u0072\u0065\u0074\u0061in\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067\u0073");};_gdea =0;if _aag .PageAssociationFieldSize {_gdea =1;
};if _dgae =_bggg .WriteBit (_gdea );_dgae !=nil {return _dd .Wrap (_dgae ,_gefe ,"p\u0061\u0067\u0065\u0020as\u0073o\u0063\u0069\u0061\u0074\u0069o\u006e\u0020\u0066\u006c\u0061\u0067");};_bggg .FinishByte ();return nil ;};func (_agbb *Header )readSegmentNumber (_gag *_d .Reader )error {const _dfbbf ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";
_adbd :=make ([]byte ,4);_ ,_dee :=_gag .Read (_adbd );if _dee !=nil {return _dd .Wrap (_dee ,_dfbbf ,"");};_agbb .SegmentNumber =_gd .BigEndian .Uint32 (_adbd );return nil ;};func (_dbbbg *SymbolDictionary )checkInput ()error {if _dbbbg .SdHuffDecodeHeightSelection ==2{_dc .Log .Debug ("\u0053\u0079\u006d\u0062\u006fl\u0020\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u0053e\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0070\u0065r\u006d\u0069\u0074\u0074\u0065\u0064",_dbbbg .SdHuffDecodeHeightSelection );
};if _dbbbg .SdHuffDecodeWidthSelection ==2{_dc .Log .Debug ("\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0057\u0069\u0064t\u0068\u0020\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061l\u0075\u0065\u0020\u006e\u006f\u0074 \u0070\u0065r\u006d\u0069t\u0074e\u0064",_dbbbg .SdHuffDecodeWidthSelection );
};if _dbbbg .IsHuffmanEncoded {if _dbbbg .SdTemplate !=0{_dc .Log .Debug ("\u0053\u0044T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e \u0030\u0029",_dbbbg .SdTemplate );
};if !_dbbbg .UseRefinementAggregation {if !_dbbbg .UseRefinementAggregation {if _dbbbg ._ggfgb {_dc .Log .Debug ("\u0049\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074ex\u0074\u0052\u0065\u0074\u0061\u0069n\u0065\u0064\u0020\u003d\u0020\u0074\u0072\u0075\u0065\u0020\u0028\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0066\u0061\u006cs\u0065\u0029");
_dbbbg ._ggfgb =false ;};if _dbbbg ._abea {_dc .Log .Debug ("\u0069s\u0043\u006fd\u0069\u006e\u0067\u0043o\u006e\u0074\u0065x\u0074\u0055\u0073\u0065\u0064\u0020\u003d\u0020\u0074ru\u0065\u0020\u0028s\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020f\u0061\u006cs\u0065\u0029");
_dbbbg ._abea =false ;};};};}else {if _dbbbg .SdHuffBMSizeSelection !=0{_dc .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066B\u004d\u0053\u0069\u007a\u0065\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_dbbbg .SdHuffBMSizeSelection =0;};if _dbbbg .SdHuffDecodeWidthSelection !=0{_dc .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068\u0053\u0065\u006c\u0065\u0063\u0074\u0069o\u006e\u0020\u0073\u0068\u006fu\u006c\u0064 \u0062\u0065\u0020\u0030");
_dbbbg .SdHuffDecodeWidthSelection =0;};if _dbbbg .SdHuffDecodeHeightSelection !=0{_dc .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0048e\u0069\u0067\u0068\u0074\u0053\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_dbbbg .SdHuffDecodeHeightSelection =0;};};if !_dbbbg .UseRefinementAggregation {if _dbbbg .SdrTemplate !=0{_dc .Log .Debug ("\u0053\u0044\u0052\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u003d\u0020\u0025\u0064\u0020\u0028s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_dbbbg .SdrTemplate );
_dbbbg .SdrTemplate =0;};};if !_dbbbg .IsHuffmanEncoded ||!_dbbbg .UseRefinementAggregation {if _dbbbg .SdHuffAggInstanceSelection {_dc .Log .Debug ("\u0053d\u0048\u0075f\u0066\u0041\u0067g\u0049\u006e\u0073\u0074\u0061\u006e\u0063e\u0053\u0065\u006c\u0065\u0063\u0074i\u006f\u006e\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_dbbbg .SdHuffAggInstanceSelection );
};};return nil ;};type templater interface{form (_aece ,_bafff ,_dcfe ,_gdef ,_cga int16 )int16 ;setIndex (_egddc *_gdg .DecoderStats );};func (_cdgf *Header )referenceSize ()uint {switch {case _cdgf .SegmentNumber <=255:return 1;case _cdgf .SegmentNumber <=65535:return 2;
default:return 4;};};type PatternDictionary struct{_fgbg *_d .Reader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;GBAtX []int8 ;GBAtY []int8 ;IsMMREncoded bool ;HDTemplate byte ;HdpWidth byte ;HdpHeight byte ;Patterns []*_bf .Bitmap ;
GrayMax uint32 ;};var _ SegmentEncoder =&GenericRegion {};func (_feab *SymbolDictionary )readRefinementAtPixels (_fgee int )error {_feab .SdrATX =make ([]int8 ,_fgee );_feab .SdrATY =make ([]int8 ,_fgee );var (_fbdg byte ;_aggg error ;);for _dgcf :=0;_dgcf < _fgee ;
_dgcf ++{_fbdg ,_aggg =_feab ._ccba .ReadByte ();if _aggg !=nil {return _aggg ;};_feab .SdrATX [_dgcf ]=int8 (_fbdg );_fbdg ,_aggg =_feab ._ccba .ReadByte ();if _aggg !=nil {return _aggg ;};_feab .SdrATY [_dgcf ]=int8 (_fbdg );};return nil ;};func (_acbc *GenericRegion )setParameters (_dfad bool ,_cggf ,_beg int64 ,_gdge ,_fbg uint32 ){_acbc .IsMMREncoded =_dfad ;
_acbc .DataOffset =_cggf ;_acbc .DataLength =_beg ;_acbc .RegionSegment .BitmapHeight =_gdge ;_acbc .RegionSegment .BitmapWidth =_fbg ;_acbc ._cfa =nil ;_acbc .Bitmap =nil ;};func (_dgfg *PatternDictionary )Init (h *Header ,r *_d .Reader )error {_dgfg ._fgbg =r ;
return _dgfg .parseHeader ();};func (_afaf *SymbolDictionary )encodeSymbols (_edg _d .BinaryWriter )(_bdgb int ,_gbee error ){const _beaa ="\u0065\u006e\u0063o\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c";_cged :=_fd .New ();_cged .Init ();_ccfd ,_gbee :=_afaf ._fbcd .SelectByIndexes (_afaf ._eged );
if _gbee !=nil {return 0,_dd .Wrap (_gbee ,_beaa ,"\u0069n\u0069\u0074\u0069\u0061\u006c");};_dbge :=map[*_bf .Bitmap ]int {};for _eegf ,_bdab :=range _ccfd .Values {_dbge [_bdab ]=_eegf ;};_ccfd .SortByHeight ();var _ecdf ,_egfg int ;_cdea ,_gbee :=_ccfd .GroupByHeight ();
if _gbee !=nil {return 0,_dd .Wrap (_gbee ,_beaa ,"");};for _ ,_afbb :=range _cdea .Values {_adccc :=_afbb .Values [0].Height ;_eegc :=_adccc -_ecdf ;if _gbee =_cged .EncodeInteger (_fd .IADH ,_eegc );_gbee !=nil {return 0,_dd .Wrapf (_gbee ,_beaa ,"\u0049\u0041\u0044\u0048\u0020\u0066\u006f\u0072\u0020\u0064\u0068\u003a \u0027\u0025\u0064\u0027",_eegc );
};_ecdf =_adccc ;_cfdf ,_fdcd :=_afbb .GroupByWidth ();if _fdcd !=nil {return 0,_dd .Wrapf (_fdcd ,_beaa ,"\u0068\u0065\u0069g\u0068\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_adccc );};var _eaac int ;for _ ,_dbfd :=range _cfdf .Values {for _ ,_bdced :=range _dbfd .Values {_aega :=_bdced .Width ;
_gaeg :=_aega -_eaac ;if _fdcd =_cged .EncodeInteger (_fd .IADW ,_gaeg );_fdcd !=nil {return 0,_dd .Wrapf (_fdcd ,_beaa ,"\u0049\u0041\u0044\u0057\u0020\u0066\u006f\u0072\u0020\u0064\u0077\u003a \u0027\u0025\u0064\u0027",_gaeg );};_eaac +=_gaeg ;if _fdcd =_cged .EncodeBitmap (_bdced ,false );
_fdcd !=nil {return 0,_dd .Wrapf (_fdcd ,_beaa ,"H\u0065i\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u0020W\u0069\u0064\u0074\u0068: \u0025\u0064",_adccc ,_aega );};_ccce :=_dbge [_bdced ];_afaf ._efbbg [_ccce ]=_egfg ;_egfg ++;};};if _fdcd =_cged .EncodeOOB (_fd .IADW );
_fdcd !=nil {return 0,_dd .Wrap (_fdcd ,_beaa ,"\u0049\u0041\u0044\u0057");};};if _gbee =_cged .EncodeInteger (_fd .IAEX ,0);_gbee !=nil {return 0,_dd .Wrap (_gbee ,_beaa ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};if _gbee =_cged .EncodeInteger (_fd .IAEX ,len (_afaf ._eged ));_gbee !=nil {return 0,_dd .Wrap (_gbee ,_beaa ,"\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0073\u0079m\u0062\u006f\u006c\u0073");};_cged .Final ();_gbae ,_gbee :=_cged .WriteTo (_edg );
if _gbee !=nil {return 0,_dd .Wrap (_gbee ,_beaa ,"\u0077\u0072i\u0074\u0069\u006e\u0067 \u0065\u006ec\u006f\u0064\u0065\u0072\u0020\u0063\u006f\u006et\u0065\u0078\u0074\u0020\u0074\u006f\u0020\u0027\u0077\u0027\u0020\u0077r\u0069\u0074\u0065\u0072");};
return int (_gbae ),nil ;};func (_adf *GenericRegion )decodeTemplate1 (_daf ,_bda ,_fcd int ,_agef ,_cdc int )(_dfgc error ){const _ggff ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0031";var (_abc ,_efdf int ;_gedf ,_efb int ;
_bdb byte ;_efa ,_dca int ;);if _daf >=1{_bdb ,_dfgc =_adf .Bitmap .GetByte (_cdc );if _dfgc !=nil {return _dd .Wrap (_dfgc ,_ggff ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_gedf =int (_bdb );};if _daf >=2{_bdb ,_dfgc =_adf .Bitmap .GetByte (_cdc -_adf .Bitmap .RowStride );
if _dfgc !=nil {return _dd .Wrap (_dfgc ,_ggff ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_efb =int (_bdb )<<5;};_abc =((_gedf >>1)&0x1f8)|((_efb >>1)&0x1e00);for _ccbg :=0;_ccbg < _fcd ;_ccbg =_efa {var (_gdda byte ;_bea int ;);_efa =_ccbg +8;
if _ade :=_bda -_ccbg ;_ade > 8{_bea =8;}else {_bea =_ade ;};if _daf > 0{_gedf <<=8;if _efa < _bda {_bdb ,_dfgc =_adf .Bitmap .GetByte (_cdc +1);if _dfgc !=nil {return _dd .Wrap (_dfgc ,_ggff ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_gedf |=int (_bdb );
};};if _daf > 1{_efb <<=8;if _efa < _bda {_bdb ,_dfgc =_adf .Bitmap .GetByte (_cdc -_adf .Bitmap .RowStride +1);if _dfgc !=nil {return _dd .Wrap (_dfgc ,_ggff ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_efb |=int (_bdb )<<5;};};for _fcad :=0;
_fcad < _bea ;_fcad ++{if _adf ._ceab {_efdf =_adf .overrideAtTemplate1 (_abc ,_ccbg +_fcad ,_daf ,int (_gdda ),_fcad );_adf ._add .SetIndex (int32 (_efdf ));}else {_adf ._add .SetIndex (int32 (_abc ));};_dca ,_dfgc =_adf ._cgf .DecodeBit (_adf ._add );
if _dfgc !=nil {return _dd .Wrap (_dfgc ,_ggff ,"");};_gdda |=byte (_dca )<<uint (7-_fcad );_cgae :=uint (8-_fcad );_abc =((_abc &0xefb)<<1)|_dca |((_gedf >>_cgae )&0x8)|((_efb >>_cgae )&0x200);};if _ecb :=_adf .Bitmap .SetByte (_agef ,_gdda );_ecb !=nil {return _dd .Wrap (_ecb ,_ggff ,"");
};_agef ++;_cdc ++;};return nil ;};func (_cbdf *GenericRegion )decodeTemplate0b (_cab ,_cgg ,_gecf int ,_gad ,_ceba int )(_dgcg error ){const _egaed ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0062";var (_ege ,_gcb int ;
_eca ,_cagc int ;_bce byte ;_gecb int ;);if _cab >=1{_bce ,_dgcg =_cbdf .Bitmap .GetByte (_ceba );if _dgcg !=nil {return _dd .Wrap (_dgcg ,_egaed ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_eca =int (_bce );};if _cab >=2{_bce ,_dgcg =_cbdf .Bitmap .GetByte (_ceba -_cbdf .Bitmap .RowStride );
if _dgcg !=nil {return _dd .Wrap (_dgcg ,_egaed ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_cagc =int (_bce )<<6;};_ege =(_eca &0xf0)|(_cagc &0x3800);for _bcfb :=0;_bcfb < _gecf ;_bcfb =_gecb {var (_fagb byte ;_adga int ;);_gecb =_bcfb +8;if _egea :=_cgg -_bcfb ;
_egea > 8{_adga =8;}else {_adga =_egea ;};if _cab > 0{_eca <<=8;if _gecb < _cgg {_bce ,_dgcg =_cbdf .Bitmap .GetByte (_ceba +1);if _dgcg !=nil {return _dd .Wrap (_dgcg ,_egaed ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_eca |=int (_bce );};
};if _cab > 1{_cagc <<=8;if _gecb < _cgg {_bce ,_dgcg =_cbdf .Bitmap .GetByte (_ceba -_cbdf .Bitmap .RowStride +1);if _dgcg !=nil {return _dd .Wrap (_dgcg ,_egaed ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_cagc |=int (_bce )<<6;};};for _bbaa :=0;
_bbaa < _adga ;_bbaa ++{_ebd :=uint (7-_bbaa );if _cbdf ._ceab {_gcb =_cbdf .overrideAtTemplate0b (_ege ,_bcfb +_bbaa ,_cab ,int (_fagb ),_bbaa ,int (_ebd ));_cbdf ._add .SetIndex (int32 (_gcb ));}else {_cbdf ._add .SetIndex (int32 (_ege ));};var _ggag int ;
_ggag ,_dgcg =_cbdf ._cgf .DecodeBit (_cbdf ._add );if _dgcg !=nil {return _dd .Wrap (_dgcg ,_egaed ,"");};_fagb |=byte (_ggag <<_ebd );_ege =((_ege &0x7bf7)<<1)|_ggag |((_eca >>_ebd )&0x10)|((_cagc >>_ebd )&0x800);};if _agf :=_cbdf .Bitmap .SetByte (_gad ,_fagb );
_agf !=nil {return _dd .Wrap (_agf ,_egaed ,"");};_gad ++;_ceba ++;};return nil ;};func (_gc *GenericRefinementRegion )parseHeader ()(_afe error ){_dc .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0048e\u0061\u0064e\u0072\u002e\u002e\u002e");
_dbf :=_e .Now ();defer func (){if _afe ==nil {_dc .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045G\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020h\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0069\u006e\u0069\u0073\u0068id\u0020\u0069\u006e\u003a\u0020\u0025\u0064\u0020\u006e\u0073",_e .Since (_dbf ).Nanoseconds ());
}else {_dc .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0068\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0073",_afe );
};}();if _afe =_gc .RegionInfo .parseHeader ();_afe !=nil {return _afe ;};_ ,_afe =_gc ._aee .ReadBits (6);if _afe !=nil {return _afe ;};_gc .IsTPGROn ,_afe =_gc ._aee .ReadBool ();if _afe !=nil {return _afe ;};var _ccg int ;_ccg ,_afe =_gc ._aee .ReadBit ();
if _afe !=nil {return _afe ;};_gc .TemplateID =int8 (_ccg );switch _gc .TemplateID {case 0:_gc .Template =_gc ._fe ;if _afe =_gc .readAtPixels ();_afe !=nil {return ;};case 1:_gc .Template =_gc ._bfd ;};return nil ;};func (_ceeef *PageInformationSegment )readWidthAndHeight ()error {_fadd ,_ebg :=_ceeef ._afa .ReadBits (32);
if _ebg !=nil {return _ebg ;};_ceeef .PageBMWidth =int (_fadd &_c .MaxInt32 );_fadd ,_ebg =_ceeef ._afa .ReadBits (32);if _ebg !=nil {return _ebg ;};_ceeef .PageBMHeight =int (_fadd &_c .MaxInt32 );return nil ;};func (_efag *TextRegion )Init (header *Header ,r *_d .Reader )error {_efag .Header =header ;
_efag ._gebc =r ;_efag .RegionInfo =NewRegionSegment (_efag ._gebc );return _efag .parseHeader ();};func (_eba *Header )CleanSegmentData (){if _eba .SegmentData !=nil {_eba .SegmentData =nil ;};};type Pager interface{GetSegment (int )(*Header ,error );
GetBitmap ()(*_bf .Bitmap ,error );};var (_daab Segmenter ;_dad =map[Type ]func ()Segmenter {TSymbolDictionary :func ()Segmenter {return &SymbolDictionary {}},TIntermediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateLosslessTextRegion :func ()Segmenter {return &TextRegion {}},TPatternDictionary :func ()Segmenter {return &PatternDictionary {}},TIntermediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateLosslessHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TIntermediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateLosslessGenericRegion :func ()Segmenter {return &GenericRegion {}},TIntermediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateLosslessGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TPageInformation :func ()Segmenter {return &PageInformationSegment {}},TEndOfPage :func ()Segmenter {return _daab },TEndOfStrip :func ()Segmenter {return &EndOfStripe {}},TEndOfFile :func ()Segmenter {return _daab },TProfiles :func ()Segmenter {return _daab },TTables :func ()Segmenter {return &TableSegment {}},TExtension :func ()Segmenter {return _daab },TBitmap :func ()Segmenter {return _daab }};
);func (_bde *GenericRefinementRegion )decodeTypicalPredictedLine (_ee ,_baff ,_ef ,_bfe ,_fc ,_gbc int )error {_fb :=_ee -int (_bde .ReferenceDY );_bca :=_bde .ReferenceBitmap .GetByteIndex (0,_fb );_ff :=_bde .RegionBitmap .GetByteIndex (0,_ee );var _adg error ;
switch _bde .TemplateID {case 0:_adg =_bde .decodeTypicalPredictedLineTemplate0 (_ee ,_baff ,_ef ,_bfe ,_fc ,_gbc ,_ff ,_fb ,_bca );case 1:_adg =_bde .decodeTypicalPredictedLineTemplate1 (_ee ,_baff ,_ef ,_bfe ,_fc ,_gbc ,_ff ,_fb ,_bca );};return _adg ;
};func (_bagf *SymbolDictionary )setInSyms ()error {if _bagf .Header .RTSegments !=nil {return _bagf .retrieveImportSymbols ();};_bagf ._cgge =make ([]*_bf .Bitmap ,0);return nil ;};type SymbolDictionary struct{_ccba *_d .Reader ;SdrTemplate int8 ;SdTemplate int8 ;
_ggfgb bool ;_abea bool ;SdHuffAggInstanceSelection bool ;SdHuffBMSizeSelection int8 ;SdHuffDecodeWidthSelection int8 ;SdHuffDecodeHeightSelection int8 ;UseRefinementAggregation bool ;IsHuffmanEncoded bool ;SdATX []int8 ;SdATY []int8 ;SdrATX []int8 ;SdrATY []int8 ;
NumberOfExportedSymbols uint32 ;NumberOfNewSymbols uint32 ;Header *Header ;_gdeaa uint32 ;_cgge []*_bf .Bitmap ;_ageeg uint32 ;_bfgd []*_bf .Bitmap ;_abee _ae .Tabler ;_fgeg _ae .Tabler ;_ffedc _ae .Tabler ;_ebf _ae .Tabler ;_dgfb []*_bf .Bitmap ;_agfa []*_bf .Bitmap ;
_acd *_gdg .Decoder ;_bcdbb *TextRegion ;_dfbd *GenericRegion ;_deea *GenericRefinementRegion ;_fcef *_gdg .DecoderStats ;_ffdb *_gdg .DecoderStats ;_dgfga *_gdg .DecoderStats ;_faed *_gdg .DecoderStats ;_baed *_gdg .DecoderStats ;_ggec *_gdg .DecoderStats ;
_ecffa *_gdg .DecoderStats ;_beag *_gdg .DecoderStats ;_bfbb *_gdg .DecoderStats ;_bdbae int8 ;_fbcd *_bf .Bitmaps ;_eged []int ;_efbbg map[int ]int ;_fcag bool ;};func (_fbag *TextRegion )decodeRdh ()(int64 ,error ){const _afbd ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064h";
if _fbag .IsHuffmanEncoded {if _fbag .SbHuffRDHeight ==3{if _fbag ._bcfg ==nil {var (_adgab int ;_egee error ;);if _fbag .SbHuffFS ==3{_adgab ++;};if _fbag .SbHuffDS ==3{_adgab ++;};if _fbag .SbHuffDT ==3{_adgab ++;};if _fbag .SbHuffRDWidth ==3{_adgab ++;
};_fbag ._bcfg ,_egee =_fbag .getUserTable (_adgab );if _egee !=nil {return 0,_dd .Wrap (_egee ,_afbd ,"");};};return _fbag ._bcfg .Decode (_fbag ._gebc );};_adcg ,_ffbg :=_ae .GetStandardTable (14+int (_fbag .SbHuffRDHeight ));if _ffbg !=nil {return 0,_dd .Wrap (_ffbg ,_afbd ,"");
};return _adcg .Decode (_fbag ._gebc );};_bffd ,_dgaa :=_fbag ._geeg .DecodeInt (_fbag ._cdad );if _dgaa !=nil {return 0,_dd .Wrap (_dgaa ,_afbd ,"");};return int64 (_bffd ),nil ;};func (_efeb *HalftoneRegion )shiftAndFill (_ceabg int )int {_ceabg >>=8;
if _ceabg < 0{_bgdb :=int (_c .Log (float64 (_ceee (_ceabg )))/_c .Log (2));_aaab :=31-_bgdb ;for _gcge :=1;_gcge < _aaab ;_gcge ++{_ceabg |=1<<uint (31-_gcge );};};return _ceabg ;};func (_ddee *GenericRegion )Init (h *Header ,r *_d .Reader )error {_ddee .RegionSegment =NewRegionSegment (r );
_ddee ._dcg =r ;return _ddee .parseHeader ();};func (_bfde *TextRegion )decodeDT ()(_abffd int64 ,_cced error ){if _bfde .IsHuffmanEncoded {if _bfde .SbHuffDT ==3{_abffd ,_cced =_bfde ._bfgc .Decode (_bfde ._gebc );if _cced !=nil {return 0,_cced ;};}else {var _debe _ae .Tabler ;
_debe ,_cced =_ae .GetStandardTable (11+int (_bfde .SbHuffDT ));if _cced !=nil {return 0,_cced ;};_abffd ,_cced =_debe .Decode (_bfde ._gebc );if _cced !=nil {return 0,_cced ;};};}else {var _cfcd int32 ;_cfcd ,_cced =_bfde ._geeg .DecodeInt (_bfde ._fcce );
if _cced !=nil {return ;};_abffd =int64 (_cfcd );};_abffd *=int64 (_bfde .SbStrips );return _abffd ,nil ;};type TextRegion struct{_gebc *_d .Reader ;RegionInfo *RegionSegment ;SbrTemplate int8 ;SbDsOffset int8 ;DefaultPixel int8 ;CombinationOperator _bf .CombinationOperator ;
IsTransposed int8 ;ReferenceCorner int16 ;LogSBStrips int16 ;UseRefinement bool ;IsHuffmanEncoded bool ;SbHuffRSize int8 ;SbHuffRDY int8 ;SbHuffRDX int8 ;SbHuffRDHeight int8 ;SbHuffRDWidth int8 ;SbHuffDT int8 ;SbHuffDS int8 ;SbHuffFS int8 ;SbrATX []int8 ;
SbrATY []int8 ;NumberOfSymbolInstances uint32 ;_abab int64 ;SbStrips int8 ;NumberOfSymbols uint32 ;RegionBitmap *_bf .Bitmap ;Symbols []*_bf .Bitmap ;_geeg *_gdg .Decoder ;_gbfb *GenericRefinementRegion ;_fcce *_gdg .DecoderStats ;_efce *_gdg .DecoderStats ;
_cfeb *_gdg .DecoderStats ;_fffc *_gdg .DecoderStats ;_cebae *_gdg .DecoderStats ;_dfbbc *_gdg .DecoderStats ;_cdad *_gdg .DecoderStats ;_dged *_gdg .DecoderStats ;_efbc *_gdg .DecoderStats ;_cbggb *_gdg .DecoderStats ;_ggebe *_gdg .DecoderStats ;_fgd int8 ;
_accb *_ae .FixedSizeTable ;Header *Header ;_cefc _ae .Tabler ;_gedbb _ae .Tabler ;_bfgc _ae .Tabler ;_aeag _ae .Tabler ;_bcfg _ae .Tabler ;_baca _ae .Tabler ;_efed _ae .Tabler ;_ggbd _ae .Tabler ;_fgaff ,_gaca map[int ]int ;_aceed []int ;_aceg *_bf .Points ;
_dab *_bf .Bitmaps ;_gbbe *_a .IntSlice ;_geae ,_ecde int ;_fdag *_bf .Boxes ;};func NewHeader (d Documenter ,r *_d .Reader ,offset int64 ,organizationType OrganizationType )(*Header ,error ){_bgfa :=&Header {Reader :r };if _gea :=_bgfa .parse (d ,r ,offset ,organizationType );
_gea !=nil {return nil ,_dd .Wrap (_gea ,"\u004ee\u0077\u0048\u0065\u0061\u0064\u0065r","");};return _bgfa ,nil ;};func (_ddada *Header )readNumberOfReferredToSegments (_facf *_d .Reader )(uint64 ,error ){const _gfa ="\u0072\u0065\u0061\u0064\u004e\u0075\u006d\u0062\u0065\u0072O\u0066\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
_cbf ,_edb :=_facf .ReadBits (3);if _edb !=nil {return 0,_dd .Wrap (_edb ,_gfa ,"\u0063\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0072\u0074\u0073");};_cbf &=0xf;var _cbg []byte ;if _cbf <=4{_cbg =make ([]byte ,5);for _dgec :=0;_dgec <=4;_dgec ++{_bedc ,_gbg :=_facf .ReadBit ();
if _gbg !=nil {return 0,_dd .Wrap (_gbg ,_gfa ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_cbg [_dgec ]=byte (_bedc );};}else {_cbf ,_edb =_facf .ReadBits (29);if _edb !=nil {return 0,_edb ;};_cbf &=_c .MaxInt32 ;_cfc :=(_cbf +8)>>3;
_cfc <<=3;_cbg =make ([]byte ,_cfc );var _bfeaf uint64 ;for _bfeaf =0;_bfeaf < _cfc ;_bfeaf ++{_afgf ,_cabg :=_facf .ReadBit ();if _cabg !=nil {return 0,_dd .Wrap (_cabg ,_gfa ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_cbg [_bfeaf ]=byte (_afgf );
};};return _cbf ,nil ;};var _ templater =&template0 {};func (_fdgf *PageInformationSegment )readMaxStripeSize ()error {_gdag ,_gdgeb :=_fdgf ._afa .ReadBits (15);if _gdgeb !=nil {return _gdgeb ;};_fdgf .MaxStripeSize =uint16 (_gdag &_c .MaxUint16 );return nil ;
};func (_cebd *GenericRefinementRegion )decodeTemplate (_fga ,_df ,_cgd ,_aca ,_bfda ,_ggef ,_cgdf ,_ded ,_dbd ,_dbdf int ,_cbc templater )(_bgf error ){var (_fbd ,_gdd ,_efe ,_ffc ,_ace int16 ;_adgd ,_fgb ,_badb ,_egdd int ;_ega byte ;);if _dbd >=1&&(_dbd -1)< _cebd .ReferenceBitmap .Height {_ega ,_bgf =_cebd .ReferenceBitmap .GetByte (_dbdf -_aca );
if _bgf !=nil {return ;};_adgd =int (_ega );};if _dbd >=0&&(_dbd )< _cebd .ReferenceBitmap .Height {_ega ,_bgf =_cebd .ReferenceBitmap .GetByte (_dbdf );if _bgf !=nil {return ;};_fgb =int (_ega );};if _dbd >=-1&&(_dbd +1)< _cebd .ReferenceBitmap .Height {_ega ,_bgf =_cebd .ReferenceBitmap .GetByte (_dbdf +_aca );
if _bgf !=nil {return ;};_badb =int (_ega );};_dbdf ++;if _fga >=1{_ega ,_bgf =_cebd .RegionBitmap .GetByte (_ded -_cgd );if _bgf !=nil {return ;};_egdd =int (_ega );};_ded ++;_caec :=_cebd .ReferenceDX %8;_bcb :=6+_caec ;_bfg :=_dbdf %_aca ;if _bcb >=0{if _bcb < 8{_fbd =int16 (_adgd >>uint (_bcb ))&0x07;
};if _bcb < 8{_gdd =int16 (_fgb >>uint (_bcb ))&0x07;};if _bcb < 8{_efe =int16 (_badb >>uint (_bcb ))&0x07;};if _bcb ==6&&_bfg > 1{if _dbd >=1&&(_dbd -1)< _cebd .ReferenceBitmap .Height {_ega ,_bgf =_cebd .ReferenceBitmap .GetByte (_dbdf -_aca -2);if _bgf !=nil {return _bgf ;
};_fbd |=int16 (_ega <<2)&0x04;};if _dbd >=0&&_dbd < _cebd .ReferenceBitmap .Height {_ega ,_bgf =_cebd .ReferenceBitmap .GetByte (_dbdf -2);if _bgf !=nil {return _bgf ;};_gdd |=int16 (_ega <<2)&0x04;};if _dbd >=-1&&_dbd +1< _cebd .ReferenceBitmap .Height {_ega ,_bgf =_cebd .ReferenceBitmap .GetByte (_dbdf +_aca -2);
if _bgf !=nil {return _bgf ;};_efe |=int16 (_ega <<2)&0x04;};};if _bcb ==0{_adgd =0;_fgb =0;_badb =0;if _bfg < _aca -1{if _dbd >=1&&_dbd -1< _cebd .ReferenceBitmap .Height {_ega ,_bgf =_cebd .ReferenceBitmap .GetByte (_dbdf -_aca );if _bgf !=nil {return _bgf ;
};_adgd =int (_ega );};if _dbd >=0&&_dbd < _cebd .ReferenceBitmap .Height {_ega ,_bgf =_cebd .ReferenceBitmap .GetByte (_dbdf );if _bgf !=nil {return _bgf ;};_fgb =int (_ega );};if _dbd >=-1&&_dbd +1< _cebd .ReferenceBitmap .Height {_ega ,_bgf =_cebd .ReferenceBitmap .GetByte (_dbdf +_aca );
if _bgf !=nil {return _bgf ;};_badb =int (_ega );};};_dbdf ++;};}else {_fbd =int16 (_adgd <<1)&0x07;_gdd =int16 (_fgb <<1)&0x07;_efe =int16 (_badb <<1)&0x07;_adgd =0;_fgb =0;_badb =0;if _bfg < _aca -1{if _dbd >=1&&_dbd -1< _cebd .ReferenceBitmap .Height {_ega ,_bgf =_cebd .ReferenceBitmap .GetByte (_dbdf -_aca );
if _bgf !=nil {return _bgf ;};_adgd =int (_ega );};if _dbd >=0&&_dbd < _cebd .ReferenceBitmap .Height {_ega ,_bgf =_cebd .ReferenceBitmap .GetByte (_dbdf );if _bgf !=nil {return _bgf ;};_fgb =int (_ega );};if _dbd >=-1&&_dbd +1< _cebd .ReferenceBitmap .Height {_ega ,_bgf =_cebd .ReferenceBitmap .GetByte (_dbdf +_aca );
if _bgf !=nil {return _bgf ;};_badb =int (_ega );};_dbdf ++;};_fbd |=int16 ((_adgd >>7)&0x07);_gdd |=int16 ((_fgb >>7)&0x07);_efe |=int16 ((_badb >>7)&0x07);};_ffc =int16 (_egdd >>6);_ace =0;_ge :=(2-_caec )%8;_adgd <<=uint (_ge );_fgb <<=uint (_ge );_badb <<=uint (_ge );
_egdd <<=2;var _fdbc int ;for _eddc :=0;_eddc < _df ;_eddc ++{_ced :=_eddc &0x07;_dcf :=_cbc .form (_fbd ,_gdd ,_efe ,_ffc ,_ace );if _cebd ._fa {_ega ,_bgf =_cebd .RegionBitmap .GetByte (_cebd .RegionBitmap .GetByteIndex (_eddc ,_fga ));if _bgf !=nil {return _bgf ;
};_cebd ._ed .SetIndex (int32 (_cebd .overrideAtTemplate0 (int (_dcf ),_eddc ,_fga ,int (_ega ),_ced )));}else {_cebd ._ed .SetIndex (int32 (_dcf ));};_fdbc ,_bgf =_cebd ._gg .DecodeBit (_cebd ._ed );if _bgf !=nil {return _bgf ;};if _bgf =_cebd .RegionBitmap .SetPixel (_eddc ,_fga ,byte (_fdbc ));
_bgf !=nil {return _bgf ;};_fbd =((_fbd <<1)|0x01&int16 (_adgd >>7))&0x07;_gdd =((_gdd <<1)|0x01&int16 (_fgb >>7))&0x07;_efe =((_efe <<1)|0x01&int16 (_badb >>7))&0x07;_ffc =((_ffc <<1)|0x01&int16 (_egdd >>7))&0x07;_ace =int16 (_fdbc );if (_eddc -int (_cebd .ReferenceDX ))%8==5{_adgd =0;
_fgb =0;_badb =0;if ((_eddc -int (_cebd .ReferenceDX ))/8)+1< _cebd .ReferenceBitmap .RowStride {if _dbd >=1&&(_dbd -1)< _cebd .ReferenceBitmap .Height {_ega ,_bgf =_cebd .ReferenceBitmap .GetByte (_dbdf -_aca );if _bgf !=nil {return _bgf ;};_adgd =int (_ega );
};if _dbd >=0&&_dbd < _cebd .ReferenceBitmap .Height {_ega ,_bgf =_cebd .ReferenceBitmap .GetByte (_dbdf );if _bgf !=nil {return _bgf ;};_fgb =int (_ega );};if _dbd >=-1&&(_dbd +1)< _cebd .ReferenceBitmap .Height {_ega ,_bgf =_cebd .ReferenceBitmap .GetByte (_dbdf +_aca );
if _bgf !=nil {return _bgf ;};_badb =int (_ega );};};_dbdf ++;}else {_adgd <<=1;_fgb <<=1;_badb <<=1;};if _ced ==5&&_fga >=1{if ((_eddc >>3)+1)>=_cebd .RegionBitmap .RowStride {_egdd =0;}else {_ega ,_bgf =_cebd .RegionBitmap .GetByte (_ded -_cgd );if _bgf !=nil {return _bgf ;
};_egdd =int (_ega );};_ded ++;}else {_egdd <<=1;};};return nil ;};func (_gecbc *PageInformationSegment )readCombinationOperatorOverrideAllowed ()error {_ecfc ,_bga :=_gecbc ._afa .ReadBit ();if _bga !=nil {return _bga ;};if _ecfc ==1{_gecbc ._cfab =true ;
};return nil ;};func (_ggca *TableSegment )HtLow ()int32 {return _ggca ._cdaf };func (_gbbg *SymbolDictionary )GetDictionary ()([]*_bf .Bitmap ,error ){_dc .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c-\u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){_dc .Log .Trace ("\u005b\u0053\u0059M\u0042\u004f\u004c\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
_dc .Log .Trace ("\u005b\u0053Y\u004d\u0042\u004f\u004c\u002dD\u0049\u0043\u0054\u0049\u004fN\u0041\u0052\u0059\u005d\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020\u000a\u0045\u0078\u003a\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u000a\u006e\u0065\u0077\u003a\u0027\u0025\u0073\u0027",_gbbg ._dgfb ,_gbbg ._bfgd );
}();if _gbbg ._dgfb ==nil {var _dfeg error ;if _gbbg .UseRefinementAggregation {_gbbg ._bdbae =_gbbg .getSbSymCodeLen ();};if !_gbbg .IsHuffmanEncoded {if _dfeg =_gbbg .setCodingStatistics ();_dfeg !=nil {return nil ,_dfeg ;};};_gbbg ._bfgd =make ([]*_bf .Bitmap ,_gbbg .NumberOfNewSymbols );
var _gcga []int ;if _gbbg .IsHuffmanEncoded &&!_gbbg .UseRefinementAggregation {_gcga =make ([]int ,_gbbg .NumberOfNewSymbols );};if _dfeg =_gbbg .setSymbolsArray ();_dfeg !=nil {return nil ,_dfeg ;};var _gfaa ,_ccdc int64 ;_gbbg ._ageeg =0;for _gbbg ._ageeg < _gbbg .NumberOfNewSymbols {_ccdc ,_dfeg =_gbbg .decodeHeightClassDeltaHeight ();
if _dfeg !=nil {return nil ,_dfeg ;};_gfaa +=_ccdc ;var _gfb ,_adbdb uint32 ;_afee :=int64 (_gbbg ._ageeg );for {var _aceag int64 ;_aceag ,_dfeg =_gbbg .decodeDifferenceWidth ();if _ce .Is (_dfeg ,_da .ErrOOB ){break ;};if _dfeg !=nil {return nil ,_dfeg ;
};if _gbbg ._ageeg >=_gbbg .NumberOfNewSymbols {break ;};_gfb +=uint32 (_aceag );_adbdb +=_gfb ;if !_gbbg .IsHuffmanEncoded ||_gbbg .UseRefinementAggregation {if !_gbbg .UseRefinementAggregation {_dfeg =_gbbg .decodeDirectlyThroughGenericRegion (_gfb ,uint32 (_gfaa ));
if _dfeg !=nil {return nil ,_dfeg ;};}else {_dfeg =_gbbg .decodeAggregate (_gfb ,uint32 (_gfaa ));if _dfeg !=nil {return nil ,_dfeg ;};};}else if _gbbg .IsHuffmanEncoded &&!_gbbg .UseRefinementAggregation {_gcga [_gbbg ._ageeg ]=int (_gfb );};_gbbg ._ageeg ++;
};if _gbbg .IsHuffmanEncoded &&!_gbbg .UseRefinementAggregation {var _aceeb int64 ;if _gbbg .SdHuffBMSizeSelection ==0{var _acagc _ae .Tabler ;_acagc ,_dfeg =_ae .GetStandardTable (1);if _dfeg !=nil {return nil ,_dfeg ;};_aceeb ,_dfeg =_acagc .Decode (_gbbg ._ccba );
if _dfeg !=nil {return nil ,_dfeg ;};}else {_aceeb ,_dfeg =_gbbg .huffDecodeBmSize ();if _dfeg !=nil {return nil ,_dfeg ;};};_gbbg ._ccba .Align ();var _dageb *_bf .Bitmap ;_dageb ,_dfeg =_gbbg .decodeHeightClassCollectiveBitmap (_aceeb ,uint32 (_gfaa ),_adbdb );
if _dfeg !=nil {return nil ,_dfeg ;};_dfeg =_gbbg .decodeHeightClassBitmap (_dageb ,_afee ,int (_gfaa ),_gcga );if _dfeg !=nil {return nil ,_dfeg ;};};};_ggeaf ,_dfeg :=_gbbg .getToExportFlags ();if _dfeg !=nil {return nil ,_dfeg ;};_gbbg .setExportedSymbols (_ggeaf );
};return _gbbg ._dgfb ,nil ;};func (_adaf *TextRegion )checkInput ()error {const _bcfab ="\u0063\u0068\u0065\u0063\u006b\u0049\u006e\u0070\u0075\u0074";if !_adaf .UseRefinement {if _adaf .SbrTemplate !=0{_dc .Log .Debug ("\u0053\u0062\u0072Te\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");
_adaf .SbrTemplate =0;};};if _adaf .SbHuffFS ==2||_adaf .SbHuffRDWidth ==2||_adaf .SbHuffRDHeight ==2||_adaf .SbHuffRDX ==2||_adaf .SbHuffRDY ==2{return _dd .Error (_bcfab ,"h\u0075\u0066\u0066\u006d\u0061\u006e \u0066\u006c\u0061\u0067\u0020\u0076a\u006c\u0075\u0065\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074e\u0064");
};if !_adaf .UseRefinement {if _adaf .SbHuffRSize !=0{_dc .Log .Debug ("\u0053\u0062\u0048uf\u0066\u0052\u0053\u0069\u007a\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_adaf .SbHuffRSize =0;};if _adaf .SbHuffRDY !=0{_dc .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044Y\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");
_adaf .SbHuffRDY =0;};if _adaf .SbHuffRDX !=0{_dc .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044X\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_adaf .SbHuffRDX =0;};if _adaf .SbHuffRDWidth !=0{_dc .Log .Debug ("\u0053b\u0048\u0075\u0066\u0066R\u0044\u0057\u0069\u0064\u0074h\u0020s\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u00200");
_adaf .SbHuffRDWidth =0;};if _adaf .SbHuffRDHeight !=0{_dc .Log .Debug ("\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069g\u0068\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0030");_adaf .SbHuffRDHeight =0;};};return nil ;
};func (_dgcc *TextRegion )decodeIds ()(int64 ,error ){const _bdaa ="\u0064e\u0063\u006f\u0064\u0065\u0049\u0064s";if _dgcc .IsHuffmanEncoded {if _dgcc .SbHuffDS ==3{if _dgcc ._gedbb ==nil {_eeb :=0;if _dgcc .SbHuffFS ==3{_eeb ++;};var _faaeb error ;_dgcc ._gedbb ,_faaeb =_dgcc .getUserTable (_eeb );
if _faaeb !=nil {return 0,_dd .Wrap (_faaeb ,_bdaa ,"");};};return _dgcc ._gedbb .Decode (_dgcc ._gebc );};_acae ,_ece :=_ae .GetStandardTable (8+int (_dgcc .SbHuffDS ));if _ece !=nil {return 0,_dd .Wrap (_ece ,_bdaa ,"");};return _acae .Decode (_dgcc ._gebc );
};_ddcf ,_fcbe :=_dgcc ._geeg .DecodeInt (_dgcc ._cfeb );if _fcbe !=nil {return 0,_dd .Wrap (_fcbe ,_bdaa ,"\u0063\u0078\u0049\u0041\u0044\u0053");};return int64 (_ddcf ),nil ;};func (_gbdb *SymbolDictionary )setAtPixels ()error {if _gbdb .IsHuffmanEncoded {return nil ;
};_gbdbb :=1;if _gbdb .SdTemplate ==0{_gbdbb =4;};if _fgca :=_gbdb .readAtPixels (_gbdbb );_fgca !=nil {return _fgca ;};return nil ;};func (_bbbaf *TextRegion )setCodingStatistics ()error {if _bbbaf ._fcce ==nil {_bbbaf ._fcce =_gdg .NewStats (512,1);};
if _bbbaf ._efce ==nil {_bbbaf ._efce =_gdg .NewStats (512,1);};if _bbbaf ._cfeb ==nil {_bbbaf ._cfeb =_gdg .NewStats (512,1);};if _bbbaf ._fffc ==nil {_bbbaf ._fffc =_gdg .NewStats (512,1);};if _bbbaf ._cebae ==nil {_bbbaf ._cebae =_gdg .NewStats (512,1);
};if _bbbaf ._dfbbc ==nil {_bbbaf ._dfbbc =_gdg .NewStats (512,1);};if _bbbaf ._cdad ==nil {_bbbaf ._cdad =_gdg .NewStats (512,1);};if _bbbaf ._dged ==nil {_bbbaf ._dged =_gdg .NewStats (1<<uint (_bbbaf ._fgd ),1);};if _bbbaf ._efbc ==nil {_bbbaf ._efbc =_gdg .NewStats (512,1);
};if _bbbaf ._cbggb ==nil {_bbbaf ._cbggb =_gdg .NewStats (512,1);};if _bbbaf ._geeg ==nil {var _ddcfe error ;_bbbaf ._geeg ,_ddcfe =_gdg .New (_bbbaf ._gebc );if _ddcfe !=nil {return _ddcfe ;};};return nil ;};func (_dddf *GenericRegion )setParametersMMR (_bgef bool ,_dcgg ,_ggd int64 ,_adbg ,_fbaa uint32 ,_bbdd byte ,_efcb ,_fcdg bool ,_dacf ,_fdf []int8 ){_dddf .DataOffset =_dcgg ;
_dddf .DataLength =_ggd ;_dddf .RegionSegment =&RegionSegment {};_dddf .RegionSegment .BitmapHeight =_adbg ;_dddf .RegionSegment .BitmapWidth =_fbaa ;_dddf .GBTemplate =_bbdd ;_dddf .IsMMREncoded =_bgef ;_dddf .IsTPGDon =_efcb ;_dddf .GBAtX =_dacf ;_dddf .GBAtY =_fdf ;
};func (_ceac *TextRegion )readAmountOfSymbolInstances ()error {_dgea ,_dafb :=_ceac ._gebc .ReadBits (32);if _dafb !=nil {return _dafb ;};_ceac .NumberOfSymbolInstances =uint32 (_dgea &_c .MaxUint32 );_dcdc :=_ceac .RegionInfo .BitmapWidth *_ceac .RegionInfo .BitmapHeight ;
if _dcdc < _ceac .NumberOfSymbolInstances {_dc .Log .Debug ("\u004c\u0069\u006d\u0069t\u0069\u006e\u0067\u0020t\u0068\u0065\u0020n\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020d\u0065\u0063\u006f\u0064e\u0064\u0020\u0073\u0079m\u0062\u006f\u006c\u0020\u0069n\u0073\u0074\u0061\u006e\u0063\u0065\u0073 \u0074\u006f\u0020\u006f\u006ee\u0020\u0070\u0065\u0072\u0020\u0070\u0069\u0078\u0065l\u0020\u0028\u0020\u0025\u0064\u0020\u0069\u006e\u0073\u0074\u0065\u0061\u0064\u0020\u006f\u0066\u0020\u0025\u0064\u0029",_dcdc ,_ceac .NumberOfSymbolInstances );
_ceac .NumberOfSymbolInstances =_dcdc ;};return nil ;};type Documenter interface{GetPage (int )(Pager ,error );GetGlobalSegment (int )(*Header ,error );};func (_fdebc *TextRegion )readHuffmanFlags ()error {var (_faff int ;_fdac uint64 ;_afagc error ;);
_ ,_afagc =_fdebc ._gebc .ReadBit ();if _afagc !=nil {return _afagc ;};_faff ,_afagc =_fdebc ._gebc .ReadBit ();if _afagc !=nil {return _afagc ;};_fdebc .SbHuffRSize =int8 (_faff );_fdac ,_afagc =_fdebc ._gebc .ReadBits (2);if _afagc !=nil {return _afagc ;
};_fdebc .SbHuffRDY =int8 (_fdac )&0xf;_fdac ,_afagc =_fdebc ._gebc .ReadBits (2);if _afagc !=nil {return _afagc ;};_fdebc .SbHuffRDX =int8 (_fdac )&0xf;_fdac ,_afagc =_fdebc ._gebc .ReadBits (2);if _afagc !=nil {return _afagc ;};_fdebc .SbHuffRDHeight =int8 (_fdac )&0xf;
_fdac ,_afagc =_fdebc ._gebc .ReadBits (2);if _afagc !=nil {return _afagc ;};_fdebc .SbHuffRDWidth =int8 (_fdac )&0xf;_fdac ,_afagc =_fdebc ._gebc .ReadBits (2);if _afagc !=nil {return _afagc ;};_fdebc .SbHuffDT =int8 (_fdac )&0xf;_fdac ,_afagc =_fdebc ._gebc .ReadBits (2);
if _afagc !=nil {return _afagc ;};_fdebc .SbHuffDS =int8 (_fdac )&0xf;_fdac ,_afagc =_fdebc ._gebc .ReadBits (2);if _afagc !=nil {return _afagc ;};_fdebc .SbHuffFS =int8 (_fdac )&0xf;return nil ;};func (_ecgc *GenericRegion )setOverrideFlag (_gfca int ){_ecgc .GBAtOverride [_gfca ]=true ;
_ecgc ._ceab =true ;};func (_ebdd *GenericRegion )updateOverrideFlags ()error {const _fbe ="\u0075\u0070\u0064\u0061te\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _ebdd .GBAtX ==nil ||_ebdd .GBAtY ==nil {return nil ;
};if len (_ebdd .GBAtX )!=len (_ebdd .GBAtY ){return _dd .Errorf (_fbe ,"i\u006eco\u0073i\u0073t\u0065\u006e\u0074\u0020\u0041T\u0020\u0070\u0069x\u0065\u006c\u002e\u0020\u0041m\u006f\u0075\u006et\u0020\u006f\u0066\u0020\u0027\u0078\u0027\u0020\u0070\u0069\u0078e\u006c\u0073\u003a %d\u002c\u0020\u0041\u006d\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0027\u0079\u0027\u0020\u0070\u0069\u0078e\u006cs\u003a\u0020\u0025\u0064",len (_ebdd .GBAtX ),len (_ebdd .GBAtY ));
};_ebdd .GBAtOverride =make ([]bool ,len (_ebdd .GBAtX ));switch _ebdd .GBTemplate {case 0:if !_ebdd .UseExtTemplates {if _ebdd .GBAtX [0]!=3||_ebdd .GBAtY [0]!=-1{_ebdd .setOverrideFlag (0);};if _ebdd .GBAtX [1]!=-3||_ebdd .GBAtY [1]!=-1{_ebdd .setOverrideFlag (1);
};if _ebdd .GBAtX [2]!=2||_ebdd .GBAtY [2]!=-2{_ebdd .setOverrideFlag (2);};if _ebdd .GBAtX [3]!=-2||_ebdd .GBAtY [3]!=-2{_ebdd .setOverrideFlag (3);};}else {if _ebdd .GBAtX [0]!=-2||_ebdd .GBAtY [0]!=0{_ebdd .setOverrideFlag (0);};if _ebdd .GBAtX [1]!=0||_ebdd .GBAtY [1]!=-2{_ebdd .setOverrideFlag (1);
};if _ebdd .GBAtX [2]!=-2||_ebdd .GBAtY [2]!=-1{_ebdd .setOverrideFlag (2);};if _ebdd .GBAtX [3]!=-1||_ebdd .GBAtY [3]!=-2{_ebdd .setOverrideFlag (3);};if _ebdd .GBAtX [4]!=1||_ebdd .GBAtY [4]!=-2{_ebdd .setOverrideFlag (4);};if _ebdd .GBAtX [5]!=2||_ebdd .GBAtY [5]!=-1{_ebdd .setOverrideFlag (5);
};if _ebdd .GBAtX [6]!=-3||_ebdd .GBAtY [6]!=0{_ebdd .setOverrideFlag (6);};if _ebdd .GBAtX [7]!=-4||_ebdd .GBAtY [7]!=0{_ebdd .setOverrideFlag (7);};if _ebdd .GBAtX [8]!=2||_ebdd .GBAtY [8]!=-2{_ebdd .setOverrideFlag (8);};if _ebdd .GBAtX [9]!=3||_ebdd .GBAtY [9]!=-1{_ebdd .setOverrideFlag (9);
};if _ebdd .GBAtX [10]!=-2||_ebdd .GBAtY [10]!=-2{_ebdd .setOverrideFlag (10);};if _ebdd .GBAtX [11]!=-3||_ebdd .GBAtY [11]!=-1{_ebdd .setOverrideFlag (11);};};case 1:if _ebdd .GBAtX [0]!=3||_ebdd .GBAtY [0]!=-1{_ebdd .setOverrideFlag (0);};case 2:if _ebdd .GBAtX [0]!=2||_ebdd .GBAtY [0]!=-1{_ebdd .setOverrideFlag (0);
};case 3:if _ebdd .GBAtX [0]!=2||_ebdd .GBAtY [0]!=-1{_ebdd .setOverrideFlag (0);};};return nil ;};func (_afb *Header )GetSegmentData ()(Segmenter ,error ){var _ddfd Segmenter ;if _afb .SegmentData !=nil {_ddfd =_afb .SegmentData ;};if _ddfd ==nil {_effd ,_agb :=_dad [_afb .Type ];
if !_agb {return nil ,_f .Errorf ("\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0073\u002f\u0020\u0025\u0064\u0020\u0063\u0072e\u0061t\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e\u0020",_afb .Type ,_afb .Type );};_ddfd =_effd ();
_dc .Log .Trace ("\u005b\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u0020\u0061\u0074\u0020\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0030\u0034\u0058",_afb .SegmentNumber ,_afb .SegmentDataStartOffset );
_cdga ,_cdega :=_afb .subInputReader ();if _cdega !=nil {return nil ,_cdega ;};if _fbb :=_ddfd .Init (_afb ,_cdga );_fbb !=nil {_dc .Log .Debug ("\u0049\u006e\u0069\u0074 \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076 \u0066o\u0072\u0020\u0074\u0079\u0070\u0065\u003a \u0025\u0054",_fbb ,_ddfd );
return nil ,_fbb ;};_afb .SegmentData =_ddfd ;};return _ddfd ,nil ;};func (_bdba *Header )readReferredToSegmentNumbers (_fce *_d .Reader ,_cbaf int )([]int ,error ){const _gee ="\u0072\u0065\u0061\u0064R\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053e\u0067m\u0065\u006e\u0074\u004e\u0075\u006d\u0062e\u0072\u0073";
_cbgg :=make ([]int ,_cbaf );if _cbaf > 0{_bdba .RTSegments =make ([]*Header ,_cbaf );var (_fgab uint64 ;_gedb error ;);for _cabe :=0;_cabe < _cbaf ;_cabe ++{_fgab ,_gedb =_fce .ReadBits (byte (_bdba .referenceSize ())<<3);if _gedb !=nil {return nil ,_dd .Wrapf (_gedb ,_gee ,"\u0027\u0025\u0064\u0027 \u0072\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0020\u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u0075\u006db\u0065\u0072",_cabe );
};_cbgg [_cabe ]=int (_fgab &_c .MaxInt32 );};};return _cbgg ,nil ;};func (_ebae *TableSegment )StreamReader ()*_d .Reader {return _ebae ._fgeeg };func (_fgfeb *SymbolDictionary )huffDecodeBmSize ()(int64 ,error ){if _fgfeb ._ffedc ==nil {var (_ecfb int ;
_cdfbg error ;);if _fgfeb .SdHuffDecodeHeightSelection ==3{_ecfb ++;};if _fgfeb .SdHuffDecodeWidthSelection ==3{_ecfb ++;};_fgfeb ._ffedc ,_cdfbg =_fgfeb .getUserTable (_ecfb );if _cdfbg !=nil {return 0,_cdfbg ;};};return _fgfeb ._ffedc .Decode (_fgfeb ._ccba );
};func (_cbgd *PageInformationSegment )CombinationOperator ()_bf .CombinationOperator {return _cbgd ._ggeb ;};func (_bccg *Header )writeReferredToCount (_afeg _d .BinaryWriter )(_beaf int ,_aff error ){const _fgac ="w\u0072i\u0074\u0065\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0043ou\u006e\u0074";
_bccg .RTSNumbers =make ([]int ,len (_bccg .RTSegments ));for _cgff ,_edfe :=range _bccg .RTSegments {_bccg .RTSNumbers [_cgff ]=int (_edfe .SegmentNumber );};if len (_bccg .RTSNumbers )<=4{var _eggf byte ;if len (_bccg .RetainBits )>=1{_eggf =_bccg .RetainBits [0];
};_eggf |=byte (len (_bccg .RTSNumbers ))<<5;if _aff =_afeg .WriteByte (_eggf );_aff !=nil {return 0,_dd .Wrap (_aff ,_fgac ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return 1,nil ;};_daff :=uint32 (len (_bccg .RTSNumbers ));
_fgg :=make ([]byte ,4+_a .Ceil (len (_bccg .RTSNumbers )+1,8));_daff |=0x7<<29;_gd .BigEndian .PutUint32 (_fgg ,_daff );copy (_fgg [1:],_bccg .RetainBits );_beaf ,_aff =_afeg .Write (_fgg );if _aff !=nil {return 0,_dd .Wrap (_aff ,_fgac ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");
};return _beaf ,nil ;};func (_ggf *GenericRegion )GetRegionInfo ()*RegionSegment {return _ggf .RegionSegment };func (_baf *GenericRefinementRegion )GetRegionInfo ()*RegionSegment {return _baf .RegionInfo };func (_bab *Header )readSegmentPageAssociation (_fcfb Documenter ,_aaabb *_d .Reader ,_eac uint64 ,_cdee ...int )(_gdeg error ){const _bcae ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074P\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061t\u0069\u006f\u006e";
if !_bab .PageAssociationFieldSize {_gffa ,_cafc :=_aaabb .ReadBits (8);if _cafc !=nil {return _dd .Wrap (_cafc ,_bcae ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_bab .PageAssociation =int (_gffa &0xFF);}else {_cef ,_fbff :=_aaabb .ReadBits (32);
if _fbff !=nil {return _dd .Wrap (_fbff ,_bcae ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_bab .PageAssociation =int (_cef &_c .MaxInt32 );};if _eac ==0{return nil ;};if _bab .PageAssociation !=0{_afcg ,_adfg :=_fcfb .GetPage (_bab .PageAssociation );
if _adfg !=nil {return _dd .Wrap (_adfg ,_bcae ,"\u0061s\u0073\u006f\u0063\u0069a\u0074\u0065\u0064\u0020\u0070a\u0067e\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006ed");};var _egc int ;for _acfc :=uint64 (0);_acfc < _eac ;_acfc ++{_egc =_cdee [_acfc ];
_bab .RTSegments [_acfc ],_adfg =_afcg .GetSegment (_egc );if _adfg !=nil {var _dgce error ;_bab .RTSegments [_acfc ],_dgce =_fcfb .GetGlobalSegment (_egc );if _dgce !=nil {return _dd .Wrapf (_adfg ,_bcae ,"\u0072\u0065\u0066\u0065\u0072\u0065n\u0063\u0065\u0020s\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064\u0020\u0061\u0074\u0020pa\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0072\u0020\u0069\u006e\u0020\u0067\u006c\u006f\u0062\u0061\u006c\u0073",_bab .PageAssociation );
};};};return nil ;};for _deef :=uint64 (0);_deef < _eac ;_deef ++{_bab .RTSegments [_deef ],_gdeg =_fcfb .GetGlobalSegment (_cdee [_deef ]);if _gdeg !=nil {return _dd .Wrapf (_gdeg ,_bcae ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u003a\u0020\u0027\u0025d\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064",_cdee [_deef ]);
};};return nil ;};func (_ffed *PatternDictionary )readGrayMax ()error {_bfcd ,_bgge :=_ffed ._fgbg .ReadBits (32);if _bgge !=nil {return _bgge ;};_ffed .GrayMax =uint32 (_bfcd &_c .MaxUint32 );return nil ;};func (_gbd *SymbolDictionary )encodeRefinementATFlags (_geba _d .BinaryWriter )(_efdde int ,_gagc error ){const _gcgg ="\u0065\u006e\u0063od\u0065\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0041\u0054\u0046\u006c\u0061\u0067\u0073";
if !_gbd .UseRefinementAggregation ||_gbd .SdrTemplate !=0{return 0,nil ;};for _accf :=0;_accf < 2;_accf ++{if _gagc =_geba .WriteByte (byte (_gbd .SdrATX [_accf ]));_gagc !=nil {return _efdde ,_dd .Wrapf (_gagc ,_gcgg ,"\u0053\u0064\u0072\u0041\u0054\u0058\u005b\u0025\u0064\u005d",_accf );
};_efdde ++;if _gagc =_geba .WriteByte (byte (_gbd .SdrATY [_accf ]));_gagc !=nil {return _efdde ,_dd .Wrapf (_gagc ,_gcgg ,"\u0053\u0064\u0072\u0041\u0054\u0059\u005b\u0025\u0064\u005d",_accf );};_efdde ++;};return _efdde ,nil ;};func (_dfdd *TextRegion )createRegionBitmap ()error {_dfdd .RegionBitmap =_bf .New (int (_dfdd .RegionInfo .BitmapWidth ),int (_dfdd .RegionInfo .BitmapHeight ));
if _dfdd .DefaultPixel !=0{_dfdd .RegionBitmap .SetDefaultPixel ();};return nil ;};func (_aa *EndOfStripe )Init (h *Header ,r *_d .Reader )error {_aa ._ba =r ;return _aa .parseHeader ()};type RegionSegment struct{_bbdb *_d .Reader ;BitmapWidth uint32 ;
BitmapHeight uint32 ;XLocation uint32 ;YLocation uint32 ;CombinaionOperator _bf .CombinationOperator ;};type Header struct{SegmentNumber uint32 ;Type Type ;RetainFlag bool ;PageAssociation int ;PageAssociationFieldSize bool ;RTSegments []*Header ;HeaderLength int64 ;
SegmentDataLength uint64 ;SegmentDataStartOffset uint64 ;Reader *_d .Reader ;SegmentData Segmenter ;RTSNumbers []int ;RetainBits []uint8 ;};func (_cdca *SymbolDictionary )decodeNewSymbols (_bbbe ,_faac uint32 ,_fecf *_bf .Bitmap ,_dfed ,_feef int32 )error {if _cdca ._deea ==nil {_cdca ._deea =_ceg (_cdca ._ccba ,nil );
if _cdca ._acd ==nil {var _afcc error ;_cdca ._acd ,_afcc =_gdg .New (_cdca ._ccba );if _afcc !=nil {return _afcc ;};};if _cdca ._fcef ==nil {_cdca ._fcef =_gdg .NewStats (65536,1);};};_cdca ._deea .setParameters (_cdca ._fcef ,_cdca ._acd ,_cdca .SdrTemplate ,_bbbe ,_faac ,_fecf ,_dfed ,_feef ,false ,_cdca .SdrATX ,_cdca .SdrATY );
return _cdca .addSymbol (_cdca ._deea );};func (_ggc *Header )parse (_fcadf Documenter ,_acaa *_d .Reader ,_dce int64 ,_adcc OrganizationType )(_cffb error ){const _feb ="\u0070\u0061\u0072s\u0065";_dc .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u005b\u0050A\u0052\u0053\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");
defer func (){if _cffb !=nil {_dc .Log .Trace ("\u005b\u0053\u0045GM\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045R\u005d[\u0050A\u0052S\u0045\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_cffb );}else {_dc .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052]\u005bP\u0041\u0052\u0053\u0045\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
};}();_ ,_cffb =_acaa .Seek (_dce ,_b .SeekStart );if _cffb !=nil {return _dd .Wrap (_cffb ,_feb ,"\u0073\u0065\u0065\u006b\u0020\u0073\u0074\u0061\u0072\u0074");};if _cffb =_ggc .readSegmentNumber (_acaa );_cffb !=nil {return _dd .Wrap (_cffb ,_feb ,"");
};if _cffb =_ggc .readHeaderFlags ();_cffb !=nil {return _dd .Wrap (_cffb ,_feb ,"");};var _egeaa uint64 ;_egeaa ,_cffb =_ggc .readNumberOfReferredToSegments (_acaa );if _cffb !=nil {return _dd .Wrap (_cffb ,_feb ,"");};_ggc .RTSNumbers ,_cffb =_ggc .readReferredToSegmentNumbers (_acaa ,int (_egeaa ));
if _cffb !=nil {return _dd .Wrap (_cffb ,_feb ,"");};_cffb =_ggc .readSegmentPageAssociation (_fcadf ,_acaa ,_egeaa ,_ggc .RTSNumbers ...);if _cffb !=nil {return _dd .Wrap (_cffb ,_feb ,"");};if _ggc .Type !=TEndOfFile {if _cffb =_ggc .readSegmentDataLength (_acaa );
_cffb !=nil {return _dd .Wrap (_cffb ,_feb ,"");};};_ggc .readDataStartOffset (_acaa ,_adcc );_ggc .readHeaderLength (_acaa ,_dce );_dc .Log .Trace ("\u0025\u0073",_ggc );return nil ;};func (_ceca *TextRegion )initSymbols ()error {const _abbb ="i\u006e\u0069\u0074\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
for _ ,_abccg :=range _ceca .Header .RTSegments {if _abccg ==nil {return _dd .Error (_abbb ,"\u006e\u0069\u006c\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020pr\u006f\u0076\u0069\u0064\u0065\u0064 \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0074\u0065\u0078\u0074\u0020\u0072\u0065g\u0069\u006f\u006e\u0020\u0053\u0079\u006d\u0062o\u006c\u0073");
};if _abccg .Type ==0{_dabc ,_cegg :=_abccg .GetSegmentData ();if _cegg !=nil {return _dd .Wrap (_cegg ,_abbb ,"");};_dagc ,_fbga :=_dabc .(*SymbolDictionary );if !_fbga {return _dd .Error (_abbb ,"\u0072e\u0066\u0065r\u0072\u0065\u0064 \u0054\u006f\u0020\u0053\u0065\u0067\u006de\u006e\u0074\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_dagc ._bfbb =_ceca ._dged ;_ccfa ,_cegg :=_dagc .GetDictionary ();if _cegg !=nil {return _dd .Wrap (_cegg ,_abbb ,"");};_ceca .Symbols =append (_ceca .Symbols ,_ccfa ...);};};_ceca .NumberOfSymbols =uint32 (len (_ceca .Symbols ));return nil ;};func (_afda *SymbolDictionary )setExportedSymbols (_dfge []int ){for _fagc :=uint32 (0);
_fagc < _afda ._gdeaa +_afda .NumberOfNewSymbols ;_fagc ++{if _dfge [_fagc ]==1{var _aaaa *_bf .Bitmap ;if _fagc < _afda ._gdeaa {_aaaa =_afda ._cgge [_fagc ];}else {_aaaa =_afda ._bfgd [_fagc -_afda ._gdeaa ];};_dc .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u002d\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u0020\u0041\u0064\u0064 E\u0078\u0070\u006fr\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027%\u0073\u0027",_aaaa );
_afda ._dgfb =append (_afda ._dgfb ,_aaaa );};};};func (_aggc *TextRegion )Encode (w _d .BinaryWriter )(_agaa int ,_eeabd error ){const _fdeb ="\u0054\u0065\u0078\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u002e\u0045n\u0063\u006f\u0064\u0065";if _agaa ,_eeabd =_aggc .RegionInfo .Encode (w );
_eeabd !=nil {return _agaa ,_dd .Wrap (_eeabd ,_fdeb ,"");};var _fddg int ;if _fddg ,_eeabd =_aggc .encodeFlags (w );_eeabd !=nil {return _agaa ,_dd .Wrap (_eeabd ,_fdeb ,"");};_agaa +=_fddg ;if _fddg ,_eeabd =_aggc .encodeSymbols (w );_eeabd !=nil {return _agaa ,_dd .Wrap (_eeabd ,_fdeb ,"");
};_agaa +=_fddg ;return _agaa ,nil ;};func (_bggf *PatternDictionary )GetDictionary ()([]*_bf .Bitmap ,error ){if _bggf .Patterns !=nil {return _bggf .Patterns ,nil ;};if !_bggf .IsMMREncoded {_bggf .setGbAtPixels ();};_cabfc :=NewGenericRegion (_bggf ._fgbg );
_cabfc .setParametersMMR (_bggf .IsMMREncoded ,_bggf .DataOffset ,_bggf .DataLength ,uint32 (_bggf .HdpHeight ),(_bggf .GrayMax +1)*uint32 (_bggf .HdpWidth ),_bggf .HDTemplate ,false ,false ,_bggf .GBAtX ,_bggf .GBAtY );_fbdc ,_cagfa :=_cabfc .GetRegionBitmap ();
if _cagfa !=nil {return nil ,_cagfa ;};if _cagfa =_bggf .extractPatterns (_fbdc );_cagfa !=nil {return nil ,_cagfa ;};return _bggf .Patterns ,nil ;};func (_dcac *TextRegion )computeSymbolCodeLength ()error {if _dcac .IsHuffmanEncoded {return _dcac .symbolIDCodeLengths ();
};_dcac ._fgd =int8 (_c .Ceil (_c .Log (float64 (_dcac .NumberOfSymbols ))/_c .Log (2)));return nil ;};func (_adde *SymbolDictionary )addSymbol (_gcae Regioner )error {_fcda ,_gbab :=_gcae .GetRegionBitmap ();if _gbab !=nil {return _gbab ;};_adde ._bfgd [_adde ._ageeg ]=_fcda ;
_adde ._agfa =append (_adde ._agfa ,_fcda );_dc .Log .Trace ("\u005b\u0053YM\u0042\u004f\u004c \u0044\u0049\u0043\u0054ION\u0041RY\u005d\u0020\u0041\u0064\u0064\u0065\u0064 s\u0079\u006d\u0062\u006f\u006c\u003a\u0020%\u0073",_fcda );return nil ;};func (_ddad *HalftoneRegion )parseHeader ()error {if _fdfg :=_ddad .RegionSegment .parseHeader ();
_fdfg !=nil {return _fdfg ;};_cabf ,_cdeb :=_ddad ._ceed .ReadBit ();if _cdeb !=nil {return _cdeb ;};_ddad .HDefaultPixel =int8 (_cabf );_bggc ,_cdeb :=_ddad ._ceed .ReadBits (3);if _cdeb !=nil {return _cdeb ;};_ddad .CombinationOperator =_bf .CombinationOperator (_bggc &0xf);
_cabf ,_cdeb =_ddad ._ceed .ReadBit ();if _cdeb !=nil {return _cdeb ;};if _cabf ==1{_ddad .HSkipEnabled =true ;};_bggc ,_cdeb =_ddad ._ceed .ReadBits (2);if _cdeb !=nil {return _cdeb ;};_ddad .HTemplate =byte (_bggc &0xf);_cabf ,_cdeb =_ddad ._ceed .ReadBit ();
if _cdeb !=nil {return _cdeb ;};if _cabf ==1{_ddad .IsMMREncoded =true ;};_bggc ,_cdeb =_ddad ._ceed .ReadBits (32);if _cdeb !=nil {return _cdeb ;};_ddad .HGridWidth =uint32 (_bggc &_c .MaxUint32 );_bggc ,_cdeb =_ddad ._ceed .ReadBits (32);if _cdeb !=nil {return _cdeb ;
};_ddad .HGridHeight =uint32 (_bggc &_c .MaxUint32 );_bggc ,_cdeb =_ddad ._ceed .ReadBits (32);if _cdeb !=nil {return _cdeb ;};_ddad .HGridX =int32 (_bggc &_c .MaxInt32 );_bggc ,_cdeb =_ddad ._ceed .ReadBits (32);if _cdeb !=nil {return _cdeb ;};_ddad .HGridY =int32 (_bggc &_c .MaxInt32 );
_bggc ,_cdeb =_ddad ._ceed .ReadBits (16);if _cdeb !=nil {return _cdeb ;};_ddad .HRegionX =uint16 (_bggc &_c .MaxUint16 );_bggc ,_cdeb =_ddad ._ceed .ReadBits (16);if _cdeb !=nil {return _cdeb ;};_ddad .HRegionY =uint16 (_bggc &_c .MaxUint16 );if _cdeb =_ddad .computeSegmentDataStructure ();
_cdeb !=nil {return _cdeb ;};return _ddad .checkInput ();};func (_bbcf *TextRegion )decodeID ()(int64 ,error ){if _bbcf .IsHuffmanEncoded {if _bbcf ._accb ==nil {_ggfd ,_gfdg :=_bbcf ._gebc .ReadBits (byte (_bbcf ._fgd ));return int64 (_ggfd ),_gfdg ;};
return _bbcf ._accb .Decode (_bbcf ._gebc );};return _bbcf ._geeg .DecodeIAID (uint64 (_bbcf ._fgd ),_bbcf ._dged );};func (_fdc *Header )String ()string {_acg :=&_bb .Builder {};_acg .WriteString ("\u000a[\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045A\u0044\u0045\u0052\u005d\u000a");
_acg .WriteString (_f .Sprintf ("\t\u002d\u0020\u0053\u0065gm\u0065n\u0074\u004e\u0075\u006d\u0062e\u0072\u003a\u0020\u0025\u0076\u000a",_fdc .SegmentNumber ));_acg .WriteString (_f .Sprintf ("\u0009\u002d\u0020T\u0079\u0070\u0065\u003a\u0020\u0025\u0076\u000a",_fdc .Type ));
_acg .WriteString (_f .Sprintf ("\u0009-\u0020R\u0065\u0074\u0061\u0069\u006eF\u006c\u0061g\u003a\u0020\u0025\u0076\u000a",_fdc .RetainFlag ));_acg .WriteString (_f .Sprintf ("\u0009\u002d\u0020Pa\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_fdc .PageAssociation ));
_acg .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0050\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074i\u006fn\u0046\u0069\u0065\u006c\u0064\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_fdc .PageAssociationFieldSize ));_acg .WriteString ("\u0009-\u0020R\u0054\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u0053\u003a\u000a");
for _ ,_dcab :=range _fdc .RTSNumbers {_acg .WriteString (_f .Sprintf ("\u0009\t\u002d\u0020\u0025\u0064\u000a",_dcab ));};_acg .WriteString (_f .Sprintf ("\t\u002d \u0048\u0065\u0061\u0064\u0065\u0072\u004c\u0065n\u0067\u0074\u0068\u003a %\u0076\u000a",_fdc .HeaderLength ));
_acg .WriteString (_f .Sprintf ("\u0009-\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061L\u0065n\u0067\u0074\u0068\u003a\u0020\u0025\u0076\n",_fdc .SegmentDataLength ));_acg .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074D\u0061\u0074\u0061\u0053\u0074\u0061\u0072t\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0076\u000a",_fdc .SegmentDataStartOffset ));
return _acg .String ();};func (_dgfddg *Header )writeSegmentPageAssociation (_cbgb _d .BinaryWriter )(_ecad int ,_eecd error ){const _bfff ="w\u0072\u0069\u0074\u0065\u0053\u0065g\u006d\u0065\u006e\u0074\u0050\u0061\u0067\u0065\u0041s\u0073\u006f\u0063i\u0061t\u0069\u006f\u006e";
if _dgfddg .pageSize ()!=4{if _eecd =_cbgb .WriteByte (byte (_dgfddg .PageAssociation ));_eecd !=nil {return 0,_dd .Wrap (_eecd ,_bfff ,"\u0070\u0061\u0067\u0065\u0053\u0069\u007a\u0065\u0020\u0021\u003d\u0020\u0034");};return 1,nil ;};_fbbe :=make ([]byte ,4);
_gd .BigEndian .PutUint32 (_fbbe ,uint32 (_dgfddg .PageAssociation ));if _ecad ,_eecd =_cbgb .Write (_fbbe );_eecd !=nil {return 0,_dd .Wrap (_eecd ,_bfff ,"\u0034 \u0062y\u0074\u0065\u0020\u0070\u0061g\u0065\u0020n\u0075\u006d\u0062\u0065\u0072");};return _ecad ,nil ;
};func (_gggf *PatternDictionary )computeSegmentDataStructure ()error {_gggf .DataOffset =_gggf ._fgbg .AbsolutePosition ();_gggf .DataHeaderLength =_gggf .DataOffset -_gggf .DataHeaderOffset ;_gggf .DataLength =int64 (_gggf ._fgbg .AbsoluteLength ())-_gggf .DataHeaderLength ;
return nil ;};func (_ageegf *SymbolDictionary )readNumberOfExportedSymbols ()error {_bddc ,_fgec :=_ageegf ._ccba .ReadBits (32);if _fgec !=nil {return _fgec ;};_ageegf .NumberOfExportedSymbols =uint32 (_bddc &_c .MaxUint32 );return nil ;};func (_adfe *PageInformationSegment )Size ()int {return 19};
var _ _ae .BasicTabler =&TableSegment {};func (_ddf *GenericRegion )overrideAtTemplate0b (_eab ,_aeb ,_aad ,_eed ,_geg ,_edf int )int {if _ddf .GBAtOverride [0]{_eab &=0xFFFD;if _ddf .GBAtY [0]==0&&_ddf .GBAtX [0]>=-int8 (_geg ){_eab |=(_eed >>uint (int8 (_edf )-_ddf .GBAtX [0]&0x1))<<1;
}else {_eab |=int (_ddf .getPixel (_aeb +int (_ddf .GBAtX [0]),_aad +int (_ddf .GBAtY [0])))<<1;};};if _ddf .GBAtOverride [1]{_eab &=0xDFFF;if _ddf .GBAtY [1]==0&&_ddf .GBAtX [1]>=-int8 (_geg ){_eab |=(_eed >>uint (int8 (_edf )-_ddf .GBAtX [1]&0x1))<<13;
}else {_eab |=int (_ddf .getPixel (_aeb +int (_ddf .GBAtX [1]),_aad +int (_ddf .GBAtY [1])))<<13;};};if _ddf .GBAtOverride [2]{_eab &=0xFDFF;if _ddf .GBAtY [2]==0&&_ddf .GBAtX [2]>=-int8 (_geg ){_eab |=(_eed >>uint (int8 (_edf )-_ddf .GBAtX [2]&0x1))<<9;
}else {_eab |=int (_ddf .getPixel (_aeb +int (_ddf .GBAtX [2]),_aad +int (_ddf .GBAtY [2])))<<9;};};if _ddf .GBAtOverride [3]{_eab &=0xBFFF;if _ddf .GBAtY [3]==0&&_ddf .GBAtX [3]>=-int8 (_geg ){_eab |=(_eed >>uint (int8 (_edf )-_ddf .GBAtX [3]&0x1))<<14;
}else {_eab |=int (_ddf .getPixel (_aeb +int (_ddf .GBAtX [3]),_aad +int (_ddf .GBAtY [3])))<<14;};};if _ddf .GBAtOverride [4]{_eab &=0xEFFF;if _ddf .GBAtY [4]==0&&_ddf .GBAtX [4]>=-int8 (_geg ){_eab |=(_eed >>uint (int8 (_edf )-_ddf .GBAtX [4]&0x1))<<12;
}else {_eab |=int (_ddf .getPixel (_aeb +int (_ddf .GBAtX [4]),_aad +int (_ddf .GBAtY [4])))<<12;};};if _ddf .GBAtOverride [5]{_eab &=0xFFDF;if _ddf .GBAtY [5]==0&&_ddf .GBAtX [5]>=-int8 (_geg ){_eab |=(_eed >>uint (int8 (_edf )-_ddf .GBAtX [5]&0x1))<<5;
}else {_eab |=int (_ddf .getPixel (_aeb +int (_ddf .GBAtX [5]),_aad +int (_ddf .GBAtY [5])))<<5;};};if _ddf .GBAtOverride [6]{_eab &=0xFFFB;if _ddf .GBAtY [6]==0&&_ddf .GBAtX [6]>=-int8 (_geg ){_eab |=(_eed >>uint (int8 (_edf )-_ddf .GBAtX [6]&0x1))<<2;
}else {_eab |=int (_ddf .getPixel (_aeb +int (_ddf .GBAtX [6]),_aad +int (_ddf .GBAtY [6])))<<2;};};if _ddf .GBAtOverride [7]{_eab &=0xFFF7;if _ddf .GBAtY [7]==0&&_ddf .GBAtX [7]>=-int8 (_geg ){_eab |=(_eed >>uint (int8 (_edf )-_ddf .GBAtX [7]&0x1))<<3;
}else {_eab |=int (_ddf .getPixel (_aeb +int (_ddf .GBAtX [7]),_aad +int (_ddf .GBAtY [7])))<<3;};};if _ddf .GBAtOverride [8]{_eab &=0xF7FF;if _ddf .GBAtY [8]==0&&_ddf .GBAtX [8]>=-int8 (_geg ){_eab |=(_eed >>uint (int8 (_edf )-_ddf .GBAtX [8]&0x1))<<11;
}else {_eab |=int (_ddf .getPixel (_aeb +int (_ddf .GBAtX [8]),_aad +int (_ddf .GBAtY [8])))<<11;};};if _ddf .GBAtOverride [9]{_eab &=0xFFEF;if _ddf .GBAtY [9]==0&&_ddf .GBAtX [9]>=-int8 (_geg ){_eab |=(_eed >>uint (int8 (_edf )-_ddf .GBAtX [9]&0x1))<<4;
}else {_eab |=int (_ddf .getPixel (_aeb +int (_ddf .GBAtX [9]),_aad +int (_ddf .GBAtY [9])))<<4;};};if _ddf .GBAtOverride [10]{_eab &=0x7FFF;if _ddf .GBAtY [10]==0&&_ddf .GBAtX [10]>=-int8 (_geg ){_eab |=(_eed >>uint (int8 (_edf )-_ddf .GBAtX [10]&0x1))<<15;
}else {_eab |=int (_ddf .getPixel (_aeb +int (_ddf .GBAtX [10]),_aad +int (_ddf .GBAtY [10])))<<15;};};if _ddf .GBAtOverride [11]{_eab &=0xFDFF;if _ddf .GBAtY [11]==0&&_ddf .GBAtX [11]>=-int8 (_geg ){_eab |=(_eed >>uint (int8 (_edf )-_ddf .GBAtX [11]&0x1))<<10;
}else {_eab |=int (_ddf .getPixel (_aeb +int (_ddf .GBAtX [11]),_aad +int (_ddf .GBAtY [11])))<<10;};};return _eab ;};func (_aaee *TextRegion )decodeRdw ()(int64 ,error ){const _eedb ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064w";if _aaee .IsHuffmanEncoded {if _aaee .SbHuffRDWidth ==3{if _aaee ._aeag ==nil {var (_fafa int ;
_dcfg error ;);if _aaee .SbHuffFS ==3{_fafa ++;};if _aaee .SbHuffDS ==3{_fafa ++;};if _aaee .SbHuffDT ==3{_fafa ++;};_aaee ._aeag ,_dcfg =_aaee .getUserTable (_fafa );if _dcfg !=nil {return 0,_dd .Wrap (_dcfg ,_eedb ,"");};};return _aaee ._aeag .Decode (_aaee ._gebc );
};_cead ,_abgd :=_ae .GetStandardTable (14+int (_aaee .SbHuffRDWidth ));if _abgd !=nil {return 0,_dd .Wrap (_abgd ,_eedb ,"");};return _cead .Decode (_aaee ._gebc );};_dadd ,_cbdfd :=_aaee ._geeg .DecodeInt (_aaee ._dfbbc );if _cbdfd !=nil {return 0,_dd .Wrap (_cbdfd ,_eedb ,"");
};return int64 (_dadd ),nil ;};func (_fdec *PatternDictionary )parseHeader ()error {_dc .Log .Trace ("\u005b\u0050\u0041\u0054\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054I\u004f\u004e\u0041\u0052\u0059\u005d[\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d\u0020b\u0065\u0067\u0069\u006e");
defer func (){_dc .Log .Trace ("\u005b\u0050\u0041T\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u005b\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
}();_ ,_gdefg :=_fdec ._fgbg .ReadBits (5);if _gdefg !=nil {return _gdefg ;};if _gdefg =_fdec .readTemplate ();_gdefg !=nil {return _gdefg ;};if _gdefg =_fdec .readIsMMREncoded ();_gdefg !=nil {return _gdefg ;};if _gdefg =_fdec .readPatternWidthAndHeight ();
_gdefg !=nil {return _gdefg ;};if _gdefg =_fdec .readGrayMax ();_gdefg !=nil {return _gdefg ;};if _gdefg =_fdec .computeSegmentDataStructure ();_gdefg !=nil {return _gdefg ;};return _fdec .checkInput ();};func _ceee (_egaf int )int {if _egaf ==0{return 0;
};_egaf |=_egaf >>1;_egaf |=_egaf >>2;_egaf |=_egaf >>4;_egaf |=_egaf >>8;_egaf |=_egaf >>16;return (_egaf +1)>>1;};func (_fdfd *HalftoneRegion )computeGrayScalePlanes (_aebf []*_bf .Bitmap ,_beab int )([][]int ,error ){_gdc :=make ([][]int ,_fdfd .HGridHeight );
for _adfd :=0;_adfd < len (_gdc );_adfd ++{_gdc [_adfd ]=make ([]int ,_fdfd .HGridWidth );};for _cagag :=0;_cagag < int (_fdfd .HGridHeight );_cagag ++{for _deb :=0;_deb < int (_fdfd .HGridWidth );_deb +=8{var _gab int ;if _ebda :=int (_fdfd .HGridWidth )-_deb ;
_ebda > 8{_gab =8;}else {_gab =_ebda ;};_bcbc :=_aebf [0].GetByteIndex (_deb ,_cagag );for _eedc :=0;_eedc < _gab ;_eedc ++{_abg :=_eedc +_deb ;_gdc [_cagag ][_abg ]=0;for _acee :=0;_acee < _beab ;_acee ++{_abfb ,_eaff :=_aebf [_acee ].GetByte (_bcbc );
if _eaff !=nil {return nil ,_eaff ;};_adcf :=_abfb >>uint (7-_abg &7);_dgb :=_adcf &1;_eeg :=1<<uint (_acee );_fee :=int (_dgb )*_eeg ;_gdc [_cagag ][_abg ]+=_fee ;};};};};return _gdc ,nil ;};func (_dfbb *HalftoneRegion )renderPattern (_dgfd [][]int )(_ccf error ){var _dbbb ,_cdcb int ;
for _bag :=0;_bag < int (_dfbb .HGridHeight );_bag ++{for _bfbe :=0;_bfbe < int (_dfbb .HGridWidth );_bfbe ++{_dbbb =_dfbb .computeX (_bag ,_bfbe );_cdcb =_dfbb .computeY (_bag ,_bfbe );_acbcg :=_dfbb .Patterns [_dgfd [_bag ][_bfbe ]];if _ccf =_bf .Blit (_acbcg ,_dfbb .HalftoneRegionBitmap ,_dbbb +int (_dfbb .HGridX ),_cdcb +int (_dfbb .HGridY ),_dfbb .CombinationOperator );
_ccf !=nil {return _ccf ;};};};return nil ;};func (_gecbcb *TextRegion )String ()string {_efdfc :=&_bb .Builder {};_efdfc .WriteString ("\u000a[\u0054E\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u000a");_efdfc .WriteString (_gecbcb .RegionInfo .String ()+"\u000a");
_efdfc .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053br\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0025\u0076\u000a",_gecbcb .SbrTemplate ));_efdfc .WriteString (_f .Sprintf ("\u0009-\u0020S\u0062\u0044\u0073\u004f\u0066f\u0073\u0065t\u003a\u0020\u0025\u0076\u000a",_gecbcb .SbDsOffset ));
_efdfc .WriteString (_f .Sprintf ("\t\u002d \u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0050i\u0078\u0065\u006c\u003a %\u0076\u000a",_gecbcb .DefaultPixel ));_efdfc .WriteString (_f .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0076\u000a",_gecbcb .CombinationOperator ));
_efdfc .WriteString (_f .Sprintf ("\t\u002d \u0049\u0073\u0054\u0072\u0061\u006e\u0073\u0070o\u0073\u0065\u0064\u003a %\u0076\u000a",_gecbcb .IsTransposed ));_efdfc .WriteString (_f .Sprintf ("\u0009\u002d\u0020Re\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0043\u006f\u0072\u006e\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_gecbcb .ReferenceCorner ));
_efdfc .WriteString (_f .Sprintf ("\t\u002d\u0020\u0055\u0073eR\u0065f\u0069\u006e\u0065\u006d\u0065n\u0074\u003a\u0020\u0025\u0076\u000a",_gecbcb .UseRefinement ));_efdfc .WriteString (_f .Sprintf ("\u0009-\u0020\u0049\u0073\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045n\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0076\u000a",_gecbcb .IsHuffmanEncoded ));
if _gecbcb .IsHuffmanEncoded {_efdfc .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_gecbcb .SbHuffRSize ));_efdfc .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0059:\u0020\u0025\u0076\u000a",_gecbcb .SbHuffRDY ));
_efdfc .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0058:\u0020\u0025\u0076\u000a",_gecbcb .SbHuffRDX ));_efdfc .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069\u0067\u0068\u0074\u003a\u0020\u0025v\u000a",_gecbcb .SbHuffRDHeight ));
_efdfc .WriteString (_f .Sprintf ("\t\u002d\u0020\u0053\u0062Hu\u0066f\u0052\u0044\u0057\u0069\u0064t\u0068\u003a\u0020\u0025\u0076\u000a",_gecbcb .SbHuffRDWidth ));_efdfc .WriteString (_f .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0054\u003a\u0020\u0025\u0076\u000a",_gecbcb .SbHuffDT ));
_efdfc .WriteString (_f .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0053\u003a\u0020\u0025\u0076\u000a",_gecbcb .SbHuffDS ));_efdfc .WriteString (_f .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0046\u0053\u003a\u0020\u0025\u0076\u000a",_gecbcb .SbHuffFS ));
};_efdfc .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_gecbcb .SbrATX ));_efdfc .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0059:\u0020\u0025\u0076\u000a",_gecbcb .SbrATY ));
_efdfc .WriteString (_f .Sprintf ("\u0009\u002d\u0020N\u0075\u006d\u0062\u0065r\u004f\u0066\u0053\u0079\u006d\u0062\u006fl\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_gecbcb .NumberOfSymbolInstances ));_efdfc .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_gecbcb .SbrATX ));
return _efdfc .String ();};func (_gcgb *PageInformationSegment )readDefaultPixelValue ()error {_fbad ,_dbdb :=_gcgb ._afa .ReadBit ();if _dbdb !=nil {return _dbdb ;};_gcgb .DefaultPixelValue =uint8 (_fbad &0xf);return nil ;};func (_bdfe *SymbolDictionary )encodeFlags (_bfggc _d .BinaryWriter )(_bbcg int ,_afaff error ){const _bfef ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _afaff =_bfggc .SkipBits (3);_afaff !=nil {return 0,_dd .Wrap (_afaff ,_bfef ,"\u0065\u006d\u0070\u0074\u0079\u0020\u0062\u0069\u0074\u0073");};var _bcee int ;if _bdfe .SdrTemplate > 0{_bcee =1;};if _afaff =_bfggc .WriteBit (_bcee );_afaff !=nil {return _bbcg ,_dd .Wrap (_afaff ,_bfef ,"s\u0064\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");
};_bcee =0;if _bdfe .SdTemplate > 1{_bcee =1;};if _afaff =_bfggc .WriteBit (_bcee );_afaff !=nil {return _bbcg ,_dd .Wrap (_afaff ,_bfef ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_bcee =0;if _bdfe .SdTemplate ==1||_bdfe .SdTemplate ==3{_bcee =1;
};if _afaff =_bfggc .WriteBit (_bcee );_afaff !=nil {return _bbcg ,_dd .Wrap (_afaff ,_bfef ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_bcee =0;if _bdfe ._ggfgb {_bcee =1;};if _afaff =_bfggc .WriteBit (_bcee );_afaff !=nil {return _bbcg ,_dd .Wrap (_afaff ,_bfef ,"\u0063\u006f\u0064in\u0067\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0065\u0064");
};_bcee =0;if _bdfe ._abea {_bcee =1;};if _afaff =_bfggc .WriteBit (_bcee );_afaff !=nil {return _bbcg ,_dd .Wrap (_afaff ,_bfef ,"\u0063\u006f\u0064\u0069ng\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0075\u0073\u0065\u0064");};_bcee =0;if _bdfe .SdHuffAggInstanceSelection {_bcee =1;
};if _afaff =_bfggc .WriteBit (_bcee );_afaff !=nil {return _bbcg ,_dd .Wrap (_afaff ,_bfef ,"\u0073\u0064\u0048\u0075\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074");};_bcee =int (_bdfe .SdHuffBMSizeSelection );if _afaff =_bfggc .WriteBit (_bcee );
_afaff !=nil {return _bbcg ,_dd .Wrap (_afaff ,_bfef ,"\u0073\u0064\u0048u\u0066\u0066\u0042\u006d\u0053\u0069\u007a\u0065");};_bcee =0;if _bdfe .SdHuffDecodeWidthSelection > 1{_bcee =1;};if _afaff =_bfggc .WriteBit (_bcee );_afaff !=nil {return _bbcg ,_dd .Wrap (_afaff ,_bfef ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");
};_bcee =0;switch _bdfe .SdHuffDecodeWidthSelection {case 1,3:_bcee =1;};if _afaff =_bfggc .WriteBit (_bcee );_afaff !=nil {return _bbcg ,_dd .Wrap (_afaff ,_bfef ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_bcee =0;if _bdfe .SdHuffDecodeHeightSelection > 1{_bcee =1;
};if _afaff =_bfggc .WriteBit (_bcee );_afaff !=nil {return _bbcg ,_dd .Wrap (_afaff ,_bfef ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_bcee =0;switch _bdfe .SdHuffDecodeHeightSelection {case 1,3:_bcee =1;};if _afaff =_bfggc .WriteBit (_bcee );
_afaff !=nil {return _bbcg ,_dd .Wrap (_afaff ,_bfef ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_bcee =0;if _bdfe .UseRefinementAggregation {_bcee =1;};if _afaff =_bfggc .WriteBit (_bcee );_afaff !=nil {return _bbcg ,_dd .Wrap (_afaff ,_bfef ,"\u0073\u0064\u0052\u0065\u0066\u0041\u0067\u0067");
};_bcee =0;if _bdfe .IsHuffmanEncoded {_bcee =1;};if _afaff =_bfggc .WriteBit (_bcee );_afaff !=nil {return _bbcg ,_dd .Wrap (_afaff ,_bfef ,"\u0073\u0064\u0048\u0075\u0066\u0066");};return 2,nil ;};var (_ Regioner =&TextRegion {};_ Segmenter =&TextRegion {};
);func (_bdga *GenericRegion )setParametersWithAt (_eee bool ,_agee byte ,_fgaf ,_ebb bool ,_ccc ,_fbdf []int8 ,_caed ,_gfe uint32 ,_cad *_gdg .DecoderStats ,_abb *_gdg .Decoder ){_bdga .IsMMREncoded =_eee ;_bdga .GBTemplate =_agee ;_bdga .IsTPGDon =_fgaf ;
_bdga .GBAtX =_ccc ;_bdga .GBAtY =_fbdf ;_bdga .RegionSegment .BitmapHeight =_gfe ;_bdga .RegionSegment .BitmapWidth =_caed ;_bdga ._cfa =nil ;_bdga .Bitmap =nil ;if _cad !=nil {_bdga ._add =_cad ;};if _abb !=nil {_bdga ._cgf =_abb ;};_dc .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049O\u004e\u005d\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073\u0020\u0053\u0044\u0041t\u003a\u0020\u0025\u0073",_bdga );
};func (_eefd *GenericRegion )InitEncode (bm *_bf .Bitmap ,xLoc ,yLoc ,template int ,duplicateLineRemoval bool )error {const _dcca ="\u0047e\u006e\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069\u006f\u006e.\u0049\u006e\u0069\u0074\u0045\u006e\u0063\u006f\u0064\u0065";
if bm ==nil {return _dd .Error (_dcca ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if xLoc < 0||yLoc < 0{return _dd .Error (_dcca ,"\u0078\u0020\u0061\u006e\u0064\u0020\u0079\u0020\u006c\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074h\u0061\u006e\u0020\u0030");
};_eefd .Bitmap =bm ;_eefd .GBTemplate =byte (template );switch _eefd .GBTemplate {case 0:_eefd .GBAtX =[]int8 {3,-3,2,-2};_eefd .GBAtY =[]int8 {-1,-1,-2,-2};case 1:_eefd .GBAtX =[]int8 {3};_eefd .GBAtY =[]int8 {-1};case 2,3:_eefd .GBAtX =[]int8 {2};_eefd .GBAtY =[]int8 {-1};
default:return _dd .Errorf (_dcca ,"\u0070\u0072o\u0076\u0069\u0064\u0065\u0064 \u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u007b\u0030\u002c\u0031\u002c\u0032\u002c\u0033\u007d",template );
};_eefd .RegionSegment =&RegionSegment {BitmapHeight :uint32 (bm .Height ),BitmapWidth :uint32 (bm .Width ),XLocation :uint32 (xLoc ),YLocation :uint32 (yLoc )};_eefd .IsTPGDon =duplicateLineRemoval ;return nil ;};func (_cgb *GenericRefinementRegion )updateOverride ()error {if _cgb .GrAtX ==nil ||_cgb .GrAtY ==nil {return _be .New ("\u0041\u0054\u0020\u0070\u0069\u0078\u0065\u006c\u0073\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");
};if len (_cgb .GrAtX )!=len (_cgb .GrAtY ){return _be .New ("A\u0054\u0020\u0070\u0069xe\u006c \u0069\u006e\u0063\u006f\u006es\u0069\u0073\u0074\u0065\u006e\u0074");};_cgb ._ac =make ([]bool ,len (_cgb .GrAtX ));switch _cgb .TemplateID {case 0:if _cgb .GrAtX [0]!=-1&&_cgb .GrAtY [0]!=-1{_cgb ._ac [0]=true ;
_cgb ._fa =true ;};if _cgb .GrAtX [1]!=-1&&_cgb .GrAtY [1]!=-1{_cgb ._ac [1]=true ;_cgb ._fa =true ;};case 1:_cgb ._fa =false ;};return nil ;};func (_dbdg *TextRegion )decodeIb (_egeg ,_fged int64 )(*_bf .Bitmap ,error ){const _gbbef ="\u0064\u0065\u0063\u006f\u0064\u0065\u0049\u0062";
var (_ggfe error ;_efgb *_bf .Bitmap ;);if _egeg ==0{if int (_fged )> len (_dbdg .Symbols )-1{return nil ,_dd .Error (_gbbef ,"\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0049\u0042\u0020\u0062\u0069\u0074\u006d\u0061\u0070\u002e\u0020\u0069\u006e\u0064\u0065x\u0020\u006f\u0075\u0074\u0020o\u0066\u0020r\u0061\u006e\u0067\u0065");
};return _dbdg .Symbols [int (_fged )],nil ;};var _dfae ,_ceede ,_daea ,_beeg int64 ;_dfae ,_ggfe =_dbdg .decodeRdw ();if _ggfe !=nil {return nil ,_dd .Wrap (_ggfe ,_gbbef ,"");};_ceede ,_ggfe =_dbdg .decodeRdh ();if _ggfe !=nil {return nil ,_dd .Wrap (_ggfe ,_gbbef ,"");
};_daea ,_ggfe =_dbdg .decodeRdx ();if _ggfe !=nil {return nil ,_dd .Wrap (_ggfe ,_gbbef ,"");};_beeg ,_ggfe =_dbdg .decodeRdy ();if _ggfe !=nil {return nil ,_dd .Wrap (_ggfe ,_gbbef ,"");};if _dbdg .IsHuffmanEncoded {if _ ,_ggfe =_dbdg .decodeSymInRefSize ();
_ggfe !=nil {return nil ,_dd .Wrap (_ggfe ,_gbbef ,"");};_dbdg ._gebc .Align ();};_cecd :=_dbdg .Symbols [_fged ];_ffeg :=uint32 (_cecd .Width );_fgde :=uint32 (_cecd .Height );_acef :=int32 (uint32 (_dfae )>>1)+int32 (_daea );_agbe :=int32 (uint32 (_ceede )>>1)+int32 (_beeg );
if _dbdg ._gbfb ==nil {_dbdg ._gbfb =_ceg (_dbdg ._gebc ,nil );};_dbdg ._gbfb .setParameters (_dbdg ._ggebe ,_dbdg ._geeg ,_dbdg .SbrTemplate ,_ffeg +uint32 (_dfae ),_fgde +uint32 (_ceede ),_cecd ,_acef ,_agbe ,false ,_dbdg .SbrATX ,_dbdg .SbrATY );_efgb ,_ggfe =_dbdg ._gbfb .GetRegionBitmap ();
if _ggfe !=nil {return nil ,_dd .Wrap (_ggfe ,_gbbef ,"\u0067\u0072\u0066");};if _dbdg .IsHuffmanEncoded {_dbdg ._gebc .Align ();};return _efgb ,nil ;};func (_gcfg *SymbolDictionary )Encode (w _d .BinaryWriter )(_ecdg int ,_bgc error ){const _bbc ="\u0053\u0079\u006dbo\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0045\u006e\u0063\u006f\u0064\u0065";
if _gcfg ==nil {return 0,_dd .Error (_bbc ,"\u0073\u0079m\u0062\u006f\u006c\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066in\u0065\u0064");};if _ecdg ,_bgc =_gcfg .encodeFlags (w );_bgc !=nil {return _ecdg ,_dd .Wrap (_bgc ,_bbc ,"");
};_cdfe ,_bgc :=_gcfg .encodeATFlags (w );if _bgc !=nil {return _ecdg ,_dd .Wrap (_bgc ,_bbc ,"");};_ecdg +=_cdfe ;if _cdfe ,_bgc =_gcfg .encodeRefinementATFlags (w );_bgc !=nil {return _ecdg ,_dd .Wrap (_bgc ,_bbc ,"");};_ecdg +=_cdfe ;if _cdfe ,_bgc =_gcfg .encodeNumSyms (w );
_bgc !=nil {return _ecdg ,_dd .Wrap (_bgc ,_bbc ,"");};_ecdg +=_cdfe ;if _cdfe ,_bgc =_gcfg .encodeSymbols (w );_bgc !=nil {return _ecdg ,_dd .Wrap (_bgc ,_bbc ,"");};_ecdg +=_cdfe ;return _ecdg ,nil ;};func (_ffcg *PageInformationSegment )readIsStriped ()error {_affg ,_abbc :=_ffcg ._afa .ReadBit ();
if _abbc !=nil {return _abbc ;};if _affg ==1{_ffcg .IsStripe =true ;};return nil ;};func (_aecb *SymbolDictionary )decodeHeightClassBitmap (_dfff *_bf .Bitmap ,_bfbeb int64 ,_bbcd int ,_aaf []int )error {for _bfecf :=_bfbeb ;_bfecf < int64 (_aecb ._ageeg );
_bfecf ++{var _abaf int ;for _cdac :=_bfbeb ;_cdac <=_bfecf -1;_cdac ++{_abaf +=_aaf [_cdac ];};_dacfg :=_ca .Rect (_abaf ,0,_abaf +_aaf [_bfecf ],_bbcd );_aebd ,_bfa :=_bf .Extract (_dacfg ,_dfff );if _bfa !=nil {return _bfa ;};_aecb ._bfgd [_bfecf ]=_aebd ;
_aecb ._agfa =append (_aecb ._agfa ,_aebd );};return nil ;};func (_adgabb *TextRegion )parseHeader ()error {var _gbabe error ;_dc .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069n\u0073\u002e\u002e\u002e");
defer func (){if _gbabe !=nil {_dc .Log .Trace ("\u005b\u0054\u0045\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044E\u0052\u005d\u0020\u0066\u0061i\u006c\u0065d\u002e\u0020\u0025\u0076",_gbabe );
}else {_dc .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069s\u0068\u0065\u0064\u002e");};}();if _gbabe =_adgabb .RegionInfo .parseHeader ();
_gbabe !=nil {return _gbabe ;};if _gbabe =_adgabb .readRegionFlags ();_gbabe !=nil {return _gbabe ;};if _adgabb .IsHuffmanEncoded {if _gbabe =_adgabb .readHuffmanFlags ();_gbabe !=nil {return _gbabe ;};};if _gbabe =_adgabb .readUseRefinement ();_gbabe !=nil {return _gbabe ;
};if _gbabe =_adgabb .readAmountOfSymbolInstances ();_gbabe !=nil {return _gbabe ;};if _gbabe =_adgabb .getSymbols ();_gbabe !=nil {return _gbabe ;};if _gbabe =_adgabb .computeSymbolCodeLength ();_gbabe !=nil {return _gbabe ;};if _gbabe =_adgabb .checkInput ();
_gbabe !=nil {return _gbabe ;};_dc .Log .Trace ("\u0025\u0073",_adgabb .String ());return nil ;};func (_ebgd *PatternDictionary )extractPatterns (_bbdg *_bf .Bitmap )error {var _febd int ;_afbe :=make ([]*_bf .Bitmap ,_ebgd .GrayMax +1);for _febd <=int (_ebgd .GrayMax ){_egcg :=int (_ebgd .HdpWidth )*_febd ;
_egdgg :=_ca .Rect (_egcg ,0,_egcg +int (_ebgd .HdpWidth ),int (_ebgd .HdpHeight ));_cfda ,_egcd :=_bf .Extract (_egdgg ,_bbdg );if _egcd !=nil {return _egcd ;};_afbe [_febd ]=_cfda ;_febd ++;};_ebgd .Patterns =_afbe ;return nil ;};func NewGenericRegion (r *_d .Reader )*GenericRegion {return &GenericRegion {RegionSegment :NewRegionSegment (r ),_dcg :r };
};func (_afag *PageInformationSegment )readRequiresAuxiliaryBuffer ()error {_bffa ,_fdaa :=_afag ._afa .ReadBit ();if _fdaa !=nil {return _fdaa ;};if _bffa ==1{_afag ._cfbbf =true ;};return nil ;};func (_gadb *HalftoneRegion )checkInput ()error {if _gadb .IsMMREncoded {if _gadb .HTemplate !=0{_dc .Log .Debug ("\u0048\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030",_gadb .HTemplate );
};if _gadb .HSkipEnabled {_dc .Log .Debug ("\u0048\u0053\u006b\u0069\u0070\u0045\u006e\u0061\u0062\u006c\u0065\u0064\u0020\u0030\u0020\u0025\u0076\u0020(\u0073\u0068\u006f\u0075\u006c\u0064\u0020c\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020v\u0061\u006c\u0075\u0065\u0020\u0066\u0061\u006c\u0073\u0065\u0029",_gadb .HSkipEnabled );
};};return nil ;};type TableSegment struct{_fgeeg *_d .Reader ;_edbf int32 ;_bdbb int32 ;_gabde int32 ;_cdaf int32 ;_faba int32 ;};func (_caa *GenericRefinementRegion )decodeOptimized (_ggb ,_db ,_fab ,_ec ,_cfe ,_bg ,_bbd int )error {var (_bad error ;
_edc int ;_bc int ;);_dba :=_ggb -int (_caa .ReferenceDY );if _daa :=int (-_caa .ReferenceDX );_daa > 0{_edc =_daa ;};_cff :=_caa .ReferenceBitmap .GetByteIndex (_edc ,_dba );if _caa .ReferenceDX > 0{_bc =int (_caa .ReferenceDX );};_dacd :=_caa .RegionBitmap .GetByteIndex (_bc ,_ggb );
switch _caa .TemplateID {case 0:_bad =_caa .decodeTemplate (_ggb ,_db ,_fab ,_ec ,_cfe ,_bg ,_bbd ,_dacd ,_dba ,_cff ,_caa ._fe );case 1:_bad =_caa .decodeTemplate (_ggb ,_db ,_fab ,_ec ,_cfe ,_bg ,_bbd ,_dacd ,_dba ,_cff ,_caa ._bfd );};return _bad ;};
func (_age *GenericRegion )Size ()int {return _age .RegionSegment .Size ()+1+2*len (_age .GBAtX )};func (_eccg *Header )pageSize ()uint {if _eccg .PageAssociation <=255{return 1;};return 4;};func (_gdadg *TextRegion )getUserTable (_dgcd int )(_ae .Tabler ,error ){const _bbee ="\u0067\u0065\u0074U\u0073\u0065\u0072\u0054\u0061\u0062\u006c\u0065";
var _cafcb int ;for _ ,_cedb :=range _gdadg .Header .RTSegments {if _cedb .Type ==53{if _cafcb ==_dgcd {_gfgd ,_bdaf :=_cedb .GetSegmentData ();if _bdaf !=nil {return nil ,_bdaf ;};_cdfff ,_abaga :=_gfgd .(*TableSegment );if !_abaga {_dc .Log .Debug (_f .Sprintf ("\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079p\u0065\u00205\u0033\u0020\u002d\u0020\u0061\u006ed\u0020in\u0064\u0065\u0078\u003a\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_cedb .SegmentNumber ));
return nil ,_dd .Error (_bbee ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079\u0070e\u0020\u0035\u0033\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u002a\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};return _ae .NewEncodedTable (_cdfff );};_cafcb ++;};};return nil ,nil ;};func (_ecgd *GenericRefinementRegion )readAtPixels ()error {_ecgd .GrAtX =make ([]int8 ,2);_ecgd .GrAtY =make ([]int8 ,2);_dfg ,_fde :=_ecgd ._aee .ReadByte ();if _fde !=nil {return _fde ;
};_ecgd .GrAtX [0]=int8 (_dfg );_dfg ,_fde =_ecgd ._aee .ReadByte ();if _fde !=nil {return _fde ;};_ecgd .GrAtY [0]=int8 (_dfg );_dfg ,_fde =_ecgd ._aee .ReadByte ();if _fde !=nil {return _fde ;};_ecgd .GrAtX [1]=int8 (_dfg );_dfg ,_fde =_ecgd ._aee .ReadByte ();
if _fde !=nil {return _fde ;};_ecgd .GrAtY [1]=int8 (_dfg );return nil ;};func (_eec *HalftoneRegion )GetRegionInfo ()*RegionSegment {return _eec .RegionSegment };func (_bdeg *PatternDictionary )setGbAtPixels (){if _bdeg .HDTemplate ==0{_bdeg .GBAtX =make ([]int8 ,4);
_bdeg .GBAtY =make ([]int8 ,4);_bdeg .GBAtX [0]=-int8 (_bdeg .HdpWidth );_bdeg .GBAtY [0]=0;_bdeg .GBAtX [1]=-3;_bdeg .GBAtY [1]=-1;_bdeg .GBAtX [2]=2;_bdeg .GBAtY [2]=-2;_bdeg .GBAtX [3]=-2;_bdeg .GBAtY [3]=-2;}else {_bdeg .GBAtX =[]int8 {-int8 (_bdeg .HdpWidth )};
_bdeg .GBAtY =[]int8 {0};};};func (_cegc *HalftoneRegion )GetPatterns ()([]*_bf .Bitmap ,error ){var (_bdbd []*_bf .Bitmap ;_daebc error ;);for _ ,_gcff :=range _cegc ._bbae .RTSegments {var _fcfd Segmenter ;_fcfd ,_daebc =_gcff .GetSegmentData ();if _daebc !=nil {_dc .Log .Debug ("\u0047e\u0074\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061 \u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025v",_daebc );
return nil ,_daebc ;};_fac ,_efg :=_fcfd .(*PatternDictionary );if !_efg {_daebc =_f .Errorf ("\u0072e\u006c\u0061t\u0065\u0064\u0020\u0073e\u0067\u006d\u0065n\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0070at\u0074\u0065\u0072n\u0020\u0064i\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u003a \u0025\u0054",_fcfd );
return nil ,_daebc ;};var _cdeg []*_bf .Bitmap ;_cdeg ,_daebc =_fac .GetDictionary ();if _daebc !=nil {_dc .Log .Debug ("\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_daebc );
return nil ,_daebc ;};_bdbd =append (_bdbd ,_cdeg ...);};return _bdbd ,nil ;};type SegmentEncoder interface{Encode (_gdcg _d .BinaryWriter )(_bfed int ,_cfba error );};func (_dff *PageInformationSegment )readCombinationOperator ()error {_feaf ,_ggaf :=_dff ._afa .ReadBits (2);
if _ggaf !=nil {return _ggaf ;};_dff ._ggeb =_bf .CombinationOperator (int (_feaf ));return nil ;};func (_abbg *HalftoneRegion )grayScaleDecoding (_fbcg int )([][]int ,error ){var (_dfc []int8 ;_edceda []int8 ;);if !_abbg .IsMMREncoded {_dfc =make ([]int8 ,4);
_edceda =make ([]int8 ,4);if _abbg .HTemplate <=1{_dfc [0]=3;}else if _abbg .HTemplate >=2{_dfc [0]=2;};_edceda [0]=-1;_dfc [1]=-3;_edceda [1]=-1;_dfc [2]=2;_edceda [2]=-2;_dfc [3]=-2;_edceda [3]=-2;};_gfd :=make ([]*_bf .Bitmap ,_fbcg );_deg :=NewGenericRegion (_abbg ._ceed );
_deg .setParametersMMR (_abbg .IsMMREncoded ,_abbg .DataOffset ,_abbg .DataLength ,_abbg .HGridHeight ,_abbg .HGridWidth ,_abbg .HTemplate ,false ,_abbg .HSkipEnabled ,_dfc ,_edceda );_gdfe :=_fbcg -1;var _bcfbg error ;_gfd [_gdfe ],_bcfbg =_deg .GetRegionBitmap ();
if _bcfbg !=nil {return nil ,_bcfbg ;};for _gdfe > 0{_gdfe --;_deg .Bitmap =nil ;_gfd [_gdfe ],_bcfbg =_deg .GetRegionBitmap ();if _bcfbg !=nil {return nil ,_bcfbg ;};if _bcfbg =_abbg .combineGrayscalePlanes (_gfd ,_gdfe );_bcfbg !=nil {return nil ,_bcfbg ;
};};return _abbg .computeGrayScalePlanes (_gfd ,_fbcg );};func (_aaa *GenericRefinementRegion )setParameters (_egf *_gdg .DecoderStats ,_egddd *_gdg .Decoder ,_gfg int8 ,_gga ,_dacdb uint32 ,_fgc *_bf .Bitmap ,_gda ,_cca int32 ,_ga bool ,_bfcf []int8 ,_eef []int8 ){_dc .Log .Trace ("\u005b\u0047\u0045NE\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052E\u0047I\u004fN\u005d \u0073\u0065\u0074\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073");
if _egf !=nil {_aaa ._ed =_egf ;};if _egddd !=nil {_aaa ._gg =_egddd ;};_aaa .TemplateID =_gfg ;_aaa .RegionInfo .BitmapWidth =_gga ;_aaa .RegionInfo .BitmapHeight =_dacdb ;_aaa .ReferenceBitmap =_fgc ;_aaa .ReferenceDX =_gda ;_aaa .ReferenceDY =_cca ;
_aaa .IsTPGROn =_ga ;_aaa .GrAtX =_bfcf ;_aaa .GrAtY =_eef ;_aaa .RegionBitmap =nil ;_dc .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073 f\u0069\u006ei\u0073\u0068\u0065\u0064\u002e\u0020\u0025\u0073",_aaa );
};func (_fdbg *GenericRegion )overrideAtTemplate0a (_ddg ,_adba ,_bdge ,_aeeb ,_cega ,_aea int )int {if _fdbg .GBAtOverride [0]{_ddg &=0xFFEF;if _fdbg .GBAtY [0]==0&&_fdbg .GBAtX [0]>=-int8 (_cega ){_ddg |=(_aeeb >>uint (int8 (_aea )-_fdbg .GBAtX [0]&0x1))<<4;
}else {_ddg |=int (_fdbg .getPixel (_adba +int (_fdbg .GBAtX [0]),_bdge +int (_fdbg .GBAtY [0])))<<4;};};if _fdbg .GBAtOverride [1]{_ddg &=0xFBFF;if _fdbg .GBAtY [1]==0&&_fdbg .GBAtX [1]>=-int8 (_cega ){_ddg |=(_aeeb >>uint (int8 (_aea )-_fdbg .GBAtX [1]&0x1))<<10;
}else {_ddg |=int (_fdbg .getPixel (_adba +int (_fdbg .GBAtX [1]),_bdge +int (_fdbg .GBAtY [1])))<<10;};};if _fdbg .GBAtOverride [2]{_ddg &=0xF7FF;if _fdbg .GBAtY [2]==0&&_fdbg .GBAtX [2]>=-int8 (_cega ){_ddg |=(_aeeb >>uint (int8 (_aea )-_fdbg .GBAtX [2]&0x1))<<11;
}else {_ddg |=int (_fdbg .getPixel (_adba +int (_fdbg .GBAtX [2]),_bdge +int (_fdbg .GBAtY [2])))<<11;};};if _fdbg .GBAtOverride [3]{_ddg &=0x7FFF;if _fdbg .GBAtY [3]==0&&_fdbg .GBAtX [3]>=-int8 (_cega ){_ddg |=(_aeeb >>uint (int8 (_aea )-_fdbg .GBAtX [3]&0x1))<<15;
}else {_ddg |=int (_fdbg .getPixel (_adba +int (_fdbg .GBAtX [3]),_bdge +int (_fdbg .GBAtY [3])))<<15;};};return _ddg ;};func (_eaed *SymbolDictionary )InitEncode (symbols *_bf .Bitmaps ,symbolList []int ,symbolMap map[int ]int ,unborderSymbols bool )error {const _eacb ="S\u0079\u006d\u0062\u006f\u006c\u0044i\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002eI\u006e\u0069\u0074E\u006ec\u006f\u0064\u0065";
_eaed .SdATX =[]int8 {3,-3,2,-2};_eaed .SdATY =[]int8 {-1,-1,-2,-2};_eaed ._fbcd =symbols ;_eaed ._eged =make ([]int ,len (symbolList ));copy (_eaed ._eged ,symbolList );if len (_eaed ._eged )!=_eaed ._fbcd .Size (){return _dd .Error (_eacb ,"s\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0061\u006e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u004ci\u0073\u0074\u0020\u006f\u0066\u0020\u0064\u0069\u0066\u0066er\u0065\u006e\u0074 \u0073i\u007a\u0065");
};_eaed .NumberOfNewSymbols =uint32 (symbols .Size ());_eaed .NumberOfExportedSymbols =uint32 (symbols .Size ());_eaed ._efbbg =symbolMap ;_eaed ._fcag =unborderSymbols ;return nil ;};func (_dagg *PageInformationSegment )CombinationOperatorOverrideAllowed ()bool {return _dagg ._cfab };
func (_cfdfa *SymbolDictionary )retrieveImportSymbols ()error {for _ ,_ffeb :=range _cfdfa .Header .RTSegments {if _ffeb .Type ==0{_dcd ,_fbef :=_ffeb .GetSegmentData ();if _fbef !=nil {return _fbef ;};_bfeb ,_gacd :=_dcd .(*SymbolDictionary );if !_gacd {return _f .Errorf ("\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0044\u0061\u0074a\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u003a\u0020%\u0054",_dcd );
};_fbfc ,_fbef :=_bfeb .GetDictionary ();if _fbef !=nil {return _f .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064 \u0073\u0065\u0067m\u0065\u006e\u0074 \u0077\u0069t\u0068\u0020\u0069\u006e\u0064\u0065x\u003a %\u0064\u0020\u0067\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0073",_ffeb .SegmentNumber ,_fbef .Error ());
};_cfdfa ._cgge =append (_cfdfa ._cgge ,_fbfc ...);_cfdfa ._gdeaa +=_bfeb .NumberOfExportedSymbols ;};};return nil ;};func (_ccdb *SymbolDictionary )setSymbolsArray ()error {if _ccdb ._cgge ==nil {if _effc :=_ccdb .retrieveImportSymbols ();_effc !=nil {return _effc ;
};};if _ccdb ._agfa ==nil {_ccdb ._agfa =append (_ccdb ._agfa ,_ccdb ._cgge ...);};return nil ;};func (_bdg *GenericRegion )GetRegionBitmap ()(_fdd *_bf .Bitmap ,_ffgg error ){if _bdg .Bitmap !=nil {return _bdg .Bitmap ,nil ;};if _bdg .IsMMREncoded {if _bdg ._cfa ==nil {_bdg ._cfa ,_ffgg =_dac .New (_bdg ._dcg ,int (_bdg .RegionSegment .BitmapWidth ),int (_bdg .RegionSegment .BitmapHeight ),_bdg .DataOffset ,_bdg .DataLength );
if _ffgg !=nil {return nil ,_ffgg ;};};_bdg .Bitmap ,_ffgg =_bdg ._cfa .UncompressMMR ();return _bdg .Bitmap ,_ffgg ;};if _ffgg =_bdg .updateOverrideFlags ();_ffgg !=nil {return nil ,_ffgg ;};var _fddf int ;if _bdg ._cgf ==nil {_bdg ._cgf ,_ffgg =_gdg .New (_bdg ._dcg );
if _ffgg !=nil {return nil ,_ffgg ;};};if _bdg ._add ==nil {_bdg ._add =_gdg .NewStats (65536,1);};_bdg .Bitmap =_bf .New (int (_bdg .RegionSegment .BitmapWidth ),int (_bdg .RegionSegment .BitmapHeight ));_deaf :=int (uint32 (_bdg .Bitmap .Width +7)&(^uint32 (7)));
for _gef :=0;_gef < _bdg .Bitmap .Height ;_gef ++{if _bdg .IsTPGDon {var _fgce int ;_fgce ,_ffgg =_bdg .decodeSLTP ();if _ffgg !=nil {return nil ,_ffgg ;};_fddf ^=_fgce ;};if _fddf ==1{if _gef > 0{if _ffgg =_bdg .copyLineAbove (_gef );_ffgg !=nil {return nil ,_ffgg ;
};};}else {if _ffgg =_bdg .decodeLine (_gef ,_bdg .Bitmap .Width ,_deaf );_ffgg !=nil {return nil ,_ffgg ;};};};return _bdg .Bitmap ,nil ;};func (_fbfd *SymbolDictionary )getSymbol (_ffa int )(*_bf .Bitmap ,error ){const _fgeb ="\u0067e\u0074\u0053\u0079\u006d\u0062\u006fl";
_gaf ,_dgdf :=_fbfd ._fbcd .GetBitmap (_fbfd ._eged [_ffa ]);if _dgdf !=nil {return nil ,_dd .Wrap (_dgdf ,_fgeb ,"\u0063\u0061n\u0027\u0074\u0020g\u0065\u0074\u0020\u0073\u0079\u006d\u0062\u006f\u006c");};return _gaf ,nil ;};func (_efcf *SymbolDictionary )decodeHeightClassDeltaHeight ()(int64 ,error ){if _efcf .IsHuffmanEncoded {return _efcf .decodeHeightClassDeltaHeightWithHuffman ();
};_cbae ,_baga :=_efcf ._acd .DecodeInt (_efcf ._ffdb );if _baga !=nil {return 0,_baga ;};return int64 (_cbae ),nil ;};func (_cafb *PageInformationSegment )Init (h *Header ,r *_d .Reader )(_efdd error ){_cafb ._afa =r ;if _efdd =_cafb .parseHeader ();_efdd !=nil {return _dd .Wrap (_efdd ,"P\u0061\u0067\u0065\u0049\u006e\u0066o\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065g\u006d\u0065\u006et\u002eI\u006e\u0069\u0074","");
};return nil ;};func (_ddfc *Header )readDataStartOffset (_dcbc *_d .Reader ,_adca OrganizationType ){if _adca ==OSequential {_ddfc .SegmentDataStartOffset =uint64 (_dcbc .AbsolutePosition ());};};func (_bebd *SymbolDictionary )decodeThroughTextRegion (_egff ,_dcef ,_cadc uint32 )error {if _bebd ._bcdbb ==nil {_bebd ._bcdbb =_dbaa (_bebd ._ccba ,nil );
_bebd ._bcdbb .setContexts (_bebd ._fcef ,_gdg .NewStats (512,1),_gdg .NewStats (512,1),_gdg .NewStats (512,1),_gdg .NewStats (512,1),_bebd ._bfbb ,_gdg .NewStats (512,1),_gdg .NewStats (512,1),_gdg .NewStats (512,1),_gdg .NewStats (512,1));};if _bdfg :=_bebd .setSymbolsArray ();
_bdfg !=nil {return _bdfg ;};_bebd ._bcdbb .setParameters (_bebd ._acd ,_bebd .IsHuffmanEncoded ,true ,_egff ,_dcef ,_cadc ,1,_bebd ._gdeaa +_bebd ._ageeg ,0,0,0,1,0,0,0,0,0,0,0,0,0,_bebd .SdrTemplate ,_bebd .SdrATX ,_bebd .SdrATY ,_bebd ._agfa ,_bebd ._bdbae );
return _bebd .addSymbol (_bebd ._bcdbb );};func (_abed *TextRegion )readRegionFlags ()error {var (_ggdg int ;_dfef uint64 ;_bafb error ;);_ggdg ,_bafb =_abed ._gebc .ReadBit ();if _bafb !=nil {return _bafb ;};_abed .SbrTemplate =int8 (_ggdg );_dfef ,_bafb =_abed ._gebc .ReadBits (5);
if _bafb !=nil {return _bafb ;};_abed .SbDsOffset =int8 (_dfef );if _abed .SbDsOffset > 0x0f{_abed .SbDsOffset -=0x20;};_ggdg ,_bafb =_abed ._gebc .ReadBit ();if _bafb !=nil {return _bafb ;};_abed .DefaultPixel =int8 (_ggdg );_dfef ,_bafb =_abed ._gebc .ReadBits (2);
if _bafb !=nil {return _bafb ;};_abed .CombinationOperator =_bf .CombinationOperator (int (_dfef )&0x3);_ggdg ,_bafb =_abed ._gebc .ReadBit ();if _bafb !=nil {return _bafb ;};_abed .IsTransposed =int8 (_ggdg );_dfef ,_bafb =_abed ._gebc .ReadBits (2);if _bafb !=nil {return _bafb ;
};_abed .ReferenceCorner =int16 (_dfef )&0x3;_dfef ,_bafb =_abed ._gebc .ReadBits (2);if _bafb !=nil {return _bafb ;};_abed .LogSBStrips =int16 (_dfef )&0x3;_abed .SbStrips =1<<uint (_abed .LogSBStrips );_ggdg ,_bafb =_abed ._gebc .ReadBit ();if _bafb !=nil {return _bafb ;
};if _ggdg ==1{_abed .UseRefinement =true ;};_ggdg ,_bafb =_abed ._gebc .ReadBit ();if _bafb !=nil {return _bafb ;};if _ggdg ==1{_abed .IsHuffmanEncoded =true ;};return nil ;};func (_bcd *GenericRegion )decodeSLTP ()(int ,error ){switch _bcd .GBTemplate {case 0:_bcd ._add .SetIndex (0x9B25);
case 1:_bcd ._add .SetIndex (0x795);case 2:_bcd ._add .SetIndex (0xE5);case 3:_bcd ._add .SetIndex (0x195);};return _bcd ._cgf .DecodeBit (_bcd ._add );};func (_gcac *TextRegion )decodeSymInRefSize ()(int64 ,error ){const _ggee ="\u0064e\u0063o\u0064\u0065\u0053\u0079\u006dI\u006e\u0052e\u0066\u0053\u0069\u007a\u0065";
if _gcac .SbHuffRSize ==0{_cbda ,_faggc :=_ae .GetStandardTable (1);if _faggc !=nil {return 0,_dd .Wrap (_faggc ,_ggee ,"");};return _cbda .Decode (_gcac ._gebc );};if _gcac ._ggbd ==nil {var (_bdaae int ;_ddbed error ;);if _gcac .SbHuffFS ==3{_bdaae ++;
};if _gcac .SbHuffDS ==3{_bdaae ++;};if _gcac .SbHuffDT ==3{_bdaae ++;};if _gcac .SbHuffRDWidth ==3{_bdaae ++;};if _gcac .SbHuffRDHeight ==3{_bdaae ++;};if _gcac .SbHuffRDX ==3{_bdaae ++;};if _gcac .SbHuffRDY ==3{_bdaae ++;};_gcac ._ggbd ,_ddbed =_gcac .getUserTable (_bdaae );
if _ddbed !=nil {return 0,_dd .Wrap (_ddbed ,_ggee ,"");};};_edfc ,_efdff :=_gcac ._ggbd .Decode (_gcac ._gebc );if _efdff !=nil {return 0,_dd .Wrap (_efdff ,_ggee ,"");};return _edfc ,nil ;};type OrganizationType uint8 ;func (_gacf *SymbolDictionary )encodeNumSyms (_fgbc _d .BinaryWriter )(_fade int ,_caafe error ){const _ebfe ="\u0065\u006e\u0063\u006f\u0064\u0065\u004e\u0075\u006d\u0053\u0079\u006d\u0073";
_dcbg :=make ([]byte ,4);_gd .BigEndian .PutUint32 (_dcbg ,_gacf .NumberOfExportedSymbols );if _fade ,_caafe =_fgbc .Write (_dcbg );_caafe !=nil {return _fade ,_dd .Wrap (_caafe ,_ebfe ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};_gd .BigEndian .PutUint32 (_dcbg ,_gacf .NumberOfNewSymbols );_afea ,_caafe :=_fgbc .Write (_dcbg );if _caafe !=nil {return _fade ,_dd .Wrap (_caafe ,_ebfe ,"n\u0065\u0077\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};return _fade +_afea ,nil ;
};func (_dec *GenericRegion )Encode (w _d .BinaryWriter )(_acf int ,_gddf error ){const _dbc ="G\u0065n\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069o\u006e\u002e\u0045\u006eco\u0064\u0065";if _dec .Bitmap ==nil {return 0,_dd .Error (_dbc ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");
};_cebe ,_gddf :=_dec .RegionSegment .Encode (w );if _gddf !=nil {return 0,_dd .Wrap (_gddf ,_dbc ,"\u0052\u0065\u0067\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074");};_acf +=_cebe ;if _gddf =w .SkipBits (4);_gddf !=nil {return _acf ,_dd .Wrap (_gddf ,_dbc ,"\u0073k\u0069p\u0020\u0072\u0065\u0073\u0065r\u0076\u0065d\u0020\u0062\u0069\u0074\u0073");
};var _cfbd int ;if _dec .IsTPGDon {_cfbd =1;};if _gddf =w .WriteBit (_cfbd );_gddf !=nil {return _acf ,_dd .Wrap (_gddf ,_dbc ,"\u0074\u0070\u0067\u0064\u006f\u006e");};_cfbd =0;if _gddf =w .WriteBit (int (_dec .GBTemplate >>1)&0x01);_gddf !=nil {return _acf ,_dd .Wrap (_gddf ,_dbc ,"f\u0069r\u0073\u0074\u0020\u0067\u0062\u0074\u0065\u006dp\u006c\u0061\u0074\u0065 b\u0069\u0074");
};if _gddf =w .WriteBit (int (_dec .GBTemplate )&0x01);_gddf !=nil {return _acf ,_dd .Wrap (_gddf ,_dbc ,"s\u0065\u0063\u006f\u006ed \u0067b\u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u0062\u0069\u0074");};if _dec .UseMMR {_cfbd =1;};if _gddf =w .WriteBit (_cfbd );
_gddf !=nil {return _acf ,_dd .Wrap (_gddf ,_dbc ,"u\u0073\u0065\u0020\u004d\u004d\u0052\u0020\u0062\u0069\u0074");};_acf ++;if _cebe ,_gddf =_dec .writeGBAtPixels (w );_gddf !=nil {return _acf ,_dd .Wrap (_gddf ,_dbc ,"");};_acf +=_cebe ;_dage :=_fd .New ();
if _gddf =_dage .EncodeBitmap (_dec .Bitmap ,_dec .IsTPGDon );_gddf !=nil {return _acf ,_dd .Wrap (_gddf ,_dbc ,"");};_dage .Final ();var _beb int64 ;if _beb ,_gddf =_dage .WriteTo (w );_gddf !=nil {return _acf ,_dd .Wrap (_gddf ,_dbc ,"");};_acf +=int (_beb );
return _acf ,nil ;};type template0 struct{};type EncodeInitializer interface{InitEncode ();};func (_aafa *TextRegion )readUseRefinement ()error {if !_aafa .UseRefinement ||_aafa .SbrTemplate !=0{return nil ;};var (_eaca byte ;_fbec error ;);_aafa .SbrATX =make ([]int8 ,2);
_aafa .SbrATY =make ([]int8 ,2);_eaca ,_fbec =_aafa ._gebc .ReadByte ();if _fbec !=nil {return _fbec ;};_aafa .SbrATX [0]=int8 (_eaca );_eaca ,_fbec =_aafa ._gebc .ReadByte ();if _fbec !=nil {return _fbec ;};_aafa .SbrATY [0]=int8 (_eaca );_eaca ,_fbec =_aafa ._gebc .ReadByte ();
if _fbec !=nil {return _fbec ;};_aafa .SbrATX [1]=int8 (_eaca );_eaca ,_fbec =_aafa ._gebc .ReadByte ();if _fbec !=nil {return _fbec ;};_aafa .SbrATY [1]=int8 (_eaca );return nil ;};func (_dbg *PatternDictionary )checkInput ()error {if _dbg .HdpHeight < 1||_dbg .HdpWidth < 1{return _be .New ("in\u0076\u0061l\u0069\u0064\u0020\u0048\u0065\u0061\u0064\u0065\u0072 \u0056\u0061\u006c\u0075\u0065\u003a\u0020\u0057\u0069\u0064\u0074\u0068\u002f\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020g\u0072e\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020z\u0065\u0072o");
};if _dbg .IsMMREncoded {if _dbg .HDTemplate !=0{_dc .Log .Debug ("\u0076\u0061\u0072\u0069\u0061\u0062\u006c\u0065\u0020\u0048\u0044\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e \u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030");
};};return nil ;};func (_cfcg *PatternDictionary )readPatternWidthAndHeight ()error {_fddc ,_cbef :=_cfcg ._fgbg .ReadByte ();if _cbef !=nil {return _cbef ;};_cfcg .HdpWidth =_fddc ;_fddc ,_cbef =_cfcg ._fgbg .ReadByte ();if _cbef !=nil {return _cbef ;
};_cfcg .HdpHeight =_fddc ;return nil ;};func _dbaa (_gcggc *_d .Reader ,_ffadc *Header )*TextRegion {_bffca :=&TextRegion {_gebc :_gcggc ,Header :_ffadc ,RegionInfo :NewRegionSegment (_gcggc )};return _bffca ;};func (_cdebe *TextRegion )InitEncode (globalSymbolsMap ,localSymbolsMap map[int ]int ,comps []int ,inLL *_bf .Points ,symbols *_bf .Bitmaps ,classIDs *_a .IntSlice ,boxes *_bf .Boxes ,width ,height ,symBits int ){_cdebe .RegionInfo =&RegionSegment {BitmapWidth :uint32 (width ),BitmapHeight :uint32 (height )};
_cdebe ._fgaff =globalSymbolsMap ;_cdebe ._gaca =localSymbolsMap ;_cdebe ._aceed =comps ;_cdebe ._aceg =inLL ;_cdebe ._dab =symbols ;_cdebe ._gbbe =classIDs ;_cdebe ._fdag =boxes ;_cdebe ._ecde =symBits ;};func (_cggd *TextRegion )GetRegionBitmap ()(*_bf .Bitmap ,error ){if _cggd .RegionBitmap !=nil {return _cggd .RegionBitmap ,nil ;
};if !_cggd .IsHuffmanEncoded {if _eaeef :=_cggd .setCodingStatistics ();_eaeef !=nil {return nil ,_eaeef ;};};if _bfffc :=_cggd .createRegionBitmap ();_bfffc !=nil {return nil ,_bfffc ;};if _ffbd :=_cggd .decodeSymbolInstances ();_ffbd !=nil {return nil ,_ffbd ;
};return _cggd .RegionBitmap ,nil ;};func (_fcbf *Header )readSegmentDataLength (_gca *_d .Reader )(_gbe error ){_fcbf .SegmentDataLength ,_gbe =_gca .ReadBits (32);if _gbe !=nil {return _gbe ;};_fcbf .SegmentDataLength &=_c .MaxInt32 ;return nil ;};func (_fcgeg *PageInformationSegment )Encode (w _d .BinaryWriter )(_bcbf int ,_cfdg error ){const _cagcc ="\u0050\u0061g\u0065\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u002e\u0045\u006eco\u0064\u0065";
_fdeg :=make ([]byte ,4);_gd .BigEndian .PutUint32 (_fdeg ,uint32 (_fcgeg .PageBMWidth ));_bcbf ,_cfdg =w .Write (_fdeg );if _cfdg !=nil {return _bcbf ,_dd .Wrap (_cfdg ,_cagcc ,"\u0077\u0069\u0064t\u0068");};_gd .BigEndian .PutUint32 (_fdeg ,uint32 (_fcgeg .PageBMHeight ));
var _cbb int ;_cbb ,_cfdg =w .Write (_fdeg );if _cfdg !=nil {return _cbb +_bcbf ,_dd .Wrap (_cfdg ,_cagcc ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_bcbf +=_cbb ;_gd .BigEndian .PutUint32 (_fdeg ,uint32 (_fcgeg .ResolutionX ));_cbb ,_cfdg =w .Write (_fdeg );
if _cfdg !=nil {return _cbb +_bcbf ,_dd .Wrap (_cfdg ,_cagcc ,"\u0078\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_bcbf +=_cbb ;_gd .BigEndian .PutUint32 (_fdeg ,uint32 (_fcgeg .ResolutionY ));if _cbb ,_cfdg =w .Write (_fdeg );_cfdg !=nil {return _cbb +_bcbf ,_dd .Wrap (_cfdg ,_cagcc ,"\u0079\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");
};_bcbf +=_cbb ;if _cfdg =_fcgeg .encodeFlags (w );_cfdg !=nil {return _bcbf ,_dd .Wrap (_cfdg ,_cagcc ,"");};_bcbf ++;if _cbb ,_cfdg =_fcgeg .encodeStripingInformation (w );_cfdg !=nil {return _bcbf ,_dd .Wrap (_cfdg ,_cagcc ,"");};_bcbf +=_cbb ;return _bcbf ,nil ;
};func (_ccgd *PatternDictionary )readTemplate ()error {_ecaca ,_dgdc :=_ccgd ._fgbg .ReadBits (2);if _dgdc !=nil {return _dgdc ;};_ccgd .HDTemplate =byte (_ecaca );return nil ;};type Type int ;func (_ggffa *TableSegment )parseHeader ()error {var (_cdda int ;
_cffca uint64 ;_gcd error ;);_cdda ,_gcd =_ggffa ._fgeeg .ReadBit ();if _gcd !=nil {return _gcd ;};if _cdda ==1{return _f .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0061\u0062\u006c\u0065 \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0064e\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u002e\u0020\u0042\u002e\u0032\u002e1\u0020\u0043\u006f\u0064\u0065\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0042\u0069\u0074\u0020\u0037\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u007a\u0065\u0072\u006f\u002e\u0020\u0057a\u0073\u003a \u0025\u0064",_cdda );
};if _cffca ,_gcd =_ggffa ._fgeeg .ReadBits (3);_gcd !=nil {return _gcd ;};_ggffa ._gabde =(int32 (_cffca )+1)&0xf;if _cffca ,_gcd =_ggffa ._fgeeg .ReadBits (3);_gcd !=nil {return _gcd ;};_ggffa ._bdbb =(int32 (_cffca )+1)&0xf;if _cffca ,_gcd =_ggffa ._fgeeg .ReadBits (32);
_gcd !=nil {return _gcd ;};_ggffa ._cdaf =int32 (_cffca &_c .MaxInt32 );if _cffca ,_gcd =_ggffa ._fgeeg .ReadBits (32);_gcd !=nil {return _gcd ;};_ggffa ._faba =int32 (_cffca &_c .MaxInt32 );return nil ;};func (_cgbg *RegionSegment )Size ()int {return 17};
