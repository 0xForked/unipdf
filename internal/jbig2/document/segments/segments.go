//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package segments ;import (_gf "encoding/binary";_bb "errors";_gfe "fmt";_ba "github.com/unidoc/unipdf/v3/common";_dc "github.com/unidoc/unipdf/v3/internal/bitwise";_fc "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_e "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";
_af "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/arithmetic";_fd "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/huffman";_ee "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/mmr";_a "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/arithmetic";
_fcd "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_gb "github.com/unidoc/unipdf/v3/internal/jbig2/internal";_bc "golang.org/x/xerrors";_gc "image";_b "io";_d "math";_f "strings";_dd "time";);type HalftoneRegion struct{_eaaf _dc .StreamReader ;_dgad *Header ;
DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;HDefaultPixel int8 ;CombinationOperator _e .CombinationOperator ;HSkipEnabled bool ;HTemplate byte ;IsMMREncoded bool ;HGridWidth uint32 ;
HGridHeight uint32 ;HGridX int32 ;HGridY int32 ;HRegionX uint16 ;HRegionY uint16 ;HalftoneRegionBitmap *_e .Bitmap ;Patterns []*_e .Bitmap ;};func (_dagag *TableSegment )Init (h *Header ,r _dc .StreamReader )error {_dagag ._abfc =r ;return _dagag .parseHeader ();
};func NewGenericRegion (r _dc .StreamReader )*GenericRegion {return &GenericRegion {RegionSegment :NewRegionSegment (r ),_fbeb :r };};func (_cabc *PatternDictionary )readIsMMREncoded ()error {_cbce ,_gcf :=_cabc ._gace .ReadBit ();if _gcf !=nil {return _gcf ;
};if _cbce !=0{_cabc .IsMMREncoded =true ;};return nil ;};func (_decd *SymbolDictionary )decodeDifferenceWidth ()(int64 ,error ){if _decd .IsHuffmanEncoded {switch _decd .SdHuffDecodeWidthSelection {case 0:_ddfb ,_bgbe :=_fd .GetStandardTable (2);if _bgbe !=nil {return 0,_bgbe ;
};return _ddfb .Decode (_decd ._decef );case 1:_cceb ,_gcgb :=_fd .GetStandardTable (3);if _gcgb !=nil {return 0,_gcgb ;};return _cceb .Decode (_decd ._decef );case 3:if _decd ._bcbg ==nil {var _bgf int ;if _decd .SdHuffDecodeHeightSelection ==3{_bgf ++;
};_edcea ,_aecc :=_decd .getUserTable (_bgf );if _aecc !=nil {return 0,_aecc ;};_decd ._bcbg =_edcea ;};return _decd ._bcbg .Decode (_decd ._decef );};}else {_bgcb ,_abff :=_decd ._abad .DecodeInt (_decd ._fdgd );if _abff !=nil {return 0,_abff ;};return int64 (_bgcb ),nil ;
};return 0,nil ;};func (_bdeb *RegionSegment )Encode (w _dc .BinaryWriter )(_ced int ,_ffcb error ){const _abf ="R\u0065g\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065n\u0074\u002e\u0045\u006eco\u0064\u0065";_cgdfb :=make ([]byte ,4);_gf .BigEndian .PutUint32 (_cgdfb ,_bdeb .BitmapWidth );
_ced ,_ffcb =w .Write (_cgdfb );if _ffcb !=nil {return 0,_fcd .Wrap (_ffcb ,_abf ,"\u0057\u0069\u0064t\u0068");};_gf .BigEndian .PutUint32 (_cgdfb ,_bdeb .BitmapHeight );var _eacc int ;_eacc ,_ffcb =w .Write (_cgdfb );if _ffcb !=nil {return 0,_fcd .Wrap (_ffcb ,_abf ,"\u0048\u0065\u0069\u0067\u0068\u0074");
};_ced +=_eacc ;_gf .BigEndian .PutUint32 (_cgdfb ,_bdeb .XLocation );_eacc ,_ffcb =w .Write (_cgdfb );if _ffcb !=nil {return 0,_fcd .Wrap (_ffcb ,_abf ,"\u0058L\u006f\u0063\u0061\u0074\u0069\u006fn");};_ced +=_eacc ;_gf .BigEndian .PutUint32 (_cgdfb ,_bdeb .YLocation );
_eacc ,_ffcb =w .Write (_cgdfb );if _ffcb !=nil {return 0,_fcd .Wrap (_ffcb ,_abf ,"\u0059L\u006f\u0063\u0061\u0074\u0069\u006fn");};_ced +=_eacc ;if _ffcb =w .WriteByte (byte (_bdeb .CombinaionOperator )&0x07);_ffcb !=nil {return 0,_fcd .Wrap (_ffcb ,_abf ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");
};_ced ++;return _ced ,nil ;};func (_bagc *HalftoneRegion )Init (hd *Header ,r _dc .StreamReader )error {_bagc ._eaaf =r ;_bagc ._dgad =hd ;_bagc .RegionSegment =NewRegionSegment (r );return _bagc .parseHeader ();};func (_bag *GenericRefinementRegion )decodeTemplate (_fee ,_bbcf ,_bcg ,_dec ,_bdg ,_ade ,_fede ,_efc ,_dag ,_egg int ,_bcd templater )(_bcb error ){var (_fa ,_bbf ,_efg ,_dfe ,_ead int16 ;
_cfb ,_dff ,_adg ,_gbd int ;_bcde byte ;);if _dag >=1&&(_dag -1)< _bag .ReferenceBitmap .Height {_bcde ,_bcb =_bag .ReferenceBitmap .GetByte (_egg -_dec );if _bcb !=nil {return ;};_cfb =int (_bcde );};if _dag >=0&&(_dag )< _bag .ReferenceBitmap .Height {_bcde ,_bcb =_bag .ReferenceBitmap .GetByte (_egg );
if _bcb !=nil {return ;};_dff =int (_bcde );};if _dag >=-1&&(_dag +1)< _bag .ReferenceBitmap .Height {_bcde ,_bcb =_bag .ReferenceBitmap .GetByte (_egg +_dec );if _bcb !=nil {return ;};_adg =int (_bcde );};_egg ++;if _fee >=1{_bcde ,_bcb =_bag .RegionBitmap .GetByte (_efc -_bcg );
if _bcb !=nil {return ;};_gbd =int (_bcde );};_efc ++;_ffg :=_bag .ReferenceDX %8;_ega :=6+_ffg ;_bg :=_egg %_dec ;if _ega >=0{if _ega < 8{_fa =int16 (_cfb >>uint (_ega ))&0x07;};if _ega < 8{_bbf =int16 (_dff >>uint (_ega ))&0x07;};if _ega < 8{_efg =int16 (_adg >>uint (_ega ))&0x07;
};if _ega ==6&&_bg > 1{if _dag >=1&&(_dag -1)< _bag .ReferenceBitmap .Height {_bcde ,_bcb =_bag .ReferenceBitmap .GetByte (_egg -_dec -2);if _bcb !=nil {return _bcb ;};_fa |=int16 (_bcde <<2)&0x04;};if _dag >=0&&_dag < _bag .ReferenceBitmap .Height {_bcde ,_bcb =_bag .ReferenceBitmap .GetByte (_egg -2);
if _bcb !=nil {return _bcb ;};_bbf |=int16 (_bcde <<2)&0x04;};if _dag >=-1&&_dag +1< _bag .ReferenceBitmap .Height {_bcde ,_bcb =_bag .ReferenceBitmap .GetByte (_egg +_dec -2);if _bcb !=nil {return _bcb ;};_efg |=int16 (_bcde <<2)&0x04;};};if _ega ==0{_cfb =0;
_dff =0;_adg =0;if _bg < _dec -1{if _dag >=1&&_dag -1< _bag .ReferenceBitmap .Height {_bcde ,_bcb =_bag .ReferenceBitmap .GetByte (_egg -_dec );if _bcb !=nil {return _bcb ;};_cfb =int (_bcde );};if _dag >=0&&_dag < _bag .ReferenceBitmap .Height {_bcde ,_bcb =_bag .ReferenceBitmap .GetByte (_egg );
if _bcb !=nil {return _bcb ;};_dff =int (_bcde );};if _dag >=-1&&_dag +1< _bag .ReferenceBitmap .Height {_bcde ,_bcb =_bag .ReferenceBitmap .GetByte (_egg +_dec );if _bcb !=nil {return _bcb ;};_adg =int (_bcde );};};_egg ++;};}else {_fa =int16 (_cfb <<1)&0x07;
_bbf =int16 (_dff <<1)&0x07;_efg =int16 (_adg <<1)&0x07;_cfb =0;_dff =0;_adg =0;if _bg < _dec -1{if _dag >=1&&_dag -1< _bag .ReferenceBitmap .Height {_bcde ,_bcb =_bag .ReferenceBitmap .GetByte (_egg -_dec );if _bcb !=nil {return _bcb ;};_cfb =int (_bcde );
};if _dag >=0&&_dag < _bag .ReferenceBitmap .Height {_bcde ,_bcb =_bag .ReferenceBitmap .GetByte (_egg );if _bcb !=nil {return _bcb ;};_dff =int (_bcde );};if _dag >=-1&&_dag +1< _bag .ReferenceBitmap .Height {_bcde ,_bcb =_bag .ReferenceBitmap .GetByte (_egg +_dec );
if _bcb !=nil {return _bcb ;};_adg =int (_bcde );};_egg ++;};_fa |=int16 ((_cfb >>7)&0x07);_bbf |=int16 ((_dff >>7)&0x07);_efg |=int16 ((_adg >>7)&0x07);};_dfe =int16 (_gbd >>6);_ead =0;_ebd :=(2-_ffg )%8;_cfb <<=uint (_ebd );_dff <<=uint (_ebd );_adg <<=uint (_ebd );
_gbd <<=2;var _fae int ;for _cdce :=0;_cdce < _bbcf ;_cdce ++{_ebf :=_cdce &0x07;_cbc :=_bcd .form (_fa ,_bbf ,_efg ,_dfe ,_ead );if _bag ._ac {_bcde ,_bcb =_bag .RegionBitmap .GetByte (_bag .RegionBitmap .GetByteIndex (_cdce ,_fee ));if _bcb !=nil {return _bcb ;
};_bag ._fcg .SetIndex (int32 (_bag .overrideAtTemplate0 (int (_cbc ),_cdce ,_fee ,int (_bcde ),_ebf )));}else {_bag ._fcg .SetIndex (int32 (_cbc ));};_fae ,_bcb =_bag ._afa .DecodeBit (_bag ._fcg );if _bcb !=nil {return _bcb ;};if _bcb =_bag .RegionBitmap .SetPixel (_cdce ,_fee ,byte (_fae ));
_bcb !=nil {return _bcb ;};_fa =((_fa <<1)|0x01&int16 (_cfb >>7))&0x07;_bbf =((_bbf <<1)|0x01&int16 (_dff >>7))&0x07;_efg =((_efg <<1)|0x01&int16 (_adg >>7))&0x07;_dfe =((_dfe <<1)|0x01&int16 (_gbd >>7))&0x07;_ead =int16 (_fae );if (_cdce -int (_bag .ReferenceDX ))%8==5{_cfb =0;
_dff =0;_adg =0;if ((_cdce -int (_bag .ReferenceDX ))/8)+1< _bag .ReferenceBitmap .RowStride {if _dag >=1&&(_dag -1)< _bag .ReferenceBitmap .Height {_bcde ,_bcb =_bag .ReferenceBitmap .GetByte (_egg -_dec );if _bcb !=nil {return _bcb ;};_cfb =int (_bcde );
};if _dag >=0&&_dag < _bag .ReferenceBitmap .Height {_bcde ,_bcb =_bag .ReferenceBitmap .GetByte (_egg );if _bcb !=nil {return _bcb ;};_dff =int (_bcde );};if _dag >=-1&&(_dag +1)< _bag .ReferenceBitmap .Height {_bcde ,_bcb =_bag .ReferenceBitmap .GetByte (_egg +_dec );
if _bcb !=nil {return _bcb ;};_adg =int (_bcde );};};_egg ++;}else {_cfb <<=1;_dff <<=1;_adg <<=1;};if _ebf ==5&&_fee >=1{if ((_cdce >>3)+1)>=_bag .RegionBitmap .RowStride {_gbd =0;}else {_bcde ,_bcb =_bag .RegionBitmap .GetByte (_efc -_bcg );if _bcb !=nil {return _bcb ;
};_gbd =int (_bcde );};_efc ++;}else {_gbd <<=1;};};return nil ;};func (_dfc *PatternDictionary )readPatternWidthAndHeight ()error {_caa ,_egcf :=_dfc ._gace .ReadByte ();if _egcf !=nil {return _egcf ;};_dfc .HdpWidth =_caa ;_caa ,_egcf =_dfc ._gace .ReadByte ();
if _egcf !=nil {return _egcf ;};_dfc .HdpHeight =_caa ;return nil ;};func (_dcd *GenericRegion )decodeTemplate1 (_bgd ,_gfb ,_gec int ,_ecc ,_dcbf int )(_cgb error ){const _bcaf ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0031";
var (_afdb ,_gede int ;_fbgg ,_gbfa int ;_afbg byte ;_ddd ,_daga int ;);if _bgd >=1{_afbg ,_cgb =_dcd .Bitmap .GetByte (_dcbf );if _cgb !=nil {return _fcd .Wrap (_cgb ,_bcaf ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_fbgg =int (_afbg );};if _bgd >=2{_afbg ,_cgb =_dcd .Bitmap .GetByte (_dcbf -_dcd .Bitmap .RowStride );
if _cgb !=nil {return _fcd .Wrap (_cgb ,_bcaf ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_gbfa =int (_afbg )<<5;};_afdb =((_fbgg >>1)&0x1f8)|((_gbfa >>1)&0x1e00);for _gaa :=0;_gaa < _gec ;_gaa =_ddd {var (_dbad byte ;_ggag int ;);_ddd =_gaa +8;
if _ddga :=_gfb -_gaa ;_ddga > 8{_ggag =8;}else {_ggag =_ddga ;};if _bgd > 0{_fbgg <<=8;if _ddd < _gfb {_afbg ,_cgb =_dcd .Bitmap .GetByte (_dcbf +1);if _cgb !=nil {return _fcd .Wrap (_cgb ,_bcaf ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_fbgg |=int (_afbg );
};};if _bgd > 1{_gbfa <<=8;if _ddd < _gfb {_afbg ,_cgb =_dcd .Bitmap .GetByte (_dcbf -_dcd .Bitmap .RowStride +1);if _cgb !=nil {return _fcd .Wrap (_cgb ,_bcaf ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_gbfa |=int (_afbg )<<5;};};for _aabg :=0;
_aabg < _ggag ;_aabg ++{if _dcd ._bcac {_gede =_dcd .overrideAtTemplate1 (_afdb ,_gaa +_aabg ,_bgd ,int (_dbad ),_aabg );_dcd ._cfbb .SetIndex (int32 (_gede ));}else {_dcd ._cfbb .SetIndex (int32 (_afdb ));};_daga ,_cgb =_dcd ._aad .DecodeBit (_dcd ._cfbb );
if _cgb !=nil {return _fcd .Wrap (_cgb ,_bcaf ,"");};_dbad |=byte (_daga )<<uint (7-_aabg );_ebe :=uint (8-_aabg );_afdb =((_afdb &0xefb)<<1)|_daga |((_fbgg >>_ebe )&0x8)|((_gbfa >>_ebe )&0x200);};if _eede :=_dcd .Bitmap .SetByte (_ecc ,_dbad );_eede !=nil {return _fcd .Wrap (_eede ,_bcaf ,"");
};_ecc ++;_dcbf ++;};return nil ;};func (_gbdb *TextRegion )blit (_gfdcd *_e .Bitmap ,_ege int64 )error {if _gbdb .IsTransposed ==0&&(_gbdb .ReferenceCorner ==2||_gbdb .ReferenceCorner ==3){_gbdb ._bgcde +=int64 (_gfdcd .Width -1);}else if _gbdb .IsTransposed ==1&&(_gbdb .ReferenceCorner ==0||_gbdb .ReferenceCorner ==2){_gbdb ._bgcde +=int64 (_gfdcd .Height -1);
};_cbea :=_gbdb ._bgcde ;if _gbdb .IsTransposed ==1{_cbea ,_ege =_ege ,_cbea ;};switch _gbdb .ReferenceCorner {case 0:_ege -=int64 (_gfdcd .Height -1);case 2:_ege -=int64 (_gfdcd .Height -1);_cbea -=int64 (_gfdcd .Width -1);case 3:_cbea -=int64 (_gfdcd .Width -1);
};_bbda :=_e .Blit (_gfdcd ,_gbdb .RegionBitmap ,int (_cbea ),int (_ege ),_gbdb .CombinationOperator );if _bbda !=nil {return _bbda ;};if _gbdb .IsTransposed ==0&&(_gbdb .ReferenceCorner ==0||_gbdb .ReferenceCorner ==1){_gbdb ._bgcde +=int64 (_gfdcd .Width -1);
};if _gbdb .IsTransposed ==1&&(_gbdb .ReferenceCorner ==1||_gbdb .ReferenceCorner ==3){_gbdb ._bgcde +=int64 (_gfdcd .Height -1);};return nil ;};func (_bcdfd *RegionSegment )parseHeader ()error {const _fdfc ="p\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072";
_ba .Log .Trace ("\u005b\u0052\u0045\u0047I\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002dH\u0045A\u0044\u0045\u0052\u005d\u0020\u0042\u0065g\u0069\u006e");defer func (){_ba .Log .Trace ("\u005b\u0052\u0045G\u0049\u004f\u004e\u005d[\u0050\u0041\u0052\u0053\u0045\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
}();_fdfb ,_afbd :=_bcdfd ._fba .ReadBits (32);if _afbd !=nil {return _fcd .Wrap (_afbd ,_fdfc ,"\u0077\u0069\u0064t\u0068");};_bcdfd .BitmapWidth =uint32 (_fdfb &_d .MaxUint32 );_fdfb ,_afbd =_bcdfd ._fba .ReadBits (32);if _afbd !=nil {return _fcd .Wrap (_afbd ,_fdfc ,"\u0068\u0065\u0069\u0067\u0068\u0074");
};_bcdfd .BitmapHeight =uint32 (_fdfb &_d .MaxUint32 );_fdfb ,_afbd =_bcdfd ._fba .ReadBits (32);if _afbd !=nil {return _fcd .Wrap (_afbd ,_fdfc ,"\u0078\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_bcdfd .XLocation =uint32 (_fdfb &_d .MaxUint32 );
_fdfb ,_afbd =_bcdfd ._fba .ReadBits (32);if _afbd !=nil {return _fcd .Wrap (_afbd ,_fdfc ,"\u0079\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_bcdfd .YLocation =uint32 (_fdfb &_d .MaxUint32 );if _ ,_afbd =_bcdfd ._fba .ReadBits (5);_afbd !=nil {return _fcd .Wrap (_afbd ,_fdfc ,"\u0064i\u0072\u0079\u0020\u0072\u0065\u0061d");
};if _afbd =_bcdfd .readCombinationOperator ();_afbd !=nil {return _fcd .Wrap (_afbd ,_fdfc ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};return nil ;};func (_decec *Header )readHeaderLength (_abed _dc .StreamReader ,_cbad int64 ){_decec .HeaderLength =_abed .StreamPosition ()-_cbad ;
};func (_abg *TableSegment )parseHeader ()error {var (_gaaee int ;_dadb uint64 ;_gfgeg error ;);_gaaee ,_gfgeg =_abg ._abfc .ReadBit ();if _gfgeg !=nil {return _gfgeg ;};if _gaaee ==1{return _gfe .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0061\u0062\u006c\u0065 \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0064e\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u002e\u0020\u0042\u002e\u0032\u002e1\u0020\u0043\u006f\u0064\u0065\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0042\u0069\u0074\u0020\u0037\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u007a\u0065\u0072\u006f\u002e\u0020\u0057a\u0073\u003a \u0025\u0064",_gaaee );
};if _dadb ,_gfgeg =_abg ._abfc .ReadBits (3);_gfgeg !=nil {return _gfgeg ;};_abg ._efce =(int32 (_dadb )+1)&0xf;if _dadb ,_gfgeg =_abg ._abfc .ReadBits (3);_gfgeg !=nil {return _gfgeg ;};_abg ._fegcf =(int32 (_dadb )+1)&0xf;if _dadb ,_gfgeg =_abg ._abfc .ReadBits (32);
_gfgeg !=nil {return _gfgeg ;};_abg ._fcge =int32 (_dadb &_d .MaxInt32 );if _dadb ,_gfgeg =_abg ._abfc .ReadBits (32);_gfgeg !=nil {return _gfgeg ;};_abg ._fceg =int32 (_dadb &_d .MaxInt32 );return nil ;};var _ templater =&template1 {};func (_ebcc *SymbolDictionary )Init (h *Header ,r _dc .StreamReader )error {_ebcc .Header =h ;
_ebcc ._decef =r ;return _ebcc .parseHeader ();};func (_aeca *GenericRegion )GetRegionInfo ()*RegionSegment {return _aeca .RegionSegment };type TableSegment struct{_abfc _dc .StreamReader ;_adag int32 ;_fegcf int32 ;_efce int32 ;_fcge int32 ;_fceg int32 ;
};func (_cb *EndOfStripe )Init (h *Header ,r _dc .StreamReader )error {_cb ._gg =r ;return _cb .parseHeader (h ,r );};func (_cefe *SymbolDictionary )decodeThroughTextRegion (_ceda ,_aege ,_adfg uint32 )error {if _cefe ._fgd ==nil {_cefe ._fgd =_aegc (_cefe ._decef ,nil );
_cefe ._fgd .setContexts (_cefe ._bcad ,_af .NewStats (512,1),_af .NewStats (512,1),_af .NewStats (512,1),_af .NewStats (512,1),_cefe ._ggfa ,_af .NewStats (512,1),_af .NewStats (512,1),_af .NewStats (512,1),_af .NewStats (512,1));};if _eedda :=_cefe .setSymbolsArray ();
_eedda !=nil {return _eedda ;};_cefe ._fgd .setParameters (_cefe ._abad ,_cefe .IsHuffmanEncoded ,true ,_ceda ,_aege ,_adfg ,1,_cefe ._degcg +_cefe ._bdega ,0,0,0,1,0,0,0,0,0,0,0,0,0,_cefe .SdrTemplate ,_cefe .SdrATX ,_cefe .SdrATY ,_cefe ._gcbc ,_cefe ._cbae );
return _cefe .addSymbol (_cefe ._fgd );};func (_dfgf *GenericRegion )GetRegionBitmap ()(_bebb *_e .Bitmap ,_edfb error ){if _dfgf .Bitmap !=nil {return _dfgf .Bitmap ,nil ;};if _dfgf .IsMMREncoded {if _dfgf ._dcb ==nil {_dfgf ._dcb ,_edfb =_ee .New (_dfgf ._fbeb ,int (_dfgf .RegionSegment .BitmapWidth ),int (_dfgf .RegionSegment .BitmapHeight ),_dfgf .DataOffset ,_dfgf .DataLength );
if _edfb !=nil {return nil ,_edfb ;};};_dfgf .Bitmap ,_edfb =_dfgf ._dcb .UncompressMMR ();return _dfgf .Bitmap ,_edfb ;};if _edfb =_dfgf .updateOverrideFlags ();_edfb !=nil {return nil ,_edfb ;};var _edd int ;if _dfgf ._aad ==nil {_dfgf ._aad ,_edfb =_af .New (_dfgf ._fbeb );
if _edfb !=nil {return nil ,_edfb ;};};if _dfgf ._cfbb ==nil {_dfgf ._cfbb =_af .NewStats (65536,1);};_dfgf .Bitmap =_e .New (int (_dfgf .RegionSegment .BitmapWidth ),int (_dfgf .RegionSegment .BitmapHeight ));_gdaa :=int (uint32 (_dfgf .Bitmap .Width +7)&(^uint32 (7)));
for _ddff :=0;_ddff < _dfgf .Bitmap .Height ;_ddff ++{if _dfgf .IsTPGDon {var _cdd int ;_cdd ,_edfb =_dfgf .decodeSLTP ();if _edfb !=nil {return nil ,_edfb ;};_edd ^=_cdd ;};if _edd ==1{if _ddff > 0{if _edfb =_dfgf .copyLineAbove (_ddff );_edfb !=nil {return nil ,_edfb ;
};};}else {if _edfb =_dfgf .decodeLine (_ddff ,_dfgf .Bitmap .Width ,_gdaa );_edfb !=nil {return nil ,_edfb ;};};};return _dfgf .Bitmap ,nil ;};func (_bagb *SymbolDictionary )getSymbol (_fdcb int )(*_e .Bitmap ,error ){const _aede ="\u0067e\u0074\u0053\u0079\u006d\u0062\u006fl";
_cee ,_ddfge :=_bagb ._bdgf .GetBitmap (_bagb ._eece [_fdcb ]);if _ddfge !=nil {return nil ,_fcd .Wrap (_ddfge ,_aede ,"\u0063\u0061n\u0027\u0074\u0020g\u0065\u0074\u0020\u0073\u0079\u006d\u0062\u006f\u006c");};return _cee ,nil ;};func (_aga *GenericRegion )overrideAtTemplate0b (_ffa ,_bbfc ,_dbg ,_dacd ,_efge ,_ecd int )int {if _aga .GBAtOverride [0]{_ffa &=0xFFFD;
if _aga .GBAtY [0]==0&&_aga .GBAtX [0]>=-int8 (_efge ){_ffa |=(_dacd >>uint (int8 (_ecd )-_aga .GBAtX [0]&0x1))<<1;}else {_ffa |=int (_aga .getPixel (_bbfc +int (_aga .GBAtX [0]),_dbg +int (_aga .GBAtY [0])))<<1;};};if _aga .GBAtOverride [1]{_ffa &=0xDFFF;
if _aga .GBAtY [1]==0&&_aga .GBAtX [1]>=-int8 (_efge ){_ffa |=(_dacd >>uint (int8 (_ecd )-_aga .GBAtX [1]&0x1))<<13;}else {_ffa |=int (_aga .getPixel (_bbfc +int (_aga .GBAtX [1]),_dbg +int (_aga .GBAtY [1])))<<13;};};if _aga .GBAtOverride [2]{_ffa &=0xFDFF;
if _aga .GBAtY [2]==0&&_aga .GBAtX [2]>=-int8 (_efge ){_ffa |=(_dacd >>uint (int8 (_ecd )-_aga .GBAtX [2]&0x1))<<9;}else {_ffa |=int (_aga .getPixel (_bbfc +int (_aga .GBAtX [2]),_dbg +int (_aga .GBAtY [2])))<<9;};};if _aga .GBAtOverride [3]{_ffa &=0xBFFF;
if _aga .GBAtY [3]==0&&_aga .GBAtX [3]>=-int8 (_efge ){_ffa |=(_dacd >>uint (int8 (_ecd )-_aga .GBAtX [3]&0x1))<<14;}else {_ffa |=int (_aga .getPixel (_bbfc +int (_aga .GBAtX [3]),_dbg +int (_aga .GBAtY [3])))<<14;};};if _aga .GBAtOverride [4]{_ffa &=0xEFFF;
if _aga .GBAtY [4]==0&&_aga .GBAtX [4]>=-int8 (_efge ){_ffa |=(_dacd >>uint (int8 (_ecd )-_aga .GBAtX [4]&0x1))<<12;}else {_ffa |=int (_aga .getPixel (_bbfc +int (_aga .GBAtX [4]),_dbg +int (_aga .GBAtY [4])))<<12;};};if _aga .GBAtOverride [5]{_ffa &=0xFFDF;
if _aga .GBAtY [5]==0&&_aga .GBAtX [5]>=-int8 (_efge ){_ffa |=(_dacd >>uint (int8 (_ecd )-_aga .GBAtX [5]&0x1))<<5;}else {_ffa |=int (_aga .getPixel (_bbfc +int (_aga .GBAtX [5]),_dbg +int (_aga .GBAtY [5])))<<5;};};if _aga .GBAtOverride [6]{_ffa &=0xFFFB;
if _aga .GBAtY [6]==0&&_aga .GBAtX [6]>=-int8 (_efge ){_ffa |=(_dacd >>uint (int8 (_ecd )-_aga .GBAtX [6]&0x1))<<2;}else {_ffa |=int (_aga .getPixel (_bbfc +int (_aga .GBAtX [6]),_dbg +int (_aga .GBAtY [6])))<<2;};};if _aga .GBAtOverride [7]{_ffa &=0xFFF7;
if _aga .GBAtY [7]==0&&_aga .GBAtX [7]>=-int8 (_efge ){_ffa |=(_dacd >>uint (int8 (_ecd )-_aga .GBAtX [7]&0x1))<<3;}else {_ffa |=int (_aga .getPixel (_bbfc +int (_aga .GBAtX [7]),_dbg +int (_aga .GBAtY [7])))<<3;};};if _aga .GBAtOverride [8]{_ffa &=0xF7FF;
if _aga .GBAtY [8]==0&&_aga .GBAtX [8]>=-int8 (_efge ){_ffa |=(_dacd >>uint (int8 (_ecd )-_aga .GBAtX [8]&0x1))<<11;}else {_ffa |=int (_aga .getPixel (_bbfc +int (_aga .GBAtX [8]),_dbg +int (_aga .GBAtY [8])))<<11;};};if _aga .GBAtOverride [9]{_ffa &=0xFFEF;
if _aga .GBAtY [9]==0&&_aga .GBAtX [9]>=-int8 (_efge ){_ffa |=(_dacd >>uint (int8 (_ecd )-_aga .GBAtX [9]&0x1))<<4;}else {_ffa |=int (_aga .getPixel (_bbfc +int (_aga .GBAtX [9]),_dbg +int (_aga .GBAtY [9])))<<4;};};if _aga .GBAtOverride [10]{_ffa &=0x7FFF;
if _aga .GBAtY [10]==0&&_aga .GBAtX [10]>=-int8 (_efge ){_ffa |=(_dacd >>uint (int8 (_ecd )-_aga .GBAtX [10]&0x1))<<15;}else {_ffa |=int (_aga .getPixel (_bbfc +int (_aga .GBAtX [10]),_dbg +int (_aga .GBAtY [10])))<<15;};};if _aga .GBAtOverride [11]{_ffa &=0xFDFF;
if _aga .GBAtY [11]==0&&_aga .GBAtX [11]>=-int8 (_efge ){_ffa |=(_dacd >>uint (int8 (_ecd )-_aga .GBAtX [11]&0x1))<<10;}else {_ffa |=int (_aga .getPixel (_bbfc +int (_aga .GBAtX [11]),_dbg +int (_aga .GBAtY [11])))<<10;};};return _ffa ;};func (_abe *Header )readDataStartOffset (_abdf _dc .StreamReader ,_gdaad OrganizationType ){if _gdaad ==OSequential {_abe .SegmentDataStartOffset =uint64 (_abdf .StreamPosition ());
};};func (_gccg *Header )referenceSize ()uint {switch {case _gccg .SegmentNumber <=255:return 1;case _gccg .SegmentNumber <=65535:return 2;default:return 4;};};func (_gfea *TextRegion )setContexts (_cfccd *_af .DecoderStats ,_fbcab *_af .DecoderStats ,_bgeb *_af .DecoderStats ,_afde *_af .DecoderStats ,_bgffb *_af .DecoderStats ,_dacdc *_af .DecoderStats ,_ebcb *_af .DecoderStats ,_aeabd *_af .DecoderStats ,_abeb *_af .DecoderStats ,_fdca *_af .DecoderStats ){_gfea ._gdegf =_fbcab ;
_gfea ._efabc =_bgeb ;_gfea ._aded =_afde ;_gfea ._debd =_bgffb ;_gfea ._cbfc =_ebcb ;_gfea ._dfbb =_aeabd ;_gfea ._bcda =_dacdc ;_gfea ._feac =_abeb ;_gfea ._cefg =_fdca ;_gfea ._dfcd =_cfccd ;};func (_afgb *GenericRegion )overrideAtTemplate0a (_beac ,_dcad ,_geb ,_dffe ,_dge ,_ceg int )int {if _afgb .GBAtOverride [0]{_beac &=0xFFEF;
if _afgb .GBAtY [0]==0&&_afgb .GBAtX [0]>=-int8 (_dge ){_beac |=(_dffe >>uint (int8 (_ceg )-_afgb .GBAtX [0]&0x1))<<4;}else {_beac |=int (_afgb .getPixel (_dcad +int (_afgb .GBAtX [0]),_geb +int (_afgb .GBAtY [0])))<<4;};};if _afgb .GBAtOverride [1]{_beac &=0xFBFF;
if _afgb .GBAtY [1]==0&&_afgb .GBAtX [1]>=-int8 (_dge ){_beac |=(_dffe >>uint (int8 (_ceg )-_afgb .GBAtX [1]&0x1))<<10;}else {_beac |=int (_afgb .getPixel (_dcad +int (_afgb .GBAtX [1]),_geb +int (_afgb .GBAtY [1])))<<10;};};if _afgb .GBAtOverride [2]{_beac &=0xF7FF;
if _afgb .GBAtY [2]==0&&_afgb .GBAtX [2]>=-int8 (_dge ){_beac |=(_dffe >>uint (int8 (_ceg )-_afgb .GBAtX [2]&0x1))<<11;}else {_beac |=int (_afgb .getPixel (_dcad +int (_afgb .GBAtX [2]),_geb +int (_afgb .GBAtY [2])))<<11;};};if _afgb .GBAtOverride [3]{_beac &=0x7FFF;
if _afgb .GBAtY [3]==0&&_afgb .GBAtX [3]>=-int8 (_dge ){_beac |=(_dffe >>uint (int8 (_ceg )-_afgb .GBAtX [3]&0x1))<<15;}else {_beac |=int (_afgb .getPixel (_dcad +int (_afgb .GBAtX [3]),_geb +int (_afgb .GBAtY [3])))<<15;};};return _beac ;};func (_gfbd *Header )writeSegmentNumber (_ddgc _dc .BinaryWriter )(_baa int ,_efafd error ){_cacf :=make ([]byte ,4);
_gf .BigEndian .PutUint32 (_cacf ,_gfbd .SegmentNumber );if _baa ,_efafd =_ddgc .Write (_cacf );_efafd !=nil {return 0,_fcd .Wrap (_efafd ,"\u0048e\u0061\u0064\u0065\u0072.\u0077\u0072\u0069\u0074\u0065S\u0065g\u006de\u006e\u0074\u004e\u0075\u006d\u0062\u0065r","");
};return _baa ,nil ;};func (_ggddb *SymbolDictionary )huffDecodeRefAggNInst ()(int64 ,error ){if !_ggddb .SdHuffAggInstanceSelection {_gebb ,_ageb :=_fd .GetStandardTable (1);if _ageb !=nil {return 0,_ageb ;};return _gebb .Decode (_ggddb ._decef );};if _ggddb ._eebd ==nil {var (_babb int ;
_caee error ;);if _ggddb .SdHuffDecodeHeightSelection ==3{_babb ++;};if _ggddb .SdHuffDecodeWidthSelection ==3{_babb ++;};if _ggddb .SdHuffBMSizeSelection ==3{_babb ++;};_ggddb ._eebd ,_caee =_ggddb .getUserTable (_babb );if _caee !=nil {return 0,_caee ;
};};return _ggddb ._eebd .Decode (_ggddb ._decef );};type templater interface{form (_gbb ,_geg ,_fbb ,_defa ,_bcbc int16 )int16 ;setIndex (_dbe *_af .DecoderStats );};type TextRegion struct{_bgbb _dc .StreamReader ;RegionInfo *RegionSegment ;SbrTemplate int8 ;
SbDsOffset int8 ;DefaultPixel int8 ;CombinationOperator _e .CombinationOperator ;IsTransposed int8 ;ReferenceCorner int16 ;LogSBStrips int16 ;UseRefinement bool ;IsHuffmanEncoded bool ;SbHuffRSize int8 ;SbHuffRDY int8 ;SbHuffRDX int8 ;SbHuffRDHeight int8 ;
SbHuffRDWidth int8 ;SbHuffDT int8 ;SbHuffDS int8 ;SbHuffFS int8 ;SbrATX []int8 ;SbrATY []int8 ;NumberOfSymbolInstances uint32 ;_bgcde int64 ;SbStrips int8 ;NumberOfSymbols uint32 ;RegionBitmap *_e .Bitmap ;Symbols []*_e .Bitmap ;_ecbcd *_af .Decoder ;_dbfbb *GenericRefinementRegion ;
_gdegf *_af .DecoderStats ;_efabc *_af .DecoderStats ;_aded *_af .DecoderStats ;_debd *_af .DecoderStats ;_dfdb *_af .DecoderStats ;_cbfc *_af .DecoderStats ;_dfbb *_af .DecoderStats ;_bcda *_af .DecoderStats ;_feac *_af .DecoderStats ;_cefg *_af .DecoderStats ;
_dfcd *_af .DecoderStats ;_cedd int8 ;_aadg *_fd .FixedSizeTable ;Header *Header ;_ebbg _fd .Tabler ;_afag _fd .Tabler ;_egdb _fd .Tabler ;_bgff _fd .Tabler ;_aedf _fd .Tabler ;_ecda _fd .Tabler ;_cbcc _fd .Tabler ;_bcga _fd .Tabler ;_gfcg ,_eeec map[int ]int ;
_cbcd []int ;_afagc *_e .Points ;_aegg *_e .Bitmaps ;_ddbb *_fc .IntSlice ;_ffabd ,_edac int ;_fgcc *_e .Boxes ;};func (_gag *template0 )form (_fcca ,_ae ,_edb ,_gea ,_bef int16 )int16 {return (_fcca <<10)|(_ae <<7)|(_edb <<4)|(_gea <<1)|_bef ;};func (_efcc *TextRegion )GetRegionBitmap ()(*_e .Bitmap ,error ){if _efcc .RegionBitmap !=nil {return _efcc .RegionBitmap ,nil ;
};if !_efcc .IsHuffmanEncoded {if _bgea :=_efcc .setCodingStatistics ();_bgea !=nil {return nil ,_bgea ;};};if _ffabe :=_efcc .createRegionBitmap ();_ffabe !=nil {return nil ,_ffabe ;};if _dbbf :=_efcc .decodeSymbolInstances ();_dbbf !=nil {return nil ,_dbbf ;
};return _efcc .RegionBitmap ,nil ;};func (_cgf *GenericRegion )computeSegmentDataStructure ()error {_cgf .DataOffset =_cgf ._fbeb .StreamPosition ();_cgf .DataHeaderLength =_cgf .DataOffset -_cgf .DataHeaderOffset ;_cgf .DataLength =int64 (_cgf ._fbeb .Length ())-_cgf .DataHeaderLength ;
return nil ;};type EndOfStripe struct{_gg _dc .StreamReader ;_c int ;};func _dbfb (_dage int )int {if _dage ==0{return 0;};_dage |=_dage >>1;_dage |=_dage >>2;_dage |=_dage >>4;_dage |=_dage >>8;_dage |=_dage >>16;return (_dage +1)>>1;};func (_gcc *GenericRefinementRegion )decodeTypicalPredictedLineTemplate0 (_ccb ,_efa ,_fga ,_db ,_gaf ,_cf ,_ddf ,_bab ,_dba int )error {var (_bca ,_eda ,_cdc ,_ecbc ,_de ,_ad int ;
_geda byte ;_daf error ;);if _ccb > 0{_geda ,_daf =_gcc .RegionBitmap .GetByte (_ddf -_fga );if _daf !=nil {return _daf ;};_cdc =int (_geda );};if _bab > 0&&_bab <=_gcc .ReferenceBitmap .Height {_geda ,_daf =_gcc .ReferenceBitmap .GetByte (_dba -_db +_cf );
if _daf !=nil {return _daf ;};_ecbc =int (_geda )<<4;};if _bab >=0&&_bab < _gcc .ReferenceBitmap .Height {_geda ,_daf =_gcc .ReferenceBitmap .GetByte (_dba +_cf );if _daf !=nil {return _daf ;};_de =int (_geda )<<1;};if _bab > -2&&_bab < _gcc .ReferenceBitmap .Height -1{_geda ,_daf =_gcc .ReferenceBitmap .GetByte (_dba +_db +_cf );
if _daf !=nil {return _daf ;};_ad =int (_geda );};_bca =((_cdc >>5)&0x6)|((_ad >>2)&0x30)|(_de &0x180)|(_ecbc &0xc00);var _cfc int ;for _gac :=0;_gac < _gaf ;_gac =_cfc {var _fec int ;_cfc =_gac +8;var _eeb int ;if _eeb =_efa -_gac ;_eeb > 8{_eeb =8;};
_ccf :=_cfc < _efa ;_adc :=_cfc < _gcc .ReferenceBitmap .Width ;_cff :=_cf +1;if _ccb > 0{_geda =0;if _ccf {_geda ,_daf =_gcc .RegionBitmap .GetByte (_ddf -_fga +1);if _daf !=nil {return _daf ;};};_cdc =(_cdc <<8)|int (_geda );};if _bab > 0&&_bab <=_gcc .ReferenceBitmap .Height {var _bcf int ;
if _adc {_geda ,_daf =_gcc .ReferenceBitmap .GetByte (_dba -_db +_cff );if _daf !=nil {return _daf ;};_bcf =int (_geda )<<4;};_ecbc =(_ecbc <<8)|_bcf ;};if _bab >=0&&_bab < _gcc .ReferenceBitmap .Height {var _bbdd int ;if _adc {_geda ,_daf =_gcc .ReferenceBitmap .GetByte (_dba +_cff );
if _daf !=nil {return _daf ;};_bbdd =int (_geda )<<1;};_de =(_de <<8)|_bbdd ;};if _bab > -2&&_bab < (_gcc .ReferenceBitmap .Height -1){_geda =0;if _adc {_geda ,_daf =_gcc .ReferenceBitmap .GetByte (_dba +_db +_cff );if _daf !=nil {return _daf ;};};_ad =(_ad <<8)|int (_geda );
};for _edc :=0;_edc < _eeb ;_edc ++{var _be int ;_fed :=false ;_ecg :=(_bca >>4)&0x1ff;if _ecg ==0x1ff{_fed =true ;_be =1;}else if _ecg ==0x00{_fed =true ;};if !_fed {if _gcc ._ac {_eda =_gcc .overrideAtTemplate0 (_bca ,_gac +_edc ,_ccb ,_fec ,_edc );_gcc ._fcg .SetIndex (int32 (_eda ));
}else {_gcc ._fcg .SetIndex (int32 (_bca ));};_be ,_daf =_gcc ._afa .DecodeBit (_gcc ._fcg );if _daf !=nil {return _daf ;};};_cg :=uint (7-_edc );_fec |=_be <<_cg ;_bca =((_bca &0xdb6)<<1)|_be |(_cdc >>_cg +5)&0x002|((_ad >>_cg +2)&0x010)|((_de >>_cg )&0x080)|((_ecbc >>_cg )&0x400);
};_daf =_gcc .RegionBitmap .SetByte (_ddf ,byte (_fec ));if _daf !=nil {return _daf ;};_ddf ++;_dba ++;};return nil ;};func (_eca *TextRegion )readRegionFlags ()error {var (_gcec int ;_degbd uint64 ;_ccfd error ;);_gcec ,_ccfd =_eca ._bgbb .ReadBit ();
if _ccfd !=nil {return _ccfd ;};_eca .SbrTemplate =int8 (_gcec );_degbd ,_ccfd =_eca ._bgbb .ReadBits (5);if _ccfd !=nil {return _ccfd ;};_eca .SbDsOffset =int8 (_degbd );if _eca .SbDsOffset > 0x0f{_eca .SbDsOffset -=0x20;};_gcec ,_ccfd =_eca ._bgbb .ReadBit ();
if _ccfd !=nil {return _ccfd ;};_eca .DefaultPixel =int8 (_gcec );_degbd ,_ccfd =_eca ._bgbb .ReadBits (2);if _ccfd !=nil {return _ccfd ;};_eca .CombinationOperator =_e .CombinationOperator (int (_degbd )&0x3);_gcec ,_ccfd =_eca ._bgbb .ReadBit ();if _ccfd !=nil {return _ccfd ;
};_eca .IsTransposed =int8 (_gcec );_degbd ,_ccfd =_eca ._bgbb .ReadBits (2);if _ccfd !=nil {return _ccfd ;};_eca .ReferenceCorner =int16 (_degbd )&0x3;_degbd ,_ccfd =_eca ._bgbb .ReadBits (2);if _ccfd !=nil {return _ccfd ;};_eca .LogSBStrips =int16 (_degbd )&0x3;
_eca .SbStrips =1<<uint (_eca .LogSBStrips );_gcec ,_ccfd =_eca ._bgbb .ReadBit ();if _ccfd !=nil {return _ccfd ;};if _gcec ==1{_eca .UseRefinement =true ;};_gcec ,_ccfd =_eca ._bgbb .ReadBit ();if _ccfd !=nil {return _ccfd ;};if _gcec ==1{_eca .IsHuffmanEncoded =true ;
};return nil ;};func (_dadg *Header )pageSize ()uint {if _dadg .PageAssociation <=255{return 1;};return 4;};func (_bgda *SymbolDictionary )setAtPixels ()error {if _bgda .IsHuffmanEncoded {return nil ;};_dddb :=1;if _bgda .SdTemplate ==0{_dddb =4;};if _efgd :=_bgda .readAtPixels (_dddb );
_efgd !=nil {return _efgd ;};return nil ;};func (_gbcg *HalftoneRegion )GetRegionBitmap ()(*_e .Bitmap ,error ){if _gbcg .HalftoneRegionBitmap !=nil {return _gbcg .HalftoneRegionBitmap ,nil ;};var _dbfg error ;_gbcg .HalftoneRegionBitmap =_e .New (int (_gbcg .RegionSegment .BitmapWidth ),int (_gbcg .RegionSegment .BitmapHeight ));
if _gbcg .Patterns ==nil ||len (_gbcg .Patterns )==0{_gbcg .Patterns ,_dbfg =_gbcg .GetPatterns ();if _dbfg !=nil {return nil ,_dbfg ;};};if _gbcg .HDefaultPixel ==1{_gbcg .HalftoneRegionBitmap .SetDefaultPixel ();};_dgac :=_d .Ceil (_d .Log (float64 (len (_gbcg .Patterns )))/_d .Log (2));
_gfef :=int (_dgac );var _bcbb [][]int ;_bcbb ,_dbfg =_gbcg .grayScaleDecoding (_gfef );if _dbfg !=nil {return nil ,_dbfg ;};if _dbfg =_gbcg .renderPattern (_bcbb );_dbfg !=nil {return nil ,_dbfg ;};return _gbcg .HalftoneRegionBitmap ,nil ;};func (_aea *GenericRegion )Init (h *Header ,r _dc .StreamReader )error {_aea .RegionSegment =NewRegionSegment (r );
_aea ._fbeb =r ;return _aea .parseHeader ();};func NewHeader (d Documenter ,r _dc .StreamReader ,offset int64 ,organizationType OrganizationType )(*Header ,error ){_befd :=&Header {Reader :r };if _eadb :=_befd .parse (d ,r ,offset ,organizationType );_eadb !=nil {return nil ,_fcd .Wrap (_eadb ,"\u004ee\u0077\u0048\u0065\u0061\u0064\u0065r","");
};return _befd ,nil ;};func (_efba *Header )Encode (w _dc .BinaryWriter )(_cffgb int ,_bcdf error ){const _egc ="\u0048\u0065\u0061d\u0065\u0072\u002e\u0057\u0072\u0069\u0074\u0065";var _aaeb _dc .BinaryWriter ;_ba .Log .Trace ("\u005b\u0053\u0045G\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045\u0052\u005d[\u0045\u004e\u0043\u004f\u0044\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");
defer func (){if _bcdf !=nil {_ba .Log .Trace ("[\u0053\u0045\u0047\u004d\u0045\u004eT\u002d\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0045\u004e\u0043\u004f\u0044E\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020%\u0076",_bcdf );}else {_ba .Log .Trace ("\u005b\u0053\u0045\u0047ME\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0025\u0076",_efba );
_ba .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045N\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u005b\u0045\u004e\u0043O\u0044\u0045\u005d\u0020\u0046\u0069\u006ei\u0073\u0068\u0065\u0064");};}();w .FinishByte ();if _efba .SegmentData !=nil {_bccf ,_bbac :=_efba .SegmentData .(SegmentEncoder );
if !_bbac {return 0,_fcd .Errorf (_egc ,"\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0064\u006f\u0065s\u006e\u0027\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074 \u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0045\u006e\u0063\u006f\u0064er\u0020\u0069\u006e\u0074\u0065\u0072\u0066\u0061\u0063\u0065",_efba .SegmentData );
};_aaeb =_dc .BufferedMSB ();_cffgb ,_bcdf =_bccf .Encode (_aaeb );if _bcdf !=nil {return 0,_fcd .Wrap (_bcdf ,_egc ,"");};_efba .SegmentDataLength =uint64 (_cffgb );};if _efba .pageSize ()==4{_efba .PageAssociationFieldSize =true ;};var _eba int ;_eba ,_bcdf =_efba .writeSegmentNumber (w );
if _bcdf !=nil {return 0,_fcd .Wrap (_bcdf ,_egc ,"");};_cffgb +=_eba ;if _bcdf =_efba .writeFlags (w );_bcdf !=nil {return _cffgb ,_fcd .Wrap (_bcdf ,_egc ,"");};_cffgb ++;_eba ,_bcdf =_efba .writeReferredToCount (w );if _bcdf !=nil {return 0,_fcd .Wrap (_bcdf ,_egc ,"");
};_cffgb +=_eba ;_eba ,_bcdf =_efba .writeReferredToSegments (w );if _bcdf !=nil {return 0,_fcd .Wrap (_bcdf ,_egc ,"");};_cffgb +=_eba ;_eba ,_bcdf =_efba .writeSegmentPageAssociation (w );if _bcdf !=nil {return 0,_fcd .Wrap (_bcdf ,_egc ,"");};_cffgb +=_eba ;
_eba ,_bcdf =_efba .writeSegmentDataLength (w );if _bcdf !=nil {return 0,_fcd .Wrap (_bcdf ,_egc ,"");};_cffgb +=_eba ;_efba .HeaderLength =int64 (_cffgb )-int64 (_efba .SegmentDataLength );if _aaeb !=nil {if _ ,_bcdf =w .Write (_aaeb .Data ());_bcdf !=nil {return _cffgb ,_fcd .Wrap (_bcdf ,_egc ,"\u0077r\u0069t\u0065\u0020\u0073\u0065\u0067m\u0065\u006et\u0020\u0064\u0061\u0074\u0061");
};};return _cffgb ,nil ;};func (_dbeg *PageInformationSegment )readCombinationOperator ()error {_dcda ,_cgfb :=_dbeg ._eaeb .ReadBits (2);if _cgfb !=nil {return _cgfb ;};_dbeg ._cdg =_e .CombinationOperator (int (_dcda ));return nil ;};func (_ccee *GenericRegion )overrideAtTemplate3 (_aecac ,_dgf ,_fcbc ,_aef ,_bcc int )int {_aecac &=0x3EF;
if _ccee .GBAtY [0]==0&&_ccee .GBAtX [0]>=-int8 (_bcc ){_aecac |=(_aef >>uint (7-(int8 (_bcc )+_ccee .GBAtX [0]))&0x1)<<4;}else {_aecac |=int (_ccee .getPixel (_dgf +int (_ccee .GBAtX [0]),_fcbc +int (_ccee .GBAtY [0])))<<4;};return _aecac ;};func (_fdbd *SymbolDictionary )decodeHeightClassBitmap (_feddc *_e .Bitmap ,_bddfa int64 ,_cfdb int ,_fde []int )error {for _dbgd :=_bddfa ;
_dbgd < int64 (_fdbd ._bdega );_dbgd ++{var _fcgaf int ;for _edeae :=_bddfa ;_edeae <=_dbgd -1;_edeae ++{_fcgaf +=_fde [_edeae ];};_bebgc :=_gc .Rect (_fcgaf ,0,_fcgaf +_fde [_dbgd ],_cfdb );_gfge ,_ccef :=_e .Extract (_bebgc ,_feddc );if _ccef !=nil {return _ccef ;
};_fdbd ._aebf [_dbgd ]=_gfge ;_fdbd ._gcbc =append (_fdbd ._gcbc ,_gfge );};return nil ;};func (_cebe *SymbolDictionary )InitEncode (symbols *_e .Bitmaps ,symbolList []int ,symbolMap map[int ]int ,unborderSymbols bool )error {const _edfc ="S\u0079\u006d\u0062\u006f\u006c\u0044i\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002eI\u006e\u0069\u0074E\u006ec\u006f\u0064\u0065";
_cebe .SdATX =[]int8 {3,-3,2,-2};_cebe .SdATY =[]int8 {-1,-1,-2,-2};_cebe ._bdgf =symbols ;_cebe ._eece =make ([]int ,len (symbolList ));copy (_cebe ._eece ,symbolList );if len (_cebe ._eece )!=_cebe ._bdgf .Size (){return _fcd .Error (_edfc ,"s\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0061\u006e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u004ci\u0073\u0074\u0020\u006f\u0066\u0020\u0064\u0069\u0066\u0066er\u0065\u006e\u0074 \u0073i\u007a\u0065");
};_cebe .NumberOfNewSymbols =uint32 (symbols .Size ());_cebe .NumberOfExportedSymbols =uint32 (symbols .Size ());_cebe ._ccc =symbolMap ;_cebe ._acce =unborderSymbols ;return nil ;};func (_adbc *PageInformationSegment )encodeStripingInformation (_eaad _dc .BinaryWriter )(_gad int ,_ffec error ){const _cdab ="\u0065n\u0063\u006f\u0064\u0065S\u0074\u0072\u0069\u0070\u0069n\u0067I\u006ef\u006f\u0072\u006d\u0061\u0074\u0069\u006fn";
if !_adbc .IsStripe {if _gad ,_ffec =_eaad .Write ([]byte {0x00,0x00});_ffec !=nil {return 0,_fcd .Wrap (_ffec ,_cdab ,"n\u006f\u0020\u0073\u0074\u0072\u0069\u0070\u0069\u006e\u0067");};return _gad ,nil ;};_dcfa :=make ([]byte ,2);_gf .BigEndian .PutUint16 (_dcfa ,_adbc .MaxStripeSize |1<<15);
if _gad ,_ffec =_eaad .Write (_dcfa );_ffec !=nil {return 0,_fcd .Wrapf (_ffec ,_cdab ,"\u0073\u0074\u0072i\u0070\u0069\u006e\u0067\u003a\u0020\u0025\u0064",_adbc .MaxStripeSize );};return _gad ,nil ;};func (_eacbc *SymbolDictionary )setRetainedCodingContexts (_ffaf *SymbolDictionary ){_eacbc ._abad =_ffaf ._abad ;
_eacbc .IsHuffmanEncoded =_ffaf .IsHuffmanEncoded ;_eacbc .UseRefinementAggregation =_ffaf .UseRefinementAggregation ;_eacbc .SdTemplate =_ffaf .SdTemplate ;_eacbc .SdrTemplate =_ffaf .SdrTemplate ;_eacbc .SdATX =_ffaf .SdATX ;_eacbc .SdATY =_ffaf .SdATY ;
_eacbc .SdrATX =_ffaf .SdrATX ;_eacbc .SdrATY =_ffaf .SdrATY ;_eacbc ._bcad =_ffaf ._bcad ;};func (_gaaa *TextRegion )Init (header *Header ,r _dc .StreamReader )error {_gaaa .Header =header ;_gaaa ._bgbb =r ;_gaaa .RegionInfo =NewRegionSegment (_gaaa ._bgbb );
return _gaaa .parseHeader ();};func (_dbbc *HalftoneRegion )GetRegionInfo ()*RegionSegment {return _dbbc .RegionSegment };func (_caagd *TextRegion )readAmountOfSymbolInstances ()error {_dbfcc ,_bgcbg :=_caagd ._bgbb .ReadBits (32);if _bgcbg !=nil {return _bgcbg ;
};_caagd .NumberOfSymbolInstances =uint32 (_dbfcc &_d .MaxUint32 );_efcd :=_caagd .RegionInfo .BitmapWidth *_caagd .RegionInfo .BitmapHeight ;if _efcd < _caagd .NumberOfSymbolInstances {_ba .Log .Debug ("\u004c\u0069\u006d\u0069t\u0069\u006e\u0067\u0020t\u0068\u0065\u0020n\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020d\u0065\u0063\u006f\u0064e\u0064\u0020\u0073\u0079m\u0062\u006f\u006c\u0020\u0069n\u0073\u0074\u0061\u006e\u0063\u0065\u0073 \u0074\u006f\u0020\u006f\u006ee\u0020\u0070\u0065\u0072\u0020\u0070\u0069\u0078\u0065l\u0020\u0028\u0020\u0025\u0064\u0020\u0069\u006e\u0073\u0074\u0065\u0061\u0064\u0020\u006f\u0066\u0020\u0025\u0064\u0029",_efcd ,_caagd .NumberOfSymbolInstances );
_caagd .NumberOfSymbolInstances =_efcd ;};return nil ;};func (_dgd *SymbolDictionary )checkInput ()error {if _dgd .SdHuffDecodeHeightSelection ==2{_ba .Log .Debug ("\u0053\u0079\u006d\u0062\u006fl\u0020\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u0053e\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0070\u0065r\u006d\u0069\u0074\u0074\u0065\u0064",_dgd .SdHuffDecodeHeightSelection );
};if _dgd .SdHuffDecodeWidthSelection ==2{_ba .Log .Debug ("\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0057\u0069\u0064t\u0068\u0020\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061l\u0075\u0065\u0020\u006e\u006f\u0074 \u0070\u0065r\u006d\u0069t\u0074e\u0064",_dgd .SdHuffDecodeWidthSelection );
};if _dgd .IsHuffmanEncoded {if _dgd .SdTemplate !=0{_ba .Log .Debug ("\u0053\u0044T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e \u0030\u0029",_dgd .SdTemplate );};
if !_dgd .UseRefinementAggregation {if !_dgd .UseRefinementAggregation {if _dgd ._egad {_ba .Log .Debug ("\u0049\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074ex\u0074\u0052\u0065\u0074\u0061\u0069n\u0065\u0064\u0020\u003d\u0020\u0074\u0072\u0075\u0065\u0020\u0028\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0066\u0061\u006cs\u0065\u0029");
_dgd ._egad =false ;};if _dgd ._dccf {_ba .Log .Debug ("\u0069s\u0043\u006fd\u0069\u006e\u0067\u0043o\u006e\u0074\u0065x\u0074\u0055\u0073\u0065\u0064\u0020\u003d\u0020\u0074ru\u0065\u0020\u0028s\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020f\u0061\u006cs\u0065\u0029");
_dgd ._dccf =false ;};};};}else {if _dgd .SdHuffBMSizeSelection !=0{_ba .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066B\u004d\u0053\u0069\u007a\u0065\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_dgd .SdHuffBMSizeSelection =0;};if _dgd .SdHuffDecodeWidthSelection !=0{_ba .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068\u0053\u0065\u006c\u0065\u0063\u0074\u0069o\u006e\u0020\u0073\u0068\u006fu\u006c\u0064 \u0062\u0065\u0020\u0030");
_dgd .SdHuffDecodeWidthSelection =0;};if _dgd .SdHuffDecodeHeightSelection !=0{_ba .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0048e\u0069\u0067\u0068\u0074\u0053\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_dgd .SdHuffDecodeHeightSelection =0;};};if !_dgd .UseRefinementAggregation {if _dgd .SdrTemplate !=0{_ba .Log .Debug ("\u0053\u0044\u0052\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u003d\u0020\u0025\u0064\u0020\u0028s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_dgd .SdrTemplate );
_dgd .SdrTemplate =0;};};if !_dgd .IsHuffmanEncoded ||!_dgd .UseRefinementAggregation {if _dgd .SdHuffAggInstanceSelection {_ba .Log .Debug ("\u0053d\u0048\u0075f\u0066\u0041\u0067g\u0049\u006e\u0073\u0074\u0061\u006e\u0063e\u0053\u0065\u006c\u0065\u0063\u0074i\u006f\u006e\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_dgd .SdHuffAggInstanceSelection );
};};return nil ;};func (_gfc *SymbolDictionary )String ()string {_aeg :=&_f .Builder {};_aeg .WriteString ("\n\u005b\u0053\u0059\u004dBO\u004c-\u0044\u0049\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u000a");_aeg .WriteString (_gfe .Sprintf ("\u0009-\u0020S\u0064\u0072\u0054\u0065\u006dp\u006c\u0061t\u0065\u0020\u0025\u0076\u000a",_gfc .SdrTemplate ));
_aeg .WriteString (_gfe .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0025\u0076\u000a",_gfc .SdTemplate ));_aeg .WriteString (_gfe .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006eg\u0043\u006f\u006e\u0074\u0065\u0078\u0074R\u0065\u0074\u0061\u0069\u006e\u0065\u0064\u0020\u0025\u0076\u000a",_gfc ._egad ));
_aeg .WriteString (_gfe .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074\u0065\u0078\u0074\u0055\u0073\u0065\u0064 \u0025\u0076\u000a",_gfc ._dccf ));_aeg .WriteString (_gfe .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_gfc .SdHuffAggInstanceSelection ));
_aeg .WriteString (_gfe .Sprintf ("\u0009\u002d\u0020\u0053d\u0048\u0075\u0066\u0066\u0042\u004d\u0053\u0069\u007a\u0065S\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020%\u0076\u000a",_gfc .SdHuffBMSizeSelection ));_aeg .WriteString (_gfe .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_gfc .SdHuffDecodeWidthSelection ));
_aeg .WriteString (_gfe .Sprintf ("\u0009\u002d\u0020Sd\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064e\u0048e\u0069g\u0068t\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_gfc .SdHuffDecodeHeightSelection ));_aeg .WriteString (_gfe .Sprintf ("\u0009\u002d\u0020U\u0073\u0065\u0052\u0065f\u0069\u006e\u0065\u006d\u0065\u006e\u0074A\u0067\u0067\u0072\u0065\u0067\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_gfc .UseRefinementAggregation ));
_aeg .WriteString (_gfe .Sprintf ("\u0009\u002d\u0020is\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045\u006e\u0063\u006f\u0064\u0065\u0064\u0020\u0025\u0076\u000a",_gfc .IsHuffmanEncoded ));_aeg .WriteString (_gfe .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_gfc .SdATX ));
_aeg .WriteString (_gfe .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_gfc .SdATY ));_aeg .WriteString (_gfe .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_gfc .SdrATX ));_aeg .WriteString (_gfe .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_gfc .SdrATY ));
_aeg .WriteString (_gfe .Sprintf ("\u0009\u002d\u0020\u004e\u0075\u006d\u0062\u0065\u0072\u004ff\u0045\u0078\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_gfc .NumberOfExportedSymbols ));_aeg .WriteString (_gfe .Sprintf ("\u0009-\u0020\u004e\u0075\u006db\u0065\u0072\u004f\u0066\u004ee\u0077S\u0079m\u0062\u006f\u006c\u0073\u0020\u0025\u0076\n",_gfc .NumberOfNewSymbols ));
_aeg .WriteString (_gfe .Sprintf ("\u0009\u002d\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u004ff\u0049\u006d\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_gfc ._degcg ));_aeg .WriteString (_gfe .Sprintf ("\u0009\u002d \u006e\u0075\u006d\u0062\u0065\u0072\u004f\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0064\u0053\u0079\u006d\u0062\u006f\u006c\u0073 %\u0076\u000a",_gfc ._bdega ));
return _aeg .String ();};func (_ecfc *GenericRegion )decodeTemplate2 (_cdaa ,_dgb ,_bdeg int ,_dea ,_adb int )(_aeag error ){const _bdge ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0032";var (_ggfe ,_dedg int ;_dca ,_eeg int ;
_daag byte ;_fcb ,_aaf int ;);if _cdaa >=1{_daag ,_aeag =_ecfc .Bitmap .GetByte (_adb );if _aeag !=nil {return _fcd .Wrap (_aeag ,_bdge ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0031");};_dca =int (_daag );};if _cdaa >=2{_daag ,_aeag =_ecfc .Bitmap .GetByte (_adb -_ecfc .Bitmap .RowStride );
if _aeag !=nil {return _fcd .Wrap (_aeag ,_bdge ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0032");};_eeg =int (_daag )<<4;};_ggfe =(_dca >>3&0x7c)|(_eeg >>3&0x380);for _fegc :=0;_fegc < _bdeg ;_fegc =_fcb {var (_afbe byte ;
_febd int ;);_fcb =_fegc +8;if _baf :=_dgb -_fegc ;_baf > 8{_febd =8;}else {_febd =_baf ;};if _cdaa > 0{_dca <<=8;if _fcb < _dgb {_daag ,_aeag =_ecfc .Bitmap .GetByte (_adb +1);if _aeag !=nil {return _fcd .Wrap (_aeag ,_bdge ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0030");
};_dca |=int (_daag );};};if _cdaa > 1{_eeg <<=8;if _fcb < _dgb {_daag ,_aeag =_ecfc .Bitmap .GetByte (_adb -_ecfc .Bitmap .RowStride +1);if _aeag !=nil {return _fcd .Wrap (_aeag ,_bdge ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0031");
};_eeg |=int (_daag )<<4;};};for _cge :=0;_cge < _febd ;_cge ++{_efab :=uint (10-_cge );if _ecfc ._bcac {_dedg =_ecfc .overrideAtTemplate2 (_ggfe ,_fegc +_cge ,_cdaa ,int (_afbe ),_cge );_ecfc ._cfbb .SetIndex (int32 (_dedg ));}else {_ecfc ._cfbb .SetIndex (int32 (_ggfe ));
};_aaf ,_aeag =_ecfc ._aad .DecodeBit (_ecfc ._cfbb );if _aeag !=nil {return _fcd .Wrap (_aeag ,_bdge ,"");};_afbe |=byte (_aaf <<uint (7-_cge ));_ggfe =((_ggfe &0x1bd)<<1)|_aaf |((_dca >>_efab )&0x4)|((_eeg >>_efab )&0x80);};if _cgdg :=_ecfc .Bitmap .SetByte (_dea ,_afbe );
_cgdg !=nil {return _fcd .Wrap (_cgdg ,_bdge ,"");};_dea ++;_adb ++;};return nil ;};func (_cgg *GenericRegion )Encode (w _dc .BinaryWriter )(_cbdc int ,_gdc error ){const _aab ="G\u0065n\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069o\u006e\u002e\u0045\u006eco\u0064\u0065";
if _cgg .Bitmap ==nil {return 0,_fcd .Error (_aab ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};_gfdf ,_gdc :=_cgg .RegionSegment .Encode (w );if _gdc !=nil {return 0,_fcd .Wrap (_gdc ,_aab ,"\u0052\u0065\u0067\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};_cbdc +=_gfdf ;if _gdc =w .SkipBits (4);_gdc !=nil {return _cbdc ,_fcd .Wrap (_gdc ,_aab ,"\u0073k\u0069p\u0020\u0072\u0065\u0073\u0065r\u0076\u0065d\u0020\u0062\u0069\u0074\u0073");};var _aacb int ;if _cgg .IsTPGDon {_aacb =1;};if _gdc =w .WriteBit (_aacb );
_gdc !=nil {return _cbdc ,_fcd .Wrap (_gdc ,_aab ,"\u0074\u0070\u0067\u0064\u006f\u006e");};_aacb =0;if _gdc =w .WriteBit (int (_cgg .GBTemplate >>1)&0x01);_gdc !=nil {return _cbdc ,_fcd .Wrap (_gdc ,_aab ,"f\u0069r\u0073\u0074\u0020\u0067\u0062\u0074\u0065\u006dp\u006c\u0061\u0074\u0065 b\u0069\u0074");
};if _gdc =w .WriteBit (int (_cgg .GBTemplate )&0x01);_gdc !=nil {return _cbdc ,_fcd .Wrap (_gdc ,_aab ,"s\u0065\u0063\u006f\u006ed \u0067b\u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u0062\u0069\u0074");};if _cgg .UseMMR {_aacb =1;};if _gdc =w .WriteBit (_aacb );
_gdc !=nil {return _cbdc ,_fcd .Wrap (_gdc ,_aab ,"u\u0073\u0065\u0020\u004d\u004d\u0052\u0020\u0062\u0069\u0074");};_cbdc ++;if _gfdf ,_gdc =_cgg .writeGBAtPixels (w );_gdc !=nil {return _cbdc ,_fcd .Wrap (_gdc ,_aab ,"");};_cbdc +=_gfdf ;_bdac :=_a .New ();
if _gdc =_bdac .EncodeBitmap (_cgg .Bitmap ,_cgg .IsTPGDon );_gdc !=nil {return _cbdc ,_fcd .Wrap (_gdc ,_aab ,"");};_bdac .Final ();var _dga int64 ;if _dga ,_gdc =_bdac .WriteTo (w );_gdc !=nil {return _cbdc ,_fcd .Wrap (_gdc ,_aab ,"");};_cbdc +=int (_dga );
return _cbdc ,nil ;};func (_ebba *HalftoneRegion )parseHeader ()error {if _ffae :=_ebba .RegionSegment .parseHeader ();_ffae !=nil {return _ffae ;};_cffe ,_deced :=_ebba ._eaaf .ReadBit ();if _deced !=nil {return _deced ;};_ebba .HDefaultPixel =int8 (_cffe );
_ccfc ,_deced :=_ebba ._eaaf .ReadBits (3);if _deced !=nil {return _deced ;};_ebba .CombinationOperator =_e .CombinationOperator (_ccfc &0xf);_cffe ,_deced =_ebba ._eaaf .ReadBit ();if _deced !=nil {return _deced ;};if _cffe ==1{_ebba .HSkipEnabled =true ;
};_ccfc ,_deced =_ebba ._eaaf .ReadBits (2);if _deced !=nil {return _deced ;};_ebba .HTemplate =byte (_ccfc &0xf);_cffe ,_deced =_ebba ._eaaf .ReadBit ();if _deced !=nil {return _deced ;};if _cffe ==1{_ebba .IsMMREncoded =true ;};_ccfc ,_deced =_ebba ._eaaf .ReadBits (32);
if _deced !=nil {return _deced ;};_ebba .HGridWidth =uint32 (_ccfc &_d .MaxUint32 );_ccfc ,_deced =_ebba ._eaaf .ReadBits (32);if _deced !=nil {return _deced ;};_ebba .HGridHeight =uint32 (_ccfc &_d .MaxUint32 );_ccfc ,_deced =_ebba ._eaaf .ReadBits (32);
if _deced !=nil {return _deced ;};_ebba .HGridX =int32 (_ccfc &_d .MaxInt32 );_ccfc ,_deced =_ebba ._eaaf .ReadBits (32);if _deced !=nil {return _deced ;};_ebba .HGridY =int32 (_ccfc &_d .MaxInt32 );_ccfc ,_deced =_ebba ._eaaf .ReadBits (16);if _deced !=nil {return _deced ;
};_ebba .HRegionX =uint16 (_ccfc &_d .MaxUint16 );_ccfc ,_deced =_ebba ._eaaf .ReadBits (16);if _deced !=nil {return _deced ;};_ebba .HRegionY =uint16 (_ccfc &_d .MaxUint16 );if _deced =_ebba .computeSegmentDataStructure ();_deced !=nil {return _deced ;
};return _ebba .checkInput ();};func (_fabf *TableSegment )HtRS ()int32 {return _fabf ._efce };func (_gcad *TextRegion )readHuffmanFlags ()error {var (_eebea int ;_ccbad uint64 ;_ecea error ;);_ ,_ecea =_gcad ._bgbb .ReadBit ();if _ecea !=nil {return _ecea ;
};_eebea ,_ecea =_gcad ._bgbb .ReadBit ();if _ecea !=nil {return _ecea ;};_gcad .SbHuffRSize =int8 (_eebea );_ccbad ,_ecea =_gcad ._bgbb .ReadBits (2);if _ecea !=nil {return _ecea ;};_gcad .SbHuffRDY =int8 (_ccbad )&0xf;_ccbad ,_ecea =_gcad ._bgbb .ReadBits (2);
if _ecea !=nil {return _ecea ;};_gcad .SbHuffRDX =int8 (_ccbad )&0xf;_ccbad ,_ecea =_gcad ._bgbb .ReadBits (2);if _ecea !=nil {return _ecea ;};_gcad .SbHuffRDHeight =int8 (_ccbad )&0xf;_ccbad ,_ecea =_gcad ._bgbb .ReadBits (2);if _ecea !=nil {return _ecea ;
};_gcad .SbHuffRDWidth =int8 (_ccbad )&0xf;_ccbad ,_ecea =_gcad ._bgbb .ReadBits (2);if _ecea !=nil {return _ecea ;};_gcad .SbHuffDT =int8 (_ccbad )&0xf;_ccbad ,_ecea =_gcad ._bgbb .ReadBits (2);if _ecea !=nil {return _ecea ;};_gcad .SbHuffDS =int8 (_ccbad )&0xf;
_ccbad ,_ecea =_gcad ._bgbb .ReadBits (2);if _ecea !=nil {return _ecea ;};_gcad .SbHuffFS =int8 (_ccbad )&0xf;return nil ;};func (_defb *GenericRegion )setParameters (_dbef bool ,_efbf ,_dcc int64 ,_bccc ,_ebee uint32 ){_defb .IsMMREncoded =_dbef ;_defb .DataOffset =_efbf ;
_defb .DataLength =_dcc ;_defb .RegionSegment .BitmapHeight =_bccc ;_defb .RegionSegment .BitmapWidth =_ebee ;_defb ._dcb =nil ;_defb .Bitmap =nil ;};func (_bacgd *SymbolDictionary )huffDecodeBmSize ()(int64 ,error ){if _bacgd ._dbge ==nil {var (_aeab int ;
_bdaf error ;);if _bacgd .SdHuffDecodeHeightSelection ==3{_aeab ++;};if _bacgd .SdHuffDecodeWidthSelection ==3{_aeab ++;};_bacgd ._dbge ,_bdaf =_bacgd .getUserTable (_aeab );if _bdaf !=nil {return 0,_bdaf ;};};return _bacgd ._dbge .Decode (_bacgd ._decef );
};func (_ccdb *RegionSegment )String ()string {_ecbca :=&_f .Builder {};_ecbca .WriteString ("\u0009[\u0052E\u0047\u0049\u004f\u004e\u0020S\u0045\u0047M\u0045\u004e\u0054\u005d\u000a");_ecbca .WriteString (_gfe .Sprintf ("\t\u0009\u002d\u0020\u0042\u0069\u0074m\u0061\u0070\u0020\u0028\u0077\u0069d\u0074\u0068\u002c\u0020\u0068\u0065\u0069g\u0068\u0074\u0029\u0020\u005b\u0025\u0064\u0078\u0025\u0064]\u000a",_ccdb .BitmapWidth ,_ccdb .BitmapHeight ));
_ecbca .WriteString (_gfe .Sprintf ("\u0009\u0009\u002d\u0020L\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0028\u0078,\u0079)\u003a\u0020\u005b\u0025\u0064\u002c\u0025d\u005d\u000a",_ccdb .XLocation ,_ccdb .YLocation ));_ecbca .WriteString (_gfe .Sprintf ("\t\u0009\u002d\u0020\u0043\u006f\u006db\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070e\u0072\u0061\u0074o\u0072:\u0020\u0025\u0073",_ccdb .CombinaionOperator ));
return _ecbca .String ();};type Documenter interface{GetPage (int )(Pager ,error );GetGlobalSegment (int )(*Header ,error );};var _ templater =&template0 {};func (_cea *Header )writeFlags (_cdcf _dc .BinaryWriter )(_cdde error ){const _fdfe ="\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065F\u006c\u0061\u0067\u0073";
_dcggf :=byte (_cea .Type );if _cdde =_cdcf .WriteByte (_dcggf );_cdde !=nil {return _fcd .Wrap (_cdde ,_fdfe ,"\u0077\u0072\u0069ti\u006e\u0067\u0020\u0073\u0065\u0067\u006d\u0065\u006et\u0020t\u0079p\u0065 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};if !_cea .RetainFlag &&!_cea .PageAssociationFieldSize {return nil ;};if _cdde =_cdcf .SkipBits (-8);_cdde !=nil {return _fcd .Wrap (_cdde ,_fdfe ,"\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0062\u0061\u0063\u006b\u0020\u0074\u0068\u0065\u0020\u0062\u0069\u0074\u0073\u0020\u0066\u0061il\u0065\u0064");
};var _ddb int ;if _cea .RetainFlag {_ddb =1;};if _cdde =_cdcf .WriteBit (_ddb );_cdde !=nil {return _fcd .Wrap (_cdde ,_fdfe ,"\u0072\u0065\u0074\u0061in\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067\u0073");};_ddb =0;if _cea .PageAssociationFieldSize {_ddb =1;
};if _cdde =_cdcf .WriteBit (_ddb );_cdde !=nil {return _fcd .Wrap (_cdde ,_fdfe ,"p\u0061\u0067\u0065\u0020as\u0073o\u0063\u0069\u0061\u0074\u0069o\u006e\u0020\u0066\u006c\u0061\u0067");};_cdcf .FinishByte ();return nil ;};func (_ffca *TextRegion )Encode (w _dc .BinaryWriter )(_dbbd int ,_faff error ){const _ageg ="\u0054\u0065\u0078\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u002e\u0045n\u0063\u006f\u0064\u0065";
if _dbbd ,_faff =_ffca .RegionInfo .Encode (w );_faff !=nil {return _dbbd ,_fcd .Wrap (_faff ,_ageg ,"");};var _fbee int ;if _fbee ,_faff =_ffca .encodeFlags (w );_faff !=nil {return _dbbd ,_fcd .Wrap (_faff ,_ageg ,"");};_dbbd +=_fbee ;if _fbee ,_faff =_ffca .encodeSymbols (w );
_faff !=nil {return _dbbd ,_fcd .Wrap (_faff ,_ageg ,"");};_dbbd +=_fbee ;return _dbbd ,nil ;};func (_bgdg *TableSegment )StreamReader ()_dc .StreamReader {return _bgdg ._abfc };func (_dfeg *HalftoneRegion )checkInput ()error {if _dfeg .IsMMREncoded {if _dfeg .HTemplate !=0{_ba .Log .Debug ("\u0048\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030",_dfeg .HTemplate );
};if _dfeg .HSkipEnabled {_ba .Log .Debug ("\u0048\u0053\u006b\u0069\u0070\u0045\u006e\u0061\u0062\u006c\u0065\u0064\u0020\u0030\u0020\u0025\u0076\u0020(\u0073\u0068\u006f\u0075\u006c\u0064\u0020c\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020v\u0061\u006c\u0075\u0065\u0020\u0066\u0061\u006c\u0073\u0065\u0029",_dfeg .HSkipEnabled );
};};return nil ;};func (_efe *GenericRegion )decodeTemplate0b (_dcg ,_cfbf ,_efdd int ,_ddfg ,_dbb int )(_ggf error ){const _egbb ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0062";var (_cdcba ,_gagd int ;_gbf ,_cgc int ;
_dcf byte ;_eee int ;);if _dcg >=1{_dcf ,_ggf =_efe .Bitmap .GetByte (_dbb );if _ggf !=nil {return _fcd .Wrap (_ggf ,_egbb ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_gbf =int (_dcf );};if _dcg >=2{_dcf ,_ggf =_efe .Bitmap .GetByte (_dbb -_efe .Bitmap .RowStride );
if _ggf !=nil {return _fcd .Wrap (_ggf ,_egbb ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_cgc =int (_dcf )<<6;};_cdcba =(_gbf &0xf0)|(_cgc &0x3800);for _agbb :=0;_agbb < _efdd ;_agbb =_eee {var (_ebdb byte ;_efae int ;);_eee =_agbb +8;if _dbca :=_cfbf -_agbb ;
_dbca > 8{_efae =8;}else {_efae =_dbca ;};if _dcg > 0{_gbf <<=8;if _eee < _cfbf {_dcf ,_ggf =_efe .Bitmap .GetByte (_dbb +1);if _ggf !=nil {return _fcd .Wrap (_ggf ,_egbb ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_gbf |=int (_dcf );};};if _dcg > 1{_cgc <<=8;
if _eee < _cfbf {_dcf ,_ggf =_efe .Bitmap .GetByte (_dbb -_efe .Bitmap .RowStride +1);if _ggf !=nil {return _fcd .Wrap (_ggf ,_egbb ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_cgc |=int (_dcf )<<6;};};for _gegf :=0;_gegf < _efae ;_gegf ++{_ddag :=uint (7-_gegf );
if _efe ._bcac {_gagd =_efe .overrideAtTemplate0b (_cdcba ,_agbb +_gegf ,_dcg ,int (_ebdb ),_gegf ,int (_ddag ));_efe ._cfbb .SetIndex (int32 (_gagd ));}else {_efe ._cfbb .SetIndex (int32 (_cdcba ));};var _dgg int ;_dgg ,_ggf =_efe ._aad .DecodeBit (_efe ._cfbb );
if _ggf !=nil {return _fcd .Wrap (_ggf ,_egbb ,"");};_ebdb |=byte (_dgg <<_ddag );_cdcba =((_cdcba &0x7bf7)<<1)|_dgg |((_gbf >>_ddag )&0x10)|((_cgc >>_ddag )&0x800);};if _cfgb :=_efe .Bitmap .SetByte (_ddfg ,_ebdb );_cfgb !=nil {return _fcd .Wrap (_cfgb ,_egbb ,"");
};_ddfg ++;_dbb ++;};return nil ;};func (_adeg *TextRegion )decodeDT ()(_bcae int64 ,_fgbg error ){if _adeg .IsHuffmanEncoded {if _adeg .SbHuffDT ==3{_bcae ,_fgbg =_adeg ._egdb .Decode (_adeg ._bgbb );if _fgbg !=nil {return 0,_fgbg ;};}else {var _cceg _fd .Tabler ;
_cceg ,_fgbg =_fd .GetStandardTable (11+int (_adeg .SbHuffDT ));if _fgbg !=nil {return 0,_fgbg ;};_bcae ,_fgbg =_cceg .Decode (_adeg ._bgbb );if _fgbg !=nil {return 0,_fgbg ;};};}else {var _ebcg int32 ;_ebcg ,_fgbg =_adeg ._ecbcd .DecodeInt (_adeg ._gdegf );
if _fgbg !=nil {return ;};_bcae =int64 (_ebcg );};_bcae *=int64 (_adeg .SbStrips );return _bcae ,nil ;};func (_badb *GenericRegion )setParametersWithAt (_baff bool ,_cdb byte ,_bae ,_fdad bool ,_gega ,_agaf []int8 ,_fbd ,_ccg uint32 ,_ggd *_af .DecoderStats ,_cbee *_af .Decoder ){_badb .IsMMREncoded =_baff ;
_badb .GBTemplate =_cdb ;_badb .IsTPGDon =_bae ;_badb .GBAtX =_gega ;_badb .GBAtY =_agaf ;_badb .RegionSegment .BitmapHeight =_ccg ;_badb .RegionSegment .BitmapWidth =_fbd ;_badb ._dcb =nil ;_badb .Bitmap =nil ;if _ggd !=nil {_badb ._cfbb =_ggd ;};if _cbee !=nil {_badb ._aad =_cbee ;
};_ba .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049O\u004e\u005d\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073\u0020\u0053\u0044\u0041t\u003a\u0020\u0025\u0073",_badb );};func (_ggcf *PatternDictionary )parseHeader ()error {_ba .Log .Trace ("\u005b\u0050\u0041\u0054\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054I\u004f\u004e\u0041\u0052\u0059\u005d[\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d\u0020b\u0065\u0067\u0069\u006e");
defer func (){_ba .Log .Trace ("\u005b\u0050\u0041T\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u005b\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
}();_ ,_efdb :=_ggcf ._gace .ReadBits (5);if _efdb !=nil {return _efdb ;};if _efdb =_ggcf .readTemplate ();_efdb !=nil {return _efdb ;};if _efdb =_ggcf .readIsMMREncoded ();_efdb !=nil {return _efdb ;};if _efdb =_ggcf .readPatternWidthAndHeight ();_efdb !=nil {return _efdb ;
};if _efdb =_ggcf .readGrayMax ();_efdb !=nil {return _efdb ;};if _efdb =_ggcf .computeSegmentDataStructure ();_efdb !=nil {return _efdb ;};return _ggcf .checkInput ();};func (_agef *GenericRegion )setParametersMMR (_dgbe bool ,_fdd ,_cfea int64 ,_dcfg ,_aeba uint32 ,_afgc byte ,_dfae ,_aff bool ,_gafg ,_bece []int8 ){_agef .DataOffset =_fdd ;
_agef .DataLength =_cfea ;_agef .RegionSegment =&RegionSegment {};_agef .RegionSegment .BitmapHeight =_dcfg ;_agef .RegionSegment .BitmapWidth =_aeba ;_agef .GBTemplate =_afgc ;_agef .IsMMREncoded =_dgbe ;_agef .IsTPGDon =_dfae ;_agef .GBAtX =_gafg ;_agef .GBAtY =_bece ;
};type SymbolDictionary struct{_decef _dc .StreamReader ;SdrTemplate int8 ;SdTemplate int8 ;_egad bool ;_dccf bool ;SdHuffAggInstanceSelection bool ;SdHuffBMSizeSelection int8 ;SdHuffDecodeWidthSelection int8 ;SdHuffDecodeHeightSelection int8 ;UseRefinementAggregation bool ;
IsHuffmanEncoded bool ;SdATX []int8 ;SdATY []int8 ;SdrATX []int8 ;SdrATY []int8 ;NumberOfExportedSymbols uint32 ;NumberOfNewSymbols uint32 ;Header *Header ;_degcg uint32 ;_gfbda []*_e .Bitmap ;_bdega uint32 ;_aebf []*_e .Bitmap ;_dcdf _fd .Tabler ;_bcbg _fd .Tabler ;
_dbge _fd .Tabler ;_eebd _fd .Tabler ;_fceb []*_e .Bitmap ;_gcbc []*_e .Bitmap ;_abad *_af .Decoder ;_fgd *TextRegion ;_cbcge *GenericRegion ;_fecg *GenericRefinementRegion ;_bcad *_af .DecoderStats ;_gdbe *_af .DecoderStats ;_fdgd *_af .DecoderStats ;
_efee *_af .DecoderStats ;_ffbe *_af .DecoderStats ;_faacg *_af .DecoderStats ;_aabb *_af .DecoderStats ;_aafb *_af .DecoderStats ;_ggfa *_af .DecoderStats ;_cbae int8 ;_bdgf *_e .Bitmaps ;_eece []int ;_ccc map[int ]int ;_acce bool ;};var _ SegmentEncoder =&RegionSegment {};
func (_dad *Header )GetSegmentData ()(Segmenter ,error ){var _abd Segmenter ;if _dad .SegmentData !=nil {_abd =_dad .SegmentData ;};if _abd ==nil {_afbc ,_bbba :=_cbcg [_dad .Type ];if !_bbba {return nil ,_gfe .Errorf ("\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0073\u002f\u0020\u0025\u0064\u0020\u0063\u0072e\u0061t\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e\u0020",_dad .Type ,_dad .Type );
};_abd =_afbc ();_ba .Log .Trace ("\u005b\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u0020\u0061\u0074\u0020\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0030\u0034\u0058",_dad .SegmentNumber ,_dad .SegmentDataStartOffset );
_cfbc ,_degb :=_dad .subInputReader ();if _degb !=nil {return nil ,_degb ;};if _dabd :=_abd .Init (_dad ,_cfbc );_dabd !=nil {_ba .Log .Debug ("\u0049\u006e\u0069\u0074 \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076 \u0066o\u0072\u0020\u0074\u0079\u0070\u0065\u003a \u0025\u0054",_dabd ,_abd );
return nil ,_dabd ;};_dad .SegmentData =_abd ;};return _abd ,nil ;};func (_egdga *Header )parse (_fdb Documenter ,_cfeb _dc .StreamReader ,_cgeaf int64 ,_aadd OrganizationType )(_daagc error ){const _feff ="\u0070\u0061\u0072s\u0065";_ba .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u005b\u0050A\u0052\u0053\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");
defer func (){if _daagc !=nil {_ba .Log .Trace ("\u005b\u0053\u0045GM\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045R\u005d[\u0050A\u0052S\u0045\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_daagc );}else {_ba .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052]\u005bP\u0041\u0052\u0053\u0045\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
};}();_ ,_daagc =_cfeb .Seek (_cgeaf ,_b .SeekStart );if _daagc !=nil {return _fcd .Wrap (_daagc ,_feff ,"\u0073\u0065\u0065\u006b\u0020\u0073\u0074\u0061\u0072\u0074");};if _daagc =_egdga .readSegmentNumber (_cfeb );_daagc !=nil {return _fcd .Wrap (_daagc ,_feff ,"");
};if _daagc =_egdga .readHeaderFlags ();_daagc !=nil {return _fcd .Wrap (_daagc ,_feff ,"");};var _gdbd uint64 ;_gdbd ,_daagc =_egdga .readNumberOfReferredToSegments (_cfeb );if _daagc !=nil {return _fcd .Wrap (_daagc ,_feff ,"");};_egdga .RTSNumbers ,_daagc =_egdga .readReferredToSegmentNumbers (_cfeb ,int (_gdbd ));
if _daagc !=nil {return _fcd .Wrap (_daagc ,_feff ,"");};_daagc =_egdga .readSegmentPageAssociation (_fdb ,_cfeb ,_gdbd ,_egdga .RTSNumbers ...);if _daagc !=nil {return _fcd .Wrap (_daagc ,_feff ,"");};if _egdga .Type !=TEndOfFile {if _daagc =_egdga .readSegmentDataLength (_cfeb );
_daagc !=nil {return _fcd .Wrap (_daagc ,_feff ,"");};};_egdga .readDataStartOffset (_cfeb ,_aadd );_egdga .readHeaderLength (_cfeb ,_cgeaf );_ba .Log .Trace ("\u0025\u0073",_egdga );return nil ;};func (_aefb *PageInformationSegment )String ()string {_bgb :=&_f .Builder {};
_bgb .WriteString ("\u000a\u005b\u0050\u0041G\u0045\u002d\u0049\u004e\u0046\u004f\u0052\u004d\u0041\u0054I\u004fN\u002d\u0053\u0045\u0047\u004d\u0045\u004eT\u005d\u000a");_bgb .WriteString (_gfe .Sprintf ("\u0009\u002d \u0042\u004d\u0048e\u0069\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u000a",_aefb .PageBMHeight ));
_bgb .WriteString (_gfe .Sprintf ("\u0009-\u0020B\u004d\u0057\u0069\u0064\u0074\u0068\u003a\u0020\u0025\u0064\u000a",_aefb .PageBMWidth ));_bgb .WriteString (_gfe .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0058\u003a\u0020\u0025\u0064\u000a",_aefb .ResolutionX ));
_bgb .WriteString (_gfe .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0059\u003a\u0020\u0025\u0064\u000a",_aefb .ResolutionY ));_bgb .WriteString (_gfe .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0073\u000a",_aefb ._cdg ));
_bgb .WriteString (_gfe .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006eO\u0070\u0065\u0072\u0061\u0074\u006f\u0072O\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025v\u000a",_aefb ._gcbd ));_bgb .WriteString (_gfe .Sprintf ("\u0009-\u0020I\u0073\u004c\u006f\u0073\u0073l\u0065\u0073s\u003a\u0020\u0025\u0076\u000a",_aefb .IsLossless ));
_bgb .WriteString (_gfe .Sprintf ("\u0009\u002d\u0020R\u0065\u0071\u0075\u0069r\u0065\u0073\u0041\u0075\u0078\u0069\u006ci\u0061\u0072\u0079\u0042\u0075\u0066\u0066\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_aefb ._aead ));_bgb .WriteString (_gfe .Sprintf ("\u0009\u002d\u0020M\u0069\u0067\u0068\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0052e\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0076\u000a",_aefb ._faac ));
_bgb .WriteString (_gfe .Sprintf ("\u0009\u002d\u0020\u0049\u0073\u0053\u0074\u0072\u0069\u0070\u0065\u0064:\u0020\u0025\u0076\u000a",_aefb .IsStripe ));_bgb .WriteString (_gfe .Sprintf ("\t\u002d\u0020\u004d\u0061xS\u0074r\u0069\u0070\u0065\u0053\u0069z\u0065\u003a\u0020\u0025\u0076\u000a",_aefb .MaxStripeSize ));
return _bgb .String ();};func (_eaff *TextRegion )decodeRdh ()(int64 ,error ){const _eaebd ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064h";if _eaff .IsHuffmanEncoded {if _eaff .SbHuffRDHeight ==3{if _eaff ._aedf ==nil {var (_fdac int ;_cbbf error ;);if _eaff .SbHuffFS ==3{_fdac ++;
};if _eaff .SbHuffDS ==3{_fdac ++;};if _eaff .SbHuffDT ==3{_fdac ++;};if _eaff .SbHuffRDWidth ==3{_fdac ++;};_eaff ._aedf ,_cbbf =_eaff .getUserTable (_fdac );if _cbbf !=nil {return 0,_fcd .Wrap (_cbbf ,_eaebd ,"");};};return _eaff ._aedf .Decode (_eaff ._bgbb );
};_affc ,_gfgef :=_fd .GetStandardTable (14+int (_eaff .SbHuffRDHeight ));if _gfgef !=nil {return 0,_fcd .Wrap (_gfgef ,_eaebd ,"");};return _affc .Decode (_eaff ._bgbb );};_fbag ,_ggfc :=_eaff ._ecbcd .DecodeInt (_eaff ._dfbb );if _ggfc !=nil {return 0,_fcd .Wrap (_ggfc ,_eaebd ,"");
};return int64 (_fbag ),nil ;};func (_aec *template0 )setIndex (_aae *_af .DecoderStats ){_aae .SetIndex (0x100)};func (_fdbda *TextRegion )decodeIb (_dbgdc ,_babf int64 )(*_e .Bitmap ,error ){const _dfgb ="\u0064\u0065\u0063\u006f\u0064\u0065\u0049\u0062";
var (_dddd error ;_dcffa *_e .Bitmap ;);if _dbgdc ==0{if int (_babf )> len (_fdbda .Symbols )-1{return nil ,_fcd .Error (_dfgb ,"\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0049\u0042\u0020\u0062\u0069\u0074\u006d\u0061\u0070\u002e\u0020\u0069\u006e\u0064\u0065x\u0020\u006f\u0075\u0074\u0020o\u0066\u0020r\u0061\u006e\u0067\u0065");
};return _fdbda .Symbols [int (_babf )],nil ;};var _dgfeb ,_bcbd ,_ccbe ,_aefc int64 ;_dgfeb ,_dddd =_fdbda .decodeRdw ();if _dddd !=nil {return nil ,_fcd .Wrap (_dddd ,_dfgb ,"");};_bcbd ,_dddd =_fdbda .decodeRdh ();if _dddd !=nil {return nil ,_fcd .Wrap (_dddd ,_dfgb ,"");
};_ccbe ,_dddd =_fdbda .decodeRdx ();if _dddd !=nil {return nil ,_fcd .Wrap (_dddd ,_dfgb ,"");};_aefc ,_dddd =_fdbda .decodeRdy ();if _dddd !=nil {return nil ,_fcd .Wrap (_dddd ,_dfgb ,"");};if _fdbda .IsHuffmanEncoded {if _ ,_dddd =_fdbda .decodeSymInRefSize ();
_dddd !=nil {return nil ,_fcd .Wrap (_dddd ,_dfgb ,"");};_fdbda ._bgbb .Align ();};_dbfd :=_fdbda .Symbols [_babf ];_fdag :=uint32 (_dbfd .Width );_gaag :=uint32 (_dbfd .Height );_cacfg :=int32 (uint32 (_dgfeb )>>1)+int32 (_ccbe );_gadeg :=int32 (uint32 (_bcbd )>>1)+int32 (_aefc );
if _fdbda ._dbfbb ==nil {_fdbda ._dbfbb =_eec (_fdbda ._bgbb ,nil );};_fdbda ._dbfbb .setParameters (_fdbda ._dfcd ,_fdbda ._ecbcd ,_fdbda .SbrTemplate ,_fdag +uint32 (_dgfeb ),_gaag +uint32 (_bcbd ),_dbfd ,_cacfg ,_gadeg ,false ,_fdbda .SbrATX ,_fdbda .SbrATY );
_dcffa ,_dddd =_fdbda ._dbfbb .GetRegionBitmap ();if _dddd !=nil {return nil ,_fcd .Wrap (_dddd ,_dfgb ,"\u0067\u0072\u0066");};if _fdbda .IsHuffmanEncoded {_fdbda ._bgbb .Align ();};return _dcffa ,nil ;};func (_gdb *GenericRefinementRegion )parseHeader ()(_bce error ){_ba .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0048e\u0061\u0064e\u0072\u002e\u002e\u002e");
_ddfd :=_dd .Now ();defer func (){if _bce ==nil {_ba .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045G\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020h\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0069\u006e\u0069\u0073\u0068id\u0020\u0069\u006e\u003a\u0020\u0025\u0064\u0020\u006e\u0073",_dd .Since (_ddfd ).Nanoseconds ());
}else {_ba .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0068\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0073",_bce );
};}();if _bce =_gdb .RegionInfo .parseHeader ();_bce !=nil {return _bce ;};_ ,_bce =_gdb ._bf .ReadBits (6);if _bce !=nil {return _bce ;};_gdb .IsTPGROn ,_bce =_gdb ._bf .ReadBool ();if _bce !=nil {return _bce ;};var _gcg int ;_gcg ,_bce =_gdb ._bf .ReadBit ();
if _bce !=nil {return _bce ;};_gdb .TemplateID =int8 (_gcg );switch _gdb .TemplateID {case 0:_gdb .Template =_gdb ._ged ;if _bce =_gdb .readAtPixels ();_bce !=nil {return ;};case 1:_gdb .Template =_gdb ._gca ;};return nil ;};func (_bcgbg *PageInformationSegment )CombinationOperator ()_e .CombinationOperator {return _bcgbg ._cdg ;
};func (_baee *PatternDictionary )computeSegmentDataStructure ()error {_baee .DataOffset =_baee ._gace .StreamPosition ();_baee .DataHeaderLength =_baee .DataOffset -_baee .DataHeaderOffset ;_baee .DataLength =int64 (_baee ._gace .Length ())-_baee .DataHeaderLength ;
return nil ;};func (_eadgb *TextRegion )decodeRdy ()(int64 ,error ){const _bdcge ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064y";if _eadgb .IsHuffmanEncoded {if _eadgb .SbHuffRDY ==3{if _eadgb ._cbcc ==nil {var (_fegg int ;_accee error ;);if _eadgb .SbHuffFS ==3{_fegg ++;
};if _eadgb .SbHuffDS ==3{_fegg ++;};if _eadgb .SbHuffDT ==3{_fegg ++;};if _eadgb .SbHuffRDWidth ==3{_fegg ++;};if _eadgb .SbHuffRDHeight ==3{_fegg ++;};if _eadgb .SbHuffRDX ==3{_fegg ++;};_eadgb ._cbcc ,_accee =_eadgb .getUserTable (_fegg );if _accee !=nil {return 0,_fcd .Wrap (_accee ,_bdcge ,"");
};};return _eadgb ._cbcc .Decode (_eadgb ._bgbb );};_fcgeb ,_fgagf :=_fd .GetStandardTable (14+int (_eadgb .SbHuffRDY ));if _fgagf !=nil {return 0,_fgagf ;};return _fcgeb .Decode (_eadgb ._bgbb );};_baae ,_bdbd :=_eadgb ._ecbcd .DecodeInt (_eadgb ._cefg );
if _bdbd !=nil {return 0,_fcd .Wrap (_bdbd ,_bdcge ,"");};return int64 (_baae ),nil ;};func (_ggb *Header )readNumberOfReferredToSegments (_bdff _dc .StreamReader )(uint64 ,error ){const _gdfg ="\u0072\u0065\u0061\u0064\u004e\u0075\u006d\u0062\u0065\u0072O\u0066\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
_gaeg ,_edg :=_bdff .ReadBits (3);if _edg !=nil {return 0,_fcd .Wrap (_edg ,_gdfg ,"\u0063\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0072\u0074\u0073");};_gaeg &=0xf;var _eebe []byte ;if _gaeg <=4{_eebe =make ([]byte ,5);for _bcfd :=0;_bcfd <=4;_bcfd ++{_aed ,_egbc :=_bdff .ReadBit ();
if _egbc !=nil {return 0,_fcd .Wrap (_egbc ,_gdfg ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_eebe [_bcfd ]=byte (_aed );};}else {_gaeg ,_edg =_bdff .ReadBits (29);if _edg !=nil {return 0,_edg ;};_gaeg &=_d .MaxInt32 ;_gge :=(_gaeg +8)>>3;
_gge <<=3;_eebe =make ([]byte ,_gge );var _fgg uint64 ;for _fgg =0;_fgg < _gge ;_fgg ++{_eea ,_gaab :=_bdff .ReadBit ();if _gaab !=nil {return 0,_fcd .Wrap (_gaab ,_gdfg ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_eebe [_fgg ]=byte (_eea );
};};return _gaeg ,nil ;};func (_bde *GenericRegion )decodeLine (_eadg ,_daa ,_edcc int )error {const _agb ="\u0064\u0065\u0063\u006f\u0064\u0065\u004c\u0069\u006e\u0065";_dab :=_bde .Bitmap .GetByteIndex (0,_eadg );_efbc :=_dab -_bde .Bitmap .RowStride ;
switch _bde .GBTemplate {case 0:if !_bde .UseExtTemplates {return _bde .decodeTemplate0a (_eadg ,_daa ,_edcc ,_dab ,_efbc );};return _bde .decodeTemplate0b (_eadg ,_daa ,_edcc ,_dab ,_efbc );case 1:return _bde .decodeTemplate1 (_eadg ,_daa ,_edcc ,_dab ,_efbc );
case 2:return _bde .decodeTemplate2 (_eadg ,_daa ,_edcc ,_dab ,_efbc );case 3:return _bde .decodeTemplate3 (_eadg ,_daa ,_edcc ,_dab ,_efbc );};return _fcd .Errorf (_agb ,"\u0069\u006e\u0076a\u006c\u0069\u0064\u0020G\u0042\u0054\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u003a\u0020\u0025\u0064",_bde .GBTemplate );
};func (_cgdga *TextRegion )decodeID ()(int64 ,error ){if _cgdga .IsHuffmanEncoded {if _cgdga ._aadg ==nil {_faaa ,_baga :=_cgdga ._bgbb .ReadBits (byte (_cgdga ._cedd ));return int64 (_faaa ),_baga ;};return _cgdga ._aadg .Decode (_cgdga ._bgbb );};return _cgdga ._ecbcd .DecodeIAID (uint64 (_cgdga ._cedd ),_cgdga ._bcda );
};func (_eaa *GenericRefinementRegion )decodeSLTP ()(int ,error ){_eaa .Template .setIndex (_eaa ._fcg );return _eaa ._afa .DecodeBit (_eaa ._fcg );};func (_dabc *GenericRegion )decodeTemplate3 (_ceb ,_faa ,_abc int ,_gabe ,_bdf int )(_bbb error ){const _gfeg ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0033";
var (_cef ,_caf int ;_acad int ;_efcbd byte ;_adf ,_cfcd int ;);if _ceb >=1{_efcbd ,_bbb =_dabc .Bitmap .GetByte (_bdf );if _bbb !=nil {return _fcd .Wrap (_bbb ,_gfeg ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_acad =int (_efcbd );};_cef =(_acad >>1)&0x70;
for _dcgd :=0;_dcgd < _abc ;_dcgd =_adf {var (_bfd byte ;_dbed int ;);_adf =_dcgd +8;if _deb :=_faa -_dcgd ;_deb > 8{_dbed =8;}else {_dbed =_deb ;};if _ceb >=1{_acad <<=8;if _adf < _faa {_efcbd ,_bbb =_dabc .Bitmap .GetByte (_bdf +1);if _bbb !=nil {return _fcd .Wrap (_bbb ,_gfeg ,"\u0069\u006e\u006e\u0065\u0072\u0020\u002d\u0020\u006c\u0069\u006e\u0065 \u003e\u003d\u0020\u0031");
};_acad |=int (_efcbd );};};for _adba :=0;_adba < _dbed ;_adba ++{if _dabc ._bcac {_caf =_dabc .overrideAtTemplate3 (_cef ,_dcgd +_adba ,_ceb ,int (_bfd ),_adba );_dabc ._cfbb .SetIndex (int32 (_caf ));}else {_dabc ._cfbb .SetIndex (int32 (_cef ));};_cfcd ,_bbb =_dabc ._aad .DecodeBit (_dabc ._cfbb );
if _bbb !=nil {return _fcd .Wrap (_bbb ,_gfeg ,"");};_bfd |=byte (_cfcd )<<byte (7-_adba );_cef =((_cef &0x1f7)<<1)|_cfcd |((_acad >>uint (8-_adba ))&0x010);};if _eaca :=_dabc .Bitmap .SetByte (_gabe ,_bfd );_eaca !=nil {return _fcd .Wrap (_eaca ,_gfeg ,"");
};_gabe ++;_bdf ++;};return nil ;};func (_aacbc *TextRegion )decodeDfs ()(int64 ,error ){if _aacbc .IsHuffmanEncoded {if _aacbc .SbHuffFS ==3{if _aacbc ._ebbg ==nil {var _adga error ;_aacbc ._ebbg ,_adga =_aacbc .getUserTable (0);if _adga !=nil {return 0,_adga ;
};};return _aacbc ._ebbg .Decode (_aacbc ._bgbb );};_cede ,_ebge :=_fd .GetStandardTable (6+int (_aacbc .SbHuffFS ));if _ebge !=nil {return 0,_ebge ;};return _cede .Decode (_aacbc ._bgbb );};_fdadd ,_cgce :=_aacbc ._ecbcd .DecodeInt (_aacbc ._efabc );if _cgce !=nil {return 0,_cgce ;
};return int64 (_fdadd ),nil ;};func NewRegionSegment (r _dc .StreamReader )*RegionSegment {return &RegionSegment {_fba :r }};func (_gcab *Header )writeReferredToSegments (_edea _dc .BinaryWriter )(_bdea int ,_egce error ){const _adef ="\u0077\u0072\u0069te\u0052\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
var (_gfg uint16 ;_aba uint32 ;);_gbeb :=_gcab .referenceSize ();_gdeg :=1;_gcd :=make ([]byte ,_gbeb );for _ ,_bddf :=range _gcab .RTSNumbers {switch _gbeb {case 4:_aba =uint32 (_bddf );_gf .BigEndian .PutUint32 (_gcd ,_aba );_gdeg ,_egce =_edea .Write (_gcd );
if _egce !=nil {return 0,_fcd .Wrap (_egce ,_adef ,"u\u0069\u006e\u0074\u0033\u0032\u0020\u0073\u0069\u007a\u0065");};case 2:_gfg =uint16 (_bddf );_gf .BigEndian .PutUint16 (_gcd ,_gfg );_gdeg ,_egce =_edea .Write (_gcd );if _egce !=nil {return 0,_fcd .Wrap (_egce ,_adef ,"\u0075\u0069\u006e\u0074\u0031\u0036");
};default:if _egce =_edea .WriteByte (byte (_bddf ));_egce !=nil {return 0,_fcd .Wrap (_egce ,_adef ,"\u0075\u0069\u006et\u0038");};};_bdea +=_gdeg ;};return _bdea ,nil ;};func (_afbec *TableSegment )HtOOB ()int32 {return _afbec ._adag };func (_aegd *SymbolDictionary )parseHeader ()(_ebbaa error ){_ba .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _ebbaa !=nil {_ba .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u0020\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u005b\u0050\u0041\u0052SE\u002d\u0048\u0045A\u0044\u0045R\u005d\u0020\u0066\u0061\u0069\u006ce\u0064\u002e \u0025\u0076",_ebbaa );
}else {_ba .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _ebbaa =_aegd .readRegionFlags ();_ebbaa !=nil {return _ebbaa ;};if _ebbaa =_aegd .setAtPixels ();_ebbaa !=nil {return _ebbaa ;};if _ebbaa =_aegd .setRefinementAtPixels ();_ebbaa !=nil {return _ebbaa ;};if _ebbaa =_aegd .readNumberOfExportedSymbols ();
_ebbaa !=nil {return _ebbaa ;};if _ebbaa =_aegd .readNumberOfNewSymbols ();_ebbaa !=nil {return _ebbaa ;};if _ebbaa =_aegd .setInSyms ();_ebbaa !=nil {return _ebbaa ;};if _aegd ._dccf {_beff :=_aegd .Header .RTSegments ;for _feed :=len (_beff )-1;_feed >=0;
_feed --{if _beff [_feed ].Type ==0{_gddg ,_aafa :=_beff [_feed ].SegmentData .(*SymbolDictionary );if !_aafa {_ebbaa =_gfe .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074:\u0020\u0025\u0076\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020S\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_beff [_feed ]);
return _ebbaa ;};if _gddg ._dccf {_aegd .setRetainedCodingContexts (_gddg );};break ;};};};if _ebbaa =_aegd .checkInput ();_ebbaa !=nil {return _ebbaa ;};return nil ;};func (_eabc *SymbolDictionary )addSymbol (_cefb Regioner )error {_dagde ,_dbaf :=_cefb .GetRegionBitmap ();
if _dbaf !=nil {return _dbaf ;};_eabc ._aebf [_eabc ._bdega ]=_dagde ;_eabc ._gcbc =append (_eabc ._gcbc ,_dagde );_ba .Log .Trace ("\u005b\u0053YM\u0042\u004f\u004c \u0044\u0049\u0043\u0054ION\u0041RY\u005d\u0020\u0041\u0064\u0064\u0065\u0064 s\u0079\u006d\u0062\u006f\u006c\u003a\u0020%\u0073",_dagde );
return nil ;};func (_dcga *TextRegion )decodeIds ()(int64 ,error ){const _abbc ="\u0064e\u0063\u006f\u0064\u0065\u0049\u0064s";if _dcga .IsHuffmanEncoded {if _dcga .SbHuffDS ==3{if _dcga ._afag ==nil {_dgbb :=0;if _dcga .SbHuffFS ==3{_dgbb ++;};var _dcba error ;
_dcga ._afag ,_dcba =_dcga .getUserTable (_dgbb );if _dcba !=nil {return 0,_fcd .Wrap (_dcba ,_abbc ,"");};};return _dcga ._afag .Decode (_dcga ._bgbb );};_bfb ,_affdf :=_fd .GetStandardTable (8+int (_dcga .SbHuffDS ));if _affdf !=nil {return 0,_fcd .Wrap (_affdf ,_abbc ,"");
};return _bfb .Decode (_dcga ._bgbb );};_cbge ,_ebdbg :=_dcga ._ecbcd .DecodeInt (_dcga ._aded );if _ebdbg !=nil {return 0,_fcd .Wrap (_ebdbg ,_abbc ,"\u0063\u0078\u0049\u0041\u0044\u0053");};return int64 (_cbge ),nil ;};func (_eedef *SymbolDictionary )getUserTable (_bfdb int )(_fd .Tabler ,error ){var _bccb int ;
for _ ,_bdga :=range _eedef .Header .RTSegments {if _bdga .Type ==53{if _bccb ==_bfdb {_gafgc ,_cfgd :=_bdga .GetSegmentData ();if _cfgd !=nil {return nil ,_cfgd ;};_fbcc :=_gafgc .(_fd .BasicTabler );return _fd .NewEncodedTable (_fbcc );};_bccb ++;};};
return nil ,nil ;};func (_ffcf *SymbolDictionary )encodeATFlags (_addf _dc .BinaryWriter )(_bdeaf int ,_cbdga error ){const _bcbbe ="\u0065\u006e\u0063\u006f\u0064\u0065\u0041\u0054\u0046\u006c\u0061\u0067\u0073";if _ffcf .IsHuffmanEncoded ||_ffcf .SdTemplate !=0{return 0,nil ;
};_bbeb :=4;if _ffcf .SdTemplate !=0{_bbeb =1;};for _bed :=0;_bed < _bbeb ;_bed ++{if _cbdga =_addf .WriteByte (byte (_ffcf .SdATX [_bed ]));_cbdga !=nil {return _bdeaf ,_fcd .Wrapf (_cbdga ,_bcbbe ,"\u0053d\u0041\u0054\u0058\u005b\u0025\u0064]",_bed );
};_bdeaf ++;if _cbdga =_addf .WriteByte (byte (_ffcf .SdATY [_bed ]));_cbdga !=nil {return _bdeaf ,_fcd .Wrapf (_cbdga ,_bcbbe ,"\u0053d\u0041\u0054\u0059\u005b\u0025\u0064]",_bed );};_bdeaf ++;};return _bdeaf ,nil ;};var (_fbef Segmenter ;_cbcg =map[Type ]func ()Segmenter {TSymbolDictionary :func ()Segmenter {return &SymbolDictionary {}},TIntermediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateLosslessTextRegion :func ()Segmenter {return &TextRegion {}},TPatternDictionary :func ()Segmenter {return &PatternDictionary {}},TIntermediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateLosslessHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TIntermediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateLosslessGenericRegion :func ()Segmenter {return &GenericRegion {}},TIntermediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateLosslessGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TPageInformation :func ()Segmenter {return &PageInformationSegment {}},TEndOfPage :func ()Segmenter {return _fbef },TEndOfStrip :func ()Segmenter {return &EndOfStripe {}},TEndOfFile :func ()Segmenter {return _fbef },TProfiles :func ()Segmenter {return _fbef },TTables :func ()Segmenter {return &TableSegment {}},TExtension :func ()Segmenter {return _fbef },TBitmap :func ()Segmenter {return _fbef }};
);func (_dbcb *GenericRegion )getPixel (_aag ,_acag int )int8 {if _aag < 0||_aag >=_dbcb .Bitmap .Width {return 0;};if _acag < 0||_acag >=_dbcb .Bitmap .Height {return 0;};if _dbcb .Bitmap .GetPixel (_aag ,_acag ){return 1;};return 0;};func (_eaec *TextRegion )decodeCurrentT ()(int64 ,error ){if _eaec .SbStrips !=1{if _eaec .IsHuffmanEncoded {_afc ,_aacg :=_eaec ._bgbb .ReadBits (byte (_eaec .LogSBStrips ));
return int64 (_afc ),_aacg ;};_ddbd ,_gfed :=_eaec ._ecbcd .DecodeInt (_eaec ._debd );if _gfed !=nil {return 0,_gfed ;};return int64 (_ddbd ),nil ;};return 0,nil ;};func (_cegc *PageInformationSegment )CombinationOperatorOverrideAllowed ()bool {return _cegc ._gcbd };
func (_cfa *RegionSegment )readCombinationOperator ()error {_facg ,_fcff :=_cfa ._fba .ReadBits (3);if _fcff !=nil {return _fcff ;};_cfa .CombinaionOperator =_e .CombinationOperator (_facg &0xF);return nil ;};func (_bfcg *SymbolDictionary )readRegionFlags ()error {var (_cafg uint64 ;
_abee int ;);_ ,_edgd :=_bfcg ._decef .ReadBits (3);if _edgd !=nil {return _edgd ;};_abee ,_edgd =_bfcg ._decef .ReadBit ();if _edgd !=nil {return _edgd ;};_bfcg .SdrTemplate =int8 (_abee );_cafg ,_edgd =_bfcg ._decef .ReadBits (2);if _edgd !=nil {return _edgd ;
};_bfcg .SdTemplate =int8 (_cafg &0xf);_abee ,_edgd =_bfcg ._decef .ReadBit ();if _edgd !=nil {return _edgd ;};if _abee ==1{_bfcg ._egad =true ;};_abee ,_edgd =_bfcg ._decef .ReadBit ();if _edgd !=nil {return _edgd ;};if _abee ==1{_bfcg ._dccf =true ;};
_abee ,_edgd =_bfcg ._decef .ReadBit ();if _edgd !=nil {return _edgd ;};if _abee ==1{_bfcg .SdHuffAggInstanceSelection =true ;};_abee ,_edgd =_bfcg ._decef .ReadBit ();if _edgd !=nil {return _edgd ;};_bfcg .SdHuffBMSizeSelection =int8 (_abee );_cafg ,_edgd =_bfcg ._decef .ReadBits (2);
if _edgd !=nil {return _edgd ;};_bfcg .SdHuffDecodeWidthSelection =int8 (_cafg &0xf);_cafg ,_edgd =_bfcg ._decef .ReadBits (2);if _edgd !=nil {return _edgd ;};_bfcg .SdHuffDecodeHeightSelection =int8 (_cafg &0xf);_abee ,_edgd =_bfcg ._decef .ReadBit ();
if _edgd !=nil {return _edgd ;};if _abee ==1{_bfcg .UseRefinementAggregation =true ;};_abee ,_edgd =_bfcg ._decef .ReadBit ();if _edgd !=nil {return _edgd ;};if _abee ==1{_bfcg .IsHuffmanEncoded =true ;};return nil ;};func (_ddc *GenericRefinementRegion )decodeTypicalPredictedLineTemplate1 (_feg ,_eace ,_cfg ,_gga ,_ece ,_eaed ,_ff ,_cad ,_eacf int )(_ag error ){var (_fdg ,_ddg int ;
_gff ,_ggac int ;_efb ,_efaf int ;_gef byte ;);if _feg > 0{_gef ,_ag =_ddc .RegionBitmap .GetByte (_ff -_cfg );if _ag !=nil {return ;};_gff =int (_gef );};if _cad > 0&&_cad <=_ddc .ReferenceBitmap .Height {_gef ,_ag =_ddc .ReferenceBitmap .GetByte (_eacf -_gga +_eaed );
if _ag !=nil {return ;};_ggac =int (_gef )<<2;};if _cad >=0&&_cad < _ddc .ReferenceBitmap .Height {_gef ,_ag =_ddc .ReferenceBitmap .GetByte (_eacf +_eaed );if _ag !=nil {return ;};_efb =int (_gef );};if _cad > -2&&_cad < _ddc .ReferenceBitmap .Height -1{_gef ,_ag =_ddc .ReferenceBitmap .GetByte (_eacf +_gga +_eaed );
if _ag !=nil {return ;};_efaf =int (_gef );};_fdg =((_gff >>5)&0x6)|((_efaf >>2)&0x30)|(_efb &0xc0)|(_ggac &0x200);_ddg =((_efaf >>2)&0x70)|(_efb &0xc0)|(_ggac &0x700);var _afg int ;for _dbc :=0;_dbc < _ece ;_dbc =_afg {var (_bba int ;_afd int ;);_afg =_dbc +8;
if _bba =_eace -_dbc ;_bba > 8{_bba =8;};_def :=_afg < _eace ;_aca :=_afg < _ddc .ReferenceBitmap .Width ;_efaff :=_eaed +1;if _feg > 0{_gef =0;if _def {_gef ,_ag =_ddc .RegionBitmap .GetByte (_ff -_cfg +1);if _ag !=nil {return ;};};_gff =(_gff <<8)|int (_gef );
};if _cad > 0&&_cad <=_ddc .ReferenceBitmap .Height {var _febf int ;if _aca {_gef ,_ag =_ddc .ReferenceBitmap .GetByte (_eacf -_gga +_efaff );if _ag !=nil {return ;};_febf =int (_gef )<<2;};_ggac =(_ggac <<8)|_febf ;};if _cad >=0&&_cad < _ddc .ReferenceBitmap .Height {_gef =0;
if _aca {_gef ,_ag =_ddc .ReferenceBitmap .GetByte (_eacf +_efaff );if _ag !=nil {return ;};};_efb =(_efb <<8)|int (_gef );};if _cad > -2&&_cad < (_ddc .ReferenceBitmap .Height -1){_gef =0;if _aca {_gef ,_ag =_ddc .ReferenceBitmap .GetByte (_eacf +_gga +_efaff );
if _ag !=nil {return ;};};_efaf =(_efaf <<8)|int (_gef );};for _cfcc :=0;_cfcc < _bba ;_cfcc ++{var _bec int ;_fbe :=(_ddg >>4)&0x1ff;switch _fbe {case 0x1ff:_bec =1;case 0x00:_bec =0;default:_ddc ._fcg .SetIndex (int32 (_fdg ));_bec ,_ag =_ddc ._afa .DecodeBit (_ddc ._fcg );
if _ag !=nil {return ;};};_bfa :=uint (7-_cfcc );_afd |=_bec <<_bfa ;_fdg =((_fdg &0x0d6)<<1)|_bec |(_gff >>_bfa +5)&0x002|((_efaf >>_bfa +2)&0x010)|((_efb >>_bfa )&0x040)|((_ggac >>_bfa )&0x200);_ddg =((_ddg &0xdb)<<1)|((_efaf >>_bfa +2)&0x010)|((_efb >>_bfa )&0x080)|((_ggac >>_bfa )&0x400);
};_ag =_ddc .RegionBitmap .SetByte (_ff ,byte (_afd ));if _ag !=nil {return ;};_ff ++;_eacf ++;};return nil ;};func (_aafbc *SymbolDictionary )readRefinementAtPixels (_agfcd int )error {_aafbc .SdrATX =make ([]int8 ,_agfcd );_aafbc .SdrATY =make ([]int8 ,_agfcd );
var (_deda byte ;_cegd error ;);for _cfce :=0;_cfce < _agfcd ;_cfce ++{_deda ,_cegd =_aafbc ._decef .ReadByte ();if _cegd !=nil {return _cegd ;};_aafbc .SdrATX [_cfce ]=int8 (_deda );_deda ,_cegd =_aafbc ._decef .ReadByte ();if _cegd !=nil {return _cegd ;
};_aafbc .SdrATY [_cfce ]=int8 (_deda );};return nil ;};func (_abb *PageInformationSegment )readWidthAndHeight ()error {_cfbbf ,_eecb :=_abb ._eaeb .ReadBits (32);if _eecb !=nil {return _eecb ;};_abb .PageBMWidth =int (_cfbbf &_d .MaxInt32 );_cfbbf ,_eecb =_abb ._eaeb .ReadBits (32);
if _eecb !=nil {return _eecb ;};_abb .PageBMHeight =int (_cfbbf &_d .MaxInt32 );return nil ;};func (_eafce *TextRegion )encodeSymbols (_gebc _dc .BinaryWriter )(_egbg int ,_ebeae error ){const _afdd ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
_eegb :=make ([]byte ,4);_gf .BigEndian .PutUint32 (_eegb ,_eafce .NumberOfSymbols );if _egbg ,_ebeae =_gebc .Write (_eegb );_ebeae !=nil {return _egbg ,_fcd .Wrap (_ebeae ,_afdd ,"\u004e\u0075\u006dbe\u0072\u004f\u0066\u0053\u0079\u006d\u0062\u006f\u006c\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073");
};_aaeg ,_ebeae :=_e .NewClassedPoints (_eafce ._afagc ,_eafce ._cbcd );if _ebeae !=nil {return 0,_fcd .Wrap (_ebeae ,_afdd ,"");};var _eade ,_egde int ;_bagad :=_a .New ();_bagad .Init ();if _ebeae =_bagad .EncodeInteger (_a .IADT ,0);_ebeae !=nil {return _egbg ,_fcd .Wrap (_ebeae ,_afdd ,"\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0020\u0044\u0054");
};_caaf ,_ebeae :=_aaeg .GroupByY ();if _ebeae !=nil {return 0,_fcd .Wrap (_ebeae ,_afdd ,"");};for _ ,_bdab :=range _caaf {_gabb :=int (_bdab .YAtIndex (0));_cggg :=_gabb -_eade ;if _ebeae =_bagad .EncodeInteger (_a .IADT ,_cggg );_ebeae !=nil {return _egbg ,_fcd .Wrap (_ebeae ,_afdd ,"");
};var _agae int ;for _fcgf ,_aceb :=range _bdab .IntSlice {switch _fcgf {case 0:_aaad :=int (_bdab .XAtIndex (_fcgf ))-_egde ;if _ebeae =_bagad .EncodeInteger (_a .IAFS ,_aaad );_ebeae !=nil {return _egbg ,_fcd .Wrap (_ebeae ,_afdd ,"");};_egde +=_aaad ;
_agae =_egde ;default:_afgf :=int (_bdab .XAtIndex (_fcgf ))-_agae ;if _ebeae =_bagad .EncodeInteger (_a .IADS ,_afgf );_ebeae !=nil {return _egbg ,_fcd .Wrap (_ebeae ,_afdd ,"");};_agae +=_afgf ;};_gedbb ,_bfdef :=_eafce ._ddbb .Get (_aceb );if _bfdef !=nil {return _egbg ,_fcd .Wrap (_bfdef ,_afdd ,"");
};_abdcc ,_degf :=_eafce ._gfcg [_gedbb ];if !_degf {_abdcc ,_degf =_eafce ._eeec [_gedbb ];if !_degf {return _egbg ,_fcd .Errorf (_afdd ,"\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027\u0025d\u0027\u0020\u0069s\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064 \u0069\u006e\u0020\u0067\u006cob\u0061\u006c\u0020\u0061\u006e\u0064\u0020\u006c\u006f\u0063\u0061\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020\u006d\u0061\u0070",_gedbb );
};};if _bfdef =_bagad .EncodeIAID (_eafce ._edac ,_abdcc );_bfdef !=nil {return _egbg ,_fcd .Wrap (_bfdef ,_afdd ,"");};};if _ebeae =_bagad .EncodeOOB (_a .IADS );_ebeae !=nil {return _egbg ,_fcd .Wrap (_ebeae ,_afdd ,"");};};_bagad .Final ();_agcb ,_ebeae :=_bagad .WriteTo (_gebc );
if _ebeae !=nil {return _egbg ,_fcd .Wrap (_ebeae ,_afdd ,"");};_egbg +=int (_agcb );return _egbg ,nil ;};func (_fcdc *TextRegion )getUserTable (_ffd int )(_fd .Tabler ,error ){const _bfg ="\u0067\u0065\u0074U\u0073\u0065\u0072\u0054\u0061\u0062\u006c\u0065";
var _agdb int ;for _ ,_acaa :=range _fcdc .Header .RTSegments {if _acaa .Type ==53{if _agdb ==_ffd {_acgc ,_bcbe :=_acaa .GetSegmentData ();if _bcbe !=nil {return nil ,_bcbe ;};_ebgg ,_dde :=_acgc .(*TableSegment );if !_dde {_ba .Log .Debug (_gfe .Sprintf ("\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079p\u0065\u00205\u0033\u0020\u002d\u0020\u0061\u006ed\u0020in\u0064\u0065\u0078\u003a\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_acaa .SegmentNumber ));
return nil ,_fcd .Error (_bfg ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079\u0070e\u0020\u0035\u0033\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u002a\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};return _fd .NewEncodedTable (_ebgg );};_agdb ++;};};return nil ,nil ;};func (_ec *EndOfStripe )parseHeader (_gd *Header ,_fcc _dc .StreamReader )error {_ge ,_bd :=_ec ._gg .ReadBits (32);if _bd !=nil {return _bd ;};_ec ._c =int (_ge &_d .MaxInt32 );return nil ;
};func (_bbd *GenericRefinementRegion )GetRegionBitmap ()(*_e .Bitmap ,error ){var _fcfg error ;_ba .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _fcfg !=nil {_ba .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0047\u0065\u0074R\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006dap\u0020\u0066a\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_fcfg );
}else {_ba .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _bbd .RegionBitmap !=nil {return _bbd .RegionBitmap ,nil ;};_bbc :=0;if _bbd .ReferenceBitmap ==nil {_bbd .ReferenceBitmap ,_fcfg =_bbd .getGrReference ();if _fcfg !=nil {return nil ,_fcfg ;};};if _bbd ._afa ==nil {_bbd ._afa ,_fcfg =_af .New (_bbd ._bf );
if _fcfg !=nil {return nil ,_fcfg ;};};if _bbd ._fcg ==nil {_bbd ._fcg =_af .NewStats (8192,1);};_bbd .RegionBitmap =_e .New (int (_bbd .RegionInfo .BitmapWidth ),int (_bbd .RegionInfo .BitmapHeight ));if _bbd .TemplateID ==0{if _fcfg =_bbd .updateOverride ();
_fcfg !=nil {return nil ,_fcfg ;};};_bda :=(_bbd .RegionBitmap .Width +7)&-8;var _fb int ;if _bbd .IsTPGROn {_fb =int (-_bbd .ReferenceDY )*_bbd .ReferenceBitmap .RowStride ;};_ed :=_fb +1;for _fe :=0;_fe < _bbd .RegionBitmap .Height ;_fe ++{if _bbd .IsTPGROn {_ga ,_ca :=_bbd .decodeSLTP ();
if _ca !=nil {return nil ,_ca ;};_bbc ^=_ga ;};if _bbc ==0{_fcfg =_bbd .decodeOptimized (_fe ,_bbd .RegionBitmap .Width ,_bbd .RegionBitmap .RowStride ,_bbd .ReferenceBitmap .RowStride ,_bda ,_fb ,_ed );if _fcfg !=nil {return nil ,_fcfg ;};}else {_fcfg =_bbd .decodeTypicalPredictedLine (_fe ,_bbd .RegionBitmap .Width ,_bbd .RegionBitmap .RowStride ,_bbd .ReferenceBitmap .RowStride ,_bda ,_fb );
if _fcfg !=nil {return nil ,_fcfg ;};};};return _bbd .RegionBitmap ,nil ;};func (_cca *SymbolDictionary )setRefinementAtPixels ()error {if !_cca .UseRefinementAggregation ||_cca .SdrTemplate !=0{return nil ;};if _gafcf :=_cca .readRefinementAtPixels (2);
_gafcf !=nil {return _gafcf ;};return nil ;};func (_egdf *SymbolDictionary )getToExportFlags ()([]int ,error ){var (_gade int ;_eadc int32 ;_bdfe error ;_dedge =int32 (_egdf ._degcg +_egdf .NumberOfNewSymbols );_ebbb =make ([]int ,_dedge ););for _gefcg :=int32 (0);
_gefcg < _dedge ;_gefcg +=_eadc {if _egdf .IsHuffmanEncoded {_bbgf ,_gfgd :=_fd .GetStandardTable (1);if _gfgd !=nil {return nil ,_gfgd ;};_aabdb ,_gfgd :=_bbgf .Decode (_egdf ._decef );if _gfgd !=nil {return nil ,_gfgd ;};_eadc =int32 (_aabdb );}else {_eadc ,_bdfe =_egdf ._abad .DecodeInt (_egdf ._ffbe );
if _bdfe !=nil {return nil ,_bdfe ;};};if _eadc !=0{for _dgfe :=_gefcg ;_dgfe < _gefcg +_eadc ;_dgfe ++{_ebbb [_dgfe ]=_gade ;};};if _gade ==0{_gade =1;}else {_gade =0;};};return _ebbb ,nil ;};func (_adcf *template1 )form (_gddf ,_cbdg ,_cdcb ,_edf ,_dafa int16 )int16 {return ((_gddf &0x02)<<8)|(_cbdg <<6)|((_cdcb &0x03)<<4)|(_edf <<1)|_dafa ;
};func (_dbag *SymbolDictionary )setExportedSymbols (_acgb []int ){for _fgac :=uint32 (0);_fgac < _dbag ._degcg +_dbag .NumberOfNewSymbols ;_fgac ++{if _acgb [_fgac ]==1{var _deag *_e .Bitmap ;if _fgac < _dbag ._degcg {_deag =_dbag ._gfbda [_fgac ];}else {_deag =_dbag ._aebf [_fgac -_dbag ._degcg ];
};_ba .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u002d\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u0020\u0041\u0064\u0064 E\u0078\u0070\u006fr\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027%\u0073\u0027",_deag );_dbag ._fceb =append (_dbag ._fceb ,_deag );
};};};func (_cggd *HalftoneRegion )computeY (_gbg ,_dcgg int )int {return _cggd .shiftAndFill (int (_cggd .HGridY )+_gbg *int (_cggd .HRegionX )-_dcgg *int (_cggd .HRegionY ));};func (_bcacg *TextRegion )setParameters (_dfgbd *_af .Decoder ,_eabf ,_cdcbag bool ,_dafg ,_dcbeg uint32 ,_efga uint32 ,_bcded int8 ,_ffac uint32 ,_egcea int8 ,_agfa _e .CombinationOperator ,_bage int8 ,_efed int16 ,_ebdd ,_degg ,_fbdc ,_cfaf ,_gadg ,_fdcc ,_fcad ,_ecee ,_febe ,_fgdb int8 ,_fgdg ,_acef []int8 ,_gbag []*_e .Bitmap ,_aafg int8 ){_bcacg ._ecbcd =_dfgbd ;
_bcacg .IsHuffmanEncoded =_eabf ;_bcacg .UseRefinement =_cdcbag ;_bcacg .RegionInfo .BitmapWidth =_dafg ;_bcacg .RegionInfo .BitmapHeight =_dcbeg ;_bcacg .NumberOfSymbolInstances =_efga ;_bcacg .SbStrips =_bcded ;_bcacg .NumberOfSymbols =_ffac ;_bcacg .DefaultPixel =_egcea ;
_bcacg .CombinationOperator =_agfa ;_bcacg .IsTransposed =_bage ;_bcacg .ReferenceCorner =_efed ;_bcacg .SbDsOffset =_ebdd ;_bcacg .SbHuffFS =_degg ;_bcacg .SbHuffDS =_fbdc ;_bcacg .SbHuffDT =_cfaf ;_bcacg .SbHuffRDWidth =_gadg ;_bcacg .SbHuffRDHeight =_fdcc ;
_bcacg .SbHuffRSize =_febe ;_bcacg .SbHuffRDX =_fcad ;_bcacg .SbHuffRDY =_ecee ;_bcacg .SbrTemplate =_fgdb ;_bcacg .SbrATX =_fgdg ;_bcacg .SbrATY =_acef ;_bcacg .Symbols =_gbag ;_bcacg ._cedd =_aafg ;};func (_fcec *PageInformationSegment )Init (h *Header ,r _dc .StreamReader )(_bcgb error ){_fcec ._eaeb =r ;
if _bcgb =_fcec .parseHeader ();_bcgb !=nil {return _fcd .Wrap (_bcgb ,"P\u0061\u0067\u0065\u0049\u006e\u0066o\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065g\u006d\u0065\u006et\u002eI\u006e\u0069\u0074","");};return nil ;};type GenericRefinementRegion struct{_ged templater ;
_gca templater ;_bf _dc .StreamReader ;_fcf *Header ;RegionInfo *RegionSegment ;IsTPGROn bool ;TemplateID int8 ;Template templater ;GrAtX []int8 ;GrAtY []int8 ;RegionBitmap *_e .Bitmap ;ReferenceBitmap *_e .Bitmap ;ReferenceDX int32 ;ReferenceDY int32 ;
_afa *_af .Decoder ;_fcg *_af .DecoderStats ;_ac bool ;_gce []bool ;};func (_dgbfb *TextRegion )decodeRI ()(int64 ,error ){if !_dgbfb .UseRefinement {return 0,nil ;};if _dgbfb .IsHuffmanEncoded {_efbag ,_cbaa :=_dgbfb ._bgbb .ReadBit ();return int64 (_efbag ),_cbaa ;
};_cdcbg ,_bcea :=_dgbfb ._ecbcd .DecodeInt (_dgbfb ._dfdb );return int64 (_cdcbg ),_bcea ;};type Regioner interface{GetRegionBitmap ()(*_e .Bitmap ,error );GetRegionInfo ()*RegionSegment ;};func (_dbf *GenericRefinementRegion )String ()string {_gdf :=&_f .Builder {};
_gdf .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_gdf .WriteString (_dbf .RegionInfo .String ()+"\u000a");_gdf .WriteString (_gfe .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0052\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_dbf .IsTPGROn ));
_gdf .WriteString (_gfe .Sprintf ("\u0009-\u0020T\u0065\u006d\u0070\u006c\u0061t\u0065\u0049D\u003a\u0020\u0025\u0076\u000a",_dbf .TemplateID ));_gdf .WriteString (_gfe .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_dbf .GrAtX ));
_gdf .WriteString (_gfe .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_dbf .GrAtY ));_gdf .WriteString (_gfe .Sprintf ("\u0009-\u0020R\u0065\u0066\u0065\u0072\u0065n\u0063\u0065D\u0058\u0020\u0025\u0076\u000a",_dbf .ReferenceDX ));
_gdf .WriteString (_gfe .Sprintf ("\u0009\u002d\u0020\u0052ef\u0065\u0072\u0065\u006e\u0063\u0044\u0065\u0059\u003a\u0020\u0025\u0076\u000a",_dbf .ReferenceDY ));return _gdf .String ();};func (_dcbe *HalftoneRegion )GetPatterns ()([]*_e .Bitmap ,error ){var (_efef []*_e .Bitmap ;
_cgea error ;);for _ ,_ffce :=range _dcbe ._dgad .RTSegments {var _cbg Segmenter ;_cbg ,_cgea =_ffce .GetSegmentData ();if _cgea !=nil {_ba .Log .Debug ("\u0047e\u0074\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061 \u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025v",_cgea );
return nil ,_cgea ;};_dece ,_aaaa :=_cbg .(*PatternDictionary );if !_aaaa {_cgea =_gfe .Errorf ("\u0072e\u006c\u0061t\u0065\u0064\u0020\u0073e\u0067\u006d\u0065n\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0070at\u0074\u0065\u0072n\u0020\u0064i\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u003a \u0025\u0054",_cbg );
return nil ,_cgea ;};var _bcag []*_e .Bitmap ;_bcag ,_cgea =_dece .GetDictionary ();if _cgea !=nil {_ba .Log .Debug ("\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_cgea );
return nil ,_cgea ;};_efef =append (_efef ,_bcag ...);};return _efef ,nil ;};func (_ea *EndOfStripe )LineNumber ()int {return _ea ._c };func (_cfba *HalftoneRegion )computeSegmentDataStructure ()error {_cfba .DataOffset =_cfba ._eaaf .StreamPosition ();
_cfba .DataHeaderLength =_cfba .DataOffset -_cfba .DataHeaderOffset ;_cfba .DataLength =int64 (_cfba ._eaaf .Length ())-_cfba .DataHeaderLength ;return nil ;};func (_dccb *PatternDictionary )readTemplate ()error {_cddf ,_cdf :=_dccb ._gace .ReadBits (2);
if _cdf !=nil {return _cdf ;};_dccb .HDTemplate =byte (_cddf );return nil ;};func (_gedaf *HalftoneRegion )grayScaleDecoding (_ggdd int )([][]int ,error ){var (_deee []int8 ;_bbcg []int8 ;);if !_gedaf .IsMMREncoded {_deee =make ([]int8 ,4);_bbcg =make ([]int8 ,4);
if _gedaf .HTemplate <=1{_deee [0]=3;}else if _gedaf .HTemplate >=2{_deee [0]=2;};_bbcg [0]=-1;_deee [1]=-3;_bbcg [1]=-1;_deee [2]=2;_bbcg [2]=-2;_deee [3]=-2;_bbcg [3]=-2;};_gae :=make ([]*_e .Bitmap ,_ggdd );_fbbb :=NewGenericRegion (_gedaf ._eaaf );
_fbbb .setParametersMMR (_gedaf .IsMMREncoded ,_gedaf .DataOffset ,_gedaf .DataLength ,_gedaf .HGridHeight ,_gedaf .HGridWidth ,_gedaf .HTemplate ,false ,_gedaf .HSkipEnabled ,_deee ,_bbcg );_fad :=_ggdd -1;var _ggc error ;_gae [_fad ],_ggc =_fbbb .GetRegionBitmap ();
if _ggc !=nil {return nil ,_ggc ;};for _fad > 0{_fad --;_fbbb .Bitmap =nil ;_gae [_fad ],_ggc =_fbbb .GetRegionBitmap ();if _ggc !=nil {return nil ,_ggc ;};if _ggc =_gedaf .combineGrayscalePlanes (_gae ,_fad );_ggc !=nil {return nil ,_ggc ;};};return _gedaf .computeGrayScalePlanes (_gae ,_ggdd );
};func (_eb *GenericRefinementRegion )GetRegionInfo ()*RegionSegment {return _eb .RegionInfo };func (_gbga *Header )writeSegmentDataLength (_gfdd _dc .BinaryWriter )(_ccbf int ,_ggee error ){_egab :=make ([]byte ,4);_gf .BigEndian .PutUint32 (_egab ,uint32 (_gbga .SegmentDataLength ));
if _ccbf ,_ggee =_gfdd .Write (_egab );_ggee !=nil {return 0,_fcd .Wrap (_ggee ,"\u0048\u0065a\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u004c\u0065ng\u0074\u0068","");};return _ccbf ,nil ;
};func (_feeg *PageInformationSegment )readResolution ()error {_eff ,_begd :=_feeg ._eaeb .ReadBits (32);if _begd !=nil {return _begd ;};_feeg .ResolutionX =int (_eff &_d .MaxInt32 );_eff ,_begd =_feeg ._eaeb .ReadBits (32);if _begd !=nil {return _begd ;
};_feeg .ResolutionY =int (_eff &_d .MaxInt32 );return nil ;};type template0 struct{};type PageInformationSegment struct{_eaeb _dc .StreamReader ;PageBMHeight int ;PageBMWidth int ;ResolutionX int ;ResolutionY int ;_gcbd bool ;_cdg _e .CombinationOperator ;
_aead bool ;DefaultPixelValue uint8 ;_faac bool ;IsLossless bool ;IsStripe bool ;MaxStripeSize uint16 ;};func (_dae *SymbolDictionary )decodeAggregate (_cbcf ,_fbbf uint32 )error {var (_eaabf int64 ;_ggbg error ;);if _dae .IsHuffmanEncoded {_eaabf ,_ggbg =_dae .huffDecodeRefAggNInst ();
if _ggbg !=nil {return _ggbg ;};}else {_ffagb ,_fggb :=_dae ._abad .DecodeInt (_dae ._efee );if _fggb !=nil {return _fggb ;};_eaabf =int64 (_ffagb );};if _eaabf > 1{return _dae .decodeThroughTextRegion (_cbcf ,_fbbf ,uint32 (_eaabf ));}else if _eaabf ==1{return _dae .decodeRefinedSymbol (_cbcf ,_fbbf );
};return nil ;};func (_fagbe *SymbolDictionary )encodeSymbols (_dgcd _dc .BinaryWriter )(_egacd int ,_fgae error ){const _dcef ="\u0065\u006e\u0063o\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c";_baeg :=_a .New ();_baeg .Init ();_dcab ,_fgae :=_fagbe ._bdgf .SelectByIndexes (_fagbe ._eece );
if _fgae !=nil {return 0,_fcd .Wrap (_fgae ,_dcef ,"\u0069n\u0069\u0074\u0069\u0061\u006c");};_cgaf :=map[*_e .Bitmap ]int {};for _bbdb ,_gged :=range _dcab .Values {_cgaf [_gged ]=_bbdb ;};_dcab .SortByHeight ();var _fedd ,_eedc int ;_febdb ,_fgae :=_dcab .GroupByHeight ();
if _fgae !=nil {return 0,_fcd .Wrap (_fgae ,_dcef ,"");};for _ ,_aefg :=range _febdb .Values {_ccbfg :=_aefg .Values [0].Height ;_gadf :=_ccbfg -_fedd ;if _fgae =_baeg .EncodeInteger (_a .IADH ,_gadf );_fgae !=nil {return 0,_fcd .Wrapf (_fgae ,_dcef ,"\u0049\u0041\u0044\u0048\u0020\u0066\u006f\u0072\u0020\u0064\u0068\u003a \u0027\u0025\u0064\u0027",_gadf );
};_fedd =_ccbfg ;_gefb ,_ecfa :=_aefg .GroupByWidth ();if _ecfa !=nil {return 0,_fcd .Wrapf (_ecfa ,_dcef ,"\u0068\u0065\u0069g\u0068\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_ccbfg );};var _gedb int ;for _ ,_cddg :=range _gefb .Values {for _ ,_affd :=range _cddg .Values {_ccbc :=_affd .Width ;
_bdcg :=_ccbc -_gedb ;if _ecfa =_baeg .EncodeInteger (_a .IADW ,_bdcg );_ecfa !=nil {return 0,_fcd .Wrapf (_ecfa ,_dcef ,"\u0049\u0041\u0044\u0057\u0020\u0066\u006f\u0072\u0020\u0064\u0077\u003a \u0027\u0025\u0064\u0027",_bdcg );};_gedb +=_bdcg ;if _ecfa =_baeg .EncodeBitmap (_affd ,false );
_ecfa !=nil {return 0,_fcd .Wrapf (_ecfa ,_dcef ,"H\u0065i\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u0020W\u0069\u0064\u0074\u0068: \u0025\u0064",_ccbfg ,_ccbc );};_ddcb :=_cgaf [_affd ];_fagbe ._ccc [_ddcb ]=_eedc ;_eedc ++;};};if _ecfa =_baeg .EncodeOOB (_a .IADW );
_ecfa !=nil {return 0,_fcd .Wrap (_ecfa ,_dcef ,"\u0049\u0041\u0044\u0057");};};if _fgae =_baeg .EncodeInteger (_a .IAEX ,0);_fgae !=nil {return 0,_fcd .Wrap (_fgae ,_dcef ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};if _fgae =_baeg .EncodeInteger (_a .IAEX ,len (_fagbe ._eece ));_fgae !=nil {return 0,_fcd .Wrap (_fgae ,_dcef ,"\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0073\u0079m\u0062\u006f\u006c\u0073");};_baeg .Final ();_gcac ,_fgae :=_baeg .WriteTo (_dgcd );
if _fgae !=nil {return 0,_fcd .Wrap (_fgae ,_dcef ,"\u0077\u0072i\u0074\u0069\u006e\u0067 \u0065\u006ec\u006f\u0064\u0065\u0072\u0020\u0063\u006f\u006et\u0065\u0078\u0074\u0020\u0074\u006f\u0020\u0027\u0077\u0027\u0020\u0077r\u0069\u0074\u0065\u0072");
};return int (_gcac ),nil ;};func (_cab *GenericRefinementRegion )decodeTypicalPredictedLine (_bac ,_gbc ,_bad ,_aa ,_aac ,_afb int )error {_gbca :=_bac -int (_cab .ReferenceDY );_egf :=_cab .ReferenceBitmap .GetByteIndex (0,_gbca );_eae :=_cab .RegionBitmap .GetByteIndex (0,_bac );
var _cd error ;switch _cab .TemplateID {case 0:_cd =_cab .decodeTypicalPredictedLineTemplate0 (_bac ,_gbc ,_bad ,_aa ,_aac ,_afb ,_eae ,_gbca ,_egf );case 1:_cd =_cab .decodeTypicalPredictedLineTemplate1 (_bac ,_gbc ,_bad ,_aa ,_aac ,_afb ,_eae ,_gbca ,_egf );
};return _cd ;};func (_edag *TextRegion )readUseRefinement ()error {if !_edag .UseRefinement ||_edag .SbrTemplate !=0{return nil ;};var (_agba byte ;_fgbe error ;);_edag .SbrATX =make ([]int8 ,2);_edag .SbrATY =make ([]int8 ,2);_agba ,_fgbe =_edag ._bgbb .ReadByte ();
if _fgbe !=nil {return _fgbe ;};_edag .SbrATX [0]=int8 (_agba );_agba ,_fgbe =_edag ._bgbb .ReadByte ();if _fgbe !=nil {return _fgbe ;};_edag .SbrATY [0]=int8 (_agba );_agba ,_fgbe =_edag ._bgbb .ReadByte ();if _fgbe !=nil {return _fgbe ;};_edag .SbrATX [1]=int8 (_agba );
_agba ,_fgbe =_edag ._bgbb .ReadByte ();if _fgbe !=nil {return _fgbe ;};_edag .SbrATY [1]=int8 (_agba );return nil ;};func (_dacdf *SymbolDictionary )setCodingStatistics ()error {if _dacdf ._aafb ==nil {_dacdf ._aafb =_af .NewStats (512,1);};if _dacdf ._gdbe ==nil {_dacdf ._gdbe =_af .NewStats (512,1);
};if _dacdf ._fdgd ==nil {_dacdf ._fdgd =_af .NewStats (512,1);};if _dacdf ._efee ==nil {_dacdf ._efee =_af .NewStats (512,1);};if _dacdf ._ffbe ==nil {_dacdf ._ffbe =_af .NewStats (512,1);};if _dacdf .UseRefinementAggregation &&_dacdf ._ggfa ==nil {_dacdf ._ggfa =_af .NewStats (1<<uint (_dacdf ._cbae ),1);
_dacdf ._faacg =_af .NewStats (512,1);_dacdf ._aabb =_af .NewStats (512,1);};if _dacdf ._bcad ==nil {_dacdf ._bcad =_af .NewStats (65536,1);};if _dacdf ._abad ==nil {var _gbcaa error ;_dacdf ._abad ,_gbcaa =_af .New (_dacdf ._decef );if _gbcaa !=nil {return _gbcaa ;
};};return nil ;};func (_ddbc *SymbolDictionary )decodeDirectlyThroughGenericRegion (_caag ,_bbcgf uint32 )error {if _ddbc ._cbcge ==nil {_ddbc ._cbcge =NewGenericRegion (_ddbc ._decef );};_ddbc ._cbcge .setParametersWithAt (false ,byte (_ddbc .SdTemplate ),false ,false ,_ddbc .SdATX ,_ddbc .SdATY ,_caag ,_bbcgf ,_ddbc ._bcad ,_ddbc ._abad );
return _ddbc .addSymbol (_ddbc ._cbcge );};func (_cfbd *Header )readSegmentNumber (_bdc _dc .StreamReader )error {const _gfdc ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";_eabg :=make ([]byte ,4);
_ ,_gfae :=_bdc .Read (_eabg );if _gfae !=nil {return _fcd .Wrap (_gfae ,_gfdc ,"");};_cfbd .SegmentNumber =_gf .BigEndian .Uint32 (_eabg );return nil ;};func (_fegf *TextRegion )decodeSymInRefSize ()(int64 ,error ){const _feea ="\u0064e\u0063o\u0064\u0065\u0053\u0079\u006dI\u006e\u0052e\u0066\u0053\u0069\u007a\u0065";
if _fegf .SbHuffRSize ==0{_aace ,_bafa :=_fd .GetStandardTable (1);if _bafa !=nil {return 0,_fcd .Wrap (_bafa ,_feea ,"");};return _aace .Decode (_fegf ._bgbb );};if _fegf ._bcga ==nil {var (_ccefd int ;_acadg error ;);if _fegf .SbHuffFS ==3{_ccefd ++;
};if _fegf .SbHuffDS ==3{_ccefd ++;};if _fegf .SbHuffDT ==3{_ccefd ++;};if _fegf .SbHuffRDWidth ==3{_ccefd ++;};if _fegf .SbHuffRDHeight ==3{_ccefd ++;};if _fegf .SbHuffRDX ==3{_ccefd ++;};if _fegf .SbHuffRDY ==3{_ccefd ++;};_fegf ._bcga ,_acadg =_fegf .getUserTable (_ccefd );
if _acadg !=nil {return 0,_fcd .Wrap (_acadg ,_feea ,"");};};_bbfg ,_fded :=_fegf ._bcga .Decode (_fegf ._bgbb );if _fded !=nil {return 0,_fcd .Wrap (_fded ,_feea ,"");};return _bbfg ,nil ;};func (_bcbf *SymbolDictionary )decodeHeightClassDeltaHeightWithHuffman ()(int64 ,error ){switch _bcbf .SdHuffDecodeHeightSelection {case 0:_eafcc ,_fbbbd :=_fd .GetStandardTable (4);
if _fbbbd !=nil {return 0,_fbbbd ;};return _eafcc .Decode (_bcbf ._decef );case 1:_gbef ,_bbcdg :=_fd .GetStandardTable (5);if _bbcdg !=nil {return 0,_bbcdg ;};return _gbef .Decode (_bcbf ._decef );case 3:if _bcbf ._dcdf ==nil {_gebd ,_cec :=_fd .GetStandardTable (0);
if _cec !=nil {return 0,_cec ;};_bcbf ._dcdf =_gebd ;};return _bcbf ._dcdf .Decode (_bcbf ._decef );};return 0,nil ;};func (_faag *PageInformationSegment )readCombinationOperatorOverrideAllowed ()error {_add ,_decc :=_faag ._eaeb .ReadBit ();if _decc !=nil {return _decc ;
};if _add ==1{_faag ._gcbd =true ;};return nil ;};func (_deab *Header )writeReferredToCount (_acb _dc .BinaryWriter )(_ceac int ,_cdcfg error ){const _aaae ="w\u0072i\u0074\u0065\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0043ou\u006e\u0074";
_deab .RTSNumbers =make ([]int ,len (_deab .RTSegments ));for _efefb ,_dgcf :=range _deab .RTSegments {_deab .RTSNumbers [_efefb ]=int (_dgcf .SegmentNumber );};if len (_deab .RTSNumbers )<=4{var _cace byte ;if len (_deab .RetainBits )>=1{_cace =_deab .RetainBits [0];
};_cace |=byte (len (_deab .RTSNumbers ))<<5;if _cdcfg =_acb .WriteByte (_cace );_cdcfg !=nil {return 0,_fcd .Wrap (_cdcfg ,_aaae ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return 1,nil ;};_acagb :=uint32 (len (_deab .RTSNumbers ));
_cafc :=make ([]byte ,4+_fc .Ceil (len (_deab .RTSNumbers )+1,8));_acagb |=0x7<<29;_gf .BigEndian .PutUint32 (_cafc ,_acagb );copy (_cafc [1:],_deab .RetainBits );_ceac ,_cdcfg =_acb .Write (_cafc );if _cdcfg !=nil {return 0,_fcd .Wrap (_cdcfg ,_aaae ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");
};return _ceac ,nil ;};func (_gebg *TextRegion )InitEncode (globalSymbolsMap ,localSymbolsMap map[int ]int ,comps []int ,inLL *_e .Points ,symbols *_e .Bitmaps ,classIDs *_fc .IntSlice ,boxes *_e .Boxes ,width ,height ,symBits int ){_gebg .RegionInfo =&RegionSegment {BitmapWidth :uint32 (width ),BitmapHeight :uint32 (height )};
_gebg ._gfcg =globalSymbolsMap ;_gebg ._eeec =localSymbolsMap ;_gebg ._cbcd =comps ;_gebg ._afagc =inLL ;_gebg ._aegg =symbols ;_gebg ._ddbb =classIDs ;_gebg ._fgcc =boxes ;_gebg ._edac =symBits ;};func (_bgedb *TextRegion )setCodingStatistics ()error {if _bgedb ._gdegf ==nil {_bgedb ._gdegf =_af .NewStats (512,1);
};if _bgedb ._efabc ==nil {_bgedb ._efabc =_af .NewStats (512,1);};if _bgedb ._aded ==nil {_bgedb ._aded =_af .NewStats (512,1);};if _bgedb ._debd ==nil {_bgedb ._debd =_af .NewStats (512,1);};if _bgedb ._dfdb ==nil {_bgedb ._dfdb =_af .NewStats (512,1);
};if _bgedb ._cbfc ==nil {_bgedb ._cbfc =_af .NewStats (512,1);};if _bgedb ._dfbb ==nil {_bgedb ._dfbb =_af .NewStats (512,1);};if _bgedb ._bcda ==nil {_bgedb ._bcda =_af .NewStats (1<<uint (_bgedb ._cedd ),1);};if _bgedb ._feac ==nil {_bgedb ._feac =_af .NewStats (512,1);
};if _bgedb ._cefg ==nil {_bgedb ._cefg =_af .NewStats (512,1);};if _bgedb ._ecbcd ==nil {var _daeb error ;_bgedb ._ecbcd ,_daeb =_af .New (_bgedb ._bgbb );if _daeb !=nil {return _daeb ;};};return nil ;};var _ SegmentEncoder =&GenericRegion {};func (_aacd *RegionSegment )Size ()int {return 17};
func (_dgde *SymbolDictionary )setSymbolsArray ()error {if _dgde ._gfbda ==nil {if _ada :=_dgde .retrieveImportSymbols ();_ada !=nil {return _ada ;};};if _dgde ._gcbc ==nil {_dgde ._gcbc =append (_dgde ._gcbc ,_dgde ._gfbda ...);};return nil ;};func (_age *GenericRegion )decodeTemplate0a (_beg ,_gdfb ,_acf int ,_cfe ,_cae int )(_ccfg error ){const _ded ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0061";
var (_gba ,_dgc int ;_cfccg ,_agd int ;_befe byte ;_gedc int ;);if _beg >=1{_befe ,_ccfg =_age .Bitmap .GetByte (_cae );if _ccfg !=nil {return _fcd .Wrap (_ccfg ,_ded ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_cfccg =int (_befe );};if _beg >=2{_befe ,_ccfg =_age .Bitmap .GetByte (_cae -_age .Bitmap .RowStride );
if _ccfg !=nil {return _fcd .Wrap (_ccfg ,_ded ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_agd =int (_befe )<<6;};_gba =(_cfccg &0xf0)|(_agd &0x3800);for _bfe :=0;_bfe < _acf ;_bfe =_gedc {var (_dee byte ;_befc int ;);_gedc =_bfe +8;if _cbe :=_gdfb -_bfe ;
_cbe > 8{_befc =8;}else {_befc =_cbe ;};if _beg > 0{_cfccg <<=8;if _gedc < _gdfb {_befe ,_ccfg =_age .Bitmap .GetByte (_cae +1);if _ccfg !=nil {return _fcd .Wrap (_ccfg ,_ded ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_cfccg |=int (_befe );
};};if _beg > 1{_fgaf :=_cae -_age .Bitmap .RowStride +1;_agd <<=8;if _gedc < _gdfb {_befe ,_ccfg =_age .Bitmap .GetByte (_fgaf );if _ccfg !=nil {return _fcd .Wrap (_ccfg ,_ded ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_agd |=int (_befe )<<6;
}else {_agd |=0;};};for _faf :=0;_faf < _befc ;_faf ++{_fca :=uint (7-_faf );if _age ._bcac {_dgc =_age .overrideAtTemplate0a (_gba ,_bfe +_faf ,_beg ,int (_dee ),_faf ,int (_fca ));_age ._cfbb .SetIndex (int32 (_dgc ));}else {_age ._cfbb .SetIndex (int32 (_gba ));
};var _bff int ;_bff ,_ccfg =_age ._aad .DecodeBit (_age ._cfbb );if _ccfg !=nil {return _fcd .Wrap (_ccfg ,_ded ,"");};_dee |=byte (_bff )<<_fca ;_gba =((_gba &0x7bf7)<<1)|_bff |((_cfccg >>_fca )&0x10)|((_agd >>_fca )&0x800);};if _eef :=_age .Bitmap .SetByte (_cfe ,_dee );
_eef !=nil {return _fcd .Wrap (_eef ,_ded ,"");};_cfe ++;_cae ++;};return nil ;};func (_gfd *GenericRefinementRegion )getPixel (_fbg *_e .Bitmap ,_dfg ,_babg int )int {if _dfg < 0||_dfg >=_fbg .Width {return 0;};if _babg < 0||_babg >=_fbg .Height {return 0;
};if _fbg .GetPixel (_dfg ,_babg ){return 1;};return 0;};func (_gefce *TextRegion )GetRegionInfo ()*RegionSegment {return _gefce .RegionInfo };func (_dce *HalftoneRegion )shiftAndFill (_cbdb int )int {_cbdb >>=8;if _cbdb < 0{_fafe :=int (_d .Log (float64 (_dbfb (_cbdb )))/_d .Log (2));
_aaef :=31-_fafe ;for _agffe :=1;_agffe < _aaef ;_agffe ++{_cbdb |=1<<uint (31-_agffe );};};return _cbdb ;};type OrganizationType uint8 ;func (_feaf *TableSegment )HtHigh ()int32 {return _feaf ._fceg };const (ORandom OrganizationType =iota ;OSequential ;
);func (_ffgc *SymbolDictionary )readAtPixels (_deff int )error {_ffgc .SdATX =make ([]int8 ,_deff );_ffgc .SdATY =make ([]int8 ,_deff );var (_aebb byte ;_fdab error ;);for _edca :=0;_edca < _deff ;_edca ++{_aebb ,_fdab =_ffgc ._decef .ReadByte ();if _fdab !=nil {return _fdab ;
};_ffgc .SdATX [_edca ]=int8 (_aebb );_aebb ,_fdab =_ffgc ._decef .ReadByte ();if _fdab !=nil {return _fdab ;};_ffgc .SdATY [_edca ]=int8 (_aebb );};return nil ;};func (_gab *template1 )setIndex (_dac *_af .DecoderStats ){_dac .SetIndex (0x080)};func (_cfcdf *SymbolDictionary )decodeHeightClassDeltaHeight ()(int64 ,error ){if _cfcdf .IsHuffmanEncoded {return _cfcdf .decodeHeightClassDeltaHeightWithHuffman ();
};_dedc ,_afe :=_cfcdf ._abad .DecodeInt (_cfcdf ._gdbe );if _afe !=nil {return 0,_afe ;};return int64 (_dedc ),nil ;};func (_agee *TextRegion )initSymbols ()error {const _abge ="i\u006e\u0069\u0074\u0053\u0079\u006d\u0062\u006f\u006c\u0073";for _ ,_fedeg :=range _agee .Header .RTSegments {if _fedeg ==nil {return _fcd .Error (_abge ,"\u006e\u0069\u006c\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020pr\u006f\u0076\u0069\u0064\u0065\u0064 \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0074\u0065\u0078\u0074\u0020\u0072\u0065g\u0069\u006f\u006e\u0020\u0053\u0079\u006d\u0062o\u006c\u0073");
};if _fedeg .Type ==0{_afgab ,_dagdeg :=_fedeg .GetSegmentData ();if _dagdeg !=nil {return _fcd .Wrap (_dagdeg ,_abge ,"");};_aefce ,_febdd :=_afgab .(*SymbolDictionary );if !_febdd {return _fcd .Error (_abge ,"\u0072e\u0066\u0065r\u0072\u0065\u0064 \u0054\u006f\u0020\u0053\u0065\u0067\u006de\u006e\u0074\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_aefce ._ggfa =_agee ._bcda ;_cbff ,_dagdeg :=_aefce .GetDictionary ();if _dagdeg !=nil {return _fcd .Wrap (_dagdeg ,_abge ,"");};_agee .Symbols =append (_agee .Symbols ,_cbff ...);};};_agee .NumberOfSymbols =uint32 (len (_agee .Symbols ));return nil ;
};func (_gfbe *SymbolDictionary )readNumberOfNewSymbols ()error {_gbea ,_edeg :=_gfbe ._decef .ReadBits (32);if _edeg !=nil {return _edeg ;};_gfbe .NumberOfNewSymbols =uint32 (_gbea &_d .MaxUint32 );return nil ;};type GenericRegion struct{_fbeb _dc .StreamReader ;
DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;UseExtTemplates bool ;IsTPGDon bool ;GBTemplate byte ;IsMMREncoded bool ;UseMMR bool ;GBAtX []int8 ;GBAtY []int8 ;GBAtOverride []bool ;_bcac bool ;
Bitmap *_e .Bitmap ;_aad *_af .Decoder ;_cfbb *_af .DecoderStats ;_dcb *_ee .Decoder ;};func (_gccd *PatternDictionary )setGbAtPixels (){if _gccd .HDTemplate ==0{_gccd .GBAtX =make ([]int8 ,4);_gccd .GBAtY =make ([]int8 ,4);_gccd .GBAtX [0]=-int8 (_gccd .HdpWidth );
_gccd .GBAtY [0]=0;_gccd .GBAtX [1]=-3;_gccd .GBAtY [1]=-1;_gccd .GBAtX [2]=2;_gccd .GBAtY [2]=-2;_gccd .GBAtX [3]=-2;_gccd .GBAtY [3]=-2;}else {_gccd .GBAtX =[]int8 {-int8 (_gccd .HdpWidth )};_gccd .GBAtY =[]int8 {0};};};type Segmenter interface{Init (_fccc *Header ,_eccf _dc .StreamReader )error ;
};func (_bggb *PageInformationSegment )Encode (w _dc .BinaryWriter )(_cgcf int ,_bagca error ){const _adgf ="\u0050\u0061g\u0065\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u002e\u0045\u006eco\u0064\u0065";
_eacad :=make ([]byte ,4);_gf .BigEndian .PutUint32 (_eacad ,uint32 (_bggb .PageBMWidth ));_cgcf ,_bagca =w .Write (_eacad );if _bagca !=nil {return _cgcf ,_fcd .Wrap (_bagca ,_adgf ,"\u0077\u0069\u0064t\u0068");};_gf .BigEndian .PutUint32 (_eacad ,uint32 (_bggb .PageBMHeight ));
var _fge int ;_fge ,_bagca =w .Write (_eacad );if _bagca !=nil {return _fge +_cgcf ,_fcd .Wrap (_bagca ,_adgf ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_cgcf +=_fge ;_gf .BigEndian .PutUint32 (_eacad ,uint32 (_bggb .ResolutionX ));_fge ,_bagca =w .Write (_eacad );
if _bagca !=nil {return _fge +_cgcf ,_fcd .Wrap (_bagca ,_adgf ,"\u0078\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_cgcf +=_fge ;_gf .BigEndian .PutUint32 (_eacad ,uint32 (_bggb .ResolutionY ));if _fge ,_bagca =w .Write (_eacad );
_bagca !=nil {return _fge +_cgcf ,_fcd .Wrap (_bagca ,_adgf ,"\u0079\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_cgcf +=_fge ;if _bagca =_bggb .encodeFlags (w );_bagca !=nil {return _cgcf ,_fcd .Wrap (_bagca ,_adgf ,"");};_cgcf ++;
if _fge ,_bagca =_bggb .encodeStripingInformation (w );_bagca !=nil {return _cgcf ,_fcd .Wrap (_bagca ,_adgf ,"");};_cgcf +=_fge ;return _cgcf ,nil ;};func (_dabg *TextRegion )decodeStripT ()(_dcbc int64 ,_ggcg error ){if _dabg .IsHuffmanEncoded {if _dabg .SbHuffDT ==3{if _dabg ._egdb ==nil {var _gdfd int ;
if _dabg .SbHuffFS ==3{_gdfd ++;};if _dabg .SbHuffDS ==3{_gdfd ++;};_dabg ._egdb ,_ggcg =_dabg .getUserTable (_gdfd );if _ggcg !=nil {return 0,_ggcg ;};};_dcbc ,_ggcg =_dabg ._egdb .Decode (_dabg ._bgbb );if _ggcg !=nil {return 0,_ggcg ;};}else {var _caef _fd .Tabler ;
_caef ,_ggcg =_fd .GetStandardTable (11+int (_dabg .SbHuffDT ));if _ggcg !=nil {return 0,_ggcg ;};_dcbc ,_ggcg =_caef .Decode (_dabg ._bgbb );if _ggcg !=nil {return 0,_ggcg ;};};}else {var _bcfc int32 ;_bcfc ,_ggcg =_dabg ._ecbcd .DecodeInt (_dabg ._gdegf );
if _ggcg !=nil {return 0,_ggcg ;};_dcbc =int64 (_bcfc );};_dcbc *=int64 (-_dabg .SbStrips );return _dcbc ,nil ;};func (_dgacg *TextRegion )String ()string {_gddge :=&_f .Builder {};_gddge .WriteString ("\u000a[\u0054E\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u000a");
_gddge .WriteString (_dgacg .RegionInfo .String ()+"\u000a");_gddge .WriteString (_gfe .Sprintf ("\u0009\u002d\u0020\u0053br\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0025\u0076\u000a",_dgacg .SbrTemplate ));_gddge .WriteString (_gfe .Sprintf ("\u0009-\u0020S\u0062\u0044\u0073\u004f\u0066f\u0073\u0065t\u003a\u0020\u0025\u0076\u000a",_dgacg .SbDsOffset ));
_gddge .WriteString (_gfe .Sprintf ("\t\u002d \u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0050i\u0078\u0065\u006c\u003a %\u0076\u000a",_dgacg .DefaultPixel ));_gddge .WriteString (_gfe .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0076\u000a",_dgacg .CombinationOperator ));
_gddge .WriteString (_gfe .Sprintf ("\t\u002d \u0049\u0073\u0054\u0072\u0061\u006e\u0073\u0070o\u0073\u0065\u0064\u003a %\u0076\u000a",_dgacg .IsTransposed ));_gddge .WriteString (_gfe .Sprintf ("\u0009\u002d\u0020Re\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0043\u006f\u0072\u006e\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_dgacg .ReferenceCorner ));
_gddge .WriteString (_gfe .Sprintf ("\t\u002d\u0020\u0055\u0073eR\u0065f\u0069\u006e\u0065\u006d\u0065n\u0074\u003a\u0020\u0025\u0076\u000a",_dgacg .UseRefinement ));_gddge .WriteString (_gfe .Sprintf ("\u0009-\u0020\u0049\u0073\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045n\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0076\u000a",_dgacg .IsHuffmanEncoded ));
if _dgacg .IsHuffmanEncoded {_gddge .WriteString (_gfe .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_dgacg .SbHuffRSize ));_gddge .WriteString (_gfe .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0059:\u0020\u0025\u0076\u000a",_dgacg .SbHuffRDY ));
_gddge .WriteString (_gfe .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0058:\u0020\u0025\u0076\u000a",_dgacg .SbHuffRDX ));_gddge .WriteString (_gfe .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069\u0067\u0068\u0074\u003a\u0020\u0025v\u000a",_dgacg .SbHuffRDHeight ));
_gddge .WriteString (_gfe .Sprintf ("\t\u002d\u0020\u0053\u0062Hu\u0066f\u0052\u0044\u0057\u0069\u0064t\u0068\u003a\u0020\u0025\u0076\u000a",_dgacg .SbHuffRDWidth ));_gddge .WriteString (_gfe .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0054\u003a\u0020\u0025\u0076\u000a",_dgacg .SbHuffDT ));
_gddge .WriteString (_gfe .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0053\u003a\u0020\u0025\u0076\u000a",_dgacg .SbHuffDS ));_gddge .WriteString (_gfe .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0046\u0053\u003a\u0020\u0025\u0076\u000a",_dgacg .SbHuffFS ));
};_gddge .WriteString (_gfe .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_dgacg .SbrATX ));_gddge .WriteString (_gfe .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0059:\u0020\u0025\u0076\u000a",_dgacg .SbrATY ));
_gddge .WriteString (_gfe .Sprintf ("\u0009\u002d\u0020N\u0075\u006d\u0062\u0065r\u004f\u0066\u0053\u0079\u006d\u0062\u006fl\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_dgacg .NumberOfSymbolInstances ));_gddge .WriteString (_gfe .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_dgacg .SbrATX ));
return _gddge .String ();};func (_eeded *TextRegion )symbolIDCodeLengths ()error {var (_dffg []*_fd .Code ;_dbdeb uint64 ;_abce _fd .Tabler ;_gbac error ;);for _gfefb :=0;_gfefb < 35;_gfefb ++{_dbdeb ,_gbac =_eeded ._bgbb .ReadBits (4);if _gbac !=nil {return _gbac ;
};_bdee :=int (_dbdeb &0xf);if _bdee > 0{_dffg =append (_dffg ,_fd .NewCode (int32 (_bdee ),0,int32 (_gfefb ),false ));};};_abce ,_gbac =_fd .NewFixedSizeTable (_dffg );if _gbac !=nil {return _gbac ;};var (_aebg int64 ;_dbdc uint32 ;_gcabf []*_fd .Code ;
_gceff int64 ;);for _dbdc < _eeded .NumberOfSymbols {_gceff ,_gbac =_abce .Decode (_eeded ._bgbb );if _gbac !=nil {return _gbac ;};if _gceff < 32{if _gceff > 0{_gcabf =append (_gcabf ,_fd .NewCode (int32 (_gceff ),0,int32 (_dbdc ),false ));};_aebg =_gceff ;
_dbdc ++;}else {var _aafac ,_gfbdd int64 ;switch _gceff {case 32:_dbdeb ,_gbac =_eeded ._bgbb .ReadBits (2);if _gbac !=nil {return _gbac ;};_aafac =3+int64 (_dbdeb );if _dbdc > 0{_gfbdd =_aebg ;};case 33:_dbdeb ,_gbac =_eeded ._bgbb .ReadBits (3);if _gbac !=nil {return _gbac ;
};_aafac =3+int64 (_dbdeb );case 34:_dbdeb ,_gbac =_eeded ._bgbb .ReadBits (7);if _gbac !=nil {return _gbac ;};_aafac =11+int64 (_dbdeb );};for _caca :=0;_caca < int (_aafac );_caca ++{if _gfbdd > 0{_gcabf =append (_gcabf ,_fd .NewCode (int32 (_gfbdd ),0,int32 (_dbdc ),false ));
};_dbdc ++;};};};_eeded ._bgbb .Align ();_eeded ._aadg ,_gbac =_fd .NewFixedSizeTable (_gcabf );return _gbac ;};func (_cgcb *PageInformationSegment )checkInput ()error {if _cgcb .PageBMHeight ==_d .MaxInt32 {if !_cgcb .IsStripe {_ba .Log .Debug ("P\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0053\u0065\u0067me\u006e\u0074\u002e\u0049s\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0073\u0068ou\u006c\u0064 \u0062\u0065\u0020\u0074\u0072\u0075\u0065\u002e");
};};return nil ;};func (_degdf *PageInformationSegment )readMaxStripeSize ()error {_fead ,_cfbcg :=_degdf ._eaeb .ReadBits (15);if _cfbcg !=nil {return _cfbcg ;};_degdf .MaxStripeSize =uint16 (_fead &_d .MaxUint16 );return nil ;};const (TSymbolDictionary Type =0;
TIntermediateTextRegion Type =4;TImmediateTextRegion Type =6;TImmediateLosslessTextRegion Type =7;TPatternDictionary Type =16;TIntermediateHalftoneRegion Type =20;TImmediateHalftoneRegion Type =22;TImmediateLosslessHalftoneRegion Type =23;TIntermediateGenericRegion Type =36;
TImmediateGenericRegion Type =38;TImmediateLosslessGenericRegion Type =39;TIntermediateGenericRefinementRegion Type =40;TImmediateGenericRefinementRegion Type =42;TImmediateLosslessGenericRefinementRegion Type =43;TPageInformation Type =48;TEndOfPage Type =49;
TEndOfStrip Type =50;TEndOfFile Type =51;TProfiles Type =52;TTables Type =53;TExtension Type =62;TBitmap Type =70;);func (_dcff *PatternDictionary )checkInput ()error {if _dcff .HdpHeight < 1||_dcff .HdpWidth < 1{return _bb .New ("in\u0076\u0061l\u0069\u0064\u0020\u0048\u0065\u0061\u0064\u0065\u0072 \u0056\u0061\u006c\u0075\u0065\u003a\u0020\u0057\u0069\u0064\u0074\u0068\u002f\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020g\u0072e\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020z\u0065\u0072o");
};if _dcff .IsMMREncoded {if _dcff .HDTemplate !=0{_ba .Log .Debug ("\u0076\u0061\u0072\u0069\u0061\u0062\u006c\u0065\u0020\u0048\u0044\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e \u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030");
};};return nil ;};func (_ddac *Header )readHeaderFlags ()error {const _efcg ="\u0072e\u0061d\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006c\u0061\u0067\u0073";_feda ,_gbdd :=_ddac .Reader .ReadBit ();if _gbdd !=nil {return _fcd .Wrap (_gbdd ,_efcg ,"r\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067");
};if _feda !=0{_ddac .RetainFlag =true ;};_feda ,_gbdd =_ddac .Reader .ReadBit ();if _gbdd !=nil {return _fcd .Wrap (_gbdd ,_efcg ,"\u0070\u0061g\u0065\u0020\u0061s\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e");};if _feda !=0{_ddac .PageAssociationFieldSize =true ;
};_cgdf ,_gbdd :=_ddac .Reader .ReadBits (6);if _gbdd !=nil {return _fcd .Wrap (_gbdd ,_efcg ,"\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065");};_ddac .Type =Type (int (_cgdf ));return nil ;};func (_ebc *GenericRefinementRegion )decodeOptimized (_cbd ,_gcb ,_bbe ,_eac ,_cc ,_feb ,_fce int )error {var (_gde error ;
_fg int ;_cag int ;);_acg :=_cbd -int (_ebc .ReferenceDY );if _ef :=int (-_ebc .ReferenceDX );_ef > 0{_fg =_ef ;};_gdd :=_ebc .ReferenceBitmap .GetByteIndex (_fg ,_acg );if _ebc .ReferenceDX > 0{_cag =int (_ebc .ReferenceDX );};_dg :=_ebc .RegionBitmap .GetByteIndex (_cag ,_cbd );
switch _ebc .TemplateID {case 0:_gde =_ebc .decodeTemplate (_cbd ,_gcb ,_bbe ,_eac ,_cc ,_feb ,_fce ,_dg ,_acg ,_gdd ,_ebc ._ged );case 1:_gde =_ebc .decodeTemplate (_cbd ,_gcb ,_bbe ,_eac ,_cc ,_feb ,_fce ,_dg ,_acg ,_gdd ,_ebc ._gca );};return _gde ;
};func (_adbb *SymbolDictionary )setInSyms ()error {if _adbb .Header .RTSegments !=nil {return _adbb .retrieveImportSymbols ();};_adbb ._gfbda =make ([]*_e .Bitmap ,0);return nil ;};func (_fcga *GenericRegion )setOverrideFlag (_cffg int ){_fcga .GBAtOverride [_cffg ]=true ;
_fcga ._bcac =true ;};func (_ebaf *SymbolDictionary )decodeRefinedSymbol (_fgb ,_bdffd uint32 )error {var (_cbfd int ;_ggdf ,_cdac int32 ;);if _ebaf .IsHuffmanEncoded {_cgcc ,_cadg :=_ebaf ._decef .ReadBits (byte (_ebaf ._cbae ));if _cadg !=nil {return _cadg ;
};_cbfd =int (_cgcc );_ebcf ,_cadg :=_fd .GetStandardTable (15);if _cadg !=nil {return _cadg ;};_egdc ,_cadg :=_ebcf .Decode (_ebaf ._decef );if _cadg !=nil {return _cadg ;};_ggdf =int32 (_egdc );_egdc ,_cadg =_ebcf .Decode (_ebaf ._decef );if _cadg !=nil {return _cadg ;
};_cdac =int32 (_egdc );_ebcf ,_cadg =_fd .GetStandardTable (1);if _cadg !=nil {return _cadg ;};if _ ,_cadg =_ebcf .Decode (_ebaf ._decef );_cadg !=nil {return _cadg ;};_ebaf ._decef .Align ();}else {_bgcca ,_fcaa :=_ebaf ._abad .DecodeIAID (uint64 (_ebaf ._cbae ),_ebaf ._ggfa );
if _fcaa !=nil {return _fcaa ;};_cbfd =int (_bgcca );_ggdf ,_fcaa =_ebaf ._abad .DecodeInt (_ebaf ._faacg );if _fcaa !=nil {return _fcaa ;};_cdac ,_fcaa =_ebaf ._abad .DecodeInt (_ebaf ._aabb );if _fcaa !=nil {return _fcaa ;};};if _baegb :=_ebaf .setSymbolsArray ();
_baegb !=nil {return _baegb ;};_fcgac :=_ebaf ._gcbc [_cbfd ];if _efda :=_ebaf .decodeNewSymbols (_fgb ,_bdffd ,_fcgac ,_ggdf ,_cdac );_efda !=nil {return _efda ;};if _ebaf .IsHuffmanEncoded {_ebaf ._decef .Align ();};return nil ;};func (_bfde *Header )readReferredToSegmentNumbers (_fdff _dc .StreamReader ,_edcca int )([]int ,error ){const _dgbf ="\u0072\u0065\u0061\u0064R\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053e\u0067m\u0065\u006e\u0074\u004e\u0075\u006d\u0062e\u0072\u0073";
_face :=make ([]int ,_edcca );if _edcca > 0{_bfde .RTSegments =make ([]*Header ,_edcca );var (_ggcc uint64 ;_bgcc error ;);for _bbbe :=0;_bbbe < _edcca ;_bbbe ++{_ggcc ,_bgcc =_fdff .ReadBits (byte (_bfde .referenceSize ())<<3);if _bgcc !=nil {return nil ,_fcd .Wrapf (_bgcc ,_dgbf ,"\u0027\u0025\u0064\u0027 \u0072\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0020\u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u0075\u006db\u0065\u0072",_bbbe );
};_face [_bbbe ]=int (_ggcc &_d .MaxInt32 );};};return _face ,nil ;};func (_eedd *HalftoneRegion )renderPattern (_ccd [][]int )(_gaae error ){var _dabb ,_adcff int ;for _bcfa :=0;_bcfa < int (_eedd .HGridHeight );_bcfa ++{for _edbf :=0;_edbf < int (_eedd .HGridWidth );
_edbf ++{_dabb =_eedd .computeX (_bcfa ,_edbf );_adcff =_eedd .computeY (_bcfa ,_edbf );_ecbe :=_eedd .Patterns [_ccd [_bcfa ][_edbf ]];if _gaae =_e .Blit (_ecbe ,_eedd .HalftoneRegionBitmap ,_dabb +int (_eedd .HGridX ),_adcff +int (_eedd .HGridY ),_eedd .CombinationOperator );
_gaae !=nil {return _gaae ;};};};return nil ;};func (_eeed *Header )String ()string {_dagd :=&_f .Builder {};_dagd .WriteString ("\u000a[\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045A\u0044\u0045\u0052\u005d\u000a");_dagd .WriteString (_gfe .Sprintf ("\t\u002d\u0020\u0053\u0065gm\u0065n\u0074\u004e\u0075\u006d\u0062e\u0072\u003a\u0020\u0025\u0076\u000a",_eeed .SegmentNumber ));
_dagd .WriteString (_gfe .Sprintf ("\u0009\u002d\u0020T\u0079\u0070\u0065\u003a\u0020\u0025\u0076\u000a",_eeed .Type ));_dagd .WriteString (_gfe .Sprintf ("\u0009-\u0020R\u0065\u0074\u0061\u0069\u006eF\u006c\u0061g\u003a\u0020\u0025\u0076\u000a",_eeed .RetainFlag ));
_dagd .WriteString (_gfe .Sprintf ("\u0009\u002d\u0020Pa\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_eeed .PageAssociation ));_dagd .WriteString (_gfe .Sprintf ("\u0009\u002d\u0020\u0050\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074i\u006fn\u0046\u0069\u0065\u006c\u0064\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_eeed .PageAssociationFieldSize ));
_dagd .WriteString ("\u0009-\u0020R\u0054\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u0053\u003a\u000a");for _ ,_bgc :=range _eeed .RTSNumbers {_dagd .WriteString (_gfe .Sprintf ("\u0009\t\u002d\u0020\u0025\u0064\u000a",_bgc ));};_dagd .WriteString (_gfe .Sprintf ("\t\u002d \u0048\u0065\u0061\u0064\u0065\u0072\u004c\u0065n\u0067\u0074\u0068\u003a %\u0076\u000a",_eeed .HeaderLength ));
_dagd .WriteString (_gfe .Sprintf ("\u0009-\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061L\u0065n\u0067\u0074\u0068\u003a\u0020\u0025\u0076\n",_eeed .SegmentDataLength ));_dagd .WriteString (_gfe .Sprintf ("\u0009\u002d\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074D\u0061\u0074\u0061\u0053\u0074\u0061\u0072t\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0076\u000a",_eeed .SegmentDataStartOffset ));
return _dagd .String ();};func (_bafd *HalftoneRegion )computeX (_eggg ,_ebb int )int {return _bafd .shiftAndFill (int (_bafd .HGridX )+_eggg *int (_bafd .HRegionY )+_ebb *int (_bafd .HRegionX ));};type EncodeInitializer interface{InitEncode ();};type SegmentEncoder interface{Encode (_daff _dc .BinaryWriter )(_babgg int ,_bgg error );
};func (_fddb *TextRegion )encodeFlags (_gdacd _dc .BinaryWriter )(_acga int ,_cfbdf error ){const _cbadc ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _cfbdf =_gdacd .WriteBit (int (_fddb .SbrTemplate ));_cfbdf !=nil {return _acga ,_fcd .Wrap (_cfbdf ,_cbadc ,"s\u0062\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");
};if _ ,_cfbdf =_gdacd .WriteBits (uint64 (_fddb .SbDsOffset ),5);_cfbdf !=nil {return _acga ,_fcd .Wrap (_cfbdf ,_cbadc ,"\u0073\u0062\u0044\u0073\u004f\u0066\u0066\u0073\u0065\u0074");};if _cfbdf =_gdacd .WriteBit (int (_fddb .DefaultPixel ));_cfbdf !=nil {return _acga ,_fcd .Wrap (_cfbdf ,_cbadc ,"\u0044\u0065\u0066a\u0075\u006c\u0074\u0050\u0069\u0078\u0065\u006c");
};if _ ,_cfbdf =_gdacd .WriteBits (uint64 (_fddb .CombinationOperator ),2);_cfbdf !=nil {return _acga ,_fcd .Wrap (_cfbdf ,_cbadc ,"\u0043\u006f\u006d\u0062in\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072");};if _cfbdf =_gdacd .WriteBit (int (_fddb .IsTransposed ));
_cfbdf !=nil {return _acga ,_fcd .Wrap (_cfbdf ,_cbadc ,"\u0069\u0073\u0020\u0074\u0072\u0061\u006e\u0073\u0070\u006f\u0073\u0065\u0064");};if _ ,_cfbdf =_gdacd .WriteBits (uint64 (_fddb .ReferenceCorner ),2);_cfbdf !=nil {return _acga ,_fcd .Wrap (_cfbdf ,_cbadc ,"\u0072\u0065f\u0065\u0072\u0065n\u0063\u0065\u0020\u0063\u006f\u0072\u006e\u0065\u0072");
};if _ ,_cfbdf =_gdacd .WriteBits (uint64 (_fddb .LogSBStrips ),2);_cfbdf !=nil {return _acga ,_fcd .Wrap (_cfbdf ,_cbadc ,"L\u006f\u0067\u0053\u0042\u0053\u0074\u0072\u0069\u0070\u0073");};var _eabd int ;if _fddb .UseRefinement {_eabd =1;};if _cfbdf =_gdacd .WriteBit (_eabd );
_cfbdf !=nil {return _acga ,_fcd .Wrap (_cfbdf ,_cbadc ,"\u0075\u0073\u0065\u0020\u0072\u0065\u0066\u0069\u006ee\u006d\u0065\u006e\u0074");};_eabd =0;if _fddb .IsHuffmanEncoded {_eabd =1;};if _cfbdf =_gdacd .WriteBit (_eabd );_cfbdf !=nil {return _acga ,_fcd .Wrap (_cfbdf ,_cbadc ,"u\u0073\u0065\u0020\u0068\u0075\u0066\u0066\u006d\u0061\u006e");
};_acga =2;return _acga ,nil ;};func (_beb *GenericRefinementRegion )updateOverride ()error {if _beb .GrAtX ==nil ||_beb .GrAtY ==nil {return _bb .New ("\u0041\u0054\u0020\u0070\u0069\u0078\u0065\u006c\u0073\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");
};if len (_beb .GrAtX )!=len (_beb .GrAtY ){return _bb .New ("A\u0054\u0020\u0070\u0069xe\u006c \u0069\u006e\u0063\u006f\u006es\u0069\u0073\u0074\u0065\u006e\u0074");};_beb ._gce =make ([]bool ,len (_beb .GrAtX ));switch _beb .TemplateID {case 0:if _beb .GrAtX [0]!=-1&&_beb .GrAtY [0]!=-1{_beb ._gce [0]=true ;
_beb ._ac =true ;};if _beb .GrAtX [1]!=-1&&_beb .GrAtY [1]!=-1{_beb ._gce [1]=true ;_beb ._ac =true ;};case 1:_beb ._ac =false ;};return nil ;};type RegionSegment struct{_fba _dc .StreamReader ;BitmapWidth uint32 ;BitmapHeight uint32 ;XLocation uint32 ;
YLocation uint32 ;CombinaionOperator _e .CombinationOperator ;};func (_efd *GenericRegion )copyLineAbove (_aeb int )error {_gbdf :=_aeb *_efd .Bitmap .RowStride ;_agf :=_gbdf -_efd .Bitmap .RowStride ;for _aaa :=0;_aaa < _efd .Bitmap .RowStride ;_aaa ++{_cac ,_dbfc :=_efd .Bitmap .GetByte (_agf );
if _dbfc !=nil {return _dbfc ;};_agf ++;if _dbfc =_efd .Bitmap .SetByte (_gbdf ,_cac );_dbfc !=nil {return _dbfc ;};_gbdf ++;};return nil ;};func (_aefd *PatternDictionary )GetDictionary ()([]*_e .Bitmap ,error ){if _aefd .Patterns !=nil {return _aefd .Patterns ,nil ;
};if !_aefd .IsMMREncoded {_aefd .setGbAtPixels ();};_dggc :=NewGenericRegion (_aefd ._gace );_dggc .setParametersMMR (_aefd .IsMMREncoded ,_aefd .DataOffset ,_aefd .DataLength ,uint32 (_aefd .HdpHeight ),(_aefd .GrayMax +1)*uint32 (_aefd .HdpWidth ),_aefd .HDTemplate ,false ,false ,_aefd .GBAtX ,_aefd .GBAtY );
_bebg ,_bfad :=_dggc .GetRegionBitmap ();if _bfad !=nil {return nil ,_bfad ;};if _bfad =_aefd .extractPatterns (_bebg );_bfad !=nil {return nil ,_bfad ;};return _aefd .Patterns ,nil ;};func (_agg *GenericRegion )Size ()int {return _agg .RegionSegment .Size ()+1+2*len (_agg .GBAtX )};
func (_cga *SymbolDictionary )encodeRefinementATFlags (_dbgf _dc .BinaryWriter )(_cdfa int ,_becf error ){const _faefc ="\u0065\u006e\u0063od\u0065\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0041\u0054\u0046\u006c\u0061\u0067\u0073";if !_cga .UseRefinementAggregation ||_cga .SdrTemplate !=0{return 0,nil ;
};for _ffad :=0;_ffad < 2;_ffad ++{if _becf =_dbgf .WriteByte (byte (_cga .SdrATX [_ffad ]));_becf !=nil {return _cdfa ,_fcd .Wrapf (_becf ,_faefc ,"\u0053\u0064\u0072\u0041\u0054\u0058\u005b\u0025\u0064\u005d",_ffad );};_cdfa ++;if _becf =_dbgf .WriteByte (byte (_cga .SdrATY [_ffad ]));
_becf !=nil {return _cdfa ,_fcd .Wrapf (_becf ,_faefc ,"\u0053\u0064\u0072\u0041\u0054\u0059\u005b\u0025\u0064\u005d",_ffad );};_cdfa ++;};return _cdfa ,nil ;};func (_gcaba *TableSegment )HtLow ()int32 {return _gcaba ._fcge };func (_agec *GenericRegion )overrideAtTemplate1 (_becd ,_afdbg ,_dfff ,_fbcf ,_fag int )int {_becd &=0x1FF7;
if _agec .GBAtY [0]==0&&_agec .GBAtX [0]>=-int8 (_fag ){_becd |=(_fbcf >>uint (7-(int8 (_fag )+_agec .GBAtX [0]))&0x1)<<3;}else {_becd |=int (_agec .getPixel (_afdbg +int (_agec .GBAtX [0]),_dfff +int (_agec .GBAtY [0])))<<3;};return _becd ;};func (_beaf *TextRegion )computeSymbolCodeLength ()error {if _beaf .IsHuffmanEncoded {return _beaf .symbolIDCodeLengths ();
};_beaf ._cedd =int8 (_d .Ceil (_d .Log (float64 (_beaf .NumberOfSymbols ))/_d .Log (2)));return nil ;};func (_eafg *PageInformationSegment )readIsStriped ()error {_degd ,_ace :=_eafg ._eaeb .ReadBit ();if _ace !=nil {return _ace ;};if _degd ==1{_eafg .IsStripe =true ;
};return nil ;};func (_gecfb *TextRegion )createRegionBitmap ()error {_gecfb .RegionBitmap =_e .New (int (_gecfb .RegionInfo .BitmapWidth ),int (_gecfb .RegionInfo .BitmapHeight ));if _gecfb .DefaultPixel !=0{_gecfb .RegionBitmap .SetDefaultPixel ();};
return nil ;};func (_ffc *GenericRegion )String ()string {_eed :=&_f .Builder {};_eed .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_eed .WriteString (_ffc .RegionSegment .String ()+"\u000a");
_eed .WriteString (_gfe .Sprintf ("\u0009\u002d\u0020Us\u0065\u0045\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_ffc .UseExtTemplates ));_eed .WriteString (_gfe .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0044\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_ffc .IsTPGDon ));
_eed .WriteString (_gfe .Sprintf ("\u0009-\u0020G\u0042\u0054\u0065\u006d\u0070l\u0061\u0074e\u003a\u0020\u0025\u0064\u000a",_ffc .GBTemplate ));_eed .WriteString (_gfe .Sprintf ("\t\u002d \u0049\u0073\u004d\u004d\u0052\u0045\u006e\u0063o\u0064\u0065\u0064\u003a %\u0076\u000a",_ffc .IsMMREncoded ));
_eed .WriteString (_gfe .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_ffc .GBAtX ));_eed .WriteString (_gfe .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_ffc .GBAtY ));
_eed .WriteString (_gfe .Sprintf ("\t\u002d \u0047\u0042\u0041\u0074\u004f\u0076\u0065\u0072r\u0069\u0064\u0065\u003a %\u0076\u000a",_ffc .GBAtOverride ));return _eed .String ();};func (_fgag *PageInformationSegment )encodeFlags (_afga _dc .BinaryWriter )(_fagb error ){const _bbaa ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _fagb =_afga .SkipBits (1);_fagb !=nil {return _fcd .Wrap (_fagb ,_bbaa ,"\u0072\u0065\u0073e\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074");};var _acc int ;if _fgag .CombinationOperatorOverrideAllowed (){_acc =1;};if _fagb =_afga .WriteBit (_acc );
_fagb !=nil {return _fcd .Wrap (_fagb ,_bbaa ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0064\u0065\u006e");};_acc =0;if _fgag ._aead {_acc =1;
};if _fagb =_afga .WriteBit (_acc );_fagb !=nil {return _fcd .Wrap (_fagb ,_bbaa ,"\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0061\u0075\u0078i\u006ci\u0061r\u0079\u0020\u0062\u0075\u0066\u0066\u0065r");};if _fagb =_afga .WriteBit ((int (_fgag ._cdg )>>1)&0x01);
_fagb !=nil {return _fcd .Wrap (_fagb ,_bbaa ,"\u0063\u006f\u006d\u0062\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006f\u0070\u0065\u0072\u0061\u0074o\u0072\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0062\u0069\u0074");};if _fagb =_afga .WriteBit (int (_fgag ._cdg )&0x01);
_fagb !=nil {return _fcd .Wrap (_fagb ,_bbaa ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0062\u0069\u0074");};_acc =int (_fgag .DefaultPixelValue );
if _fagb =_afga .WriteBit (_acc );_fagb !=nil {return _fcd .Wrap (_fagb ,_bbaa ,"\u0064e\u0066\u0061\u0075\u006c\u0074\u0020\u0070\u0061\u0067\u0065\u0020p\u0069\u0078\u0065\u006c\u0020\u0076\u0061\u006c\u0075\u0065");};_acc =0;if _fgag ._faac {_acc =1;
};if _fagb =_afga .WriteBit (_acc );_fagb !=nil {return _fcd .Wrap (_fagb ,_bbaa ,"\u0063\u006f\u006e\u0074ai\u006e\u0073\u0020\u0072\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074");};_acc =0;if _fgag .IsLossless {_acc =1;};if _fagb =_afga .WriteBit (_acc );
_fagb !=nil {return _fcd .Wrap (_fagb ,_bbaa ,"p\u0061\u0067\u0065\u0020\u0069\u0073 \u0065\u0076\u0065\u006e\u0074\u0075\u0061\u006c\u006cy\u0020\u006c\u006fs\u0073l\u0065\u0073\u0073");};return nil ;};func (_fbc *GenericRefinementRegion )readAtPixels ()error {_fbc .GrAtX =make ([]int8 ,2);
_fbc .GrAtY =make ([]int8 ,2);_edad ,_fda :=_fbc ._bf .ReadByte ();if _fda !=nil {return _fda ;};_fbc .GrAtX [0]=int8 (_edad );_edad ,_fda =_fbc ._bf .ReadByte ();if _fda !=nil {return _fda ;};_fbc .GrAtY [0]=int8 (_edad );_edad ,_fda =_fbc ._bf .ReadByte ();
if _fda !=nil {return _fda ;};_fbc .GrAtX [1]=int8 (_edad );_edad ,_fda =_fbc ._bf .ReadByte ();if _fda !=nil {return _fda ;};_fbc .GrAtY [1]=int8 (_edad );return nil ;};func (_caed *TextRegion )checkInput ()error {const _aecg ="\u0063\u0068\u0065\u0063\u006b\u0049\u006e\u0070\u0075\u0074";
if !_caed .UseRefinement {if _caed .SbrTemplate !=0{_ba .Log .Debug ("\u0053\u0062\u0072Te\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_caed .SbrTemplate =0;};};if _caed .SbHuffFS ==2||_caed .SbHuffRDWidth ==2||_caed .SbHuffRDHeight ==2||_caed .SbHuffRDX ==2||_caed .SbHuffRDY ==2{return _fcd .Error (_aecg ,"h\u0075\u0066\u0066\u006d\u0061\u006e \u0066\u006c\u0061\u0067\u0020\u0076a\u006c\u0075\u0065\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074e\u0064");
};if !_caed .UseRefinement {if _caed .SbHuffRSize !=0{_ba .Log .Debug ("\u0053\u0062\u0048uf\u0066\u0052\u0053\u0069\u007a\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_caed .SbHuffRSize =0;};if _caed .SbHuffRDY !=0{_ba .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044Y\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");
_caed .SbHuffRDY =0;};if _caed .SbHuffRDX !=0{_ba .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044X\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_caed .SbHuffRDX =0;};if _caed .SbHuffRDWidth !=0{_ba .Log .Debug ("\u0053b\u0048\u0075\u0066\u0066R\u0044\u0057\u0069\u0064\u0074h\u0020s\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u00200");
_caed .SbHuffRDWidth =0;};if _caed .SbHuffRDHeight !=0{_ba .Log .Debug ("\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069g\u0068\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0030");_caed .SbHuffRDHeight =0;};};return nil ;
};func (_fea *Header )readSegmentPageAssociation (_cefc Documenter ,_bge _dc .StreamReader ,_ccda uint64 ,_ebg ...int )(_abdc error ){const _dcfd ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074P\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061t\u0069\u006f\u006e";
if !_fea .PageAssociationFieldSize {_cdbe ,_agfcb :=_bge .ReadBits (8);if _agfcb !=nil {return _fcd .Wrap (_agfcb ,_dcfd ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_fea .PageAssociation =int (_cdbe &0xFF);}else {_ffb ,_feba :=_bge .ReadBits (32);
if _feba !=nil {return _fcd .Wrap (_feba ,_dcfd ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_fea .PageAssociation =int (_ffb &_d .MaxInt32 );};if _ccda ==0{return nil ;};if _fea .PageAssociation !=0{_bbcad ,_fcdd :=_cefc .GetPage (_fea .PageAssociation );
if _fcdd !=nil {return _fcd .Wrap (_fcdd ,_dcfd ,"\u0061s\u0073\u006f\u0063\u0069a\u0074\u0065\u0064\u0020\u0070a\u0067e\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006ed");};var _debc int ;for _agbc :=uint64 (0);_agbc < _ccda ;_agbc ++{_debc =_ebg [_agbc ];
_fea .RTSegments [_agbc ],_fcdd =_bbcad .GetSegment (_debc );if _fcdd !=nil {var _bbbd error ;_fea .RTSegments [_agbc ],_bbbd =_cefc .GetGlobalSegment (_debc );if _bbbd !=nil {return _fcd .Wrapf (_fcdd ,_dcfd ,"\u0072\u0065\u0066\u0065\u0072\u0065n\u0063\u0065\u0020s\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064\u0020\u0061\u0074\u0020pa\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0072\u0020\u0069\u006e\u0020\u0067\u006c\u006f\u0062\u0061\u006c\u0073",_fea .PageAssociation );
};};};return nil ;};for _bdegg :=uint64 (0);_bdegg < _ccda ;_bdegg ++{_fea .RTSegments [_bdegg ],_abdc =_cefc .GetGlobalSegment (_ebg [_bdegg ]);if _abdc !=nil {return _fcd .Wrapf (_abdc ,_dcfd ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u003a\u0020\u0027\u0025d\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064",_ebg [_bdegg ]);
};};return nil ;};func (_bdef *PatternDictionary )readGrayMax ()error {_bfae ,_dfce :=_bdef ._gace .ReadBits (32);if _dfce !=nil {return _dfce ;};_bdef .GrayMax =uint32 (_bfae &_d .MaxUint32 );return nil ;};func (_febb *TextRegion )decodeRdw ()(int64 ,error ){const _dfec ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064w";
if _febb .IsHuffmanEncoded {if _febb .SbHuffRDWidth ==3{if _febb ._bgff ==nil {var (_ggff int ;_edfg error ;);if _febb .SbHuffFS ==3{_ggff ++;};if _febb .SbHuffDS ==3{_ggff ++;};if _febb .SbHuffDT ==3{_ggff ++;};_febb ._bgff ,_edfg =_febb .getUserTable (_ggff );
if _edfg !=nil {return 0,_fcd .Wrap (_edfg ,_dfec ,"");};};return _febb ._bgff .Decode (_febb ._bgbb );};_dggf ,_gage :=_fd .GetStandardTable (14+int (_febb .SbHuffRDWidth ));if _gage !=nil {return 0,_fcd .Wrap (_gage ,_dfec ,"");};return _dggf .Decode (_febb ._bgbb );
};_bcee ,_gbaa :=_febb ._ecbcd .DecodeInt (_febb ._cbfc );if _gbaa !=nil {return 0,_fcd .Wrap (_gbaa ,_dfec ,"");};return int64 (_bcee ),nil ;};func (_bcggc *TextRegion )parseHeader ()error {var _cbccf error ;_ba .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069n\u0073\u002e\u002e\u002e");
defer func (){if _cbccf !=nil {_ba .Log .Trace ("\u005b\u0054\u0045\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044E\u0052\u005d\u0020\u0066\u0061i\u006c\u0065d\u002e\u0020\u0025\u0076",_cbccf );
}else {_ba .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069s\u0068\u0065\u0064\u002e");};}();if _cbccf =_bcggc .RegionInfo .parseHeader ();
_cbccf !=nil {return _cbccf ;};if _cbccf =_bcggc .readRegionFlags ();_cbccf !=nil {return _cbccf ;};if _bcggc .IsHuffmanEncoded {if _cbccf =_bcggc .readHuffmanFlags ();_cbccf !=nil {return _cbccf ;};};if _cbccf =_bcggc .readUseRefinement ();_cbccf !=nil {return _cbccf ;
};if _cbccf =_bcggc .readAmountOfSymbolInstances ();_cbccf !=nil {return _cbccf ;};if _cbccf =_bcggc .getSymbols ();_cbccf !=nil {return _cbccf ;};if _cbccf =_bcggc .computeSymbolCodeLength ();_cbccf !=nil {return _cbccf ;};if _cbccf =_bcggc .checkInput ();
_cbccf !=nil {return _cbccf ;};_ba .Log .Trace ("\u0025\u0073",_bcggc .String ());return nil ;};func (_caac *SymbolDictionary )getSbSymCodeLen ()int8 {_fcae :=int8 (_d .Ceil (_d .Log (float64 (_caac ._degcg +_caac .NumberOfNewSymbols ))/_d .Log (2)));if _caac .IsHuffmanEncoded &&_fcae < 1{return 1;
};return _fcae ;};func (_cgfa *PageInformationSegment )readContainsRefinement ()error {_bged ,_bdb :=_cgfa ._eaeb .ReadBit ();if _bdb !=nil {return _bdb ;};if _bged ==1{_cgfa ._faac =true ;};return nil ;};func (_fgc *GenericRefinementRegion )setParameters (_cdcc *_af .DecoderStats ,_bbea *_af .Decoder ,_gffe int8 ,_cda ,_efcb uint32 ,_fdc *_e .Bitmap ,_egb ,_bace int32 ,_edce bool ,_egd []int8 ,_aacc []int8 ){_ba .Log .Trace ("\u005b\u0047\u0045NE\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052E\u0047I\u004fN\u005d \u0073\u0065\u0074\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073");
if _cdcc !=nil {_fgc ._fcg =_cdcc ;};if _bbea !=nil {_fgc ._afa =_bbea ;};_fgc .TemplateID =_gffe ;_fgc .RegionInfo .BitmapWidth =_cda ;_fgc .RegionInfo .BitmapHeight =_efcb ;_fgc .ReferenceBitmap =_fdc ;_fgc .ReferenceDX =_egb ;_fgc .ReferenceDY =_bace ;
_fgc .IsTPGROn =_edce ;_fgc .GrAtX =_egd ;_fgc .GrAtY =_aacc ;_fgc .RegionBitmap =nil ;_ba .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073 f\u0069\u006ei\u0073\u0068\u0065\u0064\u002e\u0020\u0025\u0073",_fgc );
};func _eec (_cfd _dc .StreamReader ,_ddae *Header )*GenericRefinementRegion {return &GenericRefinementRegion {_bf :_cfd ,RegionInfo :NewRegionSegment (_cfd ),_fcf :_ddae ,_ged :&template0 {},_gca :&template1 {}};};func (_debg *PageInformationSegment )parseHeader ()(_bbcd error ){_ba .Log .Trace ("\u005b\u0050\u0061\u0067\u0065I\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067m\u0065\u006e\u0074\u005d\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u002e\u002e");
defer func (){var _eaab ="[\u0050\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072m\u0061\u0074\u0069\u006f\u006e\u0053\u0065gm\u0065\u006e\u0074\u005d \u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065ad\u0065\u0072 \u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064";
if _bbcd !=nil {_eaab +="\u0020\u0077\u0069t\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u0020"+_bbcd .Error ();}else {_eaab +="\u0020\u0073\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079";};_ba .Log .Trace (_eaab );}();if _bbcd =_debg .readWidthAndHeight ();
_bbcd !=nil {return _bbcd ;};if _bbcd =_debg .readResolution ();_bbcd !=nil {return _bbcd ;};_ ,_bbcd =_debg ._eaeb .ReadBit ();if _bbcd !=nil {return _bbcd ;};if _bbcd =_debg .readCombinationOperatorOverrideAllowed ();_bbcd !=nil {return _bbcd ;};if _bbcd =_debg .readRequiresAuxiliaryBuffer ();
_bbcd !=nil {return _bbcd ;};if _bbcd =_debg .readCombinationOperator ();_bbcd !=nil {return _bbcd ;};if _bbcd =_debg .readDefaultPixelValue ();_bbcd !=nil {return _bbcd ;};if _bbcd =_debg .readContainsRefinement ();_bbcd !=nil {return _bbcd ;};if _bbcd =_debg .readIsLossless ();
_bbcd !=nil {return _bbcd ;};if _bbcd =_debg .readIsStriped ();_bbcd !=nil {return _bbcd ;};if _bbcd =_debg .readMaxStripeSize ();_bbcd !=nil {return _bbcd ;};if _bbcd =_debg .checkInput ();_bbcd !=nil {return _bbcd ;};_ba .Log .Trace ("\u0025\u0073",_debg );
return nil ;};func (_ce *GenericRegion )decodeSLTP ()(int ,error ){switch _ce .GBTemplate {case 0:_ce ._cfbb .SetIndex (0x9B25);case 1:_ce ._cfbb .SetIndex (0x795);case 2:_ce ._cfbb .SetIndex (0xE5);case 3:_ce ._cfbb .SetIndex (0x195);};return _ce ._aad .DecodeBit (_ce ._cfbb );
};type Type int ;func (_egfg *SymbolDictionary )encodeFlags (_bddg _dc .BinaryWriter )(_dfbe int ,_bcbcf error ){const _cbef ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _bcbcf =_bddg .SkipBits (3);_bcbcf !=nil {return 0,_fcd .Wrap (_bcbcf ,_cbef ,"\u0065\u006d\u0070\u0074\u0079\u0020\u0062\u0069\u0074\u0073");
};var _aabd int ;if _egfg .SdrTemplate > 0{_aabd =1;};if _bcbcf =_bddg .WriteBit (_aabd );_bcbcf !=nil {return _dfbe ,_fcd .Wrap (_bcbcf ,_cbef ,"s\u0064\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_aabd =0;if _egfg .SdTemplate > 1{_aabd =1;
};if _bcbcf =_bddg .WriteBit (_aabd );_bcbcf !=nil {return _dfbe ,_fcd .Wrap (_bcbcf ,_cbef ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_aabd =0;if _egfg .SdTemplate ==1||_egfg .SdTemplate ==3{_aabd =1;};if _bcbcf =_bddg .WriteBit (_aabd );
_bcbcf !=nil {return _dfbe ,_fcd .Wrap (_bcbcf ,_cbef ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_aabd =0;if _egfg ._egad {_aabd =1;};if _bcbcf =_bddg .WriteBit (_aabd );_bcbcf !=nil {return _dfbe ,_fcd .Wrap (_bcbcf ,_cbef ,"\u0063\u006f\u0064in\u0067\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0065\u0064");
};_aabd =0;if _egfg ._dccf {_aabd =1;};if _bcbcf =_bddg .WriteBit (_aabd );_bcbcf !=nil {return _dfbe ,_fcd .Wrap (_bcbcf ,_cbef ,"\u0063\u006f\u0064\u0069ng\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0075\u0073\u0065\u0064");};_aabd =0;if _egfg .SdHuffAggInstanceSelection {_aabd =1;
};if _bcbcf =_bddg .WriteBit (_aabd );_bcbcf !=nil {return _dfbe ,_fcd .Wrap (_bcbcf ,_cbef ,"\u0073\u0064\u0048\u0075\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074");};_aabd =int (_egfg .SdHuffBMSizeSelection );if _bcbcf =_bddg .WriteBit (_aabd );
_bcbcf !=nil {return _dfbe ,_fcd .Wrap (_bcbcf ,_cbef ,"\u0073\u0064\u0048u\u0066\u0066\u0042\u006d\u0053\u0069\u007a\u0065");};_aabd =0;if _egfg .SdHuffDecodeWidthSelection > 1{_aabd =1;};if _bcbcf =_bddg .WriteBit (_aabd );_bcbcf !=nil {return _dfbe ,_fcd .Wrap (_bcbcf ,_cbef ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");
};_aabd =0;switch _egfg .SdHuffDecodeWidthSelection {case 1,3:_aabd =1;};if _bcbcf =_bddg .WriteBit (_aabd );_bcbcf !=nil {return _dfbe ,_fcd .Wrap (_bcbcf ,_cbef ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_aabd =0;if _egfg .SdHuffDecodeHeightSelection > 1{_aabd =1;
};if _bcbcf =_bddg .WriteBit (_aabd );_bcbcf !=nil {return _dfbe ,_fcd .Wrap (_bcbcf ,_cbef ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_aabd =0;switch _egfg .SdHuffDecodeHeightSelection {case 1,3:_aabd =1;};if _bcbcf =_bddg .WriteBit (_aabd );
_bcbcf !=nil {return _dfbe ,_fcd .Wrap (_bcbcf ,_cbef ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_aabd =0;if _egfg .UseRefinementAggregation {_aabd =1;};if _bcbcf =_bddg .WriteBit (_aabd );_bcbcf !=nil {return _dfbe ,_fcd .Wrap (_bcbcf ,_cbef ,"\u0073\u0064\u0052\u0065\u0066\u0041\u0067\u0067");
};_aabd =0;if _egfg .IsHuffmanEncoded {_aabd =1;};if _bcbcf =_bddg .WriteBit (_aabd );_bcbcf !=nil {return _dfbe ,_fcd .Wrap (_bcbcf ,_cbef ,"\u0073\u0064\u0048\u0075\u0066\u0066");};return 2,nil ;};func (_dfa *GenericRegion )overrideAtTemplate2 (_cbb ,_fac ,_ebea ,_aage ,_cbed int )int {_cbb &=0x3FB;
if _dfa .GBAtY [0]==0&&_dfa .GBAtX [0]>=-int8 (_cbed ){_cbb |=(_aage >>uint (7-(int8 (_cbed )+_dfa .GBAtX [0]))&0x1)<<2;}else {_cbb |=int (_dfa .getPixel (_fac +int (_dfa .GBAtX [0]),_ebea +int (_dfa .GBAtY [0])))<<2;};return _cbb ;};func (_egcec *SymbolDictionary )encodeNumSyms (_cabf _dc .BinaryWriter )(_bbg int ,_edeb error ){const _fgab ="\u0065\u006e\u0063\u006f\u0064\u0065\u004e\u0075\u006d\u0053\u0079\u006d\u0073";
_gbcb :=make ([]byte ,4);_gf .BigEndian .PutUint32 (_gbcb ,_egcec .NumberOfExportedSymbols );if _bbg ,_edeb =_cabf .Write (_gbcb );_edeb !=nil {return _bbg ,_fcd .Wrap (_edeb ,_fgab ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};_gf .BigEndian .PutUint32 (_gbcb ,_egcec .NumberOfNewSymbols );_cada ,_edeb :=_cabf .Write (_gbcb );if _edeb !=nil {return _bbg ,_fcd .Wrap (_edeb ,_fgab ,"n\u0065\u0077\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};return _bbg +_cada ,nil ;};func (_ebfa *SymbolDictionary )GetDictionary ()([]*_e .Bitmap ,error ){_ba .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c-\u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){_ba .Log .Trace ("\u005b\u0053\u0059M\u0042\u004f\u004c\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
_ba .Log .Trace ("\u005b\u0053Y\u004d\u0042\u004f\u004c\u002dD\u0049\u0043\u0054\u0049\u004fN\u0041\u0052\u0059\u005d\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020\u000a\u0045\u0078\u003a\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u000a\u006e\u0065\u0077\u003a\u0027\u0025\u0073\u0027",_ebfa ._fceb ,_ebfa ._aebf );
}();if _ebfa ._fceb ==nil {var _cbab error ;if _ebfa .UseRefinementAggregation {_ebfa ._cbae =_ebfa .getSbSymCodeLen ();};if !_ebfa .IsHuffmanEncoded {if _cbab =_ebfa .setCodingStatistics ();_cbab !=nil {return nil ,_cbab ;};};_ebfa ._aebf =make ([]*_e .Bitmap ,_ebfa .NumberOfNewSymbols );
var _bdag []int ;if _ebfa .IsHuffmanEncoded &&!_ebfa .UseRefinementAggregation {_bdag =make ([]int ,_ebfa .NumberOfNewSymbols );};if _cbab =_ebfa .setSymbolsArray ();_cbab !=nil {return nil ,_cbab ;};var _baac ,_gaef int64 ;_ebfa ._bdega =0;for _ebfa ._bdega < _ebfa .NumberOfNewSymbols {_gaef ,_cbab =_ebfa .decodeHeightClassDeltaHeight ();
if _cbab !=nil {return nil ,_cbab ;};_baac +=_gaef ;var _bgcd ,_bee uint32 ;_fcbe :=int64 (_ebfa ._bdega );for {var _cbde int64 ;_cbde ,_cbab =_ebfa .decodeDifferenceWidth ();if _bc .Is (_cbab ,_gb .ErrOOB ){break ;};if _cbab !=nil {return nil ,_cbab ;
};if _ebfa ._bdega >=_ebfa .NumberOfNewSymbols {break ;};_bgcd +=uint32 (_cbde );_bee +=_bgcd ;if !_ebfa .IsHuffmanEncoded ||_ebfa .UseRefinementAggregation {if !_ebfa .UseRefinementAggregation {_cbab =_ebfa .decodeDirectlyThroughGenericRegion (_bgcd ,uint32 (_baac ));
if _cbab !=nil {return nil ,_cbab ;};}else {_cbab =_ebfa .decodeAggregate (_bgcd ,uint32 (_baac ));if _cbab !=nil {return nil ,_cbab ;};};}else if _ebfa .IsHuffmanEncoded &&!_ebfa .UseRefinementAggregation {_bdag [_ebfa ._bdega ]=int (_bgcd );};_ebfa ._bdega ++;
};if _ebfa .IsHuffmanEncoded &&!_ebfa .UseRefinementAggregation {var _adde int64 ;if _ebfa .SdHuffBMSizeSelection ==0{var _adgfa _fd .Tabler ;_adgfa ,_cbab =_fd .GetStandardTable (1);if _cbab !=nil {return nil ,_cbab ;};_adde ,_cbab =_adgfa .Decode (_ebfa ._decef );
if _cbab !=nil {return nil ,_cbab ;};}else {_adde ,_cbab =_ebfa .huffDecodeBmSize ();if _cbab !=nil {return nil ,_cbab ;};};_ebfa ._decef .Align ();var _bdfd *_e .Bitmap ;_bdfd ,_cbab =_ebfa .decodeHeightClassCollectiveBitmap (_adde ,uint32 (_baac ),_bee );
if _cbab !=nil {return nil ,_cbab ;};_cbab =_ebfa .decodeHeightClassBitmap (_bdfd ,_fcbe ,int (_baac ),_bdag );if _cbab !=nil {return nil ,_cbab ;};};};_fage ,_cbab :=_ebfa .getToExportFlags ();if _cbab !=nil {return nil ,_cbab ;};_ebfa .setExportedSymbols (_fage );
};return _ebfa ._fceb ,nil ;};var _ _fd .BasicTabler =&TableSegment {};func (_abab *PageInformationSegment )Size ()int {return 19};func _aegc (_agcbe _dc .StreamReader ,_ggea *Header )*TextRegion {_efeg :=&TextRegion {_bgbb :_agcbe ,Header :_ggea ,RegionInfo :NewRegionSegment (_agcbe )};
return _efeg ;};func (_fdf *HalftoneRegion )combineGrayscalePlanes (_efea []*_e .Bitmap ,_deeb int )error {_deg :=0;for _agdf :=0;_agdf < _efea [_deeb ].Height ;_agdf ++{for _eab :=0;_eab < _efea [_deeb ].Width ;_eab +=8{_eega ,_cdae :=_efea [_deeb +1].GetByte (_deg );
if _cdae !=nil {return _cdae ;};_gegg ,_cdae :=_efea [_deeb ].GetByte (_deg );if _cdae !=nil {return _cdae ;};_cdae =_efea [_deeb ].SetByte (_deg ,_e .CombineBytes (_gegg ,_eega ,_e .CmbOpXor ));if _cdae !=nil {return _cdae ;};_deg ++;};};return nil ;};
var (_ Regioner =&TextRegion {};_ Segmenter =&TextRegion {};);func (_ffag *Header )writeSegmentPageAssociation (_aaebg _dc .BinaryWriter )(_adee int ,_gfbdg error ){const _geaa ="w\u0072\u0069\u0074\u0065\u0053\u0065g\u006d\u0065\u006e\u0074\u0050\u0061\u0067\u0065\u0041s\u0073\u006f\u0063i\u0061t\u0069\u006f\u006e";
if _ffag .pageSize ()!=4{if _gfbdg =_aaebg .WriteByte (byte (_ffag .PageAssociation ));_gfbdg !=nil {return 0,_fcd .Wrap (_gfbdg ,_geaa ,"\u0070\u0061\u0067\u0065\u0053\u0069\u007a\u0065\u0020\u0021\u003d\u0020\u0034");};return 1,nil ;};_eaceg :=make ([]byte ,4);
_gf .BigEndian .PutUint32 (_eaceg ,uint32 (_ffag .PageAssociation ));if _adee ,_gfbdg =_aaebg .Write (_eaceg );_gfbdg !=nil {return 0,_fcd .Wrap (_gfbdg ,_geaa ,"\u0034 \u0062y\u0074\u0065\u0020\u0070\u0061g\u0065\u0020n\u0075\u006d\u0062\u0065\u0072");
};return _adee ,nil ;};func (_bfaf *GenericRegion )InitEncode (bm *_e .Bitmap ,xLoc ,yLoc ,template int ,duplicateLineRemoval bool )error {const _cggf ="\u0047e\u006e\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069\u006f\u006e.\u0049\u006e\u0069\u0074\u0045\u006e\u0063\u006f\u0064\u0065";
if bm ==nil {return _fcd .Error (_cggf ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if xLoc < 0||yLoc < 0{return _fcd .Error (_cggf ,"\u0078\u0020\u0061\u006e\u0064\u0020\u0079\u0020\u006c\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074h\u0061\u006e\u0020\u0030");
};_bfaf .Bitmap =bm ;_bfaf .GBTemplate =byte (template );switch _bfaf .GBTemplate {case 0:_bfaf .GBAtX =[]int8 {3,-3,2,-2};_bfaf .GBAtY =[]int8 {-1,-1,-2,-2};case 1:_bfaf .GBAtX =[]int8 {3};_bfaf .GBAtY =[]int8 {-1};case 2,3:_bfaf .GBAtX =[]int8 {2};_bfaf .GBAtY =[]int8 {-1};
default:return _fcd .Errorf (_cggf ,"\u0070\u0072o\u0076\u0069\u0064\u0065\u0064 \u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u007b\u0030\u002c\u0031\u002c\u0032\u002c\u0033\u007d",template );
};_bfaf .RegionSegment =&RegionSegment {BitmapHeight :uint32 (bm .Height ),BitmapWidth :uint32 (bm .Width ),XLocation :uint32 (xLoc ),YLocation :uint32 (yLoc )};_bfaf .IsTPGDon =duplicateLineRemoval ;return nil ;};func (_egdg *GenericRegion )writeGBAtPixels (_gcef _dc .BinaryWriter )(_cgbf int ,_dfd error ){const _dgfg ="\u0077r\u0069t\u0065\u0047\u0042\u0041\u0074\u0050\u0069\u0078\u0065\u006c\u0073";
if _egdg .UseMMR {return 0,nil ;};_cbf :=1;if _egdg .GBTemplate ==0{_cbf =4;}else if _egdg .UseExtTemplates {_cbf =12;};if len (_egdg .GBAtX )!=_cbf {return 0,_fcd .Errorf (_dgfg ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0058\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};if len (_egdg .GBAtY )!=_cbf {return 0,_fcd .Errorf (_dgfg ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0059\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};for _afab :=0;_afab < _cbf ;_afab ++{if _dfd =_gcef .WriteByte (byte (_egdg .GBAtX [_afab ]));_dfd !=nil {return _cgbf ,_fcd .Wrap (_dfd ,_dgfg ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0058");};_cgbf ++;if _dfd =_gcef .WriteByte (byte (_egdg .GBAtY [_afab ]));
_dfd !=nil {return _cgbf ,_fcd .Wrap (_dfd ,_dgfg ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0059");};_cgbf ++;};return _cgbf ,nil ;};func (_egac *PageInformationSegment )readRequiresAuxiliaryBuffer ()error {_afgbc ,_edgg :=_egac ._eaeb .ReadBit ();
if _edgg !=nil {return _edgg ;};if _afgbc ==1{_egac ._aead =true ;};return nil ;};func (_gcbe *Header )readSegmentDataLength (_ggcd _dc .StreamReader )(_bdd error ){_gcbe .SegmentDataLength ,_bdd =_ggcd .ReadBits (32);if _bdd !=nil {return _bdd ;};_gcbe .SegmentDataLength &=_d .MaxInt32 ;
return nil ;};func (_bade *HalftoneRegion )computeGrayScalePlanes (_cba []*_e .Bitmap ,_ebfe int )([][]int ,error ){_gecf :=make ([][]int ,_bade .HGridHeight );for _eag :=0;_eag < len (_gecf );_eag ++{_gecf [_eag ]=make ([]int ,_bade .HGridWidth );};for _dacga :=0;
_dacga < int (_bade .HGridHeight );_dacga ++{for _aagc :=0;_aagc < int (_bade .HGridWidth );_aagc +=8{var _eafc int ;if _cebf :=int (_bade .HGridWidth )-_aagc ;_cebf > 8{_eafc =8;}else {_eafc =_cebf ;};_befcg :=_cba [0].GetByteIndex (_aagc ,_dacga );for _ffe :=0;
_ffe < _eafc ;_ffe ++{_degc :=_ffe +_aagc ;_gecf [_dacga ][_degc ]=0;for _egaf :=0;_egaf < _ebfe ;_egaf ++{_ggfg ,_feec :=_cba [_egaf ].GetByte (_befcg );if _feec !=nil {return nil ,_feec ;};_aecab :=_ggfg >>uint (7-_degc &7);_agfc :=_aecab &1;_ddfda :=1<<uint (_egaf );
_caba :=int (_agfc )*_ddfda ;_gecf [_dacga ][_degc ]+=_caba ;};};};};return _gecf ,nil ;};type PatternDictionary struct{_gace _dc .StreamReader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;GBAtX []int8 ;GBAtY []int8 ;
IsMMREncoded bool ;HDTemplate byte ;HdpWidth byte ;HdpHeight byte ;Patterns []*_e .Bitmap ;GrayMax uint32 ;};type Header struct{SegmentNumber uint32 ;Type Type ;RetainFlag bool ;PageAssociation int ;PageAssociationFieldSize bool ;RTSegments []*Header ;
HeaderLength int64 ;SegmentDataLength uint64 ;SegmentDataStartOffset uint64 ;Reader _dc .StreamReader ;SegmentData Segmenter ;RTSNumbers []int ;RetainBits []uint8 ;};func (_gead *SymbolDictionary )retrieveImportSymbols ()error {for _ ,_fbebb :=range _gead .Header .RTSegments {if _fbebb .Type ==0{_cgga ,_dfaf :=_fbebb .GetSegmentData ();
if _dfaf !=nil {return _dfaf ;};_fbf ,_fbcbe :=_cgga .(*SymbolDictionary );if !_fbcbe {return _gfe .Errorf ("\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0044\u0061\u0074a\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u003a\u0020%\u0054",_cgga );
};_fcfe ,_dfaf :=_fbf .GetDictionary ();if _dfaf !=nil {return _gfe .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064 \u0073\u0065\u0067m\u0065\u006e\u0074 \u0077\u0069t\u0068\u0020\u0069\u006e\u0064\u0065x\u003a %\u0064\u0020\u0067\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0073",_fbebb .SegmentNumber ,_dfaf .Error ());
};_gead ._gfbda =append (_gead ._gfbda ,_fcfe ...);_gead ._degcg +=_fbf .NumberOfExportedSymbols ;};};return nil ;};func (_gdbdg *TextRegion )decodeRdx ()(int64 ,error ){const _faefg ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064x";if _gdbdg .IsHuffmanEncoded {if _gdbdg .SbHuffRDX ==3{if _gdbdg ._ecda ==nil {var (_ceff int ;
_baca error ;);if _gdbdg .SbHuffFS ==3{_ceff ++;};if _gdbdg .SbHuffDS ==3{_ceff ++;};if _gdbdg .SbHuffDT ==3{_ceff ++;};if _gdbdg .SbHuffRDWidth ==3{_ceff ++;};if _gdbdg .SbHuffRDHeight ==3{_ceff ++;};_gdbdg ._ecda ,_baca =_gdbdg .getUserTable (_ceff );
if _baca !=nil {return 0,_fcd .Wrap (_baca ,_faefg ,"");};};return _gdbdg ._ecda .Decode (_gdbdg ._bgbb );};_dcgb ,_cgee :=_fd .GetStandardTable (14+int (_gdbdg .SbHuffRDX ));if _cgee !=nil {return 0,_fcd .Wrap (_cgee ,_faefg ,"");};return _dcgb .Decode (_gdbdg ._bgbb );
};_eedf ,_dbga :=_gdbdg ._ecbcd .DecodeInt (_gdbdg ._feac );if _dbga !=nil {return 0,_fcd .Wrap (_dbga ,_faefg ,"");};return int64 (_eedf ),nil ;};func (_ecb *GenericRefinementRegion )getGrReference ()(*_e .Bitmap ,error ){segments :=_ecb ._fcf .RTSegments ;
if len (segments )==0{return nil ,_bb .New ("\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0065\u0078is\u0074\u0073");};_acd ,_eg :=segments [0].GetSegmentData ();
if _eg !=nil {return nil ,_eg ;};_ab ,_df :=_acd .(Regioner );if !_df {return nil ,_gfe .Errorf ("\u0072\u0065\u0066\u0065\u0072r\u0065\u0064\u0020\u0074\u006f\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_acd );
};return _ab .GetRegionBitmap ();};func (_gceec *TableSegment )HtPS ()int32 {return _gceec ._fegcf };func (_fef *GenericRefinementRegion )overrideAtTemplate0 (_bga ,_gda ,_cgd ,_cabb ,_fff int )int {if _fef ._gce [0]{_bga &=0xfff7;if _fef .GrAtY [0]==0&&int (_fef .GrAtX [0])>=-_fff {_bga |=(_cabb >>uint (7-(_fff +int (_fef .GrAtX [0])))&0x1)<<3;
}else {_bga |=_fef .getPixel (_fef .RegionBitmap ,_gda +int (_fef .GrAtX [0]),_cgd +int (_fef .GrAtY [0]))<<3;};};if _fef ._gce [1]{_bga &=0xefff;if _fef .GrAtY [1]==0&&int (_fef .GrAtX [1])>=-_fff {_bga |=(_cabb >>uint (7-(_fff +int (_fef .GrAtX [1])))&0x1)<<12;
}else {_bga |=_fef .getPixel (_fef .ReferenceBitmap ,_gda +int (_fef .GrAtX [1]),_cgd +int (_fef .GrAtY [1]));};};return _bga ;};func (_dcfac *PageInformationSegment )readDefaultPixelValue ()error {_gcga ,_fafeb :=_dcfac ._eaeb .ReadBit ();if _fafeb !=nil {return _fafeb ;
};_dcfac .DefaultPixelValue =uint8 (_gcga &0xf);return nil ;};func (_dbac *PatternDictionary )Init (h *Header ,r _dc .StreamReader )error {_dbac ._gace =r ;return _dbac .parseHeader ();};func (_bacg *Header )CleanSegmentData (){if _bacg .SegmentData !=nil {_bacg .SegmentData =nil ;
};};func (_bgfc *TextRegion )getSymbols ()error {if _bgfc .Header .RTSegments !=nil {return _bgfc .initSymbols ();};return nil ;};func (_dagb *Header )subInputReader ()(_dc .StreamReader ,error ){return _dc .NewSubstreamReader (_dagb .Reader ,_dagb .SegmentDataStartOffset ,_dagb .SegmentDataLength );
};func (_bbddf *GenericRegion )parseHeader ()(_eaf error ){_ba .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052I\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0050\u0061\u0072s\u0069\u006e\u0067\u0048\u0065\u0061\u0064e\u0072\u002e\u002e\u002e");
defer func (){if _eaf !=nil {_ba .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e]\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065r\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0077\u0069th\u0020\u0065\u0072\u0072\u006f\u0072\u002e\u0020\u0025\u0076",_eaf );
}else {_ba .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049C\u002d\u0052\u0045G\u0049\u004f\u004e]\u0020\u0050a\u0072\u0073\u0069\u006e\u0067\u0048e\u0061de\u0072\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0053\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079\u002e\u002e\u002e");
};}();var (_gee int ;_ecf uint64 ;);if _eaf =_bbddf .RegionSegment .parseHeader ();_eaf !=nil {return _eaf ;};if _ ,_eaf =_bbddf ._fbeb .ReadBits (3);_eaf !=nil {return _eaf ;};_gee ,_eaf =_bbddf ._fbeb .ReadBit ();if _eaf !=nil {return _eaf ;};if _gee ==1{_bbddf .UseExtTemplates =true ;
};_gee ,_eaf =_bbddf ._fbeb .ReadBit ();if _eaf !=nil {return _eaf ;};if _gee ==1{_bbddf .IsTPGDon =true ;};_ecf ,_eaf =_bbddf ._fbeb .ReadBits (2);if _eaf !=nil {return _eaf ;};_bbddf .GBTemplate =byte (_ecf &0xf);_gee ,_eaf =_bbddf ._fbeb .ReadBit ();
if _eaf !=nil {return _eaf ;};if _gee ==1{_bbddf .IsMMREncoded =true ;};if !_bbddf .IsMMREncoded {_bea :=1;if _bbddf .GBTemplate ==0{_bea =4;if _bbddf .UseExtTemplates {_bea =12;};};if _eaf =_bbddf .readGBAtPixels (_bea );_eaf !=nil {return _eaf ;};};if _eaf =_bbddf .computeSegmentDataStructure ();
_eaf !=nil {return _eaf ;};_ba .Log .Trace ("\u0025\u0073",_bbddf );return nil ;};func (_ccga *PatternDictionary )extractPatterns (_gabf *_e .Bitmap )error {var _bfc int ;_fcgd :=make ([]*_e .Bitmap ,_ccga .GrayMax +1);for _bfc <=int (_ccga .GrayMax ){_fafa :=int (_ccga .HdpWidth )*_bfc ;
_fbca :=_gc .Rect (_fafa ,0,_fafa +int (_ccga .HdpWidth ),int (_ccga .HdpHeight ));_ggaa ,_gced :=_e .Extract (_fbca ,_gabf );if _gced !=nil {return _gced ;};_fcgd [_bfc ]=_ggaa ;_bfc ++;};_ccga .Patterns =_fcgd ;return nil ;};type template1 struct{};func (_faef *SymbolDictionary )Encode (w _dc .BinaryWriter )(_gefc int ,_fab error ){const _gagdb ="\u0053\u0079\u006dbo\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0045\u006e\u0063\u006f\u0064\u0065";
if _faef ==nil {return 0,_fcd .Error (_gagdb ,"\u0073\u0079m\u0062\u006f\u006c\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066in\u0065\u0064");};if _gefc ,_fab =_faef .encodeFlags (w );_fab !=nil {return _gefc ,_fcd .Wrap (_fab ,_gagdb ,"");
};_ffab ,_fab :=_faef .encodeATFlags (w );if _fab !=nil {return _gefc ,_fcd .Wrap (_fab ,_gagdb ,"");};_gefc +=_ffab ;if _ffab ,_fab =_faef .encodeRefinementATFlags (w );_fab !=nil {return _gefc ,_fcd .Wrap (_fab ,_gagdb ,"");};_gefc +=_ffab ;if _ffab ,_fab =_faef .encodeNumSyms (w );
_fab !=nil {return _gefc ,_fcd .Wrap (_fab ,_gagdb ,"");};_gefc +=_ffab ;if _ffab ,_fab =_faef .encodeSymbols (w );_fab !=nil {return _gefc ,_fcd .Wrap (_fab ,_gagdb ,"");};_gefc +=_ffab ;return _gefc ,nil ;};func (_fgbd *SymbolDictionary )decodeNewSymbols (_gfeff ,_bacd uint32 ,_dbd *_e .Bitmap ,_eacb ,_cddb int32 )error {if _fgbd ._fecg ==nil {_fgbd ._fecg =_eec (_fgbd ._decef ,nil );
if _fgbd ._abad ==nil {var _gcde error ;_fgbd ._abad ,_gcde =_af .New (_fgbd ._decef );if _gcde !=nil {return _gcde ;};};if _fgbd ._bcad ==nil {_fgbd ._bcad =_af .NewStats (65536,1);};};_fgbd ._fecg .setParameters (_fgbd ._bcad ,_fgbd ._abad ,_fgbd .SdrTemplate ,_gfeff ,_bacd ,_dbd ,_eacb ,_cddb ,false ,_fgbd .SdrATX ,_fgbd .SdrATY );
return _fgbd .addSymbol (_fgbd ._fecg );};func (_gbaf Type )String ()string {switch _gbaf {case TSymbolDictionary :return "\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079";case TIntermediateTextRegion :return "\u0049n\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020T\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TImmediateTextRegion :return "I\u006d\u006d\u0065\u0064ia\u0074e\u0020\u0054\u0065\u0078\u0074 \u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessTextRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020L\u006f\u0073\u0073\u006c\u0065\u0073\u0073 \u0054\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TPatternDictionary :return "\u0050a\u0074t\u0065\u0072\u006e\u0020\u0044i\u0063\u0074i\u006f\u006e\u0061\u0072\u0079";case TIntermediateHalftoneRegion :return "\u0049\u006e\u0074\u0065r\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0048\u0061l\u0066t\u006f\u006e\u0065\u0020\u0052\u0065\u0067i\u006f\u006e";
case TImmediateHalftoneRegion :return "\u0049m\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u0048\u0061l\u0066t\u006fn\u0065\u0020\u0052\u0065\u0067\u0069\u006fn";case TImmediateLosslessHalftoneRegion :return "\u0049\u006d\u006ded\u0069\u0061\u0074\u0065\u0020\u004c\u006f\u0073\u0073l\u0065s\u0073 \u0048a\u006c\u0066\u0074\u006f\u006e\u0065\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TIntermediateGenericRegion :return "I\u006e\u0074\u0065\u0072\u006d\u0065d\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020R\u0065g\u0069\u006f\u006e";case TImmediateGenericRegion :return "\u0049m\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006ee\u0072\u0069\u0063\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TImmediateLosslessGenericRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u004c\u006f\u0073\u0073\u006c\u0065\u0073\u0073\u0020\u0047e\u006e\u0065\u0072\u0069\u0063\u0020\u0052e\u0067\u0069\u006f\u006e";case TIntermediateGenericRefinementRegion :return "\u0049\u006e\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0020\u0052\u0065\u0066i\u006e\u0065\u006d\u0065\u006et\u0020\u0052e\u0067\u0069\u006f\u006e";
case TImmediateGenericRefinementRegion :return "I\u006d\u006d\u0065\u0064\u0069\u0061t\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020\u0052\u0065\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020\u0052\u0065\u0067\u0069o\u006e";case TImmediateLosslessGenericRefinementRegion :return "\u0049m\u006d\u0065d\u0069\u0061\u0074\u0065 \u004c\u006f\u0073s\u006c\u0065\u0073\u0073\u0020\u0047\u0065\u006e\u0065ri\u0063\u0020\u0052e\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020R\u0065\u0067i\u006f\u006e";
case TPageInformation :return "\u0050\u0061g\u0065\u0020\u0049n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e";case TEndOfPage :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0050\u0061\u0067\u0065";case TEndOfStrip :return "\u0045\u006e\u0064 \u004f\u0066\u0020\u0053\u0074\u0072\u0069\u0070";
case TEndOfFile :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0046\u0069\u006c\u0065";case TProfiles :return "\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0073";case TTables :return "\u0054\u0061\u0062\u006c\u0065\u0073";case TExtension :return "\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn";
case TBitmap :return "\u0042\u0069\u0074\u006d\u0061\u0070";};return "I\u006ev\u0061\u006c\u0069\u0064\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0020Ki\u006e\u0064";};func (_gacgd *TextRegion )decodeSymbolInstances ()error {_edbg ,_bdfec :=_gacgd .decodeStripT ();
if _bdfec !=nil {return _bdfec ;};var (_efabg int64 ;_eedeb uint32 ;);for _eedeb < _gacgd .NumberOfSymbolInstances {_fdce ,_eggc :=_gacgd .decodeDT ();if _eggc !=nil {return _eggc ;};_edbg +=_fdce ;var _bedd int64 ;_agde :=true ;_gacgd ._bgcde =0;for {if _agde {_bedd ,_eggc =_gacgd .decodeDfs ();
if _eggc !=nil {return _eggc ;};_efabg +=_bedd ;_gacgd ._bgcde =_efabg ;_agde =false ;}else {_baeb ,_ggad :=_gacgd .decodeIds ();if _bc .Is (_ggad ,_gb .ErrOOB ){break ;};if _ggad !=nil {return _ggad ;};if _eedeb >=_gacgd .NumberOfSymbolInstances {break ;
};_gacgd ._bgcde +=_baeb +int64 (_gacgd .SbDsOffset );};_daee ,_dbde :=_gacgd .decodeCurrentT ();if _dbde !=nil {return _dbde ;};_ggg :=_edbg +_daee ;_bdbg ,_dbde :=_gacgd .decodeID ();if _dbde !=nil {return _dbde ;};_aged ,_dbde :=_gacgd .decodeRI ();
if _dbde !=nil {return _dbde ;};_eecf ,_dbde :=_gacgd .decodeIb (_aged ,_bdbg );if _dbde !=nil {return _dbde ;};if _dbde =_gacgd .blit (_eecf ,_ggg );_dbde !=nil {return _dbde ;};_eedeb ++;};};return nil ;};func (_gfa *GenericRefinementRegion )Init (header *Header ,r _dc .StreamReader )error {_gfa ._fcf =header ;
_gfa ._bf =r ;_gfa .RegionInfo =NewRegionSegment (r );return _gfa .parseHeader ();};func (_dcbb *SymbolDictionary )decodeHeightClassCollectiveBitmap (_dgda int64 ,_cgbg ,_aagf uint32 )(*_e .Bitmap ,error ){if _dgda ==0{_dfdc :=_e .New (int (_aagf ),int (_cgbg ));
var (_afgcg byte ;_gfbg error ;);for _dabda :=0;_dabda < len (_dfdc .Data );_dabda ++{_afgcg ,_gfbg =_dcbb ._decef .ReadByte ();if _gfbg !=nil {return nil ,_gfbg ;};if _gfbg =_dfdc .SetByte (_dabda ,_afgcg );_gfbg !=nil {return nil ,_gfbg ;};};return _dfdc ,nil ;
};if _dcbb ._cbcge ==nil {_dcbb ._cbcge =NewGenericRegion (_dcbb ._decef );};_dcbb ._cbcge .setParameters (true ,_dcbb ._decef .StreamPosition (),_dgda ,_cgbg ,_aagf );_geeb ,_gdac :=_dcbb ._cbcge .GetRegionBitmap ();if _gdac !=nil {return nil ,_gdac ;
};return _geeb ,nil ;};func (_dfb *GenericRegion )updateOverrideFlags ()error {const _gbe ="\u0075\u0070\u0064\u0061te\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _dfb .GBAtX ==nil ||_dfb .GBAtY ==nil {return nil ;
};if len (_dfb .GBAtX )!=len (_dfb .GBAtY ){return _fcd .Errorf (_gbe ,"i\u006eco\u0073i\u0073t\u0065\u006e\u0074\u0020\u0041T\u0020\u0070\u0069x\u0065\u006c\u002e\u0020\u0041m\u006f\u0075\u006et\u0020\u006f\u0066\u0020\u0027\u0078\u0027\u0020\u0070\u0069\u0078e\u006c\u0073\u003a %d\u002c\u0020\u0041\u006d\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0027\u0079\u0027\u0020\u0070\u0069\u0078e\u006cs\u003a\u0020\u0025\u0064",len (_dfb .GBAtX ),len (_dfb .GBAtY ));
};_dfb .GBAtOverride =make ([]bool ,len (_dfb .GBAtX ));switch _dfb .GBTemplate {case 0:if !_dfb .UseExtTemplates {if _dfb .GBAtX [0]!=3||_dfb .GBAtY [0]!=-1{_dfb .setOverrideFlag (0);};if _dfb .GBAtX [1]!=-3||_dfb .GBAtY [1]!=-1{_dfb .setOverrideFlag (1);
};if _dfb .GBAtX [2]!=2||_dfb .GBAtY [2]!=-2{_dfb .setOverrideFlag (2);};if _dfb .GBAtX [3]!=-2||_dfb .GBAtY [3]!=-2{_dfb .setOverrideFlag (3);};}else {if _dfb .GBAtX [0]!=-2||_dfb .GBAtY [0]!=0{_dfb .setOverrideFlag (0);};if _dfb .GBAtX [1]!=0||_dfb .GBAtY [1]!=-2{_dfb .setOverrideFlag (1);
};if _dfb .GBAtX [2]!=-2||_dfb .GBAtY [2]!=-1{_dfb .setOverrideFlag (2);};if _dfb .GBAtX [3]!=-1||_dfb .GBAtY [3]!=-2{_dfb .setOverrideFlag (3);};if _dfb .GBAtX [4]!=1||_dfb .GBAtY [4]!=-2{_dfb .setOverrideFlag (4);};if _dfb .GBAtX [5]!=2||_dfb .GBAtY [5]!=-1{_dfb .setOverrideFlag (5);
};if _dfb .GBAtX [6]!=-3||_dfb .GBAtY [6]!=0{_dfb .setOverrideFlag (6);};if _dfb .GBAtX [7]!=-4||_dfb .GBAtY [7]!=0{_dfb .setOverrideFlag (7);};if _dfb .GBAtX [8]!=2||_dfb .GBAtY [8]!=-2{_dfb .setOverrideFlag (8);};if _dfb .GBAtX [9]!=3||_dfb .GBAtY [9]!=-1{_dfb .setOverrideFlag (9);
};if _dfb .GBAtX [10]!=-2||_dfb .GBAtY [10]!=-2{_dfb .setOverrideFlag (10);};if _dfb .GBAtX [11]!=-3||_dfb .GBAtY [11]!=-1{_dfb .setOverrideFlag (11);};};case 1:if _dfb .GBAtX [0]!=3||_dfb .GBAtY [0]!=-1{_dfb .setOverrideFlag (0);};case 2:if _dfb .GBAtX [0]!=2||_dfb .GBAtY [0]!=-1{_dfb .setOverrideFlag (0);
};case 3:if _dfb .GBAtX [0]!=2||_dfb .GBAtY [0]!=-1{_dfb .setOverrideFlag (0);};};return nil ;};func (_gfde *GenericRegion )readGBAtPixels (_gcee int )error {const _gafc ="\u0072\u0065\u0061\u0064\u0047\u0042\u0041\u0074\u0050i\u0078\u0065\u006c\u0073";
_gfde .GBAtX =make ([]int8 ,_gcee );_gfde .GBAtY =make ([]int8 ,_gcee );for _bfab :=0;_bfab < _gcee ;_bfab ++{_dcadd ,_fbcb :=_gfde ._fbeb .ReadByte ();if _fbcb !=nil {return _fcd .Wrapf (_fbcb ,_gafc ,"\u0058\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_bfab );
};_gfde .GBAtX [_bfab ]=int8 (_dcadd );_dcadd ,_fbcb =_gfde ._fbeb .ReadByte ();if _fbcb !=nil {return _fcd .Wrapf (_fbcb ,_gafc ,"\u0059\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_bfab );};_gfde .GBAtY [_bfab ]=int8 (_dcadd );};return nil ;
};type Pager interface{GetSegment (int )(*Header ,error );GetBitmap ()(*_e .Bitmap ,error );};func (_cagf *SymbolDictionary )readNumberOfExportedSymbols ()error {_fdbb ,_fgf :=_cagf ._decef .ReadBits (32);if _fgf !=nil {return _fgf ;};_cagf .NumberOfExportedSymbols =uint32 (_fdbb &_d .MaxUint32 );
return nil ;};func (_ggdb *PageInformationSegment )readIsLossless ()error {_cgec ,_eecd :=_ggdb ._eaeb .ReadBit ();if _eecd !=nil {return _eecd ;};if _cgec ==1{_ggdb .IsLossless =true ;};return nil ;};