//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package segments ;import (_ef "encoding/binary";_ege "errors";_fg "fmt";_d "github.com/unidoc/unipdf/v3/common";_a "github.com/unidoc/unipdf/v3/internal/bitwise";_fgb "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_b "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";
_ec "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/arithmetic";_af "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/huffman";_fgbe "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/mmr";_gf "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/arithmetic";
_gdga "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_ed "github.com/unidoc/unipdf/v3/internal/jbig2/internal";_fe "golang.org/x/xerrors";_e "image";_eg "io";_f "math";_gdg "strings";_gd "time";);func (_gfd *GenericRefinementRegion )decodeSLTP ()(int ,error ){_gfd .Template .setIndex (_gfd ._fa );
return _gfd ._fc .DecodeBit (_gfd ._fa );};func (_bcag *SymbolDictionary )encodeSymbols (_addb _a .BinaryWriter )(_cfff int ,_bcee error ){const _edcf ="\u0065\u006e\u0063o\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c";_bfdab :=_gf .New ();_bfdab .Init ();
_afbf ,_bcee :=_bcag ._dfac .SelectByIndexes (_bcag ._gbff );if _bcee !=nil {return 0,_gdga .Wrap (_bcee ,_edcf ,"\u0069n\u0069\u0074\u0069\u0061\u006c");};_cgabb :=map[*_b .Bitmap ]int {};for _cedaa ,_edff :=range _afbf .Values {_cgabb [_edff ]=_cedaa ;
};_afbf .SortByHeight ();var _beff ,_gcgc int ;_dbbd ,_bcee :=_afbf .GroupByHeight ();if _bcee !=nil {return 0,_gdga .Wrap (_bcee ,_edcf ,"");};for _ ,_cdb :=range _dbbd .Values {_gceg :=_cdb .Values [0].Height ;_cdca :=_gceg -_beff ;if _bcee =_bfdab .EncodeInteger (_gf .IADH ,_cdca );
_bcee !=nil {return 0,_gdga .Wrapf (_bcee ,_edcf ,"\u0049\u0041\u0044\u0048\u0020\u0066\u006f\u0072\u0020\u0064\u0068\u003a \u0027\u0025\u0064\u0027",_cdca );};_beff =_gceg ;_ccaa ,_ddgf :=_cdb .GroupByWidth ();if _ddgf !=nil {return 0,_gdga .Wrapf (_ddgf ,_edcf ,"\u0068\u0065\u0069g\u0068\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_gceg );
};var _dac int ;for _ ,_gbeb :=range _ccaa .Values {for _ ,_aecf :=range _gbeb .Values {_acff :=_aecf .Width ;_caad :=_acff -_dac ;if _ddgf =_bfdab .EncodeInteger (_gf .IADW ,_caad );_ddgf !=nil {return 0,_gdga .Wrapf (_ddgf ,_edcf ,"\u0049\u0041\u0044\u0057\u0020\u0066\u006f\u0072\u0020\u0064\u0077\u003a \u0027\u0025\u0064\u0027",_caad );
};_dac +=_caad ;if _ddgf =_bfdab .EncodeBitmap (_aecf ,false );_ddgf !=nil {return 0,_gdga .Wrapf (_ddgf ,_edcf ,"H\u0065i\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u0020W\u0069\u0064\u0074\u0068: \u0025\u0064",_gceg ,_acff );};_dadc :=_cgabb [_aecf ];
_bcag ._efgg [_dadc ]=_gcgc ;_gcgc ++;};};if _ddgf =_bfdab .EncodeOOB (_gf .IADW );_ddgf !=nil {return 0,_gdga .Wrap (_ddgf ,_edcf ,"\u0049\u0041\u0044\u0057");};};if _bcee =_bfdab .EncodeInteger (_gf .IAEX ,0);_bcee !=nil {return 0,_gdga .Wrap (_bcee ,_edcf ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};if _bcee =_bfdab .EncodeInteger (_gf .IAEX ,len (_bcag ._gbff ));_bcee !=nil {return 0,_gdga .Wrap (_bcee ,_edcf ,"\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0073\u0079m\u0062\u006f\u006c\u0073");};_bfdab .Final ();_aaec ,_bcee :=_bfdab .WriteTo (_addb );
if _bcee !=nil {return 0,_gdga .Wrap (_bcee ,_edcf ,"\u0077\u0072i\u0074\u0069\u006e\u0067 \u0065\u006ec\u006f\u0064\u0065\u0072\u0020\u0063\u006f\u006et\u0065\u0078\u0074\u0020\u0074\u006f\u0020\u0027\u0077\u0027\u0020\u0077r\u0069\u0074\u0065\u0072");
};return int (_aaec ),nil ;};func (_eadb *Header )writeFlags (_cfafc _a .BinaryWriter )(_cfg error ){const _cffd ="\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065F\u006c\u0061\u0067\u0073";_eeeg :=byte (_eadb .Type );if _cfg =_cfafc .WriteByte (_eeeg );
_cfg !=nil {return _gdga .Wrap (_cfg ,_cffd ,"\u0077\u0072\u0069ti\u006e\u0067\u0020\u0073\u0065\u0067\u006d\u0065\u006et\u0020t\u0079p\u0065 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064");};if !_eadb .RetainFlag &&!_eadb .PageAssociationFieldSize {return nil ;
};if _cfg =_cfafc .SkipBits (-8);_cfg !=nil {return _gdga .Wrap (_cfg ,_cffd ,"\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0062\u0061\u0063\u006b\u0020\u0074\u0068\u0065\u0020\u0062\u0069\u0074\u0073\u0020\u0066\u0061il\u0065\u0064");};var _decad int ;
if _eadb .RetainFlag {_decad =1;};if _cfg =_cfafc .WriteBit (_decad );_cfg !=nil {return _gdga .Wrap (_cfg ,_cffd ,"\u0072\u0065\u0074\u0061in\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067\u0073");};_decad =0;if _eadb .PageAssociationFieldSize {_decad =1;
};if _cfg =_cfafc .WriteBit (_decad );_cfg !=nil {return _gdga .Wrap (_cfg ,_cffd ,"p\u0061\u0067\u0065\u0020as\u0073o\u0063\u0069\u0061\u0074\u0069o\u006e\u0020\u0066\u006c\u0061\u0067");};_cfafc .FinishByte ();return nil ;};func (_cab *SymbolDictionary )encodeRefinementATFlags (_abed _a .BinaryWriter )(_feda int ,_adaeg error ){const _ccab ="\u0065\u006e\u0063od\u0065\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0041\u0054\u0046\u006c\u0061\u0067\u0073";
if !_cab .UseRefinementAggregation ||_cab .SdrTemplate !=0{return 0,nil ;};for _aag :=0;_aag < 2;_aag ++{if _adaeg =_abed .WriteByte (byte (_cab .SdrATX [_aag ]));_adaeg !=nil {return _feda ,_gdga .Wrapf (_adaeg ,_ccab ,"\u0053\u0064\u0072\u0041\u0054\u0058\u005b\u0025\u0064\u005d",_aag );
};_feda ++;if _adaeg =_abed .WriteByte (byte (_cab .SdrATY [_aag ]));_adaeg !=nil {return _feda ,_gdga .Wrapf (_adaeg ,_ccab ,"\u0053\u0064\u0072\u0041\u0054\u0059\u005b\u0025\u0064\u005d",_aag );};_feda ++;};return _feda ,nil ;};type Header struct{SegmentNumber uint32 ;
Type Type ;RetainFlag bool ;PageAssociation int ;PageAssociationFieldSize bool ;RTSegments []*Header ;HeaderLength int64 ;SegmentDataLength uint64 ;SegmentDataStartOffset uint64 ;Reader _a .StreamReader ;SegmentData Segmenter ;RTSNumbers []int ;RetainBits []uint8 ;
};func (_bbbbc *SymbolDictionary )decodeDirectlyThroughGenericRegion (_ecdf ,_fdg uint32 )error {if _bbbbc ._cdga ==nil {_bbbbc ._cdga =NewGenericRegion (_bbbbc ._cfde );};_bbbbc ._cdga .setParametersWithAt (false ,byte (_bbbbc .SdTemplate ),false ,false ,_bbbbc .SdATX ,_bbbbc .SdATY ,_ecdf ,_fdg ,_bbbbc ._ggfe ,_bbbbc ._dafg );
return _bbbbc .addSymbol (_bbbbc ._cdga );};type Documenter interface{GetPage (int )(Pager ,error );GetGlobalSegment (int )(*Header ,error );};func (_eda *PageInformationSegment )Encode (w _a .BinaryWriter )(_acad int ,_aaf error ){const _bfda ="\u0050\u0061g\u0065\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u002e\u0045\u006eco\u0064\u0065";
_dfgb :=make ([]byte ,4);_ef .BigEndian .PutUint32 (_dfgb ,uint32 (_eda .PageBMWidth ));_acad ,_aaf =w .Write (_dfgb );if _aaf !=nil {return _acad ,_gdga .Wrap (_aaf ,_bfda ,"\u0077\u0069\u0064t\u0068");};_ef .BigEndian .PutUint32 (_dfgb ,uint32 (_eda .PageBMHeight ));
var _efda int ;_efda ,_aaf =w .Write (_dfgb );if _aaf !=nil {return _efda +_acad ,_gdga .Wrap (_aaf ,_bfda ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_acad +=_efda ;_ef .BigEndian .PutUint32 (_dfgb ,uint32 (_eda .ResolutionX ));_efda ,_aaf =w .Write (_dfgb );
if _aaf !=nil {return _efda +_acad ,_gdga .Wrap (_aaf ,_bfda ,"\u0078\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_acad +=_efda ;_ef .BigEndian .PutUint32 (_dfgb ,uint32 (_eda .ResolutionY ));if _efda ,_aaf =w .Write (_dfgb );_aaf !=nil {return _efda +_acad ,_gdga .Wrap (_aaf ,_bfda ,"\u0079\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");
};_acad +=_efda ;if _aaf =_eda .encodeFlags (w );_aaf !=nil {return _acad ,_gdga .Wrap (_aaf ,_bfda ,"");};_acad ++;if _efda ,_aaf =_eda .encodeStripingInformation (w );_aaf !=nil {return _acad ,_gdga .Wrap (_aaf ,_bfda ,"");};_acad +=_efda ;return _acad ,nil ;
};func (_ad *GenericRefinementRegion )Init (header *Header ,r _a .StreamReader )error {_ad ._de =header ;_ad ._eb =r ;_ad .RegionInfo =NewRegionSegment (r );return _ad .parseHeader ();};func (_afbb *TextRegion )getUserTable (_fagd int )(_af .Tabler ,error ){const _bgcb ="\u0067\u0065\u0074U\u0073\u0065\u0072\u0054\u0061\u0062\u006c\u0065";
var _gfgeag int ;for _ ,_egfa :=range _afbb .Header .RTSegments {if _egfa .Type ==53{if _gfgeag ==_fagd {_aaag ,_eadba :=_egfa .GetSegmentData ();if _eadba !=nil {return nil ,_eadba ;};_aacga ,_ecaec :=_aaag .(*TableSegment );if !_ecaec {_d .Log .Debug (_fg .Sprintf ("\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079p\u0065\u00205\u0033\u0020\u002d\u0020\u0061\u006ed\u0020in\u0064\u0065\u0078\u003a\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_egfa .SegmentNumber ));
return nil ,_gdga .Error (_bgcb ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079\u0070e\u0020\u0035\u0033\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u002a\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};return _af .NewEncodedTable (_aacga );};_gfgeag ++;};};return nil ,nil ;};func (_cad *GenericRegion )decodeTemplate2 (_egfe ,_cbcb ,_aec int ,_eeg ,_egd int )(_aff error ){const _afba ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0032";
var (_cfcc ,_gggb int ;_fdf ,_afab int ;_eec byte ;_dca ,_gcgg int ;);if _egfe >=1{_eec ,_aff =_cad .Bitmap .GetByte (_egd );if _aff !=nil {return _gdga .Wrap (_aff ,_afba ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0031");
};_fdf =int (_eec );};if _egfe >=2{_eec ,_aff =_cad .Bitmap .GetByte (_egd -_cad .Bitmap .RowStride );if _aff !=nil {return _gdga .Wrap (_aff ,_afba ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0032");};_afab =int (_eec )<<4;
};_cfcc =(_fdf >>3&0x7c)|(_afab >>3&0x380);for _eccg :=0;_eccg < _aec ;_eccg =_dca {var (_bbe byte ;_dce int ;);_dca =_eccg +8;if _fcgc :=_cbcb -_eccg ;_fcgc > 8{_dce =8;}else {_dce =_fcgc ;};if _egfe > 0{_fdf <<=8;if _dca < _cbcb {_eec ,_aff =_cad .Bitmap .GetByte (_egd +1);
if _aff !=nil {return _gdga .Wrap (_aff ,_afba ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0030");};_fdf |=int (_eec );};};if _egfe > 1{_afab <<=8;if _dca < _cbcb {_eec ,_aff =_cad .Bitmap .GetByte (_egd -_cad .Bitmap .RowStride +1);
if _aff !=nil {return _gdga .Wrap (_aff ,_afba ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0031");};_afab |=int (_eec )<<4;};};for _agb :=0;_agb < _dce ;_agb ++{_gfeg :=uint (10-_agb );if _cad ._dgg {_gggb =_cad .overrideAtTemplate2 (_cfcc ,_eccg +_agb ,_egfe ,int (_bbe ),_agb );
_cad ._bfc .SetIndex (int32 (_gggb ));}else {_cad ._bfc .SetIndex (int32 (_cfcc ));};_gcgg ,_aff =_cad ._deec .DecodeBit (_cad ._bfc );if _aff !=nil {return _gdga .Wrap (_aff ,_afba ,"");};_bbe |=byte (_gcgg <<uint (7-_agb ));_cfcc =((_cfcc &0x1bd)<<1)|_gcgg |((_fdf >>_gfeg )&0x4)|((_afab >>_gfeg )&0x80);
};if _dgb :=_cad .Bitmap .SetByte (_eeg ,_bbe );_dgb !=nil {return _gdga .Wrap (_dgb ,_afba ,"");};_eeg ++;_egd ++;};return nil ;};func (_agdg *TextRegion )setCodingStatistics ()error {if _agdg ._cgcg ==nil {_agdg ._cgcg =_ec .NewStats (512,1);};if _agdg ._feece ==nil {_agdg ._feece =_ec .NewStats (512,1);
};if _agdg ._gdce ==nil {_agdg ._gdce =_ec .NewStats (512,1);};if _agdg ._ceed ==nil {_agdg ._ceed =_ec .NewStats (512,1);};if _agdg ._ggac ==nil {_agdg ._ggac =_ec .NewStats (512,1);};if _agdg ._cffc ==nil {_agdg ._cffc =_ec .NewStats (512,1);};if _agdg ._dddg ==nil {_agdg ._dddg =_ec .NewStats (512,1);
};if _agdg ._bgfg ==nil {_agdg ._bgfg =_ec .NewStats (1<<uint (_agdg ._adfb ),1);};if _agdg ._cdd ==nil {_agdg ._cdd =_ec .NewStats (512,1);};if _agdg ._cdecb ==nil {_agdg ._cdecb =_ec .NewStats (512,1);};if _agdg ._ggde ==nil {var _ccedf error ;_agdg ._ggde ,_ccedf =_ec .New (_agdg ._bfbb );
if _ccedf !=nil {return _ccedf ;};};return nil ;};func (_ba *GenericRefinementRegion )decodeTypicalPredictedLineTemplate0 (_adf ,_gcb ,_gccb ,_feae ,_fge ,_aea ,_be ,_bd ,_gaac int )error {var (_bfef ,_bfd ,_cf ,_dcc ,_bb ,_aeg int ;_ecc byte ;_egb error ;
);if _adf > 0{_ecc ,_egb =_ba .RegionBitmap .GetByte (_be -_gccb );if _egb !=nil {return _egb ;};_cf =int (_ecc );};if _bd > 0&&_bd <=_ba .ReferenceBitmap .Height {_ecc ,_egb =_ba .ReferenceBitmap .GetByte (_gaac -_feae +_aea );if _egb !=nil {return _egb ;
};_dcc =int (_ecc )<<4;};if _bd >=0&&_bd < _ba .ReferenceBitmap .Height {_ecc ,_egb =_ba .ReferenceBitmap .GetByte (_gaac +_aea );if _egb !=nil {return _egb ;};_bb =int (_ecc )<<1;};if _bd > -2&&_bd < _ba .ReferenceBitmap .Height -1{_ecc ,_egb =_ba .ReferenceBitmap .GetByte (_gaac +_feae +_aea );
if _egb !=nil {return _egb ;};_aeg =int (_ecc );};_bfef =((_cf >>5)&0x6)|((_aeg >>2)&0x30)|(_bb &0x180)|(_dcc &0xc00);var _dgf int ;for _cedb :=0;_cedb < _fge ;_cedb =_dgf {var _bcg int ;_dgf =_cedb +8;var _gcf int ;if _gcf =_gcb -_cedb ;_gcf > 8{_gcf =8;
};_eba :=_dgf < _gcb ;_bbd :=_dgf < _ba .ReferenceBitmap .Width ;_eef :=_aea +1;if _adf > 0{_ecc =0;if _eba {_ecc ,_egb =_ba .RegionBitmap .GetByte (_be -_gccb +1);if _egb !=nil {return _egb ;};};_cf =(_cf <<8)|int (_ecc );};if _bd > 0&&_bd <=_ba .ReferenceBitmap .Height {var _edd int ;
if _bbd {_ecc ,_egb =_ba .ReferenceBitmap .GetByte (_gaac -_feae +_eef );if _egb !=nil {return _egb ;};_edd =int (_ecc )<<4;};_dcc =(_dcc <<8)|_edd ;};if _bd >=0&&_bd < _ba .ReferenceBitmap .Height {var _ff int ;if _bbd {_ecc ,_egb =_ba .ReferenceBitmap .GetByte (_gaac +_eef );
if _egb !=nil {return _egb ;};_ff =int (_ecc )<<1;};_bb =(_bb <<8)|_ff ;};if _bd > -2&&_bd < (_ba .ReferenceBitmap .Height -1){_ecc =0;if _bbd {_ecc ,_egb =_ba .ReferenceBitmap .GetByte (_gaac +_feae +_eef );if _egb !=nil {return _egb ;};};_aeg =(_aeg <<8)|int (_ecc );
};for _cb :=0;_cb < _gcf ;_cb ++{var _dfb int ;_fb :=false ;_dfa :=(_bfef >>4)&0x1ff;if _dfa ==0x1ff{_fb =true ;_dfb =1;}else if _dfa ==0x00{_fb =true ;};if !_fb {if _ba ._c {_bfd =_ba .overrideAtTemplate0 (_bfef ,_cedb +_cb ,_adf ,_bcg ,_cb );_ba ._fa .SetIndex (int32 (_bfd ));
}else {_ba ._fa .SetIndex (int32 (_bfef ));};_dfb ,_egb =_ba ._fc .DecodeBit (_ba ._fa );if _egb !=nil {return _egb ;};};_fad :=uint (7-_cb );_bcg |=_dfb <<_fad ;_bfef =((_bfef &0xdb6)<<1)|_dfb |(_cf >>_fad +5)&0x002|((_aeg >>_fad +2)&0x010)|((_bb >>_fad )&0x080)|((_dcc >>_fad )&0x400);
};_egb =_ba .RegionBitmap .SetByte (_be ,byte (_bcg ));if _egb !=nil {return _egb ;};_be ++;_gaac ++;};return nil ;};func (_begb *HalftoneRegion )grayScaleDecoding (_cac int )([][]int ,error ){var (_gbfb []int8 ;_cbde []int8 ;);if !_begb .IsMMREncoded {_gbfb =make ([]int8 ,4);
_cbde =make ([]int8 ,4);if _begb .HTemplate <=1{_gbfb [0]=3;}else if _begb .HTemplate >=2{_gbfb [0]=2;};_cbde [0]=-1;_gbfb [1]=-3;_cbde [1]=-1;_gbfb [2]=2;_cbde [2]=-2;_gbfb [3]=-2;_cbde [3]=-2;};_ddd :=make ([]*_b .Bitmap ,_cac );_cdec :=NewGenericRegion (_begb ._bbg );
_cdec .setParametersMMR (_begb .IsMMREncoded ,_begb .DataOffset ,_begb .DataLength ,_begb .HGridHeight ,_begb .HGridWidth ,_begb .HTemplate ,false ,_begb .HSkipEnabled ,_gbfb ,_cbde );_ddc :=_cac -1;var _cccf error ;_ddd [_ddc ],_cccf =_cdec .GetRegionBitmap ();
if _cccf !=nil {return nil ,_cccf ;};for _ddc > 0{_ddc --;_cdec .Bitmap =nil ;_ddd [_ddc ],_cccf =_cdec .GetRegionBitmap ();if _cccf !=nil {return nil ,_cccf ;};if _cccf =_begb .combineGrayscalePlanes (_ddd ,_ddc );_cccf !=nil {return nil ,_cccf ;};};return _begb .computeGrayScalePlanes (_ddd ,_cac );
};func (_gfea *GenericRegion )GetRegionBitmap ()(_ggb *_b .Bitmap ,_fdb error ){if _gfea .Bitmap !=nil {return _gfea .Bitmap ,nil ;};if _gfea .IsMMREncoded {if _gfea ._dbga ==nil {_gfea ._dbga ,_fdb =_fgbe .New (_gfea ._egfg ,int (_gfea .RegionSegment .BitmapWidth ),int (_gfea .RegionSegment .BitmapHeight ),_gfea .DataOffset ,_gfea .DataLength );
if _fdb !=nil {return nil ,_fdb ;};};_gfea .Bitmap ,_fdb =_gfea ._dbga .UncompressMMR ();return _gfea .Bitmap ,_fdb ;};if _fdb =_gfea .updateOverrideFlags ();_fdb !=nil {return nil ,_fdb ;};var _cfe int ;if _gfea ._deec ==nil {_gfea ._deec ,_fdb =_ec .New (_gfea ._egfg );
if _fdb !=nil {return nil ,_fdb ;};};if _gfea ._bfc ==nil {_gfea ._bfc =_ec .NewStats (65536,1);};_gfea .Bitmap =_b .New (int (_gfea .RegionSegment .BitmapWidth ),int (_gfea .RegionSegment .BitmapHeight ));_bfbc :=int (uint32 (_gfea .Bitmap .Width +7)&(^uint32 (7)));
for _ecaf :=0;_ecaf < _gfea .Bitmap .Height ;_ecaf ++{if _gfea .IsTPGDon {var _aae int ;_aae ,_fdb =_gfea .decodeSLTP ();if _fdb !=nil {return nil ,_fdb ;};_cfe ^=_aae ;};if _cfe ==1{if _ecaf > 0{if _fdb =_gfea .copyLineAbove (_ecaf );_fdb !=nil {return nil ,_fdb ;
};};}else {if _fdb =_gfea .decodeLine (_ecaf ,_gfea .Bitmap .Width ,_bfbc );_fdb !=nil {return nil ,_fdb ;};};};return _gfea .Bitmap ,nil ;};func (_fcfb *Header )pageSize ()uint {if _fcfb .PageAssociation <=255{return 1;};return 4;};func (_ffb *SymbolDictionary )readNumberOfExportedSymbols ()error {_dgaf ,_ccf :=_ffb ._cfde .ReadBits (32);
if _ccf !=nil {return _ccf ;};_ffb .NumberOfExportedSymbols =uint32 (_dgaf &_f .MaxUint32 );return nil ;};func (_gfcd *PatternDictionary )extractPatterns (_gcd *_b .Bitmap )error {var _gcfbc int ;_edfc :=make ([]*_b .Bitmap ,_gfcd .GrayMax +1);for _gcfbc <=int (_gfcd .GrayMax ){_dfef :=int (_gfcd .HdpWidth )*_gcfbc ;
_fcfe :=_e .Rect (_dfef ,0,_dfef +int (_gfcd .HdpWidth ),int (_gfcd .HdpHeight ));_faee ,_aedb :=_b .Extract (_fcfe ,_gcd );if _aedb !=nil {return _aedb ;};_edfc [_gcfbc ]=_faee ;_gcfbc ++;};_gfcd .Patterns =_edfc ;return nil ;};func (_ggef *PageInformationSegment )String ()string {_gbcd :=&_gdg .Builder {};
_gbcd .WriteString ("\u000a\u005b\u0050\u0041G\u0045\u002d\u0049\u004e\u0046\u004f\u0052\u004d\u0041\u0054I\u004fN\u002d\u0053\u0045\u0047\u004d\u0045\u004eT\u005d\u000a");_gbcd .WriteString (_fg .Sprintf ("\u0009\u002d \u0042\u004d\u0048e\u0069\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u000a",_ggef .PageBMHeight ));
_gbcd .WriteString (_fg .Sprintf ("\u0009-\u0020B\u004d\u0057\u0069\u0064\u0074\u0068\u003a\u0020\u0025\u0064\u000a",_ggef .PageBMWidth ));_gbcd .WriteString (_fg .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0058\u003a\u0020\u0025\u0064\u000a",_ggef .ResolutionX ));
_gbcd .WriteString (_fg .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0059\u003a\u0020\u0025\u0064\u000a",_ggef .ResolutionY ));_gbcd .WriteString (_fg .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0073\u000a",_ggef ._ebaef ));
_gbcd .WriteString (_fg .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006eO\u0070\u0065\u0072\u0061\u0074\u006f\u0072O\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025v\u000a",_ggef ._dgab ));_gbcd .WriteString (_fg .Sprintf ("\u0009-\u0020I\u0073\u004c\u006f\u0073\u0073l\u0065\u0073s\u003a\u0020\u0025\u0076\u000a",_ggef .IsLossless ));
_gbcd .WriteString (_fg .Sprintf ("\u0009\u002d\u0020R\u0065\u0071\u0075\u0069r\u0065\u0073\u0041\u0075\u0078\u0069\u006ci\u0061\u0072\u0079\u0042\u0075\u0066\u0066\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_ggef ._ebaf ));_gbcd .WriteString (_fg .Sprintf ("\u0009\u002d\u0020M\u0069\u0067\u0068\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0052e\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0076\u000a",_ggef ._agfe ));
_gbcd .WriteString (_fg .Sprintf ("\u0009\u002d\u0020\u0049\u0073\u0053\u0074\u0072\u0069\u0070\u0065\u0064:\u0020\u0025\u0076\u000a",_ggef .IsStripe ));_gbcd .WriteString (_fg .Sprintf ("\t\u002d\u0020\u004d\u0061xS\u0074r\u0069\u0070\u0065\u0053\u0069z\u0065\u003a\u0020\u0025\u0076\u000a",_ggef .MaxStripeSize ));
return _gbcd .String ();};func (_efc *GenericRefinementRegion )updateOverride ()error {if _efc .GrAtX ==nil ||_efc .GrAtY ==nil {return _ege .New ("\u0041\u0054\u0020\u0070\u0069\u0078\u0065\u006c\u0073\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");};if len (_efc .GrAtX )!=len (_efc .GrAtY ){return _ege .New ("A\u0054\u0020\u0070\u0069xe\u006c \u0069\u006e\u0063\u006f\u006es\u0069\u0073\u0074\u0065\u006e\u0074");
};_efc ._edc =make ([]bool ,len (_efc .GrAtX ));switch _efc .TemplateID {case 0:if _efc .GrAtX [0]!=-1&&_efc .GrAtY [0]!=-1{_efc ._edc [0]=true ;_efc ._c =true ;};if _efc .GrAtX [1]!=-1&&_efc .GrAtY [1]!=-1{_efc ._edc [1]=true ;_efc ._c =true ;};case 1:_efc ._c =false ;
};return nil ;};func (_bgg *GenericRefinementRegion )overrideAtTemplate0 (_dbf ,_dde ,_fde ,_efa ,_bdg int )int {if _bgg ._edc [0]{_dbf &=0xfff7;if _bgg .GrAtY [0]==0&&int (_bgg .GrAtX [0])>=-_bdg {_dbf |=(_efa >>uint (7-(_bdg +int (_bgg .GrAtX [0])))&0x1)<<3;
}else {_dbf |=_bgg .getPixel (_bgg .RegionBitmap ,_dde +int (_bgg .GrAtX [0]),_fde +int (_bgg .GrAtY [0]))<<3;};};if _bgg ._edc [1]{_dbf &=0xefff;if _bgg .GrAtY [1]==0&&int (_bgg .GrAtX [1])>=-_bdg {_dbf |=(_efa >>uint (7-(_bdg +int (_bgg .GrAtX [1])))&0x1)<<12;
}else {_dbf |=_bgg .getPixel (_bgg .ReferenceBitmap ,_dde +int (_bgg .GrAtX [1]),_fde +int (_bgg .GrAtY [1]));};};return _dbf ;};func (_cfeg *PageInformationSegment )readCombinationOperator ()error {_ebfb ,_gda :=_cfeg ._fgf .ReadBits (2);if _gda !=nil {return _gda ;
};_cfeg ._ebaef =_b .CombinationOperator (int (_ebfb ));return nil ;};var _ templater =&template0 {};func (_fbf *GenericRefinementRegion )decodeTemplate (_dba ,_afeb ,_eaac ,_dec ,_ccg ,_ac ,_cg ,_afga ,_gfdg ,_bff int ,_ede templater )(_gcg error ){var (_cfc ,_fbg ,_dbd ,_cfca ,_afag int16 ;
_bdf ,_afd ,_dd ,_efeg int ;_edef byte ;);if _gfdg >=1&&(_gfdg -1)< _fbf .ReferenceBitmap .Height {_edef ,_gcg =_fbf .ReferenceBitmap .GetByte (_bff -_dec );if _gcg !=nil {return ;};_bdf =int (_edef );};if _gfdg >=0&&(_gfdg )< _fbf .ReferenceBitmap .Height {_edef ,_gcg =_fbf .ReferenceBitmap .GetByte (_bff );
if _gcg !=nil {return ;};_afd =int (_edef );};if _gfdg >=-1&&(_gfdg +1)< _fbf .ReferenceBitmap .Height {_edef ,_gcg =_fbf .ReferenceBitmap .GetByte (_bff +_dec );if _gcg !=nil {return ;};_dd =int (_edef );};_bff ++;if _dba >=1{_edef ,_gcg =_fbf .RegionBitmap .GetByte (_afga -_eaac );
if _gcg !=nil {return ;};_efeg =int (_edef );};_afga ++;_ccd :=_fbf .ReferenceDX %8;_fda :=6+_ccd ;_bdfb :=_bff %_dec ;if _fda >=0{if _fda < 8{_cfc =int16 (_bdf >>uint (_fda ))&0x07;};if _fda < 8{_fbg =int16 (_afd >>uint (_fda ))&0x07;};if _fda < 8{_dbd =int16 (_dd >>uint (_fda ))&0x07;
};if _fda ==6&&_bdfb > 1{if _gfdg >=1&&(_gfdg -1)< _fbf .ReferenceBitmap .Height {_edef ,_gcg =_fbf .ReferenceBitmap .GetByte (_bff -_dec -2);if _gcg !=nil {return _gcg ;};_cfc |=int16 (_edef <<2)&0x04;};if _gfdg >=0&&_gfdg < _fbf .ReferenceBitmap .Height {_edef ,_gcg =_fbf .ReferenceBitmap .GetByte (_bff -2);
if _gcg !=nil {return _gcg ;};_fbg |=int16 (_edef <<2)&0x04;};if _gfdg >=-1&&_gfdg +1< _fbf .ReferenceBitmap .Height {_edef ,_gcg =_fbf .ReferenceBitmap .GetByte (_bff +_dec -2);if _gcg !=nil {return _gcg ;};_dbd |=int16 (_edef <<2)&0x04;};};if _fda ==0{_bdf =0;
_afd =0;_dd =0;if _bdfb < _dec -1{if _gfdg >=1&&_gfdg -1< _fbf .ReferenceBitmap .Height {_edef ,_gcg =_fbf .ReferenceBitmap .GetByte (_bff -_dec );if _gcg !=nil {return _gcg ;};_bdf =int (_edef );};if _gfdg >=0&&_gfdg < _fbf .ReferenceBitmap .Height {_edef ,_gcg =_fbf .ReferenceBitmap .GetByte (_bff );
if _gcg !=nil {return _gcg ;};_afd =int (_edef );};if _gfdg >=-1&&_gfdg +1< _fbf .ReferenceBitmap .Height {_edef ,_gcg =_fbf .ReferenceBitmap .GetByte (_bff +_dec );if _gcg !=nil {return _gcg ;};_dd =int (_edef );};};_bff ++;};}else {_cfc =int16 (_bdf <<1)&0x07;
_fbg =int16 (_afd <<1)&0x07;_dbd =int16 (_dd <<1)&0x07;_bdf =0;_afd =0;_dd =0;if _bdfb < _dec -1{if _gfdg >=1&&_gfdg -1< _fbf .ReferenceBitmap .Height {_edef ,_gcg =_fbf .ReferenceBitmap .GetByte (_bff -_dec );if _gcg !=nil {return _gcg ;};_bdf =int (_edef );
};if _gfdg >=0&&_gfdg < _fbf .ReferenceBitmap .Height {_edef ,_gcg =_fbf .ReferenceBitmap .GetByte (_bff );if _gcg !=nil {return _gcg ;};_afd =int (_edef );};if _gfdg >=-1&&_gfdg +1< _fbf .ReferenceBitmap .Height {_edef ,_gcg =_fbf .ReferenceBitmap .GetByte (_bff +_dec );
if _gcg !=nil {return _gcg ;};_dd =int (_edef );};_bff ++;};_cfc |=int16 ((_bdf >>7)&0x07);_fbg |=int16 ((_afd >>7)&0x07);_dbd |=int16 ((_dd >>7)&0x07);};_cfca =int16 (_efeg >>6);_afag =0;_cd :=(2-_ccd )%8;_bdf <<=uint (_cd );_afd <<=uint (_cd );_dd <<=uint (_cd );
_efeg <<=2;var _ggg int ;for _aefc :=0;_aefc < _afeb ;_aefc ++{_ddf :=_aefc &0x07;_dee :=_ede .form (_cfc ,_fbg ,_dbd ,_cfca ,_afag );if _fbf ._c {_edef ,_gcg =_fbf .RegionBitmap .GetByte (_fbf .RegionBitmap .GetByteIndex (_aefc ,_dba ));if _gcg !=nil {return _gcg ;
};_fbf ._fa .SetIndex (int32 (_fbf .overrideAtTemplate0 (int (_dee ),_aefc ,_dba ,int (_edef ),_ddf )));}else {_fbf ._fa .SetIndex (int32 (_dee ));};_ggg ,_gcg =_fbf ._fc .DecodeBit (_fbf ._fa );if _gcg !=nil {return _gcg ;};if _gcg =_fbf .RegionBitmap .SetPixel (_aefc ,_dba ,byte (_ggg ));
_gcg !=nil {return _gcg ;};_cfc =((_cfc <<1)|0x01&int16 (_bdf >>7))&0x07;_fbg =((_fbg <<1)|0x01&int16 (_afd >>7))&0x07;_dbd =((_dbd <<1)|0x01&int16 (_dd >>7))&0x07;_cfca =((_cfca <<1)|0x01&int16 (_efeg >>7))&0x07;_afag =int16 (_ggg );if (_aefc -int (_fbf .ReferenceDX ))%8==5{_bdf =0;
_afd =0;_dd =0;if ((_aefc -int (_fbf .ReferenceDX ))/8)+1< _fbf .ReferenceBitmap .RowStride {if _gfdg >=1&&(_gfdg -1)< _fbf .ReferenceBitmap .Height {_edef ,_gcg =_fbf .ReferenceBitmap .GetByte (_bff -_dec );if _gcg !=nil {return _gcg ;};_bdf =int (_edef );
};if _gfdg >=0&&_gfdg < _fbf .ReferenceBitmap .Height {_edef ,_gcg =_fbf .ReferenceBitmap .GetByte (_bff );if _gcg !=nil {return _gcg ;};_afd =int (_edef );};if _gfdg >=-1&&(_gfdg +1)< _fbf .ReferenceBitmap .Height {_edef ,_gcg =_fbf .ReferenceBitmap .GetByte (_bff +_dec );
if _gcg !=nil {return _gcg ;};_dd =int (_edef );};};_bff ++;}else {_bdf <<=1;_afd <<=1;_dd <<=1;};if _ddf ==5&&_dba >=1{if ((_aefc >>3)+1)>=_fbf .RegionBitmap .RowStride {_efeg =0;}else {_edef ,_gcg =_fbf .RegionBitmap .GetByte (_afga -_eaac );if _gcg !=nil {return _gcg ;
};_efeg =int (_edef );};_afga ++;}else {_efeg <<=1;};};return nil ;};func (_gecb *Header )writeSegmentNumber (_dfcb _a .BinaryWriter )(_gfee int ,_adaa error ){_gea :=make ([]byte ,4);_ef .BigEndian .PutUint32 (_gea ,_gecb .SegmentNumber );if _gfee ,_adaa =_dfcb .Write (_gea );
_adaa !=nil {return 0,_gdga .Wrap (_adaa ,"\u0048e\u0061\u0064\u0065\u0072.\u0077\u0072\u0069\u0074\u0065S\u0065g\u006de\u006e\u0074\u004e\u0075\u006d\u0062\u0065r","");};return _gfee ,nil ;};func (_gedf *TextRegion )encodeFlags (_bgee _a .BinaryWriter )(_efbd int ,_efaf error ){const _cgede ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _efaf =_bgee .WriteBit (int (_gedf .SbrTemplate ));_efaf !=nil {return _efbd ,_gdga .Wrap (_efaf ,_cgede ,"s\u0062\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};if _ ,_efaf =_bgee .WriteBits (uint64 (_gedf .SbDsOffset ),5);_efaf !=nil {return _efbd ,_gdga .Wrap (_efaf ,_cgede ,"\u0073\u0062\u0044\u0073\u004f\u0066\u0066\u0073\u0065\u0074");
};if _efaf =_bgee .WriteBit (int (_gedf .DefaultPixel ));_efaf !=nil {return _efbd ,_gdga .Wrap (_efaf ,_cgede ,"\u0044\u0065\u0066a\u0075\u006c\u0074\u0050\u0069\u0078\u0065\u006c");};if _ ,_efaf =_bgee .WriteBits (uint64 (_gedf .CombinationOperator ),2);
_efaf !=nil {return _efbd ,_gdga .Wrap (_efaf ,_cgede ,"\u0043\u006f\u006d\u0062in\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072");};if _efaf =_bgee .WriteBit (int (_gedf .IsTransposed ));_efaf !=nil {return _efbd ,_gdga .Wrap (_efaf ,_cgede ,"\u0069\u0073\u0020\u0074\u0072\u0061\u006e\u0073\u0070\u006f\u0073\u0065\u0064");
};if _ ,_efaf =_bgee .WriteBits (uint64 (_gedf .ReferenceCorner ),2);_efaf !=nil {return _efbd ,_gdga .Wrap (_efaf ,_cgede ,"\u0072\u0065f\u0065\u0072\u0065n\u0063\u0065\u0020\u0063\u006f\u0072\u006e\u0065\u0072");};if _ ,_efaf =_bgee .WriteBits (uint64 (_gedf .LogSBStrips ),2);
_efaf !=nil {return _efbd ,_gdga .Wrap (_efaf ,_cgede ,"L\u006f\u0067\u0053\u0042\u0053\u0074\u0072\u0069\u0070\u0073");};var _ceedb int ;if _gedf .UseRefinement {_ceedb =1;};if _efaf =_bgee .WriteBit (_ceedb );_efaf !=nil {return _efbd ,_gdga .Wrap (_efaf ,_cgede ,"\u0075\u0073\u0065\u0020\u0072\u0065\u0066\u0069\u006ee\u006d\u0065\u006e\u0074");
};_ceedb =0;if _gedf .IsHuffmanEncoded {_ceedb =1;};if _efaf =_bgee .WriteBit (_ceedb );_efaf !=nil {return _efbd ,_gdga .Wrap (_efaf ,_cgede ,"u\u0073\u0065\u0020\u0068\u0075\u0066\u0066\u006d\u0061\u006e");};_efbd =2;return _efbd ,nil ;};func _afcgc (_fecf _a .StreamReader ,_geg *Header )*GenericRefinementRegion {return &GenericRefinementRegion {_eb :_fecf ,RegionInfo :NewRegionSegment (_fecf ),_de :_geg ,_gc :&template0 {},_gca :&template1 {}};
};func (_abca *PatternDictionary )readTemplate ()error {_gdf ,_afgec :=_abca ._bcd .ReadBits (2);if _afgec !=nil {return _afgec ;};_abca .HDTemplate =byte (_gdf );return nil ;};func (_gfegf *TextRegion )Encode (w _a .BinaryWriter )(_bfdd int ,_ggbf error ){const _cefb ="\u0054\u0065\u0078\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u002e\u0045n\u0063\u006f\u0064\u0065";
if _bfdd ,_ggbf =_gfegf .RegionInfo .Encode (w );_ggbf !=nil {return _bfdd ,_gdga .Wrap (_ggbf ,_cefb ,"");};var _babe int ;if _babe ,_ggbf =_gfegf .encodeFlags (w );_ggbf !=nil {return _bfdd ,_gdga .Wrap (_ggbf ,_cefb ,"");};_bfdd +=_babe ;if _babe ,_ggbf =_gfegf .encodeSymbols (w );
_ggbf !=nil {return _bfdd ,_gdga .Wrap (_ggbf ,_cefb ,"");};_bfdd +=_babe ;return _bfdd ,nil ;};func (_edg *Header )writeSegmentPageAssociation (_ddgd _a .BinaryWriter )(_cgab int ,_fgba error ){const _geeb ="w\u0072\u0069\u0074\u0065\u0053\u0065g\u006d\u0065\u006e\u0074\u0050\u0061\u0067\u0065\u0041s\u0073\u006f\u0063i\u0061t\u0069\u006f\u006e";
if _edg .pageSize ()!=4{if _fgba =_ddgd .WriteByte (byte (_edg .PageAssociation ));_fgba !=nil {return 0,_gdga .Wrap (_fgba ,_geeb ,"\u0070\u0061\u0067\u0065\u0053\u0069\u007a\u0065\u0020\u0021\u003d\u0020\u0034");};return 1,nil ;};_bdad :=make ([]byte ,4);
_ef .BigEndian .PutUint32 (_bdad ,uint32 (_edg .PageAssociation ));if _cgab ,_fgba =_ddgd .Write (_bdad );_fgba !=nil {return 0,_gdga .Wrap (_fgba ,_geeb ,"\u0034 \u0062y\u0074\u0065\u0020\u0070\u0061g\u0065\u0020n\u0075\u006d\u0062\u0065\u0072");};return _cgab ,nil ;
};var _ _af .BasicTabler =&TableSegment {};func (_gdfg *SymbolDictionary )getSbSymCodeLen ()int8 {_adff :=int8 (_f .Ceil (_f .Log (float64 (_gdfg ._gcga +_gdfg .NumberOfNewSymbols ))/_f .Log (2)));if _gdfg .IsHuffmanEncoded &&_adff < 1{return 1;};return _adff ;
};func (_feeeg *SymbolDictionary )decodeHeightClassDeltaHeight ()(int64 ,error ){if _feeeg .IsHuffmanEncoded {return _feeeg .decodeHeightClassDeltaHeightWithHuffman ();};_cabgd ,_gefd :=_feeeg ._dafg .DecodeInt (_feeeg ._bdfd );if _gefd !=nil {return 0,_gefd ;
};return int64 (_cabgd ),nil ;};func (_afee *SymbolDictionary )encodeATFlags (_cgbf _a .BinaryWriter )(_bdd int ,_eged error ){const _aeca ="\u0065\u006e\u0063\u006f\u0064\u0065\u0041\u0054\u0046\u006c\u0061\u0067\u0073";if _afee .IsHuffmanEncoded ||_afee .SdTemplate !=0{return 0,nil ;
};_edfb :=4;if _afee .SdTemplate !=0{_edfb =1;};for _bfce :=0;_bfce < _edfb ;_bfce ++{if _eged =_cgbf .WriteByte (byte (_afee .SdATX [_bfce ]));_eged !=nil {return _bdd ,_gdga .Wrapf (_eged ,_aeca ,"\u0053d\u0041\u0054\u0058\u005b\u0025\u0064]",_bfce );
};_bdd ++;if _eged =_cgbf .WriteByte (byte (_afee .SdATY [_bfce ]));_eged !=nil {return _bdd ,_gdga .Wrapf (_eged ,_aeca ,"\u0053d\u0041\u0054\u0059\u005b\u0025\u0064]",_bfce );};_bdd ++;};return _bdd ,nil ;};type Segmenter interface{Init (_dade *Header ,_cfd _a .StreamReader )error ;
};func (_gef *GenericRegion )Size ()int {return _gef .RegionSegment .Size ()+1+2*len (_gef .GBAtX )};func (_cee *GenericRegion )overrideAtTemplate2 (_dgde ,_afbe ,_gcfa ,_gcfb ,_abe int )int {_dgde &=0x3FB;if _cee .GBAtY [0]==0&&_cee .GBAtX [0]>=-int8 (_abe ){_dgde |=(_gcfb >>uint (7-(int8 (_abe )+_cee .GBAtX [0]))&0x1)<<2;
}else {_dgde |=int (_cee .getPixel (_afbe +int (_cee .GBAtX [0]),_gcfa +int (_cee .GBAtY [0])))<<2;};return _dgde ;};func (_fceb *GenericRegion )updateOverrideFlags ()error {const _cbaa ="\u0075\u0070\u0064\u0061te\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _fceb .GBAtX ==nil ||_fceb .GBAtY ==nil {return nil ;};if len (_fceb .GBAtX )!=len (_fceb .GBAtY ){return _gdga .Errorf (_cbaa ,"i\u006eco\u0073i\u0073t\u0065\u006e\u0074\u0020\u0041T\u0020\u0070\u0069x\u0065\u006c\u002e\u0020\u0041m\u006f\u0075\u006et\u0020\u006f\u0066\u0020\u0027\u0078\u0027\u0020\u0070\u0069\u0078e\u006c\u0073\u003a %d\u002c\u0020\u0041\u006d\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0027\u0079\u0027\u0020\u0070\u0069\u0078e\u006cs\u003a\u0020\u0025\u0064",len (_fceb .GBAtX ),len (_fceb .GBAtY ));
};_fceb .GBAtOverride =make ([]bool ,len (_fceb .GBAtX ));switch _fceb .GBTemplate {case 0:if !_fceb .UseExtTemplates {if _fceb .GBAtX [0]!=3||_fceb .GBAtY [0]!=-1{_fceb .setOverrideFlag (0);};if _fceb .GBAtX [1]!=-3||_fceb .GBAtY [1]!=-1{_fceb .setOverrideFlag (1);
};if _fceb .GBAtX [2]!=2||_fceb .GBAtY [2]!=-2{_fceb .setOverrideFlag (2);};if _fceb .GBAtX [3]!=-2||_fceb .GBAtY [3]!=-2{_fceb .setOverrideFlag (3);};}else {if _fceb .GBAtX [0]!=-2||_fceb .GBAtY [0]!=0{_fceb .setOverrideFlag (0);};if _fceb .GBAtX [1]!=0||_fceb .GBAtY [1]!=-2{_fceb .setOverrideFlag (1);
};if _fceb .GBAtX [2]!=-2||_fceb .GBAtY [2]!=-1{_fceb .setOverrideFlag (2);};if _fceb .GBAtX [3]!=-1||_fceb .GBAtY [3]!=-2{_fceb .setOverrideFlag (3);};if _fceb .GBAtX [4]!=1||_fceb .GBAtY [4]!=-2{_fceb .setOverrideFlag (4);};if _fceb .GBAtX [5]!=2||_fceb .GBAtY [5]!=-1{_fceb .setOverrideFlag (5);
};if _fceb .GBAtX [6]!=-3||_fceb .GBAtY [6]!=0{_fceb .setOverrideFlag (6);};if _fceb .GBAtX [7]!=-4||_fceb .GBAtY [7]!=0{_fceb .setOverrideFlag (7);};if _fceb .GBAtX [8]!=2||_fceb .GBAtY [8]!=-2{_fceb .setOverrideFlag (8);};if _fceb .GBAtX [9]!=3||_fceb .GBAtY [9]!=-1{_fceb .setOverrideFlag (9);
};if _fceb .GBAtX [10]!=-2||_fceb .GBAtY [10]!=-2{_fceb .setOverrideFlag (10);};if _fceb .GBAtX [11]!=-3||_fceb .GBAtY [11]!=-1{_fceb .setOverrideFlag (11);};};case 1:if _fceb .GBAtX [0]!=3||_fceb .GBAtY [0]!=-1{_fceb .setOverrideFlag (0);};case 2:if _fceb .GBAtX [0]!=2||_fceb .GBAtY [0]!=-1{_fceb .setOverrideFlag (0);
};case 3:if _fceb .GBAtX [0]!=2||_fceb .GBAtY [0]!=-1{_fceb .setOverrideFlag (0);};};return nil ;};func (_bedf *Header )readSegmentPageAssociation (_fdaa Documenter ,_feec _a .StreamReader ,_bce uint64 ,_bcgg ...int )(_dcga error ){const _bcae ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074P\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061t\u0069\u006f\u006e";
if !_bedf .PageAssociationFieldSize {_aacg ,_bbbe :=_feec .ReadBits (8);if _bbbe !=nil {return _gdga .Wrap (_bbbe ,_bcae ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_bedf .PageAssociation =int (_aacg &0xFF);}else {_cgb ,_bcbb :=_feec .ReadBits (32);
if _bcbb !=nil {return _gdga .Wrap (_bcbb ,_bcae ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_bedf .PageAssociation =int (_cgb &_f .MaxInt32 );};if _bce ==0{return nil ;};if _bedf .PageAssociation !=0{_gcggd ,_gefb :=_fdaa .GetPage (_bedf .PageAssociation );
if _gefb !=nil {return _gdga .Wrap (_gefb ,_bcae ,"\u0061s\u0073\u006f\u0063\u0069a\u0074\u0065\u0064\u0020\u0070a\u0067e\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006ed");};var _cacc int ;for _cdcc :=uint64 (0);_cdcc < _bce ;_cdcc ++{_cacc =_bcgg [_cdcc ];
_bedf .RTSegments [_cdcc ],_gefb =_gcggd .GetSegment (_cacc );if _gefb !=nil {var _gee error ;_bedf .RTSegments [_cdcc ],_gee =_fdaa .GetGlobalSegment (_cacc );if _gee !=nil {return _gdga .Wrapf (_gefb ,_bcae ,"\u0072\u0065\u0066\u0065\u0072\u0065n\u0063\u0065\u0020s\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064\u0020\u0061\u0074\u0020pa\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0072\u0020\u0069\u006e\u0020\u0067\u006c\u006f\u0062\u0061\u006c\u0073",_bedf .PageAssociation );
};};};return nil ;};for _cded :=uint64 (0);_cded < _bce ;_cded ++{_bedf .RTSegments [_cded ],_dcga =_fdaa .GetGlobalSegment (_bcgg [_cded ]);if _dcga !=nil {return _gdga .Wrapf (_dcga ,_bcae ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u003a\u0020\u0027\u0025d\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064",_bcgg [_cded ]);
};};return nil ;};type template1 struct{};func (_fccb *SymbolDictionary )parseHeader ()(_gcef error ){_d .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _gcef !=nil {_d .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u0020\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u005b\u0050\u0041\u0052SE\u002d\u0048\u0045A\u0044\u0045R\u005d\u0020\u0066\u0061\u0069\u006ce\u0064\u002e \u0025\u0076",_gcef );
}else {_d .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _gcef =_fccb .readRegionFlags ();_gcef !=nil {return _gcef ;};if _gcef =_fccb .setAtPixels ();_gcef !=nil {return _gcef ;};if _gcef =_fccb .setRefinementAtPixels ();_gcef !=nil {return _gcef ;};if _gcef =_fccb .readNumberOfExportedSymbols ();_gcef !=nil {return _gcef ;
};if _gcef =_fccb .readNumberOfNewSymbols ();_gcef !=nil {return _gcef ;};if _gcef =_fccb .setInSyms ();_gcef !=nil {return _gcef ;};if _fccb ._bcbe {_egcc :=_fccb .Header .RTSegments ;for _cdebd :=len (_egcc )-1;_cdebd >=0;_cdebd --{if _egcc [_cdebd ].Type ==0{_eccbf ,_cagb :=_egcc [_cdebd ].SegmentData .(*SymbolDictionary );
if !_cagb {_gcef =_fg .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074:\u0020\u0025\u0076\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020S\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_egcc [_cdebd ]);
return _gcef ;};if _eccbf ._bcbe {_fccb .setRetainedCodingContexts (_eccbf );};break ;};};};if _gcef =_fccb .checkInput ();_gcef !=nil {return _gcef ;};return nil ;};type PatternDictionary struct{_bcd _a .StreamReader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;
DataOffset int64 ;DataLength int64 ;GBAtX []int8 ;GBAtY []int8 ;IsMMREncoded bool ;HDTemplate byte ;HdpWidth byte ;HdpHeight byte ;Patterns []*_b .Bitmap ;GrayMax uint32 ;};func (_efdf *SymbolDictionary )setCodingStatistics ()error {if _efdf ._abcd ==nil {_efdf ._abcd =_ec .NewStats (512,1);
};if _efdf ._bdfd ==nil {_efdf ._bdfd =_ec .NewStats (512,1);};if _efdf ._fada ==nil {_efdf ._fada =_ec .NewStats (512,1);};if _efdf ._fdcdg ==nil {_efdf ._fdcdg =_ec .NewStats (512,1);};if _efdf ._bdec ==nil {_efdf ._bdec =_ec .NewStats (512,1);};if _efdf .UseRefinementAggregation &&_efdf ._eggd ==nil {_efdf ._eggd =_ec .NewStats (1<<uint (_efdf ._dfda ),1);
_efdf ._cbab =_ec .NewStats (512,1);_efdf ._eebc =_ec .NewStats (512,1);};if _efdf ._ggfe ==nil {_efdf ._ggfe =_ec .NewStats (65536,1);};if _efdf ._dafg ==nil {var _fedf error ;_efdf ._dafg ,_fedf =_ec .New (_efdf ._cfde );if _fedf !=nil {return _fedf ;
};};return nil ;};func (_fdfe *Header )writeSegmentDataLength (_eecd _a .BinaryWriter )(_cfad int ,_bcgac error ){_eege :=make ([]byte ,4);_ef .BigEndian .PutUint32 (_eege ,uint32 (_fdfe .SegmentDataLength ));if _cfad ,_bcgac =_eecd .Write (_eege );_bcgac !=nil {return 0,_gdga .Wrap (_bcgac ,"\u0048\u0065a\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u004c\u0065ng\u0074\u0068","");
};return _cfad ,nil ;};func (_dbgc *TextRegion )readAmountOfSymbolInstances ()error {_dbffd ,_egca :=_dbgc ._bfbb .ReadBits (32);if _egca !=nil {return _egca ;};_dbgc .NumberOfSymbolInstances =uint32 (_dbffd &_f .MaxUint32 );_efgfa :=_dbgc .RegionInfo .BitmapWidth *_dbgc .RegionInfo .BitmapHeight ;
if _efgfa < _dbgc .NumberOfSymbolInstances {_d .Log .Debug ("\u004c\u0069\u006d\u0069t\u0069\u006e\u0067\u0020t\u0068\u0065\u0020n\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020d\u0065\u0063\u006f\u0064e\u0064\u0020\u0073\u0079m\u0062\u006f\u006c\u0020\u0069n\u0073\u0074\u0061\u006e\u0063\u0065\u0073 \u0074\u006f\u0020\u006f\u006ee\u0020\u0070\u0065\u0072\u0020\u0070\u0069\u0078\u0065l\u0020\u0028\u0020\u0025\u0064\u0020\u0069\u006e\u0073\u0074\u0065\u0061\u0064\u0020\u006f\u0066\u0020\u0025\u0064\u0029",_efgfa ,_dbgc .NumberOfSymbolInstances );
_dbgc .NumberOfSymbolInstances =_efgfa ;};return nil ;};func (_fegd *TextRegion )decodeDT ()(_fdece int64 ,_cadbf error ){if _fegd .IsHuffmanEncoded {if _fegd .SbHuffDT ==3{_fdece ,_cadbf =_fegd ._ebafd .Decode (_fegd ._bfbb );if _cadbf !=nil {return 0,_cadbf ;
};}else {var _fbcf _af .Tabler ;_fbcf ,_cadbf =_af .GetStandardTable (11+int (_fegd .SbHuffDT ));if _cadbf !=nil {return 0,_cadbf ;};_fdece ,_cadbf =_fbcf .Decode (_fegd ._bfbb );if _cadbf !=nil {return 0,_cadbf ;};};}else {var _fgegg int32 ;_fgegg ,_cadbf =_fegd ._ggde .DecodeInt (_fegd ._cgcg );
if _cadbf !=nil {return ;};_fdece =int64 (_fgegg );};_fdece *=int64 (_fegd .SbStrips );return _fdece ,nil ;};func (_aaad *SymbolDictionary )decodeHeightClassDeltaHeightWithHuffman ()(int64 ,error ){switch _aaad .SdHuffDecodeHeightSelection {case 0:_egge ,_eeff :=_af .GetStandardTable (4);
if _eeff !=nil {return 0,_eeff ;};return _egge .Decode (_aaad ._cfde );case 1:_ceca ,_gefdf :=_af .GetStandardTable (5);if _gefdf !=nil {return 0,_gefdf ;};return _ceca .Decode (_aaad ._cfde );case 3:if _aaad ._fgfa ==nil {_bgfde ,_cada :=_af .GetStandardTable (0);
if _cada !=nil {return 0,_cada ;};_aaad ._fgfa =_bgfde ;};return _aaad ._fgfa .Decode (_aaad ._cfde );};return 0,nil ;};func (_aefb *Header )readReferredToSegmentNumbers (_dcdb _a .StreamReader ,_afdg int )([]int ,error ){const _fff ="\u0072\u0065\u0061\u0064R\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053e\u0067m\u0065\u006e\u0074\u004e\u0075\u006d\u0062e\u0072\u0073";
_dgc :=make ([]int ,_afdg );if _afdg > 0{_aefb .RTSegments =make ([]*Header ,_afdg );var (_efab uint64 ;_ffe error ;);for _bfag :=0;_bfag < _afdg ;_bfag ++{_efab ,_ffe =_dcdb .ReadBits (byte (_aefb .referenceSize ())<<3);if _ffe !=nil {return nil ,_gdga .Wrapf (_ffe ,_fff ,"\u0027\u0025\u0064\u0027 \u0072\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0020\u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u0075\u006db\u0065\u0072",_bfag );
};_dgc [_bfag ]=int (_efab &_f .MaxInt32 );};};return _dgc ,nil ;};type HalftoneRegion struct{_bbg _a .StreamReader ;_eebb *Header ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;HDefaultPixel int8 ;
CombinationOperator _b .CombinationOperator ;HSkipEnabled bool ;HTemplate byte ;IsMMREncoded bool ;HGridWidth uint32 ;HGridHeight uint32 ;HGridX int32 ;HGridY int32 ;HRegionX uint16 ;HRegionY uint16 ;HalftoneRegionBitmap *_b .Bitmap ;Patterns []*_b .Bitmap ;
};func (_bbff *TextRegion )GetRegionInfo ()*RegionSegment {return _bbff .RegionInfo };func (_afc *GenericRefinementRegion )decodeTypicalPredictedLine (_da ,_ag ,_dbg ,_aa ,_eca ,_gaa int )error {_deb :=_da -int (_afc .ReferenceDY );_dbb :=_afc .ReferenceBitmap .GetByteIndex (0,_deb );
_afe :=_afc .RegionBitmap .GetByteIndex (0,_da );var _fae error ;switch _afc .TemplateID {case 0:_fae =_afc .decodeTypicalPredictedLineTemplate0 (_da ,_ag ,_dbg ,_aa ,_eca ,_gaa ,_afe ,_deb ,_dbb );case 1:_fae =_afc .decodeTypicalPredictedLineTemplate1 (_da ,_ag ,_dbg ,_aa ,_eca ,_gaa ,_afe ,_deb ,_dbb );
};return _fae ;};func (_gagg *Header )referenceSize ()uint {switch {case _gagg .SegmentNumber <=255:return 1;case _gagg .SegmentNumber <=65535:return 2;default:return 4;};};func (_aedc *GenericRegion )setParameters (_acd bool ,_bgf ,_dgbc int64 ,_aeee ,_deef uint32 ){_aedc .IsMMREncoded =_acd ;
_aedc .DataOffset =_bgf ;_aedc .DataLength =_dgbc ;_aedc .RegionSegment .BitmapHeight =_aeee ;_aedc .RegionSegment .BitmapWidth =_deef ;_aedc ._dbga =nil ;_aedc .Bitmap =nil ;};func (_bf *GenericRefinementRegion )decodeOptimized (_bg ,_bgc ,_dg ,_feb ,_fecb ,_bfe ,_fga int )error {var (_ecf error ;
_aef int ;_ca int ;);_ceb :=_bg -int (_bf .ReferenceDY );if _fcg :=int (-_bf .ReferenceDX );_fcg > 0{_aef =_fcg ;};_ebec :=_bf .ReferenceBitmap .GetByteIndex (_aef ,_ceb );if _bf .ReferenceDX > 0{_ca =int (_bf .ReferenceDX );};_df :=_bf .RegionBitmap .GetByteIndex (_ca ,_bg );
switch _bf .TemplateID {case 0:_ecf =_bf .decodeTemplate (_bg ,_bgc ,_dg ,_feb ,_fecb ,_bfe ,_fga ,_df ,_ceb ,_ebec ,_bf ._gc );case 1:_ecf =_bf .decodeTemplate (_bg ,_bgc ,_dg ,_feb ,_fecb ,_bfe ,_fga ,_df ,_ceb ,_ebec ,_bf ._gca );};return _ecf ;};func (_aecb *PageInformationSegment )readIsStriped ()error {_ffed ,_cbdee :=_aecb ._fgf .ReadBit ();
if _cbdee !=nil {return _cbdee ;};if _ffed ==1{_aecb .IsStripe =true ;};return nil ;};func (_abfbb *PageInformationSegment )readIsLossless ()error {_gegg ,_dea :=_abfbb ._fgf .ReadBit ();if _dea !=nil {return _dea ;};if _gegg ==1{_abfbb .IsLossless =true ;
};return nil ;};func (_ecfe *TextRegion )decodeRdy ()(int64 ,error ){const _cgbc ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064y";if _ecfe .IsHuffmanEncoded {if _ecfe .SbHuffRDY ==3{if _ecfe ._bfgc ==nil {var (_gfaab int ;_fdae error ;);if _ecfe .SbHuffFS ==3{_gfaab ++;
};if _ecfe .SbHuffDS ==3{_gfaab ++;};if _ecfe .SbHuffDT ==3{_gfaab ++;};if _ecfe .SbHuffRDWidth ==3{_gfaab ++;};if _ecfe .SbHuffRDHeight ==3{_gfaab ++;};if _ecfe .SbHuffRDX ==3{_gfaab ++;};_ecfe ._bfgc ,_fdae =_ecfe .getUserTable (_gfaab );if _fdae !=nil {return 0,_gdga .Wrap (_fdae ,_cgbc ,"");
};};return _ecfe ._bfgc .Decode (_ecfe ._bfbb );};_dbgdd ,_gced :=_af .GetStandardTable (14+int (_ecfe .SbHuffRDY ));if _gced !=nil {return 0,_gced ;};return _dbgdd .Decode (_ecfe ._bfbb );};_ceab ,_eccba :=_ecfe ._ggde .DecodeInt (_ecfe ._cdecb );if _eccba !=nil {return 0,_gdga .Wrap (_eccba ,_cgbc ,"");
};return int64 (_ceab ),nil ;};func (_edfg *HalftoneRegion )computeX (_eed ,_becc int )int {return _edfg .shiftAndFill (int (_edfg .HGridX )+_eed *int (_edfg .HRegionY )+_becc *int (_edfg .HRegionX ));};func (_cafb *TextRegion )blit (_bbbc *_b .Bitmap ,_babc int64 )error {if _cafb .IsTransposed ==0&&(_cafb .ReferenceCorner ==2||_cafb .ReferenceCorner ==3){_cafb ._abdga +=int64 (_bbbc .Width -1);
}else if _cafb .IsTransposed ==1&&(_cafb .ReferenceCorner ==0||_cafb .ReferenceCorner ==2){_cafb ._abdga +=int64 (_bbbc .Height -1);};_gfgea :=_cafb ._abdga ;if _cafb .IsTransposed ==1{_gfgea ,_babc =_babc ,_gfgea ;};switch _cafb .ReferenceCorner {case 0:_babc -=int64 (_bbbc .Height -1);
case 2:_babc -=int64 (_bbbc .Height -1);_gfgea -=int64 (_bbbc .Width -1);case 3:_gfgea -=int64 (_bbbc .Width -1);};_fcgd :=_b .Blit (_bbbc ,_cafb .RegionBitmap ,int (_gfgea ),int (_babc ),_cafb .CombinationOperator );if _fcgd !=nil {return _fcgd ;};if _cafb .IsTransposed ==0&&(_cafb .ReferenceCorner ==0||_cafb .ReferenceCorner ==1){_cafb ._abdga +=int64 (_bbbc .Width -1);
};if _cafb .IsTransposed ==1&&(_cafb .ReferenceCorner ==1||_cafb .ReferenceCorner ==3){_cafb ._abdga +=int64 (_bbbc .Height -1);};return nil ;};func (_cgf *GenericRegion )decodeSLTP ()(int ,error ){switch _cgf .GBTemplate {case 0:_cgf ._bfc .SetIndex (0x9B25);
case 1:_cgf ._bfc .SetIndex (0x795);case 2:_cgf ._bfc .SetIndex (0xE5);case 3:_cgf ._bfc .SetIndex (0x195);};return _cgf ._deec .DecodeBit (_cgf ._bfc );};func (_bfa *GenericRegion )Encode (w _a .BinaryWriter )(_edeb int ,_ddg error ){const _cfba ="G\u0065n\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069o\u006e\u002e\u0045\u006eco\u0064\u0065";
if _bfa .Bitmap ==nil {return 0,_gdga .Error (_cfba ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};_eag ,_ddg :=_bfa .RegionSegment .Encode (w );if _ddg !=nil {return 0,_gdga .Wrap (_ddg ,_cfba ,"\u0052\u0065\u0067\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};_edeb +=_eag ;if _ddg =w .SkipBits (4);_ddg !=nil {return _edeb ,_gdga .Wrap (_ddg ,_cfba ,"\u0073k\u0069p\u0020\u0072\u0065\u0073\u0065r\u0076\u0065d\u0020\u0062\u0069\u0074\u0073");};var _bafd int ;if _bfa .IsTPGDon {_bafd =1;};if _ddg =w .WriteBit (_bafd );
_ddg !=nil {return _edeb ,_gdga .Wrap (_ddg ,_cfba ,"\u0074\u0070\u0067\u0064\u006f\u006e");};_bafd =0;if _ddg =w .WriteBit (int (_bfa .GBTemplate >>1)&0x01);_ddg !=nil {return _edeb ,_gdga .Wrap (_ddg ,_cfba ,"f\u0069r\u0073\u0074\u0020\u0067\u0062\u0074\u0065\u006dp\u006c\u0061\u0074\u0065 b\u0069\u0074");
};if _ddg =w .WriteBit (int (_bfa .GBTemplate )&0x01);_ddg !=nil {return _edeb ,_gdga .Wrap (_ddg ,_cfba ,"s\u0065\u0063\u006f\u006ed \u0067b\u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u0062\u0069\u0074");};if _bfa .UseMMR {_bafd =1;};if _ddg =w .WriteBit (_bafd );
_ddg !=nil {return _edeb ,_gdga .Wrap (_ddg ,_cfba ,"u\u0073\u0065\u0020\u004d\u004d\u0052\u0020\u0062\u0069\u0074");};_edeb ++;if _eag ,_ddg =_bfa .writeGBAtPixels (w );_ddg !=nil {return _edeb ,_gdga .Wrap (_ddg ,_cfba ,"");};_edeb +=_eag ;_ebfe :=_gf .New ();
if _ddg =_ebfe .EncodeBitmap (_bfa .Bitmap ,_bfa .IsTPGDon );_ddg !=nil {return _edeb ,_gdga .Wrap (_ddg ,_cfba ,"");};_ebfe .Final ();var _bed int64 ;if _bed ,_ddg =_ebfe .WriteTo (w );_ddg !=nil {return _edeb ,_gdga .Wrap (_ddg ,_cfba ,"");};_edeb +=int (_bed );
return _edeb ,nil ;};func (_edfgd *TableSegment )HtHigh ()int32 {return _edfgd ._becf };func (_fdfec *TextRegion )decodeRdw ()(int64 ,error ){const _bace ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064w";if _fdfec .IsHuffmanEncoded {if _fdfec .SbHuffRDWidth ==3{if _fdfec ._gfeb ==nil {var (_abbd int ;
_bagc error ;);if _fdfec .SbHuffFS ==3{_abbd ++;};if _fdfec .SbHuffDS ==3{_abbd ++;};if _fdfec .SbHuffDT ==3{_abbd ++;};_fdfec ._gfeb ,_bagc =_fdfec .getUserTable (_abbd );if _bagc !=nil {return 0,_gdga .Wrap (_bagc ,_bace ,"");};};return _fdfec ._gfeb .Decode (_fdfec ._bfbb );
};_dbcec ,_egdf :=_af .GetStandardTable (14+int (_fdfec .SbHuffRDWidth ));if _egdf !=nil {return 0,_gdga .Wrap (_egdf ,_bace ,"");};return _dbcec .Decode (_fdfec ._bfbb );};_cgcd ,_deeff :=_fdfec ._ggde .DecodeInt (_fdfec ._cffc );if _deeff !=nil {return 0,_gdga .Wrap (_deeff ,_bace ,"");
};return int64 (_cgcd ),nil ;};type Type int ;const (TSymbolDictionary Type =0;TIntermediateTextRegion Type =4;TImmediateTextRegion Type =6;TImmediateLosslessTextRegion Type =7;TPatternDictionary Type =16;TIntermediateHalftoneRegion Type =20;TImmediateHalftoneRegion Type =22;
TImmediateLosslessHalftoneRegion Type =23;TIntermediateGenericRegion Type =36;TImmediateGenericRegion Type =38;TImmediateLosslessGenericRegion Type =39;TIntermediateGenericRefinementRegion Type =40;TImmediateGenericRefinementRegion Type =42;TImmediateLosslessGenericRefinementRegion Type =43;
TPageInformation Type =48;TEndOfPage Type =49;TEndOfStrip Type =50;TEndOfFile Type =51;TProfiles Type =52;TTables Type =53;TExtension Type =62;TBitmap Type =70;);func (_fgd *Header )GetSegmentData ()(Segmenter ,error ){var _faa Segmenter ;if _fgd .SegmentData !=nil {_faa =_fgd .SegmentData ;
};if _faa ==nil {_aadg ,_bgcg :=_cca [_fgd .Type ];if !_bgcg {return nil ,_fg .Errorf ("\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0073\u002f\u0020\u0025\u0064\u0020\u0063\u0072e\u0061t\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e\u0020",_fgd .Type ,_fgd .Type );
};_faa =_aadg ();_d .Log .Trace ("\u005b\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u0020\u0061\u0074\u0020\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0030\u0034\u0058",_fgd .SegmentNumber ,_fgd .SegmentDataStartOffset );
_egec ,_bgaa :=_fgd .subInputReader ();if _bgaa !=nil {return nil ,_bgaa ;};if _bea :=_faa .Init (_fgd ,_egec );_bea !=nil {_d .Log .Debug ("\u0049\u006e\u0069\u0074 \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076 \u0066o\u0072\u0020\u0074\u0079\u0070\u0065\u003a \u0025\u0054",_bea ,_faa );
return nil ,_bea ;};_fgd .SegmentData =_faa ;};return _faa ,nil ;};func (_febb *TextRegion )readHuffmanFlags ()error {var (_dcec int ;_gdceg uint64 ;_caadb error ;);_ ,_caadb =_febb ._bfbb .ReadBit ();if _caadb !=nil {return _caadb ;};_dcec ,_caadb =_febb ._bfbb .ReadBit ();
if _caadb !=nil {return _caadb ;};_febb .SbHuffRSize =int8 (_dcec );_gdceg ,_caadb =_febb ._bfbb .ReadBits (2);if _caadb !=nil {return _caadb ;};_febb .SbHuffRDY =int8 (_gdceg )&0xf;_gdceg ,_caadb =_febb ._bfbb .ReadBits (2);if _caadb !=nil {return _caadb ;
};_febb .SbHuffRDX =int8 (_gdceg )&0xf;_gdceg ,_caadb =_febb ._bfbb .ReadBits (2);if _caadb !=nil {return _caadb ;};_febb .SbHuffRDHeight =int8 (_gdceg )&0xf;_gdceg ,_caadb =_febb ._bfbb .ReadBits (2);if _caadb !=nil {return _caadb ;};_febb .SbHuffRDWidth =int8 (_gdceg )&0xf;
_gdceg ,_caadb =_febb ._bfbb .ReadBits (2);if _caadb !=nil {return _caadb ;};_febb .SbHuffDT =int8 (_gdceg )&0xf;_gdceg ,_caadb =_febb ._bfbb .ReadBits (2);if _caadb !=nil {return _caadb ;};_febb .SbHuffDS =int8 (_gdceg )&0xf;_gdceg ,_caadb =_febb ._bfbb .ReadBits (2);
if _caadb !=nil {return _caadb ;};_febb .SbHuffFS =int8 (_gdceg )&0xf;return nil ;};func (_ecafb *SymbolDictionary )setAtPixels ()error {if _ecafb .IsHuffmanEncoded {return nil ;};_eea :=1;if _ecafb .SdTemplate ==0{_eea =4;};if _gadf :=_ecafb .readAtPixels (_eea );
_gadf !=nil {return _gadf ;};return nil ;};func (_cbea *GenericRefinementRegion )getPixel (_egf *_b .Bitmap ,_bfb ,_fag int )int {if _bfb < 0||_bfb >=_egf .Width {return 0;};if _fag < 0||_fag >=_egf .Height {return 0;};if _egf .GetPixel (_bfb ,_fag ){return 1;
};return 0;};func (_ggbb *GenericRegion )readGBAtPixels (_agba int )error {const _bgef ="\u0072\u0065\u0061\u0064\u0047\u0042\u0041\u0074\u0050i\u0078\u0065\u006c\u0073";_ggbb .GBAtX =make ([]int8 ,_agba );_ggbb .GBAtY =make ([]int8 ,_agba );for _gcfe :=0;
_gcfe < _agba ;_gcfe ++{_fee ,_eegf :=_ggbb ._egfg .ReadByte ();if _eegf !=nil {return _gdga .Wrapf (_eegf ,_bgef ,"\u0058\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_gcfe );};_ggbb .GBAtX [_gcfe ]=int8 (_fee );_fee ,_eegf =_ggbb ._egfg .ReadByte ();
if _eegf !=nil {return _gdga .Wrapf (_eegf ,_bgef ,"\u0059\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_gcfe );};_ggbb .GBAtY [_gcfe ]=int8 (_fee );};return nil ;};func (_gfae *TableSegment )Init (h *Header ,r _a .StreamReader )error {_gfae ._dfeag =r ;
return _gfae .parseHeader ();};func (_agcg *GenericRegion )overrideAtTemplate0b (_dgef ,_cfcdb ,_bec ,_aaeb ,_bge ,_aed int )int {if _agcg .GBAtOverride [0]{_dgef &=0xFFFD;if _agcg .GBAtY [0]==0&&_agcg .GBAtX [0]>=-int8 (_bge ){_dgef |=(_aaeb >>uint (int8 (_aed )-_agcg .GBAtX [0]&0x1))<<1;
}else {_dgef |=int (_agcg .getPixel (_cfcdb +int (_agcg .GBAtX [0]),_bec +int (_agcg .GBAtY [0])))<<1;};};if _agcg .GBAtOverride [1]{_dgef &=0xDFFF;if _agcg .GBAtY [1]==0&&_agcg .GBAtX [1]>=-int8 (_bge ){_dgef |=(_aaeb >>uint (int8 (_aed )-_agcg .GBAtX [1]&0x1))<<13;
}else {_dgef |=int (_agcg .getPixel (_cfcdb +int (_agcg .GBAtX [1]),_bec +int (_agcg .GBAtY [1])))<<13;};};if _agcg .GBAtOverride [2]{_dgef &=0xFDFF;if _agcg .GBAtY [2]==0&&_agcg .GBAtX [2]>=-int8 (_bge ){_dgef |=(_aaeb >>uint (int8 (_aed )-_agcg .GBAtX [2]&0x1))<<9;
}else {_dgef |=int (_agcg .getPixel (_cfcdb +int (_agcg .GBAtX [2]),_bec +int (_agcg .GBAtY [2])))<<9;};};if _agcg .GBAtOverride [3]{_dgef &=0xBFFF;if _agcg .GBAtY [3]==0&&_agcg .GBAtX [3]>=-int8 (_bge ){_dgef |=(_aaeb >>uint (int8 (_aed )-_agcg .GBAtX [3]&0x1))<<14;
}else {_dgef |=int (_agcg .getPixel (_cfcdb +int (_agcg .GBAtX [3]),_bec +int (_agcg .GBAtY [3])))<<14;};};if _agcg .GBAtOverride [4]{_dgef &=0xEFFF;if _agcg .GBAtY [4]==0&&_agcg .GBAtX [4]>=-int8 (_bge ){_dgef |=(_aaeb >>uint (int8 (_aed )-_agcg .GBAtX [4]&0x1))<<12;
}else {_dgef |=int (_agcg .getPixel (_cfcdb +int (_agcg .GBAtX [4]),_bec +int (_agcg .GBAtY [4])))<<12;};};if _agcg .GBAtOverride [5]{_dgef &=0xFFDF;if _agcg .GBAtY [5]==0&&_agcg .GBAtX [5]>=-int8 (_bge ){_dgef |=(_aaeb >>uint (int8 (_aed )-_agcg .GBAtX [5]&0x1))<<5;
}else {_dgef |=int (_agcg .getPixel (_cfcdb +int (_agcg .GBAtX [5]),_bec +int (_agcg .GBAtY [5])))<<5;};};if _agcg .GBAtOverride [6]{_dgef &=0xFFFB;if _agcg .GBAtY [6]==0&&_agcg .GBAtX [6]>=-int8 (_bge ){_dgef |=(_aaeb >>uint (int8 (_aed )-_agcg .GBAtX [6]&0x1))<<2;
}else {_dgef |=int (_agcg .getPixel (_cfcdb +int (_agcg .GBAtX [6]),_bec +int (_agcg .GBAtY [6])))<<2;};};if _agcg .GBAtOverride [7]{_dgef &=0xFFF7;if _agcg .GBAtY [7]==0&&_agcg .GBAtX [7]>=-int8 (_bge ){_dgef |=(_aaeb >>uint (int8 (_aed )-_agcg .GBAtX [7]&0x1))<<3;
}else {_dgef |=int (_agcg .getPixel (_cfcdb +int (_agcg .GBAtX [7]),_bec +int (_agcg .GBAtY [7])))<<3;};};if _agcg .GBAtOverride [8]{_dgef &=0xF7FF;if _agcg .GBAtY [8]==0&&_agcg .GBAtX [8]>=-int8 (_bge ){_dgef |=(_aaeb >>uint (int8 (_aed )-_agcg .GBAtX [8]&0x1))<<11;
}else {_dgef |=int (_agcg .getPixel (_cfcdb +int (_agcg .GBAtX [8]),_bec +int (_agcg .GBAtY [8])))<<11;};};if _agcg .GBAtOverride [9]{_dgef &=0xFFEF;if _agcg .GBAtY [9]==0&&_agcg .GBAtX [9]>=-int8 (_bge ){_dgef |=(_aaeb >>uint (int8 (_aed )-_agcg .GBAtX [9]&0x1))<<4;
}else {_dgef |=int (_agcg .getPixel (_cfcdb +int (_agcg .GBAtX [9]),_bec +int (_agcg .GBAtY [9])))<<4;};};if _agcg .GBAtOverride [10]{_dgef &=0x7FFF;if _agcg .GBAtY [10]==0&&_agcg .GBAtX [10]>=-int8 (_bge ){_dgef |=(_aaeb >>uint (int8 (_aed )-_agcg .GBAtX [10]&0x1))<<15;
}else {_dgef |=int (_agcg .getPixel (_cfcdb +int (_agcg .GBAtX [10]),_bec +int (_agcg .GBAtY [10])))<<15;};};if _agcg .GBAtOverride [11]{_dgef &=0xFDFF;if _agcg .GBAtY [11]==0&&_agcg .GBAtX [11]>=-int8 (_bge ){_dgef |=(_aaeb >>uint (int8 (_aed )-_agcg .GBAtX [11]&0x1))<<10;
}else {_dgef |=int (_agcg .getPixel (_cfcdb +int (_agcg .GBAtX [11]),_bec +int (_agcg .GBAtY [11])))<<10;};};return _dgef ;};func (_ggeae *SymbolDictionary )setRetainedCodingContexts (_eagab *SymbolDictionary ){_ggeae ._dafg =_eagab ._dafg ;_ggeae .IsHuffmanEncoded =_eagab .IsHuffmanEncoded ;
_ggeae .UseRefinementAggregation =_eagab .UseRefinementAggregation ;_ggeae .SdTemplate =_eagab .SdTemplate ;_ggeae .SdrTemplate =_eagab .SdrTemplate ;_ggeae .SdATX =_eagab .SdATX ;_ggeae .SdATY =_eagab .SdATY ;_ggeae .SdrATX =_eagab .SdrATX ;_ggeae .SdrATY =_eagab .SdrATY ;
_ggeae ._ggfe =_eagab ._ggfe ;};func (_bfde *PatternDictionary )readGrayMax ()error {_fgab ,_daaf :=_bfde ._bcd .ReadBits (32);if _daaf !=nil {return _daaf ;};_bfde .GrayMax =uint32 (_fgab &_f .MaxUint32 );return nil ;};func (_bcad *Header )Encode (w _a .BinaryWriter )(_fagb int ,_gec error ){const _bda ="\u0048\u0065\u0061d\u0065\u0072\u002e\u0057\u0072\u0069\u0074\u0065";
var _gbb _a .BinaryWriter ;_d .Log .Trace ("\u005b\u0053\u0045G\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045\u0052\u005d[\u0045\u004e\u0043\u004f\u0044\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _gec !=nil {_d .Log .Trace ("[\u0053\u0045\u0047\u004d\u0045\u004eT\u002d\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0045\u004e\u0043\u004f\u0044E\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020%\u0076",_gec );
}else {_d .Log .Trace ("\u005b\u0053\u0045\u0047ME\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0025\u0076",_bcad );_d .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045N\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u005b\u0045\u004e\u0043O\u0044\u0045\u005d\u0020\u0046\u0069\u006ei\u0073\u0068\u0065\u0064");
};}();w .FinishByte ();if _bcad .SegmentData !=nil {_bef ,_afea :=_bcad .SegmentData .(SegmentEncoder );if !_afea {return 0,_gdga .Errorf (_bda ,"\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0064\u006f\u0065s\u006e\u0027\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074 \u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0045\u006e\u0063\u006f\u0064er\u0020\u0069\u006e\u0074\u0065\u0072\u0066\u0061\u0063\u0065",_bcad .SegmentData );
};_gbb =_a .BufferedMSB ();_fagb ,_gec =_bef .Encode (_gbb );if _gec !=nil {return 0,_gdga .Wrap (_gec ,_bda ,"");};_bcad .SegmentDataLength =uint64 (_fagb );};if _bcad .pageSize ()==4{_bcad .PageAssociationFieldSize =true ;};var _dgbad int ;_dgbad ,_gec =_bcad .writeSegmentNumber (w );
if _gec !=nil {return 0,_gdga .Wrap (_gec ,_bda ,"");};_fagb +=_dgbad ;if _gec =_bcad .writeFlags (w );_gec !=nil {return _fagb ,_gdga .Wrap (_gec ,_bda ,"");};_fagb ++;_dgbad ,_gec =_bcad .writeReferredToCount (w );if _gec !=nil {return 0,_gdga .Wrap (_gec ,_bda ,"");
};_fagb +=_dgbad ;_dgbad ,_gec =_bcad .writeReferredToSegments (w );if _gec !=nil {return 0,_gdga .Wrap (_gec ,_bda ,"");};_fagb +=_dgbad ;_dgbad ,_gec =_bcad .writeSegmentPageAssociation (w );if _gec !=nil {return 0,_gdga .Wrap (_gec ,_bda ,"");};_fagb +=_dgbad ;
_dgbad ,_gec =_bcad .writeSegmentDataLength (w );if _gec !=nil {return 0,_gdga .Wrap (_gec ,_bda ,"");};_fagb +=_dgbad ;_bcad .HeaderLength =int64 (_fagb )-int64 (_bcad .SegmentDataLength );if _gbb !=nil {if _ ,_gec =w .Write (_gbb .Data ());_gec !=nil {return _fagb ,_gdga .Wrap (_gec ,_bda ,"\u0077r\u0069t\u0065\u0020\u0073\u0065\u0067m\u0065\u006et\u0020\u0064\u0061\u0074\u0061");
};};return _fagb ,nil ;};func (_beca *GenericRegion )writeGBAtPixels (_afec _a .BinaryWriter )(_dfdb int ,_cdcd error ){const _eefa ="\u0077r\u0069t\u0065\u0047\u0042\u0041\u0074\u0050\u0069\u0078\u0065\u006c\u0073";if _beca .UseMMR {return 0,nil ;};_bbfc :=1;
if _beca .GBTemplate ==0{_bbfc =4;}else if _beca .UseExtTemplates {_bbfc =12;};if len (_beca .GBAtX )!=_bbfc {return 0,_gdga .Errorf (_eefa ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0058\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};if len (_beca .GBAtY )!=_bbfc {return 0,_gdga .Errorf (_eefa ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0059\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};for _ffge :=0;_ffge < _bbfc ;_ffge ++{if _cdcd =_afec .WriteByte (byte (_beca .GBAtX [_ffge ]));_cdcd !=nil {return _dfdb ,_gdga .Wrap (_cdcd ,_eefa ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0058");};_dfdb ++;if _cdcd =_afec .WriteByte (byte (_beca .GBAtY [_ffge ]));
_cdcd !=nil {return _dfdb ,_gdga .Wrap (_cdcd ,_eefa ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0059");};_dfdb ++;};return _dfdb ,nil ;};func (_cfdf *SymbolDictionary )setRefinementAtPixels ()error {if !_cfdf .UseRefinementAggregation ||_cfdf .SdrTemplate !=0{return nil ;
};if _cabf :=_cfdf .readRefinementAtPixels (2);_cabf !=nil {return _cabf ;};return nil ;};func (_fcef *PageInformationSegment )parseHeader ()(_edda error ){_d .Log .Trace ("\u005b\u0050\u0061\u0067\u0065I\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067m\u0065\u006e\u0074\u005d\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u002e\u002e");
defer func (){var _dbge ="[\u0050\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072m\u0061\u0074\u0069\u006f\u006e\u0053\u0065gm\u0065\u006e\u0074\u005d \u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065ad\u0065\u0072 \u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064";
if _edda !=nil {_dbge +="\u0020\u0077\u0069t\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u0020"+_edda .Error ();}else {_dbge +="\u0020\u0073\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079";};_d .Log .Trace (_dbge );}();if _edda =_fcef .readWidthAndHeight ();
_edda !=nil {return _edda ;};if _edda =_fcef .readResolution ();_edda !=nil {return _edda ;};_ ,_edda =_fcef ._fgf .ReadBit ();if _edda !=nil {return _edda ;};if _edda =_fcef .readCombinationOperatorOverrideAllowed ();_edda !=nil {return _edda ;};if _edda =_fcef .readRequiresAuxiliaryBuffer ();
_edda !=nil {return _edda ;};if _edda =_fcef .readCombinationOperator ();_edda !=nil {return _edda ;};if _edda =_fcef .readDefaultPixelValue ();_edda !=nil {return _edda ;};if _edda =_fcef .readContainsRefinement ();_edda !=nil {return _edda ;};if _edda =_fcef .readIsLossless ();
_edda !=nil {return _edda ;};if _edda =_fcef .readIsStriped ();_edda !=nil {return _edda ;};if _edda =_fcef .readMaxStripeSize ();_edda !=nil {return _edda ;};if _edda =_fcef .checkInput ();_edda !=nil {return _edda ;};_d .Log .Trace ("\u0025\u0073",_fcef );
return nil ;};func (_edee *Header )writeReferredToSegments (_cda _a .BinaryWriter )(_bgdd int ,_fdcd error ){const _cebf ="\u0077\u0072\u0069te\u0052\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
var (_gfdb uint16 ;_debbb uint32 ;);_cgc :=_edee .referenceSize ();_ggd :=1;_dfag :=make ([]byte ,_cgc );for _ ,_bbfaf :=range _edee .RTSNumbers {switch _cgc {case 4:_debbb =uint32 (_bbfaf );_ef .BigEndian .PutUint32 (_dfag ,_debbb );_ggd ,_fdcd =_cda .Write (_dfag );
if _fdcd !=nil {return 0,_gdga .Wrap (_fdcd ,_cebf ,"u\u0069\u006e\u0074\u0033\u0032\u0020\u0073\u0069\u007a\u0065");};case 2:_gfdb =uint16 (_bbfaf );_ef .BigEndian .PutUint16 (_dfag ,_gfdb );_ggd ,_fdcd =_cda .Write (_dfag );if _fdcd !=nil {return 0,_gdga .Wrap (_fdcd ,_cebf ,"\u0075\u0069\u006e\u0074\u0031\u0036");
};default:if _fdcd =_cda .WriteByte (byte (_bbfaf ));_fdcd !=nil {return 0,_gdga .Wrap (_fdcd ,_cebf ,"\u0075\u0069\u006et\u0038");};};_bgdd +=_ggd ;};return _bgdd ,nil ;};func (_gbfd *PageInformationSegment )readMaxStripeSize ()error {_eebf ,_gcbaa :=_gbfd ._fgf .ReadBits (15);
if _gcbaa !=nil {return _gcbaa ;};_gbfd .MaxStripeSize =uint16 (_eebf &_f .MaxUint16 );return nil ;};func (_efec *RegionSegment )Encode (w _a .BinaryWriter )(_ddeg int ,_ecdge error ){const _dggc ="R\u0065g\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065n\u0074\u002e\u0045\u006eco\u0064\u0065";
_efegg :=make ([]byte ,4);_ef .BigEndian .PutUint32 (_efegg ,_efec .BitmapWidth );_ddeg ,_ecdge =w .Write (_efegg );if _ecdge !=nil {return 0,_gdga .Wrap (_ecdge ,_dggc ,"\u0057\u0069\u0064t\u0068");};_ef .BigEndian .PutUint32 (_efegg ,_efec .BitmapHeight );
var _dgcg int ;_dgcg ,_ecdge =w .Write (_efegg );if _ecdge !=nil {return 0,_gdga .Wrap (_ecdge ,_dggc ,"\u0048\u0065\u0069\u0067\u0068\u0074");};_ddeg +=_dgcg ;_ef .BigEndian .PutUint32 (_efegg ,_efec .XLocation );_dgcg ,_ecdge =w .Write (_efegg );if _ecdge !=nil {return 0,_gdga .Wrap (_ecdge ,_dggc ,"\u0058L\u006f\u0063\u0061\u0074\u0069\u006fn");
};_ddeg +=_dgcg ;_ef .BigEndian .PutUint32 (_efegg ,_efec .YLocation );_dgcg ,_ecdge =w .Write (_efegg );if _ecdge !=nil {return 0,_gdga .Wrap (_ecdge ,_dggc ,"\u0059L\u006f\u0063\u0061\u0074\u0069\u006fn");};_ddeg +=_dgcg ;if _ecdge =w .WriteByte (byte (_efec .CombinaionOperator )&0x07);
_ecdge !=nil {return 0,_gdga .Wrap (_ecdge ,_dggc ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};_ddeg ++;return _ddeg ,nil ;};func (_bdfe *GenericRegion )String ()string {_dbbe :=&_gdg .Builder {};
_dbbe .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_dbbe .WriteString (_bdfe .RegionSegment .String ()+"\u000a");_dbbe .WriteString (_fg .Sprintf ("\u0009\u002d\u0020Us\u0065\u0045\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_bdfe .UseExtTemplates ));
_dbbe .WriteString (_fg .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0044\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_bdfe .IsTPGDon ));_dbbe .WriteString (_fg .Sprintf ("\u0009-\u0020G\u0042\u0054\u0065\u006d\u0070l\u0061\u0074e\u003a\u0020\u0025\u0064\u000a",_bdfe .GBTemplate ));
_dbbe .WriteString (_fg .Sprintf ("\t\u002d \u0049\u0073\u004d\u004d\u0052\u0045\u006e\u0063o\u0064\u0065\u0064\u003a %\u0076\u000a",_bdfe .IsMMREncoded ));_dbbe .WriteString (_fg .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_bdfe .GBAtX ));
_dbbe .WriteString (_fg .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_bdfe .GBAtY ));_dbbe .WriteString (_fg .Sprintf ("\t\u002d \u0047\u0042\u0041\u0074\u004f\u0076\u0065\u0072r\u0069\u0064\u0065\u003a %\u0076\u000a",_bdfe .GBAtOverride ));
return _dbbe .String ();};func (_daf *GenericRegion )Init (h *Header ,r _a .StreamReader )error {_daf .RegionSegment =NewRegionSegment (r );_daf ._egfg =r ;return _daf .parseHeader ();};func (_gfde *HalftoneRegion )shiftAndFill (_adbc int )int {_adbc >>=8;
if _adbc < 0{_bfdc :=int (_f .Log (float64 (_ecgg (_adbc )))/_f .Log (2));_dff :=31-_bfdc ;for _bgge :=1;_bgge < _dff ;_bgge ++{_adbc |=1<<uint (31-_bgge );};};return _adbc ;};func (_eefb *PatternDictionary )setGbAtPixels (){if _eefb .HDTemplate ==0{_eefb .GBAtX =make ([]int8 ,4);
_eefb .GBAtY =make ([]int8 ,4);_eefb .GBAtX [0]=-int8 (_eefb .HdpWidth );_eefb .GBAtY [0]=0;_eefb .GBAtX [1]=-3;_eefb .GBAtY [1]=-1;_eefb .GBAtX [2]=2;_eefb .GBAtY [2]=-2;_eefb .GBAtX [3]=-2;_eefb .GBAtY [3]=-2;}else {_eefb .GBAtX =[]int8 {-int8 (_eefb .HdpWidth )};
_eefb .GBAtY =[]int8 {0};};};func (_afge *GenericRegion )setOverrideFlag (_cgfc int ){_afge .GBAtOverride [_cgfc ]=true ;_afge ._dgg =true ;};func (_gbe *Header )String ()string {_bccc :=&_gdg .Builder {};_bccc .WriteString ("\u000a[\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045A\u0044\u0045\u0052\u005d\u000a");
_bccc .WriteString (_fg .Sprintf ("\t\u002d\u0020\u0053\u0065gm\u0065n\u0074\u004e\u0075\u006d\u0062e\u0072\u003a\u0020\u0025\u0076\u000a",_gbe .SegmentNumber ));_bccc .WriteString (_fg .Sprintf ("\u0009\u002d\u0020T\u0079\u0070\u0065\u003a\u0020\u0025\u0076\u000a",_gbe .Type ));
_bccc .WriteString (_fg .Sprintf ("\u0009-\u0020R\u0065\u0074\u0061\u0069\u006eF\u006c\u0061g\u003a\u0020\u0025\u0076\u000a",_gbe .RetainFlag ));_bccc .WriteString (_fg .Sprintf ("\u0009\u002d\u0020Pa\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_gbe .PageAssociation ));
_bccc .WriteString (_fg .Sprintf ("\u0009\u002d\u0020\u0050\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074i\u006fn\u0046\u0069\u0065\u006c\u0064\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_gbe .PageAssociationFieldSize ));
_bccc .WriteString ("\u0009-\u0020R\u0054\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u0053\u003a\u000a");for _ ,_begf :=range _gbe .RTSNumbers {_bccc .WriteString (_fg .Sprintf ("\u0009\t\u002d\u0020\u0025\u0064\u000a",_begf ));};_bccc .WriteString (_fg .Sprintf ("\t\u002d \u0048\u0065\u0061\u0064\u0065\u0072\u004c\u0065n\u0067\u0074\u0068\u003a %\u0076\u000a",_gbe .HeaderLength ));
_bccc .WriteString (_fg .Sprintf ("\u0009-\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061L\u0065n\u0067\u0074\u0068\u003a\u0020\u0025\u0076\n",_gbe .SegmentDataLength ));_bccc .WriteString (_fg .Sprintf ("\u0009\u002d\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074D\u0061\u0074\u0061\u0053\u0074\u0061\u0072t\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0076\u000a",_gbe .SegmentDataStartOffset ));
return _bccc .String ();};func (_gfaf *SymbolDictionary )encodeFlags (_fcd _a .BinaryWriter )(_afdgd int ,_ggeac error ){const _bbbda ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _ggeac =_fcd .SkipBits (3);_ggeac !=nil {return 0,_gdga .Wrap (_ggeac ,_bbbda ,"\u0065\u006d\u0070\u0074\u0079\u0020\u0062\u0069\u0074\u0073");
};var _gccg int ;if _gfaf .SdrTemplate > 0{_gccg =1;};if _ggeac =_fcd .WriteBit (_gccg );_ggeac !=nil {return _afdgd ,_gdga .Wrap (_ggeac ,_bbbda ,"s\u0064\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_gccg =0;if _gfaf .SdTemplate > 1{_gccg =1;
};if _ggeac =_fcd .WriteBit (_gccg );_ggeac !=nil {return _afdgd ,_gdga .Wrap (_ggeac ,_bbbda ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_gccg =0;if _gfaf .SdTemplate ==1||_gfaf .SdTemplate ==3{_gccg =1;};if _ggeac =_fcd .WriteBit (_gccg );
_ggeac !=nil {return _afdgd ,_gdga .Wrap (_ggeac ,_bbbda ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_gccg =0;if _gfaf ._eaee {_gccg =1;};if _ggeac =_fcd .WriteBit (_gccg );_ggeac !=nil {return _afdgd ,_gdga .Wrap (_ggeac ,_bbbda ,"\u0063\u006f\u0064in\u0067\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0065\u0064");
};_gccg =0;if _gfaf ._bcbe {_gccg =1;};if _ggeac =_fcd .WriteBit (_gccg );_ggeac !=nil {return _afdgd ,_gdga .Wrap (_ggeac ,_bbbda ,"\u0063\u006f\u0064\u0069ng\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0075\u0073\u0065\u0064");};_gccg =0;if _gfaf .SdHuffAggInstanceSelection {_gccg =1;
};if _ggeac =_fcd .WriteBit (_gccg );_ggeac !=nil {return _afdgd ,_gdga .Wrap (_ggeac ,_bbbda ,"\u0073\u0064\u0048\u0075\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074");};_gccg =int (_gfaf .SdHuffBMSizeSelection );if _ggeac =_fcd .WriteBit (_gccg );
_ggeac !=nil {return _afdgd ,_gdga .Wrap (_ggeac ,_bbbda ,"\u0073\u0064\u0048u\u0066\u0066\u0042\u006d\u0053\u0069\u007a\u0065");};_gccg =0;if _gfaf .SdHuffDecodeWidthSelection > 1{_gccg =1;};if _ggeac =_fcd .WriteBit (_gccg );_ggeac !=nil {return _afdgd ,_gdga .Wrap (_ggeac ,_bbbda ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");
};_gccg =0;switch _gfaf .SdHuffDecodeWidthSelection {case 1,3:_gccg =1;};if _ggeac =_fcd .WriteBit (_gccg );_ggeac !=nil {return _afdgd ,_gdga .Wrap (_ggeac ,_bbbda ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_gccg =0;if _gfaf .SdHuffDecodeHeightSelection > 1{_gccg =1;
};if _ggeac =_fcd .WriteBit (_gccg );_ggeac !=nil {return _afdgd ,_gdga .Wrap (_ggeac ,_bbbda ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_gccg =0;switch _gfaf .SdHuffDecodeHeightSelection {case 1,3:_gccg =1;};if _ggeac =_fcd .WriteBit (_gccg );
_ggeac !=nil {return _afdgd ,_gdga .Wrap (_ggeac ,_bbbda ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_gccg =0;if _gfaf .UseRefinementAggregation {_gccg =1;};if _ggeac =_fcd .WriteBit (_gccg );_ggeac !=nil {return _afdgd ,_gdga .Wrap (_ggeac ,_bbbda ,"\u0073\u0064\u0052\u0065\u0066\u0041\u0067\u0067");
};_gccg =0;if _gfaf .IsHuffmanEncoded {_gccg =1;};if _ggeac =_fcd .WriteBit (_gccg );_ggeac !=nil {return _afdgd ,_gdga .Wrap (_ggeac ,_bbbda ,"\u0073\u0064\u0048\u0075\u0066\u0066");};return 2,nil ;};func (_begfa *TextRegion )computeSymbolCodeLength ()error {if _begfa .IsHuffmanEncoded {return _begfa .symbolIDCodeLengths ();
};_begfa ._adfb =int8 (_f .Ceil (_f .Log (float64 (_begfa .NumberOfSymbols ))/_f .Log (2)));return nil ;};func (_dagg *GenericRegion )setParametersMMR (_acef bool ,_bafb ,_debb int64 ,_dfcg ,_acg uint32 ,_caa byte ,_fca ,_dbfb bool ,_abc ,_cbdc []int8 ){_dagg .DataOffset =_bafb ;
_dagg .DataLength =_debb ;_dagg .RegionSegment =&RegionSegment {};_dagg .RegionSegment .BitmapHeight =_dfcg ;_dagg .RegionSegment .BitmapWidth =_acg ;_dagg .GBTemplate =_caa ;_dagg .IsMMREncoded =_acef ;_dagg .IsTPGDon =_fca ;_dagg .GBAtX =_abc ;_dagg .GBAtY =_cbdc ;
};func (_cbec *SymbolDictionary )retrieveImportSymbols ()error {for _ ,_agd :=range _cbec .Header .RTSegments {if _agd .Type ==0{_cedc ,_dgfb :=_agd .GetSegmentData ();if _dgfb !=nil {return _dgfb ;};_bdcb ,_cbdb :=_cedc .(*SymbolDictionary );if !_cbdb {return _fg .Errorf ("\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0044\u0061\u0074a\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u003a\u0020%\u0054",_cedc );
};_fedc ,_dgfb :=_bdcb .GetDictionary ();if _dgfb !=nil {return _fg .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064 \u0073\u0065\u0067m\u0065\u006e\u0074 \u0077\u0069t\u0068\u0020\u0069\u006e\u0064\u0065x\u003a %\u0064\u0020\u0067\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0073",_agd .SegmentNumber ,_dgfb .Error ());
};_cbec ._bbc =append (_cbec ._bbc ,_fedc ...);_cbec ._gcga +=_bdcb .NumberOfExportedSymbols ;};};return nil ;};func (_ddb *RegionSegment )Size ()int {return 17};func (_aeef *PageInformationSegment )encodeStripingInformation (_egce _a .BinaryWriter )(_debc int ,_fbec error ){const _eeegf ="\u0065n\u0063\u006f\u0064\u0065S\u0074\u0072\u0069\u0070\u0069n\u0067I\u006ef\u006f\u0072\u006d\u0061\u0074\u0069\u006fn";
if !_aeef .IsStripe {if _debc ,_fbec =_egce .Write ([]byte {0x00,0x00});_fbec !=nil {return 0,_gdga .Wrap (_fbec ,_eeegf ,"n\u006f\u0020\u0073\u0074\u0072\u0069\u0070\u0069\u006e\u0067");};return _debc ,nil ;};_aafa :=make ([]byte ,2);_ef .BigEndian .PutUint16 (_aafa ,_aeef .MaxStripeSize |1<<15);
if _debc ,_fbec =_egce .Write (_aafa );_fbec !=nil {return 0,_gdga .Wrapf (_fbec ,_eeegf ,"\u0073\u0074\u0072i\u0070\u0069\u006e\u0067\u003a\u0020\u0025\u0064",_aeef .MaxStripeSize );};return _debc ,nil ;};func (_aefg *PageInformationSegment )readCombinationOperatorOverrideAllowed ()error {_dcac ,_feag :=_aefg ._fgf .ReadBit ();
if _feag !=nil {return _feag ;};if _dcac ==1{_aefg ._dgab =true ;};return nil ;};func (_ga *GenericRefinementRegion )GetRegionBitmap ()(*_b .Bitmap ,error ){var _efe error ;_d .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _efe !=nil {_d .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0047\u0065\u0074R\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006dap\u0020\u0066a\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_efe );
}else {_d .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _ga .RegionBitmap !=nil {return _ga .RegionBitmap ,nil ;};_ebe :=0;if _ga .ReferenceBitmap ==nil {_ga .ReferenceBitmap ,_efe =_ga .getGrReference ();if _efe !=nil {return nil ,_efe ;};};if _ga ._fc ==nil {_ga ._fc ,_efe =_ec .New (_ga ._eb );if _efe !=nil {return nil ,_efe ;
};};if _ga ._fa ==nil {_ga ._fa =_ec .NewStats (8192,1);};_ga .RegionBitmap =_b .New (int (_ga .RegionInfo .BitmapWidth ),int (_ga .RegionInfo .BitmapHeight ));if _ga .TemplateID ==0{if _efe =_ga .updateOverride ();_efe !=nil {return nil ,_efe ;};};_gge :=(_ga .RegionBitmap .Width +7)&-8;
var _gdd int ;if _ga .IsTPGROn {_gdd =int (-_ga .ReferenceDY )*_ga .ReferenceBitmap .RowStride ;};_ead :=_gdd +1;for _adg :=0;_adg < _ga .RegionBitmap .Height ;_adg ++{if _ga .IsTPGROn {_fd ,_cc :=_ga .decodeSLTP ();if _cc !=nil {return nil ,_cc ;};_ebe ^=_fd ;
};if _ebe ==0{_efe =_ga .decodeOptimized (_adg ,_ga .RegionBitmap .Width ,_ga .RegionBitmap .RowStride ,_ga .ReferenceBitmap .RowStride ,_gge ,_gdd ,_ead );if _efe !=nil {return nil ,_efe ;};}else {_efe =_ga .decodeTypicalPredictedLine (_adg ,_ga .RegionBitmap .Width ,_ga .RegionBitmap .RowStride ,_ga .ReferenceBitmap .RowStride ,_gge ,_gdd );
if _efe !=nil {return nil ,_efe ;};};};return _ga .RegionBitmap ,nil ;};func (_aeb *GenericRegion )GetRegionInfo ()*RegionSegment {return _aeb .RegionSegment };func (_bfeb *TextRegion )Init (header *Header ,r _a .StreamReader )error {_bfeb .Header =header ;
_bfeb ._bfbb =r ;_bfeb .RegionInfo =NewRegionSegment (_bfeb ._bfbb );return _bfeb .parseHeader ();};func (_bbbb *SymbolDictionary )checkInput ()error {if _bbbb .SdHuffDecodeHeightSelection ==2{_d .Log .Debug ("\u0053\u0079\u006d\u0062\u006fl\u0020\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u0053e\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0070\u0065r\u006d\u0069\u0074\u0074\u0065\u0064",_bbbb .SdHuffDecodeHeightSelection );
};if _bbbb .SdHuffDecodeWidthSelection ==2{_d .Log .Debug ("\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0057\u0069\u0064t\u0068\u0020\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061l\u0075\u0065\u0020\u006e\u006f\u0074 \u0070\u0065r\u006d\u0069t\u0074e\u0064",_bbbb .SdHuffDecodeWidthSelection );
};if _bbbb .IsHuffmanEncoded {if _bbbb .SdTemplate !=0{_d .Log .Debug ("\u0053\u0044T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e \u0030\u0029",_bbbb .SdTemplate );
};if !_bbbb .UseRefinementAggregation {if !_bbbb .UseRefinementAggregation {if _bbbb ._eaee {_d .Log .Debug ("\u0049\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074ex\u0074\u0052\u0065\u0074\u0061\u0069n\u0065\u0064\u0020\u003d\u0020\u0074\u0072\u0075\u0065\u0020\u0028\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0066\u0061\u006cs\u0065\u0029");
_bbbb ._eaee =false ;};if _bbbb ._bcbe {_d .Log .Debug ("\u0069s\u0043\u006fd\u0069\u006e\u0067\u0043o\u006e\u0074\u0065x\u0074\u0055\u0073\u0065\u0064\u0020\u003d\u0020\u0074ru\u0065\u0020\u0028s\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020f\u0061\u006cs\u0065\u0029");
_bbbb ._bcbe =false ;};};};}else {if _bbbb .SdHuffBMSizeSelection !=0{_d .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066B\u004d\u0053\u0069\u007a\u0065\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_bbbb .SdHuffBMSizeSelection =0;};if _bbbb .SdHuffDecodeWidthSelection !=0{_d .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068\u0053\u0065\u006c\u0065\u0063\u0074\u0069o\u006e\u0020\u0073\u0068\u006fu\u006c\u0064 \u0062\u0065\u0020\u0030");
_bbbb .SdHuffDecodeWidthSelection =0;};if _bbbb .SdHuffDecodeHeightSelection !=0{_d .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0048e\u0069\u0067\u0068\u0074\u0053\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_bbbb .SdHuffDecodeHeightSelection =0;};};if !_bbbb .UseRefinementAggregation {if _bbbb .SdrTemplate !=0{_d .Log .Debug ("\u0053\u0044\u0052\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u003d\u0020\u0025\u0064\u0020\u0028s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_bbbb .SdrTemplate );
_bbbb .SdrTemplate =0;};};if !_bbbb .IsHuffmanEncoded ||!_bbbb .UseRefinementAggregation {if _bbbb .SdHuffAggInstanceSelection {_d .Log .Debug ("\u0053d\u0048\u0075f\u0066\u0041\u0067g\u0049\u006e\u0073\u0074\u0061\u006e\u0063e\u0053\u0065\u006c\u0065\u0063\u0074i\u006f\u006e\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_bbbb .SdHuffAggInstanceSelection );
};};return nil ;};func (_ddggd *TableSegment )parseHeader ()error {var (_afbff int ;_ccaba uint64 ;_afecb error ;);_afbff ,_afecb =_ddggd ._dfeag .ReadBit ();if _afecb !=nil {return _afecb ;};if _afbff ==1{return _fg .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0061\u0062\u006c\u0065 \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0064e\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u002e\u0020\u0042\u002e\u0032\u002e1\u0020\u0043\u006f\u0064\u0065\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0042\u0069\u0074\u0020\u0037\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u007a\u0065\u0072\u006f\u002e\u0020\u0057a\u0073\u003a \u0025\u0064",_afbff );
};if _ccaba ,_afecb =_ddggd ._dfeag .ReadBits (3);_afecb !=nil {return _afecb ;};_ddggd ._edbg =(int32 (_ccaba )+1)&0xf;if _ccaba ,_afecb =_ddggd ._dfeag .ReadBits (3);_afecb !=nil {return _afecb ;};_ddggd ._fcgcg =(int32 (_ccaba )+1)&0xf;if _ccaba ,_afecb =_ddggd ._dfeag .ReadBits (32);
_afecb !=nil {return _afecb ;};_ddggd ._gcff =int32 (_ccaba &_f .MaxInt32 );if _ccaba ,_afecb =_ddggd ._dfeag .ReadBits (32);_afecb !=nil {return _afecb ;};_ddggd ._becf =int32 (_ccaba &_f .MaxInt32 );return nil ;};func (_aega *Header )readHeaderFlags ()error {const _acfb ="\u0072e\u0061d\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006c\u0061\u0067\u0073";
_adcb ,_ebg :=_aega .Reader .ReadBit ();if _ebg !=nil {return _gdga .Wrap (_ebg ,_acfb ,"r\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067");};if _adcb !=0{_aega .RetainFlag =true ;};_adcb ,_ebg =_aega .Reader .ReadBit ();if _ebg !=nil {return _gdga .Wrap (_ebg ,_acfb ,"\u0070\u0061g\u0065\u0020\u0061s\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e");
};if _adcb !=0{_aega .PageAssociationFieldSize =true ;};_bdef ,_ebg :=_aega .Reader .ReadBits (6);if _ebg !=nil {return _gdga .Wrap (_ebg ,_acfb ,"\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065");};_aega .Type =Type (int (_bdef ));
return nil ;};func (_dadg *TextRegion )decodeIb (_acbe ,_dbca int64 )(*_b .Bitmap ,error ){const _edfce ="\u0064\u0065\u0063\u006f\u0064\u0065\u0049\u0062";var (_fdeb error ;_dcbd *_b .Bitmap ;);if _acbe ==0{if int (_dbca )> len (_dadg .Symbols )-1{return nil ,_gdga .Error (_edfce ,"\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0049\u0042\u0020\u0062\u0069\u0074\u006d\u0061\u0070\u002e\u0020\u0069\u006e\u0064\u0065x\u0020\u006f\u0075\u0074\u0020o\u0066\u0020r\u0061\u006e\u0067\u0065");
};return _dadg .Symbols [int (_dbca )],nil ;};var _gfece ,_ccdc ,_efgf ,_ebad int64 ;_gfece ,_fdeb =_dadg .decodeRdw ();if _fdeb !=nil {return nil ,_gdga .Wrap (_fdeb ,_edfce ,"");};_ccdc ,_fdeb =_dadg .decodeRdh ();if _fdeb !=nil {return nil ,_gdga .Wrap (_fdeb ,_edfce ,"");
};_efgf ,_fdeb =_dadg .decodeRdx ();if _fdeb !=nil {return nil ,_gdga .Wrap (_fdeb ,_edfce ,"");};_ebad ,_fdeb =_dadg .decodeRdy ();if _fdeb !=nil {return nil ,_gdga .Wrap (_fdeb ,_edfce ,"");};if _dadg .IsHuffmanEncoded {if _ ,_fdeb =_dadg .decodeSymInRefSize ();
_fdeb !=nil {return nil ,_gdga .Wrap (_fdeb ,_edfce ,"");};_dadg ._bfbb .Align ();};_ggcc :=_dadg .Symbols [_dbca ];_ccca :=uint32 (_ggcc .Width );_febg :=uint32 (_ggcc .Height );_abb :=int32 (uint32 (_gfece )>>1)+int32 (_efgf );_dbde :=int32 (uint32 (_ccdc )>>1)+int32 (_ebad );
if _dadg ._caab ==nil {_dadg ._caab =_afcgc (_dadg ._bfbb ,nil );};_dadg ._caab .setParameters (_dadg ._bdacd ,_dadg ._ggde ,_dadg .SbrTemplate ,_ccca +uint32 (_gfece ),_febg +uint32 (_ccdc ),_ggcc ,_abb ,_dbde ,false ,_dadg .SbrATX ,_dadg .SbrATY );_dcbd ,_fdeb =_dadg ._caab .GetRegionBitmap ();
if _fdeb !=nil {return nil ,_gdga .Wrap (_fdeb ,_edfce ,"\u0067\u0072\u0066");};if _dadg .IsHuffmanEncoded {_dadg ._bfbb .Align ();};return _dcbd ,nil ;};type Pager interface{GetSegment (int )(*Header ,error );GetBitmap ()(*_b .Bitmap ,error );};func (_bggc *PageInformationSegment )readRequiresAuxiliaryBuffer ()error {_cgabd ,_bfg :=_bggc ._fgf .ReadBit ();
if _bfg !=nil {return _bfg ;};if _cgabd ==1{_bggc ._ebaf =true ;};return nil ;};func (_cdc *GenericRegion )overrideAtTemplate3 (_ggba ,_bbfe ,_daacf ,_ggbe ,_bcc int )int {_ggba &=0x3EF;if _cdc .GBAtY [0]==0&&_cdc .GBAtX [0]>=-int8 (_bcc ){_ggba |=(_ggbe >>uint (7-(int8 (_bcc )+_cdc .GBAtX [0]))&0x1)<<4;
}else {_ggba |=int (_cdc .getPixel (_bbfe +int (_cdc .GBAtX [0]),_daacf +int (_cdc .GBAtY [0])))<<4;};return _ggba ;};func (_agaa *TableSegment )HtRS ()int32 {return _agaa ._edbg };var _ SegmentEncoder =&RegionSegment {};func (_abfe *SymbolDictionary )getToExportFlags ()([]int ,error ){var (_dbgeg int ;
_gfge int32 ;_bfbd error ;_fbgac =int32 (_abfe ._gcga +_abfe .NumberOfNewSymbols );_ecde =make ([]int ,_fbgac ););for _gbce :=int32 (0);_gbce < _fbgac ;_gbce +=_gfge {if _abfe .IsHuffmanEncoded {_aecac ,_fba :=_af .GetStandardTable (1);if _fba !=nil {return nil ,_fba ;
};_aga ,_fba :=_aecac .Decode (_abfe ._cfde );if _fba !=nil {return nil ,_fba ;};_gfge =int32 (_aga );}else {_gfge ,_bfbd =_abfe ._dafg .DecodeInt (_abfe ._bdec );if _bfbd !=nil {return nil ,_bfbd ;};};if _gfge !=0{for _adca :=_gbce ;_adca < _gbce +_gfge ;
_adca ++{_ecde [_adca ]=_dbgeg ;};};if _dbgeg ==0{_dbgeg =1;}else {_dbgeg =0;};};return _ecde ,nil ;};func (_efdb *TextRegion )decodeSymbolInstances ()error {_cbaf ,_gcgcd :=_efdb .decodeStripT ();if _gcgcd !=nil {return _gcgcd ;};var (_dgfbc int64 ;_bfab uint32 ;
);for _bfab < _efdb .NumberOfSymbolInstances {_gffba ,_cggg :=_efdb .decodeDT ();if _cggg !=nil {return _cggg ;};_cbaf +=_gffba ;var _affb int64 ;_acgc :=true ;_efdb ._abdga =0;for {if _acgc {_affb ,_cggg =_efdb .decodeDfs ();if _cggg !=nil {return _cggg ;
};_dgfbc +=_affb ;_efdb ._abdga =_dgfbc ;_acgc =false ;}else {_ccdb ,_ggbg :=_efdb .decodeIds ();if _fe .Is (_ggbg ,_ed .ErrOOB ){break ;};if _ggbg !=nil {return _ggbg ;};if _bfab >=_efdb .NumberOfSymbolInstances {break ;};_efdb ._abdga +=_ccdb +int64 (_efdb .SbDsOffset );
};_bcaf ,_ddgff :=_efdb .decodeCurrentT ();if _ddgff !=nil {return _ddgff ;};_ebgd :=_cbaf +_bcaf ;_cgcc ,_ddgff :=_efdb .decodeID ();if _ddgff !=nil {return _ddgff ;};_gba ,_ddgff :=_efdb .decodeRI ();if _ddgff !=nil {return _ddgff ;};_ccag ,_ddgff :=_efdb .decodeIb (_gba ,_cgcc );
if _ddgff !=nil {return _ddgff ;};if _ddgff =_efdb .blit (_ccag ,_ebgd );_ddgff !=nil {return _ddgff ;};_bfab ++;};};return nil ;};const (ORandom OrganizationType =iota ;OSequential ;);func (_afaa *GenericRegion )decodeTemplate1 (_dfd ,_cag ,_gag int ,_deba ,_def int )(_gbf error ){const _aegec ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0031";
var (_bbf ,_face int ;_fbdd ,_ecb int ;_fgbg byte ;_gaeg ,_cff int ;);if _dfd >=1{_fgbg ,_gbf =_afaa .Bitmap .GetByte (_def );if _gbf !=nil {return _gdga .Wrap (_gbf ,_aegec ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_fbdd =int (_fgbg );};if _dfd >=2{_fgbg ,_gbf =_afaa .Bitmap .GetByte (_def -_afaa .Bitmap .RowStride );
if _gbf !=nil {return _gdga .Wrap (_gbf ,_aegec ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_ecb =int (_fgbg )<<5;};_bbf =((_fbdd >>1)&0x1f8)|((_ecb >>1)&0x1e00);for _daac :=0;_daac < _gag ;_daac =_gaeg {var (_ecdd byte ;_bae int ;);_gaeg =_daac +8;
if _fed :=_cag -_daac ;_fed > 8{_bae =8;}else {_bae =_fed ;};if _dfd > 0{_fbdd <<=8;if _gaeg < _cag {_fgbg ,_gbf =_afaa .Bitmap .GetByte (_def +1);if _gbf !=nil {return _gdga .Wrap (_gbf ,_aegec ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_fbdd |=int (_fgbg );
};};if _dfd > 1{_ecb <<=8;if _gaeg < _cag {_fgbg ,_gbf =_afaa .Bitmap .GetByte (_def -_afaa .Bitmap .RowStride +1);if _gbf !=nil {return _gdga .Wrap (_gbf ,_aegec ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_ecb |=int (_fgbg )<<5;};};for _bbad :=0;
_bbad < _bae ;_bbad ++{if _afaa ._dgg {_face =_afaa .overrideAtTemplate1 (_bbf ,_daac +_bbad ,_dfd ,int (_ecdd ),_bbad );_afaa ._bfc .SetIndex (int32 (_face ));}else {_afaa ._bfc .SetIndex (int32 (_bbf ));};_cff ,_gbf =_afaa ._deec .DecodeBit (_afaa ._bfc );
if _gbf !=nil {return _gdga .Wrap (_gbf ,_aegec ,"");};_ecdd |=byte (_cff )<<uint (7-_bbad );_dfe :=uint (8-_bbad );_bbf =((_bbf &0xefb)<<1)|_cff |((_fbdd >>_dfe )&0x8)|((_ecb >>_dfe )&0x200);};if _fbdda :=_afaa .Bitmap .SetByte (_deba ,_ecdd );_fbdda !=nil {return _gdga .Wrap (_fbdda ,_aegec ,"");
};_deba ++;_def ++;};return nil ;};func (_fcaf *TextRegion )getSymbols ()error {if _fcaf .Header .RTSegments !=nil {return _fcaf .initSymbols ();};return nil ;};func (_efg *GenericRegion )overrideAtTemplate1 (_cebe ,_age ,_ace ,_adb ,_gbd int )int {_cebe &=0x1FF7;
if _efg .GBAtY [0]==0&&_efg .GBAtX [0]>=-int8 (_gbd ){_cebe |=(_adb >>uint (7-(int8 (_gbd )+_efg .GBAtX [0]))&0x1)<<3;}else {_cebe |=int (_efg .getPixel (_age +int (_efg .GBAtX [0]),_ace +int (_efg .GBAtY [0])))<<3;};return _cebe ;};func (_edeg *SymbolDictionary )Encode (w _a .BinaryWriter )(_aced int ,_acaff error ){const _bccf ="\u0053\u0079\u006dbo\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0045\u006e\u0063\u006f\u0064\u0065";
if _edeg ==nil {return 0,_gdga .Error (_bccf ,"\u0073\u0079m\u0062\u006f\u006c\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066in\u0065\u0064");};if _aced ,_acaff =_edeg .encodeFlags (w );
_acaff !=nil {return _aced ,_gdga .Wrap (_acaff ,_bccf ,"");};_geac ,_acaff :=_edeg .encodeATFlags (w );if _acaff !=nil {return _aced ,_gdga .Wrap (_acaff ,_bccf ,"");};_aced +=_geac ;if _geac ,_acaff =_edeg .encodeRefinementATFlags (w );_acaff !=nil {return _aced ,_gdga .Wrap (_acaff ,_bccf ,"");
};_aced +=_geac ;if _geac ,_acaff =_edeg .encodeNumSyms (w );_acaff !=nil {return _aced ,_gdga .Wrap (_acaff ,_bccf ,"");};_aced +=_geac ;if _geac ,_acaff =_edeg .encodeSymbols (w );_acaff !=nil {return _aced ,_gdga .Wrap (_acaff ,_bccf ,"");};_aced +=_geac ;
return _aced ,nil ;};func (_cbb *PatternDictionary )GetDictionary ()([]*_b .Bitmap ,error ){if _cbb .Patterns !=nil {return _cbb .Patterns ,nil ;};if !_cbb .IsMMREncoded {_cbb .setGbAtPixels ();};_fegf :=NewGenericRegion (_cbb ._bcd );_fegf .setParametersMMR (_cbb .IsMMREncoded ,_cbb .DataOffset ,_cbb .DataLength ,uint32 (_cbb .HdpHeight ),(_cbb .GrayMax +1)*uint32 (_cbb .HdpWidth ),_cbb .HDTemplate ,false ,false ,_cbb .GBAtX ,_cbb .GBAtY );
_cfce ,_aabe :=_fegf .GetRegionBitmap ();if _aabe !=nil {return nil ,_aabe ;};if _aabe =_cbb .extractPatterns (_cfce );_aabe !=nil {return nil ,_aabe ;};return _cbb .Patterns ,nil ;};func (_dagbc *SymbolDictionary )decodeHeightClassCollectiveBitmap (_bdbe int64 ,_dcb ,_gab uint32 )(*_b .Bitmap ,error ){if _bdbe ==0{_eabd :=_b .New (int (_gab ),int (_dcb ));
var (_cfdb byte ;_gdfb error ;);for _ffgbg :=0;_ffgbg < len (_eabd .Data );_ffgbg ++{_cfdb ,_gdfb =_dagbc ._cfde .ReadByte ();if _gdfb !=nil {return nil ,_gdfb ;};if _gdfb =_eabd .SetByte (_ffgbg ,_cfdb );_gdfb !=nil {return nil ,_gdfb ;};};return _eabd ,nil ;
};if _dagbc ._cdga ==nil {_dagbc ._cdga =NewGenericRegion (_dagbc ._cfde );};_dagbc ._cdga .setParameters (true ,_dagbc ._cfde .StreamPosition (),_bdbe ,_dcb ,_gab );_gafe ,_fcdd :=_dagbc ._cdga .GetRegionBitmap ();if _fcdd !=nil {return nil ,_fcdd ;};
return _gafe ,nil ;};func (_cgff *PageInformationSegment )Init (h *Header ,r _a .StreamReader )(_abdc error ){_cgff ._fgf =r ;if _abdc =_cgff .parseHeader ();_abdc !=nil {return _gdga .Wrap (_abdc ,"P\u0061\u0067\u0065\u0049\u006e\u0066o\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065g\u006d\u0065\u006et\u002eI\u006e\u0069\u0074","");
};return nil ;};func (_ceec *TextRegion )setParameters (_gefg *_ec .Decoder ,_bafe ,_fgfe bool ,_ecgb ,_deeg uint32 ,_fgbd uint32 ,_abec int8 ,_aabb uint32 ,_edcc int8 ,_bebd _b .CombinationOperator ,_gggf int8 ,_aaeff int16 ,_cdab ,_cgdb ,_dabf ,_abda ,_bgeb ,_ggce ,_eede ,_afdf ,_gfdd ,_badc int8 ,_bcaee ,_fagg []int8 ,_eggb []*_b .Bitmap ,_ecgfe int8 ){_ceec ._ggde =_gefg ;
_ceec .IsHuffmanEncoded =_bafe ;_ceec .UseRefinement =_fgfe ;_ceec .RegionInfo .BitmapWidth =_ecgb ;_ceec .RegionInfo .BitmapHeight =_deeg ;_ceec .NumberOfSymbolInstances =_fgbd ;_ceec .SbStrips =_abec ;_ceec .NumberOfSymbols =_aabb ;_ceec .DefaultPixel =_edcc ;
_ceec .CombinationOperator =_bebd ;_ceec .IsTransposed =_gggf ;_ceec .ReferenceCorner =_aaeff ;_ceec .SbDsOffset =_cdab ;_ceec .SbHuffFS =_cgdb ;_ceec .SbHuffDS =_dabf ;_ceec .SbHuffDT =_abda ;_ceec .SbHuffRDWidth =_bgeb ;_ceec .SbHuffRDHeight =_ggce ;
_ceec .SbHuffRSize =_gfdd ;_ceec .SbHuffRDX =_eede ;_ceec .SbHuffRDY =_afdf ;_ceec .SbrTemplate =_badc ;_ceec .SbrATX =_bcaee ;_ceec .SbrATY =_fagg ;_ceec .Symbols =_eggb ;_ceec ._adfb =_ecgfe ;};func (_caf *PatternDictionary )Init (h *Header ,r _a .StreamReader )error {_caf ._bcd =r ;
return _caf .parseHeader ();};func (_bbb *HalftoneRegion )checkInput ()error {if _bbb .IsMMREncoded {if _bbb .HTemplate !=0{_d .Log .Debug ("\u0048\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030",_bbb .HTemplate );
};if _bbb .HSkipEnabled {_d .Log .Debug ("\u0048\u0053\u006b\u0069\u0070\u0045\u006e\u0061\u0062\u006c\u0065\u0064\u0020\u0030\u0020\u0025\u0076\u0020(\u0073\u0068\u006f\u0075\u006c\u0064\u0020c\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020v\u0061\u006c\u0075\u0065\u0020\u0066\u0061\u006c\u0073\u0065\u0029",_bbb .HSkipEnabled );
};};return nil ;};func (_dbc *GenericRefinementRegion )decodeTypicalPredictedLineTemplate1 (_ccc ,_baf ,_dbce ,_dfg ,_agf ,_ece ,_aege ,_efb ,_cce int )(_bfeg error ){var (_beg ,_cbe int ;_afcg ,_afa int ;_edf ,_ab int ;_abf byte ;);if _ccc > 0{_abf ,_bfeg =_dbc .RegionBitmap .GetByte (_aege -_dbce );
if _bfeg !=nil {return ;};_afcg =int (_abf );};if _efb > 0&&_efb <=_dbc .ReferenceBitmap .Height {_abf ,_bfeg =_dbc .ReferenceBitmap .GetByte (_cce -_dfg +_ece );if _bfeg !=nil {return ;};_afa =int (_abf )<<2;};if _efb >=0&&_efb < _dbc .ReferenceBitmap .Height {_abf ,_bfeg =_dbc .ReferenceBitmap .GetByte (_cce +_ece );
if _bfeg !=nil {return ;};_edf =int (_abf );};if _efb > -2&&_efb < _dbc .ReferenceBitmap .Height -1{_abf ,_bfeg =_dbc .ReferenceBitmap .GetByte (_cce +_dfg +_ece );if _bfeg !=nil {return ;};_ab =int (_abf );};_beg =((_afcg >>5)&0x6)|((_ab >>2)&0x30)|(_edf &0xc0)|(_afa &0x200);
_cbe =((_ab >>2)&0x70)|(_edf &0xc0)|(_afa &0x700);var _cbd int ;for _aad :=0;_aad < _agf ;_aad =_cbd {var (_fgg int ;_afg int ;);_cbd =_aad +8;if _fgg =_baf -_aad ;_fgg > 8{_fgg =8;};_aeff :=_cbd < _baf ;_eaa :=_cbd < _dbc .ReferenceBitmap .Width ;_bab :=_ece +1;
if _ccc > 0{_abf =0;if _aeff {_abf ,_bfeg =_dbc .RegionBitmap .GetByte (_aege -_dbce +1);if _bfeg !=nil {return ;};};_afcg =(_afcg <<8)|int (_abf );};if _efb > 0&&_efb <=_dbc .ReferenceBitmap .Height {var _ebd int ;if _eaa {_abf ,_bfeg =_dbc .ReferenceBitmap .GetByte (_cce -_dfg +_bab );
if _bfeg !=nil {return ;};_ebd =int (_abf )<<2;};_afa =(_afa <<8)|_ebd ;};if _efb >=0&&_efb < _dbc .ReferenceBitmap .Height {_abf =0;if _eaa {_abf ,_bfeg =_dbc .ReferenceBitmap .GetByte (_cce +_bab );if _bfeg !=nil {return ;};};_edf =(_edf <<8)|int (_abf );
};if _efb > -2&&_efb < (_dbc .ReferenceBitmap .Height -1){_abf =0;if _eaa {_abf ,_bfeg =_dbc .ReferenceBitmap .GetByte (_cce +_dfg +_bab );if _bfeg !=nil {return ;};};_ab =(_ab <<8)|int (_abf );};for _gfe :=0;_gfe < _fgg ;_gfe ++{var _fbe int ;_daa :=(_cbe >>4)&0x1ff;
switch _daa {case 0x1ff:_fbe =1;case 0x00:_fbe =0;default:_dbc ._fa .SetIndex (int32 (_beg ));_fbe ,_bfeg =_dbc ._fc .DecodeBit (_dbc ._fa );if _bfeg !=nil {return ;};};_dfc :=uint (7-_gfe );_afg |=_fbe <<_dfc ;_beg =((_beg &0x0d6)<<1)|_fbe |(_afcg >>_dfc +5)&0x002|((_ab >>_dfc +2)&0x010)|((_edf >>_dfc )&0x040)|((_afa >>_dfc )&0x200);
_cbe =((_cbe &0xdb)<<1)|((_ab >>_dfc +2)&0x010)|((_edf >>_dfc )&0x080)|((_afa >>_dfc )&0x400);};_bfeg =_dbc .RegionBitmap .SetByte (_aege ,byte (_afg ));if _bfeg !=nil {return ;};_aege ++;_cce ++;};return nil ;};func (_fdea *Header )readHeaderLength (_fdef _a .StreamReader ,_aeea int64 ){_fdea .HeaderLength =_fdef .StreamPosition ()-_aeea ;
};func (_ffab *SymbolDictionary )getUserTable (_aecfb int )(_af .Tabler ,error ){var _bcgb int ;for _ ,_adcc :=range _ffab .Header .RTSegments {if _adcc .Type ==53{if _bcgb ==_aecfb {_adcf ,_fecd :=_adcc .GetSegmentData ();if _fecd !=nil {return nil ,_fecd ;
};_cfcab :=_adcf .(_af .BasicTabler );return _af .NewEncodedTable (_cfcab );};_bcgb ++;};};return nil ,nil ;};func (_cffb *TableSegment )StreamReader ()_a .StreamReader {return _cffb ._dfeag };func (_fgec *SymbolDictionary )readRegionFlags ()error {var (_dadd uint64 ;
_gaee int ;);_ ,_bcac :=_fgec ._cfde .ReadBits (3);if _bcac !=nil {return _bcac ;};_gaee ,_bcac =_fgec ._cfde .ReadBit ();if _bcac !=nil {return _bcac ;};_fgec .SdrTemplate =int8 (_gaee );_dadd ,_bcac =_fgec ._cfde .ReadBits (2);if _bcac !=nil {return _bcac ;
};_fgec .SdTemplate =int8 (_dadd &0xf);_gaee ,_bcac =_fgec ._cfde .ReadBit ();if _bcac !=nil {return _bcac ;};if _gaee ==1{_fgec ._eaee =true ;};_gaee ,_bcac =_fgec ._cfde .ReadBit ();if _bcac !=nil {return _bcac ;};if _gaee ==1{_fgec ._bcbe =true ;};_gaee ,_bcac =_fgec ._cfde .ReadBit ();
if _bcac !=nil {return _bcac ;};if _gaee ==1{_fgec .SdHuffAggInstanceSelection =true ;};_gaee ,_bcac =_fgec ._cfde .ReadBit ();if _bcac !=nil {return _bcac ;};_fgec .SdHuffBMSizeSelection =int8 (_gaee );_dadd ,_bcac =_fgec ._cfde .ReadBits (2);if _bcac !=nil {return _bcac ;
};_fgec .SdHuffDecodeWidthSelection =int8 (_dadd &0xf);_dadd ,_bcac =_fgec ._cfde .ReadBits (2);if _bcac !=nil {return _bcac ;};_fgec .SdHuffDecodeHeightSelection =int8 (_dadd &0xf);_gaee ,_bcac =_fgec ._cfde .ReadBit ();if _bcac !=nil {return _bcac ;};
if _gaee ==1{_fgec .UseRefinementAggregation =true ;};_gaee ,_bcac =_fgec ._cfde .ReadBit ();if _bcac !=nil {return _bcac ;};if _gaee ==1{_fgec .IsHuffmanEncoded =true ;};return nil ;};func (_fefca *PageInformationSegment )encodeFlags (_efdc _a .BinaryWriter )(_eebef error ){const _gfeaa ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _eebef =_efdc .SkipBits (1);_eebef !=nil {return _gdga .Wrap (_eebef ,_gfeaa ,"\u0072\u0065\u0073e\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074");};var _ecgf int ;if _fefca .CombinationOperatorOverrideAllowed (){_ecgf =1;};if _eebef =_efdc .WriteBit (_ecgf );
_eebef !=nil {return _gdga .Wrap (_eebef ,_gfeaa ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0064\u0065\u006e");};_ecgf =0;if _fefca ._ebaf {_ecgf =1;
};if _eebef =_efdc .WriteBit (_ecgf );_eebef !=nil {return _gdga .Wrap (_eebef ,_gfeaa ,"\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0061\u0075\u0078i\u006ci\u0061r\u0079\u0020\u0062\u0075\u0066\u0066\u0065r");};if _eebef =_efdc .WriteBit ((int (_fefca ._ebaef )>>1)&0x01);
_eebef !=nil {return _gdga .Wrap (_eebef ,_gfeaa ,"\u0063\u006f\u006d\u0062\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006f\u0070\u0065\u0072\u0061\u0074o\u0072\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0062\u0069\u0074");};if _eebef =_efdc .WriteBit (int (_fefca ._ebaef )&0x01);
_eebef !=nil {return _gdga .Wrap (_eebef ,_gfeaa ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0062\u0069\u0074");};_ecgf =int (_fefca .DefaultPixelValue );
if _eebef =_efdc .WriteBit (_ecgf );_eebef !=nil {return _gdga .Wrap (_eebef ,_gfeaa ,"\u0064e\u0066\u0061\u0075\u006c\u0074\u0020\u0070\u0061\u0067\u0065\u0020p\u0069\u0078\u0065\u006c\u0020\u0076\u0061\u006c\u0075\u0065");};_ecgf =0;if _fefca ._agfe {_ecgf =1;
};if _eebef =_efdc .WriteBit (_ecgf );_eebef !=nil {return _gdga .Wrap (_eebef ,_gfeaa ,"\u0063\u006f\u006e\u0074ai\u006e\u0073\u0020\u0072\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074");};_ecgf =0;if _fefca .IsLossless {_ecgf =1;};if _eebef =_efdc .WriteBit (_ecgf );
_eebef !=nil {return _gdga .Wrap (_eebef ,_gfeaa ,"p\u0061\u0067\u0065\u0020\u0069\u0073 \u0065\u0076\u0065\u006e\u0074\u0075\u0061\u006c\u006cy\u0020\u006c\u006fs\u0073l\u0065\u0073\u0073");};return nil ;};func (_ddac *SymbolDictionary )huffDecodeRefAggNInst ()(int64 ,error ){if !_ddac .SdHuffAggInstanceSelection {_eace ,_debf :=_af .GetStandardTable (1);
if _debf !=nil {return 0,_debf ;};return _eace .Decode (_ddac ._cfde );};if _ddac ._deag ==nil {var (_dbgg int ;_gfag error ;);if _ddac .SdHuffDecodeHeightSelection ==3{_dbgg ++;};if _ddac .SdHuffDecodeWidthSelection ==3{_dbgg ++;};if _ddac .SdHuffBMSizeSelection ==3{_dbgg ++;
};_ddac ._deag ,_gfag =_ddac .getUserTable (_dbgg );if _gfag !=nil {return 0,_gfag ;};};return _ddac ._deag .Decode (_ddac ._cfde );};func (_dcae *RegionSegment )String ()string {_fbb :=&_gdg .Builder {};_fbb .WriteString ("\u0009[\u0052E\u0047\u0049\u004f\u004e\u0020S\u0045\u0047M\u0045\u004e\u0054\u005d\u000a");
_fbb .WriteString (_fg .Sprintf ("\t\u0009\u002d\u0020\u0042\u0069\u0074m\u0061\u0070\u0020\u0028\u0077\u0069d\u0074\u0068\u002c\u0020\u0068\u0065\u0069g\u0068\u0074\u0029\u0020\u005b\u0025\u0064\u0078\u0025\u0064]\u000a",_dcae .BitmapWidth ,_dcae .BitmapHeight ));
_fbb .WriteString (_fg .Sprintf ("\u0009\u0009\u002d\u0020L\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0028\u0078,\u0079)\u003a\u0020\u005b\u0025\u0064\u002c\u0025d\u005d\u000a",_dcae .XLocation ,_dcae .YLocation ));_fbb .WriteString (_fg .Sprintf ("\t\u0009\u002d\u0020\u0043\u006f\u006db\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070e\u0072\u0061\u0074o\u0072:\u0020\u0025\u0073",_dcae .CombinaionOperator ));
return _fbb .String ();};func (_gfgf *GenericRegion )getPixel (_ffaf ,_cdgc int )int8 {if _ffaf < 0||_ffaf >=_gfgf .Bitmap .Width {return 0;};if _cdgc < 0||_cdgc >=_gfgf .Bitmap .Height {return 0;};if _gfgf .Bitmap .GetPixel (_ffaf ,_cdgc ){return 1;};
return 0;};func (_eadg *TextRegion )checkInput ()error {const _eggeb ="\u0063\u0068\u0065\u0063\u006b\u0049\u006e\u0070\u0075\u0074";if !_eadg .UseRefinement {if _eadg .SbrTemplate !=0{_d .Log .Debug ("\u0053\u0062\u0072Te\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");
_eadg .SbrTemplate =0;};};if _eadg .SbHuffFS ==2||_eadg .SbHuffRDWidth ==2||_eadg .SbHuffRDHeight ==2||_eadg .SbHuffRDX ==2||_eadg .SbHuffRDY ==2{return _gdga .Error (_eggeb ,"h\u0075\u0066\u0066\u006d\u0061\u006e \u0066\u006c\u0061\u0067\u0020\u0076a\u006c\u0075\u0065\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074e\u0064");
};if !_eadg .UseRefinement {if _eadg .SbHuffRSize !=0{_d .Log .Debug ("\u0053\u0062\u0048uf\u0066\u0052\u0053\u0069\u007a\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_eadg .SbHuffRSize =0;};if _eadg .SbHuffRDY !=0{_d .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044Y\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");
_eadg .SbHuffRDY =0;};if _eadg .SbHuffRDX !=0{_d .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044X\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_eadg .SbHuffRDX =0;};if _eadg .SbHuffRDWidth !=0{_d .Log .Debug ("\u0053b\u0048\u0075\u0066\u0066R\u0044\u0057\u0069\u0064\u0074h\u0020s\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u00200");
_eadg .SbHuffRDWidth =0;};if _eadg .SbHuffRDHeight !=0{_d .Log .Debug ("\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069g\u0068\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0030");_eadg .SbHuffRDHeight =0;};};return nil ;
};func (_ffd *template1 )form (_cbc ,_cge ,_ffg ,_afca ,_add int16 )int16 {return ((_cbc &0x02)<<8)|(_cge <<6)|((_ffg &0x03)<<4)|(_afca <<1)|_add ;};func (_ddca *PageInformationSegment )readResolution ()error {_ddga ,_egfd :=_ddca ._fgf .ReadBits (32);
if _egfd !=nil {return _egfd ;};_ddca .ResolutionX =int (_ddga &_f .MaxInt32 );_ddga ,_egfd =_ddca ._fgf .ReadBits (32);if _egfd !=nil {return _egfd ;};_ddca .ResolutionY =int (_ddga &_f .MaxInt32 );return nil ;};func (_cfee *GenericRegion )computeSegmentDataStructure ()error {_cfee .DataOffset =_cfee ._egfg .StreamPosition ();
_cfee .DataHeaderLength =_cfee .DataOffset -_cfee .DataHeaderOffset ;_cfee .DataLength =int64 (_cfee ._egfg .Length ())-_cfee .DataHeaderLength ;return nil ;};type Regioner interface{GetRegionBitmap ()(*_b .Bitmap ,error );GetRegionInfo ()*RegionSegment ;
};func (_dgdeg *SymbolDictionary )encodeNumSyms (_edcb _a .BinaryWriter )(_bdac int ,_bggg error ){const _cbcbd ="\u0065\u006e\u0063\u006f\u0064\u0065\u004e\u0075\u006d\u0053\u0079\u006d\u0073";_cef :=make ([]byte ,4);_ef .BigEndian .PutUint32 (_cef ,_dgdeg .NumberOfExportedSymbols );
if _bdac ,_bggg =_edcb .Write (_cef );_bggg !=nil {return _bdac ,_gdga .Wrap (_bggg ,_cbcbd ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};_ef .BigEndian .PutUint32 (_cef ,_dgdeg .NumberOfNewSymbols );_eeca ,_bggg :=_edcb .Write (_cef );
if _bggg !=nil {return _bdac ,_gdga .Wrap (_bggg ,_cbcbd ,"n\u0065\u0077\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};return _bdac +_eeca ,nil ;};func (_ccdf *PatternDictionary )readPatternWidthAndHeight ()error {_dbba ,_bgb :=_ccdf ._bcd .ReadByte ();
if _bgb !=nil {return _bgb ;};_ccdf .HdpWidth =_dbba ;_dbba ,_bgb =_ccdf ._bcd .ReadByte ();if _bgb !=nil {return _bgb ;};_ccdf .HdpHeight =_dbba ;return nil ;};type SymbolDictionary struct{_cfde _a .StreamReader ;SdrTemplate int8 ;SdTemplate int8 ;_eaee bool ;
_bcbe bool ;SdHuffAggInstanceSelection bool ;SdHuffBMSizeSelection int8 ;SdHuffDecodeWidthSelection int8 ;SdHuffDecodeHeightSelection int8 ;UseRefinementAggregation bool ;IsHuffmanEncoded bool ;SdATX []int8 ;SdATY []int8 ;SdrATX []int8 ;SdrATY []int8 ;
NumberOfExportedSymbols uint32 ;NumberOfNewSymbols uint32 ;Header *Header ;_gcga uint32 ;_bbc []*_b .Bitmap ;_bffb uint32 ;_gfgb []*_b .Bitmap ;_fgfa _af .Tabler ;_beb _af .Tabler ;_aebe _af .Tabler ;_deag _af .Tabler ;_fbcb []*_b .Bitmap ;_cdcg []*_b .Bitmap ;
_dafg *_ec .Decoder ;_daae *TextRegion ;_cdga *GenericRegion ;_caff *GenericRefinementRegion ;_ggfe *_ec .DecoderStats ;_bdfd *_ec .DecoderStats ;_fada *_ec .DecoderStats ;_fdcdg *_ec .DecoderStats ;_bdec *_ec .DecoderStats ;_cbab *_ec .DecoderStats ;_eebc *_ec .DecoderStats ;
_abcd *_ec .DecoderStats ;_eggd *_ec .DecoderStats ;_dfda int8 ;_dfac *_b .Bitmaps ;_gbff []int ;_efgg map[int ]int ;_bbfg bool ;};func (_edcgcc *SymbolDictionary )setSymbolsArray ()error {if _edcgcc ._bbc ==nil {if _eafa :=_edcgcc .retrieveImportSymbols ();
_eafa !=nil {return _eafa ;};};if _edcgcc ._cdcg ==nil {_edcgcc ._cdcg =append (_edcgcc ._cdcg ,_edcgcc ._bbc ...);};return nil ;};func (_ggea *HalftoneRegion )computeY (_acee ,_dcfe int )int {return _ggea .shiftAndFill (int (_ggea .HGridY )+_acee *int (_ggea .HRegionX )-_dcfe *int (_ggea .HRegionY ));
};func (_cbcd *SymbolDictionary )readRefinementAtPixels (_cbeb int )error {_cbcd .SdrATX =make ([]int8 ,_cbeb );_cbcd .SdrATY =make ([]int8 ,_cbeb );var (_aaaf byte ;_cae error ;);for _aedd :=0;_aedd < _cbeb ;_aedd ++{_aaaf ,_cae =_cbcd ._cfde .ReadByte ();
if _cae !=nil {return _cae ;};_cbcd .SdrATX [_aedd ]=int8 (_aaaf );_aaaf ,_cae =_cbcd ._cfde .ReadByte ();if _cae !=nil {return _cae ;};_cbcd .SdrATY [_aedd ]=int8 (_aaaf );};return nil ;};type templater interface{form (_ecd ,_fggb ,_fdd ,_bdgc ,_dcg int16 )int16 ;
setIndex (_decf *_ec .DecoderStats );};func (_cdeb *SymbolDictionary )huffDecodeBmSize ()(int64 ,error ){if _cdeb ._aebe ==nil {var (_dbgb int ;_cbabg error ;);if _cdeb .SdHuffDecodeHeightSelection ==3{_dbgb ++;};if _cdeb .SdHuffDecodeWidthSelection ==3{_dbgb ++;
};_cdeb ._aebe ,_cbabg =_cdeb .getUserTable (_dbgb );if _cbabg !=nil {return 0,_cbabg ;};};return _cdeb ._aebe .Decode (_cdeb ._cfde );};func (_ebc *GenericRegion )decodeTemplate0b (_dagb ,_gaf ,_eadf int ,_gdcd ,_ceg int )(_bga error ){const _gdgae ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0062";
var (_ggf ,_eaed int ;_deca ,_afcf int ;_baa byte ;_aac int ;);if _dagb >=1{_baa ,_bga =_ebc .Bitmap .GetByte (_ceg );if _bga !=nil {return _gdga .Wrap (_bga ,_gdgae ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_deca =int (_baa );};if _dagb >=2{_baa ,_bga =_ebc .Bitmap .GetByte (_ceg -_ebc .Bitmap .RowStride );
if _bga !=nil {return _gdga .Wrap (_bga ,_gdgae ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_afcf =int (_baa )<<6;};_ggf =(_deca &0xf0)|(_afcf &0x3800);for _fagf :=0;_fagf < _eadf ;_fagf =_aac {var (_eab byte ;_cbf int ;);_aac =_fagf +8;if _aggd :=_gaf -_fagf ;
_aggd > 8{_cbf =8;}else {_cbf =_aggd ;};if _dagb > 0{_deca <<=8;if _aac < _gaf {_baa ,_bga =_ebc .Bitmap .GetByte (_ceg +1);if _bga !=nil {return _gdga .Wrap (_bga ,_gdgae ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_deca |=int (_baa );};};if _dagb > 1{_afcf <<=8;
if _aac < _gaf {_baa ,_bga =_ebc .Bitmap .GetByte (_ceg -_ebc .Bitmap .RowStride +1);if _bga !=nil {return _gdga .Wrap (_bga ,_gdgae ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_afcf |=int (_baa )<<6;};};for _bdc :=0;_bdc < _cbf ;_bdc ++{_cbfc :=uint (7-_bdc );
if _ebc ._dgg {_eaed =_ebc .overrideAtTemplate0b (_ggf ,_fagf +_bdc ,_dagb ,int (_eab ),_bdc ,int (_cbfc ));_ebc ._bfc .SetIndex (int32 (_eaed ));}else {_ebc ._bfc .SetIndex (int32 (_ggf ));};var _bac int ;_bac ,_bga =_ebc ._deec .DecodeBit (_ebc ._bfc );
if _bga !=nil {return _gdga .Wrap (_bga ,_gdgae ,"");};_eab |=byte (_bac <<_cbfc );_ggf =((_ggf &0x7bf7)<<1)|_bac |((_deca >>_cbfc )&0x10)|((_afcf >>_cbfc )&0x800);};if _ccbg :=_ebc .Bitmap .SetByte (_gdcd ,_eab );_ccbg !=nil {return _gdga .Wrap (_ccbg ,_gdgae ,"");
};_gdcd ++;_ceg ++;};return nil ;};func (_ceda *Header )readSegmentNumber (_fcaa _a .StreamReader )error {const _abfb ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";_adcg :=make ([]byte ,4);_ ,_bged :=_fcaa .Read (_adcg );
if _bged !=nil {return _gdga .Wrap (_bged ,_abfb ,"");};_ceda .SegmentNumber =_ef .BigEndian .Uint32 (_adcg );return nil ;};type TableSegment struct{_dfeag _a .StreamReader ;_eegff int32 ;_fcgcg int32 ;_edbg int32 ;_gcff int32 ;_becf int32 ;};func (_fgbcc *SymbolDictionary )GetDictionary ()([]*_b .Bitmap ,error ){_d .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c-\u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){_d .Log .Trace ("\u005b\u0053\u0059M\u0042\u004f\u004c\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
_d .Log .Trace ("\u005b\u0053Y\u004d\u0042\u004f\u004c\u002dD\u0049\u0043\u0054\u0049\u004fN\u0041\u0052\u0059\u005d\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020\u000a\u0045\u0078\u003a\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u000a\u006e\u0065\u0077\u003a\u0027\u0025\u0073\u0027",_fgbcc ._fbcb ,_fgbcc ._gfgb );
}();if _fgbcc ._fbcb ==nil {var _acgf error ;if _fgbcc .UseRefinementAggregation {_fgbcc ._dfda =_fgbcc .getSbSymCodeLen ();};if !_fgbcc .IsHuffmanEncoded {if _acgf =_fgbcc .setCodingStatistics ();_acgf !=nil {return nil ,_acgf ;};};_fgbcc ._gfgb =make ([]*_b .Bitmap ,_fgbcc .NumberOfNewSymbols );
var _eecae []int ;if _fgbcc .IsHuffmanEncoded &&!_fgbcc .UseRefinementAggregation {_eecae =make ([]int ,_fgbcc .NumberOfNewSymbols );};if _acgf =_fgbcc .setSymbolsArray ();_acgf !=nil {return nil ,_acgf ;};var _cadb ,_egbf int64 ;_fgbcc ._bffb =0;for _fgbcc ._bffb < _fgbcc .NumberOfNewSymbols {_egbf ,_acgf =_fgbcc .decodeHeightClassDeltaHeight ();
if _acgf !=nil {return nil ,_acgf ;};_cadb +=_egbf ;var _gegd ,_dfae uint32 ;_gbcdf :=int64 (_fgbcc ._bffb );for {var _fgae int64 ;_fgae ,_acgf =_fgbcc .decodeDifferenceWidth ();if _fe .Is (_acgf ,_ed .ErrOOB ){break ;};if _acgf !=nil {return nil ,_acgf ;
};if _fgbcc ._bffb >=_fgbcc .NumberOfNewSymbols {break ;};_gegd +=uint32 (_fgae );_dfae +=_gegd ;if !_fgbcc .IsHuffmanEncoded ||_fgbcc .UseRefinementAggregation {if !_fgbcc .UseRefinementAggregation {_acgf =_fgbcc .decodeDirectlyThroughGenericRegion (_gegd ,uint32 (_cadb ));
if _acgf !=nil {return nil ,_acgf ;};}else {_acgf =_fgbcc .decodeAggregate (_gegd ,uint32 (_cadb ));if _acgf !=nil {return nil ,_acgf ;};};}else if _fgbcc .IsHuffmanEncoded &&!_fgbcc .UseRefinementAggregation {_eecae [_fgbcc ._bffb ]=int (_gegd );};_fgbcc ._bffb ++;
};if _fgbcc .IsHuffmanEncoded &&!_fgbcc .UseRefinementAggregation {var _dggb int64 ;if _fgbcc .SdHuffBMSizeSelection ==0{var _cabg _af .Tabler ;_cabg ,_acgf =_af .GetStandardTable (1);if _acgf !=nil {return nil ,_acgf ;};_dggb ,_acgf =_cabg .Decode (_fgbcc ._cfde );
if _acgf !=nil {return nil ,_acgf ;};}else {_dggb ,_acgf =_fgbcc .huffDecodeBmSize ();if _acgf !=nil {return nil ,_acgf ;};};_fgbcc ._cfde .Align ();var _bdb *_b .Bitmap ;_bdb ,_acgf =_fgbcc .decodeHeightClassCollectiveBitmap (_dggb ,uint32 (_cadb ),_dfae );
if _acgf !=nil {return nil ,_acgf ;};_acgf =_fgbcc .decodeHeightClassBitmap (_bdb ,_gbcdf ,int (_cadb ),_eecae );if _acgf !=nil {return nil ,_acgf ;};};};_gadd ,_acgf :=_fgbcc .getToExportFlags ();if _acgf !=nil {return nil ,_acgf ;};_fgbcc .setExportedSymbols (_gadd );
};return _fgbcc ._fbcb ,nil ;};func NewRegionSegment (r _a .StreamReader )*RegionSegment {return &RegionSegment {_gdba :r }};func (_fbc *Header )parse (_aabd Documenter ,_eee _a .StreamReader ,_gagf int64 ,_bbbd OrganizationType )(_egda error ){const _gbdb ="\u0070\u0061\u0072s\u0065";
_d .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u005b\u0050A\u0052\u0053\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _egda !=nil {_d .Log .Trace ("\u005b\u0053\u0045GM\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045R\u005d[\u0050A\u0052S\u0045\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_egda );
}else {_d .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052]\u005bP\u0041\u0052\u0053\u0045\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");};}();_ ,_egda =_eee .Seek (_gagf ,_eg .SeekStart );
if _egda !=nil {return _gdga .Wrap (_egda ,_gbdb ,"\u0073\u0065\u0065\u006b\u0020\u0073\u0074\u0061\u0072\u0074");};if _egda =_fbc .readSegmentNumber (_eee );_egda !=nil {return _gdga .Wrap (_egda ,_gbdb ,"");};if _egda =_fbc .readHeaderFlags ();_egda !=nil {return _gdga .Wrap (_egda ,_gbdb ,"");
};var _edba uint64 ;_edba ,_egda =_fbc .readNumberOfReferredToSegments (_eee );if _egda !=nil {return _gdga .Wrap (_egda ,_gbdb ,"");};_fbc .RTSNumbers ,_egda =_fbc .readReferredToSegmentNumbers (_eee ,int (_edba ));if _egda !=nil {return _gdga .Wrap (_egda ,_gbdb ,"");
};_egda =_fbc .readSegmentPageAssociation (_aabd ,_eee ,_edba ,_fbc .RTSNumbers ...);if _egda !=nil {return _gdga .Wrap (_egda ,_gbdb ,"");};if _fbc .Type !=TEndOfFile {if _egda =_fbc .readSegmentDataLength (_eee );_egda !=nil {return _gdga .Wrap (_egda ,_gbdb ,"");
};};_fbc .readDataStartOffset (_eee ,_bbbd );_fbc .readHeaderLength (_eee ,_gagf );_d .Log .Trace ("\u0025\u0073",_fbc );return nil ;};func (_fbga *PageInformationSegment )CombinationOperatorOverrideAllowed ()bool {return _fbga ._dgab };func (_ada *GenericRegion )setParametersWithAt (_ddec bool ,_cedbe byte ,_dgba ,_ecec bool ,_ccef ,_cfae []int8 ,_fadd ,_gdcb uint32 ,_dfeg *_ec .DecoderStats ,_eeb *_ec .Decoder ){_ada .IsMMREncoded =_ddec ;
_ada .GBTemplate =_cedbe ;_ada .IsTPGDon =_dgba ;_ada .GBAtX =_ccef ;_ada .GBAtY =_cfae ;_ada .RegionSegment .BitmapHeight =_gdcb ;_ada .RegionSegment .BitmapWidth =_fadd ;_ada ._dbga =nil ;_ada .Bitmap =nil ;if _dfeg !=nil {_ada ._bfc =_dfeg ;};if _eeb !=nil {_ada ._deec =_eeb ;
};_d .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049O\u004e\u005d\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073\u0020\u0053\u0044\u0041t\u003a\u0020\u0025\u0073",_ada );};type PageInformationSegment struct{_fgf _a .StreamReader ;
PageBMHeight int ;PageBMWidth int ;ResolutionX int ;ResolutionY int ;_dgab bool ;_ebaef _b .CombinationOperator ;_ebaf bool ;DefaultPixelValue uint8 ;_agfe bool ;IsLossless bool ;IsStripe bool ;MaxStripeSize uint16 ;};func (_bgbd *SymbolDictionary )readAtPixels (_ccae int )error {_bgbd .SdATX =make ([]int8 ,_ccae );
_bgbd .SdATY =make ([]int8 ,_ccae );var (_dccf byte ;_dbgd error ;);for _ebecb :=0;_ebecb < _ccae ;_ebecb ++{_dccf ,_dbgd =_bgbd ._cfde .ReadByte ();if _dbgd !=nil {return _dbgd ;};_bgbd .SdATX [_ebecb ]=int8 (_dccf );_dccf ,_dbgd =_bgbd ._cfde .ReadByte ();
if _dbgd !=nil {return _dbgd ;};_bgbd .SdATY [_ebecb ]=int8 (_dccf );};return nil ;};func (_gae *GenericRegion )decodeLine (_fgbeb ,_ded ,_afb int )error {const _eaf ="\u0064\u0065\u0063\u006f\u0064\u0065\u004c\u0069\u006e\u0065";_dge :=_gae .Bitmap .GetByteIndex (0,_fgbeb );
_aebd :=_dge -_gae .Bitmap .RowStride ;switch _gae .GBTemplate {case 0:if !_gae .UseExtTemplates {return _gae .decodeTemplate0a (_fgbeb ,_ded ,_afb ,_dge ,_aebd );};return _gae .decodeTemplate0b (_fgbeb ,_ded ,_afb ,_dge ,_aebd );case 1:return _gae .decodeTemplate1 (_fgbeb ,_ded ,_afb ,_dge ,_aebd );
case 2:return _gae .decodeTemplate2 (_fgbeb ,_ded ,_afb ,_dge ,_aebd );case 3:return _gae .decodeTemplate3 (_fgbeb ,_ded ,_afb ,_dge ,_aebd );};return _gdga .Errorf (_eaf ,"\u0069\u006e\u0076a\u006c\u0069\u0064\u0020G\u0042\u0054\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u003a\u0020\u0025\u0064",_gae .GBTemplate );
};func (_acaf *PatternDictionary )computeSegmentDataStructure ()error {_acaf .DataOffset =_acaf ._bcd .StreamPosition ();_acaf .DataHeaderLength =_acaf .DataOffset -_acaf .DataHeaderOffset ;_acaf .DataLength =int64 (_acaf ._bcd .Length ())-_acaf .DataHeaderLength ;
return nil ;};func (_fdfc *PageInformationSegment )readDefaultPixelValue ()error {_cadc ,_dgee :=_fdfc ._fgf .ReadBit ();if _dgee !=nil {return _dgee ;};_fdfc .DefaultPixelValue =uint8 (_cadc &0xf);return nil ;};func _gaea (_babb _a .StreamReader ,_baec *Header )*TextRegion {_abbb :=&TextRegion {_bfbb :_babb ,Header :_baec ,RegionInfo :NewRegionSegment (_babb )};
return _abbb ;};func (_aca *GenericRegion )overrideAtTemplate0a (_dfdf ,_dad ,_aaea ,_ffafg ,_cec ,_egg int )int {if _aca .GBAtOverride [0]{_dfdf &=0xFFEF;if _aca .GBAtY [0]==0&&_aca .GBAtX [0]>=-int8 (_cec ){_dfdf |=(_ffafg >>uint (int8 (_egg )-_aca .GBAtX [0]&0x1))<<4;
}else {_dfdf |=int (_aca .getPixel (_dad +int (_aca .GBAtX [0]),_aaea +int (_aca .GBAtY [0])))<<4;};};if _aca .GBAtOverride [1]{_dfdf &=0xFBFF;if _aca .GBAtY [1]==0&&_aca .GBAtX [1]>=-int8 (_cec ){_dfdf |=(_ffafg >>uint (int8 (_egg )-_aca .GBAtX [1]&0x1))<<10;
}else {_dfdf |=int (_aca .getPixel (_dad +int (_aca .GBAtX [1]),_aaea +int (_aca .GBAtY [1])))<<10;};};if _aca .GBAtOverride [2]{_dfdf &=0xF7FF;if _aca .GBAtY [2]==0&&_aca .GBAtX [2]>=-int8 (_cec ){_dfdf |=(_ffafg >>uint (int8 (_egg )-_aca .GBAtX [2]&0x1))<<11;
}else {_dfdf |=int (_aca .getPixel (_dad +int (_aca .GBAtX [2]),_aaea +int (_aca .GBAtY [2])))<<11;};};if _aca .GBAtOverride [3]{_dfdf &=0x7FFF;if _aca .GBAtY [3]==0&&_aca .GBAtX [3]>=-int8 (_cec ){_dfdf |=(_ffafg >>uint (int8 (_egg )-_aca .GBAtX [3]&0x1))<<15;
}else {_dfdf |=int (_aca .getPixel (_dad +int (_aca .GBAtX [3]),_aaea +int (_aca .GBAtY [3])))<<15;};};return _dfdf ;};func (_dfec *TextRegion )readUseRefinement ()error {if !_dfec .UseRefinement ||_dfec .SbrTemplate !=0{return nil ;};var (_efafe byte ;
_acbg error ;);_dfec .SbrATX =make ([]int8 ,2);_dfec .SbrATY =make ([]int8 ,2);_efafe ,_acbg =_dfec ._bfbb .ReadByte ();if _acbg !=nil {return _acbg ;};_dfec .SbrATX [0]=int8 (_efafe );_efafe ,_acbg =_dfec ._bfbb .ReadByte ();if _acbg !=nil {return _acbg ;
};_dfec .SbrATY [0]=int8 (_efafe );_efafe ,_acbg =_dfec ._bfbb .ReadByte ();if _acbg !=nil {return _acbg ;};_dfec .SbrATX [1]=int8 (_efafe );_efafe ,_acbg =_dfec ._bfbb .ReadByte ();if _acbg !=nil {return _acbg ;};_dfec .SbrATY [1]=int8 (_efafe );return nil ;
};func (_eade *GenericRefinementRegion )parseHeader ()(_cced error ){_d .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0048e\u0061\u0064e\u0072\u002e\u002e\u002e");
_bba :=_gd .Now ();defer func (){if _cced ==nil {_d .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045G\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020h\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0069\u006e\u0069\u0073\u0068id\u0020\u0069\u006e\u003a\u0020\u0025\u0064\u0020\u006e\u0073",_gd .Since (_bba ).Nanoseconds ());
}else {_d .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0068\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0073",_cced );
};}();if _cced =_eade .RegionInfo .parseHeader ();_cced !=nil {return _cced ;};_ ,_cced =_eade ._eb .ReadBits (6);if _cced !=nil {return _cced ;};_eade .IsTPGROn ,_cced =_eade ._eb .ReadBool ();if _cced !=nil {return _cced ;};var _ggc int ;_ggc ,_cced =_eade ._eb .ReadBit ();
if _cced !=nil {return _cced ;};_eade .TemplateID =int8 (_ggc );switch _eade .TemplateID {case 0:_eade .Template =_eade ._gc ;if _cced =_eade .readAtPixels ();_cced !=nil {return ;};case 1:_eade .Template =_eade ._gca ;};return nil ;};type SegmentEncoder interface{Encode (_ddcb _a .BinaryWriter )(_fdfd int ,_ddea error );
};func NewHeader (d Documenter ,r _a .StreamReader ,offset int64 ,organizationType OrganizationType )(*Header ,error ){_adad :=&Header {Reader :r };if _eefd :=_adad .parse (d ,r ,offset ,organizationType );_eefd !=nil {return nil ,_gdga .Wrap (_eefd ,"\u004ee\u0077\u0048\u0065\u0061\u0064\u0065r","");
};return _adad ,nil ;};func (_ccb *GenericRefinementRegion )getGrReference ()(*_b .Bitmap ,error ){segments :=_ccb ._de .RTSegments ;if len (segments )==0{return nil ,_ege .New ("\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0065\u0078is\u0074\u0073");
};_ce ,_ced :=segments [0].GetSegmentData ();if _ced !=nil {return nil ,_ced ;};_bc ,_gcc :=_ce .(Regioner );if !_gcc {return nil ,_fg .Errorf ("\u0072\u0065\u0066\u0065\u0072r\u0065\u0064\u0020\u0074\u006f\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_ce );
};return _bc .GetRegionBitmap ();};func (_gabe *TextRegion )readRegionFlags ()error {var (_fbee int ;_aafaa uint64 ;_fgdd error ;);_fbee ,_fgdd =_gabe ._bfbb .ReadBit ();if _fgdd !=nil {return _fgdd ;};_gabe .SbrTemplate =int8 (_fbee );_aafaa ,_fgdd =_gabe ._bfbb .ReadBits (5);
if _fgdd !=nil {return _fgdd ;};_gabe .SbDsOffset =int8 (_aafaa );if _gabe .SbDsOffset > 0x0f{_gabe .SbDsOffset -=0x20;};_fbee ,_fgdd =_gabe ._bfbb .ReadBit ();if _fgdd !=nil {return _fgdd ;};_gabe .DefaultPixel =int8 (_fbee );_aafaa ,_fgdd =_gabe ._bfbb .ReadBits (2);
if _fgdd !=nil {return _fgdd ;};_gabe .CombinationOperator =_b .CombinationOperator (int (_aafaa )&0x3);_fbee ,_fgdd =_gabe ._bfbb .ReadBit ();if _fgdd !=nil {return _fgdd ;};_gabe .IsTransposed =int8 (_fbee );_aafaa ,_fgdd =_gabe ._bfbb .ReadBits (2);
if _fgdd !=nil {return _fgdd ;};_gabe .ReferenceCorner =int16 (_aafaa )&0x3;_aafaa ,_fgdd =_gabe ._bfbb .ReadBits (2);if _fgdd !=nil {return _fgdd ;};_gabe .LogSBStrips =int16 (_aafaa )&0x3;_gabe .SbStrips =1<<uint (_gabe .LogSBStrips );_fbee ,_fgdd =_gabe ._bfbb .ReadBit ();
if _fgdd !=nil {return _fgdd ;};if _fbee ==1{_gabe .UseRefinement =true ;};_fbee ,_fgdd =_gabe ._bfbb .ReadBit ();if _fgdd !=nil {return _fgdd ;};if _fbee ==1{_gabe .IsHuffmanEncoded =true ;};return nil ;};var _ SegmentEncoder =&GenericRegion {};func (_ccdec *TextRegion )parseHeader ()error {var _abef error ;
_d .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069n\u0073\u002e\u002e\u002e");defer func (){if _abef !=nil {_d .Log .Trace ("\u005b\u0054\u0045\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044E\u0052\u005d\u0020\u0066\u0061i\u006c\u0065d\u002e\u0020\u0025\u0076",_abef );
}else {_d .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069s\u0068\u0065\u0064\u002e");};}();if _abef =_ccdec .RegionInfo .parseHeader ();
_abef !=nil {return _abef ;};if _abef =_ccdec .readRegionFlags ();_abef !=nil {return _abef ;};if _ccdec .IsHuffmanEncoded {if _abef =_ccdec .readHuffmanFlags ();_abef !=nil {return _abef ;};};if _abef =_ccdec .readUseRefinement ();_abef !=nil {return _abef ;
};if _abef =_ccdec .readAmountOfSymbolInstances ();_abef !=nil {return _abef ;};if _abef =_ccdec .getSymbols ();_abef !=nil {return _abef ;};if _abef =_ccdec .computeSymbolCodeLength ();_abef !=nil {return _abef ;};if _abef =_ccdec .checkInput ();_abef !=nil {return _abef ;
};_d .Log .Trace ("\u0025\u0073",_ccdec .String ());return nil ;};func (_eabe *TextRegion )decodeRdh ()(int64 ,error ){const _ebdc ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064h";if _eabe .IsHuffmanEncoded {if _eabe .SbHuffRDHeight ==3{if _eabe ._afbac ==nil {var (_ccda int ;
_ebdb error ;);if _eabe .SbHuffFS ==3{_ccda ++;};if _eabe .SbHuffDS ==3{_ccda ++;};if _eabe .SbHuffDT ==3{_ccda ++;};if _eabe .SbHuffRDWidth ==3{_ccda ++;};_eabe ._afbac ,_ebdb =_eabe .getUserTable (_ccda );if _ebdb !=nil {return 0,_gdga .Wrap (_ebdb ,_ebdc ,"");
};};return _eabe ._afbac .Decode (_eabe ._bfbb );};_gfecg ,_gfbc :=_af .GetStandardTable (14+int (_eabe .SbHuffRDHeight ));if _gfbc !=nil {return 0,_gdga .Wrap (_gfbc ,_ebdc ,"");};return _gfecg .Decode (_eabe ._bfbb );};_ddgbe ,_aagg :=_eabe ._ggde .DecodeInt (_eabe ._dddg );
if _aagg !=nil {return 0,_gdga .Wrap (_aagg ,_ebdc ,"");};return int64 (_ddgbe ),nil ;};func (_fgdb *PageInformationSegment )checkInput ()error {if _fgdb .PageBMHeight ==_f .MaxInt32 {if !_fgdb .IsStripe {_d .Log .Debug ("P\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0053\u0065\u0067me\u006e\u0074\u002e\u0049s\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0073\u0068ou\u006c\u0064 \u0062\u0065\u0020\u0074\u0072\u0075\u0065\u002e");
};};return nil ;};func (_gbg *SymbolDictionary )decodeHeightClassBitmap (_gfaa *_b .Bitmap ,_fgag int64 ,_gbgb int ,_edcgc []int )error {for _fefcb :=_fgag ;_fefcb < int64 (_gbg ._bffb );_fefcb ++{var _bdbd int ;for _ecbc :=_fgag ;_ecbc <=_fefcb -1;_ecbc ++{_bdbd +=_edcgc [_ecbc ];
};_bbgg :=_e .Rect (_bdbd ,0,_bdbd +_edcgc [_fefcb ],_gbgb );_fddf ,_bdecd :=_b .Extract (_bbgg ,_gfaa );if _bdecd !=nil {return _bdecd ;};_gbg ._gfgb [_fefcb ]=_fddf ;_gbg ._cdcg =append (_gbg ._cdcg ,_fddf );};return nil ;};func (_febe *GenericRegion )decodeTemplate0a (_dbed ,_ecae ,_acf int ,_dagf ,_fbgb int )(_cfbg error ){const _bdee ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0061";
var (_cba ,_bcf int ;_ggcd ,_fggf int ;_feg byte ;_gfg int ;);if _dbed >=1{_feg ,_cfbg =_febe .Bitmap .GetByte (_fbgb );if _cfbg !=nil {return _gdga .Wrap (_cfbg ,_bdee ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_ggcd =int (_feg );};if _dbed >=2{_feg ,_cfbg =_febe .Bitmap .GetByte (_fbgb -_febe .Bitmap .RowStride );
if _cfbg !=nil {return _gdga .Wrap (_cfbg ,_bdee ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_fggf =int (_feg )<<6;};_cba =(_ggcd &0xf0)|(_fggf &0x3800);for _efee :=0;_efee < _acf ;_efee =_gfg {var (_bfbf byte ;_aee int ;);_gfg =_efee +8;if _dbcb :=_ecae -_efee ;
_dbcb > 8{_aee =8;}else {_aee =_dbcb ;};if _dbed > 0{_ggcd <<=8;if _gfg < _ecae {_feg ,_cfbg =_febe .Bitmap .GetByte (_fbgb +1);if _cfbg !=nil {return _gdga .Wrap (_cfbg ,_bdee ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_ggcd |=int (_feg );
};};if _dbed > 1{_adfg :=_fbgb -_febe .Bitmap .RowStride +1;_fggf <<=8;if _gfg < _ecae {_feg ,_cfbg =_febe .Bitmap .GetByte (_adfg );if _cfbg !=nil {return _gdga .Wrap (_cfbg ,_bdee ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_fggf |=int (_feg )<<6;
}else {_fggf |=0;};};for _agfb :=0;_agfb < _aee ;_agfb ++{_ebae :=uint (7-_agfb );if _febe ._dgg {_bcf =_febe .overrideAtTemplate0a (_cba ,_efee +_agfb ,_dbed ,int (_bfbf ),_agfb ,int (_ebae ));_febe ._bfc .SetIndex (int32 (_bcf ));}else {_febe ._bfc .SetIndex (int32 (_cba ));
};var _cbda int ;_cbda ,_cfbg =_febe ._deec .DecodeBit (_febe ._bfc );if _cfbg !=nil {return _gdga .Wrap (_cfbg ,_bdee ,"");};_bfbf |=byte (_cbda )<<_ebae ;_cba =((_cba &0x7bf7)<<1)|_cbda |((_ggcd >>_ebae )&0x10)|((_fggf >>_ebae )&0x800);};if _fcf :=_febe .Bitmap .SetByte (_dagf ,_bfbf );
_fcf !=nil {return _gdga .Wrap (_fcf ,_bdee ,"");};_dagf ++;_fbgb ++;};return nil ;};func (_fgbc Type )String ()string {switch _fgbc {case TSymbolDictionary :return "\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079";
case TIntermediateTextRegion :return "\u0049n\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020T\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateTextRegion :return "I\u006d\u006d\u0065\u0064ia\u0074e\u0020\u0054\u0065\u0078\u0074 \u0052\u0065\u0067\u0069\u006f\u006e";
case TImmediateLosslessTextRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020L\u006f\u0073\u0073\u006c\u0065\u0073\u0073 \u0054\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TPatternDictionary :return "\u0050a\u0074t\u0065\u0072\u006e\u0020\u0044i\u0063\u0074i\u006f\u006e\u0061\u0072\u0079";
case TIntermediateHalftoneRegion :return "\u0049\u006e\u0074\u0065r\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0048\u0061l\u0066t\u006f\u006e\u0065\u0020\u0052\u0065\u0067i\u006f\u006e";case TImmediateHalftoneRegion :return "\u0049m\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u0048\u0061l\u0066t\u006fn\u0065\u0020\u0052\u0065\u0067\u0069\u006fn";
case TImmediateLosslessHalftoneRegion :return "\u0049\u006d\u006ded\u0069\u0061\u0074\u0065\u0020\u004c\u006f\u0073\u0073l\u0065s\u0073 \u0048a\u006c\u0066\u0074\u006f\u006e\u0065\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TIntermediateGenericRegion :return "I\u006e\u0074\u0065\u0072\u006d\u0065d\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020R\u0065g\u0069\u006f\u006e";
case TImmediateGenericRegion :return "\u0049m\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006ee\u0072\u0069\u0063\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessGenericRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u004c\u006f\u0073\u0073\u006c\u0065\u0073\u0073\u0020\u0047e\u006e\u0065\u0072\u0069\u0063\u0020\u0052e\u0067\u0069\u006f\u006e";
case TIntermediateGenericRefinementRegion :return "\u0049\u006e\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0020\u0052\u0065\u0066i\u006e\u0065\u006d\u0065\u006et\u0020\u0052e\u0067\u0069\u006f\u006e";
case TImmediateGenericRefinementRegion :return "I\u006d\u006d\u0065\u0064\u0069\u0061t\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020\u0052\u0065\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020\u0052\u0065\u0067\u0069o\u006e";case TImmediateLosslessGenericRefinementRegion :return "\u0049m\u006d\u0065d\u0069\u0061\u0074\u0065 \u004c\u006f\u0073s\u006c\u0065\u0073\u0073\u0020\u0047\u0065\u006e\u0065ri\u0063\u0020\u0052e\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020R\u0065\u0067i\u006f\u006e";
case TPageInformation :return "\u0050\u0061g\u0065\u0020\u0049n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e";case TEndOfPage :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0050\u0061\u0067\u0065";case TEndOfStrip :return "\u0045\u006e\u0064 \u004f\u0066\u0020\u0053\u0074\u0072\u0069\u0070";
case TEndOfFile :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0046\u0069\u006c\u0065";case TProfiles :return "\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0073";case TTables :return "\u0054\u0061\u0062\u006c\u0065\u0073";case TExtension :return "\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn";
case TBitmap :return "\u0042\u0069\u0074\u006d\u0061\u0070";};return "I\u006ev\u0061\u006c\u0069\u0064\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0020Ki\u006e\u0064";};func (_bafbf *TextRegion )String ()string {_bade :=&_gdg .Builder {};_bade .WriteString ("\u000a[\u0054E\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u000a");
_bade .WriteString (_bafbf .RegionInfo .String ()+"\u000a");_bade .WriteString (_fg .Sprintf ("\u0009\u002d\u0020\u0053br\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0025\u0076\u000a",_bafbf .SbrTemplate ));_bade .WriteString (_fg .Sprintf ("\u0009-\u0020S\u0062\u0044\u0073\u004f\u0066f\u0073\u0065t\u003a\u0020\u0025\u0076\u000a",_bafbf .SbDsOffset ));
_bade .WriteString (_fg .Sprintf ("\t\u002d \u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0050i\u0078\u0065\u006c\u003a %\u0076\u000a",_bafbf .DefaultPixel ));_bade .WriteString (_fg .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0076\u000a",_bafbf .CombinationOperator ));
_bade .WriteString (_fg .Sprintf ("\t\u002d \u0049\u0073\u0054\u0072\u0061\u006e\u0073\u0070o\u0073\u0065\u0064\u003a %\u0076\u000a",_bafbf .IsTransposed ));_bade .WriteString (_fg .Sprintf ("\u0009\u002d\u0020Re\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0043\u006f\u0072\u006e\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_bafbf .ReferenceCorner ));
_bade .WriteString (_fg .Sprintf ("\t\u002d\u0020\u0055\u0073eR\u0065f\u0069\u006e\u0065\u006d\u0065n\u0074\u003a\u0020\u0025\u0076\u000a",_bafbf .UseRefinement ));_bade .WriteString (_fg .Sprintf ("\u0009-\u0020\u0049\u0073\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045n\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0076\u000a",_bafbf .IsHuffmanEncoded ));
if _bafbf .IsHuffmanEncoded {_bade .WriteString (_fg .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_bafbf .SbHuffRSize ));_bade .WriteString (_fg .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0059:\u0020\u0025\u0076\u000a",_bafbf .SbHuffRDY ));
_bade .WriteString (_fg .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0058:\u0020\u0025\u0076\u000a",_bafbf .SbHuffRDX ));_bade .WriteString (_fg .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069\u0067\u0068\u0074\u003a\u0020\u0025v\u000a",_bafbf .SbHuffRDHeight ));
_bade .WriteString (_fg .Sprintf ("\t\u002d\u0020\u0053\u0062Hu\u0066f\u0052\u0044\u0057\u0069\u0064t\u0068\u003a\u0020\u0025\u0076\u000a",_bafbf .SbHuffRDWidth ));_bade .WriteString (_fg .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0054\u003a\u0020\u0025\u0076\u000a",_bafbf .SbHuffDT ));
_bade .WriteString (_fg .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0053\u003a\u0020\u0025\u0076\u000a",_bafbf .SbHuffDS ));_bade .WriteString (_fg .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0046\u0053\u003a\u0020\u0025\u0076\u000a",_bafbf .SbHuffFS ));
};_bade .WriteString (_fg .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_bafbf .SbrATX ));_bade .WriteString (_fg .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0059:\u0020\u0025\u0076\u000a",_bafbf .SbrATY ));
_bade .WriteString (_fg .Sprintf ("\u0009\u002d\u0020N\u0075\u006d\u0062\u0065r\u004f\u0066\u0053\u0079\u006d\u0062\u006fl\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_bafbf .NumberOfSymbolInstances ));_bade .WriteString (_fg .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_bafbf .SbrATX ));
return _bade .String ();};func (_baed *TextRegion )decodeID ()(int64 ,error ){if _baed .IsHuffmanEncoded {if _baed ._bbdc ==nil {_afbea ,_gfb :=_baed ._bfbb .ReadBits (byte (_baed ._adfb ));return int64 (_afbea ),_gfb ;};return _baed ._bbdc .Decode (_baed ._bfbb );
};return _baed ._ggde .DecodeIAID (uint64 (_baed ._adfb ),_baed ._bgfg );};func (_ffa *GenericRefinementRegion )String ()string {_dbff :=&_gdg .Builder {};_dbff .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");
_dbff .WriteString (_ffa .RegionInfo .String ()+"\u000a");_dbff .WriteString (_fg .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0052\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_ffa .IsTPGROn ));_dbff .WriteString (_fg .Sprintf ("\u0009-\u0020T\u0065\u006d\u0070\u006c\u0061t\u0065\u0049D\u003a\u0020\u0025\u0076\u000a",_ffa .TemplateID ));
_dbff .WriteString (_fg .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_ffa .GrAtX ));_dbff .WriteString (_fg .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_ffa .GrAtY ));
_dbff .WriteString (_fg .Sprintf ("\u0009-\u0020R\u0065\u0066\u0065\u0072\u0065n\u0063\u0065D\u0058\u0020\u0025\u0076\u000a",_ffa .ReferenceDX ));_dbff .WriteString (_fg .Sprintf ("\u0009\u002d\u0020\u0052ef\u0065\u0072\u0065\u006e\u0063\u0044\u0065\u0059\u003a\u0020\u0025\u0076\u000a",_ffa .ReferenceDY ));
return _dbff .String ();};func (_fdaf *Header )readSegmentDataLength (_egaf _a .StreamReader )(_fbed error ){_fdaf .SegmentDataLength ,_fbed =_egaf .ReadBits (32);if _fbed !=nil {return _fbed ;};_fdaf .SegmentDataLength &=_f .MaxInt32 ;return nil ;};func (_dcd *GenericRefinementRegion )GetRegionInfo ()*RegionSegment {return _dcd .RegionInfo };
func (_aabc *SymbolDictionary )InitEncode (symbols *_b .Bitmaps ,symbolList []int ,symbolMap map[int ]int ,unborderSymbols bool )error {const _faed ="S\u0079\u006d\u0062\u006f\u006c\u0044i\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002eI\u006e\u0069\u0074E\u006ec\u006f\u0064\u0065";
_aabc .SdATX =[]int8 {3,-3,2,-2};_aabc .SdATY =[]int8 {-1,-1,-2,-2};_aabc ._dfac =symbols ;_aabc ._gbff =make ([]int ,len (symbolList ));copy (_aabc ._gbff ,symbolList );if len (_aabc ._gbff )!=_aabc ._dfac .Size (){return _gdga .Error (_faed ,"s\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0061\u006e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u004ci\u0073\u0074\u0020\u006f\u0066\u0020\u0064\u0069\u0066\u0066er\u0065\u006e\u0074 \u0073i\u007a\u0065");
};_aabc .NumberOfNewSymbols =uint32 (symbols .Size ());_aabc .NumberOfExportedSymbols =uint32 (symbols .Size ());_aabc ._efgg =symbolMap ;_aabc ._bbfg =unborderSymbols ;return nil ;};func (_eaaca *HalftoneRegion )GetPatterns ()([]*_b .Bitmap ,error ){var (_bfdfe []*_b .Bitmap ;
_bcb error ;);for _ ,_gaaa :=range _eaaca ._eebb .RTSegments {var _acfd Segmenter ;_acfd ,_bcb =_gaaa .GetSegmentData ();if _bcb !=nil {_d .Log .Debug ("\u0047e\u0074\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061 \u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025v",_bcb );
return nil ,_bcb ;};_egee ,_dgdd :=_acfd .(*PatternDictionary );if !_dgdd {_bcb =_fg .Errorf ("\u0072e\u006c\u0061t\u0065\u0064\u0020\u0073e\u0067\u006d\u0065n\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0070at\u0074\u0065\u0072n\u0020\u0064i\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u003a \u0025\u0054",_acfd );
return nil ,_bcb ;};var _gde []*_b .Bitmap ;_gde ,_bcb =_egee .GetDictionary ();if _bcb !=nil {_d .Log .Debug ("\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_bcb );
return nil ,_bcb ;};_bfdfe =append (_bfdfe ,_gde ...);};return _bfdfe ,nil ;};func (_fcefe *SymbolDictionary )decodeAggregate (_abdce ,_dfee uint32 )error {var (_bebb int64 ;_cea error ;);if _fcefe .IsHuffmanEncoded {_bebb ,_cea =_fcefe .huffDecodeRefAggNInst ();
if _cea !=nil {return _cea ;};}else {_gccbg ,_eac :=_fcefe ._dafg .DecodeInt (_fcefe ._fdcdg );if _eac !=nil {return _eac ;};_bebb =int64 (_gccbg );};if _bebb > 1{return _fcefe .decodeThroughTextRegion (_abdce ,_dfee ,uint32 (_bebb ));}else if _bebb ==1{return _fcefe .decodeRefinedSymbol (_abdce ,_dfee );
};return nil ;};func (_affg *TableSegment )HtLow ()int32 {return _affg ._gcff };func (_fea *EndOfStripe )parseHeader (_fec *Header ,_ea _a .StreamReader )error {_db ,_ae :=_fea ._ee .ReadBits (32);if _ae !=nil {return _ae ;};_fea ._gg =int (_db &_f .MaxInt32 );
return nil ;};func (_ggbd *GenericRegion )decodeTemplate3 (_fdc ,_ccde ,_cbfcc int ,_aeffd ,_edcg int )(_ecg error ){const _baab ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0033";var (_feaf ,_eafg int ;_dcf int ;_ggfc byte ;
_fdfb ,_bfbe int ;);if _fdc >=1{_ggfc ,_ecg =_ggbd .Bitmap .GetByte (_edcg );if _ecg !=nil {return _gdga .Wrap (_ecg ,_baab ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_dcf =int (_ggfc );};_feaf =(_dcf >>1)&0x70;for _ddgb :=0;_ddgb < _cbfcc ;_ddgb =_fdfb {var (_ceba byte ;
_fce int ;);_fdfb =_ddgb +8;if _cbcf :=_ccde -_ddgb ;_cbcf > 8{_fce =8;}else {_fce =_cbcf ;};if _fdc >=1{_dcf <<=8;if _fdfb < _ccde {_ggfc ,_ecg =_ggbd .Bitmap .GetByte (_edcg +1);if _ecg !=nil {return _gdga .Wrap (_ecg ,_baab ,"\u0069\u006e\u006e\u0065\u0072\u0020\u002d\u0020\u006c\u0069\u006e\u0065 \u003e\u003d\u0020\u0031");
};_dcf |=int (_ggfc );};};for _fceg :=0;_fceg < _fce ;_fceg ++{if _ggbd ._dgg {_eafg =_ggbd .overrideAtTemplate3 (_feaf ,_ddgb +_fceg ,_fdc ,int (_ceba ),_fceg );_ggbd ._bfc .SetIndex (int32 (_eafg ));}else {_ggbd ._bfc .SetIndex (int32 (_feaf ));};_bfbe ,_ecg =_ggbd ._deec .DecodeBit (_ggbd ._bfc );
if _ecg !=nil {return _gdga .Wrap (_ecg ,_baab ,"");};_ceba |=byte (_bfbe )<<byte (7-_fceg );_feaf =((_feaf &0x1f7)<<1)|_bfbe |((_dcf >>uint (8-_fceg ))&0x010);};if _fedb :=_ggbd .Bitmap .SetByte (_aeffd ,_ceba );_fedb !=nil {return _gdga .Wrap (_fedb ,_baab ,"");
};_aeffd ++;_edcg ++;};return nil ;};func (_gbfe *HalftoneRegion )renderPattern (_ffdg [][]int )(_ebef error ){var _ddgg ,_dgfd int ;for _ggcg :=0;_ggcg < int (_gbfe .HGridHeight );_ggcg ++{for _gcad :=0;_gcad < int (_gbfe .HGridWidth );_gcad ++{_ddgg =_gbfe .computeX (_ggcg ,_gcad );
_dgfd =_gbfe .computeY (_ggcg ,_gcad );_deefe :=_gbfe .Patterns [_ffdg [_ggcg ][_gcad ]];if _ebef =_b .Blit (_deefe ,_gbfe .HalftoneRegionBitmap ,_ddgg +int (_gbfe .HGridX ),_dgfd +int (_gbfe .HGridY ),_gbfe .CombinationOperator );_ebef !=nil {return _ebef ;
};};};return nil ;};func (_ccgc *TextRegion )decodeRdx ()(int64 ,error ){const _fdeae ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064x";if _ccgc .IsHuffmanEncoded {if _ccgc .SbHuffRDX ==3{if _ccgc ._decfg ==nil {var (_affdb int ;_dggac error ;);if _ccgc .SbHuffFS ==3{_affdb ++;
};if _ccgc .SbHuffDS ==3{_affdb ++;};if _ccgc .SbHuffDT ==3{_affdb ++;};if _ccgc .SbHuffRDWidth ==3{_affdb ++;};if _ccgc .SbHuffRDHeight ==3{_affdb ++;};_ccgc ._decfg ,_dggac =_ccgc .getUserTable (_affdb );if _dggac !=nil {return 0,_gdga .Wrap (_dggac ,_fdeae ,"");
};};return _ccgc ._decfg .Decode (_ccgc ._bfbb );};_cgeda ,_aggb :=_af .GetStandardTable (14+int (_ccgc .SbHuffRDX ));if _aggb !=nil {return 0,_gdga .Wrap (_aggb ,_fdeae ,"");};return _cgeda .Decode (_ccgc ._bfbb );};_gdac ,_dbfd :=_ccgc ._ggde .DecodeInt (_ccgc ._cdd );
if _dbfd !=nil {return 0,_gdga .Wrap (_dbfd ,_fdeae ,"");};return int64 (_gdac ),nil ;};func (_fcga *TextRegion )encodeSymbols (_cafg _a .BinaryWriter )(_efeb int ,_dbbdg error ){const _dagc ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
_gegdd :=make ([]byte ,4);_ef .BigEndian .PutUint32 (_gegdd ,_fcga .NumberOfSymbols );if _efeb ,_dbbdg =_cafg .Write (_gegdd );_dbbdg !=nil {return _efeb ,_gdga .Wrap (_dbbdg ,_dagc ,"\u004e\u0075\u006dbe\u0072\u004f\u0066\u0053\u0079\u006d\u0062\u006f\u006c\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073");
};_eacd ,_dbbdg :=_b .NewClassedPoints (_fcga ._gbcf ,_fcga ._faac );if _dbbdg !=nil {return 0,_gdga .Wrap (_dbbdg ,_dagc ,"");};var _decb ,_afcaf int ;_bacga :=_gf .New ();_bacga .Init ();if _dbbdg =_bacga .EncodeInteger (_gf .IADT ,0);_dbbdg !=nil {return _efeb ,_gdga .Wrap (_dbbdg ,_dagc ,"\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0020\u0044\u0054");
};_ddae ,_dbbdg :=_eacd .GroupByY ();if _dbbdg !=nil {return 0,_gdga .Wrap (_dbbdg ,_dagc ,"");};for _ ,_feca :=range _ddae {_cgce :=int (_feca .YAtIndex (0));_dggbf :=_cgce -_decb ;if _dbbdg =_bacga .EncodeInteger (_gf .IADT ,_dggbf );_dbbdg !=nil {return _efeb ,_gdga .Wrap (_dbbdg ,_dagc ,"");
};var _ddff int ;for _ffgc ,_ccac :=range _feca .IntSlice {switch _ffgc {case 0:_gfcdd :=int (_feca .XAtIndex (_ffgc ))-_afcaf ;if _dbbdg =_bacga .EncodeInteger (_gf .IAFS ,_gfcdd );_dbbdg !=nil {return _efeb ,_gdga .Wrap (_dbbdg ,_dagc ,"");};_afcaf +=_gfcdd ;
_ddff =_afcaf ;default:_bbdb :=int (_feca .XAtIndex (_ffgc ))-_ddff ;if _dbbdg =_bacga .EncodeInteger (_gf .IADS ,_bbdb );_dbbdg !=nil {return _efeb ,_gdga .Wrap (_dbbdg ,_dagc ,"");};_ddff +=_bbdb ;};_fbbb ,_ecbd :=_fcga ._aede .Get (_ccac );if _ecbd !=nil {return _efeb ,_gdga .Wrap (_ecbd ,_dagc ,"");
};_edbf ,_bcbc :=_fcga ._gecac [_fbbb ];if !_bcbc {_edbf ,_bcbc =_fcga ._fgeg [_fbbb ];if !_bcbc {return _efeb ,_gdga .Errorf (_dagc ,"\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027\u0025d\u0027\u0020\u0069s\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064 \u0069\u006e\u0020\u0067\u006cob\u0061\u006c\u0020\u0061\u006e\u0064\u0020\u006c\u006f\u0063\u0061\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020\u006d\u0061\u0070",_fbbb );
};};if _ecbd =_bacga .EncodeIAID (_fcga ._ggdg ,_edbf );_ecbd !=nil {return _efeb ,_gdga .Wrap (_ecbd ,_dagc ,"");};};if _dbbdg =_bacga .EncodeOOB (_gf .IADS );_dbbdg !=nil {return _efeb ,_gdga .Wrap (_dbbdg ,_dagc ,"");};};_bacga .Final ();_adac ,_dbbdg :=_bacga .WriteTo (_cafg );
if _dbbdg !=nil {return _efeb ,_gdga .Wrap (_dbbdg ,_dagc ,"");};_efeb +=int (_adac );return _efeb ,nil ;};func (_fbda *HalftoneRegion )parseHeader ()error {if _dfbc :=_fbda .RegionSegment .parseHeader ();_dfbc !=nil {return _dfbc ;};_eedd ,_acc :=_fbda ._bbg .ReadBit ();
if _acc !=nil {return _acc ;};_fbda .HDefaultPixel =int8 (_eedd );_ceef ,_acc :=_fbda ._bbg .ReadBits (3);if _acc !=nil {return _acc ;};_fbda .CombinationOperator =_b .CombinationOperator (_ceef &0xf);_eedd ,_acc =_fbda ._bbg .ReadBit ();if _acc !=nil {return _acc ;
};if _eedd ==1{_fbda .HSkipEnabled =true ;};_ceef ,_acc =_fbda ._bbg .ReadBits (2);if _acc !=nil {return _acc ;};_fbda .HTemplate =byte (_ceef &0xf);_eedd ,_acc =_fbda ._bbg .ReadBit ();if _acc !=nil {return _acc ;};if _eedd ==1{_fbda .IsMMREncoded =true ;
};_ceef ,_acc =_fbda ._bbg .ReadBits (32);if _acc !=nil {return _acc ;};_fbda .HGridWidth =uint32 (_ceef &_f .MaxUint32 );_ceef ,_acc =_fbda ._bbg .ReadBits (32);if _acc !=nil {return _acc ;};_fbda .HGridHeight =uint32 (_ceef &_f .MaxUint32 );_ceef ,_acc =_fbda ._bbg .ReadBits (32);
if _acc !=nil {return _acc ;};_fbda .HGridX =int32 (_ceef &_f .MaxInt32 );_ceef ,_acc =_fbda ._bbg .ReadBits (32);if _acc !=nil {return _acc ;};_fbda .HGridY =int32 (_ceef &_f .MaxInt32 );_ceef ,_acc =_fbda ._bbg .ReadBits (16);if _acc !=nil {return _acc ;
};_fbda .HRegionX =uint16 (_ceef &_f .MaxUint16 );_ceef ,_acc =_fbda ._bbg .ReadBits (16);if _acc !=nil {return _acc ;};_fbda .HRegionY =uint16 (_ceef &_f .MaxUint16 );if _acc =_fbda .computeSegmentDataStructure ();_acc !=nil {return _acc ;};return _fbda .checkInput ();
};func (_abdd *TextRegion )createRegionBitmap ()error {_abdd .RegionBitmap =_b .New (int (_abdd .RegionInfo .BitmapWidth ),int (_abdd .RegionInfo .BitmapHeight ));if _abdd .DefaultPixel !=0{_abdd .RegionBitmap .SetDefaultPixel ();};return nil ;};type GenericRegion struct{_egfg _a .StreamReader ;
DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;UseExtTemplates bool ;IsTPGDon bool ;GBTemplate byte ;IsMMREncoded bool ;UseMMR bool ;GBAtX []int8 ;GBAtY []int8 ;GBAtOverride []bool ;_dgg bool ;
Bitmap *_b .Bitmap ;_deec *_ec .Decoder ;_bfc *_ec .DecoderStats ;_dbga *_fgbe .Decoder ;};func (_acfde *RegionSegment )readCombinationOperator ()error {_edac ,_edgg :=_acfde ._gdba .ReadBits (3);if _edgg !=nil {return _edgg ;};_acfde .CombinaionOperator =_b .CombinationOperator (_edac &0xF);
return nil ;};func (_acfdd *PatternDictionary )checkInput ()error {if _acfdd .HdpHeight < 1||_acfdd .HdpWidth < 1{return _ege .New ("in\u0076\u0061l\u0069\u0064\u0020\u0048\u0065\u0061\u0064\u0065\u0072 \u0056\u0061\u006c\u0075\u0065\u003a\u0020\u0057\u0069\u0064\u0074\u0068\u002f\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020g\u0072e\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020z\u0065\u0072o");
};if _acfdd .IsMMREncoded {if _acfdd .HDTemplate !=0{_d .Log .Debug ("\u0076\u0061\u0072\u0069\u0061\u0062\u006c\u0065\u0020\u0048\u0044\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e \u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030");
};};return nil ;};func (_ebb *template0 )setIndex (_edb *_ec .DecoderStats ){_edb .SetIndex (0x100)};type TextRegion struct{_bfbb _a .StreamReader ;RegionInfo *RegionSegment ;SbrTemplate int8 ;SbDsOffset int8 ;DefaultPixel int8 ;CombinationOperator _b .CombinationOperator ;
IsTransposed int8 ;ReferenceCorner int16 ;LogSBStrips int16 ;UseRefinement bool ;IsHuffmanEncoded bool ;SbHuffRSize int8 ;SbHuffRDY int8 ;SbHuffRDX int8 ;SbHuffRDHeight int8 ;SbHuffRDWidth int8 ;SbHuffDT int8 ;SbHuffDS int8 ;SbHuffFS int8 ;SbrATX []int8 ;
SbrATY []int8 ;NumberOfSymbolInstances uint32 ;_abdga int64 ;SbStrips int8 ;NumberOfSymbols uint32 ;RegionBitmap *_b .Bitmap ;Symbols []*_b .Bitmap ;_ggde *_ec .Decoder ;_caab *GenericRefinementRegion ;_cgcg *_ec .DecoderStats ;_feece *_ec .DecoderStats ;
_gdce *_ec .DecoderStats ;_ceed *_ec .DecoderStats ;_ggac *_ec .DecoderStats ;_cffc *_ec .DecoderStats ;_dddg *_ec .DecoderStats ;_bgfg *_ec .DecoderStats ;_cdd *_ec .DecoderStats ;_cdecb *_ec .DecoderStats ;_bdacd *_ec .DecoderStats ;_adfb int8 ;_bbdc *_af .FixedSizeTable ;
Header *Header ;_cfcg _af .Tabler ;_acgd _af .Tabler ;_ebafd _af .Tabler ;_gfeb _af .Tabler ;_afbac _af .Tabler ;_decfg _af .Tabler ;_bfgc _af .Tabler ;_dbfbg _af .Tabler ;_gecac ,_fgeg map[int ]int ;_faac []int ;_gbcf *_b .Points ;_bggd *_b .Bitmaps ;
_aede *_fgb .IntSlice ;_baad ,_ggdg int ;_bdaa *_b .Boxes ;};func (_gdgf *Header )readDataStartOffset (_bgfd _a .StreamReader ,_eff OrganizationType ){if _eff ==OSequential {_gdgf .SegmentDataStartOffset =uint64 (_bgfd .StreamPosition ());};};func (_ddfc *RegionSegment )parseHeader ()error {const _eaaa ="p\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072";
_d .Log .Trace ("\u005b\u0052\u0045\u0047I\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002dH\u0045A\u0044\u0045\u0052\u005d\u0020\u0042\u0065g\u0069\u006e");defer func (){_d .Log .Trace ("\u005b\u0052\u0045G\u0049\u004f\u004e\u005d[\u0050\u0041\u0052\u0053\u0045\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
}();_feee ,_caag :=_ddfc ._gdba .ReadBits (32);if _caag !=nil {return _gdga .Wrap (_caag ,_eaaa ,"\u0077\u0069\u0064t\u0068");};_ddfc .BitmapWidth =uint32 (_feee &_f .MaxUint32 );_feee ,_caag =_ddfc ._gdba .ReadBits (32);if _caag !=nil {return _gdga .Wrap (_caag ,_eaaa ,"\u0068\u0065\u0069\u0067\u0068\u0074");
};_ddfc .BitmapHeight =uint32 (_feee &_f .MaxUint32 );_feee ,_caag =_ddfc ._gdba .ReadBits (32);if _caag !=nil {return _gdga .Wrap (_caag ,_eaaa ,"\u0078\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_ddfc .XLocation =uint32 (_feee &_f .MaxUint32 );
_feee ,_caag =_ddfc ._gdba .ReadBits (32);if _caag !=nil {return _gdga .Wrap (_caag ,_eaaa ,"\u0079\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_ddfc .YLocation =uint32 (_feee &_f .MaxUint32 );if _ ,_caag =_ddfc ._gdba .ReadBits (5);_caag !=nil {return _gdga .Wrap (_caag ,_eaaa ,"\u0064i\u0072\u0079\u0020\u0072\u0065\u0061d");
};if _caag =_ddfc .readCombinationOperator ();_caag !=nil {return _gdga .Wrap (_caag ,_eaaa ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};return nil ;};func (_fefc *HalftoneRegion )computeSegmentDataStructure ()error {_fefc .DataOffset =_fefc ._bbg .StreamPosition ();
_fefc .DataHeaderLength =_fefc .DataOffset -_fefc .DataHeaderOffset ;_fefc .DataLength =int64 (_fefc ._bbg .Length ())-_fefc .DataHeaderLength ;return nil ;};func (_cggf *HalftoneRegion )Init (hd *Header ,r _a .StreamReader )error {_cggf ._bbg =r ;_cggf ._eebb =hd ;
_cggf .RegionSegment =NewRegionSegment (r );return _cggf .parseHeader ();};func (_bgdc *Header )readNumberOfReferredToSegments (_dga _a .StreamReader )(uint64 ,error ){const _afecd ="\u0072\u0065\u0061\u0064\u004e\u0075\u006d\u0062\u0065\u0072O\u0066\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
_bbge ,_efd :=_dga .ReadBits (3);if _efd !=nil {return 0,_gdga .Wrap (_efd ,_afecd ,"\u0063\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0072\u0074\u0073");};_bbge &=0xf;var _cgef []byte ;if _bbge <=4{_cgef =make ([]byte ,5);for _gafa :=0;_gafa <=4;_gafa ++{_addd ,_gfa :=_dga .ReadBit ();
if _gfa !=nil {return 0,_gdga .Wrap (_gfa ,_afecd ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_cgef [_gafa ]=byte (_addd );};}else {_bbge ,_efd =_dga .ReadBits (29);if _efd !=nil {return 0,_efd ;};_bbge &=_f .MaxInt32 ;_bcga :=(_bbge +8)>>3;
_bcga <<=3;_cgef =make ([]byte ,_bcga );var _dbeg uint64 ;for _dbeg =0;_dbeg < _bcga ;_dbeg ++{_bacf ,_dedb :=_dga .ReadBit ();if _dedb !=nil {return 0,_gdga .Wrap (_dedb ,_afecd ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_cgef [_dbeg ]=byte (_bacf );
};};return _bbge ,nil ;};func (_dda *PageInformationSegment )readWidthAndHeight ()error {_eeef ,_efgb :=_dda ._fgf .ReadBits (32);if _efgb !=nil {return _efgb ;};_dda .PageBMWidth =int (_eeef &_f .MaxInt32 );_eeef ,_efgb =_dda ._fgf .ReadBits (32);if _efgb !=nil {return _efgb ;
};_dda .PageBMHeight =int (_eeef &_f .MaxInt32 );return nil ;};func (_geec *SymbolDictionary )decodeDifferenceWidth ()(int64 ,error ){if _geec .IsHuffmanEncoded {switch _geec .SdHuffDecodeWidthSelection {case 0:_aabcg ,_cacb :=_af .GetStandardTable (2);
if _cacb !=nil {return 0,_cacb ;};return _aabcg .Decode (_geec ._cfde );case 1:_daba ,_acbb :=_af .GetStandardTable (3);if _acbb !=nil {return 0,_acbb ;};return _daba .Decode (_geec ._cfde );case 3:if _geec ._beb ==nil {var _facea int ;if _geec .SdHuffDecodeHeightSelection ==3{_facea ++;
};_bdcaf ,_aegb :=_geec .getUserTable (_facea );if _aegb !=nil {return 0,_aegb ;};_geec ._beb =_bdcaf ;};return _geec ._beb .Decode (_geec ._cfde );};}else {_dfbfc ,_abdg :=_geec ._dafg .DecodeInt (_geec ._fada );if _abdg !=nil {return 0,_abdg ;};return int64 (_dfbfc ),nil ;
};return 0,nil ;};func (_afcfd *TextRegion )decodeCurrentT ()(int64 ,error ){if _afcfd .SbStrips !=1{if _afcfd .IsHuffmanEncoded {_gcec ,_bcgc :=_afcfd ._bfbb .ReadBits (byte (_afcfd .LogSBStrips ));return int64 (_gcec ),_bcgc ;};_fbaa ,_gaag :=_afcfd ._ggde .DecodeInt (_afcfd ._ceed );
if _gaag !=nil {return 0,_gaag ;};return int64 (_fbaa ),nil ;};return 0,nil ;};func (_cggfe *TableSegment )HtOOB ()int32 {return _cggfe ._eegff };func (_acfe *Header )writeReferredToCount (_aaef _a .BinaryWriter )(_acb int ,_bag error ){const _bdaf ="w\u0072i\u0074\u0065\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0043ou\u006e\u0074";
_acfe .RTSNumbers =make ([]int ,len (_acfe .RTSegments ));for _efag ,_adaf :=range _acfe .RTSegments {_acfe .RTSNumbers [_efag ]=int (_adaf .SegmentNumber );};if len (_acfe .RTSNumbers )<=4{var _fcc byte ;if len (_acfe .RetainBits )>=1{_fcc =_acfe .RetainBits [0];
};_fcc |=byte (len (_acfe .RTSNumbers ))<<5;if _bag =_aaef .WriteByte (_fcc );_bag !=nil {return 0,_gdga .Wrap (_bag ,_bdaf ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return 1,nil ;};_cfeeb :=uint32 (len (_acfe .RTSNumbers ));
_gaad :=make ([]byte ,4+_fgb .Ceil (len (_acfe .RTSNumbers )+1,8));_cfeeb |=0x7<<29;_ef .BigEndian .PutUint32 (_gaad ,_cfeeb );copy (_gaad [1:],_acfe .RetainBits );_acb ,_bag =_aaef .Write (_gaad );if _bag !=nil {return 0,_gdga .Wrap (_bag ,_bdaf ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");
};return _acb ,nil ;};type OrganizationType uint8 ;func (_bbag *PatternDictionary )parseHeader ()error {_d .Log .Trace ("\u005b\u0050\u0041\u0054\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054I\u004f\u004e\u0041\u0052\u0059\u005d[\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d\u0020b\u0065\u0067\u0069\u006e");
defer func (){_d .Log .Trace ("\u005b\u0050\u0041T\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u005b\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
}();_ ,_cbff :=_bbag ._bcd .ReadBits (5);if _cbff !=nil {return _cbff ;};if _cbff =_bbag .readTemplate ();_cbff !=nil {return _cbff ;};if _cbff =_bbag .readIsMMREncoded ();_cbff !=nil {return _cbff ;};if _cbff =_bbag .readPatternWidthAndHeight ();_cbff !=nil {return _cbff ;
};if _cbff =_bbag .readGrayMax ();_cbff !=nil {return _cbff ;};if _cbff =_bbag .computeSegmentDataStructure ();_cbff !=nil {return _cbff ;};return _bbag .checkInput ();};func (_geca *SymbolDictionary )decodeThroughTextRegion (_egdd ,_cedaf ,_ddfa uint32 )error {if _geca ._daae ==nil {_geca ._daae =_gaea (_geca ._cfde ,nil );
_geca ._daae .setContexts (_geca ._ggfe ,_ec .NewStats (512,1),_ec .NewStats (512,1),_ec .NewStats (512,1),_ec .NewStats (512,1),_geca ._eggd ,_ec .NewStats (512,1),_ec .NewStats (512,1),_ec .NewStats (512,1),_ec .NewStats (512,1));};if _bbbg :=_geca .setSymbolsArray ();
_bbbg !=nil {return _bbbg ;};_geca ._daae .setParameters (_geca ._dafg ,_geca .IsHuffmanEncoded ,true ,_egdd ,_cedaf ,_ddfa ,1,_geca ._gcga +_geca ._bffb ,0,0,0,1,0,0,0,0,0,0,0,0,0,_geca .SdrTemplate ,_geca .SdrATX ,_geca .SdrATY ,_geca ._cdcg ,_geca ._dfda );
return _geca .addSymbol (_geca ._daae );};func (_dc *EndOfStripe )Init (h *Header ,r _a .StreamReader )error {_dc ._ee =r ;return _dc .parseHeader (h ,r );};func (_fbef *SymbolDictionary )addSymbol (_gceb Regioner )error {_eagg ,_bfdeg :=_gceb .GetRegionBitmap ();
if _bfdeg !=nil {return _bfdeg ;};_fbef ._gfgb [_fbef ._bffb ]=_eagg ;_fbef ._cdcg =append (_fbef ._cdcg ,_eagg );_d .Log .Trace ("\u005b\u0053YM\u0042\u004f\u004c \u0044\u0049\u0043\u0054ION\u0041RY\u005d\u0020\u0041\u0064\u0064\u0065\u0064 s\u0079\u006d\u0062\u006f\u006c\u003a\u0020%\u0073",_eagg );
return nil ;};func (_dffc *SymbolDictionary )readNumberOfNewSymbols ()error {_fcfc ,_dbbef :=_dffc ._cfde .ReadBits (32);if _dbbef !=nil {return _dbbef ;};_dffc .NumberOfNewSymbols =uint32 (_fcfc &_f .MaxUint32 );return nil ;};func (_caee *TextRegion )decodeSymInRefSize ()(int64 ,error ){const _ddgfe ="\u0064e\u0063o\u0064\u0065\u0053\u0079\u006dI\u006e\u0052e\u0066\u0053\u0069\u007a\u0065";
if _caee .SbHuffRSize ==0{_gaadd ,_cbdcb :=_af .GetStandardTable (1);if _cbdcb !=nil {return 0,_gdga .Wrap (_cbdcb ,_ddgfe ,"");};return _gaadd .Decode (_caee ._bfbb );};if _caee ._dbfbg ==nil {var (_adfea int ;_cdede error ;);if _caee .SbHuffFS ==3{_adfea ++;
};if _caee .SbHuffDS ==3{_adfea ++;};if _caee .SbHuffDT ==3{_adfea ++;};if _caee .SbHuffRDWidth ==3{_adfea ++;};if _caee .SbHuffRDHeight ==3{_adfea ++;};if _caee .SbHuffRDX ==3{_adfea ++;};if _caee .SbHuffRDY ==3{_adfea ++;};_caee ._dbfbg ,_cdede =_caee .getUserTable (_adfea );
if _cdede !=nil {return 0,_gdga .Wrap (_cdede ,_ddgfe ,"");};};_eebg ,_gagfc :=_caee ._dbfbg .Decode (_caee ._bfbb );if _gagfc !=nil {return 0,_gdga .Wrap (_gagfc ,_ddgfe ,"");};return _eebg ,nil ;};func NewGenericRegion (r _a .StreamReader )*GenericRegion {return &GenericRegion {RegionSegment :NewRegionSegment (r ),_egfg :r };
};func (_fab *GenericRegion )InitEncode (bm *_b .Bitmap ,xLoc ,yLoc ,template int ,duplicateLineRemoval bool )error {const _adc ="\u0047e\u006e\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069\u006f\u006e.\u0049\u006e\u0069\u0074\u0045\u006e\u0063\u006f\u0064\u0065";
if bm ==nil {return _gdga .Error (_adc ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if xLoc < 0||yLoc < 0{return _gdga .Error (_adc ,"\u0078\u0020\u0061\u006e\u0064\u0020\u0079\u0020\u006c\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074h\u0061\u006e\u0020\u0030");
};_fab .Bitmap =bm ;_fab .GBTemplate =byte (template );switch _fab .GBTemplate {case 0:_fab .GBAtX =[]int8 {3,-3,2,-2};_fab .GBAtY =[]int8 {-1,-1,-2,-2};case 1:_fab .GBAtX =[]int8 {3};_fab .GBAtY =[]int8 {-1};case 2,3:_fab .GBAtX =[]int8 {2};_fab .GBAtY =[]int8 {-1};
default:return _gdga .Errorf (_adc ,"\u0070\u0072o\u0076\u0069\u0064\u0065\u0064 \u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u007b\u0030\u002c\u0031\u002c\u0032\u002c\u0033\u007d",template );
};_fab .RegionSegment =&RegionSegment {BitmapHeight :uint32 (bm .Height ),BitmapWidth :uint32 (bm .Width ),XLocation :uint32 (xLoc ),YLocation :uint32 (yLoc )};_fab .IsTPGDon =duplicateLineRemoval ;return nil ;};func (_bcada *TextRegion )decodeDfs ()(int64 ,error ){if _bcada .IsHuffmanEncoded {if _bcada .SbHuffFS ==3{if _bcada ._cfcg ==nil {var _dgefg error ;
_bcada ._cfcg ,_dgefg =_bcada .getUserTable (0);if _dgefg !=nil {return 0,_dgefg ;};};return _bcada ._cfcg .Decode (_bcada ._bfbb );};_gac ,_febc :=_af .GetStandardTable (6+int (_bcada .SbHuffFS ));if _febc !=nil {return 0,_febc ;};return _gac .Decode (_bcada ._bfbb );
};_acfa ,_bcfa :=_bcada ._ggde .DecodeInt (_bcada ._feece );if _bcfa !=nil {return 0,_bcfa ;};return int64 (_acfa ),nil ;};func (_gegc *TextRegion )decodeRI ()(int64 ,error ){if !_gegc .UseRefinement {return 0,nil ;};if _gegc .IsHuffmanEncoded {_dbegd ,_ebebb :=_gegc ._bfbb .ReadBit ();
return int64 (_dbegd ),_ebebb ;};_eggc ,_fdgc :=_gegc ._ggde .DecodeInt (_gegc ._ggac );return int64 (_eggc ),_fdgc ;};func (_abd *Header )subInputReader ()(_a .StreamReader ,error ){return _a .NewSubstreamReader (_abd .Reader ,_abd .SegmentDataStartOffset ,_abd .SegmentDataLength );
};func (_bgff *HalftoneRegion )combineGrayscalePlanes (_fcac []*_b .Bitmap ,_dfab int )error {_bbdd :=0;for _bacg :=0;_bacg < _fcac [_dfab ].Height ;_bacg ++{for _ecdg :=0;_ecdg < _fcac [_dfab ].Width ;_ecdg +=8{_becb ,_gad :=_fcac [_dfab +1].GetByte (_bbdd );
if _gad !=nil {return _gad ;};_cga ,_gad :=_fcac [_dfab ].GetByte (_bbdd );if _gad !=nil {return _gad ;};_gad =_fcac [_dfab ].SetByte (_bbdd ,_b .CombineBytes (_cga ,_becb ,_b .CmbOpXor ));if _gad !=nil {return _gad ;};_bbdd ++;};};return nil ;};func (_agc *template1 )setIndex (_dgd *_ec .DecoderStats ){_dgd .SetIndex (0x080)};
var _ templater =&template1 {};func (_fccf *SymbolDictionary )String ()string {_affd :=&_gdg .Builder {};_affd .WriteString ("\n\u005b\u0053\u0059\u004dBO\u004c-\u0044\u0049\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u000a");_affd .WriteString (_fg .Sprintf ("\u0009-\u0020S\u0064\u0072\u0054\u0065\u006dp\u006c\u0061t\u0065\u0020\u0025\u0076\u000a",_fccf .SdrTemplate ));
_affd .WriteString (_fg .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0025\u0076\u000a",_fccf .SdTemplate ));_affd .WriteString (_fg .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006eg\u0043\u006f\u006e\u0074\u0065\u0078\u0074R\u0065\u0074\u0061\u0069\u006e\u0065\u0064\u0020\u0025\u0076\u000a",_fccf ._eaee ));
_affd .WriteString (_fg .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074\u0065\u0078\u0074\u0055\u0073\u0065\u0064 \u0025\u0076\u000a",_fccf ._bcbe ));_affd .WriteString (_fg .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_fccf .SdHuffAggInstanceSelection ));
_affd .WriteString (_fg .Sprintf ("\u0009\u002d\u0020\u0053d\u0048\u0075\u0066\u0066\u0042\u004d\u0053\u0069\u007a\u0065S\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020%\u0076\u000a",_fccf .SdHuffBMSizeSelection ));_affd .WriteString (_fg .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_fccf .SdHuffDecodeWidthSelection ));
_affd .WriteString (_fg .Sprintf ("\u0009\u002d\u0020Sd\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064e\u0048e\u0069g\u0068t\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_fccf .SdHuffDecodeHeightSelection ));_affd .WriteString (_fg .Sprintf ("\u0009\u002d\u0020U\u0073\u0065\u0052\u0065f\u0069\u006e\u0065\u006d\u0065\u006e\u0074A\u0067\u0067\u0072\u0065\u0067\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_fccf .UseRefinementAggregation ));
_affd .WriteString (_fg .Sprintf ("\u0009\u002d\u0020is\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045\u006e\u0063\u006f\u0064\u0065\u0064\u0020\u0025\u0076\u000a",_fccf .IsHuffmanEncoded ));_affd .WriteString (_fg .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_fccf .SdATX ));
_affd .WriteString (_fg .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_fccf .SdATY ));_affd .WriteString (_fg .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_fccf .SdrATX ));
_affd .WriteString (_fg .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_fccf .SdrATY ));_affd .WriteString (_fg .Sprintf ("\u0009\u002d\u0020\u004e\u0075\u006d\u0062\u0065\u0072\u004ff\u0045\u0078\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_fccf .NumberOfExportedSymbols ));
_affd .WriteString (_fg .Sprintf ("\u0009-\u0020\u004e\u0075\u006db\u0065\u0072\u004f\u0066\u004ee\u0077S\u0079m\u0062\u006f\u006c\u0073\u0020\u0025\u0076\n",_fccf .NumberOfNewSymbols ));_affd .WriteString (_fg .Sprintf ("\u0009\u002d\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u004ff\u0049\u006d\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_fccf ._gcga ));
_affd .WriteString (_fg .Sprintf ("\u0009\u002d \u006e\u0075\u006d\u0062\u0065\u0072\u004f\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0064\u0053\u0079\u006d\u0062\u006f\u006c\u0073 %\u0076\u000a",_fccf ._bffb ));return _affd .String ();};func (_cbeaf *GenericRefinementRegion )readAtPixels ()error {_cbeaf .GrAtX =make ([]int8 ,2);
_cbeaf .GrAtY =make ([]int8 ,2);_cbeg ,_agg :=_cbeaf ._eb .ReadByte ();if _agg !=nil {return _agg ;};_cbeaf .GrAtX [0]=int8 (_cbeg );_cbeg ,_agg =_cbeaf ._eb .ReadByte ();if _agg !=nil {return _agg ;};_cbeaf .GrAtY [0]=int8 (_cbeg );_cbeg ,_agg =_cbeaf ._eb .ReadByte ();
if _agg !=nil {return _agg ;};_cbeaf .GrAtX [1]=int8 (_cbeg );_cbeg ,_agg =_cbeaf ._eb .ReadByte ();if _agg !=nil {return _agg ;};_cbeaf .GrAtY [1]=int8 (_cbeg );return nil ;};func _ecgg (_fdec int )int {if _fdec ==0{return 0;};_fdec |=_fdec >>1;_fdec |=_fdec >>2;
_fdec |=_fdec >>4;_fdec |=_fdec >>8;_fdec |=_fdec >>16;return (_fdec +1)>>1;};func (_fccc *PageInformationSegment )Size ()int {return 19};func (_fdge *TextRegion )decodeIds ()(int64 ,error ){const _acga ="\u0064e\u0063\u006f\u0064\u0065\u0049\u0064s";if _fdge .IsHuffmanEncoded {if _fdge .SbHuffDS ==3{if _fdge ._acgd ==nil {_gcebe :=0;
if _fdge .SbHuffFS ==3{_gcebe ++;};var _bdfc error ;_fdge ._acgd ,_bdfc =_fdge .getUserTable (_gcebe );if _bdfc !=nil {return 0,_gdga .Wrap (_bdfc ,_acga ,"");};};return _fdge ._acgd .Decode (_fdge ._bfbb );};_fbgaf ,_ceaa :=_af .GetStandardTable (8+int (_fdge .SbHuffDS ));
if _ceaa !=nil {return 0,_gdga .Wrap (_ceaa ,_acga ,"");};return _fbgaf .Decode (_fdge ._bfbb );};_aebdd ,_afae :=_fdge ._ggde .DecodeInt (_fdge ._gdce );if _afae !=nil {return 0,_gdga .Wrap (_afae ,_acga ,"\u0063\u0078\u0049\u0041\u0044\u0053");};return int64 (_aebdd ),nil ;
};func (_ge *EndOfStripe )LineNumber ()int {return _ge ._gg };func (_ecbb *PatternDictionary )readIsMMREncoded ()error {_faea ,_gffb :=_ecbb ._bcd .ReadBit ();if _gffb !=nil {return _gffb ;};if _faea !=0{_ecbb .IsMMREncoded =true ;};return nil ;};type GenericRefinementRegion struct{_gc templater ;
_gca templater ;_eb _a .StreamReader ;_de *Header ;RegionInfo *RegionSegment ;IsTPGROn bool ;TemplateID int8 ;Template templater ;GrAtX []int8 ;GrAtY []int8 ;RegionBitmap *_b .Bitmap ;ReferenceBitmap *_b .Bitmap ;ReferenceDX int32 ;ReferenceDY int32 ;_fc *_ec .Decoder ;
_fa *_ec .DecoderStats ;_c bool ;_edc []bool ;};type template0 struct{};var (_ffgb Segmenter ;_cca =map[Type ]func ()Segmenter {TSymbolDictionary :func ()Segmenter {return &SymbolDictionary {}},TIntermediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateLosslessTextRegion :func ()Segmenter {return &TextRegion {}},TPatternDictionary :func ()Segmenter {return &PatternDictionary {}},TIntermediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateLosslessHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TIntermediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateLosslessGenericRegion :func ()Segmenter {return &GenericRegion {}},TIntermediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateLosslessGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TPageInformation :func ()Segmenter {return &PageInformationSegment {}},TEndOfPage :func ()Segmenter {return _ffgb },TEndOfStrip :func ()Segmenter {return &EndOfStripe {}},TEndOfFile :func ()Segmenter {return _ffgb },TProfiles :func ()Segmenter {return _ffgb },TTables :func ()Segmenter {return &TableSegment {}},TExtension :func ()Segmenter {return _ffgb },TBitmap :func ()Segmenter {return _ffgb }};
);func (_dgdg *HalftoneRegion )GetRegionInfo ()*RegionSegment {return _dgdg .RegionSegment };func (_dfbf *template0 )form (_ebf ,_dbda ,_dbe ,_decd ,_cfa int16 )int16 {return (_ebf <<10)|(_dbda <<7)|(_dbe <<4)|(_decd <<1)|_cfa ;};func (_ebeb *HalftoneRegion )computeGrayScalePlanes (_ecbe []*_b .Bitmap ,_gafd int )([][]int ,error ){_ega :=make ([][]int ,_ebeb .HGridHeight );
for _bbfa :=0;_bbfa < len (_ega );_bbfa ++{_ega [_bbfa ]=make ([]int ,_ebeb .HGridWidth );};for _dbcg :=0;_dbcg < int (_ebeb .HGridHeight );_dbcg ++{for _gff :=0;_gff < int (_ebeb .HGridWidth );_gff +=8{var _dab int ;if _aba :=int (_ebeb .HGridWidth )-_gff ;
_aba > 8{_dab =8;}else {_dab =_aba ;};_egc :=_ecbe [0].GetByteIndex (_gff ,_dbcg );for _dfea :=0;_dfea < _dab ;_dfea ++{_eebe :=_dfea +_gff ;_ega [_dbcg ][_eebe ]=0;for _bca :=0;_bca < _gafd ;_bca ++{_cffg ,_aaba :=_ecbe [_bca ].GetByte (_egc );if _aaba !=nil {return nil ,_aaba ;
};_adcd :=_cffg >>uint (7-_eebe &7);_aaa :=_adcd &1;_gdb :=1<<uint (_bca );_bgd :=int (_aaa )*_gdb ;_ega [_dbcg ][_eebe ]+=_bgd ;};};};};return _ega ,nil ;};func (_debd *TableSegment )HtPS ()int32 {return _debd ._fcgcg };func (_eccb *HalftoneRegion )GetRegionBitmap ()(*_b .Bitmap ,error ){if _eccb .HalftoneRegionBitmap !=nil {return _eccb .HalftoneRegionBitmap ,nil ;
};var _ebegg error ;_eccb .HalftoneRegionBitmap =_b .New (int (_eccb .RegionSegment .BitmapWidth ),int (_eccb .RegionSegment .BitmapHeight ));if _eccb .Patterns ==nil ||len (_eccb .Patterns )==0{_eccb .Patterns ,_ebegg =_eccb .GetPatterns ();if _ebegg !=nil {return nil ,_ebegg ;
};};if _eccb .HDefaultPixel ==1{_eccb .HalftoneRegionBitmap .SetDefaultPixel ();};_gbc :=_f .Ceil (_f .Log (float64 (len (_eccb .Patterns )))/_f .Log (2));_caaf :=int (_gbc );var _cde [][]int ;_cde ,_ebegg =_eccb .grayScaleDecoding (_caaf );if _ebegg !=nil {return nil ,_ebegg ;
};if _ebegg =_eccb .renderPattern (_cde );_ebegg !=nil {return nil ,_ebegg ;};return _eccb .HalftoneRegionBitmap ,nil ;};type EncodeInitializer interface{InitEncode ();};func (_gce *GenericRegion )copyLineAbove (_ebbb int )error {_fac :=_ebbb *_gce .Bitmap .RowStride ;
_cfaa :=_fac -_gce .Bitmap .RowStride ;for _gfc :=0;_gfc < _gce .Bitmap .RowStride ;_gfc ++{_eage ,_bde :=_gce .Bitmap .GetByte (_cfaa );if _bde !=nil {return _bde ;};_cfaa ++;if _bde =_gce .Bitmap .SetByte (_fac ,_eage );_bde !=nil {return _bde ;};_fac ++;
};return nil ;};func (_ffea *TextRegion )decodeStripT ()(_gffa int64 ,_fdcc error ){if _ffea .IsHuffmanEncoded {if _ffea .SbHuffDT ==3{if _ffea ._ebafd ==nil {var _cccfg int ;if _ffea .SbHuffFS ==3{_cccfg ++;};if _ffea .SbHuffDS ==3{_cccfg ++;};_ffea ._ebafd ,_fdcc =_ffea .getUserTable (_cccfg );
if _fdcc !=nil {return 0,_fdcc ;};};_gffa ,_fdcc =_ffea ._ebafd .Decode (_ffea ._bfbb );if _fdcc !=nil {return 0,_fdcc ;};}else {var _cdbg _af .Tabler ;_cdbg ,_fdcc =_af .GetStandardTable (11+int (_ffea .SbHuffDT ));if _fdcc !=nil {return 0,_fdcc ;};_gffa ,_fdcc =_cdbg .Decode (_ffea ._bfbb );
if _fdcc !=nil {return 0,_fdcc ;};};}else {var _ffeg int32 ;_ffeg ,_fdcc =_ffea ._ggde .DecodeInt (_ffea ._cgcg );if _fdcc !=nil {return 0,_fdcc ;};_gffa =int64 (_ffeg );};_gffa *=int64 (-_ffea .SbStrips );return _gffa ,nil ;};func (_fdee *PageInformationSegment )readContainsRefinement ()error {_ecef ,_feeb :=_fdee ._fgf .ReadBit ();
if _feeb !=nil {return _feeb ;};if _ecef ==1{_fdee ._agfe =true ;};return nil ;};func (_fgge *TextRegion )GetRegionBitmap ()(*_b .Bitmap ,error ){if _fgge .RegionBitmap !=nil {return _fgge .RegionBitmap ,nil ;};if !_fgge .IsHuffmanEncoded {if _efca :=_fgge .setCodingStatistics ();
_efca !=nil {return nil ,_efca ;};};if _gbcc :=_fgge .createRegionBitmap ();_gbcc !=nil {return nil ,_gbcc ;};if _fdeaa :=_fgge .decodeSymbolInstances ();_fdeaa !=nil {return nil ,_fdeaa ;};return _fgge .RegionBitmap ,nil ;};func (_faf *SymbolDictionary )Init (h *Header ,r _a .StreamReader )error {_faf .Header =h ;
_faf ._cfde =r ;return _faf .parseHeader ();};type RegionSegment struct{_gdba _a .StreamReader ;BitmapWidth uint32 ;BitmapHeight uint32 ;XLocation uint32 ;YLocation uint32 ;CombinaionOperator _b .CombinationOperator ;};func (_aab *GenericRegion )parseHeader ()(_dgga error ){_d .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052I\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0050\u0061\u0072s\u0069\u006e\u0067\u0048\u0065\u0061\u0064e\u0072\u002e\u002e\u002e");
defer func (){if _dgga !=nil {_d .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e]\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065r\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0077\u0069th\u0020\u0065\u0072\u0072\u006f\u0072\u002e\u0020\u0025\u0076",_dgga );
}else {_d .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049C\u002d\u0052\u0045G\u0049\u004f\u004e]\u0020\u0050a\u0072\u0073\u0069\u006e\u0067\u0048e\u0061de\u0072\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0053\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079\u002e\u002e\u002e");
};}();var (_ecfg int ;_fddc uint64 ;);if _dgga =_aab .RegionSegment .parseHeader ();_dgga !=nil {return _dgga ;};if _ ,_dgga =_aab ._egfg .ReadBits (3);_dgga !=nil {return _dgga ;};_ecfg ,_dgga =_aab ._egfg .ReadBit ();if _dgga !=nil {return _dgga ;};if _ecfg ==1{_aab .UseExtTemplates =true ;
};_ecfg ,_dgga =_aab ._egfg .ReadBit ();if _dgga !=nil {return _dgga ;};if _ecfg ==1{_aab .IsTPGDon =true ;};_fddc ,_dgga =_aab ._egfg .ReadBits (2);if _dgga !=nil {return _dgga ;};_aab .GBTemplate =byte (_fddc &0xf);_ecfg ,_dgga =_aab ._egfg .ReadBit ();
if _dgga !=nil {return _dgga ;};if _ecfg ==1{_aab .IsMMREncoded =true ;};if !_aab .IsMMREncoded {_ffad :=1;if _aab .GBTemplate ==0{_ffad =4;if _aab .UseExtTemplates {_ffad =12;};};if _dgga =_aab .readGBAtPixels (_ffad );_dgga !=nil {return _dgga ;};};if _dgga =_aab .computeSegmentDataStructure ();
_dgga !=nil {return _dgga ;};_d .Log .Trace ("\u0025\u0073",_aab );return nil ;};func (_bfdf *GenericRefinementRegion )setParameters (_gdc *_ec .DecoderStats ,_bad *_ec .Decoder ,_ecab int8 ,_cdg ,_cfcd uint32 ,_cfb *_b .Bitmap ,_cgg ,_ebecf int32 ,_aefd bool ,_eae []int8 ,_ebac []int8 ){_d .Log .Trace ("\u005b\u0047\u0045NE\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052E\u0047I\u004fN\u005d \u0073\u0065\u0074\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073");
if _gdc !=nil {_bfdf ._fa =_gdc ;};if _bad !=nil {_bfdf ._fc =_bad ;};_bfdf .TemplateID =_ecab ;_bfdf .RegionInfo .BitmapWidth =_cdg ;_bfdf .RegionInfo .BitmapHeight =_cfcd ;_bfdf .ReferenceBitmap =_cfb ;_bfdf .ReferenceDX =_cgg ;_bfdf .ReferenceDY =_ebecf ;
_bfdf .IsTPGROn =_aefd ;_bfdf .GrAtX =_eae ;_bfdf .GrAtY =_ebac ;_bfdf .RegionBitmap =nil ;_d .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073 f\u0069\u006ei\u0073\u0068\u0065\u0064\u002e\u0020\u0025\u0073",_bfdf );
};func (_gccf *SymbolDictionary )getSymbol (_adddb int )(*_b .Bitmap ,error ){const _ggaf ="\u0067e\u0074\u0053\u0079\u006d\u0062\u006fl";_afbed ,_gdgd :=_gccf ._dfac .GetBitmap (_gccf ._gbff [_adddb ]);if _gdgd !=nil {return nil ,_gdga .Wrap (_gdgd ,_ggaf ,"\u0063\u0061n\u0027\u0074\u0020g\u0065\u0074\u0020\u0073\u0079\u006d\u0062\u006f\u006c");
};return _afbed ,nil ;};func (_aabba *TextRegion )symbolIDCodeLengths ()error {var (_fgda []*_af .Code ;_abcga uint64 ;_eecdd _af .Tabler ;_bgfc error ;);for _aecc :=0;_aecc < 35;_aecc ++{_abcga ,_bgfc =_aabba ._bfbb .ReadBits (4);if _bgfc !=nil {return _bgfc ;
};_gcee :=int (_abcga &0xf);if _gcee > 0{_fgda =append (_fgda ,_af .NewCode (int32 (_gcee ),0,int32 (_aecc ),false ));};};_eecdd ,_bgfc =_af .NewFixedSizeTable (_fgda );if _bgfc !=nil {return _bgfc ;};var (_cdf int64 ;_ddfe uint32 ;_adgg []*_af .Code ;
_fgbga int64 ;);for _ddfe < _aabba .NumberOfSymbols {_fgbga ,_bgfc =_eecdd .Decode (_aabba ._bfbb );if _bgfc !=nil {return _bgfc ;};if _fgbga < 32{if _fgbga > 0{_adgg =append (_adgg ,_af .NewCode (int32 (_fgbga ),0,int32 (_ddfe ),false ));};_cdf =_fgbga ;
_ddfe ++;}else {var _faeed ,_befg int64 ;switch _fgbga {case 32:_abcga ,_bgfc =_aabba ._bfbb .ReadBits (2);if _bgfc !=nil {return _bgfc ;};_faeed =3+int64 (_abcga );if _ddfe > 0{_befg =_cdf ;};case 33:_abcga ,_bgfc =_aabba ._bfbb .ReadBits (3);if _bgfc !=nil {return _bgfc ;
};_faeed =3+int64 (_abcga );case 34:_abcga ,_bgfc =_aabba ._bfbb .ReadBits (7);if _bgfc !=nil {return _bgfc ;};_faeed =11+int64 (_abcga );};for _gbdd :=0;_gbdd < int (_faeed );_gbdd ++{if _befg > 0{_adgg =append (_adgg ,_af .NewCode (int32 (_befg ),0,int32 (_ddfe ),false ));
};_ddfe ++;};};};_aabba ._bfbb .Align ();_aabba ._bbdc ,_bgfc =_af .NewFixedSizeTable (_adgg );return _bgfc ;};func (_acag *TextRegion )setContexts (_ecce *_ec .DecoderStats ,_geaf *_ec .DecoderStats ,_gdde *_ec .DecoderStats ,_ggcb *_ec .DecoderStats ,_cbfd *_ec .DecoderStats ,_gcdb *_ec .DecoderStats ,_eadgf *_ec .DecoderStats ,_dcff *_ec .DecoderStats ,_efegc *_ec .DecoderStats ,_adadg *_ec .DecoderStats ){_acag ._cgcg =_geaf ;
_acag ._feece =_gdde ;_acag ._gdce =_ggcb ;_acag ._ceed =_cbfd ;_acag ._cffc =_eadgf ;_acag ._dddg =_dcff ;_acag ._bgfg =_gcdb ;_acag ._cdd =_efegc ;_acag ._cdecb =_adadg ;_acag ._bdacd =_ecce ;};func (_gcbb *PageInformationSegment )CombinationOperator ()_b .CombinationOperator {return _gcbb ._ebaef ;
};func (_bgcd *TextRegion )InitEncode (globalSymbolsMap ,localSymbolsMap map[int ]int ,comps []int ,inLL *_b .Points ,symbols *_b .Bitmaps ,classIDs *_fgb .IntSlice ,boxes *_b .Boxes ,width ,height ,symBits int ){_bgcd .RegionInfo =&RegionSegment {BitmapWidth :uint32 (width ),BitmapHeight :uint32 (height )};
_bgcd ._gecac =globalSymbolsMap ;_bgcd ._fgeg =localSymbolsMap ;_bgcd ._faac =comps ;_bgcd ._gbcf =inLL ;_bgcd ._bggd =symbols ;_bgcd ._aede =classIDs ;_bgcd ._bdaa =boxes ;_bgcd ._ggdg =symBits ;};func (_cdee *SymbolDictionary )decodeRefinedSymbol (_eaff ,_egfec uint32 )error {var (_beffa int ;
_edfd ,_ddbf int32 ;);if _cdee .IsHuffmanEncoded {_accf ,_deg :=_cdee ._cfde .ReadBits (byte (_cdee ._dfda ));if _deg !=nil {return _deg ;};_beffa =int (_accf );_geb ,_deg :=_af .GetStandardTable (15);if _deg !=nil {return _deg ;};_eaga ,_deg :=_geb .Decode (_cdee ._cfde );
if _deg !=nil {return _deg ;};_edfd =int32 (_eaga );_eaga ,_deg =_geb .Decode (_cdee ._cfde );if _deg !=nil {return _deg ;};_ddbf =int32 (_eaga );_geb ,_deg =_af .GetStandardTable (1);if _deg !=nil {return _deg ;};if _ ,_deg =_geb .Decode (_cdee ._cfde );
_deg !=nil {return _deg ;};_cdee ._cfde .Align ();}else {_ffdc ,_ecdb :=_cdee ._dafg .DecodeIAID (uint64 (_cdee ._dfda ),_cdee ._eggd );if _ecdb !=nil {return _ecdb ;};_beffa =int (_ffdc );_edfd ,_ecdb =_cdee ._dafg .DecodeInt (_cdee ._cbab );if _ecdb !=nil {return _ecdb ;
};_ddbf ,_ecdb =_cdee ._dafg .DecodeInt (_cdee ._eebc );if _ecdb !=nil {return _ecdb ;};};if _fgbb :=_cdee .setSymbolsArray ();_fgbb !=nil {return _fgbb ;};_cged :=_cdee ._cdcg [_beffa ];if _eccc :=_cdee .decodeNewSymbols (_eaff ,_egfec ,_cged ,_edfd ,_ddbf );
_eccc !=nil {return _eccc ;};if _cdee .IsHuffmanEncoded {_cdee ._cfde .Align ();};return nil ;};func (_cbecb *SymbolDictionary )setInSyms ()error {if _cbecb .Header .RTSegments !=nil {return _cbecb .retrieveImportSymbols ();};_cbecb ._bbc =make ([]*_b .Bitmap ,0);
return nil ;};func (_ecgd *SymbolDictionary )setExportedSymbols (_dage []int ){for _ggec :=uint32 (0);_ggec < _ecgd ._gcga +_ecgd .NumberOfNewSymbols ;_ggec ++{if _dage [_ggec ]==1{var _abdb *_b .Bitmap ;if _ggec < _ecgd ._gcga {_abdb =_ecgd ._bbc [_ggec ];
}else {_abdb =_ecgd ._gfgb [_ggec -_ecgd ._gcga ];};_d .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u002d\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u0020\u0041\u0064\u0064 E\u0078\u0070\u006fr\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027%\u0073\u0027",_abdb );
_ecgd ._fbcb =append (_ecgd ._fbcb ,_abdb );};};};func (_adae *Header )CleanSegmentData (){if _adae .SegmentData !=nil {_adae .SegmentData =nil ;};};func (_ccgd *TextRegion )initSymbols ()error {const _aaead ="i\u006e\u0069\u0074\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
for _ ,_fegg :=range _ccgd .Header .RTSegments {if _fegg ==nil {return _gdga .Error (_aaead ,"\u006e\u0069\u006c\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020pr\u006f\u0076\u0069\u0064\u0065\u0064 \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0074\u0065\u0078\u0074\u0020\u0072\u0065g\u0069\u006f\u006e\u0020\u0053\u0079\u006d\u0062o\u006c\u0073");
};if _fegg .Type ==0{_afcd ,_gcecg :=_fegg .GetSegmentData ();if _gcecg !=nil {return _gdga .Wrap (_gcecg ,_aaead ,"");};_ccabae ,_dbad :=_afcd .(*SymbolDictionary );if !_dbad {return _gdga .Error (_aaead ,"\u0072e\u0066\u0065r\u0072\u0065\u0064 \u0054\u006f\u0020\u0053\u0065\u0067\u006de\u006e\u0074\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_ccabae ._eggd =_ccgd ._bgfg ;_ddbc ,_gcecg :=_ccabae .GetDictionary ();if _gcecg !=nil {return _gdga .Wrap (_gcecg ,_aaead ,"");};_ccgd .Symbols =append (_ccgd .Symbols ,_ddbc ...);};};_ccgd .NumberOfSymbols =uint32 (len (_ccgd .Symbols ));return nil ;
};func (_abce *SymbolDictionary )decodeNewSymbols (_ccbb ,_acea uint32 ,_gbebg *_b .Bitmap ,_cfeeg ,_ged int32 )error {if _abce ._caff ==nil {_abce ._caff =_afcgc (_abce ._cfde ,nil );if _abce ._dafg ==nil {var _acge error ;_abce ._dafg ,_acge =_ec .New (_abce ._cfde );
if _acge !=nil {return _acge ;};};if _abce ._ggfe ==nil {_abce ._ggfe =_ec .NewStats (65536,1);};};_abce ._caff .setParameters (_abce ._ggfe ,_abce ._dafg ,_abce .SdrTemplate ,_ccbb ,_acea ,_gbebg ,_cfeeg ,_ged ,false ,_abce .SdrATX ,_abce .SdrATY );return _abce .addSymbol (_abce ._caff );
};var (_ Regioner =&TextRegion {};_ Segmenter =&TextRegion {};);type EndOfStripe struct{_ee _a .StreamReader ;_gg int ;};