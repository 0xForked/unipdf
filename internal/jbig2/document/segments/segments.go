//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package segments ;import (_gd "encoding/binary";_ag "errors";_aa "fmt";_fa "github.com/unidoc/unipdf/v3/common";_aaa "github.com/unidoc/unipdf/v3/internal/bitwise";_dd "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_gg "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";_age "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/arithmetic";_ad "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/huffman";_c "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/mmr";_gga "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/arithmetic";_df "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_gf "image";_d "io";_g "math";_a "strings";_f "time";);func (_fggf *GenericRegion )readGBAtPixels (_gcde int )error {const _eebg ="\u0072\u0065\u0061\u0064\u0047\u0042\u0041\u0074\u0050i\u0078\u0065\u006c\u0073";_fggf .GBAtX =make ([]int8 ,_gcde );_fggf .GBAtY =make ([]int8 ,_gcde );for _cec :=0;_cec < _gcde ;_cec ++{_bebg ,_ebd :=_fggf ._fb .ReadByte ();if _ebd !=nil {return _df .Wrapf (_ebd ,_eebg ,"\u0058\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_cec );};_fggf .GBAtX [_cec ]=int8 (_bebg );_bebg ,_ebd =_fggf ._fb .ReadByte ();if _ebd !=nil {return _df .Wrapf (_ebd ,_eebg ,"\u0059\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_cec );};_fggf .GBAtY [_cec ]=int8 (_bebg );};return nil ;};func (_bea *PatternDictionary )computeSegmentDataStructure ()error {_bea .DataOffset =_bea ._fddg .StreamPosition ();_bea .DataHeaderLength =_bea .DataOffset -_bea .DataHeaderOffset ;_bea .DataLength =int64 (_bea ._fddg .Length ())-_bea .DataHeaderLength ;return nil ;};func (_bed *Header )readHeaderFlags ()error {const _fag ="\u0072e\u0061d\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006c\u0061\u0067\u0073";_bgc ,_bdgc :=_bed .Reader .ReadBit ();if _bdgc !=nil {return _df .Wrap (_bdgc ,_fag ,"r\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067");};if _bgc !=0{_bed .RetainFlag =true ;};_bgc ,_bdgc =_bed .Reader .ReadBit ();if _bdgc !=nil {return _df .Wrap (_bdgc ,_fag ,"\u0070\u0061g\u0065\u0020\u0061s\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e");};if _bgc !=0{_bed .PageAssociationFieldSize =true ;};_eddg ,_bdgc :=_bed .Reader .ReadBits (6);if _bdgc !=nil {return _df .Wrap (_bdgc ,_fag ,"\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065");};_bed .Type =Type (int (_eddg ));return nil ;};func (_ffae *SymbolDictionary )encodeSymbols (_dfac _aaa .BinaryWriter )(_bdbd int ,_ecd error ){const _bbgg ="\u0065\u006e\u0063o\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c";_bfcf :=_gga .New ();_bfcf .Init ();_bcfd ,_ecd :=_ffae ._bgca .SelectByIndexes (_ffae ._fdfd );if _ecd !=nil {return 0,_df .Wrap (_ecd ,_bbgg ,"\u0069n\u0069\u0074\u0069\u0061\u006c");};_aeff :=map[*_gg .Bitmap ]int {};for _cee ,_cbacg :=range _bcfd .Values {_aeff [_cbacg ]=_cee ;};_bcfd .SortByHeight ();var _dgga ,_gabb int ;_gebd ,_ecd :=_bcfd .GroupByHeight ();if _ecd !=nil {return 0,_df .Wrap (_ecd ,_bbgg ,"");};for _ ,_cceb :=range _gebd .Values {_ffeb :=_cceb .Values [0].Height ;_bdce :=_ffeb -_dgga ;if _ecd =_bfcf .EncodeInteger (_gga .IADH ,_bdce );_ecd !=nil {return 0,_df .Wrapf (_ecd ,_bbgg ,"\u0049\u0041\u0044\u0048\u0020\u0066\u006f\u0072\u0020\u0064\u0068\u003a \u0027\u0025\u0064\u0027",_bdce );};_dgga =_ffeb ;_dgcdd ,_ggebg :=_cceb .GroupByWidth ();if _ggebg !=nil {return 0,_df .Wrapf (_ggebg ,_bbgg ,"\u0068\u0065\u0069g\u0068\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_ffeb );};var _cfbfb int ;for _ ,_eadc :=range _dgcdd .Values {for _ ,_gedg :=range _eadc .Values {_edeb :=_gedg .Width ;_cbfe :=_edeb -_cfbfb ;if _ggebg =_bfcf .EncodeInteger (_gga .IADW ,_cbfe );_ggebg !=nil {return 0,_df .Wrapf (_ggebg ,_bbgg ,"\u0049\u0041\u0044\u0057\u0020\u0066\u006f\u0072\u0020\u0064\u0077\u003a \u0027\u0025\u0064\u0027",_cbfe );};_cfbfb +=_cbfe ;if _ggebg =_bfcf .EncodeBitmap (_gedg ,false );_ggebg !=nil {return 0,_df .Wrapf (_ggebg ,_bbgg ,"H\u0065i\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u0020W\u0069\u0064\u0074\u0068: \u0025\u0064",_ffeb ,_edeb );};_fegbb :=_aeff [_gedg ];_ffae ._dacb [_fegbb ]=_gabb ;_gabb ++;};};if _ggebg =_bfcf .EncodeOOB (_gga .IADW );_ggebg !=nil {return 0,_df .Wrap (_ggebg ,_bbgg ,"\u0049\u0041\u0044\u0057");};};if _ecd =_bfcf .EncodeInteger (_gga .IAEX ,0);_ecd !=nil {return 0,_df .Wrap (_ecd ,_bbgg ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};if _ecd =_bfcf .EncodeInteger (_gga .IAEX ,len (_ffae ._fdfd ));_ecd !=nil {return 0,_df .Wrap (_ecd ,_bbgg ,"\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0073\u0079m\u0062\u006f\u006c\u0073");};_bfcf .Final ();_agac ,_ecd :=_bfcf .WriteTo (_dfac );if _ecd !=nil {return 0,_df .Wrap (_ecd ,_bbgg ,"\u0077\u0072i\u0074\u0069\u006e\u0067 \u0065\u006ec\u006f\u0064\u0065\u0072\u0020\u0063\u006f\u006et\u0065\u0078\u0074\u0020\u0074\u006f\u0020\u0027\u0077\u0027\u0020\u0077r\u0069\u0074\u0065\u0072");};return int (_agac ),nil ;};type GenericRefinementRegion struct{_bb templater ;_ge templater ;_fe _aaa .StreamReader ;_af *Header ;RegionInfo *RegionSegment ;IsTPGROn bool ;TemplateID int8 ;Template templater ;GrAtX []int8 ;GrAtY []int8 ;RegionBitmap *_gg .Bitmap ;ReferenceBitmap *_gg .Bitmap ;ReferenceDX int32 ;ReferenceDY int32 ;_afb *_age .Decoder ;_cf *_age .DecoderStats ;_dee bool ;_cc []bool ;};func (_egg *GenericRefinementRegion )parseHeader ()(_dcc error ){_fa .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0048e\u0061\u0064e\u0072\u002e\u002e\u002e");_gbfg :=_f .Now ();defer func (){if _dcc ==nil {_fa .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045G\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020h\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0069\u006e\u0069\u0073\u0068id\u0020\u0069\u006e\u003a\u0020\u0025\u0064\u0020\u006e\u0073",_f .Since (_gbfg ).Nanoseconds ());}else {_fa .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0068\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0073",_dcc );};}();if _dcc =_egg .RegionInfo .parseHeader ();_dcc !=nil {return _dcc ;};_ ,_dcc =_egg ._fe .ReadBits (6);if _dcc !=nil {return _dcc ;};_egg .IsTPGROn ,_dcc =_egg ._fe .ReadBool ();if _dcc !=nil {return _dcc ;};var _cab int ;_cab ,_dcc =_egg ._fe .ReadBit ();if _dcc !=nil {return _dcc ;};_egg .TemplateID =int8 (_cab );switch _egg .TemplateID {case 0:_egg .Template =_egg ._bb ;if _dcc =_egg .readAtPixels ();_dcc !=nil {return ;};case 1:_egg .Template =_egg ._ge ;};return nil ;};var _ _ad .BasicTabler =&TableSegment {};func (_fbgc *SymbolDictionary )Encode (w _aaa .BinaryWriter )(_dbeg int ,_cffa error ){const _debg ="\u0053\u0079\u006dbo\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0045\u006e\u0063\u006f\u0064\u0065";if _fbgc ==nil {return 0,_df .Error (_debg ,"\u0073\u0079m\u0062\u006f\u006c\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066in\u0065\u0064");};if _dbeg ,_cffa =_fbgc .encodeFlags (w );_cffa !=nil {return _dbeg ,_df .Wrap (_cffa ,_debg ,"");};_adee ,_cffa :=_fbgc .encodeATFlags (w );if _cffa !=nil {return _dbeg ,_df .Wrap (_cffa ,_debg ,"");};_dbeg +=_adee ;if _adee ,_cffa =_fbgc .encodeRefinementATFlags (w );_cffa !=nil {return _dbeg ,_df .Wrap (_cffa ,_debg ,"");};_dbeg +=_adee ;if _adee ,_cffa =_fbgc .encodeNumSyms (w );_cffa !=nil {return _dbeg ,_df .Wrap (_cffa ,_debg ,"");};_dbeg +=_adee ;if _adee ,_cffa =_fbgc .encodeSymbols (w );_cffa !=nil {return _dbeg ,_df .Wrap (_cffa ,_debg ,"");};_dbeg +=_adee ;return _dbeg ,nil ;};func (_aefd *TextRegion )setParameters (_afag *_age .Decoder ,_cegg ,_bcbcf bool ,_gdcbg ,_cfde uint32 ,_ddcd uint32 ,_feeaf int8 ,_bcad uint32 ,_cadc int8 ,_fcgff _gg .CombinationOperator ,_dacbf int8 ,_dfedc int16 ,_dca ,_dcdbf ,_beag ,_fabd ,_faeae ,_cfad ,_agba ,_cegf ,_dfef ,_fbfc int8 ,_gdbc ,_ceagb []int8 ,_gddg []*_gg .Bitmap ,_gebdg int8 ){_aefd ._ccbfg =_afag ;_aefd .IsHuffmanEncoded =_cegg ;_aefd .UseRefinement =_bcbcf ;_aefd .RegionInfo .BitmapWidth =_gdcbg ;_aefd .RegionInfo .BitmapHeight =_cfde ;_aefd .NumberOfSymbolInstances =_ddcd ;_aefd .SbStrips =_feeaf ;_aefd .NumberOfSymbols =_bcad ;_aefd .DefaultPixel =_cadc ;_aefd .CombinationOperator =_fcgff ;_aefd .IsTransposed =_dacbf ;_aefd .ReferenceCorner =_dfedc ;_aefd .SbdsOffset =_dca ;_aefd .SbHuffFS =_dcdbf ;_aefd .SbHuffDS =_beag ;_aefd .SbHuffDT =_fabd ;_aefd .SbHuffRDWidth =_faeae ;_aefd .SbHuffRDHeight =_cfad ;_aefd .SbHuffRDX =_agba ;_aefd .SbHuffRDY =_cegf ;_aefd .SbrTemplate =_fbfc ;_aefd .SbrATX =_gdbc ;_aefd .SbrATY =_ceagb ;_aefd .Symbols =_gddg ;_aefd ._afbfc =_gebdg ;};func (_egff *SymbolDictionary )huffDecodeBmSize ()(int64 ,error ){if _egff ._aabfc ==nil {var (_bfee int ;_dgbea error ;);if _egff .SdHuffDecodeHeightSelection ==3{_bfee ++;};if _egff .SdHuffDecodeWidthSelection ==3{_bfee ++;};_egff ._aabfc ,_dgbea =_egff .getUserTable (_bfee );if _dgbea !=nil {return 0,_dgbea ;};};return _egff ._aabfc .Decode (_egff ._gbfd );};func (_dfed *PageInformationSegment )parseHeader ()(_cfgc error ){_fa .Log .Trace ("\u005b\u0050\u0061\u0067\u0065I\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067m\u0065\u006e\u0074\u005d\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u002e\u002e");defer func (){var _gbgc ="[\u0050\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072m\u0061\u0074\u0069\u006f\u006e\u0053\u0065gm\u0065\u006e\u0074\u005d \u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065ad\u0065\u0072 \u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064";if _cfgc !=nil {_gbgc +="\u0020\u0077\u0069t\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u0020"+_cfgc .Error ();}else {_gbgc +="\u0020\u0073\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079";};_fa .Log .Trace (_gbgc );}();if _cfgc =_dfed .readWidthAndHeight ();_cfgc !=nil {return _cfgc ;};if _cfgc =_dfed .readResolution ();_cfgc !=nil {return _cfgc ;};_ ,_cfgc =_dfed ._gefa .ReadBit ();if _cfgc !=nil {return _cfgc ;};if _cfgc =_dfed .readCombinationOperatorOverrideAllowed ();_cfgc !=nil {return _cfgc ;};if _cfgc =_dfed .readRequiresAuxiliaryBuffer ();_cfgc !=nil {return _cfgc ;};if _cfgc =_dfed .readCombinationOperator ();_cfgc !=nil {return _cfgc ;};if _cfgc =_dfed .readDefaultPixelValue ();_cfgc !=nil {return _cfgc ;};if _cfgc =_dfed .readContainsRefinement ();_cfgc !=nil {return _cfgc ;};if _cfgc =_dfed .readIsLossless ();_cfgc !=nil {return _cfgc ;};if _cfgc =_dfed .readIsStriped ();_cfgc !=nil {return _cfgc ;};if _cfgc =_dfed .readMaxStripeSize ();_cfgc !=nil {return _cfgc ;};if _cfgc =_dfed .checkInput ();_cfgc !=nil {return _cfgc ;};_fa .Log .Trace ("\u0025\u0073",_dfed );return nil ;};func (_gegab *TextRegion )decodeDfs ()(int64 ,error ){if _gegab .IsHuffmanEncoded {if _gegab .SbHuffFS ==3{if _gegab ._dgbda ==nil {var _dbbe error ;_gegab ._dgbda ,_dbbe =_gegab .getUserTable (0);if _dbbe !=nil {return 0,_dbbe ;};};return _gegab ._dgbda .Decode (_gegab ._cegd );};_daed ,_gfgf :=_ad .GetStandardTable (6+int (_gegab .SbHuffFS ));if _gfgf !=nil {return 0,_gfgf ;};return _daed .Decode (_gegab ._cegd );};_agcgf ,_agbd :=_gegab ._ccbfg .DecodeInt (_gegab ._begd );if _agbd !=nil {return 0,_agbd ;};return int64 (_agcgf ),nil ;};func (_dda *GenericRegion )GetRegionInfo ()*RegionSegment {return _dda .RegionSegment };func (_cdc *GenericRegion )computeSegmentDataStructure ()error {_cdc .DataOffset =_cdc ._fb .StreamPosition ();_cdc .DataHeaderLength =_cdc .DataOffset -_cdc .DataHeaderOffset ;_cdc .DataLength =int64 (_cdc ._fb .Length ())-_cdc .DataHeaderLength ;return nil ;};type HalftoneRegion struct{_cecb _aaa .StreamReader ;_aag *Header ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;HDefaultPixel int8 ;CombinationOperator _gg .CombinationOperator ;HSkipEnabled bool ;HTemplate byte ;IsMMREncoded bool ;HGridWidth uint32 ;HGridHeight uint32 ;HGridX int32 ;HGridY int32 ;HRegionX uint16 ;HRegionY uint16 ;HalftoneRegionBitmap *_gg .Bitmap ;Patterns []*_gg .Bitmap ;};func (_gcbe *PageInformationSegment )Init (h *Header ,r _aaa .StreamReader )(_fded error ){_gcbe ._gefa =r ;if _fded =_gcbe .parseHeader ();_fded !=nil {return _df .Wrap (_fded ,"P\u0061\u0067\u0065\u0049\u006e\u0066o\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065g\u006d\u0065\u006et\u002eI\u006e\u0069\u0074","");};return nil ;};func (_faff *GenericRegion )overrideAtTemplate1 (_cefe ,_eabe ,_dfad ,_faeg ,_edg int )int {_cefe &=0x1FF7;if _faff .GBAtY [0]==0&&_faff .GBAtX [0]>=-int8 (_edg ){_cefe |=(_faeg >>uint (7-(int8 (_edg )+_faff .GBAtX [0]))&0x1)<<3;}else {_cefe |=int (_faff .getPixel (_eabe +int (_faff .GBAtX [0]),_dfad +int (_faff .GBAtY [0])))<<3;};return _cefe ;};func NewGenericRegion (r _aaa .StreamReader )*GenericRegion {return &GenericRegion {RegionSegment :NewRegionSegment (r ),_fb :r };};type template0 struct{};func _bdec (_bba _aaa .StreamReader ,_abc *Header )*GenericRefinementRegion {return &GenericRefinementRegion {_fe :_bba ,RegionInfo :NewRegionSegment (_bba ),_af :_abc ,_bb :&template0 {},_ge :&template1 {}};};func (_baefe *SymbolDictionary )decodeAggregate (_ecdd ,_daca uint32 )error {var (_cgec int64 ;_dbbdec error ;);if _baefe .IsHuffmanEncoded {_cgec ,_dbbdec =_baefe .huffDecodeRefAggNInst ();if _dbbdec !=nil {return _dbbdec ;};}else {_aeec ,_gece :=_baefe ._aegd .DecodeInt (_baefe ._aabfa );if _gece !=nil {return _gece ;};_cgec =int64 (_aeec );};if _cgec > 1{return _baefe .decodeThroughTextRegion (_ecdd ,_daca ,uint32 (_cgec ));}else if _cgec ==1{return _baefe .decodeRefinedSymbol (_ecdd ,_daca );};return nil ;};func (_edff *Header )String ()string {_cfbb :=&_a .Builder {};_cfbb .WriteString ("\u000a[\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045A\u0044\u0045\u0052\u005d\u000a");_cfbb .WriteString (_aa .Sprintf ("\t\u002d\u0020\u0053\u0065gm\u0065n\u0074\u004e\u0075\u006d\u0062e\u0072\u003a\u0020\u0025\u0076\u000a",_edff .SegmentNumber ));_cfbb .WriteString (_aa .Sprintf ("\u0009\u002d\u0020T\u0079\u0070\u0065\u003a\u0020\u0025\u0076\u000a",_edff .Type ));_cfbb .WriteString (_aa .Sprintf ("\u0009-\u0020R\u0065\u0074\u0061\u0069\u006eF\u006c\u0061g\u003a\u0020\u0025\u0076\u000a",_edff .RetainFlag ));_cfbb .WriteString (_aa .Sprintf ("\u0009\u002d\u0020Pa\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_edff .PageAssociation ));_cfbb .WriteString (_aa .Sprintf ("\u0009\u002d\u0020\u0050\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074i\u006fn\u0046\u0069\u0065\u006c\u0064\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_edff .PageAssociationFieldSize ));_cfbb .WriteString ("\u0009-\u0020R\u0054\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u0053\u003a\u000a");for _ ,_cdgdc :=range _edff .RTSNumbers {_cfbb .WriteString (_aa .Sprintf ("\u0009\t\u002d\u0020\u0025\u0064\u000a",_cdgdc ));};_cfbb .WriteString (_aa .Sprintf ("\t\u002d \u0048\u0065\u0061\u0064\u0065\u0072\u004c\u0065n\u0067\u0074\u0068\u003a %\u0076\u000a",_edff .HeaderLength ));_cfbb .WriteString (_aa .Sprintf ("\u0009-\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061L\u0065n\u0067\u0074\u0068\u003a\u0020\u0025\u0076\n",_edff .SegmentDataLength ));_cfbb .WriteString (_aa .Sprintf ("\u0009\u002d\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074D\u0061\u0074\u0061\u0053\u0074\u0061\u0072t\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0076\u000a",_edff .SegmentDataStartOffset ));return _cfbb .String ();};func (_dgcb *TableSegment )HtRS ()int32 {return _dgcb ._bbf };func (_cbgdb *TableSegment )parseHeader ()error {var (_cdcf int ;_dgedg uint64 ;_ccdf error ;);_cdcf ,_ccdf =_cbgdb ._gbfb .ReadBit ();if _ccdf !=nil {return _ccdf ;};if _cdcf ==1{return _aa .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0061\u0062\u006c\u0065 \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0064e\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u002e\u0020\u0042\u002e\u0032\u002e1\u0020\u0043\u006f\u0064\u0065\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0042\u0069\u0074\u0020\u0037\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u007a\u0065\u0072\u006f\u002e\u0020\u0057a\u0073\u003a \u0025\u0064",_cdcf );};if _dgedg ,_ccdf =_cbgdb ._gbfb .ReadBits (3);_ccdf !=nil {return _ccdf ;};_cbgdb ._bbf =(int32 (_dgedg )+1)&0xf;if _dgedg ,_ccdf =_cbgdb ._gbfb .ReadBits (3);_ccdf !=nil {return _ccdf ;};_cbgdb ._egfa =(int32 (_dgedg )+1)&0xf;if _dgedg ,_ccdf =_cbgdb ._gbfb .ReadBits (32);_ccdf !=nil {return _ccdf ;};_cbgdb ._efbb =int32 (_dgedg &_g .MaxInt32 );if _dgedg ,_ccdf =_cbgdb ._gbfb .ReadBits (32);_ccdf !=nil {return _ccdf ;};_cbgdb ._gagfe =int32 (_dgedg &_g .MaxInt32 );return nil ;};func (_dbbf *Header )GetSegmentData ()(Segmenter ,error ){var _gfb Segmenter ;if _dbbf .SegmentData !=nil {_gfb =_dbbf .SegmentData ;};if _gfb ==nil {_cbded ,_gddd :=_agge [_dbbf .Type ];if !_gddd {return nil ,_aa .Errorf ("\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0073\u002f\u0020\u0025\u0064\u0020\u0063\u0072e\u0061t\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e\u0020",_dbbf .Type ,_dbbf .Type );};_gfb =_cbded ();_fa .Log .Trace ("\u005b\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u0020\u0061\u0074\u0020\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0030\u0034\u0058",_dbbf .SegmentNumber ,_dbbf .SegmentDataStartOffset );_defb ,_bbbe :=_dbbf .subInputReader ();if _bbbe !=nil {return nil ,_bbbe ;};if _adda :=_gfb .Init (_dbbf ,_defb );_adda !=nil {_fa .Log .Debug ("\u0049\u006e\u0069\u0074 \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076 \u0066o\u0072\u0020\u0074\u0079\u0070\u0065\u003a \u0025\u0054",_adda ,_gfb );return nil ,_adda ;};_dbbf .SegmentData =_gfb ;};return _gfb ,nil ;};func (_afae *RegionSegment )Encode (w _aaa .BinaryWriter )(_bega int ,_faagf error ){const _bbaa ="R\u0065g\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065n\u0074\u002e\u0045\u006eco\u0064\u0065";_affb :=make ([]byte ,4);_gd .BigEndian .PutUint32 (_affb ,_afae .BitmapWidth );_bega ,_faagf =w .Write (_affb );if _faagf !=nil {return 0,_df .Wrap (_faagf ,_bbaa ,"\u0057\u0069\u0064t\u0068");};_gd .BigEndian .PutUint32 (_affb ,_afae .BitmapHeight );var _ecca int ;_ecca ,_faagf =w .Write (_affb );if _faagf !=nil {return 0,_df .Wrap (_faagf ,_bbaa ,"\u0048\u0065\u0069\u0067\u0068\u0074");};_bega +=_ecca ;_gd .BigEndian .PutUint32 (_affb ,_afae .XLocation );_ecca ,_faagf =w .Write (_affb );if _faagf !=nil {return 0,_df .Wrap (_faagf ,_bbaa ,"\u0058L\u006f\u0063\u0061\u0074\u0069\u006fn");};_bega +=_ecca ;_gd .BigEndian .PutUint32 (_affb ,_afae .YLocation );_ecca ,_faagf =w .Write (_affb );if _faagf !=nil {return 0,_df .Wrap (_faagf ,_bbaa ,"\u0059L\u006f\u0063\u0061\u0074\u0069\u006fn");};_bega +=_ecca ;if _faagf =w .WriteByte (byte (_afae .CombinaionOperator )&0x07);_faagf !=nil {return 0,_df .Wrap (_faagf ,_bbaa ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};_bega ++;return _bega ,nil ;};type OrganizationType uint8 ;func (_dbde *SymbolDictionary )setRetainedCodingContexts (_gbcg *SymbolDictionary ){_dbde ._aegd =_gbcg ._aegd ;_dbde .IsHuffmanEncoded =_gbcg .IsHuffmanEncoded ;_dbde .UseRefinementAggregation =_gbcg .UseRefinementAggregation ;_dbde .SdTemplate =_gbcg .SdTemplate ;_dbde .SdrTemplate =_gbcg .SdrTemplate ;_dbde .SdATX =_gbcg .SdATX ;_dbde .SdATY =_gbcg .SdATY ;_dbde .SdrATX =_gbcg .SdrATX ;_dbde .SdrATY =_gbcg .SdrATY ;_dbde ._deedb =_gbcg ._deedb ;};func (_fedf *PatternDictionary )parseHeader ()error {_fa .Log .Trace ("\u005b\u0050\u0041\u0054\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054I\u004f\u004e\u0041\u0052\u0059\u005d[\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d\u0020b\u0065\u0067\u0069\u006e");defer func (){_fa .Log .Trace ("\u005b\u0050\u0041T\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u005b\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");}();_ ,_feca :=_fedf ._fddg .ReadBits (5);if _feca !=nil {return _feca ;};if _feca =_fedf .readTemplate ();_feca !=nil {return _feca ;};if _feca =_fedf .readIsMMREncoded ();_feca !=nil {return _feca ;};if _feca =_fedf .readPatternWidthAndHeight ();_feca !=nil {return _feca ;};if _feca =_fedf .readGrayMax ();_feca !=nil {return _feca ;};if _feca =_fedf .computeSegmentDataStructure ();_feca !=nil {return _feca ;};return _fedf .checkInput ();};func (_eaae *Header )readNumberOfReferredToSegments (_ddc _aaa .StreamReader )(uint64 ,error ){const _ggbd ="\u0072\u0065\u0061\u0064\u004e\u0075\u006d\u0062\u0065\u0072O\u0066\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";_abbf ,_abda :=_ddc .ReadBits (3);if _abda !=nil {return 0,_df .Wrap (_abda ,_ggbd ,"\u0063\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0072\u0074\u0073");};_abbf &=0xf;var _gbbg []byte ;if _abbf <=4{_gbbg =make ([]byte ,5);for _aeb :=0;_aeb <=4;_aeb ++{_bbab ,_bgbef :=_ddc .ReadBit ();if _bgbef !=nil {return 0,_df .Wrap (_bgbef ,_ggbd ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_gbbg [_aeb ]=byte (_bbab );};}else {_abbf ,_abda =_ddc .ReadBits (29);if _abda !=nil {return 0,_abda ;};_abbf &=_g .MaxInt32 ;_dgbe :=(_abbf +8)>>3;_dgbe <<=3;_gbbg =make ([]byte ,_dgbe );var _fdbf uint64 ;for _fdbf =0;_fdbf < _dgbe ;_fdbf ++{_fegb ,_cbfb :=_ddc .ReadBit ();if _cbfb !=nil {return 0,_df .Wrap (_cbfb ,_ggbd ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_gbbg [_fdbf ]=byte (_fegb );};};return _abbf ,nil ;};func (_gbdg *PageInformationSegment )readRequiresAuxiliaryBuffer ()error {_egfg ,_fcd :=_gbdg ._gefa .ReadBit ();if _fcd !=nil {return _fcd ;};if _egfg ==1{_gbdg ._fcgg =true ;};return nil ;};func (_ggcca *TextRegion )decodeIb (_gbaa ,_feab int64 )(*_gg .Bitmap ,error ){const _fcge ="\u0064\u0065\u0063\u006f\u0064\u0065\u0049\u0062";var (_cabg error ;_eccaa *_gg .Bitmap ;);if _gbaa ==0{if int (_feab )> len (_ggcca .Symbols )-1{return nil ,_df .Error (_fcge ,"\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0049\u0042\u0020\u0062\u0069\u0074\u006d\u0061\u0070\u002e\u0020\u0069\u006e\u0064\u0065x\u0020\u006f\u0075\u0074\u0020o\u0066\u0020r\u0061\u006e\u0067\u0065");};return _ggcca .Symbols [int (_feab )],nil ;};var _agad ,_egde ,_dfbdg ,_bbdb int64 ;_agad ,_cabg =_ggcca .decodeRdw ();if _cabg !=nil {return nil ,_df .Wrap (_cabg ,_fcge ,"");};_egde ,_cabg =_ggcca .decodeRdh ();if _cabg !=nil {return nil ,_df .Wrap (_cabg ,_fcge ,"");};_dfbdg ,_cabg =_ggcca .decodeRdx ();if _cabg !=nil {return nil ,_df .Wrap (_cabg ,_fcge ,"");};_bbdb ,_cabg =_ggcca .decodeRdy ();if _cabg !=nil {return nil ,_df .Wrap (_cabg ,_fcge ,"");};if _ggcca .IsHuffmanEncoded {if _ ,_cabg =_ggcca .decodeSymInRefSize ();_cabg !=nil {return nil ,_df .Wrap (_cabg ,_fcge ,"");};_ggcca ._cegd .Align ();};_degg :=_ggcca .Symbols [_feab ];_caec :=uint32 (_degg .Width );_fcdf :=uint32 (_degg .Height );_ccbg :=int32 (uint32 (_agad )>>1)+int32 (_dfbdg );_adafc :=int32 (uint32 (_egde )>>1)+int32 (_bbdb );if _ggcca ._dddd ==nil {_ggcca ._dddd =_bdec (_ggcca ._cegd ,nil );};_ggcca ._dddd .setParameters (_ggcca ._eafd ,_ggcca ._ccbfg ,_ggcca .SbrTemplate ,_caec +uint32 (_agad ),_fcdf +uint32 (_egde ),_degg ,_ccbg ,_adafc ,false ,_ggcca .SbrATX ,_ggcca .SbrATY );_eccaa ,_cabg =_ggcca ._dddd .GetRegionBitmap ();if _cabg !=nil {return nil ,_df .Wrap (_cabg ,_fcge ,"\u0067\u0072\u0066");};if _ggcca .IsHuffmanEncoded {_ggcca ._cegd .Align ();};return _eccaa ,nil ;};func (_dfcc *PatternDictionary )Init (h *Header ,r _aaa .StreamReader )error {_dfcc ._fddg =r ;return _dfcc .parseHeader ();};func (_dea *GenericRefinementRegion )updateOverride ()error {if _dea .GrAtX ==nil ||_dea .GrAtY ==nil {return _ag .New ("\u0041\u0054\u0020\u0070\u0069\u0078\u0065\u006c\u0073\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");};if len (_dea .GrAtX )!=len (_dea .GrAtY ){return _ag .New ("A\u0054\u0020\u0070\u0069xe\u006c \u0069\u006e\u0063\u006f\u006es\u0069\u0073\u0074\u0065\u006e\u0074");};_dea ._cc =make ([]bool ,len (_dea .GrAtX ));switch _dea .TemplateID {case 0:if _dea .GrAtX [0]!=-1&&_dea .GrAtY [0]!=-1{_dea ._cc [0]=true ;_dea ._dee =true ;};if _dea .GrAtX [1]!=-1&&_dea .GrAtY [1]!=-1{_dea ._cc [1]=true ;_dea ._dee =true ;};case 1:_dea ._dee =false ;};return nil ;};func (_gddf *SymbolDictionary )decodeNewSymbols (_dfag ,_cbgg uint32 ,_cafe *_gg .Bitmap ,_ccdcf ,_adba int32 )error {if _gddf ._agbb ==nil {_gddf ._agbb =_bdec (_gddf ._gbfd ,nil );if _gddf ._aegd ==nil {var _fefe error ;_gddf ._aegd ,_fefe =_age .New (_gddf ._gbfd );if _fefe !=nil {return _fefe ;};};if _gddf ._deedb ==nil {_gddf ._deedb =_age .NewStats (65536,1);};};_gddf ._agbb .setParameters (_gddf ._deedb ,_gddf ._aegd ,_gddf .SdrTemplate ,_dfag ,_cbgg ,_cafe ,_ccdcf ,_adba ,false ,_gddf .SdrATX ,_gddf .SdrATY );return _gddf .addSymbol (_gddf ._agbb );};func (_eee *GenericRefinementRegion )GetRegionBitmap ()(*_gg .Bitmap ,error ){var _eag error ;_fa .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");defer func (){if _eag !=nil {_fa .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0047\u0065\u0074R\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006dap\u0020\u0066a\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_eag );}else {_fa .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");};}();if _eee .RegionBitmap !=nil {return _eee .RegionBitmap ,nil ;};_da :=0;if _eee .ReferenceBitmap ==nil {_eee .ReferenceBitmap ,_eag =_eee .getGrReference ();if _eag !=nil {return nil ,_eag ;};};if _eee ._afb ==nil {_eee ._afb ,_eag =_age .New (_eee ._fe );if _eag !=nil {return nil ,_eag ;};};if _eee ._cf ==nil {_eee ._cf =_age .NewStats (8192,1);};_eee .RegionBitmap =_gg .New (int (_eee .RegionInfo .BitmapWidth ),int (_eee .RegionInfo .BitmapHeight ));if _eee .TemplateID ==0{if _eag =_eee .updateOverride ();_eag !=nil {return nil ,_eag ;};};_fae :=(_eee .RegionBitmap .Width +7)&-8;var _agb int ;if _eee .IsTPGROn {_agb =int (-_eee .ReferenceDY )*_eee .ReferenceBitmap .RowStride ;};_fge :=_agb +1;for _ageg :=0;_ageg < _eee .RegionBitmap .Height ;_ageg ++{if _eee .IsTPGROn {_aaae ,_fd :=_eee .decodeSLTP ();if _fd !=nil {return nil ,_fd ;};_da ^=_aaae ;};if _da ==0{_eag =_eee .decodeOptimized (_ageg ,_eee .RegionBitmap .Width ,_eee .RegionBitmap .RowStride ,_eee .ReferenceBitmap .RowStride ,_fae ,_agb ,_fge );if _eag !=nil {return nil ,_eag ;};}else {_eag =_eee .decodeTypicalPredictedLine (_ageg ,_eee .RegionBitmap .Width ,_eee .RegionBitmap .RowStride ,_eee .ReferenceBitmap .RowStride ,_fae ,_agb );if _eag !=nil {return nil ,_eag ;};};};return _eee .RegionBitmap ,nil ;};type Pager interface{GetSegment (int )(*Header ,error );GetBitmap ()(*_gg .Bitmap ,error );};func (_ggac *SymbolDictionary )huffDecodeRefAggNInst ()(int64 ,error ){if !_ggac .SdHuffAggInstanceSelection {_acg ,_beda :=_ad .GetStandardTable (1);if _beda !=nil {return 0,_beda ;};return _acg .Decode (_ggac ._gbfd );};if _ggac ._egcb ==nil {var (_decaf int ;_cgg error ;);if _ggac .SdHuffDecodeHeightSelection ==3{_decaf ++;};if _ggac .SdHuffDecodeWidthSelection ==3{_decaf ++;};if _ggac .SdHuffBMSizeSelection ==3{_decaf ++;};_ggac ._egcb ,_cgg =_ggac .getUserTable (_decaf );if _cgg !=nil {return 0,_cgg ;};};return _ggac ._egcb .Decode (_ggac ._gbfd );};func (_edcg *GenericRegion )Size ()int {return _edcg .RegionSegment .Size ()+1+2*len (_edcg .GBAtX )};func (_ccge *SymbolDictionary )setInSyms ()error {if _ccge .Header .RTSegments !=nil {return _ccge .retrieveImportSymbols ();};_ccge ._ffe =make ([]*_gg .Bitmap ,0);return nil ;};type Documenter interface{GetPage (int )(Pager ,error );GetGlobalSegment (int )(*Header ,error );};func (_ddgd *PageInformationSegment )readMaxStripeSize ()error {_caff ,_gae :=_ddgd ._gefa .ReadBits (15);if _gae !=nil {return _gae ;};_ddgd .MaxStripeSize =uint16 (_caff &_g .MaxUint16 );return nil ;};func (_gfg *GenericRegion )decodeTemplate3 (_cebg ,_cabc ,_eab int ,_bdef ,_fgb int )(_dbc error ){const _adcf ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0033";var (_deg ,_gecb int ;_cfbc int ;_ccc byte ;_ggebf ,_cbgd int ;);if _cebg >=1{_ccc ,_dbc =_gfg .Bitmap .GetByte (_fgb );if _dbc !=nil {return _df .Wrap (_dbc ,_adcf ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_cfbc =int (_ccc );};_deg =(_cfbc >>1)&0x70;for _efgc :=0;_efgc < _eab ;_efgc =_ggebf {var (_fgac byte ;_gbef int ;);_ggebf =_efgc +8;if _fec :=_cabc -_efgc ;_fec > 8{_gbef =8;}else {_gbef =_fec ;};if _cebg >=1{_cfbc <<=8;if _ggebf < _cabc {_ccc ,_dbc =_gfg .Bitmap .GetByte (_fgb +1);if _dbc !=nil {return _df .Wrap (_dbc ,_adcf ,"\u0069\u006e\u006e\u0065\u0072\u0020\u002d\u0020\u006c\u0069\u006e\u0065 \u003e\u003d\u0020\u0031");};_cfbc |=int (_ccc );};};for _eagb :=0;_eagb < _gbef ;_eagb ++{if _gfg ._cde {_gecb =_gfg .overrideAtTemplate3 (_deg ,_efgc +_eagb ,_cebg ,int (_fgac ),_eagb );_gfg ._fbc .SetIndex (int32 (_gecb ));}else {_gfg ._fbc .SetIndex (int32 (_deg ));};_cbgd ,_dbc =_gfg ._agc .DecodeBit (_gfg ._fbc );if _dbc !=nil {return _df .Wrap (_dbc ,_adcf ,"");};_fgac |=byte (_cbgd )<<byte (7-_eagb );_deg =((_deg &0x1f7)<<1)|_cbgd |((_cfbc >>uint (8-_eagb ))&0x010);};if _bafd :=_gfg .Bitmap .SetByte (_bdef ,_fgac );_bafd !=nil {return _df .Wrap (_bafd ,_adcf ,"");};_bdef ++;_fgb ++;};return nil ;};type SegmentEncoder interface{Encode (_ddcf _aaa .BinaryWriter )(_bggca int ,_afbc error );};func (_eaea *GenericRegion )decodeTemplate1 (_baa ,_fgdc ,_gef int ,_fcg ,_fga int )(_bbbg error ){const _ggeb ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0031";var (_gec ,_cdb int ;_ggb ,_addd int ;_bcg byte ;_fca ,_deed int ;);if _baa >=1{_bcg ,_bbbg =_eaea .Bitmap .GetByte (_fga );if _bbbg !=nil {return _df .Wrap (_bbbg ,_ggeb ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_ggb =int (_bcg );};if _baa >=2{_bcg ,_bbbg =_eaea .Bitmap .GetByte (_fga -_eaea .Bitmap .RowStride );if _bbbg !=nil {return _df .Wrap (_bbbg ,_ggeb ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_addd =int (_bcg )<<5;};_gec =((_ggb >>1)&0x1f8)|((_addd >>1)&0x1e00);for _efa :=0;_efa < _gef ;_efa =_fca {var (_eddd byte ;_cbf int ;);_fca =_efa +8;if _efb :=_fgdc -_efa ;_efb > 8{_cbf =8;}else {_cbf =_efb ;};if _baa > 0{_ggb <<=8;if _fca < _fgdc {_bcg ,_bbbg =_eaea .Bitmap .GetByte (_fga +1);if _bbbg !=nil {return _df .Wrap (_bbbg ,_ggeb ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_ggb |=int (_bcg );};};if _baa > 1{_addd <<=8;if _fca < _fgdc {_bcg ,_bbbg =_eaea .Bitmap .GetByte (_fga -_eaea .Bitmap .RowStride +1);if _bbbg !=nil {return _df .Wrap (_bbbg ,_ggeb ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_addd |=int (_bcg )<<5;};};for _abd :=0;_abd < _cbf ;_abd ++{if _eaea ._cde {_cdb =_eaea .overrideAtTemplate1 (_gec ,_efa +_abd ,_baa ,int (_eddd ),_abd );_eaea ._fbc .SetIndex (int32 (_cdb ));}else {_eaea ._fbc .SetIndex (int32 (_gec ));};_deed ,_bbbg =_eaea ._agc .DecodeBit (_eaea ._fbc );if _bbbg !=nil {return _df .Wrap (_bbbg ,_ggeb ,"");};_eddd |=byte (_deed )<<uint (7-_abd );_geg :=uint (8-_abd );_gec =((_gec &0xefb)<<1)|_deed |((_ggb >>_geg )&0x8)|((_addd >>_geg )&0x200);};if _aaff :=_eaea .Bitmap .SetByte (_fcg ,_eddd );_aaff !=nil {return _df .Wrap (_aaff ,_ggeb ,"");};_fcg ++;_fga ++;};return nil ;};type Regioner interface{GetRegionBitmap ()(*_gg .Bitmap ,error );GetRegionInfo ()*RegionSegment ;};func (_be *EndOfStripe )Init (h *Header ,r _aaa .StreamReader )error {_be ._de =r ;return _be .parseHeader (h ,r );};func (_adaf *GenericRegion )decodeSLTP ()(int ,error ){switch _adaf .GBTemplate {case 0:_adaf ._fbc .SetIndex (0x9B25);case 1:_adaf ._fbc .SetIndex (0x795);case 2:_adaf ._fbc .SetIndex (0xE5);case 3:_adaf ._fbc .SetIndex (0x195);};return _adaf ._agc .DecodeBit (_adaf ._fbc );};func (_cegc *SymbolDictionary )decodeDifferenceWidth ()(int64 ,error ){if _cegc .IsHuffmanEncoded {switch _cegc .SdHuffDecodeWidthSelection {case 0:_ccce ,_aafg :=_ad .GetStandardTable (2);if _aafg !=nil {return 0,_aafg ;};return _ccce .Decode (_cegc ._gbfd );case 1:_abdff ,_bgfg :=_ad .GetStandardTable (3);if _bgfg !=nil {return 0,_bgfg ;};return _abdff .Decode (_cegc ._gbfd );case 3:if _cegc ._afafe ==nil {var _bddd int ;if _cegc .SdHuffDecodeHeightSelection ==3{_bddd ++;};_ggcgd ,_fead :=_cegc .getUserTable (_bddd );if _fead !=nil {return 0,_fead ;};_cegc ._afafe =_ggcgd ;};return _cegc ._afafe .Decode (_cegc ._gbfd );};}else {_bdda ,_egggg :=_cegc ._aegd .DecodeInt (_cegc ._gca );if _egggg !=nil {return 0,_egggg ;};if _bdda ==_g .MaxInt32 {return int64 (_g .MaxInt64 ),nil ;};return int64 (_bdda ),nil ;};return 0,nil ;};func (_ceb *GenericRegion )Init (h *Header ,r _aaa .StreamReader )error {_ceb .RegionSegment =NewRegionSegment (r );_ceb ._fb =r ;return _ceb .parseHeader ();};func (_ceadb *PatternDictionary )extractPatterns (_gdbf *_gg .Bitmap )error {var _cbdbg int ;_fcef :=make ([]*_gg .Bitmap ,_ceadb .GrayMax +1);for _cbdbg <=int (_ceadb .GrayMax ){_cddd :=int (_ceadb .HdpWidth )*_cbdbg ;_dged :=_gf .Rect (_cddd ,0,_cddd +int (_ceadb .HdpWidth ),int (_ceadb .HdpHeight ));_cbdg ,_cacg :=_gg .Extract (_dged ,_gdbf );if _cacg !=nil {return _cacg ;};_fcef [_cbdbg ]=_cbdg ;_cbdbg ++;};_ceadb .Patterns =_fcef ;return nil ;};func (_eadf *TableSegment )HtOOB ()int32 {return _eadf ._adgad };type Header struct{SegmentNumber uint32 ;Type Type ;RetainFlag bool ;PageAssociation int ;PageAssociationFieldSize bool ;RTSegments []*Header ;HeaderLength int64 ;SegmentDataLength uint64 ;SegmentDataStartOffset uint64 ;Reader _aaa .StreamReader ;SegmentData Segmenter ;RTSNumbers []int ;RetainBits []uint8 ;};func (_egab *TextRegion )symbolIDCodeLengths ()error {var (_defd []*_ad .Code ;_ccafbf uint64 ;_fdgfa _ad .Tabler ;_gdfaa error ;);for _gdcbf :=0;_gdcbf < 35;_gdcbf ++{_ccafbf ,_gdfaa =_egab ._cegd .ReadBits (4);if _gdfaa !=nil {return _gdfaa ;};_dage :=int (_ccafbf &0xf);if _dage > 0{_defd =append (_defd ,_ad .NewCode (int32 (_dage ),0,int32 (_gdcbf ),false ));};};_fdgfa ,_gdfaa =_ad .NewFixedSizeTable (_defd );if _gdfaa !=nil {return _gdfaa ;};var (_abcf int64 ;_cfefa uint32 ;_bgga []*_ad .Code ;_fagc int64 ;);for _cfefa < _egab .NumberOfSymbols {_fagc ,_gdfaa =_fdgfa .Decode (_egab ._cegd );if _gdfaa !=nil {return _gdfaa ;};if _fagc < 32{if _fagc > 0{_bgga =append (_bgga ,_ad .NewCode (int32 (_fagc ),0,int32 (_cfefa ),false ));};_abcf =_fagc ;_cfefa ++;}else {var _ceac ,_afbea int64 ;switch _fagc {case 32:_ccafbf ,_gdfaa =_egab ._cegd .ReadBits (2);if _gdfaa !=nil {return _gdfaa ;};_ceac =3+int64 (_ccafbf );if _cfefa > 0{_afbea =_abcf ;};case 33:_ccafbf ,_gdfaa =_egab ._cegd .ReadBits (3);if _gdfaa !=nil {return _gdfaa ;};_ceac =3+int64 (_ccafbf );case 34:_ccafbf ,_gdfaa =_egab ._cegd .ReadBits (7);if _gdfaa !=nil {return _gdfaa ;};_ceac =11+int64 (_ccafbf );};for _gdef :=0;_gdef < int (_ceac );_gdef ++{if _afbea > 0{_bgga =append (_bgga ,_ad .NewCode (int32 (_afbea ),0,int32 (_cfefa ),false ));};_cfefa ++;};};};_egab ._cegd .Align ();_egab ._afgb ,_gdfaa =_ad .NewFixedSizeTable (_bgga );return _gdfaa ;};func (_cgag *PatternDictionary )GetDictionary ()([]*_gg .Bitmap ,error ){if _cgag .Patterns !=nil {return _cgag .Patterns ,nil ;};if !_cgag .IsMMREncoded {_cgag .setGbAtPixels ();};_gfa :=NewGenericRegion (_cgag ._fddg );_gfa .setParametersMMR (_cgag .IsMMREncoded ,_cgag .DataOffset ,_cgag .DataLength ,uint32 (_cgag .HdpHeight ),(_cgag .GrayMax +1)*uint32 (_cgag .HdpWidth ),_cgag .HDTemplate ,false ,false ,_cgag .GBAtX ,_cgag .GBAtY );_dgcd ,_ggea :=_gfa .GetRegionBitmap ();if _ggea !=nil {return nil ,_ggea ;};if _ggea =_cgag .extractPatterns (_dgcd );_ggea !=nil {return nil ,_ggea ;};return _cgag .Patterns ,nil ;};func (_bab *HalftoneRegion )combineGrayscalePlanes (_facf []*_gg .Bitmap ,_dba int )error {_dbbd :=0;for _ceada :=0;_ceada < _facf [_dba ].Height ;_ceada ++{for _afbb :=0;_afbb < _facf [_dba ].Width ;_afbb +=8{_ggcg ,_fcad :=_facf [_dba +1].GetByte (_dbbd );if _fcad !=nil {return _fcad ;};_adfa ,_fcad :=_facf [_dba ].GetByte (_dbbd );if _fcad !=nil {return _fcad ;};_fcad =_facf [_dba ].SetByte (_dbbd ,_gg .CombineBytes (_adfa ,_ggcg ,_gg .CmbOpXor ));if _fcad !=nil {return _fcad ;};_dbbd ++;};};return nil ;};func (_ecgd *PageInformationSegment )DefaultPixelValue ()uint8 {return _ecgd ._dbab };func (_bggcae *SymbolDictionary )Init (h *Header ,r _aaa .StreamReader )error {_bggcae .Header =h ;_bggcae ._gbfd =r ;return _bggcae .parseHeader ();};var (_fbab Segmenter ;_agge =map[Type ]func ()Segmenter {TSymbolDictionary :func ()Segmenter {return &SymbolDictionary {}},TIntermediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateLosslessTextRegion :func ()Segmenter {return &TextRegion {}},TPatternDictionary :func ()Segmenter {return &PatternDictionary {}},TIntermediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateLosslessHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TIntermediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateLosslessGenericRegion :func ()Segmenter {return &GenericRegion {}},TIntermediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateLosslessGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TPageInformation :func ()Segmenter {return &PageInformationSegment {}},TEndOfPage :func ()Segmenter {return _fbab },TEndOfStrip :func ()Segmenter {return &EndOfStripe {}},TEndOfFile :func ()Segmenter {return _fbab },TProfiles :func ()Segmenter {return _fbab },TTables :func ()Segmenter {return &TableSegment {}},TExtension :func ()Segmenter {return _fbab },TBitmap :func ()Segmenter {return _fbab }};);func (_fcce *template1 )setIndex (_bcb *_age .DecoderStats ){_bcb .SetIndex (0x080)};func (_dbg *GenericRegion )setOverrideFlag (_cdgb int ){_dbg .GBAtOverride [_cdgb ]=true ;_dbg ._cde =true ;};const (TSymbolDictionary Type =0;TIntermediateTextRegion Type =4;TImmediateTextRegion Type =6;TImmediateLosslessTextRegion Type =7;TPatternDictionary Type =16;TIntermediateHalftoneRegion Type =20;TImmediateHalftoneRegion Type =22;TImmediateLosslessHalftoneRegion Type =23;TIntermediateGenericRegion Type =36;TImmediateGenericRegion Type =38;TImmediateLosslessGenericRegion Type =39;TIntermediateGenericRefinementRegion Type =40;TImmediateGenericRefinementRegion Type =42;TImmediateLosslessGenericRefinementRegion Type =43;TPageInformation Type =48;TEndOfPage Type =49;TEndOfStrip Type =50;TEndOfFile Type =51;TProfiles Type =52;TTables Type =53;TExtension Type =62;TBitmap Type =70;);func (_accg *TextRegion )encodeSymbols (_cffg _aaa .BinaryWriter )(_ebfc int ,_fefa error ){const _edfff ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";_egef :=make ([]byte ,4);_gd .BigEndian .PutUint32 (_egef ,_accg .NumberOfSymbols );if _ebfc ,_fefa =_cffg .Write (_egef );_fefa !=nil {return _ebfc ,_df .Wrap (_fefa ,_edfff ,"\u004e\u0075\u006dbe\u0072\u004f\u0066\u0053\u0079\u006d\u0062\u006f\u006c\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073");};_afbe ,_fefa :=_gg .NewClassedPoints (_accg ._cgac ,_dd .IntSlice (_accg ._dbge ));if _fefa !=nil {return 0,_df .Wrap (_fefa ,_edfff ,"");};var _ffaef ,_fgad int ;_bfdc :=_gga .New ();_bfdc .Init ();if _fefa =_bfdc .EncodeInteger (_gga .IADT ,0);_fefa !=nil {return _ebfc ,_df .Wrap (_fefa ,_edfff ,"\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0020\u0044\u0054");};_gfdda ,_fefa :=_afbe .GroupByY ();if _fefa !=nil {return 0,_df .Wrap (_fefa ,_edfff ,"");};for _ ,_fdgf :=range _gfdda {_efgdb :=int (_fdgf .YAtIndex (0));_ddba :=_efgdb -_ffaef ;if _fefa =_bfdc .EncodeInteger (_gga .IADT ,_ddba );_fefa !=nil {return _ebfc ,_df .Wrap (_fefa ,_edfff ,"");};var _gfcb int ;for _afbda ,_ggag :=range _fdgf .IntSlice {switch _afbda {case 0:_gfagd :=int (_fdgf .XAtIndex (_afbda ))-_fgad ;if _fefa =_bfdc .EncodeInteger (_gga .IAFS ,_gfagd );_fefa !=nil {return _ebfc ,_df .Wrap (_fefa ,_edfff ,"");};_fgad +=_gfagd ;_gfcb =_fgad ;default:_bceb :=int (_fdgf .XAtIndex (_afbda ))-_gfcb ;if _fefa =_bfdc .EncodeInteger (_gga .IADS ,_bceb );_fefa !=nil {return _ebfc ,_df .Wrap (_fefa ,_edfff ,"");};_gfcb +=_bceb ;};_ddcg ,_cegcf :=_accg ._bbbgc .Get (_ggag );if _cegcf !=nil {return _ebfc ,_df .Wrap (_cegcf ,_edfff ,"");};_cede ,_dfbc :=_accg ._eebed [_ddcg ];if !_dfbc {_cede ,_dfbc =_accg ._baffe [_ddcg ];if !_dfbc {return _ebfc ,_df .Errorf (_edfff ,"\u0053\u0079\u006d\u006f\u0062\u006c:\u0020\u0027\u0025d\u0027\u0020\u0069s\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064 \u0069\u006e\u0020\u0067\u006cob\u0061\u006c\u0020\u0061\u006e\u0064\u0020\u006c\u006f\u0063\u0061\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020\u006d\u0061\u0070",_ddcg );};};if _cegcf =_bfdc .EncodeIAID (_accg ._bddb ,_cede );_cegcf !=nil {return _ebfc ,_df .Wrap (_cegcf ,_edfff ,"");};};if _fefa =_bfdc .EncodeOOB (_gga .IADS );_fefa !=nil {return _ebfc ,_df .Wrap (_fefa ,_edfff ,"");};};_bfdc .Final ();_dceb ,_fefa :=_bfdc .WriteTo (_cffg );if _fefa !=nil {return _ebfc ,_df .Wrap (_fefa ,_edfff ,"");};_ebfc +=int (_dceb );return _ebfc ,nil ;};func (_bgdfg *SymbolDictionary )encodeRefinementATFlags (_ecbb _aaa .BinaryWriter )(_fdbe int ,_bggb error ){const _cfff ="\u0065\u006e\u0063od\u0065\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0041\u0054\u0046\u006c\u0061\u0067\u0073";if !_bgdfg .UseRefinementAggregation ||_bgdfg .SdrTemplate !=0{return 0,nil ;};for _gdagb :=0;_gdagb < 2;_gdagb ++{if _bggb =_ecbb .WriteByte (byte (_bgdfg .SdrATX [_gdagb ]));_bggb !=nil {return _fdbe ,_df .Wrapf (_bggb ,_cfff ,"\u0053\u0064\u0072\u0041\u0054\u0058\u005b\u0025\u0064\u005d",_gdagb );};_fdbe ++;if _bggb =_ecbb .WriteByte (byte (_bgdfg .SdrATY [_gdagb ]));_bggb !=nil {return _fdbe ,_df .Wrapf (_bggb ,_cfff ,"\u0053\u0064\u0072\u0041\u0054\u0059\u005b\u0025\u0064\u005d",_gdagb );};_fdbe ++;};return _fdbe ,nil ;};func (_eaa *GenericRegion )overrideAtTemplate0a (_faeb ,_caf ,_cccg ,_bebb ,_baef ,_aba int )int {if _eaa .GBAtOverride [0]{_faeb &=0xFFEF;if _eaa .GBAtY [0]==0&&_eaa .GBAtX [0]>=-int8 (_baef ){_faeb |=(_bebb >>uint (int8 (_aba )-_eaa .GBAtX [0]&0x1))<<4;}else {_faeb |=int (_eaa .getPixel (_caf +int (_eaa .GBAtX [0]),_cccg +int (_eaa .GBAtY [0])))<<4;};};if _eaa .GBAtOverride [1]{_faeb &=0xFBFF;if _eaa .GBAtY [1]==0&&_eaa .GBAtX [1]>=-int8 (_baef ){_faeb |=(_bebb >>uint (int8 (_aba )-_eaa .GBAtX [1]&0x1))<<10;}else {_faeb |=int (_eaa .getPixel (_caf +int (_eaa .GBAtX [1]),_cccg +int (_eaa .GBAtY [1])))<<10;};};if _eaa .GBAtOverride [2]{_faeb &=0xF7FF;if _eaa .GBAtY [2]==0&&_eaa .GBAtX [2]>=-int8 (_baef ){_faeb |=(_bebb >>uint (int8 (_aba )-_eaa .GBAtX [2]&0x1))<<11;}else {_faeb |=int (_eaa .getPixel (_caf +int (_eaa .GBAtX [2]),_cccg +int (_eaa .GBAtY [2])))<<11;};};if _eaa .GBAtOverride [3]{_faeb &=0x7FFF;if _eaa .GBAtY [3]==0&&_eaa .GBAtX [3]>=-int8 (_baef ){_faeb |=(_bebb >>uint (int8 (_aba )-_eaa .GBAtX [3]&0x1))<<15;}else {_faeb |=int (_eaa .getPixel (_caf +int (_eaa .GBAtX [3]),_cccg +int (_eaa .GBAtY [3])))<<15;};};return _faeb ;};func (_fdeg *HalftoneRegion )grayScaleDecoding (_dedc int )([][]int ,error ){var (_cgd []int8 ;_gdfe []int8 ;);if !_fdeg .IsMMREncoded {_cgd =make ([]int8 ,4);_gdfe =make ([]int8 ,4);if _fdeg .HTemplate <=1{_cgd [0]=3;}else if _fdeg .HTemplate >=2{_cgd [0]=2;};_gdfe [0]=-1;_cgd [1]=-3;_gdfe [1]=-1;_cgd [2]=2;_gdfe [2]=-2;_cgd [3]=-2;_gdfe [3]=-2;};_ebc :=make ([]*_gg .Bitmap ,_dedc );_egfd :=NewGenericRegion (_fdeg ._cecb );_egfd .setParametersMMR (_fdeg .IsMMREncoded ,_fdeg .DataOffset ,_fdeg .DataLength ,_fdeg .HGridHeight ,_fdeg .HGridWidth ,_fdeg .HTemplate ,false ,_fdeg .HSkipEnabled ,_cgd ,_gdfe );_ceab :=_dedc -1;var _bbbcg error ;_ebc [_ceab ],_bbbcg =_egfd .GetRegionBitmap ();if _bbbcg !=nil {return nil ,_bbbcg ;};for _ceab > 0{_ceab --;_egfd .Bitmap =nil ;_ebc [_ceab ],_bbbcg =_egfd .GetRegionBitmap ();if _bbbcg !=nil {return nil ,_bbbcg ;};if _bbbcg =_fdeg .combineGrayscalePlanes (_ebc ,_ceab );_bbbcg !=nil {return nil ,_bbbcg ;};};return _fdeg .computeGrayScalePlanes (_ebc ,_dedc );};func NewHeader (d Documenter ,r _aaa .StreamReader ,offset int64 ,organizationType OrganizationType )(*Header ,error ){_bgbe :=&Header {Reader :r };if _cfef :=_bgbe .parse (d ,r ,offset ,organizationType );_cfef !=nil {return nil ,_df .Wrap (_cfef ,"\u004ee\u0077\u0048\u0065\u0061\u0064\u0065r","");};return _bgbe ,nil ;};func (_fcc *GenericRefinementRegion )overrideAtTemplate0 (_eba ,_cea ,_fdf ,_ccaf ,_effb int )int {if _fcc ._cc [0]{_eba &=0xfff7;if _fcc .GrAtY [0]==0&&int (_fcc .GrAtX [0])>=-_effb {_eba |=(_ccaf >>uint (7-(_effb +int (_fcc .GrAtX [0])))&0x1)<<3;}else {_eba |=_fcc .getPixel (_fcc .RegionBitmap ,_cea +int (_fcc .GrAtX [0]),_fdf +int (_fcc .GrAtY [0]))<<3;};};if _fcc ._cc [1]{_eba &=0xefff;if _fcc .GrAtY [1]==0&&int (_fcc .GrAtX [1])>=-_effb {_eba |=(_ccaf >>uint (7-(_effb +int (_fcc .GrAtX [1])))&0x1)<<12;}else {_eba |=_fcc .getPixel (_fcc .ReferenceBitmap ,_cea +int (_fcc .GrAtX [1]),_fdf +int (_fcc .GrAtY [1]));};};return _eba ;};func (_ace *HalftoneRegion )shiftAndFill (_dgd int )int {_dgd >>=8;if _dgd < 0{_acae :=int (_g .Log (float64 (_gdad (_dgd )))/_g .Log (2));_bcfb :=31-_acae ;for _fce :=1;_fce < _bcfb ;_fce ++{_dgd |=1<<uint (31-_fce );};};return _dgd ;};func (_cbcd *PatternDictionary )readPatternWidthAndHeight ()error {_gac ,_eef :=_cbcd ._fddg .ReadByte ();if _eef !=nil {return _eef ;};_cbcd .HdpWidth =_gac ;_gac ,_eef =_cbcd ._fddg .ReadByte ();if _eef !=nil {return _eef ;};_cbcd .HdpHeight =_gac ;return nil ;};func (_cbaa *PageInformationSegment )readWidthAndHeight ()error {_bfcc ,_gee :=_cbaa ._gefa .ReadBits (32);if _gee !=nil {return _gee ;};_cbaa .PageBMWidth =int (_bfcc &_g .MaxInt32 );_bfcc ,_gee =_cbaa ._gefa .ReadBits (32);if _gee !=nil {return _gee ;};_cbaa .PageBMHeight =int (_bfcc &_g .MaxInt32 );return nil ;};func (_bdcec *SymbolDictionary )setExportedSymbols (_aabc []int ){for _ffebe :=uint32 (0);_ffebe < _bdcec ._cbagg +_bdcec .NumberOfNewSymbols ;_ffebe ++{if _aabc [_ffebe ]==1{var _bag *_gg .Bitmap ;if _ffebe < _bdcec ._cbagg {_bag =_bdcec ._ffe [_ffebe ];}else {_bag =_bdcec ._bcbd [_ffebe -_bdcec ._cbagg ];};_fa .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u002d\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u0020\u0041\u0064\u0064 E\u0078\u0070\u006fr\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027%\u0073\u0027",_bag );_bdcec ._gfffe =append (_bdcec ._gfffe ,_bag );};};};func (_fecf *SymbolDictionary )retrieveImportSymbols ()error {for _ ,_ecce :=range _fecf .Header .RTSegments {if _ecce .Type ==0{_gaec ,_cfc :=_ecce .GetSegmentData ();if _cfc !=nil {return _cfc ;};_bedc ,_gbgg :=_gaec .(*SymbolDictionary );if !_gbgg {return _aa .Errorf ("\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0044\u0061\u0074a\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u003a\u0020%\u0054",_gaec );};_gfggb ,_cfc :=_bedc .GetDictionary ();if _cfc !=nil {return _aa .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064 \u0073\u0065\u0067m\u0065\u006e\u0074 \u0077\u0069t\u0068\u0020\u0069\u006e\u0064\u0065x\u003a %\u0064\u0020\u0067\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0073",_ecce .SegmentNumber ,_cfc .Error ());};_fecf ._ffe =append (_fecf ._ffe ,_gfggb ...);_fecf ._cbagg +=_bedc .NumberOfExportedSymbols ;};};return nil ;};type Segmenter interface{Init (_ebaa *Header ,_dff _aaa .StreamReader )error ;};var (_ Regioner =&TextRegion {};_ Segmenter =&TextRegion {};);func (_agaa *GenericRegion )updateOverrideFlags ()error {const _ead ="\u0075\u0070\u0064\u0061te\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _agaa .GBAtX ==nil ||_agaa .GBAtY ==nil {return nil ;};if len (_agaa .GBAtX )!=len (_agaa .GBAtY ){return _df .Errorf (_ead ,"i\u006eco\u0073i\u0073t\u0065\u006e\u0074\u0020\u0041T\u0020\u0070\u0069x\u0065\u006c\u002e\u0020\u0041m\u006f\u0075\u006et\u0020\u006f\u0066\u0020\u0027\u0078\u0027\u0020\u0070\u0069\u0078e\u006c\u0073\u003a %d\u002c\u0020\u0041\u006d\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0027\u0079\u0027\u0020\u0070\u0069\u0078e\u006cs\u003a\u0020\u0025\u0064",len (_agaa .GBAtX ),len (_agaa .GBAtY ));};_agaa .GBAtOverride =make ([]bool ,len (_agaa .GBAtX ));switch _agaa .GBTemplate {case 0:if !_agaa .UseExtTemplates {if _agaa .GBAtX [0]!=3||_agaa .GBAtY [0]!=-1{_agaa .setOverrideFlag (0);};if _agaa .GBAtX [1]!=-3||_agaa .GBAtY [1]!=-1{_agaa .setOverrideFlag (1);};if _agaa .GBAtX [2]!=2||_agaa .GBAtY [2]!=-2{_agaa .setOverrideFlag (2);};if _agaa .GBAtX [3]!=-2||_agaa .GBAtY [3]!=-2{_agaa .setOverrideFlag (3);};}else {if _agaa .GBAtX [0]!=-2||_agaa .GBAtY [0]!=0{_agaa .setOverrideFlag (0);};if _agaa .GBAtX [1]!=0||_agaa .GBAtY [1]!=-2{_agaa .setOverrideFlag (1);};if _agaa .GBAtX [2]!=-2||_agaa .GBAtY [2]!=-1{_agaa .setOverrideFlag (2);};if _agaa .GBAtX [3]!=-1||_agaa .GBAtY [3]!=-2{_agaa .setOverrideFlag (3);};if _agaa .GBAtX [4]!=1||_agaa .GBAtY [4]!=-2{_agaa .setOverrideFlag (4);};if _agaa .GBAtX [5]!=2||_agaa .GBAtY [5]!=-1{_agaa .setOverrideFlag (5);};if _agaa .GBAtX [6]!=-3||_agaa .GBAtY [6]!=0{_agaa .setOverrideFlag (6);};if _agaa .GBAtX [7]!=-4||_agaa .GBAtY [7]!=0{_agaa .setOverrideFlag (7);};if _agaa .GBAtX [8]!=2||_agaa .GBAtY [8]!=-2{_agaa .setOverrideFlag (8);};if _agaa .GBAtX [9]!=3||_agaa .GBAtY [9]!=-1{_agaa .setOverrideFlag (9);};if _agaa .GBAtX [10]!=-2||_agaa .GBAtY [10]!=-2{_agaa .setOverrideFlag (10);};if _agaa .GBAtX [11]!=-3||_agaa .GBAtY [11]!=-1{_agaa .setOverrideFlag (11);};};case 1:if _agaa .GBAtX [0]!=3||_agaa .GBAtY [0]!=-1{_agaa .setOverrideFlag (0);};case 2:if _agaa .GBAtX [0]!=2||_agaa .GBAtY [0]!=-1{_agaa .setOverrideFlag (0);};case 3:if _agaa .GBAtX [0]!=2||_agaa .GBAtY [0]!=-1{_agaa .setOverrideFlag (0);};};return nil ;};func (_gcbc *SymbolDictionary )decodeDirectlyThroughGenericRegion (_ecgdf ,_acf uint32 )error {if _gcbc ._dbee ==nil {_gcbc ._dbee =NewGenericRegion (_gcbc ._gbfd );};_gcbc ._dbee .setParametersWithAt (false ,byte (_gcbc .SdTemplate ),false ,false ,_gcbc .SdATX ,_gcbc .SdATY ,_ecgdf ,_acf ,_gcbc ._deedb ,_gcbc ._aegd );return _gcbc .addSymbol (_gcbc ._dbee );};func (_ccdg *SymbolDictionary )decodeHeightClassBitmap (_faab *_gg .Bitmap ,_agcg int64 ,_decc int ,_eeaf []int )error {for _affa :=_agcg ;_affa < int64 (_ccdg ._dedeb );_affa ++{var _dfbag int ;for _gbefe :=_agcg ;_gbefe <=_affa -1;_gbefe ++{_dfbag +=_eeaf [_gbefe ];};_aeac :=_gf .Rect (_dfbag ,0,_dfbag +_eeaf [_affa ],_decc );_dddfe ,_eafe :=_gg .Extract (_aeac ,_faab );if _eafe !=nil {return _eafe ;};_ccdg ._bcbd [_affa ]=_dddfe ;_ccdg ._gab =append (_ccdg ._gab ,_dddfe );};return nil ;};func (_deec *SymbolDictionary )encodeFlags (_cdccf _aaa .BinaryWriter )(_gafg int ,_fage error ){const _dfadf ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _fage =_cdccf .SkipBits (3);_fage !=nil {return 0,_df .Wrap (_fage ,_dfadf ,"\u0065\u006d\u0070\u0074\u0079\u0020\u0062\u0069\u0074\u0073");};var _baea int ;if _deec .SdrTemplate > 0{_baea =1;};if _fage =_cdccf .WriteBit (_baea );_fage !=nil {return _gafg ,_df .Wrap (_fage ,_dfadf ,"s\u0064\u0072\u0074\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_baea =0;if _deec .SdTemplate > 1{_baea =1;};if _fage =_cdccf .WriteBit (_baea );_fage !=nil {return _gafg ,_df .Wrap (_fage ,_dfadf ,"\u0073\u0064\u0074\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_baea =0;if _deec .SdTemplate ==1||_deec .SdTemplate ==3{_baea =1;};if _fage =_cdccf .WriteBit (_baea );_fage !=nil {return _gafg ,_df .Wrap (_fage ,_dfadf ,"\u0073\u0064\u0074\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_baea =0;if _deec ._fbaba {_baea =1;};if _fage =_cdccf .WriteBit (_baea );_fage !=nil {return _gafg ,_df .Wrap (_fage ,_dfadf ,"\u0063\u006f\u0064in\u0067\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0065\u0064");};_baea =0;if _deec ._fgefa {_baea =1;};if _fage =_cdccf .WriteBit (_baea );_fage !=nil {return _gafg ,_df .Wrap (_fage ,_dfadf ,"\u0063\u006f\u0064\u0069ng\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0075\u0073\u0065\u0064");};_baea =0;if _deec .SdHuffAggInstanceSelection {_baea =1;};if _fage =_cdccf .WriteBit (_baea );_fage !=nil {return _gafg ,_df .Wrap (_fage ,_dfadf ,"\u0073\u0064\u0068\u0075\u0066\u0066\u0061\u0067\u0067\u0069\u006e\u0073\u0074");};_baea =int (_deec .SdHuffBMSizeSelection );if _fage =_cdccf .WriteBit (_baea );_fage !=nil {return _gafg ,_df .Wrap (_fage ,_dfadf ,"\u0073\u0064\u0068u\u0066\u0066\u0062\u006d\u0073\u0069\u007a\u0065");};_baea =0;if _deec .SdHuffDecodeWidthSelection > 1{_baea =1;};if _fage =_cdccf .WriteBit (_baea );_fage !=nil {return _gafg ,_df .Wrap (_fage ,_dfadf ,"s\u0064\u0068\u0075\u0066\u0066\u0077\u0069\u0064\u0074\u0068");};_baea =0;switch _deec .SdHuffDecodeWidthSelection {case 1,3:_baea =1;};if _fage =_cdccf .WriteBit (_baea );_fage !=nil {return _gafg ,_df .Wrap (_fage ,_dfadf ,"s\u0064\u0068\u0075\u0066\u0066\u0077\u0069\u0064\u0074\u0068");};_baea =0;if _deec .SdHuffDecodeHeightSelection > 1{_baea =1;};if _fage =_cdccf .WriteBit (_baea );_fage !=nil {return _gafg ,_df .Wrap (_fage ,_dfadf ,"\u0073\u0064\u0068u\u0066\u0066\u0068\u0065\u0069\u0067\u0068\u0074");};_baea =0;switch _deec .SdHuffDecodeHeightSelection {case 1,3:_baea =1;};if _fage =_cdccf .WriteBit (_baea );_fage !=nil {return _gafg ,_df .Wrap (_fage ,_dfadf ,"\u0073\u0064\u0068u\u0066\u0066\u0068\u0065\u0069\u0067\u0068\u0074");};_baea =0;if _deec .UseRefinementAggregation {_baea =1;};if _fage =_cdccf .WriteBit (_baea );_fage !=nil {return _gafg ,_df .Wrap (_fage ,_dfadf ,"\u0073\u0064\u0072\u0065\u0066\u0061\u0067\u0067");};_baea =0;if _deec .IsHuffmanEncoded {_baea =1;};if _fage =_cdccf .WriteBit (_baea );_fage !=nil {return _gafg ,_df .Wrap (_fage ,_dfadf ,"\u0073\u0064\u0068\u0075\u0066\u0066");};return 2,nil ;};func NewRegionSegment (r _aaa .StreamReader )*RegionSegment {return &RegionSegment {_gfedg :r }};func (_eebda *SymbolDictionary )getSbSymCodeLen ()int8 {_eeee :=int8 (_g .Ceil (_g .Log (float64 (_eebda ._cbagg +_eebda .NumberOfNewSymbols ))/_g .Log (2)));if _eebda .IsHuffmanEncoded &&_eeee < 1{return 1;};return _eeee ;};func (_cgda *Header )CleanSegmentData (){if _cgda .SegmentData !=nil {_cgda .SegmentData =nil ;};};func (_cfd *PageInformationSegment )readContainsRefinement ()error {_ccec ,_cagc :=_cfd ._gefa .ReadBit ();if _cagc !=nil {return _cagc ;};if _ccec ==1{_cfd ._fbg =true ;};return nil ;};var _ templater =&template1 {};func (_gecg *Header )pageSize ()uint {if _gecg .PageAssociation <=255{return 1;};return 4;};func (_bgde *PageInformationSegment )Size ()int {return 19};type templater interface{form (_eeea ,_bbgd ,_agg ,_eagc ,_accea int16 )int16 ;setIndex (_gbe *_age .DecoderStats );};func (_fcae *SymbolDictionary )getToExportFlags ()([]int ,error ){var (_dfcce int ;_dgab int32 ;_addf error ;_cege =int32 (_fcae ._cbagg +_fcae .NumberOfNewSymbols );_abbd =make ([]int ,_cege ););for _fgbf :=int32 (0);_fgbf < _cege ;_fgbf +=_dgab {if _fcae .IsHuffmanEncoded {_edfg ,_cecg :=_ad .GetStandardTable (1);if _cecg !=nil {return nil ,_cecg ;};_gfca ,_cecg :=_edfg .Decode (_fcae ._gbfd );if _cecg !=nil {return nil ,_cecg ;};_dgab =int32 (_gfca );}else {_dgab ,_addf =_fcae ._aegd .DecodeInt (_fcae ._gecbf );if _addf !=nil {return nil ,_addf ;};};if _dgab !=0{for _adec :=_fgbf ;_adec < _fgbf +_dgab ;_adec ++{_abbd [_adec ]=_dfcce ;};};if _dfcce ==0{_dfcce =1;}else {_dfcce =0;};};return _abbd ,nil ;};func (_aefe *Header )readReferredToSegmentNumbers (_aaaf _aaa .StreamReader ,_cfag int )([]int ,error ){const _edfc ="\u0072\u0065\u0061\u0064R\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053e\u0067m\u0065\u006e\u0074\u004e\u0075\u006d\u0062e\u0072\u0073";_fbbg :=make ([]int ,_cfag );if _cfag > 0{_aefe .RTSegments =make ([]*Header ,_cfag );var (_ffbdd uint64 ;_dgff error ;);for _dfadg :=0;_dfadg < _cfag ;_dfadg ++{_ffbdd ,_dgff =_aaaf .ReadBits (byte (_aefe .referenceSize ())<<3);if _dgff !=nil {return nil ,_df .Wrapf (_dgff ,_edfc ,"\u0027\u0025\u0064\u0027 \u0072\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0020\u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u0075\u006db\u0065\u0072",_dfadg );};_fbbg [_dfadg ]=int (_ffbdd &_g .MaxInt32 );};};return _fbbg ,nil ;};func (_cebgb *Header )parse (_bggc Documenter ,_gagc _aaa .StreamReader ,_dbbde int64 ,_ebbb OrganizationType )(_gfge error ){const _ebcb ="\u0070\u0061\u0072s\u0065";_fa .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u005b\u0050A\u0052\u0053\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _gfge !=nil {_fa .Log .Trace ("\u005b\u0053\u0045GM\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045R\u005d[\u0050A\u0052S\u0045\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_gfge );}else {_fa .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052]\u005bP\u0041\u0052\u0053\u0045\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");};}();_ ,_gfge =_gagc .Seek (_dbbde ,_d .SeekStart );if _gfge !=nil {return _df .Wrap (_gfge ,_ebcb ,"\u0073\u0065\u0065\u006b\u0020\u0073\u0074\u0061\u0072\u0074");};if _gfge =_cebgb .readSegmentNumber (_gagc );_gfge !=nil {return _df .Wrap (_gfge ,_ebcb ,"");};if _gfge =_cebgb .readHeaderFlags ();_gfge !=nil {return _df .Wrap (_gfge ,_ebcb ,"");};var _bdd uint64 ;_bdd ,_gfge =_cebgb .readNumberOfReferredToSegments (_gagc );if _gfge !=nil {return _df .Wrap (_gfge ,_ebcb ,"");};_cebgb .RTSNumbers ,_gfge =_cebgb .readReferredToSegmentNumbers (_gagc ,int (_bdd ));if _gfge !=nil {return _df .Wrap (_gfge ,_ebcb ,"");};_gfge =_cebgb .readSegmentPageAssociation (_bggc ,_gagc ,_bdd ,_cebgb .RTSNumbers ...);if _gfge !=nil {return _df .Wrap (_gfge ,_ebcb ,"");};if _cebgb .Type !=TEndOfFile {if _gfge =_cebgb .readSegmentDataLength (_gagc );_gfge !=nil {return _df .Wrap (_gfge ,_ebcb ,"");};};_cebgb .readDataStartOffset (_gagc ,_ebbb );_cebgb .readHeaderLength (_gagc ,_dbbde );_fa .Log .Trace ("\u0025\u0073",_cebgb );return nil ;};func (_dcdb *SymbolDictionary )readNumberOfExportedSymbols ()error {_gfgd ,_gfag :=_dcdb ._gbfd .ReadBits (32);if _gfag !=nil {return _gfag ;};_dcdb .NumberOfExportedSymbols =uint32 (_gfgd &_g .MaxUint32 );return nil ;};func (_cgdb *SymbolDictionary )readAtPixels (_bbgb int )error {_cgdb .SdATX =make ([]int8 ,_bbgb );_cgdb .SdATY =make ([]int8 ,_bbgb );var (_eaee byte ;_bdfc error ;);for _baee :=0;_baee < _bbgb ;_baee ++{_eaee ,_bdfc =_cgdb ._gbfd .ReadByte ();if _bdfc !=nil {return _bdfc ;};_cgdb .SdATX [_baee ]=int8 (_eaee );_eaee ,_bdfc =_cgdb ._gbfd .ReadByte ();if _bdfc !=nil {return _bdfc ;};_cgdb .SdATY [_baee ]=int8 (_eaee );};return nil ;};func (_gfc *GenericRegion )setParametersWithAt (_ccg bool ,_cafd byte ,_faaf ,_beff bool ,_gbd ,_dbca []int8 ,_fgfg ,_gffa uint32 ,_afbd *_age .DecoderStats ,_abf *_age .Decoder ){_gfc .IsMMREncoded =_ccg ;_gfc .GBTemplate =_cafd ;_gfc .IsTPGDon =_faaf ;_gfc .GBAtX =_gbd ;_gfc .GBAtY =_dbca ;_gfc .RegionSegment .BitmapHeight =_gffa ;_gfc .RegionSegment .BitmapWidth =_fgfg ;_gfc ._fccef =nil ;_gfc .Bitmap =nil ;if _afbd !=nil {_gfc ._fbc =_afbd ;};if _abf !=nil {_gfc ._agc =_abf ;};_fa .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049O\u004e\u005d\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073\u0020\u0053\u0044\u0041t\u003a\u0020\u0025\u0073",_gfc );};func (_bce *GenericRefinementRegion )decodeTypicalPredictedLineTemplate0 (_bbba ,_fgf ,_ddg ,_bbg ,_geb ,_ec ,_bda ,_feb ,_add int )error {var (_gda ,_ba ,_cbe ,_afd ,_dfc ,_cg int ;_ecg byte ;_dec error ;);if _bbba > 0{_ecg ,_dec =_bce .RegionBitmap .GetByte (_bda -_ddg );if _dec !=nil {return _dec ;};_cbe =int (_ecg );};if _feb > 0&&_feb <=_bce .ReferenceBitmap .Height {_ecg ,_dec =_bce .ReferenceBitmap .GetByte (_add -_bbg +_ec );if _dec !=nil {return _dec ;};_afd =int (_ecg )<<4;};if _feb >=0&&_feb < _bce .ReferenceBitmap .Height {_ecg ,_dec =_bce .ReferenceBitmap .GetByte (_add +_ec );if _dec !=nil {return _dec ;};_dfc =int (_ecg )<<1;};if _feb > -2&&_feb < _bce .ReferenceBitmap .Height -1{_ecg ,_dec =_bce .ReferenceBitmap .GetByte (_add +_bbg +_ec );if _dec !=nil {return _dec ;};_cg =int (_ecg );};_gda =((_cbe >>5)&0x6)|((_cg >>2)&0x30)|(_dfc &0x180)|(_afd &0xc00);var _fgga int ;for _aaaec :=0;_aaaec < _geb ;_aaaec =_fgga {var _cfgd int ;_fgga =_aaaec +8;var _ed int ;if _ed =_fgf -_aaaec ;_ed > 8{_ed =8;};_fee :=_fgga < _fgf ;_dg :=_fgga < _bce .ReferenceBitmap .Width ;_bdb :=_ec +1;if _bbba > 0{_ecg =0;if _fee {_ecg ,_dec =_bce .RegionBitmap .GetByte (_bda -_ddg +1);if _dec !=nil {return _dec ;};};_cbe =(_cbe <<8)|int (_ecg );};if _feb > 0&&_feb <=_bce .ReferenceBitmap .Height {var _acca int ;if _dg {_ecg ,_dec =_bce .ReferenceBitmap .GetByte (_add -_bbg +_bdb );if _dec !=nil {return _dec ;};_acca =int (_ecg )<<4;};_afd =(_afd <<8)|_acca ;};if _feb >=0&&_feb < _bce .ReferenceBitmap .Height {var _cac int ;if _dg {_ecg ,_dec =_bce .ReferenceBitmap .GetByte (_add +_bdb );if _dec !=nil {return _dec ;};_cac =int (_ecg )<<1;};_dfc =(_dfc <<8)|_cac ;};if _feb > -2&&_feb < (_bce .ReferenceBitmap .Height -1){_ecg =0;if _dg {_ecg ,_dec =_bce .ReferenceBitmap .GetByte (_add +_bbg +_bdb );if _dec !=nil {return _dec ;};};_cg =(_cg <<8)|int (_ecg );};for _fgef :=0;_fgef < _ed ;_fgef ++{var _bae int ;_bdf :=false ;_gge :=(_gda >>4)&0x1ff;if _gge ==0x1ff{_bdf =true ;_bae =1;}else if _gge ==0x00{_bdf =true ;};if !_bdf {if _bce ._dee {_ba =_bce .overrideAtTemplate0 (_gda ,_aaaec +_fgef ,_bbba ,_cfgd ,_fgef );_bce ._cf .SetIndex (int32 (_ba ));}else {_bce ._cf .SetIndex (int32 (_gda ));};_bae ,_dec =_bce ._afb .DecodeBit (_bce ._cf );if _dec !=nil {return _dec ;};};_dagd :=uint (7-_fgef );_cfgd |=int (_bae <<_dagd );_gda =((_gda &0xdb6)<<1)|_bae |(_cbe >>_dagd +5)&0x002|((_cg >>_dagd +2)&0x010)|((_dfc >>_dagd )&0x080)|((_afd >>_dagd )&0x400);};_dec =_bce .RegionBitmap .SetByte (_bda ,byte (_cfgd ));if _dec !=nil {return _dec ;};_bda ++;_add ++;};return nil ;};func (_cgbb *SymbolDictionary )InitEncode (symbols *_gg .Bitmaps ,symbolList []int ,symbolMap map[int ]int ,unborderSymbols bool )error {const _gdddb ="S\u0079\u006d\u0062\u006f\u006c\u0044i\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002eI\u006e\u0069\u0074E\u006ec\u006f\u0064\u0065";_cgbb .SdATX =[]int8 {3,-3,2,-2};_cgbb .SdATY =[]int8 {-1,-1,-2,-2};_cgbb ._bgca =symbols ;_cgbb ._fdfd =make ([]int ,len (symbolList ));copy (_cgbb ._fdfd ,symbolList );if len (_cgbb ._fdfd )!=_cgbb ._bgca .Size (){return _df .Error (_gdddb ,"s\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0061\u006e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u004ci\u0073\u0074\u0020\u006f\u0066\u0020\u0064\u0069\u0066\u0066er\u0065\u006e\u0074 \u0073i\u007a\u0065");};_cgbb .NumberOfNewSymbols =uint32 (symbols .Size ());_cgbb .NumberOfExportedSymbols =uint32 (symbols .Size ());_cgbb ._dacb =symbolMap ;_cgbb ._eacf =unborderSymbols ;return nil ;};func (_gcfc *SymbolDictionary )setAtPixels ()error {if _gcfc .IsHuffmanEncoded {return nil ;};_gbed :=1;if _gcfc .SdTemplate ==0{_gbed =4;};if _gfggd :=_gcfc .readAtPixels (_gbed );_gfggd !=nil {return _gfggd ;};return nil ;};func _gdad (_fgbb int )int {if _fgbb ==0{return 0;};_fgbb |=_fgbb >>1;_fgbb |=_fgbb >>2;_fgbb |=_fgbb >>4;_fgbb |=_fgbb >>8;_fgbb |=_fgbb >>16;return (_fgbb +1)>>1;};func (_aac *GenericRefinementRegion )setParameters (_fab *_age .DecoderStats ,_faf *_age .Decoder ,_fea int8 ,_fef ,_gdc uint32 ,_abg *_gg .Bitmap ,_edcd ,_beee int32 ,_ade bool ,_aafb []int8 ,_cbgc []int8 ){_fa .Log .Trace ("\u005b\u0047\u0045NE\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052E\u0047I\u004fN\u005d \u0073\u0065\u0074\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073");if _fab !=nil {_aac ._cf =_fab ;};if _faf !=nil {_aac ._afb =_faf ;};_aac .TemplateID =_fea ;_aac .RegionInfo .BitmapWidth =_fef ;_aac .RegionInfo .BitmapHeight =_gdc ;_aac .ReferenceBitmap =_abg ;_aac .ReferenceDX =_edcd ;_aac .ReferenceDY =_beee ;_aac .IsTPGROn =_ade ;_aac .GrAtX =_aafb ;_aac .GrAtY =_cbgc ;_aac .RegionBitmap =nil ;_fa .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073 f\u0069\u006ei\u0073\u0068\u0065\u0064\u002e\u0020\u0025\u0073",_aac );};func (_dbbcb *PageInformationSegment )CombinationOperator ()_gg .CombinationOperator {return _dbbcb ._gfeda ;};func (_ccbf *PageInformationSegment )readCombinationOperator ()error {_ecbc ,_gcba :=_ccbf ._gefa .ReadBits (2);if _gcba !=nil {return _gcba ;};_ccbf ._gfeda =_gg .CombinationOperator (int (_ecbc ));return nil ;};func (_bfdg *SymbolDictionary )setSymbolsArray ()error {if _bfdg ._ffe ==nil {if _caba :=_bfdg .retrieveImportSymbols ();_caba !=nil {return _caba ;};};if _bfdg ._gab ==nil {_bfdg ._gab =append (_bfdg ._gab ,_bfdg ._ffe ...);};return nil ;};func (_dfca *RegionSegment )readCombinationOperator ()error {_gaff ,_fcgb :=_dfca ._gfedg .ReadBits (3);if _fcgb !=nil {return _fcgb ;};_dfca .CombinaionOperator =_gg .CombinationOperator (_gaff &0xF);return nil ;};func (_dbeb *HalftoneRegion )GetRegionBitmap ()(*_gg .Bitmap ,error ){if _dbeb .HalftoneRegionBitmap !=nil {return _dbeb .HalftoneRegionBitmap ,nil ;};var _ddf error ;_dbeb .HalftoneRegionBitmap =_gg .New (int (_dbeb .RegionSegment .BitmapWidth ),int (_dbeb .RegionSegment .BitmapHeight ));if _dbeb .Patterns ==nil ||len (_dbeb .Patterns )==0{_dbeb .Patterns ,_ddf =_dbeb .GetPatterns ();if _ddf !=nil {return nil ,_ddf ;};};if _dbeb .HDefaultPixel ==1{_dbeb .HalftoneRegionBitmap .SetDefaultPixel ();};_fege :=_g .Ceil (_g .Log (float64 (len (_dbeb .Patterns )))/_g .Log (2));_bbae :=int (_fege );var _cfac [][]int ;_cfac ,_ddf =_dbeb .grayScaleDecoding (_bbae );if _ddf !=nil {return nil ,_ddf ;};if _ddf =_dbeb .renderPattern (_cfac );_ddf !=nil {return nil ,_ddf ;};return _dbeb .HalftoneRegionBitmap ,nil ;};func (_aaagb *RegionSegment )String ()string {_dcda :=&_a .Builder {};_dcda .WriteString ("\u0009[\u0052E\u0047\u0049\u004f\u004e\u0020S\u0045\u0047M\u0045\u004e\u0054\u005d\u000a");_dcda .WriteString (_aa .Sprintf ("\t\u0009\u002d\u0020\u0042\u0069\u0074m\u0061\u0070\u0020\u0028\u0077\u0069d\u0074\u0068\u002c\u0020\u0068\u0065\u0069g\u0068\u0074\u0029\u0020\u005b\u0025\u0064\u0078\u0025\u0064]\u000a",_aaagb .BitmapWidth ,_aaagb .BitmapHeight ));_dcda .WriteString (_aa .Sprintf ("\u0009\u0009\u002d\u0020L\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0028\u0078,\u0079)\u003a\u0020\u005b\u0025\u0064\u002c\u0025d\u005d\u000a",_aaagb .XLocation ,_aaagb .YLocation ));_dcda .WriteString (_aa .Sprintf ("\t\u0009\u002d\u0020\u0043\u006f\u006db\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070e\u0072\u0061\u0074o\u0072:\u0020\u0025\u0073",_aaagb .CombinaionOperator ));return _dcda .String ();};func (_dgfg *PatternDictionary )checkInput ()error {if _dgfg .HdpHeight < 1||_dgfg .HdpWidth < 1{return _ag .New ("in\u0076\u0061l\u0069\u0064\u0020\u0048\u0065\u0061\u0064\u0065\u0072 \u0056\u0061\u006c\u0075\u0065\u003a\u0020\u0057\u0069\u0064\u0074\u0068\u002f\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020g\u0072e\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020z\u0065\u0072o");};if _dgfg .IsMMREncoded {if _dgfg .HDTemplate !=0{_fa .Log .Debug ("\u0076\u0061\u0072\u0069\u0061\u0062\u006c\u0065\u0020\u0048\u0044\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e \u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030");};};return nil ;};func (_fccefg *TextRegion )decodeID ()(int64 ,error ){if _fccefg .IsHuffmanEncoded {if _fccefg ._afgb ==nil {_dafge ,_aebb :=_fccefg ._cegd .ReadBits (byte (_fccefg ._afbfc ));return int64 (_dafge ),_aebb ;};return _fccefg ._afgb .Decode (_fccefg ._cegd );};return _fccefg ._ccbfg .DecodeIAID (uint64 (_fccefg ._afbfc ),_fccefg ._caeg );};func (_gggdf *Header )readSegmentNumber (_gde _aaa .StreamReader )error {const _ffcb ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";_gaf :=make ([]byte ,4);_ ,_cbfc :=_gde .Read (_gaf );if _cbfc !=nil {return _df .Wrap (_cbfc ,_ffcb ,"");};_gggdf .SegmentNumber =_gd .BigEndian .Uint32 (_gaf );return nil ;};func (_cdcb *TextRegion )blit (_cbfec *_gg .Bitmap ,_bdgd int64 )error {if _cdcb .IsTransposed ==0&&(_cdcb .ReferenceCorner ==2||_cdcb .ReferenceCorner ==3){_cdcb ._egfea +=int64 (_cbfec .Width -1);}else if _cdcb .IsTransposed ==1&&(_cdcb .ReferenceCorner ==0||_cdcb .ReferenceCorner ==2){_cdcb ._egfea +=int64 (_cbfec .Height -1);};_dcca :=_cdcb ._egfea ;if _cdcb .IsTransposed ==1{_dcca ,_bdgd =_bdgd ,_dcca ;};switch _cdcb .ReferenceCorner {case 0:_bdgd -=int64 (_cbfec .Height -1);case 2:_bdgd -=int64 (_cbfec .Height -1);_dcca -=int64 (_cbfec .Width -1);case 3:_dcca -=int64 (_cbfec .Width -1);};_gega :=_gg .Blit (_cbfec ,_cdcb .RegionBitmap ,int (_dcca ),int (_bdgd ),_cdcb .CombinationOperator );if _gega !=nil {return _gega ;};if _cdcb .IsTransposed ==0&&(_cdcb .ReferenceCorner ==0||_cdcb .ReferenceCorner ==1){_cdcb ._egfea +=int64 (_cbfec .Width -1);};if _cdcb .IsTransposed ==1&&(_cdcb .ReferenceCorner ==1||_cdcb .ReferenceCorner ==3){_cdcb ._egfea +=int64 (_cbfec .Height -1);};return nil ;};type SymbolDictionary struct{_gbfd _aaa .StreamReader ;SdrTemplate int8 ;SdTemplate int8 ;_fbaba bool ;_fgefa bool ;SdHuffAggInstanceSelection bool ;SdHuffBMSizeSelection int8 ;SdHuffDecodeWidthSelection int8 ;SdHuffDecodeHeightSelection int8 ;UseRefinementAggregation bool ;IsHuffmanEncoded bool ;SdATX []int8 ;SdATY []int8 ;SdrATX []int8 ;SdrATY []int8 ;NumberOfExportedSymbols uint32 ;NumberOfNewSymbols uint32 ;Header *Header ;_cbagg uint32 ;_ffe []*_gg .Bitmap ;_dedeb uint32 ;_bcbd []*_gg .Bitmap ;_gggf _ad .Tabler ;_afafe _ad .Tabler ;_aabfc _ad .Tabler ;_egcb _ad .Tabler ;_gfffe []*_gg .Bitmap ;_gab []*_gg .Bitmap ;_aegd *_age .Decoder ;_cbec *TextRegion ;_dbee *GenericRegion ;_agbb *GenericRefinementRegion ;_deedb *_age .DecoderStats ;_gbdb *_age .DecoderStats ;_gca *_age .DecoderStats ;_aabfa *_age .DecoderStats ;_gecbf *_age .DecoderStats ;_cdbga *_age .DecoderStats ;_deeg *_age .DecoderStats ;_gcbf *_age .DecoderStats ;_febc *_age .DecoderStats ;_ebe int8 ;_bgca *_gg .Bitmaps ;_fdfd []int ;_dacb map[int ]int ;_eacf bool ;};func (_dbef *SymbolDictionary )setRefinementAtPixels ()error {if !_dbef .UseRefinementAggregation ||_dbef .SdrTemplate !=0{return nil ;};if _gaae :=_dbef .readRefinementAtPixels (2);_gaae !=nil {return _gaae ;};return nil ;};func (_abde *TextRegion )Init (header *Header ,r _aaa .StreamReader )error {_abde .Header =header ;_abde ._cegd =r ;_abde .RegionInfo =NewRegionSegment (_abde ._cegd );return _abde .parseHeader ();};func (_aga *GenericRegion )decodeTemplate0a (_faa ,_bfe ,_edd int ,_fafg ,_fbcg int )(_ccac error ){const _eea ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0061";var (_egbc ,_ccace int ;_adca ,_edda int ;_ggg byte ;_dagf int ;);if _faa >=1{_ggg ,_ccac =_aga .Bitmap .GetByte (_fbcg );if _ccac !=nil {return _df .Wrap (_ccac ,_eea ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_adca =int (_ggg );};if _faa >=2{_ggg ,_ccac =_aga .Bitmap .GetByte (_fbcg -_aga .Bitmap .RowStride );if _ccac !=nil {return _df .Wrap (_ccac ,_eea ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_edda =int (_ggg )<<6;};_egbc =(_adca &0xf0)|(_edda &0x3800);for _faae :=0;_faae < _edd ;_faae =_dagf {var (_gdfa byte ;_adf int ;);_dagf =_faae +8;if _cdeg :=_bfe -_faae ;_cdeg > 8{_adf =8;}else {_adf =_cdeg ;};if _faa > 0{_adca <<=8;if _dagf < _bfe {_ggg ,_ccac =_aga .Bitmap .GetByte (_fbcg +1);if _ccac !=nil {return _df .Wrap (_ccac ,_eea ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_adca |=int (_ggg );};};if _faa > 1{_ggfb :=_fbcg -_aga .Bitmap .RowStride +1;_edda <<=8;if _dagf < _bfe {_ggg ,_ccac =_aga .Bitmap .GetByte (_ggfb );if _ccac !=nil {return _df .Wrap (_ccac ,_eea ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_edda |=int (_ggg )<<6;}else {_edda |=0;};};for _cadg :=0;_cadg < _adf ;_cadg ++{_badd :=uint (7-_cadg );if _aga ._cde {_ccace =_aga .overrideAtTemplate0a (_egbc ,_faae +_cadg ,_faa ,int (_gdfa ),_cadg ,int (_badd ));_aga ._fbc .SetIndex (int32 (_ccace ));}else {_aga ._fbc .SetIndex (int32 (_egbc ));};var _aae int ;_aae ,_ccac =_aga ._agc .DecodeBit (_aga ._fbc );if _ccac !=nil {return _df .Wrap (_ccac ,_eea ,"");};_gdfa |=byte (_aae )<<uint (_badd );_egbc =((_egbc &0x7bf7)<<1)|_aae |((_adca >>_badd )&0x10)|((_edda >>_badd )&0x800);};if _adgg :=_aga .Bitmap .SetByte (_fafg ,_gdfa );_adgg !=nil {return _df .Wrap (_adgg ,_eea ,"");};_fafg ++;_fbcg ++;};return nil ;};func (_faag *GenericRegion )setParametersMMR (_gbdd bool ,_gbbe ,_ebdf int64 ,_ccd ,_ggcc uint32 ,_baeg byte ,_gggd ,_adae bool ,_eaff ,_ecafd []int8 ){_faag .DataOffset =_gbbe ;_faag .DataLength =_ebdf ;_faag .RegionSegment =&RegionSegment {};_faag .RegionSegment .BitmapHeight =_ccd ;_faag .RegionSegment .BitmapWidth =_ggcc ;_faag .GBTemplate =_baeg ;_faag .IsMMREncoded =_gbdd ;_faag .IsTPGDon =_gggd ;_faag .GBAtX =_eaff ;_faag .GBAtY =_ecafd ;};func (_dfcf *PatternDictionary )readIsMMREncoded ()error {_gad ,_gcge :=_dfcf ._fddg .ReadBit ();if _gcge !=nil {return _gcge ;};if _gad !=0{_dfcf .IsMMREncoded =true ;};return nil ;};func (_cdbg *PageInformationSegment )checkInput ()error {if _cdbg .PageBMHeight ==_g .MaxInt32 {if !_cdbg .IsStripe {_fa .Log .Debug ("P\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0053\u0065\u0067me\u006e\u0074\u002e\u0049s\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0073\u0068ou\u006c\u0064 \u0062\u0065\u0020\u0074\u0072\u0075\u0065\u002e");};};return nil ;};func (_cbdb *PageInformationSegment )Encode (w _aaa .BinaryWriter )(_gbea int ,_gbdc error ){const _ced ="\u0050\u0061g\u0065\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u002e\u0045\u006eco\u0064\u0065";_ceca :=make ([]byte ,4);_gd .BigEndian .PutUint32 (_ceca ,uint32 (_cbdb .PageBMWidth ));_gbea ,_gbdc =w .Write (_ceca );if _gbdc !=nil {return _gbea ,_df .Wrap (_gbdc ,_ced ,"\u0077\u0069\u0064t\u0068");};_gd .BigEndian .PutUint32 (_ceca ,uint32 (_cbdb .PageBMHeight ));var _ccafb int ;_ccafb ,_gbdc =w .Write (_ceca );if _gbdc !=nil {return _ccafb +_gbea ,_df .Wrap (_gbdc ,_ced ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_gbea +=_ccafb ;_gd .BigEndian .PutUint32 (_ceca ,uint32 (_cbdb .ResolutionX ));_ccafb ,_gbdc =w .Write (_ceca );if _gbdc !=nil {return _ccafb +_gbea ,_df .Wrap (_gbdc ,_ced ,"\u0078\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_gbea +=_ccafb ;_gd .BigEndian .PutUint32 (_ceca ,uint32 (_cbdb .ResolutionY ));if _ccafb ,_gbdc =w .Write (_ceca );_gbdc !=nil {return _ccafb +_gbea ,_df .Wrap (_gbdc ,_ced ,"\u0079\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_gbea +=_ccafb ;if _gbdc =_cbdb .encodeFlags (w );_gbdc !=nil {return _gbea ,_df .Wrap (_gbdc ,_ced ,"");};_gbea ++;if _ccafb ,_gbdc =_cbdb .encodeStripingInformation (w );_gbdc !=nil {return _gbea ,_df .Wrap (_gbdc ,_ced ,"");};_gbea +=_ccafb ;return _gbea ,nil ;};func (_bcbc *HalftoneRegion )GetPatterns ()([]*_gg .Bitmap ,error ){var (_bgdf []*_gg .Bitmap ;_gcg error ;);for _ ,_bge :=range _bcbc ._aag .RTSegments {var _dccc Segmenter ;_dccc ,_gcg =_bge .GetSegmentData ();if _gcg !=nil {_fa .Log .Debug ("\u0047e\u0074\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061 \u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025v",_gcg );return nil ,_gcg ;};_cccc ,_bfc :=_dccc .(*PatternDictionary );if !_bfc {_gcg =_aa .Errorf ("\u0072e\u006c\u0061t\u0065\u0064\u0020\u0073e\u0067\u006d\u0065n\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0070at\u0074\u0065\u0072n\u0020\u0064i\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u003a \u0025\u0054",_dccc );return nil ,_gcg ;};var _egd []*_gg .Bitmap ;_egd ,_gcg =_cccc .GetDictionary ();if _gcg !=nil {_fa .Log .Debug ("\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_gcg );return nil ,_gcg ;};_bgdf =append (_bgdf ,_egd ...);};return _bgdf ,nil ;};func (_fcfdf *Header )writeSegmentNumber (_dge _aaa .BinaryWriter )(_deedf int ,_affc error ){_fccg :=make ([]byte ,4);_gd .BigEndian .PutUint32 (_fccg ,_fcfdf .SegmentNumber );if _deedf ,_affc =_dge .Write (_fccg );_affc !=nil {return 0,_df .Wrap (_affc ,"\u0048e\u0061\u0064\u0065\u0072.\u0077\u0072\u0069\u0074\u0065S\u0065g\u006de\u006e\u0074\u004e\u0075\u006d\u0062\u0065r","");};return _deedf ,nil ;};func (_ab *GenericRefinementRegion )GetRegionInfo ()*RegionSegment {return _ab .RegionInfo };const (ORandom OrganizationType =iota ;OSequential ;);func (_aaf *GenericRefinementRegion )getPixel (_daf *_gg .Bitmap ,_ggd ,_gff int )int {if _ggd < 0||_ggd >=_daf .Width {return 0;};if _gff < 0||_gff >=_daf .Height {return 0;};if _daf .GetPixel (_ggd ,_gff ){return 1;};return 0;};func (_bdge *TextRegion )decodeStripT ()(_bbfe int64 ,_gcbg error ){if _bdge .IsHuffmanEncoded {if _bdge .SbHuffDT ==3{if _bdge ._ffdc ==nil {var _aeda int ;if _bdge .SbHuffFS ==3{_aeda ++;};if _bdge .SbHuffDS ==3{_aeda ++;};_bdge ._ffdc ,_gcbg =_bdge .getUserTable (_aeda );if _gcbg !=nil {return 0,_gcbg ;};};_bbfe ,_gcbg =_bdge ._ffdc .Decode (_bdge ._cegd );if _gcbg !=nil {return 0,_gcbg ;};}else {var _afgd _ad .Tabler ;_afgd ,_gcbg =_ad .GetStandardTable (11+int (_bdge .SbHuffDT ));if _gcbg !=nil {return 0,_gcbg ;};_bbfe ,_gcbg =_afgd .Decode (_bdge ._cegd );if _gcbg !=nil {return 0,_gcbg ;};};}else {var _affaf int32 ;_affaf ,_gcbg =_bdge ._ccbfg .DecodeInt (_bdge ._dgag );if _gcbg !=nil {return 0,_gcbg ;};_bbfe =int64 (_affaf );};_bbfe *=int64 (-_bdge .SbStrips );return _bbfe ,nil ;};func (_fddb *TextRegion )readUseRefinement ()error {if !_fddb .UseRefinement ||_fddb .SbrTemplate !=0{return nil ;};var (_beac byte ;_dgcg error ;);_fddb .SbrATX =make ([]int8 ,2);_fddb .SbrATY =make ([]int8 ,2);_beac ,_dgcg =_fddb ._cegd .ReadByte ();if _dgcg !=nil {return _dgcg ;};_fddb .SbrATX [0]=int8 (_beac );_beac ,_dgcg =_fddb ._cegd .ReadByte ();if _dgcg !=nil {return _dgcg ;};_fddb .SbrATY [0]=int8 (_beac );_beac ,_dgcg =_fddb ._cegd .ReadByte ();if _dgcg !=nil {return _dgcg ;};_fddb .SbrATX [1]=int8 (_beac );_beac ,_dgcg =_fddb ._cegd .ReadByte ();if _dgcg !=nil {return _dgcg ;};_fddb .SbrATY [1]=int8 (_beac );return nil ;};func (_ggeg *TextRegion )decodeRdh ()(int64 ,error ){const _adfad ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064h";if _ggeg .IsHuffmanEncoded {if _ggeg .SbHuffRDHeight ==3{if _ggeg ._fbf ==nil {var (_ccbgf int ;_ffgf error ;);if _ggeg .SbHuffFS ==3{_ccbgf ++;};if _ggeg .SbHuffDS ==3{_ccbgf ++;};if _ggeg .SbHuffDT ==3{_ccbgf ++;};if _ggeg .SbHuffRDWidth ==3{_ccbgf ++;};_ggeg ._fbf ,_ffgf =_ggeg .getUserTable (_ccbgf );if _ffgf !=nil {return 0,_df .Wrap (_ffgf ,_adfad ,"");};};return _ggeg ._fbf .Decode (_ggeg ._cegd );};_dbec ,_cda :=_ad .GetStandardTable (14+int (_ggeg .SbHuffRDHeight ));if _cda !=nil {return 0,_df .Wrap (_cda ,_adfad ,"");};return _dbec .Decode (_ggeg ._cegd );};_cgge ,_gbddc :=_ggeg ._ccbfg .DecodeInt (_ggeg ._cadd );if _gbddc !=nil {return 0,_df .Wrap (_gbddc ,_adfad ,"");};return int64 (_cgge ),nil ;};func (_beg *GenericRegion )GetRegionBitmap ()(_gdag *_gg .Bitmap ,_ddb error ){if _beg .Bitmap !=nil {return _beg .Bitmap ,nil ;};if _beg .IsMMREncoded {if _beg ._fccef ==nil {_beg ._fccef ,_ddb =_c .New (_beg ._fb ,int (_beg .RegionSegment .BitmapWidth ),int (_beg .RegionSegment .BitmapHeight ),_beg .DataOffset ,_beg .DataLength );if _ddb !=nil {return nil ,_ddb ;};};_beg .Bitmap ,_ddb =_beg ._fccef .UncompressMMR ();return _beg .Bitmap ,_ddb ;};if _ddb =_beg .updateOverrideFlags ();_ddb !=nil {return nil ,_ddb ;};var _cead int ;if _beg ._agc ==nil {_beg ._agc ,_ddb =_age .New (_beg ._fb );if _ddb !=nil {return nil ,_ddb ;};};if _beg ._fbc ==nil {_beg ._fbc =_age .NewStats (65536,1);};_beg .Bitmap =_gg .New (int (_beg .RegionSegment .BitmapWidth ),int (_beg .RegionSegment .BitmapHeight ));_cfga :=int (uint32 (_beg .Bitmap .Width +7)&(^uint32 (7)));for _bfg :=0;_bfg < _beg .Bitmap .Height ;_bfg ++{if _beg .IsTPGDon {var _eagcc int ;_eagcc ,_ddb =_beg .decodeSLTP ();if _ddb !=nil {return nil ,_ddb ;};_cead ^=_eagcc ;};if _cead ==1{if _bfg > 0{if _ddb =_beg .copyLineAbove (_bfg );_ddb !=nil {return nil ,_ddb ;};};}else {if _ddb =_beg .decodeLine (_bfg ,_beg .Bitmap .Width ,_cfga );_ddb !=nil {return nil ,_ddb ;};};};return _beg .Bitmap ,nil ;};var _ SegmentEncoder =&RegionSegment {};type PageInformationSegment struct{_gefa _aaa .StreamReader ;PageBMHeight int ;PageBMWidth int ;ResolutionX int ;ResolutionY int ;_bedb bool ;_gfeda _gg .CombinationOperator ;_fcgg bool ;_dbab uint8 ;_fbg bool ;IsLossless bool ;IsStripe bool ;MaxStripeSize uint16 ;};func (_gbag *TextRegion )decodeRdy ()(int64 ,error ){const _bcea ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064y";if _gbag .IsHuffmanEncoded {if _gbag .SbHuffRDY ==3{if _gbag ._dbcf ==nil {var (_eedd int ;_caadc error ;);if _gbag .SbHuffFS ==3{_eedd ++;};if _gbag .SbHuffDS ==3{_eedd ++;};if _gbag .SbHuffDT ==3{_eedd ++;};if _gbag .SbHuffRDWidth ==3{_eedd ++;};if _gbag .SbHuffRDHeight ==3{_eedd ++;};if _gbag .SbHuffRDX ==3{_eedd ++;};_gbag ._dbcf ,_caadc =_gbag .getUserTable (_eedd );if _caadc !=nil {return 0,_df .Wrap (_caadc ,_bcea ,"");};};return _gbag ._dbcf .Decode (_gbag ._cegd );};_aaeb ,_fggfa :=_ad .GetStandardTable (14+int (_gbag .SbHuffRDY ));if _fggfa !=nil {return 0,_fggfa ;};return _aaeb .Decode (_gbag ._cegd );};_gfae ,_fgfd :=_gbag ._ccbfg .DecodeInt (_gbag ._dgef );if _fgfd !=nil {return 0,_df .Wrap (_fgfd ,_bcea ,"");};return int64 (_gfae ),nil ;};func (_aeea *Header )Encode (w _aaa .BinaryWriter )(_ffa int ,_acac error ){const _eed ="\u0048\u0065\u0061d\u0065\u0072\u002e\u0057\u0072\u0069\u0074\u0065";var _ebbc _aaa .BinaryWriter ;_fa .Log .Trace ("\u005b\u0053\u0045G\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045\u0052\u005d[\u0045\u004e\u0043\u004f\u0044\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _acac !=nil {_fa .Log .Trace ("[\u0053\u0045\u0047\u004d\u0045\u004eT\u002d\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0045\u004e\u0043\u004f\u0044E\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020%\u0076",_acac );}else {_fa .Log .Trace ("\u005b\u0053\u0045\u0047ME\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0025\u0076",_aeea );_fa .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045N\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u005b\u0045\u004e\u0043O\u0044\u0045\u005d\u0020\u0046\u0069\u006ei\u0073\u0068\u0065\u0064");};}();w .FinishByte ();if _aeea .SegmentData !=nil {_abaf ,_edaa :=_aeea .SegmentData .(SegmentEncoder );if !_edaa {return 0,_df .Errorf (_eed ,"\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0064\u006f\u0065s\u006e\u0027\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074 \u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0045\u006e\u0063\u006f\u0064er\u0020\u0069\u006e\u0074\u0065\u0072\u0066\u0061\u0063\u0065",_aeea .SegmentData );};_ebbc =_aaa .BufferedMSB ();_ffa ,_acac =_abaf .Encode (_ebbc );if _acac !=nil {return 0,_df .Wrap (_acac ,_eed ,"");};_aeea .SegmentDataLength =uint64 (_ffa );};if _aeea .pageSize ()==4{_aeea .PageAssociationFieldSize =true ;};var _cdfd int ;_cdfd ,_acac =_aeea .writeSegmentNumber (w );if _acac !=nil {return 0,_df .Wrap (_acac ,_eed ,"");};_ffa +=_cdfd ;if _acac =_aeea .writeFlags (w );_acac !=nil {return _ffa ,_df .Wrap (_acac ,_eed ,"");};_ffa ++;_cdfd ,_acac =_aeea .writeReferredToCount (w );if _acac !=nil {return 0,_df .Wrap (_acac ,_eed ,"");};_ffa +=_cdfd ;_cdfd ,_acac =_aeea .writeReferredToSegments (w );if _acac !=nil {return 0,_df .Wrap (_acac ,_eed ,"");};_ffa +=_cdfd ;_cdfd ,_acac =_aeea .writeSegmentPageAssociation (w );if _acac !=nil {return 0,_df .Wrap (_acac ,_eed ,"");};_ffa +=_cdfd ;_cdfd ,_acac =_aeea .writeSegmentDataLength (w );if _acac !=nil {return 0,_df .Wrap (_acac ,_eed ,"");};_ffa +=_cdfd ;_aeea .HeaderLength =int64 (_ffa )-int64 (_aeea .SegmentDataLength );if _ebbc !=nil {if _ ,_acac =w .Write (_ebbc .Data ());_acac !=nil {return _ffa ,_df .Wrap (_acac ,_eed ,"\u0077r\u0069t\u0065\u0020\u0073\u0065\u0067m\u0065\u006et\u0020\u0064\u0061\u0074\u0061");};};return _ffa ,nil ;};func (_dcd *template0 )setIndex (_ede *_age .DecoderStats ){_ede .SetIndex (0x100)};type PatternDictionary struct{_fddg _aaa .StreamReader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;GBAtX []int8 ;GBAtY []int8 ;IsMMREncoded bool ;HDTemplate byte ;HdpWidth byte ;HdpHeight byte ;Patterns []*_gg .Bitmap ;GrayMax uint32 ;};func (_dggg *SymbolDictionary )encodeNumSyms (_ddga _aaa .BinaryWriter )(_bfd int ,_aacc error ){const _gfdd ="\u0065\u006e\u0063\u006f\u0064\u0065\u004e\u0075\u006d\u0053\u0079\u006d\u0073";_fbbc :=make ([]byte ,4);_gd .BigEndian .PutUint32 (_fbbc ,_dggg .NumberOfExportedSymbols );if _bfd ,_aacc =_ddga .Write (_fbbc );_aacc !=nil {return _bfd ,_df .Wrap (_aacc ,_gfdd ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};_gd .BigEndian .PutUint32 (_fbbc ,_dggg .NumberOfNewSymbols );_fbbce ,_aacc :=_ddga .Write (_fbbc );if _aacc !=nil {return _bfd ,_df .Wrap (_aacc ,_gfdd ,"n\u0065\u0077\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};return _bfd +_fbbce ,nil ;};func (_gedgc *TextRegion )initSymbols ()error {const _bgded ="i\u006e\u0069\u0074\u0053\u0079\u006d\u0062\u006f\u006c\u0073";for _ ,_dbaeg :=range _gedgc .Header .RTSegments {if _dbaeg ==nil {return _df .Error (_bgded ,"\u006e\u0069\u006c\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020pr\u006f\u0076\u0069\u0064\u0065\u0064 \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0074\u0065\u0078\u0074\u0020\u0072\u0065g\u0069\u006f\u006e\u0020\u0053\u0079\u006d\u0062o\u006c\u0073");};if _dbaeg .Type ==0{_aggae ,_fbgd :=_dbaeg .GetSegmentData ();if _fbgd !=nil {return _df .Wrap (_fbgd ,_bgded ,"");};_eegb ,_geab :=_aggae .(*SymbolDictionary );if !_geab {return _df .Error (_bgded ,"\u0072e\u0066\u0065r\u0072\u0065\u0064 \u0054\u006f\u0020\u0053\u0065\u0067\u006de\u006e\u0074\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_eegb ._febc =_gedgc ._caeg ;_adgc ,_fbgd :=_eegb .GetDictionary ();if _fbgd !=nil {return _df .Wrap (_fbgd ,_bgded ,"");};_gedgc .Symbols =append (_gedgc .Symbols ,_adgc ...);};};_gedgc .NumberOfSymbols =uint32 (len (_gedgc .Symbols ));return nil ;};func (_baegg *TextRegion )Encode (w _aaa .BinaryWriter )(_dcdc int ,_efbf error ){const _eefc ="\u0054\u0065\u0078\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u002e\u0045n\u0063\u006f\u0064\u0065";if _dcdc ,_efbf =_baegg .RegionInfo .Encode (w );_efbf !=nil {return _dcdc ,_df .Wrap (_efbf ,_eefc ,"");};var _aaec int ;if _aaec ,_efbf =_baegg .encodeFlags (w );_efbf !=nil {return _dcdc ,_df .Wrap (_efbf ,_eefc ,"");};_dcdc +=_aaec ;if _aaec ,_efbf =_baegg .encodeSymbols (w );_efbf !=nil {return _dcdc ,_df .Wrap (_efbf ,_eefc ,"");};_dcdc +=_aaec ;return _dcdc ,nil ;};func (_bfad *PageInformationSegment )String ()string {_dad :=&_a .Builder {};_dad .WriteString ("\u000a\u005b\u0050\u0041G\u0045\u002d\u0049\u004e\u0046\u004f\u0052\u004d\u0041\u0054I\u004fN\u002d\u0053\u0045\u0047\u004d\u0045\u004eT\u005d\u000a");_dad .WriteString (_aa .Sprintf ("\u0009\u002d \u0042\u004d\u0048e\u0069\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u000a",_bfad .PageBMHeight ));_dad .WriteString (_aa .Sprintf ("\u0009-\u0020B\u004d\u0057\u0069\u0064\u0074\u0068\u003a\u0020\u0025\u0064\u000a",_bfad .PageBMWidth ));_dad .WriteString (_aa .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0058\u003a\u0020\u0025\u0064\u000a",_bfad .ResolutionX ));_dad .WriteString (_aa .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0059\u003a\u0020\u0025\u0064\u000a",_bfad .ResolutionY ));_dad .WriteString (_aa .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0073\u000a",_bfad ._gfeda ));_dad .WriteString (_aa .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006eO\u0070\u0065\u0072\u0061\u0074\u006f\u0072O\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025v\u000a",_bfad ._bedb ));_dad .WriteString (_aa .Sprintf ("\u0009-\u0020I\u0073\u004c\u006f\u0073\u0073l\u0065\u0073s\u003a\u0020\u0025\u0076\u000a",_bfad .IsLossless ));_dad .WriteString (_aa .Sprintf ("\u0009\u002d\u0020R\u0065\u0071\u0075\u0069r\u0065\u0073\u0041\u0075\u0078\u0069\u006ci\u0061\u0072\u0079\u0042\u0075\u0066\u0066\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_bfad ._fcgg ));_dad .WriteString (_aa .Sprintf ("\u0009\u002d\u0020M\u0069\u0067\u0068\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0052e\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0076\u000a",_bfad ._fbg ));_dad .WriteString (_aa .Sprintf ("\u0009\u002d\u0020\u0049\u0073\u0053\u0074\u0072\u0069\u0070\u0065\u0064:\u0020\u0025\u0076\u000a",_bfad .IsStripe ));_dad .WriteString (_aa .Sprintf ("\t\u002d\u0020\u004d\u0061xS\u0074r\u0069\u0070\u0065\u0053\u0069z\u0065\u003a\u0020\u0025\u0076\u000a",_bfad .MaxStripeSize ));return _dad .String ();};func (_fegd *HalftoneRegion )computeY (_ddac ,_ffbb int )int {return _fegd .shiftAndFill (int (_fegd .HGridY )+_ddac *int (_fegd .HRegionX )-_ffbb *int (_fegd .HRegionY ));};func (_fdbc *Header )readDataStartOffset (_bfb _aaa .StreamReader ,_cfge OrganizationType ){if _cfge ==OSequential {_fdbc .SegmentDataStartOffset =uint64 (_bfb .StreamPosition ());};};func (_dbf Type )String ()string {switch _dbf {case TSymbolDictionary :return "\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079";case TIntermediateTextRegion :return "\u0049n\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020T\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateTextRegion :return "I\u006d\u006d\u0065\u0064ia\u0074e\u0020\u0054\u0065\u0078\u0074 \u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessTextRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020L\u006f\u0073\u0073\u006c\u0065\u0073\u0073 \u0054\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TPatternDictionary :return "\u0050a\u0074t\u0065\u0072\u006e\u0020\u0044i\u0063\u0074i\u006f\u006e\u0061\u0072\u0079";case TIntermediateHalftoneRegion :return "\u0049\u006e\u0074\u0065r\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0048\u0061l\u0066t\u006f\u006e\u0065\u0020\u0052\u0065\u0067i\u006f\u006e";case TImmediateHalftoneRegion :return "\u0049m\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u0048\u0061l\u0066t\u006fn\u0065\u0020\u0052\u0065\u0067\u0069\u006fn";case TImmediateLosslessHalftoneRegion :return "\u0049\u006d\u006ded\u0069\u0061\u0074\u0065\u0020\u004c\u006f\u0073\u0073l\u0065s\u0073 \u0048a\u006c\u0066\u0074\u006f\u006e\u0065\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TIntermediateGenericRegion :return "I\u006e\u0074\u0065\u0072\u006d\u0065d\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020R\u0065g\u0069\u006f\u006e";case TImmediateGenericRegion :return "\u0049m\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006ee\u0072\u0069\u0063\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessGenericRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u004c\u006f\u0073\u0073\u006c\u0065\u0073\u0073\u0020\u0047e\u006e\u0065\u0072\u0069\u0063\u0020\u0052e\u0067\u0069\u006f\u006e";case TIntermediateGenericRefinementRegion :return "\u0049\u006e\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0020\u0052\u0065\u0066i\u006e\u0065\u006d\u0065\u006et\u0020\u0052e\u0067\u0069\u006f\u006e";case TImmediateGenericRefinementRegion :return "I\u006d\u006d\u0065\u0064\u0069\u0061t\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020\u0052\u0065\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020\u0052\u0065\u0067\u0069o\u006e";case TImmediateLosslessGenericRefinementRegion :return "\u0049m\u006d\u0065d\u0069\u0061\u0074\u0065 \u004c\u006f\u0073s\u006c\u0065\u0073\u0073\u0020\u0047\u0065\u006e\u0065ri\u0063\u0020\u0052e\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020R\u0065\u0067i\u006f\u006e";case TPageInformation :return "\u0050\u0061g\u0065\u0020\u0049n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e";case TEndOfPage :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0050\u0061\u0067\u0065";case TEndOfStrip :return "\u0045\u006e\u0064 \u004f\u0066\u0020\u0053\u0074\u0072\u0069\u0070";case TEndOfFile :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0046\u0069\u006c\u0065";case TProfiles :return "\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0073";case TTables :return "\u0054\u0061\u0062\u006c\u0065\u0073";case TExtension :return "\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn";case TBitmap :return "\u0042\u0069\u0074\u006d\u0061\u0070";};return "I\u006ev\u0061\u006c\u0069\u0064\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0020Ki\u006e\u0064";};func (_gfed *Header )referenceSize ()uint {switch {case _gfed .SegmentNumber <=255:return 1;case _gfed .SegmentNumber <=65535:return 2;default:return 4;};};func (_aefec *TextRegion )readAmountOfSymbolInstances ()error {_ebef ,_bece :=_aefec ._cegd .ReadBits (32);if _bece !=nil {return _bece ;};_aefec .NumberOfSymbolInstances =uint32 (_ebef &_g .MaxUint32 );_ccdbc :=_aefec .RegionInfo .BitmapWidth *_aefec .RegionInfo .BitmapHeight ;if _ccdbc < _aefec .NumberOfSymbolInstances {_fa .Log .Debug ("\u004c\u0069\u006d\u0069t\u0069\u006e\u0067\u0020t\u0068\u0065\u0020n\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020d\u0065\u0063\u006f\u0064e\u0064\u0020\u0073\u0079m\u0062\u006f\u006c\u0020\u0069n\u0073\u0074\u0061\u006e\u0063\u0065\u0073 \u0074\u006f\u0020\u006f\u006ee\u0020\u0070\u0065\u0072\u0020\u0070\u0069\u0078\u0065l\u0020\u0028\u0020\u0025\u0064\u0020\u0069\u006e\u0073\u0074\u0065\u0061\u0064\u0020\u006f\u0066\u0020\u0025\u0064\u0029",_ccdbc ,_aefec .NumberOfSymbolInstances );_aefec .NumberOfSymbolInstances =_ccdbc ;};return nil ;};func (_bgf *HalftoneRegion )renderPattern (_efeb [][]int )(_bfag error ){var _fcb ,_faee int ;for _bcc :=0;_bcc < int (_bgf .HGridHeight );_bcc ++{for _baaa :=0;_baaa < int (_bgf .HGridWidth );_baaa ++{_fcb =_bgf .computeX (_bcc ,_baaa );_faee =_bgf .computeY (_bcc ,_baaa );_cbac :=_bgf .Patterns [_efeb [_bcc ][_baaa ]];if _bfag =_gg .Blit (_cbac ,_bgf .HalftoneRegionBitmap ,_fcb +int (_bgf .HGridX ),_faee +int (_bgf .HGridY ),_bgf .CombinationOperator );_bfag !=nil {return _bfag ;};};};return nil ;};func (_e *EndOfStripe )LineNumber ()int {return _e ._fg };func (_ffdd *PageInformationSegment )CombinationOperatorOverrideAllowed ()bool {return _ffdd ._bedb };type GenericRegion struct{_fb _aaa .StreamReader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;UseExtTemplates bool ;IsTPGDon bool ;GBTemplate byte ;IsMMREncoded bool ;UseMMR bool ;GBAtX []int8 ;GBAtY []int8 ;GBAtOverride []bool ;_cde bool ;Bitmap *_gg .Bitmap ;_agc *_age .Decoder ;_fbc *_age .DecoderStats ;_fccef *_c .Decoder ;};func (_ebb *GenericRefinementRegion )readAtPixels ()error {_ebb .GrAtX =make ([]int8 ,2);_ebb .GrAtY =make ([]int8 ,2);_bgd ,_gbfe :=_ebb ._fe .ReadByte ();if _gbfe !=nil {return _gbfe ;};_ebb .GrAtX [0]=int8 (_bgd );_bgd ,_gbfe =_ebb ._fe .ReadByte ();if _gbfe !=nil {return _gbfe ;};_ebb .GrAtY [0]=int8 (_bgd );_bgd ,_gbfe =_ebb ._fe .ReadByte ();if _gbfe !=nil {return _gbfe ;};_ebb .GrAtX [1]=int8 (_bgd );_bgd ,_gbfe =_ebb ._fe .ReadByte ();if _gbfe !=nil {return _gbfe ;};_ebb .GrAtY [1]=int8 (_bgd );return nil ;};func (_adcd *PatternDictionary )readTemplate ()error {_adbbb ,_ddag :=_adcd ._fddg .ReadBits (2);if _ddag !=nil {return _ddag ;};_adcd .HDTemplate =byte (_adbbb );return nil ;};func (_abcd *TextRegion )decodeDT ()(_eedf int64 ,_afgdb error ){if _abcd .IsHuffmanEncoded {if _abcd .SbHuffDT ==3{_eedf ,_afgdb =_abcd ._ffdc .Decode (_abcd ._cegd );if _afgdb !=nil {return 0,_afgdb ;};}else {var _fadec _ad .Tabler ;_fadec ,_afgdb =_ad .GetStandardTable (11+int (_abcd .SbHuffDT ));if _afgdb !=nil {return 0,_afgdb ;};_eedf ,_afgdb =_fadec .Decode (_abcd ._cegd );if _afgdb !=nil {return 0,_afgdb ;};};}else {var _dece int32 ;_dece ,_afgdb =_abcd ._ccbfg .DecodeInt (_abcd ._dgag );if _afgdb !=nil {return ;};_eedf =int64 (_dece );};_eedf *=int64 (_abcd .SbStrips );return _eedf ,nil ;};func (_ecdc *TextRegion )parseHeader ()error {var _gbdbe error ;_fa .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069n\u0073\u002e\u002e\u002e");defer func (){if _gbdbe !=nil {_fa .Log .Trace ("\u005b\u0054\u0045\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044E\u0052\u005d\u0020\u0066\u0061i\u006c\u0065d\u002e\u0020\u0025\u0076",_gbdbe );}else {_fa .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069s\u0068\u0065\u0064\u002e");};}();if _gbdbe =_ecdc .RegionInfo .parseHeader ();_gbdbe !=nil {return _gbdbe ;};if _gbdbe =_ecdc .readRegionFlags ();_gbdbe !=nil {return _gbdbe ;};if _ecdc .IsHuffmanEncoded {if _gbdbe =_ecdc .readHuffmanFlags ();_gbdbe !=nil {return _gbdbe ;};};if _gbdbe =_ecdc .readUseRefinement ();_gbdbe !=nil {return _gbdbe ;};if _gbdbe =_ecdc .readAmountOfSymbolInstances ();_gbdbe !=nil {return _gbdbe ;};if _gbdbe =_ecdc .getSymbols ();_gbdbe !=nil {return _gbdbe ;};if _gbdbe =_ecdc .computeSymbolCodeLength ();_gbdbe !=nil {return _gbdbe ;};if _gbdbe =_ecdc .checkInput ();_gbdbe !=nil {return _gbdbe ;};_fa .Log .Trace ("\u0025\u0073",_ecdc .String ());return nil ;};func (_dgbd *Header )writeReferredToCount (_eegf _aaa .BinaryWriter )(_fece int ,_ebcc error ){const _bac ="w\u0072i\u0074\u0065\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0043ou\u006e\u0074";_dgbd .RTSNumbers =make ([]int ,len (_dgbd .RTSegments ));for _cge ,_fadgc :=range _dgbd .RTSegments {_dgbd .RTSNumbers [_cge ]=int (_fadgc .SegmentNumber );};if len (_dgbd .RTSNumbers )<=4{var _gcda byte ;if len (_dgbd .RetainBits )>=1{_gcda =byte (_dgbd .RetainBits [0]);};_gcda |=byte (len (_dgbd .RTSNumbers ))<<5;if _ebcc =_eegf .WriteByte (_gcda );_ebcc !=nil {return 0,_df .Wrap (_ebcc ,_bac ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return 1,nil ;};_fgag :=uint32 (len (_dgbd .RTSNumbers ));_acee :=make ([]byte ,4+_dd .Ceil (len (_dgbd .RTSNumbers )+1,8));_fgag |=0x7<<29;_gd .BigEndian .PutUint32 (_acee ,_fgag );copy (_acee [1:],_dgbd .RetainBits );_fece ,_ebcc =_eegf .Write (_acee );if _ebcc !=nil {return 0,_df .Wrap (_ebcc ,_bac ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return _fece ,nil ;};func (_fbaag *TableSegment )HtLow ()int32 {return _fbaag ._efbb };func (_gcdc *TextRegion )computeSymbolCodeLength ()error {if _gcdc .IsHuffmanEncoded {return _gcdc .symbolIDCodeLengths ();};_gcdc ._afbfc =int8 (_g .Ceil (_g .Log (float64 (_gcdc .NumberOfSymbols ))/_g .Log (2)));return nil ;};func (_bgea *TextRegion )checkInput ()error {const _fdee ="\u0063\u0068\u0065\u0063\u006b\u0049\u006e\u0070\u0075\u0074";if !_bgea .UseRefinement {if _bgea .SbrTemplate !=0{_fa .Log .Debug ("\u0053\u0062\u0072Te\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_bgea .SbrTemplate =0;};};if _bgea .SbHuffFS ==2||_bgea .SbHuffRDWidth ==2||_bgea .SbHuffRDHeight ==2||_bgea .SbHuffRDX ==2||_bgea .SbHuffRDY ==2{return _df .Error (_fdee ,"h\u0075\u0066\u0066\u006d\u0061\u006e \u0066\u006c\u0061\u0067\u0020\u0076a\u006c\u0075\u0065\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074e\u0064");};if !_bgea .UseRefinement {if _bgea .SbHuffRSize !=0{_fa .Log .Debug ("\u0053\u0062\u0048uf\u0066\u0052\u0053\u0069\u007a\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_bgea .SbHuffRSize =0;};if _bgea .SbHuffRDY !=0{_fa .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044Y\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_bgea .SbHuffRDY =0;};if _bgea .SbHuffRDX !=0{_fa .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044X\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_bgea .SbHuffRDX =0;};if _bgea .SbHuffRDWidth !=0{_fa .Log .Debug ("\u0053b\u0048\u0075\u0066\u0066R\u0044\u0057\u0069\u0064\u0074h\u0020s\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u00200");_bgea .SbHuffRDWidth =0;};if _bgea .SbHuffRDHeight !=0{_fa .Log .Debug ("\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069g\u0068\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0030");_bgea .SbHuffRDHeight =0;};};return nil ;};func (_caef *SymbolDictionary )String ()string {_gabg :=&_a .Builder {};_gabg .WriteString ("\n\u005b\u0053\u0059\u004dBO\u004c-\u0044\u0049\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u000a");_gabg .WriteString (_aa .Sprintf ("\u0009-\u0020S\u0064\u0072\u0054\u0065\u006dp\u006c\u0061t\u0065\u0020\u0025\u0076\u000a",_caef .SdrTemplate ));_gabg .WriteString (_aa .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0025\u0076\u000a",_caef .SdTemplate ));_gabg .WriteString (_aa .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006eg\u0043\u006f\u006e\u0074\u0065\u0078\u0074R\u0065\u0074\u0061\u0069\u006e\u0065\u0064\u0020\u0025\u0076\u000a",_caef ._fbaba ));_gabg .WriteString (_aa .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074\u0065\u0078\u0074\u0055\u0073\u0065\u0064 \u0025\u0076\u000a",_caef ._fgefa ));_gabg .WriteString (_aa .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_caef .SdHuffAggInstanceSelection ));_gabg .WriteString (_aa .Sprintf ("\u0009\u002d\u0020\u0053d\u0048\u0075\u0066\u0066\u0042\u004d\u0053\u0069\u007a\u0065S\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020%\u0076\u000a",_caef .SdHuffBMSizeSelection ));_gabg .WriteString (_aa .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_caef .SdHuffDecodeWidthSelection ));_gabg .WriteString (_aa .Sprintf ("\u0009\u002d\u0020Sd\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064e\u0048e\u0069g\u0068t\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_caef .SdHuffDecodeHeightSelection ));_gabg .WriteString (_aa .Sprintf ("\u0009\u002d\u0020U\u0073\u0065\u0052\u0065f\u0069\u006e\u0065\u006d\u0065\u006e\u0074A\u0067\u0067\u0072\u0065\u0067\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_caef .UseRefinementAggregation ));_gabg .WriteString (_aa .Sprintf ("\u0009\u002d\u0020is\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045\u006e\u0063\u006f\u0064\u0065\u0064\u0020\u0025\u0076\u000a",_caef .IsHuffmanEncoded ));_gabg .WriteString (_aa .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_caef .SdATX ));_gabg .WriteString (_aa .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_caef .SdATY ));_gabg .WriteString (_aa .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_caef .SdrATX ));_gabg .WriteString (_aa .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_caef .SdrATY ));_gabg .WriteString (_aa .Sprintf ("\u0009\u002d\u0020\u004e\u0075\u006d\u0062\u0065\u0072\u004ff\u0045\u0078\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_caef .NumberOfExportedSymbols ));_gabg .WriteString (_aa .Sprintf ("\u0009-\u0020\u004e\u0075\u006db\u0065\u0072\u004f\u0066\u004ee\u0077S\u0079m\u0062\u006f\u006c\u0073\u0020\u0025\u0076\n",_caef .NumberOfNewSymbols ));_gabg .WriteString (_aa .Sprintf ("\u0009\u002d\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u004ff\u0049\u006d\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_caef ._cbagg ));_gabg .WriteString (_aa .Sprintf ("\u0009\u002d \u006e\u0075\u006d\u0062\u0065\u0072\u004f\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0064\u0053\u0079\u006d\u0062\u006f\u006c\u0073 %\u0076\u000a",_caef ._dedeb ));return _gabg .String ();};func (_edbe *SymbolDictionary )decodeHeightClassDeltaHeight ()(int64 ,error ){if _edbe .IsHuffmanEncoded {return _edbe .decodeHeightClassDeltaHeightWithHuffman ();};_egcbd ,_bede :=_edbe ._aegd .DecodeInt (_edbe ._gbdb );if _bede !=nil {return 0,_bede ;};return int64 (_egcbd ),nil ;};func (_fbcb *HalftoneRegion )parseHeader ()error {if _dabd :=_fbcb .RegionSegment .parseHeader ();_dabd !=nil {return _dabd ;};_eeg ,_feed :=_fbcb ._cecb .ReadBit ();if _feed !=nil {return _feed ;};_fbcb .HDefaultPixel =int8 (_eeg );_bdg ,_feed :=_fbcb ._cecb .ReadBits (3);if _feed !=nil {return _feed ;};_fbcb .CombinationOperator =_gg .CombinationOperator (_bdg &0xf);_eeg ,_feed =_fbcb ._cecb .ReadBit ();if _feed !=nil {return _feed ;};if _eeg ==1{_fbcb .HSkipEnabled =true ;};_bdg ,_feed =_fbcb ._cecb .ReadBits (2);if _feed !=nil {return _feed ;};_fbcb .HTemplate =byte (_bdg &0xf);_eeg ,_feed =_fbcb ._cecb .ReadBit ();if _feed !=nil {return _feed ;};if _eeg ==1{_fbcb .IsMMREncoded =true ;};_bdg ,_feed =_fbcb ._cecb .ReadBits (32);if _feed !=nil {return _feed ;};_fbcb .HGridWidth =uint32 (_bdg &_g .MaxUint32 );_bdg ,_feed =_fbcb ._cecb .ReadBits (32);if _feed !=nil {return _feed ;};_fbcb .HGridHeight =uint32 (_bdg &_g .MaxUint32 );_bdg ,_feed =_fbcb ._cecb .ReadBits (32);if _feed !=nil {return _feed ;};_fbcb .HGridX =int32 (_bdg &_g .MaxInt32 );_bdg ,_feed =_fbcb ._cecb .ReadBits (32);if _feed !=nil {return _feed ;};_fbcb .HGridY =int32 (_bdg &_g .MaxInt32 );_bdg ,_feed =_fbcb ._cecb .ReadBits (16);if _feed !=nil {return _feed ;};_fbcb .HRegionX =uint16 (_bdg &_g .MaxUint16 );_bdg ,_feed =_fbcb ._cecb .ReadBits (16);if _feed !=nil {return _feed ;};_fbcb .HRegionY =uint16 (_bdg &_g .MaxUint16 );if _feed =_fbcb .computeSegmentDataStructure ();_feed !=nil {return _feed ;};return _fbcb .checkInput ();};func (_ee *GenericRefinementRegion )Init (header *Header ,r _aaa .StreamReader )error {_ee ._af =header ;_ee ._fe =r ;_ee .RegionInfo =NewRegionSegment (r );return _ee .parseHeader ();};func (_fgc *TextRegion )decodeSymInRefSize ()(int64 ,error ){const _fgcc ="\u0064e\u0063o\u0064\u0065\u0053\u0079\u006dI\u006e\u0052e\u0066\u0053\u0069\u007a\u0065";if _fgc .SbHuffRSize ==0{_fcgf ,_bggcf :=_ad .GetStandardTable (1);if _bggcf !=nil {return 0,_df .Wrap (_bggcf ,_fgcc ,"");};return _fcgf .Decode (_fgc ._cegd );};if _fgc ._bbga ==nil {var (_abad int ;_cabgg error ;);if _fgc .SbHuffFS ==3{_abad ++;};if _fgc .SbHuffDS ==3{_abad ++;};if _fgc .SbHuffDT ==3{_abad ++;};if _fgc .SbHuffRDWidth ==3{_abad ++;};if _fgc .SbHuffRDHeight ==3{_abad ++;};if _fgc .SbHuffRDX ==3{_abad ++;};if _fgc .SbHuffRDY ==3{_abad ++;};_fgc ._bbga ,_cabgg =_fgc .getUserTable (_abad );if _cabgg !=nil {return 0,_df .Wrap (_cabgg ,_fgcc ,"");};};_efbc ,_dbgcf :=_fgc ._bbga .Decode (_fgc ._cegd );if _dbgcf !=nil {return 0,_df .Wrap (_dbgcf ,_fgcc ,"");};return _efbc ,nil ;};func (_defg *PatternDictionary )setGbAtPixels (){if _defg .HDTemplate ==0{_defg .GBAtX =make ([]int8 ,4);_defg .GBAtY =make ([]int8 ,4);_defg .GBAtX [0]=-int8 (_defg .HdpWidth );_defg .GBAtY [0]=0;_defg .GBAtX [1]=-3;_defg .GBAtY [1]=-1;_defg .GBAtX [2]=2;_defg .GBAtY [2]=-2;_defg .GBAtX [3]=-2;_defg .GBAtY [3]=-2;}else {_defg .GBAtX =[]int8 {-int8 (_defg .HdpWidth )};_defg .GBAtY =[]int8 {0};};};func (_adag *TextRegion )encodeFlags (_ddggg _aaa .BinaryWriter )(_edgc int ,_befe error ){const _cbcgg ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _befe =_ddggg .WriteBit (int (_adag .SbrTemplate ));_befe !=nil {return _edgc ,_df .Wrap (_befe ,_cbcgg ,"s\u0062\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};if _ ,_befe =_ddggg .WriteBits (uint64 (_adag .SbdsOffset ),5);_befe !=nil {return _edgc ,_df .Wrap (_befe ,_cbcgg ,"\u0073\u0062\u0064\u0073\u004f\u0066\u0066\u0073\u0065\u0074");};if _befe =_ddggg .WriteBit (int (_adag .DefaultPixel ));_befe !=nil {return _edgc ,_df .Wrap (_befe ,_cbcgg ,"\u0044\u0065\u0066a\u0075\u006c\u0074\u0050\u0069\u0078\u0065\u006c");};if _ ,_befe =_ddggg .WriteBits (uint64 (_adag .CombinationOperator ),2);_befe !=nil {return _edgc ,_df .Wrap (_befe ,_cbcgg ,"\u0043\u006f\u006d\u0062in\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072");};if _befe =_ddggg .WriteBit (int (_adag .IsTransposed ));_befe !=nil {return _edgc ,_df .Wrap (_befe ,_cbcgg ,"\u0069\u0073\u0020\u0074\u0072\u0061\u006e\u0073\u0070\u006f\u0073\u0065\u0064");};if _ ,_befe =_ddggg .WriteBits (uint64 (_adag .ReferenceCorner ),2);_befe !=nil {return _edgc ,_df .Wrap (_befe ,_cbcgg ,"\u0072\u0065f\u0065\u0072\u0065n\u0063\u0065\u0020\u0063\u006f\u0072\u006e\u0065\u0072");};if _ ,_befe =_ddggg .WriteBits (uint64 (_adag .LogSBStrips ),2);_befe !=nil {return _edgc ,_df .Wrap (_befe ,_cbcgg ,"L\u006f\u0067\u0053\u0042\u0053\u0074\u0072\u0069\u0070\u0073");};var _eeba int ;if _adag .UseRefinement {_eeba =1;};if _befe =_ddggg .WriteBit (_eeba );_befe !=nil {return _edgc ,_df .Wrap (_befe ,_cbcgg ,"\u0075\u0073\u0065\u0020\u0072\u0065\u0066\u0069\u006ee\u006d\u0065\u006e\u0074");};_eeba =0;if _adag .IsHuffmanEncoded {_eeba =1;};if _befe =_ddggg .WriteBit (_eeba );_befe !=nil {return _edgc ,_df .Wrap (_befe ,_cbcgg ,"u\u0073\u0065\u0020\u0068\u0075\u0066\u0066\u006d\u0061\u006e");};_edgc =2;return _edgc ,nil ;};func (_agaaf *SymbolDictionary )readNumberOfNewSymbols ()error {_adad ,_bffd :=_agaaf ._gbfd .ReadBits (32);if _bffd !=nil {return _bffd ;};_agaaf .NumberOfNewSymbols =uint32 (_adad &_g .MaxUint32 );return nil ;};func (_gffb *SymbolDictionary )decodeRefinedSymbol (_adab ,_adcdf uint32 )error {var (_adga int ;_ccdc ,_fdcdf int32 ;);if _gffb .IsHuffmanEncoded {_efge ,_ecgg :=_gffb ._gbfd .ReadBits (byte (_gffb ._ebe ));if _ecgg !=nil {return _ecgg ;};_adga =int (_efge );_aebc ,_ecgg :=_ad .GetStandardTable (15);if _ecgg !=nil {return _ecgg ;};_gdba ,_ecgg :=_aebc .Decode (_gffb ._gbfd );if _ecgg !=nil {return _ecgg ;};_ccdc =int32 (_gdba );_gdba ,_ecgg =_aebc .Decode (_gffb ._gbfd );if _ecgg !=nil {return _ecgg ;};_fdcdf =int32 (_gdba );_aebc ,_ecgg =_ad .GetStandardTable (1);if _ecgg !=nil {return _ecgg ;};if _ ,_ecgg =_aebc .Decode (_gffb ._gbfd );_ecgg !=nil {return _ecgg ;};_gffb ._gbfd .Align ();}else {_efc ,_aabe :=_gffb ._aegd .DecodeIAID (uint64 (_gffb ._ebe ),_gffb ._febc );if _aabe !=nil {return _aabe ;};_adga =int (_efc );_ccdc ,_aabe =_gffb ._aegd .DecodeInt (_gffb ._cdbga );if _aabe !=nil {return _aabe ;};_fdcdf ,_aabe =_gffb ._aegd .DecodeInt (_gffb ._deeg );if _aabe !=nil {return _aabe ;};};if _dcfg :=_gffb .setSymbolsArray ();_dcfg !=nil {return _dcfg ;};_dbgc :=_gffb ._gab [_adga ];if _bccb :=_gffb .decodeNewSymbols (_adab ,_adcdf ,_dbgc ,_ccdc ,_fdcdf );_bccb !=nil {return _bccb ;};if _gffb .IsHuffmanEncoded {_gffb ._gbfd .Align ();};return nil ;};func (_gc *GenericRefinementRegion )getGrReference ()(*_gg .Bitmap ,error ){segments :=_gc ._af .RTSegments ;if len (segments )==0{return nil ,_ag .New ("\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0065\u0078is\u0074\u0073");};_bbc ,_ac :=segments [0].GetSegmentData ();if _ac !=nil {return nil ,_ac ;};_ff ,_cfb :=_bbc .(Regioner );if !_cfb {return nil ,_aa .Errorf ("\u0072\u0065\u0066\u0065\u0072r\u0065\u0064\u0020\u0074\u006f\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_bbc );};return _ff .GetRegionBitmap ();};func (_ggfd *TableSegment )StreamReader ()_aaa .StreamReader {return _ggfd ._gbfb };func (_fbbd *GenericRegion )overrideAtTemplate2 (_cbb ,_bgg ,_ffcc ,_agga ,_bebd int )int {_cbb &=0x3FB;if _fbbd .GBAtY [0]==0&&_fbbd .GBAtX [0]>=-int8 (_bebd ){_cbb |=(_agga >>uint (7-(int8 (_bebd )+_fbbd .GBAtX [0]))&0x1)<<2;}else {_cbb |=int (_fbbd .getPixel (_bgg +int (_fbbd .GBAtX [0]),_ffcc +int (_fbbd .GBAtY [0])))<<2;};return _cbb ;};func (_fgd *EndOfStripe )parseHeader (_beb *Header ,_dc _aaa .StreamReader )error {_fc ,_ea :=_fgd ._de .ReadBits (32);if _ea !=nil {return _ea ;};_fgd ._fg =int (_fc &_g .MaxInt32 );return nil ;};func (_afbf *HalftoneRegion )computeSegmentDataStructure ()error {_afbf .DataOffset =_afbf ._cecb .StreamPosition ();_afbf .DataHeaderLength =_afbf .DataOffset -_afbf .DataHeaderOffset ;_afbf .DataLength =int64 (_afbf ._cecb .Length ())-_afbf .DataHeaderLength ;return nil ;};func (_aafa *TextRegion )decodeSymbolInstances ()error {_ebbdf ,_eaffa :=_aafa .decodeStripT ();if _eaffa !=nil {return _eaffa ;};var (_dgdf int64 ;_gbaf uint32 ;);for _gbaf < _aafa .NumberOfSymbolInstances {_eegdb ,_cdce :=_aafa .decodeDT ();if _cdce !=nil {return _cdce ;};_ebbdf +=_eegdb ;var _edcgb int64 ;_bbfee :=true ;_aafa ._egfea =0;for {if _bbfee {_edcgb ,_cdce =_aafa .decodeDfs ();if _cdce !=nil {return _cdce ;};_dgdf +=_edcgb ;_aafa ._egfea =_dgdf ;_bbfee =false ;}else {_fadf ,_gfffg :=_aafa .decodeIds ();if _gfffg !=nil {return _gfffg ;};if _fadf ==_g .MaxInt32 ||_gbaf >=_aafa .NumberOfSymbolInstances {break ;};_aafa ._egfea +=_fadf +int64 (_aafa .SbdsOffset );};_acgg ,_gefef :=_aafa .decodeCurrentT ();if _gefef !=nil {return _gefef ;};_dfcg :=_ebbdf +_acgg ;_beefg ,_gefef :=_aafa .decodeID ();if _gefef !=nil {return _gefef ;};_edaaf ,_gefef :=_aafa .decodeRI ();if _gefef !=nil {return _gefef ;};_cece ,_gefef :=_aafa .decodeIb (_edaaf ,_beefg );if _gefef !=nil {return _gefef ;};if _gefef =_aafa .blit (_cece ,_dfcg );_gefef !=nil {return _gefef ;};_gbaf ++;};};return nil ;};func (_daff *Header )subInputReader ()(_aaa .StreamReader ,error ){return _aaa .NewSubstreamReader (_daff .Reader ,_daff .SegmentDataStartOffset ,_daff .SegmentDataLength );};func (_cdgd *GenericRegion )getPixel (_befa ,_fbd int )int8 {if _befa < 0||_befa >=_cdgd .Bitmap .Width {return 0;};if _fbd < 0||_fbd >=_cdgd .Bitmap .Height {return 0;};if _cdgd .Bitmap .GetPixel (_befa ,_fbd ){return 1;};return 0;};func (_gabe *SymbolDictionary )setCodingStatistics ()error {if _gabe ._gcbf ==nil {_gabe ._gcbf =_age .NewStats (512,1);};if _gabe ._gbdb ==nil {_gabe ._gbdb =_age .NewStats (512,1);};if _gabe ._gca ==nil {_gabe ._gca =_age .NewStats (512,1);};if _gabe ._aabfa ==nil {_gabe ._aabfa =_age .NewStats (512,1);};if _gabe ._gecbf ==nil {_gabe ._gecbf =_age .NewStats (512,1);};if _gabe .UseRefinementAggregation &&_gabe ._febc ==nil {_gabe ._febc =_age .NewStats (1<<uint (_gabe ._ebe ),1);_gabe ._cdbga =_age .NewStats (512,1);_gabe ._deeg =_age .NewStats (512,1);};if _gabe ._deedb ==nil {_gabe ._deedb =_age .NewStats (65536,1);};if _gabe ._aegd ==nil {var _cddb error ;_gabe ._aegd ,_cddb =_age .New (_gabe ._gbfd );if _cddb !=nil {return _cddb ;};};return nil ;};type EndOfStripe struct{_de _aaa .StreamReader ;_fg int ;};func (_gdcg *TextRegion )decodeIds ()(int64 ,error ){const _gcbab ="\u0064e\u0063\u006f\u0064\u0065\u0049\u0064s";if _gdcg .IsHuffmanEncoded {if _gdcg .SbHuffDS ==3{if _gdcg ._ggff ==nil {_aagg :=0;if _gdcg .SbHuffFS ==3{_aagg ++;};var _bgcg error ;_gdcg ._ggff ,_bgcg =_gdcg .getUserTable (_aagg );if _bgcg !=nil {return 0,_df .Wrap (_bgcg ,_gcbab ,"");};};return _gdcg ._ggff .Decode (_gdcg ._cegd );};_cebf ,_ggaa :=_ad .GetStandardTable (8+int (_gdcg .SbHuffDS ));if _ggaa !=nil {return 0,_df .Wrap (_ggaa ,_gcbab ,"");};return _cebf .Decode (_gdcg ._cegd );};_debc ,_bded :=_gdcg ._ccbfg .DecodeInt (_gdcg ._bfaa );if _bded !=nil {return 0,_df .Wrap (_bded ,_gcbab ,"\u0063\u0078\u0049\u0041\u0044\u0053");};return int64 (_debc ),nil ;};func (_ega *GenericRegion )InitEncode (bm *_gg .Bitmap ,xLoc ,yLoc ,template int ,duplicateLineRemoval bool )error {const _efga ="\u0047e\u006e\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069\u006f\u006e.\u0049\u006e\u0069\u0074\u0045\u006e\u0063\u006f\u0064\u0065";if bm ==nil {return _df .Error (_efga ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if xLoc < 0||yLoc < 0{return _df .Error (_efga ,"\u0078\u0020\u0061\u006e\u0064\u0020\u0079\u0020\u006c\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074h\u0061\u006e\u0020\u0030");};_ega .Bitmap =bm ;_ega .GBTemplate =byte (template );switch _ega .GBTemplate {case 0:_ega .GBAtX =[]int8 {3,-3,2,-2};_ega .GBAtY =[]int8 {-1,-1,-2,-2};case 1:_ega .GBAtX =[]int8 {3};_ega .GBAtY =[]int8 {-1};case 2,3:_ega .GBAtX =[]int8 {2};_ega .GBAtY =[]int8 {-1};default:return _df .Errorf (_efga ,"\u0070\u0072o\u0076\u0069\u0064\u0065\u0064 \u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u007b\u0030\u002c\u0031\u002c\u0032\u002c\u0033\u007d",template );};_ega .RegionSegment =&RegionSegment {BitmapHeight :uint32 (bm .Height ),BitmapWidth :uint32 (bm .Width ),XLocation :uint32 (xLoc ),YLocation :uint32 (yLoc )};_ega .IsTPGDon =duplicateLineRemoval ;return nil ;};func (_dagdb *PageInformationSegment )readDefaultPixelValue ()error {_fdbb ,_bdfg :=_dagdb ._gefa .ReadBit ();if _bdfg !=nil {return _bdfg ;};_dagdb ._dbab =uint8 (_fdbb &0xf);return nil ;};func (_ffac *TextRegion )createRegionBitmap ()error {_ffac .RegionBitmap =_gg .New (int (_ffac .RegionInfo .BitmapWidth ),int (_ffac .RegionInfo .BitmapHeight ));if _ffac .DefaultPixel !=0{_ffac .RegionBitmap .SetDefaultPixel ();};return nil ;};func (_feea *SymbolDictionary )parseHeader ()(_dgad error ){_fa .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");defer func (){if _dgad !=nil {_fa .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u0020\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u005b\u0050\u0041\u0052SE\u002d\u0048\u0045A\u0044\u0045R\u005d\u0020\u0066\u0061\u0069\u006ce\u0064\u002e \u0025\u0076",_dgad );}else {_fa .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");};}();if _dgad =_feea .readRegionFlags ();_dgad !=nil {return _dgad ;};if _dgad =_feea .setAtPixels ();_dgad !=nil {return _dgad ;};if _dgad =_feea .setRefinementAtPixels ();_dgad !=nil {return _dgad ;};if _dgad =_feea .readNumberOfExportedSymbols ();_dgad !=nil {return _dgad ;};if _dgad =_feea .readNumberOfNewSymbols ();_dgad !=nil {return _dgad ;};if _dgad =_feea .setInSyms ();_dgad !=nil {return _dgad ;};if _feea ._fgefa {_dggb :=_feea .Header .RTSegments ;for _gadd :=len (_dggb )-1;_gadd >=0;_gadd --{if _dggb [_gadd ].Type ==0{_ebeg ,_accb :=_dggb [_gadd ].SegmentData .(*SymbolDictionary );if !_accb {_dgad =_aa .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074:\u0020\u0025\u0076\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020S\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_dggb [_gadd ]);return _dgad ;};if _ebeg ._fgefa {_feea .setRetainedCodingContexts (_ebeg );};break ;};};};if _dgad =_feea .checkInput ();_dgad !=nil {return _dgad ;};return nil ;};func (_afaf *PageInformationSegment )readResolution ()error {_fdae ,_aagb :=_afaf ._gefa .ReadBits (32);if _aagb !=nil {return _aagb ;};_afaf .ResolutionX =int (_fdae &_g .MaxInt32 );_fdae ,_aagb =_afaf ._gefa .ReadBits (32);if _aagb !=nil {return _aagb ;};_afaf .ResolutionY =int (_fdae &_g .MaxInt32 );return nil ;};func (_bcbca *TextRegion )getUserTable (_dggc int )(_ad .Tabler ,error ){const _cecd ="\u0067\u0065\u0074U\u0073\u0065\u0072\u0054\u0061\u0062\u006c\u0065";var _afdg int ;for _ ,_dafb :=range _bcbca .Header .RTSegments {if _dafb .Type ==53{if _afdg ==_dggc {_eecg ,_fdgc :=_dafb .GetSegmentData ();if _fdgc !=nil {return nil ,_fdgc ;};_fcbee ,_gafb :=_eecg .(*TableSegment );if !_gafb {_fa .Log .Debug (_aa .Sprintf ("\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079p\u0065\u00205\u0033\u0020\u002d\u0020\u0061\u006ed\u0020in\u0064\u0065\u0078\u003a\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_dafb .SegmentNumber ));return nil ,_df .Error (_cecd ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079\u0070e\u0020\u0035\u0033\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u002a\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074");};return _ad .NewEncodedTable (_fcbee );};_afdg ++;};};return nil ,nil ;};func (_caad *SymbolDictionary )decodeHeightClassCollectiveBitmap (_fggga int64 ,_decb ,_bcfg uint32 )(*_gg .Bitmap ,error ){if _fggga ==0{_deca :=_gg .New (int (_bcfg ),int (_decb ));var (_egbe byte ;_edgd error ;);for _gbeb :=0;_gbeb < len (_deca .Data );_gbeb ++{_egbe ,_edgd =_caad ._gbfd .ReadByte ();if _edgd !=nil {return nil ,_edgd ;};if _edgd =_deca .SetByte (_gbeb ,_egbe );_edgd !=nil {return nil ,_edgd ;};};return _deca ,nil ;};if _caad ._dbee ==nil {_caad ._dbee =NewGenericRegion (_caad ._gbfd );};_caad ._dbee .setParameters (true ,_caad ._gbfd .StreamPosition (),_fggga ,_decb ,_bcfg );_babf ,_ffg :=_caad ._dbee .GetRegionBitmap ();if _ffg !=nil {return nil ,_ffg ;};return _babf ,nil ;};func (_def *template1 )form (_dgf ,_baeb ,_aade ,_adea ,_fede int16 )int16 {return ((_dgf &0x02)<<8)|(_baeb <<6)|((_aade &0x03)<<4)|(_adea <<1)|_fede ;};func (_efgd *TextRegion )GetRegionInfo ()*RegionSegment {return _efgd .RegionInfo };func (_agef *HalftoneRegion )Init (hd *Header ,r _aaa .StreamReader )error {_agef ._cecb =r ;_agef ._aag =hd ;_agef .RegionSegment =NewRegionSegment (r );return _agef .parseHeader ();};func _cdec (_affd _aaa .StreamReader ,_egbea *Header )*TextRegion {_beab :=&TextRegion {_cegd :_affd ,Header :_egbea ,RegionInfo :NewRegionSegment (_affd )};return _beab ;};func (_ca *GenericRefinementRegion )decodeOptimized (_dac ,_cfg ,_acc ,_eec ,_ae ,_fed ,_bbb int )error {var (_eb error ;_fgg int ;_eeed int ;);_ada :=_dac -int (_ca .ReferenceDY );if _adg :=int (-_ca .ReferenceDX );_adg > 0{_fgg =_adg ;};_ged :=_ca .ReferenceBitmap .GetByteIndex (_fgg ,_ada );if _ca .ReferenceDX > 0{_eeed =int (_ca .ReferenceDX );};_dfe :=_ca .RegionBitmap .GetByteIndex (_eeed ,_dac );switch _ca .TemplateID {case 0:_eb =_ca .decodeTemplate (_dac ,_cfg ,_acc ,_eec ,_ae ,_fed ,_bbb ,_dfe ,_ada ,_ged ,_ca ._bb );case 1:_eb =_ca .decodeTemplate (_dac ,_cfg ,_acc ,_eec ,_ae ,_fed ,_bbb ,_dfe ,_ada ,_ged ,_ca ._ge );};return _eb ;};type TextRegion struct{_cegd _aaa .StreamReader ;RegionInfo *RegionSegment ;SbrTemplate int8 ;SbdsOffset int8 ;DefaultPixel int8 ;CombinationOperator _gg .CombinationOperator ;IsTransposed int8 ;ReferenceCorner int16 ;LogSBStrips int16 ;UseRefinement bool ;IsHuffmanEncoded bool ;SbHuffRSize int8 ;SbHuffRDY int8 ;SbHuffRDX int8 ;SbHuffRDHeight int8 ;SbHuffRDWidth int8 ;SbHuffDT int8 ;SbHuffDS int8 ;SbHuffFS int8 ;SbrATX []int8 ;SbrATY []int8 ;NumberOfSymbolInstances uint32 ;_egfea int64 ;SbStrips int8 ;NumberOfSymbols uint32 ;RegionBitmap *_gg .Bitmap ;Symbols []*_gg .Bitmap ;_ccbfg *_age .Decoder ;_dddd *GenericRefinementRegion ;_dgag *_age .DecoderStats ;_begd *_age .DecoderStats ;_bfaa *_age .DecoderStats ;_effd *_age .DecoderStats ;_ddfe *_age .DecoderStats ;_daga *_age .DecoderStats ;_cadd *_age .DecoderStats ;_caeg *_age .DecoderStats ;_aaac *_age .DecoderStats ;_dgef *_age .DecoderStats ;_eafd *_age .DecoderStats ;_afbfc int8 ;_afgb *_ad .FixedSizeTable ;Header *Header ;_dgbda _ad .Tabler ;_ggff _ad .Tabler ;_ffdc _ad .Tabler ;_caab _ad .Tabler ;_fbf _ad .Tabler ;_ddacd _ad .Tabler ;_dbcf _ad .Tabler ;_bbga _ad .Tabler ;_eebed ,_baffe map[int ]int ;_dbge []int ;_cgac *_gg .Points ;_gbec *_gg .Bitmaps ;_bbbgc *_dd .IntSlice ;_agfa ,_bddb int ;_edee *_gg .Boxes ;};func (_beef *SymbolDictionary )readRegionFlags ()error {var (_ggce uint64 ;_efcg int ;);_ ,_feef :=_beef ._gbfd .ReadBits (3);if _feef !=nil {return _feef ;};_efcg ,_feef =_beef ._gbfd .ReadBit ();if _feef !=nil {return _feef ;};_beef .SdrTemplate =int8 (_efcg );_ggce ,_feef =_beef ._gbfd .ReadBits (2);if _feef !=nil {return _feef ;};_beef .SdTemplate =int8 (_ggce &0xf);_efcg ,_feef =_beef ._gbfd .ReadBit ();if _feef !=nil {return _feef ;};if _efcg ==1{_beef ._fbaba =true ;};_efcg ,_feef =_beef ._gbfd .ReadBit ();if _feef !=nil {return _feef ;};if _efcg ==1{_beef ._fgefa =true ;};_efcg ,_feef =_beef ._gbfd .ReadBit ();if _feef !=nil {return _feef ;};if _efcg ==1{_beef .SdHuffAggInstanceSelection =true ;};_efcg ,_feef =_beef ._gbfd .ReadBit ();if _feef !=nil {return _feef ;};_beef .SdHuffBMSizeSelection =int8 (_efcg );_ggce ,_feef =_beef ._gbfd .ReadBits (2);if _feef !=nil {return _feef ;};_beef .SdHuffDecodeWidthSelection =int8 (_ggce &0xf);_ggce ,_feef =_beef ._gbfd .ReadBits (2);if _feef !=nil {return _feef ;};_beef .SdHuffDecodeHeightSelection =int8 (_ggce &0xf);_efcg ,_feef =_beef ._gbfd .ReadBit ();if _feef !=nil {return _feef ;};if _efcg ==1{_beef .UseRefinementAggregation =true ;};_efcg ,_feef =_beef ._gbfd .ReadBit ();if _feef !=nil {return _feef ;};if _efcg ==1{_beef .IsHuffmanEncoded =true ;};return nil ;};func (_cae *template0 )form (_cdf ,_gbg ,_dga ,_dfa ,_dbd int16 )int16 {return (_cdf <<10)|(_gbg <<7)|(_dga <<4)|(_dfa <<1)|_dbd ;};func (_fggg *GenericRegion )parseHeader ()(_ggf error ){_fa .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052I\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0050\u0061\u0072s\u0069\u006e\u0067\u0048\u0065\u0061\u0064e\u0072\u002e\u002e\u002e");defer func (){if _ggf !=nil {_fa .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e]\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065r\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0077\u0069th\u0020\u0065\u0072\u0072\u006f\u0072\u002e\u0020\u0025\u0076",_ggf );}else {_fa .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049C\u002d\u0052\u0045G\u0049\u004f\u004e]\u0020\u0050a\u0072\u0073\u0069\u006e\u0067\u0048e\u0061de\u0072\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0053\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079\u002e\u002e\u002e");};}();var (_dbe int ;_fad uint64 ;);if _ggf =_fggg .RegionSegment .parseHeader ();_ggf !=nil {return _ggf ;};if _ ,_ggf =_fggg ._fb .ReadBits (3);_ggf !=nil {return _ggf ;};_dbe ,_ggf =_fggg ._fb .ReadBit ();if _ggf !=nil {return _ggf ;};if _dbe ==1{_fggg .UseExtTemplates =true ;};_dbe ,_ggf =_fggg ._fb .ReadBit ();if _ggf !=nil {return _ggf ;};if _dbe ==1{_fggg .IsTPGDon =true ;};_fad ,_ggf =_fggg ._fb .ReadBits (2);if _ggf !=nil {return _ggf ;};_fggg .GBTemplate =byte (_fad &0xf);_dbe ,_ggf =_fggg ._fb .ReadBit ();if _ggf !=nil {return _ggf ;};if _dbe ==1{_fggg .IsMMREncoded =true ;};if !_fggg .IsMMREncoded {_abe :=1;if _fggg .GBTemplate ==0{_abe =4;if _fggg .UseExtTemplates {_abe =12;};};if _ggf =_fggg .readGBAtPixels (_abe );_ggf !=nil {return _ggf ;};};if _ggf =_fggg .computeSegmentDataStructure ();_ggf !=nil {return _ggf ;};_fa .Log .Trace ("\u0025\u0073",_fggg );return nil ;};var _ templater =&template0 {};func (_geef *SymbolDictionary )decodeHeightClassDeltaHeightWithHuffman ()(int64 ,error ){switch _geef .SdHuffDecodeHeightSelection {case 0:_fecc ,_eebf :=_ad .GetStandardTable (4);if _eebf !=nil {return 0,_eebf ;};return _fecc .Decode (_geef ._gbfd );case 1:_eacfb ,_ebce :=_ad .GetStandardTable (5);if _ebce !=nil {return 0,_ebce ;};return _eacfb .Decode (_geef ._gbfd );case 3:if _geef ._gggf ==nil {_faea ,_edebg :=_ad .GetStandardTable (0);if _edebg !=nil {return 0,_edebg ;};_geef ._gggf =_faea ;};return _geef ._gggf .Decode (_geef ._gbfd );};return 0,nil ;};func (_eaf *GenericRegion )overrideAtTemplate3 (_dab ,_dfba ,_agca ,_ggbe ,_cgb int )int {_dab &=0x3EF;if _eaf .GBAtY [0]==0&&_eaf .GBAtX [0]>=-int8 (_cgb ){_dab |=(_ggbe >>uint (7-(int8 (_cgb )+_eaf .GBAtX [0]))&0x1)<<4;}else {_dab |=int (_eaf .getPixel (_dfba +int (_eaf .GBAtX [0]),_agca +int (_eaf .GBAtY [0])))<<4;};return _dab ;};func (_fgea *GenericRefinementRegion )decodeSLTP ()(int ,error ){_fgea .Template .setIndex (_fgea ._cf );return _fgea ._afb .DecodeBit (_fgea ._cf );};var _ SegmentEncoder =&GenericRegion {};func (_gbgd *TextRegion )setCodingStatistics ()error {if _gbgd ._dgag ==nil {_gbgd ._dgag =_age .NewStats (512,1);};if _gbgd ._begd ==nil {_gbgd ._begd =_age .NewStats (512,1);};if _gbgd ._bfaa ==nil {_gbgd ._bfaa =_age .NewStats (512,1);};if _gbgd ._effd ==nil {_gbgd ._effd =_age .NewStats (512,1);};if _gbgd ._ddfe ==nil {_gbgd ._ddfe =_age .NewStats (512,1);};if _gbgd ._daga ==nil {_gbgd ._daga =_age .NewStats (512,1);};if _gbgd ._cadd ==nil {_gbgd ._cadd =_age .NewStats (512,1);};if _gbgd ._caeg ==nil {_gbgd ._caeg =_age .NewStats (1<<uint (_gbgd ._afbfc ),1);};if _gbgd ._aaac ==nil {_gbgd ._aaac =_age .NewStats (512,1);};if _gbgd ._dgef ==nil {_gbgd ._dgef =_age .NewStats (512,1);};if _gbgd ._ccbfg ==nil {var _ccbge error ;_gbgd ._ccbfg ,_ccbge =_age .New (_gbgd ._cegd );if _ccbge !=nil {return _ccbge ;};};return nil ;};func (_gfgg *PageInformationSegment )readIsStriped ()error {_dce ,_adcc :=_gfgg ._gefa .ReadBit ();if _adcc !=nil {return _adcc ;};if _dce ==1{_gfgg .IsStripe =true ;};return nil ;};func (_eaab *TextRegion )readRegionFlags ()error {var (_bfde int ;_deeda uint64 ;_bgff error ;);_bfde ,_bgff =_eaab ._cegd .ReadBit ();if _bgff !=nil {return _bgff ;};_eaab .SbrTemplate =int8 (_bfde );_deeda ,_bgff =_eaab ._cegd .ReadBits (5);if _bgff !=nil {return _bgff ;};_eaab .SbdsOffset =int8 (_deeda );if _eaab .SbdsOffset > 0x0f{_eaab .SbdsOffset -=0x20;};_bfde ,_bgff =_eaab ._cegd .ReadBit ();if _bgff !=nil {return _bgff ;};_eaab .DefaultPixel =int8 (_bfde );_deeda ,_bgff =_eaab ._cegd .ReadBits (2);if _bgff !=nil {return _bgff ;};_eaab .CombinationOperator =_gg .CombinationOperator (int (_deeda )&0x3);_bfde ,_bgff =_eaab ._cegd .ReadBit ();if _bgff !=nil {return _bgff ;};_eaab .IsTransposed =int8 (_bfde );_deeda ,_bgff =_eaab ._cegd .ReadBits (2);if _bgff !=nil {return _bgff ;};_eaab .ReferenceCorner =int16 (_deeda )&0x3;_deeda ,_bgff =_eaab ._cegd .ReadBits (2);if _bgff !=nil {return _bgff ;};_eaab .LogSBStrips =int16 (_deeda )&0x3;_eaab .SbStrips =1<<uint (_eaab .LogSBStrips );_bfde ,_bgff =_eaab ._cegd .ReadBit ();if _bgff !=nil {return _bgff ;};if _bfde ==1{_eaab .UseRefinement =true ;};_bfde ,_bgff =_eaab ._cegd .ReadBit ();if _bgff !=nil {return _bgff ;};if _bfde ==1{_eaab .IsHuffmanEncoded =true ;};return nil ;};func (_aca *GenericRegion )decodeLine (_cfaa ,_fba ,_gfdf int )error {const _febf ="\u0064\u0065\u0063\u006f\u0064\u0065\u004c\u0069\u006e\u0065";_cgf :=_aca .Bitmap .GetByteIndex (0,_cfaa );_acceb :=_cgf -_aca .Bitmap .RowStride ;switch _aca .GBTemplate {case 0:if !_aca .UseExtTemplates {return _aca .decodeTemplate0a (_cfaa ,_fba ,_gfdf ,_cgf ,_acceb );};return _aca .decodeTemplate0b (_cfaa ,_fba ,_gfdf ,_cgf ,_acceb );case 1:return _aca .decodeTemplate1 (_cfaa ,_fba ,_gfdf ,_cgf ,_acceb );case 2:return _aca .decodeTemplate2 (_cfaa ,_fba ,_gfdf ,_cgf ,_acceb );case 3:return _aca .decodeTemplate3 (_cfaa ,_fba ,_gfdf ,_cgf ,_acceb );};return _df .Errorf (_febf ,"\u0069\u006e\u0076a\u006c\u0069\u0064\u0020G\u0042\u0054\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u003a\u0020\u0025\u0064",_aca .GBTemplate );};func (_gb *GenericRefinementRegion )decodeTypicalPredictedLine (_gbb ,_aad ,_bc ,_gbf ,_cb ,_eg int )error {_dag :=_gbb -int (_gb .ReferenceDY );_bd :=_gb .ReferenceBitmap .GetByteIndex (0,_dag );_ffb :=_gb .RegionBitmap .GetByteIndex (0,_gbb );var _cbg error ;switch _gb .TemplateID {case 0:_cbg =_gb .decodeTypicalPredictedLineTemplate0 (_gbb ,_aad ,_bc ,_gbf ,_cb ,_eg ,_ffb ,_dag ,_bd );case 1:_cbg =_gb .decodeTypicalPredictedLineTemplate1 (_gbb ,_aad ,_bc ,_gbf ,_cb ,_eg ,_ffb ,_dag ,_bd );};return _cbg ;};func (_eaeb *TableSegment )HtPS ()int32 {return _eaeb ._egfa };type template1 struct{};func (_dddf *HalftoneRegion )computeGrayScalePlanes (_dbbc []*_gg .Bitmap ,_cfe int )([][]int ,error ){_dgb :=make ([][]int ,_dddf .HGridHeight );for _fffg :=0;_fffg < len (_dgb );_fffg ++{_dgb [_fffg ]=make ([]int ,_dddf .HGridWidth );};for _adb :=0;_adb < int (_dddf .HGridHeight );_adb ++{for _gdcb :=0;_gdcb < int (_dddf .HGridWidth );_gdcb +=8{var _efe int ;if _gagg :=int (_dddf .HGridWidth )-_gdcb ;_gagg > 8{_efe =8;}else {_efe =_gagg ;};_afaa :=_dbbc [0].GetByteIndex (_gdcb ,_adb );for _dagfe :=0;_dagfe < _efe ;_dagfe ++{_gebc :=_dagfe +_gdcb ;_dgb [_adb ][_gebc ]=0;for _dfeb :=0;_dfeb < _cfe ;_dfeb ++{_dfecc ,_dfge :=_dbbc [_dfeb ].GetByte (_afaa );if _dfge !=nil {return nil ,_dfge ;};_adbb :=_dfecc >>uint (7-_gebc &7);_cbeb :=_adbb &1;_fde :=1<<uint (_dfeb );_cacc :=int (_cbeb )*_fde ;_dgb [_adb ][_gebc ]+=_cacc ;};};};};return _dgb ,nil ;};func (_gdb *PageInformationSegment )readCombinationOperatorOverrideAllowed ()error {_dgce ,_cgeg :=_gdb ._gefa .ReadBit ();if _cgeg !=nil {return _cgeg ;};if _dgce ==1{_gdb ._bedb =true ;};return nil ;};func (_edgdb *TextRegion )getSymbols ()error {if _edgdb .Header .RTSegments !=nil {return _edgdb .initSymbols ();};return nil ;};func (_cfgg *SymbolDictionary )getSymbol (_ebf int )(*_gg .Bitmap ,error ){const _agce ="\u0067e\u0074\u0053\u0079\u006d\u0062\u006fl";_ceee ,_gebe :=_cfgg ._bgca .GetBitmap (_cfgg ._fdfd [_ebf ]);if _gebe !=nil {return nil ,_df .Wrap (_gebe ,_agce ,"\u0063\u0061n\u0027\u0074\u0020g\u0065\u0074\u0020\u0073\u0079\u006d\u0062\u006f\u006c");};return _ceee ,nil ;};func (_fefc *TextRegion )decodeRdx ()(int64 ,error ){const _bdgdg ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064x";if _fefc .IsHuffmanEncoded {if _fefc .SbHuffRDX ==3{if _fefc ._ddacd ==nil {var (_aaea int ;_ccaa error ;);if _fefc .SbHuffFS ==3{_aaea ++;};if _fefc .SbHuffDS ==3{_aaea ++;};if _fefc .SbHuffDT ==3{_aaea ++;};if _fefc .SbHuffRDWidth ==3{_aaea ++;};if _fefc .SbHuffRDHeight ==3{_aaea ++;};_fefc ._ddacd ,_ccaa =_fefc .getUserTable (_aaea );if _ccaa !=nil {return 0,_df .Wrap (_ccaa ,_bdgdg ,"");};};return _fefc ._ddacd .Decode (_fefc ._cegd );};_bebcb ,_bbaceg :=_ad .GetStandardTable (14+int (_fefc .SbHuffRDX ));if _bbaceg !=nil {return 0,_df .Wrap (_bbaceg ,_bdgdg ,"");};return _bebcb .Decode (_fefc ._cegd );};_bacd ,_aefg :=_fefc ._ccbfg .DecodeInt (_fefc ._aaac );if _aefg !=nil {return 0,_df .Wrap (_aefg ,_bdgdg ,"");};return int64 (_bacd ),nil ;};func (_ffbde *PageInformationSegment )encodeStripingInformation (_deb _aaa .BinaryWriter )(_bedg int ,_bdefc error ){const _bebc ="\u0065n\u0063\u006f\u0064\u0065S\u0074\u0072\u0069\u0070\u0069n\u0067I\u006ef\u006f\u0072\u006d\u0061\u0074\u0069\u006fn";if !_ffbde .IsStripe {if _bedg ,_bdefc =_deb .Write ([]byte {0x00,0x00});_bdefc !=nil {return 0,_df .Wrap (_bdefc ,_bebc ,"n\u006f\u0020\u0073\u0074\u0072\u0069\u0070\u0069\u006e\u0067");};return _bedg ,nil ;};_afe :=make ([]byte ,2);_gd .BigEndian .PutUint16 (_afe ,_ffbde .MaxStripeSize |1<<15);if _bedg ,_bdefc =_deb .Write (_afe );_bdefc !=nil {return 0,_df .Wrapf (_bdefc ,_bebc ,"\u0073\u0074\u0072i\u0070\u0069\u006e\u0067\u003a\u0020\u0025\u0064",_ffbde .MaxStripeSize );};return _bedg ,nil ;};func (_cbc *GenericRefinementRegion )decodeTypicalPredictedLineTemplate1 (_cca ,_ef ,_dfg ,_cd ,_egf ,_aef ,_gfd ,_ce ,_cfa int )(_fgeg error ){var (_bdc ,_ga int ;_eae ,_dcb int ;_eca ,_afa int ;_eeb byte ;);if _cca > 0{_eeb ,_fgeg =_cbc .RegionBitmap .GetByte (_gfd -_dfg );if _fgeg !=nil {return ;};_eae =int (_eeb );};if _ce > 0&&_ce <=_cbc .ReferenceBitmap .Height {_eeb ,_fgeg =_cbc .ReferenceBitmap .GetByte (_cfa -_cd +_aef );if _fgeg !=nil {return ;};_dcb =int (_eeb )<<2;};if _ce >=0&&_ce < _cbc .ReferenceBitmap .Height {_eeb ,_fgeg =_cbc .ReferenceBitmap .GetByte (_cfa +_aef );if _fgeg !=nil {return ;};_eca =int (_eeb );};if _ce > -2&&_ce < _cbc .ReferenceBitmap .Height -1{_eeb ,_fgeg =_cbc .ReferenceBitmap .GetByte (_cfa +_cd +_aef );if _fgeg !=nil {return ;};_afa =int (_eeb );};_bdc =((_eae >>5)&0x6)|((_afa >>2)&0x30)|(_eca &0xc0)|(_dcb &0x200);_ga =((_afa >>2)&0x70)|(_eca &0xc0)|(_dcb &0x700);var _eecd int ;for _edc :=0;_edc < _egf ;_edc =_eecd {var (_gdaf int ;_aeg int ;);_eecd =_edc +8;if _gdaf =_ef -_edc ;_gdaf > 8{_gdaf =8;};_baf :=_eecd < _ef ;_aab :=_eecd < _cbc .ReferenceBitmap .Width ;_eff :=_aef +1;if _cca > 0{_eeb =0;if _baf {_eeb ,_fgeg =_cbc .RegionBitmap .GetByte (_gfd -_dfg +1);if _fgeg !=nil {return ;};};_eae =(_eae <<8)|int (_eeb );};if _ce > 0&&_ce <=_cbc .ReferenceBitmap .Height {var _gdd int ;if _aab {_eeb ,_fgeg =_cbc .ReferenceBitmap .GetByte (_cfa -_cd +_eff );if _fgeg !=nil {return ;};_gdd =int (_eeb )<<2;};_dcb =(_dcb <<8)|_gdd ;};if _ce >=0&&_ce < _cbc .ReferenceBitmap .Height {_eeb =0;if _aab {_eeb ,_fgeg =_cbc .ReferenceBitmap .GetByte (_cfa +_eff );if _fgeg !=nil {return ;};};_eca =(_eca <<8)|int (_eeb );};if _ce > -2&&_ce < (_cbc .ReferenceBitmap .Height -1){_eeb =0;if _aab {_eeb ,_fgeg =_cbc .ReferenceBitmap .GetByte (_cfa +_cd +_eff );if _fgeg !=nil {return ;};};_afa =(_afa <<8)|int (_eeb );};for _bef :=0;_bef < _gdaf ;_bef ++{var _gba int ;_gfe :=(_ga >>4)&0x1ff;switch _gfe {case 0x1ff:_gba =1;case 0x00:_gba =0;default:_cbc ._cf .SetIndex (int32 (_bdc ));_gba ,_fgeg =_cbc ._afb .DecodeBit (_cbc ._cf );if _fgeg !=nil {return ;};};_daa :=uint (7-_bef );_aeg |=int (_gba <<_daa );_bdc =((_bdc &0x0d6)<<1)|_gba |(_eae >>_daa +5)&0x002|((_afa >>_daa +2)&0x010)|((_eca >>_daa )&0x040)|((_dcb >>_daa )&0x200);_ga =((_ga &0xdb)<<1)|((_afa >>_daa +2)&0x010)|((_eca >>_daa )&0x080)|((_dcb >>_daa )&0x400);};_fgeg =_cbc .RegionBitmap .SetByte (_gfd ,byte (_aeg ));if _fgeg !=nil {return ;};_gfd ++;_cfa ++;};return nil ;};func (_egcg *Header )readSegmentDataLength (_efaf _aaa .StreamReader )(_abga error ){_egcg .SegmentDataLength ,_abga =_efaf .ReadBits (32);if _abga !=nil {return _abga ;};_egcg .SegmentDataLength &=_g .MaxInt32 ;return nil ;};func (_egcd *SymbolDictionary )getUserTable (_gfeb int )(_ad .Tabler ,error ){var _fceb int ;for _ ,_fgbc :=range _egcd .Header .RTSegments {if _fgbc .Type ==53{if _fceb ==_gfeb {_acdf ,_ebgb :=_fgbc .GetSegmentData ();if _ebgb !=nil {return nil ,_ebgb ;};_faef :=_acdf .(_ad .BasicTabler );return _ad .NewEncodedTable (_faef );};_fceb ++;};};return nil ,nil ;};func (_bagd *TextRegion )InitEncode (globalSymbolsMap ,localSymbolsMap map[int ]int ,comps []int ,inLL *_gg .Points ,symbols *_gg .Bitmaps ,classIDs *_dd .IntSlice ,boxes *_gg .Boxes ,width ,height ,symbits int ){_bagd .RegionInfo =&RegionSegment {BitmapWidth :uint32 (width ),BitmapHeight :uint32 (height )};_bagd ._eebed =globalSymbolsMap ;_bagd ._baffe =localSymbolsMap ;_bagd ._dbge =comps ;_bagd ._cgac =inLL ;_bagd ._gbec =symbols ;_bagd ._bbbgc =classIDs ;_bagd ._edee =boxes ;_bagd ._bddb =symbits ;};func (_agae *Header )readHeaderLength (_abce _aaa .StreamReader ,_cce int64 ){_agae .HeaderLength =_abce .StreamPosition ()-_cce ;};func (_ddbd *TextRegion )decodeRI ()(int64 ,error ){if !_ddbd .UseRefinement {return 0,nil ;};if _ddbd .IsHuffmanEncoded {_dcfgc ,_dagaa :=_ddbd ._cegd .ReadBit ();return int64 (_dcfgc ),_dagaa ;};_adfc ,_bec :=_ddbd ._ccbfg .DecodeInt (_ddbd ._ddfe );return int64 (_adfc ),_bec ;};func (_befbe *Header )writeSegmentDataLength (_decg _aaa .BinaryWriter )(_gagf int ,_fgdb error ){_edge :=make ([]byte ,4);_gd .BigEndian .PutUint32 (_edge ,uint32 (_befbe .SegmentDataLength ));if _gagf ,_fgdb =_decg .Write (_edge );_fgdb !=nil {return 0,_df .Wrap (_fgdb ,"\u0048\u0065a\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u004c\u0065ng\u0074\u0068","");};return _gagf ,nil ;};func (_adcff *TextRegion )readHuffmanFlags ()error {var (_dbdf int ;_fdgfd uint64 ;_ccdb error ;);_ ,_ccdb =_adcff ._cegd .ReadBit ();if _ccdb !=nil {return _ccdb ;};_dbdf ,_ccdb =_adcff ._cegd .ReadBit ();if _ccdb !=nil {return _ccdb ;};_adcff .SbHuffRSize =int8 (_dbdf );_fdgfd ,_ccdb =_adcff ._cegd .ReadBits (2);if _ccdb !=nil {return _ccdb ;};_adcff .SbHuffRDY =int8 (_fdgfd )&0xf;_fdgfd ,_ccdb =_adcff ._cegd .ReadBits (2);if _ccdb !=nil {return _ccdb ;};_adcff .SbHuffRDX =int8 (_fdgfd )&0xf;_fdgfd ,_ccdb =_adcff ._cegd .ReadBits (2);if _ccdb !=nil {return _ccdb ;};_adcff .SbHuffRDHeight =int8 (_fdgfd )&0xf;_fdgfd ,_ccdb =_adcff ._cegd .ReadBits (2);if _ccdb !=nil {return _ccdb ;};_adcff .SbHuffRDWidth =int8 (_fdgfd )&0xf;_fdgfd ,_ccdb =_adcff ._cegd .ReadBits (2);if _ccdb !=nil {return _ccdb ;};_adcff .SbHuffDT =int8 (_fdgfd )&0xf;_fdgfd ,_ccdb =_adcff ._cegd .ReadBits (2);if _ccdb !=nil {return _ccdb ;};_adcff .SbHuffDS =int8 (_fdgfd )&0xf;_fdgfd ,_ccdb =_adcff ._cegd .ReadBits (2);if _ccdb !=nil {return _ccdb ;};_adcff .SbHuffFS =int8 (_fdgfd )&0xf;return nil ;};func (_ecb *Header )readSegmentPageAssociation (_dgg Documenter ,_ffbg _aaa .StreamReader ,_gbc uint64 ,_gce ...int )(_daba error ){const _gbddf ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074P\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061t\u0069\u006f\u006e";if !_ecb .PageAssociationFieldSize {_agcd ,_abca :=_ffbg .ReadBits (8);if _abca !=nil {return _df .Wrap (_abca ,_gbddf ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_ecb .PageAssociation =int (_agcd &0xFF);}else {_cbba ,_accd :=_ffbg .ReadBits (32);if _accd !=nil {return _df .Wrap (_accd ,_gbddf ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_ecb .PageAssociation =int (_cbba &_g .MaxInt32 );};if _gbc ==0{return nil ;};if _ecb .PageAssociation !=0{_eedc ,_fcadb :=_dgg .GetPage (_ecb .PageAssociation );if _fcadb !=nil {return _df .Wrap (_fcadb ,_gbddf ,"\u0061s\u0073\u006f\u0063\u0069a\u0074\u0065\u0064\u0020\u0070a\u0067e\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006ed");};var _agcf int ;for _gbeg :=uint64 (0);_gbeg < _gbc ;_gbeg ++{_agcf =_gce [_gbeg ];_ecb .RTSegments [_gbeg ],_fcadb =_eedc .GetSegment (_agcf );if _fcadb !=nil {var _beeb error ;_ecb .RTSegments [_gbeg ],_beeb =_dgg .GetGlobalSegment (_agcf );if _beeb !=nil {return _df .Wrapf (_fcadb ,_gbddf ,"\u0072\u0065\u0066\u0065\u0072\u0065n\u0063\u0065\u0020s\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064\u0020\u0061\u0074\u0020pa\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0072\u0020\u0069\u006e\u0020\u0067\u006c\u006f\u0062\u0061\u006c\u0073",_ecb .PageAssociation );};};};return nil ;};for _efebf :=uint64 (0);_efebf < _gbc ;_efebf ++{_ecb .RTSegments [_efebf ],_daba =_dgg .GetGlobalSegment (_gce [_efebf ]);if _daba !=nil {return _df .Wrapf (_daba ,_gbddf ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u003a\u0020\u0027\u0025d\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064",_gce [_efebf ]);};};return nil ;};func (_cdcc *RegionSegment )parseHeader ()error {const _gfggg ="p\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_fa .Log .Trace ("\u005b\u0052\u0045\u0047I\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002dH\u0045A\u0044\u0045\u0052\u005d\u0020\u0042\u0065g\u0069\u006e");defer func (){_fa .Log .Trace ("\u005b\u0052\u0045G\u0049\u004f\u004e\u005d[\u0050\u0041\u0052\u0053\u0045\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");}();_gdgd ,_cdfa :=_cdcc ._gfedg .ReadBits (32);if _cdfa !=nil {return _df .Wrap (_cdfa ,_gfggg ,"\u0077\u0069\u0064t\u0068");};_cdcc .BitmapWidth =uint32 (_gdgd &_g .MaxUint32 );_gdgd ,_cdfa =_cdcc ._gfedg .ReadBits (32);if _cdfa !=nil {return _df .Wrap (_cdfa ,_gfggg ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_cdcc .BitmapHeight =uint32 (_gdgd &_g .MaxUint32 );_gdgd ,_cdfa =_cdcc ._gfedg .ReadBits (32);if _cdfa !=nil {return _df .Wrap (_cdfa ,_gfggg ,"\u0078\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_cdcc .XLocation =uint32 (_gdgd &_g .MaxUint32 );_gdgd ,_cdfa =_cdcc ._gfedg .ReadBits (32);if _cdfa !=nil {return _df .Wrap (_cdfa ,_gfggg ,"\u0079\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_cdcc .YLocation =uint32 (_gdgd &_g .MaxUint32 );if _ ,_cdfa =_cdcc ._gfedg .ReadBits (5);_cdfa !=nil {return _df .Wrap (_cdfa ,_gfggg ,"\u0064i\u0072\u0079\u0020\u0072\u0065\u0061d");};if _cdfa =_cdcc .readCombinationOperator ();_cdfa !=nil {return _df .Wrap (_cdfa ,_gfggg ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};return nil ;};func (_agdf *TextRegion )String ()string {_eccec :=&_a .Builder {};_eccec .WriteString ("\u000a[\u0054E\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u000a");_eccec .WriteString (_agdf .RegionInfo .String ()+"\u000a");_eccec .WriteString (_aa .Sprintf ("\u0009\u002d\u0020\u0053br\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0025\u0076\u000a",_agdf .SbrTemplate ));_eccec .WriteString (_aa .Sprintf ("\u0009-\u0020S\u0062\u0064\u0073\u004f\u0066f\u0073\u0065t\u003a\u0020\u0025\u0076\u000a",_agdf .SbdsOffset ));_eccec .WriteString (_aa .Sprintf ("\t\u002d \u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0050i\u0078\u0065\u006c\u003a %\u0076\u000a",_agdf .DefaultPixel ));_eccec .WriteString (_aa .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0076\u000a",_agdf .CombinationOperator ));_eccec .WriteString (_aa .Sprintf ("\t\u002d \u0049\u0073\u0054\u0072\u0061\u006e\u0073\u0070o\u0073\u0065\u0064\u003a %\u0076\u000a",_agdf .IsTransposed ));_eccec .WriteString (_aa .Sprintf ("\u0009\u002d\u0020Re\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0043\u006f\u0072\u006e\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_agdf .ReferenceCorner ));_eccec .WriteString (_aa .Sprintf ("\t\u002d\u0020\u0055\u0073eR\u0065f\u0069\u006e\u0065\u006d\u0065n\u0074\u003a\u0020\u0025\u0076\u000a",_agdf .UseRefinement ));_eccec .WriteString (_aa .Sprintf ("\u0009-\u0020\u0049\u0073\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045n\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0076\u000a",_agdf .IsHuffmanEncoded ));if _agdf .IsHuffmanEncoded {_eccec .WriteString (_aa .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_agdf .SbHuffRSize ));_eccec .WriteString (_aa .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0059:\u0020\u0025\u0076\u000a",_agdf .SbHuffRDY ));_eccec .WriteString (_aa .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0058:\u0020\u0025\u0076\u000a",_agdf .SbHuffRDX ));_eccec .WriteString (_aa .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069\u0067\u0068\u0074\u003a\u0020\u0025v\u000a",_agdf .SbHuffRDHeight ));_eccec .WriteString (_aa .Sprintf ("\t\u002d\u0020\u0053\u0062Hu\u0066f\u0052\u0044\u0057\u0069\u0064t\u0068\u003a\u0020\u0025\u0076\u000a",_agdf .SbHuffRDWidth ));_eccec .WriteString (_aa .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0054\u003a\u0020\u0025\u0076\u000a",_agdf .SbHuffDT ));_eccec .WriteString (_aa .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0053\u003a\u0020\u0025\u0076\u000a",_agdf .SbHuffDS ));_eccec .WriteString (_aa .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0046\u0053\u003a\u0020\u0025\u0076\u000a",_agdf .SbHuffFS ));};_eccec .WriteString (_aa .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_agdf .SbrATX ));_eccec .WriteString (_aa .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0059:\u0020\u0025\u0076\u000a",_agdf .SbrATY ));_eccec .WriteString (_aa .Sprintf ("\u0009\u002d\u0020N\u0075\u006d\u0062\u0065r\u004f\u0066\u0053\u0079\u006d\u0062\u006fl\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_agdf .NumberOfSymbolInstances ));_eccec .WriteString (_aa .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_agdf .SbrATX ));return _eccec .String ();};func (_faaa *TextRegion )decodeRdw ()(int64 ,error ){const _bbace ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064w";if _faaa .IsHuffmanEncoded {if _faaa .SbHuffRDWidth ==3{if _faaa ._caab ==nil {var (_bddad int ;_acbb error ;);if _faaa .SbHuffFS ==3{_bddad ++;};if _faaa .SbHuffDS ==3{_bddad ++;};if _faaa .SbHuffDT ==3{_bddad ++;};_faaa ._caab ,_acbb =_faaa .getUserTable (_bddad );if _acbb !=nil {return 0,_df .Wrap (_acbb ,_bbace ,"");};};return _faaa ._caab .Decode (_faaa ._cegd );};_aedd ,_cgagf :=_ad .GetStandardTable (14+int (_faaa .SbHuffRDWidth ));if _cgagf !=nil {return 0,_df .Wrap (_cgagf ,_bbace ,"");};return _aedd .Decode (_faaa ._cegd );};_fggd ,_egba :=_faaa ._ccbfg .DecodeInt (_faaa ._daga );if _egba !=nil {return 0,_df .Wrap (_egba ,_bbace ,"");};return int64 (_fggd ),nil ;};func (_gebf *GenericRegion )writeGBAtPixels (_gag _aaa .BinaryWriter )(_cbcg int ,_cabf error ){const _dafg ="\u0077r\u0069t\u0065\u0047\u0042\u0041\u0074\u0050\u0069\u0078\u0065\u006c\u0073";if _gebf .UseMMR {return 0,nil ;};_bfgf :=1;if _gebf .GBTemplate ==0{_bfgf =4;}else if _gebf .UseExtTemplates {_bfgf =12;};if len (_gebf .GBAtX )!=_bfgf {return 0,_df .Errorf (_dafg ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0058\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");};if len (_gebf .GBAtY )!=_bfgf {return 0,_df .Errorf (_dafg ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0059\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");};for _bgb :=0;_bgb < _bfgf ;_bgb ++{if _cabf =_gag .WriteByte (byte (_gebf .GBAtX [_bgb ]));_cabf !=nil {return _cbcg ,_df .Wrap (_cabf ,_dafg ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0058");};_cbcg ++;if _cabf =_gag .WriteByte (byte (_gebf .GBAtY [_bgb ]));_cabf !=nil {return _cbcg ,_df .Wrap (_cabf ,_dafg ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0059");};_cbcg ++;};return _cbcg ,nil ;};func (_dbdc *GenericRegion )setParameters (_cbab bool ,_aafc ,_fdde int64 ,_edf ,_bgdb uint32 ){_dbdc .IsMMREncoded =_cbab ;_dbdc .DataOffset =_aafc ;_dbdc .DataLength =_fdde ;_dbdc .RegionSegment .BitmapHeight =_edf ;_dbdc .RegionSegment .BitmapWidth =_bgdb ;_dbdc ._fccef =nil ;_dbdc .Bitmap =nil ;};type RegionSegment struct{_gfedg _aaa .StreamReader ;BitmapWidth uint32 ;BitmapHeight uint32 ;XLocation uint32 ;YLocation uint32 ;CombinaionOperator _gg .CombinationOperator ;};func (_eecc *GenericRegion )decodeTemplate2 (_abef ,_egfe ,_ded int ,_ffcf ,_fbb int )(_cag error ){const _gcf ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0032";var (_afab ,_gcd int ;_cdd ,_fcf int ;_befb byte ;_eda ,_gdg int ;);if _abef >=1{_befb ,_cag =_eecc .Bitmap .GetByte (_fbb );if _cag !=nil {return _df .Wrap (_cag ,_gcf ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0031");};_cdd =int (_befb );};if _abef >=2{_befb ,_cag =_eecc .Bitmap .GetByte (_fbb -_eecc .Bitmap .RowStride );if _cag !=nil {return _df .Wrap (_cag ,_gcf ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0032");};_fcf =int (_befb )<<4;};_afab =(_cdd >>3&0x7c)|(_fcf >>3&0x380);for _dbb :=0;_dbb < _ded ;_dbb =_eda {var (_ecaa byte ;_gcb int ;);_eda =_dbb +8;if _acb :=_egfe -_dbb ;_acb > 8{_gcb =8;}else {_gcb =_acb ;};if _abef > 0{_cdd <<=8;if _eda < _egfe {_befb ,_cag =_eecc .Bitmap .GetByte (_fbb +1);if _cag !=nil {return _df .Wrap (_cag ,_gcf ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0030");};_cdd |=int (_befb );};};if _abef > 1{_fcf <<=8;if _eda < _egfe {_befb ,_cag =_eecc .Bitmap .GetByte (_fbb -_eecc .Bitmap .RowStride +1);if _cag !=nil {return _df .Wrap (_cag ,_gcf ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0031");};_fcf |=int (_befb )<<4;};};for _fade :=0;_fade < _gcb ;_fade ++{_bdecf :=uint (10-_fade );if _eecc ._cde {_gcd =_eecc .overrideAtTemplate2 (_afab ,_dbb +_fade ,_abef ,int (_ecaa ),_fade );_eecc ._fbc .SetIndex (int32 (_gcd ));}else {_eecc ._fbc .SetIndex (int32 (_afab ));};_gdg ,_cag =_eecc ._agc .DecodeBit (_eecc ._fbc );if _cag !=nil {return _df .Wrap (_cag ,_gcf ,"");};_ecaa |=byte (_gdg <<uint (7-_fade ));_afab =((_afab &0x1bd)<<1)|_gdg |((_cdd >>_bdecf )&0x4)|((_fcf >>_bdecf )&0x80);};if _ecfb :=_eecc .Bitmap .SetByte (_ffcf ,_ecaa );_ecfb !=nil {return _df .Wrap (_ecfb ,_gcf ,"");};_ffcf ++;_fbb ++;};return nil ;};func (_gacb *SymbolDictionary )addSymbol (_ceag Regioner )error {_gdfb ,_aea :=_ceag .GetRegionBitmap ();if _aea !=nil {return _aea ;};_gacb ._bcbd [_gacb ._dedeb ]=_gdfb ;_gacb ._gab =append (_gacb ._gab ,_gdfb );_fa .Log .Trace ("\u005b\u0053YM\u0042\u004f\u004c \u0044\u0049\u0043\u0054ION\u0041RY\u005d\u0020\u0041\u0064\u0064\u0065\u0064 s\u0079\u006d\u0062\u006f\u006c\u003a\u0020%\u0073",_gdfb );return nil ;};type TableSegment struct{_gbfb _aaa .StreamReader ;_adgad int32 ;_egfa int32 ;_bbf int32 ;_efbb int32 ;_gagfe int32 ;};func (_bga *GenericRegion )Encode (w _aaa .BinaryWriter )(_bfa int ,_bgdc error ){const _fggaa ="G\u0065n\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069o\u006e\u002e\u0045\u006eco\u0064\u0065";if _bga .Bitmap ==nil {return 0,_df .Error (_fggaa ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};_cbde ,_bgdc :=_bga .RegionSegment .Encode (w );if _bgdc !=nil {return 0,_df .Wrap (_bgdc ,_fggaa ,"\u0052\u0065\u0067\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074");};_bfa +=_cbde ;if _bgdc =w .SkipBits (4);_bgdc !=nil {return _bfa ,_df .Wrap (_bgdc ,_fggaa ,"\u0073k\u0069p\u0020\u0072\u0065\u0073\u0065r\u0076\u0065d\u0020\u0062\u0069\u0074\u0073");};var _fdb int ;if _bga .IsTPGDon {_fdb =1;};if _bgdc =w .WriteBit (_fdb );_bgdc !=nil {return _bfa ,_df .Wrap (_bgdc ,_fggaa ,"\u0074\u0070\u0067\u0064\u006f\u006e");};_fdb =0;if _bgdc =w .WriteBit (int (_bga .GBTemplate >>1)&0x01);_bgdc !=nil {return _bfa ,_df .Wrap (_bgdc ,_fggaa ,"f\u0069r\u0073\u0074\u0020\u0067\u0062\u0074\u0065\u006dp\u006c\u0061\u0074\u0065 b\u0069\u0074");};if _bgdc =w .WriteBit (int (_bga .GBTemplate )&0x01);_bgdc !=nil {return _bfa ,_df .Wrap (_bgdc ,_fggaa ,"s\u0065\u0063\u006f\u006ed \u0067b\u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u0062\u0069\u0074");};if _bga .UseMMR {_fdb =1;};if _bgdc =w .WriteBit (_fdb );_bgdc !=nil {return _bfa ,_df .Wrap (_bgdc ,_fggaa ,"u\u0073\u0065\u0020\u004d\u004d\u0052\u0020\u0062\u0069\u0074");};_bfa ++;if _cbde ,_bgdc =_bga .writeGBAtPixels (w );_bgdc !=nil {return _bfa ,_df .Wrap (_bgdc ,_fggaa ,"");};_bfa +=_cbde ;_bfac :=_gga .New ();if _bgdc =_bfac .EncodeBitmap (_bga .Bitmap ,_bga .IsTPGDon );_bgdc !=nil {return _bfa ,_df .Wrap (_bgdc ,_fggaa ,"");};_bfac .Final ();var _gdf int64 ;if _gdf ,_bgdc =_bfac .WriteTo (w );_bgdc !=nil {return _bfa ,_df .Wrap (_bgdc ,_fggaa ,"");};_bfa +=int (_gdf );return _bfa ,nil ;};func (_ege *GenericRegion )decodeTemplate0b (_eeac ,_fccf ,_fgega int ,_ffc ,_accf int )(_ccb error ){const _aed ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0062";var (_ecfd ,_fdg int ;_cef ,_dcf int ;_fff byte ;_ccag int ;);if _eeac >=1{_fff ,_ccb =_ege .Bitmap .GetByte (_accf );if _ccb !=nil {return _df .Wrap (_ccb ,_aed ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_cef =int (_fff );};if _eeac >=2{_fff ,_ccb =_ege .Bitmap .GetByte (_accf -_ege .Bitmap .RowStride );if _ccb !=nil {return _df .Wrap (_ccb ,_aed ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_dcf =int (_fff )<<6;};_ecfd =(_cef &0xf0)|(_dcf &0x3800);for _cfgf :=0;_cfgf < _fgega ;_cfgf =_ccag {var (_ffbd byte ;_aff int ;);_ccag =_cfgf +8;if _fbe :=_fccf -_cfgf ;_fbe > 8{_aff =8;}else {_aff =_fbe ;};if _eeac > 0{_cef <<=8;if _ccag < _fccf {_fff ,_ccb =_ege .Bitmap .GetByte (_accf +1);if _ccb !=nil {return _df .Wrap (_ccb ,_aed ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_cef |=int (_fff );};};if _eeac > 1{_dcf <<=8;if _ccag < _fccf {_fff ,_ccb =_ege .Bitmap .GetByte (_accf -_ege .Bitmap .RowStride +1);if _ccb !=nil {return _df .Wrap (_ccb ,_aed ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_dcf |=int (_fff )<<6;};};for _acdb :=0;_acdb < _aff ;_acdb ++{_cbef :=uint (7-_acdb );if _ege ._cde {_fdg =_ege .overrideAtTemplate0b (_ecfd ,_cfgf +_acdb ,_eeac ,int (_ffbd ),_acdb ,int (_cbef ));_ege ._fbc .SetIndex (int32 (_fdg ));}else {_ege ._fbc .SetIndex (int32 (_ecfd ));};var _fadg int ;_fadg ,_ccb =_ege ._agc .DecodeBit (_ege ._fbc );if _ccb !=nil {return _df .Wrap (_ccb ,_aed ,"");};_ffbd |=byte (_fadg <<uint (_cbef ));_ecfd =((_ecfd &0x7bf7)<<1)|_fadg |((_cef >>_cbef )&0x10)|((_dcf >>_cbef )&0x800);};if _dfae :=_ege .Bitmap .SetByte (_ffc ,_ffbd );_dfae !=nil {return _df .Wrap (_dfae ,_aed ,"");};_ffc ++;_accf ++;};return nil ;};func (_ecec *TextRegion )setContexts (_gdfbb *_age .DecoderStats ,_dfebe *_age .DecoderStats ,_eeff *_age .DecoderStats ,_decge *_age .DecoderStats ,_eacd *_age .DecoderStats ,_agcgd *_age .DecoderStats ,_feff *_age .DecoderStats ,_dagc *_age .DecoderStats ,_gaac *_age .DecoderStats ,_gefad *_age .DecoderStats ){_ecec ._dgag =_dfebe ;_ecec ._begd =_eeff ;_ecec ._bfaa =_decge ;_ecec ._effd =_eacd ;_ecec ._daga =_feff ;_ecec ._cadd =_dagc ;_ecec ._caeg =_agcgd ;_ecec ._aaac =_gaac ;_ecec ._dgef =_gefad ;_ecec ._eafd =_gdfbb ;};func (_bgfd *SymbolDictionary )GetDictionary ()([]*_gg .Bitmap ,error ){_fa .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c-\u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");defer func (){_fa .Log .Trace ("\u005b\u0053\u0059M\u0042\u004f\u004c\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");_fa .Log .Trace ("\u005b\u0053Y\u004d\u0042\u004f\u004c\u002dD\u0049\u0043\u0054\u0049\u004fN\u0041\u0052\u0059\u005d\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020\u000a\u0045\u0078\u003a\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u000a\u006e\u0065\u0077\u003a\u0027\u0025\u0073\u0027",_bgfd ._gfffe ,_bgfd ._bcbd );}();if _bgfd ._gfffe ==nil {var _ffbdg error ;if _bgfd .UseRefinementAggregation {_bgfd ._ebe =_bgfd .getSbSymCodeLen ();};if !_bgfd .IsHuffmanEncoded {if _ffbdg =_bgfd .setCodingStatistics ();_ffbdg !=nil {return nil ,_ffbdg ;};};_bgfd ._bcbd =make ([]*_gg .Bitmap ,_bgfd .NumberOfNewSymbols );var _aggad []int ;if _bgfd .IsHuffmanEncoded &&!_bgfd .UseRefinementAggregation {_aggad =make ([]int ,_bgfd .NumberOfNewSymbols );};if _ffbdg =_bgfd .setSymbolsArray ();_ffbdg !=nil {return nil ,_ffbdg ;};var _bbaef ,_bbbad int64 ;_bgfd ._dedeb =0;for _bgfd ._dedeb < _bgfd .NumberOfNewSymbols {_bbbad ,_ffbdg =_bgfd .decodeHeightClassDeltaHeight ();if _ffbdg !=nil {return nil ,_ffbdg ;};_bbaef +=_bbbad ;var _edcf ,_dfbf uint32 ;_dedb :=int64 (_bgfd ._dedeb );for {var _bdac int64 ;_bdac ,_ffbdg =_bgfd .decodeDifferenceWidth ();if _ffbdg !=nil {return nil ,_ffbdg ;};if _bdac ==int64 (_g .MaxInt64 )||_bgfd ._dedeb >=_bgfd .NumberOfNewSymbols {break ;};_edcf +=uint32 (_bdac );_dfbf +=_edcf ;if !_bgfd .IsHuffmanEncoded ||_bgfd .UseRefinementAggregation {if !_bgfd .UseRefinementAggregation {_ffbdg =_bgfd .decodeDirectlyThroughGenericRegion (_edcf ,uint32 (_bbaef ));if _ffbdg !=nil {return nil ,_ffbdg ;};}else {_ffbdg =_bgfd .decodeAggregate (_edcf ,uint32 (_bbaef ));if _ffbdg !=nil {return nil ,_ffbdg ;};};}else if _bgfd .IsHuffmanEncoded &&!_bgfd .UseRefinementAggregation {_aggad [_bgfd ._dedeb ]=int (_edcf );};_bgfd ._dedeb ++;};if _bgfd .IsHuffmanEncoded &&!_bgfd .UseRefinementAggregation {var _degd int64 ;if _bgfd .SdHuffBMSizeSelection ==0{var _cbeg _ad .Tabler ;_cbeg ,_ffbdg =_ad .GetStandardTable (1);if _ffbdg !=nil {return nil ,_ffbdg ;};_degd ,_ffbdg =_cbeg .Decode (_bgfd ._gbfd );if _ffbdg !=nil {return nil ,_ffbdg ;};}else {_degd ,_ffbdg =_bgfd .huffDecodeBmSize ();if _ffbdg !=nil {return nil ,_ffbdg ;};};_bgfd ._gbfd .Align ();var _gcbb *_gg .Bitmap ;_gcbb ,_ffbdg =_bgfd .decodeHeightClassCollectiveBitmap (_degd ,uint32 (_bbaef ),_dfbf );if _ffbdg !=nil {return nil ,_ffbdg ;};_ffbdg =_bgfd .decodeHeightClassBitmap (_gcbb ,_dedb ,int (_bbaef ),_aggad );if _ffbdg !=nil {return nil ,_ffbdg ;};};};_cdgdf ,_ffbdg :=_bgfd .getToExportFlags ();if _ffbdg !=nil {return nil ,_ffbdg ;};_bgfd .setExportedSymbols (_cdgdf );};return _bgfd ._gfffe ,nil ;};func (_afdb *Header )writeFlags (_decf _aaa .BinaryWriter )(_abaa error ){const _gfff ="\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065F\u006c\u0061\u0067\u0073";_begbc :=byte (_afdb .Type );if _abaa =_decf .WriteByte (_begbc );_abaa !=nil {return _df .Wrap (_abaa ,_gfff ,"\u0077\u0072\u0069ti\u006e\u0067\u0020\u0073\u0065\u0067\u006d\u0065\u006et\u0020t\u0079p\u0065 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064");};if !_afdb .RetainFlag &&!_afdb .PageAssociationFieldSize {return nil ;};if _abaa =_decf .SkipBits (-8);_abaa !=nil {return _df .Wrap (_abaa ,_gfff ,"\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0062\u0061\u0063\u006b\u0020\u0074\u0068\u0065\u0020\u0062\u0069\u0074\u0073\u0020\u0066\u0061il\u0065\u0064");};var _dgc int ;if _afdb .RetainFlag {_dgc =1;};if _abaa =_decf .WriteBit (_dgc );_abaa !=nil {return _df .Wrap (_abaa ,_gfff ,"\u0072\u0065\u0074\u0061in\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067\u0073");};_dgc =0;if _afdb .PageAssociationFieldSize {_dgc =1;};if _abaa =_decf .WriteBit (_dgc );_abaa !=nil {return _df .Wrap (_abaa ,_gfff ,"p\u0061\u0067\u0065\u0020as\u0073o\u0063\u0069\u0061\u0074\u0069o\u006e\u0020\u0066\u006c\u0061\u0067");};_decf .FinishByte ();return nil ;};func (_begb *GenericRegion )copyLineAbove (_dacd int )error {_eebd :=_dacd *_begb .Bitmap .RowStride ;_egb :=_eebd -_begb .Bitmap .RowStride ;for _egbf :=0;_egbf < _begb .Bitmap .RowStride ;_egbf ++{_bcf ,_ggc :=_begb .Bitmap .GetByte (_egb );if _ggc !=nil {return _ggc ;};_egb ++;if _ggc =_begb .Bitmap .SetByte (_eebd ,_bcf );_ggc !=nil {return _ggc ;};_eebd ++;};return nil ;};type Type int ;func (_dfbd *TextRegion )decodeCurrentT ()(int64 ,error ){if _dfbd .SbStrips !=1{if _dfbd .IsHuffmanEncoded {_eded ,_facd :=_dfbd ._cegd .ReadBits (byte (_dfbd .LogSBStrips ));return int64 (_eded ),_facd ;};_dgfb ,_bgead :=_dfbd ._ccbfg .DecodeInt (_dfbd ._effd );if _bgead !=nil {return 0,_bgead ;};return int64 (_dgfb ),nil ;};return 0,nil ;};func (_ebda *PageInformationSegment )readIsLossless ()error {_gcdd ,_beffc :=_ebda ._gefa .ReadBit ();if _beffc !=nil {return _beffc ;};if _gcdd ==1{_ebda .IsLossless =true ;};return nil ;};func (_faafc *Header )writeSegmentPageAssociation (_ceg _aaa .BinaryWriter )(_aaag int ,_dede error ){const _gecf ="w\u0072\u0069\u0074\u0065\u0053\u0065g\u006d\u0065\u006e\u0074\u0050\u0061\u0067\u0065\u0041s\u0073\u006f\u0063i\u0061t\u0069\u006f\u006e";if _faafc .pageSize ()!=4{if _dede =_ceg .WriteByte (byte (_faafc .PageAssociation ));_dede !=nil {return 0,_df .Wrap (_dede ,_gecf ,"\u0070\u0061\u0067\u0065\u0053\u0069\u007a\u0065\u0020\u0021\u003d\u0020\u0034");};return 1,nil ;};_cgca :=make ([]byte ,4);_gd .BigEndian .PutUint32 (_cgca ,uint32 (_faafc .PageAssociation ));if _aaag ,_dede =_ceg .Write (_cgca );_dede !=nil {return 0,_df .Wrap (_dede ,_gecf ,"\u0034 \u0062y\u0074\u0065\u0020\u0070\u0061g\u0065\u0020n\u0075\u006d\u0062\u0065\u0072");};return _aaag ,nil ;};func (_eebc *SymbolDictionary )encodeATFlags (_ggcge _aaa .BinaryWriter )(_cacb int ,_aceg error ){const _fcbe ="\u0065\u006e\u0063\u006f\u0064\u0065\u0041\u0054\u0046\u006c\u0061\u0067\u0073";if _eebc .IsHuffmanEncoded ||_eebc .SdTemplate !=0{return 0,nil ;};_ecae :=4;if _eebc .SdTemplate !=0{_ecae =1;};for _afg :=0;_afg < _ecae ;_afg ++{if _aceg =_ggcge .WriteByte (byte (_eebc .SdATX [_afg ]));_aceg !=nil {return _cacb ,_df .Wrapf (_aceg ,_fcbe ,"\u0053d\u0041\u0054\u0058\u005b\u0025\u0064]",_afg );};_cacb ++;if _aceg =_ggcge .WriteByte (byte (_eebc .SdATY [_afg ]));_aceg !=nil {return _cacb ,_df .Wrapf (_aceg ,_fcbe ,"\u0053d\u0041\u0054\u0059\u005b\u0025\u0064]",_afg );};_cacb ++;};return _cacb ,nil ;};func (_aabf *HalftoneRegion )checkInput ()error {if _aabf .IsMMREncoded {if _aabf .HTemplate !=0{_fa .Log .Debug ("\u0048\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030",_aabf .HTemplate );};if _aabf .HSkipEnabled {_fa .Log .Debug ("\u0048\u0053\u006b\u0069\u0070\u0045\u006e\u0061\u0062\u006c\u0065\u0064\u0020\u0030\u0020\u0025\u0076\u0020(\u0073\u0068\u006f\u0075\u006c\u0064\u0020c\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020v\u0061\u006c\u0075\u0065\u0020\u0066\u0061\u006c\u0073\u0065\u0029",_aabf .HSkipEnabled );};};return nil ;};func (_eebe *GenericRefinementRegion )decodeTemplate (_gea ,_acce ,_agd ,_ecaf ,_bf ,_ece ,_bca ,_dfga ,_fac ,_bad int ,_ffd templater )(_edb error ){var (_ecc ,_aec ,_ggad ,_ggae ,_db int16 ;_fdc ,_aee ,_bbbc ,_cbd int ;_adc byte ;);if _fac >=1&&(_fac -1)< _eebe .ReferenceBitmap .Height {_adc ,_edb =_eebe .ReferenceBitmap .GetByte (_bad -_ecaf );if _edb !=nil {return ;};_fdc =int (_adc );};if _fac >=0&&(_fac )< _eebe .ReferenceBitmap .Height {_adc ,_edb =_eebe .ReferenceBitmap .GetByte (_bad );if _edb !=nil {return ;};_aee =int (_adc );};if _fac >=-1&&(_fac +1)< _eebe .ReferenceBitmap .Height {_adc ,_edb =_eebe .ReferenceBitmap .GetByte (_bad +_ecaf );if _edb !=nil {return ;};_bbbc =int (_adc );};_bad ++;if _gea >=1{_adc ,_edb =_eebe .RegionBitmap .GetByte (_dfga -_agd );if _edb !=nil {return ;};_cbd =int (_adc );};_dfga ++;_cdg :=_eebe .ReferenceDX %8;_acd :=6+_cdg ;_dae :=_bad %_ecaf ;if _acd >=0{if _acd < 8{_ecc =int16 (_fdc >>uint (_acd ))&0x07;};if _acd < 8{_aec =int16 (_aee >>uint (_acd ))&0x07;};if _acd < 8{_ggad =int16 (_bbbc >>uint (_acd ))&0x07;};if _acd ==6&&_dae > 1{if _fac >=1&&(_fac -1)< _eebe .ReferenceBitmap .Height {_adc ,_edb =_eebe .ReferenceBitmap .GetByte (_bad -_ecaf -2);if _edb !=nil {return _edb ;};_ecc |=int16 (_adc <<2)&0x04;};if _fac >=0&&_fac < _eebe .ReferenceBitmap .Height {_adc ,_edb =_eebe .ReferenceBitmap .GetByte (_bad -2);if _edb !=nil {return _edb ;};_aec |=int16 (_adc <<2)&0x04;};if _fac >=-1&&_fac +1< _eebe .ReferenceBitmap .Height {_adc ,_edb =_eebe .ReferenceBitmap .GetByte (_bad +_ecaf -2);if _edb !=nil {return _edb ;};_ggad |=int16 (_adc <<2)&0x04;};};if _acd ==0{_fdc =0;_aee =0;_bbbc =0;if _dae < _ecaf -1{if _fac >=1&&_fac -1< _eebe .ReferenceBitmap .Height {_adc ,_edb =_eebe .ReferenceBitmap .GetByte (_bad -_ecaf );if _edb !=nil {return _edb ;};_fdc =int (_adc );};if _fac >=0&&_fac < _eebe .ReferenceBitmap .Height {_adc ,_edb =_eebe .ReferenceBitmap .GetByte (_bad );if _edb !=nil {return _edb ;};_aee =int (_adc );};if _fac >=-1&&_fac +1< _eebe .ReferenceBitmap .Height {_adc ,_edb =_eebe .ReferenceBitmap .GetByte (_bad +_ecaf );if _edb !=nil {return _edb ;};_bbbc =int (_adc );};};_bad ++;};}else {_ecc =int16 (_fdc <<1)&0x07;_aec =int16 (_aee <<1)&0x07;_ggad =int16 (_bbbc <<1)&0x07;_fdc =0;_aee =0;_bbbc =0;if _dae < _ecaf -1{if _fac >=1&&_fac -1< _eebe .ReferenceBitmap .Height {_adc ,_edb =_eebe .ReferenceBitmap .GetByte (_bad -_ecaf );if _edb !=nil {return _edb ;};_fdc =int (_adc );};if _fac >=0&&_fac < _eebe .ReferenceBitmap .Height {_adc ,_edb =_eebe .ReferenceBitmap .GetByte (_bad );if _edb !=nil {return _edb ;};_aee =int (_adc );};if _fac >=-1&&_fac +1< _eebe .ReferenceBitmap .Height {_adc ,_edb =_eebe .ReferenceBitmap .GetByte (_bad +_ecaf );if _edb !=nil {return _edb ;};_bbbc =int (_adc );};_bad ++;};_ecc |=int16 ((_fdc >>7)&0x07);_aec |=int16 ((_aee >>7)&0x07);_ggad |=int16 ((_bbbc >>7)&0x07);};_ggae =int16 (_cbd >>6);_db =0;_bee :=(2-_cdg )%8;_fdc <<=uint (_bee );_aee <<=uint (_bee );_bbbc <<=uint (_bee );_cbd <<=2;var _bg int ;for _egc :=0;_egc < _acce ;_egc ++{_cad :=_egc &0x07;_efg :=_ffd .form (_ecc ,_aec ,_ggad ,_ggae ,_db );if _eebe ._dee {_adc ,_edb =_eebe .RegionBitmap .GetByte (_eebe .RegionBitmap .GetByteIndex (_egc ,_gea ));if _edb !=nil {return _edb ;};_eebe ._cf .SetIndex (int32 (_eebe .overrideAtTemplate0 (int (_efg ),_egc ,_gea ,int (_adc ),_cad )));}else {_eebe ._cf .SetIndex (int32 (_efg ));};_bg ,_edb =_eebe ._afb .DecodeBit (_eebe ._cf );if _edb !=nil {return _edb ;};if _edb =_eebe .RegionBitmap .SetPixel (_egc ,_gea ,byte (_bg ));_edb !=nil {return _edb ;};_ecc =((_ecc <<1)|0x01&int16 (_fdc >>7))&0x07;_aec =((_aec <<1)|0x01&int16 (_aee >>7))&0x07;_ggad =((_ggad <<1)|0x01&int16 (_bbbc >>7))&0x07;_ggae =((_ggae <<1)|0x01&int16 (_cbd >>7))&0x07;_db =int16 (_bg );if (_egc -int (_eebe .ReferenceDX ))%8==5{_fdc =0;_aee =0;_bbbc =0;if ((_egc -int (_eebe .ReferenceDX ))/8)+1< _eebe .ReferenceBitmap .RowStride {if _fac >=1&&(_fac -1)< _eebe .ReferenceBitmap .Height {_adc ,_edb =_eebe .ReferenceBitmap .GetByte (_bad -_ecaf );if _edb !=nil {return _edb ;};_fdc =int (_adc );};if _fac >=0&&_fac < _eebe .ReferenceBitmap .Height {_adc ,_edb =_eebe .ReferenceBitmap .GetByte (_bad );if _edb !=nil {return _edb ;};_aee =int (_adc );};if _fac >=-1&&(_fac +1)< _eebe .ReferenceBitmap .Height {_adc ,_edb =_eebe .ReferenceBitmap .GetByte (_bad +_ecaf );if _edb !=nil {return _edb ;};_bbbc =int (_adc );};};_bad ++;}else {_fdc <<=1;_aee <<=1;_bbbc <<=1;};if _cad ==5&&_gea >=1{if ((_egc >>3)+1)>=_eebe .RegionBitmap .RowStride {_cbd =0;}else {_adc ,_edb =_eebe .RegionBitmap .GetByte (_dfga -_agd );if _edb !=nil {return _edb ;};_cbd =int (_adc );};_dfga ++;}else {_cbd <<=1;};};return nil ;};func (_cbag *GenericRefinementRegion )String ()string {_fdcd :=&_a .Builder {};_fdcd .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_fdcd .WriteString (_cbag .RegionInfo .String ()+"\u000a");_fdcd .WriteString (_aa .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0052\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_cbag .IsTPGROn ));_fdcd .WriteString (_aa .Sprintf ("\u0009-\u0020T\u0065\u006d\u0070\u006c\u0061t\u0065\u0049D\u003a\u0020\u0025\u0076\u000a",_cbag .TemplateID ));_fdcd .WriteString (_aa .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_cbag .GrAtX ));_fdcd .WriteString (_aa .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_cbag .GrAtY ));_fdcd .WriteString (_aa .Sprintf ("\u0009-\u0020R\u0065\u0066\u0065\u0072\u0065n\u0063\u0065D\u0058\u0020\u0025\u0076\u000a",_cbag .ReferenceDX ));_fdcd .WriteString (_aa .Sprintf ("\u0009\u002d\u0020\u0052ef\u0065\u0072\u0065\u006e\u0063\u0044\u0065\u0059\u003a\u0020\u0025\u0076\u000a",_cbag .ReferenceDY ));return _fdcd .String ();};func (_gcbba *SymbolDictionary )decodeThroughTextRegion (_bgef ,_caccg ,_edga uint32 )error {if _gcbba ._cbec ==nil {_gcbba ._cbec =_cdec (_gcbba ._gbfd ,nil );_gcbba ._cbec .setContexts (_gcbba ._deedb ,_age .NewStats (512,1),_age .NewStats (512,1),_age .NewStats (512,1),_age .NewStats (512,1),_gcbba ._febc ,_age .NewStats (512,1),_age .NewStats (512,1),_age .NewStats (512,1),_age .NewStats (512,1));};if _ddgg :=_gcbba .setSymbolsArray ();_ddgg !=nil {return _ddgg ;};_gcbba ._cbec .setParameters (_gcbba ._aegd ,_gcbba .IsHuffmanEncoded ,true ,_bgef ,_caccg ,_edga ,1,_gcbba ._cbagg +_gcbba ._dedeb ,0,0,0,1,0,0,0,0,0,0,0,0,0,_gcbba .SdrTemplate ,_gcbba .SdrATX ,_gcbba .SdrATY ,_gcbba ._gab ,_gcbba ._ebe );return _gcbba .addSymbol (_gcbba ._cbec );};func (_ddd *GenericRegion )String ()string {_dfec :=&_a .Builder {};_dfec .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_dfec .WriteString (_ddd .RegionSegment .String ()+"\u000a");_dfec .WriteString (_aa .Sprintf ("\u0009\u002d\u0020Us\u0065\u0045\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_ddd .UseExtTemplates ));_dfec .WriteString (_aa .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0044\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_ddd .IsTPGDon ));_dfec .WriteString (_aa .Sprintf ("\u0009-\u0020G\u0042\u0054\u0065\u006d\u0070l\u0061\u0074e\u003a\u0020\u0025\u0064\u000a",_ddd .GBTemplate ));_dfec .WriteString (_aa .Sprintf ("\t\u002d \u0049\u0073\u004d\u004d\u0052\u0045\u006e\u0063o\u0064\u0065\u0064\u003a %\u0076\u000a",_ddd .IsMMREncoded ));_dfec .WriteString (_aa .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_ddd .GBAtX ));_dfec .WriteString (_aa .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_ddd .GBAtY ));_dfec .WriteString (_aa .Sprintf ("\t\u002d \u0047\u0042\u0041\u0074\u004f\u0076\u0065\u0072r\u0069\u0064\u0065\u003a %\u0076\u000a",_ddd .GBAtOverride ));return _dfec .String ();};func (_ecaad *PageInformationSegment )encodeFlags (_eegd _aaa .BinaryWriter )(_cff error ){const _fdcc ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _cff =_eegd .SkipBits (1);_cff !=nil {return _df .Wrap (_cff ,_fdcc ,"\u0072\u0065\u0073e\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074");};var _cfbf int ;if _ecaad .CombinationOperatorOverrideAllowed (){_cfbf =1;};if _cff =_eegd .WriteBit (_cfbf );_cff !=nil {return _df .Wrap (_cff ,_fdcc ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0064\u0065\u006e");};_cfbf =0;if _ecaad ._fcgg {_cfbf =1;};if _cff =_eegd .WriteBit (_cfbf );_cff !=nil {return _df .Wrap (_cff ,_fdcc ,"\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0061\u0075\u0078i\u006ci\u0061r\u0079\u0020\u0062\u0075\u0066\u0066\u0065r");};if _cff =_eegd .WriteBit ((int (_ecaad ._gfeda )>>1)&0x01);_cff !=nil {return _df .Wrap (_cff ,_fdcc ,"\u0063\u006f\u006d\u0062\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006f\u0070\u0065\u0072\u0061\u0074o\u0072\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0062\u0069\u0074");};if _cff =_eegd .WriteBit (int (_ecaad ._gfeda )&0x01);_cff !=nil {return _df .Wrap (_cff ,_fdcc ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0062\u0069\u0074");};_cfbf =int (_ecaad ._dbab );if _cff =_eegd .WriteBit (_cfbf );_cff !=nil {return _df .Wrap (_cff ,_fdcc ,"\u0064e\u0066\u0061\u0075\u006c\u0074\u0020\u0070\u0061\u0067\u0065\u0020p\u0069\u0078\u0065\u006c\u0020\u0076\u0061\u006c\u0075\u0065");};_cfbf =0;if _ecaad ._fbg {_cfbf =1;};if _cff =_eegd .WriteBit (_cfbf );_cff !=nil {return _df .Wrap (_cff ,_fdcc ,"\u0063\u006f\u006e\u0074ai\u006e\u0073\u0020\u0072\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074");};_cfbf =0;if _ecaad .IsLossless {_cfbf =1;};if _cff =_eegd .WriteBit (_cfbf );_cff !=nil {return _df .Wrap (_cff ,_fdcc ,"p\u0061\u0067\u0065\u0020\u0069\u0073 \u0065\u0076\u0065\u006e\u0074\u0075\u0061\u006c\u006cy\u0020\u006c\u006fs\u0073l\u0065\u0073\u0073");};return nil ;};func (_geeg *TableSegment )Init (h *Header ,r _aaa .StreamReader )error {_geeg ._gbfb =r ;return _geeg .parseHeader ();};func (_cga *HalftoneRegion )GetRegionInfo ()*RegionSegment {return _cga .RegionSegment };func (_gdde *PatternDictionary )readGrayMax ()error {_eggg ,_dgfe :=_gdde ._fddg .ReadBits (32);if _dgfe !=nil {return _dgfe ;};_gdde .GrayMax =uint32 (_eggg &_g .MaxUint32 );return nil ;};func (_fbbf *Header )writeReferredToSegments (_ggdb _aaa .BinaryWriter )(_bbe int ,_cgba error ){const _fcfd ="\u0077\u0072\u0069te\u0052\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";var (_fefg uint16 ;_cbcge uint32 ;);_dbae :=_fbbf .referenceSize ();_bbac :=1;_caa :=make ([]byte ,_dbae );for _ ,_fdcda :=range _fbbf .RTSNumbers {switch _dbae {case 4:_cbcge =uint32 (_fdcda );_gd .BigEndian .PutUint32 (_caa ,_cbcge );_bbac ,_cgba =_ggdb .Write (_caa );if _cgba !=nil {return 0,_df .Wrap (_cgba ,_fcfd ,"u\u0069\u006e\u0074\u0033\u0032\u0020\u0073\u0069\u007a\u0065");};case 2:_fefg =uint16 (_fdcda );_gd .BigEndian .PutUint16 (_caa ,_fefg );_bbac ,_cgba =_ggdb .Write (_caa );if _cgba !=nil {return 0,_df .Wrap (_cgba ,_fcfd ,"\u0075\u0069\u006e\u0074\u0031\u0036");};default:if _cgba =_ggdb .WriteByte (byte (_fdcda ));_cgba !=nil {return 0,_df .Wrap (_cgba ,_fcfd ,"\u0075\u0069\u006et\u0038");};};_bbe +=_bbac ;};return _bbe ,nil ;};func (_edae *TableSegment )HtHigh ()int32 {return _edae ._gagfe };func (_bbd *RegionSegment )Size ()int {return 17};func (_beba *TextRegion )GetRegionBitmap ()(*_gg .Bitmap ,error ){if _beba .RegionBitmap !=nil {return _beba .RegionBitmap ,nil ;};if !_beba .IsHuffmanEncoded {if _efac :=_beba .setCodingStatistics ();_efac !=nil {return nil ,_efac ;};};if _fbca :=_beba .createRegionBitmap ();_fbca !=nil {return nil ,_fbca ;};if _dgaa :=_beba .decodeSymbolInstances ();_dgaa !=nil {return nil ,_dgaa ;};return _beba .RegionBitmap ,nil ;};const BorderSize =6;func (_fda *GenericRegion )overrideAtTemplate0b (_fdd ,_acad ,_ebbd ,_afc ,_agf ,_dfb int )int {if _fda .GBAtOverride [0]{_fdd &=0xFFFD;if _fda .GBAtY [0]==0&&_fda .GBAtX [0]>=-int8 (_agf ){_fdd |=(_afc >>uint (int8 (_dfb )-_fda .GBAtX [0]&0x1))<<1;}else {_fdd |=int (_fda .getPixel (_acad +int (_fda .GBAtX [0]),_ebbd +int (_fda .GBAtY [0])))<<1;};};if _fda .GBAtOverride [1]{_fdd &=0xDFFF;if _fda .GBAtY [1]==0&&_fda .GBAtX [1]>=-int8 (_agf ){_fdd |=(_afc >>uint (int8 (_dfb )-_fda .GBAtX [1]&0x1))<<13;}else {_fdd |=int (_fda .getPixel (_acad +int (_fda .GBAtX [1]),_ebbd +int (_fda .GBAtY [1])))<<13;};};if _fda .GBAtOverride [2]{_fdd &=0xFDFF;if _fda .GBAtY [2]==0&&_fda .GBAtX [2]>=-int8 (_agf ){_fdd |=(_afc >>uint (int8 (_dfb )-_fda .GBAtX [2]&0x1))<<9;}else {_fdd |=int (_fda .getPixel (_acad +int (_fda .GBAtX [2]),_ebbd +int (_fda .GBAtY [2])))<<9;};};if _fda .GBAtOverride [3]{_fdd &=0xBFFF;if _fda .GBAtY [3]==0&&_fda .GBAtX [3]>=-int8 (_agf ){_fdd |=(_afc >>uint (int8 (_dfb )-_fda .GBAtX [3]&0x1))<<14;}else {_fdd |=int (_fda .getPixel (_acad +int (_fda .GBAtX [3]),_ebbd +int (_fda .GBAtY [3])))<<14;};};if _fda .GBAtOverride [4]{_fdd &=0xEFFF;if _fda .GBAtY [4]==0&&_fda .GBAtX [4]>=-int8 (_agf ){_fdd |=(_afc >>uint (int8 (_dfb )-_fda .GBAtX [4]&0x1))<<12;}else {_fdd |=int (_fda .getPixel (_acad +int (_fda .GBAtX [4]),_ebbd +int (_fda .GBAtY [4])))<<12;};};if _fda .GBAtOverride [5]{_fdd &=0xFFDF;if _fda .GBAtY [5]==0&&_fda .GBAtX [5]>=-int8 (_agf ){_fdd |=(_afc >>uint (int8 (_dfb )-_fda .GBAtX [5]&0x1))<<5;}else {_fdd |=int (_fda .getPixel (_acad +int (_fda .GBAtX [5]),_ebbd +int (_fda .GBAtY [5])))<<5;};};if _fda .GBAtOverride [6]{_fdd &=0xFFFB;if _fda .GBAtY [6]==0&&_fda .GBAtX [6]>=-int8 (_agf ){_fdd |=(_afc >>uint (int8 (_dfb )-_fda .GBAtX [6]&0x1))<<2;}else {_fdd |=int (_fda .getPixel (_acad +int (_fda .GBAtX [6]),_ebbd +int (_fda .GBAtY [6])))<<2;};};if _fda .GBAtOverride [7]{_fdd &=0xFFF7;if _fda .GBAtY [7]==0&&_fda .GBAtX [7]>=-int8 (_agf ){_fdd |=(_afc >>uint (int8 (_dfb )-_fda .GBAtX [7]&0x1))<<3;}else {_fdd |=int (_fda .getPixel (_acad +int (_fda .GBAtX [7]),_ebbd +int (_fda .GBAtY [7])))<<3;};};if _fda .GBAtOverride [8]{_fdd &=0xF7FF;if _fda .GBAtY [8]==0&&_fda .GBAtX [8]>=-int8 (_agf ){_fdd |=(_afc >>uint (int8 (_dfb )-_fda .GBAtX [8]&0x1))<<11;}else {_fdd |=int (_fda .getPixel (_acad +int (_fda .GBAtX [8]),_ebbd +int (_fda .GBAtY [8])))<<11;};};if _fda .GBAtOverride [9]{_fdd &=0xFFEF;if _fda .GBAtY [9]==0&&_fda .GBAtX [9]>=-int8 (_agf ){_fdd |=(_afc >>uint (int8 (_dfb )-_fda .GBAtX [9]&0x1))<<4;}else {_fdd |=int (_fda .getPixel (_acad +int (_fda .GBAtX [9]),_ebbd +int (_fda .GBAtY [9])))<<4;};};if _fda .GBAtOverride [10]{_fdd &=0x7FFF;if _fda .GBAtY [10]==0&&_fda .GBAtX [10]>=-int8 (_agf ){_fdd |=(_afc >>uint (int8 (_dfb )-_fda .GBAtX [10]&0x1))<<15;}else {_fdd |=int (_fda .getPixel (_acad +int (_fda .GBAtX [10]),_ebbd +int (_fda .GBAtY [10])))<<15;};};if _fda .GBAtOverride [11]{_fdd &=0xFDFF;if _fda .GBAtY [11]==0&&_fda .GBAtX [11]>=-int8 (_agf ){_fdd |=(_afc >>uint (int8 (_dfb )-_fda .GBAtX [11]&0x1))<<10;}else {_fdd |=int (_fda .getPixel (_acad +int (_fda .GBAtX [11]),_ebbd +int (_fda .GBAtY [11])))<<10;};};return _fdd ;};func (_ccf *SymbolDictionary )readRefinementAtPixels (_dfgd int )error {_ccf .SdrATX =make ([]int8 ,_dfgd );_ccf .SdrATY =make ([]int8 ,_dfgd );var (_ddbc byte ;_fbaa error ;);for _adfe :=0;_adfe < _dfgd ;_adfe ++{_ddbc ,_fbaa =_ccf ._gbfd .ReadByte ();if _fbaa !=nil {return _fbaa ;};_ccf .SdrATX [_adfe ]=int8 (_ddbc );_ddbc ,_fbaa =_ccf ._gbfd .ReadByte ();if _fbaa !=nil {return _fbaa ;};_ccf .SdrATY [_adfe ]=int8 (_ddbc );};return nil ;};func (_ebg *SymbolDictionary )checkInput ()error {if _ebg .SdHuffDecodeHeightSelection ==2{_fa .Log .Debug ("\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0048\u0065\u0069g\u0068\u0020\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061l\u0075\u0065\u0020\u006e\u006f\u0074 \u0070\u0065r\u006d\u0069t\u0074e\u0064",_ebg .SdHuffDecodeHeightSelection );};if _ebg .SdHuffDecodeWidthSelection ==2{_fa .Log .Debug ("\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0057\u0069\u0064t\u0068\u0020\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061l\u0075\u0065\u0020\u006e\u006f\u0074 \u0070\u0065r\u006d\u0069t\u0074e\u0064",_ebg .SdHuffDecodeWidthSelection );};if _ebg .IsHuffmanEncoded {if _ebg .SdTemplate !=0{_fa .Log .Debug ("\u0053\u0044T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e \u0030\u0029",_ebg .SdTemplate );};if !_ebg .UseRefinementAggregation {if !_ebg .UseRefinementAggregation {if _ebg ._fbaba {_fa .Log .Debug ("\u0049\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074ex\u0074\u0052\u0065\u0074\u0061\u0069n\u0065\u0064\u0020\u003d\u0020\u0074\u0072\u0075\u0065\u0020\u0028\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0066\u0061\u006cs\u0065\u0029");_ebg ._fbaba =false ;};if _ebg ._fgefa {_fa .Log .Debug ("\u0069s\u0043\u006fd\u0069\u006e\u0067\u0043o\u006e\u0074\u0065x\u0074\u0055\u0073\u0065\u0064\u0020\u003d\u0020\u0074ru\u0065\u0020\u0028s\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020f\u0061\u006cs\u0065\u0029");_ebg ._fgefa =false ;};};};}else {if _ebg .SdHuffBMSizeSelection !=0{_fa .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066B\u004d\u0053\u0069\u007a\u0065\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");_ebg .SdHuffBMSizeSelection =0;};if _ebg .SdHuffDecodeWidthSelection !=0{_fa .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068\u0053\u0065\u006c\u0065\u0063\u0074\u0069o\u006e\u0020\u0073\u0068\u006fu\u006c\u0064 \u0062\u0065\u0020\u0030");_ebg .SdHuffDecodeWidthSelection =0;};if _ebg .SdHuffDecodeHeightSelection !=0{_fa .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0048e\u0069\u0067\u0068\u0074\u0053\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");_ebg .SdHuffDecodeHeightSelection =0;};};if !_ebg .UseRefinementAggregation {if _ebg .SdrTemplate !=0{_fa .Log .Debug ("\u0053\u0044\u0052\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u003d\u0020\u0025\u0064\u0020\u0028s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_ebg .SdrTemplate );_ebg .SdrTemplate =0;};};if !_ebg .IsHuffmanEncoded ||!_ebg .UseRefinementAggregation {if _ebg .SdHuffAggInstanceSelection {_fa .Log .Debug ("\u0053d\u0048\u0075f\u0066\u0041\u0067g\u0049\u006e\u0073\u0074\u0061\u006e\u0063e\u0053\u0065\u006c\u0065\u0063\u0074i\u006f\u006e\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_ebg .SdHuffAggInstanceSelection );};};return nil ;};type EncodeInitializer interface{InitEncode ();};func (_eecf *HalftoneRegion )computeX (_gaa ,_abdf int )int {return _eecf .shiftAndFill (int (_eecf .HGridX )+_gaa *int (_eecf .HRegionY )+_abdf *int (_eecf .HRegionX ));};