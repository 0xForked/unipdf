//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package segments ;import (_f "encoding/binary";_gg "errors";_ge "fmt";_c "github.com/unidoc/unipdf/v3/common";_da "github.com/unidoc/unipdf/v3/internal/bitwise";_af "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_dd "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";_ag "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/arithmetic";_e "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/huffman";_aag "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/mmr";_ae "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/arithmetic";_dg "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_a "image";_bf "io";_d "math";_aa "strings";_g "time";);func (_debe *TextRegion )decodeCurrentT ()(int64 ,error ){if _debe .SbStrips !=1{if _debe .IsHuffmanEncoded {_bgea ,_bccf :=_debe ._cfcd .ReadBits (byte (_debe .LogSBStrips ));return int64 (_bgea ),_bccf ;};_bfgc ,_cacgf :=_debe ._egddd .DecodeInt (_debe ._aaae );if _cacgf !=nil {return 0,_cacgf ;};return int64 (_bfgc ),nil ;};return 0,nil ;};func (_abde *GenericRefinementRegion )String ()string {_dage :=&_aa .Builder {};_dage .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_dage .WriteString (_abde .RegionInfo .String ()+"\u000a");_dage .WriteString (_ge .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0052\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_abde .IsTPGROn ));_dage .WriteString (_ge .Sprintf ("\u0009-\u0020T\u0065\u006d\u0070\u006c\u0061t\u0065\u0049D\u003a\u0020\u0025\u0076\u000a",_abde .TemplateID ));_dage .WriteString (_ge .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_abde .GrAtX ));_dage .WriteString (_ge .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_abde .GrAtY ));_dage .WriteString (_ge .Sprintf ("\u0009-\u0020R\u0065\u0066\u0065\u0072\u0065n\u0063\u0065D\u0058\u0020\u0025\u0076\u000a",_abde .ReferenceDX ));_dage .WriteString (_ge .Sprintf ("\u0009\u002d\u0020\u0052ef\u0065\u0072\u0065\u006e\u0063\u0044\u0065\u0059\u003a\u0020\u0025\u0076\u000a",_abde .ReferenceDY ));return _dage .String ();};func (_bbef *SymbolDictionary )encodeNumSyms (_gggb _da .BinaryWriter )(_dedf int ,_bfbf error ){const _afdb ="\u0065\u006e\u0063\u006f\u0064\u0065\u004e\u0075\u006d\u0053\u0079\u006d\u0073";_cbeg :=make ([]byte ,4);_f .BigEndian .PutUint32 (_cbeg ,_bbef .NumberOfExportedSymbols );if _dedf ,_bfbf =_gggb .Write (_cbeg );_bfbf !=nil {return _dedf ,_dg .Wrap (_bfbf ,_afdb ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};_f .BigEndian .PutUint32 (_cbeg ,_bbef .NumberOfNewSymbols );_gfcb ,_bfbf :=_gggb .Write (_cbeg );if _bfbf !=nil {return _dedf ,_dg .Wrap (_bfbf ,_afdb ,"n\u0065\u0077\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};return _dedf +_gfcb ,nil ;};func (_cgac *PageInformationSegment )CombinationOperatorOverrideAllowed ()bool {return _cgac ._bebf };func (_bgfbd *SymbolDictionary )setRefinementAtPixels ()error {if !_bgfbd .UseRefinementAggregation ||_bgfbd .SdrTemplate !=0{return nil ;};if _cegec :=_bgfbd .readRefinementAtPixels (2);_cegec !=nil {return _cegec ;};return nil ;};func (_bagaf *SymbolDictionary )decodeHeightClassDeltaHeight ()(int64 ,error ){if _bagaf .IsHuffmanEncoded {return _bagaf .decodeHeightClassDeltaHeightWithHuffman ();};_ebgg ,_dfga :=_bagaf ._bbbd .DecodeInt (_bagaf ._egda );if _dfga !=nil {return 0,_dfga ;};return int64 (_ebgg ),nil ;};func (_fddg *GenericRefinementRegion )getPixel (_abg *_dd .Bitmap ,_fae ,_bef int )int {if _fae < 0||_fae >=_abg .Width {return 0;};if _bef < 0||_bef >=_abg .Height {return 0;};if _abg .GetPixel (_fae ,_bef ){return 1;};return 0;};func (_aece *TextRegion )decodeStripT ()(_aabb int64 ,_gece error ){if _aece .IsHuffmanEncoded {if _aece .SbHuffDT ==3{if _aece ._ecfe ==nil {var _adfa int ;if _aece .SbHuffFS ==3{_adfa ++;};if _aece .SbHuffDS ==3{_adfa ++;};_aece ._ecfe ,_gece =_aece .getUserTable (_adfa );if _gece !=nil {return 0,_gece ;};};_aabb ,_gece =_aece ._ecfe .Decode (_aece ._cfcd );if _gece !=nil {return 0,_gece ;};}else {var _aebdc _e .Tabler ;_aebdc ,_gece =_e .GetStandardTable (11+int (_aece .SbHuffDT ));if _gece !=nil {return 0,_gece ;};_aabb ,_gece =_aebdc .Decode (_aece ._cfcd );if _gece !=nil {return 0,_gece ;};};}else {var _ceff int32 ;_ceff ,_gece =_aece ._egddd .DecodeInt (_aece ._afgf );if _gece !=nil {return 0,_gece ;};_aabb =int64 (_ceff );};_aabb *=int64 (-_aece .SbStrips );return _aabb ,nil ;};func (_ffgg *SymbolDictionary )String ()string {_fbgc :=&_aa .Builder {};_fbgc .WriteString ("\n\u005b\u0053\u0059\u004dBO\u004c-\u0044\u0049\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u000a");_fbgc .WriteString (_ge .Sprintf ("\u0009-\u0020S\u0064\u0072\u0054\u0065\u006dp\u006c\u0061t\u0065\u0020\u0025\u0076\u000a",_ffgg .SdrTemplate ));_fbgc .WriteString (_ge .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0025\u0076\u000a",_ffgg .SdTemplate ));_fbgc .WriteString (_ge .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006eg\u0043\u006f\u006e\u0074\u0065\u0078\u0074R\u0065\u0074\u0061\u0069\u006e\u0065\u0064\u0020\u0025\u0076\u000a",_ffgg ._abda ));_fbgc .WriteString (_ge .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074\u0065\u0078\u0074\u0055\u0073\u0065\u0064 \u0025\u0076\u000a",_ffgg ._beee ));_fbgc .WriteString (_ge .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_ffgg .SdHuffAggInstanceSelection ));_fbgc .WriteString (_ge .Sprintf ("\u0009\u002d\u0020\u0053d\u0048\u0075\u0066\u0066\u0042\u004d\u0053\u0069\u007a\u0065S\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020%\u0076\u000a",_ffgg .SdHuffBMSizeSelection ));_fbgc .WriteString (_ge .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_ffgg .SdHuffDecodeWidthSelection ));_fbgc .WriteString (_ge .Sprintf ("\u0009\u002d\u0020Sd\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064e\u0048e\u0069g\u0068t\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_ffgg .SdHuffDecodeHeightSelection ));_fbgc .WriteString (_ge .Sprintf ("\u0009\u002d\u0020U\u0073\u0065\u0052\u0065f\u0069\u006e\u0065\u006d\u0065\u006e\u0074A\u0067\u0067\u0072\u0065\u0067\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_ffgg .UseRefinementAggregation ));_fbgc .WriteString (_ge .Sprintf ("\u0009\u002d\u0020is\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045\u006e\u0063\u006f\u0064\u0065\u0064\u0020\u0025\u0076\u000a",_ffgg .IsHuffmanEncoded ));_fbgc .WriteString (_ge .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_ffgg .SdATX ));_fbgc .WriteString (_ge .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_ffgg .SdATY ));_fbgc .WriteString (_ge .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_ffgg .SdrATX ));_fbgc .WriteString (_ge .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_ffgg .SdrATY ));_fbgc .WriteString (_ge .Sprintf ("\u0009\u002d\u0020\u004e\u0075\u006d\u0062\u0065\u0072\u004ff\u0045\u0078\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_ffgg .NumberOfExportedSymbols ));_fbgc .WriteString (_ge .Sprintf ("\u0009-\u0020\u004e\u0075\u006db\u0065\u0072\u004f\u0066\u004ee\u0077S\u0079m\u0062\u006f\u006c\u0073\u0020\u0025\u0076\n",_ffgg .NumberOfNewSymbols ));_fbgc .WriteString (_ge .Sprintf ("\u0009\u002d\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u004ff\u0049\u006d\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_ffgg ._affg ));_fbgc .WriteString (_ge .Sprintf ("\u0009\u002d \u006e\u0075\u006d\u0062\u0065\u0072\u004f\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0064\u0053\u0079\u006d\u0062\u006f\u006c\u0073 %\u0076\u000a",_ffgg ._eaee ));return _fbgc .String ();};var _ SegmentEncoder =&GenericRegion {};func (_afac *SymbolDictionary )Init (h *Header ,r _da .StreamReader )error {_afac .Header =h ;_afac ._bbdfb =r ;return _afac .parseHeader ();};func (_gfdc *TextRegion )decodeRdw ()(int64 ,error ){const _febce ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064w";if _gfdc .IsHuffmanEncoded {if _gfdc .SbHuffRDWidth ==3{if _gfdc ._bacae ==nil {var (_gdef int ;_abgcc error ;);if _gfdc .SbHuffFS ==3{_gdef ++;};if _gfdc .SbHuffDS ==3{_gdef ++;};if _gfdc .SbHuffDT ==3{_gdef ++;};_gfdc ._bacae ,_abgcc =_gfdc .getUserTable (_gdef );if _abgcc !=nil {return 0,_dg .Wrap (_abgcc ,_febce ,"");};};return _gfdc ._bacae .Decode (_gfdc ._cfcd );};_aefe ,_agbd :=_e .GetStandardTable (14+int (_gfdc .SbHuffRDWidth ));if _agbd !=nil {return 0,_dg .Wrap (_agbd ,_febce ,"");};return _aefe .Decode (_gfdc ._cfcd );};_gbga ,_aggc :=_gfdc ._egddd .DecodeInt (_gfdc ._egeeg );if _aggc !=nil {return 0,_dg .Wrap (_aggc ,_febce ,"");};return int64 (_gbga ),nil ;};func (_gbbfa *TableSegment )HtRS ()int32 {return _gbbfa ._bdeg };func (_gfga *GenericRegion )overrideAtTemplate1 (_cga ,_baf ,_gebg ,_fdg ,_eacg int )int {_cga &=0x1FF7;if _gfga .GBAtY [0]==0&&_gfga .GBAtX [0]>=-int8 (_eacg ){_cga |=(_fdg >>uint (7-(int8 (_eacg )+_gfga .GBAtX [0]))&0x1)<<3;}else {_cga |=int (_gfga .getPixel (_baf +int (_gfga .GBAtX [0]),_gebg +int (_gfga .GBAtY [0])))<<3;};return _cga ;};const BorderSize =6;func (_adfd *Header )writeSegmentPageAssociation (_cdacf _da .BinaryWriter )(_gbda int ,_cbb error ){const _dgaag ="w\u0072\u0069\u0074\u0065\u0053\u0065g\u006d\u0065\u006e\u0074\u0050\u0061\u0067\u0065\u0041s\u0073\u006f\u0063i\u0061t\u0069\u006f\u006e";if _adfd .pageSize ()!=4{if _cbb =_cdacf .WriteByte (byte (_adfd .PageAssociation ));_cbb !=nil {return 0,_dg .Wrap (_cbb ,_dgaag ,"\u0070\u0061\u0067\u0065\u0053\u0069\u007a\u0065\u0020\u0021\u003d\u0020\u0034");};return 1,nil ;};_deeg :=make ([]byte ,4);_f .BigEndian .PutUint32 (_deeg ,uint32 (_adfd .PageAssociation ));if _gbda ,_cbb =_cdacf .Write (_deeg );_cbb !=nil {return 0,_dg .Wrap (_cbb ,_dgaag ,"\u0034 \u0062y\u0074\u0065\u0020\u0070\u0061g\u0065\u0020n\u0075\u006d\u0062\u0065\u0072");};return _gbda ,nil ;};func (_dgca *PageInformationSegment )readWidthAndHeight ()error {_gbffb ,_acgg :=_dgca ._fbcb .ReadBits (32);if _acgg !=nil {return _acgg ;};_dgca .PageBMWidth =int (_gbffb &_d .MaxInt32 );_gbffb ,_acgg =_dgca ._fbcb .ReadBits (32);if _acgg !=nil {return _acgg ;};_dgca .PageBMHeight =int (_gbffb &_d .MaxInt32 );return nil ;};func (_beaa *GenericRegion )overrideAtTemplate0a (_bdbf ,_ffbc ,_bdbd ,_ggcb ,_babc ,_fgcd int )int {if _beaa .GBAtOverride [0]{_bdbf &=0xFFEF;if _beaa .GBAtY [0]==0&&_beaa .GBAtX [0]>=-int8 (_babc ){_bdbf |=(_ggcb >>uint (int8 (_fgcd )-_beaa .GBAtX [0]&0x1))<<4;}else {_bdbf |=int (_beaa .getPixel (_ffbc +int (_beaa .GBAtX [0]),_bdbd +int (_beaa .GBAtY [0])))<<4;};};if _beaa .GBAtOverride [1]{_bdbf &=0xFBFF;if _beaa .GBAtY [1]==0&&_beaa .GBAtX [1]>=-int8 (_babc ){_bdbf |=(_ggcb >>uint (int8 (_fgcd )-_beaa .GBAtX [1]&0x1))<<10;}else {_bdbf |=int (_beaa .getPixel (_ffbc +int (_beaa .GBAtX [1]),_bdbd +int (_beaa .GBAtY [1])))<<10;};};if _beaa .GBAtOverride [2]{_bdbf &=0xF7FF;if _beaa .GBAtY [2]==0&&_beaa .GBAtX [2]>=-int8 (_babc ){_bdbf |=(_ggcb >>uint (int8 (_fgcd )-_beaa .GBAtX [2]&0x1))<<11;}else {_bdbf |=int (_beaa .getPixel (_ffbc +int (_beaa .GBAtX [2]),_bdbd +int (_beaa .GBAtY [2])))<<11;};};if _beaa .GBAtOverride [3]{_bdbf &=0x7FFF;if _beaa .GBAtY [3]==0&&_beaa .GBAtX [3]>=-int8 (_babc ){_bdbf |=(_ggcb >>uint (int8 (_fgcd )-_beaa .GBAtX [3]&0x1))<<15;}else {_bdbf |=int (_beaa .getPixel (_ffbc +int (_beaa .GBAtX [3]),_bdbd +int (_beaa .GBAtY [3])))<<15;};};return _bdbf ;};func (_afab *HalftoneRegion )parseHeader ()error {if _fff :=_afab .RegionSegment .parseHeader ();_fff !=nil {return _fff ;};_bdd ,_gfeg :=_afab ._geg .ReadBit ();if _gfeg !=nil {return _gfeg ;};_afab .HDefaultPixel =int8 (_bdd );_bccd ,_gfeg :=_afab ._geg .ReadBits (3);if _gfeg !=nil {return _gfeg ;};_afab .CombinationOperator =_dd .CombinationOperator (_bccd &0xf);_bdd ,_gfeg =_afab ._geg .ReadBit ();if _gfeg !=nil {return _gfeg ;};if _bdd ==1{_afab .HSkipEnabled =true ;};_bccd ,_gfeg =_afab ._geg .ReadBits (2);if _gfeg !=nil {return _gfeg ;};_afab .HTemplate =byte (_bccd &0xf);_bdd ,_gfeg =_afab ._geg .ReadBit ();if _gfeg !=nil {return _gfeg ;};if _bdd ==1{_afab .IsMMREncoded =true ;};_bccd ,_gfeg =_afab ._geg .ReadBits (32);if _gfeg !=nil {return _gfeg ;};_afab .HGridWidth =uint32 (_bccd &_d .MaxUint32 );_bccd ,_gfeg =_afab ._geg .ReadBits (32);if _gfeg !=nil {return _gfeg ;};_afab .HGridHeight =uint32 (_bccd &_d .MaxUint32 );_bccd ,_gfeg =_afab ._geg .ReadBits (32);if _gfeg !=nil {return _gfeg ;};_afab .HGridX =int32 (_bccd &_d .MaxInt32 );_bccd ,_gfeg =_afab ._geg .ReadBits (32);if _gfeg !=nil {return _gfeg ;};_afab .HGridY =int32 (_bccd &_d .MaxInt32 );_bccd ,_gfeg =_afab ._geg .ReadBits (16);if _gfeg !=nil {return _gfeg ;};_afab .HRegionX =uint16 (_bccd &_d .MaxUint16 );_bccd ,_gfeg =_afab ._geg .ReadBits (16);if _gfeg !=nil {return _gfeg ;};_afab .HRegionY =uint16 (_bccd &_d .MaxUint16 );if _gfeg =_afab .computeSegmentDataStructure ();_gfeg !=nil {return _gfeg ;};return _afab .checkInput ();};func (_bffc *Header )parse (_bded Documenter ,_cdad _da .StreamReader ,_cdef int64 ,_edgd OrganizationType )(_gdfb error ){const _deba ="\u0070\u0061\u0072s\u0065";_c .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u005b\u0050A\u0052\u0053\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _gdfb !=nil {_c .Log .Trace ("\u005b\u0053\u0045GM\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045R\u005d[\u0050A\u0052S\u0045\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_gdfb );}else {_c .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052]\u005bP\u0041\u0052\u0053\u0045\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");};}();_ ,_gdfb =_cdad .Seek (_cdef ,_bf .SeekStart );if _gdfb !=nil {return _dg .Wrap (_gdfb ,_deba ,"\u0073\u0065\u0065\u006b\u0020\u0073\u0074\u0061\u0072\u0074");};if _gdfb =_bffc .readSegmentNumber (_cdad );_gdfb !=nil {return _dg .Wrap (_gdfb ,_deba ,"");};if _gdfb =_bffc .readHeaderFlags ();_gdfb !=nil {return _dg .Wrap (_gdfb ,_deba ,"");};var _ffdd uint64 ;_ffdd ,_gdfb =_bffc .readNumberOfReferredToSegments (_cdad );if _gdfb !=nil {return _dg .Wrap (_gdfb ,_deba ,"");};_bffc .RTSNumbers ,_gdfb =_bffc .readReferredToSegmentNumbers (_cdad ,int (_ffdd ));if _gdfb !=nil {return _dg .Wrap (_gdfb ,_deba ,"");};_gdfb =_bffc .readSegmentPageAssociation (_bded ,_cdad ,_ffdd ,_bffc .RTSNumbers ...);if _gdfb !=nil {return _dg .Wrap (_gdfb ,_deba ,"");};if _bffc .Type !=TEndOfFile {if _gdfb =_bffc .readSegmentDataLength (_cdad );_gdfb !=nil {return _dg .Wrap (_gdfb ,_deba ,"");};};_bffc .readDataStartOffset (_cdad ,_edgd );_bffc .readHeaderLength (_cdad ,_cdef );_c .Log .Trace ("\u0025\u0073",_bffc );return nil ;};func (_bbgf *PageInformationSegment )readIsLossless ()error {_gfc ,_caa :=_bbgf ._fbcb .ReadBit ();if _caa !=nil {return _caa ;};if _gfc ==1{_bbgf .IsLossless =true ;};return nil ;};func (_bbcg *GenericRegion )decodeTemplate2 (_fge ,_bda ,_gee int ,_gcf ,_cba int )(_ggca error ){const _dga ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0032";var (_ggea ,_cdac int ;_ecg ,_ege int ;_bbg byte ;_aege ,_bcc int ;);if _fge >=1{_bbg ,_ggca =_bbcg .Bitmap .GetByte (_cba );if _ggca !=nil {return _dg .Wrap (_ggca ,_dga ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0031");};_ecg =int (_bbg );};if _fge >=2{_bbg ,_ggca =_bbcg .Bitmap .GetByte (_cba -_bbcg .Bitmap .RowStride );if _ggca !=nil {return _dg .Wrap (_ggca ,_dga ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0032");};_ege =int (_bbg )<<4;};_ggea =(_ecg >>3&0x7c)|(_ege >>3&0x380);for _gbba :=0;_gbba < _gee ;_gbba =_aege {var (_dfae byte ;_dfaee int ;);_aege =_gbba +8;if _afd :=_bda -_gbba ;_afd > 8{_dfaee =8;}else {_dfaee =_afd ;};if _fge > 0{_ecg <<=8;if _aege < _bda {_bbg ,_ggca =_bbcg .Bitmap .GetByte (_cba +1);if _ggca !=nil {return _dg .Wrap (_ggca ,_dga ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0030");};_ecg |=int (_bbg );};};if _fge > 1{_ege <<=8;if _aege < _bda {_bbg ,_ggca =_bbcg .Bitmap .GetByte (_cba -_bbcg .Bitmap .RowStride +1);if _ggca !=nil {return _dg .Wrap (_ggca ,_dga ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0031");};_ege |=int (_bbg )<<4;};};for _ccc :=0;_ccc < _dfaee ;_ccc ++{_abdg :=uint (10-_ccc );if _bbcg ._ffb {_cdac =_bbcg .overrideAtTemplate2 (_ggea ,_gbba +_ccc ,_fge ,int (_dfae ),_ccc );_bbcg ._gb .SetIndex (int32 (_cdac ));}else {_bbcg ._gb .SetIndex (int32 (_ggea ));};_bcc ,_ggca =_bbcg ._bad .DecodeBit (_bbcg ._gb );if _ggca !=nil {return _dg .Wrap (_ggca ,_dga ,"");};_dfae |=byte (_bcc <<uint (7-_ccc ));_ggea =((_ggea &0x1bd)<<1)|_bcc |((_ecg >>_abdg )&0x4)|((_ege >>_abdg )&0x80);};if _dgd :=_bbcg .Bitmap .SetByte (_gcf ,_dfae );_dgd !=nil {return _dg .Wrap (_dgd ,_dga ,"");};_gcf ++;_cba ++;};return nil ;};func (_ded *Header )subInputReader ()(_da .StreamReader ,error ){return _da .NewSubstreamReader (_ded .Reader ,_ded .SegmentDataStartOffset ,_ded .SegmentDataLength );};func (_gfea *PageInformationSegment )String ()string {_gbff :=&_aa .Builder {};_gbff .WriteString ("\u000a\u005b\u0050\u0041G\u0045\u002d\u0049\u004e\u0046\u004f\u0052\u004d\u0041\u0054I\u004fN\u002d\u0053\u0045\u0047\u004d\u0045\u004eT\u005d\u000a");_gbff .WriteString (_ge .Sprintf ("\u0009\u002d \u0042\u004d\u0048e\u0069\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u000a",_gfea .PageBMHeight ));_gbff .WriteString (_ge .Sprintf ("\u0009-\u0020B\u004d\u0057\u0069\u0064\u0074\u0068\u003a\u0020\u0025\u0064\u000a",_gfea .PageBMWidth ));_gbff .WriteString (_ge .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0058\u003a\u0020\u0025\u0064\u000a",_gfea .ResolutionX ));_gbff .WriteString (_ge .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0059\u003a\u0020\u0025\u0064\u000a",_gfea .ResolutionY ));_gbff .WriteString (_ge .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0073\u000a",_gfea ._gebb ));_gbff .WriteString (_ge .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006eO\u0070\u0065\u0072\u0061\u0074\u006f\u0072O\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025v\u000a",_gfea ._bebf ));_gbff .WriteString (_ge .Sprintf ("\u0009-\u0020I\u0073\u004c\u006f\u0073\u0073l\u0065\u0073s\u003a\u0020\u0025\u0076\u000a",_gfea .IsLossless ));_gbff .WriteString (_ge .Sprintf ("\u0009\u002d\u0020R\u0065\u0071\u0075\u0069r\u0065\u0073\u0041\u0075\u0078\u0069\u006ci\u0061\u0072\u0079\u0042\u0075\u0066\u0066\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_gfea ._afeeb ));_gbff .WriteString (_ge .Sprintf ("\u0009\u002d\u0020M\u0069\u0067\u0068\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0052e\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0076\u000a",_gfea ._fcbgb ));_gbff .WriteString (_ge .Sprintf ("\u0009\u002d\u0020\u0049\u0073\u0053\u0074\u0072\u0069\u0070\u0065\u0064:\u0020\u0025\u0076\u000a",_gfea .IsStripe ));_gbff .WriteString (_ge .Sprintf ("\t\u002d\u0020\u004d\u0061xS\u0074r\u0069\u0070\u0065\u0053\u0069z\u0065\u003a\u0020\u0025\u0076\u000a",_gfea .MaxStripeSize ));return _gbff .String ();};func (_bb *EndOfStripe )LineNumber ()int {return _bb ._ff };func (_de *GenericRefinementRegion )getGrReference ()(*_dd .Bitmap ,error ){segments :=_de ._eg .RTSegments ;if len (segments )==0{return nil ,_gg .New ("\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0065\u0078is\u0074\u0073");};_dag ,_agb :=segments [0].GetSegmentData ();if _agb !=nil {return nil ,_agb ;};_geb ,_dfg :=_dag .(Regioner );if !_dfg {return nil ,_ge .Errorf ("\u0072\u0065\u0066\u0065\u0072r\u0065\u0064\u0020\u0074\u006f\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_dag );};return _geb .GetRegionBitmap ();};func (_dceg *PatternDictionary )readIsMMREncoded ()error {_gbdb ,_eafc :=_dceg ._gfcf .ReadBit ();if _eafc !=nil {return _eafc ;};if _gbdb !=0{_dceg .IsMMREncoded =true ;};return nil ;};func (_afaa *HalftoneRegion )computeY (_fgcg ,_fbg int )int {return _afaa .shiftAndFill (int (_afaa .HGridY )+_fgcg *int (_afaa .HRegionX )-_fbg *int (_afaa .HRegionY ));};func (_geff *SymbolDictionary )getSymbol (_agfc int )(*_dd .Bitmap ,error ){const _afcg ="\u0067e\u0074\u0053\u0079\u006d\u0062\u006fl";_acbg ,_bfed :=_geff ._fgfb .GetBitmap (_geff ._deea [_agfc ]);if _bfed !=nil {return nil ,_dg .Wrap (_bfed ,_afcg ,"\u0063\u0061n\u0027\u0074\u0020g\u0065\u0074\u0020\u0073\u0079\u006d\u0062\u006f\u006c");};return _acbg ,nil ;};func (_dfb *GenericRegion )parseHeader ()(_gbb error ){_c .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052I\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0050\u0061\u0072s\u0069\u006e\u0067\u0048\u0065\u0061\u0064e\u0072\u002e\u002e\u002e");defer func (){if _gbb !=nil {_c .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e]\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065r\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0077\u0069th\u0020\u0065\u0072\u0072\u006f\u0072\u002e\u0020\u0025\u0076",_gbb );}else {_c .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049C\u002d\u0052\u0045G\u0049\u004f\u004e]\u0020\u0050a\u0072\u0073\u0069\u006e\u0067\u0048e\u0061de\u0072\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0053\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079\u002e\u002e\u002e");};}();var (_abedg int ;_abgc uint64 ;);if _gbb =_dfb .RegionSegment .parseHeader ();_gbb !=nil {return _gbb ;};if _ ,_gbb =_dfb ._edac .ReadBits (3);_gbb !=nil {return _gbb ;};_abedg ,_gbb =_dfb ._edac .ReadBit ();if _gbb !=nil {return _gbb ;};if _abedg ==1{_dfb .UseExtTemplates =true ;};_abedg ,_gbb =_dfb ._edac .ReadBit ();if _gbb !=nil {return _gbb ;};if _abedg ==1{_dfb .IsTPGDon =true ;};_abgc ,_gbb =_dfb ._edac .ReadBits (2);if _gbb !=nil {return _gbb ;};_dfb .GBTemplate =byte (_abgc &0xf);_abedg ,_gbb =_dfb ._edac .ReadBit ();if _gbb !=nil {return _gbb ;};if _abedg ==1{_dfb .IsMMREncoded =true ;};if !_dfb .IsMMREncoded {_gcg :=1;if _dfb .GBTemplate ==0{_gcg =4;if _dfb .UseExtTemplates {_gcg =12;};};if _gbb =_dfb .readGBAtPixels (_gcg );_gbb !=nil {return _gbb ;};};if _gbb =_dfb .computeSegmentDataStructure ();_gbb !=nil {return _gbb ;};_c .Log .Trace ("\u0025\u0073",_dfb );return nil ;};func (_bcea *PatternDictionary )parseHeader ()error {_c .Log .Trace ("\u005b\u0050\u0041\u0054\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054I\u004f\u004e\u0041\u0052\u0059\u005d[\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d\u0020b\u0065\u0067\u0069\u006e");defer func (){_c .Log .Trace ("\u005b\u0050\u0041T\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u005b\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");}();_ ,_feae :=_bcea ._gfcf .ReadBits (5);if _feae !=nil {return _feae ;};if _feae =_bcea .readTemplate ();_feae !=nil {return _feae ;};if _feae =_bcea .readIsMMREncoded ();_feae !=nil {return _feae ;};if _feae =_bcea .readPatternWidthAndHeight ();_feae !=nil {return _feae ;};if _feae =_bcea .readGrayMax ();_feae !=nil {return _feae ;};if _feae =_bcea .computeSegmentDataStructure ();_feae !=nil {return _feae ;};return _bcea .checkInput ();};func (_fbe *HalftoneRegion )grayScaleDecoding (_dded int )([][]int ,error ){var (_gefb []int8 ;_gaaa []int8 ;);if !_fbe .IsMMREncoded {_gefb =make ([]int8 ,4);_gaaa =make ([]int8 ,4);if _fbe .HTemplate <=1{_gefb [0]=3;}else if _fbe .HTemplate >=2{_gefb [0]=2;};_gaaa [0]=-1;_gefb [1]=-3;_gaaa [1]=-1;_gefb [2]=2;_gaaa [2]=-2;_gefb [3]=-2;_gaaa [3]=-2;};_abfe :=make ([]*_dd .Bitmap ,_dded );_geda :=NewGenericRegion (_fbe ._geg );_geda .setParametersMMR (_fbe .IsMMREncoded ,_fbe .DataOffset ,_fbe .DataLength ,_fbe .HGridHeight ,_fbe .HGridWidth ,_fbe .HTemplate ,false ,_fbe .HSkipEnabled ,_gefb ,_gaaa );_gad :=_dded -1;var _dbag error ;_abfe [_gad ],_dbag =_geda .GetRegionBitmap ();if _dbag !=nil {return nil ,_dbag ;};for _gad > 0{_gad --;_geda .Bitmap =nil ;_abfe [_gad ],_dbag =_geda .GetRegionBitmap ();if _dbag !=nil {return nil ,_dbag ;};if _dbag =_fbe .combineGrayscalePlanes (_abfe ,_gad );_dbag !=nil {return nil ,_dbag ;};};return _fbe .computeGrayScalePlanes (_abfe ,_dded );};func NewHeader (d Documenter ,r _da .StreamReader ,offset int64 ,organizationType OrganizationType )(*Header ,error ){_fdfd :=&Header {Reader :r };if _dbbe :=_fdfd .parse (d ,r ,offset ,organizationType );_dbbe !=nil {return nil ,_dg .Wrap (_dbbe ,"\u004ee\u0077\u0048\u0065\u0061\u0064\u0065r","");};return _fdfd ,nil ;};func (_aec *RegionSegment )readCombinationOperator ()error {_gedb ,_efd :=_aec ._bdbe .ReadBits (3);if _efd !=nil {return _efd ;};_aec .CombinaionOperator =_dd .CombinationOperator (_gedb &0xF);return nil ;};func (_fcdc *PageInformationSegment )readCombinationOperator ()error {_afec ,_efbc :=_fcdc ._fbcb .ReadBits (2);if _efbc !=nil {return _efbc ;};_fcdc ._gebb =_dd .CombinationOperator (int (_afec ));return nil ;};func (_ggbb *GenericRegion )setParametersMMR (_cfbf bool ,_edcc ,_bbfa int64 ,_bead ,_cbfb uint32 ,_beac byte ,_abae ,_gcb bool ,_ceb ,_cbea []int8 ){_ggbb .DataOffset =_edcc ;_ggbb .DataLength =_bbfa ;_ggbb .RegionSegment =&RegionSegment {};_ggbb .RegionSegment .BitmapHeight =_bead ;_ggbb .RegionSegment .BitmapWidth =_cbfb ;_ggbb .GBTemplate =_beac ;_ggbb .IsMMREncoded =_cfbf ;_ggbb .IsTPGDon =_abae ;_ggbb .GBAtX =_ceb ;_ggbb .GBAtY =_cbea ;};func (_cfcf *GenericRegion )decodeTemplate0a (_caf ,_ebb ,_gda int ,_ccg ,_gff int )(_baa error ){const _adbe ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0061";var (_degd ,_befa int ;_bab ,_fef int ;_ecab byte ;_edbc int ;);if _caf >=1{_ecab ,_baa =_cfcf .Bitmap .GetByte (_gff );if _baa !=nil {return _dg .Wrap (_baa ,_adbe ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_bab =int (_ecab );};if _caf >=2{_ecab ,_baa =_cfcf .Bitmap .GetByte (_gff -_cfcf .Bitmap .RowStride );if _baa !=nil {return _dg .Wrap (_baa ,_adbe ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_fef =int (_ecab )<<6;};_degd =(_bab &0xf0)|(_fef &0x3800);for _gefa :=0;_gefa < _gda ;_gefa =_edbc {var (_cgf byte ;_fgad int ;);_edbc =_gefa +8;if _ccgb :=_ebb -_gefa ;_ccgb > 8{_fgad =8;}else {_fgad =_ccgb ;};if _caf > 0{_bab <<=8;if _edbc < _ebb {_ecab ,_baa =_cfcf .Bitmap .GetByte (_gff +1);if _baa !=nil {return _dg .Wrap (_baa ,_adbe ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_bab |=int (_ecab );};};if _caf > 1{_ebe :=_gff -_cfcf .Bitmap .RowStride +1;_fef <<=8;if _edbc < _ebb {_ecab ,_baa =_cfcf .Bitmap .GetByte (_ebe );if _baa !=nil {return _dg .Wrap (_baa ,_adbe ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_fef |=int (_ecab )<<6;}else {_fef |=0;};};for _gddd :=0;_gddd < _fgad ;_gddd ++{_aca :=uint (7-_gddd );if _cfcf ._ffb {_befa =_cfcf .overrideAtTemplate0a (_degd ,_gefa +_gddd ,_caf ,int (_cgf ),_gddd ,int (_aca ));_cfcf ._gb .SetIndex (int32 (_befa ));}else {_cfcf ._gb .SetIndex (int32 (_degd ));};var _ead int ;_ead ,_baa =_cfcf ._bad .DecodeBit (_cfcf ._gb );if _baa !=nil {return _dg .Wrap (_baa ,_adbe ,"");};_cgf |=byte (_ead )<<uint (_aca );_degd =((_degd &0x7bf7)<<1)|_ead |((_bab >>_aca )&0x10)|((_fef >>_aca )&0x800);};if _beb :=_cfcf .Bitmap .SetByte (_ccg ,_cgf );_beb !=nil {return _dg .Wrap (_beb ,_adbe ,"");};_ccg ++;_gff ++;};return nil ;};func (_caab *TextRegion )decodeRdh ()(int64 ,error ){const _acgb ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064h";if _caab .IsHuffmanEncoded {if _caab .SbHuffRDHeight ==3{if _caab ._cgef ==nil {var (_cdec int ;_agga error ;);if _caab .SbHuffFS ==3{_cdec ++;};if _caab .SbHuffDS ==3{_cdec ++;};if _caab .SbHuffDT ==3{_cdec ++;};if _caab .SbHuffRDWidth ==3{_cdec ++;};_caab ._cgef ,_agga =_caab .getUserTable (_cdec );if _agga !=nil {return 0,_dg .Wrap (_agga ,_acgb ,"");};};return _caab ._cgef .Decode (_caab ._cfcd );};_efad ,_edfg :=_e .GetStandardTable (14+int (_caab .SbHuffRDHeight ));if _edfg !=nil {return 0,_dg .Wrap (_edfg ,_acgb ,"");};return _efad .Decode (_caab ._cfcd );};_bege ,_gadf :=_caab ._egddd .DecodeInt (_caab ._aaaa );if _gadf !=nil {return 0,_dg .Wrap (_gadf ,_acgb ,"");};return int64 (_bege ),nil ;};type template0 struct{};type TextRegion struct{_cfcd _da .StreamReader ;RegionInfo *RegionSegment ;SbrTemplate int8 ;SbdsOffset int8 ;DefaultPixel int8 ;CombinationOperator _dd .CombinationOperator ;IsTransposed int8 ;ReferenceCorner int16 ;LogSBStrips int16 ;UseRefinement bool ;IsHuffmanEncoded bool ;SbHuffRSize int8 ;SbHuffRDY int8 ;SbHuffRDX int8 ;SbHuffRDHeight int8 ;SbHuffRDWidth int8 ;SbHuffDT int8 ;SbHuffDS int8 ;SbHuffFS int8 ;SbrATX []int8 ;SbrATY []int8 ;NumberOfSymbolInstances uint32 ;_fgcc int64 ;SbStrips int8 ;NumberOfSymbols uint32 ;RegionBitmap *_dd .Bitmap ;Symbols []*_dd .Bitmap ;_egddd *_ag .Decoder ;_gacge *GenericRefinementRegion ;_afgf *_ag .DecoderStats ;_afedb *_ag .DecoderStats ;_bfbff *_ag .DecoderStats ;_aaae *_ag .DecoderStats ;_daga *_ag .DecoderStats ;_egeeg *_ag .DecoderStats ;_aaaa *_ag .DecoderStats ;_begb *_ag .DecoderStats ;_aad *_ag .DecoderStats ;_ccce *_ag .DecoderStats ;_cdga *_ag .DecoderStats ;_effc int8 ;_dfcd *_e .FixedSizeTable ;Header *Header ;_gbgc _e .Tabler ;_cfdga _e .Tabler ;_ecfe _e .Tabler ;_bacae _e .Tabler ;_cgef _e .Tabler ;_bgdf _e .Tabler ;_fegf _e .Tabler ;_dgbd _e .Tabler ;_aebdf ,_ecfgc map[int ]int ;_eabf []int ;_dfcb *_dd .Points ;_fcec *_dd .Bitmaps ;_cbac *_af .IntSlice ;_cgca ,_gdgb int ;_bfeb *_dd .Boxes ;};func (_eaac *GenericRegion )decodeTemplate3 (_acaa ,_adc ,_bgd int ,_eccg ,_gfe int )(_fbda error ){const _dgb ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0033";var (_bbfb ,_egac int ;_cag int ;_bea byte ;_cfa ,_feb int ;);if _acaa >=1{_bea ,_fbda =_eaac .Bitmap .GetByte (_gfe );if _fbda !=nil {return _dg .Wrap (_fbda ,_dgb ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_cag =int (_bea );};_bbfb =(_cag >>1)&0x70;for _aebc :=0;_aebc < _bgd ;_aebc =_cfa {var (_bbga byte ;_edbg int ;);_cfa =_aebc +8;if _dgeg :=_adc -_aebc ;_dgeg > 8{_edbg =8;}else {_edbg =_dgeg ;};if _acaa >=1{_cag <<=8;if _cfa < _adc {_bea ,_fbda =_eaac .Bitmap .GetByte (_gfe +1);if _fbda !=nil {return _dg .Wrap (_fbda ,_dgb ,"\u0069\u006e\u006e\u0065\u0072\u0020\u002d\u0020\u006c\u0069\u006e\u0065 \u003e\u003d\u0020\u0031");};_cag |=int (_bea );};};for _cfce :=0;_cfce < _edbg ;_cfce ++{if _eaac ._ffb {_egac =_eaac .overrideAtTemplate3 (_bbfb ,_aebc +_cfce ,_acaa ,int (_bbga ),_cfce );_eaac ._gb .SetIndex (int32 (_egac ));}else {_eaac ._gb .SetIndex (int32 (_bbfb ));};_feb ,_fbda =_eaac ._bad .DecodeBit (_eaac ._gb );if _fbda !=nil {return _dg .Wrap (_fbda ,_dgb ,"");};_bbga |=byte (_feb )<<byte (7-_cfce );_bbfb =((_bbfb &0x1f7)<<1)|_feb |((_cag >>uint (8-_cfce ))&0x010);};if _efb :=_eaac .Bitmap .SetByte (_eccg ,_bbga );_efb !=nil {return _dg .Wrap (_efb ,_dgb ,"");};_eccg ++;_gfe ++;};return nil ;};type Type int ;func (_cbeae *SymbolDictionary )Encode (w _da .BinaryWriter )(_cdgf int ,_dfec error ){const _gedbc ="\u0053\u0079\u006dbo\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0045\u006e\u0063\u006f\u0064\u0065";if _cbeae ==nil {return 0,_dg .Error (_gedbc ,"\u0073\u0079m\u0062\u006f\u006c\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066in\u0065\u0064");};if _cdgf ,_dfec =_cbeae .encodeFlags (w );_dfec !=nil {return _cdgf ,_dg .Wrap (_dfec ,_gedbc ,"");};_ccae ,_dfec :=_cbeae .encodeATFlags (w );if _dfec !=nil {return _cdgf ,_dg .Wrap (_dfec ,_gedbc ,"");};_cdgf +=_ccae ;if _ccae ,_dfec =_cbeae .encodeRefinementATFlags (w );_dfec !=nil {return _cdgf ,_dg .Wrap (_dfec ,_gedbc ,"");};_cdgf +=_ccae ;if _ccae ,_dfec =_cbeae .encodeNumSyms (w );_dfec !=nil {return _cdgf ,_dg .Wrap (_dfec ,_gedbc ,"");};_cdgf +=_ccae ;if _ccae ,_dfec =_cbeae .encodeSymbols (w );_dfec !=nil {return _cdgf ,_dg .Wrap (_dfec ,_gedbc ,"");};_cdgf +=_ccae ;return _cdgf ,nil ;};func (_afed *HalftoneRegion )Init (hd *Header ,r _da .StreamReader )error {_afed ._geg =r ;_afed ._babf =hd ;_afed .RegionSegment =NewRegionSegment (r );return _afed .parseHeader ();};func (_gddb *HalftoneRegion )shiftAndFill (_bfd int )int {_bfd >>=8;if _bfd < 0{_gada :=int (_d .Log (float64 (_gdf (_bfd )))/_d .Log (2));_fegg :=31-_gada ;for _beaf :=1;_beaf < _fegg ;_beaf ++{_bfd |=1<<uint (31-_beaf );};};return _bfd ;};func (_abggf *Header )readSegmentNumber (_edfa _da .StreamReader )error {const _ffg ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";_ddbg :=make ([]byte ,4);_ ,_faaa :=_edfa .Read (_ddbg );if _faaa !=nil {return _dg .Wrap (_faaa ,_ffg ,"");};_abggf .SegmentNumber =_f .BigEndian .Uint32 (_ddbg );return nil ;};var _ _e .BasicTabler =&TableSegment {};func (_faad *Header )pageSize ()uint {if _faad .PageAssociation <=255{return 1;};return 4;};func (_aebcd *HalftoneRegion )GetPatterns ()([]*_dd .Bitmap ,error ){var (_fbfb []*_dd .Bitmap ;_adcb error ;);for _ ,_fgcf :=range _aebcd ._babf .RTSegments {var _eafe Segmenter ;_eafe ,_adcb =_fgcf .GetSegmentData ();if _adcb !=nil {_c .Log .Debug ("\u0047e\u0074\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061 \u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025v",_adcb );return nil ,_adcb ;};_cfdc ,_gfd :=_eafe .(*PatternDictionary );if !_gfd {_adcb =_ge .Errorf ("\u0072e\u006c\u0061t\u0065\u0064\u0020\u0073e\u0067\u006d\u0065n\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0070at\u0074\u0065\u0072n\u0020\u0064i\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u003a \u0025\u0054",_eafe );return nil ,_adcb ;};var _ggfgg []*_dd .Bitmap ;_ggfgg ,_adcb =_cfdc .GetDictionary ();if _adcb !=nil {_c .Log .Debug ("\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_adcb );return nil ,_adcb ;};_fbfb =append (_fbfb ,_ggfgg ...);};return _fbfb ,nil ;};func (_bggb *PageInformationSegment )readContainsRefinement ()error {_dcea ,_fabf :=_bggb ._fbcb .ReadBit ();if _fabf !=nil {return _fabf ;};if _dcea ==1{_bggb ._fcbgb =true ;};return nil ;};func (_ega *GenericRegion )decodeTemplate0b (_aageg ,_begd ,_ffc int ,_fcbb ,_fcdf int )(_ggg error ){const _gdcb ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0062";var (_cace ,_gecg int ;_fcg ,_caef int ;_gae byte ;_dbae int ;);if _aageg >=1{_gae ,_ggg =_ega .Bitmap .GetByte (_fcdf );if _ggg !=nil {return _dg .Wrap (_ggg ,_gdcb ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_fcg =int (_gae );};if _aageg >=2{_gae ,_ggg =_ega .Bitmap .GetByte (_fcdf -_ega .Bitmap .RowStride );if _ggg !=nil {return _dg .Wrap (_ggg ,_gdcb ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_caef =int (_gae )<<6;};_cace =(_fcg &0xf0)|(_caef &0x3800);for _ebba :=0;_ebba < _ffc ;_ebba =_dbae {var (_bbad byte ;_ddc int ;);_dbae =_ebba +8;if _bbb :=_begd -_ebba ;_bbb > 8{_ddc =8;}else {_ddc =_bbb ;};if _aageg > 0{_fcg <<=8;if _dbae < _begd {_gae ,_ggg =_ega .Bitmap .GetByte (_fcdf +1);if _ggg !=nil {return _dg .Wrap (_ggg ,_gdcb ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_fcg |=int (_gae );};};if _aageg > 1{_caef <<=8;if _dbae < _begd {_gae ,_ggg =_ega .Bitmap .GetByte (_fcdf -_ega .Bitmap .RowStride +1);if _ggg !=nil {return _dg .Wrap (_ggg ,_gdcb ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_caef |=int (_gae )<<6;};};for _dde :=0;_dde < _ddc ;_dde ++{_cce :=uint (7-_dde );if _ega ._ffb {_gecg =_ega .overrideAtTemplate0b (_cace ,_ebba +_dde ,_aageg ,int (_bbad ),_dde ,int (_cce ));_ega ._gb .SetIndex (int32 (_gecg ));}else {_ega ._gb .SetIndex (int32 (_cace ));};var _fdb int ;_fdb ,_ggg =_ega ._bad .DecodeBit (_ega ._gb );if _ggg !=nil {return _dg .Wrap (_ggg ,_gdcb ,"");};_bbad |=byte (_fdb <<uint (_cce ));_cace =((_cace &0x7bf7)<<1)|_fdb |((_fcg >>_cce )&0x10)|((_caef >>_cce )&0x800);};if _eega :=_ega .Bitmap .SetByte (_fcbb ,_bbad );_eega !=nil {return _dg .Wrap (_eega ,_gdcb ,"");};_fcbb ++;_fcdf ++;};return nil ;};func (_eede *SymbolDictionary )getUserTable (_gbbe int )(_e .Tabler ,error ){var _cggg int ;for _ ,_bdfg :=range _eede .Header .RTSegments {if _bdfg .Type ==53{if _cggg ==_gbbe {_cfba ,_caed :=_bdfg .GetSegmentData ();if _caed !=nil {return nil ,_caed ;};_gcfga :=_cfba .(_e .BasicTabler );return _e .NewEncodedTable (_gcfga );};_cggg ++;};};return nil ,nil ;};var _ templater =&template1 {};func (_ef *GenericRefinementRegion )GetRegionBitmap ()(*_dd .Bitmap ,error ){var _bg error ;_c .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");defer func (){if _bg !=nil {_c .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0047\u0065\u0074R\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006dap\u0020\u0066a\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_bg );}else {_c .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");};}();if _ef .RegionBitmap !=nil {return _ef .RegionBitmap ,nil ;};_ab :=0;if _ef .ReferenceBitmap ==nil {_ef .ReferenceBitmap ,_bg =_ef .getGrReference ();if _bg !=nil {return nil ,_bg ;};};if _ef ._fb ==nil {_ef ._fb ,_bg =_ag .New (_ef ._bff );if _bg !=nil {return nil ,_bg ;};};if _ef ._bbc ==nil {_ef ._bbc =_ag .NewStats (8192,1);};_ef .RegionBitmap =_dd .New (int (_ef .RegionInfo .BitmapWidth ),int (_ef .RegionInfo .BitmapHeight ));if _ef .TemplateID ==0{if _bg =_ef .updateOverride ();_bg !=nil {return nil ,_bg ;};};_gef :=(_ef .RegionBitmap .Width +7)&-8;var _bbf int ;if _ef .IsTPGROn {_bbf =int (-_ef .ReferenceDY )*_ef .ReferenceBitmap .RowStride ;};_ga :=_bbf +1;for _daf :=0;_daf < _ef .RegionBitmap .Height ;_daf ++{if _ef .IsTPGROn {_fg ,_abe :=_ef .decodeSLTP ();if _abe !=nil {return nil ,_abe ;};_ab ^=_fg ;};if _ab ==0{_bg =_ef .decodeOptimized (_daf ,_ef .RegionBitmap .Width ,_ef .RegionBitmap .RowStride ,_ef .ReferenceBitmap .RowStride ,_gef ,_bbf ,_ga );if _bg !=nil {return nil ,_bg ;};}else {_bg =_ef .decodeTypicalPredictedLine (_daf ,_ef .RegionBitmap .Width ,_ef .RegionBitmap .RowStride ,_ef .ReferenceBitmap .RowStride ,_gef ,_bbf );if _bg !=nil {return nil ,_bg ;};};};return _ef .RegionBitmap ,nil ;};func (_adfb *TextRegion )decodeRI ()(int64 ,error ){if !_adfb .UseRefinement {return 0,nil ;};if _adfb .IsHuffmanEncoded {_fgbg ,_cded :=_adfb ._cfcd .ReadBit ();return int64 (_fgbg ),_cded ;};_fefc ,_eggcc :=_adfb ._egddd .DecodeInt (_adfb ._daga );return int64 (_fefc ),_eggcc ;};func (_eebfe *SymbolDictionary )setAtPixels ()error {if _eebfe .IsHuffmanEncoded {return nil ;};_gcddb :=1;if _eebfe .SdTemplate ==0{_gcddb =4;};if _fbde :=_eebfe .readAtPixels (_gcddb );_fbde !=nil {return _fbde ;};return nil ;};func (_fceb Type )String ()string {switch _fceb {case TSymbolDictionary :return "\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079";case TIntermediateTextRegion :return "\u0049n\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020T\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateTextRegion :return "I\u006d\u006d\u0065\u0064ia\u0074e\u0020\u0054\u0065\u0078\u0074 \u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessTextRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020L\u006f\u0073\u0073\u006c\u0065\u0073\u0073 \u0054\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TPatternDictionary :return "\u0050a\u0074t\u0065\u0072\u006e\u0020\u0044i\u0063\u0074i\u006f\u006e\u0061\u0072\u0079";case TIntermediateHalftoneRegion :return "\u0049\u006e\u0074\u0065r\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0048\u0061l\u0066t\u006f\u006e\u0065\u0020\u0052\u0065\u0067i\u006f\u006e";case TImmediateHalftoneRegion :return "\u0049m\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u0048\u0061l\u0066t\u006fn\u0065\u0020\u0052\u0065\u0067\u0069\u006fn";case TImmediateLosslessHalftoneRegion :return "\u0049\u006d\u006ded\u0069\u0061\u0074\u0065\u0020\u004c\u006f\u0073\u0073l\u0065s\u0073 \u0048a\u006c\u0066\u0074\u006f\u006e\u0065\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TIntermediateGenericRegion :return "I\u006e\u0074\u0065\u0072\u006d\u0065d\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020R\u0065g\u0069\u006f\u006e";case TImmediateGenericRegion :return "\u0049m\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006ee\u0072\u0069\u0063\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessGenericRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u004c\u006f\u0073\u0073\u006c\u0065\u0073\u0073\u0020\u0047e\u006e\u0065\u0072\u0069\u0063\u0020\u0052e\u0067\u0069\u006f\u006e";case TIntermediateGenericRefinementRegion :return "\u0049\u006e\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0020\u0052\u0065\u0066i\u006e\u0065\u006d\u0065\u006et\u0020\u0052e\u0067\u0069\u006f\u006e";case TImmediateGenericRefinementRegion :return "I\u006d\u006d\u0065\u0064\u0069\u0061t\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020\u0052\u0065\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020\u0052\u0065\u0067\u0069o\u006e";case TImmediateLosslessGenericRefinementRegion :return "\u0049m\u006d\u0065d\u0069\u0061\u0074\u0065 \u004c\u006f\u0073s\u006c\u0065\u0073\u0073\u0020\u0047\u0065\u006e\u0065ri\u0063\u0020\u0052e\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020R\u0065\u0067i\u006f\u006e";case TPageInformation :return "\u0050\u0061g\u0065\u0020\u0049n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e";case TEndOfPage :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0050\u0061\u0067\u0065";case TEndOfStrip :return "\u0045\u006e\u0064 \u004f\u0066\u0020\u0053\u0074\u0072\u0069\u0070";case TEndOfFile :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0046\u0069\u006c\u0065";case TProfiles :return "\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0073";case TTables :return "\u0054\u0061\u0062\u006c\u0065\u0073";case TExtension :return "\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn";case TBitmap :return "\u0042\u0069\u0074\u006d\u0061\u0070";};return "I\u006ev\u0061\u006c\u0069\u0064\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0020Ki\u006e\u0064";};func (_daab *TextRegion )readRegionFlags ()error {var (_dfefc int ;_fefg uint64 ;_adbbg error ;);_dfefc ,_adbbg =_daab ._cfcd .ReadBit ();if _adbbg !=nil {return _adbbg ;};_daab .SbrTemplate =int8 (_dfefc );_fefg ,_adbbg =_daab ._cfcd .ReadBits (5);if _adbbg !=nil {return _adbbg ;};_daab .SbdsOffset =int8 (_fefg );if _daab .SbdsOffset > 0x0f{_daab .SbdsOffset -=0x20;};_dfefc ,_adbbg =_daab ._cfcd .ReadBit ();if _adbbg !=nil {return _adbbg ;};_daab .DefaultPixel =int8 (_dfefc );_fefg ,_adbbg =_daab ._cfcd .ReadBits (2);if _adbbg !=nil {return _adbbg ;};_daab .CombinationOperator =_dd .CombinationOperator (int (_fefg )&0x3);_dfefc ,_adbbg =_daab ._cfcd .ReadBit ();if _adbbg !=nil {return _adbbg ;};_daab .IsTransposed =int8 (_dfefc );_fefg ,_adbbg =_daab ._cfcd .ReadBits (2);if _adbbg !=nil {return _adbbg ;};_daab .ReferenceCorner =int16 (_fefg )&0x3;_fefg ,_adbbg =_daab ._cfcd .ReadBits (2);if _adbbg !=nil {return _adbbg ;};_daab .LogSBStrips =int16 (_fefg )&0x3;_daab .SbStrips =1<<uint (_daab .LogSBStrips );_dfefc ,_adbbg =_daab ._cfcd .ReadBit ();if _adbbg !=nil {return _adbbg ;};if _dfefc ==1{_daab .UseRefinement =true ;};_dfefc ,_adbbg =_daab ._cfcd .ReadBit ();if _adbbg !=nil {return _adbbg ;};if _dfefc ==1{_daab .IsHuffmanEncoded =true ;};return nil ;};type OrganizationType uint8 ;func (_abgf *GenericRegion )GetRegionBitmap ()(_ffaf *_dd .Bitmap ,_cfdg error ){if _abgf .Bitmap !=nil {return _abgf .Bitmap ,nil ;};if _abgf .IsMMREncoded {if _abgf ._deb ==nil {_abgf ._deb ,_cfdg =_aag .New (_abgf ._edac ,int (_abgf .RegionSegment .BitmapWidth ),int (_abgf .RegionSegment .BitmapHeight ),_abgf .DataOffset ,_abgf .DataLength );if _cfdg !=nil {return nil ,_cfdg ;};};_abgf .Bitmap ,_cfdg =_abgf ._deb .UncompressMMR ();return _abgf .Bitmap ,_cfdg ;};if _cfdg =_abgf .updateOverrideFlags ();_cfdg !=nil {return nil ,_cfdg ;};var _fcb int ;if _abgf ._bad ==nil {_abgf ._bad ,_cfdg =_ag .New (_abgf ._edac );if _cfdg !=nil {return nil ,_cfdg ;};};if _abgf ._gb ==nil {_abgf ._gb =_ag .NewStats (65536,1);};_abgf .Bitmap =_dd .New (int (_abgf .RegionSegment .BitmapWidth ),int (_abgf .RegionSegment .BitmapHeight ));_ffda :=int (uint32 (_abgf .Bitmap .Width +7)&(^uint32 (7)));for _ecd :=0;_ecd < _abgf .Bitmap .Height ;_ecd ++{if _abgf .IsTPGDon {var _beg int ;_beg ,_cfdg =_abgf .decodeSLTP ();if _cfdg !=nil {return nil ,_cfdg ;};_fcb ^=_beg ;};if _fcb ==1{if _ecd > 0{if _cfdg =_abgf .copyLineAbove (_ecd );_cfdg !=nil {return nil ,_cfdg ;};};}else {if _cfdg =_abgf .decodeLine (_ecd ,_abgf .Bitmap .Width ,_ffda );_cfdg !=nil {return nil ,_cfdg ;};};};return _abgf .Bitmap ,nil ;};func (_adca *PageInformationSegment )readResolution ()error {_gadd ,_eafa :=_adca ._fbcb .ReadBits (32);if _eafa !=nil {return _eafa ;};_adca .ResolutionX =int (_gadd &_d .MaxInt32 );_gadd ,_eafa =_adca ._fbcb .ReadBits (32);if _eafa !=nil {return _eafa ;};_adca .ResolutionY =int (_gadd &_d .MaxInt32 );return nil ;};func (_badb *SymbolDictionary )decodeHeightClassBitmap (_ceca *_dd .Bitmap ,_def int64 ,_bccda int ,_bcca []int )error {for _feaa :=_def ;_feaa < int64 (_badb ._eaee );_feaa ++{var _fcfc int ;for _egad :=_def ;_egad <=_feaa -1;_egad ++{_fcfc +=_bcca [_egad ];};_cgg :=_a .Rect (_fcfc ,0,_fcfc +_bcca [_feaa ],_bccda );_acag ,_bbeb :=_dd .Extract (_cgg ,_ceca );if _bbeb !=nil {return _bbeb ;};_badb ._cagg [_feaa ]=_acag ;_badb ._acge =append (_badb ._acge ,_acag );};return nil ;};type Regioner interface{GetRegionBitmap ()(*_dd .Bitmap ,error );GetRegionInfo ()*RegionSegment ;};func (_aff *HalftoneRegion )computeGrayScalePlanes (_fdfe []*_dd .Bitmap ,_ddfg int )([][]int ,error ){_bfcg :=make ([][]int ,_aff .HGridHeight );for _fccd :=0;_fccd < len (_bfcg );_fccd ++{_bfcg [_fccd ]=make ([]int ,_aff .HGridWidth );};for _fab :=0;_fab < int (_aff .HGridHeight );_fab ++{for _adcd :=0;_adcd < int (_aff .HGridWidth );_adcd +=8{var _ggaf int ;if _babfb :=int (_aff .HGridWidth )-_adcd ;_babfb > 8{_ggaf =8;}else {_ggaf =_babfb ;};_dab :=_fdfe [0].GetByteIndex (_adcd ,_fab );for _egdd :=0;_egdd < _ggaf ;_egdd ++{_fcbg :=_egdd +_adcd ;_bfcg [_fab ][_fcbg ]=0;for _aagf :=0;_aagf < _ddfg ;_aagf ++{_dca ,_egcc :=_fdfe [_aagf ].GetByte (_dab );if _egcc !=nil {return nil ,_egcc ;};_efc :=_dca >>uint (7-_fcbg &7);_aafa :=_efc &1;_adf :=1<<uint (_aagf );_dcfg :=int (_aafa )*_adf ;_bfcg [_fab ][_fcbg ]+=_dcfg ;};};};};return _bfcg ,nil ;};func (_gdea *TableSegment )Init (h *Header ,r _da .StreamReader )error {_gdea ._faf =r ;return _gdea .parseHeader ();};func (_gbcc *TextRegion )createRegionBitmap ()error {_gbcc .RegionBitmap =_dd .New (int (_gbcc .RegionInfo .BitmapWidth ),int (_gbcc .RegionInfo .BitmapHeight ));if _gbcc .DefaultPixel !=0{_gbcc .RegionBitmap .SetDefaultPixel ();};return nil ;};type templater interface{form (_dafc ,_cda ,_fdca ,_cfc ,_ddgg int16 )int16 ;setIndex (_aaa *_ag .DecoderStats );};const (TSymbolDictionary Type =0;TIntermediateTextRegion Type =4;TImmediateTextRegion Type =6;TImmediateLosslessTextRegion Type =7;TPatternDictionary Type =16;TIntermediateHalftoneRegion Type =20;TImmediateHalftoneRegion Type =22;TImmediateLosslessHalftoneRegion Type =23;TIntermediateGenericRegion Type =36;TImmediateGenericRegion Type =38;TImmediateLosslessGenericRegion Type =39;TIntermediateGenericRefinementRegion Type =40;TImmediateGenericRefinementRegion Type =42;TImmediateLosslessGenericRefinementRegion Type =43;TPageInformation Type =48;TEndOfPage Type =49;TEndOfStrip Type =50;TEndOfFile Type =51;TProfiles Type =52;TTables Type =53;TExtension Type =62;TBitmap Type =70;);func (_bagag *TextRegion )symbolIDCodeLengths ()error {var (_bgfd []*_e .Code ;_bcagd uint64 ;_fcdcd _e .Tabler ;_eged error ;);for _fffa :=0;_fffa < 35;_fffa ++{_bcagd ,_eged =_bagag ._cfcd .ReadBits (4);if _eged !=nil {return _eged ;};_efecd :=int (_bcagd &0xf);if _efecd > 0{_bgfd =append (_bgfd ,_e .NewCode (int32 (_efecd ),0,int32 (_fffa ),false ));};};_fcdcd ,_eged =_e .NewFixedSizeTable (_bgfd );if _eged !=nil {return _eged ;};var (_cecf int64 ;_fcbcg uint32 ;_fecf []*_e .Code ;_adab int64 ;);for _fcbcg < _bagag .NumberOfSymbols {_adab ,_eged =_fcdcd .Decode (_bagag ._cfcd );if _eged !=nil {return _eged ;};if _adab < 32{if _adab > 0{_fecf =append (_fecf ,_e .NewCode (int32 (_adab ),0,int32 (_fcbcg ),false ));};_cecf =_adab ;_fcbcg ++;}else {var _bffg ,_aaaf int64 ;switch _adab {case 32:_bcagd ,_eged =_bagag ._cfcd .ReadBits (2);if _eged !=nil {return _eged ;};_bffg =3+int64 (_bcagd );if _fcbcg > 0{_aaaf =_cecf ;};case 33:_bcagd ,_eged =_bagag ._cfcd .ReadBits (3);if _eged !=nil {return _eged ;};_bffg =3+int64 (_bcagd );case 34:_bcagd ,_eged =_bagag ._cfcd .ReadBits (7);if _eged !=nil {return _eged ;};_bffg =11+int64 (_bcagd );};for _gfed :=0;_gfed < int (_bffg );_gfed ++{if _aaaf > 0{_fecf =append (_fecf ,_e .NewCode (int32 (_aaaf ),0,int32 (_fcbcg ),false ));};_fcbcg ++;};};};_bagag ._cfcd .Align ();_bagag ._dfcd ,_eged =_e .NewFixedSizeTable (_fecf );return _eged ;};func (_eade *PageInformationSegment )readIsStriped ()error {_dbfc ,_fddgb :=_eade ._fbcb .ReadBit ();if _fddgb !=nil {return _fddgb ;};if _dbfc ==1{_eade .IsStripe =true ;};return nil ;};func NewRegionSegment (r _da .StreamReader )*RegionSegment {return &RegionSegment {_bdbe :r }};func (_ffcg *SymbolDictionary )decodeAggregate (_afge ,_cbcf uint32 )error {var (_cfdab int64 ;_cfec error ;);if _ffcg .IsHuffmanEncoded {_cfdab ,_cfec =_ffcg .huffDecodeRefAggNInst ();if _cfec !=nil {return _cfec ;};}else {_fgea ,_fded :=_ffcg ._bbbd .DecodeInt (_ffcg ._gagc );if _fded !=nil {return _fded ;};_cfdab =int64 (_fgea );};if _cfdab > 1{return _ffcg .decodeThroughTextRegion (_afge ,_cbcf ,uint32 (_cfdab ));}else if _cfdab ==1{return _ffcg .decodeRefinedSymbol (_afge ,_cbcf );};return nil ;};func (_ffa *GenericRefinementRegion )decodeOptimized (_ed ,_gaa ,_ggf ,_gd ,_ggb ,_aae ,_fd int )error {var (_abd error ;_ee int ;_bc int ;);_ec :=_ed -int (_ffa .ReferenceDY );if _gdc :=int (-_ffa .ReferenceDX );_gdc > 0{_ee =_gdc ;};_eaa :=_ffa .ReferenceBitmap .GetByteIndex (_ee ,_ec );if _ffa .ReferenceDX > 0{_bc =int (_ffa .ReferenceDX );};_fdc :=_ffa .RegionBitmap .GetByteIndex (_bc ,_ed );switch _ffa .TemplateID {case 0:_abd =_ffa .decodeTemplate (_ed ,_gaa ,_ggf ,_gd ,_ggb ,_aae ,_fd ,_fdc ,_ec ,_eaa ,_ffa ._dc );case 1:_abd =_ffa .decodeTemplate (_ed ,_gaa ,_ggf ,_gd ,_ggb ,_aae ,_fd ,_fdc ,_ec ,_eaa ,_ffa ._ea );};return _abd ;};type Documenter interface{GetPage (int )(Pager ,error );GetGlobalSegment (int )(*Header ,error );};func (_edacd *GenericRegion )getPixel (_bdaa ,_cced int )int8 {if _bdaa < 0||_bdaa >=_edacd .Bitmap .Width {return 0;};if _cced < 0||_cced >=_edacd .Bitmap .Height {return 0;};if _edacd .Bitmap .GetPixel (_bdaa ,_cced ){return 1;};return 0;};func _gdf (_abfd int )int {if _abfd ==0{return 0;};_abfd |=_abfd >>1;_abfd |=_abfd >>2;_abfd |=_abfd >>4;_abfd |=_abfd >>8;_abfd |=_abfd >>16;return (_abfd +1)>>1;};func (_gdbf *SymbolDictionary )InitEncode (symbols *_dd .Bitmaps ,symbolList []int ,symbolMap map[int ]int ,unborderSymbols bool )error {const _efde ="S\u0079\u006d\u0062\u006f\u006c\u0044i\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002eI\u006e\u0069\u0074E\u006ec\u006f\u0064\u0065";_gdbf .SdATX =[]int8 {3,-3,2,-2};_gdbf .SdATY =[]int8 {-1,-1,-2,-2};_gdbf ._fgfb =symbols ;_gdbf ._deea =make ([]int ,len (symbolList ));copy (_gdbf ._deea ,symbolList );if len (_gdbf ._deea )!=_gdbf ._fgfb .Size (){return _dg .Error (_efde ,"s\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0061\u006e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u004ci\u0073\u0074\u0020\u006f\u0066\u0020\u0064\u0069\u0066\u0066er\u0065\u006e\u0074 \u0073i\u007a\u0065");};_gdbf .NumberOfNewSymbols =uint32 (symbols .Size ());_gdbf .NumberOfExportedSymbols =uint32 (symbols .Size ());_gdbf ._cbda =symbolMap ;_gdbf ._gega =unborderSymbols ;return nil ;};func (_ace *GenericRegion )Encode (w _da .BinaryWriter )(_dbb int ,_befd error ){const _gdg ="G\u0065n\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069o\u006e\u002e\u0045\u006eco\u0064\u0065";if _ace .Bitmap ==nil {return 0,_dg .Error (_gdg ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};_abcf ,_befd :=_ace .RegionSegment .Encode (w );if _befd !=nil {return 0,_dg .Wrap (_befd ,_gdg ,"\u0052\u0065\u0067\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074");};_dbb +=_abcf ;if _befd =w .SkipBits (4);_befd !=nil {return _dbb ,_dg .Wrap (_befd ,_gdg ,"\u0073k\u0069p\u0020\u0072\u0065\u0073\u0065r\u0076\u0065d\u0020\u0062\u0069\u0074\u0073");};var _age int ;if _ace .IsTPGDon {_age =1;};if _befd =w .WriteBit (_age );_befd !=nil {return _dbb ,_dg .Wrap (_befd ,_gdg ,"\u0074\u0070\u0067\u0064\u006f\u006e");};_age =0;if _befd =w .WriteBit (int (_ace .GBTemplate >>1)&0x01);_befd !=nil {return _dbb ,_dg .Wrap (_befd ,_gdg ,"f\u0069r\u0073\u0074\u0020\u0067\u0062\u0074\u0065\u006dp\u006c\u0061\u0074\u0065 b\u0069\u0074");};if _befd =w .WriteBit (int (_ace .GBTemplate )&0x01);_befd !=nil {return _dbb ,_dg .Wrap (_befd ,_gdg ,"s\u0065\u0063\u006f\u006ed \u0067b\u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u0062\u0069\u0074");};if _ace .UseMMR {_age =1;};if _befd =w .WriteBit (_age );_befd !=nil {return _dbb ,_dg .Wrap (_befd ,_gdg ,"u\u0073\u0065\u0020\u004d\u004d\u0052\u0020\u0062\u0069\u0074");};_dbb ++;if _abcf ,_befd =_ace .writeGBAtPixels (w );_befd !=nil {return _dbb ,_dg .Wrap (_befd ,_gdg ,"");};_dbb +=_abcf ;_fc :=_ae .New ();if _befd =_fc .EncodeBitmap (_ace .Bitmap ,_ace .IsTPGDon );_befd !=nil {return _dbb ,_dg .Wrap (_befd ,_gdg ,"");};_fc .Final ();var _ddb int64 ;if _ddb ,_befd =_fc .WriteTo (w );_befd !=nil {return _dbb ,_dg .Wrap (_befd ,_gdg ,"");};_dbb +=int (_ddb );return _dbb ,nil ;};func (_egf *GenericRegion )overrideAtTemplate3 (_cgcb ,_abeb ,_cdab ,_fdcg ,_cdg int )int {_cgcb &=0x3EF;if _egf .GBAtY [0]==0&&_egf .GBAtX [0]>=-int8 (_cdg ){_cgcb |=(_fdcg >>uint (7-(int8 (_cdg )+_egf .GBAtX [0]))&0x1)<<4;}else {_cgcb |=int (_egf .getPixel (_abeb +int (_egf .GBAtX [0]),_cdab +int (_egf .GBAtY [0])))<<4;};return _cgcb ;};func (_degf *template1 )setIndex (_aage *_ag .DecoderStats ){_aage .SetIndex (0x080)};func (_bbe *PatternDictionary )readTemplate ()error {_afdg ,_fdgf :=_bbe ._gfcf .ReadBits (2);if _fdgf !=nil {return _fdgf ;};_bbe .HDTemplate =byte (_afdg );return nil ;};func (_ggc *GenericRefinementRegion )Init (header *Header ,r _da .StreamReader )error {_ggc ._eg =header ;_ggc ._bff =r ;_ggc .RegionInfo =NewRegionSegment (r );return _ggc .parseHeader ();};func (_edda *PatternDictionary )setGbAtPixels (){if _edda .HDTemplate ==0{_edda .GBAtX =make ([]int8 ,4);_edda .GBAtY =make ([]int8 ,4);_edda .GBAtX [0]=-int8 (_edda .HdpWidth );_edda .GBAtY [0]=0;_edda .GBAtX [1]=-3;_edda .GBAtY [1]=-1;_edda .GBAtX [2]=2;_edda .GBAtY [2]=-2;_edda .GBAtX [3]=-2;_edda .GBAtY [3]=-2;}else {_edda .GBAtX =[]int8 {-int8 (_edda .HdpWidth )};_edda .GBAtY =[]int8 {0};};};func (_dgff *Header )String ()string {_fecg :=&_aa .Builder {};_fecg .WriteString ("\u000a[\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045A\u0044\u0045\u0052\u005d\u000a");_fecg .WriteString (_ge .Sprintf ("\t\u002d\u0020\u0053\u0065gm\u0065n\u0074\u004e\u0075\u006d\u0062e\u0072\u003a\u0020\u0025\u0076\u000a",_dgff .SegmentNumber ));_fecg .WriteString (_ge .Sprintf ("\u0009\u002d\u0020T\u0079\u0070\u0065\u003a\u0020\u0025\u0076\u000a",_dgff .Type ));_fecg .WriteString (_ge .Sprintf ("\u0009-\u0020R\u0065\u0074\u0061\u0069\u006eF\u006c\u0061g\u003a\u0020\u0025\u0076\u000a",_dgff .RetainFlag ));_fecg .WriteString (_ge .Sprintf ("\u0009\u002d\u0020Pa\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_dgff .PageAssociation ));_fecg .WriteString (_ge .Sprintf ("\u0009\u002d\u0020\u0050\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074i\u006fn\u0046\u0069\u0065\u006c\u0064\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_dgff .PageAssociationFieldSize ));_fecg .WriteString ("\u0009-\u0020R\u0054\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u0053\u003a\u000a");for _ ,_aaed :=range _dgff .RTSNumbers {_fecg .WriteString (_ge .Sprintf ("\u0009\t\u002d\u0020\u0025\u0064\u000a",_aaed ));};_fecg .WriteString (_ge .Sprintf ("\t\u002d \u0048\u0065\u0061\u0064\u0065\u0072\u004c\u0065n\u0067\u0074\u0068\u003a %\u0076\u000a",_dgff .HeaderLength ));_fecg .WriteString (_ge .Sprintf ("\u0009-\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061L\u0065n\u0067\u0074\u0068\u003a\u0020\u0025\u0076\n",_dgff .SegmentDataLength ));_fecg .WriteString (_ge .Sprintf ("\u0009\u002d\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074D\u0061\u0074\u0061\u0053\u0074\u0061\u0072t\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0076\u000a",_dgff .SegmentDataStartOffset ));return _fecg .String ();};func (_acg *GenericRefinementRegion )decodeSLTP ()(int ,error ){_acg .Template .setIndex (_acg ._bbc );return _acg ._fb .DecodeBit (_acg ._bbc );};func (_bag *template1 )form (_cde ,_ebf ,_gca ,_gdb ,_cca int16 )int16 {return ((_cde &0x02)<<8)|(_ebf <<6)|((_gca &0x03)<<4)|(_gdb <<1)|_cca ;};func (_gbd *Header )readSegmentDataLength (_agdb _da .StreamReader )(_cebe error ){_gbd .SegmentDataLength ,_cebe =_agdb .ReadBits (32);if _cebe !=nil {return _cebe ;};_gbd .SegmentDataLength &=_d .MaxInt32 ;return nil ;};func (_cgda *GenericRegion )overrideAtTemplate2 (_cdb ,_efa ,_abf ,_cgea ,_adbf int )int {_cdb &=0x3FB;if _cgda .GBAtY [0]==0&&_cgda .GBAtX [0]>=-int8 (_adbf ){_cdb |=(_cgea >>uint (7-(int8 (_adbf )+_cgda .GBAtX [0]))&0x1)<<2;}else {_cdb |=int (_cgda .getPixel (_efa +int (_cgda .GBAtX [0]),_abf +int (_cgda .GBAtY [0])))<<2;};return _cdb ;};func (_cfd *GenericRefinementRegion )readAtPixels ()error {_cfd .GrAtX =make ([]int8 ,2);_cfd .GrAtY =make ([]int8 ,2);_dce ,_cbd :=_cfd ._bff .ReadByte ();if _cbd !=nil {return _cbd ;};_cfd .GrAtX [0]=int8 (_dce );_dce ,_cbd =_cfd ._bff .ReadByte ();if _cbd !=nil {return _cbd ;};_cfd .GrAtY [0]=int8 (_dce );_dce ,_cbd =_cfd ._bff .ReadByte ();if _cbd !=nil {return _cbd ;};_cfd .GrAtX [1]=int8 (_dce );_dce ,_cbd =_cfd ._bff .ReadByte ();if _cbd !=nil {return _cbd ;};_cfd .GrAtY [1]=int8 (_dce );return nil ;};func (_fad *PageInformationSegment )readCombinationOperatorOverrideAllowed ()error {_cgdc ,_dfd :=_fad ._fbcb .ReadBit ();if _dfd !=nil {return _dfd ;};if _cgdc ==1{_fad ._bebf =true ;};return nil ;};func (_dagg *TextRegion )initSymbols ()error {const _ceed ="i\u006e\u0069\u0074\u0053\u0079\u006d\u0062\u006f\u006c\u0073";for _ ,_cedd :=range _dagg .Header .RTSegments {if _cedd ==nil {return _dg .Error (_ceed ,"\u006e\u0069\u006c\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020pr\u006f\u0076\u0069\u0064\u0065\u0064 \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0074\u0065\u0078\u0074\u0020\u0072\u0065g\u0069\u006f\u006e\u0020\u0053\u0079\u006d\u0062o\u006c\u0073");};if _cedd .Type ==0{_ffgb ,_edgf :=_cedd .GetSegmentData ();if _edgf !=nil {return _dg .Wrap (_edgf ,_ceed ,"");};_cfdag ,_bdgaf :=_ffgb .(*SymbolDictionary );if !_bdgaf {return _dg .Error (_ceed ,"\u0072e\u0066\u0065r\u0072\u0065\u0064 \u0054\u006f\u0020\u0053\u0065\u0067\u006de\u006e\u0074\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_cfdag ._aecf =_dagg ._begb ;_gbag ,_edgf :=_cfdag .GetDictionary ();if _edgf !=nil {return _dg .Wrap (_edgf ,_ceed ,"");};_dagg .Symbols =append (_dagg .Symbols ,_gbag ...);};};_dagg .NumberOfSymbols =uint32 (len (_dagg .Symbols ));return nil ;};func (_dfeg *TextRegion )decodeIds ()(int64 ,error ){const _bgda ="\u0064e\u0063\u006f\u0064\u0065\u0049\u0064s";if _dfeg .IsHuffmanEncoded {if _dfeg .SbHuffDS ==3{if _dfeg ._cfdga ==nil {_bdcg :=0;if _dfeg .SbHuffFS ==3{_bdcg ++;};var _aaec error ;_dfeg ._cfdga ,_aaec =_dfeg .getUserTable (_bdcg );if _aaec !=nil {return 0,_dg .Wrap (_aaec ,_bgda ,"");};};return _dfeg ._cfdga .Decode (_dfeg ._cfcd );};_afbdce ,_gebf :=_e .GetStandardTable (8+int (_dfeg .SbHuffDS ));if _gebf !=nil {return 0,_dg .Wrap (_gebf ,_bgda ,"");};return _afbdce .Decode (_dfeg ._cfcd );};_aeab ,_fafe :=_dfeg ._egddd .DecodeInt (_dfeg ._bfbff );if _fafe !=nil {return 0,_dg .Wrap (_fafe ,_bgda ,"\u0063\u0078\u0049\u0041\u0044\u0053");};return int64 (_aeab ),nil ;};func (_efag *PageInformationSegment )Encode (w _da .BinaryWriter )(_bfe int ,_cdfg error ){const _gcgf ="\u0050\u0061g\u0065\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u002e\u0045\u006eco\u0064\u0065";_ebbae :=make ([]byte ,4);_f .BigEndian .PutUint32 (_ebbae ,uint32 (_efag .PageBMWidth ));_bfe ,_cdfg =w .Write (_ebbae );if _cdfg !=nil {return _bfe ,_dg .Wrap (_cdfg ,_gcgf ,"\u0077\u0069\u0064t\u0068");};_f .BigEndian .PutUint32 (_ebbae ,uint32 (_efag .PageBMHeight ));var _bce int ;_bce ,_cdfg =w .Write (_ebbae );if _cdfg !=nil {return _bce +_bfe ,_dg .Wrap (_cdfg ,_gcgf ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_bfe +=_bce ;_f .BigEndian .PutUint32 (_ebbae ,uint32 (_efag .ResolutionX ));_bce ,_cdfg =w .Write (_ebbae );if _cdfg !=nil {return _bce +_bfe ,_dg .Wrap (_cdfg ,_gcgf ,"\u0078\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_bfe +=_bce ;_f .BigEndian .PutUint32 (_ebbae ,uint32 (_efag .ResolutionY ));if _bce ,_cdfg =w .Write (_ebbae );_cdfg !=nil {return _bce +_bfe ,_dg .Wrap (_cdfg ,_gcgf ,"\u0079\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_bfe +=_bce ;if _cdfg =_efag .encodeFlags (w );_cdfg !=nil {return _bfe ,_dg .Wrap (_cdfg ,_gcgf ,"");};_bfe ++;if _bce ,_cdfg =_efag .encodeStripingInformation (w );_cdfg !=nil {return _bfe ,_dg .Wrap (_cdfg ,_gcgf ,"");};_bfe +=_bce ;return _bfe ,nil ;};func (_dacc *TextRegion )InitEncode (globalSymbolsMap ,localSymbolsMap map[int ]int ,comps []int ,inLL *_dd .Points ,symbols *_dd .Bitmaps ,classIDs *_af .IntSlice ,boxes *_dd .Boxes ,width ,height ,symbits int ){_dacc .RegionInfo =&RegionSegment {BitmapWidth :uint32 (width ),BitmapHeight :uint32 (height )};_dacc ._aebdf =globalSymbolsMap ;_dacc ._ecfgc =localSymbolsMap ;_dacc ._eabf =comps ;_dacc ._dfcb =inLL ;_dacc ._fcec =symbols ;_dacc ._cbac =classIDs ;_dacc ._bfeb =boxes ;_dacc ._gdgb =symbits ;};func (_cbfa *RegionSegment )Encode (w _da .BinaryWriter )(_dfac int ,_badga error ){const _fbfd ="R\u0065g\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065n\u0074\u002e\u0045\u006eco\u0064\u0065";_gde :=make ([]byte ,4);_f .BigEndian .PutUint32 (_gde ,_cbfa .BitmapWidth );_dfac ,_badga =w .Write (_gde );if _badga !=nil {return 0,_dg .Wrap (_badga ,_fbfd ,"\u0057\u0069\u0064t\u0068");};_f .BigEndian .PutUint32 (_gde ,_cbfa .BitmapHeight );var _fgbd int ;_fgbd ,_badga =w .Write (_gde );if _badga !=nil {return 0,_dg .Wrap (_badga ,_fbfd ,"\u0048\u0065\u0069\u0067\u0068\u0074");};_dfac +=_fgbd ;_f .BigEndian .PutUint32 (_gde ,_cbfa .XLocation );_fgbd ,_badga =w .Write (_gde );if _badga !=nil {return 0,_dg .Wrap (_badga ,_fbfd ,"\u0058L\u006f\u0063\u0061\u0074\u0069\u006fn");};_dfac +=_fgbd ;_f .BigEndian .PutUint32 (_gde ,_cbfa .YLocation );_fgbd ,_badga =w .Write (_gde );if _badga !=nil {return 0,_dg .Wrap (_badga ,_fbfd ,"\u0059L\u006f\u0063\u0061\u0074\u0069\u006fn");};_dfac +=_fgbd ;if _badga =w .WriteByte (byte (_cbfa .CombinaionOperator )&0x07);_badga !=nil {return 0,_dg .Wrap (_badga ,_fbfd ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};_dfac ++;return _dfac ,nil ;};func (_aga *GenericRegion )String ()string {_cbgg :=&_aa .Builder {};_cbgg .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_cbgg .WriteString (_aga .RegionSegment .String ()+"\u000a");_cbgg .WriteString (_ge .Sprintf ("\u0009\u002d\u0020Us\u0065\u0045\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_aga .UseExtTemplates ));_cbgg .WriteString (_ge .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0044\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_aga .IsTPGDon ));_cbgg .WriteString (_ge .Sprintf ("\u0009-\u0020G\u0042\u0054\u0065\u006d\u0070l\u0061\u0074e\u003a\u0020\u0025\u0064\u000a",_aga .GBTemplate ));_cbgg .WriteString (_ge .Sprintf ("\t\u002d \u0049\u0073\u004d\u004d\u0052\u0045\u006e\u0063o\u0064\u0065\u0064\u003a %\u0076\u000a",_aga .IsMMREncoded ));_cbgg .WriteString (_ge .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_aga .GBAtX ));_cbgg .WriteString (_ge .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_aga .GBAtY ));_cbgg .WriteString (_ge .Sprintf ("\t\u002d \u0047\u0042\u0041\u0074\u004f\u0076\u0065\u0072r\u0069\u0064\u0065\u003a %\u0076\u000a",_aga .GBAtOverride ));return _cbgg .String ();};func (_bagd *TableSegment )HtOOB ()int32 {return _bagd ._fdfdc };func (_bebd *TextRegion )blit (_cea *_dd .Bitmap ,_fccf int64 )error {if _bebd .IsTransposed ==0&&(_bebd .ReferenceCorner ==2||_bebd .ReferenceCorner ==3){_bebd ._fgcc +=int64 (_cea .Width -1);}else if _bebd .IsTransposed ==1&&(_bebd .ReferenceCorner ==0||_bebd .ReferenceCorner ==2){_bebd ._fgcc +=int64 (_cea .Height -1);};_eddc :=_bebd ._fgcc ;if _bebd .IsTransposed ==1{_eddc ,_fccf =_fccf ,_eddc ;};switch _bebd .ReferenceCorner {case 0:_fccf -=int64 (_cea .Height -1);case 2:_fccf -=int64 (_cea .Height -1);_eddc -=int64 (_cea .Width -1);case 3:_eddc -=int64 (_cea .Width -1);};_fgbe :=_dd .Blit (_cea ,_bebd .RegionBitmap ,int (_eddc ),int (_fccf ),_bebd .CombinationOperator );if _fgbe !=nil {return _fgbe ;};if _bebd .IsTransposed ==0&&(_bebd .ReferenceCorner ==0||_bebd .ReferenceCorner ==1){_bebd ._fgcc +=int64 (_cea .Width -1);};if _bebd .IsTransposed ==1&&(_bebd .ReferenceCorner ==1||_bebd .ReferenceCorner ==3){_bebd ._fgcc +=int64 (_cea .Height -1);};return nil ;};func (_cagd *Header )writeReferredToSegments (_dfe _da .BinaryWriter )(_geaa int ,_eba error ){const _edeg ="\u0077\u0072\u0069te\u0052\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";var (_gdfa uint16 ;_gcbc uint32 ;);_dcbc :=_cagd .referenceSize ();_fbbb :=1;_daef :=make ([]byte ,_dcbc );for _ ,_gabf :=range _cagd .RTSNumbers {switch _dcbc {case 4:_gcbc =uint32 (_gabf );_f .BigEndian .PutUint32 (_daef ,_gcbc );_fbbb ,_eba =_dfe .Write (_daef );if _eba !=nil {return 0,_dg .Wrap (_eba ,_edeg ,"u\u0069\u006e\u0074\u0033\u0032\u0020\u0073\u0069\u007a\u0065");};case 2:_gdfa =uint16 (_gabf );_f .BigEndian .PutUint16 (_daef ,_gdfa );_fbbb ,_eba =_dfe .Write (_daef );if _eba !=nil {return 0,_dg .Wrap (_eba ,_edeg ,"\u0075\u0069\u006e\u0074\u0031\u0036");};default:if _eba =_dfe .WriteByte (byte (_gabf ));_eba !=nil {return 0,_dg .Wrap (_eba ,_edeg ,"\u0075\u0069\u006et\u0038");};};_geaa +=_fbbb ;};return _geaa ,nil ;};func (_fefe *HalftoneRegion )combineGrayscalePlanes (_gab []*_dd .Bitmap ,_bbge int )error {_gfa :=0;for _geea :=0;_geea < _gab [_bbge ].Height ;_geea ++{for _aefd :=0;_aefd < _gab [_bbge ].Width ;_aefd +=8{_gbc ,_dbf :=_gab [_bbge +1].GetByte (_gfa );if _dbf !=nil {return _dbf ;};_add ,_dbf :=_gab [_bbge ].GetByte (_gfa );if _dbf !=nil {return _dbf ;};_dbf =_gab [_bbge ].SetByte (_gfa ,_dd .CombineBytes (_add ,_gbc ,_dd .CmbOpXor ));if _dbf !=nil {return _dbf ;};_gfa ++;};};return nil ;};func (_bdb *GenericRegion )computeSegmentDataStructure ()error {_bdb .DataOffset =_bdb ._edac .StreamPosition ();_bdb .DataHeaderLength =_bdb .DataOffset -_bdb .DataHeaderOffset ;_bdb .DataLength =int64 (_bdb ._edac .Length ())-_bdb .DataHeaderLength ;return nil ;};func (_baab *Header )readHeaderLength (_dbc _da .StreamReader ,_afbdc int64 ){_baab .HeaderLength =_dbc .StreamPosition ()-_afbdc ;};func (_afafd *SymbolDictionary )decodeDifferenceWidth ()(int64 ,error ){if _afafd .IsHuffmanEncoded {switch _afafd .SdHuffDecodeWidthSelection {case 0:_bcead ,_ebab :=_e .GetStandardTable (2);if _ebab !=nil {return 0,_ebab ;};return _bcead .Decode (_afafd ._bbdfb );case 1:_badf ,_bdgf :=_e .GetStandardTable (3);if _bdgf !=nil {return 0,_bdgf ;};return _badf .Decode (_afafd ._bbdfb );case 3:if _afafd ._bfee ==nil {var _cfaf int ;if _afafd .SdHuffDecodeHeightSelection ==3{_cfaf ++;};_bcae ,_dacfc :=_afafd .getUserTable (_cfaf );if _dacfc !=nil {return 0,_dacfc ;};_afafd ._bfee =_bcae ;};return _afafd ._bfee .Decode (_afafd ._bbdfb );};}else {_fbff ,_dffe :=_afafd ._bbbd .DecodeInt (_afafd ._aeca );if _dffe !=nil {return 0,_dffe ;};if _fbff ==_d .MaxInt32 {return int64 (_d .MaxInt64 ),nil ;};return int64 (_fbff ),nil ;};return 0,nil ;};func (_gba *Header )referenceSize ()uint {switch {case _gba .SegmentNumber <=255:return 1;case _gba .SegmentNumber <=65535:return 2;default:return 4;};};func (_ac *EndOfStripe )parseHeader (_ad *Header ,_cf _da .StreamReader )error {_bd ,_ddf :=_ac ._dac .ReadBits (32);if _ddf !=nil {return _ddf ;};_ac ._ff =int (_bd &_d .MaxInt32 );return nil ;};func (_ccgd *PageInformationSegment )readMaxStripeSize ()error {_efecb ,_ecga :=_ccgd ._fbcb .ReadBits (15);if _ecga !=nil {return _ecga ;};_ccgd .MaxStripeSize =uint16 (_efecb &_d .MaxUint16 );return nil ;};func (_gbad *TextRegion )getUserTable (_agea int )(_e .Tabler ,error ){const _cacfc ="\u0067\u0065\u0074U\u0073\u0065\u0072\u0054\u0061\u0062\u006c\u0065";var _adcg int ;for _ ,_fgac :=range _gbad .Header .RTSegments {if _fgac .Type ==53{if _adcg ==_agea {_aeef ,_bbce :=_fgac .GetSegmentData ();if _bbce !=nil {return nil ,_bbce ;};_adfc ,_efed :=_aeef .(*TableSegment );if !_efed {_c .Log .Debug (_ge .Sprintf ("\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079p\u0065\u00205\u0033\u0020\u002d\u0020\u0061\u006ed\u0020in\u0064\u0065\u0078\u003a\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_fgac .SegmentNumber ));return nil ,_dg .Error (_cacfc ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079\u0070e\u0020\u0035\u0033\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u002a\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074");};return _e .NewEncodedTable (_adfc );};_adcg ++;};};return nil ,nil ;};func (_addg *TextRegion )decodeID ()(int64 ,error ){if _addg .IsHuffmanEncoded {if _addg ._dfcd ==nil {_gdffe ,_fgcdf :=_addg ._cfcd .ReadBits (byte (_addg ._effc ));return int64 (_gdffe ),_fgcdf ;};return _addg ._dfcd .Decode (_addg ._cfcd );};return _addg ._egddd .DecodeIAID (uint64 (_addg ._effc ),_addg ._begb );};func (_bbgaf *TextRegion )parseHeader ()error {var _badbf error ;_c .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069n\u0073\u002e\u002e\u002e");defer func (){if _badbf !=nil {_c .Log .Trace ("\u005b\u0054\u0045\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044E\u0052\u005d\u0020\u0066\u0061i\u006c\u0065d\u002e\u0020\u0025\u0076",_badbf );}else {_c .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069s\u0068\u0065\u0064\u002e");};}();if _badbf =_bbgaf .RegionInfo .parseHeader ();_badbf !=nil {return _badbf ;};if _badbf =_bbgaf .readRegionFlags ();_badbf !=nil {return _badbf ;};if _bbgaf .IsHuffmanEncoded {if _badbf =_bbgaf .readHuffmanFlags ();_badbf !=nil {return _badbf ;};};if _badbf =_bbgaf .readUseRefinement ();_badbf !=nil {return _badbf ;};if _badbf =_bbgaf .readAmountOfSymbolInstances ();_badbf !=nil {return _badbf ;};if _badbf =_bbgaf .getSymbols ();_badbf !=nil {return _badbf ;};if _badbf =_bbgaf .computeSymbolCodeLength ();_badbf !=nil {return _badbf ;};if _badbf =_bbgaf .checkInput ();_badbf !=nil {return _badbf ;};_c .Log .Trace ("\u0025\u0073",_bbgaf .String ());return nil ;};func (_ggge *RegionSegment )Size ()int {return 17};type PageInformationSegment struct{_fbcb _da .StreamReader ;PageBMHeight int ;PageBMWidth int ;ResolutionX int ;ResolutionY int ;_bebf bool ;_gebb _dd .CombinationOperator ;_afeeb bool ;_fed uint8 ;_fcbgb bool ;IsLossless bool ;IsStripe bool ;MaxStripeSize uint16 ;};func (_efee *SymbolDictionary )encodeATFlags (_ffddb _da .BinaryWriter )(_faee int ,_gagcc error ){const _dedb ="\u0065\u006e\u0063\u006f\u0064\u0065\u0041\u0054\u0046\u006c\u0061\u0067\u0073";if _efee .IsHuffmanEncoded ||_efee .SdTemplate !=0{return 0,nil ;};_fbec :=4;if _efee .SdTemplate !=0{_fbec =1;};for _fbbd :=0;_fbbd < _fbec ;_fbbd ++{if _gagcc =_ffddb .WriteByte (byte (_efee .SdATX [_fbbd ]));_gagcc !=nil {return _faee ,_dg .Wrapf (_gagcc ,_dedb ,"\u0053d\u0041\u0054\u0058\u005b\u0025\u0064]",_fbbd );};_faee ++;if _gagcc =_ffddb .WriteByte (byte (_efee .SdATY [_fbbd ]));_gagcc !=nil {return _faee ,_dg .Wrapf (_gagcc ,_dedb ,"\u0053d\u0041\u0054\u0059\u005b\u0025\u0064]",_fbbd );};_faee ++;};return _faee ,nil ;};func (_abcfcg *SymbolDictionary )decodeThroughTextRegion (_deda ,_caff ,_fedd uint32 )error {if _abcfcg ._ffcd ==nil {_abcfcg ._ffcd =_ggce (_abcfcg ._bbdfb ,nil );_abcfcg ._ffcd .setContexts (_abcfcg ._fbbf ,_ag .NewStats (512,1),_ag .NewStats (512,1),_ag .NewStats (512,1),_ag .NewStats (512,1),_abcfcg ._aecf ,_ag .NewStats (512,1),_ag .NewStats (512,1),_ag .NewStats (512,1),_ag .NewStats (512,1));};if _afaf :=_abcfcg .setSymbolsArray ();_afaf !=nil {return _afaf ;};_abcfcg ._ffcd .setParameters (_abcfcg ._bbbd ,_abcfcg .IsHuffmanEncoded ,true ,_deda ,_caff ,_fedd ,1,_abcfcg ._affg +_abcfcg ._eaee ,0,0,0,1,0,0,0,0,0,0,0,0,0,_abcfcg .SdrTemplate ,_abcfcg .SdrATX ,_abcfcg .SdrATY ,_abcfcg ._acge ,_abcfcg ._egbf );return _abcfcg .addSymbol (_abcfcg ._ffcd );};func (_ccaf *SymbolDictionary )decodeHeightClassDeltaHeightWithHuffman ()(int64 ,error ){switch _ccaf .SdHuffDecodeHeightSelection {case 0:_acff ,_cfceg :=_e .GetStandardTable (4);if _cfceg !=nil {return 0,_cfceg ;};return _acff .Decode (_ccaf ._bbdfb );case 1:_dbef ,_ccgdf :=_e .GetStandardTable (5);if _ccgdf !=nil {return 0,_ccgdf ;};return _dbef .Decode (_ccaf ._bbdfb );case 3:if _ccaf ._acfc ==nil {_fcbge ,_fcef :=_e .GetStandardTable (0);if _fcef !=nil {return 0,_fcef ;};_ccaf ._acfc =_fcbge ;};return _ccaf ._acfc .Decode (_ccaf ._bbdfb );};return 0,nil ;};func (_dad *SymbolDictionary )encodeSymbols (_bfddf _da .BinaryWriter )(_cecd int ,_bace error ){const _dgeb ="\u0065\u006e\u0063o\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c";_cbca :=_ae .New ();_cbca .Init ();_bbae ,_bace :=_dad ._fgfb .SelectByIndexes (_dad ._deea );if _bace !=nil {return 0,_dg .Wrap (_bace ,_dgeb ,"\u0069n\u0069\u0074\u0069\u0061\u006c");};_bcdf :=map[*_dd .Bitmap ]int {};for _cfae ,_agf :=range _bbae .Values {_bcdf [_agf ]=_cfae ;};_bbae .SortByHeight ();var _cdgb ,_cddfc int ;_eabe ,_bace :=_bbae .GroupByHeight ();if _bace !=nil {return 0,_dg .Wrap (_bace ,_dgeb ,"");};for _ ,_geba :=range _eabe .Values {_baffc :=_geba .Values [0].Height ;_fda :=_baffc -_cdgb ;if _bace =_cbca .EncodeInteger (_ae .IADH ,_fda );_bace !=nil {return 0,_dg .Wrapf (_bace ,_dgeb ,"\u0049\u0041\u0044\u0048\u0020\u0066\u006f\u0072\u0020\u0064\u0068\u003a \u0027\u0025\u0064\u0027",_fda );};_cdgb =_baffc ;_gdbfc ,_cebb :=_geba .GroupByWidth ();if _cebb !=nil {return 0,_dg .Wrapf (_cebb ,_dgeb ,"\u0068\u0065\u0069g\u0068\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_baffc );};var _bdf int ;for _ ,_ddd :=range _gdbfc .Values {for _ ,_gcce :=range _ddd .Values {_fadd :=_gcce .Width ;_afaaf :=_fadd -_bdf ;if _cebb =_cbca .EncodeInteger (_ae .IADW ,_afaaf );_cebb !=nil {return 0,_dg .Wrapf (_cebb ,_dgeb ,"\u0049\u0041\u0044\u0057\u0020\u0066\u006f\u0072\u0020\u0064\u0077\u003a \u0027\u0025\u0064\u0027",_afaaf );};_bdf +=_afaaf ;if _cebb =_cbca .EncodeBitmap (_gcce ,false );_cebb !=nil {return 0,_dg .Wrapf (_cebb ,_dgeb ,"H\u0065i\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u0020W\u0069\u0064\u0074\u0068: \u0025\u0064",_baffc ,_fadd );};_fgdfe :=_bcdf [_gcce ];_dad ._cbda [_fgdfe ]=_cddfc ;_cddfc ++;};};if _cebb =_cbca .EncodeOOB (_ae .IADW );_cebb !=nil {return 0,_dg .Wrap (_cebb ,_dgeb ,"\u0049\u0041\u0044\u0057");};};if _bace =_cbca .EncodeInteger (_ae .IAEX ,0);_bace !=nil {return 0,_dg .Wrap (_bace ,_dgeb ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};if _bace =_cbca .EncodeInteger (_ae .IAEX ,len (_dad ._deea ));_bace !=nil {return 0,_dg .Wrap (_bace ,_dgeb ,"\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0073\u0079m\u0062\u006f\u006c\u0073");};_cbca .Final ();_dbgd ,_bace :=_cbca .WriteTo (_bfddf );if _bace !=nil {return 0,_dg .Wrap (_bace ,_dgeb ,"\u0077\u0072i\u0074\u0069\u006e\u0067 \u0065\u006ec\u006f\u0064\u0065\u0072\u0020\u0063\u006f\u006et\u0065\u0078\u0074\u0020\u0074\u006f\u0020\u0027\u0077\u0027\u0020\u0077r\u0069\u0074\u0065\u0072");};return int (_dbgd ),nil ;};func (_egag *TableSegment )HtLow ()int32 {return _egag ._cdgc };func (_feaf *SymbolDictionary )decodeDirectlyThroughGenericRegion (_ebfd ,_ffgf uint32 )error {if _feaf ._affc ==nil {_feaf ._affc =NewGenericRegion (_feaf ._bbdfb );};_feaf ._affc .setParametersWithAt (false ,byte (_feaf .SdTemplate ),false ,false ,_feaf .SdATX ,_feaf .SdATY ,_ebfd ,_ffgf ,_feaf ._fbbf ,_feaf ._bbbd );return _feaf .addSymbol (_feaf ._affc );};func (_cgad *PatternDictionary )Init (h *Header ,r _da .StreamReader )error {_cgad ._gfcf =r ;return _cgad .parseHeader ();};func (_eeac *GenericRegion )decodeLine (_dbg ,_fec ,_fee int )error {const _ceg ="\u0064\u0065\u0063\u006f\u0064\u0065\u004c\u0069\u006e\u0065";_bcag :=_eeac .Bitmap .GetByteIndex (0,_dbg );_caca :=_bcag -_eeac .Bitmap .RowStride ;switch _eeac .GBTemplate {case 0:if !_eeac .UseExtTemplates {return _eeac .decodeTemplate0a (_dbg ,_fec ,_fee ,_bcag ,_caca );};return _eeac .decodeTemplate0b (_dbg ,_fec ,_fee ,_bcag ,_caca );case 1:return _eeac .decodeTemplate1 (_dbg ,_fec ,_fee ,_bcag ,_caca );case 2:return _eeac .decodeTemplate2 (_dbg ,_fec ,_fee ,_bcag ,_caca );case 3:return _eeac .decodeTemplate3 (_dbg ,_fec ,_fee ,_bcag ,_caca );};return _dg .Errorf (_ceg ,"\u0069\u006e\u0076a\u006c\u0069\u0064\u0020G\u0042\u0054\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u003a\u0020\u0025\u0064",_eeac .GBTemplate );};func (_acc *SymbolDictionary )parseHeader ()(_dbfd error ){_c .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");defer func (){if _dbfd !=nil {_c .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u0020\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u005b\u0050\u0041\u0052SE\u002d\u0048\u0045A\u0044\u0045R\u005d\u0020\u0066\u0061\u0069\u006ce\u0064\u002e \u0025\u0076",_dbfd );}else {_c .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");};}();if _dbfd =_acc .readRegionFlags ();_dbfd !=nil {return _dbfd ;};if _dbfd =_acc .setAtPixels ();_dbfd !=nil {return _dbfd ;};if _dbfd =_acc .setRefinementAtPixels ();_dbfd !=nil {return _dbfd ;};if _dbfd =_acc .readNumberOfExportedSymbols ();_dbfd !=nil {return _dbfd ;};if _dbfd =_acc .readNumberOfNewSymbols ();_dbfd !=nil {return _dbfd ;};if _dbfd =_acc .setInSyms ();_dbfd !=nil {return _dbfd ;};if _acc ._beee {_cgeb :=_acc .Header .RTSegments ;for _fagc :=len (_cgeb )-1;_fagc >=0;_fagc --{if _cgeb [_fagc ].Type ==0{_gfaa ,_daba :=_cgeb [_fagc ].SegmentData .(*SymbolDictionary );if !_daba {_dbfd =_ge .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074:\u0020\u0025\u0076\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020S\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_cgeb [_fagc ]);return _dbfd ;};if _gfaa ._beee {_acc .setRetainedCodingContexts (_gfaa );};break ;};};};if _dbfd =_acc .checkInput ();_dbfd !=nil {return _dbfd ;};return nil ;};func (_feac *TextRegion )readHuffmanFlags ()error {var (_fead int ;_gffe uint64 ;_egcag error ;);_ ,_egcag =_feac ._cfcd .ReadBit ();if _egcag !=nil {return _egcag ;};_fead ,_egcag =_feac ._cfcd .ReadBit ();if _egcag !=nil {return _egcag ;};_feac .SbHuffRSize =int8 (_fead );_gffe ,_egcag =_feac ._cfcd .ReadBits (2);if _egcag !=nil {return _egcag ;};_feac .SbHuffRDY =int8 (_gffe )&0xf;_gffe ,_egcag =_feac ._cfcd .ReadBits (2);if _egcag !=nil {return _egcag ;};_feac .SbHuffRDX =int8 (_gffe )&0xf;_gffe ,_egcag =_feac ._cfcd .ReadBits (2);if _egcag !=nil {return _egcag ;};_feac .SbHuffRDHeight =int8 (_gffe )&0xf;_gffe ,_egcag =_feac ._cfcd .ReadBits (2);if _egcag !=nil {return _egcag ;};_feac .SbHuffRDWidth =int8 (_gffe )&0xf;_gffe ,_egcag =_feac ._cfcd .ReadBits (2);if _egcag !=nil {return _egcag ;};_feac .SbHuffDT =int8 (_gffe )&0xf;_gffe ,_egcag =_feac ._cfcd .ReadBits (2);if _egcag !=nil {return _egcag ;};_feac .SbHuffDS =int8 (_gffe )&0xf;_gffe ,_egcag =_feac ._cfcd .ReadBits (2);if _egcag !=nil {return _egcag ;};_feac .SbHuffFS =int8 (_gffe )&0xf;return nil ;};func (_fcde *TableSegment )HtHigh ()int32 {return _fcde ._fcbbe };func (_cgde *SymbolDictionary )setRetainedCodingContexts (_fbaf *SymbolDictionary ){_cgde ._bbbd =_fbaf ._bbbd ;_cgde .IsHuffmanEncoded =_fbaf .IsHuffmanEncoded ;_cgde .UseRefinementAggregation =_fbaf .UseRefinementAggregation ;_cgde .SdTemplate =_fbaf .SdTemplate ;_cgde .SdrTemplate =_fbaf .SdrTemplate ;_cgde .SdATX =_fbaf .SdATX ;_cgde .SdATY =_fbaf .SdATY ;_cgde .SdrATX =_fbaf .SdrATX ;_cgde .SdrATY =_fbaf .SdrATY ;_cgde ._fbbf =_fbaf ._fbbf ;};func (_dfc *GenericRefinementRegion )decodeTypicalPredictedLine (_fdf ,_fga ,_ce ,_afa ,_cc ,_acf int )error {_gac :=_fdf -int (_dfc .ReferenceDY );_eed :=_dfc .ReferenceBitmap .GetByteIndex (0,_gac );_afb :=_dfc .RegionBitmap .GetByteIndex (0,_fdf );var _be error ;switch _dfc .TemplateID {case 0:_be =_dfc .decodeTypicalPredictedLineTemplate0 (_fdf ,_fga ,_ce ,_afa ,_cc ,_acf ,_afb ,_gac ,_eed );case 1:_be =_dfc .decodeTypicalPredictedLineTemplate1 (_fdf ,_fga ,_ce ,_afa ,_cc ,_acf ,_afb ,_gac ,_eed );};return _be ;};func (_eaeed *SymbolDictionary )getToExportFlags ()([]int ,error ){var (_ebef int ;_agec int32 ;_eeaa error ;_bdbc =int32 (_eaeed ._affg +_eaeed .NumberOfNewSymbols );_gbg =make ([]int ,_bdbc ););for _fcag :=int32 (0);_fcag < _bdbc ;_fcag +=_agec {if _eaeed .IsHuffmanEncoded {_affd ,_dcc :=_e .GetStandardTable (1);if _dcc !=nil {return nil ,_dcc ;};_fgec ,_dcc :=_affd .Decode (_eaeed ._bbdfb );if _dcc !=nil {return nil ,_dcc ;};_agec =int32 (_fgec );}else {_agec ,_eeaa =_eaeed ._bbbd .DecodeInt (_eaeed ._bbaf );if _eeaa !=nil {return nil ,_eeaa ;};};if _agec !=0{for _ccbb :=_fcag ;_ccbb < _fcag +_agec ;_ccbb ++{_gbg [_ccbb ]=_ebef ;};};if _ebef ==0{_ebef =1;}else {_ebef =0;};};return _gbg ,nil ;};type GenericRefinementRegion struct{_dc templater ;_ea templater ;_bff _da .StreamReader ;_eg *Header ;RegionInfo *RegionSegment ;IsTPGROn bool ;TemplateID int8 ;Template templater ;GrAtX []int8 ;GrAtY []int8 ;RegionBitmap *_dd .Bitmap ;ReferenceBitmap *_dd .Bitmap ;ReferenceDX int32 ;ReferenceDY int32 ;_fb *_ag .Decoder ;_bbc *_ag .DecoderStats ;_ca bool ;_aeg []bool ;};func (_ebg *PatternDictionary )readPatternWidthAndHeight ()error {_dfefg ,_adga :=_ebg ._gfcf .ReadByte ();if _adga !=nil {return _adga ;};_ebg .HdpWidth =_dfefg ;_dfefg ,_adga =_ebg ._gfcf .ReadByte ();if _adga !=nil {return _adga ;};_ebg .HdpHeight =_dfefg ;return nil ;};func (_bbba *SymbolDictionary )encodeRefinementATFlags (_acb _da .BinaryWriter )(_gfag int ,_abdc error ){const _gefba ="\u0065\u006e\u0063od\u0065\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0041\u0054\u0046\u006c\u0061\u0067\u0073";if !_bbba .UseRefinementAggregation ||_bbba .SdrTemplate !=0{return 0,nil ;};for _fgdf :=0;_fgdf < 2;_fgdf ++{if _abdc =_acb .WriteByte (byte (_bbba .SdrATX [_fgdf ]));_abdc !=nil {return _gfag ,_dg .Wrapf (_abdc ,_gefba ,"\u0053\u0064\u0072\u0041\u0054\u0058\u005b\u0025\u0064\u005d",_fgdf );};_gfag ++;if _abdc =_acb .WriteByte (byte (_bbba .SdrATY [_fgdf ]));_abdc !=nil {return _gfag ,_dg .Wrapf (_abdc ,_gefba ,"\u0053\u0064\u0072\u0041\u0054\u0059\u005b\u0025\u0064\u005d",_fgdf );};_gfag ++;};return _gfag ,nil ;};func (_dgf *EndOfStripe )Init (h *Header ,r _da .StreamReader )error {_dgf ._dac =r ;return _dgf .parseHeader (h ,r );};func (_bfge *SymbolDictionary )huffDecodeRefAggNInst ()(int64 ,error ){if !_bfge .SdHuffAggInstanceSelection {_bdbdf ,_fecc :=_e .GetStandardTable (1);if _fecc !=nil {return 0,_fecc ;};return _bdbdf .Decode (_bfge ._bbdfb );};if _bfge ._dgac ==nil {var (_gdce int ;_gcbe error ;);if _bfge .SdHuffDecodeHeightSelection ==3{_gdce ++;};if _bfge .SdHuffDecodeWidthSelection ==3{_gdce ++;};if _bfge .SdHuffBMSizeSelection ==3{_gdce ++;};_bfge ._dgac ,_gcbe =_bfge .getUserTable (_gdce );if _gcbe !=nil {return 0,_gcbe ;};};return _bfge ._dgac .Decode (_bfge ._bbdfb );};func (_dcbe *Header )writeReferredToCount (_badac _da .BinaryWriter )(_fffe int ,_gaf error ){const _bbbf ="w\u0072i\u0074\u0065\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0043ou\u006e\u0074";_dcbe .RTSNumbers =make ([]int ,len (_dcbe .RTSegments ));for _cefd ,_gbe :=range _dcbe .RTSegments {_dcbe .RTSNumbers [_cefd ]=int (_gbe .SegmentNumber );};if len (_dcbe .RTSNumbers )<=4{var _dfbd byte ;if len (_dcbe .RetainBits )>=1{_dfbd =byte (_dcbe .RetainBits [0]);};_dfbd |=byte (len (_dcbe .RTSNumbers ))<<5;if _gaf =_badac .WriteByte (_dfbd );_gaf !=nil {return 0,_dg .Wrap (_gaf ,_bbbf ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return 1,nil ;};_dcad :=uint32 (len (_dcbe .RTSNumbers ));_aeba :=make ([]byte ,4+_af .Ceil (len (_dcbe .RTSNumbers )+1,8));_dcad |=0x7<<29;_f .BigEndian .PutUint32 (_aeba ,_dcad );copy (_aeba [1:],_dcbe .RetainBits );_fffe ,_gaf =_badac .Write (_aeba );if _gaf !=nil {return 0,_dg .Wrap (_gaf ,_bbbf ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return _fffe ,nil ;};func (_eeg *template0 )form (_adaa ,_edd ,_bdc ,_gag ,_cbe int16 )int16 {return (_adaa <<10)|(_edd <<7)|(_bdc <<4)|(_gag <<1)|_cbe ;};func (_baff *PageInformationSegment )readDefaultPixelValue ()error {_egcg ,_ceeg :=_baff ._fbcb .ReadBit ();if _ceeg !=nil {return _ceeg ;};_baff ._fed =uint8 (_egcg &0xf);return nil ;};func (_aac *TextRegion )getSymbols ()error {if _aac .Header .RTSegments !=nil {return _aac .initSymbols ();};return nil ;};func (_ccfd *PageInformationSegment )encodeStripingInformation (_ggeb _da .BinaryWriter )(_gcc int ,_cbag error ){const _fbdd ="\u0065n\u0063\u006f\u0064\u0065S\u0074\u0072\u0069\u0070\u0069n\u0067I\u006ef\u006f\u0072\u006d\u0061\u0074\u0069\u006fn";if !_ccfd .IsStripe {if _gcc ,_cbag =_ggeb .Write ([]byte {0x00,0x00});_cbag !=nil {return 0,_dg .Wrap (_cbag ,_fbdd ,"n\u006f\u0020\u0073\u0074\u0072\u0069\u0070\u0069\u006e\u0067");};return _gcc ,nil ;};_bdag :=make ([]byte ,2);_f .BigEndian .PutUint16 (_bdag ,_ccfd .MaxStripeSize |1<<15);if _gcc ,_cbag =_ggeb .Write (_bdag );_cbag !=nil {return 0,_dg .Wrapf (_cbag ,_fbdd ,"\u0073\u0074\u0072i\u0070\u0069\u006e\u0067\u003a\u0020\u0025\u0064",_ccfd .MaxStripeSize );};return _gcc ,nil ;};func (_ebbg *TextRegion )readUseRefinement ()error {if !_ebbg .UseRefinement ||_ebbg .SbrTemplate !=0{return nil ;};var (_ggbd byte ;_fccfc error ;);_ebbg .SbrATX =make ([]int8 ,2);_ebbg .SbrATY =make ([]int8 ,2);_ggbd ,_fccfc =_ebbg ._cfcd .ReadByte ();if _fccfc !=nil {return _fccfc ;};_ebbg .SbrATX [0]=int8 (_ggbd );_ggbd ,_fccfc =_ebbg ._cfcd .ReadByte ();if _fccfc !=nil {return _fccfc ;};_ebbg .SbrATY [0]=int8 (_ggbd );_ggbd ,_fccfc =_ebbg ._cfcd .ReadByte ();if _fccfc !=nil {return _fccfc ;};_ebbg .SbrATX [1]=int8 (_ggbd );_ggbd ,_fccfc =_ebbg ._cfcd .ReadByte ();if _fccfc !=nil {return _fccfc ;};_ebbg .SbrATY [1]=int8 (_ggbd );return nil ;};type Header struct{SegmentNumber uint32 ;Type Type ;RetainFlag bool ;PageAssociation int ;PageAssociationFieldSize bool ;RTSegments []*Header ;HeaderLength int64 ;SegmentDataLength uint64 ;SegmentDataStartOffset uint64 ;Reader _da .StreamReader ;SegmentData Segmenter ;RTSNumbers []int ;RetainBits []uint8 ;};type PatternDictionary struct{_gfcf _da .StreamReader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;GBAtX []int8 ;GBAtY []int8 ;IsMMREncoded bool ;HDTemplate byte ;HdpWidth byte ;HdpHeight byte ;Patterns []*_dd .Bitmap ;GrayMax uint32 ;};const (ORandom OrganizationType =iota ;OSequential ;);var _ SegmentEncoder =&RegionSegment {};func (_feeb *TableSegment )HtPS ()int32 {return _feeb ._afag };func (_fgd *GenericRegion )Size ()int {return _fgd .RegionSegment .Size ()+1+2*len (_fgd .GBAtX )};func (_abcfd *SymbolDictionary )setInSyms ()error {if _abcfd .Header .RTSegments !=nil {return _abcfd .retrieveImportSymbols ();};_abcfd ._ecfb =make ([]*_dd .Bitmap ,0);return nil ;};func (_aed *GenericRegion )GetRegionInfo ()*RegionSegment {return _aed .RegionSegment };func (_fdcc *SymbolDictionary )setCodingStatistics ()error {if _fdcc ._afbg ==nil {_fdcc ._afbg =_ag .NewStats (512,1);};if _fdcc ._egda ==nil {_fdcc ._egda =_ag .NewStats (512,1);};if _fdcc ._aeca ==nil {_fdcc ._aeca =_ag .NewStats (512,1);};if _fdcc ._gagc ==nil {_fdcc ._gagc =_ag .NewStats (512,1);};if _fdcc ._bbaf ==nil {_fdcc ._bbaf =_ag .NewStats (512,1);};if _fdcc .UseRefinementAggregation &&_fdcc ._aecf ==nil {_fdcc ._aecf =_ag .NewStats (1<<uint (_fdcc ._egbf ),1);_fdcc ._cdbg =_ag .NewStats (512,1);_fdcc ._fdbd =_ag .NewStats (512,1);};if _fdcc ._fbbf ==nil {_fdcc ._fbbf =_ag .NewStats (65536,1);};if _fdcc ._bbbd ==nil {var _dfeb error ;_fdcc ._bbbd ,_dfeb =_ag .New (_fdcc ._bbdfb );if _dfeb !=nil {return _dfeb ;};};return nil ;};func (_ccef *TextRegion )encodeSymbols (_ccea _da .BinaryWriter )(_fcba int ,_beda error ){const _dcdb ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";_gdcae :=make ([]byte ,4);_f .BigEndian .PutUint32 (_gdcae ,_ccef .NumberOfSymbols );if _fcba ,_beda =_ccea .Write (_gdcae );_beda !=nil {return _fcba ,_dg .Wrap (_beda ,_dcdb ,"\u004e\u0075\u006dbe\u0072\u004f\u0066\u0053\u0079\u006d\u0062\u006f\u006c\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073");};_gaee ,_beda :=_dd .NewClassedPoints (_ccef ._dfcb ,_af .IntSlice (_ccef ._eabf ));if _beda !=nil {return 0,_dg .Wrap (_beda ,_dcdb ,"");};var _ccab ,_gaca int ;_bbcdg :=_ae .New ();_bbcdg .Init ();if _beda =_bbcdg .EncodeInteger (_ae .IADT ,0);_beda !=nil {return _fcba ,_dg .Wrap (_beda ,_dcdb ,"\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0020\u0044\u0054");};_gbab ,_beda :=_gaee .GroupByY ();if _beda !=nil {return 0,_dg .Wrap (_beda ,_dcdb ,"");};for _ ,_afgc :=range _gbab {_gadg :=int (_afgc .YAtIndex (0));_acbe :=_gadg -_ccab ;if _beda =_bbcdg .EncodeInteger (_ae .IADT ,_acbe );_beda !=nil {return _fcba ,_dg .Wrap (_beda ,_dcdb ,"");};var _bgef int ;for _egcgb ,_ccgge :=range _afgc .IntSlice {switch _egcgb {case 0:_ebd :=int (_afgc .XAtIndex (_egcgb ))-_gaca ;if _beda =_bbcdg .EncodeInteger (_ae .IAFS ,_ebd );_beda !=nil {return _fcba ,_dg .Wrap (_beda ,_dcdb ,"");};_gaca +=_ebd ;_bgef =_gaca ;default:_afcf :=int (_afgc .XAtIndex (_egcgb ))-_bgef ;if _beda =_bbcdg .EncodeInteger (_ae .IADS ,_afcf );_beda !=nil {return _fcba ,_dg .Wrap (_beda ,_dcdb ,"");};_bgef +=_afcf ;};_ffbb ,_ggcce :=_ccef ._cbac .Get (_ccgge );if _ggcce !=nil {return _fcba ,_dg .Wrap (_ggcce ,_dcdb ,"");};_affgg ,_cbed :=_ccef ._aebdf [_ffbb ];if !_cbed {_affgg ,_cbed =_ccef ._ecfgc [_ffbb ];if !_cbed {return _fcba ,_dg .Errorf (_dcdb ,"\u0053\u0079\u006d\u006f\u0062\u006c:\u0020\u0027\u0025d\u0027\u0020\u0069s\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064 \u0069\u006e\u0020\u0067\u006cob\u0061\u006c\u0020\u0061\u006e\u0064\u0020\u006c\u006f\u0063\u0061\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020\u006d\u0061\u0070",_ffbb );};};if _ggcce =_bbcdg .EncodeIAID (_ccef ._gdgb ,_affgg );_ggcce !=nil {return _fcba ,_dg .Wrap (_ggcce ,_dcdb ,"");};};if _beda =_bbcdg .EncodeOOB (_ae .IADS );_beda !=nil {return _fcba ,_dg .Wrap (_beda ,_dcdb ,"");};};_bbcdg .Final ();_dacfg ,_beda :=_bbcdg .WriteTo (_ccea );if _beda !=nil {return _fcba ,_dg .Wrap (_beda ,_dcdb ,"");};_fcba +=int (_dacfg );return _fcba ,nil ;};func (_ffac *HalftoneRegion )computeX (_geag ,_abgg int )int {return _ffac .shiftAndFill (int (_ffac .HGridX )+_geag *int (_ffac .HRegionY )+_abgg *int (_ffac .HRegionX ));};func (_gdcad *TextRegion )decodeIb (_gccaa ,_fece int64 )(*_dd .Bitmap ,error ){const _dfccb ="\u0064\u0065\u0063\u006f\u0064\u0065\u0049\u0062";var (_cgab error ;_afacd *_dd .Bitmap ;);if _gccaa ==0{if int (_fece )> len (_gdcad .Symbols )-1{return nil ,_dg .Error (_dfccb ,"\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0049\u0042\u0020\u0062\u0069\u0074\u006d\u0061\u0070\u002e\u0020\u0069\u006e\u0064\u0065x\u0020\u006f\u0075\u0074\u0020o\u0066\u0020r\u0061\u006e\u0067\u0065");};return _gdcad .Symbols [int (_fece )],nil ;};var _fbce ,_bbeg ,_bcgb ,_cgcg int64 ;_fbce ,_cgab =_gdcad .decodeRdw ();if _cgab !=nil {return nil ,_dg .Wrap (_cgab ,_dfccb ,"");};_bbeg ,_cgab =_gdcad .decodeRdh ();if _cgab !=nil {return nil ,_dg .Wrap (_cgab ,_dfccb ,"");};_bcgb ,_cgab =_gdcad .decodeRdx ();if _cgab !=nil {return nil ,_dg .Wrap (_cgab ,_dfccb ,"");};_cgcg ,_cgab =_gdcad .decodeRdy ();if _cgab !=nil {return nil ,_dg .Wrap (_cgab ,_dfccb ,"");};if _gdcad .IsHuffmanEncoded {if _ ,_cgab =_gdcad .decodeSymInRefSize ();_cgab !=nil {return nil ,_dg .Wrap (_cgab ,_dfccb ,"");};_gdcad ._cfcd .Align ();};_cacf :=_gdcad .Symbols [_fece ];_eceb :=uint32 (_cacf .Width );_ffgc :=uint32 (_cacf .Height );_aecg :=int32 (uint32 (_fbce )>>1)+int32 (_bcgb );_fddgd :=int32 (uint32 (_bbeg )>>1)+int32 (_cgcg );if _gdcad ._gacge ==nil {_gdcad ._gacge =_dgc (_gdcad ._cfcd ,nil );};_gdcad ._gacge .setParameters (_gdcad ._cdga ,_gdcad ._egddd ,_gdcad .SbrTemplate ,_eceb +uint32 (_fbce ),_ffgc +uint32 (_bbeg ),_cacf ,_aecg ,_fddgd ,false ,_gdcad .SbrATX ,_gdcad .SbrATY );_afacd ,_cgab =_gdcad ._gacge .GetRegionBitmap ();if _cgab !=nil {return nil ,_dg .Wrap (_cgab ,_dfccb ,"\u0067\u0072\u0066");};if _gdcad .IsHuffmanEncoded {_gdcad ._cfcd .Align ();};return _afacd ,nil ;};func (_dfca *PageInformationSegment )DefaultPixelValue ()uint8 {return _dfca ._fed };func (_efdd *TextRegion )setCodingStatistics ()error {if _efdd ._afgf ==nil {_efdd ._afgf =_ag .NewStats (512,1);};if _efdd ._afedb ==nil {_efdd ._afedb =_ag .NewStats (512,1);};if _efdd ._bfbff ==nil {_efdd ._bfbff =_ag .NewStats (512,1);};if _efdd ._aaae ==nil {_efdd ._aaae =_ag .NewStats (512,1);};if _efdd ._daga ==nil {_efdd ._daga =_ag .NewStats (512,1);};if _efdd ._egeeg ==nil {_efdd ._egeeg =_ag .NewStats (512,1);};if _efdd ._aaaa ==nil {_efdd ._aaaa =_ag .NewStats (512,1);};if _efdd ._begb ==nil {_efdd ._begb =_ag .NewStats (1<<uint (_efdd ._effc ),1);};if _efdd ._aad ==nil {_efdd ._aad =_ag .NewStats (512,1);};if _efdd ._ccce ==nil {_efdd ._ccce =_ag .NewStats (512,1);};if _efdd ._egddd ==nil {var _cgecf error ;_efdd ._egddd ,_cgecf =_ag .New (_efdd ._cfcd );if _cgecf !=nil {return _cgecf ;};};return nil ;};func (_ddga *TextRegion )readAmountOfSymbolInstances ()error {_bbee ,_cagc :=_ddga ._cfcd .ReadBits (32);if _cagc !=nil {return _cagc ;};_ddga .NumberOfSymbolInstances =uint32 (_bbee &_d .MaxUint32 );_adegf :=_ddga .RegionInfo .BitmapWidth *_ddga .RegionInfo .BitmapHeight ;if _adegf < _ddga .NumberOfSymbolInstances {_c .Log .Debug ("\u004c\u0069\u006d\u0069t\u0069\u006e\u0067\u0020t\u0068\u0065\u0020n\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020d\u0065\u0063\u006f\u0064e\u0064\u0020\u0073\u0079m\u0062\u006f\u006c\u0020\u0069n\u0073\u0074\u0061\u006e\u0063\u0065\u0073 \u0074\u006f\u0020\u006f\u006ee\u0020\u0070\u0065\u0072\u0020\u0070\u0069\u0078\u0065l\u0020\u0028\u0020\u0025\u0064\u0020\u0069\u006e\u0073\u0074\u0065\u0061\u0064\u0020\u006f\u0066\u0020\u0025\u0064\u0029",_adegf ,_ddga .NumberOfSymbolInstances );_ddga .NumberOfSymbolInstances =_adegf ;};return nil ;};func (_bgab *SymbolDictionary )addSymbol (_fage Regioner )error {_cbdc ,_babd :=_fage .GetRegionBitmap ();if _babd !=nil {return _babd ;};_bgab ._cagg [_bgab ._eaee ]=_cbdc ;_bgab ._acge =append (_bgab ._acge ,_cbdc );_c .Log .Trace ("\u005b\u0053YM\u0042\u004f\u004c \u0044\u0049\u0043\u0054ION\u0041RY\u005d\u0020\u0041\u0064\u0064\u0065\u0064 s\u0079\u006d\u0062\u006f\u006c\u003a\u0020%\u0073",_cbdc );return nil ;};func (_gbf *GenericRegion )decodeTemplate1 (_egc ,_abcd ,_ggcc int ,_ggfg ,_dfcg int )(_cdc error ){const _fcbea ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0031";var (_dbbg ,_ccga int ;_abeg ,_bee int ;_cfgc byte ;_cgc ,_aea int ;);if _egc >=1{_cfgc ,_cdc =_gbf .Bitmap .GetByte (_dfcg );if _cdc !=nil {return _dg .Wrap (_cdc ,_fcbea ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_abeg =int (_cfgc );};if _egc >=2{_cfgc ,_cdc =_gbf .Bitmap .GetByte (_dfcg -_gbf .Bitmap .RowStride );if _cdc !=nil {return _dg .Wrap (_cdc ,_fcbea ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_bee =int (_cfgc )<<5;};_dbbg =((_abeg >>1)&0x1f8)|((_bee >>1)&0x1e00);for _egdb :=0;_egdb < _ggcc ;_egdb =_cgc {var (_ebbd byte ;_ebbe int ;);_cgc =_egdb +8;if _dee :=_abcd -_egdb ;_dee > 8{_ebbe =8;}else {_ebbe =_dee ;};if _egc > 0{_abeg <<=8;if _cgc < _abcd {_cfgc ,_cdc =_gbf .Bitmap .GetByte (_dfcg +1);if _cdc !=nil {return _dg .Wrap (_cdc ,_fcbea ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_abeg |=int (_cfgc );};};if _egc > 1{_bee <<=8;if _cgc < _abcd {_cfgc ,_cdc =_gbf .Bitmap .GetByte (_dfcg -_gbf .Bitmap .RowStride +1);if _cdc !=nil {return _dg .Wrap (_cdc ,_fcbea ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_bee |=int (_cfgc )<<5;};};for _fcc :=0;_fcc < _ebbe ;_fcc ++{if _gbf ._ffb {_ccga =_gbf .overrideAtTemplate1 (_dbbg ,_egdb +_fcc ,_egc ,int (_ebbd ),_fcc );_gbf ._gb .SetIndex (int32 (_ccga ));}else {_gbf ._gb .SetIndex (int32 (_dbbg ));};_aea ,_cdc =_gbf ._bad .DecodeBit (_gbf ._gb );if _cdc !=nil {return _dg .Wrap (_cdc ,_fcbea ,"");};_ebbd |=byte (_aea )<<uint (7-_fcc );_bgfc :=uint (8-_fcc );_dbbg =((_dbbg &0xefb)<<1)|_aea |((_abeg >>_bgfc )&0x8)|((_bee >>_bgfc )&0x200);};if _abcdb :=_gbf .Bitmap .SetByte (_ggfg ,_ebbd );_abcdb !=nil {return _dg .Wrap (_abcdb ,_fcbea ,"");};_ggfg ++;_dfcg ++;};return nil ;};type TableSegment struct{_faf _da .StreamReader ;_fdfdc int32 ;_afag int32 ;_bdeg int32 ;_cdgc int32 ;_fcbbe int32 ;};func (_cagdf *SymbolDictionary )GetDictionary ()([]*_dd .Bitmap ,error ){_c .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c-\u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");defer func (){_c .Log .Trace ("\u005b\u0053\u0059M\u0042\u004f\u004c\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");_c .Log .Trace ("\u005b\u0053Y\u004d\u0042\u004f\u004c\u002dD\u0049\u0043\u0054\u0049\u004fN\u0041\u0052\u0059\u005d\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020\u000a\u0045\u0078\u003a\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u000a\u006e\u0065\u0077\u003a\u0027\u0025\u0073\u0027",_cagdf ._bacd ,_cagdf ._cagg );}();if _cagdf ._bacd ==nil {var _fcf error ;if _cagdf .UseRefinementAggregation {_cagdf ._egbf =_cagdf .getSbSymCodeLen ();};if !_cagdf .IsHuffmanEncoded {if _fcf =_cagdf .setCodingStatistics ();_fcf !=nil {return nil ,_fcf ;};};_cagdf ._cagg =make ([]*_dd .Bitmap ,_cagdf .NumberOfNewSymbols );var _ffcb []int ;if _cagdf .IsHuffmanEncoded &&!_cagdf .UseRefinementAggregation {_ffcb =make ([]int ,_cagdf .NumberOfNewSymbols );};if _fcf =_cagdf .setSymbolsArray ();_fcf !=nil {return nil ,_fcf ;};var _bcb ,_aedf int64 ;_cagdf ._eaee =0;for _cagdf ._eaee < _cagdf .NumberOfNewSymbols {_aedf ,_fcf =_cagdf .decodeHeightClassDeltaHeight ();if _fcf !=nil {return nil ,_fcf ;};_bcb +=_aedf ;var _dbce ,_abfa uint32 ;_bgfa :=int64 (_cagdf ._eaee );for {var _eggc int64 ;_eggc ,_fcf =_cagdf .decodeDifferenceWidth ();if _fcf !=nil {return nil ,_fcf ;};if _eggc ==int64 (_d .MaxInt64 )||_cagdf ._eaee >=_cagdf .NumberOfNewSymbols {break ;};_dbce +=uint32 (_eggc );_abfa +=_dbce ;if !_cagdf .IsHuffmanEncoded ||_cagdf .UseRefinementAggregation {if !_cagdf .UseRefinementAggregation {_fcf =_cagdf .decodeDirectlyThroughGenericRegion (_dbce ,uint32 (_bcb ));if _fcf !=nil {return nil ,_fcf ;};}else {_fcf =_cagdf .decodeAggregate (_dbce ,uint32 (_bcb ));if _fcf !=nil {return nil ,_fcf ;};};}else if _cagdf .IsHuffmanEncoded &&!_cagdf .UseRefinementAggregation {_ffcb [_cagdf ._eaee ]=int (_dbce );};_cagdf ._eaee ++;};if _cagdf .IsHuffmanEncoded &&!_cagdf .UseRefinementAggregation {var _dfdd int64 ;if _cagdf .SdHuffBMSizeSelection ==0{var _ceegc _e .Tabler ;_ceegc ,_fcf =_e .GetStandardTable (1);if _fcf !=nil {return nil ,_fcf ;};_dfdd ,_fcf =_ceegc .Decode (_cagdf ._bbdfb );if _fcf !=nil {return nil ,_fcf ;};}else {_dfdd ,_fcf =_cagdf .huffDecodeBmSize ();if _fcf !=nil {return nil ,_fcf ;};};_cagdf ._bbdfb .Align ();var _cebf *_dd .Bitmap ;_cebf ,_fcf =_cagdf .decodeHeightClassCollectiveBitmap (_dfdd ,uint32 (_bcb ),_abfa );if _fcf !=nil {return nil ,_fcf ;};_fcf =_cagdf .decodeHeightClassBitmap (_cebf ,_bgfa ,int (_bcb ),_ffcb );if _fcf !=nil {return nil ,_fcf ;};};};_gebgd ,_fcf :=_cagdf .getToExportFlags ();if _fcf !=nil {return nil ,_fcf ;};_cagdf .setExportedSymbols (_gebgd );};return _cagdf ._bacd ,nil ;};type template1 struct{};func _dgc (_cae _da .StreamReader ,_cdf *Header )*GenericRefinementRegion {return &GenericRefinementRegion {_bff :_cae ,RegionInfo :NewRegionSegment (_cae ),_eg :_cdf ,_dc :&template0 {},_ea :&template1 {}};};func (_ebeg *TextRegion )Encode (w _da .BinaryWriter )(_dgcg int ,_cbec error ){const _dgfg ="\u0054\u0065\u0078\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u002e\u0045n\u0063\u006f\u0064\u0065";if _dgcg ,_cbec =_ebeg .RegionInfo .Encode (w );_cbec !=nil {return _dgcg ,_dg .Wrap (_cbec ,_dgfg ,"");};var _dadf int ;if _dadf ,_cbec =_ebeg .encodeFlags (w );_cbec !=nil {return _dgcg ,_dg .Wrap (_cbec ,_dgfg ,"");};_dgcg +=_dadf ;if _dadf ,_cbec =_ebeg .encodeSymbols (w );_cbec !=nil {return _dgcg ,_dg .Wrap (_cbec ,_dgfg ,"");};_dgcg +=_dadf ;return _dgcg ,nil ;};func (_cddd *GenericRefinementRegion )overrideAtTemplate0 (_ecf ,_bbdf ,_edbfa ,_bbff ,_fgg int )int {if _cddd ._aeg [0]{_ecf &=0xfff7;if _cddd .GrAtY [0]==0&&int (_cddd .GrAtX [0])>=-_fgg {_ecf |=(_bbff >>uint (7-(_fgg +int (_cddd .GrAtX [0])))&0x1)<<3;}else {_ecf |=_cddd .getPixel (_cddd .RegionBitmap ,_bbdf +int (_cddd .GrAtX [0]),_edbfa +int (_cddd .GrAtY [0]))<<3;};};if _cddd ._aeg [1]{_ecf &=0xefff;if _cddd .GrAtY [1]==0&&int (_cddd .GrAtX [1])>=-_fgg {_ecf |=(_bbff >>uint (7-(_fgg +int (_cddd .GrAtX [1])))&0x1)<<12;}else {_ecf |=_cddd .getPixel (_cddd .ReferenceBitmap ,_bbdf +int (_cddd .GrAtX [1]),_edbfa +int (_cddd .GrAtY [1]));};};return _ecf ;};func (_aedd *PatternDictionary )computeSegmentDataStructure ()error {_aedd .DataOffset =_aedd ._gfcf .StreamPosition ();_aedd .DataHeaderLength =_aedd .DataOffset -_aedd .DataHeaderOffset ;_aedd .DataLength =int64 (_aedd ._gfcf .Length ())-_aedd .DataHeaderLength ;return nil ;};func (_eac *GenericRefinementRegion )parseHeader ()(_bgaa error ){_c .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0048e\u0061\u0064e\u0072\u002e\u002e\u002e");_bgg :=_g .Now ();defer func (){if _bgaa ==nil {_c .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045G\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020h\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0069\u006e\u0069\u0073\u0068id\u0020\u0069\u006e\u003a\u0020\u0025\u0064\u0020\u006e\u0073",_g .Since (_bgg ).Nanoseconds ());}else {_c .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0068\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0073",_bgaa );};}();if _bgaa =_eac .RegionInfo .parseHeader ();_bgaa !=nil {return _bgaa ;};_ ,_bgaa =_eac ._bff .ReadBits (6);if _bgaa !=nil {return _bgaa ;};_eac .IsTPGROn ,_bgaa =_eac ._bff .ReadBool ();if _bgaa !=nil {return _bgaa ;};var _ada int ;_ada ,_bgaa =_eac ._bff .ReadBit ();if _bgaa !=nil {return _bgaa ;};_eac .TemplateID =int8 (_ada );switch _eac .TemplateID {case 0:_eac .Template =_eac ._dc ;if _bgaa =_eac .readAtPixels ();_bgaa !=nil {return ;};case 1:_eac .Template =_eac ._ea ;};return nil ;};type SegmentEncoder interface{Encode (_bfbd _da .BinaryWriter )(_egb int ,_abfdc error );};func (_gce *PageInformationSegment )readRequiresAuxiliaryBuffer ()error {_egec ,_afff :=_gce ._fbcb .ReadBit ();if _afff !=nil {return _afff ;};if _egec ==1{_gce ._afeeb =true ;};return nil ;};func (_dbac *TextRegion )GetRegionInfo ()*RegionSegment {return _dbac .RegionInfo };func (_dcdf *Header )readHeaderFlags ()error {const _agd ="\u0072e\u0061d\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006c\u0061\u0067\u0073";_afg ,_febe :=_dcdf .Reader .ReadBit ();if _febe !=nil {return _dg .Wrap (_febe ,_agd ,"r\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067");};if _afg !=0{_dcdf .RetainFlag =true ;};_afg ,_febe =_dcdf .Reader .ReadBit ();if _febe !=nil {return _dg .Wrap (_febe ,_agd ,"\u0070\u0061g\u0065\u0020\u0061s\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e");};if _afg !=0{_dcdf .PageAssociationFieldSize =true ;};_egca ,_febe :=_dcdf .Reader .ReadBits (6);if _febe !=nil {return _dg .Wrap (_febe ,_agd ,"\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065");};_dcdf .Type =Type (int (_egca ));return nil ;};func (_bafg *HalftoneRegion )renderPattern (_bbgb [][]int )(_ddbd error ){var _dfgb ,_afbd int ;for _gege :=0;_gege < int (_bafg .HGridHeight );_gege ++{for _bgfce :=0;_bgfce < int (_bafg .HGridWidth );_bgfce ++{_dfgb =_bafg .computeX (_gege ,_bgfce );_afbd =_bafg .computeY (_gege ,_bgfce );_adbb :=_bafg .Patterns [_bbgb [_gege ][_bgfce ]];if _ddbd =_dd .Blit (_adbb ,_bafg .HalftoneRegionBitmap ,_dfgb +int (_bafg .HGridX ),_afbd +int (_bafg .HGridY ),_bafg .CombinationOperator );_ddbd !=nil {return _ddbd ;};};};return nil ;};func (_gfffd *PageInformationSegment )Size ()int {return 19};type SymbolDictionary struct{_bbdfb _da .StreamReader ;SdrTemplate int8 ;SdTemplate int8 ;_abda bool ;_beee bool ;SdHuffAggInstanceSelection bool ;SdHuffBMSizeSelection int8 ;SdHuffDecodeWidthSelection int8 ;SdHuffDecodeHeightSelection int8 ;UseRefinementAggregation bool ;IsHuffmanEncoded bool ;SdATX []int8 ;SdATY []int8 ;SdrATX []int8 ;SdrATY []int8 ;NumberOfExportedSymbols uint32 ;NumberOfNewSymbols uint32 ;Header *Header ;_affg uint32 ;_ecfb []*_dd .Bitmap ;_eaee uint32 ;_cagg []*_dd .Bitmap ;_acfc _e .Tabler ;_bfee _e .Tabler ;_bgge _e .Tabler ;_dgac _e .Tabler ;_bacd []*_dd .Bitmap ;_acge []*_dd .Bitmap ;_bbbd *_ag .Decoder ;_ffcd *TextRegion ;_affc *GenericRegion ;_abff *GenericRefinementRegion ;_fbbf *_ag .DecoderStats ;_egda *_ag .DecoderStats ;_aeca *_ag .DecoderStats ;_gagc *_ag .DecoderStats ;_bbaf *_ag .DecoderStats ;_cdbg *_ag .DecoderStats ;_fdbd *_ag .DecoderStats ;_afbg *_ag .DecoderStats ;_aecf *_ag .DecoderStats ;_egbf int8 ;_fgfb *_dd .Bitmaps ;_deea []int ;_cbda map[int ]int ;_gega bool ;};func (_cbff *GenericRegion )setOverrideFlag (_afcb int ){_cbff .GBAtOverride [_afcb ]=true ;_cbff ._ffb =true ;};func (_fca *Header )Encode (w _da .BinaryWriter )(_eag int ,_cdee error ){const _aee ="\u0048\u0065\u0061d\u0065\u0072\u002e\u0057\u0072\u0069\u0074\u0065";var _afdc _da .BinaryWriter ;_c .Log .Trace ("\u005b\u0053\u0045G\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045\u0052\u005d[\u0045\u004e\u0043\u004f\u0044\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _cdee !=nil {_c .Log .Trace ("[\u0053\u0045\u0047\u004d\u0045\u004eT\u002d\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0045\u004e\u0043\u004f\u0044E\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020%\u0076",_cdee );}else {_c .Log .Trace ("\u005b\u0053\u0045\u0047ME\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0025\u0076",_fca );_c .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045N\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u005b\u0045\u004e\u0043O\u0044\u0045\u005d\u0020\u0046\u0069\u006ei\u0073\u0068\u0065\u0064");};}();w .FinishByte ();if _fca .SegmentData !=nil {_dbfg ,_gcba :=_fca .SegmentData .(SegmentEncoder );if !_gcba {return 0,_dg .Errorf (_aee ,"\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0064\u006f\u0065s\u006e\u0027\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074 \u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0045\u006e\u0063\u006f\u0064er\u0020\u0069\u006e\u0074\u0065\u0072\u0066\u0061\u0063\u0065",_fca .SegmentData );};_afdc =_da .BufferedMSB ();_eag ,_cdee =_dbfg .Encode (_afdc );if _cdee !=nil {return 0,_dg .Wrap (_cdee ,_aee ,"");};_fca .SegmentDataLength =uint64 (_eag );};if _fca .pageSize ()==4{_fca .PageAssociationFieldSize =true ;};var _eff int ;_eff ,_cdee =_fca .writeSegmentNumber (w );if _cdee !=nil {return 0,_dg .Wrap (_cdee ,_aee ,"");};_eag +=_eff ;if _cdee =_fca .writeFlags (w );_cdee !=nil {return _eag ,_dg .Wrap (_cdee ,_aee ,"");};_eag ++;_eff ,_cdee =_fca .writeReferredToCount (w );if _cdee !=nil {return 0,_dg .Wrap (_cdee ,_aee ,"");};_eag +=_eff ;_eff ,_cdee =_fca .writeReferredToSegments (w );if _cdee !=nil {return 0,_dg .Wrap (_cdee ,_aee ,"");};_eag +=_eff ;_eff ,_cdee =_fca .writeSegmentPageAssociation (w );if _cdee !=nil {return 0,_dg .Wrap (_cdee ,_aee ,"");};_eag +=_eff ;_eff ,_cdee =_fca .writeSegmentDataLength (w );if _cdee !=nil {return 0,_dg .Wrap (_cdee ,_aee ,"");};_eag +=_eff ;_fca .HeaderLength =int64 (_eag )-int64 (_fca .SegmentDataLength );if _afdc !=nil {if _ ,_cdee =w .Write (_afdc .Data ());_cdee !=nil {return _eag ,_dg .Wrap (_cdee ,_aee ,"\u0077r\u0069t\u0065\u0020\u0073\u0065\u0067m\u0065\u006et\u0020\u0064\u0061\u0074\u0061");};};return _eag ,nil ;};func (_egadf *TextRegion )decodeRdx ()(int64 ,error ){const _agbeb ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064x";if _egadf .IsHuffmanEncoded {if _egadf .SbHuffRDX ==3{if _egadf ._bgdf ==nil {var (_gccg int ;_fbae error ;);if _egadf .SbHuffFS ==3{_gccg ++;};if _egadf .SbHuffDS ==3{_gccg ++;};if _egadf .SbHuffDT ==3{_gccg ++;};if _egadf .SbHuffRDWidth ==3{_gccg ++;};if _egadf .SbHuffRDHeight ==3{_gccg ++;};_egadf ._bgdf ,_fbae =_egadf .getUserTable (_gccg );if _fbae !=nil {return 0,_dg .Wrap (_fbae ,_agbeb ,"");};};return _egadf ._bgdf .Decode (_egadf ._cfcd );};_cfcce ,_eefb :=_e .GetStandardTable (14+int (_egadf .SbHuffRDX ));if _eefb !=nil {return 0,_dg .Wrap (_eefb ,_agbeb ,"");};return _cfcce .Decode (_egadf ._cfcd );};_fdbda ,_gbebg :=_egadf ._egddd .DecodeInt (_egadf ._aad );if _gbebg !=nil {return 0,_dg .Wrap (_gbebg ,_agbeb ,"");};return int64 (_fdbda ),nil ;};func (_cacce *SymbolDictionary )readAtPixels (_agc int )error {_cacce .SdATX =make ([]int8 ,_agc );_cacce .SdATY =make ([]int8 ,_agc );var (_fcada byte ;_gfegf error ;);for _fbfbf :=0;_fbfbf < _agc ;_fbfbf ++{_fcada ,_gfegf =_cacce ._bbdfb .ReadByte ();if _gfegf !=nil {return _gfegf ;};_cacce .SdATX [_fbfbf ]=int8 (_fcada );_fcada ,_gfegf =_cacce ._bbdfb .ReadByte ();if _gfegf !=nil {return _gfegf ;};_cacce .SdATY [_fbfbf ]=int8 (_fcada );};return nil ;};func (_cafg *GenericRegion )setParametersWithAt (_gea bool ,_ede byte ,_eegf ,_cbfc bool ,_ecgb ,_aaee []int8 ,_gdae ,_ccff uint32 ,_gaac *_ag .DecoderStats ,_feg *_ag .Decoder ){_cafg .IsMMREncoded =_gea ;_cafg .GBTemplate =_ede ;_cafg .IsTPGDon =_eegf ;_cafg .GBAtX =_ecgb ;_cafg .GBAtY =_aaee ;_cafg .RegionSegment .BitmapHeight =_ccff ;_cafg .RegionSegment .BitmapWidth =_gdae ;_cafg ._deb =nil ;_cafg .Bitmap =nil ;if _gaac !=nil {_cafg ._gb =_gaac ;};if _feg !=nil {_cafg ._bad =_feg ;};_c .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049O\u004e\u005d\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073\u0020\u0053\u0044\u0041t\u003a\u0020\u0025\u0073",_cafg );};func (_bcd *Header )readNumberOfReferredToSegments (_fcaa _da .StreamReader )(uint64 ,error ){const _aggd ="\u0072\u0065\u0061\u0064\u004e\u0075\u006d\u0062\u0065\u0072O\u0066\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";_egeg ,_dfce :=_fcaa .ReadBits (3);if _dfce !=nil {return 0,_dg .Wrap (_dfce ,_aggd ,"\u0063\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0072\u0074\u0073");};_egeg &=0xf;var _afad []byte ;if _egeg <=4{_afad =make ([]byte ,5);for _cfda :=0;_cfda <=4;_cfda ++{_fegd ,_eebc :=_fcaa .ReadBit ();if _eebc !=nil {return 0,_dg .Wrap (_eebc ,_aggd ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_afad [_cfda ]=byte (_fegd );};}else {_egeg ,_dfce =_fcaa .ReadBits (29);if _dfce !=nil {return 0,_dfce ;};_egeg &=_d .MaxInt32 ;_ccba :=(_egeg +8)>>3;_ccba <<=3;_afad =make ([]byte ,_ccba );var _ebcg uint64 ;for _ebcg =0;_ebcg < _ccba ;_ebcg ++{_fce ,_geaf :=_fcaa .ReadBit ();if _geaf !=nil {return 0,_dg .Wrap (_geaf ,_aggd ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_afad [_ebcg ]=byte (_fce );};};return _egeg ,nil ;};func (_ggee *TableSegment )StreamReader ()_da .StreamReader {return _ggee ._faf };type Pager interface{GetSegment (int )(*Header ,error );GetBitmap ()(*_dd .Bitmap ,error );};func (_ggab *SymbolDictionary )setExportedSymbols (_fbag []int ){for _bagf :=uint32 (0);_bagf < _ggab ._affg +_ggab .NumberOfNewSymbols ;_bagf ++{if _fbag [_bagf ]==1{var _fedf *_dd .Bitmap ;if _bagf < _ggab ._affg {_fedf =_ggab ._ecfb [_bagf ];}else {_fedf =_ggab ._cagg [_bagf -_ggab ._affg ];};_c .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u002d\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u0020\u0041\u0064\u0064 E\u0078\u0070\u006fr\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027%\u0073\u0027",_fedf );_ggab ._bacd =append (_ggab ._bacd ,_fedf );};};};func (_bae *GenericRefinementRegion )decodeTemplate (_fbb ,_gf ,_eedf ,_efeb ,_bfc ,_fba ,_aaf ,_cbgc ,_cee ,_cddb int ,_ebc templater )(_afc error ){var (_fdd ,_adge ,_gge ,_gacc ,_aaga int16 ;_ebcb ,_bcg ,_deg ,_cfg int ;_bac byte ;);if _cee >=1&&(_cee -1)< _bae .ReferenceBitmap .Height {_bac ,_afc =_bae .ReferenceBitmap .GetByte (_cddb -_efeb );if _afc !=nil {return ;};_ebcb =int (_bac );};if _cee >=0&&(_cee )< _bae .ReferenceBitmap .Height {_bac ,_afc =_bae .ReferenceBitmap .GetByte (_cddb );if _afc !=nil {return ;};_bcg =int (_bac );};if _cee >=-1&&(_cee +1)< _bae .ReferenceBitmap .Height {_bac ,_afc =_bae .ReferenceBitmap .GetByte (_cddb +_efeb );if _afc !=nil {return ;};_deg =int (_bac );};_cddb ++;if _fbb >=1{_bac ,_afc =_bae .RegionBitmap .GetByte (_cbgc -_eedf );if _afc !=nil {return ;};_cfg =int (_bac );};_cbgc ++;_fe :=_bae .ReferenceDX %8;_eda :=6+_fe ;_dcfc :=_cddb %_efeb ;if _eda >=0{if _eda < 8{_fdd =int16 (_ebcb >>uint (_eda ))&0x07;};if _eda < 8{_adge =int16 (_bcg >>uint (_eda ))&0x07;};if _eda < 8{_gge =int16 (_deg >>uint (_eda ))&0x07;};if _eda ==6&&_dcfc > 1{if _cee >=1&&(_cee -1)< _bae .ReferenceBitmap .Height {_bac ,_afc =_bae .ReferenceBitmap .GetByte (_cddb -_efeb -2);if _afc !=nil {return _afc ;};_fdd |=int16 (_bac <<2)&0x04;};if _cee >=0&&_cee < _bae .ReferenceBitmap .Height {_bac ,_afc =_bae .ReferenceBitmap .GetByte (_cddb -2);if _afc !=nil {return _afc ;};_adge |=int16 (_bac <<2)&0x04;};if _cee >=-1&&_cee +1< _bae .ReferenceBitmap .Height {_bac ,_afc =_bae .ReferenceBitmap .GetByte (_cddb +_efeb -2);if _afc !=nil {return _afc ;};_gge |=int16 (_bac <<2)&0x04;};};if _eda ==0{_ebcb =0;_bcg =0;_deg =0;if _dcfc < _efeb -1{if _cee >=1&&_cee -1< _bae .ReferenceBitmap .Height {_bac ,_afc =_bae .ReferenceBitmap .GetByte (_cddb -_efeb );if _afc !=nil {return _afc ;};_ebcb =int (_bac );};if _cee >=0&&_cee < _bae .ReferenceBitmap .Height {_bac ,_afc =_bae .ReferenceBitmap .GetByte (_cddb );if _afc !=nil {return _afc ;};_bcg =int (_bac );};if _cee >=-1&&_cee +1< _bae .ReferenceBitmap .Height {_bac ,_afc =_bae .ReferenceBitmap .GetByte (_cddb +_efeb );if _afc !=nil {return _afc ;};_deg =int (_bac );};};_cddb ++;};}else {_fdd =int16 (_ebcb <<1)&0x07;_adge =int16 (_bcg <<1)&0x07;_gge =int16 (_deg <<1)&0x07;_ebcb =0;_bcg =0;_deg =0;if _dcfc < _efeb -1{if _cee >=1&&_cee -1< _bae .ReferenceBitmap .Height {_bac ,_afc =_bae .ReferenceBitmap .GetByte (_cddb -_efeb );if _afc !=nil {return _afc ;};_ebcb =int (_bac );};if _cee >=0&&_cee < _bae .ReferenceBitmap .Height {_bac ,_afc =_bae .ReferenceBitmap .GetByte (_cddb );if _afc !=nil {return _afc ;};_bcg =int (_bac );};if _cee >=-1&&_cee +1< _bae .ReferenceBitmap .Height {_bac ,_afc =_bae .ReferenceBitmap .GetByte (_cddb +_efeb );if _afc !=nil {return _afc ;};_deg =int (_bac );};_cddb ++;};_fdd |=int16 ((_ebcb >>7)&0x07);_adge |=int16 ((_bcg >>7)&0x07);_gge |=int16 ((_deg >>7)&0x07);};_gacc =int16 (_cfg >>6);_aaga =0;_acfg :=(2-_fe )%8;_ebcb <<=uint (_acfg );_bcg <<=uint (_acfg );_deg <<=uint (_acfg );_cfg <<=2;var _gedc int ;for _ggfc :=0;_ggfc < _gf ;_ggfc ++{_gacg :=_ggfc &0x07;_ccf :=_ebc .form (_fdd ,_adge ,_gge ,_gacc ,_aaga );if _bae ._ca {_bac ,_afc =_bae .RegionBitmap .GetByte (_bae .RegionBitmap .GetByteIndex (_ggfc ,_fbb ));if _afc !=nil {return _afc ;};_bae ._bbc .SetIndex (int32 (_bae .overrideAtTemplate0 (int (_ccf ),_ggfc ,_fbb ,int (_bac ),_gacg )));}else {_bae ._bbc .SetIndex (int32 (_ccf ));};_gedc ,_afc =_bae ._fb .DecodeBit (_bae ._bbc );if _afc !=nil {return _afc ;};if _afc =_bae .RegionBitmap .SetPixel (_ggfc ,_fbb ,byte (_gedc ));_afc !=nil {return _afc ;};_fdd =((_fdd <<1)|0x01&int16 (_ebcb >>7))&0x07;_adge =((_adge <<1)|0x01&int16 (_bcg >>7))&0x07;_gge =((_gge <<1)|0x01&int16 (_deg >>7))&0x07;_gacc =((_gacc <<1)|0x01&int16 (_cfg >>7))&0x07;_aaga =int16 (_gedc );if (_ggfc -int (_bae .ReferenceDX ))%8==5{_ebcb =0;_bcg =0;_deg =0;if ((_ggfc -int (_bae .ReferenceDX ))/8)+1< _bae .ReferenceBitmap .RowStride {if _cee >=1&&(_cee -1)< _bae .ReferenceBitmap .Height {_bac ,_afc =_bae .ReferenceBitmap .GetByte (_cddb -_efeb );if _afc !=nil {return _afc ;};_ebcb =int (_bac );};if _cee >=0&&_cee < _bae .ReferenceBitmap .Height {_bac ,_afc =_bae .ReferenceBitmap .GetByte (_cddb );if _afc !=nil {return _afc ;};_bcg =int (_bac );};if _cee >=-1&&(_cee +1)< _bae .ReferenceBitmap .Height {_bac ,_afc =_bae .ReferenceBitmap .GetByte (_cddb +_efeb );if _afc !=nil {return _afc ;};_deg =int (_bac );};};_cddb ++;}else {_ebcb <<=1;_bcg <<=1;_deg <<=1;};if _gacg ==5&&_fbb >=1{if ((_ggfc >>3)+1)>=_bae .RegionBitmap .RowStride {_cfg =0;}else {_bac ,_afc =_bae .RegionBitmap .GetByte (_cbgc -_eedf );if _afc !=nil {return _afc ;};_cfg =int (_bac );};_cbgc ++;}else {_cfg <<=1;};};return nil ;};func (_dcf *GenericRefinementRegion )decodeTypicalPredictedLineTemplate1 (_bca ,_bgb ,_bfg ,_acgd ,_gdd ,_db ,_eb ,_ddg ,_bec int )(_aebe error ){var (_cbg ,_cef int ;_eae ,_gga int ;_bde ,_edbf int ;_cab byte ;);if _bca > 0{_cab ,_aebe =_dcf .RegionBitmap .GetByte (_eb -_bfg );if _aebe !=nil {return ;};_eae =int (_cab );};if _ddg > 0&&_ddg <=_dcf .ReferenceBitmap .Height {_cab ,_aebe =_dcf .ReferenceBitmap .GetByte (_bec -_acgd +_db );if _aebe !=nil {return ;};_gga =int (_cab )<<2;};if _ddg >=0&&_ddg < _dcf .ReferenceBitmap .Height {_cab ,_aebe =_dcf .ReferenceBitmap .GetByte (_bec +_db );if _aebe !=nil {return ;};_bde =int (_cab );};if _ddg > -2&&_ddg < _dcf .ReferenceBitmap .Height -1{_cab ,_aebe =_dcf .ReferenceBitmap .GetByte (_bec +_acgd +_db );if _aebe !=nil {return ;};_edbf =int (_cab );};_cbg =((_eae >>5)&0x6)|((_edbf >>2)&0x30)|(_bde &0xc0)|(_gga &0x200);_cef =((_edbf >>2)&0x70)|(_bde &0xc0)|(_gga &0x700);var _ged int ;for _adg :=0;_adg < _gdd ;_adg =_ged {var (_eea int ;_dfa int ;);_ged =_adg +8;if _eea =_bgb -_adg ;_eea > 8{_eea =8;};_cdd :=_ged < _bgb ;_ade :=_ged < _dcf .ReferenceBitmap .Width ;_abed :=_db +1;if _bca > 0{_cab =0;if _cdd {_cab ,_aebe =_dcf .RegionBitmap .GetByte (_eb -_bfg +1);if _aebe !=nil {return ;};};_eae =(_eae <<8)|int (_cab );};if _ddg > 0&&_ddg <=_dcf .ReferenceBitmap .Height {var _ecc int ;if _ade {_cab ,_aebe =_dcf .ReferenceBitmap .GetByte (_bec -_acgd +_abed );if _aebe !=nil {return ;};_ecc =int (_cab )<<2;};_gga =(_gga <<8)|_ecc ;};if _ddg >=0&&_ddg < _dcf .ReferenceBitmap .Height {_cab =0;if _ade {_cab ,_aebe =_dcf .ReferenceBitmap .GetByte (_bec +_abed );if _aebe !=nil {return ;};};_bde =(_bde <<8)|int (_cab );};if _ddg > -2&&_ddg < (_dcf .ReferenceBitmap .Height -1){_cab =0;if _ade {_cab ,_aebe =_dcf .ReferenceBitmap .GetByte (_bec +_acgd +_abed );if _aebe !=nil {return ;};};_edbf =(_edbf <<8)|int (_cab );};for _bbd :=0;_bbd < _eea ;_bbd ++{var _agge int ;_cgd :=(_cef >>4)&0x1ff;switch _cgd {case 0x1ff:_agge =1;case 0x00:_agge =0;default:_dcf ._bbc .SetIndex (int32 (_cbg ));_agge ,_aebe =_dcf ._fb .DecodeBit (_dcf ._bbc );if _aebe !=nil {return ;};};_cbf :=uint (7-_bbd );_dfa |=int (_agge <<_cbf );_cbg =((_cbg &0x0d6)<<1)|_agge |(_eae >>_cbf +5)&0x002|((_edbf >>_cbf +2)&0x010)|((_bde >>_cbf )&0x040)|((_gga >>_cbf )&0x200);_cef =((_cef &0xdb)<<1)|((_edbf >>_cbf +2)&0x010)|((_bde >>_cbf )&0x080)|((_gga >>_cbf )&0x400);};_aebe =_dcf .RegionBitmap .SetByte (_eb ,byte (_dfa ));if _aebe !=nil {return ;};_eb ++;_bec ++;};return nil ;};func (_egee *GenericRegion )overrideAtTemplate0b (_gffc ,_ffbf ,_daaa ,_afe ,_edf ,_fgca int )int {if _egee .GBAtOverride [0]{_gffc &=0xFFFD;if _egee .GBAtY [0]==0&&_egee .GBAtX [0]>=-int8 (_edf ){_gffc |=(_afe >>uint (int8 (_fgca )-_egee .GBAtX [0]&0x1))<<1;}else {_gffc |=int (_egee .getPixel (_ffbf +int (_egee .GBAtX [0]),_daaa +int (_egee .GBAtY [0])))<<1;};};if _egee .GBAtOverride [1]{_gffc &=0xDFFF;if _egee .GBAtY [1]==0&&_egee .GBAtX [1]>=-int8 (_edf ){_gffc |=(_afe >>uint (int8 (_fgca )-_egee .GBAtX [1]&0x1))<<13;}else {_gffc |=int (_egee .getPixel (_ffbf +int (_egee .GBAtX [1]),_daaa +int (_egee .GBAtY [1])))<<13;};};if _egee .GBAtOverride [2]{_gffc &=0xFDFF;if _egee .GBAtY [2]==0&&_egee .GBAtX [2]>=-int8 (_edf ){_gffc |=(_afe >>uint (int8 (_fgca )-_egee .GBAtX [2]&0x1))<<9;}else {_gffc |=int (_egee .getPixel (_ffbf +int (_egee .GBAtX [2]),_daaa +int (_egee .GBAtY [2])))<<9;};};if _egee .GBAtOverride [3]{_gffc &=0xBFFF;if _egee .GBAtY [3]==0&&_egee .GBAtX [3]>=-int8 (_edf ){_gffc |=(_afe >>uint (int8 (_fgca )-_egee .GBAtX [3]&0x1))<<14;}else {_gffc |=int (_egee .getPixel (_ffbf +int (_egee .GBAtX [3]),_daaa +int (_egee .GBAtY [3])))<<14;};};if _egee .GBAtOverride [4]{_gffc &=0xEFFF;if _egee .GBAtY [4]==0&&_egee .GBAtX [4]>=-int8 (_edf ){_gffc |=(_afe >>uint (int8 (_fgca )-_egee .GBAtX [4]&0x1))<<12;}else {_gffc |=int (_egee .getPixel (_ffbf +int (_egee .GBAtX [4]),_daaa +int (_egee .GBAtY [4])))<<12;};};if _egee .GBAtOverride [5]{_gffc &=0xFFDF;if _egee .GBAtY [5]==0&&_egee .GBAtX [5]>=-int8 (_edf ){_gffc |=(_afe >>uint (int8 (_fgca )-_egee .GBAtX [5]&0x1))<<5;}else {_gffc |=int (_egee .getPixel (_ffbf +int (_egee .GBAtX [5]),_daaa +int (_egee .GBAtY [5])))<<5;};};if _egee .GBAtOverride [6]{_gffc &=0xFFFB;if _egee .GBAtY [6]==0&&_egee .GBAtX [6]>=-int8 (_edf ){_gffc |=(_afe >>uint (int8 (_fgca )-_egee .GBAtX [6]&0x1))<<2;}else {_gffc |=int (_egee .getPixel (_ffbf +int (_egee .GBAtX [6]),_daaa +int (_egee .GBAtY [6])))<<2;};};if _egee .GBAtOverride [7]{_gffc &=0xFFF7;if _egee .GBAtY [7]==0&&_egee .GBAtX [7]>=-int8 (_edf ){_gffc |=(_afe >>uint (int8 (_fgca )-_egee .GBAtX [7]&0x1))<<3;}else {_gffc |=int (_egee .getPixel (_ffbf +int (_egee .GBAtX [7]),_daaa +int (_egee .GBAtY [7])))<<3;};};if _egee .GBAtOverride [8]{_gffc &=0xF7FF;if _egee .GBAtY [8]==0&&_egee .GBAtX [8]>=-int8 (_edf ){_gffc |=(_afe >>uint (int8 (_fgca )-_egee .GBAtX [8]&0x1))<<11;}else {_gffc |=int (_egee .getPixel (_ffbf +int (_egee .GBAtX [8]),_daaa +int (_egee .GBAtY [8])))<<11;};};if _egee .GBAtOverride [9]{_gffc &=0xFFEF;if _egee .GBAtY [9]==0&&_egee .GBAtX [9]>=-int8 (_edf ){_gffc |=(_afe >>uint (int8 (_fgca )-_egee .GBAtX [9]&0x1))<<4;}else {_gffc |=int (_egee .getPixel (_ffbf +int (_egee .GBAtX [9]),_daaa +int (_egee .GBAtY [9])))<<4;};};if _egee .GBAtOverride [10]{_gffc &=0x7FFF;if _egee .GBAtY [10]==0&&_egee .GBAtX [10]>=-int8 (_edf ){_gffc |=(_afe >>uint (int8 (_fgca )-_egee .GBAtX [10]&0x1))<<15;}else {_gffc |=int (_egee .getPixel (_ffbf +int (_egee .GBAtX [10]),_daaa +int (_egee .GBAtY [10])))<<15;};};if _egee .GBAtOverride [11]{_gffc &=0xFDFF;if _egee .GBAtY [11]==0&&_egee .GBAtX [11]>=-int8 (_edf ){_gffc |=(_afe >>uint (int8 (_fgca )-_egee .GBAtX [11]&0x1))<<10;}else {_gffc |=int (_egee .getPixel (_ffbf +int (_egee .GBAtX [11]),_daaa +int (_egee .GBAtY [11])))<<10;};};return _gffc ;};func (_gdcd *GenericRegion )setParameters (_bcge bool ,_afee ,_dcg int64 ,_gaag ,_cfced uint32 ){_gdcd .IsMMREncoded =_bcge ;_gdcd .DataOffset =_afee ;_gdcd .DataLength =_dcg ;_gdcd .RegionSegment .BitmapHeight =_gaag ;_gdcd .RegionSegment .BitmapWidth =_cfced ;_gdcd ._deb =nil ;_gdcd .Bitmap =nil ;};func (_abcfc *GenericRegion )updateOverrideFlags ()error {const _ebcd ="\u0075\u0070\u0064\u0061te\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _abcfc .GBAtX ==nil ||_abcfc .GBAtY ==nil {return nil ;};if len (_abcfc .GBAtX )!=len (_abcfc .GBAtY ){return _dg .Errorf (_ebcd ,"i\u006eco\u0073i\u0073t\u0065\u006e\u0074\u0020\u0041T\u0020\u0070\u0069x\u0065\u006c\u002e\u0020\u0041m\u006f\u0075\u006et\u0020\u006f\u0066\u0020\u0027\u0078\u0027\u0020\u0070\u0069\u0078e\u006c\u0073\u003a %d\u002c\u0020\u0041\u006d\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0027\u0079\u0027\u0020\u0070\u0069\u0078e\u006cs\u003a\u0020\u0025\u0064",len (_abcfc .GBAtX ),len (_abcfc .GBAtY ));};_abcfc .GBAtOverride =make ([]bool ,len (_abcfc .GBAtX ));switch _abcfc .GBTemplate {case 0:if !_abcfc .UseExtTemplates {if _abcfc .GBAtX [0]!=3||_abcfc .GBAtY [0]!=-1{_abcfc .setOverrideFlag (0);};if _abcfc .GBAtX [1]!=-3||_abcfc .GBAtY [1]!=-1{_abcfc .setOverrideFlag (1);};if _abcfc .GBAtX [2]!=2||_abcfc .GBAtY [2]!=-2{_abcfc .setOverrideFlag (2);};if _abcfc .GBAtX [3]!=-2||_abcfc .GBAtY [3]!=-2{_abcfc .setOverrideFlag (3);};}else {if _abcfc .GBAtX [0]!=-2||_abcfc .GBAtY [0]!=0{_abcfc .setOverrideFlag (0);};if _abcfc .GBAtX [1]!=0||_abcfc .GBAtY [1]!=-2{_abcfc .setOverrideFlag (1);};if _abcfc .GBAtX [2]!=-2||_abcfc .GBAtY [2]!=-1{_abcfc .setOverrideFlag (2);};if _abcfc .GBAtX [3]!=-1||_abcfc .GBAtY [3]!=-2{_abcfc .setOverrideFlag (3);};if _abcfc .GBAtX [4]!=1||_abcfc .GBAtY [4]!=-2{_abcfc .setOverrideFlag (4);};if _abcfc .GBAtX [5]!=2||_abcfc .GBAtY [5]!=-1{_abcfc .setOverrideFlag (5);};if _abcfc .GBAtX [6]!=-3||_abcfc .GBAtY [6]!=0{_abcfc .setOverrideFlag (6);};if _abcfc .GBAtX [7]!=-4||_abcfc .GBAtY [7]!=0{_abcfc .setOverrideFlag (7);};if _abcfc .GBAtX [8]!=2||_abcfc .GBAtY [8]!=-2{_abcfc .setOverrideFlag (8);};if _abcfc .GBAtX [9]!=3||_abcfc .GBAtY [9]!=-1{_abcfc .setOverrideFlag (9);};if _abcfc .GBAtX [10]!=-2||_abcfc .GBAtY [10]!=-2{_abcfc .setOverrideFlag (10);};if _abcfc .GBAtX [11]!=-3||_abcfc .GBAtY [11]!=-1{_abcfc .setOverrideFlag (11);};};case 1:if _abcfc .GBAtX [0]!=3||_abcfc .GBAtY [0]!=-1{_abcfc .setOverrideFlag (0);};case 2:if _abcfc .GBAtX [0]!=2||_abcfc .GBAtY [0]!=-1{_abcfc .setOverrideFlag (0);};case 3:if _abcfc .GBAtX [0]!=2||_abcfc .GBAtY [0]!=-1{_abcfc .setOverrideFlag (0);};};return nil ;};func (_abcc *HalftoneRegion )computeSegmentDataStructure ()error {_abcc .DataOffset =_abcc ._geg .StreamPosition ();_abcc .DataHeaderLength =_abcc .DataOffset -_abcc .DataHeaderOffset ;_abcc .DataLength =int64 (_abcc ._geg .Length ())-_abcc .DataHeaderLength ;return nil ;};func (_cd *GenericRefinementRegion )GetRegionInfo ()*RegionSegment {return _cd .RegionInfo };func (_bcaea *SymbolDictionary )huffDecodeBmSize ()(int64 ,error ){if _bcaea ._bgge ==nil {var (_gbeb int ;_efbe error ;);if _bcaea .SdHuffDecodeHeightSelection ==3{_gbeb ++;};if _bcaea .SdHuffDecodeWidthSelection ==3{_gbeb ++;};_bcaea ._bgge ,_efbe =_bcaea .getUserTable (_gbeb );if _efbe !=nil {return 0,_efbe ;};};return _bcaea ._bgge .Decode (_bcaea ._bbdfb );};func (_egbe *PageInformationSegment )Init (h *Header ,r _da .StreamReader )(_fea error ){_egbe ._fbcb =r ;if _fea =_egbe .parseHeader ();_fea !=nil {return _dg .Wrap (_fea ,"P\u0061\u0067\u0065\u0049\u006e\u0066o\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065g\u006d\u0065\u006et\u002eI\u006e\u0069\u0074","");};return nil ;};func (_bgbg *PatternDictionary )GetDictionary ()([]*_dd .Bitmap ,error ){if _bgbg .Patterns !=nil {return _bgbg .Patterns ,nil ;};if !_bgbg .IsMMREncoded {_bgbg .setGbAtPixels ();};_agbe :=NewGenericRegion (_bgbg ._gfcf );_agbe .setParametersMMR (_bgbg .IsMMREncoded ,_bgbg .DataOffset ,_bgbg .DataLength ,uint32 (_bgbg .HdpHeight ),(_bgbg .GrayMax +1)*uint32 (_bgbg .HdpWidth ),_bgbg .HDTemplate ,false ,false ,_bgbg .GBAtX ,_bgbg .GBAtY );_baga ,_fffee :=_agbe .GetRegionBitmap ();if _fffee !=nil {return nil ,_fffee ;};if _fffee =_bgbg .extractPatterns (_baga );_fffee !=nil {return nil ,_fffee ;};return _bgbg .Patterns ,nil ;};func (_bbcd *SymbolDictionary )getSbSymCodeLen ()int8 {_adae :=int8 (_d .Ceil (_d .Log (float64 (_bbcd ._affg +_bbcd .NumberOfNewSymbols ))/_d .Log (2)));if _bbcd .IsHuffmanEncoded &&_adae < 1{return 1;};return _adae ;};func (_bccb *TextRegion )checkInput ()error {const _gdca ="\u0063\u0068\u0065\u0063\u006b\u0049\u006e\u0070\u0075\u0074";if !_bccb .UseRefinement {if _bccb .SbrTemplate !=0{_c .Log .Debug ("\u0053\u0062\u0072Te\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_bccb .SbrTemplate =0;};};if _bccb .SbHuffFS ==2||_bccb .SbHuffRDWidth ==2||_bccb .SbHuffRDHeight ==2||_bccb .SbHuffRDX ==2||_bccb .SbHuffRDY ==2{return _dg .Error (_gdca ,"h\u0075\u0066\u0066\u006d\u0061\u006e \u0066\u006c\u0061\u0067\u0020\u0076a\u006c\u0075\u0065\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074e\u0064");};if !_bccb .UseRefinement {if _bccb .SbHuffRSize !=0{_c .Log .Debug ("\u0053\u0062\u0048uf\u0066\u0052\u0053\u0069\u007a\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_bccb .SbHuffRSize =0;};if _bccb .SbHuffRDY !=0{_c .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044Y\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_bccb .SbHuffRDY =0;};if _bccb .SbHuffRDX !=0{_c .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044X\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_bccb .SbHuffRDX =0;};if _bccb .SbHuffRDWidth !=0{_c .Log .Debug ("\u0053b\u0048\u0075\u0066\u0066R\u0044\u0057\u0069\u0064\u0074h\u0020s\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u00200");_bccb .SbHuffRDWidth =0;};if _bccb .SbHuffRDHeight !=0{_c .Log .Debug ("\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069g\u0068\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0030");_bccb .SbHuffRDHeight =0;};};return nil ;};func (_gabfc *PatternDictionary )extractPatterns (_eaea *_dd .Bitmap )error {var _efbd int ;_bed :=make ([]*_dd .Bitmap ,_gabfc .GrayMax +1);for _efbd <=int (_gabfc .GrayMax ){_ageg :=int (_gabfc .HdpWidth )*_efbd ;_dda :=_a .Rect (_ageg ,0,_ageg +int (_gabfc .HdpWidth ),int (_gabfc .HdpHeight ));_efbg ,_edbcg :=_dd .Extract (_dda ,_eaea );if _edbcg !=nil {return _edbcg ;};_bed [_efbd ]=_efbg ;_efbd ++;};_gabfc .Patterns =_bed ;return nil ;};func (_fffb *SymbolDictionary )checkInput ()error {if _fffb .SdHuffDecodeHeightSelection ==2{_c .Log .Debug ("\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0048\u0065\u0069g\u0068\u0020\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061l\u0075\u0065\u0020\u006e\u006f\u0074 \u0070\u0065r\u006d\u0069t\u0074e\u0064",_fffb .SdHuffDecodeHeightSelection );};if _fffb .SdHuffDecodeWidthSelection ==2{_c .Log .Debug ("\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0057\u0069\u0064t\u0068\u0020\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061l\u0075\u0065\u0020\u006e\u006f\u0074 \u0070\u0065r\u006d\u0069t\u0074e\u0064",_fffb .SdHuffDecodeWidthSelection );};if _fffb .IsHuffmanEncoded {if _fffb .SdTemplate !=0{_c .Log .Debug ("\u0053\u0044T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e \u0030\u0029",_fffb .SdTemplate );};if !_fffb .UseRefinementAggregation {if !_fffb .UseRefinementAggregation {if _fffb ._abda {_c .Log .Debug ("\u0049\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074ex\u0074\u0052\u0065\u0074\u0061\u0069n\u0065\u0064\u0020\u003d\u0020\u0074\u0072\u0075\u0065\u0020\u0028\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0066\u0061\u006cs\u0065\u0029");_fffb ._abda =false ;};if _fffb ._beee {_c .Log .Debug ("\u0069s\u0043\u006fd\u0069\u006e\u0067\u0043o\u006e\u0074\u0065x\u0074\u0055\u0073\u0065\u0064\u0020\u003d\u0020\u0074ru\u0065\u0020\u0028s\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020f\u0061\u006cs\u0065\u0029");_fffb ._beee =false ;};};};}else {if _fffb .SdHuffBMSizeSelection !=0{_c .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066B\u004d\u0053\u0069\u007a\u0065\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");_fffb .SdHuffBMSizeSelection =0;};if _fffb .SdHuffDecodeWidthSelection !=0{_c .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068\u0053\u0065\u006c\u0065\u0063\u0074\u0069o\u006e\u0020\u0073\u0068\u006fu\u006c\u0064 \u0062\u0065\u0020\u0030");_fffb .SdHuffDecodeWidthSelection =0;};if _fffb .SdHuffDecodeHeightSelection !=0{_c .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0048e\u0069\u0067\u0068\u0074\u0053\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");_fffb .SdHuffDecodeHeightSelection =0;};};if !_fffb .UseRefinementAggregation {if _fffb .SdrTemplate !=0{_c .Log .Debug ("\u0053\u0044\u0052\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u003d\u0020\u0025\u0064\u0020\u0028s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_fffb .SdrTemplate );_fffb .SdrTemplate =0;};};if !_fffb .IsHuffmanEncoded ||!_fffb .UseRefinementAggregation {if _fffb .SdHuffAggInstanceSelection {_c .Log .Debug ("\u0053d\u0048\u0075f\u0066\u0041\u0067g\u0049\u006e\u0073\u0074\u0061\u006e\u0063e\u0053\u0065\u006c\u0065\u0063\u0074i\u006f\u006e\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_fffb .SdHuffAggInstanceSelection );};};return nil ;};func _ggce (_baaa _da .StreamReader ,_adee *Header )*TextRegion {_aggff :=&TextRegion {_cfcd :_baaa ,Header :_adee ,RegionInfo :NewRegionSegment (_baaa )};return _aggff ;};var (_ Regioner =&TextRegion {};_ Segmenter =&TextRegion {};);func (_dbfcb *TextRegion )decodeSymbolInstances ()error {_cacg ,_ceab :=_dbfcb .decodeStripT ();if _ceab !=nil {return _ceab ;};var (_faga int64 ;_ggae uint32 ;);for _ggae < _dbfcb .NumberOfSymbolInstances {_fefb ,_dfbag :=_dbfcb .decodeDT ();if _dfbag !=nil {return _dfbag ;};_cacg +=_fefb ;var _bbcb int64 ;_gfdd :=true ;_dbfcb ._fgcc =0;for {if _gfdd {_bbcb ,_dfbag =_dbfcb .decodeDfs ();if _dfbag !=nil {return _dfbag ;};_faga +=_bbcb ;_dbfcb ._fgcc =_faga ;_gfdd =false ;}else {_dbd ,_ddab :=_dbfcb .decodeIds ();if _ddab !=nil {return _ddab ;};if _dbd ==_d .MaxInt32 ||_ggae >=_dbfcb .NumberOfSymbolInstances {break ;};_dbfcb ._fgcc +=_dbd +int64 (_dbfcb .SbdsOffset );};_dbfb ,_cdda :=_dbfcb .decodeCurrentT ();if _cdda !=nil {return _cdda ;};_fgbda :=_cacg +_dbfb ;_afdge ,_cdda :=_dbfcb .decodeID ();if _cdda !=nil {return _cdda ;};_cfbc ,_cdda :=_dbfcb .decodeRI ();if _cdda !=nil {return _cdda ;};_adaed ,_cdda :=_dbfcb .decodeIb (_cfbc ,_afdge );if _cdda !=nil {return _cdda ;};if _cdda =_dbfcb .blit (_adaed ,_fgbda );_cdda !=nil {return _cdda ;};_ggae ++;};};return nil ;};func (_eaba *TextRegion )decodeDT ()(_geca int64 ,_aedg error ){if _eaba .IsHuffmanEncoded {if _eaba .SbHuffDT ==3{_geca ,_aedg =_eaba ._ecfe .Decode (_eaba ._cfcd );if _aedg !=nil {return 0,_aedg ;};}else {var _aegea _e .Tabler ;_aegea ,_aedg =_e .GetStandardTable (11+int (_eaba .SbHuffDT ));if _aedg !=nil {return 0,_aedg ;};_geca ,_aedg =_aegea .Decode (_eaba ._cfcd );if _aedg !=nil {return 0,_aedg ;};};}else {var _gdff int32 ;_gdff ,_aedg =_eaba ._egddd .DecodeInt (_eaba ._afgf );if _aedg !=nil {return ;};_geca =int64 (_gdff );};_geca *=int64 (_eaba .SbStrips );return _geca ,nil ;};func (_gede *HalftoneRegion )GetRegionInfo ()*RegionSegment {return _gede .RegionSegment };func (_ddcd *Header )readReferredToSegmentNumbers (_fced _da .StreamReader ,_aab int )([]int ,error ){const _caeg ="\u0072\u0065\u0061\u0064R\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053e\u0067m\u0065\u006e\u0074\u004e\u0075\u006d\u0062e\u0072\u0073";_bdgg :=make ([]int ,_aab );if _aab > 0{_ddcd .RTSegments =make ([]*Header ,_aab );var (_adeg uint64 ;_eceg error ;);for _dbga :=0;_dbga < _aab ;_dbga ++{_adeg ,_eceg =_fced .ReadBits (byte (_ddcd .referenceSize ())<<3);if _eceg !=nil {return nil ,_dg .Wrapf (_eceg ,_caeg ,"\u0027\u0025\u0064\u0027 \u0072\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0020\u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u0075\u006db\u0065\u0072",_dbga );};_bdgg [_dbga ]=int (_adeg &_d .MaxInt32 );};};return _bdgg ,nil ;};func (_ecdg *SymbolDictionary )setSymbolsArray ()error {if _ecdg ._ecfb ==nil {if _acgc :=_ecdg .retrieveImportSymbols ();_acgc !=nil {return _acgc ;};};if _ecdg ._acge ==nil {_ecdg ._acge =append (_ecdg ._acge ,_ecdg ._ecfb ...);};return nil ;};func (_dbdb *TextRegion )decodeRdy ()(int64 ,error ){const _ddfd ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064y";if _dbdb .IsHuffmanEncoded {if _dbdb .SbHuffRDY ==3{if _dbdb ._fegf ==nil {var (_fcff int ;_dccc error ;);if _dbdb .SbHuffFS ==3{_fcff ++;};if _dbdb .SbHuffDS ==3{_fcff ++;};if _dbdb .SbHuffDT ==3{_fcff ++;};if _dbdb .SbHuffRDWidth ==3{_fcff ++;};if _dbdb .SbHuffRDHeight ==3{_fcff ++;};if _dbdb .SbHuffRDX ==3{_fcff ++;};_dbdb ._fegf ,_dccc =_dbdb .getUserTable (_fcff );if _dccc !=nil {return 0,_dg .Wrap (_dccc ,_ddfd ,"");};};return _dbdb ._fegf .Decode (_dbdb ._cfcd );};_bbea ,_fafd :=_e .GetStandardTable (14+int (_dbdb .SbHuffRDY ));if _fafd !=nil {return 0,_fafd ;};return _bbea .Decode (_dbdb ._cfcd );};_cfgb ,_acaea :=_dbdb ._egddd .DecodeInt (_dbdb ._ccce );if _acaea !=nil {return 0,_dg .Wrap (_acaea ,_ddfd ,"");};return int64 (_cfgb ),nil ;};func (_dgcd *SymbolDictionary )retrieveImportSymbols ()error {for _ ,_caea :=range _dgcd .Header .RTSegments {if _caea .Type ==0{_eafd ,_dfaf :=_caea .GetSegmentData ();if _dfaf !=nil {return _dfaf ;};_caeda ,_bbfd :=_eafd .(*SymbolDictionary );if !_bbfd {return _ge .Errorf ("\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0044\u0061\u0074a\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u003a\u0020%\u0054",_eafd );};_cgcc ,_dfaf :=_caeda .GetDictionary ();if _dfaf !=nil {return _ge .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064 \u0073\u0065\u0067m\u0065\u006e\u0074 \u0077\u0069t\u0068\u0020\u0069\u006e\u0064\u0065x\u003a %\u0064\u0020\u0067\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0073",_caea .SegmentNumber ,_dfaf .Error ());};_dgcd ._ecfb =append (_dgcd ._ecfb ,_cgcc ...);_dgcd ._affg +=_caeda .NumberOfExportedSymbols ;};};return nil ;};func (_fag *PatternDictionary )checkInput ()error {if _fag .HdpHeight < 1||_fag .HdpWidth < 1{return _gg .New ("in\u0076\u0061l\u0069\u0064\u0020\u0048\u0065\u0061\u0064\u0065\u0072 \u0056\u0061\u006c\u0075\u0065\u003a\u0020\u0057\u0069\u0064\u0074\u0068\u002f\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020g\u0072e\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020z\u0065\u0072o");};if _fag .IsMMREncoded {if _fag .HDTemplate !=0{_c .Log .Debug ("\u0076\u0061\u0072\u0069\u0061\u0062\u006c\u0065\u0020\u0048\u0044\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e \u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030");};};return nil ;};func (_bgc *GenericRegion )decodeSLTP ()(int ,error ){switch _bgc .GBTemplate {case 0:_bgc ._gb .SetIndex (0x9B25);case 1:_bgc ._gb .SetIndex (0x795);case 2:_bgc ._gb .SetIndex (0xE5);case 3:_bgc ._gb .SetIndex (0x195);};return _bgc ._bad .DecodeBit (_bgc ._gb );};func (_cec *template0 )setIndex (_dba *_ag .DecoderStats ){_dba .SetIndex (0x100)};func (_bgfcg *SymbolDictionary )decodeHeightClassCollectiveBitmap (_afde int64 ,_gggba ,_gcca uint32 )(*_dd .Bitmap ,error ){if _afde ==0{_gebbb :=_dd .New (int (_gcca ),int (_gggba ));var (_adgf byte ;_bcef error ;);for _ddfe :=0;_ddfe < len (_gebbb .Data );_ddfe ++{_adgf ,_bcef =_bgfcg ._bbdfb .ReadByte ();if _bcef !=nil {return nil ,_bcef ;};if _bcef =_gebbb .SetByte (_ddfe ,_adgf );_bcef !=nil {return nil ,_bcef ;};};return _gebbb ,nil ;};if _bgfcg ._affc ==nil {_bgfcg ._affc =NewGenericRegion (_bgfcg ._bbdfb );};_bgfcg ._affc .setParameters (true ,_bgfcg ._bbdfb .StreamPosition (),_afde ,_gggba ,_gcca );_ecef ,_dfba :=_bgfcg ._affc .GetRegionBitmap ();if _dfba !=nil {return nil ,_dfba ;};return _ecef ,nil ;};var _ templater =&template0 {};func (_edee *TextRegion )decodeDfs ()(int64 ,error ){if _edee .IsHuffmanEncoded {if _edee .SbHuffFS ==3{if _edee ._gbgc ==nil {var _dede error ;_edee ._gbgc ,_dede =_edee .getUserTable (0);if _dede !=nil {return 0,_dede ;};};return _edee ._gbgc .Decode (_edee ._cfcd );};_dcfa ,_bgcb :=_e .GetStandardTable (6+int (_edee .SbHuffFS ));if _bgcb !=nil {return 0,_bgcb ;};return _dcfa .Decode (_edee ._cfcd );};_dggd ,_gdga :=_edee ._egddd .DecodeInt (_edee ._afedb );if _gdga !=nil {return 0,_gdga ;};return int64 (_dggd ),nil ;};func (_edc *GenericRefinementRegion )updateOverride ()error {if _edc .GrAtX ==nil ||_edc .GrAtY ==nil {return _gg .New ("\u0041\u0054\u0020\u0070\u0069\u0078\u0065\u006c\u0073\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");};if len (_edc .GrAtX )!=len (_edc .GrAtY ){return _gg .New ("A\u0054\u0020\u0070\u0069xe\u006c \u0069\u006e\u0063\u006f\u006es\u0069\u0073\u0074\u0065\u006e\u0074");};_edc ._aeg =make ([]bool ,len (_edc .GrAtX ));switch _edc .TemplateID {case 0:if _edc .GrAtX [0]!=-1&&_edc .GrAtY [0]!=-1{_edc ._aeg [0]=true ;_edc ._ca =true ;};if _edc .GrAtX [1]!=-1&&_edc .GrAtY [1]!=-1{_edc ._aeg [1]=true ;_edc ._ca =true ;};case 1:_edc ._ca =false ;};return nil ;};func (_fcbd *HalftoneRegion )GetRegionBitmap ()(*_dd .Bitmap ,error ){if _fcbd .HalftoneRegionBitmap !=nil {return _fcbd .HalftoneRegionBitmap ,nil ;};var _ggcbb error ;_fcbd .HalftoneRegionBitmap =_dd .New (int (_fcbd .RegionSegment .BitmapWidth ),int (_fcbd .RegionSegment .BitmapHeight ));if _fcbd .Patterns ==nil ||len (_fcbd .Patterns )==0{_fcbd .Patterns ,_ggcbb =_fcbd .GetPatterns ();if _ggcbb !=nil {return nil ,_ggcbb ;};};if _fcbd .HDefaultPixel ==1{_fcbd .HalftoneRegionBitmap .SetDefaultPixel ();};_bdbg :=_d .Ceil (_d .Log (float64 (len (_fcbd .Patterns )))/_d .Log (2));_aebca :=int (_bdbg );var _cabf [][]int ;_cabf ,_ggcbb =_fcbd .grayScaleDecoding (_aebca );if _ggcbb !=nil {return nil ,_ggcbb ;};if _ggcbb =_fcbd .renderPattern (_cabf );_ggcbb !=nil {return nil ,_ggcbb ;};return _fcbd .HalftoneRegionBitmap ,nil ;};func (_eedg *PatternDictionary )readGrayMax ()error {_cgec ,_fcca :=_eedg ._gfcf .ReadBits (32);if _fcca !=nil {return _fcca ;};_eedg .GrayMax =uint32 (_cgec &_d .MaxUint32 );return nil ;};func NewGenericRegion (r _da .StreamReader )*GenericRegion {return &GenericRegion {RegionSegment :NewRegionSegment (r ),_edac :r };};func (_badbc *SymbolDictionary )readRefinementAtPixels (_afdef int )error {_badbc .SdrATX =make ([]int8 ,_afdef );_badbc .SdrATY =make ([]int8 ,_afdef );var (_cfcc byte ;_eebb error ;);for _abdag :=0;_abdag < _afdef ;_abdag ++{_cfcc ,_eebb =_badbc ._bbdfb .ReadByte ();if _eebb !=nil {return _eebb ;};_badbc .SdrATX [_abdag ]=int8 (_cfcc );_cfcc ,_eebb =_badbc ._bbdfb .ReadByte ();if _eebb !=nil {return _eebb ;};_badbc .SdrATY [_abdag ]=int8 (_cfcc );};return nil ;};func (_dgfa *SymbolDictionary )readRegionFlags ()error {var (_ebbab uint64 ;_bge int ;);_ ,_adcf :=_dgfa ._bbdfb .ReadBits (3);if _adcf !=nil {return _adcf ;};_bge ,_adcf =_dgfa ._bbdfb .ReadBit ();if _adcf !=nil {return _adcf ;};_dgfa .SdrTemplate =int8 (_bge );_ebbab ,_adcf =_dgfa ._bbdfb .ReadBits (2);if _adcf !=nil {return _adcf ;};_dgfa .SdTemplate =int8 (_ebbab &0xf);_bge ,_adcf =_dgfa ._bbdfb .ReadBit ();if _adcf !=nil {return _adcf ;};if _bge ==1{_dgfa ._abda =true ;};_bge ,_adcf =_dgfa ._bbdfb .ReadBit ();if _adcf !=nil {return _adcf ;};if _bge ==1{_dgfa ._beee =true ;};_bge ,_adcf =_dgfa ._bbdfb .ReadBit ();if _adcf !=nil {return _adcf ;};if _bge ==1{_dgfa .SdHuffAggInstanceSelection =true ;};_bge ,_adcf =_dgfa ._bbdfb .ReadBit ();if _adcf !=nil {return _adcf ;};_dgfa .SdHuffBMSizeSelection =int8 (_bge );_ebbab ,_adcf =_dgfa ._bbdfb .ReadBits (2);if _adcf !=nil {return _adcf ;};_dgfa .SdHuffDecodeWidthSelection =int8 (_ebbab &0xf);_ebbab ,_adcf =_dgfa ._bbdfb .ReadBits (2);if _adcf !=nil {return _adcf ;};_dgfa .SdHuffDecodeHeightSelection =int8 (_ebbab &0xf);_bge ,_adcf =_dgfa ._bbdfb .ReadBit ();if _adcf !=nil {return _adcf ;};if _bge ==1{_dgfa .UseRefinementAggregation =true ;};_bge ,_adcf =_dgfa ._bbdfb .ReadBit ();if _adcf !=nil {return _adcf ;};if _bge ==1{_dgfa .IsHuffmanEncoded =true ;};return nil ;};func (_gc *GenericRefinementRegion )decodeTypicalPredictedLineTemplate0 (_eef ,_cac ,_bgf ,_bga ,_efe ,_fbc ,_edb ,_gec ,_ba int )error {var (_bba ,_adb ,_ffd ,_dff ,_cfe ,_abc int ;_gefe byte ;_fgc error ;);if _eef > 0{_gefe ,_fgc =_gc .RegionBitmap .GetByte (_edb -_bgf );if _fgc !=nil {return _fgc ;};_ffd =int (_gefe );};if _gec > 0&&_gec <=_gc .ReferenceBitmap .Height {_gefe ,_fgc =_gc .ReferenceBitmap .GetByte (_ba -_bga +_fbc );if _fgc !=nil {return _fgc ;};_dff =int (_gefe )<<4;};if _gec >=0&&_gec < _gc .ReferenceBitmap .Height {_gefe ,_fgc =_gc .ReferenceBitmap .GetByte (_ba +_fbc );if _fgc !=nil {return _fgc ;};_cfe =int (_gefe )<<1;};if _gec > -2&&_gec < _gc .ReferenceBitmap .Height -1{_gefe ,_fgc =_gc .ReferenceBitmap .GetByte (_ba +_bga +_fbc );if _fgc !=nil {return _fgc ;};_abc =int (_gefe );};_bba =((_ffd >>5)&0x6)|((_abc >>2)&0x30)|(_cfe &0x180)|(_dff &0xc00);var _gcd int ;for _daa :=0;_daa < _efe ;_daa =_gcd {var _cb int ;_gcd =_daa +8;var _edbe int ;if _edbe =_cac -_daa ;_edbe > 8{_edbe =8;};_eca :=_gcd < _cac ;_aeb :=_gcd < _gc .ReferenceBitmap .Width ;_bbcc :=_fbc +1;if _eef > 0{_gefe =0;if _eca {_gefe ,_fgc =_gc .RegionBitmap .GetByte (_edb -_bgf +1);if _fgc !=nil {return _fgc ;};};_ffd =(_ffd <<8)|int (_gefe );};if _gec > 0&&_gec <=_gc .ReferenceBitmap .Height {var _fa int ;if _aeb {_gefe ,_fgc =_gc .ReferenceBitmap .GetByte (_ba -_bga +_bbcc );if _fgc !=nil {return _fgc ;};_fa =int (_gefe )<<4;};_dff =(_dff <<8)|_fa ;};if _gec >=0&&_gec < _gc .ReferenceBitmap .Height {var _cg int ;if _aeb {_gefe ,_fgc =_gc .ReferenceBitmap .GetByte (_ba +_bbcc );if _fgc !=nil {return _fgc ;};_cg =int (_gefe )<<1;};_cfe =(_cfe <<8)|_cg ;};if _gec > -2&&_gec < (_gc .ReferenceBitmap .Height -1){_gefe =0;if _aeb {_gefe ,_fgc =_gc .ReferenceBitmap .GetByte (_ba +_bga +_bbcc );if _fgc !=nil {return _fgc ;};};_abc =(_abc <<8)|int (_gefe );};for _ece :=0;_ece < _edbe ;_ece ++{var _aef int ;_agg :=false ;_egd :=(_bba >>4)&0x1ff;if _egd ==0x1ff{_agg =true ;_aef =1;}else if _egd ==0x00{_agg =true ;};if !_agg {if _gc ._ca {_adb =_gc .overrideAtTemplate0 (_bba ,_daa +_ece ,_eef ,_cb ,_ece );_gc ._bbc .SetIndex (int32 (_adb ));}else {_gc ._bbc .SetIndex (int32 (_bba ));};_aef ,_fgc =_gc ._fb .DecodeBit (_gc ._bbc );if _fgc !=nil {return _fgc ;};};_dcd :=uint (7-_ece );_cb |=int (_aef <<_dcd );_bba =((_bba &0xdb6)<<1)|_aef |(_ffd >>_dcd +5)&0x002|((_abc >>_dcd +2)&0x010)|((_cfe >>_dcd )&0x080)|((_dff >>_dcd )&0x400);};_fgc =_gc .RegionBitmap .SetByte (_edb ,byte (_cb ));if _fgc !=nil {return _fgc ;};_edb ++;_ba ++;};return nil ;};func (_efagc *TextRegion )String ()string {_fdee :=&_aa .Builder {};_fdee .WriteString ("\u000a[\u0054E\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u000a");_fdee .WriteString (_efagc .RegionInfo .String ()+"\u000a");_fdee .WriteString (_ge .Sprintf ("\u0009\u002d\u0020\u0053br\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0025\u0076\u000a",_efagc .SbrTemplate ));_fdee .WriteString (_ge .Sprintf ("\u0009-\u0020S\u0062\u0064\u0073\u004f\u0066f\u0073\u0065t\u003a\u0020\u0025\u0076\u000a",_efagc .SbdsOffset ));_fdee .WriteString (_ge .Sprintf ("\t\u002d \u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0050i\u0078\u0065\u006c\u003a %\u0076\u000a",_efagc .DefaultPixel ));_fdee .WriteString (_ge .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0076\u000a",_efagc .CombinationOperator ));_fdee .WriteString (_ge .Sprintf ("\t\u002d \u0049\u0073\u0054\u0072\u0061\u006e\u0073\u0070o\u0073\u0065\u0064\u003a %\u0076\u000a",_efagc .IsTransposed ));_fdee .WriteString (_ge .Sprintf ("\u0009\u002d\u0020Re\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0043\u006f\u0072\u006e\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_efagc .ReferenceCorner ));_fdee .WriteString (_ge .Sprintf ("\t\u002d\u0020\u0055\u0073eR\u0065f\u0069\u006e\u0065\u006d\u0065n\u0074\u003a\u0020\u0025\u0076\u000a",_efagc .UseRefinement ));_fdee .WriteString (_ge .Sprintf ("\u0009-\u0020\u0049\u0073\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045n\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0076\u000a",_efagc .IsHuffmanEncoded ));if _efagc .IsHuffmanEncoded {_fdee .WriteString (_ge .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_efagc .SbHuffRSize ));_fdee .WriteString (_ge .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0059:\u0020\u0025\u0076\u000a",_efagc .SbHuffRDY ));_fdee .WriteString (_ge .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0058:\u0020\u0025\u0076\u000a",_efagc .SbHuffRDX ));_fdee .WriteString (_ge .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069\u0067\u0068\u0074\u003a\u0020\u0025v\u000a",_efagc .SbHuffRDHeight ));_fdee .WriteString (_ge .Sprintf ("\t\u002d\u0020\u0053\u0062Hu\u0066f\u0052\u0044\u0057\u0069\u0064t\u0068\u003a\u0020\u0025\u0076\u000a",_efagc .SbHuffRDWidth ));_fdee .WriteString (_ge .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0054\u003a\u0020\u0025\u0076\u000a",_efagc .SbHuffDT ));_fdee .WriteString (_ge .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0053\u003a\u0020\u0025\u0076\u000a",_efagc .SbHuffDS ));_fdee .WriteString (_ge .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0046\u0053\u003a\u0020\u0025\u0076\u000a",_efagc .SbHuffFS ));};_fdee .WriteString (_ge .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_efagc .SbrATX ));_fdee .WriteString (_ge .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0059:\u0020\u0025\u0076\u000a",_efagc .SbrATY ));_fdee .WriteString (_ge .Sprintf ("\u0009\u002d\u0020N\u0075\u006d\u0062\u0065r\u004f\u0066\u0053\u0079\u006d\u0062\u006fl\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_efagc .NumberOfSymbolInstances ));_fdee .WriteString (_ge .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_efagc .SbrATX ));return _fdee .String ();};func (_eegfg *TextRegion )setParameters (_dgfc *_ag .Decoder ,_eaga ,_fbbbd bool ,_abcdbg ,_gace uint32 ,_fcbee uint32 ,_cfca int8 ,_bcbe uint32 ,_eccga int8 ,_cggb _dd .CombinationOperator ,_bgad int8 ,_dabd int16 ,_gefaf ,_gbge ,_fac ,_gbcb ,_bbdc ,_bfdc ,_debc ,_ggaad ,_edde ,_edegg int8 ,_affcc ,_dfbaf []int8 ,_abfg []*_dd .Bitmap ,_egga int8 ){_eegfg ._egddd =_dgfc ;_eegfg .IsHuffmanEncoded =_eaga ;_eegfg .UseRefinement =_fbbbd ;_eegfg .RegionInfo .BitmapWidth =_abcdbg ;_eegfg .RegionInfo .BitmapHeight =_gace ;_eegfg .NumberOfSymbolInstances =_fcbee ;_eegfg .SbStrips =_cfca ;_eegfg .NumberOfSymbols =_bcbe ;_eegfg .DefaultPixel =_eccga ;_eegfg .CombinationOperator =_cggb ;_eegfg .IsTransposed =_bgad ;_eegfg .ReferenceCorner =_dabd ;_eegfg .SbdsOffset =_gefaf ;_eegfg .SbHuffFS =_gbge ;_eegfg .SbHuffDS =_fac ;_eegfg .SbHuffDT =_gbcb ;_eegfg .SbHuffRDWidth =_bbdc ;_eegfg .SbHuffRDHeight =_bfdc ;_eegfg .SbHuffRDX =_debc ;_eegfg .SbHuffRDY =_ggaad ;_eegfg .SbrTemplate =_edegg ;_eegfg .SbrATX =_affcc ;_eegfg .SbrATY =_dfbaf ;_eegfg .Symbols =_abfg ;_eegfg ._effc =_egga ;};func (_gdgc *TableSegment )parseHeader ()error {var (_gffb int ;_bfdg uint64 ;_ddae error ;);_gffb ,_ddae =_gdgc ._faf .ReadBit ();if _ddae !=nil {return _ddae ;};if _gffb ==1{return _ge .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0061\u0062\u006c\u0065 \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0064e\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u002e\u0020\u0042\u002e\u0032\u002e1\u0020\u0043\u006f\u0064\u0065\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0042\u0069\u0074\u0020\u0037\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u007a\u0065\u0072\u006f\u002e\u0020\u0057a\u0073\u003a \u0025\u0064",_gffb );};if _bfdg ,_ddae =_gdgc ._faf .ReadBits (3);_ddae !=nil {return _ddae ;};_gdgc ._bdeg =(int32 (_bfdg )+1)&0xf;if _bfdg ,_ddae =_gdgc ._faf .ReadBits (3);_ddae !=nil {return _ddae ;};_gdgc ._afag =(int32 (_bfdg )+1)&0xf;if _bfdg ,_ddae =_gdgc ._faf .ReadBits (32);_ddae !=nil {return _ddae ;};_gdgc ._cdgc =int32 (_bfdg &_d .MaxInt32 );if _bfdg ,_ddae =_gdgc ._faf .ReadBits (32);_ddae !=nil {return _ddae ;};_gdgc ._fcbbe =int32 (_bfdg &_d .MaxInt32 );return nil ;};func (_badg *Header )writeSegmentDataLength (_dfef _da .BinaryWriter )(_abef int ,_ccbc error ){_gfff :=make ([]byte ,4);_f .BigEndian .PutUint32 (_gfff ,uint32 (_badg .SegmentDataLength ));if _abef ,_ccbc =_dfef .Write (_gfff );_ccbc !=nil {return 0,_dg .Wrap (_ccbc ,"\u0048\u0065a\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u004c\u0065ng\u0074\u0068","");};return _abef ,nil ;};func (_dcgb *SymbolDictionary )decodeNewSymbols (_bcfd ,_dfcae uint32 ,_baceb *_dd .Bitmap ,_ffbg ,_daaae int32 )error {if _dcgb ._abff ==nil {_dcgb ._abff =_dgc (_dcgb ._bbdfb ,nil );if _dcgb ._bbbd ==nil {var _fade error ;_dcgb ._bbbd ,_fade =_ag .New (_dcgb ._bbdfb );if _fade !=nil {return _fade ;};};if _dcgb ._fbbf ==nil {_dcgb ._fbbf =_ag .NewStats (65536,1);};};_dcgb ._abff .setParameters (_dcgb ._fbbf ,_dcgb ._bbbd ,_dcgb .SdrTemplate ,_bcfd ,_dfcae ,_baceb ,_ffbg ,_daaae ,false ,_dcgb .SdrATX ,_dcgb .SdrATY );return _dcgb .addSymbol (_dcgb ._abff );};func (_bcaf *GenericRegion )InitEncode (bm *_dd .Bitmap ,xLoc ,yLoc ,template int ,duplicateLineRemoval bool )error {const _eaf ="\u0047e\u006e\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069\u006f\u006e.\u0049\u006e\u0069\u0074\u0045\u006e\u0063\u006f\u0064\u0065";if bm ==nil {return _dg .Error (_eaf ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if xLoc < 0||yLoc < 0{return _dg .Error (_eaf ,"\u0078\u0020\u0061\u006e\u0064\u0020\u0079\u0020\u006c\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074h\u0061\u006e\u0020\u0030");};_bcaf .Bitmap =bm ;_bcaf .GBTemplate =byte (template );switch _bcaf .GBTemplate {case 0:_bcaf .GBAtX =[]int8 {3,-3,2,-2};_bcaf .GBAtY =[]int8 {-1,-1,-2,-2};case 1:_bcaf .GBAtX =[]int8 {3};_bcaf .GBAtY =[]int8 {-1};case 2,3:_bcaf .GBAtX =[]int8 {2};_bcaf .GBAtY =[]int8 {-1};default:return _dg .Errorf (_eaf ,"\u0070\u0072o\u0076\u0069\u0064\u0065\u0064 \u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u007b\u0030\u002c\u0031\u002c\u0032\u002c\u0033\u007d",template );};_bcaf .RegionSegment =&RegionSegment {BitmapHeight :uint32 (bm .Height ),BitmapWidth :uint32 (bm .Width ),XLocation :uint32 (xLoc ),YLocation :uint32 (yLoc )};_bcaf .IsTPGDon =duplicateLineRemoval ;return nil ;};func (_gcfg *Header )writeFlags (_fdfb _da .BinaryWriter )(_cbc error ){const _ggec ="\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065F\u006c\u0061\u0067\u0073";_fgaa :=byte (_gcfg .Type );if _cbc =_fdfb .WriteByte (_fgaa );_cbc !=nil {return _dg .Wrap (_cbc ,_ggec ,"\u0077\u0072\u0069ti\u006e\u0067\u0020\u0073\u0065\u0067\u006d\u0065\u006et\u0020t\u0079p\u0065 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064");};if !_gcfg .RetainFlag &&!_gcfg .PageAssociationFieldSize {return nil ;};if _cbc =_fdfb .SkipBits (-8);_cbc !=nil {return _dg .Wrap (_cbc ,_ggec ,"\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0062\u0061\u0063\u006b\u0020\u0074\u0068\u0065\u0020\u0062\u0069\u0074\u0073\u0020\u0066\u0061il\u0065\u0064");};var _bbaa int ;if _gcfg .RetainFlag {_bbaa =1;};if _cbc =_fdfb .WriteBit (_bbaa );_cbc !=nil {return _dg .Wrap (_cbc ,_ggec ,"\u0072\u0065\u0074\u0061in\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067\u0073");};_bbaa =0;if _gcfg .PageAssociationFieldSize {_bbaa =1;};if _cbc =_fdfb .WriteBit (_bbaa );_cbc !=nil {return _dg .Wrap (_cbc ,_ggec ,"p\u0061\u0067\u0065\u0020as\u0073o\u0063\u0069\u0061\u0074\u0069o\u006e\u0020\u0066\u006c\u0061\u0067");};_fdfb .FinishByte ();return nil ;};func (_gcdba *TextRegion )computeSymbolCodeLength ()error {if _gcdba .IsHuffmanEncoded {return _gcdba .symbolIDCodeLengths ();};_gcdba ._effc =int8 (_d .Ceil (_d .Log (float64 (_gcdba .NumberOfSymbols ))/_d .Log (2)));return nil ;};type GenericRegion struct{_edac _da .StreamReader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;UseExtTemplates bool ;IsTPGDon bool ;GBTemplate byte ;IsMMREncoded bool ;UseMMR bool ;GBAtX []int8 ;GBAtY []int8 ;GBAtOverride []bool ;_ffb bool ;Bitmap *_dd .Bitmap ;_bad *_ag .Decoder ;_gb *_ag .DecoderStats ;_deb *_aag .Decoder ;};func (_bggg *Header )writeSegmentNumber (_dgaa _da .BinaryWriter )(_adged int ,_cbcg error ){_fcad :=make ([]byte ,4);_f .BigEndian .PutUint32 (_fcad ,_bggg .SegmentNumber );if _adged ,_cbcg =_dgaa .Write (_fcad );_cbcg !=nil {return 0,_dg .Wrap (_cbcg ,"\u0048e\u0061\u0064\u0065\u0072.\u0077\u0072\u0069\u0074\u0065S\u0065g\u006de\u006e\u0074\u004e\u0075\u006d\u0062\u0065r","");};return _adged ,nil ;};type EncodeInitializer interface{InitEncode ();};func (_ccgg *SymbolDictionary )encodeFlags (_gbbf _da .BinaryWriter )(_dafb int ,_dagc error ){const _bgbf ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _dagc =_gbbf .SkipBits (3);_dagc !=nil {return 0,_dg .Wrap (_dagc ,_bgbf ,"\u0065\u006d\u0070\u0074\u0079\u0020\u0062\u0069\u0074\u0073");};var _cbbd int ;if _ccgg .SdrTemplate > 0{_cbbd =1;};if _dagc =_gbbf .WriteBit (_cbbd );_dagc !=nil {return _dafb ,_dg .Wrap (_dagc ,_bgbf ,"s\u0064\u0072\u0074\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_cbbd =0;if _ccgg .SdTemplate > 1{_cbbd =1;};if _dagc =_gbbf .WriteBit (_cbbd );_dagc !=nil {return _dafb ,_dg .Wrap (_dagc ,_bgbf ,"\u0073\u0064\u0074\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_cbbd =0;if _ccgg .SdTemplate ==1||_ccgg .SdTemplate ==3{_cbbd =1;};if _dagc =_gbbf .WriteBit (_cbbd );_dagc !=nil {return _dafb ,_dg .Wrap (_dagc ,_bgbf ,"\u0073\u0064\u0074\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_cbbd =0;if _ccgg ._abda {_cbbd =1;};if _dagc =_gbbf .WriteBit (_cbbd );_dagc !=nil {return _dafb ,_dg .Wrap (_dagc ,_bgbf ,"\u0063\u006f\u0064in\u0067\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0065\u0064");};_cbbd =0;if _ccgg ._beee {_cbbd =1;};if _dagc =_gbbf .WriteBit (_cbbd );_dagc !=nil {return _dafb ,_dg .Wrap (_dagc ,_bgbf ,"\u0063\u006f\u0064\u0069ng\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0075\u0073\u0065\u0064");};_cbbd =0;if _ccgg .SdHuffAggInstanceSelection {_cbbd =1;};if _dagc =_gbbf .WriteBit (_cbbd );_dagc !=nil {return _dafb ,_dg .Wrap (_dagc ,_bgbf ,"\u0073\u0064\u0068\u0075\u0066\u0066\u0061\u0067\u0067\u0069\u006e\u0073\u0074");};_cbbd =int (_ccgg .SdHuffBMSizeSelection );if _dagc =_gbbf .WriteBit (_cbbd );_dagc !=nil {return _dafb ,_dg .Wrap (_dagc ,_bgbf ,"\u0073\u0064\u0068u\u0066\u0066\u0062\u006d\u0073\u0069\u007a\u0065");};_cbbd =0;if _ccgg .SdHuffDecodeWidthSelection > 1{_cbbd =1;};if _dagc =_gbbf .WriteBit (_cbbd );_dagc !=nil {return _dafb ,_dg .Wrap (_dagc ,_bgbf ,"s\u0064\u0068\u0075\u0066\u0066\u0077\u0069\u0064\u0074\u0068");};_cbbd =0;switch _ccgg .SdHuffDecodeWidthSelection {case 1,3:_cbbd =1;};if _dagc =_gbbf .WriteBit (_cbbd );_dagc !=nil {return _dafb ,_dg .Wrap (_dagc ,_bgbf ,"s\u0064\u0068\u0075\u0066\u0066\u0077\u0069\u0064\u0074\u0068");};_cbbd =0;if _ccgg .SdHuffDecodeHeightSelection > 1{_cbbd =1;};if _dagc =_gbbf .WriteBit (_cbbd );_dagc !=nil {return _dafb ,_dg .Wrap (_dagc ,_bgbf ,"\u0073\u0064\u0068u\u0066\u0066\u0068\u0065\u0069\u0067\u0068\u0074");};_cbbd =0;switch _ccgg .SdHuffDecodeHeightSelection {case 1,3:_cbbd =1;};if _dagc =_gbbf .WriteBit (_cbbd );_dagc !=nil {return _dafb ,_dg .Wrap (_dagc ,_bgbf ,"\u0073\u0064\u0068u\u0066\u0066\u0068\u0065\u0069\u0067\u0068\u0074");};_cbbd =0;if _ccgg .UseRefinementAggregation {_cbbd =1;};if _dagc =_gbbf .WriteBit (_cbbd );_dagc !=nil {return _dafb ,_dg .Wrap (_dagc ,_bgbf ,"\u0073\u0064\u0072\u0065\u0066\u0061\u0067\u0067");};_cbbd =0;if _ccgg .IsHuffmanEncoded {_cbbd =1;};if _dagc =_gbbf .WriteBit (_cbbd );_dagc !=nil {return _dafb ,_dg .Wrap (_dagc ,_bgbf ,"\u0073\u0064\u0068\u0075\u0066\u0066");};return 2,nil ;};func (_cbfbb *TextRegion )GetRegionBitmap ()(*_dd .Bitmap ,error ){if _cbfbb .RegionBitmap !=nil {return _cbfbb .RegionBitmap ,nil ;};if !_cbfbb .IsHuffmanEncoded {if _fdba :=_cbfbb .setCodingStatistics ();_fdba !=nil {return nil ,_fdba ;};};if _ced :=_cbfbb .createRegionBitmap ();_ced !=nil {return nil ,_ced ;};if _agecb :=_cbfbb .decodeSymbolInstances ();_agecb !=nil {return nil ,_agecb ;};return _cbfbb .RegionBitmap ,nil ;};func (_dbaea *PageInformationSegment )checkInput ()error {if _dbaea .PageBMHeight ==_d .MaxInt32 {if !_dbaea .IsStripe {_c .Log .Debug ("P\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0053\u0065\u0067me\u006e\u0074\u002e\u0049s\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0073\u0068ou\u006c\u0064 \u0062\u0065\u0020\u0074\u0072\u0075\u0065\u002e");};};return nil ;};func (_fbaff *TextRegion )Init (header *Header ,r _da .StreamReader )error {_fbaff .Header =header ;_fbaff ._cfcd =r ;_fbaff .RegionInfo =NewRegionSegment (_fbaff ._cfcd );return _fbaff .parseHeader ();};func (_ccaa *RegionSegment )parseHeader ()error {const _bfdd ="p\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_c .Log .Trace ("\u005b\u0052\u0045\u0047I\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002dH\u0045A\u0044\u0045\u0052\u005d\u0020\u0042\u0065g\u0069\u006e");defer func (){_c .Log .Trace ("\u005b\u0052\u0045G\u0049\u004f\u004e\u005d[\u0050\u0041\u0052\u0053\u0045\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");}();_bdgc ,_feeg :=_ccaa ._bdbe .ReadBits (32);if _feeg !=nil {return _dg .Wrap (_feeg ,_bfdd ,"\u0077\u0069\u0064t\u0068");};_ccaa .BitmapWidth =uint32 (_bdgc &_d .MaxUint32 );_bdgc ,_feeg =_ccaa ._bdbe .ReadBits (32);if _feeg !=nil {return _dg .Wrap (_feeg ,_bfdd ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_ccaa .BitmapHeight =uint32 (_bdgc &_d .MaxUint32 );_bdgc ,_feeg =_ccaa ._bdbe .ReadBits (32);if _feeg !=nil {return _dg .Wrap (_feeg ,_bfdd ,"\u0078\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_ccaa .XLocation =uint32 (_bdgc &_d .MaxUint32 );_bdgc ,_feeg =_ccaa ._bdbe .ReadBits (32);if _feeg !=nil {return _dg .Wrap (_feeg ,_bfdd ,"\u0079\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_ccaa .YLocation =uint32 (_bdgc &_d .MaxUint32 );if _ ,_feeg =_ccaa ._bdbe .ReadBits (5);_feeg !=nil {return _dg .Wrap (_feeg ,_bfdd ,"\u0064i\u0072\u0079\u0020\u0072\u0065\u0061d");};if _feeg =_ccaa .readCombinationOperator ();_feeg !=nil {return _dg .Wrap (_feeg ,_bfdd ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};return nil ;};func (_eeb *Header )CleanSegmentData (){if _eeb .SegmentData !=nil {_eeb .SegmentData =nil ;};};type RegionSegment struct{_bdbe _da .StreamReader ;BitmapWidth uint32 ;BitmapHeight uint32 ;XLocation uint32 ;YLocation uint32 ;CombinaionOperator _dd .CombinationOperator ;};func (_eagd *RegionSegment )String ()string {_gfdb :=&_aa .Builder {};_gfdb .WriteString ("\u0009[\u0052E\u0047\u0049\u004f\u004e\u0020S\u0045\u0047M\u0045\u004e\u0054\u005d\u000a");_gfdb .WriteString (_ge .Sprintf ("\t\u0009\u002d\u0020\u0042\u0069\u0074m\u0061\u0070\u0020\u0028\u0077\u0069d\u0074\u0068\u002c\u0020\u0068\u0065\u0069g\u0068\u0074\u0029\u0020\u005b\u0025\u0064\u0078\u0025\u0064]\u000a",_eagd .BitmapWidth ,_eagd .BitmapHeight ));_gfdb .WriteString (_ge .Sprintf ("\u0009\u0009\u002d\u0020L\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0028\u0078,\u0079)\u003a\u0020\u005b\u0025\u0064\u002c\u0025d\u005d\u000a",_eagd .XLocation ,_eagd .YLocation ));_gfdb .WriteString (_ge .Sprintf ("\t\u0009\u002d\u0020\u0043\u006f\u006db\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070e\u0072\u0061\u0074o\u0072:\u0020\u0025\u0073",_eagd .CombinaionOperator ));return _gfdb .String ();};func (_dacg *TextRegion )decodeSymInRefSize ()(int64 ,error ){const _bage ="\u0064e\u0063o\u0064\u0065\u0053\u0079\u006dI\u006e\u0052e\u0066\u0053\u0069\u007a\u0065";if _dacg .SbHuffRSize ==0{_cdfb ,_ggdd :=_e .GetStandardTable (1);if _ggdd !=nil {return 0,_dg .Wrap (_ggdd ,_bage ,"");};return _cdfb .Decode (_dacg ._cfcd );};if _dacg ._dgbd ==nil {var (_faef int ;_fdbaf error ;);if _dacg .SbHuffFS ==3{_faef ++;};if _dacg .SbHuffDS ==3{_faef ++;};if _dacg .SbHuffDT ==3{_faef ++;};if _dacg .SbHuffRDWidth ==3{_faef ++;};if _dacg .SbHuffRDHeight ==3{_faef ++;};if _dacg .SbHuffRDX ==3{_faef ++;};if _dacg .SbHuffRDY ==3{_faef ++;};_dacg ._dgbd ,_fdbaf =_dacg .getUserTable (_faef );if _fdbaf !=nil {return 0,_dg .Wrap (_fdbaf ,_bage ,"");};};_fcbc ,_acaeac :=_dacg ._dgbd .Decode (_dacg ._cfcd );if _acaeac !=nil {return 0,_dg .Wrap (_acaeac ,_bage ,"");};return _fcbc ,nil ;};func (_feggc *TextRegion )setContexts (_aefa *_ag .DecoderStats ,_bdab *_ag .DecoderStats ,_gggc *_ag .DecoderStats ,_ddac *_ag .DecoderStats ,_gfaae *_ag .DecoderStats ,_ddcc *_ag .DecoderStats ,_acfa *_ag .DecoderStats ,_bdggc *_ag .DecoderStats ,_fdac *_ag .DecoderStats ,_aebdcf *_ag .DecoderStats ){_feggc ._afgf =_bdab ;_feggc ._afedb =_gggc ;_feggc ._bfbff =_ddac ;_feggc ._aaae =_gfaae ;_feggc ._egeeg =_acfa ;_feggc ._aaaa =_bdggc ;_feggc ._begb =_ddcc ;_feggc ._aad =_fdac ;_feggc ._ccce =_aebdcf ;_feggc ._cdga =_aefa ;};func (_aeaa *PageInformationSegment )encodeFlags (_dfad _da .BinaryWriter )(_ddfb error ){const _ddfc ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _ddfb =_dfad .SkipBits (1);_ddfb !=nil {return _dg .Wrap (_ddfb ,_ddfc ,"\u0072\u0065\u0073e\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074");};var _gcfgg int ;if _aeaa .CombinationOperatorOverrideAllowed (){_gcfgg =1;};if _ddfb =_dfad .WriteBit (_gcfgg );_ddfb !=nil {return _dg .Wrap (_ddfb ,_ddfc ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0064\u0065\u006e");};_gcfgg =0;if _aeaa ._afeeb {_gcfgg =1;};if _ddfb =_dfad .WriteBit (_gcfgg );_ddfb !=nil {return _dg .Wrap (_ddfb ,_ddfc ,"\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0061\u0075\u0078i\u006ci\u0061r\u0079\u0020\u0062\u0075\u0066\u0066\u0065r");};if _ddfb =_dfad .WriteBit ((int (_aeaa ._gebb )>>1)&0x01);_ddfb !=nil {return _dg .Wrap (_ddfb ,_ddfc ,"\u0063\u006f\u006d\u0062\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006f\u0070\u0065\u0072\u0061\u0074o\u0072\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0062\u0069\u0074");};if _ddfb =_dfad .WriteBit (int (_aeaa ._gebb )&0x01);_ddfb !=nil {return _dg .Wrap (_ddfb ,_ddfc ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0062\u0069\u0074");};_gcfgg =int (_aeaa ._fed );if _ddfb =_dfad .WriteBit (_gcfgg );_ddfb !=nil {return _dg .Wrap (_ddfb ,_ddfc ,"\u0064e\u0066\u0061\u0075\u006c\u0074\u0020\u0070\u0061\u0067\u0065\u0020p\u0069\u0078\u0065\u006c\u0020\u0076\u0061\u006c\u0075\u0065");};_gcfgg =0;if _aeaa ._fcbgb {_gcfgg =1;};if _ddfb =_dfad .WriteBit (_gcfgg );_ddfb !=nil {return _dg .Wrap (_ddfb ,_ddfc ,"\u0063\u006f\u006e\u0074ai\u006e\u0073\u0020\u0072\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074");};_gcfgg =0;if _aeaa .IsLossless {_gcfgg =1;};if _ddfb =_dfad .WriteBit (_gcfgg );_ddfb !=nil {return _dg .Wrap (_ddfb ,_ddfc ,"p\u0061\u0067\u0065\u0020\u0069\u0073 \u0065\u0076\u0065\u006e\u0074\u0075\u0061\u006c\u006cy\u0020\u006c\u006fs\u0073l\u0065\u0073\u0073");};return nil ;};func (_dcb *Header )GetSegmentData ()(Segmenter ,error ){var _fde Segmenter ;if _dcb .SegmentData !=nil {_fde =_dcb .SegmentData ;};if _fde ==nil {_fcda ,_fgf :=_eab [_dcb .Type ];if !_fgf {return nil ,_ge .Errorf ("\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0073\u002f\u0020\u0025\u0064\u0020\u0063\u0072e\u0061t\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e\u0020",_dcb .Type ,_dcb .Type );};_fde =_fcda ();_c .Log .Trace ("\u005b\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u0020\u0061\u0074\u0020\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0030\u0034\u0058",_dcb .SegmentNumber ,_dcb .SegmentDataStartOffset );_bdg ,_aggf :=_dcb .subInputReader ();if _aggf !=nil {return nil ,_aggf ;};if _ggd :=_fde .Init (_dcb ,_bdg );_ggd !=nil {_c .Log .Debug ("\u0049\u006e\u0069\u0074 \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076 \u0066o\u0072\u0020\u0074\u0079\u0070\u0065\u003a \u0025\u0054",_ggd ,_fde );return nil ,_ggd ;};_dcb .SegmentData =_fde ;};return _fde ,nil ;};func (_ebee *Header )readDataStartOffset (_fdcab _da .StreamReader ,_fgb OrganizationType ){if _fgb ==OSequential {_ebee .SegmentDataStartOffset =uint64 (_fdcab .StreamPosition ());};};type HalftoneRegion struct{_geg _da .StreamReader ;_babf *Header ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;HDefaultPixel int8 ;CombinationOperator _dd .CombinationOperator ;HSkipEnabled bool ;HTemplate byte ;IsMMREncoded bool ;HGridWidth uint32 ;HGridHeight uint32 ;HGridX int32 ;HGridY int32 ;HRegionX uint16 ;HRegionY uint16 ;HalftoneRegionBitmap *_dd .Bitmap ;Patterns []*_dd .Bitmap ;};var (_cabfc Segmenter ;_eab =map[Type ]func ()Segmenter {TSymbolDictionary :func ()Segmenter {return &SymbolDictionary {}},TIntermediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateLosslessTextRegion :func ()Segmenter {return &TextRegion {}},TPatternDictionary :func ()Segmenter {return &PatternDictionary {}},TIntermediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateLosslessHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TIntermediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateLosslessGenericRegion :func ()Segmenter {return &GenericRegion {}},TIntermediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateLosslessGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TPageInformation :func ()Segmenter {return &PageInformationSegment {}},TEndOfPage :func ()Segmenter {return _cabfc },TEndOfStrip :func ()Segmenter {return &EndOfStripe {}},TEndOfFile :func ()Segmenter {return _cabfc },TProfiles :func ()Segmenter {return _cabfc },TTables :func ()Segmenter {return &TableSegment {}},TExtension :func ()Segmenter {return _cabfc },TBitmap :func ()Segmenter {return _cabfc }};);func (_ddgd *HalftoneRegion )checkInput ()error {if _ddgd .IsMMREncoded {if _ddgd .HTemplate !=0{_c .Log .Debug ("\u0048\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030",_ddgd .HTemplate );};if _ddgd .HSkipEnabled {_c .Log .Debug ("\u0048\u0053\u006b\u0069\u0070\u0045\u006e\u0061\u0062\u006c\u0065\u0064\u0020\u0030\u0020\u0025\u0076\u0020(\u0073\u0068\u006f\u0075\u006c\u0064\u0020c\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020v\u0061\u006c\u0075\u0065\u0020\u0066\u0061\u006c\u0073\u0065\u0029",_ddgd .HSkipEnabled );};};return nil ;};func (_efec *GenericRegion )writeGBAtPixels (_edg _da .BinaryWriter )(_egg int ,_febc error ){const _aafb ="\u0077r\u0069t\u0065\u0047\u0042\u0041\u0074\u0050\u0069\u0078\u0065\u006c\u0073";if _efec .UseMMR {return 0,nil ;};_dfcc :=1;if _efec .GBTemplate ==0{_dfcc =4;}else if _efec .UseExtTemplates {_dfcc =12;};if len (_efec .GBAtX )!=_dfcc {return 0,_dg .Errorf (_aafb ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0058\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");};if len (_efec .GBAtY )!=_dfcc {return 0,_dg .Errorf (_aafb ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0059\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");};for _dacf :=0;_dacf < _dfcc ;_dacf ++{if _febc =_edg .WriteByte (byte (_efec .GBAtX [_dacf ]));_febc !=nil {return _egg ,_dg .Wrap (_febc ,_aafb ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0058");};_egg ++;if _febc =_edg .WriteByte (byte (_efec .GBAtY [_dacf ]));_febc !=nil {return _egg ,_dg .Wrap (_febc ,_aafb ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0059");};_egg ++;};return _egg ,nil ;};func (_acgf *GenericRegion )Init (h *Header ,r _da .StreamReader )error {_acgf .RegionSegment =NewRegionSegment (r );_acgf ._edac =r ;return _acgf .parseHeader ();};func (_dacd *Header )readSegmentPageAssociation (_efg Documenter ,_fbab _da .StreamReader ,_abea uint64 ,_eebf ...int )(_bdeb error ){const _cdfe ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074P\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061t\u0069\u006f\u006e";if !_dacd .PageAssociationFieldSize {_gdge ,_cgdb :=_fbab .ReadBits (8);if _cgdb !=nil {return _dg .Wrap (_cgdb ,_cdfe ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_dacd .PageAssociation =int (_gdge &0xFF);}else {_fcee ,_fefa :=_fbab .ReadBits (32);if _fefa !=nil {return _dg .Wrap (_fefa ,_cdfe ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_dacd .PageAssociation =int (_fcee &_d .MaxInt32 );};if _abea ==0{return nil ;};if _dacd .PageAssociation !=0{_dbe ,_dae :=_efg .GetPage (_dacd .PageAssociation );if _dae !=nil {return _dg .Wrap (_dae ,_cdfe ,"\u0061s\u0073\u006f\u0063\u0069a\u0074\u0065\u0064\u0020\u0070a\u0067e\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006ed");};var _ddea int ;for _cdfed :=uint64 (0);_cdfed < _abea ;_cdfed ++{_ddea =_eebf [_cdfed ];_dacd .RTSegments [_cdfed ],_dae =_dbe .GetSegment (_ddea );if _dae !=nil {var _aebd error ;_dacd .RTSegments [_cdfed ],_aebd =_efg .GetGlobalSegment (_ddea );if _aebd !=nil {return _dg .Wrapf (_dae ,_cdfe ,"\u0072\u0065\u0066\u0065\u0072\u0065n\u0063\u0065\u0020s\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064\u0020\u0061\u0074\u0020pa\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0072\u0020\u0069\u006e\u0020\u0067\u006c\u006f\u0062\u0061\u006c\u0073",_dacd .PageAssociation );};};};return nil ;};for _abaa :=uint64 (0);_abaa < _abea ;_abaa ++{_dacd .RTSegments [_abaa ],_bdeb =_efg .GetGlobalSegment (_eebf [_abaa ]);if _bdeb !=nil {return _dg .Wrapf (_bdeb ,_cdfe ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u003a\u0020\u0027\u0025d\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064",_eebf [_abaa ]);};};return nil ;};type EndOfStripe struct{_dac _da .StreamReader ;_ff int ;};func (_gcdb *SymbolDictionary )decodeRefinedSymbol (_bdga ,_fgab uint32 )error {var (_effd int ;_gcddg ,_ecb int32 ;);if _gcdb .IsHuffmanEncoded {_bcdc ,_bbgba :=_gcdb ._bbdfb .ReadBits (byte (_gcdb ._egbf ));if _bbgba !=nil {return _bbgba ;};_effd =int (_bcdc );_adgg ,_bbgba :=_e .GetStandardTable (15);if _bbgba !=nil {return _bbgba ;};_fggg ,_bbgba :=_adgg .Decode (_gcdb ._bbdfb );if _bbgba !=nil {return _bbgba ;};_gcddg =int32 (_fggg );_fggg ,_bbgba =_adgg .Decode (_gcdb ._bbdfb );if _bbgba !=nil {return _bbgba ;};_ecb =int32 (_fggg );_adgg ,_bbgba =_e .GetStandardTable (1);if _bbgba !=nil {return _bbgba ;};if _ ,_bbgba =_adgg .Decode (_gcdb ._bbdfb );_bbgba !=nil {return _bbgba ;};_gcdb ._bbdfb .Align ();}else {_cege ,_bcgd :=_gcdb ._bbbd .DecodeIAID (uint64 (_gcdb ._egbf ),_gcdb ._aecf );if _bcgd !=nil {return _bcgd ;};_effd =int (_cege );_gcddg ,_bcgd =_gcdb ._bbbd .DecodeInt (_gcdb ._cdbg );if _bcgd !=nil {return _bcgd ;};_ecb ,_bcgd =_gcdb ._bbbd .DecodeInt (_gcdb ._fdbd );if _bcgd !=nil {return _bcgd ;};};if _fcgd :=_gcdb .setSymbolsArray ();_fcgd !=nil {return _fcgd ;};_fcfcg :=_gcdb ._acge [_effd ];if _fegc :=_gcdb .decodeNewSymbols (_bdga ,_fgab ,_fcfcg ,_gcddg ,_ecb );_fegc !=nil {return _fegc ;};if _gcdb .IsHuffmanEncoded {_gcdb ._bbdfb .Align ();};return nil ;};func (_dfadd *SymbolDictionary )readNumberOfNewSymbols ()error {_ccgab ,_fgaf :=_dfadd ._bbdfb .ReadBits (32);if _fgaf !=nil {return _fgaf ;};_dfadd .NumberOfNewSymbols =uint32 (_ccgab &_d .MaxUint32 );return nil ;};func (_adde *PageInformationSegment )parseHeader ()(_bcf error ){_c .Log .Trace ("\u005b\u0050\u0061\u0067\u0065I\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067m\u0065\u006e\u0074\u005d\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u002e\u002e");defer func (){var _dcdg ="[\u0050\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072m\u0061\u0074\u0069\u006f\u006e\u0053\u0065gm\u0065\u006e\u0074\u005d \u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065ad\u0065\u0072 \u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064";if _bcf !=nil {_dcdg +="\u0020\u0077\u0069t\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u0020"+_bcf .Error ();}else {_dcdg +="\u0020\u0073\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079";};_c .Log .Trace (_dcdg );}();if _bcf =_adde .readWidthAndHeight ();_bcf !=nil {return _bcf ;};if _bcf =_adde .readResolution ();_bcf !=nil {return _bcf ;};_ ,_bcf =_adde ._fbcb .ReadBit ();if _bcf !=nil {return _bcf ;};if _bcf =_adde .readCombinationOperatorOverrideAllowed ();_bcf !=nil {return _bcf ;};if _bcf =_adde .readRequiresAuxiliaryBuffer ();_bcf !=nil {return _bcf ;};if _bcf =_adde .readCombinationOperator ();_bcf !=nil {return _bcf ;};if _bcf =_adde .readDefaultPixelValue ();_bcf !=nil {return _bcf ;};if _bcf =_adde .readContainsRefinement ();_bcf !=nil {return _bcf ;};if _bcf =_adde .readIsLossless ();_bcf !=nil {return _bcf ;};if _bcf =_adde .readIsStriped ();_bcf !=nil {return _bcf ;};if _bcf =_adde .readMaxStripeSize ();_bcf !=nil {return _bcf ;};if _bcf =_adde .checkInput ();_bcf !=nil {return _bcf ;};_c .Log .Trace ("\u0025\u0073",_adde );return nil ;};func (_cdcd *PageInformationSegment )CombinationOperator ()_dd .CombinationOperator {return _cdcd ._gebb ;};func (_gecf *GenericRefinementRegion )setParameters (_bcac *_ag .DecoderStats ,_aba *_ag .Decoder ,_ccb int8 ,_gfg ,_dfge uint32 ,_ddfa *_dd .Bitmap ,_gcdc ,_gcdd int32 ,_cddf bool ,_bfb []int8 ,_ecfg []int8 ){_c .Log .Trace ("\u005b\u0047\u0045NE\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052E\u0047I\u004fN\u005d \u0073\u0065\u0074\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073");if _bcac !=nil {_gecf ._bbc =_bcac ;};if _aba !=nil {_gecf ._fb =_aba ;};_gecf .TemplateID =_ccb ;_gecf .RegionInfo .BitmapWidth =_gfg ;_gecf .RegionInfo .BitmapHeight =_dfge ;_gecf .ReferenceBitmap =_ddfa ;_gecf .ReferenceDX =_gcdc ;_gecf .ReferenceDY =_gcdd ;_gecf .IsTPGROn =_cddf ;_gecf .GrAtX =_bfb ;_gecf .GrAtY =_ecfg ;_gecf .RegionBitmap =nil ;_c .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073 f\u0069\u006ei\u0073\u0068\u0065\u0064\u002e\u0020\u0025\u0073",_gecf );};type Segmenter interface{Init (_daaf *Header ,_gafg _da .StreamReader )error ;};func (_gbef *SymbolDictionary )readNumberOfExportedSymbols ()error {_cbbb ,_ebbee :=_gbef ._bbdfb .ReadBits (32);if _ebbee !=nil {return _ebbee ;};_gbef .NumberOfExportedSymbols =uint32 (_cbbb &_d .MaxUint32 );return nil ;};func (_efac *GenericRegion )readGBAtPixels (_fbf int )error {const _baca ="\u0072\u0065\u0061\u0064\u0047\u0042\u0041\u0074\u0050i\u0078\u0065\u006c\u0073";_efac .GBAtX =make ([]int8 ,_fbf );_efac .GBAtY =make ([]int8 ,_fbf );for _cddc :=0;_cddc < _fbf ;_cddc ++{_ccd ,_bada :=_efac ._edac .ReadByte ();if _bada !=nil {return _dg .Wrapf (_bada ,_baca ,"\u0058\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_cddc );};_efac .GBAtX [_cddc ]=int8 (_ccd );_ccd ,_bada =_efac ._edac .ReadByte ();if _bada !=nil {return _dg .Wrapf (_bada ,_baca ,"\u0059\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_cddc );};_efac .GBAtY [_cddc ]=int8 (_ccd );};return nil ;};func (_fcbe *GenericRegion )copyLineAbove (_ggef int )error {_abcfe :=_ggef *_fcbe .Bitmap .RowStride ;_cge :=_abcfe -_fcbe .Bitmap .RowStride ;for _fcd :=0;_fcd < _fcbe .Bitmap .RowStride ;_fcd ++{_acd ,_cbge :=_fcbe .Bitmap .GetByte (_cge );if _cbge !=nil {return _cbge ;};_cge ++;if _cbge =_fcbe .Bitmap .SetByte (_abcfe ,_acd );_cbge !=nil {return _cbge ;};_abcfe ++;};return nil ;};func (_gcga *TextRegion )encodeFlags (_cad _da .BinaryWriter )(_faeb int ,_efgf error ){const _eaeaf ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _efgf =_cad .WriteBit (int (_gcga .SbrTemplate ));_efgf !=nil {return _faeb ,_dg .Wrap (_efgf ,_eaeaf ,"s\u0062\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};if _ ,_efgf =_cad .WriteBits (uint64 (_gcga .SbdsOffset ),5);_efgf !=nil {return _faeb ,_dg .Wrap (_efgf ,_eaeaf ,"\u0073\u0062\u0064\u0073\u004f\u0066\u0066\u0073\u0065\u0074");};if _efgf =_cad .WriteBit (int (_gcga .DefaultPixel ));_efgf !=nil {return _faeb ,_dg .Wrap (_efgf ,_eaeaf ,"\u0044\u0065\u0066a\u0075\u006c\u0074\u0050\u0069\u0078\u0065\u006c");};if _ ,_efgf =_cad .WriteBits (uint64 (_gcga .CombinationOperator ),2);_efgf !=nil {return _faeb ,_dg .Wrap (_efgf ,_eaeaf ,"\u0043\u006f\u006d\u0062in\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072");};if _efgf =_cad .WriteBit (int (_gcga .IsTransposed ));_efgf !=nil {return _faeb ,_dg .Wrap (_efgf ,_eaeaf ,"\u0069\u0073\u0020\u0074\u0072\u0061\u006e\u0073\u0070\u006f\u0073\u0065\u0064");};if _ ,_efgf =_cad .WriteBits (uint64 (_gcga .ReferenceCorner ),2);_efgf !=nil {return _faeb ,_dg .Wrap (_efgf ,_eaeaf ,"\u0072\u0065f\u0065\u0072\u0065n\u0063\u0065\u0020\u0063\u006f\u0072\u006e\u0065\u0072");};if _ ,_efgf =_cad .WriteBits (uint64 (_gcga .LogSBStrips ),2);_efgf !=nil {return _faeb ,_dg .Wrap (_efgf ,_eaeaf ,"L\u006f\u0067\u0053\u0042\u0053\u0074\u0072\u0069\u0070\u0073");};var _eebd int ;if _gcga .UseRefinement {_eebd =1;};if _efgf =_cad .WriteBit (_eebd );_efgf !=nil {return _faeb ,_dg .Wrap (_efgf ,_eaeaf ,"\u0075\u0073\u0065\u0020\u0072\u0065\u0066\u0069\u006ee\u006d\u0065\u006e\u0074");};_eebd =0;if _gcga .IsHuffmanEncoded {_eebd =1;};if _efgf =_cad .WriteBit (_eebd );_efgf !=nil {return _faeb ,_dg .Wrap (_efgf ,_eaeaf ,"u\u0073\u0065\u0020\u0068\u0075\u0066\u0066\u006d\u0061\u006e");};_faeb =2;return _faeb ,nil ;};