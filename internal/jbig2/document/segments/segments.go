//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package segments ;import (_e "encoding/binary";_ed "errors";_bg "fmt";_gc "github.com/unidoc/unipdf/v3/common";_gg "github.com/unidoc/unipdf/v3/internal/bitwise";_bd "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_f "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";
_ab "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/arithmetic";_ae "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/huffman";_ag "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/mmr";_de "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/arithmetic";
_c "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_gf "github.com/unidoc/unipdf/v3/internal/jbig2/internal";_ge "golang.org/x/xerrors";_ac "image";_b "io";_g "math";_da "strings";_d "time";);func (_faff *SymbolDictionary )setExportedSymbols (_fcfa []int ){for _defd :=uint32 (0);
_defd < _faff ._gdae +_faff .NumberOfNewSymbols ;_defd ++{if _fcfa [_defd ]==1{var _aagb *_f .Bitmap ;if _defd < _faff ._gdae {_aagb =_faff ._adf [_defd ];}else {_aagb =_faff ._abdec [_defd -_faff ._gdae ];};_gc .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u002d\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u0020\u0041\u0064\u0064 E\u0078\u0070\u006fr\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027%\u0073\u0027",_aagb );
_faff ._bdcg =append (_faff ._bdcg ,_aagb );};};};type template1 struct{};func (_gfegd *TextRegion )decodeRdx ()(int64 ,error ){const _gfca ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064x";if _gfegd .IsHuffmanEncoded {if _gfegd .SbHuffRDX ==3{if _gfegd ._eade ==nil {var (_fgfd int ;
_beac error ;);if _gfegd .SbHuffFS ==3{_fgfd ++;};if _gfegd .SbHuffDS ==3{_fgfd ++;};if _gfegd .SbHuffDT ==3{_fgfd ++;};if _gfegd .SbHuffRDWidth ==3{_fgfd ++;};if _gfegd .SbHuffRDHeight ==3{_fgfd ++;};_gfegd ._eade ,_beac =_gfegd .getUserTable (_fgfd );
if _beac !=nil {return 0,_c .Wrap (_beac ,_gfca ,"");};};return _gfegd ._eade .Decode (_gfegd ._aabb );};_egfef ,_acda :=_ae .GetStandardTable (14+int (_gfegd .SbHuffRDX ));if _acda !=nil {return 0,_c .Wrap (_acda ,_gfca ,"");};return _egfef .Decode (_gfegd ._aabb );
};_dacg ,_gfed :=_gfegd ._effff .DecodeInt (_gfegd ._beaf );if _gfed !=nil {return 0,_c .Wrap (_gfed ,_gfca ,"");};return int64 (_dacg ),nil ;};func (_cgdg *PatternDictionary )parseHeader ()error {_gc .Log .Trace ("\u005b\u0050\u0041\u0054\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054I\u004f\u004e\u0041\u0052\u0059\u005d[\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d\u0020b\u0065\u0067\u0069\u006e");
defer func (){_gc .Log .Trace ("\u005b\u0050\u0041T\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u005b\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
}();_ ,_bffe :=_cgdg ._bgedb .ReadBits (5);if _bffe !=nil {return _bffe ;};if _bffe =_cgdg .readTemplate ();_bffe !=nil {return _bffe ;};if _bffe =_cgdg .readIsMMREncoded ();_bffe !=nil {return _bffe ;};if _bffe =_cgdg .readPatternWidthAndHeight ();_bffe !=nil {return _bffe ;
};if _bffe =_cgdg .readGrayMax ();_bffe !=nil {return _bffe ;};if _bffe =_cgdg .computeSegmentDataStructure ();_bffe !=nil {return _bffe ;};return _cgdg .checkInput ();};func (_egdee *SymbolDictionary )getToExportFlags ()([]int ,error ){var (_dcbdc int ;
_cbcg int32 ;_cecg error ;_cdfe =int32 (_egdee ._gdae +_egdee .NumberOfNewSymbols );_dfcde =make ([]int ,_cdfe ););for _gecb :=int32 (0);_gecb < _cdfe ;_gecb +=_cbcg {if _egdee .IsHuffmanEncoded {_bfcbf ,_agcc :=_ae .GetStandardTable (1);if _agcc !=nil {return nil ,_agcc ;
};_efef ,_agcc :=_bfcbf .Decode (_egdee ._gfff );if _agcc !=nil {return nil ,_agcc ;};_cbcg =int32 (_efef );}else {_cbcg ,_cecg =_egdee ._baegb .DecodeInt (_egdee ._afdg );if _cecg !=nil {return nil ,_cecg ;};};if _cbcg !=0{for _dcag :=_gecb ;_dcag < _gecb +_cbcg ;
_dcag ++{_dfcde [_dcag ]=_dcbdc ;};};if _dcbdc ==0{_dcbdc =1;}else {_dcbdc =0;};};return _dfcde ,nil ;};func (_cgf *HalftoneRegion )computeSegmentDataStructure ()error {_cgf .DataOffset =_cgf ._cbfb .StreamPosition ();_cgf .DataHeaderLength =_cgf .DataOffset -_cgf .DataHeaderOffset ;
_cgf .DataLength =int64 (_cgf ._cbfb .Length ())-_cgf .DataHeaderLength ;return nil ;};func (_eefe *Header )writeReferredToCount (_dggd _gg .BinaryWriter )(_fded int ,_ebec error ){const _fgb ="w\u0072i\u0074\u0065\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0043ou\u006e\u0074";
_eefe .RTSNumbers =make ([]int ,len (_eefe .RTSegments ));for _cgb ,_acae :=range _eefe .RTSegments {_eefe .RTSNumbers [_cgb ]=int (_acae .SegmentNumber );};if len (_eefe .RTSNumbers )<=4{var _aegf byte ;if len (_eefe .RetainBits )>=1{_aegf =_eefe .RetainBits [0];
};_aegf |=byte (len (_eefe .RTSNumbers ))<<5;if _ebec =_dggd .WriteByte (_aegf );_ebec !=nil {return 0,_c .Wrap (_ebec ,_fgb ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return 1,nil ;};_efda :=uint32 (len (_eefe .RTSNumbers ));
_accc :=make ([]byte ,4+_bd .Ceil (len (_eefe .RTSNumbers )+1,8));_efda |=0x7<<29;_e .BigEndian .PutUint32 (_accc ,_efda );copy (_accc [1:],_eefe .RetainBits );_fded ,_ebec =_dggd .Write (_accc );if _ebec !=nil {return 0,_c .Wrap (_ebec ,_fgb ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");
};return _fded ,nil ;};func (_bbgf *TableSegment )HtPS ()int32 {return _bbgf ._efbf };func (_fd *EndOfStripe )parseHeader (_dc *Header ,_be _gg .StreamReader )error {_bdg ,_bgg :=_fd ._ga .ReadBits (32);if _bgg !=nil {return _bgg ;};_fd ._ad =int (_bdg &_g .MaxInt32 );
return nil ;};type TextRegion struct{_aabb _gg .StreamReader ;RegionInfo *RegionSegment ;SbrTemplate int8 ;SbDsOffset int8 ;DefaultPixel int8 ;CombinationOperator _f .CombinationOperator ;IsTransposed int8 ;ReferenceCorner int16 ;LogSBStrips int16 ;UseRefinement bool ;
IsHuffmanEncoded bool ;SbHuffRSize int8 ;SbHuffRDY int8 ;SbHuffRDX int8 ;SbHuffRDHeight int8 ;SbHuffRDWidth int8 ;SbHuffDT int8 ;SbHuffDS int8 ;SbHuffFS int8 ;SbrATX []int8 ;SbrATY []int8 ;NumberOfSymbolInstances uint32 ;_edbf int64 ;SbStrips int8 ;NumberOfSymbols uint32 ;
RegionBitmap *_f .Bitmap ;Symbols []*_f .Bitmap ;_effff *_ab .Decoder ;_gaae *GenericRefinementRegion ;_begg *_ab .DecoderStats ;_fcg *_ab .DecoderStats ;_dcfca *_ab .DecoderStats ;_dbcd *_ab .DecoderStats ;_cgdgf *_ab .DecoderStats ;_febae *_ab .DecoderStats ;
_agfg *_ab .DecoderStats ;_ccdd *_ab .DecoderStats ;_beaf *_ab .DecoderStats ;_ageaa *_ab .DecoderStats ;_ccff *_ab .DecoderStats ;_gdaf int8 ;_bafeb *_ae .FixedSizeTable ;Header *Header ;_ccddd _ae .Tabler ;_cdeb _ae .Tabler ;_ceed _ae .Tabler ;_adcg _ae .Tabler ;
_eaacb _ae .Tabler ;_eade _ae .Tabler ;_ece _ae .Tabler ;_edbgg _ae .Tabler ;_agce ,_bbdb map[int ]int ;_ebff []int ;_gadbb *_f .Points ;_dedb *_f .Bitmaps ;_fffa *_bd .IntSlice ;_fgcd ,_eeceb int ;_faee *_f .Boxes ;};func (_affg *PatternDictionary )readTemplate ()error {_fabc ,_dfcc :=_affg ._bgedb .ReadBits (2);
if _dfcc !=nil {return _dfcc ;};_affg .HDTemplate =byte (_fabc );return nil ;};func (_bcg *GenericRegion )readGBAtPixels (_dff int )error {const _dadf ="\u0072\u0065\u0061\u0064\u0047\u0042\u0041\u0074\u0050i\u0078\u0065\u006c\u0073";_bcg .GBAtX =make ([]int8 ,_dff );
_bcg .GBAtY =make ([]int8 ,_dff );for _fga :=0;_fga < _dff ;_fga ++{_caef ,_dcbf :=_bcg ._cfb .ReadByte ();if _dcbf !=nil {return _c .Wrapf (_dcbf ,_dadf ,"\u0058\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_fga );};_bcg .GBAtX [_fga ]=int8 (_caef );
_caef ,_dcbf =_bcg ._cfb .ReadByte ();if _dcbf !=nil {return _c .Wrapf (_dcbf ,_dadf ,"\u0059\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_fga );};_bcg .GBAtY [_fga ]=int8 (_caef );};return nil ;};func (_bddd *GenericRegion )Init (h *Header ,r _gg .StreamReader )error {_bddd .RegionSegment =NewRegionSegment (r );
_bddd ._cfb =r ;return _bddd .parseHeader ();};var _ SegmentEncoder =&GenericRegion {};func (_ecbb *HalftoneRegion )GetRegionInfo ()*RegionSegment {return _ecbb .RegionSegment };type PageInformationSegment struct{_abee _gg .StreamReader ;PageBMHeight int ;
PageBMWidth int ;ResolutionX int ;ResolutionY int ;_ccag bool ;_ggdf _f .CombinationOperator ;_fgg bool ;DefaultPixelValue uint8 ;_bafb bool ;IsLossless bool ;IsStripe bool ;MaxStripeSize uint16 ;};var (_aaf Segmenter ;_cdff =map[Type ]func ()Segmenter {TSymbolDictionary :func ()Segmenter {return &SymbolDictionary {}},TIntermediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateLosslessTextRegion :func ()Segmenter {return &TextRegion {}},TPatternDictionary :func ()Segmenter {return &PatternDictionary {}},TIntermediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateLosslessHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TIntermediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateLosslessGenericRegion :func ()Segmenter {return &GenericRegion {}},TIntermediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateLosslessGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TPageInformation :func ()Segmenter {return &PageInformationSegment {}},TEndOfPage :func ()Segmenter {return _aaf },TEndOfStrip :func ()Segmenter {return &EndOfStripe {}},TEndOfFile :func ()Segmenter {return _aaf },TProfiles :func ()Segmenter {return _aaf },TTables :func ()Segmenter {return &TableSegment {}},TExtension :func ()Segmenter {return _aaf },TBitmap :func ()Segmenter {return _aaf }};
);func (_abf *HalftoneRegion )GetRegionBitmap ()(*_f .Bitmap ,error ){if _abf .HalftoneRegionBitmap !=nil {return _abf .HalftoneRegionBitmap ,nil ;};var _gfbd error ;_abf .HalftoneRegionBitmap =_f .New (int (_abf .RegionSegment .BitmapWidth ),int (_abf .RegionSegment .BitmapHeight ));
if _abf .Patterns ==nil ||len (_abf .Patterns )==0{_abf .Patterns ,_gfbd =_abf .GetPatterns ();if _gfbd !=nil {return nil ,_gfbd ;};};if _abf .HDefaultPixel ==1{_abf .HalftoneRegionBitmap .SetDefaultPixel ();};_eef :=_g .Ceil (_g .Log (float64 (len (_abf .Patterns )))/_g .Log (2));
_abcd :=int (_eef );var _ccd [][]int ;_ccd ,_gfbd =_abf .grayScaleDecoding (_abcd );if _gfbd !=nil {return nil ,_gfbd ;};if _gfbd =_abf .renderPattern (_ccd );_gfbd !=nil {return nil ,_gfbd ;};return _abf .HalftoneRegionBitmap ,nil ;};func (_edge *GenericRefinementRegion )getPixel (_gbb *_f .Bitmap ,_fab ,_fda int )int {if _fab < 0||_fab >=_gbb .Width {return 0;
};if _fda < 0||_fda >=_gbb .Height {return 0;};if _gbb .GetPixel (_fab ,_fda ){return 1;};return 0;};type PatternDictionary struct{_bgedb _gg .StreamReader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;GBAtX []int8 ;
GBAtY []int8 ;IsMMREncoded bool ;HDTemplate byte ;HdpWidth byte ;HdpHeight byte ;Patterns []*_f .Bitmap ;GrayMax uint32 ;};func (_fbf *SymbolDictionary )huffDecodeBmSize ()(int64 ,error ){if _fbf ._cfceb ==nil {var (_caefb int ;_bdf error ;);if _fbf .SdHuffDecodeHeightSelection ==3{_caefb ++;
};if _fbf .SdHuffDecodeWidthSelection ==3{_caefb ++;};_fbf ._cfceb ,_bdf =_fbf .getUserTable (_caefb );if _bdf !=nil {return 0,_bdf ;};};return _fbf ._cfceb .Decode (_fbf ._gfff );};func (_dgbdb *TextRegion )decodeRdw ()(int64 ,error ){const _fbbb ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064w";
if _dgbdb .IsHuffmanEncoded {if _dgbdb .SbHuffRDWidth ==3{if _dgbdb ._adcg ==nil {var (_bdfd int ;_gegeb error ;);if _dgbdb .SbHuffFS ==3{_bdfd ++;};if _dgbdb .SbHuffDS ==3{_bdfd ++;};if _dgbdb .SbHuffDT ==3{_bdfd ++;};_dgbdb ._adcg ,_gegeb =_dgbdb .getUserTable (_bdfd );
if _gegeb !=nil {return 0,_c .Wrap (_gegeb ,_fbbb ,"");};};return _dgbdb ._adcg .Decode (_dgbdb ._aabb );};_facff ,_eacg :=_ae .GetStandardTable (14+int (_dgbdb .SbHuffRDWidth ));if _eacg !=nil {return 0,_c .Wrap (_eacg ,_fbbb ,"");};return _facff .Decode (_dgbdb ._aabb );
};_ffda ,_dbcde :=_dgbdb ._effff .DecodeInt (_dgbdb ._febae );if _dbcde !=nil {return 0,_c .Wrap (_dbcde ,_fbbb ,"");};return int64 (_ffda ),nil ;};func (_geeg *SymbolDictionary )decodeHeightClassBitmap (_dgbfb *_f .Bitmap ,_eacb int64 ,_ddbf int ,_fbdfe []int )error {for _aceg :=_eacb ;
_aceg < int64 (_geeg ._dcbc );_aceg ++{var _ebga int ;for _gdaa :=_eacb ;_gdaa <=_aceg -1;_gdaa ++{_ebga +=_fbdfe [_gdaa ];};_gdfgd :=_ac .Rect (_ebga ,0,_ebga +_fbdfe [_aceg ],_ddbf );_ebca ,_affgd :=_f .Extract (_gdfgd ,_dgbfb );if _affgd !=nil {return _affgd ;
};_geeg ._abdec [_aceg ]=_ebca ;_geeg ._affgc =append (_geeg ._affgc ,_ebca );};return nil ;};func (_addd *TextRegion )decodeCurrentT ()(int64 ,error ){if _addd .SbStrips !=1{if _addd .IsHuffmanEncoded {_adfc ,_bbdfg :=_addd ._aabb .ReadBits (byte (_addd .LogSBStrips ));
return int64 (_adfc ),_bbdfg ;};_ccde ,_dgcdc :=_addd ._effff .DecodeInt (_addd ._dbcd );if _dgcdc !=nil {return 0,_dgcdc ;};return int64 (_ccde ),nil ;};return 0,nil ;};func (_eabc *TableSegment )Init (h *Header ,r _gg .StreamReader )error {_eabc ._daaf =r ;
return _eabc .parseHeader ();};func NewGenericRegion (r _gg .StreamReader )*GenericRegion {return &GenericRegion {RegionSegment :NewRegionSegment (r ),_cfb :r };};func (_bagc *PatternDictionary )checkInput ()error {if _bagc .HdpHeight < 1||_bagc .HdpWidth < 1{return _ed .New ("in\u0076\u0061l\u0069\u0064\u0020\u0048\u0065\u0061\u0064\u0065\u0072 \u0056\u0061\u006c\u0075\u0065\u003a\u0020\u0057\u0069\u0064\u0074\u0068\u002f\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020g\u0072e\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020z\u0065\u0072o");
};if _bagc .IsMMREncoded {if _bagc .HDTemplate !=0{_gc .Log .Debug ("\u0076\u0061\u0072\u0069\u0061\u0062\u006c\u0065\u0020\u0048\u0044\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e \u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030");
};};return nil ;};func (_bbec *PageInformationSegment )Size ()int {return 19};func (_gdgfg *TextRegion )decodeDfs ()(int64 ,error ){if _gdgfg .IsHuffmanEncoded {if _gdgfg .SbHuffFS ==3{if _gdgfg ._ccddd ==nil {var _eecg error ;_gdgfg ._ccddd ,_eecg =_gdgfg .getUserTable (0);
if _eecg !=nil {return 0,_eecg ;};};return _gdgfg ._ccddd .Decode (_gdgfg ._aabb );};_cfbb ,_facd :=_ae .GetStandardTable (6+int (_gdgfg .SbHuffFS ));if _facd !=nil {return 0,_facd ;};return _cfbb .Decode (_gdgfg ._aabb );};_fecg ,_fddc :=_gdgfg ._effff .DecodeInt (_gdgfg ._fcg );
if _fddc !=nil {return 0,_fddc ;};return int64 (_fecg ),nil ;};type Type int ;func (_bbe *GenericRegion )decodeTemplate3 (_eac ,_gdd ,_bgb int ,_bac ,_cfba int )(_dgfb error ){const _adg ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0033";
var (_efeb ,_bdb int ;_efgd int ;_gbgc byte ;_cafa ,_egfb int ;);if _eac >=1{_gbgc ,_dgfb =_bbe .Bitmap .GetByte (_cfba );if _dgfb !=nil {return _c .Wrap (_dgfb ,_adg ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_efgd =int (_gbgc );};_efeb =(_efgd >>1)&0x70;
for _aedg :=0;_aedg < _bgb ;_aedg =_cafa {var (_gda byte ;_gfe int ;);_cafa =_aedg +8;if _gfaf :=_gdd -_aedg ;_gfaf > 8{_gfe =8;}else {_gfe =_gfaf ;};if _eac >=1{_efgd <<=8;if _cafa < _gdd {_gbgc ,_dgfb =_bbe .Bitmap .GetByte (_cfba +1);if _dgfb !=nil {return _c .Wrap (_dgfb ,_adg ,"\u0069\u006e\u006e\u0065\u0072\u0020\u002d\u0020\u006c\u0069\u006e\u0065 \u003e\u003d\u0020\u0031");
};_efgd |=int (_gbgc );};};for _eaeb :=0;_eaeb < _gfe ;_eaeb ++{if _bbe ._cccg {_bdb =_bbe .overrideAtTemplate3 (_efeb ,_aedg +_eaeb ,_eac ,int (_gda ),_eaeb );_bbe ._eaac .SetIndex (int32 (_bdb ));}else {_bbe ._eaac .SetIndex (int32 (_efeb ));};_egfb ,_dgfb =_bbe ._eeg .DecodeBit (_bbe ._eaac );
if _dgfb !=nil {return _c .Wrap (_dgfb ,_adg ,"");};_gda |=byte (_egfb )<<byte (7-_eaeb );_efeb =((_efeb &0x1f7)<<1)|_egfb |((_efgd >>uint (8-_eaeb ))&0x010);};if _fcc :=_bbe .Bitmap .SetByte (_bac ,_gda );_fcc !=nil {return _c .Wrap (_fcc ,_adg ,"");};
_bac ++;_cfba ++;};return nil ;};func (_aegab Type )String ()string {switch _aegab {case TSymbolDictionary :return "\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079";case TIntermediateTextRegion :return "\u0049n\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020T\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TImmediateTextRegion :return "I\u006d\u006d\u0065\u0064ia\u0074e\u0020\u0054\u0065\u0078\u0074 \u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessTextRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020L\u006f\u0073\u0073\u006c\u0065\u0073\u0073 \u0054\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TPatternDictionary :return "\u0050a\u0074t\u0065\u0072\u006e\u0020\u0044i\u0063\u0074i\u006f\u006e\u0061\u0072\u0079";case TIntermediateHalftoneRegion :return "\u0049\u006e\u0074\u0065r\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0048\u0061l\u0066t\u006f\u006e\u0065\u0020\u0052\u0065\u0067i\u006f\u006e";
case TImmediateHalftoneRegion :return "\u0049m\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u0048\u0061l\u0066t\u006fn\u0065\u0020\u0052\u0065\u0067\u0069\u006fn";case TImmediateLosslessHalftoneRegion :return "\u0049\u006d\u006ded\u0069\u0061\u0074\u0065\u0020\u004c\u006f\u0073\u0073l\u0065s\u0073 \u0048a\u006c\u0066\u0074\u006f\u006e\u0065\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TIntermediateGenericRegion :return "I\u006e\u0074\u0065\u0072\u006d\u0065d\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020R\u0065g\u0069\u006f\u006e";case TImmediateGenericRegion :return "\u0049m\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006ee\u0072\u0069\u0063\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TImmediateLosslessGenericRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u004c\u006f\u0073\u0073\u006c\u0065\u0073\u0073\u0020\u0047e\u006e\u0065\u0072\u0069\u0063\u0020\u0052e\u0067\u0069\u006f\u006e";case TIntermediateGenericRefinementRegion :return "\u0049\u006e\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0020\u0052\u0065\u0066i\u006e\u0065\u006d\u0065\u006et\u0020\u0052e\u0067\u0069\u006f\u006e";
case TImmediateGenericRefinementRegion :return "I\u006d\u006d\u0065\u0064\u0069\u0061t\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020\u0052\u0065\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020\u0052\u0065\u0067\u0069o\u006e";case TImmediateLosslessGenericRefinementRegion :return "\u0049m\u006d\u0065d\u0069\u0061\u0074\u0065 \u004c\u006f\u0073s\u006c\u0065\u0073\u0073\u0020\u0047\u0065\u006e\u0065ri\u0063\u0020\u0052e\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020R\u0065\u0067i\u006f\u006e";
case TPageInformation :return "\u0050\u0061g\u0065\u0020\u0049n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e";case TEndOfPage :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0050\u0061\u0067\u0065";case TEndOfStrip :return "\u0045\u006e\u0064 \u004f\u0066\u0020\u0053\u0074\u0072\u0069\u0070";
case TEndOfFile :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0046\u0069\u006c\u0065";case TProfiles :return "\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0073";case TTables :return "\u0054\u0061\u0062\u006c\u0065\u0073";case TExtension :return "\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn";
case TBitmap :return "\u0042\u0069\u0074\u006d\u0061\u0070";};return "I\u006ev\u0061\u006c\u0069\u0064\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0020Ki\u006e\u0064";};func (_ccfd *Header )GetSegmentData ()(Segmenter ,error ){var _gfd Segmenter ;if _ccfd .SegmentData !=nil {_gfd =_ccfd .SegmentData ;
};if _gfd ==nil {_aded ,_gdc :=_cdff [_ccfd .Type ];if !_gdc {return nil ,_bg .Errorf ("\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0073\u002f\u0020\u0025\u0064\u0020\u0063\u0072e\u0061t\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e\u0020",_ccfd .Type ,_ccfd .Type );
};_gfd =_aded ();_gc .Log .Trace ("\u005b\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u0020\u0061\u0074\u0020\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0030\u0034\u0058",_ccfd .SegmentNumber ,_ccfd .SegmentDataStartOffset );
_agac ,_dgc :=_ccfd .subInputReader ();if _dgc !=nil {return nil ,_dgc ;};if _ccge :=_gfd .Init (_ccfd ,_agac );_ccge !=nil {_gc .Log .Debug ("\u0049\u006e\u0069\u0074 \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076 \u0066o\u0072\u0020\u0074\u0079\u0070\u0065\u003a \u0025\u0054",_ccge ,_gfd );
return nil ,_ccge ;};_ccfd .SegmentData =_gfd ;};return _gfd ,nil ;};func (_gcbaf *PatternDictionary )readGrayMax ()error {_gdga ,_fggc :=_gcbaf ._bgedb .ReadBits (32);if _fggc !=nil {return _fggc ;};_gcbaf .GrayMax =uint32 (_gdga &_g .MaxUint32 );return nil ;
};func (_eggd *RegionSegment )Encode (w _gg .BinaryWriter )(_cgfg int ,_efag error ){const _eabf ="R\u0065g\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065n\u0074\u002e\u0045\u006eco\u0064\u0065";_dbf :=make ([]byte ,4);_e .BigEndian .PutUint32 (_dbf ,_eggd .BitmapWidth );
_cgfg ,_efag =w .Write (_dbf );if _efag !=nil {return 0,_c .Wrap (_efag ,_eabf ,"\u0057\u0069\u0064t\u0068");};_e .BigEndian .PutUint32 (_dbf ,_eggd .BitmapHeight );var _efff int ;_efff ,_efag =w .Write (_dbf );if _efag !=nil {return 0,_c .Wrap (_efag ,_eabf ,"\u0048\u0065\u0069\u0067\u0068\u0074");
};_cgfg +=_efff ;_e .BigEndian .PutUint32 (_dbf ,_eggd .XLocation );_efff ,_efag =w .Write (_dbf );if _efag !=nil {return 0,_c .Wrap (_efag ,_eabf ,"\u0058L\u006f\u0063\u0061\u0074\u0069\u006fn");};_cgfg +=_efff ;_e .BigEndian .PutUint32 (_dbf ,_eggd .YLocation );
_efff ,_efag =w .Write (_dbf );if _efag !=nil {return 0,_c .Wrap (_efag ,_eabf ,"\u0059L\u006f\u0063\u0061\u0074\u0069\u006fn");};_cgfg +=_efff ;if _efag =w .WriteByte (byte (_eggd .CombinaionOperator )&0x07);_efag !=nil {return 0,_c .Wrap (_efag ,_eabf ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");
};_cgfg ++;return _cgfg ,nil ;};func (_gdfe *PatternDictionary )computeSegmentDataStructure ()error {_gdfe .DataOffset =_gdfe ._bgedb .StreamPosition ();_gdfe .DataHeaderLength =_gdfe .DataOffset -_gdfe .DataHeaderOffset ;_gdfe .DataLength =int64 (_gdfe ._bgedb .Length ())-_gdfe .DataHeaderLength ;
return nil ;};func (_dgbd *GenericRegion )updateOverrideFlags ()error {const _cfc ="\u0075\u0070\u0064\u0061te\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _dgbd .GBAtX ==nil ||_dgbd .GBAtY ==nil {return nil ;};if len (_dgbd .GBAtX )!=len (_dgbd .GBAtY ){return _c .Errorf (_cfc ,"i\u006eco\u0073i\u0073t\u0065\u006e\u0074\u0020\u0041T\u0020\u0070\u0069x\u0065\u006c\u002e\u0020\u0041m\u006f\u0075\u006et\u0020\u006f\u0066\u0020\u0027\u0078\u0027\u0020\u0070\u0069\u0078e\u006c\u0073\u003a %d\u002c\u0020\u0041\u006d\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0027\u0079\u0027\u0020\u0070\u0069\u0078e\u006cs\u003a\u0020\u0025\u0064",len (_dgbd .GBAtX ),len (_dgbd .GBAtY ));
};_dgbd .GBAtOverride =make ([]bool ,len (_dgbd .GBAtX ));switch _dgbd .GBTemplate {case 0:if !_dgbd .UseExtTemplates {if _dgbd .GBAtX [0]!=3||_dgbd .GBAtY [0]!=-1{_dgbd .setOverrideFlag (0);};if _dgbd .GBAtX [1]!=-3||_dgbd .GBAtY [1]!=-1{_dgbd .setOverrideFlag (1);
};if _dgbd .GBAtX [2]!=2||_dgbd .GBAtY [2]!=-2{_dgbd .setOverrideFlag (2);};if _dgbd .GBAtX [3]!=-2||_dgbd .GBAtY [3]!=-2{_dgbd .setOverrideFlag (3);};}else {if _dgbd .GBAtX [0]!=-2||_dgbd .GBAtY [0]!=0{_dgbd .setOverrideFlag (0);};if _dgbd .GBAtX [1]!=0||_dgbd .GBAtY [1]!=-2{_dgbd .setOverrideFlag (1);
};if _dgbd .GBAtX [2]!=-2||_dgbd .GBAtY [2]!=-1{_dgbd .setOverrideFlag (2);};if _dgbd .GBAtX [3]!=-1||_dgbd .GBAtY [3]!=-2{_dgbd .setOverrideFlag (3);};if _dgbd .GBAtX [4]!=1||_dgbd .GBAtY [4]!=-2{_dgbd .setOverrideFlag (4);};if _dgbd .GBAtX [5]!=2||_dgbd .GBAtY [5]!=-1{_dgbd .setOverrideFlag (5);
};if _dgbd .GBAtX [6]!=-3||_dgbd .GBAtY [6]!=0{_dgbd .setOverrideFlag (6);};if _dgbd .GBAtX [7]!=-4||_dgbd .GBAtY [7]!=0{_dgbd .setOverrideFlag (7);};if _dgbd .GBAtX [8]!=2||_dgbd .GBAtY [8]!=-2{_dgbd .setOverrideFlag (8);};if _dgbd .GBAtX [9]!=3||_dgbd .GBAtY [9]!=-1{_dgbd .setOverrideFlag (9);
};if _dgbd .GBAtX [10]!=-2||_dgbd .GBAtY [10]!=-2{_dgbd .setOverrideFlag (10);};if _dgbd .GBAtX [11]!=-3||_dgbd .GBAtY [11]!=-1{_dgbd .setOverrideFlag (11);};};case 1:if _dgbd .GBAtX [0]!=3||_dgbd .GBAtY [0]!=-1{_dgbd .setOverrideFlag (0);};case 2:if _dgbd .GBAtX [0]!=2||_dgbd .GBAtY [0]!=-1{_dgbd .setOverrideFlag (0);
};case 3:if _dgbd .GBAtX [0]!=2||_dgbd .GBAtY [0]!=-1{_dgbd .setOverrideFlag (0);};};return nil ;};func (_dfbd *SymbolDictionary )readAtPixels (_cbbcc int )error {_dfbd .SdATX =make ([]int8 ,_cbbcc );_dfbd .SdATY =make ([]int8 ,_cbbcc );var (_fad byte ;
_abbd error ;);for _cga :=0;_cga < _cbbcc ;_cga ++{_fad ,_abbd =_dfbd ._gfff .ReadByte ();if _abbd !=nil {return _abbd ;};_dfbd .SdATX [_cga ]=int8 (_fad );_fad ,_abbd =_dfbd ._gfff .ReadByte ();if _abbd !=nil {return _abbd ;};_dfbd .SdATY [_cga ]=int8 (_fad );
};return nil ;};var _ templater =&template0 {};func (_gecd *HalftoneRegion )combineGrayscalePlanes (_ecgegd []*_f .Bitmap ,_cbe int )error {_dcdg :=0;for _bbce :=0;_bbce < _ecgegd [_cbe ].Height ;_bbce ++{for _gcef :=0;_gcef < _ecgegd [_cbe ].Width ;_gcef +=8{_efd ,_abe :=_ecgegd [_cbe +1].GetByte (_dcdg );
if _abe !=nil {return _abe ;};_fae ,_abe :=_ecgegd [_cbe ].GetByte (_dcdg );if _abe !=nil {return _abe ;};_abe =_ecgegd [_cbe ].SetByte (_dcdg ,_f .CombineBytes (_fae ,_efd ,_f .CmbOpXor ));if _abe !=nil {return _abe ;};_dcdg ++;};};return nil ;};func (_baff *PageInformationSegment )CombinationOperator ()_f .CombinationOperator {return _baff ._ggdf };
func (_abbb *TextRegion )setParameters (_dggg *_ab .Decoder ,_ddde ,_ecac bool ,_dcba ,_ecff uint32 ,_cdbc uint32 ,_aafb int8 ,_fdcd uint32 ,_gfec int8 ,_egfba _f .CombinationOperator ,_eafg int8 ,_fbdfb int16 ,_gbdd ,_fcafg ,_abff ,_bdcf ,_bfdb ,_afae ,_eabcd ,_acdf ,_gecgf ,_dbfbdc int8 ,_cacf ,_efdb []int8 ,_feae []*_f .Bitmap ,_acbc int8 ){_abbb ._effff =_dggg ;
_abbb .IsHuffmanEncoded =_ddde ;_abbb .UseRefinement =_ecac ;_abbb .RegionInfo .BitmapWidth =_dcba ;_abbb .RegionInfo .BitmapHeight =_ecff ;_abbb .NumberOfSymbolInstances =_cdbc ;_abbb .SbStrips =_aafb ;_abbb .NumberOfSymbols =_fdcd ;_abbb .DefaultPixel =_gfec ;
_abbb .CombinationOperator =_egfba ;_abbb .IsTransposed =_eafg ;_abbb .ReferenceCorner =_fbdfb ;_abbb .SbDsOffset =_gbdd ;_abbb .SbHuffFS =_fcafg ;_abbb .SbHuffDS =_abff ;_abbb .SbHuffDT =_bdcf ;_abbb .SbHuffRDWidth =_bfdb ;_abbb .SbHuffRDHeight =_afae ;
_abbb .SbHuffRSize =_gecgf ;_abbb .SbHuffRDX =_eabcd ;_abbb .SbHuffRDY =_acdf ;_abbb .SbrTemplate =_dbfbdc ;_abbb .SbrATX =_cacf ;_abbb .SbrATY =_efdb ;_abbb .Symbols =_feae ;_abbb ._gdaf =_acbc ;};func (_dfcgd *PageInformationSegment )readIsStriped ()error {_gcbg ,_fgbg :=_dfcgd ._abee .ReadBit ();
if _fgbg !=nil {return _fgbg ;};if _gcbg ==1{_dfcgd .IsStripe =true ;};return nil ;};func (_caff *TextRegion )symbolIDCodeLengths ()error {var (_gcea []*_ae .Code ;_bbfc uint64 ;_ggcg _ae .Tabler ;_bffb error ;);for _aaff :=0;_aaff < 35;_aaff ++{_bbfc ,_bffb =_caff ._aabb .ReadBits (4);
if _bffb !=nil {return _bffb ;};_gdfeb :=int (_bbfc &0xf);if _gdfeb > 0{_gcea =append (_gcea ,_ae .NewCode (int32 (_gdfeb ),0,int32 (_aaff ),false ));};};_ggcg ,_bffb =_ae .NewFixedSizeTable (_gcea );if _bffb !=nil {return _bffb ;};var (_acggb int64 ;_ccba uint32 ;
_bbdd []*_ae .Code ;_fcfb int64 ;);for _ccba < _caff .NumberOfSymbols {_fcfb ,_bffb =_ggcg .Decode (_caff ._aabb );if _bffb !=nil {return _bffb ;};if _fcfb < 32{if _fcfb > 0{_bbdd =append (_bbdd ,_ae .NewCode (int32 (_fcfb ),0,int32 (_ccba ),false ));};
_acggb =_fcfb ;_ccba ++;}else {var _faae ,_ebffa int64 ;switch _fcfb {case 32:_bbfc ,_bffb =_caff ._aabb .ReadBits (2);if _bffb !=nil {return _bffb ;};_faae =3+int64 (_bbfc );if _ccba > 0{_ebffa =_acggb ;};case 33:_bbfc ,_bffb =_caff ._aabb .ReadBits (3);
if _bffb !=nil {return _bffb ;};_faae =3+int64 (_bbfc );case 34:_bbfc ,_bffb =_caff ._aabb .ReadBits (7);if _bffb !=nil {return _bffb ;};_faae =11+int64 (_bbfc );};for _bfde :=0;_bfde < int (_faae );_bfde ++{if _ebffa > 0{_bbdd =append (_bbdd ,_ae .NewCode (int32 (_ebffa ),0,int32 (_ccba ),false ));
};_ccba ++;};};};_caff ._aabb .Align ();_caff ._bafeb ,_bffb =_ae .NewFixedSizeTable (_bbdd );return _bffb ;};func (_ddb *GenericRegion )overrideAtTemplate0b (_abac ,_bbea ,_cec ,_aabc ,_gecc ,_gcdd int )int {if _ddb .GBAtOverride [0]{_abac &=0xFFFD;if _ddb .GBAtY [0]==0&&_ddb .GBAtX [0]>=-int8 (_gecc ){_abac |=(_aabc >>uint (int8 (_gcdd )-_ddb .GBAtX [0]&0x1))<<1;
}else {_abac |=int (_ddb .getPixel (_bbea +int (_ddb .GBAtX [0]),_cec +int (_ddb .GBAtY [0])))<<1;};};if _ddb .GBAtOverride [1]{_abac &=0xDFFF;if _ddb .GBAtY [1]==0&&_ddb .GBAtX [1]>=-int8 (_gecc ){_abac |=(_aabc >>uint (int8 (_gcdd )-_ddb .GBAtX [1]&0x1))<<13;
}else {_abac |=int (_ddb .getPixel (_bbea +int (_ddb .GBAtX [1]),_cec +int (_ddb .GBAtY [1])))<<13;};};if _ddb .GBAtOverride [2]{_abac &=0xFDFF;if _ddb .GBAtY [2]==0&&_ddb .GBAtX [2]>=-int8 (_gecc ){_abac |=(_aabc >>uint (int8 (_gcdd )-_ddb .GBAtX [2]&0x1))<<9;
}else {_abac |=int (_ddb .getPixel (_bbea +int (_ddb .GBAtX [2]),_cec +int (_ddb .GBAtY [2])))<<9;};};if _ddb .GBAtOverride [3]{_abac &=0xBFFF;if _ddb .GBAtY [3]==0&&_ddb .GBAtX [3]>=-int8 (_gecc ){_abac |=(_aabc >>uint (int8 (_gcdd )-_ddb .GBAtX [3]&0x1))<<14;
}else {_abac |=int (_ddb .getPixel (_bbea +int (_ddb .GBAtX [3]),_cec +int (_ddb .GBAtY [3])))<<14;};};if _ddb .GBAtOverride [4]{_abac &=0xEFFF;if _ddb .GBAtY [4]==0&&_ddb .GBAtX [4]>=-int8 (_gecc ){_abac |=(_aabc >>uint (int8 (_gcdd )-_ddb .GBAtX [4]&0x1))<<12;
}else {_abac |=int (_ddb .getPixel (_bbea +int (_ddb .GBAtX [4]),_cec +int (_ddb .GBAtY [4])))<<12;};};if _ddb .GBAtOverride [5]{_abac &=0xFFDF;if _ddb .GBAtY [5]==0&&_ddb .GBAtX [5]>=-int8 (_gecc ){_abac |=(_aabc >>uint (int8 (_gcdd )-_ddb .GBAtX [5]&0x1))<<5;
}else {_abac |=int (_ddb .getPixel (_bbea +int (_ddb .GBAtX [5]),_cec +int (_ddb .GBAtY [5])))<<5;};};if _ddb .GBAtOverride [6]{_abac &=0xFFFB;if _ddb .GBAtY [6]==0&&_ddb .GBAtX [6]>=-int8 (_gecc ){_abac |=(_aabc >>uint (int8 (_gcdd )-_ddb .GBAtX [6]&0x1))<<2;
}else {_abac |=int (_ddb .getPixel (_bbea +int (_ddb .GBAtX [6]),_cec +int (_ddb .GBAtY [6])))<<2;};};if _ddb .GBAtOverride [7]{_abac &=0xFFF7;if _ddb .GBAtY [7]==0&&_ddb .GBAtX [7]>=-int8 (_gecc ){_abac |=(_aabc >>uint (int8 (_gcdd )-_ddb .GBAtX [7]&0x1))<<3;
}else {_abac |=int (_ddb .getPixel (_bbea +int (_ddb .GBAtX [7]),_cec +int (_ddb .GBAtY [7])))<<3;};};if _ddb .GBAtOverride [8]{_abac &=0xF7FF;if _ddb .GBAtY [8]==0&&_ddb .GBAtX [8]>=-int8 (_gecc ){_abac |=(_aabc >>uint (int8 (_gcdd )-_ddb .GBAtX [8]&0x1))<<11;
}else {_abac |=int (_ddb .getPixel (_bbea +int (_ddb .GBAtX [8]),_cec +int (_ddb .GBAtY [8])))<<11;};};if _ddb .GBAtOverride [9]{_abac &=0xFFEF;if _ddb .GBAtY [9]==0&&_ddb .GBAtX [9]>=-int8 (_gecc ){_abac |=(_aabc >>uint (int8 (_gcdd )-_ddb .GBAtX [9]&0x1))<<4;
}else {_abac |=int (_ddb .getPixel (_bbea +int (_ddb .GBAtX [9]),_cec +int (_ddb .GBAtY [9])))<<4;};};if _ddb .GBAtOverride [10]{_abac &=0x7FFF;if _ddb .GBAtY [10]==0&&_ddb .GBAtX [10]>=-int8 (_gecc ){_abac |=(_aabc >>uint (int8 (_gcdd )-_ddb .GBAtX [10]&0x1))<<15;
}else {_abac |=int (_ddb .getPixel (_bbea +int (_ddb .GBAtX [10]),_cec +int (_ddb .GBAtY [10])))<<15;};};if _ddb .GBAtOverride [11]{_abac &=0xFDFF;if _ddb .GBAtY [11]==0&&_ddb .GBAtX [11]>=-int8 (_gecc ){_abac |=(_aabc >>uint (int8 (_gcdd )-_ddb .GBAtX [11]&0x1))<<10;
}else {_abac |=int (_ddb .getPixel (_bbea +int (_ddb .GBAtX [11]),_cec +int (_ddb .GBAtY [11])))<<10;};};return _abac ;};func (_daab *HalftoneRegion )computeY (_ceea ,_cfce int )int {return _daab .shiftAndFill (int (_daab .HGridY )+_ceea *int (_daab .HRegionX )-_cfce *int (_daab .HRegionY ));
};func (_bcfg *PatternDictionary )readPatternWidthAndHeight ()error {_bbcf ,_fcae :=_bcfg ._bgedb .ReadByte ();if _fcae !=nil {return _fcae ;};_bcfg .HdpWidth =_bbcf ;_bbcf ,_fcae =_bcfg ._bgedb .ReadByte ();if _fcae !=nil {return _fcae ;};_bcfg .HdpHeight =_bbcf ;
return nil ;};func (_ecfc *RegionSegment )parseHeader ()error {const _bcbf ="p\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_gc .Log .Trace ("\u005b\u0052\u0045\u0047I\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002dH\u0045A\u0044\u0045\u0052\u005d\u0020\u0042\u0065g\u0069\u006e");
defer func (){_gc .Log .Trace ("\u005b\u0052\u0045G\u0049\u004f\u004e\u005d[\u0050\u0041\u0052\u0053\u0045\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");}();_dbca ,_bgce :=_ecfc ._eefd .ReadBits (32);
if _bgce !=nil {return _c .Wrap (_bgce ,_bcbf ,"\u0077\u0069\u0064t\u0068");};_ecfc .BitmapWidth =uint32 (_dbca &_g .MaxUint32 );_dbca ,_bgce =_ecfc ._eefd .ReadBits (32);if _bgce !=nil {return _c .Wrap (_bgce ,_bcbf ,"\u0068\u0065\u0069\u0067\u0068\u0074");
};_ecfc .BitmapHeight =uint32 (_dbca &_g .MaxUint32 );_dbca ,_bgce =_ecfc ._eefd .ReadBits (32);if _bgce !=nil {return _c .Wrap (_bgce ,_bcbf ,"\u0078\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_ecfc .XLocation =uint32 (_dbca &_g .MaxUint32 );
_dbca ,_bgce =_ecfc ._eefd .ReadBits (32);if _bgce !=nil {return _c .Wrap (_bgce ,_bcbf ,"\u0079\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_ecfc .YLocation =uint32 (_dbca &_g .MaxUint32 );if _ ,_bgce =_ecfc ._eefd .ReadBits (5);_bgce !=nil {return _c .Wrap (_bgce ,_bcbf ,"\u0064i\u0072\u0079\u0020\u0072\u0065\u0061d");
};if _bgce =_ecfc .readCombinationOperator ();_bgce !=nil {return _c .Wrap (_bgce ,_bcbf ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};return nil ;};type HalftoneRegion struct{_cbfb _gg .StreamReader ;
_eeeg *Header ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;HDefaultPixel int8 ;CombinationOperator _f .CombinationOperator ;HSkipEnabled bool ;HTemplate byte ;IsMMREncoded bool ;HGridWidth uint32 ;
HGridHeight uint32 ;HGridX int32 ;HGridY int32 ;HRegionX uint16 ;HRegionY uint16 ;HalftoneRegionBitmap *_f .Bitmap ;Patterns []*_f .Bitmap ;};func (_bbf *GenericRefinementRegion )decodeTypicalPredictedLine (_age ,_eec ,_acf ,_aee ,_cb ,_agg int )error {_eee :=_age -int (_bbf .ReferenceDY );
_aed :=_bbf .ReferenceBitmap .GetByteIndex (0,_eee );_fdg :=_bbf .RegionBitmap .GetByteIndex (0,_age );var _bff error ;switch _bbf .TemplateID {case 0:_bff =_bbf .decodeTypicalPredictedLineTemplate0 (_age ,_eec ,_acf ,_aee ,_cb ,_agg ,_fdg ,_eee ,_aed );
case 1:_bff =_bbf .decodeTypicalPredictedLineTemplate1 (_age ,_eec ,_acf ,_aee ,_cb ,_agg ,_fdg ,_eee ,_aed );};return _bff ;};func (_fcdcf *TextRegion )readAmountOfSymbolInstances ()error {_aeed ,_gcgf :=_fcdcf ._aabb .ReadBits (32);if _gcgf !=nil {return _gcgf ;
};_fcdcf .NumberOfSymbolInstances =uint32 (_aeed &_g .MaxUint32 );_fgdag :=_fcdcf .RegionInfo .BitmapWidth *_fcdcf .RegionInfo .BitmapHeight ;if _fgdag < _fcdcf .NumberOfSymbolInstances {_gc .Log .Debug ("\u004c\u0069\u006d\u0069t\u0069\u006e\u0067\u0020t\u0068\u0065\u0020n\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020d\u0065\u0063\u006f\u0064e\u0064\u0020\u0073\u0079m\u0062\u006f\u006c\u0020\u0069n\u0073\u0074\u0061\u006e\u0063\u0065\u0073 \u0074\u006f\u0020\u006f\u006ee\u0020\u0070\u0065\u0072\u0020\u0070\u0069\u0078\u0065l\u0020\u0028\u0020\u0025\u0064\u0020\u0069\u006e\u0073\u0074\u0065\u0061\u0064\u0020\u006f\u0066\u0020\u0025\u0064\u0029",_fgdag ,_fcdcf .NumberOfSymbolInstances );
_fcdcf .NumberOfSymbolInstances =_fgdag ;};return nil ;};func (_ggff *GenericRefinementRegion )parseHeader ()(_efc error ){_gc .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0048e\u0061\u0064e\u0072\u002e\u002e\u002e");
_abb :=_d .Now ();defer func (){if _efc ==nil {_gc .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045G\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020h\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0069\u006e\u0069\u0073\u0068id\u0020\u0069\u006e\u003a\u0020\u0025\u0064\u0020\u006e\u0073",_d .Since (_abb ).Nanoseconds ());
}else {_gc .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0068\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0073",_efc );
};}();if _efc =_ggff .RegionInfo .parseHeader ();_efc !=nil {return _efc ;};_ ,_efc =_ggff ._df .ReadBits (6);if _efc !=nil {return _efc ;};_ggff .IsTPGROn ,_efc =_ggff ._df .ReadBool ();if _efc !=nil {return _efc ;};var _cff int ;_cff ,_efc =_ggff ._df .ReadBit ();
if _efc !=nil {return _efc ;};_ggff .TemplateID =int8 (_cff );switch _ggff .TemplateID {case 0:_ggff .Template =_ggff ._gcd ;if _efc =_ggff .readAtPixels ();_efc !=nil {return ;};case 1:_ggff .Template =_ggff ._ba ;};return nil ;};func (_bcfa *GenericRegion )setParametersWithAt (_geb bool ,_fecd byte ,_fcd ,_ddd bool ,_bdbc ,_dcbb []int8 ,_gega ,_fecb uint32 ,_feb *_ab .DecoderStats ,_bedc *_ab .Decoder ){_bcfa .IsMMREncoded =_geb ;
_bcfa .GBTemplate =_fecd ;_bcfa .IsTPGDon =_fcd ;_bcfa .GBAtX =_bdbc ;_bcfa .GBAtY =_dcbb ;_bcfa .RegionSegment .BitmapHeight =_fecb ;_bcfa .RegionSegment .BitmapWidth =_gega ;_bcfa ._ade =nil ;_bcfa .Bitmap =nil ;if _feb !=nil {_bcfa ._eaac =_feb ;};if _bedc !=nil {_bcfa ._eeg =_bedc ;
};_gc .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049O\u004e\u005d\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073\u0020\u0053\u0044\u0041t\u003a\u0020\u0025\u0073",_bcfa );};func (_gcbc *RegionSegment )readCombinationOperator ()error {_eaagc ,_acfg :=_gcbc ._eefd .ReadBits (3);
if _acfg !=nil {return _acfg ;};_gcbc .CombinaionOperator =_f .CombinationOperator (_eaagc &0xF);return nil ;};func (_ddca *SymbolDictionary )encodeRefinementATFlags (_gbdg _gg .BinaryWriter )(_feed int ,_cgde error ){const _gdeg ="\u0065\u006e\u0063od\u0065\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0041\u0054\u0046\u006c\u0061\u0067\u0073";
if !_ddca .UseRefinementAggregation ||_ddca .SdrTemplate !=0{return 0,nil ;};for _gege :=0;_gege < 2;_gege ++{if _cgde =_gbdg .WriteByte (byte (_ddca .SdrATX [_gege ]));_cgde !=nil {return _feed ,_c .Wrapf (_cgde ,_gdeg ,"\u0053\u0064\u0072\u0041\u0054\u0058\u005b\u0025\u0064\u005d",_gege );
};_feed ++;if _cgde =_gbdg .WriteByte (byte (_ddca .SdrATY [_gege ]));_cgde !=nil {return _feed ,_c .Wrapf (_cgde ,_gdeg ,"\u0053\u0064\u0072\u0041\u0054\u0059\u005b\u0025\u0064\u005d",_gege );};_feed ++;};return _feed ,nil ;};func (_bag *PatternDictionary )GetDictionary ()([]*_f .Bitmap ,error ){if _bag .Patterns !=nil {return _bag .Patterns ,nil ;
};if !_bag .IsMMREncoded {_bag .setGbAtPixels ();};_bggc :=NewGenericRegion (_bag ._bgedb );_bggc .setParametersMMR (_bag .IsMMREncoded ,_bag .DataOffset ,_bag .DataLength ,uint32 (_bag .HdpHeight ),(_bag .GrayMax +1)*uint32 (_bag .HdpWidth ),_bag .HDTemplate ,false ,false ,_bag .GBAtX ,_bag .GBAtY );
_bee ,_ggfab :=_bggc .GetRegionBitmap ();if _ggfab !=nil {return nil ,_ggfab ;};if _ggfab =_bag .extractPatterns (_bee );_ggfab !=nil {return nil ,_ggfab ;};return _bag .Patterns ,nil ;};func (_dbba *TextRegion )getUserTable (_fgff int )(_ae .Tabler ,error ){const _edda ="\u0067\u0065\u0074U\u0073\u0065\u0072\u0054\u0061\u0062\u006c\u0065";
var _aegad int ;for _ ,_ffgd :=range _dbba .Header .RTSegments {if _ffgd .Type ==53{if _aegad ==_fgff {_ecag ,_eaffc :=_ffgd .GetSegmentData ();if _eaffc !=nil {return nil ,_eaffc ;};_afega ,_fbcc :=_ecag .(*TableSegment );if !_fbcc {_gc .Log .Debug (_bg .Sprintf ("\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079p\u0065\u00205\u0033\u0020\u002d\u0020\u0061\u006ed\u0020in\u0064\u0065\u0078\u003a\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_ffgd .SegmentNumber ));
return nil ,_c .Error (_edda ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079\u0070e\u0020\u0035\u0033\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u002a\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};return _ae .NewEncodedTable (_afega );};_aegad ++;};};return nil ,nil ;};func (_bfab *SymbolDictionary )checkInput ()error {if _bfab .SdHuffDecodeHeightSelection ==2{_gc .Log .Debug ("\u0053\u0079\u006d\u0062\u006fl\u0020\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u0053e\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0070\u0065r\u006d\u0069\u0074\u0074\u0065\u0064",_bfab .SdHuffDecodeHeightSelection );
};if _bfab .SdHuffDecodeWidthSelection ==2{_gc .Log .Debug ("\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0057\u0069\u0064t\u0068\u0020\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061l\u0075\u0065\u0020\u006e\u006f\u0074 \u0070\u0065r\u006d\u0069t\u0074e\u0064",_bfab .SdHuffDecodeWidthSelection );
};if _bfab .IsHuffmanEncoded {if _bfab .SdTemplate !=0{_gc .Log .Debug ("\u0053\u0044T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e \u0030\u0029",_bfab .SdTemplate );
};if !_bfab .UseRefinementAggregation {if !_bfab .UseRefinementAggregation {if _bfab ._bdag {_gc .Log .Debug ("\u0049\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074ex\u0074\u0052\u0065\u0074\u0061\u0069n\u0065\u0064\u0020\u003d\u0020\u0074\u0072\u0075\u0065\u0020\u0028\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0066\u0061\u006cs\u0065\u0029");
_bfab ._bdag =false ;};if _bfab ._gdgf {_gc .Log .Debug ("\u0069s\u0043\u006fd\u0069\u006e\u0067\u0043o\u006e\u0074\u0065x\u0074\u0055\u0073\u0065\u0064\u0020\u003d\u0020\u0074ru\u0065\u0020\u0028s\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020f\u0061\u006cs\u0065\u0029");
_bfab ._gdgf =false ;};};};}else {if _bfab .SdHuffBMSizeSelection !=0{_gc .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066B\u004d\u0053\u0069\u007a\u0065\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_bfab .SdHuffBMSizeSelection =0;};if _bfab .SdHuffDecodeWidthSelection !=0{_gc .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068\u0053\u0065\u006c\u0065\u0063\u0074\u0069o\u006e\u0020\u0073\u0068\u006fu\u006c\u0064 \u0062\u0065\u0020\u0030");
_bfab .SdHuffDecodeWidthSelection =0;};if _bfab .SdHuffDecodeHeightSelection !=0{_gc .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0048e\u0069\u0067\u0068\u0074\u0053\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_bfab .SdHuffDecodeHeightSelection =0;};};if !_bfab .UseRefinementAggregation {if _bfab .SdrTemplate !=0{_gc .Log .Debug ("\u0053\u0044\u0052\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u003d\u0020\u0025\u0064\u0020\u0028s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_bfab .SdrTemplate );
_bfab .SdrTemplate =0;};};if !_bfab .IsHuffmanEncoded ||!_bfab .UseRefinementAggregation {if _bfab .SdHuffAggInstanceSelection {_gc .Log .Debug ("\u0053d\u0048\u0075f\u0066\u0041\u0067g\u0049\u006e\u0073\u0074\u0061\u006e\u0063e\u0053\u0065\u006c\u0065\u0063\u0074i\u006f\u006e\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_bfab .SdHuffAggInstanceSelection );
};};return nil ;};func (_ebab *SymbolDictionary )encodeNumSyms (_fcdd _gg .BinaryWriter )(_fbdd int ,_acbd error ){const _acbf ="\u0065\u006e\u0063\u006f\u0064\u0065\u004e\u0075\u006d\u0053\u0079\u006d\u0073";_bgaba :=make ([]byte ,4);_e .BigEndian .PutUint32 (_bgaba ,_ebab .NumberOfExportedSymbols );
if _fbdd ,_acbd =_fcdd .Write (_bgaba );_acbd !=nil {return _fbdd ,_c .Wrap (_acbd ,_acbf ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};_e .BigEndian .PutUint32 (_bgaba ,_ebab .NumberOfNewSymbols );_bdab ,_acbd :=_fcdd .Write (_bgaba );
if _acbd !=nil {return _fbdd ,_c .Wrap (_acbd ,_acbf ,"n\u0065\u0077\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};return _fbdd +_bdab ,nil ;};type RegionSegment struct{_eefd _gg .StreamReader ;BitmapWidth uint32 ;BitmapHeight uint32 ;XLocation uint32 ;
YLocation uint32 ;CombinaionOperator _f .CombinationOperator ;};func (_eab *PageInformationSegment )readCombinationOperatorOverrideAllowed ()error {_dgbf ,_gefg :=_eab ._abee .ReadBit ();if _gefg !=nil {return _gefg ;};if _dgbf ==1{_eab ._ccag =true ;};
return nil ;};func (_agga *HalftoneRegion )renderPattern (_agea [][]int )(_adcc error ){var _fcbf ,_dfcg int ;for _fbed :=0;_fbed < int (_agga .HGridHeight );_fbed ++{for _ecdf :=0;_ecdf < int (_agga .HGridWidth );_ecdf ++{_fcbf =_agga .computeX (_fbed ,_ecdf );
_dfcg =_agga .computeY (_fbed ,_ecdf );_cde :=_agga .Patterns [_agea [_fbed ][_ecdf ]];if _adcc =_f .Blit (_cde ,_agga .HalftoneRegionBitmap ,_fcbf +int (_agga .HGridX ),_dfcg +int (_agga .HGridY ),_agga .CombinationOperator );_adcc !=nil {return _adcc ;
};};};return nil ;};func (_eebb *SymbolDictionary )huffDecodeRefAggNInst ()(int64 ,error ){if !_eebb .SdHuffAggInstanceSelection {_ceag ,_abeef :=_ae .GetStandardTable (1);if _abeef !=nil {return 0,_abeef ;};return _ceag .Decode (_eebb ._gfff );};if _eebb ._ddef ==nil {var (_dcda int ;
_debb error ;);if _eebb .SdHuffDecodeHeightSelection ==3{_dcda ++;};if _eebb .SdHuffDecodeWidthSelection ==3{_dcda ++;};if _eebb .SdHuffBMSizeSelection ==3{_dcda ++;};_eebb ._ddef ,_debb =_eebb .getUserTable (_dcda );if _debb !=nil {return 0,_debb ;};};
return _eebb ._ddef .Decode (_eebb ._gfff );};func (_beb *GenericRegion )Size ()int {return _beb .RegionSegment .Size ()+1+2*len (_beb .GBAtX )};func (_gd *GenericRefinementRegion )GetRegionInfo ()*RegionSegment {return _gd .RegionInfo };func (_afc *GenericRegion )overrideAtTemplate3 (_ffe ,_ffeg ,_eeaf ,_eeca ,_ceda int )int {_ffe &=0x3EF;
if _afc .GBAtY [0]==0&&_afc .GBAtX [0]>=-int8 (_ceda ){_ffe |=(_eeca >>uint (7-(int8 (_ceda )+_afc .GBAtX [0]))&0x1)<<4;}else {_ffe |=int (_afc .getPixel (_ffeg +int (_afc .GBAtX [0]),_eeaf +int (_afc .GBAtY [0])))<<4;};return _ffe ;};func (_aeca *TextRegion )decodeRdy ()(int64 ,error ){const _gbbd ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064y";
if _aeca .IsHuffmanEncoded {if _aeca .SbHuffRDY ==3{if _aeca ._ece ==nil {var (_dcbfb int ;_gcdde error ;);if _aeca .SbHuffFS ==3{_dcbfb ++;};if _aeca .SbHuffDS ==3{_dcbfb ++;};if _aeca .SbHuffDT ==3{_dcbfb ++;};if _aeca .SbHuffRDWidth ==3{_dcbfb ++;};
if _aeca .SbHuffRDHeight ==3{_dcbfb ++;};if _aeca .SbHuffRDX ==3{_dcbfb ++;};_aeca ._ece ,_gcdde =_aeca .getUserTable (_dcbfb );if _gcdde !=nil {return 0,_c .Wrap (_gcdde ,_gbbd ,"");};};return _aeca ._ece .Decode (_aeca ._aabb );};_bdce ,_agccg :=_ae .GetStandardTable (14+int (_aeca .SbHuffRDY ));
if _agccg !=nil {return 0,_agccg ;};return _bdce .Decode (_aeca ._aabb );};_abec ,_fccbb :=_aeca ._effff .DecodeInt (_aeca ._ageaa );if _fccbb !=nil {return 0,_c .Wrap (_fccbb ,_gbbd ,"");};return int64 (_abec ),nil ;};func (_dbee *RegionSegment )String ()string {_gdec :=&_da .Builder {};
_gdec .WriteString ("\u0009[\u0052E\u0047\u0049\u004f\u004e\u0020S\u0045\u0047M\u0045\u004e\u0054\u005d\u000a");_gdec .WriteString (_bg .Sprintf ("\t\u0009\u002d\u0020\u0042\u0069\u0074m\u0061\u0070\u0020\u0028\u0077\u0069d\u0074\u0068\u002c\u0020\u0068\u0065\u0069g\u0068\u0074\u0029\u0020\u005b\u0025\u0064\u0078\u0025\u0064]\u000a",_dbee .BitmapWidth ,_dbee .BitmapHeight ));
_gdec .WriteString (_bg .Sprintf ("\u0009\u0009\u002d\u0020L\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0028\u0078,\u0079)\u003a\u0020\u005b\u0025\u0064\u002c\u0025d\u005d\u000a",_dbee .XLocation ,_dbee .YLocation ));_gdec .WriteString (_bg .Sprintf ("\t\u0009\u002d\u0020\u0043\u006f\u006db\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070e\u0072\u0061\u0074o\u0072:\u0020\u0025\u0073",_dbee .CombinaionOperator ));
return _gdec .String ();};func (_cfad *PageInformationSegment )readMaxStripeSize ()error {_fdeca ,_cfg :=_cfad ._abee .ReadBits (15);if _cfg !=nil {return _cfg ;};_cfad .MaxStripeSize =uint16 (_fdeca &_g .MaxUint16 );return nil ;};func (_dfaf *SymbolDictionary )decodeAggregate (_egab ,_cdcde uint32 )error {var (_cbcd int64 ;
_abgc error ;);if _dfaf .IsHuffmanEncoded {_cbcd ,_abgc =_dfaf .huffDecodeRefAggNInst ();if _abgc !=nil {return _abgc ;};}else {_gefe ,_efce :=_dfaf ._baegb .DecodeInt (_dfaf ._dffb );if _efce !=nil {return _efce ;};_cbcd =int64 (_gefe );};if _cbcd > 1{return _dfaf .decodeThroughTextRegion (_egab ,_cdcde ,uint32 (_cbcd ));
}else if _cbcd ==1{return _dfaf .decodeRefinedSymbol (_egab ,_cdcde );};return nil ;};func (_agcgg *SymbolDictionary )readNumberOfExportedSymbols ()error {_gcfce ,_cecgb :=_agcgg ._gfff .ReadBits (32);if _cecgb !=nil {return _cecgb ;};_agcgg .NumberOfExportedSymbols =uint32 (_gcfce &_g .MaxUint32 );
return nil ;};func (_ced *GenericRegion )GetRegionInfo ()*RegionSegment {return _ced .RegionSegment };type EncodeInitializer interface{InitEncode ();};func (_gcbe *PageInformationSegment )encodeStripingInformation (_cefg _gg .BinaryWriter )(_bbeb int ,_ddab error ){const _bfeb ="\u0065n\u0063\u006f\u0064\u0065S\u0074\u0072\u0069\u0070\u0069n\u0067I\u006ef\u006f\u0072\u006d\u0061\u0074\u0069\u006fn";
if !_gcbe .IsStripe {if _bbeb ,_ddab =_cefg .Write ([]byte {0x00,0x00});_ddab !=nil {return 0,_c .Wrap (_ddab ,_bfeb ,"n\u006f\u0020\u0073\u0074\u0072\u0069\u0070\u0069\u006e\u0067");};return _bbeb ,nil ;};_edbg :=make ([]byte ,2);_e .BigEndian .PutUint16 (_edbg ,_gcbe .MaxStripeSize |1<<15);
if _bbeb ,_ddab =_cefg .Write (_edbg );_ddab !=nil {return 0,_c .Wrapf (_ddab ,_bfeb ,"\u0073\u0074\u0072i\u0070\u0069\u006e\u0067\u003a\u0020\u0025\u0064",_gcbe .MaxStripeSize );};return _bbeb ,nil ;};func (_bgdg *Header )readSegmentPageAssociation (_dfcb Documenter ,_agag _gg .StreamReader ,_fcad uint64 ,_bged ...int )(_cgc error ){const _abcf ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074P\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061t\u0069\u006f\u006e";
if !_bgdg .PageAssociationFieldSize {_cdb ,_gbbc :=_agag .ReadBits (8);if _gbbc !=nil {return _c .Wrap (_gbbc ,_abcf ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_bgdg .PageAssociation =int (_cdb &0xFF);}else {_gggf ,_gbef :=_agag .ReadBits (32);
if _gbef !=nil {return _c .Wrap (_gbef ,_abcf ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_bgdg .PageAssociation =int (_gggf &_g .MaxInt32 );};if _fcad ==0{return nil ;};if _bgdg .PageAssociation !=0{_fcag ,_fbga :=_dfcb .GetPage (_bgdg .PageAssociation );
if _fbga !=nil {return _c .Wrap (_fbga ,_abcf ,"\u0061s\u0073\u006f\u0063\u0069a\u0074\u0065\u0064\u0020\u0070a\u0067e\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006ed");};var _efae int ;for _ebfb :=uint64 (0);_ebfb < _fcad ;_ebfb ++{_efae =_bged [_ebfb ];
_bgdg .RTSegments [_ebfb ],_fbga =_fcag .GetSegment (_efae );if _fbga !=nil {var _gbba error ;_bgdg .RTSegments [_ebfb ],_gbba =_dfcb .GetGlobalSegment (_efae );if _gbba !=nil {return _c .Wrapf (_fbga ,_abcf ,"\u0072\u0065\u0066\u0065\u0072\u0065n\u0063\u0065\u0020s\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064\u0020\u0061\u0074\u0020pa\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0072\u0020\u0069\u006e\u0020\u0067\u006c\u006f\u0062\u0061\u006c\u0073",_bgdg .PageAssociation );
};};};return nil ;};for _debd :=uint64 (0);_debd < _fcad ;_debd ++{_bgdg .RTSegments [_debd ],_cgc =_dfcb .GetGlobalSegment (_bged [_debd ]);if _cgc !=nil {return _c .Wrapf (_cgc ,_abcf ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u003a\u0020\u0027\u0025d\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064",_bged [_debd ]);
};};return nil ;};func (_afga *template1 )setIndex (_bgd *_ab .DecoderStats ){_bgd .SetIndex (0x080)};func (_fbcg *TextRegion )initSymbols ()error {const _cacb ="i\u006e\u0069\u0074\u0053\u0079\u006d\u0062\u006f\u006c\u0073";for _ ,_gcga :=range _fbcg .Header .RTSegments {if _gcga ==nil {return _c .Error (_cacb ,"\u006e\u0069\u006c\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020pr\u006f\u0076\u0069\u0064\u0065\u0064 \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0074\u0065\u0078\u0074\u0020\u0072\u0065g\u0069\u006f\u006e\u0020\u0053\u0079\u006d\u0062o\u006c\u0073");
};if _gcga .Type ==0{_cgcf ,_gead :=_gcga .GetSegmentData ();if _gead !=nil {return _c .Wrap (_gead ,_cacb ,"");};_badf ,_bdcgf :=_cgcf .(*SymbolDictionary );if !_bdcgf {return _c .Error (_cacb ,"\u0072e\u0066\u0065r\u0072\u0065\u0064 \u0054\u006f\u0020\u0053\u0065\u0067\u006de\u006e\u0074\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_badf ._fbgeg =_fbcg ._ccdd ;_gceec ,_gead :=_badf .GetDictionary ();if _gead !=nil {return _c .Wrap (_gead ,_cacb ,"");};_fbcg .Symbols =append (_fbcg .Symbols ,_gceec ...);};};_fbcg .NumberOfSymbols =uint32 (len (_fbcg .Symbols ));return nil ;};func (_adgf *Header )CleanSegmentData (){if _adgf .SegmentData !=nil {_adgf .SegmentData =nil ;
};};func (_ffef *PageInformationSegment )readRequiresAuxiliaryBuffer ()error {_ddc ,_geab :=_ffef ._abee .ReadBit ();if _geab !=nil {return _geab ;};if _ddc ==1{_ffef ._fgg =true ;};return nil ;};func (_edbd *PageInformationSegment )readIsLossless ()error {_dada ,_fcef :=_edbd ._abee .ReadBit ();
if _fcef !=nil {return _fcef ;};if _dada ==1{_edbd .IsLossless =true ;};return nil ;};type SymbolDictionary struct{_gfff _gg .StreamReader ;SdrTemplate int8 ;SdTemplate int8 ;_bdag bool ;_gdgf bool ;SdHuffAggInstanceSelection bool ;SdHuffBMSizeSelection int8 ;
SdHuffDecodeWidthSelection int8 ;SdHuffDecodeHeightSelection int8 ;UseRefinementAggregation bool ;IsHuffmanEncoded bool ;SdATX []int8 ;SdATY []int8 ;SdrATX []int8 ;SdrATY []int8 ;NumberOfExportedSymbols uint32 ;NumberOfNewSymbols uint32 ;Header *Header ;
_gdae uint32 ;_adf []*_f .Bitmap ;_dcbc uint32 ;_abdec []*_f .Bitmap ;_eegd _ae .Tabler ;_gcdbg _ae .Tabler ;_cfceb _ae .Tabler ;_ddef _ae .Tabler ;_bdcg []*_f .Bitmap ;_affgc []*_f .Bitmap ;_baegb *_ab .Decoder ;_gggd *TextRegion ;_cffg *GenericRegion ;
_acgg *GenericRefinementRegion ;_cfaf *_ab .DecoderStats ;_eaae *_ab .DecoderStats ;_gebc *_ab .DecoderStats ;_dffb *_ab .DecoderStats ;_afdg *_ab .DecoderStats ;_afeg *_ab .DecoderStats ;_eegc *_ab .DecoderStats ;_ega *_ab .DecoderStats ;_fbgeg *_ab .DecoderStats ;
_eabg int8 ;_bde *_f .Bitmaps ;_eaaa []int ;_bdge map[int ]int ;_dbda bool ;};func (_daeg *TextRegion )decodeStripT ()(_egag int64 ,_gcdc error ){if _daeg .IsHuffmanEncoded {if _daeg .SbHuffDT ==3{if _daeg ._ceed ==nil {var _fcgg int ;if _daeg .SbHuffFS ==3{_fcgg ++;
};if _daeg .SbHuffDS ==3{_fcgg ++;};_daeg ._ceed ,_gcdc =_daeg .getUserTable (_fcgg );if _gcdc !=nil {return 0,_gcdc ;};};_egag ,_gcdc =_daeg ._ceed .Decode (_daeg ._aabb );if _gcdc !=nil {return 0,_gcdc ;};}else {var _deeg _ae .Tabler ;_deeg ,_gcdc =_ae .GetStandardTable (11+int (_daeg .SbHuffDT ));
if _gcdc !=nil {return 0,_gcdc ;};_egag ,_gcdc =_deeg .Decode (_daeg ._aabb );if _gcdc !=nil {return 0,_gcdc ;};};}else {var _ebdc int32 ;_ebdc ,_gcdc =_daeg ._effff .DecodeInt (_daeg ._begg );if _gcdc !=nil {return 0,_gcdc ;};_egag =int64 (_ebdc );};_egag *=int64 (-_daeg .SbStrips );
return _egag ,nil ;};func (_cf *EndOfStripe )LineNumber ()int {return _cf ._ad };func (_ebf *GenericRegion )decodeTemplate1 (_bgab ,_cdga ,_eecf int ,_cge ,_dead int )(_dfc error ){const _fbce ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0031";
var (_bcd ,_aebfg int ;_dde ,_ecgeg int ;_agbe byte ;_fec ,_decb int ;);if _bgab >=1{_agbe ,_dfc =_ebf .Bitmap .GetByte (_dead );if _dfc !=nil {return _c .Wrap (_dfc ,_fbce ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_dde =int (_agbe );};if _bgab >=2{_agbe ,_dfc =_ebf .Bitmap .GetByte (_dead -_ebf .Bitmap .RowStride );
if _dfc !=nil {return _c .Wrap (_dfc ,_fbce ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_ecgeg =int (_agbe )<<5;};_bcd =((_dde >>1)&0x1f8)|((_ecgeg >>1)&0x1e00);for _caad :=0;_caad < _eecf ;_caad =_fec {var (_cbde byte ;_gfc int ;);_fec =_caad +8;
if _gccf :=_cdga -_caad ;_gccf > 8{_gfc =8;}else {_gfc =_gccf ;};if _bgab > 0{_dde <<=8;if _fec < _cdga {_agbe ,_dfc =_ebf .Bitmap .GetByte (_dead +1);if _dfc !=nil {return _c .Wrap (_dfc ,_fbce ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_dde |=int (_agbe );
};};if _bgab > 1{_ecgeg <<=8;if _fec < _cdga {_agbe ,_dfc =_ebf .Bitmap .GetByte (_dead -_ebf .Bitmap .RowStride +1);if _dfc !=nil {return _c .Wrap (_dfc ,_fbce ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_ecgeg |=int (_agbe )<<5;};};for _ebfg :=0;
_ebfg < _gfc ;_ebfg ++{if _ebf ._cccg {_aebfg =_ebf .overrideAtTemplate1 (_bcd ,_caad +_ebfg ,_bgab ,int (_cbde ),_ebfg );_ebf ._eaac .SetIndex (int32 (_aebfg ));}else {_ebf ._eaac .SetIndex (int32 (_bcd ));};_decb ,_dfc =_ebf ._eeg .DecodeBit (_ebf ._eaac );
if _dfc !=nil {return _c .Wrap (_dfc ,_fbce ,"");};_cbde |=byte (_decb )<<uint (7-_ebfg );_gcbb :=uint (8-_ebfg );_bcd =((_bcd &0xefb)<<1)|_decb |((_dde >>_gcbb )&0x8)|((_ecgeg >>_gcbb )&0x200);};if _ffb :=_ebf .Bitmap .SetByte (_cge ,_cbde );_ffb !=nil {return _c .Wrap (_ffb ,_fbce ,"");
};_cge ++;_dead ++;};return nil ;};func (_ee *GenericRefinementRegion )decodeSLTP ()(int ,error ){_ee .Template .setIndex (_ee ._ff );return _ee ._gb .DecodeBit (_ee ._ff );};func (_gdbc *PageInformationSegment )readResolution ()error {_dgfa ,_fac :=_gdbc ._abee .ReadBits (32);
if _fac !=nil {return _fac ;};_gdbc .ResolutionX =int (_dgfa &_g .MaxInt32 );_dgfa ,_fac =_gdbc ._abee .ReadBits (32);if _fac !=nil {return _fac ;};_gdbc .ResolutionY =int (_dgfa &_g .MaxInt32 );return nil ;};func (_dbeb *HalftoneRegion )checkInput ()error {if _dbeb .IsMMREncoded {if _dbeb .HTemplate !=0{_gc .Log .Debug ("\u0048\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030",_dbeb .HTemplate );
};if _dbeb .HSkipEnabled {_gc .Log .Debug ("\u0048\u0053\u006b\u0069\u0070\u0045\u006e\u0061\u0062\u006c\u0065\u0064\u0020\u0030\u0020\u0025\u0076\u0020(\u0073\u0068\u006f\u0075\u006c\u0064\u0020c\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020v\u0061\u006c\u0075\u0065\u0020\u0066\u0061\u006c\u0073\u0065\u0029",_dbeb .HSkipEnabled );
};};return nil ;};func (_bfge *SymbolDictionary )decodeHeightClassCollectiveBitmap (_cecd int64 ,_ceca ,_eagb uint32 )(*_f .Bitmap ,error ){if _cecd ==0{_dcga :=_f .New (int (_eagb ),int (_ceca ));var (_cdea byte ;_caeb error ;);for _gccfd :=0;_gccfd < len (_dcga .Data );
_gccfd ++{_cdea ,_caeb =_bfge ._gfff .ReadByte ();if _caeb !=nil {return nil ,_caeb ;};if _caeb =_dcga .SetByte (_gccfd ,_cdea );_caeb !=nil {return nil ,_caeb ;};};return _dcga ,nil ;};if _bfge ._cffg ==nil {_bfge ._cffg =NewGenericRegion (_bfge ._gfff );
};_bfge ._cffg .setParameters (true ,_bfge ._gfff .StreamPosition (),_cecd ,_ceca ,_eagb );_eccb ,_aefd :=_bfge ._cffg .GetRegionBitmap ();if _aefd !=nil {return nil ,_aefd ;};return _eccb ,nil ;};const (TSymbolDictionary Type =0;TIntermediateTextRegion Type =4;
TImmediateTextRegion Type =6;TImmediateLosslessTextRegion Type =7;TPatternDictionary Type =16;TIntermediateHalftoneRegion Type =20;TImmediateHalftoneRegion Type =22;TImmediateLosslessHalftoneRegion Type =23;TIntermediateGenericRegion Type =36;TImmediateGenericRegion Type =38;
TImmediateLosslessGenericRegion Type =39;TIntermediateGenericRefinementRegion Type =40;TImmediateGenericRefinementRegion Type =42;TImmediateLosslessGenericRefinementRegion Type =43;TPageInformation Type =48;TEndOfPage Type =49;TEndOfStrip Type =50;TEndOfFile Type =51;
TProfiles Type =52;TTables Type =53;TExtension Type =62;TBitmap Type =70;);func (_ebddf *RegionSegment )Size ()int {return 17};func (_debg *Header )writeSegmentDataLength (_eaag _gg .BinaryWriter )(_dac int ,_ecdbf error ){_cfbga :=make ([]byte ,4);_e .BigEndian .PutUint32 (_cfbga ,uint32 (_debg .SegmentDataLength ));
if _dac ,_ecdbf =_eaag .Write (_cfbga );_ecdbf !=nil {return 0,_c .Wrap (_ecdbf ,"\u0048\u0065a\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u004c\u0065ng\u0074\u0068","");};return _dac ,nil ;
};func (_dgcd *TextRegion )Encode (w _gg .BinaryWriter )(_gbgd int ,_cbfg error ){const _ddg ="\u0054\u0065\u0078\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u002e\u0045n\u0063\u006f\u0064\u0065";if _gbgd ,_cbfg =_dgcd .RegionInfo .Encode (w );_cbfg !=nil {return _gbgd ,_c .Wrap (_cbfg ,_ddg ,"");
};var _bebd int ;if _bebd ,_cbfg =_dgcd .encodeFlags (w );_cbfg !=nil {return _gbgd ,_c .Wrap (_cbfg ,_ddg ,"");};_gbgd +=_bebd ;if _bebd ,_cbfg =_dgcd .encodeSymbols (w );_cbfg !=nil {return _gbgd ,_c .Wrap (_cbfg ,_ddg ,"");};_gbgd +=_bebd ;return _gbgd ,nil ;
};func (_ccac *PageInformationSegment )parseHeader ()(_bfbc error ){_gc .Log .Trace ("\u005b\u0050\u0061\u0067\u0065I\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067m\u0065\u006e\u0074\u005d\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u002e\u002e");
defer func (){var _ffcb ="[\u0050\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072m\u0061\u0074\u0069\u006f\u006e\u0053\u0065gm\u0065\u006e\u0074\u005d \u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065ad\u0065\u0072 \u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064";
if _bfbc !=nil {_ffcb +="\u0020\u0077\u0069t\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u0020"+_bfbc .Error ();}else {_ffcb +="\u0020\u0073\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079";};_gc .Log .Trace (_ffcb );}();if _bfbc =_ccac .readWidthAndHeight ();
_bfbc !=nil {return _bfbc ;};if _bfbc =_ccac .readResolution ();_bfbc !=nil {return _bfbc ;};_ ,_bfbc =_ccac ._abee .ReadBit ();if _bfbc !=nil {return _bfbc ;};if _bfbc =_ccac .readCombinationOperatorOverrideAllowed ();_bfbc !=nil {return _bfbc ;};if _bfbc =_ccac .readRequiresAuxiliaryBuffer ();
_bfbc !=nil {return _bfbc ;};if _bfbc =_ccac .readCombinationOperator ();_bfbc !=nil {return _bfbc ;};if _bfbc =_ccac .readDefaultPixelValue ();_bfbc !=nil {return _bfbc ;};if _bfbc =_ccac .readContainsRefinement ();_bfbc !=nil {return _bfbc ;};if _bfbc =_ccac .readIsLossless ();
_bfbc !=nil {return _bfbc ;};if _bfbc =_ccac .readIsStriped ();_bfbc !=nil {return _bfbc ;};if _bfbc =_ccac .readMaxStripeSize ();_bfbc !=nil {return _bfbc ;};if _bfbc =_ccac .checkInput ();_bfbc !=nil {return _bfbc ;};_gc .Log .Trace ("\u0025\u0073",_ccac );
return nil ;};func (_agd *HalftoneRegion )computeX (_faeg ,_gde int )int {return _agd .shiftAndFill (int (_agd .HGridX )+_faeg *int (_agd .HRegionY )+_gde *int (_agd .HRegionX ));};func (_gcfb *GenericRegion )overrideAtTemplate1 (_egfe ,_bgec ,_eca ,_egb ,_bgabf int )int {_egfe &=0x1FF7;
if _gcfb .GBAtY [0]==0&&_gcfb .GBAtX [0]>=-int8 (_bgabf ){_egfe |=(_egb >>uint (7-(int8 (_bgabf )+_gcfb .GBAtX [0]))&0x1)<<3;}else {_egfe |=int (_gcfb .getPixel (_bgec +int (_gcfb .GBAtX [0]),_eca +int (_gcfb .GBAtY [0])))<<3;};return _egfe ;};type Regioner interface{GetRegionBitmap ()(*_f .Bitmap ,error );
GetRegionInfo ()*RegionSegment ;};func (_aaaf *Header )writeReferredToSegments (_ecdd _gg .BinaryWriter )(_bfcf int ,_gbfg error ){const _aae ="\u0077\u0072\u0069te\u0052\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
var (_degc uint16 ;_gbc uint32 ;);_ffbg :=_aaaf .referenceSize ();_gdf :=1;_bcgc :=make ([]byte ,_ffbg );for _ ,_ccae :=range _aaaf .RTSNumbers {switch _ffbg {case 4:_gbc =uint32 (_ccae );_e .BigEndian .PutUint32 (_bcgc ,_gbc );_gdf ,_gbfg =_ecdd .Write (_bcgc );
if _gbfg !=nil {return 0,_c .Wrap (_gbfg ,_aae ,"u\u0069\u006e\u0074\u0033\u0032\u0020\u0073\u0069\u007a\u0065");};case 2:_degc =uint16 (_ccae );_e .BigEndian .PutUint16 (_bcgc ,_degc );_gdf ,_gbfg =_ecdd .Write (_bcgc );if _gbfg !=nil {return 0,_c .Wrap (_gbfg ,_aae ,"\u0075\u0069\u006e\u0074\u0031\u0036");
};default:if _gbfg =_ecdd .WriteByte (byte (_ccae ));_gbfg !=nil {return 0,_c .Wrap (_gbfg ,_aae ,"\u0075\u0069\u006et\u0038");};};_bfcf +=_gdf ;};return _bfcf ,nil ;};var _ SegmentEncoder =&RegionSegment {};func (_feba *SymbolDictionary )parseHeader ()(_gecg error ){_gc .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _gecg !=nil {_gc .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u0020\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u005b\u0050\u0041\u0052SE\u002d\u0048\u0045A\u0044\u0045R\u005d\u0020\u0066\u0061\u0069\u006ce\u0064\u002e \u0025\u0076",_gecg );
}else {_gc .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _gecg =_feba .readRegionFlags ();_gecg !=nil {return _gecg ;};if _gecg =_feba .setAtPixels ();_gecg !=nil {return _gecg ;};if _gecg =_feba .setRefinementAtPixels ();_gecg !=nil {return _gecg ;};if _gecg =_feba .readNumberOfExportedSymbols ();_gecg !=nil {return _gecg ;
};if _gecg =_feba .readNumberOfNewSymbols ();_gecg !=nil {return _gecg ;};if _gecg =_feba .setInSyms ();_gecg !=nil {return _gecg ;};if _feba ._gdgf {_cecda :=_feba .Header .RTSegments ;for _begd :=len (_cecda )-1;_begd >=0;_begd --{if _cecda [_begd ].Type ==0{_fgcb ,_edeb :=_cecda [_begd ].SegmentData .(*SymbolDictionary );
if !_edeb {_gecg =_bg .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074:\u0020\u0025\u0076\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020S\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_cecda [_begd ]);
return _gecg ;};if _fgcb ._gdgf {_feba .setRetainedCodingContexts (_fgcb );};break ;};};};if _gecg =_feba .checkInput ();_gecg !=nil {return _gecg ;};return nil ;};func (_fcbc *SymbolDictionary )getSbSymCodeLen ()int8 {_eefa :=int8 (_g .Ceil (_g .Log (float64 (_fcbc ._gdae +_fcbc .NumberOfNewSymbols ))/_g .Log (2)));
if _fcbc .IsHuffmanEncoded &&_eefa < 1{return 1;};return _eefa ;};func (_eecbg *SymbolDictionary )readNumberOfNewSymbols ()error {_aecc ,_dcef :=_eecbg ._gfff .ReadBits (32);if _dcef !=nil {return _dcef ;};_eecbg .NumberOfNewSymbols =uint32 (_aecc &_g .MaxUint32 );
return nil ;};func (_acbg *PageInformationSegment )readCombinationOperator ()error {_fccba ,_eebff :=_acbg ._abee .ReadBits (2);if _eebff !=nil {return _eebff ;};_acbg ._ggdf =_f .CombinationOperator (int (_fccba ));return nil ;};func (_gae *GenericRegion )decodeLine (_cef ,_ecf ,_edb int )error {const _eaf ="\u0064\u0065\u0063\u006f\u0064\u0065\u004c\u0069\u006e\u0065";
_aeea :=_gae .Bitmap .GetByteIndex (0,_cef );_abc :=_aeea -_gae .Bitmap .RowStride ;switch _gae .GBTemplate {case 0:if !_gae .UseExtTemplates {return _gae .decodeTemplate0a (_cef ,_ecf ,_edb ,_aeea ,_abc );};return _gae .decodeTemplate0b (_cef ,_ecf ,_edb ,_aeea ,_abc );
case 1:return _gae .decodeTemplate1 (_cef ,_ecf ,_edb ,_aeea ,_abc );case 2:return _gae .decodeTemplate2 (_cef ,_ecf ,_edb ,_aeea ,_abc );case 3:return _gae .decodeTemplate3 (_cef ,_ecf ,_edb ,_aeea ,_abc );};return _c .Errorf (_eaf ,"\u0069\u006e\u0076a\u006c\u0069\u0064\u0020G\u0042\u0054\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u003a\u0020\u0025\u0064",_gae .GBTemplate );
};func (_bafde *SymbolDictionary )decodeHeightClassDeltaHeight ()(int64 ,error ){if _bafde .IsHuffmanEncoded {return _bafde .decodeHeightClassDeltaHeightWithHuffman ();};_dade ,_ggfga :=_bafde ._baegb .DecodeInt (_bafde ._eaae );if _ggfga !=nil {return 0,_ggfga ;
};return int64 (_dade ),nil ;};func (_fee *GenericRegion )computeSegmentDataStructure ()error {_fee .DataOffset =_fee ._cfb .StreamPosition ();_fee .DataHeaderLength =_fee .DataOffset -_fee .DataHeaderOffset ;_fee .DataLength =int64 (_fee ._cfb .Length ())-_fee .DataHeaderLength ;
return nil ;};func (_ffbda *SymbolDictionary )setRefinementAtPixels ()error {if !_ffbda .UseRefinementAggregation ||_ffbda .SdrTemplate !=0{return nil ;};if _ebda :=_ffbda .readRefinementAtPixels (2);_ebda !=nil {return _ebda ;};return nil ;};func (_cede *PageInformationSegment )String ()string {_feac :=&_da .Builder {};
_feac .WriteString ("\u000a\u005b\u0050\u0041G\u0045\u002d\u0049\u004e\u0046\u004f\u0052\u004d\u0041\u0054I\u004fN\u002d\u0053\u0045\u0047\u004d\u0045\u004eT\u005d\u000a");_feac .WriteString (_bg .Sprintf ("\u0009\u002d \u0042\u004d\u0048e\u0069\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u000a",_cede .PageBMHeight ));
_feac .WriteString (_bg .Sprintf ("\u0009-\u0020B\u004d\u0057\u0069\u0064\u0074\u0068\u003a\u0020\u0025\u0064\u000a",_cede .PageBMWidth ));_feac .WriteString (_bg .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0058\u003a\u0020\u0025\u0064\u000a",_cede .ResolutionX ));
_feac .WriteString (_bg .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0059\u003a\u0020\u0025\u0064\u000a",_cede .ResolutionY ));_feac .WriteString (_bg .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0073\u000a",_cede ._ggdf ));
_feac .WriteString (_bg .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006eO\u0070\u0065\u0072\u0061\u0074\u006f\u0072O\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025v\u000a",_cede ._ccag ));_feac .WriteString (_bg .Sprintf ("\u0009-\u0020I\u0073\u004c\u006f\u0073\u0073l\u0065\u0073s\u003a\u0020\u0025\u0076\u000a",_cede .IsLossless ));
_feac .WriteString (_bg .Sprintf ("\u0009\u002d\u0020R\u0065\u0071\u0075\u0069r\u0065\u0073\u0041\u0075\u0078\u0069\u006ci\u0061\u0072\u0079\u0042\u0075\u0066\u0066\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_cede ._fgg ));_feac .WriteString (_bg .Sprintf ("\u0009\u002d\u0020M\u0069\u0067\u0068\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0052e\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0076\u000a",_cede ._bafb ));
_feac .WriteString (_bg .Sprintf ("\u0009\u002d\u0020\u0049\u0073\u0053\u0074\u0072\u0069\u0070\u0065\u0064:\u0020\u0025\u0076\u000a",_cede .IsStripe ));_feac .WriteString (_bg .Sprintf ("\t\u002d\u0020\u004d\u0061xS\u0074r\u0069\u0070\u0065\u0053\u0069z\u0065\u003a\u0020\u0025\u0076\u000a",_cede .MaxStripeSize ));
return _feac .String ();};func _fbgg (_eecb _gg .StreamReader ,_bddf *Header )*GenericRefinementRegion {return &GenericRefinementRegion {_df :_eecb ,RegionInfo :NewRegionSegment (_eecb ),_aeb :_bddf ,_gcd :&template0 {},_ba :&template1 {}};};func (_efbe *Header )parse (_daag Documenter ,_fead _gg .StreamReader ,_ffbd int64 ,_cbaf OrganizationType )(_gfeg error ){const _fccb ="\u0070\u0061\u0072s\u0065";
_gc .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u005b\u0050A\u0052\u0053\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _gfeg !=nil {_gc .Log .Trace ("\u005b\u0053\u0045GM\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045R\u005d[\u0050A\u0052S\u0045\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_gfeg );
}else {_gc .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052]\u005bP\u0041\u0052\u0053\u0045\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");};}();_ ,_gfeg =_fead .Seek (_ffbd ,_b .SeekStart );
if _gfeg !=nil {return _c .Wrap (_gfeg ,_fccb ,"\u0073\u0065\u0065\u006b\u0020\u0073\u0074\u0061\u0072\u0074");};if _gfeg =_efbe .readSegmentNumber (_fead );_gfeg !=nil {return _c .Wrap (_gfeg ,_fccb ,"");};if _gfeg =_efbe .readHeaderFlags ();_gfeg !=nil {return _c .Wrap (_gfeg ,_fccb ,"");
};var _fgc uint64 ;_fgc ,_gfeg =_efbe .readNumberOfReferredToSegments (_fead );if _gfeg !=nil {return _c .Wrap (_gfeg ,_fccb ,"");};_efbe .RTSNumbers ,_gfeg =_efbe .readReferredToSegmentNumbers (_fead ,int (_fgc ));if _gfeg !=nil {return _c .Wrap (_gfeg ,_fccb ,"");
};_gfeg =_efbe .readSegmentPageAssociation (_daag ,_fead ,_fgc ,_efbe .RTSNumbers ...);if _gfeg !=nil {return _c .Wrap (_gfeg ,_fccb ,"");};if _efbe .Type !=TEndOfFile {if _gfeg =_efbe .readSegmentDataLength (_fead );_gfeg !=nil {return _c .Wrap (_gfeg ,_fccb ,"");
};};_efbe .readDataStartOffset (_fead ,_cbaf );_efbe .readHeaderLength (_fead ,_ffbd );_gc .Log .Trace ("\u0025\u0073",_efbe );return nil ;};func (_dgf *GenericRefinementRegion )setParameters (_bgf *_ab .DecoderStats ,_abdd *_ab .Decoder ,_bfc int8 ,_dfed ,_dcd uint32 ,_aebf *_f .Bitmap ,_bedbe ,_fgd int32 ,_gcg bool ,_cae []int8 ,_baeg []int8 ){_gc .Log .Trace ("\u005b\u0047\u0045NE\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052E\u0047I\u004fN\u005d \u0073\u0065\u0074\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073");
if _bgf !=nil {_dgf ._ff =_bgf ;};if _abdd !=nil {_dgf ._gb =_abdd ;};_dgf .TemplateID =_bfc ;_dgf .RegionInfo .BitmapWidth =_dfed ;_dgf .RegionInfo .BitmapHeight =_dcd ;_dgf .ReferenceBitmap =_aebf ;_dgf .ReferenceDX =_bedbe ;_dgf .ReferenceDY =_fgd ;
_dgf .IsTPGROn =_gcg ;_dgf .GrAtX =_cae ;_dgf .GrAtY =_baeg ;_dgf .RegionBitmap =nil ;_gc .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073 f\u0069\u006ei\u0073\u0068\u0065\u0064\u002e\u0020\u0025\u0073",_dgf );
};func (_eeea *TextRegion )decodeSymbolInstances ()error {_caadg ,_fffg :=_eeea .decodeStripT ();if _fffg !=nil {return _fffg ;};var (_cfbge int64 ;_bfagf uint32 ;);for _bfagf < _eeea .NumberOfSymbolInstances {_geec ,_adbe :=_eeea .decodeDT ();if _adbe !=nil {return _adbe ;
};_caadg +=_geec ;var _eda int64 ;_gaea :=true ;_eeea ._edbf =0;for {if _gaea {_eda ,_adbe =_eeea .decodeDfs ();if _adbe !=nil {return _adbe ;};_cfbge +=_eda ;_eeea ._edbf =_cfbge ;_gaea =false ;}else {_geed ,_cdffcg :=_eeea .decodeIds ();if _ge .Is (_cdffcg ,_gf .ErrOOB ){break ;
};if _cdffcg !=nil {return _cdffcg ;};if _bfagf >=_eeea .NumberOfSymbolInstances {break ;};_eeea ._edbf +=_geed +int64 (_eeea .SbDsOffset );};_ddbef ,_ffac :=_eeea .decodeCurrentT ();if _ffac !=nil {return _ffac ;};_cbgd :=_caadg +_ddbef ;_cgbg ,_ffac :=_eeea .decodeID ();
if _ffac !=nil {return _ffac ;};_faaa ,_ffac :=_eeea .decodeRI ();if _ffac !=nil {return _ffac ;};_fcdb ,_ffac :=_eeea .decodeIb (_faaa ,_cgbg );if _ffac !=nil {return _ffac ;};if _ffac =_eeea .blit (_fcdb ,_cbgd );_ffac !=nil {return _ffac ;};_bfagf ++;
};};return nil ;};func (_gag *GenericRefinementRegion )decodeOptimized (_ce ,_edg ,_efa ,_af ,_fbg ,_fdb ,_cd int )error {var (_bf error ;_aeg int ;_gad int ;);_fbd :=_ce -int (_gag .ReferenceDY );if _ceg :=int (-_gag .ReferenceDX );_ceg > 0{_aeg =_ceg ;
};_bb :=_gag .ReferenceBitmap .GetByteIndex (_aeg ,_fbd );if _gag .ReferenceDX > 0{_gad =int (_gag .ReferenceDX );};_edd :=_gag .RegionBitmap .GetByteIndex (_gad ,_ce );switch _gag .TemplateID {case 0:_bf =_gag .decodeTemplate (_ce ,_edg ,_efa ,_af ,_fbg ,_fdb ,_cd ,_edd ,_fbd ,_bb ,_gag ._gcd );
case 1:_bf =_gag .decodeTemplate (_ce ,_edg ,_efa ,_af ,_fbg ,_fdb ,_cd ,_edd ,_fbd ,_bb ,_gag ._ba );};return _bf ;};func (_bfba *PageInformationSegment )readWidthAndHeight ()error {_fcdf ,_gdcf :=_bfba ._abee .ReadBits (32);if _gdcf !=nil {return _gdcf ;
};_bfba .PageBMWidth =int (_fcdf &_g .MaxInt32 );_fcdf ,_gdcf =_bfba ._abee .ReadBits (32);if _gdcf !=nil {return _gdcf ;};_bfba .PageBMHeight =int (_fcdf &_g .MaxInt32 );return nil ;};func (_bbdg *PatternDictionary )Init (h *Header ,r _gg .StreamReader )error {_bbdg ._bgedb =r ;
return _bbdg .parseHeader ();};func (_bcgb *Header )String ()string {_gbaba :=&_da .Builder {};_gbaba .WriteString ("\u000a[\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045A\u0044\u0045\u0052\u005d\u000a");_gbaba .WriteString (_bg .Sprintf ("\t\u002d\u0020\u0053\u0065gm\u0065n\u0074\u004e\u0075\u006d\u0062e\u0072\u003a\u0020\u0025\u0076\u000a",_bcgb .SegmentNumber ));
_gbaba .WriteString (_bg .Sprintf ("\u0009\u002d\u0020T\u0079\u0070\u0065\u003a\u0020\u0025\u0076\u000a",_bcgb .Type ));_gbaba .WriteString (_bg .Sprintf ("\u0009-\u0020R\u0065\u0074\u0061\u0069\u006eF\u006c\u0061g\u003a\u0020\u0025\u0076\u000a",_bcgb .RetainFlag ));
_gbaba .WriteString (_bg .Sprintf ("\u0009\u002d\u0020Pa\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_bcgb .PageAssociation ));_gbaba .WriteString (_bg .Sprintf ("\u0009\u002d\u0020\u0050\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074i\u006fn\u0046\u0069\u0065\u006c\u0064\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_bcgb .PageAssociationFieldSize ));
_gbaba .WriteString ("\u0009-\u0020R\u0054\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u0053\u003a\u000a");for _ ,_fdga :=range _bcgb .RTSNumbers {_gbaba .WriteString (_bg .Sprintf ("\u0009\t\u002d\u0020\u0025\u0064\u000a",_fdga ));};_gbaba .WriteString (_bg .Sprintf ("\t\u002d \u0048\u0065\u0061\u0064\u0065\u0072\u004c\u0065n\u0067\u0074\u0068\u003a %\u0076\u000a",_bcgb .HeaderLength ));
_gbaba .WriteString (_bg .Sprintf ("\u0009-\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061L\u0065n\u0067\u0074\u0068\u003a\u0020\u0025\u0076\n",_bcgb .SegmentDataLength ));_gbaba .WriteString (_bg .Sprintf ("\u0009\u002d\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074D\u0061\u0074\u0061\u0053\u0074\u0061\u0072t\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0076\u000a",_bcgb .SegmentDataStartOffset ));
return _gbaba .String ();};func (_bab *GenericRefinementRegion )String ()string {_efe :=&_da .Builder {};_efe .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_efe .WriteString (_bab .RegionInfo .String ()+"\u000a");
_efe .WriteString (_bg .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0052\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_bab .IsTPGROn ));_efe .WriteString (_bg .Sprintf ("\u0009-\u0020T\u0065\u006d\u0070\u006c\u0061t\u0065\u0049D\u003a\u0020\u0025\u0076\u000a",_bab .TemplateID ));
_efe .WriteString (_bg .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_bab .GrAtX ));_efe .WriteString (_bg .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_bab .GrAtY ));
_efe .WriteString (_bg .Sprintf ("\u0009-\u0020R\u0065\u0066\u0065\u0072\u0065n\u0063\u0065D\u0058\u0020\u0025\u0076\u000a",_bab .ReferenceDX ));_efe .WriteString (_bg .Sprintf ("\u0009\u002d\u0020\u0052ef\u0065\u0072\u0065\u006e\u0063\u0044\u0065\u0059\u003a\u0020\u0025\u0076\u000a",_bab .ReferenceDY ));
return _efe .String ();};func (_eaca *Header )readHeaderFlags ()error {const _ccce ="\u0072e\u0061d\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006c\u0061\u0067\u0073";_agdc ,_eeaea :=_eaca .Reader .ReadBit ();if _eeaea !=nil {return _c .Wrap (_eeaea ,_ccce ,"r\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067");
};if _agdc !=0{_eaca .RetainFlag =true ;};_agdc ,_eeaea =_eaca .Reader .ReadBit ();if _eeaea !=nil {return _c .Wrap (_eeaea ,_ccce ,"\u0070\u0061g\u0065\u0020\u0061s\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e");};if _agdc !=0{_eaca .PageAssociationFieldSize =true ;
};_cac ,_eeaea :=_eaca .Reader .ReadBits (6);if _eeaea !=nil {return _c .Wrap (_eeaea ,_ccce ,"\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065");};_eaca .Type =Type (int (_cac ));return nil ;};func _ffddd (_edab _gg .StreamReader ,_cbda *Header )*TextRegion {_edeg :=&TextRegion {_aabb :_edab ,Header :_cbda ,RegionInfo :NewRegionSegment (_edab )};
return _edeg ;};func (_bgge *HalftoneRegion )parseHeader ()error {if _baed :=_bgge .RegionSegment .parseHeader ();_baed !=nil {return _baed ;};_edca ,_agcg :=_bgge ._cbfb .ReadBit ();if _agcg !=nil {return _agcg ;};_bgge .HDefaultPixel =int8 (_edca );_cdfd ,_agcg :=_bgge ._cbfb .ReadBits (3);
if _agcg !=nil {return _agcg ;};_bgge .CombinationOperator =_f .CombinationOperator (_cdfd &0xf);_edca ,_agcg =_bgge ._cbfb .ReadBit ();if _agcg !=nil {return _agcg ;};if _edca ==1{_bgge .HSkipEnabled =true ;};_cdfd ,_agcg =_bgge ._cbfb .ReadBits (2);if _agcg !=nil {return _agcg ;
};_bgge .HTemplate =byte (_cdfd &0xf);_edca ,_agcg =_bgge ._cbfb .ReadBit ();if _agcg !=nil {return _agcg ;};if _edca ==1{_bgge .IsMMREncoded =true ;};_cdfd ,_agcg =_bgge ._cbfb .ReadBits (32);if _agcg !=nil {return _agcg ;};_bgge .HGridWidth =uint32 (_cdfd &_g .MaxUint32 );
_cdfd ,_agcg =_bgge ._cbfb .ReadBits (32);if _agcg !=nil {return _agcg ;};_bgge .HGridHeight =uint32 (_cdfd &_g .MaxUint32 );_cdfd ,_agcg =_bgge ._cbfb .ReadBits (32);if _agcg !=nil {return _agcg ;};_bgge .HGridX =int32 (_cdfd &_g .MaxInt32 );_cdfd ,_agcg =_bgge ._cbfb .ReadBits (32);
if _agcg !=nil {return _agcg ;};_bgge .HGridY =int32 (_cdfd &_g .MaxInt32 );_cdfd ,_agcg =_bgge ._cbfb .ReadBits (16);if _agcg !=nil {return _agcg ;};_bgge .HRegionX =uint16 (_cdfd &_g .MaxUint16 );_cdfd ,_agcg =_bgge ._cbfb .ReadBits (16);if _agcg !=nil {return _agcg ;
};_bgge .HRegionY =uint16 (_cdfd &_g .MaxUint16 );if _agcg =_bgge .computeSegmentDataStructure ();_agcg !=nil {return _agcg ;};return _bgge .checkInput ();};func (_fefc *Header )pageSize ()uint {if _fefc .PageAssociation <=255{return 1;};return 4;};func (_gfce *HalftoneRegion )Init (hd *Header ,r _gg .StreamReader )error {_gfce ._cbfb =r ;
_gfce ._eeeg =hd ;_gfce .RegionSegment =NewRegionSegment (r );return _gfce .parseHeader ();};func (_fdgf *TextRegion )decodeSymInRefSize ()(int64 ,error ){const _fgca ="\u0064e\u0063o\u0064\u0065\u0053\u0079\u006dI\u006e\u0052e\u0066\u0053\u0069\u007a\u0065";
if _fdgf .SbHuffRSize ==0{_cbac ,_febab :=_ae .GetStandardTable (1);if _febab !=nil {return 0,_c .Wrap (_febab ,_fgca ,"");};return _cbac .Decode (_fdgf ._aabb );};if _fdgf ._edbgg ==nil {var (_gdce int ;_ddcf error ;);if _fdgf .SbHuffFS ==3{_gdce ++;};
if _fdgf .SbHuffDS ==3{_gdce ++;};if _fdgf .SbHuffDT ==3{_gdce ++;};if _fdgf .SbHuffRDWidth ==3{_gdce ++;};if _fdgf .SbHuffRDHeight ==3{_gdce ++;};if _fdgf .SbHuffRDX ==3{_gdce ++;};if _fdgf .SbHuffRDY ==3{_gdce ++;};_fdgf ._edbgg ,_ddcf =_fdgf .getUserTable (_gdce );
if _ddcf !=nil {return 0,_c .Wrap (_ddcf ,_fgca ,"");};};_gagd ,_egbd :=_fdgf ._edbgg .Decode (_fdgf ._aabb );if _egbd !=nil {return 0,_c .Wrap (_egbd ,_fgca ,"");};return _gagd ,nil ;};func (_dagb *Header )Encode (w _gg .BinaryWriter )(_ebd int ,_cfa error ){const _bbdc ="\u0048\u0065\u0061d\u0065\u0072\u002e\u0057\u0072\u0069\u0074\u0065";
var _gdca _gg .BinaryWriter ;_gc .Log .Trace ("\u005b\u0053\u0045G\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045\u0052\u005d[\u0045\u004e\u0043\u004f\u0044\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _cfa !=nil {_gc .Log .Trace ("[\u0053\u0045\u0047\u004d\u0045\u004eT\u002d\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0045\u004e\u0043\u004f\u0044E\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020%\u0076",_cfa );
}else {_gc .Log .Trace ("\u005b\u0053\u0045\u0047ME\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0025\u0076",_dagb );_gc .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045N\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u005b\u0045\u004e\u0043O\u0044\u0045\u005d\u0020\u0046\u0069\u006ei\u0073\u0068\u0065\u0064");
};}();w .FinishByte ();if _dagb .SegmentData !=nil {_egec ,_acfb :=_dagb .SegmentData .(SegmentEncoder );if !_acfb {return 0,_c .Errorf (_bbdc ,"\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0064\u006f\u0065s\u006e\u0027\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074 \u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0045\u006e\u0063\u006f\u0064er\u0020\u0069\u006e\u0074\u0065\u0072\u0066\u0061\u0063\u0065",_dagb .SegmentData );
};_gdca =_gg .BufferedMSB ();_ebd ,_cfa =_egec .Encode (_gdca );if _cfa !=nil {return 0,_c .Wrap (_cfa ,_bbdc ,"");};_dagb .SegmentDataLength =uint64 (_ebd );};if _dagb .pageSize ()==4{_dagb .PageAssociationFieldSize =true ;};var _eeae int ;_eeae ,_cfa =_dagb .writeSegmentNumber (w );
if _cfa !=nil {return 0,_c .Wrap (_cfa ,_bbdc ,"");};_ebd +=_eeae ;if _cfa =_dagb .writeFlags (w );_cfa !=nil {return _ebd ,_c .Wrap (_cfa ,_bbdc ,"");};_ebd ++;_eeae ,_cfa =_dagb .writeReferredToCount (w );if _cfa !=nil {return 0,_c .Wrap (_cfa ,_bbdc ,"");
};_ebd +=_eeae ;_eeae ,_cfa =_dagb .writeReferredToSegments (w );if _cfa !=nil {return 0,_c .Wrap (_cfa ,_bbdc ,"");};_ebd +=_eeae ;_eeae ,_cfa =_dagb .writeSegmentPageAssociation (w );if _cfa !=nil {return 0,_c .Wrap (_cfa ,_bbdc ,"");};_ebd +=_eeae ;
_eeae ,_cfa =_dagb .writeSegmentDataLength (w );if _cfa !=nil {return 0,_c .Wrap (_cfa ,_bbdc ,"");};_ebd +=_eeae ;_dagb .HeaderLength =int64 (_ebd )-int64 (_dagb .SegmentDataLength );if _gdca !=nil {if _ ,_cfa =w .Write (_gdca .Data ());_cfa !=nil {return _ebd ,_c .Wrap (_cfa ,_bbdc ,"\u0077r\u0069t\u0065\u0020\u0073\u0065\u0067m\u0065\u006et\u0020\u0064\u0061\u0074\u0061");
};};return _ebd ,nil ;};func (_eegdc *TextRegion )GetRegionBitmap ()(*_f .Bitmap ,error ){if _eegdc .RegionBitmap !=nil {return _eegdc .RegionBitmap ,nil ;};if !_eegdc .IsHuffmanEncoded {if _facf :=_eegdc .setCodingStatistics ();_facf !=nil {return nil ,_facf ;
};};if _ecaf :=_eegdc .createRegionBitmap ();_ecaf !=nil {return nil ,_ecaf ;};if _dbfb :=_eegdc .decodeSymbolInstances ();_dbfb !=nil {return nil ,_dbfb ;};return _eegdc .RegionBitmap ,nil ;};func (_dfeac *SymbolDictionary )decodeDifferenceWidth ()(int64 ,error ){if _dfeac .IsHuffmanEncoded {switch _dfeac .SdHuffDecodeWidthSelection {case 0:_gefeb ,_abdc :=_ae .GetStandardTable (2);
if _abdc !=nil {return 0,_abdc ;};return _gefeb .Decode (_dfeac ._gfff );case 1:_ffbde ,_acgf :=_ae .GetStandardTable (3);if _acgf !=nil {return 0,_acgf ;};return _ffbde .Decode (_dfeac ._gfff );case 3:if _dfeac ._gcdbg ==nil {var _ccda int ;if _dfeac .SdHuffDecodeHeightSelection ==3{_ccda ++;
};_ageb ,_egdef :=_dfeac .getUserTable (_ccda );if _egdef !=nil {return 0,_egdef ;};_dfeac ._gcdbg =_ageb ;};return _dfeac ._gcdbg .Decode (_dfeac ._gfff );};}else {_edddf ,_afcd :=_dfeac ._baegb .DecodeInt (_dfeac ._gebc );if _afcd !=nil {return 0,_afcd ;
};return int64 (_edddf ),nil ;};return 0,nil ;};type SegmentEncoder interface{Encode (_gge _gg .BinaryWriter )(_fbge int ,_gfg error );};func (_dfgg *SymbolDictionary )decodeDirectlyThroughGenericRegion (_gaee ,_fgac uint32 )error {if _dfgg ._cffg ==nil {_dfgg ._cffg =NewGenericRegion (_dfgg ._gfff );
};_dfgg ._cffg .setParametersWithAt (false ,byte (_dfgg .SdTemplate ),false ,false ,_dfgg .SdATX ,_dfgg .SdATY ,_gaee ,_fgac ,_dfgg ._cfaf ,_dfgg ._baegb );return _dfgg .addSymbol (_dfgg ._cffg );};func (_acc *GenericRegion )decodeTemplate2 (_cee ,_bceb ,_bfg int ,_fca ,_ceeb int )(_edbe error ){const _ecd ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0032";
var (_ddeb ,_eaff int ;_gabb ,_gbd int ;_cefc byte ;_dcfb ,_bfb int ;);if _cee >=1{_cefc ,_edbe =_acc .Bitmap .GetByte (_ceeb );if _edbe !=nil {return _c .Wrap (_edbe ,_ecd ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0031");
};_gabb =int (_cefc );};if _cee >=2{_cefc ,_edbe =_acc .Bitmap .GetByte (_ceeb -_acc .Bitmap .RowStride );if _edbe !=nil {return _c .Wrap (_edbe ,_ecd ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0032");};_gbd =int (_cefc )<<4;
};_ddeb =(_gabb >>3&0x7c)|(_gbd >>3&0x380);for _aecg :=0;_aecg < _bfg ;_aecg =_dcfb {var (_bdga byte ;_dbb int ;);_dcfb =_aecg +8;if _dab :=_bceb -_aecg ;_dab > 8{_dbb =8;}else {_dbb =_dab ;};if _cee > 0{_gabb <<=8;if _dcfb < _bceb {_cefc ,_edbe =_acc .Bitmap .GetByte (_ceeb +1);
if _edbe !=nil {return _c .Wrap (_edbe ,_ecd ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0030");};_gabb |=int (_cefc );};};if _cee > 1{_gbd <<=8;if _dcfb < _bceb {_cefc ,_edbe =_acc .Bitmap .GetByte (_ceeb -_acc .Bitmap .RowStride +1);
if _edbe !=nil {return _c .Wrap (_edbe ,_ecd ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0031");};_gbd |=int (_cefc )<<4;};};for _aac :=0;_aac < _dbb ;_aac ++{_def :=uint (10-_aac );if _acc ._cccg {_eaff =_acc .overrideAtTemplate2 (_ddeb ,_aecg +_aac ,_cee ,int (_bdga ),_aac );
_acc ._eaac .SetIndex (int32 (_eaff ));}else {_acc ._eaac .SetIndex (int32 (_ddeb ));};_bfb ,_edbe =_acc ._eeg .DecodeBit (_acc ._eaac );if _edbe !=nil {return _c .Wrap (_edbe ,_ecd ,"");};_bdga |=byte (_bfb <<uint (7-_aac ));_ddeb =((_ddeb &0x1bd)<<1)|_bfb |((_gabb >>_def )&0x4)|((_gbd >>_def )&0x80);
};if _dbe :=_acc .Bitmap .SetByte (_fca ,_bdga );_dbe !=nil {return _c .Wrap (_dbe ,_ecd ,"");};_fca ++;_ceeb ++;};return nil ;};func (_ddf *SymbolDictionary )setAtPixels ()error {if _ddf .IsHuffmanEncoded {return nil ;};_ecbd :=1;if _ddf .SdTemplate ==0{_ecbd =4;
};if _afef :=_ddf .readAtPixels (_ecbd );_afef !=nil {return _afef ;};return nil ;};func (_cccc *Header )subInputReader ()(_gg .StreamReader ,error ){return _gg .NewSubstreamReader (_cccc .Reader ,_cccc .SegmentDataStartOffset ,_cccc .SegmentDataLength );
};func (_abca *SymbolDictionary )Encode (w _gg .BinaryWriter )(_agf int ,_feace error ){const _bfaf ="\u0053\u0079\u006dbo\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0045\u006e\u0063\u006f\u0064\u0065";if _abca ==nil {return 0,_c .Error (_bfaf ,"\u0073\u0079m\u0062\u006f\u006c\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066in\u0065\u0064");
};if _agf ,_feace =_abca .encodeFlags (w );_feace !=nil {return _agf ,_c .Wrap (_feace ,_bfaf ,"");};_bafd ,_feace :=_abca .encodeATFlags (w );if _feace !=nil {return _agf ,_c .Wrap (_feace ,_bfaf ,"");};_agf +=_bafd ;if _bafd ,_feace =_abca .encodeRefinementATFlags (w );
_feace !=nil {return _agf ,_c .Wrap (_feace ,_bfaf ,"");};_agf +=_bafd ;if _bafd ,_feace =_abca .encodeNumSyms (w );_feace !=nil {return _agf ,_c .Wrap (_feace ,_bfaf ,"");};_agf +=_bafd ;if _bafd ,_feace =_abca .encodeSymbols (w );_feace !=nil {return _agf ,_c .Wrap (_feace ,_bfaf ,"");
};_agf +=_bafd ;return _agf ,nil ;};func (_eeabd *HalftoneRegion )computeGrayScalePlanes (_efed []*_f .Bitmap ,_aggc int )([][]int ,error ){_dbecg :=make ([][]int ,_eeabd .HGridHeight );for _afcg :=0;_afcg < len (_dbecg );_afcg ++{_dbecg [_afcg ]=make ([]int ,_eeabd .HGridWidth );
};for _aedcg :=0;_aedcg < int (_eeabd .HGridHeight );_aedcg ++{for _fdbc :=0;_fdbc < int (_eeabd .HGridWidth );_fdbc +=8{var _gbab int ;if _fegg :=int (_eeabd .HGridWidth )-_fdbc ;_fegg > 8{_gbab =8;}else {_gbab =_fegg ;};_caefa :=_efed [0].GetByteIndex (_fdbc ,_aedcg );
for _bbg :=0;_bbg < _gbab ;_bbg ++{_bafe :=_bbg +_fdbc ;_dbecg [_aedcg ][_bafe ]=0;for _cdac :=0;_cdac < _aggc ;_cdac ++{_eecc ,_bfd :=_efed [_cdac ].GetByte (_caefa );if _bfd !=nil {return nil ,_bfd ;};_bgeg :=_eecc >>uint (7-_bafe &7);_egce :=_bgeg &1;
_bdcd :=1<<uint (_cdac );_debf :=int (_egce )*_bdcd ;_dbecg [_aedcg ][_bafe ]+=_debf ;};};};};return _dbecg ,nil ;};func (_befg *TableSegment )parseHeader ()error {var (_cdbb int ;_eeaef uint64 ;_cafe error ;);_cdbb ,_cafe =_befg ._daaf .ReadBit ();if _cafe !=nil {return _cafe ;
};if _cdbb ==1{return _bg .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0061\u0062\u006c\u0065 \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0064e\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u002e\u0020\u0042\u002e\u0032\u002e1\u0020\u0043\u006f\u0064\u0065\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0042\u0069\u0074\u0020\u0037\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u007a\u0065\u0072\u006f\u002e\u0020\u0057a\u0073\u003a \u0025\u0064",_cdbb );
};if _eeaef ,_cafe =_befg ._daaf .ReadBits (3);_cafe !=nil {return _cafe ;};_befg ._efdf =(int32 (_eeaef )+1)&0xf;if _eeaef ,_cafe =_befg ._daaf .ReadBits (3);_cafe !=nil {return _cafe ;};_befg ._efbf =(int32 (_eeaef )+1)&0xf;if _eeaef ,_cafe =_befg ._daaf .ReadBits (32);
_cafe !=nil {return _cafe ;};_befg ._aafe =int32 (_eeaef &_g .MaxInt32 );if _eeaef ,_cafe =_befg ._daaf .ReadBits (32);_cafe !=nil {return _cafe ;};_befg ._gdda =int32 (_eeaef &_g .MaxInt32 );return nil ;};func (_eeaa *TextRegion )createRegionBitmap ()error {_eeaa .RegionBitmap =_f .New (int (_eeaa .RegionInfo .BitmapWidth ),int (_eeaa .RegionInfo .BitmapHeight ));
if _eeaa .DefaultPixel !=0{_eeaa .RegionBitmap .SetDefaultPixel ();};return nil ;};func (_acca *TableSegment )HtHigh ()int32 {return _acca ._gdda };func (_ggb *Header )readHeaderLength (_edgf _gg .StreamReader ,_ggdc int64 ){_ggb .HeaderLength =_edgf .StreamPosition ()-_ggdc ;
};func (_deced *PageInformationSegment )Init (h *Header ,r _gg .StreamReader )(_dacf error ){_deced ._abee =r ;if _dacf =_deced .parseHeader ();_dacf !=nil {return _c .Wrap (_dacf ,"P\u0061\u0067\u0065\u0049\u006e\u0066o\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065g\u006d\u0065\u006et\u002eI\u006e\u0069\u0074","");
};return nil ;};func (_daga *SymbolDictionary )decodeHeightClassDeltaHeightWithHuffman ()(int64 ,error ){switch _daga .SdHuffDecodeHeightSelection {case 0:_dccbb ,_efedf :=_ae .GetStandardTable (4);if _efedf !=nil {return 0,_efedf ;};return _dccbb .Decode (_daga ._gfff );
case 1:_ffd ,_bcbd :=_ae .GetStandardTable (5);if _bcbd !=nil {return 0,_bcbd ;};return _ffd .Decode (_daga ._gfff );case 3:if _daga ._eegd ==nil {_cdffc ,_abafc :=_ae .GetStandardTable (0);if _abafc !=nil {return 0,_abafc ;};_daga ._eegd =_cdffc ;};return _daga ._eegd .Decode (_daga ._gfff );
};return 0,nil ;};func (_egeb *GenericRegion )overrideAtTemplate2 (_ddbb ,_aaca ,_ddad ,_ebb ,_fag int )int {_ddbb &=0x3FB;if _egeb .GBAtY [0]==0&&_egeb .GBAtX [0]>=-int8 (_fag ){_ddbb |=(_ebb >>uint (7-(int8 (_fag )+_egeb .GBAtX [0]))&0x1)<<2;}else {_ddbb |=int (_egeb .getPixel (_aaca +int (_egeb .GBAtX [0]),_ddad +int (_egeb .GBAtY [0])))<<2;
};return _ddbb ;};func (_egfed *TextRegion )blit (_afgd *_f .Bitmap ,_aabbe int64 )error {if _egfed .IsTransposed ==0&&(_egfed .ReferenceCorner ==2||_egfed .ReferenceCorner ==3){_egfed ._edbf +=int64 (_afgd .Width -1);}else if _egfed .IsTransposed ==1&&(_egfed .ReferenceCorner ==0||_egfed .ReferenceCorner ==2){_egfed ._edbf +=int64 (_afgd .Height -1);
};_bedea :=_egfed ._edbf ;if _egfed .IsTransposed ==1{_bedea ,_aabbe =_aabbe ,_bedea ;};switch _egfed .ReferenceCorner {case 0:_aabbe -=int64 (_afgd .Height -1);case 2:_aabbe -=int64 (_afgd .Height -1);_bedea -=int64 (_afgd .Width -1);case 3:_bedea -=int64 (_afgd .Width -1);
};_cdd :=_f .Blit (_afgd ,_egfed .RegionBitmap ,int (_bedea ),int (_aabbe ),_egfed .CombinationOperator );if _cdd !=nil {return _cdd ;};if _egfed .IsTransposed ==0&&(_egfed .ReferenceCorner ==0||_egfed .ReferenceCorner ==1){_egfed ._edbf +=int64 (_afgd .Width -1);
};if _egfed .IsTransposed ==1&&(_egfed .ReferenceCorner ==1||_egfed .ReferenceCorner ==3){_egfed ._edbf +=int64 (_afgd .Height -1);};return nil ;};func (_edgg *TextRegion )setCodingStatistics ()error {if _edgg ._begg ==nil {_edgg ._begg =_ab .NewStats (512,1);
};if _edgg ._fcg ==nil {_edgg ._fcg =_ab .NewStats (512,1);};if _edgg ._dcfca ==nil {_edgg ._dcfca =_ab .NewStats (512,1);};if _edgg ._dbcd ==nil {_edgg ._dbcd =_ab .NewStats (512,1);};if _edgg ._cgdgf ==nil {_edgg ._cgdgf =_ab .NewStats (512,1);};if _edgg ._febae ==nil {_edgg ._febae =_ab .NewStats (512,1);
};if _edgg ._agfg ==nil {_edgg ._agfg =_ab .NewStats (512,1);};if _edgg ._ccdd ==nil {_edgg ._ccdd =_ab .NewStats (1<<uint (_edgg ._gdaf ),1);};if _edgg ._beaf ==nil {_edgg ._beaf =_ab .NewStats (512,1);};if _edgg ._ageaa ==nil {_edgg ._ageaa =_ab .NewStats (512,1);
};if _edgg ._effff ==nil {var _fcdfd error ;_edgg ._effff ,_fcdfd =_ab .New (_edgg ._aabb );if _fcdfd !=nil {return _fcdfd ;};};return nil ;};func (_ccga *TableSegment )HtLow ()int32 {return _ccga ._aafe };func (_abab *SymbolDictionary )setInSyms ()error {if _abab .Header .RTSegments !=nil {return _abab .retrieveImportSymbols ();
};_abab ._adf =make ([]*_f .Bitmap ,0);return nil ;};var _ templater =&template1 {};func (_agcbg *TextRegion )getSymbols ()error {if _agcbg .Header .RTSegments !=nil {return _agcbg .initSymbols ();};return nil ;};func (_acdgbf *SymbolDictionary )encodeFlags (_fecc _gg .BinaryWriter )(_ede int ,_bfbcf error ){const _egfa ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _bfbcf =_fecc .SkipBits (3);_bfbcf !=nil {return 0,_c .Wrap (_bfbcf ,_egfa ,"\u0065\u006d\u0070\u0074\u0079\u0020\u0062\u0069\u0074\u0073");};var _bea int ;if _acdgbf .SdrTemplate > 0{_bea =1;};if _bfbcf =_fecc .WriteBit (_bea );_bfbcf !=nil {return _ede ,_c .Wrap (_bfbcf ,_egfa ,"s\u0064\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");
};_bea =0;if _acdgbf .SdTemplate > 1{_bea =1;};if _bfbcf =_fecc .WriteBit (_bea );_bfbcf !=nil {return _ede ,_c .Wrap (_bfbcf ,_egfa ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_bea =0;if _acdgbf .SdTemplate ==1||_acdgbf .SdTemplate ==3{_bea =1;
};if _bfbcf =_fecc .WriteBit (_bea );_bfbcf !=nil {return _ede ,_c .Wrap (_bfbcf ,_egfa ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_bea =0;if _acdgbf ._bdag {_bea =1;};if _bfbcf =_fecc .WriteBit (_bea );_bfbcf !=nil {return _ede ,_c .Wrap (_bfbcf ,_egfa ,"\u0063\u006f\u0064in\u0067\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0065\u0064");
};_bea =0;if _acdgbf ._gdgf {_bea =1;};if _bfbcf =_fecc .WriteBit (_bea );_bfbcf !=nil {return _ede ,_c .Wrap (_bfbcf ,_egfa ,"\u0063\u006f\u0064\u0069ng\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0075\u0073\u0065\u0064");};_bea =0;if _acdgbf .SdHuffAggInstanceSelection {_bea =1;
};if _bfbcf =_fecc .WriteBit (_bea );_bfbcf !=nil {return _ede ,_c .Wrap (_bfbcf ,_egfa ,"\u0073\u0064\u0048\u0075\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074");};_bea =int (_acdgbf .SdHuffBMSizeSelection );if _bfbcf =_fecc .WriteBit (_bea );
_bfbcf !=nil {return _ede ,_c .Wrap (_bfbcf ,_egfa ,"\u0073\u0064\u0048u\u0066\u0066\u0042\u006d\u0053\u0069\u007a\u0065");};_bea =0;if _acdgbf .SdHuffDecodeWidthSelection > 1{_bea =1;};if _bfbcf =_fecc .WriteBit (_bea );_bfbcf !=nil {return _ede ,_c .Wrap (_bfbcf ,_egfa ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");
};_bea =0;switch _acdgbf .SdHuffDecodeWidthSelection {case 1,3:_bea =1;};if _bfbcf =_fecc .WriteBit (_bea );_bfbcf !=nil {return _ede ,_c .Wrap (_bfbcf ,_egfa ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_bea =0;if _acdgbf .SdHuffDecodeHeightSelection > 1{_bea =1;
};if _bfbcf =_fecc .WriteBit (_bea );_bfbcf !=nil {return _ede ,_c .Wrap (_bfbcf ,_egfa ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_bea =0;switch _acdgbf .SdHuffDecodeHeightSelection {case 1,3:_bea =1;};if _bfbcf =_fecc .WriteBit (_bea );
_bfbcf !=nil {return _ede ,_c .Wrap (_bfbcf ,_egfa ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_bea =0;if _acdgbf .UseRefinementAggregation {_bea =1;};if _bfbcf =_fecc .WriteBit (_bea );_bfbcf !=nil {return _ede ,_c .Wrap (_bfbcf ,_egfa ,"\u0073\u0064\u0052\u0065\u0066\u0041\u0067\u0067");
};_bea =0;if _acdgbf .IsHuffmanEncoded {_bea =1;};if _bfbcf =_fecc .WriteBit (_bea );_bfbcf !=nil {return _ede ,_c .Wrap (_bfbcf ,_egfa ,"\u0073\u0064\u0048\u0075\u0066\u0066");};return 2,nil ;};func (_efcd *PageInformationSegment )encodeFlags (_dbac _gg .BinaryWriter )(_gcfc error ){const _acdgb ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _gcfc =_dbac .SkipBits (1);_gcfc !=nil {return _c .Wrap (_gcfc ,_acdgb ,"\u0072\u0065\u0073e\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074");};var _bcfc int ;if _efcd .CombinationOperatorOverrideAllowed (){_bcfc =1;};if _gcfc =_dbac .WriteBit (_bcfc );
_gcfc !=nil {return _c .Wrap (_gcfc ,_acdgb ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0064\u0065\u006e");};_bcfc =0;if _efcd ._fgg {_bcfc =1;
};if _gcfc =_dbac .WriteBit (_bcfc );_gcfc !=nil {return _c .Wrap (_gcfc ,_acdgb ,"\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0061\u0075\u0078i\u006ci\u0061r\u0079\u0020\u0062\u0075\u0066\u0066\u0065r");};if _gcfc =_dbac .WriteBit ((int (_efcd ._ggdf )>>1)&0x01);
_gcfc !=nil {return _c .Wrap (_gcfc ,_acdgb ,"\u0063\u006f\u006d\u0062\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006f\u0070\u0065\u0072\u0061\u0074o\u0072\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0062\u0069\u0074");};if _gcfc =_dbac .WriteBit (int (_efcd ._ggdf )&0x01);
_gcfc !=nil {return _c .Wrap (_gcfc ,_acdgb ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0062\u0069\u0074");};_bcfc =int (_efcd .DefaultPixelValue );
if _gcfc =_dbac .WriteBit (_bcfc );_gcfc !=nil {return _c .Wrap (_gcfc ,_acdgb ,"\u0064e\u0066\u0061\u0075\u006c\u0074\u0020\u0070\u0061\u0067\u0065\u0020p\u0069\u0078\u0065\u006c\u0020\u0076\u0061\u006c\u0075\u0065");};_bcfc =0;if _efcd ._bafb {_bcfc =1;
};if _gcfc =_dbac .WriteBit (_bcfc );_gcfc !=nil {return _c .Wrap (_gcfc ,_acdgb ,"\u0063\u006f\u006e\u0074ai\u006e\u0073\u0020\u0072\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074");};_bcfc =0;if _efcd .IsLossless {_bcfc =1;};if _gcfc =_dbac .WriteBit (_bcfc );
_gcfc !=nil {return _c .Wrap (_gcfc ,_acdgb ,"p\u0061\u0067\u0065\u0020\u0069\u0073 \u0065\u0076\u0065\u006e\u0074\u0075\u0061\u006c\u006cy\u0020\u006c\u006fs\u0073l\u0065\u0073\u0073");};return nil ;};func (_aca *HalftoneRegion )grayScaleDecoding (_afbg int )([][]int ,error ){var (_gcbbd []int8 ;
_aabe []int8 ;);if !_aca .IsMMREncoded {_gcbbd =make ([]int8 ,4);_aabe =make ([]int8 ,4);if _aca .HTemplate <=1{_gcbbd [0]=3;}else if _aca .HTemplate >=2{_gcbbd [0]=2;};_aabe [0]=-1;_gcbbd [1]=-3;_aabe [1]=-1;_gcbbd [2]=2;_aabe [2]=-2;_gcbbd [3]=-2;_aabe [3]=-2;
};_bbca :=make ([]*_f .Bitmap ,_afbg );_cea :=NewGenericRegion (_aca ._cbfb );_cea .setParametersMMR (_aca .IsMMREncoded ,_aca .DataOffset ,_aca .DataLength ,_aca .HGridHeight ,_aca .HGridWidth ,_aca .HTemplate ,false ,_aca .HSkipEnabled ,_gcbbd ,_aabe );
_gcca :=_afbg -1;var _gbge error ;_bbca [_gcca ],_gbge =_cea .GetRegionBitmap ();if _gbge !=nil {return nil ,_gbge ;};for _gcca > 0{_gcca --;_cea .Bitmap =nil ;_bbca [_gcca ],_gbge =_cea .GetRegionBitmap ();if _gbge !=nil {return nil ,_gbge ;};if _gbge =_aca .combineGrayscalePlanes (_bbca ,_gcca );
_gbge !=nil {return nil ,_gbge ;};};return _aca .computeGrayScalePlanes (_bbca ,_afbg );};func (_gggb *SymbolDictionary )getSymbol (_begbf int )(*_f .Bitmap ,error ){const _ebee ="\u0067e\u0074\u0053\u0079\u006d\u0062\u006fl";_accd ,_bfag :=_gggb ._bde .GetBitmap (_gggb ._eaaa [_begbf ]);
if _bfag !=nil {return nil ,_c .Wrap (_bfag ,_ebee ,"\u0063\u0061n\u0027\u0074\u0020g\u0065\u0074\u0020\u0073\u0079\u006d\u0062\u006f\u006c");};return _accd ,nil ;};func (_dcdf *GenericRegion )parseHeader ()(_efac error ){_gc .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052I\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0050\u0061\u0072s\u0069\u006e\u0067\u0048\u0065\u0061\u0064e\u0072\u002e\u002e\u002e");
defer func (){if _efac !=nil {_gc .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e]\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065r\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0077\u0069th\u0020\u0065\u0072\u0072\u006f\u0072\u002e\u0020\u0025\u0076",_efac );
}else {_gc .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049C\u002d\u0052\u0045G\u0049\u004f\u004e]\u0020\u0050a\u0072\u0073\u0069\u006e\u0067\u0048e\u0061de\u0072\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0053\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079\u002e\u002e\u002e");
};}();var (_bga int ;_baf uint64 ;);if _efac =_dcdf .RegionSegment .parseHeader ();_efac !=nil {return _efac ;};if _ ,_efac =_dcdf ._cfb .ReadBits (3);_efac !=nil {return _efac ;};_bga ,_efac =_dcdf ._cfb .ReadBit ();if _efac !=nil {return _efac ;};if _bga ==1{_dcdf .UseExtTemplates =true ;
};_bga ,_efac =_dcdf ._cfb .ReadBit ();if _efac !=nil {return _efac ;};if _bga ==1{_dcdf .IsTPGDon =true ;};_baf ,_efac =_dcdf ._cfb .ReadBits (2);if _efac !=nil {return _efac ;};_dcdf .GBTemplate =byte (_baf &0xf);_bga ,_efac =_dcdf ._cfb .ReadBit ();
if _efac !=nil {return _efac ;};if _bga ==1{_dcdf .IsMMREncoded =true ;};if !_dcdf .IsMMREncoded {_cfbg :=1;if _dcdf .GBTemplate ==0{_cfbg =4;if _dcdf .UseExtTemplates {_cfbg =12;};};if _efac =_dcdf .readGBAtPixels (_cfbg );_efac !=nil {return _efac ;};
};if _efac =_dcdf .computeSegmentDataStructure ();_efac !=nil {return _efac ;};_gc .Log .Trace ("\u0025\u0073",_dcdf );return nil ;};type template0 struct{};var _ _ae .BasicTabler =&TableSegment {};func (_ef *EndOfStripe )Init (h *Header ,r _gg .StreamReader )error {_ef ._ga =r ;
return _ef .parseHeader (h ,r );};func (_fcac *TextRegion )parseHeader ()error {var _cafg error ;_gc .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069n\u0073\u002e\u002e\u002e");
defer func (){if _cafg !=nil {_gc .Log .Trace ("\u005b\u0054\u0045\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044E\u0052\u005d\u0020\u0066\u0061i\u006c\u0065d\u002e\u0020\u0025\u0076",_cafg );
}else {_gc .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069s\u0068\u0065\u0064\u002e");};}();if _cafg =_fcac .RegionInfo .parseHeader ();
_cafg !=nil {return _cafg ;};if _cafg =_fcac .readRegionFlags ();_cafg !=nil {return _cafg ;};if _fcac .IsHuffmanEncoded {if _cafg =_fcac .readHuffmanFlags ();_cafg !=nil {return _cafg ;};};if _cafg =_fcac .readUseRefinement ();_cafg !=nil {return _cafg ;
};if _cafg =_fcac .readAmountOfSymbolInstances ();_cafg !=nil {return _cafg ;};if _cafg =_fcac .getSymbols ();_cafg !=nil {return _cafg ;};if _cafg =_fcac .computeSymbolCodeLength ();_cafg !=nil {return _cafg ;};if _cafg =_fcac .checkInput ();_cafg !=nil {return _cafg ;
};_gc .Log .Trace ("\u0025\u0073",_fcac .String ());return nil ;};func (_fabda *TextRegion )GetRegionInfo ()*RegionSegment {return _fabda .RegionInfo };func (_cda *GenericRegion )setParameters (_aega bool ,_adgg ,_feg int64 ,_afgad ,_cad uint32 ){_cda .IsMMREncoded =_aega ;
_cda .DataOffset =_adgg ;_cda .DataLength =_feg ;_cda .RegionSegment .BitmapHeight =_afgad ;_cda .RegionSegment .BitmapWidth =_cad ;_cda ._ade =nil ;_cda .Bitmap =nil ;};func (_bcgf *SymbolDictionary )InitEncode (symbols *_f .Bitmaps ,symbolList []int ,symbolMap map[int ]int ,unborderSymbols bool )error {const _abdf ="S\u0079\u006d\u0062\u006f\u006c\u0044i\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002eI\u006e\u0069\u0074E\u006ec\u006f\u0064\u0065";
_bcgf .SdATX =[]int8 {3,-3,2,-2};_bcgf .SdATY =[]int8 {-1,-1,-2,-2};_bcgf ._bde =symbols ;_bcgf ._eaaa =make ([]int ,len (symbolList ));copy (_bcgf ._eaaa ,symbolList );if len (_bcgf ._eaaa )!=_bcgf ._bde .Size (){return _c .Error (_abdf ,"s\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0061\u006e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u004ci\u0073\u0074\u0020\u006f\u0066\u0020\u0064\u0069\u0066\u0066er\u0065\u006e\u0074 \u0073i\u007a\u0065");
};_bcgf .NumberOfNewSymbols =uint32 (symbols .Size ());_bcgf .NumberOfExportedSymbols =uint32 (symbols .Size ());_bcgf ._bdge =symbolMap ;_bcgf ._dbda =unborderSymbols ;return nil ;};func (_bgbg *SymbolDictionary )encodeATFlags (_gabac _gg .BinaryWriter )(_cbg int ,_eggc error ){const _aggad ="\u0065\u006e\u0063\u006f\u0064\u0065\u0041\u0054\u0046\u006c\u0061\u0067\u0073";
if _bgbg .IsHuffmanEncoded ||_bgbg .SdTemplate !=0{return 0,nil ;};_cbfe :=4;if _bgbg .SdTemplate !=0{_cbfe =1;};for _dcfc :=0;_dcfc < _cbfe ;_dcfc ++{if _eggc =_gabac .WriteByte (byte (_bgbg .SdATX [_dcfc ]));_eggc !=nil {return _cbg ,_c .Wrapf (_eggc ,_aggad ,"\u0053d\u0041\u0054\u0058\u005b\u0025\u0064]",_dcfc );
};_cbg ++;if _eggc =_gabac .WriteByte (byte (_bgbg .SdATY [_dcfc ]));_eggc !=nil {return _cbg ,_c .Wrapf (_eggc ,_aggad ,"\u0053d\u0041\u0054\u0059\u005b\u0025\u0064]",_dcfc );};_cbg ++;};return _cbg ,nil ;};func (_abde *GenericRegion )overrideAtTemplate0a (_cag ,_fabb ,_gee ,_cfbgf ,_ffa ,_fbdf int )int {if _abde .GBAtOverride [0]{_cag &=0xFFEF;
if _abde .GBAtY [0]==0&&_abde .GBAtX [0]>=-int8 (_ffa ){_cag |=(_cfbgf >>uint (int8 (_fbdf )-_abde .GBAtX [0]&0x1))<<4;}else {_cag |=int (_abde .getPixel (_fabb +int (_abde .GBAtX [0]),_gee +int (_abde .GBAtY [0])))<<4;};};if _abde .GBAtOverride [1]{_cag &=0xFBFF;
if _abde .GBAtY [1]==0&&_abde .GBAtX [1]>=-int8 (_ffa ){_cag |=(_cfbgf >>uint (int8 (_fbdf )-_abde .GBAtX [1]&0x1))<<10;}else {_cag |=int (_abde .getPixel (_fabb +int (_abde .GBAtX [1]),_gee +int (_abde .GBAtY [1])))<<10;};};if _abde .GBAtOverride [2]{_cag &=0xF7FF;
if _abde .GBAtY [2]==0&&_abde .GBAtX [2]>=-int8 (_ffa ){_cag |=(_cfbgf >>uint (int8 (_fbdf )-_abde .GBAtX [2]&0x1))<<11;}else {_cag |=int (_abde .getPixel (_fabb +int (_abde .GBAtX [2]),_gee +int (_abde .GBAtY [2])))<<11;};};if _abde .GBAtOverride [3]{_cag &=0x7FFF;
if _abde .GBAtY [3]==0&&_abde .GBAtX [3]>=-int8 (_ffa ){_cag |=(_cfbgf >>uint (int8 (_fbdf )-_abde .GBAtX [3]&0x1))<<15;}else {_cag |=int (_abde .getPixel (_fabb +int (_abde .GBAtX [3]),_gee +int (_abde .GBAtY [3])))<<15;};};return _cag ;};func (_ffbc *Header )referenceSize ()uint {switch {case _ffbc .SegmentNumber <=255:return 1;
case _ffbc .SegmentNumber <=65535:return 2;default:return 4;};};func (_gbea *TextRegion )decodeIds ()(int64 ,error ){const _dcaf ="\u0064e\u0063\u006f\u0064\u0065\u0049\u0064s";if _gbea .IsHuffmanEncoded {if _gbea .SbHuffDS ==3{if _gbea ._cdeb ==nil {_bgabc :=0;
if _gbea .SbHuffFS ==3{_bgabc ++;};var _dabb error ;_gbea ._cdeb ,_dabb =_gbea .getUserTable (_bgabc );if _dabb !=nil {return 0,_c .Wrap (_dabb ,_dcaf ,"");};};return _gbea ._cdeb .Decode (_gbea ._aabb );};_aacf ,_bgde :=_ae .GetStandardTable (8+int (_gbea .SbHuffDS ));
if _bgde !=nil {return 0,_c .Wrap (_bgde ,_dcaf ,"");};return _aacf .Decode (_gbea ._aabb );};_fgfa ,_bffa :=_gbea ._effff .DecodeInt (_gbea ._dcfca );if _bffa !=nil {return 0,_c .Wrap (_bffa ,_dcaf ,"\u0063\u0078\u0049\u0041\u0044\u0053");};return int64 (_fgfa ),nil ;
};func (_fea *HalftoneRegion )shiftAndFill (_dba int )int {_dba >>=8;if _dba < 0{_fdgb :=int (_g .Log (float64 (_cgeg (_dba )))/_g .Log (2));_ccdg :=31-_fdgb ;for _fde :=1;_fde < _ccdg ;_fde ++{_dba |=1<<uint (31-_fde );};};return _dba ;};func (_ggfa *PageInformationSegment )readDefaultPixelValue ()error {_bba ,_cgda :=_ggfa ._abee .ReadBit ();
if _cgda !=nil {return _cgda ;};_ggfa .DefaultPixelValue =uint8 (_bba &0xf);return nil ;};func (_feea *Header )readSegmentNumber (_fbee _gg .StreamReader )error {const _bda ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";
_aaac :=make ([]byte ,4);_ ,_fede :=_fbee .Read (_aaac );if _fede !=nil {return _c .Wrap (_fede ,_bda ,"");};_feea .SegmentNumber =_e .BigEndian .Uint32 (_aaac );return nil ;};func (_ddeeb *TextRegion )computeSymbolCodeLength ()error {if _ddeeb .IsHuffmanEncoded {return _ddeeb .symbolIDCodeLengths ();
};_ddeeb ._gdaf =int8 (_g .Ceil (_g .Log (float64 (_ddeeb .NumberOfSymbols ))/_g .Log (2)));return nil ;};func (_gcdb *GenericRefinementRegion )decodeTypicalPredictedLineTemplate1 (_eg ,_cca ,_ebc ,_dfg ,_egf ,_ec ,_ccf ,_bbc ,_bcc int )(_bcf error ){var (_bca ,_aba int ;
_cdf ,_bbd int ;_abd ,_bfaa int ;_aeda byte ;);if _eg > 0{_aeda ,_bcf =_gcdb .RegionBitmap .GetByte (_ccf -_ebc );if _bcf !=nil {return ;};_cdf =int (_aeda );};if _bbc > 0&&_bbc <=_gcdb .ReferenceBitmap .Height {_aeda ,_bcf =_gcdb .ReferenceBitmap .GetByte (_bcc -_dfg +_ec );
if _bcf !=nil {return ;};_bbd =int (_aeda )<<2;};if _bbc >=0&&_bbc < _gcdb .ReferenceBitmap .Height {_aeda ,_bcf =_gcdb .ReferenceBitmap .GetByte (_bcc +_ec );if _bcf !=nil {return ;};_abd =int (_aeda );};if _bbc > -2&&_bbc < _gcdb .ReferenceBitmap .Height -1{_aeda ,_bcf =_gcdb .ReferenceBitmap .GetByte (_bcc +_dfg +_ec );
if _bcf !=nil {return ;};_bfaa =int (_aeda );};_bca =((_cdf >>5)&0x6)|((_bfaa >>2)&0x30)|(_abd &0xc0)|(_bbd &0x200);_aba =((_bfaa >>2)&0x70)|(_abd &0xc0)|(_bbd &0x700);var _add int ;for _aege :=0;_aege < _egf ;_aege =_add {var (_ccg int ;_daa int ;);_add =_aege +8;
if _ccg =_cca -_aege ;_ccg > 8{_ccg =8;};_aec :=_add < _cca ;_ded :=_add < _gcdb .ReferenceBitmap .Width ;_edgd :=_ec +1;if _eg > 0{_aeda =0;if _aec {_aeda ,_bcf =_gcdb .RegionBitmap .GetByte (_ccf -_ebc +1);if _bcf !=nil {return ;};};_cdf =(_cdf <<8)|int (_aeda );
};if _bbc > 0&&_bbc <=_gcdb .ReferenceBitmap .Height {var _gbfb int ;if _ded {_aeda ,_bcf =_gcdb .ReferenceBitmap .GetByte (_bcc -_dfg +_edgd );if _bcf !=nil {return ;};_gbfb =int (_aeda )<<2;};_bbd =(_bbd <<8)|_gbfb ;};if _bbc >=0&&_bbc < _gcdb .ReferenceBitmap .Height {_aeda =0;
if _ded {_aeda ,_bcf =_gcdb .ReferenceBitmap .GetByte (_bcc +_edgd );if _bcf !=nil {return ;};};_abd =(_abd <<8)|int (_aeda );};if _bbc > -2&&_bbc < (_gcdb .ReferenceBitmap .Height -1){_aeda =0;if _ded {_aeda ,_bcf =_gcdb .ReferenceBitmap .GetByte (_bcc +_dfg +_edgd );
if _bcf !=nil {return ;};};_bfaa =(_bfaa <<8)|int (_aeda );};for _dee :=0;_dee < _ccg ;_dee ++{var _bfff int ;_aad :=(_aba >>4)&0x1ff;switch _aad {case 0x1ff:_bfff =1;case 0x00:_bfff =0;default:_gcdb ._ff .SetIndex (int32 (_bca ));_bfff ,_bcf =_gcdb ._gb .DecodeBit (_gcdb ._ff );
if _bcf !=nil {return ;};};_aef :=uint (7-_dee );_daa |=_bfff <<_aef ;_bca =((_bca &0x0d6)<<1)|_bfff |(_cdf >>_aef +5)&0x002|((_bfaa >>_aef +2)&0x010)|((_abd >>_aef )&0x040)|((_bbd >>_aef )&0x200);_aba =((_aba &0xdb)<<1)|((_bfaa >>_aef +2)&0x010)|((_abd >>_aef )&0x080)|((_bbd >>_aef )&0x400);
};_bcf =_gcdb .RegionBitmap .SetByte (_ccf ,byte (_daa ));if _bcf !=nil {return ;};_ccf ++;_bcc ++;};return nil ;};type Documenter interface{GetPage (int )(Pager ,error );GetGlobalSegment (int )(*Header ,error );};func (_bc *GenericRefinementRegion )GetRegionBitmap ()(*_f .Bitmap ,error ){var _fb error ;
_gc .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _fb !=nil {_gc .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0047\u0065\u0074R\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006dap\u0020\u0066a\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_fb );
}else {_gc .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _bc .RegionBitmap !=nil {return _bc .RegionBitmap ,nil ;};_deb :=0;if _bc .ReferenceBitmap ==nil {_bc .ReferenceBitmap ,_fb =_bc .getGrReference ();if _fb !=nil {return nil ,_fb ;};};if _bc ._gb ==nil {_bc ._gb ,_fb =_ab .New (_bc ._df );if _fb !=nil {return nil ,_fb ;
};};if _bc ._ff ==nil {_bc ._ff =_ab .NewStats (8192,1);};_bc .RegionBitmap =_f .New (int (_bc .RegionInfo .BitmapWidth ),int (_bc .RegionInfo .BitmapHeight ));if _bc .TemplateID ==0{if _fb =_bc .updateOverride ();_fb !=nil {return nil ,_fb ;};};_bed :=(_bc .RegionBitmap .Width +7)&-8;
var _ggf int ;if _bc .IsTPGROn {_ggf =int (-_bc .ReferenceDY )*_bc .ReferenceBitmap .RowStride ;};_db :=_ggf +1;for _dd :=0;_dd < _bc .RegionBitmap .Height ;_dd ++{if _bc .IsTPGROn {_ggg ,_fbc :=_bc .decodeSLTP ();if _fbc !=nil {return nil ,_fbc ;};_deb ^=_ggg ;
};if _deb ==0{_fb =_bc .decodeOptimized (_dd ,_bc .RegionBitmap .Width ,_bc .RegionBitmap .RowStride ,_bc .ReferenceBitmap .RowStride ,_bed ,_ggf ,_db );if _fb !=nil {return nil ,_fb ;};}else {_fb =_bc .decodeTypicalPredictedLine (_dd ,_bc .RegionBitmap .Width ,_bc .RegionBitmap .RowStride ,_bc .ReferenceBitmap .RowStride ,_bed ,_ggf );
if _fb !=nil {return nil ,_fb ;};};};return _bc .RegionBitmap ,nil ;};func (_fgga *TextRegion )checkInput ()error {const _ggffb ="\u0063\u0068\u0065\u0063\u006b\u0049\u006e\u0070\u0075\u0074";if !_fgga .UseRefinement {if _fgga .SbrTemplate !=0{_gc .Log .Debug ("\u0053\u0062\u0072Te\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");
_fgga .SbrTemplate =0;};};if _fgga .SbHuffFS ==2||_fgga .SbHuffRDWidth ==2||_fgga .SbHuffRDHeight ==2||_fgga .SbHuffRDX ==2||_fgga .SbHuffRDY ==2{return _c .Error (_ggffb ,"h\u0075\u0066\u0066\u006d\u0061\u006e \u0066\u006c\u0061\u0067\u0020\u0076a\u006c\u0075\u0065\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074e\u0064");
};if !_fgga .UseRefinement {if _fgga .SbHuffRSize !=0{_gc .Log .Debug ("\u0053\u0062\u0048uf\u0066\u0052\u0053\u0069\u007a\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_fgga .SbHuffRSize =0;};if _fgga .SbHuffRDY !=0{_gc .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044Y\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");
_fgga .SbHuffRDY =0;};if _fgga .SbHuffRDX !=0{_gc .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044X\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_fgga .SbHuffRDX =0;};if _fgga .SbHuffRDWidth !=0{_gc .Log .Debug ("\u0053b\u0048\u0075\u0066\u0066R\u0044\u0057\u0069\u0064\u0074h\u0020s\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u00200");
_fgga .SbHuffRDWidth =0;};if _fgga .SbHuffRDHeight !=0{_gc .Log .Debug ("\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069g\u0068\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0030");_fgga .SbHuffRDHeight =0;};};return nil ;
};func NewHeader (d Documenter ,r _gg .StreamReader ,offset int64 ,organizationType OrganizationType )(*Header ,error ){_gffe :=&Header {Reader :r };if _gadb :=_gffe .parse (d ,r ,offset ,organizationType );_gadb !=nil {return nil ,_c .Wrap (_gadb ,"\u004ee\u0077\u0048\u0065\u0061\u0064\u0065r","");
};return _gffe ,nil ;};func (_dfad *TextRegion )readHuffmanFlags ()error {var (_afa int ;_cgab uint64 ;_cbca error ;);_ ,_cbca =_dfad ._aabb .ReadBit ();if _cbca !=nil {return _cbca ;};_afa ,_cbca =_dfad ._aabb .ReadBit ();if _cbca !=nil {return _cbca ;
};_dfad .SbHuffRSize =int8 (_afa );_cgab ,_cbca =_dfad ._aabb .ReadBits (2);if _cbca !=nil {return _cbca ;};_dfad .SbHuffRDY =int8 (_cgab )&0xf;_cgab ,_cbca =_dfad ._aabb .ReadBits (2);if _cbca !=nil {return _cbca ;};_dfad .SbHuffRDX =int8 (_cgab )&0xf;
_cgab ,_cbca =_dfad ._aabb .ReadBits (2);if _cbca !=nil {return _cbca ;};_dfad .SbHuffRDHeight =int8 (_cgab )&0xf;_cgab ,_cbca =_dfad ._aabb .ReadBits (2);if _cbca !=nil {return _cbca ;};_dfad .SbHuffRDWidth =int8 (_cgab )&0xf;_cgab ,_cbca =_dfad ._aabb .ReadBits (2);
if _cbca !=nil {return _cbca ;};_dfad .SbHuffDT =int8 (_cgab )&0xf;_cgab ,_cbca =_dfad ._aabb .ReadBits (2);if _cbca !=nil {return _cbca ;};_dfad .SbHuffDS =int8 (_cgab )&0xf;_cgab ,_cbca =_dfad ._aabb .ReadBits (2);if _cbca !=nil {return _cbca ;};_dfad .SbHuffFS =int8 (_cgab )&0xf;
return nil ;};func (_ffca *SymbolDictionary )decodeRefinedSymbol (_ebaa ,_afcb uint32 )error {var (_gcff int ;_gga ,_dgae int32 ;);if _ffca .IsHuffmanEncoded {_fdef ,_bgeb :=_ffca ._gfff .ReadBits (byte (_ffca ._eabg ));if _bgeb !=nil {return _bgeb ;};
_gcff =int (_fdef );_ddebe ,_bgeb :=_ae .GetStandardTable (15);if _bgeb !=nil {return _bgeb ;};_ffbcg ,_bgeb :=_ddebe .Decode (_ffca ._gfff );if _bgeb !=nil {return _bgeb ;};_gga =int32 (_ffbcg );_ffbcg ,_bgeb =_ddebe .Decode (_ffca ._gfff );if _bgeb !=nil {return _bgeb ;
};_dgae =int32 (_ffbcg );_ddebe ,_bgeb =_ae .GetStandardTable (1);if _bgeb !=nil {return _bgeb ;};if _ ,_bgeb =_ddebe .Decode (_ffca ._gfff );_bgeb !=nil {return _bgeb ;};_ffca ._gfff .Align ();}else {_bffd ,_egbf :=_ffca ._baegb .DecodeIAID (uint64 (_ffca ._eabg ),_ffca ._fbgeg );
if _egbf !=nil {return _egbf ;};_gcff =int (_bffd );_gga ,_egbf =_ffca ._baegb .DecodeInt (_ffca ._afeg );if _egbf !=nil {return _egbf ;};_dgae ,_egbf =_ffca ._baegb .DecodeInt (_ffca ._eegc );if _egbf !=nil {return _egbf ;};};if _dfbf :=_ffca .setSymbolsArray ();
_dfbf !=nil {return _dfbf ;};_bcge :=_ffca ._affgc [_gcff ];if _ccaga :=_ffca .decodeNewSymbols (_ebaa ,_afcb ,_bcge ,_gga ,_dgae );_ccaga !=nil {return _ccaga ;};if _ffca .IsHuffmanEncoded {_ffca ._gfff .Align ();};return nil ;};func (_gcb *GenericRefinementRegion )decodeTypicalPredictedLineTemplate0 (_agc ,_agbg ,_dg ,_gbf ,_eb ,_adc ,_dcg ,_fg ,_cc int )error {var (_bcb ,_efb ,_fdd ,_gac ,_fge ,_aaa int ;
_dfe byte ;_gef error ;);if _agc > 0{_dfe ,_gef =_gcb .RegionBitmap .GetByte (_dcg -_dg );if _gef !=nil {return _gef ;};_fdd =int (_dfe );};if _fg > 0&&_fg <=_gcb .ReferenceBitmap .Height {_dfe ,_gef =_gcb .ReferenceBitmap .GetByte (_cc -_gbf +_adc );if _gef !=nil {return _gef ;
};_gac =int (_dfe )<<4;};if _fg >=0&&_fg < _gcb .ReferenceBitmap .Height {_dfe ,_gef =_gcb .ReferenceBitmap .GetByte (_cc +_adc );if _gef !=nil {return _gef ;};_fge =int (_dfe )<<1;};if _fg > -2&&_fg < _gcb .ReferenceBitmap .Height -1{_dfe ,_gef =_gcb .ReferenceBitmap .GetByte (_cc +_gbf +_adc );
if _gef !=nil {return _gef ;};_aaa =int (_dfe );};_bcb =((_fdd >>5)&0x6)|((_aaa >>2)&0x30)|(_fge &0x180)|(_gac &0xc00);var _beg int ;for _gggg :=0;_gggg < _eb ;_gggg =_beg {var _ca int ;_beg =_gggg +8;var _bfe int ;if _bfe =_agbg -_gggg ;_bfe > 8{_bfe =8;
};_dceg :=_beg < _agbg ;_bfa :=_beg < _gcb .ReferenceBitmap .Width ;_fc :=_adc +1;if _agc > 0{_dfe =0;if _dceg {_dfe ,_gef =_gcb .RegionBitmap .GetByte (_dcg -_dg +1);if _gef !=nil {return _gef ;};};_fdd =(_fdd <<8)|int (_dfe );};if _fg > 0&&_fg <=_gcb .ReferenceBitmap .Height {var _dfa int ;
if _bfa {_dfe ,_gef =_gcb .ReferenceBitmap .GetByte (_cc -_gbf +_fc );if _gef !=nil {return _gef ;};_dfa =int (_dfe )<<4;};_gac =(_gac <<8)|_dfa ;};if _fg >=0&&_fg < _gcb .ReferenceBitmap .Height {var _bdc int ;if _bfa {_dfe ,_gef =_gcb .ReferenceBitmap .GetByte (_cc +_fc );
if _gef !=nil {return _gef ;};_bdc =int (_dfe )<<1;};_fge =(_fge <<8)|_bdc ;};if _fg > -2&&_fg < (_gcb .ReferenceBitmap .Height -1){_dfe =0;if _bfa {_dfe ,_gef =_gcb .ReferenceBitmap .GetByte (_cc +_gbf +_fc );if _gef !=nil {return _gef ;};};_aaa =(_aaa <<8)|int (_dfe );
};for _fgf :=0;_fgf < _bfe ;_fgf ++{var _dfac int ;_cdc :=false ;_cbb :=(_bcb >>4)&0x1ff;if _cbb ==0x1ff{_cdc =true ;_dfac =1;}else if _cbb ==0x00{_cdc =true ;};if !_cdc {if _gcb ._dcb {_efb =_gcb .overrideAtTemplate0 (_bcb ,_gggg +_fgf ,_agc ,_ca ,_fgf );
_gcb ._ff .SetIndex (int32 (_efb ));}else {_gcb ._ff .SetIndex (int32 (_bcb ));};_dfac ,_gef =_gcb ._gb .DecodeBit (_gcb ._ff );if _gef !=nil {return _gef ;};};_gcf :=uint (7-_fgf );_ca |=_dfac <<_gcf ;_bcb =((_bcb &0xdb6)<<1)|_dfac |(_fdd >>_gcf +5)&0x002|((_aaa >>_gcf +2)&0x010)|((_fge >>_gcf )&0x080)|((_gac >>_gcf )&0x400);
};_gef =_gcb .RegionBitmap .SetByte (_dcg ,byte (_ca ));if _gef !=nil {return _gef ;};_dcg ++;_cc ++;};return nil ;};func (_cbfbb *Header )readReferredToSegmentNumbers (_bbdf _gg .StreamReader ,_ecged int )([]int ,error ){const _cdad ="\u0072\u0065\u0061\u0064R\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053e\u0067m\u0065\u006e\u0074\u004e\u0075\u006d\u0062e\u0072\u0073";
_fabd :=make ([]int ,_ecged );if _ecged > 0{_cbfbb .RTSegments =make ([]*Header ,_ecged );var (_gcag uint64 ;_dece error ;);for _bdbd :=0;_bdbd < _ecged ;_bdbd ++{_gcag ,_dece =_bbdf .ReadBits (byte (_cbfbb .referenceSize ())<<3);if _dece !=nil {return nil ,_c .Wrapf (_dece ,_cdad ,"\u0027\u0025\u0064\u0027 \u0072\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0020\u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u0075\u006db\u0065\u0072",_bdbd );
};_fabd [_bdbd ]=int (_gcag &_g .MaxInt32 );};};return _fabd ,nil ;};func (_fcaf *TextRegion )Init (header *Header ,r _gg .StreamReader )error {_fcaf .Header =header ;_fcaf ._aabb =r ;_fcaf .RegionInfo =NewRegionSegment (_fcaf ._aabb );return _fcaf .parseHeader ();
};func (_cfac *TableSegment )StreamReader ()_gg .StreamReader {return _cfac ._daaf };func (_cgea *TextRegion )decodeRdh ()(int64 ,error ){const _begdf ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064h";if _cgea .IsHuffmanEncoded {if _cgea .SbHuffRDHeight ==3{if _cgea ._eaacb ==nil {var (_dbff int ;
_ceff error ;);if _cgea .SbHuffFS ==3{_dbff ++;};if _cgea .SbHuffDS ==3{_dbff ++;};if _cgea .SbHuffDT ==3{_dbff ++;};if _cgea .SbHuffRDWidth ==3{_dbff ++;};_cgea ._eaacb ,_ceff =_cgea .getUserTable (_dbff );if _ceff !=nil {return 0,_c .Wrap (_ceff ,_begdf ,"");
};};return _cgea ._eaacb .Decode (_cgea ._aabb );};_gaaee ,_bbcg :=_ae .GetStandardTable (14+int (_cgea .SbHuffRDHeight ));if _bbcg !=nil {return 0,_c .Wrap (_bbcg ,_begdf ,"");};return _gaaee .Decode (_cgea ._aabb );};_bffg ,_cfdc :=_cgea ._effff .DecodeInt (_cgea ._agfg );
if _cfdc !=nil {return 0,_c .Wrap (_cfdc ,_begdf ,"");};return int64 (_bffg ),nil ;};func (_fdad *HalftoneRegion )GetPatterns ()([]*_f .Bitmap ,error ){var (_acb []*_f .Bitmap ;_eeab error ;);for _ ,_baegg :=range _fdad ._eeeg .RTSegments {var _eccg Segmenter ;
_eccg ,_eeab =_baegg .GetSegmentData ();if _eeab !=nil {_gc .Log .Debug ("\u0047e\u0074\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061 \u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025v",_eeab );return nil ,_eeab ;};_ddee ,_affa :=_eccg .(*PatternDictionary );
if !_affa {_eeab =_bg .Errorf ("\u0072e\u006c\u0061t\u0065\u0064\u0020\u0073e\u0067\u006d\u0065n\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0070at\u0074\u0065\u0072n\u0020\u0064i\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u003a \u0025\u0054",_eccg );
return nil ,_eeab ;};var _ggcb []*_f .Bitmap ;_ggcb ,_eeab =_ddee .GetDictionary ();if _eeab !=nil {_gc .Log .Debug ("\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_eeab );
return nil ,_eeab ;};_acb =append (_acb ,_ggcb ...);};return _acb ,nil ;};func (_fecba *SymbolDictionary )getUserTable (_gceee int )(_ae .Tabler ,error ){var _cgbf int ;for _ ,_agcb :=range _fecba .Header .RTSegments {if _agcb .Type ==53{if _cgbf ==_gceee {_gdcg ,_gfad :=_agcb .GetSegmentData ();
if _gfad !=nil {return nil ,_gfad ;};_gggc :=_gdcg .(_ae .BasicTabler );return _ae .NewEncodedTable (_gggc );};_cgbf ++;};};return nil ,nil ;};var (_ Regioner =&TextRegion {};_ Segmenter =&TextRegion {};);func (_fbgd *GenericRegion )writeGBAtPixels (_afee _gg .BinaryWriter )(_fgfe int ,_cfbc error ){const _acd ="\u0077r\u0069t\u0065\u0047\u0042\u0041\u0074\u0050\u0069\u0078\u0065\u006c\u0073";
if _fbgd .UseMMR {return 0,nil ;};_ecb :=1;if _fbgd .GBTemplate ==0{_ecb =4;}else if _fbgd .UseExtTemplates {_ecb =12;};if len (_fbgd .GBAtX )!=_ecb {return 0,_c .Errorf (_acd ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0058\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};if len (_fbgd .GBAtY )!=_ecb {return 0,_c .Errorf (_acd ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0059\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};for _gaa :=0;_gaa < _ecb ;_gaa ++{if _cfbc =_afee .WriteByte (byte (_fbgd .GBAtX [_gaa ]));_cfbc !=nil {return _fgfe ,_c .Wrap (_cfbc ,_acd ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0058");};_fgfe ++;if _cfbc =_afee .WriteByte (byte (_fbgd .GBAtY [_gaa ]));
_cfbc !=nil {return _fgfe ,_c .Wrap (_cfbc ,_acd ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0059");};_fgfe ++;};return _fgfe ,nil ;};func (_cdg *GenericRegion )copyLineAbove (_adb int )error {_edc :=_adb *_cdg .Bitmap .RowStride ;_bec :=_edc -_cdg .Bitmap .RowStride ;
for _eebf :=0;_eebf < _cdg .Bitmap .RowStride ;_eebf ++{_gcfd ,_acg :=_cdg .Bitmap .GetByte (_bec );if _acg !=nil {return _acg ;};_bec ++;if _acg =_cdg .Bitmap .SetByte (_edc ,_gcfd );_acg !=nil {return _acg ;};_edc ++;};return nil ;};func (_cedf *Header )readSegmentDataLength (_cgdf _gg .StreamReader )(_bcga error ){_cedf .SegmentDataLength ,_bcga =_cgdf .ReadBits (32);
if _bcga !=nil {return _bcga ;};_cedf .SegmentDataLength &=_g .MaxInt32 ;return nil ;};func (_fgbe *TextRegion )encodeSymbols (_cbcc _gg .BinaryWriter )(_dcgf int ,_afbc error ){const _baef ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
_dgde :=make ([]byte ,4);_e .BigEndian .PutUint32 (_dgde ,_fgbe .NumberOfSymbols );if _dcgf ,_afbc =_cbcc .Write (_dgde );_afbc !=nil {return _dcgf ,_c .Wrap (_afbc ,_baef ,"\u004e\u0075\u006dbe\u0072\u004f\u0066\u0053\u0079\u006d\u0062\u006f\u006c\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073");
};_cbef ,_afbc :=_f .NewClassedPoints (_fgbe ._gadbb ,_fgbe ._ebff );if _afbc !=nil {return 0,_c .Wrap (_afbc ,_baef ,"");};var _ebfe ,_ggbd int ;_aaabe :=_de .New ();_aaabe .Init ();if _afbc =_aaabe .EncodeInteger (_de .IADT ,0);_afbc !=nil {return _dcgf ,_c .Wrap (_afbc ,_baef ,"\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0020\u0044\u0054");
};_dacb ,_afbc :=_cbef .GroupByY ();if _afbc !=nil {return 0,_c .Wrap (_afbc ,_baef ,"");};for _ ,_eabfe :=range _dacb {_abagf :=int (_eabfe .YAtIndex (0));_ebag :=_abagf -_ebfe ;if _afbc =_aaabe .EncodeInteger (_de .IADT ,_ebag );_afbc !=nil {return _dcgf ,_c .Wrap (_afbc ,_baef ,"");
};var _bgag int ;for _faeb ,_bafc :=range _eabfe .IntSlice {switch _faeb {case 0:_dfce :=int (_eabfe .XAtIndex (_faeb ))-_ggbd ;if _afbc =_aaabe .EncodeInteger (_de .IAFS ,_dfce );_afbc !=nil {return _dcgf ,_c .Wrap (_afbc ,_baef ,"");};_ggbd +=_dfce ;
_bgag =_ggbd ;default:_fcaa :=int (_eabfe .XAtIndex (_faeb ))-_bgag ;if _afbc =_aaabe .EncodeInteger (_de .IADS ,_fcaa );_afbc !=nil {return _dcgf ,_c .Wrap (_afbc ,_baef ,"");};_bgag +=_fcaa ;};_gece ,_dacc :=_fgbe ._fffa .Get (_bafc );if _dacc !=nil {return _dcgf ,_c .Wrap (_dacc ,_baef ,"");
};_edgec ,_egeg :=_fgbe ._agce [_gece ];if !_egeg {_edgec ,_egeg =_fgbe ._bbdb [_gece ];if !_egeg {return _dcgf ,_c .Errorf (_baef ,"\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027\u0025d\u0027\u0020\u0069s\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064 \u0069\u006e\u0020\u0067\u006cob\u0061\u006c\u0020\u0061\u006e\u0064\u0020\u006c\u006f\u0063\u0061\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020\u006d\u0061\u0070",_gece );
};};if _dacc =_aaabe .EncodeIAID (_fgbe ._eeceb ,_edgec );_dacc !=nil {return _dcgf ,_c .Wrap (_dacc ,_baef ,"");};};if _afbc =_aaabe .EncodeOOB (_de .IADS );_afbc !=nil {return _dcgf ,_c .Wrap (_afbc ,_baef ,"");};};_aaabe .Final ();_ggffbc ,_afbc :=_aaabe .WriteTo (_cbcc );
if _afbc !=nil {return _dcgf ,_c .Wrap (_afbc ,_baef ,"");};_dcgf +=int (_ggffbc );return _dcgf ,nil ;};func (_dfb *SymbolDictionary )addSymbol (_adec Regioner )error {_fcba ,_beca :=_adec .GetRegionBitmap ();if _beca !=nil {return _beca ;};_dfb ._abdec [_dfb ._dcbc ]=_fcba ;
_dfb ._affgc =append (_dfb ._affgc ,_fcba );_gc .Log .Trace ("\u005b\u0053YM\u0042\u004f\u004c \u0044\u0049\u0043\u0054ION\u0041RY\u005d\u0020\u0041\u0064\u0064\u0065\u0064 s\u0079\u006d\u0062\u006f\u006c\u003a\u0020%\u0073",_fcba );return nil ;};func (_facc *TextRegion )InitEncode (globalSymbolsMap ,localSymbolsMap map[int ]int ,comps []int ,inLL *_f .Points ,symbols *_f .Bitmaps ,classIDs *_bd .IntSlice ,boxes *_f .Boxes ,width ,height ,symBits int ){_facc .RegionInfo =&RegionSegment {BitmapWidth :uint32 (width ),BitmapHeight :uint32 (height )};
_facc ._agce =globalSymbolsMap ;_facc ._bbdb =localSymbolsMap ;_facc ._ebff =comps ;_facc ._gadbb =inLL ;_facc ._dedb =symbols ;_facc ._fffa =classIDs ;_facc ._faee =boxes ;_facc ._eeceb =symBits ;};func (_efgg *Header )readDataStartOffset (_acag _gg .StreamReader ,_gfef OrganizationType ){if _gfef ==OSequential {_efgg .SegmentDataStartOffset =uint64 (_acag .StreamPosition ());
};};func (_cbcge *TextRegion )decodeRI ()(int64 ,error ){if !_cbcge .UseRefinement {return 0,nil ;};if _cbcge .IsHuffmanEncoded {_egda ,_dggdf :=_cbcge ._aabb .ReadBit ();return int64 (_egda ),_dggdf ;};_feff ,_bfbb :=_cbcge ._effff .DecodeInt (_cbcge ._cgdgf );
return int64 (_feff ),_bfbb ;};func (_caae *SymbolDictionary )readRefinementAtPixels (_eafb int )error {_caae .SdrATX =make ([]int8 ,_eafb );_caae .SdrATY =make ([]int8 ,_eafb );var (_cbfd byte ;_ggda error ;);for _gagf :=0;_gagf < _eafb ;_gagf ++{_cbfd ,_ggda =_caae ._gfff .ReadByte ();
if _ggda !=nil {return _ggda ;};_caae .SdrATX [_gagf ]=int8 (_cbfd );_cbfd ,_ggda =_caae ._gfff .ReadByte ();if _ggda !=nil {return _ggda ;};_caae .SdrATY [_gagf ]=int8 (_cbfd );};return nil ;};func (_ebe *template0 )setIndex (_gfa *_ab .DecoderStats ){_gfa .SetIndex (0x100)};
func (_abcdf *TextRegion )decodeDT ()(_cgg int64 ,_aedgd error ){if _abcdf .IsHuffmanEncoded {if _abcdf .SbHuffDT ==3{_cgg ,_aedgd =_abcdf ._ceed .Decode (_abcdf ._aabb );if _aedgd !=nil {return 0,_aedgd ;};}else {var _caab _ae .Tabler ;_caab ,_aedgd =_ae .GetStandardTable (11+int (_abcdf .SbHuffDT ));
if _aedgd !=nil {return 0,_aedgd ;};_cgg ,_aedgd =_caab .Decode (_abcdf ._aabb );if _aedgd !=nil {return 0,_aedgd ;};};}else {var _ceac int32 ;_ceac ,_aedgd =_abcdf ._effff .DecodeInt (_abcdf ._begg );if _aedgd !=nil {return ;};_cgg =int64 (_ceac );};_cgg *=int64 (_abcdf .SbStrips );
return _cgg ,nil ;};func (_gcee *SymbolDictionary )Init (h *Header ,r _gg .StreamReader )error {_gcee .Header =h ;_gcee ._gfff =r ;return _gcee .parseHeader ();};func (_dgee *SymbolDictionary )setSymbolsArray ()error {if _dgee ._adf ==nil {if _gccc :=_dgee .retrieveImportSymbols ();
_gccc !=nil {return _gccc ;};};if _dgee ._affgc ==nil {_dgee ._affgc =append (_dgee ._affgc ,_dgee ._adf ...);};return nil ;};func (_agec *SymbolDictionary )setCodingStatistics ()error {if _agec ._ega ==nil {_agec ._ega =_ab .NewStats (512,1);};if _agec ._eaae ==nil {_agec ._eaae =_ab .NewStats (512,1);
};if _agec ._gebc ==nil {_agec ._gebc =_ab .NewStats (512,1);};if _agec ._dffb ==nil {_agec ._dffb =_ab .NewStats (512,1);};if _agec ._afdg ==nil {_agec ._afdg =_ab .NewStats (512,1);};if _agec .UseRefinementAggregation &&_agec ._fbgeg ==nil {_agec ._fbgeg =_ab .NewStats (1<<uint (_agec ._eabg ),1);
_agec ._afeg =_ab .NewStats (512,1);_agec ._eegc =_ab .NewStats (512,1);};if _agec ._cfaf ==nil {_agec ._cfaf =_ab .NewStats (65536,1);};if _agec ._baegb ==nil {var _dbad error ;_agec ._baegb ,_dbad =_ab .New (_agec ._gfff );if _dbad !=nil {return _dbad ;
};};return nil ;};func (_dfea *GenericRegion )decodeTemplate0a (_eae ,_dec ,_gefb int ,_addg ,_dgg int )(_dge error ){const _gab ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0061";var (_acfa ,_gfac int ;_ege ,_ffc int ;
_gaba byte ;_ggc int ;);if _eae >=1{_gaba ,_dge =_dfea .Bitmap .GetByte (_dgg );if _dge !=nil {return _c .Wrap (_dge ,_gab ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_ege =int (_gaba );};if _eae >=2{_gaba ,_dge =_dfea .Bitmap .GetByte (_dgg -_dfea .Bitmap .RowStride );
if _dge !=nil {return _c .Wrap (_dge ,_gab ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_ffc =int (_gaba )<<6;};_acfa =(_ege &0xf0)|(_ffc &0x3800);for _fdac :=0;_fdac < _gefb ;_fdac =_ggc {var (_afgg byte ;_gaga int ;);_ggc =_fdac +8;if _cccd :=_dec -_fdac ;
_cccd > 8{_gaga =8;}else {_gaga =_cccd ;};if _eae > 0{_ege <<=8;if _ggc < _dec {_gaba ,_dge =_dfea .Bitmap .GetByte (_dgg +1);if _dge !=nil {return _c .Wrap (_dge ,_gab ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_ege |=int (_gaba );};};if _eae > 1{_afb :=_dgg -_dfea .Bitmap .RowStride +1;
_ffc <<=8;if _ggc < _dec {_gaba ,_dge =_dfea .Bitmap .GetByte (_afb );if _dge !=nil {return _c .Wrap (_dge ,_gab ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_ffc |=int (_gaba )<<6;}else {_ffc |=0;};};for _bcae :=0;_bcae < _gaga ;_bcae ++{_egg :=uint (7-_bcae );
if _dfea ._cccg {_gfac =_dfea .overrideAtTemplate0a (_acfa ,_fdac +_bcae ,_eae ,int (_afgg ),_bcae ,int (_egg ));_dfea ._eaac .SetIndex (int32 (_gfac ));}else {_dfea ._eaac .SetIndex (int32 (_acfa ));};var _aga int ;_aga ,_dge =_dfea ._eeg .DecodeBit (_dfea ._eaac );
if _dge !=nil {return _c .Wrap (_dge ,_gab ,"");};_afgg |=byte (_aga )<<_egg ;_acfa =((_acfa &0x7bf7)<<1)|_aga |((_ege >>_egg )&0x10)|((_ffc >>_egg )&0x800);};if _bgc :=_dfea .Bitmap .SetByte (_addg ,_afgg );_bgc !=nil {return _c .Wrap (_bgc ,_gab ,"");
};_addg ++;_dgg ++;};return nil ;};func (_bgcb *TextRegion )readRegionFlags ()error {var (_effd int ;_fafe uint64 ;_bege error ;);_effd ,_bege =_bgcb ._aabb .ReadBit ();if _bege !=nil {return _bege ;};_bgcb .SbrTemplate =int8 (_effd );_fafe ,_bege =_bgcb ._aabb .ReadBits (5);
if _bege !=nil {return _bege ;};_bgcb .SbDsOffset =int8 (_fafe );if _bgcb .SbDsOffset > 0x0f{_bgcb .SbDsOffset -=0x20;};_effd ,_bege =_bgcb ._aabb .ReadBit ();if _bege !=nil {return _bege ;};_bgcb .DefaultPixel =int8 (_effd );_fafe ,_bege =_bgcb ._aabb .ReadBits (2);
if _bege !=nil {return _bege ;};_bgcb .CombinationOperator =_f .CombinationOperator (int (_fafe )&0x3);_effd ,_bege =_bgcb ._aabb .ReadBit ();if _bege !=nil {return _bege ;};_bgcb .IsTransposed =int8 (_effd );_fafe ,_bege =_bgcb ._aabb .ReadBits (2);if _bege !=nil {return _bege ;
};_bgcb .ReferenceCorner =int16 (_fafe )&0x3;_fafe ,_bege =_bgcb ._aabb .ReadBits (2);if _bege !=nil {return _bege ;};_bgcb .LogSBStrips =int16 (_fafe )&0x3;_bgcb .SbStrips =1<<uint (_bgcb .LogSBStrips );_effd ,_bege =_bgcb ._aabb .ReadBit ();if _bege !=nil {return _bege ;
};if _effd ==1{_bgcb .UseRefinement =true ;};_effd ,_bege =_bgcb ._aabb .ReadBit ();if _bege !=nil {return _bege ;};if _effd ==1{_bgcb .IsHuffmanEncoded =true ;};return nil ;};func _cgeg (_cba int )int {if _cba ==0{return 0;};_cba |=_cba >>1;_cba |=_cba >>2;
_cba |=_cba >>4;_cba |=_cba >>8;_cba |=_cba >>16;return (_cba +1)>>1;};type Pager interface{GetSegment (int )(*Header ,error );GetBitmap ()(*_f .Bitmap ,error );};func (_ffdd *TextRegion )decodeID ()(int64 ,error ){if _ffdd .IsHuffmanEncoded {if _ffdd ._bafeb ==nil {_dcad ,_dgbc :=_ffdd ._aabb .ReadBits (byte (_ffdd ._gdaf ));
return int64 (_dcad ),_dgbc ;};return _ffdd ._bafeb .Decode (_ffdd ._aabb );};return _ffdd ._effff .DecodeIAID (uint64 (_ffdd ._gdaf ),_ffdd ._ccdd );};func (_fffe *GenericRefinementRegion )updateOverride ()error {if _fffe .GrAtX ==nil ||_fffe .GrAtY ==nil {return _ed .New ("\u0041\u0054\u0020\u0070\u0069\u0078\u0065\u006c\u0073\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");
};if len (_fffe .GrAtX )!=len (_fffe .GrAtY ){return _ed .New ("A\u0054\u0020\u0070\u0069xe\u006c \u0069\u006e\u0063\u006f\u006es\u0069\u0073\u0074\u0065\u006e\u0074");};_fffe ._dce =make ([]bool ,len (_fffe .GrAtX ));switch _fffe .TemplateID {case 0:if _fffe .GrAtX [0]!=-1&&_fffe .GrAtY [0]!=-1{_fffe ._dce [0]=true ;
_fffe ._dcb =true ;};if _fffe .GrAtX [1]!=-1&&_fffe .GrAtY [1]!=-1{_fffe ._dce [1]=true ;_fffe ._dcb =true ;};case 1:_fffe ._dcb =false ;};return nil ;};func (_afd *GenericRegion )InitEncode (bm *_f .Bitmap ,xLoc ,yLoc ,template int ,duplicateLineRemoval bool )error {const _aeba ="\u0047e\u006e\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069\u006f\u006e.\u0049\u006e\u0069\u0074\u0045\u006e\u0063\u006f\u0064\u0065";
if bm ==nil {return _c .Error (_aeba ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if xLoc < 0||yLoc < 0{return _c .Error (_aeba ,"\u0078\u0020\u0061\u006e\u0064\u0020\u0079\u0020\u006c\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074h\u0061\u006e\u0020\u0030");
};_afd .Bitmap =bm ;_afd .GBTemplate =byte (template );switch _afd .GBTemplate {case 0:_afd .GBAtX =[]int8 {3,-3,2,-2};_afd .GBAtY =[]int8 {-1,-1,-2,-2};case 1:_afd .GBAtX =[]int8 {3};_afd .GBAtY =[]int8 {-1};case 2,3:_afd .GBAtX =[]int8 {2};_afd .GBAtY =[]int8 {-1};
default:return _c .Errorf (_aeba ,"\u0070\u0072o\u0076\u0069\u0064\u0065\u0064 \u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u007b\u0030\u002c\u0031\u002c\u0032\u002c\u0033\u007d",template );
};_afd .RegionSegment =&RegionSegment {BitmapHeight :uint32 (bm .Height ),BitmapWidth :uint32 (bm .Width ),XLocation :uint32 (xLoc ),YLocation :uint32 (yLoc )};_afd .IsTPGDon =duplicateLineRemoval ;return nil ;};func (_gff *template0 )form (_faf ,_fef ,_efg ,_ecg ,_bef int16 )int16 {return (_faf <<10)|(_fef <<7)|(_efg <<4)|(_ecg <<1)|_bef ;
};func (_fcee *SymbolDictionary )GetDictionary ()([]*_f .Bitmap ,error ){_gc .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c-\u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){_gc .Log .Trace ("\u005b\u0053\u0059M\u0042\u004f\u004c\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
_gc .Log .Trace ("\u005b\u0053Y\u004d\u0042\u004f\u004c\u002dD\u0049\u0043\u0054\u0049\u004fN\u0041\u0052\u0059\u005d\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020\u000a\u0045\u0078\u003a\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u000a\u006e\u0065\u0077\u003a\u0027\u0025\u0073\u0027",_fcee ._bdcg ,_fcee ._abdec );
}();if _fcee ._bdcg ==nil {var _ceab error ;if _fcee .UseRefinementAggregation {_fcee ._eabg =_fcee .getSbSymCodeLen ();};if !_fcee .IsHuffmanEncoded {if _ceab =_fcee .setCodingStatistics ();_ceab !=nil {return nil ,_ceab ;};};_fcee ._abdec =make ([]*_f .Bitmap ,_fcee .NumberOfNewSymbols );
var _dfaga []int ;if _fcee .IsHuffmanEncoded &&!_fcee .UseRefinementAggregation {_dfaga =make ([]int ,_fcee .NumberOfNewSymbols );};if _ceab =_fcee .setSymbolsArray ();_ceab !=nil {return nil ,_ceab ;};var _cgega ,_gfcg int64 ;_fcee ._dcbc =0;for _fcee ._dcbc < _fcee .NumberOfNewSymbols {_gfcg ,_ceab =_fcee .decodeHeightClassDeltaHeight ();
if _ceab !=nil {return nil ,_ceab ;};_cgega +=_gfcg ;var _eag ,_bfafa uint32 ;_dccb :=int64 (_fcee ._dcbc );for {var _cbbc int64 ;_cbbc ,_ceab =_fcee .decodeDifferenceWidth ();if _ge .Is (_ceab ,_gf .ErrOOB ){break ;};if _ceab !=nil {return nil ,_ceab ;
};if _fcee ._dcbc >=_fcee .NumberOfNewSymbols {break ;};_eag +=uint32 (_cbbc );_bfafa +=_eag ;if !_fcee .IsHuffmanEncoded ||_fcee .UseRefinementAggregation {if !_fcee .UseRefinementAggregation {_ceab =_fcee .decodeDirectlyThroughGenericRegion (_eag ,uint32 (_cgega ));
if _ceab !=nil {return nil ,_ceab ;};}else {_ceab =_fcee .decodeAggregate (_eag ,uint32 (_cgega ));if _ceab !=nil {return nil ,_ceab ;};};}else if _fcee .IsHuffmanEncoded &&!_fcee .UseRefinementAggregation {_dfaga [_fcee ._dcbc ]=int (_eag );};_fcee ._dcbc ++;
};if _fcee .IsHuffmanEncoded &&!_fcee .UseRefinementAggregation {var _bfad int64 ;if _fcee .SdHuffBMSizeSelection ==0{var _ddbe _ae .Tabler ;_ddbe ,_ceab =_ae .GetStandardTable (1);if _ceab !=nil {return nil ,_ceab ;};_bfad ,_ceab =_ddbe .Decode (_fcee ._gfff );
if _ceab !=nil {return nil ,_ceab ;};}else {_bfad ,_ceab =_fcee .huffDecodeBmSize ();if _ceab !=nil {return nil ,_ceab ;};};_fcee ._gfff .Align ();var _gdegd *_f .Bitmap ;_gdegd ,_ceab =_fcee .decodeHeightClassCollectiveBitmap (_bfad ,uint32 (_cgega ),_bfafa );
if _ceab !=nil {return nil ,_ceab ;};_ceab =_fcee .decodeHeightClassBitmap (_gdegd ,_dccb ,int (_cgega ),_dfaga );if _ceab !=nil {return nil ,_ceab ;};};};_fdf ,_ceab :=_fcee .getToExportFlags ();if _ceab !=nil {return nil ,_ceab ;};_fcee .setExportedSymbols (_fdf );
};return _fcee ._bdcg ,nil ;};type templater interface{form (_begf ,_fe ,_bgea ,_eece ,_dag int16 )int16 ;setIndex (_geg *_ab .DecoderStats );};func (_eebd *PageInformationSegment )Encode (w _gg .BinaryWriter )(_aggd int ,_ebdd error ){const _acdg ="\u0050\u0061g\u0065\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u002e\u0045\u006eco\u0064\u0065";
_gea :=make ([]byte ,4);_e .BigEndian .PutUint32 (_gea ,uint32 (_eebd .PageBMWidth ));_aggd ,_ebdd =w .Write (_gea );if _ebdd !=nil {return _aggd ,_c .Wrap (_ebdd ,_acdg ,"\u0077\u0069\u0064t\u0068");};_e .BigEndian .PutUint32 (_gea ,uint32 (_eebd .PageBMHeight ));
var _egcd int ;_egcd ,_ebdd =w .Write (_gea );if _ebdd !=nil {return _egcd +_aggd ,_c .Wrap (_ebdd ,_acdg ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_aggd +=_egcd ;_e .BigEndian .PutUint32 (_gea ,uint32 (_eebd .ResolutionX ));_egcd ,_ebdd =w .Write (_gea );
if _ebdd !=nil {return _egcd +_aggd ,_c .Wrap (_ebdd ,_acdg ,"\u0078\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_aggd +=_egcd ;_e .BigEndian .PutUint32 (_gea ,uint32 (_eebd .ResolutionY ));if _egcd ,_ebdd =w .Write (_gea );_ebdd !=nil {return _egcd +_aggd ,_c .Wrap (_ebdd ,_acdg ,"\u0079\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");
};_aggd +=_egcd ;if _ebdd =_eebd .encodeFlags (w );_ebdd !=nil {return _aggd ,_c .Wrap (_ebdd ,_acdg ,"");};_aggd ++;if _egcd ,_ebdd =_eebd .encodeStripingInformation (w );_ebdd !=nil {return _aggd ,_c .Wrap (_ebdd ,_acdg ,"");};_aggd +=_egcd ;return _aggd ,nil ;
};func (_dfecc *TextRegion )encodeFlags (_gdbd _gg .BinaryWriter )(_fgbc int ,_acef error ){const _egbg ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _acef =_gdbd .WriteBit (int (_dfecc .SbrTemplate ));_acef !=nil {return _fgbc ,_c .Wrap (_acef ,_egbg ,"s\u0062\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");
};if _ ,_acef =_gdbd .WriteBits (uint64 (_dfecc .SbDsOffset ),5);_acef !=nil {return _fgbc ,_c .Wrap (_acef ,_egbg ,"\u0073\u0062\u0044\u0073\u004f\u0066\u0066\u0073\u0065\u0074");};if _acef =_gdbd .WriteBit (int (_dfecc .DefaultPixel ));_acef !=nil {return _fgbc ,_c .Wrap (_acef ,_egbg ,"\u0044\u0065\u0066a\u0075\u006c\u0074\u0050\u0069\u0078\u0065\u006c");
};if _ ,_acef =_gdbd .WriteBits (uint64 (_dfecc .CombinationOperator ),2);_acef !=nil {return _fgbc ,_c .Wrap (_acef ,_egbg ,"\u0043\u006f\u006d\u0062in\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072");};if _acef =_gdbd .WriteBit (int (_dfecc .IsTransposed ));
_acef !=nil {return _fgbc ,_c .Wrap (_acef ,_egbg ,"\u0069\u0073\u0020\u0074\u0072\u0061\u006e\u0073\u0070\u006f\u0073\u0065\u0064");};if _ ,_acef =_gdbd .WriteBits (uint64 (_dfecc .ReferenceCorner ),2);_acef !=nil {return _fgbc ,_c .Wrap (_acef ,_egbg ,"\u0072\u0065f\u0065\u0072\u0065n\u0063\u0065\u0020\u0063\u006f\u0072\u006e\u0065\u0072");
};if _ ,_acef =_gdbd .WriteBits (uint64 (_dfecc .LogSBStrips ),2);_acef !=nil {return _fgbc ,_c .Wrap (_acef ,_egbg ,"L\u006f\u0067\u0053\u0042\u0053\u0074\u0072\u0069\u0070\u0073");};var _fefe int ;if _dfecc .UseRefinement {_fefe =1;};if _acef =_gdbd .WriteBit (_fefe );
_acef !=nil {return _fgbc ,_c .Wrap (_acef ,_egbg ,"\u0075\u0073\u0065\u0020\u0072\u0065\u0066\u0069\u006ee\u006d\u0065\u006e\u0074");};_fefe =0;if _dfecc .IsHuffmanEncoded {_fefe =1;};if _acef =_gdbd .WriteBit (_fefe );_acef !=nil {return _fgbc ,_c .Wrap (_acef ,_egbg ,"u\u0073\u0065\u0020\u0068\u0075\u0066\u0066\u006d\u0061\u006e");
};_fgbc =2;return _fgbc ,nil ;};func (_fa *GenericRefinementRegion )getGrReference ()(*_f .Bitmap ,error ){segments :=_fa ._aeb .RTSegments ;if len (segments )==0{return nil ,_ed .New ("\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0065\u0078is\u0074\u0073");
};_agb ,_aa :=segments [0].GetSegmentData ();if _aa !=nil {return nil ,_aa ;};_ggd ,_bdd :=_agb .(Regioner );if !_bdd {return nil ,_bg .Errorf ("\u0072\u0065\u0066\u0065\u0072r\u0065\u0064\u0020\u0074\u006f\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_agb );
};return _ggd .GetRegionBitmap ();};func (_bagb *SymbolDictionary )decodeNewSymbols (_egdc ,_abcgg uint32 ,_abfd *_f .Bitmap ,_ceec ,_dfafe int32 )error {if _bagb ._acgg ==nil {_bagb ._acgg =_fbgg (_bagb ._gfff ,nil );if _bagb ._baegb ==nil {var _feef error ;
_bagb ._baegb ,_feef =_ab .New (_bagb ._gfff );if _feef !=nil {return _feef ;};};if _bagb ._cfaf ==nil {_bagb ._cfaf =_ab .NewStats (65536,1);};};_bagb ._acgg .setParameters (_bagb ._cfaf ,_bagb ._baegb ,_bagb .SdrTemplate ,_egdc ,_abcgg ,_abfd ,_ceec ,_dfafe ,false ,_bagb .SdrATX ,_bagb .SdrATY );
return _bagb .addSymbol (_bagb ._acgg );};func (_caefc *TableSegment )HtRS ()int32 {return _caefc ._efdf };func (_fed *GenericRegion )Encode (w _gg .BinaryWriter )(_dfag int ,_cgd error ){const _eea ="G\u0065n\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069o\u006e\u002e\u0045\u006eco\u0064\u0065";
if _fed .Bitmap ==nil {return 0,_c .Error (_eea ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};_ccgf ,_cgd :=_fed .RegionSegment .Encode (w );if _cgd !=nil {return 0,_c .Wrap (_cgd ,_eea ,"\u0052\u0065\u0067\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};_dfag +=_ccgf ;if _cgd =w .SkipBits (4);_cgd !=nil {return _dfag ,_c .Wrap (_cgd ,_eea ,"\u0073k\u0069p\u0020\u0072\u0065\u0073\u0065r\u0076\u0065d\u0020\u0062\u0069\u0074\u0073");};var _dfec int ;if _fed .IsTPGDon {_dfec =1;};if _cgd =w .WriteBit (_dfec );
_cgd !=nil {return _dfag ,_c .Wrap (_cgd ,_eea ,"\u0074\u0070\u0067\u0064\u006f\u006e");};_dfec =0;if _cgd =w .WriteBit (int (_fed .GBTemplate >>1)&0x01);_cgd !=nil {return _dfag ,_c .Wrap (_cgd ,_eea ,"f\u0069r\u0073\u0074\u0020\u0067\u0062\u0074\u0065\u006dp\u006c\u0061\u0074\u0065 b\u0069\u0074");
};if _cgd =w .WriteBit (int (_fed .GBTemplate )&0x01);_cgd !=nil {return _dfag ,_c .Wrap (_cgd ,_eea ,"s\u0065\u0063\u006f\u006ed \u0067b\u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u0062\u0069\u0074");};if _fed .UseMMR {_dfec =1;};if _cgd =w .WriteBit (_dfec );
_cgd !=nil {return _dfag ,_c .Wrap (_cgd ,_eea ,"u\u0073\u0065\u0020\u004d\u004d\u0052\u0020\u0062\u0069\u0074");};_dfag ++;if _ccgf ,_cgd =_fed .writeGBAtPixels (w );_cgd !=nil {return _dfag ,_c .Wrap (_cgd ,_eea ,"");};_dfag +=_ccgf ;_bfcb :=_de .New ();
if _cgd =_bfcb .EncodeBitmap (_fed .Bitmap ,_fed .IsTPGDon );_cgd !=nil {return _dfag ,_c .Wrap (_cgd ,_eea ,"");};_bfcb .Final ();var _bcaa int64 ;if _bcaa ,_cgd =_bfcb .WriteTo (w );_cgd !=nil {return _dfag ,_c .Wrap (_cgd ,_eea ,"");};_dfag +=int (_bcaa );
return _dfag ,nil ;};func (_bacb *GenericRegion )setParametersMMR (_abcg bool ,_fcb ,_fcda int64 ,_dadg ,_gade uint32 ,_dagf byte ,_bfcc ,_dbec bool ,_fgae ,_gegc []int8 ){_bacb .DataOffset =_fcb ;_bacb .DataLength =_fcda ;_bacb .RegionSegment =&RegionSegment {};
_bacb .RegionSegment .BitmapHeight =_dadg ;_bacb .RegionSegment .BitmapWidth =_gade ;_bacb .GBTemplate =_dagf ;_bacb .IsMMREncoded =_abcg ;_bacb .IsTPGDon =_bfcc ;_bacb .GBAtX =_fgae ;_bacb .GBAtY =_gegc ;};func (_afbgd *TextRegion )readUseRefinement ()error {if !_afbgd .UseRefinement ||_afbgd .SbrTemplate !=0{return nil ;
};var (_eegf byte ;_cfec error ;);_afbgd .SbrATX =make ([]int8 ,2);_afbgd .SbrATY =make ([]int8 ,2);_eegf ,_cfec =_afbgd ._aabb .ReadByte ();if _cfec !=nil {return _cfec ;};_afbgd .SbrATX [0]=int8 (_eegf );_eegf ,_cfec =_afbgd ._aabb .ReadByte ();if _cfec !=nil {return _cfec ;
};_afbgd .SbrATY [0]=int8 (_eegf );_eegf ,_cfec =_afbgd ._aabb .ReadByte ();if _cfec !=nil {return _cfec ;};_afbgd .SbrATX [1]=int8 (_eegf );_eegf ,_cfec =_afbgd ._aabb .ReadByte ();if _cfec !=nil {return _cfec ;};_afbgd .SbrATY [1]=int8 (_eegf );return nil ;
};func (_degb *TextRegion )setContexts (_fbab *_ab .DecoderStats ,_egfec *_ab .DecoderStats ,_bdcec *_ab .DecoderStats ,_fdce *_ab .DecoderStats ,_bccf *_ab .DecoderStats ,_gdgb *_ab .DecoderStats ,_cddd *_ab .DecoderStats ,_efebd *_ab .DecoderStats ,_dceb *_ab .DecoderStats ,_fbdff *_ab .DecoderStats ){_degb ._begg =_egfec ;
_degb ._fcg =_bdcec ;_degb ._dcfca =_fdce ;_degb ._dbcd =_bccf ;_degb ._febae =_cddd ;_degb ._agfg =_efebd ;_degb ._ccdd =_gdgb ;_degb ._beaf =_dceb ;_degb ._ageaa =_fbdff ;_degb ._ccff =_fbab ;};func (_cgdc *PatternDictionary )setGbAtPixels (){if _cgdc .HDTemplate ==0{_cgdc .GBAtX =make ([]int8 ,4);
_cgdc .GBAtY =make ([]int8 ,4);_cgdc .GBAtX [0]=-int8 (_cgdc .HdpWidth );_cgdc .GBAtY [0]=0;_cgdc .GBAtX [1]=-3;_cgdc .GBAtY [1]=-1;_cgdc .GBAtX [2]=2;_cgdc .GBAtY [2]=-2;_cgdc .GBAtX [3]=-2;_cgdc .GBAtY [3]=-2;}else {_cgdc .GBAtX =[]int8 {-int8 (_cgdc .HdpWidth )};
_cgdc .GBAtY =[]int8 {0};};};func (_aadd *GenericRefinementRegion )decodeTemplate (_bedb ,_gcc ,_gbg ,_dda ,_fff ,_ebcc ,_daf ,_gce ,_ccc ,_caf int ,_ggfg templater )(_eaa error ){var (_dfacc ,_dcea ,_dcf ,_eddd ,_bae int16 ;_gba ,_dga ,_eed ,_afg int ;
_dca byte ;);if _ccc >=1&&(_ccc -1)< _aadd .ReferenceBitmap .Height {_dca ,_eaa =_aadd .ReferenceBitmap .GetByte (_caf -_dda );if _eaa !=nil {return ;};_gba =int (_dca );};if _ccc >=0&&(_ccc )< _aadd .ReferenceBitmap .Height {_dca ,_eaa =_aadd .ReferenceBitmap .GetByte (_caf );
if _eaa !=nil {return ;};_dga =int (_dca );};if _ccc >=-1&&(_ccc +1)< _aadd .ReferenceBitmap .Height {_dca ,_eaa =_aadd .ReferenceBitmap .GetByte (_caf +_dda );if _eaa !=nil {return ;};_eed =int (_dca );};_caf ++;if _bedb >=1{_dca ,_eaa =_aadd .RegionBitmap .GetByte (_gce -_gbg );
if _eaa !=nil {return ;};_afg =int (_dca );};_gce ++;_aff :=_aadd .ReferenceDX %8;_ecc :=6+_aff ;_gcba :=_caf %_dda ;if _ecc >=0{if _ecc < 8{_dfacc =int16 (_gba >>uint (_ecc ))&0x07;};if _ecc < 8{_dcea =int16 (_dga >>uint (_ecc ))&0x07;};if _ecc < 8{_dcf =int16 (_eed >>uint (_ecc ))&0x07;
};if _ecc ==6&&_gcba > 1{if _ccc >=1&&(_ccc -1)< _aadd .ReferenceBitmap .Height {_dca ,_eaa =_aadd .ReferenceBitmap .GetByte (_caf -_dda -2);if _eaa !=nil {return _eaa ;};_dfacc |=int16 (_dca <<2)&0x04;};if _ccc >=0&&_ccc < _aadd .ReferenceBitmap .Height {_dca ,_eaa =_aadd .ReferenceBitmap .GetByte (_caf -2);
if _eaa !=nil {return _eaa ;};_dcea |=int16 (_dca <<2)&0x04;};if _ccc >=-1&&_ccc +1< _aadd .ReferenceBitmap .Height {_dca ,_eaa =_aadd .ReferenceBitmap .GetByte (_caf +_dda -2);if _eaa !=nil {return _eaa ;};_dcf |=int16 (_dca <<2)&0x04;};};if _ecc ==0{_gba =0;
_dga =0;_eed =0;if _gcba < _dda -1{if _ccc >=1&&_ccc -1< _aadd .ReferenceBitmap .Height {_dca ,_eaa =_aadd .ReferenceBitmap .GetByte (_caf -_dda );if _eaa !=nil {return _eaa ;};_gba =int (_dca );};if _ccc >=0&&_ccc < _aadd .ReferenceBitmap .Height {_dca ,_eaa =_aadd .ReferenceBitmap .GetByte (_caf );
if _eaa !=nil {return _eaa ;};_dga =int (_dca );};if _ccc >=-1&&_ccc +1< _aadd .ReferenceBitmap .Height {_dca ,_eaa =_aadd .ReferenceBitmap .GetByte (_caf +_dda );if _eaa !=nil {return _eaa ;};_eed =int (_dca );};};_caf ++;};}else {_dfacc =int16 (_gba <<1)&0x07;
_dcea =int16 (_dga <<1)&0x07;_dcf =int16 (_eed <<1)&0x07;_gba =0;_dga =0;_eed =0;if _gcba < _dda -1{if _ccc >=1&&_ccc -1< _aadd .ReferenceBitmap .Height {_dca ,_eaa =_aadd .ReferenceBitmap .GetByte (_caf -_dda );if _eaa !=nil {return _eaa ;};_gba =int (_dca );
};if _ccc >=0&&_ccc < _aadd .ReferenceBitmap .Height {_dca ,_eaa =_aadd .ReferenceBitmap .GetByte (_caf );if _eaa !=nil {return _eaa ;};_dga =int (_dca );};if _ccc >=-1&&_ccc +1< _aadd .ReferenceBitmap .Height {_dca ,_eaa =_aadd .ReferenceBitmap .GetByte (_caf +_dda );
if _eaa !=nil {return _eaa ;};_eed =int (_dca );};_caf ++;};_dfacc |=int16 ((_gba >>7)&0x07);_dcea |=int16 ((_dga >>7)&0x07);_dcf |=int16 ((_eed >>7)&0x07);};_eddd =int16 (_afg >>6);_bae =0;_gccd :=(2-_aff )%8;_gba <<=uint (_gccd );_dga <<=uint (_gccd );
_eed <<=uint (_gccd );_afg <<=2;var _cg int ;for _aebc :=0;_aebc < _gcc ;_aebc ++{_gfb :=_aebc &0x07;_caa :=_ggfg .form (_dfacc ,_dcea ,_dcf ,_eddd ,_bae );if _aadd ._dcb {_dca ,_eaa =_aadd .RegionBitmap .GetByte (_aadd .RegionBitmap .GetByteIndex (_aebc ,_bedb ));
if _eaa !=nil {return _eaa ;};_aadd ._ff .SetIndex (int32 (_aadd .overrideAtTemplate0 (int (_caa ),_aebc ,_bedb ,int (_dca ),_gfb )));}else {_aadd ._ff .SetIndex (int32 (_caa ));};_cg ,_eaa =_aadd ._gb .DecodeBit (_aadd ._ff );if _eaa !=nil {return _eaa ;
};if _eaa =_aadd .RegionBitmap .SetPixel (_aebc ,_bedb ,byte (_cg ));_eaa !=nil {return _eaa ;};_dfacc =((_dfacc <<1)|0x01&int16 (_gba >>7))&0x07;_dcea =((_dcea <<1)|0x01&int16 (_dga >>7))&0x07;_dcf =((_dcf <<1)|0x01&int16 (_eed >>7))&0x07;_eddd =((_eddd <<1)|0x01&int16 (_afg >>7))&0x07;
_bae =int16 (_cg );if (_aebc -int (_aadd .ReferenceDX ))%8==5{_gba =0;_dga =0;_eed =0;if ((_aebc -int (_aadd .ReferenceDX ))/8)+1< _aadd .ReferenceBitmap .RowStride {if _ccc >=1&&(_ccc -1)< _aadd .ReferenceBitmap .Height {_dca ,_eaa =_aadd .ReferenceBitmap .GetByte (_caf -_dda );
if _eaa !=nil {return _eaa ;};_gba =int (_dca );};if _ccc >=0&&_ccc < _aadd .ReferenceBitmap .Height {_dca ,_eaa =_aadd .ReferenceBitmap .GetByte (_caf );if _eaa !=nil {return _eaa ;};_dga =int (_dca );};if _ccc >=-1&&(_ccc +1)< _aadd .ReferenceBitmap .Height {_dca ,_eaa =_aadd .ReferenceBitmap .GetByte (_caf +_dda );
if _eaa !=nil {return _eaa ;};_eed =int (_dca );};};_caf ++;}else {_gba <<=1;_dga <<=1;_eed <<=1;};if _gfb ==5&&_bedb >=1{if ((_aebc >>3)+1)>=_aadd .RegionBitmap .RowStride {_afg =0;}else {_dca ,_eaa =_aadd .RegionBitmap .GetByte (_gce -_gbg );if _eaa !=nil {return _eaa ;
};_afg =int (_dca );};_gce ++;}else {_afg <<=1;};};return nil ;};const (ORandom OrganizationType =iota ;OSequential ;);func NewRegionSegment (r _gg .StreamReader )*RegionSegment {return &RegionSegment {_eefd :r }};type OrganizationType uint8 ;func (_dea *GenericRegion )GetRegionBitmap ()(_gagg *_f .Bitmap ,_abag error ){if _dea .Bitmap !=nil {return _dea .Bitmap ,nil ;
};if _dea .IsMMREncoded {if _dea ._ade ==nil {_dea ._ade ,_abag =_ag .New (_dea ._cfb ,int (_dea .RegionSegment .BitmapWidth ),int (_dea .RegionSegment .BitmapHeight ),_dea .DataOffset ,_dea .DataLength );if _abag !=nil {return nil ,_abag ;};};_dea .Bitmap ,_abag =_dea ._ade .UncompressMMR ();
return _dea .Bitmap ,_abag ;};if _abag =_dea .updateOverrideFlags ();_abag !=nil {return nil ,_abag ;};var _ebcf int ;if _dea ._eeg ==nil {_dea ._eeg ,_abag =_ab .New (_dea ._cfb );if _abag !=nil {return nil ,_abag ;};};if _dea ._eaac ==nil {_dea ._eaac =_ab .NewStats (65536,1);
};_dea .Bitmap =_f .New (int (_dea .RegionSegment .BitmapWidth ),int (_dea .RegionSegment .BitmapHeight ));_abbf :=int (uint32 (_dea .Bitmap .Width +7)&(^uint32 (7)));for _fbe :=0;_fbe < _dea .Bitmap .Height ;_fbe ++{if _dea .IsTPGDon {var _gffb int ;_gffb ,_abag =_dea .decodeSLTP ();
if _abag !=nil {return nil ,_abag ;};_ebcf ^=_gffb ;};if _ebcf ==1{if _fbe > 0{if _abag =_dea .copyLineAbove (_fbe );_abag !=nil {return nil ,_abag ;};};}else {if _abag =_dea .decodeLine (_fbe ,_dea .Bitmap .Width ,_abbf );_abag !=nil {return nil ,_abag ;
};};};return _dea .Bitmap ,nil ;};func (_gbbe *GenericRegion )getPixel (_eeee ,_dgef int )int8 {if _eeee < 0||_eeee >=_gbbe .Bitmap .Width {return 0;};if _dgef < 0||_dgef >=_gbbe .Bitmap .Height {return 0;};if _gbbe .Bitmap .GetPixel (_eeee ,_dgef ){return 1;
};return 0;};func (_ged *GenericRefinementRegion )overrideAtTemplate0 (_eeb ,_cdfa ,_gec ,_fce ,_dbc int )int {if _ged ._dce [0]{_eeb &=0xfff7;if _ged .GrAtY [0]==0&&int (_ged .GrAtX [0])>=-_dbc {_eeb |=(_fce >>uint (7-(_dbc +int (_ged .GrAtX [0])))&0x1)<<3;
}else {_eeb |=_ged .getPixel (_ged .RegionBitmap ,_cdfa +int (_ged .GrAtX [0]),_gec +int (_ged .GrAtY [0]))<<3;};};if _ged ._dce [1]{_eeb &=0xefff;if _ged .GrAtY [1]==0&&int (_ged .GrAtX [1])>=-_dbc {_eeb |=(_fce >>uint (7-(_dbc +int (_ged .GrAtX [1])))&0x1)<<12;
}else {_eeb |=_ged .getPixel (_ged .ReferenceBitmap ,_cdfa +int (_ged .GrAtX [1]),_gec +int (_ged .GrAtY [1]));};};return _eeb ;};func (_bbfg *GenericRefinementRegion )readAtPixels ()error {_bbfg .GrAtX =make ([]int8 ,2);_bbfg .GrAtY =make ([]int8 ,2);
_adcb ,_afe :=_bbfg ._df .ReadByte ();if _afe !=nil {return _afe ;};_bbfg .GrAtX [0]=int8 (_adcb );_adcb ,_afe =_bbfg ._df .ReadByte ();if _afe !=nil {return _afe ;};_bbfg .GrAtY [0]=int8 (_adcb );_adcb ,_afe =_bbfg ._df .ReadByte ();if _afe !=nil {return _afe ;
};_bbfg .GrAtX [1]=int8 (_adcb );_adcb ,_afe =_bbfg ._df .ReadByte ();if _afe !=nil {return _afe ;};_bbfg .GrAtY [1]=int8 (_adcb );return nil ;};func (_eba *PageInformationSegment )CombinationOperatorOverrideAllowed ()bool {return _eba ._ccag };func (_bgcf *PatternDictionary )readIsMMREncoded ()error {_bdca ,_bcca :=_bgcf ._bgedb .ReadBit ();
if _bcca !=nil {return _bcca ;};if _bdca !=0{_bgcf .IsMMREncoded =true ;};return nil ;};type GenericRegion struct{_cfb _gg .StreamReader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;
UseExtTemplates bool ;IsTPGDon bool ;GBTemplate byte ;IsMMREncoded bool ;UseMMR bool ;GBAtX []int8 ;GBAtY []int8 ;GBAtOverride []bool ;_cccg bool ;Bitmap *_f .Bitmap ;_eeg *_ab .Decoder ;_eaac *_ab .DecoderStats ;_ade *_ag .Decoder ;};func (_bge *GenericRefinementRegion )Init (header *Header ,r _gg .StreamReader )error {_bge ._aeb =header ;
_bge ._df =r ;_bge .RegionInfo =NewRegionSegment (r );return _bge .parseHeader ();};func (_bad *SymbolDictionary )decodeThroughTextRegion (_agca ,_gfcgf ,_bdec uint32 )error {if _bad ._gggd ==nil {_bad ._gggd =_ffddd (_bad ._gfff ,nil );_bad ._gggd .setContexts (_bad ._cfaf ,_ab .NewStats (512,1),_ab .NewStats (512,1),_ab .NewStats (512,1),_ab .NewStats (512,1),_bad ._fbgeg ,_ab .NewStats (512,1),_ab .NewStats (512,1),_ab .NewStats (512,1),_ab .NewStats (512,1));
};if _bede :=_bad .setSymbolsArray ();_bede !=nil {return _bede ;};_bad ._gggd .setParameters (_bad ._baegb ,_bad .IsHuffmanEncoded ,true ,_agca ,_gfcgf ,_bdec ,1,_bad ._gdae +_bad ._dcbc ,0,0,0,1,0,0,0,0,0,0,0,0,0,_bad .SdrTemplate ,_bad .SdrATX ,_bad .SdrATY ,_bad ._affgc ,_bad ._eabg );
return _bad .addSymbol (_bad ._gggd );};func (_cega *GenericRegion )decodeSLTP ()(int ,error ){switch _cega .GBTemplate {case 0:_cega ._eaac .SetIndex (0x9B25);case 1:_cega ._eaac .SetIndex (0x795);case 2:_cega ._eaac .SetIndex (0xE5);case 3:_cega ._eaac .SetIndex (0x195);
};return _cega ._eeg .DecodeBit (_cega ._eaac );};type TableSegment struct{_daaf _gg .StreamReader ;_adggd int32 ;_efbf int32 ;_efdf int32 ;_aafe int32 ;_gdda int32 ;};type EndOfStripe struct{_ga _gg .StreamReader ;_ad int ;};type GenericRefinementRegion struct{_gcd templater ;
_ba templater ;_df _gg .StreamReader ;_aeb *Header ;RegionInfo *RegionSegment ;IsTPGROn bool ;TemplateID int8 ;Template templater ;GrAtX []int8 ;GrAtY []int8 ;RegionBitmap *_f .Bitmap ;ReferenceBitmap *_f .Bitmap ;ReferenceDX int32 ;ReferenceDY int32 ;
_gb *_ab .Decoder ;_ff *_ab .DecoderStats ;_dcb bool ;_dce []bool ;};func (_dcbd *GenericRegion )String ()string {_acfc :=&_da .Builder {};_acfc .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_acfc .WriteString (_dcbd .RegionSegment .String ()+"\u000a");
_acfc .WriteString (_bg .Sprintf ("\u0009\u002d\u0020Us\u0065\u0045\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_dcbd .UseExtTemplates ));_acfc .WriteString (_bg .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0044\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_dcbd .IsTPGDon ));
_acfc .WriteString (_bg .Sprintf ("\u0009-\u0020G\u0042\u0054\u0065\u006d\u0070l\u0061\u0074e\u003a\u0020\u0025\u0064\u000a",_dcbd .GBTemplate ));_acfc .WriteString (_bg .Sprintf ("\t\u002d \u0049\u0073\u004d\u004d\u0052\u0045\u006e\u0063o\u0064\u0065\u0064\u003a %\u0076\u000a",_dcbd .IsMMREncoded ));
_acfc .WriteString (_bg .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_dcbd .GBAtX ));_acfc .WriteString (_bg .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_dcbd .GBAtY ));
_acfc .WriteString (_bg .Sprintf ("\t\u002d \u0047\u0042\u0041\u0074\u004f\u0076\u0065\u0072r\u0069\u0064\u0065\u003a %\u0076\u000a",_dcbd .GBAtOverride ));return _acfc .String ();};func (_fggg *TextRegion )decodeIb (_fba ,_bggd int64 )(*_f .Bitmap ,error ){const _afeb ="\u0064\u0065\u0063\u006f\u0064\u0065\u0049\u0062";
var (_deda error ;_egee *_f .Bitmap ;);if _fba ==0{if int (_bggd )> len (_fggg .Symbols )-1{return nil ,_c .Error (_afeb ,"\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0049\u0042\u0020\u0062\u0069\u0074\u006d\u0061\u0070\u002e\u0020\u0069\u006e\u0064\u0065x\u0020\u006f\u0075\u0074\u0020o\u0066\u0020r\u0061\u006e\u0067\u0065");
};return _fggg .Symbols [int (_bggd )],nil ;};var _dbfbd ,_ddbc ,_affe ,_fbbf int64 ;_dbfbd ,_deda =_fggg .decodeRdw ();if _deda !=nil {return nil ,_c .Wrap (_deda ,_afeb ,"");};_ddbc ,_deda =_fggg .decodeRdh ();if _deda !=nil {return nil ,_c .Wrap (_deda ,_afeb ,"");
};_affe ,_deda =_fggg .decodeRdx ();if _deda !=nil {return nil ,_c .Wrap (_deda ,_afeb ,"");};_fbbf ,_deda =_fggg .decodeRdy ();if _deda !=nil {return nil ,_c .Wrap (_deda ,_afeb ,"");};if _fggg .IsHuffmanEncoded {if _ ,_deda =_fggg .decodeSymInRefSize ();
_deda !=nil {return nil ,_c .Wrap (_deda ,_afeb ,"");};_fggg ._aabb .Align ();};_ffge :=_fggg .Symbols [_bggd ];_fdgbd :=uint32 (_ffge .Width );_cgdge :=uint32 (_ffge .Height );_fabf :=int32 (uint32 (_dbfbd )>>1)+int32 (_affe );_ebbb :=int32 (uint32 (_ddbc )>>1)+int32 (_fbbf );
if _fggg ._gaae ==nil {_fggg ._gaae =_fbgg (_fggg ._aabb ,nil );};_fggg ._gaae .setParameters (_fggg ._ccff ,_fggg ._effff ,_fggg .SbrTemplate ,_fdgbd +uint32 (_dbfbd ),_cgdge +uint32 (_ddbc ),_ffge ,_fabf ,_ebbb ,false ,_fggg .SbrATX ,_fggg .SbrATY );
_egee ,_deda =_fggg ._gaae .GetRegionBitmap ();if _deda !=nil {return nil ,_c .Wrap (_deda ,_afeb ,"\u0067\u0072\u0066");};if _fggg .IsHuffmanEncoded {_fggg ._aabb .Align ();};return _egee ,nil ;};func (_bdae *SymbolDictionary )String ()string {_egdb :=&_da .Builder {};
_egdb .WriteString ("\n\u005b\u0053\u0059\u004dBO\u004c-\u0044\u0049\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u000a");_egdb .WriteString (_bg .Sprintf ("\u0009-\u0020S\u0064\u0072\u0054\u0065\u006dp\u006c\u0061t\u0065\u0020\u0025\u0076\u000a",_bdae .SdrTemplate ));
_egdb .WriteString (_bg .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0025\u0076\u000a",_bdae .SdTemplate ));_egdb .WriteString (_bg .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006eg\u0043\u006f\u006e\u0074\u0065\u0078\u0074R\u0065\u0074\u0061\u0069\u006e\u0065\u0064\u0020\u0025\u0076\u000a",_bdae ._bdag ));
_egdb .WriteString (_bg .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074\u0065\u0078\u0074\u0055\u0073\u0065\u0064 \u0025\u0076\u000a",_bdae ._gdgf ));_egdb .WriteString (_bg .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_bdae .SdHuffAggInstanceSelection ));
_egdb .WriteString (_bg .Sprintf ("\u0009\u002d\u0020\u0053d\u0048\u0075\u0066\u0066\u0042\u004d\u0053\u0069\u007a\u0065S\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020%\u0076\u000a",_bdae .SdHuffBMSizeSelection ));_egdb .WriteString (_bg .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_bdae .SdHuffDecodeWidthSelection ));
_egdb .WriteString (_bg .Sprintf ("\u0009\u002d\u0020Sd\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064e\u0048e\u0069g\u0068t\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_bdae .SdHuffDecodeHeightSelection ));_egdb .WriteString (_bg .Sprintf ("\u0009\u002d\u0020U\u0073\u0065\u0052\u0065f\u0069\u006e\u0065\u006d\u0065\u006e\u0074A\u0067\u0067\u0072\u0065\u0067\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_bdae .UseRefinementAggregation ));
_egdb .WriteString (_bg .Sprintf ("\u0009\u002d\u0020is\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045\u006e\u0063\u006f\u0064\u0065\u0064\u0020\u0025\u0076\u000a",_bdae .IsHuffmanEncoded ));_egdb .WriteString (_bg .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_bdae .SdATX ));
_egdb .WriteString (_bg .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_bdae .SdATY ));_egdb .WriteString (_bg .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_bdae .SdrATX ));
_egdb .WriteString (_bg .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_bdae .SdrATY ));_egdb .WriteString (_bg .Sprintf ("\u0009\u002d\u0020\u004e\u0075\u006d\u0062\u0065\u0072\u004ff\u0045\u0078\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_bdae .NumberOfExportedSymbols ));
_egdb .WriteString (_bg .Sprintf ("\u0009-\u0020\u004e\u0075\u006db\u0065\u0072\u004f\u0066\u004ee\u0077S\u0079m\u0062\u006f\u006c\u0073\u0020\u0025\u0076\n",_bdae .NumberOfNewSymbols ));_egdb .WriteString (_bg .Sprintf ("\u0009\u002d\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u004ff\u0049\u006d\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_bdae ._gdae ));
_egdb .WriteString (_bg .Sprintf ("\u0009\u002d \u006e\u0075\u006d\u0062\u0065\u0072\u004f\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0064\u0053\u0079\u006d\u0062\u006f\u006c\u0073 %\u0076\u000a",_bdae ._dcbc ));return _egdb .String ();};func (_dace *TextRegion )String ()string {_dgbfba :=&_da .Builder {};
_dgbfba .WriteString ("\u000a[\u0054E\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u000a");_dgbfba .WriteString (_dace .RegionInfo .String ()+"\u000a");_dgbfba .WriteString (_bg .Sprintf ("\u0009\u002d\u0020\u0053br\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0025\u0076\u000a",_dace .SbrTemplate ));
_dgbfba .WriteString (_bg .Sprintf ("\u0009-\u0020S\u0062\u0044\u0073\u004f\u0066f\u0073\u0065t\u003a\u0020\u0025\u0076\u000a",_dace .SbDsOffset ));_dgbfba .WriteString (_bg .Sprintf ("\t\u002d \u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0050i\u0078\u0065\u006c\u003a %\u0076\u000a",_dace .DefaultPixel ));
_dgbfba .WriteString (_bg .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0076\u000a",_dace .CombinationOperator ));_dgbfba .WriteString (_bg .Sprintf ("\t\u002d \u0049\u0073\u0054\u0072\u0061\u006e\u0073\u0070o\u0073\u0065\u0064\u003a %\u0076\u000a",_dace .IsTransposed ));
_dgbfba .WriteString (_bg .Sprintf ("\u0009\u002d\u0020Re\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0043\u006f\u0072\u006e\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_dace .ReferenceCorner ));_dgbfba .WriteString (_bg .Sprintf ("\t\u002d\u0020\u0055\u0073eR\u0065f\u0069\u006e\u0065\u006d\u0065n\u0074\u003a\u0020\u0025\u0076\u000a",_dace .UseRefinement ));
_dgbfba .WriteString (_bg .Sprintf ("\u0009-\u0020\u0049\u0073\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045n\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0076\u000a",_dace .IsHuffmanEncoded ));if _dace .IsHuffmanEncoded {_dgbfba .WriteString (_bg .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_dace .SbHuffRSize ));
_dgbfba .WriteString (_bg .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0059:\u0020\u0025\u0076\u000a",_dace .SbHuffRDY ));_dgbfba .WriteString (_bg .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0058:\u0020\u0025\u0076\u000a",_dace .SbHuffRDX ));
_dgbfba .WriteString (_bg .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069\u0067\u0068\u0074\u003a\u0020\u0025v\u000a",_dace .SbHuffRDHeight ));_dgbfba .WriteString (_bg .Sprintf ("\t\u002d\u0020\u0053\u0062Hu\u0066f\u0052\u0044\u0057\u0069\u0064t\u0068\u003a\u0020\u0025\u0076\u000a",_dace .SbHuffRDWidth ));
_dgbfba .WriteString (_bg .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0054\u003a\u0020\u0025\u0076\u000a",_dace .SbHuffDT ));_dgbfba .WriteString (_bg .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0053\u003a\u0020\u0025\u0076\u000a",_dace .SbHuffDS ));
_dgbfba .WriteString (_bg .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0046\u0053\u003a\u0020\u0025\u0076\u000a",_dace .SbHuffFS ));};_dgbfba .WriteString (_bg .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_dace .SbrATX ));
_dgbfba .WriteString (_bg .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0059:\u0020\u0025\u0076\u000a",_dace .SbrATY ));_dgbfba .WriteString (_bg .Sprintf ("\u0009\u002d\u0020N\u0075\u006d\u0062\u0065r\u004f\u0066\u0053\u0079\u006d\u0062\u006fl\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_dace .NumberOfSymbolInstances ));
_dgbfba .WriteString (_bg .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_dace .SbrATX ));return _dgbfba .String ();};func (_baec *PageInformationSegment )checkInput ()error {if _baec .PageBMHeight ==_g .MaxInt32 {if !_baec .IsStripe {_gc .Log .Debug ("P\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0053\u0065\u0067me\u006e\u0074\u002e\u0049s\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0073\u0068ou\u006c\u0064 \u0062\u0065\u0020\u0074\u0072\u0075\u0065\u002e");
};};return nil ;};func (_fdaca *PageInformationSegment )readContainsRefinement ()error {_bcdg ,_abfe :=_fdaca ._abee .ReadBit ();if _abfe !=nil {return _abfe ;};if _bcdg ==1{_fdaca ._bafb =true ;};return nil ;};type Segmenter interface{Init (_cfcg *Header ,_begb _gg .StreamReader )error ;
};func (_fabdg *Header )writeSegmentPageAssociation (_eff _gg .BinaryWriter )(_gdfg int ,_gdg error ){const _acgd ="w\u0072\u0069\u0074\u0065\u0053\u0065g\u006d\u0065\u006e\u0074\u0050\u0061\u0067\u0065\u0041s\u0073\u006f\u0063i\u0061t\u0069\u006f\u006e";
if _fabdg .pageSize ()!=4{if _gdg =_eff .WriteByte (byte (_fabdg .PageAssociation ));_gdg !=nil {return 0,_c .Wrap (_gdg ,_acgd ,"\u0070\u0061\u0067\u0065\u0053\u0069\u007a\u0065\u0020\u0021\u003d\u0020\u0034");};return 1,nil ;};_gdfb :=make ([]byte ,4);
_e .BigEndian .PutUint32 (_gdfb ,uint32 (_fabdg .PageAssociation ));if _gdfg ,_gdg =_eff .Write (_gdfb );_gdg !=nil {return 0,_c .Wrap (_gdg ,_acgd ,"\u0034 \u0062y\u0074\u0065\u0020\u0070\u0061g\u0065\u0020n\u0075\u006d\u0062\u0065\u0072");};return _gdfg ,nil ;
};type Header struct{SegmentNumber uint32 ;Type Type ;RetainFlag bool ;PageAssociation int ;PageAssociationFieldSize bool ;RTSegments []*Header ;HeaderLength int64 ;SegmentDataLength uint64 ;SegmentDataStartOffset uint64 ;Reader _gg .StreamReader ;SegmentData Segmenter ;
RTSNumbers []int ;RetainBits []uint8 ;};func (_egd *Header )readNumberOfReferredToSegments (_ecdb _gg .StreamReader )(uint64 ,error ){const _efbd ="\u0072\u0065\u0061\u0064\u004e\u0075\u006d\u0062\u0065\u0072O\u0066\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
_bbb ,_beff :=_ecdb .ReadBits (3);if _beff !=nil {return 0,_c .Wrap (_beff ,_efbd ,"\u0063\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0072\u0074\u0073");};_bbb &=0xf;var _caaf []byte ;if _bbb <=4{_caaf =make ([]byte ,5);for _efec :=0;_efec <=4;_efec ++{_ebg ,_fcf :=_ecdb .ReadBit ();
if _fcf !=nil {return 0,_c .Wrap (_fcf ,_efbd ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_caaf [_efec ]=byte (_ebg );};}else {_bbb ,_beff =_ecdb .ReadBits (29);if _beff !=nil {return 0,_beff ;};_bbb &=_g .MaxInt32 ;_acbb :=(_bbb +8)>>3;
_acbb <<=3;_caaf =make ([]byte ,_acbb );var _fdec uint64 ;for _fdec =0;_fdec < _acbb ;_fdec ++{_deg ,_fdc :=_ecdb .ReadBit ();if _fdc !=nil {return 0,_c .Wrap (_fdc ,_efbd ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_caaf [_fdec ]=byte (_deg );
};};return _bbb ,nil ;};func (_cfdf *SymbolDictionary )encodeSymbols (_babd _gg .BinaryWriter )(_debff int ,_bcbb error ){const _ebge ="\u0065\u006e\u0063o\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c";_baegd :=_de .New ();_baegd .Init ();_gaaa ,_bcbb :=_cfdf ._bde .SelectByIndexes (_cfdf ._eaaa );
if _bcbb !=nil {return 0,_c .Wrap (_bcbb ,_ebge ,"\u0069n\u0069\u0074\u0069\u0061\u006c");};_gebd :=map[*_f .Bitmap ]int {};for _acfgd ,_ceeae :=range _gaaa .Values {_gebd [_ceeae ]=_acfgd ;};_gaaa .SortByHeight ();var _dbcaa ,_fgda int ;_cfda ,_bcbb :=_gaaa .GroupByHeight ();
if _bcbb !=nil {return 0,_c .Wrap (_bcbb ,_ebge ,"");};for _ ,_ddabc :=range _cfda .Values {_dbdg :=_ddabc .Values [0].Height ;_gfcee :=_dbdg -_dbcaa ;if _bcbb =_baegd .EncodeInteger (_de .IADH ,_gfcee );_bcbb !=nil {return 0,_c .Wrapf (_bcbb ,_ebge ,"\u0049\u0041\u0044\u0048\u0020\u0066\u006f\u0072\u0020\u0064\u0068\u003a \u0027\u0025\u0064\u0027",_gfcee );
};_dbcaa =_dbdg ;_fcdc ,_defa :=_ddabc .GroupByWidth ();if _defa !=nil {return 0,_c .Wrapf (_defa ,_ebge ,"\u0068\u0065\u0069g\u0068\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_dbdg );};var _gfag int ;for _ ,_agfe :=range _fcdc .Values {for _ ,_aggg :=range _agfe .Values {_dfcd :=_aggg .Width ;
_aacg :=_dfcd -_gfag ;if _defa =_baegd .EncodeInteger (_de .IADW ,_aacg );_defa !=nil {return 0,_c .Wrapf (_defa ,_ebge ,"\u0049\u0041\u0044\u0057\u0020\u0066\u006f\u0072\u0020\u0064\u0077\u003a \u0027\u0025\u0064\u0027",_aacg );};_gfag +=_aacg ;if _defa =_baegd .EncodeBitmap (_aggg ,false );
_defa !=nil {return 0,_c .Wrapf (_defa ,_ebge ,"H\u0065i\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u0020W\u0069\u0064\u0074\u0068: \u0025\u0064",_dbdg ,_dfcd );};_befb :=_gebd [_aggg ];_cfdf ._bdge [_befb ]=_fgda ;_fgda ++;};};if _defa =_baegd .EncodeOOB (_de .IADW );
_defa !=nil {return 0,_c .Wrap (_defa ,_ebge ,"\u0049\u0041\u0044\u0057");};};if _bcbb =_baegd .EncodeInteger (_de .IAEX ,0);_bcbb !=nil {return 0,_c .Wrap (_bcbb ,_ebge ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};if _bcbb =_baegd .EncodeInteger (_de .IAEX ,len (_cfdf ._eaaa ));_bcbb !=nil {return 0,_c .Wrap (_bcbb ,_ebge ,"\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0073\u0079m\u0062\u006f\u006c\u0073");};_baegd .Final ();_dceaa ,_bcbb :=_baegd .WriteTo (_babd );
if _bcbb !=nil {return 0,_c .Wrap (_bcbb ,_ebge ,"\u0077\u0072i\u0074\u0069\u006e\u0067 \u0065\u006ec\u006f\u0064\u0065\u0072\u0020\u0063\u006f\u006et\u0065\u0078\u0074\u0020\u0074\u006f\u0020\u0027\u0077\u0027\u0020\u0077r\u0069\u0074\u0065\u0072");};
return int (_dceaa ),nil ;};func (_fdca *Header )writeSegmentNumber (_deag _gg .BinaryWriter )(_efca int ,_bfeg error ){_cgef :=make ([]byte ,4);_e .BigEndian .PutUint32 (_cgef ,_fdca .SegmentNumber );if _efca ,_bfeg =_deag .Write (_cgef );_bfeg !=nil {return 0,_c .Wrap (_bfeg ,"\u0048e\u0061\u0064\u0065\u0072.\u0077\u0072\u0069\u0074\u0065S\u0065g\u006de\u006e\u0074\u004e\u0075\u006d\u0062\u0065r","");
};return _efca ,nil ;};func (_gbgg *Header )writeFlags (_bccd _gg .BinaryWriter )(_dafb error ){const _gcdbd ="\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065F\u006c\u0061\u0067\u0073";_cdcd :=byte (_gbgg .Type );if _dafb =_bccd .WriteByte (_cdcd );
_dafb !=nil {return _c .Wrap (_dafb ,_gcdbd ,"\u0077\u0072\u0069ti\u006e\u0067\u0020\u0073\u0065\u0067\u006d\u0065\u006et\u0020t\u0079p\u0065 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064");};if !_gbgg .RetainFlag &&!_gbgg .PageAssociationFieldSize {return nil ;
};if _dafb =_bccd .SkipBits (-8);_dafb !=nil {return _c .Wrap (_dafb ,_gcdbd ,"\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0062\u0061\u0063\u006b\u0020\u0074\u0068\u0065\u0020\u0062\u0069\u0074\u0073\u0020\u0066\u0061il\u0065\u0064");};var _fcaga int ;
if _gbgg .RetainFlag {_fcaga =1;};if _dafb =_bccd .WriteBit (_fcaga );_dafb !=nil {return _c .Wrap (_dafb ,_gcdbd ,"\u0072\u0065\u0074\u0061in\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067\u0073");};_fcaga =0;if _gbgg .PageAssociationFieldSize {_fcaga =1;
};if _dafb =_bccd .WriteBit (_fcaga );_dafb !=nil {return _c .Wrap (_dafb ,_gcdbd ,"p\u0061\u0067\u0065\u0020as\u0073o\u0063\u0069\u0061\u0074\u0069o\u006e\u0020\u0066\u006c\u0061\u0067");};_bccd .FinishByte ();return nil ;};func (_cdcf *PatternDictionary )extractPatterns (_ace *_f .Bitmap )error {var _bacd int ;
_gbgf :=make ([]*_f .Bitmap ,_cdcf .GrayMax +1);for _bacd <=int (_cdcf .GrayMax ){_dcaa :=int (_cdcf .HdpWidth )*_bacd ;_cbc :=_ac .Rect (_dcaa ,0,_dcaa +int (_cdcf .HdpWidth ),int (_cdcf .HdpHeight ));_ebccb ,_egde :=_f .Extract (_cbc ,_ace );if _egde !=nil {return _egde ;
};_gbgf [_bacd ]=_ebccb ;_bacd ++;};_cdcf .Patterns =_gbgf ;return nil ;};func (_ffg *GenericRegion )setOverrideFlag (_aag int ){_ffg .GBAtOverride [_aag ]=true ;_ffg ._cccg =true ;};func (_adcf *GenericRegion )decodeTemplate0b (_bdgc ,_ccaa ,_affb int ,_dede ,_gdb int )(_aedc error ){const _cfe ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0062";
var (_bedg ,_bce int ;_ecga ,_dgb int ;_gacb byte ;_ead int ;);if _bdgc >=1{_gacb ,_aedc =_adcf .Bitmap .GetByte (_gdb );if _aedc !=nil {return _c .Wrap (_aedc ,_cfe ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_ecga =int (_gacb );};if _bdgc >=2{_gacb ,_aedc =_adcf .Bitmap .GetByte (_gdb -_adcf .Bitmap .RowStride );
if _aedc !=nil {return _c .Wrap (_aedc ,_cfe ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_dgb =int (_gacb )<<6;};_bedg =(_ecga &0xf0)|(_dgb &0x3800);for _dbd :=0;_dbd < _affb ;_dbd =_ead {var (_dcc byte ;_deec int ;);_ead =_dbd +8;if _ggcd :=_ccaa -_dbd ;
_ggcd > 8{_deec =8;}else {_deec =_ggcd ;};if _bdgc > 0{_ecga <<=8;if _ead < _ccaa {_gacb ,_aedc =_adcf .Bitmap .GetByte (_gdb +1);if _aedc !=nil {return _c .Wrap (_aedc ,_cfe ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_ecga |=int (_gacb );};
};if _bdgc > 1{_dgb <<=8;if _ead < _ccaa {_gacb ,_aedc =_adcf .Bitmap .GetByte (_gdb -_adcf .Bitmap .RowStride +1);if _aedc !=nil {return _c .Wrap (_aedc ,_cfe ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_dgb |=int (_gacb )<<6;};};for _ecge :=0;
_ecge < _deec ;_ecge ++{_aaab :=uint (7-_ecge );if _adcf ._cccg {_bce =_adcf .overrideAtTemplate0b (_bedg ,_dbd +_ecge ,_bdgc ,int (_dcc ),_ecge ,int (_aaab ));_adcf ._eaac .SetIndex (int32 (_bce ));}else {_adcf ._eaac .SetIndex (int32 (_bedg ));};var _cdfg int ;
_cdfg ,_aedc =_adcf ._eeg .DecodeBit (_adcf ._eaac );if _aedc !=nil {return _c .Wrap (_aedc ,_cfe ,"");};_dcc |=byte (_cdfg <<_aaab );_bedg =((_bedg &0x7bf7)<<1)|_cdfg |((_ecga >>_aaab )&0x10)|((_dgb >>_aaab )&0x800);};if _gbe :=_adcf .Bitmap .SetByte (_dede ,_dcc );
_gbe !=nil {return _c .Wrap (_gbe ,_cfe ,"");};_dede ++;_gdb ++;};return nil ;};func (_ebddd *SymbolDictionary )setRetainedCodingContexts (_gbec *SymbolDictionary ){_ebddd ._baegb =_gbec ._baegb ;_ebddd .IsHuffmanEncoded =_gbec .IsHuffmanEncoded ;_ebddd .UseRefinementAggregation =_gbec .UseRefinementAggregation ;
_ebddd .SdTemplate =_gbec .SdTemplate ;_ebddd .SdrTemplate =_gbec .SdrTemplate ;_ebddd .SdATX =_gbec .SdATX ;_ebddd .SdATY =_gbec .SdATY ;_ebddd .SdrATX =_gbec .SdrATX ;_ebddd .SdrATY =_gbec .SdrATY ;_ebddd ._cfaf =_gbec ._cfaf ;};func (_adbg *SymbolDictionary )readRegionFlags ()error {var (_efcf uint64 ;
_dae int ;);_ ,_becc :=_adbg ._gfff .ReadBits (3);if _becc !=nil {return _becc ;};_dae ,_becc =_adbg ._gfff .ReadBit ();if _becc !=nil {return _becc ;};_adbg .SdrTemplate =int8 (_dae );_efcf ,_becc =_adbg ._gfff .ReadBits (2);if _becc !=nil {return _becc ;
};_adbg .SdTemplate =int8 (_efcf &0xf);_dae ,_becc =_adbg ._gfff .ReadBit ();if _becc !=nil {return _becc ;};if _dae ==1{_adbg ._bdag =true ;};_dae ,_becc =_adbg ._gfff .ReadBit ();if _becc !=nil {return _becc ;};if _dae ==1{_adbg ._gdgf =true ;};_dae ,_becc =_adbg ._gfff .ReadBit ();
if _becc !=nil {return _becc ;};if _dae ==1{_adbg .SdHuffAggInstanceSelection =true ;};_dae ,_becc =_adbg ._gfff .ReadBit ();if _becc !=nil {return _becc ;};_adbg .SdHuffBMSizeSelection =int8 (_dae );_efcf ,_becc =_adbg ._gfff .ReadBits (2);if _becc !=nil {return _becc ;
};_adbg .SdHuffDecodeWidthSelection =int8 (_efcf &0xf);_efcf ,_becc =_adbg ._gfff .ReadBits (2);if _becc !=nil {return _becc ;};_adbg .SdHuffDecodeHeightSelection =int8 (_efcf &0xf);_dae ,_becc =_adbg ._gfff .ReadBit ();if _becc !=nil {return _becc ;};
if _dae ==1{_adbg .UseRefinementAggregation =true ;};_dae ,_becc =_adbg ._gfff .ReadBit ();if _becc !=nil {return _becc ;};if _dae ==1{_adbg .IsHuffmanEncoded =true ;};return nil ;};func (_gfdg *TableSegment )HtOOB ()int32 {return _gfdg ._adggd };func (_cbd *template1 )form (_fddf ,_gca ,_cbf ,_ccb ,_bbff int16 )int16 {return ((_fddf &0x02)<<8)|(_gca <<6)|((_cbf &0x03)<<4)|(_ccb <<1)|_bbff ;
};func (_agdb *SymbolDictionary )retrieveImportSymbols ()error {for _ ,_egcg :=range _agdb .Header .RTSegments {if _egcg .Type ==0{_dfd ,_faa :=_egcg .GetSegmentData ();if _faa !=nil {return _faa ;};_adgd ,_bfgg :=_dfd .(*SymbolDictionary );if !_bfgg {return _bg .Errorf ("\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0044\u0061\u0074a\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u003a\u0020%\u0054",_dfd );
};_baa ,_faa :=_adgd .GetDictionary ();if _faa !=nil {return _bg .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064 \u0073\u0065\u0067m\u0065\u006e\u0074 \u0077\u0069t\u0068\u0020\u0069\u006e\u0064\u0065x\u003a %\u0064\u0020\u0067\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0073",_egcg .SegmentNumber ,_faa .Error ());
};_agdb ._adf =append (_agdb ._adf ,_baa ...);_agdb ._gdae +=_adgd .NumberOfExportedSymbols ;};};return nil ;};