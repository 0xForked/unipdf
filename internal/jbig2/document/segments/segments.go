//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package segments ;import (_dd "encoding/binary";_af "errors";_c "fmt";_cb "github.com/unidoc/unipdf/v3/common";_afb "github.com/unidoc/unipdf/v3/internal/bitwise";_ac "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_e "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";
_ag "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/arithmetic";_ge "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/huffman";_be "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/mmr";_bb "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/arithmetic";
_fcf "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_gd "github.com/unidoc/unipdf/v3/internal/jbig2/internal";_da "golang.org/x/xerrors";_fc "image";_d "io";_b "math";_a "strings";_g "time";);func (_fcfa *EndOfStripe )parseHeader ()error {_dad ,_aff :=_fcfa ._ab .ReadBits (32);
if _aff !=nil {return _aff ;};_fcfa ._ec =int (_dad &_b .MaxInt32 );return nil ;};func _bef (_fdgd int )int {if _fdgd ==0{return 0;};_fdgd |=_fdgd >>1;_fdgd |=_fdgd >>2;_fdgd |=_fdgd >>4;_fdgd |=_fdgd >>8;_fdgd |=_fdgd >>16;return (_fdgd +1)>>1;};func (_fadca *TextRegion )createRegionBitmap ()error {_fadca .RegionBitmap =_e .New (int (_fadca .RegionInfo .BitmapWidth ),int (_fadca .RegionInfo .BitmapHeight ));
if _fadca .DefaultPixel !=0{_fadca .RegionBitmap .SetDefaultPixel ();};return nil ;};func (_faebf *PageInformationSegment )readMaxStripeSize ()error {_fgbe ,_beadc :=_faebf ._cgbaf .ReadBits (15);if _beadc !=nil {return _beadc ;};_faebf .MaxStripeSize =uint16 (_fgbe &_b .MaxUint16 );
return nil ;};type GenericRegion struct{_bdg *_afb .Reader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;UseExtTemplates bool ;IsTPGDon bool ;GBTemplate byte ;IsMMREncoded bool ;UseMMR bool ;
GBAtX []int8 ;GBAtY []int8 ;GBAtOverride []bool ;_agf bool ;Bitmap *_e .Bitmap ;_cbae *_ag .Decoder ;_dee *_ag .DecoderStats ;_eed *_be .Decoder ;};func (_ddf *PatternDictionary )GetDictionary ()([]*_e .Bitmap ,error ){if _ddf .Patterns !=nil {return _ddf .Patterns ,nil ;
};if !_ddf .IsMMREncoded {_ddf .setGbAtPixels ();};_eefa :=NewGenericRegion (_ddf ._dega );_eefa .setParametersMMR (_ddf .IsMMREncoded ,_ddf .DataOffset ,_ddf .DataLength ,uint32 (_ddf .HdpHeight ),(_ddf .GrayMax +1)*uint32 (_ddf .HdpWidth ),_ddf .HDTemplate ,false ,false ,_ddf .GBAtX ,_ddf .GBAtY );
_gbg ,_bdbg :=_eefa .GetRegionBitmap ();if _bdbg !=nil {return nil ,_bdbg ;};if _bdbg =_ddf .extractPatterns (_gbg );_bdbg !=nil {return nil ,_bdbg ;};return _ddf .Patterns ,nil ;};func (_fdd *GenericRegion )setParameters (_dfaa bool ,_fce ,_fcad int64 ,_dffbc ,_gdb uint32 ){_fdd .IsMMREncoded =_dfaa ;
_fdd .DataOffset =_fce ;_fdd .DataLength =_fcad ;_fdd .RegionSegment .BitmapHeight =_dffbc ;_fdd .RegionSegment .BitmapWidth =_gdb ;_fdd ._eed =nil ;_fdd .Bitmap =nil ;};func (_cgef *TextRegion )checkInput ()error {const _fabcg ="\u0063\u0068\u0065\u0063\u006b\u0049\u006e\u0070\u0075\u0074";
if !_cgef .UseRefinement {if _cgef .SbrTemplate !=0{_cb .Log .Debug ("\u0053\u0062\u0072Te\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_cgef .SbrTemplate =0;};};if _cgef .SbHuffFS ==2||_cgef .SbHuffRDWidth ==2||_cgef .SbHuffRDHeight ==2||_cgef .SbHuffRDX ==2||_cgef .SbHuffRDY ==2{return _fcf .Error (_fabcg ,"h\u0075\u0066\u0066\u006d\u0061\u006e \u0066\u006c\u0061\u0067\u0020\u0076a\u006c\u0075\u0065\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074e\u0064");
};if !_cgef .UseRefinement {if _cgef .SbHuffRSize !=0{_cb .Log .Debug ("\u0053\u0062\u0048uf\u0066\u0052\u0053\u0069\u007a\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_cgef .SbHuffRSize =0;};if _cgef .SbHuffRDY !=0{_cb .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044Y\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");
_cgef .SbHuffRDY =0;};if _cgef .SbHuffRDX !=0{_cb .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044X\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_cgef .SbHuffRDX =0;};if _cgef .SbHuffRDWidth !=0{_cb .Log .Debug ("\u0053b\u0048\u0075\u0066\u0066R\u0044\u0057\u0069\u0064\u0074h\u0020s\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u00200");
_cgef .SbHuffRDWidth =0;};if _cgef .SbHuffRDHeight !=0{_cb .Log .Debug ("\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069g\u0068\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0030");_cgef .SbHuffRDHeight =0;};};return nil ;
};func (_agfed *TextRegion )decodeIds ()(int64 ,error ){const _gbab ="\u0064e\u0063\u006f\u0064\u0065\u0049\u0064s";if _agfed .IsHuffmanEncoded {if _agfed .SbHuffDS ==3{if _agfed ._bcd ==nil {_dacac :=0;if _agfed .SbHuffFS ==3{_dacac ++;};var _acef error ;
_agfed ._bcd ,_acef =_agfed .getUserTable (_dacac );if _acef !=nil {return 0,_fcf .Wrap (_acef ,_gbab ,"");};};return _agfed ._bcd .Decode (_agfed ._cfda );};_beg ,_bgeb :=_ge .GetStandardTable (8+int (_agfed .SbHuffDS ));if _bgeb !=nil {return 0,_fcf .Wrap (_bgeb ,_gbab ,"");
};return _beg .Decode (_agfed ._cfda );};_cgge ,_bbea :=_agfed ._eebc .DecodeInt (_agfed ._ffga );if _bbea !=nil {return 0,_fcf .Wrap (_bbea ,_gbab ,"\u0063\u0078\u0049\u0041\u0044\u0053");};return int64 (_cgge ),nil ;};func (_acbf *PageInformationSegment )checkInput ()error {if _acbf .PageBMHeight ==_b .MaxInt32 {if !_acbf .IsStripe {_cb .Log .Debug ("P\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0053\u0065\u0067me\u006e\u0074\u002e\u0049s\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0073\u0068ou\u006c\u0064 \u0062\u0065\u0020\u0074\u0072\u0075\u0065\u002e");
};};return nil ;};func (_beee *Header )subInputReader ()(*_afb .Reader ,error ){_eecg :=int (_beee .SegmentDataLength );if _beee .SegmentDataLength ==_b .MaxInt32 {_eecg =-1;};return _beee .Reader .NewPartialReader (int (_beee .SegmentDataStartOffset ),_eecg ,false );
};func (_bbc *GenericRefinementRegion )updateOverride ()error {if _bbc .GrAtX ==nil ||_bbc .GrAtY ==nil {return _af .New ("\u0041\u0054\u0020\u0070\u0069\u0078\u0065\u006c\u0073\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");};if len (_bbc .GrAtX )!=len (_bbc .GrAtY ){return _af .New ("A\u0054\u0020\u0070\u0069xe\u006c \u0069\u006e\u0063\u006f\u006es\u0069\u0073\u0074\u0065\u006e\u0074");
};_bbc ._fd =make ([]bool ,len (_bbc .GrAtX ));switch _bbc .TemplateID {case 0:if _bbc .GrAtX [0]!=-1&&_bbc .GrAtY [0]!=-1{_bbc ._fd [0]=true ;_bbc ._eac =true ;};if _bbc .GrAtX [1]!=-1&&_bbc .GrAtY [1]!=-1{_bbc ._fd [1]=true ;_bbc ._eac =true ;};case 1:_bbc ._eac =false ;
};return nil ;};func (_eefg *SymbolDictionary )setAtPixels ()error {if _eefg .IsHuffmanEncoded {return nil ;};_aabgc :=1;if _eefg .SdTemplate ==0{_aabgc =4;};if _gdba :=_eefg .readAtPixels (_aabgc );_gdba !=nil {return _gdba ;};return nil ;};func (_bdad *SymbolDictionary )readRefinementAtPixels (_cbde int )error {_bdad .SdrATX =make ([]int8 ,_cbde );
_bdad .SdrATY =make ([]int8 ,_cbde );var (_dbaf byte ;_dcfd error ;);for _aeab :=0;_aeab < _cbde ;_aeab ++{_dbaf ,_dcfd =_bdad ._edgc .ReadByte ();if _dcfd !=nil {return _dcfd ;};_bdad .SdrATX [_aeab ]=int8 (_dbaf );_dbaf ,_dcfd =_bdad ._edgc .ReadByte ();
if _dcfd !=nil {return _dcfd ;};_bdad .SdrATY [_aeab ]=int8 (_dbaf );};return nil ;};func (_aggb *GenericRegion )writeGBAtPixels (_fedb _afb .BinaryWriter )(_dgfe int ,_gaeba error ){const _dggd ="\u0077r\u0069t\u0065\u0047\u0042\u0041\u0074\u0050\u0069\u0078\u0065\u006c\u0073";
if _aggb .UseMMR {return 0,nil ;};_bdb :=1;if _aggb .GBTemplate ==0{_bdb =4;}else if _aggb .UseExtTemplates {_bdb =12;};if len (_aggb .GBAtX )!=_bdb {return 0,_fcf .Errorf (_dggd ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0058\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};if len (_aggb .GBAtY )!=_bdb {return 0,_fcf .Errorf (_dggd ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0059\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};for _agcg :=0;_agcg < _bdb ;_agcg ++{if _gaeba =_fedb .WriteByte (byte (_aggb .GBAtX [_agcg ]));_gaeba !=nil {return _dgfe ,_fcf .Wrap (_gaeba ,_dggd ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0058");};_dgfe ++;if _gaeba =_fedb .WriteByte (byte (_aggb .GBAtY [_agcg ]));
_gaeba !=nil {return _dgfe ,_fcf .Wrap (_gaeba ,_dggd ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0059");};_dgfe ++;};return _dgfe ,nil ;};func (_eccf *TextRegion )readHuffmanFlags ()error {var (_gdcd int ;_fdeea uint64 ;_ggce error ;);_ ,_ggce =_eccf ._cfda .ReadBit ();
if _ggce !=nil {return _ggce ;};_gdcd ,_ggce =_eccf ._cfda .ReadBit ();if _ggce !=nil {return _ggce ;};_eccf .SbHuffRSize =int8 (_gdcd );_fdeea ,_ggce =_eccf ._cfda .ReadBits (2);if _ggce !=nil {return _ggce ;};_eccf .SbHuffRDY =int8 (_fdeea )&0xf;_fdeea ,_ggce =_eccf ._cfda .ReadBits (2);
if _ggce !=nil {return _ggce ;};_eccf .SbHuffRDX =int8 (_fdeea )&0xf;_fdeea ,_ggce =_eccf ._cfda .ReadBits (2);if _ggce !=nil {return _ggce ;};_eccf .SbHuffRDHeight =int8 (_fdeea )&0xf;_fdeea ,_ggce =_eccf ._cfda .ReadBits (2);if _ggce !=nil {return _ggce ;
};_eccf .SbHuffRDWidth =int8 (_fdeea )&0xf;_fdeea ,_ggce =_eccf ._cfda .ReadBits (2);if _ggce !=nil {return _ggce ;};_eccf .SbHuffDT =int8 (_fdeea )&0xf;_fdeea ,_ggce =_eccf ._cfda .ReadBits (2);if _ggce !=nil {return _ggce ;};_eccf .SbHuffDS =int8 (_fdeea )&0xf;
_fdeea ,_ggce =_eccf ._cfda .ReadBits (2);if _ggce !=nil {return _ggce ;};_eccf .SbHuffFS =int8 (_fdeea )&0xf;return nil ;};func (_ebb *GenericRefinementRegion )decodeTemplate (_dfb ,_bgb ,_ccc ,_edg ,_ega ,_efa ,_acc ,_ffg ,_fgbb ,_ffc int ,_bcb templater )(_aae error ){var (_ggbe ,_fdb ,_fcc ,_gfbg ,_ged int16 ;
_eda ,_dga ,_fde ,_gaeb int ;_fgda byte ;);if _fgbb >=1&&(_fgbb -1)< _ebb .ReferenceBitmap .Height {_fgda ,_aae =_ebb .ReferenceBitmap .GetByte (_ffc -_edg );if _aae !=nil {return ;};_eda =int (_fgda );};if _fgbb >=0&&(_fgbb )< _ebb .ReferenceBitmap .Height {_fgda ,_aae =_ebb .ReferenceBitmap .GetByte (_ffc );
if _aae !=nil {return ;};_dga =int (_fgda );};if _fgbb >=-1&&(_fgbb +1)< _ebb .ReferenceBitmap .Height {_fgda ,_aae =_ebb .ReferenceBitmap .GetByte (_ffc +_edg );if _aae !=nil {return ;};_fde =int (_fgda );};_ffc ++;if _dfb >=1{_fgda ,_aae =_ebb .RegionBitmap .GetByte (_ffg -_ccc );
if _aae !=nil {return ;};_gaeb =int (_fgda );};_ffg ++;_cfg :=_ebb .ReferenceDX %8;_gcaa :=6+_cfg ;_acde :=_ffc %_edg ;if _gcaa >=0{if _gcaa < 8{_ggbe =int16 (_eda >>uint (_gcaa ))&0x07;};if _gcaa < 8{_fdb =int16 (_dga >>uint (_gcaa ))&0x07;};if _gcaa < 8{_fcc =int16 (_fde >>uint (_gcaa ))&0x07;
};if _gcaa ==6&&_acde > 1{if _fgbb >=1&&(_fgbb -1)< _ebb .ReferenceBitmap .Height {_fgda ,_aae =_ebb .ReferenceBitmap .GetByte (_ffc -_edg -2);if _aae !=nil {return _aae ;};_ggbe |=int16 (_fgda <<2)&0x04;};if _fgbb >=0&&_fgbb < _ebb .ReferenceBitmap .Height {_fgda ,_aae =_ebb .ReferenceBitmap .GetByte (_ffc -2);
if _aae !=nil {return _aae ;};_fdb |=int16 (_fgda <<2)&0x04;};if _fgbb >=-1&&_fgbb +1< _ebb .ReferenceBitmap .Height {_fgda ,_aae =_ebb .ReferenceBitmap .GetByte (_ffc +_edg -2);if _aae !=nil {return _aae ;};_fcc |=int16 (_fgda <<2)&0x04;};};if _gcaa ==0{_eda =0;
_dga =0;_fde =0;if _acde < _edg -1{if _fgbb >=1&&_fgbb -1< _ebb .ReferenceBitmap .Height {_fgda ,_aae =_ebb .ReferenceBitmap .GetByte (_ffc -_edg );if _aae !=nil {return _aae ;};_eda =int (_fgda );};if _fgbb >=0&&_fgbb < _ebb .ReferenceBitmap .Height {_fgda ,_aae =_ebb .ReferenceBitmap .GetByte (_ffc );
if _aae !=nil {return _aae ;};_dga =int (_fgda );};if _fgbb >=-1&&_fgbb +1< _ebb .ReferenceBitmap .Height {_fgda ,_aae =_ebb .ReferenceBitmap .GetByte (_ffc +_edg );if _aae !=nil {return _aae ;};_fde =int (_fgda );};};_ffc ++;};}else {_ggbe =int16 (_eda <<1)&0x07;
_fdb =int16 (_dga <<1)&0x07;_fcc =int16 (_fde <<1)&0x07;_eda =0;_dga =0;_fde =0;if _acde < _edg -1{if _fgbb >=1&&_fgbb -1< _ebb .ReferenceBitmap .Height {_fgda ,_aae =_ebb .ReferenceBitmap .GetByte (_ffc -_edg );if _aae !=nil {return _aae ;};_eda =int (_fgda );
};if _fgbb >=0&&_fgbb < _ebb .ReferenceBitmap .Height {_fgda ,_aae =_ebb .ReferenceBitmap .GetByte (_ffc );if _aae !=nil {return _aae ;};_dga =int (_fgda );};if _fgbb >=-1&&_fgbb +1< _ebb .ReferenceBitmap .Height {_fgda ,_aae =_ebb .ReferenceBitmap .GetByte (_ffc +_edg );
if _aae !=nil {return _aae ;};_fde =int (_fgda );};_ffc ++;};_ggbe |=int16 ((_eda >>7)&0x07);_fdb |=int16 ((_dga >>7)&0x07);_fcc |=int16 ((_fde >>7)&0x07);};_gfbg =int16 (_gaeb >>6);_ged =0;_bfe :=(2-_cfg )%8;_eda <<=uint (_bfe );_dga <<=uint (_bfe );_fde <<=uint (_bfe );
_gaeb <<=2;var _ddb int ;for _fe :=0;_fe < _bgb ;_fe ++{_fec :=_fe &0x07;_adb :=_bcb .form (_ggbe ,_fdb ,_fcc ,_gfbg ,_ged );if _ebb ._eac {_fgda ,_aae =_ebb .RegionBitmap .GetByte (_ebb .RegionBitmap .GetByteIndex (_fe ,_dfb ));if _aae !=nil {return _aae ;
};_ebb ._ea .SetIndex (int32 (_ebb .overrideAtTemplate0 (int (_adb ),_fe ,_dfb ,int (_fgda ),_fec )));}else {_ebb ._ea .SetIndex (int32 (_adb ));};_ddb ,_aae =_ebb ._bg .DecodeBit (_ebb ._ea );if _aae !=nil {return _aae ;};if _aae =_ebb .RegionBitmap .SetPixel (_fe ,_dfb ,byte (_ddb ));
_aae !=nil {return _aae ;};_ggbe =((_ggbe <<1)|0x01&int16 (_eda >>7))&0x07;_fdb =((_fdb <<1)|0x01&int16 (_dga >>7))&0x07;_fcc =((_fcc <<1)|0x01&int16 (_fde >>7))&0x07;_gfbg =((_gfbg <<1)|0x01&int16 (_gaeb >>7))&0x07;_ged =int16 (_ddb );if (_fe -int (_ebb .ReferenceDX ))%8==5{_eda =0;
_dga =0;_fde =0;if ((_fe -int (_ebb .ReferenceDX ))/8)+1< _ebb .ReferenceBitmap .RowStride {if _fgbb >=1&&(_fgbb -1)< _ebb .ReferenceBitmap .Height {_fgda ,_aae =_ebb .ReferenceBitmap .GetByte (_ffc -_edg );if _aae !=nil {return _aae ;};_eda =int (_fgda );
};if _fgbb >=0&&_fgbb < _ebb .ReferenceBitmap .Height {_fgda ,_aae =_ebb .ReferenceBitmap .GetByte (_ffc );if _aae !=nil {return _aae ;};_dga =int (_fgda );};if _fgbb >=-1&&(_fgbb +1)< _ebb .ReferenceBitmap .Height {_fgda ,_aae =_ebb .ReferenceBitmap .GetByte (_ffc +_edg );
if _aae !=nil {return _aae ;};_fde =int (_fgda );};};_ffc ++;}else {_eda <<=1;_dga <<=1;_fde <<=1;};if _fec ==5&&_dfb >=1{if ((_fe >>3)+1)>=_ebb .RegionBitmap .RowStride {_gaeb =0;}else {_fgda ,_aae =_ebb .RegionBitmap .GetByte (_ffg -_ccc );if _aae !=nil {return _aae ;
};_gaeb =int (_fgda );};_ffg ++;}else {_gaeb <<=1;};};return nil ;};func (_efcf *PageInformationSegment )readCombinationOperatorOverrideAllowed ()error {_bgd ,_dabc :=_efcf ._cgbaf .ReadBit ();if _dabc !=nil {return _dabc ;};if _bgd ==1{_efcf ._affc =true ;
};return nil ;};func (_cgd *GenericRefinementRegion )decodeTypicalPredictedLineTemplate1 (_cgb ,_ggg ,_fcd ,_ed ,_gfc ,_dcc ,_ggff ,_eef ,_gca int )(_bac error ){var (_efbc ,_edb int ;_fcag ,_cbf int ;_eag ,_bge int ;_aca byte ;);if _cgb > 0{_aca ,_bac =_cgd .RegionBitmap .GetByte (_ggff -_fcd );
if _bac !=nil {return ;};_fcag =int (_aca );};if _eef > 0&&_eef <=_cgd .ReferenceBitmap .Height {_aca ,_bac =_cgd .ReferenceBitmap .GetByte (_gca -_ed +_dcc );if _bac !=nil {return ;};_cbf =int (_aca )<<2;};if _eef >=0&&_eef < _cgd .ReferenceBitmap .Height {_aca ,_bac =_cgd .ReferenceBitmap .GetByte (_gca +_dcc );
if _bac !=nil {return ;};_eag =int (_aca );};if _eef > -2&&_eef < _cgd .ReferenceBitmap .Height -1{_aca ,_bac =_cgd .ReferenceBitmap .GetByte (_gca +_ed +_dcc );if _bac !=nil {return ;};_bge =int (_aca );};_efbc =((_fcag >>5)&0x6)|((_bge >>2)&0x30)|(_eag &0xc0)|(_cbf &0x200);
_edb =((_bge >>2)&0x70)|(_eag &0xc0)|(_cbf &0x700);var _ad int ;for _eeg :=0;_eeg < _gfc ;_eeg =_ad {var (_cba int ;_bdfe int ;);_ad =_eeg +8;if _cba =_ggg -_eeg ;_cba > 8{_cba =8;};_gdfb :=_ad < _ggg ;_fgdf :=_ad < _cgd .ReferenceBitmap .Width ;_cfe :=_dcc +1;
if _cgb > 0{_aca =0;if _gdfb {_aca ,_bac =_cgd .RegionBitmap .GetByte (_ggff -_fcd +1);if _bac !=nil {return ;};};_fcag =(_fcag <<8)|int (_aca );};if _eef > 0&&_eef <=_cgd .ReferenceBitmap .Height {var _efg int ;if _fgdf {_aca ,_bac =_cgd .ReferenceBitmap .GetByte (_gca -_ed +_cfe );
if _bac !=nil {return ;};_efg =int (_aca )<<2;};_cbf =(_cbf <<8)|_efg ;};if _eef >=0&&_eef < _cgd .ReferenceBitmap .Height {_aca =0;if _fgdf {_aca ,_bac =_cgd .ReferenceBitmap .GetByte (_gca +_cfe );if _bac !=nil {return ;};};_eag =(_eag <<8)|int (_aca );
};if _eef > -2&&_eef < (_cgd .ReferenceBitmap .Height -1){_aca =0;if _fgdf {_aca ,_bac =_cgd .ReferenceBitmap .GetByte (_gca +_ed +_cfe );if _bac !=nil {return ;};};_bge =(_bge <<8)|int (_aca );};for _ecb :=0;_ecb < _cba ;_ecb ++{var _dcce int ;_cfee :=(_edb >>4)&0x1ff;
switch _cfee {case 0x1ff:_dcce =1;case 0x00:_dcce =0;default:_cgd ._ea .SetIndex (int32 (_efbc ));_dcce ,_bac =_cgd ._bg .DecodeBit (_cgd ._ea );if _bac !=nil {return ;};};_cdc :=uint (7-_ecb );_bdfe |=_dcce <<_cdc ;_efbc =((_efbc &0x0d6)<<1)|_dcce |(_fcag >>_cdc +5)&0x002|((_bge >>_cdc +2)&0x010)|((_eag >>_cdc )&0x040)|((_cbf >>_cdc )&0x200);
_edb =((_edb &0xdb)<<1)|((_bge >>_cdc +2)&0x010)|((_eag >>_cdc )&0x080)|((_cbf >>_cdc )&0x400);};_bac =_cgd .RegionBitmap .SetByte (_ggff ,byte (_bdfe ));if _bac !=nil {return ;};_ggff ++;_gca ++;};return nil ;};func (_cacc *GenericRegion )getPixel (_ebcf ,_bgab int )int8 {if _ebcf < 0||_ebcf >=_cacc .Bitmap .Width {return 0;
};if _bgab < 0||_bgab >=_cacc .Bitmap .Height {return 0;};if _cacc .Bitmap .GetPixel (_ebcf ,_bgab ){return 1;};return 0;};func (_dadfg *GenericRegion )Init (h *Header ,r *_afb .Reader )error {_dadfg .RegionSegment =NewRegionSegment (r );_dadfg ._bdg =r ;
return _dadfg .parseHeader ();};func (_aagg *TextRegion )initSymbols ()error {const _gadb ="i\u006e\u0069\u0074\u0053\u0079\u006d\u0062\u006f\u006c\u0073";for _ ,_ecfc :=range _aagg .Header .RTSegments {if _ecfc ==nil {return _fcf .Error (_gadb ,"\u006e\u0069\u006c\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020pr\u006f\u0076\u0069\u0064\u0065\u0064 \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0074\u0065\u0078\u0074\u0020\u0072\u0065g\u0069\u006f\u006e\u0020\u0053\u0079\u006d\u0062o\u006c\u0073");
};if _ecfc .Type ==0{_bdba ,_cggc :=_ecfc .GetSegmentData ();if _cggc !=nil {return _fcf .Wrap (_cggc ,_gadb ,"");};_gaaf ,_dade :=_bdba .(*SymbolDictionary );if !_dade {return _fcf .Error (_gadb ,"\u0072e\u0066\u0065r\u0072\u0065\u0064 \u0054\u006f\u0020\u0053\u0065\u0067\u006de\u006e\u0074\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_gaaf ._bdedd =_aagg ._abec ;_caca ,_cggc :=_gaaf .GetDictionary ();if _cggc !=nil {return _fcf .Wrap (_cggc ,_gadb ,"");};_aagg .Symbols =append (_aagg .Symbols ,_caca ...);};};_aagg .NumberOfSymbols =uint32 (len (_aagg .Symbols ));return nil ;};var _ templater =&template1 {};
func (_ccga *TableSegment )HtHigh ()int32 {return _ccga ._fcdg };func (_eccb *SymbolDictionary )GetDictionary ()([]*_e .Bitmap ,error ){_cb .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c-\u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){_cb .Log .Trace ("\u005b\u0053\u0059M\u0042\u004f\u004c\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
_cb .Log .Trace ("\u005b\u0053Y\u004d\u0042\u004f\u004c\u002dD\u0049\u0043\u0054\u0049\u004fN\u0041\u0052\u0059\u005d\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020\u000a\u0045\u0078\u003a\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u000a\u006e\u0065\u0077\u003a\u0027\u0025\u0073\u0027",_eccb ._efcd ,_eccb ._gebc );
}();if _eccb ._efcd ==nil {var _faf error ;if _eccb .UseRefinementAggregation {_eccb ._ggde =_eccb .getSbSymCodeLen ();};if !_eccb .IsHuffmanEncoded {if _faf =_eccb .setCodingStatistics ();_faf !=nil {return nil ,_faf ;};};_eccb ._gebc =make ([]*_e .Bitmap ,_eccb .NumberOfNewSymbols );
var _bgbe []int ;if _eccb .IsHuffmanEncoded &&!_eccb .UseRefinementAggregation {_bgbe =make ([]int ,_eccb .NumberOfNewSymbols );};if _faf =_eccb .setSymbolsArray ();_faf !=nil {return nil ,_faf ;};var _gbdef ,_adfc int64 ;_eccb ._fba =0;for _eccb ._fba < _eccb .NumberOfNewSymbols {_adfc ,_faf =_eccb .decodeHeightClassDeltaHeight ();
if _faf !=nil {return nil ,_faf ;};_gbdef +=_adfc ;var _adec ,_cdge uint32 ;_afga :=int64 (_eccb ._fba );for {var _fac int64 ;_fac ,_faf =_eccb .decodeDifferenceWidth ();if _da .Is (_faf ,_gd .ErrOOB ){break ;};if _faf !=nil {return nil ,_faf ;};if _eccb ._fba >=_eccb .NumberOfNewSymbols {break ;
};_adec +=uint32 (_fac );_cdge +=_adec ;if !_eccb .IsHuffmanEncoded ||_eccb .UseRefinementAggregation {if !_eccb .UseRefinementAggregation {_faf =_eccb .decodeDirectlyThroughGenericRegion (_adec ,uint32 (_gbdef ));if _faf !=nil {return nil ,_faf ;};}else {_faf =_eccb .decodeAggregate (_adec ,uint32 (_gbdef ));
if _faf !=nil {return nil ,_faf ;};};}else if _eccb .IsHuffmanEncoded &&!_eccb .UseRefinementAggregation {_bgbe [_eccb ._fba ]=int (_adec );};_eccb ._fba ++;};if _eccb .IsHuffmanEncoded &&!_eccb .UseRefinementAggregation {var _ecfd int64 ;if _eccb .SdHuffBMSizeSelection ==0{var _fead _ge .Tabler ;
_fead ,_faf =_ge .GetStandardTable (1);if _faf !=nil {return nil ,_faf ;};_ecfd ,_faf =_fead .Decode (_eccb ._edgc );if _faf !=nil {return nil ,_faf ;};}else {_ecfd ,_faf =_eccb .huffDecodeBmSize ();if _faf !=nil {return nil ,_faf ;};};_eccb ._edgc .Align ();
var _dedbc *_e .Bitmap ;_dedbc ,_faf =_eccb .decodeHeightClassCollectiveBitmap (_ecfd ,uint32 (_gbdef ),_cdge );if _faf !=nil {return nil ,_faf ;};_faf =_eccb .decodeHeightClassBitmap (_dedbc ,_afga ,int (_gbdef ),_bgbe );if _faf !=nil {return nil ,_faf ;
};};};_fbdb ,_faf :=_eccb .getToExportFlags ();if _faf !=nil {return nil ,_faf ;};_eccb .setExportedSymbols (_fbdb );};return _eccb ._efcd ,nil ;};func (_feag *Header )referenceSize ()uint {switch {case _feag .SegmentNumber <=255:return 1;case _feag .SegmentNumber <=65535:return 2;
default:return 4;};};func (_fcfb *SymbolDictionary )huffDecodeBmSize ()(int64 ,error ){if _fcfb ._ffcb ==nil {var (_gceb int ;_egda error ;);if _fcfb .SdHuffDecodeHeightSelection ==3{_gceb ++;};if _fcfb .SdHuffDecodeWidthSelection ==3{_gceb ++;};_fcfb ._ffcb ,_egda =_fcfb .getUserTable (_gceb );
if _egda !=nil {return 0,_egda ;};};return _fcfb ._ffcb .Decode (_fcfb ._edgc );};func (_bga *GenericRefinementRegion )overrideAtTemplate0 (_afe ,_abg ,_bgg ,_bff ,_bda int )int {if _bga ._fd [0]{_afe &=0xfff7;if _bga .GrAtY [0]==0&&int (_bga .GrAtX [0])>=-_bda {_afe |=(_bff >>uint (7-(_bda +int (_bga .GrAtX [0])))&0x1)<<3;
}else {_afe |=_bga .getPixel (_bga .RegionBitmap ,_abg +int (_bga .GrAtX [0]),_bgg +int (_bga .GrAtY [0]))<<3;};};if _bga ._fd [1]{_afe &=0xefff;if _bga .GrAtY [1]==0&&int (_bga .GrAtX [1])>=-_bda {_afe |=(_bff >>uint (7-(_bda +int (_bga .GrAtX [1])))&0x1)<<12;
}else {_afe |=_bga .getPixel (_bga .ReferenceBitmap ,_abg +int (_bga .GrAtX [1]),_bgg +int (_bga .GrAtY [1]));};};return _afe ;};func (_acbd *TableSegment )HtLow ()int32 {return _acbd ._fbfb };type OrganizationType uint8 ;func (_fcee *Header )readSegmentPageAssociation (_edd Documenter ,_cgag *_afb .Reader ,_eadb uint64 ,_acge ...int )(_gdgc error ){const _aefb ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074P\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061t\u0069\u006f\u006e";
if !_fcee .PageAssociationFieldSize {_cafe ,_ddbb :=_cgag .ReadBits (8);if _ddbb !=nil {return _fcf .Wrap (_ddbb ,_aefb ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_fcee .PageAssociation =int (_cafe &0xFF);}else {_efgg ,_gfcb :=_cgag .ReadBits (32);
if _gfcb !=nil {return _fcf .Wrap (_gfcb ,_aefb ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_fcee .PageAssociation =int (_efgg &_b .MaxInt32 );};if _eadb ==0{return nil ;};if _fcee .PageAssociation !=0{_beda ,_gdfdb :=_edd .GetPage (_fcee .PageAssociation );
if _gdfdb !=nil {return _fcf .Wrap (_gdfdb ,_aefb ,"\u0061s\u0073\u006f\u0063\u0069a\u0074\u0065\u0064\u0020\u0070a\u0067e\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006ed");};var _fbba int ;for _afde :=uint64 (0);_afde < _eadb ;_afde ++{_fbba =_acge [_afde ];
_fcee .RTSegments [_afde ],_gdfdb =_beda .GetSegment (_fbba );if _gdfdb !=nil {var _bbcd error ;_fcee .RTSegments [_afde ],_bbcd =_edd .GetGlobalSegment (_fbba );if _bbcd !=nil {return _fcf .Wrapf (_gdfdb ,_aefb ,"\u0072\u0065\u0066\u0065\u0072\u0065n\u0063\u0065\u0020s\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064\u0020\u0061\u0074\u0020pa\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0072\u0020\u0069\u006e\u0020\u0067\u006c\u006f\u0062\u0061\u006c\u0073",_fcee .PageAssociation );
};};};return nil ;};for _cad :=uint64 (0);_cad < _eadb ;_cad ++{_fcee .RTSegments [_cad ],_gdgc =_edd .GetGlobalSegment (_acge [_cad ]);if _gdgc !=nil {return _fcf .Wrapf (_gdgc ,_aefb ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u003a\u0020\u0027\u0025d\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064",_acge [_cad ]);
};};return nil ;};func (_egdg *GenericRegion )parseHeader ()(_abd error ){_cb .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052I\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0050\u0061\u0072s\u0069\u006e\u0067\u0048\u0065\u0061\u0064e\u0072\u002e\u002e\u002e");
defer func (){if _abd !=nil {_cb .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e]\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065r\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0077\u0069th\u0020\u0065\u0072\u0072\u006f\u0072\u002e\u0020\u0025\u0076",_abd );
}else {_cb .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049C\u002d\u0052\u0045G\u0049\u004f\u004e]\u0020\u0050a\u0072\u0073\u0069\u006e\u0067\u0048e\u0061de\u0072\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0053\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079\u002e\u002e\u002e");
};}();var (_dff int ;_eea uint64 ;);if _abd =_egdg .RegionSegment .parseHeader ();_abd !=nil {return _abd ;};if _ ,_abd =_egdg ._bdg .ReadBits (3);_abd !=nil {return _abd ;};_dff ,_abd =_egdg ._bdg .ReadBit ();if _abd !=nil {return _abd ;};if _dff ==1{_egdg .UseExtTemplates =true ;
};_dff ,_abd =_egdg ._bdg .ReadBit ();if _abd !=nil {return _abd ;};if _dff ==1{_egdg .IsTPGDon =true ;};_eea ,_abd =_egdg ._bdg .ReadBits (2);if _abd !=nil {return _abd ;};_egdg .GBTemplate =byte (_eea &0xf);_dff ,_abd =_egdg ._bdg .ReadBit ();if _abd !=nil {return _abd ;
};if _dff ==1{_egdg .IsMMREncoded =true ;};if !_egdg .IsMMREncoded {_ccf :=1;if _egdg .GBTemplate ==0{_ccf =4;if _egdg .UseExtTemplates {_ccf =12;};};if _abd =_egdg .readGBAtPixels (_ccf );_abd !=nil {return _abd ;};};if _abd =_egdg .computeSegmentDataStructure ();
_abd !=nil {return _abd ;};_cb .Log .Trace ("\u0025\u0073",_egdg );return nil ;};func (_cdd *GenericRefinementRegion )decodeTypicalPredictedLineTemplate0 (_fgd ,_fag ,_gbd ,_gbde ,_dc ,_fgb ,_gf ,_gbb ,_ccd int )error {var (_cbe ,_def ,_cfb ,_efbe ,_gga ,_bab int ;
_aa byte ;_df error ;);if _fgd > 0{_aa ,_df =_cdd .RegionBitmap .GetByte (_gf -_gbd );if _df !=nil {return _df ;};_cfb =int (_aa );};if _gbb > 0&&_gbb <=_cdd .ReferenceBitmap .Height {_aa ,_df =_cdd .ReferenceBitmap .GetByte (_ccd -_gbde +_fgb );if _df !=nil {return _df ;
};_efbe =int (_aa )<<4;};if _gbb >=0&&_gbb < _cdd .ReferenceBitmap .Height {_aa ,_df =_cdd .ReferenceBitmap .GetByte (_ccd +_fgb );if _df !=nil {return _df ;};_gga =int (_aa )<<1;};if _gbb > -2&&_gbb < _cdd .ReferenceBitmap .Height -1{_aa ,_df =_cdd .ReferenceBitmap .GetByte (_ccd +_gbde +_fgb );
if _df !=nil {return _df ;};_bab =int (_aa );};_cbe =((_cfb >>5)&0x6)|((_bab >>2)&0x30)|(_gga &0x180)|(_efbe &0xc00);var _dcd int ;for _ceg :=0;_ceg < _dc ;_ceg =_dcd {var _gfd int ;_dcd =_ceg +8;var _fca int ;if _fca =_fag -_ceg ;_fca > 8{_fca =8;};_ff :=_dcd < _fag ;
_gcd :=_dcd < _cdd .ReferenceBitmap .Width ;_ggf :=_fgb +1;if _fgd > 0{_aa =0;if _ff {_aa ,_df =_cdd .RegionBitmap .GetByte (_gf -_gbd +1);if _df !=nil {return _df ;};};_cfb =(_cfb <<8)|int (_aa );};if _gbb > 0&&_gbb <=_cdd .ReferenceBitmap .Height {var _ded int ;
if _gcd {_aa ,_df =_cdd .ReferenceBitmap .GetByte (_ccd -_gbde +_ggf );if _df !=nil {return _df ;};_ded =int (_aa )<<4;};_efbe =(_efbe <<8)|_ded ;};if _gbb >=0&&_gbb < _cdd .ReferenceBitmap .Height {var _gfb int ;if _gcd {_aa ,_df =_cdd .ReferenceBitmap .GetByte (_ccd +_ggf );
if _df !=nil {return _df ;};_gfb =int (_aa )<<1;};_gga =(_gga <<8)|_gfb ;};if _gbb > -2&&_gbb < (_cdd .ReferenceBitmap .Height -1){_aa =0;if _gcd {_aa ,_df =_cdd .ReferenceBitmap .GetByte (_ccd +_gbde +_ggf );if _df !=nil {return _df ;};};_bab =(_bab <<8)|int (_aa );
};for _ee :=0;_ee < _fca ;_ee ++{var _fab int ;_abab :=false ;_afbc :=(_cbe >>4)&0x1ff;if _afbc ==0x1ff{_abab =true ;_fab =1;}else if _afbc ==0x00{_abab =true ;};if !_abab {if _cdd ._eac {_def =_cdd .overrideAtTemplate0 (_cbe ,_ceg +_ee ,_fgd ,_gfd ,_ee );
_cdd ._ea .SetIndex (int32 (_def ));}else {_cdd ._ea .SetIndex (int32 (_cbe ));};_fab ,_df =_cdd ._bg .DecodeBit (_cdd ._ea );if _df !=nil {return _df ;};};_fdc :=uint (7-_ee );_gfd |=_fab <<_fdc ;_cbe =((_cbe &0xdb6)<<1)|_fab |(_cfb >>_fdc +5)&0x002|((_bab >>_fdc +2)&0x010)|((_gga >>_fdc )&0x080)|((_efbe >>_fdc )&0x400);
};_df =_cdd .RegionBitmap .SetByte (_gf ,byte (_gfd ));if _df !=nil {return _df ;};_gf ++;_ccd ++;};return nil ;};func (_egfd *GenericRegion )decodeSLTP ()(int ,error ){switch _egfd .GBTemplate {case 0:_egfd ._dee .SetIndex (0x9B25);case 1:_egfd ._dee .SetIndex (0x795);
case 2:_egfd ._dee .SetIndex (0xE5);case 3:_egfd ._dee .SetIndex (0x195);};return _egfd ._cbae .DecodeBit (_egfd ._dee );};func (_decgf *Header )writeReferredToCount (_geba _afb .BinaryWriter )(_bebb int ,_cgba error ){const _beed ="w\u0072i\u0074\u0065\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0043ou\u006e\u0074";
_decgf .RTSNumbers =make ([]int ,len (_decgf .RTSegments ));for _gcbg ,_acf :=range _decgf .RTSegments {_decgf .RTSNumbers [_gcbg ]=int (_acf .SegmentNumber );};if len (_decgf .RTSNumbers )<=4{var _feb byte ;if len (_decgf .RetainBits )>=1{_feb =_decgf .RetainBits [0];
};_feb |=byte (len (_decgf .RTSNumbers ))<<5;if _cgba =_geba .WriteByte (_feb );_cgba !=nil {return 0,_fcf .Wrap (_cgba ,_beed ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return 1,nil ;};_cce :=uint32 (len (_decgf .RTSNumbers ));
_gfgc :=make ([]byte ,4+_ac .Ceil (len (_decgf .RTSNumbers )+1,8));_cce |=0x7<<29;_dd .BigEndian .PutUint32 (_gfgc ,_cce );copy (_gfgc [1:],_decgf .RetainBits );_bebb ,_cgba =_geba .Write (_gfgc );if _cgba !=nil {return 0,_fcf .Wrap (_cgba ,_beed ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");
};return _bebb ,nil ;};func (_fgga *PageInformationSegment )encodeFlags (_ecg _afb .BinaryWriter )(_fgfa error ){const _bead ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _fgfa =_ecg .SkipBits (1);_fgfa !=nil {return _fcf .Wrap (_fgfa ,_bead ,"\u0072\u0065\u0073e\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074");
};var _ffbb int ;if _fgga .CombinationOperatorOverrideAllowed (){_ffbb =1;};if _fgfa =_ecg .WriteBit (_ffbb );_fgfa !=nil {return _fcf .Wrap (_fgfa ,_bead ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0064\u0065\u006e");
};_ffbb =0;if _fgga ._abgf {_ffbb =1;};if _fgfa =_ecg .WriteBit (_ffbb );_fgfa !=nil {return _fcf .Wrap (_fgfa ,_bead ,"\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0061\u0075\u0078i\u006ci\u0061r\u0079\u0020\u0062\u0075\u0066\u0066\u0065r");};if _fgfa =_ecg .WriteBit ((int (_fgga ._bfb )>>1)&0x01);
_fgfa !=nil {return _fcf .Wrap (_fgfa ,_bead ,"\u0063\u006f\u006d\u0062\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006f\u0070\u0065\u0072\u0061\u0074o\u0072\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0062\u0069\u0074");};if _fgfa =_ecg .WriteBit (int (_fgga ._bfb )&0x01);
_fgfa !=nil {return _fcf .Wrap (_fgfa ,_bead ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0062\u0069\u0074");};_ffbb =int (_fgga .DefaultPixelValue );
if _fgfa =_ecg .WriteBit (_ffbb );_fgfa !=nil {return _fcf .Wrap (_fgfa ,_bead ,"\u0064e\u0066\u0061\u0075\u006c\u0074\u0020\u0070\u0061\u0067\u0065\u0020p\u0069\u0078\u0065\u006c\u0020\u0076\u0061\u006c\u0075\u0065");};_ffbb =0;if _fgga ._agd {_ffbb =1;
};if _fgfa =_ecg .WriteBit (_ffbb );_fgfa !=nil {return _fcf .Wrap (_fgfa ,_bead ,"\u0063\u006f\u006e\u0074ai\u006e\u0073\u0020\u0072\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074");};_ffbb =0;if _fgga .IsLossless {_ffbb =1;};if _fgfa =_ecg .WriteBit (_ffbb );
_fgfa !=nil {return _fcf .Wrap (_fgfa ,_bead ,"p\u0061\u0067\u0065\u0020\u0069\u0073 \u0065\u0076\u0065\u006e\u0074\u0075\u0061\u006c\u006cy\u0020\u006c\u006fs\u0073l\u0065\u0073\u0073");};return nil ;};type HalftoneRegion struct{_afa *_afb .Reader ;_beec *Header ;
DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;HDefaultPixel int8 ;CombinationOperator _e .CombinationOperator ;HSkipEnabled bool ;HTemplate byte ;IsMMREncoded bool ;HGridWidth uint32 ;
HGridHeight uint32 ;HGridX int32 ;HGridY int32 ;HRegionX uint16 ;HRegionY uint16 ;HalftoneRegionBitmap *_e .Bitmap ;Patterns []*_e .Bitmap ;};func (_cbg *Header )writeSegmentDataLength (_degc _afb .BinaryWriter )(_ebeg int ,_faeb error ){_cbbe :=make ([]byte ,4);
_dd .BigEndian .PutUint32 (_cbbe ,uint32 (_cbg .SegmentDataLength ));if _ebeg ,_faeb =_degc .Write (_cbbe );_faeb !=nil {return 0,_fcf .Wrap (_faeb ,"\u0048\u0065a\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u004c\u0065ng\u0074\u0068","");
};return _ebeg ,nil ;};func (_dgee *SymbolDictionary )encodeNumSyms (_dgea _afb .BinaryWriter )(_bgegg int ,_bfge error ){const _cdbd ="\u0065\u006e\u0063\u006f\u0064\u0065\u004e\u0075\u006d\u0053\u0079\u006d\u0073";_cfac :=make ([]byte ,4);_dd .BigEndian .PutUint32 (_cfac ,_dgee .NumberOfExportedSymbols );
if _bgegg ,_bfge =_dgea .Write (_cfac );_bfge !=nil {return _bgegg ,_fcf .Wrap (_bfge ,_cdbd ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};_dd .BigEndian .PutUint32 (_cfac ,_dgee .NumberOfNewSymbols );_gbcd ,_bfge :=_dgea .Write (_cfac );
if _bfge !=nil {return _bgegg ,_fcf .Wrap (_bfge ,_cdbd ,"n\u0065\u0077\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};return _bgegg +_gbcd ,nil ;};func (_fgdab *TableSegment )HtOOB ()int32 {return _fgdab ._dabce };func (_agce *SymbolDictionary )decodeHeightClassDeltaHeight ()(int64 ,error ){if _agce .IsHuffmanEncoded {return _agce .decodeHeightClassDeltaHeightWithHuffman ();
};_befd ,_bbga :=_agce ._bdfcf .DecodeInt (_agce ._gegf );if _bbga !=nil {return 0,_bbga ;};return int64 (_befd ),nil ;};type TextRegion struct{_cfda *_afb .Reader ;RegionInfo *RegionSegment ;SbrTemplate int8 ;SbDsOffset int8 ;DefaultPixel int8 ;CombinationOperator _e .CombinationOperator ;
IsTransposed int8 ;ReferenceCorner int16 ;LogSBStrips int16 ;UseRefinement bool ;IsHuffmanEncoded bool ;SbHuffRSize int8 ;SbHuffRDY int8 ;SbHuffRDX int8 ;SbHuffRDHeight int8 ;SbHuffRDWidth int8 ;SbHuffDT int8 ;SbHuffDS int8 ;SbHuffFS int8 ;SbrATX []int8 ;
SbrATY []int8 ;NumberOfSymbolInstances uint32 ;_gfcg int64 ;SbStrips int8 ;NumberOfSymbols uint32 ;RegionBitmap *_e .Bitmap ;Symbols []*_e .Bitmap ;_eebc *_ag .Decoder ;_babc *GenericRefinementRegion ;_agcgg *_ag .DecoderStats ;_ggae *_ag .DecoderStats ;
_ffga *_ag .DecoderStats ;_ffce *_ag .DecoderStats ;_bfeb *_ag .DecoderStats ;_fgdce *_ag .DecoderStats ;_eage *_ag .DecoderStats ;_abec *_ag .DecoderStats ;_cfdc *_ag .DecoderStats ;_agff *_ag .DecoderStats ;_bgdc *_ag .DecoderStats ;_dcef int8 ;_accg *_ge .FixedSizeTable ;
Header *Header ;_cgad _ge .Tabler ;_bcd _ge .Tabler ;_gecb _ge .Tabler ;_gaff _ge .Tabler ;_aade _ge .Tabler ;_bbbb _ge .Tabler ;_aeeb _ge .Tabler ;_eege _ge .Tabler ;_dgeae ,_bbgaa map[int ]int ;_gdgd []int ;_daaed *_e .Points ;_dfcb *_e .Bitmaps ;_gbf *_ac .IntSlice ;
_fbae ,_bcbf int ;_bdcb *_e .Boxes ;};type Documenter interface{GetPage (int )(Pager ,error );GetGlobalSegment (int )(*Header ,error );};func (_agfe *SymbolDictionary )decodeHeightClassCollectiveBitmap (_babe int64 ,_ffcd ,_abf uint32 )(*_e .Bitmap ,error ){if _babe ==0{_afec :=_e .New (int (_abf ),int (_ffcd ));
var (_acfc byte ;_gbef error ;);for _gfae :=0;_gfae < len (_afec .Data );_gfae ++{_acfc ,_gbef =_agfe ._edgc .ReadByte ();if _gbef !=nil {return nil ,_gbef ;};if _gbef =_afec .SetByte (_gfae ,_acfc );_gbef !=nil {return nil ,_gbef ;};};return _afec ,nil ;
};if _agfe ._ffea ==nil {_agfe ._ffea =NewGenericRegion (_agfe ._edgc );};_agfe ._ffea .setParameters (true ,_agfe ._edgc .AbsolutePosition (),_babe ,_ffcd ,_abf );_agaf ,_dgc :=_agfe ._ffea .GetRegionBitmap ();if _dgc !=nil {return nil ,_dgc ;};return _agaf ,nil ;
};func (_gccb *PatternDictionary )parseHeader ()error {_cb .Log .Trace ("\u005b\u0050\u0041\u0054\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054I\u004f\u004e\u0041\u0052\u0059\u005d[\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d\u0020b\u0065\u0067\u0069\u006e");
defer func (){_cb .Log .Trace ("\u005b\u0050\u0041T\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u005b\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
}();_ ,_edge :=_gccb ._dega .ReadBits (5);if _edge !=nil {return _edge ;};if _edge =_gccb .readTemplate ();_edge !=nil {return _edge ;};if _edge =_gccb .readIsMMREncoded ();_edge !=nil {return _edge ;};if _edge =_gccb .readPatternWidthAndHeight ();_edge !=nil {return _edge ;
};if _edge =_gccb .readGrayMax ();_edge !=nil {return _edge ;};if _edge =_gccb .computeSegmentDataStructure ();_edge !=nil {return _edge ;};return _gccb .checkInput ();};func (_cbda *Header )readSegmentNumber (_gffb *_afb .Reader )error {const _efbae ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";
_bgef :=make ([]byte ,4);_ ,_fee :=_gffb .Read (_bgef );if _fee !=nil {return _fcf .Wrap (_fee ,_efbae ,"");};_cbda .SegmentNumber =_dd .BigEndian .Uint32 (_bgef );return nil ;};type templater interface{form (_ebc ,_deg ,_bbcf ,_cbfe ,_beb int16 )int16 ;
setIndex (_gff *_ag .DecoderStats );};func (_cfeca *SymbolDictionary )decodeThroughTextRegion (_agga ,_gbgae ,_bgbf uint32 )error {if _cfeca ._bgedb ==nil {_cfeca ._bgedb =_gfad (_cfeca ._edgc ,nil );_cfeca ._bgedb .setContexts (_cfeca ._cgda ,_ag .NewStats (512,1),_ag .NewStats (512,1),_ag .NewStats (512,1),_ag .NewStats (512,1),_cfeca ._bdedd ,_ag .NewStats (512,1),_ag .NewStats (512,1),_ag .NewStats (512,1),_ag .NewStats (512,1));
};if _fbcf :=_cfeca .setSymbolsArray ();_fbcf !=nil {return _fbcf ;};_cfeca ._bgedb .setParameters (_cfeca ._bdfcf ,_cfeca .IsHuffmanEncoded ,true ,_agga ,_gbgae ,_bgbf ,1,_cfeca ._bdfd +_cfeca ._fba ,0,0,0,1,0,0,0,0,0,0,0,0,0,_cfeca .SdrTemplate ,_cfeca .SdrATX ,_cfeca .SdrATY ,_cfeca ._aggg ,_cfeca ._ggde );
return _cfeca .addSymbol (_cfeca ._bgedb );};type TableSegment struct{_edfb *_afb .Reader ;_dabce int32 ;_gcff int32 ;_fcafb int32 ;_fbfb int32 ;_fcdg int32 ;};func (_beaf *SymbolDictionary )getUserTable (_dcfc int )(_ge .Tabler ,error ){var _bfbf int ;
for _ ,_fbge :=range _beaf .Header .RTSegments {if _fbge .Type ==53{if _bfbf ==_dcfc {_abadb ,_edggf :=_fbge .GetSegmentData ();if _edggf !=nil {return nil ,_edggf ;};_bada :=_abadb .(_ge .BasicTabler );return _ge .NewEncodedTable (_bada );};_bfbf ++;};
};return nil ,nil ;};func (_cfgg *HalftoneRegion )Init (hd *Header ,r *_afb .Reader )error {_cfgg ._afa =r ;_cfgg ._beec =hd ;_cfgg .RegionSegment =NewRegionSegment (r );return _cfgg .parseHeader ();};func (_gedd *GenericRefinementRegion )setParameters (_aga *_ag .DecoderStats ,_efab *_ag .Decoder ,_bgbg int8 ,_aef ,_fgbf uint32 ,_dge *_e .Bitmap ,_aaa ,_ceb int32 ,_ca bool ,_adf []int8 ,_dfd []int8 ){_cb .Log .Trace ("\u005b\u0047\u0045NE\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052E\u0047I\u004fN\u005d \u0073\u0065\u0074\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073");
if _aga !=nil {_gedd ._ea =_aga ;};if _efab !=nil {_gedd ._bg =_efab ;};_gedd .TemplateID =_bgbg ;_gedd .RegionInfo .BitmapWidth =_aef ;_gedd .RegionInfo .BitmapHeight =_fgbf ;_gedd .ReferenceBitmap =_dge ;_gedd .ReferenceDX =_aaa ;_gedd .ReferenceDY =_ceb ;
_gedd .IsTPGROn =_ca ;_gedd .GrAtX =_adf ;_gedd .GrAtY =_dfd ;_gedd .RegionBitmap =nil ;_cb .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073 f\u0069\u006ei\u0073\u0068\u0065\u0064\u002e\u0020\u0025\u0073",_gedd );
};func (_gfce *GenericRegion )overrideAtTemplate1 (_cgae ,_bfef ,_gge ,_dca ,_gfec int )int {_cgae &=0x1FF7;if _gfce .GBAtY [0]==0&&_gfce .GBAtX [0]>=-int8 (_gfec ){_cgae |=(_dca >>uint (7-(int8 (_gfec )+_gfce .GBAtX [0]))&0x1)<<3;}else {_cgae |=int (_gfce .getPixel (_bfef +int (_gfce .GBAtX [0]),_gge +int (_gfce .GBAtY [0])))<<3;
};return _cgae ;};func (_acag *RegionSegment )parseHeader ()error {const _dbdf ="p\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_cb .Log .Trace ("\u005b\u0052\u0045\u0047I\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002dH\u0045A\u0044\u0045\u0052\u005d\u0020\u0042\u0065g\u0069\u006e");
defer func (){_cb .Log .Trace ("\u005b\u0052\u0045G\u0049\u004f\u004e\u005d[\u0050\u0041\u0052\u0053\u0045\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");}();_cgaeb ,_acfd :=_acag ._fefd .ReadBits (32);
if _acfd !=nil {return _fcf .Wrap (_acfd ,_dbdf ,"\u0077\u0069\u0064t\u0068");};_acag .BitmapWidth =uint32 (_cgaeb &_b .MaxUint32 );_cgaeb ,_acfd =_acag ._fefd .ReadBits (32);if _acfd !=nil {return _fcf .Wrap (_acfd ,_dbdf ,"\u0068\u0065\u0069\u0067\u0068\u0074");
};_acag .BitmapHeight =uint32 (_cgaeb &_b .MaxUint32 );_cgaeb ,_acfd =_acag ._fefd .ReadBits (32);if _acfd !=nil {return _fcf .Wrap (_acfd ,_dbdf ,"\u0078\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_acag .XLocation =uint32 (_cgaeb &_b .MaxUint32 );
_cgaeb ,_acfd =_acag ._fefd .ReadBits (32);if _acfd !=nil {return _fcf .Wrap (_acfd ,_dbdf ,"\u0079\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_acag .YLocation =uint32 (_cgaeb &_b .MaxUint32 );if _ ,_acfd =_acag ._fefd .ReadBits (5);_acfd !=nil {return _fcf .Wrap (_acfd ,_dbdf ,"\u0064i\u0072\u0079\u0020\u0072\u0065\u0061d");
};if _acfd =_acag .readCombinationOperator ();_acfd !=nil {return _fcf .Wrap (_acfd ,_dbdf ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};return nil ;};func _gfad (_dfeeb *_afb .Reader ,_faff *Header )*TextRegion {_bgbda :=&TextRegion {_cfda :_dfeeb ,Header :_faff ,RegionInfo :NewRegionSegment (_dfeeb )};
return _bgbda ;};func (_ead *template1 )setIndex (_bag *_ag .DecoderStats ){_bag .SetIndex (0x080)};func NewGenericRegion (r *_afb .Reader )*GenericRegion {return &GenericRegion {RegionSegment :NewRegionSegment (r ),_bdg :r };};func (_cfec *PageInformationSegment )parseHeader ()(_ddec error ){_cb .Log .Trace ("\u005b\u0050\u0061\u0067\u0065I\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067m\u0065\u006e\u0074\u005d\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u002e\u002e");
defer func (){var _faec ="[\u0050\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072m\u0061\u0074\u0069\u006f\u006e\u0053\u0065gm\u0065\u006e\u0074\u005d \u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065ad\u0065\u0072 \u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064";
if _ddec !=nil {_faec +="\u0020\u0077\u0069t\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u0020"+_ddec .Error ();}else {_faec +="\u0020\u0073\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079";};_cb .Log .Trace (_faec );}();if _ddec =_cfec .readWidthAndHeight ();
_ddec !=nil {return _ddec ;};if _ddec =_cfec .readResolution ();_ddec !=nil {return _ddec ;};_ ,_ddec =_cfec ._cgbaf .ReadBit ();if _ddec !=nil {return _ddec ;};if _ddec =_cfec .readCombinationOperatorOverrideAllowed ();_ddec !=nil {return _ddec ;};if _ddec =_cfec .readRequiresAuxiliaryBuffer ();
_ddec !=nil {return _ddec ;};if _ddec =_cfec .readCombinationOperator ();_ddec !=nil {return _ddec ;};if _ddec =_cfec .readDefaultPixelValue ();_ddec !=nil {return _ddec ;};if _ddec =_cfec .readContainsRefinement ();_ddec !=nil {return _ddec ;};if _ddec =_cfec .readIsLossless ();
_ddec !=nil {return _ddec ;};if _ddec =_cfec .readIsStriped ();_ddec !=nil {return _ddec ;};if _ddec =_cfec .readMaxStripeSize ();_ddec !=nil {return _ddec ;};if _ddec =_cfec .checkInput ();_ddec !=nil {return _ddec ;};_cb .Log .Trace ("\u0025\u0073",_cfec );
return nil ;};func (_dfdd *RegionSegment )Encode (w _afb .BinaryWriter )(_aac int ,_cfgc error ){const _eaff ="R\u0065g\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065n\u0074\u002e\u0045\u006eco\u0064\u0065";_dadc :=make ([]byte ,4);_dd .BigEndian .PutUint32 (_dadc ,_dfdd .BitmapWidth );
_aac ,_cfgc =w .Write (_dadc );if _cfgc !=nil {return 0,_fcf .Wrap (_cfgc ,_eaff ,"\u0057\u0069\u0064t\u0068");};_dd .BigEndian .PutUint32 (_dadc ,_dfdd .BitmapHeight );var _aed int ;_aed ,_cfgc =w .Write (_dadc );if _cfgc !=nil {return 0,_fcf .Wrap (_cfgc ,_eaff ,"\u0048\u0065\u0069\u0067\u0068\u0074");
};_aac +=_aed ;_dd .BigEndian .PutUint32 (_dadc ,_dfdd .XLocation );_aed ,_cfgc =w .Write (_dadc );if _cfgc !=nil {return 0,_fcf .Wrap (_cfgc ,_eaff ,"\u0058L\u006f\u0063\u0061\u0074\u0069\u006fn");};_aac +=_aed ;_dd .BigEndian .PutUint32 (_dadc ,_dfdd .YLocation );
_aed ,_cfgc =w .Write (_dadc );if _cfgc !=nil {return 0,_fcf .Wrap (_cfgc ,_eaff ,"\u0059L\u006f\u0063\u0061\u0074\u0069\u006fn");};_aac +=_aed ;if _cfgc =w .WriteByte (byte (_dfdd .CombinaionOperator )&0x07);_cfgc !=nil {return 0,_fcf .Wrap (_cfgc ,_eaff ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");
};_aac ++;return _aac ,nil ;};func (_cebe *template0 )setIndex (_cde *_ag .DecoderStats ){_cde .SetIndex (0x100)};type GenericRefinementRegion struct{_agg templater ;_gb templater ;_ga *_afb .Reader ;_gbe *Header ;RegionInfo *RegionSegment ;IsTPGROn bool ;
TemplateID int8 ;Template templater ;GrAtX []int8 ;GrAtY []int8 ;RegionBitmap *_e .Bitmap ;ReferenceBitmap *_e .Bitmap ;ReferenceDX int32 ;ReferenceDY int32 ;_bg *_ag .Decoder ;_ea *_ag .DecoderStats ;_eac bool ;_fd []bool ;};func (_gdbe *HalftoneRegion )renderPattern (_dfbe [][]int )(_dgab error ){var _abeg ,_eaa int ;
for _egdd :=0;_egdd < int (_gdbe .HGridHeight );_egdd ++{for _caeb :=0;_caeb < int (_gdbe .HGridWidth );_caeb ++{_abeg =_gdbe .computeX (_egdd ,_caeb );_eaa =_gdbe .computeY (_egdd ,_caeb );_fbgd :=_gdbe .Patterns [_dfbe [_egdd ][_caeb ]];if _dgab =_e .Blit (_fbgd ,_gdbe .HalftoneRegionBitmap ,_abeg +int (_gdbe .HGridX ),_eaa +int (_gdbe .HGridY ),_gdbe .CombinationOperator );
_dgab !=nil {return _dgab ;};};};return nil ;};func (_ddge *Header )writeReferredToSegments (_egfbd _afb .BinaryWriter )(_aecg int ,_fcbg error ){const _cbag ="\u0077\u0072\u0069te\u0052\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
var (_dcdec uint16 ;_egcef uint32 ;);_afed :=_ddge .referenceSize ();_fad :=1;_aebg :=make ([]byte ,_afed );for _ ,_efabb :=range _ddge .RTSNumbers {switch _afed {case 4:_egcef =uint32 (_efabb );_dd .BigEndian .PutUint32 (_aebg ,_egcef );_fad ,_fcbg =_egfbd .Write (_aebg );
if _fcbg !=nil {return 0,_fcf .Wrap (_fcbg ,_cbag ,"u\u0069\u006e\u0074\u0033\u0032\u0020\u0073\u0069\u007a\u0065");};case 2:_dcdec =uint16 (_efabb );_dd .BigEndian .PutUint16 (_aebg ,_dcdec );_fad ,_fcbg =_egfbd .Write (_aebg );if _fcbg !=nil {return 0,_fcf .Wrap (_fcbg ,_cbag ,"\u0075\u0069\u006e\u0074\u0031\u0036");
};default:if _fcbg =_egfbd .WriteByte (byte (_efabb ));_fcbg !=nil {return 0,_fcf .Wrap (_fcbg ,_cbag ,"\u0075\u0069\u006et\u0038");};};_aecg +=_fad ;};return _aecg ,nil ;};func (_effa *PatternDictionary )readTemplate ()error {_cfc ,_eee :=_effa ._dega .ReadBits (2);
if _eee !=nil {return _eee ;};_effa .HDTemplate =byte (_cfc );return nil ;};func (_adag *SymbolDictionary )decodeDifferenceWidth ()(int64 ,error ){if _adag .IsHuffmanEncoded {switch _adag .SdHuffDecodeWidthSelection {case 0:_afcb ,_dffgd :=_ge .GetStandardTable (2);
if _dffgd !=nil {return 0,_dffgd ;};return _afcb .Decode (_adag ._edgc );case 1:_ffff ,_gaefg :=_ge .GetStandardTable (3);if _gaefg !=nil {return 0,_gaefg ;};return _ffff .Decode (_adag ._edgc );case 3:if _adag ._gefb ==nil {var _fcafe int ;if _adag .SdHuffDecodeHeightSelection ==3{_fcafe ++;
};_ggdg ,_ebdb :=_adag .getUserTable (_fcafe );if _ebdb !=nil {return 0,_ebdb ;};_adag ._gefb =_ggdg ;};return _adag ._gefb .Decode (_adag ._edgc );};}else {_bcef ,_cfcg :=_adag ._bdfcf .DecodeInt (_adag ._cbfa );if _cfcg !=nil {return 0,_cfcg ;};return int64 (_bcef ),nil ;
};return 0,nil ;};func (_bcgd *PageInformationSegment )Init (h *Header ,r *_afb .Reader )(_egbg error ){_bcgd ._cgbaf =r ;if _egbg =_bcgd .parseHeader ();_egbg !=nil {return _fcf .Wrap (_egbg ,"P\u0061\u0067\u0065\u0049\u006e\u0066o\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065g\u006d\u0065\u006et\u002eI\u006e\u0069\u0074","");
};return nil ;};func (_efgd *PageInformationSegment )Size ()int {return 19};var (_ Regioner =&TextRegion {};_ Segmenter =&TextRegion {};);func (_gbec *PageInformationSegment )encodeStripingInformation (_dcag _afb .BinaryWriter )(_fbbb int ,_egae error ){const _dcab ="\u0065n\u0063\u006f\u0064\u0065S\u0074\u0072\u0069\u0070\u0069n\u0067I\u006ef\u006f\u0072\u006d\u0061\u0074\u0069\u006fn";
if !_gbec .IsStripe {if _fbbb ,_egae =_dcag .Write ([]byte {0x00,0x00});_egae !=nil {return 0,_fcf .Wrap (_egae ,_dcab ,"n\u006f\u0020\u0073\u0074\u0072\u0069\u0070\u0069\u006e\u0067");};return _fbbb ,nil ;};_fdcc :=make ([]byte ,2);_dd .BigEndian .PutUint16 (_fdcc ,_gbec .MaxStripeSize |1<<15);
if _fbbb ,_egae =_dcag .Write (_fdcc );_egae !=nil {return 0,_fcf .Wrapf (_egae ,_dcab ,"\u0073\u0074\u0072i\u0070\u0069\u006e\u0067\u003a\u0020\u0025\u0064",_gbec .MaxStripeSize );};return _fbbb ,nil ;};func (_bacd *SymbolDictionary )Encode (w _afb .BinaryWriter )(_gcag int ,_fbda error ){const _abdf ="\u0053\u0079\u006dbo\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0045\u006e\u0063\u006f\u0064\u0065";
if _bacd ==nil {return 0,_fcf .Error (_abdf ,"\u0073\u0079m\u0062\u006f\u006c\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066in\u0065\u0064");};if _gcag ,_fbda =_bacd .encodeFlags (w );_fbda !=nil {return _gcag ,_fcf .Wrap (_fbda ,_abdf ,"");
};_ccdd ,_fbda :=_bacd .encodeATFlags (w );if _fbda !=nil {return _gcag ,_fcf .Wrap (_fbda ,_abdf ,"");};_gcag +=_ccdd ;if _ccdd ,_fbda =_bacd .encodeRefinementATFlags (w );_fbda !=nil {return _gcag ,_fcf .Wrap (_fbda ,_abdf ,"");};_gcag +=_ccdd ;if _ccdd ,_fbda =_bacd .encodeNumSyms (w );
_fbda !=nil {return _gcag ,_fcf .Wrap (_fbda ,_abdf ,"");};_gcag +=_ccdd ;if _ccdd ,_fbda =_bacd .encodeSymbols (w );_fbda !=nil {return _gcag ,_fcf .Wrap (_fbda ,_abdf ,"");};_gcag +=_ccdd ;return _gcag ,nil ;};func NewRegionSegment (r *_afb .Reader )*RegionSegment {return &RegionSegment {_fefd :r }};
func (_bbdf *SymbolDictionary )setRefinementAtPixels ()error {if !_bbdf .UseRefinementAggregation ||_bbdf .SdrTemplate !=0{return nil ;};if _eged :=_bbdf .readRefinementAtPixels (2);_eged !=nil {return _eged ;};return nil ;};func (_dbbbe *SymbolDictionary )huffDecodeRefAggNInst ()(int64 ,error ){if !_dbbbe .SdHuffAggInstanceSelection {_cfag ,_efd :=_ge .GetStandardTable (1);
if _efd !=nil {return 0,_efd ;};return _cfag .Decode (_dbbbe ._edgc );};if _dbbbe ._efbf ==nil {var (_gecc int ;_cfaf error ;);if _dbbbe .SdHuffDecodeHeightSelection ==3{_gecc ++;};if _dbbbe .SdHuffDecodeWidthSelection ==3{_gecc ++;};if _dbbbe .SdHuffBMSizeSelection ==3{_gecc ++;
};_dbbbe ._efbf ,_cfaf =_dbbbe .getUserTable (_gecc );if _cfaf !=nil {return 0,_cfaf ;};};return _dbbbe ._efbf .Decode (_dbbbe ._edgc );};func (_dddgc *Header )readHeaderFlags ()error {const _dada ="\u0072e\u0061d\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006c\u0061\u0067\u0073";
_bfee ,_aee :=_dddgc .Reader .ReadBit ();if _aee !=nil {return _fcf .Wrap (_aee ,_dada ,"r\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067");};if _bfee !=0{_dddgc .RetainFlag =true ;};_bfee ,_aee =_dddgc .Reader .ReadBit ();if _aee !=nil {return _fcf .Wrap (_aee ,_dada ,"\u0070\u0061g\u0065\u0020\u0061s\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e");
};if _bfee !=0{_dddgc .PageAssociationFieldSize =true ;};_egbb ,_aee :=_dddgc .Reader .ReadBits (6);if _aee !=nil {return _fcf .Wrap (_aee ,_dada ,"\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065");};_dddgc .Type =Type (int (_egbb ));
return nil ;};func (_ccbgb *TextRegion )readRegionFlags ()error {var (_aege int ;_adgg uint64 ;_cdae error ;);_aege ,_cdae =_ccbgb ._cfda .ReadBit ();if _cdae !=nil {return _cdae ;};_ccbgb .SbrTemplate =int8 (_aege );_adgg ,_cdae =_ccbgb ._cfda .ReadBits (5);
if _cdae !=nil {return _cdae ;};_ccbgb .SbDsOffset =int8 (_adgg );if _ccbgb .SbDsOffset > 0x0f{_ccbgb .SbDsOffset -=0x20;};_aege ,_cdae =_ccbgb ._cfda .ReadBit ();if _cdae !=nil {return _cdae ;};_ccbgb .DefaultPixel =int8 (_aege );_adgg ,_cdae =_ccbgb ._cfda .ReadBits (2);
if _cdae !=nil {return _cdae ;};_ccbgb .CombinationOperator =_e .CombinationOperator (int (_adgg )&0x3);_aege ,_cdae =_ccbgb ._cfda .ReadBit ();if _cdae !=nil {return _cdae ;};_ccbgb .IsTransposed =int8 (_aege );_adgg ,_cdae =_ccbgb ._cfda .ReadBits (2);
if _cdae !=nil {return _cdae ;};_ccbgb .ReferenceCorner =int16 (_adgg )&0x3;_adgg ,_cdae =_ccbgb ._cfda .ReadBits (2);if _cdae !=nil {return _cdae ;};_ccbgb .LogSBStrips =int16 (_adgg )&0x3;_ccbgb .SbStrips =1<<uint (_ccbgb .LogSBStrips );_aege ,_cdae =_ccbgb ._cfda .ReadBit ();
if _cdae !=nil {return _cdae ;};if _aege ==1{_ccbgb .UseRefinement =true ;};_aege ,_cdae =_ccbgb ._cfda .ReadBit ();if _cdae !=nil {return _cdae ;};if _aege ==1{_ccbgb .IsHuffmanEncoded =true ;};return nil ;};func (_egd *template1 )form (_eace ,_bbe ,_ege ,_acec ,_gad int16 )int16 {return ((_eace &0x02)<<8)|(_bbe <<6)|((_ege &0x03)<<4)|(_acec <<1)|_gad ;
};func (_ebdg *TextRegion )decodeSymInRefSize ()(int64 ,error ){const _ccaa ="\u0064e\u0063o\u0064\u0065\u0053\u0079\u006dI\u006e\u0052e\u0066\u0053\u0069\u007a\u0065";if _ebdg .SbHuffRSize ==0{_gefd ,_dfge :=_ge .GetStandardTable (1);if _dfge !=nil {return 0,_fcf .Wrap (_dfge ,_ccaa ,"");
};return _gefd .Decode (_ebdg ._cfda );};if _ebdg ._eege ==nil {var (_cdeg int ;_gbgb error ;);if _ebdg .SbHuffFS ==3{_cdeg ++;};if _ebdg .SbHuffDS ==3{_cdeg ++;};if _ebdg .SbHuffDT ==3{_cdeg ++;};if _ebdg .SbHuffRDWidth ==3{_cdeg ++;};if _ebdg .SbHuffRDHeight ==3{_cdeg ++;
};if _ebdg .SbHuffRDX ==3{_cdeg ++;};if _ebdg .SbHuffRDY ==3{_cdeg ++;};_ebdg ._eege ,_gbgb =_ebdg .getUserTable (_cdeg );if _gbgb !=nil {return 0,_fcf .Wrap (_gbgb ,_ccaa ,"");};};_cccbf ,_fgdb :=_ebdg ._eege .Decode (_ebdg ._cfda );if _fgdb !=nil {return 0,_fcf .Wrap (_fgdb ,_ccaa ,"");
};return _cccbf ,nil ;};func (_bdbc *PatternDictionary )computeSegmentDataStructure ()error {_bdbc .DataOffset =_bdbc ._dega .AbsolutePosition ();_bdbc .DataHeaderLength =_bdbc .DataOffset -_bdbc .DataHeaderOffset ;_bdbc .DataLength =int64 (_bdbc ._dega .AbsoluteLength ())-_bdbc .DataHeaderLength ;
return nil ;};func (_ceeg *PageInformationSegment )readDefaultPixelValue ()error {_cafc ,_dbbg :=_ceeg ._cgbaf .ReadBit ();if _dbbg !=nil {return _dbbg ;};_ceeg .DefaultPixelValue =uint8 (_cafc &0xf);return nil ;};func (_dadf *GenericRefinementRegion )getGrReference ()(*_e .Bitmap ,error ){segments :=_dadf ._gbe .RTSegments ;
if len (segments )==0{return nil ,_af .New ("\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0065\u0078is\u0074\u0073");};_ebe ,_ce :=segments [0].GetSegmentData ();
if _ce !=nil {return nil ,_ce ;};_bee ,_ddg :=_ebe .(Regioner );if !_ddg {return nil ,_c .Errorf ("\u0072\u0065\u0066\u0065\u0072r\u0065\u0064\u0020\u0074\u006f\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_ebe );
};return _bee .GetRegionBitmap ();};func (_ccfff *PageInformationSegment )readIsStriped ()error {_dbdc ,_fgba :=_ccfff ._cgbaf .ReadBit ();if _fgba !=nil {return _fgba ;};if _dbdc ==1{_ccfff .IsStripe =true ;};return nil ;};func (_bgdb *TextRegion )parseHeader ()error {var _cbfc error ;
_cb .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069n\u0073\u002e\u002e\u002e");defer func (){if _cbfc !=nil {_cb .Log .Trace ("\u005b\u0054\u0045\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044E\u0052\u005d\u0020\u0066\u0061i\u006c\u0065d\u002e\u0020\u0025\u0076",_cbfc );
}else {_cb .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069s\u0068\u0065\u0064\u002e");};}();if _cbfc =_bgdb .RegionInfo .parseHeader ();
_cbfc !=nil {return _cbfc ;};if _cbfc =_bgdb .readRegionFlags ();_cbfc !=nil {return _cbfc ;};if _bgdb .IsHuffmanEncoded {if _cbfc =_bgdb .readHuffmanFlags ();_cbfc !=nil {return _cbfc ;};};if _cbfc =_bgdb .readUseRefinement ();_cbfc !=nil {return _cbfc ;
};if _cbfc =_bgdb .readAmountOfSymbolInstances ();_cbfc !=nil {return _cbfc ;};if _cbfc =_bgdb .getSymbols ();_cbfc !=nil {return _cbfc ;};if _cbfc =_bgdb .computeSymbolCodeLength ();_cbfc !=nil {return _cbfc ;};if _cbfc =_bgdb .checkInput ();_cbfc !=nil {return _cbfc ;
};_cb .Log .Trace ("\u0025\u0073",_bgdb .String ());return nil ;};func (_babfb *TextRegion )computeSymbolCodeLength ()error {if _babfb .IsHuffmanEncoded {return _babfb .symbolIDCodeLengths ();};_babfb ._dcef =int8 (_b .Ceil (_b .Log (float64 (_babfb .NumberOfSymbols ))/_b .Log (2)));
return nil ;};func (_fddb *TextRegion )setContexts (_cfdca *_ag .DecoderStats ,_adge *_ag .DecoderStats ,_cbab *_ag .DecoderStats ,_bcgb *_ag .DecoderStats ,_edeb *_ag .DecoderStats ,_fdec *_ag .DecoderStats ,_afgcg *_ag .DecoderStats ,_dggab *_ag .DecoderStats ,_ffeaa *_ag .DecoderStats ,_eabb *_ag .DecoderStats ){_fddb ._agcgg =_adge ;
_fddb ._ggae =_cbab ;_fddb ._ffga =_bcgb ;_fddb ._ffce =_edeb ;_fddb ._fgdce =_afgcg ;_fddb ._eage =_dggab ;_fddb ._abec =_fdec ;_fddb ._cfdc =_ffeaa ;_fddb ._agff =_eabb ;_fddb ._bgdc =_cfdca ;};func (_gfcbb *TextRegion )decodeRdh ()(int64 ,error ){const _gfde ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064h";
if _gfcbb .IsHuffmanEncoded {if _gfcbb .SbHuffRDHeight ==3{if _gfcbb ._aade ==nil {var (_dbgee int ;_aabb error ;);if _gfcbb .SbHuffFS ==3{_dbgee ++;};if _gfcbb .SbHuffDS ==3{_dbgee ++;};if _gfcbb .SbHuffDT ==3{_dbgee ++;};if _gfcbb .SbHuffRDWidth ==3{_dbgee ++;
};_gfcbb ._aade ,_aabb =_gfcbb .getUserTable (_dbgee );if _aabb !=nil {return 0,_fcf .Wrap (_aabb ,_gfde ,"");};};return _gfcbb ._aade .Decode (_gfcbb ._cfda );};_adac ,_gage :=_ge .GetStandardTable (14+int (_gfcbb .SbHuffRDHeight ));if _gage !=nil {return 0,_fcf .Wrap (_gage ,_gfde ,"");
};return _adac .Decode (_gfcbb ._cfda );};_dabe ,_agec :=_gfcbb ._eebc .DecodeInt (_gfcbb ._eage );if _agec !=nil {return 0,_fcf .Wrap (_agec ,_gfde ,"");};return int64 (_dabe ),nil ;};func (_eegb *PatternDictionary )Init (h *Header ,r *_afb .Reader )error {_eegb ._dega =r ;
return _eegb .parseHeader ();};func (_ecgc *TextRegion )decodeSymbolInstances ()error {_abfe ,_cdcefc :=_ecgc .decodeStripT ();if _cdcefc !=nil {return _cdcefc ;};var (_ddad int64 ;_ababa uint32 ;);for _ababa < _ecgc .NumberOfSymbolInstances {_fefc ,_fgag :=_ecgc .decodeDT ();
if _fgag !=nil {return _fgag ;};_abfe +=_fefc ;var _bdfdc int64 ;_edbb :=true ;_ecgc ._gfcg =0;for {if _edbb {_bdfdc ,_fgag =_ecgc .decodeDfs ();if _fgag !=nil {return _fgag ;};_ddad +=_bdfdc ;_ecgc ._gfcg =_ddad ;_edbb =false ;}else {_faaf ,_dadfc :=_ecgc .decodeIds ();
if _da .Is (_dadfc ,_gd .ErrOOB ){break ;};if _dadfc !=nil {return _dadfc ;};if _ababa >=_ecgc .NumberOfSymbolInstances {break ;};_ecgc ._gfcg +=_faaf +int64 (_ecgc .SbDsOffset );};_eafff ,_gccc :=_ecgc .decodeCurrentT ();if _gccc !=nil {return _gccc ;
};_bedd :=_abfe +_eafff ;_dgce ,_gccc :=_ecgc .decodeID ();if _gccc !=nil {return _gccc ;};_dagg ,_gccc :=_ecgc .decodeRI ();if _gccc !=nil {return _gccc ;};_baga ,_gccc :=_ecgc .decodeIb (_dagg ,_dgce );if _gccc !=nil {return _gccc ;};if _gccc =_ecgc .blit (_baga ,_bedd );
_gccc !=nil {return _gccc ;};_ababa ++;};};return nil ;};func (_aaab *PageInformationSegment )readResolution ()error {_cgfb ,_bbcfd :=_aaab ._cgbaf .ReadBits (32);if _bbcfd !=nil {return _bbcfd ;};_aaab .ResolutionX =int (_cgfb &_b .MaxInt32 );_cgfb ,_bbcfd =_aaab ._cgbaf .ReadBits (32);
if _bbcfd !=nil {return _bbcfd ;};_aaab .ResolutionY =int (_cgfb &_b .MaxInt32 );return nil ;};func (_gagef *TextRegion )readAmountOfSymbolInstances ()error {_dcae ,_gcde :=_gagef ._cfda .ReadBits (32);if _gcde !=nil {return _gcde ;};_gagef .NumberOfSymbolInstances =uint32 (_dcae &_b .MaxUint32 );
_caae :=_gagef .RegionInfo .BitmapWidth *_gagef .RegionInfo .BitmapHeight ;if _caae < _gagef .NumberOfSymbolInstances {_cb .Log .Debug ("\u004c\u0069\u006d\u0069t\u0069\u006e\u0067\u0020t\u0068\u0065\u0020n\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020d\u0065\u0063\u006f\u0064e\u0064\u0020\u0073\u0079m\u0062\u006f\u006c\u0020\u0069n\u0073\u0074\u0061\u006e\u0063\u0065\u0073 \u0074\u006f\u0020\u006f\u006ee\u0020\u0070\u0065\u0072\u0020\u0070\u0069\u0078\u0065l\u0020\u0028\u0020\u0025\u0064\u0020\u0069\u006e\u0073\u0074\u0065\u0061\u0064\u0020\u006f\u0066\u0020\u0025\u0064\u0029",_caae ,_gagef .NumberOfSymbolInstances );
_gagef .NumberOfSymbolInstances =_caae ;};return nil ;};type Pager interface{GetSegment (int )(*Header ,error );GetBitmap ()(*_e .Bitmap ,error );};var _ _ge .BasicTabler =&TableSegment {};func (_ggba *Header )readHeaderLength (_efcb *_afb .Reader ,_acda int64 ){_ggba .HeaderLength =_efcb .AbsolutePosition ()-_acda ;
};func (_aace *RegionSegment )String ()string {_aafd :=&_a .Builder {};_aafd .WriteString ("\u0009[\u0052E\u0047\u0049\u004f\u004e\u0020S\u0045\u0047M\u0045\u004e\u0054\u005d\u000a");_aafd .WriteString (_c .Sprintf ("\t\u0009\u002d\u0020\u0042\u0069\u0074m\u0061\u0070\u0020\u0028\u0077\u0069d\u0074\u0068\u002c\u0020\u0068\u0065\u0069g\u0068\u0074\u0029\u0020\u005b\u0025\u0064\u0078\u0025\u0064]\u000a",_aace .BitmapWidth ,_aace .BitmapHeight ));
_aafd .WriteString (_c .Sprintf ("\u0009\u0009\u002d\u0020L\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0028\u0078,\u0079)\u003a\u0020\u005b\u0025\u0064\u002c\u0025d\u005d\u000a",_aace .XLocation ,_aace .YLocation ));_aafd .WriteString (_c .Sprintf ("\t\u0009\u002d\u0020\u0043\u006f\u006db\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070e\u0072\u0061\u0074o\u0072:\u0020\u0025\u0073",_aace .CombinaionOperator ));
return _aafd .String ();};func (_cae *HalftoneRegion )combineGrayscalePlanes (_aea []*_e .Bitmap ,_cdg int )error {_deeb :=0;for _ada :=0;_ada < _aea [_cdg ].Height ;_ada ++{for _bged :=0;_bged < _aea [_cdg ].Width ;_bged +=8{_fcda ,_eadf :=_aea [_cdg +1].GetByte (_deeb );
if _eadf !=nil {return _eadf ;};_caf ,_eadf :=_aea [_cdg ].GetByte (_deeb );if _eadf !=nil {return _eadf ;};_eadf =_aea [_cdg ].SetByte (_deeb ,_e .CombineBytes (_caf ,_fcda ,_e .CmbOpXor ));if _eadf !=nil {return _eadf ;};_deeb ++;};};return nil ;};func (_abdge *SymbolDictionary )getSbSymCodeLen ()int8 {_ced :=int8 (_b .Ceil (_b .Log (float64 (_abdge ._bdfd +_abdge .NumberOfNewSymbols ))/_b .Log (2)));
if _abdge .IsHuffmanEncoded &&_ced < 1{return 1;};return _ced ;};func (_gggfg *TableSegment )HtPS ()int32 {return _gggfg ._gcff };func (_fbbd *TextRegion )Init (header *Header ,r *_afb .Reader )error {_fbbd .Header =header ;_fbbd ._cfda =r ;_fbbd .RegionInfo =NewRegionSegment (_fbbd ._cfda );
return _fbbd .parseHeader ();};func (_eefe *TextRegion )decodeRI ()(int64 ,error ){if !_eefe .UseRefinement {return 0,nil ;};if _eefe .IsHuffmanEncoded {_gfddd ,_efcfd :=_eefe ._cfda .ReadBit ();return int64 (_gfddd ),_efcfd ;};_deda ,_fdbb :=_eefe ._eebc .DecodeInt (_eefe ._bfeb );
return int64 (_deda ),_fdbb ;};func (_daga *HalftoneRegion )computeGrayScalePlanes (_acaa []*_e .Bitmap ,_defg int )([][]int ,error ){_aebf :=make ([][]int ,_daga .HGridHeight );for _cff :=0;_cff < len (_aebf );_cff ++{_aebf [_cff ]=make ([]int ,_daga .HGridWidth );
};for _cbacb :=0;_cbacb < int (_daga .HGridHeight );_cbacb ++{for _caag :=0;_caag < int (_daga .HGridWidth );_caag +=8{var _eagff int ;if _ggca :=int (_daga .HGridWidth )-_caag ;_ggca > 8{_eagff =8;}else {_eagff =_ggca ;};_bca :=_acaa [0].GetByteIndex (_caag ,_cbacb );
for _eefc :=0;_eefc < _eagff ;_eefc ++{_age :=_eefc +_caag ;_aebf [_cbacb ][_age ]=0;for _ccff :=0;_ccff < _defg ;_ccff ++{_dage ,_bde :=_acaa [_ccff ].GetByte (_bca );if _bde !=nil {return nil ,_bde ;};_dcf :=_dage >>uint (7-_age &7);_eadd :=_dcf &1;_dffd :=1<<uint (_ccff );
_feg :=int (_eadd )*_dffd ;_aebf [_cbacb ][_age ]+=_feg ;};};};};return _aebf ,nil ;};func (_cgage *SymbolDictionary )String ()string {_cgfc :=&_a .Builder {};_cgfc .WriteString ("\n\u005b\u0053\u0059\u004dBO\u004c-\u0044\u0049\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u000a");
_cgfc .WriteString (_c .Sprintf ("\u0009-\u0020S\u0064\u0072\u0054\u0065\u006dp\u006c\u0061t\u0065\u0020\u0025\u0076\u000a",_cgage .SdrTemplate ));_cgfc .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0025\u0076\u000a",_cgage .SdTemplate ));
_cgfc .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006eg\u0043\u006f\u006e\u0074\u0065\u0078\u0074R\u0065\u0074\u0061\u0069\u006e\u0065\u0064\u0020\u0025\u0076\u000a",_cgage ._cbdc ));_cgfc .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074\u0065\u0078\u0074\u0055\u0073\u0065\u0064 \u0025\u0076\u000a",_cgage ._cgaf ));
_cgfc .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_cgage .SdHuffAggInstanceSelection ));
_cgfc .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0053d\u0048\u0075\u0066\u0066\u0042\u004d\u0053\u0069\u007a\u0065S\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020%\u0076\u000a",_cgage .SdHuffBMSizeSelection ));_cgfc .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_cgage .SdHuffDecodeWidthSelection ));
_cgfc .WriteString (_c .Sprintf ("\u0009\u002d\u0020Sd\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064e\u0048e\u0069g\u0068t\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_cgage .SdHuffDecodeHeightSelection ));_cgfc .WriteString (_c .Sprintf ("\u0009\u002d\u0020U\u0073\u0065\u0052\u0065f\u0069\u006e\u0065\u006d\u0065\u006e\u0074A\u0067\u0067\u0072\u0065\u0067\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_cgage .UseRefinementAggregation ));
_cgfc .WriteString (_c .Sprintf ("\u0009\u002d\u0020is\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045\u006e\u0063\u006f\u0064\u0065\u0064\u0020\u0025\u0076\u000a",_cgage .IsHuffmanEncoded ));_cgfc .WriteString (_c .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_cgage .SdATX ));
_cgfc .WriteString (_c .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_cgage .SdATY ));_cgfc .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_cgage .SdrATX ));
_cgfc .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_cgage .SdrATY ));_cgfc .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u004e\u0075\u006d\u0062\u0065\u0072\u004ff\u0045\u0078\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_cgage .NumberOfExportedSymbols ));
_cgfc .WriteString (_c .Sprintf ("\u0009-\u0020\u004e\u0075\u006db\u0065\u0072\u004f\u0066\u004ee\u0077S\u0079m\u0062\u006f\u006c\u0073\u0020\u0025\u0076\n",_cgage .NumberOfNewSymbols ));_cgfc .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u004ff\u0049\u006d\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_cgage ._bdfd ));
_cgfc .WriteString (_c .Sprintf ("\u0009\u002d \u006e\u0075\u006d\u0062\u0065\u0072\u004f\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0064\u0053\u0079\u006d\u0062\u006f\u006c\u0073 %\u0076\u000a",_cgage ._fba ));return _cgfc .String ();};func (_dbe *HalftoneRegion )grayScaleDecoding (_cegb int )([][]int ,error ){var (_ebfe []int8 ;
_dfbc []int8 ;);if !_dbe .IsMMREncoded {_ebfe =make ([]int8 ,4);_dfbc =make ([]int8 ,4);if _dbe .HTemplate <=1{_ebfe [0]=3;}else if _dbe .HTemplate >=2{_ebfe [0]=2;};_dfbc [0]=-1;_ebfe [1]=-3;_dfbc [1]=-1;_ebfe [2]=2;_dfbc [2]=-2;_ebfe [3]=-2;_dfbc [3]=-2;
};_afc :=make ([]*_e .Bitmap ,_cegb );_dgge :=NewGenericRegion (_dbe ._afa );_dgge .setParametersMMR (_dbe .IsMMREncoded ,_dbe .DataOffset ,_dbe .DataLength ,_dbe .HGridHeight ,_dbe .HGridWidth ,_dbe .HTemplate ,false ,_dbe .HSkipEnabled ,_ebfe ,_dfbc );
_cbeac :=_cegb -1;var _gdg error ;_afc [_cbeac ],_gdg =_dgge .GetRegionBitmap ();if _gdg !=nil {return nil ,_gdg ;};for _cbeac > 0{_cbeac --;_dgge .Bitmap =nil ;_afc [_cbeac ],_gdg =_dgge .GetRegionBitmap ();if _gdg !=nil {return nil ,_gdg ;};if _gdg =_dbe .combineGrayscalePlanes (_afc ,_cbeac );
_gdg !=nil {return nil ,_gdg ;};};return _dbe .computeGrayScalePlanes (_afc ,_cegb );};func (_eefd *PageInformationSegment )readIsLossless ()error {_cddg ,_gdae :=_eefd ._cgbaf .ReadBit ();if _gdae !=nil {return _gdae ;};if _cddg ==1{_eefd .IsLossless =true ;
};return nil ;};type template1 struct{};func (_dbf *Header )GetSegmentData ()(Segmenter ,error ){var _beba Segmenter ;if _dbf .SegmentData !=nil {_beba =_dbf .SegmentData ;};if _beba ==nil {_aaf ,_ecbd :=_fdf [_dbf .Type ];if !_ecbd {return nil ,_c .Errorf ("\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0073\u002f\u0020\u0025\u0064\u0020\u0063\u0072e\u0061t\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e\u0020",_dbf .Type ,_dbf .Type );
};_beba =_aaf ();_cb .Log .Trace ("\u005b\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u0020\u0061\u0074\u0020\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0030\u0034\u0058",_dbf .SegmentNumber ,_dbf .SegmentDataStartOffset );
_defd ,_dfeg :=_dbf .subInputReader ();if _dfeg !=nil {return nil ,_dfeg ;};if _fgea :=_beba .Init (_dbf ,_defd );_fgea !=nil {_cb .Log .Debug ("\u0049\u006e\u0069\u0074 \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076 \u0066o\u0072\u0020\u0074\u0079\u0070\u0065\u003a \u0025\u0054",_fgea ,_beba );
return nil ,_fgea ;};_dbf .SegmentData =_beba ;};return _beba ,nil ;};func (_bf *EndOfStripe )Init (h *Header ,r *_afb .Reader )error {_bf ._ab =r ;return _bf .parseHeader ()};func (_adbec *GenericRegion )computeSegmentDataStructure ()error {_adbec .DataOffset =_adbec ._bdg .AbsolutePosition ();
_adbec .DataHeaderLength =_adbec .DataOffset -_adbec .DataHeaderOffset ;_adbec .DataLength =int64 (_adbec ._bdg .AbsoluteLength ())-_adbec .DataHeaderLength ;return nil ;};func (_fegd Type )String ()string {switch _fegd {case TSymbolDictionary :return "\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079";
case TIntermediateTextRegion :return "\u0049n\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020T\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateTextRegion :return "I\u006d\u006d\u0065\u0064ia\u0074e\u0020\u0054\u0065\u0078\u0074 \u0052\u0065\u0067\u0069\u006f\u006e";
case TImmediateLosslessTextRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020L\u006f\u0073\u0073\u006c\u0065\u0073\u0073 \u0054\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TPatternDictionary :return "\u0050a\u0074t\u0065\u0072\u006e\u0020\u0044i\u0063\u0074i\u006f\u006e\u0061\u0072\u0079";
case TIntermediateHalftoneRegion :return "\u0049\u006e\u0074\u0065r\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0048\u0061l\u0066t\u006f\u006e\u0065\u0020\u0052\u0065\u0067i\u006f\u006e";case TImmediateHalftoneRegion :return "\u0049m\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u0048\u0061l\u0066t\u006fn\u0065\u0020\u0052\u0065\u0067\u0069\u006fn";
case TImmediateLosslessHalftoneRegion :return "\u0049\u006d\u006ded\u0069\u0061\u0074\u0065\u0020\u004c\u006f\u0073\u0073l\u0065s\u0073 \u0048a\u006c\u0066\u0074\u006f\u006e\u0065\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TIntermediateGenericRegion :return "I\u006e\u0074\u0065\u0072\u006d\u0065d\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020R\u0065g\u0069\u006f\u006e";
case TImmediateGenericRegion :return "\u0049m\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006ee\u0072\u0069\u0063\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessGenericRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u004c\u006f\u0073\u0073\u006c\u0065\u0073\u0073\u0020\u0047e\u006e\u0065\u0072\u0069\u0063\u0020\u0052e\u0067\u0069\u006f\u006e";
case TIntermediateGenericRefinementRegion :return "\u0049\u006e\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0020\u0052\u0065\u0066i\u006e\u0065\u006d\u0065\u006et\u0020\u0052e\u0067\u0069\u006f\u006e";
case TImmediateGenericRefinementRegion :return "I\u006d\u006d\u0065\u0064\u0069\u0061t\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020\u0052\u0065\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020\u0052\u0065\u0067\u0069o\u006e";case TImmediateLosslessGenericRefinementRegion :return "\u0049m\u006d\u0065d\u0069\u0061\u0074\u0065 \u004c\u006f\u0073s\u006c\u0065\u0073\u0073\u0020\u0047\u0065\u006e\u0065ri\u0063\u0020\u0052e\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020R\u0065\u0067i\u006f\u006e";
case TPageInformation :return "\u0050\u0061g\u0065\u0020\u0049n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e";case TEndOfPage :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0050\u0061\u0067\u0065";case TEndOfStrip :return "\u0045\u006e\u0064 \u004f\u0066\u0020\u0053\u0074\u0072\u0069\u0070";
case TEndOfFile :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0046\u0069\u006c\u0065";case TProfiles :return "\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0073";case TTables :return "\u0054\u0061\u0062\u006c\u0065\u0073";case TExtension :return "\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn";
case TBitmap :return "\u0042\u0069\u0074\u006d\u0061\u0070";};return "I\u006ev\u0061\u006c\u0069\u0064\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0020Ki\u006e\u0064";};func (_cbc *Header )readNumberOfReferredToSegments (_baea *_afb .Reader )(uint64 ,error ){const _gggf ="\u0072\u0065\u0061\u0064\u004e\u0075\u006d\u0062\u0065\u0072O\u0066\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
_fbce ,_bacc :=_baea .ReadBits (3);if _bacc !=nil {return 0,_fcf .Wrap (_bacc ,_gggf ,"\u0063\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0072\u0074\u0073");};_fbce &=0xf;var _becc []byte ;if _fbce <=4{_becc =make ([]byte ,5);for _dgdf :=0;_dgdf <=4;_dgdf ++{_gcf ,_acb :=_baea .ReadBit ();
if _acb !=nil {return 0,_fcf .Wrap (_acb ,_gggf ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_becc [_dgdf ]=byte (_gcf );};}else {_fbce ,_bacc =_baea .ReadBits (29);if _bacc !=nil {return 0,_bacc ;};_fbce &=_b .MaxInt32 ;_gfdg :=(_fbce +8)>>3;
_gfdg <<=3;_becc =make ([]byte ,_gfdg );var _cgdb uint64 ;for _cgdb =0;_cgdb < _gfdg ;_cgdb ++{_affg ,_bgeg :=_baea .ReadBit ();if _bgeg !=nil {return 0,_fcf .Wrap (_bgeg ,_gggf ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_becc [_cgdb ]=byte (_affg );
};};return _fbce ,nil ;};func (_daa *GenericRegion )overrideAtTemplate3 (_efba ,_gcab ,_eeag ,_ebgf ,_bba int )int {_efba &=0x3EF;if _daa .GBAtY [0]==0&&_daa .GBAtX [0]>=-int8 (_bba ){_efba |=(_ebgf >>uint (7-(int8 (_bba )+_daa .GBAtX [0]))&0x1)<<4;}else {_efba |=int (_daa .getPixel (_gcab +int (_daa .GBAtX [0]),_eeag +int (_daa .GBAtY [0])))<<4;
};return _efba ;};type Type int ;func (_ebfg *SymbolDictionary )encodeFlags (_gdfe _afb .BinaryWriter )(_ccgf int ,_bfd error ){const _ecbcg ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _bfd =_gdfe .SkipBits (3);_bfd !=nil {return 0,_fcf .Wrap (_bfd ,_ecbcg ,"\u0065\u006d\u0070\u0074\u0079\u0020\u0062\u0069\u0074\u0073");
};var _ccce int ;if _ebfg .SdrTemplate > 0{_ccce =1;};if _bfd =_gdfe .WriteBit (_ccce );_bfd !=nil {return _ccgf ,_fcf .Wrap (_bfd ,_ecbcg ,"s\u0064\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_ccce =0;if _ebfg .SdTemplate > 1{_ccce =1;};
if _bfd =_gdfe .WriteBit (_ccce );_bfd !=nil {return _ccgf ,_fcf .Wrap (_bfd ,_ecbcg ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_ccce =0;if _ebfg .SdTemplate ==1||_ebfg .SdTemplate ==3{_ccce =1;};if _bfd =_gdfe .WriteBit (_ccce );
_bfd !=nil {return _ccgf ,_fcf .Wrap (_bfd ,_ecbcg ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_ccce =0;if _ebfg ._cbdc {_ccce =1;};if _bfd =_gdfe .WriteBit (_ccce );_bfd !=nil {return _ccgf ,_fcf .Wrap (_bfd ,_ecbcg ,"\u0063\u006f\u0064in\u0067\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0065\u0064");
};_ccce =0;if _ebfg ._cgaf {_ccce =1;};if _bfd =_gdfe .WriteBit (_ccce );_bfd !=nil {return _ccgf ,_fcf .Wrap (_bfd ,_ecbcg ,"\u0063\u006f\u0064\u0069ng\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0075\u0073\u0065\u0064");};_ccce =0;if _ebfg .SdHuffAggInstanceSelection {_ccce =1;
};if _bfd =_gdfe .WriteBit (_ccce );_bfd !=nil {return _ccgf ,_fcf .Wrap (_bfd ,_ecbcg ,"\u0073\u0064\u0048\u0075\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074");};_ccce =int (_ebfg .SdHuffBMSizeSelection );if _bfd =_gdfe .WriteBit (_ccce );_bfd !=nil {return _ccgf ,_fcf .Wrap (_bfd ,_ecbcg ,"\u0073\u0064\u0048u\u0066\u0066\u0042\u006d\u0053\u0069\u007a\u0065");
};_ccce =0;if _ebfg .SdHuffDecodeWidthSelection > 1{_ccce =1;};if _bfd =_gdfe .WriteBit (_ccce );_bfd !=nil {return _ccgf ,_fcf .Wrap (_bfd ,_ecbcg ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_ccce =0;switch _ebfg .SdHuffDecodeWidthSelection {case 1,3:_ccce =1;
};if _bfd =_gdfe .WriteBit (_ccce );_bfd !=nil {return _ccgf ,_fcf .Wrap (_bfd ,_ecbcg ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_ccce =0;if _ebfg .SdHuffDecodeHeightSelection > 1{_ccce =1;};if _bfd =_gdfe .WriteBit (_ccce );_bfd !=nil {return _ccgf ,_fcf .Wrap (_bfd ,_ecbcg ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");
};_ccce =0;switch _ebfg .SdHuffDecodeHeightSelection {case 1,3:_ccce =1;};if _bfd =_gdfe .WriteBit (_ccce );_bfd !=nil {return _ccgf ,_fcf .Wrap (_bfd ,_ecbcg ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_ccce =0;if _ebfg .UseRefinementAggregation {_ccce =1;
};if _bfd =_gdfe .WriteBit (_ccce );_bfd !=nil {return _ccgf ,_fcf .Wrap (_bfd ,_ecbcg ,"\u0073\u0064\u0052\u0065\u0066\u0041\u0067\u0067");};_ccce =0;if _ebfg .IsHuffmanEncoded {_ccce =1;};if _bfd =_gdfe .WriteBit (_ccce );_bfd !=nil {return _ccgf ,_fcf .Wrap (_bfd ,_ecbcg ,"\u0073\u0064\u0048\u0075\u0066\u0066");
};return 2,nil ;};func (_gbdc *template0 )form (_efc ,_fecd ,_ebg ,_bae ,_fed int16 )int16 {return (_efc <<10)|(_fecd <<7)|(_ebg <<4)|(_bae <<1)|_fed ;};func (_bagf *GenericRegion )overrideAtTemplate0a (_bbce ,_geb ,_cgdg ,_fcce ,_cacd ,_gggc int )int {if _bagf .GBAtOverride [0]{_bbce &=0xFFEF;
if _bagf .GBAtY [0]==0&&_bagf .GBAtX [0]>=-int8 (_cacd ){_bbce |=(_fcce >>uint (int8 (_gggc )-_bagf .GBAtX [0]&0x1))<<4;}else {_bbce |=int (_bagf .getPixel (_geb +int (_bagf .GBAtX [0]),_cgdg +int (_bagf .GBAtY [0])))<<4;};};if _bagf .GBAtOverride [1]{_bbce &=0xFBFF;
if _bagf .GBAtY [1]==0&&_bagf .GBAtX [1]>=-int8 (_cacd ){_bbce |=(_fcce >>uint (int8 (_gggc )-_bagf .GBAtX [1]&0x1))<<10;}else {_bbce |=int (_bagf .getPixel (_geb +int (_bagf .GBAtX [1]),_cgdg +int (_bagf .GBAtY [1])))<<10;};};if _bagf .GBAtOverride [2]{_bbce &=0xF7FF;
if _bagf .GBAtY [2]==0&&_bagf .GBAtX [2]>=-int8 (_cacd ){_bbce |=(_fcce >>uint (int8 (_gggc )-_bagf .GBAtX [2]&0x1))<<11;}else {_bbce |=int (_bagf .getPixel (_geb +int (_bagf .GBAtX [2]),_cgdg +int (_bagf .GBAtY [2])))<<11;};};if _bagf .GBAtOverride [3]{_bbce &=0x7FFF;
if _bagf .GBAtY [3]==0&&_bagf .GBAtX [3]>=-int8 (_cacd ){_bbce |=(_fcce >>uint (int8 (_gggc )-_bagf .GBAtX [3]&0x1))<<15;}else {_bbce |=int (_bagf .getPixel (_geb +int (_bagf .GBAtX [3]),_cgdg +int (_bagf .GBAtY [3])))<<15;};};return _bbce ;};func (_fcbb *TextRegion )GetRegionInfo ()*RegionSegment {return _fcbb .RegionInfo };
func (_affd *GenericRefinementRegion )Init (header *Header ,r *_afb .Reader )error {_affd ._gbe =header ;_affd ._ga =r ;_affd .RegionInfo =NewRegionSegment (r );return _affd .parseHeader ();};func (_edcf *Header )parse (_dddac Documenter ,_cfgea *_afb .Reader ,_befg int64 ,_ebcc OrganizationType )(_cgf error ){const _gfge ="\u0070\u0061\u0072s\u0065";
_cb .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u005b\u0050A\u0052\u0053\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _cgf !=nil {_cb .Log .Trace ("\u005b\u0053\u0045GM\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045R\u005d[\u0050A\u0052S\u0045\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_cgf );
}else {_cb .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052]\u005bP\u0041\u0052\u0053\u0045\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");};}();_ ,_cgf =_cfgea .Seek (_befg ,_d .SeekStart );
if _cgf !=nil {return _fcf .Wrap (_cgf ,_gfge ,"\u0073\u0065\u0065\u006b\u0020\u0073\u0074\u0061\u0072\u0074");};if _cgf =_edcf .readSegmentNumber (_cfgea );_cgf !=nil {return _fcf .Wrap (_cgf ,_gfge ,"");};if _cgf =_edcf .readHeaderFlags ();_cgf !=nil {return _fcf .Wrap (_cgf ,_gfge ,"");
};var _adef uint64 ;_adef ,_cgf =_edcf .readNumberOfReferredToSegments (_cfgea );if _cgf !=nil {return _fcf .Wrap (_cgf ,_gfge ,"");};_edcf .RTSNumbers ,_cgf =_edcf .readReferredToSegmentNumbers (_cfgea ,int (_adef ));if _cgf !=nil {return _fcf .Wrap (_cgf ,_gfge ,"");
};_cgf =_edcf .readSegmentPageAssociation (_dddac ,_cfgea ,_adef ,_edcf .RTSNumbers ...);if _cgf !=nil {return _fcf .Wrap (_cgf ,_gfge ,"");};if _edcf .Type !=TEndOfFile {if _cgf =_edcf .readSegmentDataLength (_cfgea );_cgf !=nil {return _fcf .Wrap (_cgf ,_gfge ,"");
};};_edcf .readDataStartOffset (_cfgea ,_ebcc );_edcf .readHeaderLength (_cfgea ,_befg );_cb .Log .Trace ("\u0025\u0073",_edcf );return nil ;};func (_cec *RegionSegment )Size ()int {return 17};func (_afgd *GenericRegion )decodeTemplate0b (_aefc ,_efbcf ,_bgca int ,_edc ,_abde int )(_fbb error ){const _gfg ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0062";
var (_ccbc ,_ccg int ;_gcg ,_cag int ;_cefe byte ;_bad int ;);if _aefc >=1{_cefe ,_fbb =_afgd .Bitmap .GetByte (_abde );if _fbb !=nil {return _fcf .Wrap (_fbb ,_gfg ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_gcg =int (_cefe );};if _aefc >=2{_cefe ,_fbb =_afgd .Bitmap .GetByte (_abde -_afgd .Bitmap .RowStride );
if _fbb !=nil {return _fcf .Wrap (_fbb ,_gfg ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_cag =int (_cefe )<<6;};_ccbc =(_gcg &0xf0)|(_cag &0x3800);for _dcb :=0;_dcb < _bgca ;_dcb =_bad {var (_fcafa byte ;_eae int ;);_bad =_dcb +8;if _gcb :=_efbcf -_dcb ;
_gcb > 8{_eae =8;}else {_eae =_gcb ;};if _aefc > 0{_gcg <<=8;if _bad < _efbcf {_cefe ,_fbb =_afgd .Bitmap .GetByte (_abde +1);if _fbb !=nil {return _fcf .Wrap (_fbb ,_gfg ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_gcg |=int (_cefe );};};if _aefc > 1{_cag <<=8;
if _bad < _efbcf {_cefe ,_fbb =_afgd .Bitmap .GetByte (_abde -_afgd .Bitmap .RowStride +1);if _fbb !=nil {return _fcf .Wrap (_fbb ,_gfg ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_cag |=int (_cefe )<<6;};};for _dag :=0;_dag < _eae ;_dag ++{_dcdd :=uint (7-_dag );
if _afgd ._agf {_ccg =_afgd .overrideAtTemplate0b (_ccbc ,_dcb +_dag ,_aefc ,int (_fcafa ),_dag ,int (_dcdd ));_afgd ._dee .SetIndex (int32 (_ccg ));}else {_afgd ._dee .SetIndex (int32 (_ccbc ));};var _dgeg int ;_dgeg ,_fbb =_afgd ._cbae .DecodeBit (_afgd ._dee );
if _fbb !=nil {return _fcf .Wrap (_fbb ,_gfg ,"");};_fcafa |=byte (_dgeg <<_dcdd );_ccbc =((_ccbc &0x7bf7)<<1)|_dgeg |((_gcg >>_dcdd )&0x10)|((_cag >>_dcdd )&0x800);};if _eca :=_afgd .Bitmap .SetByte (_edc ,_fcafa );_eca !=nil {return _fcf .Wrap (_eca ,_gfg ,"");
};_edc ++;_abde ++;};return nil ;};func (_ddbc *PageInformationSegment )readWidthAndHeight ()error {_geaa ,_gcdg :=_ddbc ._cgbaf .ReadBits (32);if _gcdg !=nil {return _gcdg ;};_ddbc .PageBMWidth =int (_geaa &_b .MaxInt32 );_geaa ,_gcdg =_ddbc ._cgbaf .ReadBits (32);
if _gcdg !=nil {return _gcdg ;};_ddbc .PageBMHeight =int (_geaa &_b .MaxInt32 );return nil ;};func (_eba *GenericRefinementRegion )decodeTypicalPredictedLine (_gdc ,_abc ,_dg ,_afg ,_bed ,_ebf int )error {_gdf :=_gdc -int (_eba .ReferenceDY );_bdf :=_eba .ReferenceBitmap .GetByteIndex (0,_gdf );
_fg :=_eba .RegionBitmap .GetByteIndex (0,_gdc );var _abe error ;switch _eba .TemplateID {case 0:_abe =_eba .decodeTypicalPredictedLineTemplate0 (_gdc ,_abc ,_dg ,_afg ,_bed ,_ebf ,_fg ,_gdf ,_bdf );case 1:_abe =_eba .decodeTypicalPredictedLineTemplate1 (_gdc ,_abc ,_dg ,_afg ,_bed ,_ebf ,_fg ,_gdf ,_bdf );
};return _abe ;};type SymbolDictionary struct{_edgc *_afb .Reader ;SdrTemplate int8 ;SdTemplate int8 ;_cbdc bool ;_cgaf bool ;SdHuffAggInstanceSelection bool ;SdHuffBMSizeSelection int8 ;SdHuffDecodeWidthSelection int8 ;SdHuffDecodeHeightSelection int8 ;
UseRefinementAggregation bool ;IsHuffmanEncoded bool ;SdATX []int8 ;SdATY []int8 ;SdrATX []int8 ;SdrATY []int8 ;NumberOfExportedSymbols uint32 ;NumberOfNewSymbols uint32 ;Header *Header ;_bdfd uint32 ;_afca []*_e .Bitmap ;_fba uint32 ;_gebc []*_e .Bitmap ;
_bdcgc _ge .Tabler ;_gefb _ge .Tabler ;_ffcb _ge .Tabler ;_efbf _ge .Tabler ;_efcd []*_e .Bitmap ;_aggg []*_e .Bitmap ;_bdfcf *_ag .Decoder ;_bgedb *TextRegion ;_ffea *GenericRegion ;_cafa *GenericRefinementRegion ;_cgda *_ag .DecoderStats ;_gegf *_ag .DecoderStats ;
_cbfa *_ag .DecoderStats ;_faefb *_ag .DecoderStats ;_gaca *_ag .DecoderStats ;_fbdc *_ag .DecoderStats ;_ggac *_ag .DecoderStats ;_cccbc *_ag .DecoderStats ;_bdedd *_ag .DecoderStats ;_ggde int8 ;_ffec *_e .Bitmaps ;_eeace []int ;_ebgb map[int ]int ;_gfgg bool ;
};func (_ebdbc *TextRegion )setParameters (_fgee *_ag .Decoder ,_fagd ,_edbbe bool ,_eacd ,_faebd uint32 ,_ebbd uint32 ,_bbgc int8 ,_beddf uint32 ,_egcb int8 ,_dfgf _e .CombinationOperator ,_effc int8 ,_egaa int16 ,_acaf ,_dbdfe ,_fdecc ,_abaf ,_gfggd ,_bdff ,_eagc ,_fgede ,_ebaf ,_bfdc int8 ,_bgfcb ,_fcef []int8 ,_gfac []*_e .Bitmap ,_egea int8 ){_ebdbc ._eebc =_fgee ;
_ebdbc .IsHuffmanEncoded =_fagd ;_ebdbc .UseRefinement =_edbbe ;_ebdbc .RegionInfo .BitmapWidth =_eacd ;_ebdbc .RegionInfo .BitmapHeight =_faebd ;_ebdbc .NumberOfSymbolInstances =_ebbd ;_ebdbc .SbStrips =_bbgc ;_ebdbc .NumberOfSymbols =_beddf ;_ebdbc .DefaultPixel =_egcb ;
_ebdbc .CombinationOperator =_dfgf ;_ebdbc .IsTransposed =_effc ;_ebdbc .ReferenceCorner =_egaa ;_ebdbc .SbDsOffset =_acaf ;_ebdbc .SbHuffFS =_dbdfe ;_ebdbc .SbHuffDS =_fdecc ;_ebdbc .SbHuffDT =_abaf ;_ebdbc .SbHuffRDWidth =_gfggd ;_ebdbc .SbHuffRDHeight =_bdff ;
_ebdbc .SbHuffRSize =_ebaf ;_ebdbc .SbHuffRDX =_eagc ;_ebdbc .SbHuffRDY =_fgede ;_ebdbc .SbrTemplate =_bfdc ;_ebdbc .SbrATX =_bgfcb ;_ebdbc .SbrATY =_fcef ;_ebdbc .Symbols =_gfac ;_ebdbc ._dcef =_egea ;};func (_bcdc *TextRegion )GetRegionBitmap ()(*_e .Bitmap ,error ){if _bcdc .RegionBitmap !=nil {return _bcdc .RegionBitmap ,nil ;
};if !_bcdc .IsHuffmanEncoded {if _bfdd :=_bcdc .setCodingStatistics ();_bfdd !=nil {return nil ,_bfdd ;};};if _dfaae :=_bcdc .createRegionBitmap ();_dfaae !=nil {return nil ,_dfaae ;};if _ebcd :=_bcdc .decodeSymbolInstances ();_ebcd !=nil {return nil ,_ebcd ;
};return _bcdc .RegionBitmap ,nil ;};func (_ebfd *TextRegion )symbolIDCodeLengths ()error {var (_agcdf []*_ge .Code ;_fega uint64 ;_aafcc _ge .Tabler ;_ggccfd error ;);for _fefb :=0;_fefb < 35;_fefb ++{_fega ,_ggccfd =_ebfd ._cfda .ReadBits (4);if _ggccfd !=nil {return _ggccfd ;
};_bede :=int (_fega &0xf);if _bede > 0{_agcdf =append (_agcdf ,_ge .NewCode (int32 (_bede ),0,int32 (_fefb ),false ));};};_aafcc ,_ggccfd =_ge .NewFixedSizeTable (_agcdf );if _ggccfd !=nil {return _ggccfd ;};var (_bcag int64 ;_deef uint32 ;_bgaae []*_ge .Code ;
_acafd int64 ;);for _deef < _ebfd .NumberOfSymbols {_acafd ,_ggccfd =_aafcc .Decode (_ebfd ._cfda );if _ggccfd !=nil {return _ggccfd ;};if _acafd < 32{if _acafd > 0{_bgaae =append (_bgaae ,_ge .NewCode (int32 (_acafd ),0,int32 (_deef ),false ));};_bcag =_acafd ;
_deef ++;}else {var _afdee ,_dacd int64 ;switch _acafd {case 32:_fega ,_ggccfd =_ebfd ._cfda .ReadBits (2);if _ggccfd !=nil {return _ggccfd ;};_afdee =3+int64 (_fega );if _deef > 0{_dacd =_bcag ;};case 33:_fega ,_ggccfd =_ebfd ._cfda .ReadBits (3);if _ggccfd !=nil {return _ggccfd ;
};_afdee =3+int64 (_fega );case 34:_fega ,_ggccfd =_ebfd ._cfda .ReadBits (7);if _ggccfd !=nil {return _ggccfd ;};_afdee =11+int64 (_fega );};for _feaba :=0;_feaba < int (_afdee );_feaba ++{if _dacd > 0{_bgaae =append (_bgaae ,_ge .NewCode (int32 (_dacd ),0,int32 (_deef ),false ));
};_deef ++;};};};_ebfd ._cfda .Align ();_ebfd ._accg ,_ggccfd =_ge .NewFixedSizeTable (_bgaae );return _ggccfd ;};func (_gdfd *Header )pageSize ()uint {if _gdfd .PageAssociation <=255{return 1;};return 4;};type template0 struct{};func (_adea *HalftoneRegion )computeY (_dda ,_bcab int )int {return _adea .shiftAndFill (int (_adea .HGridY )+_dda *int (_adea .HRegionX )-_bcab *int (_adea .HRegionY ));
};func NewHeader (d Documenter ,r *_afb .Reader ,offset int64 ,organizationType OrganizationType )(*Header ,error ){_ddda :=&Header {Reader :r };if _dabd :=_ddda .parse (d ,r ,offset ,organizationType );_dabd !=nil {return nil ,_fcf .Wrap (_dabd ,"\u004ee\u0077\u0048\u0065\u0061\u0064\u0065r","");
};return _ddda ,nil ;};func (_acadf *TextRegion )decodeRdy ()(int64 ,error ){const _eaeg ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064y";if _acadf .IsHuffmanEncoded {if _acadf .SbHuffRDY ==3{if _acadf ._aeeb ==nil {var (_fcbf int ;_gbeg error ;);if _acadf .SbHuffFS ==3{_fcbf ++;
};if _acadf .SbHuffDS ==3{_fcbf ++;};if _acadf .SbHuffDT ==3{_fcbf ++;};if _acadf .SbHuffRDWidth ==3{_fcbf ++;};if _acadf .SbHuffRDHeight ==3{_fcbf ++;};if _acadf .SbHuffRDX ==3{_fcbf ++;};_acadf ._aeeb ,_gbeg =_acadf .getUserTable (_fcbf );if _gbeg !=nil {return 0,_fcf .Wrap (_gbeg ,_eaeg ,"");
};};return _acadf ._aeeb .Decode (_acadf ._cfda );};_gead ,_bccc :=_ge .GetStandardTable (14+int (_acadf .SbHuffRDY ));if _bccc !=nil {return 0,_bccc ;};return _gead .Decode (_acadf ._cfda );};_bbbc ,_agdf :=_acadf ._eebc .DecodeInt (_acadf ._agff );if _agdf !=nil {return 0,_fcf .Wrap (_agdf ,_eaeg ,"");
};return int64 (_bbbc ),nil ;};func (_cdfb *SymbolDictionary )decodeHeightClassDeltaHeightWithHuffman ()(int64 ,error ){switch _cdfb .SdHuffDecodeHeightSelection {case 0:_ccbg ,_gfgb :=_ge .GetStandardTable (4);if _gfgb !=nil {return 0,_gfgb ;};return _ccbg .Decode (_cdfb ._edgc );
case 1:_eefdc ,_fgbgc :=_ge .GetStandardTable (5);if _fgbgc !=nil {return 0,_fgbgc ;};return _eefdc .Decode (_cdfb ._edgc );case 3:if _cdfb ._bdcgc ==nil {_dfab ,_dfeef :=_ge .GetStandardTable (0);if _dfeef !=nil {return 0,_dfeef ;};_cdfb ._bdcgc =_dfab ;
};return _cdfb ._bdcgc .Decode (_cdfb ._edgc );};return 0,nil ;};var _ SegmentEncoder =&RegionSegment {};func (_fcb *GenericRefinementRegion )decodeOptimized (_ggb ,_egf ,_acd ,_gec ,_gae ,_bc ,_cd int )error {var (_cc error ;_bfg int ;_de int ;);_bce :=_ggb -int (_fcb .ReferenceDY );
if _efb :=int (-_fcb .ReferenceDX );_efb > 0{_bfg =_efb ;};_geg :=_fcb .ReferenceBitmap .GetByteIndex (_bfg ,_bce );if _fcb .ReferenceDX > 0{_de =int (_fcb .ReferenceDX );};_fa :=_fcb .RegionBitmap .GetByteIndex (_de ,_ggb );switch _fcb .TemplateID {case 0:_cc =_fcb .decodeTemplate (_ggb ,_egf ,_acd ,_gec ,_gae ,_bc ,_cd ,_fa ,_bce ,_geg ,_fcb ._agg );
case 1:_cc =_fcb .decodeTemplate (_ggb ,_egf ,_acd ,_gec ,_gae ,_bc ,_cd ,_fa ,_bce ,_geg ,_fcb ._gb );};return _cc ;};func (_aegb *Header )writeSegmentNumber (_abad _afb .BinaryWriter )(_bdcf int ,_eecgb error ){_cbbb :=make ([]byte ,4);_dd .BigEndian .PutUint32 (_cbbb ,_aegb .SegmentNumber );
if _bdcf ,_eecgb =_abad .Write (_cbbb );_eecgb !=nil {return 0,_fcf .Wrap (_eecgb ,"\u0048e\u0061\u0064\u0065\u0072.\u0077\u0072\u0069\u0074\u0065S\u0065g\u006de\u006e\u0074\u004e\u0075\u006d\u0062\u0065r","");};return _bdcf ,nil ;};type EndOfStripe struct{_ab *_afb .Reader ;
_ec int ;};func (_afbe *GenericRefinementRegion )decodeSLTP ()(int ,error ){_afbe .Template .setIndex (_afbe ._ea );return _afbe ._bg .DecodeBit (_afbe ._ea );};func (_dac *GenericRegion )GetRegionBitmap ()(_daca *_e .Bitmap ,_fded error ){if _dac .Bitmap !=nil {return _dac .Bitmap ,nil ;
};if _dac .IsMMREncoded {if _dac ._eed ==nil {_dac ._eed ,_fded =_be .New (_dac ._bdg ,int (_dac .RegionSegment .BitmapWidth ),int (_dac .RegionSegment .BitmapHeight ),_dac .DataOffset ,_dac .DataLength );if _fded !=nil {return nil ,_fded ;};};_dac .Bitmap ,_fded =_dac ._eed .UncompressMMR ();
return _dac .Bitmap ,_fded ;};if _fded =_dac .updateOverrideFlags ();_fded !=nil {return nil ,_fded ;};var _ebfa int ;if _dac ._cbae ==nil {_dac ._cbae ,_fded =_ag .New (_dac ._bdg );if _fded !=nil {return nil ,_fded ;};};if _dac ._dee ==nil {_dac ._dee =_ag .NewStats (65536,1);
};_dac .Bitmap =_e .New (int (_dac .RegionSegment .BitmapWidth ),int (_dac .RegionSegment .BitmapHeight ));_fae :=int (uint32 (_dac .Bitmap .Width +7)&(^uint32 (7)));for _fga :=0;_fga < _dac .Bitmap .Height ;_fga ++{if _dac .IsTPGDon {var _adbe int ;_adbe ,_fded =_dac .decodeSLTP ();
if _fded !=nil {return nil ,_fded ;};_ebfa ^=_adbe ;};if _ebfa ==1{if _fga > 0{if _fded =_dac .copyLineAbove (_fga );_fded !=nil {return nil ,_fded ;};};}else {if _fded =_dac .decodeLine (_fga ,_dac .Bitmap .Width ,_fae );_fded !=nil {return nil ,_fded ;
};};};return _dac .Bitmap ,nil ;};func (_gfff *SymbolDictionary )setCodingStatistics ()error {if _gfff ._cccbc ==nil {_gfff ._cccbc =_ag .NewStats (512,1);};if _gfff ._gegf ==nil {_gfff ._gegf =_ag .NewStats (512,1);};if _gfff ._cbfa ==nil {_gfff ._cbfa =_ag .NewStats (512,1);
};if _gfff ._faefb ==nil {_gfff ._faefb =_ag .NewStats (512,1);};if _gfff ._gaca ==nil {_gfff ._gaca =_ag .NewStats (512,1);};if _gfff .UseRefinementAggregation &&_gfff ._bdedd ==nil {_gfff ._bdedd =_ag .NewStats (1<<uint (_gfff ._ggde ),1);_gfff ._fbdc =_ag .NewStats (512,1);
_gfff ._ggac =_ag .NewStats (512,1);};if _gfff ._cgda ==nil {_gfff ._cgda =_ag .NewStats (65536,1);};if _gfff ._bdfcf ==nil {var _cgcc error ;_gfff ._bdfcf ,_cgcc =_ag .New (_gfff ._edgc );if _cgcc !=nil {return _cgcc ;};};return nil ;};func (_dcdb *HalftoneRegion )computeSegmentDataStructure ()error {_dcdb .DataOffset =_dcdb ._afa .AbsolutePosition ();
_dcdb .DataHeaderLength =_dcdb .DataOffset -_dcdb .DataHeaderOffset ;_dcdb .DataLength =int64 (_dcdb ._afa .AbsoluteLength ())-_dcdb .DataHeaderLength ;return nil ;};func (_bdbd *SymbolDictionary )getToExportFlags ()([]int ,error ){var (_ecfe int ;_acbgd int32 ;
_gggb error ;_defc =int32 (_bdbd ._bdfd +_bdbd .NumberOfNewSymbols );_baef =make ([]int ,_defc ););for _dfcg :=int32 (0);_dfcg < _defc ;_dfcg +=_acbgd {if _bdbd .IsHuffmanEncoded {_bgcgd ,_fdaa :=_ge .GetStandardTable (1);if _fdaa !=nil {return nil ,_fdaa ;
};_caadc ,_fdaa :=_bgcgd .Decode (_bdbd ._edgc );if _fdaa !=nil {return nil ,_fdaa ;};_acbgd =int32 (_caadc );}else {_acbgd ,_gggb =_bdbd ._bdfcf .DecodeInt (_bdbd ._gaca );if _gggb !=nil {return nil ,_gggb ;};};if _acbgd !=0{if _dfcg +_acbgd > _defc {return nil ,_fcf .Error ("\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0067\u0065\u0074T\u006f\u0045\u0078\u0070\u006f\u0072\u0074F\u006c\u0061\u0067\u0073","\u006d\u0061\u006c\u0066\u006f\u0072m\u0065\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0064\u0061\u0074\u0061\u0020\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u002e\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u006f\u0075\u0074\u0020\u006ff\u0020r\u0061\u006e\u0067\u0065");
};for _badd :=_dfcg ;_badd < _dfcg +_acbgd ;_badd ++{_baef [_badd ]=_ecfe ;};};if _ecfe ==0{_ecfe =1;}else {_ecfe =0;};};return _baef ,nil ;};func (_gg *GenericRefinementRegion )GetRegionInfo ()*RegionSegment {return _gg .RegionInfo };func (_dgd *HalftoneRegion )checkInput ()error {if _dgd .IsMMREncoded {if _dgd .HTemplate !=0{_cb .Log .Debug ("\u0048\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030",_dgd .HTemplate );
};if _dgd .HSkipEnabled {_cb .Log .Debug ("\u0048\u0053\u006b\u0069\u0070\u0045\u006e\u0061\u0062\u006c\u0065\u0064\u0020\u0030\u0020\u0025\u0076\u0020(\u0073\u0068\u006f\u0075\u006c\u0064\u0020c\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020v\u0061\u006c\u0075\u0065\u0020\u0066\u0061\u006c\u0073\u0065\u0029",_dgd .HSkipEnabled );
};};return nil ;};func (_caad *SymbolDictionary )decodeHeightClassBitmap (_cgbdg *_e .Bitmap ,_ebfc int64 ,_ggcfd int ,_cdcef []int )error {for _fadc :=_ebfc ;_fadc < int64 (_caad ._fba );_fadc ++{var _acdg int ;for _gfee :=_ebfc ;_gfee <=_fadc -1;_gfee ++{_acdg +=_cdcef [_gfee ];
};_fdca :=_fc .Rect (_acdg ,0,_acdg +_cdcef [_fadc ],_ggcfd );_egbc ,_aebfa :=_e .Extract (_fdca ,_cgbdg );if _aebfa !=nil {return _aebfa ;};_caad ._gebc [_fadc ]=_egbc ;_caad ._aggg =append (_caad ._aggg ,_egbc );};return nil ;};func (_bbd *GenericRegion )decodeTemplate3 (_bcbaa ,_fecc ,_ecec int ,_cge ,_bea int )(_cga error ){const _eafd ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0033";
var (_edbf ,_agc int ;_egc int ;_ccgg byte ;_bdgd ,_egad int ;);if _bcbaa >=1{_ccgg ,_cga =_bbd .Bitmap .GetByte (_bea );if _cga !=nil {return _fcf .Wrap (_cga ,_eafd ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_egc =int (_ccgg );};_edbf =(_egc >>1)&0x70;
for _cac :=0;_cac < _ecec ;_cac =_bdgd {var (_dfa byte ;_eafg int ;);_bdgd =_cac +8;if _ggd :=_fecc -_cac ;_ggd > 8{_eafg =8;}else {_eafg =_ggd ;};if _bcbaa >=1{_egc <<=8;if _bdgd < _fecc {_ccgg ,_cga =_bbd .Bitmap .GetByte (_bea +1);if _cga !=nil {return _fcf .Wrap (_cga ,_eafd ,"\u0069\u006e\u006e\u0065\u0072\u0020\u002d\u0020\u006c\u0069\u006e\u0065 \u003e\u003d\u0020\u0031");
};_egc |=int (_ccgg );};};for _cbd :=0;_cbd < _eafg ;_cbd ++{if _bbd ._agf {_agc =_bbd .overrideAtTemplate3 (_edbf ,_cac +_cbd ,_bcbaa ,int (_dfa ),_cbd );_bbd ._dee .SetIndex (int32 (_agc ));}else {_bbd ._dee .SetIndex (int32 (_edbf ));};_egad ,_cga =_bbd ._cbae .DecodeBit (_bbd ._dee );
if _cga !=nil {return _fcf .Wrap (_cga ,_eafd ,"");};_dfa |=byte (_egad )<<byte (7-_cbd );_edbf =((_edbf &0x1f7)<<1)|_egad |((_egc >>uint (8-_cbd ))&0x010);};if _ecc :=_bbd .Bitmap .SetByte (_cge ,_dfa );_ecc !=nil {return _fcf .Wrap (_ecc ,_eafd ,"");
};_cge ++;_bea ++;};return nil ;};type Header struct{SegmentNumber uint32 ;Type Type ;RetainFlag bool ;PageAssociation int ;PageAssociationFieldSize bool ;RTSegments []*Header ;HeaderLength int64 ;SegmentDataLength uint64 ;SegmentDataStartOffset uint64 ;
Reader *_afb .Reader ;SegmentData Segmenter ;RTSNumbers []int ;RetainBits []uint8 ;};func (_abca *PatternDictionary )checkInput ()error {if _abca .HdpHeight < 1||_abca .HdpWidth < 1{return _af .New ("in\u0076\u0061l\u0069\u0064\u0020\u0048\u0065\u0061\u0064\u0065\u0072 \u0056\u0061\u006c\u0075\u0065\u003a\u0020\u0057\u0069\u0064\u0074\u0068\u002f\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020g\u0072e\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020z\u0065\u0072o");
};if _abca .IsMMREncoded {if _abca .HDTemplate !=0{_cb .Log .Debug ("\u0076\u0061\u0072\u0069\u0061\u0062\u006c\u0065\u0020\u0048\u0044\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e \u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030");
};};return nil ;};func (_adeab *TextRegion )encodeSymbols (_adff _afb .BinaryWriter )(_eabf int ,_deb error ){const _gdcf ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";_facc :=make ([]byte ,4);_dd .BigEndian .PutUint32 (_facc ,_adeab .NumberOfSymbols );
if _eabf ,_deb =_adff .Write (_facc );_deb !=nil {return _eabf ,_fcf .Wrap (_deb ,_gdcf ,"\u004e\u0075\u006dbe\u0072\u004f\u0066\u0053\u0079\u006d\u0062\u006f\u006c\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073");};_bcbd ,_deb :=_e .NewClassedPoints (_adeab ._daaed ,_adeab ._gdgd );
if _deb !=nil {return 0,_fcf .Wrap (_deb ,_gdcf ,"");};var _ede ,_cfeac int ;_ebadg :=_bb .New ();_ebadg .Init ();if _deb =_ebadg .EncodeInteger (_bb .IADT ,0);_deb !=nil {return _eabf ,_fcf .Wrap (_deb ,_gdcf ,"\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0020\u0044\u0054");
};_ebage ,_deb :=_bcbd .GroupByY ();if _deb !=nil {return 0,_fcf .Wrap (_deb ,_gdcf ,"");};for _ ,_efbb :=range _ebage {_cebdc :=int (_efbb .YAtIndex (0));_defee :=_cebdc -_ede ;if _deb =_ebadg .EncodeInteger (_bb .IADT ,_defee );_deb !=nil {return _eabf ,_fcf .Wrap (_deb ,_gdcf ,"");
};var _feda int ;for _gcfg ,_gdab :=range _efbb .IntSlice {switch _gcfg {case 0:_beea :=int (_efbb .XAtIndex (_gcfg ))-_cfeac ;if _deb =_ebadg .EncodeInteger (_bb .IAFS ,_beea );_deb !=nil {return _eabf ,_fcf .Wrap (_deb ,_gdcf ,"");};_cfeac +=_beea ;_feda =_cfeac ;
default:_fffe :=int (_efbb .XAtIndex (_gcfg ))-_feda ;if _deb =_ebadg .EncodeInteger (_bb .IADS ,_fffe );_deb !=nil {return _eabf ,_fcf .Wrap (_deb ,_gdcf ,"");};_feda +=_fffe ;};_abdgeb ,_ffee :=_adeab ._gbf .Get (_gdab );if _ffee !=nil {return _eabf ,_fcf .Wrap (_ffee ,_gdcf ,"");
};_cfgd ,_efdg :=_adeab ._dgeae [_abdgeb ];if !_efdg {_cfgd ,_efdg =_adeab ._bbgaa [_abdgeb ];if !_efdg {return _eabf ,_fcf .Errorf (_gdcf ,"\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027\u0025d\u0027\u0020\u0069s\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064 \u0069\u006e\u0020\u0067\u006cob\u0061\u006c\u0020\u0061\u006e\u0064\u0020\u006c\u006f\u0063\u0061\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020\u006d\u0061\u0070",_abdgeb );
};};if _ffee =_ebadg .EncodeIAID (_adeab ._bcbf ,_cfgd );_ffee !=nil {return _eabf ,_fcf .Wrap (_ffee ,_gdcf ,"");};};if _deb =_ebadg .EncodeOOB (_bb .IADS );_deb !=nil {return _eabf ,_fcf .Wrap (_deb ,_gdcf ,"");};};_ebadg .Final ();_ecdg ,_deb :=_ebadg .WriteTo (_adff );
if _deb !=nil {return _eabf ,_fcf .Wrap (_deb ,_gdcf ,"");};_eabf +=int (_ecdg );return _eabf ,nil ;};func (_cdcd *GenericRegion )overrideAtTemplate2 (_fgbg ,_gdfc ,_egfef ,_eacea ,_ggcb int )int {_fgbg &=0x3FB;if _cdcd .GBAtY [0]==0&&_cdcd .GBAtX [0]>=-int8 (_ggcb ){_fgbg |=(_eacea >>uint (7-(int8 (_ggcb )+_cdcd .GBAtX [0]))&0x1)<<2;
}else {_fgbg |=int (_cdcd .getPixel (_gdfc +int (_cdcd .GBAtX [0]),_egfef +int (_cdcd .GBAtY [0])))<<2;};return _fgbg ;};func (_ccfc *Header )readSegmentDataLength (_bcbg *_afb .Reader )(_dffa error ){_ccfc .SegmentDataLength ,_dffa =_bcbg .ReadBits (32);
if _dffa !=nil {return _dffa ;};_ccfc .SegmentDataLength &=_b .MaxInt32 ;return nil ;};func (_edac *TextRegion )decodeIb (_beag ,_aceg int64 )(*_e .Bitmap ,error ){const _eeaa ="\u0064\u0065\u0063\u006f\u0064\u0065\u0049\u0062";var (_gde error ;_abef *_e .Bitmap ;
);if _beag ==0{if int (_aceg )> len (_edac .Symbols )-1{return nil ,_fcf .Error (_eeaa ,"\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0049\u0042\u0020\u0062\u0069\u0074\u006d\u0061\u0070\u002e\u0020\u0069\u006e\u0064\u0065x\u0020\u006f\u0075\u0074\u0020o\u0066\u0020r\u0061\u006e\u0067\u0065");
};return _edac .Symbols [int (_aceg )],nil ;};var _gceg ,_fbaa ,_daccd ,_eebb int64 ;_gceg ,_gde =_edac .decodeRdw ();if _gde !=nil {return nil ,_fcf .Wrap (_gde ,_eeaa ,"");};_fbaa ,_gde =_edac .decodeRdh ();if _gde !=nil {return nil ,_fcf .Wrap (_gde ,_eeaa ,"");
};_daccd ,_gde =_edac .decodeRdx ();if _gde !=nil {return nil ,_fcf .Wrap (_gde ,_eeaa ,"");};_eebb ,_gde =_edac .decodeRdy ();if _gde !=nil {return nil ,_fcf .Wrap (_gde ,_eeaa ,"");};if _edac .IsHuffmanEncoded {if _ ,_gde =_edac .decodeSymInRefSize ();
_gde !=nil {return nil ,_fcf .Wrap (_gde ,_eeaa ,"");};_edac ._cfda .Align ();};_bdeg :=_edac .Symbols [_aceg ];_abcf :=uint32 (_bdeg .Width );_gged :=uint32 (_bdeg .Height );_eaeb :=int32 (uint32 (_gceg )>>1)+int32 (_daccd );_defe :=int32 (uint32 (_fbaa )>>1)+int32 (_eebb );
if _edac ._babc ==nil {_edac ._babc =_bec (_edac ._cfda ,nil );};_edac ._babc .setParameters (_edac ._bgdc ,_edac ._eebc ,_edac .SbrTemplate ,_abcf +uint32 (_gceg ),_gged +uint32 (_fbaa ),_bdeg ,_eaeb ,_defe ,false ,_edac .SbrATX ,_edac .SbrATY );_abef ,_gde =_edac ._babc .GetRegionBitmap ();
if _gde !=nil {return nil ,_fcf .Wrap (_gde ,_eeaa ,"\u0067\u0072\u0066");};if _edac .IsHuffmanEncoded {_edac ._cfda .Align ();};return _abef ,nil ;};type PatternDictionary struct{_dega *_afb .Reader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;
DataLength int64 ;GBAtX []int8 ;GBAtY []int8 ;IsMMREncoded bool ;HDTemplate byte ;HdpWidth byte ;HdpHeight byte ;Patterns []*_e .Bitmap ;GrayMax uint32 ;};func (_ecbab *PatternDictionary )extractPatterns (_badg *_e .Bitmap )error {var _cebd int ;_adde :=make ([]*_e .Bitmap ,_ecbab .GrayMax +1);
for _cebd <=int (_ecbab .GrayMax ){_afeb :=int (_ecbab .HdpWidth )*_cebd ;_adeaf :=_fc .Rect (_afeb ,0,_afeb +int (_ecbab .HdpWidth ),int (_ecbab .HdpHeight ));_cgbd ,_dadfb :=_e .Extract (_adeaf ,_badg );if _dadfb !=nil {return _dadfb ;};_adde [_cebd ]=_cgbd ;
_cebd ++;};_ecbab .Patterns =_adde ;return nil ;};func (_ggbd *SymbolDictionary )readAtPixels (_adgd int )error {_ggbd .SdATX =make ([]int8 ,_adgd );_ggbd .SdATY =make ([]int8 ,_adgd );var (_feab byte ;_adba error ;);for _ecea :=0;_ecea < _adgd ;_ecea ++{_feab ,_adba =_ggbd ._edgc .ReadByte ();
if _adba !=nil {return _adba ;};_ggbd .SdATX [_ecea ]=int8 (_feab );_feab ,_adba =_ggbd ._edgc .ReadByte ();if _adba !=nil {return _adba ;};_ggbd .SdATY [_ecea ]=int8 (_feab );};return nil ;};func (_aaea *PageInformationSegment )Encode (w _afb .BinaryWriter )(_defb int ,_gef error ){const _cafg ="\u0050\u0061g\u0065\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u002e\u0045\u006eco\u0064\u0065";
_dbc :=make ([]byte ,4);_dd .BigEndian .PutUint32 (_dbc ,uint32 (_aaea .PageBMWidth ));_defb ,_gef =w .Write (_dbc );if _gef !=nil {return _defb ,_fcf .Wrap (_gef ,_cafg ,"\u0077\u0069\u0064t\u0068");};_dd .BigEndian .PutUint32 (_dbc ,uint32 (_aaea .PageBMHeight ));
var _gcfa int ;_gcfa ,_gef =w .Write (_dbc );if _gef !=nil {return _gcfa +_defb ,_fcf .Wrap (_gef ,_cafg ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_defb +=_gcfa ;_dd .BigEndian .PutUint32 (_dbc ,uint32 (_aaea .ResolutionX ));_gcfa ,_gef =w .Write (_dbc );
if _gef !=nil {return _gcfa +_defb ,_fcf .Wrap (_gef ,_cafg ,"\u0078\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_defb +=_gcfa ;_dd .BigEndian .PutUint32 (_dbc ,uint32 (_aaea .ResolutionY ));if _gcfa ,_gef =w .Write (_dbc );_gef !=nil {return _gcfa +_defb ,_fcf .Wrap (_gef ,_cafg ,"\u0079\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");
};_defb +=_gcfa ;if _gef =_aaea .encodeFlags (w );_gef !=nil {return _defb ,_fcf .Wrap (_gef ,_cafg ,"");};_defb ++;if _gcfa ,_gef =_aaea .encodeStripingInformation (w );_gef !=nil {return _defb ,_fcf .Wrap (_gef ,_cafg ,"");};_defb +=_gcfa ;return _defb ,nil ;
};func (_ffb *HalftoneRegion )shiftAndFill (_ggcaa int )int {_ggcaa >>=8;if _ggcaa < 0{_ceff :=int (_b .Log (float64 (_bef (_ggcaa )))/_b .Log (2));_gbed :=31-_ceff ;for _egdgf :=1;_egdgf < _gbed ;_egdgf ++{_ggcaa |=1<<uint (31-_egdgf );};};return _ggcaa ;
};func (_ecac *HalftoneRegion )parseHeader ()error {if _bdee :=_ecac .RegionSegment .parseHeader ();_bdee !=nil {return _bdee ;};_bcgf ,_ggag :=_ecac ._afa .ReadBit ();if _ggag !=nil {return _ggag ;};_ecac .HDefaultPixel =int8 (_bcgf );_dfg ,_ggag :=_ecac ._afa .ReadBits (3);
if _ggag !=nil {return _ggag ;};_ecac .CombinationOperator =_e .CombinationOperator (_dfg &0xf);_bcgf ,_ggag =_ecac ._afa .ReadBit ();if _ggag !=nil {return _ggag ;};if _bcgf ==1{_ecac .HSkipEnabled =true ;};_dfg ,_ggag =_ecac ._afa .ReadBits (2);if _ggag !=nil {return _ggag ;
};_ecac .HTemplate =byte (_dfg &0xf);_bcgf ,_ggag =_ecac ._afa .ReadBit ();if _ggag !=nil {return _ggag ;};if _bcgf ==1{_ecac .IsMMREncoded =true ;};_dfg ,_ggag =_ecac ._afa .ReadBits (32);if _ggag !=nil {return _ggag ;};_ecac .HGridWidth =uint32 (_dfg &_b .MaxUint32 );
_dfg ,_ggag =_ecac ._afa .ReadBits (32);if _ggag !=nil {return _ggag ;};_ecac .HGridHeight =uint32 (_dfg &_b .MaxUint32 );_dfg ,_ggag =_ecac ._afa .ReadBits (32);if _ggag !=nil {return _ggag ;};_ecac .HGridX =int32 (_dfg &_b .MaxInt32 );_dfg ,_ggag =_ecac ._afa .ReadBits (32);
if _ggag !=nil {return _ggag ;};_ecac .HGridY =int32 (_dfg &_b .MaxInt32 );_dfg ,_ggag =_ecac ._afa .ReadBits (16);if _ggag !=nil {return _ggag ;};_ecac .HRegionX =uint16 (_dfg &_b .MaxUint16 );_dfg ,_ggag =_ecac ._afa .ReadBits (16);if _ggag !=nil {return _ggag ;
};_ecac .HRegionY =uint16 (_dfg &_b .MaxUint16 );if _ggag =_ecac .computeSegmentDataStructure ();_ggag !=nil {return _ggag ;};return _ecac .checkInput ();};var (_ecbc Segmenter ;_fdf =map[Type ]func ()Segmenter {TSymbolDictionary :func ()Segmenter {return &SymbolDictionary {}},TIntermediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateLosslessTextRegion :func ()Segmenter {return &TextRegion {}},TPatternDictionary :func ()Segmenter {return &PatternDictionary {}},TIntermediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateLosslessHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TIntermediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateLosslessGenericRegion :func ()Segmenter {return &GenericRegion {}},TIntermediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateLosslessGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TPageInformation :func ()Segmenter {return &PageInformationSegment {}},TEndOfPage :func ()Segmenter {return _ecbc },TEndOfStrip :func ()Segmenter {return &EndOfStripe {}},TEndOfFile :func ()Segmenter {return _ecbc },TProfiles :func ()Segmenter {return _ecbc },TTables :func ()Segmenter {return &TableSegment {}},TExtension :func ()Segmenter {return _ecbc },TBitmap :func ()Segmenter {return _ecbc }};
);func (_gadd *GenericRegion )InitEncode (bm *_e .Bitmap ,xLoc ,yLoc ,template int ,duplicateLineRemoval bool )error {const _abb ="\u0047e\u006e\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069\u006f\u006e.\u0049\u006e\u0069\u0074\u0045\u006e\u0063\u006f\u0064\u0065";
if bm ==nil {return _fcf .Error (_abb ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if xLoc < 0||yLoc < 0{return _fcf .Error (_abb ,"\u0078\u0020\u0061\u006e\u0064\u0020\u0079\u0020\u006c\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074h\u0061\u006e\u0020\u0030");
};_gadd .Bitmap =bm ;_gadd .GBTemplate =byte (template );switch _gadd .GBTemplate {case 0:_gadd .GBAtX =[]int8 {3,-3,2,-2};_gadd .GBAtY =[]int8 {-1,-1,-2,-2};case 1:_gadd .GBAtX =[]int8 {3};_gadd .GBAtY =[]int8 {-1};case 2,3:_gadd .GBAtX =[]int8 {2};_gadd .GBAtY =[]int8 {-1};
default:return _fcf .Errorf (_abb ,"\u0070\u0072o\u0076\u0069\u0064\u0065\u0064 \u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u007b\u0030\u002c\u0031\u002c\u0032\u002c\u0033\u007d",template );
};_gadd .RegionSegment =&RegionSegment {BitmapHeight :uint32 (bm .Height ),BitmapWidth :uint32 (bm .Width ),XLocation :uint32 (xLoc ),YLocation :uint32 (yLoc )};_gadd .IsTPGDon =duplicateLineRemoval ;return nil ;};func (_ade *GenericRefinementRegion )getPixel (_ebff *_e .Bitmap ,_fb ,_cee int )int {if _fb < 0||_fb >=_ebff .Width {return 0;
};if _cee < 0||_cee >=_ebff .Height {return 0;};if _ebff .GetPixel (_fb ,_cee ){return 1;};return 0;};type RegionSegment struct{_fefd *_afb .Reader ;BitmapWidth uint32 ;BitmapHeight uint32 ;XLocation uint32 ;YLocation uint32 ;CombinaionOperator _e .CombinationOperator ;
};func (_eagf *GenericRegion )decodeTemplate2 (_gdd ,_fgg ,_efag int ,_fbd ,_cccb int )(_gabe error ){const _edbc ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0032";var (_fea ,_gce int ;_fbg ,_bdc int ;_bgf byte ;_ddgc ,_cfgf int ;
);if _gdd >=1{_bgf ,_gabe =_eagf .Bitmap .GetByte (_cccb );if _gabe !=nil {return _fcf .Wrap (_gabe ,_edbc ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0031");};_fbg =int (_bgf );};if _gdd >=2{_bgf ,_gabe =_eagf .Bitmap .GetByte (_cccb -_eagf .Bitmap .RowStride );
if _gabe !=nil {return _fcf .Wrap (_gabe ,_edbc ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0032");};_bdc =int (_bgf )<<4;};_fea =(_fbg >>3&0x7c)|(_bdc >>3&0x380);for _cbac :=0;_cbac < _efag ;_cbac =_ddgc {var (_dae byte ;
_cbb int ;);_ddgc =_cbac +8;if _dbd :=_fgg -_cbac ;_dbd > 8{_cbb =8;}else {_cbb =_dbd ;};if _gdd > 0{_fbg <<=8;if _ddgc < _fgg {_bgf ,_gabe =_eagf .Bitmap .GetByte (_cccb +1);if _gabe !=nil {return _fcf .Wrap (_gabe ,_edbc ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0030");
};_fbg |=int (_bgf );};};if _gdd > 1{_bdc <<=8;if _ddgc < _fgg {_bgf ,_gabe =_eagf .Bitmap .GetByte (_cccb -_eagf .Bitmap .RowStride +1);if _gabe !=nil {return _fcf .Wrap (_gabe ,_edbc ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0031");
};_bdc |=int (_bgf )<<4;};};for _dede :=0;_dede < _cbb ;_dede ++{_dddgg :=uint (10-_dede );if _eagf ._agf {_gce =_eagf .overrideAtTemplate2 (_fea ,_cbac +_dede ,_gdd ,int (_dae ),_dede );_eagf ._dee .SetIndex (int32 (_gce ));}else {_eagf ._dee .SetIndex (int32 (_fea ));
};_cfgf ,_gabe =_eagf ._cbae .DecodeBit (_eagf ._dee );if _gabe !=nil {return _fcf .Wrap (_gabe ,_edbc ,"");};_dae |=byte (_cfgf <<uint (7-_dede ));_fea =((_fea &0x1bd)<<1)|_cfgf |((_fbg >>_dddgg )&0x4)|((_bdc >>_dddgg )&0x80);};if _faef :=_eagf .Bitmap .SetByte (_fbd ,_dae );
_faef !=nil {return _fcf .Wrap (_faef ,_edbc ,"");};_fbd ++;_cccb ++;};return nil ;};type SegmentEncoder interface{Encode (_fecca _afb .BinaryWriter )(_cdef int ,_gba error );};func (_efae *SymbolDictionary )setSymbolsArray ()error {if _efae ._afca ==nil {if _ccbe :=_efae .retrieveImportSymbols ();
_ccbe !=nil {return _ccbe ;};};if _efae ._aggg ==nil {_efae ._aggg =append (_efae ._aggg ,_efae ._afca ...);};return nil ;};func (_faag *SymbolDictionary )retrieveImportSymbols ()error {for _ ,_bgbd :=range _faag .Header .RTSegments {if _bgbd .Type ==0{_fdfe ,_deca :=_bgbd .GetSegmentData ();
if _deca !=nil {return _deca ;};_gcdf ,_cfce :=_fdfe .(*SymbolDictionary );if !_cfce {return _c .Errorf ("\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0044\u0061\u0074a\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u003a\u0020%\u0054",_fdfe );
};_daeg ,_deca :=_gcdf .GetDictionary ();if _deca !=nil {return _c .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064 \u0073\u0065\u0067m\u0065\u006e\u0074 \u0077\u0069t\u0068\u0020\u0069\u006e\u0064\u0065x\u003a %\u0064\u0020\u0067\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0073",_bgbd .SegmentNumber ,_deca .Error ());
};_faag ._afca =append (_faag ._afca ,_daeg ...);_faag ._bdfd +=_gcdf .NumberOfExportedSymbols ;};};return nil ;};type PageInformationSegment struct{_cgbaf *_afb .Reader ;PageBMHeight int ;PageBMWidth int ;ResolutionX int ;ResolutionY int ;_affc bool ;
_bfb _e .CombinationOperator ;_abgf bool ;DefaultPixelValue uint8 ;_agd bool ;IsLossless bool ;IsStripe bool ;MaxStripeSize uint16 ;};func (_ffead *SymbolDictionary )decodeAggregate (_edbcc ,_gfdd uint32 )error {var (_gggg int64 ;_acbg error ;);if _ffead .IsHuffmanEncoded {_gggg ,_acbg =_ffead .huffDecodeRefAggNInst ();
if _acbg !=nil {return _acbg ;};}else {_efeb ,_aage :=_ffead ._bdfcf .DecodeInt (_ffead ._faefb );if _aage !=nil {return _aage ;};_gggg =int64 (_efeb );};if _gggg > 1{return _ffead .decodeThroughTextRegion (_edbcc ,_gfdd ,uint32 (_gggg ));}else if _gggg ==1{return _ffead .decodeRefinedSymbol (_edbcc ,_gfdd );
};return nil ;};func (_edbe *TextRegion )decodeCurrentT ()(int64 ,error ){if _edbe .SbStrips !=1{if _edbe .IsHuffmanEncoded {_eede ,_cabf :=_edbe ._cfda .ReadBits (byte (_edbe .LogSBStrips ));return int64 (_eede ),_cabf ;};_acbfa ,_gaga :=_edbe ._eebc .DecodeInt (_edbe ._ffce );
if _gaga !=nil {return 0,_gaga ;};return int64 (_acbfa ),nil ;};return 0,nil ;};func (_egb *GenericRegion )decodeTemplate1 (_fge ,_eega ,_ffe int ,_cbea ,_efabg int )(_dddg error ){const _fcg ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0031";
var (_cefd ,_ggcf int ;_gcbc ,_aag int ;_cfa byte ;_cdbg ,_bcgc int ;);if _fge >=1{_cfa ,_dddg =_egb .Bitmap .GetByte (_efabg );if _dddg !=nil {return _fcf .Wrap (_dddg ,_fcg ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_gcbc =int (_cfa );};if _fge >=2{_cfa ,_dddg =_egb .Bitmap .GetByte (_efabg -_egb .Bitmap .RowStride );
if _dddg !=nil {return _fcf .Wrap (_dddg ,_fcg ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_aag =int (_cfa )<<5;};_cefd =((_gcbc >>1)&0x1f8)|((_aag >>1)&0x1e00);for _fbcg :=0;_fbcg < _ffe ;_fbcg =_cdbg {var (_dgf byte ;_aabg int ;);_cdbg =_fbcg +8;
if _fged :=_eega -_fbcg ;_fged > 8{_aabg =8;}else {_aabg =_fged ;};if _fge > 0{_gcbc <<=8;if _cdbg < _eega {_cfa ,_dddg =_egb .Bitmap .GetByte (_efabg +1);if _dddg !=nil {return _fcf .Wrap (_dddg ,_fcg ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");
};_gcbc |=int (_cfa );};};if _fge > 1{_aag <<=8;if _cdbg < _eega {_cfa ,_dddg =_egb .Bitmap .GetByte (_efabg -_egb .Bitmap .RowStride +1);if _dddg !=nil {return _fcf .Wrap (_dddg ,_fcg ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_aag |=int (_cfa )<<5;
};};for _aec :=0;_aec < _aabg ;_aec ++{if _egb ._agf {_ggcf =_egb .overrideAtTemplate1 (_cefd ,_fbcg +_aec ,_fge ,int (_dgf ),_aec );_egb ._dee .SetIndex (int32 (_ggcf ));}else {_egb ._dee .SetIndex (int32 (_cefd ));};_bcgc ,_dddg =_egb ._cbae .DecodeBit (_egb ._dee );
if _dddg !=nil {return _fcf .Wrap (_dddg ,_fcg ,"");};_dgf |=byte (_bcgc )<<uint (7-_aec );_ece :=uint (8-_aec );_cefd =((_cefd &0xefb)<<1)|_bcgc |((_gcbc >>_ece )&0x8)|((_aag >>_ece )&0x200);};if _gbba :=_egb .Bitmap .SetByte (_cbea ,_dgf );_gbba !=nil {return _fcf .Wrap (_gbba ,_fcg ,"");
};_cbea ++;_efabg ++;};return nil ;};func (_egadf *GenericRegion )setOverrideFlag (_gabg int ){_egadf .GBAtOverride [_gabg ]=true ;_egadf ._agf =true ;};const (TSymbolDictionary Type =0;TIntermediateTextRegion Type =4;TImmediateTextRegion Type =6;TImmediateLosslessTextRegion Type =7;
TPatternDictionary Type =16;TIntermediateHalftoneRegion Type =20;TImmediateHalftoneRegion Type =22;TImmediateLosslessHalftoneRegion Type =23;TIntermediateGenericRegion Type =36;TImmediateGenericRegion Type =38;TImmediateLosslessGenericRegion Type =39;TIntermediateGenericRefinementRegion Type =40;
TImmediateGenericRefinementRegion Type =42;TImmediateLosslessGenericRefinementRegion Type =43;TPageInformation Type =48;TEndOfPage Type =49;TEndOfStrip Type =50;TEndOfFile Type =51;TProfiles Type =52;TTables Type =53;TExtension Type =62;TBitmap Type =70;
);func (_fadce *SymbolDictionary )decodeRefinedSymbol (_bbebc ,_geaab uint32 )error {var (_gdcc int ;_ccba ,_ddc int32 ;);if _fadce .IsHuffmanEncoded {_fceg ,_acdb :=_fadce ._edgc .ReadBits (byte (_fadce ._ggde ));if _acdb !=nil {return _acdb ;};_gdcc =int (_fceg );
_dgfa ,_acdb :=_ge .GetStandardTable (15);if _acdb !=nil {return _acdb ;};_afef ,_acdb :=_dgfa .Decode (_fadce ._edgc );if _acdb !=nil {return _acdb ;};_ccba =int32 (_afef );_afef ,_acdb =_dgfa .Decode (_fadce ._edgc );if _acdb !=nil {return _acdb ;};_ddc =int32 (_afef );
_dgfa ,_acdb =_ge .GetStandardTable (1);if _acdb !=nil {return _acdb ;};if _ ,_acdb =_dgfa .Decode (_fadce ._edgc );_acdb !=nil {return _acdb ;};_fadce ._edgc .Align ();}else {_eddff ,_aceac :=_fadce ._bdfcf .DecodeIAID (uint64 (_fadce ._ggde ),_fadce ._bdedd );
if _aceac !=nil {return _aceac ;};_gdcc =int (_eddff );_ccba ,_aceac =_fadce ._bdfcf .DecodeInt (_fadce ._fbdc );if _aceac !=nil {return _aceac ;};_ddc ,_aceac =_fadce ._bdfcf .DecodeInt (_fadce ._ggac );if _aceac !=nil {return _aceac ;};};if _cgbc :=_fadce .setSymbolsArray ();
_cgbc !=nil {return _cgbc ;};_gfcd :=_fadce ._aggg [_gdcc ];if _dfba :=_fadce .decodeNewSymbols (_bbebc ,_geaab ,_gfcd ,_ccba ,_ddc );_dfba !=nil {return _dfba ;};if _fadce .IsHuffmanEncoded {_fadce ._edgc .Align ();};return nil ;};func (_gaa *PatternDictionary )readPatternWidthAndHeight ()error {_beaa ,_cbgg :=_gaa ._dega .ReadByte ();
if _cbgg !=nil {return _cbgg ;};_gaa .HdpWidth =_beaa ;_beaa ,_cbgg =_gaa ._dega .ReadByte ();if _cbgg !=nil {return _cbgg ;};_gaa .HdpHeight =_beaa ;return nil ;};func (_cecg *TextRegion )setCodingStatistics ()error {if _cecg ._agcgg ==nil {_cecg ._agcgg =_ag .NewStats (512,1);
};if _cecg ._ggae ==nil {_cecg ._ggae =_ag .NewStats (512,1);};if _cecg ._ffga ==nil {_cecg ._ffga =_ag .NewStats (512,1);};if _cecg ._ffce ==nil {_cecg ._ffce =_ag .NewStats (512,1);};if _cecg ._bfeb ==nil {_cecg ._bfeb =_ag .NewStats (512,1);};if _cecg ._fgdce ==nil {_cecg ._fgdce =_ag .NewStats (512,1);
};if _cecg ._eage ==nil {_cecg ._eage =_ag .NewStats (512,1);};if _cecg ._abec ==nil {_cecg ._abec =_ag .NewStats (1<<uint (_cecg ._dcef ),1);};if _cecg ._cfdc ==nil {_cecg ._cfdc =_ag .NewStats (512,1);};if _cecg ._agff ==nil {_cecg ._agff =_ag .NewStats (512,1);
};if _cecg ._eebc ==nil {var _dgcc error ;_cecg ._eebc ,_dgcc =_ag .New (_cecg ._cfda );if _dgcc !=nil {return _dgcc ;};};return nil ;};func (_gfdb *PageInformationSegment )CombinationOperatorOverrideAllowed ()bool {return _gfdb ._affc };func (_dedb *SymbolDictionary )encodeATFlags (_ecd _afb .BinaryWriter )(_ebad int ,_bcgcc error ){const _gdgg ="\u0065\u006e\u0063\u006f\u0064\u0065\u0041\u0054\u0046\u006c\u0061\u0067\u0073";
if _dedb .IsHuffmanEncoded ||_dedb .SdTemplate !=0{return 0,nil ;};_eecf :=4;if _dedb .SdTemplate !=0{_eecf =1;};for _gced :=0;_gced < _eecf ;_gced ++{if _bcgcc =_ecd .WriteByte (byte (_dedb .SdATX [_gced ]));_bcgcc !=nil {return _ebad ,_fcf .Wrapf (_bcgcc ,_gdgg ,"\u0053d\u0041\u0054\u0058\u005b\u0025\u0064]",_gced );
};_ebad ++;if _bcgcc =_ecd .WriteByte (byte (_dedb .SdATY [_gced ]));_bcgcc !=nil {return _ebad ,_fcf .Wrapf (_bcgcc ,_gdgg ,"\u0053d\u0041\u0054\u0059\u005b\u0025\u0064]",_gced );};_ebad ++;};return _ebad ,nil ;};func (_edgbd *TextRegion )decodeDT ()(_ffffa int64 ,_fdad error ){if _edgbd .IsHuffmanEncoded {if _edgbd .SbHuffDT ==3{_ffffa ,_fdad =_edgbd ._gecb .Decode (_edgbd ._cfda );
if _fdad !=nil {return 0,_fdad ;};}else {var _fgbba _ge .Tabler ;_fgbba ,_fdad =_ge .GetStandardTable (11+int (_edgbd .SbHuffDT ));if _fdad !=nil {return 0,_fdad ;};_ffffa ,_fdad =_fgbba .Decode (_edgbd ._cfda );if _fdad !=nil {return 0,_fdad ;};};}else {var _dfad int32 ;
_dfad ,_fdad =_edgbd ._eebc .DecodeInt (_edgbd ._agcgg );if _fdad !=nil {return ;};_ffffa =int64 (_dfad );};_ffffa *=int64 (_edgbd .SbStrips );return _ffffa ,nil ;};func (_acea *GenericRefinementRegion )readAtPixels ()error {_acea .GrAtX =make ([]int8 ,2);
_acea .GrAtY =make ([]int8 ,2);_cbeg ,_cdf :=_acea ._ga .ReadByte ();if _cdf !=nil {return _cdf ;};_acea .GrAtX [0]=int8 (_cbeg );_cbeg ,_cdf =_acea ._ga .ReadByte ();if _cdf !=nil {return _cdf ;};_acea .GrAtY [0]=int8 (_cbeg );_cbeg ,_cdf =_acea ._ga .ReadByte ();
if _cdf !=nil {return _cdf ;};_acea .GrAtX [1]=int8 (_cbeg );_cbeg ,_cdf =_acea ._ga .ReadByte ();if _cdf !=nil {return _cdf ;};_acea .GrAtY [1]=int8 (_cbeg );return nil ;};func (_fgdc *HalftoneRegion )GetRegionInfo ()*RegionSegment {return _fgdc .RegionSegment };
func (_fcec *SymbolDictionary )readNumberOfNewSymbols ()error {_egbbf ,_fbgdb :=_fcec ._edgc .ReadBits (32);if _fbgdb !=nil {return _fbgdb ;};_fcec .NumberOfNewSymbols =uint32 (_egbbf &_b .MaxUint32 );return nil ;};func (_cade *SymbolDictionary )checkInput ()error {if _cade .SdHuffDecodeHeightSelection ==2{_cb .Log .Debug ("\u0053\u0079\u006d\u0062\u006fl\u0020\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u0053e\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0070\u0065r\u006d\u0069\u0074\u0074\u0065\u0064",_cade .SdHuffDecodeHeightSelection );
};if _cade .SdHuffDecodeWidthSelection ==2{_cb .Log .Debug ("\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0057\u0069\u0064t\u0068\u0020\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061l\u0075\u0065\u0020\u006e\u006f\u0074 \u0070\u0065r\u006d\u0069t\u0074e\u0064",_cade .SdHuffDecodeWidthSelection );
};if _cade .IsHuffmanEncoded {if _cade .SdTemplate !=0{_cb .Log .Debug ("\u0053\u0044T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e \u0030\u0029",_cade .SdTemplate );
};if !_cade .UseRefinementAggregation {if !_cade .UseRefinementAggregation {if _cade ._cbdc {_cb .Log .Debug ("\u0049\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074ex\u0074\u0052\u0065\u0074\u0061\u0069n\u0065\u0064\u0020\u003d\u0020\u0074\u0072\u0075\u0065\u0020\u0028\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0066\u0061\u006cs\u0065\u0029");
_cade ._cbdc =false ;};if _cade ._cgaf {_cb .Log .Debug ("\u0069s\u0043\u006fd\u0069\u006e\u0067\u0043o\u006e\u0074\u0065x\u0074\u0055\u0073\u0065\u0064\u0020\u003d\u0020\u0074ru\u0065\u0020\u0028s\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020f\u0061\u006cs\u0065\u0029");
_cade ._cgaf =false ;};};};}else {if _cade .SdHuffBMSizeSelection !=0{_cb .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066B\u004d\u0053\u0069\u007a\u0065\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_cade .SdHuffBMSizeSelection =0;};if _cade .SdHuffDecodeWidthSelection !=0{_cb .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068\u0053\u0065\u006c\u0065\u0063\u0074\u0069o\u006e\u0020\u0073\u0068\u006fu\u006c\u0064 \u0062\u0065\u0020\u0030");
_cade .SdHuffDecodeWidthSelection =0;};if _cade .SdHuffDecodeHeightSelection !=0{_cb .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0048e\u0069\u0067\u0068\u0074\u0053\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_cade .SdHuffDecodeHeightSelection =0;};};if !_cade .UseRefinementAggregation {if _cade .SdrTemplate !=0{_cb .Log .Debug ("\u0053\u0044\u0052\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u003d\u0020\u0025\u0064\u0020\u0028s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_cade .SdrTemplate );
_cade .SdrTemplate =0;};};if !_cade .IsHuffmanEncoded ||!_cade .UseRefinementAggregation {if _cade .SdHuffAggInstanceSelection {_cb .Log .Debug ("\u0053d\u0048\u0075f\u0066\u0041\u0067g\u0049\u006e\u0073\u0074\u0061\u006e\u0063e\u0053\u0065\u006c\u0065\u0063\u0074i\u006f\u006e\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_cade .SdHuffAggInstanceSelection );
};};return nil ;};func (_gbaf *TextRegion )decodeStripT ()(_ddfb int64 ,_acaag error ){if _gbaf .IsHuffmanEncoded {if _gbaf .SbHuffDT ==3{if _gbaf ._gecb ==nil {var _afff int ;if _gbaf .SbHuffFS ==3{_afff ++;};if _gbaf .SbHuffDS ==3{_afff ++;};_gbaf ._gecb ,_acaag =_gbaf .getUserTable (_afff );
if _acaag !=nil {return 0,_acaag ;};};_ddfb ,_acaag =_gbaf ._gecb .Decode (_gbaf ._cfda );if _acaag !=nil {return 0,_acaag ;};}else {var _fffa _ge .Tabler ;_fffa ,_acaag =_ge .GetStandardTable (11+int (_gbaf .SbHuffDT ));if _acaag !=nil {return 0,_acaag ;
};_ddfb ,_acaag =_fffa .Decode (_gbaf ._cfda );if _acaag !=nil {return 0,_acaag ;};};}else {var _ebdd int32 ;_ebdd ,_acaag =_gbaf ._eebc .DecodeInt (_gbaf ._agcgg );if _acaag !=nil {return 0,_acaag ;};_ddfb =int64 (_ebdd );};_ddfb *=int64 (-_gbaf .SbStrips );
return _ddfb ,nil ;};func (_fcff *PatternDictionary )readGrayMax ()error {_ecee ,_cfd :=_fcff ._dega .ReadBits (32);if _cfd !=nil {return _cfd ;};_fcff .GrayMax =uint32 (_ecee &_b .MaxUint32 );return nil ;};const (ORandom OrganizationType =iota ;OSequential ;
);func (_bdeb *SymbolDictionary )encodeRefinementATFlags (_effab _afb .BinaryWriter )(_gcagc int ,_bage error ){const _dce ="\u0065\u006e\u0063od\u0065\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0041\u0054\u0046\u006c\u0061\u0067\u0073";
if !_bdeb .UseRefinementAggregation ||_bdeb .SdrTemplate !=0{return 0,nil ;};for _dba :=0;_dba < 2;_dba ++{if _bage =_effab .WriteByte (byte (_bdeb .SdrATX [_dba ]));_bage !=nil {return _gcagc ,_fcf .Wrapf (_bage ,_dce ,"\u0053\u0064\u0072\u0041\u0054\u0058\u005b\u0025\u0064\u005d",_dba );
};_gcagc ++;if _bage =_effab .WriteByte (byte (_bdeb .SdrATY [_dba ]));_bage !=nil {return _gcagc ,_fcf .Wrapf (_bage ,_dce ,"\u0053\u0064\u0072\u0041\u0054\u0059\u005b\u0025\u0064\u005d",_dba );};_gcagc ++;};return _gcagc ,nil ;};func (_fabc *SymbolDictionary )setInSyms ()error {if _fabc .Header .RTSegments !=nil {return _fabc .retrieveImportSymbols ();
};_fabc ._afca =make ([]*_e .Bitmap ,0);return nil ;};func (_eaga *GenericRegion )GetRegionInfo ()*RegionSegment {return _eaga .RegionSegment };func (_agdc *TextRegion )getUserTable (_fbee int )(_ge .Tabler ,error ){const _aabc ="\u0067\u0065\u0074U\u0073\u0065\u0072\u0054\u0061\u0062\u006c\u0065";
var _aged int ;for _ ,_cfga :=range _agdc .Header .RTSegments {if _cfga .Type ==53{if _aged ==_fbee {_efac ,_gadcb :=_cfga .GetSegmentData ();if _gadcb !=nil {return nil ,_gadcb ;};_edgf ,_faad :=_efac .(*TableSegment );if !_faad {_cb .Log .Debug (_c .Sprintf ("\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079p\u0065\u00205\u0033\u0020\u002d\u0020\u0061\u006ed\u0020in\u0064\u0065\u0078\u003a\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_cfga .SegmentNumber ));
return nil ,_fcf .Error (_aabc ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079\u0070e\u0020\u0035\u0033\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u002a\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};return _ge .NewEncodedTable (_edgf );};_aged ++;};};return nil ,nil ;};func (_fbgef *TableSegment )HtRS ()int32 {return _fbgef ._fcafb };func (_adaa *RegionSegment )readCombinationOperator ()error {_ecf ,_cgg :=_adaa ._fefd .ReadBits (3);if _cgg !=nil {return _cgg ;
};_adaa .CombinaionOperator =_e .CombinationOperator (_ecf &0xF);return nil ;};func (_eegaeg *TextRegion )decodeRdw ()(int64 ,error ){const _fedc ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064w";if _eegaeg .IsHuffmanEncoded {if _eegaeg .SbHuffRDWidth ==3{if _eegaeg ._gaff ==nil {var (_fdede int ;
_daaa error ;);if _eegaeg .SbHuffFS ==3{_fdede ++;};if _eegaeg .SbHuffDS ==3{_fdede ++;};if _eegaeg .SbHuffDT ==3{_fdede ++;};_eegaeg ._gaff ,_daaa =_eegaeg .getUserTable (_fdede );if _daaa !=nil {return 0,_fcf .Wrap (_daaa ,_fedc ,"");};};return _eegaeg ._gaff .Decode (_eegaeg ._cfda );
};_ggccb ,_cfdf :=_ge .GetStandardTable (14+int (_eegaeg .SbHuffRDWidth ));if _cfdf !=nil {return 0,_fcf .Wrap (_cfdf ,_fedc ,"");};return _ggccb .Decode (_eegaeg ._cfda );};_abcg ,_ddee :=_eegaeg ._eebc .DecodeInt (_eegaeg ._fgdce );if _ddee !=nil {return 0,_fcf .Wrap (_ddee ,_fedc ,"");
};return int64 (_abcg ),nil ;};func (_eg *EndOfStripe )LineNumber ()int {return _eg ._ec };func (_acbff *SymbolDictionary )Init (h *Header ,r *_afb .Reader )error {_acbff .Header =h ;_acbff ._edgc =r ;return _acbff .parseHeader ();};type Segmenter interface{Init (_defdd *Header ,_fdaf *_afb .Reader )error ;
};func (_afbd *SymbolDictionary )decodeDirectlyThroughGenericRegion (_cafb ,_bgdg uint32 )error {if _afbd ._ffea ==nil {_afbd ._ffea =NewGenericRegion (_afbd ._edgc );};_afbd ._ffea .setParametersWithAt (false ,byte (_afbd .SdTemplate ),false ,false ,_afbd .SdATX ,_afbd .SdATY ,_cafb ,_bgdg ,_afbd ._cgda ,_afbd ._bdfcf );
return _afbd .addSymbol (_afbd ._ffea );};func (_ggcc *PatternDictionary )readIsMMREncoded ()error {_dbbc ,_ggea :=_ggcc ._dega .ReadBit ();if _ggea !=nil {return _ggea ;};if _dbbc !=0{_ggcc .IsMMREncoded =true ;};return nil ;};func (_dab *GenericRegion )updateOverrideFlags ()error {const _bbg ="\u0075\u0070\u0064\u0061te\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _dab .GBAtX ==nil ||_dab .GBAtY ==nil {return nil ;};if len (_dab .GBAtX )!=len (_dab .GBAtY ){return _fcf .Errorf (_bbg ,"i\u006eco\u0073i\u0073t\u0065\u006e\u0074\u0020\u0041T\u0020\u0070\u0069x\u0065\u006c\u002e\u0020\u0041m\u006f\u0075\u006et\u0020\u006f\u0066\u0020\u0027\u0078\u0027\u0020\u0070\u0069\u0078e\u006c\u0073\u003a %d\u002c\u0020\u0041\u006d\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0027\u0079\u0027\u0020\u0070\u0069\u0078e\u006cs\u003a\u0020\u0025\u0064",len (_dab .GBAtX ),len (_dab .GBAtY ));
};_dab .GBAtOverride =make ([]bool ,len (_dab .GBAtX ));switch _dab .GBTemplate {case 0:if !_dab .UseExtTemplates {if _dab .GBAtX [0]!=3||_dab .GBAtY [0]!=-1{_dab .setOverrideFlag (0);};if _dab .GBAtX [1]!=-3||_dab .GBAtY [1]!=-1{_dab .setOverrideFlag (1);
};if _dab .GBAtX [2]!=2||_dab .GBAtY [2]!=-2{_dab .setOverrideFlag (2);};if _dab .GBAtX [3]!=-2||_dab .GBAtY [3]!=-2{_dab .setOverrideFlag (3);};}else {if _dab .GBAtX [0]!=-2||_dab .GBAtY [0]!=0{_dab .setOverrideFlag (0);};if _dab .GBAtX [1]!=0||_dab .GBAtY [1]!=-2{_dab .setOverrideFlag (1);
};if _dab .GBAtX [2]!=-2||_dab .GBAtY [2]!=-1{_dab .setOverrideFlag (2);};if _dab .GBAtX [3]!=-1||_dab .GBAtY [3]!=-2{_dab .setOverrideFlag (3);};if _dab .GBAtX [4]!=1||_dab .GBAtY [4]!=-2{_dab .setOverrideFlag (4);};if _dab .GBAtX [5]!=2||_dab .GBAtY [5]!=-1{_dab .setOverrideFlag (5);
};if _dab .GBAtX [6]!=-3||_dab .GBAtY [6]!=0{_dab .setOverrideFlag (6);};if _dab .GBAtX [7]!=-4||_dab .GBAtY [7]!=0{_dab .setOverrideFlag (7);};if _dab .GBAtX [8]!=2||_dab .GBAtY [8]!=-2{_dab .setOverrideFlag (8);};if _dab .GBAtX [9]!=3||_dab .GBAtY [9]!=-1{_dab .setOverrideFlag (9);
};if _dab .GBAtX [10]!=-2||_dab .GBAtY [10]!=-2{_dab .setOverrideFlag (10);};if _dab .GBAtX [11]!=-3||_dab .GBAtY [11]!=-1{_dab .setOverrideFlag (11);};};case 1:if _dab .GBAtX [0]!=3||_dab .GBAtY [0]!=-1{_dab .setOverrideFlag (0);};case 2:if _dab .GBAtX [0]!=2||_dab .GBAtY [0]!=-1{_dab .setOverrideFlag (0);
};case 3:if _dab .GBAtX [0]!=2||_dab .GBAtY [0]!=-1{_dab .setOverrideFlag (0);};};return nil ;};func (_eagg *GenericRefinementRegion )String ()string {_bgc :=&_a .Builder {};_bgc .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");
_bgc .WriteString (_eagg .RegionInfo .String ()+"\u000a");_bgc .WriteString (_c .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0052\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_eagg .IsTPGROn ));_bgc .WriteString (_c .Sprintf ("\u0009-\u0020T\u0065\u006d\u0070\u006c\u0061t\u0065\u0049D\u003a\u0020\u0025\u0076\u000a",_eagg .TemplateID ));
_bgc .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_eagg .GrAtX ));_bgc .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_eagg .GrAtY ));
_bgc .WriteString (_c .Sprintf ("\u0009-\u0020R\u0065\u0066\u0065\u0072\u0065n\u0063\u0065D\u0058\u0020\u0025\u0076\u000a",_eagg .ReferenceDX ));_bgc .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0052ef\u0065\u0072\u0065\u006e\u0063\u0044\u0065\u0059\u003a\u0020\u0025\u0076\u000a",_eagg .ReferenceDY ));
return _bgc .String ();};func (_dfc *Header )writeFlags (_ggeb _afb .BinaryWriter )(_agb error ){const _bded ="\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065F\u006c\u0061\u0067\u0073";_faea :=byte (_dfc .Type );if _agb =_ggeb .WriteByte (_faea );
_agb !=nil {return _fcf .Wrap (_agb ,_bded ,"\u0077\u0072\u0069ti\u006e\u0067\u0020\u0073\u0065\u0067\u006d\u0065\u006et\u0020t\u0079p\u0065 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064");};if !_dfc .RetainFlag &&!_dfc .PageAssociationFieldSize {return nil ;
};if _agb =_ggeb .SkipBits (-8);_agb !=nil {return _fcf .Wrap (_agb ,_bded ,"\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0062\u0061\u0063\u006b\u0020\u0074\u0068\u0065\u0020\u0062\u0069\u0074\u0073\u0020\u0066\u0061il\u0065\u0064");};var _fbcge int ;
if _dfc .RetainFlag {_fbcge =1;};if _agb =_ggeb .WriteBit (_fbcge );_agb !=nil {return _fcf .Wrap (_agb ,_bded ,"\u0072\u0065\u0074\u0061in\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067\u0073");};_fbcge =0;if _dfc .PageAssociationFieldSize {_fbcge =1;
};if _agb =_ggeb .WriteBit (_fbcge );_agb !=nil {return _fcf .Wrap (_agb ,_bded ,"p\u0061\u0067\u0065\u0020as\u0073o\u0063\u0069\u0061\u0074\u0069o\u006e\u0020\u0066\u006c\u0061\u0067");};_ggeb .FinishByte ();return nil ;};func (_fcdad *TextRegion )encodeFlags (_dccd _afb .BinaryWriter )(_aedg int ,_dgcg error ){const _gebg ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _dgcg =_dccd .WriteBit (int (_fcdad .SbrTemplate ));_dgcg !=nil {return _aedg ,_fcf .Wrap (_dgcg ,_gebg ,"s\u0062\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};if _ ,_dgcg =_dccd .WriteBits (uint64 (_fcdad .SbDsOffset ),5);_dgcg !=nil {return _aedg ,_fcf .Wrap (_dgcg ,_gebg ,"\u0073\u0062\u0044\u0073\u004f\u0066\u0066\u0073\u0065\u0074");
};if _dgcg =_dccd .WriteBit (int (_fcdad .DefaultPixel ));_dgcg !=nil {return _aedg ,_fcf .Wrap (_dgcg ,_gebg ,"\u0044\u0065\u0066a\u0075\u006c\u0074\u0050\u0069\u0078\u0065\u006c");};if _ ,_dgcg =_dccd .WriteBits (uint64 (_fcdad .CombinationOperator ),2);
_dgcg !=nil {return _aedg ,_fcf .Wrap (_dgcg ,_gebg ,"\u0043\u006f\u006d\u0062in\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072");};if _dgcg =_dccd .WriteBit (int (_fcdad .IsTransposed ));_dgcg !=nil {return _aedg ,_fcf .Wrap (_dgcg ,_gebg ,"\u0069\u0073\u0020\u0074\u0072\u0061\u006e\u0073\u0070\u006f\u0073\u0065\u0064");
};if _ ,_dgcg =_dccd .WriteBits (uint64 (_fcdad .ReferenceCorner ),2);_dgcg !=nil {return _aedg ,_fcf .Wrap (_dgcg ,_gebg ,"\u0072\u0065f\u0065\u0072\u0065n\u0063\u0065\u0020\u0063\u006f\u0072\u006e\u0065\u0072");};if _ ,_dgcg =_dccd .WriteBits (uint64 (_fcdad .LogSBStrips ),2);
_dgcg !=nil {return _aedg ,_fcf .Wrap (_dgcg ,_gebg ,"L\u006f\u0067\u0053\u0042\u0053\u0074\u0072\u0069\u0070\u0073");};var _afag int ;if _fcdad .UseRefinement {_afag =1;};if _dgcg =_dccd .WriteBit (_afag );_dgcg !=nil {return _aedg ,_fcf .Wrap (_dgcg ,_gebg ,"\u0075\u0073\u0065\u0020\u0072\u0065\u0066\u0069\u006ee\u006d\u0065\u006e\u0074");
};_afag =0;if _fcdad .IsHuffmanEncoded {_afag =1;};if _dgcg =_dccd .WriteBit (_afag );_dgcg !=nil {return _aedg ,_fcf .Wrap (_dgcg ,_gebg ,"u\u0073\u0065\u0020\u0068\u0075\u0066\u0066\u006d\u0061\u006e");};_aedg =2;return _aedg ,nil ;};func (_dbge *TextRegion )String ()string {_dfbd :=&_a .Builder {};
_dfbd .WriteString ("\u000a[\u0054E\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u000a");_dfbd .WriteString (_dbge .RegionInfo .String ()+"\u000a");_dfbd .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0053br\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0025\u0076\u000a",_dbge .SbrTemplate ));
_dfbd .WriteString (_c .Sprintf ("\u0009-\u0020S\u0062\u0044\u0073\u004f\u0066f\u0073\u0065t\u003a\u0020\u0025\u0076\u000a",_dbge .SbDsOffset ));_dfbd .WriteString (_c .Sprintf ("\t\u002d \u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0050i\u0078\u0065\u006c\u003a %\u0076\u000a",_dbge .DefaultPixel ));
_dfbd .WriteString (_c .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0076\u000a",_dbge .CombinationOperator ));_dfbd .WriteString (_c .Sprintf ("\t\u002d \u0049\u0073\u0054\u0072\u0061\u006e\u0073\u0070o\u0073\u0065\u0064\u003a %\u0076\u000a",_dbge .IsTransposed ));
_dfbd .WriteString (_c .Sprintf ("\u0009\u002d\u0020Re\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0043\u006f\u0072\u006e\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_dbge .ReferenceCorner ));_dfbd .WriteString (_c .Sprintf ("\t\u002d\u0020\u0055\u0073eR\u0065f\u0069\u006e\u0065\u006d\u0065n\u0074\u003a\u0020\u0025\u0076\u000a",_dbge .UseRefinement ));
_dfbd .WriteString (_c .Sprintf ("\u0009-\u0020\u0049\u0073\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045n\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0076\u000a",_dbge .IsHuffmanEncoded ));if _dbge .IsHuffmanEncoded {_dfbd .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_dbge .SbHuffRSize ));
_dfbd .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0059:\u0020\u0025\u0076\u000a",_dbge .SbHuffRDY ));_dfbd .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0058:\u0020\u0025\u0076\u000a",_dbge .SbHuffRDX ));
_dfbd .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069\u0067\u0068\u0074\u003a\u0020\u0025v\u000a",_dbge .SbHuffRDHeight ));_dfbd .WriteString (_c .Sprintf ("\t\u002d\u0020\u0053\u0062Hu\u0066f\u0052\u0044\u0057\u0069\u0064t\u0068\u003a\u0020\u0025\u0076\u000a",_dbge .SbHuffRDWidth ));
_dfbd .WriteString (_c .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0054\u003a\u0020\u0025\u0076\u000a",_dbge .SbHuffDT ));_dfbd .WriteString (_c .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0053\u003a\u0020\u0025\u0076\u000a",_dbge .SbHuffDS ));
_dfbd .WriteString (_c .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0046\u0053\u003a\u0020\u0025\u0076\u000a",_dbge .SbHuffFS ));};_dfbd .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_dbge .SbrATX ));
_dfbd .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0059:\u0020\u0025\u0076\u000a",_dbge .SbrATY ));_dfbd .WriteString (_c .Sprintf ("\u0009\u002d\u0020N\u0075\u006d\u0062\u0065r\u004f\u0066\u0053\u0079\u006d\u0062\u006fl\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_dbge .NumberOfSymbolInstances ));
_dfbd .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_dbge .SbrATX ));return _dfbd .String ();};func (_beada *PageInformationSegment )readCombinationOperator ()error {_bfa ,_agdd :=_beada ._cgbaf .ReadBits (2);
if _agdd !=nil {return _agdd ;};_beada ._bfb =_e .CombinationOperator (int (_bfa ));return nil ;};func (_adbd *TextRegion )decodeID ()(int64 ,error ){if _adbd .IsHuffmanEncoded {if _adbd ._accg ==nil {_fdga ,_ccee :=_adbd ._cfda .ReadBits (byte (_adbd ._dcef ));
return int64 (_fdga ),_ccee ;};return _adbd ._accg .Decode (_adbd ._cfda );};return _adbd ._eebc .DecodeIAID (uint64 (_adbd ._dcef ),_adbd ._abec );};func (_acba *Header )writeSegmentPageAssociation (_dbg _afb .BinaryWriter )(_fdde int ,_fda error ){const _ddggb ="w\u0072\u0069\u0074\u0065\u0053\u0065g\u006d\u0065\u006e\u0074\u0050\u0061\u0067\u0065\u0041s\u0073\u006f\u0063i\u0061t\u0069\u006f\u006e";
if _acba .pageSize ()!=4{if _fda =_dbg .WriteByte (byte (_acba .PageAssociation ));_fda !=nil {return 0,_fcf .Wrap (_fda ,_ddggb ,"\u0070\u0061\u0067\u0065\u0053\u0069\u007a\u0065\u0020\u0021\u003d\u0020\u0034");};return 1,nil ;};_add :=make ([]byte ,4);
_dd .BigEndian .PutUint32 (_add ,uint32 (_acba .PageAssociation ));if _fdde ,_fda =_dbg .Write (_add );_fda !=nil {return 0,_fcf .Wrap (_fda ,_ddggb ,"\u0034 \u0062y\u0074\u0065\u0020\u0070\u0061g\u0065\u0020n\u0075\u006d\u0062\u0065\u0072");};return _fdde ,nil ;
};func (_daeb *TextRegion )blit (_ebcg *_e .Bitmap ,_eefag int64 )error {if _daeb .IsTransposed ==0&&(_daeb .ReferenceCorner ==2||_daeb .ReferenceCorner ==3){_daeb ._gfcg +=int64 (_ebcg .Width -1);}else if _daeb .IsTransposed ==1&&(_daeb .ReferenceCorner ==0||_daeb .ReferenceCorner ==2){_daeb ._gfcg +=int64 (_ebcg .Height -1);
};_aadb :=_daeb ._gfcg ;if _daeb .IsTransposed ==1{_aadb ,_eefag =_eefag ,_aadb ;};switch _daeb .ReferenceCorner {case 0:_eefag -=int64 (_ebcg .Height -1);case 2:_eefag -=int64 (_ebcg .Height -1);_aadb -=int64 (_ebcg .Width -1);case 3:_aadb -=int64 (_ebcg .Width -1);
};_cfea :=_e .Blit (_ebcg ,_daeb .RegionBitmap ,int (_aadb ),int (_eefag ),_daeb .CombinationOperator );if _cfea !=nil {return _cfea ;};if _daeb .IsTransposed ==0&&(_daeb .ReferenceCorner ==0||_daeb .ReferenceCorner ==1){_daeb ._gfcg +=int64 (_ebcg .Width -1);
};if _daeb .IsTransposed ==1&&(_daeb .ReferenceCorner ==1||_daeb .ReferenceCorner ==3){_daeb ._gfcg +=int64 (_ebcg .Height -1);};return nil ;};func (_fdee *Header )String ()string {_cdce :=&_a .Builder {};_cdce .WriteString ("\u000a[\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045A\u0044\u0045\u0052\u005d\u000a");
_cdce .WriteString (_c .Sprintf ("\t\u002d\u0020\u0053\u0065gm\u0065n\u0074\u004e\u0075\u006d\u0062e\u0072\u003a\u0020\u0025\u0076\u000a",_fdee .SegmentNumber ));_cdce .WriteString (_c .Sprintf ("\u0009\u002d\u0020T\u0079\u0070\u0065\u003a\u0020\u0025\u0076\u000a",_fdee .Type ));
_cdce .WriteString (_c .Sprintf ("\u0009-\u0020R\u0065\u0074\u0061\u0069\u006eF\u006c\u0061g\u003a\u0020\u0025\u0076\u000a",_fdee .RetainFlag ));_cdce .WriteString (_c .Sprintf ("\u0009\u002d\u0020Pa\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_fdee .PageAssociation ));
_cdce .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0050\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074i\u006fn\u0046\u0069\u0065\u006c\u0064\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_fdee .PageAssociationFieldSize ));
_cdce .WriteString ("\u0009-\u0020R\u0054\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u0053\u003a\u000a");for _ ,_cbdf :=range _fdee .RTSNumbers {_cdce .WriteString (_c .Sprintf ("\u0009\t\u002d\u0020\u0025\u0064\u000a",_cbdf ));};_cdce .WriteString (_c .Sprintf ("\t\u002d \u0048\u0065\u0061\u0064\u0065\u0072\u004c\u0065n\u0067\u0074\u0068\u003a %\u0076\u000a",_fdee .HeaderLength ));
_cdce .WriteString (_c .Sprintf ("\u0009-\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061L\u0065n\u0067\u0074\u0068\u003a\u0020\u0025\u0076\n",_fdee .SegmentDataLength ));_cdce .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074D\u0061\u0074\u0061\u0053\u0074\u0061\u0072t\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0076\u000a",_fdee .SegmentDataStartOffset ));
return _cdce .String ();};func (_defa *TextRegion )getSymbols ()error {if _defa .Header .RTSegments !=nil {return _defa .initSymbols ();};return nil ;};func (_gdfg *TextRegion )InitEncode (globalSymbolsMap ,localSymbolsMap map[int ]int ,comps []int ,inLL *_e .Points ,symbols *_e .Bitmaps ,classIDs *_ac .IntSlice ,boxes *_e .Boxes ,width ,height ,symBits int ){_gdfg .RegionInfo =&RegionSegment {BitmapWidth :uint32 (width ),BitmapHeight :uint32 (height )};
_gdfg ._dgeae =globalSymbolsMap ;_gdfg ._bbgaa =localSymbolsMap ;_gdfg ._gdgd =comps ;_gdfg ._daaed =inLL ;_gdfg ._dfcb =symbols ;_gdfg ._gbf =classIDs ;_gdfg ._bdcb =boxes ;_gdfg ._bcbf =symBits ;};func (_dcee *SymbolDictionary )decodeNewSymbols (_ebee ,_bfba uint32 ,_fbff *_e .Bitmap ,_edgg ,_bgbc int32 )error {if _dcee ._cafa ==nil {_dcee ._cafa =_bec (_dcee ._edgc ,nil );
if _dcee ._bdfcf ==nil {var _ccag error ;_dcee ._bdfcf ,_ccag =_ag .New (_dcee ._edgc );if _ccag !=nil {return _ccag ;};};if _dcee ._cgda ==nil {_dcee ._cgda =_ag .NewStats (65536,1);};};_dcee ._cafa .setParameters (_dcee ._cgda ,_dcee ._bdfcf ,_dcee .SdrTemplate ,_ebee ,_bfba ,_fbff ,_edgg ,_bgbc ,false ,_dcee .SdrATX ,_dcee .SdrATY );
return _dcee .addSymbol (_dcee ._cafa );};func (_ggbeg *TableSegment )parseHeader ()error {var (_bdcge int ;_cfed uint64 ;_gfab error ;);_bdcge ,_gfab =_ggbeg ._edfb .ReadBit ();if _gfab !=nil {return _gfab ;};if _bdcge ==1{return _c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0061\u0062\u006c\u0065 \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0064e\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u002e\u0020\u0042\u002e\u0032\u002e1\u0020\u0043\u006f\u0064\u0065\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0042\u0069\u0074\u0020\u0037\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u007a\u0065\u0072\u006f\u002e\u0020\u0057a\u0073\u003a \u0025\u0064",_bdcge );
};if _cfed ,_gfab =_ggbeg ._edfb .ReadBits (3);_gfab !=nil {return _gfab ;};_ggbeg ._fcafb =(int32 (_cfed )+1)&0xf;if _cfed ,_gfab =_ggbeg ._edfb .ReadBits (3);_gfab !=nil {return _gfab ;};_ggbeg ._gcff =(int32 (_cfed )+1)&0xf;if _cfed ,_gfab =_ggbeg ._edfb .ReadBits (32);
_gfab !=nil {return _gfab ;};_ggbeg ._fbfb =int32 (_cfed &_b .MaxInt32 );if _cfed ,_gfab =_ggbeg ._edfb .ReadBits (32);_gfab !=nil {return _gfab ;};_ggbeg ._fcdg =int32 (_cfed &_b .MaxInt32 );return nil ;};func (_aggbc *SymbolDictionary )readNumberOfExportedSymbols ()error {_bcea ,_bdebb :=_aggbc ._edgc .ReadBits (32);
if _bdebb !=nil {return _bdebb ;};_aggbc .NumberOfExportedSymbols =uint32 (_bcea &_b .MaxUint32 );return nil ;};func (_dacc *SymbolDictionary )setRetainedCodingContexts (_fcgd *SymbolDictionary ){_dacc ._bdfcf =_fcgd ._bdfcf ;_dacc .IsHuffmanEncoded =_fcgd .IsHuffmanEncoded ;
_dacc .UseRefinementAggregation =_fcgd .UseRefinementAggregation ;_dacc .SdTemplate =_fcgd .SdTemplate ;_dacc .SdrTemplate =_fcgd .SdrTemplate ;_dacc .SdATX =_fcgd .SdATX ;_dacc .SdATY =_fcgd .SdATY ;_dacc .SdrATX =_fcgd .SdrATX ;_dacc .SdrATY =_fcgd .SdrATY ;
_dacc ._cgda =_fcgd ._cgda ;};func (_cdafg *TextRegion )decodeDfs ()(int64 ,error ){if _cdafg .IsHuffmanEncoded {if _cdafg .SbHuffFS ==3{if _cdafg ._cgad ==nil {var _bcde error ;_cdafg ._cgad ,_bcde =_cdafg .getUserTable (0);if _bcde !=nil {return 0,_bcde ;
};};return _cdafg ._cgad .Decode (_cdafg ._cfda );};_facf ,_edba :=_ge .GetStandardTable (6+int (_cdafg .SbHuffFS ));if _edba !=nil {return 0,_edba ;};return _facf .Decode (_cdafg ._cfda );};_cccbg ,_eedb :=_cdafg ._eebc .DecodeInt (_cdafg ._ggae );if _eedb !=nil {return 0,_eedb ;
};return int64 (_cccbg ),nil ;};var _ SegmentEncoder =&GenericRegion {};func (_cecd *TableSegment )StreamReader ()*_afb .Reader {return _cecd ._edfb };func (_dgga *SymbolDictionary )readRegionFlags ()error {var (_ddcg uint64 ;_degg int ;);_ ,_fceee :=_dgga ._edgc .ReadBits (3);
if _fceee !=nil {return _fceee ;};_degg ,_fceee =_dgga ._edgc .ReadBit ();if _fceee !=nil {return _fceee ;};_dgga .SdrTemplate =int8 (_degg );_ddcg ,_fceee =_dgga ._edgc .ReadBits (2);if _fceee !=nil {return _fceee ;};_dgga .SdTemplate =int8 (_ddcg &0xf);
_degg ,_fceee =_dgga ._edgc .ReadBit ();if _fceee !=nil {return _fceee ;};if _degg ==1{_dgga ._cbdc =true ;};_degg ,_fceee =_dgga ._edgc .ReadBit ();if _fceee !=nil {return _fceee ;};if _degg ==1{_dgga ._cgaf =true ;};_degg ,_fceee =_dgga ._edgc .ReadBit ();
if _fceee !=nil {return _fceee ;};if _degg ==1{_dgga .SdHuffAggInstanceSelection =true ;};_degg ,_fceee =_dgga ._edgc .ReadBit ();if _fceee !=nil {return _fceee ;};_dgga .SdHuffBMSizeSelection =int8 (_degg );_ddcg ,_fceee =_dgga ._edgc .ReadBits (2);if _fceee !=nil {return _fceee ;
};_dgga .SdHuffDecodeWidthSelection =int8 (_ddcg &0xf);_ddcg ,_fceee =_dgga ._edgc .ReadBits (2);if _fceee !=nil {return _fceee ;};_dgga .SdHuffDecodeHeightSelection =int8 (_ddcg &0xf);_degg ,_fceee =_dgga ._edgc .ReadBit ();if _fceee !=nil {return _fceee ;
};if _degg ==1{_dgga .UseRefinementAggregation =true ;};_degg ,_fceee =_dgga ._edgc .ReadBit ();if _fceee !=nil {return _fceee ;};if _degg ==1{_dgga .IsHuffmanEncoded =true ;};return nil ;};func _bec (_gbbg *_afb .Reader ,_cef *Header )*GenericRefinementRegion {return &GenericRefinementRegion {_ga :_gbbg ,RegionInfo :NewRegionSegment (_gbbg ),_gbe :_cef ,_agg :&template0 {},_gb :&template1 {}};
};type EncodeInitializer interface{InitEncode ();};func (_aeed *PageInformationSegment )readRequiresAuxiliaryBuffer ()error {_aeea ,_gddc :=_aeed ._cgbaf .ReadBit ();if _gddc !=nil {return _gddc ;};if _aeea ==1{_aeed ._abgf =true ;};return nil ;};func (_ecaf *TableSegment )Init (h *Header ,r *_afb .Reader )error {_ecaf ._edfb =r ;
return _ecaf .parseHeader ();};func (_eedg *GenericRegion )decodeTemplate0a (_cebee ,_dffg ,_ffd int ,_gfe ,_ffa int )(_bcba error ){const _cgc ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0061";var (_aeg ,_cefb int ;
_gab ,_aegf int ;_fef byte ;_fbc int ;);if _cebee >=1{_fef ,_bcba =_eedg .Bitmap .GetByte (_ffa );if _bcba !=nil {return _fcf .Wrap (_bcba ,_cgc ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_gab =int (_fef );};if _cebee >=2{_fef ,_bcba =_eedg .Bitmap .GetByte (_ffa -_eedg .Bitmap .RowStride );
if _bcba !=nil {return _fcf .Wrap (_bcba ,_cgc ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_aegf =int (_fef )<<6;};_aeg =(_gab &0xf0)|(_aegf &0x3800);for _babf :=0;_babf < _ffd ;_babf =_fbc {var (_acg byte ;_gfa int ;);_fbc =_babf +8;if _gfea :=_dffg -_babf ;
_gfea > 8{_gfa =8;}else {_gfa =_gfea ;};if _cebee > 0{_gab <<=8;if _fbc < _dffg {_fef ,_bcba =_eedg .Bitmap .GetByte (_ffa +1);if _bcba !=nil {return _fcf .Wrap (_bcba ,_cgc ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_gab |=int (_fef );};};
if _cebee > 1{_decg :=_ffa -_eedg .Bitmap .RowStride +1;_aegf <<=8;if _fbc < _dffg {_fef ,_bcba =_eedg .Bitmap .GetByte (_decg );if _bcba !=nil {return _fcf .Wrap (_bcba ,_cgc ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_aegf |=int (_fef )<<6;
}else {_aegf |=0;};};for _fcaf :=0;_fcaf < _gfa ;_fcaf ++{_db :=uint (7-_fcaf );if _eedg ._agf {_cefb =_eedg .overrideAtTemplate0a (_aeg ,_babf +_fcaf ,_cebee ,int (_acg ),_fcaf ,int (_db ));_eedg ._dee .SetIndex (int32 (_cefb ));}else {_eedg ._dee .SetIndex (int32 (_aeg ));
};var _eaf int ;_eaf ,_bcba =_eedg ._cbae .DecodeBit (_eedg ._dee );if _bcba !=nil {return _fcf .Wrap (_bcba ,_cgc ,"");};_acg |=byte (_eaf )<<_db ;_aeg =((_aeg &0x7bf7)<<1)|_eaf |((_gab >>_db )&0x10)|((_aegf >>_db )&0x800);};if _eeac :=_eedg .Bitmap .SetByte (_gfe ,_acg );
_eeac !=nil {return _fcf .Wrap (_eeac ,_cgc ,"");};_gfe ++;_ffa ++;};return nil ;};func (_bgge *PatternDictionary )setGbAtPixels (){if _bgge .HDTemplate ==0{_bgge .GBAtX =make ([]int8 ,4);_bgge .GBAtY =make ([]int8 ,4);_bgge .GBAtX [0]=-int8 (_bgge .HdpWidth );
_bgge .GBAtY [0]=0;_bgge .GBAtX [1]=-3;_bgge .GBAtY [1]=-1;_bgge .GBAtX [2]=2;_bgge .GBAtY [2]=-2;_bgge .GBAtX [3]=-2;_bgge .GBAtY [3]=-2;}else {_bgge .GBAtX =[]int8 {-int8 (_bgge .HdpWidth )};_bgge .GBAtY =[]int8 {0};};};func (_eff *PageInformationSegment )readContainsRefinement ()error {_acbe ,_fcdc :=_eff ._cgbaf .ReadBit ();
if _fcdc !=nil {return _fcdc ;};if _acbe ==1{_eff ._agd =true ;};return nil ;};func (_fbbf *SymbolDictionary )InitEncode (symbols *_e .Bitmaps ,symbolList []int ,symbolMap map[int ]int ,unborderSymbols bool )error {const _gaed ="S\u0079\u006d\u0062\u006f\u006c\u0044i\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002eI\u006e\u0069\u0074E\u006ec\u006f\u0064\u0065";
_fbbf .SdATX =[]int8 {3,-3,2,-2};_fbbf .SdATY =[]int8 {-1,-1,-2,-2};_fbbf ._ffec =symbols ;_fbbf ._eeace =make ([]int ,len (symbolList ));copy (_fbbf ._eeace ,symbolList );if len (_fbbf ._eeace )!=_fbbf ._ffec .Size (){return _fcf .Error (_gaed ,"s\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0061\u006e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u004ci\u0073\u0074\u0020\u006f\u0066\u0020\u0064\u0069\u0066\u0066er\u0065\u006e\u0074 \u0073i\u007a\u0065");
};_fbbf .NumberOfNewSymbols =uint32 (symbols .Size ());_fbbf .NumberOfExportedSymbols =uint32 (symbols .Size ());_fbbf ._ebgb =symbolMap ;_fbbf ._gfgg =unborderSymbols ;return nil ;};func (_aab *GenericRegion )decodeLine (_bfc ,_eab ,_abgd int )error {const _ecba ="\u0064\u0065\u0063\u006f\u0064\u0065\u004c\u0069\u006e\u0065";
_caa :=_aab .Bitmap .GetByteIndex (0,_bfc );_dadfe :=_caa -_aab .Bitmap .RowStride ;switch _aab .GBTemplate {case 0:if !_aab .UseExtTemplates {return _aab .decodeTemplate0a (_bfc ,_eab ,_abgd ,_caa ,_dadfe );};return _aab .decodeTemplate0b (_bfc ,_eab ,_abgd ,_caa ,_dadfe );
case 1:return _aab .decodeTemplate1 (_bfc ,_eab ,_abgd ,_caa ,_dadfe );case 2:return _aab .decodeTemplate2 (_bfc ,_eab ,_abgd ,_caa ,_dadfe );case 3:return _aab .decodeTemplate3 (_bfc ,_eab ,_abgd ,_caa ,_dadfe );};return _fcf .Errorf (_ecba ,"\u0069\u006e\u0076a\u006c\u0069\u0064\u0020G\u0042\u0054\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u003a\u0020\u0025\u0064",_aab .GBTemplate );
};func (_bdcg *HalftoneRegion )computeX (_fefa ,_cgcg int )int {return _bdcg .shiftAndFill (int (_bdcg .HGridX )+_fefa *int (_bdcg .HRegionY )+_cgcg *int (_bdcg .HRegionX ));};func (_eeae *Header )CleanSegmentData (){if _eeae .SegmentData !=nil {_eeae .SegmentData =nil ;
};};func (_fdcd *HalftoneRegion )GetPatterns ()([]*_e .Bitmap ,error ){var (_ceab []*_e .Bitmap ;_fff error ;);for _ ,_ggaa :=range _fdcd ._beec .RTSegments {var _cbee Segmenter ;_cbee ,_fff =_ggaa .GetSegmentData ();if _fff !=nil {_cb .Log .Debug ("\u0047e\u0074\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061 \u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025v",_fff );
return nil ,_fff ;};_gbc ,_bbeb :=_cbee .(*PatternDictionary );if !_bbeb {_fff =_c .Errorf ("\u0072e\u006c\u0061t\u0065\u0064\u0020\u0073e\u0067\u006d\u0065n\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0070at\u0074\u0065\u0072n\u0020\u0064i\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u003a \u0025\u0054",_cbee );
return nil ,_fff ;};var _fdg []*_e .Bitmap ;_fdg ,_fff =_gbc .GetDictionary ();if _fff !=nil {_cb .Log .Debug ("\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_fff );
return nil ,_fff ;};_ceab =append (_ceab ,_fdg ...);};return _ceab ,nil ;};func (_bbdb *GenericRegion )setParametersMMR (_fgf bool ,_gedc ,_agae int64 ,_baec ,_cefdf uint32 ,_bgfd byte ,_efbcff ,_cgbe bool ,_bdac ,_adg []int8 ){_bbdb .DataOffset =_gedc ;
_bbdb .DataLength =_agae ;_bbdb .RegionSegment =&RegionSegment {};_bbdb .RegionSegment .BitmapHeight =_baec ;_bbdb .RegionSegment .BitmapWidth =_cefdf ;_bbdb .GBTemplate =_bgfd ;_bbdb .IsMMREncoded =_fgf ;_bbdb .IsTPGDon =_efbcff ;_bbdb .GBAtX =_bdac ;
_bbdb .GBAtY =_adg ;};func (_abade *SymbolDictionary )addSymbol (_gfag Regioner )error {_gfgcf ,_dfdfb :=_gfag .GetRegionBitmap ();if _dfdfb !=nil {return _dfdfb ;};_abade ._gebc [_abade ._fba ]=_gfgcf ;_abade ._aggg =append (_abade ._aggg ,_gfgcf );_cb .Log .Trace ("\u005b\u0053YM\u0042\u004f\u004c \u0044\u0049\u0043\u0054ION\u0041RY\u005d\u0020\u0041\u0064\u0064\u0065\u0064 s\u0079\u006d\u0062\u006f\u006c\u003a\u0020%\u0073",_gfgcf );
return nil ;};func (_ace *GenericRefinementRegion )parseHeader ()(_ggbf error ){_cb .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0048e\u0061\u0064e\u0072\u002e\u002e\u002e");
_ddba :=_g .Now ();defer func (){if _ggbf ==nil {_cb .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045G\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020h\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0069\u006e\u0069\u0073\u0068id\u0020\u0069\u006e\u003a\u0020\u0025\u0064\u0020\u006e\u0073",_g .Since (_ddba ).Nanoseconds ());
}else {_cb .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0068\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0073",_ggbf );
};}();if _ggbf =_ace .RegionInfo .parseHeader ();_ggbf !=nil {return _ggbf ;};_ ,_ggbf =_ace ._ga .ReadBits (6);if _ggbf !=nil {return _ggbf ;};_ace .IsTPGROn ,_ggbf =_ace ._ga .ReadBool ();if _ggbf !=nil {return _ggbf ;};var _ae int ;_ae ,_ggbf =_ace ._ga .ReadBit ();
if _ggbf !=nil {return _ggbf ;};_ace .TemplateID =int8 (_ae );switch _ace .TemplateID {case 0:_ace .Template =_ace ._agg ;if _ggbf =_ace .readAtPixels ();_ggbf !=nil {return ;};case 1:_ace .Template =_ace ._gb ;};return nil ;};func (_ccb *GenericRegion )Size ()int {return _ccb .RegionSegment .Size ()+1+2*len (_ccb .GBAtX )};
func (_ggad *Header )readReferredToSegmentNumbers (_gbda *_afb .Reader ,_fbfe int )([]int ,error ){const _aad ="\u0072\u0065\u0061\u0064R\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053e\u0067m\u0065\u006e\u0074\u004e\u0075\u006d\u0062e\u0072\u0073";
_gfdf :=make ([]int ,_fbfe );if _fbfe > 0{_ggad .RTSegments =make ([]*Header ,_fbfe );var (_cgcd uint64 ;_ffda error ;);for _abac :=0;_abac < _fbfe ;_abac ++{_cgcd ,_ffda =_gbda .ReadBits (byte (_ggad .referenceSize ())<<3);if _ffda !=nil {return nil ,_fcf .Wrapf (_ffda ,_aad ,"\u0027\u0025\u0064\u0027 \u0072\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0020\u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u0075\u006db\u0065\u0072",_abac );
};_gfdf [_abac ]=int (_cgcd &_b .MaxInt32 );};};return _gfdf ,nil ;};func (_fdcg *SymbolDictionary )getSymbol (_addf int )(*_e .Bitmap ,error ){const _daae ="\u0067e\u0074\u0053\u0079\u006d\u0062\u006fl";_cab ,_adc :=_fdcg ._ffec .GetBitmap (_fdcg ._eeace [_addf ]);
if _adc !=nil {return nil ,_fcf .Wrap (_adc ,_daae ,"\u0063\u0061n\u0027\u0074\u0020g\u0065\u0074\u0020\u0073\u0079\u006d\u0062\u006f\u006c");};return _cab ,nil ;};func (_ffdc *TextRegion )Encode (w _afb .BinaryWriter )(_fbfd int ,_aega error ){const _cdaf ="\u0054\u0065\u0078\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u002e\u0045n\u0063\u006f\u0064\u0065";
if _fbfd ,_aega =_ffdc .RegionInfo .Encode (w );_aega !=nil {return _fbfd ,_fcf .Wrap (_aega ,_cdaf ,"");};var _ecdb int ;if _ecdb ,_aega =_ffdc .encodeFlags (w );_aega !=nil {return _fbfd ,_fcf .Wrap (_aega ,_cdaf ,"");};_fbfd +=_ecdb ;if _ecdb ,_aega =_ffdc .encodeSymbols (w );
_aega !=nil {return _fbfd ,_fcf .Wrap (_aega ,_cdaf ,"");};_fbfd +=_ecdb ;return _fbfd ,nil ;};func (_ggdb *TextRegion )readUseRefinement ()error {if !_ggdb .UseRefinement ||_ggdb .SbrTemplate !=0{return nil ;};var (_befa byte ;_bfaa error ;);_ggdb .SbrATX =make ([]int8 ,2);
_ggdb .SbrATY =make ([]int8 ,2);_befa ,_bfaa =_ggdb ._cfda .ReadByte ();if _bfaa !=nil {return _bfaa ;};_ggdb .SbrATX [0]=int8 (_befa );_befa ,_bfaa =_ggdb ._cfda .ReadByte ();if _bfaa !=nil {return _bfaa ;};_ggdb .SbrATY [0]=int8 (_befa );_befa ,_bfaa =_ggdb ._cfda .ReadByte ();
if _bfaa !=nil {return _bfaa ;};_ggdb .SbrATX [1]=int8 (_befa );_befa ,_bfaa =_ggdb ._cfda .ReadByte ();if _bfaa !=nil {return _bfaa ;};_ggdb .SbrATY [1]=int8 (_befa );return nil ;};func (_gc *GenericRefinementRegion )GetRegionBitmap ()(*_e .Bitmap ,error ){var _eb error ;
_cb .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _eb !=nil {_cb .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0047\u0065\u0074R\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006dap\u0020\u0066a\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_eb );
}else {_cb .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _gc .RegionBitmap !=nil {return _gc .RegionBitmap ,nil ;};_ddd :=0;if _gc .ReferenceBitmap ==nil {_gc .ReferenceBitmap ,_eb =_gc .getGrReference ();if _eb !=nil {return nil ,_eb ;};};if _gc ._bg ==nil {_gc ._bg ,_eb =_ag .New (_gc ._ga );if _eb !=nil {return nil ,_eb ;
};};if _gc ._ea ==nil {_gc ._ea =_ag .NewStats (8192,1);};_gc .RegionBitmap =_e .New (int (_gc .RegionInfo .BitmapWidth ),int (_gc .RegionInfo .BitmapHeight ));if _gc .TemplateID ==0{if _eb =_gc .updateOverride ();_eb !=nil {return nil ,_eb ;};};_cf :=(_gc .RegionBitmap .Width +7)&-8;
var _aba int ;if _gc .IsTPGROn {_aba =int (-_gc .ReferenceDY )*_gc .ReferenceBitmap .RowStride ;};_bd :=_aba +1;for _cg :=0;_cg < _gc .RegionBitmap .Height ;_cg ++{if _gc .IsTPGROn {_ef ,_egg :=_gc .decodeSLTP ();if _egg !=nil {return nil ,_egg ;};_ddd ^=_ef ;
};if _ddd ==0{_eb =_gc .decodeOptimized (_cg ,_gc .RegionBitmap .Width ,_gc .RegionBitmap .RowStride ,_gc .ReferenceBitmap .RowStride ,_cf ,_aba ,_bd );if _eb !=nil {return nil ,_eb ;};}else {_eb =_gc .decodeTypicalPredictedLine (_cg ,_gc .RegionBitmap .Width ,_gc .RegionBitmap .RowStride ,_gc .ReferenceBitmap .RowStride ,_cf ,_aba );
if _eb !=nil {return nil ,_eb ;};};};return _gc .RegionBitmap ,nil ;};func (_dagf *GenericRegion )readGBAtPixels (_agcd int )error {const _baf ="\u0072\u0065\u0061\u0064\u0047\u0042\u0041\u0074\u0050i\u0078\u0065\u006c\u0073";_dagf .GBAtX =make ([]int8 ,_agcd );
_dagf .GBAtY =make ([]int8 ,_agcd );for _fdbf :=0;_fdbf < _agcd ;_fdbf ++{_dffb ,_dgg :=_dagf ._bdg .ReadByte ();if _dgg !=nil {return _fcf .Wrapf (_dgg ,_baf ,"\u0058\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_fdbf );};_dagf .GBAtX [_fdbf ]=int8 (_dffb );
_dffb ,_dgg =_dagf ._bdg .ReadByte ();if _dgg !=nil {return _fcf .Wrapf (_dgg ,_baf ,"\u0059\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_fdbf );};_dagf .GBAtY [_fdbf ]=int8 (_dffb );};return nil ;};func (_gafg *SymbolDictionary )encodeSymbols (_dfee _afb .BinaryWriter )(_cbfeg int ,_eegf error ){const _aafc ="\u0065\u006e\u0063o\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c";
_fdae :=_bb .New ();_fdae .Init ();_acad ,_eegf :=_gafg ._ffec .SelectByIndexes (_gafg ._eeace );if _eegf !=nil {return 0,_fcf .Wrap (_eegf ,_aafc ,"\u0069n\u0069\u0074\u0069\u0061\u006c");};_bgfc :=map[*_e .Bitmap ]int {};for _bafb ,_eddf :=range _acad .Values {_bgfc [_eddf ]=_bafb ;
};_acad .SortByHeight ();var _abea ,_baa int ;_edfe ,_eegf :=_acad .GroupByHeight ();if _eegf !=nil {return 0,_fcf .Wrap (_eegf ,_aafc ,"");};for _ ,_gdcg :=range _edfe .Values {_cafgg :=_gdcg .Values [0].Height ;_fcceg :=_cafgg -_abea ;if _eegf =_fdae .EncodeInteger (_bb .IADH ,_fcceg );
_eegf !=nil {return 0,_fcf .Wrapf (_eegf ,_aafc ,"\u0049\u0041\u0044\u0048\u0020\u0066\u006f\u0072\u0020\u0064\u0068\u003a \u0027\u0025\u0064\u0027",_fcceg );};_abea =_cafgg ;_edbg ,_bdgg :=_gdcg .GroupByWidth ();if _bdgg !=nil {return 0,_fcf .Wrapf (_bdgg ,_aafc ,"\u0068\u0065\u0069g\u0068\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_cafgg );
};var _dbbb int ;for _ ,_gbga :=range _edbg .Values {for _ ,_cfggb :=range _gbga .Values {_fcbe :=_cfggb .Width ;_eedc :=_fcbe -_dbbb ;if _bdgg =_fdae .EncodeInteger (_bb .IADW ,_eedc );_bdgg !=nil {return 0,_fcf .Wrapf (_bdgg ,_aafc ,"\u0049\u0041\u0044\u0057\u0020\u0066\u006f\u0072\u0020\u0064\u0077\u003a \u0027\u0025\u0064\u0027",_eedc );
};_dbbb +=_eedc ;if _bdgg =_fdae .EncodeBitmap (_cfggb ,false );_bdgg !=nil {return 0,_fcf .Wrapf (_bdgg ,_aafc ,"H\u0065i\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u0020W\u0069\u0064\u0074\u0068: \u0025\u0064",_cafgg ,_fcbe );};_bfae :=_bgfc [_cfggb ];
_gafg ._ebgb [_bfae ]=_baa ;_baa ++;};};if _bdgg =_fdae .EncodeOOB (_bb .IADW );_bdgg !=nil {return 0,_fcf .Wrap (_bdgg ,_aafc ,"\u0049\u0041\u0044\u0057");};};if _eegf =_fdae .EncodeInteger (_bb .IAEX ,0);_eegf !=nil {return 0,_fcf .Wrap (_eegf ,_aafc ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};if _eegf =_fdae .EncodeInteger (_bb .IAEX ,len (_gafg ._eeace ));_eegf !=nil {return 0,_fcf .Wrap (_eegf ,_aafc ,"\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0073\u0079m\u0062\u006f\u006c\u0073");};_fdae .Final ();_bcee ,_eegf :=_fdae .WriteTo (_dfee );
if _eegf !=nil {return 0,_fcf .Wrap (_eegf ,_aafc ,"\u0077\u0072i\u0074\u0069\u006e\u0067 \u0065\u006ec\u006f\u0064\u0065\u0072\u0020\u0063\u006f\u006et\u0065\u0078\u0074\u0020\u0074\u006f\u0020\u0027\u0077\u0027\u0020\u0077r\u0069\u0074\u0065\u0072");
};return int (_bcee ),nil ;};func (_edgb *PageInformationSegment )String ()string {_gbdb :=&_a .Builder {};_gbdb .WriteString ("\u000a\u005b\u0050\u0041G\u0045\u002d\u0049\u004e\u0046\u004f\u0052\u004d\u0041\u0054I\u004fN\u002d\u0053\u0045\u0047\u004d\u0045\u004eT\u005d\u000a");
_gbdb .WriteString (_c .Sprintf ("\u0009\u002d \u0042\u004d\u0048e\u0069\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u000a",_edgb .PageBMHeight ));_gbdb .WriteString (_c .Sprintf ("\u0009-\u0020B\u004d\u0057\u0069\u0064\u0074\u0068\u003a\u0020\u0025\u0064\u000a",_edgb .PageBMWidth ));
_gbdb .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0058\u003a\u0020\u0025\u0064\u000a",_edgb .ResolutionX ));_gbdb .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0059\u003a\u0020\u0025\u0064\u000a",_edgb .ResolutionY ));
_gbdb .WriteString (_c .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0073\u000a",_edgb ._bfb ));_gbdb .WriteString (_c .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006eO\u0070\u0065\u0072\u0061\u0074\u006f\u0072O\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025v\u000a",_edgb ._affc ));
_gbdb .WriteString (_c .Sprintf ("\u0009-\u0020I\u0073\u004c\u006f\u0073\u0073l\u0065\u0073s\u003a\u0020\u0025\u0076\u000a",_edgb .IsLossless ));_gbdb .WriteString (_c .Sprintf ("\u0009\u002d\u0020R\u0065\u0071\u0075\u0069r\u0065\u0073\u0041\u0075\u0078\u0069\u006ci\u0061\u0072\u0079\u0042\u0075\u0066\u0066\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_edgb ._abgf ));
_gbdb .WriteString (_c .Sprintf ("\u0009\u002d\u0020M\u0069\u0067\u0068\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0052e\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0076\u000a",_edgb ._agd ));_gbdb .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0049\u0073\u0053\u0074\u0072\u0069\u0070\u0065\u0064:\u0020\u0025\u0076\u000a",_edgb .IsStripe ));
_gbdb .WriteString (_c .Sprintf ("\t\u002d\u0020\u004d\u0061xS\u0074r\u0069\u0070\u0065\u0053\u0069z\u0065\u003a\u0020\u0025\u0076\u000a",_edgb .MaxStripeSize ));return _gbdb .String ();};var _ templater =&template0 {};func (_eec *GenericRegion )copyLineAbove (_gda int )error {_ggc :=_gda *_eec .Bitmap .RowStride ;
_fbf :=_ggc -_eec .Bitmap .RowStride ;for _afd :=0;_afd < _eec .Bitmap .RowStride ;_afd ++{_afeg ,_ebag :=_eec .Bitmap .GetByte (_fbf );if _ebag !=nil {return _ebag ;};_fbf ++;if _ebag =_eec .Bitmap .SetByte (_ggc ,_afeg );_ebag !=nil {return _ebag ;};
_ggc ++;};return nil ;};func (_gdaf *GenericRegion )setParametersWithAt (_efed bool ,_gadc byte ,_becd ,_gddb bool ,_egce ,_bebf []int8 ,_agfd ,_bgcg uint32 ,_bcbae *_ag .DecoderStats ,_eegae *_ag .Decoder ){_gdaf .IsMMREncoded =_efed ;_gdaf .GBTemplate =_gadc ;
_gdaf .IsTPGDon =_becd ;_gdaf .GBAtX =_egce ;_gdaf .GBAtY =_bebf ;_gdaf .RegionSegment .BitmapHeight =_bgcg ;_gdaf .RegionSegment .BitmapWidth =_agfd ;_gdaf ._eed =nil ;_gdaf .Bitmap =nil ;if _bcbae !=nil {_gdaf ._dee =_bcbae ;};if _eegae !=nil {_gdaf ._cbae =_eegae ;
};_cb .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049O\u004e\u005d\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073\u0020\u0053\u0044\u0041t\u003a\u0020\u0025\u0073",_gdaf );};func (_cfge *GenericRegion )String ()string {_gfbe :=&_a .Builder {};
_gfbe .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_gfbe .WriteString (_cfge .RegionSegment .String ()+"\u000a");_gfbe .WriteString (_c .Sprintf ("\u0009\u002d\u0020Us\u0065\u0045\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_cfge .UseExtTemplates ));
_gfbe .WriteString (_c .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0044\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_cfge .IsTPGDon ));_gfbe .WriteString (_c .Sprintf ("\u0009-\u0020G\u0042\u0054\u0065\u006d\u0070l\u0061\u0074e\u003a\u0020\u0025\u0064\u000a",_cfge .GBTemplate ));
_gfbe .WriteString (_c .Sprintf ("\t\u002d \u0049\u0073\u004d\u004d\u0052\u0045\u006e\u0063o\u0064\u0065\u0064\u003a %\u0076\u000a",_cfge .IsMMREncoded ));_gfbe .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_cfge .GBAtX ));
_gfbe .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_cfge .GBAtY ));_gfbe .WriteString (_c .Sprintf ("\t\u002d \u0047\u0042\u0041\u0074\u004f\u0076\u0065\u0072r\u0069\u0064\u0065\u003a %\u0076\u000a",_cfge .GBAtOverride ));
return _gfbe .String ();};func (_gea *PageInformationSegment )CombinationOperator ()_e .CombinationOperator {return _gea ._bfb };func (_bgaa *Header )Encode (w _afb .BinaryWriter )(_eeb int ,_ddgg error ){const _egfb ="\u0048\u0065\u0061d\u0065\u0072\u002e\u0057\u0072\u0069\u0074\u0065";
var _dde _afb .BinaryWriter ;_cb .Log .Trace ("\u005b\u0053\u0045G\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045\u0052\u005d[\u0045\u004e\u0043\u004f\u0044\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _ddgg !=nil {_cb .Log .Trace ("[\u0053\u0045\u0047\u004d\u0045\u004eT\u002d\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0045\u004e\u0043\u004f\u0044E\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020%\u0076",_ddgg );
}else {_cb .Log .Trace ("\u005b\u0053\u0045\u0047ME\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0025\u0076",_bgaa );_cb .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045N\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u005b\u0045\u004e\u0043O\u0044\u0045\u005d\u0020\u0046\u0069\u006ei\u0073\u0068\u0065\u0064");
};}();w .FinishByte ();if _bgaa .SegmentData !=nil {_cffc ,_caaa :=_bgaa .SegmentData .(SegmentEncoder );if !_caaa {return 0,_fcf .Errorf (_egfb ,"\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0064\u006f\u0065s\u006e\u0027\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074 \u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0045\u006e\u0063\u006f\u0064er\u0020\u0069\u006e\u0074\u0065\u0072\u0066\u0061\u0063\u0065",_bgaa .SegmentData );
};_dde =_afb .BufferedMSB ();_eeb ,_ddgg =_cffc .Encode (_dde );if _ddgg !=nil {return 0,_fcf .Wrap (_ddgg ,_egfb ,"");};_bgaa .SegmentDataLength =uint64 (_eeb );};if _bgaa .pageSize ()==4{_bgaa .PageAssociationFieldSize =true ;};var _gaef int ;_gaef ,_ddgg =_bgaa .writeSegmentNumber (w );
if _ddgg !=nil {return 0,_fcf .Wrap (_ddgg ,_egfb ,"");};_eeb +=_gaef ;if _ddgg =_bgaa .writeFlags (w );_ddgg !=nil {return _eeb ,_fcf .Wrap (_ddgg ,_egfb ,"");};_eeb ++;_gaef ,_ddgg =_bgaa .writeReferredToCount (w );if _ddgg !=nil {return 0,_fcf .Wrap (_ddgg ,_egfb ,"");
};_eeb +=_gaef ;_gaef ,_ddgg =_bgaa .writeReferredToSegments (w );if _ddgg !=nil {return 0,_fcf .Wrap (_ddgg ,_egfb ,"");};_eeb +=_gaef ;_gaef ,_ddgg =_bgaa .writeSegmentPageAssociation (w );if _ddgg !=nil {return 0,_fcf .Wrap (_ddgg ,_egfb ,"");};_eeb +=_gaef ;
_gaef ,_ddgg =_bgaa .writeSegmentDataLength (w );if _ddgg !=nil {return 0,_fcf .Wrap (_ddgg ,_egfb ,"");};_eeb +=_gaef ;_bgaa .HeaderLength =int64 (_eeb )-int64 (_bgaa .SegmentDataLength );if _dde !=nil {if _ ,_ddgg =w .Write (_dde .Data ());_ddgg !=nil {return _eeb ,_fcf .Wrap (_ddgg ,_egfb ,"\u0077r\u0069t\u0065\u0020\u0073\u0065\u0067m\u0065\u006et\u0020\u0064\u0061\u0074\u0061");
};};return _eeb ,nil ;};func (_cadg *Header )readDataStartOffset (_eaca *_afb .Reader ,_edf OrganizationType ){if _edf ==OSequential {_cadg .SegmentDataStartOffset =uint64 (_eaca .AbsolutePosition ());};};func (_egfe *GenericRegion )Encode (w _afb .BinaryWriter )(_dfe int ,_bcg error ){const _fdbe ="G\u0065n\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069o\u006e\u002e\u0045\u006eco\u0064\u0065";
if _egfe .Bitmap ==nil {return 0,_fcf .Error (_fdbe ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};_fbe ,_bcg :=_egfe .RegionSegment .Encode (w );if _bcg !=nil {return 0,_fcf .Wrap (_bcg ,_fdbe ,"\u0052\u0065\u0067\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};_dfe +=_fbe ;if _bcg =w .SkipBits (4);_bcg !=nil {return _dfe ,_fcf .Wrap (_bcg ,_fdbe ,"\u0073k\u0069p\u0020\u0072\u0065\u0073\u0065r\u0076\u0065d\u0020\u0062\u0069\u0074\u0073");};var _efe int ;if _egfe .IsTPGDon {_efe =1;};if _bcg =w .WriteBit (_efe );
_bcg !=nil {return _dfe ,_fcf .Wrap (_bcg ,_fdbe ,"\u0074\u0070\u0067\u0064\u006f\u006e");};_efe =0;if _bcg =w .WriteBit (int (_egfe .GBTemplate >>1)&0x01);_bcg !=nil {return _dfe ,_fcf .Wrap (_bcg ,_fdbe ,"f\u0069r\u0073\u0074\u0020\u0067\u0062\u0074\u0065\u006dp\u006c\u0061\u0074\u0065 b\u0069\u0074");
};if _bcg =w .WriteBit (int (_egfe .GBTemplate )&0x01);_bcg !=nil {return _dfe ,_fcf .Wrap (_bcg ,_fdbe ,"s\u0065\u0063\u006f\u006ed \u0067b\u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u0062\u0069\u0074");};if _egfe .UseMMR {_efe =1;};if _bcg =w .WriteBit (_efe );
_bcg !=nil {return _dfe ,_fcf .Wrap (_bcg ,_fdbe ,"u\u0073\u0065\u0020\u004d\u004d\u0052\u0020\u0062\u0069\u0074");};_dfe ++;if _fbe ,_bcg =_egfe .writeGBAtPixels (w );_bcg !=nil {return _dfe ,_fcf .Wrap (_bcg ,_fdbe ,"");};_dfe +=_fbe ;_dec :=_bb .New ();
if _bcg =_dec .EncodeBitmap (_egfe .Bitmap ,_egfe .IsTPGDon );_bcg !=nil {return _dfe ,_fcf .Wrap (_bcg ,_fdbe ,"");};_dec .Final ();var _gaf int64 ;if _gaf ,_bcg =_dec .WriteTo (w );_bcg !=nil {return _dfe ,_fcf .Wrap (_bcg ,_fdbe ,"");};_dfe +=int (_gaf );
return _dfe ,nil ;};func (_fdbfc *TextRegion )decodeRdx ()(int64 ,error ){const _defgg ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064x";if _fdbfc .IsHuffmanEncoded {if _fdbfc .SbHuffRDX ==3{if _fdbfc ._bbbb ==nil {var (_eadde int ;_becg error ;);if _fdbfc .SbHuffFS ==3{_eadde ++;
};if _fdbfc .SbHuffDS ==3{_eadde ++;};if _fdbfc .SbHuffDT ==3{_eadde ++;};if _fdbfc .SbHuffRDWidth ==3{_eadde ++;};if _fdbfc .SbHuffRDHeight ==3{_eadde ++;};_fdbfc ._bbbb ,_becg =_fdbfc .getUserTable (_eadde );if _becg !=nil {return 0,_fcf .Wrap (_becg ,_defgg ,"");
};};return _fdbfc ._bbbb .Decode (_fdbfc ._cfda );};_ggccf ,_gfdfa :=_ge .GetStandardTable (14+int (_fdbfc .SbHuffRDX ));if _gfdfa !=nil {return 0,_fcf .Wrap (_gfdfa ,_defgg ,"");};return _ggccf .Decode (_fdbfc ._cfda );};_afggf ,_adae :=_fdbfc ._eebc .DecodeInt (_fdbfc ._cfdc );
if _adae !=nil {return 0,_fcf .Wrap (_adae ,_defgg ,"");};return int64 (_afggf ),nil ;};func (_gcc *GenericRegion )overrideAtTemplate0b (_cddc ,_dcbe ,_afgg ,_aegc ,_gfeb ,_gbbe int )int {if _gcc .GBAtOverride [0]{_cddc &=0xFFFD;if _gcc .GBAtY [0]==0&&_gcc .GBAtX [0]>=-int8 (_gfeb ){_cddc |=(_aegc >>uint (int8 (_gbbe )-_gcc .GBAtX [0]&0x1))<<1;
}else {_cddc |=int (_gcc .getPixel (_dcbe +int (_gcc .GBAtX [0]),_afgg +int (_gcc .GBAtY [0])))<<1;};};if _gcc .GBAtOverride [1]{_cddc &=0xDFFF;if _gcc .GBAtY [1]==0&&_gcc .GBAtX [1]>=-int8 (_gfeb ){_cddc |=(_aegc >>uint (int8 (_gbbe )-_gcc .GBAtX [1]&0x1))<<13;
}else {_cddc |=int (_gcc .getPixel (_dcbe +int (_gcc .GBAtX [1]),_afgg +int (_gcc .GBAtY [1])))<<13;};};if _gcc .GBAtOverride [2]{_cddc &=0xFDFF;if _gcc .GBAtY [2]==0&&_gcc .GBAtX [2]>=-int8 (_gfeb ){_cddc |=(_aegc >>uint (int8 (_gbbe )-_gcc .GBAtX [2]&0x1))<<9;
}else {_cddc |=int (_gcc .getPixel (_dcbe +int (_gcc .GBAtX [2]),_afgg +int (_gcc .GBAtY [2])))<<9;};};if _gcc .GBAtOverride [3]{_cddc &=0xBFFF;if _gcc .GBAtY [3]==0&&_gcc .GBAtX [3]>=-int8 (_gfeb ){_cddc |=(_aegc >>uint (int8 (_gbbe )-_gcc .GBAtX [3]&0x1))<<14;
}else {_cddc |=int (_gcc .getPixel (_dcbe +int (_gcc .GBAtX [3]),_afgg +int (_gcc .GBAtY [3])))<<14;};};if _gcc .GBAtOverride [4]{_cddc &=0xEFFF;if _gcc .GBAtY [4]==0&&_gcc .GBAtX [4]>=-int8 (_gfeb ){_cddc |=(_aegc >>uint (int8 (_gbbe )-_gcc .GBAtX [4]&0x1))<<12;
}else {_cddc |=int (_gcc .getPixel (_dcbe +int (_gcc .GBAtX [4]),_afgg +int (_gcc .GBAtY [4])))<<12;};};if _gcc .GBAtOverride [5]{_cddc &=0xFFDF;if _gcc .GBAtY [5]==0&&_gcc .GBAtX [5]>=-int8 (_gfeb ){_cddc |=(_aegc >>uint (int8 (_gbbe )-_gcc .GBAtX [5]&0x1))<<5;
}else {_cddc |=int (_gcc .getPixel (_dcbe +int (_gcc .GBAtX [5]),_afgg +int (_gcc .GBAtY [5])))<<5;};};if _gcc .GBAtOverride [6]{_cddc &=0xFFFB;if _gcc .GBAtY [6]==0&&_gcc .GBAtX [6]>=-int8 (_gfeb ){_cddc |=(_aegc >>uint (int8 (_gbbe )-_gcc .GBAtX [6]&0x1))<<2;
}else {_cddc |=int (_gcc .getPixel (_dcbe +int (_gcc .GBAtX [6]),_afgg +int (_gcc .GBAtY [6])))<<2;};};if _gcc .GBAtOverride [7]{_cddc &=0xFFF7;if _gcc .GBAtY [7]==0&&_gcc .GBAtX [7]>=-int8 (_gfeb ){_cddc |=(_aegc >>uint (int8 (_gbbe )-_gcc .GBAtX [7]&0x1))<<3;
}else {_cddc |=int (_gcc .getPixel (_dcbe +int (_gcc .GBAtX [7]),_afgg +int (_gcc .GBAtY [7])))<<3;};};if _gcc .GBAtOverride [8]{_cddc &=0xF7FF;if _gcc .GBAtY [8]==0&&_gcc .GBAtX [8]>=-int8 (_gfeb ){_cddc |=(_aegc >>uint (int8 (_gbbe )-_gcc .GBAtX [8]&0x1))<<11;
}else {_cddc |=int (_gcc .getPixel (_dcbe +int (_gcc .GBAtX [8]),_afgg +int (_gcc .GBAtY [8])))<<11;};};if _gcc .GBAtOverride [9]{_cddc &=0xFFEF;if _gcc .GBAtY [9]==0&&_gcc .GBAtX [9]>=-int8 (_gfeb ){_cddc |=(_aegc >>uint (int8 (_gbbe )-_gcc .GBAtX [9]&0x1))<<4;
}else {_cddc |=int (_gcc .getPixel (_dcbe +int (_gcc .GBAtX [9]),_afgg +int (_gcc .GBAtY [9])))<<4;};};if _gcc .GBAtOverride [10]{_cddc &=0x7FFF;if _gcc .GBAtY [10]==0&&_gcc .GBAtX [10]>=-int8 (_gfeb ){_cddc |=(_aegc >>uint (int8 (_gbbe )-_gcc .GBAtX [10]&0x1))<<15;
}else {_cddc |=int (_gcc .getPixel (_dcbe +int (_gcc .GBAtX [10]),_afgg +int (_gcc .GBAtY [10])))<<15;};};if _gcc .GBAtOverride [11]{_cddc &=0xFDFF;if _gcc .GBAtY [11]==0&&_gcc .GBAtX [11]>=-int8 (_gfeb ){_cddc |=(_aegc >>uint (int8 (_gbbe )-_gcc .GBAtX [11]&0x1))<<10;
}else {_cddc |=int (_gcc .getPixel (_dcbe +int (_gcc .GBAtX [11]),_afgg +int (_gcc .GBAtY [11])))<<10;};};return _cddc ;};func (_fbbg *SymbolDictionary )parseHeader ()(_dcff error ){_cb .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _dcff !=nil {_cb .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u0020\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u005b\u0050\u0041\u0052SE\u002d\u0048\u0045A\u0044\u0045R\u005d\u0020\u0066\u0061\u0069\u006ce\u0064\u002e \u0025\u0076",_dcff );
}else {_cb .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _dcff =_fbbg .readRegionFlags ();_dcff !=nil {return _dcff ;};if _dcff =_fbbg .setAtPixels ();_dcff !=nil {return _dcff ;};if _dcff =_fbbg .setRefinementAtPixels ();_dcff !=nil {return _dcff ;};if _dcff =_fbbg .readNumberOfExportedSymbols ();_dcff !=nil {return _dcff ;
};if _dcff =_fbbg .readNumberOfNewSymbols ();_dcff !=nil {return _dcff ;};if _dcff =_fbbg .setInSyms ();_dcff !=nil {return _dcff ;};if _fbbg ._cgaf {_aaca :=_fbbg .Header .RTSegments ;for _fedbg :=len (_aaca )-1;_fedbg >=0;_fedbg --{if _aaca [_fedbg ].Type ==0{_ebfca ,_agfb :=_aaca [_fedbg ].SegmentData .(*SymbolDictionary );
if !_agfb {_dcff =_c .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074:\u0020\u0025\u0076\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020S\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_aaca [_fedbg ]);
return _dcff ;};if _ebfca ._cgaf {_fbbg .setRetainedCodingContexts (_ebfca );};break ;};};};if _dcff =_fbbg .checkInput ();_dcff !=nil {return _dcff ;};return nil ;};func (_gdde *HalftoneRegion )GetRegionBitmap ()(*_e .Bitmap ,error ){if _gdde .HalftoneRegionBitmap !=nil {return _gdde .HalftoneRegionBitmap ,nil ;
};var _gfbb error ;_gdde .HalftoneRegionBitmap =_e .New (int (_gdde .RegionSegment .BitmapWidth ),int (_gdde .RegionSegment .BitmapHeight ));if _gdde .Patterns ==nil ||len (_gdde .Patterns )==0{_gdde .Patterns ,_gfbb =_gdde .GetPatterns ();if _gfbb !=nil {return nil ,_gfbb ;
};};if _gdde .HDefaultPixel ==1{_gdde .HalftoneRegionBitmap .SetDefaultPixel ();};_gac :=_b .Ceil (_b .Log (float64 (len (_gdde .Patterns )))/_b .Log (2));_dfdf :=int (_gac );var _bbb [][]int ;_bbb ,_gfbb =_gdde .grayScaleDecoding (_dfdf );if _gfbb !=nil {return nil ,_gfbb ;
};if _gfbb =_gdde .renderPattern (_bbb );_gfbb !=nil {return nil ,_gfbb ;};return _gdde .HalftoneRegionBitmap ,nil ;};type Regioner interface{GetRegionBitmap ()(*_e .Bitmap ,error );GetRegionInfo ()*RegionSegment ;};func (_fege *SymbolDictionary )setExportedSymbols (_efcc []int ){for _afgc :=uint32 (0);
_afgc < _fege ._bdfd +_fege .NumberOfNewSymbols ;_afgc ++{if _efcc [_afgc ]==1{var _fedf *_e .Bitmap ;if _afgc < _fege ._bdfd {_fedf =_fege ._afca [_afgc ];}else {_fedf =_fege ._gebc [_afgc -_fege ._bdfd ];};_cb .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u002d\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u0020\u0041\u0064\u0064 E\u0078\u0070\u006fr\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027%\u0073\u0027",_fedf );
_fege ._efcd =append (_fege ._efcd ,_fedf );};};};