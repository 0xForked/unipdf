//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package segments ;import (_b "encoding/binary";_ea "errors";_d "fmt";_be "github.com/unidoc/unipdf/v3/common";_dc "github.com/unidoc/unipdf/v3/internal/bitwise";_fb "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_gg "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";
_eac "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/arithmetic";_dd "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/huffman";_ec "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/mmr";_aca "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/arithmetic";
_ac "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_gd "github.com/unidoc/unipdf/v3/internal/jbig2/internal";_ba "golang.org/x/xerrors";_eg "image";_eb "io";_f "math";_g "strings";_a "time";);func (_aeaf *PatternDictionary )readTemplate ()error {_fdafd ,_fcgcd :=_aeaf ._feea .ReadBits (2);
if _fcgcd !=nil {return _fcgcd ;};_aeaf .HDTemplate =byte (_fdafd );return nil ;};var (_ Regioner =&TextRegion {};_ Segmenter =&TextRegion {};);func (_cedce *TextRegion )symbolIDCodeLengths ()error {var (_caca []*_dd .Code ;_ccca uint64 ;_bcca _dd .Tabler ;
_edfg error ;);for _ggddb :=0;_ggddb < 35;_ggddb ++{_ccca ,_edfg =_cedce ._dcedc .ReadBits (4);if _edfg !=nil {return _edfg ;};_ffcd :=int (_ccca &0xf);if _ffcd > 0{_caca =append (_caca ,_dd .NewCode (int32 (_ffcd ),0,int32 (_ggddb ),false ));};};_bcca ,_edfg =_dd .NewFixedSizeTable (_caca );
if _edfg !=nil {return _edfg ;};var (_cbab int64 ;_abba uint32 ;_dfae []*_dd .Code ;_fffg int64 ;);for _abba < _cedce .NumberOfSymbols {_fffg ,_edfg =_bcca .Decode (_cedce ._dcedc );if _edfg !=nil {return _edfg ;};if _fffg < 32{if _fffg > 0{_dfae =append (_dfae ,_dd .NewCode (int32 (_fffg ),0,int32 (_abba ),false ));
};_cbab =_fffg ;_abba ++;}else {var _gdbc ,_bgec int64 ;switch _fffg {case 32:_ccca ,_edfg =_cedce ._dcedc .ReadBits (2);if _edfg !=nil {return _edfg ;};_gdbc =3+int64 (_ccca );if _abba > 0{_bgec =_cbab ;};case 33:_ccca ,_edfg =_cedce ._dcedc .ReadBits (3);
if _edfg !=nil {return _edfg ;};_gdbc =3+int64 (_ccca );case 34:_ccca ,_edfg =_cedce ._dcedc .ReadBits (7);if _edfg !=nil {return _edfg ;};_gdbc =11+int64 (_ccca );};for _dbga :=0;_dbga < int (_gdbc );_dbga ++{if _bgec > 0{_dfae =append (_dfae ,_dd .NewCode (int32 (_bgec ),0,int32 (_abba ),false ));
};_abba ++;};};};_cedce ._dcedc .Align ();_cedce ._bgaf ,_edfg =_dd .NewFixedSizeTable (_dfae );return _edfg ;};func (_aef *HalftoneRegion )GetRegionInfo ()*RegionSegment {return _aef .RegionSegment };func (_fgcc *RegionSegment )Size ()int {return 17};
func (_adcfd *TableSegment )HtOOB ()int32 {return _adcfd ._bbdg };func (_gdg *GenericRefinementRegion )decodeTypicalPredictedLine (_fa ,_agc ,_dgc ,_ca ,_afa ,_ga int )error {_cbd :=_fa -int (_gdg .ReferenceDY );_efg :=_gdg .ReferenceBitmap .GetByteIndex (0,_cbd );
_bac :=_gdg .RegionBitmap .GetByteIndex (0,_fa );var _aged error ;switch _gdg .TemplateID {case 0:_aged =_gdg .decodeTypicalPredictedLineTemplate0 (_fa ,_agc ,_dgc ,_ca ,_afa ,_ga ,_bac ,_cbd ,_efg );case 1:_aged =_gdg .decodeTypicalPredictedLineTemplate1 (_fa ,_agc ,_dgc ,_ca ,_afa ,_ga ,_bac ,_cbd ,_efg );
};return _aged ;};func (_gddc *SymbolDictionary )decodeHeightClassBitmap (_ggbe *_gg .Bitmap ,_beca int64 ,_fcaa int ,_badd []int )error {for _ecccg :=_beca ;_ecccg < int64 (_gddc ._bgdb );_ecccg ++{var _dcbac int ;for _faee :=_beca ;_faee <=_ecccg -1;
_faee ++{_dcbac +=_badd [_faee ];};_ddfb :=_eg .Rect (_dcbac ,0,_dcbac +_badd [_ecccg ],_fcaa );_fdfb ,_ffcg :=_gg .Extract (_ddfb ,_ggbe );if _ffcg !=nil {return _ffcg ;};_gddc ._dfgg [_ecccg ]=_fdfb ;_gddc ._gadb =append (_gddc ._gadb ,_fdfb );};return nil ;
};func (_egag *TextRegion )parseHeader ()error {var _beee error ;_be .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069n\u0073\u002e\u002e\u002e");
defer func (){if _beee !=nil {_be .Log .Trace ("\u005b\u0054\u0045\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044E\u0052\u005d\u0020\u0066\u0061i\u006c\u0065d\u002e\u0020\u0025\u0076",_beee );
}else {_be .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069s\u0068\u0065\u0064\u002e");};}();if _beee =_egag .RegionInfo .parseHeader ();
_beee !=nil {return _beee ;};if _beee =_egag .readRegionFlags ();_beee !=nil {return _beee ;};if _egag .IsHuffmanEncoded {if _beee =_egag .readHuffmanFlags ();_beee !=nil {return _beee ;};};if _beee =_egag .readUseRefinement ();_beee !=nil {return _beee ;
};if _beee =_egag .readAmountOfSymbolInstances ();_beee !=nil {return _beee ;};if _beee =_egag .getSymbols ();_beee !=nil {return _beee ;};if _beee =_egag .computeSymbolCodeLength ();_beee !=nil {return _beee ;};if _beee =_egag .checkInput ();_beee !=nil {return _beee ;
};_be .Log .Trace ("\u0025\u0073",_egag .String ());return nil ;};func (_fdee *TextRegion )initSymbols ()error {const _gbef ="i\u006e\u0069\u0074\u0053\u0079\u006d\u0062\u006f\u006c\u0073";for _ ,_cccbc :=range _fdee .Header .RTSegments {if _cccbc ==nil {return _ac .Error (_gbef ,"\u006e\u0069\u006c\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020pr\u006f\u0076\u0069\u0064\u0065\u0064 \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0074\u0065\u0078\u0074\u0020\u0072\u0065g\u0069\u006f\u006e\u0020\u0053\u0079\u006d\u0062o\u006c\u0073");
};if _cccbc .Type ==0{_cbfd ,_gecg :=_cccbc .GetSegmentData ();if _gecg !=nil {return _ac .Wrap (_gecg ,_gbef ,"");};_eedaf ,_bcbcb :=_cbfd .(*SymbolDictionary );if !_bcbcb {return _ac .Error (_gbef ,"\u0072e\u0066\u0065r\u0072\u0065\u0064 \u0054\u006f\u0020\u0053\u0065\u0067\u006de\u006e\u0074\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_eedaf ._cffd =_fdee ._egce ;_gbac ,_gecg :=_eedaf .GetDictionary ();if _gecg !=nil {return _ac .Wrap (_gecg ,_gbef ,"");};_fdee .Symbols =append (_fdee .Symbols ,_gbac ...);};};_fdee .NumberOfSymbols =uint32 (len (_fdee .Symbols ));return nil ;};func (_daec *TextRegion )encodeSymbols (_feeac _dc .BinaryWriter )(_fggc int ,_dafbf error ){const _ddbb ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
_dceb :=make ([]byte ,4);_b .BigEndian .PutUint32 (_dceb ,_daec .NumberOfSymbols );if _fggc ,_dafbf =_feeac .Write (_dceb );_dafbf !=nil {return _fggc ,_ac .Wrap (_dafbf ,_ddbb ,"\u004e\u0075\u006dbe\u0072\u004f\u0066\u0053\u0079\u006d\u0062\u006f\u006c\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073");
};_bcga ,_dafbf :=_gg .NewClassedPoints (_daec ._eagd ,_daec ._dda );if _dafbf !=nil {return 0,_ac .Wrap (_dafbf ,_ddbb ,"");};var _cccc ,_dcfdc int ;_cggd :=_aca .New ();_cggd .Init ();if _dafbf =_cggd .EncodeInteger (_aca .IADT ,0);_dafbf !=nil {return _fggc ,_ac .Wrap (_dafbf ,_ddbb ,"\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0020\u0044\u0054");
};_gbfac ,_dafbf :=_bcga .GroupByY ();if _dafbf !=nil {return 0,_ac .Wrap (_dafbf ,_ddbb ,"");};for _ ,_bbde :=range _gbfac {_cfbgf :=int (_bbde .YAtIndex (0));_cgcdg :=_cfbgf -_cccc ;if _dafbf =_cggd .EncodeInteger (_aca .IADT ,_cgcdg );_dafbf !=nil {return _fggc ,_ac .Wrap (_dafbf ,_ddbb ,"");
};var _ggfc int ;for _aace ,_dfdecf :=range _bbde .IntSlice {switch _aace {case 0:_cedca :=int (_bbde .XAtIndex (_aace ))-_dcfdc ;if _dafbf =_cggd .EncodeInteger (_aca .IAFS ,_cedca );_dafbf !=nil {return _fggc ,_ac .Wrap (_dafbf ,_ddbb ,"");};_dcfdc +=_cedca ;
_ggfc =_dcfdc ;default:_gbfb :=int (_bbde .XAtIndex (_aace ))-_ggfc ;if _dafbf =_cggd .EncodeInteger (_aca .IADS ,_gbfb );_dafbf !=nil {return _fggc ,_ac .Wrap (_dafbf ,_ddbb ,"");};_ggfc +=_gbfb ;};_bbbde ,_fgba :=_daec ._ded .Get (_dfdecf );if _fgba !=nil {return _fggc ,_ac .Wrap (_fgba ,_ddbb ,"");
};_efbbg ,_ecbff :=_daec ._faeef [_bbbde ];if !_ecbff {_efbbg ,_ecbff =_daec ._eagf [_bbbde ];if !_ecbff {return _fggc ,_ac .Errorf (_ddbb ,"\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027\u0025d\u0027\u0020\u0069s\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064 \u0069\u006e\u0020\u0067\u006cob\u0061\u006c\u0020\u0061\u006e\u0064\u0020\u006c\u006f\u0063\u0061\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020\u006d\u0061\u0070",_bbbde );
};};if _fgba =_cggd .EncodeIAID (_daec ._dbdgg ,_efbbg );_fgba !=nil {return _fggc ,_ac .Wrap (_fgba ,_ddbb ,"");};};if _dafbf =_cggd .EncodeOOB (_aca .IADS );_dafbf !=nil {return _fggc ,_ac .Wrap (_dafbf ,_ddbb ,"");};};_cggd .Final ();_cdgd ,_dafbf :=_cggd .WriteTo (_feeac );
if _dafbf !=nil {return _fggc ,_ac .Wrap (_dafbf ,_ddbb ,"");};_fggc +=int (_cdgd );return _fggc ,nil ;};func (_bfe *GenericRegion )decodeTemplate0a (_eee ,_bafe ,_gcb int ,_bdg ,_adgf int )(_ccg error ){const _ddff ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0061";
var (_cgf ,_fbge int ;_fdf ,_dfbf int ;_ggbg byte ;_agf int ;);if _eee >=1{_ggbg ,_ccg =_bfe .Bitmap .GetByte (_adgf );if _ccg !=nil {return _ac .Wrap (_ccg ,_ddff ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_fdf =int (_ggbg );};if _eee >=2{_ggbg ,_ccg =_bfe .Bitmap .GetByte (_adgf -_bfe .Bitmap .RowStride );
if _ccg !=nil {return _ac .Wrap (_ccg ,_ddff ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_dfbf =int (_ggbg )<<6;};_cgf =(_fdf &0xf0)|(_dfbf &0x3800);for _bgcf :=0;_bgcf < _gcb ;_bgcf =_agf {var (_baae byte ;_eab int ;);_agf =_bgcf +8;if _dcg :=_bafe -_bgcf ;
_dcg > 8{_eab =8;}else {_eab =_dcg ;};if _eee > 0{_fdf <<=8;if _agf < _bafe {_ggbg ,_ccg =_bfe .Bitmap .GetByte (_adgf +1);if _ccg !=nil {return _ac .Wrap (_ccg ,_ddff ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_fdf |=int (_ggbg );};};if _eee > 1{_bag :=_adgf -_bfe .Bitmap .RowStride +1;
_dfbf <<=8;if _agf < _bafe {_ggbg ,_ccg =_bfe .Bitmap .GetByte (_bag );if _ccg !=nil {return _ac .Wrap (_ccg ,_ddff ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_dfbf |=int (_ggbg )<<6;}else {_dfbf |=0;};};for _cga :=0;_cga < _eab ;_cga ++{_aeb :=uint (7-_cga );
if _bfe ._fcc {_fbge =_bfe .overrideAtTemplate0a (_cgf ,_bgcf +_cga ,_eee ,int (_baae ),_cga ,int (_aeb ));_bfe ._agb .SetIndex (int32 (_fbge ));}else {_bfe ._agb .SetIndex (int32 (_cgf ));};var _cdffd int ;_cdffd ,_ccg =_bfe ._dba .DecodeBit (_bfe ._agb );
if _ccg !=nil {return _ac .Wrap (_ccg ,_ddff ,"");};_baae |=byte (_cdffd )<<_aeb ;_cgf =((_cgf &0x7bf7)<<1)|_cdffd |((_fdf >>_aeb )&0x10)|((_dfbf >>_aeb )&0x800);};if _fef :=_bfe .Bitmap .SetByte (_bdg ,_baae );_fef !=nil {return _ac .Wrap (_fef ,_ddff ,"");
};_bdg ++;_adgf ++;};return nil ;};func NewGenericRegion (r _dc .StreamReader )*GenericRegion {return &GenericRegion {RegionSegment :NewRegionSegment (r ),_fbg :r };};type RegionSegment struct{_accd _dc .StreamReader ;BitmapWidth uint32 ;BitmapHeight uint32 ;
XLocation uint32 ;YLocation uint32 ;CombinaionOperator _gg .CombinationOperator ;};func (_fff *GenericRegion )overrideAtTemplate3 (_bde ,_dgeg ,_abe ,_cecc ,_fadaa int )int {_bde &=0x3EF;if _fff .GBAtY [0]==0&&_fff .GBAtX [0]>=-int8 (_fadaa ){_bde |=(_cecc >>uint (7-(int8 (_fadaa )+_fff .GBAtX [0]))&0x1)<<4;
}else {_bde |=int (_fff .getPixel (_dgeg +int (_fff .GBAtX [0]),_abe +int (_fff .GBAtY [0])))<<4;};return _bde ;};func (_afbb *SymbolDictionary )InitEncode (symbols *_gg .Bitmaps ,symbolList []int ,symbolMap map[int ]int ,unborderSymbols bool )error {const _bdfcc ="S\u0079\u006d\u0062\u006f\u006c\u0044i\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002eI\u006e\u0069\u0074E\u006ec\u006f\u0064\u0065";
_afbb .SdATX =[]int8 {3,-3,2,-2};_afbb .SdATY =[]int8 {-1,-1,-2,-2};_afbb ._edbca =symbols ;_afbb ._gcea =make ([]int ,len (symbolList ));copy (_afbb ._gcea ,symbolList );if len (_afbb ._gcea )!=_afbb ._edbca .Size (){return _ac .Error (_bdfcc ,"s\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0061\u006e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u004ci\u0073\u0074\u0020\u006f\u0066\u0020\u0064\u0069\u0066\u0066er\u0065\u006e\u0074 \u0073i\u007a\u0065");
};_afbb .NumberOfNewSymbols =uint32 (symbols .Size ());_afbb .NumberOfExportedSymbols =uint32 (symbols .Size ());_afbb ._fdac =symbolMap ;_afbb ._ceae =unborderSymbols ;return nil ;};func (_gbf *GenericRefinementRegion )GetRegionInfo ()*RegionSegment {return _gbf .RegionInfo };
func (_aaa *HalftoneRegion )computeSegmentDataStructure ()error {_aaa .DataOffset =_aaa ._fegg .StreamPosition ();_aaa .DataHeaderLength =_aaa .DataOffset -_aaa .DataHeaderOffset ;_aaa .DataLength =int64 (_aaa ._fegg .Length ())-_aaa .DataHeaderLength ;
return nil ;};func (_gbed *GenericRegion )getPixel (_cgad ,_dbdg int )int8 {if _cgad < 0||_cgad >=_gbed .Bitmap .Width {return 0;};if _dbdg < 0||_dbdg >=_gbed .Bitmap .Height {return 0;};if _gbed .Bitmap .GetPixel (_cgad ,_dbdg ){return 1;};return 0;};
type template1 struct{};func (_efgc *GenericRegion )overrideAtTemplate0b (_cgb ,_cgbb ,_begeg ,_dbcf ,_fgb ,_gfgc int )int {if _efgc .GBAtOverride [0]{_cgb &=0xFFFD;if _efgc .GBAtY [0]==0&&_efgc .GBAtX [0]>=-int8 (_fgb ){_cgb |=(_dbcf >>uint (int8 (_gfgc )-_efgc .GBAtX [0]&0x1))<<1;
}else {_cgb |=int (_efgc .getPixel (_cgbb +int (_efgc .GBAtX [0]),_begeg +int (_efgc .GBAtY [0])))<<1;};};if _efgc .GBAtOverride [1]{_cgb &=0xDFFF;if _efgc .GBAtY [1]==0&&_efgc .GBAtX [1]>=-int8 (_fgb ){_cgb |=(_dbcf >>uint (int8 (_gfgc )-_efgc .GBAtX [1]&0x1))<<13;
}else {_cgb |=int (_efgc .getPixel (_cgbb +int (_efgc .GBAtX [1]),_begeg +int (_efgc .GBAtY [1])))<<13;};};if _efgc .GBAtOverride [2]{_cgb &=0xFDFF;if _efgc .GBAtY [2]==0&&_efgc .GBAtX [2]>=-int8 (_fgb ){_cgb |=(_dbcf >>uint (int8 (_gfgc )-_efgc .GBAtX [2]&0x1))<<9;
}else {_cgb |=int (_efgc .getPixel (_cgbb +int (_efgc .GBAtX [2]),_begeg +int (_efgc .GBAtY [2])))<<9;};};if _efgc .GBAtOverride [3]{_cgb &=0xBFFF;if _efgc .GBAtY [3]==0&&_efgc .GBAtX [3]>=-int8 (_fgb ){_cgb |=(_dbcf >>uint (int8 (_gfgc )-_efgc .GBAtX [3]&0x1))<<14;
}else {_cgb |=int (_efgc .getPixel (_cgbb +int (_efgc .GBAtX [3]),_begeg +int (_efgc .GBAtY [3])))<<14;};};if _efgc .GBAtOverride [4]{_cgb &=0xEFFF;if _efgc .GBAtY [4]==0&&_efgc .GBAtX [4]>=-int8 (_fgb ){_cgb |=(_dbcf >>uint (int8 (_gfgc )-_efgc .GBAtX [4]&0x1))<<12;
}else {_cgb |=int (_efgc .getPixel (_cgbb +int (_efgc .GBAtX [4]),_begeg +int (_efgc .GBAtY [4])))<<12;};};if _efgc .GBAtOverride [5]{_cgb &=0xFFDF;if _efgc .GBAtY [5]==0&&_efgc .GBAtX [5]>=-int8 (_fgb ){_cgb |=(_dbcf >>uint (int8 (_gfgc )-_efgc .GBAtX [5]&0x1))<<5;
}else {_cgb |=int (_efgc .getPixel (_cgbb +int (_efgc .GBAtX [5]),_begeg +int (_efgc .GBAtY [5])))<<5;};};if _efgc .GBAtOverride [6]{_cgb &=0xFFFB;if _efgc .GBAtY [6]==0&&_efgc .GBAtX [6]>=-int8 (_fgb ){_cgb |=(_dbcf >>uint (int8 (_gfgc )-_efgc .GBAtX [6]&0x1))<<2;
}else {_cgb |=int (_efgc .getPixel (_cgbb +int (_efgc .GBAtX [6]),_begeg +int (_efgc .GBAtY [6])))<<2;};};if _efgc .GBAtOverride [7]{_cgb &=0xFFF7;if _efgc .GBAtY [7]==0&&_efgc .GBAtX [7]>=-int8 (_fgb ){_cgb |=(_dbcf >>uint (int8 (_gfgc )-_efgc .GBAtX [7]&0x1))<<3;
}else {_cgb |=int (_efgc .getPixel (_cgbb +int (_efgc .GBAtX [7]),_begeg +int (_efgc .GBAtY [7])))<<3;};};if _efgc .GBAtOverride [8]{_cgb &=0xF7FF;if _efgc .GBAtY [8]==0&&_efgc .GBAtX [8]>=-int8 (_fgb ){_cgb |=(_dbcf >>uint (int8 (_gfgc )-_efgc .GBAtX [8]&0x1))<<11;
}else {_cgb |=int (_efgc .getPixel (_cgbb +int (_efgc .GBAtX [8]),_begeg +int (_efgc .GBAtY [8])))<<11;};};if _efgc .GBAtOverride [9]{_cgb &=0xFFEF;if _efgc .GBAtY [9]==0&&_efgc .GBAtX [9]>=-int8 (_fgb ){_cgb |=(_dbcf >>uint (int8 (_gfgc )-_efgc .GBAtX [9]&0x1))<<4;
}else {_cgb |=int (_efgc .getPixel (_cgbb +int (_efgc .GBAtX [9]),_begeg +int (_efgc .GBAtY [9])))<<4;};};if _efgc .GBAtOverride [10]{_cgb &=0x7FFF;if _efgc .GBAtY [10]==0&&_efgc .GBAtX [10]>=-int8 (_fgb ){_cgb |=(_dbcf >>uint (int8 (_gfgc )-_efgc .GBAtX [10]&0x1))<<15;
}else {_cgb |=int (_efgc .getPixel (_cgbb +int (_efgc .GBAtX [10]),_begeg +int (_efgc .GBAtY [10])))<<15;};};if _efgc .GBAtOverride [11]{_cgb &=0xFDFF;if _efgc .GBAtY [11]==0&&_efgc .GBAtX [11]>=-int8 (_fgb ){_cgb |=(_dbcf >>uint (int8 (_gfgc )-_efgc .GBAtX [11]&0x1))<<10;
}else {_cgb |=int (_efgc .getPixel (_cgbb +int (_efgc .GBAtX [11]),_begeg +int (_efgc .GBAtY [11])))<<10;};};return _cgb ;};func (_bfgf *GenericRegion )overrideAtTemplate2 (_cege ,_gefgd ,_gdb ,_feba ,_eaa int )int {_cege &=0x3FB;if _bfgf .GBAtY [0]==0&&_bfgf .GBAtX [0]>=-int8 (_eaa ){_cege |=(_feba >>uint (7-(int8 (_eaa )+_bfgf .GBAtX [0]))&0x1)<<2;
}else {_cege |=int (_bfgf .getPixel (_gefgd +int (_bfgf .GBAtX [0]),_gdb +int (_bfgf .GBAtY [0])))<<2;};return _cege ;};func (_ebce *Header )readDataStartOffset (_fdgae _dc .StreamReader ,_dgbg OrganizationType ){if _dgbg ==OSequential {_ebce .SegmentDataStartOffset =uint64 (_fdgae .StreamPosition ());
};};type GenericRefinementRegion struct{_bg templater ;_cb templater ;_ag _dc .StreamReader ;_df *Header ;RegionInfo *RegionSegment ;IsTPGROn bool ;TemplateID int8 ;Template templater ;GrAtX []int8 ;GrAtY []int8 ;RegionBitmap *_gg .Bitmap ;ReferenceBitmap *_gg .Bitmap ;
ReferenceDX int32 ;ReferenceDY int32 ;_gb *_eac .Decoder ;_ef *_eac .DecoderStats ;_ggf bool ;_gf []bool ;};func (_fafc *SymbolDictionary )parseHeader ()(_baafg error ){_be .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _baafg !=nil {_be .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u0020\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u005b\u0050\u0041\u0052SE\u002d\u0048\u0045A\u0044\u0045R\u005d\u0020\u0066\u0061\u0069\u006ce\u0064\u002e \u0025\u0076",_baafg );
}else {_be .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _baafg =_fafc .readRegionFlags ();_baafg !=nil {return _baafg ;};if _baafg =_fafc .setAtPixels ();_baafg !=nil {return _baafg ;};if _baafg =_fafc .setRefinementAtPixels ();_baafg !=nil {return _baafg ;};if _baafg =_fafc .readNumberOfExportedSymbols ();
_baafg !=nil {return _baafg ;};if _baafg =_fafc .readNumberOfNewSymbols ();_baafg !=nil {return _baafg ;};if _baafg =_fafc .setInSyms ();_baafg !=nil {return _baafg ;};if _fafc ._cbbe {_gfe :=_fafc .Header .RTSegments ;for _ecbf :=len (_gfe )-1;_ecbf >=0;
_ecbf --{if _gfe [_ecbf ].Type ==0{_fdef ,_cgcd :=_gfe [_ecbf ].SegmentData .(*SymbolDictionary );if !_cgcd {_baafg =_d .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074:\u0020\u0025\u0076\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020S\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_gfe [_ecbf ]);
return _baafg ;};if _fdef ._cbbe {_fafc .setRetainedCodingContexts (_fdef );};break ;};};};if _baafg =_fafc .checkInput ();_baafg !=nil {return _baafg ;};return nil ;};func (_dggc *PageInformationSegment )readCombinationOperatorOverrideAllowed ()error {_eabe ,_agge :=_dggc ._agdg .ReadBit ();
if _agge !=nil {return _agge ;};if _eabe ==1{_dggc ._cfdb =true ;};return nil ;};func (_gcfa *HalftoneRegion )GetRegionBitmap ()(*_gg .Bitmap ,error ){if _gcfa .HalftoneRegionBitmap !=nil {return _gcfa .HalftoneRegionBitmap ,nil ;};var _fcgc error ;_gcfa .HalftoneRegionBitmap =_gg .New (int (_gcfa .RegionSegment .BitmapWidth ),int (_gcfa .RegionSegment .BitmapHeight ));
if _gcfa .Patterns ==nil ||len (_gcfa .Patterns )==0{_gcfa .Patterns ,_fcgc =_gcfa .GetPatterns ();if _fcgc !=nil {return nil ,_fcgc ;};};if _gcfa .HDefaultPixel ==1{_gcfa .HalftoneRegionBitmap .SetDefaultPixel ();};_cae :=_f .Ceil (_f .Log (float64 (len (_gcfa .Patterns )))/_f .Log (2));
_gcff :=int (_cae );var _abb [][]int ;_abb ,_fcgc =_gcfa .grayScaleDecoding (_gcff );if _fcgc !=nil {return nil ,_fcgc ;};if _fcgc =_gcfa .renderPattern (_abb );_fcgc !=nil {return nil ,_fcgc ;};return _gcfa .HalftoneRegionBitmap ,nil ;};var _ SegmentEncoder =&RegionSegment {};
func (_bfgg *template0 )setIndex (_bedd *_eac .DecoderStats ){_bedd .SetIndex (0x100)};func (_afgd *Header )writeReferredToCount (_dcdf _dc .BinaryWriter )(_bgf int ,_ebb error ){const _fagd ="w\u0072i\u0074\u0065\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0043ou\u006e\u0074";
_afgd .RTSNumbers =make ([]int ,len (_afgd .RTSegments ));for _fgaf ,_gegf :=range _afgd .RTSegments {_afgd .RTSNumbers [_fgaf ]=int (_gegf .SegmentNumber );};if len (_afgd .RTSNumbers )<=4{var _dgefb byte ;if len (_afgd .RetainBits )>=1{_dgefb =_afgd .RetainBits [0];
};_dgefb |=byte (len (_afgd .RTSNumbers ))<<5;if _ebb =_dcdf .WriteByte (_dgefb );_ebb !=nil {return 0,_ac .Wrap (_ebb ,_fagd ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return 1,nil ;};_afaa :=uint32 (len (_afgd .RTSNumbers ));
_cfff :=make ([]byte ,4+_fb .Ceil (len (_afgd .RTSNumbers )+1,8));_afaa |=0x7<<29;_b .BigEndian .PutUint32 (_cfff ,_afaa );copy (_cfff [1:],_afgd .RetainBits );_bgf ,_ebb =_dcdf .Write (_cfff );if _ebb !=nil {return 0,_ac .Wrap (_ebb ,_fagd ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");
};return _bgf ,nil ;};func (_caeb *SymbolDictionary )setAtPixels ()error {if _caeb .IsHuffmanEncoded {return nil ;};_dega :=1;if _caeb .SdTemplate ==0{_dega =4;};if _fefe :=_caeb .readAtPixels (_dega );_fefe !=nil {return _fefe ;};return nil ;};func (_fbcd *SymbolDictionary )readNumberOfExportedSymbols ()error {_gcdda ,_fedd :=_fbcd ._dbge .ReadBits (32);
if _fedd !=nil {return _fedd ;};_fbcd .NumberOfExportedSymbols =uint32 (_gcdda &_f .MaxUint32 );return nil ;};func (_bge *HalftoneRegion )parseHeader ()error {if _edb :=_bge .RegionSegment .parseHeader ();_edb !=nil {return _edb ;};_edab ,_dcba :=_bge ._fegg .ReadBit ();
if _dcba !=nil {return _dcba ;};_bge .HDefaultPixel =int8 (_edab );_acfg ,_dcba :=_bge ._fegg .ReadBits (3);if _dcba !=nil {return _dcba ;};_bge .CombinationOperator =_gg .CombinationOperator (_acfg &0xf);_edab ,_dcba =_bge ._fegg .ReadBit ();if _dcba !=nil {return _dcba ;
};if _edab ==1{_bge .HSkipEnabled =true ;};_acfg ,_dcba =_bge ._fegg .ReadBits (2);if _dcba !=nil {return _dcba ;};_bge .HTemplate =byte (_acfg &0xf);_edab ,_dcba =_bge ._fegg .ReadBit ();if _dcba !=nil {return _dcba ;};if _edab ==1{_bge .IsMMREncoded =true ;
};_acfg ,_dcba =_bge ._fegg .ReadBits (32);if _dcba !=nil {return _dcba ;};_bge .HGridWidth =uint32 (_acfg &_f .MaxUint32 );_acfg ,_dcba =_bge ._fegg .ReadBits (32);if _dcba !=nil {return _dcba ;};_bge .HGridHeight =uint32 (_acfg &_f .MaxUint32 );_acfg ,_dcba =_bge ._fegg .ReadBits (32);
if _dcba !=nil {return _dcba ;};_bge .HGridX =int32 (_acfg &_f .MaxInt32 );_acfg ,_dcba =_bge ._fegg .ReadBits (32);if _dcba !=nil {return _dcba ;};_bge .HGridY =int32 (_acfg &_f .MaxInt32 );_acfg ,_dcba =_bge ._fegg .ReadBits (16);if _dcba !=nil {return _dcba ;
};_bge .HRegionX =uint16 (_acfg &_f .MaxUint16 );_acfg ,_dcba =_bge ._fegg .ReadBits (16);if _dcba !=nil {return _dcba ;};_bge .HRegionY =uint16 (_acfg &_f .MaxUint16 );if _dcba =_bge .computeSegmentDataStructure ();_dcba !=nil {return _dcba ;};return _bge .checkInput ();
};func (_ggcd *HalftoneRegion )renderPattern (_abdf [][]int )(_ebdf error ){var _afef ,_abbg int ;for _eecg :=0;_eecg < int (_ggcd .HGridHeight );_eecg ++{for _debb :=0;_debb < int (_ggcd .HGridWidth );_debb ++{_afef =_ggcd .computeX (_eecg ,_debb );_abbg =_ggcd .computeY (_eecg ,_debb );
_ebcc :=_ggcd .Patterns [_abdf [_eecg ][_debb ]];if _ebdf =_gg .Blit (_ebcc ,_ggcd .HalftoneRegionBitmap ,_afef +int (_ggcd .HGridX ),_abbg +int (_ggcd .HGridY ),_ggcd .CombinationOperator );_ebdf !=nil {return _ebdf ;};};};return nil ;};func (_bacb *PageInformationSegment )readIsLossless ()error {_fgg ,_bdb :=_bacb ._agdg .ReadBit ();
if _bdb !=nil {return _bdb ;};if _fgg ==1{_bacb .IsLossless =true ;};return nil ;};func (_ggac *SymbolDictionary )decodeRefinedSymbol (_ecccc ,_bcgdf uint32 )error {var (_gbaf int ;_gcec ,_decd int32 ;);if _ggac .IsHuffmanEncoded {_ecdb ,_gaga :=_ggac ._dbge .ReadBits (byte (_ggac ._ceb ));
if _gaga !=nil {return _gaga ;};_gbaf =int (_ecdb );_eaae ,_gaga :=_dd .GetStandardTable (15);if _gaga !=nil {return _gaga ;};_bccc ,_gaga :=_eaae .Decode (_ggac ._dbge );if _gaga !=nil {return _gaga ;};_gcec =int32 (_bccc );_bccc ,_gaga =_eaae .Decode (_ggac ._dbge );
if _gaga !=nil {return _gaga ;};_decd =int32 (_bccc );_eaae ,_gaga =_dd .GetStandardTable (1);if _gaga !=nil {return _gaga ;};if _ ,_gaga =_eaae .Decode (_ggac ._dbge );_gaga !=nil {return _gaga ;};_ggac ._dbge .Align ();}else {_bfa ,_dcdg :=_ggac ._aaad .DecodeIAID (uint64 (_ggac ._ceb ),_ggac ._cffd );
if _dcdg !=nil {return _dcdg ;};_gbaf =int (_bfa );_gcec ,_dcdg =_ggac ._aaad .DecodeInt (_ggac ._ecgb );if _dcdg !=nil {return _dcdg ;};_decd ,_dcdg =_ggac ._aaad .DecodeInt (_ggac ._eedg );if _dcdg !=nil {return _dcdg ;};};if _bdgc :=_ggac .setSymbolsArray ();
_bdgc !=nil {return _bdgc ;};_adgd :=_ggac ._gadb [_gbaf ];if _ecbb :=_ggac .decodeNewSymbols (_ecccc ,_bcgdf ,_adgd ,_gcec ,_decd );_ecbb !=nil {return _ecbb ;};if _ggac .IsHuffmanEncoded {_ggac ._dbge .Align ();};return nil ;};func (_baf *GenericRefinementRegion )decodeTemplate (_ab ,_daa ,_bed ,_fda ,_ged ,_gdf ,_acc ,_ff ,_caf ,_gaa int ,_bbd templater )(_ecg error ){var (_cgd ,_ccf ,_fc ,_bbaf ,_ffa int16 ;
_dag ,_aff ,_efd ,_bea int ;_bdf byte ;);if _caf >=1&&(_caf -1)< _baf .ReferenceBitmap .Height {_bdf ,_ecg =_baf .ReferenceBitmap .GetByte (_gaa -_fda );if _ecg !=nil {return ;};_dag =int (_bdf );};if _caf >=0&&(_caf )< _baf .ReferenceBitmap .Height {_bdf ,_ecg =_baf .ReferenceBitmap .GetByte (_gaa );
if _ecg !=nil {return ;};_aff =int (_bdf );};if _caf >=-1&&(_caf +1)< _baf .ReferenceBitmap .Height {_bdf ,_ecg =_baf .ReferenceBitmap .GetByte (_gaa +_fda );if _ecg !=nil {return ;};_efd =int (_bdf );};_gaa ++;if _ab >=1{_bdf ,_ecg =_baf .RegionBitmap .GetByte (_ff -_bed );
if _ecg !=nil {return ;};_bea =int (_bdf );};_ff ++;_addb :=_baf .ReferenceDX %8;_cedc :=6+_addb ;_cff :=_gaa %_fda ;if _cedc >=0{if _cedc < 8{_cgd =int16 (_dag >>uint (_cedc ))&0x07;};if _cedc < 8{_ccf =int16 (_aff >>uint (_cedc ))&0x07;};if _cedc < 8{_fc =int16 (_efd >>uint (_cedc ))&0x07;
};if _cedc ==6&&_cff > 1{if _caf >=1&&(_caf -1)< _baf .ReferenceBitmap .Height {_bdf ,_ecg =_baf .ReferenceBitmap .GetByte (_gaa -_fda -2);if _ecg !=nil {return _ecg ;};_cgd |=int16 (_bdf <<2)&0x04;};if _caf >=0&&_caf < _baf .ReferenceBitmap .Height {_bdf ,_ecg =_baf .ReferenceBitmap .GetByte (_gaa -2);
if _ecg !=nil {return _ecg ;};_ccf |=int16 (_bdf <<2)&0x04;};if _caf >=-1&&_caf +1< _baf .ReferenceBitmap .Height {_bdf ,_ecg =_baf .ReferenceBitmap .GetByte (_gaa +_fda -2);if _ecg !=nil {return _ecg ;};_fc |=int16 (_bdf <<2)&0x04;};};if _cedc ==0{_dag =0;
_aff =0;_efd =0;if _cff < _fda -1{if _caf >=1&&_caf -1< _baf .ReferenceBitmap .Height {_bdf ,_ecg =_baf .ReferenceBitmap .GetByte (_gaa -_fda );if _ecg !=nil {return _ecg ;};_dag =int (_bdf );};if _caf >=0&&_caf < _baf .ReferenceBitmap .Height {_bdf ,_ecg =_baf .ReferenceBitmap .GetByte (_gaa );
if _ecg !=nil {return _ecg ;};_aff =int (_bdf );};if _caf >=-1&&_caf +1< _baf .ReferenceBitmap .Height {_bdf ,_ecg =_baf .ReferenceBitmap .GetByte (_gaa +_fda );if _ecg !=nil {return _ecg ;};_efd =int (_bdf );};};_gaa ++;};}else {_cgd =int16 (_dag <<1)&0x07;
_ccf =int16 (_aff <<1)&0x07;_fc =int16 (_efd <<1)&0x07;_dag =0;_aff =0;_efd =0;if _cff < _fda -1{if _caf >=1&&_caf -1< _baf .ReferenceBitmap .Height {_bdf ,_ecg =_baf .ReferenceBitmap .GetByte (_gaa -_fda );if _ecg !=nil {return _ecg ;};_dag =int (_bdf );
};if _caf >=0&&_caf < _baf .ReferenceBitmap .Height {_bdf ,_ecg =_baf .ReferenceBitmap .GetByte (_gaa );if _ecg !=nil {return _ecg ;};_aff =int (_bdf );};if _caf >=-1&&_caf +1< _baf .ReferenceBitmap .Height {_bdf ,_ecg =_baf .ReferenceBitmap .GetByte (_gaa +_fda );
if _ecg !=nil {return _ecg ;};_efd =int (_bdf );};_gaa ++;};_cgd |=int16 ((_dag >>7)&0x07);_ccf |=int16 ((_aff >>7)&0x07);_fc |=int16 ((_efd >>7)&0x07);};_bbaf =int16 (_bea >>6);_ffa =0;_bbge :=(2-_addb )%8;_dag <<=uint (_bbge );_aff <<=uint (_bbge );_efd <<=uint (_bbge );
_bea <<=2;var _baaf int ;for _fdc :=0;_fdc < _daa ;_fdc ++{_beed :=_fdc &0x07;_ffg :=_bbd .form (_cgd ,_ccf ,_fc ,_bbaf ,_ffa );if _baf ._ggf {_bdf ,_ecg =_baf .RegionBitmap .GetByte (_baf .RegionBitmap .GetByteIndex (_fdc ,_ab ));if _ecg !=nil {return _ecg ;
};_baf ._ef .SetIndex (int32 (_baf .overrideAtTemplate0 (int (_ffg ),_fdc ,_ab ,int (_bdf ),_beed )));}else {_baf ._ef .SetIndex (int32 (_ffg ));};_baaf ,_ecg =_baf ._gb .DecodeBit (_baf ._ef );if _ecg !=nil {return _ecg ;};if _ecg =_baf .RegionBitmap .SetPixel (_fdc ,_ab ,byte (_baaf ));
_ecg !=nil {return _ecg ;};_cgd =((_cgd <<1)|0x01&int16 (_dag >>7))&0x07;_ccf =((_ccf <<1)|0x01&int16 (_aff >>7))&0x07;_fc =((_fc <<1)|0x01&int16 (_efd >>7))&0x07;_bbaf =((_bbaf <<1)|0x01&int16 (_bea >>7))&0x07;_ffa =int16 (_baaf );if (_fdc -int (_baf .ReferenceDX ))%8==5{_dag =0;
_aff =0;_efd =0;if ((_fdc -int (_baf .ReferenceDX ))/8)+1< _baf .ReferenceBitmap .RowStride {if _caf >=1&&(_caf -1)< _baf .ReferenceBitmap .Height {_bdf ,_ecg =_baf .ReferenceBitmap .GetByte (_gaa -_fda );if _ecg !=nil {return _ecg ;};_dag =int (_bdf );
};if _caf >=0&&_caf < _baf .ReferenceBitmap .Height {_bdf ,_ecg =_baf .ReferenceBitmap .GetByte (_gaa );if _ecg !=nil {return _ecg ;};_aff =int (_bdf );};if _caf >=-1&&(_caf +1)< _baf .ReferenceBitmap .Height {_bdf ,_ecg =_baf .ReferenceBitmap .GetByte (_gaa +_fda );
if _ecg !=nil {return _ecg ;};_efd =int (_bdf );};};_gaa ++;}else {_dag <<=1;_aff <<=1;_efd <<=1;};if _beed ==5&&_ab >=1{if ((_fdc >>3)+1)>=_baf .RegionBitmap .RowStride {_bea =0;}else {_bdf ,_ecg =_baf .RegionBitmap .GetByte (_ff -_bed );if _ecg !=nil {return _ecg ;
};_bea =int (_bdf );};_ff ++;}else {_bea <<=1;};};return nil ;};func (_ead *GenericRefinementRegion )Init (header *Header ,r _dc .StreamReader )error {_ead ._df =header ;_ead ._ag =r ;_ead .RegionInfo =NewRegionSegment (r );return _ead .parseHeader ();
};func (_bgde *SymbolDictionary )retrieveImportSymbols ()error {for _ ,_bcgb :=range _bgde .Header .RTSegments {if _bcgb .Type ==0{_ccga ,_efge :=_bcgb .GetSegmentData ();if _efge !=nil {return _efge ;};_agaff ,_fgag :=_ccga .(*SymbolDictionary );if !_fgag {return _d .Errorf ("\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0044\u0061\u0074a\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u003a\u0020%\u0054",_ccga );
};_efdg ,_efge :=_agaff .GetDictionary ();if _efge !=nil {return _d .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064 \u0073\u0065\u0067m\u0065\u006e\u0074 \u0077\u0069t\u0068\u0020\u0069\u006e\u0064\u0065x\u003a %\u0064\u0020\u0067\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0073",_bcgb .SegmentNumber ,_efge .Error ());
};_bgde ._aefe =append (_bgde ._aefe ,_efdg ...);_bgde ._bgcfb +=_agaff .NumberOfExportedSymbols ;};};return nil ;};func (_cde *SymbolDictionary )decodeHeightClassDeltaHeightWithHuffman ()(int64 ,error ){switch _cde .SdHuffDecodeHeightSelection {case 0:_dbca ,_aeff :=_dd .GetStandardTable (4);
if _aeff !=nil {return 0,_aeff ;};return _dbca .Decode (_cde ._dbge );case 1:_debe ,_eabd :=_dd .GetStandardTable (5);if _eabd !=nil {return 0,_eabd ;};return _debe .Decode (_cde ._dbge );case 3:if _cde ._abg ==nil {_cbbc ,_acdd :=_dd .GetStandardTable (0);
if _acdd !=nil {return 0,_acdd ;};_cde ._abg =_cbbc ;};return _cde ._abg .Decode (_cde ._dbge );};return 0,nil ;};func (_badc *SymbolDictionary )encodeFlags (_gfc _dc .BinaryWriter )(_ecdc int ,_aebac error ){const _aeacb ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _aebac =_gfc .SkipBits (3);_aebac !=nil {return 0,_ac .Wrap (_aebac ,_aeacb ,"\u0065\u006d\u0070\u0074\u0079\u0020\u0062\u0069\u0074\u0073");};var _dgace int ;if _badc .SdrTemplate > 0{_dgace =1;};if _aebac =_gfc .WriteBit (_dgace );_aebac !=nil {return _ecdc ,_ac .Wrap (_aebac ,_aeacb ,"s\u0064\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");
};_dgace =0;if _badc .SdTemplate > 1{_dgace =1;};if _aebac =_gfc .WriteBit (_dgace );_aebac !=nil {return _ecdc ,_ac .Wrap (_aebac ,_aeacb ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_dgace =0;if _badc .SdTemplate ==1||_badc .SdTemplate ==3{_dgace =1;
};if _aebac =_gfc .WriteBit (_dgace );_aebac !=nil {return _ecdc ,_ac .Wrap (_aebac ,_aeacb ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_dgace =0;if _badc ._ffdb {_dgace =1;};if _aebac =_gfc .WriteBit (_dgace );_aebac !=nil {return _ecdc ,_ac .Wrap (_aebac ,_aeacb ,"\u0063\u006f\u0064in\u0067\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0065\u0064");
};_dgace =0;if _badc ._cbbe {_dgace =1;};if _aebac =_gfc .WriteBit (_dgace );_aebac !=nil {return _ecdc ,_ac .Wrap (_aebac ,_aeacb ,"\u0063\u006f\u0064\u0069ng\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0075\u0073\u0065\u0064");};_dgace =0;
if _badc .SdHuffAggInstanceSelection {_dgace =1;};if _aebac =_gfc .WriteBit (_dgace );_aebac !=nil {return _ecdc ,_ac .Wrap (_aebac ,_aeacb ,"\u0073\u0064\u0048\u0075\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074");};_dgace =int (_badc .SdHuffBMSizeSelection );
if _aebac =_gfc .WriteBit (_dgace );_aebac !=nil {return _ecdc ,_ac .Wrap (_aebac ,_aeacb ,"\u0073\u0064\u0048u\u0066\u0066\u0042\u006d\u0053\u0069\u007a\u0065");};_dgace =0;if _badc .SdHuffDecodeWidthSelection > 1{_dgace =1;};if _aebac =_gfc .WriteBit (_dgace );
_aebac !=nil {return _ecdc ,_ac .Wrap (_aebac ,_aeacb ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_dgace =0;switch _badc .SdHuffDecodeWidthSelection {case 1,3:_dgace =1;};if _aebac =_gfc .WriteBit (_dgace );_aebac !=nil {return _ecdc ,_ac .Wrap (_aebac ,_aeacb ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");
};_dgace =0;if _badc .SdHuffDecodeHeightSelection > 1{_dgace =1;};if _aebac =_gfc .WriteBit (_dgace );_aebac !=nil {return _ecdc ,_ac .Wrap (_aebac ,_aeacb ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_dgace =0;switch _badc .SdHuffDecodeHeightSelection {case 1,3:_dgace =1;
};if _aebac =_gfc .WriteBit (_dgace );_aebac !=nil {return _ecdc ,_ac .Wrap (_aebac ,_aeacb ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_dgace =0;if _badc .UseRefinementAggregation {_dgace =1;};if _aebac =_gfc .WriteBit (_dgace );
_aebac !=nil {return _ecdc ,_ac .Wrap (_aebac ,_aeacb ,"\u0073\u0064\u0052\u0065\u0066\u0041\u0067\u0067");};_dgace =0;if _badc .IsHuffmanEncoded {_dgace =1;};if _aebac =_gfc .WriteBit (_dgace );_aebac !=nil {return _ecdc ,_ac .Wrap (_aebac ,_aeacb ,"\u0073\u0064\u0048\u0075\u0066\u0066");
};return 2,nil ;};var (_aefc Segmenter ;_cedb =map[Type ]func ()Segmenter {TSymbolDictionary :func ()Segmenter {return &SymbolDictionary {}},TIntermediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateLosslessTextRegion :func ()Segmenter {return &TextRegion {}},TPatternDictionary :func ()Segmenter {return &PatternDictionary {}},TIntermediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateLosslessHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TIntermediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateLosslessGenericRegion :func ()Segmenter {return &GenericRegion {}},TIntermediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateLosslessGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TPageInformation :func ()Segmenter {return &PageInformationSegment {}},TEndOfPage :func ()Segmenter {return _aefc },TEndOfStrip :func ()Segmenter {return &EndOfStripe {}},TEndOfFile :func ()Segmenter {return _aefc },TProfiles :func ()Segmenter {return _aefc },TTables :func ()Segmenter {return &TableSegment {}},TExtension :func ()Segmenter {return _aefc },TBitmap :func ()Segmenter {return _aefc }};
);func (_egfeb *TextRegion )encodeFlags (_dafd _dc .BinaryWriter )(_ceec int ,_dcgfa error ){const _agaaa ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _dcgfa =_dafd .WriteBit (int (_egfeb .SbrTemplate ));_dcgfa !=nil {return _ceec ,_ac .Wrap (_dcgfa ,_agaaa ,"s\u0062\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");
};if _ ,_dcgfa =_dafd .WriteBits (uint64 (_egfeb .SbDsOffset ),5);_dcgfa !=nil {return _ceec ,_ac .Wrap (_dcgfa ,_agaaa ,"\u0073\u0062\u0044\u0073\u004f\u0066\u0066\u0073\u0065\u0074");};if _dcgfa =_dafd .WriteBit (int (_egfeb .DefaultPixel ));_dcgfa !=nil {return _ceec ,_ac .Wrap (_dcgfa ,_agaaa ,"\u0044\u0065\u0066a\u0075\u006c\u0074\u0050\u0069\u0078\u0065\u006c");
};if _ ,_dcgfa =_dafd .WriteBits (uint64 (_egfeb .CombinationOperator ),2);_dcgfa !=nil {return _ceec ,_ac .Wrap (_dcgfa ,_agaaa ,"\u0043\u006f\u006d\u0062in\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072");};if _dcgfa =_dafd .WriteBit (int (_egfeb .IsTransposed ));
_dcgfa !=nil {return _ceec ,_ac .Wrap (_dcgfa ,_agaaa ,"\u0069\u0073\u0020\u0074\u0072\u0061\u006e\u0073\u0070\u006f\u0073\u0065\u0064");};if _ ,_dcgfa =_dafd .WriteBits (uint64 (_egfeb .ReferenceCorner ),2);_dcgfa !=nil {return _ceec ,_ac .Wrap (_dcgfa ,_agaaa ,"\u0072\u0065f\u0065\u0072\u0065n\u0063\u0065\u0020\u0063\u006f\u0072\u006e\u0065\u0072");
};if _ ,_dcgfa =_dafd .WriteBits (uint64 (_egfeb .LogSBStrips ),2);_dcgfa !=nil {return _ceec ,_ac .Wrap (_dcgfa ,_agaaa ,"L\u006f\u0067\u0053\u0042\u0053\u0074\u0072\u0069\u0070\u0073");};var _fdge int ;if _egfeb .UseRefinement {_fdge =1;};if _dcgfa =_dafd .WriteBit (_fdge );
_dcgfa !=nil {return _ceec ,_ac .Wrap (_dcgfa ,_agaaa ,"\u0075\u0073\u0065\u0020\u0072\u0065\u0066\u0069\u006ee\u006d\u0065\u006e\u0074");};_fdge =0;if _egfeb .IsHuffmanEncoded {_fdge =1;};if _dcgfa =_dafd .WriteBit (_fdge );_dcgfa !=nil {return _ceec ,_ac .Wrap (_dcgfa ,_agaaa ,"u\u0073\u0065\u0020\u0068\u0075\u0066\u0066\u006d\u0061\u006e");
};_ceec =2;return _ceec ,nil ;};func (_gaea Type )String ()string {switch _gaea {case TSymbolDictionary :return "\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079";case TIntermediateTextRegion :return "\u0049n\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020T\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TImmediateTextRegion :return "I\u006d\u006d\u0065\u0064ia\u0074e\u0020\u0054\u0065\u0078\u0074 \u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessTextRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020L\u006f\u0073\u0073\u006c\u0065\u0073\u0073 \u0054\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TPatternDictionary :return "\u0050a\u0074t\u0065\u0072\u006e\u0020\u0044i\u0063\u0074i\u006f\u006e\u0061\u0072\u0079";case TIntermediateHalftoneRegion :return "\u0049\u006e\u0074\u0065r\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0048\u0061l\u0066t\u006f\u006e\u0065\u0020\u0052\u0065\u0067i\u006f\u006e";
case TImmediateHalftoneRegion :return "\u0049m\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u0048\u0061l\u0066t\u006fn\u0065\u0020\u0052\u0065\u0067\u0069\u006fn";case TImmediateLosslessHalftoneRegion :return "\u0049\u006d\u006ded\u0069\u0061\u0074\u0065\u0020\u004c\u006f\u0073\u0073l\u0065s\u0073 \u0048a\u006c\u0066\u0074\u006f\u006e\u0065\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TIntermediateGenericRegion :return "I\u006e\u0074\u0065\u0072\u006d\u0065d\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020R\u0065g\u0069\u006f\u006e";case TImmediateGenericRegion :return "\u0049m\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006ee\u0072\u0069\u0063\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TImmediateLosslessGenericRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u004c\u006f\u0073\u0073\u006c\u0065\u0073\u0073\u0020\u0047e\u006e\u0065\u0072\u0069\u0063\u0020\u0052e\u0067\u0069\u006f\u006e";case TIntermediateGenericRefinementRegion :return "\u0049\u006e\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0020\u0052\u0065\u0066i\u006e\u0065\u006d\u0065\u006et\u0020\u0052e\u0067\u0069\u006f\u006e";
case TImmediateGenericRefinementRegion :return "I\u006d\u006d\u0065\u0064\u0069\u0061t\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020\u0052\u0065\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020\u0052\u0065\u0067\u0069o\u006e";case TImmediateLosslessGenericRefinementRegion :return "\u0049m\u006d\u0065d\u0069\u0061\u0074\u0065 \u004c\u006f\u0073s\u006c\u0065\u0073\u0073\u0020\u0047\u0065\u006e\u0065ri\u0063\u0020\u0052e\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020R\u0065\u0067i\u006f\u006e";
case TPageInformation :return "\u0050\u0061g\u0065\u0020\u0049n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e";case TEndOfPage :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0050\u0061\u0067\u0065";case TEndOfStrip :return "\u0045\u006e\u0064 \u004f\u0066\u0020\u0053\u0074\u0072\u0069\u0070";
case TEndOfFile :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0046\u0069\u006c\u0065";case TProfiles :return "\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0073";case TTables :return "\u0054\u0061\u0062\u006c\u0065\u0073";case TExtension :return "\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn";
case TBitmap :return "\u0042\u0069\u0074\u006d\u0061\u0070";};return "I\u006ev\u0061\u006c\u0069\u0064\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0020Ki\u006e\u0064";};var _ templater =&template1 {};func (_bf *GenericRefinementRegion )updateOverride ()error {if _bf .GrAtX ==nil ||_bf .GrAtY ==nil {return _ea .New ("\u0041\u0054\u0020\u0070\u0069\u0078\u0065\u006c\u0073\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");
};if len (_bf .GrAtX )!=len (_bf .GrAtY ){return _ea .New ("A\u0054\u0020\u0070\u0069xe\u006c \u0069\u006e\u0063\u006f\u006es\u0069\u0073\u0074\u0065\u006e\u0074");};_bf ._gf =make ([]bool ,len (_bf .GrAtX ));switch _bf .TemplateID {case 0:if _bf .GrAtX [0]!=-1&&_bf .GrAtY [0]!=-1{_bf ._gf [0]=true ;
_bf ._ggf =true ;};if _bf .GrAtX [1]!=-1&&_bf .GrAtY [1]!=-1{_bf ._gf [1]=true ;_bf ._ggf =true ;};case 1:_bf ._ggf =false ;};return nil ;};func (_ee *EndOfStripe )parseHeader (_eeb *Header ,_dg _dc .StreamReader )error {_af ,_ae :=_ee ._ed .ReadBits (32);
if _ae !=nil {return _ae ;};_ee ._db =int (_af &_f .MaxInt32 );return nil ;};type Header struct{SegmentNumber uint32 ;Type Type ;RetainFlag bool ;PageAssociation int ;PageAssociationFieldSize bool ;RTSegments []*Header ;HeaderLength int64 ;SegmentDataLength uint64 ;
SegmentDataStartOffset uint64 ;Reader _dc .StreamReader ;SegmentData Segmenter ;RTSNumbers []int ;RetainBits []uint8 ;};func (_cfa *PatternDictionary )parseHeader ()error {_be .Log .Trace ("\u005b\u0050\u0041\u0054\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054I\u004f\u004e\u0041\u0052\u0059\u005d[\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d\u0020b\u0065\u0067\u0069\u006e");
defer func (){_be .Log .Trace ("\u005b\u0050\u0041T\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u005b\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
}();_ ,_eedf :=_cfa ._feea .ReadBits (5);if _eedf !=nil {return _eedf ;};if _eedf =_cfa .readTemplate ();_eedf !=nil {return _eedf ;};if _eedf =_cfa .readIsMMREncoded ();_eedf !=nil {return _eedf ;};if _eedf =_cfa .readPatternWidthAndHeight ();_eedf !=nil {return _eedf ;
};if _eedf =_cfa .readGrayMax ();_eedf !=nil {return _eedf ;};if _eedf =_cfa .computeSegmentDataStructure ();_eedf !=nil {return _eedf ;};return _cfa .checkInput ();};func (_afab *GenericRegion )copyLineAbove (_cab int )error {_agac :=_cab *_afab .Bitmap .RowStride ;
_fgf :=_agac -_afab .Bitmap .RowStride ;for _fed :=0;_fed < _afab .Bitmap .RowStride ;_fed ++{_egda ,_dgg :=_afab .Bitmap .GetByte (_fgf );if _dgg !=nil {return _dgg ;};_fgf ++;if _dgg =_afab .Bitmap .SetByte (_agac ,_egda );_dgg !=nil {return _dgg ;};
_agac ++;};return nil ;};func (_ecd *PatternDictionary )setGbAtPixels (){if _ecd .HDTemplate ==0{_ecd .GBAtX =make ([]int8 ,4);_ecd .GBAtY =make ([]int8 ,4);_ecd .GBAtX [0]=-int8 (_ecd .HdpWidth );_ecd .GBAtY [0]=0;_ecd .GBAtX [1]=-3;_ecd .GBAtY [1]=-1;
_ecd .GBAtX [2]=2;_ecd .GBAtY [2]=-2;_ecd .GBAtX [3]=-2;_ecd .GBAtY [3]=-2;}else {_ecd .GBAtX =[]int8 {-int8 (_ecd .HdpWidth )};_ecd .GBAtY =[]int8 {0};};};type PageInformationSegment struct{_agdg _dc .StreamReader ;PageBMHeight int ;PageBMWidth int ;ResolutionX int ;
ResolutionY int ;_cfdb bool ;_feef _gg .CombinationOperator ;_gede bool ;DefaultPixelValue uint8 ;_bage bool ;IsLossless bool ;IsStripe bool ;MaxStripeSize uint16 ;};func (_ecgag *PageInformationSegment )parseHeader ()(_aefg error ){_be .Log .Trace ("\u005b\u0050\u0061\u0067\u0065I\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067m\u0065\u006e\u0074\u005d\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u002e\u002e");
defer func (){var _cdcc ="[\u0050\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072m\u0061\u0074\u0069\u006f\u006e\u0053\u0065gm\u0065\u006e\u0074\u005d \u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065ad\u0065\u0072 \u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064";
if _aefg !=nil {_cdcc +="\u0020\u0077\u0069t\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u0020"+_aefg .Error ();}else {_cdcc +="\u0020\u0073\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079";};_be .Log .Trace (_cdcc );}();if _aefg =_ecgag .readWidthAndHeight ();
_aefg !=nil {return _aefg ;};if _aefg =_ecgag .readResolution ();_aefg !=nil {return _aefg ;};_ ,_aefg =_ecgag ._agdg .ReadBit ();if _aefg !=nil {return _aefg ;};if _aefg =_ecgag .readCombinationOperatorOverrideAllowed ();_aefg !=nil {return _aefg ;};if _aefg =_ecgag .readRequiresAuxiliaryBuffer ();
_aefg !=nil {return _aefg ;};if _aefg =_ecgag .readCombinationOperator ();_aefg !=nil {return _aefg ;};if _aefg =_ecgag .readDefaultPixelValue ();_aefg !=nil {return _aefg ;};if _aefg =_ecgag .readContainsRefinement ();_aefg !=nil {return _aefg ;};if _aefg =_ecgag .readIsLossless ();
_aefg !=nil {return _aefg ;};if _aefg =_ecgag .readIsStriped ();_aefg !=nil {return _aefg ;};if _aefg =_ecgag .readMaxStripeSize ();_aefg !=nil {return _aefg ;};if _aefg =_ecgag .checkInput ();_aefg !=nil {return _aefg ;};_be .Log .Trace ("\u0025\u0073",_ecgag );
return nil ;};func (_eafa *TextRegion )setParameters (_cedf *_eac .Decoder ,_ffbf ,_dcad bool ,_ffgf ,_egbd uint32 ,_aebc uint32 ,_gbdce int8 ,_efeg uint32 ,_fecf int8 ,_dfggf _gg .CombinationOperator ,_efcda int8 ,_daaa int16 ,_fabc ,_agff ,_bfae ,_gaeb ,_bcce ,_cgcc ,_cgcgd ,_ggfgf ,_caagf ,_aacec int8 ,_dgbge ,_gegfa []int8 ,_aebb []*_gg .Bitmap ,_ffca int8 ){_eafa ._fgbe =_cedf ;
_eafa .IsHuffmanEncoded =_ffbf ;_eafa .UseRefinement =_dcad ;_eafa .RegionInfo .BitmapWidth =_ffgf ;_eafa .RegionInfo .BitmapHeight =_egbd ;_eafa .NumberOfSymbolInstances =_aebc ;_eafa .SbStrips =_gbdce ;_eafa .NumberOfSymbols =_efeg ;_eafa .DefaultPixel =_fecf ;
_eafa .CombinationOperator =_dfggf ;_eafa .IsTransposed =_efcda ;_eafa .ReferenceCorner =_daaa ;_eafa .SbDsOffset =_fabc ;_eafa .SbHuffFS =_agff ;_eafa .SbHuffDS =_bfae ;_eafa .SbHuffDT =_gaeb ;_eafa .SbHuffRDWidth =_bcce ;_eafa .SbHuffRDHeight =_cgcc ;
_eafa .SbHuffRSize =_caagf ;_eafa .SbHuffRDX =_cgcgd ;_eafa .SbHuffRDY =_ggfgf ;_eafa .SbrTemplate =_aacec ;_eafa .SbrATX =_dgbge ;_eafa .SbrATY =_gegfa ;_eafa .Symbols =_aebb ;_eafa ._fddg =_ffca ;};type SegmentEncoder interface{Encode (_ccge _dc .BinaryWriter )(_dbf int ,_aacf error );
};func (_dcgd *GenericRegion )readGBAtPixels (_ccd int )error {const _cee ="\u0072\u0065\u0061\u0064\u0047\u0042\u0041\u0074\u0050i\u0078\u0065\u006c\u0073";_dcgd .GBAtX =make ([]int8 ,_ccd );_dcgd .GBAtY =make ([]int8 ,_ccd );for _acaa :=0;_acaa < _ccd ;
_acaa ++{_efdf ,_gdbe :=_dcgd ._fbg .ReadByte ();if _gdbe !=nil {return _ac .Wrapf (_gdbe ,_cee ,"\u0058\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_acaa );};_dcgd .GBAtX [_acaa ]=int8 (_efdf );_efdf ,_gdbe =_dcgd ._fbg .ReadByte ();
if _gdbe !=nil {return _ac .Wrapf (_gdbe ,_cee ,"\u0059\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_acaa );};_dcgd .GBAtY [_acaa ]=int8 (_efdf );};return nil ;};func (_cgaf *SymbolDictionary )huffDecodeBmSize ()(int64 ,error ){if _cgaf ._fec ==nil {var (_dacg int ;
_ecec error ;);if _cgaf .SdHuffDecodeHeightSelection ==3{_dacg ++;};if _cgaf .SdHuffDecodeWidthSelection ==3{_dacg ++;};_cgaf ._fec ,_ecec =_cgaf .getUserTable (_dacg );if _ecec !=nil {return 0,_ecec ;};};return _cgaf ._fec .Decode (_cgaf ._dbge );};func (_gecfa *TextRegion )readRegionFlags ()error {var (_gcbfg int ;
_ggge uint64 ;_dffc error ;);_gcbfg ,_dffc =_gecfa ._dcedc .ReadBit ();if _dffc !=nil {return _dffc ;};_gecfa .SbrTemplate =int8 (_gcbfg );_ggge ,_dffc =_gecfa ._dcedc .ReadBits (5);if _dffc !=nil {return _dffc ;};_gecfa .SbDsOffset =int8 (_ggge );if _gecfa .SbDsOffset > 0x0f{_gecfa .SbDsOffset -=0x20;
};_gcbfg ,_dffc =_gecfa ._dcedc .ReadBit ();if _dffc !=nil {return _dffc ;};_gecfa .DefaultPixel =int8 (_gcbfg );_ggge ,_dffc =_gecfa ._dcedc .ReadBits (2);if _dffc !=nil {return _dffc ;};_gecfa .CombinationOperator =_gg .CombinationOperator (int (_ggge )&0x3);
_gcbfg ,_dffc =_gecfa ._dcedc .ReadBit ();if _dffc !=nil {return _dffc ;};_gecfa .IsTransposed =int8 (_gcbfg );_ggge ,_dffc =_gecfa ._dcedc .ReadBits (2);if _dffc !=nil {return _dffc ;};_gecfa .ReferenceCorner =int16 (_ggge )&0x3;_ggge ,_dffc =_gecfa ._dcedc .ReadBits (2);
if _dffc !=nil {return _dffc ;};_gecfa .LogSBStrips =int16 (_ggge )&0x3;_gecfa .SbStrips =1<<uint (_gecfa .LogSBStrips );_gcbfg ,_dffc =_gecfa ._dcedc .ReadBit ();if _dffc !=nil {return _dffc ;};if _gcbfg ==1{_gecfa .UseRefinement =true ;};_gcbfg ,_dffc =_gecfa ._dcedc .ReadBit ();
if _dffc !=nil {return _dffc ;};if _gcbfg ==1{_gecfa .IsHuffmanEncoded =true ;};return nil ;};func (_edfe *RegionSegment )String ()string {_ffdc :=&_g .Builder {};_ffdc .WriteString ("\u0009[\u0052E\u0047\u0049\u004f\u004e\u0020S\u0045\u0047M\u0045\u004e\u0054\u005d\u000a");
_ffdc .WriteString (_d .Sprintf ("\t\u0009\u002d\u0020\u0042\u0069\u0074m\u0061\u0070\u0020\u0028\u0077\u0069d\u0074\u0068\u002c\u0020\u0068\u0065\u0069g\u0068\u0074\u0029\u0020\u005b\u0025\u0064\u0078\u0025\u0064]\u000a",_edfe .BitmapWidth ,_edfe .BitmapHeight ));
_ffdc .WriteString (_d .Sprintf ("\u0009\u0009\u002d\u0020L\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0028\u0078,\u0079)\u003a\u0020\u005b\u0025\u0064\u002c\u0025d\u005d\u000a",_edfe .XLocation ,_edfe .YLocation ));_ffdc .WriteString (_d .Sprintf ("\t\u0009\u002d\u0020\u0043\u006f\u006db\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070e\u0072\u0061\u0074o\u0072:\u0020\u0025\u0073",_edfe .CombinaionOperator ));
return _ffdc .String ();};func (_ggfa *SymbolDictionary )setRetainedCodingContexts (_cfbg *SymbolDictionary ){_ggfa ._aaad =_cfbg ._aaad ;_ggfa .IsHuffmanEncoded =_cfbg .IsHuffmanEncoded ;_ggfa .UseRefinementAggregation =_cfbg .UseRefinementAggregation ;
_ggfa .SdTemplate =_cfbg .SdTemplate ;_ggfa .SdrTemplate =_cfbg .SdrTemplate ;_ggfa .SdATX =_cfbg .SdATX ;_ggfa .SdATY =_cfbg .SdATY ;_ggfa .SdrATX =_cfbg .SdrATX ;_ggfa .SdrATY =_cfbg .SdrATY ;_ggfa ._gdea =_cfbg ._gdea ;};func (_ggd *GenericRegion )parseHeader ()(_cdaf error ){_be .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052I\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0050\u0061\u0072s\u0069\u006e\u0067\u0048\u0065\u0061\u0064e\u0072\u002e\u002e\u002e");
defer func (){if _cdaf !=nil {_be .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e]\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065r\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0077\u0069th\u0020\u0065\u0072\u0072\u006f\u0072\u002e\u0020\u0025\u0076",_cdaf );
}else {_be .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049C\u002d\u0052\u0045G\u0049\u004f\u004e]\u0020\u0050a\u0072\u0073\u0069\u006e\u0067\u0048e\u0061de\u0072\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0053\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079\u002e\u002e\u002e");
};}();var (_fab int ;_ccfa uint64 ;);if _cdaf =_ggd .RegionSegment .parseHeader ();_cdaf !=nil {return _cdaf ;};if _ ,_cdaf =_ggd ._fbg .ReadBits (3);_cdaf !=nil {return _cdaf ;};_fab ,_cdaf =_ggd ._fbg .ReadBit ();if _cdaf !=nil {return _cdaf ;};if _fab ==1{_ggd .UseExtTemplates =true ;
};_fab ,_cdaf =_ggd ._fbg .ReadBit ();if _cdaf !=nil {return _cdaf ;};if _fab ==1{_ggd .IsTPGDon =true ;};_ccfa ,_cdaf =_ggd ._fbg .ReadBits (2);if _cdaf !=nil {return _cdaf ;};_ggd .GBTemplate =byte (_ccfa &0xf);_fab ,_cdaf =_ggd ._fbg .ReadBit ();if _cdaf !=nil {return _cdaf ;
};if _fab ==1{_ggd .IsMMREncoded =true ;};if !_ggd .IsMMREncoded {_gefg :=1;if _ggd .GBTemplate ==0{_gefg =4;if _ggd .UseExtTemplates {_gefg =12;};};if _cdaf =_ggd .readGBAtPixels (_gefg );_cdaf !=nil {return _cdaf ;};};if _cdaf =_ggd .computeSegmentDataStructure ();
_cdaf !=nil {return _cdaf ;};_be .Log .Trace ("\u0025\u0073",_ggd );return nil ;};type TableSegment struct{_bbcc _dc .StreamReader ;_bbdg int32 ;_fadb int32 ;_cffaf int32 ;_dgcc int32 ;_gdcg int32 ;};type Pager interface{GetSegment (int )(*Header ,error );
GetBitmap ()(*_gg .Bitmap ,error );};func (_febfg *SymbolDictionary )decodeHeightClassCollectiveBitmap (_cfdbf int64 ,_feab ,_gbegc uint32 )(*_gg .Bitmap ,error ){if _cfdbf ==0{_gbdc :=_gg .New (int (_gbegc ),int (_feab ));var (_bdgb byte ;_fbfg error ;
);for _cdfc :=0;_cdfc < len (_gbdc .Data );_cdfc ++{_bdgb ,_fbfg =_febfg ._dbge .ReadByte ();if _fbfg !=nil {return nil ,_fbfg ;};if _fbfg =_gbdc .SetByte (_cdfc ,_bdgb );_fbfg !=nil {return nil ,_fbfg ;};};return _gbdc ,nil ;};if _febfg ._fgga ==nil {_febfg ._fgga =NewGenericRegion (_febfg ._dbge );
};_febfg ._fgga .setParameters (true ,_febfg ._dbge .StreamPosition (),_cfdbf ,_feab ,_gbegc );_gdfe ,_cbag :=_febfg ._fgga .GetRegionBitmap ();if _cbag !=nil {return nil ,_cbag ;};return _gdfe ,nil ;};func (_afcda *Header )CleanSegmentData (){if _afcda .SegmentData !=nil {_afcda .SegmentData =nil ;
};};func (_bgbb *Header )readSegmentNumber (_cbea _dc .StreamReader )error {const _dfff ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";_adcc :=make ([]byte ,4);_ ,_dfd :=_cbea .Read (_adcc );if _dfd !=nil {return _ac .Wrap (_dfd ,_dfff ,"");
};_bgbb .SegmentNumber =_b .BigEndian .Uint32 (_adcc );return nil ;};func (_dgfdc *SymbolDictionary )getSymbol (_dcaa int )(*_gg .Bitmap ,error ){const _gdbb ="\u0067e\u0074\u0053\u0079\u006d\u0062\u006fl";_baec ,_bce :=_dgfdc ._edbca .GetBitmap (_dgfdc ._gcea [_dcaa ]);
if _bce !=nil {return nil ,_ac .Wrap (_bce ,_gdbb ,"\u0063\u0061n\u0027\u0074\u0020g\u0065\u0074\u0020\u0073\u0079\u006d\u0062\u006f\u006c");};return _baec ,nil ;};func (_ddgb *PageInformationSegment )readIsStriped ()error {_dabg ,_fdfc :=_ddgb ._agdg .ReadBit ();
if _fdfc !=nil {return _fdfc ;};if _dabg ==1{_ddgb .IsStripe =true ;};return nil ;};func (_fgd *GenericRefinementRegion )decodeTypicalPredictedLineTemplate1 (_bd ,_gca ,_cdff ,_dca ,_bcbf ,_bbe ,_bgae ,_bbad ,_eebc int )(_bae error ){var (_egf ,_cca int ;
_bcf ,_cec int ;_eda ,_agd int ;_ggfg byte ;);if _bd > 0{_ggfg ,_bae =_fgd .RegionBitmap .GetByte (_bgae -_cdff );if _bae !=nil {return ;};_bcf =int (_ggfg );};if _bbad > 0&&_bbad <=_fgd .ReferenceBitmap .Height {_ggfg ,_bae =_fgd .ReferenceBitmap .GetByte (_eebc -_dca +_bbe );
if _bae !=nil {return ;};_cec =int (_ggfg )<<2;};if _bbad >=0&&_bbad < _fgd .ReferenceBitmap .Height {_ggfg ,_bae =_fgd .ReferenceBitmap .GetByte (_eebc +_bbe );if _bae !=nil {return ;};_eda =int (_ggfg );};if _bbad > -2&&_bbad < _fgd .ReferenceBitmap .Height -1{_ggfg ,_bae =_fgd .ReferenceBitmap .GetByte (_eebc +_dca +_bbe );
if _bae !=nil {return ;};_agd =int (_ggfg );};_egf =((_bcf >>5)&0x6)|((_agd >>2)&0x30)|(_eda &0xc0)|(_cec &0x200);_cca =((_agd >>2)&0x70)|(_eda &0xc0)|(_cec &0x700);var _gec int ;for _ddb :=0;_ddb < _bcbf ;_ddb =_gec {var (_fga int ;_gfa int ;);_gec =_ddb +8;
if _fga =_gca -_ddb ;_fga > 8{_fga =8;};_gae :=_gec < _gca ;_gecf :=_gec < _fgd .ReferenceBitmap .Width ;_acf :=_bbe +1;if _bd > 0{_ggfg =0;if _gae {_ggfg ,_bae =_fgd .RegionBitmap .GetByte (_bgae -_cdff +1);if _bae !=nil {return ;};};_bcf =(_bcf <<8)|int (_ggfg );
};if _bbad > 0&&_bbad <=_fgd .ReferenceBitmap .Height {var _cac int ;if _gecf {_ggfg ,_bae =_fgd .ReferenceBitmap .GetByte (_eebc -_dca +_acf );if _bae !=nil {return ;};_cac =int (_ggfg )<<2;};_cec =(_cec <<8)|_cac ;};if _bbad >=0&&_bbad < _fgd .ReferenceBitmap .Height {_ggfg =0;
if _gecf {_ggfg ,_bae =_fgd .ReferenceBitmap .GetByte (_eebc +_acf );if _bae !=nil {return ;};};_eda =(_eda <<8)|int (_ggfg );};if _bbad > -2&&_bbad < (_fgd .ReferenceBitmap .Height -1){_ggfg =0;if _gecf {_ggfg ,_bae =_fgd .ReferenceBitmap .GetByte (_eebc +_dca +_acf );
if _bae !=nil {return ;};};_agd =(_agd <<8)|int (_ggfg );};for _ced :=0;_ced < _fga ;_ced ++{var _efe int ;_cdfb :=(_cca >>4)&0x1ff;switch _cdfb {case 0x1ff:_efe =1;case 0x00:_efe =0;default:_fgd ._ef .SetIndex (int32 (_egf ));_efe ,_bae =_fgd ._gb .DecodeBit (_fgd ._ef );
if _bae !=nil {return ;};};_fbc :=uint (7-_ced );_gfa |=_efe <<_fbc ;_egf =((_egf &0x0d6)<<1)|_efe |(_bcf >>_fbc +5)&0x002|((_agd >>_fbc +2)&0x010)|((_eda >>_fbc )&0x040)|((_cec >>_fbc )&0x200);_cca =((_cca &0xdb)<<1)|((_agd >>_fbc +2)&0x010)|((_eda >>_fbc )&0x080)|((_cec >>_fbc )&0x400);
};_bae =_fgd .RegionBitmap .SetByte (_bgae ,byte (_gfa ));if _bae !=nil {return ;};_bgae ++;_eebc ++;};return nil ;};func (_eaea *HalftoneRegion )Init (hd *Header ,r _dc .StreamReader )error {_eaea ._fegg =r ;_eaea ._edga =hd ;_eaea .RegionSegment =NewRegionSegment (r );
return _eaea .parseHeader ();};func (_gbfg *PageInformationSegment )readDefaultPixelValue ()error {_ecgf ,_effa :=_gbfg ._agdg .ReadBit ();if _effa !=nil {return _effa ;};_gbfg .DefaultPixelValue =uint8 (_ecgf &0xf);return nil ;};func (_defc *SymbolDictionary )readRefinementAtPixels (_acfge int )error {_defc .SdrATX =make ([]int8 ,_acfge );
_defc .SdrATY =make ([]int8 ,_acfge );var (_eaeb byte ;_fcafg error ;);for _ebedb :=0;_ebedb < _acfge ;_ebedb ++{_eaeb ,_fcafg =_defc ._dbge .ReadByte ();if _fcafg !=nil {return _fcafg ;};_defc .SdrATX [_ebedb ]=int8 (_eaeb );_eaeb ,_fcafg =_defc ._dbge .ReadByte ();
if _fcafg !=nil {return _fcafg ;};_defc .SdrATY [_ebedb ]=int8 (_eaeb );};return nil ;};func _fada (_fgea _dc .StreamReader ,_faa *Header )*GenericRefinementRegion {return &GenericRefinementRegion {_ag :_fgea ,RegionInfo :NewRegionSegment (_fgea ),_df :_faa ,_bg :&template0 {},_cb :&template1 {}};
};func (_gcecc *SymbolDictionary )decodeDirectlyThroughGenericRegion (_ebaf ,_cebc uint32 )error {if _gcecc ._fgga ==nil {_gcecc ._fgga =NewGenericRegion (_gcecc ._dbge );};_gcecc ._fgga .setParametersWithAt (false ,byte (_gcecc .SdTemplate ),false ,false ,_gcecc .SdATX ,_gcecc .SdATY ,_ebaf ,_cebc ,_gcecc ._gdea ,_gcecc ._aaad );
return _gcecc .addSymbol (_gcecc ._fgga );};func (_cba *PageInformationSegment )Encode (w _dc .BinaryWriter )(_ffb int ,_ggdd error ){const _gdac ="\u0050\u0061g\u0065\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u002e\u0045\u006eco\u0064\u0065";
_bega :=make ([]byte ,4);_b .BigEndian .PutUint32 (_bega ,uint32 (_cba .PageBMWidth ));_ffb ,_ggdd =w .Write (_bega );if _ggdd !=nil {return _ffb ,_ac .Wrap (_ggdd ,_gdac ,"\u0077\u0069\u0064t\u0068");};_b .BigEndian .PutUint32 (_bega ,uint32 (_cba .PageBMHeight ));
var _cdab int ;_cdab ,_ggdd =w .Write (_bega );if _ggdd !=nil {return _cdab +_ffb ,_ac .Wrap (_ggdd ,_gdac ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_ffb +=_cdab ;_b .BigEndian .PutUint32 (_bega ,uint32 (_cba .ResolutionX ));_cdab ,_ggdd =w .Write (_bega );
if _ggdd !=nil {return _cdab +_ffb ,_ac .Wrap (_ggdd ,_gdac ,"\u0078\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_ffb +=_cdab ;_b .BigEndian .PutUint32 (_bega ,uint32 (_cba .ResolutionY ));if _cdab ,_ggdd =w .Write (_bega );_ggdd !=nil {return _cdab +_ffb ,_ac .Wrap (_ggdd ,_gdac ,"\u0079\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");
};_ffb +=_cdab ;if _ggdd =_cba .encodeFlags (w );_ggdd !=nil {return _ffb ,_ac .Wrap (_ggdd ,_gdac ,"");};_ffb ++;if _cdab ,_ggdd =_cba .encodeStripingInformation (w );_ggdd !=nil {return _ffb ,_ac .Wrap (_ggdd ,_gdac ,"");};_ffb +=_cdab ;return _ffb ,nil ;
};func (_bded *Header )GetSegmentData ()(Segmenter ,error ){var _abdg Segmenter ;if _bded .SegmentData !=nil {_abdg =_bded .SegmentData ;};if _abdg ==nil {_gaaf ,_bcfe :=_cedb [_bded .Type ];if !_bcfe {return nil ,_d .Errorf ("\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0073\u002f\u0020\u0025\u0064\u0020\u0063\u0072e\u0061t\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e\u0020",_bded .Type ,_bded .Type );
};_abdg =_gaaf ();_be .Log .Trace ("\u005b\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u0020\u0061\u0074\u0020\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0030\u0034\u0058",_bded .SegmentNumber ,_bded .SegmentDataStartOffset );
_gbee ,_ggad :=_bded .subInputReader ();if _ggad !=nil {return nil ,_ggad ;};if _acfe :=_abdg .Init (_bded ,_gbee );_acfe !=nil {_be .Log .Debug ("\u0049\u006e\u0069\u0074 \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076 \u0066o\u0072\u0020\u0074\u0079\u0070\u0065\u003a \u0025\u0054",_acfe ,_abdg );
return nil ,_acfe ;};_bded .SegmentData =_abdg ;};return _abdg ,nil ;};func (_eba *GenericRegion )setParameters (_cacf bool ,_bbff ,_agaf int64 ,_eccc ,_afe uint32 ){_eba .IsMMREncoded =_cacf ;_eba .DataOffset =_bbff ;_eba .DataLength =_agaf ;_eba .RegionSegment .BitmapHeight =_eccc ;
_eba .RegionSegment .BitmapWidth =_afe ;_eba ._dfc =nil ;_eba .Bitmap =nil ;};func (_cacb *Header )pageSize ()uint {if _cacb .PageAssociation <=255{return 1;};return 4;};type EncodeInitializer interface{InitEncode ();};func (_dbc *GenericRegion )decodeTemplate0b (_gfg ,_bcbc ,_dcc int ,_cadc ,_cag int )(_efb error ){const _eae ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0062";
var (_eaf ,_dfa int ;_beag ,_cdg int ;_gcbb byte ;_ecc int ;);if _gfg >=1{_gcbb ,_efb =_dbc .Bitmap .GetByte (_cag );if _efb !=nil {return _ac .Wrap (_efb ,_eae ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_beag =int (_gcbb );};if _gfg >=2{_gcbb ,_efb =_dbc .Bitmap .GetByte (_cag -_dbc .Bitmap .RowStride );
if _efb !=nil {return _ac .Wrap (_efb ,_eae ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_cdg =int (_gcbb )<<6;};_eaf =(_beag &0xf0)|(_cdg &0x3800);for _ggee :=0;_ggee < _dcc ;_ggee =_ecc {var (_cdfg byte ;_ede int ;);_ecc =_ggee +8;if _cafg :=_bcbc -_ggee ;
_cafg > 8{_ede =8;}else {_ede =_cafg ;};if _gfg > 0{_beag <<=8;if _ecc < _bcbc {_gcbb ,_efb =_dbc .Bitmap .GetByte (_cag +1);if _efb !=nil {return _ac .Wrap (_efb ,_eae ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_beag |=int (_gcbb );};};if _gfg > 1{_cdg <<=8;
if _ecc < _bcbc {_gcbb ,_efb =_dbc .Bitmap .GetByte (_cag -_dbc .Bitmap .RowStride +1);if _efb !=nil {return _ac .Wrap (_efb ,_eae ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_cdg |=int (_gcbb )<<6;};};for _aeac :=0;_aeac < _ede ;_aeac ++{_gab :=uint (7-_aeac );
if _dbc ._fcc {_dfa =_dbc .overrideAtTemplate0b (_eaf ,_ggee +_aeac ,_gfg ,int (_cdfg ),_aeac ,int (_gab ));_dbc ._agb .SetIndex (int32 (_dfa ));}else {_dbc ._agb .SetIndex (int32 (_eaf ));};var _feb int ;_feb ,_efb =_dbc ._dba .DecodeBit (_dbc ._agb );
if _efb !=nil {return _ac .Wrap (_efb ,_eae ,"");};_cdfg |=byte (_feb <<_gab );_eaf =((_eaf &0x7bf7)<<1)|_feb |((_beag >>_gab )&0x10)|((_cdg >>_gab )&0x800);};if _gdaa :=_dbc .Bitmap .SetByte (_cadc ,_cdfg );_gdaa !=nil {return _ac .Wrap (_gdaa ,_eae ,"");
};_cadc ++;_cag ++;};return nil ;};func (_dafb *TableSegment )HtLow ()int32 {return _dafb ._dgcc };func (_gfbd *PatternDictionary )checkInput ()error {if _gfbd .HdpHeight < 1||_gfbd .HdpWidth < 1{return _ea .New ("in\u0076\u0061l\u0069\u0064\u0020\u0048\u0065\u0061\u0064\u0065\u0072 \u0056\u0061\u006c\u0075\u0065\u003a\u0020\u0057\u0069\u0064\u0074\u0068\u002f\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020g\u0072e\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020z\u0065\u0072o");
};if _gfbd .IsMMREncoded {if _gfbd .HDTemplate !=0{_be .Log .Debug ("\u0076\u0061\u0072\u0069\u0061\u0062\u006c\u0065\u0020\u0048\u0044\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e \u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030");
};};return nil ;};func (_dbfg *RegionSegment )readCombinationOperator ()error {_eggd ,_efgcd :=_dbfg ._accd .ReadBits (3);if _efgcd !=nil {return _efgcd ;};_dbfg .CombinaionOperator =_gg .CombinationOperator (_eggd &0xF);return nil ;};func (_fbf *GenericRegion )decodeLine (_gcf ,_eebe ,_cccb int )error {const _bca ="\u0064\u0065\u0063\u006f\u0064\u0065\u004c\u0069\u006e\u0065";
_gbe :=_fbf .Bitmap .GetByteIndex (0,_gcf );_bab :=_gbe -_fbf .Bitmap .RowStride ;switch _fbf .GBTemplate {case 0:if !_fbf .UseExtTemplates {return _fbf .decodeTemplate0a (_gcf ,_eebe ,_cccb ,_gbe ,_bab );};return _fbf .decodeTemplate0b (_gcf ,_eebe ,_cccb ,_gbe ,_bab );
case 1:return _fbf .decodeTemplate1 (_gcf ,_eebe ,_cccb ,_gbe ,_bab );case 2:return _fbf .decodeTemplate2 (_gcf ,_eebe ,_cccb ,_gbe ,_bab );case 3:return _fbf .decodeTemplate3 (_gcf ,_eebe ,_cccb ,_gbe ,_bab );};return _ac .Errorf (_bca ,"\u0069\u006e\u0076a\u006c\u0069\u0064\u0020G\u0042\u0054\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u003a\u0020\u0025\u0064",_fbf .GBTemplate );
};func (_aea *GenericRefinementRegion )overrideAtTemplate0 (_efdc ,_daf ,_ceg ,_aa ,_fgcb int )int {if _aea ._gf [0]{_efdc &=0xfff7;if _aea .GrAtY [0]==0&&int (_aea .GrAtX [0])>=-_fgcb {_efdc |=(_aa >>uint (7-(_fgcb +int (_aea .GrAtX [0])))&0x1)<<3;}else {_efdc |=_aea .getPixel (_aea .RegionBitmap ,_daf +int (_aea .GrAtX [0]),_ceg +int (_aea .GrAtY [0]))<<3;
};};if _aea ._gf [1]{_efdc &=0xefff;if _aea .GrAtY [1]==0&&int (_aea .GrAtX [1])>=-_fgcb {_efdc |=(_aa >>uint (7-(_fgcb +int (_aea .GrAtX [1])))&0x1)<<12;}else {_efdc |=_aea .getPixel (_aea .ReferenceBitmap ,_daf +int (_aea .GrAtX [1]),_ceg +int (_aea .GrAtY [1]));
};};return _efdc ;};func (_agda *GenericRegion )GetRegionInfo ()*RegionSegment {return _agda .RegionSegment };func (_cfg *template0 )form (_dec ,_fcd ,_adg ,_aed ,_edgd int16 )int16 {return (_dec <<10)|(_fcd <<7)|(_adg <<4)|(_aed <<1)|_edgd ;};func (_gdc *GenericRefinementRegion )decodeSLTP ()(int ,error ){_gdc .Template .setIndex (_gdc ._ef );
return _gdc ._gb .DecodeBit (_gdc ._ef );};func (_ade *template1 )form (_fcde ,_fadf ,_fba ,_bdfc ,_dfb int16 )int16 {return ((_fcde &0x02)<<8)|(_fadf <<6)|((_fba &0x03)<<4)|(_bdfc <<1)|_dfb ;};func (_cc *GenericRefinementRegion )GetRegionBitmap ()(*_gg .Bitmap ,error ){var _dgb error ;
_be .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _dgb !=nil {_be .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0047\u0065\u0074R\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006dap\u0020\u0066a\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_dgb );
}else {_be .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _cc .RegionBitmap !=nil {return _cc .RegionBitmap ,nil ;};_fd :=0;if _cc .ReferenceBitmap ==nil {_cc .ReferenceBitmap ,_dgb =_cc .getGrReference ();if _dgb !=nil {return nil ,_dgb ;};};if _cc ._gb ==nil {_cc ._gb ,_dgb =_eac .New (_cc ._ag );if _dgb !=nil {return nil ,_dgb ;
};};if _cc ._ef ==nil {_cc ._ef =_eac .NewStats (8192,1);};_cc .RegionBitmap =_gg .New (int (_cc .RegionInfo .BitmapWidth ),int (_cc .RegionInfo .BitmapHeight ));if _cc .TemplateID ==0{if _dgb =_cc .updateOverride ();_dgb !=nil {return nil ,_dgb ;};};_bb :=(_cc .RegionBitmap .Width +7)&-8;
var _baa int ;if _cc .IsTPGROn {_baa =int (-_cc .ReferenceDY )*_cc .ReferenceBitmap .RowStride ;};_ace :=_baa +1;for _dde :=0;_dde < _cc .RegionBitmap .Height ;_dde ++{if _cc .IsTPGROn {_afc ,_cf :=_cc .decodeSLTP ();if _cf !=nil {return nil ,_cf ;};_fd ^=_afc ;
};if _fd ==0{_dgb =_cc .decodeOptimized (_dde ,_cc .RegionBitmap .Width ,_cc .RegionBitmap .RowStride ,_cc .ReferenceBitmap .RowStride ,_bb ,_baa ,_ace );if _dgb !=nil {return nil ,_dgb ;};}else {_dgb =_cc .decodeTypicalPredictedLine (_dde ,_cc .RegionBitmap .Width ,_cc .RegionBitmap .RowStride ,_cc .ReferenceBitmap .RowStride ,_bb ,_baa );
if _dgb !=nil {return nil ,_dgb ;};};};return _cc .RegionBitmap ,nil ;};func (_bdd *Header )writeReferredToSegments (_gadf _dc .BinaryWriter )(_eecf int ,_caea error ){const _gba ="\u0077\u0072\u0069te\u0052\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
var (_bebe uint16 ;_cbed uint32 ;);_dfca :=_bdd .referenceSize ();_abf :=1;_aec :=make ([]byte ,_dfca );for _ ,_ffc :=range _bdd .RTSNumbers {switch _dfca {case 4:_cbed =uint32 (_ffc );_b .BigEndian .PutUint32 (_aec ,_cbed );_abf ,_caea =_gadf .Write (_aec );
if _caea !=nil {return 0,_ac .Wrap (_caea ,_gba ,"u\u0069\u006e\u0074\u0033\u0032\u0020\u0073\u0069\u007a\u0065");};case 2:_bebe =uint16 (_ffc );_b .BigEndian .PutUint16 (_aec ,_bebe );_abf ,_caea =_gadf .Write (_aec );if _caea !=nil {return 0,_ac .Wrap (_caea ,_gba ,"\u0075\u0069\u006e\u0074\u0031\u0036");
};default:if _caea =_gadf .WriteByte (byte (_ffc ));_caea !=nil {return 0,_ac .Wrap (_caea ,_gba ,"\u0075\u0069\u006et\u0038");};};_eecf +=_abf ;};return _eecf ,nil ;};func (_cecf *SymbolDictionary )readRegionFlags ()error {var (_bdda uint64 ;_ffbc int ;
);_ ,_dced :=_cecf ._dbge .ReadBits (3);if _dced !=nil {return _dced ;};_ffbc ,_dced =_cecf ._dbge .ReadBit ();if _dced !=nil {return _dced ;};_cecf .SdrTemplate =int8 (_ffbc );_bdda ,_dced =_cecf ._dbge .ReadBits (2);if _dced !=nil {return _dced ;};_cecf .SdTemplate =int8 (_bdda &0xf);
_ffbc ,_dced =_cecf ._dbge .ReadBit ();if _dced !=nil {return _dced ;};if _ffbc ==1{_cecf ._ffdb =true ;};_ffbc ,_dced =_cecf ._dbge .ReadBit ();if _dced !=nil {return _dced ;};if _ffbc ==1{_cecf ._cbbe =true ;};_ffbc ,_dced =_cecf ._dbge .ReadBit ();if _dced !=nil {return _dced ;
};if _ffbc ==1{_cecf .SdHuffAggInstanceSelection =true ;};_ffbc ,_dced =_cecf ._dbge .ReadBit ();if _dced !=nil {return _dced ;};_cecf .SdHuffBMSizeSelection =int8 (_ffbc );_bdda ,_dced =_cecf ._dbge .ReadBits (2);if _dced !=nil {return _dced ;};_cecf .SdHuffDecodeWidthSelection =int8 (_bdda &0xf);
_bdda ,_dced =_cecf ._dbge .ReadBits (2);if _dced !=nil {return _dced ;};_cecf .SdHuffDecodeHeightSelection =int8 (_bdda &0xf);_ffbc ,_dced =_cecf ._dbge .ReadBit ();if _dced !=nil {return _dced ;};if _ffbc ==1{_cecf .UseRefinementAggregation =true ;};
_ffbc ,_dced =_cecf ._dbge .ReadBit ();if _dced !=nil {return _dced ;};if _ffbc ==1{_cecf .IsHuffmanEncoded =true ;};return nil ;};func (_ggff *SymbolDictionary )checkInput ()error {if _ggff .SdHuffDecodeHeightSelection ==2{_be .Log .Debug ("\u0053\u0079\u006d\u0062\u006fl\u0020\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u0053e\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0070\u0065r\u006d\u0069\u0074\u0074\u0065\u0064",_ggff .SdHuffDecodeHeightSelection );
};if _ggff .SdHuffDecodeWidthSelection ==2{_be .Log .Debug ("\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0057\u0069\u0064t\u0068\u0020\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061l\u0075\u0065\u0020\u006e\u006f\u0074 \u0070\u0065r\u006d\u0069t\u0074e\u0064",_ggff .SdHuffDecodeWidthSelection );
};if _ggff .IsHuffmanEncoded {if _ggff .SdTemplate !=0{_be .Log .Debug ("\u0053\u0044T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e \u0030\u0029",_ggff .SdTemplate );
};if !_ggff .UseRefinementAggregation {if !_ggff .UseRefinementAggregation {if _ggff ._ffdb {_be .Log .Debug ("\u0049\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074ex\u0074\u0052\u0065\u0074\u0061\u0069n\u0065\u0064\u0020\u003d\u0020\u0074\u0072\u0075\u0065\u0020\u0028\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0066\u0061\u006cs\u0065\u0029");
_ggff ._ffdb =false ;};if _ggff ._cbbe {_be .Log .Debug ("\u0069s\u0043\u006fd\u0069\u006e\u0067\u0043o\u006e\u0074\u0065x\u0074\u0055\u0073\u0065\u0064\u0020\u003d\u0020\u0074ru\u0065\u0020\u0028s\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020f\u0061\u006cs\u0065\u0029");
_ggff ._cbbe =false ;};};};}else {if _ggff .SdHuffBMSizeSelection !=0{_be .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066B\u004d\u0053\u0069\u007a\u0065\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_ggff .SdHuffBMSizeSelection =0;};if _ggff .SdHuffDecodeWidthSelection !=0{_be .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068\u0053\u0065\u006c\u0065\u0063\u0074\u0069o\u006e\u0020\u0073\u0068\u006fu\u006c\u0064 \u0062\u0065\u0020\u0030");
_ggff .SdHuffDecodeWidthSelection =0;};if _ggff .SdHuffDecodeHeightSelection !=0{_be .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0048e\u0069\u0067\u0068\u0074\u0053\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_ggff .SdHuffDecodeHeightSelection =0;};};if !_ggff .UseRefinementAggregation {if _ggff .SdrTemplate !=0{_be .Log .Debug ("\u0053\u0044\u0052\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u003d\u0020\u0025\u0064\u0020\u0028s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_ggff .SdrTemplate );
_ggff .SdrTemplate =0;};};if !_ggff .IsHuffmanEncoded ||!_ggff .UseRefinementAggregation {if _ggff .SdHuffAggInstanceSelection {_be .Log .Debug ("\u0053d\u0048\u0075f\u0066\u0041\u0067g\u0049\u006e\u0073\u0074\u0061\u006e\u0063e\u0053\u0065\u006c\u0065\u0063\u0074i\u006f\u006e\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_ggff .SdHuffAggInstanceSelection );
};};return nil ;};func (_effad *SymbolDictionary )setInSyms ()error {if _effad .Header .RTSegments !=nil {return _effad .retrieveImportSymbols ();};_effad ._aefe =make ([]*_gg .Bitmap ,0);return nil ;};func (_gad *Header )readSegmentPageAssociation (_bfee Documenter ,_bfgc _dc .StreamReader ,_fage uint64 ,_dacd ...int )(_eeca error ){const _fagb ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074P\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061t\u0069\u006f\u006e";
if !_gad .PageAssociationFieldSize {_edgf ,_eebec :=_bfgc .ReadBits (8);if _eebec !=nil {return _ac .Wrap (_eebec ,_fagb ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_gad .PageAssociation =int (_edgf &0xFF);}else {_dcgf ,_aeagc :=_bfgc .ReadBits (32);
if _aeagc !=nil {return _ac .Wrap (_aeagc ,_fagb ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_gad .PageAssociation =int (_dcgf &_f .MaxInt32 );};if _fage ==0{return nil ;};if _gad .PageAssociation !=0{_gbdba ,_becfb :=_bfee .GetPage (_gad .PageAssociation );
if _becfb !=nil {return _ac .Wrap (_becfb ,_fagb ,"\u0061s\u0073\u006f\u0063\u0069a\u0074\u0065\u0064\u0020\u0070a\u0067e\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006ed");};var _ada int ;for _adac :=uint64 (0);_adac < _fage ;_adac ++{_ada =_dacd [_adac ];
_gad .RTSegments [_adac ],_becfb =_gbdba .GetSegment (_ada );if _becfb !=nil {var _gcbfa error ;_gad .RTSegments [_adac ],_gcbfa =_bfee .GetGlobalSegment (_ada );if _gcbfa !=nil {return _ac .Wrapf (_becfb ,_fagb ,"\u0072\u0065\u0066\u0065\u0072\u0065n\u0063\u0065\u0020s\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064\u0020\u0061\u0074\u0020pa\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0072\u0020\u0069\u006e\u0020\u0067\u006c\u006f\u0062\u0061\u006c\u0073",_gad .PageAssociation );
};};};return nil ;};for _fagg :=uint64 (0);_fagg < _fage ;_fagg ++{_gad .RTSegments [_fagg ],_eeca =_bfee .GetGlobalSegment (_dacd [_fagg ]);if _eeca !=nil {return _ac .Wrapf (_eeca ,_fagb ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u003a\u0020\u0027\u0025d\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064",_dacd [_fagg ]);
};};return nil ;};func (_bgag *HalftoneRegion )computeX (_gfad ,_fgeb int )int {return _bgag .shiftAndFill (int (_bgag .HGridX )+_gfad *int (_bgag .HRegionY )+_fgeb *int (_bgag .HRegionX ));};func (_bffc *TextRegion )decodeStripT ()(_bccfc int64 ,_cdfd error ){if _bffc .IsHuffmanEncoded {if _bffc .SbHuffDT ==3{if _bffc ._fcbed ==nil {var _cebb int ;
if _bffc .SbHuffFS ==3{_cebb ++;};if _bffc .SbHuffDS ==3{_cebb ++;};_bffc ._fcbed ,_cdfd =_bffc .getUserTable (_cebb );if _cdfd !=nil {return 0,_cdfd ;};};_bccfc ,_cdfd =_bffc ._fcbed .Decode (_bffc ._dcedc );if _cdfd !=nil {return 0,_cdfd ;};}else {var _gee _dd .Tabler ;
_gee ,_cdfd =_dd .GetStandardTable (11+int (_bffc .SbHuffDT ));if _cdfd !=nil {return 0,_cdfd ;};_bccfc ,_cdfd =_gee .Decode (_bffc ._dcedc );if _cdfd !=nil {return 0,_cdfd ;};};}else {var _agcb int32 ;_agcb ,_cdfd =_bffc ._fgbe .DecodeInt (_bffc ._ceefd );
if _cdfd !=nil {return 0,_cdfd ;};_bccfc =int64 (_agcb );};_bccfc *=int64 (-_bffc .SbStrips );return _bccfc ,nil ;};func (_ccgd *Header )referenceSize ()uint {switch {case _ccgd .SegmentNumber <=255:return 1;case _ccgd .SegmentNumber <=65535:return 2;default:return 4;
};};func (_caee *RegionSegment )Encode (w _dc .BinaryWriter )(_ddee int ,_aedc error ){const _cacfd ="R\u0065g\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065n\u0074\u002e\u0045\u006eco\u0064\u0065";_fgcfg :=make ([]byte ,4);_b .BigEndian .PutUint32 (_fgcfg ,_caee .BitmapWidth );
_ddee ,_aedc =w .Write (_fgcfg );if _aedc !=nil {return 0,_ac .Wrap (_aedc ,_cacfd ,"\u0057\u0069\u0064t\u0068");};_b .BigEndian .PutUint32 (_fgcfg ,_caee .BitmapHeight );var _efgbe int ;_efgbe ,_aedc =w .Write (_fgcfg );if _aedc !=nil {return 0,_ac .Wrap (_aedc ,_cacfd ,"\u0048\u0065\u0069\u0067\u0068\u0074");
};_ddee +=_efgbe ;_b .BigEndian .PutUint32 (_fgcfg ,_caee .XLocation );_efgbe ,_aedc =w .Write (_fgcfg );if _aedc !=nil {return 0,_ac .Wrap (_aedc ,_cacfd ,"\u0058L\u006f\u0063\u0061\u0074\u0069\u006fn");};_ddee +=_efgbe ;_b .BigEndian .PutUint32 (_fgcfg ,_caee .YLocation );
_efgbe ,_aedc =w .Write (_fgcfg );if _aedc !=nil {return 0,_ac .Wrap (_aedc ,_cacfd ,"\u0059L\u006f\u0063\u0061\u0074\u0069\u006fn");};_ddee +=_efgbe ;if _aedc =w .WriteByte (byte (_caee .CombinaionOperator )&0x07);_aedc !=nil {return 0,_ac .Wrap (_aedc ,_cacfd ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");
};_ddee ++;return _ddee ,nil ;};func (_gge *EndOfStripe )LineNumber ()int {return _gge ._db };func (_beg *GenericRefinementRegion )decodeOptimized (_fe ,_geb ,_bee ,_gbd ,_fgc ,_bba ,_ecf int )error {var (_dbd error ;_cd int ;_ddg int ;);_afcd :=_fe -int (_beg .ReferenceDY );
if _ad :=int (-_beg .ReferenceDX );_ad > 0{_cd =_ad ;};_cdf :=_beg .ReferenceBitmap .GetByteIndex (_cd ,_afcd );if _beg .ReferenceDX > 0{_ddg =int (_beg .ReferenceDX );};_age :=_beg .RegionBitmap .GetByteIndex (_ddg ,_fe );switch _beg .TemplateID {case 0:_dbd =_beg .decodeTemplate (_fe ,_geb ,_bee ,_gbd ,_fgc ,_bba ,_ecf ,_age ,_afcd ,_cdf ,_beg ._bg );
case 1:_dbd =_beg .decodeTemplate (_fe ,_geb ,_bee ,_gbd ,_fgc ,_bba ,_ecf ,_age ,_afcd ,_cdf ,_beg ._cb );};return _dbd ;};func (_cgcea *SymbolDictionary )setRefinementAtPixels ()error {if !_cgcea .UseRefinementAggregation ||_cgcea .SdrTemplate !=0{return nil ;
};if _bfdf :=_cgcea .readRefinementAtPixels (2);_bfdf !=nil {return _bfdf ;};return nil ;};var _ templater =&template0 {};func (_fde *Header )String ()string {_face :=&_g .Builder {};_face .WriteString ("\u000a[\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045A\u0044\u0045\u0052\u005d\u000a");
_face .WriteString (_d .Sprintf ("\t\u002d\u0020\u0053\u0065gm\u0065n\u0074\u004e\u0075\u006d\u0062e\u0072\u003a\u0020\u0025\u0076\u000a",_fde .SegmentNumber ));_face .WriteString (_d .Sprintf ("\u0009\u002d\u0020T\u0079\u0070\u0065\u003a\u0020\u0025\u0076\u000a",_fde .Type ));
_face .WriteString (_d .Sprintf ("\u0009-\u0020R\u0065\u0074\u0061\u0069\u006eF\u006c\u0061g\u003a\u0020\u0025\u0076\u000a",_fde .RetainFlag ));_face .WriteString (_d .Sprintf ("\u0009\u002d\u0020Pa\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_fde .PageAssociation ));
_face .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0050\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074i\u006fn\u0046\u0069\u0065\u006c\u0064\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_fde .PageAssociationFieldSize ));
_face .WriteString ("\u0009-\u0020R\u0054\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u0053\u003a\u000a");for _ ,_adbcg :=range _fde .RTSNumbers {_face .WriteString (_d .Sprintf ("\u0009\t\u002d\u0020\u0025\u0064\u000a",_adbcg ));};_face .WriteString (_d .Sprintf ("\t\u002d \u0048\u0065\u0061\u0064\u0065\u0072\u004c\u0065n\u0067\u0074\u0068\u003a %\u0076\u000a",_fde .HeaderLength ));
_face .WriteString (_d .Sprintf ("\u0009-\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061L\u0065n\u0067\u0074\u0068\u003a\u0020\u0025\u0076\n",_fde .SegmentDataLength ));_face .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074D\u0061\u0074\u0061\u0053\u0074\u0061\u0072t\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0076\u000a",_fde .SegmentDataStartOffset ));
return _face .String ();};func (_fdggd *TextRegion )setContexts (_aagg *_eac .DecoderStats ,_aceb *_eac .DecoderStats ,_becbg *_eac .DecoderStats ,_gdaf *_eac .DecoderStats ,_cccf *_eac .DecoderStats ,_aaeb *_eac .DecoderStats ,_ecbde *_eac .DecoderStats ,_aada *_eac .DecoderStats ,_agef *_eac .DecoderStats ,_fcfa *_eac .DecoderStats ){_fdggd ._ceefd =_aceb ;
_fdggd ._aaadc =_becbg ;_fdggd ._eefc =_gdaf ;_fdggd ._gdeg =_cccf ;_fdggd ._ddgdd =_ecbde ;_fdggd ._aaaf =_aada ;_fdggd ._egce =_aaeb ;_fdggd ._effgc =_agef ;_fdggd ._faga =_fcfa ;_fdggd ._cace =_aagg ;};func (_gebac *TextRegion )readHuffmanFlags ()error {var (_fadfd int ;
_eegb uint64 ;_dbaef error ;);_ ,_dbaef =_gebac ._dcedc .ReadBit ();if _dbaef !=nil {return _dbaef ;};_fadfd ,_dbaef =_gebac ._dcedc .ReadBit ();if _dbaef !=nil {return _dbaef ;};_gebac .SbHuffRSize =int8 (_fadfd );_eegb ,_dbaef =_gebac ._dcedc .ReadBits (2);
if _dbaef !=nil {return _dbaef ;};_gebac .SbHuffRDY =int8 (_eegb )&0xf;_eegb ,_dbaef =_gebac ._dcedc .ReadBits (2);if _dbaef !=nil {return _dbaef ;};_gebac .SbHuffRDX =int8 (_eegb )&0xf;_eegb ,_dbaef =_gebac ._dcedc .ReadBits (2);if _dbaef !=nil {return _dbaef ;
};_gebac .SbHuffRDHeight =int8 (_eegb )&0xf;_eegb ,_dbaef =_gebac ._dcedc .ReadBits (2);if _dbaef !=nil {return _dbaef ;};_gebac .SbHuffRDWidth =int8 (_eegb )&0xf;_eegb ,_dbaef =_gebac ._dcedc .ReadBits (2);if _dbaef !=nil {return _dbaef ;};_gebac .SbHuffDT =int8 (_eegb )&0xf;
_eegb ,_dbaef =_gebac ._dcedc .ReadBits (2);if _dbaef !=nil {return _dbaef ;};_gebac .SbHuffDS =int8 (_eegb )&0xf;_eegb ,_dbaef =_gebac ._dcedc .ReadBits (2);if _dbaef !=nil {return _dbaef ;};_gebac .SbHuffFS =int8 (_eegb )&0xf;return nil ;};var _ _dd .BasicTabler =&TableSegment {};
func (_ceccc *HalftoneRegion )grayScaleDecoding (_fbfb int )([][]int ,error ){var (_ddbf []int8 ;_becf []int8 ;);if !_ceccc .IsMMREncoded {_ddbf =make ([]int8 ,4);_becf =make ([]int8 ,4);if _ceccc .HTemplate <=1{_ddbf [0]=3;}else if _ceccc .HTemplate >=2{_ddbf [0]=2;
};_becf [0]=-1;_ddbf [1]=-3;_becf [1]=-1;_ddbf [2]=2;_becf [2]=-2;_ddbf [3]=-2;_becf [3]=-2;};_bgb :=make ([]*_gg .Bitmap ,_fbfb );_agg :=NewGenericRegion (_ceccc ._fegg );_agg .setParametersMMR (_ceccc .IsMMREncoded ,_ceccc .DataOffset ,_ceccc .DataLength ,_ceccc .HGridHeight ,_ceccc .HGridWidth ,_ceccc .HTemplate ,false ,_ceccc .HSkipEnabled ,_ddbf ,_becf );
_ecga :=_fbfb -1;var _gebf error ;_bgb [_ecga ],_gebf =_agg .GetRegionBitmap ();if _gebf !=nil {return nil ,_gebf ;};for _ecga > 0{_ecga --;_agg .Bitmap =nil ;_bgb [_ecga ],_gebf =_agg .GetRegionBitmap ();if _gebf !=nil {return nil ,_gebf ;};if _gebf =_ceccc .combineGrayscalePlanes (_bgb ,_ecga );
_gebf !=nil {return nil ,_gebf ;};};return _ceccc .computeGrayScalePlanes (_bgb ,_fbfb );};func (_bfcb *TextRegion )decodeSymbolInstances ()error {_aafb ,_bdca :=_bfcb .decodeStripT ();if _bdca !=nil {return _bdca ;};var (_bfcbf int64 ;_gagf uint32 ;);
for _gagf < _bfcb .NumberOfSymbolInstances {_daef ,_fefa :=_bfcb .decodeDT ();if _fefa !=nil {return _fefa ;};_aafb +=_daef ;var _dccf int64 ;_bedg :=true ;_bfcb ._bdcb =0;for {if _bedg {_dccf ,_fefa =_bfcb .decodeDfs ();if _fefa !=nil {return _fefa ;};
_bfcbf +=_dccf ;_bfcb ._bdcb =_bfcbf ;_bedg =false ;}else {_bbcg ,_dede :=_bfcb .decodeIds ();if _ba .Is (_dede ,_gd .ErrOOB ){break ;};if _dede !=nil {return _dede ;};if _gagf >=_bfcb .NumberOfSymbolInstances {break ;};_bfcb ._bdcb +=_bbcg +int64 (_bfcb .SbDsOffset );
};_gbede ,_dgcf :=_bfcb .decodeCurrentT ();if _dgcf !=nil {return _dgcf ;};_eefg :=_aafb +_gbede ;_cfga ,_dgcf :=_bfcb .decodeID ();if _dgcf !=nil {return _dgcf ;};_defb ,_dgcf :=_bfcb .decodeRI ();if _dgcf !=nil {return _dgcf ;};_aadb ,_dgcf :=_bfcb .decodeIb (_defb ,_cfga );
if _dgcf !=nil {return _dgcf ;};if _dgcf =_bfcb .blit (_aadb ,_eefg );_dgcf !=nil {return _dgcf ;};_gagf ++;};};return nil ;};func (_gbdcg *TextRegion )decodeRI ()(int64 ,error ){if !_gbdcg .UseRefinement {return 0,nil ;};if _gbdcg .IsHuffmanEncoded {_gaag ,_fggf :=_gbdcg ._dcedc .ReadBit ();
return int64 (_gaag ),_fggf ;};_afbbg ,_gdaab :=_gbdcg ._fgbe .DecodeInt (_gbdcg ._bdaa );return int64 (_afbbg ),_gdaab ;};func (_cefb *PatternDictionary )GetDictionary ()([]*_gg .Bitmap ,error ){if _cefb .Patterns !=nil {return _cefb .Patterns ,nil ;};
if !_cefb .IsMMREncoded {_cefb .setGbAtPixels ();};_gedbd :=NewGenericRegion (_cefb ._feea );_gedbd .setParametersMMR (_cefb .IsMMREncoded ,_cefb .DataOffset ,_cefb .DataLength ,uint32 (_cefb .HdpHeight ),(_cefb .GrayMax +1)*uint32 (_cefb .HdpWidth ),_cefb .HDTemplate ,false ,false ,_cefb .GBAtX ,_cefb .GBAtY );
_efgb ,_eeff :=_gedbd .GetRegionBitmap ();if _eeff !=nil {return nil ,_eeff ;};if _eeff =_cefb .extractPatterns (_efgb );_eeff !=nil {return nil ,_eeff ;};return _cefb .Patterns ,nil ;};func (_cgda *PageInformationSegment )readCombinationOperator ()error {_gac ,_dbcc :=_cgda ._agdg .ReadBits (2);
if _dbcc !=nil {return _dbcc ;};_cgda ._feef =_gg .CombinationOperator (int (_gac ));return nil ;};func (_cbcb *GenericRegion )InitEncode (bm *_gg .Bitmap ,xLoc ,yLoc ,template int ,duplicateLineRemoval bool )error {const _ebd ="\u0047e\u006e\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069\u006f\u006e.\u0049\u006e\u0069\u0074\u0045\u006e\u0063\u006f\u0064\u0065";
if bm ==nil {return _ac .Error (_ebd ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if xLoc < 0||yLoc < 0{return _ac .Error (_ebd ,"\u0078\u0020\u0061\u006e\u0064\u0020\u0079\u0020\u006c\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074h\u0061\u006e\u0020\u0030");
};_cbcb .Bitmap =bm ;_cbcb .GBTemplate =byte (template );switch _cbcb .GBTemplate {case 0:_cbcb .GBAtX =[]int8 {3,-3,2,-2};_cbcb .GBAtY =[]int8 {-1,-1,-2,-2};case 1:_cbcb .GBAtX =[]int8 {3};_cbcb .GBAtY =[]int8 {-1};case 2,3:_cbcb .GBAtX =[]int8 {2};_cbcb .GBAtY =[]int8 {-1};
default:return _ac .Errorf (_ebd ,"\u0070\u0072o\u0076\u0069\u0064\u0065\u0064 \u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u007b\u0030\u002c\u0031\u002c\u0032\u002c\u0033\u007d",template );
};_cbcb .RegionSegment =&RegionSegment {BitmapHeight :uint32 (bm .Height ),BitmapWidth :uint32 (bm .Width ),XLocation :uint32 (xLoc ),YLocation :uint32 (yLoc )};_cbcb .IsTPGDon =duplicateLineRemoval ;return nil ;};func (_efdfd *SymbolDictionary )decodeThroughTextRegion (_afad ,_aggb ,_afcg uint32 )error {if _efdfd ._bbffd ==nil {_efdfd ._bbffd =_fabg (_efdfd ._dbge ,nil );
_efdfd ._bbffd .setContexts (_efdfd ._gdea ,_eac .NewStats (512,1),_eac .NewStats (512,1),_eac .NewStats (512,1),_eac .NewStats (512,1),_efdfd ._cffd ,_eac .NewStats (512,1),_eac .NewStats (512,1),_eac .NewStats (512,1),_eac .NewStats (512,1));};if _gffd :=_efdfd .setSymbolsArray ();
_gffd !=nil {return _gffd ;};_efdfd ._bbffd .setParameters (_efdfd ._aaad ,_efdfd .IsHuffmanEncoded ,true ,_afad ,_aggb ,_afcg ,1,_efdfd ._bgcfb +_efdfd ._bgdb ,0,0,0,1,0,0,0,0,0,0,0,0,0,_efdfd .SdrTemplate ,_efdfd .SdrATX ,_efdfd .SdrATY ,_efdfd ._gadb ,_efdfd ._ceb );
return _efdfd .addSymbol (_efdfd ._bbffd );};func (_bbed *SymbolDictionary )encodeRefinementATFlags (_ecfc _dc .BinaryWriter )(_fdde int ,_fadc error ){const _gggf ="\u0065\u006e\u0063od\u0065\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0041\u0054\u0046\u006c\u0061\u0067\u0073";
if !_bbed .UseRefinementAggregation ||_bbed .SdrTemplate !=0{return 0,nil ;};for _gccd :=0;_gccd < 2;_gccd ++{if _fadc =_ecfc .WriteByte (byte (_bbed .SdrATX [_gccd ]));_fadc !=nil {return _fdde ,_ac .Wrapf (_fadc ,_gggf ,"\u0053\u0064\u0072\u0041\u0054\u0058\u005b\u0025\u0064\u005d",_gccd );
};_fdde ++;if _fadc =_ecfc .WriteByte (byte (_bbed .SdrATY [_gccd ]));_fadc !=nil {return _fdde ,_ac .Wrapf (_fadc ,_gggf ,"\u0053\u0064\u0072\u0041\u0054\u0059\u005b\u0025\u0064\u005d",_gccd );};_fdde ++;};return _fdde ,nil ;};func (_fbdg *TextRegion )blit (_bgeg *_gg .Bitmap ,_gdca int64 )error {if _fbdg .IsTransposed ==0&&(_fbdg .ReferenceCorner ==2||_fbdg .ReferenceCorner ==3){_fbdg ._bdcb +=int64 (_bgeg .Width -1);
}else if _fbdg .IsTransposed ==1&&(_fbdg .ReferenceCorner ==0||_fbdg .ReferenceCorner ==2){_fbdg ._bdcb +=int64 (_bgeg .Height -1);};_fcgg :=_fbdg ._bdcb ;if _fbdg .IsTransposed ==1{_fcgg ,_gdca =_gdca ,_fcgg ;};switch _fbdg .ReferenceCorner {case 0:_gdca -=int64 (_bgeg .Height -1);
case 2:_gdca -=int64 (_bgeg .Height -1);_fcgg -=int64 (_bgeg .Width -1);case 3:_fcgg -=int64 (_bgeg .Width -1);};_cbgf :=_gg .Blit (_bgeg ,_fbdg .RegionBitmap ,int (_fcgg ),int (_gdca ),_fbdg .CombinationOperator );if _cbgf !=nil {return _cbgf ;};if _fbdg .IsTransposed ==0&&(_fbdg .ReferenceCorner ==0||_fbdg .ReferenceCorner ==1){_fbdg ._bdcb +=int64 (_bgeg .Width -1);
};if _fbdg .IsTransposed ==1&&(_fbdg .ReferenceCorner ==1||_fbdg .ReferenceCorner ==3){_fbdg ._bdcb +=int64 (_bgeg .Height -1);};return nil ;};func _cccd (_fbgc int )int {if _fbgc ==0{return 0;};_fbgc |=_fbgc >>1;_fbgc |=_fbgc >>2;_fbgc |=_fbgc >>4;_fbgc |=_fbgc >>8;
_fbgc |=_fbgc >>16;return (_fbgc +1)>>1;};func (_adgc *Header )writeFlags (_faba _dc .BinaryWriter )(_cefd error ){const _adde ="\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065F\u006c\u0061\u0067\u0073";_cggc :=byte (_adgc .Type );
if _cefd =_faba .WriteByte (_cggc );_cefd !=nil {return _ac .Wrap (_cefd ,_adde ,"\u0077\u0072\u0069ti\u006e\u0067\u0020\u0073\u0065\u0067\u006d\u0065\u006et\u0020t\u0079p\u0065 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};if !_adgc .RetainFlag &&!_adgc .PageAssociationFieldSize {return nil ;};if _cefd =_faba .SkipBits (-8);_cefd !=nil {return _ac .Wrap (_cefd ,_adde ,"\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0062\u0061\u0063\u006b\u0020\u0074\u0068\u0065\u0020\u0062\u0069\u0074\u0073\u0020\u0066\u0061il\u0065\u0064");
};var _fdab int ;if _adgc .RetainFlag {_fdab =1;};if _cefd =_faba .WriteBit (_fdab );_cefd !=nil {return _ac .Wrap (_cefd ,_adde ,"\u0072\u0065\u0074\u0061in\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067\u0073");};_fdab =0;if _adgc .PageAssociationFieldSize {_fdab =1;
};if _cefd =_faba .WriteBit (_fdab );_cefd !=nil {return _ac .Wrap (_cefd ,_adde ,"p\u0061\u0067\u0065\u0020as\u0073o\u0063\u0069\u0061\u0074\u0069o\u006e\u0020\u0066\u006c\u0061\u0067");};_faba .FinishByte ();return nil ;};type HalftoneRegion struct{_fegg _dc .StreamReader ;
_edga *Header ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;HDefaultPixel int8 ;CombinationOperator _gg .CombinationOperator ;HSkipEnabled bool ;HTemplate byte ;IsMMREncoded bool ;HGridWidth uint32 ;
HGridHeight uint32 ;HGridX int32 ;HGridY int32 ;HRegionX uint16 ;HRegionY uint16 ;HalftoneRegionBitmap *_gg .Bitmap ;Patterns []*_gg .Bitmap ;};func (_beba *PatternDictionary )readPatternWidthAndHeight ()error {_aece ,_fegac :=_beba ._feea .ReadByte ();
if _fegac !=nil {return _fegac ;};_beba .HdpWidth =_aece ;_aece ,_fegac =_beba ._feea .ReadByte ();if _fegac !=nil {return _fegac ;};_beba .HdpHeight =_aece ;return nil ;};func (_gbeg *Header )writeSegmentDataLength (_fee _dc .BinaryWriter )(_gcbg int ,_dbce error ){_dcce :=make ([]byte ,4);
_b .BigEndian .PutUint32 (_dcce ,uint32 (_gbeg .SegmentDataLength ));if _gcbg ,_dbce =_fee .Write (_dcce );_dbce !=nil {return 0,_ac .Wrap (_dbce ,"\u0048\u0065a\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u004c\u0065ng\u0074\u0068","");
};return _gcbg ,nil ;};func (_ggaf *Header )Encode (w _dc .BinaryWriter )(_gcbf int ,_adca error ){const _cdcg ="\u0048\u0065\u0061d\u0065\u0072\u002e\u0057\u0072\u0069\u0074\u0065";var _ebda _dc .BinaryWriter ;_be .Log .Trace ("\u005b\u0053\u0045G\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045\u0052\u005d[\u0045\u004e\u0043\u004f\u0044\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");
defer func (){if _adca !=nil {_be .Log .Trace ("[\u0053\u0045\u0047\u004d\u0045\u004eT\u002d\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0045\u004e\u0043\u004f\u0044E\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020%\u0076",_adca );}else {_be .Log .Trace ("\u005b\u0053\u0045\u0047ME\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0025\u0076",_ggaf );
_be .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045N\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u005b\u0045\u004e\u0043O\u0044\u0045\u005d\u0020\u0046\u0069\u006ei\u0073\u0068\u0065\u0064");};}();w .FinishByte ();if _ggaf .SegmentData !=nil {_gaac ,_fadag :=_ggaf .SegmentData .(SegmentEncoder );
if !_fadag {return 0,_ac .Errorf (_cdcg ,"\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0064\u006f\u0065s\u006e\u0027\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074 \u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0045\u006e\u0063\u006f\u0064er\u0020\u0069\u006e\u0074\u0065\u0072\u0066\u0061\u0063\u0065",_ggaf .SegmentData );
};_ebda =_dc .BufferedMSB ();_gcbf ,_adca =_gaac .Encode (_ebda );if _adca !=nil {return 0,_ac .Wrap (_adca ,_cdcg ,"");};_ggaf .SegmentDataLength =uint64 (_gcbf );};if _ggaf .pageSize ()==4{_ggaf .PageAssociationFieldSize =true ;};var _bgbg int ;_bgbg ,_adca =_ggaf .writeSegmentNumber (w );
if _adca !=nil {return 0,_ac .Wrap (_adca ,_cdcg ,"");};_gcbf +=_bgbg ;if _adca =_ggaf .writeFlags (w );_adca !=nil {return _gcbf ,_ac .Wrap (_adca ,_cdcg ,"");};_gcbf ++;_bgbg ,_adca =_ggaf .writeReferredToCount (w );if _adca !=nil {return 0,_ac .Wrap (_adca ,_cdcg ,"");
};_gcbf +=_bgbg ;_bgbg ,_adca =_ggaf .writeReferredToSegments (w );if _adca !=nil {return 0,_ac .Wrap (_adca ,_cdcg ,"");};_gcbf +=_bgbg ;_bgbg ,_adca =_ggaf .writeSegmentPageAssociation (w );if _adca !=nil {return 0,_ac .Wrap (_adca ,_cdcg ,"");};_gcbf +=_bgbg ;
_bgbg ,_adca =_ggaf .writeSegmentDataLength (w );if _adca !=nil {return 0,_ac .Wrap (_adca ,_cdcg ,"");};_gcbf +=_bgbg ;_ggaf .HeaderLength =int64 (_gcbf )-int64 (_ggaf .SegmentDataLength );if _ebda !=nil {if _ ,_adca =w .Write (_ebda .Data ());_adca !=nil {return _gcbf ,_ac .Wrap (_adca ,_cdcg ,"\u0077r\u0069t\u0065\u0020\u0073\u0065\u0067m\u0065\u006et\u0020\u0064\u0061\u0074\u0061");
};};return _gcbf ,nil ;};func (_ffee *SymbolDictionary )Init (h *Header ,r _dc .StreamReader )error {_ffee .Header =h ;_ffee ._dbge =r ;return _ffee .parseHeader ();};func (_acbe *TextRegion )computeSymbolCodeLength ()error {if _acbe .IsHuffmanEncoded {return _acbe .symbolIDCodeLengths ();
};_acbe ._fddg =int8 (_f .Ceil (_f .Log (float64 (_acbe .NumberOfSymbols ))/_f .Log (2)));return nil ;};func (_edbc *HalftoneRegion )shiftAndFill (_gaee int )int {_gaee >>=8;if _gaee < 0{_agfe :=int (_f .Log (float64 (_cccd (_gaee )))/_f .Log (2));_fbb :=31-_agfe ;
for _eebd :=1;_eebd < _fbb ;_eebd ++{_gaee |=1<<uint (31-_eebd );};};return _gaee ;};func (_efgcf *SymbolDictionary )decodeHeightClassDeltaHeight ()(int64 ,error ){if _efgcf .IsHuffmanEncoded {return _efgcf .decodeHeightClassDeltaHeightWithHuffman ();};
_acge ,_ecac :=_efgcf ._aaad .DecodeInt (_efgcf ._bbee );if _ecac !=nil {return 0,_ecac ;};return int64 (_acge ),nil ;};func (_bcfg *TextRegion )decodeRdx ()(int64 ,error ){const _deaf ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064x";if _bcfg .IsHuffmanEncoded {if _bcfg .SbHuffRDX ==3{if _bcfg ._gfbb ==nil {var (_adab int ;
_gbg error ;);if _bcfg .SbHuffFS ==3{_adab ++;};if _bcfg .SbHuffDS ==3{_adab ++;};if _bcfg .SbHuffDT ==3{_adab ++;};if _bcfg .SbHuffRDWidth ==3{_adab ++;};if _bcfg .SbHuffRDHeight ==3{_adab ++;};_bcfg ._gfbb ,_gbg =_bcfg .getUserTable (_adab );if _gbg !=nil {return 0,_ac .Wrap (_gbg ,_deaf ,"");
};};return _bcfg ._gfbb .Decode (_bcfg ._dcedc );};_ddag ,_bead :=_dd .GetStandardTable (14+int (_bcfg .SbHuffRDX ));if _bead !=nil {return 0,_ac .Wrap (_bead ,_deaf ,"");};return _ddag .Decode (_bcfg ._dcedc );};_bbdb ,_bfbdc :=_bcfg ._fgbe .DecodeInt (_bcfg ._effgc );
if _bfbdc !=nil {return 0,_ac .Wrap (_bfbdc ,_deaf ,"");};return int64 (_bbdb ),nil ;};func (_gebe *SymbolDictionary )getSbSymCodeLen ()int8 {_gdccg :=int8 (_f .Ceil (_f .Log (float64 (_gebe ._bgcfb +_gebe .NumberOfNewSymbols ))/_f .Log (2)));if _gebe .IsHuffmanEncoded &&_gdccg < 1{return 1;
};return _gdccg ;};func (_gcg *SymbolDictionary )GetDictionary ()([]*_gg .Bitmap ,error ){_be .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c-\u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){_be .Log .Trace ("\u005b\u0053\u0059M\u0042\u004f\u004c\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
_be .Log .Trace ("\u005b\u0053Y\u004d\u0042\u004f\u004c\u002dD\u0049\u0043\u0054\u0049\u004fN\u0041\u0052\u0059\u005d\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020\u000a\u0045\u0078\u003a\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u000a\u006e\u0065\u0077\u003a\u0027\u0025\u0073\u0027",_gcg ._ffac ,_gcg ._dfgg );
}();if _gcg ._ffac ==nil {var _bdfd error ;if _gcg .UseRefinementAggregation {_gcg ._ceb =_gcg .getSbSymCodeLen ();};if !_gcg .IsHuffmanEncoded {if _bdfd =_gcg .setCodingStatistics ();_bdfd !=nil {return nil ,_bdfd ;};};_gcg ._dfgg =make ([]*_gg .Bitmap ,_gcg .NumberOfNewSymbols );
var _fffc []int ;if _gcg .IsHuffmanEncoded &&!_gcg .UseRefinementAggregation {_fffc =make ([]int ,_gcg .NumberOfNewSymbols );};if _bdfd =_gcg .setSymbolsArray ();_bdfd !=nil {return nil ,_bdfd ;};var _bcffb ,_eada int64 ;_gcg ._bgdb =0;for _gcg ._bgdb < _gcg .NumberOfNewSymbols {_eada ,_bdfd =_gcg .decodeHeightClassDeltaHeight ();
if _bdfd !=nil {return nil ,_bdfd ;};_bcffb +=_eada ;var _gafea ,_gbde uint32 ;_ageg :=int64 (_gcg ._bgdb );for {var _cgcg int64 ;_cgcg ,_bdfd =_gcg .decodeDifferenceWidth ();if _ba .Is (_bdfd ,_gd .ErrOOB ){break ;};if _bdfd !=nil {return nil ,_bdfd ;
};if _gcg ._bgdb >=_gcg .NumberOfNewSymbols {break ;};_gafea +=uint32 (_cgcg );_gbde +=_gafea ;if !_gcg .IsHuffmanEncoded ||_gcg .UseRefinementAggregation {if !_gcg .UseRefinementAggregation {_bdfd =_gcg .decodeDirectlyThroughGenericRegion (_gafea ,uint32 (_bcffb ));
if _bdfd !=nil {return nil ,_bdfd ;};}else {_bdfd =_gcg .decodeAggregate (_gafea ,uint32 (_bcffb ));if _bdfd !=nil {return nil ,_bdfd ;};};}else if _gcg .IsHuffmanEncoded &&!_gcg .UseRefinementAggregation {_fffc [_gcg ._bgdb ]=int (_gafea );};_gcg ._bgdb ++;
};if _gcg .IsHuffmanEncoded &&!_gcg .UseRefinementAggregation {var _bbcb int64 ;if _gcg .SdHuffBMSizeSelection ==0{var _adgfb _dd .Tabler ;_adgfb ,_bdfd =_dd .GetStandardTable (1);if _bdfd !=nil {return nil ,_bdfd ;};_bbcb ,_bdfd =_adgfb .Decode (_gcg ._dbge );
if _bdfd !=nil {return nil ,_bdfd ;};}else {_bbcb ,_bdfd =_gcg .huffDecodeBmSize ();if _bdfd !=nil {return nil ,_bdfd ;};};_gcg ._dbge .Align ();var _dfgge *_gg .Bitmap ;_dfgge ,_bdfd =_gcg .decodeHeightClassCollectiveBitmap (_bbcb ,uint32 (_bcffb ),_gbde );
if _bdfd !=nil {return nil ,_bdfd ;};_bdfd =_gcg .decodeHeightClassBitmap (_dfgge ,_ageg ,int (_bcffb ),_fffc );if _bdfd !=nil {return nil ,_bdfd ;};};};_bfd ,_bdfd :=_gcg .getToExportFlags ();if _bdfd !=nil {return nil ,_bdfd ;};_gcg .setExportedSymbols (_bfd );
};return _gcg ._ffac ,nil ;};func (_afec *SymbolDictionary )readAtPixels (_becg int )error {_afec .SdATX =make ([]int8 ,_becg );_afec .SdATY =make ([]int8 ,_becg );var (_fcaf byte ;_fcfd error ;);for _fbee :=0;_fbee < _becg ;_fbee ++{_fcaf ,_fcfd =_afec ._dbge .ReadByte ();
if _fcfd !=nil {return _fcfd ;};_afec .SdATX [_fbee ]=int8 (_fcaf );_fcaf ,_fcfd =_afec ._dbge .ReadByte ();if _fcfd !=nil {return _fcfd ;};_afec .SdATY [_fbee ]=int8 (_fcaf );};return nil ;};func (_gde *PageInformationSegment )readWidthAndHeight ()error {_bcff ,_fega :=_gde ._agdg .ReadBits (32);
if _fega !=nil {return _fega ;};_gde .PageBMWidth =int (_bcff &_f .MaxInt32 );_bcff ,_fega =_gde ._agdg .ReadBits (32);if _fega !=nil {return _fega ;};_gde .PageBMHeight =int (_bcff &_f .MaxInt32 );return nil ;};func (_aage *GenericRegion )overrideAtTemplate0a (_deb ,_dbcb ,_ggg ,_acfc ,_dace ,_efga int )int {if _aage .GBAtOverride [0]{_deb &=0xFFEF;
if _aage .GBAtY [0]==0&&_aage .GBAtX [0]>=-int8 (_dace ){_deb |=(_acfc >>uint (int8 (_efga )-_aage .GBAtX [0]&0x1))<<4;}else {_deb |=int (_aage .getPixel (_dbcb +int (_aage .GBAtX [0]),_ggg +int (_aage .GBAtY [0])))<<4;};};if _aage .GBAtOverride [1]{_deb &=0xFBFF;
if _aage .GBAtY [1]==0&&_aage .GBAtX [1]>=-int8 (_dace ){_deb |=(_acfc >>uint (int8 (_efga )-_aage .GBAtX [1]&0x1))<<10;}else {_deb |=int (_aage .getPixel (_dbcb +int (_aage .GBAtX [1]),_ggg +int (_aage .GBAtY [1])))<<10;};};if _aage .GBAtOverride [2]{_deb &=0xF7FF;
if _aage .GBAtY [2]==0&&_aage .GBAtX [2]>=-int8 (_dace ){_deb |=(_acfc >>uint (int8 (_efga )-_aage .GBAtX [2]&0x1))<<11;}else {_deb |=int (_aage .getPixel (_dbcb +int (_aage .GBAtX [2]),_ggg +int (_aage .GBAtY [2])))<<11;};};if _aage .GBAtOverride [3]{_deb &=0x7FFF;
if _aage .GBAtY [3]==0&&_aage .GBAtX [3]>=-int8 (_dace ){_deb |=(_acfc >>uint (int8 (_efga )-_aage .GBAtX [3]&0x1))<<15;}else {_deb |=int (_aage .getPixel (_dbcb +int (_aage .GBAtX [3]),_ggg +int (_aage .GBAtY [3])))<<15;};};return _deb ;};func (_fdg *template1 )setIndex (_eeg *_eac .DecoderStats ){_eeg .SetIndex (0x080)};
func (_bfdd *TextRegion )GetRegionInfo ()*RegionSegment {return _bfdd .RegionInfo };func (_ecbd *Header )readHeaderLength (_febf _dc .StreamReader ,_fede int64 ){_ecbd .HeaderLength =_febf .StreamPosition ()-_fede ;};func (_fdgg *PageInformationSegment )readContainsRefinement ()error {_abde ,_cddb :=_fdgg ._agdg .ReadBit ();
if _cddb !=nil {return _cddb ;};if _abde ==1{_fdgg ._bage =true ;};return nil ;};func (_dbef *TableSegment )HtHigh ()int32 {return _dbef ._gdcg };func (_acae *GenericRegion )setParametersWithAt (_adc bool ,_ggba byte ,_egdc ,_ggeg bool ,_gbdb ,_bbgf []int8 ,_aeg ,_fac uint32 ,_ffd *_eac .DecoderStats ,_cfd *_eac .Decoder ){_acae .IsMMREncoded =_adc ;
_acae .GBTemplate =_ggba ;_acae .IsTPGDon =_egdc ;_acae .GBAtX =_gbdb ;_acae .GBAtY =_bbgf ;_acae .RegionSegment .BitmapHeight =_fac ;_acae .RegionSegment .BitmapWidth =_aeg ;_acae ._dfc =nil ;_acae .Bitmap =nil ;if _ffd !=nil {_acae ._agb =_ffd ;};if _cfd !=nil {_acae ._dba =_cfd ;
};_be .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049O\u004e\u005d\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073\u0020\u0053\u0044\u0041t\u003a\u0020\u0025\u0073",_acae );};func (_aag *GenericRegion )Size ()int {return _aag .RegionSegment .Size ()+1+2*len (_aag .GBAtX )};
func (_gbfa *TextRegion )decodeRdy ()(int64 ,error ){const _ebac ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064y";if _gbfa .IsHuffmanEncoded {if _gbfa .SbHuffRDY ==3{if _gbfa ._abfe ==nil {var (_cgcgg int ;_fdce error ;);if _gbfa .SbHuffFS ==3{_cgcgg ++;
};if _gbfa .SbHuffDS ==3{_cgcgg ++;};if _gbfa .SbHuffDT ==3{_cgcgg ++;};if _gbfa .SbHuffRDWidth ==3{_cgcgg ++;};if _gbfa .SbHuffRDHeight ==3{_cgcgg ++;};if _gbfa .SbHuffRDX ==3{_cgcgg ++;};_gbfa ._abfe ,_fdce =_gbfa .getUserTable (_cgcgg );if _fdce !=nil {return 0,_ac .Wrap (_fdce ,_ebac ,"");
};};return _gbfa ._abfe .Decode (_gbfa ._dcedc );};_dgbe ,_baad :=_dd .GetStandardTable (14+int (_gbfa .SbHuffRDY ));if _baad !=nil {return 0,_baad ;};return _dgbe .Decode (_gbfa ._dcedc );};_abea ,_efbd :=_gbfa ._fgbe .DecodeInt (_gbfa ._faga );if _efbd !=nil {return 0,_ac .Wrap (_efbd ,_ebac ,"");
};return int64 (_abea ),nil ;};type TextRegion struct{_dcedc _dc .StreamReader ;RegionInfo *RegionSegment ;SbrTemplate int8 ;SbDsOffset int8 ;DefaultPixel int8 ;CombinationOperator _gg .CombinationOperator ;IsTransposed int8 ;ReferenceCorner int16 ;LogSBStrips int16 ;
UseRefinement bool ;IsHuffmanEncoded bool ;SbHuffRSize int8 ;SbHuffRDY int8 ;SbHuffRDX int8 ;SbHuffRDHeight int8 ;SbHuffRDWidth int8 ;SbHuffDT int8 ;SbHuffDS int8 ;SbHuffFS int8 ;SbrATX []int8 ;SbrATY []int8 ;NumberOfSymbolInstances uint32 ;_bdcb int64 ;
SbStrips int8 ;NumberOfSymbols uint32 ;RegionBitmap *_gg .Bitmap ;Symbols []*_gg .Bitmap ;_fgbe *_eac .Decoder ;_aeacbd *GenericRefinementRegion ;_ceefd *_eac .DecoderStats ;_aaadc *_eac .DecoderStats ;_eefc *_eac .DecoderStats ;_gdeg *_eac .DecoderStats ;
_bdaa *_eac .DecoderStats ;_ddgdd *_eac .DecoderStats ;_aaaf *_eac .DecoderStats ;_egce *_eac .DecoderStats ;_effgc *_eac .DecoderStats ;_faga *_eac .DecoderStats ;_cace *_eac .DecoderStats ;_fddg int8 ;_bgaf *_dd .FixedSizeTable ;Header *Header ;_bfbd _dd .Tabler ;
_dage _dd .Tabler ;_fcbed _dd .Tabler ;_gcac _dd .Tabler ;_geba _dd .Tabler ;_gfbb _dd .Tabler ;_abfe _dd .Tabler ;_gabb _dd .Tabler ;_faeef ,_eagf map[int ]int ;_dda []int ;_eagd *_gg .Points ;_dbfgf *_gg .Bitmaps ;_ded *_fb .IntSlice ;_fagf ,_dbdgg int ;
_gcda *_gg .Boxes ;};func (_acab *PageInformationSegment )encodeFlags (_bbbb _dc .BinaryWriter )(_dddef error ){const _bcacf ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _dddef =_bbbb .SkipBits (1);_dddef !=nil {return _ac .Wrap (_dddef ,_bcacf ,"\u0072\u0065\u0073e\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074");
};var _fgdb int ;if _acab .CombinationOperatorOverrideAllowed (){_fgdb =1;};if _dddef =_bbbb .WriteBit (_fgdb );_dddef !=nil {return _ac .Wrap (_dddef ,_bcacf ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0064\u0065\u006e");
};_fgdb =0;if _acab ._gede {_fgdb =1;};if _dddef =_bbbb .WriteBit (_fgdb );_dddef !=nil {return _ac .Wrap (_dddef ,_bcacf ,"\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0061\u0075\u0078i\u006ci\u0061r\u0079\u0020\u0062\u0075\u0066\u0066\u0065r");};if _dddef =_bbbb .WriteBit ((int (_acab ._feef )>>1)&0x01);
_dddef !=nil {return _ac .Wrap (_dddef ,_bcacf ,"\u0063\u006f\u006d\u0062\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006f\u0070\u0065\u0072\u0061\u0074o\u0072\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0062\u0069\u0074");};if _dddef =_bbbb .WriteBit (int (_acab ._feef )&0x01);
_dddef !=nil {return _ac .Wrap (_dddef ,_bcacf ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0062\u0069\u0074");};_fgdb =int (_acab .DefaultPixelValue );
if _dddef =_bbbb .WriteBit (_fgdb );_dddef !=nil {return _ac .Wrap (_dddef ,_bcacf ,"\u0064e\u0066\u0061\u0075\u006c\u0074\u0020\u0070\u0061\u0067\u0065\u0020p\u0069\u0078\u0065\u006c\u0020\u0076\u0061\u006c\u0075\u0065");};_fgdb =0;if _acab ._bage {_fgdb =1;
};if _dddef =_bbbb .WriteBit (_fgdb );_dddef !=nil {return _ac .Wrap (_dddef ,_bcacf ,"\u0063\u006f\u006e\u0074ai\u006e\u0073\u0020\u0072\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074");};_fgdb =0;if _acab .IsLossless {_fgdb =1;};if _dddef =_bbbb .WriteBit (_fgdb );
_dddef !=nil {return _ac .Wrap (_dddef ,_bcacf ,"p\u0061\u0067\u0065\u0020\u0069\u0073 \u0065\u0076\u0065\u006e\u0074\u0075\u0061\u006c\u006cy\u0020\u006c\u006fs\u0073l\u0065\u0073\u0073");};return nil ;};func (_dga *HalftoneRegion )combineGrayscalePlanes (_eea []*_gg .Bitmap ,_gfb int )error {_fcac :=0;
for _fcb :=0;_fcb < _eea [_gfb ].Height ;_fcb ++{for _ebc :=0;_ebc < _eea [_gfb ].Width ;_ebc +=8{_adgb ,_bda :=_eea [_gfb +1].GetByte (_fcac );if _bda !=nil {return _bda ;};_gcd ,_bda :=_eea [_gfb ].GetByte (_fcac );if _bda !=nil {return _bda ;};_bda =_eea [_gfb ].SetByte (_fcac ,_gg .CombineBytes (_gcd ,_adgb ,_gg .CmbOpXor ));
if _bda !=nil {return _bda ;};_fcac ++;};};return nil ;};func (_dcee *RegionSegment )parseHeader ()error {const _dbfe ="p\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_be .Log .Trace ("\u005b\u0052\u0045\u0047I\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002dH\u0045A\u0044\u0045\u0052\u005d\u0020\u0042\u0065g\u0069\u006e");
defer func (){_be .Log .Trace ("\u005b\u0052\u0045G\u0049\u004f\u004e\u005d[\u0050\u0041\u0052\u0053\u0045\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");}();_acca ,_gfbe :=_dcee ._accd .ReadBits (32);
if _gfbe !=nil {return _ac .Wrap (_gfbe ,_dbfe ,"\u0077\u0069\u0064t\u0068");};_dcee .BitmapWidth =uint32 (_acca &_f .MaxUint32 );_acca ,_gfbe =_dcee ._accd .ReadBits (32);if _gfbe !=nil {return _ac .Wrap (_gfbe ,_dbfe ,"\u0068\u0065\u0069\u0067\u0068\u0074");
};_dcee .BitmapHeight =uint32 (_acca &_f .MaxUint32 );_acca ,_gfbe =_dcee ._accd .ReadBits (32);if _gfbe !=nil {return _ac .Wrap (_gfbe ,_dbfe ,"\u0078\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_dcee .XLocation =uint32 (_acca &_f .MaxUint32 );
_acca ,_gfbe =_dcee ._accd .ReadBits (32);if _gfbe !=nil {return _ac .Wrap (_gfbe ,_dbfe ,"\u0079\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_dcee .YLocation =uint32 (_acca &_f .MaxUint32 );if _ ,_gfbe =_dcee ._accd .ReadBits (5);_gfbe !=nil {return _ac .Wrap (_gfbe ,_dbfe ,"\u0064i\u0072\u0079\u0020\u0072\u0065\u0061d");
};if _gfbe =_dcee .readCombinationOperator ();_gfbe !=nil {return _ac .Wrap (_gfbe ,_dbfe ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};return nil ;};func (_baeg *SymbolDictionary )huffDecodeRefAggNInst ()(int64 ,error ){if !_baeg .SdHuffAggInstanceSelection {_fgaff ,_afgb :=_dd .GetStandardTable (1);
if _afgb !=nil {return 0,_afgb ;};return _fgaff .Decode (_baeg ._dbge );};if _baeg ._ggdga ==nil {var (_fbd int ;_efcb error ;);if _baeg .SdHuffDecodeHeightSelection ==3{_fbd ++;};if _baeg .SdHuffDecodeWidthSelection ==3{_fbd ++;};if _baeg .SdHuffBMSizeSelection ==3{_fbd ++;
};_baeg ._ggdga ,_efcb =_baeg .getUserTable (_fbd );if _efcb !=nil {return 0,_efcb ;};};return _baeg ._ggdga .Decode (_baeg ._dbge );};func (_afg *GenericRegion )String ()string {_cce :=&_g .Builder {};_cce .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");
_cce .WriteString (_afg .RegionSegment .String ()+"\u000a");_cce .WriteString (_d .Sprintf ("\u0009\u002d\u0020Us\u0065\u0045\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_afg .UseExtTemplates ));_cce .WriteString (_d .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0044\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_afg .IsTPGDon ));
_cce .WriteString (_d .Sprintf ("\u0009-\u0020G\u0042\u0054\u0065\u006d\u0070l\u0061\u0074e\u003a\u0020\u0025\u0064\u000a",_afg .GBTemplate ));_cce .WriteString (_d .Sprintf ("\t\u002d \u0049\u0073\u004d\u004d\u0052\u0045\u006e\u0063o\u0064\u0065\u0064\u003a %\u0076\u000a",_afg .IsMMREncoded ));
_cce .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_afg .GBAtX ));_cce .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_afg .GBAtY ));
_cce .WriteString (_d .Sprintf ("\t\u002d \u0047\u0042\u0041\u0074\u004f\u0076\u0065\u0072r\u0069\u0064\u0065\u003a %\u0076\u000a",_afg .GBAtOverride ));return _cce .String ();};func (_gdbef *Header )writeSegmentNumber (_gdbee _dc .BinaryWriter )(_cecg int ,_agedb error ){_abbgg :=make ([]byte ,4);
_b .BigEndian .PutUint32 (_abbgg ,_gdbef .SegmentNumber );if _cecg ,_agedb =_gdbee .Write (_abbgg );_agedb !=nil {return 0,_ac .Wrap (_agedb ,"\u0048e\u0061\u0064\u0065\u0072.\u0077\u0072\u0069\u0074\u0065S\u0065g\u006de\u006e\u0074\u004e\u0075\u006d\u0062\u0065r","");
};return _cecg ,nil ;};func (_bcg *SymbolDictionary )encodeNumSyms (_bcgf _dc .BinaryWriter )(_bbbba int ,_eabb error ){const _bcgd ="\u0065\u006e\u0063\u006f\u0064\u0065\u004e\u0075\u006d\u0053\u0079\u006d\u0073";_ebeg :=make ([]byte ,4);_b .BigEndian .PutUint32 (_ebeg ,_bcg .NumberOfExportedSymbols );
if _bbbba ,_eabb =_bcgf .Write (_ebeg );_eabb !=nil {return _bbbba ,_ac .Wrap (_eabb ,_bcgd ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};_b .BigEndian .PutUint32 (_ebeg ,_bcg .NumberOfNewSymbols );_bffe ,_eabb :=_bcgf .Write (_ebeg );
if _eabb !=nil {return _bbbba ,_ac .Wrap (_eabb ,_bcgd ,"n\u0065\u0077\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};return _bbbba +_bffe ,nil ;};func (_gfba *TableSegment )HtPS ()int32 {return _gfba ._fadb };func (_bgbbe *TextRegion )checkInput ()error {const _ccgf ="\u0063\u0068\u0065\u0063\u006b\u0049\u006e\u0070\u0075\u0074";
if !_bgbbe .UseRefinement {if _bgbbe .SbrTemplate !=0{_be .Log .Debug ("\u0053\u0062\u0072Te\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_bgbbe .SbrTemplate =0;};};if _bgbbe .SbHuffFS ==2||_bgbbe .SbHuffRDWidth ==2||_bgbbe .SbHuffRDHeight ==2||_bgbbe .SbHuffRDX ==2||_bgbbe .SbHuffRDY ==2{return _ac .Error (_ccgf ,"h\u0075\u0066\u0066\u006d\u0061\u006e \u0066\u006c\u0061\u0067\u0020\u0076a\u006c\u0075\u0065\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074e\u0064");
};if !_bgbbe .UseRefinement {if _bgbbe .SbHuffRSize !=0{_be .Log .Debug ("\u0053\u0062\u0048uf\u0066\u0052\u0053\u0069\u007a\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_bgbbe .SbHuffRSize =0;};if _bgbbe .SbHuffRDY !=0{_be .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044Y\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");
_bgbbe .SbHuffRDY =0;};if _bgbbe .SbHuffRDX !=0{_be .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044X\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_bgbbe .SbHuffRDX =0;};if _bgbbe .SbHuffRDWidth !=0{_be .Log .Debug ("\u0053b\u0048\u0075\u0066\u0066R\u0044\u0057\u0069\u0064\u0074h\u0020s\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u00200");
_bgbbe .SbHuffRDWidth =0;};if _bgbbe .SbHuffRDHeight !=0{_be .Log .Debug ("\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069g\u0068\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0030");_bgbbe .SbHuffRDHeight =0;};
};return nil ;};func (_dcd *GenericRegion )Init (h *Header ,r _dc .StreamReader )error {_dcd .RegionSegment =NewRegionSegment (r );_dcd ._fbg =r ;return _dcd .parseHeader ();};func (_fgfb *SymbolDictionary )encodeSymbols (_cbaf _dc .BinaryWriter )(_aagd int ,_eafg error ){const _cfae ="\u0065\u006e\u0063o\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c";
_agcae :=_aca .New ();_agcae .Init ();_acbg ,_eafg :=_fgfb ._edbca .SelectByIndexes (_fgfb ._gcea );if _eafg !=nil {return 0,_ac .Wrap (_eafg ,_cfae ,"\u0069n\u0069\u0074\u0069\u0061\u006c");};_dege :=map[*_gg .Bitmap ]int {};for _fcec ,_cgdg :=range _acbg .Values {_dege [_cgdg ]=_fcec ;
};_acbg .SortByHeight ();var _bbaca ,_gfgd int ;_agec ,_eafg :=_acbg .GroupByHeight ();if _eafg !=nil {return 0,_ac .Wrap (_eafg ,_cfae ,"");};for _ ,_fdcd :=range _agec .Values {_ebba :=_fdcd .Values [0].Height ;_dggee :=_ebba -_bbaca ;if _eafg =_agcae .EncodeInteger (_aca .IADH ,_dggee );
_eafg !=nil {return 0,_ac .Wrapf (_eafg ,_cfae ,"\u0049\u0041\u0044\u0048\u0020\u0066\u006f\u0072\u0020\u0064\u0068\u003a \u0027\u0025\u0064\u0027",_dggee );};_bbaca =_ebba ;_effg ,_gafe :=_fdcd .GroupByWidth ();if _gafe !=nil {return 0,_ac .Wrapf (_gafe ,_cfae ,"\u0068\u0065\u0069g\u0068\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_ebba );
};var _ege int ;for _ ,_fcbec :=range _effg .Values {for _ ,_gegc :=range _fcbec .Values {_acfcf :=_gegc .Width ;_cbde :=_acfcf -_ege ;if _gafe =_agcae .EncodeInteger (_aca .IADW ,_cbde );_gafe !=nil {return 0,_ac .Wrapf (_gafe ,_cfae ,"\u0049\u0041\u0044\u0057\u0020\u0066\u006f\u0072\u0020\u0064\u0077\u003a \u0027\u0025\u0064\u0027",_cbde );
};_ege +=_cbde ;if _gafe =_agcae .EncodeBitmap (_gegc ,false );_gafe !=nil {return 0,_ac .Wrapf (_gafe ,_cfae ,"H\u0065i\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u0020W\u0069\u0064\u0074\u0068: \u0025\u0064",_ebba ,_acfcf );};_ecad :=_dege [_gegc ];_fgfb ._fdac [_ecad ]=_gfgd ;
_gfgd ++;};};if _gafe =_agcae .EncodeOOB (_aca .IADW );_gafe !=nil {return 0,_ac .Wrap (_gafe ,_cfae ,"\u0049\u0041\u0044\u0057");};};if _eafg =_agcae .EncodeInteger (_aca .IAEX ,0);_eafg !=nil {return 0,_ac .Wrap (_eafg ,_cfae ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};if _eafg =_agcae .EncodeInteger (_aca .IAEX ,len (_fgfb ._gcea ));_eafg !=nil {return 0,_ac .Wrap (_eafg ,_cfae ,"\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0073\u0079m\u0062\u006f\u006c\u0073");};_agcae .Final ();_ecgdb ,_eafg :=_agcae .WriteTo (_cbaf );
if _eafg !=nil {return 0,_ac .Wrap (_eafg ,_cfae ,"\u0077\u0072i\u0074\u0069\u006e\u0067 \u0065\u006ec\u006f\u0064\u0065\u0072\u0020\u0063\u006f\u006et\u0065\u0078\u0074\u0020\u0074\u006f\u0020\u0027\u0077\u0027\u0020\u0077r\u0069\u0074\u0065\u0072");};
return int (_ecgdb ),nil ;};func (_ecgd *HalftoneRegion )GetPatterns ()([]*_gg .Bitmap ,error ){var (_dcfb []*_gg .Bitmap ;_fcca error ;);for _ ,_efcd :=range _ecgd ._edga .RTSegments {var _ffgg Segmenter ;_ffgg ,_fcca =_efcd .GetSegmentData ();if _fcca !=nil {_be .Log .Debug ("\u0047e\u0074\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061 \u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025v",_fcca );
return nil ,_fcca ;};_gdfc ,_ebed :=_ffgg .(*PatternDictionary );if !_ebed {_fcca =_d .Errorf ("\u0072e\u006c\u0061t\u0065\u0064\u0020\u0073e\u0067\u006d\u0065n\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0070at\u0074\u0065\u0072n\u0020\u0064i\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u003a \u0025\u0054",_ffgg );
return nil ,_fcca ;};var _bbac []*_gg .Bitmap ;_bbac ,_fcca =_gdfc .GetDictionary ();if _fcca !=nil {_be .Log .Debug ("\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_fcca );
return nil ,_fcca ;};_dcfb =append (_dcfb ,_bbac ...);};return _dcfb ,nil ;};func NewHeader (d Documenter ,r _dc .StreamReader ,offset int64 ,organizationType OrganizationType )(*Header ,error ){_aafe :=&Header {Reader :r };if _fcbe :=_aafe .parse (d ,r ,offset ,organizationType );
_fcbe !=nil {return nil ,_ac .Wrap (_fcbe ,"\u004ee\u0077\u0048\u0065\u0061\u0064\u0065r","");};return _aafe ,nil ;};func (_ddfg *GenericRegion )decodeTemplate2 (_eaba ,_egfd ,_ggdg int ,_ecab ,_egg int )(_dfg error ){const _aba ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0032";
var (_cffa ,_cgg int ;_agbf ,_bef int ;_egc byte ;_fdgd ,_affd int ;);if _eaba >=1{_egc ,_dfg =_ddfg .Bitmap .GetByte (_egg );if _dfg !=nil {return _ac .Wrap (_dfg ,_aba ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0031");
};_agbf =int (_egc );};if _eaba >=2{_egc ,_dfg =_ddfg .Bitmap .GetByte (_egg -_ddfg .Bitmap .RowStride );if _dfg !=nil {return _ac .Wrap (_dfg ,_aba ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0032");};_bef =int (_egc )<<4;
};_cffa =(_agbf >>3&0x7c)|(_bef >>3&0x380);for _afb :=0;_afb < _ggdg ;_afb =_fdgd {var (_deaa byte ;_bff int ;);_fdgd =_afb +8;if _bdc :=_egfd -_afb ;_bdc > 8{_bff =8;}else {_bff =_bdc ;};if _eaba > 0{_agbf <<=8;if _fdgd < _egfd {_egc ,_dfg =_ddfg .Bitmap .GetByte (_egg +1);
if _dfg !=nil {return _ac .Wrap (_dfg ,_aba ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0030");};_agbf |=int (_egc );};};if _eaba > 1{_bef <<=8;if _fdgd < _egfd {_egc ,_dfg =_ddfg .Bitmap .GetByte (_egg -_ddfg .Bitmap .RowStride +1);
if _dfg !=nil {return _ac .Wrap (_dfg ,_aba ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0031");};_bef |=int (_egc )<<4;};};for _bbbd :=0;_bbbd < _bff ;_bbbd ++{_fbaa :=uint (10-_bbbd );if _ddfg ._fcc {_cgg =_ddfg .overrideAtTemplate2 (_cffa ,_afb +_bbbd ,_eaba ,int (_deaa ),_bbbd );
_ddfg ._agb .SetIndex (int32 (_cgg ));}else {_ddfg ._agb .SetIndex (int32 (_cffa ));};_affd ,_dfg =_ddfg ._dba .DecodeBit (_ddfg ._agb );if _dfg !=nil {return _ac .Wrap (_dfg ,_aba ,"");};_deaa |=byte (_affd <<uint (7-_bbbd ));_cffa =((_cffa &0x1bd)<<1)|_affd |((_agbf >>_fbaa )&0x4)|((_bef >>_fbaa )&0x80);
};if _acbd :=_ddfg .Bitmap .SetByte (_ecab ,_deaa );_acbd !=nil {return _ac .Wrap (_acbd ,_aba ,"");};_ecab ++;_egg ++;};return nil ;};func (_acfa *GenericRefinementRegion )readAtPixels ()error {_acfa .GrAtX =make ([]int8 ,2);_acfa .GrAtY =make ([]int8 ,2);
_gdcc ,_bgg :=_acfa ._ag .ReadByte ();if _bgg !=nil {return _bgg ;};_acfa .GrAtX [0]=int8 (_gdcc );_gdcc ,_bgg =_acfa ._ag .ReadByte ();if _bgg !=nil {return _bgg ;};_acfa .GrAtY [0]=int8 (_gdcc );_gdcc ,_bgg =_acfa ._ag .ReadByte ();if _bgg !=nil {return _bgg ;
};_acfa .GrAtX [1]=int8 (_gdcc );_gdcc ,_bgg =_acfa ._ag .ReadByte ();if _bgg !=nil {return _bgg ;};_acfa .GrAtY [1]=int8 (_gdcc );return nil ;};func (_fgeag *TableSegment )HtRS ()int32 {return _fgeag ._cffaf };func (_cefe *TextRegion )decodeDT ()(_cbad int64 ,_eddf error ){if _cefe .IsHuffmanEncoded {if _cefe .SbHuffDT ==3{_cbad ,_eddf =_cefe ._fcbed .Decode (_cefe ._dcedc );
if _eddf !=nil {return 0,_eddf ;};}else {var _begbf _dd .Tabler ;_begbf ,_eddf =_dd .GetStandardTable (11+int (_cefe .SbHuffDT ));if _eddf !=nil {return 0,_eddf ;};_cbad ,_eddf =_begbf .Decode (_cefe ._dcedc );if _eddf !=nil {return 0,_eddf ;};};}else {var _abfc int32 ;
_abfc ,_eddf =_cefe ._fgbe .DecodeInt (_cefe ._ceefd );if _eddf !=nil {return ;};_cbad =int64 (_abfc );};_cbad *=int64 (_cefe .SbStrips );return _cbad ,nil ;};type SymbolDictionary struct{_dbge _dc .StreamReader ;SdrTemplate int8 ;SdTemplate int8 ;_ffdb bool ;
_cbbe bool ;SdHuffAggInstanceSelection bool ;SdHuffBMSizeSelection int8 ;SdHuffDecodeWidthSelection int8 ;SdHuffDecodeHeightSelection int8 ;UseRefinementAggregation bool ;IsHuffmanEncoded bool ;SdATX []int8 ;SdATY []int8 ;SdrATX []int8 ;SdrATY []int8 ;
NumberOfExportedSymbols uint32 ;NumberOfNewSymbols uint32 ;Header *Header ;_bgcfb uint32 ;_aefe []*_gg .Bitmap ;_bgdb uint32 ;_dfgg []*_gg .Bitmap ;_abg _dd .Tabler ;_fadd _dd .Tabler ;_fec _dd .Tabler ;_ggdga _dd .Tabler ;_ffac []*_gg .Bitmap ;_gadb []*_gg .Bitmap ;
_aaad *_eac .Decoder ;_bbffd *TextRegion ;_fgga *GenericRegion ;_dgfa *GenericRefinementRegion ;_gdea *_eac .DecoderStats ;_bbee *_eac .DecoderStats ;_bdfe *_eac .DecoderStats ;_eedd *_eac .DecoderStats ;_daeg *_eac .DecoderStats ;_ecgb *_eac .DecoderStats ;
_eedg *_eac .DecoderStats ;_bagc *_eac .DecoderStats ;_cffd *_eac .DecoderStats ;_ceb int8 ;_edbca *_gg .Bitmaps ;_gcea []int ;_fdac map[int ]int ;_ceae bool ;};func NewRegionSegment (r _dc .StreamReader )*RegionSegment {return &RegionSegment {_accd :r }};
func (_ddd *GenericRefinementRegion )getPixel (_cdde *_gg .Bitmap ,_cbcg ,_gbfd int )int {if _cbcg < 0||_cbcg >=_cdde .Width {return 0;};if _gbfd < 0||_gbfd >=_cdde .Height {return 0;};if _cdde .GetPixel (_cbcg ,_gbfd ){return 1;};return 0;};func (_cfba *TextRegion )Encode (w _dc .BinaryWriter )(_dcfa int ,_dgab error ){const _egea ="\u0054\u0065\u0078\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u002e\u0045n\u0063\u006f\u0064\u0065";
if _dcfa ,_dgab =_cfba .RegionInfo .Encode (w );_dgab !=nil {return _dcfa ,_ac .Wrap (_dgab ,_egea ,"");};var _fcbg int ;if _fcbg ,_dgab =_cfba .encodeFlags (w );_dgab !=nil {return _dcfa ,_ac .Wrap (_dgab ,_egea ,"");};_dcfa +=_fcbg ;if _fcbg ,_dgab =_cfba .encodeSymbols (w );
_dgab !=nil {return _dcfa ,_ac .Wrap (_dgab ,_egea ,"");};_dcfa +=_fcbg ;return _dcfa ,nil ;};func (_def *GenericRegion )decodeSLTP ()(int ,error ){switch _def .GBTemplate {case 0:_def ._agb .SetIndex (0x9B25);case 1:_def ._agb .SetIndex (0x795);case 2:_def ._agb .SetIndex (0xE5);
case 3:_def ._agb .SetIndex (0x195);};return _def ._dba .DecodeBit (_def ._agb );};func (_bfc *SymbolDictionary )encodeATFlags (_gcdg _dc .BinaryWriter )(_gedec int ,_fdb error ){const _ecbaa ="\u0065\u006e\u0063\u006f\u0064\u0065\u0041\u0054\u0046\u006c\u0061\u0067\u0073";
if _bfc .IsHuffmanEncoded ||_bfc .SdTemplate !=0{return 0,nil ;};_fefc :=4;if _bfc .SdTemplate !=0{_fefc =1;};for _aaff :=0;_aaff < _fefc ;_aaff ++{if _fdb =_gcdg .WriteByte (byte (_bfc .SdATX [_aaff ]));_fdb !=nil {return _gedec ,_ac .Wrapf (_fdb ,_ecbaa ,"\u0053d\u0041\u0054\u0058\u005b\u0025\u0064]",_aaff );
};_gedec ++;if _fdb =_gcdg .WriteByte (byte (_bfc .SdATY [_aaff ]));_fdb !=nil {return _gedec ,_ac .Wrapf (_fdb ,_ecbaa ,"\u0053d\u0041\u0054\u0059\u005b\u0025\u0064]",_aaff );};_gedec ++;};return _gedec ,nil ;};func (_ebdg *SymbolDictionary )readNumberOfNewSymbols ()error {_aefee ,_fadagb :=_ebdg ._dbge .ReadBits (32);
if _fadagb !=nil {return _fadagb ;};_ebdg .NumberOfNewSymbols =uint32 (_aefee &_f .MaxUint32 );return nil ;};func (_bec *GenericRegion )setOverrideFlag (_ffgb int ){_bec .GBAtOverride [_ffgb ]=true ;_bec ._fcc =true ;};func (_bcbg *PatternDictionary )computeSegmentDataStructure ()error {_bcbg .DataOffset =_bcbg ._feea .StreamPosition ();
_bcbg .DataHeaderLength =_bcbg .DataOffset -_bcbg .DataHeaderOffset ;_bcbg .DataLength =int64 (_bcbg ._feea .Length ())-_bcbg .DataHeaderLength ;return nil ;};func (_bdbd *SymbolDictionary )decodeDifferenceWidth ()(int64 ,error ){if _bdbd .IsHuffmanEncoded {switch _bdbd .SdHuffDecodeWidthSelection {case 0:_dfdec ,_cdga :=_dd .GetStandardTable (2);
if _cdga !=nil {return 0,_cdga ;};return _dfdec .Decode (_bdbd ._dbge );case 1:_caag ,_ceaf :=_dd .GetStandardTable (3);if _ceaf !=nil {return 0,_ceaf ;};return _caag .Decode (_bdbd ._dbge );case 3:if _bdbd ._fadd ==nil {var _becag int ;if _bdbd .SdHuffDecodeHeightSelection ==3{_becag ++;
};_agaa ,_cebd :=_bdbd .getUserTable (_becag );if _cebd !=nil {return 0,_cebd ;};_bdbd ._fadd =_agaa ;};return _bdbd ._fadd .Decode (_bdbd ._dbge );};}else {_cbcge ,_bcd :=_bdbd ._aaad .DecodeInt (_bdbd ._bdfe );if _bcd !=nil {return 0,_bcd ;};return int64 (_cbcge ),nil ;
};return 0,nil ;};func (_cegg *PageInformationSegment )readRequiresAuxiliaryBuffer ()error {_dccd ,_egca :=_cegg ._agdg .ReadBit ();if _egca !=nil {return _egca ;};if _dccd ==1{_cegg ._gede =true ;};return nil ;};func (_cbb *PatternDictionary )readIsMMREncoded ()error {_dfbc ,_cbee :=_cbb ._feea .ReadBit ();
if _cbee !=nil {return _cbee ;};if _dfbc !=0{_cbb .IsMMREncoded =true ;};return nil ;};func (_cge *GenericRegion )setParametersMMR (_fce bool ,_fgfe ,_bcag int64 ,_agcd ,_eec uint32 ,_abd byte ,_aedd ,_fea bool ,_dbe ,_efgd []int8 ){_cge .DataOffset =_fgfe ;
_cge .DataLength =_bcag ;_cge .RegionSegment =&RegionSegment {};_cge .RegionSegment .BitmapHeight =_agcd ;_cge .RegionSegment .BitmapWidth =_eec ;_cge .GBTemplate =_abd ;_cge .IsMMREncoded =_fce ;_cge .IsTPGDon =_aedd ;_cge .GBAtX =_dbe ;_cge .GBAtY =_efgd ;
};func (_ceeg *PatternDictionary )extractPatterns (_daga *_gg .Bitmap )error {var _cged int ;_aeagcg :=make ([]*_gg .Bitmap ,_ceeg .GrayMax +1);for _cged <=int (_ceeg .GrayMax ){_ece :=int (_ceeg .HdpWidth )*_cged ;_fcff :=_eg .Rect (_ece ,0,_ece +int (_ceeg .HdpWidth ),int (_ceeg .HdpHeight ));
_eag ,_fgafe :=_gg .Extract (_fcff ,_daga );if _fgafe !=nil {return _fgafe ;};_aeagcg [_cged ]=_eag ;_cged ++;};_ceeg .Patterns =_aeagcg ;return nil ;};func _fabg (_babb _dc .StreamReader ,_feeb *Header )*TextRegion {_gcfc :=&TextRegion {_dcedc :_babb ,Header :_feeb ,RegionInfo :NewRegionSegment (_babb )};
return _gcfc ;};type OrganizationType uint8 ;func (_gcee *TextRegion )getUserTable (_aaceg int )(_dd .Tabler ,error ){const _eafgb ="\u0067\u0065\u0074U\u0073\u0065\u0072\u0054\u0061\u0062\u006c\u0065";var _ecbc int ;for _ ,_adccf :=range _gcee .Header .RTSegments {if _adccf .Type ==53{if _ecbc ==_aaceg {_ebcg ,_bdef :=_adccf .GetSegmentData ();
if _bdef !=nil {return nil ,_bdef ;};_dfcab ,_cbff :=_ebcg .(*TableSegment );if !_cbff {_be .Log .Debug (_d .Sprintf ("\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079p\u0065\u00205\u0033\u0020\u002d\u0020\u0061\u006ed\u0020in\u0064\u0065\u0078\u003a\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_adccf .SegmentNumber ));
return nil ,_ac .Error (_eafgb ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079\u0070e\u0020\u0035\u0033\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u002a\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};return _dd .NewEncodedTable (_dfcab );};_ecbc ++;};};return nil ,nil ;};func (_gdfd *GenericRefinementRegion )setParameters (_aee *_eac .DecoderStats ,_acac *_eac .Decoder ,_cffb int8 ,_ebe ,_gdcd uint32 ,_ggb *_gg .Bitmap ,_bacf ,_gaff int32 ,_ffad bool ,_fca []int8 ,_dff []int8 ){_be .Log .Trace ("\u005b\u0047\u0045NE\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052E\u0047I\u004fN\u005d \u0073\u0065\u0074\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073");
if _aee !=nil {_gdfd ._ef =_aee ;};if _acac !=nil {_gdfd ._gb =_acac ;};_gdfd .TemplateID =_cffb ;_gdfd .RegionInfo .BitmapWidth =_ebe ;_gdfd .RegionInfo .BitmapHeight =_gdcd ;_gdfd .ReferenceBitmap =_ggb ;_gdfd .ReferenceDX =_bacf ;_gdfd .ReferenceDY =_gaff ;
_gdfd .IsTPGROn =_ffad ;_gdfd .GrAtX =_fca ;_gdfd .GrAtY =_dff ;_gdfd .RegionBitmap =nil ;_be .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073 f\u0069\u006ei\u0073\u0068\u0065\u0064\u002e\u0020\u0025\u0073",_gdfd );
};func (_fefcd *SymbolDictionary )getToExportFlags ()([]int ,error ){var (_ecef int ;_cacd int32 ;_eced error ;_ecgg =int32 (_fefcd ._bgcfb +_fefcd .NumberOfNewSymbols );_gcdf =make ([]int ,_ecgg ););for _agacd :=int32 (0);_agacd < _ecgg ;_agacd +=_cacd {if _fefcd .IsHuffmanEncoded {_afgf ,_dcag :=_dd .GetStandardTable (1);
if _dcag !=nil {return nil ,_dcag ;};_fdgag ,_dcag :=_afgf .Decode (_fefcd ._dbge );if _dcag !=nil {return nil ,_dcag ;};_cacd =int32 (_fdgag );}else {_cacd ,_eced =_fefcd ._aaad .DecodeInt (_fefcd ._daeg );if _eced !=nil {return nil ,_eced ;};};if _cacd !=0{for _fdafe :=_agacd ;
_fdafe < _agacd +_cacd ;_fdafe ++{_gcdf [_fdafe ]=_ecef ;};};if _ecef ==0{_ecef =1;}else {_ecef =0;};};return _gcdf ,nil ;};func (_ccda *Header )readHeaderFlags ()error {const _afbg ="\u0072e\u0061d\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006c\u0061\u0067\u0073";
_edc ,_cef :=_ccda .Reader .ReadBit ();if _cef !=nil {return _ac .Wrap (_cef ,_afbg ,"r\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067");};if _edc !=0{_ccda .RetainFlag =true ;};_edc ,_cef =_ccda .Reader .ReadBit ();if _cef !=nil {return _ac .Wrap (_cef ,_afbg ,"\u0070\u0061g\u0065\u0020\u0061s\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e");
};if _edc !=0{_ccda .PageAssociationFieldSize =true ;};_edgdg ,_cef :=_ccda .Reader .ReadBits (6);if _cef !=nil {return _ac .Wrap (_cef ,_afbg ,"\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065");};_ccda .Type =Type (int (_edgdg ));return nil ;
};func (_bcfc *TableSegment )Init (h *Header ,r _dc .StreamReader )error {_bcfc ._bbcc =r ;return _bcfc .parseHeader ();};func (_adee *TextRegion )decodeSymInRefSize ()(int64 ,error ){const _bbec ="\u0064e\u0063o\u0064\u0065\u0053\u0079\u006dI\u006e\u0052e\u0066\u0053\u0069\u007a\u0065";
if _adee .SbHuffRSize ==0{_cgge ,_cdce :=_dd .GetStandardTable (1);if _cdce !=nil {return 0,_ac .Wrap (_cdce ,_bbec ,"");};return _cgge .Decode (_adee ._dcedc );};if _adee ._gabb ==nil {var (_egfe int ;_bfgfc error ;);if _adee .SbHuffFS ==3{_egfe ++;};
if _adee .SbHuffDS ==3{_egfe ++;};if _adee .SbHuffDT ==3{_egfe ++;};if _adee .SbHuffRDWidth ==3{_egfe ++;};if _adee .SbHuffRDHeight ==3{_egfe ++;};if _adee .SbHuffRDX ==3{_egfe ++;};if _adee .SbHuffRDY ==3{_egfe ++;};_adee ._gabb ,_bfgfc =_adee .getUserTable (_egfe );
if _bfgfc !=nil {return 0,_ac .Wrap (_bfgfc ,_bbec ,"");};};_bgaea ,_fgge :=_adee ._gabb .Decode (_adee ._dcedc );if _fgge !=nil {return 0,_ac .Wrap (_fgge ,_bbec ,"");};return _bgaea ,nil ;};func (_cffc *TableSegment )parseHeader ()error {var (_cfge int ;
_bffa uint64 ;_gdfeb error ;);_cfge ,_gdfeb =_cffc ._bbcc .ReadBit ();if _gdfeb !=nil {return _gdfeb ;};if _cfge ==1{return _d .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0061\u0062\u006c\u0065 \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0064e\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u002e\u0020\u0042\u002e\u0032\u002e1\u0020\u0043\u006f\u0064\u0065\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0042\u0069\u0074\u0020\u0037\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u007a\u0065\u0072\u006f\u002e\u0020\u0057a\u0073\u003a \u0025\u0064",_cfge );
};if _bffa ,_gdfeb =_cffc ._bbcc .ReadBits (3);_gdfeb !=nil {return _gdfeb ;};_cffc ._cffaf =(int32 (_bffa )+1)&0xf;if _bffa ,_gdfeb =_cffc ._bbcc .ReadBits (3);_gdfeb !=nil {return _gdfeb ;};_cffc ._fadb =(int32 (_bffa )+1)&0xf;if _bffa ,_gdfeb =_cffc ._bbcc .ReadBits (32);
_gdfeb !=nil {return _gdfeb ;};_cffc ._dgcc =int32 (_bffa &_f .MaxInt32 );if _bffa ,_gdfeb =_cffc ._bbcc .ReadBits (32);_gdfeb !=nil {return _gdfeb ;};_cffc ._gdcg =int32 (_bffa &_f .MaxInt32 );return nil ;};func (_bbf *GenericRefinementRegion )parseHeader ()(_eca error ){_be .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0048e\u0061\u0064e\u0072\u002e\u002e\u002e");
_acbc :=_a .Now ();defer func (){if _eca ==nil {_be .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045G\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020h\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0069\u006e\u0069\u0073\u0068id\u0020\u0069\u006e\u003a\u0020\u0025\u0064\u0020\u006e\u0073",_a .Since (_acbc ).Nanoseconds ());
}else {_be .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0068\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0073",_eca );
};}();if _eca =_bbf .RegionInfo .parseHeader ();_eca !=nil {return _eca ;};_ ,_eca =_bbf ._ag .ReadBits (6);if _eca !=nil {return _eca ;};_bbf .IsTPGROn ,_eca =_bbf ._ag .ReadBool ();if _eca !=nil {return _eca ;};var _geg int ;_geg ,_eca =_bbf ._ag .ReadBit ();
if _eca !=nil {return _eca ;};_bbf .TemplateID =int8 (_geg );switch _bbf .TemplateID {case 0:_bbf .Template =_bbf ._bg ;if _eca =_bbf .readAtPixels ();_eca !=nil {return ;};case 1:_bbf .Template =_bbf ._cb ;};return nil ;};type Segmenter interface{Init (_addeb *Header ,_aeea _dc .StreamReader )error ;
};func (_dcf *GenericRegion )updateOverrideFlags ()error {const _beda ="\u0075\u0070\u0064\u0061te\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _dcf .GBAtX ==nil ||_dcf .GBAtY ==nil {return nil ;};if len (_dcf .GBAtX )!=len (_dcf .GBAtY ){return _ac .Errorf (_beda ,"i\u006eco\u0073i\u0073t\u0065\u006e\u0074\u0020\u0041T\u0020\u0070\u0069x\u0065\u006c\u002e\u0020\u0041m\u006f\u0075\u006et\u0020\u006f\u0066\u0020\u0027\u0078\u0027\u0020\u0070\u0069\u0078e\u006c\u0073\u003a %d\u002c\u0020\u0041\u006d\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0027\u0079\u0027\u0020\u0070\u0069\u0078e\u006cs\u003a\u0020\u0025\u0064",len (_dcf .GBAtX ),len (_dcf .GBAtY ));
};_dcf .GBAtOverride =make ([]bool ,len (_dcf .GBAtX ));switch _dcf .GBTemplate {case 0:if !_dcf .UseExtTemplates {if _dcf .GBAtX [0]!=3||_dcf .GBAtY [0]!=-1{_dcf .setOverrideFlag (0);};if _dcf .GBAtX [1]!=-3||_dcf .GBAtY [1]!=-1{_dcf .setOverrideFlag (1);
};if _dcf .GBAtX [2]!=2||_dcf .GBAtY [2]!=-2{_dcf .setOverrideFlag (2);};if _dcf .GBAtX [3]!=-2||_dcf .GBAtY [3]!=-2{_dcf .setOverrideFlag (3);};}else {if _dcf .GBAtX [0]!=-2||_dcf .GBAtY [0]!=0{_dcf .setOverrideFlag (0);};if _dcf .GBAtX [1]!=0||_dcf .GBAtY [1]!=-2{_dcf .setOverrideFlag (1);
};if _dcf .GBAtX [2]!=-2||_dcf .GBAtY [2]!=-1{_dcf .setOverrideFlag (2);};if _dcf .GBAtX [3]!=-1||_dcf .GBAtY [3]!=-2{_dcf .setOverrideFlag (3);};if _dcf .GBAtX [4]!=1||_dcf .GBAtY [4]!=-2{_dcf .setOverrideFlag (4);};if _dcf .GBAtX [5]!=2||_dcf .GBAtY [5]!=-1{_dcf .setOverrideFlag (5);
};if _dcf .GBAtX [6]!=-3||_dcf .GBAtY [6]!=0{_dcf .setOverrideFlag (6);};if _dcf .GBAtX [7]!=-4||_dcf .GBAtY [7]!=0{_dcf .setOverrideFlag (7);};if _dcf .GBAtX [8]!=2||_dcf .GBAtY [8]!=-2{_dcf .setOverrideFlag (8);};if _dcf .GBAtX [9]!=3||_dcf .GBAtY [9]!=-1{_dcf .setOverrideFlag (9);
};if _dcf .GBAtX [10]!=-2||_dcf .GBAtY [10]!=-2{_dcf .setOverrideFlag (10);};if _dcf .GBAtX [11]!=-3||_dcf .GBAtY [11]!=-1{_dcf .setOverrideFlag (11);};};case 1:if _dcf .GBAtX [0]!=3||_dcf .GBAtY [0]!=-1{_dcf .setOverrideFlag (0);};case 2:if _dcf .GBAtX [0]!=2||_dcf .GBAtY [0]!=-1{_dcf .setOverrideFlag (0);
};case 3:if _dcf .GBAtX [0]!=2||_dcf .GBAtY [0]!=-1{_dcf .setOverrideFlag (0);};};return nil ;};func (_efbb *SymbolDictionary )String ()string {_ggaa :=&_g .Builder {};_ggaa .WriteString ("\n\u005b\u0053\u0059\u004dBO\u004c-\u0044\u0049\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u000a");
_ggaa .WriteString (_d .Sprintf ("\u0009-\u0020S\u0064\u0072\u0054\u0065\u006dp\u006c\u0061t\u0065\u0020\u0025\u0076\u000a",_efbb .SdrTemplate ));_ggaa .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0025\u0076\u000a",_efbb .SdTemplate ));
_ggaa .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006eg\u0043\u006f\u006e\u0074\u0065\u0078\u0074R\u0065\u0074\u0061\u0069\u006e\u0065\u0064\u0020\u0025\u0076\u000a",_efbb ._ffdb ));_ggaa .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074\u0065\u0078\u0074\u0055\u0073\u0065\u0064 \u0025\u0076\u000a",_efbb ._cbbe ));
_ggaa .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_efbb .SdHuffAggInstanceSelection ));
_ggaa .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0053d\u0048\u0075\u0066\u0066\u0042\u004d\u0053\u0069\u007a\u0065S\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020%\u0076\u000a",_efbb .SdHuffBMSizeSelection ));_ggaa .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_efbb .SdHuffDecodeWidthSelection ));
_ggaa .WriteString (_d .Sprintf ("\u0009\u002d\u0020Sd\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064e\u0048e\u0069g\u0068t\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_efbb .SdHuffDecodeHeightSelection ));_ggaa .WriteString (_d .Sprintf ("\u0009\u002d\u0020U\u0073\u0065\u0052\u0065f\u0069\u006e\u0065\u006d\u0065\u006e\u0074A\u0067\u0067\u0072\u0065\u0067\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_efbb .UseRefinementAggregation ));
_ggaa .WriteString (_d .Sprintf ("\u0009\u002d\u0020is\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045\u006e\u0063\u006f\u0064\u0065\u0064\u0020\u0025\u0076\u000a",_efbb .IsHuffmanEncoded ));_ggaa .WriteString (_d .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_efbb .SdATX ));
_ggaa .WriteString (_d .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_efbb .SdATY ));_ggaa .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_efbb .SdrATX ));_ggaa .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_efbb .SdrATY ));
_ggaa .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u004e\u0075\u006d\u0062\u0065\u0072\u004ff\u0045\u0078\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_efbb .NumberOfExportedSymbols ));_ggaa .WriteString (_d .Sprintf ("\u0009-\u0020\u004e\u0075\u006db\u0065\u0072\u004f\u0066\u004ee\u0077S\u0079m\u0062\u006f\u006c\u0073\u0020\u0025\u0076\n",_efbb .NumberOfNewSymbols ));
_ggaa .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u004ff\u0049\u006d\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_efbb ._bgcfb ));_ggaa .WriteString (_d .Sprintf ("\u0009\u002d \u006e\u0075\u006d\u0062\u0065\u0072\u004f\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0064\u0053\u0079\u006d\u0062\u006f\u006c\u0073 %\u0076\u000a",_efbb ._bgdb ));
return _ggaa .String ();};func (_begc *GenericRefinementRegion )decodeTypicalPredictedLineTemplate0 (_bege ,_fge ,_bbg ,_acb ,_bgd ,_bc ,_cg ,_edg ,_gef int )error {var (_gdce ,_cdc ,_gbc ,_bgc ,_da ,_cdb int ;_fae byte ;_eef error ;);if _bege > 0{_fae ,_eef =_begc .RegionBitmap .GetByte (_cg -_bbg );
if _eef !=nil {return _eef ;};_gbc =int (_fae );};if _edg > 0&&_edg <=_begc .ReferenceBitmap .Height {_fae ,_eef =_begc .ReferenceBitmap .GetByte (_gef -_acb +_bc );if _eef !=nil {return _eef ;};_bgc =int (_fae )<<4;};if _edg >=0&&_edg < _begc .ReferenceBitmap .Height {_fae ,_eef =_begc .ReferenceBitmap .GetByte (_gef +_bc );
if _eef !=nil {return _eef ;};_da =int (_fae )<<1;};if _edg > -2&&_edg < _begc .ReferenceBitmap .Height -1{_fae ,_eef =_begc .ReferenceBitmap .GetByte (_gef +_acb +_bc );if _eef !=nil {return _eef ;};_cdb =int (_fae );};_gdce =((_gbc >>5)&0x6)|((_cdb >>2)&0x30)|(_da &0x180)|(_bgc &0xc00);
var _bga int ;for _bcb :=0;_bcb < _bgd ;_bcb =_bga {var _ccc int ;_bga =_bcb +8;var _cdd int ;if _cdd =_fge -_bcb ;_cdd > 8{_cdd =8;};_gc :=_bga < _fge ;_cbe :=_bga < _begc .ReferenceBitmap .Width ;_bbb :=_bc +1;if _bege > 0{_fae =0;if _gc {_fae ,_eef =_begc .RegionBitmap .GetByte (_cg -_bbg +1);
if _eef !=nil {return _eef ;};};_gbc =(_gbc <<8)|int (_fae );};if _edg > 0&&_edg <=_begc .ReferenceBitmap .Height {var _gdd int ;if _cbe {_fae ,_eef =_begc .ReferenceBitmap .GetByte (_gef -_acb +_bbb );if _eef !=nil {return _eef ;};_gdd =int (_fae )<<4;
};_bgc =(_bgc <<8)|_gdd ;};if _edg >=0&&_edg < _begc .ReferenceBitmap .Height {var _de int ;if _cbe {_fae ,_eef =_begc .ReferenceBitmap .GetByte (_gef +_bbb );if _eef !=nil {return _eef ;};_de =int (_fae )<<1;};_da =(_da <<8)|_de ;};if _edg > -2&&_edg < (_begc .ReferenceBitmap .Height -1){_fae =0;
if _cbe {_fae ,_eef =_begc .ReferenceBitmap .GetByte (_gef +_acb +_bbb );if _eef !=nil {return _eef ;};};_cdb =(_cdb <<8)|int (_fae );};for _gaf :=0;_gaf < _cdd ;_gaf ++{var _add int ;_cad :=false ;_ce :=(_gdce >>4)&0x1ff;if _ce ==0x1ff{_cad =true ;_add =1;
}else if _ce ==0x00{_cad =true ;};if !_cad {if _begc ._ggf {_cdc =_begc .overrideAtTemplate0 (_gdce ,_bcb +_gaf ,_bege ,_ccc ,_gaf );_begc ._ef .SetIndex (int32 (_cdc ));}else {_begc ._ef .SetIndex (int32 (_gdce ));};_add ,_eef =_begc ._gb .DecodeBit (_begc ._ef );
if _eef !=nil {return _eef ;};};_efc :=uint (7-_gaf );_ccc |=_add <<_efc ;_gdce =((_gdce &0xdb6)<<1)|_add |(_gbc >>_efc +5)&0x002|((_cdb >>_efc +2)&0x010)|((_da >>_efc )&0x080)|((_bgc >>_efc )&0x400);};_eef =_begc .RegionBitmap .SetByte (_cg ,byte (_ccc ));
if _eef !=nil {return _eef ;};_cg ++;_gef ++;};return nil ;};const (TSymbolDictionary Type =0;TIntermediateTextRegion Type =4;TImmediateTextRegion Type =6;TImmediateLosslessTextRegion Type =7;TPatternDictionary Type =16;TIntermediateHalftoneRegion Type =20;
TImmediateHalftoneRegion Type =22;TImmediateLosslessHalftoneRegion Type =23;TIntermediateGenericRegion Type =36;TImmediateGenericRegion Type =38;TImmediateLosslessGenericRegion Type =39;TIntermediateGenericRefinementRegion Type =40;TImmediateGenericRefinementRegion Type =42;
TImmediateLosslessGenericRefinementRegion Type =43;TPageInformation Type =48;TEndOfPage Type =49;TEndOfStrip Type =50;TEndOfFile Type =51;TProfiles Type =52;TTables Type =53;TExtension Type =62;TBitmap Type =70;);func (_badb *Header )readSegmentDataLength (_eegd _dc .StreamReader )(_debbf error ){_badb .SegmentDataLength ,_debbf =_eegd .ReadBits (32);
if _debbf !=nil {return _debbf ;};_badb .SegmentDataLength &=_f .MaxInt32 ;return nil ;};func (_adgdb *TextRegion )GetRegionBitmap ()(*_gg .Bitmap ,error ){if _adgdb .RegionBitmap !=nil {return _adgdb .RegionBitmap ,nil ;};if !_adgdb .IsHuffmanEncoded {if _cgag :=_adgdb .setCodingStatistics ();
_cgag !=nil {return nil ,_cgag ;};};if _eege :=_adgdb .createRegionBitmap ();_eege !=nil {return nil ,_eege ;};if _gbdec :=_adgdb .decodeSymbolInstances ();_gbdec !=nil {return nil ,_gbdec ;};return _adgdb .RegionBitmap ,nil ;};func (_feg *GenericRegion )decodeTemplate1 (_aae ,_aeag ,_dcbf int ,_gfd ,_affe int )(_egb error ){const _eed ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0031";
var (_bbdc ,_bcac int ;_dab ,_adf int ;_bbgec byte ;_dge ,_aaea int ;);if _aae >=1{_bbgec ,_egb =_feg .Bitmap .GetByte (_affe );if _egb !=nil {return _ac .Wrap (_egb ,_eed ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_dab =int (_bbgec );};if _aae >=2{_bbgec ,_egb =_feg .Bitmap .GetByte (_affe -_feg .Bitmap .RowStride );
if _egb !=nil {return _ac .Wrap (_egb ,_eed ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_adf =int (_bbgec )<<5;};_bbdc =((_dab >>1)&0x1f8)|((_adf >>1)&0x1e00);for _cfb :=0;_cfb < _dcbf ;_cfb =_dge {var (_fcg byte ;_gff int ;);_dge =_cfb +8;if _ffe :=_aeag -_cfb ;
_ffe > 8{_gff =8;}else {_gff =_ffe ;};if _aae > 0{_dab <<=8;if _dge < _aeag {_bbgec ,_egb =_feg .Bitmap .GetByte (_affe +1);if _egb !=nil {return _ac .Wrap (_egb ,_eed ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_dab |=int (_bbgec );};};if _aae > 1{_adf <<=8;
if _dge < _aeag {_bbgec ,_egb =_feg .Bitmap .GetByte (_affe -_feg .Bitmap .RowStride +1);if _egb !=nil {return _ac .Wrap (_egb ,_eed ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_adf |=int (_bbgec )<<5;};};for _gbdg :=0;_gbdg < _gff ;_gbdg ++{if _feg ._fcc {_bcac =_feg .overrideAtTemplate1 (_bbdc ,_cfb +_gbdg ,_aae ,int (_fcg ),_gbdg );
_feg ._agb .SetIndex (int32 (_bcac ));}else {_feg ._agb .SetIndex (int32 (_bbdc ));};_aaea ,_egb =_feg ._dba .DecodeBit (_feg ._agb );if _egb !=nil {return _ac .Wrap (_egb ,_eed ,"");};_fcg |=byte (_aaea )<<uint (7-_gbdg );_fbgf :=uint (8-_gbdg );_bbdc =((_bbdc &0xefb)<<1)|_aaea |((_dab >>_fbgf )&0x8)|((_adf >>_fbgf )&0x200);
};if _dgf :=_feg .Bitmap .SetByte (_gfd ,_fcg );_dgf !=nil {return _ac .Wrap (_dgf ,_eed ,"");};_gfd ++;_affe ++;};return nil ;};type PatternDictionary struct{_feea _dc .StreamReader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;
GBAtX []int8 ;GBAtY []int8 ;IsMMREncoded bool ;HDTemplate byte ;HdpWidth byte ;HdpHeight byte ;Patterns []*_gg .Bitmap ;GrayMax uint32 ;};const (ORandom OrganizationType =iota ;OSequential ;);func (_cfdbd *SymbolDictionary )getUserTable (_gcgb int )(_dd .Tabler ,error ){var _gbb int ;
for _ ,_effgb :=range _cfdbd .Header .RTSegments {if _effgb .Type ==53{if _gbb ==_gcgb {_eeda ,_gcfb :=_effgb .GetSegmentData ();if _gcfb !=nil {return nil ,_gcfb ;};_affb :=_eeda .(_dd .BasicTabler );return _dd .NewEncodedTable (_affb );};_gbb ++;};};
return nil ,nil ;};type EndOfStripe struct{_ed _dc .StreamReader ;_db int ;};func (_dbg *GenericRefinementRegion )getGrReference ()(*_gg .Bitmap ,error ){segments :=_dbg ._df .RTSegments ;if len (segments )==0{return nil ,_ea .New ("\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0065\u0078is\u0074\u0073");
};_cbf ,_cbc :=segments [0].GetSegmentData ();if _cbc !=nil {return nil ,_cbc ;};_fg ,_aga :=_cbf .(Regioner );if !_aga {return nil ,_d .Errorf ("\u0072\u0065\u0066\u0065\u0072r\u0065\u0064\u0020\u0074\u006f\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_cbf );
};return _fg .GetRegionBitmap ();};func (_addbe *Header )readNumberOfReferredToSegments (_fbae _dc .StreamReader )(uint64 ,error ){const _aac ="\u0072\u0065\u0061\u0064\u004e\u0075\u006d\u0062\u0065\u0072O\u0066\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
_gag ,_faf :=_fbae .ReadBits (3);if _faf !=nil {return 0,_ac .Wrap (_faf ,_aac ,"\u0063\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0072\u0074\u0073");};_gag &=0xf;var _caed []byte ;if _gag <=4{_caed =make ([]byte ,5);for _efcg :=0;_efcg <=4;_efcg ++{_aeae ,_ebg :=_fbae .ReadBit ();
if _ebg !=nil {return 0,_ac .Wrap (_ebg ,_aac ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_caed [_efcg ]=byte (_aeae );};}else {_gag ,_faf =_fbae .ReadBits (29);if _faf !=nil {return 0,_faf ;};_gag &=_f .MaxInt32 ;_bfb :=(_gag +8)>>3;
_bfb <<=3;_caed =make ([]byte ,_bfb );var _dcgb uint64 ;for _dcgb =0;_dcgb < _bfb ;_dcgb ++{_bedaf ,_fcab :=_fbae .ReadBit ();if _fcab !=nil {return 0,_ac .Wrap (_fcab ,_aac ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_caed [_dcgb ]=byte (_bedaf );
};};return _gag ,nil ;};func (_aeba *PatternDictionary )readGrayMax ()error {_adcf ,_eggc :=_aeba ._feea .ReadBits (32);if _eggc !=nil {return _eggc ;};_aeba .GrayMax =uint32 (_adcf &_f .MaxUint32 );return nil ;};func (_begb *SymbolDictionary )setSymbolsArray ()error {if _begb ._aefe ==nil {if _bgef :=_begb .retrieveImportSymbols ();
_bgef !=nil {return _bgef ;};};if _begb ._gadb ==nil {_begb ._gadb =append (_begb ._gadb ,_begb ._aefe ...);};return nil ;};func (_ccb *PageInformationSegment )checkInput ()error {if _ccb .PageBMHeight ==_f .MaxInt32 {if !_ccb .IsStripe {_be .Log .Debug ("P\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0053\u0065\u0067me\u006e\u0074\u002e\u0049s\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0073\u0068ou\u006c\u0064 \u0062\u0065\u0020\u0074\u0072\u0075\u0065\u002e");
};};return nil ;};func (_ceece *TextRegion )getSymbols ()error {if _ceece .Header .RTSegments !=nil {return _ceece .initSymbols ();};return nil ;};func (_cgee *TextRegion )String ()string {_cbga :=&_g .Builder {};_cbga .WriteString ("\u000a[\u0054E\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u000a");
_cbga .WriteString (_cgee .RegionInfo .String ()+"\u000a");_cbga .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0053br\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0025\u0076\u000a",_cgee .SbrTemplate ));_cbga .WriteString (_d .Sprintf ("\u0009-\u0020S\u0062\u0044\u0073\u004f\u0066f\u0073\u0065t\u003a\u0020\u0025\u0076\u000a",_cgee .SbDsOffset ));
_cbga .WriteString (_d .Sprintf ("\t\u002d \u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0050i\u0078\u0065\u006c\u003a %\u0076\u000a",_cgee .DefaultPixel ));_cbga .WriteString (_d .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0076\u000a",_cgee .CombinationOperator ));
_cbga .WriteString (_d .Sprintf ("\t\u002d \u0049\u0073\u0054\u0072\u0061\u006e\u0073\u0070o\u0073\u0065\u0064\u003a %\u0076\u000a",_cgee .IsTransposed ));_cbga .WriteString (_d .Sprintf ("\u0009\u002d\u0020Re\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0043\u006f\u0072\u006e\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_cgee .ReferenceCorner ));
_cbga .WriteString (_d .Sprintf ("\t\u002d\u0020\u0055\u0073eR\u0065f\u0069\u006e\u0065\u006d\u0065n\u0074\u003a\u0020\u0025\u0076\u000a",_cgee .UseRefinement ));_cbga .WriteString (_d .Sprintf ("\u0009-\u0020\u0049\u0073\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045n\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0076\u000a",_cgee .IsHuffmanEncoded ));
if _cgee .IsHuffmanEncoded {_cbga .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_cgee .SbHuffRSize ));_cbga .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0059:\u0020\u0025\u0076\u000a",_cgee .SbHuffRDY ));
_cbga .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0058:\u0020\u0025\u0076\u000a",_cgee .SbHuffRDX ));_cbga .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069\u0067\u0068\u0074\u003a\u0020\u0025v\u000a",_cgee .SbHuffRDHeight ));
_cbga .WriteString (_d .Sprintf ("\t\u002d\u0020\u0053\u0062Hu\u0066f\u0052\u0044\u0057\u0069\u0064t\u0068\u003a\u0020\u0025\u0076\u000a",_cgee .SbHuffRDWidth ));_cbga .WriteString (_d .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0054\u003a\u0020\u0025\u0076\u000a",_cgee .SbHuffDT ));
_cbga .WriteString (_d .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0053\u003a\u0020\u0025\u0076\u000a",_cgee .SbHuffDS ));_cbga .WriteString (_d .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0046\u0053\u003a\u0020\u0025\u0076\u000a",_cgee .SbHuffFS ));
};_cbga .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_cgee .SbrATX ));_cbga .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0059:\u0020\u0025\u0076\u000a",_cgee .SbrATY ));
_cbga .WriteString (_d .Sprintf ("\u0009\u002d\u0020N\u0075\u006d\u0062\u0065r\u004f\u0066\u0053\u0079\u006d\u0062\u006fl\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_cgee .NumberOfSymbolInstances ));_cbga .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_cgee .SbrATX ));
return _cbga .String ();};func (_bdec *GenericRegion )writeGBAtPixels (_cbg _dc .BinaryWriter )(_bcfa int ,_fcfb error ){const _cea ="\u0077r\u0069t\u0065\u0047\u0042\u0041\u0074\u0050\u0069\u0078\u0065\u006c\u0073";if _bdec .UseMMR {return 0,nil ;};_beeb :=1;
if _bdec .GBTemplate ==0{_beeb =4;}else if _bdec .UseExtTemplates {_beeb =12;};if len (_bdec .GBAtX )!=_beeb {return 0,_ac .Errorf (_cea ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0058\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};if len (_bdec .GBAtY )!=_beeb {return 0,_ac .Errorf (_cea ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0059\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};for _acg :=0;_acg < _beeb ;_acg ++{if _fcfb =_cbg .WriteByte (byte (_bdec .GBAtX [_acg ]));_fcfb !=nil {return _bcfa ,_ac .Wrap (_fcfb ,_cea ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0058");};_bcfa ++;if _fcfb =_cbg .WriteByte (byte (_bdec .GBAtY [_acg ]));
_fcfb !=nil {return _bcfa ,_ac .Wrap (_fcfb ,_cea ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0059");};_bcfa ++;};return _bcfa ,nil ;};func (_ceeda *TextRegion )decodeRdw ()(int64 ,error ){const _aacc ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064w";
if _ceeda .IsHuffmanEncoded {if _ceeda .SbHuffRDWidth ==3{if _ceeda ._gcac ==nil {var (_ecfcf int ;_aefb error ;);if _ceeda .SbHuffFS ==3{_ecfcf ++;};if _ceeda .SbHuffDS ==3{_ecfcf ++;};if _ceeda .SbHuffDT ==3{_ecfcf ++;};_ceeda ._gcac ,_aefb =_ceeda .getUserTable (_ecfcf );
if _aefb !=nil {return 0,_ac .Wrap (_aefb ,_aacc ,"");};};return _ceeda ._gcac .Decode (_ceeda ._dcedc );};_ecag ,_eeae :=_dd .GetStandardTable (14+int (_ceeda .SbHuffRDWidth ));if _eeae !=nil {return 0,_ac .Wrap (_eeae ,_aacc ,"");};return _ecag .Decode (_ceeda ._dcedc );
};_gefb ,_ceeec :=_ceeda ._fgbe .DecodeInt (_ceeda ._ddgdd );if _ceeec !=nil {return 0,_ac .Wrap (_ceeec ,_aacc ,"");};return int64 (_gefb ),nil ;};type GenericRegion struct{_fbg _dc .StreamReader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;
DataLength int64 ;RegionSegment *RegionSegment ;UseExtTemplates bool ;IsTPGDon bool ;GBTemplate byte ;IsMMREncoded bool ;UseMMR bool ;GBAtX []int8 ;GBAtY []int8 ;GBAtOverride []bool ;_fcc bool ;Bitmap *_gg .Bitmap ;_dba *_eac .Decoder ;_agb *_eac .DecoderStats ;
_dfc *_ec .Decoder ;};func (_adcdc *PageInformationSegment )readMaxStripeSize ()error {_bdge ,_aeda :=_adcdc ._agdg .ReadBits (15);if _aeda !=nil {return _aeda ;};_adcdc .MaxStripeSize =uint16 (_bdge &_f .MaxUint16 );return nil ;};func (_ebbg *PageInformationSegment )CombinationOperatorOverrideAllowed ()bool {return _ebbg ._cfdb };
func (_c *EndOfStripe )Init (h *Header ,r _dc .StreamReader )error {_c ._ed =r ;return _c .parseHeader (h ,r );};func (_dbag *GenericRegion )decodeTemplate3 (_fcf ,_dcbg ,_fag int ,_bgaeg ,_aadf int )(_bede error ){const _gabe ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0033";
var (_adb ,_egde int ;_edec int ;_gbcd byte ;_addc ,_gdad int ;);if _fcf >=1{_gbcd ,_bede =_dbag .Bitmap .GetByte (_aadf );if _bede !=nil {return _ac .Wrap (_bede ,_gabe ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_edec =int (_gbcd );};_adb =(_edec >>1)&0x70;
for _bad :=0;_bad < _fag ;_bad =_addc {var (_fdfe byte ;_eff int ;);_addc =_bad +8;if _cgc :=_dcbg -_bad ;_cgc > 8{_eff =8;}else {_eff =_cgc ;};if _fcf >=1{_edec <<=8;if _addc < _dcbg {_gbcd ,_bede =_dbag .Bitmap .GetByte (_aadf +1);if _bede !=nil {return _ac .Wrap (_bede ,_gabe ,"\u0069\u006e\u006e\u0065\u0072\u0020\u002d\u0020\u006c\u0069\u006e\u0065 \u003e\u003d\u0020\u0031");
};_edec |=int (_gbcd );};};for _dgge :=0;_dgge < _eff ;_dgge ++{if _dbag ._fcc {_egde =_dbag .overrideAtTemplate3 (_adb ,_bad +_dgge ,_fcf ,int (_fdfe ),_dgge );_dbag ._agb .SetIndex (int32 (_egde ));}else {_dbag ._agb .SetIndex (int32 (_adb ));};_gdad ,_bede =_dbag ._dba .DecodeBit (_dbag ._agb );
if _bede !=nil {return _ac .Wrap (_bede ,_gabe ,"");};_fdfe |=byte (_gdad )<<byte (7-_dgge );_adb =((_adb &0x1f7)<<1)|_gdad |((_edec >>uint (8-_dgge ))&0x010);};if _cfc :=_dbag .Bitmap .SetByte (_bgaeg ,_fdfe );_cfc !=nil {return _ac .Wrap (_cfc ,_gabe ,"");
};_bgaeg ++;_aadf ++;};return nil ;};func (_dfe *TextRegion )readAmountOfSymbolInstances ()error {_cdgdf ,_cdfcf :=_dfe ._dcedc .ReadBits (32);if _cdfcf !=nil {return _cdfcf ;};_dfe .NumberOfSymbolInstances =uint32 (_cdgdf &_f .MaxUint32 );_cbcgf :=_dfe .RegionInfo .BitmapWidth *_dfe .RegionInfo .BitmapHeight ;
if _cbcgf < _dfe .NumberOfSymbolInstances {_be .Log .Debug ("\u004c\u0069\u006d\u0069t\u0069\u006e\u0067\u0020t\u0068\u0065\u0020n\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020d\u0065\u0063\u006f\u0064e\u0064\u0020\u0073\u0079m\u0062\u006f\u006c\u0020\u0069n\u0073\u0074\u0061\u006e\u0063\u0065\u0073 \u0074\u006f\u0020\u006f\u006ee\u0020\u0070\u0065\u0072\u0020\u0070\u0069\u0078\u0065l\u0020\u0028\u0020\u0025\u0064\u0020\u0069\u006e\u0073\u0074\u0065\u0061\u0064\u0020\u006f\u0066\u0020\u0025\u0064\u0029",_cbcgf ,_dfe .NumberOfSymbolInstances );
_dfe .NumberOfSymbolInstances =_cbcgf ;};return nil ;};func (_fdd *GenericRegion )overrideAtTemplate1 (_dgec ,_gegb ,_gga ,_cgff ,_gedb int )int {_dgec &=0x1FF7;if _fdd .GBAtY [0]==0&&_fdd .GBAtX [0]>=-int8 (_gedb ){_dgec |=(_cgff >>uint (7-(int8 (_gedb )+_fdd .GBAtX [0]))&0x1)<<3;
}else {_dgec |=int (_fdd .getPixel (_gegb +int (_fdd .GBAtX [0]),_gga +int (_fdd .GBAtY [0])))<<3;};return _dgec ;};func (_acd *Header )parse (_dgac Documenter ,_fbgcg _dc .StreamReader ,_bcae int64 ,_aaga OrganizationType )(_fbe error ){const _fgcf ="\u0070\u0061\u0072s\u0065";
_be .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u005b\u0050A\u0052\u0053\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _fbe !=nil {_be .Log .Trace ("\u005b\u0053\u0045GM\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045R\u005d[\u0050A\u0052S\u0045\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_fbe );
}else {_be .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052]\u005bP\u0041\u0052\u0053\u0045\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");};}();_ ,_fbe =_fbgcg .Seek (_bcae ,_eb .SeekStart );
if _fbe !=nil {return _ac .Wrap (_fbe ,_fgcf ,"\u0073\u0065\u0065\u006b\u0020\u0073\u0074\u0061\u0072\u0074");};if _fbe =_acd .readSegmentNumber (_fbgcg );_fbe !=nil {return _ac .Wrap (_fbe ,_fgcf ,"");};if _fbe =_acd .readHeaderFlags ();_fbe !=nil {return _ac .Wrap (_fbe ,_fgcf ,"");
};var _ffef uint64 ;_ffef ,_fbe =_acd .readNumberOfReferredToSegments (_fbgcg );if _fbe !=nil {return _ac .Wrap (_fbe ,_fgcf ,"");};_acd .RTSNumbers ,_fbe =_acd .readReferredToSegmentNumbers (_fbgcg ,int (_ffef ));if _fbe !=nil {return _ac .Wrap (_fbe ,_fgcf ,"");
};_fbe =_acd .readSegmentPageAssociation (_dgac ,_fbgcg ,_ffef ,_acd .RTSNumbers ...);if _fbe !=nil {return _ac .Wrap (_fbe ,_fgcf ,"");};if _acd .Type !=TEndOfFile {if _fbe =_acd .readSegmentDataLength (_fbgcg );_fbe !=nil {return _ac .Wrap (_fbe ,_fgcf ,"");
};};_acd .readDataStartOffset (_fbgcg ,_aaga );_acd .readHeaderLength (_fbgcg ,_bcae );_be .Log .Trace ("\u0025\u0073",_acd );return nil ;};func (_agca *GenericRefinementRegion )String ()string {_bcc :=&_g .Builder {};_bcc .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");
_bcc .WriteString (_agca .RegionInfo .String ()+"\u000a");_bcc .WriteString (_d .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0052\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_agca .IsTPGROn ));_bcc .WriteString (_d .Sprintf ("\u0009-\u0020T\u0065\u006d\u0070\u006c\u0061t\u0065\u0049D\u003a\u0020\u0025\u0076\u000a",_agca .TemplateID ));
_bcc .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_agca .GrAtX ));_bcc .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_agca .GrAtY ));
_bcc .WriteString (_d .Sprintf ("\u0009-\u0020R\u0065\u0066\u0065\u0072\u0065n\u0063\u0065D\u0058\u0020\u0025\u0076\u000a",_agca .ReferenceDX ));_bcc .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0052ef\u0065\u0072\u0065\u006e\u0063\u0044\u0065\u0059\u003a\u0020\u0025\u0076\u000a",_agca .ReferenceDY ));
return _bcc .String ();};func (_ceed *PageInformationSegment )readResolution ()error {_adcd ,_begg :=_ceed ._agdg .ReadBits (32);if _begg !=nil {return _begg ;};_ceed .ResolutionX =int (_adcd &_f .MaxInt32 );_adcd ,_begg =_ceed ._agdg .ReadBits (32);if _begg !=nil {return _begg ;
};_ceed .ResolutionY =int (_adcd &_f .MaxInt32 );return nil ;};func (_cgfd *PageInformationSegment )Size ()int {return 19};func (_edf *Header )writeSegmentPageAssociation (_agcdb _dc .BinaryWriter )(_eddg int ,_fdaf error ){const _cgga ="w\u0072\u0069\u0074\u0065\u0053\u0065g\u006d\u0065\u006e\u0074\u0050\u0061\u0067\u0065\u0041s\u0073\u006f\u0063i\u0061t\u0069\u006f\u006e";
if _edf .pageSize ()!=4{if _fdaf =_agcdb .WriteByte (byte (_edf .PageAssociation ));_fdaf !=nil {return 0,_ac .Wrap (_fdaf ,_cgga ,"\u0070\u0061\u0067\u0065\u0053\u0069\u007a\u0065\u0020\u0021\u003d\u0020\u0034");};return 1,nil ;};_faff :=make ([]byte ,4);
_b .BigEndian .PutUint32 (_faff ,uint32 (_edf .PageAssociation ));if _eddg ,_fdaf =_agcdb .Write (_faff );_fdaf !=nil {return 0,_ac .Wrap (_fdaf ,_cgga ,"\u0034 \u0062y\u0074\u0065\u0020\u0070\u0061g\u0065\u0020n\u0075\u006d\u0062\u0065\u0072");};return _eddg ,nil ;
};func (_agfef *TextRegion )Init (header *Header ,r _dc .StreamReader )error {_agfef .Header =header ;_agfef ._dcedc =r ;_agfef .RegionInfo =NewRegionSegment (_agfef ._dcedc );return _agfef .parseHeader ();};func (_eebef *PatternDictionary )Init (h *Header ,r _dc .StreamReader )error {_eebef ._feea =r ;
return _eebef .parseHeader ();};func (_dbae *PageInformationSegment )Init (h *Header ,r _dc .StreamReader )(_gce error ){_dbae ._agdg =r ;if _gce =_dbae .parseHeader ();_gce !=nil {return _ac .Wrap (_gce ,"P\u0061\u0067\u0065\u0049\u006e\u0066o\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065g\u006d\u0065\u006et\u002eI\u006e\u0069\u0074","");
};return nil ;};func (_fdba *TextRegion )readUseRefinement ()error {if !_fdba .UseRefinement ||_fdba .SbrTemplate !=0{return nil ;};var (_bbgecd byte ;_edfag error ;);_fdba .SbrATX =make ([]int8 ,2);_fdba .SbrATY =make ([]int8 ,2);_bbgecd ,_edfag =_fdba ._dcedc .ReadByte ();
if _edfag !=nil {return _edfag ;};_fdba .SbrATX [0]=int8 (_bbgecd );_bbgecd ,_edfag =_fdba ._dcedc .ReadByte ();if _edfag !=nil {return _edfag ;};_fdba .SbrATY [0]=int8 (_bbgecd );_bbgecd ,_edfag =_fdba ._dcedc .ReadByte ();if _edfag !=nil {return _edfag ;
};_fdba .SbrATX [1]=int8 (_bbgecd );_bbgecd ,_edfag =_fdba ._dcedc .ReadByte ();if _edfag !=nil {return _edfag ;};_fdba .SbrATY [1]=int8 (_bbgecd );return nil ;};type Regioner interface{GetRegionBitmap ()(*_gg .Bitmap ,error );GetRegionInfo ()*RegionSegment ;
};func (_bfbc *TextRegion )decodeIds ()(int64 ,error ){const _fgff ="\u0064e\u0063\u006f\u0064\u0065\u0049\u0064s";if _bfbc .IsHuffmanEncoded {if _bfbc .SbHuffDS ==3{if _bfbc ._dage ==nil {_efbf :=0;if _bfbc .SbHuffFS ==3{_efbf ++;};var _afge error ;_bfbc ._dage ,_afge =_bfbc .getUserTable (_efbf );
if _afge !=nil {return 0,_ac .Wrap (_afge ,_fgff ,"");};};return _bfbc ._dage .Decode (_bfbc ._dcedc );};_deac ,_fdgc :=_dd .GetStandardTable (8+int (_bfbc .SbHuffDS ));if _fdgc !=nil {return 0,_ac .Wrap (_fdgc ,_fgff ,"");};return _deac .Decode (_bfbc ._dcedc );
};_agfd ,_fdgdf :=_bfbc ._fgbe .DecodeInt (_bfbc ._eefc );if _fdgdf !=nil {return 0,_ac .Wrap (_fdgdf ,_fgff ,"\u0063\u0078\u0049\u0041\u0044\u0053");};return int64 (_agfd ),nil ;};type Type int ;func (_defd *Header )readReferredToSegmentNumbers (_cgfb _dc .StreamReader ,_ddde int )([]int ,error ){const _dfde ="\u0072\u0065\u0061\u0064R\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053e\u0067m\u0065\u006e\u0074\u004e\u0075\u006d\u0062e\u0072\u0073";
_cfcf :=make ([]int ,_ddde );if _ddde > 0{_defd .RTSegments =make ([]*Header ,_ddde );var (_fdgb uint64 ;_ccgc error ;);for _dgfd :=0;_dgfd < _ddde ;_dgfd ++{_fdgb ,_ccgc =_cgfb .ReadBits (byte (_defd .referenceSize ())<<3);if _ccgc !=nil {return nil ,_ac .Wrapf (_ccgc ,_dfde ,"\u0027\u0025\u0064\u0027 \u0072\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0020\u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u0075\u006db\u0065\u0072",_dgfd );
};_cfcf [_dgfd ]=int (_fdgb &_f .MaxInt32 );};};return _cfcf ,nil ;};var _ SegmentEncoder =&GenericRegion {};func (_gda *GenericRegion )computeSegmentDataStructure ()error {_gda .DataOffset =_gda ._fbg .StreamPosition ();_gda .DataHeaderLength =_gda .DataOffset -_gda .DataHeaderOffset ;
_gda .DataLength =int64 (_gda ._fbg .Length ())-_gda .DataHeaderLength ;return nil ;};func (_ecba *HalftoneRegion )computeY (_gbec ,_adbc int )int {return _ecba .shiftAndFill (int (_ecba .HGridY )+_gbec *int (_ecba .HRegionX )-_adbc *int (_ecba .HRegionY ));
};func (_gbcg *TextRegion )decodeIb (_effe ,_eagg int64 )(*_gg .Bitmap ,error ){const _agdb ="\u0064\u0065\u0063\u006f\u0064\u0065\u0049\u0062";var (_bdgee error ;_caff *_gg .Bitmap ;);if _effe ==0{if int (_eagg )> len (_gbcg .Symbols )-1{return nil ,_ac .Error (_agdb ,"\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0049\u0042\u0020\u0062\u0069\u0074\u006d\u0061\u0070\u002e\u0020\u0069\u006e\u0064\u0065x\u0020\u006f\u0075\u0074\u0020o\u0066\u0020r\u0061\u006e\u0067\u0065");
};return _gbcg .Symbols [int (_eagg )],nil ;};var _eabf ,_ccfab ,_gfgg ,_cacfa int64 ;_eabf ,_bdgee =_gbcg .decodeRdw ();if _bdgee !=nil {return nil ,_ac .Wrap (_bdgee ,_agdb ,"");};_ccfab ,_bdgee =_gbcg .decodeRdh ();if _bdgee !=nil {return nil ,_ac .Wrap (_bdgee ,_agdb ,"");
};_gfgg ,_bdgee =_gbcg .decodeRdx ();if _bdgee !=nil {return nil ,_ac .Wrap (_bdgee ,_agdb ,"");};_cacfa ,_bdgee =_gbcg .decodeRdy ();if _bdgee !=nil {return nil ,_ac .Wrap (_bdgee ,_agdb ,"");};if _gbcg .IsHuffmanEncoded {if _ ,_bdgee =_gbcg .decodeSymInRefSize ();
_bdgee !=nil {return nil ,_ac .Wrap (_bdgee ,_agdb ,"");};_gbcg ._dcedc .Align ();};_dade :=_gbcg .Symbols [_eagg ];_cfgec :=uint32 (_dade .Width );_agafe :=uint32 (_dade .Height );_efdcc :=int32 (uint32 (_eabf )>>1)+int32 (_gfgg );_daba :=int32 (uint32 (_ccfab )>>1)+int32 (_cacfa );
if _gbcg ._aeacbd ==nil {_gbcg ._aeacbd =_fada (_gbcg ._dcedc ,nil );};_gbcg ._aeacbd .setParameters (_gbcg ._cace ,_gbcg ._fgbe ,_gbcg .SbrTemplate ,_cfgec +uint32 (_eabf ),_agafe +uint32 (_ccfab ),_dade ,_efdcc ,_daba ,false ,_gbcg .SbrATX ,_gbcg .SbrATY );
_caff ,_bdgee =_gbcg ._aeacbd .GetRegionBitmap ();if _bdgee !=nil {return nil ,_ac .Wrap (_bdgee ,_agdb ,"\u0067\u0072\u0066");};if _gbcg .IsHuffmanEncoded {_gbcg ._dcedc .Align ();};return _caff ,nil ;};func (_edbd *TextRegion )decodeRdh ()(int64 ,error ){const _ffgbc ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064h";
if _edbd .IsHuffmanEncoded {if _edbd .SbHuffRDHeight ==3{if _edbd ._geba ==nil {var (_cggb int ;_agfb error ;);if _edbd .SbHuffFS ==3{_cggb ++;};if _edbd .SbHuffDS ==3{_cggb ++;};if _edbd .SbHuffDT ==3{_cggb ++;};if _edbd .SbHuffRDWidth ==3{_cggb ++;};
_edbd ._geba ,_agfb =_edbd .getUserTable (_cggb );if _agfb !=nil {return 0,_ac .Wrap (_agfb ,_ffgbc ,"");};};return _edbd ._geba .Decode (_edbd ._dcedc );};_fcgce ,_ebcb :=_dd .GetStandardTable (14+int (_edbd .SbHuffRDHeight ));if _ebcb !=nil {return 0,_ac .Wrap (_ebcb ,_ffgbc ,"");
};return _fcgce .Decode (_edbd ._dcedc );};_ffbe ,_afgbe :=_edbd ._fgbe .DecodeInt (_edbd ._aaaf );if _afgbe !=nil {return 0,_ac .Wrap (_afgbe ,_ffgbc ,"");};return int64 (_ffbe ),nil ;};func (_deefa *PageInformationSegment )encodeStripingInformation (_cgce _dc .BinaryWriter )(_gcbbb int ,_gcba error ){const _begac ="\u0065n\u0063\u006f\u0064\u0065S\u0074\u0072\u0069\u0070\u0069n\u0067I\u006ef\u006f\u0072\u006d\u0061\u0074\u0069\u006fn";
if !_deefa .IsStripe {if _gcbbb ,_gcba =_cgce .Write ([]byte {0x00,0x00});_gcba !=nil {return 0,_ac .Wrap (_gcba ,_begac ,"n\u006f\u0020\u0073\u0074\u0072\u0069\u0070\u0069\u006e\u0067");};return _gcbbb ,nil ;};_dgeff :=make ([]byte ,2);_b .BigEndian .PutUint16 (_dgeff ,_deefa .MaxStripeSize |1<<15);
if _gcbbb ,_gcba =_cgce .Write (_dgeff );_gcba !=nil {return 0,_ac .Wrapf (_gcba ,_begac ,"\u0073\u0074\u0072i\u0070\u0069\u006e\u0067\u003a\u0020\u0025\u0064",_deefa .MaxStripeSize );};return _gcbbb ,nil ;};func (_dcec *SymbolDictionary )addSymbol (_cddea Regioner )error {_acfea ,_addg :=_cddea .GetRegionBitmap ();
if _addg !=nil {return _addg ;};_dcec ._dfgg [_dcec ._bgdb ]=_acfea ;_dcec ._gadb =append (_dcec ._gadb ,_acfea );_be .Log .Trace ("\u005b\u0053YM\u0042\u004f\u004c \u0044\u0049\u0043\u0054ION\u0041RY\u005d\u0020\u0041\u0064\u0064\u0065\u0064 s\u0079\u006d\u0062\u006f\u006c\u003a\u0020%\u0073",_acfea );
return nil ;};type template0 struct{};func (_edbf *SymbolDictionary )setCodingStatistics ()error {if _edbf ._bagc ==nil {_edbf ._bagc =_eac .NewStats (512,1);};if _edbf ._bbee ==nil {_edbf ._bbee =_eac .NewStats (512,1);};if _edbf ._bdfe ==nil {_edbf ._bdfe =_eac .NewStats (512,1);
};if _edbf ._eedd ==nil {_edbf ._eedd =_eac .NewStats (512,1);};if _edbf ._daeg ==nil {_edbf ._daeg =_eac .NewStats (512,1);};if _edbf .UseRefinementAggregation &&_edbf ._cffd ==nil {_edbf ._cffd =_eac .NewStats (1<<uint (_edbf ._ceb ),1);_edbf ._ecgb =_eac .NewStats (512,1);
_edbf ._eedg =_eac .NewStats (512,1);};if _edbf ._gdea ==nil {_edbf ._gdea =_eac .NewStats (65536,1);};if _edbf ._aaad ==nil {var _addgd error ;_edbf ._aaad ,_addgd =_eac .New (_edbf ._dbge );if _addgd !=nil {return _addgd ;};};return nil ;};func (_bdgbe *TextRegion )decodeCurrentT ()(int64 ,error ){if _bdgbe .SbStrips !=1{if _bdgbe .IsHuffmanEncoded {_dfgf ,_dbfc :=_bdgbe ._dcedc .ReadBits (byte (_bdgbe .LogSBStrips ));
return int64 (_dfgf ),_dbfc ;};_ceee ,_cdgc :=_bdgbe ._fgbe .DecodeInt (_bdgbe ._gdeg );if _cdgc !=nil {return 0,_cdgc ;};return int64 (_ceee ),nil ;};return 0,nil ;};func (_dee *HalftoneRegion )checkInput ()error {if _dee .IsMMREncoded {if _dee .HTemplate !=0{_be .Log .Debug ("\u0048\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030",_dee .HTemplate );
};if _dee .HSkipEnabled {_be .Log .Debug ("\u0048\u0053\u006b\u0069\u0070\u0045\u006e\u0061\u0062\u006c\u0065\u0064\u0020\u0030\u0020\u0025\u0076\u0020(\u0073\u0068\u006f\u0075\u006c\u0064\u0020c\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020v\u0061\u006c\u0075\u0065\u0020\u0066\u0061\u006c\u0073\u0065\u0029",_dee .HSkipEnabled );
};};return nil ;};func (_egga *PageInformationSegment )String ()string {_befe :=&_g .Builder {};_befe .WriteString ("\u000a\u005b\u0050\u0041G\u0045\u002d\u0049\u004e\u0046\u004f\u0052\u004d\u0041\u0054I\u004fN\u002d\u0053\u0045\u0047\u004d\u0045\u004eT\u005d\u000a");
_befe .WriteString (_d .Sprintf ("\u0009\u002d \u0042\u004d\u0048e\u0069\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u000a",_egga .PageBMHeight ));_befe .WriteString (_d .Sprintf ("\u0009-\u0020B\u004d\u0057\u0069\u0064\u0074\u0068\u003a\u0020\u0025\u0064\u000a",_egga .PageBMWidth ));
_befe .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0058\u003a\u0020\u0025\u0064\u000a",_egga .ResolutionX ));_befe .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0059\u003a\u0020\u0025\u0064\u000a",_egga .ResolutionY ));
_befe .WriteString (_d .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0073\u000a",_egga ._feef ));_befe .WriteString (_d .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006eO\u0070\u0065\u0072\u0061\u0074\u006f\u0072O\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025v\u000a",_egga ._cfdb ));
_befe .WriteString (_d .Sprintf ("\u0009-\u0020I\u0073\u004c\u006f\u0073\u0073l\u0065\u0073s\u003a\u0020\u0025\u0076\u000a",_egga .IsLossless ));_befe .WriteString (_d .Sprintf ("\u0009\u002d\u0020R\u0065\u0071\u0075\u0069r\u0065\u0073\u0041\u0075\u0078\u0069\u006ci\u0061\u0072\u0079\u0042\u0075\u0066\u0066\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_egga ._gede ));
_befe .WriteString (_d .Sprintf ("\u0009\u002d\u0020M\u0069\u0067\u0068\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0052e\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0076\u000a",_egga ._bage ));_befe .WriteString (_d .Sprintf ("\u0009\u002d\u0020\u0049\u0073\u0053\u0074\u0072\u0069\u0070\u0065\u0064:\u0020\u0025\u0076\u000a",_egga .IsStripe ));
_befe .WriteString (_d .Sprintf ("\t\u002d\u0020\u004d\u0061xS\u0074r\u0069\u0070\u0065\u0053\u0069z\u0065\u003a\u0020\u0025\u0076\u000a",_egga .MaxStripeSize ));return _befe .String ();};func (_egd *GenericRegion )Encode (w _dc .BinaryWriter )(_adef int ,_cda error ){const _fdga ="G\u0065n\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069o\u006e\u002e\u0045\u006eco\u0064\u0065";
if _egd .Bitmap ==nil {return 0,_ac .Error (_fdga ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};_efa ,_cda :=_egd .RegionSegment .Encode (w );if _cda !=nil {return 0,_ac .Wrap (_cda ,_fdga ,"\u0052\u0065\u0067\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};_adef +=_efa ;if _cda =w .SkipBits (4);_cda !=nil {return _adef ,_ac .Wrap (_cda ,_fdga ,"\u0073k\u0069p\u0020\u0072\u0065\u0073\u0065r\u0076\u0065d\u0020\u0062\u0069\u0074\u0073");};var _gcc int ;if _egd .IsTPGDon {_gcc =1;};if _cda =w .WriteBit (_gcc );
_cda !=nil {return _adef ,_ac .Wrap (_cda ,_fdga ,"\u0074\u0070\u0067\u0064\u006f\u006e");};_gcc =0;if _cda =w .WriteBit (int (_egd .GBTemplate >>1)&0x01);_cda !=nil {return _adef ,_ac .Wrap (_cda ,_fdga ,"f\u0069r\u0073\u0074\u0020\u0067\u0062\u0074\u0065\u006dp\u006c\u0061\u0074\u0065 b\u0069\u0074");
};if _cda =w .WriteBit (int (_egd .GBTemplate )&0x01);_cda !=nil {return _adef ,_ac .Wrap (_cda ,_fdga ,"s\u0065\u0063\u006f\u006ed \u0067b\u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u0062\u0069\u0074");};if _egd .UseMMR {_gcc =1;};if _cda =w .WriteBit (_gcc );
_cda !=nil {return _adef ,_ac .Wrap (_cda ,_fdga ,"u\u0073\u0065\u0020\u004d\u004d\u0052\u0020\u0062\u0069\u0074");};_adef ++;if _efa ,_cda =_egd .writeGBAtPixels (w );_cda !=nil {return _adef ,_ac .Wrap (_cda ,_fdga ,"");};_adef +=_efa ;_dac :=_aca .New ();
if _cda =_dac .EncodeBitmap (_egd .Bitmap ,_egd .IsTPGDon );_cda !=nil {return _adef ,_ac .Wrap (_cda ,_fdga ,"");};_dac .Final ();var _dcab int64 ;if _dcab ,_cda =_dac .WriteTo (w );_cda !=nil {return _adef ,_ac .Wrap (_cda ,_fdga ,"");};_adef +=int (_dcab );
return _adef ,nil ;};func (_ffeb *SymbolDictionary )decodeAggregate (_eccbg ,_ecabb uint32 )error {var (_agea int64 ;_bbdf error ;);if _ffeb .IsHuffmanEncoded {_agea ,_bbdf =_ffeb .huffDecodeRefAggNInst ();if _bbdf !=nil {return _bbdf ;};}else {_fabe ,_dabd :=_ffeb ._aaad .DecodeInt (_ffeb ._eedd );
if _dabd !=nil {return _dabd ;};_agea =int64 (_fabe );};if _agea > 1{return _ffeb .decodeThroughTextRegion (_eccbg ,_ecabb ,uint32 (_agea ));}else if _agea ==1{return _ffeb .decodeRefinedSymbol (_eccbg ,_ecabb );};return nil ;};func (_dfdc *SymbolDictionary )decodeNewSymbols (_gcfg ,_ddgc uint32 ,_gedeb *_gg .Bitmap ,_accb ,_cfad int32 )error {if _dfdc ._dgfa ==nil {_dfdc ._dgfa =_fada (_dfdc ._dbge ,nil );
if _dfdc ._aaad ==nil {var _acgc error ;_dfdc ._aaad ,_acgc =_eac .New (_dfdc ._dbge );if _acgc !=nil {return _acgc ;};};if _dfdc ._gdea ==nil {_dfdc ._gdea =_eac .NewStats (65536,1);};};_dfdc ._dgfa .setParameters (_dfdc ._gdea ,_dfdc ._aaad ,_dfdc .SdrTemplate ,_gcfg ,_ddgc ,_gedeb ,_accb ,_cfad ,false ,_dfdc .SdrATX ,_dfdc .SdrATY );
return _dfdc .addSymbol (_dfdc ._dgfa );};func (_adcg *SymbolDictionary )setExportedSymbols (_gcga []int ){for _ffbg :=uint32 (0);_ffbg < _adcg ._bgcfb +_adcg .NumberOfNewSymbols ;_ffbg ++{if _gcga [_ffbg ]==1{var _dcbe *_gg .Bitmap ;if _ffbg < _adcg ._bgcfb {_dcbe =_adcg ._aefe [_ffbg ];
}else {_dcbe =_adcg ._dfgg [_ffbg -_adcg ._bgcfb ];};_be .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u002d\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u0020\u0041\u0064\u0064 E\u0078\u0070\u006fr\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027%\u0073\u0027",_dcbe );
_adcg ._ffac =append (_adcg ._ffac ,_dcbe );};};};func (_gffc *HalftoneRegion )computeGrayScalePlanes (_ebea []*_gg .Bitmap ,_cceb int )([][]int ,error ){_eccb :=make ([][]int ,_gffc .HGridHeight );for _caa :=0;_caa < len (_eccb );_caa ++{_eccb [_caa ]=make ([]int ,_gffc .HGridWidth );
};for _dgef :=0;_dgef < int (_gffc .HGridHeight );_dgef ++{for _afce :=0;_afce < int (_gffc .HGridWidth );_afce +=8{var _deef int ;if _deg :=int (_gffc .HGridWidth )-_afce ;_deg > 8{_deef =8;}else {_deef =_deg ;};_ecaa :=_ebea [0].GetByteIndex (_afce ,_dgef );
for _gffa :=0;_gffa < _deef ;_gffa ++{_gcdd :=_gffa +_afce ;_eccb [_dgef ][_gcdd ]=0;for _daae :=0;_daae < _cceb ;_daae ++{_eedb ,_ddgd :=_ebea [_daae ].GetByte (_ecaa );if _ddgd !=nil {return nil ,_ddgd ;};_bedeb :=_eedb >>uint (7-_gcdd &7);_ccac :=_bedeb &1;
_bgce :=1<<uint (_daae );_beb :=int (_ccac )*_bgce ;_eccb [_dgef ][_gcdd ]+=_beb ;};};};};return _eccb ,nil ;};func (_gbbc *TextRegion )decodeID ()(int64 ,error ){if _gbbc .IsHuffmanEncoded {if _gbbc ._bgaf ==nil {_edfa ,_cadf :=_gbbc ._dcedc .ReadBits (byte (_gbbc ._fddg ));
return int64 (_edfa ),_cadf ;};return _gbbc ._bgaf .Decode (_gbbc ._dcedc );};return _gbbc ._fgbe .DecodeIAID (uint64 (_gbbc ._fddg ),_gbbc ._egce );};func (_edda *TextRegion )decodeDfs ()(int64 ,error ){if _edda .IsHuffmanEncoded {if _edda .SbHuffFS ==3{if _edda ._bfbd ==nil {var _fbba error ;
_edda ._bfbd ,_fbba =_edda .getUserTable (0);if _fbba !=nil {return 0,_fbba ;};};return _edda ._bfbd .Decode (_edda ._dcedc );};_cega ,_ddfe :=_dd .GetStandardTable (6+int (_edda .SbHuffFS ));if _ddfe !=nil {return 0,_ddfe ;};return _cega .Decode (_edda ._dcedc );
};_bfed ,_ccee :=_edda ._fgbe .DecodeInt (_edda ._aaadc );if _ccee !=nil {return 0,_ccee ;};return int64 (_bfed ),nil ;};func (_ggca *GenericRegion )GetRegionBitmap ()(_aaf *_gg .Bitmap ,_edae error ){if _ggca .Bitmap !=nil {return _ggca .Bitmap ,nil ;
};if _ggca .IsMMREncoded {if _ggca ._dfc ==nil {_ggca ._dfc ,_edae =_ec .New (_ggca ._fbg ,int (_ggca .RegionSegment .BitmapWidth ),int (_ggca .RegionSegment .BitmapHeight ),_ggca .DataOffset ,_ggca .DataLength );if _edae !=nil {return nil ,_edae ;};};
_ggca .Bitmap ,_edae =_ggca ._dfc .UncompressMMR ();return _ggca .Bitmap ,_edae ;};if _edae =_ggca .updateOverrideFlags ();_edae !=nil {return nil ,_edae ;};var _dcb int ;if _ggca ._dba ==nil {_ggca ._dba ,_edae =_eac .New (_ggca ._fbg );if _edae !=nil {return nil ,_edae ;
};};if _ggca ._agb ==nil {_ggca ._agb =_eac .NewStats (65536,1);};_ggca .Bitmap =_gg .New (int (_ggca .RegionSegment .BitmapWidth ),int (_ggca .RegionSegment .BitmapHeight ));_cegb :=int (uint32 (_ggca .Bitmap .Width +7)&(^uint32 (7)));for _ecb :=0;_ecb < _ggca .Bitmap .Height ;
_ecb ++{if _ggca .IsTPGDon {var _edd int ;_edd ,_edae =_ggca .decodeSLTP ();if _edae !=nil {return nil ,_edae ;};_dcb ^=_edd ;};if _dcb ==1{if _ecb > 0{if _edae =_ggca .copyLineAbove (_ecb );_edae !=nil {return nil ,_edae ;};};}else {if _edae =_ggca .decodeLine (_ecb ,_ggca .Bitmap .Width ,_cegb );
_edae !=nil {return nil ,_edae ;};};};return _ggca .Bitmap ,nil ;};func (_acde *PageInformationSegment )CombinationOperator ()_gg .CombinationOperator {return _acde ._feef ;};type Documenter interface{GetPage (int )(Pager ,error );GetGlobalSegment (int )(*Header ,error );
};func (_eaaa *TextRegion )InitEncode (globalSymbolsMap ,localSymbolsMap map[int ]int ,comps []int ,inLL *_gg .Points ,symbols *_gg .Bitmaps ,classIDs *_fb .IntSlice ,boxes *_gg .Boxes ,width ,height ,symBits int ){_eaaa .RegionInfo =&RegionSegment {BitmapWidth :uint32 (width ),BitmapHeight :uint32 (height )};
_eaaa ._faeef =globalSymbolsMap ;_eaaa ._eagf =localSymbolsMap ;_eaaa ._dda =comps ;_eaaa ._eagd =inLL ;_eaaa ._dbfgf =symbols ;_eaaa ._ded =classIDs ;_eaaa ._gcda =boxes ;_eaaa ._dbdgg =symBits ;};func (_fbeb *TextRegion )setCodingStatistics ()error {if _fbeb ._ceefd ==nil {_fbeb ._ceefd =_eac .NewStats (512,1);
};if _fbeb ._aaadc ==nil {_fbeb ._aaadc =_eac .NewStats (512,1);};if _fbeb ._eefc ==nil {_fbeb ._eefc =_eac .NewStats (512,1);};if _fbeb ._gdeg ==nil {_fbeb ._gdeg =_eac .NewStats (512,1);};if _fbeb ._bdaa ==nil {_fbeb ._bdaa =_eac .NewStats (512,1);};
if _fbeb ._ddgdd ==nil {_fbeb ._ddgdd =_eac .NewStats (512,1);};if _fbeb ._aaaf ==nil {_fbeb ._aaaf =_eac .NewStats (512,1);};if _fbeb ._egce ==nil {_fbeb ._egce =_eac .NewStats (1<<uint (_fbeb ._fddg ),1);};if _fbeb ._effgc ==nil {_fbeb ._effgc =_eac .NewStats (512,1);
};if _fbeb ._faga ==nil {_fbeb ._faga =_eac .NewStats (512,1);};if _fbeb ._fgbe ==nil {var _gaec error ;_fbeb ._fgbe ,_gaec =_eac .New (_fbeb ._dcedc );if _gaec !=nil {return _gaec ;};};return nil ;};func (_bfea *SymbolDictionary )Encode (w _dc .BinaryWriter )(_abc int ,_dacc error ){const _dfac ="\u0053\u0079\u006dbo\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0045\u006e\u0063\u006f\u0064\u0065";
if _bfea ==nil {return 0,_ac .Error (_dfac ,"\u0073\u0079m\u0062\u006f\u006c\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066in\u0065\u0064");};if _abc ,_dacc =_bfea .encodeFlags (w );_dacc !=nil {return _abc ,_ac .Wrap (_dacc ,_dfac ,"");
};_becb ,_dacc :=_bfea .encodeATFlags (w );if _dacc !=nil {return _abc ,_ac .Wrap (_dacc ,_dfac ,"");};_abc +=_becb ;if _becb ,_dacc =_bfea .encodeRefinementATFlags (w );_dacc !=nil {return _abc ,_ac .Wrap (_dacc ,_dfac ,"");};_abc +=_becb ;if _becb ,_dacc =_bfea .encodeNumSyms (w );
_dacc !=nil {return _abc ,_ac .Wrap (_dacc ,_dfac ,"");};_abc +=_becb ;if _becb ,_dacc =_bfea .encodeSymbols (w );_dacc !=nil {return _abc ,_ac .Wrap (_dacc ,_dfac ,"");};_abc +=_becb ;return _abc ,nil ;};func (_ggec *TableSegment )StreamReader ()_dc .StreamReader {return _ggec ._bbcc };
func (_efgf *TextRegion )createRegionBitmap ()error {_efgf .RegionBitmap =_gg .New (int (_efgf .RegionInfo .BitmapWidth ),int (_efgf .RegionInfo .BitmapHeight ));if _efgf .DefaultPixel !=0{_efgf .RegionBitmap .SetDefaultPixel ();};return nil ;};func (_degd *Header )subInputReader ()(_dc .StreamReader ,error ){return _dc .NewSubstreamReader (_degd .Reader ,_degd .SegmentDataStartOffset ,_degd .SegmentDataLength );
};type templater interface{form (_dce ,_bfg ,_bbgc ,_fad ,_cafa int16 )int16 ;setIndex (_dea *_eac .DecoderStats );};