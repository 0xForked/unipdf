//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package segments ;import (_gf "encoding/binary";_a "errors";_b "fmt";_gfd "github.com/unidoc/unipdf/v3/common";_d "github.com/unidoc/unipdf/v3/internal/bitwise";_ag "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_ga "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";_gg "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/arithmetic";_bb "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/huffman";_eg "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/mmr";_fc "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/arithmetic";_gd "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_ff "github.com/unidoc/unipdf/v3/internal/jbig2/internal";_ac "golang.org/x/xerrors";_f "image";_cf "io";_g "math";_gb "strings";_e "time";);func (_fdda *SymbolDictionary )decodeHeightClassDeltaHeightWithHuffman ()(int64 ,error ){switch _fdda .SdHuffDecodeHeightSelection {case 0:_aedeb ,_edfb :=_bb .GetStandardTable (4);if _edfb !=nil {return 0,_edfb ;};return _aedeb .Decode (_fdda ._cage );case 1:_dceg ,_cfdc :=_bb .GetStandardTable (5);if _cfdc !=nil {return 0,_cfdc ;};return _dceg .Decode (_fdda ._cage );case 3:if _fdda ._feef ==nil {_daag ,_gaac :=_bb .GetStandardTable (0);if _gaac !=nil {return 0,_gaac ;};_fdda ._feef =_daag ;};return _fdda ._feef .Decode (_fdda ._cage );};return 0,nil ;};func (_egge *TextRegion )GetRegionBitmap ()(*_ga .Bitmap ,error ){if _egge .RegionBitmap !=nil {return _egge .RegionBitmap ,nil ;};if !_egge .IsHuffmanEncoded {if _bbgfgc :=_egge .setCodingStatistics ();_bbgfgc !=nil {return nil ,_bbgfgc ;};};if _dbdbe :=_egge .createRegionBitmap ();_dbdbe !=nil {return nil ,_dbdbe ;};if _fcg :=_egge .decodeSymbolInstances ();_fcg !=nil {return nil ,_fcg ;};return _egge .RegionBitmap ,nil ;};func (_cbg *GenericRefinementRegion )parseHeader ()(_eedc error ){_gfd .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0048e\u0061\u0064e\u0072\u002e\u002e\u002e");_cfg :=_e .Now ();defer func (){if _eedc ==nil {_gfd .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045G\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020h\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0069\u006e\u0069\u0073\u0068id\u0020\u0069\u006e\u003a\u0020\u0025\u0064\u0020\u006e\u0073",_e .Since (_cfg ).Nanoseconds ());}else {_gfd .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0068\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0073",_eedc );};}();if _eedc =_cbg .RegionInfo .parseHeader ();_eedc !=nil {return _eedc ;};_ ,_eedc =_cbg ._cb .ReadBits (6);if _eedc !=nil {return _eedc ;};_cbg .IsTPGROn ,_eedc =_cbg ._cb .ReadBool ();if _eedc !=nil {return _eedc ;};var _ecf int ;_ecf ,_eedc =_cbg ._cb .ReadBit ();if _eedc !=nil {return _eedc ;};_cbg .TemplateID =int8 (_ecf );switch _cbg .TemplateID {case 0:_cbg .Template =_cbg ._cg ;if _eedc =_cbg .readAtPixels ();_eedc !=nil {return ;};case 1:_cbg .Template =_cbg ._dg ;};return nil ;};func (_aafc *TextRegion )Init (header *Header ,r _d .StreamReader )error {_aafc .Header =header ;_aafc ._ccff =r ;_aafc .RegionInfo =NewRegionSegment (_aafc ._ccff );return _aafc .parseHeader ();};func NewRegionSegment (r _d .StreamReader )*RegionSegment {return &RegionSegment {_gfec :r }};func (_aeeaf *SymbolDictionary )setCodingStatistics ()error {if _aeeaf ._begf ==nil {_aeeaf ._begf =_gg .NewStats (512,1);};if _aeeaf ._bcac ==nil {_aeeaf ._bcac =_gg .NewStats (512,1);};if _aeeaf ._bbcg ==nil {_aeeaf ._bbcg =_gg .NewStats (512,1);};if _aeeaf ._caad ==nil {_aeeaf ._caad =_gg .NewStats (512,1);};if _aeeaf ._acbgg ==nil {_aeeaf ._acbgg =_gg .NewStats (512,1);};if _aeeaf .UseRefinementAggregation &&_aeeaf ._gggg ==nil {_aeeaf ._gggg =_gg .NewStats (1<<uint (_aeeaf ._age ),1);_aeeaf ._dbad =_gg .NewStats (512,1);_aeeaf ._befd =_gg .NewStats (512,1);};if _aeeaf ._bdcd ==nil {_aeeaf ._bdcd =_gg .NewStats (65536,1);};if _aeeaf ._fdfe ==nil {var _aabba error ;_aeeaf ._fdfe ,_aabba =_gg .New (_aeeaf ._cage );if _aabba !=nil {return _aabba ;};};return nil ;};func (_ccbgaa *PatternDictionary )GetDictionary ()([]*_ga .Bitmap ,error ){if _ccbgaa .Patterns !=nil {return _ccbgaa .Patterns ,nil ;};if !_ccbgaa .IsMMREncoded {_ccbgaa .setGbAtPixels ();};_bgcf :=NewGenericRegion (_ccbgaa ._eged );_bgcf .setParametersMMR (_ccbgaa .IsMMREncoded ,_ccbgaa .DataOffset ,_ccbgaa .DataLength ,uint32 (_ccbgaa .HdpHeight ),(_ccbgaa .GrayMax +1)*uint32 (_ccbgaa .HdpWidth ),_ccbgaa .HDTemplate ,false ,false ,_ccbgaa .GBAtX ,_ccbgaa .GBAtY );_adgg ,_dfgf :=_bgcf .GetRegionBitmap ();if _dfgf !=nil {return nil ,_dfgf ;};if _dfgf =_ccbgaa .extractPatterns (_adgg );_dfgf !=nil {return nil ,_dfgf ;};return _ccbgaa .Patterns ,nil ;};func (_fdb *GenericRegion )decodeTemplate3 (_bagg ,_edf ,_feg int ,_ddc ,_gacf int )(_cef error ){const _ecfc ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0033";var (_ebb ,_bda int ;_cdb int ;_cag byte ;_fdaf ,_fec int ;);if _bagg >=1{_cag ,_cef =_fdb .Bitmap .GetByte (_gacf );if _cef !=nil {return _gd .Wrap (_cef ,_ecfc ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_cdb =int (_cag );};_ebb =(_cdb >>1)&0x70;for _ggag :=0;_ggag < _feg ;_ggag =_fdaf {var (_cede byte ;_agbff int ;);_fdaf =_ggag +8;if _cfgg :=_edf -_ggag ;_cfgg > 8{_agbff =8;}else {_agbff =_cfgg ;};if _bagg >=1{_cdb <<=8;if _fdaf < _edf {_cag ,_cef =_fdb .Bitmap .GetByte (_gacf +1);if _cef !=nil {return _gd .Wrap (_cef ,_ecfc ,"\u0069\u006e\u006e\u0065\u0072\u0020\u002d\u0020\u006c\u0069\u006e\u0065 \u003e\u003d\u0020\u0031");};_cdb |=int (_cag );};};for _bef :=0;_bef < _agbff ;_bef ++{if _fdb ._aeg {_bda =_fdb .overrideAtTemplate3 (_ebb ,_ggag +_bef ,_bagg ,int (_cede ),_bef );_fdb ._gcf .SetIndex (int32 (_bda ));}else {_fdb ._gcf .SetIndex (int32 (_ebb ));};_fec ,_cef =_fdb ._gag .DecodeBit (_fdb ._gcf );if _cef !=nil {return _gd .Wrap (_cef ,_ecfc ,"");};_cede |=byte (_fec )<<byte (7-_bef );_ebb =((_ebb &0x1f7)<<1)|_fec |((_cdb >>uint (8-_bef ))&0x010);};if _eca :=_fdb .Bitmap .SetByte (_ddc ,_cede );_eca !=nil {return _gd .Wrap (_eca ,_ecfc ,"");};_ddc ++;_gacf ++;};return nil ;};func (_bea *GenericRegion )getPixel (_caab ,_cge int )int8 {if _caab < 0||_caab >=_bea .Bitmap .Width {return 0;};if _cge < 0||_cge >=_bea .Bitmap .Height {return 0;};if _bea .Bitmap .GetPixel (_caab ,_cge ){return 1;};return 0;};func (_ccd *template0 )form (_fe ,_gab ,_faab ,_becb ,_ddec int16 )int16 {return (_fe <<10)|(_gab <<7)|(_faab <<4)|(_becb <<1)|_ddec ;};func (_aecc *PageInformationSegment )CombinationOperator ()_ga .CombinationOperator {return _aecc ._baca ;};var (_dcda Segmenter ;_ade =map[Type ]func ()Segmenter {TSymbolDictionary :func ()Segmenter {return &SymbolDictionary {}},TIntermediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateLosslessTextRegion :func ()Segmenter {return &TextRegion {}},TPatternDictionary :func ()Segmenter {return &PatternDictionary {}},TIntermediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateLosslessHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TIntermediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateLosslessGenericRegion :func ()Segmenter {return &GenericRegion {}},TIntermediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateLosslessGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TPageInformation :func ()Segmenter {return &PageInformationSegment {}},TEndOfPage :func ()Segmenter {return _dcda },TEndOfStrip :func ()Segmenter {return &EndOfStripe {}},TEndOfFile :func ()Segmenter {return _dcda },TProfiles :func ()Segmenter {return _dcda },TTables :func ()Segmenter {return &TableSegment {}},TExtension :func ()Segmenter {return _dcda },TBitmap :func ()Segmenter {return _dcda }};);func (_agac *PageInformationSegment )readContainsRefinement ()error {_fdbd ,_bfae :=_agac ._ddgg .ReadBit ();if _bfae !=nil {return _bfae ;};if _fdbd ==1{_agac ._dffe =true ;};return nil ;};func (_bbggc *TextRegion )decodeSymInRefSize ()(int64 ,error ){const _cffbbd ="\u0064e\u0063o\u0064\u0065\u0053\u0079\u006dI\u006e\u0052e\u0066\u0053\u0069\u007a\u0065";if _bbggc .SbHuffRSize ==0{_cgbb ,_cadb :=_bb .GetStandardTable (1);if _cadb !=nil {return 0,_gd .Wrap (_cadb ,_cffbbd ,"");};return _cgbb .Decode (_bbggc ._ccff );};if _bbggc ._ffeb ==nil {var (_fdce int ;_fafd error ;);if _bbggc .SbHuffFS ==3{_fdce ++;};if _bbggc .SbHuffDS ==3{_fdce ++;};if _bbggc .SbHuffDT ==3{_fdce ++;};if _bbggc .SbHuffRDWidth ==3{_fdce ++;};if _bbggc .SbHuffRDHeight ==3{_fdce ++;};if _bbggc .SbHuffRDX ==3{_fdce ++;};if _bbggc .SbHuffRDY ==3{_fdce ++;};_bbggc ._ffeb ,_fafd =_bbggc .getUserTable (_fdce );if _fafd !=nil {return 0,_gd .Wrap (_fafd ,_cffbbd ,"");};};_abcgb ,_gdbd :=_bbggc ._ffeb .Decode (_bbggc ._ccff );if _gdbd !=nil {return 0,_gd .Wrap (_gdbd ,_cffbbd ,"");};return _abcgb ,nil ;};func (_cggg *SymbolDictionary )String ()string {_gebg :=&_gb .Builder {};_gebg .WriteString ("\n\u005b\u0053\u0059\u004dBO\u004c-\u0044\u0049\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u000a");_gebg .WriteString (_b .Sprintf ("\u0009-\u0020S\u0064\u0072\u0054\u0065\u006dp\u006c\u0061t\u0065\u0020\u0025\u0076\u000a",_cggg .SdrTemplate ));_gebg .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0025\u0076\u000a",_cggg .SdTemplate ));_gebg .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006eg\u0043\u006f\u006e\u0074\u0065\u0078\u0074R\u0065\u0074\u0061\u0069\u006e\u0065\u0064\u0020\u0025\u0076\u000a",_cggg ._gbgb ));_gebg .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074\u0065\u0078\u0074\u0055\u0073\u0065\u0064 \u0025\u0076\u000a",_cggg ._abcc ));_gebg .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_cggg .SdHuffAggInstanceSelection ));_gebg .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0053d\u0048\u0075\u0066\u0066\u0042\u004d\u0053\u0069\u007a\u0065S\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020%\u0076\u000a",_cggg .SdHuffBMSizeSelection ));_gebg .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_cggg .SdHuffDecodeWidthSelection ));_gebg .WriteString (_b .Sprintf ("\u0009\u002d\u0020Sd\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064e\u0048e\u0069g\u0068t\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_cggg .SdHuffDecodeHeightSelection ));_gebg .WriteString (_b .Sprintf ("\u0009\u002d\u0020U\u0073\u0065\u0052\u0065f\u0069\u006e\u0065\u006d\u0065\u006e\u0074A\u0067\u0067\u0072\u0065\u0067\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_cggg .UseRefinementAggregation ));_gebg .WriteString (_b .Sprintf ("\u0009\u002d\u0020is\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045\u006e\u0063\u006f\u0064\u0065\u0064\u0020\u0025\u0076\u000a",_cggg .IsHuffmanEncoded ));_gebg .WriteString (_b .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_cggg .SdATX ));_gebg .WriteString (_b .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_cggg .SdATY ));_gebg .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_cggg .SdrATX ));_gebg .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_cggg .SdrATY ));_gebg .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u004e\u0075\u006d\u0062\u0065\u0072\u004ff\u0045\u0078\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_cggg .NumberOfExportedSymbols ));_gebg .WriteString (_b .Sprintf ("\u0009-\u0020\u004e\u0075\u006db\u0065\u0072\u004f\u0066\u004ee\u0077S\u0079m\u0062\u006f\u006c\u0073\u0020\u0025\u0076\n",_cggg .NumberOfNewSymbols ));_gebg .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u004ff\u0049\u006d\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_cggg ._bafe ));_gebg .WriteString (_b .Sprintf ("\u0009\u002d \u006e\u0075\u006d\u0062\u0065\u0072\u004f\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0064\u0053\u0079\u006d\u0062\u006f\u006c\u0073 %\u0076\u000a",_cggg ._ebcd ));return _gebg .String ();};func (_ebdd *HalftoneRegion )GetPatterns ()([]*_ga .Bitmap ,error ){var (_agba []*_ga .Bitmap ;_gdc error ;);for _ ,_dbee :=range _ebdd ._gcbg .RTSegments {var _bbgf Segmenter ;_bbgf ,_gdc =_dbee .GetSegmentData ();if _gdc !=nil {_gfd .Log .Debug ("\u0047e\u0074\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061 \u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025v",_gdc );return nil ,_gdc ;};_eagf ,_eagec :=_bbgf .(*PatternDictionary );if !_eagec {_gdc =_b .Errorf ("\u0072e\u006c\u0061t\u0065\u0064\u0020\u0073e\u0067\u006d\u0065n\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0070at\u0074\u0065\u0072n\u0020\u0064i\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u003a \u0025\u0054",_bbgf );return nil ,_gdc ;};var _bccb []*_ga .Bitmap ;_bccb ,_gdc =_eagf .GetDictionary ();if _gdc !=nil {_gfd .Log .Debug ("\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_gdc );return nil ,_gdc ;};_agba =append (_agba ,_bccb ...);};return _agba ,nil ;};func (_fba *GenericRegion )decodeLine (_acb ,_dce ,_cbd int )error {const _ecfd ="\u0064\u0065\u0063\u006f\u0064\u0065\u004c\u0069\u006e\u0065";_fgcd :=_fba .Bitmap .GetByteIndex (0,_acb );_cbgd :=_fgcd -_fba .Bitmap .RowStride ;switch _fba .GBTemplate {case 0:if !_fba .UseExtTemplates {return _fba .decodeTemplate0a (_acb ,_dce ,_cbd ,_fgcd ,_cbgd );};return _fba .decodeTemplate0b (_acb ,_dce ,_cbd ,_fgcd ,_cbgd );case 1:return _fba .decodeTemplate1 (_acb ,_dce ,_cbd ,_fgcd ,_cbgd );case 2:return _fba .decodeTemplate2 (_acb ,_dce ,_cbd ,_fgcd ,_cbgd );case 3:return _fba .decodeTemplate3 (_acb ,_dce ,_cbd ,_fgcd ,_cbgd );};return _gd .Errorf (_ecfd ,"\u0069\u006e\u0076a\u006c\u0069\u0064\u0020G\u0042\u0054\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u003a\u0020\u0025\u0064",_fba .GBTemplate );};func (_be *EndOfStripe )parseHeader (_ca *Header ,_bd _d .StreamReader )error {_cc ,_fcb :=_be ._ab .ReadBits (32);if _fcb !=nil {return _fcb ;};_be ._ge =int (_cc &_g .MaxInt32 );return nil ;};type OrganizationType uint8 ;func (_bacge *TextRegion )decodeIb (_gacbe ,_fcfc int64 )(*_ga .Bitmap ,error ){const _gcac ="\u0064\u0065\u0063\u006f\u0064\u0065\u0049\u0062";var (_gfdee error ;_decd *_ga .Bitmap ;);if _gacbe ==0{if int (_fcfc )> len (_bacge .Symbols )-1{return nil ,_gd .Error (_gcac ,"\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0049\u0042\u0020\u0062\u0069\u0074\u006d\u0061\u0070\u002e\u0020\u0069\u006e\u0064\u0065x\u0020\u006f\u0075\u0074\u0020o\u0066\u0020r\u0061\u006e\u0067\u0065");};return _bacge .Symbols [int (_fcfc )],nil ;};var _dbae ,_efab ,_daef ,_afecg int64 ;_dbae ,_gfdee =_bacge .decodeRdw ();if _gfdee !=nil {return nil ,_gd .Wrap (_gfdee ,_gcac ,"");};_efab ,_gfdee =_bacge .decodeRdh ();if _gfdee !=nil {return nil ,_gd .Wrap (_gfdee ,_gcac ,"");};_daef ,_gfdee =_bacge .decodeRdx ();if _gfdee !=nil {return nil ,_gd .Wrap (_gfdee ,_gcac ,"");};_afecg ,_gfdee =_bacge .decodeRdy ();if _gfdee !=nil {return nil ,_gd .Wrap (_gfdee ,_gcac ,"");};if _bacge .IsHuffmanEncoded {if _ ,_gfdee =_bacge .decodeSymInRefSize ();_gfdee !=nil {return nil ,_gd .Wrap (_gfdee ,_gcac ,"");};_bacge ._ccff .Align ();};_aefd :=_bacge .Symbols [_fcfc ];_agdb :=uint32 (_aefd .Width );_dcca :=uint32 (_aefd .Height );_ecfae :=int32 (uint32 (_dbae )>>1)+int32 (_daef );_adbe :=int32 (uint32 (_efab )>>1)+int32 (_afecg );if _bacge ._ccgg ==nil {_bacge ._ccgg =_dgc (_bacge ._ccff ,nil );};_bacge ._ccgg .setParameters (_bacge ._agfda ,_bacge ._acfg ,_bacge .SbrTemplate ,_agdb +uint32 (_dbae ),_dcca +uint32 (_efab ),_aefd ,_ecfae ,_adbe ,false ,_bacge .SbrATX ,_bacge .SbrATY );_decd ,_gfdee =_bacge ._ccgg .GetRegionBitmap ();if _gfdee !=nil {return nil ,_gd .Wrap (_gfdee ,_gcac ,"\u0067\u0072\u0066");};if _bacge .IsHuffmanEncoded {_bacge ._ccff .Align ();};return _decd ,nil ;};type PageInformationSegment struct{_ddgg _d .StreamReader ;PageBMHeight int ;PageBMWidth int ;ResolutionX int ;ResolutionY int ;_bae bool ;_baca _ga .CombinationOperator ;_gdce bool ;DefaultPixelValue uint8 ;_dffe bool ;IsLossless bool ;IsStripe bool ;MaxStripeSize uint16 ;};func (_edea *SymbolDictionary )decodeThroughTextRegion (_gfee ,_adag ,_bfag uint32 )error {if _edea ._aedb ==nil {_edea ._aedb =_gfgd (_edea ._cage ,nil );_edea ._aedb .setContexts (_edea ._bdcd ,_gg .NewStats (512,1),_gg .NewStats (512,1),_gg .NewStats (512,1),_gg .NewStats (512,1),_edea ._gggg ,_gg .NewStats (512,1),_gg .NewStats (512,1),_gg .NewStats (512,1),_gg .NewStats (512,1));};if _edefb :=_edea .setSymbolsArray ();_edefb !=nil {return _edefb ;};_edea ._aedb .setParameters (_edea ._fdfe ,_edea .IsHuffmanEncoded ,true ,_gfee ,_adag ,_bfag ,1,_edea ._bafe +_edea ._ebcd ,0,0,0,1,0,0,0,0,0,0,0,0,0,_edea .SdrTemplate ,_edea .SdrATX ,_edea .SdrATY ,_edea ._abceb ,_edea ._age );return _edea .addSymbol (_edea ._aedb );};func (_cccfc *HalftoneRegion )shiftAndFill (_bgb int )int {_bgb >>=8;if _bgb < 0{_bcgf :=int (_g .Log (float64 (_gcdf (_bgb )))/_g .Log (2));_gaef :=31-_bcgf ;for _cddde :=1;_cddde < _gaef ;_cddde ++{_bgb |=1<<uint (31-_cddde );};};return _bgb ;};func (_ccf *GenericRefinementRegion )decodeTypicalPredictedLineTemplate0 (_dd ,_dbf ,_baf ,_bga ,_dde ,_ec ,_cgde ,_gff ,_cddd int )error {var (_gfc ,_edc ,_ecd ,_df ,_def ,_abce int ;_gad byte ;_af error ;);if _dd > 0{_gad ,_af =_ccf .RegionBitmap .GetByte (_cgde -_baf );if _af !=nil {return _af ;};_ecd =int (_gad );};if _gff > 0&&_gff <=_ccf .ReferenceBitmap .Height {_gad ,_af =_ccf .ReferenceBitmap .GetByte (_cddd -_bga +_ec );if _af !=nil {return _af ;};_df =int (_gad )<<4;};if _gff >=0&&_gff < _ccf .ReferenceBitmap .Height {_gad ,_af =_ccf .ReferenceBitmap .GetByte (_cddd +_ec );if _af !=nil {return _af ;};_def =int (_gad )<<1;};if _gff > -2&&_gff < _ccf .ReferenceBitmap .Height -1{_gad ,_af =_ccf .ReferenceBitmap .GetByte (_cddd +_bga +_ec );if _af !=nil {return _af ;};_abce =int (_gad );};_gfc =((_ecd >>5)&0x6)|((_abce >>2)&0x30)|(_def &0x180)|(_df &0xc00);var _cce int ;for _afe :=0;_afe < _dde ;_afe =_cce {var _fff int ;_cce =_afe +8;var _aefb int ;if _aefb =_dbf -_afe ;_aefb > 8{_aefb =8;};_dfb :=_cce < _dbf ;_ea :=_cce < _ccf .ReferenceBitmap .Width ;_gec :=_ec +1;if _dd > 0{_gad =0;if _dfb {_gad ,_af =_ccf .RegionBitmap .GetByte (_cgde -_baf +1);if _af !=nil {return _af ;};};_ecd =(_ecd <<8)|int (_gad );};if _gff > 0&&_gff <=_ccf .ReferenceBitmap .Height {var _agd int ;if _ea {_gad ,_af =_ccf .ReferenceBitmap .GetByte (_cddd -_bga +_gec );if _af !=nil {return _af ;};_agd =int (_gad )<<4;};_df =(_df <<8)|_agd ;};if _gff >=0&&_gff < _ccf .ReferenceBitmap .Height {var _fde int ;if _ea {_gad ,_af =_ccf .ReferenceBitmap .GetByte (_cddd +_gec );if _af !=nil {return _af ;};_fde =int (_gad )<<1;};_def =(_def <<8)|_fde ;};if _gff > -2&&_gff < (_ccf .ReferenceBitmap .Height -1){_gad =0;if _ea {_gad ,_af =_ccf .ReferenceBitmap .GetByte (_cddd +_bga +_gec );if _af !=nil {return _af ;};};_abce =(_abce <<8)|int (_gad );};for _dba :=0;_dba < _aefb ;_dba ++{var _ggg int ;_ef :=false ;_bgg :=(_gfc >>4)&0x1ff;if _bgg ==0x1ff{_ef =true ;_ggg =1;}else if _bgg ==0x00{_ef =true ;};if !_ef {if _ccf ._fce {_edc =_ccf .overrideAtTemplate0 (_gfc ,_afe +_dba ,_dd ,_fff ,_dba );_ccf ._cdd .SetIndex (int32 (_edc ));}else {_ccf ._cdd .SetIndex (int32 (_gfc ));};_ggg ,_af =_ccf ._de .DecodeBit (_ccf ._cdd );if _af !=nil {return _af ;};};_gadg :=uint (7-_dba );_fff |=_ggg <<_gadg ;_gfc =((_gfc &0xdb6)<<1)|_ggg |(_ecd >>_gadg +5)&0x002|((_abce >>_gadg +2)&0x010)|((_def >>_gadg )&0x080)|((_df >>_gadg )&0x400);};_af =_ccf .RegionBitmap .SetByte (_cgde ,byte (_fff ));if _af !=nil {return _af ;};_cgde ++;_cddd ++;};return nil ;};func (_cecc *SymbolDictionary )huffDecodeRefAggNInst ()(int64 ,error ){if !_cecc .SdHuffAggInstanceSelection {_abcbb ,_fdaa :=_bb .GetStandardTable (1);if _fdaa !=nil {return 0,_fdaa ;};return _abcbb .Decode (_cecc ._cage );};if _cecc ._bbba ==nil {var (_gdad int ;_bffg error ;);if _cecc .SdHuffDecodeHeightSelection ==3{_gdad ++;};if _cecc .SdHuffDecodeWidthSelection ==3{_gdad ++;};if _cecc .SdHuffBMSizeSelection ==3{_gdad ++;};_cecc ._bbba ,_bffg =_cecc .getUserTable (_gdad );if _bffg !=nil {return 0,_bffg ;};};return _cecc ._bbba .Decode (_cecc ._cage );};func (_ceg *SymbolDictionary )decodeRefinedSymbol (_eeaea ,_fbcdc uint32 )error {var (_gaebff int ;_bed ,_cabf int32 ;);if _ceg .IsHuffmanEncoded {_fgec ,_aacc :=_ceg ._cage .ReadBits (byte (_ceg ._age ));if _aacc !=nil {return _aacc ;};_gaebff =int (_fgec );_egda ,_aacc :=_bb .GetStandardTable (15);if _aacc !=nil {return _aacc ;};_bdfgb ,_aacc :=_egda .Decode (_ceg ._cage );if _aacc !=nil {return _aacc ;};_bed =int32 (_bdfgb );_bdfgb ,_aacc =_egda .Decode (_ceg ._cage );if _aacc !=nil {return _aacc ;};_cabf =int32 (_bdfgb );_egda ,_aacc =_bb .GetStandardTable (1);if _aacc !=nil {return _aacc ;};if _ ,_aacc =_egda .Decode (_ceg ._cage );_aacc !=nil {return _aacc ;};_ceg ._cage .Align ();}else {_fgfe ,_ccegb :=_ceg ._fdfe .DecodeIAID (uint64 (_ceg ._age ),_ceg ._gggg );if _ccegb !=nil {return _ccegb ;};_gaebff =int (_fgfe );_bed ,_ccegb =_ceg ._fdfe .DecodeInt (_ceg ._dbad );if _ccegb !=nil {return _ccegb ;};_cabf ,_ccegb =_ceg ._fdfe .DecodeInt (_ceg ._befd );if _ccegb !=nil {return _ccegb ;};};if _adde :=_ceg .setSymbolsArray ();_adde !=nil {return _adde ;};_gbbb :=_ceg ._abceb [_gaebff ];if _cddc :=_ceg .decodeNewSymbols (_eeaea ,_fbcdc ,_gbbb ,_bed ,_cabf );_cddc !=nil {return _cddc ;};if _ceg .IsHuffmanEncoded {_ceg ._cage .Align ();};return nil ;};func (_eded *TextRegion )decodeSymbolInstances ()error {_affad ,_daae :=_eded .decodeStripT ();if _daae !=nil {return _daae ;};var (_bafce int64 ;_aeeg uint32 ;);for _aeeg < _eded .NumberOfSymbolInstances {_ffag ,_dbbc :=_eded .decodeDT ();if _dbbc !=nil {return _dbbc ;};_affad +=_ffag ;var _bageg int64 ;_gfadd :=true ;_eded ._caeag =0;for {if _gfadd {_bageg ,_dbbc =_eded .decodeDfs ();if _dbbc !=nil {return _dbbc ;};_bafce +=_bageg ;_eded ._caeag =_bafce ;_gfadd =false ;}else {_cbgc ,_ccgb :=_eded .decodeIds ();if _ac .Is (_ccgb ,_ff .ErrOOB ){break ;};if _ccgb !=nil {return _ccgb ;};if _aeeg >=_eded .NumberOfSymbolInstances {break ;};_eded ._caeag +=_cbgc +int64 (_eded .SbDsOffset );};_gbfe ,_bebgf :=_eded .decodeCurrentT ();if _bebgf !=nil {return _bebgf ;};_dgbg :=_affad +_gbfe ;_ebge ,_bebgf :=_eded .decodeID ();if _bebgf !=nil {return _bebgf ;};_fbab ,_bebgf :=_eded .decodeRI ();if _bebgf !=nil {return _bebgf ;};_abac ,_bebgf :=_eded .decodeIb (_fbab ,_ebge );if _bebgf !=nil {return _bebgf ;};if _bebgf =_eded .blit (_abac ,_dgbg );_bebgf !=nil {return _bebgf ;};_aeeg ++;};};return nil ;};func (_ffd *GenericRefinementRegion )readAtPixels ()error {_ffd .GrAtX =make ([]int8 ,2);_ffd .GrAtY =make ([]int8 ,2);_cab ,_eee :=_ffd ._cb .ReadByte ();if _eee !=nil {return _eee ;};_ffd .GrAtX [0]=int8 (_cab );_cab ,_eee =_ffd ._cb .ReadByte ();if _eee !=nil {return _eee ;};_ffd .GrAtY [0]=int8 (_cab );_cab ,_eee =_ffd ._cb .ReadByte ();if _eee !=nil {return _eee ;};_ffd .GrAtX [1]=int8 (_cab );_cab ,_eee =_ffd ._cb .ReadByte ();if _eee !=nil {return _eee ;};_ffd .GrAtY [1]=int8 (_cab );return nil ;};func (_ddbc *GenericRegion )InitEncode (bm *_ga .Bitmap ,xLoc ,yLoc ,template int ,duplicateLineRemoval bool )error {const _fgb ="\u0047e\u006e\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069\u006f\u006e.\u0049\u006e\u0069\u0074\u0045\u006e\u0063\u006f\u0064\u0065";if bm ==nil {return _gd .Error (_fgb ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if xLoc < 0||yLoc < 0{return _gd .Error (_fgb ,"\u0078\u0020\u0061\u006e\u0064\u0020\u0079\u0020\u006c\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074h\u0061\u006e\u0020\u0030");};_ddbc .Bitmap =bm ;_ddbc .GBTemplate =byte (template );switch _ddbc .GBTemplate {case 0:_ddbc .GBAtX =[]int8 {3,-3,2,-2};_ddbc .GBAtY =[]int8 {-1,-1,-2,-2};case 1:_ddbc .GBAtX =[]int8 {3};_ddbc .GBAtY =[]int8 {-1};case 2,3:_ddbc .GBAtX =[]int8 {2};_ddbc .GBAtY =[]int8 {-1};default:return _gd .Errorf (_fgb ,"\u0070\u0072o\u0076\u0069\u0064\u0065\u0064 \u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u007b\u0030\u002c\u0031\u002c\u0032\u002c\u0033\u007d",template );};_ddbc .RegionSegment =&RegionSegment {BitmapHeight :uint32 (bm .Height ),BitmapWidth :uint32 (bm .Width ),XLocation :uint32 (xLoc ),YLocation :uint32 (yLoc )};_ddbc .IsTPGDon =duplicateLineRemoval ;return nil ;};func (_abge *PageInformationSegment )readCombinationOperator ()error {_gacd ,_ega :=_abge ._ddgg .ReadBits (2);if _ega !=nil {return _ega ;};_abge ._baca =_ga .CombinationOperator (int (_gacd ));return nil ;};func (_eacg *GenericRegion )decodeTemplate0b (_edd ,_fade ,_bage int ,_ffdf ,_bbgdb int )(_bfd error ){const _agbf ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0062";var (_ebaa ,_ffb int ;_ffbg ,_aede int ;_bad byte ;_bcc int ;);if _edd >=1{_bad ,_bfd =_eacg .Bitmap .GetByte (_bbgdb );if _bfd !=nil {return _gd .Wrap (_bfd ,_agbf ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_ffbg =int (_bad );};if _edd >=2{_bad ,_bfd =_eacg .Bitmap .GetByte (_bbgdb -_eacg .Bitmap .RowStride );if _bfd !=nil {return _gd .Wrap (_bfd ,_agbf ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_aede =int (_bad )<<6;};_ebaa =(_ffbg &0xf0)|(_aede &0x3800);for _gfad :=0;_gfad < _bage ;_gfad =_bcc {var (_adcc byte ;_gbdc int ;);_bcc =_gfad +8;if _bgf :=_fade -_gfad ;_bgf > 8{_gbdc =8;}else {_gbdc =_bgf ;};if _edd > 0{_ffbg <<=8;if _bcc < _fade {_bad ,_bfd =_eacg .Bitmap .GetByte (_bbgdb +1);if _bfd !=nil {return _gd .Wrap (_bfd ,_agbf ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_ffbg |=int (_bad );};};if _edd > 1{_aede <<=8;if _bcc < _fade {_bad ,_bfd =_eacg .Bitmap .GetByte (_bbgdb -_eacg .Bitmap .RowStride +1);if _bfd !=nil {return _gd .Wrap (_bfd ,_agbf ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_aede |=int (_bad )<<6;};};for _cfgd :=0;_cfgd < _gbdc ;_cfgd ++{_bgc :=uint (7-_cfgd );if _eacg ._aeg {_ffb =_eacg .overrideAtTemplate0b (_ebaa ,_gfad +_cfgd ,_edd ,int (_adcc ),_cfgd ,int (_bgc ));_eacg ._gcf .SetIndex (int32 (_ffb ));}else {_eacg ._gcf .SetIndex (int32 (_ebaa ));};var _eaff int ;_eaff ,_bfd =_eacg ._gag .DecodeBit (_eacg ._gcf );if _bfd !=nil {return _gd .Wrap (_bfd ,_agbf ,"");};_adcc |=byte (_eaff <<_bgc );_ebaa =((_ebaa &0x7bf7)<<1)|_eaff |((_ffbg >>_bgc )&0x10)|((_aede >>_bgc )&0x800);};if _abb :=_eacg .Bitmap .SetByte (_ffdf ,_adcc );_abb !=nil {return _gd .Wrap (_abb ,_agbf ,"");};_ffdf ++;_bbgdb ++;};return nil ;};func (_fefg *TextRegion )getSymbols ()error {if _fefg .Header .RTSegments !=nil {return _fefg .initSymbols ();};return nil ;};func (_cgfc *HalftoneRegion )renderPattern (_dffd [][]int )(_gee error ){var _ebec ,_egfd int ;for _dbaag :=0;_dbaag < int (_cgfc .HGridHeight );_dbaag ++{for _gcd :=0;_gcd < int (_cgfc .HGridWidth );_gcd ++{_ebec =_cgfc .computeX (_dbaag ,_gcd );_egfd =_cgfc .computeY (_dbaag ,_gcd );_cceb :=_cgfc .Patterns [_dffd [_dbaag ][_gcd ]];if _gee =_ga .Blit (_cceb ,_cgfc .HalftoneRegionBitmap ,_ebec +int (_cgfc .HGridX ),_egfd +int (_cgfc .HGridY ),_cgfc .CombinationOperator );_gee !=nil {return _gee ;};};};return nil ;};func (_cgc *GenericRegion )String ()string {_cbf :=&_gb .Builder {};_cbf .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_cbf .WriteString (_cgc .RegionSegment .String ()+"\u000a");_cbf .WriteString (_b .Sprintf ("\u0009\u002d\u0020Us\u0065\u0045\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_cgc .UseExtTemplates ));_cbf .WriteString (_b .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0044\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_cgc .IsTPGDon ));_cbf .WriteString (_b .Sprintf ("\u0009-\u0020G\u0042\u0054\u0065\u006d\u0070l\u0061\u0074e\u003a\u0020\u0025\u0064\u000a",_cgc .GBTemplate ));_cbf .WriteString (_b .Sprintf ("\t\u002d \u0049\u0073\u004d\u004d\u0052\u0045\u006e\u0063o\u0064\u0065\u0064\u003a %\u0076\u000a",_cgc .IsMMREncoded ));_cbf .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_cgc .GBAtX ));_cbf .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_cgc .GBAtY ));_cbf .WriteString (_b .Sprintf ("\t\u002d \u0047\u0042\u0041\u0074\u004f\u0076\u0065\u0072r\u0069\u0064\u0065\u003a %\u0076\u000a",_cgc .GBAtOverride ));return _cbf .String ();};func (_fbea *SymbolDictionary )getSbSymCodeLen ()int8 {_abga :=int8 (_g .Ceil (_g .Log (float64 (_fbea ._bafe +_fbea .NumberOfNewSymbols ))/_g .Log (2)));if _fbea .IsHuffmanEncoded &&_abga < 1{return 1;};return _abga ;};func (_ccdf *TableSegment )parseHeader ()error {var (_caed int ;_aege uint64 ;_edgd error ;);_caed ,_edgd =_ccdf ._aaf .ReadBit ();if _edgd !=nil {return _edgd ;};if _caed ==1{return _b .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0061\u0062\u006c\u0065 \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0064e\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u002e\u0020\u0042\u002e\u0032\u002e1\u0020\u0043\u006f\u0064\u0065\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0042\u0069\u0074\u0020\u0037\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u007a\u0065\u0072\u006f\u002e\u0020\u0057a\u0073\u003a \u0025\u0064",_caed );};if _aege ,_edgd =_ccdf ._aaf .ReadBits (3);_edgd !=nil {return _edgd ;};_ccdf ._eegd =(int32 (_aege )+1)&0xf;if _aege ,_edgd =_ccdf ._aaf .ReadBits (3);_edgd !=nil {return _edgd ;};_ccdf ._bcbf =(int32 (_aege )+1)&0xf;if _aege ,_edgd =_ccdf ._aaf .ReadBits (32);_edgd !=nil {return _edgd ;};_ccdf ._bfeg =int32 (_aege &_g .MaxInt32 );if _aege ,_edgd =_ccdf ._aaf .ReadBits (32);_edgd !=nil {return _edgd ;};_ccdf ._ggfe =int32 (_aege &_g .MaxInt32 );return nil ;};func (_adee *TextRegion )decodeStripT ()(_deee int64 ,_cafd error ){if _adee .IsHuffmanEncoded {if _adee .SbHuffDT ==3{if _adee ._cdacd ==nil {var _adca int ;if _adee .SbHuffFS ==3{_adca ++;};if _adee .SbHuffDS ==3{_adca ++;};_adee ._cdacd ,_cafd =_adee .getUserTable (_adca );if _cafd !=nil {return 0,_cafd ;};};_deee ,_cafd =_adee ._cdacd .Decode (_adee ._ccff );if _cafd !=nil {return 0,_cafd ;};}else {var _gdd _bb .Tabler ;_gdd ,_cafd =_bb .GetStandardTable (11+int (_adee .SbHuffDT ));if _cafd !=nil {return 0,_cafd ;};_deee ,_cafd =_gdd .Decode (_adee ._ccff );if _cafd !=nil {return 0,_cafd ;};};}else {var _gacb int32 ;_gacb ,_cafd =_adee ._acfg .DecodeInt (_adee ._bacg );if _cafd !=nil {return 0,_cafd ;};_deee =int64 (_gacb );};_deee *=int64 (-_adee .SbStrips );return _deee ,nil ;};func (_fdd *GenericRegion )overrideAtTemplate1 (_bddc ,_fgfg ,_bfb ,_befg ,_ccdd int )int {_bddc &=0x1FF7;if _fdd .GBAtY [0]==0&&_fdd .GBAtX [0]>=-int8 (_ccdd ){_bddc |=(_befg >>uint (7-(int8 (_ccdd )+_fdd .GBAtX [0]))&0x1)<<3;}else {_bddc |=int (_fdd .getPixel (_fgfg +int (_fdd .GBAtX [0]),_bfb +int (_fdd .GBAtY [0])))<<3;};return _bddc ;};func (_bgd *Header )String ()string {_fdbg :=&_gb .Builder {};_fdbg .WriteString ("\u000a[\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045A\u0044\u0045\u0052\u005d\u000a");_fdbg .WriteString (_b .Sprintf ("\t\u002d\u0020\u0053\u0065gm\u0065n\u0074\u004e\u0075\u006d\u0062e\u0072\u003a\u0020\u0025\u0076\u000a",_bgd .SegmentNumber ));_fdbg .WriteString (_b .Sprintf ("\u0009\u002d\u0020T\u0079\u0070\u0065\u003a\u0020\u0025\u0076\u000a",_bgd .Type ));_fdbg .WriteString (_b .Sprintf ("\u0009-\u0020R\u0065\u0074\u0061\u0069\u006eF\u006c\u0061g\u003a\u0020\u0025\u0076\u000a",_bgd .RetainFlag ));_fdbg .WriteString (_b .Sprintf ("\u0009\u002d\u0020Pa\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_bgd .PageAssociation ));_fdbg .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0050\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074i\u006fn\u0046\u0069\u0065\u006c\u0064\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_bgd .PageAssociationFieldSize ));_fdbg .WriteString ("\u0009-\u0020R\u0054\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u0053\u003a\u000a");for _ ,_edec :=range _bgd .RTSNumbers {_fdbg .WriteString (_b .Sprintf ("\u0009\t\u002d\u0020\u0025\u0064\u000a",_edec ));};_fdbg .WriteString (_b .Sprintf ("\t\u002d \u0048\u0065\u0061\u0064\u0065\u0072\u004c\u0065n\u0067\u0074\u0068\u003a %\u0076\u000a",_bgd .HeaderLength ));_fdbg .WriteString (_b .Sprintf ("\u0009-\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061L\u0065n\u0067\u0074\u0068\u003a\u0020\u0025\u0076\n",_bgd .SegmentDataLength ));_fdbg .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074D\u0061\u0074\u0061\u0053\u0074\u0061\u0072t\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0076\u000a",_bgd .SegmentDataStartOffset ));return _fdbg .String ();};type GenericRegion struct{_beb _d .StreamReader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;UseExtTemplates bool ;IsTPGDon bool ;GBTemplate byte ;IsMMREncoded bool ;UseMMR bool ;GBAtX []int8 ;GBAtY []int8 ;GBAtOverride []bool ;_aeg bool ;Bitmap *_ga .Bitmap ;_gag *_gg .Decoder ;_gcf *_gg .DecoderStats ;_gfdg *_eg .Decoder ;};func (_gegf *SymbolDictionary )decodeNewSymbols (_gcde ,_febc uint32 ,_dfffg *_ga .Bitmap ,_gffgf ,_agda int32 )error {if _gegf ._ceab ==nil {_gegf ._ceab =_dgc (_gegf ._cage ,nil );if _gegf ._fdfe ==nil {var _dbff error ;_gegf ._fdfe ,_dbff =_gg .New (_gegf ._cage );if _dbff !=nil {return _dbff ;};};if _gegf ._bdcd ==nil {_gegf ._bdcd =_gg .NewStats (65536,1);};};_gegf ._ceab .setParameters (_gegf ._bdcd ,_gegf ._fdfe ,_gegf .SdrTemplate ,_gcde ,_febc ,_dfffg ,_gffgf ,_agda ,false ,_gegf .SdrATX ,_gegf .SdrATY );return _gegf .addSymbol (_gegf ._ceab );};func (_cfddc *TextRegion )readRegionFlags ()error {var (_cafa int ;_agacd uint64 ;_cacb error ;);_cafa ,_cacb =_cfddc ._ccff .ReadBit ();if _cacb !=nil {return _cacb ;};_cfddc .SbrTemplate =int8 (_cafa );_agacd ,_cacb =_cfddc ._ccff .ReadBits (5);if _cacb !=nil {return _cacb ;};_cfddc .SbDsOffset =int8 (_agacd );if _cfddc .SbDsOffset > 0x0f{_cfddc .SbDsOffset -=0x20;};_cafa ,_cacb =_cfddc ._ccff .ReadBit ();if _cacb !=nil {return _cacb ;};_cfddc .DefaultPixel =int8 (_cafa );_agacd ,_cacb =_cfddc ._ccff .ReadBits (2);if _cacb !=nil {return _cacb ;};_cfddc .CombinationOperator =_ga .CombinationOperator (int (_agacd )&0x3);_cafa ,_cacb =_cfddc ._ccff .ReadBit ();if _cacb !=nil {return _cacb ;};_cfddc .IsTransposed =int8 (_cafa );_agacd ,_cacb =_cfddc ._ccff .ReadBits (2);if _cacb !=nil {return _cacb ;};_cfddc .ReferenceCorner =int16 (_agacd )&0x3;_agacd ,_cacb =_cfddc ._ccff .ReadBits (2);if _cacb !=nil {return _cacb ;};_cfddc .LogSBStrips =int16 (_agacd )&0x3;_cfddc .SbStrips =1<<uint (_cfddc .LogSBStrips );_cafa ,_cacb =_cfddc ._ccff .ReadBit ();if _cacb !=nil {return _cacb ;};if _cafa ==1{_cfddc .UseRefinement =true ;};_cafa ,_cacb =_cfddc ._ccff .ReadBit ();if _cacb !=nil {return _cacb ;};if _cafa ==1{_cfddc .IsHuffmanEncoded =true ;};return nil ;};func (_afeb *SymbolDictionary )GetDictionary ()([]*_ga .Bitmap ,error ){_gfd .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c-\u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");defer func (){_gfd .Log .Trace ("\u005b\u0053\u0059M\u0042\u004f\u004c\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");_gfd .Log .Trace ("\u005b\u0053Y\u004d\u0042\u004f\u004c\u002dD\u0049\u0043\u0054\u0049\u004fN\u0041\u0052\u0059\u005d\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020\u000a\u0045\u0078\u003a\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u000a\u006e\u0065\u0077\u003a\u0027\u0025\u0073\u0027",_afeb ._cdgd ,_afeb ._ccgc );}();if _afeb ._cdgd ==nil {var _fege error ;if _afeb .UseRefinementAggregation {_afeb ._age =_afeb .getSbSymCodeLen ();};if !_afeb .IsHuffmanEncoded {if _fege =_afeb .setCodingStatistics ();_fege !=nil {return nil ,_fege ;};};_afeb ._ccgc =make ([]*_ga .Bitmap ,_afeb .NumberOfNewSymbols );var _eda []int ;if _afeb .IsHuffmanEncoded &&!_afeb .UseRefinementAggregation {_eda =make ([]int ,_afeb .NumberOfNewSymbols );};if _fege =_afeb .setSymbolsArray ();_fege !=nil {return nil ,_fege ;};var _fbef ,_bcfg int64 ;_afeb ._ebcd =0;for _afeb ._ebcd < _afeb .NumberOfNewSymbols {_bcfg ,_fege =_afeb .decodeHeightClassDeltaHeight ();if _fege !=nil {return nil ,_fege ;};_fbef +=_bcfg ;var _cgae ,_cggb uint32 ;_agea :=int64 (_afeb ._ebcd );for {var _bagb int64 ;_bagb ,_fege =_afeb .decodeDifferenceWidth ();if _ac .Is (_fege ,_ff .ErrOOB ){break ;};if _fege !=nil {return nil ,_fege ;};if _afeb ._ebcd >=_afeb .NumberOfNewSymbols {break ;};_cgae +=uint32 (_bagb );_cggb +=_cgae ;if !_afeb .IsHuffmanEncoded ||_afeb .UseRefinementAggregation {if !_afeb .UseRefinementAggregation {_fege =_afeb .decodeDirectlyThroughGenericRegion (_cgae ,uint32 (_fbef ));if _fege !=nil {return nil ,_fege ;};}else {_fege =_afeb .decodeAggregate (_cgae ,uint32 (_fbef ));if _fege !=nil {return nil ,_fege ;};};}else if _afeb .IsHuffmanEncoded &&!_afeb .UseRefinementAggregation {_eda [_afeb ._ebcd ]=int (_cgae );};_afeb ._ebcd ++;};if _afeb .IsHuffmanEncoded &&!_afeb .UseRefinementAggregation {var _eece int64 ;if _afeb .SdHuffBMSizeSelection ==0{var _adfb _bb .Tabler ;_adfb ,_fege =_bb .GetStandardTable (1);if _fege !=nil {return nil ,_fege ;};_eece ,_fege =_adfb .Decode (_afeb ._cage );if _fege !=nil {return nil ,_fege ;};}else {_eece ,_fege =_afeb .huffDecodeBmSize ();if _fege !=nil {return nil ,_fege ;};};_afeb ._cage .Align ();var _ceabe *_ga .Bitmap ;_ceabe ,_fege =_afeb .decodeHeightClassCollectiveBitmap (_eece ,uint32 (_fbef ),_cggb );if _fege !=nil {return nil ,_fege ;};_fege =_afeb .decodeHeightClassBitmap (_ceabe ,_agea ,int (_fbef ),_eda );if _fege !=nil {return nil ,_fege ;};};};_deccg ,_fege :=_afeb .getToExportFlags ();if _fege !=nil {return nil ,_fege ;};_afeb .setExportedSymbols (_deccg );};return _afeb ._cdgd ,nil ;};func (_agcg *SymbolDictionary )checkInput ()error {if _agcg .SdHuffDecodeHeightSelection ==2{_gfd .Log .Debug ("\u0053\u0079\u006d\u0062\u006fl\u0020\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u0053e\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0070\u0065r\u006d\u0069\u0074\u0074\u0065\u0064",_agcg .SdHuffDecodeHeightSelection );};if _agcg .SdHuffDecodeWidthSelection ==2{_gfd .Log .Debug ("\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0057\u0069\u0064t\u0068\u0020\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061l\u0075\u0065\u0020\u006e\u006f\u0074 \u0070\u0065r\u006d\u0069t\u0074e\u0064",_agcg .SdHuffDecodeWidthSelection );};if _agcg .IsHuffmanEncoded {if _agcg .SdTemplate !=0{_gfd .Log .Debug ("\u0053\u0044T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e \u0030\u0029",_agcg .SdTemplate );};if !_agcg .UseRefinementAggregation {if !_agcg .UseRefinementAggregation {if _agcg ._gbgb {_gfd .Log .Debug ("\u0049\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074ex\u0074\u0052\u0065\u0074\u0061\u0069n\u0065\u0064\u0020\u003d\u0020\u0074\u0072\u0075\u0065\u0020\u0028\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0066\u0061\u006cs\u0065\u0029");_agcg ._gbgb =false ;};if _agcg ._abcc {_gfd .Log .Debug ("\u0069s\u0043\u006fd\u0069\u006e\u0067\u0043o\u006e\u0074\u0065x\u0074\u0055\u0073\u0065\u0064\u0020\u003d\u0020\u0074ru\u0065\u0020\u0028s\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020f\u0061\u006cs\u0065\u0029");_agcg ._abcc =false ;};};};}else {if _agcg .SdHuffBMSizeSelection !=0{_gfd .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066B\u004d\u0053\u0069\u007a\u0065\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");_agcg .SdHuffBMSizeSelection =0;};if _agcg .SdHuffDecodeWidthSelection !=0{_gfd .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068\u0053\u0065\u006c\u0065\u0063\u0074\u0069o\u006e\u0020\u0073\u0068\u006fu\u006c\u0064 \u0062\u0065\u0020\u0030");_agcg .SdHuffDecodeWidthSelection =0;};if _agcg .SdHuffDecodeHeightSelection !=0{_gfd .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0048e\u0069\u0067\u0068\u0074\u0053\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");_agcg .SdHuffDecodeHeightSelection =0;};};if !_agcg .UseRefinementAggregation {if _agcg .SdrTemplate !=0{_gfd .Log .Debug ("\u0053\u0044\u0052\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u003d\u0020\u0025\u0064\u0020\u0028s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_agcg .SdrTemplate );_agcg .SdrTemplate =0;};};if !_agcg .IsHuffmanEncoded ||!_agcg .UseRefinementAggregation {if _agcg .SdHuffAggInstanceSelection {_gfd .Log .Debug ("\u0053d\u0048\u0075f\u0066\u0041\u0067g\u0049\u006e\u0073\u0074\u0061\u006e\u0063e\u0053\u0065\u006c\u0065\u0063\u0074i\u006f\u006e\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_agcg .SdHuffAggInstanceSelection );};};return nil ;};var _ SegmentEncoder =&GenericRegion {};type template0 struct{};func (_fgbg *SymbolDictionary )setRefinementAtPixels ()error {if !_fgbg .UseRefinementAggregation ||_fgbg .SdrTemplate !=0{return nil ;};if _febcc :=_fgbg .readRefinementAtPixels (2);_febcc !=nil {return _febcc ;};return nil ;};func (_bggb *GenericRegion )decodeSLTP ()(int ,error ){switch _bggb .GBTemplate {case 0:_bggb ._gcf .SetIndex (0x9B25);case 1:_bggb ._gcf .SetIndex (0x795);case 2:_bggb ._gcf .SetIndex (0xE5);case 3:_bggb ._gcf .SetIndex (0x195);};return _bggb ._gag .DecodeBit (_bggb ._gcf );};func (_fgcc *RegionSegment )String ()string {_ceddg :=&_gb .Builder {};_ceddg .WriteString ("\u0009[\u0052E\u0047\u0049\u004f\u004e\u0020S\u0045\u0047M\u0045\u004e\u0054\u005d\u000a");_ceddg .WriteString (_b .Sprintf ("\t\u0009\u002d\u0020\u0042\u0069\u0074m\u0061\u0070\u0020\u0028\u0077\u0069d\u0074\u0068\u002c\u0020\u0068\u0065\u0069g\u0068\u0074\u0029\u0020\u005b\u0025\u0064\u0078\u0025\u0064]\u000a",_fgcc .BitmapWidth ,_fgcc .BitmapHeight ));_ceddg .WriteString (_b .Sprintf ("\u0009\u0009\u002d\u0020L\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0028\u0078,\u0079)\u003a\u0020\u005b\u0025\u0064\u002c\u0025d\u005d\u000a",_fgcc .XLocation ,_fgcc .YLocation ));_ceddg .WriteString (_b .Sprintf ("\t\u0009\u002d\u0020\u0043\u006f\u006db\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070e\u0072\u0061\u0074o\u0072:\u0020\u0025\u0073",_fgcc .CombinaionOperator ));return _ceddg .String ();};func (_bffc *TableSegment )HtRS ()int32 {return _bffc ._eegd };var _ _bb .BasicTabler =&TableSegment {};func (_dbdgf *HalftoneRegion )GetRegionBitmap ()(*_ga .Bitmap ,error ){if _dbdgf .HalftoneRegionBitmap !=nil {return _dbdgf .HalftoneRegionBitmap ,nil ;};var _cceg error ;_dbdgf .HalftoneRegionBitmap =_ga .New (int (_dbdgf .RegionSegment .BitmapWidth ),int (_dbdgf .RegionSegment .BitmapHeight ));if _dbdgf .Patterns ==nil ||len (_dbdgf .Patterns )==0{_dbdgf .Patterns ,_cceg =_dbdgf .GetPatterns ();if _cceg !=nil {return nil ,_cceg ;};};if _dbdgf .HDefaultPixel ==1{_dbdgf .HalftoneRegionBitmap .SetDefaultPixel ();};_fbfa :=_g .Ceil (_g .Log (float64 (len (_dbdgf .Patterns )))/_g .Log (2));_cbfa :=int (_fbfa );var _acbb [][]int ;_acbb ,_cceg =_dbdgf .grayScaleDecoding (_cbfa );if _cceg !=nil {return nil ,_cceg ;};if _cceg =_dbdgf .renderPattern (_acbb );_cceg !=nil {return nil ,_cceg ;};return _dbdgf .HalftoneRegionBitmap ,nil ;};func (_cdaf *PatternDictionary )parseHeader ()error {_gfd .Log .Trace ("\u005b\u0050\u0041\u0054\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054I\u004f\u004e\u0041\u0052\u0059\u005d[\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d\u0020b\u0065\u0067\u0069\u006e");defer func (){_gfd .Log .Trace ("\u005b\u0050\u0041T\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u005b\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");}();_ ,_gedg :=_cdaf ._eged .ReadBits (5);if _gedg !=nil {return _gedg ;};if _gedg =_cdaf .readTemplate ();_gedg !=nil {return _gedg ;};if _gedg =_cdaf .readIsMMREncoded ();_gedg !=nil {return _gedg ;};if _gedg =_cdaf .readPatternWidthAndHeight ();_gedg !=nil {return _gedg ;};if _gedg =_cdaf .readGrayMax ();_gedg !=nil {return _gedg ;};if _gedg =_cdaf .computeSegmentDataStructure ();_gedg !=nil {return _gedg ;};return _cdaf .checkInput ();};func (_eccf Type )String ()string {switch _eccf {case TSymbolDictionary :return "\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079";case TIntermediateTextRegion :return "\u0049n\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020T\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateTextRegion :return "I\u006d\u006d\u0065\u0064ia\u0074e\u0020\u0054\u0065\u0078\u0074 \u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessTextRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020L\u006f\u0073\u0073\u006c\u0065\u0073\u0073 \u0054\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TPatternDictionary :return "\u0050a\u0074t\u0065\u0072\u006e\u0020\u0044i\u0063\u0074i\u006f\u006e\u0061\u0072\u0079";case TIntermediateHalftoneRegion :return "\u0049\u006e\u0074\u0065r\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0048\u0061l\u0066t\u006f\u006e\u0065\u0020\u0052\u0065\u0067i\u006f\u006e";case TImmediateHalftoneRegion :return "\u0049m\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u0048\u0061l\u0066t\u006fn\u0065\u0020\u0052\u0065\u0067\u0069\u006fn";case TImmediateLosslessHalftoneRegion :return "\u0049\u006d\u006ded\u0069\u0061\u0074\u0065\u0020\u004c\u006f\u0073\u0073l\u0065s\u0073 \u0048a\u006c\u0066\u0074\u006f\u006e\u0065\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TIntermediateGenericRegion :return "I\u006e\u0074\u0065\u0072\u006d\u0065d\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020R\u0065g\u0069\u006f\u006e";case TImmediateGenericRegion :return "\u0049m\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006ee\u0072\u0069\u0063\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessGenericRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u004c\u006f\u0073\u0073\u006c\u0065\u0073\u0073\u0020\u0047e\u006e\u0065\u0072\u0069\u0063\u0020\u0052e\u0067\u0069\u006f\u006e";case TIntermediateGenericRefinementRegion :return "\u0049\u006e\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0020\u0052\u0065\u0066i\u006e\u0065\u006d\u0065\u006et\u0020\u0052e\u0067\u0069\u006f\u006e";case TImmediateGenericRefinementRegion :return "I\u006d\u006d\u0065\u0064\u0069\u0061t\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020\u0052\u0065\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020\u0052\u0065\u0067\u0069o\u006e";case TImmediateLosslessGenericRefinementRegion :return "\u0049m\u006d\u0065d\u0069\u0061\u0074\u0065 \u004c\u006f\u0073s\u006c\u0065\u0073\u0073\u0020\u0047\u0065\u006e\u0065ri\u0063\u0020\u0052e\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020R\u0065\u0067i\u006f\u006e";case TPageInformation :return "\u0050\u0061g\u0065\u0020\u0049n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e";case TEndOfPage :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0050\u0061\u0067\u0065";case TEndOfStrip :return "\u0045\u006e\u0064 \u004f\u0066\u0020\u0053\u0074\u0072\u0069\u0070";case TEndOfFile :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0046\u0069\u006c\u0065";case TProfiles :return "\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0073";case TTables :return "\u0054\u0061\u0062\u006c\u0065\u0073";case TExtension :return "\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn";case TBitmap :return "\u0042\u0069\u0074\u006d\u0061\u0070";};return "I\u006ev\u0061\u006c\u0069\u0064\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0020Ki\u006e\u0064";};func (_aeeb *TextRegion )decodeRdx ()(int64 ,error ){const _deda ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064x";if _aeeb .IsHuffmanEncoded {if _aeeb .SbHuffRDX ==3{if _aeeb ._bfdc ==nil {var (_aeded int ;_gdcd error ;);if _aeeb .SbHuffFS ==3{_aeded ++;};if _aeeb .SbHuffDS ==3{_aeded ++;};if _aeeb .SbHuffDT ==3{_aeded ++;};if _aeeb .SbHuffRDWidth ==3{_aeded ++;};if _aeeb .SbHuffRDHeight ==3{_aeded ++;};_aeeb ._bfdc ,_gdcd =_aeeb .getUserTable (_aeded );if _gdcd !=nil {return 0,_gd .Wrap (_gdcd ,_deda ,"");};};return _aeeb ._bfdc .Decode (_aeeb ._ccff );};_dggf ,_agag :=_bb .GetStandardTable (14+int (_aeeb .SbHuffRDX ));if _agag !=nil {return 0,_gd .Wrap (_agag ,_deda ,"");};return _dggf .Decode (_aeeb ._ccff );};_fadd ,_eacc :=_aeeb ._acfg .DecodeInt (_aeeb ._cbcd );if _eacc !=nil {return 0,_gd .Wrap (_eacc ,_deda ,"");};return int64 (_fadd ),nil ;};func (_fcef *GenericRegion )setOverrideFlag (_aad int ){_fcef .GBAtOverride [_aad ]=true ;_fcef ._aeg =true ;};func (_ccfc *GenericRefinementRegion )getPixel (_agb *_ga .Bitmap ,_dcbg ,_gfa int )int {if _dcbg < 0||_dcbg >=_agb .Width {return 0;};if _gfa < 0||_gfa >=_agb .Height {return 0;};if _agb .GetPixel (_dcbg ,_gfa ){return 1;};return 0;};func (_efeg *SymbolDictionary )retrieveImportSymbols ()error {for _ ,_bfbf :=range _efeg .Header .RTSegments {if _bfbf .Type ==0{_bcegd ,_efce :=_bfbf .GetSegmentData ();if _efce !=nil {return _efce ;};_ccea ,_ceag :=_bcegd .(*SymbolDictionary );if !_ceag {return _b .Errorf ("\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0044\u0061\u0074a\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u003a\u0020%\u0054",_bcegd );};_baed ,_efce :=_ccea .GetDictionary ();if _efce !=nil {return _b .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064 \u0073\u0065\u0067m\u0065\u006e\u0074 \u0077\u0069t\u0068\u0020\u0069\u006e\u0064\u0065x\u003a %\u0064\u0020\u0067\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0073",_bfbf .SegmentNumber ,_efce .Error ());};_efeg ._fbbce =append (_efeg ._fbbce ,_baed ...);_efeg ._bafe +=_ccea .NumberOfExportedSymbols ;};};return nil ;};func (_dgaf *SymbolDictionary )readNumberOfNewSymbols ()error {_afge ,_cgbg :=_dgaf ._cage .ReadBits (32);if _cgbg !=nil {return _cgbg ;};_dgaf .NumberOfNewSymbols =uint32 (_afge &_g .MaxUint32 );return nil ;};func (_ffa *GenericRefinementRegion )GetRegionBitmap ()(*_ga .Bitmap ,error ){var _ffg error ;_gfd .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");defer func (){if _ffg !=nil {_gfd .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0047\u0065\u0074R\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006dap\u0020\u0066a\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_ffg );}else {_gfd .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");};}();if _ffa .RegionBitmap !=nil {return _ffa .RegionBitmap ,nil ;};_cde :=0;if _ffa .ReferenceBitmap ==nil {_ffa .ReferenceBitmap ,_ffg =_ffa .getGrReference ();if _ffg !=nil {return nil ,_ffg ;};};if _ffa ._de ==nil {_ffa ._de ,_ffg =_gg .New (_ffa ._cb );if _ffg !=nil {return nil ,_ffg ;};};if _ffa ._cdd ==nil {_ffa ._cdd =_gg .NewStats (8192,1);};_ffa .RegionBitmap =_ga .New (int (_ffa .RegionInfo .BitmapWidth ),int (_ffa .RegionInfo .BitmapHeight ));if _ffa .TemplateID ==0{if _ffg =_ffa .updateOverride ();_ffg !=nil {return nil ,_ffg ;};};_egf :=(_ffa .RegionBitmap .Width +7)&-8;var _agc int ;if _ffa .IsTPGROn {_agc =int (-_ffa .ReferenceDY )*_ffa .ReferenceBitmap .RowStride ;};_bec :=_agc +1;for _fae :=0;_fae < _ffa .RegionBitmap .Height ;_fae ++{if _ffa .IsTPGROn {_dgd ,_cgd :=_ffa .decodeSLTP ();if _cgd !=nil {return nil ,_cgd ;};_cde ^=_dgd ;};if _cde ==0{_ffg =_ffa .decodeOptimized (_fae ,_ffa .RegionBitmap .Width ,_ffa .RegionBitmap .RowStride ,_ffa .ReferenceBitmap .RowStride ,_egf ,_agc ,_bec );if _ffg !=nil {return nil ,_ffg ;};}else {_ffg =_ffa .decodeTypicalPredictedLine (_fae ,_ffa .RegionBitmap .Width ,_ffa .RegionBitmap .RowStride ,_ffa .ReferenceBitmap .RowStride ,_egf ,_agc );if _ffg !=nil {return nil ,_ffg ;};};};return _ffa .RegionBitmap ,nil ;};func (_gcgea *RegionSegment )parseHeader ()error {const _bcge ="p\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_gfd .Log .Trace ("\u005b\u0052\u0045\u0047I\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002dH\u0045A\u0044\u0045\u0052\u005d\u0020\u0042\u0065g\u0069\u006e");defer func (){_gfd .Log .Trace ("\u005b\u0052\u0045G\u0049\u004f\u004e\u005d[\u0050\u0041\u0052\u0053\u0045\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");}();_aeac ,_dab :=_gcgea ._gfec .ReadBits (32);if _dab !=nil {return _gd .Wrap (_dab ,_bcge ,"\u0077\u0069\u0064t\u0068");};_gcgea .BitmapWidth =uint32 (_aeac &_g .MaxUint32 );_aeac ,_dab =_gcgea ._gfec .ReadBits (32);if _dab !=nil {return _gd .Wrap (_dab ,_bcge ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_gcgea .BitmapHeight =uint32 (_aeac &_g .MaxUint32 );_aeac ,_dab =_gcgea ._gfec .ReadBits (32);if _dab !=nil {return _gd .Wrap (_dab ,_bcge ,"\u0078\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_gcgea .XLocation =uint32 (_aeac &_g .MaxUint32 );_aeac ,_dab =_gcgea ._gfec .ReadBits (32);if _dab !=nil {return _gd .Wrap (_dab ,_bcge ,"\u0079\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_gcgea .YLocation =uint32 (_aeac &_g .MaxUint32 );if _ ,_dab =_gcgea ._gfec .ReadBits (5);_dab !=nil {return _gd .Wrap (_dab ,_bcge ,"\u0064i\u0072\u0079\u0020\u0072\u0065\u0061d");};if _dab =_gcgea .readCombinationOperator ();_dab !=nil {return _gd .Wrap (_dab ,_bcge ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};return nil ;};func (_gcef *SymbolDictionary )getToExportFlags ()([]int ,error ){var (_ebed int ;_abcb int32 ;_eecd error ;_ggbbe =int32 (_gcef ._bafe +_gcef .NumberOfNewSymbols );_fdfcd =make ([]int ,_ggbbe ););for _bbfg :=int32 (0);_bbfg < _ggbbe ;_bbfg +=_abcb {if _gcef .IsHuffmanEncoded {_daaa ,_cfdb :=_bb .GetStandardTable (1);if _cfdb !=nil {return nil ,_cfdb ;};_fdfbe ,_cfdb :=_daaa .Decode (_gcef ._cage );if _cfdb !=nil {return nil ,_cfdb ;};_abcb =int32 (_fdfbe );}else {_abcb ,_eecd =_gcef ._fdfe .DecodeInt (_gcef ._acbgg );if _eecd !=nil {return nil ,_eecd ;};};if _abcb !=0{for _gedff :=_bbfg ;_gedff < _bbfg +_abcb ;_gedff ++{_fdfcd [_gedff ]=_ebed ;};};if _ebed ==0{_ebed =1;}else {_ebed =0;};};return _fdfcd ,nil ;};func (_bbfc *SymbolDictionary )readRegionFlags ()error {var (_bbfa uint64 ;_deae int ;);_ ,_ebecg :=_bbfc ._cage .ReadBits (3);if _ebecg !=nil {return _ebecg ;};_deae ,_ebecg =_bbfc ._cage .ReadBit ();if _ebecg !=nil {return _ebecg ;};_bbfc .SdrTemplate =int8 (_deae );_bbfa ,_ebecg =_bbfc ._cage .ReadBits (2);if _ebecg !=nil {return _ebecg ;};_bbfc .SdTemplate =int8 (_bbfa &0xf);_deae ,_ebecg =_bbfc ._cage .ReadBit ();if _ebecg !=nil {return _ebecg ;};if _deae ==1{_bbfc ._gbgb =true ;};_deae ,_ebecg =_bbfc ._cage .ReadBit ();if _ebecg !=nil {return _ebecg ;};if _deae ==1{_bbfc ._abcc =true ;};_deae ,_ebecg =_bbfc ._cage .ReadBit ();if _ebecg !=nil {return _ebecg ;};if _deae ==1{_bbfc .SdHuffAggInstanceSelection =true ;};_deae ,_ebecg =_bbfc ._cage .ReadBit ();if _ebecg !=nil {return _ebecg ;};_bbfc .SdHuffBMSizeSelection =int8 (_deae );_bbfa ,_ebecg =_bbfc ._cage .ReadBits (2);if _ebecg !=nil {return _ebecg ;};_bbfc .SdHuffDecodeWidthSelection =int8 (_bbfa &0xf);_bbfa ,_ebecg =_bbfc ._cage .ReadBits (2);if _ebecg !=nil {return _ebecg ;};_bbfc .SdHuffDecodeHeightSelection =int8 (_bbfa &0xf);_deae ,_ebecg =_bbfc ._cage .ReadBit ();if _ebecg !=nil {return _ebecg ;};if _deae ==1{_bbfc .UseRefinementAggregation =true ;};_deae ,_ebecg =_bbfc ._cage .ReadBit ();if _ebecg !=nil {return _ebecg ;};if _deae ==1{_bbfc .IsHuffmanEncoded =true ;};return nil ;};func (_bbbe *PageInformationSegment )parseHeader ()(_gedb error ){_gfd .Log .Trace ("\u005b\u0050\u0061\u0067\u0065I\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067m\u0065\u006e\u0074\u005d\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u002e\u002e");defer func (){var _baffc ="[\u0050\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072m\u0061\u0074\u0069\u006f\u006e\u0053\u0065gm\u0065\u006e\u0074\u005d \u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065ad\u0065\u0072 \u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064";if _gedb !=nil {_baffc +="\u0020\u0077\u0069t\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u0020"+_gedb .Error ();}else {_baffc +="\u0020\u0073\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079";};_gfd .Log .Trace (_baffc );}();if _gedb =_bbbe .readWidthAndHeight ();_gedb !=nil {return _gedb ;};if _gedb =_bbbe .readResolution ();_gedb !=nil {return _gedb ;};_ ,_gedb =_bbbe ._ddgg .ReadBit ();if _gedb !=nil {return _gedb ;};if _gedb =_bbbe .readCombinationOperatorOverrideAllowed ();_gedb !=nil {return _gedb ;};if _gedb =_bbbe .readRequiresAuxiliaryBuffer ();_gedb !=nil {return _gedb ;};if _gedb =_bbbe .readCombinationOperator ();_gedb !=nil {return _gedb ;};if _gedb =_bbbe .readDefaultPixelValue ();_gedb !=nil {return _gedb ;};if _gedb =_bbbe .readContainsRefinement ();_gedb !=nil {return _gedb ;};if _gedb =_bbbe .readIsLossless ();_gedb !=nil {return _gedb ;};if _gedb =_bbbe .readIsStriped ();_gedb !=nil {return _gedb ;};if _gedb =_bbbe .readMaxStripeSize ();_gedb !=nil {return _gedb ;};if _gedb =_bbbe .checkInput ();_gedb !=nil {return _gedb ;};_gfd .Log .Trace ("\u0025\u0073",_bbbe );return nil ;};func (_ffda *Header )writeSegmentPageAssociation (_gbcb _d .BinaryWriter )(_adccg int ,_ggec error ){const _fcaec ="w\u0072\u0069\u0074\u0065\u0053\u0065g\u006d\u0065\u006e\u0074\u0050\u0061\u0067\u0065\u0041s\u0073\u006f\u0063i\u0061t\u0069\u006f\u006e";if _ffda .pageSize ()!=4{if _ggec =_gbcb .WriteByte (byte (_ffda .PageAssociation ));_ggec !=nil {return 0,_gd .Wrap (_ggec ,_fcaec ,"\u0070\u0061\u0067\u0065\u0053\u0069\u007a\u0065\u0020\u0021\u003d\u0020\u0034");};return 1,nil ;};_faf :=make ([]byte ,4);_gf .BigEndian .PutUint32 (_faf ,uint32 (_ffda .PageAssociation ));if _adccg ,_ggec =_gbcb .Write (_faf );_ggec !=nil {return 0,_gd .Wrap (_ggec ,_fcaec ,"\u0034 \u0062y\u0074\u0065\u0020\u0070\u0061g\u0065\u0020n\u0075\u006d\u0062\u0065\u0072");};return _adccg ,nil ;};func (_gefg *PageInformationSegment )readDefaultPixelValue ()error {_fdfb ,_adgd :=_gefg ._ddgg .ReadBit ();if _adgd !=nil {return _adgd ;};_gefg .DefaultPixelValue =uint8 (_fdfb &0xf);return nil ;};func (_ggee *Header )writeSegmentDataLength (_abfg _d .BinaryWriter )(_eafa int ,_caea error ){_ddgb :=make ([]byte ,4);_gf .BigEndian .PutUint32 (_ddgb ,uint32 (_ggee .SegmentDataLength ));if _eafa ,_caea =_abfg .Write (_ddgb );_caea !=nil {return 0,_gd .Wrap (_caea ,"\u0048\u0065a\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u004c\u0065ng\u0074\u0068","");};return _eafa ,nil ;};func (_fdf *HalftoneRegion )computeX (_ebbb ,_bdg int )int {return _fdf .shiftAndFill (int (_fdf .HGridX )+_ebbb *int (_fdf .HRegionY )+_bdg *int (_fdf .HRegionX ));};func (_cbff *PageInformationSegment )encodeFlags (_fece _d .BinaryWriter )(_geed error ){const _fggc ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _geed =_fece .SkipBits (1);_geed !=nil {return _gd .Wrap (_geed ,_fggc ,"\u0072\u0065\u0073e\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074");};var _fdgc int ;if _cbff .CombinationOperatorOverrideAllowed (){_fdgc =1;};if _geed =_fece .WriteBit (_fdgc );_geed !=nil {return _gd .Wrap (_geed ,_fggc ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0064\u0065\u006e");};_fdgc =0;if _cbff ._gdce {_fdgc =1;};if _geed =_fece .WriteBit (_fdgc );_geed !=nil {return _gd .Wrap (_geed ,_fggc ,"\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0061\u0075\u0078i\u006ci\u0061r\u0079\u0020\u0062\u0075\u0066\u0066\u0065r");};if _geed =_fece .WriteBit ((int (_cbff ._baca )>>1)&0x01);_geed !=nil {return _gd .Wrap (_geed ,_fggc ,"\u0063\u006f\u006d\u0062\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006f\u0070\u0065\u0072\u0061\u0074o\u0072\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0062\u0069\u0074");};if _geed =_fece .WriteBit (int (_cbff ._baca )&0x01);_geed !=nil {return _gd .Wrap (_geed ,_fggc ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0062\u0069\u0074");};_fdgc =int (_cbff .DefaultPixelValue );if _geed =_fece .WriteBit (_fdgc );_geed !=nil {return _gd .Wrap (_geed ,_fggc ,"\u0064e\u0066\u0061\u0075\u006c\u0074\u0020\u0070\u0061\u0067\u0065\u0020p\u0069\u0078\u0065\u006c\u0020\u0076\u0061\u006c\u0075\u0065");};_fdgc =0;if _cbff ._dffe {_fdgc =1;};if _geed =_fece .WriteBit (_fdgc );_geed !=nil {return _gd .Wrap (_geed ,_fggc ,"\u0063\u006f\u006e\u0074ai\u006e\u0073\u0020\u0072\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074");};_fdgc =0;if _cbff .IsLossless {_fdgc =1;};if _geed =_fece .WriteBit (_fdgc );_geed !=nil {return _gd .Wrap (_geed ,_fggc ,"p\u0061\u0067\u0065\u0020\u0069\u0073 \u0065\u0076\u0065\u006e\u0074\u0075\u0061\u006c\u006cy\u0020\u006c\u006fs\u0073l\u0065\u0073\u0073");};return nil ;};func (_gdac *SymbolDictionary )encodeNumSyms (_gafc _d .BinaryWriter )(_bbae int ,_gcfb error ){const _agbg ="\u0065\u006e\u0063\u006f\u0064\u0065\u004e\u0075\u006d\u0053\u0079\u006d\u0073";_gggbc :=make ([]byte ,4);_gf .BigEndian .PutUint32 (_gggbc ,_gdac .NumberOfExportedSymbols );if _bbae ,_gcfb =_gafc .Write (_gggbc );_gcfb !=nil {return _bbae ,_gd .Wrap (_gcfb ,_agbg ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};_gf .BigEndian .PutUint32 (_gggbc ,_gdac .NumberOfNewSymbols );_gadbe ,_gcfb :=_gafc .Write (_gggbc );if _gcfb !=nil {return _bbae ,_gd .Wrap (_gcfb ,_agbg ,"n\u0065\u0077\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};return _bbae +_gadbe ,nil ;};func (_gbcd *SymbolDictionary )setInSyms ()error {if _gbcd .Header .RTSegments !=nil {return _gbcd .retrieveImportSymbols ();};_gbcd ._fbbce =make ([]*_ga .Bitmap ,0);return nil ;};func _dgc (_gdbb _d .StreamReader ,_cdc *Header )*GenericRefinementRegion {return &GenericRefinementRegion {_cb :_gdbb ,RegionInfo :NewRegionSegment (_gdbb ),_fb :_cdc ,_cg :&template0 {},_dg :&template1 {}};};func (_cdcag *SymbolDictionary )decodeAggregate (_ffgfc ,_ceda uint32 )error {var (_cec int64 ;_cdac error ;);if _cdcag .IsHuffmanEncoded {_cec ,_cdac =_cdcag .huffDecodeRefAggNInst ();if _cdac !=nil {return _cdac ;};}else {_efga ,_bafc :=_cdcag ._fdfe .DecodeInt (_cdcag ._caad );if _bafc !=nil {return _bafc ;};_cec =int64 (_efga );};if _cec > 1{return _cdcag .decodeThroughTextRegion (_ffgfc ,_ceda ,uint32 (_cec ));}else if _cec ==1{return _cdcag .decodeRefinedSymbol (_ffgfc ,_ceda );};return nil ;};func (_abde *SymbolDictionary )encodeSymbols (_dgff _d .BinaryWriter )(_cbad int ,_bggd error ){const _efef ="\u0065\u006e\u0063o\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c";_fed :=_fc .New ();_fed .Init ();_becc ,_bggd :=_abde ._fggg .SelectByIndexes (_abde ._cdabb );if _bggd !=nil {return 0,_gd .Wrap (_bggd ,_efef ,"\u0069n\u0069\u0074\u0069\u0061\u006c");};_bbeg :=map[*_ga .Bitmap ]int {};for _aabbc ,_acg :=range _becc .Values {_bbeg [_acg ]=_aabbc ;};_becc .SortByHeight ();var _gcffd ,_bgccg int ;_fdfc ,_bggd :=_becc .GroupByHeight ();if _bggd !=nil {return 0,_gd .Wrap (_bggd ,_efef ,"");};for _ ,_efed :=range _fdfc .Values {_dec :=_efed .Values [0].Height ;_egef :=_dec -_gcffd ;if _bggd =_fed .EncodeInteger (_fc .IADH ,_egef );_bggd !=nil {return 0,_gd .Wrapf (_bggd ,_efef ,"\u0049\u0041\u0044\u0048\u0020\u0066\u006f\u0072\u0020\u0064\u0068\u003a \u0027\u0025\u0064\u0027",_egef );};_gcffd =_dec ;_egfe ,_dfff :=_efed .GroupByWidth ();if _dfff !=nil {return 0,_gd .Wrapf (_dfff ,_efef ,"\u0068\u0065\u0069g\u0068\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_dec );};var _fafg int ;for _ ,_eecad :=range _egfe .Values {for _ ,_bbce :=range _eecad .Values {_cdf :=_bbce .Width ;_aeba :=_cdf -_fafg ;if _dfff =_fed .EncodeInteger (_fc .IADW ,_aeba );_dfff !=nil {return 0,_gd .Wrapf (_dfff ,_efef ,"\u0049\u0041\u0044\u0057\u0020\u0066\u006f\u0072\u0020\u0064\u0077\u003a \u0027\u0025\u0064\u0027",_aeba );};_fafg +=_aeba ;if _dfff =_fed .EncodeBitmap (_bbce ,false );_dfff !=nil {return 0,_gd .Wrapf (_dfff ,_efef ,"H\u0065i\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u0020W\u0069\u0064\u0074\u0068: \u0025\u0064",_dec ,_cdf );};_bggece :=_bbeg [_bbce ];_abde ._bgea [_bggece ]=_bgccg ;_bgccg ++;};};if _dfff =_fed .EncodeOOB (_fc .IADW );_dfff !=nil {return 0,_gd .Wrap (_dfff ,_efef ,"\u0049\u0041\u0044\u0057");};};if _bggd =_fed .EncodeInteger (_fc .IAEX ,0);_bggd !=nil {return 0,_gd .Wrap (_bggd ,_efef ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};if _bggd =_fed .EncodeInteger (_fc .IAEX ,len (_abde ._cdabb ));_bggd !=nil {return 0,_gd .Wrap (_bggd ,_efef ,"\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0073\u0079m\u0062\u006f\u006c\u0073");};_fed .Final ();_decc ,_bggd :=_fed .WriteTo (_dgff );if _bggd !=nil {return 0,_gd .Wrap (_bggd ,_efef ,"\u0077\u0072i\u0074\u0069\u006e\u0067 \u0065\u006ec\u006f\u0064\u0065\u0072\u0020\u0063\u006f\u006et\u0065\u0078\u0074\u0020\u0074\u006f\u0020\u0027\u0077\u0027\u0020\u0077r\u0069\u0074\u0065\u0072");};return int (_decc ),nil ;};func (_edffb *PageInformationSegment )readResolution ()error {_fbbe ,_dbbdc :=_edffb ._ddgg .ReadBits (32);if _dbbdc !=nil {return _dbbdc ;};_edffb .ResolutionX =int (_fbbe &_g .MaxInt32 );_fbbe ,_dbbdc =_edffb ._ddgg .ReadBits (32);if _dbbdc !=nil {return _dbbdc ;};_edffb .ResolutionY =int (_fbbe &_g .MaxInt32 );return nil ;};func (_bgae *PageInformationSegment )Init (h *Header ,r _d .StreamReader )(_bbfb error ){_bgae ._ddgg =r ;if _bbfb =_bgae .parseHeader ();_bbfb !=nil {return _gd .Wrap (_bbfb ,"P\u0061\u0067\u0065\u0049\u006e\u0066o\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065g\u006d\u0065\u006et\u002eI\u006e\u0069\u0074","");};return nil ;};type RegionSegment struct{_gfec _d .StreamReader ;BitmapWidth uint32 ;BitmapHeight uint32 ;XLocation uint32 ;YLocation uint32 ;CombinaionOperator _ga .CombinationOperator ;};func (_eeg *PatternDictionary )extractPatterns (_cdggd *_ga .Bitmap )error {var _affg int ;_cbdd :=make ([]*_ga .Bitmap ,_eeg .GrayMax +1);for _affg <=int (_eeg .GrayMax ){_fgd :=int (_eeg .HdpWidth )*_affg ;_bebd :=_f .Rect (_fgd ,0,_fgd +int (_eeg .HdpWidth ),int (_eeg .HdpHeight ));_gege ,_bagee :=_ga .Extract (_bebd ,_cdggd );if _bagee !=nil {return _bagee ;};_cbdd [_affg ]=_gege ;_affg ++;};_eeg .Patterns =_cbdd ;return nil ;};type Segmenter interface{Init (_daa *Header ,_bgcg _d .StreamReader )error ;};func (_cdcc *PatternDictionary )setGbAtPixels (){if _cdcc .HDTemplate ==0{_cdcc .GBAtX =make ([]int8 ,4);_cdcc .GBAtY =make ([]int8 ,4);_cdcc .GBAtX [0]=-int8 (_cdcc .HdpWidth );_cdcc .GBAtY [0]=0;_cdcc .GBAtX [1]=-3;_cdcc .GBAtY [1]=-1;_cdcc .GBAtX [2]=2;_cdcc .GBAtY [2]=-2;_cdcc .GBAtX [3]=-2;_cdcc .GBAtY [3]=-2;}else {_cdcc .GBAtX =[]int8 {-int8 (_cdcc .HdpWidth )};_cdcc .GBAtY =[]int8 {0};};};func (_ecc *Header )readReferredToSegmentNumbers (_afbg _d .StreamReader ,_ddbcd int )([]int ,error ){const _edbf ="\u0072\u0065\u0061\u0064R\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053e\u0067m\u0065\u006e\u0074\u004e\u0075\u006d\u0062e\u0072\u0073";_efbe :=make ([]int ,_ddbcd );if _ddbcd > 0{_ecc .RTSegments =make ([]*Header ,_ddbcd );var (_aadfc uint64 ;_acfa error ;);for _gffb :=0;_gffb < _ddbcd ;_gffb ++{_aadfc ,_acfa =_afbg .ReadBits (byte (_ecc .referenceSize ())<<3);if _acfa !=nil {return nil ,_gd .Wrapf (_acfa ,_edbf ,"\u0027\u0025\u0064\u0027 \u0072\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0020\u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u0075\u006db\u0065\u0072",_gffb );};_efbe [_gffb ]=int (_aadfc &_g .MaxInt32 );};};return _efbe ,nil ;};func (_acbg *GenericRegion )setParametersMMR (_eabc bool ,_afg ,_abca int64 ,_cacc ,_gffd uint32 ,_bfff byte ,_cgba ,_ccbd bool ,_gfea ,_aae []int8 ){_acbg .DataOffset =_afg ;_acbg .DataLength =_abca ;_acbg .RegionSegment =&RegionSegment {};_acbg .RegionSegment .BitmapHeight =_cacc ;_acbg .RegionSegment .BitmapWidth =_gffd ;_acbg .GBTemplate =_bfff ;_acbg .IsMMREncoded =_eabc ;_acbg .IsTPGDon =_cgba ;_acbg .GBAtX =_gfea ;_acbg .GBAtY =_aae ;};func (_fef *GenericRegion )Size ()int {return _fef .RegionSegment .Size ()+1+2*len (_fef .GBAtX )};func (_dgffc *SymbolDictionary )setAtPixels ()error {if _dgffc .IsHuffmanEncoded {return nil ;};_fcee :=1;if _dgffc .SdTemplate ==0{_fcee =4;};if _dfeg :=_dgffc .readAtPixels (_fcee );_dfeg !=nil {return _dfeg ;};return nil ;};func (_cebg *TextRegion )encodeSymbols (_aggb _d .BinaryWriter )(_cdfa int ,_eacb error ){const _aeecf ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";_gggbaa :=make ([]byte ,4);_gf .BigEndian .PutUint32 (_gggbaa ,_cebg .NumberOfSymbols );if _cdfa ,_eacb =_aggb .Write (_gggbaa );_eacb !=nil {return _cdfa ,_gd .Wrap (_eacb ,_aeecf ,"\u004e\u0075\u006dbe\u0072\u004f\u0066\u0053\u0079\u006d\u0062\u006f\u006c\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073");};_beee ,_eacb :=_ga .NewClassedPoints (_cebg ._fdcf ,_cebg ._edbca );if _eacb !=nil {return 0,_gd .Wrap (_eacb ,_aeecf ,"");};var _fcfec ,_cdcfa int ;_fcgf :=_fc .New ();_fcgf .Init ();if _eacb =_fcgf .EncodeInteger (_fc .IADT ,0);_eacb !=nil {return _cdfa ,_gd .Wrap (_eacb ,_aeecf ,"\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0020\u0044\u0054");};_efd ,_eacb :=_beee .GroupByY ();if _eacb !=nil {return 0,_gd .Wrap (_eacb ,_aeecf ,"");};for _ ,_gbbc :=range _efd {_agdc :=int (_gbbc .YAtIndex (0));_fdga :=_agdc -_fcfec ;if _eacb =_fcgf .EncodeInteger (_fc .IADT ,_fdga );_eacb !=nil {return _cdfa ,_gd .Wrap (_eacb ,_aeecf ,"");};var _ecb int ;for _dbfa ,_bdea :=range _gbbc .IntSlice {switch _dbfa {case 0:_abcd :=int (_gbbc .XAtIndex (_dbfa ))-_cdcfa ;if _eacb =_fcgf .EncodeInteger (_fc .IAFS ,_abcd );_eacb !=nil {return _cdfa ,_gd .Wrap (_eacb ,_aeecf ,"");};_cdcfa +=_abcd ;_ecb =_cdcfa ;default:_fecf :=int (_gbbc .XAtIndex (_dbfa ))-_ecb ;if _eacb =_fcgf .EncodeInteger (_fc .IADS ,_fecf );_eacb !=nil {return _cdfa ,_gd .Wrap (_eacb ,_aeecf ,"");};_ecb +=_fecf ;};_gebb ,_bfbd :=_cebg ._afebc .Get (_bdea );if _bfbd !=nil {return _cdfa ,_gd .Wrap (_bfbd ,_aeecf ,"");};_cacg ,_befa :=_cebg ._gcba [_gebb ];if !_befa {_cacg ,_befa =_cebg ._cffbb [_gebb ];if !_befa {return _cdfa ,_gd .Errorf (_aeecf ,"\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027\u0025d\u0027\u0020\u0069s\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064 \u0069\u006e\u0020\u0067\u006cob\u0061\u006c\u0020\u0061\u006e\u0064\u0020\u006c\u006f\u0063\u0061\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020\u006d\u0061\u0070",_gebb );};};if _bfbd =_fcgf .EncodeIAID (_cebg ._ffae ,_cacg );_bfbd !=nil {return _cdfa ,_gd .Wrap (_bfbd ,_aeecf ,"");};};if _eacb =_fcgf .EncodeOOB (_fc .IADS );_eacb !=nil {return _cdfa ,_gd .Wrap (_eacb ,_aeecf ,"");};};_fcgf .Final ();_efgc ,_eacb :=_fcgf .WriteTo (_aggb );if _eacb !=nil {return _cdfa ,_gd .Wrap (_eacb ,_aeecf ,"");};_cdfa +=int (_efgc );return _cdfa ,nil ;};func (_cfdd *SymbolDictionary )decodeHeightClassCollectiveBitmap (_aebaa int64 ,_efbf ,_fceb uint32 )(*_ga .Bitmap ,error ){if _aebaa ==0{_cgab :=_ga .New (int (_fceb ),int (_efbf ));var (_eegc byte ;_febf error ;);for _ecgce :=0;_ecgce < len (_cgab .Data );_ecgce ++{_eegc ,_febf =_cfdd ._cage .ReadByte ();if _febf !=nil {return nil ,_febf ;};if _febf =_cgab .SetByte (_ecgce ,_eegc );_febf !=nil {return nil ,_febf ;};};return _cgab ,nil ;};if _cfdd ._fgac ==nil {_cfdd ._fgac =NewGenericRegion (_cfdd ._cage );};_cfdd ._fgac .setParameters (true ,_cfdd ._cage .StreamPosition (),_aebaa ,_efbf ,_fceb );_dfce ,_gcab :=_cfdd ._fgac .GetRegionBitmap ();if _gcab !=nil {return nil ,_gcab ;};return _dfce ,nil ;};func (_eae *TextRegion )readAmountOfSymbolInstances ()error {_aafe ,_cffg :=_eae ._ccff .ReadBits (32);if _cffg !=nil {return _cffg ;};_eae .NumberOfSymbolInstances =uint32 (_aafe &_g .MaxUint32 );_gdbe :=_eae .RegionInfo .BitmapWidth *_eae .RegionInfo .BitmapHeight ;if _gdbe < _eae .NumberOfSymbolInstances {_gfd .Log .Debug ("\u004c\u0069\u006d\u0069t\u0069\u006e\u0067\u0020t\u0068\u0065\u0020n\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020d\u0065\u0063\u006f\u0064e\u0064\u0020\u0073\u0079m\u0062\u006f\u006c\u0020\u0069n\u0073\u0074\u0061\u006e\u0063\u0065\u0073 \u0074\u006f\u0020\u006f\u006ee\u0020\u0070\u0065\u0072\u0020\u0070\u0069\u0078\u0065l\u0020\u0028\u0020\u0025\u0064\u0020\u0069\u006e\u0073\u0074\u0065\u0061\u0064\u0020\u006f\u0066\u0020\u0025\u0064\u0029",_gdbe ,_eae .NumberOfSymbolInstances );_eae .NumberOfSymbolInstances =_gdbe ;};return nil ;};func (_dgg *GenericRegion )decodeTemplate0a (_dgf ,_aab ,_fgbd int ,_ebeg ,_gae int )(_gaea error ){const _ccbf ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0061";var (_bdd ,_eab int ;_fca ,_adc int ;_aac byte ;_egb int ;);if _dgf >=1{_aac ,_gaea =_dgg .Bitmap .GetByte (_gae );if _gaea !=nil {return _gd .Wrap (_gaea ,_ccbf ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_fca =int (_aac );};if _dgf >=2{_aac ,_gaea =_dgg .Bitmap .GetByte (_gae -_dgg .Bitmap .RowStride );if _gaea !=nil {return _gd .Wrap (_gaea ,_ccbf ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_adc =int (_aac )<<6;};_bdd =(_fca &0xf0)|(_adc &0x3800);for _ffgf :=0;_ffgf < _fgbd ;_ffgf =_egb {var (_bge byte ;_cbfc int ;);_egb =_ffgf +8;if _egbe :=_aab -_ffgf ;_egbe > 8{_cbfc =8;}else {_cbfc =_egbe ;};if _dgf > 0{_fca <<=8;if _egb < _aab {_aac ,_gaea =_dgg .Bitmap .GetByte (_gae +1);if _gaea !=nil {return _gd .Wrap (_gaea ,_ccbf ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_fca |=int (_aac );};};if _dgf > 1{_egcg :=_gae -_dgg .Bitmap .RowStride +1;_adc <<=8;if _egb < _aab {_aac ,_gaea =_dgg .Bitmap .GetByte (_egcg );if _gaea !=nil {return _gd .Wrap (_gaea ,_ccbf ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_adc |=int (_aac )<<6;}else {_adc |=0;};};for _eeef :=0;_eeef < _cbfc ;_eeef ++{_gbba :=uint (7-_eeef );if _dgg ._aeg {_eab =_dgg .overrideAtTemplate0a (_bdd ,_ffgf +_eeef ,_dgf ,int (_bge ),_eeef ,int (_gbba ));_dgg ._gcf .SetIndex (int32 (_eab ));}else {_dgg ._gcf .SetIndex (int32 (_bdd ));};var _dbe int ;_dbe ,_gaea =_dgg ._gag .DecodeBit (_dgg ._gcf );if _gaea !=nil {return _gd .Wrap (_gaea ,_ccbf ,"");};_bge |=byte (_dbe )<<_gbba ;_bdd =((_bdd &0x7bf7)<<1)|_dbe |((_fca >>_gbba )&0x10)|((_adc >>_gbba )&0x800);};if _abgb :=_dgg .Bitmap .SetByte (_ebeg ,_bge );_abgb !=nil {return _gd .Wrap (_abgb ,_ccbf ,"");};_ebeg ++;_gae ++;};return nil ;};func (_deaa *SymbolDictionary )huffDecodeBmSize ()(int64 ,error ){if _deaa ._abec ==nil {var (_bgga int ;_fbcgc error ;);if _deaa .SdHuffDecodeHeightSelection ==3{_bgga ++;};if _deaa .SdHuffDecodeWidthSelection ==3{_bgga ++;};_deaa ._abec ,_fbcgc =_deaa .getUserTable (_bgga );if _fbcgc !=nil {return 0,_fbcgc ;};};return _deaa ._abec .Decode (_deaa ._cage );};func (_agcb *RegionSegment )Encode (w _d .BinaryWriter )(_deed int ,_ccfb error ){const _egbef ="R\u0065g\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065n\u0074\u002e\u0045\u006eco\u0064\u0065";_cdca :=make ([]byte ,4);_gf .BigEndian .PutUint32 (_cdca ,_agcb .BitmapWidth );_deed ,_ccfb =w .Write (_cdca );if _ccfb !=nil {return 0,_gd .Wrap (_ccfb ,_egbef ,"\u0057\u0069\u0064t\u0068");};_gf .BigEndian .PutUint32 (_cdca ,_agcb .BitmapHeight );var _dccb int ;_dccb ,_ccfb =w .Write (_cdca );if _ccfb !=nil {return 0,_gd .Wrap (_ccfb ,_egbef ,"\u0048\u0065\u0069\u0067\u0068\u0074");};_deed +=_dccb ;_gf .BigEndian .PutUint32 (_cdca ,_agcb .XLocation );_dccb ,_ccfb =w .Write (_cdca );if _ccfb !=nil {return 0,_gd .Wrap (_ccfb ,_egbef ,"\u0058L\u006f\u0063\u0061\u0074\u0069\u006fn");};_deed +=_dccb ;_gf .BigEndian .PutUint32 (_cdca ,_agcb .YLocation );_dccb ,_ccfb =w .Write (_cdca );if _ccfb !=nil {return 0,_gd .Wrap (_ccfb ,_egbef ,"\u0059L\u006f\u0063\u0061\u0074\u0069\u006fn");};_deed +=_dccb ;if _ccfb =w .WriteByte (byte (_agcb .CombinaionOperator )&0x07);_ccfb !=nil {return 0,_gd .Wrap (_ccfb ,_egbef ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};_deed ++;return _deed ,nil ;};func (_ebdga *TableSegment )HtHigh ()int32 {return _ebdga ._ggfe };func (_abbf *SymbolDictionary )InitEncode (symbols *_ga .Bitmaps ,symbolList []int ,symbolMap map[int ]int ,unborderSymbols bool )error {const _gagff ="S\u0079\u006d\u0062\u006f\u006c\u0044i\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002eI\u006e\u0069\u0074E\u006ec\u006f\u0064\u0065";_abbf .SdATX =[]int8 {3,-3,2,-2};_abbf .SdATY =[]int8 {-1,-1,-2,-2};_abbf ._fggg =symbols ;_abbf ._cdabb =make ([]int ,len (symbolList ));copy (_abbf ._cdabb ,symbolList );if len (_abbf ._cdabb )!=_abbf ._fggg .Size (){return _gd .Error (_gagff ,"s\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0061\u006e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u004ci\u0073\u0074\u0020\u006f\u0066\u0020\u0064\u0069\u0066\u0066er\u0065\u006e\u0074 \u0073i\u007a\u0065");};_abbf .NumberOfNewSymbols =uint32 (symbols .Size ());_abbf .NumberOfExportedSymbols =uint32 (symbols .Size ());_abbf ._bgea =symbolMap ;_abbf ._ddde =unborderSymbols ;return nil ;};func (_fbad *SymbolDictionary )encodeATFlags (_geeg _d .BinaryWriter )(_bccd int ,_abbd error ){const _agef ="\u0065\u006e\u0063\u006f\u0064\u0065\u0041\u0054\u0046\u006c\u0061\u0067\u0073";if _fbad .IsHuffmanEncoded ||_fbad .SdTemplate !=0{return 0,nil ;};_fgfc :=4;if _fbad .SdTemplate !=0{_fgfc =1;};for _cdge :=0;_cdge < _fgfc ;_cdge ++{if _abbd =_geeg .WriteByte (byte (_fbad .SdATX [_cdge ]));_abbd !=nil {return _bccd ,_gd .Wrapf (_abbd ,_agef ,"\u0053d\u0041\u0054\u0058\u005b\u0025\u0064]",_cdge );};_bccd ++;if _abbd =_geeg .WriteByte (byte (_fbad .SdATY [_cdge ]));_abbd !=nil {return _bccd ,_gd .Wrapf (_abbd ,_agef ,"\u0053d\u0041\u0054\u0059\u005b\u0025\u0064]",_cdge );};_bccd ++;};return _bccd ,nil ;};func (_edg *PatternDictionary )Init (h *Header ,r _d .StreamReader )error {_edg ._eged =r ;return _edg .parseHeader ();};func (_bceg *SymbolDictionary )readNumberOfExportedSymbols ()error {_cgaf ,_febd :=_bceg ._cage .ReadBits (32);if _febd !=nil {return _febd ;};_bceg .NumberOfExportedSymbols =uint32 (_cgaf &_g .MaxUint32 );return nil ;};func (_gabf *SymbolDictionary )Init (h *Header ,r _d .StreamReader )error {_gabf .Header =h ;_gabf ._cage =r ;return _gabf .parseHeader ();};func (_fea *HalftoneRegion )combineGrayscalePlanes (_bdc []*_ga .Bitmap ,_bcdb int )error {_gedf :=0;for _baff :=0;_baff < _bdc [_bcdb ].Height ;_baff ++{for _gbce :=0;_gbce < _bdc [_bcdb ].Width ;_gbce +=8{_ffc ,_fada :=_bdc [_bcdb +1].GetByte (_gedf );if _fada !=nil {return _fada ;};_fdca ,_fada :=_bdc [_bcdb ].GetByte (_gedf );if _fada !=nil {return _fada ;};_fada =_bdc [_bcdb ].SetByte (_gedf ,_ga .CombineBytes (_fdca ,_ffc ,_ga .CmbOpXor ));if _fada !=nil {return _fada ;};_gedf ++;};};return nil ;};func (_geaaa *TextRegion )decodeRdh ()(int64 ,error ){const _afdc ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064h";if _geaaa .IsHuffmanEncoded {if _geaaa .SbHuffRDHeight ==3{if _geaaa ._fcdf ==nil {var (_ebcdb int ;_agcc error ;);if _geaaa .SbHuffFS ==3{_ebcdb ++;};if _geaaa .SbHuffDS ==3{_ebcdb ++;};if _geaaa .SbHuffDT ==3{_ebcdb ++;};if _geaaa .SbHuffRDWidth ==3{_ebcdb ++;};_geaaa ._fcdf ,_agcc =_geaaa .getUserTable (_ebcdb );if _agcc !=nil {return 0,_gd .Wrap (_agcc ,_afdc ,"");};};return _geaaa ._fcdf .Decode (_geaaa ._ccff );};_ebbg ,_ebegc :=_bb .GetStandardTable (14+int (_geaaa .SbHuffRDHeight ));if _ebegc !=nil {return 0,_gd .Wrap (_ebegc ,_afdc ,"");};return _ebbg .Decode (_geaaa ._ccff );};_ecdc ,_acgg :=_geaaa ._acfg .DecodeInt (_geaaa ._cced );if _acgg !=nil {return 0,_gd .Wrap (_acgg ,_afdc ,"");};return int64 (_ecdc ),nil ;};func (_ggea *TextRegion )decodeRdw ()(int64 ,error ){const _faee ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064w";if _ggea .IsHuffmanEncoded {if _ggea .SbHuffRDWidth ==3{if _ggea ._afeg ==nil {var (_dfcg int ;_dbcg error ;);if _ggea .SbHuffFS ==3{_dfcg ++;};if _ggea .SbHuffDS ==3{_dfcg ++;};if _ggea .SbHuffDT ==3{_dfcg ++;};_ggea ._afeg ,_dbcg =_ggea .getUserTable (_dfcg );if _dbcg !=nil {return 0,_gd .Wrap (_dbcg ,_faee ,"");};};return _ggea ._afeg .Decode (_ggea ._ccff );};_gaff ,_fgfeb :=_bb .GetStandardTable (14+int (_ggea .SbHuffRDWidth ));if _fgfeb !=nil {return 0,_gd .Wrap (_fgfeb ,_faee ,"");};return _gaff .Decode (_ggea ._ccff );};_deec ,_dgdb :=_ggea ._acfg .DecodeInt (_ggea ._facb );if _dgdb !=nil {return 0,_gd .Wrap (_dgdb ,_faee ,"");};return int64 (_deec ),nil ;};func (_ccbga *PageInformationSegment )String ()string {_bgbd :=&_gb .Builder {};_bgbd .WriteString ("\u000a\u005b\u0050\u0041G\u0045\u002d\u0049\u004e\u0046\u004f\u0052\u004d\u0041\u0054I\u004fN\u002d\u0053\u0045\u0047\u004d\u0045\u004eT\u005d\u000a");_bgbd .WriteString (_b .Sprintf ("\u0009\u002d \u0042\u004d\u0048e\u0069\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u000a",_ccbga .PageBMHeight ));_bgbd .WriteString (_b .Sprintf ("\u0009-\u0020B\u004d\u0057\u0069\u0064\u0074\u0068\u003a\u0020\u0025\u0064\u000a",_ccbga .PageBMWidth ));_bgbd .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0058\u003a\u0020\u0025\u0064\u000a",_ccbga .ResolutionX ));_bgbd .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0059\u003a\u0020\u0025\u0064\u000a",_ccbga .ResolutionY ));_bgbd .WriteString (_b .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0073\u000a",_ccbga ._baca ));_bgbd .WriteString (_b .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006eO\u0070\u0065\u0072\u0061\u0074\u006f\u0072O\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025v\u000a",_ccbga ._bae ));_bgbd .WriteString (_b .Sprintf ("\u0009-\u0020I\u0073\u004c\u006f\u0073\u0073l\u0065\u0073s\u003a\u0020\u0025\u0076\u000a",_ccbga .IsLossless ));_bgbd .WriteString (_b .Sprintf ("\u0009\u002d\u0020R\u0065\u0071\u0075\u0069r\u0065\u0073\u0041\u0075\u0078\u0069\u006ci\u0061\u0072\u0079\u0042\u0075\u0066\u0066\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_ccbga ._gdce ));_bgbd .WriteString (_b .Sprintf ("\u0009\u002d\u0020M\u0069\u0067\u0068\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0052e\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0076\u000a",_ccbga ._dffe ));_bgbd .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0049\u0073\u0053\u0074\u0072\u0069\u0070\u0065\u0064:\u0020\u0025\u0076\u000a",_ccbga .IsStripe ));_bgbd .WriteString (_b .Sprintf ("\t\u002d\u0020\u004d\u0061xS\u0074r\u0069\u0070\u0065\u0053\u0069z\u0065\u003a\u0020\u0025\u0076\u000a",_ccbga .MaxStripeSize ));return _bgbd .String ();};func (_ebce *PageInformationSegment )CombinationOperatorOverrideAllowed ()bool {return _ebce ._bae };func (_gggba *HalftoneRegion )grayScaleDecoding (_dae int )([][]int ,error ){var (_gfdgf []int8 ;_gfac []int8 ;);if !_gggba .IsMMREncoded {_gfdgf =make ([]int8 ,4);_gfac =make ([]int8 ,4);if _gggba .HTemplate <=1{_gfdgf [0]=3;}else if _gggba .HTemplate >=2{_gfdgf [0]=2;};_gfac [0]=-1;_gfdgf [1]=-3;_gfac [1]=-1;_gfdgf [2]=2;_gfac [2]=-2;_gfdgf [3]=-2;_gfac [3]=-2;};_fbc :=make ([]*_ga .Bitmap ,_dae );_egfc :=NewGenericRegion (_gggba ._cgf );_egfc .setParametersMMR (_gggba .IsMMREncoded ,_gggba .DataOffset ,_gggba .DataLength ,_gggba .HGridHeight ,_gggba .HGridWidth ,_gggba .HTemplate ,false ,_gggba .HSkipEnabled ,_gfdgf ,_gfac );_beca :=_dae -1;var _bccc error ;_fbc [_beca ],_bccc =_egfc .GetRegionBitmap ();if _bccc !=nil {return nil ,_bccc ;};for _beca > 0{_beca --;_egfc .Bitmap =nil ;_fbc [_beca ],_bccc =_egfc .GetRegionBitmap ();if _bccc !=nil {return nil ,_bccc ;};if _bccc =_gggba .combineGrayscalePlanes (_fbc ,_beca );_bccc !=nil {return nil ,_bccc ;};};return _gggba .computeGrayScalePlanes (_fbc ,_dae );};type TableSegment struct{_aaf _d .StreamReader ;_cgbf int32 ;_bcbf int32 ;_eegd int32 ;_bfeg int32 ;_ggfe int32 ;};func (_acd *GenericRegion )decodeTemplate1 (_bgge ,_fdc ,_ggf int ,_ddbg ,_faeg int )(_dfdg error ){const _dag ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0031";var (_aeb ,_gcg int ;_ffeg ,_aabg int ;_ebea byte ;_efb ,_ege int ;);if _bgge >=1{_ebea ,_dfdg =_acd .Bitmap .GetByte (_faeg );if _dfdg !=nil {return _gd .Wrap (_dfdg ,_dag ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_ffeg =int (_ebea );};if _bgge >=2{_ebea ,_dfdg =_acd .Bitmap .GetByte (_faeg -_acd .Bitmap .RowStride );if _dfdg !=nil {return _gd .Wrap (_dfdg ,_dag ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_aabg =int (_ebea )<<5;};_aeb =((_ffeg >>1)&0x1f8)|((_aabg >>1)&0x1e00);for _cabe :=0;_cabe < _ggf ;_cabe =_efb {var (_ced byte ;_gbdg int ;);_efb =_cabe +8;if _fgcg :=_fdc -_cabe ;_fgcg > 8{_gbdg =8;}else {_gbdg =_fgcg ;};if _bgge > 0{_ffeg <<=8;if _efb < _fdc {_ebea ,_dfdg =_acd .Bitmap .GetByte (_faeg +1);if _dfdg !=nil {return _gd .Wrap (_dfdg ,_dag ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_ffeg |=int (_ebea );};};if _bgge > 1{_aabg <<=8;if _efb < _fdc {_ebea ,_dfdg =_acd .Bitmap .GetByte (_faeg -_acd .Bitmap .RowStride +1);if _dfdg !=nil {return _gd .Wrap (_dfdg ,_dag ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_aabg |=int (_ebea )<<5;};};for _cdg :=0;_cdg < _gbdg ;_cdg ++{if _acd ._aeg {_gcg =_acd .overrideAtTemplate1 (_aeb ,_cabe +_cdg ,_bgge ,int (_ced ),_cdg );_acd ._gcf .SetIndex (int32 (_gcg ));}else {_acd ._gcf .SetIndex (int32 (_aeb ));};_ege ,_dfdg =_acd ._gag .DecodeBit (_acd ._gcf );if _dfdg !=nil {return _gd .Wrap (_dfdg ,_dag ,"");};_ced |=byte (_ege )<<uint (7-_cdg );_fdg :=uint (8-_cdg );_aeb =((_aeb &0xefb)<<1)|_ege |((_ffeg >>_fdg )&0x8)|((_aabg >>_fdg )&0x200);};if _bgce :=_acd .Bitmap .SetByte (_ddbg ,_ced );_bgce !=nil {return _gd .Wrap (_bgce ,_dag ,"");};_ddbg ++;_faeg ++;};return nil ;};func (_acdb *Header )subInputReader ()(_d .StreamReader ,error ){return _d .NewSubstreamReader (_acdb .Reader ,_acdb .SegmentDataStartOffset ,_acdb .SegmentDataLength );};func (_egaa *PatternDictionary )readPatternWidthAndHeight ()error {_gagc ,_bab :=_egaa ._eged .ReadByte ();if _bab !=nil {return _bab ;};_egaa .HdpWidth =_gagc ;_gagc ,_bab =_egaa ._eged .ReadByte ();if _bab !=nil {return _bab ;};_egaa .HdpHeight =_gagc ;return nil ;};func (_caee *GenericRegion )overrideAtTemplate3 (_gadcd ,_gaeb ,_eafd ,_bggec ,_gda int )int {_gadcd &=0x3EF;if _caee .GBAtY [0]==0&&_caee .GBAtX [0]>=-int8 (_gda ){_gadcd |=(_bggec >>uint (7-(int8 (_gda )+_caee .GBAtX [0]))&0x1)<<4;}else {_gadcd |=int (_caee .getPixel (_gaeb +int (_caee .GBAtX [0]),_eafd +int (_caee .GBAtY [0])))<<4;};return _gadcd ;};const (TSymbolDictionary Type =0;TIntermediateTextRegion Type =4;TImmediateTextRegion Type =6;TImmediateLosslessTextRegion Type =7;TPatternDictionary Type =16;TIntermediateHalftoneRegion Type =20;TImmediateHalftoneRegion Type =22;TImmediateLosslessHalftoneRegion Type =23;TIntermediateGenericRegion Type =36;TImmediateGenericRegion Type =38;TImmediateLosslessGenericRegion Type =39;TIntermediateGenericRefinementRegion Type =40;TImmediateGenericRefinementRegion Type =42;TImmediateLosslessGenericRefinementRegion Type =43;TPageInformation Type =48;TEndOfPage Type =49;TEndOfStrip Type =50;TEndOfFile Type =51;TProfiles Type =52;TTables Type =53;TExtension Type =62;TBitmap Type =70;);func _gfgd (_fadc _d .StreamReader ,_fcaf *Header )*TextRegion {_acfag :=&TextRegion {_ccff :_fadc ,Header :_fcaf ,RegionInfo :NewRegionSegment (_fadc )};return _acfag ;};func NewHeader (d Documenter ,r _d .StreamReader ,offset int64 ,organizationType OrganizationType )(*Header ,error ){_fggb :=&Header {Reader :r };if _fbgd :=_fggb .parse (d ,r ,offset ,organizationType );_fbgd !=nil {return nil ,_gd .Wrap (_fbgd ,"\u004ee\u0077\u0048\u0065\u0061\u0064\u0065r","");};return _fggb ,nil ;};func (_cfae *TableSegment )HtPS ()int32 {return _cfae ._bcbf };func (_ddaf *PageInformationSegment )Encode (w _d .BinaryWriter )(_bbeb int ,_fecg error ){const _afcd ="\u0050\u0061g\u0065\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u002e\u0045\u006eco\u0064\u0065";_feb :=make ([]byte ,4);_gf .BigEndian .PutUint32 (_feb ,uint32 (_ddaf .PageBMWidth ));_bbeb ,_fecg =w .Write (_feb );if _fecg !=nil {return _bbeb ,_gd .Wrap (_fecg ,_afcd ,"\u0077\u0069\u0064t\u0068");};_gf .BigEndian .PutUint32 (_feb ,uint32 (_ddaf .PageBMHeight ));var _cdgg int ;_cdgg ,_fecg =w .Write (_feb );if _fecg !=nil {return _cdgg +_bbeb ,_gd .Wrap (_fecg ,_afcd ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_bbeb +=_cdgg ;_gf .BigEndian .PutUint32 (_feb ,uint32 (_ddaf .ResolutionX ));_cdgg ,_fecg =w .Write (_feb );if _fecg !=nil {return _cdgg +_bbeb ,_gd .Wrap (_fecg ,_afcd ,"\u0078\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_bbeb +=_cdgg ;_gf .BigEndian .PutUint32 (_feb ,uint32 (_ddaf .ResolutionY ));if _cdgg ,_fecg =w .Write (_feb );_fecg !=nil {return _cdgg +_bbeb ,_gd .Wrap (_fecg ,_afcd ,"\u0079\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_bbeb +=_cdgg ;if _fecg =_ddaf .encodeFlags (w );_fecg !=nil {return _bbeb ,_gd .Wrap (_fecg ,_afcd ,"");};_bbeb ++;if _cdgg ,_fecg =_ddaf .encodeStripingInformation (w );_fecg !=nil {return _bbeb ,_gd .Wrap (_fecg ,_afcd ,"");};_bbeb +=_cdgg ;return _bbeb ,nil ;};func (_badf *SymbolDictionary )getUserTable (_dad int )(_bb .Tabler ,error ){var _bcacc int ;for _ ,_dddge :=range _badf .Header .RTSegments {if _dddge .Type ==53{if _bcacc ==_dad {_fagc ,_gcdfa :=_dddge .GetSegmentData ();if _gcdfa !=nil {return nil ,_gcdfa ;};_aaee :=_fagc .(_bb .BasicTabler );return _bb .NewEncodedTable (_aaee );};_bcacc ++;};};return nil ,nil ;};func (_gacfa *Header )writeReferredToCount (_eced _d .BinaryWriter )(_fbee int ,_bcabc error ){const _ggef ="w\u0072i\u0074\u0065\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0043ou\u006e\u0074";_gacfa .RTSNumbers =make ([]int ,len (_gacfa .RTSegments ));for _adad ,_bggeg :=range _gacfa .RTSegments {_gacfa .RTSNumbers [_adad ]=int (_bggeg .SegmentNumber );};if len (_gacfa .RTSNumbers )<=4{var _egg byte ;if len (_gacfa .RetainBits )>=1{_egg =_gacfa .RetainBits [0];};_egg |=byte (len (_gacfa .RTSNumbers ))<<5;if _bcabc =_eced .WriteByte (_egg );_bcabc !=nil {return 0,_gd .Wrap (_bcabc ,_ggef ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return 1,nil ;};_eadc :=uint32 (len (_gacfa .RTSNumbers ));_ecaa :=make ([]byte ,4+_ag .Ceil (len (_gacfa .RTSNumbers )+1,8));_eadc |=0x7<<29;_gf .BigEndian .PutUint32 (_ecaa ,_eadc );copy (_ecaa [1:],_gacfa .RetainBits );_fbee ,_bcabc =_eced .Write (_ecaa );if _bcabc !=nil {return 0,_gd .Wrap (_bcabc ,_ggef ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return _fbee ,nil ;};func (_bgcc *RegionSegment )Size ()int {return 17};func (_bggbc *GenericRegion )overrideAtTemplate2 (_dbbe ,_cgbc ,_dddg ,_dbbdf ,_agfd int )int {_dbbe &=0x3FB;if _bggbc .GBAtY [0]==0&&_bggbc .GBAtX [0]>=-int8 (_agfd ){_dbbe |=(_dbbdf >>uint (7-(int8 (_agfd )+_bggbc .GBAtX [0]))&0x1)<<2;}else {_dbbe |=int (_bggbc .getPixel (_cgbc +int (_bggbc .GBAtX [0]),_dddg +int (_bggbc .GBAtY [0])))<<2;};return _dbbe ;};func (_dfcf *TextRegion )setParameters (_dacd *_gg .Decoder ,_gcaa ,_eeaag bool ,_ecea ,_bcdg uint32 ,_bgcee uint32 ,_egea int8 ,_eebf uint32 ,_egcd int8 ,_dade _ga .CombinationOperator ,_ebgea int8 ,_dgfa int16 ,_afgd ,_fedc ,_decg ,_cfcd ,_acbd ,_caage ,_adcf ,_cbfgf ,_baaa ,_faddf int8 ,_cbde ,_bbge []int8 ,_cbadd []*_ga .Bitmap ,_fdbce int8 ){_dfcf ._acfg =_dacd ;_dfcf .IsHuffmanEncoded =_gcaa ;_dfcf .UseRefinement =_eeaag ;_dfcf .RegionInfo .BitmapWidth =_ecea ;_dfcf .RegionInfo .BitmapHeight =_bcdg ;_dfcf .NumberOfSymbolInstances =_bgcee ;_dfcf .SbStrips =_egea ;_dfcf .NumberOfSymbols =_eebf ;_dfcf .DefaultPixel =_egcd ;_dfcf .CombinationOperator =_dade ;_dfcf .IsTransposed =_ebgea ;_dfcf .ReferenceCorner =_dgfa ;_dfcf .SbDsOffset =_afgd ;_dfcf .SbHuffFS =_fedc ;_dfcf .SbHuffDS =_decg ;_dfcf .SbHuffDT =_cfcd ;_dfcf .SbHuffRDWidth =_acbd ;_dfcf .SbHuffRDHeight =_caage ;_dfcf .SbHuffRSize =_baaa ;_dfcf .SbHuffRDX =_adcf ;_dfcf .SbHuffRDY =_cbfgf ;_dfcf .SbrTemplate =_faddf ;_dfcf .SbrATX =_cbde ;_dfcf .SbrATY =_bbge ;_dfcf .Symbols =_cbadd ;_dfcf ._ffecb =_fdbce ;};func (_dbg *GenericRegion )GetRegionBitmap ()(_ebgf *_ga .Bitmap ,_gadb error ){if _dbg .Bitmap !=nil {return _dbg .Bitmap ,nil ;};if _dbg .IsMMREncoded {if _dbg ._gfdg ==nil {_dbg ._gfdg ,_gadb =_eg .New (_dbg ._beb ,int (_dbg .RegionSegment .BitmapWidth ),int (_dbg .RegionSegment .BitmapHeight ),_dbg .DataOffset ,_dbg .DataLength );if _gadb !=nil {return nil ,_gadb ;};};_dbg .Bitmap ,_gadb =_dbg ._gfdg .UncompressMMR ();return _dbg .Bitmap ,_gadb ;};if _gadb =_dbg .updateOverrideFlags ();_gadb !=nil {return nil ,_gadb ;};var _bbc int ;if _dbg ._gag ==nil {_dbg ._gag ,_gadb =_gg .New (_dbg ._beb );if _gadb !=nil {return nil ,_gadb ;};};if _dbg ._gcf ==nil {_dbg ._gcf =_gg .NewStats (65536,1);};_dbg .Bitmap =_ga .New (int (_dbg .RegionSegment .BitmapWidth ),int (_dbg .RegionSegment .BitmapHeight ));_gce :=int (uint32 (_dbg .Bitmap .Width +7)&(^uint32 (7)));for _aecd :=0;_aecd < _dbg .Bitmap .Height ;_aecd ++{if _dbg .IsTPGDon {var _ccdc int ;_ccdc ,_gadb =_dbg .decodeSLTP ();if _gadb !=nil {return nil ,_gadb ;};_bbc ^=_ccdc ;};if _bbc ==1{if _aecd > 0{if _gadb =_dbg .copyLineAbove (_aecd );_gadb !=nil {return nil ,_gadb ;};};}else {if _gadb =_dbg .decodeLine (_aecd ,_dbg .Bitmap .Width ,_gce );_gadb !=nil {return nil ,_gadb ;};};};return _dbg .Bitmap ,nil ;};func (_dcab *TextRegion )setCodingStatistics ()error {if _dcab ._bacg ==nil {_dcab ._bacg =_gg .NewStats (512,1);};if _dcab ._geff ==nil {_dcab ._geff =_gg .NewStats (512,1);};if _dcab ._eaa ==nil {_dcab ._eaa =_gg .NewStats (512,1);};if _dcab ._ddbgd ==nil {_dcab ._ddbgd =_gg .NewStats (512,1);};if _dcab ._gbef ==nil {_dcab ._gbef =_gg .NewStats (512,1);};if _dcab ._facb ==nil {_dcab ._facb =_gg .NewStats (512,1);};if _dcab ._cced ==nil {_dcab ._cced =_gg .NewStats (512,1);};if _dcab ._bcgeb ==nil {_dcab ._bcgeb =_gg .NewStats (1<<uint (_dcab ._ffecb ),1);};if _dcab ._cbcd ==nil {_dcab ._cbcd =_gg .NewStats (512,1);};if _dcab ._gegea ==nil {_dcab ._gegea =_gg .NewStats (512,1);};if _dcab ._acfg ==nil {var _cgbcg error ;_dcab ._acfg ,_cgbcg =_gg .New (_dcab ._ccff );if _cgbcg !=nil {return _cgbcg ;};};return nil ;};func (_gbg *PatternDictionary )readGrayMax ()error {_dccf ,_eeae :=_gbg ._eged .ReadBits (32);if _eeae !=nil {return _eeae ;};_gbg .GrayMax =uint32 (_dccf &_g .MaxUint32 );return nil ;};func (_caf *GenericRefinementRegion )Init (header *Header ,r _d .StreamReader )error {_caf ._fb =header ;_caf ._cb =r ;_caf .RegionInfo =NewRegionSegment (r );return _caf .parseHeader ();};func (_ebgb *GenericRegion )decodeTemplate2 (_afa ,_ggc ,_bebg int ,_gdfe ,_ddg int )(_gffg error ){const _fefa ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0032";var (_aga ,_agdd int ;_ddga ,_gfaf int ;_abeg byte ;_aabb ,_cffe int ;);if _afa >=1{_abeg ,_gffg =_ebgb .Bitmap .GetByte (_ddg );if _gffg !=nil {return _gd .Wrap (_gffg ,_fefa ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0031");};_ddga =int (_abeg );};if _afa >=2{_abeg ,_gffg =_ebgb .Bitmap .GetByte (_ddg -_ebgb .Bitmap .RowStride );if _gffg !=nil {return _gd .Wrap (_gffg ,_fefa ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0032");};_gfaf =int (_abeg )<<4;};_aga =(_ddga >>3&0x7c)|(_gfaf >>3&0x380);for _fag :=0;_fag < _bebg ;_fag =_aabb {var (_fdcc byte ;_adb int ;);_aabb =_fag +8;if _ddf :=_ggc -_fag ;_ddf > 8{_adb =8;}else {_adb =_ddf ;};if _afa > 0{_ddga <<=8;if _aabb < _ggc {_abeg ,_gffg =_ebgb .Bitmap .GetByte (_ddg +1);if _gffg !=nil {return _gd .Wrap (_gffg ,_fefa ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0030");};_ddga |=int (_abeg );};};if _afa > 1{_gfaf <<=8;if _aabb < _ggc {_abeg ,_gffg =_ebgb .Bitmap .GetByte (_ddg -_ebgb .Bitmap .RowStride +1);if _gffg !=nil {return _gd .Wrap (_gffg ,_fefa ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0031");};_gfaf |=int (_abeg )<<4;};};for _cgcc :=0;_cgcc < _adb ;_cgcc ++{_afc :=uint (10-_cgcc );if _ebgb ._aeg {_agdd =_ebgb .overrideAtTemplate2 (_aga ,_fag +_cgcc ,_afa ,int (_fdcc ),_cgcc );_ebgb ._gcf .SetIndex (int32 (_agdd ));}else {_ebgb ._gcf .SetIndex (int32 (_aga ));};_cffe ,_gffg =_ebgb ._gag .DecodeBit (_ebgb ._gcf );if _gffg !=nil {return _gd .Wrap (_gffg ,_fefa ,"");};_fdcc |=byte (_cffe <<uint (7-_cgcc ));_aga =((_aga &0x1bd)<<1)|_cffe |((_ddga >>_afc )&0x4)|((_gfaf >>_afc )&0x80);};if _fbf :=_ebgb .Bitmap .SetByte (_gdfe ,_fdcc );_fbf !=nil {return _gd .Wrap (_fbf ,_fefa ,"");};_gdfe ++;_ddg ++;};return nil ;};func (_gbea *TextRegion )decodeCurrentT ()(int64 ,error ){if _gbea .SbStrips !=1{if _gbea .IsHuffmanEncoded {_edda ,_caga :=_gbea ._ccff .ReadBits (byte (_gbea .LogSBStrips ));return int64 (_edda ),_caga ;};_bedc ,_fbfb :=_gbea ._acfg .DecodeInt (_gbea ._ddbgd );if _fbfb !=nil {return 0,_fbfb ;};return int64 (_bedc ),nil ;};return 0,nil ;};func (_dca *HalftoneRegion )parseHeader ()error {if _gbda :=_dca .RegionSegment .parseHeader ();_gbda !=nil {return _gbda ;};_aadf ,_acdd :=_dca ._cgf .ReadBit ();if _acdd !=nil {return _acdd ;};_dca .HDefaultPixel =int8 (_aadf );_efcb ,_acdd :=_dca ._cgf .ReadBits (3);if _acdd !=nil {return _acdd ;};_dca .CombinationOperator =_ga .CombinationOperator (_efcb &0xf);_aadf ,_acdd =_dca ._cgf .ReadBit ();if _acdd !=nil {return _acdd ;};if _aadf ==1{_dca .HSkipEnabled =true ;};_efcb ,_acdd =_dca ._cgf .ReadBits (2);if _acdd !=nil {return _acdd ;};_dca .HTemplate =byte (_efcb &0xf);_aadf ,_acdd =_dca ._cgf .ReadBit ();if _acdd !=nil {return _acdd ;};if _aadf ==1{_dca .IsMMREncoded =true ;};_efcb ,_acdd =_dca ._cgf .ReadBits (32);if _acdd !=nil {return _acdd ;};_dca .HGridWidth =uint32 (_efcb &_g .MaxUint32 );_efcb ,_acdd =_dca ._cgf .ReadBits (32);if _acdd !=nil {return _acdd ;};_dca .HGridHeight =uint32 (_efcb &_g .MaxUint32 );_efcb ,_acdd =_dca ._cgf .ReadBits (32);if _acdd !=nil {return _acdd ;};_dca .HGridX =int32 (_efcb &_g .MaxInt32 );_efcb ,_acdd =_dca ._cgf .ReadBits (32);if _acdd !=nil {return _acdd ;};_dca .HGridY =int32 (_efcb &_g .MaxInt32 );_efcb ,_acdd =_dca ._cgf .ReadBits (16);if _acdd !=nil {return _acdd ;};_dca .HRegionX =uint16 (_efcb &_g .MaxUint16 );_efcb ,_acdd =_dca ._cgf .ReadBits (16);if _acdd !=nil {return _acdd ;};_dca .HRegionY =uint16 (_efcb &_g .MaxUint16 );if _acdd =_dca .computeSegmentDataStructure ();_acdd !=nil {return _acdd ;};return _dca .checkInput ();};func (_daage *TextRegion )getUserTable (_dbedea int )(_bb .Tabler ,error ){const _gdec ="\u0067\u0065\u0074U\u0073\u0065\u0072\u0054\u0061\u0062\u006c\u0065";var _ffcdg int ;for _ ,_ddfa :=range _daage .Header .RTSegments {if _ddfa .Type ==53{if _ffcdg ==_dbedea {_gfce ,_aceb :=_ddfa .GetSegmentData ();if _aceb !=nil {return nil ,_aceb ;};_aag ,_gdcc :=_gfce .(*TableSegment );if !_gdcc {_gfd .Log .Debug (_b .Sprintf ("\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079p\u0065\u00205\u0033\u0020\u002d\u0020\u0061\u006ed\u0020in\u0064\u0065\u0078\u003a\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_ddfa .SegmentNumber ));return nil ,_gd .Error (_gdec ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079\u0070e\u0020\u0035\u0033\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u002a\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074");};return _bb .NewEncodedTable (_aag );};_ffcdg ++;};};return nil ,nil ;};func (_gafe *GenericRegion )readGBAtPixels (_cdab int )error {const _aeec ="\u0072\u0065\u0061\u0064\u0047\u0042\u0041\u0074\u0050i\u0078\u0065\u006c\u0073";_gafe .GBAtX =make ([]int8 ,_cdab );_gafe .GBAtY =make ([]int8 ,_cdab );for _bbf :=0;_bbf < _cdab ;_bbf ++{_cbea ,_daf :=_gafe ._beb .ReadByte ();if _daf !=nil {return _gd .Wrapf (_daf ,_aeec ,"\u0058\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_bbf );};_gafe .GBAtX [_bbf ]=int8 (_cbea );_cbea ,_daf =_gafe ._beb .ReadByte ();if _daf !=nil {return _gd .Wrapf (_daf ,_aeec ,"\u0059\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_bbf );};_gafe .GBAtY [_bbf ]=int8 (_cbea );};return nil ;};func (_baaf *PageInformationSegment )readMaxStripeSize ()error {_aeecd ,_gdbc :=_baaf ._ddgg .ReadBits (15);if _gdbc !=nil {return _gdbc ;};_baaf .MaxStripeSize =uint16 (_aeecd &_g .MaxUint16 );return nil ;};func (_effb *SymbolDictionary )decodeDifferenceWidth ()(int64 ,error ){if _effb .IsHuffmanEncoded {switch _effb .SdHuffDecodeWidthSelection {case 0:_ggae ,_adae :=_bb .GetStandardTable (2);if _adae !=nil {return 0,_adae ;};return _ggae .Decode (_effb ._cage );case 1:_bbfbfg ,_eecf :=_bb .GetStandardTable (3);if _eecf !=nil {return 0,_eecf ;};return _bbfbfg .Decode (_effb ._cage );case 3:if _effb ._eebg ==nil {var _fcfe int ;if _effb .SdHuffDecodeHeightSelection ==3{_fcfe ++;};_dbacc ,_ecec :=_effb .getUserTable (_fcfe );if _ecec !=nil {return 0,_ecec ;};_effb ._eebg =_dbacc ;};return _effb ._eebg .Decode (_effb ._cage );};}else {_aeada ,_bbgfg :=_effb ._fdfe .DecodeInt (_effb ._bbcg );if _bbgfg !=nil {return 0,_bbgfg ;};return int64 (_aeada ),nil ;};return 0,nil ;};func (_gdfc *HalftoneRegion )computeGrayScalePlanes (_acf []*_ga .Bitmap ,_gcgb int )([][]int ,error ){_ddbe :=make ([][]int ,_gdfc .HGridHeight );for _gbf :=0;_gbf < len (_ddbe );_gbf ++{_ddbe [_gbf ]=make ([]int ,_gdfc .HGridWidth );};for _bca :=0;_bca < int (_gdfc .HGridHeight );_bca ++{for _aeaa :=0;_aeaa < int (_gdfc .HGridWidth );_aeaa +=8{var _fdcg int ;if _gaa :=int (_gdfc .HGridWidth )-_aeaa ;_gaa > 8{_fdcg =8;}else {_fdcg =_gaa ;};_ggge :=_acf [0].GetByteIndex (_aeaa ,_bca );for _gcff :=0;_gcff < _fdcg ;_gcff ++{_ebad :=_gcff +_aeaa ;_ddbe [_bca ][_ebad ]=0;for _fcf :=0;_fcf < _gcgb ;_fcf ++{_fgfd ,_dbed :=_acf [_fcf ].GetByte (_ggge );if _dbed !=nil {return nil ,_dbed ;};_afec :=_fgfd >>uint (7-_ebad &7);_cbaa :=_afec &1;_agg :=1<<uint (_fcf );_caeea :=int (_cbaa )*_agg ;_ddbe [_bca ][_ebad ]+=_caeea ;};};};};return _ddbe ,nil ;};func (_degf *SymbolDictionary )getSymbol (_cfb int )(*_ga .Bitmap ,error ){const _aefa ="\u0067e\u0074\u0053\u0079\u006d\u0062\u006fl";_bdga ,_edef :=_degf ._fggg .GetBitmap (_degf ._cdabb [_cfb ]);if _edef !=nil {return nil ,_gd .Wrap (_edef ,_aefa ,"\u0063\u0061n\u0027\u0074\u0020g\u0065\u0074\u0020\u0073\u0079\u006d\u0062\u006f\u006c");};return _bdga ,nil ;};func (_abcgg *TextRegion )computeSymbolCodeLength ()error {if _abcgg .IsHuffmanEncoded {return _abcgg .symbolIDCodeLengths ();};_abcgg ._ffecb =int8 (_g .Ceil (_g .Log (float64 (_abcgg .NumberOfSymbols ))/_g .Log (2)));return nil ;};func (_cd *EndOfStripe )LineNumber ()int {return _cd ._ge };func (_dadg *TableSegment )HtOOB ()int32 {return _dadg ._cgbf };func (_fdbda *TextRegion )initSymbols ()error {const _aaed ="i\u006e\u0069\u0074\u0053\u0079\u006d\u0062\u006f\u006c\u0073";for _ ,_fdfa :=range _fdbda .Header .RTSegments {if _fdfa ==nil {return _gd .Error (_aaed ,"\u006e\u0069\u006c\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020pr\u006f\u0076\u0069\u0064\u0065\u0064 \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0074\u0065\u0078\u0074\u0020\u0072\u0065g\u0069\u006f\u006e\u0020\u0053\u0079\u006d\u0062o\u006c\u0073");};if _fdfa .Type ==0{_deba ,_gbab :=_fdfa .GetSegmentData ();if _gbab !=nil {return _gd .Wrap (_gbab ,_aaed ,"");};_egee ,_gdga :=_deba .(*SymbolDictionary );if !_gdga {return _gd .Error (_aaed ,"\u0072e\u0066\u0065r\u0072\u0065\u0064 \u0054\u006f\u0020\u0053\u0065\u0067\u006de\u006e\u0074\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_egee ._gggg =_fdbda ._bcgeb ;_efgf ,_gbab :=_egee .GetDictionary ();if _gbab !=nil {return _gd .Wrap (_gbab ,_aaed ,"");};_fdbda .Symbols =append (_fdbda .Symbols ,_efgf ...);};};_fdbda .NumberOfSymbols =uint32 (len (_fdbda .Symbols ));return nil ;};func (_cead *TextRegion )String ()string {_fedg :=&_gb .Builder {};_fedg .WriteString ("\u000a[\u0054E\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u000a");_fedg .WriteString (_cead .RegionInfo .String ()+"\u000a");_fedg .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0053br\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0025\u0076\u000a",_cead .SbrTemplate ));_fedg .WriteString (_b .Sprintf ("\u0009-\u0020S\u0062\u0044\u0073\u004f\u0066f\u0073\u0065t\u003a\u0020\u0025\u0076\u000a",_cead .SbDsOffset ));_fedg .WriteString (_b .Sprintf ("\t\u002d \u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0050i\u0078\u0065\u006c\u003a %\u0076\u000a",_cead .DefaultPixel ));_fedg .WriteString (_b .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0076\u000a",_cead .CombinationOperator ));_fedg .WriteString (_b .Sprintf ("\t\u002d \u0049\u0073\u0054\u0072\u0061\u006e\u0073\u0070o\u0073\u0065\u0064\u003a %\u0076\u000a",_cead .IsTransposed ));_fedg .WriteString (_b .Sprintf ("\u0009\u002d\u0020Re\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0043\u006f\u0072\u006e\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_cead .ReferenceCorner ));_fedg .WriteString (_b .Sprintf ("\t\u002d\u0020\u0055\u0073eR\u0065f\u0069\u006e\u0065\u006d\u0065n\u0074\u003a\u0020\u0025\u0076\u000a",_cead .UseRefinement ));_fedg .WriteString (_b .Sprintf ("\u0009-\u0020\u0049\u0073\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045n\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0076\u000a",_cead .IsHuffmanEncoded ));if _cead .IsHuffmanEncoded {_fedg .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_cead .SbHuffRSize ));_fedg .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0059:\u0020\u0025\u0076\u000a",_cead .SbHuffRDY ));_fedg .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0058:\u0020\u0025\u0076\u000a",_cead .SbHuffRDX ));_fedg .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069\u0067\u0068\u0074\u003a\u0020\u0025v\u000a",_cead .SbHuffRDHeight ));_fedg .WriteString (_b .Sprintf ("\t\u002d\u0020\u0053\u0062Hu\u0066f\u0052\u0044\u0057\u0069\u0064t\u0068\u003a\u0020\u0025\u0076\u000a",_cead .SbHuffRDWidth ));_fedg .WriteString (_b .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0054\u003a\u0020\u0025\u0076\u000a",_cead .SbHuffDT ));_fedg .WriteString (_b .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0053\u003a\u0020\u0025\u0076\u000a",_cead .SbHuffDS ));_fedg .WriteString (_b .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0046\u0053\u003a\u0020\u0025\u0076\u000a",_cead .SbHuffFS ));};_fedg .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_cead .SbrATX ));_fedg .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0059:\u0020\u0025\u0076\u000a",_cead .SbrATY ));_fedg .WriteString (_b .Sprintf ("\u0009\u002d\u0020N\u0075\u006d\u0062\u0065r\u004f\u0066\u0053\u0079\u006d\u0062\u006fl\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_cead .NumberOfSymbolInstances ));_fedg .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_cead .SbrATX ));return _fedg .String ();};func (_gfb *template1 )form (_eage ,_bac ,_ccg ,_eac ,_aff int16 )int16 {return ((_eage &0x02)<<8)|(_bac <<6)|((_ccg &0x03)<<4)|(_eac <<1)|_aff ;};func (_feaff *TextRegion )checkInput ()error {const _bee ="\u0063\u0068\u0065\u0063\u006b\u0049\u006e\u0070\u0075\u0074";if !_feaff .UseRefinement {if _feaff .SbrTemplate !=0{_gfd .Log .Debug ("\u0053\u0062\u0072Te\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_feaff .SbrTemplate =0;};};if _feaff .SbHuffFS ==2||_feaff .SbHuffRDWidth ==2||_feaff .SbHuffRDHeight ==2||_feaff .SbHuffRDX ==2||_feaff .SbHuffRDY ==2{return _gd .Error (_bee ,"h\u0075\u0066\u0066\u006d\u0061\u006e \u0066\u006c\u0061\u0067\u0020\u0076a\u006c\u0075\u0065\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074e\u0064");};if !_feaff .UseRefinement {if _feaff .SbHuffRSize !=0{_gfd .Log .Debug ("\u0053\u0062\u0048uf\u0066\u0052\u0053\u0069\u007a\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_feaff .SbHuffRSize =0;};if _feaff .SbHuffRDY !=0{_gfd .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044Y\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_feaff .SbHuffRDY =0;};if _feaff .SbHuffRDX !=0{_gfd .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044X\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_feaff .SbHuffRDX =0;};if _feaff .SbHuffRDWidth !=0{_gfd .Log .Debug ("\u0053b\u0048\u0075\u0066\u0066R\u0044\u0057\u0069\u0064\u0074h\u0020s\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u00200");_feaff .SbHuffRDWidth =0;};if _feaff .SbHuffRDHeight !=0{_gfd .Log .Debug ("\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069g\u0068\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0030");_feaff .SbHuffRDHeight =0;};};return nil ;};func (_dfbf *HalftoneRegion )computeY (_debd ,_fdbf int )int {return _dfbf .shiftAndFill (int (_dfbf .HGridY )+_debd *int (_dfbf .HRegionX )-_fdbf *int (_dfbf .HRegionY ));};var _ SegmentEncoder =&RegionSegment {};func (_gbcdd *TextRegion )decodeRI ()(int64 ,error ){if !_gbcdd .UseRefinement {return 0,nil ;};if _gbcdd .IsHuffmanEncoded {_bbegf ,_abacc :=_gbcdd ._ccff .ReadBit ();return int64 (_bbegf ),_abacc ;};_dega ,_bdfga :=_gbcdd ._acfg .DecodeInt (_gbcdd ._gbef );return int64 (_dega ),_bdfga ;};func (_fggcg *SymbolDictionary )decodeDirectlyThroughGenericRegion (_cefc ,_badc uint32 )error {if _fggcg ._fgac ==nil {_fggcg ._fgac =NewGenericRegion (_fggcg ._cage );};_fggcg ._fgac .setParametersWithAt (false ,byte (_fggcg .SdTemplate ),false ,false ,_fggcg .SdATX ,_fggcg .SdATY ,_cefc ,_badc ,_fggcg ._bdcd ,_fggcg ._fdfe );return _fggcg .addSymbol (_fggcg ._fgac );};func (_dea *SymbolDictionary )encodeFlags (_efbb _d .BinaryWriter )(_gceb int ,_cbec error ){const _bdcg ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _cbec =_efbb .SkipBits (3);_cbec !=nil {return 0,_gd .Wrap (_cbec ,_bdcg ,"\u0065\u006d\u0070\u0074\u0079\u0020\u0062\u0069\u0074\u0073");};var _acdc int ;if _dea .SdrTemplate > 0{_acdc =1;};if _cbec =_efbb .WriteBit (_acdc );_cbec !=nil {return _gceb ,_gd .Wrap (_cbec ,_bdcg ,"s\u0064\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_acdc =0;if _dea .SdTemplate > 1{_acdc =1;};if _cbec =_efbb .WriteBit (_acdc );_cbec !=nil {return _gceb ,_gd .Wrap (_cbec ,_bdcg ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_acdc =0;if _dea .SdTemplate ==1||_dea .SdTemplate ==3{_acdc =1;};if _cbec =_efbb .WriteBit (_acdc );_cbec !=nil {return _gceb ,_gd .Wrap (_cbec ,_bdcg ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_acdc =0;if _dea ._gbgb {_acdc =1;};if _cbec =_efbb .WriteBit (_acdc );_cbec !=nil {return _gceb ,_gd .Wrap (_cbec ,_bdcg ,"\u0063\u006f\u0064in\u0067\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0065\u0064");};_acdc =0;if _dea ._abcc {_acdc =1;};if _cbec =_efbb .WriteBit (_acdc );_cbec !=nil {return _gceb ,_gd .Wrap (_cbec ,_bdcg ,"\u0063\u006f\u0064\u0069ng\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0075\u0073\u0065\u0064");};_acdc =0;if _dea .SdHuffAggInstanceSelection {_acdc =1;};if _cbec =_efbb .WriteBit (_acdc );_cbec !=nil {return _gceb ,_gd .Wrap (_cbec ,_bdcg ,"\u0073\u0064\u0048\u0075\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074");};_acdc =int (_dea .SdHuffBMSizeSelection );if _cbec =_efbb .WriteBit (_acdc );_cbec !=nil {return _gceb ,_gd .Wrap (_cbec ,_bdcg ,"\u0073\u0064\u0048u\u0066\u0066\u0042\u006d\u0053\u0069\u007a\u0065");};_acdc =0;if _dea .SdHuffDecodeWidthSelection > 1{_acdc =1;};if _cbec =_efbb .WriteBit (_acdc );_cbec !=nil {return _gceb ,_gd .Wrap (_cbec ,_bdcg ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_acdc =0;switch _dea .SdHuffDecodeWidthSelection {case 1,3:_acdc =1;};if _cbec =_efbb .WriteBit (_acdc );_cbec !=nil {return _gceb ,_gd .Wrap (_cbec ,_bdcg ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_acdc =0;if _dea .SdHuffDecodeHeightSelection > 1{_acdc =1;};if _cbec =_efbb .WriteBit (_acdc );_cbec !=nil {return _gceb ,_gd .Wrap (_cbec ,_bdcg ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_acdc =0;switch _dea .SdHuffDecodeHeightSelection {case 1,3:_acdc =1;};if _cbec =_efbb .WriteBit (_acdc );_cbec !=nil {return _gceb ,_gd .Wrap (_cbec ,_bdcg ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_acdc =0;if _dea .UseRefinementAggregation {_acdc =1;};if _cbec =_efbb .WriteBit (_acdc );_cbec !=nil {return _gceb ,_gd .Wrap (_cbec ,_bdcg ,"\u0073\u0064\u0052\u0065\u0066\u0041\u0067\u0067");};_acdc =0;if _dea .IsHuffmanEncoded {_acdc =1;};if _cbec =_efbb .WriteBit (_acdc );_cbec !=nil {return _gceb ,_gd .Wrap (_cbec ,_bdcg ,"\u0073\u0064\u0048\u0075\u0066\u0066");};return 2,nil ;};func (_aebde *SymbolDictionary )decodeHeightClassBitmap (_aegf *_ga .Bitmap ,_egde int64 ,_ccef int ,_aabge []int )error {for _aba :=_egde ;_aba < int64 (_aebde ._ebcd );_aba ++{var _edcf int ;for _bbfbf :=_egde ;_bbfbf <=_aba -1;_bbfbf ++{_edcf +=_aabge [_bbfbf ];};_cfd :=_f .Rect (_edcf ,0,_edcf +_aabge [_aba ],_ccef );_eeaa ,_bagd :=_ga .Extract (_cfd ,_aegf );if _bagd !=nil {return _bagd ;};_aebde ._ccgc [_aba ]=_eeaa ;_aebde ._abceb =append (_aebde ._abceb ,_eeaa );};return nil ;};type EndOfStripe struct{_ab _d .StreamReader ;_ge int ;};func (_cgdb *PageInformationSegment )Size ()int {return 19};type TextRegion struct{_ccff _d .StreamReader ;RegionInfo *RegionSegment ;SbrTemplate int8 ;SbDsOffset int8 ;DefaultPixel int8 ;CombinationOperator _ga .CombinationOperator ;IsTransposed int8 ;ReferenceCorner int16 ;LogSBStrips int16 ;UseRefinement bool ;IsHuffmanEncoded bool ;SbHuffRSize int8 ;SbHuffRDY int8 ;SbHuffRDX int8 ;SbHuffRDHeight int8 ;SbHuffRDWidth int8 ;SbHuffDT int8 ;SbHuffDS int8 ;SbHuffFS int8 ;SbrATX []int8 ;SbrATY []int8 ;NumberOfSymbolInstances uint32 ;_caeag int64 ;SbStrips int8 ;NumberOfSymbols uint32 ;RegionBitmap *_ga .Bitmap ;Symbols []*_ga .Bitmap ;_acfg *_gg .Decoder ;_ccgg *GenericRefinementRegion ;_bacg *_gg .DecoderStats ;_geff *_gg .DecoderStats ;_eaa *_gg .DecoderStats ;_ddbgd *_gg .DecoderStats ;_gbef *_gg .DecoderStats ;_facb *_gg .DecoderStats ;_cced *_gg .DecoderStats ;_bcgeb *_gg .DecoderStats ;_cbcd *_gg .DecoderStats ;_gegea *_gg .DecoderStats ;_agfda *_gg .DecoderStats ;_ffecb int8 ;_efa *_bb .FixedSizeTable ;Header *Header ;_bcaf _bb .Tabler ;_cbgg _bb .Tabler ;_cdacd _bb .Tabler ;_afeg _bb .Tabler ;_fcdf _bb .Tabler ;_bfdc _bb .Tabler ;_agbc _bb .Tabler ;_ffeb _bb .Tabler ;_gcba ,_cffbb map[int ]int ;_edbca []int ;_fdcf *_ga .Points ;_egdf *_ga .Bitmaps ;_afebc *_ag .IntSlice ;_daad ,_ffae int ;_dabg *_ga .Boxes ;};func (_acfaf *SymbolDictionary )parseHeader ()(_gfdeg error ){_gfd .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");defer func (){if _gfdeg !=nil {_gfd .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u0020\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u005b\u0050\u0041\u0052SE\u002d\u0048\u0045A\u0044\u0045R\u005d\u0020\u0066\u0061\u0069\u006ce\u0064\u002e \u0025\u0076",_gfdeg );}else {_gfd .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");};}();if _gfdeg =_acfaf .readRegionFlags ();_gfdeg !=nil {return _gfdeg ;};if _gfdeg =_acfaf .setAtPixels ();_gfdeg !=nil {return _gfdeg ;};if _gfdeg =_acfaf .setRefinementAtPixels ();_gfdeg !=nil {return _gfdeg ;};if _gfdeg =_acfaf .readNumberOfExportedSymbols ();_gfdeg !=nil {return _gfdeg ;};if _gfdeg =_acfaf .readNumberOfNewSymbols ();_gfdeg !=nil {return _gfdeg ;};if _gfdeg =_acfaf .setInSyms ();_gfdeg !=nil {return _gfdeg ;};if _acfaf ._abcc {_agge :=_acfaf .Header .RTSegments ;for _fbgg :=len (_agge )-1;_fbgg >=0;_fbgg --{if _agge [_fbgg ].Type ==0{_bfecf ,_ecdg :=_agge [_fbgg ].SegmentData .(*SymbolDictionary );if !_ecdg {_gfdeg =_b .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074:\u0020\u0025\u0076\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020S\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_agge [_fbgg ]);return _gfdeg ;};if _bfecf ._abcc {_acfaf .setRetainedCodingContexts (_bfecf );};break ;};};};if _gfdeg =_acfaf .checkInput ();_gfdeg !=nil {return _gfdeg ;};return nil ;};type Documenter interface{GetPage (int )(Pager ,error );GetGlobalSegment (int )(*Header ,error );};func (_bbb *GenericRefinementRegion )String ()string {_dda :=&_gb .Builder {};_dda .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_dda .WriteString (_bbb .RegionInfo .String ()+"\u000a");_dda .WriteString (_b .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0052\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_bbb .IsTPGROn ));_dda .WriteString (_b .Sprintf ("\u0009-\u0020T\u0065\u006d\u0070\u006c\u0061t\u0065\u0049D\u003a\u0020\u0025\u0076\u000a",_bbb .TemplateID ));_dda .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_bbb .GrAtX ));_dda .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_bbb .GrAtY ));_dda .WriteString (_b .Sprintf ("\u0009-\u0020R\u0065\u0066\u0065\u0072\u0065n\u0063\u0065D\u0058\u0020\u0025\u0076\u000a",_bbb .ReferenceDX ));_dda .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0052ef\u0065\u0072\u0065\u006e\u0063\u0044\u0065\u0059\u003a\u0020\u0025\u0076\u000a",_bbb .ReferenceDY ));return _dda .String ();};func (_ece *Header )Encode (w _d .BinaryWriter )(_eea int ,_ddad error ){const _adbb ="\u0048\u0065\u0061d\u0065\u0072\u002e\u0057\u0072\u0069\u0074\u0065";var _ggb _d .BinaryWriter ;_gfd .Log .Trace ("\u005b\u0053\u0045G\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045\u0052\u005d[\u0045\u004e\u0043\u004f\u0044\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _ddad !=nil {_gfd .Log .Trace ("[\u0053\u0045\u0047\u004d\u0045\u004eT\u002d\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0045\u004e\u0043\u004f\u0044E\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020%\u0076",_ddad );}else {_gfd .Log .Trace ("\u005b\u0053\u0045\u0047ME\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0025\u0076",_ece );_gfd .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045N\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u005b\u0045\u004e\u0043O\u0044\u0045\u005d\u0020\u0046\u0069\u006ei\u0073\u0068\u0065\u0064");};}();w .FinishByte ();if _ece .SegmentData !=nil {_eeba ,_dfdf :=_ece .SegmentData .(SegmentEncoder );if !_dfdf {return 0,_gd .Errorf (_adbb ,"\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0064\u006f\u0065s\u006e\u0027\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074 \u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0045\u006e\u0063\u006f\u0064er\u0020\u0069\u006e\u0074\u0065\u0072\u0066\u0061\u0063\u0065",_ece .SegmentData );};_ggb =_d .BufferedMSB ();_eea ,_ddad =_eeba .Encode (_ggb );if _ddad !=nil {return 0,_gd .Wrap (_ddad ,_adbb ,"");};_ece .SegmentDataLength =uint64 (_eea );};if _ece .pageSize ()==4{_ece .PageAssociationFieldSize =true ;};var _dbgc int ;_dbgc ,_ddad =_ece .writeSegmentNumber (w );if _ddad !=nil {return 0,_gd .Wrap (_ddad ,_adbb ,"");};_eea +=_dbgc ;if _ddad =_ece .writeFlags (w );_ddad !=nil {return _eea ,_gd .Wrap (_ddad ,_adbb ,"");};_eea ++;_dbgc ,_ddad =_ece .writeReferredToCount (w );if _ddad !=nil {return 0,_gd .Wrap (_ddad ,_adbb ,"");};_eea +=_dbgc ;_dbgc ,_ddad =_ece .writeReferredToSegments (w );if _ddad !=nil {return 0,_gd .Wrap (_ddad ,_adbb ,"");};_eea +=_dbgc ;_dbgc ,_ddad =_ece .writeSegmentPageAssociation (w );if _ddad !=nil {return 0,_gd .Wrap (_ddad ,_adbb ,"");};_eea +=_dbgc ;_dbgc ,_ddad =_ece .writeSegmentDataLength (w );if _ddad !=nil {return 0,_gd .Wrap (_ddad ,_adbb ,"");};_eea +=_dbgc ;_ece .HeaderLength =int64 (_eea )-int64 (_ece .SegmentDataLength );if _ggb !=nil {if _ ,_ddad =w .Write (_ggb .Data ());_ddad !=nil {return _eea ,_gd .Wrap (_ddad ,_adbb ,"\u0077r\u0069t\u0065\u0020\u0073\u0065\u0067m\u0065\u006et\u0020\u0064\u0061\u0074\u0061");};};return _eea ,nil ;};func (_bfec *PageInformationSegment )checkInput ()error {if _bfec .PageBMHeight ==_g .MaxInt32 {if !_bfec .IsStripe {_gfd .Log .Debug ("P\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0053\u0065\u0067me\u006e\u0074\u002e\u0049s\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0073\u0068ou\u006c\u0064 \u0062\u0065\u0020\u0074\u0072\u0075\u0065\u002e");};};return nil ;};var _ templater =&template0 {};func (_afcf *GenericRegion )setParametersWithAt (_cgdf bool ,_cagb byte ,_edb ,_bbaa bool ,_ddecg ,_cgdd []int8 ,_befc ,_cedf uint32 ,_add *_gg .DecoderStats ,_defc *_gg .Decoder ){_afcf .IsMMREncoded =_cgdf ;_afcf .GBTemplate =_cagb ;_afcf .IsTPGDon =_edb ;_afcf .GBAtX =_ddecg ;_afcf .GBAtY =_cgdd ;_afcf .RegionSegment .BitmapHeight =_cedf ;_afcf .RegionSegment .BitmapWidth =_befc ;_afcf ._gfdg =nil ;_afcf .Bitmap =nil ;if _add !=nil {_afcf ._gcf =_add ;};if _defc !=nil {_afcf ._gag =_defc ;};_gfd .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049O\u004e\u005d\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073\u0020\u0053\u0044\u0041t\u003a\u0020\u0025\u0073",_afcf );};func (_bcae *PatternDictionary )computeSegmentDataStructure ()error {_bcae .DataOffset =_bcae ._eged .StreamPosition ();_bcae .DataHeaderLength =_bcae .DataOffset -_bcae .DataHeaderOffset ;_bcae .DataLength =int64 (_bcae ._eged .Length ())-_bcae .DataHeaderLength ;return nil ;};func (_aea *GenericRefinementRegion )setParameters (_cfga *_gg .DecoderStats ,_fbe *_gg .Decoder ,_eef int8 ,_bbg ,_dee uint32 ,_bbgd *_ga .Bitmap ,_cda ,_cae int32 ,_gef bool ,_fgg []int8 ,_ead []int8 ){_gfd .Log .Trace ("\u005b\u0047\u0045NE\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052E\u0047I\u004fN\u005d \u0073\u0065\u0074\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073");if _cfga !=nil {_aea ._cdd =_cfga ;};if _fbe !=nil {_aea ._de =_fbe ;};_aea .TemplateID =_eef ;_aea .RegionInfo .BitmapWidth =_bbg ;_aea .RegionInfo .BitmapHeight =_dee ;_aea .ReferenceBitmap =_bbgd ;_aea .ReferenceDX =_cda ;_aea .ReferenceDY =_cae ;_aea .IsTPGROn =_gef ;_aea .GrAtX =_fgg ;_aea .GrAtY =_ead ;_aea .RegionBitmap =nil ;_gfd .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073 f\u0069\u006ei\u0073\u0068\u0065\u0064\u002e\u0020\u0025\u0073",_aea );};type HalftoneRegion struct{_cgf _d .StreamReader ;_gcbg *Header ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;HDefaultPixel int8 ;CombinationOperator _ga .CombinationOperator ;HSkipEnabled bool ;HTemplate byte ;IsMMREncoded bool ;HGridWidth uint32 ;HGridHeight uint32 ;HGridX int32 ;HGridY int32 ;HRegionX uint16 ;HRegionY uint16 ;HalftoneRegionBitmap *_ga .Bitmap ;Patterns []*_ga .Bitmap ;};func (_gea *GenericRefinementRegion )getGrReference ()(*_ga .Bitmap ,error ){segments :=_gea ._fb .RTSegments ;if len (segments )==0{return nil ,_a .New ("\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0065\u0078is\u0074\u0073");};_cba ,_dc :=segments [0].GetSegmentData ();if _dc !=nil {return nil ,_dc ;};_gga ,_bde :=_cba .(Regioner );if !_bde {return nil ,_b .Errorf ("\u0072\u0065\u0066\u0065\u0072r\u0065\u0064\u0020\u0074\u006f\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_cba );};return _gga .GetRegionBitmap ();};func (_fg *GenericRefinementRegion )decodeTemplate (_bbe ,_cbc ,_gdg ,_ad ,_fgc ,_gac ,_fac ,_gbe ,_agdg ,_bcb int ,_caa templater )(_gbc error ){var (_bff ,_bdeb ,_eed ,_eag ,_bcg int16 ;_cff ,_fdeb ,_cga ,_afb int ;_faa byte ;);if _agdg >=1&&(_agdg -1)< _fg .ReferenceBitmap .Height {_faa ,_gbc =_fg .ReferenceBitmap .GetByte (_bcb -_ad );if _gbc !=nil {return ;};_cff =int (_faa );};if _agdg >=0&&(_agdg )< _fg .ReferenceBitmap .Height {_faa ,_gbc =_fg .ReferenceBitmap .GetByte (_bcb );if _gbc !=nil {return ;};_fdeb =int (_faa );};if _agdg >=-1&&(_agdg +1)< _fg .ReferenceBitmap .Height {_faa ,_gbc =_fg .ReferenceBitmap .GetByte (_bcb +_ad );if _gbc !=nil {return ;};_cga =int (_faa );};_bcb ++;if _bbe >=1{_faa ,_gbc =_fg .RegionBitmap .GetByte (_gbe -_gdg );if _gbc !=nil {return ;};_afb =int (_faa );};_gbe ++;_dcf :=_fg .ReferenceDX %8;_gfff :=6+_dcf ;_bag :=_bcb %_ad ;if _gfff >=0{if _gfff < 8{_bff =int16 (_cff >>uint (_gfff ))&0x07;};if _gfff < 8{_bdeb =int16 (_fdeb >>uint (_gfff ))&0x07;};if _gfff < 8{_eed =int16 (_cga >>uint (_gfff ))&0x07;};if _gfff ==6&&_bag > 1{if _agdg >=1&&(_agdg -1)< _fg .ReferenceBitmap .Height {_faa ,_gbc =_fg .ReferenceBitmap .GetByte (_bcb -_ad -2);if _gbc !=nil {return _gbc ;};_bff |=int16 (_faa <<2)&0x04;};if _agdg >=0&&_agdg < _fg .ReferenceBitmap .Height {_faa ,_gbc =_fg .ReferenceBitmap .GetByte (_bcb -2);if _gbc !=nil {return _gbc ;};_bdeb |=int16 (_faa <<2)&0x04;};if _agdg >=-1&&_agdg +1< _fg .ReferenceBitmap .Height {_faa ,_gbc =_fg .ReferenceBitmap .GetByte (_bcb +_ad -2);if _gbc !=nil {return _gbc ;};_eed |=int16 (_faa <<2)&0x04;};};if _gfff ==0{_cff =0;_fdeb =0;_cga =0;if _bag < _ad -1{if _agdg >=1&&_agdg -1< _fg .ReferenceBitmap .Height {_faa ,_gbc =_fg .ReferenceBitmap .GetByte (_bcb -_ad );if _gbc !=nil {return _gbc ;};_cff =int (_faa );};if _agdg >=0&&_agdg < _fg .ReferenceBitmap .Height {_faa ,_gbc =_fg .ReferenceBitmap .GetByte (_bcb );if _gbc !=nil {return _gbc ;};_fdeb =int (_faa );};if _agdg >=-1&&_agdg +1< _fg .ReferenceBitmap .Height {_faa ,_gbc =_fg .ReferenceBitmap .GetByte (_bcb +_ad );if _gbc !=nil {return _gbc ;};_cga =int (_faa );};};_bcb ++;};}else {_bff =int16 (_cff <<1)&0x07;_bdeb =int16 (_fdeb <<1)&0x07;_eed =int16 (_cga <<1)&0x07;_cff =0;_fdeb =0;_cga =0;if _bag < _ad -1{if _agdg >=1&&_agdg -1< _fg .ReferenceBitmap .Height {_faa ,_gbc =_fg .ReferenceBitmap .GetByte (_bcb -_ad );if _gbc !=nil {return _gbc ;};_cff =int (_faa );};if _agdg >=0&&_agdg < _fg .ReferenceBitmap .Height {_faa ,_gbc =_fg .ReferenceBitmap .GetByte (_bcb );if _gbc !=nil {return _gbc ;};_fdeb =int (_faa );};if _agdg >=-1&&_agdg +1< _fg .ReferenceBitmap .Height {_faa ,_gbc =_fg .ReferenceBitmap .GetByte (_bcb +_ad );if _gbc !=nil {return _gbc ;};_cga =int (_faa );};_bcb ++;};_bff |=int16 ((_cff >>7)&0x07);_bdeb |=int16 ((_fdeb >>7)&0x07);_eed |=int16 ((_cga >>7)&0x07);};_eag =int16 (_afb >>6);_bcg =0;_gfg :=(2-_dcf )%8;_cff <<=uint (_gfg );_fdeb <<=uint (_gfg );_cga <<=uint (_gfg );_afb <<=2;var _fge int ;for _cccf :=0;_cccf < _cbc ;_cccf ++{_ebe :=_cccf &0x07;_dac :=_caa .form (_bff ,_bdeb ,_eed ,_eag ,_bcg );if _fg ._fce {_faa ,_gbc =_fg .RegionBitmap .GetByte (_fg .RegionBitmap .GetByteIndex (_cccf ,_bbe ));if _gbc !=nil {return _gbc ;};_fg ._cdd .SetIndex (int32 (_fg .overrideAtTemplate0 (int (_dac ),_cccf ,_bbe ,int (_faa ),_ebe )));}else {_fg ._cdd .SetIndex (int32 (_dac ));};_fge ,_gbc =_fg ._de .DecodeBit (_fg ._cdd );if _gbc !=nil {return _gbc ;};if _gbc =_fg .RegionBitmap .SetPixel (_cccf ,_bbe ,byte (_fge ));_gbc !=nil {return _gbc ;};_bff =((_bff <<1)|0x01&int16 (_cff >>7))&0x07;_bdeb =((_bdeb <<1)|0x01&int16 (_fdeb >>7))&0x07;_eed =((_eed <<1)|0x01&int16 (_cga >>7))&0x07;_eag =((_eag <<1)|0x01&int16 (_afb >>7))&0x07;_bcg =int16 (_fge );if (_cccf -int (_fg .ReferenceDX ))%8==5{_cff =0;_fdeb =0;_cga =0;if ((_cccf -int (_fg .ReferenceDX ))/8)+1< _fg .ReferenceBitmap .RowStride {if _agdg >=1&&(_agdg -1)< _fg .ReferenceBitmap .Height {_faa ,_gbc =_fg .ReferenceBitmap .GetByte (_bcb -_ad );if _gbc !=nil {return _gbc ;};_cff =int (_faa );};if _agdg >=0&&_agdg < _fg .ReferenceBitmap .Height {_faa ,_gbc =_fg .ReferenceBitmap .GetByte (_bcb );if _gbc !=nil {return _gbc ;};_fdeb =int (_faa );};if _agdg >=-1&&(_agdg +1)< _fg .ReferenceBitmap .Height {_faa ,_gbc =_fg .ReferenceBitmap .GetByte (_bcb +_ad );if _gbc !=nil {return _gbc ;};_cga =int (_faa );};};_bcb ++;}else {_cff <<=1;_fdeb <<=1;_cga <<=1;};if _ebe ==5&&_bbe >=1{if ((_cccf >>3)+1)>=_fg .RegionBitmap .RowStride {_afb =0;}else {_faa ,_gbc =_fg .RegionBitmap .GetByte (_gbe -_gdg );if _gbc !=nil {return _gbc ;};_afb =int (_faa );};_gbe ++;}else {_afb <<=1;};};return nil ;};func (_cebd *Header )readSegmentDataLength (_bce _d .StreamReader )(_gcge error ){_cebd .SegmentDataLength ,_gcge =_bce .ReadBits (32);if _gcge !=nil {return _gcge ;};_cebd .SegmentDataLength &=_g .MaxInt32 ;return nil ;};func (_adf *PageInformationSegment )readWidthAndHeight ()error {_cafbc ,_affa :=_adf ._ddgg .ReadBits (32);if _affa !=nil {return _affa ;};_adf .PageBMWidth =int (_cafbc &_g .MaxInt32 );_cafbc ,_affa =_adf ._ddgg .ReadBits (32);if _affa !=nil {return _affa ;};_adf .PageBMHeight =int (_cafbc &_g .MaxInt32 );return nil ;};func (_daee *TextRegion )Encode (w _d .BinaryWriter )(_ageg int ,_cdde error ){const _caeg ="\u0054\u0065\u0078\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u002e\u0045n\u0063\u006f\u0064\u0065";if _ageg ,_cdde =_daee .RegionInfo .Encode (w );_cdde !=nil {return _ageg ,_gd .Wrap (_cdde ,_caeg ,"");};var _bcega int ;if _bcega ,_cdde =_daee .encodeFlags (w );_cdde !=nil {return _ageg ,_gd .Wrap (_cdde ,_caeg ,"");};_ageg +=_bcega ;if _bcega ,_cdde =_daee .encodeSymbols (w );_cdde !=nil {return _ageg ,_gd .Wrap (_cdde ,_caeg ,"");};_ageg +=_bcega ;return _ageg ,nil ;};func (_efg *PageInformationSegment )readIsStriped ()error {_bcce ,_bbgg :=_efg ._ddgg .ReadBit ();if _bbgg !=nil {return _bbgg ;};if _bcce ==1{_efg .IsStripe =true ;};return nil ;};func (_bgfa *TextRegion )createRegionBitmap ()error {_bgfa .RegionBitmap =_ga .New (int (_bgfa .RegionInfo .BitmapWidth ),int (_bgfa .RegionInfo .BitmapHeight ));if _bgfa .DefaultPixel !=0{_bgfa .RegionBitmap .SetDefaultPixel ();};return nil ;};func (_dgb *PageInformationSegment )readIsLossless ()error {_defca ,_ecaac :=_dgb ._ddgg .ReadBit ();if _ecaac !=nil {return _ecaac ;};if _defca ==1{_dgb .IsLossless =true ;};return nil ;};func (_geb *EndOfStripe )Init (h *Header ,r _d .StreamReader )error {_geb ._ab =r ;return _geb .parseHeader (h ,r );};func (_faabb *TextRegion )GetRegionInfo ()*RegionSegment {return _faabb .RegionInfo };func (_fbag *PatternDictionary )checkInput ()error {if _fbag .HdpHeight < 1||_fbag .HdpWidth < 1{return _a .New ("in\u0076\u0061l\u0069\u0064\u0020\u0048\u0065\u0061\u0064\u0065\u0072 \u0056\u0061\u006c\u0075\u0065\u003a\u0020\u0057\u0069\u0064\u0074\u0068\u002f\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020g\u0072e\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020z\u0065\u0072o");};if _fbag .IsMMREncoded {if _fbag .HDTemplate !=0{_gfd .Log .Debug ("\u0076\u0061\u0072\u0069\u0061\u0062\u006c\u0065\u0020\u0048\u0044\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e \u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030");};};return nil ;};func (_cbe *GenericRegion )Encode (w _d .BinaryWriter )(_aec int ,_dff error ){const _cea ="G\u0065n\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069o\u006e\u002e\u0045\u006eco\u0064\u0065";if _cbe .Bitmap ==nil {return 0,_gd .Error (_cea ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};_gbde ,_dff :=_cbe .RegionSegment .Encode (w );if _dff !=nil {return 0,_gd .Wrap (_dff ,_cea ,"\u0052\u0065\u0067\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074");};_aec +=_gbde ;if _dff =w .SkipBits (4);_dff !=nil {return _aec ,_gd .Wrap (_dff ,_cea ,"\u0073k\u0069p\u0020\u0072\u0065\u0073\u0065r\u0076\u0065d\u0020\u0062\u0069\u0074\u0073");};var _cbge int ;if _cbe .IsTPGDon {_cbge =1;};if _dff =w .WriteBit (_cbge );_dff !=nil {return _aec ,_gd .Wrap (_dff ,_cea ,"\u0074\u0070\u0067\u0064\u006f\u006e");};_cbge =0;if _dff =w .WriteBit (int (_cbe .GBTemplate >>1)&0x01);_dff !=nil {return _aec ,_gd .Wrap (_dff ,_cea ,"f\u0069r\u0073\u0074\u0020\u0067\u0062\u0074\u0065\u006dp\u006c\u0061\u0074\u0065 b\u0069\u0074");};if _dff =w .WriteBit (int (_cbe .GBTemplate )&0x01);_dff !=nil {return _aec ,_gd .Wrap (_dff ,_cea ,"s\u0065\u0063\u006f\u006ed \u0067b\u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u0062\u0069\u0074");};if _cbe .UseMMR {_cbge =1;};if _dff =w .WriteBit (_cbge );_dff !=nil {return _aec ,_gd .Wrap (_dff ,_cea ,"u\u0073\u0065\u0020\u004d\u004d\u0052\u0020\u0062\u0069\u0074");};_aec ++;if _gbde ,_dff =_cbe .writeGBAtPixels (w );_dff !=nil {return _aec ,_gd .Wrap (_dff ,_cea ,"");};_aec +=_gbde ;_defg :=_fc .New ();if _dff =_defg .EncodeBitmap (_cbe .Bitmap ,_cbe .IsTPGDon );_dff !=nil {return _aec ,_gd .Wrap (_dff ,_cea ,"");};_defg .Final ();var _eaf int64 ;if _eaf ,_dff =_defg .WriteTo (w );_dff !=nil {return _aec ,_gd .Wrap (_dff ,_cea ,"");};_aec +=int (_eaf );return _aec ,nil ;};func (_gbag *TextRegion )decodeID ()(int64 ,error ){if _gbag .IsHuffmanEncoded {if _gbag ._efa ==nil {_adfd ,_efgd :=_gbag ._ccff .ReadBits (byte (_gbag ._ffecb ));return int64 (_adfd ),_efgd ;};return _gbag ._efa .Decode (_gbag ._ccff );};return _gbag ._acfg .DecodeIAID (uint64 (_gbag ._ffecb ),_gbag ._bcgeb );};func (_edccf *PageInformationSegment )readCombinationOperatorOverrideAllowed ()error {_deg ,_gfbb :=_edccf ._ddgg .ReadBit ();if _gfbb !=nil {return _gfbb ;};if _deg ==1{_edccf ._bae =true ;};return nil ;};func NewGenericRegion (r _d .StreamReader )*GenericRegion {return &GenericRegion {RegionSegment :NewRegionSegment (r ),_beb :r };};func (_gabc *TableSegment )HtLow ()int32 {return _gabc ._bfeg };func (_ebg *template0 )setIndex (_dbaa *_gg .DecoderStats ){_dbaa .SetIndex (0x100)};func (_dge *Header )CleanSegmentData (){if _dge .SegmentData !=nil {_dge .SegmentData =nil ;};};func (_ebdg *HalftoneRegion )computeSegmentDataStructure ()error {_ebdg .DataOffset =_ebdg ._cgf .StreamPosition ();_ebdg .DataHeaderLength =_ebdg .DataOffset -_ebdg .DataHeaderOffset ;_ebdg .DataLength =int64 (_ebdg ._cgf .Length ())-_ebdg .DataHeaderLength ;return nil ;};func (_dcee *HalftoneRegion )Init (hd *Header ,r _d .StreamReader )error {_dcee ._cgf =r ;_dcee ._gcbg =hd ;_dcee .RegionSegment =NewRegionSegment (r );return _dcee .parseHeader ();};func (_agbd *Header )writeSegmentNumber (_dcc _d .BinaryWriter )(_bgdc int ,_gacfb error ){_cefg :=make ([]byte ,4);_gf .BigEndian .PutUint32 (_cefg ,_agbd .SegmentNumber );if _bgdc ,_gacfb =_dcc .Write (_cefg );_gacfb !=nil {return 0,_gd .Wrap (_gacfb ,"\u0048e\u0061\u0064\u0065\u0072.\u0077\u0072\u0069\u0074\u0065S\u0065g\u006de\u006e\u0074\u004e\u0075\u006d\u0062\u0065r","");};return _bgdc ,nil ;};type Header struct{SegmentNumber uint32 ;Type Type ;RetainFlag bool ;PageAssociation int ;PageAssociationFieldSize bool ;RTSegments []*Header ;HeaderLength int64 ;SegmentDataLength uint64 ;SegmentDataStartOffset uint64 ;Reader _d .StreamReader ;SegmentData Segmenter ;RTSNumbers []int ;RetainBits []uint8 ;};type EncodeInitializer interface{InitEncode ();};func (_ffbgb *Header )readDataStartOffset (_ceec _d .StreamReader ,_edff OrganizationType ){if _edff ==OSequential {_ffbgb .SegmentDataStartOffset =uint64 (_ceec .StreamPosition ());};};func (_eccc *SymbolDictionary )readRefinementAtPixels (_geba int )error {_eccc .SdrATX =make ([]int8 ,_geba );_eccc .SdrATY =make ([]int8 ,_geba );var (_fgcde byte ;_cffb error ;);for _eedf :=0;_eedf < _geba ;_eedf ++{_fgcde ,_cffb =_eccc ._cage .ReadByte ();if _cffb !=nil {return _cffb ;};_eccc .SdrATX [_eedf ]=int8 (_fgcde );_fgcde ,_cffb =_eccc ._cage .ReadByte ();if _cffb !=nil {return _cffb ;};_eccc .SdrATY [_eedf ]=int8 (_fgcde );};return nil ;};func (_afaa *Header )readHeaderFlags ()error {const _ffec ="\u0072e\u0061d\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006c\u0061\u0067\u0073";_dcac ,_geca :=_afaa .Reader .ReadBit ();if _geca !=nil {return _gd .Wrap (_geca ,_ffec ,"r\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067");};if _dcac !=0{_afaa .RetainFlag =true ;};_dcac ,_geca =_afaa .Reader .ReadBit ();if _geca !=nil {return _gd .Wrap (_geca ,_ffec ,"\u0070\u0061g\u0065\u0020\u0061s\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e");};if _dcac !=0{_afaa .PageAssociationFieldSize =true ;};_adg ,_geca :=_afaa .Reader .ReadBits (6);if _geca !=nil {return _gd .Wrap (_geca ,_ffec ,"\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065");};_afaa .Type =Type (int (_adg ));return nil ;};var _ templater =&template1 {};func (_ccee *SymbolDictionary )setExportedSymbols (_feaf []int ){for _ddebc :=uint32 (0);_ddebc < _ccee ._bafe +_ccee .NumberOfNewSymbols ;_ddebc ++{if _feaf [_ddebc ]==1{var _aaea *_ga .Bitmap ;if _ddebc < _ccee ._bafe {_aaea =_ccee ._fbbce [_ddebc ];}else {_aaea =_ccee ._ccgc [_ddebc -_ccee ._bafe ];};_gfd .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u002d\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u0020\u0041\u0064\u0064 E\u0078\u0070\u006fr\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027%\u0073\u0027",_aaea );_ccee ._cdgd =append (_ccee ._cdgd ,_aaea );};};};func (_dffc *Header )referenceSize ()uint {switch {case _dffc .SegmentNumber <=255:return 1;case _dffc .SegmentNumber <=65535:return 2;default:return 4;};};func (_gfdb *GenericRegion )computeSegmentDataStructure ()error {_gfdb .DataOffset =_gfdb ._beb .StreamPosition ();_gfdb .DataHeaderLength =_gfdb .DataOffset -_gfdb .DataHeaderOffset ;_gfdb .DataLength =int64 (_gfdb ._beb .Length ())-_gfdb .DataHeaderLength ;return nil ;};func (_dacb *SymbolDictionary )readAtPixels (_aegd int )error {_dacb .SdATX =make ([]int8 ,_aegd );_dacb .SdATY =make ([]int8 ,_aegd );var (_ddag byte ;_ddbca error ;);for _aaded :=0;_aaded < _aegd ;_aaded ++{_ddag ,_ddbca =_dacb ._cage .ReadByte ();if _ddbca !=nil {return _ddbca ;};_dacb .SdATX [_aaded ]=int8 (_ddag );_ddag ,_ddbca =_dacb ._cage .ReadByte ();if _ddbca !=nil {return _ddbca ;};_dacb .SdATY [_aaded ]=int8 (_ddag );};return nil ;};func (_cbfg *SymbolDictionary )setRetainedCodingContexts (_fcd *SymbolDictionary ){_cbfg ._fdfe =_fcd ._fdfe ;_cbfg .IsHuffmanEncoded =_fcd .IsHuffmanEncoded ;_cbfg .UseRefinementAggregation =_fcd .UseRefinementAggregation ;_cbfg .SdTemplate =_fcd .SdTemplate ;_cbfg .SdrTemplate =_fcd .SdrTemplate ;_cbfg .SdATX =_fcd .SdATX ;_cbfg .SdATY =_fcd .SdATY ;_cbfg .SdrATX =_fcd .SdrATX ;_cbfg .SdrATY =_fcd .SdrATY ;_cbfg ._bdcd =_fcd ._bdcd ;};func (_caag *SymbolDictionary )decodeHeightClassDeltaHeight ()(int64 ,error ){if _caag .IsHuffmanEncoded {return _caag .decodeHeightClassDeltaHeightWithHuffman ();};_afd ,_dfgfb :=_caag ._fdfe .DecodeInt (_caag ._bcac );if _dfgfb !=nil {return 0,_dfgfb ;};return int64 (_afd ),nil ;};func (_edcb *Header )readNumberOfReferredToSegments (_gfed _d .StreamReader )(uint64 ,error ){const _beg ="\u0072\u0065\u0061\u0064\u004e\u0075\u006d\u0062\u0065\u0072O\u0066\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";_edeg ,_eadd :=_gfed .ReadBits (3);if _eadd !=nil {return 0,_gd .Wrap (_eadd ,_beg ,"\u0063\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0072\u0074\u0073");};_edeg &=0xf;var _aeag []byte ;if _edeg <=4{_aeag =make ([]byte ,5);for _dfc :=0;_dfc <=4;_dfc ++{_bbca ,_fdbff :=_gfed .ReadBit ();if _fdbff !=nil {return 0,_gd .Wrap (_fdbff ,_beg ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_aeag [_dfc ]=byte (_bbca );};}else {_edeg ,_eadd =_gfed .ReadBits (29);if _eadd !=nil {return 0,_eadd ;};_edeg &=_g .MaxInt32 ;_gcee :=(_edeg +8)>>3;_gcee <<=3;_aeag =make ([]byte ,_gcee );var _cedb uint64 ;for _cedb =0;_cedb < _gcee ;_cedb ++{_fegf ,_dcef :=_gfed .ReadBit ();if _dcef !=nil {return 0,_gd .Wrap (_dcef ,_beg ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_aeag [_cedb ]=byte (_fegf );};};return _edeg ,nil ;};func (_cac *GenericRefinementRegion )decodeSLTP ()(int ,error ){_cac .Template .setIndex (_cac ._cdd );return _cac ._de .DecodeBit (_cac ._cdd );};func (_bfg *PatternDictionary )readTemplate ()error {_fga ,_dedd :=_bfg ._eged .ReadBits (2);if _dedd !=nil {return _dedd ;};_bfg .HDTemplate =byte (_fga );return nil ;};func (_gebf *GenericRegion )overrideAtTemplate0b (_bbgcg ,_cdcf ,_acc ,_cdag ,_bcd ,_deb int )int {if _gebf .GBAtOverride [0]{_bbgcg &=0xFFFD;if _gebf .GBAtY [0]==0&&_gebf .GBAtX [0]>=-int8 (_bcd ){_bbgcg |=(_cdag >>uint (int8 (_deb )-_gebf .GBAtX [0]&0x1))<<1;}else {_bbgcg |=int (_gebf .getPixel (_cdcf +int (_gebf .GBAtX [0]),_acc +int (_gebf .GBAtY [0])))<<1;};};if _gebf .GBAtOverride [1]{_bbgcg &=0xDFFF;if _gebf .GBAtY [1]==0&&_gebf .GBAtX [1]>=-int8 (_bcd ){_bbgcg |=(_cdag >>uint (int8 (_deb )-_gebf .GBAtX [1]&0x1))<<13;}else {_bbgcg |=int (_gebf .getPixel (_cdcf +int (_gebf .GBAtX [1]),_acc +int (_gebf .GBAtY [1])))<<13;};};if _gebf .GBAtOverride [2]{_bbgcg &=0xFDFF;if _gebf .GBAtY [2]==0&&_gebf .GBAtX [2]>=-int8 (_bcd ){_bbgcg |=(_cdag >>uint (int8 (_deb )-_gebf .GBAtX [2]&0x1))<<9;}else {_bbgcg |=int (_gebf .getPixel (_cdcf +int (_gebf .GBAtX [2]),_acc +int (_gebf .GBAtY [2])))<<9;};};if _gebf .GBAtOverride [3]{_bbgcg &=0xBFFF;if _gebf .GBAtY [3]==0&&_gebf .GBAtX [3]>=-int8 (_bcd ){_bbgcg |=(_cdag >>uint (int8 (_deb )-_gebf .GBAtX [3]&0x1))<<14;}else {_bbgcg |=int (_gebf .getPixel (_cdcf +int (_gebf .GBAtX [3]),_acc +int (_gebf .GBAtY [3])))<<14;};};if _gebf .GBAtOverride [4]{_bbgcg &=0xEFFF;if _gebf .GBAtY [4]==0&&_gebf .GBAtX [4]>=-int8 (_bcd ){_bbgcg |=(_cdag >>uint (int8 (_deb )-_gebf .GBAtX [4]&0x1))<<12;}else {_bbgcg |=int (_gebf .getPixel (_cdcf +int (_gebf .GBAtX [4]),_acc +int (_gebf .GBAtY [4])))<<12;};};if _gebf .GBAtOverride [5]{_bbgcg &=0xFFDF;if _gebf .GBAtY [5]==0&&_gebf .GBAtX [5]>=-int8 (_bcd ){_bbgcg |=(_cdag >>uint (int8 (_deb )-_gebf .GBAtX [5]&0x1))<<5;}else {_bbgcg |=int (_gebf .getPixel (_cdcf +int (_gebf .GBAtX [5]),_acc +int (_gebf .GBAtY [5])))<<5;};};if _gebf .GBAtOverride [6]{_bbgcg &=0xFFFB;if _gebf .GBAtY [6]==0&&_gebf .GBAtX [6]>=-int8 (_bcd ){_bbgcg |=(_cdag >>uint (int8 (_deb )-_gebf .GBAtX [6]&0x1))<<2;}else {_bbgcg |=int (_gebf .getPixel (_cdcf +int (_gebf .GBAtX [6]),_acc +int (_gebf .GBAtY [6])))<<2;};};if _gebf .GBAtOverride [7]{_bbgcg &=0xFFF7;if _gebf .GBAtY [7]==0&&_gebf .GBAtX [7]>=-int8 (_bcd ){_bbgcg |=(_cdag >>uint (int8 (_deb )-_gebf .GBAtX [7]&0x1))<<3;}else {_bbgcg |=int (_gebf .getPixel (_cdcf +int (_gebf .GBAtX [7]),_acc +int (_gebf .GBAtY [7])))<<3;};};if _gebf .GBAtOverride [8]{_bbgcg &=0xF7FF;if _gebf .GBAtY [8]==0&&_gebf .GBAtX [8]>=-int8 (_bcd ){_bbgcg |=(_cdag >>uint (int8 (_deb )-_gebf .GBAtX [8]&0x1))<<11;}else {_bbgcg |=int (_gebf .getPixel (_cdcf +int (_gebf .GBAtX [8]),_acc +int (_gebf .GBAtY [8])))<<11;};};if _gebf .GBAtOverride [9]{_bbgcg &=0xFFEF;if _gebf .GBAtY [9]==0&&_gebf .GBAtX [9]>=-int8 (_bcd ){_bbgcg |=(_cdag >>uint (int8 (_deb )-_gebf .GBAtX [9]&0x1))<<4;}else {_bbgcg |=int (_gebf .getPixel (_cdcf +int (_gebf .GBAtX [9]),_acc +int (_gebf .GBAtY [9])))<<4;};};if _gebf .GBAtOverride [10]{_bbgcg &=0x7FFF;if _gebf .GBAtY [10]==0&&_gebf .GBAtX [10]>=-int8 (_bcd ){_bbgcg |=(_cdag >>uint (int8 (_deb )-_gebf .GBAtX [10]&0x1))<<15;}else {_bbgcg |=int (_gebf .getPixel (_cdcf +int (_gebf .GBAtX [10]),_acc +int (_gebf .GBAtY [10])))<<15;};};if _gebf .GBAtOverride [11]{_bbgcg &=0xFDFF;if _gebf .GBAtY [11]==0&&_gebf .GBAtX [11]>=-int8 (_bcd ){_bbgcg |=(_cdag >>uint (int8 (_deb )-_gebf .GBAtX [11]&0x1))<<10;}else {_bbgcg |=int (_gebf .getPixel (_cdcf +int (_gebf .GBAtX [11]),_acc +int (_gebf .GBAtY [11])))<<10;};};return _bbgcg ;};func (_dbb *GenericRefinementRegion )overrideAtTemplate0 (_ffe ,_ede ,_aa ,_aca ,_dga int )int {if _dbb ._fa [0]{_ffe &=0xfff7;if _dbb .GrAtY [0]==0&&int (_dbb .GrAtX [0])>=-_dga {_ffe |=(_aca >>uint (7-(_dga +int (_dbb .GrAtX [0])))&0x1)<<3;}else {_ffe |=_dbb .getPixel (_dbb .RegionBitmap ,_ede +int (_dbb .GrAtX [0]),_aa +int (_dbb .GrAtY [0]))<<3;};};if _dbb ._fa [1]{_ffe &=0xefff;if _dbb .GrAtY [1]==0&&int (_dbb .GrAtX [1])>=-_dga {_ffe |=(_aca >>uint (7-(_dga +int (_dbb .GrAtX [1])))&0x1)<<12;}else {_ffe |=_dbb .getPixel (_dbb .ReferenceBitmap ,_ede +int (_dbb .GrAtX [1]),_aa +int (_dbb .GrAtY [1]));};};return _ffe ;};func (_face *SymbolDictionary )setSymbolsArray ()error {if _face ._fbbce ==nil {if _fbaa :=_face .retrieveImportSymbols ();_fbaa !=nil {return _fbaa ;};};if _face ._abceb ==nil {_face ._abceb =append (_face ._abceb ,_face ._fbbce ...);};return nil ;};func (_abg *GenericRegion )copyLineAbove (_dbbd int )error {_faef :=_dbbd *_abg .Bitmap .RowStride ;_ddab :=_faef -_abg .Bitmap .RowStride ;for _gggb :=0;_gggb < _abg .Bitmap .RowStride ;_gggb ++{_gfda ,_bdb :=_abg .Bitmap .GetByte (_ddab );if _bdb !=nil {return _bdb ;};_ddab ++;if _bdb =_abg .Bitmap .SetByte (_faef ,_gfda );_bdb !=nil {return _bdb ;};_faef ++;};return nil ;};type Type int ;func (_dfgff *TextRegion )decodeDfs ()(int64 ,error ){if _dfgff .IsHuffmanEncoded {if _dfgff .SbHuffFS ==3{if _dfgff ._bcaf ==nil {var _gagb error ;_dfgff ._bcaf ,_gagb =_dfgff .getUserTable (0);if _gagb !=nil {return 0,_gagb ;};};return _dfgff ._bcaf .Decode (_dfgff ._ccff );};_aedc ,_affe :=_bb .GetStandardTable (6+int (_dfgff .SbHuffFS ));if _affe !=nil {return 0,_affe ;};return _aedc .Decode (_dfgff ._ccff );};_afaf ,_gcc :=_dfgff ._acfg .DecodeInt (_dfgff ._geff );if _gcc !=nil {return 0,_gcc ;};return int64 (_afaf ),nil ;};type templater interface{form (_dbdg ,_ceb ,_abf ,_bbgc ,_agf int16 )int16 ;setIndex (_fgf *_gg .DecoderStats );};func (_cfc *Header )writeFlags (_bada _d .BinaryWriter )(_ecgd error ){const _bfa ="\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065F\u006c\u0061\u0067\u0073";_ggfd :=byte (_cfc .Type );if _ecgd =_bada .WriteByte (_ggfd );_ecgd !=nil {return _gd .Wrap (_ecgd ,_bfa ,"\u0077\u0072\u0069ti\u006e\u0067\u0020\u0073\u0065\u0067\u006d\u0065\u006et\u0020t\u0079p\u0065 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064");};if !_cfc .RetainFlag &&!_cfc .PageAssociationFieldSize {return nil ;};if _ecgd =_bada .SkipBits (-8);_ecgd !=nil {return _gd .Wrap (_ecgd ,_bfa ,"\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0062\u0061\u0063\u006b\u0020\u0074\u0068\u0065\u0020\u0062\u0069\u0074\u0073\u0020\u0066\u0061il\u0065\u0064");};var _bdfg int ;if _cfc .RetainFlag {_bdfg =1;};if _ecgd =_bada .WriteBit (_bdfg );_ecgd !=nil {return _gd .Wrap (_ecgd ,_bfa ,"\u0072\u0065\u0074\u0061in\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067\u0073");};_bdfg =0;if _cfc .PageAssociationFieldSize {_bdfg =1;};if _ecgd =_bada .WriteBit (_bdfg );_ecgd !=nil {return _gd .Wrap (_ecgd ,_bfa ,"p\u0061\u0067\u0065\u0020as\u0073o\u0063\u0069\u0061\u0074\u0069o\u006e\u0020\u0066\u006c\u0061\u0067");};_bada .FinishByte ();return nil ;};type Regioner interface{GetRegionBitmap ()(*_ga .Bitmap ,error );GetRegionInfo ()*RegionSegment ;};func (_dfe *RegionSegment )readCombinationOperator ()error {_adcg ,_ecfa :=_dfe ._gfec .ReadBits (3);if _ecfa !=nil {return _ecfa ;};_dfe .CombinaionOperator =_ga .CombinationOperator (_adcg &0xF);return nil ;};func (_ee *GenericRefinementRegion )GetRegionInfo ()*RegionSegment {return _ee .RegionInfo };func (_befdd *TextRegion )decodeRdy ()(int64 ,error ){const _gcfa ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064y";if _befdd .IsHuffmanEncoded {if _befdd .SbHuffRDY ==3{if _befdd ._agbc ==nil {var (_caef int ;_bgfg error ;);if _befdd .SbHuffFS ==3{_caef ++;};if _befdd .SbHuffDS ==3{_caef ++;};if _befdd .SbHuffDT ==3{_caef ++;};if _befdd .SbHuffRDWidth ==3{_caef ++;};if _befdd .SbHuffRDHeight ==3{_caef ++;};if _befdd .SbHuffRDX ==3{_caef ++;};_befdd ._agbc ,_bgfg =_befdd .getUserTable (_caef );if _bgfg !=nil {return 0,_gd .Wrap (_bgfg ,_gcfa ,"");};};return _befdd ._agbc .Decode (_befdd ._ccff );};_bcff ,_dgeg :=_bb .GetStandardTable (14+int (_befdd .SbHuffRDY ));if _dgeg !=nil {return 0,_dgeg ;};return _bcff .Decode (_befdd ._ccff );};_dgegd ,_efff :=_befdd ._acfg .DecodeInt (_befdd ._gegea );if _efff !=nil {return 0,_gd .Wrap (_efff ,_gcfa ,"");};return int64 (_dgegd ),nil ;};func (_ggad *GenericRegion )Init (h *Header ,r _d .StreamReader )error {_ggad .RegionSegment =NewRegionSegment (r );_ggad ._beb =r ;return _ggad .parseHeader ();};func (_gead *PageInformationSegment )readRequiresAuxiliaryBuffer ()error {_bcf ,_feeeb :=_gead ._ddgg .ReadBit ();if _feeeb !=nil {return _feeeb ;};if _bcf ==1{_gead ._gdce =true ;};return nil ;};func (_fgda *TextRegion )decodeIds ()(int64 ,error ){const _dadb ="\u0064e\u0063\u006f\u0064\u0065\u0049\u0064s";if _fgda .IsHuffmanEncoded {if _fgda .SbHuffDS ==3{if _fgda ._cbgg ==nil {_cbb :=0;if _fgda .SbHuffFS ==3{_cbb ++;};var _dfba error ;_fgda ._cbgg ,_dfba =_fgda .getUserTable (_cbb );if _dfba !=nil {return 0,_gd .Wrap (_dfba ,_dadb ,"");};};return _fgda ._cbgg .Decode (_fgda ._ccff );};_dfdb ,_fccb :=_bb .GetStandardTable (8+int (_fgda .SbHuffDS ));if _fccb !=nil {return 0,_gd .Wrap (_fccb ,_dadb ,"");};return _dfdb .Decode (_fgda ._ccff );};_cdfe ,_effe :=_fgda ._acfg .DecodeInt (_fgda ._eaa );if _effe !=nil {return 0,_gd .Wrap (_effe ,_dadb ,"\u0063\u0078\u0049\u0041\u0044\u0053");};return int64 (_cdfe ),nil ;};type GenericRefinementRegion struct{_cg templater ;_dg templater ;_cb _d .StreamReader ;_fb *Header ;RegionInfo *RegionSegment ;IsTPGROn bool ;TemplateID int8 ;Template templater ;GrAtX []int8 ;GrAtY []int8 ;RegionBitmap *_ga .Bitmap ;ReferenceBitmap *_ga .Bitmap ;ReferenceDX int32 ;ReferenceDY int32 ;_de *_gg .Decoder ;_cdd *_gg .DecoderStats ;_fce bool ;_fa []bool ;};func (_geg *Header )pageSize ()uint {if _geg .PageAssociation <=255{return 1;};return 4;};func (_fbcd *SymbolDictionary )encodeRefinementATFlags (_cdcb _d .BinaryWriter )(_cdea int ,_ffcd error ){const _ggeec ="\u0065\u006e\u0063od\u0065\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0041\u0054\u0046\u006c\u0061\u0067\u0073";if !_fbcd .UseRefinementAggregation ||_fbcd .SdrTemplate !=0{return 0,nil ;};for _cfeg :=0;_cfeg < 2;_cfeg ++{if _ffcd =_cdcb .WriteByte (byte (_fbcd .SdrATX [_cfeg ]));_ffcd !=nil {return _cdea ,_gd .Wrapf (_ffcd ,_ggeec ,"\u0053\u0064\u0072\u0041\u0054\u0058\u005b\u0025\u0064\u005d",_cfeg );};_cdea ++;if _ffcd =_cdcb .WriteByte (byte (_fbcd .SdrATY [_cfeg ]));_ffcd !=nil {return _cdea ,_gd .Wrapf (_ffcd ,_ggeec ,"\u0053\u0064\u0072\u0041\u0054\u0059\u005b\u0025\u0064\u005d",_cfeg );};_cdea ++;};return _cdea ,nil ;};func (_dcea *TextRegion )symbolIDCodeLengths ()error {var (_dcfc []*_bb .Code ;_eeac uint64 ;_cfac _bb .Tabler ;_dcfb error ;);for _febb :=0;_febb < 35;_febb ++{_eeac ,_dcfb =_dcea ._ccff .ReadBits (4);if _dcfb !=nil {return _dcfb ;};_afebb :=int (_eeac &0xf);if _afebb > 0{_dcfc =append (_dcfc ,_bb .NewCode (int32 (_afebb ),0,int32 (_febb ),false ));};};_cfac ,_dcfb =_bb .NewFixedSizeTable (_dcfc );if _dcfb !=nil {return _dcfb ;};var (_deaag int64 ;_bead uint32 ;_gaefd []*_bb .Code ;_gcbc int64 ;);for _bead < _dcea .NumberOfSymbols {_gcbc ,_dcfb =_cfac .Decode (_dcea ._ccff );if _dcfb !=nil {return _dcfb ;};if _gcbc < 32{if _gcbc > 0{_gaefd =append (_gaefd ,_bb .NewCode (int32 (_gcbc ),0,int32 (_bead ),false ));};_deaag =_gcbc ;_bead ++;}else {var _cegc ,_dfbb int64 ;switch _gcbc {case 32:_eeac ,_dcfb =_dcea ._ccff .ReadBits (2);if _dcfb !=nil {return _dcfb ;};_cegc =3+int64 (_eeac );if _bead > 0{_dfbb =_deaag ;};case 33:_eeac ,_dcfb =_dcea ._ccff .ReadBits (3);if _dcfb !=nil {return _dcfb ;};_cegc =3+int64 (_eeac );case 34:_eeac ,_dcfb =_dcea ._ccff .ReadBits (7);if _dcfb !=nil {return _dcfb ;};_cegc =11+int64 (_eeac );};for _fage :=0;_fage < int (_cegc );_fage ++{if _dfbb > 0{_gaefd =append (_gaefd ,_bb .NewCode (int32 (_dfbb ),0,int32 (_bead ),false ));};_bead ++;};};};_dcea ._ccff .Align ();_dcea ._efa ,_dcfb =_bb .NewFixedSizeTable (_gaefd );return _dcfb ;};func (_dbd *GenericRefinementRegion )decodeTypicalPredictedLineTemplate1 (_gaf ,_ged ,_ce ,_gged ,_eb ,_gdf ,_gdb ,_eba ,_dcb int )(_eec error ){var (_gfde ,_ddd int ;_dbc ,_gba int ;_efc ,_bba int ;_bc byte ;);if _gaf > 0{_bc ,_eec =_dbd .RegionBitmap .GetByte (_gdb -_ce );if _eec !=nil {return ;};_dbc =int (_bc );};if _eba > 0&&_eba <=_dbd .ReferenceBitmap .Height {_bc ,_eec =_dbd .ReferenceBitmap .GetByte (_dcb -_gged +_gdf );if _eec !=nil {return ;};_gba =int (_bc )<<2;};if _eba >=0&&_eba < _dbd .ReferenceBitmap .Height {_bc ,_eec =_dbd .ReferenceBitmap .GetByte (_dcb +_gdf );if _eec !=nil {return ;};_efc =int (_bc );};if _eba > -2&&_eba < _dbd .ReferenceBitmap .Height -1{_bc ,_eec =_dbd .ReferenceBitmap .GetByte (_dcb +_gged +_gdf );if _eec !=nil {return ;};_bba =int (_bc );};_gfde =((_dbc >>5)&0x6)|((_bba >>2)&0x30)|(_efc &0xc0)|(_gba &0x200);_ddd =((_bba >>2)&0x70)|(_efc &0xc0)|(_gba &0x700);var _cgb int ;for _egc :=0;_egc < _eb ;_egc =_cgb {var (_ccb int ;_cdda int ;);_cgb =_egc +8;if _ccb =_ged -_egc ;_ccb > 8{_ccb =8;};_cdef :=_cgb < _ged ;_gece :=_cgb < _dbd .ReferenceBitmap .Width ;_bdf :=_gdf +1;if _gaf > 0{_bc =0;if _cdef {_bc ,_eec =_dbd .RegionBitmap .GetByte (_gdb -_ce +1);if _eec !=nil {return ;};};_dbc =(_dbc <<8)|int (_bc );};if _eba > 0&&_eba <=_dbd .ReferenceBitmap .Height {var _dfg int ;if _gece {_bc ,_eec =_dbd .ReferenceBitmap .GetByte (_dcb -_gged +_bdf );if _eec !=nil {return ;};_dfg =int (_bc )<<2;};_gba =(_gba <<8)|_dfg ;};if _eba >=0&&_eba < _dbd .ReferenceBitmap .Height {_bc =0;if _gece {_bc ,_eec =_dbd .ReferenceBitmap .GetByte (_dcb +_bdf );if _eec !=nil {return ;};};_efc =(_efc <<8)|int (_bc );};if _eba > -2&&_eba < (_dbd .ReferenceBitmap .Height -1){_bc =0;if _gece {_bc ,_eec =_dbd .ReferenceBitmap .GetByte (_dcb +_gged +_bdf );if _eec !=nil {return ;};};_bba =(_bba <<8)|int (_bc );};for _fccg :=0;_fccg < _ccb ;_fccg ++{var _ffad int ;_deff :=(_ddd >>4)&0x1ff;switch _deff {case 0x1ff:_ffad =1;case 0x00:_ffad =0;default:_dbd ._cdd .SetIndex (int32 (_gfde ));_ffad ,_eec =_dbd ._de .DecodeBit (_dbd ._cdd );if _eec !=nil {return ;};};_gc :=uint (7-_fccg );_cdda |=_ffad <<_gc ;_gfde =((_gfde &0x0d6)<<1)|_ffad |(_dbc >>_gc +5)&0x002|((_bba >>_gc +2)&0x010)|((_efc >>_gc )&0x040)|((_gba >>_gc )&0x200);_ddd =((_ddd &0xdb)<<1)|((_bba >>_gc +2)&0x010)|((_efc >>_gc )&0x080)|((_gba >>_gc )&0x400);};_eec =_dbd .RegionBitmap .SetByte (_gdb ,byte (_cdda ));if _eec !=nil {return ;};_gdb ++;_dcb ++;};return nil ;};func (_cgg *template1 )setIndex (_fee *_gg .DecoderStats ){_fee .SetIndex (0x080)};var (_ Regioner =&TextRegion {};_ Segmenter =&TextRegion {};);func (_cdefg *GenericRefinementRegion )updateOverride ()error {if _cdefg .GrAtX ==nil ||_cdefg .GrAtY ==nil {return _a .New ("\u0041\u0054\u0020\u0070\u0069\u0078\u0065\u006c\u0073\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");};if len (_cdefg .GrAtX )!=len (_cdefg .GrAtY ){return _a .New ("A\u0054\u0020\u0070\u0069xe\u006c \u0069\u006e\u0063\u006f\u006es\u0069\u0073\u0074\u0065\u006e\u0074");};_cdefg ._fa =make ([]bool ,len (_cdefg .GrAtX ));switch _cdefg .TemplateID {case 0:if _cdefg .GrAtX [0]!=-1&&_cdefg .GrAtY [0]!=-1{_cdefg ._fa [0]=true ;_cdefg ._fce =true ;};if _cdefg .GrAtX [1]!=-1&&_cdefg .GrAtY [1]!=-1{_cdefg ._fa [1]=true ;_cdefg ._fce =true ;};case 1:_cdefg ._fce =false ;};return nil ;};func (_gbb *GenericRefinementRegion )decodeTypicalPredictedLine (_ba ,_aed ,_cad ,_cafb ,_gge ,_ed int )error {_ccc :=_ba -int (_gbb .ReferenceDY );_abe :=_gbb .ReferenceBitmap .GetByteIndex (0,_ccc );_bg :=_gbb .RegionBitmap .GetByteIndex (0,_ba );var _ffge error ;switch _gbb .TemplateID {case 0:_ffge =_gbb .decodeTypicalPredictedLineTemplate0 (_ba ,_aed ,_cad ,_cafb ,_gge ,_ed ,_bg ,_ccc ,_abe );case 1:_ffge =_gbb .decodeTypicalPredictedLineTemplate1 (_ba ,_aed ,_cad ,_cafb ,_gge ,_ed ,_bg ,_ccc ,_abe );};return _ffge ;};func (_fbgf *TextRegion )decodeDT ()(_cadd int64 ,_fgff error ){if _fbgf .IsHuffmanEncoded {if _fbgf .SbHuffDT ==3{_cadd ,_fgff =_fbgf ._cdacd .Decode (_fbgf ._ccff );if _fgff !=nil {return 0,_fgff ;};}else {var _ace _bb .Tabler ;_ace ,_fgff =_bb .GetStandardTable (11+int (_fbgf .SbHuffDT ));if _fgff !=nil {return 0,_fgff ;};_cadd ,_fgff =_ace .Decode (_fbgf ._ccff );if _fgff !=nil {return 0,_fgff ;};};}else {var _bagc int32 ;_bagc ,_fgff =_fbgf ._acfg .DecodeInt (_fbgf ._bacg );if _fgff !=nil {return ;};_cadd =int64 (_bagc );};_cadd *=int64 (_fbgf .SbStrips );return _cadd ,nil ;};func (_bafcc *TextRegion )readUseRefinement ()error {if !_bafcc .UseRefinement ||_bafcc .SbrTemplate !=0{return nil ;};var (_afgb byte ;_gccd error ;);_bafcc .SbrATX =make ([]int8 ,2);_bafcc .SbrATY =make ([]int8 ,2);_afgb ,_gccd =_bafcc ._ccff .ReadByte ();if _gccd !=nil {return _gccd ;};_bafcc .SbrATX [0]=int8 (_afgb );_afgb ,_gccd =_bafcc ._ccff .ReadByte ();if _gccd !=nil {return _gccd ;};_bafcc .SbrATY [0]=int8 (_afgb );_afgb ,_gccd =_bafcc ._ccff .ReadByte ();if _gccd !=nil {return _gccd ;};_bafcc .SbrATX [1]=int8 (_afgb );_afgb ,_gccd =_bafcc ._ccff .ReadByte ();if _gccd !=nil {return _gccd ;};_bafcc .SbrATY [1]=int8 (_afgb );return nil ;};func (_bfaa *SymbolDictionary )addSymbol (_gfba Regioner )error {_eadce ,_ecedd :=_gfba .GetRegionBitmap ();if _ecedd !=nil {return _ecedd ;};_bfaa ._ccgc [_bfaa ._ebcd ]=_eadce ;_bfaa ._abceb =append (_bfaa ._abceb ,_eadce );_gfd .Log .Trace ("\u005b\u0053YM\u0042\u004f\u004c \u0044\u0049\u0043\u0054ION\u0041RY\u005d\u0020\u0041\u0064\u0064\u0065\u0064 s\u0079\u006d\u0062\u006f\u006c\u003a\u0020%\u0073",_eadce );return nil ;};func (_gbbaf *GenericRegion )writeGBAtPixels (_feff _d .BinaryWriter )(_gcbe int ,_fcae error ){const _dedc ="\u0077r\u0069t\u0065\u0047\u0042\u0041\u0074\u0050\u0069\u0078\u0065\u006c\u0073";if _gbbaf .UseMMR {return 0,nil ;};_ddbgb :=1;if _gbbaf .GBTemplate ==0{_ddbgb =4;}else if _gbbaf .UseExtTemplates {_ddbgb =12;};if len (_gbbaf .GBAtX )!=_ddbgb {return 0,_gd .Errorf (_dedc ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0058\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");};if len (_gbbaf .GBAtY )!=_ddbgb {return 0,_gd .Errorf (_dedc ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0059\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");};for _dbfd :=0;_dbfd < _ddbgb ;_dbfd ++{if _fcae =_feff .WriteByte (byte (_gbbaf .GBAtX [_dbfd ]));_fcae !=nil {return _gcbe ,_gd .Wrap (_fcae ,_dedc ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0058");};_gcbe ++;if _fcae =_feff .WriteByte (byte (_gbbaf .GBAtY [_dbfd ]));_fcae !=nil {return _gcbe ,_gd .Wrap (_fcae ,_dedc ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0059");};_gcbe ++;};return _gcbe ,nil ;};type template1 struct{};func (_addb *HalftoneRegion )GetRegionInfo ()*RegionSegment {return _addb .RegionSegment };type SegmentEncoder interface{Encode (_eeed _d .BinaryWriter )(_fab int ,_ebc error );};const (ORandom OrganizationType =iota ;OSequential ;);func (_edefc *TextRegion )parseHeader ()error {var _aebe error ;_gfd .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069n\u0073\u002e\u002e\u002e");defer func (){if _aebe !=nil {_gfd .Log .Trace ("\u005b\u0054\u0045\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044E\u0052\u005d\u0020\u0066\u0061i\u006c\u0065d\u002e\u0020\u0025\u0076",_aebe );}else {_gfd .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069s\u0068\u0065\u0064\u002e");};}();if _aebe =_edefc .RegionInfo .parseHeader ();_aebe !=nil {return _aebe ;};if _aebe =_edefc .readRegionFlags ();_aebe !=nil {return _aebe ;};if _edefc .IsHuffmanEncoded {if _aebe =_edefc .readHuffmanFlags ();_aebe !=nil {return _aebe ;};};if _aebe =_edefc .readUseRefinement ();_aebe !=nil {return _aebe ;};if _aebe =_edefc .readAmountOfSymbolInstances ();_aebe !=nil {return _aebe ;};if _aebe =_edefc .getSymbols ();_aebe !=nil {return _aebe ;};if _aebe =_edefc .computeSymbolCodeLength ();_aebe !=nil {return _aebe ;};if _aebe =_edefc .checkInput ();_aebe !=nil {return _aebe ;};_gfd .Log .Trace ("\u0025\u0073",_edefc .String ());return nil ;};func (_acfab *SymbolDictionary )Encode (w _d .BinaryWriter )(_dbac int ,_acca error ){const _dcaa ="\u0053\u0079\u006dbo\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0045\u006e\u0063\u006f\u0064\u0065";if _acfab ==nil {return 0,_gd .Error (_dcaa ,"\u0073\u0079m\u0062\u006f\u006c\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066in\u0065\u0064");};if _dbac ,_acca =_acfab .encodeFlags (w );_acca !=nil {return _dbac ,_gd .Wrap (_acca ,_dcaa ,"");};_bgee ,_acca :=_acfab .encodeATFlags (w );if _acca !=nil {return _dbac ,_gd .Wrap (_acca ,_dcaa ,"");};_dbac +=_bgee ;if _bgee ,_acca =_acfab .encodeRefinementATFlags (w );_acca !=nil {return _dbac ,_gd .Wrap (_acca ,_dcaa ,"");};_dbac +=_bgee ;if _bgee ,_acca =_acfab .encodeNumSyms (w );_acca !=nil {return _dbac ,_gd .Wrap (_acca ,_dcaa ,"");};_dbac +=_bgee ;if _bgee ,_acca =_acfab .encodeSymbols (w );_acca !=nil {return _dbac ,_gd .Wrap (_acca ,_dcaa ,"");};_dbac +=_bgee ;return _dbac ,nil ;};func (_ded *GenericRefinementRegion )decodeOptimized (_fd ,_abd ,_ae ,_aef ,_egd ,_abc ,_bf int )error {var (_db error ;_fcc int ;_gbd int ;);_aee :=_fd -int (_ded .ReferenceDY );if _fda :=int (-_ded .ReferenceDX );_fda > 0{_fcc =_fda ;};_fbb :=_ded .ReferenceBitmap .GetByteIndex (_fcc ,_aee );if _ded .ReferenceDX > 0{_gbd =int (_ded .ReferenceDX );};_fad :=_ded .RegionBitmap .GetByteIndex (_gbd ,_fd );switch _ded .TemplateID {case 0:_db =_ded .decodeTemplate (_fd ,_abd ,_ae ,_aef ,_egd ,_abc ,_bf ,_fad ,_aee ,_fbb ,_ded ._cg );case 1:_db =_ded .decodeTemplate (_fd ,_abd ,_ae ,_aef ,_egd ,_abc ,_bf ,_fad ,_aee ,_fbb ,_ded ._dg );};return _db ;};func (_dfd *GenericRegion )parseHeader ()(_ebd error ){_gfd .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052I\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0050\u0061\u0072s\u0069\u006e\u0067\u0048\u0065\u0061\u0064e\u0072\u002e\u002e\u002e");defer func (){if _ebd !=nil {_gfd .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e]\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065r\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0077\u0069th\u0020\u0065\u0072\u0072\u006f\u0072\u002e\u0020\u0025\u0076",_ebd );}else {_gfd .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049C\u002d\u0052\u0045G\u0049\u004f\u004e]\u0020\u0050a\u0072\u0073\u0069\u006e\u0067\u0048e\u0061de\u0072\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0053\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079\u002e\u002e\u002e");};}();var (_cca int ;_ddef uint64 ;);if _ebd =_dfd .RegionSegment .parseHeader ();_ebd !=nil {return _ebd ;};if _ ,_ebd =_dfd ._beb .ReadBits (3);_ebd !=nil {return _ebd ;};_cca ,_ebd =_dfd ._beb .ReadBit ();if _ebd !=nil {return _ebd ;};if _cca ==1{_dfd .UseExtTemplates =true ;};_cca ,_ebd =_dfd ._beb .ReadBit ();if _ebd !=nil {return _ebd ;};if _cca ==1{_dfd .IsTPGDon =true ;};_ddef ,_ebd =_dfd ._beb .ReadBits (2);if _ebd !=nil {return _ebd ;};_dfd .GBTemplate =byte (_ddef &0xf);_cca ,_ebd =_dfd ._beb .ReadBit ();if _ebd !=nil {return _ebd ;};if _cca ==1{_dfd .IsMMREncoded =true ;};if !_dfd .IsMMREncoded {_fbg :=1;if _dfd .GBTemplate ==0{_fbg =4;if _dfd .UseExtTemplates {_fbg =12;};};if _ebd =_dfd .readGBAtPixels (_fbg );_ebd !=nil {return _ebd ;};};if _ebd =_dfd .computeSegmentDataStructure ();_ebd !=nil {return _ebd ;};_gfd .Log .Trace ("\u0025\u0073",_dfd );return nil ;};func (_ccbg *Header )writeReferredToSegments (_dcd _d .BinaryWriter )(_gcec int ,_cgfcb error ){const _cbca ="\u0077\u0072\u0069te\u0052\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";var (_fggbd uint16 ;_cfgda uint32 ;);_eaba :=_ccbg .referenceSize ();_dfcc :=1;_dddf :=make ([]byte ,_eaba );for _ ,_gca :=range _ccbg .RTSNumbers {switch _eaba {case 4:_cfgda =uint32 (_gca );_gf .BigEndian .PutUint32 (_dddf ,_cfgda );_dfcc ,_cgfcb =_dcd .Write (_dddf );if _cgfcb !=nil {return 0,_gd .Wrap (_cgfcb ,_cbca ,"u\u0069\u006e\u0074\u0033\u0032\u0020\u0073\u0069\u007a\u0065");};case 2:_fggbd =uint16 (_gca );_gf .BigEndian .PutUint16 (_dddf ,_fggbd );_dfcc ,_cgfcb =_dcd .Write (_dddf );if _cgfcb !=nil {return 0,_gd .Wrap (_cgfcb ,_cbca ,"\u0075\u0069\u006e\u0074\u0031\u0036");};default:if _cgfcb =_dcd .WriteByte (byte (_gca ));_cgfcb !=nil {return 0,_gd .Wrap (_cgfcb ,_cbca ,"\u0075\u0069\u006et\u0038");};};_gcec +=_dfcc ;};return _gcec ,nil ;};func (_eeec *PatternDictionary )readIsMMREncoded ()error {_ecgc ,_gafd :=_eeec ._eged .ReadBit ();if _gafd !=nil {return _gafd ;};if _ecgc !=0{_eeec .IsMMREncoded =true ;};return nil ;};type SymbolDictionary struct{_cage _d .StreamReader ;SdrTemplate int8 ;SdTemplate int8 ;_gbgb bool ;_abcc bool ;SdHuffAggInstanceSelection bool ;SdHuffBMSizeSelection int8 ;SdHuffDecodeWidthSelection int8 ;SdHuffDecodeHeightSelection int8 ;UseRefinementAggregation bool ;IsHuffmanEncoded bool ;SdATX []int8 ;SdATY []int8 ;SdrATX []int8 ;SdrATY []int8 ;NumberOfExportedSymbols uint32 ;NumberOfNewSymbols uint32 ;Header *Header ;_bafe uint32 ;_fbbce []*_ga .Bitmap ;_ebcd uint32 ;_ccgc []*_ga .Bitmap ;_feef _bb .Tabler ;_eebg _bb .Tabler ;_abec _bb .Tabler ;_bbba _bb .Tabler ;_cdgd []*_ga .Bitmap ;_abceb []*_ga .Bitmap ;_fdfe *_gg .Decoder ;_aedb *TextRegion ;_fgac *GenericRegion ;_ceab *GenericRefinementRegion ;_bdcd *_gg .DecoderStats ;_bcac *_gg .DecoderStats ;_bbcg *_gg .DecoderStats ;_caad *_gg .DecoderStats ;_acbgg *_gg .DecoderStats ;_dbad *_gg .DecoderStats ;_befd *_gg .DecoderStats ;_begf *_gg .DecoderStats ;_gggg *_gg .DecoderStats ;_age int8 ;_fggg *_ga .Bitmaps ;_cdabb []int ;_bgea map[int ]int ;_ddde bool ;};func _gcdf (_cebb int )int {if _cebb ==0{return 0;};_cebb |=_cebb >>1;_cebb |=_cebb >>2;_cebb |=_cebb >>4;_cebb |=_cebb >>8;_cebb |=_cebb >>16;return (_cebb +1)>>1;};type Pager interface{GetSegment (int )(*Header ,error );GetBitmap ()(*_ga .Bitmap ,error );};func (_eeda *TextRegion )InitEncode (globalSymbolsMap ,localSymbolsMap map[int ]int ,comps []int ,inLL *_ga .Points ,symbols *_ga .Bitmaps ,classIDs *_ag .IntSlice ,boxes *_ga .Boxes ,width ,height ,symBits int ){_eeda .RegionInfo =&RegionSegment {BitmapWidth :uint32 (width ),BitmapHeight :uint32 (height )};_eeda ._gcba =globalSymbolsMap ;_eeda ._cffbb =localSymbolsMap ;_eeda ._edbca =comps ;_eeda ._fdcf =inLL ;_eeda ._egdf =symbols ;_eeda ._afebc =classIDs ;_eeda ._dabg =boxes ;_eeda ._ffae =symBits ;};func (_aead *GenericRegion )GetRegionInfo ()*RegionSegment {return _aead .RegionSegment };func (_eacgg *TextRegion )setContexts (_bffa *_gg .DecoderStats ,_dede *_gg .DecoderStats ,_bgbg *_gg .DecoderStats ,_fbaf *_gg .DecoderStats ,_ffab *_gg .DecoderStats ,_fdbc *_gg .DecoderStats ,_ggdb *_gg .DecoderStats ,_adeg *_gg .DecoderStats ,_gaag *_gg .DecoderStats ,_bfc *_gg .DecoderStats ){_eacgg ._bacg =_dede ;_eacgg ._geff =_bgbg ;_eacgg ._eaa =_fbaf ;_eacgg ._ddbgd =_ffab ;_eacgg ._facb =_ggdb ;_eacgg ._cced =_adeg ;_eacgg ._bcgeb =_fdbc ;_eacgg ._cbcd =_gaag ;_eacgg ._gegea =_bfc ;_eacgg ._agfda =_bffa ;};func (_geac *GenericRegion )updateOverrideFlags ()error {const _dbdb ="\u0075\u0070\u0064\u0061te\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _geac .GBAtX ==nil ||_geac .GBAtY ==nil {return nil ;};if len (_geac .GBAtX )!=len (_geac .GBAtY ){return _gd .Errorf (_dbdb ,"i\u006eco\u0073i\u0073t\u0065\u006e\u0074\u0020\u0041T\u0020\u0070\u0069x\u0065\u006c\u002e\u0020\u0041m\u006f\u0075\u006et\u0020\u006f\u0066\u0020\u0027\u0078\u0027\u0020\u0070\u0069\u0078e\u006c\u0073\u003a %d\u002c\u0020\u0041\u006d\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0027\u0079\u0027\u0020\u0070\u0069\u0078e\u006cs\u003a\u0020\u0025\u0064",len (_geac .GBAtX ),len (_geac .GBAtY ));};_geac .GBAtOverride =make ([]bool ,len (_geac .GBAtX ));switch _geac .GBTemplate {case 0:if !_geac .UseExtTemplates {if _geac .GBAtX [0]!=3||_geac .GBAtY [0]!=-1{_geac .setOverrideFlag (0);};if _geac .GBAtX [1]!=-3||_geac .GBAtY [1]!=-1{_geac .setOverrideFlag (1);};if _geac .GBAtX [2]!=2||_geac .GBAtY [2]!=-2{_geac .setOverrideFlag (2);};if _geac .GBAtX [3]!=-2||_geac .GBAtY [3]!=-2{_geac .setOverrideFlag (3);};}else {if _geac .GBAtX [0]!=-2||_geac .GBAtY [0]!=0{_geac .setOverrideFlag (0);};if _geac .GBAtX [1]!=0||_geac .GBAtY [1]!=-2{_geac .setOverrideFlag (1);};if _geac .GBAtX [2]!=-2||_geac .GBAtY [2]!=-1{_geac .setOverrideFlag (2);};if _geac .GBAtX [3]!=-1||_geac .GBAtY [3]!=-2{_geac .setOverrideFlag (3);};if _geac .GBAtX [4]!=1||_geac .GBAtY [4]!=-2{_geac .setOverrideFlag (4);};if _geac .GBAtX [5]!=2||_geac .GBAtY [5]!=-1{_geac .setOverrideFlag (5);};if _geac .GBAtX [6]!=-3||_geac .GBAtY [6]!=0{_geac .setOverrideFlag (6);};if _geac .GBAtX [7]!=-4||_geac .GBAtY [7]!=0{_geac .setOverrideFlag (7);};if _geac .GBAtX [8]!=2||_geac .GBAtY [8]!=-2{_geac .setOverrideFlag (8);};if _geac .GBAtX [9]!=3||_geac .GBAtY [9]!=-1{_geac .setOverrideFlag (9);};if _geac .GBAtX [10]!=-2||_geac .GBAtY [10]!=-2{_geac .setOverrideFlag (10);};if _geac .GBAtX [11]!=-3||_geac .GBAtY [11]!=-1{_geac .setOverrideFlag (11);};};case 1:if _geac .GBAtX [0]!=3||_geac .GBAtY [0]!=-1{_geac .setOverrideFlag (0);};case 2:if _geac .GBAtX [0]!=2||_geac .GBAtY [0]!=-1{_geac .setOverrideFlag (0);};case 3:if _geac .GBAtX [0]!=2||_geac .GBAtY [0]!=-1{_geac .setOverrideFlag (0);};};return nil ;};func (_gdcg *Header )readHeaderLength (_dgec _d .StreamReader ,_efe int64 ){_gdcg .HeaderLength =_dgec .StreamPosition ()-_efe ;};type PatternDictionary struct{_eged _d .StreamReader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;GBAtX []int8 ;GBAtY []int8 ;IsMMREncoded bool ;HDTemplate byte ;HdpWidth byte ;HdpHeight byte ;Patterns []*_ga .Bitmap ;GrayMax uint32 ;};func (_eggeg *TextRegion )blit (_fegfe *_ga .Bitmap ,_ggcb int64 )error {if _eggeg .IsTransposed ==0&&(_eggeg .ReferenceCorner ==2||_eggeg .ReferenceCorner ==3){_eggeg ._caeag +=int64 (_fegfe .Width -1);}else if _eggeg .IsTransposed ==1&&(_eggeg .ReferenceCorner ==0||_eggeg .ReferenceCorner ==2){_eggeg ._caeag +=int64 (_fegfe .Height -1);};_fgbdd :=_eggeg ._caeag ;if _eggeg .IsTransposed ==1{_fgbdd ,_ggcb =_ggcb ,_fgbdd ;};switch _eggeg .ReferenceCorner {case 0:_ggcb -=int64 (_fegfe .Height -1);case 2:_ggcb -=int64 (_fegfe .Height -1);_fgbdd -=int64 (_fegfe .Width -1);case 3:_fgbdd -=int64 (_fegfe .Width -1);};_abbc :=_ga .Blit (_fegfe ,_eggeg .RegionBitmap ,int (_fgbdd ),int (_ggcb ),_eggeg .CombinationOperator );if _abbc !=nil {return _abbc ;};if _eggeg .IsTransposed ==0&&(_eggeg .ReferenceCorner ==0||_eggeg .ReferenceCorner ==1){_eggeg ._caeag +=int64 (_fegfe .Width -1);};if _eggeg .IsTransposed ==1&&(_eggeg .ReferenceCorner ==1||_eggeg .ReferenceCorner ==3){_eggeg ._caeag +=int64 (_fegfe .Height -1);};return nil ;};func (_dceee *HalftoneRegion )checkInput ()error {if _dceee .IsMMREncoded {if _dceee .HTemplate !=0{_gfd .Log .Debug ("\u0048\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030",_dceee .HTemplate );};if _dceee .HSkipEnabled {_gfd .Log .Debug ("\u0048\u0053\u006b\u0069\u0070\u0045\u006e\u0061\u0062\u006c\u0065\u0064\u0020\u0030\u0020\u0025\u0076\u0020(\u0073\u0068\u006f\u0075\u006c\u0064\u0020c\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020v\u0061\u006c\u0075\u0065\u0020\u0066\u0061\u006c\u0073\u0065\u0029",_dceee .HSkipEnabled );};};return nil ;};func (_gfe *GenericRegion )setParameters (_dafg bool ,_abcg ,_eddc int64 ,_gacc ,_agff uint32 ){_gfe .IsMMREncoded =_dafg ;_gfe .DataOffset =_abcg ;_gfe .DataLength =_eddc ;_gfe .RegionSegment .BitmapHeight =_gacc ;_gfe .RegionSegment .BitmapWidth =_agff ;_gfe ._gfdg =nil ;_gfe .Bitmap =nil ;};func (_agccb *TextRegion )readHuffmanFlags ()error {var (_fgdg int ;_cebc uint64 ;_eaaa error ;);_ ,_eaaa =_agccb ._ccff .ReadBit ();if _eaaa !=nil {return _eaaa ;};_fgdg ,_eaaa =_agccb ._ccff .ReadBit ();if _eaaa !=nil {return _eaaa ;};_agccb .SbHuffRSize =int8 (_fgdg );_cebc ,_eaaa =_agccb ._ccff .ReadBits (2);if _eaaa !=nil {return _eaaa ;};_agccb .SbHuffRDY =int8 (_cebc )&0xf;_cebc ,_eaaa =_agccb ._ccff .ReadBits (2);if _eaaa !=nil {return _eaaa ;};_agccb .SbHuffRDX =int8 (_cebc )&0xf;_cebc ,_eaaa =_agccb ._ccff .ReadBits (2);if _eaaa !=nil {return _eaaa ;};_agccb .SbHuffRDHeight =int8 (_cebc )&0xf;_cebc ,_eaaa =_agccb ._ccff .ReadBits (2);if _eaaa !=nil {return _eaaa ;};_agccb .SbHuffRDWidth =int8 (_cebc )&0xf;_cebc ,_eaaa =_agccb ._ccff .ReadBits (2);if _eaaa !=nil {return _eaaa ;};_agccb .SbHuffDT =int8 (_cebc )&0xf;_cebc ,_eaaa =_agccb ._ccff .ReadBits (2);if _eaaa !=nil {return _eaaa ;};_agccb .SbHuffDS =int8 (_cebc )&0xf;_cebc ,_eaaa =_agccb ._ccff .ReadBits (2);if _eaaa !=nil {return _eaaa ;};_agccb .SbHuffFS =int8 (_cebc )&0xf;return nil ;};func (_ccfcb *Header )readSegmentPageAssociation (_gde Documenter ,_eccg _d .StreamReader ,_ecg uint64 ,_cfa ...int )(_ddac error ){const _baa ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074P\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061t\u0069\u006f\u006e";if !_ccfcb .PageAssociationFieldSize {_fbcg ,_egcc :=_eccg .ReadBits (8);if _egcc !=nil {return _gd .Wrap (_egcc ,_baa ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_ccfcb .PageAssociation =int (_fbcg &0xFF);}else {_edbc ,_becbf :=_eccg .ReadBits (32);if _becbf !=nil {return _gd .Wrap (_becbf ,_baa ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_ccfcb .PageAssociation =int (_edbc &_g .MaxInt32 );};if _ecg ==0{return nil ;};if _ccfcb .PageAssociation !=0{_cgddd ,_bbcf :=_gde .GetPage (_ccfcb .PageAssociation );if _bbcf !=nil {return _gd .Wrap (_bbcf ,_baa ,"\u0061s\u0073\u006f\u0063\u0069a\u0074\u0065\u0064\u0020\u0070a\u0067e\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006ed");};var _eaca int ;for _cabd :=uint64 (0);_cabd < _ecg ;_cabd ++{_eaca =_cfa [_cabd ];_ccfcb .RTSegments [_cabd ],_bbcf =_cgddd .GetSegment (_eaca );if _bbcf !=nil {var _cedd error ;_ccfcb .RTSegments [_cabd ],_cedd =_gde .GetGlobalSegment (_eaca );if _cedd !=nil {return _gd .Wrapf (_bbcf ,_baa ,"\u0072\u0065\u0066\u0065\u0072\u0065n\u0063\u0065\u0020s\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064\u0020\u0061\u0074\u0020pa\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0072\u0020\u0069\u006e\u0020\u0067\u006c\u006f\u0062\u0061\u006c\u0073",_ccfcb .PageAssociation );};};};return nil ;};for _egec :=uint64 (0);_egec < _ecg ;_egec ++{_ccfcb .RTSegments [_egec ],_ddac =_gde .GetGlobalSegment (_cfa [_egec ]);if _ddac !=nil {return _gd .Wrapf (_ddac ,_baa ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u003a\u0020\u0027\u0025d\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064",_cfa [_egec ]);};};return nil ;};func (_bgde *TextRegion )encodeFlags (_daed _d .BinaryWriter )(_beab int ,_ffdc error ){const _cgce ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _ffdc =_daed .WriteBit (int (_bgde .SbrTemplate ));_ffdc !=nil {return _beab ,_gd .Wrap (_ffdc ,_cgce ,"s\u0062\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};if _ ,_ffdc =_daed .WriteBits (uint64 (_bgde .SbDsOffset ),5);_ffdc !=nil {return _beab ,_gd .Wrap (_ffdc ,_cgce ,"\u0073\u0062\u0044\u0073\u004f\u0066\u0066\u0073\u0065\u0074");};if _ffdc =_daed .WriteBit (int (_bgde .DefaultPixel ));_ffdc !=nil {return _beab ,_gd .Wrap (_ffdc ,_cgce ,"\u0044\u0065\u0066a\u0075\u006c\u0074\u0050\u0069\u0078\u0065\u006c");};if _ ,_ffdc =_daed .WriteBits (uint64 (_bgde .CombinationOperator ),2);_ffdc !=nil {return _beab ,_gd .Wrap (_ffdc ,_cgce ,"\u0043\u006f\u006d\u0062in\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072");};if _ffdc =_daed .WriteBit (int (_bgde .IsTransposed ));_ffdc !=nil {return _beab ,_gd .Wrap (_ffdc ,_cgce ,"\u0069\u0073\u0020\u0074\u0072\u0061\u006e\u0073\u0070\u006f\u0073\u0065\u0064");};if _ ,_ffdc =_daed .WriteBits (uint64 (_bgde .ReferenceCorner ),2);_ffdc !=nil {return _beab ,_gd .Wrap (_ffdc ,_cgce ,"\u0072\u0065f\u0065\u0072\u0065n\u0063\u0065\u0020\u0063\u006f\u0072\u006e\u0065\u0072");};if _ ,_ffdc =_daed .WriteBits (uint64 (_bgde .LogSBStrips ),2);_ffdc !=nil {return _beab ,_gd .Wrap (_ffdc ,_cgce ,"L\u006f\u0067\u0053\u0042\u0053\u0074\u0072\u0069\u0070\u0073");};var _aecg int ;if _bgde .UseRefinement {_aecg =1;};if _ffdc =_daed .WriteBit (_aecg );_ffdc !=nil {return _beab ,_gd .Wrap (_ffdc ,_cgce ,"\u0075\u0073\u0065\u0020\u0072\u0065\u0066\u0069\u006ee\u006d\u0065\u006e\u0074");};_aecg =0;if _bgde .IsHuffmanEncoded {_aecg =1;};if _ffdc =_daed .WriteBit (_aecg );_ffdc !=nil {return _beab ,_gd .Wrap (_ffdc ,_cgce ,"u\u0073\u0065\u0020\u0068\u0075\u0066\u0066\u006d\u0061\u006e");};_beab =2;return _beab ,nil ;};func (_ffea *Header )readSegmentNumber (_eedcc _d .StreamReader )error {const _dfbfg ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";_gbee :=make ([]byte ,4);_ ,_geaa :=_eedcc .Read (_gbee );if _geaa !=nil {return _gd .Wrap (_geaa ,_dfbfg ,"");};_ffea .SegmentNumber =_gf .BigEndian .Uint32 (_gbee );return nil ;};func (_dbede *PageInformationSegment )encodeStripingInformation (_fbbc _d .BinaryWriter )(_eggf int ,_ggd error ){const _eff ="\u0065n\u0063\u006f\u0064\u0065S\u0074\u0072\u0069\u0070\u0069n\u0067I\u006ef\u006f\u0072\u006d\u0061\u0074\u0069\u006fn";if !_dbede .IsStripe {if _eggf ,_ggd =_fbbc .Write ([]byte {0x00,0x00});_ggd !=nil {return 0,_gd .Wrap (_ggd ,_eff ,"n\u006f\u0020\u0073\u0074\u0072\u0069\u0070\u0069\u006e\u0067");};return _eggf ,nil ;};_dgea :=make ([]byte ,2);_gf .BigEndian .PutUint16 (_dgea ,_dbede .MaxStripeSize |1<<15);if _eggf ,_ggd =_fbbc .Write (_dgea );_ggd !=nil {return 0,_gd .Wrapf (_ggd ,_eff ,"\u0073\u0074\u0072i\u0070\u0069\u006e\u0067\u003a\u0020\u0025\u0064",_dbede .MaxStripeSize );};return _eggf ,nil ;};func (_cfe *GenericRegion )overrideAtTemplate0a (_gdfd ,_bfe ,_abdc ,_aeea ,_dedg ,_cee int )int {if _cfe .GBAtOverride [0]{_gdfd &=0xFFEF;if _cfe .GBAtY [0]==0&&_cfe .GBAtX [0]>=-int8 (_dedg ){_gdfd |=(_aeea >>uint (int8 (_cee )-_cfe .GBAtX [0]&0x1))<<4;}else {_gdfd |=int (_cfe .getPixel (_bfe +int (_cfe .GBAtX [0]),_abdc +int (_cfe .GBAtY [0])))<<4;};};if _cfe .GBAtOverride [1]{_gdfd &=0xFBFF;if _cfe .GBAtY [1]==0&&_cfe .GBAtX [1]>=-int8 (_dedg ){_gdfd |=(_aeea >>uint (int8 (_cee )-_cfe .GBAtX [1]&0x1))<<10;}else {_gdfd |=int (_cfe .getPixel (_bfe +int (_cfe .GBAtX [1]),_abdc +int (_cfe .GBAtY [1])))<<10;};};if _cfe .GBAtOverride [2]{_gdfd &=0xF7FF;if _cfe .GBAtY [2]==0&&_cfe .GBAtX [2]>=-int8 (_dedg ){_gdfd |=(_aeea >>uint (int8 (_cee )-_cfe .GBAtX [2]&0x1))<<11;}else {_gdfd |=int (_cfe .getPixel (_bfe +int (_cfe .GBAtX [2]),_abdc +int (_cfe .GBAtY [2])))<<11;};};if _cfe .GBAtOverride [3]{_gdfd &=0x7FFF;if _cfe .GBAtY [3]==0&&_cfe .GBAtX [3]>=-int8 (_dedg ){_gdfd |=(_aeea >>uint (int8 (_cee )-_cfe .GBAtX [3]&0x1))<<15;}else {_gdfd |=int (_cfe .getPixel (_bfe +int (_cfe .GBAtX [3]),_abdc +int (_cfe .GBAtY [3])))<<15;};};return _gdfd ;};func (_bfda *Header )GetSegmentData ()(Segmenter ,error ){var _faaa Segmenter ;if _bfda .SegmentData !=nil {_faaa =_bfda .SegmentData ;};if _faaa ==nil {_ebgfb ,_ada :=_ade [_bfda .Type ];if !_ada {return nil ,_b .Errorf ("\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0073\u002f\u0020\u0025\u0064\u0020\u0063\u0072e\u0061t\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e\u0020",_bfda .Type ,_bfda .Type );};_faaa =_ebgfb ();_gfd .Log .Trace ("\u005b\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u0020\u0061\u0074\u0020\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0030\u0034\u0058",_bfda .SegmentNumber ,_bfda .SegmentDataStartOffset );_fccgc ,_gbdf :=_bfda .subInputReader ();if _gbdf !=nil {return nil ,_gbdf ;};if _cdcd :=_faaa .Init (_bfda ,_fccgc );_cdcd !=nil {_gfd .Log .Debug ("\u0049\u006e\u0069\u0074 \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076 \u0066o\u0072\u0020\u0074\u0079\u0070\u0065\u003a \u0025\u0054",_cdcd ,_faaa );return nil ,_cdcd ;};_bfda .SegmentData =_faaa ;};return _faaa ,nil ;};func (_feee *Header )parse (_dggb Documenter ,_gdab _d .StreamReader ,_ggbb int64 ,_gagf OrganizationType )(_bcab error ){const _ceea ="\u0070\u0061\u0072s\u0065";_gfd .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u005b\u0050A\u0052\u0053\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _bcab !=nil {_gfd .Log .Trace ("\u005b\u0053\u0045GM\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045R\u005d[\u0050A\u0052S\u0045\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_bcab );}else {_gfd .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052]\u005bP\u0041\u0052\u0053\u0045\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");};}();_ ,_bcab =_gdab .Seek (_ggbb ,_cf .SeekStart );if _bcab !=nil {return _gd .Wrap (_bcab ,_ceea ,"\u0073\u0065\u0065\u006b\u0020\u0073\u0074\u0061\u0072\u0074");};if _bcab =_feee .readSegmentNumber (_gdab );_bcab !=nil {return _gd .Wrap (_bcab ,_ceea ,"");};if _bcab =_feee .readHeaderFlags ();_bcab !=nil {return _gd .Wrap (_bcab ,_ceea ,"");};var _aebd uint64 ;_aebd ,_bcab =_feee .readNumberOfReferredToSegments (_gdab );if _bcab !=nil {return _gd .Wrap (_bcab ,_ceea ,"");};_feee .RTSNumbers ,_bcab =_feee .readReferredToSegmentNumbers (_gdab ,int (_aebd ));if _bcab !=nil {return _gd .Wrap (_bcab ,_ceea ,"");};_bcab =_feee .readSegmentPageAssociation (_dggb ,_gdab ,_aebd ,_feee .RTSNumbers ...);if _bcab !=nil {return _gd .Wrap (_bcab ,_ceea ,"");};if _feee .Type !=TEndOfFile {if _bcab =_feee .readSegmentDataLength (_gdab );_bcab !=nil {return _gd .Wrap (_bcab ,_ceea ,"");};};_feee .readDataStartOffset (_gdab ,_gagf );_feee .readHeaderLength (_gdab ,_ggbb );_gfd .Log .Trace ("\u0025\u0073",_feee );return nil ;};func (_eabe *TableSegment )StreamReader ()_d .StreamReader {return _eabe ._aaf };func (_dbba *TableSegment )Init (h *Header ,r _d .StreamReader )error {_dbba ._aaf =r ;return _dbba .parseHeader ();};