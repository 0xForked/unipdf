//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package segments ;import (_bg "encoding/binary";_gg "errors";_aa "fmt";_fc "github.com/unidoc/unipdf/v3/common";_de "github.com/unidoc/unipdf/v3/internal/bitwise";_ae "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_bgg "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";
_ad "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/arithmetic";_bc "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/huffman";_c "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/mmr";_fd "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/arithmetic";
_gfe "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_gf "github.com/unidoc/unipdf/v3/internal/jbig2/internal";_bd "golang.org/x/xerrors";_b "image";_d "io";_g "math";_a "strings";_ga "time";);func (_deeeb *SymbolDictionary )readNumberOfNewSymbols ()error {_bdfaa ,_ebad :=_deeeb ._acdf .ReadBits (32);
if _ebad !=nil {return _ebad ;};_deeeb .NumberOfNewSymbols =uint32 (_bdfaa &_g .MaxUint32 );return nil ;};func (_fee *Header )writeReferredToSegments (_agcd _de .BinaryWriter )(_ccdf int ,_dacb error ){const _aca ="\u0077\u0072\u0069te\u0052\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
var (_cfae uint16 ;_fggd uint32 ;);_ebae :=_fee .referenceSize ();_eeagc :=1;_bfg :=make ([]byte ,_ebae );for _ ,_ddfc :=range _fee .RTSNumbers {switch _ebae {case 4:_fggd =uint32 (_ddfc );_bg .BigEndian .PutUint32 (_bfg ,_fggd );_eeagc ,_dacb =_agcd .Write (_bfg );
if _dacb !=nil {return 0,_gfe .Wrap (_dacb ,_aca ,"u\u0069\u006e\u0074\u0033\u0032\u0020\u0073\u0069\u007a\u0065");};case 2:_cfae =uint16 (_ddfc );_bg .BigEndian .PutUint16 (_bfg ,_cfae );_eeagc ,_dacb =_agcd .Write (_bfg );if _dacb !=nil {return 0,_gfe .Wrap (_dacb ,_aca ,"\u0075\u0069\u006e\u0074\u0031\u0036");
};default:if _dacb =_agcd .WriteByte (byte (_ddfc ));_dacb !=nil {return 0,_gfe .Wrap (_dacb ,_aca ,"\u0075\u0069\u006et\u0038");};};_ccdf +=_eeagc ;};return _ccdf ,nil ;};func (_eeff *PageInformationSegment )readIsStriped ()error {_eagf ,_bcfe :=_eeff ._cfcb .ReadBit ();
if _bcfe !=nil {return _bcfe ;};if _eagf ==1{_eeff .IsStripe =true ;};return nil ;};func (_caa *GenericRegion )setParametersMMR (_afa bool ,_bebb ,_dfcf int64 ,_fcg ,_cagd uint32 ,_defc byte ,_acbg ,_fdb bool ,_eag ,_bbgfc []int8 ){_caa .DataOffset =_bebb ;
_caa .DataLength =_dfcf ;_caa .RegionSegment =&RegionSegment {};_caa .RegionSegment .BitmapHeight =_fcg ;_caa .RegionSegment .BitmapWidth =_cagd ;_caa .GBTemplate =_defc ;_caa .IsMMREncoded =_afa ;_caa .IsTPGDon =_acbg ;_caa .GBAtX =_eag ;_caa .GBAtY =_bbgfc ;
};type OrganizationType uint8 ;func (_bffb *TextRegion )decodeRdh ()(int64 ,error ){const _efegc ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064h";if _bffb .IsHuffmanEncoded {if _bffb .SbHuffRDHeight ==3{if _bffb ._cdcaa ==nil {var (_eeecb int ;_eagaf error ;
);if _bffb .SbHuffFS ==3{_eeecb ++;};if _bffb .SbHuffDS ==3{_eeecb ++;};if _bffb .SbHuffDT ==3{_eeecb ++;};if _bffb .SbHuffRDWidth ==3{_eeecb ++;};_bffb ._cdcaa ,_eagaf =_bffb .getUserTable (_eeecb );if _eagaf !=nil {return 0,_gfe .Wrap (_eagaf ,_efegc ,"");
};};return _bffb ._cdcaa .Decode (_bffb ._geff );};_efcd ,_fbfe :=_bc .GetStandardTable (14+int (_bffb .SbHuffRDHeight ));if _fbfe !=nil {return 0,_gfe .Wrap (_fbfe ,_efegc ,"");};return _efcd .Decode (_bffb ._geff );};_fbfcf ,_geeac :=_bffb ._ddge .DecodeInt (_bffb ._gbde );
if _geeac !=nil {return 0,_gfe .Wrap (_geeac ,_efegc ,"");};return int64 (_fbfcf ),nil ;};func (_bcbc *TextRegion )decodeRdy ()(int64 ,error ){const _gbbgf ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064y";if _bcbc .IsHuffmanEncoded {if _bcbc .SbHuffRDY ==3{if _bcbc ._cddec ==nil {var (_fbca int ;
_bgdc error ;);if _bcbc .SbHuffFS ==3{_fbca ++;};if _bcbc .SbHuffDS ==3{_fbca ++;};if _bcbc .SbHuffDT ==3{_fbca ++;};if _bcbc .SbHuffRDWidth ==3{_fbca ++;};if _bcbc .SbHuffRDHeight ==3{_fbca ++;};if _bcbc .SbHuffRDX ==3{_fbca ++;};_bcbc ._cddec ,_bgdc =_bcbc .getUserTable (_fbca );
if _bgdc !=nil {return 0,_gfe .Wrap (_bgdc ,_gbbgf ,"");};};return _bcbc ._cddec .Decode (_bcbc ._geff );};_gcdcg ,_bfca :=_bc .GetStandardTable (14+int (_bcbc .SbHuffRDY ));if _bfca !=nil {return 0,_bfca ;};return _gcdcg .Decode (_bcbc ._geff );};_bed ,_fbff :=_bcbc ._ddge .DecodeInt (_bcbc ._gdba );
if _fbff !=nil {return 0,_gfe .Wrap (_fbff ,_gbbgf ,"");};return int64 (_bed ),nil ;};func (_feg *HalftoneRegion )parseHeader ()error {if _fcd :=_feg .RegionSegment .parseHeader ();_fcd !=nil {return _fcd ;};_ggcfd ,_fcdd :=_feg ._bbgg .ReadBit ();if _fcdd !=nil {return _fcdd ;
};_feg .HDefaultPixel =int8 (_ggcfd );_eabe ,_fcdd :=_feg ._bbgg .ReadBits (3);if _fcdd !=nil {return _fcdd ;};_feg .CombinationOperator =_bgg .CombinationOperator (_eabe &0xf);_ggcfd ,_fcdd =_feg ._bbgg .ReadBit ();if _fcdd !=nil {return _fcdd ;};if _ggcfd ==1{_feg .HSkipEnabled =true ;
};_eabe ,_fcdd =_feg ._bbgg .ReadBits (2);if _fcdd !=nil {return _fcdd ;};_feg .HTemplate =byte (_eabe &0xf);_ggcfd ,_fcdd =_feg ._bbgg .ReadBit ();if _fcdd !=nil {return _fcdd ;};if _ggcfd ==1{_feg .IsMMREncoded =true ;};_eabe ,_fcdd =_feg ._bbgg .ReadBits (32);
if _fcdd !=nil {return _fcdd ;};_feg .HGridWidth =uint32 (_eabe &_g .MaxUint32 );_eabe ,_fcdd =_feg ._bbgg .ReadBits (32);if _fcdd !=nil {return _fcdd ;};_feg .HGridHeight =uint32 (_eabe &_g .MaxUint32 );_eabe ,_fcdd =_feg ._bbgg .ReadBits (32);if _fcdd !=nil {return _fcdd ;
};_feg .HGridX =int32 (_eabe &_g .MaxInt32 );_eabe ,_fcdd =_feg ._bbgg .ReadBits (32);if _fcdd !=nil {return _fcdd ;};_feg .HGridY =int32 (_eabe &_g .MaxInt32 );_eabe ,_fcdd =_feg ._bbgg .ReadBits (16);if _fcdd !=nil {return _fcdd ;};_feg .HRegionX =uint16 (_eabe &_g .MaxUint16 );
_eabe ,_fcdd =_feg ._bbgg .ReadBits (16);if _fcdd !=nil {return _fcdd ;};_feg .HRegionY =uint16 (_eabe &_g .MaxUint16 );if _fcdd =_feg .computeSegmentDataStructure ();_fcdd !=nil {return _fcdd ;};return _feg .checkInput ();};func (_gbabf *TextRegion )readAmountOfSymbolInstances ()error {_fdbe ,_fggcb :=_gbabf ._geff .ReadBits (32);
if _fggcb !=nil {return _fggcb ;};_gbabf .NumberOfSymbolInstances =uint32 (_fdbe &_g .MaxUint32 );_eafe :=_gbabf .RegionInfo .BitmapWidth *_gbabf .RegionInfo .BitmapHeight ;if _eafe < _gbabf .NumberOfSymbolInstances {_fc .Log .Debug ("\u004c\u0069\u006d\u0069t\u0069\u006e\u0067\u0020t\u0068\u0065\u0020n\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020d\u0065\u0063\u006f\u0064e\u0064\u0020\u0073\u0079m\u0062\u006f\u006c\u0020\u0069n\u0073\u0074\u0061\u006e\u0063\u0065\u0073 \u0074\u006f\u0020\u006f\u006ee\u0020\u0070\u0065\u0072\u0020\u0070\u0069\u0078\u0065l\u0020\u0028\u0020\u0025\u0064\u0020\u0069\u006e\u0073\u0074\u0065\u0061\u0064\u0020\u006f\u0066\u0020\u0025\u0064\u0029",_eafe ,_gbabf .NumberOfSymbolInstances );
_gbabf .NumberOfSymbolInstances =_eafe ;};return nil ;};var _ SegmentEncoder =&GenericRegion {};func (_fdfe *GenericRegion )Init (h *Header ,r *_de .Reader )error {_fdfe .RegionSegment =NewRegionSegment (r );_fdfe ._cac =r ;return _fdfe .parseHeader ();
};type Segmenter interface{Init (_cbcd *Header ,_fgfg *_de .Reader )error ;};func (_fgfd *SymbolDictionary )decodeThroughTextRegion (_fbgfd ,_dafc ,_ddeb uint32 )error {if _fgfd ._ebee ==nil {_fgfd ._ebee =_fdbge (_fgfd ._acdf ,nil );_fgfd ._ebee .setContexts (_fgfd ._bgdf ,_ad .NewStats (512,1),_ad .NewStats (512,1),_ad .NewStats (512,1),_ad .NewStats (512,1),_fgfd ._adfd ,_ad .NewStats (512,1),_ad .NewStats (512,1),_ad .NewStats (512,1),_ad .NewStats (512,1));
};if _cfdb :=_fgfd .setSymbolsArray ();_cfdb !=nil {return _cfdb ;};_fgfd ._ebee .setParameters (_fgfd ._ddea ,_fgfd .IsHuffmanEncoded ,true ,_fbgfd ,_dafc ,_ddeb ,1,_fgfd ._gagg +_fgfd ._dce ,0,0,0,1,0,0,0,0,0,0,0,0,0,_fgfd .SdrTemplate ,_fgfd .SdrATX ,_fgfd .SdrATY ,_fgfd ._agfff ,_fgfd ._efbeb );
return _fgfd .addSymbol (_fgfd ._ebee );};func (_bcgb *GenericRefinementRegion )setParameters (_ccg *_ad .DecoderStats ,_agc *_ad .Decoder ,_cdde int8 ,_geea ,_bff uint32 ,_fcb *_bgg .Bitmap ,_bbd ,_fef int32 ,_efad bool ,_ffd []int8 ,_bcf []int8 ){_fc .Log .Trace ("\u005b\u0047\u0045NE\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052E\u0047I\u004fN\u005d \u0073\u0065\u0074\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073");
if _ccg !=nil {_bcgb ._bf =_ccg ;};if _agc !=nil {_bcgb ._aeaf =_agc ;};_bcgb .TemplateID =_cdde ;_bcgb .RegionInfo .BitmapWidth =_geea ;_bcgb .RegionInfo .BitmapHeight =_bff ;_bcgb .ReferenceBitmap =_fcb ;_bcgb .ReferenceDX =_bbd ;_bcgb .ReferenceDY =_fef ;
_bcgb .IsTPGROn =_efad ;_bcgb .GrAtX =_ffd ;_bcgb .GrAtY =_bcf ;_bcgb .RegionBitmap =nil ;_fc .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073 f\u0069\u006ei\u0073\u0068\u0065\u0064\u002e\u0020\u0025\u0073",_bcgb );
};type Type int ;func (_fadbg *Header )writeSegmentPageAssociation (_fegc _de .BinaryWriter )(_gcdc int ,_eggg error ){const _bad ="w\u0072\u0069\u0074\u0065\u0053\u0065g\u006d\u0065\u006e\u0074\u0050\u0061\u0067\u0065\u0041s\u0073\u006f\u0063i\u0061t\u0069\u006f\u006e";
if _fadbg .pageSize ()!=4{if _eggg =_fegc .WriteByte (byte (_fadbg .PageAssociation ));_eggg !=nil {return 0,_gfe .Wrap (_eggg ,_bad ,"\u0070\u0061\u0067\u0065\u0053\u0069\u007a\u0065\u0020\u0021\u003d\u0020\u0034");};return 1,nil ;};_fdgbe :=make ([]byte ,4);
_bg .BigEndian .PutUint32 (_fdgbe ,uint32 (_fadbg .PageAssociation ));if _gcdc ,_eggg =_fegc .Write (_fdgbe );_eggg !=nil {return 0,_gfe .Wrap (_eggg ,_bad ,"\u0034 \u0062y\u0074\u0065\u0020\u0070\u0061g\u0065\u0020n\u0075\u006d\u0062\u0065\u0072");};return _gcdc ,nil ;
};func (_abegg *TextRegion )readRegionFlags ()error {var (_beaag int ;_baef uint64 ;_cfac error ;);_beaag ,_cfac =_abegg ._geff .ReadBit ();if _cfac !=nil {return _cfac ;};_abegg .SbrTemplate =int8 (_beaag );_baef ,_cfac =_abegg ._geff .ReadBits (5);if _cfac !=nil {return _cfac ;
};_abegg .SbDsOffset =int8 (_baef );if _abegg .SbDsOffset > 0x0f{_abegg .SbDsOffset -=0x20;};_beaag ,_cfac =_abegg ._geff .ReadBit ();if _cfac !=nil {return _cfac ;};_abegg .DefaultPixel =int8 (_beaag );_baef ,_cfac =_abegg ._geff .ReadBits (2);if _cfac !=nil {return _cfac ;
};_abegg .CombinationOperator =_bgg .CombinationOperator (int (_baef )&0x3);_beaag ,_cfac =_abegg ._geff .ReadBit ();if _cfac !=nil {return _cfac ;};_abegg .IsTransposed =int8 (_beaag );_baef ,_cfac =_abegg ._geff .ReadBits (2);if _cfac !=nil {return _cfac ;
};_abegg .ReferenceCorner =int16 (_baef )&0x3;_baef ,_cfac =_abegg ._geff .ReadBits (2);if _cfac !=nil {return _cfac ;};_abegg .LogSBStrips =int16 (_baef )&0x3;_abegg .SbStrips =1<<uint (_abegg .LogSBStrips );_beaag ,_cfac =_abegg ._geff .ReadBit ();if _cfac !=nil {return _cfac ;
};if _beaag ==1{_abegg .UseRefinement =true ;};_beaag ,_cfac =_abegg ._geff .ReadBit ();if _cfac !=nil {return _cfac ;};if _beaag ==1{_abegg .IsHuffmanEncoded =true ;};return nil ;};func (_becd *TableSegment )HtOOB ()int32 {return _becd ._gbca };func (_ffga *SymbolDictionary )decodeNewSymbols (_accg ,_aaea uint32 ,_bgcea *_bgg .Bitmap ,_efed ,_fggf int32 )error {if _ffga ._abd ==nil {_ffga ._abd =_gbg (_ffga ._acdf ,nil );
if _ffga ._ddea ==nil {var _fgcdf error ;_ffga ._ddea ,_fgcdf =_ad .New (_ffga ._acdf );if _fgcdf !=nil {return _fgcdf ;};};if _ffga ._bgdf ==nil {_ffga ._bgdf =_ad .NewStats (65536,1);};};_ffga ._abd .setParameters (_ffga ._bgdf ,_ffga ._ddea ,_ffga .SdrTemplate ,_accg ,_aaea ,_bgcea ,_efed ,_fggf ,false ,_ffga .SdrATX ,_ffga .SdrATY );
return _ffga .addSymbol (_ffga ._abd );};func (_dfcg *Header )writeSegmentDataLength (_aeca _de .BinaryWriter )(_ebaeg int ,_cdebd error ){_eeec :=make ([]byte ,4);_bg .BigEndian .PutUint32 (_eeec ,uint32 (_dfcg .SegmentDataLength ));if _ebaeg ,_cdebd =_aeca .Write (_eeec );
_cdebd !=nil {return 0,_gfe .Wrap (_cdebd ,"\u0048\u0065a\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u004c\u0065ng\u0074\u0068","");};return _ebaeg ,nil ;};func (_bdgb *HalftoneRegion )grayScaleDecoding (_feb int )([][]int ,error ){var (_bdf []int8 ;
_bgf []int8 ;);if !_bdgb .IsMMREncoded {_bdf =make ([]int8 ,4);_bgf =make ([]int8 ,4);if _bdgb .HTemplate <=1{_bdf [0]=3;}else if _bdgb .HTemplate >=2{_bdf [0]=2;};_bgf [0]=-1;_bdf [1]=-3;_bgf [1]=-1;_bdf [2]=2;_bgf [2]=-2;_bdf [3]=-2;_bgf [3]=-2;};_cgdf :=make ([]*_bgg .Bitmap ,_feb );
_ccf :=NewGenericRegion (_bdgb ._bbgg );_ccf .setParametersMMR (_bdgb .IsMMREncoded ,_bdgb .DataOffset ,_bdgb .DataLength ,_bdgb .HGridHeight ,_bdgb .HGridWidth ,_bdgb .HTemplate ,false ,_bdgb .HSkipEnabled ,_bdf ,_bgf );_acfb :=_feb -1;var _ggea error ;
_cgdf [_acfb ],_ggea =_ccf .GetRegionBitmap ();if _ggea !=nil {return nil ,_ggea ;};for _acfb > 0{_acfb --;_ccf .Bitmap =nil ;_cgdf [_acfb ],_ggea =_ccf .GetRegionBitmap ();if _ggea !=nil {return nil ,_ggea ;};if _ggea =_bdgb .combineGrayscalePlanes (_cgdf ,_acfb );
_ggea !=nil {return nil ,_ggea ;};};return _bdgb .computeGrayScalePlanes (_cgdf ,_feb );};func (_efadc *SymbolDictionary )setAtPixels ()error {if _efadc .IsHuffmanEncoded {return nil ;};_ebada :=1;if _efadc .SdTemplate ==0{_ebada =4;};if _gfeca :=_efadc .readAtPixels (_ebada );
_gfeca !=nil {return _gfeca ;};return nil ;};var (_egdf Segmenter ;_dacce =map[Type ]func ()Segmenter {TSymbolDictionary :func ()Segmenter {return &SymbolDictionary {}},TIntermediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateLosslessTextRegion :func ()Segmenter {return &TextRegion {}},TPatternDictionary :func ()Segmenter {return &PatternDictionary {}},TIntermediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateLosslessHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TIntermediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateLosslessGenericRegion :func ()Segmenter {return &GenericRegion {}},TIntermediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateLosslessGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TPageInformation :func ()Segmenter {return &PageInformationSegment {}},TEndOfPage :func ()Segmenter {return _egdf },TEndOfStrip :func ()Segmenter {return &EndOfStripe {}},TEndOfFile :func ()Segmenter {return _egdf },TProfiles :func ()Segmenter {return _egdf },TTables :func ()Segmenter {return &TableSegment {}},TExtension :func ()Segmenter {return _egdf },TBitmap :func ()Segmenter {return _egdf }};
);func (_cbef *SymbolDictionary )decodeRefinedSymbol (_agec ,_addg uint32 )error {var (_gaae int ;_aacg ,_fgde int32 ;);if _cbef .IsHuffmanEncoded {_cegf ,_faad :=_cbef ._acdf .ReadBits (byte (_cbef ._efbeb ));if _faad !=nil {return _faad ;};_gaae =int (_cegf );
_begc ,_faad :=_bc .GetStandardTable (15);if _faad !=nil {return _faad ;};_edad ,_faad :=_begc .Decode (_cbef ._acdf );if _faad !=nil {return _faad ;};_aacg =int32 (_edad );_edad ,_faad =_begc .Decode (_cbef ._acdf );if _faad !=nil {return _faad ;};_fgde =int32 (_edad );
_begc ,_faad =_bc .GetStandardTable (1);if _faad !=nil {return _faad ;};if _ ,_faad =_begc .Decode (_cbef ._acdf );_faad !=nil {return _faad ;};_cbef ._acdf .Align ();}else {_gbbc ,_eeeg :=_cbef ._ddea .DecodeIAID (uint64 (_cbef ._efbeb ),_cbef ._adfd );
if _eeeg !=nil {return _eeeg ;};_gaae =int (_gbbc );_aacg ,_eeeg =_cbef ._ddea .DecodeInt (_cbef ._gdgc );if _eeeg !=nil {return _eeeg ;};_fgde ,_eeeg =_cbef ._ddea .DecodeInt (_cbef ._dfbg );if _eeeg !=nil {return _eeeg ;};};if _ccag :=_cbef .setSymbolsArray ();
_ccag !=nil {return _ccag ;};_eagfd :=_cbef ._agfff [_gaae ];if _ddcd :=_cbef .decodeNewSymbols (_agec ,_addg ,_eagfd ,_aacg ,_fgde );_ddcd !=nil {return _ddcd ;};if _cbef .IsHuffmanEncoded {_cbef ._acdf .Align ();};return nil ;};func (_agcde *PageInformationSegment )String ()string {_fcdg :=&_a .Builder {};
_fcdg .WriteString ("\u000a\u005b\u0050\u0041G\u0045\u002d\u0049\u004e\u0046\u004f\u0052\u004d\u0041\u0054I\u004fN\u002d\u0053\u0045\u0047\u004d\u0045\u004eT\u005d\u000a");_fcdg .WriteString (_aa .Sprintf ("\u0009\u002d \u0042\u004d\u0048e\u0069\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u000a",_agcde .PageBMHeight ));
_fcdg .WriteString (_aa .Sprintf ("\u0009-\u0020B\u004d\u0057\u0069\u0064\u0074\u0068\u003a\u0020\u0025\u0064\u000a",_agcde .PageBMWidth ));_fcdg .WriteString (_aa .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0058\u003a\u0020\u0025\u0064\u000a",_agcde .ResolutionX ));
_fcdg .WriteString (_aa .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0059\u003a\u0020\u0025\u0064\u000a",_agcde .ResolutionY ));_fcdg .WriteString (_aa .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0073\u000a",_agcde ._cdcb ));
_fcdg .WriteString (_aa .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006eO\u0070\u0065\u0072\u0061\u0074\u006f\u0072O\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025v\u000a",_agcde ._gegc ));_fcdg .WriteString (_aa .Sprintf ("\u0009-\u0020I\u0073\u004c\u006f\u0073\u0073l\u0065\u0073s\u003a\u0020\u0025\u0076\u000a",_agcde .IsLossless ));
_fcdg .WriteString (_aa .Sprintf ("\u0009\u002d\u0020R\u0065\u0071\u0075\u0069r\u0065\u0073\u0041\u0075\u0078\u0069\u006ci\u0061\u0072\u0079\u0042\u0075\u0066\u0066\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_agcde ._geaa ));_fcdg .WriteString (_aa .Sprintf ("\u0009\u002d\u0020M\u0069\u0067\u0068\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0052e\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0076\u000a",_agcde ._bbc ));
_fcdg .WriteString (_aa .Sprintf ("\u0009\u002d\u0020\u0049\u0073\u0053\u0074\u0072\u0069\u0070\u0065\u0064:\u0020\u0025\u0076\u000a",_agcde .IsStripe ));_fcdg .WriteString (_aa .Sprintf ("\t\u002d\u0020\u004d\u0061xS\u0074r\u0069\u0070\u0065\u0053\u0069z\u0065\u003a\u0020\u0025\u0076\u000a",_agcde .MaxStripeSize ));
return _fcdg .String ();};func (_ba *EndOfStripe )Init (h *Header ,r *_de .Reader )error {_ba ._e =r ;return _ba .parseHeader ()};func (_bcb *GenericRegion )decodeTemplate1 (_eaf ,_beef ,_edf int ,_dabe ,_gfeb int )(_fbge error ){const _cdba ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0031";
var (_bbgd ,_eafg int ;_ggdf ,_edbd int ;_dcf byte ;_gca ,_ecc int ;);if _eaf >=1{_dcf ,_fbge =_bcb .Bitmap .GetByte (_gfeb );if _fbge !=nil {return _gfe .Wrap (_fbge ,_cdba ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_ggdf =int (_dcf );};if _eaf >=2{_dcf ,_fbge =_bcb .Bitmap .GetByte (_gfeb -_bcb .Bitmap .RowStride );
if _fbge !=nil {return _gfe .Wrap (_fbge ,_cdba ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_edbd =int (_dcf )<<5;};_bbgd =((_ggdf >>1)&0x1f8)|((_edbd >>1)&0x1e00);for _bef :=0;_bef < _edf ;_bef =_gca {var (_bgd byte ;_ecga int ;);_gca =_bef +8;
if _cfg :=_beef -_bef ;_cfg > 8{_ecga =8;}else {_ecga =_cfg ;};if _eaf > 0{_ggdf <<=8;if _gca < _beef {_dcf ,_fbge =_bcb .Bitmap .GetByte (_gfeb +1);if _fbge !=nil {return _gfe .Wrap (_fbge ,_cdba ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};
_ggdf |=int (_dcf );};};if _eaf > 1{_edbd <<=8;if _gca < _beef {_dcf ,_fbge =_bcb .Bitmap .GetByte (_gfeb -_bcb .Bitmap .RowStride +1);if _fbge !=nil {return _gfe .Wrap (_fbge ,_cdba ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_edbd |=int (_dcf )<<5;
};};for _adg :=0;_adg < _ecga ;_adg ++{if _bcb ._cgff {_eafg =_bcb .overrideAtTemplate1 (_bbgd ,_bef +_adg ,_eaf ,int (_bgd ),_adg );_bcb ._dfa .SetIndex (int32 (_eafg ));}else {_bcb ._dfa .SetIndex (int32 (_bbgd ));};_ecc ,_fbge =_bcb ._dfef .DecodeBit (_bcb ._dfa );
if _fbge !=nil {return _gfe .Wrap (_fbge ,_cdba ,"");};_bgd |=byte (_ecc )<<uint (7-_adg );_abfg :=uint (8-_adg );_bbgd =((_bbgd &0xefb)<<1)|_ecc |((_ggdf >>_abfg )&0x8)|((_edbd >>_abfg )&0x200);};if _efbb :=_bcb .Bitmap .SetByte (_dabe ,_bgd );_efbb !=nil {return _gfe .Wrap (_efbb ,_cdba ,"");
};_dabe ++;_gfeb ++;};return nil ;};type HalftoneRegion struct{_bbgg *_de .Reader ;_fac *Header ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;HDefaultPixel int8 ;CombinationOperator _bgg .CombinationOperator ;
HSkipEnabled bool ;HTemplate byte ;IsMMREncoded bool ;HGridWidth uint32 ;HGridHeight uint32 ;HGridX int32 ;HGridY int32 ;HRegionX uint16 ;HRegionY uint16 ;HalftoneRegionBitmap *_bgg .Bitmap ;Patterns []*_bgg .Bitmap ;};func (_dggg *SymbolDictionary )encodeFlags (_fdefc _de .BinaryWriter )(_gdcd int ,_becce error ){const _gdec ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _becce =_fdefc .SkipBits (3);_becce !=nil {return 0,_gfe .Wrap (_becce ,_gdec ,"\u0065\u006d\u0070\u0074\u0079\u0020\u0062\u0069\u0074\u0073");};var _dccd int ;if _dggg .SdrTemplate > 0{_dccd =1;};if _becce =_fdefc .WriteBit (_dccd );_becce !=nil {return _gdcd ,_gfe .Wrap (_becce ,_gdec ,"s\u0064\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");
};_dccd =0;if _dggg .SdTemplate > 1{_dccd =1;};if _becce =_fdefc .WriteBit (_dccd );_becce !=nil {return _gdcd ,_gfe .Wrap (_becce ,_gdec ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_dccd =0;if _dggg .SdTemplate ==1||_dggg .SdTemplate ==3{_dccd =1;
};if _becce =_fdefc .WriteBit (_dccd );_becce !=nil {return _gdcd ,_gfe .Wrap (_becce ,_gdec ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_dccd =0;if _dggg ._bbgbg {_dccd =1;};if _becce =_fdefc .WriteBit (_dccd );_becce !=nil {return _gdcd ,_gfe .Wrap (_becce ,_gdec ,"\u0063\u006f\u0064in\u0067\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0065\u0064");
};_dccd =0;if _dggg ._dfgd {_dccd =1;};if _becce =_fdefc .WriteBit (_dccd );_becce !=nil {return _gdcd ,_gfe .Wrap (_becce ,_gdec ,"\u0063\u006f\u0064\u0069ng\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0075\u0073\u0065\u0064");};_dccd =0;if _dggg .SdHuffAggInstanceSelection {_dccd =1;
};if _becce =_fdefc .WriteBit (_dccd );_becce !=nil {return _gdcd ,_gfe .Wrap (_becce ,_gdec ,"\u0073\u0064\u0048\u0075\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074");};_dccd =int (_dggg .SdHuffBMSizeSelection );if _becce =_fdefc .WriteBit (_dccd );
_becce !=nil {return _gdcd ,_gfe .Wrap (_becce ,_gdec ,"\u0073\u0064\u0048u\u0066\u0066\u0042\u006d\u0053\u0069\u007a\u0065");};_dccd =0;if _dggg .SdHuffDecodeWidthSelection > 1{_dccd =1;};if _becce =_fdefc .WriteBit (_dccd );_becce !=nil {return _gdcd ,_gfe .Wrap (_becce ,_gdec ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");
};_dccd =0;switch _dggg .SdHuffDecodeWidthSelection {case 1,3:_dccd =1;};if _becce =_fdefc .WriteBit (_dccd );_becce !=nil {return _gdcd ,_gfe .Wrap (_becce ,_gdec ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_dccd =0;if _dggg .SdHuffDecodeHeightSelection > 1{_dccd =1;
};if _becce =_fdefc .WriteBit (_dccd );_becce !=nil {return _gdcd ,_gfe .Wrap (_becce ,_gdec ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_dccd =0;switch _dggg .SdHuffDecodeHeightSelection {case 1,3:_dccd =1;};if _becce =_fdefc .WriteBit (_dccd );
_becce !=nil {return _gdcd ,_gfe .Wrap (_becce ,_gdec ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_dccd =0;if _dggg .UseRefinementAggregation {_dccd =1;};if _becce =_fdefc .WriteBit (_dccd );_becce !=nil {return _gdcd ,_gfe .Wrap (_becce ,_gdec ,"\u0073\u0064\u0052\u0065\u0066\u0041\u0067\u0067");
};_dccd =0;if _dggg .IsHuffmanEncoded {_dccd =1;};if _becce =_fdefc .WriteBit (_dccd );_becce !=nil {return _gdcd ,_gfe .Wrap (_becce ,_gdec ,"\u0073\u0064\u0048\u0075\u0066\u0066");};return 2,nil ;};func (_cdfa *SymbolDictionary )encodeRefinementATFlags (_aagb _de .BinaryWriter )(_decb int ,_aaee error ){const _caga ="\u0065\u006e\u0063od\u0065\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0041\u0054\u0046\u006c\u0061\u0067\u0073";
if !_cdfa .UseRefinementAggregation ||_cdfa .SdrTemplate !=0{return 0,nil ;};for _dgbg :=0;_dgbg < 2;_dgbg ++{if _aaee =_aagb .WriteByte (byte (_cdfa .SdrATX [_dgbg ]));_aaee !=nil {return _decb ,_gfe .Wrapf (_aaee ,_caga ,"\u0053\u0064\u0072\u0041\u0054\u0058\u005b\u0025\u0064\u005d",_dgbg );
};_decb ++;if _aaee =_aagb .WriteByte (byte (_cdfa .SdrATY [_dgbg ]));_aaee !=nil {return _decb ,_gfe .Wrapf (_aaee ,_caga ,"\u0053\u0064\u0072\u0041\u0054\u0059\u005b\u0025\u0064\u005d",_dgbg );};_decb ++;};return _decb ,nil ;};func (_dbg *template0 )form (_dbb ,_egc ,_fcf ,_fede ,_dfb int16 )int16 {return (_dbb <<10)|(_egc <<7)|(_fcf <<4)|(_fede <<1)|_dfb ;
};func (_dgfb *SymbolDictionary )GetDictionary ()([]*_bgg .Bitmap ,error ){_fc .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c-\u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){_fc .Log .Trace ("\u005b\u0053\u0059M\u0042\u004f\u004c\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
_fc .Log .Trace ("\u005b\u0053Y\u004d\u0042\u004f\u004c\u002dD\u0049\u0043\u0054\u0049\u004fN\u0041\u0052\u0059\u005d\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020\u000a\u0045\u0078\u003a\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u000a\u006e\u0065\u0077\u003a\u0027\u0025\u0073\u0027",_dgfb ._feddd ,_dgfb ._badc );
}();if _dgfb ._feddd ==nil {var _afab error ;if _dgfb .UseRefinementAggregation {_dgfb ._efbeb =_dgfb .getSbSymCodeLen ();};if !_dgfb .IsHuffmanEncoded {if _afab =_dgfb .setCodingStatistics ();_afab !=nil {return nil ,_afab ;};};_dgfb ._badc =make ([]*_bgg .Bitmap ,_dgfb .NumberOfNewSymbols );
var _fdcgd []int ;if _dgfb .IsHuffmanEncoded &&!_dgfb .UseRefinementAggregation {_fdcgd =make ([]int ,_dgfb .NumberOfNewSymbols );};if _afab =_dgfb .setSymbolsArray ();_afab !=nil {return nil ,_afab ;};var _accc ,_fbbcd int64 ;_dgfb ._dce =0;for _dgfb ._dce < _dgfb .NumberOfNewSymbols {_fbbcd ,_afab =_dgfb .decodeHeightClassDeltaHeight ();
if _afab !=nil {return nil ,_afab ;};_accc +=_fbbcd ;var _efgf ,_cdgc uint32 ;_gebg :=int64 (_dgfb ._dce );for {var _fbab int64 ;_fbab ,_afab =_dgfb .decodeDifferenceWidth ();if _bd .Is (_afab ,_gf .ErrOOB ){break ;};if _afab !=nil {return nil ,_afab ;
};if _dgfb ._dce >=_dgfb .NumberOfNewSymbols {break ;};_efgf +=uint32 (_fbab );_cdgc +=_efgf ;if !_dgfb .IsHuffmanEncoded ||_dgfb .UseRefinementAggregation {if !_dgfb .UseRefinementAggregation {_afab =_dgfb .decodeDirectlyThroughGenericRegion (_efgf ,uint32 (_accc ));
if _afab !=nil {return nil ,_afab ;};}else {_afab =_dgfb .decodeAggregate (_efgf ,uint32 (_accc ));if _afab !=nil {return nil ,_afab ;};};}else if _dgfb .IsHuffmanEncoded &&!_dgfb .UseRefinementAggregation {_fdcgd [_dgfb ._dce ]=int (_efgf );};_dgfb ._dce ++;
};if _dgfb .IsHuffmanEncoded &&!_dgfb .UseRefinementAggregation {var _cdaf int64 ;if _dgfb .SdHuffBMSizeSelection ==0{var _bbeba _bc .Tabler ;_bbeba ,_afab =_bc .GetStandardTable (1);if _afab !=nil {return nil ,_afab ;};_cdaf ,_afab =_bbeba .Decode (_dgfb ._acdf );
if _afab !=nil {return nil ,_afab ;};}else {_cdaf ,_afab =_dgfb .huffDecodeBmSize ();if _afab !=nil {return nil ,_afab ;};};_dgfb ._acdf .Align ();var _gdeg *_bgg .Bitmap ;_gdeg ,_afab =_dgfb .decodeHeightClassCollectiveBitmap (_cdaf ,uint32 (_accc ),_cdgc );
if _afab !=nil {return nil ,_afab ;};_afab =_dgfb .decodeHeightClassBitmap (_gdeg ,_gebg ,int (_accc ),_fdcgd );if _afab !=nil {return nil ,_afab ;};};};_adcg ,_afab :=_dgfb .getToExportFlags ();if _afab !=nil {return nil ,_afab ;};_dgfb .setExportedSymbols (_adcg );
};return _dgfb ._feddd ,nil ;};func (_ebfb *SymbolDictionary )readAtPixels (_daeg int )error {_ebfb .SdATX =make ([]int8 ,_daeg );_ebfb .SdATY =make ([]int8 ,_daeg );var (_adeg byte ;_agga error ;);for _ccab :=0;_ccab < _daeg ;_ccab ++{_adeg ,_agga =_ebfb ._acdf .ReadByte ();
if _agga !=nil {return _agga ;};_ebfb .SdATX [_ccab ]=int8 (_adeg );_adeg ,_agga =_ebfb ._acdf .ReadByte ();if _agga !=nil {return _agga ;};_ebfb .SdATY [_ccab ]=int8 (_adeg );};return nil ;};var (_ Regioner =&TextRegion {};_ Segmenter =&TextRegion {};
);func (_bebd *SymbolDictionary )setRefinementAtPixels ()error {if !_bebd .UseRefinementAggregation ||_bebd .SdrTemplate !=0{return nil ;};if _adbe :=_bebd .readRefinementAtPixels (2);_adbe !=nil {return _adbe ;};return nil ;};func (_aefe *RegionSegment )String ()string {_gbad :=&_a .Builder {};
_gbad .WriteString ("\u0009[\u0052E\u0047\u0049\u004f\u004e\u0020S\u0045\u0047M\u0045\u004e\u0054\u005d\u000a");_gbad .WriteString (_aa .Sprintf ("\t\u0009\u002d\u0020\u0042\u0069\u0074m\u0061\u0070\u0020\u0028\u0077\u0069d\u0074\u0068\u002c\u0020\u0068\u0065\u0069g\u0068\u0074\u0029\u0020\u005b\u0025\u0064\u0078\u0025\u0064]\u000a",_aefe .BitmapWidth ,_aefe .BitmapHeight ));
_gbad .WriteString (_aa .Sprintf ("\u0009\u0009\u002d\u0020L\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0028\u0078,\u0079)\u003a\u0020\u005b\u0025\u0064\u002c\u0025d\u005d\u000a",_aefe .XLocation ,_aefe .YLocation ));_gbad .WriteString (_aa .Sprintf ("\t\u0009\u002d\u0020\u0043\u006f\u006db\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070e\u0072\u0061\u0074o\u0072:\u0020\u0025\u0073",_aefe .CombinaionOperator ));
return _gbad .String ();};func (_dccb *TextRegion )decodeSymInRefSize ()(int64 ,error ){const _egfg ="\u0064e\u0063o\u0064\u0065\u0053\u0079\u006dI\u006e\u0052e\u0066\u0053\u0069\u007a\u0065";if _dccb .SbHuffRSize ==0{_ceabg ,_cfag :=_bc .GetStandardTable (1);
if _cfag !=nil {return 0,_gfe .Wrap (_cfag ,_egfg ,"");};return _ceabg .Decode (_dccb ._geff );};if _dccb ._aaed ==nil {var (_bffe int ;_bafd error ;);if _dccb .SbHuffFS ==3{_bffe ++;};if _dccb .SbHuffDS ==3{_bffe ++;};if _dccb .SbHuffDT ==3{_bffe ++;};
if _dccb .SbHuffRDWidth ==3{_bffe ++;};if _dccb .SbHuffRDHeight ==3{_bffe ++;};if _dccb .SbHuffRDX ==3{_bffe ++;};if _dccb .SbHuffRDY ==3{_bffe ++;};_dccb ._aaed ,_bafd =_dccb .getUserTable (_bffe );if _bafd !=nil {return 0,_gfe .Wrap (_bafd ,_egfg ,"");
};};_aaedg ,_eegdd :=_dccb ._aaed .Decode (_dccb ._geff );if _eegdd !=nil {return 0,_gfe .Wrap (_eegdd ,_egfg ,"");};return _aaedg ,nil ;};func (_gfff *SymbolDictionary )readNumberOfExportedSymbols ()error {_geab ,_egcg :=_gfff ._acdf .ReadBits (32);if _egcg !=nil {return _egcg ;
};_gfff .NumberOfExportedSymbols =uint32 (_geab &_g .MaxUint32 );return nil ;};func (_bfc *PatternDictionary )Init (h *Header ,r *_de .Reader )error {_bfc ._gaba =r ;return _bfc .parseHeader ();};func (_ggbc *PageInformationSegment )Size ()int {return 19};
func (_fbfa *GenericRegion )overrideAtTemplate0a (_afd ,_dea ,_geb ,_fgeb ,_fdg ,_fedeg int )int {if _fbfa .GBAtOverride [0]{_afd &=0xFFEF;if _fbfa .GBAtY [0]==0&&_fbfa .GBAtX [0]>=-int8 (_fdg ){_afd |=(_fgeb >>uint (int8 (_fedeg )-_fbfa .GBAtX [0]&0x1))<<4;
}else {_afd |=int (_fbfa .getPixel (_dea +int (_fbfa .GBAtX [0]),_geb +int (_fbfa .GBAtY [0])))<<4;};};if _fbfa .GBAtOverride [1]{_afd &=0xFBFF;if _fbfa .GBAtY [1]==0&&_fbfa .GBAtX [1]>=-int8 (_fdg ){_afd |=(_fgeb >>uint (int8 (_fedeg )-_fbfa .GBAtX [1]&0x1))<<10;
}else {_afd |=int (_fbfa .getPixel (_dea +int (_fbfa .GBAtX [1]),_geb +int (_fbfa .GBAtY [1])))<<10;};};if _fbfa .GBAtOverride [2]{_afd &=0xF7FF;if _fbfa .GBAtY [2]==0&&_fbfa .GBAtX [2]>=-int8 (_fdg ){_afd |=(_fgeb >>uint (int8 (_fedeg )-_fbfa .GBAtX [2]&0x1))<<11;
}else {_afd |=int (_fbfa .getPixel (_dea +int (_fbfa .GBAtX [2]),_geb +int (_fbfa .GBAtY [2])))<<11;};};if _fbfa .GBAtOverride [3]{_afd &=0x7FFF;if _fbfa .GBAtY [3]==0&&_fbfa .GBAtX [3]>=-int8 (_fdg ){_afd |=(_fgeb >>uint (int8 (_fedeg )-_fbfa .GBAtX [3]&0x1))<<15;
}else {_afd |=int (_fbfa .getPixel (_dea +int (_fbfa .GBAtX [3]),_geb +int (_fbfa .GBAtY [3])))<<15;};};return _afd ;};func (_dcgg *Header )readSegmentPageAssociation (_gea Documenter ,_ccfa *_de .Reader ,_abba uint64 ,_fead ...int )(_fddg error ){const _bgce ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074P\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061t\u0069\u006f\u006e";
if !_dcgg .PageAssociationFieldSize {_aabbd ,_befea :=_ccfa .ReadBits (8);if _befea !=nil {return _gfe .Wrap (_befea ,_bgce ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_dcgg .PageAssociation =int (_aabbd &0xFF);}else {_bddf ,_eabc :=_ccfa .ReadBits (32);
if _eabc !=nil {return _gfe .Wrap (_eabc ,_bgce ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_dcgg .PageAssociation =int (_bddf &_g .MaxInt32 );};if _abba ==0{return nil ;};if _dcgg .PageAssociation !=0{_ffb ,_gcfd :=_gea .GetPage (_dcgg .PageAssociation );
if _gcfd !=nil {return _gfe .Wrap (_gcfd ,_bgce ,"\u0061s\u0073\u006f\u0063\u0069a\u0074\u0065\u0064\u0020\u0070a\u0067e\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006ed");};var _dfcd int ;for _gefa :=uint64 (0);_gefa < _abba ;_gefa ++{_dfcd =_fead [_gefa ];
_dcgg .RTSegments [_gefa ],_gcfd =_ffb .GetSegment (_dfcd );if _gcfd !=nil {var _ffge error ;_dcgg .RTSegments [_gefa ],_ffge =_gea .GetGlobalSegment (_dfcd );if _ffge !=nil {return _gfe .Wrapf (_gcfd ,_bgce ,"\u0072\u0065\u0066\u0065\u0072\u0065n\u0063\u0065\u0020s\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064\u0020\u0061\u0074\u0020pa\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0072\u0020\u0069\u006e\u0020\u0067\u006c\u006f\u0062\u0061\u006c\u0073",_dcgg .PageAssociation );
};};};return nil ;};for _eeag :=uint64 (0);_eeag < _abba ;_eeag ++{_dcgg .RTSegments [_eeag ],_fddg =_gea .GetGlobalSegment (_fead [_eeag ]);if _fddg !=nil {return _gfe .Wrapf (_fddg ,_bgce ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u003a\u0020\u0027\u0025d\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064",_fead [_eeag ]);
};};return nil ;};type Pager interface{GetSegment (int )(*Header ,error );GetBitmap ()(*_bgg .Bitmap ,error );};func (_cec *Header )referenceSize ()uint {switch {case _cec .SegmentNumber <=255:return 1;case _cec .SegmentNumber <=65535:return 2;default:return 4;
};};func (_cbdbc *TableSegment )HtLow ()int32 {return _cbdbc ._cegcb };func (_geed *HalftoneRegion )computeY (_ecd ,_gbc int )int {return _geed .shiftAndFill (int (_geed .HGridY )+_ecd *int (_geed .HRegionX )-_gbc *int (_geed .HRegionY ));};func (_egcf *HalftoneRegion )checkInput ()error {if _egcf .IsMMREncoded {if _egcf .HTemplate !=0{_fc .Log .Debug ("\u0048\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030",_egcf .HTemplate );
};if _egcf .HSkipEnabled {_fc .Log .Debug ("\u0048\u0053\u006b\u0069\u0070\u0045\u006e\u0061\u0062\u006c\u0065\u0064\u0020\u0030\u0020\u0025\u0076\u0020(\u0073\u0068\u006f\u0075\u006c\u0064\u0020c\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020v\u0061\u006c\u0075\u0065\u0020\u0066\u0061\u006c\u0073\u0065\u0029",_egcf .HSkipEnabled );
};};return nil ;};func (_dca *GenericRegion )InitEncode (bm *_bgg .Bitmap ,xLoc ,yLoc ,template int ,duplicateLineRemoval bool )error {const _eaa ="\u0047e\u006e\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069\u006f\u006e.\u0049\u006e\u0069\u0074\u0045\u006e\u0063\u006f\u0064\u0065";
if bm ==nil {return _gfe .Error (_eaa ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if xLoc < 0||yLoc < 0{return _gfe .Error (_eaa ,"\u0078\u0020\u0061\u006e\u0064\u0020\u0079\u0020\u006c\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074h\u0061\u006e\u0020\u0030");
};_dca .Bitmap =bm ;_dca .GBTemplate =byte (template );switch _dca .GBTemplate {case 0:_dca .GBAtX =[]int8 {3,-3,2,-2};_dca .GBAtY =[]int8 {-1,-1,-2,-2};case 1:_dca .GBAtX =[]int8 {3};_dca .GBAtY =[]int8 {-1};case 2,3:_dca .GBAtX =[]int8 {2};_dca .GBAtY =[]int8 {-1};
default:return _gfe .Errorf (_eaa ,"\u0070\u0072o\u0076\u0069\u0064\u0065\u0064 \u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u007b\u0030\u002c\u0031\u002c\u0032\u002c\u0033\u007d",template );
};_dca .RegionSegment =&RegionSegment {BitmapHeight :uint32 (bm .Height ),BitmapWidth :uint32 (bm .Width ),XLocation :uint32 (xLoc ),YLocation :uint32 (yLoc )};_dca .IsTPGDon =duplicateLineRemoval ;return nil ;};func (_cdfcf *GenericRegion )overrideAtTemplate1 (_fbegd ,_dfbb ,_ebdd ,_ecb ,_abb int )int {_fbegd &=0x1FF7;
if _cdfcf .GBAtY [0]==0&&_cdfcf .GBAtX [0]>=-int8 (_abb ){_fbegd |=(_ecb >>uint (7-(int8 (_abb )+_cdfcf .GBAtX [0]))&0x1)<<3;}else {_fbegd |=int (_cdfcf .getPixel (_dfbb +int (_cdfcf .GBAtX [0]),_ebdd +int (_cdfcf .GBAtY [0])))<<3;};return _fbegd ;};func (_ebde *PageInformationSegment )readIsLossless ()error {_bgfef ,_bbf :=_ebde ._cfcb .ReadBit ();
if _bbf !=nil {return _bbf ;};if _bgfef ==1{_ebde .IsLossless =true ;};return nil ;};func (_afgf *TextRegion )setCodingStatistics ()error {if _afgf ._cgdd ==nil {_afgf ._cgdd =_ad .NewStats (512,1);};if _afgf ._gfecc ==nil {_afgf ._gfecc =_ad .NewStats (512,1);
};if _afgf ._fcgb ==nil {_afgf ._fcgb =_ad .NewStats (512,1);};if _afgf ._ggbff ==nil {_afgf ._ggbff =_ad .NewStats (512,1);};if _afgf ._eagd ==nil {_afgf ._eagd =_ad .NewStats (512,1);};if _afgf ._efde ==nil {_afgf ._efde =_ad .NewStats (512,1);};if _afgf ._gbde ==nil {_afgf ._gbde =_ad .NewStats (512,1);
};if _afgf ._acdfa ==nil {_afgf ._acdfa =_ad .NewStats (1<<uint (_afgf ._fda ),1);};if _afgf ._cfgg ==nil {_afgf ._cfgg =_ad .NewStats (512,1);};if _afgf ._gdba ==nil {_afgf ._gdba =_ad .NewStats (512,1);};if _afgf ._ddge ==nil {var _ggdd error ;_afgf ._ddge ,_ggdd =_ad .New (_afgf ._geff );
if _ggdd !=nil {return _ggdd ;};};return nil ;};func (_dcaa *Header )readReferredToSegmentNumbers (_aeae *_de .Reader ,_gagf int )([]int ,error ){const _dgdg ="\u0072\u0065\u0061\u0064R\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053e\u0067m\u0065\u006e\u0074\u004e\u0075\u006d\u0062e\u0072\u0073";
_eebgb :=make ([]int ,_gagf );if _gagf > 0{_dcaa .RTSegments =make ([]*Header ,_gagf );var (_ccff uint64 ;_ggbd error ;);for _bfde :=0;_bfde < _gagf ;_bfde ++{_ccff ,_ggbd =_aeae .ReadBits (byte (_dcaa .referenceSize ())<<3);if _ggbd !=nil {return nil ,_gfe .Wrapf (_ggbd ,_dgdg ,"\u0027\u0025\u0064\u0027 \u0072\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0020\u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u0075\u006db\u0065\u0072",_bfde );
};_eebgb [_bfde ]=int (_ccff &_g .MaxInt32 );};};return _eebgb ,nil ;};func (_gbaf *SymbolDictionary )setInSyms ()error {if _gbaf .Header .RTSegments !=nil {return _gbaf .retrieveImportSymbols ();};_gbaf ._dege =make ([]*_bgg .Bitmap ,0);return nil ;};
type EncodeInitializer interface{InitEncode ();};func (_efef *TextRegion )getSymbols ()error {if _efef .Header .RTSegments !=nil {return _efef .initSymbols ();};return nil ;};func (_gfd *GenericRegion )Size ()int {return _gfd .RegionSegment .Size ()+1+2*len (_gfd .GBAtX )};
func (_ffcf *SymbolDictionary )readRefinementAtPixels (_gfgac int )error {_ffcf .SdrATX =make ([]int8 ,_gfgac );_ffcf .SdrATY =make ([]int8 ,_gfgac );var (_fafa byte ;_cedg error ;);for _bgcgb :=0;_bgcgb < _gfgac ;_bgcgb ++{_fafa ,_cedg =_ffcf ._acdf .ReadByte ();
if _cedg !=nil {return _cedg ;};_ffcf .SdrATX [_bgcgb ]=int8 (_fafa );_fafa ,_cedg =_ffcf ._acdf .ReadByte ();if _cedg !=nil {return _cedg ;};_ffcf .SdrATY [_bgcgb ]=int8 (_fafa );};return nil ;};func (_ggabf *PageInformationSegment )readWidthAndHeight ()error {_fcea ,_cede :=_ggabf ._cfcb .ReadBits (32);
if _cede !=nil {return _cede ;};_ggabf .PageBMWidth =int (_fcea &_g .MaxInt32 );_fcea ,_cede =_ggabf ._cfcb .ReadBits (32);if _cede !=nil {return _cede ;};_ggabf .PageBMHeight =int (_fcea &_g .MaxInt32 );return nil ;};func (_cbca *GenericRefinementRegion )parseHeader ()(_ddbe error ){_fc .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0048e\u0061\u0064e\u0072\u002e\u002e\u002e");
_edg :=_ga .Now ();defer func (){if _ddbe ==nil {_fc .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045G\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020h\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0069\u006e\u0069\u0073\u0068id\u0020\u0069\u006e\u003a\u0020\u0025\u0064\u0020\u006e\u0073",_ga .Since (_edg ).Nanoseconds ());
}else {_fc .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0068\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0073",_ddbe );
};}();if _ddbe =_cbca .RegionInfo .parseHeader ();_ddbe !=nil {return _ddbe ;};_ ,_ddbe =_cbca ._fe .ReadBits (6);if _ddbe !=nil {return _ddbe ;};_cbca .IsTPGROn ,_ddbe =_cbca ._fe .ReadBool ();if _ddbe !=nil {return _ddbe ;};var _adf int ;_adf ,_ddbe =_cbca ._fe .ReadBit ();
if _ddbe !=nil {return _ddbe ;};_cbca .TemplateID =int8 (_adf );switch _cbca .TemplateID {case 0:_cbca .Template =_cbca ._ace ;if _ddbe =_cbca .readAtPixels ();_ddbe !=nil {return ;};case 1:_cbca .Template =_cbca ._be ;};return nil ;};func (_cadde *PageInformationSegment )readCombinationOperator ()error {_dba ,_bfbg :=_cadde ._cfcb .ReadBits (2);
if _bfbg !=nil {return _bfbg ;};_cadde ._cdcb =_bgg .CombinationOperator (int (_dba ));return nil ;};var _ SegmentEncoder =&RegionSegment {};func (_bggbe *PatternDictionary )parseHeader ()error {_fc .Log .Trace ("\u005b\u0050\u0041\u0054\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054I\u004f\u004e\u0041\u0052\u0059\u005d[\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d\u0020b\u0065\u0067\u0069\u006e");
defer func (){_fc .Log .Trace ("\u005b\u0050\u0041T\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u005b\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
}();_ ,_febe :=_bggbe ._gaba .ReadBits (5);if _febe !=nil {return _febe ;};if _febe =_bggbe .readTemplate ();_febe !=nil {return _febe ;};if _febe =_bggbe .readIsMMREncoded ();_febe !=nil {return _febe ;};if _febe =_bggbe .readPatternWidthAndHeight ();
_febe !=nil {return _febe ;};if _febe =_bggbe .readGrayMax ();_febe !=nil {return _febe ;};if _febe =_bggbe .computeSegmentDataStructure ();_febe !=nil {return _febe ;};return _bggbe .checkInput ();};func (_fecg *TextRegion )InitEncode (globalSymbolsMap ,localSymbolsMap map[int ]int ,comps []int ,inLL *_bgg .Points ,symbols *_bgg .Bitmaps ,classIDs *_ae .IntSlice ,boxes *_bgg .Boxes ,width ,height ,symBits int ){_fecg .RegionInfo =&RegionSegment {BitmapWidth :uint32 (width ),BitmapHeight :uint32 (height )};
_fecg ._fgab =globalSymbolsMap ;_fecg ._gcff =localSymbolsMap ;_fecg ._acge =comps ;_fecg ._fcbf =inLL ;_fecg ._geda =symbols ;_fecg ._cabc =classIDs ;_fecg ._fcgg =boxes ;_fecg ._bacg =symBits ;};func (_fbf *GenericRegion )GetRegionBitmap ()(_bddd *_bgg .Bitmap ,_agf error ){if _fbf .Bitmap !=nil {return _fbf .Bitmap ,nil ;
};if _fbf .IsMMREncoded {if _fbf ._abc ==nil {_fbf ._abc ,_agf =_c .New (_fbf ._cac ,int (_fbf .RegionSegment .BitmapWidth ),int (_fbf .RegionSegment .BitmapHeight ),_fbf .DataOffset ,_fbf .DataLength );if _agf !=nil {return nil ,_agf ;};};_fbf .Bitmap ,_agf =_fbf ._abc .UncompressMMR ();
return _fbf .Bitmap ,_agf ;};if _agf =_fbf .updateOverrideFlags ();_agf !=nil {return nil ,_agf ;};var _ecf int ;if _fbf ._dfef ==nil {_fbf ._dfef ,_agf =_ad .New (_fbf ._cac );if _agf !=nil {return nil ,_agf ;};};if _fbf ._dfa ==nil {_fbf ._dfa =_ad .NewStats (65536,1);
};_fbf .Bitmap =_bgg .New (int (_fbf .RegionSegment .BitmapWidth ),int (_fbf .RegionSegment .BitmapHeight ));_eeee :=int (uint32 (_fbf .Bitmap .Width +7)&(^uint32 (7)));for _cbbbe :=0;_cbbbe < _fbf .Bitmap .Height ;_cbbbe ++{if _fbf .IsTPGDon {var _dcbd int ;
_dcbd ,_agf =_fbf .decodeSLTP ();if _agf !=nil {return nil ,_agf ;};_ecf ^=_dcbd ;};if _ecf ==1{if _cbbbe > 0{if _agf =_fbf .copyLineAbove (_cbbbe );_agf !=nil {return nil ,_agf ;};};}else {if _agf =_fbf .decodeLine (_cbbbe ,_fbf .Bitmap .Width ,_eeee );
_agf !=nil {return nil ,_agf ;};};};return _fbf .Bitmap ,nil ;};func (_bggc *GenericRegion )setParametersWithAt (_adcb bool ,_cdbd byte ,_dcabe ,_cgfb bool ,_cegdd ,_cdfcd []int8 ,_edfb ,_fcff uint32 ,_cfc *_ad .DecoderStats ,_degc *_ad .Decoder ){_bggc .IsMMREncoded =_adcb ;
_bggc .GBTemplate =_cdbd ;_bggc .IsTPGDon =_dcabe ;_bggc .GBAtX =_cegdd ;_bggc .GBAtY =_cdfcd ;_bggc .RegionSegment .BitmapHeight =_fcff ;_bggc .RegionSegment .BitmapWidth =_edfb ;_bggc ._abc =nil ;_bggc .Bitmap =nil ;if _cfc !=nil {_bggc ._dfa =_cfc ;
};if _degc !=nil {_bggc ._dfef =_degc ;};_fc .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049O\u004e\u005d\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073\u0020\u0053\u0044\u0041t\u003a\u0020\u0025\u0073",_bggc );
};func (_eab *GenericRegion )decodeLine (_cca ,_cce ,_aaag int )error {const _fbfc ="\u0064\u0065\u0063\u006f\u0064\u0065\u004c\u0069\u006e\u0065";_agac :=_eab .Bitmap .GetByteIndex (0,_cca );_ggab :=_agac -_eab .Bitmap .RowStride ;switch _eab .GBTemplate {case 0:if !_eab .UseExtTemplates {return _eab .decodeTemplate0a (_cca ,_cce ,_aaag ,_agac ,_ggab );
};return _eab .decodeTemplate0b (_cca ,_cce ,_aaag ,_agac ,_ggab );case 1:return _eab .decodeTemplate1 (_cca ,_cce ,_aaag ,_agac ,_ggab );case 2:return _eab .decodeTemplate2 (_cca ,_cce ,_aaag ,_agac ,_ggab );case 3:return _eab .decodeTemplate3 (_cca ,_cce ,_aaag ,_agac ,_ggab );
};return _gfe .Errorf (_fbfc ,"\u0069\u006e\u0076a\u006c\u0069\u0064\u0020G\u0042\u0054\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u003a\u0020\u0025\u0064",_eab .GBTemplate );};func (_cbdd *SymbolDictionary )retrieveImportSymbols ()error {for _ ,_acg :=range _cbdd .Header .RTSegments {if _acg .Type ==0{_adfc ,_dbcd :=_acg .GetSegmentData ();
if _dbcd !=nil {return _dbcd ;};_acgd ,_fbdf :=_adfc .(*SymbolDictionary );if !_fbdf {return _aa .Errorf ("\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0044\u0061\u0074a\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u003a\u0020%\u0054",_adfc );
};_bagc ,_dbcd :=_acgd .GetDictionary ();if _dbcd !=nil {return _aa .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064 \u0073\u0065\u0067m\u0065\u006e\u0074 \u0077\u0069t\u0068\u0020\u0069\u006e\u0064\u0065x\u003a %\u0064\u0020\u0067\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0073",_acg .SegmentNumber ,_dbcd .Error ());
};_cbdd ._dege =append (_cbdd ._dege ,_bagc ...);_cbdd ._gagg +=_acgd .NumberOfExportedSymbols ;};};return nil ;};func (_ggbe *PatternDictionary )checkInput ()error {if _ggbe .HdpHeight < 1||_ggbe .HdpWidth < 1{return _gg .New ("in\u0076\u0061l\u0069\u0064\u0020\u0048\u0065\u0061\u0064\u0065\u0072 \u0056\u0061\u006c\u0075\u0065\u003a\u0020\u0057\u0069\u0064\u0074\u0068\u002f\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020g\u0072e\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020z\u0065\u0072o");
};if _ggbe .IsMMREncoded {if _ggbe .HDTemplate !=0{_fc .Log .Debug ("\u0076\u0061\u0072\u0069\u0061\u0062\u006c\u0065\u0020\u0048\u0044\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e \u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030");
};};return nil ;};func (_cege *TextRegion )decodeRdx ()(int64 ,error ){const _dfbc ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064x";if _cege .IsHuffmanEncoded {if _cege .SbHuffRDX ==3{if _cege ._bfcd ==nil {var (_acec int ;_bcbd error ;);if _cege .SbHuffFS ==3{_acec ++;
};if _cege .SbHuffDS ==3{_acec ++;};if _cege .SbHuffDT ==3{_acec ++;};if _cege .SbHuffRDWidth ==3{_acec ++;};if _cege .SbHuffRDHeight ==3{_acec ++;};_cege ._bfcd ,_bcbd =_cege .getUserTable (_acec );if _bcbd !=nil {return 0,_gfe .Wrap (_bcbd ,_dfbc ,"");
};};return _cege ._bfcd .Decode (_cege ._geff );};_ebbf ,_eaad :=_bc .GetStandardTable (14+int (_cege .SbHuffRDX ));if _eaad !=nil {return 0,_gfe .Wrap (_eaad ,_dfbc ,"");};return _ebbf .Decode (_cege ._geff );};_adcd ,_bgeeg :=_cege ._ddge .DecodeInt (_cege ._cfgg );
if _bgeeg !=nil {return 0,_gfe .Wrap (_bgeeg ,_dfbc ,"");};return int64 (_adcd ),nil ;};func (_bgba *GenericRegion )String ()string {_cffb :=&_a .Builder {};_cffb .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");
_cffb .WriteString (_bgba .RegionSegment .String ()+"\u000a");_cffb .WriteString (_aa .Sprintf ("\u0009\u002d\u0020Us\u0065\u0045\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_bgba .UseExtTemplates ));
_cffb .WriteString (_aa .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0044\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_bgba .IsTPGDon ));_cffb .WriteString (_aa .Sprintf ("\u0009-\u0020G\u0042\u0054\u0065\u006d\u0070l\u0061\u0074e\u003a\u0020\u0025\u0064\u000a",_bgba .GBTemplate ));
_cffb .WriteString (_aa .Sprintf ("\t\u002d \u0049\u0073\u004d\u004d\u0052\u0045\u006e\u0063o\u0064\u0065\u0064\u003a %\u0076\u000a",_bgba .IsMMREncoded ));_cffb .WriteString (_aa .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_bgba .GBAtX ));
_cffb .WriteString (_aa .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_bgba .GBAtY ));_cffb .WriteString (_aa .Sprintf ("\t\u002d \u0047\u0042\u0041\u0074\u004f\u0076\u0065\u0072r\u0069\u0064\u0065\u003a %\u0076\u000a",_bgba .GBAtOverride ));
return _cffb .String ();};func (_dbcfa *SymbolDictionary )setSymbolsArray ()error {if _dbcfa ._dege ==nil {if _acbf :=_dbcfa .retrieveImportSymbols ();_acbf !=nil {return _acbf ;};};if _dbcfa ._agfff ==nil {_dbcfa ._agfff =append (_dbcfa ._agfff ,_dbcfa ._dege ...);
};return nil ;};type Documenter interface{GetPage (int )(Pager ,error );GetGlobalSegment (int )(*Header ,error );};type templater interface{form (_ggb ,_dda ,_dge ,_dbc ,_fce int16 )int16 ;setIndex (_fdda *_ad .DecoderStats );};func (_eec *PageInformationSegment )Encode (w _de .BinaryWriter )(_aead int ,_efda error ){const _bebe ="\u0050\u0061g\u0065\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u002e\u0045\u006eco\u0064\u0065";
_dcbc :=make ([]byte ,4);_bg .BigEndian .PutUint32 (_dcbc ,uint32 (_eec .PageBMWidth ));_aead ,_efda =w .Write (_dcbc );if _efda !=nil {return _aead ,_gfe .Wrap (_efda ,_bebe ,"\u0077\u0069\u0064t\u0068");};_bg .BigEndian .PutUint32 (_dcbc ,uint32 (_eec .PageBMHeight ));
var _fffd int ;_fffd ,_efda =w .Write (_dcbc );if _efda !=nil {return _fffd +_aead ,_gfe .Wrap (_efda ,_bebe ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_aead +=_fffd ;_bg .BigEndian .PutUint32 (_dcbc ,uint32 (_eec .ResolutionX ));_fffd ,_efda =w .Write (_dcbc );
if _efda !=nil {return _fffd +_aead ,_gfe .Wrap (_efda ,_bebe ,"\u0078\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_aead +=_fffd ;_bg .BigEndian .PutUint32 (_dcbc ,uint32 (_eec .ResolutionY ));if _fffd ,_efda =w .Write (_dcbc );_efda !=nil {return _fffd +_aead ,_gfe .Wrap (_efda ,_bebe ,"\u0079\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");
};_aead +=_fffd ;if _efda =_eec .encodeFlags (w );_efda !=nil {return _aead ,_gfe .Wrap (_efda ,_bebe ,"");};_aead ++;if _fffd ,_efda =_eec .encodeStripingInformation (w );_efda !=nil {return _aead ,_gfe .Wrap (_efda ,_bebe ,"");};_aead +=_fffd ;return _aead ,nil ;
};func (_adb *SymbolDictionary )encodeSymbols (_gfga _de .BinaryWriter )(_gaee int ,_dff error ){const _cfaa ="\u0065\u006e\u0063o\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c";_deef :=_fd .New ();_deef .Init ();_ebaea ,_dff :=_adb ._gccg .SelectByIndexes (_adb ._bfdd );
if _dff !=nil {return 0,_gfe .Wrap (_dff ,_cfaa ,"\u0069n\u0069\u0074\u0069\u0061\u006c");};_cgcc :=map[*_bgg .Bitmap ]int {};for _gage ,_aaeef :=range _ebaea .Values {_cgcc [_aaeef ]=_gage ;};_ebaea .SortByHeight ();var _bgbce ,_aada int ;_agg ,_dff :=_ebaea .GroupByHeight ();
if _dff !=nil {return 0,_gfe .Wrap (_dff ,_cfaa ,"");};for _ ,_bbaa :=range _agg .Values {_adbc :=_bbaa .Values [0].Height ;_cfaef :=_adbc -_bgbce ;if _dff =_deef .EncodeInteger (_fd .IADH ,_cfaef );_dff !=nil {return 0,_gfe .Wrapf (_dff ,_cfaa ,"\u0049\u0041\u0044\u0048\u0020\u0066\u006f\u0072\u0020\u0064\u0068\u003a \u0027\u0025\u0064\u0027",_cfaef );
};_bgbce =_adbc ;_baebd ,_debe :=_bbaa .GroupByWidth ();if _debe !=nil {return 0,_gfe .Wrapf (_debe ,_cfaa ,"\u0068\u0065\u0069g\u0068\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_adbc );};var _bafg int ;for _ ,_bagg :=range _baebd .Values {for _ ,_gcdaf :=range _bagg .Values {_gbea :=_gcdaf .Width ;
_fgfb :=_gbea -_bafg ;if _debe =_deef .EncodeInteger (_fd .IADW ,_fgfb );_debe !=nil {return 0,_gfe .Wrapf (_debe ,_cfaa ,"\u0049\u0041\u0044\u0057\u0020\u0066\u006f\u0072\u0020\u0064\u0077\u003a \u0027\u0025\u0064\u0027",_fgfb );};_bafg +=_fgfb ;if _debe =_deef .EncodeBitmap (_gcdaf ,false );
_debe !=nil {return 0,_gfe .Wrapf (_debe ,_cfaa ,"H\u0065i\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u0020W\u0069\u0064\u0074\u0068: \u0025\u0064",_adbc ,_gbea );};_fabf :=_cgcc [_gcdaf ];_adb ._faf [_fabf ]=_aada ;_aada ++;};};if _debe =_deef .EncodeOOB (_fd .IADW );
_debe !=nil {return 0,_gfe .Wrap (_debe ,_cfaa ,"\u0049\u0041\u0044\u0057");};};if _dff =_deef .EncodeInteger (_fd .IAEX ,0);_dff !=nil {return 0,_gfe .Wrap (_dff ,_cfaa ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};if _dff =_deef .EncodeInteger (_fd .IAEX ,len (_adb ._bfdd ));_dff !=nil {return 0,_gfe .Wrap (_dff ,_cfaa ,"\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0073\u0079m\u0062\u006f\u006c\u0073");};_deef .Final ();_dede ,_dff :=_deef .WriteTo (_gfga );
if _dff !=nil {return 0,_gfe .Wrap (_dff ,_cfaa ,"\u0077\u0072i\u0074\u0069\u006e\u0067 \u0065\u006ec\u006f\u0064\u0065\u0072\u0020\u0063\u006f\u006et\u0065\u0078\u0074\u0020\u0074\u006f\u0020\u0027\u0077\u0027\u0020\u0077r\u0069\u0074\u0065\u0072");};
return int (_dede ),nil ;};func (_eegd *PatternDictionary )readPatternWidthAndHeight ()error {_fada ,_bgfcf :=_eegd ._gaba .ReadByte ();if _bgfcf !=nil {return _bgfcf ;};_eegd .HdpWidth =_fada ;_fada ,_bgfcf =_eegd ._gaba .ReadByte ();if _bgfcf !=nil {return _bgfcf ;
};_eegd .HdpHeight =_fada ;return nil ;};func (_edce *SymbolDictionary )encodeNumSyms (_bffa _de .BinaryWriter )(_ggeae int ,_fceac error ){const _fdge ="\u0065\u006e\u0063\u006f\u0064\u0065\u004e\u0075\u006d\u0053\u0079\u006d\u0073";_adaa :=make ([]byte ,4);
_bg .BigEndian .PutUint32 (_adaa ,_edce .NumberOfExportedSymbols );if _ggeae ,_fceac =_bffa .Write (_adaa );_fceac !=nil {return _ggeae ,_gfe .Wrap (_fceac ,_fdge ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};_bg .BigEndian .PutUint32 (_adaa ,_edce .NumberOfNewSymbols );_fffdf ,_fceac :=_bffa .Write (_adaa );if _fceac !=nil {return _ggeae ,_gfe .Wrap (_fceac ,_fdge ,"n\u0065\u0077\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};return _ggeae +_fffdf ,nil ;
};func (_dcab *GenericRegion )overrideAtTemplate3 (_ggeg ,_gccc ,_deg ,_gcg ,_dfc int )int {_ggeg &=0x3EF;if _dcab .GBAtY [0]==0&&_dcab .GBAtX [0]>=-int8 (_dfc ){_ggeg |=(_gcg >>uint (7-(int8 (_dfc )+_dcab .GBAtX [0]))&0x1)<<4;}else {_ggeg |=int (_dcab .getPixel (_gccc +int (_dcab .GBAtX [0]),_deg +int (_dcab .GBAtY [0])))<<4;
};return _ggeg ;};func (_gfa *SymbolDictionary )huffDecodeBmSize ()(int64 ,error ){if _gfa ._eeebe ==nil {var (_dcce int ;_ddca error ;);if _gfa .SdHuffDecodeHeightSelection ==3{_dcce ++;};if _gfa .SdHuffDecodeWidthSelection ==3{_dcce ++;};_gfa ._eeebe ,_ddca =_gfa .getUserTable (_dcce );
if _ddca !=nil {return 0,_ddca ;};};return _gfa ._eeebe .Decode (_gfa ._acdf );};func (_befe *GenericRegion )setParameters (_fedb bool ,_cbdb ,_bcba int64 ,_ggge ,_gefg uint32 ){_befe .IsMMREncoded =_fedb ;_befe .DataOffset =_cbdb ;_befe .DataLength =_bcba ;
_befe .RegionSegment .BitmapHeight =_ggge ;_befe .RegionSegment .BitmapWidth =_gefg ;_befe ._abc =nil ;_befe .Bitmap =nil ;};func _gbg (_dcb *_de .Reader ,_eee *Header )*GenericRefinementRegion {return &GenericRefinementRegion {_fe :_dcb ,RegionInfo :NewRegionSegment (_dcb ),_aea :_eee ,_ace :&template0 {},_be :&template1 {}};
};func (_fadd *TextRegion )decodeStripT ()(_fceacf int64 ,_cdag error ){if _fadd .IsHuffmanEncoded {if _fadd .SbHuffDT ==3{if _fadd ._feda ==nil {var _dcee int ;if _fadd .SbHuffFS ==3{_dcee ++;};if _fadd .SbHuffDS ==3{_dcee ++;};_fadd ._feda ,_cdag =_fadd .getUserTable (_dcee );
if _cdag !=nil {return 0,_cdag ;};};_fceacf ,_cdag =_fadd ._feda .Decode (_fadd ._geff );if _cdag !=nil {return 0,_cdag ;};}else {var _cdebg _bc .Tabler ;_cdebg ,_cdag =_bc .GetStandardTable (11+int (_fadd .SbHuffDT ));if _cdag !=nil {return 0,_cdag ;};
_fceacf ,_cdag =_cdebg .Decode (_fadd ._geff );if _cdag !=nil {return 0,_cdag ;};};}else {var _cacb int32 ;_cacb ,_cdag =_fadd ._ddge .DecodeInt (_fadd ._cgdd );if _cdag !=nil {return 0,_cdag ;};_fceacf =int64 (_cacb );};_fceacf *=int64 (-_fadd .SbStrips );
return _fceacf ,nil ;};func (_bebef *PatternDictionary )readTemplate ()error {_eebe ,_dfgf :=_bebef ._gaba .ReadBits (2);if _dfgf !=nil {return _dfgf ;};_bebef .HDTemplate =byte (_eebe );return nil ;};type SymbolDictionary struct{_acdf *_de .Reader ;SdrTemplate int8 ;
SdTemplate int8 ;_bbgbg bool ;_dfgd bool ;SdHuffAggInstanceSelection bool ;SdHuffBMSizeSelection int8 ;SdHuffDecodeWidthSelection int8 ;SdHuffDecodeHeightSelection int8 ;UseRefinementAggregation bool ;IsHuffmanEncoded bool ;SdATX []int8 ;SdATY []int8 ;
SdrATX []int8 ;SdrATY []int8 ;NumberOfExportedSymbols uint32 ;NumberOfNewSymbols uint32 ;Header *Header ;_gagg uint32 ;_dege []*_bgg .Bitmap ;_dce uint32 ;_badc []*_bgg .Bitmap ;_effe _bc .Tabler ;_ffc _bc .Tabler ;_eeebe _bc .Tabler ;_dcad _bc .Tabler ;
_feddd []*_bgg .Bitmap ;_agfff []*_bgg .Bitmap ;_ddea *_ad .Decoder ;_ebee *TextRegion ;_cdega *GenericRegion ;_abd *GenericRefinementRegion ;_bgdf *_ad .DecoderStats ;_begg *_ad .DecoderStats ;_gcae *_ad .DecoderStats ;_fag *_ad .DecoderStats ;_dacbe *_ad .DecoderStats ;
_gdgc *_ad .DecoderStats ;_dfbg *_ad .DecoderStats ;_aadd *_ad .DecoderStats ;_adfd *_ad .DecoderStats ;_efbeb int8 ;_gccg *_bgg .Bitmaps ;_bfdd []int ;_faf map[int ]int ;_bfe bool ;};func (_eabca *PageInformationSegment )readContainsRefinement ()error {_gefaa ,_efe :=_eabca ._cfcb .ReadBit ();
if _efe !=nil {return _efe ;};if _gefaa ==1{_eabca ._bbc =true ;};return nil ;};func (_gfbf *SymbolDictionary )decodeDirectlyThroughGenericRegion (_efeg ,_geba uint32 )error {if _gfbf ._cdega ==nil {_gfbf ._cdega =NewGenericRegion (_gfbf ._acdf );};_gfbf ._cdega .setParametersWithAt (false ,byte (_gfbf .SdTemplate ),false ,false ,_gfbf .SdATX ,_gfbf .SdATY ,_efeg ,_geba ,_gfbf ._bgdf ,_gfbf ._ddea );
return _gfbf .addSymbol (_gfbf ._cdega );};type EndOfStripe struct{_e *_de .Reader ;_eg int ;};func (_dfdf *RegionSegment )parseHeader ()error {const _ccdfa ="p\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_fc .Log .Trace ("\u005b\u0052\u0045\u0047I\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002dH\u0045A\u0044\u0045\u0052\u005d\u0020\u0042\u0065g\u0069\u006e");
defer func (){_fc .Log .Trace ("\u005b\u0052\u0045G\u0049\u004f\u004e\u005d[\u0050\u0041\u0052\u0053\u0045\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");}();_becfc ,_bbff :=_dfdf ._acfd .ReadBits (32);
if _bbff !=nil {return _gfe .Wrap (_bbff ,_ccdfa ,"\u0077\u0069\u0064t\u0068");};_dfdf .BitmapWidth =uint32 (_becfc &_g .MaxUint32 );_becfc ,_bbff =_dfdf ._acfd .ReadBits (32);if _bbff !=nil {return _gfe .Wrap (_bbff ,_ccdfa ,"\u0068\u0065\u0069\u0067\u0068\u0074");
};_dfdf .BitmapHeight =uint32 (_becfc &_g .MaxUint32 );_becfc ,_bbff =_dfdf ._acfd .ReadBits (32);if _bbff !=nil {return _gfe .Wrap (_bbff ,_ccdfa ,"\u0078\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_dfdf .XLocation =uint32 (_becfc &_g .MaxUint32 );
_becfc ,_bbff =_dfdf ._acfd .ReadBits (32);if _bbff !=nil {return _gfe .Wrap (_bbff ,_ccdfa ,"\u0079\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_dfdf .YLocation =uint32 (_becfc &_g .MaxUint32 );if _ ,_bbff =_dfdf ._acfd .ReadBits (5);_bbff !=nil {return _gfe .Wrap (_bbff ,_ccdfa ,"\u0064i\u0072\u0079\u0020\u0072\u0065\u0061d");
};if _bbff =_dfdf .readCombinationOperator ();_bbff !=nil {return _gfe .Wrap (_bbff ,_ccdfa ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};return nil ;};func (_gefd *TextRegion )decodeRI ()(int64 ,error ){if !_gefd .UseRefinement {return 0,nil ;
};if _gefd .IsHuffmanEncoded {_ebbg ,_dbaf :=_gefd ._geff .ReadBit ();return int64 (_ebbg ),_dbaf ;};_gccge ,_gdea :=_gefd ._ddge .DecodeInt (_gefd ._eagd );return int64 (_gccge ),_gdea ;};func (_bbca *PageInformationSegment )readDefaultPixelValue ()error {_add ,_dfeb :=_bbca ._cfcb .ReadBit ();
if _dfeb !=nil {return _dfeb ;};_bbca .DefaultPixelValue =uint8 (_add &0xf);return nil ;};type RegionSegment struct{_acfd *_de .Reader ;BitmapWidth uint32 ;BitmapHeight uint32 ;XLocation uint32 ;YLocation uint32 ;CombinaionOperator _bgg .CombinationOperator ;
};func (_gag *GenericRefinementRegion )decodeTypicalPredictedLine (_gcd ,_bga ,_cdb ,_ccc ,_cad ,_ff int )error {_gd :=_gcd -int (_gag .ReferenceDY );_ddg :=_gag .ReferenceBitmap .GetByteIndex (0,_gd );_bcc :=_gag .RegionBitmap .GetByteIndex (0,_gcd );
var _ffa error ;switch _gag .TemplateID {case 0:_ffa =_gag .decodeTypicalPredictedLineTemplate0 (_gcd ,_bga ,_cdb ,_ccc ,_cad ,_ff ,_bcc ,_gd ,_ddg );case 1:_ffa =_gag .decodeTypicalPredictedLineTemplate1 (_gcd ,_bga ,_cdb ,_ccc ,_cad ,_ff ,_bcc ,_gd ,_ddg );
};return _ffa ;};func (_accf *PageInformationSegment )Init (h *Header ,r *_de .Reader )(_agd error ){_accf ._cfcb =r ;if _agd =_accf .parseHeader ();_agd !=nil {return _gfe .Wrap (_agd ,"P\u0061\u0067\u0065\u0049\u006e\u0066o\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065g\u006d\u0065\u006et\u002eI\u006e\u0069\u0074","");
};return nil ;};func (_ffaa *Header )readSegmentNumber (_dfdb *_de .Reader )error {const _abe ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";_bffg :=make ([]byte ,4);_ ,_cbbbg :=_dfdb .Read (_bffg );
if _cbbbg !=nil {return _gfe .Wrap (_cbbbg ,_abe ,"");};_ffaa .SegmentNumber =_bg .BigEndian .Uint32 (_bffg );return nil ;};func (_ece *PageInformationSegment )encodeFlags (_gfeg _de .BinaryWriter )(_agab error ){const _effba ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _agab =_gfeg .SkipBits (1);_agab !=nil {return _gfe .Wrap (_agab ,_effba ,"\u0072\u0065\u0073e\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074");};var _gffc int ;if _ece .CombinationOperatorOverrideAllowed (){_gffc =1;};if _agab =_gfeg .WriteBit (_gffc );
_agab !=nil {return _gfe .Wrap (_agab ,_effba ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0064\u0065\u006e");};_gffc =0;if _ece ._geaa {_gffc =1;
};if _agab =_gfeg .WriteBit (_gffc );_agab !=nil {return _gfe .Wrap (_agab ,_effba ,"\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0061\u0075\u0078i\u006ci\u0061r\u0079\u0020\u0062\u0075\u0066\u0066\u0065r");};if _agab =_gfeg .WriteBit ((int (_ece ._cdcb )>>1)&0x01);
_agab !=nil {return _gfe .Wrap (_agab ,_effba ,"\u0063\u006f\u006d\u0062\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006f\u0070\u0065\u0072\u0061\u0074o\u0072\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0062\u0069\u0074");};if _agab =_gfeg .WriteBit (int (_ece ._cdcb )&0x01);
_agab !=nil {return _gfe .Wrap (_agab ,_effba ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0062\u0069\u0074");};_gffc =int (_ece .DefaultPixelValue );
if _agab =_gfeg .WriteBit (_gffc );_agab !=nil {return _gfe .Wrap (_agab ,_effba ,"\u0064e\u0066\u0061\u0075\u006c\u0074\u0020\u0070\u0061\u0067\u0065\u0020p\u0069\u0078\u0065\u006c\u0020\u0076\u0061\u006c\u0075\u0065");};_gffc =0;if _ece ._bbc {_gffc =1;
};if _agab =_gfeg .WriteBit (_gffc );_agab !=nil {return _gfe .Wrap (_agab ,_effba ,"\u0063\u006f\u006e\u0074ai\u006e\u0073\u0020\u0072\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074");};_gffc =0;if _ece .IsLossless {_gffc =1;};if _agab =_gfeg .WriteBit (_gffc );
_agab !=nil {return _gfe .Wrap (_agab ,_effba ,"p\u0061\u0067\u0065\u0020\u0069\u0073 \u0065\u0076\u0065\u006e\u0074\u0075\u0061\u006c\u006cy\u0020\u006c\u006fs\u0073l\u0065\u0073\u0073");};return nil ;};type template0 struct{};func (_ceb *SymbolDictionary )decodeDifferenceWidth ()(int64 ,error ){if _ceb .IsHuffmanEncoded {switch _ceb .SdHuffDecodeWidthSelection {case 0:_ggca ,_eecd :=_bc .GetStandardTable (2);
if _eecd !=nil {return 0,_eecd ;};return _ggca .Decode (_ceb ._acdf );case 1:_bbfb ,_gabaf :=_bc .GetStandardTable (3);if _gabaf !=nil {return 0,_gabaf ;};return _bbfb .Decode (_ceb ._acdf );case 3:if _ceb ._ffc ==nil {var _cegc int ;if _ceb .SdHuffDecodeHeightSelection ==3{_cegc ++;
};_agcc ,_dfgfb :=_ceb .getUserTable (_cegc );if _dfgfb !=nil {return 0,_dfgfb ;};_ceb ._ffc =_agcc ;};return _ceb ._ffc .Decode (_ceb ._acdf );};}else {_gaec ,_eage :=_ceb ._ddea .DecodeInt (_ceb ._gcae );if _eage !=nil {return 0,_eage ;};return int64 (_gaec ),nil ;
};return 0,nil ;};func (_effde *Header )String ()string {_bcde :=&_a .Builder {};_bcde .WriteString ("\u000a[\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045A\u0044\u0045\u0052\u005d\u000a");_bcde .WriteString (_aa .Sprintf ("\t\u002d\u0020\u0053\u0065gm\u0065n\u0074\u004e\u0075\u006d\u0062e\u0072\u003a\u0020\u0025\u0076\u000a",_effde .SegmentNumber ));
_bcde .WriteString (_aa .Sprintf ("\u0009\u002d\u0020T\u0079\u0070\u0065\u003a\u0020\u0025\u0076\u000a",_effde .Type ));_bcde .WriteString (_aa .Sprintf ("\u0009-\u0020R\u0065\u0074\u0061\u0069\u006eF\u006c\u0061g\u003a\u0020\u0025\u0076\u000a",_effde .RetainFlag ));
_bcde .WriteString (_aa .Sprintf ("\u0009\u002d\u0020Pa\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_effde .PageAssociation ));_bcde .WriteString (_aa .Sprintf ("\u0009\u002d\u0020\u0050\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074i\u006fn\u0046\u0069\u0065\u006c\u0064\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_effde .PageAssociationFieldSize ));
_bcde .WriteString ("\u0009-\u0020R\u0054\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u0053\u003a\u000a");for _ ,_cbgb :=range _effde .RTSNumbers {_bcde .WriteString (_aa .Sprintf ("\u0009\t\u002d\u0020\u0025\u0064\u000a",_cbgb ));};_bcde .WriteString (_aa .Sprintf ("\t\u002d \u0048\u0065\u0061\u0064\u0065\u0072\u004c\u0065n\u0067\u0074\u0068\u003a %\u0076\u000a",_effde .HeaderLength ));
_bcde .WriteString (_aa .Sprintf ("\u0009-\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061L\u0065n\u0067\u0074\u0068\u003a\u0020\u0025\u0076\n",_effde .SegmentDataLength ));_bcde .WriteString (_aa .Sprintf ("\u0009\u002d\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074D\u0061\u0074\u0061\u0053\u0074\u0061\u0072t\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0076\u000a",_effde .SegmentDataStartOffset ));
return _bcde .String ();};func (_afc *Header )readSegmentDataLength (_deac *_de .Reader )(_bgga error ){_afc .SegmentDataLength ,_bgga =_deac .ReadBits (32);if _bgga !=nil {return _bgga ;};_afc .SegmentDataLength &=_g .MaxInt32 ;return nil ;};func (_fffg *GenericRegion )computeSegmentDataStructure ()error {_fffg .DataOffset =_fffg ._cac .AbsolutePosition ();
_fffg .DataHeaderLength =_fffg .DataOffset -_fffg .DataHeaderOffset ;_fffg .DataLength =int64 (_fffg ._cac .AbsoluteLength ())-_fffg .DataHeaderLength ;return nil ;};func (_efae *GenericRegion )GetRegionInfo ()*RegionSegment {return _efae .RegionSegment };
func (_eeaa *PageInformationSegment )checkInput ()error {if _eeaa .PageBMHeight ==_g .MaxInt32 {if !_eeaa .IsStripe {_fc .Log .Debug ("P\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0053\u0065\u0067me\u006e\u0074\u002e\u0049s\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0073\u0068ou\u006c\u0064 \u0062\u0065\u0020\u0074\u0072\u0075\u0065\u002e");
};};return nil ;};func (_bbgbd *SymbolDictionary )setCodingStatistics ()error {if _bbgbd ._aadd ==nil {_bbgbd ._aadd =_ad .NewStats (512,1);};if _bbgbd ._begg ==nil {_bbgbd ._begg =_ad .NewStats (512,1);};if _bbgbd ._gcae ==nil {_bbgbd ._gcae =_ad .NewStats (512,1);
};if _bbgbd ._fag ==nil {_bbgbd ._fag =_ad .NewStats (512,1);};if _bbgbd ._dacbe ==nil {_bbgbd ._dacbe =_ad .NewStats (512,1);};if _bbgbd .UseRefinementAggregation &&_bbgbd ._adfd ==nil {_bbgbd ._adfd =_ad .NewStats (1<<uint (_bbgbd ._efbeb ),1);_bbgbd ._gdgc =_ad .NewStats (512,1);
_bbgbd ._dfbg =_ad .NewStats (512,1);};if _bbgbd ._bgdf ==nil {_bbgbd ._bgdf =_ad .NewStats (65536,1);};if _bbgbd ._ddea ==nil {var _ceag error ;_bbgbd ._ddea ,_ceag =_ad .New (_bbgbd ._acdf );if _ceag !=nil {return _ceag ;};};return nil ;};func (_cge *template1 )setIndex (_effg *_ad .DecoderStats ){_effg .SetIndex (0x080)};
func (_agbg *TextRegion )createRegionBitmap ()error {_agbg .RegionBitmap =_bgg .New (int (_agbg .RegionInfo .BitmapWidth ),int (_agbg .RegionInfo .BitmapHeight ));if _agbg .DefaultPixel !=0{_agbg .RegionBitmap .SetDefaultPixel ();};return nil ;};func (_cbdg *SymbolDictionary )getSbSymCodeLen ()int8 {_fafd :=int8 (_g .Ceil (_g .Log (float64 (_cbdg ._gagg +_cbdg .NumberOfNewSymbols ))/_g .Log (2)));
if _cbdg .IsHuffmanEncoded &&_fafd < 1{return 1;};return _fafd ;};func (_deb *Header )writeSegmentNumber (_fbb _de .BinaryWriter )(_cdaef int ,_gbed error ){_efabb :=make ([]byte ,4);_bg .BigEndian .PutUint32 (_efabb ,_deb .SegmentNumber );if _cdaef ,_gbed =_fbb .Write (_efabb );
_gbed !=nil {return 0,_gfe .Wrap (_gbed ,"\u0048e\u0061\u0064\u0065\u0072.\u0077\u0072\u0069\u0074\u0065S\u0065g\u006de\u006e\u0074\u004e\u0075\u006d\u0062\u0065r","");};return _cdaef ,nil ;};func (_aff *TextRegion )decodeCurrentT ()(int64 ,error ){if _aff .SbStrips !=1{if _aff .IsHuffmanEncoded {_aaeg ,_eeea :=_aff ._geff .ReadBits (byte (_aff .LogSBStrips ));
return int64 (_aaeg ),_eeea ;};_geaf ,_eagg :=_aff ._ddge .DecodeInt (_aff ._ggbff );if _eagg !=nil {return 0,_eagg ;};return int64 (_geaf ),nil ;};return 0,nil ;};func (_fabd *SymbolDictionary )decodeHeightClassBitmap (_fcfff *_bgg .Bitmap ,_dafa int64 ,_egec int ,_ddde []int )error {for _degd :=_dafa ;
_degd < int64 (_fabd ._dce );_degd ++{var _acea int ;for _fbda :=_dafa ;_fbda <=_degd -1;_fbda ++{_acea +=_ddde [_fbda ];};_efc :=_b .Rect (_acea ,0,_acea +_ddde [_degd ],_egec );_ddeg ,_dgbd :=_bgg .Extract (_efc ,_fcfff );if _dgbd !=nil {return _dgbd ;
};_fabd ._badc [_degd ]=_ddeg ;_fabd ._agfff =append (_fabd ._agfff ,_ddeg );};return nil ;};func (_acc *GenericRegion )parseHeader ()(_ced error ){_fc .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052I\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0050\u0061\u0072s\u0069\u006e\u0067\u0048\u0065\u0061\u0064e\u0072\u002e\u002e\u002e");
defer func (){if _ced !=nil {_fc .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e]\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065r\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0077\u0069th\u0020\u0065\u0072\u0072\u006f\u0072\u002e\u0020\u0025\u0076",_ced );
}else {_fc .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049C\u002d\u0052\u0045G\u0049\u004f\u004e]\u0020\u0050a\u0072\u0073\u0069\u006e\u0067\u0048e\u0061de\u0072\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0053\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079\u002e\u002e\u002e");
};}();var (_cddd int ;_fgcd uint64 ;);if _ced =_acc .RegionSegment .parseHeader ();_ced !=nil {return _ced ;};if _ ,_ced =_acc ._cac .ReadBits (3);_ced !=nil {return _ced ;};_cddd ,_ced =_acc ._cac .ReadBit ();if _ced !=nil {return _ced ;};if _cddd ==1{_acc .UseExtTemplates =true ;
};_cddd ,_ced =_acc ._cac .ReadBit ();if _ced !=nil {return _ced ;};if _cddd ==1{_acc .IsTPGDon =true ;};_fgcd ,_ced =_acc ._cac .ReadBits (2);if _ced !=nil {return _ced ;};_acc .GBTemplate =byte (_fgcd &0xf);_cddd ,_ced =_acc ._cac .ReadBit ();if _ced !=nil {return _ced ;
};if _cddd ==1{_acc .IsMMREncoded =true ;};if !_acc .IsMMREncoded {_aaaa :=1;if _acc .GBTemplate ==0{_aaaa =4;if _acc .UseExtTemplates {_aaaa =12;};};if _ced =_acc .readGBAtPixels (_aaaa );_ced !=nil {return _ced ;};};if _ced =_acc .computeSegmentDataStructure ();
_ced !=nil {return _ced ;};_fc .Log .Trace ("\u0025\u0073",_acc );return nil ;};func _fdbge (_cgga *_de .Reader ,_ggde *Header )*TextRegion {_eabbf :=&TextRegion {_geff :_cgga ,Header :_ggde ,RegionInfo :NewRegionSegment (_cgga )};return _eabbf ;};type template1 struct{};
func (_befag *TextRegion )readUseRefinement ()error {if !_befag .UseRefinement ||_befag .SbrTemplate !=0{return nil ;};var (_gefad byte ;_fffb error ;);_befag .SbrATX =make ([]int8 ,2);_befag .SbrATY =make ([]int8 ,2);_gefad ,_fffb =_befag ._geff .ReadByte ();
if _fffb !=nil {return _fffb ;};_befag .SbrATX [0]=int8 (_gefad );_gefad ,_fffb =_befag ._geff .ReadByte ();if _fffb !=nil {return _fffb ;};_befag .SbrATY [0]=int8 (_gefad );_gefad ,_fffb =_befag ._geff .ReadByte ();if _fffb !=nil {return _fffb ;};_befag .SbrATX [1]=int8 (_gefad );
_gefad ,_fffb =_befag ._geff .ReadByte ();if _fffb !=nil {return _fffb ;};_befag .SbrATY [1]=int8 (_gefad );return nil ;};func (_gae *GenericRefinementRegion )getGrReference ()(*_bgg .Bitmap ,error ){segments :=_gae ._aea .RTSegments ;if len (segments )==0{return nil ,_gg .New ("\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0065\u0078is\u0074\u0073");
};_fa ,_fg :=segments [0].GetSegmentData ();if _fg !=nil {return nil ,_fg ;};_eed ,_cg :=_fa .(Regioner );if !_cg {return nil ,_aa .Errorf ("\u0072\u0065\u0066\u0065\u0072r\u0065\u0064\u0020\u0074\u006f\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_fa );
};return _eed .GetRegionBitmap ();};func (_cdgg *GenericRegion )decodeTemplate3 (_gccf ,_gdgba ,_def int ,_eaaa ,_fece int )(_fbeg error ){const _fgec ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0033";var (_gbfe ,_cccc int ;
_fggc int ;_bcd byte ;_feddc ,_bac int ;);if _gccf >=1{_bcd ,_fbeg =_cdgg .Bitmap .GetByte (_fece );if _fbeg !=nil {return _gfe .Wrap (_fbeg ,_fgec ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_fggc =int (_bcd );};_gbfe =(_fggc >>1)&0x70;for _gcdb :=0;
_gcdb < _def ;_gcdb =_feddc {var (_eedc byte ;_cdfc int ;);_feddc =_gcdb +8;if _gdfb :=_gdgba -_gcdb ;_gdfb > 8{_cdfc =8;}else {_cdfc =_gdfb ;};if _gccf >=1{_fggc <<=8;if _feddc < _gdgba {_bcd ,_fbeg =_cdgg .Bitmap .GetByte (_fece +1);if _fbeg !=nil {return _gfe .Wrap (_fbeg ,_fgec ,"\u0069\u006e\u006e\u0065\u0072\u0020\u002d\u0020\u006c\u0069\u006e\u0065 \u003e\u003d\u0020\u0031");
};_fggc |=int (_bcd );};};for _ggfdf :=0;_ggfdf < _cdfc ;_ggfdf ++{if _cdgg ._cgff {_cccc =_cdgg .overrideAtTemplate3 (_gbfe ,_gcdb +_ggfdf ,_gccf ,int (_eedc ),_ggfdf );_cdgg ._dfa .SetIndex (int32 (_cccc ));}else {_cdgg ._dfa .SetIndex (int32 (_gbfe ));
};_bac ,_fbeg =_cdgg ._dfef .DecodeBit (_cdgg ._dfa );if _fbeg !=nil {return _gfe .Wrap (_fbeg ,_fgec ,"");};_eedc |=byte (_bac )<<byte (7-_ggfdf );_gbfe =((_gbfe &0x1f7)<<1)|_bac |((_fggc >>uint (8-_ggfdf ))&0x010);};if _cbad :=_cdgg .Bitmap .SetByte (_eaaa ,_eedc );
_cbad !=nil {return _gfe .Wrap (_cbad ,_fgec ,"");};_eaaa ++;_fece ++;};return nil ;};func (_bgbcee *SymbolDictionary )String ()string {_eddf :=&_a .Builder {};_eddf .WriteString ("\n\u005b\u0053\u0059\u004dBO\u004c-\u0044\u0049\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u000a");
_eddf .WriteString (_aa .Sprintf ("\u0009-\u0020S\u0064\u0072\u0054\u0065\u006dp\u006c\u0061t\u0065\u0020\u0025\u0076\u000a",_bgbcee .SdrTemplate ));_eddf .WriteString (_aa .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0025\u0076\u000a",_bgbcee .SdTemplate ));
_eddf .WriteString (_aa .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006eg\u0043\u006f\u006e\u0074\u0065\u0078\u0074R\u0065\u0074\u0061\u0069\u006e\u0065\u0064\u0020\u0025\u0076\u000a",_bgbcee ._bbgbg ));_eddf .WriteString (_aa .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074\u0065\u0078\u0074\u0055\u0073\u0065\u0064 \u0025\u0076\u000a",_bgbcee ._dfgd ));
_eddf .WriteString (_aa .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_bgbcee .SdHuffAggInstanceSelection ));
_eddf .WriteString (_aa .Sprintf ("\u0009\u002d\u0020\u0053d\u0048\u0075\u0066\u0066\u0042\u004d\u0053\u0069\u007a\u0065S\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020%\u0076\u000a",_bgbcee .SdHuffBMSizeSelection ));_eddf .WriteString (_aa .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_bgbcee .SdHuffDecodeWidthSelection ));
_eddf .WriteString (_aa .Sprintf ("\u0009\u002d\u0020Sd\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064e\u0048e\u0069g\u0068t\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_bgbcee .SdHuffDecodeHeightSelection ));_eddf .WriteString (_aa .Sprintf ("\u0009\u002d\u0020U\u0073\u0065\u0052\u0065f\u0069\u006e\u0065\u006d\u0065\u006e\u0074A\u0067\u0067\u0072\u0065\u0067\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_bgbcee .UseRefinementAggregation ));
_eddf .WriteString (_aa .Sprintf ("\u0009\u002d\u0020is\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045\u006e\u0063\u006f\u0064\u0065\u0064\u0020\u0025\u0076\u000a",_bgbcee .IsHuffmanEncoded ));_eddf .WriteString (_aa .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_bgbcee .SdATX ));
_eddf .WriteString (_aa .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_bgbcee .SdATY ));_eddf .WriteString (_aa .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_bgbcee .SdrATX ));
_eddf .WriteString (_aa .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_bgbcee .SdrATY ));_eddf .WriteString (_aa .Sprintf ("\u0009\u002d\u0020\u004e\u0075\u006d\u0062\u0065\u0072\u004ff\u0045\u0078\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_bgbcee .NumberOfExportedSymbols ));
_eddf .WriteString (_aa .Sprintf ("\u0009-\u0020\u004e\u0075\u006db\u0065\u0072\u004f\u0066\u004ee\u0077S\u0079m\u0062\u006f\u006c\u0073\u0020\u0025\u0076\n",_bgbcee .NumberOfNewSymbols ));_eddf .WriteString (_aa .Sprintf ("\u0009\u002d\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u004ff\u0049\u006d\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_bgbcee ._gagg ));
_eddf .WriteString (_aa .Sprintf ("\u0009\u002d \u006e\u0075\u006d\u0062\u0065\u0072\u004f\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0064\u0053\u0079\u006d\u0062\u006f\u006c\u0073 %\u0076\u000a",_bgbcee ._dce ));return _eddf .String ();};var _ _bc .BasicTabler =&TableSegment {};
func (_cdc *Header )GetSegmentData ()(Segmenter ,error ){var _adgag Segmenter ;if _cdc .SegmentData !=nil {_adgag =_cdc .SegmentData ;};if _adgag ==nil {_degb ,_eeeb :=_dacce [_cdc .Type ];if !_eeeb {return nil ,_aa .Errorf ("\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0073\u002f\u0020\u0025\u0064\u0020\u0063\u0072e\u0061t\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e\u0020",_cdc .Type ,_cdc .Type );
};_adgag =_degb ();_fc .Log .Trace ("\u005b\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u0020\u0061\u0074\u0020\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0030\u0034\u0058",_cdc .SegmentNumber ,_cdc .SegmentDataStartOffset );
_fdef ,_ceae :=_cdc .subInputReader ();if _ceae !=nil {return nil ,_ceae ;};if _gdccg :=_adgag .Init (_cdc ,_fdef );_gdccg !=nil {_fc .Log .Debug ("\u0049\u006e\u0069\u0074 \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076 \u0066o\u0072\u0020\u0074\u0079\u0070\u0065\u003a \u0025\u0054",_gdccg ,_adgag );
return nil ,_gdccg ;};_cdc .SegmentData =_adgag ;};return _adgag ,nil ;};func (_cae *SymbolDictionary )decodeHeightClassCollectiveBitmap (_bfa int64 ,_dggc ,_dgdc uint32 )(*_bgg .Bitmap ,error ){if _bfa ==0{_fffdb :=_bgg .New (int (_dgdc ),int (_dggc ));
var (_ffgeg byte ;_ccfg error ;);for _cagf :=0;_cagf < len (_fffdb .Data );_cagf ++{_ffgeg ,_ccfg =_cae ._acdf .ReadByte ();if _ccfg !=nil {return nil ,_ccfg ;};if _ccfg =_fffdb .SetByte (_cagf ,_ffgeg );_ccfg !=nil {return nil ,_ccfg ;};};return _fffdb ,nil ;
};if _cae ._cdega ==nil {_cae ._cdega =NewGenericRegion (_cae ._acdf );};_cae ._cdega .setParameters (true ,_cae ._acdf .AbsolutePosition (),_bfa ,_dggc ,_dgdc );_effbd ,_bfbf :=_cae ._cdega .GetRegionBitmap ();if _bfbf !=nil {return nil ,_bfbf ;};return _effbd ,nil ;
};func (_ebf *GenericRegion )getPixel (_feddf ,_ggce int )int8 {if _feddf < 0||_feddf >=_ebf .Bitmap .Width {return 0;};if _ggce < 0||_ggce >=_ebf .Bitmap .Height {return 0;};if _ebf .Bitmap .GetPixel (_feddf ,_ggce ){return 1;};return 0;};func (_gbef *SymbolDictionary )Encode (w _de .BinaryWriter )(_fefc int ,_fdca error ){const _dga ="\u0053\u0079\u006dbo\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0045\u006e\u0063\u006f\u0064\u0065";
if _gbef ==nil {return 0,_gfe .Error (_dga ,"\u0073\u0079m\u0062\u006f\u006c\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066in\u0065\u0064");};if _fefc ,_fdca =_gbef .encodeFlags (w );_fdca !=nil {return _fefc ,_gfe .Wrap (_fdca ,_dga ,"");
};_bgcg ,_fdca :=_gbef .encodeATFlags (w );if _fdca !=nil {return _fefc ,_gfe .Wrap (_fdca ,_dga ,"");};_fefc +=_bgcg ;if _bgcg ,_fdca =_gbef .encodeRefinementATFlags (w );_fdca !=nil {return _fefc ,_gfe .Wrap (_fdca ,_dga ,"");};_fefc +=_bgcg ;if _bgcg ,_fdca =_gbef .encodeNumSyms (w );
_fdca !=nil {return _fefc ,_gfe .Wrap (_fdca ,_dga ,"");};_fefc +=_bgcg ;if _bgcg ,_fdca =_gbef .encodeSymbols (w );_fdca !=nil {return _fefc ,_gfe .Wrap (_fdca ,_dga ,"");};_fefc +=_bgcg ;return _fefc ,nil ;};func (_fced *GenericRegion )decodeTemplate0a (_edb ,_gbb ,_aeb int ,_aeg ,_ggfd int )(_eede error ){const _cdae ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0061";
var (_fgg ,_cggc int ;_bdg ,_cab int ;_bgge byte ;_ggbf int ;);if _edb >=1{_bgge ,_eede =_fced .Bitmap .GetByte (_ggfd );if _eede !=nil {return _gfe .Wrap (_eede ,_cdae ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_bdg =int (_bgge );};if _edb >=2{_bgge ,_eede =_fced .Bitmap .GetByte (_ggfd -_fced .Bitmap .RowStride );
if _eede !=nil {return _gfe .Wrap (_eede ,_cdae ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_cab =int (_bgge )<<6;};_fgg =(_bdg &0xf0)|(_cab &0x3800);for _edbe :=0;_edbe < _aeb ;_edbe =_ggbf {var (_bbg byte ;_cde int ;);_ggbf =_edbe +8;if _ggcfc :=_gbb -_edbe ;
_ggcfc > 8{_cde =8;}else {_cde =_ggcfc ;};if _edb > 0{_bdg <<=8;if _ggbf < _gbb {_bgge ,_eede =_fced .Bitmap .GetByte (_ggfd +1);if _eede !=nil {return _gfe .Wrap (_eede ,_cdae ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_bdg |=int (_bgge );
};};if _edb > 1{_bae :=_ggfd -_fced .Bitmap .RowStride +1;_cab <<=8;if _ggbf < _gbb {_bgge ,_eede =_fced .Bitmap .GetByte (_bae );if _eede !=nil {return _gfe .Wrap (_eede ,_cdae ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_cab |=int (_bgge )<<6;
}else {_cab |=0;};};for _efbe :=0;_efbe < _cde ;_efbe ++{_cdac :=uint (7-_efbe );if _fced ._cgff {_cggc =_fced .overrideAtTemplate0a (_fgg ,_edbe +_efbe ,_edb ,int (_bbg ),_efbe ,int (_cdac ));_fced ._dfa .SetIndex (int32 (_cggc ));}else {_fced ._dfa .SetIndex (int32 (_fgg ));
};var _ffde int ;_ffde ,_eede =_fced ._dfef .DecodeBit (_fced ._dfa );if _eede !=nil {return _gfe .Wrap (_eede ,_cdae ,"");};_bbg |=byte (_ffde )<<_cdac ;_fgg =((_fgg &0x7bf7)<<1)|_ffde |((_bdg >>_cdac )&0x10)|((_cab >>_cdac )&0x800);};if _acde :=_fced .Bitmap .SetByte (_aeg ,_bbg );
_acde !=nil {return _gfe .Wrap (_acde ,_cdae ,"");};_aeg ++;_ggfd ++;};return nil ;};func (_edee *PageInformationSegment )readResolution ()error {_afcf ,_ddfb :=_edee ._cfcb .ReadBits (32);if _ddfb !=nil {return _ddfb ;};_edee .ResolutionX =int (_afcf &_g .MaxInt32 );
_afcf ,_ddfb =_edee ._cfcb .ReadBits (32);if _ddfb !=nil {return _ddfb ;};_edee .ResolutionY =int (_afcf &_g .MaxInt32 );return nil ;};func (_abce *SymbolDictionary )setRetainedCodingContexts (_faaf *SymbolDictionary ){_abce ._ddea =_faaf ._ddea ;_abce .IsHuffmanEncoded =_faaf .IsHuffmanEncoded ;
_abce .UseRefinementAggregation =_faaf .UseRefinementAggregation ;_abce .SdTemplate =_faaf .SdTemplate ;_abce .SdrTemplate =_faaf .SdrTemplate ;_abce .SdATX =_faaf .SdATX ;_abce .SdATY =_faaf .SdATY ;_abce .SdrATX =_faaf .SdrATX ;_abce .SdrATY =_faaf .SdrATY ;
_abce ._bgdf =_faaf ._bgdf ;};func (_dcabeb *TextRegion )blit (_dbad *_bgg .Bitmap ,_aacc int64 )error {if _dcabeb .IsTransposed ==0&&(_dcabeb .ReferenceCorner ==2||_dcabeb .ReferenceCorner ==3){_dcabeb ._fbgfb +=int64 (_dbad .Width -1);}else if _dcabeb .IsTransposed ==1&&(_dcabeb .ReferenceCorner ==0||_dcabeb .ReferenceCorner ==2){_dcabeb ._fbgfb +=int64 (_dbad .Height -1);
};_fbabd :=_dcabeb ._fbgfb ;if _dcabeb .IsTransposed ==1{_fbabd ,_aacc =_aacc ,_fbabd ;};switch _dcabeb .ReferenceCorner {case 0:_aacc -=int64 (_dbad .Height -1);case 2:_aacc -=int64 (_dbad .Height -1);_fbabd -=int64 (_dbad .Width -1);case 3:_fbabd -=int64 (_dbad .Width -1);
};_dgbge :=_bgg .Blit (_dbad ,_dcabeb .RegionBitmap ,int (_fbabd ),int (_aacc ),_dcabeb .CombinationOperator );if _dgbge !=nil {return _dgbge ;};if _dcabeb .IsTransposed ==0&&(_dcabeb .ReferenceCorner ==0||_dcabeb .ReferenceCorner ==1){_dcabeb ._fbgfb +=int64 (_dbad .Width -1);
};if _dcabeb .IsTransposed ==1&&(_dcabeb .ReferenceCorner ==1||_dcabeb .ReferenceCorner ==3){_dcabeb ._fbgfb +=int64 (_dbad .Height -1);};return nil ;};func (_dacc *Header )readDataStartOffset (_aba *_de .Reader ,_afaa OrganizationType ){if _afaa ==OSequential {_dacc .SegmentDataStartOffset =uint64 (_aba .AbsolutePosition ());
};};func (_deeg *SymbolDictionary )decodeHeightClassDeltaHeight ()(int64 ,error ){if _deeg .IsHuffmanEncoded {return _deeg .decodeHeightClassDeltaHeightWithHuffman ();};_dfcc ,_dfdd :=_deeg ._ddea .DecodeInt (_deeg ._begg );if _dfdd !=nil {return 0,_dfdd ;
};return int64 (_dfcc ),nil ;};func (_egg *template1 )form (_cgfc ,_cbbb ,_cbg ,_gfec ,_dcg int16 )int16 {return ((_cgfc &0x02)<<8)|(_cbbb <<6)|((_cbg &0x03)<<4)|(_gfec <<1)|_dcg ;};func (_ecgf *SymbolDictionary )parseHeader ()(_agee error ){_fc .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _agee !=nil {_fc .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u0020\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u005b\u0050\u0041\u0052SE\u002d\u0048\u0045A\u0044\u0045R\u005d\u0020\u0066\u0061\u0069\u006ce\u0064\u002e \u0025\u0076",_agee );
}else {_fc .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _agee =_ecgf .readRegionFlags ();_agee !=nil {return _agee ;};if _agee =_ecgf .setAtPixels ();_agee !=nil {return _agee ;};if _agee =_ecgf .setRefinementAtPixels ();_agee !=nil {return _agee ;};if _agee =_ecgf .readNumberOfExportedSymbols ();_agee !=nil {return _agee ;
};if _agee =_ecgf .readNumberOfNewSymbols ();_agee !=nil {return _agee ;};if _agee =_ecgf .setInSyms ();_agee !=nil {return _agee ;};if _ecgf ._dfgd {_cfaf :=_ecgf .Header .RTSegments ;for _dgcc :=len (_cfaf )-1;_dgcc >=0;_dgcc --{if _cfaf [_dgcc ].Type ==0{_bfbd ,_gbade :=_cfaf [_dgcc ].SegmentData .(*SymbolDictionary );
if !_gbade {_agee =_aa .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074:\u0020\u0025\u0076\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020S\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_cfaf [_dgcc ]);
return _agee ;};if _bfbd ._dfgd {_ecgf .setRetainedCodingContexts (_bfbd );};break ;};};};if _agee =_ecgf .checkInput ();_agee !=nil {return _agee ;};return nil ;};func (_eecc *TableSegment )HtPS ()int32 {return _eecc ._cdce };func (_bbded *TextRegion )decodeSymbolInstances ()error {_cggd ,_deefg :=_bbded .decodeStripT ();
if _deefg !=nil {return _deefg ;};var (_addb int64 ;_eceb uint32 ;);for _eceb < _bbded .NumberOfSymbolInstances {_acgf ,_bcfd :=_bbded .decodeDT ();if _bcfd !=nil {return _bcfd ;};_cggd +=_acgf ;var _aaaf int64 ;_degg :=true ;_bbded ._fbgfb =0;for {if _degg {_aaaf ,_bcfd =_bbded .decodeDfs ();
if _bcfd !=nil {return _bcfd ;};_addb +=_aaaf ;_bbded ._fbgfb =_addb ;_degg =false ;}else {_abbg ,_gebc :=_bbded .decodeIds ();if _bd .Is (_gebc ,_gf .ErrOOB ){break ;};if _gebc !=nil {return _gebc ;};if _eceb >=_bbded .NumberOfSymbolInstances {break ;
};_bbded ._fbgfb +=_abbg +int64 (_bbded .SbDsOffset );};_efgdg ,_bbda :=_bbded .decodeCurrentT ();if _bbda !=nil {return _bbda ;};_cfe :=_cggd +_efgdg ;_ggfc ,_bbda :=_bbded .decodeID ();if _bbda !=nil {return _bbda ;};_dgbb ,_bbda :=_bbded .decodeRI ();
if _bbda !=nil {return _bbda ;};_deff ,_bbda :=_bbded .decodeIb (_dgbb ,_ggfc );if _bbda !=nil {return _bbda ;};if _bbda =_bbded .blit (_deff ,_cfe );_bbda !=nil {return _bbda ;};_eceb ++;};};return nil ;};func (_cbe *Header )parse (_bcga Documenter ,_dfdg *_de .Reader ,_agbf int64 ,_dcbb OrganizationType )(_gcgc error ){const _bcbf ="\u0070\u0061\u0072s\u0065";
_fc .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u005b\u0050A\u0052\u0053\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _gcgc !=nil {_fc .Log .Trace ("\u005b\u0053\u0045GM\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045R\u005d[\u0050A\u0052S\u0045\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_gcgc );
}else {_fc .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052]\u005bP\u0041\u0052\u0053\u0045\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");};}();_ ,_gcgc =_dfdg .Seek (_agbf ,_d .SeekStart );
if _gcgc !=nil {return _gfe .Wrap (_gcgc ,_bcbf ,"\u0073\u0065\u0065\u006b\u0020\u0073\u0074\u0061\u0072\u0074");};if _gcgc =_cbe .readSegmentNumber (_dfdg );_gcgc !=nil {return _gfe .Wrap (_gcgc ,_bcbf ,"");};if _gcgc =_cbe .readHeaderFlags ();_gcgc !=nil {return _gfe .Wrap (_gcgc ,_bcbf ,"");
};var _cbdf uint64 ;_cbdf ,_gcgc =_cbe .readNumberOfReferredToSegments (_dfdg );if _gcgc !=nil {return _gfe .Wrap (_gcgc ,_bcbf ,"");};_cbe .RTSNumbers ,_gcgc =_cbe .readReferredToSegmentNumbers (_dfdg ,int (_cbdf ));if _gcgc !=nil {return _gfe .Wrap (_gcgc ,_bcbf ,"");
};_gcgc =_cbe .readSegmentPageAssociation (_bcga ,_dfdg ,_cbdf ,_cbe .RTSNumbers ...);if _gcgc !=nil {return _gfe .Wrap (_gcgc ,_bcbf ,"");};if _cbe .Type !=TEndOfFile {if _gcgc =_cbe .readSegmentDataLength (_dfdg );_gcgc !=nil {return _gfe .Wrap (_gcgc ,_bcbf ,"");
};};_cbe .readDataStartOffset (_dfdg ,_dcbb );_cbe .readHeaderLength (_dfdg ,_agbf );_fc .Log .Trace ("\u0025\u0073",_cbe );return nil ;};func (_ddbf *Header )Encode (w _de .BinaryWriter )(_dabef int ,_bbeb error ){const _ggac ="\u0048\u0065\u0061d\u0065\u0072\u002e\u0057\u0072\u0069\u0074\u0065";
var _cadd _de .BinaryWriter ;_fc .Log .Trace ("\u005b\u0053\u0045G\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045\u0052\u005d[\u0045\u004e\u0043\u004f\u0044\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _bbeb !=nil {_fc .Log .Trace ("[\u0053\u0045\u0047\u004d\u0045\u004eT\u002d\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0045\u004e\u0043\u004f\u0044E\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020%\u0076",_bbeb );
}else {_fc .Log .Trace ("\u005b\u0053\u0045\u0047ME\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0025\u0076",_ddbf );_fc .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045N\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u005b\u0045\u004e\u0043O\u0044\u0045\u005d\u0020\u0046\u0069\u006ei\u0073\u0068\u0065\u0064");
};}();w .FinishByte ();if _ddbf .SegmentData !=nil {_gaad ,_dddf :=_ddbf .SegmentData .(SegmentEncoder );if !_dddf {return 0,_gfe .Errorf (_ggac ,"\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0064\u006f\u0065s\u006e\u0027\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074 \u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0045\u006e\u0063\u006f\u0064er\u0020\u0069\u006e\u0074\u0065\u0072\u0066\u0061\u0063\u0065",_ddbf .SegmentData );
};_cadd =_de .BufferedMSB ();_dabef ,_bbeb =_gaad .Encode (_cadd );if _bbeb !=nil {return 0,_gfe .Wrap (_bbeb ,_ggac ,"");};_ddbf .SegmentDataLength =uint64 (_dabef );};if _ddbf .pageSize ()==4{_ddbf .PageAssociationFieldSize =true ;};var _bdda int ;_bdda ,_bbeb =_ddbf .writeSegmentNumber (w );
if _bbeb !=nil {return 0,_gfe .Wrap (_bbeb ,_ggac ,"");};_dabef +=_bdda ;if _bbeb =_ddbf .writeFlags (w );_bbeb !=nil {return _dabef ,_gfe .Wrap (_bbeb ,_ggac ,"");};_dabef ++;_bdda ,_bbeb =_ddbf .writeReferredToCount (w );if _bbeb !=nil {return 0,_gfe .Wrap (_bbeb ,_ggac ,"");
};_dabef +=_bdda ;_bdda ,_bbeb =_ddbf .writeReferredToSegments (w );if _bbeb !=nil {return 0,_gfe .Wrap (_bbeb ,_ggac ,"");};_dabef +=_bdda ;_bdda ,_bbeb =_ddbf .writeSegmentPageAssociation (w );if _bbeb !=nil {return 0,_gfe .Wrap (_bbeb ,_ggac ,"");};
_dabef +=_bdda ;_bdda ,_bbeb =_ddbf .writeSegmentDataLength (w );if _bbeb !=nil {return 0,_gfe .Wrap (_bbeb ,_ggac ,"");};_dabef +=_bdda ;_ddbf .HeaderLength =int64 (_dabef )-int64 (_ddbf .SegmentDataLength );if _cadd !=nil {if _ ,_bbeb =w .Write (_cadd .Data ());
_bbeb !=nil {return _dabef ,_gfe .Wrap (_bbeb ,_ggac ,"\u0077r\u0069t\u0065\u0020\u0073\u0065\u0067m\u0065\u006et\u0020\u0064\u0061\u0074\u0061");};};return _dabef ,nil ;};func (_fggff *TextRegion )encodeSymbols (_fege _de .BinaryWriter )(_cbgbd int ,_afde error ){const _bdcg ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
_gbfb :=make ([]byte ,4);_bg .BigEndian .PutUint32 (_gbfb ,_fggff .NumberOfSymbols );if _cbgbd ,_afde =_fege .Write (_gbfb );_afde !=nil {return _cbgbd ,_gfe .Wrap (_afde ,_bdcg ,"\u004e\u0075\u006dbe\u0072\u004f\u0066\u0053\u0079\u006d\u0062\u006f\u006c\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073");
};_dgaa ,_afde :=_bgg .NewClassedPoints (_fggff ._fcbf ,_fggff ._acge );if _afde !=nil {return 0,_gfe .Wrap (_afde ,_bdcg ,"");};var _bfdee ,_bbdd int ;_fcga :=_fd .New ();_fcga .Init ();if _afde =_fcga .EncodeInteger (_fd .IADT ,0);_afde !=nil {return _cbgbd ,_gfe .Wrap (_afde ,_bdcg ,"\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0020\u0044\u0054");
};_dbab ,_afde :=_dgaa .GroupByY ();if _afde !=nil {return 0,_gfe .Wrap (_afde ,_bdcg ,"");};for _ ,_eefg :=range _dbab {_baaa :=int (_eefg .YAtIndex (0));_ccbe :=_baaa -_bfdee ;if _afde =_fcga .EncodeInteger (_fd .IADT ,_ccbe );_afde !=nil {return _cbgbd ,_gfe .Wrap (_afde ,_bdcg ,"");
};var _daef int ;for _bcfdg ,_fefa :=range _eefg .IntSlice {switch _bcfdg {case 0:_cfdg :=int (_eefg .XAtIndex (_bcfdg ))-_bbdd ;if _afde =_fcga .EncodeInteger (_fd .IAFS ,_cfdg );_afde !=nil {return _cbgbd ,_gfe .Wrap (_afde ,_bdcg ,"");};_bbdd +=_cfdg ;
_daef =_bbdd ;default:_ecbd :=int (_eefg .XAtIndex (_bcfdg ))-_daef ;if _afde =_fcga .EncodeInteger (_fd .IADS ,_ecbd );_afde !=nil {return _cbgbd ,_gfe .Wrap (_afde ,_bdcg ,"");};_daef +=_ecbd ;};_cedb ,_abbe :=_fggff ._cabc .Get (_fefa );if _abbe !=nil {return _cbgbd ,_gfe .Wrap (_abbe ,_bdcg ,"");
};_abcg ,_adda :=_fggff ._fgab [_cedb ];if !_adda {_abcg ,_adda =_fggff ._gcff [_cedb ];if !_adda {return _cbgbd ,_gfe .Errorf (_bdcg ,"\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027\u0025d\u0027\u0020\u0069s\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064 \u0069\u006e\u0020\u0067\u006cob\u0061\u006c\u0020\u0061\u006e\u0064\u0020\u006c\u006f\u0063\u0061\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020\u006d\u0061\u0070",_cedb );
};};if _abbe =_fcga .EncodeIAID (_fggff ._bacg ,_abcg );_abbe !=nil {return _cbgbd ,_gfe .Wrap (_abbe ,_bdcg ,"");};};if _afde =_fcga .EncodeOOB (_fd .IADS );_afde !=nil {return _cbgbd ,_gfe .Wrap (_afde ,_bdcg ,"");};};_fcga .Final ();_bafc ,_afde :=_fcga .WriteTo (_fege );
if _afde !=nil {return _cbgbd ,_gfe .Wrap (_afde ,_bdcg ,"");};_cbgbd +=int (_bafc );return _cbgbd ,nil ;};func (_gda *HalftoneRegion )renderPattern (_ebbd [][]int )(_ccdg error ){var _bfbc ,_aabb int ;for _gcdag :=0;_gcdag < int (_gda .HGridHeight );_gcdag ++{for _bgfe :=0;
_bgfe < int (_gda .HGridWidth );_bgfe ++{_bfbc =_gda .computeX (_gcdag ,_bgfe );_aabb =_gda .computeY (_gcdag ,_bgfe );_bcgga :=_gda .Patterns [_ebbd [_gcdag ][_bgfe ]];if _ccdg =_bgg .Blit (_bcgga ,_gda .HalftoneRegionBitmap ,_bfbc +int (_gda .HGridX ),_aabb +int (_gda .HGridY ),_gda .CombinationOperator );
_ccdg !=nil {return _ccdg ;};};};return nil ;};func (_dcda *PatternDictionary )GetDictionary ()([]*_bgg .Bitmap ,error ){if _dcda .Patterns !=nil {return _dcda .Patterns ,nil ;};if !_dcda .IsMMREncoded {_dcda .setGbAtPixels ();};_dbf :=NewGenericRegion (_dcda ._gaba );
_dbf .setParametersMMR (_dcda .IsMMREncoded ,_dcda .DataOffset ,_dcda .DataLength ,uint32 (_dcda .HdpHeight ),(_dcda .GrayMax +1)*uint32 (_dcda .HdpWidth ),_dcda .HDTemplate ,false ,false ,_dcda .GBAtX ,_dcda .GBAtY );_gdaa ,_gebb :=_dbf .GetRegionBitmap ();
if _gebb !=nil {return nil ,_gebb ;};if _gebb =_dcda .extractPatterns (_gdaa );_gebb !=nil {return nil ,_gebb ;};return _dcda .Patterns ,nil ;};func (_ffgf *PageInformationSegment )encodeStripingInformation (_cgac _de .BinaryWriter )(_fdfd int ,_abeg error ){const _bgacc ="\u0065n\u0063\u006f\u0064\u0065S\u0074\u0072\u0069\u0070\u0069n\u0067I\u006ef\u006f\u0072\u006d\u0061\u0074\u0069\u006fn";
if !_ffgf .IsStripe {if _fdfd ,_abeg =_cgac .Write ([]byte {0x00,0x00});_abeg !=nil {return 0,_gfe .Wrap (_abeg ,_bgacc ,"n\u006f\u0020\u0073\u0074\u0072\u0069\u0070\u0069\u006e\u0067");};return _fdfd ,nil ;};_aaba :=make ([]byte ,2);_bg .BigEndian .PutUint16 (_aaba ,_ffgf .MaxStripeSize |1<<15);
if _fdfd ,_abeg =_cgac .Write (_aaba );_abeg !=nil {return 0,_gfe .Wrapf (_abeg ,_bgacc ,"\u0073\u0074\u0072i\u0070\u0069\u006e\u0067\u003a\u0020\u0025\u0064",_ffgf .MaxStripeSize );};return _fdfd ,nil ;};func (_gdfe *SymbolDictionary )Init (h *Header ,r *_de .Reader )error {_gdfe .Header =h ;
_gdfe ._acdf =r ;return _gdfe .parseHeader ();};func (_bab *GenericRegion )updateOverrideFlags ()error {const _fadb ="\u0075\u0070\u0064\u0061te\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _bab .GBAtX ==nil ||_bab .GBAtY ==nil {return nil ;
};if len (_bab .GBAtX )!=len (_bab .GBAtY ){return _gfe .Errorf (_fadb ,"i\u006eco\u0073i\u0073t\u0065\u006e\u0074\u0020\u0041T\u0020\u0070\u0069x\u0065\u006c\u002e\u0020\u0041m\u006f\u0075\u006et\u0020\u006f\u0066\u0020\u0027\u0078\u0027\u0020\u0070\u0069\u0078e\u006c\u0073\u003a %d\u002c\u0020\u0041\u006d\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0027\u0079\u0027\u0020\u0070\u0069\u0078e\u006cs\u003a\u0020\u0025\u0064",len (_bab .GBAtX ),len (_bab .GBAtY ));
};_bab .GBAtOverride =make ([]bool ,len (_bab .GBAtX ));switch _bab .GBTemplate {case 0:if !_bab .UseExtTemplates {if _bab .GBAtX [0]!=3||_bab .GBAtY [0]!=-1{_bab .setOverrideFlag (0);};if _bab .GBAtX [1]!=-3||_bab .GBAtY [1]!=-1{_bab .setOverrideFlag (1);
};if _bab .GBAtX [2]!=2||_bab .GBAtY [2]!=-2{_bab .setOverrideFlag (2);};if _bab .GBAtX [3]!=-2||_bab .GBAtY [3]!=-2{_bab .setOverrideFlag (3);};}else {if _bab .GBAtX [0]!=-2||_bab .GBAtY [0]!=0{_bab .setOverrideFlag (0);};if _bab .GBAtX [1]!=0||_bab .GBAtY [1]!=-2{_bab .setOverrideFlag (1);
};if _bab .GBAtX [2]!=-2||_bab .GBAtY [2]!=-1{_bab .setOverrideFlag (2);};if _bab .GBAtX [3]!=-1||_bab .GBAtY [3]!=-2{_bab .setOverrideFlag (3);};if _bab .GBAtX [4]!=1||_bab .GBAtY [4]!=-2{_bab .setOverrideFlag (4);};if _bab .GBAtX [5]!=2||_bab .GBAtY [5]!=-1{_bab .setOverrideFlag (5);
};if _bab .GBAtX [6]!=-3||_bab .GBAtY [6]!=0{_bab .setOverrideFlag (6);};if _bab .GBAtX [7]!=-4||_bab .GBAtY [7]!=0{_bab .setOverrideFlag (7);};if _bab .GBAtX [8]!=2||_bab .GBAtY [8]!=-2{_bab .setOverrideFlag (8);};if _bab .GBAtX [9]!=3||_bab .GBAtY [9]!=-1{_bab .setOverrideFlag (9);
};if _bab .GBAtX [10]!=-2||_bab .GBAtY [10]!=-2{_bab .setOverrideFlag (10);};if _bab .GBAtX [11]!=-3||_bab .GBAtY [11]!=-1{_bab .setOverrideFlag (11);};};case 1:if _bab .GBAtX [0]!=3||_bab .GBAtY [0]!=-1{_bab .setOverrideFlag (0);};case 2:if _bab .GBAtX [0]!=2||_bab .GBAtY [0]!=-1{_bab .setOverrideFlag (0);
};case 3:if _bab .GBAtX [0]!=2||_bab .GBAtY [0]!=-1{_bab .setOverrideFlag (0);};};return nil ;};func NewRegionSegment (r *_de .Reader )*RegionSegment {return &RegionSegment {_acfd :r }};func (_bgged *TableSegment )HtHigh ()int32 {return _bgged ._ggaa };
func (_dfec *SymbolDictionary )addSymbol (_dagg Regioner )error {_fgcc ,_acee :=_dagg .GetRegionBitmap ();if _acee !=nil {return _acee ;};_dfec ._badc [_dfec ._dce ]=_fgcc ;_dfec ._agfff =append (_dfec ._agfff ,_fgcc );_fc .Log .Trace ("\u005b\u0053YM\u0042\u004f\u004c \u0044\u0049\u0043\u0054ION\u0041RY\u005d\u0020\u0041\u0064\u0064\u0065\u0064 s\u0079\u006d\u0062\u006f\u006c\u003a\u0020%\u0073",_fgcc );
return nil ;};func (_gbe *HalftoneRegion )combineGrayscalePlanes (_cfgd []*_bgg .Bitmap ,_dgba int )error {_ggad :=0;for _bba :=0;_bba < _cfgd [_dgba ].Height ;_bba ++{for _ffea :=0;_ffea < _cfgd [_dgba ].Width ;_ffea +=8{_fdba ,_becf :=_cfgd [_dgba +1].GetByte (_ggad );
if _becf !=nil {return _becf ;};_caff ,_becf :=_cfgd [_dgba ].GetByte (_ggad );if _becf !=nil {return _becf ;};_becf =_cfgd [_dgba ].SetByte (_ggad ,_bgg .CombineBytes (_caff ,_fdba ,_bgg .CmbOpXor ));if _becf !=nil {return _becf ;};_ggad ++;};};return nil ;
};type SegmentEncoder interface{Encode (_cfcd _de .BinaryWriter )(_cafd int ,_bcbb error );};func (_caae *PatternDictionary )computeSegmentDataStructure ()error {_caae .DataOffset =_caae ._gaba .AbsolutePosition ();_caae .DataHeaderLength =_caae .DataOffset -_caae .DataHeaderOffset ;
_caae .DataLength =int64 (_caae ._gaba .AbsoluteLength ())-_caae .DataHeaderLength ;return nil ;};func NewHeader (d Documenter ,r *_de .Reader ,offset int64 ,organizationType OrganizationType )(*Header ,error ){_bgc :=&Header {Reader :r };if _cfa :=_bgc .parse (d ,r ,offset ,organizationType );
_cfa !=nil {return nil ,_gfe .Wrap (_cfa ,"\u004ee\u0077\u0048\u0065\u0061\u0064\u0065r","");};return _bgc ,nil ;};func (_baee *SymbolDictionary )decodeAggregate (_bge ,_ega uint32 )error {var (_baec int64 ;_baca error ;);if _baee .IsHuffmanEncoded {_baec ,_baca =_baee .huffDecodeRefAggNInst ();
if _baca !=nil {return _baca ;};}else {_fefb ,_cgae :=_baee ._ddea .DecodeInt (_baee ._fag );if _cgae !=nil {return _cgae ;};_baec =int64 (_fefb );};if _baec > 1{return _baee .decodeThroughTextRegion (_bge ,_ega ,uint32 (_baec ));}else if _baec ==1{return _baee .decodeRefinedSymbol (_bge ,_ega );
};return nil ;};func _cggcg (_gbgc int )int {if _gbgc ==0{return 0;};_gbgc |=_gbgc >>1;_gbgc |=_gbgc >>2;_gbgc |=_gbgc >>4;_gbgc |=_gbgc >>8;_gbgc |=_gbgc >>16;return (_gbgc +1)>>1;};func (_ecdd *TextRegion )decodeRdw ()(int64 ,error ){const _bdgc ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064w";
if _ecdd .IsHuffmanEncoded {if _ecdd .SbHuffRDWidth ==3{if _ecdd ._fgea ==nil {var (_gege int ;_geef error ;);if _ecdd .SbHuffFS ==3{_gege ++;};if _ecdd .SbHuffDS ==3{_gege ++;};if _ecdd .SbHuffDT ==3{_gege ++;};_ecdd ._fgea ,_geef =_ecdd .getUserTable (_gege );
if _geef !=nil {return 0,_gfe .Wrap (_geef ,_bdgc ,"");};};return _ecdd ._fgea .Decode (_ecdd ._geff );};_degdf ,_bfad :=_bc .GetStandardTable (14+int (_ecdd .SbHuffRDWidth ));if _bfad !=nil {return 0,_gfe .Wrap (_bfad ,_bdgc ,"");};return _degdf .Decode (_ecdd ._geff );
};_ccga ,_ddee :=_ecdd ._ddge .DecodeInt (_ecdd ._efde );if _ddee !=nil {return 0,_gfe .Wrap (_ddee ,_bdgc ,"");};return int64 (_ccga ),nil ;};func (_cecc *TableSegment )parseHeader ()error {var (_gabc int ;_ddbd uint64 ;_babf error ;);_gabc ,_babf =_cecc ._gec .ReadBit ();
if _babf !=nil {return _babf ;};if _gabc ==1{return _aa .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0061\u0062\u006c\u0065 \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0064e\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u002e\u0020\u0042\u002e\u0032\u002e1\u0020\u0043\u006f\u0064\u0065\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0042\u0069\u0074\u0020\u0037\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u007a\u0065\u0072\u006f\u002e\u0020\u0057a\u0073\u003a \u0025\u0064",_gabc );
};if _ddbd ,_babf =_cecc ._gec .ReadBits (3);_babf !=nil {return _babf ;};_cecc ._dccea =(int32 (_ddbd )+1)&0xf;if _ddbd ,_babf =_cecc ._gec .ReadBits (3);_babf !=nil {return _babf ;};_cecc ._cdce =(int32 (_ddbd )+1)&0xf;if _ddbd ,_babf =_cecc ._gec .ReadBits (32);
_babf !=nil {return _babf ;};_cecc ._cegcb =int32 (_ddbd &_g .MaxInt32 );if _ddbd ,_babf =_cecc ._gec .ReadBits (32);_babf !=nil {return _babf ;};_cecc ._ggaa =int32 (_ddbd &_g .MaxInt32 );return nil ;};func (_acbc *RegionSegment )readCombinationOperator ()error {_ccbf ,_gbfed :=_acbc ._acfd .ReadBits (3);
if _gbfed !=nil {return _gbfed ;};_acbc .CombinaionOperator =_bgg .CombinationOperator (_ccbf &0xF);return nil ;};func (_dag *HalftoneRegion )Init (hd *Header ,r *_de .Reader )error {_dag ._bbgg =r ;_dag ._fac =hd ;_dag .RegionSegment =NewRegionSegment (r );
return _dag .parseHeader ();};func (_fcbd *TextRegion )symbolIDCodeLengths ()error {var (_badce []*_bc .Code ;_gdaaf uint64 ;_ceaa _bc .Tabler ;_ggeb error ;);for _bgbceg :=0;_bgbceg < 35;_bgbceg ++{_gdaaf ,_ggeb =_fcbd ._geff .ReadBits (4);if _ggeb !=nil {return _ggeb ;
};_bcbcc :=int (_gdaaf &0xf);if _bcbcc > 0{_badce =append (_badce ,_bc .NewCode (int32 (_bcbcc ),0,int32 (_bgbceg ),false ));};};_ceaa ,_ggeb =_bc .NewFixedSizeTable (_badce );if _ggeb !=nil {return _ggeb ;};var (_bbea int64 ;_gddb uint32 ;_fceg []*_bc .Code ;
_begba int64 ;);for _gddb < _fcbd .NumberOfSymbols {_begba ,_ggeb =_ceaa .Decode (_fcbd ._geff );if _ggeb !=nil {return _ggeb ;};if _begba < 32{if _begba > 0{_fceg =append (_fceg ,_bc .NewCode (int32 (_begba ),0,int32 (_gddb ),false ));};_bbea =_begba ;
_gddb ++;}else {var _bbga ,_deeab int64 ;switch _begba {case 32:_gdaaf ,_ggeb =_fcbd ._geff .ReadBits (2);if _ggeb !=nil {return _ggeb ;};_bbga =3+int64 (_gdaaf );if _gddb > 0{_deeab =_bbea ;};case 33:_gdaaf ,_ggeb =_fcbd ._geff .ReadBits (3);if _ggeb !=nil {return _ggeb ;
};_bbga =3+int64 (_gdaaf );case 34:_gdaaf ,_ggeb =_fcbd ._geff .ReadBits (7);if _ggeb !=nil {return _ggeb ;};_bbga =11+int64 (_gdaaf );};for _baecb :=0;_baecb < int (_bbga );_baecb ++{if _deeab > 0{_fceg =append (_fceg ,_bc .NewCode (int32 (_deeab ),0,int32 (_gddb ),false ));
};_gddb ++;};};};_fcbd ._geff .Align ();_fcbd ._daee ,_ggeb =_bc .NewFixedSizeTable (_fceg );return _ggeb ;};func (_ffeb *GenericRegion )writeGBAtPixels (_ddgb _de .BinaryWriter )(_ccdd int ,_gdcc error ){const _bacf ="\u0077r\u0069t\u0065\u0047\u0042\u0041\u0074\u0050\u0069\u0078\u0065\u006c\u0073";
if _ffeb .UseMMR {return 0,nil ;};_fbgf :=1;if _ffeb .GBTemplate ==0{_fbgf =4;}else if _ffeb .UseExtTemplates {_fbgf =12;};if len (_ffeb .GBAtX )!=_fbgf {return 0,_gfe .Errorf (_bacf ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0058\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};if len (_ffeb .GBAtY )!=_fbgf {return 0,_gfe .Errorf (_bacf ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0059\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};for _ded :=0;_ded < _fbgf ;_ded ++{if _gdcc =_ddgb .WriteByte (byte (_ffeb .GBAtX [_ded ]));_gdcc !=nil {return _ccdd ,_gfe .Wrap (_gdcc ,_bacf ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0058");};_ccdd ++;if _gdcc =_ddgb .WriteByte (byte (_ffeb .GBAtY [_ded ]));
_gdcc !=nil {return _ccdd ,_gfe .Wrap (_gdcc ,_bacf ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0059");};_ccdd ++;};return _ccdd ,nil ;};func (_fcdf *TextRegion )decodeIb (_begdb ,_bgee int64 )(*_bgg .Bitmap ,error ){const _fbae ="\u0064\u0065\u0063\u006f\u0064\u0065\u0049\u0062";
var (_fgae error ;_ggegb *_bgg .Bitmap ;);if _begdb ==0{if int (_bgee )> len (_fcdf .Symbols )-1{return nil ,_gfe .Error (_fbae ,"\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0049\u0042\u0020\u0062\u0069\u0074\u006d\u0061\u0070\u002e\u0020\u0069\u006e\u0064\u0065x\u0020\u006f\u0075\u0074\u0020o\u0066\u0020r\u0061\u006e\u0067\u0065");
};return _fcdf .Symbols [int (_bgee )],nil ;};var _bgbcc ,_eccd ,_defb ,_fafg int64 ;_bgbcc ,_fgae =_fcdf .decodeRdw ();if _fgae !=nil {return nil ,_gfe .Wrap (_fgae ,_fbae ,"");};_eccd ,_fgae =_fcdf .decodeRdh ();if _fgae !=nil {return nil ,_gfe .Wrap (_fgae ,_fbae ,"");
};_defb ,_fgae =_fcdf .decodeRdx ();if _fgae !=nil {return nil ,_gfe .Wrap (_fgae ,_fbae ,"");};_fafg ,_fgae =_fcdf .decodeRdy ();if _fgae !=nil {return nil ,_gfe .Wrap (_fgae ,_fbae ,"");};if _fcdf .IsHuffmanEncoded {if _ ,_fgae =_fcdf .decodeSymInRefSize ();
_fgae !=nil {return nil ,_gfe .Wrap (_fgae ,_fbae ,"");};_fcdf ._geff .Align ();};_ggcb :=_fcdf .Symbols [_bgee ];_bbdae :=uint32 (_ggcb .Width );_dgeg :=uint32 (_ggcb .Height );_cefd :=int32 (uint32 (_bgbcc )>>1)+int32 (_defb );_fbdg :=int32 (uint32 (_eccd )>>1)+int32 (_fafg );
if _fcdf ._edea ==nil {_fcdf ._edea =_gbg (_fcdf ._geff ,nil );};_fcdf ._edea .setParameters (_fcdf ._fabce ,_fcdf ._ddge ,_fcdf .SbrTemplate ,_bbdae +uint32 (_bgbcc ),_dgeg +uint32 (_eccd ),_ggcb ,_cefd ,_fbdg ,false ,_fcdf .SbrATX ,_fcdf .SbrATY );_ggegb ,_fgae =_fcdf ._edea .GetRegionBitmap ();
if _fgae !=nil {return nil ,_gfe .Wrap (_fgae ,_fbae ,"\u0067\u0072\u0066");};if _fcdf .IsHuffmanEncoded {_fcdf ._geff .Align ();};return _ggegb ,nil ;};func (_acd *GenericRefinementRegion )decodeOptimized (_cag ,_ggd ,_df ,_cf ,_aec ,_ge ,_gc int )error {var (_af error ;
_acb int ;_cff int ;);_cd :=_cag -int (_acd .ReferenceDY );if _fbc :=int (-_acd .ReferenceDX );_fbc > 0{_acb =_fbc ;};_dgf :=_acd .ReferenceBitmap .GetByteIndex (_acb ,_cd );if _acd .ReferenceDX > 0{_cff =int (_acd .ReferenceDX );};_eea :=_acd .RegionBitmap .GetByteIndex (_cff ,_cag );
switch _acd .TemplateID {case 0:_af =_acd .decodeTemplate (_cag ,_ggd ,_df ,_cf ,_aec ,_ge ,_gc ,_eea ,_cd ,_dgf ,_acd ._ace );case 1:_af =_acd .decodeTemplate (_cag ,_ggd ,_df ,_cf ,_aec ,_ge ,_gc ,_eea ,_cd ,_dgf ,_acd ._be );};return _af ;};func (_aab *GenericRegion )overrideAtTemplate2 (_bggb ,_gcdd ,_ade ,_ege ,_cbcag int )int {_bggb &=0x3FB;
if _aab .GBAtY [0]==0&&_aab .GBAtX [0]>=-int8 (_cbcag ){_bggb |=(_ege >>uint (7-(int8 (_cbcag )+_aab .GBAtX [0]))&0x1)<<2;}else {_bggb |=int (_aab .getPixel (_gcdd +int (_aab .GBAtX [0]),_ade +int (_aab .GBAtY [0])))<<2;};return _bggb ;};func (_ecdg *TextRegion )checkInput ()error {const _ggaf ="\u0063\u0068\u0065\u0063\u006b\u0049\u006e\u0070\u0075\u0074";
if !_ecdg .UseRefinement {if _ecdg .SbrTemplate !=0{_fc .Log .Debug ("\u0053\u0062\u0072Te\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_ecdg .SbrTemplate =0;};};if _ecdg .SbHuffFS ==2||_ecdg .SbHuffRDWidth ==2||_ecdg .SbHuffRDHeight ==2||_ecdg .SbHuffRDX ==2||_ecdg .SbHuffRDY ==2{return _gfe .Error (_ggaf ,"h\u0075\u0066\u0066\u006d\u0061\u006e \u0066\u006c\u0061\u0067\u0020\u0076a\u006c\u0075\u0065\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074e\u0064");
};if !_ecdg .UseRefinement {if _ecdg .SbHuffRSize !=0{_fc .Log .Debug ("\u0053\u0062\u0048uf\u0066\u0052\u0053\u0069\u007a\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_ecdg .SbHuffRSize =0;};if _ecdg .SbHuffRDY !=0{_fc .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044Y\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");
_ecdg .SbHuffRDY =0;};if _ecdg .SbHuffRDX !=0{_fc .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044X\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_ecdg .SbHuffRDX =0;};if _ecdg .SbHuffRDWidth !=0{_fc .Log .Debug ("\u0053b\u0048\u0075\u0066\u0066R\u0044\u0057\u0069\u0064\u0074h\u0020s\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u00200");
_ecdg .SbHuffRDWidth =0;};if _ecdg .SbHuffRDHeight !=0{_fc .Log .Debug ("\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069g\u0068\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0030");_ecdg .SbHuffRDHeight =0;};};return nil ;
};func (_cbce *HalftoneRegion )computeSegmentDataStructure ()error {_cbce .DataOffset =_cbce ._bbgg .AbsolutePosition ();_cbce .DataHeaderLength =_cbce .DataOffset -_cbce .DataHeaderOffset ;_cbce .DataLength =int64 (_cbce ._bbgg .AbsoluteLength ())-_cbce .DataHeaderLength ;
return nil ;};func (_bbfbb *TextRegion )String ()string {_bccd :=&_a .Builder {};_bccd .WriteString ("\u000a[\u0054E\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u000a");_bccd .WriteString (_bbfbb .RegionInfo .String ()+"\u000a");_bccd .WriteString (_aa .Sprintf ("\u0009\u002d\u0020\u0053br\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0025\u0076\u000a",_bbfbb .SbrTemplate ));
_bccd .WriteString (_aa .Sprintf ("\u0009-\u0020S\u0062\u0044\u0073\u004f\u0066f\u0073\u0065t\u003a\u0020\u0025\u0076\u000a",_bbfbb .SbDsOffset ));_bccd .WriteString (_aa .Sprintf ("\t\u002d \u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0050i\u0078\u0065\u006c\u003a %\u0076\u000a",_bbfbb .DefaultPixel ));
_bccd .WriteString (_aa .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0076\u000a",_bbfbb .CombinationOperator ));_bccd .WriteString (_aa .Sprintf ("\t\u002d \u0049\u0073\u0054\u0072\u0061\u006e\u0073\u0070o\u0073\u0065\u0064\u003a %\u0076\u000a",_bbfbb .IsTransposed ));
_bccd .WriteString (_aa .Sprintf ("\u0009\u002d\u0020Re\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0043\u006f\u0072\u006e\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_bbfbb .ReferenceCorner ));_bccd .WriteString (_aa .Sprintf ("\t\u002d\u0020\u0055\u0073eR\u0065f\u0069\u006e\u0065\u006d\u0065n\u0074\u003a\u0020\u0025\u0076\u000a",_bbfbb .UseRefinement ));
_bccd .WriteString (_aa .Sprintf ("\u0009-\u0020\u0049\u0073\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045n\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0076\u000a",_bbfbb .IsHuffmanEncoded ));if _bbfbb .IsHuffmanEncoded {_bccd .WriteString (_aa .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_bbfbb .SbHuffRSize ));
_bccd .WriteString (_aa .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0059:\u0020\u0025\u0076\u000a",_bbfbb .SbHuffRDY ));_bccd .WriteString (_aa .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0058:\u0020\u0025\u0076\u000a",_bbfbb .SbHuffRDX ));
_bccd .WriteString (_aa .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069\u0067\u0068\u0074\u003a\u0020\u0025v\u000a",_bbfbb .SbHuffRDHeight ));_bccd .WriteString (_aa .Sprintf ("\t\u002d\u0020\u0053\u0062Hu\u0066f\u0052\u0044\u0057\u0069\u0064t\u0068\u003a\u0020\u0025\u0076\u000a",_bbfbb .SbHuffRDWidth ));
_bccd .WriteString (_aa .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0054\u003a\u0020\u0025\u0076\u000a",_bbfbb .SbHuffDT ));_bccd .WriteString (_aa .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0053\u003a\u0020\u0025\u0076\u000a",_bbfbb .SbHuffDS ));
_bccd .WriteString (_aa .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0046\u0053\u003a\u0020\u0025\u0076\u000a",_bbfbb .SbHuffFS ));};_bccd .WriteString (_aa .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_bbfbb .SbrATX ));
_bccd .WriteString (_aa .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0059:\u0020\u0025\u0076\u000a",_bbfbb .SbrATY ));_bccd .WriteString (_aa .Sprintf ("\u0009\u002d\u0020N\u0075\u006d\u0062\u0065r\u004f\u0066\u0053\u0079\u006d\u0062\u006fl\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_bbfbb .NumberOfSymbolInstances ));
_bccd .WriteString (_aa .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_bbfbb .SbrATX ));return _bccd .String ();};func (_gaea *Header )writeFlags (_bdfa _de .BinaryWriter )(_afg error ){const _bbaf ="\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065F\u006c\u0061\u0067\u0073";
_baba :=byte (_gaea .Type );if _afg =_bdfa .WriteByte (_baba );_afg !=nil {return _gfe .Wrap (_afg ,_bbaf ,"\u0077\u0072\u0069ti\u006e\u0067\u0020\u0073\u0065\u0067\u006d\u0065\u006et\u0020t\u0079p\u0065 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};if !_gaea .RetainFlag &&!_gaea .PageAssociationFieldSize {return nil ;};if _afg =_bdfa .SkipBits (-8);_afg !=nil {return _gfe .Wrap (_afg ,_bbaf ,"\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0062\u0061\u0063\u006b\u0020\u0074\u0068\u0065\u0020\u0062\u0069\u0074\u0073\u0020\u0066\u0061il\u0065\u0064");
};var _efab int ;if _gaea .RetainFlag {_efab =1;};if _afg =_bdfa .WriteBit (_efab );_afg !=nil {return _gfe .Wrap (_afg ,_bbaf ,"\u0072\u0065\u0074\u0061in\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067\u0073");};_efab =0;if _gaea .PageAssociationFieldSize {_efab =1;
};if _afg =_bdfa .WriteBit (_efab );_afg !=nil {return _gfe .Wrap (_afg ,_bbaf ,"p\u0061\u0067\u0065\u0020as\u0073o\u0063\u0069\u0061\u0074\u0069o\u006e\u0020\u0066\u006c\u0061\u0067");};_bdfa .FinishByte ();return nil ;};func (_deggg *TextRegion )getUserTable (_bedb int )(_bc .Tabler ,error ){const _deea ="\u0067\u0065\u0074U\u0073\u0065\u0072\u0054\u0061\u0062\u006c\u0065";
var _bfee int ;for _ ,_cgba :=range _deggg .Header .RTSegments {if _cgba .Type ==53{if _bfee ==_bedb {_abda ,_gffg :=_cgba .GetSegmentData ();if _gffg !=nil {return nil ,_gffg ;};_bgcd ,_dedbe :=_abda .(*TableSegment );if !_dedbe {_fc .Log .Debug (_aa .Sprintf ("\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079p\u0065\u00205\u0033\u0020\u002d\u0020\u0061\u006ed\u0020in\u0064\u0065\u0078\u003a\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_cgba .SegmentNumber ));
return nil ,_gfe .Error (_deea ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079\u0070e\u0020\u0035\u0033\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u002a\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};return _bc .NewEncodedTable (_bgcd );};_bfee ++;};};return nil ,nil ;};func (_efac *Header )CleanSegmentData (){if _efac .SegmentData !=nil {_efac .SegmentData =nil ;};};func (_aced *HalftoneRegion )computeX (_gcec ,_fea int )int {return _aced .shiftAndFill (int (_aced .HGridX )+_gcec *int (_aced .HRegionY )+_fea *int (_aced .HRegionX ));
};func (_ffgc *Header )pageSize ()uint {if _ffgc .PageAssociation <=255{return 1;};return 4;};func (_gbac *TextRegion )Encode (w _de .BinaryWriter )(_fdbg int ,_bdb error ){const _fgda ="\u0054\u0065\u0078\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u002e\u0045n\u0063\u006f\u0064\u0065";
if _fdbg ,_bdb =_gbac .RegionInfo .Encode (w );_bdb !=nil {return _fdbg ,_gfe .Wrap (_bdb ,_fgda ,"");};var _dcae int ;if _dcae ,_bdb =_gbac .encodeFlags (w );_bdb !=nil {return _fdbg ,_gfe .Wrap (_bdb ,_fgda ,"");};_fdbg +=_dcae ;if _dcae ,_bdb =_gbac .encodeSymbols (w );
_bdb !=nil {return _fdbg ,_gfe .Wrap (_bdb ,_fgda ,"");};_fdbg +=_dcae ;return _fdbg ,nil ;};func (_fecd *TextRegion )setParameters (_ccgf *_ad .Decoder ,_bbef ,_efea bool ,_bcda ,_gfbe uint32 ,_gbdc uint32 ,_afdg int8 ,_dfgg uint32 ,_cggg int8 ,_efgdf _bgg .CombinationOperator ,_fdeda int8 ,_fgbg int16 ,_fcedc ,_ceba ,_adcda ,_eggb ,_aaae ,_ccbff ,_gged ,_ddcf ,_ggcae ,_efff int8 ,_ebbc ,_fgdaa []int8 ,_baaf []*_bgg .Bitmap ,_gddd int8 ){_fecd ._ddge =_ccgf ;
_fecd .IsHuffmanEncoded =_bbef ;_fecd .UseRefinement =_efea ;_fecd .RegionInfo .BitmapWidth =_bcda ;_fecd .RegionInfo .BitmapHeight =_gfbe ;_fecd .NumberOfSymbolInstances =_gbdc ;_fecd .SbStrips =_afdg ;_fecd .NumberOfSymbols =_dfgg ;_fecd .DefaultPixel =_cggg ;
_fecd .CombinationOperator =_efgdf ;_fecd .IsTransposed =_fdeda ;_fecd .ReferenceCorner =_fgbg ;_fecd .SbDsOffset =_fcedc ;_fecd .SbHuffFS =_ceba ;_fecd .SbHuffDS =_adcda ;_fecd .SbHuffDT =_eggb ;_fecd .SbHuffRDWidth =_aaae ;_fecd .SbHuffRDHeight =_ccbff ;
_fecd .SbHuffRSize =_ggcae ;_fecd .SbHuffRDX =_gged ;_fecd .SbHuffRDY =_ddcf ;_fecd .SbrTemplate =_efff ;_fecd .SbrATX =_ebbc ;_fecd .SbrATY =_fgdaa ;_fecd .Symbols =_baaf ;_fecd ._fda =_gddd ;};func (_bee *GenericRefinementRegion )decodeTemplate (_aad ,_aae ,_fff ,_acdd ,_gbf ,_gdd ,_eff ,_gde ,_bcg ,_bdd int ,_adc templater )(_cgb error ){var (_cbc ,_fdf ,_gaa ,_fdc ,_cdd int16 ;
_abf ,_ebc ,_dgc ,_gdc int ;_cbac byte ;);if _bcg >=1&&(_bcg -1)< _bee .ReferenceBitmap .Height {_cbac ,_cgb =_bee .ReferenceBitmap .GetByte (_bdd -_acdd );if _cgb !=nil {return ;};_abf =int (_cbac );};if _bcg >=0&&(_bcg )< _bee .ReferenceBitmap .Height {_cbac ,_cgb =_bee .ReferenceBitmap .GetByte (_bdd );
if _cgb !=nil {return ;};_ebc =int (_cbac );};if _bcg >=-1&&(_bcg +1)< _bee .ReferenceBitmap .Height {_cbac ,_cgb =_bee .ReferenceBitmap .GetByte (_bdd +_acdd );if _cgb !=nil {return ;};_dgc =int (_cbac );};_bdd ++;if _aad >=1{_cbac ,_cgb =_bee .RegionBitmap .GetByte (_gde -_fff );
if _cgb !=nil {return ;};_gdc =int (_cbac );};_gde ++;_fgd :=_bee .ReferenceDX %8;_fad :=6+_fgd ;_efd :=_bdd %_acdd ;if _fad >=0{if _fad < 8{_cbc =int16 (_abf >>uint (_fad ))&0x07;};if _fad < 8{_fdf =int16 (_ebc >>uint (_fad ))&0x07;};if _fad < 8{_gaa =int16 (_dgc >>uint (_fad ))&0x07;
};if _fad ==6&&_efd > 1{if _bcg >=1&&(_bcg -1)< _bee .ReferenceBitmap .Height {_cbac ,_cgb =_bee .ReferenceBitmap .GetByte (_bdd -_acdd -2);if _cgb !=nil {return _cgb ;};_cbc |=int16 (_cbac <<2)&0x04;};if _bcg >=0&&_bcg < _bee .ReferenceBitmap .Height {_cbac ,_cgb =_bee .ReferenceBitmap .GetByte (_bdd -2);
if _cgb !=nil {return _cgb ;};_fdf |=int16 (_cbac <<2)&0x04;};if _bcg >=-1&&_bcg +1< _bee .ReferenceBitmap .Height {_cbac ,_cgb =_bee .ReferenceBitmap .GetByte (_bdd +_acdd -2);if _cgb !=nil {return _cgb ;};_gaa |=int16 (_cbac <<2)&0x04;};};if _fad ==0{_abf =0;
_ebc =0;_dgc =0;if _efd < _acdd -1{if _bcg >=1&&_bcg -1< _bee .ReferenceBitmap .Height {_cbac ,_cgb =_bee .ReferenceBitmap .GetByte (_bdd -_acdd );if _cgb !=nil {return _cgb ;};_abf =int (_cbac );};if _bcg >=0&&_bcg < _bee .ReferenceBitmap .Height {_cbac ,_cgb =_bee .ReferenceBitmap .GetByte (_bdd );
if _cgb !=nil {return _cgb ;};_ebc =int (_cbac );};if _bcg >=-1&&_bcg +1< _bee .ReferenceBitmap .Height {_cbac ,_cgb =_bee .ReferenceBitmap .GetByte (_bdd +_acdd );if _cgb !=nil {return _cgb ;};_dgc =int (_cbac );};};_bdd ++;};}else {_cbc =int16 (_abf <<1)&0x07;
_fdf =int16 (_ebc <<1)&0x07;_gaa =int16 (_dgc <<1)&0x07;_abf =0;_ebc =0;_dgc =0;if _efd < _acdd -1{if _bcg >=1&&_bcg -1< _bee .ReferenceBitmap .Height {_cbac ,_cgb =_bee .ReferenceBitmap .GetByte (_bdd -_acdd );if _cgb !=nil {return _cgb ;};_abf =int (_cbac );
};if _bcg >=0&&_bcg < _bee .ReferenceBitmap .Height {_cbac ,_cgb =_bee .ReferenceBitmap .GetByte (_bdd );if _cgb !=nil {return _cgb ;};_ebc =int (_cbac );};if _bcg >=-1&&_bcg +1< _bee .ReferenceBitmap .Height {_cbac ,_cgb =_bee .ReferenceBitmap .GetByte (_bdd +_acdd );
if _cgb !=nil {return _cgb ;};_dgc =int (_cbac );};_bdd ++;};_cbc |=int16 ((_abf >>7)&0x07);_fdf |=int16 ((_ebc >>7)&0x07);_gaa |=int16 ((_dgc >>7)&0x07);};_fdc =int16 (_gdc >>6);_cdd =0;_eddb :=(2-_fgd )%8;_abf <<=uint (_eddb );_ebc <<=uint (_eddb );_dgc <<=uint (_eddb );
_gdc <<=2;var _ada int ;for _baf :=0;_baf < _aae ;_baf ++{_bec :=_baf &0x07;_fgc :=_adc .form (_cbc ,_fdf ,_gaa ,_fdc ,_cdd );if _bee ._db {_cbac ,_cgb =_bee .RegionBitmap .GetByte (_bee .RegionBitmap .GetByteIndex (_baf ,_aad ));if _cgb !=nil {return _cgb ;
};_bee ._bf .SetIndex (int32 (_bee .overrideAtTemplate0 (int (_fgc ),_baf ,_aad ,int (_cbac ),_bec )));}else {_bee ._bf .SetIndex (int32 (_fgc ));};_ada ,_cgb =_bee ._aeaf .DecodeBit (_bee ._bf );if _cgb !=nil {return _cgb ;};if _cgb =_bee .RegionBitmap .SetPixel (_baf ,_aad ,byte (_ada ));
_cgb !=nil {return _cgb ;};_cbc =((_cbc <<1)|0x01&int16 (_abf >>7))&0x07;_fdf =((_fdf <<1)|0x01&int16 (_ebc >>7))&0x07;_gaa =((_gaa <<1)|0x01&int16 (_dgc >>7))&0x07;_fdc =((_fdc <<1)|0x01&int16 (_gdc >>7))&0x07;_cdd =int16 (_ada );if (_baf -int (_bee .ReferenceDX ))%8==5{_abf =0;
_ebc =0;_dgc =0;if ((_baf -int (_bee .ReferenceDX ))/8)+1< _bee .ReferenceBitmap .RowStride {if _bcg >=1&&(_bcg -1)< _bee .ReferenceBitmap .Height {_cbac ,_cgb =_bee .ReferenceBitmap .GetByte (_bdd -_acdd );if _cgb !=nil {return _cgb ;};_abf =int (_cbac );
};if _bcg >=0&&_bcg < _bee .ReferenceBitmap .Height {_cbac ,_cgb =_bee .ReferenceBitmap .GetByte (_bdd );if _cgb !=nil {return _cgb ;};_ebc =int (_cbac );};if _bcg >=-1&&(_bcg +1)< _bee .ReferenceBitmap .Height {_cbac ,_cgb =_bee .ReferenceBitmap .GetByte (_bdd +_acdd );
if _cgb !=nil {return _cgb ;};_dgc =int (_cbac );};};_bdd ++;}else {_abf <<=1;_ebc <<=1;_dgc <<=1;};if _bec ==5&&_aad >=1{if ((_baf >>3)+1)>=_bee .RegionBitmap .RowStride {_gdc =0;}else {_cbac ,_cgb =_bee .RegionBitmap .GetByte (_gde -_fff );if _cgb !=nil {return _cgb ;
};_gdc =int (_cbac );};_gde ++;}else {_gdc <<=1;};};return nil ;};type PatternDictionary struct{_gaba *_de .Reader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;GBAtX []int8 ;GBAtY []int8 ;IsMMREncoded bool ;HDTemplate byte ;
HdpWidth byte ;HdpHeight byte ;Patterns []*_bgg .Bitmap ;GrayMax uint32 ;};func (_ebef *SymbolDictionary )setExportedSymbols (_eggc []int ){for _cfbb :=uint32 (0);_cfbb < _ebef ._gagg +_ebef .NumberOfNewSymbols ;_cfbb ++{if _eggc [_cfbb ]==1{var _aeeb *_bgg .Bitmap ;
if _cfbb < _ebef ._gagg {_aeeb =_ebef ._dege [_cfbb ];}else {_aeeb =_ebef ._badc [_cfbb -_ebef ._gagg ];};_fc .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u002d\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u0020\u0041\u0064\u0064 E\u0078\u0070\u006fr\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027%\u0073\u0027",_aeeb );
_ebef ._feddd =append (_ebef ._feddd ,_aeeb );};};};func (_ggef *PatternDictionary )readIsMMREncoded ()error {_cacc ,_ccde :=_ggef ._gaba .ReadBit ();if _ccde !=nil {return _ccde ;};if _cacc !=0{_ggef .IsMMREncoded =true ;};return nil ;};func (_gaeff *TextRegion )computeSymbolCodeLength ()error {if _gaeff .IsHuffmanEncoded {return _gaeff .symbolIDCodeLengths ();
};_gaeff ._fda =int8 (_g .Ceil (_g .Log (float64 (_gaeff .NumberOfSymbols ))/_g .Log (2)));return nil ;};func (_dfgfd *TableSegment )StreamReader ()*_de .Reader {return _dfgfd ._gec };func (_gad *GenericRegion )decodeTemplate0b (_dgcd ,_fga ,_dbe int ,_gba ,_fbd int )(_gcf error ){const _dbcf ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0062";
var (_aac ,_cfde int ;_dab ,_cdeb int ;_ceg byte ;_bbgf int ;);if _dgcd >=1{_ceg ,_gcf =_gad .Bitmap .GetByte (_fbd );if _gcf !=nil {return _gfe .Wrap (_gcf ,_dbcf ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_dab =int (_ceg );};if _dgcd >=2{_ceg ,_gcf =_gad .Bitmap .GetByte (_fbd -_gad .Bitmap .RowStride );
if _gcf !=nil {return _gfe .Wrap (_gcf ,_dbcf ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_cdeb =int (_ceg )<<6;};_aac =(_dab &0xf0)|(_cdeb &0x3800);for _cbfdb :=0;_cbfdb < _dbe ;_cbfdb =_bbgf {var (_ccd byte ;_effd int ;);_bbgf =_cbfdb +8;if _caf :=_fga -_cbfdb ;
_caf > 8{_effd =8;}else {_effd =_caf ;};if _dgcd > 0{_dab <<=8;if _bbgf < _fga {_ceg ,_gcf =_gad .Bitmap .GetByte (_fbd +1);if _gcf !=nil {return _gfe .Wrap (_gcf ,_dbcf ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_dab |=int (_ceg );};};if _dgcd > 1{_cdeb <<=8;
if _bbgf < _fga {_ceg ,_gcf =_gad .Bitmap .GetByte (_fbd -_gad .Bitmap .RowStride +1);if _gcf !=nil {return _gfe .Wrap (_gcf ,_dbcf ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_cdeb |=int (_ceg )<<6;};};for _effc :=0;_effc < _effd ;_effc ++{_acf :=uint (7-_effc );
if _gad ._cgff {_cfde =_gad .overrideAtTemplate0b (_aac ,_cbfdb +_effc ,_dgcd ,int (_ccd ),_effc ,int (_acf ));_gad ._dfa .SetIndex (int32 (_cfde ));}else {_gad ._dfa .SetIndex (int32 (_aac ));};var _fedd int ;_fedd ,_gcf =_gad ._dfef .DecodeBit (_gad ._dfa );
if _gcf !=nil {return _gfe .Wrap (_gcf ,_dbcf ,"");};_ccd |=byte (_fedd <<_acf );_aac =((_aac &0x7bf7)<<1)|_fedd |((_dab >>_acf )&0x10)|((_cdeb >>_acf )&0x800);};if _dcaf :=_gad .Bitmap .SetByte (_gba ,_ccd );_dcaf !=nil {return _gfe .Wrap (_dcaf ,_dbcf ,"");
};_gba ++;_fbd ++;};return nil ;};func (_eege *Header )writeReferredToCount (_ecfb _de .BinaryWriter )(_gbgb int ,_cecg error ){const _ggcc ="w\u0072i\u0074\u0065\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0043ou\u006e\u0074";_eege .RTSNumbers =make ([]int ,len (_eege .RTSegments ));
for _ecdc ,_cgc :=range _eege .RTSegments {_eege .RTSNumbers [_ecdc ]=int (_cgc .SegmentNumber );};if len (_eege .RTSNumbers )<=4{var _baeb byte ;if len (_eege .RetainBits )>=1{_baeb =_eege .RetainBits [0];};_baeb |=byte (len (_eege .RTSNumbers ))<<5;if _cecg =_ecfb .WriteByte (_baeb );
_cecg !=nil {return 0,_gfe .Wrap (_cecg ,_ggcc ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return 1,nil ;};_gab :=uint32 (len (_eege .RTSNumbers ));_gbd :=make ([]byte ,4+_ae .Ceil (len (_eege .RTSNumbers )+1,8));_gab |=0x7<<29;
_bg .BigEndian .PutUint32 (_gbd ,_gab );copy (_gbd [1:],_eege .RetainBits );_gbgb ,_cecg =_ecfb .Write (_gbd );if _cecg !=nil {return 0,_gfe .Wrap (_cecg ,_ggcc ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return _gbgb ,nil ;};func (_beaa *TextRegion )Init (header *Header ,r *_de .Reader )error {_beaa .Header =header ;
_beaa ._geff =r ;_beaa .RegionInfo =NewRegionSegment (_beaa ._geff );return _beaa .parseHeader ();};func (_bgfca *TableSegment )Init (h *Header ,r *_de .Reader )error {_bgfca ._gec =r ;return _bgfca .parseHeader ();};func (_edceb *SymbolDictionary )readRegionFlags ()error {var (_fgecb uint64 ;
_afce int ;);_ ,_dddba :=_edceb ._acdf .ReadBits (3);if _dddba !=nil {return _dddba ;};_afce ,_dddba =_edceb ._acdf .ReadBit ();if _dddba !=nil {return _dddba ;};_edceb .SdrTemplate =int8 (_afce );_fgecb ,_dddba =_edceb ._acdf .ReadBits (2);if _dddba !=nil {return _dddba ;
};_edceb .SdTemplate =int8 (_fgecb &0xf);_afce ,_dddba =_edceb ._acdf .ReadBit ();if _dddba !=nil {return _dddba ;};if _afce ==1{_edceb ._bbgbg =true ;};_afce ,_dddba =_edceb ._acdf .ReadBit ();if _dddba !=nil {return _dddba ;};if _afce ==1{_edceb ._dfgd =true ;
};_afce ,_dddba =_edceb ._acdf .ReadBit ();if _dddba !=nil {return _dddba ;};if _afce ==1{_edceb .SdHuffAggInstanceSelection =true ;};_afce ,_dddba =_edceb ._acdf .ReadBit ();if _dddba !=nil {return _dddba ;};_edceb .SdHuffBMSizeSelection =int8 (_afce );
_fgecb ,_dddba =_edceb ._acdf .ReadBits (2);if _dddba !=nil {return _dddba ;};_edceb .SdHuffDecodeWidthSelection =int8 (_fgecb &0xf);_fgecb ,_dddba =_edceb ._acdf .ReadBits (2);if _dddba !=nil {return _dddba ;};_edceb .SdHuffDecodeHeightSelection =int8 (_fgecb &0xf);
_afce ,_dddba =_edceb ._acdf .ReadBit ();if _dddba !=nil {return _dddba ;};if _afce ==1{_edceb .UseRefinementAggregation =true ;};_afce ,_dddba =_edceb ._acdf .ReadBit ();if _dddba !=nil {return _dddba ;};if _afce ==1{_edceb .IsHuffmanEncoded =true ;};
return nil ;};func (_debg *TextRegion )decodeDT ()(_feec int64 ,_cfad error ){if _debg .IsHuffmanEncoded {if _debg .SbHuffDT ==3{_feec ,_cfad =_debg ._feda .Decode (_debg ._geff );if _cfad !=nil {return 0,_cfad ;};}else {var _gaab _bc .Tabler ;_gaab ,_cfad =_bc .GetStandardTable (11+int (_debg .SbHuffDT ));
if _cfad !=nil {return 0,_cfad ;};_feec ,_cfad =_gaab .Decode (_debg ._geff );if _cfad !=nil {return 0,_cfad ;};};}else {var _cbbbec int32 ;_cbbbec ,_cfad =_debg ._ddge .DecodeInt (_debg ._cgdd );if _cfad !=nil {return ;};_feec =int64 (_cbbbec );};_feec *=int64 (_debg .SbStrips );
return _feec ,nil ;};func (_dbgf *TextRegion )initSymbols ()error {const _bcbbc ="i\u006e\u0069\u0074\u0053\u0079\u006d\u0062\u006f\u006c\u0073";for _ ,_cbfa :=range _dbgf .Header .RTSegments {if _cbfa ==nil {return _gfe .Error (_bcbbc ,"\u006e\u0069\u006c\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020pr\u006f\u0076\u0069\u0064\u0065\u0064 \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0074\u0065\u0078\u0074\u0020\u0072\u0065g\u0069\u006f\u006e\u0020\u0053\u0079\u006d\u0062o\u006c\u0073");
};if _cbfa .Type ==0{_eced ,_edega :=_cbfa .GetSegmentData ();if _edega !=nil {return _gfe .Wrap (_edega ,_bcbbc ,"");};_bbee ,_egdbe :=_eced .(*SymbolDictionary );if !_egdbe {return _gfe .Error (_bcbbc ,"\u0072e\u0066\u0065r\u0072\u0065\u0064 \u0054\u006f\u0020\u0053\u0065\u0067\u006de\u006e\u0074\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_bbee ._adfd =_dbgf ._acdfa ;_cbcg ,_edega :=_bbee .GetDictionary ();if _edega !=nil {return _gfe .Wrap (_edega ,_bcbbc ,"");};_dbgf .Symbols =append (_dbgf .Symbols ,_cbcg ...);};};_dbgf .NumberOfSymbols =uint32 (len (_dbgf .Symbols ));return nil ;};
func (_eb *EndOfStripe )LineNumber ()int {return _eb ._eg };func (_cef *SymbolDictionary )decodeHeightClassDeltaHeightWithHuffman ()(int64 ,error ){switch _cef .SdHuffDecodeHeightSelection {case 0:_cbbbf ,_dedb :=_bc .GetStandardTable (4);if _dedb !=nil {return 0,_dedb ;
};return _cbbbf .Decode (_cef ._acdf );case 1:_cega ,_befa :=_bc .GetStandardTable (5);if _befa !=nil {return 0,_befa ;};return _cega .Decode (_cef ._acdf );case 3:if _cef ._effe ==nil {_debc ,_gfgg :=_bc .GetStandardTable (0);if _gfgg !=nil {return 0,_gfgg ;
};_cef ._effe =_debc ;};return _cef ._effe .Decode (_cef ._acdf );};return 0,nil ;};func (_affd *TextRegion )parseHeader ()error {var _fgce error ;_fc .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069n\u0073\u002e\u002e\u002e");
defer func (){if _fgce !=nil {_fc .Log .Trace ("\u005b\u0054\u0045\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044E\u0052\u005d\u0020\u0066\u0061i\u006c\u0065d\u002e\u0020\u0025\u0076",_fgce );
}else {_fc .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069s\u0068\u0065\u0064\u002e");};}();if _fgce =_affd .RegionInfo .parseHeader ();
_fgce !=nil {return _fgce ;};if _fgce =_affd .readRegionFlags ();_fgce !=nil {return _fgce ;};if _affd .IsHuffmanEncoded {if _fgce =_affd .readHuffmanFlags ();_fgce !=nil {return _fgce ;};};if _fgce =_affd .readUseRefinement ();_fgce !=nil {return _fgce ;
};if _fgce =_affd .readAmountOfSymbolInstances ();_fgce !=nil {return _fgce ;};if _fgce =_affd .getSymbols ();_fgce !=nil {return _fgce ;};if _fgce =_affd .computeSymbolCodeLength ();_fgce !=nil {return _fgce ;};if _fgce =_affd .checkInput ();_fgce !=nil {return _fgce ;
};_fc .Log .Trace ("\u0025\u0073",_affd .String ());return nil ;};func (_gdga *GenericRegion )Encode (w _de .BinaryWriter )(_bgbc int ,_eegc error ){const _fbe ="G\u0065n\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069o\u006e\u002e\u0045\u006eco\u0064\u0065";
if _gdga .Bitmap ==nil {return 0,_gfe .Error (_fbe ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};_efag ,_eegc :=_gdga .RegionSegment .Encode (w );if _eegc !=nil {return 0,_gfe .Wrap (_eegc ,_fbe ,"\u0052\u0065\u0067\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};_bgbc +=_efag ;if _eegc =w .SkipBits (4);_eegc !=nil {return _bgbc ,_gfe .Wrap (_eegc ,_fbe ,"\u0073k\u0069p\u0020\u0072\u0065\u0073\u0065r\u0076\u0065d\u0020\u0062\u0069\u0074\u0073");};var _efg int ;if _gdga .IsTPGDon {_efg =1;};if _eegc =w .WriteBit (_efg );
_eegc !=nil {return _bgbc ,_gfe .Wrap (_eegc ,_fbe ,"\u0074\u0070\u0067\u0064\u006f\u006e");};_efg =0;if _eegc =w .WriteBit (int (_gdga .GBTemplate >>1)&0x01);_eegc !=nil {return _bgbc ,_gfe .Wrap (_eegc ,_fbe ,"f\u0069r\u0073\u0074\u0020\u0067\u0062\u0074\u0065\u006dp\u006c\u0061\u0074\u0065 b\u0069\u0074");
};if _eegc =w .WriteBit (int (_gdga .GBTemplate )&0x01);_eegc !=nil {return _bgbc ,_gfe .Wrap (_eegc ,_fbe ,"s\u0065\u0063\u006f\u006ed \u0067b\u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u0062\u0069\u0074");};if _gdga .UseMMR {_efg =1;};if _eegc =w .WriteBit (_efg );
_eegc !=nil {return _bgbc ,_gfe .Wrap (_eegc ,_fbe ,"u\u0073\u0065\u0020\u004d\u004d\u0052\u0020\u0062\u0069\u0074");};_bgbc ++;if _efag ,_eegc =_gdga .writeGBAtPixels (w );_eegc !=nil {return _bgbc ,_gfe .Wrap (_eegc ,_fbe ,"");};_bgbc +=_efag ;_dbcg :=_fd .New ();
if _eegc =_dbcg .EncodeBitmap (_gdga .Bitmap ,_gdga .IsTPGDon );_eegc !=nil {return _bgbc ,_gfe .Wrap (_eegc ,_fbe ,"");};_dbcg .Final ();var _gaaf int64 ;if _gaaf ,_eegc =_dbcg .WriteTo (w );_eegc !=nil {return _bgbc ,_gfe .Wrap (_eegc ,_fbe ,"");};_bgbc +=int (_gaaf );
return _bgbc ,nil ;};func (_eeb *GenericRefinementRegion )readAtPixels ()error {_eeb .GrAtX =make ([]int8 ,2);_eeb .GrAtY =make ([]int8 ,2);_gggf ,_cbfd :=_eeb ._fe .ReadByte ();if _cbfd !=nil {return _cbfd ;};_eeb .GrAtX [0]=int8 (_gggf );_gggf ,_cbfd =_eeb ._fe .ReadByte ();
if _cbfd !=nil {return _cbfd ;};_eeb .GrAtY [0]=int8 (_gggf );_gggf ,_cbfd =_eeb ._fe .ReadByte ();if _cbfd !=nil {return _cbfd ;};_eeb .GrAtX [1]=int8 (_gggf );_gggf ,_cbfd =_eeb ._fe .ReadByte ();if _cbfd !=nil {return _cbfd ;};_eeb .GrAtY [1]=int8 (_gggf );
return nil ;};func (_cc *GenericRefinementRegion )decodeSLTP ()(int ,error ){_cc .Template .setIndex (_cc ._bf );return _cc ._aeaf .DecodeBit (_cc ._bf );};type GenericRefinementRegion struct{_ace templater ;_be templater ;_fe *_de .Reader ;_aea *Header ;
RegionInfo *RegionSegment ;IsTPGROn bool ;TemplateID int8 ;Template templater ;GrAtX []int8 ;GrAtY []int8 ;RegionBitmap *_bgg .Bitmap ;ReferenceBitmap *_bgg .Bitmap ;ReferenceDX int32 ;ReferenceDY int32 ;_aeaf *_ad .Decoder ;_bf *_ad .DecoderStats ;_db bool ;
_da []bool ;};func (_bfd *GenericRefinementRegion )decodeTypicalPredictedLineTemplate0 (_ebb ,_cga ,_ec ,_bgb ,_gdb ,_ef ,_gb ,_gef ,_ddf int )error {var (_gga ,_efa ,_ffe ,_fdd ,_ede ,_cgf int ;_ccb byte ;_daf error ;);if _ebb > 0{_ccb ,_daf =_bfd .RegionBitmap .GetByte (_gb -_ec );
if _daf !=nil {return _daf ;};_ffe =int (_ccb );};if _gef > 0&&_gef <=_bfd .ReferenceBitmap .Height {_ccb ,_daf =_bfd .ReferenceBitmap .GetByte (_ddf -_bgb +_ef );if _daf !=nil {return _daf ;};_fdd =int (_ccb )<<4;};if _gef >=0&&_gef < _bfd .ReferenceBitmap .Height {_ccb ,_daf =_bfd .ReferenceBitmap .GetByte (_ddf +_ef );
if _daf !=nil {return _daf ;};_ede =int (_ccb )<<1;};if _gef > -2&&_gef < _bfd .ReferenceBitmap .Height -1{_ccb ,_daf =_bfd .ReferenceBitmap .GetByte (_ddf +_bgb +_ef );if _daf !=nil {return _daf ;};_cgf =int (_ccb );};_gga =((_ffe >>5)&0x6)|((_cgf >>2)&0x30)|(_ede &0x180)|(_fdd &0xc00);
var _gcda int ;for _ddb :=0;_ddb < _gdb ;_ddb =_gcda {var _bca int ;_gcda =_ddb +8;var _fgf int ;if _fgf =_cga -_ddb ;_fgf > 8{_fgf =8;};_cfb :=_gcda < _cga ;_cdf :=_gcda < _bfd .ReferenceBitmap .Width ;_gdg :=_ef +1;if _ebb > 0{_ccb =0;if _cfb {_ccb ,_daf =_bfd .RegionBitmap .GetByte (_gb -_ec +1);
if _daf !=nil {return _daf ;};};_ffe =(_ffe <<8)|int (_ccb );};if _gef > 0&&_gef <=_bfd .ReferenceBitmap .Height {var _dgg int ;if _cdf {_ccb ,_daf =_bfd .ReferenceBitmap .GetByte (_ddf -_bgb +_gdg );if _daf !=nil {return _daf ;};_dgg =int (_ccb )<<4;};
_fdd =(_fdd <<8)|_dgg ;};if _gef >=0&&_gef < _bfd .ReferenceBitmap .Height {var _dfe int ;if _cdf {_ccb ,_daf =_bfd .ReferenceBitmap .GetByte (_ddf +_gdg );if _daf !=nil {return _daf ;};_dfe =int (_ccb )<<1;};_ede =(_ede <<8)|_dfe ;};if _gef > -2&&_gef < (_bfd .ReferenceBitmap .Height -1){_ccb =0;
if _cdf {_ccb ,_daf =_bfd .ReferenceBitmap .GetByte (_ddf +_bgb +_gdg );if _daf !=nil {return _daf ;};};_cgf =(_cgf <<8)|int (_ccb );};for _dee :=0;_dee < _fgf ;_dee ++{var _bdc int ;_cbf :=false ;_gge :=(_gga >>4)&0x1ff;if _gge ==0x1ff{_cbf =true ;_bdc =1;
}else if _gge ==0x00{_cbf =true ;};if !_cbf {if _bfd ._db {_efa =_bfd .overrideAtTemplate0 (_gga ,_ddb +_dee ,_ebb ,_bca ,_dee );_bfd ._bf .SetIndex (int32 (_efa ));}else {_bfd ._bf .SetIndex (int32 (_gga ));};_bdc ,_daf =_bfd ._aeaf .DecodeBit (_bfd ._bf );
if _daf !=nil {return _daf ;};};_ggf :=uint (7-_dee );_bca |=_bdc <<_ggf ;_gga =((_gga &0xdb6)<<1)|_bdc |(_ffe >>_ggf +5)&0x002|((_cgf >>_ggf +2)&0x010)|((_ede >>_ggf )&0x080)|((_fdd >>_ggf )&0x400);};_daf =_bfd .RegionBitmap .SetByte (_gb ,byte (_bca ));
if _daf !=nil {return _daf ;};_gb ++;_ddf ++;};return nil ;};func (_eaff *PageInformationSegment )CombinationOperatorOverrideAllowed ()bool {return _eaff ._gegc };func (_eeg *GenericRefinementRegion )overrideAtTemplate0 (_aag ,_ea ,_dcc ,_ffg ,_gce int )int {if _eeg ._da [0]{_aag &=0xfff7;
if _eeg .GrAtY [0]==0&&int (_eeg .GrAtX [0])>=-_gce {_aag |=(_ffg >>uint (7-(_gce +int (_eeg .GrAtX [0])))&0x1)<<3;}else {_aag |=_eeg .getPixel (_eeg .RegionBitmap ,_ea +int (_eeg .GrAtX [0]),_dcc +int (_eeg .GrAtY [0]))<<3;};};if _eeg ._da [1]{_aag &=0xefff;
if _eeg .GrAtY [1]==0&&int (_eeg .GrAtX [1])>=-_gce {_aag |=(_ffg >>uint (7-(_gce +int (_eeg .GrAtX [1])))&0x1)<<12;}else {_aag |=_eeg .getPixel (_eeg .ReferenceBitmap ,_ea +int (_eeg .GrAtX [1]),_dcc +int (_eeg .GrAtY [1]));};};return _aag ;};func (_ac *EndOfStripe )parseHeader ()error {_dd ,_fb :=_ac ._e .ReadBits (32);
if _fb !=nil {return _fb ;};_ac ._eg =int (_dd &_g .MaxInt32 );return nil ;};func (_edbc *TextRegion )encodeFlags (_eabb _de .BinaryWriter )(_gbefb int ,_agaff error ){const _cagb ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _agaff =_eabb .WriteBit (int (_edbc .SbrTemplate ));
_agaff !=nil {return _gbefb ,_gfe .Wrap (_agaff ,_cagb ,"s\u0062\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};if _ ,_agaff =_eabb .WriteBits (uint64 (_edbc .SbDsOffset ),5);_agaff !=nil {return _gbefb ,_gfe .Wrap (_agaff ,_cagb ,"\u0073\u0062\u0044\u0073\u004f\u0066\u0066\u0073\u0065\u0074");
};if _agaff =_eabb .WriteBit (int (_edbc .DefaultPixel ));_agaff !=nil {return _gbefb ,_gfe .Wrap (_agaff ,_cagb ,"\u0044\u0065\u0066a\u0075\u006c\u0074\u0050\u0069\u0078\u0065\u006c");};if _ ,_agaff =_eabb .WriteBits (uint64 (_edbc .CombinationOperator ),2);
_agaff !=nil {return _gbefb ,_gfe .Wrap (_agaff ,_cagb ,"\u0043\u006f\u006d\u0062in\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072");};if _agaff =_eabb .WriteBit (int (_edbc .IsTransposed ));_agaff !=nil {return _gbefb ,_gfe .Wrap (_agaff ,_cagb ,"\u0069\u0073\u0020\u0074\u0072\u0061\u006e\u0073\u0070\u006f\u0073\u0065\u0064");
};if _ ,_agaff =_eabb .WriteBits (uint64 (_edbc .ReferenceCorner ),2);_agaff !=nil {return _gbefb ,_gfe .Wrap (_agaff ,_cagb ,"\u0072\u0065f\u0065\u0072\u0065n\u0063\u0065\u0020\u0063\u006f\u0072\u006e\u0065\u0072");};if _ ,_agaff =_eabb .WriteBits (uint64 (_edbc .LogSBStrips ),2);
_agaff !=nil {return _gbefb ,_gfe .Wrap (_agaff ,_cagb ,"L\u006f\u0067\u0053\u0042\u0053\u0074\u0072\u0069\u0070\u0073");};var _bcbg int ;if _edbc .UseRefinement {_bcbg =1;};if _agaff =_eabb .WriteBit (_bcbg );_agaff !=nil {return _gbefb ,_gfe .Wrap (_agaff ,_cagb ,"\u0075\u0073\u0065\u0020\u0072\u0065\u0066\u0069\u006ee\u006d\u0065\u006e\u0074");
};_bcbg =0;if _edbc .IsHuffmanEncoded {_bcbg =1;};if _agaff =_eabb .WriteBit (_bcbg );_agaff !=nil {return _gbefb ,_gfe .Wrap (_agaff ,_cagb ,"u\u0073\u0065\u0020\u0068\u0075\u0066\u0066\u006d\u0061\u006e");};_gbefb =2;return _gbefb ,nil ;};func (_agb *HalftoneRegion )GetPatterns ()([]*_bgg .Bitmap ,error ){var (_bega []*_bgg .Bitmap ;
_gbbg error ;);for _ ,_eafge :=range _agb ._fac .RTSegments {var _edgg Segmenter ;_edgg ,_gbbg =_eafge .GetSegmentData ();if _gbbg !=nil {_fc .Log .Debug ("\u0047e\u0074\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061 \u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025v",_gbbg );
return nil ,_gbbg ;};_ebcg ,_fbeb :=_edgg .(*PatternDictionary );if !_fbeb {_gbbg =_aa .Errorf ("\u0072e\u006c\u0061t\u0065\u0064\u0020\u0073e\u0067\u006d\u0065n\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0070at\u0074\u0065\u0072n\u0020\u0064i\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u003a \u0025\u0054",_edgg );
return nil ,_gbbg ;};var _fgeg []*_bgg .Bitmap ;_fgeg ,_gbbg =_ebcg .GetDictionary ();if _gbbg !=nil {_fc .Log .Debug ("\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_gbbg );
return nil ,_gbbg ;};_bega =append (_bega ,_fgeg ...);};return _bega ,nil ;};var _ templater =&template0 {};func (_ebab *TableSegment )HtRS ()int32 {return _ebab ._dccea };func (_dcbe *RegionSegment )Encode (w _de .BinaryWriter )(_eegdg int ,_cdeg error ){const _cbcf ="R\u0065g\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065n\u0074\u002e\u0045\u006eco\u0064\u0065";
_bcab :=make ([]byte ,4);_bg .BigEndian .PutUint32 (_bcab ,_dcbe .BitmapWidth );_eegdg ,_cdeg =w .Write (_bcab );if _cdeg !=nil {return 0,_gfe .Wrap (_cdeg ,_cbcf ,"\u0057\u0069\u0064t\u0068");};_bg .BigEndian .PutUint32 (_bcab ,_dcbe .BitmapHeight );var _fadf int ;
_fadf ,_cdeg =w .Write (_bcab );if _cdeg !=nil {return 0,_gfe .Wrap (_cdeg ,_cbcf ,"\u0048\u0065\u0069\u0067\u0068\u0074");};_eegdg +=_fadf ;_bg .BigEndian .PutUint32 (_bcab ,_dcbe .XLocation );_fadf ,_cdeg =w .Write (_bcab );if _cdeg !=nil {return 0,_gfe .Wrap (_cdeg ,_cbcf ,"\u0058L\u006f\u0063\u0061\u0074\u0069\u006fn");
};_eegdg +=_fadf ;_bg .BigEndian .PutUint32 (_bcab ,_dcbe .YLocation );_fadf ,_cdeg =w .Write (_bcab );if _cdeg !=nil {return 0,_gfe .Wrap (_cdeg ,_cbcf ,"\u0059L\u006f\u0063\u0061\u0074\u0069\u006fn");};_eegdg +=_fadf ;if _cdeg =w .WriteByte (byte (_dcbe .CombinaionOperator )&0x07);
_cdeg !=nil {return 0,_gfe .Wrap (_cdeg ,_cbcf ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};_eegdg ++;return _eegdg ,nil ;};func (_ab *GenericRefinementRegion )decodeTypicalPredictedLineTemplate1 (_fec ,_ag ,_gcc ,_cda ,_ecg ,_gee ,_fbg ,_acef ,_aaa int )(_gfg error ){var (_cea ,_ggc int ;
_egd ,_fde int ;_eba ,_dae int ;_gdgb byte ;);if _fec > 0{_gdgb ,_gfg =_ab .RegionBitmap .GetByte (_fbg -_gcc );if _gfg !=nil {return ;};_egd =int (_gdgb );};if _acef > 0&&_acef <=_ab .ReferenceBitmap .Height {_gdgb ,_gfg =_ab .ReferenceBitmap .GetByte (_aaa -_cda +_gee );
if _gfg !=nil {return ;};_fde =int (_gdgb )<<2;};if _acef >=0&&_acef < _ab .ReferenceBitmap .Height {_gdgb ,_gfg =_ab .ReferenceBitmap .GetByte (_aaa +_gee );if _gfg !=nil {return ;};_eba =int (_gdgb );};if _acef > -2&&_acef < _ab .ReferenceBitmap .Height -1{_gdgb ,_gfg =_ab .ReferenceBitmap .GetByte (_aaa +_cda +_gee );
if _gfg !=nil {return ;};_dae =int (_gdgb );};_cea =((_egd >>5)&0x6)|((_dae >>2)&0x30)|(_eba &0xc0)|(_fde &0x200);_ggc =((_dae >>2)&0x70)|(_eba &0xc0)|(_fde &0x700);var _aaad int ;for _cgg :=0;_cgg < _ecg ;_cgg =_aaad {var (_gff int ;_gaf int ;);_aaad =_cgg +8;
if _gff =_ag -_cgg ;_gff > 8{_gff =8;};_bcaf :=_aaad < _ag ;_egf :=_aaad < _ab .ReferenceBitmap .Width ;_cfd :=_gee +1;if _fec > 0{_gdgb =0;if _bcaf {_gdgb ,_gfg =_ab .RegionBitmap .GetByte (_fbg -_gcc +1);if _gfg !=nil {return ;};};_egd =(_egd <<8)|int (_gdgb );
};if _acef > 0&&_acef <=_ab .ReferenceBitmap .Height {var _bag int ;if _egf {_gdgb ,_gfg =_ab .ReferenceBitmap .GetByte (_aaa -_cda +_cfd );if _gfg !=nil {return ;};_bag =int (_gdgb )<<2;};_fde =(_fde <<8)|_bag ;};if _acef >=0&&_acef < _ab .ReferenceBitmap .Height {_gdgb =0;
if _egf {_gdgb ,_gfg =_ab .ReferenceBitmap .GetByte (_aaa +_cfd );if _gfg !=nil {return ;};};_eba =(_eba <<8)|int (_gdgb );};if _acef > -2&&_acef < (_ab .ReferenceBitmap .Height -1){_gdgb =0;if _egf {_gdgb ,_gfg =_ab .ReferenceBitmap .GetByte (_aaa +_cda +_cfd );
if _gfg !=nil {return ;};};_dae =(_dae <<8)|int (_gdgb );};for _aga :=0;_aga < _gff ;_aga ++{var _dgb int ;_gffd :=(_ggc >>4)&0x1ff;switch _gffd {case 0x1ff:_dgb =1;case 0x00:_dgb =0;default:_ab ._bf .SetIndex (int32 (_cea ));_dgb ,_gfg =_ab ._aeaf .DecodeBit (_ab ._bf );
if _gfg !=nil {return ;};};_edd :=uint (7-_aga );_gaf |=_dgb <<_edd ;_cea =((_cea &0x0d6)<<1)|_dgb |(_egd >>_edd +5)&0x002|((_dae >>_edd +2)&0x010)|((_eba >>_edd )&0x040)|((_fde >>_edd )&0x200);_ggc =((_ggc &0xdb)<<1)|((_dae >>_edd +2)&0x010)|((_eba >>_edd )&0x080)|((_fde >>_edd )&0x400);
};_gfg =_ab .RegionBitmap .SetByte (_fbg ,byte (_gaf ));if _gfg !=nil {return ;};_fbg ++;_aaa ++;};return nil ;};type PageInformationSegment struct{_cfcb *_de .Reader ;PageBMHeight int ;PageBMWidth int ;ResolutionX int ;ResolutionY int ;_gegc bool ;_cdcb _bgg .CombinationOperator ;
_geaa bool ;DefaultPixelValue uint8 ;_bbc bool ;IsLossless bool ;IsStripe bool ;MaxStripeSize uint16 ;};type TableSegment struct{_gec *_de .Reader ;_gbca int32 ;_cdce int32 ;_dccea int32 ;_cegcb int32 ;_ggaa int32 ;};func (_egcc *HalftoneRegion )shiftAndFill (_fdgg int )int {_fdgg >>=8;
if _fdgg < 0{_gedg :=int (_g .Log (float64 (_cggcg (_fdgg )))/_g .Log (2));_ecca :=31-_gedg ;for _ffae :=1;_ffae < _ecca ;_ffae ++{_fdgg |=1<<uint (31-_ffae );};};return _fdgg ;};func (_agaf *Header )readHeaderLength (_bdab *_de .Reader ,_eca int64 ){_agaf .HeaderLength =_bdab .AbsolutePosition ()-_eca ;
};const (ORandom OrganizationType =iota ;OSequential ;);func (_eddg *PatternDictionary )extractPatterns (_bbgb *_bgg .Bitmap )error {var _fbbe int ;_eda :=make ([]*_bgg .Bitmap ,_eddg .GrayMax +1);for _fbbe <=int (_eddg .GrayMax ){_gcdf :=int (_eddg .HdpWidth )*_fbbe ;
_gfc :=_b .Rect (_gcdf ,0,_gcdf +int (_eddg .HdpWidth ),int (_eddg .HdpHeight ));_dcgf ,_edc :=_bgg .Extract (_gfc ,_bbgb );if _edc !=nil {return _edc ;};_eda [_fbbe ]=_dcgf ;_fbbe ++;};_eddg .Patterns =_eda ;return nil ;};func (_cagda *TextRegion )setContexts (_cabcg *_ad .DecoderStats ,_afcec *_ad .DecoderStats ,_dega *_ad .DecoderStats ,_adcf *_ad .DecoderStats ,_cgffe *_ad .DecoderStats ,_dgda *_ad .DecoderStats ,_dedbd *_ad .DecoderStats ,_affg *_ad .DecoderStats ,_fgb *_ad .DecoderStats ,_edfa *_ad .DecoderStats ){_cagda ._cgdd =_afcec ;
_cagda ._gfecc =_dega ;_cagda ._fcgb =_adcf ;_cagda ._ggbff =_cgffe ;_cagda ._efde =_dedbd ;_cagda ._gbde =_affg ;_cagda ._acdfa =_dgda ;_cagda ._cfgg =_fgb ;_cagda ._gdba =_edfa ;_cagda ._fabce =_cabcg ;};type Regioner interface{GetRegionBitmap ()(*_bgg .Bitmap ,error );
GetRegionInfo ()*RegionSegment ;};func (_aceg *GenericRegion )overrideAtTemplate0b (_ebe ,_fbcf ,_egfe ,_edeg ,_eabg ,_cbgg int )int {if _aceg .GBAtOverride [0]{_ebe &=0xFFFD;if _aceg .GBAtY [0]==0&&_aceg .GBAtX [0]>=-int8 (_eabg ){_ebe |=(_edeg >>uint (int8 (_cbgg )-_aceg .GBAtX [0]&0x1))<<1;
}else {_ebe |=int (_aceg .getPixel (_fbcf +int (_aceg .GBAtX [0]),_egfe +int (_aceg .GBAtY [0])))<<1;};};if _aceg .GBAtOverride [1]{_ebe &=0xDFFF;if _aceg .GBAtY [1]==0&&_aceg .GBAtX [1]>=-int8 (_eabg ){_ebe |=(_edeg >>uint (int8 (_cbgg )-_aceg .GBAtX [1]&0x1))<<13;
}else {_ebe |=int (_aceg .getPixel (_fbcf +int (_aceg .GBAtX [1]),_egfe +int (_aceg .GBAtY [1])))<<13;};};if _aceg .GBAtOverride [2]{_ebe &=0xFDFF;if _aceg .GBAtY [2]==0&&_aceg .GBAtX [2]>=-int8 (_eabg ){_ebe |=(_edeg >>uint (int8 (_cbgg )-_aceg .GBAtX [2]&0x1))<<9;
}else {_ebe |=int (_aceg .getPixel (_fbcf +int (_aceg .GBAtX [2]),_egfe +int (_aceg .GBAtY [2])))<<9;};};if _aceg .GBAtOverride [3]{_ebe &=0xBFFF;if _aceg .GBAtY [3]==0&&_aceg .GBAtX [3]>=-int8 (_eabg ){_ebe |=(_edeg >>uint (int8 (_cbgg )-_aceg .GBAtX [3]&0x1))<<14;
}else {_ebe |=int (_aceg .getPixel (_fbcf +int (_aceg .GBAtX [3]),_egfe +int (_aceg .GBAtY [3])))<<14;};};if _aceg .GBAtOverride [4]{_ebe &=0xEFFF;if _aceg .GBAtY [4]==0&&_aceg .GBAtX [4]>=-int8 (_eabg ){_ebe |=(_edeg >>uint (int8 (_cbgg )-_aceg .GBAtX [4]&0x1))<<12;
}else {_ebe |=int (_aceg .getPixel (_fbcf +int (_aceg .GBAtX [4]),_egfe +int (_aceg .GBAtY [4])))<<12;};};if _aceg .GBAtOverride [5]{_ebe &=0xFFDF;if _aceg .GBAtY [5]==0&&_aceg .GBAtX [5]>=-int8 (_eabg ){_ebe |=(_edeg >>uint (int8 (_cbgg )-_aceg .GBAtX [5]&0x1))<<5;
}else {_ebe |=int (_aceg .getPixel (_fbcf +int (_aceg .GBAtX [5]),_egfe +int (_aceg .GBAtY [5])))<<5;};};if _aceg .GBAtOverride [6]{_ebe &=0xFFFB;if _aceg .GBAtY [6]==0&&_aceg .GBAtX [6]>=-int8 (_eabg ){_ebe |=(_edeg >>uint (int8 (_cbgg )-_aceg .GBAtX [6]&0x1))<<2;
}else {_ebe |=int (_aceg .getPixel (_fbcf +int (_aceg .GBAtX [6]),_egfe +int (_aceg .GBAtY [6])))<<2;};};if _aceg .GBAtOverride [7]{_ebe &=0xFFF7;if _aceg .GBAtY [7]==0&&_aceg .GBAtX [7]>=-int8 (_eabg ){_ebe |=(_edeg >>uint (int8 (_cbgg )-_aceg .GBAtX [7]&0x1))<<3;
}else {_ebe |=int (_aceg .getPixel (_fbcf +int (_aceg .GBAtX [7]),_egfe +int (_aceg .GBAtY [7])))<<3;};};if _aceg .GBAtOverride [8]{_ebe &=0xF7FF;if _aceg .GBAtY [8]==0&&_aceg .GBAtX [8]>=-int8 (_eabg ){_ebe |=(_edeg >>uint (int8 (_cbgg )-_aceg .GBAtX [8]&0x1))<<11;
}else {_ebe |=int (_aceg .getPixel (_fbcf +int (_aceg .GBAtX [8]),_egfe +int (_aceg .GBAtY [8])))<<11;};};if _aceg .GBAtOverride [9]{_ebe &=0xFFEF;if _aceg .GBAtY [9]==0&&_aceg .GBAtX [9]>=-int8 (_eabg ){_ebe |=(_edeg >>uint (int8 (_cbgg )-_aceg .GBAtX [9]&0x1))<<4;
}else {_ebe |=int (_aceg .getPixel (_fbcf +int (_aceg .GBAtX [9]),_egfe +int (_aceg .GBAtY [9])))<<4;};};if _aceg .GBAtOverride [10]{_ebe &=0x7FFF;if _aceg .GBAtY [10]==0&&_aceg .GBAtX [10]>=-int8 (_eabg ){_ebe |=(_edeg >>uint (int8 (_cbgg )-_aceg .GBAtX [10]&0x1))<<15;
}else {_ebe |=int (_aceg .getPixel (_fbcf +int (_aceg .GBAtX [10]),_egfe +int (_aceg .GBAtY [10])))<<15;};};if _aceg .GBAtOverride [11]{_ebe &=0xFDFF;if _aceg .GBAtY [11]==0&&_aceg .GBAtX [11]>=-int8 (_eabg ){_ebe |=(_edeg >>uint (int8 (_cbgg )-_aceg .GBAtX [11]&0x1))<<10;
}else {_ebe |=int (_aceg .getPixel (_fbcf +int (_aceg .GBAtX [11]),_egfe +int (_aceg .GBAtY [11])))<<10;};};return _ebe ;};func (_fcfc *SymbolDictionary )huffDecodeRefAggNInst ()(int64 ,error ){if !_fcfc .SdHuffAggInstanceSelection {_gcb ,_ddec :=_bc .GetStandardTable (1);
if _ddec !=nil {return 0,_ddec ;};return _gcb .Decode (_fcfc ._acdf );};if _fcfc ._dcad ==nil {var (_gbcf int ;_gccde error ;);if _fcfc .SdHuffDecodeHeightSelection ==3{_gbcf ++;};if _fcfc .SdHuffDecodeWidthSelection ==3{_gbcf ++;};if _fcfc .SdHuffBMSizeSelection ==3{_gbcf ++;
};_fcfc ._dcad ,_gccde =_fcfc .getUserTable (_gbcf );if _gccde !=nil {return 0,_gccde ;};};return _fcfc ._dcad .Decode (_fcfc ._acdf );};func (_gegcb *PageInformationSegment )parseHeader ()(_afb error ){_fc .Log .Trace ("\u005b\u0050\u0061\u0067\u0065I\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067m\u0065\u006e\u0074\u005d\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u002e\u002e");
defer func (){var _degbe ="[\u0050\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072m\u0061\u0074\u0069\u006f\u006e\u0053\u0065gm\u0065\u006e\u0074\u005d \u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065ad\u0065\u0072 \u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064";
if _afb !=nil {_degbe +="\u0020\u0077\u0069t\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u0020"+_afb .Error ();}else {_degbe +="\u0020\u0073\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079";};_fc .Log .Trace (_degbe );}();if _afb =_gegcb .readWidthAndHeight ();
_afb !=nil {return _afb ;};if _afb =_gegcb .readResolution ();_afb !=nil {return _afb ;};_ ,_afb =_gegcb ._cfcb .ReadBit ();if _afb !=nil {return _afb ;};if _afb =_gegcb .readCombinationOperatorOverrideAllowed ();_afb !=nil {return _afb ;};if _afb =_gegcb .readRequiresAuxiliaryBuffer ();
_afb !=nil {return _afb ;};if _afb =_gegcb .readCombinationOperator ();_afb !=nil {return _afb ;};if _afb =_gegcb .readDefaultPixelValue ();_afb !=nil {return _afb ;};if _afb =_gegcb .readContainsRefinement ();_afb !=nil {return _afb ;};if _afb =_gegcb .readIsLossless ();
_afb !=nil {return _afb ;};if _afb =_gegcb .readIsStriped ();_afb !=nil {return _afb ;};if _afb =_gegcb .readMaxStripeSize ();_afb !=nil {return _afb ;};if _afb =_gegcb .checkInput ();_afb !=nil {return _afb ;};_fc .Log .Trace ("\u0025\u0073",_gegcb );
return nil ;};func (_eef *GenericRegion )copyLineAbove (_fdcg int )error {_ggcd :=_fdcg *_eef .Bitmap .RowStride ;_dcge :=_ggcd -_eef .Bitmap .RowStride ;for _efb :=0;_efb < _eef .Bitmap .RowStride ;_efb ++{_dfd ,_cddc :=_eef .Bitmap .GetByte (_dcge );
if _cddc !=nil {return _cddc ;};_dcge ++;if _cddc =_eef .Bitmap .SetByte (_ggcd ,_dfd );_cddc !=nil {return _cddc ;};_ggcd ++;};return nil ;};func (_ffce *SymbolDictionary )getUserTable (_gbcg int )(_bc .Tabler ,error ){var _caaf int ;for _ ,_abcf :=range _ffce .Header .RTSegments {if _abcf .Type ==53{if _caaf ==_gbcg {_gbbfd ,_dfebe :=_abcf .GetSegmentData ();
if _dfebe !=nil {return nil ,_dfebe ;};_cbec :=_gbbfd .(_bc .BasicTabler );return _bc .NewEncodedTable (_cbec );};_caaf ++;};};return nil ,nil ;};func (_fdgb *GenericRegion )setOverrideFlag (_cdebc int ){_fdgb .GBAtOverride [_cdebc ]=true ;_fdgb ._cgff =true ;
};func (_agef *TextRegion )readHuffmanFlags ()error {var (_acfbe int ;_efba uint64 ;_cdaeg error ;);_ ,_cdaeg =_agef ._geff .ReadBit ();if _cdaeg !=nil {return _cdaeg ;};_acfbe ,_cdaeg =_agef ._geff .ReadBit ();if _cdaeg !=nil {return _cdaeg ;};_agef .SbHuffRSize =int8 (_acfbe );
_efba ,_cdaeg =_agef ._geff .ReadBits (2);if _cdaeg !=nil {return _cdaeg ;};_agef .SbHuffRDY =int8 (_efba )&0xf;_efba ,_cdaeg =_agef ._geff .ReadBits (2);if _cdaeg !=nil {return _cdaeg ;};_agef .SbHuffRDX =int8 (_efba )&0xf;_efba ,_cdaeg =_agef ._geff .ReadBits (2);
if _cdaeg !=nil {return _cdaeg ;};_agef .SbHuffRDHeight =int8 (_efba )&0xf;_efba ,_cdaeg =_agef ._geff .ReadBits (2);if _cdaeg !=nil {return _cdaeg ;};_agef .SbHuffRDWidth =int8 (_efba )&0xf;_efba ,_cdaeg =_agef ._geff .ReadBits (2);if _cdaeg !=nil {return _cdaeg ;
};_agef .SbHuffDT =int8 (_efba )&0xf;_efba ,_cdaeg =_agef ._geff .ReadBits (2);if _cdaeg !=nil {return _cdaeg ;};_agef .SbHuffDS =int8 (_efba )&0xf;_efba ,_cdaeg =_agef ._geff .ReadBits (2);if _cdaeg !=nil {return _cdaeg ;};_agef .SbHuffFS =int8 (_efba )&0xf;
return nil ;};func (_bace *TextRegion )GetRegionInfo ()*RegionSegment {return _bace .RegionInfo };func (_bfed *TextRegion )decodeIds ()(int64 ,error ){const _becb ="\u0064e\u0063\u006f\u0064\u0065\u0049\u0064s";if _bfed .IsHuffmanEncoded {if _bfed .SbHuffDS ==3{if _bfed ._efga ==nil {_fded :=0;
if _bfed .SbHuffFS ==3{_fded ++;};var _dbd error ;_bfed ._efga ,_dbd =_bfed .getUserTable (_fded );if _dbd !=nil {return 0,_gfe .Wrap (_dbd ,_becb ,"");};};return _bfed ._efga .Decode (_bfed ._geff );};_baa ,_cfef :=_bc .GetStandardTable (8+int (_bfed .SbHuffDS ));
if _cfef !=nil {return 0,_gfe .Wrap (_cfef ,_becb ,"");};return _baa .Decode (_bfed ._geff );};_cfdf ,_gfgc :=_bfed ._ddge .DecodeInt (_bfed ._fcgb );if _gfgc !=nil {return 0,_gfe .Wrap (_gfgc ,_becb ,"\u0063\u0078\u0049\u0041\u0044\u0053");};return int64 (_cfdf ),nil ;
};func (_gdf *GenericRefinementRegion )String ()string {_ffdg :=&_a .Builder {};_ffdg .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_ffdg .WriteString (_gdf .RegionInfo .String ()+"\u000a");_ffdg .WriteString (_aa .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0052\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_gdf .IsTPGROn ));
_ffdg .WriteString (_aa .Sprintf ("\u0009-\u0020T\u0065\u006d\u0070\u006c\u0061t\u0065\u0049D\u003a\u0020\u0025\u0076\u000a",_gdf .TemplateID ));_ffdg .WriteString (_aa .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_gdf .GrAtX ));
_ffdg .WriteString (_aa .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_gdf .GrAtY ));_ffdg .WriteString (_aa .Sprintf ("\u0009-\u0020R\u0065\u0066\u0065\u0072\u0065n\u0063\u0065D\u0058\u0020\u0025\u0076\u000a",_gdf .ReferenceDX ));
_ffdg .WriteString (_aa .Sprintf ("\u0009\u002d\u0020\u0052ef\u0065\u0072\u0065\u006e\u0063\u0044\u0065\u0059\u003a\u0020\u0025\u0076\u000a",_gdf .ReferenceDY ));return _ffdg .String ();};func (_fgee *PatternDictionary )setGbAtPixels (){if _fgee .HDTemplate ==0{_fgee .GBAtX =make ([]int8 ,4);
_fgee .GBAtY =make ([]int8 ,4);_fgee .GBAtX [0]=-int8 (_fgee .HdpWidth );_fgee .GBAtY [0]=0;_fgee .GBAtX [1]=-3;_fgee .GBAtY [1]=-1;_fgee .GBAtX [2]=2;_fgee .GBAtY [2]=-2;_fgee .GBAtX [3]=-2;_fgee .GBAtY [3]=-2;}else {_fgee .GBAtX =[]int8 {-int8 (_fgee .HdpWidth )};
_fgee .GBAtY =[]int8 {0};};};func (_acefe *RegionSegment )Size ()int {return 17};func (_dgcg *SymbolDictionary )checkInput ()error {if _dgcg .SdHuffDecodeHeightSelection ==2{_fc .Log .Debug ("\u0053\u0079\u006d\u0062\u006fl\u0020\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u0053e\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0070\u0065r\u006d\u0069\u0074\u0074\u0065\u0064",_dgcg .SdHuffDecodeHeightSelection );
};if _dgcg .SdHuffDecodeWidthSelection ==2{_fc .Log .Debug ("\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0057\u0069\u0064t\u0068\u0020\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061l\u0075\u0065\u0020\u006e\u006f\u0074 \u0070\u0065r\u006d\u0069t\u0074e\u0064",_dgcg .SdHuffDecodeWidthSelection );
};if _dgcg .IsHuffmanEncoded {if _dgcg .SdTemplate !=0{_fc .Log .Debug ("\u0053\u0044T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e \u0030\u0029",_dgcg .SdTemplate );
};if !_dgcg .UseRefinementAggregation {if !_dgcg .UseRefinementAggregation {if _dgcg ._bbgbg {_fc .Log .Debug ("\u0049\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074ex\u0074\u0052\u0065\u0074\u0061\u0069n\u0065\u0064\u0020\u003d\u0020\u0074\u0072\u0075\u0065\u0020\u0028\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0066\u0061\u006cs\u0065\u0029");
_dgcg ._bbgbg =false ;};if _dgcg ._dfgd {_fc .Log .Debug ("\u0069s\u0043\u006fd\u0069\u006e\u0067\u0043o\u006e\u0074\u0065x\u0074\u0055\u0073\u0065\u0064\u0020\u003d\u0020\u0074ru\u0065\u0020\u0028s\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020f\u0061\u006cs\u0065\u0029");
_dgcg ._dfgd =false ;};};};}else {if _dgcg .SdHuffBMSizeSelection !=0{_fc .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066B\u004d\u0053\u0069\u007a\u0065\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_dgcg .SdHuffBMSizeSelection =0;};if _dgcg .SdHuffDecodeWidthSelection !=0{_fc .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068\u0053\u0065\u006c\u0065\u0063\u0074\u0069o\u006e\u0020\u0073\u0068\u006fu\u006c\u0064 \u0062\u0065\u0020\u0030");
_dgcg .SdHuffDecodeWidthSelection =0;};if _dgcg .SdHuffDecodeHeightSelection !=0{_fc .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0048e\u0069\u0067\u0068\u0074\u0053\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_dgcg .SdHuffDecodeHeightSelection =0;};};if !_dgcg .UseRefinementAggregation {if _dgcg .SdrTemplate !=0{_fc .Log .Debug ("\u0053\u0044\u0052\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u003d\u0020\u0025\u0064\u0020\u0028s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_dgcg .SdrTemplate );
_dgcg .SdrTemplate =0;};};if !_dgcg .IsHuffmanEncoded ||!_dgcg .UseRefinementAggregation {if _dgcg .SdHuffAggInstanceSelection {_fc .Log .Debug ("\u0053d\u0048\u0075f\u0066\u0041\u0067g\u0049\u006e\u0073\u0074\u0061\u006e\u0063e\u0053\u0065\u006c\u0065\u0063\u0074i\u006f\u006e\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_dgcg .SdHuffAggInstanceSelection );
};};return nil ;};func (_cdg *GenericRefinementRegion )getPixel (_bbe *_bgg .Bitmap ,_cbb ,_age int )int {if _cbb < 0||_cbb >=_bbe .Width {return 0;};if _age < 0||_age >=_bbe .Height {return 0;};if _bbe .GetPixel (_cbb ,_age ){return 1;};return 0;};func (_bbde *template0 )setIndex (_ecgb *_ad .DecoderStats ){_ecgb .SetIndex (0x100)};
func (_eafga *HalftoneRegion )computeGrayScalePlanes (_ggdg []*_bgg .Bitmap ,_gfdb int )([][]int ,error ){_fedg :=make ([][]int ,_eafga .HGridHeight );for _adfb :=0;_adfb < len (_fedg );_adfb ++{_fedg [_adfb ]=make ([]int ,_eafga .HGridWidth );};for _aee :=0;
_aee < int (_eafga .HGridHeight );_aee ++{for _aegg :=0;_aegg < int (_eafga .HGridWidth );_aegg +=8{var _cgd int ;if _egdb :=int (_eafga .HGridWidth )-_aegg ;_egdb > 8{_cgd =8;}else {_cgd =_egdb ;};_bcec :=_ggdg [0].GetByteIndex (_aegg ,_aee );for _dbcb :=0;
_dbcb < _cgd ;_dbcb ++{_ggba :=_dbcb +_aegg ;_fedg [_aee ][_ggba ]=0;for _fdbf :=0;_fdbf < _gfdb ;_fdbf ++{_fadc ,_dgd :=_ggdg [_fdbf ].GetByte (_bcec );if _dgd !=nil {return nil ,_dgd ;};_daed :=_fadc >>uint (7-_ggba &7);_gaef :=_daed &1;_gded :=1<<uint (_fdbf );
_ccae :=int (_gaef )*_gded ;_fedg [_aee ][_ggba ]+=_ccae ;};};};};return _fedg ,nil ;};func (_cbd *GenericRefinementRegion )updateOverride ()error {if _cbd .GrAtX ==nil ||_cbd .GrAtY ==nil {return _gg .New ("\u0041\u0054\u0020\u0070\u0069\u0078\u0065\u006c\u0073\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");
};if len (_cbd .GrAtX )!=len (_cbd .GrAtY ){return _gg .New ("A\u0054\u0020\u0070\u0069xe\u006c \u0069\u006e\u0063\u006f\u006es\u0069\u0073\u0074\u0065\u006e\u0074");};_cbd ._da =make ([]bool ,len (_cbd .GrAtX ));switch _cbd .TemplateID {case 0:if _cbd .GrAtX [0]!=-1&&_cbd .GrAtY [0]!=-1{_cbd ._da [0]=true ;
_cbd ._db =true ;};if _cbd .GrAtX [1]!=-1&&_cbd .GrAtY [1]!=-1{_cbd ._da [1]=true ;_cbd ._db =true ;};case 1:_cbd ._db =false ;};return nil ;};func (_cccg *HalftoneRegion )GetRegionInfo ()*RegionSegment {return _cccg .RegionSegment };func (_cee *PageInformationSegment )readRequiresAuxiliaryBuffer ()error {_afdf ,_cagc :=_cee ._cfcb .ReadBit ();
if _cagc !=nil {return _cagc ;};if _afdf ==1{_cee ._geaa =true ;};return nil ;};func (_ca *GenericRefinementRegion )GetRegionInfo ()*RegionSegment {return _ca .RegionInfo };const (TSymbolDictionary Type =0;TIntermediateTextRegion Type =4;TImmediateTextRegion Type =6;
TImmediateLosslessTextRegion Type =7;TPatternDictionary Type =16;TIntermediateHalftoneRegion Type =20;TImmediateHalftoneRegion Type =22;TImmediateLosslessHalftoneRegion Type =23;TIntermediateGenericRegion Type =36;TImmediateGenericRegion Type =38;TImmediateLosslessGenericRegion Type =39;
TIntermediateGenericRefinementRegion Type =40;TImmediateGenericRefinementRegion Type =42;TImmediateLosslessGenericRefinementRegion Type =43;TPageInformation Type =48;TEndOfPage Type =49;TEndOfStrip Type =50;TEndOfFile Type =51;TProfiles Type =52;TTables Type =53;
TExtension Type =62;TBitmap Type =70;);func (_ed *GenericRefinementRegion )GetRegionBitmap ()(*_bgg .Bitmap ,error ){var _dg error ;_fc .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _dg !=nil {_fc .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0047\u0065\u0074R\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006dap\u0020\u0066a\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_dg );
}else {_fc .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _ed .RegionBitmap !=nil {return _ed .RegionBitmap ,nil ;};_cb :=0;if _ed .ReferenceBitmap ==nil {_ed .ReferenceBitmap ,_dg =_ed .getGrReference ();if _dg !=nil {return nil ,_dg ;};};if _ed ._aeaf ==nil {_ed ._aeaf ,_dg =_ad .New (_ed ._fe );if _dg !=nil {return nil ,_dg ;
};};if _ed ._bf ==nil {_ed ._bf =_ad .NewStats (8192,1);};_ed .RegionBitmap =_bgg .New (int (_ed .RegionInfo .BitmapWidth ),int (_ed .RegionInfo .BitmapHeight ));if _ed .TemplateID ==0{if _dg =_ed .updateOverride ();_dg !=nil {return nil ,_dg ;};};_gfb :=(_ed .RegionBitmap .Width +7)&-8;
var _cba int ;if _ed .IsTPGROn {_cba =int (-_ed .ReferenceDY )*_ed .ReferenceBitmap .RowStride ;};_ce :=_cba +1;for _bb :=0;_bb < _ed .RegionBitmap .Height ;_bb ++{if _ed .IsTPGROn {_ee ,_dc :=_ed .decodeSLTP ();if _dc !=nil {return nil ,_dc ;};_cb ^=_ee ;
};if _cb ==0{_dg =_ed .decodeOptimized (_bb ,_ed .RegionBitmap .Width ,_ed .RegionBitmap .RowStride ,_ed .ReferenceBitmap .RowStride ,_gfb ,_cba ,_ce );if _dg !=nil {return nil ,_dg ;};}else {_dg =_ed .decodeTypicalPredictedLine (_bb ,_ed .RegionBitmap .Width ,_ed .RegionBitmap .RowStride ,_ed .ReferenceBitmap .RowStride ,_gfb ,_cba );
if _dg !=nil {return nil ,_dg ;};};};return _ed .RegionBitmap ,nil ;};func (_cbgf *Header )readHeaderFlags ()error {const _acce ="\u0072e\u0061d\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006c\u0061\u0067\u0073";_bgfc ,_gdbfd :=_cbgf .Reader .ReadBit ();
if _gdbfd !=nil {return _gfe .Wrap (_gdbfd ,_acce ,"r\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067");};if _bgfc !=0{_cbgf .RetainFlag =true ;};_bgfc ,_gdbfd =_cbgf .Reader .ReadBit ();if _gdbfd !=nil {return _gfe .Wrap (_gdbfd ,_acce ,"\u0070\u0061g\u0065\u0020\u0061s\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e");
};if _bgfc !=0{_cbgf .PageAssociationFieldSize =true ;};_cggb ,_gdbfd :=_cbgf .Reader .ReadBits (6);if _gdbfd !=nil {return _gfe .Wrap (_gdbfd ,_acce ,"\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065");};_cbgf .Type =Type (int (_cggb ));
return nil ;};func (_dac *GenericRegion )readGBAtPixels (_geg int )error {const _ddd ="\u0072\u0065\u0061\u0064\u0047\u0042\u0041\u0074\u0050i\u0078\u0065\u006c\u0073";_dac .GBAtX =make ([]int8 ,_geg );_dac .GBAtY =make ([]int8 ,_geg );for _gbab :=0;_gbab < _geg ;
_gbab ++{_faa ,_gccd :=_dac ._cac .ReadByte ();if _gccd !=nil {return _gfe .Wrapf (_gccd ,_ddd ,"\u0058\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_gbab );};_dac .GBAtX [_gbab ]=int8 (_faa );_faa ,_gccd =_dac ._cac .ReadByte ();if _gccd !=nil {return _gfe .Wrapf (_gccd ,_ddd ,"\u0059\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_gbab );
};_dac .GBAtY [_gbab ]=int8 (_faa );};return nil ;};func (_fggcg *TextRegion )decodeID ()(int64 ,error ){if _fggcg .IsHuffmanEncoded {if _fggcg ._daee ==nil {_cbecg ,_fgcb :=_fggcg ._geff .ReadBits (byte (_fggcg ._fda ));return int64 (_cbecg ),_fgcb ;};
return _fggcg ._daee .Decode (_fggcg ._geff );};return _fggcg ._ddge .DecodeIAID (uint64 (_fggcg ._fda ),_fggcg ._acdfa );};func (_bcgg *GenericRegion )decodeSLTP ()(int ,error ){switch _bcgg .GBTemplate {case 0:_bcgg ._dfa .SetIndex (0x9B25);case 1:_bcgg ._dfa .SetIndex (0x795);
case 2:_bcgg ._dfa .SetIndex (0xE5);case 3:_bcgg ._dfa .SetIndex (0x195);};return _bcgg ._dfef .DecodeBit (_bcgg ._dfa );};func (_gbaa *TextRegion )GetRegionBitmap ()(*_bgg .Bitmap ,error ){if _gbaa .RegionBitmap !=nil {return _gbaa .RegionBitmap ,nil ;
};if !_gbaa .IsHuffmanEncoded {if _agca :=_gbaa .setCodingStatistics ();_agca !=nil {return nil ,_agca ;};};if _aade :=_gbaa .createRegionBitmap ();_aade !=nil {return nil ,_aade ;};if _dbbf :=_gbaa .decodeSymbolInstances ();_dbbf !=nil {return nil ,_dbbf ;
};return _gbaa .RegionBitmap ,nil ;};func (_gbbf *SymbolDictionary )getToExportFlags ()([]int ,error ){var (_fabc int ;_abdd int32 ;_afac error ;_ceeg =int32 (_gbbf ._gagg +_gbbf .NumberOfNewSymbols );_cdea =make ([]int ,_ceeg ););for _eded :=int32 (0);
_eded < _ceeg ;_eded +=_abdd {if _gbbf .IsHuffmanEncoded {_dbca ,_deee :=_bc .GetStandardTable (1);if _deee !=nil {return nil ,_deee ;};_edae ,_deee :=_dbca .Decode (_gbbf ._acdf );if _deee !=nil {return nil ,_deee ;};_abdd =int32 (_edae );}else {_abdd ,_afac =_gbbf ._ddea .DecodeInt (_gbbf ._dacbe );
if _afac !=nil {return nil ,_afac ;};};if _abdd !=0{if _eded +_abdd > _ceeg {return nil ,_gfe .Error ("\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0067\u0065\u0074T\u006f\u0045\u0078\u0070\u006f\u0072\u0074F\u006c\u0061\u0067\u0073","\u006d\u0061\u006c\u0066\u006f\u0072m\u0065\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0064\u0061\u0074\u0061\u0020\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u002e\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u006f\u0075\u0074\u0020\u006ff\u0020r\u0061\u006e\u0067\u0065");
};for _acddb :=_eded ;_acddb < _eded +_abdd ;_acddb ++{_cdea [_acddb ]=_fabc ;};};if _fabc ==0{_fabc =1;}else {_fabc =0;};};return _cdea ,nil ;};var _ templater =&template1 {};func (_gafa *PageInformationSegment )CombinationOperator ()_bgg .CombinationOperator {return _gafa ._cdcb ;
};func NewGenericRegion (r *_de .Reader )*GenericRegion {return &GenericRegion {RegionSegment :NewRegionSegment (r ),_cac :r };};func (_cdca Type )String ()string {switch _cdca {case TSymbolDictionary :return "\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079";
case TIntermediateTextRegion :return "\u0049n\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020T\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateTextRegion :return "I\u006d\u006d\u0065\u0064ia\u0074e\u0020\u0054\u0065\u0078\u0074 \u0052\u0065\u0067\u0069\u006f\u006e";
case TImmediateLosslessTextRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020L\u006f\u0073\u0073\u006c\u0065\u0073\u0073 \u0054\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TPatternDictionary :return "\u0050a\u0074t\u0065\u0072\u006e\u0020\u0044i\u0063\u0074i\u006f\u006e\u0061\u0072\u0079";
case TIntermediateHalftoneRegion :return "\u0049\u006e\u0074\u0065r\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0048\u0061l\u0066t\u006f\u006e\u0065\u0020\u0052\u0065\u0067i\u006f\u006e";case TImmediateHalftoneRegion :return "\u0049m\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u0048\u0061l\u0066t\u006fn\u0065\u0020\u0052\u0065\u0067\u0069\u006fn";
case TImmediateLosslessHalftoneRegion :return "\u0049\u006d\u006ded\u0069\u0061\u0074\u0065\u0020\u004c\u006f\u0073\u0073l\u0065s\u0073 \u0048a\u006c\u0066\u0074\u006f\u006e\u0065\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TIntermediateGenericRegion :return "I\u006e\u0074\u0065\u0072\u006d\u0065d\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020R\u0065g\u0069\u006f\u006e";
case TImmediateGenericRegion :return "\u0049m\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006ee\u0072\u0069\u0063\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessGenericRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u004c\u006f\u0073\u0073\u006c\u0065\u0073\u0073\u0020\u0047e\u006e\u0065\u0072\u0069\u0063\u0020\u0052e\u0067\u0069\u006f\u006e";
case TIntermediateGenericRefinementRegion :return "\u0049\u006e\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0020\u0052\u0065\u0066i\u006e\u0065\u006d\u0065\u006et\u0020\u0052e\u0067\u0069\u006f\u006e";
case TImmediateGenericRefinementRegion :return "I\u006d\u006d\u0065\u0064\u0069\u0061t\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020\u0052\u0065\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020\u0052\u0065\u0067\u0069o\u006e";case TImmediateLosslessGenericRefinementRegion :return "\u0049m\u006d\u0065d\u0069\u0061\u0074\u0065 \u004c\u006f\u0073s\u006c\u0065\u0073\u0073\u0020\u0047\u0065\u006e\u0065ri\u0063\u0020\u0052e\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020R\u0065\u0067i\u006f\u006e";
case TPageInformation :return "\u0050\u0061g\u0065\u0020\u0049n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e";case TEndOfPage :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0050\u0061\u0067\u0065";case TEndOfStrip :return "\u0045\u006e\u0064 \u004f\u0066\u0020\u0053\u0074\u0072\u0069\u0070";
case TEndOfFile :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0046\u0069\u006c\u0065";case TProfiles :return "\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0073";case TTables :return "\u0054\u0061\u0062\u006c\u0065\u0073";case TExtension :return "\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn";
case TBitmap :return "\u0042\u0069\u0074\u006d\u0061\u0070";};return "I\u006ev\u0061\u006c\u0069\u0064\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0020Ki\u006e\u0064";};func (_cegda *TextRegion )decodeDfs ()(int64 ,error ){if _cegda .IsHuffmanEncoded {if _cegda .SbHuffFS ==3{if _cegda ._gfef ==nil {var _ebcd error ;
_cegda ._gfef ,_ebcd =_cegda .getUserTable (0);if _ebcd !=nil {return 0,_ebcd ;};};return _cegda ._gfef .Decode (_cegda ._geff );};_aedf ,_gggfc :=_bc .GetStandardTable (6+int (_cegda .SbHuffFS ));if _gggfc !=nil {return 0,_gggfc ;};return _aedf .Decode (_cegda ._geff );
};_eeef ,_cffc :=_cegda ._ddge .DecodeInt (_cegda ._gfecc );if _cffc !=nil {return 0,_cffc ;};return int64 (_eeef ),nil ;};type GenericRegion struct{_cac *_de .Reader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;
RegionSegment *RegionSegment ;UseExtTemplates bool ;IsTPGDon bool ;GBTemplate byte ;IsMMREncoded bool ;UseMMR bool ;GBAtX []int8 ;GBAtY []int8 ;GBAtOverride []bool ;_cgff bool ;Bitmap *_bgg .Bitmap ;_dfef *_ad .Decoder ;_dfa *_ad .DecoderStats ;_abc *_c .Decoder ;
};func (_aef *Header )readNumberOfReferredToSegments (_egeg *_de .Reader )(uint64 ,error ){const _ddad ="\u0072\u0065\u0061\u0064\u004e\u0075\u006d\u0062\u0065\u0072O\u0066\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
_bgac ,_begd :=_egeg .ReadBits (3);if _begd !=nil {return 0,_gfe .Wrap (_begd ,_ddad ,"\u0063\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0072\u0074\u0073");};_bgac &=0xf;var _dcd []byte ;if _bgac <=4{_dcd =make ([]byte ,5);for _becc :=0;_becc <=4;_becc ++{_aed ,_ead :=_egeg .ReadBit ();
if _ead !=nil {return 0,_gfe .Wrap (_ead ,_ddad ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_dcd [_becc ]=byte (_aed );};}else {_bgac ,_begd =_egeg .ReadBits (29);if _begd !=nil {return 0,_begd ;};_bgac &=_g .MaxInt32 ;_fba :=(_bgac +8)>>3;
_fba <<=3;_dcd =make ([]byte ,_fba );var _babc uint64 ;for _babc =0;_babc < _fba ;_babc ++{_aaeb ,_eafc :=_egeg .ReadBit ();if _eafc !=nil {return 0,_gfe .Wrap (_eafc ,_ddad ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_dcd [_babc ]=byte (_aaeb );
};};return _bgac ,nil ;};type TextRegion struct{_geff *_de .Reader ;RegionInfo *RegionSegment ;SbrTemplate int8 ;SbDsOffset int8 ;DefaultPixel int8 ;CombinationOperator _bgg .CombinationOperator ;IsTransposed int8 ;ReferenceCorner int16 ;LogSBStrips int16 ;
UseRefinement bool ;IsHuffmanEncoded bool ;SbHuffRSize int8 ;SbHuffRDY int8 ;SbHuffRDX int8 ;SbHuffRDHeight int8 ;SbHuffRDWidth int8 ;SbHuffDT int8 ;SbHuffDS int8 ;SbHuffFS int8 ;SbrATX []int8 ;SbrATY []int8 ;NumberOfSymbolInstances uint32 ;_fbgfb int64 ;
SbStrips int8 ;NumberOfSymbols uint32 ;RegionBitmap *_bgg .Bitmap ;Symbols []*_bgg .Bitmap ;_ddge *_ad .Decoder ;_edea *GenericRefinementRegion ;_cgdd *_ad .DecoderStats ;_gfecc *_ad .DecoderStats ;_fcgb *_ad .DecoderStats ;_ggbff *_ad .DecoderStats ;_eagd *_ad .DecoderStats ;
_efde *_ad .DecoderStats ;_gbde *_ad .DecoderStats ;_acdfa *_ad .DecoderStats ;_cfgg *_ad .DecoderStats ;_gdba *_ad .DecoderStats ;_fabce *_ad .DecoderStats ;_fda int8 ;_daee *_bc .FixedSizeTable ;Header *Header ;_gfef _bc .Tabler ;_efga _bc .Tabler ;_feda _bc .Tabler ;
_fgea _bc .Tabler ;_cdcaa _bc .Tabler ;_bfcd _bc .Tabler ;_cddec _bc .Tabler ;_aaed _bc .Tabler ;_fgab ,_gcff map[int ]int ;_acge []int ;_fcbf *_bgg .Points ;_geda *_bgg .Bitmaps ;_cabc *_ae .IntSlice ;_eeda ,_bacg int ;_fcgg *_bgg .Boxes ;};func (_bfbb *SymbolDictionary )InitEncode (symbols *_bgg .Bitmaps ,symbolList []int ,symbolMap map[int ]int ,unborderSymbols bool )error {const _gbfg ="S\u0079\u006d\u0062\u006f\u006c\u0044i\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002eI\u006e\u0069\u0074E\u006ec\u006f\u0064\u0065";
_bfbb .SdATX =[]int8 {3,-3,2,-2};_bfbb .SdATY =[]int8 {-1,-1,-2,-2};_bfbb ._gccg =symbols ;_bfbb ._bfdd =make ([]int ,len (symbolList ));copy (_bfbb ._bfdd ,symbolList );if len (_bfbb ._bfdd )!=_bfbb ._gccg .Size (){return _gfe .Error (_gbfg ,"s\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0061\u006e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u004ci\u0073\u0074\u0020\u006f\u0066\u0020\u0064\u0069\u0066\u0066er\u0065\u006e\u0074 \u0073i\u007a\u0065");
};_bfbb .NumberOfNewSymbols =uint32 (symbols .Size ());_bfbb .NumberOfExportedSymbols =uint32 (symbols .Size ());_bfbb ._faf =symbolMap ;_bfbb ._bfe =unborderSymbols ;return nil ;};func (_bffge *PageInformationSegment )readCombinationOperatorOverrideAllowed ()error {_edgb ,_cbacc :=_bffge ._cfcb .ReadBit ();
if _cbacc !=nil {return _cbacc ;};if _edgb ==1{_bffge ._gegc =true ;};return nil ;};func (_gcecd *SymbolDictionary )getSymbol (_gadf int )(*_bgg .Bitmap ,error ){const _aefb ="\u0067e\u0074\u0053\u0079\u006d\u0062\u006fl";_dgab ,_ggfdd :=_gcecd ._gccg .GetBitmap (_gcecd ._bfdd [_gadf ]);
if _ggfdd !=nil {return nil ,_gfe .Wrap (_ggfdd ,_aefb ,"\u0063\u0061n\u0027\u0074\u0020g\u0065\u0074\u0020\u0073\u0079\u006d\u0062\u006f\u006c");};return _dgab ,nil ;};func (_ggg *GenericRefinementRegion )Init (header *Header ,r *_de .Reader )error {_ggg ._aea =header ;
_ggg ._fe =r ;_ggg .RegionInfo =NewRegionSegment (r );return _ggg .parseHeader ();};func (_fge *GenericRegion )decodeTemplate2 (_bccc ,_cbag ,_beb int ,_bfb ,_cgab int )(_dggd error ){const _aaf ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0032";
var (_ceab ,_bgdd int ;_fbde ,_cgfd int ;_cegd byte ;_adga ,_bce int ;);if _bccc >=1{_cegd ,_dggd =_fge .Bitmap .GetByte (_cgab );if _dggd !=nil {return _gfe .Wrap (_dggd ,_aaf ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0031");
};_fbde =int (_cegd );};if _bccc >=2{_cegd ,_dggd =_fge .Bitmap .GetByte (_cgab -_fge .Bitmap .RowStride );if _dggd !=nil {return _gfe .Wrap (_dggd ,_aaf ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0032");};_cgfd =int (_cegd )<<4;
};_ceab =(_fbde >>3&0x7c)|(_cgfd >>3&0x380);for _dfg :=0;_dfg < _beb ;_dfg =_adga {var (_bda byte ;_gcde int ;);_adga =_dfg +8;if _ggdfc :=_cbag -_dfg ;_ggdfc > 8{_gcde =8;}else {_gcde =_ggdfc ;};if _bccc > 0{_fbde <<=8;if _adga < _cbag {_cegd ,_dggd =_fge .Bitmap .GetByte (_cgab +1);
if _dggd !=nil {return _gfe .Wrap (_dggd ,_aaf ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0030");};_fbde |=int (_cegd );};};if _bccc > 1{_cgfd <<=8;if _adga < _cbag {_cegd ,_dggd =_fge .Bitmap .GetByte (_cgab -_fge .Bitmap .RowStride +1);
if _dggd !=nil {return _gfe .Wrap (_dggd ,_aaf ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0031");};_cgfd |=int (_cegd )<<4;};};for _cdbf :=0;_cdbf < _gcde ;_cdbf ++{_efgd :=uint (10-_cdbf );if _fge ._cgff {_bgdd =_fge .overrideAtTemplate2 (_ceab ,_dfg +_cdbf ,_bccc ,int (_bda ),_cdbf );
_fge ._dfa .SetIndex (int32 (_bgdd ));}else {_fge ._dfa .SetIndex (int32 (_ceab ));};_bce ,_dggd =_fge ._dfef .DecodeBit (_fge ._dfa );if _dggd !=nil {return _gfe .Wrap (_dggd ,_aaf ,"");};_bda |=byte (_bce <<uint (7-_cdbf ));_ceab =((_ceab &0x1bd)<<1)|_bce |((_fbde >>_efgd )&0x4)|((_cgfd >>_efgd )&0x80);
};if _edbda :=_fge .Bitmap .SetByte (_bfb ,_bda );_edbda !=nil {return _gfe .Wrap (_edbda ,_aaf ,"");};_bfb ++;_cgab ++;};return nil ;};type Header struct{SegmentNumber uint32 ;Type Type ;RetainFlag bool ;PageAssociation int ;PageAssociationFieldSize bool ;
RTSegments []*Header ;HeaderLength int64 ;SegmentDataLength uint64 ;SegmentDataStartOffset uint64 ;Reader *_de .Reader ;SegmentData Segmenter ;RTSNumbers []int ;RetainBits []uint8 ;};func (_bea *PatternDictionary )readGrayMax ()error {_cfab ,_gbeb :=_bea ._gaba .ReadBits (32);
if _gbeb !=nil {return _gbeb ;};_bea .GrayMax =uint32 (_cfab &_g .MaxUint32 );return nil ;};func (_ggdff *Header )subInputReader ()(*_de .Reader ,error ){_fab :=int (_ggdff .SegmentDataLength );if _ggdff .SegmentDataLength ==_g .MaxInt32 {_fab =-1;};return _ggdff .Reader .NewPartialReader (int (_ggdff .SegmentDataStartOffset ),_fab ,false );
};func (_fbaf *SymbolDictionary )encodeATFlags (_eabd _de .BinaryWriter )(_dec int ,_ggfdc error ){const _ebfa ="\u0065\u006e\u0063\u006f\u0064\u0065\u0041\u0054\u0046\u006c\u0061\u0067\u0073";if _fbaf .IsHuffmanEncoded ||_fbaf .SdTemplate !=0{return 0,nil ;
};_eaga :=4;if _fbaf .SdTemplate !=0{_eaga =1;};for _dddfa :=0;_dddfa < _eaga ;_dddfa ++{if _ggfdc =_eabd .WriteByte (byte (_fbaf .SdATX [_dddfa ]));_ggfdc !=nil {return _dec ,_gfe .Wrapf (_ggfdc ,_ebfa ,"\u0053d\u0041\u0054\u0058\u005b\u0025\u0064]",_dddfa );
};_dec ++;if _ggfdc =_eabd .WriteByte (byte (_fbaf .SdATY [_dddfa ]));_ggfdc !=nil {return _dec ,_gfe .Wrapf (_ggfdc ,_ebfa ,"\u0053d\u0041\u0054\u0059\u005b\u0025\u0064]",_dddfa );};_dec ++;};return _dec ,nil ;};func (_begad *PageInformationSegment )readMaxStripeSize ()error {_efdg ,_dde :=_begad ._cfcb .ReadBits (15);
if _dde !=nil {return _dde ;};_begad .MaxStripeSize =uint16 (_efdg &_g .MaxUint16 );return nil ;};func (_beg *HalftoneRegion )GetRegionBitmap ()(*_bgg .Bitmap ,error ){if _beg .HalftoneRegionBitmap !=nil {return _beg .HalftoneRegionBitmap ,nil ;};var _beba error ;
_beg .HalftoneRegionBitmap =_bgg .New (int (_beg .RegionSegment .BitmapWidth ),int (_beg .RegionSegment .BitmapHeight ));if _beg .Patterns ==nil ||len (_beg .Patterns )==0{_beg .Patterns ,_beba =_beg .GetPatterns ();if _beba !=nil {return nil ,_beba ;};
};if _beg .HDefaultPixel ==1{_beg .HalftoneRegionBitmap .SetDefaultPixel ();};_acda :=_g .Ceil (_g .Log (float64 (len (_beg .Patterns )))/_g .Log (2));_eebg :=int (_acda );var _gdbf [][]int ;_gdbf ,_beba =_beg .grayScaleDecoding (_eebg );if _beba !=nil {return nil ,_beba ;
};if _beba =_beg .renderPattern (_gdbf );_beba !=nil {return nil ,_beba ;};return _beg .HalftoneRegionBitmap ,nil ;};