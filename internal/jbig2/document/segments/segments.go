//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package segments ;import (_ce "encoding/binary";_cd "errors";_e "fmt";_be "github.com/unidoc/unipdf/v3/common";_fb "github.com/unidoc/unipdf/v3/internal/bitwise";_bd "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_gg "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";_fa "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/arithmetic";_bc "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/huffman";_cg "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/mmr";_cea "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/arithmetic";_de "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_d "github.com/unidoc/unipdf/v3/internal/jbig2/internal";_gf "golang.org/x/xerrors";_c "image";_g "io";_f "math";_ae "strings";_a "time";);func (_cbdea *SymbolDictionary )decodeThroughTextRegion (_fcbb ,_eaag ,_gegc uint32 )error {if _cbdea ._bfgdc ==nil {_cbdea ._bfgdc =_fadc (_cbdea ._defc ,nil );_cbdea ._bfgdc .setContexts (_cbdea ._cfdd ,_fa .NewStats (512,1),_fa .NewStats (512,1),_fa .NewStats (512,1),_fa .NewStats (512,1),_cbdea ._gffd ,_fa .NewStats (512,1),_fa .NewStats (512,1),_fa .NewStats (512,1),_fa .NewStats (512,1));};if _gfbg :=_cbdea .setSymbolsArray ();_gfbg !=nil {return _gfbg ;};_cbdea ._bfgdc .setParameters (_cbdea ._fafd ,_cbdea .IsHuffmanEncoded ,true ,_fcbb ,_eaag ,_gegc ,1,_cbdea ._gdad +_cbdea ._ffdd ,0,0,0,1,0,0,0,0,0,0,0,0,0,_cbdea .SdrTemplate ,_cbdea .SdrATX ,_cbdea .SdrATY ,_cbdea ._fdga ,_cbdea ._fdc );return _cbdea .addSymbol (_cbdea ._bfgdc );};func (_abdb *TextRegion )encodeFlags (_dfbb _fb .BinaryWriter )(_ddgcc int ,_cfccd error ){const _ggbgd ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _cfccd =_dfbb .WriteBit (int (_abdb .SbrTemplate ));_cfccd !=nil {return _ddgcc ,_de .Wrap (_cfccd ,_ggbgd ,"s\u0062\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};if _ ,_cfccd =_dfbb .WriteBits (uint64 (_abdb .SbDsOffset ),5);_cfccd !=nil {return _ddgcc ,_de .Wrap (_cfccd ,_ggbgd ,"\u0073\u0062\u0044\u0073\u004f\u0066\u0066\u0073\u0065\u0074");};if _cfccd =_dfbb .WriteBit (int (_abdb .DefaultPixel ));_cfccd !=nil {return _ddgcc ,_de .Wrap (_cfccd ,_ggbgd ,"\u0044\u0065\u0066a\u0075\u006c\u0074\u0050\u0069\u0078\u0065\u006c");};if _ ,_cfccd =_dfbb .WriteBits (uint64 (_abdb .CombinationOperator ),2);_cfccd !=nil {return _ddgcc ,_de .Wrap (_cfccd ,_ggbgd ,"\u0043\u006f\u006d\u0062in\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072");};if _cfccd =_dfbb .WriteBit (int (_abdb .IsTransposed ));_cfccd !=nil {return _ddgcc ,_de .Wrap (_cfccd ,_ggbgd ,"\u0069\u0073\u0020\u0074\u0072\u0061\u006e\u0073\u0070\u006f\u0073\u0065\u0064");};if _ ,_cfccd =_dfbb .WriteBits (uint64 (_abdb .ReferenceCorner ),2);_cfccd !=nil {return _ddgcc ,_de .Wrap (_cfccd ,_ggbgd ,"\u0072\u0065f\u0065\u0072\u0065n\u0063\u0065\u0020\u0063\u006f\u0072\u006e\u0065\u0072");};if _ ,_cfccd =_dfbb .WriteBits (uint64 (_abdb .LogSBStrips ),2);_cfccd !=nil {return _ddgcc ,_de .Wrap (_cfccd ,_ggbgd ,"L\u006f\u0067\u0053\u0042\u0053\u0074\u0072\u0069\u0070\u0073");};var _acbe int ;if _abdb .UseRefinement {_acbe =1;};if _cfccd =_dfbb .WriteBit (_acbe );_cfccd !=nil {return _ddgcc ,_de .Wrap (_cfccd ,_ggbgd ,"\u0075\u0073\u0065\u0020\u0072\u0065\u0066\u0069\u006ee\u006d\u0065\u006e\u0074");};_acbe =0;if _abdb .IsHuffmanEncoded {_acbe =1;};if _cfccd =_dfbb .WriteBit (_acbe );_cfccd !=nil {return _ddgcc ,_de .Wrap (_cfccd ,_ggbgd ,"u\u0073\u0065\u0020\u0068\u0075\u0066\u0066\u006d\u0061\u006e");};_ddgcc =2;return _ddgcc ,nil ;};func (_ge *GenericRefinementRegion )GetRegionInfo ()*RegionSegment {return _ge .RegionInfo };func (_dagfc *SymbolDictionary )checkInput ()error {if _dagfc .SdHuffDecodeHeightSelection ==2{_be .Log .Debug ("\u0053\u0079\u006d\u0062\u006fl\u0020\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u0053e\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0070\u0065r\u006d\u0069\u0074\u0074\u0065\u0064",_dagfc .SdHuffDecodeHeightSelection );};if _dagfc .SdHuffDecodeWidthSelection ==2{_be .Log .Debug ("\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0057\u0069\u0064t\u0068\u0020\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061l\u0075\u0065\u0020\u006e\u006f\u0074 \u0070\u0065r\u006d\u0069t\u0074e\u0064",_dagfc .SdHuffDecodeWidthSelection );};if _dagfc .IsHuffmanEncoded {if _dagfc .SdTemplate !=0{_be .Log .Debug ("\u0053\u0044T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e \u0030\u0029",_dagfc .SdTemplate );};if !_dagfc .UseRefinementAggregation {if !_dagfc .UseRefinementAggregation {if _dagfc ._ggde {_be .Log .Debug ("\u0049\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074ex\u0074\u0052\u0065\u0074\u0061\u0069n\u0065\u0064\u0020\u003d\u0020\u0074\u0072\u0075\u0065\u0020\u0028\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0066\u0061\u006cs\u0065\u0029");_dagfc ._ggde =false ;};if _dagfc ._gbfe {_be .Log .Debug ("\u0069s\u0043\u006fd\u0069\u006e\u0067\u0043o\u006e\u0074\u0065x\u0074\u0055\u0073\u0065\u0064\u0020\u003d\u0020\u0074ru\u0065\u0020\u0028s\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020f\u0061\u006cs\u0065\u0029");_dagfc ._gbfe =false ;};};};}else {if _dagfc .SdHuffBMSizeSelection !=0{_be .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066B\u004d\u0053\u0069\u007a\u0065\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");_dagfc .SdHuffBMSizeSelection =0;};if _dagfc .SdHuffDecodeWidthSelection !=0{_be .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068\u0053\u0065\u006c\u0065\u0063\u0074\u0069o\u006e\u0020\u0073\u0068\u006fu\u006c\u0064 \u0062\u0065\u0020\u0030");_dagfc .SdHuffDecodeWidthSelection =0;};if _dagfc .SdHuffDecodeHeightSelection !=0{_be .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0048e\u0069\u0067\u0068\u0074\u0053\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");_dagfc .SdHuffDecodeHeightSelection =0;};};if !_dagfc .UseRefinementAggregation {if _dagfc .SdrTemplate !=0{_be .Log .Debug ("\u0053\u0044\u0052\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u003d\u0020\u0025\u0064\u0020\u0028s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_dagfc .SdrTemplate );_dagfc .SdrTemplate =0;};};if !_dagfc .IsHuffmanEncoded ||!_dagfc .UseRefinementAggregation {if _dagfc .SdHuffAggInstanceSelection {_be .Log .Debug ("\u0053d\u0048\u0075f\u0066\u0041\u0067g\u0049\u006e\u0073\u0074\u0061\u006e\u0063e\u0053\u0065\u006c\u0065\u0063\u0074i\u006f\u006e\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_dagfc .SdHuffAggInstanceSelection );};};return nil ;};func (_fcb *GenericRegion )decodeSLTP ()(int ,error ){switch _fcb .GBTemplate {case 0:_fcb ._dfag .SetIndex (0x9B25);case 1:_fcb ._dfag .SetIndex (0x795);case 2:_fcb ._dfag .SetIndex (0xE5);case 3:_fcb ._dfag .SetIndex (0x195);};return _fcb ._ebf .DecodeBit (_fcb ._dfag );};func (_cfag *GenericRegion )setOverrideFlag (_eacfa int ){_cfag .GBAtOverride [_eacfa ]=true ;_cfag ._eea =true ;};func (_fda *GenericRegion )overrideAtTemplate1 (_bae ,_ddg ,_gegg ,_bccg ,_eacf int )int {_bae &=0x1FF7;if _fda .GBAtY [0]==0&&_fda .GBAtX [0]>=-int8 (_eacf ){_bae |=(_bccg >>uint (7-(int8 (_eacf )+_fda .GBAtX [0]))&0x1)<<3;}else {_bae |=int (_fda .getPixel (_ddg +int (_fda .GBAtX [0]),_gegg +int (_fda .GBAtY [0])))<<3;};return _bae ;};func (_fae *PageInformationSegment )Init (h *Header ,r _fb .StreamReader )(_aeb error ){_fae ._cad =r ;if _aeb =_fae .parseHeader ();_aeb !=nil {return _de .Wrap (_aeb ,"P\u0061\u0067\u0065\u0049\u006e\u0066o\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065g\u006d\u0065\u006et\u002eI\u006e\u0069\u0074","");};return nil ;};type Regioner interface{GetRegionBitmap ()(*_gg .Bitmap ,error );GetRegionInfo ()*RegionSegment ;};func (_ffe *GenericRefinementRegion )String ()string {_beca :=&_ae .Builder {};_beca .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_beca .WriteString (_ffe .RegionInfo .String ()+"\u000a");_beca .WriteString (_e .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0052\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_ffe .IsTPGROn ));_beca .WriteString (_e .Sprintf ("\u0009-\u0020T\u0065\u006d\u0070\u006c\u0061t\u0065\u0049D\u003a\u0020\u0025\u0076\u000a",_ffe .TemplateID ));_beca .WriteString (_e .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_ffe .GrAtX ));_beca .WriteString (_e .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_ffe .GrAtY ));_beca .WriteString (_e .Sprintf ("\u0009-\u0020R\u0065\u0066\u0065\u0072\u0065n\u0063\u0065D\u0058\u0020\u0025\u0076\u000a",_ffe .ReferenceDX ));_beca .WriteString (_e .Sprintf ("\u0009\u002d\u0020\u0052ef\u0065\u0072\u0065\u006e\u0063\u0044\u0065\u0059\u003a\u0020\u0025\u0076\u000a",_ffe .ReferenceDY ));return _beca .String ();};type template0 struct{};func (_faac *Header )readSegmentDataLength (_bfae _fb .StreamReader )(_gagb error ){_faac .SegmentDataLength ,_gagb =_bfae .ReadBits (32);if _gagb !=nil {return _gagb ;};_faac .SegmentDataLength &=_f .MaxInt32 ;return nil ;};func (_cf *GenericRefinementRegion )decodeSLTP ()(int ,error ){_cf .Template .setIndex (_cf ._bdg );return _cf ._gga .DecodeBit (_cf ._bdg );};func (_bfag *GenericRegion )copyLineAbove (_bbc int )error {_bbbe :=_bbc *_bfag .Bitmap .RowStride ;_ebd :=_bbbe -_bfag .Bitmap .RowStride ;for _adf :=0;_adf < _bfag .Bitmap .RowStride ;_adf ++{_edb ,_daf :=_bfag .Bitmap .GetByte (_ebd );if _daf !=nil {return _daf ;};_ebd ++;if _daf =_bfag .Bitmap .SetByte (_bbbe ,_edb );_daf !=nil {return _daf ;};_bbbe ++;};return nil ;};func (_eaabc *HalftoneRegion )combineGrayscalePlanes (_acba []*_gg .Bitmap ,_deab int )error {_effa :=0;for _cce :=0;_cce < _acba [_deab ].Height ;_cce ++{for _aefe :=0;_aefe < _acba [_deab ].Width ;_aefe +=8{_fegd ,_dbf :=_acba [_deab +1].GetByte (_effa );if _dbf !=nil {return _dbf ;};_edbb ,_dbf :=_acba [_deab ].GetByte (_effa );if _dbf !=nil {return _dbf ;};_dbf =_acba [_deab ].SetByte (_effa ,_gg .CombineBytes (_edbb ,_fegd ,_gg .CmbOpXor ));if _dbf !=nil {return _dbf ;};_effa ++;};};return nil ;};func (_bfbad *SymbolDictionary )readRefinementAtPixels (_cfdeg int )error {_bfbad .SdrATX =make ([]int8 ,_cfdeg );_bfbad .SdrATY =make ([]int8 ,_cfdeg );var (_bdcg byte ;_cecba error ;);for _fcdde :=0;_fcdde < _cfdeg ;_fcdde ++{_bdcg ,_cecba =_bfbad ._defc .ReadByte ();if _cecba !=nil {return _cecba ;};_bfbad .SdrATX [_fcdde ]=int8 (_bdcg );_bdcg ,_cecba =_bfbad ._defc .ReadByte ();if _cecba !=nil {return _cecba ;};_bfbad .SdrATY [_fcdde ]=int8 (_bdcg );};return nil ;};func (_bdb *EndOfStripe )LineNumber ()int {return _bdb ._cgd };func (_faf *GenericRefinementRegion )decodeOptimized (_cef ,_cgde ,_ff ,_db ,_af ,_bbe ,_bfe int )error {var (_bdd error ;_bfa int ;_ee int ;);_cb :=_cef -int (_faf .ReferenceDY );if _ceg :=int (-_faf .ReferenceDX );_ceg > 0{_bfa =_ceg ;};_ab :=_faf .ReferenceBitmap .GetByteIndex (_bfa ,_cb );if _faf .ReferenceDX > 0{_ee =int (_faf .ReferenceDX );};_ffa :=_faf .RegionBitmap .GetByteIndex (_ee ,_cef );switch _faf .TemplateID {case 0:_bdd =_faf .decodeTemplate (_cef ,_cgde ,_ff ,_db ,_af ,_bbe ,_bfe ,_ffa ,_cb ,_ab ,_faf ._eg );case 1:_bdd =_faf .decodeTemplate (_cef ,_cgde ,_ff ,_db ,_af ,_bbe ,_bfe ,_ffa ,_cb ,_ab ,_faf ._fc );};return _bdd ;};func (_cbcf *PageInformationSegment )readWidthAndHeight ()error {_dbe ,_adee :=_cbcf ._cad .ReadBits (32);if _adee !=nil {return _adee ;};_cbcf .PageBMWidth =int (_dbe &_f .MaxInt32 );_dbe ,_adee =_cbcf ._cad .ReadBits (32);if _adee !=nil {return _adee ;};_cbcf .PageBMHeight =int (_dbe &_f .MaxInt32 );return nil ;};func (_afg *GenericRefinementRegion )decodeTypicalPredictedLine (_ba ,_gfa ,_fad ,_ecc ,_cfg ,_aa int )error {_ga :=_ba -int (_afg .ReferenceDY );_abg :=_afg .ReferenceBitmap .GetByteIndex (0,_ga );_dad :=_afg .RegionBitmap .GetByteIndex (0,_ba );var _gb error ;switch _afg .TemplateID {case 0:_gb =_afg .decodeTypicalPredictedLineTemplate0 (_ba ,_gfa ,_fad ,_ecc ,_cfg ,_aa ,_dad ,_ga ,_abg );case 1:_gb =_afg .decodeTypicalPredictedLineTemplate1 (_ba ,_gfa ,_fad ,_ecc ,_cfg ,_aa ,_dad ,_ga ,_abg );};return _gb ;};func (_dcce *SymbolDictionary )decodeAggregate (_facd ,_cgdd uint32 )error {var (_cbga int64 ;_efgb error ;);if _dcce .IsHuffmanEncoded {_cbga ,_efgb =_dcce .huffDecodeRefAggNInst ();if _efgb !=nil {return _efgb ;};}else {_bbdf ,_ada :=_dcce ._fafd .DecodeInt (_dcce ._bddb );if _ada !=nil {return _ada ;};_cbga =int64 (_bbdf );};if _cbga > 1{return _dcce .decodeThroughTextRegion (_facd ,_cgdd ,uint32 (_cbga ));}else if _cbga ==1{return _dcce .decodeRefinedSymbol (_facd ,_cgdd );};return nil ;};func (_ddcg *TextRegion )decodeRdw ()(int64 ,error ){const _fdce ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064w";if _ddcg .IsHuffmanEncoded {if _ddcg .SbHuffRDWidth ==3{if _ddcg ._cbfbd ==nil {var (_dcab int ;_aedb error ;);if _ddcg .SbHuffFS ==3{_dcab ++;};if _ddcg .SbHuffDS ==3{_dcab ++;};if _ddcg .SbHuffDT ==3{_dcab ++;};_ddcg ._cbfbd ,_aedb =_ddcg .getUserTable (_dcab );if _aedb !=nil {return 0,_de .Wrap (_aedb ,_fdce ,"");};};return _ddcg ._cbfbd .Decode (_ddcg ._afde );};_bcgbd ,_gddd :=_bc .GetStandardTable (14+int (_ddcg .SbHuffRDWidth ));if _gddd !=nil {return 0,_de .Wrap (_gddd ,_fdce ,"");};return _bcgbd .Decode (_ddcg ._afde );};_dccc ,_dfcda :=_ddcg ._baae .DecodeInt (_ddcg ._affc );if _dfcda !=nil {return 0,_de .Wrap (_dfcda ,_fdce ,"");};return int64 (_dccc ),nil ;};var (_bgcd Segmenter ;_afac =map[Type ]func ()Segmenter {TSymbolDictionary :func ()Segmenter {return &SymbolDictionary {}},TIntermediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateLosslessTextRegion :func ()Segmenter {return &TextRegion {}},TPatternDictionary :func ()Segmenter {return &PatternDictionary {}},TIntermediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateLosslessHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TIntermediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateLosslessGenericRegion :func ()Segmenter {return &GenericRegion {}},TIntermediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateLosslessGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TPageInformation :func ()Segmenter {return &PageInformationSegment {}},TEndOfPage :func ()Segmenter {return _bgcd },TEndOfStrip :func ()Segmenter {return &EndOfStripe {}},TEndOfFile :func ()Segmenter {return _bgcd },TProfiles :func ()Segmenter {return _bgcd },TTables :func ()Segmenter {return &TableSegment {}},TExtension :func ()Segmenter {return _bgcd },TBitmap :func ()Segmenter {return _bgcd }};);func (_bfgf *Header )writeFlags (_ffdf _fb .BinaryWriter )(_gcffd error ){const _gaedg ="\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065F\u006c\u0061\u0067\u0073";_dfdd :=byte (_bfgf .Type );if _gcffd =_ffdf .WriteByte (_dfdd );_gcffd !=nil {return _de .Wrap (_gcffd ,_gaedg ,"\u0077\u0072\u0069ti\u006e\u0067\u0020\u0073\u0065\u0067\u006d\u0065\u006et\u0020t\u0079p\u0065 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064");};if !_bfgf .RetainFlag &&!_bfgf .PageAssociationFieldSize {return nil ;};if _gcffd =_ffdf .SkipBits (-8);_gcffd !=nil {return _de .Wrap (_gcffd ,_gaedg ,"\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0062\u0061\u0063\u006b\u0020\u0074\u0068\u0065\u0020\u0062\u0069\u0074\u0073\u0020\u0066\u0061il\u0065\u0064");};var _ebdb int ;if _bfgf .RetainFlag {_ebdb =1;};if _gcffd =_ffdf .WriteBit (_ebdb );_gcffd !=nil {return _de .Wrap (_gcffd ,_gaedg ,"\u0072\u0065\u0074\u0061in\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067\u0073");};_ebdb =0;if _bfgf .PageAssociationFieldSize {_ebdb =1;};if _gcffd =_ffdf .WriteBit (_ebdb );_gcffd !=nil {return _de .Wrap (_gcffd ,_gaedg ,"p\u0061\u0067\u0065\u0020as\u0073o\u0063\u0069\u0061\u0074\u0069o\u006e\u0020\u0066\u006c\u0061\u0067");};_ffdf .FinishByte ();return nil ;};func (_cbdc *PatternDictionary )extractPatterns (_ffec *_gg .Bitmap )error {var _edda int ;_agae :=make ([]*_gg .Bitmap ,_cbdc .GrayMax +1);for _edda <=int (_cbdc .GrayMax ){_edbc :=int (_cbdc .HdpWidth )*_edda ;_eeab :=_c .Rect (_edbc ,0,_edbc +int (_cbdc .HdpWidth ),int (_cbdc .HdpHeight ));_gacb ,_fbfd :=_gg .Extract (_eeab ,_ffec );if _fbfd !=nil {return _fbfd ;};_agae [_edda ]=_gacb ;_edda ++;};_cbdc .Patterns =_agae ;return nil ;};func (_dcea Type )String ()string {switch _dcea {case TSymbolDictionary :return "\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079";case TIntermediateTextRegion :return "\u0049n\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020T\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateTextRegion :return "I\u006d\u006d\u0065\u0064ia\u0074e\u0020\u0054\u0065\u0078\u0074 \u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessTextRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020L\u006f\u0073\u0073\u006c\u0065\u0073\u0073 \u0054\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TPatternDictionary :return "\u0050a\u0074t\u0065\u0072\u006e\u0020\u0044i\u0063\u0074i\u006f\u006e\u0061\u0072\u0079";case TIntermediateHalftoneRegion :return "\u0049\u006e\u0074\u0065r\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0048\u0061l\u0066t\u006f\u006e\u0065\u0020\u0052\u0065\u0067i\u006f\u006e";case TImmediateHalftoneRegion :return "\u0049m\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u0048\u0061l\u0066t\u006fn\u0065\u0020\u0052\u0065\u0067\u0069\u006fn";case TImmediateLosslessHalftoneRegion :return "\u0049\u006d\u006ded\u0069\u0061\u0074\u0065\u0020\u004c\u006f\u0073\u0073l\u0065s\u0073 \u0048a\u006c\u0066\u0074\u006f\u006e\u0065\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TIntermediateGenericRegion :return "I\u006e\u0074\u0065\u0072\u006d\u0065d\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020R\u0065g\u0069\u006f\u006e";case TImmediateGenericRegion :return "\u0049m\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006ee\u0072\u0069\u0063\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessGenericRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u004c\u006f\u0073\u0073\u006c\u0065\u0073\u0073\u0020\u0047e\u006e\u0065\u0072\u0069\u0063\u0020\u0052e\u0067\u0069\u006f\u006e";case TIntermediateGenericRefinementRegion :return "\u0049\u006e\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0020\u0052\u0065\u0066i\u006e\u0065\u006d\u0065\u006et\u0020\u0052e\u0067\u0069\u006f\u006e";case TImmediateGenericRefinementRegion :return "I\u006d\u006d\u0065\u0064\u0069\u0061t\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020\u0052\u0065\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020\u0052\u0065\u0067\u0069o\u006e";case TImmediateLosslessGenericRefinementRegion :return "\u0049m\u006d\u0065d\u0069\u0061\u0074\u0065 \u004c\u006f\u0073s\u006c\u0065\u0073\u0073\u0020\u0047\u0065\u006e\u0065ri\u0063\u0020\u0052e\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020R\u0065\u0067i\u006f\u006e";case TPageInformation :return "\u0050\u0061g\u0065\u0020\u0049n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e";case TEndOfPage :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0050\u0061\u0067\u0065";case TEndOfStrip :return "\u0045\u006e\u0064 \u004f\u0066\u0020\u0053\u0074\u0072\u0069\u0070";case TEndOfFile :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0046\u0069\u006c\u0065";case TProfiles :return "\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0073";case TTables :return "\u0054\u0061\u0062\u006c\u0065\u0073";case TExtension :return "\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn";case TBitmap :return "\u0042\u0069\u0074\u006d\u0061\u0070";};return "I\u006ev\u0061\u006c\u0069\u0064\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0020Ki\u006e\u0064";};func (_agg *GenericRefinementRegion )decodeTemplate (_ecb ,_gba ,_fga ,_bbag ,_fecb ,_gdf ,_cbd ,_becg ,_dddd ,_dga int ,_aeg templater )(_bgf error ){var (_cga ,_ccf ,_gceg ,_aac ,_bgd int16 ;_ead ,_cbdd ,_fbe ,_cfa int ;_bgdf byte ;);if _dddd >=1&&(_dddd -1)< _agg .ReferenceBitmap .Height {_bgdf ,_bgf =_agg .ReferenceBitmap .GetByte (_dga -_bbag );if _bgf !=nil {return ;};_ead =int (_bgdf );};if _dddd >=0&&(_dddd )< _agg .ReferenceBitmap .Height {_bgdf ,_bgf =_agg .ReferenceBitmap .GetByte (_dga );if _bgf !=nil {return ;};_cbdd =int (_bgdf );};if _dddd >=-1&&(_dddd +1)< _agg .ReferenceBitmap .Height {_bgdf ,_bgf =_agg .ReferenceBitmap .GetByte (_dga +_bbag );if _bgf !=nil {return ;};_fbe =int (_bgdf );};_dga ++;if _ecb >=1{_bgdf ,_bgf =_agg .RegionBitmap .GetByte (_becg -_fga );if _bgf !=nil {return ;};_cfa =int (_bgdf );};_becg ++;_ddb :=_agg .ReferenceDX %8;_ggg :=6+_ddb ;_cbee :=_dga %_bbag ;if _ggg >=0{if _ggg < 8{_cga =int16 (_ead >>uint (_ggg ))&0x07;};if _ggg < 8{_ccf =int16 (_cbdd >>uint (_ggg ))&0x07;};if _ggg < 8{_gceg =int16 (_fbe >>uint (_ggg ))&0x07;};if _ggg ==6&&_cbee > 1{if _dddd >=1&&(_dddd -1)< _agg .ReferenceBitmap .Height {_bgdf ,_bgf =_agg .ReferenceBitmap .GetByte (_dga -_bbag -2);if _bgf !=nil {return _bgf ;};_cga |=int16 (_bgdf <<2)&0x04;};if _dddd >=0&&_dddd < _agg .ReferenceBitmap .Height {_bgdf ,_bgf =_agg .ReferenceBitmap .GetByte (_dga -2);if _bgf !=nil {return _bgf ;};_ccf |=int16 (_bgdf <<2)&0x04;};if _dddd >=-1&&_dddd +1< _agg .ReferenceBitmap .Height {_bgdf ,_bgf =_agg .ReferenceBitmap .GetByte (_dga +_bbag -2);if _bgf !=nil {return _bgf ;};_gceg |=int16 (_bgdf <<2)&0x04;};};if _ggg ==0{_ead =0;_cbdd =0;_fbe =0;if _cbee < _bbag -1{if _dddd >=1&&_dddd -1< _agg .ReferenceBitmap .Height {_bgdf ,_bgf =_agg .ReferenceBitmap .GetByte (_dga -_bbag );if _bgf !=nil {return _bgf ;};_ead =int (_bgdf );};if _dddd >=0&&_dddd < _agg .ReferenceBitmap .Height {_bgdf ,_bgf =_agg .ReferenceBitmap .GetByte (_dga );if _bgf !=nil {return _bgf ;};_cbdd =int (_bgdf );};if _dddd >=-1&&_dddd +1< _agg .ReferenceBitmap .Height {_bgdf ,_bgf =_agg .ReferenceBitmap .GetByte (_dga +_bbag );if _bgf !=nil {return _bgf ;};_fbe =int (_bgdf );};};_dga ++;};}else {_cga =int16 (_ead <<1)&0x07;_ccf =int16 (_cbdd <<1)&0x07;_gceg =int16 (_fbe <<1)&0x07;_ead =0;_cbdd =0;_fbe =0;if _cbee < _bbag -1{if _dddd >=1&&_dddd -1< _agg .ReferenceBitmap .Height {_bgdf ,_bgf =_agg .ReferenceBitmap .GetByte (_dga -_bbag );if _bgf !=nil {return _bgf ;};_ead =int (_bgdf );};if _dddd >=0&&_dddd < _agg .ReferenceBitmap .Height {_bgdf ,_bgf =_agg .ReferenceBitmap .GetByte (_dga );if _bgf !=nil {return _bgf ;};_cbdd =int (_bgdf );};if _dddd >=-1&&_dddd +1< _agg .ReferenceBitmap .Height {_bgdf ,_bgf =_agg .ReferenceBitmap .GetByte (_dga +_bbag );if _bgf !=nil {return _bgf ;};_fbe =int (_bgdf );};_dga ++;};_cga |=int16 ((_ead >>7)&0x07);_ccf |=int16 ((_cbdd >>7)&0x07);_gceg |=int16 ((_fbe >>7)&0x07);};_aac =int16 (_cfa >>6);_bgd =0;_ccb :=(2-_ddb )%8;_ead <<=uint (_ccb );_cbdd <<=uint (_ccb );_fbe <<=uint (_ccb );_cfa <<=2;var _bff int ;for _bdfd :=0;_bdfd < _gba ;_bdfd ++{_bcec :=_bdfd &0x07;_cfcc :=_aeg .form (_cga ,_ccf ,_gceg ,_aac ,_bgd );if _agg ._bdf {_bgdf ,_bgf =_agg .RegionBitmap .GetByte (_agg .RegionBitmap .GetByteIndex (_bdfd ,_ecb ));if _bgf !=nil {return _bgf ;};_agg ._bdg .SetIndex (int32 (_agg .overrideAtTemplate0 (int (_cfcc ),_bdfd ,_ecb ,int (_bgdf ),_bcec )));}else {_agg ._bdg .SetIndex (int32 (_cfcc ));};_bff ,_bgf =_agg ._gga .DecodeBit (_agg ._bdg );if _bgf !=nil {return _bgf ;};if _bgf =_agg .RegionBitmap .SetPixel (_bdfd ,_ecb ,byte (_bff ));_bgf !=nil {return _bgf ;};_cga =((_cga <<1)|0x01&int16 (_ead >>7))&0x07;_ccf =((_ccf <<1)|0x01&int16 (_cbdd >>7))&0x07;_gceg =((_gceg <<1)|0x01&int16 (_fbe >>7))&0x07;_aac =((_aac <<1)|0x01&int16 (_cfa >>7))&0x07;_bgd =int16 (_bff );if (_bdfd -int (_agg .ReferenceDX ))%8==5{_ead =0;_cbdd =0;_fbe =0;if ((_bdfd -int (_agg .ReferenceDX ))/8)+1< _agg .ReferenceBitmap .RowStride {if _dddd >=1&&(_dddd -1)< _agg .ReferenceBitmap .Height {_bgdf ,_bgf =_agg .ReferenceBitmap .GetByte (_dga -_bbag );if _bgf !=nil {return _bgf ;};_ead =int (_bgdf );};if _dddd >=0&&_dddd < _agg .ReferenceBitmap .Height {_bgdf ,_bgf =_agg .ReferenceBitmap .GetByte (_dga );if _bgf !=nil {return _bgf ;};_cbdd =int (_bgdf );};if _dddd >=-1&&(_dddd +1)< _agg .ReferenceBitmap .Height {_bgdf ,_bgf =_agg .ReferenceBitmap .GetByte (_dga +_bbag );if _bgf !=nil {return _bgf ;};_fbe =int (_bgdf );};};_dga ++;}else {_ead <<=1;_cbdd <<=1;_fbe <<=1;};if _bcec ==5&&_ecb >=1{if ((_bdfd >>3)+1)>=_agg .RegionBitmap .RowStride {_cfa =0;}else {_bgdf ,_bgf =_agg .RegionBitmap .GetByte (_becg -_fga );if _bgf !=nil {return _bgf ;};_cfa =int (_bgdf );};_becg ++;}else {_cfa <<=1;};};return nil ;};func (_faeda *TextRegion )String ()string {_bbbfg :=&_ae .Builder {};_bbbfg .WriteString ("\u000a[\u0054E\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u000a");_bbbfg .WriteString (_faeda .RegionInfo .String ()+"\u000a");_bbbfg .WriteString (_e .Sprintf ("\u0009\u002d\u0020\u0053br\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0025\u0076\u000a",_faeda .SbrTemplate ));_bbbfg .WriteString (_e .Sprintf ("\u0009-\u0020S\u0062\u0044\u0073\u004f\u0066f\u0073\u0065t\u003a\u0020\u0025\u0076\u000a",_faeda .SbDsOffset ));_bbbfg .WriteString (_e .Sprintf ("\t\u002d \u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0050i\u0078\u0065\u006c\u003a %\u0076\u000a",_faeda .DefaultPixel ));_bbbfg .WriteString (_e .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0076\u000a",_faeda .CombinationOperator ));_bbbfg .WriteString (_e .Sprintf ("\t\u002d \u0049\u0073\u0054\u0072\u0061\u006e\u0073\u0070o\u0073\u0065\u0064\u003a %\u0076\u000a",_faeda .IsTransposed ));_bbbfg .WriteString (_e .Sprintf ("\u0009\u002d\u0020Re\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0043\u006f\u0072\u006e\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_faeda .ReferenceCorner ));_bbbfg .WriteString (_e .Sprintf ("\t\u002d\u0020\u0055\u0073eR\u0065f\u0069\u006e\u0065\u006d\u0065n\u0074\u003a\u0020\u0025\u0076\u000a",_faeda .UseRefinement ));_bbbfg .WriteString (_e .Sprintf ("\u0009-\u0020\u0049\u0073\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045n\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0076\u000a",_faeda .IsHuffmanEncoded ));if _faeda .IsHuffmanEncoded {_bbbfg .WriteString (_e .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_faeda .SbHuffRSize ));_bbbfg .WriteString (_e .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0059:\u0020\u0025\u0076\u000a",_faeda .SbHuffRDY ));_bbbfg .WriteString (_e .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0058:\u0020\u0025\u0076\u000a",_faeda .SbHuffRDX ));_bbbfg .WriteString (_e .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069\u0067\u0068\u0074\u003a\u0020\u0025v\u000a",_faeda .SbHuffRDHeight ));_bbbfg .WriteString (_e .Sprintf ("\t\u002d\u0020\u0053\u0062Hu\u0066f\u0052\u0044\u0057\u0069\u0064t\u0068\u003a\u0020\u0025\u0076\u000a",_faeda .SbHuffRDWidth ));_bbbfg .WriteString (_e .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0054\u003a\u0020\u0025\u0076\u000a",_faeda .SbHuffDT ));_bbbfg .WriteString (_e .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0053\u003a\u0020\u0025\u0076\u000a",_faeda .SbHuffDS ));_bbbfg .WriteString (_e .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0046\u0053\u003a\u0020\u0025\u0076\u000a",_faeda .SbHuffFS ));};_bbbfg .WriteString (_e .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_faeda .SbrATX ));_bbbfg .WriteString (_e .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0059:\u0020\u0025\u0076\u000a",_faeda .SbrATY ));_bbbfg .WriteString (_e .Sprintf ("\u0009\u002d\u0020N\u0075\u006d\u0062\u0065r\u004f\u0066\u0053\u0079\u006d\u0062\u006fl\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_faeda .NumberOfSymbolInstances ));_bbbfg .WriteString (_e .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_faeda .SbrATX ));return _bbbfg .String ();};func (_edff *Header )pageSize ()uint {if _edff .PageAssociation <=255{return 1;};return 4;};func (_agde *SymbolDictionary )GetDictionary ()([]*_gg .Bitmap ,error ){_be .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c-\u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");defer func (){_be .Log .Trace ("\u005b\u0053\u0059M\u0042\u004f\u004c\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");_be .Log .Trace ("\u005b\u0053Y\u004d\u0042\u004f\u004c\u002dD\u0049\u0043\u0054\u0049\u004fN\u0041\u0052\u0059\u005d\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020\u000a\u0045\u0078\u003a\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u000a\u006e\u0065\u0077\u003a\u0027\u0025\u0073\u0027",_agde ._gbba ,_agde ._cdce );}();if _agde ._gbba ==nil {var _fddb error ;if _agde .UseRefinementAggregation {_agde ._fdc =_agde .getSbSymCodeLen ();};if !_agde .IsHuffmanEncoded {if _fddb =_agde .setCodingStatistics ();_fddb !=nil {return nil ,_fddb ;};};_agde ._cdce =make ([]*_gg .Bitmap ,_agde .NumberOfNewSymbols );var _bbbeg []int ;if _agde .IsHuffmanEncoded &&!_agde .UseRefinementAggregation {_bbbeg =make ([]int ,_agde .NumberOfNewSymbols );};if _fddb =_agde .setSymbolsArray ();_fddb !=nil {return nil ,_fddb ;};var _aged ,_gfcfc int64 ;_agde ._ffdd =0;for _agde ._ffdd < _agde .NumberOfNewSymbols {_gfcfc ,_fddb =_agde .decodeHeightClassDeltaHeight ();if _fddb !=nil {return nil ,_fddb ;};_aged +=_gfcfc ;var _aaab ,_ecae uint32 ;_bbgd :=int64 (_agde ._ffdd );for {var _ggea int64 ;_ggea ,_fddb =_agde .decodeDifferenceWidth ();if _gf .Is (_fddb ,_d .ErrOOB ){break ;};if _fddb !=nil {return nil ,_fddb ;};if _agde ._ffdd >=_agde .NumberOfNewSymbols {break ;};_aaab +=uint32 (_ggea );_ecae +=_aaab ;if !_agde .IsHuffmanEncoded ||_agde .UseRefinementAggregation {if !_agde .UseRefinementAggregation {_fddb =_agde .decodeDirectlyThroughGenericRegion (_aaab ,uint32 (_aged ));if _fddb !=nil {return nil ,_fddb ;};}else {_fddb =_agde .decodeAggregate (_aaab ,uint32 (_aged ));if _fddb !=nil {return nil ,_fddb ;};};}else if _agde .IsHuffmanEncoded &&!_agde .UseRefinementAggregation {_bbbeg [_agde ._ffdd ]=int (_aaab );};_agde ._ffdd ++;};if _agde .IsHuffmanEncoded &&!_agde .UseRefinementAggregation {var _cfagb int64 ;if _agde .SdHuffBMSizeSelection ==0{var _abbe _bc .Tabler ;_abbe ,_fddb =_bc .GetStandardTable (1);if _fddb !=nil {return nil ,_fddb ;};_cfagb ,_fddb =_abbe .Decode (_agde ._defc );if _fddb !=nil {return nil ,_fddb ;};}else {_cfagb ,_fddb =_agde .huffDecodeBmSize ();if _fddb !=nil {return nil ,_fddb ;};};_agde ._defc .Align ();var _agca *_gg .Bitmap ;_agca ,_fddb =_agde .decodeHeightClassCollectiveBitmap (_cfagb ,uint32 (_aged ),_ecae );if _fddb !=nil {return nil ,_fddb ;};_fddb =_agde .decodeHeightClassBitmap (_agca ,_bbgd ,int (_aged ),_bbbeg );if _fddb !=nil {return nil ,_fddb ;};};};_fbecf ,_fddb :=_agde .getToExportFlags ();if _fddb !=nil {return nil ,_fddb ;};_agde .setExportedSymbols (_fbecf );};return _agde ._gbba ,nil ;};func (_bcggf *HalftoneRegion )parseHeader ()error {if _dabg :=_bcggf .RegionSegment .parseHeader ();_dabg !=nil {return _dabg ;};_ccfb ,_bgfg :=_bcggf ._fdgg .ReadBit ();if _bgfg !=nil {return _bgfg ;};_bcggf .HDefaultPixel =int8 (_ccfb );_fdef ,_bgfg :=_bcggf ._fdgg .ReadBits (3);if _bgfg !=nil {return _bgfg ;};_bcggf .CombinationOperator =_gg .CombinationOperator (_fdef &0xf);_ccfb ,_bgfg =_bcggf ._fdgg .ReadBit ();if _bgfg !=nil {return _bgfg ;};if _ccfb ==1{_bcggf .HSkipEnabled =true ;};_fdef ,_bgfg =_bcggf ._fdgg .ReadBits (2);if _bgfg !=nil {return _bgfg ;};_bcggf .HTemplate =byte (_fdef &0xf);_ccfb ,_bgfg =_bcggf ._fdgg .ReadBit ();if _bgfg !=nil {return _bgfg ;};if _ccfb ==1{_bcggf .IsMMREncoded =true ;};_fdef ,_bgfg =_bcggf ._fdgg .ReadBits (32);if _bgfg !=nil {return _bgfg ;};_bcggf .HGridWidth =uint32 (_fdef &_f .MaxUint32 );_fdef ,_bgfg =_bcggf ._fdgg .ReadBits (32);if _bgfg !=nil {return _bgfg ;};_bcggf .HGridHeight =uint32 (_fdef &_f .MaxUint32 );_fdef ,_bgfg =_bcggf ._fdgg .ReadBits (32);if _bgfg !=nil {return _bgfg ;};_bcggf .HGridX =int32 (_fdef &_f .MaxInt32 );_fdef ,_bgfg =_bcggf ._fdgg .ReadBits (32);if _bgfg !=nil {return _bgfg ;};_bcggf .HGridY =int32 (_fdef &_f .MaxInt32 );_fdef ,_bgfg =_bcggf ._fdgg .ReadBits (16);if _bgfg !=nil {return _bgfg ;};_bcggf .HRegionX =uint16 (_fdef &_f .MaxUint16 );_fdef ,_bgfg =_bcggf ._fdgg .ReadBits (16);if _bgfg !=nil {return _bgfg ;};_bcggf .HRegionY =uint16 (_fdef &_f .MaxUint16 );if _bgfg =_bcggf .computeSegmentDataStructure ();_bgfg !=nil {return _bgfg ;};return _bcggf .checkInput ();};type PageInformationSegment struct{_cad _fb .StreamReader ;PageBMHeight int ;PageBMWidth int ;ResolutionX int ;ResolutionY int ;_ege bool ;_fcffa _gg .CombinationOperator ;_afef bool ;_bbbdc uint8 ;_dgdf bool ;IsLossless bool ;IsStripe bool ;MaxStripeSize uint16 ;};func (_baecf *TableSegment )HtOOB ()int32 {return _baecf ._dced };func NewHeader (d Documenter ,r _fb .StreamReader ,offset int64 ,organizationType OrganizationType )(*Header ,error ){_abff :=&Header {Reader :r };if _gcag :=_abff .parse (d ,r ,offset ,organizationType );_gcag !=nil {return nil ,_de .Wrap (_gcag ,"\u004ee\u0077\u0048\u0065\u0061\u0064\u0065r","");};return _abff ,nil ;};func (_bec *GenericRefinementRegion )GetRegionBitmap ()(*_gg .Bitmap ,error ){var _da error ;_be .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");defer func (){if _da !=nil {_be .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0047\u0065\u0074R\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006dap\u0020\u0066a\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_da );}else {_be .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");};}();if _bec .RegionBitmap !=nil {return _bec .RegionBitmap ,nil ;};_fabf :=0;if _bec .ReferenceBitmap ==nil {_bec .ReferenceBitmap ,_da =_bec .getGrReference ();if _da !=nil {return nil ,_da ;};};if _bec ._gga ==nil {_bec ._gga ,_da =_fa .New (_bec ._dg );if _da !=nil {return nil ,_da ;};};if _bec ._bdg ==nil {_bec ._bdg =_fa .NewStats (8192,1);};_bec .RegionBitmap =_gg .New (int (_bec .RegionInfo .BitmapWidth ),int (_bec .RegionInfo .BitmapHeight ));if _bec .TemplateID ==0{if _da =_bec .updateOverride ();_da !=nil {return nil ,_da ;};};_fac :=(_bec .RegionBitmap .Width +7)&-8;var _bb int ;if _bec .IsTPGROn {_bb =int (-_bec .ReferenceDY )*_bec .ReferenceBitmap .RowStride ;};_eb :=_bb +1;for _cdf :=0;_cdf < _bec .RegionBitmap .Height ;_cdf ++{if _bec .IsTPGROn {_eac ,_bg :=_bec .decodeSLTP ();if _bg !=nil {return nil ,_bg ;};_fabf ^=_eac ;};if _fabf ==0{_da =_bec .decodeOptimized (_cdf ,_bec .RegionBitmap .Width ,_bec .RegionBitmap .RowStride ,_bec .ReferenceBitmap .RowStride ,_fac ,_bb ,_eb );if _da !=nil {return nil ,_da ;};}else {_da =_bec .decodeTypicalPredictedLine (_cdf ,_bec .RegionBitmap .Width ,_bec .RegionBitmap .RowStride ,_bec .ReferenceBitmap .RowStride ,_fac ,_bb );if _da !=nil {return nil ,_da ;};};};return _bec .RegionBitmap ,nil ;};func (_gafec *RegionSegment )parseHeader ()error {const _bgaf ="p\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_be .Log .Trace ("\u005b\u0052\u0045\u0047I\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002dH\u0045A\u0044\u0045\u0052\u005d\u0020\u0042\u0065g\u0069\u006e");defer func (){_be .Log .Trace ("\u005b\u0052\u0045G\u0049\u004f\u004e\u005d[\u0050\u0041\u0052\u0053\u0045\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");}();_fba ,_ddbb :=_gafec ._dfg .ReadBits (32);if _ddbb !=nil {return _de .Wrap (_ddbb ,_bgaf ,"\u0077\u0069\u0064t\u0068");};_gafec .BitmapWidth =uint32 (_fba &_f .MaxUint32 );_fba ,_ddbb =_gafec ._dfg .ReadBits (32);if _ddbb !=nil {return _de .Wrap (_ddbb ,_bgaf ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_gafec .BitmapHeight =uint32 (_fba &_f .MaxUint32 );_fba ,_ddbb =_gafec ._dfg .ReadBits (32);if _ddbb !=nil {return _de .Wrap (_ddbb ,_bgaf ,"\u0078\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_gafec .XLocation =uint32 (_fba &_f .MaxUint32 );_fba ,_ddbb =_gafec ._dfg .ReadBits (32);if _ddbb !=nil {return _de .Wrap (_ddbb ,_bgaf ,"\u0079\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_gafec .YLocation =uint32 (_fba &_f .MaxUint32 );if _ ,_ddbb =_gafec ._dfg .ReadBits (5);_ddbb !=nil {return _de .Wrap (_ddbb ,_bgaf ,"\u0064i\u0072\u0079\u0020\u0072\u0065\u0061d");};if _ddbb =_gafec .readCombinationOperator ();_ddbb !=nil {return _de .Wrap (_ddbb ,_bgaf ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};return nil ;};var _ SegmentEncoder =&GenericRegion {};func (_ec *GenericRefinementRegion )Init (header *Header ,r _fb .StreamReader )error {_ec ._fe =header ;_ec ._dg =r ;_ec .RegionInfo =NewRegionSegment (r );return _ec .parseHeader ();};func (_acea *SymbolDictionary )getSymbol (_cbgc int )(*_gg .Bitmap ,error ){const _bde ="\u0067e\u0074\u0053\u0079\u006d\u0062\u006fl";_baa ,_eggc :=_acea ._dde .GetBitmap (_acea ._feeg [_cbgc ]);if _eggc !=nil {return nil ,_de .Wrap (_eggc ,_bde ,"\u0063\u0061n\u0027\u0074\u0020g\u0065\u0074\u0020\u0073\u0079\u006d\u0062\u006f\u006c");};return _baa ,nil ;};func (_befg *TextRegion )Init (header *Header ,r _fb .StreamReader )error {_befg .Header =header ;_befg ._afde =r ;_befg .RegionInfo =NewRegionSegment (_befg ._afde );return _befg .parseHeader ();};func (_ebae *HalftoneRegion )GetRegionInfo ()*RegionSegment {return _ebae .RegionSegment };func (_dadfe *PageInformationSegment )readMaxStripeSize ()error {_gaad ,_deca :=_dadfe ._cad .ReadBits (15);if _deca !=nil {return _deca ;};_dadfe .MaxStripeSize =uint16 (_gaad &_f .MaxUint16 );return nil ;};func (_aggf *PageInformationSegment )String ()string {_cff :=&_ae .Builder {};_cff .WriteString ("\u000a\u005b\u0050\u0041G\u0045\u002d\u0049\u004e\u0046\u004f\u0052\u004d\u0041\u0054I\u004fN\u002d\u0053\u0045\u0047\u004d\u0045\u004eT\u005d\u000a");_cff .WriteString (_e .Sprintf ("\u0009\u002d \u0042\u004d\u0048e\u0069\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u000a",_aggf .PageBMHeight ));_cff .WriteString (_e .Sprintf ("\u0009-\u0020B\u004d\u0057\u0069\u0064\u0074\u0068\u003a\u0020\u0025\u0064\u000a",_aggf .PageBMWidth ));_cff .WriteString (_e .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0058\u003a\u0020\u0025\u0064\u000a",_aggf .ResolutionX ));_cff .WriteString (_e .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0059\u003a\u0020\u0025\u0064\u000a",_aggf .ResolutionY ));_cff .WriteString (_e .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0073\u000a",_aggf ._fcffa ));_cff .WriteString (_e .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006eO\u0070\u0065\u0072\u0061\u0074\u006f\u0072O\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025v\u000a",_aggf ._ege ));_cff .WriteString (_e .Sprintf ("\u0009-\u0020I\u0073\u004c\u006f\u0073\u0073l\u0065\u0073s\u003a\u0020\u0025\u0076\u000a",_aggf .IsLossless ));_cff .WriteString (_e .Sprintf ("\u0009\u002d\u0020R\u0065\u0071\u0075\u0069r\u0065\u0073\u0041\u0075\u0078\u0069\u006ci\u0061\u0072\u0079\u0042\u0075\u0066\u0066\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_aggf ._afef ));_cff .WriteString (_e .Sprintf ("\u0009\u002d\u0020M\u0069\u0067\u0068\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0052e\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0076\u000a",_aggf ._dgdf ));_cff .WriteString (_e .Sprintf ("\u0009\u002d\u0020\u0049\u0073\u0053\u0074\u0072\u0069\u0070\u0065\u0064:\u0020\u0025\u0076\u000a",_aggf .IsStripe ));_cff .WriteString (_e .Sprintf ("\t\u002d\u0020\u004d\u0061xS\u0074r\u0069\u0070\u0065\u0053\u0069z\u0065\u003a\u0020\u0025\u0076\u000a",_aggf .MaxStripeSize ));return _cff .String ();};var _ SegmentEncoder =&RegionSegment {};func (_dgdb *Header )writeReferredToCount (_ccad _fb .BinaryWriter )(_abge int ,_cfcb error ){const _ddbd ="w\u0072i\u0074\u0065\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0043ou\u006e\u0074";_dgdb .RTSNumbers =make ([]int ,len (_dgdb .RTSegments ));for _bbca ,_aea :=range _dgdb .RTSegments {_dgdb .RTSNumbers [_bbca ]=int (_aea .SegmentNumber );};if len (_dgdb .RTSNumbers )<=4{var _dfaa byte ;if len (_dgdb .RetainBits )>=1{_dfaa =_dgdb .RetainBits [0];};_dfaa |=byte (len (_dgdb .RTSNumbers ))<<5;if _cfcb =_ccad .WriteByte (_dfaa );_cfcb !=nil {return 0,_de .Wrap (_cfcb ,_ddbd ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return 1,nil ;};_babb :=uint32 (len (_dgdb .RTSNumbers ));_daada :=make ([]byte ,4+_bd .Ceil (len (_dgdb .RTSNumbers )+1,8));_babb |=0x7<<29;_ce .BigEndian .PutUint32 (_daada ,_babb );copy (_daada [1:],_dgdb .RetainBits );_abge ,_cfcb =_ccad .Write (_daada );if _cfcb !=nil {return 0,_de .Wrap (_cfcb ,_ddbd ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return _abge ,nil ;};func (_fegg *PageInformationSegment )parseHeader ()(_fdd error ){_be .Log .Trace ("\u005b\u0050\u0061\u0067\u0065I\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067m\u0065\u006e\u0074\u005d\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u002e\u002e");defer func (){var _geefb ="[\u0050\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072m\u0061\u0074\u0069\u006f\u006e\u0053\u0065gm\u0065\u006e\u0074\u005d \u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065ad\u0065\u0072 \u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064";if _fdd !=nil {_geefb +="\u0020\u0077\u0069t\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u0020"+_fdd .Error ();}else {_geefb +="\u0020\u0073\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079";};_be .Log .Trace (_geefb );}();if _fdd =_fegg .readWidthAndHeight ();_fdd !=nil {return _fdd ;};if _fdd =_fegg .readResolution ();_fdd !=nil {return _fdd ;};_ ,_fdd =_fegg ._cad .ReadBit ();if _fdd !=nil {return _fdd ;};if _fdd =_fegg .readCombinationOperatorOverrideAllowed ();_fdd !=nil {return _fdd ;};if _fdd =_fegg .readRequiresAuxiliaryBuffer ();_fdd !=nil {return _fdd ;};if _fdd =_fegg .readCombinationOperator ();_fdd !=nil {return _fdd ;};if _fdd =_fegg .readDefaultPixelValue ();_fdd !=nil {return _fdd ;};if _fdd =_fegg .readContainsRefinement ();_fdd !=nil {return _fdd ;};if _fdd =_fegg .readIsLossless ();_fdd !=nil {return _fdd ;};if _fdd =_fegg .readIsStriped ();_fdd !=nil {return _fdd ;};if _fdd =_fegg .readMaxStripeSize ();_fdd !=nil {return _fdd ;};if _fdd =_fegg .checkInput ();_fdd !=nil {return _fdd ;};_be .Log .Trace ("\u0025\u0073",_fegg );return nil ;};func (_fage *GenericRegion )readGBAtPixels (_bge int )error {const _gfe ="\u0072\u0065\u0061\u0064\u0047\u0042\u0041\u0074\u0050i\u0078\u0065\u006c\u0073";_fage .GBAtX =make ([]int8 ,_bge );_fage .GBAtY =make ([]int8 ,_bge );for _dafa :=0;_dafa < _bge ;_dafa ++{_fbbd ,_dea :=_fage ._gcf .ReadByte ();if _dea !=nil {return _de .Wrapf (_dea ,_gfe ,"\u0058\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_dafa );};_fage .GBAtX [_dafa ]=int8 (_fbbd );_fbbd ,_dea =_fage ._gcf .ReadByte ();if _dea !=nil {return _de .Wrapf (_dea ,_gfe ,"\u0059\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_dafa );};_fage .GBAtY [_dafa ]=int8 (_fbbd );};return nil ;};func (_cgdb *PageInformationSegment )checkInput ()error {if _cgdb .PageBMHeight ==_f .MaxInt32 {if !_cgdb .IsStripe {_be .Log .Debug ("P\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0053\u0065\u0067me\u006e\u0074\u002e\u0049s\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0073\u0068ou\u006c\u0064 \u0062\u0065\u0020\u0074\u0072\u0075\u0065\u002e");};};return nil ;};func (_ccga *GenericRegion )decodeTemplate2 (_adff ,_eaa ,_fabb int ,_fgfa ,_eaab int )(_aab error ){const _fabc ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0032";var (_bag ,_fbea int ;_acb ,_fagd int ;_beaf byte ;_dac ,_eecf int ;);if _adff >=1{_beaf ,_aab =_ccga .Bitmap .GetByte (_eaab );if _aab !=nil {return _de .Wrap (_aab ,_fabc ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0031");};_acb =int (_beaf );};if _adff >=2{_beaf ,_aab =_ccga .Bitmap .GetByte (_eaab -_ccga .Bitmap .RowStride );if _aab !=nil {return _de .Wrap (_aab ,_fabc ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0032");};_fagd =int (_beaf )<<4;};_bag =(_acb >>3&0x7c)|(_fagd >>3&0x380);for _badd :=0;_badd < _fabb ;_badd =_dac {var (_dfef byte ;_dab int ;);_dac =_badd +8;if _cdb :=_eaa -_badd ;_cdb > 8{_dab =8;}else {_dab =_cdb ;};if _adff > 0{_acb <<=8;if _dac < _eaa {_beaf ,_aab =_ccga .Bitmap .GetByte (_eaab +1);if _aab !=nil {return _de .Wrap (_aab ,_fabc ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0030");};_acb |=int (_beaf );};};if _adff > 1{_fagd <<=8;if _dac < _eaa {_beaf ,_aab =_ccga .Bitmap .GetByte (_eaab -_ccga .Bitmap .RowStride +1);if _aab !=nil {return _de .Wrap (_aab ,_fabc ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0031");};_fagd |=int (_beaf )<<4;};};for _bfba :=0;_bfba < _dab ;_bfba ++{_ddc :=uint (10-_bfba );if _ccga ._eea {_fbea =_ccga .overrideAtTemplate2 (_bag ,_badd +_bfba ,_adff ,int (_dfef ),_bfba );_ccga ._dfag .SetIndex (int32 (_fbea ));}else {_ccga ._dfag .SetIndex (int32 (_bag ));};_eecf ,_aab =_ccga ._ebf .DecodeBit (_ccga ._dfag );if _aab !=nil {return _de .Wrap (_aab ,_fabc ,"");};_dfef |=byte (_eecf <<uint (7-_bfba ));_bag =((_bag &0x1bd)<<1)|_eecf |((_acb >>_ddc )&0x4)|((_fagd >>_ddc )&0x80);};if _abfe :=_ccga .Bitmap .SetByte (_fgfa ,_dfef );_abfe !=nil {return _de .Wrap (_abfe ,_fabc ,"");};_fgfa ++;_eaab ++;};return nil ;};func (_dda *TableSegment )parseHeader ()error {var (_bbdbe int ;_adge uint64 ;_dae error ;);_bbdbe ,_dae =_dda ._fffb .ReadBit ();if _dae !=nil {return _dae ;};if _bbdbe ==1{return _e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0061\u0062\u006c\u0065 \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0064e\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u002e\u0020\u0042\u002e\u0032\u002e1\u0020\u0043\u006f\u0064\u0065\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0042\u0069\u0074\u0020\u0037\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u007a\u0065\u0072\u006f\u002e\u0020\u0057a\u0073\u003a \u0025\u0064",_bbdbe );};if _adge ,_dae =_dda ._fffb .ReadBits (3);_dae !=nil {return _dae ;};_dda ._ccbff =(int32 (_adge )+1)&0xf;if _adge ,_dae =_dda ._fffb .ReadBits (3);_dae !=nil {return _dae ;};_dda ._dffc =(int32 (_adge )+1)&0xf;if _adge ,_dae =_dda ._fffb .ReadBits (32);_dae !=nil {return _dae ;};_dda ._ffagb =int32 (_adge &_f .MaxInt32 );if _adge ,_dae =_dda ._fffb .ReadBits (32);_dae !=nil {return _dae ;};_dda ._gebd =int32 (_adge &_f .MaxInt32 );return nil ;};func (_aecc *SymbolDictionary )decodeHeightClassDeltaHeightWithHuffman ()(int64 ,error ){switch _aecc .SdHuffDecodeHeightSelection {case 0:_dfaaf ,_gfge :=_bc .GetStandardTable (4);if _gfge !=nil {return 0,_gfge ;};return _dfaaf .Decode (_aecc ._defc );case 1:_ebba ,_bbbdd :=_bc .GetStandardTable (5);if _bbbdd !=nil {return 0,_bbbdd ;};return _ebba .Decode (_aecc ._defc );case 3:if _aecc ._cedf ==nil {_cccg ,_dcec :=_bc .GetStandardTable (0);if _dcec !=nil {return 0,_dcec ;};_aecc ._cedf =_cccg ;};return _aecc ._cedf .Decode (_aecc ._defc );};return 0,nil ;};func (_ca *GenericRefinementRegion )overrideAtTemplate0 (_ad ,_age ,_cag ,_fbef ,_bed int )int {if _ca ._bdc [0]{_ad &=0xfff7;if _ca .GrAtY [0]==0&&int (_ca .GrAtX [0])>=-_bed {_ad |=(_fbef >>uint (7-(_bed +int (_ca .GrAtX [0])))&0x1)<<3;}else {_ad |=_ca .getPixel (_ca .RegionBitmap ,_age +int (_ca .GrAtX [0]),_cag +int (_ca .GrAtY [0]))<<3;};};if _ca ._bdc [1]{_ad &=0xefff;if _ca .GrAtY [1]==0&&int (_ca .GrAtX [1])>=-_bed {_ad |=(_fbef >>uint (7-(_bed +int (_ca .GrAtX [1])))&0x1)<<12;}else {_ad |=_ca .getPixel (_ca .ReferenceBitmap ,_age +int (_ca .GrAtX [1]),_cag +int (_ca .GrAtY [1]));};};return _ad ;};func (_afgb *SymbolDictionary )huffDecodeRefAggNInst ()(int64 ,error ){if !_afgb .SdHuffAggInstanceSelection {_gcgb ,_adeg :=_bc .GetStandardTable (1);if _adeg !=nil {return 0,_adeg ;};return _gcgb .Decode (_afgb ._defc );};if _afgb ._gccf ==nil {var (_afdcf int ;_facdf error ;);if _afgb .SdHuffDecodeHeightSelection ==3{_afdcf ++;};if _afgb .SdHuffDecodeWidthSelection ==3{_afdcf ++;};if _afgb .SdHuffBMSizeSelection ==3{_afdcf ++;};_afgb ._gccf ,_facdf =_afgb .getUserTable (_afdcf );if _facdf !=nil {return 0,_facdf ;};};return _afgb ._gccf .Decode (_afgb ._defc );};func (_cec *Header )String ()string {_ggfb :=&_ae .Builder {};_ggfb .WriteString ("\u000a[\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045A\u0044\u0045\u0052\u005d\u000a");_ggfb .WriteString (_e .Sprintf ("\t\u002d\u0020\u0053\u0065gm\u0065n\u0074\u004e\u0075\u006d\u0062e\u0072\u003a\u0020\u0025\u0076\u000a",_cec .SegmentNumber ));_ggfb .WriteString (_e .Sprintf ("\u0009\u002d\u0020T\u0079\u0070\u0065\u003a\u0020\u0025\u0076\u000a",_cec .Type ));_ggfb .WriteString (_e .Sprintf ("\u0009-\u0020R\u0065\u0074\u0061\u0069\u006eF\u006c\u0061g\u003a\u0020\u0025\u0076\u000a",_cec .RetainFlag ));_ggfb .WriteString (_e .Sprintf ("\u0009\u002d\u0020Pa\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_cec .PageAssociation ));_ggfb .WriteString (_e .Sprintf ("\u0009\u002d\u0020\u0050\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074i\u006fn\u0046\u0069\u0065\u006c\u0064\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_cec .PageAssociationFieldSize ));_ggfb .WriteString ("\u0009-\u0020R\u0054\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u0053\u003a\u000a");for _ ,_ecg :=range _cec .RTSNumbers {_ggfb .WriteString (_e .Sprintf ("\u0009\t\u002d\u0020\u0025\u0064\u000a",_ecg ));};_ggfb .WriteString (_e .Sprintf ("\t\u002d \u0048\u0065\u0061\u0064\u0065\u0072\u004c\u0065n\u0067\u0074\u0068\u003a %\u0076\u000a",_cec .HeaderLength ));_ggfb .WriteString (_e .Sprintf ("\u0009-\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061L\u0065n\u0067\u0074\u0068\u003a\u0020\u0025\u0076\n",_cec .SegmentDataLength ));_ggfb .WriteString (_e .Sprintf ("\u0009\u002d\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074D\u0061\u0074\u0061\u0053\u0074\u0061\u0072t\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0076\u000a",_cec .SegmentDataStartOffset ));return _ggfb .String ();};func (_cgeab *SymbolDictionary )Encode (w _fb .BinaryWriter )(_eeabg int ,_cagb error ){const _ggfae ="\u0053\u0079\u006dbo\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0045\u006e\u0063\u006f\u0064\u0065";if _cgeab ==nil {return 0,_de .Error (_ggfae ,"\u0073\u0079m\u0062\u006f\u006c\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066in\u0065\u0064");};if _eeabg ,_cagb =_cgeab .encodeFlags (w );_cagb !=nil {return _eeabg ,_de .Wrap (_cagb ,_ggfae ,"");};_cdfa ,_cagb :=_cgeab .encodeATFlags (w );if _cagb !=nil {return _eeabg ,_de .Wrap (_cagb ,_ggfae ,"");};_eeabg +=_cdfa ;if _cdfa ,_cagb =_cgeab .encodeRefinementATFlags (w );_cagb !=nil {return _eeabg ,_de .Wrap (_cagb ,_ggfae ,"");};_eeabg +=_cdfa ;if _cdfa ,_cagb =_cgeab .encodeNumSyms (w );_cagb !=nil {return _eeabg ,_de .Wrap (_cagb ,_ggfae ,"");};_eeabg +=_cdfa ;if _cdfa ,_cagb =_cgeab .encodeSymbols (w );_cagb !=nil {return _eeabg ,_de .Wrap (_cagb ,_ggfae ,"");};_eeabg +=_cdfa ;return _eeabg ,nil ;};func (_dbdb *Header )writeReferredToSegments (_fgc _fb .BinaryWriter )(_dce int ,_aeec error ){const _bfd ="\u0077\u0072\u0069te\u0052\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";var (_gff uint16 ;_bbaf uint32 ;);_ffcd :=_dbdb .referenceSize ();_ebda :=1;_gcc :=make ([]byte ,_ffcd );for _ ,_abab :=range _dbdb .RTSNumbers {switch _ffcd {case 4:_bbaf =uint32 (_abab );_ce .BigEndian .PutUint32 (_gcc ,_bbaf );_ebda ,_aeec =_fgc .Write (_gcc );if _aeec !=nil {return 0,_de .Wrap (_aeec ,_bfd ,"u\u0069\u006e\u0074\u0033\u0032\u0020\u0073\u0069\u007a\u0065");};case 2:_gff =uint16 (_abab );_ce .BigEndian .PutUint16 (_gcc ,_gff );_ebda ,_aeec =_fgc .Write (_gcc );if _aeec !=nil {return 0,_de .Wrap (_aeec ,_bfd ,"\u0075\u0069\u006e\u0074\u0031\u0036");};default:if _aeec =_fgc .WriteByte (byte (_abab ));_aeec !=nil {return 0,_de .Wrap (_aeec ,_bfd ,"\u0075\u0069\u006et\u0038");};};_dce +=_ebda ;};return _dce ,nil ;};func (_beac *SymbolDictionary )setRetainedCodingContexts (_bbf *SymbolDictionary ){_beac ._fafd =_bbf ._fafd ;_beac .IsHuffmanEncoded =_bbf .IsHuffmanEncoded ;_beac .UseRefinementAggregation =_bbf .UseRefinementAggregation ;_beac .SdTemplate =_bbf .SdTemplate ;_beac .SdrTemplate =_bbf .SdrTemplate ;_beac .SdATX =_bbf .SdATX ;_beac .SdATY =_bbf .SdATY ;_beac .SdrATX =_bbf .SdrATX ;_beac .SdrATY =_bbf .SdrATY ;_beac ._cfdd =_bbf ._cfdd ;};func (_fcac *HalftoneRegion )Init (hd *Header ,r _fb .StreamReader )error {_fcac ._fdgg =r ;_fcac ._feg =hd ;_fcac .RegionSegment =NewRegionSegment (r );return _fcac .parseHeader ();};func (_cecf *SymbolDictionary )setAtPixels ()error {if _cecf .IsHuffmanEncoded {return nil ;};_babbd :=1;if _cecf .SdTemplate ==0{_babbd =4;};if _geefe :=_cecf .readAtPixels (_babbd );_geefe !=nil {return _geefe ;};return nil ;};func (_fgca *PatternDictionary )readPatternWidthAndHeight ()error {_gfcd ,_aegdgf :=_fgca ._abc .ReadByte ();if _aegdgf !=nil {return _aegdgf ;};_fgca .HdpWidth =_gfcd ;_gfcd ,_aegdgf =_fgca ._abc .ReadByte ();if _aegdgf !=nil {return _aegdgf ;};_fgca .HdpHeight =_gfcd ;return nil ;};func (_dfcf *HalftoneRegion )renderPattern (_abgab [][]int )(_cdfb error ){var _gbacf ,_bgfb int ;for _cbgg :=0;_cbgg < int (_dfcf .HGridHeight );_cbgg ++{for _cded :=0;_cded < int (_dfcf .HGridWidth );_cded ++{_gbacf =_dfcf .computeX (_cbgg ,_cded );_bgfb =_dfcf .computeY (_cbgg ,_cded );_cbf :=_dfcf .Patterns [_abgab [_cbgg ][_cded ]];if _cdfb =_gg .Blit (_cbf ,_dfcf .HalftoneRegionBitmap ,_gbacf +int (_dfcf .HGridX ),_bgfb +int (_dfcf .HGridY ),_dfcf .CombinationOperator );_cdfb !=nil {return _cdfb ;};};};return nil ;};func (_gd *EndOfStripe )parseHeader (_fg *Header ,_fab _fb .StreamReader )error {_ea ,_eaf :=_gd ._bce .ReadBits (32);if _eaf !=nil {return _eaf ;};_gd ._cgd =int (_ea &_f .MaxInt32 );return nil ;};func (_bbcb *Header )subInputReader ()(_fb .StreamReader ,error ){return _fb .NewSubstreamReader (_bbcb .Reader ,_bbcb .SegmentDataStartOffset ,_bbcb .SegmentDataLength );};func (_fcge *HalftoneRegion )checkInput ()error {if _fcge .IsMMREncoded {if _fcge .HTemplate !=0{_be .Log .Debug ("\u0048\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030",_fcge .HTemplate );};if _fcge .HSkipEnabled {_be .Log .Debug ("\u0048\u0053\u006b\u0069\u0070\u0045\u006e\u0061\u0062\u006c\u0065\u0064\u0020\u0030\u0020\u0025\u0076\u0020(\u0073\u0068\u006f\u0075\u006c\u0064\u0020c\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020v\u0061\u006c\u0075\u0065\u0020\u0066\u0061\u006c\u0073\u0065\u0029",_fcge .HSkipEnabled );};};return nil ;};func (_gdag *Header )parse (_bbcf Documenter ,_affa _fb .StreamReader ,_bbbg int64 ,_ffab OrganizationType )(_dafg error ){const _ecag ="\u0070\u0061\u0072s\u0065";_be .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u005b\u0050A\u0052\u0053\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _dafg !=nil {_be .Log .Trace ("\u005b\u0053\u0045GM\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045R\u005d[\u0050A\u0052S\u0045\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_dafg );}else {_be .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052]\u005bP\u0041\u0052\u0053\u0045\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");};}();_ ,_dafg =_affa .Seek (_bbbg ,_g .SeekStart );if _dafg !=nil {return _de .Wrap (_dafg ,_ecag ,"\u0073\u0065\u0065\u006b\u0020\u0073\u0074\u0061\u0072\u0074");};if _dafg =_gdag .readSegmentNumber (_affa );_dafg !=nil {return _de .Wrap (_dafg ,_ecag ,"");};if _dafg =_gdag .readHeaderFlags ();_dafg !=nil {return _de .Wrap (_dafg ,_ecag ,"");};var _gbag uint64 ;_gbag ,_dafg =_gdag .readNumberOfReferredToSegments (_affa );if _dafg !=nil {return _de .Wrap (_dafg ,_ecag ,"");};_gdag .RTSNumbers ,_dafg =_gdag .readReferredToSegmentNumbers (_affa ,int (_gbag ));if _dafg !=nil {return _de .Wrap (_dafg ,_ecag ,"");};_dafg =_gdag .readSegmentPageAssociation (_bbcf ,_affa ,_gbag ,_gdag .RTSNumbers ...);if _dafg !=nil {return _de .Wrap (_dafg ,_ecag ,"");};if _gdag .Type !=TEndOfFile {if _dafg =_gdag .readSegmentDataLength (_affa );_dafg !=nil {return _de .Wrap (_dafg ,_ecag ,"");};};_gdag .readDataStartOffset (_affa ,_ffab );_gdag .readHeaderLength (_affa ,_bbbg );_be .Log .Trace ("\u0025\u0073",_gdag );return nil ;};func (_gega *Header )writeSegmentNumber (_fcdf _fb .BinaryWriter )(_ggdb int ,_aae error ){_aedd :=make ([]byte ,4);_ce .BigEndian .PutUint32 (_aedd ,_gega .SegmentNumber );if _ggdb ,_aae =_fcdf .Write (_aedd );_aae !=nil {return 0,_de .Wrap (_aae ,"\u0048e\u0061\u0064\u0065\u0072.\u0077\u0072\u0069\u0074\u0065S\u0065g\u006de\u006e\u0074\u004e\u0075\u006d\u0062\u0065r","");};return _ggdb ,nil ;};func (_bcg *EndOfStripe )Init (h *Header ,r _fb .StreamReader )error {_bcg ._bce =r ;return _bcg .parseHeader (h ,r );};func (_becf *RegionSegment )readCombinationOperator ()error {_ggbed ,_fccfb :=_becf ._dfg .ReadBits (3);if _fccfb !=nil {return _fccfb ;};_becf .CombinaionOperator =_gg .CombinationOperator (_ggbed &0xF);return nil ;};func (_cac *GenericRegion )InitEncode (bm *_gg .Bitmap ,xLoc ,yLoc ,template int ,duplicateLineRemoval bool )error {const _ggbd ="\u0047e\u006e\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069\u006f\u006e.\u0049\u006e\u0069\u0074\u0045\u006e\u0063\u006f\u0064\u0065";if bm ==nil {return _de .Error (_ggbd ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if xLoc < 0||yLoc < 0{return _de .Error (_ggbd ,"\u0078\u0020\u0061\u006e\u0064\u0020\u0079\u0020\u006c\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074h\u0061\u006e\u0020\u0030");};_cac .Bitmap =bm ;_cac .GBTemplate =byte (template );switch _cac .GBTemplate {case 0:_cac .GBAtX =[]int8 {3,-3,2,-2};_cac .GBAtY =[]int8 {-1,-1,-2,-2};case 1:_cac .GBAtX =[]int8 {3};_cac .GBAtY =[]int8 {-1};case 2,3:_cac .GBAtX =[]int8 {2};_cac .GBAtY =[]int8 {-1};default:return _de .Errorf (_ggbd ,"\u0070\u0072o\u0076\u0069\u0064\u0065\u0064 \u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u007b\u0030\u002c\u0031\u002c\u0032\u002c\u0033\u007d",template );};_cac .RegionSegment =&RegionSegment {BitmapHeight :uint32 (bm .Height ),BitmapWidth :uint32 (bm .Width ),XLocation :uint32 (xLoc ),YLocation :uint32 (yLoc )};_cac .IsTPGDon =duplicateLineRemoval ;return nil ;};func (_gadg *TextRegion )InitEncode (globalSymbolsMap ,localSymbolsMap map[int ]int ,comps []int ,inLL *_gg .Points ,symbols *_gg .Bitmaps ,classIDs *_bd .IntSlice ,boxes *_gg .Boxes ,width ,height ,symBits int ){_gadg .RegionInfo =&RegionSegment {BitmapWidth :uint32 (width ),BitmapHeight :uint32 (height )};_gadg ._badb =globalSymbolsMap ;_gadg ._gada =localSymbolsMap ;_gadg ._bdba =comps ;_gadg ._bgdb =inLL ;_gadg ._bfagc =symbols ;_gadg ._dfde =classIDs ;_gadg ._afge =boxes ;_gadg ._gffe =symBits ;};func (_adg *Header )readSegmentNumber (_ddcd _fb .StreamReader )error {const _afce ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";_afcd :=make ([]byte ,4);_ ,_ffge :=_ddcd .Read (_afcd );if _ffge !=nil {return _de .Wrap (_ffge ,_afce ,"");};_adg .SegmentNumber =_ce .BigEndian .Uint32 (_afcd );return nil ;};func (_cca *GenericRefinementRegion )readAtPixels ()error {_cca .GrAtX =make ([]int8 ,2);_cca .GrAtY =make ([]int8 ,2);_fcdd ,_cde :=_cca ._dg .ReadByte ();if _cde !=nil {return _cde ;};_cca .GrAtX [0]=int8 (_fcdd );_fcdd ,_cde =_cca ._dg .ReadByte ();if _cde !=nil {return _cde ;};_cca .GrAtY [0]=int8 (_fcdd );_fcdd ,_cde =_cca ._dg .ReadByte ();if _cde !=nil {return _cde ;};_cca .GrAtX [1]=int8 (_fcdd );_fcdd ,_cde =_cca ._dg .ReadByte ();if _cde !=nil {return _cde ;};_cca .GrAtY [1]=int8 (_fcdd );return nil ;};func _beef (_fdgb int )int {if _fdgb ==0{return 0;};_fdgb |=_fdgb >>1;_fdgb |=_fdgb >>2;_fdgb |=_fdgb >>4;_fdgb |=_fdgb >>8;_fdgb |=_fdgb >>16;return (_fdgb +1)>>1;};func (_gdfd *PageInformationSegment )Encode (w _fb .BinaryWriter )(_acfd int ,_bfge error ){const _bgbf ="\u0050\u0061g\u0065\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u002e\u0045\u006eco\u0064\u0065";_aaa :=make ([]byte ,4);_ce .BigEndian .PutUint32 (_aaa ,uint32 (_gdfd .PageBMWidth ));_acfd ,_bfge =w .Write (_aaa );if _bfge !=nil {return _acfd ,_de .Wrap (_bfge ,_bgbf ,"\u0077\u0069\u0064t\u0068");};_ce .BigEndian .PutUint32 (_aaa ,uint32 (_gdfd .PageBMHeight ));var _cgfb int ;_cgfb ,_bfge =w .Write (_aaa );if _bfge !=nil {return _cgfb +_acfd ,_de .Wrap (_bfge ,_bgbf ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_acfd +=_cgfb ;_ce .BigEndian .PutUint32 (_aaa ,uint32 (_gdfd .ResolutionX ));_cgfb ,_bfge =w .Write (_aaa );if _bfge !=nil {return _cgfb +_acfd ,_de .Wrap (_bfge ,_bgbf ,"\u0078\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_acfd +=_cgfb ;_ce .BigEndian .PutUint32 (_aaa ,uint32 (_gdfd .ResolutionY ));if _cgfb ,_bfge =w .Write (_aaa );_bfge !=nil {return _cgfb +_acfd ,_de .Wrap (_bfge ,_bgbf ,"\u0079\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_acfd +=_cgfb ;if _bfge =_gdfd .encodeFlags (w );_bfge !=nil {return _acfd ,_de .Wrap (_bfge ,_bgbf ,"");};_acfd ++;if _cgfb ,_bfge =_gdfd .encodeStripingInformation (w );_bfge !=nil {return _acfd ,_de .Wrap (_bfge ,_bgbf ,"");};_acfd +=_cgfb ;return _acfd ,nil ;};const (TSymbolDictionary Type =0;TIntermediateTextRegion Type =4;TImmediateTextRegion Type =6;TImmediateLosslessTextRegion Type =7;TPatternDictionary Type =16;TIntermediateHalftoneRegion Type =20;TImmediateHalftoneRegion Type =22;TImmediateLosslessHalftoneRegion Type =23;TIntermediateGenericRegion Type =36;TImmediateGenericRegion Type =38;TImmediateLosslessGenericRegion Type =39;TIntermediateGenericRefinementRegion Type =40;TImmediateGenericRefinementRegion Type =42;TImmediateLosslessGenericRefinementRegion Type =43;TPageInformation Type =48;TEndOfPage Type =49;TEndOfStrip Type =50;TEndOfFile Type =51;TProfiles Type =52;TTables Type =53;TExtension Type =62;TBitmap Type =70;);func (_eedad *SymbolDictionary )decodeHeightClassCollectiveBitmap (_badg int64 ,_deeg ,_dfdb uint32 )(*_gg .Bitmap ,error ){if _badg ==0{_cdbc :=_gg .New (int (_dfdb ),int (_deeg ));var (_ccbe byte ;_decc error ;);for _ggce :=0;_ggce < len (_cdbc .Data );_ggce ++{_ccbe ,_decc =_eedad ._defc .ReadByte ();if _decc !=nil {return nil ,_decc ;};if _decc =_cdbc .SetByte (_ggce ,_ccbe );_decc !=nil {return nil ,_decc ;};};return _cdbc ,nil ;};if _eedad ._cacc ==nil {_eedad ._cacc =NewGenericRegion (_eedad ._defc );};_eedad ._cacc .setParameters (true ,_eedad ._defc .StreamPosition (),_badg ,_deeg ,_dfdb );_ecab ,_edfag :=_eedad ._cacc .GetRegionBitmap ();if _edfag !=nil {return nil ,_edfag ;};return _ecab ,nil ;};func (_fgaed *TableSegment )Init (h *Header ,r _fb .StreamReader )error {_fgaed ._fffb =r ;return _fgaed .parseHeader ();};func (_eeg *GenericRegion )getPixel (_bbef ,_cdee int )int8 {if _bbef < 0||_bbef >=_eeg .Bitmap .Width {return 0;};if _cdee < 0||_cdee >=_eeg .Bitmap .Height {return 0;};if _eeg .Bitmap .GetPixel (_bbef ,_cdee ){return 1;};return 0;};func (_eegg *PatternDictionary )parseHeader ()error {_be .Log .Trace ("\u005b\u0050\u0041\u0054\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054I\u004f\u004e\u0041\u0052\u0059\u005d[\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d\u0020b\u0065\u0067\u0069\u006e");defer func (){_be .Log .Trace ("\u005b\u0050\u0041T\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u005b\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");}();_ ,_gcgc :=_eegg ._abc .ReadBits (5);if _gcgc !=nil {return _gcgc ;};if _gcgc =_eegg .readTemplate ();_gcgc !=nil {return _gcgc ;};if _gcgc =_eegg .readIsMMREncoded ();_gcgc !=nil {return _gcgc ;};if _gcgc =_eegg .readPatternWidthAndHeight ();_gcgc !=nil {return _gcgc ;};if _gcgc =_eegg .readGrayMax ();_gcgc !=nil {return _gcgc ;};if _gcgc =_eegg .computeSegmentDataStructure ();_gcgc !=nil {return _gcgc ;};return _eegg .checkInput ();};func (_cada *PageInformationSegment )readDefaultPixelValue ()error {_ggbe ,_bfgeg :=_cada ._cad .ReadBit ();if _bfgeg !=nil {return _bfgeg ;};_cada ._bbbdc =uint8 (_ggbe &0xf);return nil ;};func (_ddcc *Header )readHeaderLength (_bgc _fb .StreamReader ,_eae int64 ){_ddcc .HeaderLength =_bgc .StreamPosition ()-_eae ;};func (_bgbe *TextRegion )getUserTable (_gdbf int )(_bc .Tabler ,error ){const _dggd ="\u0067\u0065\u0074U\u0073\u0065\u0072\u0054\u0061\u0062\u006c\u0065";var _bcbf int ;for _ ,_gbacc :=range _bgbe .Header .RTSegments {if _gbacc .Type ==53{if _bcbf ==_gdbf {_gfcb ,_fafa :=_gbacc .GetSegmentData ();if _fafa !=nil {return nil ,_fafa ;};_fgef ,_gedga :=_gfcb .(*TableSegment );if !_gedga {_be .Log .Debug (_e .Sprintf ("\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079p\u0065\u00205\u0033\u0020\u002d\u0020\u0061\u006ed\u0020in\u0064\u0065\u0078\u003a\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_gbacc .SegmentNumber ));return nil ,_de .Error (_dggd ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079\u0070e\u0020\u0035\u0033\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u002a\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074");};return _bc .NewEncodedTable (_fgef );};_bcbf ++;};};return nil ,nil ;};func (_cgc *GenericRegion )Encode (w _fb .BinaryWriter )(_ggac int ,_bga error ){const _cdd ="G\u0065n\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069o\u006e\u002e\u0045\u006eco\u0064\u0065";if _cgc .Bitmap ==nil {return 0,_de .Error (_cdd ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};_bbd ,_bga :=_cgc .RegionSegment .Encode (w );if _bga !=nil {return 0,_de .Wrap (_bga ,_cdd ,"\u0052\u0065\u0067\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074");};_ggac +=_bbd ;if _bga =w .SkipBits (4);_bga !=nil {return _ggac ,_de .Wrap (_bga ,_cdd ,"\u0073k\u0069p\u0020\u0072\u0065\u0073\u0065r\u0076\u0065d\u0020\u0062\u0069\u0074\u0073");};var _gfg int ;if _cgc .IsTPGDon {_gfg =1;};if _bga =w .WriteBit (_gfg );_bga !=nil {return _ggac ,_de .Wrap (_bga ,_cdd ,"\u0074\u0070\u0067\u0064\u006f\u006e");};_gfg =0;if _bga =w .WriteBit (int (_cgc .GBTemplate >>1)&0x01);_bga !=nil {return _ggac ,_de .Wrap (_bga ,_cdd ,"f\u0069r\u0073\u0074\u0020\u0067\u0062\u0074\u0065\u006dp\u006c\u0061\u0074\u0065 b\u0069\u0074");};if _bga =w .WriteBit (int (_cgc .GBTemplate )&0x01);_bga !=nil {return _ggac ,_de .Wrap (_bga ,_cdd ,"s\u0065\u0063\u006f\u006ed \u0067b\u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u0062\u0069\u0074");};if _cgc .UseMMR {_gfg =1;};if _bga =w .WriteBit (_gfg );_bga !=nil {return _ggac ,_de .Wrap (_bga ,_cdd ,"u\u0073\u0065\u0020\u004d\u004d\u0052\u0020\u0062\u0069\u0074");};_ggac ++;if _bbd ,_bga =_cgc .writeGBAtPixels (w );_bga !=nil {return _ggac ,_de .Wrap (_bga ,_cdd ,"");};_ggac +=_bbd ;_fgff :=_cea .New ();if _bga =_fgff .EncodeBitmap (_cgc .Bitmap ,_cgc .IsTPGDon );_bga !=nil {return _ggac ,_de .Wrap (_bga ,_cdd ,"");};_fgff .Final ();var _ddde int64 ;if _ddde ,_bga =_fgff .WriteTo (w );_bga !=nil {return _ggac ,_de .Wrap (_bga ,_cdd ,"");};_ggac +=int (_ddde );return _ggac ,nil ;};type SegmentEncoder interface{Encode (_ffac _fb .BinaryWriter )(_cfeb int ,_ccfd error );};func (_gccb *PageInformationSegment )readRequiresAuxiliaryBuffer ()error {_bgdg ,_gbbb :=_gccb ._cad .ReadBit ();if _gbbb !=nil {return _gbbb ;};if _bgdg ==1{_gccb ._afef =true ;};return nil ;};func (_ecgg *SymbolDictionary )readNumberOfNewSymbols ()error {_ggge ,_cfed :=_ecgg ._defc .ReadBits (32);if _cfed !=nil {return _cfed ;};_ecgg .NumberOfNewSymbols =uint32 (_ggge &_f .MaxUint32 );return nil ;};type HalftoneRegion struct{_fdgg _fb .StreamReader ;_feg *Header ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;HDefaultPixel int8 ;CombinationOperator _gg .CombinationOperator ;HSkipEnabled bool ;HTemplate byte ;IsMMREncoded bool ;HGridWidth uint32 ;HGridHeight uint32 ;HGridX int32 ;HGridY int32 ;HRegionX uint16 ;HRegionY uint16 ;HalftoneRegionBitmap *_gg .Bitmap ;Patterns []*_gg .Bitmap ;};func (_ccaa *SymbolDictionary )getToExportFlags ()([]int ,error ){var (_egf int ;_ccgfe int32 ;_gbd error ;_dafe =int32 (_ccaa ._gdad +_ccaa .NumberOfNewSymbols );_cccb =make ([]int ,_dafe ););for _fgfg :=int32 (0);_fgfg < _dafe ;_fgfg +=_ccgfe {if _ccaa .IsHuffmanEncoded {_dgcb ,_afba :=_bc .GetStandardTable (1);if _afba !=nil {return nil ,_afba ;};_fgfd ,_afba :=_dgcb .Decode (_ccaa ._defc );if _afba !=nil {return nil ,_afba ;};_ccgfe =int32 (_fgfd );}else {_ccgfe ,_gbd =_ccaa ._fafd .DecodeInt (_ccaa ._cffe );if _gbd !=nil {return nil ,_gbd ;};};if _ccgfe !=0{for _gade :=_fgfg ;_gade < _fgfg +_ccgfe ;_gade ++{_cccb [_gade ]=_egf ;};};if _egf ==0{_egf =1;}else {_egf =0;};};return _cccb ,nil ;};func (_dfcd *HalftoneRegion )shiftAndFill (_gcaa int )int {_gcaa >>=8;if _gcaa < 0{_eedc :=int (_f .Log (float64 (_beef (_gcaa )))/_f .Log (2));_bgdfe :=31-_eedc ;for _bbce :=1;_bbce < _bgdfe ;_bbce ++{_gcaa |=1<<uint (31-_bbce );};};return _gcaa ;};type EncodeInitializer interface{InitEncode ();};func (_cgdgg *Header )writeSegmentPageAssociation (_daca _fb .BinaryWriter )(_agfc int ,_cecd error ){const _bbdb ="w\u0072\u0069\u0074\u0065\u0053\u0065g\u006d\u0065\u006e\u0074\u0050\u0061\u0067\u0065\u0041s\u0073\u006f\u0063i\u0061t\u0069\u006f\u006e";if _cgdgg .pageSize ()!=4{if _cecd =_daca .WriteByte (byte (_cgdgg .PageAssociation ));_cecd !=nil {return 0,_de .Wrap (_cecd ,_bbdb ,"\u0070\u0061\u0067\u0065\u0053\u0069\u007a\u0065\u0020\u0021\u003d\u0020\u0034");};return 1,nil ;};_gac :=make ([]byte ,4);_ce .BigEndian .PutUint32 (_gac ,uint32 (_cgdgg .PageAssociation ));if _agfc ,_cecd =_daca .Write (_gac );_cecd !=nil {return 0,_de .Wrap (_cecd ,_bbdb ,"\u0034 \u0062y\u0074\u0065\u0020\u0070\u0061g\u0065\u0020n\u0075\u006d\u0062\u0065\u0072");};return _agfc ,nil ;};func (_fcfd *TextRegion )setCodingStatistics ()error {if _fcfd ._egad ==nil {_fcfd ._egad =_fa .NewStats (512,1);};if _fcfd ._eeag ==nil {_fcfd ._eeag =_fa .NewStats (512,1);};if _fcfd ._begb ==nil {_fcfd ._begb =_fa .NewStats (512,1);};if _fcfd ._dedb ==nil {_fcfd ._dedb =_fa .NewStats (512,1);};if _fcfd ._gefg ==nil {_fcfd ._gefg =_fa .NewStats (512,1);};if _fcfd ._affc ==nil {_fcfd ._affc =_fa .NewStats (512,1);};if _fcfd ._ddeg ==nil {_fcfd ._ddeg =_fa .NewStats (512,1);};if _fcfd ._gdcd ==nil {_fcfd ._gdcd =_fa .NewStats (1<<uint (_fcfd ._gffc ),1);};if _fcfd ._eddb ==nil {_fcfd ._eddb =_fa .NewStats (512,1);};if _fcfd ._ebfe ==nil {_fcfd ._ebfe =_fa .NewStats (512,1);};if _fcfd ._baae ==nil {var _fadd error ;_fcfd ._baae ,_fadd =_fa .New (_fcfd ._afde );if _fadd !=nil {return _fadd ;};};return nil ;};func (_cbbc *TableSegment )HtRS ()int32 {return _cbbc ._ccbff };func (_bceca *SymbolDictionary )decodeRefinedSymbol (_beeff ,_gbegb uint32 )error {var (_gbfg int ;_aaeg ,_bcff int32 ;);if _bceca .IsHuffmanEncoded {_cgef ,_bcdc :=_bceca ._defc .ReadBits (byte (_bceca ._fdc ));if _bcdc !=nil {return _bcdc ;};_gbfg =int (_cgef );_cddg ,_bcdc :=_bc .GetStandardTable (15);if _bcdc !=nil {return _bcdc ;};_ffbc ,_bcdc :=_cddg .Decode (_bceca ._defc );if _bcdc !=nil {return _bcdc ;};_aaeg =int32 (_ffbc );_ffbc ,_bcdc =_cddg .Decode (_bceca ._defc );if _bcdc !=nil {return _bcdc ;};_bcff =int32 (_ffbc );_cddg ,_bcdc =_bc .GetStandardTable (1);if _bcdc !=nil {return _bcdc ;};if _ ,_bcdc =_cddg .Decode (_bceca ._defc );_bcdc !=nil {return _bcdc ;};_bceca ._defc .Align ();}else {_gcdg ,_ebca :=_bceca ._fafd .DecodeIAID (uint64 (_bceca ._fdc ),_bceca ._gffd );if _ebca !=nil {return _ebca ;};_gbfg =int (_gcdg );_aaeg ,_ebca =_bceca ._fafd .DecodeInt (_bceca ._dgbb );if _ebca !=nil {return _ebca ;};_bcff ,_ebca =_bceca ._fafd .DecodeInt (_bceca ._ggbg );if _ebca !=nil {return _ebca ;};};if _abda :=_bceca .setSymbolsArray ();_abda !=nil {return _abda ;};_baeca :=_bceca ._fdga [_gbfg ];if _fbbbe :=_bceca .decodeNewSymbols (_beeff ,_gbegb ,_baeca ,_aaeg ,_bcff );_fbbbe !=nil {return _fbbbe ;};if _bceca .IsHuffmanEncoded {_bceca ._defc .Align ();};return nil ;};func (_ecaa *GenericRegion )overrideAtTemplate3 (_ace ,_ddgd ,_egdg ,_bcad ,_egga int )int {_ace &=0x3EF;if _ecaa .GBAtY [0]==0&&_ecaa .GBAtX [0]>=-int8 (_egga ){_ace |=(_bcad >>uint (7-(int8 (_egga )+_ecaa .GBAtX [0]))&0x1)<<4;}else {_ace |=int (_ecaa .getPixel (_ddgd +int (_ecaa .GBAtX [0]),_egdg +int (_ecaa .GBAtY [0])))<<4;};return _ace ;};func (_gdce *SymbolDictionary )decodeDirectlyThroughGenericRegion (_afdc ,_cfadb uint32 )error {if _gdce ._cacc ==nil {_gdce ._cacc =NewGenericRegion (_gdce ._defc );};_gdce ._cacc .setParametersWithAt (false ,byte (_gdce .SdTemplate ),false ,false ,_gdce .SdATX ,_gdce .SdATY ,_afdc ,_cfadb ,_gdce ._cfdd ,_gdce ._fafd );return _gdce .addSymbol (_gdce ._cacc );};func (_ebbc *Header )GetSegmentData ()(Segmenter ,error ){var _ccfbe Segmenter ;if _ebbc .SegmentData !=nil {_ccfbe =_ebbc .SegmentData ;};if _ccfbe ==nil {_ccfbb ,_babf :=_afac [_ebbc .Type ];if !_babf {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0073\u002f\u0020\u0025\u0064\u0020\u0063\u0072e\u0061t\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e\u0020",_ebbc .Type ,_ebbc .Type );};_ccfbe =_ccfbb ();_be .Log .Trace ("\u005b\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u0020\u0061\u0074\u0020\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0030\u0034\u0058",_ebbc .SegmentNumber ,_ebbc .SegmentDataStartOffset );_eaabb ,_gbb :=_ebbc .subInputReader ();if _gbb !=nil {return nil ,_gbb ;};if _eag :=_ccfbe .Init (_ebbc ,_eaabb );_eag !=nil {_be .Log .Debug ("\u0049\u006e\u0069\u0074 \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076 \u0066o\u0072\u0020\u0074\u0079\u0070\u0065\u003a \u0025\u0054",_eag ,_ccfbe );return nil ,_eag ;};_ebbc .SegmentData =_ccfbe ;};return _ccfbe ,nil ;};type OrganizationType uint8 ;func NewRegionSegment (r _fb .StreamReader )*RegionSegment {return &RegionSegment {_dfg :r }};func (_aebe *PatternDictionary )GetDictionary ()([]*_gg .Bitmap ,error ){if _aebe .Patterns !=nil {return _aebe .Patterns ,nil ;};if !_aebe .IsMMREncoded {_aebe .setGbAtPixels ();};_dgbd :=NewGenericRegion (_aebe ._abc );_dgbd .setParametersMMR (_aebe .IsMMREncoded ,_aebe .DataOffset ,_aebe .DataLength ,uint32 (_aebe .HdpHeight ),(_aebe .GrayMax +1)*uint32 (_aebe .HdpWidth ),_aebe .HDTemplate ,false ,false ,_aebe .GBAtX ,_aebe .GBAtY );_gcfa ,_gedg :=_dgbd .GetRegionBitmap ();if _gedg !=nil {return nil ,_gedg ;};if _gedg =_aebe .extractPatterns (_gcfa );_gedg !=nil {return nil ,_gedg ;};return _aebe .Patterns ,nil ;};func (_gfbf *SymbolDictionary )setRefinementAtPixels ()error {if !_gfbf .UseRefinementAggregation ||_gfbf .SdrTemplate !=0{return nil ;};if _cfda :=_gfbf .readRefinementAtPixels (2);_cfda !=nil {return _cfda ;};return nil ;};func (_ecf *GenericRegion )decodeLine (_gag ,_bcd ,_ega int )error {const _cbgf ="\u0064\u0065\u0063\u006f\u0064\u0065\u004c\u0069\u006e\u0065";_gcef :=_ecf .Bitmap .GetByteIndex (0,_gag );_bgda :=_gcef -_ecf .Bitmap .RowStride ;switch _ecf .GBTemplate {case 0:if !_ecf .UseExtTemplates {return _ecf .decodeTemplate0a (_gag ,_bcd ,_ega ,_gcef ,_bgda );};return _ecf .decodeTemplate0b (_gag ,_bcd ,_ega ,_gcef ,_bgda );case 1:return _ecf .decodeTemplate1 (_gag ,_bcd ,_ega ,_gcef ,_bgda );case 2:return _ecf .decodeTemplate2 (_gag ,_bcd ,_ega ,_gcef ,_bgda );case 3:return _ecf .decodeTemplate3 (_gag ,_bcd ,_ega ,_gcef ,_bgda );};return _de .Errorf (_cbgf ,"\u0069\u006e\u0076a\u006c\u0069\u0064\u0020G\u0042\u0054\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u003a\u0020\u0025\u0064",_ecf .GBTemplate );};func (_edfcb *Header )referenceSize ()uint {switch {case _edfcb .SegmentNumber <=255:return 1;case _edfcb .SegmentNumber <=65535:return 2;default:return 4;};};func (_afad *SymbolDictionary )Init (h *Header ,r _fb .StreamReader )error {_afad .Header =h ;_afad ._defc =r ;return _afad .parseHeader ();};var _ templater =&template0 {};func (_eeed *GenericRegion )overrideAtTemplate0a (_bbec ,_cace ,_abb ,_fdg ,_ddbc ,_aba int )int {if _eeed .GBAtOverride [0]{_bbec &=0xFFEF;if _eeed .GBAtY [0]==0&&_eeed .GBAtX [0]>=-int8 (_ddbc ){_bbec |=(_fdg >>uint (int8 (_aba )-_eeed .GBAtX [0]&0x1))<<4;}else {_bbec |=int (_eeed .getPixel (_cace +int (_eeed .GBAtX [0]),_abb +int (_eeed .GBAtY [0])))<<4;};};if _eeed .GBAtOverride [1]{_bbec &=0xFBFF;if _eeed .GBAtY [1]==0&&_eeed .GBAtX [1]>=-int8 (_ddbc ){_bbec |=(_fdg >>uint (int8 (_aba )-_eeed .GBAtX [1]&0x1))<<10;}else {_bbec |=int (_eeed .getPixel (_cace +int (_eeed .GBAtX [1]),_abb +int (_eeed .GBAtY [1])))<<10;};};if _eeed .GBAtOverride [2]{_bbec &=0xF7FF;if _eeed .GBAtY [2]==0&&_eeed .GBAtX [2]>=-int8 (_ddbc ){_bbec |=(_fdg >>uint (int8 (_aba )-_eeed .GBAtX [2]&0x1))<<11;}else {_bbec |=int (_eeed .getPixel (_cace +int (_eeed .GBAtX [2]),_abb +int (_eeed .GBAtY [2])))<<11;};};if _eeed .GBAtOverride [3]{_bbec &=0x7FFF;if _eeed .GBAtY [3]==0&&_eeed .GBAtX [3]>=-int8 (_ddbc ){_bbec |=(_fdg >>uint (int8 (_aba )-_eeed .GBAtX [3]&0x1))<<15;}else {_bbec |=int (_eeed .getPixel (_cace +int (_eeed .GBAtX [3]),_abb +int (_eeed .GBAtY [3])))<<15;};};return _bbec ;};func (_agb *GenericRegion )updateOverrideFlags ()error {const _ggf ="\u0075\u0070\u0064\u0061te\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _agb .GBAtX ==nil ||_agb .GBAtY ==nil {return nil ;};if len (_agb .GBAtX )!=len (_agb .GBAtY ){return _de .Errorf (_ggf ,"i\u006eco\u0073i\u0073t\u0065\u006e\u0074\u0020\u0041T\u0020\u0070\u0069x\u0065\u006c\u002e\u0020\u0041m\u006f\u0075\u006et\u0020\u006f\u0066\u0020\u0027\u0078\u0027\u0020\u0070\u0069\u0078e\u006c\u0073\u003a %d\u002c\u0020\u0041\u006d\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0027\u0079\u0027\u0020\u0070\u0069\u0078e\u006cs\u003a\u0020\u0025\u0064",len (_agb .GBAtX ),len (_agb .GBAtY ));};_agb .GBAtOverride =make ([]bool ,len (_agb .GBAtX ));switch _agb .GBTemplate {case 0:if !_agb .UseExtTemplates {if _agb .GBAtX [0]!=3||_agb .GBAtY [0]!=-1{_agb .setOverrideFlag (0);};if _agb .GBAtX [1]!=-3||_agb .GBAtY [1]!=-1{_agb .setOverrideFlag (1);};if _agb .GBAtX [2]!=2||_agb .GBAtY [2]!=-2{_agb .setOverrideFlag (2);};if _agb .GBAtX [3]!=-2||_agb .GBAtY [3]!=-2{_agb .setOverrideFlag (3);};}else {if _agb .GBAtX [0]!=-2||_agb .GBAtY [0]!=0{_agb .setOverrideFlag (0);};if _agb .GBAtX [1]!=0||_agb .GBAtY [1]!=-2{_agb .setOverrideFlag (1);};if _agb .GBAtX [2]!=-2||_agb .GBAtY [2]!=-1{_agb .setOverrideFlag (2);};if _agb .GBAtX [3]!=-1||_agb .GBAtY [3]!=-2{_agb .setOverrideFlag (3);};if _agb .GBAtX [4]!=1||_agb .GBAtY [4]!=-2{_agb .setOverrideFlag (4);};if _agb .GBAtX [5]!=2||_agb .GBAtY [5]!=-1{_agb .setOverrideFlag (5);};if _agb .GBAtX [6]!=-3||_agb .GBAtY [6]!=0{_agb .setOverrideFlag (6);};if _agb .GBAtX [7]!=-4||_agb .GBAtY [7]!=0{_agb .setOverrideFlag (7);};if _agb .GBAtX [8]!=2||_agb .GBAtY [8]!=-2{_agb .setOverrideFlag (8);};if _agb .GBAtX [9]!=3||_agb .GBAtY [9]!=-1{_agb .setOverrideFlag (9);};if _agb .GBAtX [10]!=-2||_agb .GBAtY [10]!=-2{_agb .setOverrideFlag (10);};if _agb .GBAtX [11]!=-3||_agb .GBAtY [11]!=-1{_agb .setOverrideFlag (11);};};case 1:if _agb .GBAtX [0]!=3||_agb .GBAtY [0]!=-1{_agb .setOverrideFlag (0);};case 2:if _agb .GBAtX [0]!=2||_agb .GBAtY [0]!=-1{_agb .setOverrideFlag (0);};case 3:if _agb .GBAtX [0]!=2||_agb .GBAtY [0]!=-1{_agb .setOverrideFlag (0);};};return nil ;};func (_ddgg *SymbolDictionary )addSymbol (_gaggc Regioner )error {_baef ,_eccg :=_gaggc .GetRegionBitmap ();if _eccg !=nil {return _eccg ;};_ddgg ._cdce [_ddgg ._ffdd ]=_baef ;_ddgg ._fdga =append (_ddgg ._fdga ,_baef );_be .Log .Trace ("\u005b\u0053YM\u0042\u004f\u004c \u0044\u0049\u0043\u0054ION\u0041RY\u005d\u0020\u0041\u0064\u0064\u0065\u0064 s\u0079\u006d\u0062\u006f\u006c\u003a\u0020%\u0073",_baef );return nil ;};func (_ccee *TextRegion )decodeRdh ()(int64 ,error ){const _adeee ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064h";if _ccee .IsHuffmanEncoded {if _ccee .SbHuffRDHeight ==3{if _ccee ._dddee ==nil {var (_eggff int ;_gcfec error ;);if _ccee .SbHuffFS ==3{_eggff ++;};if _ccee .SbHuffDS ==3{_eggff ++;};if _ccee .SbHuffDT ==3{_eggff ++;};if _ccee .SbHuffRDWidth ==3{_eggff ++;};_ccee ._dddee ,_gcfec =_ccee .getUserTable (_eggff );if _gcfec !=nil {return 0,_de .Wrap (_gcfec ,_adeee ,"");};};return _ccee ._dddee .Decode (_ccee ._afde );};_bceg ,_ccae :=_bc .GetStandardTable (14+int (_ccee .SbHuffRDHeight ));if _ccae !=nil {return 0,_de .Wrap (_ccae ,_adeee ,"");};return _bceg .Decode (_ccee ._afde );};_ffbg ,_gcfd :=_ccee ._baae .DecodeInt (_ccee ._ddeg );if _gcfd !=nil {return 0,_de .Wrap (_gcfd ,_adeee ,"");};return int64 (_ffbg ),nil ;};func (_gdca *PageInformationSegment )readContainsRefinement ()error {_cgdf ,_cgcg :=_gdca ._cad .ReadBit ();if _cgcg !=nil {return _cgcg ;};if _cgdf ==1{_gdca ._dgdf =true ;};return nil ;};func (_cge *GenericRegion )decodeTemplate0a (_ffb ,_gbeg ,_abf int ,_bgb ,_fcbf int )(_fde error ){const _efe ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0061";var (_bdbe ,_agd int ;_ccg ,_bee int ;_dbc byte ;_caf int ;);if _ffb >=1{_dbc ,_fde =_cge .Bitmap .GetByte (_fcbf );if _fde !=nil {return _de .Wrap (_fde ,_efe ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_ccg =int (_dbc );};if _ffb >=2{_dbc ,_fde =_cge .Bitmap .GetByte (_fcbf -_cge .Bitmap .RowStride );if _fde !=nil {return _de .Wrap (_fde ,_efe ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_bee =int (_dbc )<<6;};_bdbe =(_ccg &0xf0)|(_bee &0x3800);for _dgg :=0;_dgg < _abf ;_dgg =_caf {var (_aaff byte ;_fded int ;);_caf =_dgg +8;if _efcb :=_gbeg -_dgg ;_efcb > 8{_fded =8;}else {_fded =_efcb ;};if _ffb > 0{_ccg <<=8;if _caf < _gbeg {_dbc ,_fde =_cge .Bitmap .GetByte (_fcbf +1);if _fde !=nil {return _de .Wrap (_fde ,_efe ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_ccg |=int (_dbc );};};if _ffb > 1{_adc :=_fcbf -_cge .Bitmap .RowStride +1;_bee <<=8;if _caf < _gbeg {_dbc ,_fde =_cge .Bitmap .GetByte (_adc );if _fde !=nil {return _de .Wrap (_fde ,_efe ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_bee |=int (_dbc )<<6;}else {_bee |=0;};};for _fbec :=0;_fbec < _fded ;_fbec ++{_ebfd :=uint (7-_fbec );if _cge ._eea {_agd =_cge .overrideAtTemplate0a (_bdbe ,_dgg +_fbec ,_ffb ,int (_aaff ),_fbec ,int (_ebfd ));_cge ._dfag .SetIndex (int32 (_agd ));}else {_cge ._dfag .SetIndex (int32 (_bdbe ));};var _gee int ;_gee ,_fde =_cge ._ebf .DecodeBit (_cge ._dfag );if _fde !=nil {return _de .Wrap (_fde ,_efe ,"");};_aaff |=byte (_gee )<<_ebfd ;_bdbe =((_bdbe &0x7bf7)<<1)|_gee |((_ccg >>_ebfd )&0x10)|((_bee >>_ebfd )&0x800);};if _ggdg :=_cge .Bitmap .SetByte (_bgb ,_aaff );_ggdg !=nil {return _de .Wrap (_ggdg ,_efe ,"");};_bgb ++;_fcbf ++;};return nil ;};func (_eece *SymbolDictionary )setExportedSymbols (_bdga []int ){for _ggbb :=uint32 (0);_ggbb < _eece ._gdad +_eece .NumberOfNewSymbols ;_ggbb ++{if _bdga [_ggbb ]==1{var _ebde *_gg .Bitmap ;if _ggbb < _eece ._gdad {_ebde =_eece ._edeb [_ggbb ];}else {_ebde =_eece ._cdce [_ggbb -_eece ._gdad ];};_be .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u002d\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u0020\u0041\u0064\u0064 E\u0078\u0070\u006fr\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027%\u0073\u0027",_ebde );_eece ._gbba =append (_eece ._gbba ,_ebde );};};};func (_fbad *SymbolDictionary )huffDecodeBmSize ()(int64 ,error ){if _fbad ._gfca ==nil {var (_fgffc int ;_abgd error ;);if _fbad .SdHuffDecodeHeightSelection ==3{_fgffc ++;};if _fbad .SdHuffDecodeWidthSelection ==3{_fgffc ++;};_fbad ._gfca ,_abgd =_fbad .getUserTable (_fgffc );if _abgd !=nil {return 0,_abgd ;};};return _fbad ._gfca .Decode (_fbad ._defc );};func (_cfae *HalftoneRegion )computeGrayScalePlanes (_dcc []*_gg .Bitmap ,_dgb int )([][]int ,error ){_aegd :=make ([][]int ,_cfae .HGridHeight );for _gad :=0;_gad < len (_aegd );_gad ++{_aegd [_gad ]=make ([]int ,_cfae .HGridWidth );};for _dbd :=0;_dbd < int (_cfae .HGridHeight );_dbd ++{for _ffbd :=0;_ffbd < int (_cfae .HGridWidth );_ffbd +=8{var _ade int ;if _cefd :=int (_cfae .HGridWidth )-_ffbd ;_cefd > 8{_ade =8;}else {_ade =_cefd ;};_gcga :=_dcc [0].GetByteIndex (_ffbd ,_dbd );for _bfed :=0;_bfed < _ade ;_bfed ++{_dag :=_bfed +_ffbd ;_aegd [_dbd ][_dag ]=0;for _gcb :=0;_gcb < _dgb ;_gcb ++{_geef ,_bdbg :=_dcc [_gcb ].GetByte (_gcga );if _bdbg !=nil {return nil ,_bdbg ;};_cfgg :=_geef >>uint (7-_dag &7);_accf :=_cfgg &1;_bcaa :=1<<uint (_gcb );_efge :=int (_accf )*_bcaa ;_aegd [_dbd ][_dag ]+=_efge ;};};};};return _aegd ,nil ;};func (_fef *SymbolDictionary )readRegionFlags ()error {var (_dfb uint64 ;_fgbd int ;);_ ,_gacg :=_fef ._defc .ReadBits (3);if _gacg !=nil {return _gacg ;};_fgbd ,_gacg =_fef ._defc .ReadBit ();if _gacg !=nil {return _gacg ;};_fef .SdrTemplate =int8 (_fgbd );_dfb ,_gacg =_fef ._defc .ReadBits (2);if _gacg !=nil {return _gacg ;};_fef .SdTemplate =int8 (_dfb &0xf);_fgbd ,_gacg =_fef ._defc .ReadBit ();if _gacg !=nil {return _gacg ;};if _fgbd ==1{_fef ._ggde =true ;};_fgbd ,_gacg =_fef ._defc .ReadBit ();if _gacg !=nil {return _gacg ;};if _fgbd ==1{_fef ._gbfe =true ;};_fgbd ,_gacg =_fef ._defc .ReadBit ();if _gacg !=nil {return _gacg ;};if _fgbd ==1{_fef .SdHuffAggInstanceSelection =true ;};_fgbd ,_gacg =_fef ._defc .ReadBit ();if _gacg !=nil {return _gacg ;};_fef .SdHuffBMSizeSelection =int8 (_fgbd );_dfb ,_gacg =_fef ._defc .ReadBits (2);if _gacg !=nil {return _gacg ;};_fef .SdHuffDecodeWidthSelection =int8 (_dfb &0xf);_dfb ,_gacg =_fef ._defc .ReadBits (2);if _gacg !=nil {return _gacg ;};_fef .SdHuffDecodeHeightSelection =int8 (_dfb &0xf);_fgbd ,_gacg =_fef ._defc .ReadBit ();if _gacg !=nil {return _gacg ;};if _fgbd ==1{_fef .UseRefinementAggregation =true ;};_fgbd ,_gacg =_fef ._defc .ReadBit ();if _gacg !=nil {return _gacg ;};if _fgbd ==1{_fef .IsHuffmanEncoded =true ;};return nil ;};func (_ceba *SymbolDictionary )encodeSymbols (_gege _fb .BinaryWriter )(_dbg int ,_feb error ){const _gddb ="\u0065\u006e\u0063o\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c";_agba :=_cea .New ();_agba .Init ();_gfee ,_feb :=_ceba ._dde .SelectByIndexes (_ceba ._feeg );if _feb !=nil {return 0,_de .Wrap (_feb ,_gddb ,"\u0069n\u0069\u0074\u0069\u0061\u006c");};_gcac :=map[*_gg .Bitmap ]int {};for _abfgf ,_dbgd :=range _gfee .Values {_gcac [_dbgd ]=_abfgf ;};_gfee .SortByHeight ();var _gffg ,_dbeg int ;_fcbe ,_feb :=_gfee .GroupByHeight ();if _feb !=nil {return 0,_de .Wrap (_feb ,_gddb ,"");};for _ ,_cfcbd :=range _fcbe .Values {_gfade :=_cfcbd .Values [0].Height ;_cfce :=_gfade -_gffg ;if _feb =_agba .EncodeInteger (_cea .IADH ,_cfce );_feb !=nil {return 0,_de .Wrapf (_feb ,_gddb ,"\u0049\u0041\u0044\u0048\u0020\u0066\u006f\u0072\u0020\u0064\u0068\u003a \u0027\u0025\u0064\u0027",_cfce );};_gffg =_gfade ;_efffc ,_eggb :=_cfcbd .GroupByWidth ();if _eggb !=nil {return 0,_de .Wrapf (_eggb ,_gddb ,"\u0068\u0065\u0069g\u0068\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_gfade );};var _ebc int ;for _ ,_dcba :=range _efffc .Values {for _ ,_bfaef :=range _dcba .Values {_fgfe :=_bfaef .Width ;_affab :=_fgfe -_ebc ;if _eggb =_agba .EncodeInteger (_cea .IADW ,_affab );_eggb !=nil {return 0,_de .Wrapf (_eggb ,_gddb ,"\u0049\u0041\u0044\u0057\u0020\u0066\u006f\u0072\u0020\u0064\u0077\u003a \u0027\u0025\u0064\u0027",_affab );};_ebc +=_affab ;if _eggb =_agba .EncodeBitmap (_bfaef ,false );_eggb !=nil {return 0,_de .Wrapf (_eggb ,_gddb ,"H\u0065i\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u0020W\u0069\u0064\u0074\u0068: \u0025\u0064",_gfade ,_fgfe );};_gefe :=_gcac [_bfaef ];_ceba ._ffee [_gefe ]=_dbeg ;_dbeg ++;};};if _eggb =_agba .EncodeOOB (_cea .IADW );_eggb !=nil {return 0,_de .Wrap (_eggb ,_gddb ,"\u0049\u0041\u0044\u0057");};};if _feb =_agba .EncodeInteger (_cea .IAEX ,0);_feb !=nil {return 0,_de .Wrap (_feb ,_gddb ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};if _feb =_agba .EncodeInteger (_cea .IAEX ,len (_ceba ._feeg ));_feb !=nil {return 0,_de .Wrap (_feb ,_gddb ,"\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0073\u0079m\u0062\u006f\u006c\u0073");};_agba .Final ();_cgb ,_feb :=_agba .WriteTo (_gege );if _feb !=nil {return 0,_de .Wrap (_feb ,_gddb ,"\u0077\u0072i\u0074\u0069\u006e\u0067 \u0065\u006ec\u006f\u0064\u0065\u0072\u0020\u0063\u006f\u006et\u0065\u0078\u0074\u0020\u0074\u006f\u0020\u0027\u0077\u0027\u0020\u0077r\u0069\u0074\u0065\u0072");};return int (_cgb ),nil ;};func (_bffa *GenericRegion )parseHeader ()(_def error ){_be .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052I\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0050\u0061\u0072s\u0069\u006e\u0067\u0048\u0065\u0061\u0064e\u0072\u002e\u002e\u002e");defer func (){if _def !=nil {_be .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e]\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065r\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0077\u0069th\u0020\u0065\u0072\u0072\u006f\u0072\u002e\u0020\u0025\u0076",_def );}else {_be .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049C\u002d\u0052\u0045G\u0049\u004f\u004e]\u0020\u0050a\u0072\u0073\u0069\u006e\u0067\u0048e\u0061de\u0072\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0053\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079\u002e\u002e\u002e");};}();var (_daad int ;_agf uint64 ;);if _def =_bffa .RegionSegment .parseHeader ();_def !=nil {return _def ;};if _ ,_def =_bffa ._gcf .ReadBits (3);_def !=nil {return _def ;};_daad ,_def =_bffa ._gcf .ReadBit ();if _def !=nil {return _def ;};if _daad ==1{_bffa .UseExtTemplates =true ;};_daad ,_def =_bffa ._gcf .ReadBit ();if _def !=nil {return _def ;};if _daad ==1{_bffa .IsTPGDon =true ;};_agf ,_def =_bffa ._gcf .ReadBits (2);if _def !=nil {return _def ;};_bffa .GBTemplate =byte (_agf &0xf);_daad ,_def =_bffa ._gcf .ReadBit ();if _def !=nil {return _def ;};if _daad ==1{_bffa .IsMMREncoded =true ;};if !_bffa .IsMMREncoded {_ccac :=1;if _bffa .GBTemplate ==0{_ccac =4;if _bffa .UseExtTemplates {_ccac =12;};};if _def =_bffa .readGBAtPixels (_ccac );_def !=nil {return _def ;};};if _def =_bffa .computeSegmentDataStructure ();_def !=nil {return _def ;};_be .Log .Trace ("\u0025\u0073",_bffa );return nil ;};func (_ggacc *PatternDictionary )readGrayMax ()error {_gadb ,_gbagg :=_ggacc ._abc .ReadBits (32);if _gbagg !=nil {return _gbagg ;};_ggacc .GrayMax =uint32 (_gadb &_f .MaxUint32 );return nil ;};func (_face *template0 )form (_ecca ,_bda ,_gdb ,_gaa ,_fgfc int16 )int16 {return (_ecca <<10)|(_bda <<7)|(_gdb <<4)|(_gaa <<1)|_fgfc ;};func (_abfd *Header )writeSegmentDataLength (_edfe _fb .BinaryWriter )(_becc int ,_ddgf error ){_caade :=make ([]byte ,4);_ce .BigEndian .PutUint32 (_caade ,uint32 (_abfd .SegmentDataLength ));if _becc ,_ddgf =_edfe .Write (_caade );_ddgf !=nil {return 0,_de .Wrap (_ddgf ,"\u0048\u0065a\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u004c\u0065ng\u0074\u0068","");};return _becc ,nil ;};type PatternDictionary struct{_abc _fb .StreamReader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;GBAtX []int8 ;GBAtY []int8 ;IsMMREncoded bool ;HDTemplate byte ;HdpWidth byte ;HdpHeight byte ;Patterns []*_gg .Bitmap ;GrayMax uint32 ;};func (_dacg *HalftoneRegion )computeX (_ced ,_eeeb int )int {return _dacg .shiftAndFill (int (_dacg .HGridX )+_ced *int (_dacg .HRegionY )+_eeeb *int (_dacg .HRegionX ));};func (_eeb *TableSegment )HtLow ()int32 {return _eeb ._ffagb };func (_aee *template0 )setIndex (_dfd *_fa .DecoderStats ){_dfd .SetIndex (0x100)};func (_effaf *TextRegion )Encode (w _fb .BinaryWriter )(_cfafc int ,_gecb error ){const _afbe ="\u0054\u0065\u0078\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u002e\u0045n\u0063\u006f\u0064\u0065";if _cfafc ,_gecb =_effaf .RegionInfo .Encode (w );_gecb !=nil {return _cfafc ,_de .Wrap (_gecb ,_afbe ,"");};var _eabd int ;if _eabd ,_gecb =_effaf .encodeFlags (w );_gecb !=nil {return _cfafc ,_de .Wrap (_gecb ,_afbe ,"");};_cfafc +=_eabd ;if _eabd ,_gecb =_effaf .encodeSymbols (w );_gecb !=nil {return _cfafc ,_de .Wrap (_gecb ,_afbe ,"");};_cfafc +=_eabd ;return _cfafc ,nil ;};func (_gca *GenericRegion )Init (h *Header ,r _fb .StreamReader )error {_gca .RegionSegment =NewRegionSegment (r );_gca ._gcf =r ;return _gca .parseHeader ();};func (_eefa *PageInformationSegment )readCombinationOperatorOverrideAllowed ()error {_aegdg ,_cceb :=_eefa ._cad .ReadBit ();if _cceb !=nil {return _cceb ;};if _aegdg ==1{_eefa ._ege =true ;};return nil ;};func (_cged *HalftoneRegion )grayScaleDecoding (_dca int )([][]int ,error ){var (_fegdd []int8 ;_dffaa []int8 ;);if !_cged .IsMMREncoded {_fegdd =make ([]int8 ,4);_dffaa =make ([]int8 ,4);if _cged .HTemplate <=1{_fegdd [0]=3;}else if _cged .HTemplate >=2{_fegdd [0]=2;};_dffaa [0]=-1;_fegdd [1]=-3;_dffaa [1]=-1;_fegdd [2]=2;_dffaa [2]=-2;_fegdd [3]=-2;_dffaa [3]=-2;};_cfb :=make ([]*_gg .Bitmap ,_dca );_ffcb :=NewGenericRegion (_cged ._fdgg );_ffcb .setParametersMMR (_cged .IsMMREncoded ,_cged .DataOffset ,_cged .DataLength ,_cged .HGridHeight ,_cged .HGridWidth ,_cged .HTemplate ,false ,_cged .HSkipEnabled ,_fegdd ,_dffaa );_acbd :=_dca -1;var _fff error ;_cfb [_acbd ],_fff =_ffcb .GetRegionBitmap ();if _fff !=nil {return nil ,_fff ;};for _acbd > 0{_acbd --;_ffcb .Bitmap =nil ;_cfb [_acbd ],_fff =_ffcb .GetRegionBitmap ();if _fff !=nil {return nil ,_fff ;};if _fff =_cged .combineGrayscalePlanes (_cfb ,_acbd );_fff !=nil {return nil ,_fff ;};};return _cged .computeGrayScalePlanes (_cfb ,_dca );};func (_dbdd *SymbolDictionary )decodeHeightClassBitmap (_fgad *_gg .Bitmap ,_adcc int64 ,_dbff int ,_feef []int )error {for _cecb :=_adcc ;_cecb < int64 (_dbdd ._ffdd );_cecb ++{var _bfea int ;for _bgcg :=_adcc ;_bgcg <=_cecb -1;_bgcg ++{_bfea +=_feef [_bgcg ];};_bfec :=_c .Rect (_bfea ,0,_bfea +_feef [_cecb ],_dbff );_bcdee ,_gdcce :=_gg .Extract (_bfec ,_fgad );if _gdcce !=nil {return _gdcce ;};_dbdd ._cdce [_cecb ]=_bcdee ;_dbdd ._fdga =append (_dbdd ._fdga ,_bcdee );};return nil ;};const (ORandom OrganizationType =iota ;OSequential ;);func (_bcaf *PageInformationSegment )readCombinationOperator ()error {_dgaba ,_dcfe :=_bcaf ._cad .ReadBits (2);if _dcfe !=nil {return _dcfe ;};_bcaf ._fcffa =_gg .CombinationOperator (int (_dgaba ));return nil ;};func (_adb *PageInformationSegment )readIsStriped ()error {_adca ,_gaaa :=_adb ._cad .ReadBit ();if _gaaa !=nil {return _gaaa ;};if _adca ==1{_adb .IsStripe =true ;};return nil ;};func (_ffeb *SymbolDictionary )InitEncode (symbols *_gg .Bitmaps ,symbolList []int ,symbolMap map[int ]int ,unborderSymbols bool )error {const _edae ="S\u0079\u006d\u0062\u006f\u006c\u0044i\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002eI\u006e\u0069\u0074E\u006ec\u006f\u0064\u0065";_ffeb .SdATX =[]int8 {3,-3,2,-2};_ffeb .SdATY =[]int8 {-1,-1,-2,-2};_ffeb ._dde =symbols ;_ffeb ._feeg =make ([]int ,len (symbolList ));copy (_ffeb ._feeg ,symbolList );if len (_ffeb ._feeg )!=_ffeb ._dde .Size (){return _de .Error (_edae ,"s\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0061\u006e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u004ci\u0073\u0074\u0020\u006f\u0066\u0020\u0064\u0069\u0066\u0066er\u0065\u006e\u0074 \u0073i\u007a\u0065");};_ffeb .NumberOfNewSymbols =uint32 (symbols .Size ());_ffeb .NumberOfExportedSymbols =uint32 (symbols .Size ());_ffeb ._ffee =symbolMap ;_ffeb ._cgac =unborderSymbols ;return nil ;};func (_ggbeg *RegionSegment )Size ()int {return 17};type template1 struct{};func (_afaf *SymbolDictionary )retrieveImportSymbols ()error {for _ ,_baad :=range _afaf .Header .RTSegments {if _baad .Type ==0{_gaggd ,_cdab :=_baad .GetSegmentData ();if _cdab !=nil {return _cdab ;};_cebb ,_gdcf :=_gaggd .(*SymbolDictionary );if !_gdcf {return _e .Errorf ("\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0044\u0061\u0074a\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u003a\u0020%\u0054",_gaggd );};_bdce ,_cdab :=_cebb .GetDictionary ();if _cdab !=nil {return _e .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064 \u0073\u0065\u0067m\u0065\u006e\u0074 \u0077\u0069t\u0068\u0020\u0069\u006e\u0064\u0065x\u003a %\u0064\u0020\u0067\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0073",_baad .SegmentNumber ,_cdab .Error ());};_afaf ._edeb =append (_afaf ._edeb ,_bdce ...);_afaf ._gdad +=_cebb .NumberOfExportedSymbols ;};};return nil ;};func (_dfba *SymbolDictionary )setCodingStatistics ()error {if _dfba ._dfdc ==nil {_dfba ._dfdc =_fa .NewStats (512,1);};if _dfba ._efec ==nil {_dfba ._efec =_fa .NewStats (512,1);};if _dfba ._ecbf ==nil {_dfba ._ecbf =_fa .NewStats (512,1);};if _dfba ._bddb ==nil {_dfba ._bddb =_fa .NewStats (512,1);};if _dfba ._cffe ==nil {_dfba ._cffe =_fa .NewStats (512,1);};if _dfba .UseRefinementAggregation &&_dfba ._gffd ==nil {_dfba ._gffd =_fa .NewStats (1<<uint (_dfba ._fdc ),1);_dfba ._dgbb =_fa .NewStats (512,1);_dfba ._ggbg =_fa .NewStats (512,1);};if _dfba ._cfdd ==nil {_dfba ._cfdd =_fa .NewStats (65536,1);};if _dfba ._fafd ==nil {var _fgeb error ;_dfba ._fafd ,_fgeb =_fa .New (_dfba ._defc );if _fgeb !=nil {return _fgeb ;};};return nil ;};func (_fgab *TextRegion )decodeStripT ()(_acfa int64 ,_fadf error ){if _fgab .IsHuffmanEncoded {if _fgab .SbHuffDT ==3{if _fgab ._cfac ==nil {var _fgaa int ;if _fgab .SbHuffFS ==3{_fgaa ++;};if _fgab .SbHuffDS ==3{_fgaa ++;};_fgab ._cfac ,_fadf =_fgab .getUserTable (_fgaa );if _fadf !=nil {return 0,_fadf ;};};_acfa ,_fadf =_fgab ._cfac .Decode (_fgab ._afde );if _fadf !=nil {return 0,_fadf ;};}else {var _fbcf _bc .Tabler ;_fbcf ,_fadf =_bc .GetStandardTable (11+int (_fgab .SbHuffDT ));if _fadf !=nil {return 0,_fadf ;};_acfa ,_fadf =_fbcf .Decode (_fgab ._afde );if _fadf !=nil {return 0,_fadf ;};};}else {var _fbfad int32 ;_fbfad ,_fadf =_fgab ._baae .DecodeInt (_fgab ._egad );if _fadf !=nil {return 0,_fadf ;};_acfa =int64 (_fbfad );};_acfa *=int64 (-_fgab .SbStrips );return _acfa ,nil ;};type templater interface{form (_gggc ,_egbf ,_geg ,_cbg ,_acfb int16 )int16 ;setIndex (_eed *_fa .DecoderStats );};func (_ggcc *template1 )setIndex (_eff *_fa .DecoderStats ){_eff .SetIndex (0x080)};func NewGenericRegion (r _fb .StreamReader )*GenericRegion {return &GenericRegion {RegionSegment :NewRegionSegment (r ),_gcf :r };};func (_ffg *GenericRegion )overrideAtTemplate0b (_gddc ,_ebb ,_cdcg ,_fafe ,_cgf ,_cgda int )int {if _ffg .GBAtOverride [0]{_gddc &=0xFFFD;if _ffg .GBAtY [0]==0&&_ffg .GBAtX [0]>=-int8 (_cgf ){_gddc |=(_fafe >>uint (int8 (_cgda )-_ffg .GBAtX [0]&0x1))<<1;}else {_gddc |=int (_ffg .getPixel (_ebb +int (_ffg .GBAtX [0]),_cdcg +int (_ffg .GBAtY [0])))<<1;};};if _ffg .GBAtOverride [1]{_gddc &=0xDFFF;if _ffg .GBAtY [1]==0&&_ffg .GBAtX [1]>=-int8 (_cgf ){_gddc |=(_fafe >>uint (int8 (_cgda )-_ffg .GBAtX [1]&0x1))<<13;}else {_gddc |=int (_ffg .getPixel (_ebb +int (_ffg .GBAtX [1]),_cdcg +int (_ffg .GBAtY [1])))<<13;};};if _ffg .GBAtOverride [2]{_gddc &=0xFDFF;if _ffg .GBAtY [2]==0&&_ffg .GBAtX [2]>=-int8 (_cgf ){_gddc |=(_fafe >>uint (int8 (_cgda )-_ffg .GBAtX [2]&0x1))<<9;}else {_gddc |=int (_ffg .getPixel (_ebb +int (_ffg .GBAtX [2]),_cdcg +int (_ffg .GBAtY [2])))<<9;};};if _ffg .GBAtOverride [3]{_gddc &=0xBFFF;if _ffg .GBAtY [3]==0&&_ffg .GBAtX [3]>=-int8 (_cgf ){_gddc |=(_fafe >>uint (int8 (_cgda )-_ffg .GBAtX [3]&0x1))<<14;}else {_gddc |=int (_ffg .getPixel (_ebb +int (_ffg .GBAtX [3]),_cdcg +int (_ffg .GBAtY [3])))<<14;};};if _ffg .GBAtOverride [4]{_gddc &=0xEFFF;if _ffg .GBAtY [4]==0&&_ffg .GBAtX [4]>=-int8 (_cgf ){_gddc |=(_fafe >>uint (int8 (_cgda )-_ffg .GBAtX [4]&0x1))<<12;}else {_gddc |=int (_ffg .getPixel (_ebb +int (_ffg .GBAtX [4]),_cdcg +int (_ffg .GBAtY [4])))<<12;};};if _ffg .GBAtOverride [5]{_gddc &=0xFFDF;if _ffg .GBAtY [5]==0&&_ffg .GBAtX [5]>=-int8 (_cgf ){_gddc |=(_fafe >>uint (int8 (_cgda )-_ffg .GBAtX [5]&0x1))<<5;}else {_gddc |=int (_ffg .getPixel (_ebb +int (_ffg .GBAtX [5]),_cdcg +int (_ffg .GBAtY [5])))<<5;};};if _ffg .GBAtOverride [6]{_gddc &=0xFFFB;if _ffg .GBAtY [6]==0&&_ffg .GBAtX [6]>=-int8 (_cgf ){_gddc |=(_fafe >>uint (int8 (_cgda )-_ffg .GBAtX [6]&0x1))<<2;}else {_gddc |=int (_ffg .getPixel (_ebb +int (_ffg .GBAtX [6]),_cdcg +int (_ffg .GBAtY [6])))<<2;};};if _ffg .GBAtOverride [7]{_gddc &=0xFFF7;if _ffg .GBAtY [7]==0&&_ffg .GBAtX [7]>=-int8 (_cgf ){_gddc |=(_fafe >>uint (int8 (_cgda )-_ffg .GBAtX [7]&0x1))<<3;}else {_gddc |=int (_ffg .getPixel (_ebb +int (_ffg .GBAtX [7]),_cdcg +int (_ffg .GBAtY [7])))<<3;};};if _ffg .GBAtOverride [8]{_gddc &=0xF7FF;if _ffg .GBAtY [8]==0&&_ffg .GBAtX [8]>=-int8 (_cgf ){_gddc |=(_fafe >>uint (int8 (_cgda )-_ffg .GBAtX [8]&0x1))<<11;}else {_gddc |=int (_ffg .getPixel (_ebb +int (_ffg .GBAtX [8]),_cdcg +int (_ffg .GBAtY [8])))<<11;};};if _ffg .GBAtOverride [9]{_gddc &=0xFFEF;if _ffg .GBAtY [9]==0&&_ffg .GBAtX [9]>=-int8 (_cgf ){_gddc |=(_fafe >>uint (int8 (_cgda )-_ffg .GBAtX [9]&0x1))<<4;}else {_gddc |=int (_ffg .getPixel (_ebb +int (_ffg .GBAtX [9]),_cdcg +int (_ffg .GBAtY [9])))<<4;};};if _ffg .GBAtOverride [10]{_gddc &=0x7FFF;if _ffg .GBAtY [10]==0&&_ffg .GBAtX [10]>=-int8 (_cgf ){_gddc |=(_fafe >>uint (int8 (_cgda )-_ffg .GBAtX [10]&0x1))<<15;}else {_gddc |=int (_ffg .getPixel (_ebb +int (_ffg .GBAtX [10]),_cdcg +int (_ffg .GBAtY [10])))<<15;};};if _ffg .GBAtOverride [11]{_gddc &=0xFDFF;if _ffg .GBAtY [11]==0&&_ffg .GBAtX [11]>=-int8 (_cgf ){_gddc |=(_fafe >>uint (int8 (_cgda )-_ffg .GBAtX [11]&0x1))<<10;}else {_gddc |=int (_ffg .getPixel (_ebb +int (_ffg .GBAtX [11]),_cdcg +int (_ffg .GBAtY [11])))<<10;};};return _gddc ;};func (_efg *GenericRefinementRegion )getPixel (_fcgd *_gg .Bitmap ,_dfa ,_ggb int )int {if _dfa < 0||_dfa >=_fcgd .Width {return 0;};if _ggb < 0||_ggb >=_fcgd .Height {return 0;};if _fcgd .GetPixel (_dfa ,_ggb ){return 1;};return 0;};func (_dgfa *Header )readDataStartOffset (_cefc _fb .StreamReader ,_cggd OrganizationType ){if _cggd ==OSequential {_dgfa .SegmentDataStartOffset =uint64 (_cefc .StreamPosition ());};};func (_abea *PatternDictionary )setGbAtPixels (){if _abea .HDTemplate ==0{_abea .GBAtX =make ([]int8 ,4);_abea .GBAtY =make ([]int8 ,4);_abea .GBAtX [0]=-int8 (_abea .HdpWidth );_abea .GBAtY [0]=0;_abea .GBAtX [1]=-3;_abea .GBAtY [1]=-1;_abea .GBAtX [2]=2;_abea .GBAtY [2]=-2;_abea .GBAtX [3]=-2;_abea .GBAtY [3]=-2;}else {_abea .GBAtX =[]int8 {-int8 (_abea .HdpWidth )};_abea .GBAtY =[]int8 {0};};};func (_cfbc *TextRegion )computeSymbolCodeLength ()error {if _cfbc .IsHuffmanEncoded {return _cfbc .symbolIDCodeLengths ();};_cfbc ._gffc =int8 (_f .Ceil (_f .Log (float64 (_cfbc .NumberOfSymbols ))/_f .Log (2)));return nil ;};func (_gggcg *SymbolDictionary )readNumberOfExportedSymbols ()error {_deae ,_cda :=_gggcg ._defc .ReadBits (32);if _cda !=nil {return _cda ;};_gggcg .NumberOfExportedSymbols =uint32 (_deae &_f .MaxUint32 );return nil ;};func (_bcce *PageInformationSegment )readResolution ()error {_eccfa ,_ggfa :=_bcce ._cad .ReadBits (32);if _ggfa !=nil {return _ggfa ;};_bcce .ResolutionX =int (_eccfa &_f .MaxInt32 );_eccfa ,_ggfa =_bcce ._cad .ReadBits (32);if _ggfa !=nil {return _ggfa ;};_bcce .ResolutionY =int (_eccfa &_f .MaxInt32 );return nil ;};func (_ccgf *SymbolDictionary )encodeFlags (_cacd _fb .BinaryWriter )(_eaec int ,_egbfg error ){const _ccgb ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _egbfg =_cacd .SkipBits (3);_egbfg !=nil {return 0,_de .Wrap (_egbfg ,_ccgb ,"\u0065\u006d\u0070\u0074\u0079\u0020\u0062\u0069\u0074\u0073");};var _gaef int ;if _ccgf .SdrTemplate > 0{_gaef =1;};if _egbfg =_cacd .WriteBit (_gaef );_egbfg !=nil {return _eaec ,_de .Wrap (_egbfg ,_ccgb ,"s\u0064\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_gaef =0;if _ccgf .SdTemplate > 1{_gaef =1;};if _egbfg =_cacd .WriteBit (_gaef );_egbfg !=nil {return _eaec ,_de .Wrap (_egbfg ,_ccgb ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_gaef =0;if _ccgf .SdTemplate ==1||_ccgf .SdTemplate ==3{_gaef =1;};if _egbfg =_cacd .WriteBit (_gaef );_egbfg !=nil {return _eaec ,_de .Wrap (_egbfg ,_ccgb ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_gaef =0;if _ccgf ._ggde {_gaef =1;};if _egbfg =_cacd .WriteBit (_gaef );_egbfg !=nil {return _eaec ,_de .Wrap (_egbfg ,_ccgb ,"\u0063\u006f\u0064in\u0067\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0065\u0064");};_gaef =0;if _ccgf ._gbfe {_gaef =1;};if _egbfg =_cacd .WriteBit (_gaef );_egbfg !=nil {return _eaec ,_de .Wrap (_egbfg ,_ccgb ,"\u0063\u006f\u0064\u0069ng\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0075\u0073\u0065\u0064");};_gaef =0;if _ccgf .SdHuffAggInstanceSelection {_gaef =1;};if _egbfg =_cacd .WriteBit (_gaef );_egbfg !=nil {return _eaec ,_de .Wrap (_egbfg ,_ccgb ,"\u0073\u0064\u0048\u0075\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074");};_gaef =int (_ccgf .SdHuffBMSizeSelection );if _egbfg =_cacd .WriteBit (_gaef );_egbfg !=nil {return _eaec ,_de .Wrap (_egbfg ,_ccgb ,"\u0073\u0064\u0048u\u0066\u0066\u0042\u006d\u0053\u0069\u007a\u0065");};_gaef =0;if _ccgf .SdHuffDecodeWidthSelection > 1{_gaef =1;};if _egbfg =_cacd .WriteBit (_gaef );_egbfg !=nil {return _eaec ,_de .Wrap (_egbfg ,_ccgb ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_gaef =0;switch _ccgf .SdHuffDecodeWidthSelection {case 1,3:_gaef =1;};if _egbfg =_cacd .WriteBit (_gaef );_egbfg !=nil {return _eaec ,_de .Wrap (_egbfg ,_ccgb ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_gaef =0;if _ccgf .SdHuffDecodeHeightSelection > 1{_gaef =1;};if _egbfg =_cacd .WriteBit (_gaef );_egbfg !=nil {return _eaec ,_de .Wrap (_egbfg ,_ccgb ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_gaef =0;switch _ccgf .SdHuffDecodeHeightSelection {case 1,3:_gaef =1;};if _egbfg =_cacd .WriteBit (_gaef );_egbfg !=nil {return _eaec ,_de .Wrap (_egbfg ,_ccgb ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_gaef =0;if _ccgf .UseRefinementAggregation {_gaef =1;};if _egbfg =_cacd .WriteBit (_gaef );_egbfg !=nil {return _eaec ,_de .Wrap (_egbfg ,_ccgb ,"\u0073\u0064\u0052\u0065\u0066\u0041\u0067\u0067");};_gaef =0;if _ccgf .IsHuffmanEncoded {_gaef =1;};if _egbfg =_cacd .WriteBit (_gaef );_egbfg !=nil {return _eaec ,_de .Wrap (_egbfg ,_ccgb ,"\u0073\u0064\u0048\u0075\u0066\u0066");};return 2,nil ;};func (_dagd *TextRegion )readHuffmanFlags ()error {var (_fgfae int ;_ggeaf uint64 ;_bagg error ;);_ ,_bagg =_dagd ._afde .ReadBit ();if _bagg !=nil {return _bagg ;};_fgfae ,_bagg =_dagd ._afde .ReadBit ();if _bagg !=nil {return _bagg ;};_dagd .SbHuffRSize =int8 (_fgfae );_ggeaf ,_bagg =_dagd ._afde .ReadBits (2);if _bagg !=nil {return _bagg ;};_dagd .SbHuffRDY =int8 (_ggeaf )&0xf;_ggeaf ,_bagg =_dagd ._afde .ReadBits (2);if _bagg !=nil {return _bagg ;};_dagd .SbHuffRDX =int8 (_ggeaf )&0xf;_ggeaf ,_bagg =_dagd ._afde .ReadBits (2);if _bagg !=nil {return _bagg ;};_dagd .SbHuffRDHeight =int8 (_ggeaf )&0xf;_ggeaf ,_bagg =_dagd ._afde .ReadBits (2);if _bagg !=nil {return _bagg ;};_dagd .SbHuffRDWidth =int8 (_ggeaf )&0xf;_ggeaf ,_bagg =_dagd ._afde .ReadBits (2);if _bagg !=nil {return _bagg ;};_dagd .SbHuffDT =int8 (_ggeaf )&0xf;_ggeaf ,_bagg =_dagd ._afde .ReadBits (2);if _bagg !=nil {return _bagg ;};_dagd .SbHuffDS =int8 (_ggeaf )&0xf;_ggeaf ,_bagg =_dagd ._afde .ReadBits (2);if _bagg !=nil {return _bagg ;};_dagd .SbHuffFS =int8 (_ggeaf )&0xf;return nil ;};func (_bf *GenericRefinementRegion )getGrReference ()(*_gg .Bitmap ,error ){segments :=_bf ._fe .RTSegments ;if len (segments )==0{return nil ,_cd .New ("\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0065\u0078is\u0074\u0073");};_fce ,_bea :=segments [0].GetSegmentData ();if _bea !=nil {return nil ,_bea ;};_ebg ,_gdc :=_fce .(Regioner );if !_gdc {return nil ,_e .Errorf ("\u0072\u0065\u0066\u0065\u0072r\u0065\u0064\u0020\u0074\u006f\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_fce );};return _ebg .GetRegionBitmap ();};func (_bcge *SymbolDictionary )decodeNewSymbols (_gec ,_efb uint32 ,_abcf *_gg .Bitmap ,_cfad ,_cedg int32 )error {if _bcge ._ccbf ==nil {_bcge ._ccbf =_aaf (_bcge ._defc ,nil );if _bcge ._fafd ==nil {var _ccgff error ;_bcge ._fafd ,_ccgff =_fa .New (_bcge ._defc );if _ccgff !=nil {return _ccgff ;};};if _bcge ._cfdd ==nil {_bcge ._cfdd =_fa .NewStats (65536,1);};};_bcge ._ccbf .setParameters (_bcge ._cfdd ,_bcge ._fafd ,_bcge .SdrTemplate ,_gec ,_efb ,_abcf ,_cfad ,_cedg ,false ,_bcge .SdrATX ,_bcge .SdrATY );return _bcge .addSymbol (_bcge ._ccbf );};func (_aacg *TextRegion )createRegionBitmap ()error {_aacg .RegionBitmap =_gg .New (int (_aacg .RegionInfo .BitmapWidth ),int (_aacg .RegionInfo .BitmapHeight ));if _aacg .DefaultPixel !=0{_aacg .RegionBitmap .SetDefaultPixel ();};return nil ;};func (_eacc *SymbolDictionary )encodeNumSyms (_cbfb _fb .BinaryWriter )(_aaae int ,_gebe error ){const _aabb ="\u0065\u006e\u0063\u006f\u0064\u0065\u004e\u0075\u006d\u0053\u0079\u006d\u0073";_fbbb :=make ([]byte ,4);_ce .BigEndian .PutUint32 (_fbbb ,_eacc .NumberOfExportedSymbols );if _aaae ,_gebe =_cbfb .Write (_fbbb );_gebe !=nil {return _aaae ,_de .Wrap (_gebe ,_aabb ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};_ce .BigEndian .PutUint32 (_fbbb ,_eacc .NumberOfNewSymbols );_fed ,_gebe :=_cbfb .Write (_fbbb );if _gebe !=nil {return _aaae ,_de .Wrap (_gebe ,_aabb ,"n\u0065\u0077\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};return _aaae +_fed ,nil ;};func (_faceb *TextRegion )decodeSymInRefSize ()(int64 ,error ){const _dgda ="\u0064e\u0063o\u0064\u0065\u0053\u0079\u006dI\u006e\u0052e\u0066\u0053\u0069\u007a\u0065";if _faceb .SbHuffRSize ==0{_ggbecg ,_efcg :=_bc .GetStandardTable (1);if _efcg !=nil {return 0,_de .Wrap (_efcg ,_dgda ,"");};return _ggbecg .Decode (_faceb ._afde );};if _faceb ._ababb ==nil {var (_accb int ;_beegg error ;);if _faceb .SbHuffFS ==3{_accb ++;};if _faceb .SbHuffDS ==3{_accb ++;};if _faceb .SbHuffDT ==3{_accb ++;};if _faceb .SbHuffRDWidth ==3{_accb ++;};if _faceb .SbHuffRDHeight ==3{_accb ++;};if _faceb .SbHuffRDX ==3{_accb ++;};if _faceb .SbHuffRDY ==3{_accb ++;};_faceb ._ababb ,_beegg =_faceb .getUserTable (_accb );if _beegg !=nil {return 0,_de .Wrap (_beegg ,_dgda ,"");};};_ggbbe ,_bcba :=_faceb ._ababb .Decode (_faceb ._afde );if _bcba !=nil {return 0,_de .Wrap (_bcba ,_dgda ,"");};return _ggbbe ,nil ;};type Header struct{SegmentNumber uint32 ;Type Type ;RetainFlag bool ;PageAssociation int ;PageAssociationFieldSize bool ;RTSegments []*Header ;HeaderLength int64 ;SegmentDataLength uint64 ;SegmentDataStartOffset uint64 ;Reader _fb .StreamReader ;SegmentData Segmenter ;RTSNumbers []int ;RetainBits []uint8 ;};func (_dffg *HalftoneRegion )GetRegionBitmap ()(*_gg .Bitmap ,error ){if _dffg .HalftoneRegionBitmap !=nil {return _dffg .HalftoneRegionBitmap ,nil ;};var _gdab error ;_dffg .HalftoneRegionBitmap =_gg .New (int (_dffg .RegionSegment .BitmapWidth ),int (_dffg .RegionSegment .BitmapHeight ));if _dffg .Patterns ==nil ||len (_dffg .Patterns )==0{_dffg .Patterns ,_gdab =_dffg .GetPatterns ();if _gdab !=nil {return nil ,_gdab ;};};if _dffg .HDefaultPixel ==1{_dffg .HalftoneRegionBitmap .SetDefaultPixel ();};_dffa :=_f .Ceil (_f .Log (float64 (len (_dffg .Patterns )))/_f .Log (2));_caag :=int (_dffa );var _eccf [][]int ;_eccf ,_gdab =_dffg .grayScaleDecoding (_caag );if _gdab !=nil {return nil ,_gdab ;};if _gdab =_dffg .renderPattern (_eccf );_gdab !=nil {return nil ,_gdab ;};return _dffg .HalftoneRegionBitmap ,nil ;};func (_gcff *GenericRegion )writeGBAtPixels (_ccfe _fb .BinaryWriter )(_ddbf int ,_aege error ){const _eeda ="\u0077r\u0069t\u0065\u0047\u0042\u0041\u0074\u0050\u0069\u0078\u0065\u006c\u0073";if _gcff .UseMMR {return 0,nil ;};_bcecg :=1;if _gcff .GBTemplate ==0{_bcecg =4;}else if _gcff .UseExtTemplates {_bcecg =12;};if len (_gcff .GBAtX )!=_bcecg {return 0,_de .Errorf (_eeda ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0058\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");};if len (_gcff .GBAtY )!=_bcecg {return 0,_de .Errorf (_eeda ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0059\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");};for _cbdf :=0;_cbdf < _bcecg ;_cbdf ++{if _aege =_ccfe .WriteByte (byte (_gcff .GBAtX [_cbdf ]));_aege !=nil {return _ddbf ,_de .Wrap (_aege ,_eeda ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0058");};_ddbf ++;if _aege =_ccfe .WriteByte (byte (_gcff .GBAtY [_cbdf ]));_aege !=nil {return _ddbf ,_de .Wrap (_aege ,_eeda ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0059");};_ddbf ++;};return _ddbf ,nil ;};func (_eadf *PageInformationSegment )encodeStripingInformation (_dagf _fb .BinaryWriter )(_ded int ,_gbagb error ){const _dfcc ="\u0065n\u0063\u006f\u0064\u0065S\u0074\u0072\u0069\u0070\u0069n\u0067I\u006ef\u006f\u0072\u006d\u0061\u0074\u0069\u006fn";if !_eadf .IsStripe {if _ded ,_gbagb =_dagf .Write ([]byte {0x00,0x00});_gbagb !=nil {return 0,_de .Wrap (_gbagb ,_dfcc ,"n\u006f\u0020\u0073\u0074\u0072\u0069\u0070\u0069\u006e\u0067");};return _ded ,nil ;};_gagg :=make ([]byte ,2);_ce .BigEndian .PutUint16 (_gagg ,_eadf .MaxStripeSize |1<<15);if _ded ,_gbagb =_dagf .Write (_gagg );_gbagb !=nil {return 0,_de .Wrapf (_gbagb ,_dfcc ,"\u0073\u0074\u0072i\u0070\u0069\u006e\u0067\u003a\u0020\u0025\u0064",_eadf .MaxStripeSize );};return _ded ,nil ;};type Segmenter interface{Init (_bac *Header ,_gfcf _fb .StreamReader )error ;};func (_bef *SymbolDictionary )decodeDifferenceWidth ()(int64 ,error ){if _bef .IsHuffmanEncoded {switch _bef .SdHuffDecodeWidthSelection {case 0:_cbade ,_ddea :=_bc .GetStandardTable (2);if _ddea !=nil {return 0,_ddea ;};return _cbade .Decode (_bef ._defc );case 1:_cfde ,_ggcf :=_bc .GetStandardTable (3);if _ggcf !=nil {return 0,_ggcf ;};return _cfde .Decode (_bef ._defc );case 3:if _bef ._ccbb ==nil {var _bgcf int ;if _bef .SdHuffDecodeHeightSelection ==3{_bgcf ++;};_dcbg ,_ffdb :=_bef .getUserTable (_bgcf );if _ffdb !=nil {return 0,_ffdb ;};_bef ._ccbb =_dcbg ;};return _bef ._ccbb .Decode (_bef ._defc );};}else {_bfdd ,_dddb :=_bef ._fafd .DecodeInt (_bef ._ecbf );if _dddb !=nil {return 0,_dddb ;};return int64 (_bfdd ),nil ;};return 0,nil ;};func (_ecd *GenericRefinementRegion )decodeTypicalPredictedLineTemplate1 (_cbe ,_ddd ,_fd ,_fbb ,_gce ,_dbb ,_ged ,_acf ,_aca int )(_ed error ){var (_bcc ,_cfc int ;_eee ,_ffag int ;_fcg ,_bfb int ;_eace byte ;);if _cbe > 0{_eace ,_ed =_ecd .RegionBitmap .GetByte (_ged -_fd );if _ed !=nil {return ;};_eee =int (_eace );};if _acf > 0&&_acf <=_ecd .ReferenceBitmap .Height {_eace ,_ed =_ecd .ReferenceBitmap .GetByte (_aca -_fbb +_dbb );if _ed !=nil {return ;};_ffag =int (_eace )<<2;};if _acf >=0&&_acf < _ecd .ReferenceBitmap .Height {_eace ,_ed =_ecd .ReferenceBitmap .GetByte (_aca +_dbb );if _ed !=nil {return ;};_fcg =int (_eace );};if _acf > -2&&_acf < _ecd .ReferenceBitmap .Height -1{_eace ,_ed =_ecd .ReferenceBitmap .GetByte (_aca +_fbb +_dbb );if _ed !=nil {return ;};_bfb =int (_eace );};_bcc =((_eee >>5)&0x6)|((_bfb >>2)&0x30)|(_fcg &0xc0)|(_ffag &0x200);_cfc =((_bfb >>2)&0x70)|(_fcg &0xc0)|(_ffag &0x700);var _bca int ;for _bad :=0;_bad < _gce ;_bad =_bca {var (_baf int ;_fbc int ;);_bca =_bad +8;if _baf =_ddd -_bad ;_baf > 8{_baf =8;};_agc :=_bca < _ddd ;_bbee :=_bca < _ecd .ReferenceBitmap .Width ;_cc :=_dbb +1;if _cbe > 0{_eace =0;if _agc {_eace ,_ed =_ecd .RegionBitmap .GetByte (_ged -_fd +1);if _ed !=nil {return ;};};_eee =(_eee <<8)|int (_eace );};if _acf > 0&&_acf <=_ecd .ReferenceBitmap .Height {var _fgfb int ;if _bbee {_eace ,_ed =_ecd .ReferenceBitmap .GetByte (_aca -_fbb +_cc );if _ed !=nil {return ;};_fgfb =int (_eace )<<2;};_ffag =(_ffag <<8)|_fgfb ;};if _acf >=0&&_acf < _ecd .ReferenceBitmap .Height {_eace =0;if _bbee {_eace ,_ed =_ecd .ReferenceBitmap .GetByte (_aca +_cc );if _ed !=nil {return ;};};_fcg =(_fcg <<8)|int (_eace );};if _acf > -2&&_acf < (_ecd .ReferenceBitmap .Height -1){_eace =0;if _bbee {_eace ,_ed =_ecd .ReferenceBitmap .GetByte (_aca +_fbb +_cc );if _ed !=nil {return ;};};_bfb =(_bfb <<8)|int (_eace );};for _gaf :=0;_gaf < _baf ;_gaf ++{var _baba int ;_fec :=(_cfc >>4)&0x1ff;switch _fec {case 0x1ff:_baba =1;case 0x00:_baba =0;default:_ecd ._bdg .SetIndex (int32 (_bcc ));_baba ,_ed =_ecd ._gga .DecodeBit (_ecd ._bdg );if _ed !=nil {return ;};};_bcee :=uint (7-_gaf );_fbc |=_baba <<_bcee ;_bcc =((_bcc &0x0d6)<<1)|_baba |(_eee >>_bcee +5)&0x002|((_bfb >>_bcee +2)&0x010)|((_fcg >>_bcee )&0x040)|((_ffag >>_bcee )&0x200);_cfc =((_cfc &0xdb)<<1)|((_bfb >>_bcee +2)&0x010)|((_fcg >>_bcee )&0x080)|((_ffag >>_bcee )&0x400);};_ed =_ecd .RegionBitmap .SetByte (_ged ,byte (_fbc ));if _ed !=nil {return ;};_ged ++;_aca ++;};return nil ;};var _ templater =&template1 {};var (_ Regioner =&TextRegion {};_ Segmenter =&TextRegion {};);func (_dfbf *TextRegion )blit (_dcffa *_gg .Bitmap ,_dcdb int64 )error {if _dfbf .IsTransposed ==0&&(_dfbf .ReferenceCorner ==2||_dfbf .ReferenceCorner ==3){_dfbf ._ddac +=int64 (_dcffa .Width -1);}else if _dfbf .IsTransposed ==1&&(_dfbf .ReferenceCorner ==0||_dfbf .ReferenceCorner ==2){_dfbf ._ddac +=int64 (_dcffa .Height -1);};_ceaf :=_dfbf ._ddac ;if _dfbf .IsTransposed ==1{_ceaf ,_dcdb =_dcdb ,_ceaf ;};switch _dfbf .ReferenceCorner {case 0:_dcdb -=int64 (_dcffa .Height -1);case 2:_dcdb -=int64 (_dcffa .Height -1);_ceaf -=int64 (_dcffa .Width -1);case 3:_ceaf -=int64 (_dcffa .Width -1);};_fbbc :=_gg .Blit (_dcffa ,_dfbf .RegionBitmap ,int (_ceaf ),int (_dcdb ),_dfbf .CombinationOperator );if _fbbc !=nil {return _fbbc ;};if _dfbf .IsTransposed ==0&&(_dfbf .ReferenceCorner ==0||_dfbf .ReferenceCorner ==1){_dfbf ._ddac +=int64 (_dcffa .Width -1);};if _dfbf .IsTransposed ==1&&(_dfbf .ReferenceCorner ==1||_dfbf .ReferenceCorner ==3){_dfbf ._ddac +=int64 (_dcffa .Height -1);};return nil ;};func (_dgcbg *TextRegion )parseHeader ()error {var _eeee error ;_be .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069n\u0073\u002e\u002e\u002e");defer func (){if _eeee !=nil {_be .Log .Trace ("\u005b\u0054\u0045\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044E\u0052\u005d\u0020\u0066\u0061i\u006c\u0065d\u002e\u0020\u0025\u0076",_eeee );}else {_be .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069s\u0068\u0065\u0064\u002e");};}();if _eeee =_dgcbg .RegionInfo .parseHeader ();_eeee !=nil {return _eeee ;};if _eeee =_dgcbg .readRegionFlags ();_eeee !=nil {return _eeee ;};if _dgcbg .IsHuffmanEncoded {if _eeee =_dgcbg .readHuffmanFlags ();_eeee !=nil {return _eeee ;};};if _eeee =_dgcbg .readUseRefinement ();_eeee !=nil {return _eeee ;};if _eeee =_dgcbg .readAmountOfSymbolInstances ();_eeee !=nil {return _eeee ;};if _eeee =_dgcbg .getSymbols ();_eeee !=nil {return _eeee ;};if _eeee =_dgcbg .computeSymbolCodeLength ();_eeee !=nil {return _eeee ;};if _eeee =_dgcbg .checkInput ();_eeee !=nil {return _eeee ;};_be .Log .Trace ("\u0025\u0073",_dgcbg .String ());return nil ;};func (_fggb *TableSegment )HtPS ()int32 {return _fggb ._dffc };func (_acc *GenericRegion )decodeTemplate0b (_aegb ,_edf ,_agfb int ,_ebaf ,_cba int )(_faa error ){const _gaec ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0062";var (_edc ,_agef int ;_dc ,_fgae int ;_fgaf byte ;_faaa int ;);if _aegb >=1{_fgaf ,_faa =_acc .Bitmap .GetByte (_cba );if _faa !=nil {return _de .Wrap (_faa ,_gaec ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_dc =int (_fgaf );};if _aegb >=2{_fgaf ,_faa =_acc .Bitmap .GetByte (_cba -_acc .Bitmap .RowStride );if _faa !=nil {return _de .Wrap (_faa ,_gaec ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_fgae =int (_fgaf )<<6;};_edc =(_dc &0xf0)|(_fgae &0x3800);for _cfe :=0;_cfe < _agfb ;_cfe =_faaa {var (_aeeg byte ;_dcb int ;);_faaa =_cfe +8;if _dbce :=_edf -_cfe ;_dbce > 8{_dcb =8;}else {_dcb =_dbce ;};if _aegb > 0{_dc <<=8;if _faaa < _edf {_fgaf ,_faa =_acc .Bitmap .GetByte (_cba +1);if _faa !=nil {return _de .Wrap (_faa ,_gaec ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_dc |=int (_fgaf );};};if _aegb > 1{_fgae <<=8;if _faaa < _edf {_fgaf ,_faa =_acc .Bitmap .GetByte (_cba -_acc .Bitmap .RowStride +1);if _faa !=nil {return _de .Wrap (_faa ,_gaec ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_fgae |=int (_fgaf )<<6;};};for _dffb :=0;_dffb < _dcb ;_dffb ++{_aef :=uint (7-_dffb );if _acc ._eea {_agef =_acc .overrideAtTemplate0b (_edc ,_cfe +_dffb ,_aegb ,int (_aeeg ),_dffb ,int (_aef ));_acc ._dfag .SetIndex (int32 (_agef ));}else {_acc ._dfag .SetIndex (int32 (_edc ));};var _cgdg int ;_cgdg ,_faa =_acc ._ebf .DecodeBit (_acc ._dfag );if _faa !=nil {return _de .Wrap (_faa ,_gaec ,"");};_aeeg |=byte (_cgdg <<_aef );_edc =((_edc &0x7bf7)<<1)|_cgdg |((_dc >>_aef )&0x10)|((_fgae >>_aef )&0x800);};if _fdf :=_acc .Bitmap .SetByte (_ebaf ,_aeeg );_fdf !=nil {return _de .Wrap (_fdf ,_gaec ,"");};_ebaf ++;_cba ++;};return nil ;};type GenericRefinementRegion struct{_eg templater ;_fc templater ;_dg _fb .StreamReader ;_fe *Header ;RegionInfo *RegionSegment ;IsTPGROn bool ;TemplateID int8 ;Template templater ;GrAtX []int8 ;GrAtY []int8 ;RegionBitmap *_gg .Bitmap ;ReferenceBitmap *_gg .Bitmap ;ReferenceDX int32 ;ReferenceDY int32 ;_gga *_fa .Decoder ;_bdg *_fa .DecoderStats ;_bdf bool ;_bdc []bool ;};func (_fafb *HalftoneRegion )GetPatterns ()([]*_gg .Bitmap ,error ){var (_ffd []*_gg .Bitmap ;_deba error ;);for _ ,_aed :=range _fafb ._feg .RTSegments {var _bcgg Segmenter ;_bcgg ,_deba =_aed .GetSegmentData ();if _deba !=nil {_be .Log .Debug ("\u0047e\u0074\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061 \u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025v",_deba );return nil ,_deba ;};_caad ,_acfe :=_bcgg .(*PatternDictionary );if !_acfe {_deba =_e .Errorf ("\u0072e\u006c\u0061t\u0065\u0064\u0020\u0073e\u0067\u006d\u0065n\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0070at\u0074\u0065\u0072n\u0020\u0064i\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u003a \u0025\u0054",_bcgg );return nil ,_deba ;};var _fcf []*_gg .Bitmap ;_fcf ,_deba =_caad .GetDictionary ();if _deba !=nil {_be .Log .Debug ("\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_deba );return nil ,_deba ;};_ffd =append (_ffd ,_fcf ...);};return _ffd ,nil ;};func _fadc (_bbeb _fb .StreamReader ,_bbgda *Header )*TextRegion {_eagg :=&TextRegion {_afde :_bbeb ,Header :_bbgda ,RegionInfo :NewRegionSegment (_bbeb )};return _eagg ;};func (_fgabf *TextRegion )decodeRdx ()(int64 ,error ){const _cbac ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064x";if _fgabf .IsHuffmanEncoded {if _fgabf .SbHuffRDX ==3{if _fgabf ._bfeag ==nil {var (_bgbg int ;_gged error ;);if _fgabf .SbHuffFS ==3{_bgbg ++;};if _fgabf .SbHuffDS ==3{_bgbg ++;};if _fgabf .SbHuffDT ==3{_bgbg ++;};if _fgabf .SbHuffRDWidth ==3{_bgbg ++;};if _fgabf .SbHuffRDHeight ==3{_bgbg ++;};_fgabf ._bfeag ,_gged =_fgabf .getUserTable (_bgbg );if _gged !=nil {return 0,_de .Wrap (_gged ,_cbac ,"");};};return _fgabf ._bfeag .Decode (_fgabf ._afde );};_fdfg ,_dgabf :=_bc .GetStandardTable (14+int (_fgabf .SbHuffRDX ));if _dgabf !=nil {return 0,_de .Wrap (_dgabf ,_cbac ,"");};return _fdfg .Decode (_fgabf ._afde );};_cdacd ,_gfea :=_fgabf ._baae .DecodeInt (_fgabf ._eddb );if _gfea !=nil {return 0,_de .Wrap (_gfea ,_cbac ,"");};return int64 (_cdacd ),nil ;};func (_edfa *PatternDictionary )Init (h *Header ,r _fb .StreamReader )error {_edfa ._abc =r ;return _edfa .parseHeader ();};func (_ecgf *SymbolDictionary )readAtPixels (_gacf int )error {_ecgf .SdATX =make ([]int8 ,_gacf );_ecgf .SdATY =make ([]int8 ,_gacf );var (_aad byte ;_ffbb error ;);for _fcfa :=0;_fcfa < _gacf ;_fcfa ++{_aad ,_ffbb =_ecgf ._defc .ReadByte ();if _ffbb !=nil {return _ffbb ;};_ecgf .SdATX [_fcfa ]=int8 (_aad );_aad ,_ffbb =_ecgf ._defc .ReadByte ();if _ffbb !=nil {return _ffbb ;};_ecgf .SdATY [_fcfa ]=int8 (_aad );};return nil ;};func (_dec *GenericRegion )setParameters (_edcf bool ,_cgdgb ,_abgg int64 ,_eggf ,_ccca uint32 ){_dec .IsMMREncoded =_edcf ;_dec .DataOffset =_cgdgb ;_dec .DataLength =_abgg ;_dec .RegionSegment .BitmapHeight =_eggf ;_dec .RegionSegment .BitmapWidth =_ccca ;_dec ._eec =nil ;_dec .Bitmap =nil ;};func (_dabc *TextRegion )decodeIds ()(int64 ,error ){const _fgcb ="\u0064e\u0063\u006f\u0064\u0065\u0049\u0064s";if _dabc .IsHuffmanEncoded {if _dabc .SbHuffDS ==3{if _dabc ._decg ==nil {_afgec :=0;if _dabc .SbHuffFS ==3{_afgec ++;};var _befgd error ;_dabc ._decg ,_befgd =_dabc .getUserTable (_afgec );if _befgd !=nil {return 0,_de .Wrap (_befgd ,_fgcb ,"");};};return _dabc ._decg .Decode (_dabc ._afde );};_fdae ,_adad :=_bc .GetStandardTable (8+int (_dabc .SbHuffDS ));if _adad !=nil {return 0,_de .Wrap (_adad ,_fgcb ,"");};return _fdae .Decode (_dabc ._afde );};_gcfab ,_cdggc :=_dabc ._baae .DecodeInt (_dabc ._begb );if _cdggc !=nil {return 0,_de .Wrap (_cdggc ,_fgcb ,"\u0063\u0078\u0049\u0041\u0044\u0053");};return int64 (_gcfab ),nil ;};func (_eef *template1 )form (_egg ,_gdcb ,_efc ,_acd ,_fccf int16 )int16 {return ((_egg &0x02)<<8)|(_gdcb <<6)|((_efc &0x03)<<4)|(_acd <<1)|_fccf ;};func (_dbfb *SymbolDictionary )getUserTable (_beeg int )(_bc .Tabler ,error ){var _facdg int ;for _ ,_eagb :=range _dbfb .Header .RTSegments {if _eagb .Type ==53{if _facdg ==_beeg {_bgdfb ,_adfc :=_eagb .GetSegmentData ();if _adfc !=nil {return nil ,_adfc ;};_eabgc :=_bgdfb .(_bc .BasicTabler );return _bc .NewEncodedTable (_eabgc );};_facdg ++;};};return nil ,nil ;};type TextRegion struct{_afde _fb .StreamReader ;RegionInfo *RegionSegment ;SbrTemplate int8 ;SbDsOffset int8 ;DefaultPixel int8 ;CombinationOperator _gg .CombinationOperator ;IsTransposed int8 ;ReferenceCorner int16 ;LogSBStrips int16 ;UseRefinement bool ;IsHuffmanEncoded bool ;SbHuffRSize int8 ;SbHuffRDY int8 ;SbHuffRDX int8 ;SbHuffRDHeight int8 ;SbHuffRDWidth int8 ;SbHuffDT int8 ;SbHuffDS int8 ;SbHuffFS int8 ;SbrATX []int8 ;SbrATY []int8 ;NumberOfSymbolInstances uint32 ;_ddac int64 ;SbStrips int8 ;NumberOfSymbols uint32 ;RegionBitmap *_gg .Bitmap ;Symbols []*_gg .Bitmap ;_baae *_fa .Decoder ;_fbbf *GenericRefinementRegion ;_egad *_fa .DecoderStats ;_eeag *_fa .DecoderStats ;_begb *_fa .DecoderStats ;_dedb *_fa .DecoderStats ;_gefg *_fa .DecoderStats ;_affc *_fa .DecoderStats ;_ddeg *_fa .DecoderStats ;_gdcd *_fa .DecoderStats ;_eddb *_fa .DecoderStats ;_ebfe *_fa .DecoderStats ;_cfadbf *_fa .DecoderStats ;_gffc int8 ;_ddgeb *_bc .FixedSizeTable ;Header *Header ;_ddgc _bc .Tabler ;_decg _bc .Tabler ;_cfac _bc .Tabler ;_cbfbd _bc .Tabler ;_dddee _bc .Tabler ;_bfeag _bc .Tabler ;_cacg _bc .Tabler ;_ababb _bc .Tabler ;_badb ,_gada map[int ]int ;_bdba []int ;_bgdb *_gg .Points ;_bfagc *_gg .Bitmaps ;_dfde *_bd .IntSlice ;_bgcde ,_gffe int ;_afge *_gg .Boxes ;};func (_ddccd *RegionSegment )Encode (w _fb .BinaryWriter )(_gafe int ,_dggf error ){const _bcf ="R\u0065g\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065n\u0074\u002e\u0045\u006eco\u0064\u0065";_eccc :=make ([]byte ,4);_ce .BigEndian .PutUint32 (_eccc ,_ddccd .BitmapWidth );_gafe ,_dggf =w .Write (_eccc );if _dggf !=nil {return 0,_de .Wrap (_dggf ,_bcf ,"\u0057\u0069\u0064t\u0068");};_ce .BigEndian .PutUint32 (_eccc ,_ddccd .BitmapHeight );var _agff int ;_agff ,_dggf =w .Write (_eccc );if _dggf !=nil {return 0,_de .Wrap (_dggf ,_bcf ,"\u0048\u0065\u0069\u0067\u0068\u0074");};_gafe +=_agff ;_ce .BigEndian .PutUint32 (_eccc ,_ddccd .XLocation );_agff ,_dggf =w .Write (_eccc );if _dggf !=nil {return 0,_de .Wrap (_dggf ,_bcf ,"\u0058L\u006f\u0063\u0061\u0074\u0069\u006fn");};_gafe +=_agff ;_ce .BigEndian .PutUint32 (_eccc ,_ddccd .YLocation );_agff ,_dggf =w .Write (_eccc );if _dggf !=nil {return 0,_de .Wrap (_dggf ,_bcf ,"\u0059L\u006f\u0063\u0061\u0074\u0069\u006fn");};_gafe +=_agff ;if _dggf =w .WriteByte (byte (_ddccd .CombinaionOperator )&0x07);_dggf !=nil {return 0,_de .Wrap (_dggf ,_bcf ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};_gafe ++;return _gafe ,nil ;};func (_fea *TableSegment )HtHigh ()int32 {return _fea ._gebd };func (_gecc *TextRegion )checkInput ()error {const _cbca ="\u0063\u0068\u0065\u0063\u006b\u0049\u006e\u0070\u0075\u0074";if !_gecc .UseRefinement {if _gecc .SbrTemplate !=0{_be .Log .Debug ("\u0053\u0062\u0072Te\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_gecc .SbrTemplate =0;};};if _gecc .SbHuffFS ==2||_gecc .SbHuffRDWidth ==2||_gecc .SbHuffRDHeight ==2||_gecc .SbHuffRDX ==2||_gecc .SbHuffRDY ==2{return _de .Error (_cbca ,"h\u0075\u0066\u0066\u006d\u0061\u006e \u0066\u006c\u0061\u0067\u0020\u0076a\u006c\u0075\u0065\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074e\u0064");};if !_gecc .UseRefinement {if _gecc .SbHuffRSize !=0{_be .Log .Debug ("\u0053\u0062\u0048uf\u0066\u0052\u0053\u0069\u007a\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_gecc .SbHuffRSize =0;};if _gecc .SbHuffRDY !=0{_be .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044Y\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_gecc .SbHuffRDY =0;};if _gecc .SbHuffRDX !=0{_be .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044X\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_gecc .SbHuffRDX =0;};if _gecc .SbHuffRDWidth !=0{_be .Log .Debug ("\u0053b\u0048\u0075\u0066\u0066R\u0044\u0057\u0069\u0064\u0074h\u0020s\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u00200");_gecc .SbHuffRDWidth =0;};if _gecc .SbHuffRDHeight !=0{_be .Log .Debug ("\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069g\u0068\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0030");_gecc .SbHuffRDHeight =0;};};return nil ;};func (_afe *GenericRefinementRegion )decodeTypicalPredictedLineTemplate0 (_gfc ,_df ,_egb ,_fgf ,_fag ,_eca ,_bfg ,_bba ,_ef int )error {var (_afeg ,_fee ,_egc ,_abga ,_bab ,_dfc int ;_ac byte ;_bdfc error ;);if _gfc > 0{_ac ,_bdfc =_afe .RegionBitmap .GetByte (_bfg -_egb );if _bdfc !=nil {return _bdfc ;};_egc =int (_ac );};if _bba > 0&&_bba <=_afe .ReferenceBitmap .Height {_ac ,_bdfc =_afe .ReferenceBitmap .GetByte (_ef -_fgf +_eca );if _bdfc !=nil {return _bdfc ;};_abga =int (_ac )<<4;};if _bba >=0&&_bba < _afe .ReferenceBitmap .Height {_ac ,_bdfc =_afe .ReferenceBitmap .GetByte (_ef +_eca );if _bdfc !=nil {return _bdfc ;};_bab =int (_ac )<<1;};if _bba > -2&&_bba < _afe .ReferenceBitmap .Height -1{_ac ,_bdfc =_afe .ReferenceBitmap .GetByte (_ef +_fgf +_eca );if _bdfc !=nil {return _bdfc ;};_dfc =int (_ac );};_afeg =((_egc >>5)&0x6)|((_dfc >>2)&0x30)|(_bab &0x180)|(_abga &0xc00);var _dd int ;for _gae :=0;_gae < _fag ;_gae =_dd {var _dgf int ;_dd =_gae +8;var _fcd int ;if _fcd =_df -_gae ;_fcd > 8{_fcd =8;};_cee :=_dd < _df ;_cbb :=_dd < _afe .ReferenceBitmap .Width ;_ag :=_eca +1;if _gfc > 0{_ac =0;if _cee {_ac ,_bdfc =_afe .RegionBitmap .GetByte (_bfg -_egb +1);if _bdfc !=nil {return _bdfc ;};};_egc =(_egc <<8)|int (_ac );};if _bba > 0&&_bba <=_afe .ReferenceBitmap .Height {var _ggad int ;if _cbb {_ac ,_bdfc =_afe .ReferenceBitmap .GetByte (_ef -_fgf +_ag );if _bdfc !=nil {return _bdfc ;};_ggad =int (_ac )<<4;};_abga =(_abga <<8)|_ggad ;};if _bba >=0&&_bba < _afe .ReferenceBitmap .Height {var _ceb int ;if _cbb {_ac ,_bdfc =_afe .ReferenceBitmap .GetByte (_ef +_ag );if _bdfc !=nil {return _bdfc ;};_ceb =int (_ac )<<1;};_bab =(_bab <<8)|_ceb ;};if _bba > -2&&_bba < (_afe .ReferenceBitmap .Height -1){_ac =0;if _cbb {_ac ,_bdfc =_afe .ReferenceBitmap .GetByte (_ef +_fgf +_ag );if _bdfc !=nil {return _bdfc ;};};_dfc =(_dfc <<8)|int (_ac );};for _ffc :=0;_ffc < _fcd ;_ffc ++{var _fge int ;_gc :=false ;_aff :=(_afeg >>4)&0x1ff;if _aff ==0x1ff{_gc =true ;_fge =1;}else if _aff ==0x00{_gc =true ;};if !_gc {if _afe ._bdf {_fee =_afe .overrideAtTemplate0 (_afeg ,_gae +_ffc ,_gfc ,_dgf ,_ffc );_afe ._bdg .SetIndex (int32 (_fee ));}else {_afe ._bdg .SetIndex (int32 (_afeg ));};_fge ,_bdfc =_afe ._gga .DecodeBit (_afe ._bdg );if _bdfc !=nil {return _bdfc ;};};_gfce :=uint (7-_ffc );_dgf |=_fge <<_gfce ;_afeg =((_afeg &0xdb6)<<1)|_fge |(_egc >>_gfce +5)&0x002|((_dfc >>_gfce +2)&0x010)|((_bab >>_gfce )&0x080)|((_abga >>_gfce )&0x400);};_bdfc =_afe .RegionBitmap .SetByte (_bfg ,byte (_dgf ));if _bdfc !=nil {return _bdfc ;};_bfg ++;_ef ++;};return nil ;};type Documenter interface{GetPage (int )(Pager ,error );GetGlobalSegment (int )(*Header ,error );};func (_gaab *TextRegion )symbolIDCodeLengths ()error {var (_deegb []*_bc .Code ;_dbbc uint64 ;_bbbfd _bc .Tabler ;_abcd error ;);for _bedaf :=0;_bedaf < 35;_bedaf ++{_dbbc ,_abcd =_gaab ._afde .ReadBits (4);if _abcd !=nil {return _abcd ;};_cdcgg :=int (_dbbc &0xf);if _cdcgg > 0{_deegb =append (_deegb ,_bc .NewCode (int32 (_cdcgg ),0,int32 (_bedaf ),false ));};};_bbbfd ,_abcd =_bc .NewFixedSizeTable (_deegb );if _abcd !=nil {return _abcd ;};var (_fbcb int64 ;_agbg uint32 ;_gccc []*_bc .Code ;_cfcf int64 ;);for _agbg < _gaab .NumberOfSymbols {_cfcf ,_abcd =_bbbfd .Decode (_gaab ._afde );if _abcd !=nil {return _abcd ;};if _cfcf < 32{if _cfcf > 0{_gccc =append (_gccc ,_bc .NewCode (int32 (_cfcf ),0,int32 (_agbg ),false ));};_fbcb =_cfcf ;_agbg ++;}else {var _feegc ,_dfed int64 ;switch _cfcf {case 32:_dbbc ,_abcd =_gaab ._afde .ReadBits (2);if _abcd !=nil {return _abcd ;};_feegc =3+int64 (_dbbc );if _agbg > 0{_dfed =_fbcb ;};case 33:_dbbc ,_abcd =_gaab ._afde .ReadBits (3);if _abcd !=nil {return _abcd ;};_feegc =3+int64 (_dbbc );case 34:_dbbc ,_abcd =_gaab ._afde .ReadBits (7);if _abcd !=nil {return _abcd ;};_feegc =11+int64 (_dbbc );};for _defe :=0;_defe < int (_feegc );_defe ++{if _dfed > 0{_gccc =append (_gccc ,_bc .NewCode (int32 (_dfed ),0,int32 (_agbg ),false ));};_agbg ++;};};};_gaab ._afde .Align ();_gaab ._ddgeb ,_abcd =_bc .NewFixedSizeTable (_gccc );return _abcd ;};func (_afda *PatternDictionary )readIsMMREncoded ()error {_fgg ,_bfgd :=_afda ._abc .ReadBit ();if _bfgd !=nil {return _bfgd ;};if _fgg !=0{_afda .IsMMREncoded =true ;};return nil ;};type GenericRegion struct{_gcf _fb .StreamReader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;UseExtTemplates bool ;IsTPGDon bool ;GBTemplate byte ;IsMMREncoded bool ;UseMMR bool ;GBAtX []int8 ;GBAtY []int8 ;GBAtOverride []bool ;_eea bool ;Bitmap *_gg .Bitmap ;_ebf *_fa .Decoder ;_dfag *_fa .DecoderStats ;_eec *_cg .Decoder ;};func (_cgga *Header )Encode (w _fb .BinaryWriter )(_abfg int ,_badca error ){const _dbca ="\u0048\u0065\u0061d\u0065\u0072\u002e\u0057\u0072\u0069\u0074\u0065";var _ebbf _fb .BinaryWriter ;_be .Log .Trace ("\u005b\u0053\u0045G\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045\u0052\u005d[\u0045\u004e\u0043\u004f\u0044\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _badca !=nil {_be .Log .Trace ("[\u0053\u0045\u0047\u004d\u0045\u004eT\u002d\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0045\u004e\u0043\u004f\u0044E\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020%\u0076",_badca );}else {_be .Log .Trace ("\u005b\u0053\u0045\u0047ME\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0025\u0076",_cgga );_be .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045N\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u005b\u0045\u004e\u0043O\u0044\u0045\u005d\u0020\u0046\u0069\u006ei\u0073\u0068\u0065\u0064");};}();w .FinishByte ();if _cgga .SegmentData !=nil {_bbbea ,_ecdg :=_cgga .SegmentData .(SegmentEncoder );if !_ecdg {return 0,_de .Errorf (_dbca ,"\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0064\u006f\u0065s\u006e\u0027\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074 \u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0045\u006e\u0063\u006f\u0064er\u0020\u0069\u006e\u0074\u0065\u0072\u0066\u0061\u0063\u0065",_cgga .SegmentData );};_ebbf =_fb .BufferedMSB ();_abfg ,_badca =_bbbea .Encode (_ebbf );if _badca !=nil {return 0,_de .Wrap (_badca ,_dbca ,"");};_cgga .SegmentDataLength =uint64 (_abfg );};if _cgga .pageSize ()==4{_cgga .PageAssociationFieldSize =true ;};var _bcgb int ;_bcgb ,_badca =_cgga .writeSegmentNumber (w );if _badca !=nil {return 0,_de .Wrap (_badca ,_dbca ,"");};_abfg +=_bcgb ;if _badca =_cgga .writeFlags (w );_badca !=nil {return _abfg ,_de .Wrap (_badca ,_dbca ,"");};_abfg ++;_bcgb ,_badca =_cgga .writeReferredToCount (w );if _badca !=nil {return 0,_de .Wrap (_badca ,_dbca ,"");};_abfg +=_bcgb ;_bcgb ,_badca =_cgga .writeReferredToSegments (w );if _badca !=nil {return 0,_de .Wrap (_badca ,_dbca ,"");};_abfg +=_bcgb ;_bcgb ,_badca =_cgga .writeSegmentPageAssociation (w );if _badca !=nil {return 0,_de .Wrap (_badca ,_dbca ,"");};_abfg +=_bcgb ;_bcgb ,_badca =_cgga .writeSegmentDataLength (w );if _badca !=nil {return 0,_de .Wrap (_badca ,_dbca ,"");};_abfg +=_bcgb ;_cgga .HeaderLength =int64 (_abfg )-int64 (_cgga .SegmentDataLength );if _ebbf !=nil {if _ ,_badca =w .Write (_ebbf .Data ());_badca !=nil {return _abfg ,_de .Wrap (_badca ,_dbca ,"\u0077r\u0069t\u0065\u0020\u0073\u0065\u0067m\u0065\u006et\u0020\u0064\u0061\u0074\u0061");};};return _abfg ,nil ;};func (_aeea *TextRegion )setParameters (_bdcf *_fa .Decoder ,_egee ,_gab bool ,_effc ,_fgfea uint32 ,_dcdbc uint32 ,_bafa int8 ,_cccf uint32 ,_ebag int8 ,_baadg _gg .CombinationOperator ,_cdfaf int8 ,_dfgd int16 ,_adfcf ,_gbagc ,_ecadc ,_daadag ,_cgae ,_gddg ,_gdabg ,_daae ,_baaa ,_gbgf int8 ,_bceeg ,_ebbe []int8 ,_fcddea []*_gg .Bitmap ,_ebdf int8 ){_aeea ._baae =_bdcf ;_aeea .IsHuffmanEncoded =_egee ;_aeea .UseRefinement =_gab ;_aeea .RegionInfo .BitmapWidth =_effc ;_aeea .RegionInfo .BitmapHeight =_fgfea ;_aeea .NumberOfSymbolInstances =_dcdbc ;_aeea .SbStrips =_bafa ;_aeea .NumberOfSymbols =_cccf ;_aeea .DefaultPixel =_ebag ;_aeea .CombinationOperator =_baadg ;_aeea .IsTransposed =_cdfaf ;_aeea .ReferenceCorner =_dfgd ;_aeea .SbDsOffset =_adfcf ;_aeea .SbHuffFS =_gbagc ;_aeea .SbHuffDS =_ecadc ;_aeea .SbHuffDT =_daadag ;_aeea .SbHuffRDWidth =_cgae ;_aeea .SbHuffRDHeight =_gddg ;_aeea .SbHuffRSize =_baaa ;_aeea .SbHuffRDX =_gdabg ;_aeea .SbHuffRDY =_daae ;_aeea .SbrTemplate =_gbgf ;_aeea .SbrATX =_bceeg ;_aeea .SbrATY =_ebbe ;_aeea .Symbols =_fcddea ;_aeea ._gffc =_ebdf ;};func (_ggdbg *PatternDictionary )checkInput ()error {if _ggdbg .HdpHeight < 1||_ggdbg .HdpWidth < 1{return _cd .New ("in\u0076\u0061l\u0069\u0064\u0020\u0048\u0065\u0061\u0064\u0065\u0072 \u0056\u0061\u006c\u0075\u0065\u003a\u0020\u0057\u0069\u0064\u0074\u0068\u002f\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020g\u0072e\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020z\u0065\u0072o");};if _ggdbg .IsMMREncoded {if _ggdbg .HDTemplate !=0{_be .Log .Debug ("\u0076\u0061\u0072\u0069\u0061\u0062\u006c\u0065\u0020\u0048\u0044\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e \u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030");};};return nil ;};func _aaf (_caa _fb .StreamReader ,_cgaf *Header )*GenericRefinementRegion {return &GenericRefinementRegion {_dg :_caa ,RegionInfo :NewRegionSegment (_caa ),_fe :_cgaf ,_eg :&template0 {},_fc :&template1 {}};};func (_cgba *TableSegment )StreamReader ()_fb .StreamReader {return _cgba ._fffb };func (_bgg *RegionSegment )String ()string {_becd :=&_ae .Builder {};_becd .WriteString ("\u0009[\u0052E\u0047\u0049\u004f\u004e\u0020S\u0045\u0047M\u0045\u004e\u0054\u005d\u000a");_becd .WriteString (_e .Sprintf ("\t\u0009\u002d\u0020\u0042\u0069\u0074m\u0061\u0070\u0020\u0028\u0077\u0069d\u0074\u0068\u002c\u0020\u0068\u0065\u0069g\u0068\u0074\u0029\u0020\u005b\u0025\u0064\u0078\u0025\u0064]\u000a",_bgg .BitmapWidth ,_bgg .BitmapHeight ));_becd .WriteString (_e .Sprintf ("\u0009\u0009\u002d\u0020L\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0028\u0078,\u0079)\u003a\u0020\u005b\u0025\u0064\u002c\u0025d\u005d\u000a",_bgg .XLocation ,_bgg .YLocation ));_becd .WriteString (_e .Sprintf ("\t\u0009\u002d\u0020\u0043\u006f\u006db\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070e\u0072\u0061\u0074o\u0072:\u0020\u0025\u0073",_bgg .CombinaionOperator ));return _becd .String ();};var _ _bc .BasicTabler =&TableSegment {};func (_aggc *GenericRegion )computeSegmentDataStructure ()error {_aggc .DataOffset =_aggc ._gcf .StreamPosition ();_aggc .DataHeaderLength =_aggc .DataOffset -_aggc .DataHeaderOffset ;_aggc .DataLength =int64 (_aggc ._gcf .Length ())-_aggc .DataHeaderLength ;return nil ;};type Pager interface{GetSegment (int )(*Header ,error );GetBitmap ()(*_gg .Bitmap ,error );};func (_eacd *GenericRefinementRegion )updateOverride ()error {if _eacd .GrAtX ==nil ||_eacd .GrAtY ==nil {return _cd .New ("\u0041\u0054\u0020\u0070\u0069\u0078\u0065\u006c\u0073\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");};if len (_eacd .GrAtX )!=len (_eacd .GrAtY ){return _cd .New ("A\u0054\u0020\u0070\u0069xe\u006c \u0069\u006e\u0063\u006f\u006es\u0069\u0073\u0074\u0065\u006e\u0074");};_eacd ._bdc =make ([]bool ,len (_eacd .GrAtX ));switch _eacd .TemplateID {case 0:if _eacd .GrAtX [0]!=-1&&_eacd .GrAtY [0]!=-1{_eacd ._bdc [0]=true ;_eacd ._bdf =true ;};if _eacd .GrAtX [1]!=-1&&_eacd .GrAtY [1]!=-1{_eacd ._bdc [1]=true ;_eacd ._bdf =true ;};case 1:_eacd ._bdf =false ;};return nil ;};func (_eded *PageInformationSegment )CombinationOperatorOverrideAllowed ()bool {return _eded ._ege };func (_cgeg *PatternDictionary )computeSegmentDataStructure ()error {_cgeg .DataOffset =_cgeg ._abc .StreamPosition ();_cgeg .DataHeaderLength =_cgeg .DataOffset -_cgeg .DataHeaderOffset ;_cgeg .DataLength =int64 (_cgeg ._abc .Length ())-_cgeg .DataHeaderLength ;return nil ;};type TableSegment struct{_fffb _fb .StreamReader ;_dced int32 ;_dffc int32 ;_ccbff int32 ;_ffagb int32 ;_gebd int32 ;};func (_ccba *SymbolDictionary )encodeRefinementATFlags (_cdgc _fb .BinaryWriter )(_gccg int ,_faec error ){const _dgfc ="\u0065\u006e\u0063od\u0065\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0041\u0054\u0046\u006c\u0061\u0067\u0073";if !_ccba .UseRefinementAggregation ||_ccba .SdrTemplate !=0{return 0,nil ;};for _dbdf :=0;_dbdf < 2;_dbdf ++{if _faec =_cdgc .WriteByte (byte (_ccba .SdrATX [_dbdf ]));_faec !=nil {return _gccg ,_de .Wrapf (_faec ,_dgfc ,"\u0053\u0064\u0072\u0041\u0054\u0058\u005b\u0025\u0064\u005d",_dbdf );};_gccg ++;if _faec =_cdgc .WriteByte (byte (_ccba .SdrATY [_dbdf ]));_faec !=nil {return _gccg ,_de .Wrapf (_faec ,_dgfc ,"\u0053\u0064\u0072\u0041\u0054\u0059\u005b\u0025\u0064\u005d",_dbdf );};_gccg ++;};return _gccg ,nil ;};type RegionSegment struct{_dfg _fb .StreamReader ;BitmapWidth uint32 ;BitmapHeight uint32 ;XLocation uint32 ;YLocation uint32 ;CombinaionOperator _gg .CombinationOperator ;};func (_cbde *PageInformationSegment )DefaultPixelValue ()uint8 {return _cbde ._bbbdc };func (_ggbec *TextRegion )decodeIb (_cddf ,_efcba int64 )(*_gg .Bitmap ,error ){const _baaf ="\u0064\u0065\u0063\u006f\u0064\u0065\u0049\u0062";var (_dbac error ;_cddc *_gg .Bitmap ;);if _cddf ==0{if int (_efcba )> len (_ggbec .Symbols )-1{return nil ,_de .Error (_baaf ,"\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0049\u0042\u0020\u0062\u0069\u0074\u006d\u0061\u0070\u002e\u0020\u0069\u006e\u0064\u0065x\u0020\u006f\u0075\u0074\u0020o\u0066\u0020r\u0061\u006e\u0067\u0065");};return _ggbec .Symbols [int (_efcba )],nil ;};var _gdbg ,_fdde ,_beb ,_bdcd int64 ;_gdbg ,_dbac =_ggbec .decodeRdw ();if _dbac !=nil {return nil ,_de .Wrap (_dbac ,_baaf ,"");};_fdde ,_dbac =_ggbec .decodeRdh ();if _dbac !=nil {return nil ,_de .Wrap (_dbac ,_baaf ,"");};_beb ,_dbac =_ggbec .decodeRdx ();if _dbac !=nil {return nil ,_de .Wrap (_dbac ,_baaf ,"");};_bdcd ,_dbac =_ggbec .decodeRdy ();if _dbac !=nil {return nil ,_de .Wrap (_dbac ,_baaf ,"");};if _ggbec .IsHuffmanEncoded {if _ ,_dbac =_ggbec .decodeSymInRefSize ();_dbac !=nil {return nil ,_de .Wrap (_dbac ,_baaf ,"");};_ggbec ._afde .Align ();};_affe :=_ggbec .Symbols [_efcba ];_agga :=uint32 (_affe .Width );_dacc :=uint32 (_affe .Height );_fgd :=int32 (uint32 (_gdbg )>>1)+int32 (_beb );_fcbd :=int32 (uint32 (_fdde )>>1)+int32 (_bdcd );if _ggbec ._fbbf ==nil {_ggbec ._fbbf =_aaf (_ggbec ._afde ,nil );};_ggbec ._fbbf .setParameters (_ggbec ._cfadbf ,_ggbec ._baae ,_ggbec .SbrTemplate ,_agga +uint32 (_gdbg ),_dacc +uint32 (_fdde ),_affe ,_fgd ,_fcbd ,false ,_ggbec .SbrATX ,_ggbec .SbrATY );_cddc ,_dbac =_ggbec ._fbbf .GetRegionBitmap ();if _dbac !=nil {return nil ,_de .Wrap (_dbac ,_baaf ,"\u0067\u0072\u0066");};if _ggbec .IsHuffmanEncoded {_ggbec ._afde .Align ();};return _cddc ,nil ;};func (_baec *GenericRegion )setParametersMMR (_gda bool ,_cgea ,_gde int64 ,_edd ,_cdeg uint32 ,_eabg byte ,_facb ,_ggfc bool ,_dafb ,_cgdc []int8 ){_baec .DataOffset =_cgea ;_baec .DataLength =_gde ;_baec .RegionSegment =&RegionSegment {};_baec .RegionSegment .BitmapHeight =_edd ;_baec .RegionSegment .BitmapWidth =_cdeg ;_baec .GBTemplate =_eabg ;_baec .IsMMREncoded =_gda ;_baec .IsTPGDon =_facb ;_baec .GBAtX =_dafb ;_baec .GBAtY =_cgdc ;};func (_afb *GenericRegion )setParametersWithAt (_cegf bool ,_deg byte ,_fgbg ,_eeaa bool ,_dfcg ,_efgdg []int8 ,_ccgc ,_ccab uint32 ,_cdda *_fa .DecoderStats ,_gge *_fa .Decoder ){_afb .IsMMREncoded =_cegf ;_afb .GBTemplate =_deg ;_afb .IsTPGDon =_fgbg ;_afb .GBAtX =_dfcg ;_afb .GBAtY =_efgdg ;_afb .RegionSegment .BitmapHeight =_ccab ;_afb .RegionSegment .BitmapWidth =_ccgc ;_afb ._eec =nil ;_afb .Bitmap =nil ;if _cdda !=nil {_afb ._dfag =_cdda ;};if _gge !=nil {_afb ._ebf =_gge ;};_be .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049O\u004e\u005d\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073\u0020\u0053\u0044\u0041t\u003a\u0020\u0025\u0073",_afb );};func (_bbdc *SymbolDictionary )parseHeader ()(_bege error ){_be .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");defer func (){if _bege !=nil {_be .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u0020\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u005b\u0050\u0041\u0052SE\u002d\u0048\u0045A\u0044\u0045R\u005d\u0020\u0066\u0061\u0069\u006ce\u0064\u002e \u0025\u0076",_bege );}else {_be .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");};}();if _bege =_bbdc .readRegionFlags ();_bege !=nil {return _bege ;};if _bege =_bbdc .setAtPixels ();_bege !=nil {return _bege ;};if _bege =_bbdc .setRefinementAtPixels ();_bege !=nil {return _bege ;};if _bege =_bbdc .readNumberOfExportedSymbols ();_bege !=nil {return _bege ;};if _bege =_bbdc .readNumberOfNewSymbols ();_bege !=nil {return _bege ;};if _bege =_bbdc .setInSyms ();_bege !=nil {return _bege ;};if _bbdc ._gbfe {_fbfa :=_bbdc .Header .RTSegments ;for _gfadeg :=len (_fbfa )-1;_gfadeg >=0;_gfadeg --{if _fbfa [_gfadeg ].Type ==0{_bagd ,_eabe :=_fbfa [_gfadeg ].SegmentData .(*SymbolDictionary );if !_eabe {_bege =_e .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074:\u0020\u0025\u0076\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020S\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_fbfa [_gfadeg ]);return _bege ;};if _bagd ._gbfe {_bbdc .setRetainedCodingContexts (_bagd );};break ;};};};if _bege =_bbdc .checkInput ();_bege !=nil {return _bege ;};return nil ;};func (_aead *SymbolDictionary )setInSyms ()error {if _aead .Header .RTSegments !=nil {return _aead .retrieveImportSymbols ();};_aead ._edeb =make ([]*_gg .Bitmap ,0);return nil ;};func (_bded *TextRegion )decodeCurrentT ()(int64 ,error ){if _bded .SbStrips !=1{if _bded .IsHuffmanEncoded {_gbde ,_gcfg :=_bded ._afde .ReadBits (byte (_bded .LogSBStrips ));return int64 (_gbde ),_gcfg ;};_gfcfe ,_fcddc :=_bded ._baae .DecodeInt (_bded ._dedb );if _fcddc !=nil {return 0,_fcddc ;};return int64 (_gfcfe ),nil ;};return 0,nil ;};func (_bfdb *SymbolDictionary )setSymbolsArray ()error {if _bfdb ._edeb ==nil {if _gfcfca :=_bfdb .retrieveImportSymbols ();_gfcfca !=nil {return _gfcfca ;};};if _bfdb ._fdga ==nil {_bfdb ._fdga =append (_bfdb ._fdga ,_bfdb ._edeb ...);};return nil ;};func (_fdda *TextRegion )decodeDfs ()(int64 ,error ){if _fdda .IsHuffmanEncoded {if _fdda .SbHuffFS ==3{if _fdda ._ddgc ==nil {var _cdgg error ;_fdda ._ddgc ,_cdgg =_fdda .getUserTable (0);if _cdgg !=nil {return 0,_cdgg ;};};return _fdda ._ddgc .Decode (_fdda ._afde );};_agcc ,_cbeg :=_bc .GetStandardTable (6+int (_fdda .SbHuffFS ));if _cbeg !=nil {return 0,_cbeg ;};return _agcc .Decode (_fdda ._afde );};_becdg ,_cgfa :=_fdda ._baae .DecodeInt (_fdda ._eeag );if _cgfa !=nil {return 0,_cgfa ;};return int64 (_becdg ),nil ;};func (_ggfba *TextRegion )decodeID ()(int64 ,error ){if _ggfba .IsHuffmanEncoded {if _ggfba ._ddgeb ==nil {_agcee ,_dgbdb :=_ggfba ._afde .ReadBits (byte (_ggfba ._gffc ));return int64 (_agcee ),_dgbdb ;};return _ggfba ._ddgeb .Decode (_ggfba ._afde );};return _ggfba ._baae .DecodeIAID (uint64 (_ggfba ._gffc ),_ggfba ._gdcd );};func (_afbg *Header )readSegmentPageAssociation (_cbad Documenter ,_aedg _fb .StreamReader ,_bafg uint64 ,_dbbg ...int )(_fbf error ){const _gfd ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074P\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061t\u0069\u006f\u006e";if !_afbg .PageAssociationFieldSize {_dgd ,_add :=_aedg .ReadBits (8);if _add !=nil {return _de .Wrap (_add ,_gfd ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_afbg .PageAssociation =int (_dgd &0xFF);}else {_gdea ,_ebe :=_aedg .ReadBits (32);if _ebe !=nil {return _de .Wrap (_ebe ,_gfd ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_afbg .PageAssociation =int (_gdea &_f .MaxInt32 );};if _bafg ==0{return nil ;};if _afbg .PageAssociation !=0{_cegg ,_bddg :=_cbad .GetPage (_afbg .PageAssociation );if _bddg !=nil {return _de .Wrap (_bddg ,_gfd ,"\u0061s\u0073\u006f\u0063\u0069a\u0074\u0065\u0064\u0020\u0070a\u0067e\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006ed");};var _geggf int ;for _dcg :=uint64 (0);_dcg < _bafg ;_dcg ++{_geggf =_dbbg [_dcg ];_afbg .RTSegments [_dcg ],_bddg =_cegg .GetSegment (_geggf );if _bddg !=nil {var _gef error ;_afbg .RTSegments [_dcg ],_gef =_cbad .GetGlobalSegment (_geggf );if _gef !=nil {return _de .Wrapf (_bddg ,_gfd ,"\u0072\u0065\u0066\u0065\u0072\u0065n\u0063\u0065\u0020s\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064\u0020\u0061\u0074\u0020pa\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0072\u0020\u0069\u006e\u0020\u0067\u006c\u006f\u0062\u0061\u006c\u0073",_afbg .PageAssociation );};};};return nil ;};for _gggb :=uint64 (0);_gggb < _bafg ;_gggb ++{_afbg .RTSegments [_gggb ],_fbf =_cbad .GetGlobalSegment (_dbbg [_gggb ]);if _fbf !=nil {return _de .Wrapf (_fbf ,_gfd ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u003a\u0020\u0027\u0025d\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064",_dbbg [_gggb ]);};};return nil ;};func (_abe *GenericRegion )GetRegionBitmap ()(_ccc *_gg .Bitmap ,_gcge error ){if _abe .Bitmap !=nil {return _abe .Bitmap ,nil ;};if _abe .IsMMREncoded {if _abe ._eec ==nil {_abe ._eec ,_gcge =_cg .New (_abe ._gcf ,int (_abe .RegionSegment .BitmapWidth ),int (_abe .RegionSegment .BitmapHeight ),_abe .DataOffset ,_abe .DataLength );if _gcge !=nil {return nil ,_gcge ;};};_abe .Bitmap ,_gcge =_abe ._eec .UncompressMMR ();return _abe .Bitmap ,_gcge ;};if _gcge =_abe .updateOverrideFlags ();_gcge !=nil {return nil ,_gcge ;};var _cfaf int ;if _abe ._ebf ==nil {_abe ._ebf ,_gcge =_fa .New (_abe ._gcf );if _gcge !=nil {return nil ,_gcge ;};};if _abe ._dfag ==nil {_abe ._dfag =_fa .NewStats (65536,1);};_abe .Bitmap =_gg .New (int (_abe .RegionSegment .BitmapWidth ),int (_abe .RegionSegment .BitmapHeight ));_efgd :=int (uint32 (_abe .Bitmap .Width +7)&(^uint32 (7)));for _gegf :=0;_gegf < _abe .Bitmap .Height ;_gegf ++{if _abe .IsTPGDon {var _daa int ;_daa ,_gcge =_abe .decodeSLTP ();if _gcge !=nil {return nil ,_gcge ;};_cfaf ^=_daa ;};if _cfaf ==1{if _gegf > 0{if _gcge =_abe .copyLineAbove (_gegf );_gcge !=nil {return nil ,_gcge ;};};}else {if _gcge =_abe .decodeLine (_gegf ,_abe .Bitmap .Width ,_efgd );_gcge !=nil {return nil ,_gcge ;};};};return _abe .Bitmap ,nil ;};func (_cfd *Header )CleanSegmentData (){if _cfd .SegmentData !=nil {_cfd .SegmentData =nil ;};};func (_acbde *TextRegion )readRegionFlags ()error {var (_begdf int ;_baeb uint64 ;_cdaf error ;);_begdf ,_cdaf =_acbde ._afde .ReadBit ();if _cdaf !=nil {return _cdaf ;};_acbde .SbrTemplate =int8 (_begdf );_baeb ,_cdaf =_acbde ._afde .ReadBits (5);if _cdaf !=nil {return _cdaf ;};_acbde .SbDsOffset =int8 (_baeb );if _acbde .SbDsOffset > 0x0f{_acbde .SbDsOffset -=0x20;};_begdf ,_cdaf =_acbde ._afde .ReadBit ();if _cdaf !=nil {return _cdaf ;};_acbde .DefaultPixel =int8 (_begdf );_baeb ,_cdaf =_acbde ._afde .ReadBits (2);if _cdaf !=nil {return _cdaf ;};_acbde .CombinationOperator =_gg .CombinationOperator (int (_baeb )&0x3);_begdf ,_cdaf =_acbde ._afde .ReadBit ();if _cdaf !=nil {return _cdaf ;};_acbde .IsTransposed =int8 (_begdf );_baeb ,_cdaf =_acbde ._afde .ReadBits (2);if _cdaf !=nil {return _cdaf ;};_acbde .ReferenceCorner =int16 (_baeb )&0x3;_baeb ,_cdaf =_acbde ._afde .ReadBits (2);if _cdaf !=nil {return _cdaf ;};_acbde .LogSBStrips =int16 (_baeb )&0x3;_acbde .SbStrips =1<<uint (_acbde .LogSBStrips );_begdf ,_cdaf =_acbde ._afde .ReadBit ();if _cdaf !=nil {return _cdaf ;};if _begdf ==1{_acbde .UseRefinement =true ;};_begdf ,_cdaf =_acbde ._afde .ReadBit ();if _cdaf !=nil {return _cdaf ;};if _begdf ==1{_acbde .IsHuffmanEncoded =true ;};return nil ;};func (_abd *PageInformationSegment )Size ()int {return 19};func (_dadf *Header )readNumberOfReferredToSegments (_acdg _fb .StreamReader )(uint64 ,error ){const _fabg ="\u0072\u0065\u0061\u0064\u004e\u0075\u006d\u0062\u0065\u0072O\u0066\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";_aag ,_beg :=_acdg .ReadBits (3);if _beg !=nil {return 0,_de .Wrap (_beg ,_fabg ,"\u0063\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0072\u0074\u0073");};_aag &=0xf;var _gbfd []byte ;if _aag <=4{_gbfd =make ([]byte ,5);for _bbbd :=0;_bbbd <=4;_bbbd ++{_fcff ,_agcea :=_acdg .ReadBit ();if _agcea !=nil {return 0,_de .Wrap (_agcea ,_fabg ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_gbfd [_bbbd ]=byte (_fcff );};}else {_aag ,_beg =_acdg .ReadBits (29);if _beg !=nil {return 0,_beg ;};_aag &=_f .MaxInt32 ;_dcf :=(_aag +8)>>3;_dcf <<=3;_gbfd =make ([]byte ,_dcf );var _dfcfd uint64 ;for _dfcfd =0;_dfcfd < _dcf ;_dfcfd ++{_cafa ,_afab :=_acdg .ReadBit ();if _afab !=nil {return 0,_de .Wrap (_afab ,_fabg ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_gbfd [_dfcfd ]=byte (_cafa );};};return _aag ,nil ;};type EndOfStripe struct{_bce _fb .StreamReader ;_cgd int ;};type Type int ;func (_aacgf *TextRegion )getSymbols ()error {if _aacgf .Header .RTSegments !=nil {return _aacgf .initSymbols ();};return nil ;};func (_gced *GenericRegion )overrideAtTemplate2 (_dadd ,_adfe ,_aaba ,_ddge ,_fgb int )int {_dadd &=0x3FB;if _gced .GBAtY [0]==0&&_gced .GBAtX [0]>=-int8 (_fgb ){_dadd |=(_ddge >>uint (7-(int8 (_fgb )+_gced .GBAtX [0]))&0x1)<<2;}else {_dadd |=int (_gced .getPixel (_adfe +int (_gced .GBAtX [0]),_aaba +int (_gced .GBAtY [0])))<<2;};return _dadd ;};func (_deda *TextRegion )decodeSymbolInstances ()error {_eegge ,_dfad :=_deda .decodeStripT ();if _dfad !=nil {return _dfad ;};var (_beda int64 ;_cdac uint32 ;);for _cdac < _deda .NumberOfSymbolInstances {_ebgb ,_bdfb :=_deda .decodeDT ();if _bdfb !=nil {return _bdfb ;};_eegge +=_ebgb ;var _bgec int64 ;_acdgg :=true ;_deda ._ddac =0;for {if _acdgg {_bgec ,_bdfb =_deda .decodeDfs ();if _bdfb !=nil {return _bdfb ;};_beda +=_bgec ;_deda ._ddac =_beda ;_acdgg =false ;}else {_aecdc ,_fced :=_deda .decodeIds ();if _gf .Is (_fced ,_d .ErrOOB ){break ;};if _fced !=nil {return _fced ;};if _cdac >=_deda .NumberOfSymbolInstances {break ;};_deda ._ddac +=_aecdc +int64 (_deda .SbDsOffset );};_cfba ,_bfeb :=_deda .decodeCurrentT ();if _bfeb !=nil {return _bfeb ;};_gcde :=_eegge +_cfba ;_fbeae ,_bfeb :=_deda .decodeID ();if _bfeb !=nil {return _bfeb ;};_gcegd ,_bfeb :=_deda .decodeRI ();if _bfeb !=nil {return _bfeb ;};_bgcga ,_bfeb :=_deda .decodeIb (_gcegd ,_fbeae );if _bfeb !=nil {return _bfeb ;};if _bfeb =_deda .blit (_bgcga ,_gcde );_bfeb !=nil {return _bfeb ;};_cdac ++;};};return nil ;};func (_dadfa *TextRegion )initSymbols ()error {const _fbbbf ="i\u006e\u0069\u0074\u0053\u0079\u006d\u0062\u006f\u006c\u0073";for _ ,_cabe :=range _dadfa .Header .RTSegments {if _cabe ==nil {return _de .Error (_fbbbf ,"\u006e\u0069\u006c\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020pr\u006f\u0076\u0069\u0064\u0065\u0064 \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0074\u0065\u0078\u0074\u0020\u0072\u0065g\u0069\u006f\u006e\u0020\u0053\u0079\u006d\u0062o\u006c\u0073");};if _cabe .Type ==0{_ffbdb ,_aegda :=_cabe .GetSegmentData ();if _aegda !=nil {return _de .Wrap (_aegda ,_fbbbf ,"");};_fdfa ,_gffga :=_ffbdb .(*SymbolDictionary );if !_gffga {return _de .Error (_fbbbf ,"\u0072e\u0066\u0065r\u0072\u0065\u0064 \u0054\u006f\u0020\u0053\u0065\u0067\u006de\u006e\u0074\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_fdfa ._gffd =_dadfa ._gdcd ;_dcbc ,_aegda :=_fdfa .GetDictionary ();if _aegda !=nil {return _de .Wrap (_aegda ,_fbbbf ,"");};_dadfa .Symbols =append (_dadfa .Symbols ,_dcbc ...);};};_dadfa .NumberOfSymbols =uint32 (len (_dadfa .Symbols ));return nil ;};func (_gecg *TextRegion )encodeSymbols (_fcag _fb .BinaryWriter )(_ggag int ,_dcca error ){const _eede ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";_dabd :=make ([]byte ,4);_ce .BigEndian .PutUint32 (_dabd ,_gecg .NumberOfSymbols );if _ggag ,_dcca =_fcag .Write (_dabd );_dcca !=nil {return _ggag ,_de .Wrap (_dcca ,_eede ,"\u004e\u0075\u006dbe\u0072\u004f\u0066\u0053\u0079\u006d\u0062\u006f\u006c\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073");};_deef ,_dcca :=_gg .NewClassedPoints (_gecg ._bgdb ,_gecg ._bdba );if _dcca !=nil {return 0,_de .Wrap (_dcca ,_eede ,"");};var _ecdd ,_acfg int ;_acag :=_cea .New ();_acag .Init ();if _dcca =_acag .EncodeInteger (_cea .IADT ,0);_dcca !=nil {return _ggag ,_de .Wrap (_dcca ,_eede ,"\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0020\u0044\u0054");};_cegfd ,_dcca :=_deef .GroupByY ();if _dcca !=nil {return 0,_de .Wrap (_dcca ,_eede ,"");};for _ ,_efce :=range _cegfd {_cecbd :=int (_efce .YAtIndex (0));_afgbf :=_cecbd -_ecdd ;if _dcca =_acag .EncodeInteger (_cea .IADT ,_afgbf );_dcca !=nil {return _ggag ,_de .Wrap (_dcca ,_eede ,"");};var _fbdg int ;for _ggdc ,_abcfb :=range _efce .IntSlice {switch _ggdc {case 0:_bdedg :=int (_efce .XAtIndex (_ggdc ))-_acfg ;if _dcca =_acag .EncodeInteger (_cea .IAFS ,_bdedg );_dcca !=nil {return _ggag ,_de .Wrap (_dcca ,_eede ,"");};_acfg +=_bdedg ;_fbdg =_acfg ;default:_cabd :=int (_efce .XAtIndex (_ggdc ))-_fbdg ;if _dcca =_acag .EncodeInteger (_cea .IADS ,_cabd );_dcca !=nil {return _ggag ,_de .Wrap (_dcca ,_eede ,"");};_fbdg +=_cabd ;};_fgagd ,_deaf :=_gecg ._dfde .Get (_abcfb );if _deaf !=nil {return _ggag ,_de .Wrap (_deaf ,_eede ,"");};_gebdd ,_ggfbg :=_gecg ._badb [_fgagd ];if !_ggfbg {_gebdd ,_ggfbg =_gecg ._gada [_fgagd ];if !_ggfbg {return _ggag ,_de .Errorf (_eede ,"\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027\u0025d\u0027\u0020\u0069s\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064 \u0069\u006e\u0020\u0067\u006cob\u0061\u006c\u0020\u0061\u006e\u0064\u0020\u006c\u006f\u0063\u0061\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020\u006d\u0061\u0070",_fgagd );};};if _deaf =_acag .EncodeIAID (_gecg ._gffe ,_gebdd );_deaf !=nil {return _ggag ,_de .Wrap (_deaf ,_eede ,"");};};if _dcca =_acag .EncodeOOB (_cea .IADS );_dcca !=nil {return _ggag ,_de .Wrap (_dcca ,_eede ,"");};};_acag .Final ();_ebdeg ,_dcca :=_acag .WriteTo (_fcag );if _dcca !=nil {return _ggag ,_de .Wrap (_dcca ,_eede ,"");};_ggag +=int (_ebdeg );return _ggag ,nil ;};func (_abac *PatternDictionary )readTemplate ()error {_gdcc ,_faed :=_abac ._abc .ReadBits (2);if _faed !=nil {return _faed ;};_abac .HDTemplate =byte (_gdcc );return nil ;};func (_fcc *GenericRefinementRegion )parseHeader ()(_ggd error ){_be .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0048e\u0061\u0064e\u0072\u002e\u002e\u002e");_dgc :=_a .Now ();defer func (){if _ggd ==nil {_be .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045G\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020h\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0069\u006e\u0069\u0073\u0068id\u0020\u0069\u006e\u003a\u0020\u0025\u0064\u0020\u006e\u0073",_a .Since (_dgc ).Nanoseconds ());}else {_be .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0068\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0073",_ggd );};}();if _ggd =_fcc .RegionInfo .parseHeader ();_ggd !=nil {return _ggd ;};_ ,_ggd =_fcc ._dg .ReadBits (6);if _ggd !=nil {return _ggd ;};_fcc .IsTPGROn ,_ggd =_fcc ._dg .ReadBool ();if _ggd !=nil {return _ggd ;};var _bbg int ;_bbg ,_ggd =_fcc ._dg .ReadBit ();if _ggd !=nil {return _ggd ;};_fcc .TemplateID =int8 (_bbg );switch _fcc .TemplateID {case 0:_fcc .Template =_fcc ._eg ;if _ggd =_fcc .readAtPixels ();_ggd !=nil {return ;};case 1:_fcc .Template =_fcc ._fc ;};return nil ;};func (_dcbb *HalftoneRegion )computeSegmentDataStructure ()error {_dcbb .DataOffset =_dcbb ._fdgg .StreamPosition ();_dcbb .DataHeaderLength =_dcbb .DataOffset -_dcbb .DataHeaderOffset ;_dcbb .DataLength =int64 (_dcbb ._fdgg .Length ())-_dcbb .DataHeaderLength ;return nil ;};type SymbolDictionary struct{_defc _fb .StreamReader ;SdrTemplate int8 ;SdTemplate int8 ;_ggde bool ;_gbfe bool ;SdHuffAggInstanceSelection bool ;SdHuffBMSizeSelection int8 ;SdHuffDecodeWidthSelection int8 ;SdHuffDecodeHeightSelection int8 ;UseRefinementAggregation bool ;IsHuffmanEncoded bool ;SdATX []int8 ;SdATY []int8 ;SdrATX []int8 ;SdrATY []int8 ;NumberOfExportedSymbols uint32 ;NumberOfNewSymbols uint32 ;Header *Header ;_gdad uint32 ;_edeb []*_gg .Bitmap ;_ffdd uint32 ;_cdce []*_gg .Bitmap ;_cedf _bc .Tabler ;_ccbb _bc .Tabler ;_gfca _bc .Tabler ;_gccf _bc .Tabler ;_gbba []*_gg .Bitmap ;_fdga []*_gg .Bitmap ;_fafd *_fa .Decoder ;_bfgdc *TextRegion ;_cacc *GenericRegion ;_ccbf *GenericRefinementRegion ;_cfdd *_fa .DecoderStats ;_efec *_fa .DecoderStats ;_ecbf *_fa .DecoderStats ;_bddb *_fa .DecoderStats ;_cffe *_fa .DecoderStats ;_dgbb *_fa .DecoderStats ;_ggbg *_fa .DecoderStats ;_dfdc *_fa .DecoderStats ;_gffd *_fa .DecoderStats ;_fdc int8 ;_dde *_gg .Bitmaps ;_feeg []int ;_ffee map[int ]int ;_cgac bool ;};func (_ecba *SymbolDictionary )String ()string {_abaa :=&_ae .Builder {};_abaa .WriteString ("\n\u005b\u0053\u0059\u004dBO\u004c-\u0044\u0049\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u000a");_abaa .WriteString (_e .Sprintf ("\u0009-\u0020S\u0064\u0072\u0054\u0065\u006dp\u006c\u0061t\u0065\u0020\u0025\u0076\u000a",_ecba .SdrTemplate ));_abaa .WriteString (_e .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0025\u0076\u000a",_ecba .SdTemplate ));_abaa .WriteString (_e .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006eg\u0043\u006f\u006e\u0074\u0065\u0078\u0074R\u0065\u0074\u0061\u0069\u006e\u0065\u0064\u0020\u0025\u0076\u000a",_ecba ._ggde ));_abaa .WriteString (_e .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074\u0065\u0078\u0074\u0055\u0073\u0065\u0064 \u0025\u0076\u000a",_ecba ._gbfe ));_abaa .WriteString (_e .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_ecba .SdHuffAggInstanceSelection ));_abaa .WriteString (_e .Sprintf ("\u0009\u002d\u0020\u0053d\u0048\u0075\u0066\u0066\u0042\u004d\u0053\u0069\u007a\u0065S\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020%\u0076\u000a",_ecba .SdHuffBMSizeSelection ));_abaa .WriteString (_e .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_ecba .SdHuffDecodeWidthSelection ));_abaa .WriteString (_e .Sprintf ("\u0009\u002d\u0020Sd\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064e\u0048e\u0069g\u0068t\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_ecba .SdHuffDecodeHeightSelection ));_abaa .WriteString (_e .Sprintf ("\u0009\u002d\u0020U\u0073\u0065\u0052\u0065f\u0069\u006e\u0065\u006d\u0065\u006e\u0074A\u0067\u0067\u0072\u0065\u0067\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_ecba .UseRefinementAggregation ));_abaa .WriteString (_e .Sprintf ("\u0009\u002d\u0020is\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045\u006e\u0063\u006f\u0064\u0065\u0064\u0020\u0025\u0076\u000a",_ecba .IsHuffmanEncoded ));_abaa .WriteString (_e .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_ecba .SdATX ));_abaa .WriteString (_e .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_ecba .SdATY ));_abaa .WriteString (_e .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_ecba .SdrATX ));_abaa .WriteString (_e .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_ecba .SdrATY ));_abaa .WriteString (_e .Sprintf ("\u0009\u002d\u0020\u004e\u0075\u006d\u0062\u0065\u0072\u004ff\u0045\u0078\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_ecba .NumberOfExportedSymbols ));_abaa .WriteString (_e .Sprintf ("\u0009-\u0020\u004e\u0075\u006db\u0065\u0072\u004f\u0066\u004ee\u0077S\u0079m\u0062\u006f\u006c\u0073\u0020\u0025\u0076\n",_ecba .NumberOfNewSymbols ));_abaa .WriteString (_e .Sprintf ("\u0009\u002d\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u004ff\u0049\u006d\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_ecba ._gdad ));_abaa .WriteString (_e .Sprintf ("\u0009\u002d \u006e\u0075\u006d\u0062\u0065\u0072\u004f\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0064\u0053\u0079\u006d\u0062\u006f\u006c\u0073 %\u0076\u000a",_ecba ._ffdd ));return _abaa .String ();};func (_cbcb *SymbolDictionary )encodeATFlags (_faab _fb .BinaryWriter )(_feca int ,_edfd error ){const _dba ="\u0065\u006e\u0063\u006f\u0064\u0065\u0041\u0054\u0046\u006c\u0061\u0067\u0073";if _cbcb .IsHuffmanEncoded ||_cbcb .SdTemplate !=0{return 0,nil ;};_debe :=4;if _cbcb .SdTemplate !=0{_debe =1;};for _bffaa :=0;_bffaa < _debe ;_bffaa ++{if _edfd =_faab .WriteByte (byte (_cbcb .SdATX [_bffaa ]));_edfd !=nil {return _feca ,_de .Wrapf (_edfd ,_dba ,"\u0053d\u0041\u0054\u0058\u005b\u0025\u0064]",_bffaa );};_feca ++;if _edfd =_faab .WriteByte (byte (_cbcb .SdATY [_bffaa ]));_edfd !=nil {return _feca ,_de .Wrapf (_edfd ,_dba ,"\u0053d\u0041\u0054\u0059\u005b\u0025\u0064]",_bffaa );};_feca ++;};return _feca ,nil ;};func (_cbdde *TextRegion )GetRegionBitmap ()(*_gg .Bitmap ,error ){if _cbdde .RegionBitmap !=nil {return _cbdde .RegionBitmap ,nil ;};if !_cbdde .IsHuffmanEncoded {if _gdcbb :=_cbdde .setCodingStatistics ();_gdcbb !=nil {return nil ,_gdcbb ;};};if _fdcd :=_cbdde .createRegionBitmap ();_fdcd !=nil {return nil ,_fdcd ;};if _ggdf :=_cbdde .decodeSymbolInstances ();_ggdf !=nil {return nil ,_ggdf ;};return _cbdde .RegionBitmap ,nil ;};func (_fgec *GenericRegion )decodeTemplate3 (_dfefd ,_cgdgd ,_egd int ,_cdc ,_gaea int )(_efff error ){const _ecce ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0033";var (_gcda ,_dgab int ;_deb int ;_cfec byte ;_bdfa ,_cdg int ;);if _dfefd >=1{_cfec ,_efff =_fgec .Bitmap .GetByte (_gaea );if _efff !=nil {return _de .Wrap (_efff ,_ecce ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_deb =int (_cfec );};_gcda =(_deb >>1)&0x70;for _egdf :=0;_egdf < _egd ;_egdf =_bdfa {var (_acad byte ;_cfaa int ;);_bdfa =_egdf +8;if _ccbc :=_cgdgd -_egdf ;_ccbc > 8{_cfaa =8;}else {_cfaa =_ccbc ;};if _dfefd >=1{_deb <<=8;if _bdfa < _cgdgd {_cfec ,_efff =_fgec .Bitmap .GetByte (_gaea +1);if _efff !=nil {return _de .Wrap (_efff ,_ecce ,"\u0069\u006e\u006e\u0065\u0072\u0020\u002d\u0020\u006c\u0069\u006e\u0065 \u003e\u003d\u0020\u0031");};_deb |=int (_cfec );};};for _eab :=0;_eab < _cfaa ;_eab ++{if _fgec ._eea {_dgab =_fgec .overrideAtTemplate3 (_gcda ,_egdf +_eab ,_dfefd ,int (_acad ),_eab );_fgec ._dfag .SetIndex (int32 (_dgab ));}else {_fgec ._dfag .SetIndex (int32 (_gcda ));};_cdg ,_efff =_fgec ._ebf .DecodeBit (_fgec ._dfag );if _efff !=nil {return _de .Wrap (_efff ,_ecce ,"");};_acad |=byte (_cdg )<<byte (7-_eab );_gcda =((_gcda &0x1f7)<<1)|_cdg |((_deb >>uint (8-_eab ))&0x010);};if _bgbc :=_fgec .Bitmap .SetByte (_cdc ,_acad );_bgbc !=nil {return _de .Wrap (_bgbc ,_ecce ,"");};_cdc ++;_gaea ++;};return nil ;};func (_dgaa *TextRegion )decodeRI ()(int64 ,error ){if !_dgaa .UseRefinement {return 0,nil ;};if _dgaa .IsHuffmanEncoded {_ggadb ,_edea :=_dgaa ._afde .ReadBit ();return int64 (_ggadb ),_edea ;};_dggg ,_begd :=_dgaa ._baae .DecodeInt (_dgaa ._gefg );return int64 (_dggg ),_begd ;};func (_afegd *TextRegion )decodeRdy ()(int64 ,error ){const _gfda ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064y";if _afegd .IsHuffmanEncoded {if _afegd .SbHuffRDY ==3{if _afegd ._cacg ==nil {var (_cgeb int ;_gecf error ;);if _afegd .SbHuffFS ==3{_cgeb ++;};if _afegd .SbHuffDS ==3{_cgeb ++;};if _afegd .SbHuffDT ==3{_cgeb ++;};if _afegd .SbHuffRDWidth ==3{_cgeb ++;};if _afegd .SbHuffRDHeight ==3{_cgeb ++;};if _afegd .SbHuffRDX ==3{_cgeb ++;};_afegd ._cacg ,_gecf =_afegd .getUserTable (_cgeb );if _gecf !=nil {return 0,_de .Wrap (_gecf ,_gfda ,"");};};return _afegd ._cacg .Decode (_afegd ._afde );};_gfbd ,_dcda :=_bc .GetStandardTable (14+int (_afegd .SbHuffRDY ));if _dcda !=nil {return 0,_dcda ;};return _gfbd .Decode (_afegd ._afde );};_fcgdd ,_dedd :=_afegd ._baae .DecodeInt (_afegd ._ebfe );if _dedd !=nil {return 0,_de .Wrap (_dedd ,_gfda ,"");};return int64 (_fcgdd ),nil ;};func (_fbecd *TextRegion )readUseRefinement ()error {if !_fbecd .UseRefinement ||_fbecd .SbrTemplate !=0{return nil ;};var (_afdca byte ;_dbcc error ;);_fbecd .SbrATX =make ([]int8 ,2);_fbecd .SbrATY =make ([]int8 ,2);_afdca ,_dbcc =_fbecd ._afde .ReadByte ();if _dbcc !=nil {return _dbcc ;};_fbecd .SbrATX [0]=int8 (_afdca );_afdca ,_dbcc =_fbecd ._afde .ReadByte ();if _dbcc !=nil {return _dbcc ;};_fbecd .SbrATY [0]=int8 (_afdca );_afdca ,_dbcc =_fbecd ._afde .ReadByte ();if _dbcc !=nil {return _dbcc ;};_fbecd .SbrATX [1]=int8 (_afdca );_afdca ,_dbcc =_fbecd ._afde .ReadByte ();if _dbcc !=nil {return _dbcc ;};_fbecd .SbrATY [1]=int8 (_afdca );return nil ;};func (_bbab *TextRegion )GetRegionInfo ()*RegionSegment {return _bbab .RegionInfo };func (_gdbd *GenericRegion )decodeTemplate1 (_gbac ,_aga ,_badc int ,_afa ,_geb int )(_afd error ){const _fcbff ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0031";var (_fdb ,_gcfe int ;_bbbc ,_facc int ;_acff byte ;_cgg ,_bcde int ;);if _gbac >=1{_acff ,_afd =_gdbd .Bitmap .GetByte (_geb );if _afd !=nil {return _de .Wrap (_afd ,_fcbff ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_bbbc =int (_acff );};if _gbac >=2{_acff ,_afd =_gdbd .Bitmap .GetByte (_geb -_gdbd .Bitmap .RowStride );if _afd !=nil {return _de .Wrap (_afd ,_fcbff ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_facc =int (_acff )<<5;};_fdb =((_bbbc >>1)&0x1f8)|((_facc >>1)&0x1e00);for _fgag :=0;_fgag < _badc ;_fgag =_cgg {var (_aggd byte ;_cdec int ;);_cgg =_fgag +8;if _eda :=_aga -_fgag ;_eda > 8{_cdec =8;}else {_cdec =_eda ;};if _gbac > 0{_bbbc <<=8;if _cgg < _aga {_acff ,_afd =_gdbd .Bitmap .GetByte (_geb +1);if _afd !=nil {return _de .Wrap (_afd ,_fcbff ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_bbbc |=int (_acff );};};if _gbac > 1{_facc <<=8;if _cgg < _aga {_acff ,_afd =_gdbd .Bitmap .GetByte (_geb -_gdbd .Bitmap .RowStride +1);if _afd !=nil {return _de .Wrap (_afd ,_fcbff ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_facc |=int (_acff )<<5;};};for _gfad :=0;_gfad < _cdec ;_gfad ++{if _gdbd ._eea {_gcfe =_gdbd .overrideAtTemplate1 (_fdb ,_fgag +_gfad ,_gbac ,int (_aggd ),_gfad );_gdbd ._dfag .SetIndex (int32 (_gcfe ));}else {_gdbd ._dfag .SetIndex (int32 (_fdb ));};_bcde ,_afd =_gdbd ._ebf .DecodeBit (_gdbd ._dfag );if _afd !=nil {return _de .Wrap (_afd ,_fcbff ,"");};_aggd |=byte (_bcde )<<uint (7-_gfad );_gcd :=uint (8-_gfad );_fdb =((_fdb &0xefb)<<1)|_bcde |((_bbbc >>_gcd )&0x8)|((_facc >>_gcd )&0x200);};if _dafd :=_gdbd .Bitmap .SetByte (_afa ,_aggd );_dafd !=nil {return _de .Wrap (_dafd ,_fcbff ,"");};_afa ++;_geb ++;};return nil ;};func (_bage *TextRegion )decodeDT ()(_bdeg int64 ,_ebaeb error ){if _bage .IsHuffmanEncoded {if _bage .SbHuffDT ==3{_bdeg ,_ebaeb =_bage ._cfac .Decode (_bage ._afde );if _ebaeb !=nil {return 0,_ebaeb ;};}else {var _cefb _bc .Tabler ;_cefb ,_ebaeb =_bc .GetStandardTable (11+int (_bage .SbHuffDT ));if _ebaeb !=nil {return 0,_ebaeb ;};_bdeg ,_ebaeb =_cefb .Decode (_bage ._afde );if _ebaeb !=nil {return 0,_ebaeb ;};};}else {var _gefa int32 ;_gefa ,_ebaeb =_bage ._baae .DecodeInt (_bage ._egad );if _ebaeb !=nil {return ;};_bdeg =int64 (_gefa );};_bdeg *=int64 (_bage .SbStrips );return _bdeg ,nil ;};func (_fgbc *PageInformationSegment )CombinationOperator ()_gg .CombinationOperator {return _fgbc ._fcffa ;};func (_bbb *GenericRefinementRegion )setParameters (_gdd *_fa .DecoderStats ,_gcg *_fa .Decoder ,_eba int8 ,_fbd ,_dff uint32 ,_gaed *_gg .Bitmap ,_ecad ,_fadg int32 ,_afc bool ,_fca []int8 ,_ggc []int8 ){_be .Log .Trace ("\u005b\u0047\u0045NE\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052E\u0047I\u004fN\u005d \u0073\u0065\u0074\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073");if _gdd !=nil {_bbb ._bdg =_gdd ;};if _gcg !=nil {_bbb ._gga =_gcg ;};_bbb .TemplateID =_eba ;_bbb .RegionInfo .BitmapWidth =_fbd ;_bbb .RegionInfo .BitmapHeight =_dff ;_bbb .ReferenceBitmap =_gaed ;_bbb .ReferenceDX =_ecad ;_bbb .ReferenceDY =_fadg ;_bbb .IsTPGROn =_afc ;_bbb .GrAtX =_fca ;_bbb .GrAtY =_ggc ;_bbb .RegionBitmap =nil ;_be .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073 f\u0069\u006ei\u0073\u0068\u0065\u0064\u002e\u0020\u0025\u0073",_bbb );};func (_ecdf *PageInformationSegment )encodeFlags (_bbba _fb .BinaryWriter )(_cggdd error ){const _ceec ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _cggdd =_bbba .SkipBits (1);_cggdd !=nil {return _de .Wrap (_cggdd ,_ceec ,"\u0072\u0065\u0073e\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074");};var _aecd int ;if _ecdf .CombinationOperatorOverrideAllowed (){_aecd =1;};if _cggdd =_bbba .WriteBit (_aecd );_cggdd !=nil {return _de .Wrap (_cggdd ,_ceec ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0064\u0065\u006e");};_aecd =0;if _ecdf ._afef {_aecd =1;};if _cggdd =_bbba .WriteBit (_aecd );_cggdd !=nil {return _de .Wrap (_cggdd ,_ceec ,"\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0061\u0075\u0078i\u006ci\u0061r\u0079\u0020\u0062\u0075\u0066\u0066\u0065r");};if _cggdd =_bbba .WriteBit ((int (_ecdf ._fcffa )>>1)&0x01);_cggdd !=nil {return _de .Wrap (_cggdd ,_ceec ,"\u0063\u006f\u006d\u0062\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006f\u0070\u0065\u0072\u0061\u0074o\u0072\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0062\u0069\u0074");};if _cggdd =_bbba .WriteBit (int (_ecdf ._fcffa )&0x01);_cggdd !=nil {return _de .Wrap (_cggdd ,_ceec ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0062\u0069\u0074");};_aecd =int (_ecdf ._bbbdc );if _cggdd =_bbba .WriteBit (_aecd );_cggdd !=nil {return _de .Wrap (_cggdd ,_ceec ,"\u0064e\u0066\u0061\u0075\u006c\u0074\u0020\u0070\u0061\u0067\u0065\u0020p\u0069\u0078\u0065\u006c\u0020\u0076\u0061\u006c\u0075\u0065");};_aecd =0;if _ecdf ._dgdf {_aecd =1;};if _cggdd =_bbba .WriteBit (_aecd );_cggdd !=nil {return _de .Wrap (_cggdd ,_ceec ,"\u0063\u006f\u006e\u0074ai\u006e\u0073\u0020\u0072\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074");};_aecd =0;if _ecdf .IsLossless {_aecd =1;};if _cggdd =_bbba .WriteBit (_aecd );_cggdd !=nil {return _de .Wrap (_cggdd ,_ceec ,"p\u0061\u0067\u0065\u0020\u0069\u0073 \u0065\u0076\u0065\u006e\u0074\u0075\u0061\u006c\u006cy\u0020\u006c\u006fs\u0073l\u0065\u0073\u0073");};return nil ;};func (_caff *SymbolDictionary )decodeHeightClassDeltaHeight ()(int64 ,error ){if _caff .IsHuffmanEncoded {return _caff .decodeHeightClassDeltaHeightWithHuffman ();};_agbd ,_cedfa :=_caff ._fafd .DecodeInt (_caff ._efec );if _cedfa !=nil {return 0,_cedfa ;};return int64 (_agbd ),nil ;};func (_dfe *GenericRegion )String ()string {_aec :=&_ae .Builder {};_aec .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_aec .WriteString (_dfe .RegionSegment .String ()+"\u000a");_aec .WriteString (_e .Sprintf ("\u0009\u002d\u0020Us\u0065\u0045\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_dfe .UseExtTemplates ));_aec .WriteString (_e .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0044\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_dfe .IsTPGDon ));_aec .WriteString (_e .Sprintf ("\u0009-\u0020G\u0042\u0054\u0065\u006d\u0070l\u0061\u0074e\u003a\u0020\u0025\u0064\u000a",_dfe .GBTemplate ));_aec .WriteString (_e .Sprintf ("\t\u002d \u0049\u0073\u004d\u004d\u0052\u0045\u006e\u0063o\u0064\u0065\u0064\u003a %\u0076\u000a",_dfe .IsMMREncoded ));_aec .WriteString (_e .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_dfe .GBAtX ));_aec .WriteString (_e .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_dfe .GBAtY ));_aec .WriteString (_e .Sprintf ("\t\u002d \u0047\u0042\u0041\u0074\u004f\u0076\u0065\u0072r\u0069\u0064\u0065\u003a %\u0076\u000a",_dfe .GBAtOverride ));return _aec .String ();};func (_acca *Header )readHeaderFlags ()error {const _ede ="\u0072e\u0061d\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006c\u0061\u0067\u0073";_agce ,_edfc :=_acca .Reader .ReadBit ();if _edfc !=nil {return _de .Wrap (_edfc ,_ede ,"r\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067");};if _agce !=0{_acca .RetainFlag =true ;};_agce ,_edfc =_acca .Reader .ReadBit ();if _edfc !=nil {return _de .Wrap (_edfc ,_ede ,"\u0070\u0061g\u0065\u0020\u0061s\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e");};if _agce !=0{_acca .PageAssociationFieldSize =true ;};_cbc ,_edfc :=_acca .Reader .ReadBits (6);if _edfc !=nil {return _de .Wrap (_edfc ,_ede ,"\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065");};_acca .Type =Type (int (_cbc ));return nil ;};func (_begf *Header )readReferredToSegmentNumbers (_dcd _fb .StreamReader ,_dgbf int )([]int ,error ){const _dbfa ="\u0072\u0065\u0061\u0064R\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053e\u0067m\u0065\u006e\u0074\u004e\u0075\u006d\u0062e\u0072\u0073";_fagf :=make ([]int ,_dgbf );if _dgbf > 0{_begf .RTSegments =make ([]*Header ,_dgbf );var (_cbeed uint64 ;_efa error ;);for _bddc :=0;_bddc < _dgbf ;_bddc ++{_cbeed ,_efa =_dcd .ReadBits (byte (_begf .referenceSize ())<<3);if _efa !=nil {return nil ,_de .Wrapf (_efa ,_dbfa ,"\u0027\u0025\u0064\u0027 \u0072\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0020\u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u0075\u006db\u0065\u0072",_bddc );};_fagf [_bddc ]=int (_cbeed &_f .MaxInt32 );};};return _fagf ,nil ;};func (_cfab *GenericRegion )GetRegionInfo ()*RegionSegment {return _cfab .RegionSegment };func (_ffad *SymbolDictionary )getSbSymCodeLen ()int8 {_cfddg :=int8 (_f .Ceil (_f .Log (float64 (_ffad ._gdad +_ffad .NumberOfNewSymbols ))/_f .Log (2)));if _ffad .IsHuffmanEncoded &&_cfddg < 1{return 1;};return _cfddg ;};func (_ebed *PageInformationSegment )readIsLossless ()error {_cadae ,_bbefe :=_ebed ._cad .ReadBit ();if _bbefe !=nil {return _bbefe ;};if _cadae ==1{_ebed .IsLossless =true ;};return nil ;};func (_gcdd *TextRegion )setContexts (_ecaea *_fa .DecoderStats ,_efbc *_fa .DecoderStats ,_daeb *_fa .DecoderStats ,_dbgb *_fa .DecoderStats ,_gbg *_fa .DecoderStats ,_ddag *_fa .DecoderStats ,_fegf *_fa .DecoderStats ,_egfa *_fa .DecoderStats ,_aage *_fa .DecoderStats ,_dgcd *_fa .DecoderStats ){_gcdd ._egad =_efbc ;_gcdd ._eeag =_daeb ;_gcdd ._begb =_dbgb ;_gcdd ._dedb =_gbg ;_gcdd ._affc =_fegf ;_gcdd ._ddeg =_egfa ;_gcdd ._gdcd =_ddag ;_gcdd ._eddb =_aage ;_gcdd ._ebfe =_dgcd ;_gcdd ._cfadbf =_ecaea ;};func (_acfba *GenericRegion )Size ()int {return _acfba .RegionSegment .Size ()+1+2*len (_acfba .GBAtX )};func (_cab *HalftoneRegion )computeY (_dadb ,_bffg int )int {return _cab .shiftAndFill (int (_cab .HGridY )+_dadb *int (_cab .HRegionX )-_bffg *int (_cab .HRegionY ));};func (_bfbb *TextRegion )readAmountOfSymbolInstances ()error {_eddc ,_dgabd :=_bfbb ._afde .ReadBits (32);if _dgabd !=nil {return _dgabd ;};_bfbb .NumberOfSymbolInstances =uint32 (_eddc &_f .MaxUint32 );_effab :=_bfbb .RegionInfo .BitmapWidth *_bfbb .RegionInfo .BitmapHeight ;if _effab < _bfbb .NumberOfSymbolInstances {_be .Log .Debug ("\u004c\u0069\u006d\u0069t\u0069\u006e\u0067\u0020t\u0068\u0065\u0020n\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020d\u0065\u0063\u006f\u0064e\u0064\u0020\u0073\u0079m\u0062\u006f\u006c\u0020\u0069n\u0073\u0074\u0061\u006e\u0063\u0065\u0073 \u0074\u006f\u0020\u006f\u006ee\u0020\u0070\u0065\u0072\u0020\u0070\u0069\u0078\u0065l\u0020\u0028\u0020\u0025\u0064\u0020\u0069\u006e\u0073\u0074\u0065\u0061\u0064\u0020\u006f\u0066\u0020\u0025\u0064\u0029",_effab ,_bfbb .NumberOfSymbolInstances );_bfbb .NumberOfSymbolInstances =_effab ;};return nil ;};