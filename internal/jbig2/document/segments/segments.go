//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package segments ;import (_gf "encoding/binary";_fc "errors";_f "fmt";_gfa "github.com/unidoc/unipdf/v3/common";_cb "github.com/unidoc/unipdf/v3/internal/bitwise";_bb "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_cf "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";
_cba "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/arithmetic";_cff "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/huffman";_ee "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/mmr";_beg "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/arithmetic";
_be "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_bc "github.com/unidoc/unipdf/v3/internal/jbig2/internal";_b "golang.org/x/xerrors";_g "image";_d "io";_c "math";_af "strings";_a "time";);func (_bddd *RegionSegment )readCombinationOperator ()error {_bcga ,_edbb :=_bddd ._agaa .ReadBits (3);
if _edbb !=nil {return _edbb ;};_bddd .CombinaionOperator =_cf .CombinationOperator (_bcga &0xF);return nil ;};func (_fggc *TextRegion )readRegionFlags ()error {var (_cgeeg int ;_fccfc uint64 ;_adee error ;);_cgeeg ,_adee =_fggc ._fbe .ReadBit ();if _adee !=nil {return _adee ;
};_fggc .SbrTemplate =int8 (_cgeeg );_fccfc ,_adee =_fggc ._fbe .ReadBits (5);if _adee !=nil {return _adee ;};_fggc .SbDsOffset =int8 (_fccfc );if _fggc .SbDsOffset > 0x0f{_fggc .SbDsOffset -=0x20;};_cgeeg ,_adee =_fggc ._fbe .ReadBit ();if _adee !=nil {return _adee ;
};_fggc .DefaultPixel =int8 (_cgeeg );_fccfc ,_adee =_fggc ._fbe .ReadBits (2);if _adee !=nil {return _adee ;};_fggc .CombinationOperator =_cf .CombinationOperator (int (_fccfc )&0x3);_cgeeg ,_adee =_fggc ._fbe .ReadBit ();if _adee !=nil {return _adee ;
};_fggc .IsTransposed =int8 (_cgeeg );_fccfc ,_adee =_fggc ._fbe .ReadBits (2);if _adee !=nil {return _adee ;};_fggc .ReferenceCorner =int16 (_fccfc )&0x3;_fccfc ,_adee =_fggc ._fbe .ReadBits (2);if _adee !=nil {return _adee ;};_fggc .LogSBStrips =int16 (_fccfc )&0x3;
_fggc .SbStrips =1<<uint (_fggc .LogSBStrips );_cgeeg ,_adee =_fggc ._fbe .ReadBit ();if _adee !=nil {return _adee ;};if _cgeeg ==1{_fggc .UseRefinement =true ;};_cgeeg ,_adee =_fggc ._fbe .ReadBit ();if _adee !=nil {return _adee ;};if _cgeeg ==1{_fggc .IsHuffmanEncoded =true ;
};return nil ;};var _ SegmentEncoder =&RegionSegment {};func (_gff *TableSegment )StreamReader ()_cb .StreamReader {return _gff ._ddae };var _ templater =&template1 {};func (_acdb *GenericRefinementRegion )setParameters (_feb *_cba .DecoderStats ,_ace *_cba .Decoder ,_bae int8 ,_edc ,_gba uint32 ,_cggb *_cf .Bitmap ,_aeec ,_bdc int32 ,_bca bool ,_dff []int8 ,_eda []int8 ){_gfa .Log .Trace ("\u005b\u0047\u0045NE\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052E\u0047I\u004fN\u005d \u0073\u0065\u0074\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073");
if _feb !=nil {_acdb ._cfe =_feb ;};if _ace !=nil {_acdb ._fa =_ace ;};_acdb .TemplateID =_bae ;_acdb .RegionInfo .BitmapWidth =_edc ;_acdb .RegionInfo .BitmapHeight =_gba ;_acdb .ReferenceBitmap =_cggb ;_acdb .ReferenceDX =_aeec ;_acdb .ReferenceDY =_bdc ;
_acdb .IsTPGROn =_bca ;_acdb .GrAtX =_dff ;_acdb .GrAtY =_eda ;_acdb .RegionBitmap =nil ;_gfa .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073 f\u0069\u006ei\u0073\u0068\u0065\u0064\u002e\u0020\u0025\u0073",_acdb );
};func (_dcab *TextRegion )createRegionBitmap ()error {_dcab .RegionBitmap =_cf .New (int (_dcab .RegionInfo .BitmapWidth ),int (_dcab .RegionInfo .BitmapHeight ));if _dcab .DefaultPixel !=0{_dcab .RegionBitmap .SetDefaultPixel ();};return nil ;};func (_bgbb *TextRegion )decodeRdx ()(int64 ,error ){const _bbdge ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064x";
if _bgbb .IsHuffmanEncoded {if _bgbb .SbHuffRDX ==3{if _bgbb ._ffgc ==nil {var (_fgaf int ;_fbee error ;);if _bgbb .SbHuffFS ==3{_fgaf ++;};if _bgbb .SbHuffDS ==3{_fgaf ++;};if _bgbb .SbHuffDT ==3{_fgaf ++;};if _bgbb .SbHuffRDWidth ==3{_fgaf ++;};if _bgbb .SbHuffRDHeight ==3{_fgaf ++;
};_bgbb ._ffgc ,_fbee =_bgbb .getUserTable (_fgaf );if _fbee !=nil {return 0,_be .Wrap (_fbee ,_bbdge ,"");};};return _bgbb ._ffgc .Decode (_bgbb ._fbe );};_abgag ,_gbdbe :=_cff .GetStandardTable (14+int (_bgbb .SbHuffRDX ));if _gbdbe !=nil {return 0,_be .Wrap (_gbdbe ,_bbdge ,"");
};return _abgag .Decode (_bgbb ._fbe );};_eadf ,_feegg :=_bgbb ._bffe .DecodeInt (_bgbb ._fefb );if _feegg !=nil {return 0,_be .Wrap (_feegg ,_bbdge ,"");};return int64 (_eadf ),nil ;};func (_eece *TextRegion )decodeStripT ()(_gcadd int64 ,_bdff error ){if _eece .IsHuffmanEncoded {if _eece .SbHuffDT ==3{if _eece ._cecfe ==nil {var _cfde int ;
if _eece .SbHuffFS ==3{_cfde ++;};if _eece .SbHuffDS ==3{_cfde ++;};_eece ._cecfe ,_bdff =_eece .getUserTable (_cfde );if _bdff !=nil {return 0,_bdff ;};};_gcadd ,_bdff =_eece ._cecfe .Decode (_eece ._fbe );if _bdff !=nil {return 0,_bdff ;};}else {var _aec _cff .Tabler ;
_aec ,_bdff =_cff .GetStandardTable (11+int (_eece .SbHuffDT ));if _bdff !=nil {return 0,_bdff ;};_gcadd ,_bdff =_aec .Decode (_eece ._fbe );if _bdff !=nil {return 0,_bdff ;};};}else {var _gabe int32 ;_gabe ,_bdff =_eece ._bffe .DecodeInt (_eece ._fbde );
if _bdff !=nil {return 0,_bdff ;};_gcadd =int64 (_gabe );};_gcadd *=int64 (-_eece .SbStrips );return _gcadd ,nil ;};func (_ecd *GenericRefinementRegion )parseHeader ()(_ega error ){_gfa .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0048e\u0061\u0064e\u0072\u002e\u002e\u002e");
_fff :=_a .Now ();defer func (){if _ega ==nil {_gfa .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045G\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020h\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0069\u006e\u0069\u0073\u0068id\u0020\u0069\u006e\u003a\u0020\u0025\u0064\u0020\u006e\u0073",_a .Since (_fff ).Nanoseconds ());
}else {_gfa .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0068\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0073",_ega );
};}();if _ega =_ecd .RegionInfo .parseHeader ();_ega !=nil {return _ega ;};_ ,_ega =_ecd ._db .ReadBits (6);if _ega !=nil {return _ega ;};_ecd .IsTPGROn ,_ega =_ecd ._db .ReadBool ();if _ega !=nil {return _ega ;};var _ccb int ;_ccb ,_ega =_ecd ._db .ReadBit ();
if _ega !=nil {return _ega ;};_ecd .TemplateID =int8 (_ccb );switch _ecd .TemplateID {case 0:_ecd .Template =_ecd ._cffb ;if _ega =_ecd .readAtPixels ();_ega !=nil {return ;};case 1:_ecd .Template =_ecd ._ff ;};return nil ;};func (_fgef *SymbolDictionary )getUserTable (_fbdf int )(_cff .Tabler ,error ){var _bggfa int ;
for _ ,_cfcge :=range _fgef .Header .RTSegments {if _cfcge .Type ==53{if _bggfa ==_fbdf {_fgbg ,_gdgf :=_cfcge .GetSegmentData ();if _gdgf !=nil {return nil ,_gdgf ;};_dcec :=_fgbg .(_cff .BasicTabler );return _cff .NewEncodedTable (_dcec );};_bggfa ++;
};};return nil ,nil ;};func (_fca *HalftoneRegion )Init (hd *Header ,r _cb .StreamReader )error {_fca ._ggf =r ;_fca ._bda =hd ;_fca .RegionSegment =NewRegionSegment (r );return _fca .parseHeader ();};func (_fffc *SymbolDictionary )decodeRefinedSymbol (_cddc ,_ecdc uint32 )error {var (_gcgd int ;
_feeg ,_eaaf int32 ;);if _fffc .IsHuffmanEncoded {_daefg ,_aage :=_fffc ._agc .ReadBits (byte (_fffc ._abfdf ));if _aage !=nil {return _aage ;};_gcgd =int (_daefg );_cdgf ,_aage :=_cff .GetStandardTable (15);if _aage !=nil {return _aage ;};_dfeg ,_aage :=_cdgf .Decode (_fffc ._agc );
if _aage !=nil {return _aage ;};_feeg =int32 (_dfeg );_dfeg ,_aage =_cdgf .Decode (_fffc ._agc );if _aage !=nil {return _aage ;};_eaaf =int32 (_dfeg );_cdgf ,_aage =_cff .GetStandardTable (1);if _aage !=nil {return _aage ;};if _ ,_aage =_cdgf .Decode (_fffc ._agc );
_aage !=nil {return _aage ;};_fffc ._agc .Align ();}else {_cgdb ,_dcee :=_fffc ._bgeg .DecodeIAID (uint64 (_fffc ._abfdf ),_fffc ._cdd );if _dcee !=nil {return _dcee ;};_gcgd =int (_cgdb );_feeg ,_dcee =_fffc ._bgeg .DecodeInt (_fffc ._bfbg );if _dcee !=nil {return _dcee ;
};_eaaf ,_dcee =_fffc ._bgeg .DecodeInt (_fffc ._ded );if _dcee !=nil {return _dcee ;};};if _adgc :=_fffc .setSymbolsArray ();_adgc !=nil {return _adgc ;};_gdeef :=_fffc ._fgce [_gcgd ];if _cedd :=_fffc .decodeNewSymbols (_cddc ,_ecdc ,_gdeef ,_feeg ,_eaaf );
_cedd !=nil {return _cedd ;};if _fffc .IsHuffmanEncoded {_fffc ._agc .Align ();};return nil ;};func (_bfdc *Header )readSegmentNumber (_cbaf _cb .StreamReader )error {const _fbfe ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";
_ggef :=make ([]byte ,4);_ ,_ffa :=_cbaf .Read (_ggef );if _ffa !=nil {return _be .Wrap (_ffa ,_fbfe ,"");};_bfdc .SegmentNumber =_gf .BigEndian .Uint32 (_ggef );return nil ;};func (_agca *TableSegment )HtOOB ()int32 {return _agca ._afb };func (_cafcg *TextRegion )checkInput ()error {const _cdbd ="\u0063\u0068\u0065\u0063\u006b\u0049\u006e\u0070\u0075\u0074";
if !_cafcg .UseRefinement {if _cafcg .SbrTemplate !=0{_gfa .Log .Debug ("\u0053\u0062\u0072Te\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_cafcg .SbrTemplate =0;};};if _cafcg .SbHuffFS ==2||_cafcg .SbHuffRDWidth ==2||_cafcg .SbHuffRDHeight ==2||_cafcg .SbHuffRDX ==2||_cafcg .SbHuffRDY ==2{return _be .Error (_cdbd ,"h\u0075\u0066\u0066\u006d\u0061\u006e \u0066\u006c\u0061\u0067\u0020\u0076a\u006c\u0075\u0065\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074e\u0064");
};if !_cafcg .UseRefinement {if _cafcg .SbHuffRSize !=0{_gfa .Log .Debug ("\u0053\u0062\u0048uf\u0066\u0052\u0053\u0069\u007a\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_cafcg .SbHuffRSize =0;};if _cafcg .SbHuffRDY !=0{_gfa .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044Y\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");
_cafcg .SbHuffRDY =0;};if _cafcg .SbHuffRDX !=0{_gfa .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044X\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_cafcg .SbHuffRDX =0;};if _cafcg .SbHuffRDWidth !=0{_gfa .Log .Debug ("\u0053b\u0048\u0075\u0066\u0066R\u0044\u0057\u0069\u0064\u0074h\u0020s\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u00200");
_cafcg .SbHuffRDWidth =0;};if _cafcg .SbHuffRDHeight !=0{_gfa .Log .Debug ("\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069g\u0068\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0030");_cafcg .SbHuffRDHeight =0;};
};return nil ;};func (_fcfg *PatternDictionary )readGrayMax ()error {_fceb ,_efdc :=_fcfg ._gedc .ReadBits (32);if _efdc !=nil {return _efdc ;};_fcfg .GrayMax =uint32 (_fceb &_c .MaxUint32 );return nil ;};func (_gcdd *SymbolDictionary )GetDictionary ()([]*_cf .Bitmap ,error ){_gfa .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c-\u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){_gfa .Log .Trace ("\u005b\u0053\u0059M\u0042\u004f\u004c\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
_gfa .Log .Trace ("\u005b\u0053Y\u004d\u0042\u004f\u004c\u002dD\u0049\u0043\u0054\u0049\u004fN\u0041\u0052\u0059\u005d\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020\u000a\u0045\u0078\u003a\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u000a\u006e\u0065\u0077\u003a\u0027\u0025\u0073\u0027",_gcdd ._fcgg ,_gcdd ._gdab );
}();if _gcdd ._fcgg ==nil {var _dbff error ;if _gcdd .UseRefinementAggregation {_gcdd ._abfdf =_gcdd .getSbSymCodeLen ();};if !_gcdd .IsHuffmanEncoded {if _dbff =_gcdd .setCodingStatistics ();_dbff !=nil {return nil ,_dbff ;};};_gcdd ._gdab =make ([]*_cf .Bitmap ,_gcdd .NumberOfNewSymbols );
var _bdeg []int ;if _gcdd .IsHuffmanEncoded &&!_gcdd .UseRefinementAggregation {_bdeg =make ([]int ,_gcdd .NumberOfNewSymbols );};if _dbff =_gcdd .setSymbolsArray ();_dbff !=nil {return nil ,_dbff ;};var _ddgf ,_dbgfb int64 ;_gcdd ._deab =0;for _gcdd ._deab < _gcdd .NumberOfNewSymbols {_dbgfb ,_dbff =_gcdd .decodeHeightClassDeltaHeight ();
if _dbff !=nil {return nil ,_dbff ;};_ddgf +=_dbgfb ;var _agde ,_abdc uint32 ;_bfaa :=int64 (_gcdd ._deab );for {var _caba int64 ;_caba ,_dbff =_gcdd .decodeDifferenceWidth ();if _b .Is (_dbff ,_bc .ErrOOB ){break ;};if _dbff !=nil {return nil ,_dbff ;
};if _gcdd ._deab >=_gcdd .NumberOfNewSymbols {break ;};_agde +=uint32 (_caba );_abdc +=_agde ;if !_gcdd .IsHuffmanEncoded ||_gcdd .UseRefinementAggregation {if !_gcdd .UseRefinementAggregation {_dbff =_gcdd .decodeDirectlyThroughGenericRegion (_agde ,uint32 (_ddgf ));
if _dbff !=nil {return nil ,_dbff ;};}else {_dbff =_gcdd .decodeAggregate (_agde ,uint32 (_ddgf ));if _dbff !=nil {return nil ,_dbff ;};};}else if _gcdd .IsHuffmanEncoded &&!_gcdd .UseRefinementAggregation {_bdeg [_gcdd ._deab ]=int (_agde );};_gcdd ._deab ++;
};if _gcdd .IsHuffmanEncoded &&!_gcdd .UseRefinementAggregation {var _dag int64 ;if _gcdd .SdHuffBMSizeSelection ==0{var _bebe _cff .Tabler ;_bebe ,_dbff =_cff .GetStandardTable (1);if _dbff !=nil {return nil ,_dbff ;};_dag ,_dbff =_bebe .Decode (_gcdd ._agc );
if _dbff !=nil {return nil ,_dbff ;};}else {_dag ,_dbff =_gcdd .huffDecodeBmSize ();if _dbff !=nil {return nil ,_dbff ;};};_gcdd ._agc .Align ();var _bdcff *_cf .Bitmap ;_bdcff ,_dbff =_gcdd .decodeHeightClassCollectiveBitmap (_dag ,uint32 (_ddgf ),_abdc );
if _dbff !=nil {return nil ,_dbff ;};_dbff =_gcdd .decodeHeightClassBitmap (_bdcff ,_bfaa ,int (_ddgf ),_bdeg );if _dbff !=nil {return nil ,_dbff ;};};};_fbcbd ,_dbff :=_gcdd .getToExportFlags ();if _dbff !=nil {return nil ,_dbff ;};_gcdd .setExportedSymbols (_fbcbd );
};return _gcdd ._fcgg ,nil ;};func (_cfce *GenericRegion )copyLineAbove (_gebc int )error {_abf :=_gebc *_cfce .Bitmap .RowStride ;_cbga :=_abf -_cfce .Bitmap .RowStride ;for _bea :=0;_bea < _cfce .Bitmap .RowStride ;_bea ++{_dge ,_ecba :=_cfce .Bitmap .GetByte (_cbga );
if _ecba !=nil {return _ecba ;};_cbga ++;if _ecba =_cfce .Bitmap .SetByte (_abf ,_dge );_ecba !=nil {return _ecba ;};_abf ++;};return nil ;};func (_eac *GenericRefinementRegion )overrideAtTemplate0 (_ccc ,_gaa ,_caa ,_fdc ,_cge int )int {if _eac ._da [0]{_ccc &=0xfff7;
if _eac .GrAtY [0]==0&&int (_eac .GrAtX [0])>=-_cge {_ccc |=(_fdc >>uint (7-(_cge +int (_eac .GrAtX [0])))&0x1)<<3;}else {_ccc |=_eac .getPixel (_eac .RegionBitmap ,_gaa +int (_eac .GrAtX [0]),_caa +int (_eac .GrAtY [0]))<<3;};};if _eac ._da [1]{_ccc &=0xefff;
if _eac .GrAtY [1]==0&&int (_eac .GrAtX [1])>=-_cge {_ccc |=(_fdc >>uint (7-(_cge +int (_eac .GrAtX [1])))&0x1)<<12;}else {_ccc |=_eac .getPixel (_eac .ReferenceBitmap ,_gaa +int (_eac .GrAtX [1]),_caa +int (_eac .GrAtY [1]));};};return _ccc ;};func (_bgdb *TextRegion )GetRegionInfo ()*RegionSegment {return _bgdb .RegionInfo };
type GenericRefinementRegion struct{_cffb templater ;_ff templater ;_db _cb .StreamReader ;_fg *Header ;RegionInfo *RegionSegment ;IsTPGROn bool ;TemplateID int8 ;Template templater ;GrAtX []int8 ;GrAtY []int8 ;RegionBitmap *_cf .Bitmap ;ReferenceBitmap *_cf .Bitmap ;
ReferenceDX int32 ;ReferenceDY int32 ;_fa *_cba .Decoder ;_cfe *_cba .DecoderStats ;_fgc bool ;_da []bool ;};func (_ecf *GenericRegion )overrideAtTemplate0b (_ebfe ,_faac ,_agb ,_fdbf ,_begb ,_cdc int )int {if _ecf .GBAtOverride [0]{_ebfe &=0xFFFD;if _ecf .GBAtY [0]==0&&_ecf .GBAtX [0]>=-int8 (_begb ){_ebfe |=(_fdbf >>uint (int8 (_cdc )-_ecf .GBAtX [0]&0x1))<<1;
}else {_ebfe |=int (_ecf .getPixel (_faac +int (_ecf .GBAtX [0]),_agb +int (_ecf .GBAtY [0])))<<1;};};if _ecf .GBAtOverride [1]{_ebfe &=0xDFFF;if _ecf .GBAtY [1]==0&&_ecf .GBAtX [1]>=-int8 (_begb ){_ebfe |=(_fdbf >>uint (int8 (_cdc )-_ecf .GBAtX [1]&0x1))<<13;
}else {_ebfe |=int (_ecf .getPixel (_faac +int (_ecf .GBAtX [1]),_agb +int (_ecf .GBAtY [1])))<<13;};};if _ecf .GBAtOverride [2]{_ebfe &=0xFDFF;if _ecf .GBAtY [2]==0&&_ecf .GBAtX [2]>=-int8 (_begb ){_ebfe |=(_fdbf >>uint (int8 (_cdc )-_ecf .GBAtX [2]&0x1))<<9;
}else {_ebfe |=int (_ecf .getPixel (_faac +int (_ecf .GBAtX [2]),_agb +int (_ecf .GBAtY [2])))<<9;};};if _ecf .GBAtOverride [3]{_ebfe &=0xBFFF;if _ecf .GBAtY [3]==0&&_ecf .GBAtX [3]>=-int8 (_begb ){_ebfe |=(_fdbf >>uint (int8 (_cdc )-_ecf .GBAtX [3]&0x1))<<14;
}else {_ebfe |=int (_ecf .getPixel (_faac +int (_ecf .GBAtX [3]),_agb +int (_ecf .GBAtY [3])))<<14;};};if _ecf .GBAtOverride [4]{_ebfe &=0xEFFF;if _ecf .GBAtY [4]==0&&_ecf .GBAtX [4]>=-int8 (_begb ){_ebfe |=(_fdbf >>uint (int8 (_cdc )-_ecf .GBAtX [4]&0x1))<<12;
}else {_ebfe |=int (_ecf .getPixel (_faac +int (_ecf .GBAtX [4]),_agb +int (_ecf .GBAtY [4])))<<12;};};if _ecf .GBAtOverride [5]{_ebfe &=0xFFDF;if _ecf .GBAtY [5]==0&&_ecf .GBAtX [5]>=-int8 (_begb ){_ebfe |=(_fdbf >>uint (int8 (_cdc )-_ecf .GBAtX [5]&0x1))<<5;
}else {_ebfe |=int (_ecf .getPixel (_faac +int (_ecf .GBAtX [5]),_agb +int (_ecf .GBAtY [5])))<<5;};};if _ecf .GBAtOverride [6]{_ebfe &=0xFFFB;if _ecf .GBAtY [6]==0&&_ecf .GBAtX [6]>=-int8 (_begb ){_ebfe |=(_fdbf >>uint (int8 (_cdc )-_ecf .GBAtX [6]&0x1))<<2;
}else {_ebfe |=int (_ecf .getPixel (_faac +int (_ecf .GBAtX [6]),_agb +int (_ecf .GBAtY [6])))<<2;};};if _ecf .GBAtOverride [7]{_ebfe &=0xFFF7;if _ecf .GBAtY [7]==0&&_ecf .GBAtX [7]>=-int8 (_begb ){_ebfe |=(_fdbf >>uint (int8 (_cdc )-_ecf .GBAtX [7]&0x1))<<3;
}else {_ebfe |=int (_ecf .getPixel (_faac +int (_ecf .GBAtX [7]),_agb +int (_ecf .GBAtY [7])))<<3;};};if _ecf .GBAtOverride [8]{_ebfe &=0xF7FF;if _ecf .GBAtY [8]==0&&_ecf .GBAtX [8]>=-int8 (_begb ){_ebfe |=(_fdbf >>uint (int8 (_cdc )-_ecf .GBAtX [8]&0x1))<<11;
}else {_ebfe |=int (_ecf .getPixel (_faac +int (_ecf .GBAtX [8]),_agb +int (_ecf .GBAtY [8])))<<11;};};if _ecf .GBAtOverride [9]{_ebfe &=0xFFEF;if _ecf .GBAtY [9]==0&&_ecf .GBAtX [9]>=-int8 (_begb ){_ebfe |=(_fdbf >>uint (int8 (_cdc )-_ecf .GBAtX [9]&0x1))<<4;
}else {_ebfe |=int (_ecf .getPixel (_faac +int (_ecf .GBAtX [9]),_agb +int (_ecf .GBAtY [9])))<<4;};};if _ecf .GBAtOverride [10]{_ebfe &=0x7FFF;if _ecf .GBAtY [10]==0&&_ecf .GBAtX [10]>=-int8 (_begb ){_ebfe |=(_fdbf >>uint (int8 (_cdc )-_ecf .GBAtX [10]&0x1))<<15;
}else {_ebfe |=int (_ecf .getPixel (_faac +int (_ecf .GBAtX [10]),_agb +int (_ecf .GBAtY [10])))<<15;};};if _ecf .GBAtOverride [11]{_ebfe &=0xFDFF;if _ecf .GBAtY [11]==0&&_ecf .GBAtX [11]>=-int8 (_begb ){_ebfe |=(_fdbf >>uint (int8 (_cdc )-_ecf .GBAtX [11]&0x1))<<10;
}else {_ebfe |=int (_ecf .getPixel (_faac +int (_ecf .GBAtX [11]),_agb +int (_ecf .GBAtY [11])))<<10;};};return _ebfe ;};func (_bab *SymbolDictionary )addSymbol (_cffg Regioner )error {_gfdcg ,_cdde :=_cffg .GetRegionBitmap ();if _cdde !=nil {return _cdde ;
};_bab ._gdab [_bab ._deab ]=_gfdcg ;_bab ._fgce =append (_bab ._fgce ,_gfdcg );_gfa .Log .Trace ("\u005b\u0053YM\u0042\u004f\u004c \u0044\u0049\u0043\u0054ION\u0041RY\u005d\u0020\u0041\u0064\u0064\u0065\u0064 s\u0079\u006d\u0062\u006f\u006c\u003a\u0020%\u0073",_gfdcg );
return nil ;};func (_gdaa *TextRegion )decodeRI ()(int64 ,error ){if !_gdaa .UseRefinement {return 0,nil ;};if _gdaa .IsHuffmanEncoded {_afaffg ,_ccgf :=_gdaa ._fbe .ReadBit ();return int64 (_afaffg ),_ccgf ;};_afec ,_daed :=_gdaa ._bffe .DecodeInt (_gdaa ._gddg );
return int64 (_afec ),_daed ;};type TableSegment struct{_ddae _cb .StreamReader ;_afb int32 ;_edfa int32 ;_ebcb int32 ;_bbda int32 ;_dffe int32 ;};func (_eee *template1 )form (_edb ,_cbg ,_dcae ,_aef ,_ade int16 )int16 {return ((_edb &0x02)<<8)|(_cbg <<6)|((_dcae &0x03)<<4)|(_aef <<1)|_ade ;
};const (ORandom OrganizationType =iota ;OSequential ;);func (_gfe *GenericRegion )computeSegmentDataStructure ()error {_gfe .DataOffset =_gfe ._ebfb .StreamPosition ();_gfe .DataHeaderLength =_gfe .DataOffset -_gfe .DataHeaderOffset ;_gfe .DataLength =int64 (_gfe ._ebfb .Length ())-_gfe .DataHeaderLength ;
return nil ;};type Regioner interface{GetRegionBitmap ()(*_cf .Bitmap ,error );GetRegionInfo ()*RegionSegment ;};func (_bad *GenericRegion )decodeTemplate0a (_gabb ,_cee ,_ccba int ,_febg ,_fadg int )(_bege error ){const _dfg ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0061";
var (_bdfg ,_aadfe int ;_cgee ,_dee int ;_egbe byte ;_ddf int ;);if _gabb >=1{_egbe ,_bege =_bad .Bitmap .GetByte (_fadg );if _bege !=nil {return _be .Wrap (_bege ,_dfg ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_cgee =int (_egbe );};if _gabb >=2{_egbe ,_bege =_bad .Bitmap .GetByte (_fadg -_bad .Bitmap .RowStride );
if _bege !=nil {return _be .Wrap (_bege ,_dfg ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_dee =int (_egbe )<<6;};_bdfg =(_cgee &0xf0)|(_dee &0x3800);for _dbb :=0;_dbb < _ccba ;_dbb =_ddf {var (_fda byte ;_eag int ;);_ddf =_dbb +8;if _bage :=_cee -_dbb ;
_bage > 8{_eag =8;}else {_eag =_bage ;};if _gabb > 0{_cgee <<=8;if _ddf < _cee {_egbe ,_bege =_bad .Bitmap .GetByte (_fadg +1);if _bege !=nil {return _be .Wrap (_bege ,_dfg ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_cgee |=int (_egbe );};};
if _gabb > 1{_cbce :=_fadg -_bad .Bitmap .RowStride +1;_dee <<=8;if _ddf < _cee {_egbe ,_bege =_bad .Bitmap .GetByte (_cbce );if _bege !=nil {return _be .Wrap (_bege ,_dfg ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_dee |=int (_egbe )<<6;}else {_dee |=0;
};};for _gaaa :=0;_gaaa < _eag ;_gaaa ++{_efde :=uint (7-_gaaa );if _bad ._cbcb {_aadfe =_bad .overrideAtTemplate0a (_bdfg ,_dbb +_gaaa ,_gabb ,int (_fda ),_gaaa ,int (_efde ));_bad ._adeg .SetIndex (int32 (_aadfe ));}else {_bad ._adeg .SetIndex (int32 (_bdfg ));
};var _geba int ;_geba ,_bege =_bad ._edcf .DecodeBit (_bad ._adeg );if _bege !=nil {return _be .Wrap (_bege ,_dfg ,"");};_fda |=byte (_geba )<<_efde ;_bdfg =((_bdfg &0x7bf7)<<1)|_geba |((_cgee >>_efde )&0x10)|((_dee >>_efde )&0x800);};if _gde :=_bad .Bitmap .SetByte (_febg ,_fda );
_gde !=nil {return _be .Wrap (_gde ,_dfg ,"");};_febg ++;_fadg ++;};return nil ;};func (_fdea *GenericRegion )setParametersWithAt (_agad bool ,_dfed byte ,_dba ,_cded bool ,_gfdd ,_cbfc []int8 ,_faec ,_fcg uint32 ,_bdga *_cba .DecoderStats ,_edab *_cba .Decoder ){_fdea .IsMMREncoded =_agad ;
_fdea .GBTemplate =_dfed ;_fdea .IsTPGDon =_dba ;_fdea .GBAtX =_gfdd ;_fdea .GBAtY =_cbfc ;_fdea .RegionSegment .BitmapHeight =_fcg ;_fdea .RegionSegment .BitmapWidth =_faec ;_fdea ._fge =nil ;_fdea .Bitmap =nil ;if _bdga !=nil {_fdea ._adeg =_bdga ;};
if _edab !=nil {_fdea ._edcf =_edab ;};_gfa .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049O\u004e\u005d\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073\u0020\u0053\u0044\u0041t\u003a\u0020\u0025\u0073",_fdea );
};func (_cagf *Header )readHeaderFlags ()error {const _dabb ="\u0072e\u0061d\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006c\u0061\u0067\u0073";_fedc ,_efbg :=_cagf .Reader .ReadBit ();if _efbg !=nil {return _be .Wrap (_efbg ,_dabb ,"r\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067");
};if _fedc !=0{_cagf .RetainFlag =true ;};_fedc ,_efbg =_cagf .Reader .ReadBit ();if _efbg !=nil {return _be .Wrap (_efbg ,_dabb ,"\u0070\u0061g\u0065\u0020\u0061s\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e");};if _fedc !=0{_cagf .PageAssociationFieldSize =true ;
};_aaad ,_efbg :=_cagf .Reader .ReadBits (6);if _efbg !=nil {return _be .Wrap (_efbg ,_dabb ,"\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065");};_cagf .Type =Type (int (_aaad ));return nil ;};func (_efbb *PageInformationSegment )readDefaultPixelValue ()error {_daad ,_dcef :=_efbb ._ccab .ReadBit ();
if _dcef !=nil {return _dcef ;};_efbb .DefaultPixelValue =uint8 (_daad &0xf);return nil ;};type EncodeInitializer interface{InitEncode ();};func NewGenericRegion (r _cb .StreamReader )*GenericRegion {return &GenericRegion {RegionSegment :NewRegionSegment (r ),_ebfb :r };
};func (_dacd *PatternDictionary )readPatternWidthAndHeight ()error {_eagg ,_fcgff :=_dacd ._gedc .ReadByte ();if _fcgff !=nil {return _fcgff ;};_dacd .HdpWidth =_eagg ;_eagg ,_fcgff =_dacd ._gedc .ReadByte ();if _fcgff !=nil {return _fcgff ;};_dacd .HdpHeight =_eagg ;
return nil ;};func (_fgfb *Header )readDataStartOffset (_cbfb _cb .StreamReader ,_ggfg OrganizationType ){if _ggfg ==OSequential {_fgfb .SegmentDataStartOffset =uint64 (_cbfb .StreamPosition ());};};type template0 struct{};func (_agda *TextRegion )encodeFlags (_bfga _cb .BinaryWriter )(_ebfef int ,_ebab error ){const _effb ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _ebab =_bfga .WriteBit (int (_agda .SbrTemplate ));_ebab !=nil {return _ebfef ,_be .Wrap (_ebab ,_effb ,"s\u0062\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};if _ ,_ebab =_bfga .WriteBits (uint64 (_agda .SbDsOffset ),5);_ebab !=nil {return _ebfef ,_be .Wrap (_ebab ,_effb ,"\u0073\u0062\u0044\u0073\u004f\u0066\u0066\u0073\u0065\u0074");
};if _ebab =_bfga .WriteBit (int (_agda .DefaultPixel ));_ebab !=nil {return _ebfef ,_be .Wrap (_ebab ,_effb ,"\u0044\u0065\u0066a\u0075\u006c\u0074\u0050\u0069\u0078\u0065\u006c");};if _ ,_ebab =_bfga .WriteBits (uint64 (_agda .CombinationOperator ),2);
_ebab !=nil {return _ebfef ,_be .Wrap (_ebab ,_effb ,"\u0043\u006f\u006d\u0062in\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072");};if _ebab =_bfga .WriteBit (int (_agda .IsTransposed ));_ebab !=nil {return _ebfef ,_be .Wrap (_ebab ,_effb ,"\u0069\u0073\u0020\u0074\u0072\u0061\u006e\u0073\u0070\u006f\u0073\u0065\u0064");
};if _ ,_ebab =_bfga .WriteBits (uint64 (_agda .ReferenceCorner ),2);_ebab !=nil {return _ebfef ,_be .Wrap (_ebab ,_effb ,"\u0072\u0065f\u0065\u0072\u0065n\u0063\u0065\u0020\u0063\u006f\u0072\u006e\u0065\u0072");};if _ ,_ebab =_bfga .WriteBits (uint64 (_agda .LogSBStrips ),2);
_ebab !=nil {return _ebfef ,_be .Wrap (_ebab ,_effb ,"L\u006f\u0067\u0053\u0042\u0053\u0074\u0072\u0069\u0070\u0073");};var _gfbeb int ;if _agda .UseRefinement {_gfbeb =1;};if _ebab =_bfga .WriteBit (_gfbeb );_ebab !=nil {return _ebfef ,_be .Wrap (_ebab ,_effb ,"\u0075\u0073\u0065\u0020\u0072\u0065\u0066\u0069\u006ee\u006d\u0065\u006e\u0074");
};_gfbeb =0;if _agda .IsHuffmanEncoded {_gfbeb =1;};if _ebab =_bfga .WriteBit (_gfbeb );_ebab !=nil {return _ebfef ,_be .Wrap (_ebab ,_effb ,"u\u0073\u0065\u0020\u0068\u0075\u0066\u0066\u006d\u0061\u006e");};_ebfef =2;return _ebfef ,nil ;};func (_ebg *Header )writeReferredToCount (_aaeg _cb .BinaryWriter )(_cfee int ,_egg error ){const _efbe ="w\u0072i\u0074\u0065\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0043ou\u006e\u0074";
_ebg .RTSNumbers =make ([]int ,len (_ebg .RTSegments ));for _ccce ,_edbf :=range _ebg .RTSegments {_ebg .RTSNumbers [_ccce ]=int (_edbf .SegmentNumber );};if len (_ebg .RTSNumbers )<=4{var _fcde byte ;if len (_ebg .RetainBits )>=1{_fcde =_ebg .RetainBits [0];
};_fcde |=byte (len (_ebg .RTSNumbers ))<<5;if _egg =_aaeg .WriteByte (_fcde );_egg !=nil {return 0,_be .Wrap (_egg ,_efbe ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return 1,nil ;};_ddeb :=uint32 (len (_ebg .RTSNumbers ));
_eaba :=make ([]byte ,4+_bb .Ceil (len (_ebg .RTSNumbers )+1,8));_ddeb |=0x7<<29;_gf .BigEndian .PutUint32 (_eaba ,_ddeb );copy (_eaba [1:],_ebg .RetainBits );_cfee ,_egg =_aaeg .Write (_eaba );if _egg !=nil {return 0,_be .Wrap (_egg ,_efbe ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");
};return _cfee ,nil ;};func _fgge (_fggd int )int {if _fggd ==0{return 0;};_fggd |=_fggd >>1;_fggd |=_fggd >>2;_fggd |=_fggd >>4;_fggd |=_fggd >>8;_fggd |=_fggd >>16;return (_fggd +1)>>1;};func (_afac *GenericRegion )overrideAtTemplate1 (_badg ,_gcad ,_eaee ,_cfcc ,_cfcg int )int {_badg &=0x1FF7;
if _afac .GBAtY [0]==0&&_afac .GBAtX [0]>=-int8 (_cfcg ){_badg |=(_cfcc >>uint (7-(int8 (_cfcg )+_afac .GBAtX [0]))&0x1)<<3;}else {_badg |=int (_afac .getPixel (_gcad +int (_afac .GBAtX [0]),_eaee +int (_afac .GBAtY [0])))<<3;};return _badg ;};func (_gfb *GenericRefinementRegion )GetRegionInfo ()*RegionSegment {return _gfb .RegionInfo };
func (_adg *SymbolDictionary )encodeFlags (_cga _cb .BinaryWriter )(_gcac int ,_bbed error ){const _aaaac ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _bbed =_cga .SkipBits (3);_bbed !=nil {return 0,_be .Wrap (_bbed ,_aaaac ,"\u0065\u006d\u0070\u0074\u0079\u0020\u0062\u0069\u0074\u0073");
};var _eca int ;if _adg .SdrTemplate > 0{_eca =1;};if _bbed =_cga .WriteBit (_eca );_bbed !=nil {return _gcac ,_be .Wrap (_bbed ,_aaaac ,"s\u0064\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_eca =0;if _adg .SdTemplate > 1{_eca =1;};if _bbed =_cga .WriteBit (_eca );
_bbed !=nil {return _gcac ,_be .Wrap (_bbed ,_aaaac ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_eca =0;if _adg .SdTemplate ==1||_adg .SdTemplate ==3{_eca =1;};if _bbed =_cga .WriteBit (_eca );_bbed !=nil {return _gcac ,_be .Wrap (_bbed ,_aaaac ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");
};_eca =0;if _adg ._bded {_eca =1;};if _bbed =_cga .WriteBit (_eca );_bbed !=nil {return _gcac ,_be .Wrap (_bbed ,_aaaac ,"\u0063\u006f\u0064in\u0067\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0065\u0064");
};_eca =0;if _adg ._bcaag {_eca =1;};if _bbed =_cga .WriteBit (_eca );_bbed !=nil {return _gcac ,_be .Wrap (_bbed ,_aaaac ,"\u0063\u006f\u0064\u0069ng\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0075\u0073\u0065\u0064");};_eca =0;if _adg .SdHuffAggInstanceSelection {_eca =1;
};if _bbed =_cga .WriteBit (_eca );_bbed !=nil {return _gcac ,_be .Wrap (_bbed ,_aaaac ,"\u0073\u0064\u0048\u0075\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074");};_eca =int (_adg .SdHuffBMSizeSelection );if _bbed =_cga .WriteBit (_eca );_bbed !=nil {return _gcac ,_be .Wrap (_bbed ,_aaaac ,"\u0073\u0064\u0048u\u0066\u0066\u0042\u006d\u0053\u0069\u007a\u0065");
};_eca =0;if _adg .SdHuffDecodeWidthSelection > 1{_eca =1;};if _bbed =_cga .WriteBit (_eca );_bbed !=nil {return _gcac ,_be .Wrap (_bbed ,_aaaac ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_eca =0;switch _adg .SdHuffDecodeWidthSelection {case 1,3:_eca =1;
};if _bbed =_cga .WriteBit (_eca );_bbed !=nil {return _gcac ,_be .Wrap (_bbed ,_aaaac ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_eca =0;if _adg .SdHuffDecodeHeightSelection > 1{_eca =1;};if _bbed =_cga .WriteBit (_eca );_bbed !=nil {return _gcac ,_be .Wrap (_bbed ,_aaaac ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");
};_eca =0;switch _adg .SdHuffDecodeHeightSelection {case 1,3:_eca =1;};if _bbed =_cga .WriteBit (_eca );_bbed !=nil {return _gcac ,_be .Wrap (_bbed ,_aaaac ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_eca =0;if _adg .UseRefinementAggregation {_eca =1;
};if _bbed =_cga .WriteBit (_eca );_bbed !=nil {return _gcac ,_be .Wrap (_bbed ,_aaaac ,"\u0073\u0064\u0052\u0065\u0066\u0041\u0067\u0067");};_eca =0;if _adg .IsHuffmanEncoded {_eca =1;};if _bbed =_cga .WriteBit (_eca );_bbed !=nil {return _gcac ,_be .Wrap (_bbed ,_aaaac ,"\u0073\u0064\u0048\u0075\u0066\u0066");
};return 2,nil ;};func (_egd *PageInformationSegment )readCombinationOperatorOverrideAllowed ()error {_fbcb ,_fggb :=_egd ._ccab .ReadBit ();if _fggb !=nil {return _fggb ;};if _fbcb ==1{_egd ._cged =true ;};return nil ;};func (_efdga *SymbolDictionary )Init (h *Header ,r _cb .StreamReader )error {_efdga .Header =h ;
_efdga ._agc =r ;return _efdga .parseHeader ();};func (_ffgd *GenericRegion )overrideAtTemplate2 (_cefc ,_bbb ,_ceac ,_cbae ,_deed int )int {_cefc &=0x3FB;if _ffgd .GBAtY [0]==0&&_ffgd .GBAtX [0]>=-int8 (_deed ){_cefc |=(_cbae >>uint (7-(int8 (_deed )+_ffgd .GBAtX [0]))&0x1)<<2;
}else {_cefc |=int (_ffgd .getPixel (_bbb +int (_ffgd .GBAtX [0]),_ceac +int (_ffgd .GBAtY [0])))<<2;};return _cefc ;};func (_dbee *PageInformationSegment )readContainsRefinement ()error {_fcgf ,_deg :=_dbee ._ccab .ReadBit ();if _deg !=nil {return _deg ;
};if _fcgf ==1{_dbee ._ebec =true ;};return nil ;};func (_dbd *GenericRefinementRegion )decodeTypicalPredictedLineTemplate0 (_gcgc ,_cag ,_ege ,_bfd ,_beb ,_cg ,_aeg ,_gae ,_gb int )error {var (_cbf ,_ddb ,_eegg ,_fe ,_ccad ,_afg int ;_afa byte ;_aba error ;
);if _gcgc > 0{_afa ,_aba =_dbd .RegionBitmap .GetByte (_aeg -_ege );if _aba !=nil {return _aba ;};_eegg =int (_afa );};if _gae > 0&&_gae <=_dbd .ReferenceBitmap .Height {_afa ,_aba =_dbd .ReferenceBitmap .GetByte (_gb -_bfd +_cg );if _aba !=nil {return _aba ;
};_fe =int (_afa )<<4;};if _gae >=0&&_gae < _dbd .ReferenceBitmap .Height {_afa ,_aba =_dbd .ReferenceBitmap .GetByte (_gb +_cg );if _aba !=nil {return _aba ;};_ccad =int (_afa )<<1;};if _gae > -2&&_gae < _dbd .ReferenceBitmap .Height -1{_afa ,_aba =_dbd .ReferenceBitmap .GetByte (_gb +_bfd +_cg );
if _aba !=nil {return _aba ;};_afg =int (_afa );};_cbf =((_eegg >>5)&0x6)|((_afg >>2)&0x30)|(_ccad &0x180)|(_fe &0xc00);var _begc int ;for _agge :=0;_agge < _beb ;_agge =_begc {var _ccg int ;_begc =_agge +8;var _gfbg int ;if _gfbg =_cag -_agge ;_gfbg > 8{_gfbg =8;
};_cfc :=_begc < _cag ;_eeb :=_begc < _dbd .ReferenceBitmap .Width ;_ea :=_cg +1;if _gcgc > 0{_afa =0;if _cfc {_afa ,_aba =_dbd .RegionBitmap .GetByte (_aeg -_ege +1);if _aba !=nil {return _aba ;};};_eegg =(_eegg <<8)|int (_afa );};if _gae > 0&&_gae <=_dbd .ReferenceBitmap .Height {var _aaa int ;
if _eeb {_afa ,_aba =_dbd .ReferenceBitmap .GetByte (_gb -_bfd +_ea );if _aba !=nil {return _aba ;};_aaa =int (_afa )<<4;};_fe =(_fe <<8)|_aaa ;};if _gae >=0&&_gae < _dbd .ReferenceBitmap .Height {var _de int ;if _eeb {_afa ,_aba =_dbd .ReferenceBitmap .GetByte (_gb +_ea );
if _aba !=nil {return _aba ;};_de =int (_afa )<<1;};_ccad =(_ccad <<8)|_de ;};if _gae > -2&&_gae < (_dbd .ReferenceBitmap .Height -1){_afa =0;if _eeb {_afa ,_aba =_dbd .ReferenceBitmap .GetByte (_gb +_bfd +_ea );if _aba !=nil {return _aba ;};};_afg =(_afg <<8)|int (_afa );
};for _faf :=0;_faf < _gfbg ;_faf ++{var _bbc int ;_bgf :=false ;_ffb :=(_cbf >>4)&0x1ff;if _ffb ==0x1ff{_bgf =true ;_bbc =1;}else if _ffb ==0x00{_bgf =true ;};if !_bgf {if _dbd ._fgc {_ddb =_dbd .overrideAtTemplate0 (_cbf ,_agge +_faf ,_gcgc ,_ccg ,_faf );
_dbd ._cfe .SetIndex (int32 (_ddb ));}else {_dbd ._cfe .SetIndex (int32 (_cbf ));};_bbc ,_aba =_dbd ._fa .DecodeBit (_dbd ._cfe );if _aba !=nil {return _aba ;};};_aadf :=uint (7-_faf );_ccg |=_bbc <<_aadf ;_cbf =((_cbf &0xdb6)<<1)|_bbc |(_eegg >>_aadf +5)&0x002|((_afg >>_aadf +2)&0x010)|((_ccad >>_aadf )&0x080)|((_fe >>_aadf )&0x400);
};_aba =_dbd .RegionBitmap .SetByte (_aeg ,byte (_ccg ));if _aba !=nil {return _aba ;};_aeg ++;_gb ++;};return nil ;};func (_ffac *SymbolDictionary )decodeNewSymbols (_aadd ,_bebfa uint32 ,_edgb *_cf .Bitmap ,_eggd ,_fdbce int32 )error {if _ffac ._beef ==nil {_ffac ._beef =_bgb (_ffac ._agc ,nil );
if _ffac ._bgeg ==nil {var _baff error ;_ffac ._bgeg ,_baff =_cba .New (_ffac ._agc );if _baff !=nil {return _baff ;};};if _ffac ._fdee ==nil {_ffac ._fdee =_cba .NewStats (65536,1);};};_ffac ._beef .setParameters (_ffac ._fdee ,_ffac ._bgeg ,_ffac .SdrTemplate ,_aadd ,_bebfa ,_edgb ,_eggd ,_fdbce ,false ,_ffac .SdrATX ,_ffac .SdrATY );
return _ffac .addSymbol (_ffac ._beef );};func (_ecec *SymbolDictionary )encodeATFlags (_cebd _cb .BinaryWriter )(_aafe int ,_efdgg error ){const _agab ="\u0065\u006e\u0063\u006f\u0064\u0065\u0041\u0054\u0046\u006c\u0061\u0067\u0073";if _ecec .IsHuffmanEncoded ||_ecec .SdTemplate !=0{return 0,nil ;
};_efad :=4;if _ecec .SdTemplate !=0{_efad =1;};for _bbg :=0;_bbg < _efad ;_bbg ++{if _efdgg =_cebd .WriteByte (byte (_ecec .SdATX [_bbg ]));_efdgg !=nil {return _aafe ,_be .Wrapf (_efdgg ,_agab ,"\u0053d\u0041\u0054\u0058\u005b\u0025\u0064]",_bbg );};
_aafe ++;if _efdgg =_cebd .WriteByte (byte (_ecec .SdATY [_bbg ]));_efdgg !=nil {return _aafe ,_be .Wrapf (_efdgg ,_agab ,"\u0053d\u0041\u0054\u0059\u005b\u0025\u0064]",_bbg );};_aafe ++;};return _aafe ,nil ;};var _ _cff .BasicTabler =&TableSegment {};
type RegionSegment struct{_agaa _cb .StreamReader ;BitmapWidth uint32 ;BitmapHeight uint32 ;XLocation uint32 ;YLocation uint32 ;CombinaionOperator _cf .CombinationOperator ;};func (_gffb *TextRegion )decodeRdh ()(int64 ,error ){const _feege ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064h";
if _gffb .IsHuffmanEncoded {if _gffb .SbHuffRDHeight ==3{if _gffb ._dfeeb ==nil {var (_eaggd int ;_dfba error ;);if _gffb .SbHuffFS ==3{_eaggd ++;};if _gffb .SbHuffDS ==3{_eaggd ++;};if _gffb .SbHuffDT ==3{_eaggd ++;};if _gffb .SbHuffRDWidth ==3{_eaggd ++;
};_gffb ._dfeeb ,_dfba =_gffb .getUserTable (_eaggd );if _dfba !=nil {return 0,_be .Wrap (_dfba ,_feege ,"");};};return _gffb ._dfeeb .Decode (_gffb ._fbe );};_acbc ,_fccd :=_cff .GetStandardTable (14+int (_gffb .SbHuffRDHeight ));if _fccd !=nil {return 0,_be .Wrap (_fccd ,_feege ,"");
};return _acbc .Decode (_gffb ._fbe );};_abcd ,_gaac :=_gffb ._bffe .DecodeInt (_gffb ._eeeg );if _gaac !=nil {return 0,_be .Wrap (_gaac ,_feege ,"");};return int64 (_abcd ),nil ;};func (_gee *GenericRegion )readGBAtPixels (_gagb int )error {const _eba ="\u0072\u0065\u0061\u0064\u0047\u0042\u0041\u0074\u0050i\u0078\u0065\u006c\u0073";
_gee .GBAtX =make ([]int8 ,_gagb );_gee .GBAtY =make ([]int8 ,_gagb );for _dfb :=0;_dfb < _gagb ;_dfb ++{_gga ,_ggaa :=_gee ._ebfb .ReadByte ();if _ggaa !=nil {return _be .Wrapf (_ggaa ,_eba ,"\u0058\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_dfb );
};_gee .GBAtX [_dfb ]=int8 (_gga );_gga ,_ggaa =_gee ._ebfb .ReadByte ();if _ggaa !=nil {return _be .Wrapf (_ggaa ,_eba ,"\u0059\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_dfb );};_gee .GBAtY [_dfb ]=int8 (_gga );};return nil ;};func (_bbdd *TextRegion )symbolIDCodeLengths ()error {var (_fcfgg []*_cff .Code ;
_eabb uint64 ;_ccge _cff .Tabler ;_gfdb error ;);for _deea :=0;_deea < 35;_deea ++{_eabb ,_gfdb =_bbdd ._fbe .ReadBits (4);if _gfdb !=nil {return _gfdb ;};_egab :=int (_eabb &0xf);if _egab > 0{_fcfgg =append (_fcfgg ,_cff .NewCode (int32 (_egab ),0,int32 (_deea ),false ));
};};_ccge ,_gfdb =_cff .NewFixedSizeTable (_fcfgg );if _gfdb !=nil {return _gfdb ;};var (_fege int64 ;_bdbg uint32 ;_dfd []*_cff .Code ;_cecbc int64 ;);for _bdbg < _bbdd .NumberOfSymbols {_cecbc ,_gfdb =_ccge .Decode (_bbdd ._fbe );if _gfdb !=nil {return _gfdb ;
};if _cecbc < 32{if _cecbc > 0{_dfd =append (_dfd ,_cff .NewCode (int32 (_cecbc ),0,int32 (_bdbg ),false ));};_fege =_cecbc ;_bdbg ++;}else {var _edac ,_caag int64 ;switch _cecbc {case 32:_eabb ,_gfdb =_bbdd ._fbe .ReadBits (2);if _gfdb !=nil {return _gfdb ;
};_edac =3+int64 (_eabb );if _bdbg > 0{_caag =_fege ;};case 33:_eabb ,_gfdb =_bbdd ._fbe .ReadBits (3);if _gfdb !=nil {return _gfdb ;};_edac =3+int64 (_eabb );case 34:_eabb ,_gfdb =_bbdd ._fbe .ReadBits (7);if _gfdb !=nil {return _gfdb ;};_edac =11+int64 (_eabb );
};for _dfff :=0;_dfff < int (_edac );_dfff ++{if _caag > 0{_dfd =append (_dfd ,_cff .NewCode (int32 (_caag ),0,int32 (_bdbg ),false ));};_bdbg ++;};};};_bbdd ._fbe .Align ();_bbdd ._egfg ,_gfdb =_cff .NewFixedSizeTable (_dfd );return _gfdb ;};func (_ad *GenericRefinementRegion )decodeTypicalPredictedLine (_ebf ,_efb ,_fd ,_dca ,_gda ,_dbf int )error {_cd :=_ebf -int (_ad .ReferenceDY );
_acf :=_ad .ReferenceBitmap .GetByteIndex (0,_cd );_gfd :=_ad .RegionBitmap .GetByteIndex (0,_ebf );var _agg error ;switch _ad .TemplateID {case 0:_agg =_ad .decodeTypicalPredictedLineTemplate0 (_ebf ,_efb ,_fd ,_dca ,_gda ,_dbf ,_gfd ,_cd ,_acf );case 1:_agg =_ad .decodeTypicalPredictedLineTemplate1 (_ebf ,_efb ,_fd ,_dca ,_gda ,_dbf ,_gfd ,_cd ,_acf );
};return _agg ;};func (_bcaa *Header )pageSize ()uint {if _bcaa .PageAssociation <=255{return 1;};return 4;};func (_bcegf *TextRegion )String ()string {_ccabe :=&_af .Builder {};_ccabe .WriteString ("\u000a[\u0054E\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u000a");
_ccabe .WriteString (_bcegf .RegionInfo .String ()+"\u000a");_ccabe .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053br\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0025\u0076\u000a",_bcegf .SbrTemplate ));_ccabe .WriteString (_f .Sprintf ("\u0009-\u0020S\u0062\u0044\u0073\u004f\u0066f\u0073\u0065t\u003a\u0020\u0025\u0076\u000a",_bcegf .SbDsOffset ));
_ccabe .WriteString (_f .Sprintf ("\t\u002d \u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0050i\u0078\u0065\u006c\u003a %\u0076\u000a",_bcegf .DefaultPixel ));_ccabe .WriteString (_f .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0076\u000a",_bcegf .CombinationOperator ));
_ccabe .WriteString (_f .Sprintf ("\t\u002d \u0049\u0073\u0054\u0072\u0061\u006e\u0073\u0070o\u0073\u0065\u0064\u003a %\u0076\u000a",_bcegf .IsTransposed ));_ccabe .WriteString (_f .Sprintf ("\u0009\u002d\u0020Re\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0043\u006f\u0072\u006e\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_bcegf .ReferenceCorner ));
_ccabe .WriteString (_f .Sprintf ("\t\u002d\u0020\u0055\u0073eR\u0065f\u0069\u006e\u0065\u006d\u0065n\u0074\u003a\u0020\u0025\u0076\u000a",_bcegf .UseRefinement ));_ccabe .WriteString (_f .Sprintf ("\u0009-\u0020\u0049\u0073\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045n\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0076\u000a",_bcegf .IsHuffmanEncoded ));
if _bcegf .IsHuffmanEncoded {_ccabe .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_bcegf .SbHuffRSize ));_ccabe .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0059:\u0020\u0025\u0076\u000a",_bcegf .SbHuffRDY ));
_ccabe .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0058:\u0020\u0025\u0076\u000a",_bcegf .SbHuffRDX ));_ccabe .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069\u0067\u0068\u0074\u003a\u0020\u0025v\u000a",_bcegf .SbHuffRDHeight ));
_ccabe .WriteString (_f .Sprintf ("\t\u002d\u0020\u0053\u0062Hu\u0066f\u0052\u0044\u0057\u0069\u0064t\u0068\u003a\u0020\u0025\u0076\u000a",_bcegf .SbHuffRDWidth ));_ccabe .WriteString (_f .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0054\u003a\u0020\u0025\u0076\u000a",_bcegf .SbHuffDT ));
_ccabe .WriteString (_f .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0053\u003a\u0020\u0025\u0076\u000a",_bcegf .SbHuffDS ));_ccabe .WriteString (_f .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0046\u0053\u003a\u0020\u0025\u0076\u000a",_bcegf .SbHuffFS ));
};_ccabe .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_bcegf .SbrATX ));_ccabe .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0059:\u0020\u0025\u0076\u000a",_bcegf .SbrATY ));
_ccabe .WriteString (_f .Sprintf ("\u0009\u002d\u0020N\u0075\u006d\u0062\u0065r\u004f\u0066\u0053\u0079\u006d\u0062\u006fl\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_bcegf .NumberOfSymbolInstances ));_ccabe .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_bcegf .SbrATX ));
return _ccabe .String ();};func (_faef *PageInformationSegment )Encode (w _cb .BinaryWriter )(_aefbc int ,_bddbc error ){const _dcc ="\u0050\u0061g\u0065\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u002e\u0045\u006eco\u0064\u0065";
_ggbbe :=make ([]byte ,4);_gf .BigEndian .PutUint32 (_ggbbe ,uint32 (_faef .PageBMWidth ));_aefbc ,_bddbc =w .Write (_ggbbe );if _bddbc !=nil {return _aefbc ,_be .Wrap (_bddbc ,_dcc ,"\u0077\u0069\u0064t\u0068");};_gf .BigEndian .PutUint32 (_ggbbe ,uint32 (_faef .PageBMHeight ));
var _ddfe int ;_ddfe ,_bddbc =w .Write (_ggbbe );if _bddbc !=nil {return _ddfe +_aefbc ,_be .Wrap (_bddbc ,_dcc ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_aefbc +=_ddfe ;_gf .BigEndian .PutUint32 (_ggbbe ,uint32 (_faef .ResolutionX ));_ddfe ,_bddbc =w .Write (_ggbbe );
if _bddbc !=nil {return _ddfe +_aefbc ,_be .Wrap (_bddbc ,_dcc ,"\u0078\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_aefbc +=_ddfe ;_gf .BigEndian .PutUint32 (_ggbbe ,uint32 (_faef .ResolutionY ));if _ddfe ,_bddbc =w .Write (_ggbbe );
_bddbc !=nil {return _ddfe +_aefbc ,_be .Wrap (_bddbc ,_dcc ,"\u0079\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_aefbc +=_ddfe ;if _bddbc =_faef .encodeFlags (w );_bddbc !=nil {return _aefbc ,_be .Wrap (_bddbc ,_dcc ,"");};_aefbc ++;
if _ddfe ,_bddbc =_faef .encodeStripingInformation (w );_bddbc !=nil {return _aefbc ,_be .Wrap (_bddbc ,_dcc ,"");};_aefbc +=_ddfe ;return _aefbc ,nil ;};var (_dcdg Segmenter ;_aaef =map[Type ]func ()Segmenter {TSymbolDictionary :func ()Segmenter {return &SymbolDictionary {}},TIntermediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateLosslessTextRegion :func ()Segmenter {return &TextRegion {}},TPatternDictionary :func ()Segmenter {return &PatternDictionary {}},TIntermediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateLosslessHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TIntermediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateLosslessGenericRegion :func ()Segmenter {return &GenericRegion {}},TIntermediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateLosslessGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TPageInformation :func ()Segmenter {return &PageInformationSegment {}},TEndOfPage :func ()Segmenter {return _dcdg },TEndOfStrip :func ()Segmenter {return &EndOfStripe {}},TEndOfFile :func ()Segmenter {return _dcdg },TProfiles :func ()Segmenter {return _dcdg },TTables :func ()Segmenter {return &TableSegment {}},TExtension :func ()Segmenter {return _dcdg },TBitmap :func ()Segmenter {return _dcdg }};
);func (_cdg *PageInformationSegment )CombinationOperator ()_cf .CombinationOperator {return _cdg ._aeee };func (_gfg *GenericRegion )parseHeader ()(_gebd error ){_gfa .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052I\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0050\u0061\u0072s\u0069\u006e\u0067\u0048\u0065\u0061\u0064e\u0072\u002e\u002e\u002e");
defer func (){if _gebd !=nil {_gfa .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e]\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065r\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0077\u0069th\u0020\u0065\u0072\u0072\u006f\u0072\u002e\u0020\u0025\u0076",_gebd );
}else {_gfa .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049C\u002d\u0052\u0045G\u0049\u004f\u004e]\u0020\u0050a\u0072\u0073\u0069\u006e\u0067\u0048e\u0061de\u0072\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0053\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079\u002e\u002e\u002e");
};}();var (_fad int ;_aadb uint64 ;);if _gebd =_gfg .RegionSegment .parseHeader ();_gebd !=nil {return _gebd ;};if _ ,_gebd =_gfg ._ebfb .ReadBits (3);_gebd !=nil {return _gebd ;};_fad ,_gebd =_gfg ._ebfb .ReadBit ();if _gebd !=nil {return _gebd ;};if _fad ==1{_gfg .UseExtTemplates =true ;
};_fad ,_gebd =_gfg ._ebfb .ReadBit ();if _gebd !=nil {return _gebd ;};if _fad ==1{_gfg .IsTPGDon =true ;};_aadb ,_gebd =_gfg ._ebfb .ReadBits (2);if _gebd !=nil {return _gebd ;};_gfg .GBTemplate =byte (_aadb &0xf);_fad ,_gebd =_gfg ._ebfb .ReadBit ();
if _gebd !=nil {return _gebd ;};if _fad ==1{_gfg .IsMMREncoded =true ;};if !_gfg .IsMMREncoded {_fcd :=1;if _gfg .GBTemplate ==0{_fcd =4;if _gfg .UseExtTemplates {_fcd =12;};};if _gebd =_gfg .readGBAtPixels (_fcd );_gebd !=nil {return _gebd ;};};if _gebd =_gfg .computeSegmentDataStructure ();
_gebd !=nil {return _gebd ;};_gfa .Log .Trace ("\u0025\u0073",_gfg );return nil ;};func (_fdeg *TableSegment )HtHigh ()int32 {return _fdeg ._dffe };type Segmenter interface{Init (_febga *Header ,_ccgcf _cb .StreamReader )error ;};func (_abgd *HalftoneRegion )parseHeader ()error {if _fee :=_abgd .RegionSegment .parseHeader ();
_fee !=nil {return _fee ;};_eaed ,_bdgg :=_abgd ._ggf .ReadBit ();if _bdgg !=nil {return _bdgg ;};_abgd .HDefaultPixel =int8 (_eaed );_ccd ,_bdgg :=_abgd ._ggf .ReadBits (3);if _bdgg !=nil {return _bdgg ;};_abgd .CombinationOperator =_cf .CombinationOperator (_ccd &0xf);
_eaed ,_bdgg =_abgd ._ggf .ReadBit ();if _bdgg !=nil {return _bdgg ;};if _eaed ==1{_abgd .HSkipEnabled =true ;};_ccd ,_bdgg =_abgd ._ggf .ReadBits (2);if _bdgg !=nil {return _bdgg ;};_abgd .HTemplate =byte (_ccd &0xf);_eaed ,_bdgg =_abgd ._ggf .ReadBit ();
if _bdgg !=nil {return _bdgg ;};if _eaed ==1{_abgd .IsMMREncoded =true ;};_ccd ,_bdgg =_abgd ._ggf .ReadBits (32);if _bdgg !=nil {return _bdgg ;};_abgd .HGridWidth =uint32 (_ccd &_c .MaxUint32 );_ccd ,_bdgg =_abgd ._ggf .ReadBits (32);if _bdgg !=nil {return _bdgg ;
};_abgd .HGridHeight =uint32 (_ccd &_c .MaxUint32 );_ccd ,_bdgg =_abgd ._ggf .ReadBits (32);if _bdgg !=nil {return _bdgg ;};_abgd .HGridX =int32 (_ccd &_c .MaxInt32 );_ccd ,_bdgg =_abgd ._ggf .ReadBits (32);if _bdgg !=nil {return _bdgg ;};_abgd .HGridY =int32 (_ccd &_c .MaxInt32 );
_ccd ,_bdgg =_abgd ._ggf .ReadBits (16);if _bdgg !=nil {return _bdgg ;};_abgd .HRegionX =uint16 (_ccd &_c .MaxUint16 );_ccd ,_bdgg =_abgd ._ggf .ReadBits (16);if _bdgg !=nil {return _bdgg ;};_abgd .HRegionY =uint16 (_ccd &_c .MaxUint16 );if _bdgg =_abgd .computeSegmentDataStructure ();
_bdgg !=nil {return _bdgg ;};return _abgd .checkInput ();};func (_abc *PageInformationSegment )encodeStripingInformation (_cagd _cb .BinaryWriter )(_edfd int ,_cdgg error ){const _efdg ="\u0065n\u0063\u006f\u0064\u0065S\u0074\u0072\u0069\u0070\u0069n\u0067I\u006ef\u006f\u0072\u006d\u0061\u0074\u0069\u006fn";
if !_abc .IsStripe {if _edfd ,_cdgg =_cagd .Write ([]byte {0x00,0x00});_cdgg !=nil {return 0,_be .Wrap (_cdgg ,_efdg ,"n\u006f\u0020\u0073\u0074\u0072\u0069\u0070\u0069\u006e\u0067");};return _edfd ,nil ;};_fbc :=make ([]byte ,2);_gf .BigEndian .PutUint16 (_fbc ,_abc .MaxStripeSize |1<<15);
if _edfd ,_cdgg =_cagd .Write (_fbc );_cdgg !=nil {return 0,_be .Wrapf (_cdgg ,_efdg ,"\u0073\u0074\u0072i\u0070\u0069\u006e\u0067\u003a\u0020\u0025\u0064",_abc .MaxStripeSize );};return _edfd ,nil ;};func (_bbad *GenericRegion )overrideAtTemplate3 (_adef ,_gbdf ,_eaf ,_fde ,_ede int )int {_adef &=0x3EF;
if _bbad .GBAtY [0]==0&&_bbad .GBAtX [0]>=-int8 (_ede ){_adef |=(_fde >>uint (7-(int8 (_ede )+_bbad .GBAtX [0]))&0x1)<<4;}else {_adef |=int (_bbad .getPixel (_gbdf +int (_bbad .GBAtX [0]),_eaf +int (_bbad .GBAtY [0])))<<4;};return _adef ;};func (_acfaa *SymbolDictionary )retrieveImportSymbols ()error {for _ ,_fgbab :=range _acfaa .Header .RTSegments {if _fgbab .Type ==0{_cbab ,_bdde :=_fgbab .GetSegmentData ();
if _bdde !=nil {return _bdde ;};_eggf ,_gage :=_cbab .(*SymbolDictionary );if !_gage {return _f .Errorf ("\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0044\u0061\u0074a\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u003a\u0020%\u0054",_cbab );
};_eabe ,_bdde :=_eggf .GetDictionary ();if _bdde !=nil {return _f .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064 \u0073\u0065\u0067m\u0065\u006e\u0074 \u0077\u0069t\u0068\u0020\u0069\u006e\u0064\u0065x\u003a %\u0064\u0020\u0067\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0073",_fgbab .SegmentNumber ,_bdde .Error ());
};_acfaa ._cdggc =append (_acfaa ._cdggc ,_eabe ...);_acfaa ._cbff +=_eggf .NumberOfExportedSymbols ;};};return nil ;};func (_fged *SymbolDictionary )setAtPixels ()error {if _fged .IsHuffmanEncoded {return nil ;};_bddc :=1;if _fged .SdTemplate ==0{_bddc =4;
};if _dgcf :=_fged .readAtPixels (_bddc );_dgcf !=nil {return _dgcf ;};return nil ;};func (_gcbe *TextRegion )decodeID ()(int64 ,error ){if _gcbe .IsHuffmanEncoded {if _gcbe ._egfg ==nil {_cfgcc ,_acga :=_gcbe ._fbe .ReadBits (byte (_gcbe ._gfae ));return int64 (_cfgcc ),_acga ;
};return _gcbe ._egfg .Decode (_gcbe ._fbe );};return _gcbe ._bffe .DecodeIAID (uint64 (_gcbe ._gfae ),_gcbe ._gcgaa );};func (_gagf *GenericRegion )setParametersMMR (_eacd bool ,_baeg ,_gge int64 ,_edd ,_egaaa uint32 ,_eaea byte ,_deb ,_gfeb bool ,_gaf ,_ecee []int8 ){_gagf .DataOffset =_baeg ;
_gagf .DataLength =_gge ;_gagf .RegionSegment =&RegionSegment {};_gagf .RegionSegment .BitmapHeight =_edd ;_gagf .RegionSegment .BitmapWidth =_egaaa ;_gagf .GBTemplate =_eaea ;_gagf .IsMMREncoded =_eacd ;_gagf .IsTPGDon =_deb ;_gagf .GBAtX =_gaf ;_gagf .GBAtY =_ecee ;
};func (_fggda *PatternDictionary )extractPatterns (_gfbe *_cf .Bitmap )error {var _eaacd int ;_beca :=make ([]*_cf .Bitmap ,_fggda .GrayMax +1);for _eaacd <=int (_fggda .GrayMax ){_fcgd :=int (_fggda .HdpWidth )*_eaacd ;_dac :=_g .Rect (_fcgd ,0,_fcgd +int (_fggda .HdpWidth ),int (_fggda .HdpHeight ));
_gcba ,_cdab :=_cf .Extract (_dac ,_gfbe );if _cdab !=nil {return _cdab ;};_beca [_eaacd ]=_gcba ;_eaacd ++;};_fggda .Patterns =_beca ;return nil ;};type PageInformationSegment struct{_ccab _cb .StreamReader ;PageBMHeight int ;PageBMWidth int ;ResolutionX int ;
ResolutionY int ;_cged bool ;_aeee _cf .CombinationOperator ;_gcec bool ;DefaultPixelValue uint8 ;_ebec bool ;IsLossless bool ;IsStripe bool ;MaxStripeSize uint16 ;};func (_dda *Header )CleanSegmentData (){if _dda .SegmentData !=nil {_dda .SegmentData =nil ;
};};func (_abab *GenericRegion )decodeTemplate2 (_afaf ,_abad ,_fdgg int ,_abga ,_egaa int )(_bcgg error ){const _febb ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0032";var (_fbf ,_eacc int ;_gecb ,_ebd int ;_efdb byte ;
_gdg ,_age int ;);if _afaf >=1{_efdb ,_bcgg =_abab .Bitmap .GetByte (_egaa );if _bcgg !=nil {return _be .Wrap (_bcgg ,_febb ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0031");};_gecb =int (_efdb );};if _afaf >=2{_efdb ,_bcgg =_abab .Bitmap .GetByte (_egaa -_abab .Bitmap .RowStride );
if _bcgg !=nil {return _be .Wrap (_bcgg ,_febb ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0032");};_ebd =int (_efdb )<<4;};_fbf =(_gecb >>3&0x7c)|(_ebd >>3&0x380);for _eeef :=0;_eeef < _fdgg ;_eeef =_gdg {var (_fgeb byte ;
_baa int ;);_gdg =_eeef +8;if _egeg :=_abad -_eeef ;_egeg > 8{_baa =8;}else {_baa =_egeg ;};if _afaf > 0{_gecb <<=8;if _gdg < _abad {_efdb ,_bcgg =_abab .Bitmap .GetByte (_egaa +1);if _bcgg !=nil {return _be .Wrap (_bcgg ,_febb ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0030");
};_gecb |=int (_efdb );};};if _afaf > 1{_ebd <<=8;if _gdg < _abad {_efdb ,_bcgg =_abab .Bitmap .GetByte (_egaa -_abab .Bitmap .RowStride +1);if _bcgg !=nil {return _be .Wrap (_bcgg ,_febb ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0031");
};_ebd |=int (_efdb )<<4;};};for _baee :=0;_baee < _baa ;_baee ++{_bbcf :=uint (10-_baee );if _abab ._cbcb {_eacc =_abab .overrideAtTemplate2 (_fbf ,_eeef +_baee ,_afaf ,int (_fgeb ),_baee );_abab ._adeg .SetIndex (int32 (_eacc ));}else {_abab ._adeg .SetIndex (int32 (_fbf ));
};_age ,_bcgg =_abab ._edcf .DecodeBit (_abab ._adeg );if _bcgg !=nil {return _be .Wrap (_bcgg ,_febb ,"");};_fgeb |=byte (_age <<uint (7-_baee ));_fbf =((_fbf &0x1bd)<<1)|_age |((_gecb >>_bbcf )&0x4)|((_ebd >>_bbcf )&0x80);};if _dfge :=_abab .Bitmap .SetByte (_abga ,_fgeb );
_dfge !=nil {return _be .Wrap (_dfge ,_febb ,"");};_abga ++;_egaa ++;};return nil ;};func (_gcda *HalftoneRegion )grayScaleDecoding (_afc int )([][]int ,error ){var (_geef []int8 ;_agf []int8 ;);if !_gcda .IsMMREncoded {_geef =make ([]int8 ,4);_agf =make ([]int8 ,4);
if _gcda .HTemplate <=1{_geef [0]=3;}else if _gcda .HTemplate >=2{_geef [0]=2;};_agf [0]=-1;_geef [1]=-3;_agf [1]=-1;_geef [2]=2;_agf [2]=-2;_geef [3]=-2;_agf [3]=-2;};_cccd :=make ([]*_cf .Bitmap ,_afc );_caaf :=NewGenericRegion (_gcda ._ggf );_caaf .setParametersMMR (_gcda .IsMMREncoded ,_gcda .DataOffset ,_gcda .DataLength ,_gcda .HGridHeight ,_gcda .HGridWidth ,_gcda .HTemplate ,false ,_gcda .HSkipEnabled ,_geef ,_agf );
_eabf :=_afc -1;var _eddd error ;_cccd [_eabf ],_eddd =_caaf .GetRegionBitmap ();if _eddd !=nil {return nil ,_eddd ;};for _eabf > 0{_eabf --;_caaf .Bitmap =nil ;_cccd [_eabf ],_eddd =_caaf .GetRegionBitmap ();if _eddd !=nil {return nil ,_eddd ;};if _eddd =_gcda .combineGrayscalePlanes (_cccd ,_eabf );
_eddd !=nil {return nil ,_eddd ;};};return _gcda .computeGrayScalePlanes (_cccd ,_afc );};type EndOfStripe struct{_eeg _cb .StreamReader ;_cc int ;};type TextRegion struct{_fbe _cb .StreamReader ;RegionInfo *RegionSegment ;SbrTemplate int8 ;SbDsOffset int8 ;
DefaultPixel int8 ;CombinationOperator _cf .CombinationOperator ;IsTransposed int8 ;ReferenceCorner int16 ;LogSBStrips int16 ;UseRefinement bool ;IsHuffmanEncoded bool ;SbHuffRSize int8 ;SbHuffRDY int8 ;SbHuffRDX int8 ;SbHuffRDHeight int8 ;SbHuffRDWidth int8 ;
SbHuffDT int8 ;SbHuffDS int8 ;SbHuffFS int8 ;SbrATX []int8 ;SbrATY []int8 ;NumberOfSymbolInstances uint32 ;_befe int64 ;SbStrips int8 ;NumberOfSymbols uint32 ;RegionBitmap *_cf .Bitmap ;Symbols []*_cf .Bitmap ;_bffe *_cba .Decoder ;_gaab *GenericRefinementRegion ;
_fbde *_cba .DecoderStats ;_baged *_cba .DecoderStats ;_aabd *_cba .DecoderStats ;_cadc *_cba .DecoderStats ;_gddg *_cba .DecoderStats ;_gbcb *_cba .DecoderStats ;_eeeg *_cba .DecoderStats ;_gcgaa *_cba .DecoderStats ;_fefb *_cba .DecoderStats ;_adbg *_cba .DecoderStats ;
_dgdd *_cba .DecoderStats ;_gfae int8 ;_egfg *_cff .FixedSizeTable ;Header *Header ;_eegga _cff .Tabler ;_fffa _cff .Tabler ;_cecfe _cff .Tabler ;_bfbf _cff .Tabler ;_dfeeb _cff .Tabler ;_ffgc _cff .Tabler ;_cbfcb _cff .Tabler ;_bbff _cff .Tabler ;_cfgf ,_caedb map[int ]int ;
_aegfg []int ;_fdba *_cf .Points ;_cbcf *_cf .Bitmaps ;_fcdb *_bb .IntSlice ;_ebef ,_fdgd int ;_dfea *_cf .Boxes ;};func (_cecf *RegionSegment )Encode (w _cb .BinaryWriter )(_ced int ,_bfa error ){const _fageb ="R\u0065g\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065n\u0074\u002e\u0045\u006eco\u0064\u0065";
_afaa :=make ([]byte ,4);_gf .BigEndian .PutUint32 (_afaa ,_cecf .BitmapWidth );_ced ,_bfa =w .Write (_afaa );if _bfa !=nil {return 0,_be .Wrap (_bfa ,_fageb ,"\u0057\u0069\u0064t\u0068");};_gf .BigEndian .PutUint32 (_afaa ,_cecf .BitmapHeight );var _ddgb int ;
_ddgb ,_bfa =w .Write (_afaa );if _bfa !=nil {return 0,_be .Wrap (_bfa ,_fageb ,"\u0048\u0065\u0069\u0067\u0068\u0074");};_ced +=_ddgb ;_gf .BigEndian .PutUint32 (_afaa ,_cecf .XLocation );_ddgb ,_bfa =w .Write (_afaa );if _bfa !=nil {return 0,_be .Wrap (_bfa ,_fageb ,"\u0058L\u006f\u0063\u0061\u0074\u0069\u006fn");
};_ced +=_ddgb ;_gf .BigEndian .PutUint32 (_afaa ,_cecf .YLocation );_ddgb ,_bfa =w .Write (_afaa );if _bfa !=nil {return 0,_be .Wrap (_bfa ,_fageb ,"\u0059L\u006f\u0063\u0061\u0074\u0069\u006fn");};_ced +=_ddgb ;if _bfa =w .WriteByte (byte (_cecf .CombinaionOperator )&0x07);
_bfa !=nil {return 0,_be .Wrap (_bfa ,_fageb ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};_ced ++;return _ced ,nil ;};func (_fffb *SymbolDictionary )readRefinementAtPixels (_adac int )error {_fffb .SdrATX =make ([]int8 ,_adac );
_fffb .SdrATY =make ([]int8 ,_adac );var (_ebcga byte ;_dacg error ;);for _cddce :=0;_cddce < _adac ;_cddce ++{_ebcga ,_dacg =_fffb ._agc .ReadByte ();if _dacg !=nil {return _dacg ;};_fffb .SdrATX [_cddce ]=int8 (_ebcga );_ebcga ,_dacg =_fffb ._agc .ReadByte ();
if _dacg !=nil {return _dacg ;};_fffb .SdrATY [_cddce ]=int8 (_ebcga );};return nil ;};type Pager interface{GetSegment (int )(*Header ,error );GetBitmap ()(*_cf .Bitmap ,error );};func (_ebad *TextRegion )InitEncode (globalSymbolsMap ,localSymbolsMap map[int ]int ,comps []int ,inLL *_cf .Points ,symbols *_cf .Bitmaps ,classIDs *_bb .IntSlice ,boxes *_cf .Boxes ,width ,height ,symBits int ){_ebad .RegionInfo =&RegionSegment {BitmapWidth :uint32 (width ),BitmapHeight :uint32 (height )};
_ebad ._cfgf =globalSymbolsMap ;_ebad ._caedb =localSymbolsMap ;_ebad ._aegfg =comps ;_ebad ._fdba =inLL ;_ebad ._cbcf =symbols ;_ebad ._fcdb =classIDs ;_ebad ._dfea =boxes ;_ebad ._fdgd =symBits ;};func (_ggeff *Header )readSegmentPageAssociation (_dggb Documenter ,_cffd _cb .StreamReader ,_edfb uint64 ,_ecca ...int )(_bccg error ){const _bcb ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074P\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061t\u0069\u006f\u006e";
if !_ggeff .PageAssociationFieldSize {_agadg ,_fcba :=_cffd .ReadBits (8);if _fcba !=nil {return _be .Wrap (_fcba ,_bcb ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_ggeff .PageAssociation =int (_agadg &0xFF);}else {_eage ,_gdcc :=_cffd .ReadBits (32);
if _gdcc !=nil {return _be .Wrap (_gdcc ,_bcb ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_ggeff .PageAssociation =int (_eage &_c .MaxInt32 );};if _edfb ==0{return nil ;};if _ggeff .PageAssociation !=0{_dgfb ,_fedd :=_dggb .GetPage (_ggeff .PageAssociation );
if _fedd !=nil {return _be .Wrap (_fedd ,_bcb ,"\u0061s\u0073\u006f\u0063\u0069a\u0074\u0065\u0064\u0020\u0070a\u0067e\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006ed");};var _cbaa int ;for _cebfd :=uint64 (0);_cebfd < _edfb ;_cebfd ++{_cbaa =_ecca [_cebfd ];
_ggeff .RTSegments [_cebfd ],_fedd =_dgfb .GetSegment (_cbaa );if _fedd !=nil {var _ggde error ;_ggeff .RTSegments [_cebfd ],_ggde =_dggb .GetGlobalSegment (_cbaa );if _ggde !=nil {return _be .Wrapf (_fedd ,_bcb ,"\u0072\u0065\u0066\u0065\u0072\u0065n\u0063\u0065\u0020s\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064\u0020\u0061\u0074\u0020pa\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0072\u0020\u0069\u006e\u0020\u0067\u006c\u006f\u0062\u0061\u006c\u0073",_ggeff .PageAssociation );
};};};return nil ;};for _bece :=uint64 (0);_bece < _edfb ;_bece ++{_ggeff .RTSegments [_bece ],_bccg =_dggb .GetGlobalSegment (_ecca [_bece ]);if _bccg !=nil {return _be .Wrapf (_bccg ,_bcb ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u003a\u0020\u0027\u0025d\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064",_ecca [_bece ]);
};};return nil ;};func (_ddgd *SymbolDictionary )decodeDifferenceWidth ()(int64 ,error ){if _ddgd .IsHuffmanEncoded {switch _ddgd .SdHuffDecodeWidthSelection {case 0:_gbdb ,_cadg :=_cff .GetStandardTable (2);if _cadg !=nil {return 0,_cadg ;};return _gbdb .Decode (_ddgd ._agc );
case 1:_ggca ,_cgbd :=_cff .GetStandardTable (3);if _cgbd !=nil {return 0,_cgbd ;};return _ggca .Decode (_ddgd ._agc );case 3:if _ddgd ._ffgf ==nil {var _cbef int ;if _ddgd .SdHuffDecodeHeightSelection ==3{_cbef ++;};_gdgg ,_gfc :=_ddgd .getUserTable (_cbef );
if _gfc !=nil {return 0,_gfc ;};_ddgd ._ffgf =_gdgg ;};return _ddgd ._ffgf .Decode (_ddgd ._agc );};}else {_baef ,_acafg :=_ddgd ._bgeg .DecodeInt (_ddgd ._ggdef );if _acafg !=nil {return 0,_acafg ;};return int64 (_baef ),nil ;};return 0,nil ;};type GenericRegion struct{_ebfb _cb .StreamReader ;
DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;UseExtTemplates bool ;IsTPGDon bool ;GBTemplate byte ;IsMMREncoded bool ;UseMMR bool ;GBAtX []int8 ;GBAtY []int8 ;GBAtOverride []bool ;_cbcb bool ;
Bitmap *_cf .Bitmap ;_edcf *_cba .Decoder ;_adeg *_cba .DecoderStats ;_fge *_ee .Decoder ;};func (_addb *SymbolDictionary )setRetainedCodingContexts (_gdae *SymbolDictionary ){_addb ._bgeg =_gdae ._bgeg ;_addb .IsHuffmanEncoded =_gdae .IsHuffmanEncoded ;
_addb .UseRefinementAggregation =_gdae .UseRefinementAggregation ;_addb .SdTemplate =_gdae .SdTemplate ;_addb .SdrTemplate =_gdae .SdrTemplate ;_addb .SdATX =_gdae .SdATX ;_addb .SdATY =_gdae .SdATY ;_addb .SdrATX =_gdae .SdrATX ;_addb .SdrATY =_gdae .SdrATY ;
_addb ._fdee =_gdae ._fdee ;};func (_fcfe *GenericRegion )overrideAtTemplate0a (_ccef ,_ecbb ,_aefb ,_aggg ,_ggdd ,_baae int )int {if _fcfe .GBAtOverride [0]{_ccef &=0xFFEF;if _fcfe .GBAtY [0]==0&&_fcfe .GBAtX [0]>=-int8 (_ggdd ){_ccef |=(_aggg >>uint (int8 (_baae )-_fcfe .GBAtX [0]&0x1))<<4;
}else {_ccef |=int (_fcfe .getPixel (_ecbb +int (_fcfe .GBAtX [0]),_aefb +int (_fcfe .GBAtY [0])))<<4;};};if _fcfe .GBAtOverride [1]{_ccef &=0xFBFF;if _fcfe .GBAtY [1]==0&&_fcfe .GBAtX [1]>=-int8 (_ggdd ){_ccef |=(_aggg >>uint (int8 (_baae )-_fcfe .GBAtX [1]&0x1))<<10;
}else {_ccef |=int (_fcfe .getPixel (_ecbb +int (_fcfe .GBAtX [1]),_aefb +int (_fcfe .GBAtY [1])))<<10;};};if _fcfe .GBAtOverride [2]{_ccef &=0xF7FF;if _fcfe .GBAtY [2]==0&&_fcfe .GBAtX [2]>=-int8 (_ggdd ){_ccef |=(_aggg >>uint (int8 (_baae )-_fcfe .GBAtX [2]&0x1))<<11;
}else {_ccef |=int (_fcfe .getPixel (_ecbb +int (_fcfe .GBAtX [2]),_aefb +int (_fcfe .GBAtY [2])))<<11;};};if _fcfe .GBAtOverride [3]{_ccef &=0x7FFF;if _fcfe .GBAtY [3]==0&&_fcfe .GBAtX [3]>=-int8 (_ggdd ){_ccef |=(_aggg >>uint (int8 (_baae )-_fcfe .GBAtX [3]&0x1))<<15;
}else {_ccef |=int (_fcfe .getPixel (_ecbb +int (_fcfe .GBAtX [3]),_aefb +int (_fcfe .GBAtY [3])))<<15;};};return _ccef ;};type SegmentEncoder interface{Encode (_gfga _cb .BinaryWriter )(_bafb int ,_acgg error );};func (_eecb *Header )readHeaderLength (_eedf _cb .StreamReader ,_aaag int64 ){_eecb .HeaderLength =_eedf .StreamPosition ()-_aaag ;
};func (_eg *GenericRefinementRegion )Init (header *Header ,r _cb .StreamReader )error {_eg ._fg =header ;_eg ._db =r ;_eg .RegionInfo =NewRegionSegment (r );return _eg .parseHeader ();};func (_ddge *SymbolDictionary )decodeThroughTextRegion (_fdad ,_fcbc ,_ggff uint32 )error {if _ddge ._fcef ==nil {_ddge ._fcef =_ebff (_ddge ._agc ,nil );
_ddge ._fcef .setContexts (_ddge ._fdee ,_cba .NewStats (512,1),_cba .NewStats (512,1),_cba .NewStats (512,1),_cba .NewStats (512,1),_ddge ._cdd ,_cba .NewStats (512,1),_cba .NewStats (512,1),_cba .NewStats (512,1),_cba .NewStats (512,1));};if _cdcf :=_ddge .setSymbolsArray ();
_cdcf !=nil {return _cdcf ;};_ddge ._fcef .setParameters (_ddge ._bgeg ,_ddge .IsHuffmanEncoded ,true ,_fdad ,_fcbc ,_ggff ,1,_ddge ._cbff +_ddge ._deab ,0,0,0,1,0,0,0,0,0,0,0,0,0,_ddge .SdrTemplate ,_ddge .SdrATX ,_ddge .SdrATY ,_ddge ._fgce ,_ddge ._abfdf );
return _ddge .addSymbol (_ddge ._fcef );};func (_cebf *Header )Encode (w _cb .BinaryWriter )(_acaf int ,_ffcc error ){const _fecb ="\u0048\u0065\u0061d\u0065\u0072\u002e\u0057\u0072\u0069\u0074\u0065";var _bafc _cb .BinaryWriter ;_gfa .Log .Trace ("\u005b\u0053\u0045G\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045\u0052\u005d[\u0045\u004e\u0043\u004f\u0044\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");
defer func (){if _ffcc !=nil {_gfa .Log .Trace ("[\u0053\u0045\u0047\u004d\u0045\u004eT\u002d\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0045\u004e\u0043\u004f\u0044E\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020%\u0076",_ffcc );}else {_gfa .Log .Trace ("\u005b\u0053\u0045\u0047ME\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0025\u0076",_cebf );
_gfa .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045N\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u005b\u0045\u004e\u0043O\u0044\u0045\u005d\u0020\u0046\u0069\u006ei\u0073\u0068\u0065\u0064");};}();w .FinishByte ();if _cebf .SegmentData !=nil {_dfbb ,_cfd :=_cebf .SegmentData .(SegmentEncoder );
if !_cfd {return 0,_be .Errorf (_fecb ,"\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0064\u006f\u0065s\u006e\u0027\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074 \u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0045\u006e\u0063\u006f\u0064er\u0020\u0069\u006e\u0074\u0065\u0072\u0066\u0061\u0063\u0065",_cebf .SegmentData );
};_bafc =_cb .BufferedMSB ();_acaf ,_ffcc =_dfbb .Encode (_bafc );if _ffcc !=nil {return 0,_be .Wrap (_ffcc ,_fecb ,"");};_cebf .SegmentDataLength =uint64 (_acaf );};if _cebf .pageSize ()==4{_cebf .PageAssociationFieldSize =true ;};var _dbbd int ;_dbbd ,_ffcc =_cebf .writeSegmentNumber (w );
if _ffcc !=nil {return 0,_be .Wrap (_ffcc ,_fecb ,"");};_acaf +=_dbbd ;if _ffcc =_cebf .writeFlags (w );_ffcc !=nil {return _acaf ,_be .Wrap (_ffcc ,_fecb ,"");};_acaf ++;_dbbd ,_ffcc =_cebf .writeReferredToCount (w );if _ffcc !=nil {return 0,_be .Wrap (_ffcc ,_fecb ,"");
};_acaf +=_dbbd ;_dbbd ,_ffcc =_cebf .writeReferredToSegments (w );if _ffcc !=nil {return 0,_be .Wrap (_ffcc ,_fecb ,"");};_acaf +=_dbbd ;_dbbd ,_ffcc =_cebf .writeSegmentPageAssociation (w );if _ffcc !=nil {return 0,_be .Wrap (_ffcc ,_fecb ,"");};_acaf +=_dbbd ;
_dbbd ,_ffcc =_cebf .writeSegmentDataLength (w );if _ffcc !=nil {return 0,_be .Wrap (_ffcc ,_fecb ,"");};_acaf +=_dbbd ;_cebf .HeaderLength =int64 (_acaf )-int64 (_cebf .SegmentDataLength );if _bafc !=nil {if _ ,_ffcc =w .Write (_bafc .Data ());_ffcc !=nil {return _acaf ,_be .Wrap (_ffcc ,_fecb ,"\u0077r\u0069t\u0065\u0020\u0073\u0065\u0067m\u0065\u006et\u0020\u0064\u0061\u0074\u0061");
};};return _acaf ,nil ;};func (_bef *SymbolDictionary )setRefinementAtPixels ()error {if !_bef .UseRefinementAggregation ||_bef .SdrTemplate !=0{return nil ;};if _dede :=_bef .readRefinementAtPixels (2);_dede !=nil {return _dede ;};return nil ;};func (_cfa *TextRegion )decodeRdw ()(int64 ,error ){const _dadf ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064w";
if _cfa .IsHuffmanEncoded {if _cfa .SbHuffRDWidth ==3{if _cfa ._bfbf ==nil {var (_faege int ;_eacf error ;);if _cfa .SbHuffFS ==3{_faege ++;};if _cfa .SbHuffDS ==3{_faege ++;};if _cfa .SbHuffDT ==3{_faege ++;};_cfa ._bfbf ,_eacf =_cfa .getUserTable (_faege );
if _eacf !=nil {return 0,_be .Wrap (_eacf ,_dadf ,"");};};return _cfa ._bfbf .Decode (_cfa ._fbe );};_gcee ,_gacc :=_cff .GetStandardTable (14+int (_cfa .SbHuffRDWidth ));if _gacc !=nil {return 0,_be .Wrap (_gacc ,_dadf ,"");};return _gcee .Decode (_cfa ._fbe );
};_bgec ,_bgbc :=_cfa ._bffe .DecodeInt (_cfa ._gbcb );if _bgbc !=nil {return 0,_be .Wrap (_bgbc ,_dadf ,"");};return int64 (_bgec ),nil ;};func (_gbdg *PageInformationSegment )Size ()int {return 19};func (_fdedd *SymbolDictionary )readRegionFlags ()error {var (_aafd uint64 ;
_egba int ;);_ ,_fef :=_fdedd ._agc .ReadBits (3);if _fef !=nil {return _fef ;};_egba ,_fef =_fdedd ._agc .ReadBit ();if _fef !=nil {return _fef ;};_fdedd .SdrTemplate =int8 (_egba );_aafd ,_fef =_fdedd ._agc .ReadBits (2);if _fef !=nil {return _fef ;};
_fdedd .SdTemplate =int8 (_aafd &0xf);_egba ,_fef =_fdedd ._agc .ReadBit ();if _fef !=nil {return _fef ;};if _egba ==1{_fdedd ._bded =true ;};_egba ,_fef =_fdedd ._agc .ReadBit ();if _fef !=nil {return _fef ;};if _egba ==1{_fdedd ._bcaag =true ;};_egba ,_fef =_fdedd ._agc .ReadBit ();
if _fef !=nil {return _fef ;};if _egba ==1{_fdedd .SdHuffAggInstanceSelection =true ;};_egba ,_fef =_fdedd ._agc .ReadBit ();if _fef !=nil {return _fef ;};_fdedd .SdHuffBMSizeSelection =int8 (_egba );_aafd ,_fef =_fdedd ._agc .ReadBits (2);if _fef !=nil {return _fef ;
};_fdedd .SdHuffDecodeWidthSelection =int8 (_aafd &0xf);_aafd ,_fef =_fdedd ._agc .ReadBits (2);if _fef !=nil {return _fef ;};_fdedd .SdHuffDecodeHeightSelection =int8 (_aafd &0xf);_egba ,_fef =_fdedd ._agc .ReadBit ();if _fef !=nil {return _fef ;};if _egba ==1{_fdedd .UseRefinementAggregation =true ;
};_egba ,_fef =_fdedd ._agc .ReadBit ();if _fef !=nil {return _fef ;};if _egba ==1{_fdedd .IsHuffmanEncoded =true ;};return nil ;};func (_afe *GenericRefinementRegion )decodeOptimized (_bd ,_ffe ,_aad ,_dcf ,_gcg ,_ac ,_bg int )error {var (_ab error ;_ga int ;
_gfbd int ;);_baf :=_bd -int (_afe .ReferenceDY );if _gd :=int (-_afe .ReferenceDX );_gd > 0{_ga =_gd ;};_dgd :=_afe .ReferenceBitmap .GetByteIndex (_ga ,_baf );if _afe .ReferenceDX > 0{_gfbd =int (_afe .ReferenceDX );};_ag :=_afe .RegionBitmap .GetByteIndex (_gfbd ,_bd );
switch _afe .TemplateID {case 0:_ab =_afe .decodeTemplate (_bd ,_ffe ,_aad ,_dcf ,_gcg ,_ac ,_bg ,_ag ,_baf ,_dgd ,_afe ._cffb );case 1:_ab =_afe .decodeTemplate (_bd ,_ffe ,_aad ,_dcf ,_gcg ,_ac ,_bg ,_ag ,_baf ,_dgd ,_afe ._ff );};return _ab ;};func (_eab *GenericRefinementRegion )updateOverride ()error {if _eab .GrAtX ==nil ||_eab .GrAtY ==nil {return _fc .New ("\u0041\u0054\u0020\u0070\u0069\u0078\u0065\u006c\u0073\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");
};if len (_eab .GrAtX )!=len (_eab .GrAtY ){return _fc .New ("A\u0054\u0020\u0070\u0069xe\u006c \u0069\u006e\u0063\u006f\u006es\u0069\u0073\u0074\u0065\u006e\u0074");};_eab ._da =make ([]bool ,len (_eab .GrAtX ));switch _eab .TemplateID {case 0:if _eab .GrAtX [0]!=-1&&_eab .GrAtY [0]!=-1{_eab ._da [0]=true ;
_eab ._fgc =true ;};if _eab .GrAtX [1]!=-1&&_eab .GrAtY [1]!=-1{_eab ._da [1]=true ;_eab ._fgc =true ;};case 1:_eab ._fgc =false ;};return nil ;};func (_efec *GenericRegion )decodeTemplate1 (_bcce ,_gbd ,_gce int ,_ebbd ,_bgg int )(_bbaf error ){const _fage ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0031";
var (_eceg ,_ada int ;_ecdf ,_bfde int ;_eaaa byte ;_eeaf ,_dde int ;);if _bcce >=1{_eaaa ,_bbaf =_efec .Bitmap .GetByte (_bgg );if _bbaf !=nil {return _be .Wrap (_bbaf ,_fage ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_ecdf =int (_eaaa );};if _bcce >=2{_eaaa ,_bbaf =_efec .Bitmap .GetByte (_bgg -_efec .Bitmap .RowStride );
if _bbaf !=nil {return _be .Wrap (_bbaf ,_fage ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_bfde =int (_eaaa )<<5;};_eceg =((_ecdf >>1)&0x1f8)|((_bfde >>1)&0x1e00);for _cbbd :=0;_cbbd < _gce ;_cbbd =_eeaf {var (_ffc byte ;_cgbf int ;);_eeaf =_cbbd +8;
if _ddd :=_gbd -_cbbd ;_ddd > 8{_cgbf =8;}else {_cgbf =_ddd ;};if _bcce > 0{_ecdf <<=8;if _eeaf < _gbd {_eaaa ,_bbaf =_efec .Bitmap .GetByte (_bgg +1);if _bbaf !=nil {return _be .Wrap (_bbaf ,_fage ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};
_ecdf |=int (_eaaa );};};if _bcce > 1{_bfde <<=8;if _eeaf < _gbd {_eaaa ,_bbaf =_efec .Bitmap .GetByte (_bgg -_efec .Bitmap .RowStride +1);if _bbaf !=nil {return _be .Wrap (_bbaf ,_fage ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_bfde |=int (_eaaa )<<5;
};};for _geg :=0;_geg < _cgbf ;_geg ++{if _efec ._cbcb {_ada =_efec .overrideAtTemplate1 (_eceg ,_cbbd +_geg ,_bcce ,int (_ffc ),_geg );_efec ._adeg .SetIndex (int32 (_ada ));}else {_efec ._adeg .SetIndex (int32 (_eceg ));};_dde ,_bbaf =_efec ._edcf .DecodeBit (_efec ._adeg );
if _bbaf !=nil {return _be .Wrap (_bbaf ,_fage ,"");};_ffc |=byte (_dde )<<uint (7-_geg );_cgbac :=uint (8-_geg );_eceg =((_eceg &0xefb)<<1)|_dde |((_ecdf >>_cgbac )&0x8)|((_bfde >>_cgbac )&0x200);};if _acg :=_efec .Bitmap .SetByte (_ebbd ,_ffc );_acg !=nil {return _be .Wrap (_acg ,_fage ,"");
};_ebbd ++;_bgg ++;};return nil ;};func (_egca *GenericRegion )setParameters (_gef bool ,_gdfb ,_fbd int64 ,_gdc ,_acda uint32 ){_egca .IsMMREncoded =_gef ;_egca .DataOffset =_gdfb ;_egca .DataLength =_fbd ;_egca .RegionSegment .BitmapHeight =_gdc ;_egca .RegionSegment .BitmapWidth =_acda ;
_egca ._fge =nil ;_egca .Bitmap =nil ;};func (_dfce *PageInformationSegment )readMaxStripeSize ()error {_dbda ,_defb :=_dfce ._ccab .ReadBits (15);if _defb !=nil {return _defb ;};_dfce .MaxStripeSize =uint16 (_dbda &_c .MaxUint16 );return nil ;};func (_dfbcc *TableSegment )Init (h *Header ,r _cb .StreamReader )error {_dfbcc ._ddae =r ;
return _dfbcc .parseHeader ();};func (_afeb *TextRegion )readUseRefinement ()error {if !_afeb .UseRefinement ||_afeb .SbrTemplate !=0{return nil ;};var (_cegg byte ;_bgff error ;);_afeb .SbrATX =make ([]int8 ,2);_afeb .SbrATY =make ([]int8 ,2);_cegg ,_bgff =_afeb ._fbe .ReadByte ();
if _bgff !=nil {return _bgff ;};_afeb .SbrATX [0]=int8 (_cegg );_cegg ,_bgff =_afeb ._fbe .ReadByte ();if _bgff !=nil {return _bgff ;};_afeb .SbrATY [0]=int8 (_cegg );_cegg ,_bgff =_afeb ._fbe .ReadByte ();if _bgff !=nil {return _bgff ;};_afeb .SbrATX [1]=int8 (_cegg );
_cegg ,_bgff =_afeb ._fbe .ReadByte ();if _bgff !=nil {return _bgff ;};_afeb .SbrATY [1]=int8 (_cegg );return nil ;};func (_cecfed *TextRegion )decodeRdy ()(int64 ,error ){const _cbfbe ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064y";if _cecfed .IsHuffmanEncoded {if _cecfed .SbHuffRDY ==3{if _cecfed ._cbfcb ==nil {var (_cgff int ;
_ebde error ;);if _cecfed .SbHuffFS ==3{_cgff ++;};if _cecfed .SbHuffDS ==3{_cgff ++;};if _cecfed .SbHuffDT ==3{_cgff ++;};if _cecfed .SbHuffRDWidth ==3{_cgff ++;};if _cecfed .SbHuffRDHeight ==3{_cgff ++;};if _cecfed .SbHuffRDX ==3{_cgff ++;};_cecfed ._cbfcb ,_ebde =_cecfed .getUserTable (_cgff );
if _ebde !=nil {return 0,_be .Wrap (_ebde ,_cbfbe ,"");};};return _cecfed ._cbfcb .Decode (_cecfed ._fbe );};_ebadb ,_ffda :=_cff .GetStandardTable (14+int (_cecfed .SbHuffRDY ));if _ffda !=nil {return 0,_ffda ;};return _ebadb .Decode (_cecfed ._fbe );
};_dfbg ,_aafga :=_cecfed ._bffe .DecodeInt (_cecfed ._adbg );if _aafga !=nil {return 0,_be .Wrap (_aafga ,_cbfbe ,"");};return int64 (_dfbg ),nil ;};func (_dbe *GenericRegion )decodeTemplate3 (_caed ,_cad ,_fbfc int ,_edf ,_dfe int )(_dcd error ){const _ecbf ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0033";
var (_dab ,_gbc int ;_bdb int ;_aaff byte ;_dfec ,_cgf int ;);if _caed >=1{_aaff ,_dcd =_dbe .Bitmap .GetByte (_dfe );if _dcd !=nil {return _be .Wrap (_dcd ,_ecbf ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_bdb =int (_aaff );};_dab =(_bdb >>1)&0x70;
for _cceb :=0;_cceb < _fbfc ;_cceb =_dfec {var (_begeg byte ;_efee int ;);_dfec =_cceb +8;if _caf :=_cad -_cceb ;_caf > 8{_efee =8;}else {_efee =_caf ;};if _caed >=1{_bdb <<=8;if _dfec < _cad {_aaff ,_dcd =_dbe .Bitmap .GetByte (_dfe +1);if _dcd !=nil {return _be .Wrap (_dcd ,_ecbf ,"\u0069\u006e\u006e\u0065\u0072\u0020\u002d\u0020\u006c\u0069\u006e\u0065 \u003e\u003d\u0020\u0031");
};_bdb |=int (_aaff );};};for _aae :=0;_aae < _efee ;_aae ++{if _dbe ._cbcb {_gbc =_dbe .overrideAtTemplate3 (_dab ,_cceb +_aae ,_caed ,int (_begeg ),_aae );_dbe ._adeg .SetIndex (int32 (_gbc ));}else {_dbe ._adeg .SetIndex (int32 (_dab ));};_cgf ,_dcd =_dbe ._edcf .DecodeBit (_dbe ._adeg );
if _dcd !=nil {return _be .Wrap (_dcd ,_ecbf ,"");};_begeg |=byte (_cgf )<<byte (7-_aae );_dab =((_dab &0x1f7)<<1)|_cgf |((_bdb >>uint (8-_aae ))&0x010);};if _gcf :=_dbe .Bitmap .SetByte (_edf ,_begeg );_gcf !=nil {return _be .Wrap (_gcf ,_ecbf ,"");};
_edf ++;_dfe ++;};return nil ;};func (_eaagc *PageInformationSegment )parseHeader ()(_ebaa error ){_gfa .Log .Trace ("\u005b\u0050\u0061\u0067\u0065I\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067m\u0065\u006e\u0074\u005d\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u002e\u002e");
defer func (){var _decd ="[\u0050\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072m\u0061\u0074\u0069\u006f\u006e\u0053\u0065gm\u0065\u006e\u0074\u005d \u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065ad\u0065\u0072 \u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064";
if _ebaa !=nil {_decd +="\u0020\u0077\u0069t\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u0020"+_ebaa .Error ();}else {_decd +="\u0020\u0073\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079";};_gfa .Log .Trace (_decd );}();if _ebaa =_eaagc .readWidthAndHeight ();
_ebaa !=nil {return _ebaa ;};if _ebaa =_eaagc .readResolution ();_ebaa !=nil {return _ebaa ;};_ ,_ebaa =_eaagc ._ccab .ReadBit ();if _ebaa !=nil {return _ebaa ;};if _ebaa =_eaagc .readCombinationOperatorOverrideAllowed ();_ebaa !=nil {return _ebaa ;};if _ebaa =_eaagc .readRequiresAuxiliaryBuffer ();
_ebaa !=nil {return _ebaa ;};if _ebaa =_eaagc .readCombinationOperator ();_ebaa !=nil {return _ebaa ;};if _ebaa =_eaagc .readDefaultPixelValue ();_ebaa !=nil {return _ebaa ;};if _ebaa =_eaagc .readContainsRefinement ();_ebaa !=nil {return _ebaa ;};if _ebaa =_eaagc .readIsLossless ();
_ebaa !=nil {return _ebaa ;};if _ebaa =_eaagc .readIsStriped ();_ebaa !=nil {return _ebaa ;};if _ebaa =_eaagc .readMaxStripeSize ();_ebaa !=nil {return _ebaa ;};if _ebaa =_eaagc .checkInput ();_ebaa !=nil {return _ebaa ;};_gfa .Log .Trace ("\u0025\u0073",_eaagc );
return nil ;};func (_egbf *HalftoneRegion )shiftAndFill (_gccf int )int {_gccf >>=8;if _gccf < 0{_fgba :=int (_c .Log (float64 (_fgge (_gccf )))/_c .Log (2));_acfb :=31-_fgba ;for _fgcd :=1;_fgcd < _acfb ;_fgcd ++{_gccf |=1<<uint (31-_fgcd );};};return _gccf ;
};type template1 struct{};const (TSymbolDictionary Type =0;TIntermediateTextRegion Type =4;TImmediateTextRegion Type =6;TImmediateLosslessTextRegion Type =7;TPatternDictionary Type =16;TIntermediateHalftoneRegion Type =20;TImmediateHalftoneRegion Type =22;
TImmediateLosslessHalftoneRegion Type =23;TIntermediateGenericRegion Type =36;TImmediateGenericRegion Type =38;TImmediateLosslessGenericRegion Type =39;TIntermediateGenericRefinementRegion Type =40;TImmediateGenericRefinementRegion Type =42;TImmediateLosslessGenericRefinementRegion Type =43;
TPageInformation Type =48;TEndOfPage Type =49;TEndOfStrip Type =50;TEndOfFile Type =51;TProfiles Type =52;TTables Type =53;TExtension Type =62;TBitmap Type =70;);func (_afgg *Header )String ()string {_bgea :=&_af .Builder {};_bgea .WriteString ("\u000a[\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045A\u0044\u0045\u0052\u005d\u000a");
_bgea .WriteString (_f .Sprintf ("\t\u002d\u0020\u0053\u0065gm\u0065n\u0074\u004e\u0075\u006d\u0062e\u0072\u003a\u0020\u0025\u0076\u000a",_afgg .SegmentNumber ));_bgea .WriteString (_f .Sprintf ("\u0009\u002d\u0020T\u0079\u0070\u0065\u003a\u0020\u0025\u0076\u000a",_afgg .Type ));
_bgea .WriteString (_f .Sprintf ("\u0009-\u0020R\u0065\u0074\u0061\u0069\u006eF\u006c\u0061g\u003a\u0020\u0025\u0076\u000a",_afgg .RetainFlag ));_bgea .WriteString (_f .Sprintf ("\u0009\u002d\u0020Pa\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_afgg .PageAssociation ));
_bgea .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0050\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074i\u006fn\u0046\u0069\u0065\u006c\u0064\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_afgg .PageAssociationFieldSize ));
_bgea .WriteString ("\u0009-\u0020R\u0054\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u0053\u003a\u000a");for _ ,_bcdd :=range _afgg .RTSNumbers {_bgea .WriteString (_f .Sprintf ("\u0009\t\u002d\u0020\u0025\u0064\u000a",_bcdd ));};_bgea .WriteString (_f .Sprintf ("\t\u002d \u0048\u0065\u0061\u0064\u0065\u0072\u004c\u0065n\u0067\u0074\u0068\u003a %\u0076\u000a",_afgg .HeaderLength ));
_bgea .WriteString (_f .Sprintf ("\u0009-\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061L\u0065n\u0067\u0074\u0068\u003a\u0020\u0025\u0076\n",_afgg .SegmentDataLength ));_bgea .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074D\u0061\u0074\u0061\u0053\u0074\u0061\u0072t\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0076\u000a",_afgg .SegmentDataStartOffset ));
return _bgea .String ();};func (_dgbcc *SymbolDictionary )setInSyms ()error {if _dgbcc .Header .RTSegments !=nil {return _dgbcc .retrieveImportSymbols ();};_dgbcc ._cdggc =make ([]*_cf .Bitmap ,0);return nil ;};func (_dcaf *PatternDictionary )setGbAtPixels (){if _dcaf .HDTemplate ==0{_dcaf .GBAtX =make ([]int8 ,4);
_dcaf .GBAtY =make ([]int8 ,4);_dcaf .GBAtX [0]=-int8 (_dcaf .HdpWidth );_dcaf .GBAtY [0]=0;_dcaf .GBAtX [1]=-3;_dcaf .GBAtY [1]=-1;_dcaf .GBAtX [2]=2;_dcaf .GBAtY [2]=-2;_dcaf .GBAtX [3]=-2;_dcaf .GBAtY [3]=-2;}else {_dcaf .GBAtX =[]int8 {-int8 (_dcaf .HdpWidth )};
_dcaf .GBAtY =[]int8 {0};};};func (_ef *EndOfStripe )parseHeader (_ba *Header ,_cbe _cb .StreamReader )error {_ce ,_dg :=_ef ._eeg .ReadBits (32);if _dg !=nil {return _dg ;};_ef ._cc =int (_ce &_c .MaxInt32 );return nil ;};func (_dgff *Header )writeSegmentPageAssociation (_acgd _cb .BinaryWriter )(_ffgg int ,_bbdb error ){const _eegfa ="w\u0072\u0069\u0074\u0065\u0053\u0065g\u006d\u0065\u006e\u0074\u0050\u0061\u0067\u0065\u0041s\u0073\u006f\u0063i\u0061t\u0069\u006f\u006e";
if _dgff .pageSize ()!=4{if _bbdb =_acgd .WriteByte (byte (_dgff .PageAssociation ));_bbdb !=nil {return 0,_be .Wrap (_bbdb ,_eegfa ,"\u0070\u0061\u0067\u0065\u0053\u0069\u007a\u0065\u0020\u0021\u003d\u0020\u0034");};return 1,nil ;};_baed :=make ([]byte ,4);
_gf .BigEndian .PutUint32 (_baed ,uint32 (_dgff .PageAssociation ));if _ffgg ,_bbdb =_acgd .Write (_baed );_bbdb !=nil {return 0,_be .Wrap (_bbdb ,_eegfa ,"\u0034 \u0062y\u0074\u0065\u0020\u0070\u0061g\u0065\u0020n\u0075\u006d\u0062\u0065\u0072");};return _ffgg ,nil ;
};func (_cdedb *PageInformationSegment )encodeFlags (_dfa _cb .BinaryWriter )(_cgeeb error ){const _fdaa ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _cgeeb =_dfa .SkipBits (1);_cgeeb !=nil {return _be .Wrap (_cgeeb ,_fdaa ,"\u0072\u0065\u0073e\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074");
};var _dcg int ;if _cdedb .CombinationOperatorOverrideAllowed (){_dcg =1;};if _cgeeb =_dfa .WriteBit (_dcg );_cgeeb !=nil {return _be .Wrap (_cgeeb ,_fdaa ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0064\u0065\u006e");
};_dcg =0;if _cdedb ._gcec {_dcg =1;};if _cgeeb =_dfa .WriteBit (_dcg );_cgeeb !=nil {return _be .Wrap (_cgeeb ,_fdaa ,"\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0061\u0075\u0078i\u006ci\u0061r\u0079\u0020\u0062\u0075\u0066\u0066\u0065r");};if _cgeeb =_dfa .WriteBit ((int (_cdedb ._aeee )>>1)&0x01);
_cgeeb !=nil {return _be .Wrap (_cgeeb ,_fdaa ,"\u0063\u006f\u006d\u0062\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006f\u0070\u0065\u0072\u0061\u0074o\u0072\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0062\u0069\u0074");};if _cgeeb =_dfa .WriteBit (int (_cdedb ._aeee )&0x01);
_cgeeb !=nil {return _be .Wrap (_cgeeb ,_fdaa ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0062\u0069\u0074");};_dcg =int (_cdedb .DefaultPixelValue );
if _cgeeb =_dfa .WriteBit (_dcg );_cgeeb !=nil {return _be .Wrap (_cgeeb ,_fdaa ,"\u0064e\u0066\u0061\u0075\u006c\u0074\u0020\u0070\u0061\u0067\u0065\u0020p\u0069\u0078\u0065\u006c\u0020\u0076\u0061\u006c\u0075\u0065");};_dcg =0;if _cdedb ._ebec {_dcg =1;
};if _cgeeb =_dfa .WriteBit (_dcg );_cgeeb !=nil {return _be .Wrap (_cgeeb ,_fdaa ,"\u0063\u006f\u006e\u0074ai\u006e\u0073\u0020\u0072\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074");};_dcg =0;if _cdedb .IsLossless {_dcg =1;};if _cgeeb =_dfa .WriteBit (_dcg );
_cgeeb !=nil {return _be .Wrap (_cgeeb ,_fdaa ,"p\u0061\u0067\u0065\u0020\u0069\u0073 \u0065\u0076\u0065\u006e\u0074\u0075\u0061\u006c\u006cy\u0020\u006c\u006fs\u0073l\u0065\u0073\u0073");};return nil ;};func (_ecg *GenericRegion )decodeSLTP ()(int ,error ){switch _ecg .GBTemplate {case 0:_ecg ._adeg .SetIndex (0x9B25);
case 1:_ecg ._adeg .SetIndex (0x795);case 2:_ecg ._adeg .SetIndex (0xE5);case 3:_ecg ._adeg .SetIndex (0x195);};return _ecg ._edcf .DecodeBit (_ecg ._adeg );};func (_gac *PatternDictionary )computeSegmentDataStructure ()error {_gac .DataOffset =_gac ._gedc .StreamPosition ();
_gac .DataHeaderLength =_gac .DataOffset -_gac .DataHeaderOffset ;_gac .DataLength =int64 (_gac ._gedc .Length ())-_gac .DataHeaderLength ;return nil ;};func (_ecfb *Header )writeFlags (_agdd _cb .BinaryWriter )(_aff error ){const _bebc ="\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065F\u006c\u0061\u0067\u0073";
_gdd :=byte (_ecfb .Type );if _aff =_agdd .WriteByte (_gdd );_aff !=nil {return _be .Wrap (_aff ,_bebc ,"\u0077\u0072\u0069ti\u006e\u0067\u0020\u0073\u0065\u0067\u006d\u0065\u006et\u0020t\u0079p\u0065 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};if !_ecfb .RetainFlag &&!_ecfb .PageAssociationFieldSize {return nil ;};if _aff =_agdd .SkipBits (-8);_aff !=nil {return _be .Wrap (_aff ,_bebc ,"\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0062\u0061\u0063\u006b\u0020\u0074\u0068\u0065\u0020\u0062\u0069\u0074\u0073\u0020\u0066\u0061il\u0065\u0064");
};var _fgfbd int ;if _ecfb .RetainFlag {_fgfbd =1;};if _aff =_agdd .WriteBit (_fgfbd );_aff !=nil {return _be .Wrap (_aff ,_bebc ,"\u0072\u0065\u0074\u0061in\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067\u0073");};_fgfbd =0;if _ecfb .PageAssociationFieldSize {_fgfbd =1;
};if _aff =_agdd .WriteBit (_fgfbd );_aff !=nil {return _be .Wrap (_aff ,_bebc ,"p\u0061\u0067\u0065\u0020as\u0073o\u0063\u0069\u0061\u0074\u0069o\u006e\u0020\u0066\u006c\u0061\u0067");};_agdd .FinishByte ();return nil ;};func (_gebab *GenericRegion )decodeTemplate0b (_cbgf ,_ebc ,_efc int ,_adeb ,_gfdfd int )(_bff error ){const _ccgc ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0062";
var (_ebcd ,_cef int ;_gfdc ,_abbc int ;_bcg byte ;_afad int ;);if _cbgf >=1{_bcg ,_bff =_gebab .Bitmap .GetByte (_gfdfd );if _bff !=nil {return _be .Wrap (_bff ,_ccgc ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_gfdc =int (_bcg );};if _cbgf >=2{_bcg ,_bff =_gebab .Bitmap .GetByte (_gfdfd -_gebab .Bitmap .RowStride );
if _bff !=nil {return _be .Wrap (_bff ,_ccgc ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_abbc =int (_bcg )<<6;};_ebcd =(_gfdc &0xf0)|(_abbc &0x3800);for _aca :=0;_aca < _efc ;_aca =_afad {var (_bgd byte ;_gdee int ;);_afad =_aca +8;if _egcc :=_ebc -_aca ;
_egcc > 8{_gdee =8;}else {_gdee =_egcc ;};if _cbgf > 0{_gfdc <<=8;if _afad < _ebc {_bcg ,_bff =_gebab .Bitmap .GetByte (_gfdfd +1);if _bff !=nil {return _be .Wrap (_bff ,_ccgc ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_gfdc |=int (_bcg );};
};if _cbgf > 1{_abbc <<=8;if _afad < _ebc {_bcg ,_bff =_gebab .Bitmap .GetByte (_gfdfd -_gebab .Bitmap .RowStride +1);if _bff !=nil {return _be .Wrap (_bff ,_ccgc ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_abbc |=int (_bcg )<<6;};};for _gec :=0;
_gec < _gdee ;_gec ++{_eegf :=uint (7-_gec );if _gebab ._cbcb {_cef =_gebab .overrideAtTemplate0b (_ebcd ,_aca +_gec ,_cbgf ,int (_bgd ),_gec ,int (_eegf ));_gebab ._adeg .SetIndex (int32 (_cef ));}else {_gebab ._adeg .SetIndex (int32 (_ebcd ));};var _cab int ;
_cab ,_bff =_gebab ._edcf .DecodeBit (_gebab ._adeg );if _bff !=nil {return _be .Wrap (_bff ,_ccgc ,"");};_bgd |=byte (_cab <<_eegf );_ebcd =((_ebcd &0x7bf7)<<1)|_cab |((_gfdc >>_eegf )&0x10)|((_abbc >>_eegf )&0x800);};if _fdg :=_gebab .Bitmap .SetByte (_adeb ,_bgd );
_fdg !=nil {return _be .Wrap (_fdg ,_ccgc ,"");};_adeb ++;_gfdfd ++;};return nil ;};func (_ccee *SymbolDictionary )checkInput ()error {if _ccee .SdHuffDecodeHeightSelection ==2{_gfa .Log .Debug ("\u0053\u0079\u006d\u0062\u006fl\u0020\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u0053e\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0070\u0065r\u006d\u0069\u0074\u0074\u0065\u0064",_ccee .SdHuffDecodeHeightSelection );
};if _ccee .SdHuffDecodeWidthSelection ==2{_gfa .Log .Debug ("\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0057\u0069\u0064t\u0068\u0020\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061l\u0075\u0065\u0020\u006e\u006f\u0074 \u0070\u0065r\u006d\u0069t\u0074e\u0064",_ccee .SdHuffDecodeWidthSelection );
};if _ccee .IsHuffmanEncoded {if _ccee .SdTemplate !=0{_gfa .Log .Debug ("\u0053\u0044T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e \u0030\u0029",_ccee .SdTemplate );
};if !_ccee .UseRefinementAggregation {if !_ccee .UseRefinementAggregation {if _ccee ._bded {_gfa .Log .Debug ("\u0049\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074ex\u0074\u0052\u0065\u0074\u0061\u0069n\u0065\u0064\u0020\u003d\u0020\u0074\u0072\u0075\u0065\u0020\u0028\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0066\u0061\u006cs\u0065\u0029");
_ccee ._bded =false ;};if _ccee ._bcaag {_gfa .Log .Debug ("\u0069s\u0043\u006fd\u0069\u006e\u0067\u0043o\u006e\u0074\u0065x\u0074\u0055\u0073\u0065\u0064\u0020\u003d\u0020\u0074ru\u0065\u0020\u0028s\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020f\u0061\u006cs\u0065\u0029");
_ccee ._bcaag =false ;};};};}else {if _ccee .SdHuffBMSizeSelection !=0{_gfa .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066B\u004d\u0053\u0069\u007a\u0065\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_ccee .SdHuffBMSizeSelection =0;};if _ccee .SdHuffDecodeWidthSelection !=0{_gfa .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068\u0053\u0065\u006c\u0065\u0063\u0074\u0069o\u006e\u0020\u0073\u0068\u006fu\u006c\u0064 \u0062\u0065\u0020\u0030");
_ccee .SdHuffDecodeWidthSelection =0;};if _ccee .SdHuffDecodeHeightSelection !=0{_gfa .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0048e\u0069\u0067\u0068\u0074\u0053\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_ccee .SdHuffDecodeHeightSelection =0;};};if !_ccee .UseRefinementAggregation {if _ccee .SdrTemplate !=0{_gfa .Log .Debug ("\u0053\u0044\u0052\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u003d\u0020\u0025\u0064\u0020\u0028s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_ccee .SdrTemplate );
_ccee .SdrTemplate =0;};};if !_ccee .IsHuffmanEncoded ||!_ccee .UseRefinementAggregation {if _ccee .SdHuffAggInstanceSelection {_gfa .Log .Debug ("\u0053d\u0048\u0075f\u0066\u0041\u0067g\u0049\u006e\u0073\u0074\u0061\u006e\u0063e\u0053\u0065\u006c\u0065\u0063\u0074i\u006f\u006e\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_ccee .SdHuffAggInstanceSelection );
};};return nil ;};func (_eace *HalftoneRegion )GetPatterns ()([]*_cf .Bitmap ,error ){var (_adea []*_cf .Bitmap ;_ecce error ;);for _ ,_eegd :=range _eace ._bda .RTSegments {var _gbda Segmenter ;_gbda ,_ecce =_eegd .GetSegmentData ();if _ecce !=nil {_gfa .Log .Debug ("\u0047e\u0074\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061 \u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025v",_ecce );
return nil ,_ecce ;};_gefa ,_dcb :=_gbda .(*PatternDictionary );if !_dcb {_ecce =_f .Errorf ("\u0072e\u006c\u0061t\u0065\u0064\u0020\u0073e\u0067\u006d\u0065n\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0070at\u0074\u0065\u0072n\u0020\u0064i\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u003a \u0025\u0054",_gbda );
return nil ,_ecce ;};var _fgb []*_cf .Bitmap ;_fgb ,_ecce =_gefa .GetDictionary ();if _ecce !=nil {_gfa .Log .Debug ("\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_ecce );
return nil ,_ecce ;};_adea =append (_adea ,_fgb ...);};return _adea ,nil ;};func (_dced *TextRegion )getSymbols ()error {if _dced .Header .RTSegments !=nil {return _dced .initSymbols ();};return nil ;};func (_bcad *RegionSegment )parseHeader ()error {const _bde ="p\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072";
_gfa .Log .Trace ("\u005b\u0052\u0045\u0047I\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002dH\u0045A\u0044\u0045\u0052\u005d\u0020\u0042\u0065g\u0069\u006e");defer func (){_gfa .Log .Trace ("\u005b\u0052\u0045G\u0049\u004f\u004e\u005d[\u0050\u0041\u0052\u0053\u0045\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
}();_egcf ,_ebbe :=_bcad ._agaa .ReadBits (32);if _ebbe !=nil {return _be .Wrap (_ebbe ,_bde ,"\u0077\u0069\u0064t\u0068");};_bcad .BitmapWidth =uint32 (_egcf &_c .MaxUint32 );_egcf ,_ebbe =_bcad ._agaa .ReadBits (32);if _ebbe !=nil {return _be .Wrap (_ebbe ,_bde ,"\u0068\u0065\u0069\u0067\u0068\u0074");
};_bcad .BitmapHeight =uint32 (_egcf &_c .MaxUint32 );_egcf ,_ebbe =_bcad ._agaa .ReadBits (32);if _ebbe !=nil {return _be .Wrap (_ebbe ,_bde ,"\u0078\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_bcad .XLocation =uint32 (_egcf &_c .MaxUint32 );
_egcf ,_ebbe =_bcad ._agaa .ReadBits (32);if _ebbe !=nil {return _be .Wrap (_ebbe ,_bde ,"\u0079\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_bcad .YLocation =uint32 (_egcf &_c .MaxUint32 );if _ ,_ebbe =_bcad ._agaa .ReadBits (5);_ebbe !=nil {return _be .Wrap (_ebbe ,_bde ,"\u0064i\u0072\u0079\u0020\u0072\u0065\u0061d");
};if _ebbe =_bcad .readCombinationOperator ();_ebbe !=nil {return _be .Wrap (_ebbe ,_bde ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};return nil ;};func (_cfeb Type )String ()string {switch _cfeb {case TSymbolDictionary :return "\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079";
case TIntermediateTextRegion :return "\u0049n\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020T\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateTextRegion :return "I\u006d\u006d\u0065\u0064ia\u0074e\u0020\u0054\u0065\u0078\u0074 \u0052\u0065\u0067\u0069\u006f\u006e";
case TImmediateLosslessTextRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020L\u006f\u0073\u0073\u006c\u0065\u0073\u0073 \u0054\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TPatternDictionary :return "\u0050a\u0074t\u0065\u0072\u006e\u0020\u0044i\u0063\u0074i\u006f\u006e\u0061\u0072\u0079";
case TIntermediateHalftoneRegion :return "\u0049\u006e\u0074\u0065r\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0048\u0061l\u0066t\u006f\u006e\u0065\u0020\u0052\u0065\u0067i\u006f\u006e";case TImmediateHalftoneRegion :return "\u0049m\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u0048\u0061l\u0066t\u006fn\u0065\u0020\u0052\u0065\u0067\u0069\u006fn";
case TImmediateLosslessHalftoneRegion :return "\u0049\u006d\u006ded\u0069\u0061\u0074\u0065\u0020\u004c\u006f\u0073\u0073l\u0065s\u0073 \u0048a\u006c\u0066\u0074\u006f\u006e\u0065\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TIntermediateGenericRegion :return "I\u006e\u0074\u0065\u0072\u006d\u0065d\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020R\u0065g\u0069\u006f\u006e";
case TImmediateGenericRegion :return "\u0049m\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006ee\u0072\u0069\u0063\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessGenericRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u004c\u006f\u0073\u0073\u006c\u0065\u0073\u0073\u0020\u0047e\u006e\u0065\u0072\u0069\u0063\u0020\u0052e\u0067\u0069\u006f\u006e";
case TIntermediateGenericRefinementRegion :return "\u0049\u006e\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0020\u0052\u0065\u0066i\u006e\u0065\u006d\u0065\u006et\u0020\u0052e\u0067\u0069\u006f\u006e";
case TImmediateGenericRefinementRegion :return "I\u006d\u006d\u0065\u0064\u0069\u0061t\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020\u0052\u0065\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020\u0052\u0065\u0067\u0069o\u006e";case TImmediateLosslessGenericRefinementRegion :return "\u0049m\u006d\u0065d\u0069\u0061\u0074\u0065 \u004c\u006f\u0073s\u006c\u0065\u0073\u0073\u0020\u0047\u0065\u006e\u0065ri\u0063\u0020\u0052e\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020R\u0065\u0067i\u006f\u006e";
case TPageInformation :return "\u0050\u0061g\u0065\u0020\u0049n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e";case TEndOfPage :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0050\u0061\u0067\u0065";case TEndOfStrip :return "\u0045\u006e\u0064 \u004f\u0066\u0020\u0053\u0074\u0072\u0069\u0070";
case TEndOfFile :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0046\u0069\u006c\u0065";case TProfiles :return "\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0073";case TTables :return "\u0054\u0061\u0062\u006c\u0065\u0073";case TExtension :return "\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn";
case TBitmap :return "\u0042\u0069\u0074\u006d\u0061\u0070";};return "I\u006ev\u0061\u006c\u0069\u0064\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0020Ki\u006e\u0064";};func (_add *GenericRegion )Encode (w _cb .BinaryWriter )(_cbfg int ,_ece error ){const _dbgd ="G\u0065n\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069o\u006e\u002e\u0045\u006eco\u0064\u0065";
if _add .Bitmap ==nil {return 0,_be .Error (_dbgd ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};_bfg ,_ece :=_add .RegionSegment .Encode (w );if _ece !=nil {return 0,_be .Wrap (_ece ,_dbgd ,"\u0052\u0065\u0067\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};_cbfg +=_bfg ;if _ece =w .SkipBits (4);_ece !=nil {return _cbfg ,_be .Wrap (_ece ,_dbgd ,"\u0073k\u0069p\u0020\u0072\u0065\u0073\u0065r\u0076\u0065d\u0020\u0062\u0069\u0074\u0073");};var _bbf int ;if _add .IsTPGDon {_bbf =1;};if _ece =w .WriteBit (_bbf );
_ece !=nil {return _cbfg ,_be .Wrap (_ece ,_dbgd ,"\u0074\u0070\u0067\u0064\u006f\u006e");};_bbf =0;if _ece =w .WriteBit (int (_add .GBTemplate >>1)&0x01);_ece !=nil {return _cbfg ,_be .Wrap (_ece ,_dbgd ,"f\u0069r\u0073\u0074\u0020\u0067\u0062\u0074\u0065\u006dp\u006c\u0061\u0074\u0065 b\u0069\u0074");
};if _ece =w .WriteBit (int (_add .GBTemplate )&0x01);_ece !=nil {return _cbfg ,_be .Wrap (_ece ,_dbgd ,"s\u0065\u0063\u006f\u006ed \u0067b\u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u0062\u0069\u0074");};if _add .UseMMR {_bbf =1;};if _ece =w .WriteBit (_bbf );
_ece !=nil {return _cbfg ,_be .Wrap (_ece ,_dbgd ,"u\u0073\u0065\u0020\u004d\u004d\u0052\u0020\u0062\u0069\u0074");};_cbfg ++;if _bfg ,_ece =_add .writeGBAtPixels (w );_ece !=nil {return _cbfg ,_be .Wrap (_ece ,_dbgd ,"");};_cbfg +=_bfg ;_ggbe :=_beg .New ();
if _ece =_ggbe .EncodeBitmap (_add .Bitmap ,_add .IsTPGDon );_ece !=nil {return _cbfg ,_be .Wrap (_ece ,_dbgd ,"");};_ggbe .Final ();var _fbg int64 ;if _fbg ,_ece =_ggbe .WriteTo (w );_ece !=nil {return _cbfg ,_be .Wrap (_ece ,_dbgd ,"");};_cbfg +=int (_fbg );
return _cbfg ,nil ;};type OrganizationType uint8 ;func (_egeeb *TextRegion )setContexts (_ffcad *_cba .DecoderStats ,_ecdcc *_cba .DecoderStats ,_baga *_cba .DecoderStats ,_ccafb *_cba .DecoderStats ,_gebae *_cba .DecoderStats ,_cedf *_cba .DecoderStats ,_eef *_cba .DecoderStats ,_ddfd *_cba .DecoderStats ,_cadb *_cba .DecoderStats ,_dafef *_cba .DecoderStats ){_egeeb ._fbde =_ecdcc ;
_egeeb ._baged =_baga ;_egeeb ._aabd =_ccafb ;_egeeb ._cadc =_gebae ;_egeeb ._gbcb =_eef ;_egeeb ._eeeg =_ddfd ;_egeeb ._gcgaa =_cedf ;_egeeb ._fefb =_cadb ;_egeeb ._adbg =_dafef ;_egeeb ._dgdd =_ffcad ;};type templater interface{form (_ecb ,_ggd ,_gag ,_fgf ,_fag int16 )int16 ;
setIndex (_egf *_cba .DecoderStats );};func (_cgbc *template0 )form (_egac ,_abb ,_cbeb ,_bba ,_bgfe int16 )int16 {return (_egac <<10)|(_abb <<7)|(_cbeb <<4)|(_bba <<1)|_bgfe ;};func (_gddd *TableSegment )parseHeader ()error {var (_feddb int ;_febf uint64 ;
_afbd error ;);_feddb ,_afbd =_gddd ._ddae .ReadBit ();if _afbd !=nil {return _afbd ;};if _feddb ==1{return _f .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0061\u0062\u006c\u0065 \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0064e\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u002e\u0020\u0042\u002e\u0032\u002e1\u0020\u0043\u006f\u0064\u0065\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0042\u0069\u0074\u0020\u0037\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u007a\u0065\u0072\u006f\u002e\u0020\u0057a\u0073\u003a \u0025\u0064",_feddb );
};if _febf ,_afbd =_gddd ._ddae .ReadBits (3);_afbd !=nil {return _afbd ;};_gddd ._ebcb =(int32 (_febf )+1)&0xf;if _febf ,_afbd =_gddd ._ddae .ReadBits (3);_afbd !=nil {return _afbd ;};_gddd ._edfa =(int32 (_febf )+1)&0xf;if _febf ,_afbd =_gddd ._ddae .ReadBits (32);
_afbd !=nil {return _afbd ;};_gddd ._bbda =int32 (_febf &_c .MaxInt32 );if _febf ,_afbd =_gddd ._ddae .ReadBits (32);_afbd !=nil {return _afbd ;};_gddd ._dffe =int32 (_febf &_c .MaxInt32 );return nil ;};func (_acge *PatternDictionary )readIsMMREncoded ()error {_acad ,_egga :=_acge ._gedc .ReadBit ();
if _egga !=nil {return _egga ;};if _acad !=0{_acge .IsMMREncoded =true ;};return nil ;};func (_edeg *TextRegion )decodeSymInRefSize ()(int64 ,error ){const _egfd ="\u0064e\u0063o\u0064\u0065\u0053\u0079\u006dI\u006e\u0052e\u0066\u0053\u0069\u007a\u0065";
if _edeg .SbHuffRSize ==0{_ecdcb ,_caaa :=_cff .GetStandardTable (1);if _caaa !=nil {return 0,_be .Wrap (_caaa ,_egfd ,"");};return _ecdcb .Decode (_edeg ._fbe );};if _edeg ._bbff ==nil {var (_fbag int ;_cgea error ;);if _edeg .SbHuffFS ==3{_fbag ++;};
if _edeg .SbHuffDS ==3{_fbag ++;};if _edeg .SbHuffDT ==3{_fbag ++;};if _edeg .SbHuffRDWidth ==3{_fbag ++;};if _edeg .SbHuffRDHeight ==3{_fbag ++;};if _edeg .SbHuffRDX ==3{_fbag ++;};if _edeg .SbHuffRDY ==3{_fbag ++;};_edeg ._bbff ,_cgea =_edeg .getUserTable (_fbag );
if _cgea !=nil {return 0,_be .Wrap (_cgea ,_egfd ,"");};};_bacdd ,_fgag :=_edeg ._bbff .Decode (_edeg ._fbe );if _fgag !=nil {return 0,_be .Wrap (_fgag ,_egfd ,"");};return _bacdd ,nil ;};func (_bafg *RegionSegment )String ()string {_bagb :=&_af .Builder {};
_bagb .WriteString ("\u0009[\u0052E\u0047\u0049\u004f\u004e\u0020S\u0045\u0047M\u0045\u004e\u0054\u005d\u000a");_bagb .WriteString (_f .Sprintf ("\t\u0009\u002d\u0020\u0042\u0069\u0074m\u0061\u0070\u0020\u0028\u0077\u0069d\u0074\u0068\u002c\u0020\u0068\u0065\u0069g\u0068\u0074\u0029\u0020\u005b\u0025\u0064\u0078\u0025\u0064]\u000a",_bafg .BitmapWidth ,_bafg .BitmapHeight ));
_bagb .WriteString (_f .Sprintf ("\u0009\u0009\u002d\u0020L\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0028\u0078,\u0079)\u003a\u0020\u005b\u0025\u0064\u002c\u0025d\u005d\u000a",_bafg .XLocation ,_bafg .YLocation ));_bagb .WriteString (_f .Sprintf ("\t\u0009\u002d\u0020\u0043\u006f\u006db\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070e\u0072\u0061\u0074o\u0072:\u0020\u0025\u0073",_bafg .CombinaionOperator ));
return _bagb .String ();};func (_ggc *RegionSegment )Size ()int {return 17};func (_bdcd *TextRegion )setParameters (_efdbe *_cba .Decoder ,_bgac ,_bfcd bool ,_bggab ,_efecd uint32 ,_afaca uint32 ,_gcbd int8 ,_gfgbb uint32 ,_cgfc int8 ,_gade _cf .CombinationOperator ,_cead int8 ,_cdee int16 ,_bdffb ,_afce ,_fefg ,_gegg ,_cdbda ,_fbgb ,_fdda ,_eadgg ,_adc ,_ggbc int8 ,_dffg ,_aefag []int8 ,_adfg []*_cf .Bitmap ,_gaccd int8 ){_bdcd ._bffe =_efdbe ;
_bdcd .IsHuffmanEncoded =_bgac ;_bdcd .UseRefinement =_bfcd ;_bdcd .RegionInfo .BitmapWidth =_bggab ;_bdcd .RegionInfo .BitmapHeight =_efecd ;_bdcd .NumberOfSymbolInstances =_afaca ;_bdcd .SbStrips =_gcbd ;_bdcd .NumberOfSymbols =_gfgbb ;_bdcd .DefaultPixel =_cgfc ;
_bdcd .CombinationOperator =_gade ;_bdcd .IsTransposed =_cead ;_bdcd .ReferenceCorner =_cdee ;_bdcd .SbDsOffset =_bdffb ;_bdcd .SbHuffFS =_afce ;_bdcd .SbHuffDS =_fefg ;_bdcd .SbHuffDT =_gegg ;_bdcd .SbHuffRDWidth =_cdbda ;_bdcd .SbHuffRDHeight =_fbgb ;
_bdcd .SbHuffRSize =_adc ;_bdcd .SbHuffRDX =_fdda ;_bdcd .SbHuffRDY =_eadgg ;_bdcd .SbrTemplate =_ggbc ;_bdcd .SbrATX =_dffg ;_bdcd .SbrATY =_aefag ;_bdcd .Symbols =_adfg ;_bdcd ._gfae =_gaccd ;};func (_bfed *Header )referenceSize ()uint {switch {case _bfed .SegmentNumber <=255:return 1;
case _bfed .SegmentNumber <=65535:return 2;default:return 4;};};func (_efcc *SymbolDictionary )setExportedSymbols (_gcef []int ){for _affbd :=uint32 (0);_affbd < _efcc ._cbff +_efcc .NumberOfNewSymbols ;_affbd ++{if _gcef [_affbd ]==1{var _aabb *_cf .Bitmap ;
if _affbd < _efcc ._cbff {_aabb =_efcc ._cdggc [_affbd ];}else {_aabb =_efcc ._gdab [_affbd -_efcc ._cbff ];};_gfa .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u002d\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u0020\u0041\u0064\u0064 E\u0078\u0070\u006fr\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027%\u0073\u0027",_aabb );
_efcc ._fcgg =append (_efcc ._fcgg ,_aabb );};};};func (_bebg *GenericRefinementRegion )readAtPixels ()error {_bebg .GrAtX =make ([]int8 ,2);_bebg .GrAtY =make ([]int8 ,2);_adf ,_gcd :=_bebg ._db .ReadByte ();if _gcd !=nil {return _gcd ;};_bebg .GrAtX [0]=int8 (_adf );
_adf ,_gcd =_bebg ._db .ReadByte ();if _gcd !=nil {return _gcd ;};_bebg .GrAtY [0]=int8 (_adf );_adf ,_gcd =_bebg ._db .ReadByte ();if _gcd !=nil {return _gcd ;};_bebg .GrAtX [1]=int8 (_adf );_adf ,_gcd =_bebg ._db .ReadByte ();if _gcd !=nil {return _gcd ;
};_bebg .GrAtY [1]=int8 (_adf );return nil ;};func (_aga *GenericRefinementRegion )String ()string {_acdc :=&_af .Builder {};_acdc .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_acdc .WriteString (_aga .RegionInfo .String ()+"\u000a");
_acdc .WriteString (_f .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0052\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_aga .IsTPGROn ));_acdc .WriteString (_f .Sprintf ("\u0009-\u0020T\u0065\u006d\u0070\u006c\u0061t\u0065\u0049D\u003a\u0020\u0025\u0076\u000a",_aga .TemplateID ));
_acdc .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_aga .GrAtX ));_acdc .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_aga .GrAtY ));
_acdc .WriteString (_f .Sprintf ("\u0009-\u0020R\u0065\u0066\u0065\u0072\u0065n\u0063\u0065D\u0058\u0020\u0025\u0076\u000a",_aga .ReferenceDX ));_acdc .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0052ef\u0065\u0072\u0065\u006e\u0063\u0044\u0065\u0059\u003a\u0020\u0025\u0076\u000a",_aga .ReferenceDY ));
return _acdc .String ();};func (_fbaf *Header )writeReferredToSegments (_fdff _cb .BinaryWriter )(_dcfa int ,_gcga error ){const _aaaf ="\u0077\u0072\u0069te\u0052\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
var (_agadgb uint16 ;_ddeff uint32 ;);_egfc :=_fbaf .referenceSize ();_gfag :=1;_cdae :=make ([]byte ,_egfc );for _ ,_fadb :=range _fbaf .RTSNumbers {switch _egfc {case 4:_ddeff =uint32 (_fadb );_gf .BigEndian .PutUint32 (_cdae ,_ddeff );_gfag ,_gcga =_fdff .Write (_cdae );
if _gcga !=nil {return 0,_be .Wrap (_gcga ,_aaaf ,"u\u0069\u006e\u0074\u0033\u0032\u0020\u0073\u0069\u007a\u0065");};case 2:_agadgb =uint16 (_fadb );_gf .BigEndian .PutUint16 (_cdae ,_agadgb );_gfag ,_gcga =_fdff .Write (_cdae );if _gcga !=nil {return 0,_be .Wrap (_gcga ,_aaaf ,"\u0075\u0069\u006e\u0074\u0031\u0036");
};default:if _gcga =_fdff .WriteByte (byte (_fadb ));_gcga !=nil {return 0,_be .Wrap (_gcga ,_aaaf ,"\u0075\u0069\u006et\u0038");};};_dcfa +=_gfag ;};return _dcfa ,nil ;};type SymbolDictionary struct{_agc _cb .StreamReader ;SdrTemplate int8 ;SdTemplate int8 ;
_bded bool ;_bcaag bool ;SdHuffAggInstanceSelection bool ;SdHuffBMSizeSelection int8 ;SdHuffDecodeWidthSelection int8 ;SdHuffDecodeHeightSelection int8 ;UseRefinementAggregation bool ;IsHuffmanEncoded bool ;SdATX []int8 ;SdATY []int8 ;SdrATX []int8 ;SdrATY []int8 ;
NumberOfExportedSymbols uint32 ;NumberOfNewSymbols uint32 ;Header *Header ;_cbff uint32 ;_cdggc []*_cf .Bitmap ;_deab uint32 ;_gdab []*_cf .Bitmap ;_ageg _cff .Tabler ;_ffgf _cff .Tabler ;_bac _cff .Tabler ;_bgbd _cff .Tabler ;_fcgg []*_cf .Bitmap ;_fgce []*_cf .Bitmap ;
_bgeg *_cba .Decoder ;_fcef *TextRegion ;_geeff *GenericRegion ;_beef *GenericRefinementRegion ;_fdee *_cba .DecoderStats ;_dceb *_cba .DecoderStats ;_ggdef *_cba .DecoderStats ;_ecgg *_cba .DecoderStats ;_bacd *_cba .DecoderStats ;_bfbg *_cba .DecoderStats ;
_ded *_cba .DecoderStats ;_eagc *_cba .DecoderStats ;_cdd *_cba .DecoderStats ;_abfdf int8 ;_geeg *_cf .Bitmaps ;_bdfe []int ;_dbaf map[int ]int ;_cece bool ;};func (_aageb *TextRegion )encodeSymbols (_bafd _cb .BinaryWriter )(_bdag int ,_cfcec error ){const _cbbg ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
_gbca :=make ([]byte ,4);_gf .BigEndian .PutUint32 (_gbca ,_aageb .NumberOfSymbols );if _bdag ,_cfcec =_bafd .Write (_gbca );_cfcec !=nil {return _bdag ,_be .Wrap (_cfcec ,_cbbg ,"\u004e\u0075\u006dbe\u0072\u004f\u0066\u0053\u0079\u006d\u0062\u006f\u006c\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073");
};_adbd ,_cfcec :=_cf .NewClassedPoints (_aageb ._fdba ,_aageb ._aegfg );if _cfcec !=nil {return 0,_be .Wrap (_cfcec ,_cbbg ,"");};var _fface ,_faaa int ;_bfbe :=_beg .New ();_bfbe .Init ();if _cfcec =_bfbe .EncodeInteger (_beg .IADT ,0);_cfcec !=nil {return _bdag ,_be .Wrap (_cfcec ,_cbbg ,"\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0020\u0044\u0054");
};_aabcd ,_cfcec :=_adbd .GroupByY ();if _cfcec !=nil {return 0,_be .Wrap (_cfcec ,_cbbg ,"");};for _ ,_bfbfa :=range _aabcd {_cfaf :=int (_bfbfa .YAtIndex (0));_dafb :=_cfaf -_fface ;if _cfcec =_bfbe .EncodeInteger (_beg .IADT ,_dafb );_cfcec !=nil {return _bdag ,_be .Wrap (_cfcec ,_cbbg ,"");
};var _ggefd int ;for _cfcf ,_daeda :=range _bfbfa .IntSlice {switch _cfcf {case 0:_cbbga :=int (_bfbfa .XAtIndex (_cfcf ))-_faaa ;if _cfcec =_bfbe .EncodeInteger (_beg .IAFS ,_cbbga );_cfcec !=nil {return _bdag ,_be .Wrap (_cfcec ,_cbbg ,"");};_faaa +=_cbbga ;
_ggefd =_faaa ;default:_ebbee :=int (_bfbfa .XAtIndex (_cfcf ))-_ggefd ;if _cfcec =_bfbe .EncodeInteger (_beg .IADS ,_ebbee );_cfcec !=nil {return _bdag ,_be .Wrap (_cfcec ,_cbbg ,"");};_ggefd +=_ebbee ;};_face ,_gaeg :=_aageb ._fcdb .Get (_daeda );if _gaeg !=nil {return _bdag ,_be .Wrap (_gaeg ,_cbbg ,"");
};_dgef ,_bcag :=_aageb ._cfgf [_face ];if !_bcag {_dgef ,_bcag =_aageb ._caedb [_face ];if !_bcag {return _bdag ,_be .Errorf (_cbbg ,"\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027\u0025d\u0027\u0020\u0069s\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064 \u0069\u006e\u0020\u0067\u006cob\u0061\u006c\u0020\u0061\u006e\u0064\u0020\u006c\u006f\u0063\u0061\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020\u006d\u0061\u0070",_face );
};};if _gaeg =_bfbe .EncodeIAID (_aageb ._fdgd ,_dgef );_gaeg !=nil {return _bdag ,_be .Wrap (_gaeg ,_cbbg ,"");};};if _cfcec =_bfbe .EncodeOOB (_beg .IADS );_cfcec !=nil {return _bdag ,_be .Wrap (_cfcec ,_cbbg ,"");};};_bfbe .Final ();_edcc ,_cfcec :=_bfbe .WriteTo (_bafd );
if _cfcec !=nil {return _bdag ,_be .Wrap (_cfcec ,_cbbg ,"");};_bdag +=int (_edcc );return _bdag ,nil ;};func (_ddg *Header )writeSegmentDataLength (_aab _cb .BinaryWriter )(_aaaa int ,_cfca error ){_ecgd :=make ([]byte ,4);_gf .BigEndian .PutUint32 (_ecgd ,uint32 (_ddg .SegmentDataLength ));
if _aaaa ,_cfca =_aab .Write (_ecgd );_cfca !=nil {return 0,_be .Wrap (_cfca ,"\u0048\u0065a\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u004c\u0065ng\u0074\u0068","");};return _aaaa ,nil ;
};func _bgb (_cgbe _cb .StreamReader ,_bce *Header )*GenericRefinementRegion {return &GenericRefinementRegion {_db :_cgbe ,RegionInfo :NewRegionSegment (_cgbe ),_fg :_bce ,_cffb :&template0 {},_ff :&template1 {}};};func (_fgg *GenericRegion )Size ()int {return _fgg .RegionSegment .Size ()+1+2*len (_fgg .GBAtX )};
func (_bbafe *SymbolDictionary )readNumberOfExportedSymbols ()error {_ceed ,_adaa :=_bbafe ._agc .ReadBits (32);if _adaa !=nil {return _adaa ;};_bbafe .NumberOfExportedSymbols =uint32 (_ceed &_c .MaxUint32 );return nil ;};func (_gfea *SymbolDictionary )InitEncode (symbols *_cf .Bitmaps ,symbolList []int ,symbolMap map[int ]int ,unborderSymbols bool )error {const _fafd ="S\u0079\u006d\u0062\u006f\u006c\u0044i\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002eI\u006e\u0069\u0074E\u006ec\u006f\u0064\u0065";
_gfea .SdATX =[]int8 {3,-3,2,-2};_gfea .SdATY =[]int8 {-1,-1,-2,-2};_gfea ._geeg =symbols ;_gfea ._bdfe =make ([]int ,len (symbolList ));copy (_gfea ._bdfe ,symbolList );if len (_gfea ._bdfe )!=_gfea ._geeg .Size (){return _be .Error (_fafd ,"s\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0061\u006e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u004ci\u0073\u0074\u0020\u006f\u0066\u0020\u0064\u0069\u0066\u0066er\u0065\u006e\u0074 \u0073i\u007a\u0065");
};_gfea .NumberOfNewSymbols =uint32 (symbols .Size ());_gfea .NumberOfExportedSymbols =uint32 (symbols .Size ());_gfea ._dbaf =symbolMap ;_gfea ._cece =unborderSymbols ;return nil ;};func (_agd *GenericRegion )GetRegionInfo ()*RegionSegment {return _agd .RegionSegment };
func (_dgedc *SymbolDictionary )getToExportFlags ()([]int ,error ){var (_gddb int ;_eagcc int32 ;_acce error ;_ebdb =int32 (_dgedc ._cbff +_dgedc .NumberOfNewSymbols );_ecfde =make ([]int ,_ebdb ););for _afaff :=int32 (0);_afaff < _ebdb ;_afaff +=_eagcc {if _dgedc .IsHuffmanEncoded {_eecg ,_dcdf :=_cff .GetStandardTable (1);
if _dcdf !=nil {return nil ,_dcdf ;};_bdege ,_dcdf :=_eecg .Decode (_dgedc ._agc );if _dcdf !=nil {return nil ,_dcdf ;};_eagcc =int32 (_bdege );}else {_eagcc ,_acce =_dgedc ._bgeg .DecodeInt (_dgedc ._bacd );if _acce !=nil {return nil ,_acce ;};};if _eagcc !=0{for _geegd :=_afaff ;
_geegd < _afaff +_eagcc ;_geegd ++{_ecfde [_geegd ]=_gddb ;};};if _gddb ==0{_gddb =1;}else {_gddb =0;};};return _ecfde ,nil ;};func (_aead *Header )readReferredToSegmentNumbers (_fgcdg _cb .StreamReader ,_dbc int )([]int ,error ){const _ggbag ="\u0072\u0065\u0061\u0064R\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053e\u0067m\u0065\u006e\u0074\u004e\u0075\u006d\u0062e\u0072\u0073";
_cdaf :=make ([]int ,_dbc );if _dbc > 0{_aead .RTSegments =make ([]*Header ,_dbc );var (_abaf uint64 ;_cffbf error ;);for _cabe :=0;_cabe < _dbc ;_cabe ++{_abaf ,_cffbf =_fgcdg .ReadBits (byte (_aead .referenceSize ())<<3);if _cffbf !=nil {return nil ,_be .Wrapf (_cffbf ,_ggbag ,"\u0027\u0025\u0064\u0027 \u0072\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0020\u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u0075\u006db\u0065\u0072",_cabe );
};_cdaf [_cabe ]=int (_abaf &_c .MaxInt32 );};};return _cdaf ,nil ;};func (_afgbd *Header )parse (_abgg Documenter ,_ecda _cb .StreamReader ,_feaa int64 ,_fcbb OrganizationType )(_gdfg error ){const _ecbg ="\u0070\u0061\u0072s\u0065";_gfa .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u005b\u0050A\u0052\u0053\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");
defer func (){if _gdfg !=nil {_gfa .Log .Trace ("\u005b\u0053\u0045GM\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045R\u005d[\u0050A\u0052S\u0045\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_gdfg );}else {_gfa .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052]\u005bP\u0041\u0052\u0053\u0045\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
};}();_ ,_gdfg =_ecda .Seek (_feaa ,_d .SeekStart );if _gdfg !=nil {return _be .Wrap (_gdfg ,_ecbg ,"\u0073\u0065\u0065\u006b\u0020\u0073\u0074\u0061\u0072\u0074");};if _gdfg =_afgbd .readSegmentNumber (_ecda );_gdfg !=nil {return _be .Wrap (_gdfg ,_ecbg ,"");
};if _gdfg =_afgbd .readHeaderFlags ();_gdfg !=nil {return _be .Wrap (_gdfg ,_ecbg ,"");};var _bgde uint64 ;_bgde ,_gdfg =_afgbd .readNumberOfReferredToSegments (_ecda );if _gdfg !=nil {return _be .Wrap (_gdfg ,_ecbg ,"");};_afgbd .RTSNumbers ,_gdfg =_afgbd .readReferredToSegmentNumbers (_ecda ,int (_bgde ));
if _gdfg !=nil {return _be .Wrap (_gdfg ,_ecbg ,"");};_gdfg =_afgbd .readSegmentPageAssociation (_abgg ,_ecda ,_bgde ,_afgbd .RTSNumbers ...);if _gdfg !=nil {return _be .Wrap (_gdfg ,_ecbg ,"");};if _afgbd .Type !=TEndOfFile {if _gdfg =_afgbd .readSegmentDataLength (_ecda );
_gdfg !=nil {return _be .Wrap (_gdfg ,_ecbg ,"");};};_afgbd .readDataStartOffset (_ecda ,_fcbb );_afgbd .readHeaderLength (_ecda ,_feaa );_gfa .Log .Trace ("\u0025\u0073",_afgbd );return nil ;};func (_fada *TextRegion )decodeCurrentT ()(int64 ,error ){if _fada .SbStrips !=1{if _fada .IsHuffmanEncoded {_agegf ,_bedgd :=_fada ._fbe .ReadBits (byte (_fada .LogSBStrips ));
return int64 (_agegf ),_bedgd ;};_aggc ,_fagd :=_fada ._bffe .DecodeInt (_fada ._cadc );if _fagd !=nil {return 0,_fagd ;};return int64 (_aggc ),nil ;};return 0,nil ;};func (_abfd *PageInformationSegment )readRequiresAuxiliaryBuffer ()error {_ecdfg ,_gfegf :=_abfd ._ccab .ReadBit ();
if _gfegf !=nil {return _gfegf ;};if _ecdfg ==1{_abfd ._gcec =true ;};return nil ;};func (_cca *EndOfStripe )Init (h *Header ,r _cb .StreamReader )error {_cca ._eeg =r ;return _cca .parseHeader (h ,r );};func (_bfda *SymbolDictionary )huffDecodeRefAggNInst ()(int64 ,error ){if !_bfda .SdHuffAggInstanceSelection {_feed ,_gdb :=_cff .GetStandardTable (1);
if _gdb !=nil {return 0,_gdb ;};return _feed .Decode (_bfda ._agc );};if _bfda ._bgbd ==nil {var (_cefd int ;_baac error ;);if _bfda .SdHuffDecodeHeightSelection ==3{_cefd ++;};if _bfda .SdHuffDecodeWidthSelection ==3{_cefd ++;};if _bfda .SdHuffBMSizeSelection ==3{_cefd ++;
};_bfda ._bgbd ,_baac =_bfda .getUserTable (_cefd );if _baac !=nil {return 0,_baac ;};};return _bfda ._bgbd .Decode (_bfda ._agc );};func (_bagg *SymbolDictionary )getSymbol (_fdd int )(*_cf .Bitmap ,error ){const _becec ="\u0067e\u0074\u0053\u0079\u006d\u0062\u006fl";
_bfaf ,_eeae :=_bagg ._geeg .GetBitmap (_bagg ._bdfe [_fdd ]);if _eeae !=nil {return nil ,_be .Wrap (_eeae ,_becec ,"\u0063\u0061n\u0027\u0074\u0020g\u0065\u0074\u0020\u0073\u0079\u006d\u0062\u006f\u006c");};return _bfaf ,nil ;};func (_ebcf *SymbolDictionary )setSymbolsArray ()error {if _ebcf ._cdggc ==nil {if _gfgaf :=_ebcf .retrieveImportSymbols ();
_gfgaf !=nil {return _gfgaf ;};};if _ebcf ._fgce ==nil {_ebcf ._fgce =append (_ebcf ._fgce ,_ebcf ._cdggc ...);};return nil ;};func (_edfde *SymbolDictionary )decodeHeightClassBitmap (_acfa *_cf .Bitmap ,_ccf int64 ,_fcffg int ,_bgga []int )error {for _dfee :=_ccf ;
_dfee < int64 (_edfde ._deab );_dfee ++{var _eadg int ;for _gcea :=_ccf ;_gcea <=_dfee -1;_gcea ++{_eadg +=_bgga [_gcea ];};_cfeee :=_g .Rect (_eadg ,0,_eadg +_bgga [_dfee ],_fcffg );_bgeb ,_afggb :=_cf .Extract (_cfeee ,_acfa );if _afggb !=nil {return _afggb ;
};_edfde ._gdab [_dfee ]=_bgeb ;_edfde ._fgce =append (_edfde ._fgce ,_bgeb );};return nil ;};func (_aagc *HalftoneRegion )computeGrayScalePlanes (_eddb []*_cf .Bitmap ,_abd int )([][]int ,error ){_eaeea :=make ([][]int ,_aagc .HGridHeight );for _fccf :=0;
_fccf < len (_eaeea );_fccf ++{_eaeea [_fccf ]=make ([]int ,_aagc .HGridWidth );};for _caff :=0;_caff < int (_aagc .HGridHeight );_caff ++{for _dfeb :=0;_dfeb < int (_aagc .HGridWidth );_dfeb +=8{var _egbc int ;if _daa :=int (_aagc .HGridWidth )-_dfeb ;
_daa > 8{_egbc =8;}else {_egbc =_daa ;};_acb :=_eddb [0].GetByteIndex (_dfeb ,_caff );for _bggf :=0;_bggf < _egbc ;_bggf ++{_bdcf :=_bggf +_dfeb ;_eaeea [_caff ][_bdcf ]=0;for _beac :=0;_beac < _abd ;_beac ++{_bddb ,_gcc :=_eddb [_beac ].GetByte (_acb );
if _gcc !=nil {return nil ,_gcc ;};_aadga :=_bddb >>uint (7-_bdcf &7);_ddbe :=_aadga &1;_ecea :=1<<uint (_beac );_cgc :=int (_ddbe )*_ecea ;_eaeea [_caff ][_bdcf ]+=_cgc ;};};};};return _eaeea ,nil ;};func (_feea *TextRegion )parseHeader ()error {var _fdge error ;
_gfa .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069n\u0073\u002e\u002e\u002e");defer func (){if _fdge !=nil {_gfa .Log .Trace ("\u005b\u0054\u0045\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044E\u0052\u005d\u0020\u0066\u0061i\u006c\u0065d\u002e\u0020\u0025\u0076",_fdge );
}else {_gfa .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069s\u0068\u0065\u0064\u002e");};}();if _fdge =_feea .RegionInfo .parseHeader ();
_fdge !=nil {return _fdge ;};if _fdge =_feea .readRegionFlags ();_fdge !=nil {return _fdge ;};if _feea .IsHuffmanEncoded {if _fdge =_feea .readHuffmanFlags ();_fdge !=nil {return _fdge ;};};if _fdge =_feea .readUseRefinement ();_fdge !=nil {return _fdge ;
};if _fdge =_feea .readAmountOfSymbolInstances ();_fdge !=nil {return _fdge ;};if _fdge =_feea .getSymbols ();_fdge !=nil {return _fdge ;};if _fdge =_feea .computeSymbolCodeLength ();_fdge !=nil {return _fdge ;};if _fdge =_feea .checkInput ();_fdge !=nil {return _fdge ;
};_gfa .Log .Trace ("\u0025\u0073",_feea .String ());return nil ;};func (_bfb *GenericRegion )setOverrideFlag (_def int ){_bfb .GBAtOverride [_def ]=true ;_bfb ._cbcb =true ;};func (_gabd *TextRegion )blit (_gdgc *_cf .Bitmap ,_gbdd int64 )error {if _gabd .IsTransposed ==0&&(_gabd .ReferenceCorner ==2||_gabd .ReferenceCorner ==3){_gabd ._befe +=int64 (_gdgc .Width -1);
}else if _gabd .IsTransposed ==1&&(_gabd .ReferenceCorner ==0||_gabd .ReferenceCorner ==2){_gabd ._befe +=int64 (_gdgc .Height -1);};_gfbee :=_gabd ._befe ;if _gabd .IsTransposed ==1{_gfbee ,_gbdd =_gbdd ,_gfbee ;};switch _gabd .ReferenceCorner {case 0:_gbdd -=int64 (_gdgc .Height -1);
case 2:_gbdd -=int64 (_gdgc .Height -1);_gfbee -=int64 (_gdgc .Width -1);case 3:_gfbee -=int64 (_gdgc .Width -1);};_bbcfe :=_cf .Blit (_gdgc ,_gabd .RegionBitmap ,int (_gfbee ),int (_gbdd ),_gabd .CombinationOperator );if _bbcfe !=nil {return _bbcfe ;};
if _gabd .IsTransposed ==0&&(_gabd .ReferenceCorner ==0||_gabd .ReferenceCorner ==1){_gabd ._befe +=int64 (_gdgc .Width -1);};if _gabd .IsTransposed ==1&&(_gabd .ReferenceCorner ==1||_gabd .ReferenceCorner ==3){_gabd ._befe +=int64 (_gdgc .Height -1);};
return nil ;};var (_ Regioner =&TextRegion {};_ Segmenter =&TextRegion {};);func (_cfb *PageInformationSegment )readWidthAndHeight ()error {_edg ,_fafc :=_cfb ._ccab .ReadBits (32);if _fafc !=nil {return _fafc ;};_cfb .PageBMWidth =int (_edg &_c .MaxInt32 );
_edg ,_fafc =_cfb ._ccab .ReadBits (32);if _fafc !=nil {return _fafc ;};_cfb .PageBMHeight =int (_edg &_c .MaxInt32 );return nil ;};func (_cfeea *SymbolDictionary )encodeSymbols (_afd _cb .BinaryWriter )(_dcfg int ,_fgdd error ){const _gaef ="\u0065\u006e\u0063o\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c";
_dbga :=_beg .New ();_dbga .Init ();_bbe ,_fgdd :=_cfeea ._geeg .SelectByIndexes (_cfeea ._bdfe );if _fgdd !=nil {return 0,_be .Wrap (_fgdd ,_gaef ,"\u0069n\u0069\u0074\u0069\u0061\u006c");};_acbe :=map[*_cf .Bitmap ]int {};for _gccfa ,_abec :=range _bbe .Values {_acbe [_abec ]=_gccfa ;
};_bbe .SortByHeight ();var _eged ,_daeff int ;_deef ,_fgdd :=_bbe .GroupByHeight ();if _fgdd !=nil {return 0,_be .Wrap (_fgdd ,_gaef ,"");};for _ ,_agfe :=range _deef .Values {_eebf :=_agfe .Values [0].Height ;_fbff :=_eebf -_eged ;if _fgdd =_dbga .EncodeInteger (_beg .IADH ,_fbff );
_fgdd !=nil {return 0,_be .Wrapf (_fgdd ,_gaef ,"\u0049\u0041\u0044\u0048\u0020\u0066\u006f\u0072\u0020\u0064\u0068\u003a \u0027\u0025\u0064\u0027",_fbff );};_eged =_eebf ;_aggb ,_feda :=_agfe .GroupByWidth ();if _feda !=nil {return 0,_be .Wrapf (_feda ,_gaef ,"\u0068\u0065\u0069g\u0068\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_eebf );
};var _dcgc int ;for _ ,_dgaad :=range _aggb .Values {for _ ,_bcdf :=range _dgaad .Values {_aac :=_bcdf .Width ;_dbfg :=_aac -_dcgc ;if _feda =_dbga .EncodeInteger (_beg .IADW ,_dbfg );_feda !=nil {return 0,_be .Wrapf (_feda ,_gaef ,"\u0049\u0041\u0044\u0057\u0020\u0066\u006f\u0072\u0020\u0064\u0077\u003a \u0027\u0025\u0064\u0027",_dbfg );
};_dcgc +=_dbfg ;if _feda =_dbga .EncodeBitmap (_bcdf ,false );_feda !=nil {return 0,_be .Wrapf (_feda ,_gaef ,"H\u0065i\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u0020W\u0069\u0064\u0074\u0068: \u0025\u0064",_eebf ,_aac );};_aadge :=_acbe [_bcdf ];_cfeea ._dbaf [_aadge ]=_daeff ;
_daeff ++;};};if _feda =_dbga .EncodeOOB (_beg .IADW );_feda !=nil {return 0,_be .Wrap (_feda ,_gaef ,"\u0049\u0041\u0044\u0057");};};if _fgdd =_dbga .EncodeInteger (_beg .IAEX ,0);_fgdd !=nil {return 0,_be .Wrap (_fgdd ,_gaef ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};if _fgdd =_dbga .EncodeInteger (_beg .IAEX ,len (_cfeea ._bdfe ));_fgdd !=nil {return 0,_be .Wrap (_fgdd ,_gaef ,"\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0073\u0079m\u0062\u006f\u006c\u0073");};_dbga .Final ();_ccdb ,_fgdd :=_dbga .WriteTo (_afd );
if _fgdd !=nil {return 0,_be .Wrap (_fgdd ,_gaef ,"\u0077\u0072i\u0074\u0069\u006e\u0067 \u0065\u006ec\u006f\u0064\u0065\u0072\u0020\u0063\u006f\u006et\u0065\u0078\u0074\u0020\u0074\u006f\u0020\u0027\u0077\u0027\u0020\u0077r\u0069\u0074\u0065\u0072");};
return int (_ccdb ),nil ;};func (_aacb *TextRegion )decodeIb (_eccc ,_begba int64 )(*_cf .Bitmap ,error ){const _fcdbd ="\u0064\u0065\u0063\u006f\u0064\u0065\u0049\u0062";var (_fdfc error ;_fcfff *_cf .Bitmap ;);if _eccc ==0{if int (_begba )> len (_aacb .Symbols )-1{return nil ,_be .Error (_fcdbd ,"\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0049\u0042\u0020\u0062\u0069\u0074\u006d\u0061\u0070\u002e\u0020\u0069\u006e\u0064\u0065x\u0020\u006f\u0075\u0074\u0020o\u0066\u0020r\u0061\u006e\u0067\u0065");
};return _aacb .Symbols [int (_begba )],nil ;};var _aede ,_dafe ,_ggaf ,_agcd int64 ;_aede ,_fdfc =_aacb .decodeRdw ();if _fdfc !=nil {return nil ,_be .Wrap (_fdfc ,_fcdbd ,"");};_dafe ,_fdfc =_aacb .decodeRdh ();if _fdfc !=nil {return nil ,_be .Wrap (_fdfc ,_fcdbd ,"");
};_ggaf ,_fdfc =_aacb .decodeRdx ();if _fdfc !=nil {return nil ,_be .Wrap (_fdfc ,_fcdbd ,"");};_agcd ,_fdfc =_aacb .decodeRdy ();if _fdfc !=nil {return nil ,_be .Wrap (_fdfc ,_fcdbd ,"");};if _aacb .IsHuffmanEncoded {if _ ,_fdfc =_aacb .decodeSymInRefSize ();
_fdfc !=nil {return nil ,_be .Wrap (_fdfc ,_fcdbd ,"");};_aacb ._fbe .Align ();};_abggd :=_aacb .Symbols [_begba ];_ecccf :=uint32 (_abggd .Width );_abcc :=uint32 (_abggd .Height );_fbed :=int32 (uint32 (_aede )>>1)+int32 (_ggaf );_dcdgd :=int32 (uint32 (_dafe )>>1)+int32 (_agcd );
if _aacb ._gaab ==nil {_aacb ._gaab =_bgb (_aacb ._fbe ,nil );};_aacb ._gaab .setParameters (_aacb ._dgdd ,_aacb ._bffe ,_aacb .SbrTemplate ,_ecccf +uint32 (_aede ),_abcc +uint32 (_dafe ),_abggd ,_fbed ,_dcdgd ,false ,_aacb .SbrATX ,_aacb .SbrATY );_fcfff ,_fdfc =_aacb ._gaab .GetRegionBitmap ();
if _fdfc !=nil {return nil ,_be .Wrap (_fdfc ,_fcdbd ,"\u0067\u0072\u0066");};if _aacb .IsHuffmanEncoded {_aacb ._fbe .Align ();};return _fcfff ,nil ;};func (_aaea *TextRegion )decodeIds ()(int64 ,error ){const _cdfb ="\u0064e\u0063\u006f\u0064\u0065\u0049\u0064s";
if _aaea .IsHuffmanEncoded {if _aaea .SbHuffDS ==3{if _aaea ._fffa ==nil {_aagcd :=0;if _aaea .SbHuffFS ==3{_aagcd ++;};var _fabf error ;_aaea ._fffa ,_fabf =_aaea .getUserTable (_aagcd );if _fabf !=nil {return 0,_be .Wrap (_fabf ,_cdfb ,"");};};return _aaea ._fffa .Decode (_aaea ._fbe );
};_decb ,_gagg :=_cff .GetStandardTable (8+int (_aaea .SbHuffDS ));if _gagg !=nil {return 0,_be .Wrap (_gagg ,_cdfb ,"");};return _decb .Decode (_aaea ._fbe );};_cbgc ,_gfgd :=_aaea ._bffe .DecodeInt (_aaea ._aabd );if _gfgd !=nil {return 0,_be .Wrap (_gfgd ,_cdfb ,"\u0063\u0078\u0049\u0041\u0044\u0053");
};return int64 (_cbgc ),nil ;};func (_eaab *TextRegion )initSymbols ()error {const _fbad ="i\u006e\u0069\u0074\u0053\u0079\u006d\u0062\u006f\u006c\u0073";for _ ,_gbac :=range _eaab .Header .RTSegments {if _gbac ==nil {return _be .Error (_fbad ,"\u006e\u0069\u006c\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020pr\u006f\u0076\u0069\u0064\u0065\u0064 \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0074\u0065\u0078\u0074\u0020\u0072\u0065g\u0069\u006f\u006e\u0020\u0053\u0079\u006d\u0062o\u006c\u0073");
};if _gbac .Type ==0{_dead ,_cgacf :=_gbac .GetSegmentData ();if _cgacf !=nil {return _be .Wrap (_cgacf ,_fbad ,"");};_bgc ,_baea :=_dead .(*SymbolDictionary );if !_baea {return _be .Error (_fbad ,"\u0072e\u0066\u0065r\u0072\u0065\u0064 \u0054\u006f\u0020\u0053\u0065\u0067\u006de\u006e\u0074\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_bgc ._cdd =_eaab ._gcgaa ;_gfgb ,_cgacf :=_bgc .GetDictionary ();if _cgacf !=nil {return _be .Wrap (_cgacf ,_fbad ,"");};_eaab .Symbols =append (_eaab .Symbols ,_gfgb ...);};};_eaab .NumberOfSymbols =uint32 (len (_eaab .Symbols ));return nil ;};func (_eada *HalftoneRegion )GetRegionInfo ()*RegionSegment {return _eada .RegionSegment };
func (_caafc *TextRegion )Encode (w _cb .BinaryWriter )(_egea int ,_affbc error ){const _ebag ="\u0054\u0065\u0078\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u002e\u0045n\u0063\u006f\u0064\u0065";if _egea ,_affbc =_caafc .RegionInfo .Encode (w );_affbc !=nil {return _egea ,_be .Wrap (_affbc ,_ebag ,"");
};var _bcgb int ;if _bcgb ,_affbc =_caafc .encodeFlags (w );_affbc !=nil {return _egea ,_be .Wrap (_affbc ,_ebag ,"");};_egea +=_bcgb ;if _bcgb ,_affbc =_caafc .encodeSymbols (w );_affbc !=nil {return _egea ,_be .Wrap (_affbc ,_ebag ,"");};_egea +=_bcgb ;
return _egea ,nil ;};func (_ggea *SymbolDictionary )encodeNumSyms (_dbde _cb .BinaryWriter )(_dgaa int ,_afed error ){const _gfdfe ="\u0065\u006e\u0063\u006f\u0064\u0065\u004e\u0075\u006d\u0053\u0079\u006d\u0073";_agaaf :=make ([]byte ,4);_gf .BigEndian .PutUint32 (_agaaf ,_ggea .NumberOfExportedSymbols );
if _dgaa ,_afed =_dbde .Write (_agaaf );_afed !=nil {return _dgaa ,_be .Wrap (_afed ,_gfdfe ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};_gf .BigEndian .PutUint32 (_agaaf ,_ggea .NumberOfNewSymbols );_egbfg ,_afed :=_dbde .Write (_agaaf );
if _afed !=nil {return _dgaa ,_be .Wrap (_afed ,_gfdfe ,"n\u0065\u0077\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};return _dgaa +_egbfg ,nil ;};func (_bbcb *PageInformationSegment )String ()string {_adec :=&_af .Builder {};_adec .WriteString ("\u000a\u005b\u0050\u0041G\u0045\u002d\u0049\u004e\u0046\u004f\u0052\u004d\u0041\u0054I\u004fN\u002d\u0053\u0045\u0047\u004d\u0045\u004eT\u005d\u000a");
_adec .WriteString (_f .Sprintf ("\u0009\u002d \u0042\u004d\u0048e\u0069\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u000a",_bbcb .PageBMHeight ));_adec .WriteString (_f .Sprintf ("\u0009-\u0020B\u004d\u0057\u0069\u0064\u0074\u0068\u003a\u0020\u0025\u0064\u000a",_bbcb .PageBMWidth ));
_adec .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0058\u003a\u0020\u0025\u0064\u000a",_bbcb .ResolutionX ));_adec .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0059\u003a\u0020\u0025\u0064\u000a",_bbcb .ResolutionY ));
_adec .WriteString (_f .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0073\u000a",_bbcb ._aeee ));_adec .WriteString (_f .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006eO\u0070\u0065\u0072\u0061\u0074\u006f\u0072O\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025v\u000a",_bbcb ._cged ));
_adec .WriteString (_f .Sprintf ("\u0009-\u0020I\u0073\u004c\u006f\u0073\u0073l\u0065\u0073s\u003a\u0020\u0025\u0076\u000a",_bbcb .IsLossless ));_adec .WriteString (_f .Sprintf ("\u0009\u002d\u0020R\u0065\u0071\u0075\u0069r\u0065\u0073\u0041\u0075\u0078\u0069\u006ci\u0061\u0072\u0079\u0042\u0075\u0066\u0066\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_bbcb ._gcec ));
_adec .WriteString (_f .Sprintf ("\u0009\u002d\u0020M\u0069\u0067\u0068\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0052e\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0076\u000a",_bbcb ._ebec ));_adec .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0049\u0073\u0053\u0074\u0072\u0069\u0070\u0065\u0064:\u0020\u0025\u0076\u000a",_bbcb .IsStripe ));
_adec .WriteString (_f .Sprintf ("\t\u002d\u0020\u004d\u0061xS\u0074r\u0069\u0070\u0065\u0053\u0069z\u0065\u003a\u0020\u0025\u0076\u000a",_bbcb .MaxStripeSize ));return _adec .String ();};func (_dgc *HalftoneRegion )computeX (_fec ,_ecbc int )int {return _dgc .shiftAndFill (int (_dgc .HGridX )+_fec *int (_dgc .HRegionY )+_ecbc *int (_dgc .HRegionX ));
};func (_gaba *SymbolDictionary )decodeHeightClassCollectiveBitmap (_cceeb int64 ,_cccf ,_aefbb uint32 )(*_cf .Bitmap ,error ){if _cceeb ==0{_decf :=_cf .New (int (_aefbb ),int (_cccf ));var (_beeb byte ;_acdd error ;);for _gdggf :=0;_gdggf < len (_decf .Data );
_gdggf ++{_beeb ,_acdd =_gaba ._agc .ReadByte ();if _acdd !=nil {return nil ,_acdd ;};if _acdd =_decf .SetByte (_gdggf ,_beeb );_acdd !=nil {return nil ,_acdd ;};};return _decf ,nil ;};if _gaba ._geeff ==nil {_gaba ._geeff =NewGenericRegion (_gaba ._agc );
};_gaba ._geeff .setParameters (true ,_gaba ._agc .StreamPosition (),_cceeb ,_cccf ,_aefbb );_eafe ,_dfcea :=_gaba ._geeff .GetRegionBitmap ();if _dfcea !=nil {return nil ,_dfcea ;};return _eafe ,nil ;};func (_gedb *TextRegion )readHuffmanFlags ()error {var (_agcb int ;
_ceeae uint64 ;_fffbb error ;);_ ,_fffbb =_gedb ._fbe .ReadBit ();if _fffbb !=nil {return _fffbb ;};_agcb ,_fffbb =_gedb ._fbe .ReadBit ();if _fffbb !=nil {return _fffbb ;};_gedb .SbHuffRSize =int8 (_agcb );_ceeae ,_fffbb =_gedb ._fbe .ReadBits (2);if _fffbb !=nil {return _fffbb ;
};_gedb .SbHuffRDY =int8 (_ceeae )&0xf;_ceeae ,_fffbb =_gedb ._fbe .ReadBits (2);if _fffbb !=nil {return _fffbb ;};_gedb .SbHuffRDX =int8 (_ceeae )&0xf;_ceeae ,_fffbb =_gedb ._fbe .ReadBits (2);if _fffbb !=nil {return _fffbb ;};_gedb .SbHuffRDHeight =int8 (_ceeae )&0xf;
_ceeae ,_fffbb =_gedb ._fbe .ReadBits (2);if _fffbb !=nil {return _fffbb ;};_gedb .SbHuffRDWidth =int8 (_ceeae )&0xf;_ceeae ,_fffbb =_gedb ._fbe .ReadBits (2);if _fffbb !=nil {return _fffbb ;};_gedb .SbHuffDT =int8 (_ceeae )&0xf;_ceeae ,_fffbb =_gedb ._fbe .ReadBits (2);
if _fffbb !=nil {return _fffbb ;};_gedb .SbHuffDS =int8 (_ceeae )&0xf;_ceeae ,_fffbb =_gedb ._fbe .ReadBits (2);if _fffbb !=nil {return _fffbb ;};_gedb .SbHuffFS =int8 (_ceeae )&0xf;return nil ;};func (_cceg *TextRegion )decodeDfs ()(int64 ,error ){if _cceg .IsHuffmanEncoded {if _cceg .SbHuffFS ==3{if _cceg ._eegga ==nil {var _cceebd error ;
_cceg ._eegga ,_cceebd =_cceg .getUserTable (0);if _cceebd !=nil {return 0,_cceebd ;};};return _cceg ._eegga .Decode (_cceg ._fbe );};_faeg ,_abgf :=_cff .GetStandardTable (6+int (_cceg .SbHuffFS ));if _abgf !=nil {return 0,_abgf ;};return _faeg .Decode (_cceg ._fbe );
};_affg ,_gbf :=_cceg ._bffe .DecodeInt (_cceg ._baged );if _gbf !=nil {return 0,_gbf ;};return int64 (_affg ),nil ;};func (_ccbb *TextRegion )decodeDT ()(_fgab int64 ,_ffgb error ){if _ccbb .IsHuffmanEncoded {if _ccbb .SbHuffDT ==3{_fgab ,_ffgb =_ccbb ._cecfe .Decode (_ccbb ._fbe );
if _ffgb !=nil {return 0,_ffgb ;};}else {var _efeca _cff .Tabler ;_efeca ,_ffgb =_cff .GetStandardTable (11+int (_ccbb .SbHuffDT ));if _ffgb !=nil {return 0,_ffgb ;};_fgab ,_ffgb =_efeca .Decode (_ccbb ._fbe );if _ffgb !=nil {return 0,_ffgb ;};};}else {var _bggfd int32 ;
_bggfd ,_ffgb =_ccbb ._bffe .DecodeInt (_ccbb ._fbde );if _ffgb !=nil {return ;};_fgab =int64 (_bggfd );};_fgab *=int64 (_ccbb .SbStrips );return _fgab ,nil ;};func (_eaac *HalftoneRegion )combineGrayscalePlanes (_fcgc []*_cf .Bitmap ,_edcb int )error {_fed :=0;
for _dgbf :=0;_dgbf < _fcgc [_edcb ].Height ;_dgbf ++{for _efa :=0;_efa < _fcgc [_edcb ].Width ;_efa +=8{_faea ,_bbab :=_fcgc [_edcb +1].GetByte (_fed );if _bbab !=nil {return _bbab ;};_eaag ,_bbab :=_fcgc [_edcb ].GetByte (_fed );if _bbab !=nil {return _bbab ;
};_bbab =_fcgc [_edcb ].SetByte (_fed ,_cf .CombineBytes (_eaag ,_faea ,_cf .CmbOpXor ));if _bbab !=nil {return _bbab ;};_fed ++;};};return nil ;};func (_fce *PageInformationSegment )checkInput ()error {if _fce .PageBMHeight ==_c .MaxInt32 {if !_fce .IsStripe {_gfa .Log .Debug ("P\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0053\u0065\u0067me\u006e\u0074\u002e\u0049s\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0073\u0068ou\u006c\u0064 \u0062\u0065\u0020\u0074\u0072\u0075\u0065\u002e");
};};return nil ;};func (_acac *Header )readNumberOfReferredToSegments (_bebd _cb .StreamReader )(uint64 ,error ){const _bfgf ="\u0072\u0065\u0061\u0064\u004e\u0075\u006d\u0062\u0065\u0072O\u0066\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
_cbd ,_aeed :=_bebd .ReadBits (3);if _aeed !=nil {return 0,_be .Wrap (_aeed ,_bfgf ,"\u0063\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0072\u0074\u0073");};_cbd &=0xf;var _bed []byte ;if _cbd <=4{_bed =make ([]byte ,5);for _ccdf :=0;_ccdf <=4;_ccdf ++{_fgcbg ,_fcff :=_bebd .ReadBit ();
if _fcff !=nil {return 0,_be .Wrap (_fcff ,_bfgf ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_bed [_ccdf ]=byte (_fgcbg );};}else {_cbd ,_aeed =_bebd .ReadBits (29);if _aeed !=nil {return 0,_aeed ;};_cbd &=_c .MaxInt32 ;_eadae :=(_cbd +8)>>3;
_eadae <<=3;_bed =make ([]byte ,_eadae );var _cegc uint64 ;for _cegc =0;_cegc < _eadae ;_cegc ++{_dbgf ,_faed :=_bebd .ReadBit ();if _faed !=nil {return 0,_be .Wrap (_faed ,_bfgf ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_bed [_cegc ]=byte (_dbgf );
};};return _cbd ,nil ;};func (_egdc *PatternDictionary )parseHeader ()error {_gfa .Log .Trace ("\u005b\u0050\u0041\u0054\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054I\u004f\u004e\u0041\u0052\u0059\u005d[\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d\u0020b\u0065\u0067\u0069\u006e");
defer func (){_gfa .Log .Trace ("\u005b\u0050\u0041T\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u005b\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
}();_ ,_aadfg :=_egdc ._gedc .ReadBits (5);if _aadfg !=nil {return _aadfg ;};if _aadfg =_egdc .readTemplate ();_aadfg !=nil {return _aadfg ;};if _aadfg =_egdc .readIsMMREncoded ();_aadfg !=nil {return _aadfg ;};if _aadfg =_egdc .readPatternWidthAndHeight ();
_aadfg !=nil {return _aadfg ;};if _aadfg =_egdc .readGrayMax ();_aadfg !=nil {return _aadfg ;};if _aadfg =_egdc .computeSegmentDataStructure ();_aadfg !=nil {return _aadfg ;};return _egdc .checkInput ();};func (_ddbc *PatternDictionary )GetDictionary ()([]*_cf .Bitmap ,error ){if _ddbc .Patterns !=nil {return _ddbc .Patterns ,nil ;
};if !_ddbc .IsMMREncoded {_ddbc .setGbAtPixels ();};_eebd :=NewGenericRegion (_ddbc ._gedc );_eebd .setParametersMMR (_ddbc .IsMMREncoded ,_ddbc .DataOffset ,_ddbc .DataLength ,uint32 (_ddbc .HdpHeight ),(_ddbc .GrayMax +1)*uint32 (_ddbc .HdpWidth ),_ddbc .HDTemplate ,false ,false ,_ddbc .GBAtX ,_ddbc .GBAtY );
_gcb ,_ebcg :=_eebd .GetRegionBitmap ();if _ebcg !=nil {return nil ,_ebcg ;};if _ebcg =_ddbc .extractPatterns (_gcb );_ebcg !=nil {return nil ,_ebcg ;};return _ddbc .Patterns ,nil ;};func (_affb *SymbolDictionary )readAtPixels (_dedc int )error {_affb .SdATX =make ([]int8 ,_dedc );
_affb .SdATY =make ([]int8 ,_dedc );var (_ddca byte ;_cgac error ;);for _bfab :=0;_bfab < _dedc ;_bfab ++{_ddca ,_cgac =_affb ._agc .ReadByte ();if _cgac !=nil {return _cgac ;};_affb .SdATX [_bfab ]=int8 (_ddca );_ddca ,_cgac =_affb ._agc .ReadByte ();
if _cgac !=nil {return _cgac ;};_affb .SdATY [_bfab ]=int8 (_ddca );};return nil ;};func NewHeader (d Documenter ,r _cb .StreamReader ,offset int64 ,organizationType OrganizationType )(*Header ,error ){_dded :=&Header {Reader :r };if _ffca :=_dded .parse (d ,r ,offset ,organizationType );
_ffca !=nil {return nil ,_be .Wrap (_ffca ,"\u004ee\u0077\u0048\u0065\u0061\u0064\u0065r","");};return _dded ,nil ;};func (_bedb *PageInformationSegment )CombinationOperatorOverrideAllowed ()bool {return _bedb ._cged };func (_dbdg *PatternDictionary )Init (h *Header ,r _cb .StreamReader )error {_dbdg ._gedc =r ;
return _dbdg .parseHeader ();};func (_eaeeaf *PatternDictionary )checkInput ()error {if _eaeeaf .HdpHeight < 1||_eaeeaf .HdpWidth < 1{return _fc .New ("in\u0076\u0061l\u0069\u0064\u0020\u0048\u0065\u0061\u0064\u0065\u0072 \u0056\u0061\u006c\u0075\u0065\u003a\u0020\u0057\u0069\u0064\u0074\u0068\u002f\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020g\u0072e\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020z\u0065\u0072o");
};if _eaeeaf .IsMMREncoded {if _eaeeaf .HDTemplate !=0{_gfa .Log .Debug ("\u0076\u0061\u0072\u0069\u0061\u0062\u006c\u0065\u0020\u0048\u0044\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e \u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030");
};};return nil ;};func (_ggg *TextRegion )setCodingStatistics ()error {if _ggg ._fbde ==nil {_ggg ._fbde =_cba .NewStats (512,1);};if _ggg ._baged ==nil {_ggg ._baged =_cba .NewStats (512,1);};if _ggg ._aabd ==nil {_ggg ._aabd =_cba .NewStats (512,1);};
if _ggg ._cadc ==nil {_ggg ._cadc =_cba .NewStats (512,1);};if _ggg ._gddg ==nil {_ggg ._gddg =_cba .NewStats (512,1);};if _ggg ._gbcb ==nil {_ggg ._gbcb =_cba .NewStats (512,1);};if _ggg ._eeeg ==nil {_ggg ._eeeg =_cba .NewStats (512,1);};if _ggg ._gcgaa ==nil {_ggg ._gcgaa =_cba .NewStats (1<<uint (_ggg ._gfae ),1);
};if _ggg ._fefb ==nil {_ggg ._fefb =_cba .NewStats (512,1);};if _ggg ._adbg ==nil {_ggg ._adbg =_cba .NewStats (512,1);};if _ggg ._bffe ==nil {var _fadge error ;_ggg ._bffe ,_fadge =_cba .New (_ggg ._fbe );if _fadge !=nil {return _fadge ;};};return nil ;
};func (_ceea *PageInformationSegment )readResolution ()error {_fede ,_fdbc :=_ceea ._ccab .ReadBits (32);if _fdbc !=nil {return _fdbc ;};_ceea .ResolutionX =int (_fede &_c .MaxInt32 );_fede ,_fdbc =_ceea ._ccab .ReadBits (32);if _fdbc !=nil {return _fdbc ;
};_ceea .ResolutionY =int (_fede &_c .MaxInt32 );return nil ;};func (_bfaae *TableSegment )HtLow ()int32 {return _bfaae ._bbda };func (_bga *SymbolDictionary )getSbSymCodeLen ()int8 {_fafe :=int8 (_c .Ceil (_c .Log (float64 (_bga ._cbff +_bga .NumberOfNewSymbols ))/_c .Log (2)));
if _bga .IsHuffmanEncoded &&_fafe < 1{return 1;};return _fafe ;};type Documenter interface{GetPage (int )(Pager ,error );GetGlobalSegment (int )(*Header ,error );};func (_bbd *HalftoneRegion )GetRegionBitmap ()(*_cf .Bitmap ,error ){if _bbd .HalftoneRegionBitmap !=nil {return _bbd .HalftoneRegionBitmap ,nil ;
};var _eafb error ;_bbd .HalftoneRegionBitmap =_cf .New (int (_bbd .RegionSegment .BitmapWidth ),int (_bbd .RegionSegment .BitmapHeight ));if _bbd .Patterns ==nil ||len (_bbd .Patterns )==0{_bbd .Patterns ,_eafb =_bbd .GetPatterns ();if _eafb !=nil {return nil ,_eafb ;
};};if _bbd .HDefaultPixel ==1{_bbd .HalftoneRegionBitmap .SetDefaultPixel ();};_aeb :=_c .Ceil (_c .Log (float64 (len (_bbd .Patterns )))/_c .Log (2));_ddc :=int (_aeb );var _bccc [][]int ;_bccc ,_eafb =_bbd .grayScaleDecoding (_ddc );if _eafb !=nil {return nil ,_eafb ;
};if _eafb =_bbd .renderPattern (_bccc );_eafb !=nil {return nil ,_eafb ;};return _bbd .HalftoneRegionBitmap ,nil ;};type PatternDictionary struct{_gedc _cb .StreamReader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;
GBAtX []int8 ;GBAtY []int8 ;IsMMREncoded bool ;HDTemplate byte ;HdpWidth byte ;HdpHeight byte ;Patterns []*_cf .Bitmap ;GrayMax uint32 ;};func (_addg *SymbolDictionary )huffDecodeBmSize ()(int64 ,error ){if _addg ._bac ==nil {var (_cafc int ;_ecac error ;
);if _addg .SdHuffDecodeHeightSelection ==3{_cafc ++;};if _addg .SdHuffDecodeWidthSelection ==3{_cafc ++;};_addg ._bac ,_ecac =_addg .getUserTable (_cafc );if _ecac !=nil {return 0,_ecac ;};};return _addg ._bac .Decode (_addg ._agc );};func (_afcb *TableSegment )HtRS ()int32 {return _afcb ._ebcb };
func (_gdfgf *TextRegion )computeSymbolCodeLength ()error {if _gdfgf .IsHuffmanEncoded {return _gdfgf .symbolIDCodeLengths ();};_gdfgf ._gfae =int8 (_c .Ceil (_c .Log (float64 (_gdfgf .NumberOfSymbols ))/_c .Log (2)));return nil ;};func (_babg *TextRegion )decodeSymbolInstances ()error {_aed ,_dad :=_babg .decodeStripT ();
if _dad !=nil {return _dad ;};var (_bedg int64 ;_dbgc uint32 ;);for _dbgc < _babg .NumberOfSymbolInstances {_gfcb ,_beae :=_babg .decodeDT ();if _beae !=nil {return _beae ;};_aed +=_gfcb ;var _dabg int64 ;_feac :=true ;_babg ._befe =0;for {if _feac {_dabg ,_beae =_babg .decodeDfs ();
if _beae !=nil {return _beae ;};_bedg +=_dabg ;_babg ._befe =_bedg ;_feac =false ;}else {_eeafd ,_afde :=_babg .decodeIds ();if _b .Is (_afde ,_bc .ErrOOB ){break ;};if _afde !=nil {return _afde ;};if _dbgc >=_babg .NumberOfSymbolInstances {break ;};_babg ._befe +=_eeafd +int64 (_babg .SbDsOffset );
};_agfc ,_cbfbg :=_babg .decodeCurrentT ();if _cbfbg !=nil {return _cbfbg ;};_dbfa :=_aed +_agfc ;_fgbf ,_cbfbg :=_babg .decodeID ();if _cbfbg !=nil {return _cbfbg ;};_dfcg ,_cbfbg :=_babg .decodeRI ();if _cbfbg !=nil {return _cbfbg ;};_ddcc ,_cbfbg :=_babg .decodeIb (_dfcg ,_fgbf );
if _cbfbg !=nil {return _cbfbg ;};if _cbfbg =_babg .blit (_ddcc ,_dbfa );_cbfbg !=nil {return _cbfbg ;};_dbgc ++;};};return nil ;};func (_ddfa *SymbolDictionary )decodeHeightClassDeltaHeight ()(int64 ,error ){if _ddfa .IsHuffmanEncoded {return _ddfa .decodeHeightClassDeltaHeightWithHuffman ();
};_fggf ,_bbfa :=_ddfa ._bgeg .DecodeInt (_ddfa ._dceb );if _bbfa !=nil {return 0,_bbfa ;};return int64 (_fggf ),nil ;};func (_ffbe *GenericRegion )updateOverrideFlags ()error {const _eeda ="\u0075\u0070\u0064\u0061te\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _ffbe .GBAtX ==nil ||_ffbe .GBAtY ==nil {return nil ;};if len (_ffbe .GBAtX )!=len (_ffbe .GBAtY ){return _be .Errorf (_eeda ,"i\u006eco\u0073i\u0073t\u0065\u006e\u0074\u0020\u0041T\u0020\u0070\u0069x\u0065\u006c\u002e\u0020\u0041m\u006f\u0075\u006et\u0020\u006f\u0066\u0020\u0027\u0078\u0027\u0020\u0070\u0069\u0078e\u006c\u0073\u003a %d\u002c\u0020\u0041\u006d\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0027\u0079\u0027\u0020\u0070\u0069\u0078e\u006cs\u003a\u0020\u0025\u0064",len (_ffbe .GBAtX ),len (_ffbe .GBAtY ));
};_ffbe .GBAtOverride =make ([]bool ,len (_ffbe .GBAtX ));switch _ffbe .GBTemplate {case 0:if !_ffbe .UseExtTemplates {if _ffbe .GBAtX [0]!=3||_ffbe .GBAtY [0]!=-1{_ffbe .setOverrideFlag (0);};if _ffbe .GBAtX [1]!=-3||_ffbe .GBAtY [1]!=-1{_ffbe .setOverrideFlag (1);
};if _ffbe .GBAtX [2]!=2||_ffbe .GBAtY [2]!=-2{_ffbe .setOverrideFlag (2);};if _ffbe .GBAtX [3]!=-2||_ffbe .GBAtY [3]!=-2{_ffbe .setOverrideFlag (3);};}else {if _ffbe .GBAtX [0]!=-2||_ffbe .GBAtY [0]!=0{_ffbe .setOverrideFlag (0);};if _ffbe .GBAtX [1]!=0||_ffbe .GBAtY [1]!=-2{_ffbe .setOverrideFlag (1);
};if _ffbe .GBAtX [2]!=-2||_ffbe .GBAtY [2]!=-1{_ffbe .setOverrideFlag (2);};if _ffbe .GBAtX [3]!=-1||_ffbe .GBAtY [3]!=-2{_ffbe .setOverrideFlag (3);};if _ffbe .GBAtX [4]!=1||_ffbe .GBAtY [4]!=-2{_ffbe .setOverrideFlag (4);};if _ffbe .GBAtX [5]!=2||_ffbe .GBAtY [5]!=-1{_ffbe .setOverrideFlag (5);
};if _ffbe .GBAtX [6]!=-3||_ffbe .GBAtY [6]!=0{_ffbe .setOverrideFlag (6);};if _ffbe .GBAtX [7]!=-4||_ffbe .GBAtY [7]!=0{_ffbe .setOverrideFlag (7);};if _ffbe .GBAtX [8]!=2||_ffbe .GBAtY [8]!=-2{_ffbe .setOverrideFlag (8);};if _ffbe .GBAtX [9]!=3||_ffbe .GBAtY [9]!=-1{_ffbe .setOverrideFlag (9);
};if _ffbe .GBAtX [10]!=-2||_ffbe .GBAtY [10]!=-2{_ffbe .setOverrideFlag (10);};if _ffbe .GBAtX [11]!=-3||_ffbe .GBAtY [11]!=-1{_ffbe .setOverrideFlag (11);};};case 1:if _ffbe .GBAtX [0]!=3||_ffbe .GBAtY [0]!=-1{_ffbe .setOverrideFlag (0);};case 2:if _ffbe .GBAtX [0]!=2||_ffbe .GBAtY [0]!=-1{_ffbe .setOverrideFlag (0);
};case 3:if _ffbe .GBAtX [0]!=2||_ffbe .GBAtY [0]!=-1{_ffbe .setOverrideFlag (0);};};return nil ;};func (_cbb *GenericRegion )decodeLine (_bdf ,_cae ,_ebb int )error {const _aegf ="\u0064\u0065\u0063\u006f\u0064\u0065\u004c\u0069\u006e\u0065";_cgba :=_cbb .Bitmap .GetByteIndex (0,_bdf );
_cdb :=_cgba -_cbb .Bitmap .RowStride ;switch _cbb .GBTemplate {case 0:if !_cbb .UseExtTemplates {return _cbb .decodeTemplate0a (_bdf ,_cae ,_ebb ,_cgba ,_cdb );};return _cbb .decodeTemplate0b (_bdf ,_cae ,_ebb ,_cgba ,_cdb );case 1:return _cbb .decodeTemplate1 (_bdf ,_cae ,_ebb ,_cgba ,_cdb );
case 2:return _cbb .decodeTemplate2 (_bdf ,_cae ,_ebb ,_cgba ,_cdb );case 3:return _cbb .decodeTemplate3 (_bdf ,_cae ,_ebb ,_cgba ,_cdb );};return _be .Errorf (_aegf ,"\u0069\u006e\u0076a\u006c\u0069\u0064\u0020G\u0042\u0054\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u003a\u0020\u0025\u0064",_cbb .GBTemplate );
};func (_aea *GenericRegion )getPixel (_eec ,_fba int )int8 {if _eec < 0||_eec >=_aea .Bitmap .Width {return 0;};if _fba < 0||_fba >=_aea .Bitmap .Height {return 0;};if _aea .Bitmap .GetPixel (_eec ,_fba ){return 1;};return 0;};func (_cecc *SymbolDictionary )Encode (w _cb .BinaryWriter )(_bbdgb int ,_fcffb error ){const _egbcf ="\u0053\u0079\u006dbo\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0045\u006e\u0063\u006f\u0064\u0065";
if _cecc ==nil {return 0,_be .Error (_egbcf ,"\u0073\u0079m\u0062\u006f\u006c\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066in\u0065\u0064");};if _bbdgb ,_fcffb =_cecc .encodeFlags (w );
_fcffb !=nil {return _bbdgb ,_be .Wrap (_fcffb ,_egbcf ,"");};_fgfd ,_fcffb :=_cecc .encodeATFlags (w );if _fcffb !=nil {return _bbdgb ,_be .Wrap (_fcffb ,_egbcf ,"");};_bbdgb +=_fgfd ;if _fgfd ,_fcffb =_cecc .encodeRefinementATFlags (w );_fcffb !=nil {return _bbdgb ,_be .Wrap (_fcffb ,_egbcf ,"");
};_bbdgb +=_fgfd ;if _fgfd ,_fcffb =_cecc .encodeNumSyms (w );_fcffb !=nil {return _bbdgb ,_be .Wrap (_fcffb ,_egbcf ,"");};_bbdgb +=_fgfd ;if _fgfd ,_fcffb =_cecc .encodeSymbols (w );_fcffb !=nil {return _bbdgb ,_be .Wrap (_fcffb ,_egbcf ,"");};_bbdgb +=_fgfd ;
return _bbdgb ,nil ;};type Type int ;func (_acc *SymbolDictionary )encodeRefinementATFlags (_aabc _cb .BinaryWriter )(_deaf int ,_daef error ){const _gdac ="\u0065\u006e\u0063od\u0065\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0041\u0054\u0046\u006c\u0061\u0067\u0073";
if !_acc .UseRefinementAggregation ||_acc .SdrTemplate !=0{return 0,nil ;};for _eaaaf :=0;_eaaaf < 2;_eaaaf ++{if _daef =_aabc .WriteByte (byte (_acc .SdrATX [_eaaaf ]));_daef !=nil {return _deaf ,_be .Wrapf (_daef ,_gdac ,"\u0053\u0064\u0072\u0041\u0054\u0058\u005b\u0025\u0064\u005d",_eaaaf );
};_deaf ++;if _daef =_aabc .WriteByte (byte (_acc .SdrATY [_eaaaf ]));_daef !=nil {return _deaf ,_be .Wrapf (_daef ,_gdac ,"\u0053\u0064\u0072\u0041\u0054\u0059\u005b\u0025\u0064\u005d",_eaaaf );};_deaf ++;};return _deaf ,nil ;};func (_bdca *PageInformationSegment )readIsLossless ()error {_adb ,_cced :=_bdca ._ccab .ReadBit ();
if _cced !=nil {return _cced ;};if _adb ==1{_bdca .IsLossless =true ;};return nil ;};func (_dec *Header )writeSegmentNumber (_ebfc _cb .BinaryWriter )(_dga int ,_ecfd error ){_cdcb :=make ([]byte ,4);_gf .BigEndian .PutUint32 (_cdcb ,_dec .SegmentNumber );
if _dga ,_ecfd =_ebfc .Write (_cdcb );_ecfd !=nil {return 0,_be .Wrap (_ecfd ,"\u0048e\u0061\u0064\u0065\u0072.\u0077\u0072\u0069\u0074\u0065S\u0065g\u006de\u006e\u0074\u004e\u0075\u006d\u0062\u0065r","");};return _dga ,nil ;};func (_egb *GenericRegion )Init (h *Header ,r _cb .StreamReader )error {_egb .RegionSegment =NewRegionSegment (r );
_egb ._ebfb =r ;return _egb .parseHeader ();};func (_fbdd *SymbolDictionary )decodeDirectlyThroughGenericRegion (_agae ,_gfdcc uint32 )error {if _fbdd ._geeff ==nil {_fbdd ._geeff =NewGenericRegion (_fbdd ._agc );};_fbdd ._geeff .setParametersWithAt (false ,byte (_fbdd .SdTemplate ),false ,false ,_fbdd .SdATX ,_fbdd .SdATY ,_agae ,_gfdcc ,_fbdd ._fdee ,_fbdd ._bgeg );
return _fbdd .addSymbol (_fbdd ._geeff );};func (_cdf *SymbolDictionary )String ()string {_cgda :=&_af .Builder {};_cgda .WriteString ("\n\u005b\u0053\u0059\u004dBO\u004c-\u0044\u0049\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u000a");_cgda .WriteString (_f .Sprintf ("\u0009-\u0020S\u0064\u0072\u0054\u0065\u006dp\u006c\u0061t\u0065\u0020\u0025\u0076\u000a",_cdf .SdrTemplate ));
_cgda .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0025\u0076\u000a",_cdf .SdTemplate ));_cgda .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006eg\u0043\u006f\u006e\u0074\u0065\u0078\u0074R\u0065\u0074\u0061\u0069\u006e\u0065\u0064\u0020\u0025\u0076\u000a",_cdf ._bded ));
_cgda .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074\u0065\u0078\u0074\u0055\u0073\u0065\u0064 \u0025\u0076\u000a",_cdf ._bcaag ));_cgda .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_cdf .SdHuffAggInstanceSelection ));
_cgda .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053d\u0048\u0075\u0066\u0066\u0042\u004d\u0053\u0069\u007a\u0065S\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020%\u0076\u000a",_cdf .SdHuffBMSizeSelection ));_cgda .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_cdf .SdHuffDecodeWidthSelection ));
_cgda .WriteString (_f .Sprintf ("\u0009\u002d\u0020Sd\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064e\u0048e\u0069g\u0068t\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_cdf .SdHuffDecodeHeightSelection ));_cgda .WriteString (_f .Sprintf ("\u0009\u002d\u0020U\u0073\u0065\u0052\u0065f\u0069\u006e\u0065\u006d\u0065\u006e\u0074A\u0067\u0067\u0072\u0065\u0067\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_cdf .UseRefinementAggregation ));
_cgda .WriteString (_f .Sprintf ("\u0009\u002d\u0020is\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045\u006e\u0063\u006f\u0064\u0065\u0064\u0020\u0025\u0076\u000a",_cdf .IsHuffmanEncoded ));_cgda .WriteString (_f .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_cdf .SdATX ));
_cgda .WriteString (_f .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_cdf .SdATY ));_cgda .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_cdf .SdrATX ));_cgda .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_cdf .SdrATY ));
_cgda .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u004e\u0075\u006d\u0062\u0065\u0072\u004ff\u0045\u0078\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_cdf .NumberOfExportedSymbols ));_cgda .WriteString (_f .Sprintf ("\u0009-\u0020\u004e\u0075\u006db\u0065\u0072\u004f\u0066\u004ee\u0077S\u0079m\u0062\u006f\u006c\u0073\u0020\u0025\u0076\n",_cdf .NumberOfNewSymbols ));
_cgda .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u004ff\u0049\u006d\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_cdf ._cbff ));_cgda .WriteString (_f .Sprintf ("\u0009\u002d \u006e\u0075\u006d\u0062\u0065\u0072\u004f\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0064\u0053\u0079\u006d\u0062\u006f\u006c\u0073 %\u0076\u000a",_cdf ._deab ));
return _cgda .String ();};func (_gdfc *template0 )setIndex (_fcb *_cba .DecoderStats ){_fcb .SetIndex (0x100)};func (_dce *Header )GetSegmentData ()(Segmenter ,error ){var _cgd Segmenter ;if _dce .SegmentData !=nil {_cgd =_dce .SegmentData ;};if _cgd ==nil {_afcf ,_ccaf :=_aaef [_dce .Type ];
if !_ccaf {return nil ,_f .Errorf ("\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0073\u002f\u0020\u0025\u0064\u0020\u0063\u0072e\u0061t\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e\u0020",_dce .Type ,_dce .Type );};_cgd =_afcf ();
_gfa .Log .Trace ("\u005b\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u0020\u0061\u0074\u0020\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0030\u0034\u0058",_dce .SegmentNumber ,_dce .SegmentDataStartOffset );
_bge ,_fgbe :=_dce .subInputReader ();if _fgbe !=nil {return nil ,_fgbe ;};if _fded :=_cgd .Init (_dce ,_bge );_fded !=nil {_gfa .Log .Debug ("\u0049\u006e\u0069\u0074 \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076 \u0066o\u0072\u0020\u0074\u0079\u0070\u0065\u003a \u0025\u0054",_fded ,_cgd );
return nil ,_fded ;};_dce .SegmentData =_cgd ;};return _cgd ,nil ;};var _ SegmentEncoder =&GenericRegion {};func (_fcfga *SymbolDictionary )parseHeader ()(_gbe error ){_gfa .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _gbe !=nil {_gfa .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u0020\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u005b\u0050\u0041\u0052SE\u002d\u0048\u0045A\u0044\u0045R\u005d\u0020\u0066\u0061\u0069\u006ce\u0064\u002e \u0025\u0076",_gbe );
}else {_gfa .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _gbe =_fcfga .readRegionFlags ();_gbe !=nil {return _gbe ;};if _gbe =_fcfga .setAtPixels ();_gbe !=nil {return _gbe ;};if _gbe =_fcfga .setRefinementAtPixels ();_gbe !=nil {return _gbe ;};if _gbe =_fcfga .readNumberOfExportedSymbols ();_gbe !=nil {return _gbe ;
};if _gbe =_fcfga .readNumberOfNewSymbols ();_gbe !=nil {return _gbe ;};if _gbe =_fcfga .setInSyms ();_gbe !=nil {return _gbe ;};if _fcfga ._bcaag {_ffd :=_fcfga .Header .RTSegments ;for _egfcc :=len (_ffd )-1;_egfcc >=0;_egfcc --{if _ffd [_egfcc ].Type ==0{_faba ,_fdffe :=_ffd [_egfcc ].SegmentData .(*SymbolDictionary );
if !_fdffe {_gbe =_f .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074:\u0020\u0025\u0076\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020S\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_ffd [_egfcc ]);
return _gbe ;};if _faba ._bcaag {_fcfga .setRetainedCodingContexts (_faba );};break ;};};};if _gbe =_fcfga .checkInput ();_gbe !=nil {return _gbe ;};return nil ;};func (_ged *GenericRegion )String ()string {_gca :=&_af .Builder {};_gca .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");
_gca .WriteString (_ged .RegionSegment .String ()+"\u000a");_gca .WriteString (_f .Sprintf ("\u0009\u002d\u0020Us\u0065\u0045\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_ged .UseExtTemplates ));_gca .WriteString (_f .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0044\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_ged .IsTPGDon ));
_gca .WriteString (_f .Sprintf ("\u0009-\u0020G\u0042\u0054\u0065\u006d\u0070l\u0061\u0074e\u003a\u0020\u0025\u0064\u000a",_ged .GBTemplate ));_gca .WriteString (_f .Sprintf ("\t\u002d \u0049\u0073\u004d\u004d\u0052\u0045\u006e\u0063o\u0064\u0065\u0064\u003a %\u0076\u000a",_ged .IsMMREncoded ));
_gca .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_ged .GBAtX ));_gca .WriteString (_f .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_ged .GBAtY ));
_gca .WriteString (_f .Sprintf ("\t\u002d \u0047\u0042\u0041\u0074\u004f\u0076\u0065\u0072r\u0069\u0064\u0065\u003a %\u0076\u000a",_ged .GBAtOverride ));return _gca .String ();};func (_cea *GenericRefinementRegion )decodeTypicalPredictedLineTemplate1 (_gfdf ,_fgd ,_bfe ,_aag ,_gfbc ,_gg ,_fb ,_gab ,_dgf int )(_cde error ){var (_eff ,_bcc int ;
_aadg ,_df int ;_fdb ,_ead int ;_ceb byte ;);if _gfdf > 0{_ceb ,_cde =_cea .RegionBitmap .GetByte (_fb -_bfe );if _cde !=nil {return ;};_aadg =int (_ceb );};if _gab > 0&&_gab <=_cea .ReferenceBitmap .Height {_ceb ,_cde =_cea .ReferenceBitmap .GetByte (_dgf -_aag +_gg );
if _cde !=nil {return ;};_df =int (_ceb )<<2;};if _gab >=0&&_gab < _cea .ReferenceBitmap .Height {_ceb ,_cde =_cea .ReferenceBitmap .GetByte (_dgf +_gg );if _cde !=nil {return ;};_fdb =int (_ceb );};if _gab > -2&&_gab < _cea .ReferenceBitmap .Height -1{_ceb ,_cde =_cea .ReferenceBitmap .GetByte (_dgf +_aag +_gg );
if _cde !=nil {return ;};_ead =int (_ceb );};_eff =((_aadg >>5)&0x6)|((_ead >>2)&0x30)|(_fdb &0xc0)|(_df &0x200);_bcc =((_ead >>2)&0x70)|(_fdb &0xc0)|(_df &0x700);var _eed int ;for _egc :=0;_egc < _gfbc ;_egc =_eed {var (_gdf int ;_aaf int ;);_eed =_egc +8;
if _gdf =_fgd -_egc ;_gdf > 8{_gdf =8;};_efe :=_eed < _fgd ;_ge :=_eed < _cea .ReferenceBitmap .Width ;_dgdc :=_gg +1;if _gfdf > 0{_ceb =0;if _efe {_ceb ,_cde =_cea .RegionBitmap .GetByte (_fb -_bfe +1);if _cde !=nil {return ;};};_aadg =(_aadg <<8)|int (_ceb );
};if _gab > 0&&_gab <=_cea .ReferenceBitmap .Height {var _egee int ;if _ge {_ceb ,_cde =_cea .ReferenceBitmap .GetByte (_dgf -_aag +_dgdc );if _cde !=nil {return ;};_egee =int (_ceb )<<2;};_df =(_df <<8)|_egee ;};if _gab >=0&&_gab < _cea .ReferenceBitmap .Height {_ceb =0;
if _ge {_ceb ,_cde =_cea .ReferenceBitmap .GetByte (_dgf +_dgdc );if _cde !=nil {return ;};};_fdb =(_fdb <<8)|int (_ceb );};if _gab > -2&&_gab < (_cea .ReferenceBitmap .Height -1){_ceb =0;if _ge {_ceb ,_cde =_cea .ReferenceBitmap .GetByte (_dgf +_aag +_dgdc );
if _cde !=nil {return ;};};_ead =(_ead <<8)|int (_ceb );};for _fga :=0;_fga < _gdf ;_fga ++{var _eede int ;_cec :=(_bcc >>4)&0x1ff;switch _cec {case 0x1ff:_eede =1;case 0x00:_eede =0;default:_cea ._cfe .SetIndex (int32 (_eff ));_eede ,_cde =_cea ._fa .DecodeBit (_cea ._cfe );
if _cde !=nil {return ;};};_cgg :=uint (7-_fga );_aaf |=_eede <<_cgg ;_eff =((_eff &0x0d6)<<1)|_eede |(_aadg >>_cgg +5)&0x002|((_ead >>_cgg +2)&0x010)|((_fdb >>_cgg )&0x040)|((_df >>_cgg )&0x200);_bcc =((_bcc &0xdb)<<1)|((_ead >>_cgg +2)&0x010)|((_fdb >>_cgg )&0x080)|((_df >>_cgg )&0x400);
};_cde =_cea .RegionBitmap .SetByte (_fb ,byte (_aaf ));if _cde !=nil {return ;};_fb ++;_dgf ++;};return nil ;};func (_dcbb *Header )readSegmentDataLength (_defg _cb .StreamReader )(_fggdg error ){_dcbb .SegmentDataLength ,_fggdg =_defg .ReadBits (32);
if _fggdg !=nil {return _fggdg ;};_dcbb .SegmentDataLength &=_c .MaxInt32 ;return nil ;};func (_abeg *Header )subInputReader ()(_cb .StreamReader ,error ){return _cb .NewSubstreamReader (_abeg .Reader ,_abeg .SegmentDataStartOffset ,_abeg .SegmentDataLength );
};func (_bfc *TextRegion )Init (header *Header ,r _cb .StreamReader )error {_bfc .Header =header ;_bfc ._fbe =r ;_bfc .RegionInfo =NewRegionSegment (_bfc ._fbe );return _bfc .parseHeader ();};func (_cecb *template1 )setIndex (_geb *_cba .DecoderStats ){_geb .SetIndex (0x080)};
func (_fae *GenericRegion )GetRegionBitmap ()(_dea *_cf .Bitmap ,_ecc error ){if _fae .Bitmap !=nil {return _fae .Bitmap ,nil ;};if _fae .IsMMREncoded {if _fae ._fge ==nil {_fae ._fge ,_ecc =_ee .New (_fae ._ebfb ,int (_fae .RegionSegment .BitmapWidth ),int (_fae .RegionSegment .BitmapHeight ),_fae .DataOffset ,_fae .DataLength );
if _ecc !=nil {return nil ,_ecc ;};};_fae .Bitmap ,_ecc =_fae ._fge .UncompressMMR ();return _fae .Bitmap ,_ecc ;};if _ecc =_fae .updateOverrideFlags ();_ecc !=nil {return nil ,_ecc ;};var _daf int ;if _fae ._edcf ==nil {_fae ._edcf ,_ecc =_cba .New (_fae ._ebfb );
if _ecc !=nil {return nil ,_ecc ;};};if _fae ._adeg ==nil {_fae ._adeg =_cba .NewStats (65536,1);};_fae .Bitmap =_cf .New (int (_fae .RegionSegment .BitmapWidth ),int (_fae .RegionSegment .BitmapHeight ));_fgcb :=int (uint32 (_fae .Bitmap .Width +7)&(^uint32 (7)));
for _bebf :=0;_bebf < _fae .Bitmap .Height ;_bebf ++{if _fae .IsTPGDon {var _ceg int ;_ceg ,_ecc =_fae .decodeSLTP ();if _ecc !=nil {return nil ,_ecc ;};_daf ^=_ceg ;};if _daf ==1{if _bebf > 0{if _ecc =_fae .copyLineAbove (_bebf );_ecc !=nil {return nil ,_ecc ;
};};}else {if _ecc =_fae .decodeLine (_bebf ,_fae .Bitmap .Width ,_fgcb );_ecc !=nil {return nil ,_ecc ;};};};return _fae .Bitmap ,nil ;};var _ templater =&template0 {};func (_dged *HalftoneRegion )renderPattern (_dfc [][]int )(_ffce error ){var _gcge ,_bdgf int ;
for _gfeg :=0;_gfeg < int (_dged .HGridHeight );_gfeg ++{for _ggba :=0;_ggba < int (_dged .HGridWidth );_ggba ++{_gcge =_dged .computeX (_gfeg ,_ggba );_bdgf =_dged .computeY (_gfeg ,_ggba );_efdf :=_dged .Patterns [_dfc [_gfeg ][_ggba ]];if _ffce =_cf .Blit (_efdf ,_dged .HalftoneRegionBitmap ,_gcge +int (_dged .HGridX ),_bdgf +int (_dged .HGridY ),_dged .CombinationOperator );
_ffce !=nil {return _ffce ;};};};return nil ;};func (_gfba *PatternDictionary )readTemplate ()error {_bceg ,_dbcb :=_gfba ._gedc .ReadBits (2);if _dbcb !=nil {return _dbcb ;};_gfba .HDTemplate =byte (_bceg );return nil ;};func (_eea *GenericRefinementRegion )GetRegionBitmap ()(*_cf .Bitmap ,error ){var _eb error ;
_gfa .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _eb !=nil {_gfa .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0047\u0065\u0074R\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006dap\u0020\u0066a\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_eb );
}else {_gfa .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _eea .RegionBitmap !=nil {return _eea .RegionBitmap ,nil ;};_ed :=0;if _eea .ReferenceBitmap ==nil {_eea .ReferenceBitmap ,_eb =_eea .getGrReference ();if _eb !=nil {return nil ,_eb ;};};if _eea ._fa ==nil {_eea ._fa ,_eb =_cba .New (_eea ._db );
if _eb !=nil {return nil ,_eb ;};};if _eea ._cfe ==nil {_eea ._cfe =_cba .NewStats (8192,1);};_eea .RegionBitmap =_cf .New (int (_eea .RegionInfo .BitmapWidth ),int (_eea .RegionInfo .BitmapHeight ));if _eea .TemplateID ==0{if _eb =_eea .updateOverride ();
_eb !=nil {return nil ,_eb ;};};_gc :=(_eea .RegionBitmap .Width +7)&-8;var _ae int ;if _eea .IsTPGROn {_ae =int (-_eea .ReferenceDY )*_eea .ReferenceBitmap .RowStride ;};_ec :=_ae +1;for _dd :=0;_dd < _eea .RegionBitmap .Height ;_dd ++{if _eea .IsTPGROn {_cbad ,_bec :=_eea .decodeSLTP ();
if _bec !=nil {return nil ,_bec ;};_ed ^=_cbad ;};if _ed ==0{_eb =_eea .decodeOptimized (_dd ,_eea .RegionBitmap .Width ,_eea .RegionBitmap .RowStride ,_eea .ReferenceBitmap .RowStride ,_gc ,_ae ,_ec );if _eb !=nil {return nil ,_eb ;};}else {_eb =_eea .decodeTypicalPredictedLine (_dd ,_eea .RegionBitmap .Width ,_eea .RegionBitmap .RowStride ,_eea .ReferenceBitmap .RowStride ,_gc ,_ae );
if _eb !=nil {return nil ,_eb ;};};};return _eea .RegionBitmap ,nil ;};func (_aa *GenericRefinementRegion )decodeSLTP ()(int ,error ){_aa .Template .setIndex (_aa ._cfe );return _aa ._fa .DecodeBit (_aa ._cfe );};type Header struct{SegmentNumber uint32 ;
Type Type ;RetainFlag bool ;PageAssociation int ;PageAssociationFieldSize bool ;RTSegments []*Header ;HeaderLength int64 ;SegmentDataLength uint64 ;SegmentDataStartOffset uint64 ;Reader _cb .StreamReader ;SegmentData Segmenter ;RTSNumbers []int ;RetainBits []uint8 ;
};func (_dcff *SymbolDictionary )decodeHeightClassDeltaHeightWithHuffman ()(int64 ,error ){switch _dcff .SdHuffDecodeHeightSelection {case 0:_faga ,_cdgga :=_cff .GetStandardTable (4);if _cdgga !=nil {return 0,_cdgga ;};return _faga .Decode (_dcff ._agc );
case 1:_cebb ,_fab :=_cff .GetStandardTable (5);if _fab !=nil {return 0,_fab ;};return _cebb .Decode (_dcff ._agc );case 3:if _dcff ._ageg ==nil {_bfgb ,_cdgfg :=_cff .GetStandardTable (0);if _cdgfg !=nil {return 0,_cdgfg ;};_dcff ._ageg =_bfgb ;};return _dcff ._ageg .Decode (_dcff ._agc );
};return 0,nil ;};func (_afgb *HalftoneRegion )computeY (_dbgg ,_eedd int )int {return _afgb .shiftAndFill (int (_afgb .HGridY )+_dbgg *int (_afgb .HRegionX )-_eedd *int (_afgb .HRegionY ));};func (_cfea *GenericRefinementRegion )getPixel (_bag *_cf .Bitmap ,_eaa ,_efg int )int {if _eaa < 0||_eaa >=_bag .Width {return 0;
};if _efg < 0||_efg >=_bag .Height {return 0;};if _bag .GetPixel (_eaa ,_efg ){return 1;};return 0;};func (_fbbf *SymbolDictionary )readNumberOfNewSymbols ()error {_daea ,_cdad :=_fbbf ._agc .ReadBits (32);if _cdad !=nil {return _cdad ;};_fbbf .NumberOfNewSymbols =uint32 (_daea &_c .MaxUint32 );
return nil ;};func NewRegionSegment (r _cb .StreamReader )*RegionSegment {return &RegionSegment {_agaa :r }};func (_ccgb *HalftoneRegion )computeSegmentDataStructure ()error {_ccgb .DataOffset =_ccgb ._ggf .StreamPosition ();_ccgb .DataHeaderLength =_ccgb .DataOffset -_ccgb .DataHeaderOffset ;
_ccgb .DataLength =int64 (_ccgb ._ggf .Length ())-_ccgb .DataHeaderLength ;return nil ;};func (_bffb *SymbolDictionary )decodeAggregate (_aggbc ,_bdab uint32 )error {var (_abcg int64 ;_beba error ;);if _bffb .IsHuffmanEncoded {_abcg ,_beba =_bffb .huffDecodeRefAggNInst ();
if _beba !=nil {return _beba ;};}else {_aade ,_dbcf :=_bffb ._bgeg .DecodeInt (_bffb ._ecgg );if _dbcf !=nil {return _dbcf ;};_abcg =int64 (_aade );};if _abcg > 1{return _bffb .decodeThroughTextRegion (_aggbc ,_bdab ,uint32 (_abcg ));}else if _abcg ==1{return _bffb .decodeRefinedSymbol (_aggbc ,_bdab );
};return nil ;};func (_gbb *PageInformationSegment )readCombinationOperator ()error {_dbeb ,_gfgf :=_gbb ._ccab .ReadBits (2);if _gfgf !=nil {return _gfgf ;};_gbb ._aeee =_cf .CombinationOperator (int (_dbeb ));return nil ;};func (_cbcc *TextRegion )getUserTable (_eced int )(_cff .Tabler ,error ){const _bdcb ="\u0067\u0065\u0074U\u0073\u0065\u0072\u0054\u0061\u0062\u006c\u0065";
var _ddeg int ;for _ ,_egae :=range _cbcc .Header .RTSegments {if _egae .Type ==53{if _ddeg ==_eced {_dadc ,_fecf :=_egae .GetSegmentData ();if _fecf !=nil {return nil ,_fecf ;};_febba ,_bacc :=_dadc .(*TableSegment );if !_bacc {_gfa .Log .Debug (_f .Sprintf ("\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079p\u0065\u00205\u0033\u0020\u002d\u0020\u0061\u006ed\u0020in\u0064\u0065\u0078\u003a\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_egae .SegmentNumber ));
return nil ,_be .Error (_bdcb ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079\u0070e\u0020\u0035\u0033\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u002a\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};return _cff .NewEncodedTable (_febba );};_ddeg ++;};};return nil ,nil ;};func (_effe *SymbolDictionary )setCodingStatistics ()error {if _effe ._eagc ==nil {_effe ._eagc =_cba .NewStats (512,1);};if _effe ._dceb ==nil {_effe ._dceb =_cba .NewStats (512,1);
};if _effe ._ggdef ==nil {_effe ._ggdef =_cba .NewStats (512,1);};if _effe ._ecgg ==nil {_effe ._ecgg =_cba .NewStats (512,1);};if _effe ._bacd ==nil {_effe ._bacd =_cba .NewStats (512,1);};if _effe .UseRefinementAggregation &&_effe ._cdd ==nil {_effe ._cdd =_cba .NewStats (1<<uint (_effe ._abfdf ),1);
_effe ._bfbg =_cba .NewStats (512,1);_effe ._ded =_cba .NewStats (512,1);};if _effe ._fdee ==nil {_effe ._fdee =_cba .NewStats (65536,1);};if _effe ._bgeg ==nil {var _dfbc error ;_effe ._bgeg ,_dfbc =_cba .New (_effe ._agc );if _dfbc !=nil {return _dfbc ;
};};return nil ;};func (_ggbb *GenericRegion )InitEncode (bm *_cf .Bitmap ,xLoc ,yLoc ,template int ,duplicateLineRemoval bool )error {const _febc ="\u0047e\u006e\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069\u006f\u006e.\u0049\u006e\u0069\u0074\u0045\u006e\u0063\u006f\u0064\u0065";
if bm ==nil {return _be .Error (_febc ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if xLoc < 0||yLoc < 0{return _be .Error (_febc ,"\u0078\u0020\u0061\u006e\u0064\u0020\u0079\u0020\u006c\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074h\u0061\u006e\u0020\u0030");
};_ggbb .Bitmap =bm ;_ggbb .GBTemplate =byte (template );switch _ggbb .GBTemplate {case 0:_ggbb .GBAtX =[]int8 {3,-3,2,-2};_ggbb .GBAtY =[]int8 {-1,-1,-2,-2};case 1:_ggbb .GBAtX =[]int8 {3};_ggbb .GBAtY =[]int8 {-1};case 2,3:_ggbb .GBAtX =[]int8 {2};_ggbb .GBAtY =[]int8 {-1};
default:return _be .Errorf (_febc ,"\u0070\u0072o\u0076\u0069\u0064\u0065\u0064 \u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u007b\u0030\u002c\u0031\u002c\u0032\u002c\u0033\u007d",template );
};_ggbb .RegionSegment =&RegionSegment {BitmapHeight :uint32 (bm .Height ),BitmapWidth :uint32 (bm .Width ),XLocation :uint32 (xLoc ),YLocation :uint32 (yLoc )};_ggbb .IsTPGDon =duplicateLineRemoval ;return nil ;};func (_fafcd *TextRegion )readAmountOfSymbolInstances ()error {_eeaa ,_gaggf :=_fafcd ._fbe .ReadBits (32);
if _gaggf !=nil {return _gaggf ;};_fafcd .NumberOfSymbolInstances =uint32 (_eeaa &_c .MaxUint32 );_aggcb :=_fafcd .RegionInfo .BitmapWidth *_fafcd .RegionInfo .BitmapHeight ;if _aggcb < _fafcd .NumberOfSymbolInstances {_gfa .Log .Debug ("\u004c\u0069\u006d\u0069t\u0069\u006e\u0067\u0020t\u0068\u0065\u0020n\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020d\u0065\u0063\u006f\u0064e\u0064\u0020\u0073\u0079m\u0062\u006f\u006c\u0020\u0069n\u0073\u0074\u0061\u006e\u0063\u0065\u0073 \u0074\u006f\u0020\u006f\u006ee\u0020\u0070\u0065\u0072\u0020\u0070\u0069\u0078\u0065l\u0020\u0028\u0020\u0025\u0064\u0020\u0069\u006e\u0073\u0074\u0065\u0061\u0064\u0020\u006f\u0066\u0020\u0025\u0064\u0029",_aggcb ,_fafcd .NumberOfSymbolInstances );
_fafcd .NumberOfSymbolInstances =_aggcb ;};return nil ;};func (_dc *GenericRefinementRegion )getGrReference ()(*_cf .Bitmap ,error ){segments :=_dc ._fg .RTSegments ;if len (segments )==0{return nil ,_fc .New ("\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0065\u0078is\u0074\u0073");
};_cfg ,_aee :=segments [0].GetSegmentData ();if _aee !=nil {return nil ,_aee ;};_cce ,_bf :=_cfg .(Regioner );if !_bf {return nil ,_f .Errorf ("\u0072\u0065\u0066\u0065\u0072r\u0065\u0064\u0020\u0074\u006f\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_cfg );
};return _cce .GetRegionBitmap ();};func (_cgb *GenericRefinementRegion )decodeTemplate (_aeef ,_fcf ,_abg ,_dgb ,_efef ,_acd ,_cfgc ,_dae ,_dgg ,_ffg int ,_cda templater )(_ebe error ){var (_eae ,_dgbc ,_cbc ,_faa ,_ggb int16 ;_feg ,_efd ,_fcc ,_bdg int ;
_fbb byte ;);if _dgg >=1&&(_dgg -1)< _cgb .ReferenceBitmap .Height {_fbb ,_ebe =_cgb .ReferenceBitmap .GetByte (_ffg -_dgb );if _ebe !=nil {return ;};_feg =int (_fbb );};if _dgg >=0&&(_dgg )< _cgb .ReferenceBitmap .Height {_fbb ,_ebe =_cgb .ReferenceBitmap .GetByte (_ffg );
if _ebe !=nil {return ;};_efd =int (_fbb );};if _dgg >=-1&&(_dgg +1)< _cgb .ReferenceBitmap .Height {_fbb ,_ebe =_cgb .ReferenceBitmap .GetByte (_ffg +_dgb );if _ebe !=nil {return ;};_fcc =int (_fbb );};_ffg ++;if _aeef >=1{_fbb ,_ebe =_cgb .RegionBitmap .GetByte (_dae -_abg );
if _ebe !=nil {return ;};_bdg =int (_fbb );};_dae ++;_fdf :=_cgb .ReferenceDX %8;_gabc :=6+_fdf ;_fea :=_ffg %_dgb ;if _gabc >=0{if _gabc < 8{_eae =int16 (_feg >>uint (_gabc ))&0x07;};if _gabc < 8{_dgbc =int16 (_efd >>uint (_gabc ))&0x07;};if _gabc < 8{_cbc =int16 (_fcc >>uint (_gabc ))&0x07;
};if _gabc ==6&&_fea > 1{if _dgg >=1&&(_dgg -1)< _cgb .ReferenceBitmap .Height {_fbb ,_ebe =_cgb .ReferenceBitmap .GetByte (_ffg -_dgb -2);if _ebe !=nil {return _ebe ;};_eae |=int16 (_fbb <<2)&0x04;};if _dgg >=0&&_dgg < _cgb .ReferenceBitmap .Height {_fbb ,_ebe =_cgb .ReferenceBitmap .GetByte (_ffg -2);
if _ebe !=nil {return _ebe ;};_dgbc |=int16 (_fbb <<2)&0x04;};if _dgg >=-1&&_dgg +1< _cgb .ReferenceBitmap .Height {_fbb ,_ebe =_cgb .ReferenceBitmap .GetByte (_ffg +_dgb -2);if _ebe !=nil {return _ebe ;};_cbc |=int16 (_fbb <<2)&0x04;};};if _gabc ==0{_feg =0;
_efd =0;_fcc =0;if _fea < _dgb -1{if _dgg >=1&&_dgg -1< _cgb .ReferenceBitmap .Height {_fbb ,_ebe =_cgb .ReferenceBitmap .GetByte (_ffg -_dgb );if _ebe !=nil {return _ebe ;};_feg =int (_fbb );};if _dgg >=0&&_dgg < _cgb .ReferenceBitmap .Height {_fbb ,_ebe =_cgb .ReferenceBitmap .GetByte (_ffg );
if _ebe !=nil {return _ebe ;};_efd =int (_fbb );};if _dgg >=-1&&_dgg +1< _cgb .ReferenceBitmap .Height {_fbb ,_ebe =_cgb .ReferenceBitmap .GetByte (_ffg +_dgb );if _ebe !=nil {return _ebe ;};_fcc =int (_fbb );};};_ffg ++;};}else {_eae =int16 (_feg <<1)&0x07;
_dgbc =int16 (_efd <<1)&0x07;_cbc =int16 (_fcc <<1)&0x07;_feg =0;_efd =0;_fcc =0;if _fea < _dgb -1{if _dgg >=1&&_dgg -1< _cgb .ReferenceBitmap .Height {_fbb ,_ebe =_cgb .ReferenceBitmap .GetByte (_ffg -_dgb );if _ebe !=nil {return _ebe ;};_feg =int (_fbb );
};if _dgg >=0&&_dgg < _cgb .ReferenceBitmap .Height {_fbb ,_ebe =_cgb .ReferenceBitmap .GetByte (_ffg );if _ebe !=nil {return _ebe ;};_efd =int (_fbb );};if _dgg >=-1&&_dgg +1< _cgb .ReferenceBitmap .Height {_fbb ,_ebe =_cgb .ReferenceBitmap .GetByte (_ffg +_dgb );
if _ebe !=nil {return _ebe ;};_fcc =int (_fbb );};_ffg ++;};_eae |=int16 ((_feg >>7)&0x07);_dgbc |=int16 ((_efd >>7)&0x07);_cbc |=int16 ((_fcc >>7)&0x07);};_faa =int16 (_bdg >>6);_ggb =0;_bfee :=(2-_fdf )%8;_feg <<=uint (_bfee );_efd <<=uint (_bfee );_fcc <<=uint (_bfee );
_bdg <<=2;var _bcd int ;for _cbag :=0;_cbag < _fcf ;_cbag ++{_cac :=_cbag &0x07;_fegb :=_cda .form (_eae ,_dgbc ,_cbc ,_faa ,_ggb );if _cgb ._fgc {_fbb ,_ebe =_cgb .RegionBitmap .GetByte (_cgb .RegionBitmap .GetByteIndex (_cbag ,_aeef ));if _ebe !=nil {return _ebe ;
};_cgb ._cfe .SetIndex (int32 (_cgb .overrideAtTemplate0 (int (_fegb ),_cbag ,_aeef ,int (_fbb ),_cac )));}else {_cgb ._cfe .SetIndex (int32 (_fegb ));};_bcd ,_ebe =_cgb ._fa .DecodeBit (_cgb ._cfe );if _ebe !=nil {return _ebe ;};if _ebe =_cgb .RegionBitmap .SetPixel (_cbag ,_aeef ,byte (_bcd ));
_ebe !=nil {return _ebe ;};_eae =((_eae <<1)|0x01&int16 (_feg >>7))&0x07;_dgbc =((_dgbc <<1)|0x01&int16 (_efd >>7))&0x07;_cbc =((_cbc <<1)|0x01&int16 (_fcc >>7))&0x07;_faa =((_faa <<1)|0x01&int16 (_bdg >>7))&0x07;_ggb =int16 (_bcd );if (_cbag -int (_cgb .ReferenceDX ))%8==5{_feg =0;
_efd =0;_fcc =0;if ((_cbag -int (_cgb .ReferenceDX ))/8)+1< _cgb .ReferenceBitmap .RowStride {if _dgg >=1&&(_dgg -1)< _cgb .ReferenceBitmap .Height {_fbb ,_ebe =_cgb .ReferenceBitmap .GetByte (_ffg -_dgb );if _ebe !=nil {return _ebe ;};_feg =int (_fbb );
};if _dgg >=0&&_dgg < _cgb .ReferenceBitmap .Height {_fbb ,_ebe =_cgb .ReferenceBitmap .GetByte (_ffg );if _ebe !=nil {return _ebe ;};_efd =int (_fbb );};if _dgg >=-1&&(_dgg +1)< _cgb .ReferenceBitmap .Height {_fbb ,_ebe =_cgb .ReferenceBitmap .GetByte (_ffg +_dgb );
if _ebe !=nil {return _ebe ;};_fcc =int (_fbb );};};_ffg ++;}else {_feg <<=1;_efd <<=1;_fcc <<=1;};if _cac ==5&&_aeef >=1{if ((_cbag >>3)+1)>=_cgb .RegionBitmap .RowStride {_bdg =0;}else {_fbb ,_ebe =_cgb .RegionBitmap .GetByte (_dae -_abg );if _ebe !=nil {return _ebe ;
};_bdg =int (_fbb );};_dae ++;}else {_bdg <<=1;};};return nil ;};func (_bcf *PageInformationSegment )readIsStriped ()error {_aefa ,_eeab :=_bcf ._ccab .ReadBit ();if _eeab !=nil {return _eeab ;};if _aefa ==1{_bcf .IsStripe =true ;};return nil ;};func _ebff (_gfaf _cb .StreamReader ,_bfdcg *Header )*TextRegion {_gbaa :=&TextRegion {_fbe :_gfaf ,Header :_bfdcg ,RegionInfo :NewRegionSegment (_gfaf )};
return _gbaa ;};func (_aafg *TextRegion )GetRegionBitmap ()(*_cf .Bitmap ,error ){if _aafg .RegionBitmap !=nil {return _aafg .RegionBitmap ,nil ;};if !_aafg .IsHuffmanEncoded {if _fbgc :=_aafg .setCodingStatistics ();_fbgc !=nil {return nil ,_fbgc ;};};
if _bbdac :=_aafg .createRegionBitmap ();_bbdac !=nil {return nil ,_bbdac ;};if _ggcf :=_aafg .decodeSymbolInstances ();_ggcf !=nil {return nil ,_ggcf ;};return _aafg .RegionBitmap ,nil ;};type HalftoneRegion struct{_ggf _cb .StreamReader ;_bda *Header ;
DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;HDefaultPixel int8 ;CombinationOperator _cf .CombinationOperator ;HSkipEnabled bool ;HTemplate byte ;IsMMREncoded bool ;HGridWidth uint32 ;
HGridHeight uint32 ;HGridX int32 ;HGridY int32 ;HRegionX uint16 ;HRegionY uint16 ;HalftoneRegionBitmap *_cf .Bitmap ;Patterns []*_cf .Bitmap ;};func (_bbdg *HalftoneRegion )checkInput ()error {if _bbdg .IsMMREncoded {if _bbdg .HTemplate !=0{_gfa .Log .Debug ("\u0048\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030",_bbdg .HTemplate );
};if _bbdg .HSkipEnabled {_gfa .Log .Debug ("\u0048\u0053\u006b\u0069\u0070\u0045\u006e\u0061\u0062\u006c\u0065\u0064\u0020\u0030\u0020\u0025\u0076\u0020(\u0073\u0068\u006f\u0075\u006c\u0064\u0020c\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020v\u0061\u006c\u0075\u0065\u0020\u0066\u0061\u006c\u0073\u0065\u0029",_bbdg .HSkipEnabled );
};};return nil ;};func (_bee *EndOfStripe )LineNumber ()int {return _bee ._cc };func (_cbgab *TableSegment )HtPS ()int32 {return _cbgab ._edfa };func (_gcab *GenericRegion )writeGBAtPixels (_fgcf _cb .BinaryWriter )(_efeb int ,_aaffd error ){const _bbbc ="\u0077r\u0069t\u0065\u0047\u0042\u0041\u0074\u0050\u0069\u0078\u0065\u006c\u0073";
if _gcab .UseMMR {return 0,nil ;};_fac :=1;if _gcab .GBTemplate ==0{_fac =4;}else if _gcab .UseExtTemplates {_fac =12;};if len (_gcab .GBAtX )!=_fac {return 0,_be .Errorf (_bbbc ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0058\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};if len (_gcab .GBAtY )!=_fac {return 0,_be .Errorf (_bbbc ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0059\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};for _cbeg :=0;_cbeg < _fac ;_cbeg ++{if _aaffd =_fgcf .WriteByte (byte (_gcab .GBAtX [_cbeg ]));_aaffd !=nil {return _efeb ,_be .Wrap (_aaffd ,_bbbc ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0058");};_efeb ++;if _aaffd =_fgcf .WriteByte (byte (_gcab .GBAtY [_cbeg ]));
_aaffd !=nil {return _efeb ,_be .Wrap (_aaffd ,_bbbc ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0059");};_efeb ++;};return _efeb ,nil ;};func (_facd *PageInformationSegment )Init (h *Header ,r _cb .StreamReader )(_cdce error ){_facd ._ccab =r ;
if _cdce =_facd .parseHeader ();_cdce !=nil {return _be .Wrap (_cdce ,"P\u0061\u0067\u0065\u0049\u006e\u0066o\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065g\u006d\u0065\u006et\u002eI\u006e\u0069\u0074","");};return nil ;};