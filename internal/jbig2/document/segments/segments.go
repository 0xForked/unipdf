//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package segments ;import (_e "encoding/binary";_dg "errors";_df "fmt";_bc "github.com/unidoc/unipdf/v3/common";_aa "github.com/unidoc/unipdf/v3/internal/bitwise";_ac "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_cd "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";_db "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/arithmetic";_ee "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/huffman";_dd "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/mmr";_ca "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/arithmetic";_gc "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_f "image";_c "io";_d "math";_a "strings";_g "time";);type Pager interface{GetSegment (int )(*Header ,error );GetBitmap ()(*_cd .Bitmap ,error );};type HalftoneRegion struct{_dfge _aa .StreamReader ;_fdbb *Header ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;HDefaultPixel int8 ;CombinationOperator _cd .CombinationOperator ;HSkipEnabled bool ;HTemplate byte ;IsMMREncoded bool ;HGridWidth uint32 ;HGridHeight uint32 ;HGridX int32 ;HGridY int32 ;HRegionX uint16 ;HRegionY uint16 ;HalftoneRegionBitmap *_cd .Bitmap ;Patterns []*_cd .Bitmap ;};func (_eadgd *TableSegment )HtOOB ()int32 {return _eadgd ._aedf };func (_abebg *PageInformationSegment )readContainsRefinement ()error {_ffb ,_bfgb :=_abebg ._aecg .ReadBit ();if _bfgb !=nil {return _bfgb ;};if _ffb ==1{_abebg ._eceb =true ;};return nil ;};func (_cdaa *SymbolDictionary )getSbSymCodeLen ()int8 {_adfa :=int8 (_d .Ceil (_d .Log (float64 (_cdaa ._dcdf +_cdaa .NumberOfNewSymbols ))/_d .Log (2)));if _cdaa .IsHuffmanEncoded &&_adfa < 1{return 1;};return _adfa ;};func _dfffe (_gccgb int )int {if _gccgb ==0{return 0;};_gccgb |=_gccgb >>1;_gccgb |=_gccgb >>2;_gccgb |=_gccgb >>4;_gccgb |=_gccgb >>8;_gccgb |=_gccgb >>16;return (_gccgb +1)>>1;};func (_ebc *GenericRefinementRegion )decodeTemplate (_bga ,_geb ,_eef ,_afc ,_gegb ,_adff ,_eff ,_cbd ,_gga ,_adec int ,_gee templater )(_bfg error ){var (_eg ,_ece ,_bcf ,_eec ,_agc int16 ;_dec ,_cba ,_bcdf ,_fed int ;_adb byte ;);if _gga >=1&&(_gga -1)< _ebc .ReferenceBitmap .Height {_adb ,_bfg =_ebc .ReferenceBitmap .GetByte (_adec -_afc );if _bfg !=nil {return ;};_dec =int (_adb );};if _gga >=0&&(_gga )< _ebc .ReferenceBitmap .Height {_adb ,_bfg =_ebc .ReferenceBitmap .GetByte (_adec );if _bfg !=nil {return ;};_cba =int (_adb );};if _gga >=-1&&(_gga +1)< _ebc .ReferenceBitmap .Height {_adb ,_bfg =_ebc .ReferenceBitmap .GetByte (_adec +_afc );if _bfg !=nil {return ;};_bcdf =int (_adb );};_adec ++;if _bga >=1{_adb ,_bfg =_ebc .RegionBitmap .GetByte (_cbd -_eef );if _bfg !=nil {return ;};_fed =int (_adb );};_cbd ++;_cagf :=_ebc .ReferenceDX %8;_ebg :=6+_cagf ;_gaf :=_adec %_afc ;if _ebg >=0{if _ebg < 8{_eg =int16 (_dec >>uint (_ebg ))&0x07;};if _ebg < 8{_ece =int16 (_cba >>uint (_ebg ))&0x07;};if _ebg < 8{_bcf =int16 (_bcdf >>uint (_ebg ))&0x07;};if _ebg ==6&&_gaf > 1{if _gga >=1&&(_gga -1)< _ebc .ReferenceBitmap .Height {_adb ,_bfg =_ebc .ReferenceBitmap .GetByte (_adec -_afc -2);if _bfg !=nil {return _bfg ;};_eg |=int16 (_adb <<2)&0x04;};if _gga >=0&&_gga < _ebc .ReferenceBitmap .Height {_adb ,_bfg =_ebc .ReferenceBitmap .GetByte (_adec -2);if _bfg !=nil {return _bfg ;};_ece |=int16 (_adb <<2)&0x04;};if _gga >=-1&&_gga +1< _ebc .ReferenceBitmap .Height {_adb ,_bfg =_ebc .ReferenceBitmap .GetByte (_adec +_afc -2);if _bfg !=nil {return _bfg ;};_bcf |=int16 (_adb <<2)&0x04;};};if _ebg ==0{_dec =0;_cba =0;_bcdf =0;if _gaf < _afc -1{if _gga >=1&&_gga -1< _ebc .ReferenceBitmap .Height {_adb ,_bfg =_ebc .ReferenceBitmap .GetByte (_adec -_afc );if _bfg !=nil {return _bfg ;};_dec =int (_adb );};if _gga >=0&&_gga < _ebc .ReferenceBitmap .Height {_adb ,_bfg =_ebc .ReferenceBitmap .GetByte (_adec );if _bfg !=nil {return _bfg ;};_cba =int (_adb );};if _gga >=-1&&_gga +1< _ebc .ReferenceBitmap .Height {_adb ,_bfg =_ebc .ReferenceBitmap .GetByte (_adec +_afc );if _bfg !=nil {return _bfg ;};_bcdf =int (_adb );};};_adec ++;};}else {_eg =int16 (_dec <<1)&0x07;_ece =int16 (_cba <<1)&0x07;_bcf =int16 (_bcdf <<1)&0x07;_dec =0;_cba =0;_bcdf =0;if _gaf < _afc -1{if _gga >=1&&_gga -1< _ebc .ReferenceBitmap .Height {_adb ,_bfg =_ebc .ReferenceBitmap .GetByte (_adec -_afc );if _bfg !=nil {return _bfg ;};_dec =int (_adb );};if _gga >=0&&_gga < _ebc .ReferenceBitmap .Height {_adb ,_bfg =_ebc .ReferenceBitmap .GetByte (_adec );if _bfg !=nil {return _bfg ;};_cba =int (_adb );};if _gga >=-1&&_gga +1< _ebc .ReferenceBitmap .Height {_adb ,_bfg =_ebc .ReferenceBitmap .GetByte (_adec +_afc );if _bfg !=nil {return _bfg ;};_bcdf =int (_adb );};_adec ++;};_eg |=int16 ((_dec >>7)&0x07);_ece |=int16 ((_cba >>7)&0x07);_bcf |=int16 ((_bcdf >>7)&0x07);};_eec =int16 (_fed >>6);_agc =0;_fc :=(2-_cagf )%8;_dec <<=uint (_fc );_cba <<=uint (_fc );_bcdf <<=uint (_fc );_fed <<=2;var _cff int ;for _fbgd :=0;_fbgd < _geb ;_fbgd ++{_aeca :=_fbgd &0x07;_fba :=_gee .form (_eg ,_ece ,_bcf ,_eec ,_agc );if _ebc ._fd {_adb ,_bfg =_ebc .RegionBitmap .GetByte (_ebc .RegionBitmap .GetByteIndex (_fbgd ,_bga ));if _bfg !=nil {return _bfg ;};_ebc ._ab .SetIndex (int32 (_ebc .overrideAtTemplate0 (int (_fba ),_fbgd ,_bga ,int (_adb ),_aeca )));}else {_ebc ._ab .SetIndex (int32 (_fba ));};_cff ,_bfg =_ebc ._fbg .DecodeBit (_ebc ._ab );if _bfg !=nil {return _bfg ;};if _bfg =_ebc .RegionBitmap .SetPixel (_fbgd ,_bga ,byte (_cff ));_bfg !=nil {return _bfg ;};_eg =((_eg <<1)|0x01&int16 (_dec >>7))&0x07;_ece =((_ece <<1)|0x01&int16 (_cba >>7))&0x07;_bcf =((_bcf <<1)|0x01&int16 (_bcdf >>7))&0x07;_eec =((_eec <<1)|0x01&int16 (_fed >>7))&0x07;_agc =int16 (_cff );if (_fbgd -int (_ebc .ReferenceDX ))%8==5{_dec =0;_cba =0;_bcdf =0;if ((_fbgd -int (_ebc .ReferenceDX ))/8)+1< _ebc .ReferenceBitmap .RowStride {if _gga >=1&&(_gga -1)< _ebc .ReferenceBitmap .Height {_adb ,_bfg =_ebc .ReferenceBitmap .GetByte (_adec -_afc );if _bfg !=nil {return _bfg ;};_dec =int (_adb );};if _gga >=0&&_gga < _ebc .ReferenceBitmap .Height {_adb ,_bfg =_ebc .ReferenceBitmap .GetByte (_adec );if _bfg !=nil {return _bfg ;};_cba =int (_adb );};if _gga >=-1&&(_gga +1)< _ebc .ReferenceBitmap .Height {_adb ,_bfg =_ebc .ReferenceBitmap .GetByte (_adec +_afc );if _bfg !=nil {return _bfg ;};_bcdf =int (_adb );};};_adec ++;}else {_dec <<=1;_cba <<=1;_bcdf <<=1;};if _aeca ==5&&_bga >=1{if ((_fbgd >>3)+1)>=_ebc .RegionBitmap .RowStride {_fed =0;}else {_adb ,_bfg =_ebc .RegionBitmap .GetByte (_cbd -_eef );if _bfg !=nil {return _bfg ;};_fed =int (_adb );};_cbd ++;}else {_fed <<=1;};};return nil ;};func (_gbc *GenericRegion )setParametersMMR (_dbg bool ,_dbde ,_dca int64 ,_ceg ,_fdfc uint32 ,_eadc byte ,_ceab ,_gcag bool ,_fef ,_eega []int8 ){_gbc .DataOffset =_dbde ;_gbc .DataLength =_dca ;_gbc .RegionSegment =&RegionSegment {};_gbc .RegionSegment .BitmapHeight =_ceg ;_gbc .RegionSegment .BitmapWidth =_fdfc ;_gbc .GBTemplate =_eadc ;_gbc .IsMMREncoded =_dbg ;_gbc .IsTPGDon =_ceab ;_gbc .GBAtX =_fef ;_gbc .GBAtY =_eega ;};func (_gcedc *TextRegion )decodeIb (_dcfcf ,_bagad int64 )(*_cd .Bitmap ,error ){const _geaf ="\u0064\u0065\u0063\u006f\u0064\u0065\u0049\u0062";var (_dfbfc error ;_bcbd *_cd .Bitmap ;);if _dcfcf ==0{if int (_bagad )> len (_gcedc .Symbols )-1{return nil ,_gc .Error (_geaf ,"\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0049\u0042\u0020\u0062\u0069\u0074\u006d\u0061\u0070\u002e\u0020\u0069\u006e\u0064\u0065x\u0020\u006f\u0075\u0074\u0020o\u0066\u0020r\u0061\u006e\u0067\u0065");};return _gcedc .Symbols [int (_bagad )],nil ;};var _eabb ,_eeab ,_eddd ,_facb int64 ;_eabb ,_dfbfc =_gcedc .decodeRdw ();if _dfbfc !=nil {return nil ,_gc .Wrap (_dfbfc ,_geaf ,"");};_eeab ,_dfbfc =_gcedc .decodeRdh ();if _dfbfc !=nil {return nil ,_gc .Wrap (_dfbfc ,_geaf ,"");};_eddd ,_dfbfc =_gcedc .decodeRdx ();if _dfbfc !=nil {return nil ,_gc .Wrap (_dfbfc ,_geaf ,"");};_facb ,_dfbfc =_gcedc .decodeRdy ();if _dfbfc !=nil {return nil ,_gc .Wrap (_dfbfc ,_geaf ,"");};if _gcedc .IsHuffmanEncoded {if _ ,_dfbfc =_gcedc .decodeSymInRefSize ();_dfbfc !=nil {return nil ,_gc .Wrap (_dfbfc ,_geaf ,"");};_gcedc ._cfcb .Align ();};_befg :=_gcedc .Symbols [_bagad ];_bacd :=uint32 (_befg .Width );_eeedf :=uint32 (_befg .Height );_facdf :=int32 (uint32 (_eabb )>>1)+int32 (_eddd );_bgabd :=int32 (uint32 (_eeab )>>1)+int32 (_facb );if _gcedc ._facd ==nil {_gcedc ._facd =_eag (_gcedc ._cfcb ,nil );};_gcedc ._facd .setParameters (_gcedc ._bgf ,_gcedc ._daca ,_gcedc .SbrTemplate ,_bacd +uint32 (_eabb ),_eeedf +uint32 (_eeab ),_befg ,_facdf ,_bgabd ,false ,_gcedc .SbrATX ,_gcedc .SbrATY );_bcbd ,_dfbfc =_gcedc ._facd .GetRegionBitmap ();if _dfbfc !=nil {return nil ,_gc .Wrap (_dfbfc ,_geaf ,"\u0067\u0072\u0066");};if _gcedc .IsHuffmanEncoded {_gcedc ._cfcb .Align ();};return _bcbd ,nil ;};func (_cabc *HalftoneRegion )computeY (_cggad ,_faeag int )int {return _cabc .shiftAndFill (int (_cabc .HGridY )+_cggad *int (_cabc .HRegionX )-_faeag *int (_cabc .HRegionY ));};func (_cabbd *PageInformationSegment )DefaultPixelValue ()uint8 {return _cabbd ._gda };func (_bcfd *GenericRegion )overrideAtTemplate0a (_cdfd ,_fecf ,_becdg ,_ecge ,_cfab ,_agae int )int {if _bcfd .GBAtOverride [0]{_cdfd &=0xFFEF;if _bcfd .GBAtY [0]==0&&_bcfd .GBAtX [0]>=-int8 (_cfab ){_cdfd |=(_ecge >>uint (int8 (_agae )-_bcfd .GBAtX [0]&0x1))<<4;}else {_cdfd |=int (_bcfd .getPixel (_fecf +int (_bcfd .GBAtX [0]),_becdg +int (_bcfd .GBAtY [0])))<<4;};};if _bcfd .GBAtOverride [1]{_cdfd &=0xFBFF;if _bcfd .GBAtY [1]==0&&_bcfd .GBAtX [1]>=-int8 (_cfab ){_cdfd |=(_ecge >>uint (int8 (_agae )-_bcfd .GBAtX [1]&0x1))<<10;}else {_cdfd |=int (_bcfd .getPixel (_fecf +int (_bcfd .GBAtX [1]),_becdg +int (_bcfd .GBAtY [1])))<<10;};};if _bcfd .GBAtOverride [2]{_cdfd &=0xF7FF;if _bcfd .GBAtY [2]==0&&_bcfd .GBAtX [2]>=-int8 (_cfab ){_cdfd |=(_ecge >>uint (int8 (_agae )-_bcfd .GBAtX [2]&0x1))<<11;}else {_cdfd |=int (_bcfd .getPixel (_fecf +int (_bcfd .GBAtX [2]),_becdg +int (_bcfd .GBAtY [2])))<<11;};};if _bcfd .GBAtOverride [3]{_cdfd &=0x7FFF;if _bcfd .GBAtY [3]==0&&_bcfd .GBAtX [3]>=-int8 (_cfab ){_cdfd |=(_ecge >>uint (int8 (_agae )-_bcfd .GBAtX [3]&0x1))<<15;}else {_cdfd |=int (_bcfd .getPixel (_fecf +int (_bcfd .GBAtX [3]),_becdg +int (_bcfd .GBAtY [3])))<<15;};};return _cdfd ;};func (_dag *GenericRegion )overrideAtTemplate0b (_afbb ,_aee ,_bdfa ,_gdce ,_egbd ,_ddec int )int {if _dag .GBAtOverride [0]{_afbb &=0xFFFD;if _dag .GBAtY [0]==0&&_dag .GBAtX [0]>=-int8 (_egbd ){_afbb |=(_gdce >>uint (int8 (_ddec )-_dag .GBAtX [0]&0x1))<<1;}else {_afbb |=int (_dag .getPixel (_aee +int (_dag .GBAtX [0]),_bdfa +int (_dag .GBAtY [0])))<<1;};};if _dag .GBAtOverride [1]{_afbb &=0xDFFF;if _dag .GBAtY [1]==0&&_dag .GBAtX [1]>=-int8 (_egbd ){_afbb |=(_gdce >>uint (int8 (_ddec )-_dag .GBAtX [1]&0x1))<<13;}else {_afbb |=int (_dag .getPixel (_aee +int (_dag .GBAtX [1]),_bdfa +int (_dag .GBAtY [1])))<<13;};};if _dag .GBAtOverride [2]{_afbb &=0xFDFF;if _dag .GBAtY [2]==0&&_dag .GBAtX [2]>=-int8 (_egbd ){_afbb |=(_gdce >>uint (int8 (_ddec )-_dag .GBAtX [2]&0x1))<<9;}else {_afbb |=int (_dag .getPixel (_aee +int (_dag .GBAtX [2]),_bdfa +int (_dag .GBAtY [2])))<<9;};};if _dag .GBAtOverride [3]{_afbb &=0xBFFF;if _dag .GBAtY [3]==0&&_dag .GBAtX [3]>=-int8 (_egbd ){_afbb |=(_gdce >>uint (int8 (_ddec )-_dag .GBAtX [3]&0x1))<<14;}else {_afbb |=int (_dag .getPixel (_aee +int (_dag .GBAtX [3]),_bdfa +int (_dag .GBAtY [3])))<<14;};};if _dag .GBAtOverride [4]{_afbb &=0xEFFF;if _dag .GBAtY [4]==0&&_dag .GBAtX [4]>=-int8 (_egbd ){_afbb |=(_gdce >>uint (int8 (_ddec )-_dag .GBAtX [4]&0x1))<<12;}else {_afbb |=int (_dag .getPixel (_aee +int (_dag .GBAtX [4]),_bdfa +int (_dag .GBAtY [4])))<<12;};};if _dag .GBAtOverride [5]{_afbb &=0xFFDF;if _dag .GBAtY [5]==0&&_dag .GBAtX [5]>=-int8 (_egbd ){_afbb |=(_gdce >>uint (int8 (_ddec )-_dag .GBAtX [5]&0x1))<<5;}else {_afbb |=int (_dag .getPixel (_aee +int (_dag .GBAtX [5]),_bdfa +int (_dag .GBAtY [5])))<<5;};};if _dag .GBAtOverride [6]{_afbb &=0xFFFB;if _dag .GBAtY [6]==0&&_dag .GBAtX [6]>=-int8 (_egbd ){_afbb |=(_gdce >>uint (int8 (_ddec )-_dag .GBAtX [6]&0x1))<<2;}else {_afbb |=int (_dag .getPixel (_aee +int (_dag .GBAtX [6]),_bdfa +int (_dag .GBAtY [6])))<<2;};};if _dag .GBAtOverride [7]{_afbb &=0xFFF7;if _dag .GBAtY [7]==0&&_dag .GBAtX [7]>=-int8 (_egbd ){_afbb |=(_gdce >>uint (int8 (_ddec )-_dag .GBAtX [7]&0x1))<<3;}else {_afbb |=int (_dag .getPixel (_aee +int (_dag .GBAtX [7]),_bdfa +int (_dag .GBAtY [7])))<<3;};};if _dag .GBAtOverride [8]{_afbb &=0xF7FF;if _dag .GBAtY [8]==0&&_dag .GBAtX [8]>=-int8 (_egbd ){_afbb |=(_gdce >>uint (int8 (_ddec )-_dag .GBAtX [8]&0x1))<<11;}else {_afbb |=int (_dag .getPixel (_aee +int (_dag .GBAtX [8]),_bdfa +int (_dag .GBAtY [8])))<<11;};};if _dag .GBAtOverride [9]{_afbb &=0xFFEF;if _dag .GBAtY [9]==0&&_dag .GBAtX [9]>=-int8 (_egbd ){_afbb |=(_gdce >>uint (int8 (_ddec )-_dag .GBAtX [9]&0x1))<<4;}else {_afbb |=int (_dag .getPixel (_aee +int (_dag .GBAtX [9]),_bdfa +int (_dag .GBAtY [9])))<<4;};};if _dag .GBAtOverride [10]{_afbb &=0x7FFF;if _dag .GBAtY [10]==0&&_dag .GBAtX [10]>=-int8 (_egbd ){_afbb |=(_gdce >>uint (int8 (_ddec )-_dag .GBAtX [10]&0x1))<<15;}else {_afbb |=int (_dag .getPixel (_aee +int (_dag .GBAtX [10]),_bdfa +int (_dag .GBAtY [10])))<<15;};};if _dag .GBAtOverride [11]{_afbb &=0xFDFF;if _dag .GBAtY [11]==0&&_dag .GBAtX [11]>=-int8 (_egbd ){_afbb |=(_gdce >>uint (int8 (_ddec )-_dag .GBAtX [11]&0x1))<<10;}else {_afbb |=int (_dag .getPixel (_aee +int (_dag .GBAtX [11]),_bdfa +int (_dag .GBAtY [11])))<<10;};};return _afbb ;};type Type int ;func (_egc *TextRegion )decodeDT ()(_gbdff int64 ,_acff error ){if _egc .IsHuffmanEncoded {if _egc .SbHuffDT ==3{_gbdff ,_acff =_egc ._cgec .Decode (_egc ._cfcb );if _acff !=nil {return 0,_acff ;};}else {var _fbfg _ee .Tabler ;_fbfg ,_acff =_ee .GetStandardTable (11+int (_egc .SbHuffDT ));if _acff !=nil {return 0,_acff ;};_gbdff ,_acff =_fbfg .Decode (_egc ._cfcb );if _acff !=nil {return 0,_acff ;};};}else {var _fcge int32 ;_fcge ,_acff =_egc ._daca .DecodeInt (_egc ._eedce );if _acff !=nil {return ;};_gbdff =int64 (_fcge );};_gbdff *=int64 (_egc .SbStrips );return _gbdff ,nil ;};func (_dbdfa *TextRegion )GetRegionInfo ()*RegionSegment {return _dbdfa .RegionInfo };func (_gbb *SymbolDictionary )encodeFlags (_efae _aa .BinaryWriter )(_eeafc int ,_edga error ){const _bdgb ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _edga =_efae .SkipBits (3);_edga !=nil {return 0,_gc .Wrap (_edga ,_bdgb ,"\u0065\u006d\u0070\u0074\u0079\u0020\u0062\u0069\u0074\u0073");};var _ffeb int ;if _gbb .SdrTemplate > 0{_ffeb =1;};if _edga =_efae .WriteBit (_ffeb );_edga !=nil {return _eeafc ,_gc .Wrap (_edga ,_bdgb ,"s\u0064\u0072\u0074\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_ffeb =0;if _gbb .SdTemplate > 1{_ffeb =1;};if _edga =_efae .WriteBit (_ffeb );_edga !=nil {return _eeafc ,_gc .Wrap (_edga ,_bdgb ,"\u0073\u0064\u0074\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_ffeb =0;if _gbb .SdTemplate ==1||_gbb .SdTemplate ==3{_ffeb =1;};if _edga =_efae .WriteBit (_ffeb );_edga !=nil {return _eeafc ,_gc .Wrap (_edga ,_bdgb ,"\u0073\u0064\u0074\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_ffeb =0;if _gbb ._cged {_ffeb =1;};if _edga =_efae .WriteBit (_ffeb );_edga !=nil {return _eeafc ,_gc .Wrap (_edga ,_bdgb ,"\u0063\u006f\u0064in\u0067\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0065\u0064");};_ffeb =0;if _gbb ._gaead {_ffeb =1;};if _edga =_efae .WriteBit (_ffeb );_edga !=nil {return _eeafc ,_gc .Wrap (_edga ,_bdgb ,"\u0063\u006f\u0064\u0069ng\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0075\u0073\u0065\u0064");};_ffeb =0;if _gbb .SdHuffAggInstanceSelection {_ffeb =1;};if _edga =_efae .WriteBit (_ffeb );_edga !=nil {return _eeafc ,_gc .Wrap (_edga ,_bdgb ,"\u0073\u0064\u0068\u0075\u0066\u0066\u0061\u0067\u0067\u0069\u006e\u0073\u0074");};_ffeb =int (_gbb .SdHuffBMSizeSelection );if _edga =_efae .WriteBit (_ffeb );_edga !=nil {return _eeafc ,_gc .Wrap (_edga ,_bdgb ,"\u0073\u0064\u0068u\u0066\u0066\u0062\u006d\u0073\u0069\u007a\u0065");};_ffeb =0;if _gbb .SdHuffDecodeWidthSelection > 1{_ffeb =1;};if _edga =_efae .WriteBit (_ffeb );_edga !=nil {return _eeafc ,_gc .Wrap (_edga ,_bdgb ,"s\u0064\u0068\u0075\u0066\u0066\u0077\u0069\u0064\u0074\u0068");};_ffeb =0;switch _gbb .SdHuffDecodeWidthSelection {case 1,3:_ffeb =1;};if _edga =_efae .WriteBit (_ffeb );_edga !=nil {return _eeafc ,_gc .Wrap (_edga ,_bdgb ,"s\u0064\u0068\u0075\u0066\u0066\u0077\u0069\u0064\u0074\u0068");};_ffeb =0;if _gbb .SdHuffDecodeHeightSelection > 1{_ffeb =1;};if _edga =_efae .WriteBit (_ffeb );_edga !=nil {return _eeafc ,_gc .Wrap (_edga ,_bdgb ,"\u0073\u0064\u0068u\u0066\u0066\u0068\u0065\u0069\u0067\u0068\u0074");};_ffeb =0;switch _gbb .SdHuffDecodeHeightSelection {case 1,3:_ffeb =1;};if _edga =_efae .WriteBit (_ffeb );_edga !=nil {return _eeafc ,_gc .Wrap (_edga ,_bdgb ,"\u0073\u0064\u0068u\u0066\u0066\u0068\u0065\u0069\u0067\u0068\u0074");};_ffeb =0;if _gbb .UseRefinementAggregation {_ffeb =1;};if _edga =_efae .WriteBit (_ffeb );_edga !=nil {return _eeafc ,_gc .Wrap (_edga ,_bdgb ,"\u0073\u0064\u0072\u0065\u0066\u0061\u0067\u0067");};_ffeb =0;if _gbb .IsHuffmanEncoded {_ffeb =1;};if _edga =_efae .WriteBit (_ffeb );_edga !=nil {return _eeafc ,_gc .Wrap (_edga ,_bdgb ,"\u0073\u0064\u0068\u0075\u0066\u0066");};return 2,nil ;};func (_gadf *Header )Encode (w _aa .BinaryWriter )(_dcf int ,_bfga error ){const _afeb ="\u0048\u0065\u0061d\u0065\u0072\u002e\u0057\u0072\u0069\u0074\u0065";var _cacg _aa .BinaryWriter ;_bc .Log .Trace ("\u005b\u0053\u0045G\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045\u0052\u005d[\u0045\u004e\u0043\u004f\u0044\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _bfga !=nil {_bc .Log .Trace ("[\u0053\u0045\u0047\u004d\u0045\u004eT\u002d\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0045\u004e\u0043\u004f\u0044E\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020%\u0076",_bfga );}else {_bc .Log .Trace ("\u005b\u0053\u0045\u0047ME\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0025\u0076",_gadf );_bc .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045N\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u005b\u0045\u004e\u0043O\u0044\u0045\u005d\u0020\u0046\u0069\u006ei\u0073\u0068\u0065\u0064");};}();w .FinishByte ();if _gadf .SegmentData !=nil {_becda ,_cgf :=_gadf .SegmentData .(SegmentEncoder );if !_cgf {return 0,_gc .Errorf (_afeb ,"\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0064\u006f\u0065s\u006e\u0027\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074 \u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0045\u006e\u0063\u006f\u0064er\u0020\u0069\u006e\u0074\u0065\u0072\u0066\u0061\u0063\u0065",_gadf .SegmentData );};_cacg =_aa .BufferedMSB ();_dcf ,_bfga =_becda .Encode (_cacg );if _bfga !=nil {return 0,_gc .Wrap (_bfga ,_afeb ,"");};_gadf .SegmentDataLength =uint64 (_dcf );};if _gadf .pageSize ()==4{_gadf .PageAssociationFieldSize =true ;};var _acaf int ;_acaf ,_bfga =_gadf .writeSegmentNumber (w );if _bfga !=nil {return 0,_gc .Wrap (_bfga ,_afeb ,"");};_dcf +=_acaf ;if _bfga =_gadf .writeFlags (w );_bfga !=nil {return _dcf ,_gc .Wrap (_bfga ,_afeb ,"");};_dcf ++;_acaf ,_bfga =_gadf .writeReferredToCount (w );if _bfga !=nil {return 0,_gc .Wrap (_bfga ,_afeb ,"");};_dcf +=_acaf ;_acaf ,_bfga =_gadf .writeReferredToSegments (w );if _bfga !=nil {return 0,_gc .Wrap (_bfga ,_afeb ,"");};_dcf +=_acaf ;_acaf ,_bfga =_gadf .writeSegmentPageAssociation (w );if _bfga !=nil {return 0,_gc .Wrap (_bfga ,_afeb ,"");};_dcf +=_acaf ;_acaf ,_bfga =_gadf .writeSegmentDataLength (w );if _bfga !=nil {return 0,_gc .Wrap (_bfga ,_afeb ,"");};_dcf +=_acaf ;_gadf .HeaderLength =int64 (_dcf )-int64 (_gadf .SegmentDataLength );if _cacg !=nil {if _ ,_bfga =w .Write (_cacg .Data ());_bfga !=nil {return _dcf ,_gc .Wrap (_bfga ,_afeb ,"\u0077r\u0069t\u0065\u0020\u0073\u0065\u0067m\u0065\u006et\u0020\u0064\u0061\u0074\u0061");};};return _dcf ,nil ;};var _ _ee .BasicTabler =&TableSegment {};func (_fadg *SymbolDictionary )decodeThroughTextRegion (_edff ,_dffed ,_cdad uint32 )error {if _fadg ._afef ==nil {_fadg ._afef =_dded (_fadg ._bcgf ,nil );_fadg ._afef .setContexts (_fadg ._babd ,_db .NewStats (512,1),_db .NewStats (512,1),_db .NewStats (512,1),_db .NewStats (512,1),_fadg ._agaea ,_db .NewStats (512,1),_db .NewStats (512,1),_db .NewStats (512,1),_db .NewStats (512,1));};if _acag :=_fadg .setSymbolsArray ();_acag !=nil {return _acag ;};_fadg ._afef .setParameters (_fadg ._cedg ,_fadg .IsHuffmanEncoded ,true ,_edff ,_dffed ,_cdad ,1,_fadg ._dcdf +_fadg ._fecg ,0,0,0,1,0,0,0,0,0,0,0,0,0,_fadg .SdrTemplate ,_fadg .SdrATX ,_fadg .SdrATY ,_fadg ._efeb ,_fadg ._bdef );return _fadg .addSymbol (_fadg ._afef );};func (_fdcg *TextRegion )decodeSymInRefSize ()(int64 ,error ){const _cgag ="\u0064e\u0063o\u0064\u0065\u0053\u0079\u006dI\u006e\u0052e\u0066\u0053\u0069\u007a\u0065";if _fdcg .SbHuffRSize ==0{_dgdd ,_febgdf :=_ee .GetStandardTable (1);if _febgdf !=nil {return 0,_gc .Wrap (_febgdf ,_cgag ,"");};return _dgdd .Decode (_fdcg ._cfcb );};if _fdcg ._cdeeb ==nil {var (_aeac int ;_egbb error ;);if _fdcg .SbHuffFS ==3{_aeac ++;};if _fdcg .SbHuffDS ==3{_aeac ++;};if _fdcg .SbHuffDT ==3{_aeac ++;};if _fdcg .SbHuffRDWidth ==3{_aeac ++;};if _fdcg .SbHuffRDHeight ==3{_aeac ++;};if _fdcg .SbHuffRDX ==3{_aeac ++;};if _fdcg .SbHuffRDY ==3{_aeac ++;};_fdcg ._cdeeb ,_egbb =_fdcg .getUserTable (_aeac );if _egbb !=nil {return 0,_gc .Wrap (_egbb ,_cgag ,"");};};_bcfec ,_afdaf :=_fdcg ._cdeeb .Decode (_fdcg ._cfcb );if _afdaf !=nil {return 0,_gc .Wrap (_afdaf ,_cgag ,"");};return _bcfec ,nil ;};func (_dcbg *Header )CleanSegmentData (){if _dcbg .SegmentData !=nil {_dcbg .SegmentData =nil ;};};func (_ebcc *TextRegion )Init (header *Header ,r _aa .StreamReader )error {_ebcc .Header =header ;_ebcc ._cfcb =r ;_ebcc .RegionInfo =NewRegionSegment (_ebcc ._cfcb );return _ebcc .parseHeader ();};func (_bbff *HalftoneRegion )GetRegionInfo ()*RegionSegment {return _bbff .RegionSegment };func (_eede *PatternDictionary )checkInput ()error {if _eede .HdpHeight < 1||_eede .HdpWidth < 1{return _dg .New ("in\u0076\u0061l\u0069\u0064\u0020\u0048\u0065\u0061\u0064\u0065\u0072 \u0056\u0061\u006c\u0075\u0065\u003a\u0020\u0057\u0069\u0064\u0074\u0068\u002f\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020g\u0072e\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020z\u0065\u0072o");};if _eede .IsMMREncoded {if _eede .HDTemplate !=0{_bc .Log .Debug ("\u0076\u0061\u0072\u0069\u0061\u0062\u006c\u0065\u0020\u0048\u0044\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e \u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030");};};return nil ;};func (_acbf *GenericRefinementRegion )String ()string {_ecee :=&_a .Builder {};_ecee .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_ecee .WriteString (_acbf .RegionInfo .String ()+"\u000a");_ecee .WriteString (_df .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0052\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_acbf .IsTPGROn ));_ecee .WriteString (_df .Sprintf ("\u0009-\u0020T\u0065\u006d\u0070\u006c\u0061t\u0065\u0049D\u003a\u0020\u0025\u0076\u000a",_acbf .TemplateID ));_ecee .WriteString (_df .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_acbf .GrAtX ));_ecee .WriteString (_df .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_acbf .GrAtY ));_ecee .WriteString (_df .Sprintf ("\u0009-\u0020R\u0065\u0066\u0065\u0072\u0065n\u0063\u0065D\u0058\u0020\u0025\u0076\u000a",_acbf .ReferenceDX ));_ecee .WriteString (_df .Sprintf ("\u0009\u002d\u0020\u0052ef\u0065\u0072\u0065\u006e\u0063\u0044\u0065\u0059\u003a\u0020\u0025\u0076\u000a",_acbf .ReferenceDY ));return _ecee .String ();};func (_cgbc *TextRegion )decodeDfs ()(int64 ,error ){if _cgbc .IsHuffmanEncoded {if _cgbc .SbHuffFS ==3{if _cgbc ._fgc ==nil {var _eacaa error ;_cgbc ._fgc ,_eacaa =_cgbc .getUserTable (0);if _eacaa !=nil {return 0,_eacaa ;};};return _cgbc ._fgc .Decode (_cgbc ._cfcb );};_ggg ,_ddcd :=_ee .GetStandardTable (6+int (_cgbc .SbHuffFS ));if _ddcd !=nil {return 0,_ddcd ;};return _ggg .Decode (_cgbc ._cfcb );};_cadef ,_effbf :=_cgbc ._daca .DecodeInt (_cgbc ._cddf );if _effbf !=nil {return 0,_effbf ;};return int64 (_cadef ),nil ;};func (_ec *EndOfStripe )parseHeader (_gf *Header ,_dbf _aa .StreamReader )error {_gea ,_ged :=_ec ._ad .ReadBits (32);if _ged !=nil {return _ged ;};_ec ._dff =int (_gea &_d .MaxInt32 );return nil ;};func (_aecd *template1 )setIndex (_abe *_db .DecoderStats ){_abe .SetIndex (0x080)};func (_eaag *Header )writeReferredToCount (_cegf _aa .BinaryWriter )(_begag int ,_gba error ){const _gccfa ="w\u0072i\u0074\u0065\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0043ou\u006e\u0074";_eaag .RTSNumbers =make ([]int ,len (_eaag .RTSegments ));for _gffc ,_fddc :=range _eaag .RTSegments {_eaag .RTSNumbers [_gffc ]=int (_fddc .SegmentNumber );};if len (_eaag .RTSNumbers )<=4{var _ecgc byte ;if len (_eaag .RetainBits )>=1{_ecgc =byte (_eaag .RetainBits [0]);};_ecgc |=byte (len (_eaag .RTSNumbers ))<<5;if _gba =_cegf .WriteByte (_ecgc );_gba !=nil {return 0,_gc .Wrap (_gba ,_gccfa ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return 1,nil ;};_ebb :=uint32 (len (_eaag .RTSNumbers ));_ddba :=make ([]byte ,4+_ac .Ceil (len (_eaag .RTSNumbers )+1,8));_ebb |=0x7<<29;_e .BigEndian .PutUint32 (_ddba ,_ebb );copy (_ddba [1:],_eaag .RetainBits );_begag ,_gba =_cegf .Write (_ddba );if _gba !=nil {return 0,_gc .Wrap (_gba ,_gccfa ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return _begag ,nil ;};func (_dfed *PatternDictionary )readTemplate ()error {_fafc ,_bcdfe :=_dfed ._dea .ReadBits (2);if _bcdfe !=nil {return _bcdfe ;};_dfed .HDTemplate =byte (_fafc );return nil ;};func (_fee *GenericRefinementRegion )GetRegionBitmap ()(*_cd .Bitmap ,error ){var _cage error ;_bc .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");defer func (){if _cage !=nil {_bc .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0047\u0065\u0074R\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006dap\u0020\u0066a\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_cage );}else {_bc .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");};}();if _fee .RegionBitmap !=nil {return _fee .RegionBitmap ,nil ;};_be :=0;if _fee .ReferenceBitmap ==nil {_fee .ReferenceBitmap ,_cage =_fee .getGrReference ();if _cage !=nil {return nil ,_cage ;};};if _fee ._fbg ==nil {_fee ._fbg ,_cage =_db .New (_fee ._bg );if _cage !=nil {return nil ,_cage ;};};if _fee ._ab ==nil {_fee ._ab =_db .NewStats (8192,1);};_fee .RegionBitmap =_cd .New (int (_fee .RegionInfo .BitmapWidth ),int (_fee .RegionInfo .BitmapHeight ));if _fee .TemplateID ==0{if _cage =_fee .updateOverride ();_cage !=nil {return nil ,_cage ;};};_eeg :=(_fee .RegionBitmap .Width +7)&-8;var _da int ;if _fee .IsTPGROn {_da =int (-_fee .ReferenceDY )*_fee .ReferenceBitmap .RowStride ;};_fbb :=_da +1;for _aad :=0;_aad < _fee .RegionBitmap .Height ;_aad ++{if _fee .IsTPGROn {_ecb ,_bd :=_fee .decodeSLTP ();if _bd !=nil {return nil ,_bd ;};_be ^=_ecb ;};if _be ==0{_cage =_fee .decodeOptimized (_aad ,_fee .RegionBitmap .Width ,_fee .RegionBitmap .RowStride ,_fee .ReferenceBitmap .RowStride ,_eeg ,_da ,_fbb );if _cage !=nil {return nil ,_cage ;};}else {_cage =_fee .decodeTypicalPredictedLine (_aad ,_fee .RegionBitmap .Width ,_fee .RegionBitmap .RowStride ,_fee .ReferenceBitmap .RowStride ,_eeg ,_da );if _cage !=nil {return nil ,_cage ;};};};return _fee .RegionBitmap ,nil ;};func (_afee *SymbolDictionary )encodeATFlags (_ddcc _aa .BinaryWriter )(_cgfd int ,_bfbd error ){const _afca ="\u0065\u006e\u0063\u006f\u0064\u0065\u0041\u0054\u0046\u006c\u0061\u0067\u0073";if _afee .IsHuffmanEncoded ||_afee .SdTemplate !=0{return 0,nil ;};_dffeg :=4;if _afee .SdTemplate !=0{_dffeg =1;};for _fbcc :=0;_fbcc < _dffeg ;_fbcc ++{if _bfbd =_ddcc .WriteByte (byte (_afee .SdATX [_fbcc ]));_bfbd !=nil {return _cgfd ,_gc .Wrapf (_bfbd ,_afca ,"\u0053d\u0041\u0054\u0058\u005b\u0025\u0064]",_fbcc );};_cgfd ++;if _bfbd =_ddcc .WriteByte (byte (_afee .SdATY [_fbcc ]));_bfbd !=nil {return _cgfd ,_gc .Wrapf (_bfbd ,_afca ,"\u0053d\u0041\u0054\u0059\u005b\u0025\u0064]",_fbcc );};_cgfd ++;};return _cgfd ,nil ;};func NewHeader (d Documenter ,r _aa .StreamReader ,offset int64 ,organizationType OrganizationType )(*Header ,error ){_bage :=&Header {Reader :r };if _bfgf :=_bage .parse (d ,r ,offset ,organizationType );_bfgf !=nil {return nil ,_gc .Wrap (_bfgf ,"\u004ee\u0077\u0048\u0065\u0061\u0064\u0065r","");};return _bage ,nil ;};func (_ggdeb *PatternDictionary )setGbAtPixels (){if _ggdeb .HDTemplate ==0{_ggdeb .GBAtX =make ([]int8 ,4);_ggdeb .GBAtY =make ([]int8 ,4);_ggdeb .GBAtX [0]=-int8 (_ggdeb .HdpWidth );_ggdeb .GBAtY [0]=0;_ggdeb .GBAtX [1]=-3;_ggdeb .GBAtY [1]=-1;_ggdeb .GBAtX [2]=2;_ggdeb .GBAtY [2]=-2;_ggdeb .GBAtX [3]=-2;_ggdeb .GBAtY [3]=-2;}else {_ggdeb .GBAtX =[]int8 {-int8 (_ggdeb .HdpWidth )};_ggdeb .GBAtY =[]int8 {0};};};func (_cgdd *PageInformationSegment )checkInput ()error {if _cgdd .PageBMHeight ==_d .MaxInt32 {if !_cgdd .IsStripe {_bc .Log .Debug ("P\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0053\u0065\u0067me\u006e\u0074\u002e\u0049s\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0073\u0068ou\u006c\u0064 \u0062\u0065\u0020\u0074\u0072\u0075\u0065\u002e");};};return nil ;};func (_gfab *GenericRegion )parseHeader ()(_fdae error ){_bc .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052I\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0050\u0061\u0072s\u0069\u006e\u0067\u0048\u0065\u0061\u0064e\u0072\u002e\u002e\u002e");defer func (){if _fdae !=nil {_bc .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e]\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065r\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0077\u0069th\u0020\u0065\u0072\u0072\u006f\u0072\u002e\u0020\u0025\u0076",_fdae );}else {_bc .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049C\u002d\u0052\u0045G\u0049\u004f\u004e]\u0020\u0050a\u0072\u0073\u0069\u006e\u0067\u0048e\u0061de\u0072\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0053\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079\u002e\u002e\u002e");};}();var (_gac int ;_afa uint64 ;);if _fdae =_gfab .RegionSegment .parseHeader ();_fdae !=nil {return _fdae ;};if _ ,_fdae =_gfab ._bcb .ReadBits (3);_fdae !=nil {return _fdae ;};_gac ,_fdae =_gfab ._bcb .ReadBit ();if _fdae !=nil {return _fdae ;};if _gac ==1{_gfab .UseExtTemplates =true ;};_gac ,_fdae =_gfab ._bcb .ReadBit ();if _fdae !=nil {return _fdae ;};if _gac ==1{_gfab .IsTPGDon =true ;};_afa ,_fdae =_gfab ._bcb .ReadBits (2);if _fdae !=nil {return _fdae ;};_gfab .GBTemplate =byte (_afa &0xf);_gac ,_fdae =_gfab ._bcb .ReadBit ();if _fdae !=nil {return _fdae ;};if _gac ==1{_gfab .IsMMREncoded =true ;};if !_gfab .IsMMREncoded {_afe :=1;if _gfab .GBTemplate ==0{_afe =4;if _gfab .UseExtTemplates {_afe =12;};};if _fdae =_gfab .readGBAtPixels (_afe );_fdae !=nil {return _fdae ;};};if _fdae =_gfab .computeSegmentDataStructure ();_fdae !=nil {return _fdae ;};_bc .Log .Trace ("\u0025\u0073",_gfab );return nil ;};func (_fegc *TextRegion )decodeIds ()(int64 ,error ){const _afcge ="\u0064e\u0063\u006f\u0064\u0065\u0049\u0064s";if _fegc .IsHuffmanEncoded {if _fegc .SbHuffDS ==3{if _fegc ._aaaeg ==nil {_cffbe :=0;if _fegc .SbHuffFS ==3{_cffbe ++;};var _bfcc error ;_fegc ._aaaeg ,_bfcc =_fegc .getUserTable (_cffbe );if _bfcc !=nil {return 0,_gc .Wrap (_bfcc ,_afcge ,"");};};return _fegc ._aaaeg .Decode (_fegc ._cfcb );};_cedd ,_gdcd :=_ee .GetStandardTable (8+int (_fegc .SbHuffDS ));if _gdcd !=nil {return 0,_gc .Wrap (_gdcd ,_afcge ,"");};return _cedd .Decode (_fegc ._cfcb );};_eabe ,_dcddf :=_fegc ._daca .DecodeInt (_fegc ._fggc );if _dcddf !=nil {return 0,_gc .Wrap (_dcddf ,_afcge ,"\u0063\u0078\u0049\u0041\u0044\u0053");};return int64 (_eabe ),nil ;};func (_gdae *PageInformationSegment )Size ()int {return 19};func (_aabg *RegionSegment )Encode (w _aa .BinaryWriter )(_ggfeg int ,_eadg error ){const _bbffb ="R\u0065g\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065n\u0074\u002e\u0045\u006eco\u0064\u0065";_bcda :=make ([]byte ,4);_e .BigEndian .PutUint32 (_bcda ,_aabg .BitmapWidth );_ggfeg ,_eadg =w .Write (_bcda );if _eadg !=nil {return 0,_gc .Wrap (_eadg ,_bbffb ,"\u0057\u0069\u0064t\u0068");};_e .BigEndian .PutUint32 (_bcda ,_aabg .BitmapHeight );var _fadf int ;_fadf ,_eadg =w .Write (_bcda );if _eadg !=nil {return 0,_gc .Wrap (_eadg ,_bbffb ,"\u0048\u0065\u0069\u0067\u0068\u0074");};_ggfeg +=_fadf ;_e .BigEndian .PutUint32 (_bcda ,_aabg .XLocation );_fadf ,_eadg =w .Write (_bcda );if _eadg !=nil {return 0,_gc .Wrap (_eadg ,_bbffb ,"\u0058L\u006f\u0063\u0061\u0074\u0069\u006fn");};_ggfeg +=_fadf ;_e .BigEndian .PutUint32 (_bcda ,_aabg .YLocation );_fadf ,_eadg =w .Write (_bcda );if _eadg !=nil {return 0,_gc .Wrap (_eadg ,_bbffb ,"\u0059L\u006f\u0063\u0061\u0074\u0069\u006fn");};_ggfeg +=_fadf ;if _eadg =w .WriteByte (byte (_aabg .CombinaionOperator )&0x07);_eadg !=nil {return 0,_gc .Wrap (_eadg ,_bbffb ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};_ggfeg ++;return _ggfeg ,nil ;};func (_feg *SymbolDictionary )setExportedSymbols (_bcec []int ){for _faabe :=uint32 (0);_faabe < _feg ._dcdf +_feg .NumberOfNewSymbols ;_faabe ++{if _bcec [_faabe ]==1{var _egbe *_cd .Bitmap ;if _faabe < _feg ._dcdf {_egbe =_feg ._ffbe [_faabe ];}else {_egbe =_feg ._feba [_faabe -_feg ._dcdf ];};_bc .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u002d\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u0020\u0041\u0064\u0064 E\u0078\u0070\u006fr\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027%\u0073\u0027",_egbe );_feg ._gec =append (_feg ._gec ,_egbe );};};};func (_facc *GenericRegion )overrideAtTemplate2 (_cfce ,_fgb ,_acec ,_aeed ,_aed int )int {_cfce &=0x3FB;if _facc .GBAtY [0]==0&&_facc .GBAtX [0]>=-int8 (_aed ){_cfce |=(_aeed >>uint (7-(int8 (_aed )+_facc .GBAtX [0]))&0x1)<<2;}else {_cfce |=int (_facc .getPixel (_fgb +int (_facc .GBAtX [0]),_acec +int (_facc .GBAtY [0])))<<2;};return _cfce ;};var _ SegmentEncoder =&RegionSegment {};func (_gbg *GenericRegion )decodeTemplate3 (_becd ,_fcg ,_egaf int ,_cbb ,_gaef int )(_dfd error ){const _ggc ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0033";var (_ebef ,_bcdfd int ;_dgb int ;_dfdc byte ;_febg ,_ebfa int ;);if _becd >=1{_dfdc ,_dfd =_gbg .Bitmap .GetByte (_gaef );if _dfd !=nil {return _gc .Wrap (_dfd ,_ggc ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_dgb =int (_dfdc );};_ebef =(_dgb >>1)&0x70;for _cgga :=0;_cgga < _egaf ;_cgga =_febg {var (_dbdf byte ;_abed int ;);_febg =_cgga +8;if _beg :=_fcg -_cgga ;_beg > 8{_abed =8;}else {_abed =_beg ;};if _becd >=1{_dgb <<=8;if _febg < _fcg {_dfdc ,_dfd =_gbg .Bitmap .GetByte (_gaef +1);if _dfd !=nil {return _gc .Wrap (_dfd ,_ggc ,"\u0069\u006e\u006e\u0065\u0072\u0020\u002d\u0020\u006c\u0069\u006e\u0065 \u003e\u003d\u0020\u0031");};_dgb |=int (_dfdc );};};for _bbd :=0;_bbd < _abed ;_bbd ++{if _gbg ._cgg {_bcdfd =_gbg .overrideAtTemplate3 (_ebef ,_cgga +_bbd ,_becd ,int (_dbdf ),_bbd );_gbg ._cfa .SetIndex (int32 (_bcdfd ));}else {_gbg ._cfa .SetIndex (int32 (_ebef ));};_ebfa ,_dfd =_gbg ._dfgc .DecodeBit (_gbg ._cfa );if _dfd !=nil {return _gc .Wrap (_dfd ,_ggc ,"");};_dbdf |=byte (_ebfa )<<byte (7-_bbd );_ebef =((_ebef &0x1f7)<<1)|_ebfa |((_dgb >>uint (8-_bbd ))&0x010);};if _edfa :=_gbg .Bitmap .SetByte (_cbb ,_dbdf );_edfa !=nil {return _gc .Wrap (_edfa ,_ggc ,"");};_cbb ++;_gaef ++;};return nil ;};type GenericRegion struct{_bcb _aa .StreamReader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;UseExtTemplates bool ;IsTPGDon bool ;GBTemplate byte ;IsMMREncoded bool ;UseMMR bool ;GBAtX []int8 ;GBAtY []int8 ;GBAtOverride []bool ;_cgg bool ;Bitmap *_cd .Bitmap ;_dfgc *_db .Decoder ;_cfa *_db .DecoderStats ;_eeb *_dd .Decoder ;};func (_fbd *Header )readDataStartOffset (_ccb _aa .StreamReader ,_ffdg OrganizationType ){if _ffdg ==OSequential {_fbd .SegmentDataStartOffset =uint64 (_ccb .StreamPosition ());};};func (_bge *Header )parse (_ffaaa Documenter ,_ccg _aa .StreamReader ,_gffd int64 ,_cefa OrganizationType )(_ebda error ){const _gbga ="\u0070\u0061\u0072s\u0065";_bc .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u005b\u0050A\u0052\u0053\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _ebda !=nil {_bc .Log .Trace ("\u005b\u0053\u0045GM\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045R\u005d[\u0050A\u0052S\u0045\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_ebda );}else {_bc .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052]\u005bP\u0041\u0052\u0053\u0045\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");};}();_ ,_ebda =_ccg .Seek (_gffd ,_c .SeekStart );if _ebda !=nil {return _gc .Wrap (_ebda ,_gbga ,"\u0073\u0065\u0065\u006b\u0020\u0073\u0074\u0061\u0072\u0074");};if _ebda =_bge .readSegmentNumber (_ccg );_ebda !=nil {return _gc .Wrap (_ebda ,_gbga ,"");};if _ebda =_bge .readHeaderFlags ();_ebda !=nil {return _gc .Wrap (_ebda ,_gbga ,"");};var _debb uint64 ;_debb ,_ebda =_bge .readNumberOfReferredToSegments (_ccg );if _ebda !=nil {return _gc .Wrap (_ebda ,_gbga ,"");};_bge .RTSNumbers ,_ebda =_bge .readReferredToSegmentNumbers (_ccg ,int (_debb ));if _ebda !=nil {return _gc .Wrap (_ebda ,_gbga ,"");};_ebda =_bge .readSegmentPageAssociation (_ffaaa ,_ccg ,_debb ,_bge .RTSNumbers ...);if _ebda !=nil {return _gc .Wrap (_ebda ,_gbga ,"");};if _bge .Type !=TEndOfFile {if _ebda =_bge .readSegmentDataLength (_ccg );_ebda !=nil {return _gc .Wrap (_ebda ,_gbga ,"");};};_bge .readDataStartOffset (_ccg ,_cefa );_bge .readHeaderLength (_ccg ,_gffd );_bc .Log .Trace ("\u0025\u0073",_bge );return nil ;};type Segmenter interface{Init (_dfcc *Header ,_cffc _aa .StreamReader )error ;};func (_cfabbb *RegionSegment )readCombinationOperator ()error {_cfag ,_fccc :=_cfabbb ._bdcg .ReadBits (3);if _fccc !=nil {return _fccc ;};_cfabbb .CombinaionOperator =_cd .CombinationOperator (_cfag &0xF);return nil ;};func (_ffaag *GenericRegion )decodeTemplate0a (_aac ,_gcb ,_gcbd int ,_gad ,_cfe int )(_gccg error ){const _acbfb ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0061";var (_efc ,_bbf int ;_cdg ,_cdb int ;_cfcd byte ;_dfff int ;);if _aac >=1{_cfcd ,_gccg =_ffaag .Bitmap .GetByte (_cfe );if _gccg !=nil {return _gc .Wrap (_gccg ,_acbfb ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_cdg =int (_cfcd );};if _aac >=2{_cfcd ,_gccg =_ffaag .Bitmap .GetByte (_cfe -_ffaag .Bitmap .RowStride );if _gccg !=nil {return _gc .Wrap (_gccg ,_acbfb ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_cdb =int (_cfcd )<<6;};_efc =(_cdg &0xf0)|(_cdb &0x3800);for _def :=0;_def < _gcbd ;_def =_dfff {var (_bcdff byte ;_cfee int ;);_dfff =_def +8;if _bdb :=_gcb -_def ;_bdb > 8{_cfee =8;}else {_cfee =_bdb ;};if _aac > 0{_cdg <<=8;if _dfff < _gcb {_cfcd ,_gccg =_ffaag .Bitmap .GetByte (_cfe +1);if _gccg !=nil {return _gc .Wrap (_gccg ,_acbfb ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_cdg |=int (_cfcd );};};if _aac > 1{_afag :=_cfe -_ffaag .Bitmap .RowStride +1;_cdb <<=8;if _dfff < _gcb {_cfcd ,_gccg =_ffaag .Bitmap .GetByte (_afag );if _gccg !=nil {return _gc .Wrap (_gccg ,_acbfb ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_cdb |=int (_cfcd )<<6;}else {_cdb |=0;};};for _aff :=0;_aff < _cfee ;_aff ++{_dfc :=uint (7-_aff );if _ffaag ._cgg {_bbf =_ffaag .overrideAtTemplate0a (_efc ,_def +_aff ,_aac ,int (_bcdff ),_aff ,int (_dfc ));_ffaag ._cfa .SetIndex (int32 (_bbf ));}else {_ffaag ._cfa .SetIndex (int32 (_efc ));};var _gfaa int ;_gfaa ,_gccg =_ffaag ._dfgc .DecodeBit (_ffaag ._cfa );if _gccg !=nil {return _gc .Wrap (_gccg ,_acbfb ,"");};_bcdff |=byte (_gfaa )<<uint (_dfc );_efc =((_efc &0x7bf7)<<1)|_gfaa |((_cdg >>_dfc )&0x10)|((_cdb >>_dfc )&0x800);};if _dge :=_ffaag .Bitmap .SetByte (_gad ,_bcdff );_dge !=nil {return _gc .Wrap (_dge ,_acbfb ,"");};_gad ++;_cfe ++;};return nil ;};func (_dace *PatternDictionary )extractPatterns (_aaa *_cd .Bitmap )error {var _afbg int ;_cacde :=make ([]*_cd .Bitmap ,_dace .GrayMax +1);for _afbg <=int (_dace .GrayMax ){_geae :=int (_dace .HdpWidth )*_afbg ;_adgb :=_f .Rect (_geae ,0,_geae +int (_dace .HdpWidth ),int (_dace .HdpHeight ));_abfgb ,_bgef :=_cd .Extract (_adgb ,_aaa );if _bgef !=nil {return _bgef ;};_cacde [_afbg ]=_abfgb ;_afbg ++;};_dace .Patterns =_cacde ;return nil ;};func (_ffaa *GenericRegion )Encode (w _aa .BinaryWriter )(_agb int ,_cga error ){const _fbeb ="G\u0065n\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069o\u006e\u002e\u0045\u006eco\u0064\u0065";if _ffaa .Bitmap ==nil {return 0,_gc .Error (_fbeb ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};_cggg ,_cga :=_ffaa .RegionSegment .Encode (w );if _cga !=nil {return 0,_gc .Wrap (_cga ,_fbeb ,"\u0052\u0065\u0067\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074");};_agb +=_cggg ;if _cga =w .SkipBits (4);_cga !=nil {return _agb ,_gc .Wrap (_cga ,_fbeb ,"\u0073k\u0069p\u0020\u0072\u0065\u0073\u0065r\u0076\u0065d\u0020\u0062\u0069\u0074\u0073");};var _cfb int ;if _ffaa .IsTPGDon {_cfb =1;};if _cga =w .WriteBit (_cfb );_cga !=nil {return _agb ,_gc .Wrap (_cga ,_fbeb ,"\u0074\u0070\u0067\u0064\u006f\u006e");};_cfb =0;if _cga =w .WriteBit (int (_ffaa .GBTemplate >>1)&0x01);_cga !=nil {return _agb ,_gc .Wrap (_cga ,_fbeb ,"f\u0069r\u0073\u0074\u0020\u0067\u0062\u0074\u0065\u006dp\u006c\u0061\u0074\u0065 b\u0069\u0074");};if _cga =w .WriteBit (int (_ffaa .GBTemplate )&0x01);_cga !=nil {return _agb ,_gc .Wrap (_cga ,_fbeb ,"s\u0065\u0063\u006f\u006ed \u0067b\u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u0062\u0069\u0074");};if _ffaa .UseMMR {_cfb =1;};if _cga =w .WriteBit (_cfb );_cga !=nil {return _agb ,_gc .Wrap (_cga ,_fbeb ,"u\u0073\u0065\u0020\u004d\u004d\u0052\u0020\u0062\u0069\u0074");};_agb ++;if _cggg ,_cga =_ffaa .writeGBAtPixels (w );_cga !=nil {return _agb ,_gc .Wrap (_cga ,_fbeb ,"");};_agb +=_cggg ;_dbfg :=_ca .New ();if _cga =_dbfg .EncodeBitmap (_ffaa .Bitmap ,_ffaa .IsTPGDon );_cga !=nil {return _agb ,_gc .Wrap (_cga ,_fbeb ,"");};_dbfg .Final ();var _caca int64 ;if _caca ,_cga =_dbfg .WriteTo (w );_cga !=nil {return _agb ,_gc .Wrap (_cga ,_fbeb ,"");};_agb +=int (_caca );return _agb ,nil ;};func (_fddd *PatternDictionary )readPatternWidthAndHeight ()error {_ddg ,_bbg :=_fddd ._dea .ReadByte ();if _bbg !=nil {return _bbg ;};_fddd .HdpWidth =_ddg ;_ddg ,_bbg =_fddd ._dea .ReadByte ();if _bbg !=nil {return _bbg ;};_fddd .HdpHeight =_ddg ;return nil ;};func (_efdb *PageInformationSegment )CombinationOperator ()_cd .CombinationOperator {return _efdb ._eafg ;};func (_afda *TextRegion )checkInput ()error {const _abefb ="\u0063\u0068\u0065\u0063\u006b\u0049\u006e\u0070\u0075\u0074";if !_afda .UseRefinement {if _afda .SbrTemplate !=0{_bc .Log .Debug ("\u0053\u0062\u0072Te\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_afda .SbrTemplate =0;};};if _afda .SbHuffFS ==2||_afda .SbHuffRDWidth ==2||_afda .SbHuffRDHeight ==2||_afda .SbHuffRDX ==2||_afda .SbHuffRDY ==2{return _gc .Error (_abefb ,"h\u0075\u0066\u0066\u006d\u0061\u006e \u0066\u006c\u0061\u0067\u0020\u0076a\u006c\u0075\u0065\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074e\u0064");};if !_afda .UseRefinement {if _afda .SbHuffRSize !=0{_bc .Log .Debug ("\u0053\u0062\u0048uf\u0066\u0052\u0053\u0069\u007a\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_afda .SbHuffRSize =0;};if _afda .SbHuffRDY !=0{_bc .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044Y\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_afda .SbHuffRDY =0;};if _afda .SbHuffRDX !=0{_bc .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044X\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_afda .SbHuffRDX =0;};if _afda .SbHuffRDWidth !=0{_bc .Log .Debug ("\u0053b\u0048\u0075\u0066\u0066R\u0044\u0057\u0069\u0064\u0074h\u0020s\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u00200");_afda .SbHuffRDWidth =0;};if _afda .SbHuffRDHeight !=0{_bc .Log .Debug ("\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069g\u0068\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0030");_afda .SbHuffRDHeight =0;};};return nil ;};func (_cdac *GenericRegion )setParameters (_facg bool ,_gdb ,_fbf int64 ,_cee ,_bdgg uint32 ){_cdac .IsMMREncoded =_facg ;_cdac .DataOffset =_gdb ;_cdac .DataLength =_fbf ;_cdac .RegionSegment .BitmapHeight =_cee ;_cdac .RegionSegment .BitmapWidth =_bdgg ;_cdac ._eeb =nil ;_cdac .Bitmap =nil ;};func (_cacd *GenericRegion )setOverrideFlag (_cedc int ){_cacd .GBAtOverride [_cedc ]=true ;_cacd ._cgg =true ;};func (_gafb *HalftoneRegion )grayScaleDecoding (_dcaa int )([][]int ,error ){var (_gfcb []int8 ;_acgf []int8 ;);if !_gafb .IsMMREncoded {_gfcb =make ([]int8 ,4);_acgf =make ([]int8 ,4);if _gafb .HTemplate <=1{_gfcb [0]=3;}else if _gafb .HTemplate >=2{_gfcb [0]=2;};_acgf [0]=-1;_gfcb [1]=-3;_acgf [1]=-1;_gfcb [2]=2;_acgf [2]=-2;_gfcb [3]=-2;_acgf [3]=-2;};_cad :=make ([]*_cd .Bitmap ,_dcaa );_eed :=NewGenericRegion (_gafb ._dfge );_eed .setParametersMMR (_gafb .IsMMREncoded ,_gafb .DataOffset ,_gafb .DataLength ,_gafb .HGridHeight ,_gafb .HGridWidth ,_gafb .HTemplate ,false ,_gafb .HSkipEnabled ,_gfcb ,_acgf );_ffg :=_dcaa -1;var _ddcb error ;_cad [_ffg ],_ddcb =_eed .GetRegionBitmap ();if _ddcb !=nil {return nil ,_ddcb ;};for _ffg > 0{_ffg --;_eed .Bitmap =nil ;_cad [_ffg ],_ddcb =_eed .GetRegionBitmap ();if _ddcb !=nil {return nil ,_ddcb ;};if _ddcb =_gafb .combineGrayscalePlanes (_cad ,_ffg );_ddcb !=nil {return nil ,_ddcb ;};};return _gafb .computeGrayScalePlanes (_cad ,_dcaa );};func (_cfcee *Header )writeSegmentPageAssociation (_fge _aa .BinaryWriter )(_agag int ,_feeb error ){const _febgd ="w\u0072\u0069\u0074\u0065\u0053\u0065g\u006d\u0065\u006e\u0074\u0050\u0061\u0067\u0065\u0041s\u0073\u006f\u0063i\u0061t\u0069\u006f\u006e";if _cfcee .pageSize ()!=4{if _feeb =_fge .WriteByte (byte (_cfcee .PageAssociation ));_feeb !=nil {return 0,_gc .Wrap (_feeb ,_febgd ,"\u0070\u0061\u0067\u0065\u0053\u0069\u007a\u0065\u0020\u0021\u003d\u0020\u0034");};return 1,nil ;};_cebe :=make ([]byte ,4);_e .BigEndian .PutUint32 (_cebe ,uint32 (_cfcee .PageAssociation ));if _agag ,_feeb =_fge .Write (_cebe );_feeb !=nil {return 0,_gc .Wrap (_feeb ,_febgd ,"\u0034 \u0062y\u0074\u0065\u0020\u0070\u0061g\u0065\u0020n\u0075\u006d\u0062\u0065\u0072");};return _agag ,nil ;};func (_ceaea *SymbolDictionary )setRetainedCodingContexts (_ffgg *SymbolDictionary ){_ceaea ._cedg =_ffgg ._cedg ;_ceaea .IsHuffmanEncoded =_ffgg .IsHuffmanEncoded ;_ceaea .UseRefinementAggregation =_ffgg .UseRefinementAggregation ;_ceaea .SdTemplate =_ffgg .SdTemplate ;_ceaea .SdrTemplate =_ffgg .SdrTemplate ;_ceaea .SdATX =_ffgg .SdATX ;_ceaea .SdATY =_ffgg .SdATY ;_ceaea .SdrATX =_ffgg .SdrATX ;_ceaea .SdrATY =_ffgg .SdrATY ;_ceaea ._babd =_ffgg ._babd ;};func (_abd *HalftoneRegion )parseHeader ()error {if _cfabb :=_abd .RegionSegment .parseHeader ();_cfabb !=nil {return _cfabb ;};_abbf ,_baa :=_abd ._dfge .ReadBit ();if _baa !=nil {return _baa ;};_abd .HDefaultPixel =int8 (_abbf );_dadc ,_baa :=_abd ._dfge .ReadBits (3);if _baa !=nil {return _baa ;};_abd .CombinationOperator =_cd .CombinationOperator (_dadc &0xf);_abbf ,_baa =_abd ._dfge .ReadBit ();if _baa !=nil {return _baa ;};if _abbf ==1{_abd .HSkipEnabled =true ;};_dadc ,_baa =_abd ._dfge .ReadBits (2);if _baa !=nil {return _baa ;};_abd .HTemplate =byte (_dadc &0xf);_abbf ,_baa =_abd ._dfge .ReadBit ();if _baa !=nil {return _baa ;};if _abbf ==1{_abd .IsMMREncoded =true ;};_dadc ,_baa =_abd ._dfge .ReadBits (32);if _baa !=nil {return _baa ;};_abd .HGridWidth =uint32 (_dadc &_d .MaxUint32 );_dadc ,_baa =_abd ._dfge .ReadBits (32);if _baa !=nil {return _baa ;};_abd .HGridHeight =uint32 (_dadc &_d .MaxUint32 );_dadc ,_baa =_abd ._dfge .ReadBits (32);if _baa !=nil {return _baa ;};_abd .HGridX =int32 (_dadc &_d .MaxInt32 );_dadc ,_baa =_abd ._dfge .ReadBits (32);if _baa !=nil {return _baa ;};_abd .HGridY =int32 (_dadc &_d .MaxInt32 );_dadc ,_baa =_abd ._dfge .ReadBits (16);if _baa !=nil {return _baa ;};_abd .HRegionX =uint16 (_dadc &_d .MaxUint16 );_dadc ,_baa =_abd ._dfge .ReadBits (16);if _baa !=nil {return _baa ;};_abd .HRegionY =uint16 (_dadc &_d .MaxUint16 );if _baa =_abd .computeSegmentDataStructure ();_baa !=nil {return _baa ;};return _abd .checkInput ();};func (_fea *GenericRegion )overrideAtTemplate1 (_adcgc ,_bab ,_aadf ,_cfbb ,_bega int )int {_adcgc &=0x1FF7;if _fea .GBAtY [0]==0&&_fea .GBAtX [0]>=-int8 (_bega ){_adcgc |=(_cfbb >>uint (7-(int8 (_bega )+_fea .GBAtX [0]))&0x1)<<3;}else {_adcgc |=int (_fea .getPixel (_bab +int (_fea .GBAtX [0]),_aadf +int (_fea .GBAtY [0])))<<3;};return _adcgc ;};func (_bbbd *Header )writeSegmentNumber (_caab _aa .BinaryWriter )(_gbge int ,_gbceb error ){_gfgb :=make ([]byte ,4);_e .BigEndian .PutUint32 (_gfgb ,_bbbd .SegmentNumber );if _gbge ,_gbceb =_caab .Write (_gfgb );_gbceb !=nil {return 0,_gc .Wrap (_gbceb ,"\u0048e\u0061\u0064\u0065\u0072.\u0077\u0072\u0069\u0074\u0065S\u0065g\u006de\u006e\u0074\u004e\u0075\u006d\u0062\u0065r","");};return _gbge ,nil ;};func (_fbc *GenericRefinementRegion )decodeTypicalPredictedLine (_eb ,_fg ,_ecbg ,_dffe ,_gde ,_bf int )error {_bgb :=_eb -int (_fbc .ReferenceDY );_dcd :=_fbc .ReferenceBitmap .GetByteIndex (0,_bgb );_gb :=_fbc .RegionBitmap .GetByteIndex (0,_eb );var _gdd error ;switch _fbc .TemplateID {case 0:_gdd =_fbc .decodeTypicalPredictedLineTemplate0 (_eb ,_fg ,_ecbg ,_dffe ,_gde ,_bf ,_gb ,_bgb ,_dcd );case 1:_gdd =_fbc .decodeTypicalPredictedLineTemplate1 (_eb ,_fg ,_ecbg ,_dffe ,_gde ,_bf ,_gb ,_bgb ,_dcd );};return _gdd ;};func (_gaga *PatternDictionary )Init (h *Header ,r _aa .StreamReader )error {_gaga ._dea =r ;return _gaga .parseHeader ();};func (_fegg *SymbolDictionary )setInSyms ()error {if _fegg .Header .RTSegments !=nil {return _fegg .retrieveImportSymbols ();};_fegg ._ffbe =make ([]*_cd .Bitmap ,0);return nil ;};func (_gdde *PatternDictionary )GetDictionary ()([]*_cd .Bitmap ,error ){if _gdde .Patterns !=nil {return _gdde .Patterns ,nil ;};if !_gdde .IsMMREncoded {_gdde .setGbAtPixels ();};_ddfc :=NewGenericRegion (_gdde ._dea );_ddfc .setParametersMMR (_gdde .IsMMREncoded ,_gdde .DataOffset ,_gdde .DataLength ,uint32 (_gdde .HdpHeight ),(_gdde .GrayMax +1)*uint32 (_gdde .HdpWidth ),_gdde .HDTemplate ,false ,false ,_gdde .GBAtX ,_gdde .GBAtY );_fbcae ,_fafa :=_ddfc .GetRegionBitmap ();if _fafa !=nil {return nil ,_fafa ;};if _fafa =_gdde .extractPatterns (_fbcae );_fafa !=nil {return nil ,_fafa ;};return _gdde .Patterns ,nil ;};func (_agbd *HalftoneRegion )computeGrayScalePlanes (_bff []*_cd .Bitmap ,_bggf int )([][]int ,error ){_abeg :=make ([][]int ,_agbd .HGridHeight );for _cacaf :=0;_cacaf < len (_abeg );_cacaf ++{_abeg [_cacaf ]=make ([]int ,_agbd .HGridWidth );};for _bbe :=0;_bbe < int (_agbd .HGridHeight );_bbe ++{for _bgd :=0;_bgd < int (_agbd .HGridWidth );_bgd +=8{var _eaf int ;if _gaed :=int (_agbd .HGridWidth )-_bgd ;_gaed > 8{_eaf =8;}else {_eaf =_gaed ;};_gaba :=_bff [0].GetByteIndex (_bgd ,_bbe );for _cffga :=0;_cffga < _eaf ;_cffga ++{_abb :=_cffga +_bgd ;_abeg [_bbe ][_abb ]=0;for _abc :=0;_abc < _bggf ;_abc ++{_dfag ,_gcf :=_bff [_abc ].GetByte (_gaba );if _gcf !=nil {return nil ,_gcf ;};_gbce :=_dfag >>uint (7-_abb &7);_edfd :=_gbce &1;_ebce :=1<<uint (_abc );_gebg :=int (_edfd )*_ebce ;_abeg [_bbe ][_abb ]+=_gebg ;};};};};return _abeg ,nil ;};var _ templater =&template0 {};func (_adcg *GenericRegion )getPixel (_gdc ,_gddf int )int8 {if _gdc < 0||_gdc >=_adcg .Bitmap .Width {return 0;};if _gddf < 0||_gddf >=_adcg .Bitmap .Height {return 0;};if _adcg .Bitmap .GetPixel (_gdc ,_gddf ){return 1;};return 0;};func (_gce *HalftoneRegion )shiftAndFill (_aabd int )int {_aabd >>=8;if _aabd < 0{_cgda :=int (_d .Log (float64 (_dfffe (_aabd )))/_d .Log (2));_feda :=31-_cgda ;for _ecdc :=1;_ecdc < _feda ;_ecdc ++{_aabd |=1<<uint (31-_ecdc );};};return _aabd ;};func (_ecfce *TextRegion )Encode (w _aa .BinaryWriter )(_bdd int ,_dfagf error ){const _fbcb ="\u0054\u0065\u0078\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u002e\u0045n\u0063\u006f\u0064\u0065";if _bdd ,_dfagf =_ecfce .RegionInfo .Encode (w );_dfagf !=nil {return _bdd ,_gc .Wrap (_dfagf ,_fbcb ,"");};var _ggad int ;if _ggad ,_dfagf =_ecfce .encodeFlags (w );_dfagf !=nil {return _bdd ,_gc .Wrap (_dfagf ,_fbcb ,"");};_bdd +=_ggad ;if _ggad ,_dfagf =_ecfce .encodeSymbols (w );_dfagf !=nil {return _bdd ,_gc .Wrap (_dfagf ,_fbcb ,"");};_bdd +=_ggad ;return _bdd ,nil ;};func (_ddee *GenericRegion )decodeSLTP ()(int ,error ){switch _ddee .GBTemplate {case 0:_ddee ._cfa .SetIndex (0x9B25);case 1:_ddee ._cfa .SetIndex (0x795);case 2:_ddee ._cfa .SetIndex (0xE5);case 3:_ddee ._cfa .SetIndex (0x195);};return _ddee ._dfgc .DecodeBit (_ddee ._cfa );};func (_dcg *GenericRegion )decodeLine (_cfdb ,_ebcb ,_gfc int )error {const _bag ="\u0064\u0065\u0063\u006f\u0064\u0065\u004c\u0069\u006e\u0065";_egb :=_dcg .Bitmap .GetByteIndex (0,_cfdb );_ceae :=_egb -_dcg .Bitmap .RowStride ;switch _dcg .GBTemplate {case 0:if !_dcg .UseExtTemplates {return _dcg .decodeTemplate0a (_cfdb ,_ebcb ,_gfc ,_egb ,_ceae );};return _dcg .decodeTemplate0b (_cfdb ,_ebcb ,_gfc ,_egb ,_ceae );case 1:return _dcg .decodeTemplate1 (_cfdb ,_ebcb ,_gfc ,_egb ,_ceae );case 2:return _dcg .decodeTemplate2 (_cfdb ,_ebcb ,_gfc ,_egb ,_ceae );case 3:return _dcg .decodeTemplate3 (_cfdb ,_ebcb ,_gfc ,_egb ,_ceae );};return _gc .Errorf (_bag ,"\u0069\u006e\u0076a\u006c\u0069\u0064\u0020G\u0042\u0054\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u003a\u0020\u0025\u0064",_dcg .GBTemplate );};func (_fadd *HalftoneRegion )combineGrayscalePlanes (_acad []*_cd .Bitmap ,_cdbc int )error {_gdg :=0;for _aabb :=0;_aabb < _acad [_cdbc ].Height ;_aabb ++{for _cgge :=0;_cgge < _acad [_cdbc ].Width ;_cgge +=8{_dcac ,_fgba :=_acad [_cdbc +1].GetByte (_gdg );if _fgba !=nil {return _fgba ;};_fcf ,_fgba :=_acad [_cdbc ].GetByte (_gdg );if _fgba !=nil {return _fgba ;};_fgba =_acad [_cdbc ].SetByte (_gdg ,_cd .CombineBytes (_fcf ,_dcac ,_cd .CmbOpXor ));if _fgba !=nil {return _fgba ;};_gdg ++;};};return nil ;};func (_dcbfa *PageInformationSegment )readWidthAndHeight ()error {_bded ,_dcfc :=_dcbfa ._aecg .ReadBits (32);if _dcfc !=nil {return _dcfc ;};_dcbfa .PageBMWidth =int (_bded &_d .MaxInt32 );_bded ,_dcfc =_dcbfa ._aecg .ReadBits (32);if _dcfc !=nil {return _dcfc ;};_dcbfa .PageBMHeight =int (_bded &_d .MaxInt32 );return nil ;};func (_cgd *GenericRefinementRegion )decodeTypicalPredictedLineTemplate1 (_caec ,_bb ,_bfae ,_dfe ,_ada ,_fde ,_eea ,_adf ,_gbd int )(_eegc error ){var (_ced ,_edb int ;_caa ,_fbca int ;_ggd ,_efd int ;_ecg byte ;);if _caec > 0{_ecg ,_eegc =_cgd .RegionBitmap .GetByte (_eea -_bfae );if _eegc !=nil {return ;};_caa =int (_ecg );};if _adf > 0&&_adf <=_cgd .ReferenceBitmap .Height {_ecg ,_eegc =_cgd .ReferenceBitmap .GetByte (_gbd -_dfe +_fde );if _eegc !=nil {return ;};_fbca =int (_ecg )<<2;};if _adf >=0&&_adf < _cgd .ReferenceBitmap .Height {_ecg ,_eegc =_cgd .ReferenceBitmap .GetByte (_gbd +_fde );if _eegc !=nil {return ;};_ggd =int (_ecg );};if _adf > -2&&_adf < _cgd .ReferenceBitmap .Height -1{_ecg ,_eegc =_cgd .ReferenceBitmap .GetByte (_gbd +_dfe +_fde );if _eegc !=nil {return ;};_efd =int (_ecg );};_ced =((_caa >>5)&0x6)|((_efd >>2)&0x30)|(_ggd &0xc0)|(_fbca &0x200);_edb =((_efd >>2)&0x70)|(_ggd &0xc0)|(_fbca &0x700);var _gab int ;for _daa :=0;_daa < _ada ;_daa =_gab {var (_dbed int ;_edf int ;);_gab =_daa +8;if _dbed =_bb -_daa ;_dbed > 8{_dbed =8;};_dcb :=_gab < _bb ;_fdf :=_gab < _cgd .ReferenceBitmap .Width ;_feec :=_fde +1;if _caec > 0{_ecg =0;if _dcb {_ecg ,_eegc =_cgd .RegionBitmap .GetByte (_eea -_bfae +1);if _eegc !=nil {return ;};};_caa =(_caa <<8)|int (_ecg );};if _adf > 0&&_adf <=_cgd .ReferenceBitmap .Height {var _bcd int ;if _fdf {_ecg ,_eegc =_cgd .ReferenceBitmap .GetByte (_gbd -_dfe +_feec );if _eegc !=nil {return ;};_bcd =int (_ecg )<<2;};_fbca =(_fbca <<8)|_bcd ;};if _adf >=0&&_adf < _cgd .ReferenceBitmap .Height {_ecg =0;if _fdf {_ecg ,_eegc =_cgd .ReferenceBitmap .GetByte (_gbd +_feec );if _eegc !=nil {return ;};};_ggd =(_ggd <<8)|int (_ecg );};if _adf > -2&&_adf < (_cgd .ReferenceBitmap .Height -1){_ecg =0;if _fdf {_ecg ,_eegc =_cgd .ReferenceBitmap .GetByte (_gbd +_dfe +_feec );if _eegc !=nil {return ;};};_efd =(_efd <<8)|int (_ecg );};for _gdee :=0;_gdee < _dbed ;_gdee ++{var _cgdf int ;_efb :=(_edb >>4)&0x1ff;switch _efb {case 0x1ff:_cgdf =1;case 0x00:_cgdf =0;default:_cgd ._ab .SetIndex (int32 (_ced ));_cgdf ,_eegc =_cgd ._fbg .DecodeBit (_cgd ._ab );if _eegc !=nil {return ;};};_acg :=uint (7-_gdee );_edf |=int (_cgdf <<_acg );_ced =((_ced &0x0d6)<<1)|_cgdf |(_caa >>_acg +5)&0x002|((_efd >>_acg +2)&0x010)|((_ggd >>_acg )&0x040)|((_fbca >>_acg )&0x200);_edb =((_edb &0xdb)<<1)|((_efd >>_acg +2)&0x010)|((_ggd >>_acg )&0x080)|((_fbca >>_acg )&0x400);};_eegc =_cgd .RegionBitmap .SetByte (_eea ,byte (_edf ));if _eegc !=nil {return ;};_eea ++;_gbd ++;};return nil ;};func (_gfee *HalftoneRegion )GetPatterns ()([]*_cd .Bitmap ,error ){var (_ggde []*_cd .Bitmap ;_caeg error ;);for _ ,_daf :=range _gfee ._fdbb .RTSegments {var _affe Segmenter ;_affe ,_caeg =_daf .GetSegmentData ();if _caeg !=nil {_bc .Log .Debug ("\u0047e\u0074\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061 \u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025v",_caeg );return nil ,_caeg ;};_eee ,_ffe :=_affe .(*PatternDictionary );if !_ffe {_caeg =_df .Errorf ("\u0072e\u006c\u0061t\u0065\u0064\u0020\u0073e\u0067\u006d\u0065n\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0070at\u0074\u0065\u0072n\u0020\u0064i\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u003a \u0025\u0054",_affe );return nil ,_caeg ;};var _febd []*_cd .Bitmap ;_febd ,_caeg =_eee .GetDictionary ();if _caeg !=nil {_bc .Log .Debug ("\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_caeg );return nil ,_caeg ;};_ggde =append (_ggde ,_febd ...);};return _ggde ,nil ;};func (_bfge *PageInformationSegment )String ()string {_dbc :=&_a .Builder {};_dbc .WriteString ("\u000a\u005b\u0050\u0041G\u0045\u002d\u0049\u004e\u0046\u004f\u0052\u004d\u0041\u0054I\u004fN\u002d\u0053\u0045\u0047\u004d\u0045\u004eT\u005d\u000a");_dbc .WriteString (_df .Sprintf ("\u0009\u002d \u0042\u004d\u0048e\u0069\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u000a",_bfge .PageBMHeight ));_dbc .WriteString (_df .Sprintf ("\u0009-\u0020B\u004d\u0057\u0069\u0064\u0074\u0068\u003a\u0020\u0025\u0064\u000a",_bfge .PageBMWidth ));_dbc .WriteString (_df .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0058\u003a\u0020\u0025\u0064\u000a",_bfge .ResolutionX ));_dbc .WriteString (_df .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0059\u003a\u0020\u0025\u0064\u000a",_bfge .ResolutionY ));_dbc .WriteString (_df .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0073\u000a",_bfge ._eafg ));_dbc .WriteString (_df .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006eO\u0070\u0065\u0072\u0061\u0074\u006f\u0072O\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025v\u000a",_bfge ._gcd ));_dbc .WriteString (_df .Sprintf ("\u0009-\u0020I\u0073\u004c\u006f\u0073\u0073l\u0065\u0073s\u003a\u0020\u0025\u0076\u000a",_bfge .IsLossless ));_dbc .WriteString (_df .Sprintf ("\u0009\u002d\u0020R\u0065\u0071\u0075\u0069r\u0065\u0073\u0041\u0075\u0078\u0069\u006ci\u0061\u0072\u0079\u0042\u0075\u0066\u0066\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_bfge ._bce ));_dbc .WriteString (_df .Sprintf ("\u0009\u002d\u0020M\u0069\u0067\u0068\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0052e\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0076\u000a",_bfge ._eceb ));_dbc .WriteString (_df .Sprintf ("\u0009\u002d\u0020\u0049\u0073\u0053\u0074\u0072\u0069\u0070\u0065\u0064:\u0020\u0025\u0076\u000a",_bfge .IsStripe ));_dbc .WriteString (_df .Sprintf ("\t\u002d\u0020\u004d\u0061xS\u0074r\u0069\u0070\u0065\u0053\u0069z\u0065\u003a\u0020\u0025\u0076\u000a",_bfge .MaxStripeSize ));return _dbc .String ();};func (_ge *EndOfStripe )Init (h *Header ,r _aa .StreamReader )error {_ge ._ad =r ;return _ge .parseHeader (h ,r );};func (_abfa *TextRegion )createRegionBitmap ()error {_abfa .RegionBitmap =_cd .New (int (_abfa .RegionInfo .BitmapWidth ),int (_abfa .RegionInfo .BitmapHeight ));if _abfa .DefaultPixel !=0{_abfa .RegionBitmap .SetDefaultPixel ();};return nil ;};func (_aceb *PageInformationSegment )Encode (w _aa .BinaryWriter )(_faeg int ,_aba error ){const _gbceba ="\u0050\u0061g\u0065\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u002e\u0045\u006eco\u0064\u0065";_ggdb :=make ([]byte ,4);_e .BigEndian .PutUint32 (_ggdb ,uint32 (_aceb .PageBMWidth ));_faeg ,_aba =w .Write (_ggdb );if _aba !=nil {return _faeg ,_gc .Wrap (_aba ,_gbceba ,"\u0077\u0069\u0064t\u0068");};_e .BigEndian .PutUint32 (_ggdb ,uint32 (_aceb .PageBMHeight ));var _cagd int ;_cagd ,_aba =w .Write (_ggdb );if _aba !=nil {return _cagd +_faeg ,_gc .Wrap (_aba ,_gbceba ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_faeg +=_cagd ;_e .BigEndian .PutUint32 (_ggdb ,uint32 (_aceb .ResolutionX ));_cagd ,_aba =w .Write (_ggdb );if _aba !=nil {return _cagd +_faeg ,_gc .Wrap (_aba ,_gbceba ,"\u0078\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_faeg +=_cagd ;_e .BigEndian .PutUint32 (_ggdb ,uint32 (_aceb .ResolutionY ));if _cagd ,_aba =w .Write (_ggdb );_aba !=nil {return _cagd +_faeg ,_gc .Wrap (_aba ,_gbceba ,"\u0079\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_faeg +=_cagd ;if _aba =_aceb .encodeFlags (w );_aba !=nil {return _faeg ,_gc .Wrap (_aba ,_gbceba ,"");};_faeg ++;if _cagd ,_aba =_aceb .encodeStripingInformation (w );_aba !=nil {return _faeg ,_gc .Wrap (_aba ,_gbceba ,"");};_faeg +=_cagd ;return _faeg ,nil ;};func _eag (_gca _aa .StreamReader ,_cefb *Header )*GenericRefinementRegion {return &GenericRefinementRegion {_bg :_gca ,RegionInfo :NewRegionSegment (_gca ),_fb :_cefb ,_de :&template0 {},_dda :&template1 {}};};type EncodeInitializer interface{InitEncode ();};func (_afcaa *TextRegion )setCodingStatistics ()error {if _afcaa ._eedce ==nil {_afcaa ._eedce =_db .NewStats (512,1);};if _afcaa ._cddf ==nil {_afcaa ._cddf =_db .NewStats (512,1);};if _afcaa ._fggc ==nil {_afcaa ._fggc =_db .NewStats (512,1);};if _afcaa ._aagcc ==nil {_afcaa ._aagcc =_db .NewStats (512,1);};if _afcaa ._fddcg ==nil {_afcaa ._fddcg =_db .NewStats (512,1);};if _afcaa ._cfca ==nil {_afcaa ._cfca =_db .NewStats (512,1);};if _afcaa ._bdfc ==nil {_afcaa ._bdfc =_db .NewStats (512,1);};if _afcaa ._fagdb ==nil {_afcaa ._fagdb =_db .NewStats (1<<uint (_afcaa ._fgag ),1);};if _afcaa ._dffc ==nil {_afcaa ._dffc =_db .NewStats (512,1);};if _afcaa ._geee ==nil {_afcaa ._geee =_db .NewStats (512,1);};if _afcaa ._daca ==nil {var _edeaf error ;_afcaa ._daca ,_edeaf =_db .New (_afcaa ._cfcb );if _edeaf !=nil {return _edeaf ;};};return nil ;};func (_dfce *Header )readHeaderLength (_gbdg _aa .StreamReader ,_fabb int64 ){_dfce .HeaderLength =_gbdg .StreamPosition ()-_fabb ;};func (_dfef *TextRegion )decodeRdw ()(int64 ,error ){const _abce ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064w";if _dfef .IsHuffmanEncoded {if _dfef .SbHuffRDWidth ==3{if _dfef ._gbaa ==nil {var (_eaac int ;_fabfe error ;);if _dfef .SbHuffFS ==3{_eaac ++;};if _dfef .SbHuffDS ==3{_eaac ++;};if _dfef .SbHuffDT ==3{_eaac ++;};_dfef ._gbaa ,_fabfe =_dfef .getUserTable (_eaac );if _fabfe !=nil {return 0,_gc .Wrap (_fabfe ,_abce ,"");};};return _dfef ._gbaa .Decode (_dfef ._cfcb );};_cfcdb ,_eade :=_ee .GetStandardTable (14+int (_dfef .SbHuffRDWidth ));if _eade !=nil {return 0,_gc .Wrap (_eade ,_abce ,"");};return _cfcdb .Decode (_dfef ._cfcb );};_aace ,_dcgc :=_dfef ._daca .DecodeInt (_dfef ._cfca );if _dcgc !=nil {return 0,_gc .Wrap (_dcgc ,_abce ,"");};return int64 (_aace ),nil ;};const (ORandom OrganizationType =iota ;OSequential ;);func (_ebd *GenericRegion )decodeTemplate1 (_bggd ,_dcea ,_dfb int ,_aagb ,_fgfb int )(_fcce error ){const _ecdf ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0031";var (_gff ,_cgb int ;_ecf ,_dbec int ;_bfd byte ;_cbdg ,_fdd int ;);if _bggd >=1{_bfd ,_fcce =_ebd .Bitmap .GetByte (_fgfb );if _fcce !=nil {return _gc .Wrap (_fcce ,_ecdf ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_ecf =int (_bfd );};if _bggd >=2{_bfd ,_fcce =_ebd .Bitmap .GetByte (_fgfb -_ebd .Bitmap .RowStride );if _fcce !=nil {return _gc .Wrap (_fcce ,_ecdf ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_dbec =int (_bfd )<<5;};_gff =((_ecf >>1)&0x1f8)|((_dbec >>1)&0x1e00);for _bccc :=0;_bccc < _dfb ;_bccc =_cbdg {var (_eda byte ;_gafa int ;);_cbdg =_bccc +8;if _gdff :=_dcea -_bccc ;_gdff > 8{_gafa =8;}else {_gafa =_gdff ;};if _bggd > 0{_ecf <<=8;if _cbdg < _dcea {_bfd ,_fcce =_ebd .Bitmap .GetByte (_fgfb +1);if _fcce !=nil {return _gc .Wrap (_fcce ,_ecdf ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_ecf |=int (_bfd );};};if _bggd > 1{_dbec <<=8;if _cbdg < _dcea {_bfd ,_fcce =_ebd .Bitmap .GetByte (_fgfb -_ebd .Bitmap .RowStride +1);if _fcce !=nil {return _gc .Wrap (_fcce ,_ecdf ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_dbec |=int (_bfd )<<5;};};for _gcg :=0;_gcg < _gafa ;_gcg ++{if _ebd ._cgg {_cgb =_ebd .overrideAtTemplate1 (_gff ,_bccc +_gcg ,_bggd ,int (_eda ),_gcg );_ebd ._cfa .SetIndex (int32 (_cgb ));}else {_ebd ._cfa .SetIndex (int32 (_gff ));};_fdd ,_fcce =_ebd ._dfgc .DecodeBit (_ebd ._cfa );if _fcce !=nil {return _gc .Wrap (_fcce ,_ecdf ,"");};_eda |=byte (_fdd )<<uint (7-_gcg );_dbb :=uint (8-_gcg );_gff =((_gff &0xefb)<<1)|_fdd |((_ecf >>_dbb )&0x8)|((_dbec >>_dbb )&0x200);};if _ddc :=_ebd .Bitmap .SetByte (_aagb ,_eda );_ddc !=nil {return _gc .Wrap (_ddc ,_ecdf ,"");};_aagb ++;_fgfb ++;};return nil ;};func NewGenericRegion (r _aa .StreamReader )*GenericRegion {return &GenericRegion {RegionSegment :NewRegionSegment (r ),_bcb :r };};func (_fgg *RegionSegment )String ()string {_defd :=&_a .Builder {};_defd .WriteString ("\u0009[\u0052E\u0047\u0049\u004f\u004e\u0020S\u0045\u0047M\u0045\u004e\u0054\u005d\u000a");_defd .WriteString (_df .Sprintf ("\t\u0009\u002d\u0020\u0042\u0069\u0074m\u0061\u0070\u0020\u0028\u0077\u0069d\u0074\u0068\u002c\u0020\u0068\u0065\u0069g\u0068\u0074\u0029\u0020\u005b\u0025\u0064\u0078\u0025\u0064]\u000a",_fgg .BitmapWidth ,_fgg .BitmapHeight ));_defd .WriteString (_df .Sprintf ("\u0009\u0009\u002d\u0020L\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0028\u0078,\u0079)\u003a\u0020\u005b\u0025\u0064\u002c\u0025d\u005d\u000a",_fgg .XLocation ,_fgg .YLocation ));_defd .WriteString (_df .Sprintf ("\t\u0009\u002d\u0020\u0043\u006f\u006db\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070e\u0072\u0061\u0074o\u0072:\u0020\u0025\u0073",_fgg .CombinaionOperator ));return _defd .String ();};func (_adfe *GenericRegion )decodeTemplate2 (_cedb ,_cge ,_dac int ,_cdc ,_beac int )(_cfdd error ){const _adgg ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0032";var (_dgdg ,_gadd int ;_aca ,_degg int ;_ega byte ;_edg ,_dffd int ;);if _cedb >=1{_ega ,_cfdd =_adfe .Bitmap .GetByte (_beac );if _cfdd !=nil {return _gc .Wrap (_cfdd ,_adgg ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0031");};_aca =int (_ega );};if _cedb >=2{_ega ,_cfdd =_adfe .Bitmap .GetByte (_beac -_adfe .Bitmap .RowStride );if _cfdd !=nil {return _gc .Wrap (_cfdd ,_adgg ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0032");};_degg =int (_ega )<<4;};_dgdg =(_aca >>3&0x7c)|(_degg >>3&0x380);for _cggb :=0;_cggb < _dac ;_cggb =_edg {var (_bec byte ;_fff int ;);_edg =_cggb +8;if _gabd :=_cge -_cggb ;_gabd > 8{_fff =8;}else {_fff =_gabd ;};if _cedb > 0{_aca <<=8;if _edg < _cge {_ega ,_cfdd =_adfe .Bitmap .GetByte (_beac +1);if _cfdd !=nil {return _gc .Wrap (_cfdd ,_adgg ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0030");};_aca |=int (_ega );};};if _cedb > 1{_degg <<=8;if _edg < _cge {_ega ,_cfdd =_adfe .Bitmap .GetByte (_beac -_adfe .Bitmap .RowStride +1);if _cfdd !=nil {return _gc .Wrap (_cfdd ,_adgg ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0031");};_degg |=int (_ega )<<4;};};for _ebcg :=0;_ebcg < _fff ;_ebcg ++{_cbf :=uint (10-_ebcg );if _adfe ._cgg {_gadd =_adfe .overrideAtTemplate2 (_dgdg ,_cggb +_ebcg ,_cedb ,int (_bec ),_ebcg );_adfe ._cfa .SetIndex (int32 (_gadd ));}else {_adfe ._cfa .SetIndex (int32 (_dgdg ));};_dffd ,_cfdd =_adfe ._dfgc .DecodeBit (_adfe ._cfa );if _cfdd !=nil {return _gc .Wrap (_cfdd ,_adgg ,"");};_bec |=byte (_dffd <<uint (7-_ebcg ));_dgdg =((_dgdg &0x1bd)<<1)|_dffd |((_aca >>_cbf )&0x4)|((_degg >>_cbf )&0x80);};if _gcgg :=_adfe .Bitmap .SetByte (_cdc ,_bec );_gcgg !=nil {return _gc .Wrap (_gcgg ,_adgg ,"");};_cdc ++;_beac ++;};return nil ;};func (_dde *GenericRegion )Init (h *Header ,r _aa .StreamReader )error {_dde .RegionSegment =NewRegionSegment (r );_dde ._bcb =r ;return _dde .parseHeader ();};func (_bfde *Header )writeReferredToSegments (_cgbd _aa .BinaryWriter )(_fdbg int ,_acbe error ){const _ggee ="\u0077\u0072\u0069te\u0052\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";var (_gead uint16 ;_gfeef uint32 ;);_ddf :=_bfde .referenceSize ();_gbdf :=1;_edca :=make ([]byte ,_ddf );for _ ,_ceea :=range _bfde .RTSNumbers {switch _ddf {case 4:_gfeef =uint32 (_ceea );_e .BigEndian .PutUint32 (_edca ,_gfeef );_gbdf ,_acbe =_cgbd .Write (_edca );if _acbe !=nil {return 0,_gc .Wrap (_acbe ,_ggee ,"u\u0069\u006e\u0074\u0033\u0032\u0020\u0073\u0069\u007a\u0065");};case 2:_gead =uint16 (_ceea );_e .BigEndian .PutUint16 (_edca ,_gead );_gbdf ,_acbe =_cgbd .Write (_edca );if _acbe !=nil {return 0,_gc .Wrap (_acbe ,_ggee ,"\u0075\u0069\u006e\u0074\u0031\u0036");};default:if _acbe =_cgbd .WriteByte (byte (_ceea ));_acbe !=nil {return 0,_gc .Wrap (_acbe ,_ggee ,"\u0075\u0069\u006et\u0038");};};_fdbg +=_gbdf ;};return _fdbg ,nil ;};func (_dadcc *TextRegion )encodeSymbols (_egfe _aa .BinaryWriter )(_gdeg int ,_dgce error ){const _aaee ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";_deed :=make ([]byte ,4);_e .BigEndian .PutUint32 (_deed ,_dadcc .NumberOfSymbols );if _gdeg ,_dgce =_egfe .Write (_deed );_dgce !=nil {return _gdeg ,_gc .Wrap (_dgce ,_aaee ,"\u004e\u0075\u006dbe\u0072\u004f\u0066\u0053\u0079\u006d\u0062\u006f\u006c\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073");};_gccb ,_dgce :=_cd .NewClassedPoints (_dadcc ._ggabc ,_ac .IntSlice (_dadcc ._decbc ));if _dgce !=nil {return 0,_gc .Wrap (_dgce ,_aaee ,"");};var _cabe ,_eeaa int ;_gffb :=_ca .New ();_gffb .Init ();if _dgce =_gffb .EncodeInteger (_ca .IADT ,0);_dgce !=nil {return _gdeg ,_gc .Wrap (_dgce ,_aaee ,"\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0020\u0044\u0054");};_egca ,_dgce :=_gccb .GroupByY ();if _dgce !=nil {return 0,_gc .Wrap (_dgce ,_aaee ,"");};for _ ,_gefb :=range _egca {_cffgg :=int (_gefb .YAtIndex (0));_ebfc :=_cffgg -_cabe ;if _dgce =_gffb .EncodeInteger (_ca .IADT ,_ebfc );_dgce !=nil {return _gdeg ,_gc .Wrap (_dgce ,_aaee ,"");};var _bgbc int ;for _dgdad ,_cgbcd :=range _gefb .IntSlice {switch _dgdad {case 0:_dgeg :=int (_gefb .XAtIndex (_dgdad ))-_eeaa ;if _dgce =_gffb .EncodeInteger (_ca .IAFS ,_dgeg );_dgce !=nil {return _gdeg ,_gc .Wrap (_dgce ,_aaee ,"");};_eeaa +=_dgeg ;_bgbc =_eeaa ;default:_bgee :=int (_gefb .XAtIndex (_dgdad ))-_bgbc ;if _dgce =_gffb .EncodeInteger (_ca .IADS ,_bgee );_dgce !=nil {return _gdeg ,_gc .Wrap (_dgce ,_aaee ,"");};_bgbc +=_bgee ;};_dbgd ,_dbdea :=_dadcc ._cgbdc .Get (_cgbcd );if _dbdea !=nil {return _gdeg ,_gc .Wrap (_dbdea ,_aaee ,"");};_aegcb ,_cdada :=_dadcc ._daba [_dbgd ];if !_cdada {_aegcb ,_cdada =_dadcc ._fbcd [_dbgd ];if !_cdada {return _gdeg ,_gc .Errorf (_aaee ,"\u0053\u0079\u006d\u006f\u0062\u006c:\u0020\u0027\u0025d\u0027\u0020\u0069s\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064 \u0069\u006e\u0020\u0067\u006cob\u0061\u006c\u0020\u0061\u006e\u0064\u0020\u006c\u006f\u0063\u0061\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020\u006d\u0061\u0070",_dbgd );};};if _dbdea =_gffb .EncodeIAID (_dadcc ._fabd ,_aegcb );_dbdea !=nil {return _gdeg ,_gc .Wrap (_dbdea ,_aaee ,"");};};if _dgce =_gffb .EncodeOOB (_ca .IADS );_dgce !=nil {return _gdeg ,_gc .Wrap (_dgce ,_aaee ,"");};};_gffb .Final ();_fdga ,_dgce :=_gffb .WriteTo (_egfe );if _dgce !=nil {return _gdeg ,_gc .Wrap (_dgce ,_aaee ,"");};_gdeg +=int (_fdga );return _gdeg ,nil ;};func (_ceeb *GenericRegion )setParametersWithAt (_befa bool ,_adea byte ,_cde ,_edfg bool ,_cffg ,_fgab []int8 ,_fcab ,_gag uint32 ,_fcgf *_db .DecoderStats ,_bfdc *_db .Decoder ){_ceeb .IsMMREncoded =_befa ;_ceeb .GBTemplate =_adea ;_ceeb .IsTPGDon =_cde ;_ceeb .GBAtX =_cffg ;_ceeb .GBAtY =_fgab ;_ceeb .RegionSegment .BitmapHeight =_gag ;_ceeb .RegionSegment .BitmapWidth =_fcab ;_ceeb ._eeb =nil ;_ceeb .Bitmap =nil ;if _fcgf !=nil {_ceeb ._cfa =_fcgf ;};if _bfdc !=nil {_ceeb ._dfgc =_bfdc ;};_bc .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049O\u004e\u005d\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073\u0020\u0053\u0044\u0041t\u003a\u0020\u0025\u0073",_ceeb );};func (_gaaf *SymbolDictionary )setRefinementAtPixels ()error {if !_gaaf .UseRefinementAggregation ||_gaaf .SdrTemplate !=0{return nil ;};if _efdgc :=_gaaf .readRefinementAtPixels (2);_efdgc !=nil {return _efdgc ;};return nil ;};func (_dgab *SymbolDictionary )parseHeader ()(_dcec error ){_bc .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");defer func (){if _dcec !=nil {_bc .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u0020\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u005b\u0050\u0041\u0052SE\u002d\u0048\u0045A\u0044\u0045R\u005d\u0020\u0066\u0061\u0069\u006ce\u0064\u002e \u0025\u0076",_dcec );}else {_bc .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");};}();if _dcec =_dgab .readRegionFlags ();_dcec !=nil {return _dcec ;};if _dcec =_dgab .setAtPixels ();_dcec !=nil {return _dcec ;};if _dcec =_dgab .setRefinementAtPixels ();_dcec !=nil {return _dcec ;};if _dcec =_dgab .readNumberOfExportedSymbols ();_dcec !=nil {return _dcec ;};if _dcec =_dgab .readNumberOfNewSymbols ();_dcec !=nil {return _dcec ;};if _dcec =_dgab .setInSyms ();_dcec !=nil {return _dcec ;};if _dgab ._gaead {_dgae :=_dgab .Header .RTSegments ;for _abbc :=len (_dgae )-1;_abbc >=0;_abbc --{if _dgae [_abbc ].Type ==0{_gebea ,_afcg :=_dgae [_abbc ].SegmentData .(*SymbolDictionary );if !_afcg {_dcec =_df .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074:\u0020\u0025\u0076\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020S\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_dgae [_abbc ]);return _dcec ;};if _gebea ._gaead {_dgab .setRetainedCodingContexts (_gebea );};break ;};};};if _dcec =_dgab .checkInput ();_dcec !=nil {return _dcec ;};return nil ;};func (_cdfa *SymbolDictionary )InitEncode (symbols *_cd .Bitmaps ,symbolList []int ,symbolMap map[int ]int ,unborderSymbols bool )error {const _ceabg ="S\u0079\u006d\u0062\u006f\u006c\u0044i\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002eI\u006e\u0069\u0074E\u006ec\u006f\u0064\u0065";_cdfa .SdATX =[]int8 {3,-3,2,-2};_cdfa .SdATY =[]int8 {-1,-1,-2,-2};_cdfa ._bbcd =symbols ;_cdfa ._dbca =make ([]int ,len (symbolList ));copy (_cdfa ._dbca ,symbolList );if len (_cdfa ._dbca )!=_cdfa ._bbcd .Size (){return _gc .Error (_ceabg ,"s\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0061\u006e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u004ci\u0073\u0074\u0020\u006f\u0066\u0020\u0064\u0069\u0066\u0066er\u0065\u006e\u0074 \u0073i\u007a\u0065");};_cdfa .NumberOfNewSymbols =uint32 (symbols .Size ());_cdfa .NumberOfExportedSymbols =uint32 (symbols .Size ());_cdfa ._bfag =symbolMap ;_cdfa ._dddf =unborderSymbols ;return nil ;};func (_dcbed *SymbolDictionary )retrieveImportSymbols ()error {for _ ,_cfda :=range _dcbed .Header .RTSegments {if _cfda .Type ==0{_cadc ,_ggag :=_cfda .GetSegmentData ();if _ggag !=nil {return _ggag ;};_dgac ,_dfad :=_cadc .(*SymbolDictionary );if !_dfad {return _df .Errorf ("\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0044\u0061\u0074a\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u003a\u0020%\u0054",_cadc );};_aaae ,_ggag :=_dgac .GetDictionary ();if _ggag !=nil {return _df .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064 \u0073\u0065\u0067m\u0065\u006e\u0074 \u0077\u0069t\u0068\u0020\u0069\u006e\u0064\u0065x\u003a %\u0064\u0020\u0067\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0073",_cfda .SegmentNumber ,_ggag .Error ());};_dcbed ._ffbe =append (_dcbed ._ffbe ,_aaae ...);_dcbed ._dcdf +=_dgac .NumberOfExportedSymbols ;};};return nil ;};func (_bebe *PageInformationSegment )parseHeader ()(_egbf error ){_bc .Log .Trace ("\u005b\u0050\u0061\u0067\u0065I\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067m\u0065\u006e\u0074\u005d\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u002e\u002e");defer func (){var _abeb ="[\u0050\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072m\u0061\u0074\u0069\u006f\u006e\u0053\u0065gm\u0065\u006e\u0074\u005d \u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065ad\u0065\u0072 \u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064";if _egbf !=nil {_abeb +="\u0020\u0077\u0069t\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u0020"+_egbf .Error ();}else {_abeb +="\u0020\u0073\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079";};_bc .Log .Trace (_abeb );}();if _egbf =_bebe .readWidthAndHeight ();_egbf !=nil {return _egbf ;};if _egbf =_bebe .readResolution ();_egbf !=nil {return _egbf ;};_ ,_egbf =_bebe ._aecg .ReadBit ();if _egbf !=nil {return _egbf ;};if _egbf =_bebe .readCombinationOperatorOverrideAllowed ();_egbf !=nil {return _egbf ;};if _egbf =_bebe .readRequiresAuxiliaryBuffer ();_egbf !=nil {return _egbf ;};if _egbf =_bebe .readCombinationOperator ();_egbf !=nil {return _egbf ;};if _egbf =_bebe .readDefaultPixelValue ();_egbf !=nil {return _egbf ;};if _egbf =_bebe .readContainsRefinement ();_egbf !=nil {return _egbf ;};if _egbf =_bebe .readIsLossless ();_egbf !=nil {return _egbf ;};if _egbf =_bebe .readIsStriped ();_egbf !=nil {return _egbf ;};if _egbf =_bebe .readMaxStripeSize ();_egbf !=nil {return _egbf ;};if _egbf =_bebe .checkInput ();_egbf !=nil {return _egbf ;};_bc .Log .Trace ("\u0025\u0073",_bebe );return nil ;};func (_cbfe *SymbolDictionary )readAtPixels (_feecb int )error {_cbfe .SdATX =make ([]int8 ,_feecb );_cbfe .SdATY =make ([]int8 ,_feecb );var (_agff byte ;_aggd error ;);for _dggae :=0;_dggae < _feecb ;_dggae ++{_agff ,_aggd =_cbfe ._bcgf .ReadByte ();if _aggd !=nil {return _aggd ;};_cbfe .SdATX [_dggae ]=int8 (_agff );_agff ,_aggd =_cbfe ._bcgf .ReadByte ();if _aggd !=nil {return _aggd ;};_cbfe .SdATY [_dggae ]=int8 (_agff );};return nil ;};func (_bfdgf *SymbolDictionary )huffDecodeRefAggNInst ()(int64 ,error ){if !_bfdgf .SdHuffAggInstanceSelection {_aadb ,_bdea :=_ee .GetStandardTable (1);if _bdea !=nil {return 0,_bdea ;};return _aadb .Decode (_bfdgf ._bcgf );};if _bfdgf ._ddde ==nil {var (_cadd int ;_eafgb error ;);if _bfdgf .SdHuffDecodeHeightSelection ==3{_cadd ++;};if _bfdgf .SdHuffDecodeWidthSelection ==3{_cadd ++;};if _bfdgf .SdHuffBMSizeSelection ==3{_cadd ++;};_bfdgf ._ddde ,_eafgb =_bfdgf .getUserTable (_cadd );if _eafgb !=nil {return 0,_eafgb ;};};return _bfdgf ._ddde .Decode (_bfdgf ._bcgf );};func (_aaea *SymbolDictionary )readNumberOfNewSymbols ()error {_eacgbc ,_ddbf :=_aaea ._bcgf .ReadBits (32);if _ddbf !=nil {return _ddbf ;};_aaea .NumberOfNewSymbols =uint32 (_eacgbc &_d .MaxUint32 );return nil ;};func (_fddg *SymbolDictionary )decodeDifferenceWidth ()(int64 ,error ){if _fddg .IsHuffmanEncoded {switch _fddg .SdHuffDecodeWidthSelection {case 0:_egbff ,_dfcee :=_ee .GetStandardTable (2);if _dfcee !=nil {return 0,_dfcee ;};return _egbff .Decode (_fddg ._bcgf );case 1:_bgbg ,_fgabf :=_ee .GetStandardTable (3);if _fgabf !=nil {return 0,_fgabf ;};return _bgbg .Decode (_fddg ._bcgf );case 3:if _fddg ._daac ==nil {var _aeeb int ;if _fddg .SdHuffDecodeHeightSelection ==3{_aeeb ++;};_gefa ,_adgf :=_fddg .getUserTable (_aeeb );if _adgf !=nil {return 0,_adgf ;};_fddg ._daac =_gefa ;};return _fddg ._daac .Decode (_fddg ._bcgf );};}else {_decee ,_decf :=_fddg ._cedg .DecodeInt (_fddg ._ded );if _decf !=nil {return 0,_decf ;};if _decee ==_d .MaxInt32 {return int64 (_d .MaxInt64 ),nil ;};return int64 (_decee ),nil ;};return 0,nil ;};func (_accbf *TextRegion )initSymbols ()error {const _dcaaf ="i\u006e\u0069\u0074\u0053\u0079\u006d\u0062\u006f\u006c\u0073";for _ ,_fbbb :=range _accbf .Header .RTSegments {if _fbbb ==nil {return _gc .Error (_dcaaf ,"\u006e\u0069\u006c\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020pr\u006f\u0076\u0069\u0064\u0065\u0064 \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0074\u0065\u0078\u0074\u0020\u0072\u0065g\u0069\u006f\u006e\u0020\u0053\u0079\u006d\u0062o\u006c\u0073");};if _fbbb .Type ==0{_beff ,_defcf :=_fbbb .GetSegmentData ();if _defcf !=nil {return _gc .Wrap (_defcf ,_dcaaf ,"");};_aggf ,_bgdcf :=_beff .(*SymbolDictionary );if !_bgdcf {return _gc .Error (_dcaaf ,"\u0072e\u0066\u0065r\u0072\u0065\u0064 \u0054\u006f\u0020\u0053\u0065\u0067\u006de\u006e\u0074\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_aggf ._agaea =_accbf ._fagdb ;_gaab ,_defcf :=_aggf .GetDictionary ();if _defcf !=nil {return _gc .Wrap (_defcf ,_dcaaf ,"");};_accbf .Symbols =append (_accbf .Symbols ,_gaab ...);};};_accbf .NumberOfSymbols =uint32 (len (_accbf .Symbols ));return nil ;};type templater interface{form (_cdaf ,_adg ,_gbf ,_ace ,_cbg int16 )int16 ;setIndex (_acb *_db .DecoderStats );};func (_fcgc *TextRegion )parseHeader ()error {var _gcaf error ;_bc .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069n\u0073\u002e\u002e\u002e");defer func (){if _gcaf !=nil {_bc .Log .Trace ("\u005b\u0054\u0045\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044E\u0052\u005d\u0020\u0066\u0061i\u006c\u0065d\u002e\u0020\u0025\u0076",_gcaf );}else {_bc .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069s\u0068\u0065\u0064\u002e");};}();if _gcaf =_fcgc .RegionInfo .parseHeader ();_gcaf !=nil {return _gcaf ;};if _gcaf =_fcgc .readRegionFlags ();_gcaf !=nil {return _gcaf ;};if _fcgc .IsHuffmanEncoded {if _gcaf =_fcgc .readHuffmanFlags ();_gcaf !=nil {return _gcaf ;};};if _gcaf =_fcgc .readUseRefinement ();_gcaf !=nil {return _gcaf ;};if _gcaf =_fcgc .readAmountOfSymbolInstances ();_gcaf !=nil {return _gcaf ;};if _gcaf =_fcgc .getSymbols ();_gcaf !=nil {return _gcaf ;};if _gcaf =_fcgc .computeSymbolCodeLength ();_gcaf !=nil {return _gcaf ;};if _gcaf =_fcgc .checkInput ();_gcaf !=nil {return _gcaf ;};_bc .Log .Trace ("\u0025\u0073",_fcgc .String ());return nil ;};func (_cdf *GenericRefinementRegion )GetRegionInfo ()*RegionSegment {return _cdf .RegionInfo };func (_gfag *HalftoneRegion )Init (hd *Header ,r _aa .StreamReader )error {_gfag ._dfge =r ;_gfag ._fdbb =hd ;_gfag .RegionSegment =NewRegionSegment (r );return _gfag .parseHeader ();};type TableSegment struct{_efge _aa .StreamReader ;_aedf int32 ;_dfcd int32 ;_aecgd int32 ;_bbbcc int32 ;_edef int32 ;};func (_edaf *TextRegion )getSymbols ()error {if _edaf .Header .RTSegments !=nil {return _edaf .initSymbols ();};return nil ;};func (_ae *GenericRefinementRegion )Init (header *Header ,r _aa .StreamReader )error {_ae ._fb =header ;_ae ._bg =r ;_ae .RegionInfo =NewRegionSegment (r );return _ae .parseHeader ();};func (_cea *template1 )form (_cbc ,_bfgd ,_cfc ,_ecbe ,_dgf int16 )int16 {return ((_cbc &0x02)<<8)|(_bfgd <<6)|((_cfc &0x03)<<4)|(_ecbe <<1)|_dgf ;};func (_abde *PatternDictionary )readGrayMax ()error {_bfab ,_eaae :=_abde ._dea .ReadBits (32);if _eaae !=nil {return _eaae ;};_abde .GrayMax =uint32 (_bfab &_d .MaxUint32 );return nil ;};func (_edcf *TextRegion )decodeID ()(int64 ,error ){if _edcf .IsHuffmanEncoded {if _edcf ._eage ==nil {_eegb ,_ebacf :=_edcf ._cfcb .ReadBits (byte (_edcf ._fgag ));return int64 (_eegb ),_ebacf ;};return _edcf ._eage .Decode (_edcf ._cfcb );};return _edcf ._daca .DecodeIAID (uint64 (_edcf ._fgag ),_edcf ._fagdb );};func (_bgab *PageInformationSegment )readIsLossless ()error {_agcg ,_efdg :=_bgab ._aecg .ReadBit ();if _efdg !=nil {return _efdg ;};if _agcg ==1{_bgab .IsLossless =true ;};return nil ;};func (_gdca *PageInformationSegment )encodeFlags (_fgae _aa .BinaryWriter )(_bedd error ){const _cacaa ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _bedd =_fgae .SkipBits (1);_bedd !=nil {return _gc .Wrap (_bedd ,_cacaa ,"\u0072\u0065\u0073e\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074");};var _eeac int ;if _gdca .CombinationOperatorOverrideAllowed (){_eeac =1;};if _bedd =_fgae .WriteBit (_eeac );_bedd !=nil {return _gc .Wrap (_bedd ,_cacaa ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0064\u0065\u006e");};_eeac =0;if _gdca ._bce {_eeac =1;};if _bedd =_fgae .WriteBit (_eeac );_bedd !=nil {return _gc .Wrap (_bedd ,_cacaa ,"\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0061\u0075\u0078i\u006ci\u0061r\u0079\u0020\u0062\u0075\u0066\u0066\u0065r");};if _bedd =_fgae .WriteBit ((int (_gdca ._eafg )>>1)&0x01);_bedd !=nil {return _gc .Wrap (_bedd ,_cacaa ,"\u0063\u006f\u006d\u0062\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006f\u0070\u0065\u0072\u0061\u0074o\u0072\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0062\u0069\u0074");};if _bedd =_fgae .WriteBit (int (_gdca ._eafg )&0x01);_bedd !=nil {return _gc .Wrap (_bedd ,_cacaa ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0062\u0069\u0074");};_eeac =int (_gdca ._gda );if _bedd =_fgae .WriteBit (_eeac );_bedd !=nil {return _gc .Wrap (_bedd ,_cacaa ,"\u0064e\u0066\u0061\u0075\u006c\u0074\u0020\u0070\u0061\u0067\u0065\u0020p\u0069\u0078\u0065\u006c\u0020\u0076\u0061\u006c\u0075\u0065");};_eeac =0;if _gdca ._eceb {_eeac =1;};if _bedd =_fgae .WriteBit (_eeac );_bedd !=nil {return _gc .Wrap (_bedd ,_cacaa ,"\u0063\u006f\u006e\u0074ai\u006e\u0073\u0020\u0072\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074");};_eeac =0;if _gdca .IsLossless {_eeac =1;};if _bedd =_fgae .WriteBit (_eeac );_bedd !=nil {return _gc .Wrap (_bedd ,_cacaa ,"p\u0061\u0067\u0065\u0020\u0069\u0073 \u0065\u0076\u0065\u006e\u0074\u0075\u0061\u006c\u006cy\u0020\u006c\u006fs\u0073l\u0065\u0073\u0073");};return nil ;};func (_cdfe *SymbolDictionary )readNumberOfExportedSymbols ()error {_fcbg ,_eaaeg :=_cdfe ._bcgf .ReadBits (32);if _eaaeg !=nil {return _eaaeg ;};_cdfe .NumberOfExportedSymbols =uint32 (_fcbg &_d .MaxUint32 );return nil ;};func (_gcbde *SymbolDictionary )decodeHeightClassBitmap (_dgdc *_cd .Bitmap ,_egd int64 ,_efdgb int ,_agcgb []int )error {for _beed :=_egd ;_beed < int64 (_gcbde ._fecg );_beed ++{var _dbdb int ;for _ddge :=_egd ;_ddge <=_beed -1;_ddge ++{_dbdb +=_agcgb [_ddge ];};_bbbc :=_f .Rect (_dbdb ,0,_dbdb +_agcgb [_beed ],_efdgb );_dgdb ,_cegc :=_cd .Extract (_bbbc ,_dgdc );if _cegc !=nil {return _cegc ;};_gcbde ._feba [_beed ]=_dgdb ;_gcbde ._efeb =append (_gcbde ._efeb ,_dgdb );};return nil ;};func (_cgdb *GenericRegion )writeGBAtPixels (_eceg _aa .BinaryWriter )(_edd int ,_eab error ){const _cab ="\u0077r\u0069t\u0065\u0047\u0042\u0041\u0074\u0050\u0069\u0078\u0065\u006c\u0073";if _cgdb .UseMMR {return 0,nil ;};_acfe :=1;if _cgdb .GBTemplate ==0{_acfe =4;}else if _cgdb .UseExtTemplates {_acfe =12;};if len (_cgdb .GBAtX )!=_acfe {return 0,_gc .Errorf (_cab ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0058\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");};if len (_cgdb .GBAtY )!=_acfe {return 0,_gc .Errorf (_cab ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0059\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");};for _afbbf :=0;_afbbf < _acfe ;_afbbf ++{if _eab =_eceg .WriteByte (byte (_cgdb .GBAtX [_afbbf ]));_eab !=nil {return _edd ,_gc .Wrap (_eab ,_cab ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0058");};_edd ++;if _eab =_eceg .WriteByte (byte (_cgdb .GBAtY [_afbbf ]));_eab !=nil {return _edd ,_gc .Wrap (_eab ,_cab ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0059");};_edd ++;};return _edd ,nil ;};type Header struct{SegmentNumber uint32 ;Type Type ;RetainFlag bool ;PageAssociation int ;PageAssociationFieldSize bool ;RTSegments []*Header ;HeaderLength int64 ;SegmentDataLength uint64 ;SegmentDataStartOffset uint64 ;Reader _aa .StreamReader ;SegmentData Segmenter ;RTSNumbers []int ;RetainBits []uint8 ;};type Documenter interface{GetPage (int )(Pager ,error );GetGlobalSegment (int )(*Header ,error );};type PatternDictionary struct{_dea _aa .StreamReader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;GBAtX []int8 ;GBAtY []int8 ;IsMMREncoded bool ;HDTemplate byte ;HdpWidth byte ;HdpHeight byte ;Patterns []*_cd .Bitmap ;GrayMax uint32 ;};type template0 struct{};func NewRegionSegment (r _aa .StreamReader )*RegionSegment {return &RegionSegment {_bdcg :r }};func (_begaa *SymbolDictionary )readRefinementAtPixels (_cfdf int )error {_begaa .SdrATX =make ([]int8 ,_cfdf );_begaa .SdrATY =make ([]int8 ,_cfdf );var (_acdd byte ;_fadc error ;);for _ffac :=0;_ffac < _cfdf ;_ffac ++{_acdd ,_fadc =_begaa ._bcgf .ReadByte ();if _fadc !=nil {return _fadc ;};_begaa .SdrATX [_ffac ]=int8 (_acdd );_acdd ,_fadc =_begaa ._bcgf .ReadByte ();if _fadc !=nil {return _fadc ;};_begaa .SdrATY [_ffac ]=int8 (_acdd );};return nil ;};func (_ccbd *SymbolDictionary )encodeRefinementATFlags (_fdda _aa .BinaryWriter )(_aede int ,_dga error ){const _ddbb ="\u0065\u006e\u0063od\u0065\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0041\u0054\u0046\u006c\u0061\u0067\u0073";if !_ccbd .UseRefinementAggregation ||_ccbd .SdrTemplate !=0{return 0,nil ;};for _bbbe :=0;_bbbe < 2;_bbbe ++{if _dga =_fdda .WriteByte (byte (_ccbd .SdrATX [_bbbe ]));_dga !=nil {return _aede ,_gc .Wrapf (_dga ,_ddbb ,"\u0053\u0064\u0072\u0041\u0054\u0058\u005b\u0025\u0064\u005d",_bbbe );};_aede ++;if _dga =_fdda .WriteByte (byte (_ccbd .SdrATY [_bbbe ]));_dga !=nil {return _aede ,_gc .Wrapf (_dga ,_ddbb ,"\u0053\u0064\u0072\u0041\u0054\u0059\u005b\u0025\u0064\u005d",_bbbe );};_aede ++;};return _aede ,nil ;};func (_geda *HalftoneRegion )computeSegmentDataStructure ()error {_geda .DataOffset =_geda ._dfge .StreamPosition ();_geda .DataHeaderLength =_geda .DataOffset -_geda .DataHeaderOffset ;_geda .DataLength =int64 (_geda ._dfge .Length ())-_geda .DataHeaderLength ;return nil ;};func (_gabbc *TextRegion )decodeRdy ()(int64 ,error ){const _bfeb ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064y";if _gabbc .IsHuffmanEncoded {if _gabbc .SbHuffRDY ==3{if _gabbc ._cec ==nil {var (_dggg int ;_cebf error ;);if _gabbc .SbHuffFS ==3{_dggg ++;};if _gabbc .SbHuffDS ==3{_dggg ++;};if _gabbc .SbHuffDT ==3{_dggg ++;};if _gabbc .SbHuffRDWidth ==3{_dggg ++;};if _gabbc .SbHuffRDHeight ==3{_dggg ++;};if _gabbc .SbHuffRDX ==3{_dggg ++;};_gabbc ._cec ,_cebf =_gabbc .getUserTable (_dggg );if _cebf !=nil {return 0,_gc .Wrap (_cebf ,_bfeb ,"");};};return _gabbc ._cec .Decode (_gabbc ._cfcb );};_aaf ,_geddc :=_ee .GetStandardTable (14+int (_gabbc .SbHuffRDY ));if _geddc !=nil {return 0,_geddc ;};return _aaf .Decode (_gabbc ._cfcb );};_cacb ,_efdgcb :=_gabbc ._daca .DecodeInt (_gabbc ._geee );if _efdgcb !=nil {return 0,_gc .Wrap (_efdgcb ,_bfeb ,"");};return int64 (_cacb ),nil ;};func (_dgbe *TextRegion )readHuffmanFlags ()error {var (_ggeb int ;_cgdaf uint64 ;_dadgf error ;);_ ,_dadgf =_dgbe ._cfcb .ReadBit ();if _dadgf !=nil {return _dadgf ;};_ggeb ,_dadgf =_dgbe ._cfcb .ReadBit ();if _dadgf !=nil {return _dadgf ;};_dgbe .SbHuffRSize =int8 (_ggeb );_cgdaf ,_dadgf =_dgbe ._cfcb .ReadBits (2);if _dadgf !=nil {return _dadgf ;};_dgbe .SbHuffRDY =int8 (_cgdaf )&0xf;_cgdaf ,_dadgf =_dgbe ._cfcb .ReadBits (2);if _dadgf !=nil {return _dadgf ;};_dgbe .SbHuffRDX =int8 (_cgdaf )&0xf;_cgdaf ,_dadgf =_dgbe ._cfcb .ReadBits (2);if _dadgf !=nil {return _dadgf ;};_dgbe .SbHuffRDHeight =int8 (_cgdaf )&0xf;_cgdaf ,_dadgf =_dgbe ._cfcb .ReadBits (2);if _dadgf !=nil {return _dadgf ;};_dgbe .SbHuffRDWidth =int8 (_cgdaf )&0xf;_cgdaf ,_dadgf =_dgbe ._cfcb .ReadBits (2);if _dadgf !=nil {return _dadgf ;};_dgbe .SbHuffDT =int8 (_cgdaf )&0xf;_cgdaf ,_dadgf =_dgbe ._cfcb .ReadBits (2);if _dadgf !=nil {return _dadgf ;};_dgbe .SbHuffDS =int8 (_cgdaf )&0xf;_cgdaf ,_dadgf =_dgbe ._cfcb .ReadBits (2);if _dadgf !=nil {return _dadgf ;};_dgbe .SbHuffFS =int8 (_cgdaf )&0xf;return nil ;};func (_afb *GenericRegion )Size ()int {return _afb .RegionSegment .Size ()+1+2*len (_afb .GBAtX )};func (_effb *GenericRefinementRegion )overrideAtTemplate0 (_ebe ,_bdf ,_ccd ,_cac ,_ecd int )int {if _effb ._fe [0]{_ebe &=0xfff7;if _effb .GrAtY [0]==0&&int (_effb .GrAtX [0])>=-_ecd {_ebe |=(_cac >>uint (7-(_ecd +int (_effb .GrAtX [0])))&0x1)<<3;}else {_ebe |=_effb .getPixel (_effb .RegionBitmap ,_bdf +int (_effb .GrAtX [0]),_ccd +int (_effb .GrAtY [0]))<<3;};};if _effb ._fe [1]{_ebe &=0xefff;if _effb .GrAtY [1]==0&&int (_effb .GrAtX [1])>=-_ecd {_ebe |=(_cac >>uint (7-(_ecd +int (_effb .GrAtX [1])))&0x1)<<12;}else {_ebe |=_effb .getPixel (_effb .ReferenceBitmap ,_bdf +int (_effb .GrAtX [1]),_ccd +int (_effb .GrAtY [1]));};};return _ebe ;};func (_dbfgc *SymbolDictionary )decodeHeightClassCollectiveBitmap (_efbf int64 ,_dagc ,_cgaf uint32 )(*_cd .Bitmap ,error ){if _efbf ==0{_ddgd :=_cd .New (int (_cgaf ),int (_dagc ));var (_dcdd byte ;_agedf error ;);for _egad :=0;_egad < len (_ddgd .Data );_egad ++{_dcdd ,_agedf =_dbfgc ._bcgf .ReadByte ();if _agedf !=nil {return nil ,_agedf ;};if _agedf =_ddgd .SetByte (_egad ,_dcdd );_agedf !=nil {return nil ,_agedf ;};};return _ddgd ,nil ;};if _dbfgc ._bccg ==nil {_dbfgc ._bccg =NewGenericRegion (_dbfgc ._bcgf );};_dbfgc ._bccg .setParameters (true ,_dbfgc ._bcgf .StreamPosition (),_efbf ,_dagc ,_cgaf );_afbc ,_eceea :=_dbfgc ._bccg .GetRegionBitmap ();if _eceea !=nil {return nil ,_eceea ;};return _afbc ,nil ;};func (_cdd *TableSegment )StreamReader ()_aa .StreamReader {return _cdd ._efge };func (_dcfa *TableSegment )HtLow ()int32 {return _dcfa ._bbbcc };func (_daff *PageInformationSegment )readCombinationOperatorOverrideAllowed ()error {_bbab ,_adeg :=_daff ._aecg .ReadBit ();if _adeg !=nil {return _adeg ;};if _bbab ==1{_daff ._gcd =true ;};return nil ;};func (_agaab *PageInformationSegment )CombinationOperatorOverrideAllowed ()bool {return _agaab ._gcd };func (_ecfc *SymbolDictionary )GetDictionary ()([]*_cd .Bitmap ,error ){_bc .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c-\u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");defer func (){_bc .Log .Trace ("\u005b\u0053\u0059M\u0042\u004f\u004c\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");_bc .Log .Trace ("\u005b\u0053Y\u004d\u0042\u004f\u004c\u002dD\u0049\u0043\u0054\u0049\u004fN\u0041\u0052\u0059\u005d\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020\u000a\u0045\u0078\u003a\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u000a\u006e\u0065\u0077\u003a\u0027\u0025\u0073\u0027",_ecfc ._gec ,_ecfc ._feba );}();if _ecfc ._gec ==nil {var _fefd error ;if _ecfc .UseRefinementAggregation {_ecfc ._bdef =_ecfc .getSbSymCodeLen ();};if !_ecfc .IsHuffmanEncoded {if _fefd =_ecfc .setCodingStatistics ();_fefd !=nil {return nil ,_fefd ;};};_ecfc ._feba =make ([]*_cd .Bitmap ,_ecfc .NumberOfNewSymbols );var _aggc []int ;if _ecfc .IsHuffmanEncoded &&!_ecfc .UseRefinementAggregation {_aggc =make ([]int ,_ecfc .NumberOfNewSymbols );};if _fefd =_ecfc .setSymbolsArray ();_fefd !=nil {return nil ,_fefd ;};var _gfae ,_dagg int64 ;_ecfc ._fecg =0;for _ecfc ._fecg < _ecfc .NumberOfNewSymbols {_dagg ,_fefd =_ecfc .decodeHeightClassDeltaHeight ();if _fefd !=nil {return nil ,_fefd ;};_gfae +=_dagg ;var _adae ,_cdfg uint32 ;_eacf :=int64 (_ecfc ._fecg );for {var _ebfd int64 ;_ebfd ,_fefd =_ecfc .decodeDifferenceWidth ();if _fefd !=nil {return nil ,_fefd ;};if _ebfd ==int64 (_d .MaxInt64 )||_ecfc ._fecg >=_ecfc .NumberOfNewSymbols {break ;};_adae +=uint32 (_ebfd );_cdfg +=_adae ;if !_ecfc .IsHuffmanEncoded ||_ecfc .UseRefinementAggregation {if !_ecfc .UseRefinementAggregation {_fefd =_ecfc .decodeDirectlyThroughGenericRegion (_adae ,uint32 (_gfae ));if _fefd !=nil {return nil ,_fefd ;};}else {_fefd =_ecfc .decodeAggregate (_adae ,uint32 (_gfae ));if _fefd !=nil {return nil ,_fefd ;};};}else if _ecfc .IsHuffmanEncoded &&!_ecfc .UseRefinementAggregation {_aggc [_ecfc ._fecg ]=int (_adae );};_ecfc ._fecg ++;};if _ecfc .IsHuffmanEncoded &&!_ecfc .UseRefinementAggregation {var _abdb int64 ;if _ecfc .SdHuffBMSizeSelection ==0{var _ggcb _ee .Tabler ;_ggcb ,_fefd =_ee .GetStandardTable (1);if _fefd !=nil {return nil ,_fefd ;};_abdb ,_fefd =_ggcb .Decode (_ecfc ._bcgf );if _fefd !=nil {return nil ,_fefd ;};}else {_abdb ,_fefd =_ecfc .huffDecodeBmSize ();if _fefd !=nil {return nil ,_fefd ;};};_ecfc ._bcgf .Align ();var _accb *_cd .Bitmap ;_accb ,_fefd =_ecfc .decodeHeightClassCollectiveBitmap (_abdb ,uint32 (_gfae ),_cdfg );if _fefd !=nil {return nil ,_fefd ;};_fefd =_ecfc .decodeHeightClassBitmap (_accb ,_eacf ,int (_gfae ),_aggc );if _fefd !=nil {return nil ,_fefd ;};};};_dcdb ,_fefd :=_ecfc .getToExportFlags ();if _fefd !=nil {return nil ,_fefd ;};_ecfc .setExportedSymbols (_dcdb );};return _ecfc ._gec ,nil ;};func (_afff *Header )readSegmentNumber (_dgba _aa .StreamReader )error {const _baad ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";_gabc :=make ([]byte ,4);_ ,_dgg :=_dgba .Read (_gabc );if _dgg !=nil {return _gc .Wrap (_dgg ,_baad ,"");};_afff .SegmentNumber =_e .BigEndian .Uint32 (_gabc );return nil ;};func (_cbbbc *TextRegion )decodeCurrentT ()(int64 ,error ){if _cbbbc .SbStrips !=1{if _cbbbc .IsHuffmanEncoded {_gfbf ,_cacad :=_cbbbc ._cfcb .ReadBits (byte (_cbbbc .LogSBStrips ));return int64 (_gfbf ),_cacad ;};_afg ,_gbaad :=_cbbbc ._daca .DecodeInt (_cbbbc ._aagcc );if _gbaad !=nil {return 0,_gbaad ;};return int64 (_afg ),nil ;};return 0,nil ;};type template1 struct{};func (_eadd *TableSegment )HtHigh ()int32 {return _eadd ._edef };func (_cabcg *TableSegment )HtPS ()int32 {return _cabcg ._dfcd };func (_acfa *TextRegion )symbolIDCodeLengths ()error {var (_gdcg []*_ee .Code ;_cfdbd uint64 ;_abcc _ee .Tabler ;_agea error ;);for _bfgg :=0;_bfgg < 35;_bfgg ++{_cfdbd ,_agea =_acfa ._cfcb .ReadBits (4);if _agea !=nil {return _agea ;};_ffff :=int (_cfdbd &0xf);if _ffff > 0{_gdcg =append (_gdcg ,_ee .NewCode (int32 (_ffff ),0,int32 (_bfgg ),false ));};};_abcc ,_agea =_ee .NewFixedSizeTable (_gdcg );if _agea !=nil {return _agea ;};var (_agcgg int64 ;_egea uint32 ;_faed []*_ee .Code ;_dccb int64 ;);for _egea < _acfa .NumberOfSymbols {_dccb ,_agea =_abcc .Decode (_acfa ._cfcb );if _agea !=nil {return _agea ;};if _dccb < 32{if _dccb > 0{_faed =append (_faed ,_ee .NewCode (int32 (_dccb ),0,int32 (_egea ),false ));};_agcgg =_dccb ;_egea ++;}else {var _babb ,_bgce int64 ;switch _dccb {case 32:_cfdbd ,_agea =_acfa ._cfcb .ReadBits (2);if _agea !=nil {return _agea ;};_babb =3+int64 (_cfdbd );if _egea > 0{_bgce =_agcgg ;};case 33:_cfdbd ,_agea =_acfa ._cfcb .ReadBits (3);if _agea !=nil {return _agea ;};_babb =3+int64 (_cfdbd );case 34:_cfdbd ,_agea =_acfa ._cfcb .ReadBits (7);if _agea !=nil {return _agea ;};_babb =11+int64 (_cfdbd );};for _gegaf :=0;_gegaf < int (_babb );_gegaf ++{if _bgce > 0{_faed =append (_faed ,_ee .NewCode (int32 (_bgce ),0,int32 (_egea ),false ));};_egea ++;};};};_acfa ._cfcb .Align ();_acfa ._eage ,_agea =_ee .NewFixedSizeTable (_faed );return _agea ;};func (_egeg *SymbolDictionary )decodeDirectlyThroughGenericRegion (_caba ,_efceb uint32 )error {if _egeg ._bccg ==nil {_egeg ._bccg =NewGenericRegion (_egeg ._bcgf );};_egeg ._bccg .setParametersWithAt (false ,byte (_egeg .SdTemplate ),false ,false ,_egeg .SdATX ,_egeg .SdATY ,_caba ,_efceb ,_egeg ._babd ,_egeg ._cedg );return _egeg .addSymbol (_egeg ._bccg );};func (_ggeae *TextRegion )readRegionFlags ()error {var (_beeg int ;_edfgc uint64 ;_defb error ;);_beeg ,_defb =_ggeae ._cfcb .ReadBit ();if _defb !=nil {return _defb ;};_ggeae .SbrTemplate =int8 (_beeg );_edfgc ,_defb =_ggeae ._cfcb .ReadBits (5);if _defb !=nil {return _defb ;};_ggeae .SbdsOffset =int8 (_edfgc );if _ggeae .SbdsOffset > 0x0f{_ggeae .SbdsOffset -=0x20;};_beeg ,_defb =_ggeae ._cfcb .ReadBit ();if _defb !=nil {return _defb ;};_ggeae .DefaultPixel =int8 (_beeg );_edfgc ,_defb =_ggeae ._cfcb .ReadBits (2);if _defb !=nil {return _defb ;};_ggeae .CombinationOperator =_cd .CombinationOperator (int (_edfgc )&0x3);_beeg ,_defb =_ggeae ._cfcb .ReadBit ();if _defb !=nil {return _defb ;};_ggeae .IsTransposed =int8 (_beeg );_edfgc ,_defb =_ggeae ._cfcb .ReadBits (2);if _defb !=nil {return _defb ;};_ggeae .ReferenceCorner =int16 (_edfgc )&0x3;_edfgc ,_defb =_ggeae ._cfcb .ReadBits (2);if _defb !=nil {return _defb ;};_ggeae .LogSBStrips =int16 (_edfgc )&0x3;_ggeae .SbStrips =1<<uint (_ggeae .LogSBStrips );_beeg ,_defb =_ggeae ._cfcb .ReadBit ();if _defb !=nil {return _defb ;};if _beeg ==1{_ggeae .UseRefinement =true ;};_beeg ,_defb =_ggeae ._cfcb .ReadBit ();if _defb !=nil {return _defb ;};if _beeg ==1{_ggeae .IsHuffmanEncoded =true ;};return nil ;};func (_cag *EndOfStripe )LineNumber ()int {return _cag ._dff };func (_edba *Header )subInputReader ()(_aa .StreamReader ,error ){return _aa .NewSubstreamReader (_edba .Reader ,_edba .SegmentDataStartOffset ,_edba .SegmentDataLength );};func (_ed *GenericRefinementRegion )decodeSLTP ()(int ,error ){_ed .Template .setIndex (_ed ._ab );return _ed ._fbg .DecodeBit (_ed ._ab );};type OrganizationType uint8 ;func (_ecgd *TextRegion )GetRegionBitmap ()(*_cd .Bitmap ,error ){if _ecgd .RegionBitmap !=nil {return _ecgd .RegionBitmap ,nil ;};if !_ecgd .IsHuffmanEncoded {if _bfc :=_ecgd .setCodingStatistics ();_bfc !=nil {return nil ,_bfc ;};};if _fgbba :=_ecgd .createRegionBitmap ();_fgbba !=nil {return nil ,_fgbba ;};if _cedgg :=_ecgd .decodeSymbolInstances ();_cedgg !=nil {return nil ,_cedgg ;};return _ecgd .RegionBitmap ,nil ;};func (_dffg *HalftoneRegion )GetRegionBitmap ()(*_cd .Bitmap ,error ){if _dffg .HalftoneRegionBitmap !=nil {return _dffg .HalftoneRegionBitmap ,nil ;};var _dfa error ;_dffg .HalftoneRegionBitmap =_cd .New (int (_dffg .RegionSegment .BitmapWidth ),int (_dffg .RegionSegment .BitmapHeight ));if _dffg .Patterns ==nil ||len (_dffg .Patterns )==0{_dffg .Patterns ,_dfa =_dffg .GetPatterns ();if _dfa !=nil {return nil ,_dfa ;};};if _dffg .HDefaultPixel ==1{_dffg .HalftoneRegionBitmap .SetDefaultPixel ();};_faae :=_d .Ceil (_d .Log (float64 (len (_dffg .Patterns )))/_d .Log (2));_gdcc :=int (_faae );var _gcge [][]int ;_gcge ,_dfa =_dffg .grayScaleDecoding (_gdcc );if _dfa !=nil {return nil ,_dfa ;};if _dfa =_dffg .renderPattern (_gcge );_dfa !=nil {return nil ,_dfa ;};return _dffg .HalftoneRegionBitmap ,nil ;};func (_fbfa *PatternDictionary )parseHeader ()error {_bc .Log .Trace ("\u005b\u0050\u0041\u0054\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054I\u004f\u004e\u0041\u0052\u0059\u005d[\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d\u0020b\u0065\u0067\u0069\u006e");defer func (){_bc .Log .Trace ("\u005b\u0050\u0041T\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u005b\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");}();_ ,_bfbf :=_fbfa ._dea .ReadBits (5);if _bfbf !=nil {return _bfbf ;};if _bfbf =_fbfa .readTemplate ();_bfbf !=nil {return _bfbf ;};if _bfbf =_fbfa .readIsMMREncoded ();_bfbf !=nil {return _bfbf ;};if _bfbf =_fbfa .readPatternWidthAndHeight ();_bfbf !=nil {return _bfbf ;};if _bfbf =_fbfa .readGrayMax ();_bfbf !=nil {return _bfbf ;};if _bfbf =_fbfa .computeSegmentDataStructure ();_bfbf !=nil {return _bfbf ;};return _fbfa .checkInput ();};var _ SegmentEncoder =&GenericRegion {};func (_aeb *TextRegion )InitEncode (globalSymbolsMap ,localSymbolsMap map[int ]int ,comps []int ,inLL *_cd .Points ,symbols *_cd .Bitmaps ,classIDs *_ac .IntSlice ,boxes *_cd .Boxes ,width ,height ,symbits int ){_aeb .RegionInfo =&RegionSegment {BitmapWidth :uint32 (width ),BitmapHeight :uint32 (height )};_aeb ._daba =globalSymbolsMap ;_aeb ._fbcd =localSymbolsMap ;_aeb ._decbc =comps ;_aeb ._ggabc =inLL ;_aeb ._eaffb =symbols ;_aeb ._cgbdc =classIDs ;_aeb ._bffd =boxes ;_aeb ._fabd =symbits ;};func (_ggecb *TextRegion )setContexts (_gebf *_db .DecoderStats ,_cebd *_db .DecoderStats ,_gggg *_db .DecoderStats ,_ebfde *_db .DecoderStats ,_geeea *_db .DecoderStats ,_ffeg *_db .DecoderStats ,_fbea *_db .DecoderStats ,_bcae *_db .DecoderStats ,_afaee *_db .DecoderStats ,_agecb *_db .DecoderStats ){_ggecb ._eedce =_cebd ;_ggecb ._cddf =_gggg ;_ggecb ._fggc =_ebfde ;_ggecb ._aagcc =_geeea ;_ggecb ._cfca =_fbea ;_ggecb ._bdfc =_bcae ;_ggecb ._fagdb =_ffeg ;_ggecb ._dffc =_afaee ;_ggecb ._geee =_agecb ;_ggecb ._bgf =_gebf ;};func (_fbgf *SymbolDictionary )decodeAggregate (_bacc ,_ddab uint32 )error {var (_geea int64 ;_ecec error ;);if _fbgf .IsHuffmanEncoded {_geea ,_ecec =_fbgf .huffDecodeRefAggNInst ();if _ecec !=nil {return _ecec ;};}else {_bafe ,_eadb :=_fbgf ._cedg .DecodeInt (_fbgf ._afaf );if _eadb !=nil {return _eadb ;};_geea =int64 (_bafe );};if _geea > 1{return _fbgf .decodeThroughTextRegion (_bacc ,_ddab ,uint32 (_geea ));}else if _geea ==1{return _fbgf .decodeRefinedSymbol (_bacc ,_ddab );};return nil ;};func (_ggfe *Header )writeFlags (_dbeg _aa .BinaryWriter )(_ecdcc error ){const _dfbf ="\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065F\u006c\u0061\u0067\u0073";_debg :=byte (_ggfe .Type );if _ecdcc =_dbeg .WriteByte (_debg );_ecdcc !=nil {return _gc .Wrap (_ecdcc ,_dfbf ,"\u0077\u0072\u0069ti\u006e\u0067\u0020\u0073\u0065\u0067\u006d\u0065\u006et\u0020t\u0079p\u0065 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064");};if !_ggfe .RetainFlag &&!_ggfe .PageAssociationFieldSize {return nil ;};if _ecdcc =_dbeg .SkipBits (-8);_ecdcc !=nil {return _gc .Wrap (_ecdcc ,_dfbf ,"\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0062\u0061\u0063\u006b\u0020\u0074\u0068\u0065\u0020\u0062\u0069\u0074\u0073\u0020\u0066\u0061il\u0065\u0064");};var _bgc int ;if _ggfe .RetainFlag {_bgc =1;};if _ecdcc =_dbeg .WriteBit (_bgc );_ecdcc !=nil {return _gc .Wrap (_ecdcc ,_dfbf ,"\u0072\u0065\u0074\u0061in\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067\u0073");};_bgc =0;if _ggfe .PageAssociationFieldSize {_bgc =1;};if _ecdcc =_dbeg .WriteBit (_bgc );_ecdcc !=nil {return _gc .Wrap (_ecdcc ,_dfbf ,"p\u0061\u0067\u0065\u0020as\u0073o\u0063\u0069\u0061\u0074\u0069o\u006e\u0020\u0066\u006c\u0061\u0067");};_dbeg .FinishByte ();return nil ;};func _dded (_fdbe _aa .StreamReader ,_bgbca *Header )*TextRegion {_ddfe :=&TextRegion {_cfcb :_fdbe ,Header :_bgbca ,RegionInfo :NewRegionSegment (_fdbe )};return _ddfe ;};func (_ede *GenericRegion )GetRegionInfo ()*RegionSegment {return _ede .RegionSegment };func (_ecfd *HalftoneRegion )checkInput ()error {if _ecfd .IsMMREncoded {if _ecfd .HTemplate !=0{_bc .Log .Debug ("\u0048\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030",_ecfd .HTemplate );};if _ecfd .HSkipEnabled {_bc .Log .Debug ("\u0048\u0053\u006b\u0069\u0070\u0045\u006e\u0061\u0062\u006c\u0065\u0064\u0020\u0030\u0020\u0025\u0076\u0020(\u0073\u0068\u006f\u0075\u006c\u0064\u0020c\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020v\u0061\u006c\u0075\u0065\u0020\u0066\u0061\u006c\u0073\u0065\u0029",_ecfd .HSkipEnabled );};};return nil ;};func (_bda *TextRegion )blit (_cfg *_cd .Bitmap ,_gbbb int64 )error {if _bda .IsTransposed ==0&&(_bda .ReferenceCorner ==2||_bda .ReferenceCorner ==3){_bda ._caae +=int64 (_cfg .Width -1);}else if _bda .IsTransposed ==1&&(_bda .ReferenceCorner ==0||_bda .ReferenceCorner ==2){_bda ._caae +=int64 (_cfg .Height -1);};_dba :=_bda ._caae ;if _bda .IsTransposed ==1{_dba ,_gbbb =_gbbb ,_dba ;};switch _bda .ReferenceCorner {case 0:_gbbb -=int64 (_cfg .Height -1);case 2:_gbbb -=int64 (_cfg .Height -1);_dba -=int64 (_cfg .Width -1);case 3:_dba -=int64 (_cfg .Width -1);};_gcbge :=_cd .Blit (_cfg ,_bda .RegionBitmap ,int (_dba ),int (_gbbb ),_bda .CombinationOperator );if _gcbge !=nil {return _gcbge ;};if _bda .IsTransposed ==0&&(_bda .ReferenceCorner ==0||_bda .ReferenceCorner ==1){_bda ._caae +=int64 (_cfg .Width -1);};if _bda .IsTransposed ==1&&(_bda .ReferenceCorner ==1||_bda .ReferenceCorner ==3){_bda ._caae +=int64 (_cfg .Height -1);};return nil ;};var (_gdge Segmenter ;_abfg =map[Type ]func ()Segmenter {TSymbolDictionary :func ()Segmenter {return &SymbolDictionary {}},TIntermediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateLosslessTextRegion :func ()Segmenter {return &TextRegion {}},TPatternDictionary :func ()Segmenter {return &PatternDictionary {}},TIntermediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateLosslessHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TIntermediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateLosslessGenericRegion :func ()Segmenter {return &GenericRegion {}},TIntermediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateLosslessGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TPageInformation :func ()Segmenter {return &PageInformationSegment {}},TEndOfPage :func ()Segmenter {return _gdge },TEndOfStrip :func ()Segmenter {return &EndOfStripe {}},TEndOfFile :func ()Segmenter {return _gdge },TProfiles :func ()Segmenter {return _gdge },TTables :func ()Segmenter {return &TableSegment {}},TExtension :func ()Segmenter {return _gdge },TBitmap :func ()Segmenter {return _gdge }};);func (_gabdga *SymbolDictionary )huffDecodeBmSize ()(int64 ,error ){if _gabdga ._fged ==nil {var (_bfe int ;_ebdg error ;);if _gabdga .SdHuffDecodeHeightSelection ==3{_bfe ++;};if _gabdga .SdHuffDecodeWidthSelection ==3{_bfe ++;};_gabdga ._fged ,_ebdg =_gabdga .getUserTable (_bfe );if _ebdg !=nil {return 0,_ebdg ;};};return _gabdga ._fged .Decode (_gabdga ._bcgf );};func (_dgcf *PageInformationSegment )readCombinationOperator ()error {_ebac ,_gfgbc :=_dgcf ._aecg .ReadBits (2);if _gfgbc !=nil {return _gfgbc ;};_dgcf ._eafg =_cd .CombinationOperator (int (_ebac ));return nil ;};func (_dadg *SymbolDictionary )decodeNewSymbols (_ffbf ,_defa uint32 ,_bbcb *_cd .Bitmap ,_adab ,_aecce int32 )error {if _dadg ._bbc ==nil {_dadg ._bbc =_eag (_dadg ._bcgf ,nil );if _dadg ._cedg ==nil {var _bgec error ;_dadg ._cedg ,_bgec =_db .New (_dadg ._bcgf );if _bgec !=nil {return _bgec ;};};if _dadg ._babd ==nil {_dadg ._babd =_db .NewStats (65536,1);};};_dadg ._bbc .setParameters (_dadg ._babd ,_dadg ._cedg ,_dadg .SdrTemplate ,_ffbf ,_defa ,_bbcb ,_adab ,_aecce ,false ,_dadg .SdrATX ,_dadg .SdrATY );return _dadg .addSymbol (_dadg ._bbc );};func (_accf *SymbolDictionary )addSymbol (_aef Regioner )error {_cca ,_cdga :=_aef .GetRegionBitmap ();if _cdga !=nil {return _cdga ;};_accf ._feba [_accf ._fecg ]=_cca ;_accf ._efeb =append (_accf ._efeb ,_cca );_bc .Log .Trace ("\u005b\u0053YM\u0042\u004f\u004c \u0044\u0049\u0043\u0054ION\u0041RY\u005d\u0020\u0041\u0064\u0064\u0065\u0064 s\u0079\u006d\u0062\u006f\u006c\u003a\u0020%\u0073",_cca );return nil ;};func (_cbfg *TableSegment )parseHeader ()error {var (_ceaec int ;_dccf uint64 ;_ceaa error ;);_ceaec ,_ceaa =_cbfg ._efge .ReadBit ();if _ceaa !=nil {return _ceaa ;};if _ceaec ==1{return _df .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0061\u0062\u006c\u0065 \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0064e\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u002e\u0020\u0042\u002e\u0032\u002e1\u0020\u0043\u006f\u0064\u0065\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0042\u0069\u0074\u0020\u0037\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u007a\u0065\u0072\u006f\u002e\u0020\u0057a\u0073\u003a \u0025\u0064",_ceaec );};if _dccf ,_ceaa =_cbfg ._efge .ReadBits (3);_ceaa !=nil {return _ceaa ;};_cbfg ._aecgd =(int32 (_dccf )+1)&0xf;if _dccf ,_ceaa =_cbfg ._efge .ReadBits (3);_ceaa !=nil {return _ceaa ;};_cbfg ._dfcd =(int32 (_dccf )+1)&0xf;if _dccf ,_ceaa =_cbfg ._efge .ReadBits (32);_ceaa !=nil {return _ceaa ;};_cbfg ._bbbcc =int32 (_dccf &_d .MaxInt32 );if _dccf ,_ceaa =_cbfg ._efge .ReadBits (32);_ceaa !=nil {return _ceaa ;};_cbfg ._edef =int32 (_dccf &_d .MaxInt32 );return nil ;};func (_cdcf *Header )pageSize ()uint {if _cdcf .PageAssociation <=255{return 1;};return 4;};func (_fdg *SymbolDictionary )setAtPixels ()error {if _fdg .IsHuffmanEncoded {return nil ;};_fgfg :=1;if _fdg .SdTemplate ==0{_fgfg =4;};if _gced :=_fdg .readAtPixels (_fgfg );_gced !=nil {return _gced ;};return nil ;};func (_acfb *PatternDictionary )readIsMMREncoded ()error {_gbfb ,_bgcd :=_acfb ._dea .ReadBit ();if _bgcd !=nil {return _bgcd ;};if _gbfb !=0{_acfb .IsMMREncoded =true ;};return nil ;};type SegmentEncoder interface{Encode (_bdbb _aa .BinaryWriter )(_dffb int ,_acfg error );};func (_cabd *TextRegion )decodeStripT ()(_gdgg int64 ,_gcac error ){if _cabd .IsHuffmanEncoded {if _cabd .SbHuffDT ==3{if _cabd ._cgec ==nil {var _cfcbf int ;if _cabd .SbHuffFS ==3{_cfcbf ++;};if _cabd .SbHuffDS ==3{_cfcbf ++;};_cabd ._cgec ,_gcac =_cabd .getUserTable (_cfcbf );if _gcac !=nil {return 0,_gcac ;};};_gdgg ,_gcac =_cabd ._cgec .Decode (_cabd ._cfcb );if _gcac !=nil {return 0,_gcac ;};}else {var _gdfa _ee .Tabler ;_gdfa ,_gcac =_ee .GetStandardTable (11+int (_cabd .SbHuffDT ));if _gcac !=nil {return 0,_gcac ;};_gdgg ,_gcac =_gdfa .Decode (_cabd ._cfcb );if _gcac !=nil {return 0,_gcac ;};};}else {var _abdd int32 ;_abdd ,_gcac =_cabd ._daca .DecodeInt (_cabd ._eedce );if _gcac !=nil {return 0,_gcac ;};_gdgg =int64 (_abdd );};_gdgg *=int64 (-_cabd .SbStrips );return _gdgg ,nil ;};func (_fabf *SymbolDictionary )decodeRefinedSymbol (_faca ,_eabf uint32 )error {var (_eacb int ;_ddff ,_gefc int32 ;);if _fabf .IsHuffmanEncoded {_afae ,_cagg :=_fabf ._bcgf .ReadBits (byte (_fabf ._bdef ));if _cagg !=nil {return _cagg ;};_eacb =int (_afae );_decge ,_cagg :=_ee .GetStandardTable (15);if _cagg !=nil {return _cagg ;};_fcb ,_cagg :=_decge .Decode (_fabf ._bcgf );if _cagg !=nil {return _cagg ;};_ddff =int32 (_fcb );_fcb ,_cagg =_decge .Decode (_fabf ._bcgf );if _cagg !=nil {return _cagg ;};_gefc =int32 (_fcb );_decge ,_cagg =_ee .GetStandardTable (1);if _cagg !=nil {return _cagg ;};if _ ,_cagg =_decge .Decode (_fabf ._bcgf );_cagg !=nil {return _cagg ;};_fabf ._bcgf .Align ();}else {_cdbf ,_aaabc :=_fabf ._cedg .DecodeIAID (uint64 (_fabf ._bdef ),_fabf ._agaea );if _aaabc !=nil {return _aaabc ;};_eacb =int (_cdbf );_ddff ,_aaabc =_fabf ._cedg .DecodeInt (_fabf ._fdc );if _aaabc !=nil {return _aaabc ;};_gefc ,_aaabc =_fabf ._cedg .DecodeInt (_fabf ._adggc );if _aaabc !=nil {return _aaabc ;};};if _bbga :=_fabf .setSymbolsArray ();_bbga !=nil {return _bbga ;};_effg :=_fabf ._efeb [_eacb ];if _bbdc :=_fabf .decodeNewSymbols (_faca ,_eabf ,_effg ,_ddff ,_gefc );_bbdc !=nil {return _bbdc ;};if _fabf .IsHuffmanEncoded {_fabf ._bcgf .Align ();};return nil ;};func (_deg *GenericRefinementRegion )readAtPixels ()error {_deg .GrAtX =make ([]int8 ,2);_deg .GrAtY =make ([]int8 ,2);_gfb ,_gef :=_deg ._bg .ReadByte ();if _gef !=nil {return _gef ;};_deg .GrAtX [0]=int8 (_gfb );_gfb ,_gef =_deg ._bg .ReadByte ();if _gef !=nil {return _gef ;};_deg .GrAtY [0]=int8 (_gfb );_gfb ,_gef =_deg ._bg .ReadByte ();if _gef !=nil {return _gef ;};_deg .GrAtX [1]=int8 (_gfb );_gfb ,_gef =_deg ._bg .ReadByte ();if _gef !=nil {return _gef ;};_deg .GrAtY [1]=int8 (_gfb );return nil ;};func (_gegc *HalftoneRegion )renderPattern (_fbacf [][]int )(_aged error ){var _agg ,_adfef int ;for _cafd :=0;_cafd < int (_gegc .HGridHeight );_cafd ++{for _bcfe :=0;_bcfe < int (_gegc .HGridWidth );_bcfe ++{_agg =_gegc .computeX (_cafd ,_bcfe );_adfef =_gegc .computeY (_cafd ,_bcfe );_gfg :=_gegc .Patterns [_fbacf [_cafd ][_bcfe ]];if _aged =_cd .Blit (_gfg ,_gegc .HalftoneRegionBitmap ,_agg +int (_gegc .HGridX ),_adfef +int (_gegc .HGridY ),_gegc .CombinationOperator );_aged !=nil {return _aged ;};};};return nil ;};func (_dbbd *Header )writeSegmentDataLength (_eebb _aa .BinaryWriter )(_bffa int ,_bed error ){_gfabc :=make ([]byte ,4);_e .BigEndian .PutUint32 (_gfabc ,uint32 (_dbbd .SegmentDataLength ));if _bffa ,_bed =_eebb .Write (_gfabc );_bed !=nil {return 0,_gc .Wrap (_bed ,"\u0048\u0065a\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u004c\u0065ng\u0074\u0068","");};return _bffa ,nil ;};func (_efga *SymbolDictionary )Init (h *Header ,r _aa .StreamReader )error {_efga .Header =h ;_efga ._bcgf =r ;return _efga .parseHeader ();};type SymbolDictionary struct{_bcgf _aa .StreamReader ;SdrTemplate int8 ;SdTemplate int8 ;_cged bool ;_gaead bool ;SdHuffAggInstanceSelection bool ;SdHuffBMSizeSelection int8 ;SdHuffDecodeWidthSelection int8 ;SdHuffDecodeHeightSelection int8 ;UseRefinementAggregation bool ;IsHuffmanEncoded bool ;SdATX []int8 ;SdATY []int8 ;SdrATX []int8 ;SdrATY []int8 ;NumberOfExportedSymbols uint32 ;NumberOfNewSymbols uint32 ;Header *Header ;_dcdf uint32 ;_ffbe []*_cd .Bitmap ;_fecg uint32 ;_feba []*_cd .Bitmap ;_cdgc _ee .Tabler ;_daac _ee .Tabler ;_fged _ee .Tabler ;_ddde _ee .Tabler ;_gec []*_cd .Bitmap ;_efeb []*_cd .Bitmap ;_cedg *_db .Decoder ;_afef *TextRegion ;_bccg *GenericRegion ;_bbc *GenericRefinementRegion ;_babd *_db .DecoderStats ;_cbcg *_db .DecoderStats ;_ded *_db .DecoderStats ;_afaf *_db .DecoderStats ;_ffea *_db .DecoderStats ;_fdc *_db .DecoderStats ;_adggc *_db .DecoderStats ;_baga *_db .DecoderStats ;_agaea *_db .DecoderStats ;_bdef int8 ;_bbcd *_cd .Bitmaps ;_dbca []int ;_bfag map[int ]int ;_dddf bool ;};func (_dcga *SymbolDictionary )Encode (w _aa .BinaryWriter )(_eedb int ,_gcbg error ){const _gbe ="\u0053\u0079\u006dbo\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0045\u006e\u0063\u006f\u0064\u0065";if _dcga ==nil {return 0,_gc .Error (_gbe ,"\u0073\u0079m\u0062\u006f\u006c\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066in\u0065\u0064");};if _eedb ,_gcbg =_dcga .encodeFlags (w );_gcbg !=nil {return _eedb ,_gc .Wrap (_gcbg ,_gbe ,"");};_cfae ,_gcbg :=_dcga .encodeATFlags (w );if _gcbg !=nil {return _eedb ,_gc .Wrap (_gcbg ,_gbe ,"");};_eedb +=_cfae ;if _cfae ,_gcbg =_dcga .encodeRefinementATFlags (w );_gcbg !=nil {return _eedb ,_gc .Wrap (_gcbg ,_gbe ,"");};_eedb +=_cfae ;if _cfae ,_gcbg =_dcga .encodeNumSyms (w );_gcbg !=nil {return _eedb ,_gc .Wrap (_gcbg ,_gbe ,"");};_eedb +=_cfae ;if _cfae ,_gcbg =_dcga .encodeSymbols (w );_gcbg !=nil {return _eedb ,_gc .Wrap (_gcbg ,_gbe ,"");};_eedb +=_cfae ;return _eedb ,nil ;};var (_ Regioner =&TextRegion {};_ Segmenter =&TextRegion {};);func (_dddb *TextRegion )readUseRefinement ()error {if !_dddb .UseRefinement ||_dddb .SbrTemplate !=0{return nil ;};var (_aecgdc byte ;_dcbef error ;);_dddb .SbrATX =make ([]int8 ,2);_dddb .SbrATY =make ([]int8 ,2);_aecgdc ,_dcbef =_dddb ._cfcb .ReadByte ();if _dcbef !=nil {return _dcbef ;};_dddb .SbrATX [0]=int8 (_aecgdc );_aecgdc ,_dcbef =_dddb ._cfcb .ReadByte ();if _dcbef !=nil {return _dcbef ;};_dddb .SbrATY [0]=int8 (_aecgdc );_aecgdc ,_dcbef =_dddb ._cfcb .ReadByte ();if _dcbef !=nil {return _dcbef ;};_dddb .SbrATX [1]=int8 (_aecgdc );_aecgdc ,_dcbef =_dddb ._cfcb .ReadByte ();if _dcbef !=nil {return _dcbef ;};_dddb .SbrATY [1]=int8 (_aecgdc );return nil ;};func (_cbae *GenericRefinementRegion )parseHeader ()(_ddac error ){_bc .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0048e\u0061\u0064e\u0072\u002e\u002e\u002e");_bba :=_g .Now ();defer func (){if _ddac ==nil {_bc .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045G\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020h\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0069\u006e\u0069\u0073\u0068id\u0020\u0069\u006e\u003a\u0020\u0025\u0064\u0020\u006e\u0073",_g .Since (_bba ).Nanoseconds ());}else {_bc .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0068\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0073",_ddac );};}();if _ddac =_cbae .RegionInfo .parseHeader ();_ddac !=nil {return _ddac ;};_ ,_ddac =_cbae ._bg .ReadBits (6);if _ddac !=nil {return _ddac ;};_cbae .IsTPGROn ,_ddac =_cbae ._bg .ReadBool ();if _ddac !=nil {return _ddac ;};var _ggf int ;_ggf ,_ddac =_cbae ._bg .ReadBit ();if _ddac !=nil {return _ddac ;};_cbae .TemplateID =int8 (_ggf );switch _cbae .TemplateID {case 0:_cbae .Template =_cbae ._de ;if _ddac =_cbae .readAtPixels ();_ddac !=nil {return ;};case 1:_cbae .Template =_cbae ._dda ;};return nil ;};func (_defac *TextRegion )getUserTable (_deeb int )(_ee .Tabler ,error ){const _adcb ="\u0067\u0065\u0074U\u0073\u0065\u0072\u0054\u0061\u0062\u006c\u0065";var _bgdc int ;for _ ,_adbd :=range _defac .Header .RTSegments {if _adbd .Type ==53{if _bgdc ==_deeb {_afgf ,_cfcbc :=_adbd .GetSegmentData ();if _cfcbc !=nil {return nil ,_cfcbc ;};_bced ,_bdde :=_afgf .(*TableSegment );if !_bdde {_bc .Log .Debug (_df .Sprintf ("\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079p\u0065\u00205\u0033\u0020\u002d\u0020\u0061\u006ed\u0020in\u0064\u0065\u0078\u003a\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_adbd .SegmentNumber ));return nil ,_gc .Error (_adcb ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079\u0070e\u0020\u0035\u0033\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u002a\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074");};return _ee .NewEncodedTable (_bced );};_bgdc ++;};};return nil ,nil ;};type Regioner interface{GetRegionBitmap ()(*_cd .Bitmap ,error );GetRegionInfo ()*RegionSegment ;};func (_ddcf *GenericRegion )readGBAtPixels (_ecca int )error {const _gdcb ="\u0072\u0065\u0061\u0064\u0047\u0042\u0041\u0074\u0050i\u0078\u0065\u006c\u0073";_ddcf .GBAtX =make ([]int8 ,_ecca );_ddcf .GBAtY =make ([]int8 ,_ecca );for _aeee :=0;_aeee < _ecca ;_aeee ++{_acae ,_fcd :=_ddcf ._bcb .ReadByte ();if _fcd !=nil {return _gc .Wrapf (_fcd ,_gdcb ,"\u0058\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_aeee );};_ddcf .GBAtX [_aeee ]=int8 (_acae );_acae ,_fcd =_ddcf ._bcb .ReadByte ();if _fcd !=nil {return _gc .Wrapf (_fcd ,_gdcb ,"\u0059\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_aeee );};_ddcf .GBAtY [_aeee ]=int8 (_acae );};return nil ;};func (_dcbbe *SymbolDictionary )encodeNumSyms (_dgag _aa .BinaryWriter )(_dffef int ,_ebbc error ){const _bcad ="\u0065\u006e\u0063\u006f\u0064\u0065\u004e\u0075\u006d\u0053\u0079\u006d\u0073";_aaab :=make ([]byte ,4);_e .BigEndian .PutUint32 (_aaab ,_dcbbe .NumberOfExportedSymbols );if _dffef ,_ebbc =_dgag .Write (_aaab );_ebbc !=nil {return _dffef ,_gc .Wrap (_ebbc ,_bcad ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};_e .BigEndian .PutUint32 (_aaab ,_dcbbe .NumberOfNewSymbols );_acaeg ,_ebbc :=_dgag .Write (_aaab );if _ebbc !=nil {return _dffef ,_gc .Wrap (_ebbc ,_bcad ,"n\u0065\u0077\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};return _dffef +_acaeg ,nil ;};func (_dcc *template0 )form (_ffa ,_bcdd ,_efe ,_ecc ,_acd int16 )int16 {return (_ffa <<10)|(_bcdd <<7)|(_efe <<4)|(_ecc <<1)|_acd ;};func (_gbgaf *SymbolDictionary )readRegionFlags ()error {var (_abga uint64 ;_aedb int ;);_ ,_cbdc :=_gbgaf ._bcgf .ReadBits (3);if _cbdc !=nil {return _cbdc ;};_aedb ,_cbdc =_gbgaf ._bcgf .ReadBit ();if _cbdc !=nil {return _cbdc ;};_gbgaf .SdrTemplate =int8 (_aedb );_abga ,_cbdc =_gbgaf ._bcgf .ReadBits (2);if _cbdc !=nil {return _cbdc ;};_gbgaf .SdTemplate =int8 (_abga &0xf);_aedb ,_cbdc =_gbgaf ._bcgf .ReadBit ();if _cbdc !=nil {return _cbdc ;};if _aedb ==1{_gbgaf ._cged =true ;};_aedb ,_cbdc =_gbgaf ._bcgf .ReadBit ();if _cbdc !=nil {return _cbdc ;};if _aedb ==1{_gbgaf ._gaead =true ;};_aedb ,_cbdc =_gbgaf ._bcgf .ReadBit ();if _cbdc !=nil {return _cbdc ;};if _aedb ==1{_gbgaf .SdHuffAggInstanceSelection =true ;};_aedb ,_cbdc =_gbgaf ._bcgf .ReadBit ();if _cbdc !=nil {return _cbdc ;};_gbgaf .SdHuffBMSizeSelection =int8 (_aedb );_abga ,_cbdc =_gbgaf ._bcgf .ReadBits (2);if _cbdc !=nil {return _cbdc ;};_gbgaf .SdHuffDecodeWidthSelection =int8 (_abga &0xf);_abga ,_cbdc =_gbgaf ._bcgf .ReadBits (2);if _cbdc !=nil {return _cbdc ;};_gbgaf .SdHuffDecodeHeightSelection =int8 (_abga &0xf);_aedb ,_cbdc =_gbgaf ._bcgf .ReadBit ();if _cbdc !=nil {return _cbdc ;};if _aedb ==1{_gbgaf .UseRefinementAggregation =true ;};_aedb ,_cbdc =_gbgaf ._bcgf .ReadBit ();if _cbdc !=nil {return _cbdc ;};if _aedb ==1{_gbgaf .IsHuffmanEncoded =true ;};return nil ;};func (_aegc *TextRegion )String ()string {_agd :=&_a .Builder {};_agd .WriteString ("\u000a[\u0054E\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u000a");_agd .WriteString (_aegc .RegionInfo .String ()+"\u000a");_agd .WriteString (_df .Sprintf ("\u0009\u002d\u0020\u0053br\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0025\u0076\u000a",_aegc .SbrTemplate ));_agd .WriteString (_df .Sprintf ("\u0009-\u0020S\u0062\u0064\u0073\u004f\u0066f\u0073\u0065t\u003a\u0020\u0025\u0076\u000a",_aegc .SbdsOffset ));_agd .WriteString (_df .Sprintf ("\t\u002d \u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0050i\u0078\u0065\u006c\u003a %\u0076\u000a",_aegc .DefaultPixel ));_agd .WriteString (_df .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0076\u000a",_aegc .CombinationOperator ));_agd .WriteString (_df .Sprintf ("\t\u002d \u0049\u0073\u0054\u0072\u0061\u006e\u0073\u0070o\u0073\u0065\u0064\u003a %\u0076\u000a",_aegc .IsTransposed ));_agd .WriteString (_df .Sprintf ("\u0009\u002d\u0020Re\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0043\u006f\u0072\u006e\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_aegc .ReferenceCorner ));_agd .WriteString (_df .Sprintf ("\t\u002d\u0020\u0055\u0073eR\u0065f\u0069\u006e\u0065\u006d\u0065n\u0074\u003a\u0020\u0025\u0076\u000a",_aegc .UseRefinement ));_agd .WriteString (_df .Sprintf ("\u0009-\u0020\u0049\u0073\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045n\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0076\u000a",_aegc .IsHuffmanEncoded ));if _aegc .IsHuffmanEncoded {_agd .WriteString (_df .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_aegc .SbHuffRSize ));_agd .WriteString (_df .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0059:\u0020\u0025\u0076\u000a",_aegc .SbHuffRDY ));_agd .WriteString (_df .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0058:\u0020\u0025\u0076\u000a",_aegc .SbHuffRDX ));_agd .WriteString (_df .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069\u0067\u0068\u0074\u003a\u0020\u0025v\u000a",_aegc .SbHuffRDHeight ));_agd .WriteString (_df .Sprintf ("\t\u002d\u0020\u0053\u0062Hu\u0066f\u0052\u0044\u0057\u0069\u0064t\u0068\u003a\u0020\u0025\u0076\u000a",_aegc .SbHuffRDWidth ));_agd .WriteString (_df .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0054\u003a\u0020\u0025\u0076\u000a",_aegc .SbHuffDT ));_agd .WriteString (_df .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0053\u003a\u0020\u0025\u0076\u000a",_aegc .SbHuffDS ));_agd .WriteString (_df .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0046\u0053\u003a\u0020\u0025\u0076\u000a",_aegc .SbHuffFS ));};_agd .WriteString (_df .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_aegc .SbrATX ));_agd .WriteString (_df .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0059:\u0020\u0025\u0076\u000a",_aegc .SbrATY ));_agd .WriteString (_df .Sprintf ("\u0009\u002d\u0020N\u0075\u006d\u0062\u0065r\u004f\u0066\u0053\u0079\u006d\u0062\u006fl\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_aegc .NumberOfSymbolInstances ));_agd .WriteString (_df .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_aegc .SbrATX ));return _agd .String ();};func (_dad *HalftoneRegion )computeX (_eacg ,_efed int )int {return _dad .shiftAndFill (int (_dad .HGridX )+_eacg *int (_dad .HRegionY )+_efed *int (_dad .HRegionX ));};func (_eccg *TextRegion )decodeRdx ()(int64 ,error ){const _egaa ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064x";if _eccg .IsHuffmanEncoded {if _eccg .SbHuffRDX ==3{if _eccg ._ddbe ==nil {var (_bcecg int ;_dcbff error ;);if _eccg .SbHuffFS ==3{_bcecg ++;};if _eccg .SbHuffDS ==3{_bcecg ++;};if _eccg .SbHuffDT ==3{_bcecg ++;};if _eccg .SbHuffRDWidth ==3{_bcecg ++;};if _eccg .SbHuffRDHeight ==3{_bcecg ++;};_eccg ._ddbe ,_dcbff =_eccg .getUserTable (_bcecg );if _dcbff !=nil {return 0,_gc .Wrap (_dcbff ,_egaa ,"");};};return _eccg ._ddbe .Decode (_eccg ._cfcb );};_dbbg ,_gcaca :=_ee .GetStandardTable (14+int (_eccg .SbHuffRDX ));if _gcaca !=nil {return 0,_gc .Wrap (_gcaca ,_egaa ,"");};return _dbbg .Decode (_eccg ._cfcb );};_dbae ,_adgab :=_eccg ._daca .DecodeInt (_eccg ._dffc );if _adgab !=nil {return 0,_gc .Wrap (_adgab ,_egaa ,"");};return int64 (_dbae ),nil ;};func (_bdcd *SymbolDictionary )setSymbolsArray ()error {if _bdcd ._ffbe ==nil {if _faga :=_bdcd .retrieveImportSymbols ();_faga !=nil {return _faga ;};};if _bdcd ._efeb ==nil {_bdcd ._efeb =append (_bdcd ._efeb ,_bdcd ._ffbe ...);};return nil ;};type GenericRefinementRegion struct{_de templater ;_dda templater ;_bg _aa .StreamReader ;_fb *Header ;RegionInfo *RegionSegment ;IsTPGROn bool ;TemplateID int8 ;Template templater ;GrAtX []int8 ;GrAtY []int8 ;RegionBitmap *_cd .Bitmap ;ReferenceBitmap *_cd .Bitmap ;ReferenceDX int32 ;ReferenceDY int32 ;_fbg *_db .Decoder ;_ab *_db .DecoderStats ;_fd bool ;_fe []bool ;};func (_fagc *TextRegion )computeSymbolCodeLength ()error {if _fagc .IsHuffmanEncoded {return _fagc .symbolIDCodeLengths ();};_fagc ._fgag =int8 (_d .Ceil (_d .Log (float64 (_fagc .NumberOfSymbols ))/_d .Log (2)));return nil ;};func (_decb *Header )readReferredToSegmentNumbers (_gfbb _aa .StreamReader ,_eaca int )([]int ,error ){const _edea ="\u0072\u0065\u0061\u0064R\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053e\u0067m\u0065\u006e\u0074\u004e\u0075\u006d\u0062e\u0072\u0073";_cade :=make ([]int ,_eaca );if _eaca > 0{_decb .RTSegments =make ([]*Header ,_eaca );var (_gabb uint64 ;_baf error ;);for _daeg :=0;_daeg < _eaca ;_daeg ++{_gabb ,_baf =_gfbb .ReadBits (byte (_decb .referenceSize ())<<3);if _baf !=nil {return nil ,_gc .Wrapf (_baf ,_edea ,"\u0027\u0025\u0064\u0027 \u0072\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0020\u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u0075\u006db\u0065\u0072",_daeg );};_cade [_daeg ]=int (_gabb &_d .MaxInt32 );};};return _cade ,nil ;};func (_cbddf *SymbolDictionary )decodeHeightClassDeltaHeight ()(int64 ,error ){if _cbddf .IsHuffmanEncoded {return _cbddf .decodeHeightClassDeltaHeightWithHuffman ();};_bacgg ,_aae :=_cbddf ._cedg .DecodeInt (_cbddf ._cbcg );if _aae !=nil {return 0,_aae ;};return int64 (_bacgg ),nil ;};type RegionSegment struct{_bdcg _aa .StreamReader ;BitmapWidth uint32 ;BitmapHeight uint32 ;XLocation uint32 ;YLocation uint32 ;CombinaionOperator _cd .CombinationOperator ;};func (_cdee *PatternDictionary )computeSegmentDataStructure ()error {_cdee .DataOffset =_cdee ._dea .StreamPosition ();_cdee .DataHeaderLength =_cdee .DataOffset -_cdee .DataHeaderOffset ;_cdee .DataLength =int64 (_cdee ._dea .Length ())-_cdee .DataHeaderLength ;return nil ;};func (_bgdf *Header )referenceSize ()uint {switch {case _bgdf .SegmentNumber <=255:return 1;case _bgdf .SegmentNumber <=65535:return 2;default:return 4;};};type PageInformationSegment struct{_aecg _aa .StreamReader ;PageBMHeight int ;PageBMWidth int ;ResolutionX int ;ResolutionY int ;_gcd bool ;_eafg _cd .CombinationOperator ;_bce bool ;_gda uint8 ;_eceb bool ;IsLossless bool ;IsStripe bool ;MaxStripeSize uint16 ;};func (_fagd *TableSegment )HtRS ()int32 {return _fagd ._aecgd };const (TSymbolDictionary Type =0;TIntermediateTextRegion Type =4;TImmediateTextRegion Type =6;TImmediateLosslessTextRegion Type =7;TPatternDictionary Type =16;TIntermediateHalftoneRegion Type =20;TImmediateHalftoneRegion Type =22;TImmediateLosslessHalftoneRegion Type =23;TIntermediateGenericRegion Type =36;TImmediateGenericRegion Type =38;TImmediateLosslessGenericRegion Type =39;TIntermediateGenericRefinementRegion Type =40;TImmediateGenericRefinementRegion Type =42;TImmediateLosslessGenericRefinementRegion Type =43;TPageInformation Type =48;TEndOfPage Type =49;TEndOfStrip Type =50;TEndOfFile Type =51;TProfiles Type =52;TTables Type =53;TExtension Type =62;TBitmap Type =70;);func (_dacf *GenericRegion )updateOverrideFlags ()error {const _eac ="\u0075\u0070\u0064\u0061te\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _dacf .GBAtX ==nil ||_dacf .GBAtY ==nil {return nil ;};if len (_dacf .GBAtX )!=len (_dacf .GBAtY ){return _gc .Errorf (_eac ,"i\u006eco\u0073i\u0073t\u0065\u006e\u0074\u0020\u0041T\u0020\u0070\u0069x\u0065\u006c\u002e\u0020\u0041m\u006f\u0075\u006et\u0020\u006f\u0066\u0020\u0027\u0078\u0027\u0020\u0070\u0069\u0078e\u006c\u0073\u003a %d\u002c\u0020\u0041\u006d\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0027\u0079\u0027\u0020\u0070\u0069\u0078e\u006cs\u003a\u0020\u0025\u0064",len (_dacf .GBAtX ),len (_dacf .GBAtY ));};_dacf .GBAtOverride =make ([]bool ,len (_dacf .GBAtX ));switch _dacf .GBTemplate {case 0:if !_dacf .UseExtTemplates {if _dacf .GBAtX [0]!=3||_dacf .GBAtY [0]!=-1{_dacf .setOverrideFlag (0);};if _dacf .GBAtX [1]!=-3||_dacf .GBAtY [1]!=-1{_dacf .setOverrideFlag (1);};if _dacf .GBAtX [2]!=2||_dacf .GBAtY [2]!=-2{_dacf .setOverrideFlag (2);};if _dacf .GBAtX [3]!=-2||_dacf .GBAtY [3]!=-2{_dacf .setOverrideFlag (3);};}else {if _dacf .GBAtX [0]!=-2||_dacf .GBAtY [0]!=0{_dacf .setOverrideFlag (0);};if _dacf .GBAtX [1]!=0||_dacf .GBAtY [1]!=-2{_dacf .setOverrideFlag (1);};if _dacf .GBAtX [2]!=-2||_dacf .GBAtY [2]!=-1{_dacf .setOverrideFlag (2);};if _dacf .GBAtX [3]!=-1||_dacf .GBAtY [3]!=-2{_dacf .setOverrideFlag (3);};if _dacf .GBAtX [4]!=1||_dacf .GBAtY [4]!=-2{_dacf .setOverrideFlag (4);};if _dacf .GBAtX [5]!=2||_dacf .GBAtY [5]!=-1{_dacf .setOverrideFlag (5);};if _dacf .GBAtX [6]!=-3||_dacf .GBAtY [6]!=0{_dacf .setOverrideFlag (6);};if _dacf .GBAtX [7]!=-4||_dacf .GBAtY [7]!=0{_dacf .setOverrideFlag (7);};if _dacf .GBAtX [8]!=2||_dacf .GBAtY [8]!=-2{_dacf .setOverrideFlag (8);};if _dacf .GBAtX [9]!=3||_dacf .GBAtY [9]!=-1{_dacf .setOverrideFlag (9);};if _dacf .GBAtX [10]!=-2||_dacf .GBAtY [10]!=-2{_dacf .setOverrideFlag (10);};if _dacf .GBAtX [11]!=-3||_dacf .GBAtY [11]!=-1{_dacf .setOverrideFlag (11);};};case 1:if _dacf .GBAtX [0]!=3||_dacf .GBAtY [0]!=-1{_dacf .setOverrideFlag (0);};case 2:if _dacf .GBAtX [0]!=2||_dacf .GBAtY [0]!=-1{_dacf .setOverrideFlag (0);};case 3:if _dacf .GBAtX [0]!=2||_dacf .GBAtY [0]!=-1{_dacf .setOverrideFlag (0);};};return nil ;};func (_decg *PageInformationSegment )readDefaultPixelValue ()error {_ccga ,_egf :=_decg ._aecg .ReadBit ();if _egf !=nil {return _egf ;};_decg ._gda =uint8 (_ccga &0xf);return nil ;};func (_ggead *RegionSegment )Size ()int {return 17};func (_feeg *TableSegment )Init (h *Header ,r _aa .StreamReader )error {_feeg ._efge =r ;return _feeg .parseHeader ();};func (_ef *GenericRefinementRegion )decodeTypicalPredictedLineTemplate0 (_dfg ,_ba ,_ag ,_dbd ,_bfa ,_acf ,_aga ,_dce ,_fec int )error {var (_geg ,_gfa ,_gg ,_fac ,_bcc ,_bee int ;_fbe byte ;_cg error ;);if _dfg > 0{_fbe ,_cg =_ef .RegionBitmap .GetByte (_aga -_ag );if _cg !=nil {return _cg ;};_gg =int (_fbe );};if _dce > 0&&_dce <=_ef .ReferenceBitmap .Height {_fbe ,_cg =_ef .ReferenceBitmap .GetByte (_fec -_dbd +_acf );if _cg !=nil {return _cg ;};_fac =int (_fbe )<<4;};if _dce >=0&&_dce < _ef .ReferenceBitmap .Height {_fbe ,_cg =_ef .ReferenceBitmap .GetByte (_fec +_acf );if _cg !=nil {return _cg ;};_bcc =int (_fbe )<<1;};if _dce > -2&&_dce < _ef .ReferenceBitmap .Height -1{_fbe ,_cg =_ef .ReferenceBitmap .GetByte (_fec +_dbd +_acf );if _cg !=nil {return _cg ;};_bee =int (_fbe );};_geg =((_gg >>5)&0x6)|((_bee >>2)&0x30)|(_bcc &0x180)|(_fac &0xc00);var _beeb int ;for _cae :=0;_cae < _bfa ;_cae =_beeb {var _bdc int ;_beeb =_cae +8;var _gae int ;if _gae =_ba -_cae ;_gae > 8{_gae =8;};_ceba :=_beeb < _ba ;_bgga :=_beeb < _ef .ReferenceBitmap .Width ;_gcc :=_acf +1;if _dfg > 0{_fbe =0;if _ceba {_fbe ,_cg =_ef .RegionBitmap .GetByte (_aga -_ag +1);if _cg !=nil {return _cg ;};};_gg =(_gg <<8)|int (_fbe );};if _dce > 0&&_dce <=_ef .ReferenceBitmap .Height {var _fag int ;if _bgga {_fbe ,_cg =_ef .ReferenceBitmap .GetByte (_fec -_dbd +_gcc );if _cg !=nil {return _cg ;};_fag =int (_fbe )<<4;};_fac =(_fac <<8)|_fag ;};if _dce >=0&&_dce < _ef .ReferenceBitmap .Height {var _cb int ;if _bgga {_fbe ,_cg =_ef .ReferenceBitmap .GetByte (_fec +_gcc );if _cg !=nil {return _cg ;};_cb =int (_fbe )<<1;};_bcc =(_bcc <<8)|_cb ;};if _dce > -2&&_dce < (_ef .ReferenceBitmap .Height -1){_fbe =0;if _bgga {_fbe ,_cg =_ef .ReferenceBitmap .GetByte (_fec +_dbd +_gcc );if _cg !=nil {return _cg ;};};_bee =(_bee <<8)|int (_fbe );};for _adc :=0;_adc < _gae ;_adc ++{var _gaea int ;_agf :=false ;_bef :=(_geg >>4)&0x1ff;if _bef ==0x1ff{_agf =true ;_gaea =1;}else if _bef ==0x00{_agf =true ;};if !_agf {if _ef ._fd {_gfa =_ef .overrideAtTemplate0 (_geg ,_cae +_adc ,_dfg ,_bdc ,_adc );_ef ._ab .SetIndex (int32 (_gfa ));}else {_ef ._ab .SetIndex (int32 (_geg ));};_gaea ,_cg =_ef ._fbg .DecodeBit (_ef ._ab );if _cg !=nil {return _cg ;};};_fdb :=uint (7-_adc );_bdc |=int (_gaea <<_fdb );_geg =((_geg &0xdb6)<<1)|_gaea |(_gg >>_fdb +5)&0x002|((_bee >>_fdb +2)&0x010)|((_bcc >>_fdb )&0x080)|((_fac >>_fdb )&0x400);};_cg =_ef .RegionBitmap .SetByte (_aga ,byte (_bdc ));if _cg !=nil {return _cg ;};_aga ++;_fec ++;};return nil ;};func (_edeg *PageInformationSegment )readMaxStripeSize ()error {_bfda ,_cbad :=_edeg ._aecg .ReadBits (15);if _cbad !=nil {return _cbad ;};_edeg .MaxStripeSize =uint16 (_bfda &_d .MaxUint16 );return nil ;};func (_bcdaa *TextRegion )decodeSymbolInstances ()error {_gcfe ,_gefe :=_bcdaa .decodeStripT ();if _gefe !=nil {return _gefe ;};var (_baee int64 ;_cfdcb uint32 ;);for _cfdcb < _bcdaa .NumberOfSymbolInstances {_gffe ,_bgece :=_bcdaa .decodeDT ();if _bgece !=nil {return _bgece ;};_gcfe +=_gffe ;var _agfg int64 ;_bdab :=true ;_bcdaa ._caae =0;for {if _bdab {_agfg ,_bgece =_bcdaa .decodeDfs ();if _bgece !=nil {return _bgece ;};_baee +=_agfg ;_bcdaa ._caae =_baee ;_bdab =false ;}else {_gcee ,_eae :=_bcdaa .decodeIds ();if _eae !=nil {return _eae ;};if _gcee ==_d .MaxInt32 ||_cfdcb >=_bcdaa .NumberOfSymbolInstances {break ;};_bcdaa ._caae +=_gcee +int64 (_bcdaa .SbdsOffset );};_gbcb ,_geaa :=_bcdaa .decodeCurrentT ();if _geaa !=nil {return _geaa ;};_edcd :=_gcfe +_gbcb ;_ddaf ,_geaa :=_bcdaa .decodeID ();if _geaa !=nil {return _geaa ;};_eaee ,_geaa :=_bcdaa .decodeRI ();if _geaa !=nil {return _geaa ;};_fcdg ,_geaa :=_bcdaa .decodeIb (_eaee ,_ddaf );if _geaa !=nil {return _geaa ;};if _geaa =_bcdaa .blit (_fcdg ,_edcd );_geaa !=nil {return _geaa ;};_cfdcb ++;};};return nil ;};func (_eedc *PageInformationSegment )readResolution ()error {_ffcc ,_aecc :=_eedc ._aecg .ReadBits (32);if _aecc !=nil {return _aecc ;};_eedc .ResolutionX =int (_ffcc &_d .MaxInt32 );_ffcc ,_aecc =_eedc ._aecg .ReadBits (32);if _aecc !=nil {return _aecc ;};_eedc .ResolutionY =int (_ffcc &_d .MaxInt32 );return nil ;};func (_ceef *RegionSegment )parseHeader ()error {const _gbfd ="p\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_bc .Log .Trace ("\u005b\u0052\u0045\u0047I\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002dH\u0045A\u0044\u0045\u0052\u005d\u0020\u0042\u0065g\u0069\u006e");defer func (){_bc .Log .Trace ("\u005b\u0052\u0045G\u0049\u004f\u004e\u005d[\u0050\u0041\u0052\u0053\u0045\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");}();_ggaf ,_bca :=_ceef ._bdcg .ReadBits (32);if _bca !=nil {return _gc .Wrap (_bca ,_gbfd ,"\u0077\u0069\u0064t\u0068");};_ceef .BitmapWidth =uint32 (_ggaf &_d .MaxUint32 );_ggaf ,_bca =_ceef ._bdcg .ReadBits (32);if _bca !=nil {return _gc .Wrap (_bca ,_gbfd ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_ceef .BitmapHeight =uint32 (_ggaf &_d .MaxUint32 );_ggaf ,_bca =_ceef ._bdcg .ReadBits (32);if _bca !=nil {return _gc .Wrap (_bca ,_gbfd ,"\u0078\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_ceef .XLocation =uint32 (_ggaf &_d .MaxUint32 );_ggaf ,_bca =_ceef ._bdcg .ReadBits (32);if _bca !=nil {return _gc .Wrap (_bca ,_gbfd ,"\u0079\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_ceef .YLocation =uint32 (_ggaf &_d .MaxUint32 );if _ ,_bca =_ceef ._bdcg .ReadBits (5);_bca !=nil {return _gc .Wrap (_bca ,_gbfd ,"\u0064i\u0072\u0079\u0020\u0072\u0065\u0061d");};if _bca =_ceef .readCombinationOperator ();_bca !=nil {return _gc .Wrap (_bca ,_gbfd ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};return nil ;};func (_gbdd *Header )readSegmentDataLength (_cbfd _aa .StreamReader )(_gdfg error ){_gbdd .SegmentDataLength ,_gdfg =_cbfd .ReadBits (32);if _gdfg !=nil {return _gdfg ;};_gbdd .SegmentDataLength &=_d .MaxInt32 ;return nil ;};const BorderSize =6;func (_deff Type )String ()string {switch _deff {case TSymbolDictionary :return "\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079";case TIntermediateTextRegion :return "\u0049n\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020T\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateTextRegion :return "I\u006d\u006d\u0065\u0064ia\u0074e\u0020\u0054\u0065\u0078\u0074 \u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessTextRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020L\u006f\u0073\u0073\u006c\u0065\u0073\u0073 \u0054\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TPatternDictionary :return "\u0050a\u0074t\u0065\u0072\u006e\u0020\u0044i\u0063\u0074i\u006f\u006e\u0061\u0072\u0079";case TIntermediateHalftoneRegion :return "\u0049\u006e\u0074\u0065r\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0048\u0061l\u0066t\u006f\u006e\u0065\u0020\u0052\u0065\u0067i\u006f\u006e";case TImmediateHalftoneRegion :return "\u0049m\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u0048\u0061l\u0066t\u006fn\u0065\u0020\u0052\u0065\u0067\u0069\u006fn";case TImmediateLosslessHalftoneRegion :return "\u0049\u006d\u006ded\u0069\u0061\u0074\u0065\u0020\u004c\u006f\u0073\u0073l\u0065s\u0073 \u0048a\u006c\u0066\u0074\u006f\u006e\u0065\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TIntermediateGenericRegion :return "I\u006e\u0074\u0065\u0072\u006d\u0065d\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020R\u0065g\u0069\u006f\u006e";case TImmediateGenericRegion :return "\u0049m\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006ee\u0072\u0069\u0063\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessGenericRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u004c\u006f\u0073\u0073\u006c\u0065\u0073\u0073\u0020\u0047e\u006e\u0065\u0072\u0069\u0063\u0020\u0052e\u0067\u0069\u006f\u006e";case TIntermediateGenericRefinementRegion :return "\u0049\u006e\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0020\u0052\u0065\u0066i\u006e\u0065\u006d\u0065\u006et\u0020\u0052e\u0067\u0069\u006f\u006e";case TImmediateGenericRefinementRegion :return "I\u006d\u006d\u0065\u0064\u0069\u0061t\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020\u0052\u0065\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020\u0052\u0065\u0067\u0069o\u006e";case TImmediateLosslessGenericRefinementRegion :return "\u0049m\u006d\u0065d\u0069\u0061\u0074\u0065 \u004c\u006f\u0073s\u006c\u0065\u0073\u0073\u0020\u0047\u0065\u006e\u0065ri\u0063\u0020\u0052e\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020R\u0065\u0067i\u006f\u006e";case TPageInformation :return "\u0050\u0061g\u0065\u0020\u0049n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e";case TEndOfPage :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0050\u0061\u0067\u0065";case TEndOfStrip :return "\u0045\u006e\u0064 \u004f\u0066\u0020\u0053\u0074\u0072\u0069\u0070";case TEndOfFile :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0046\u0069\u006c\u0065";case TProfiles :return "\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0073";case TTables :return "\u0054\u0061\u0062\u006c\u0065\u0073";case TExtension :return "\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn";case TBitmap :return "\u0042\u0069\u0074\u006d\u0061\u0070";};return "I\u006ev\u0061\u006c\u0069\u0064\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0020Ki\u006e\u0064";};func (_gccgg *TextRegion )encodeFlags (_bcbab _aa .BinaryWriter )(_defc int ,_bbcdf error ){const _dbcab ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _bbcdf =_bcbab .WriteBit (int (_gccgg .SbrTemplate ));_bbcdf !=nil {return _defc ,_gc .Wrap (_bbcdf ,_dbcab ,"s\u0062\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};if _ ,_bbcdf =_bcbab .WriteBits (uint64 (_gccgg .SbdsOffset ),5);_bbcdf !=nil {return _defc ,_gc .Wrap (_bbcdf ,_dbcab ,"\u0073\u0062\u0064\u0073\u004f\u0066\u0066\u0073\u0065\u0074");};if _bbcdf =_bcbab .WriteBit (int (_gccgg .DefaultPixel ));_bbcdf !=nil {return _defc ,_gc .Wrap (_bbcdf ,_dbcab ,"\u0044\u0065\u0066a\u0075\u006c\u0074\u0050\u0069\u0078\u0065\u006c");};if _ ,_bbcdf =_bcbab .WriteBits (uint64 (_gccgg .CombinationOperator ),2);_bbcdf !=nil {return _defc ,_gc .Wrap (_bbcdf ,_dbcab ,"\u0043\u006f\u006d\u0062in\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072");};if _bbcdf =_bcbab .WriteBit (int (_gccgg .IsTransposed ));_bbcdf !=nil {return _defc ,_gc .Wrap (_bbcdf ,_dbcab ,"\u0069\u0073\u0020\u0074\u0072\u0061\u006e\u0073\u0070\u006f\u0073\u0065\u0064");};if _ ,_bbcdf =_bcbab .WriteBits (uint64 (_gccgg .ReferenceCorner ),2);_bbcdf !=nil {return _defc ,_gc .Wrap (_bbcdf ,_dbcab ,"\u0072\u0065f\u0065\u0072\u0065n\u0063\u0065\u0020\u0063\u006f\u0072\u006e\u0065\u0072");};if _ ,_bbcdf =_bcbab .WriteBits (uint64 (_gccgg .LogSBStrips ),2);_bbcdf !=nil {return _defc ,_gc .Wrap (_bbcdf ,_dbcab ,"L\u006f\u0067\u0053\u0042\u0053\u0074\u0072\u0069\u0070\u0073");};var _fdbbc int ;if _gccgg .UseRefinement {_fdbbc =1;};if _bbcdf =_bcbab .WriteBit (_fdbbc );_bbcdf !=nil {return _defc ,_gc .Wrap (_bbcdf ,_dbcab ,"\u0075\u0073\u0065\u0020\u0072\u0065\u0066\u0069\u006ee\u006d\u0065\u006e\u0074");};_fdbbc =0;if _gccgg .IsHuffmanEncoded {_fdbbc =1;};if _bbcdf =_bcbab .WriteBit (_fdbbc );_bbcdf !=nil {return _defc ,_gc .Wrap (_bbcdf ,_dbcab ,"u\u0073\u0065\u0020\u0068\u0075\u0066\u0066\u006d\u0061\u006e");};_defc =2;return _defc ,nil ;};func (_ecbd *TextRegion )setParameters (_defdc *_db .Decoder ,_edeb ,_abbd bool ,_aaeef ,_fcgd uint32 ,_egfa uint32 ,_cfec int8 ,_aafb uint32 ,_gabae int8 ,_baef _cd .CombinationOperator ,_egdg int8 ,_aaeb int16 ,_fbcda ,_abega ,_acbc ,_abgc ,_dfdf ,_bcbdd ,_ggfd ,_gfbd ,_eabca ,_fggf int8 ,_dbbgc ,_cbe []int8 ,_ggdbd []*_cd .Bitmap ,_eafe int8 ){_ecbd ._daca =_defdc ;_ecbd .IsHuffmanEncoded =_edeb ;_ecbd .UseRefinement =_abbd ;_ecbd .RegionInfo .BitmapWidth =_aaeef ;_ecbd .RegionInfo .BitmapHeight =_fcgd ;_ecbd .NumberOfSymbolInstances =_egfa ;_ecbd .SbStrips =_cfec ;_ecbd .NumberOfSymbols =_aafb ;_ecbd .DefaultPixel =_gabae ;_ecbd .CombinationOperator =_baef ;_ecbd .IsTransposed =_egdg ;_ecbd .ReferenceCorner =_aaeb ;_ecbd .SbdsOffset =_fbcda ;_ecbd .SbHuffFS =_abega ;_ecbd .SbHuffDS =_acbc ;_ecbd .SbHuffDT =_abgc ;_ecbd .SbHuffRDWidth =_dfdf ;_ecbd .SbHuffRDHeight =_bcbdd ;_ecbd .SbHuffRDX =_ggfd ;_ecbd .SbHuffRDY =_gfbd ;_ecbd .SbrTemplate =_fggf ;_ecbd .SbrATX =_dbbgc ;_ecbd .SbrATY =_cbe ;_ecbd .Symbols =_ggdbd ;_ecbd ._fgag =_eafe ;};func (_cdgf *Header )GetSegmentData ()(Segmenter ,error ){var _gcgb Segmenter ;if _cdgf .SegmentData !=nil {_gcgb =_cdgf .SegmentData ;};if _gcgb ==nil {_afd ,_ffd :=_abfg [_cdgf .Type ];if !_ffd {return nil ,_df .Errorf ("\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0073\u002f\u0020\u0025\u0064\u0020\u0063\u0072e\u0061t\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e\u0020",_cdgf .Type ,_cdgf .Type );};_gcgb =_afd ();_bc .Log .Trace ("\u005b\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u0020\u0061\u0074\u0020\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0030\u0034\u0058",_cdgf .SegmentNumber ,_cdgf .SegmentDataStartOffset );_fab ,_ddd :=_cdgf .subInputReader ();if _ddd !=nil {return nil ,_ddd ;};if _faab :=_gcgb .Init (_cdgf ,_fab );_faab !=nil {_bc .Log .Debug ("\u0049\u006e\u0069\u0074 \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076 \u0066o\u0072\u0020\u0074\u0079\u0070\u0065\u003a \u0025\u0054",_faab ,_gcgb );return nil ,_faab ;};_cdgf .SegmentData =_gcgb ;};return _gcgb ,nil ;};func (_eaef *TextRegion )decodeRdh ()(int64 ,error ){const _gace ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064h";if _eaef .IsHuffmanEncoded {if _eaef .SbHuffRDHeight ==3{if _eaef ._fgcb ==nil {var (_gega int ;_fdbd error ;);if _eaef .SbHuffFS ==3{_gega ++;};if _eaef .SbHuffDS ==3{_gega ++;};if _eaef .SbHuffDT ==3{_gega ++;};if _eaef .SbHuffRDWidth ==3{_gega ++;};_eaef ._fgcb ,_fdbd =_eaef .getUserTable (_gega );if _fdbd !=nil {return 0,_gc .Wrap (_fdbd ,_gace ,"");};};return _eaef ._fgcb .Decode (_eaef ._cfcb );};_adffb ,_eaec :=_ee .GetStandardTable (14+int (_eaef .SbHuffRDHeight ));if _eaec !=nil {return 0,_gc .Wrap (_eaec ,_gace ,"");};return _adffb .Decode (_eaef ._cfcb );};_fgff ,_gggc :=_eaef ._daca .DecodeInt (_eaef ._bdfc );if _gggc !=nil {return 0,_gc .Wrap (_gggc ,_gace ,"");};return int64 (_fgff ),nil ;};func (_cbbb *Header )readSegmentPageAssociation (_faff Documenter ,_afdf _aa .StreamReader ,_efg uint64 ,_baff ...int )(_gcbc error ){const _cffgb ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074P\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061t\u0069\u006f\u006e";if !_cbbb .PageAssociationFieldSize {_dfda ,_effc :=_afdf .ReadBits (8);if _effc !=nil {return _gc .Wrap (_effc ,_cffgb ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_cbbb .PageAssociation =int (_dfda &0xFF);}else {_afcb ,_bde :=_afdf .ReadBits (32);if _bde !=nil {return _gc .Wrap (_bde ,_cffgb ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_cbbb .PageAssociation =int (_afcb &_d .MaxInt32 );};if _efg ==0{return nil ;};if _cbbb .PageAssociation !=0{_aaba ,_bdca :=_faff .GetPage (_cbbb .PageAssociation );if _bdca !=nil {return _gc .Wrap (_bdca ,_cffgb ,"\u0061s\u0073\u006f\u0063\u0069a\u0074\u0065\u0064\u0020\u0070a\u0067e\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006ed");};var _gegce int ;for _beb :=uint64 (0);_beb < _efg ;_beb ++{_gegce =_baff [_beb ];_cbbb .RTSegments [_beb ],_bdca =_aaba .GetSegment (_gegce );if _bdca !=nil {var _dab error ;_cbbb .RTSegments [_beb ],_dab =_faff .GetGlobalSegment (_gegce );if _dab !=nil {return _gc .Wrapf (_bdca ,_cffgb ,"\u0072\u0065\u0066\u0065\u0072\u0065n\u0063\u0065\u0020s\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064\u0020\u0061\u0074\u0020pa\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0072\u0020\u0069\u006e\u0020\u0067\u006c\u006f\u0062\u0061\u006c\u0073",_cbbb .PageAssociation );};};};return nil ;};for _ggb :=uint64 (0);_ggb < _efg ;_ggb ++{_cbbb .RTSegments [_ggb ],_gcbc =_faff .GetGlobalSegment (_baff [_ggb ]);if _gcbc !=nil {return _gc .Wrapf (_gcbc ,_cffgb ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u003a\u0020\u0027\u0025d\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064",_baff [_ggb ]);};};return nil ;};func (_aea *PageInformationSegment )readRequiresAuxiliaryBuffer ()error {_gedd ,_fafd :=_aea ._aecg .ReadBit ();if _fafd !=nil {return _fafd ;};if _gedd ==1{_aea ._bce =true ;};return nil ;};func (_afbcd *TextRegion )readAmountOfSymbolInstances ()error {_ebca ,_abag :=_afbcd ._cfcb .ReadBits (32);if _abag !=nil {return _abag ;};_afbcd .NumberOfSymbolInstances =uint32 (_ebca &_d .MaxUint32 );_ebdc :=_afbcd .RegionInfo .BitmapWidth *_afbcd .RegionInfo .BitmapHeight ;if _ebdc < _afbcd .NumberOfSymbolInstances {_bc .Log .Debug ("\u004c\u0069\u006d\u0069t\u0069\u006e\u0067\u0020t\u0068\u0065\u0020n\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020d\u0065\u0063\u006f\u0064e\u0064\u0020\u0073\u0079m\u0062\u006f\u006c\u0020\u0069n\u0073\u0074\u0061\u006e\u0063\u0065\u0073 \u0074\u006f\u0020\u006f\u006ee\u0020\u0070\u0065\u0072\u0020\u0070\u0069\u0078\u0065l\u0020\u0028\u0020\u0025\u0064\u0020\u0069\u006e\u0073\u0074\u0065\u0061\u0064\u0020\u006f\u0066\u0020\u0025\u0064\u0029",_ebdc ,_afbcd .NumberOfSymbolInstances );_afbcd .NumberOfSymbolInstances =_ebdc ;};return nil ;};func (_bceg *SymbolDictionary )getToExportFlags ()([]int ,error ){var (_dbda int ;_ffcf int32 ;_facgf error ;_cfeee =int32 (_bceg ._dcdf +_bceg .NumberOfNewSymbols );_cffb =make ([]int ,_cfeee ););for _befd :=int32 (0);_befd < _cfeee ;_befd +=_ffcf {if _bceg .IsHuffmanEncoded {_fffa ,_dgec :=_ee .GetStandardTable (1);if _dgec !=nil {return nil ,_dgec ;};_egdc ,_dgec :=_fffa .Decode (_bceg ._bcgf );if _dgec !=nil {return nil ,_dgec ;};_ffcf =int32 (_egdc );}else {_ffcf ,_facgf =_bceg ._cedg .DecodeInt (_bceg ._ffea );if _facgf !=nil {return nil ,_facgf ;};};if _ffcf !=0{for _bfdg :=_befd ;_bfdg < _befd +_ffcf ;_bfdg ++{_cffb [_bfdg ]=_dbda ;};};if _dbda ==0{_dbda =1;}else {_dbda =0;};};return _cffb ,nil ;};func (_cdgfg *Header )readHeaderFlags ()error {const _cabb ="\u0072e\u0061d\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006c\u0061\u0067\u0073";_aeedd ,_adbb :=_cdgfg .Reader .ReadBit ();if _adbb !=nil {return _gc .Wrap (_adbb ,_cabb ,"r\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067");};if _aeedd !=0{_cdgfg .RetainFlag =true ;};_aeedd ,_adbb =_cdgfg .Reader .ReadBit ();if _adbb !=nil {return _gc .Wrap (_adbb ,_cabb ,"\u0070\u0061g\u0065\u0020\u0061s\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e");};if _aeedd !=0{_cdgfg .PageAssociationFieldSize =true ;};_eagc ,_adbb :=_cdgfg .Reader .ReadBits (6);if _adbb !=nil {return _gc .Wrap (_adbb ,_cabb ,"\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065");};_cdgfg .Type =Type (int (_eagc ));return nil ;};func (_ebf *GenericRegion )GetRegionBitmap ()(_bfb *_cd .Bitmap ,_agaa error ){if _ebf .Bitmap !=nil {return _ebf .Bitmap ,nil ;};if _ebf .IsMMREncoded {if _ebf ._eeb ==nil {_ebf ._eeb ,_agaa =_dd .New (_ebf ._bcb ,int (_ebf .RegionSegment .BitmapWidth ),int (_ebf .RegionSegment .BitmapHeight ),_ebf .DataOffset ,_ebf .DataLength );if _agaa !=nil {return nil ,_agaa ;};};_ebf .Bitmap ,_agaa =_ebf ._eeb .UncompressMMR ();return _ebf .Bitmap ,_agaa ;};if _agaa =_ebf .updateOverrideFlags ();_agaa !=nil {return nil ,_agaa ;};var _efa int ;if _ebf ._dfgc ==nil {_ebf ._dfgc ,_agaa =_db .New (_ebf ._bcb );if _agaa !=nil {return nil ,_agaa ;};};if _ebf ._cfa ==nil {_ebf ._cfa =_db .NewStats (65536,1);};_ebf .Bitmap =_cd .New (int (_ebf .RegionSegment .BitmapWidth ),int (_ebf .RegionSegment .BitmapHeight ));_ebcd :=int (uint32 (_ebf .Bitmap .Width +7)&(^uint32 (7)));for _ebae :=0;_ebae < _ebf .Bitmap .Height ;_ebae ++{if _ebf .IsTPGDon {var _gge int ;_gge ,_agaa =_ebf .decodeSLTP ();if _agaa !=nil {return nil ,_agaa ;};_efa ^=_gge ;};if _efa ==1{if _ebae > 0{if _agaa =_ebf .copyLineAbove (_ebae );_agaa !=nil {return nil ,_agaa ;};};}else {if _agaa =_ebf .decodeLine (_ebae ,_ebf .Bitmap .Width ,_ebcd );_agaa !=nil {return nil ,_agaa ;};};};return _ebf .Bitmap ,nil ;};func (_gdef *GenericRefinementRegion )getPixel (_aab *_cd .Bitmap ,_ea ,_cef int )int {if _ea < 0||_ea >=_aab .Width {return 0;};if _cef < 0||_cef >=_aab .Height {return 0;};if _aab .GetPixel (_ea ,_cef ){return 1;};return 0;};var _ templater =&template1 {};type EndOfStripe struct{_ad _aa .StreamReader ;_dff int ;};func (_edce *SymbolDictionary )getSymbol (_egef int )(*_cd .Bitmap ,error ){const _dgbd ="\u0067e\u0074\u0053\u0079\u006d\u0062\u006fl";_acca ,_cffgc :=_edce ._bbcd .GetBitmap (_edce ._dbca [_egef ]);if _cffgc !=nil {return nil ,_gc .Wrap (_cffgc ,_dgbd ,"\u0063\u0061n\u0027\u0074\u0020g\u0065\u0074\u0020\u0073\u0079\u006d\u0062\u006f\u006c");};return _acca ,nil ;};func (_fca *GenericRegion )InitEncode (bm *_cd .Bitmap ,xLoc ,yLoc ,template int ,duplicateLineRemoval bool )error {const _fbac ="\u0047e\u006e\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069\u006f\u006e.\u0049\u006e\u0069\u0074\u0045\u006e\u0063\u006f\u0064\u0065";if bm ==nil {return _gc .Error (_fbac ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if xLoc < 0||yLoc < 0{return _gc .Error (_fbac ,"\u0078\u0020\u0061\u006e\u0064\u0020\u0079\u0020\u006c\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074h\u0061\u006e\u0020\u0030");};_fca .Bitmap =bm ;_fca .GBTemplate =byte (template );switch _fca .GBTemplate {case 0:_fca .GBAtX =[]int8 {3,-3,2,-2};_fca .GBAtY =[]int8 {-1,-1,-2,-2};case 1:_fca .GBAtX =[]int8 {3};_fca .GBAtY =[]int8 {-1};case 2,3:_fca .GBAtX =[]int8 {2};_fca .GBAtY =[]int8 {-1};default:return _gc .Errorf (_fbac ,"\u0070\u0072o\u0076\u0069\u0064\u0065\u0064 \u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u007b\u0030\u002c\u0031\u002c\u0032\u002c\u0033\u007d",template );};_fca .RegionSegment =&RegionSegment {BitmapHeight :uint32 (bm .Height ),BitmapWidth :uint32 (bm .Width ),XLocation :uint32 (xLoc ),YLocation :uint32 (yLoc )};_fca .IsTPGDon =duplicateLineRemoval ;return nil ;};type TextRegion struct{_cfcb _aa .StreamReader ;RegionInfo *RegionSegment ;SbrTemplate int8 ;SbdsOffset int8 ;DefaultPixel int8 ;CombinationOperator _cd .CombinationOperator ;IsTransposed int8 ;ReferenceCorner int16 ;LogSBStrips int16 ;UseRefinement bool ;IsHuffmanEncoded bool ;SbHuffRSize int8 ;SbHuffRDY int8 ;SbHuffRDX int8 ;SbHuffRDHeight int8 ;SbHuffRDWidth int8 ;SbHuffDT int8 ;SbHuffDS int8 ;SbHuffFS int8 ;SbrATX []int8 ;SbrATY []int8 ;NumberOfSymbolInstances uint32 ;_caae int64 ;SbStrips int8 ;NumberOfSymbols uint32 ;RegionBitmap *_cd .Bitmap ;Symbols []*_cd .Bitmap ;_daca *_db .Decoder ;_facd *GenericRefinementRegion ;_eedce *_db .DecoderStats ;_cddf *_db .DecoderStats ;_fggc *_db .DecoderStats ;_aagcc *_db .DecoderStats ;_fddcg *_db .DecoderStats ;_cfca *_db .DecoderStats ;_bdfc *_db .DecoderStats ;_fagdb *_db .DecoderStats ;_dffc *_db .DecoderStats ;_geee *_db .DecoderStats ;_bgf *_db .DecoderStats ;_fgag int8 ;_eage *_ee .FixedSizeTable ;Header *Header ;_fgc _ee .Tabler ;_aaaeg _ee .Tabler ;_cgec _ee .Tabler ;_gbaa _ee .Tabler ;_fgcb _ee .Tabler ;_ddbe _ee .Tabler ;_cec _ee .Tabler ;_cdeeb _ee .Tabler ;_daba ,_fbcd map[int ]int ;_decbc []int ;_ggabc *_cd .Points ;_eaffb *_cd .Bitmaps ;_cgbdc *_ac .IntSlice ;_edde ,_fabd int ;_bffd *_cd .Boxes ;};func (_ebbae *SymbolDictionary )encodeSymbols (_bgeb _aa .BinaryWriter )(_egbdb int ,_gdfge error ){const _dfbg ="\u0065\u006e\u0063o\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c";_acc :=_ca .New ();_acc .Init ();_dada ,_gdfge :=_ebbae ._bbcd .SelectByIndexes (_ebbae ._dbca );if _gdfge !=nil {return 0,_gc .Wrap (_gdfge ,_dfbg ,"\u0069n\u0069\u0074\u0069\u0061\u006c");};_gebe :=map[*_cd .Bitmap ]int {};for _dafb ,_cebeg :=range _dada .Values {_gebe [_cebeg ]=_dafb ;};_dada .SortByHeight ();var _deaa ,_bdbf int ;_ggab ,_gdfge :=_dada .GroupByHeight ();if _gdfge !=nil {return 0,_gc .Wrap (_gdfge ,_dfbg ,"");};for _ ,_bbgc :=range _ggab .Values {_aece :=_bbgc .Values [0].Height ;_fgbc :=_aece -_deaa ;if _gdfge =_acc .EncodeInteger (_ca .IADH ,_fgbc );_gdfge !=nil {return 0,_gc .Wrapf (_gdfge ,_dfbg ,"\u0049\u0041\u0044\u0048\u0020\u0066\u006f\u0072\u0020\u0064\u0068\u003a \u0027\u0025\u0064\u0027",_fgbc );};_deaa =_aece ;_dbcb ,_dee :=_bbgc .GroupByWidth ();if _dee !=nil {return 0,_gc .Wrapf (_dee ,_dfbg ,"\u0068\u0065\u0069g\u0068\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_aece );};var _aagc int ;for _ ,_aecae :=range _dbcb .Values {for _ ,_gabdg :=range _aecae .Values {_gaa :=_gabdg .Width ;_eegf :=_gaa -_aagc ;if _dee =_acc .EncodeInteger (_ca .IADW ,_eegf );_dee !=nil {return 0,_gc .Wrapf (_dee ,_dfbg ,"\u0049\u0041\u0044\u0057\u0020\u0066\u006f\u0072\u0020\u0064\u0077\u003a \u0027\u0025\u0064\u0027",_eegf );};_aagc +=_eegf ;if _dee =_acc .EncodeBitmap (_gabdg ,false );_dee !=nil {return 0,_gc .Wrapf (_dee ,_dfbg ,"H\u0065i\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u0020W\u0069\u0064\u0074\u0068: \u0025\u0064",_aece ,_gaa );};_cfdc :=_gebe [_gabdg ];_ebbae ._bfag [_cfdc ]=_bdbf ;_bdbf ++;};};if _dee =_acc .EncodeOOB (_ca .IADW );_dee !=nil {return 0,_gc .Wrap (_dee ,_dfbg ,"\u0049\u0041\u0044\u0057");};};if _gdfge =_acc .EncodeInteger (_ca .IAEX ,0);_gdfge !=nil {return 0,_gc .Wrap (_gdfge ,_dfbg ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};if _gdfge =_acc .EncodeInteger (_ca .IAEX ,len (_ebbae ._dbca ));_gdfge !=nil {return 0,_gc .Wrap (_gdfge ,_dfbg ,"\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0073\u0079m\u0062\u006f\u006c\u0073");};_acc .Final ();_fade ,_gdfge :=_acc .WriteTo (_bgeb );if _gdfge !=nil {return 0,_gc .Wrap (_gdfge ,_dfbg ,"\u0077\u0072i\u0074\u0069\u006e\u0067 \u0065\u006ec\u006f\u0064\u0065\u0072\u0020\u0063\u006f\u006et\u0065\u0078\u0074\u0020\u0074\u006f\u0020\u0027\u0077\u0027\u0020\u0077r\u0069\u0074\u0065\u0072");};return int (_fade ),nil ;};func (_agec *PageInformationSegment )encodeStripingInformation (_ebba _aa .BinaryWriter )(_ffae int ,_edfaa error ){const _befc ="\u0065n\u0063\u006f\u0064\u0065S\u0074\u0072\u0069\u0070\u0069n\u0067I\u006ef\u006f\u0072\u006d\u0061\u0074\u0069\u006fn";if !_agec .IsStripe {if _ffae ,_edfaa =_ebba .Write ([]byte {0x00,0x00});_edfaa !=nil {return 0,_gc .Wrap (_edfaa ,_befc ,"n\u006f\u0020\u0073\u0074\u0072\u0069\u0070\u0069\u006e\u0067");};return _ffae ,nil ;};_afac :=make ([]byte ,2);_e .BigEndian .PutUint16 (_afac ,_agec .MaxStripeSize |1<<15);if _ffae ,_edfaa =_ebba .Write (_afac );_edfaa !=nil {return 0,_gc .Wrapf (_edfaa ,_befc ,"\u0073\u0074\u0072i\u0070\u0069\u006e\u0067\u003a\u0020\u0025\u0064",_agec .MaxStripeSize );};return _ffae ,nil ;};func (_gbde *GenericRegion )overrideAtTemplate3 (_abf ,_bacg ,_cgae ,_fdee ,_adbg int )int {_abf &=0x3EF;if _gbde .GBAtY [0]==0&&_gbde .GBAtX [0]>=-int8 (_adbg ){_abf |=(_fdee >>uint (7-(int8 (_adbg )+_gbde .GBAtX [0]))&0x1)<<4;}else {_abf |=int (_gbde .getPixel (_bacg +int (_gbde .GBAtX [0]),_cgae +int (_gbde .GBAtY [0])))<<4;};return _abf ;};func (_fad *GenericRefinementRegion )updateOverride ()error {if _fad .GrAtX ==nil ||_fad .GrAtY ==nil {return _dg .New ("\u0041\u0054\u0020\u0070\u0069\u0078\u0065\u006c\u0073\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");};if len (_fad .GrAtX )!=len (_fad .GrAtY ){return _dg .New ("A\u0054\u0020\u0070\u0069xe\u006c \u0069\u006e\u0063\u006f\u006es\u0069\u0073\u0074\u0065\u006e\u0074");};_fad ._fe =make ([]bool ,len (_fad .GrAtX ));switch _fad .TemplateID {case 0:if _fad .GrAtX [0]!=-1&&_fad .GrAtY [0]!=-1{_fad ._fe [0]=true ;_fad ._fd =true ;};if _fad .GrAtX [1]!=-1&&_fad .GrAtY [1]!=-1{_fad ._fe [1]=true ;_fad ._fd =true ;};case 1:_fad ._fd =false ;};return nil ;};func (_gfe *GenericRefinementRegion )getGrReference ()(*_cd .Bitmap ,error ){segments :=_gfe ._fb .RTSegments ;if len (segments )==0{return nil ,_dg .New ("\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0065\u0078is\u0074\u0073");};_ce ,_aec :=segments [0].GetSegmentData ();if _aec !=nil {return nil ,_aec ;};_fda ,_gd :=_ce .(Regioner );if !_gd {return nil ,_df .Errorf ("\u0072\u0065\u0066\u0065\u0072r\u0065\u0064\u0020\u0074\u006f\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_ce );};return _fda .GetRegionBitmap ();};func (_dece *PageInformationSegment )readIsStriped ()error {_adga ,_bcba :=_dece ._aecg .ReadBit ();if _bcba !=nil {return _bcba ;};if _adga ==1{_dece .IsStripe =true ;};return nil ;};func (_cdeea *SymbolDictionary )setCodingStatistics ()error {if _cdeea ._baga ==nil {_cdeea ._baga =_db .NewStats (512,1);};if _cdeea ._cbcg ==nil {_cdeea ._cbcg =_db .NewStats (512,1);};if _cdeea ._ded ==nil {_cdeea ._ded =_db .NewStats (512,1);};if _cdeea ._afaf ==nil {_cdeea ._afaf =_db .NewStats (512,1);};if _cdeea ._ffea ==nil {_cdeea ._ffea =_db .NewStats (512,1);};if _cdeea .UseRefinementAggregation &&_cdeea ._agaea ==nil {_cdeea ._agaea =_db .NewStats (1<<uint (_cdeea ._bdef ),1);_cdeea ._fdc =_db .NewStats (512,1);_cdeea ._adggc =_db .NewStats (512,1);};if _cdeea ._babd ==nil {_cdeea ._babd =_db .NewStats (65536,1);};if _cdeea ._cedg ==nil {var _edbf error ;_cdeea ._cedg ,_edbf =_db .New (_cdeea ._bcgf );if _edbf !=nil {return _edbf ;};};return nil ;};func (_dgc *GenericRegion )decodeTemplate0b (_bfad ,_bdg ,_dbfc int ,_bac ,_faea int )(_gdec error ){const _fafb ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0062";var (_bae ,_eeffg int ;_bdcc ,_acgc int ;_caf byte ;_dcbb int ;);if _bfad >=1{_caf ,_gdec =_dgc .Bitmap .GetByte (_faea );if _gdec !=nil {return _gc .Wrap (_gdec ,_fafb ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_bdcc =int (_caf );};if _bfad >=2{_caf ,_gdec =_dgc .Bitmap .GetByte (_faea -_dgc .Bitmap .RowStride );if _gdec !=nil {return _gc .Wrap (_gdec ,_fafb ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_acgc =int (_caf )<<6;};_bae =(_bdcc &0xf0)|(_acgc &0x3800);for _faa :=0;_faa < _dbfc ;_faa =_dcbb {var (_fgf byte ;_efdf int ;);_dcbb =_faa +8;if _dgda :=_bdg -_faa ;_dgda > 8{_efdf =8;}else {_efdf =_dgda ;};if _bfad > 0{_bdcc <<=8;if _dcbb < _bdg {_caf ,_gdec =_dgc .Bitmap .GetByte (_faea +1);if _gdec !=nil {return _gc .Wrap (_gdec ,_fafb ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_bdcc |=int (_caf );};};if _bfad > 1{_acgc <<=8;if _dcbb < _bdg {_caf ,_gdec =_dgc .Bitmap .GetByte (_faea -_dgc .Bitmap .RowStride +1);if _gdec !=nil {return _gc .Wrap (_gdec ,_fafb ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_acgc |=int (_caf )<<6;};};for _feb :=0;_feb < _efdf ;_feb ++{_ggea :=uint (7-_feb );if _dgc ._cgg {_eeffg =_dgc .overrideAtTemplate0b (_bae ,_faa +_feb ,_bfad ,int (_fgf ),_feb ,int (_ggea ));_dgc ._cfa .SetIndex (int32 (_eeffg ));}else {_dgc ._cfa .SetIndex (int32 (_bae ));};var _ecac int ;_ecac ,_gdec =_dgc ._dfgc .DecodeBit (_dgc ._cfa );if _gdec !=nil {return _gc .Wrap (_gdec ,_fafb ,"");};_fgf |=byte (_ecac <<uint (_ggea ));_bae =((_bae &0x7bf7)<<1)|_ecac |((_bdcc >>_ggea )&0x10)|((_acgc >>_ggea )&0x800);};if _faec :=_dgc .Bitmap .SetByte (_bac ,_fgf );_faec !=nil {return _gc .Wrap (_faec ,_fafb ,"");};_bac ++;_faea ++;};return nil ;};func (_ecbf *template0 )setIndex (_eeff *_db .DecoderStats ){_eeff .SetIndex (0x100)};func (_eba *GenericRefinementRegion )setParameters (_eca *_db .DecoderStats ,_dcbe *_db .Decoder ,_adaf int8 ,_fcc ,_age uint32 ,_ffc *_cd .Bitmap ,_dcbf ,_dfgf int32 ,_gdf bool ,_aag []int8 ,_fga []int8 ){_bc .Log .Trace ("\u005b\u0047\u0045NE\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052E\u0047I\u004fN\u005d \u0073\u0065\u0074\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073");if _eca !=nil {_eba ._ab =_eca ;};if _dcbe !=nil {_eba ._fbg =_dcbe ;};_eba .TemplateID =_adaf ;_eba .RegionInfo .BitmapWidth =_fcc ;_eba .RegionInfo .BitmapHeight =_age ;_eba .ReferenceBitmap =_ffc ;_eba .ReferenceDX =_dcbf ;_eba .ReferenceDY =_dfgf ;_eba .IsTPGROn =_gdf ;_eba .GrAtX =_aag ;_eba .GrAtY =_fga ;_eba .RegionBitmap =nil ;_bc .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073 f\u0069\u006ei\u0073\u0068\u0065\u0064\u002e\u0020\u0025\u0073",_eba );};func (_eaff *SymbolDictionary )getUserTable (_abef int )(_ee .Tabler ,error ){var _accfa int ;for _ ,_eabc :=range _eaff .Header .RTSegments {if _eabc .Type ==53{if _accfa ==_abef {_dgga ,_bfdd :=_eabc .GetSegmentData ();if _bfdd !=nil {return nil ,_bfdd ;};_edeag :=_dgga .(_ee .BasicTabler );return _ee .NewEncodedTable (_edeag );};_accfa ++;};};return nil ,nil ;};func (_cafdc *PageInformationSegment )Init (h *Header ,r _aa .StreamReader )(_edfda error ){_cafdc ._aecg =r ;if _edfda =_cafdc .parseHeader ();_edfda !=nil {return _gc .Wrap (_edfda ,"P\u0061\u0067\u0065\u0049\u006e\u0066o\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065g\u006d\u0065\u006et\u002eI\u006e\u0069\u0074","");};return nil ;};func (_eeba *GenericRegion )computeSegmentDataStructure ()error {_eeba .DataOffset =_eeba ._bcb .StreamPosition ();_eeba .DataHeaderLength =_eeba .DataOffset -_eeba .DataHeaderOffset ;_eeba .DataLength =int64 (_eeba ._bcb .Length ())-_eeba .DataHeaderLength ;return nil ;};func (_eacgb *SymbolDictionary )decodeHeightClassDeltaHeightWithHuffman ()(int64 ,error ){switch _eacgb .SdHuffDecodeHeightSelection {case 0:_afbe ,_ebcf :=_ee .GetStandardTable (4);if _ebcf !=nil {return 0,_ebcf ;};return _afbe .Decode (_eacgb ._bcgf );case 1:_afec ,_fgbb :=_ee .GetStandardTable (5);if _fgbb !=nil {return 0,_fgbb ;};return _afec .Decode (_eacgb ._bcgf );case 3:if _eacgb ._cdgc ==nil {_bbgac ,_abg :=_ee .GetStandardTable (0);if _abg !=nil {return 0,_abg ;};_eacgb ._cdgc =_bbgac ;};return _eacgb ._cdgc .Decode (_eacgb ._bcgf );};return 0,nil ;};func (_gecd *TextRegion )decodeRI ()(int64 ,error ){if !_gecd .UseRefinement {return 0,nil ;};if _gecd .IsHuffmanEncoded {_bfaee ,_bceb :=_gecd ._cfcb .ReadBit ();return int64 (_bfaee ),_bceb ;};_afacc ,_fdaf :=_gecd ._daca .DecodeInt (_gecd ._fddcg );return int64 (_afacc ),_fdaf ;};func (_dgea *SymbolDictionary )String ()string {_cbdd :=&_a .Builder {};_cbdd .WriteString ("\n\u005b\u0053\u0059\u004dBO\u004c-\u0044\u0049\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u000a");_cbdd .WriteString (_df .Sprintf ("\u0009-\u0020S\u0064\u0072\u0054\u0065\u006dp\u006c\u0061t\u0065\u0020\u0025\u0076\u000a",_dgea .SdrTemplate ));_cbdd .WriteString (_df .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0025\u0076\u000a",_dgea .SdTemplate ));_cbdd .WriteString (_df .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006eg\u0043\u006f\u006e\u0074\u0065\u0078\u0074R\u0065\u0074\u0061\u0069\u006e\u0065\u0064\u0020\u0025\u0076\u000a",_dgea ._cged ));_cbdd .WriteString (_df .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074\u0065\u0078\u0074\u0055\u0073\u0065\u0064 \u0025\u0076\u000a",_dgea ._gaead ));_cbdd .WriteString (_df .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_dgea .SdHuffAggInstanceSelection ));_cbdd .WriteString (_df .Sprintf ("\u0009\u002d\u0020\u0053d\u0048\u0075\u0066\u0066\u0042\u004d\u0053\u0069\u007a\u0065S\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020%\u0076\u000a",_dgea .SdHuffBMSizeSelection ));_cbdd .WriteString (_df .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_dgea .SdHuffDecodeWidthSelection ));_cbdd .WriteString (_df .Sprintf ("\u0009\u002d\u0020Sd\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064e\u0048e\u0069g\u0068t\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_dgea .SdHuffDecodeHeightSelection ));_cbdd .WriteString (_df .Sprintf ("\u0009\u002d\u0020U\u0073\u0065\u0052\u0065f\u0069\u006e\u0065\u006d\u0065\u006e\u0074A\u0067\u0067\u0072\u0065\u0067\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_dgea .UseRefinementAggregation ));_cbdd .WriteString (_df .Sprintf ("\u0009\u002d\u0020is\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045\u006e\u0063\u006f\u0064\u0065\u0064\u0020\u0025\u0076\u000a",_dgea .IsHuffmanEncoded ));_cbdd .WriteString (_df .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_dgea .SdATX ));_cbdd .WriteString (_df .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_dgea .SdATY ));_cbdd .WriteString (_df .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_dgea .SdrATX ));_cbdd .WriteString (_df .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_dgea .SdrATY ));_cbdd .WriteString (_df .Sprintf ("\u0009\u002d\u0020\u004e\u0075\u006d\u0062\u0065\u0072\u004ff\u0045\u0078\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_dgea .NumberOfExportedSymbols ));_cbdd .WriteString (_df .Sprintf ("\u0009-\u0020\u004e\u0075\u006db\u0065\u0072\u004f\u0066\u004ee\u0077S\u0079m\u0062\u006f\u006c\u0073\u0020\u0025\u0076\n",_dgea .NumberOfNewSymbols ));_cbdd .WriteString (_df .Sprintf ("\u0009\u002d\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u004ff\u0049\u006d\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_dgea ._dcdf ));_cbdd .WriteString (_df .Sprintf ("\u0009\u002d \u006e\u0075\u006d\u0062\u0065\u0072\u004f\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0064\u0053\u0079\u006d\u0062\u006f\u006c\u0073 %\u0076\u000a",_dgea ._fecg ));return _cbdd .String ();};func (_ceb *GenericRefinementRegion )decodeOptimized (_ade ,_fbbg ,_cc ,_bgg ,_fa ,_cda ,_feef int )error {var (_af error ;_cf int ;_dbe int ;);_aeg :=_ade -int (_ceb .ReferenceDY );if _dc :=int (-_ceb .ReferenceDX );_dc > 0{_cf =_dc ;};_ga :=_ceb .ReferenceBitmap .GetByteIndex (_cf ,_aeg );if _ceb .ReferenceDX > 0{_dbe =int (_ceb .ReferenceDX );};_fae :=_ceb .RegionBitmap .GetByteIndex (_dbe ,_ade );switch _ceb .TemplateID {case 0:_af =_ceb .decodeTemplate (_ade ,_fbbg ,_cc ,_bgg ,_fa ,_cda ,_feef ,_fae ,_aeg ,_ga ,_ceb ._de );case 1:_af =_ceb .decodeTemplate (_ade ,_fbbg ,_cc ,_bgg ,_fa ,_cda ,_feef ,_fae ,_aeg ,_ga ,_ceb ._dda );};return _af ;};func (_cfbg *SymbolDictionary )checkInput ()error {if _cfbg .SdHuffDecodeHeightSelection ==2{_bc .Log .Debug ("\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0048\u0065\u0069g\u0068\u0020\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061l\u0075\u0065\u0020\u006e\u006f\u0074 \u0070\u0065r\u006d\u0069t\u0074e\u0064",_cfbg .SdHuffDecodeHeightSelection );};if _cfbg .SdHuffDecodeWidthSelection ==2{_bc .Log .Debug ("\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0057\u0069\u0064t\u0068\u0020\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061l\u0075\u0065\u0020\u006e\u006f\u0074 \u0070\u0065r\u006d\u0069t\u0074e\u0064",_cfbg .SdHuffDecodeWidthSelection );};if _cfbg .IsHuffmanEncoded {if _cfbg .SdTemplate !=0{_bc .Log .Debug ("\u0053\u0044T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e \u0030\u0029",_cfbg .SdTemplate );};if !_cfbg .UseRefinementAggregation {if !_cfbg .UseRefinementAggregation {if _cfbg ._cged {_bc .Log .Debug ("\u0049\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074ex\u0074\u0052\u0065\u0074\u0061\u0069n\u0065\u0064\u0020\u003d\u0020\u0074\u0072\u0075\u0065\u0020\u0028\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0066\u0061\u006cs\u0065\u0029");_cfbg ._cged =false ;};if _cfbg ._gaead {_bc .Log .Debug ("\u0069s\u0043\u006fd\u0069\u006e\u0067\u0043o\u006e\u0074\u0065x\u0074\u0055\u0073\u0065\u0064\u0020\u003d\u0020\u0074ru\u0065\u0020\u0028s\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020f\u0061\u006cs\u0065\u0029");_cfbg ._gaead =false ;};};};}else {if _cfbg .SdHuffBMSizeSelection !=0{_bc .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066B\u004d\u0053\u0069\u007a\u0065\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");_cfbg .SdHuffBMSizeSelection =0;};if _cfbg .SdHuffDecodeWidthSelection !=0{_bc .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068\u0053\u0065\u006c\u0065\u0063\u0074\u0069o\u006e\u0020\u0073\u0068\u006fu\u006c\u0064 \u0062\u0065\u0020\u0030");_cfbg .SdHuffDecodeWidthSelection =0;};if _cfbg .SdHuffDecodeHeightSelection !=0{_bc .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0048e\u0069\u0067\u0068\u0074\u0053\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");_cfbg .SdHuffDecodeHeightSelection =0;};};if !_cfbg .UseRefinementAggregation {if _cfbg .SdrTemplate !=0{_bc .Log .Debug ("\u0053\u0044\u0052\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u003d\u0020\u0025\u0064\u0020\u0028s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_cfbg .SdrTemplate );_cfbg .SdrTemplate =0;};};if !_cfbg .IsHuffmanEncoded ||!_cfbg .UseRefinementAggregation {if _cfbg .SdHuffAggInstanceSelection {_bc .Log .Debug ("\u0053d\u0048\u0075f\u0066\u0041\u0067g\u0049\u006e\u0073\u0074\u0061\u006e\u0063e\u0053\u0065\u006c\u0065\u0063\u0074i\u006f\u006e\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_cfbg .SdHuffAggInstanceSelection );};};return nil ;};func (_effbe *Header )readNumberOfReferredToSegments (_bfbe _aa .StreamReader )(uint64 ,error ){const _dcgd ="\u0072\u0065\u0061\u0064\u004e\u0075\u006d\u0062\u0065\u0072O\u0066\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";_cfabc ,_ceaf :=_bfbe .ReadBits (3);if _ceaf !=nil {return 0,_gc .Wrap (_ceaf ,_dcgd ,"\u0063\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0072\u0074\u0073");};_cfabc &=0xf;var _caee []byte ;if _cfabc <=4{_caee =make ([]byte ,5);for _affc :=0;_affc <=4;_affc ++{_ffce ,_efce :=_bfbe .ReadBit ();if _efce !=nil {return 0,_gc .Wrap (_efce ,_dcgd ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_caee [_affc ]=byte (_ffce );};}else {_cfabc ,_ceaf =_bfbe .ReadBits (29);if _ceaf !=nil {return 0,_ceaf ;};_cfabc &=_d .MaxInt32 ;_ddb :=(_cfabc +8)>>3;_ddb <<=3;_caee =make ([]byte ,_ddb );var _bbb uint64 ;for _bbb =0;_bbb < _ddb ;_bbb ++{_gbgg ,_daga :=_bfbe .ReadBit ();if _daga !=nil {return 0,_gc .Wrap (_daga ,_dcgd ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_caee [_bbb ]=byte (_gbgg );};};return _cfabc ,nil ;};func (_bfgfa *Header )String ()string {_bcfdf :=&_a .Builder {};_bcfdf .WriteString ("\u000a[\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045A\u0044\u0045\u0052\u005d\u000a");_bcfdf .WriteString (_df .Sprintf ("\t\u002d\u0020\u0053\u0065gm\u0065n\u0074\u004e\u0075\u006d\u0062e\u0072\u003a\u0020\u0025\u0076\u000a",_bfgfa .SegmentNumber ));_bcfdf .WriteString (_df .Sprintf ("\u0009\u002d\u0020T\u0079\u0070\u0065\u003a\u0020\u0025\u0076\u000a",_bfgfa .Type ));_bcfdf .WriteString (_df .Sprintf ("\u0009-\u0020R\u0065\u0074\u0061\u0069\u006eF\u006c\u0061g\u003a\u0020\u0025\u0076\u000a",_bfgfa .RetainFlag ));_bcfdf .WriteString (_df .Sprintf ("\u0009\u002d\u0020Pa\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_bfgfa .PageAssociation ));_bcfdf .WriteString (_df .Sprintf ("\u0009\u002d\u0020\u0050\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074i\u006fn\u0046\u0069\u0065\u006c\u0064\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_bfgfa .PageAssociationFieldSize ));_bcfdf .WriteString ("\u0009-\u0020R\u0054\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u0053\u003a\u000a");for _ ,_dbge :=range _bfgfa .RTSNumbers {_bcfdf .WriteString (_df .Sprintf ("\u0009\t\u002d\u0020\u0025\u0064\u000a",_dbge ));};_bcfdf .WriteString (_df .Sprintf ("\t\u002d \u0048\u0065\u0061\u0064\u0065\u0072\u004c\u0065n\u0067\u0074\u0068\u003a %\u0076\u000a",_bfgfa .HeaderLength ));_bcfdf .WriteString (_df .Sprintf ("\u0009-\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061L\u0065n\u0067\u0074\u0068\u003a\u0020\u0025\u0076\n",_bfgfa .SegmentDataLength ));_bcfdf .WriteString (_df .Sprintf ("\u0009\u002d\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074D\u0061\u0074\u0061\u0053\u0074\u0061\u0072t\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0076\u000a",_bfgfa .SegmentDataStartOffset ));return _bcfdf .String ();};func (_dcdc *GenericRegion )copyLineAbove (_eeaf int )error {_bea :=_eeaf *_dcdc .Bitmap .RowStride ;_faf :=_bea -_dcdc .Bitmap .RowStride ;for _bcg :=0;_bcg < _dcdc .Bitmap .RowStride ;_bcg ++{_edc ,_cdae :=_dcdc .Bitmap .GetByte (_faf );if _cdae !=nil {return _cdae ;};_faf ++;if _cdae =_dcdc .Bitmap .SetByte (_bea ,_edc );_cdae !=nil {return _cdae ;};_bea ++;};return nil ;};func (_ead *GenericRegion )String ()string {_dae :=&_a .Builder {};_dae .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_dae .WriteString (_ead .RegionSegment .String ()+"\u000a");_dae .WriteString (_df .Sprintf ("\u0009\u002d\u0020Us\u0065\u0045\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_ead .UseExtTemplates ));_dae .WriteString (_df .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0044\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_ead .IsTPGDon ));_dae .WriteString (_df .Sprintf ("\u0009-\u0020G\u0042\u0054\u0065\u006d\u0070l\u0061\u0074e\u003a\u0020\u0025\u0064\u000a",_ead .GBTemplate ));_dae .WriteString (_df .Sprintf ("\t\u002d \u0049\u0073\u004d\u004d\u0052\u0045\u006e\u0063o\u0064\u0065\u0064\u003a %\u0076\u000a",_ead .IsMMREncoded ));_dae .WriteString (_df .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_ead .GBAtX ));_dae .WriteString (_df .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_ead .GBAtY ));_dae .WriteString (_df .Sprintf ("\t\u002d \u0047\u0042\u0041\u0074\u004f\u0076\u0065\u0072r\u0069\u0064\u0065\u003a %\u0076\u000a",_ead .GBAtOverride ));return _dae .String ();};