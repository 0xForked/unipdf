//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package document ;import (_g "encoding/binary";_f "fmt";_ga "github.com/unidoc/unipdf/v3/common";_fg "github.com/unidoc/unipdf/v3/internal/bitwise";_ad "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_d "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";
_gg "github.com/unidoc/unipdf/v3/internal/jbig2/document/segments";_db "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/classer";_dg "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_eb "io";_a "math";_ab "runtime/debug";);func (_gc *Globals )GetSegmentByIndex (index int )(*_gg .Header ,error ){const _fdf ="\u0047l\u006f\u0062\u0061\u006cs\u002e\u0047\u0065\u0074\u0053e\u0067m\u0065n\u0074\u0042\u0079\u0049\u006e\u0064\u0065x";
if _gc ==nil {return nil ,_dg .Error (_fdf ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_gc .Segments )==0{return nil ,_dg .Error (_fdf ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");
};if index > len (_gc .Segments )-1{return nil ,_dg .Error (_fdf ,"\u0069n\u0064e\u0078\u0020\u006f\u0075\u0074 \u006f\u0066 \u0072\u0061\u006e\u0067\u0065");};return _gc .Segments [index ],nil ;};type Globals struct{Segments []*_gg .Header ;};func (_bag *Page )getResolutionY ()(int ,error ){const _fad ="\u0067\u0065\u0074\u0052\u0065\u0073\u006f\u006c\u0075t\u0069\u006f\u006e\u0059";
if _bag .ResolutionY !=0{return _bag .ResolutionY ,nil ;};_gcfa :=_bag .getPageInformationSegment ();if _gcfa ==nil {return 0,_dg .Error (_fad ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_aeff ,_fdde :=_gcfa .GetSegmentData ();
if _fdde !=nil {return 0,_dg .Wrap (_fdde ,_fad ,"");};_cecg ,_afbd :=_aeff .(*_gg .PageInformationSegment );if !_afbd {return 0,_dg .Errorf (_fad ,"\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0066o\u0072\u006d\u0061ti\u006f\u006e\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0069\u0073\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0074\u0079\u0070\u0065\u003a\u0027%\u0054\u0027",_aeff );
};_bag .ResolutionY =_cecg .ResolutionY ;return _bag .ResolutionY ,nil ;};func (_ffb *Page )clearSegmentData (){for _cgce :=range _ffb .Segments {_ffb .Segments [_cgce ].CleanSegmentData ();};};func (_fcgb *Document )isFileHeaderPresent ()(bool ,error ){_fcgb .InputStream .Mark ();
for _ ,_fba :=range _b {_fef ,_egg :=_fcgb .InputStream .ReadByte ();if _egg !=nil {return false ,_egg ;};if _fba !=_fef {_fcgb .InputStream .Reset ();return false ,nil ;};};_fcgb .InputStream .Reset ();return true ,nil ;};func (_cec *Document )determineRandomDataOffsets (_dba []*_gg .Header ,_ebcb uint64 ){if _cec .OrganizationType !=_gg .ORandom {return ;
};for _ ,_eea :=range _dba {_eea .SegmentDataStartOffset =_ebcb ;_ebcb +=_eea .SegmentDataLength ;};};func (_gbeb *Page )countRegions ()int {var _dccg int ;for _ ,_fege :=range _gbeb .Segments {switch _fege .Type {case 6,7,22,23,38,39,42,43:_dccg ++;};
};return _dccg ;};func (_cce *Document )mapData ()error {const _fdd ="\u006da\u0070\u0044\u0061\u0074\u0061";var (_eec []*_gg .Header ;_afgd int64 ;_dbaa _gg .Type ;);_bdfg ,_ccf :=_cce .isFileHeaderPresent ();if _ccf !=nil {return _dg .Wrap (_ccf ,_fdd ,"");
};if _bdfg {if _ccf =_cce .parseFileHeader ();_ccf !=nil {return _dg .Wrap (_ccf ,_fdd ,"");};_afgd +=int64 (_cce ._fb );_cce .FullHeaders =true ;};var (_aae *Page ;_bde bool ;);for _dbaa !=51&&!_bde {_ade ,_aced :=_gg .NewHeader (_cce ,_cce .InputStream ,_afgd ,_cce .OrganizationType );
if _aced !=nil {return _dg .Wrap (_aced ,_fdd ,"");};_ga .Log .Trace ("\u0044\u0065c\u006f\u0064\u0069\u006eg\u0020\u0073e\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u0075m\u0062\u0065\u0072\u003a\u0020\u0025\u0064\u002c\u0020\u0054\u0079\u0070e\u003a\u0020\u0025\u0073",_ade .SegmentNumber ,_ade .Type );
_dbaa =_ade .Type ;if _dbaa !=_gg .TEndOfFile {if _ade .PageAssociation !=0{_aae =_cce .Pages [_ade .PageAssociation ];if _aae ==nil {_aae =_daf (_cce ,_ade .PageAssociation );_cce .Pages [_ade .PageAssociation ]=_aae ;if _cce .NumberOfPagesUnknown {_cce .NumberOfPages ++;
};};_aae .Segments =append (_aae .Segments ,_ade );}else {_cce .GlobalSegments .AddSegment (_ade );};};_eec =append (_eec ,_ade );_afgd =_cce .InputStream .StreamPosition ();if _cce .OrganizationType ==_gg .OSequential {_afgd +=int64 (_ade .SegmentDataLength );
};_bde ,_aced =_cce .reachedEOF (_afgd );if _aced !=nil {_ga .Log .Debug ("\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020\u0072\u0065\u0061\u0063h\u0065\u0064\u0020\u0045\u004f\u0046\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_aced );
return _dg .Wrap (_aced ,_fdd ,"");};};_cce .determineRandomDataOffsets (_eec ,uint64 (_afgd ));return nil ;};func (_bce *Page )GetBitmap ()(_edcb *_d .Bitmap ,_edg error ){_ga .Log .Trace (_f .Sprintf ("\u005b\u0050\u0041G\u0045\u005d\u005b\u0023%\u0064\u005d\u0020\u0047\u0065\u0074\u0042i\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e",_bce .PageNumber ));
defer func (){if _edg !=nil {_ga .Log .Trace (_f .Sprintf ("\u005b\u0050\u0041\u0047\u0045\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074B\u0069t\u006d\u0061\u0070\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_bce .PageNumber ,_edg ));
}else {_ga .Log .Trace (_f .Sprintf ("\u005b\u0050\u0041\u0047\u0045\u005d\u005b\u0023\u0025\u0064]\u0020\u0047\u0065\u0074\u0042\u0069\u0074m\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064",_bce .PageNumber ));};}();if _bce .Bitmap !=nil {return _bce .Bitmap ,nil ;
};_edg =_bce .composePageBitmap ();if _edg !=nil {return nil ,_edg ;};return _bce .Bitmap ,nil ;};func (_ace *Document )encodeSegment (_bdgf *_gg .Header ,_cdf *int )error {const _dga ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074";
_bdgf .SegmentNumber =_ace .nextSegmentNumber ();_ggb ,_gee :=_bdgf .Encode (_ace ._fbd );if _gee !=nil {return _dg .Wrapf (_gee ,_dga ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_bdgf .SegmentNumber );};*_cdf +=_ggb ;
return nil ;};func (_df *Document )completeSymbols ()(_ca error ){const _aeb ="\u0063o\u006dp\u006c\u0065\u0074\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";if _df .Classer ==nil {return nil ;};if _df .Classer .UndilatedTemplates ==nil {return _dg .Error (_aeb ,"\u006e\u006f t\u0065\u006d\u0070l\u0061\u0074\u0065\u0073 de\u0066in\u0065\u0064\u0020\u0066\u006f\u0072\u0020th\u0065\u0020\u0063\u006c\u0061\u0073\u0073e\u0072");
};_bdc :=len (_df .Pages )==1;_beg :=make ([]int ,_df .Classer .UndilatedTemplates .Size ());var _ee int ;for _fff :=0;_fff < _df .Classer .ClassIDs .Size ();_fff ++{_ee ,_ca =_df .Classer .ClassIDs .Get (_fff );if _ca !=nil {return _dg .Wrap (_ca ,_aeb ,"\u0063\u006c\u0061\u0073\u0073\u0020\u0049\u0044\u0027\u0073");
};_beg [_ee ]++;};var _bea []int ;for _gbg :=0;_gbg < _df .Classer .UndilatedTemplates .Size ();_gbg ++{if _beg [_gbg ]==0{return _dg .Error (_aeb ,"\u006eo\u0020\u0073y\u006d\u0062\u006f\u006cs\u0020\u0069\u006es\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u0066\u006fun\u0064\u0020\u0066o\u0072\u0020g\u0069\u0076\u0065\u006e\u0020\u0063l\u0061\u0073s\u003f\u0020");
};if _beg [_gbg ]> 1||_bdc {_bea =append (_bea ,_gbg );};};_df ._de =len (_bea );var _ag ,_dff int ;for _cab :=0;_cab < _df .Classer .ComponentPageNumbers .Size ();_cab ++{_ag ,_ca =_df .Classer .ComponentPageNumbers .Get (_cab );if _ca !=nil {return _dg .Wrapf (_ca ,_aeb ,"p\u0061\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027 \u006e\u006f\u0074\u0020\u0066\u006f\u0075nd\u0020\u0069\u006e\u0020t\u0068\u0065\u0020\u0063\u006c\u0061\u0073\u0073\u0065r \u0070\u0061g\u0065\u006e\u0075\u006d\u0062\u0065\u0072\u0073",_cab );
};_dff ,_ca =_df .Classer .ClassIDs .Get (_cab );if _ca !=nil {return _dg .Wrapf (_ca ,_aeb ,"\u0063\u0061\u006e\u0027\u0074\u0020\u0067e\u0074\u0020\u0073y\u006d\u0062\u006f\u006c \u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0027\u0025\u0064\u0027\u0020\u0066\u0072\u006f\u006d\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072",_ag );
};if _beg [_dff ]==1&&!_bdc {_df ._ea [_ag ]=append (_df ._ea [_ag ],_dff );};};if _ca =_df .Classer .ComputeLLCorners ();_ca !=nil {return _dg .Wrap (_ca ,_aeb ,"");};return nil ;};func (_gaed *Document )GetGlobalSegment (i int )(*_gg .Header ,error ){_acc ,_fcag :=_gaed .GlobalSegments .GetSegment (i );
if _fcag !=nil {return nil ,_dg .Wrap (_fcag ,"\u0047\u0065t\u0047\u006c\u006fb\u0061\u006c\u0053\u0065\u0067\u006d\u0065\u006e\u0074","");};return _acc ,nil ;};func (_egbc *Page )nextSegmentNumber ()uint32 {return _egbc .Document .nextSegmentNumber ()};
func _daf (_fdae *Document ,_agd int )*Page {return &Page {Document :_fdae ,PageNumber :_agd ,Segments :[]*_gg .Header {}};};func (_cdgb *Page )fitsPage (_bead *_gg .PageInformationSegment ,_cac *_d .Bitmap )bool {return _cdgb .countRegions ()==1&&_bead .DefaultPixelValue ==0&&_bead .PageBMWidth ==_cac .Width &&_bead .PageBMHeight ==_cac .Height ;
};func (_cdg *Page )GetResolutionY ()(int ,error ){return _cdg .getResolutionY ()};func (_aac *Page )GetResolutionX ()(int ,error ){return _aac .getResolutionX ()};func (_efb *Page )addTextRegionSegment (_ceb []*_gg .Header ,_cgd ,_egc map[int ]int ,_adbb []int ,_fea *_d .Points ,_adbf *_d .Bitmaps ,_geef *_ad .IntSlice ,_ceed *_d .Boxes ,_fdgc ,_cada int ){_dddf :=&_gg .TextRegion {NumberOfSymbols :uint32 (_cada )};
_dddf .InitEncode (_cgd ,_egc ,_adbb ,_fea ,_adbf ,_geef ,_ceed ,_efb .FinalWidth ,_efb .FinalHeight ,_fdgc );_ebgf :=&_gg .Header {RTSegments :_ceb ,SegmentData :_dddf ,PageAssociation :_efb .PageNumber ,Type :_gg .TImmediateTextRegion };_fee :=_gg .TPageInformation ;
if _egc !=nil {_fee =_gg .TSymbolDictionary ;};var _baa int ;for ;_baa < len (_efb .Segments );_baa ++{if _efb .Segments [_baa ].Type ==_fee {_baa ++;break ;};};_efb .Segments =append (_efb .Segments ,nil );copy (_efb .Segments [_baa +1:],_efb .Segments [_baa :]);
_efb .Segments [_baa ]=_ebgf ;};func (_dace *Page )GetWidth ()(int ,error ){return _dace .getWidth ()};func (_eba *Document )addSymbolDictionary (_deb int ,_fcd *_d .Bitmaps ,_bc []int ,_cde map[int ]int ,_afd bool )(*_gg .Header ,error ){const _afdf ="\u0061\u0064\u0064\u0053ym\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079";
_ced :=&_gg .SymbolDictionary {};if _abg :=_ced .InitEncode (_fcd ,_bc ,_cde ,_afd );_abg !=nil {return nil ,_abg ;};_gae :=&_gg .Header {Type :_gg .TSymbolDictionary ,PageAssociation :_deb ,SegmentData :_ced };if _deb ==0{if _eba .GlobalSegments ==nil {_eba .GlobalSegments =&Globals {};
};_eba .GlobalSegments .AddSegment (_gae );return _gae ,nil ;};_bfe ,_aaa :=_eba .Pages [_deb ];if !_aaa {return nil ,_dg .Errorf (_afdf ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_deb );};var (_cb int ;
_efc *_gg .Header ;);for _cb ,_efc =range _bfe .Segments {if _efc .Type ==_gg .TPageInformation {break ;};};_cb ++;_bfe .Segments =append (_bfe .Segments ,nil );copy (_bfe .Segments [_cb +1:],_bfe .Segments [_cb :]);_bfe .Segments [_cb ]=_gae ;return _gae ,nil ;
};type Page struct{Segments []*_gg .Header ;PageNumber int ;Bitmap *_d .Bitmap ;FinalHeight int ;FinalWidth int ;ResolutionX int ;ResolutionY int ;IsLossless bool ;Document *Document ;FirstSegmentNumber int ;EncodingMethod EncodingMethod ;BlackIsOne bool ;
};func (_debd *Page )String ()string {return _f .Sprintf ("\u0050\u0061\u0067\u0065\u0020\u0023\u0025\u0064",_debd .PageNumber );};func (_aceg *Page )createNormalPage (_cag *_gg .PageInformationSegment )error {const _bb ="\u0063\u0072e\u0061\u0074\u0065N\u006f\u0072\u006d\u0061\u006c\u0050\u0061\u0067\u0065";
_aceg .Bitmap =_d .New (_cag .PageBMWidth ,_cag .PageBMHeight );if _cag .DefaultPixelValue !=0{_aceg .Bitmap .SetDefaultPixel ();};for _ ,_faeb :=range _aceg .Segments {switch _faeb .Type {case 6,7,22,23,38,39,42,43:_ga .Log .Trace ("\u0047\u0065\u0074\u0074in\u0067\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0064",_faeb .SegmentNumber );
_gec ,_fbab :=_faeb .GetSegmentData ();if _fbab !=nil {return _fbab ;};_eef ,_gbf :=_gec .(_gg .Regioner );if !_gbf {_ga .Log .Debug ("\u0053\u0065g\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069on\u0065\u0072",_gec );
return _dg .Errorf (_bb ,"i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062i\u0067\u0032\u0020\u0073\u0065\u0067\u006den\u0074\u0020\u0074\u0079p\u0065\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061 R\u0065\u0067i\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_gec );
};_gbfd ,_fbab :=_eef .GetRegionBitmap ();if _fbab !=nil {return _dg .Wrap (_fbab ,_bb ,"");};if _aceg .fitsPage (_cag ,_gbfd ){_aceg .Bitmap =_gbfd ;}else {_dddd :=_eef .GetRegionInfo ();_bda :=_aceg .getCombinationOperator (_cag ,_dddd .CombinaionOperator );
_fbab =_d .Blit (_gbfd ,_aceg .Bitmap ,int (_dddd .XLocation ),int (_dddd .YLocation ),_bda );if _fbab !=nil {return _dg .Wrap (_fbab ,_bb ,"");};};};};return nil ;};func (_cad *Document )nextSegmentNumber ()uint32 {_aad :=_cad .CurrentSegmentNumber ;_cad .CurrentSegmentNumber ++;
return _aad ;};func (_gbac *Page )createPage (_abff *_gg .PageInformationSegment )error {var _dgba error ;if !_abff .IsStripe ||_abff .PageBMHeight !=-1{_dgba =_gbac .createNormalPage (_abff );}else {_dgba =_gbac .createStripedPage (_abff );};return _dgba ;
};func (_cece *Page )AddGenericRegion (bm *_d .Bitmap ,xloc ,yloc ,template int ,tp _gg .Type ,duplicateLineRemoval bool )error {const _ebb ="P\u0061\u0067\u0065\u002eAd\u0064G\u0065\u006e\u0065\u0072\u0069c\u0052\u0065\u0067\u0069\u006f\u006e";_dac :=&_gg .GenericRegion {};
if _fae :=_dac .InitEncode (bm ,xloc ,yloc ,template ,duplicateLineRemoval );_fae !=nil {return _dg .Wrap (_fae ,_ebb ,"");};_ead :=&_gg .Header {Type :_gg .TImmediateGenericRegion ,PageAssociation :_cece .PageNumber ,SegmentData :_dac };_cece .Segments =append (_cece .Segments ,_ead );
return nil ;};func (_aege *Page )getPageInformationSegment ()*_gg .Header {for _ ,_ceee :=range _aege .Segments {if _ceee .Type ==_gg .TPageInformation {return _ceee ;};};_ga .Log .Debug ("\u0050\u0061\u0067\u0065\u0020\u0069\u006e\u0066o\u0072\u006d\u0061ti\u006f\u006e\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0066o\u0072\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0073\u002e",_aege );
return nil ;};func (_cgg *Page )lastSegmentNumber ()(_ggba uint32 ,_egb error ){const _becbe ="\u006c\u0061\u0073\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";if len (_cgg .Segments )==0{return _ggba ,_dg .Errorf (_becbe ,"\u006e\u006f\u0020se\u0067\u006d\u0065\u006e\u0074\u0073\u0020\u0066\u006fu\u006ed\u0020i\u006e \u0074\u0068\u0065\u0020\u0070\u0061\u0067\u0065\u0020\u0027\u0025\u0064\u0027",_cgg .PageNumber );
};return _cgg .Segments [len (_cgg .Segments )-1].SegmentNumber ,nil ;};func (_fbef *Page )getResolutionX ()(int ,error ){const _dbga ="\u0067\u0065\u0074\u0052\u0065\u0073\u006f\u006c\u0075t\u0069\u006f\u006e\u0058";if _fbef .ResolutionX !=0{return _fbef .ResolutionX ,nil ;
};_ggc :=_fbef .getPageInformationSegment ();if _ggc ==nil {return 0,_dg .Error (_dbga ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_gdd ,_beea :=_ggc .GetSegmentData ();if _beea !=nil {return 0,_dg .Wrap (_beea ,_dbga ,"");
};_agb ,_ggf :=_gdd .(*_gg .PageInformationSegment );if !_ggf {return 0,_dg .Errorf (_dbga ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_gdd );
};_fbef .ResolutionX =_agb .ResolutionX ;return _fbef .ResolutionX ,nil ;};func (_ege *Page )createStripedPage (_bba *_gg .PageInformationSegment )error {const _dega ="\u0063\u0072\u0065\u0061\u0074\u0065\u0053\u0074\u0072\u0069\u0070\u0065d\u0050\u0061\u0067\u0065";
_afb ,_dee :=_ege .collectPageStripes ();if _dee !=nil {return _dg .Wrap (_dee ,_dega ,"");};var _fbb int ;for _ ,_ccc :=range _afb {if _faf ,_dged :=_ccc .(*_gg .EndOfStripe );_dged {_fbb =_faf .LineNumber ()+1;}else {_aee :=_ccc .(_gg .Regioner );_cea :=_aee .GetRegionInfo ();
_bgc :=_ege .getCombinationOperator (_bba ,_cea .CombinaionOperator );_bdce ,_dad :=_aee .GetRegionBitmap ();if _dad !=nil {return _dg .Wrap (_dad ,_dega ,"");};_dad =_d .Blit (_bdce ,_ege .Bitmap ,int (_cea .XLocation ),_fbb ,_bgc );if _dad !=nil {return _dg .Wrap (_dad ,_dega ,"");
};};};return nil ;};func (_fc *Document )AddGenericPage (bm *_d .Bitmap ,duplicateLineRemoval bool )(_dbg error ){const _gga ="\u0044\u006f\u0063um\u0065\u006e\u0074\u002e\u0041\u0064\u0064\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0050\u0061\u0067\u0065";
if !_fc .FullHeaders &&_fc .NumberOfPages !=0{return _dg .Error (_gga ,"\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0070\u0061\u0067\u0065\u002e\u0020\u0046\u0069\u006c\u0065\u004d\u006f\u0064\u0065\u0020\u0064\u0069\u0073\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0064\u0064i\u006e\u0067\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e \u006f\u006e\u0065\u0020\u0070\u0061g\u0065");
};_fe :=&Page {Segments :[]*_gg .Header {},Bitmap :bm ,Document :_fc ,FinalHeight :bm .Height ,FinalWidth :bm .Width ,IsLossless :true ,BlackIsOne :bm .Color ==_d .Chocolate };_fe .PageNumber =int (_fc .nextPageNumber ());_fc .Pages [_fe .PageNumber ]=_fe ;
bm .InverseData ();_fe .AddPageInformationSegment ();if _dbg =_fe .AddGenericRegion (bm ,0,0,0,_gg .TImmediateGenericRegion ,duplicateLineRemoval );_dbg !=nil {return _dg .Wrap (_dbg ,_gga ,"");};if _fc .FullHeaders {_fe .AddEndOfPageSegment ();};return nil ;
};func (_fcc *Document )GetNumberOfPages ()(uint32 ,error ){if _fcc .NumberOfPagesUnknown ||_fcc .NumberOfPages ==0{if len (_fcc .Pages )==0{if _cdfa :=_fcc .mapData ();_cdfa !=nil {return 0,_dg .Wrap (_cdfa ,"\u0044o\u0063\u0075\u006d\u0065n\u0074\u002e\u0047\u0065\u0074N\u0075m\u0062e\u0072\u004f\u0066\u0050\u0061\u0067\u0065s","");
};};return uint32 (len (_fcc .Pages )),nil ;};return _fcc .NumberOfPages ,nil ;};func (_fegd *Page )collectPageStripes ()(_cgc []_gg .Segmenter ,_ada error ){const _dacdg ="\u0063o\u006cl\u0065\u0063\u0074\u0050\u0061g\u0065\u0053t\u0072\u0069\u0070\u0065\u0073";
var _gbfc _gg .Segmenter ;for _ ,_bdab :=range _fegd .Segments {switch _bdab .Type {case 6,7,22,23,38,39,42,43:_gbfc ,_ada =_bdab .GetSegmentData ();if _ada !=nil {return nil ,_dg .Wrap (_ada ,_dacdg ,"");};_cgc =append (_cgc ,_gbfc );case 50:_gbfc ,_ada =_bdab .GetSegmentData ();
if _ada !=nil {return nil ,_ada ;};_gca ,_dbf :=_gbfc .(*_gg .EndOfStripe );if !_dbf {return nil ,_dg .Errorf (_dacdg ,"\u0045\u006e\u0064\u004f\u0066\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u006f\u0066\u0020\u0076\u0061l\u0069\u0064\u0020\u0074\u0079p\u0065\u003a \u0027\u0025\u0054\u0027",_gbfc );
};_cgc =append (_cgc ,_gca );_fegd .FinalHeight =_gca .LineNumber ();};};return _cgc ,nil ;};func (_fbe *Document )reachedEOF (_edc int64 )(bool ,error ){const _fdb ="\u0072\u0065\u0061\u0063\u0068\u0065\u0064\u0045\u004f\u0046";_ ,_bdde :=_fbe .InputStream .Seek (_edc ,_eb .SeekStart );
if _bdde !=nil {_ga .Log .Debug ("\u0072\u0065\u0061c\u0068\u0065\u0064\u0045\u004f\u0046\u0020\u002d\u0020\u0064\u002e\u0049\u006e\u0070\u0075\u0074\u0053\u0074\u0072\u0065\u0061\u006d\u002e\u0053\u0065\u0065\u006b\u0020\u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_bdde );
return false ,_dg .Wrap (_bdde ,_fdb ,"\u0069n\u0070\u0075\u0074\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020s\u0065\u0065\u006b\u0020\u0066\u0061\u0069\u006c\u0065\u0064");};_ ,_bdde =_fbe .InputStream .ReadBits (32);if _bdde ==_eb .EOF {return true ,nil ;
}else if _bdde !=nil {return false ,_dg .Wrap (_bdde ,_fdb ,"");};return false ,nil ;};func (_fd *Document )AddClassifiedPage (bm *_d .Bitmap ,method _db .Method )(_af error ){const _bd ="\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002e\u0041\u0064d\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064P\u0061\u0067\u0065";
if !_fd .FullHeaders &&_fd .NumberOfPages !=0{return _dg .Error (_bd ,"\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0070\u0061\u0067\u0065\u002e\u0020\u0046\u0069\u006c\u0065\u004d\u006f\u0064\u0065\u0020\u0064\u0069\u0073\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0064\u0064i\u006e\u0067\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e \u006f\u006e\u0065\u0020\u0070\u0061g\u0065");
};if _fd .Classer ==nil {if _fd .Classer ,_af =_db .Init (_db .DefaultSettings ());_af !=nil {return _dg .Wrap (_af ,_bd ,"");};};_adg :=int (_fd .nextPageNumber ());_eg :=&Page {Segments :[]*_gg .Header {},Bitmap :bm ,Document :_fd ,FinalHeight :bm .Height ,FinalWidth :bm .Width ,PageNumber :_adg };
_fd .Pages [_adg ]=_eg ;switch method {case _db .RankHaus :_eg .EncodingMethod =RankHausEM ;case _db .Correlation :_eg .EncodingMethod =CorrelationEM ;};_eg .AddPageInformationSegment ();if _af =_fd .Classer .AddPage (bm ,_adg ,method );_af !=nil {return _dg .Wrap (_af ,_bd ,"");
};if _fd .FullHeaders {_eg .AddEndOfPageSegment ();};return nil ;};func InitEncodeDocument (fullHeaders bool )*Document {return &Document {FullHeaders :fullHeaders ,_fbd :_fg .BufferedMSB (),Pages :map[int ]*Page {},_ea :map[int ][]int {},_aa :map[int ]int {},_ff :map[int ][]int {}};
};func (_gcf *Page )getWidth ()(int ,error ){const _bfg ="\u0067\u0065\u0074\u0057\u0069\u0064\u0074\u0068";if _gcf .FinalWidth !=0{return _gcf .FinalWidth ,nil ;};_ede :=_gcf .getPageInformationSegment ();if _ede ==nil {return 0,_dg .Error (_bfg ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");
};_cffc ,_baf :=_ede .GetSegmentData ();if _baf !=nil {return 0,_dg .Wrap (_baf ,_bfg ,"");};_gff ,_dgdc :=_cffc .(*_gg .PageInformationSegment );if !_dgdc {return 0,_dg .Errorf (_bfg ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_cffc );
};_gcf .FinalWidth =_gff .PageBMWidth ;return _gcf .FinalWidth ,nil ;};func (_efg *Page )getHeight ()(int ,error ){const _acf ="\u0067e\u0074\u0048\u0065\u0069\u0067\u0068t";if _efg .FinalHeight !=0{return _efg .FinalHeight ,nil ;};_bfb :=_efg .getPageInformationSegment ();
if _bfb ==nil {return 0,_dg .Error (_acf ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_fefg ,_edf :=_bfb .GetSegmentData ();if _edf !=nil {return 0,_dg .Wrap (_edf ,_acf ,"");};_cff ,_dffe :=_fefg .(*_gg .PageInformationSegment );
if !_dffe {return 0,_dg .Errorf (_acf ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_fefg );
};if _cff .PageBMHeight ==_a .MaxInt32 {_ ,_edf =_efg .GetBitmap ();if _edf !=nil {return 0,_dg .Wrap (_edf ,_acf ,"");};}else {_efg .FinalHeight =_cff .PageBMHeight ;};return _efg .FinalHeight ,nil ;};func (_fca *Document )produceClassifiedPage (_cdb *Page ,_fec *_gg .Header )(_afg error ){const _ebc ="p\u0072\u006f\u0064\u0075ce\u0043l\u0061\u0073\u0073\u0069\u0066i\u0065\u0064\u0050\u0061\u0067\u0065";
var _gge map[int ]int ;_ggd :=_fca ._de ;_ae :=[]*_gg .Header {_fec };if len (_fca ._ea [_cdb .PageNumber ])> 0{_gge =map[int ]int {};_gb ,_gbe :=_fca .addSymbolDictionary (_cdb .PageNumber ,_fca .Classer .UndilatedTemplates ,_fca ._ea [_cdb .PageNumber ],_gge ,false );
if _gbe !=nil {return _dg .Wrap (_gbe ,_ebc ,"");};_ae =append (_ae ,_gb );_ggd +=len (_fca ._ea [_cdb .PageNumber ]);};_da :=_fca ._ff [_cdb .PageNumber ];_ga .Log .Debug ("P\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020c\u006f\u006d\u0070\u0073: \u0025\u0076",_cdb .PageNumber ,_da );
_cdb .addTextRegionSegment (_ae ,_fca ._aa ,_gge ,_fca ._ff [_cdb .PageNumber ],_fca .Classer .PtaLL ,_fca .Classer .UndilatedTemplates ,_fca .Classer .ClassIDs ,nil ,_dd (_ggd ),len (_fca ._ff [_cdb .PageNumber ]));return nil ;};func (_feg *Page )composePageBitmap ()error {const _dfg ="\u0063\u006f\u006d\u0070\u006f\u0073\u0065\u0050\u0061\u0067\u0065\u0042i\u0074\u006d\u0061\u0070";
if _feg .PageNumber ==0{return nil ;};_aeg :=_feg .getPageInformationSegment ();if _aeg ==nil {return _dg .Error (_dfg ,"\u0070\u0061\u0067e \u0069\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069o\u006e \u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
};_dacd ,_gcb :=_aeg .GetSegmentData ();if _gcb !=nil {return _gcb ;};_gafd ,_gce :=_dacd .(*_gg .PageInformationSegment );if !_gce {return _dg .Error (_dfg ,"\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006da\u0074\u0069\u006f\u006e \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");
};if _gcb =_feg .createPage (_gafd );_gcb !=nil {return _dg .Wrap (_gcb ,_dfg ,"");};_feg .clearSegmentData ();return nil ;};type Document struct{Pages map[int ]*Page ;NumberOfPagesUnknown bool ;NumberOfPages uint32 ;GBUseExtTemplate bool ;InputStream _fg .StreamReader ;
GlobalSegments *Globals ;OrganizationType _gg .OrganizationType ;Classer *_db .Classer ;XRes ,YRes int ;FullHeaders bool ;CurrentSegmentNumber uint32 ;AverageTemplates *_d .Bitmaps ;BaseIndexes []int ;Refinement bool ;RefineLevel int ;_fb uint8 ;_fbd *_fg .BufferedWriter ;
EncodeGlobals bool ;_de int ;_ea map[int ][]int ;_ff map[int ][]int ;_c []int ;_aa map[int ]int ;};func (_ebfg *Page )Encode (w _fg .BinaryWriter )(_cadd int ,_gfc error ){const _cda ="P\u0061\u0067\u0065\u002e\u0045\u006e\u0063\u006f\u0064\u0065";var _ecda int ;
for _ ,_ffeg :=range _ebfg .Segments {if _ecda ,_gfc =_ffeg .Encode (w );_gfc !=nil {return _cadd ,_dg .Wrap (_gfc ,_cda ,"");};_cadd +=_ecda ;};return _cadd ,nil ;};func _dd (_dc int )int {_fgd :=0;_bee :=(_dc &(_dc -1))==0;_dc >>=1;for ;_dc !=0;_dc >>=1{_fgd ++;
};if _bee {return _fgd ;};return _fgd +1;};func (_aebc *Document )encodeEOFHeader (_abf _fg .BinaryWriter )(_daa int ,_ebf error ){_age :=&_gg .Header {SegmentNumber :_aebc .nextSegmentNumber (),Type :_gg .TEndOfFile };if _daa ,_ebf =_age .Encode (_abf );
_ebf !=nil {return 0,_dg .Wrap (_ebf ,"\u0065n\u0063o\u0064\u0065\u0045\u004f\u0046\u0048\u0065\u0061\u0064\u0065\u0072","");};return _daa ,nil ;};func (_bdcb *Page )GetHeight ()(int ,error ){return _bdcb .getHeight ()};type EncodingMethod int ;func (_gbc *Page )AddPageInformationSegment (){_dcff :=&_gg .PageInformationSegment {PageBMWidth :_gbc .FinalWidth ,PageBMHeight :_gbc .FinalHeight ,ResolutionX :_gbc .ResolutionX ,ResolutionY :_gbc .ResolutionY ,IsLossless :_gbc .IsLossless };
if _gbc .BlackIsOne {_dcff .DefaultPixelValue =uint8 (0x1);};_ddd :=&_gg .Header {PageAssociation :_gbc .PageNumber ,SegmentDataLength :uint64 (_dcff .Size ()),SegmentData :_dcff ,Type :_gg .TPageInformation };_gbc .Segments =append (_gbc .Segments ,_ddd );
};func (_dce *Document )GetPage (pageNumber int )(_gg .Pager ,error ){const _fbdc ="\u0044\u006fc\u0075\u006d\u0065n\u0074\u002e\u0047\u0065\u0074\u0050\u0061\u0067\u0065";if pageNumber < 0{_ga .Log .Debug ("\u004a\u0042\u0049\u00472\u0020\u0050\u0061\u0067\u0065\u0020\u002d\u0020\u0047e\u0074\u0050\u0061\u0067\u0065\u003a\u0020\u0025\u0064\u002e\u0020\u0050\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062e\u0020\u006c\u006f\u0077\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0030\u002e\u0020\u0025\u0073",pageNumber ,_ab .Stack ());
return nil ,_dg .Errorf (_fbdc ,"\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032\u0020d\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020\u002d\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064 \u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u003a\u0020\u0025\u0064",pageNumber );
};if pageNumber > len (_dce .Pages ){_ga .Log .Debug ("\u0050\u0061\u0067\u0065 n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0064\u002e\u0020%\u0073",pageNumber ,_ab .Stack ());return nil ,_dg .Error (_fbdc ,"\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065n\u0074\u0020\u002d\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};_ggdb ,_caf :=_dce .Pages [pageNumber ];if !_caf {_ga .Log .Debug ("\u0050\u0061\u0067\u0065 n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0064\u002e\u0020%\u0073",pageNumber ,_ab .Stack ());return nil ,_dg .Errorf (_fbdc ,"\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065n\u0074\u0020\u002d\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};return _ggdb ,nil ;};func (_ggec *Page )getCombinationOperator (_ffbe *_gg .PageInformationSegment ,_agf _d .CombinationOperator )_d .CombinationOperator {if _ffbe .CombinationOperatorOverrideAllowed (){return _agf ;};return _ffbe .CombinationOperator ();
};func (_ebg *Document )encodeFileHeader (_ffe _fg .BinaryWriter )(_gba int ,_cee error ){const _gbd ="\u0065\u006ec\u006f\u0064\u0065F\u0069\u006c\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_gba ,_cee =_ffe .Write (_b );if _cee !=nil {return _gba ,_dg .Wrap (_cee ,_gbd ,"\u0069\u0064");
};if _cee =_ffe .WriteByte (0x01);_cee !=nil {return _gba ,_dg .Wrap (_cee ,_gbd ,"\u0066\u006c\u0061g\u0073");};_gba ++;_gac :=make ([]byte ,4);_g .BigEndian .PutUint32 (_gac ,_ebg .NumberOfPages );_bec ,_cee :=_ffe .Write (_gac );if _cee !=nil {return _bec ,_dg .Wrap (_cee ,_gbd ,"p\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");
};_gba +=_bec ;return _gba ,nil ;};func (_cgf *Globals )AddSegment (segment *_gg .Header ){_cgf .Segments =append (_cgf .Segments ,segment )};const (GenericEM EncodingMethod =iota ;CorrelationEM ;RankHausEM ;);var _b =[]byte {0x97,0x4A,0x42,0x32,0x0D,0x0A,0x1A,0x0A};
func (_begd *Document )parseFileHeader ()error {const _abc ="\u0070a\u0072s\u0065\u0046\u0069\u006c\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_ ,_geaf :=_begd .InputStream .Seek (8,_eb .SeekStart );if _geaf !=nil {return _dg .Wrap (_geaf ,_abc ,"\u0069\u0064");
};_ ,_geaf =_begd .InputStream .ReadBits (5);if _geaf !=nil {return _dg .Wrap (_geaf ,_abc ,"\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074\u0073");};_abe ,_geaf :=_begd .InputStream .ReadBit ();if _geaf !=nil {return _dg .Wrap (_geaf ,_abc ,"\u0065x\u0074e\u006e\u0064\u0065\u0064\u0020t\u0065\u006dp\u006c\u0061\u0074\u0065\u0073");
};if _abe ==1{_begd .GBUseExtTemplate =true ;};_abe ,_geaf =_begd .InputStream .ReadBit ();if _geaf !=nil {return _dg .Wrap (_geaf ,_abc ,"\u0075\u006e\u006b\u006eow\u006e\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};if _abe !=1{_begd .NumberOfPagesUnknown =false ;
};_abe ,_geaf =_begd .InputStream .ReadBit ();if _geaf !=nil {return _dg .Wrap (_geaf ,_abc ,"\u006f\u0072\u0067\u0061\u006e\u0069\u007a\u0061\u0074\u0069\u006f\u006e \u0074\u0079\u0070\u0065");};_begd .OrganizationType =_gg .OrganizationType (_abe );if !_begd .NumberOfPagesUnknown {_begd .NumberOfPages ,_geaf =_begd .InputStream .ReadUint32 ();
if _geaf !=nil {return _dg .Wrap (_geaf ,_abc ,"\u006eu\u006db\u0065\u0072\u0020\u006f\u0066\u0020\u0070\u0061\u0067\u0065\u0073");};_begd ._fb =13;};return nil ;};func _dcea (_adb _fg .StreamReader ,_becb *Globals )(*Document ,error ){_fa :=&Document {Pages :make (map[int ]*Page ),InputStream :_adb ,OrganizationType :_gg .OSequential ,NumberOfPagesUnknown :true ,GlobalSegments :_becb ,_fb :9};
if _fa .GlobalSegments ==nil {_fa .GlobalSegments =&Globals {};};if _ecg :=_fa .mapData ();_ecg !=nil {return nil ,_ecg ;};return _fa ,nil ;};func (_cc *Document )Encode ()(_dge []byte ,_ec error ){const _dgd ="\u0044o\u0063u\u006d\u0065\u006e\u0074\u002e\u0045\u006e\u0063\u006f\u0064\u0065";
var _bdg ,_dfb int ;if _cc .FullHeaders {if _bdg ,_ec =_cc .encodeFileHeader (_cc ._fbd );_ec !=nil {return nil ,_dg .Wrap (_ec ,_dgd ,"");};};var (_cef bool ;_bab *_gg .Header ;_abb *Page ;);if _ec =_cc .completeClassifiedPages ();_ec !=nil {return nil ,_dg .Wrap (_ec ,_dgd ,"");
};if _ec =_cc .produceClassifiedPages ();_ec !=nil {return nil ,_dg .Wrap (_ec ,_dgd ,"");};if _cc .GlobalSegments !=nil {for _ ,_bab =range _cc .GlobalSegments .Segments {if _ec =_cc .encodeSegment (_bab ,&_bdg );_ec !=nil {return nil ,_dg .Wrap (_ec ,_dgd ,"");
};};};for _bg :=1;_bg <=int (_cc .NumberOfPages );_bg ++{if _abb ,_cef =_cc .Pages [_bg ];!_cef {return nil ,_dg .Errorf (_dgd ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_bg );};for _ ,_bab =range _abb .Segments {if _ec =_cc .encodeSegment (_bab ,&_bdg );
_ec !=nil {return nil ,_dg .Wrap (_ec ,_dgd ,"");};};};if _cc .FullHeaders {if _dfb ,_ec =_cc .encodeEOFHeader (_cc ._fbd );_ec !=nil {return nil ,_dg .Wrap (_ec ,_dgd ,"");};_bdg +=_dfb ;};_dge =_cc ._fbd .Data ();if len (_dge )!=_bdg {_ga .Log .Debug ("\u0042\u0079\u0074\u0065\u0073 \u0077\u0072\u0069\u0074\u0074\u0065\u006e \u0028\u006e\u0029\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0065\u0071\u0075\u0061\u006c\u0020\u0074\u006f\u0020\u0074\u0068\u0065\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006f\u0066\u0020t\u0068\u0065\u0020\u0064\u0061\u0074\u0061\u0020\u0065\u006e\u0063\u006fd\u0065\u0064\u003a\u0020\u0027\u0025d\u0027",_bdg ,len (_dge ));
};return _dge ,nil ;};func (_ecd *Globals )GetSymbolDictionary ()(*_gg .Header ,error ){const _ecgc ="G\u006c\u006f\u0062\u0061\u006c\u0073.\u0047\u0065\u0074\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079";if _ecd ==nil {return nil ,_dg .Error (_ecgc ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};if len (_ecd .Segments )==0{return nil ,_dg .Error (_ecgc ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");};for _ ,_cbd :=range _ecd .Segments {if _cbd .Type ==_gg .TSymbolDictionary {return _cbd ,nil ;
};};return nil ,_dg .Error (_ecgc ,"\u0067\u006c\u006fba\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020d\u0069c\u0074i\u006fn\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};func (_beb *Globals )GetSegment (segmentNumber int )(*_gg .Header ,error ){const _gaf ="\u0047l\u006fb\u0061\u006c\u0073\u002e\u0047e\u0074\u0053e\u0067\u006d\u0065\u006e\u0074";
if _beb ==nil {return nil ,_dg .Error (_gaf ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_beb .Segments )==0{return nil ,_dg .Error (_gaf ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");
};var _fdg *_gg .Header ;for _ ,_fdg =range _beb .Segments {if _fdg .SegmentNumber ==uint32 (segmentNumber ){break ;};};if _fdg ==nil {return nil ,_dg .Error (_gaf ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};return _fdg ,nil ;};func (_ef *Document )produceClassifiedPages ()(_geb error ){const _def ="\u0070\u0072\u006f\u0064uc\u0065\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0050\u0061\u0067e\u0073";if _ef .Classer ==nil {return nil ;};var (_dbb *Page ;
_ged bool ;_gea *_gg .Header ;);for _ba :=1;_ba <=int (_ef .NumberOfPages );_ba ++{if _dbb ,_ged =_ef .Pages [_ba ];!_ged {return _dg .Errorf (_def ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_ba );
};if _dbb .EncodingMethod ==GenericEM {continue ;};if _gea ==nil {if _gea ,_geb =_ef .GlobalSegments .GetSymbolDictionary ();_geb !=nil {return _dg .Wrap (_geb ,_def ,"");};};if _geb =_ef .produceClassifiedPage (_dbb ,_gea );_geb !=nil {return _dg .Wrapf (_geb ,_def ,"\u0070\u0061\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027",_ba );
};};return nil ;};func (_be *Document )completeClassifiedPages ()(_bf error ){const _cd ="\u0063\u006f\u006dpl\u0065\u0074\u0065\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0050\u0061\u0067\u0065\u0073";if _be .Classer ==nil {return nil ;
};_be ._c =make ([]int ,_be .Classer .UndilatedTemplates .Size ());for _afa :=0;_afa < _be .Classer .ClassIDs .Size ();_afa ++{_fda ,_bff :=_be .Classer .ClassIDs .Get (_afa );if _bff !=nil {return _dg .Wrapf (_bff ,_cd ,"\u0063\u006c\u0061\u0073s \u0077\u0069\u0074\u0068\u0020\u0069\u0064\u003a\u0020\u0027\u0025\u0064\u0027",_afa );
};_be ._c [_fda ]++;};var _ed []int ;for _dbgb :=0;_dbgb < _be .Classer .UndilatedTemplates .Size ();_dbgb ++{if _be .NumberOfPages ==1||_be ._c [_dbgb ]> 1{_ed =append (_ed ,_dbgb );};};var (_bdf *Page ;_ac bool ;);for _cg ,_gf :=range *_be .Classer .ComponentPageNumbers {if _bdf ,_ac =_be .Pages [_gf ];
!_ac {return _dg .Errorf (_cd ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_cg );};if _bdf .EncodingMethod ==GenericEM {_ga .Log .Error ("\u0047\u0065\u006e\u0065\u0072\u0069c\u0020\u0070\u0061g\u0065\u0020\u0077i\u0074\u0068\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u003a \u0027\u0025\u0064\u0027\u0020ma\u0070\u0070\u0065\u0064\u0020\u0061\u0073\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0020\u0070\u0061\u0067\u0065",_cg );
continue ;};_be ._ff [_gf ]=append (_be ._ff [_gf ],_cg );_ce ,_ge :=_be .Classer .ClassIDs .Get (_cg );if _ge !=nil {return _dg .Wrapf (_ge ,_cd ,"\u006e\u006f\u0020\u0073uc\u0068\u0020\u0063\u006c\u0061\u0073\u0073\u0049\u0044\u003a\u0020\u0025\u0064",_cg );
};if _be ._c [_ce ]==1&&_be .NumberOfPages !=1{_fcg :=append (_be ._ea [_gf ],_ce );_be ._ea [_gf ]=_fcg ;};};if _bf =_be .Classer .ComputeLLCorners ();_bf !=nil {return _dg .Wrap (_bf ,_cd ,"");};if _ ,_bf =_be .addSymbolDictionary (0,_be .Classer .UndilatedTemplates ,_ed ,_be ._aa ,false );
_bf !=nil {return _dg .Wrap (_bf ,_cd ,"");};return nil ;};func (_aebg *Document )nextPageNumber ()uint32 {_aebg .NumberOfPages ++;return _aebg .NumberOfPages };func (_dcc *Page )GetSegment (number int )(*_gg .Header ,error ){const _dgdd ="\u0050a\u0067e\u002e\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074";
for _ ,_beee :=range _dcc .Segments {if _beee .SegmentNumber ==uint32 (number ){return _beee ,nil ;};};_fddc :=make ([]uint32 ,len (_dcc .Segments ));for _bdga ,_dca :=range _dcc .Segments {_fddc [_bdga ]=_dca .SegmentNumber ;};return nil ,_dg .Errorf (_dgdd ,"\u0073e\u0067\u006d\u0065n\u0074\u0020\u0077i\u0074h \u006e\u0075\u006d\u0062\u0065\u0072\u003a \u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0070\u0061\u0067\u0065\u003a\u0020'%\u0064'\u002e\u0020\u004b\u006e\u006f\u0077n\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u003a \u0025\u0076",number ,_dcc .PageNumber ,_fddc );
};func DecodeDocument (input _fg .StreamReader ,globals *Globals )(*Document ,error ){return _dcea (input ,globals );};func (_aef *Page )AddEndOfPageSegment (){_cbdc :=&_gg .Header {Type :_gg .TEndOfPage ,PageAssociation :_aef .PageNumber };_aef .Segments =append (_aef .Segments ,_cbdc );
};