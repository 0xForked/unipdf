//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package document ;import (_b "encoding/binary";_e "fmt";_bb "github.com/unidoc/unipdf/v3/common";_a "github.com/unidoc/unipdf/v3/internal/bitwise";_g "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_d "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";
_fg "github.com/unidoc/unipdf/v3/internal/jbig2/document/segments";_cd "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/classer";_dc "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_fd "io";_f "math";_be "runtime/debug";);func (_gec *Document )GetPage (pageNumber int )(_fg .Pager ,error ){const _ggc ="\u0044\u006fc\u0075\u006d\u0065n\u0074\u002e\u0047\u0065\u0074\u0050\u0061\u0067\u0065";
if pageNumber < 0{_bb .Log .Debug ("\u004a\u0042\u0049\u00472\u0020\u0050\u0061\u0067\u0065\u0020\u002d\u0020\u0047e\u0074\u0050\u0061\u0067\u0065\u003a\u0020\u0025\u0064\u002e\u0020\u0050\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062e\u0020\u006c\u006f\u0077\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0030\u002e\u0020\u0025\u0073",pageNumber ,_be .Stack ());
return nil ,_dc .Errorf (_ggc ,"\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032\u0020d\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020\u002d\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064 \u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u003a\u0020\u0025\u0064",pageNumber );
};if pageNumber > len (_gec .Pages ){_bb .Log .Debug ("\u0050\u0061\u0067\u0065 n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0064\u002e\u0020%\u0073",pageNumber ,_be .Stack ());return nil ,_dc .Error (_ggc ,"\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065n\u0074\u0020\u002d\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};_bgf ,_dee :=_gec .Pages [pageNumber ];if !_dee {_bb .Log .Debug ("\u0050\u0061\u0067\u0065 n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0064\u002e\u0020%\u0073",pageNumber ,_be .Stack ());return nil ,_dc .Errorf (_ggc ,"\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065n\u0074\u0020\u002d\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};return _bgf ,nil ;};func _bf (_ed int )int {_dgd :=0;_bda :=(_ed &(_ed -1))==0;_ed >>=1;for ;_ed !=0;_ed >>=1{_dgd ++;};if _bda {return _dgd ;};return _dgd +1;};func (_efe *Document )encodeEOFHeader (_gbeg _a .BinaryWriter )(_gd int ,_fgd error ){_bgg :=&_fg .Header {SegmentNumber :_efe .nextSegmentNumber (),Type :_fg .TEndOfFile };
if _gd ,_fgd =_bgg .Encode (_gbeg );_fgd !=nil {return 0,_dc .Wrap (_fgd ,"\u0065n\u0063o\u0064\u0065\u0045\u004f\u0046\u0048\u0065\u0061\u0064\u0065\u0072","");};return _gd ,nil ;};func (_aeg *Document )completeClassifiedPages ()(_ffg error ){const _ec ="\u0063\u006f\u006dpl\u0065\u0074\u0065\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0050\u0061\u0067\u0065\u0073";
if _aeg .Classer ==nil {return nil ;};_aeg ._eg =make ([]int ,_aeg .Classer .UndilatedTemplates .Size ());for _ad :=0;_ad < _aeg .Classer .ClassIDs .Size ();_ad ++{_efa ,_de :=_aeg .Classer .ClassIDs .Get (_ad );if _de !=nil {return _dc .Wrapf (_de ,_ec ,"\u0063\u006c\u0061\u0073s \u0077\u0069\u0074\u0068\u0020\u0069\u0064\u003a\u0020\u0027\u0025\u0064\u0027",_ad );
};_aeg ._eg [_efa ]++;};var _ca []int ;for _da :=0;_da < _aeg .Classer .UndilatedTemplates .Size ();_da ++{if _aeg .NumberOfPages ==1||_aeg ._eg [_da ]> 1{_ca =append (_ca ,_da );};};var (_bbe *Page ;_bae bool ;);for _dce ,_ea :=range *_aeg .Classer .ComponentPageNumbers {if _bbe ,_bae =_aeg .Pages [_ea ];
!_bae {return _dc .Errorf (_ec ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_dce );};if _bbe .EncodingMethod ==GenericEM {_bb .Log .Error ("\u0047\u0065\u006e\u0065\u0072\u0069c\u0020\u0070\u0061g\u0065\u0020\u0077i\u0074\u0068\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u003a \u0027\u0025\u0064\u0027\u0020ma\u0070\u0070\u0065\u0064\u0020\u0061\u0073\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0020\u0070\u0061\u0067\u0065",_dce );
continue ;};_aeg ._df [_ea ]=append (_aeg ._df [_ea ],_dce );_fdb ,_dde :=_aeg .Classer .ClassIDs .Get (_dce );if _dde !=nil {return _dc .Wrapf (_dde ,_ec ,"\u006e\u006f\u0020\u0073uc\u0068\u0020\u0063\u006c\u0061\u0073\u0073\u0049\u0044\u003a\u0020\u0025\u0064",_dce );
};if _aeg ._eg [_fdb ]==1&&_aeg .NumberOfPages !=1{_gg :=append (_aeg ._cc [_ea ],_fdb );_aeg ._cc [_ea ]=_gg ;};};if _ffg =_aeg .Classer .ComputeLLCorners ();_ffg !=nil {return _dc .Wrap (_ffg ,_ec ,"");};if _ ,_ffg =_aeg .addSymbolDictionary (0,_aeg .Classer .UndilatedTemplates ,_ca ,_aeg ._fb ,false );
_ffg !=nil {return _dc .Wrap (_ffg ,_ec ,"");};return nil ;};func (_cba *Document )isFileHeaderPresent ()(bool ,error ){_cba .InputStream .Mark ();for _ ,_efac :=range _dg {_ffae ,_gdb :=_cba .InputStream .ReadByte ();if _gdb !=nil {return false ,_gdb ;
};if _efac !=_ffae {_cba .InputStream .Reset ();return false ,nil ;};};_cba .InputStream .Reset ();return true ,nil ;};func (_efg *Document )addSymbolDictionary (_db int ,_bgc *_d .Bitmaps ,_fdc []int ,_ge map[int ]int ,_dba bool )(*_fg .Header ,error ){const _bdc ="\u0061\u0064\u0064\u0053ym\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079";
_bbd :=&_fg .SymbolDictionary {};if _bgd :=_bbd .InitEncode (_bgc ,_fdc ,_ge ,_dba );_bgd !=nil {return nil ,_bgd ;};_eff :=&_fg .Header {Type :_fg .TSymbolDictionary ,PageAssociation :_db ,SegmentData :_bbd };if _db ==0{if _efg .GlobalSegments ==nil {_efg .GlobalSegments =&Globals {};
};_efg .GlobalSegments .AddSegment (_eff );return _eff ,nil ;};_bbg ,_baf :=_efg .Pages [_db ];if !_baf {return nil ,_dc .Errorf (_bdc ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_db );};var (_ffc int ;
_aad *_fg .Header ;);for _ffc ,_aad =range _bbg .Segments {if _aad .Type ==_fg .TPageInformation {break ;};};_ffc ++;_bbg .Segments =append (_bbg .Segments ,nil );copy (_bbg .Segments [_ffc +1:],_bbg .Segments [_ffc :]);_bbg .Segments [_ffc ]=_eff ;return _eff ,nil ;
};func (_ab *Globals )GetSegmentByIndex (index int )(*_fg .Header ,error ){const _abe ="\u0047l\u006f\u0062\u0061\u006cs\u002e\u0047\u0065\u0074\u0053e\u0067m\u0065n\u0074\u0042\u0079\u0049\u006e\u0064\u0065x";if _ab ==nil {return nil ,_dc .Error (_abe ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};if len (_ab .Segments )==0{return nil ,_dc .Error (_abe ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");};if index > len (_ab .Segments )-1{return nil ,_dc .Error (_abe ,"\u0069n\u0064e\u0078\u0020\u006f\u0075\u0074 \u006f\u0066 \u0072\u0061\u006e\u0067\u0065");
};return _ab .Segments [index ],nil ;};func (_eb *Document )produceClassifiedPage (_cg *Page ,_gb *_fg .Header )(_fed error ){const _ggg ="p\u0072\u006f\u0064\u0075ce\u0043l\u0061\u0073\u0073\u0069\u0066i\u0065\u0064\u0050\u0061\u0067\u0065";var _cf map[int ]int ;
_beg :=_eb ._fe ;_bdd :=[]*_fg .Header {_gb };if len (_eb ._cc [_cg .PageNumber ])> 0{_cf =map[int ]int {};_fee ,_cgd :=_eb .addSymbolDictionary (_cg .PageNumber ,_eb .Classer .UndilatedTemplates ,_eb ._cc [_cg .PageNumber ],_cf ,false );if _cgd !=nil {return _dc .Wrap (_cgd ,_ggg ,"");
};_bdd =append (_bdd ,_fee );_beg +=len (_eb ._cc [_cg .PageNumber ]);};_gbe :=_eb ._df [_cg .PageNumber ];_bb .Log .Debug ("P\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020c\u006f\u006d\u0070\u0073: \u0025\u0076",_cg .PageNumber ,_gbe );_cg .addTextRegionSegment (_bdd ,_eb ._fb ,_cf ,_eb ._df [_cg .PageNumber ],_eb .Classer .PtaLL ,_eb .Classer .UndilatedTemplates ,_eb .Classer .ClassIDs ,nil ,_bf (_beg ),len (_eb ._df [_cg .PageNumber ]));
return nil ;};func (_cde *Document )encodeSegment (_bc *_fg .Header ,_ccc *int )error {const _ee ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074";_bc .SegmentNumber =_cde .nextSegmentNumber ();_acd ,_bbgc :=_bc .Encode (_cde ._ae );
if _bbgc !=nil {return _dc .Wrapf (_bbgc ,_ee ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_bc .SegmentNumber );};*_ccc +=_acd ;return nil ;};func (_cec *Page )GetHeight ()(int ,error ){return _cec .getHeight ()};func (_aaf *Page )GetBitmap ()(_cfc *_d .Bitmap ,_bec error ){_bb .Log .Trace (_e .Sprintf ("\u005b\u0050\u0041G\u0045\u005d\u005b\u0023%\u0064\u005d\u0020\u0047\u0065\u0074\u0042i\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e",_aaf .PageNumber ));
defer func (){if _bec !=nil {_bb .Log .Trace (_e .Sprintf ("\u005b\u0050\u0041\u0047\u0045\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074B\u0069t\u006d\u0061\u0070\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_aaf .PageNumber ,_bec ));
}else {_bb .Log .Trace (_e .Sprintf ("\u005b\u0050\u0041\u0047\u0045\u005d\u005b\u0023\u0025\u0064]\u0020\u0047\u0065\u0074\u0042\u0069\u0074m\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064",_aaf .PageNumber ));};}();if _aaf .Bitmap !=nil {return _aaf .Bitmap ,nil ;
};_bec =_aaf .composePageBitmap ();if _bec !=nil {return nil ,_bec ;};return _aaf .Bitmap ,nil ;};func (_fda *Document )determineRandomDataOffsets (_ddd []*_fg .Header ,_ddeb uint64 ){if _fda .OrganizationType !=_fg .ORandom {return ;};for _ ,_ecf :=range _ddd {_ecf .SegmentDataStartOffset =_ddeb ;
_ddeb +=_ecf .SegmentDataLength ;};};func DecodeDocument (input *_a .Reader ,globals *Globals )(*Document ,error ){return _gce (input ,globals );};func (_bged *Page )createNormalPage (_gdbfa *_fg .PageInformationSegment )error {const _aga ="\u0063\u0072e\u0061\u0074\u0065N\u006f\u0072\u006d\u0061\u006c\u0050\u0061\u0067\u0065";
_bged .Bitmap =_d .New (_gdbfa .PageBMWidth ,_gdbfa .PageBMHeight );if _gdbfa .DefaultPixelValue !=0{_bged .Bitmap .SetDefaultPixel ();};for _ ,_acdb :=range _bged .Segments {switch _acdb .Type {case 6,7,22,23,38,39,42,43:_bb .Log .Trace ("\u0047\u0065\u0074\u0074in\u0067\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0064",_acdb .SegmentNumber );
_bac ,_bce :=_acdb .GetSegmentData ();if _bce !=nil {return _bce ;};_fgca ,_bafa :=_bac .(_fg .Regioner );if !_bafa {_bb .Log .Debug ("\u0053\u0065g\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069on\u0065\u0072",_bac );
return _dc .Errorf (_aga ,"i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062i\u0067\u0032\u0020\u0073\u0065\u0067\u006den\u0074\u0020\u0074\u0079p\u0065\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061 R\u0065\u0067i\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_bac );
};_aba ,_bce :=_fgca .GetRegionBitmap ();if _bce !=nil {return _dc .Wrap (_bce ,_aga ,"");};if _bged .fitsPage (_gdbfa ,_aba ){_bged .Bitmap =_aba ;}else {_ecg :=_fgca .GetRegionInfo ();_ggdd :=_bged .getCombinationOperator (_gdbfa ,_ecg .CombinaionOperator );
_bce =_d .Blit (_aba ,_bged .Bitmap ,int (_ecg .XLocation ),int (_ecg .YLocation ),_ggdd );if _bce !=nil {return _dc .Wrap (_bce ,_aga ,"");};};};};return nil ;};type Globals struct{Segments []*_fg .Header ;};func (_dddg *Globals )AddSegment (segment *_fg .Header ){_dddg .Segments =append (_dddg .Segments ,segment );
};func (_cb *Document )produceClassifiedPages ()(_ccg error ){const _ac ="\u0070\u0072\u006f\u0064uc\u0065\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0050\u0061\u0067e\u0073";if _cb .Classer ==nil {return nil ;};var (_aa *Page ;_aac bool ;
_ecc *_fg .Header ;);for _egb :=1;_egb <=int (_cb .NumberOfPages );_egb ++{if _aa ,_aac =_cb .Pages [_egb ];!_aac {return _dc .Errorf (_ac ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_egb );};if _aa .EncodingMethod ==GenericEM {continue ;
};if _ecc ==nil {if _ecc ,_ccg =_cb .GlobalSegments .GetSymbolDictionary ();_ccg !=nil {return _dc .Wrap (_ccg ,_ac ,"");};};if _ccg =_cb .produceClassifiedPage (_aa ,_ecc );_ccg !=nil {return _dc .Wrapf (_ccg ,_ac ,"\u0070\u0061\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027",_egb );
};};return nil ;};func (_aed *Page )getHeight ()(int ,error ){const _gff ="\u0067e\u0074\u0048\u0065\u0069\u0067\u0068t";if _aed .FinalHeight !=0{return _aed .FinalHeight ,nil ;};_gad :=_aed .getPageInformationSegment ();if _gad ==nil {return 0,_dc .Error (_gff ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");
};_ebgb ,_gebd :=_gad .GetSegmentData ();if _gebd !=nil {return 0,_dc .Wrap (_gebd ,_gff ,"");};_bdae ,_dafd :=_ebgb .(*_fg .PageInformationSegment );if !_dafd {return 0,_dc .Errorf (_gff ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_ebgb );
};if _bdae .PageBMHeight ==_f .MaxInt32 {_ ,_gebd =_aed .GetBitmap ();if _gebd !=nil {return 0,_dc .Wrap (_gebd ,_gff ,"");};}else {_aed .FinalHeight =_bdae .PageBMHeight ;};return _aed .FinalHeight ,nil ;};func (_bgfa *Page )Encode (w _a .BinaryWriter )(_edd int ,_efaf error ){const _fbgg ="P\u0061\u0067\u0065\u002e\u0045\u006e\u0063\u006f\u0064\u0065";
var _gedg int ;for _ ,_cee :=range _bgfa .Segments {if _gedg ,_efaf =_cee .Encode (w );_efaf !=nil {return _edd ,_dc .Wrap (_efaf ,_fbgg ,"");};_edd +=_gedg ;};return _edd ,nil ;};func (_bab *Page )getCombinationOperator (_dafg *_fg .PageInformationSegment ,_gab _d .CombinationOperator )_d .CombinationOperator {if _dafg .CombinationOperatorOverrideAllowed (){return _gab ;
};return _dafg .CombinationOperator ();};func (_dgdd *Document )nextPageNumber ()uint32 {_dgdd .NumberOfPages ++;return _dgdd .NumberOfPages };func (_cca *Page )getResolutionX ()(int ,error ){const _ceg ="\u0067\u0065\u0074\u0052\u0065\u0073\u006f\u006c\u0075t\u0069\u006f\u006e\u0058";
if _cca .ResolutionX !=0{return _cca .ResolutionX ,nil ;};_ffcb :=_cca .getPageInformationSegment ();if _ffcb ==nil {return 0,_dc .Error (_ceg ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_adg ,_acc :=_ffcb .GetSegmentData ();
if _acc !=nil {return 0,_dc .Wrap (_acc ,_ceg ,"");};_bcf ,_bcca :=_adg .(*_fg .PageInformationSegment );if !_bcca {return 0,_dc .Errorf (_ceg ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_adg );
};_cca .ResolutionX =_bcf .ResolutionX ;return _cca .ResolutionX ,nil ;};func (_efea *Page )getPageInformationSegment ()*_fg .Header {for _ ,_deeb :=range _efea .Segments {if _deeb .Type ==_fg .TPageInformation {return _deeb ;};};_bb .Log .Debug ("\u0050\u0061\u0067\u0065\u0020\u0069\u006e\u0066o\u0072\u006d\u0061ti\u006f\u006e\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0066o\u0072\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0073\u002e",_efea );
return nil ;};const (GenericEM EncodingMethod =iota ;CorrelationEM ;RankHausEM ;);func (_fdac *Globals )GetSymbolDictionary ()(*_fg .Header ,error ){const _gge ="G\u006c\u006f\u0062\u0061\u006c\u0073.\u0047\u0065\u0074\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079";
if _fdac ==nil {return nil ,_dc .Error (_gge ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_fdac .Segments )==0{return nil ,_dc .Error (_gge ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");
};for _ ,_ace :=range _fdac .Segments {if _ace .Type ==_fg .TSymbolDictionary {return _ace ,nil ;};};return nil ,_dc .Error (_gge ,"\u0067\u006c\u006fba\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020d\u0069c\u0074i\u006fn\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
};func (_gbef *Page )fitsPage (_dgc *_fg .PageInformationSegment ,_gedga *_d .Bitmap )bool {return _gbef .countRegions ()==1&&_dgc .DefaultPixelValue ==0&&_dgc .PageBMWidth ==_gedga .Width &&_dgc .PageBMHeight ==_gedga .Height ;};func (_eeaa *Page )AddGenericRegion (bm *_d .Bitmap ,xloc ,yloc ,template int ,tp _fg .Type ,duplicateLineRemoval bool )error {const _aca ="P\u0061\u0067\u0065\u002eAd\u0064G\u0065\u006e\u0065\u0072\u0069c\u0052\u0065\u0067\u0069\u006f\u006e";
_ffad :=&_fg .GenericRegion {};if _abg :=_ffad .InitEncode (bm ,xloc ,yloc ,template ,duplicateLineRemoval );_abg !=nil {return _dc .Wrap (_abg ,_aca ,"");};_dfc :=&_fg .Header {Type :_fg .TImmediateGenericRegion ,PageAssociation :_eeaa .PageNumber ,SegmentData :_ffad };
_eeaa .Segments =append (_eeaa .Segments ,_dfc );return nil ;};func (_ebde *Page )clearSegmentData (){for _feeg :=range _ebde .Segments {_ebde .Segments [_feeg ].CleanSegmentData ();};};func (_cdd *Page )GetResolutionX ()(int ,error ){return _cdd .getResolutionX ()};
func (_fgc *Document )nextSegmentNumber ()uint32 {_aag :=_fgc .CurrentSegmentNumber ;_fgc .CurrentSegmentNumber ++;return _aag ;};func (_bd *Document )AddGenericPage (bm *_d .Bitmap ,duplicateLineRemoval bool )(_fa error ){const _egg ="\u0044\u006f\u0063um\u0065\u006e\u0074\u002e\u0041\u0064\u0064\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0050\u0061\u0067\u0065";
if !_bd .FullHeaders &&_bd .NumberOfPages !=0{return _dc .Error (_egg ,"\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0070\u0061\u0067\u0065\u002e\u0020\u0046\u0069\u006c\u0065\u004d\u006f\u0064\u0065\u0020\u0064\u0069\u0073\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0064\u0064i\u006e\u0067\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e \u006f\u006e\u0065\u0020\u0070\u0061g\u0065");
};_ba :=&Page {Segments :[]*_fg .Header {},Bitmap :bm ,Document :_bd ,FinalHeight :bm .Height ,FinalWidth :bm .Width ,IsLossless :true ,BlackIsOne :bm .Color ==_d .Chocolate };_ba .PageNumber =int (_bd .nextPageNumber ());_bd .Pages [_ba .PageNumber ]=_ba ;
bm .InverseData ();_ba .AddPageInformationSegment ();if _fa =_ba .AddGenericRegion (bm ,0,0,0,_fg .TImmediateGenericRegion ,duplicateLineRemoval );_fa !=nil {return _dc .Wrap (_fa ,_egg ,"");};if _bd .FullHeaders {_ba .AddEndOfPageSegment ();};return nil ;
};func (_bg *Document )AddClassifiedPage (bm *_d .Bitmap ,method _cd .Method )(_ega error ){const _ff ="\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002e\u0041\u0064d\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064P\u0061\u0067\u0065";
if !_bg .FullHeaders &&_bg .NumberOfPages !=0{return _dc .Error (_ff ,"\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0070\u0061\u0067\u0065\u002e\u0020\u0046\u0069\u006c\u0065\u004d\u006f\u0064\u0065\u0020\u0064\u0069\u0073\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0064\u0064i\u006e\u0067\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e \u006f\u006e\u0065\u0020\u0070\u0061g\u0065");
};if _bg .Classer ==nil {if _bg .Classer ,_ega =_cd .Init (_cd .DefaultSettings ());_ega !=nil {return _dc .Wrap (_ega ,_ff ,"");};};_fbd :=int (_bg .nextPageNumber ());_dd :=&Page {Segments :[]*_fg .Header {},Bitmap :bm ,Document :_bg ,FinalHeight :bm .Height ,FinalWidth :bm .Width ,PageNumber :_fbd };
_bg .Pages [_fbd ]=_dd ;switch method {case _cd .RankHaus :_dd .EncodingMethod =RankHausEM ;case _cd .Correlation :_dd .EncodingMethod =CorrelationEM ;};_dd .AddPageInformationSegment ();if _ega =_bg .Classer .AddPage (bm ,_fbd ,method );_ega !=nil {return _dc .Wrap (_ega ,_ff ,"");
};if _bg .FullHeaders {_dd .AddEndOfPageSegment ();};return nil ;};func (_fddb *Page )getWidth ()(int ,error ){const _gffa ="\u0067\u0065\u0074\u0057\u0069\u0064\u0074\u0068";if _fddb .FinalWidth !=0{return _fddb .FinalWidth ,nil ;};_deb :=_fddb .getPageInformationSegment ();
if _deb ==nil {return 0,_dc .Error (_gffa ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_gee ,_bff :=_deb .GetSegmentData ();if _bff !=nil {return 0,_dc .Wrap (_bff ,_gffa ,"");};_fcb ,_bgcd :=_gee .(*_fg .PageInformationSegment );
if !_bgcd {return 0,_dc .Errorf (_gffa ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_gee );
};_fddb .FinalWidth =_fcb .PageBMWidth ;return _fddb .FinalWidth ,nil ;};func (_baeg *Page )createStripedPage (_dbaa *_fg .PageInformationSegment )error {const _faeg ="\u0063\u0072\u0065\u0061\u0074\u0065\u0053\u0074\u0072\u0069\u0070\u0065d\u0050\u0061\u0067\u0065";
_ebd ,_bdad :=_baeg .collectPageStripes ();if _bdad !=nil {return _dc .Wrap (_bdad ,_faeg ,"");};var _bbc int ;for _ ,_feda :=range _ebd {if _dfe ,_cfg :=_feda .(*_fg .EndOfStripe );_cfg {_bbc =_dfe .LineNumber ()+1;}else {_eaa :=_feda .(_fg .Regioner );
_cdeg :=_eaa .GetRegionInfo ();_fgfg :=_baeg .getCombinationOperator (_dbaa ,_cdeg .CombinaionOperator );_abd ,_fded :=_eaa .GetRegionBitmap ();if _fded !=nil {return _dc .Wrap (_fded ,_faeg ,"");};_fded =_d .Blit (_abd ,_baeg .Bitmap ,int (_cdeg .XLocation ),_bbc ,_fgfg );
if _fded !=nil {return _dc .Wrap (_fded ,_faeg ,"");};};};return nil ;};func InitEncodeDocument (fullHeaders bool )*Document {return &Document {FullHeaders :fullHeaders ,_ae :_a .BufferedMSB (),Pages :map[int ]*Page {},_cc :map[int ][]int {},_fb :map[int ]int {},_df :map[int ][]int {}};
};func (_dcg *Document )completeSymbols ()(_fdd error ){const _dec ="\u0063o\u006dp\u006c\u0065\u0074\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";if _dcg .Classer ==nil {return nil ;};if _dcg .Classer .UndilatedTemplates ==nil {return _dc .Error (_dec ,"\u006e\u006f t\u0065\u006d\u0070l\u0061\u0074\u0065\u0073 de\u0066in\u0065\u0064\u0020\u0066\u006f\u0072\u0020th\u0065\u0020\u0063\u006c\u0061\u0073\u0073e\u0072");
};_eaf :=len (_dcg .Pages )==1;_ebf :=make ([]int ,_dcg .Classer .UndilatedTemplates .Size ());var _egf int ;for _bge :=0;_bge < _dcg .Classer .ClassIDs .Size ();_bge ++{_egf ,_fdd =_dcg .Classer .ClassIDs .Get (_bge );if _fdd !=nil {return _dc .Wrap (_fdd ,_dec ,"\u0063\u006c\u0061\u0073\u0073\u0020\u0049\u0044\u0027\u0073");
};_ebf [_egf ]++;};var _fbg []int ;for _aec :=0;_aec < _dcg .Classer .UndilatedTemplates .Size ();_aec ++{if _ebf [_aec ]==0{return _dc .Error (_dec ,"\u006eo\u0020\u0073y\u006d\u0062\u006f\u006cs\u0020\u0069\u006es\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u0066\u006fun\u0064\u0020\u0066o\u0072\u0020g\u0069\u0076\u0065\u006e\u0020\u0063l\u0061\u0073s\u003f\u0020");
};if _ebf [_aec ]> 1||_eaf {_fbg =append (_fbg ,_aec );};};_dcg ._fe =len (_fbg );var _dea ,_af int ;for _dgb :=0;_dgb < _dcg .Classer .ComponentPageNumbers .Size ();_dgb ++{_dea ,_fdd =_dcg .Classer .ComponentPageNumbers .Get (_dgb );if _fdd !=nil {return _dc .Wrapf (_fdd ,_dec ,"p\u0061\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027 \u006e\u006f\u0074\u0020\u0066\u006f\u0075nd\u0020\u0069\u006e\u0020t\u0068\u0065\u0020\u0063\u006c\u0061\u0073\u0073\u0065r \u0070\u0061g\u0065\u006e\u0075\u006d\u0062\u0065\u0072\u0073",_dgb );
};_af ,_fdd =_dcg .Classer .ClassIDs .Get (_dgb );if _fdd !=nil {return _dc .Wrapf (_fdd ,_dec ,"\u0063\u0061\u006e\u0027\u0074\u0020\u0067e\u0074\u0020\u0073y\u006d\u0062\u006f\u006c \u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0027\u0025\u0064\u0027\u0020\u0066\u0072\u006f\u006d\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072",_dea );
};if _ebf [_af ]==1&&!_eaf {_dcg ._cc [_dea ]=append (_dcg ._cc [_dea ],_af );};};if _fdd =_dcg .Classer .ComputeLLCorners ();_fdd !=nil {return _dc .Wrap (_fdd ,_dec ,"");};return nil ;};func (_bbdc *Page )GetSegment (number int )(*_fg .Header ,error ){const _gdc ="\u0050a\u0067e\u002e\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074";
for _ ,_ecfa :=range _bbdc .Segments {if _ecfa .SegmentNumber ==uint32 (number ){return _ecfa ,nil ;};};_ecb :=make ([]uint32 ,len (_bbdc .Segments ));for _def ,_ggaa :=range _bbdc .Segments {_ecb [_def ]=_ggaa .SegmentNumber ;};return nil ,_dc .Errorf (_gdc ,"\u0073e\u0067\u006d\u0065n\u0074\u0020\u0077i\u0074h \u006e\u0075\u006d\u0062\u0065\u0072\u003a \u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0070\u0061\u0067\u0065\u003a\u0020'%\u0064'\u002e\u0020\u004b\u006e\u006f\u0077n\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u003a \u0025\u0076",number ,_bbdc .PageNumber ,_ecb );
};func (_ce *Document )reachedEOF (_dab int64 )(bool ,error ){const _gaa ="\u0072\u0065\u0061\u0063\u0068\u0065\u0064\u0045\u004f\u0046";_ ,_aecf :=_ce .InputStream .Seek (_dab ,_fd .SeekStart );if _aecf !=nil {_bb .Log .Debug ("\u0072\u0065\u0061c\u0068\u0065\u0064\u0045\u004f\u0046\u0020\u002d\u0020\u0064\u002e\u0049\u006e\u0070\u0075\u0074\u0053\u0074\u0072\u0065\u0061\u006d\u002e\u0053\u0065\u0065\u006b\u0020\u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_aecf );
return false ,_dc .Wrap (_aecf ,_gaa ,"\u0069n\u0070\u0075\u0074\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020s\u0065\u0065\u006b\u0020\u0066\u0061\u0069\u006c\u0065\u0064");};_ ,_aecf =_ce .InputStream .ReadBits (32);if _aecf ==_fd .EOF {return true ,nil ;
}else if _aecf !=nil {return false ,_dc .Wrap (_aecf ,_gaa ,"");};return false ,nil ;};func (_fddf *Page )createPage (_ebg *_fg .PageInformationSegment )error {var _ddg error ;if !_ebg .IsStripe ||_ebg .PageBMHeight !=-1{_ddg =_fddf .createNormalPage (_ebg );
}else {_ddg =_fddf .createStripedPage (_ebg );};return _ddg ;};func _ccge (_gac *Document ,_fbc int )*Page {return &Page {Document :_gac ,PageNumber :_fbc ,Segments :[]*_fg .Header {}};};func (_bddc *Document )GetGlobalSegment (i int )(*_fg .Header ,error ){_gggg ,_fac :=_bddc .GlobalSegments .GetSegment (i );
if _fac !=nil {return nil ,_dc .Wrap (_fac ,"\u0047\u0065t\u0047\u006c\u006fb\u0061\u006c\u0053\u0065\u0067\u006d\u0065\u006e\u0074","");};return _gggg ,nil ;};func (_ebfb *Page )GetResolutionY ()(int ,error ){return _ebfb .getResolutionY ()};type Document struct{Pages map[int ]*Page ;
NumberOfPagesUnknown bool ;NumberOfPages uint32 ;GBUseExtTemplate bool ;InputStream *_a .Reader ;GlobalSegments *Globals ;OrganizationType _fg .OrganizationType ;Classer *_cd .Classer ;XRes ,YRes int ;FullHeaders bool ;CurrentSegmentNumber uint32 ;AverageTemplates *_d .Bitmaps ;
BaseIndexes []int ;Refinement bool ;RefineLevel int ;_ef uint8 ;_ae *_a .BufferedWriter ;EncodeGlobals bool ;_fe int ;_cc map[int ][]int ;_df map[int ][]int ;_eg []int ;_fb map[int ]int ;};func (_fgcb *Page )nextSegmentNumber ()uint32 {return _fgcb .Document .nextSegmentNumber ()};
func (_cea *Page )lastSegmentNumber ()(_bea uint32 ,_bgb error ){const _cbb ="\u006c\u0061\u0073\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";if len (_cea .Segments )==0{return _bea ,_dc .Errorf (_cbb ,"\u006e\u006f\u0020se\u0067\u006d\u0065\u006e\u0074\u0073\u0020\u0066\u006fu\u006ed\u0020i\u006e \u0074\u0068\u0065\u0020\u0070\u0061\u0067\u0065\u0020\u0027\u0025\u0064\u0027",_cea .PageNumber );
};return _cea .Segments [len (_cea .Segments )-1].SegmentNumber ,nil ;};func (_fc *Document )GetNumberOfPages ()(uint32 ,error ){if _fc .NumberOfPagesUnknown ||_fc .NumberOfPages ==0{if len (_fc .Pages )==0{if _effa :=_fc .mapData ();_effa !=nil {return 0,_dc .Wrap (_effa ,"\u0044o\u0063\u0075\u006d\u0065n\u0074\u002e\u0047\u0065\u0074N\u0075m\u0062e\u0072\u004f\u0066\u0050\u0061\u0067\u0065s","");
};};return uint32 (len (_fc .Pages )),nil ;};return _fc .NumberOfPages ,nil ;};func (_eag *Page )AddEndOfPageSegment (){_fag :=&_fg .Header {Type :_fg .TEndOfPage ,PageAssociation :_eag .PageNumber };_eag .Segments =append (_eag .Segments ,_fag );};func (_dece *Page )countRegions ()int {var _dcc int ;
for _ ,_gcf :=range _dece .Segments {switch _gcf .Type {case 6,7,22,23,38,39,42,43:_dcc ++;};};return _dcc ;};type Page struct{Segments []*_fg .Header ;PageNumber int ;Bitmap *_d .Bitmap ;FinalHeight int ;FinalWidth int ;ResolutionX int ;ResolutionY int ;
IsLossless bool ;Document *Document ;FirstSegmentNumber int ;EncodingMethod EncodingMethod ;BlackIsOne bool ;};func (_bcc *Page )collectPageStripes ()(_acab []_fg .Segmenter ,_gfde error ){const _aab ="\u0063o\u006cl\u0065\u0063\u0074\u0050\u0061g\u0065\u0053t\u0072\u0069\u0070\u0065\u0073";
var _cdg _fg .Segmenter ;for _ ,_cgc :=range _bcc .Segments {switch _cgc .Type {case 6,7,22,23,38,39,42,43:_cdg ,_gfde =_cgc .GetSegmentData ();if _gfde !=nil {return nil ,_dc .Wrap (_gfde ,_aab ,"");};_acab =append (_acab ,_cdg );case 50:_cdg ,_gfde =_cgc .GetSegmentData ();
if _gfde !=nil {return nil ,_gfde ;};_cef ,_dbf :=_cdg .(*_fg .EndOfStripe );if !_dbf {return nil ,_dc .Errorf (_aab ,"\u0045\u006e\u0064\u004f\u0066\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u006f\u0066\u0020\u0076\u0061l\u0069\u0064\u0020\u0074\u0079p\u0065\u003a \u0027\u0025\u0054\u0027",_cdg );
};_acab =append (_acab ,_cef );_bcc .FinalHeight =_cef .LineNumber ();};};return _acab ,nil ;};type EncodingMethod int ;func _gce (_gfd *_a .Reader ,_gdba *Globals )(*Document ,error ){_ebb :=&Document {Pages :make (map[int ]*Page ),InputStream :_gfd ,OrganizationType :_fg .OSequential ,NumberOfPagesUnknown :true ,GlobalSegments :_gdba ,_ef :9};
if _ebb .GlobalSegments ==nil {_ebb .GlobalSegments =&Globals {};};if _ggd :=_ebb .mapData ();_ggd !=nil {return nil ,_ggd ;};return _ebb ,nil ;};func (_bca *Page )GetWidth ()(int ,error ){return _bca .getWidth ()};func (_ccgd *Page )addTextRegionSegment (_aeec []*_fg .Header ,_baed ,_daad map[int ]int ,_ebbb []int ,_dae *_d .Points ,_fage *_d .Bitmaps ,_ag *_g .IntSlice ,_aff *_d .Boxes ,_geb ,_eec int ){_daf :=&_fg .TextRegion {NumberOfSymbols :uint32 (_eec )};
_daf .InitEncode (_baed ,_daad ,_ebbb ,_dae ,_fage ,_ag ,_aff ,_ccgd .FinalWidth ,_ccgd .FinalHeight ,_geb );_bdcg :=&_fg .Header {RTSegments :_aeec ,SegmentData :_daf ,PageAssociation :_ccgd .PageNumber ,Type :_fg .TImmediateTextRegion };_dfb :=_fg .TPageInformation ;
if _daad !=nil {_dfb =_fg .TSymbolDictionary ;};var _gae int ;for ;_gae < len (_ccgd .Segments );_gae ++{if _ccgd .Segments [_gae ].Type ==_dfb {_gae ++;break ;};};_ccgd .Segments =append (_ccgd .Segments ,nil );copy (_ccgd .Segments [_gae +1:],_ccgd .Segments [_gae :]);
_ccgd .Segments [_gae ]=_bdcg ;};func (_cab *Document )encodeFileHeader (_dge _a .BinaryWriter )(_bfb int ,_ged error ){const _gga ="\u0065\u006ec\u006f\u0064\u0065F\u0069\u006c\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_bfb ,_ged =_dge .Write (_dg );
if _ged !=nil {return _bfb ,_dc .Wrap (_ged ,_gga ,"\u0069\u0064");};if _ged =_dge .WriteByte (0x01);_ged !=nil {return _bfb ,_dc .Wrap (_ged ,_gga ,"\u0066\u006c\u0061g\u0073");};_bfb ++;_aacf :=make ([]byte ,4);_b .BigEndian .PutUint32 (_aacf ,_cab .NumberOfPages );
_ecce ,_ged :=_dge .Write (_aacf );if _ged !=nil {return _ecce ,_dc .Wrap (_ged ,_gga ,"p\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_bfb +=_ecce ;return _bfb ,nil ;};func (_gdbf *Document )mapData ()error {const _gf ="\u006da\u0070\u0044\u0061\u0074\u0061";
var (_efee []*_fg .Header ;_acf int64 ;_ffb _fg .Type ;);_bfe ,_eda :=_gdbf .isFileHeaderPresent ();if _eda !=nil {return _dc .Wrap (_eda ,_gf ,"");};if _bfe {if _eda =_gdbf .parseFileHeader ();_eda !=nil {return _dc .Wrap (_eda ,_gf ,"");};_acf +=int64 (_gdbf ._ef );
_gdbf .FullHeaders =true ;};var (_ffac *Page ;_bad bool ;);for _ffb !=51&&!_bad {_ggf ,_ga :=_fg .NewHeader (_gdbf ,_gdbf .InputStream ,_acf ,_gdbf .OrganizationType );if _ga !=nil {return _dc .Wrap (_ga ,_gf ,"");};_bb .Log .Trace ("\u0044\u0065c\u006f\u0064\u0069\u006eg\u0020\u0073e\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u0075m\u0062\u0065\u0072\u003a\u0020\u0025\u0064\u002c\u0020\u0054\u0079\u0070e\u003a\u0020\u0025\u0073",_ggf .SegmentNumber ,_ggf .Type );
_ffb =_ggf .Type ;if _ffb !=_fg .TEndOfFile {if _ggf .PageAssociation !=0{_ffac =_gdbf .Pages [_ggf .PageAssociation ];if _ffac ==nil {_ffac =_ccge (_gdbf ,_ggf .PageAssociation );_gdbf .Pages [_ggf .PageAssociation ]=_ffac ;if _gdbf .NumberOfPagesUnknown {_gdbf .NumberOfPages ++;
};};_ffac .Segments =append (_ffac .Segments ,_ggf );}else {_gdbf .GlobalSegments .AddSegment (_ggf );};};_efee =append (_efee ,_ggf );_acf =_gdbf .InputStream .AbsolutePosition ();if _gdbf .OrganizationType ==_fg .OSequential {_acf +=int64 (_ggf .SegmentDataLength );
};_bad ,_ga =_gdbf .reachedEOF (_acf );if _ga !=nil {_bb .Log .Debug ("\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020\u0072\u0065\u0061\u0063h\u0065\u0064\u0020\u0045\u004f\u0046\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_ga );
return _dc .Wrap (_ga ,_gf ,"");};};_gdbf .determineRandomDataOffsets (_efee ,uint64 (_acf ));return nil ;};var _dg =[]byte {0x97,0x4A,0x42,0x32,0x0D,0x0A,0x1A,0x0A};func (_gcb *Page )composePageBitmap ()error {const _facc ="\u0063\u006f\u006d\u0070\u006f\u0073\u0065\u0050\u0061\u0067\u0065\u0042i\u0074\u006d\u0061\u0070";
if _gcb .PageNumber ==0{return nil ;};_fgb :=_gcb .getPageInformationSegment ();if _fgb ==nil {return _dc .Error (_facc ,"\u0070\u0061\u0067e \u0069\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069o\u006e \u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
};_gaab ,_aagf :=_fgb .GetSegmentData ();if _aagf !=nil {return _aagf ;};_eafc ,_cacb :=_gaab .(*_fg .PageInformationSegment );if !_cacb {return _dc .Error (_facc ,"\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006da\u0074\u0069\u006f\u006e \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");
};if _aagf =_gcb .createPage (_eafc );_aagf !=nil {return _dc .Wrap (_aagf ,_facc ,"");};_gcb .clearSegmentData ();return nil ;};func (_ecfg *Page )AddPageInformationSegment (){_faf :=&_fg .PageInformationSegment {PageBMWidth :_ecfg .FinalWidth ,PageBMHeight :_ecfg .FinalHeight ,ResolutionX :_ecfg .ResolutionX ,ResolutionY :_ecfg .ResolutionY ,IsLossless :_ecfg .IsLossless };
if _ecfg .BlackIsOne {_faf .DefaultPixelValue =uint8 (0x1);};_gcc :=&_fg .Header {PageAssociation :_ecfg .PageNumber ,SegmentDataLength :uint64 (_faf .Size ()),SegmentData :_faf ,Type :_fg .TPageInformation };_ecfg .Segments =append (_ecfg .Segments ,_gcc );
};func (_eea *Globals )GetSegment (segmentNumber int )(*_fg .Header ,error ){const _aee ="\u0047l\u006fb\u0061\u006c\u0073\u002e\u0047e\u0074\u0053e\u0067\u006d\u0065\u006e\u0074";if _eea ==nil {return nil ,_dc .Error (_aee ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};if len (_eea .Segments )==0{return nil ,_dc .Error (_aee ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");};var _bag *_fg .Header ;for _ ,_bag =range _eea .Segments {if _bag .SegmentNumber ==uint32 (segmentNumber ){break ;
};};if _bag ==nil {return nil ,_dc .Error (_aee ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};return _bag ,nil ;};func (_ffa *Document )Encode ()(_bgcc []byte ,_dad error ){const _ffaa ="\u0044o\u0063u\u006d\u0065\u006e\u0074\u002e\u0045\u006e\u0063\u006f\u0064\u0065";
var _cac ,_cgdg int ;if _ffa .FullHeaders {if _cac ,_dad =_ffa .encodeFileHeader (_ffa ._ae );_dad !=nil {return nil ,_dc .Wrap (_dad ,_ffaa ,"");};};var (_fae bool ;_dga *_fg .Header ;_egbg *Page ;);if _dad =_ffa .completeClassifiedPages ();_dad !=nil {return nil ,_dc .Wrap (_dad ,_ffaa ,"");
};if _dad =_ffa .produceClassifiedPages ();_dad !=nil {return nil ,_dc .Wrap (_dad ,_ffaa ,"");};if _ffa .GlobalSegments !=nil {for _ ,_dga =range _ffa .GlobalSegments .Segments {if _dad =_ffa .encodeSegment (_dga ,&_cac );_dad !=nil {return nil ,_dc .Wrap (_dad ,_ffaa ,"");
};};};for _dfg :=1;_dfg <=int (_ffa .NumberOfPages );_dfg ++{if _egbg ,_fae =_ffa .Pages [_dfg ];!_fae {return nil ,_dc .Errorf (_ffaa ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_dfg );};for _ ,_dga =range _egbg .Segments {if _dad =_ffa .encodeSegment (_dga ,&_cac );
_dad !=nil {return nil ,_dc .Wrap (_dad ,_ffaa ,"");};};};if _ffa .FullHeaders {if _cgdg ,_dad =_ffa .encodeEOFHeader (_ffa ._ae );_dad !=nil {return nil ,_dc .Wrap (_dad ,_ffaa ,"");};_cac +=_cgdg ;};_bgcc =_ffa ._ae .Data ();if len (_bgcc )!=_cac {_bb .Log .Debug ("\u0042\u0079\u0074\u0065\u0073 \u0077\u0072\u0069\u0074\u0074\u0065\u006e \u0028\u006e\u0029\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0065\u0071\u0075\u0061\u006c\u0020\u0074\u006f\u0020\u0074\u0068\u0065\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006f\u0066\u0020t\u0068\u0065\u0020\u0064\u0061\u0074\u0061\u0020\u0065\u006e\u0063\u006fd\u0065\u0064\u003a\u0020\u0027\u0025d\u0027",_cac ,len (_bgcc ));
};return _bgcc ,nil ;};func (_cagg *Page )String ()string {return _e .Sprintf ("\u0050\u0061\u0067\u0065\u0020\u0023\u0025\u0064",_cagg .PageNumber );};func (_fgf *Document )parseFileHeader ()error {const _cag ="\u0070a\u0072s\u0065\u0046\u0069\u006c\u0065\u0048\u0065\u0061\u0064\u0065\u0072";
_ ,_bcg :=_fgf .InputStream .Seek (8,_fd .SeekStart );if _bcg !=nil {return _dc .Wrap (_bcg ,_cag ,"\u0069\u0064");};_ ,_bcg =_fgf .InputStream .ReadBits (5);if _bcg !=nil {return _dc .Wrap (_bcg ,_cag ,"\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074\u0073");
};_daa ,_bcg :=_fgf .InputStream .ReadBit ();if _bcg !=nil {return _dc .Wrap (_bcg ,_cag ,"\u0065x\u0074e\u006e\u0064\u0065\u0064\u0020t\u0065\u006dp\u006c\u0061\u0074\u0065\u0073");};if _daa ==1{_fgf .GBUseExtTemplate =true ;};_daa ,_bcg =_fgf .InputStream .ReadBit ();
if _bcg !=nil {return _dc .Wrap (_bcg ,_cag ,"\u0075\u006e\u006b\u006eow\u006e\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};if _daa !=1{_fgf .NumberOfPagesUnknown =false ;};_daa ,_bcg =_fgf .InputStream .ReadBit ();if _bcg !=nil {return _dc .Wrap (_bcg ,_cag ,"\u006f\u0072\u0067\u0061\u006e\u0069\u007a\u0061\u0074\u0069\u006f\u006e \u0074\u0079\u0070\u0065");
};_fgf .OrganizationType =_fg .OrganizationType (_daa );if !_fgf .NumberOfPagesUnknown {_fgf .NumberOfPages ,_bcg =_fgf .InputStream .ReadUint32 ();if _bcg !=nil {return _dc .Wrap (_bcg ,_cag ,"\u006eu\u006db\u0065\u0072\u0020\u006f\u0066\u0020\u0070\u0061\u0067\u0065\u0073");
};_fgf ._ef =13;};return nil ;};func (_bbdcf *Page )getResolutionY ()(int ,error ){const _ffgc ="\u0067\u0065\u0074\u0052\u0065\u0073\u006f\u006c\u0075t\u0069\u006f\u006e\u0059";if _bbdcf .ResolutionY !=0{return _bbdcf .ResolutionY ,nil ;};_cfb :=_bbdcf .getPageInformationSegment ();
if _cfb ==nil {return 0,_dc .Error (_ffgc ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_bcce ,_eed :=_cfb .GetSegmentData ();if _eed !=nil {return 0,_dc .Wrap (_eed ,_ffgc ,"");};_fdcc ,_ddeg :=_bcce .(*_fg .PageInformationSegment );
if !_ddeg {return 0,_dc .Errorf (_ffgc ,"\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0066o\u0072\u006d\u0061ti\u006f\u006e\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0069\u0073\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0074\u0079\u0070\u0065\u003a\u0027%\u0054\u0027",_bcce );
};_bbdcf .ResolutionY =_fdcc .ResolutionY ;return _bbdcf .ResolutionY ,nil ;};