//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package document ;import (_d "encoding/binary";_f "fmt";_dd "github.com/unidoc/unipdf/v3/common";_c "github.com/unidoc/unipdf/v3/internal/bitwise";_ec "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_ce "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";
_eg "github.com/unidoc/unipdf/v3/internal/jbig2/document/segments";_b "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/classer";_ff "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_fc "io";_dc "math";_ea "runtime/debug";);func (_gfe *Page )GetHeight ()(int ,error ){return _gfe .getHeight ()};
func _cf (_ecd int )int {_fce :=0;_dda :=(_ecd &(_ecd -1))==0;_ecd >>=1;for ;_ecd !=0;_ecd >>=1{_fce ++;};if _dda {return _fce ;};return _fce +1;};const (GenericEM EncodingMethod =iota ;CorrelationEM ;RankHausEM ;);func (_gfc *Page )GetSegment (number int )(*_eg .Header ,error ){const _deee ="\u0050a\u0067e\u002e\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074";
for _ ,_cfdf :=range _gfc .Segments {if _cfdf .SegmentNumber ==uint32 (number ){return _cfdf ,nil ;};};_adae :=make ([]uint32 ,len (_gfc .Segments ));for _dac ,_aeac :=range _gfc .Segments {_adae [_dac ]=_aeac .SegmentNumber ;};return nil ,_ff .Errorf (_deee ,"\u0073e\u0067\u006d\u0065n\u0074\u0020\u0077i\u0074h \u006e\u0075\u006d\u0062\u0065\u0072\u003a \u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0070\u0061\u0067\u0065\u003a\u0020'%\u0064'\u002e\u0020\u004b\u006e\u006f\u0077n\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u003a \u0025\u0076",number ,_gfc .PageNumber ,_adae );
};func (_eafg *Document )mapData ()error {const _bcc ="\u006da\u0070\u0044\u0061\u0074\u0061";var (_bca []*_eg .Header ;_cbg int64 ;_eea _eg .Type ;);_afe ,_fgg :=_eafg .isFileHeaderPresent ();if _fgg !=nil {return _ff .Wrap (_fgg ,_bcc ,"");};if _afe {if _fgg =_eafg .parseFileHeader ();
_fgg !=nil {return _ff .Wrap (_fgg ,_bcc ,"");};_cbg +=int64 (_eafg ._cb );_eafg .FullHeaders =true ;};var (_afa *Page ;_cda bool ;);for _eea !=51&&!_cda {_fgd ,_gdfc :=_eg .NewHeader (_eafg ,_eafg .InputStream ,_cbg ,_eafg .OrganizationType );if _gdfc !=nil {return _ff .Wrap (_gdfc ,_bcc ,"");
};_dd .Log .Trace ("\u0044\u0065c\u006f\u0064\u0069\u006eg\u0020\u0073e\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u0075m\u0062\u0065\u0072\u003a\u0020\u0025\u0064\u002c\u0020\u0054\u0079\u0070e\u003a\u0020\u0025\u0073",_fgd .SegmentNumber ,_fgd .Type );
_eea =_fgd .Type ;if _eea !=_eg .TEndOfFile {if _fgd .PageAssociation !=0{_afa =_eafg .Pages [_fgd .PageAssociation ];if _afa ==nil {_afa =_fddd (_eafg ,_fgd .PageAssociation );_eafg .Pages [_fgd .PageAssociation ]=_afa ;if _eafg .NumberOfPagesUnknown {_eafg .NumberOfPages ++;
};};_afa .Segments =append (_afa .Segments ,_fgd );}else {_eafg .GlobalSegments .AddSegment (_fgd );};};_bca =append (_bca ,_fgd );_cbg =_eafg .InputStream .AbsolutePosition ();if _eafg .OrganizationType ==_eg .OSequential {_cbg +=int64 (_fgd .SegmentDataLength );
};_cda ,_gdfc =_eafg .reachedEOF (_cbg );if _gdfc !=nil {_dd .Log .Debug ("\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020\u0072\u0065\u0061\u0063h\u0065\u0064\u0020\u0045\u004f\u0046\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_gdfc );
return _ff .Wrap (_gdfc ,_bcc ,"");};};_eafg .determineRandomDataOffsets (_bca ,uint64 (_cbg ));return nil ;};func (_ddfb *Page )collectPageStripes ()(_bfd []_eg .Segmenter ,_cac error ){const _dba ="\u0063o\u006cl\u0065\u0063\u0074\u0050\u0061g\u0065\u0053t\u0072\u0069\u0070\u0065\u0073";
var _eegf _eg .Segmenter ;for _ ,_bfe :=range _ddfb .Segments {switch _bfe .Type {case 6,7,22,23,38,39,42,43:_eegf ,_cac =_bfe .GetSegmentData ();if _cac !=nil {return nil ,_ff .Wrap (_cac ,_dba ,"");};_bfd =append (_bfd ,_eegf );case 50:_eegf ,_cac =_bfe .GetSegmentData ();
if _cac !=nil {return nil ,_cac ;};_aab ,_cedc :=_eegf .(*_eg .EndOfStripe );if !_cedc {return nil ,_ff .Errorf (_dba ,"\u0045\u006e\u0064\u004f\u0066\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u006f\u0066\u0020\u0076\u0061l\u0069\u0064\u0020\u0074\u0079p\u0065\u003a \u0027\u0025\u0054\u0027",_eegf );
};_bfd =append (_bfd ,_aab );_ddfb .FinalHeight =_aab .LineNumber ();};};return _bfd ,nil ;};func (_aea *Document )nextPageNumber ()uint32 {_aea .NumberOfPages ++;return _aea .NumberOfPages };func (_ebe *Page )createNormalPage (_acdde *_eg .PageInformationSegment )error {const _bdf ="\u0063\u0072e\u0061\u0074\u0065N\u006f\u0072\u006d\u0061\u006c\u0050\u0061\u0067\u0065";
_ebe .Bitmap =_ce .New (_acdde .PageBMWidth ,_acdde .PageBMHeight );if _acdde .DefaultPixelValue !=0{_ebe .Bitmap .SetDefaultPixel ();};for _ ,_ecdg :=range _ebe .Segments {switch _ecdg .Type {case 6,7,22,23,38,39,42,43:_dd .Log .Trace ("\u0047\u0065\u0074\u0074in\u0067\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0064",_ecdg .SegmentNumber );
_caa ,_ceg :=_ecdg .GetSegmentData ();if _ceg !=nil {return _ceg ;};_eed ,_abe :=_caa .(_eg .Regioner );if !_abe {_dd .Log .Debug ("\u0053\u0065g\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069on\u0065\u0072",_caa );
return _ff .Errorf (_bdf ,"i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062i\u0067\u0032\u0020\u0073\u0065\u0067\u006den\u0074\u0020\u0074\u0079p\u0065\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061 R\u0065\u0067i\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_caa );
};_cdd ,_ceg :=_eed .GetRegionBitmap ();if _ceg !=nil {return _ff .Wrap (_ceg ,_bdf ,"");};if _ebe .fitsPage (_acdde ,_cdd ){_ebe .Bitmap =_cdd ;}else {_efg :=_eed .GetRegionInfo ();_ddf :=_ebe .getCombinationOperator (_acdde ,_efg .CombinaionOperator );
_ceg =_ce .Blit (_cdd ,_ebe .Bitmap ,int (_efg .XLocation ),int (_efg .YLocation ),_ddf );if _ceg !=nil {return _ff .Wrap (_ceg ,_bdf ,"");};};};};return nil ;};func (_fgbb *Page )GetWidth ()(int ,error ){return _fgbb .getWidth ()};func InitEncodeDocument (fullHeaders bool )*Document {return &Document {FullHeaders :fullHeaders ,_g :_c .BufferedMSB (),Pages :map[int ]*Page {},_gf :map[int ][]int {},_ecb :map[int ]int {},_ecc :map[int ][]int {}};
};func (_dgbf *Page )GetResolutionY ()(int ,error ){return _dgbf .getResolutionY ()};func (_fab *Page )getWidth ()(int ,error ){const _fabc ="\u0067\u0065\u0074\u0057\u0069\u0064\u0074\u0068";if _fab .FinalWidth !=0{return _fab .FinalWidth ,nil ;};_gfce :=_fab .getPageInformationSegment ();
if _gfce ==nil {return 0,_ff .Error (_fabc ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_gfcd ,_bbe :=_gfce .GetSegmentData ();if _bbe !=nil {return 0,_ff .Wrap (_bbe ,_fabc ,"");};_agg ,_bdb :=_gfcd .(*_eg .PageInformationSegment );
if !_bdb {return 0,_ff .Errorf (_fabc ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_gfcd );
};_fab .FinalWidth =_agg .PageBMWidth ;return _fab .FinalWidth ,nil ;};func (_dfc *Page )addTextRegionSegment (_bea []*_eg .Header ,_gbd ,_egc map[int ]int ,_bb []int ,_aae *_ce .Points ,_cdcd *_ce .Bitmaps ,_fdga *_ec .IntSlice ,_faa *_ce .Boxes ,_aeaf ,_abg int ){_fbb :=&_eg .TextRegion {NumberOfSymbols :uint32 (_abg )};
_fbb .InitEncode (_gbd ,_egc ,_bb ,_aae ,_cdcd ,_fdga ,_faa ,_dfc .FinalWidth ,_dfc .FinalHeight ,_aeaf );_cgf :=&_eg .Header {RTSegments :_bea ,SegmentData :_fbb ,PageAssociation :_dfc .PageNumber ,Type :_eg .TImmediateTextRegion };_daf :=_eg .TPageInformation ;
if _egc !=nil {_daf =_eg .TSymbolDictionary ;};var _cag int ;for ;_cag < len (_dfc .Segments );_cag ++{if _dfc .Segments [_cag ].Type ==_daf {_cag ++;break ;};};_dfc .Segments =append (_dfc .Segments ,nil );copy (_dfc .Segments [_cag +1:],_dfc .Segments [_cag :]);
_dfc .Segments [_cag ]=_cgf ;};func (_fdc *Document )GetGlobalSegment (i int )(*_eg .Header ,error ){_ebf ,_fdaf :=_fdc .GlobalSegments .GetSegment (i );if _fdaf !=nil {return nil ,_ff .Wrap (_fdaf ,"\u0047\u0065t\u0047\u006c\u006fb\u0061\u006c\u0053\u0065\u0067\u006d\u0065\u006e\u0074","");
};return _ebf ,nil ;};var _cd =[]byte {0x97,0x4A,0x42,0x32,0x0D,0x0A,0x1A,0x0A};func (_eb *Document )AddGenericPage (bm *_ce .Bitmap ,duplicateLineRemoval bool )(_fb error ){const _a ="\u0044\u006f\u0063um\u0065\u006e\u0074\u002e\u0041\u0064\u0064\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0050\u0061\u0067\u0065";
if !_eb .FullHeaders &&_eb .NumberOfPages !=0{return _ff .Error (_a ,"\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0070\u0061\u0067\u0065\u002e\u0020\u0046\u0069\u006c\u0065\u004d\u006f\u0064\u0065\u0020\u0064\u0069\u0073\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0064\u0064i\u006e\u0067\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e \u006f\u006e\u0065\u0020\u0070\u0061g\u0065");
};_de :=&Page {Segments :[]*_eg .Header {},Bitmap :bm ,Document :_eb ,FinalHeight :bm .Height ,FinalWidth :bm .Width ,IsLossless :true ,BlackIsOne :bm .Color ==_ce .Chocolate };_de .PageNumber =int (_eb .nextPageNumber ());_eb .Pages [_de .PageNumber ]=_de ;
bm .InverseData ();_de .AddPageInformationSegment ();if _fb =_de .AddGenericRegion (bm ,0,0,0,_eg .TImmediateGenericRegion ,duplicateLineRemoval );_fb !=nil {return _ff .Wrap (_fb ,_a ,"");};if _eb .FullHeaders {_de .AddEndOfPageSegment ();};return nil ;
};func (_ge *Document )addSymbolDictionary (_cbb int ,_egd *_ce .Bitmaps ,_aag []int ,_gfg map[int ]int ,_gcg bool )(*_eg .Header ,error ){const _bgd ="\u0061\u0064\u0064\u0053ym\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079";
_aage :=&_eg .SymbolDictionary {};if _fbe :=_aage .InitEncode (_egd ,_aag ,_gfg ,_gcg );_fbe !=nil {return nil ,_fbe ;};_gbe :=&_eg .Header {Type :_eg .TSymbolDictionary ,PageAssociation :_cbb ,SegmentData :_aage };if _cbb ==0{if _ge .GlobalSegments ==nil {_ge .GlobalSegments =&Globals {};
};_ge .GlobalSegments .AddSegment (_gbe );return _gbe ,nil ;};_bgcd ,_egb :=_ge .Pages [_cbb ];if !_egb {return nil ,_ff .Errorf (_bgd ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_cbb );};var (_efc int ;
_fga *_eg .Header ;);for _efc ,_fga =range _bgcd .Segments {if _fga .Type ==_eg .TPageInformation {break ;};};_efc ++;_bgcd .Segments =append (_bgcd .Segments ,nil );copy (_bgcd .Segments [_efc +1:],_bgcd .Segments [_efc :]);_bgcd .Segments [_efc ]=_gbe ;
return _gbe ,nil ;};func (_fbc *Globals )AddSegment (segment *_eg .Header ){_fbc .Segments =append (_fbc .Segments ,segment )};func (_fdf *Document )nextSegmentNumber ()uint32 {_fdg :=_fdf .CurrentSegmentNumber ;_fdf .CurrentSegmentNumber ++;return _fdg ;
};type Page struct{Segments []*_eg .Header ;PageNumber int ;Bitmap *_ce .Bitmap ;FinalHeight int ;FinalWidth int ;ResolutionX int ;ResolutionY int ;IsLossless bool ;Document *Document ;FirstSegmentNumber int ;EncodingMethod EncodingMethod ;BlackIsOne bool ;
};type EncodingMethod int ;func (_dcd *Document )AddClassifiedPage (bm *_ce .Bitmap ,method _b .Method )(_fg error ){const _ac ="\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002e\u0041\u0064d\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064P\u0061\u0067\u0065";
if !_dcd .FullHeaders &&_dcd .NumberOfPages !=0{return _ff .Error (_ac ,"\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0070\u0061\u0067\u0065\u002e\u0020\u0046\u0069\u006c\u0065\u004d\u006f\u0064\u0065\u0020\u0064\u0069\u0073\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0064\u0064i\u006e\u0067\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e \u006f\u006e\u0065\u0020\u0070\u0061g\u0065");
};if _dcd .Classer ==nil {if _dcd .Classer ,_fg =_b .Init (_b .DefaultSettings ());_fg !=nil {return _ff .Wrap (_fg ,_ac ,"");};};_cdg :=int (_dcd .nextPageNumber ());_dg :=&Page {Segments :[]*_eg .Header {},Bitmap :bm ,Document :_dcd ,FinalHeight :bm .Height ,FinalWidth :bm .Width ,PageNumber :_cdg };
_dcd .Pages [_cdg ]=_dg ;switch method {case _b .RankHaus :_dg .EncodingMethod =RankHausEM ;case _b .Correlation :_dg .EncodingMethod =CorrelationEM ;};_dg .AddPageInformationSegment ();if _fg =_dcd .Classer .AddPage (bm ,_cdg ,method );_fg !=nil {return _ff .Wrap (_fg ,_ac ,"");
};if _dcd .FullHeaders {_dg .AddEndOfPageSegment ();};return nil ;};func (_afg *Page )AddPageInformationSegment (){_dcce :=&_eg .PageInformationSegment {PageBMWidth :_afg .FinalWidth ,PageBMHeight :_afg .FinalHeight ,ResolutionX :_afg .ResolutionX ,ResolutionY :_afg .ResolutionY ,IsLossless :_afg .IsLossless };
if _afg .BlackIsOne {_dcce .DefaultPixelValue =uint8 (0x1);};_dbb :=&_eg .Header {PageAssociation :_afg .PageNumber ,SegmentDataLength :uint64 (_dcce .Size ()),SegmentData :_dcce ,Type :_eg .TPageInformation };_afg .Segments =append (_afg .Segments ,_dbb );
};func (_dbe *Page )fitsPage (_cgg *_eg .PageInformationSegment ,_eae *_ce .Bitmap )bool {return _dbe .countRegions ()==1&&_cgg .DefaultPixelValue ==0&&_cgg .PageBMWidth ==_eae .Width &&_cgg .PageBMHeight ==_eae .Height ;};func (_afaf *Page )createStripedPage (_gga *_eg .PageInformationSegment )error {const _bbc ="\u0063\u0072\u0065\u0061\u0074\u0065\u0053\u0074\u0072\u0069\u0070\u0065d\u0050\u0061\u0067\u0065";
_cdef ,_bfgf :=_afaf .collectPageStripes ();if _bfgf !=nil {return _ff .Wrap (_bfgf ,_bbc ,"");};var _cdgd int ;for _ ,_beb :=range _cdef {if _bda ,_gbf :=_beb .(*_eg .EndOfStripe );_gbf {_cdgd =_bda .LineNumber ()+1;}else {_edf :=_beb .(_eg .Regioner );
_acdg :=_edf .GetRegionInfo ();_cfb :=_afaf .getCombinationOperator (_gga ,_acdg .CombinaionOperator );_dgf ,_baa :=_edf .GetRegionBitmap ();if _baa !=nil {return _ff .Wrap (_baa ,_bbc ,"");};_baa =_ce .Blit (_dgf ,_afaf .Bitmap ,int (_acdg .XLocation ),_cdgd ,_cfb );
if _baa !=nil {return _ff .Wrap (_baa ,_bbc ,"");};};};return nil ;};func (_aef *Globals )GetSymbolDictionary ()(*_eg .Header ,error ){const _cfdce ="G\u006c\u006f\u0062\u0061\u006c\u0073.\u0047\u0065\u0074\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079";
if _aef ==nil {return nil ,_ff .Error (_cfdce ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_aef .Segments )==0{return nil ,_ff .Error (_cfdce ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");
};for _ ,_abc :=range _aef .Segments {if _abc .Type ==_eg .TSymbolDictionary {return _abc ,nil ;};};return nil ,_ff .Error (_cfdce ,"\u0067\u006c\u006fba\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020d\u0069c\u0074i\u006fn\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
};func (_efb *Document )GetPage (pageNumber int )(_eg .Pager ,error ){const _cfg ="\u0044\u006fc\u0075\u006d\u0065n\u0074\u002e\u0047\u0065\u0074\u0050\u0061\u0067\u0065";if pageNumber < 0{_dd .Log .Debug ("\u004a\u0042\u0049\u00472\u0020\u0050\u0061\u0067\u0065\u0020\u002d\u0020\u0047e\u0074\u0050\u0061\u0067\u0065\u003a\u0020\u0025\u0064\u002e\u0020\u0050\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062e\u0020\u006c\u006f\u0077\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0030\u002e\u0020\u0025\u0073",pageNumber ,_ea .Stack ());
return nil ,_ff .Errorf (_cfg ,"\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032\u0020d\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020\u002d\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064 \u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u003a\u0020\u0025\u0064",pageNumber );
};if pageNumber > len (_efb .Pages ){_dd .Log .Debug ("\u0050\u0061\u0067\u0065 n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0064\u002e\u0020%\u0073",pageNumber ,_ea .Stack ());return nil ,_ff .Error (_cfg ,"\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065n\u0074\u0020\u002d\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};_ab ,_dee :=_efb .Pages [pageNumber ];if !_dee {_dd .Log .Debug ("\u0050\u0061\u0067\u0065 n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0064\u002e\u0020%\u0073",pageNumber ,_ea .Stack ());return nil ,_ff .Errorf (_cfg ,"\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065n\u0074\u0020\u002d\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};return _ab ,nil ;};func (_decg *Page )getHeight ()(int ,error ){const _caab ="\u0067e\u0074\u0048\u0065\u0069\u0067\u0068t";if _decg .FinalHeight !=0{return _decg .FinalHeight ,nil ;};_eag :=_decg .getPageInformationSegment ();if _eag ==nil {return 0,_ff .Error (_caab ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");
};_ggfa ,_deg :=_eag .GetSegmentData ();if _deg !=nil {return 0,_ff .Wrap (_deg ,_caab ,"");};_fbead ,_cdb :=_ggfa .(*_eg .PageInformationSegment );if !_cdb {return 0,_ff .Errorf (_caab ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_ggfa );
};if _fbead .PageBMHeight ==_dc .MaxInt32 {_ ,_deg =_decg .GetBitmap ();if _deg !=nil {return 0,_ff .Wrap (_deg ,_caab ,"");};}else {_decg .FinalHeight =_fbead .PageBMHeight ;};return _decg .FinalHeight ,nil ;};func _fddd (_afga *Document ,_fge int )*Page {return &Page {Document :_afga ,PageNumber :_fge ,Segments :[]*_eg .Header {}};
};func (_dge *Page )String ()string {return _f .Sprintf ("\u0050\u0061\u0067\u0065\u0020\u0023\u0025\u0064",_dge .PageNumber );};func (_cdf *Document )completeSymbols ()(_af error ){const _ffa ="\u0063o\u006dp\u006c\u0065\u0074\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
if _cdf .Classer ==nil {return nil ;};if _cdf .Classer .UndilatedTemplates ==nil {return _ff .Error (_ffa ,"\u006e\u006f t\u0065\u006d\u0070l\u0061\u0074\u0065\u0073 de\u0066in\u0065\u0064\u0020\u0066\u006f\u0072\u0020th\u0065\u0020\u0063\u006c\u0061\u0073\u0073e\u0072");
};_gad :=len (_cdf .Pages )==1;_be :=make ([]int ,_cdf .Classer .UndilatedTemplates .Size ());var _da int ;for _cbba :=0;_cbba < _cdf .Classer .ClassIDs .Size ();_cbba ++{_da ,_af =_cdf .Classer .ClassIDs .Get (_cbba );if _af !=nil {return _ff .Wrap (_af ,_ffa ,"\u0063\u006c\u0061\u0073\u0073\u0020\u0049\u0044\u0027\u0073");
};_be [_da ]++;};var _fgb []int ;for _fda :=0;_fda < _cdf .Classer .UndilatedTemplates .Size ();_fda ++{if _be [_fda ]==0{return _ff .Error (_ffa ,"\u006eo\u0020\u0073y\u006d\u0062\u006f\u006cs\u0020\u0069\u006es\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u0066\u006fun\u0064\u0020\u0066o\u0072\u0020g\u0069\u0076\u0065\u006e\u0020\u0063l\u0061\u0073s\u003f\u0020");
};if _be [_fda ]> 1||_gad {_fgb =append (_fgb ,_fda );};};_cdf ._gc =len (_fgb );var _ad ,_gda int ;for _fgc :=0;_fgc < _cdf .Classer .ComponentPageNumbers .Size ();_fgc ++{_ad ,_af =_cdf .Classer .ComponentPageNumbers .Get (_fgc );if _af !=nil {return _ff .Wrapf (_af ,_ffa ,"p\u0061\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027 \u006e\u006f\u0074\u0020\u0066\u006f\u0075nd\u0020\u0069\u006e\u0020t\u0068\u0065\u0020\u0063\u006c\u0061\u0073\u0073\u0065r \u0070\u0061g\u0065\u006e\u0075\u006d\u0062\u0065\u0072\u0073",_fgc );
};_gda ,_af =_cdf .Classer .ClassIDs .Get (_fgc );if _af !=nil {return _ff .Wrapf (_af ,_ffa ,"\u0063\u0061\u006e\u0027\u0074\u0020\u0067e\u0074\u0020\u0073y\u006d\u0062\u006f\u006c \u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0027\u0025\u0064\u0027\u0020\u0066\u0072\u006f\u006d\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072",_ad );
};if _be [_gda ]==1&&!_gad {_cdf ._gf [_ad ]=append (_cdf ._gf [_ad ],_gda );};};if _af =_cdf .Classer .ComputeLLCorners ();_af !=nil {return _ff .Wrap (_af ,_ffa ,"");};return nil ;};func (_ccb *Page )clearSegmentData (){for _aafc :=range _ccb .Segments {_ccb .Segments [_aafc ].CleanSegmentData ();
};};type Document struct{Pages map[int ]*Page ;NumberOfPagesUnknown bool ;NumberOfPages uint32 ;GBUseExtTemplate bool ;InputStream *_c .Reader ;GlobalSegments *Globals ;OrganizationType _eg .OrganizationType ;Classer *_b .Classer ;XRes ,YRes int ;FullHeaders bool ;
CurrentSegmentNumber uint32 ;AverageTemplates *_ce .Bitmaps ;BaseIndexes []int ;Refinement bool ;RefineLevel int ;_cb uint8 ;_g *_c .BufferedWriter ;EncodeGlobals bool ;_gc int ;_gf map[int ][]int ;_ecc map[int ][]int ;_fa []int ;_ecb map[int ]int ;};func _fae (_eac *_c .Reader ,_cde *Globals )(*Document ,error ){_eeg :=&Document {Pages :make (map[int ]*Page ),InputStream :_eac ,OrganizationType :_eg .OSequential ,NumberOfPagesUnknown :true ,GlobalSegments :_cde ,_cb :9};
if _eeg .GlobalSegments ==nil {_eeg .GlobalSegments =&Globals {};};if _bed :=_eeg .mapData ();_bed !=nil {return nil ,_bed ;};return _eeg ,nil ;};func (_gfeg *Page )getResolutionX ()(int ,error ){const _acece ="\u0067\u0065\u0074\u0052\u0065\u0073\u006f\u006c\u0075t\u0069\u006f\u006e\u0058";
if _gfeg .ResolutionX !=0{return _gfeg .ResolutionX ,nil ;};_gee :=_gfeg .getPageInformationSegment ();if _gee ==nil {return 0,_ff .Error (_acece ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_abd ,_cgbc :=_gee .GetSegmentData ();
if _cgbc !=nil {return 0,_ff .Wrap (_cgbc ,_acece ,"");};_dgbe ,_gfga :=_abd .(*_eg .PageInformationSegment );if !_gfga {return 0,_ff .Errorf (_acece ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_abd );
};_gfeg .ResolutionX =_dgbe .ResolutionX ;return _gfeg .ResolutionX ,nil ;};func (_eab *Page )getPageInformationSegment ()*_eg .Header {for _ ,_cfba :=range _eab .Segments {if _cfba .Type ==_eg .TPageInformation {return _cfba ;};};_dd .Log .Debug ("\u0050\u0061\u0067\u0065\u0020\u0069\u006e\u0066o\u0072\u006d\u0061ti\u006f\u006e\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0066o\u0072\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0073\u002e",_eab );
return nil ;};func (_db *Document )produceClassifiedPages ()(_gabe error ){const _ef ="\u0070\u0072\u006f\u0064uc\u0065\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0050\u0061\u0067e\u0073";if _db .Classer ==nil {return nil ;};var (_deb *Page ;
_gd bool ;_dgb *_eg .Header ;);for _gg :=1;_gg <=int (_db .NumberOfPages );_gg ++{if _deb ,_gd =_db .Pages [_gg ];!_gd {return _ff .Errorf (_ef ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_gg );};if _deb .EncodingMethod ==GenericEM {continue ;
};if _dgb ==nil {if _dgb ,_gabe =_db .GlobalSegments .GetSymbolDictionary ();_gabe !=nil {return _ff .Wrap (_gabe ,_ef ,"");};};if _gabe =_db .produceClassifiedPage (_deb ,_dgb );_gabe !=nil {return _ff .Wrapf (_gabe ,_ef ,"\u0070\u0061\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027",_gg );
};};return nil ;};func (_eca *Document )parseFileHeader ()error {const _bgbe ="\u0070a\u0072s\u0065\u0046\u0069\u006c\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_ ,_fbg :=_eca .InputStream .Seek (8,_fc .SeekStart );if _fbg !=nil {return _ff .Wrap (_fbg ,_bgbe ,"\u0069\u0064");
};_ ,_fbg =_eca .InputStream .ReadBits (5);if _fbg !=nil {return _ff .Wrap (_fbg ,_bgbe ,"\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074\u0073");};_ceb ,_fbg :=_eca .InputStream .ReadBit ();if _fbg !=nil {return _ff .Wrap (_fbg ,_bgbe ,"\u0065x\u0074e\u006e\u0064\u0065\u0064\u0020t\u0065\u006dp\u006c\u0061\u0074\u0065\u0073");
};if _ceb ==1{_eca .GBUseExtTemplate =true ;};_ceb ,_fbg =_eca .InputStream .ReadBit ();if _fbg !=nil {return _ff .Wrap (_fbg ,_bgbe ,"\u0075\u006e\u006b\u006eow\u006e\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};if _ceb !=1{_eca .NumberOfPagesUnknown =false ;
};_ceb ,_fbg =_eca .InputStream .ReadBit ();if _fbg !=nil {return _ff .Wrap (_fbg ,_bgbe ,"\u006f\u0072\u0067\u0061\u006e\u0069\u007a\u0061\u0074\u0069\u006f\u006e \u0074\u0079\u0070\u0065");};_eca .OrganizationType =_eg .OrganizationType (_ceb );if !_eca .NumberOfPagesUnknown {_eca .NumberOfPages ,_fbg =_eca .InputStream .ReadUint32 ();
if _fbg !=nil {return _ff .Wrap (_fbg ,_bgbe ,"\u006eu\u006db\u0065\u0072\u0020\u006f\u0066\u0020\u0070\u0061\u0067\u0065\u0073");};_eca ._cb =13;};return nil ;};func (_debfc *Document )reachedEOF (_ced int64 )(bool ,error ){const _ba ="\u0072\u0065\u0061\u0063\u0068\u0065\u0064\u0045\u004f\u0046";
_ ,_aga :=_debfc .InputStream .Seek (_ced ,_fc .SeekStart );if _aga !=nil {_dd .Log .Debug ("\u0072\u0065\u0061c\u0068\u0065\u0064\u0045\u004f\u0046\u0020\u002d\u0020\u0064\u002e\u0049\u006e\u0070\u0075\u0074\u0053\u0074\u0072\u0065\u0061\u006d\u002e\u0053\u0065\u0065\u006b\u0020\u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_aga );
return false ,_ff .Wrap (_aga ,_ba ,"\u0069n\u0070\u0075\u0074\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020s\u0065\u0065\u006b\u0020\u0066\u0061\u0069\u006c\u0065\u0064");};_ ,_aga =_debfc .InputStream .ReadBits (32);if _aga ==_fc .EOF {return true ,nil ;
}else if _aga !=nil {return false ,_ff .Wrap (_aga ,_ba ,"");};return false ,nil ;};func (_eaa *Document )produceClassifiedPage (_bd *Page ,_gdf *_eg .Header )(_bdg error ){const _dec ="p\u0072\u006f\u0064\u0075ce\u0043l\u0061\u0073\u0073\u0069\u0066i\u0065\u0064\u0050\u0061\u0067\u0065";
var _ffd map[int ]int ;_ag :=_eaa ._gc ;_bgcb :=[]*_eg .Header {_gdf };if len (_eaa ._gf [_bd .PageNumber ])> 0{_ffd =map[int ]int {};_gcfa ,_aa :=_eaa .addSymbolDictionary (_bd .PageNumber ,_eaa .Classer .UndilatedTemplates ,_eaa ._gf [_bd .PageNumber ],_ffd ,false );
if _aa !=nil {return _ff .Wrap (_aa ,_dec ,"");};_bgcb =append (_bgcb ,_gcfa );_ag +=len (_eaa ._gf [_bd .PageNumber ]);};_bc :=_eaa ._ecc [_bd .PageNumber ];_dd .Log .Debug ("P\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020c\u006f\u006d\u0070\u0073: \u0025\u0076",_bd .PageNumber ,_bc );
_bd .addTextRegionSegment (_bgcb ,_eaa ._ecb ,_ffd ,_eaa ._ecc [_bd .PageNumber ],_eaa .Classer .PtaLL ,_eaa .Classer .UndilatedTemplates ,_eaa .Classer .ClassIDs ,nil ,_cf (_ag ),len (_eaa ._ecc [_bd .PageNumber ]));return nil ;};func (_cdcda *Page )Encode (w _c .BinaryWriter )(_fe int ,_dea error ){const _aaf ="P\u0061\u0067\u0065\u002e\u0045\u006e\u0063\u006f\u0064\u0065";
var _dbg int ;for _ ,_debc :=range _cdcda .Segments {if _dbg ,_dea =_debc .Encode (w );_dea !=nil {return _fe ,_ff .Wrap (_dea ,_aaf ,"");};_fe +=_dbg ;};return _fe ,nil ;};func (_cgb *Globals )GetSegment (segmentNumber int )(*_eg .Header ,error ){const _bcab ="\u0047l\u006fb\u0061\u006c\u0073\u002e\u0047e\u0074\u0053e\u0067\u006d\u0065\u006e\u0074";
if _cgb ==nil {return nil ,_ff .Error (_bcab ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_cgb .Segments )==0{return nil ,_ff .Error (_bcab ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");
};var _dff *_eg .Header ;for _ ,_dff =range _cgb .Segments {if _dff .SegmentNumber ==uint32 (segmentNumber ){break ;};};if _dff ==nil {return nil ,_ff .Error (_bcab ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};return _dff ,nil ;};func (_ede *Page )nextSegmentNumber ()uint32 {return _ede .Document .nextSegmentNumber ()};func (_ade *Page )GetBitmap ()(_fac *_ce .Bitmap ,_gbdf error ){_dd .Log .Trace (_f .Sprintf ("\u005b\u0050\u0041G\u0045\u005d\u005b\u0023%\u0064\u005d\u0020\u0047\u0065\u0074\u0042i\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e",_ade .PageNumber ));
defer func (){if _gbdf !=nil {_dd .Log .Trace (_f .Sprintf ("\u005b\u0050\u0041\u0047\u0045\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074B\u0069t\u006d\u0061\u0070\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_ade .PageNumber ,_gbdf ));
}else {_dd .Log .Trace (_f .Sprintf ("\u005b\u0050\u0041\u0047\u0045\u005d\u005b\u0023\u0025\u0064]\u0020\u0047\u0065\u0074\u0042\u0069\u0074m\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064",_ade .PageNumber ));};}();if _ade .Bitmap !=nil {return _ade .Bitmap ,nil ;
};_gbdf =_ade .composePageBitmap ();if _gbdf !=nil {return nil ,_gbdf ;};return _ade .Bitmap ,nil ;};type Globals struct{Segments []*_eg .Header ;};func (_df *Document )Encode ()(_bgf []byte ,_cfd error ){const _fbea ="\u0044o\u0063u\u006d\u0065\u006e\u0074\u002e\u0045\u006e\u0063\u006f\u0064\u0065";
var _ddb ,_ee int ;if _df .FullHeaders {if _ddb ,_cfd =_df .encodeFileHeader (_df ._g );_cfd !=nil {return nil ,_ff .Wrap (_cfd ,_fbea ,"");};};var (_ae bool ;_gdd *_eg .Header ;_egf *Page ;);if _cfd =_df .completeClassifiedPages ();_cfd !=nil {return nil ,_ff .Wrap (_cfd ,_fbea ,"");
};if _cfd =_df .produceClassifiedPages ();_cfd !=nil {return nil ,_ff .Wrap (_cfd ,_fbea ,"");};if _df .GlobalSegments !=nil {for _ ,_gdd =range _df .GlobalSegments .Segments {if _cfd =_df .encodeSegment (_gdd ,&_ddb );_cfd !=nil {return nil ,_ff .Wrap (_cfd ,_fbea ,"");
};};};for _gbg :=1;_gbg <=int (_df .NumberOfPages );_gbg ++{if _egf ,_ae =_df .Pages [_gbg ];!_ae {return nil ,_ff .Errorf (_fbea ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_gbg );};for _ ,_gdd =range _egf .Segments {if _cfd =_df .encodeSegment (_gdd ,&_ddb );
_cfd !=nil {return nil ,_ff .Wrap (_cfd ,_fbea ,"");};};};if _df .FullHeaders {if _ee ,_cfd =_df .encodeEOFHeader (_df ._g );_cfd !=nil {return nil ,_ff .Wrap (_cfd ,_fbea ,"");};_ddb +=_ee ;};_bgf =_df ._g .Data ();if len (_bgf )!=_ddb {_dd .Log .Debug ("\u0042\u0079\u0074\u0065\u0073 \u0077\u0072\u0069\u0074\u0074\u0065\u006e \u0028\u006e\u0029\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0065\u0071\u0075\u0061\u006c\u0020\u0074\u006f\u0020\u0074\u0068\u0065\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006f\u0066\u0020t\u0068\u0065\u0020\u0064\u0061\u0074\u0061\u0020\u0065\u006e\u0063\u006fd\u0065\u0064\u003a\u0020\u0027\u0025d\u0027",_ddb ,len (_bgf ));
};return _bgf ,nil ;};func (_bfg *Page )AddEndOfPageSegment (){_gcgf :=&_eg .Header {Type :_eg .TEndOfPage ,PageAssociation :_bfg .PageNumber };_bfg .Segments =append (_bfg .Segments ,_gcgf );};func (_bcf *Document )encodeFileHeader (_eaf _c .BinaryWriter )(_fdd int ,_ada error ){const _cbbd ="\u0065\u006ec\u006f\u0064\u0065F\u0069\u006c\u0065\u0048\u0065\u0061\u0064\u0065\u0072";
_fdd ,_ada =_eaf .Write (_cd );if _ada !=nil {return _fdd ,_ff .Wrap (_ada ,_cbbd ,"\u0069\u0064");};if _ada =_eaf .WriteByte (0x01);_ada !=nil {return _fdd ,_ff .Wrap (_ada ,_cbbd ,"\u0066\u006c\u0061g\u0073");};_fdd ++;_dce :=make ([]byte ,4);_d .BigEndian .PutUint32 (_dce ,_bcf .NumberOfPages );
_ggf ,_ada :=_eaf .Write (_dce );if _ada !=nil {return _ggf ,_ff .Wrap (_ada ,_cbbd ,"p\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_fdd +=_ggf ;return _fdd ,nil ;};func (_fdgc *Page )AddGenericRegion (bm *_ce .Bitmap ,xloc ,yloc ,template int ,tp _eg .Type ,duplicateLineRemoval bool )error {const _bde ="P\u0061\u0067\u0065\u002eAd\u0064G\u0065\u006e\u0065\u0072\u0069c\u0052\u0065\u0067\u0069\u006f\u006e";
_bac :=&_eg .GenericRegion {};if _aed :=_bac .InitEncode (bm ,xloc ,yloc ,template ,duplicateLineRemoval );_aed !=nil {return _ff .Wrap (_aed ,_bde ,"");};_bff :=&_eg .Header {Type :_eg .TImmediateGenericRegion ,PageAssociation :_fdgc .PageNumber ,SegmentData :_bac };
_fdgc .Segments =append (_fdgc .Segments ,_bff );return nil ;};func DecodeDocument (input *_c .Reader ,globals *Globals )(*Document ,error ){return _fae (input ,globals );};func (_def *Page )getResolutionY ()(int ,error ){const _cdefg ="\u0067\u0065\u0074\u0052\u0065\u0073\u006f\u006c\u0075t\u0069\u006f\u006e\u0059";
if _def .ResolutionY !=0{return _def .ResolutionY ,nil ;};_acee :=_def .getPageInformationSegment ();if _acee ==nil {return 0,_ff .Error (_cdefg ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_cba ,_bab :=_acee .GetSegmentData ();
if _bab !=nil {return 0,_ff .Wrap (_bab ,_cdefg ,"");};_gbga ,_cga :=_cba .(*_eg .PageInformationSegment );if !_cga {return 0,_ff .Errorf (_cdefg ,"\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0066o\u0072\u006d\u0061ti\u006f\u006e\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0069\u0073\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0074\u0079\u0070\u0065\u003a\u0027%\u0054\u0027",_cba );
};_def .ResolutionY =_gbga .ResolutionY ;return _def .ResolutionY ,nil ;};func (_cae *Page )getCombinationOperator (_dad *_eg .PageInformationSegment ,_dag _ce .CombinationOperator )_ce .CombinationOperator {if _dad .CombinationOperatorOverrideAllowed (){return _dag ;
};return _dad .CombinationOperator ();};func (_debf *Document )encodeSegment (_gag *_eg .Header ,_gbeg *int )error {const _gae ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074";_gag .SegmentNumber =_debf .nextSegmentNumber ();
_ca ,_egdb :=_gag .Encode (_debf ._g );if _egdb !=nil {return _ff .Wrapf (_egdb ,_gae ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_gag .SegmentNumber );};*_gbeg +=_ca ;return nil ;};func (_fff *Document )GetNumberOfPages ()(uint32 ,error ){if _fff .NumberOfPagesUnknown ||_fff .NumberOfPages ==0{if len (_fff .Pages )==0{if _bgb :=_fff .mapData ();
_bgb !=nil {return 0,_ff .Wrap (_bgb ,"\u0044o\u0063\u0075\u006d\u0065n\u0074\u002e\u0047\u0065\u0074N\u0075m\u0062e\u0072\u004f\u0066\u0050\u0061\u0067\u0065s","");};};return uint32 (len (_fff .Pages )),nil ;};return _fff .NumberOfPages ,nil ;};func (_ebc *Page )countRegions ()int {var _acdgc int ;
for _ ,_fbeg :=range _ebc .Segments {switch _fbeg .Type {case 6,7,22,23,38,39,42,43:_acdgc ++;};};return _acdgc ;};func (_gggd *Page )composePageBitmap ()error {const _cea ="\u0063\u006f\u006d\u0070\u006f\u0073\u0065\u0050\u0061\u0067\u0065\u0042i\u0074\u006d\u0061\u0070";
if _gggd .PageNumber ==0{return nil ;};_edb :=_gggd .getPageInformationSegment ();if _edb ==nil {return _ff .Error (_cea ,"\u0070\u0061\u0067e \u0069\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069o\u006e \u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
};_abf ,_ecdd :=_edb .GetSegmentData ();if _ecdd !=nil {return _ecdd ;};_agc ,_aeb :=_abf .(*_eg .PageInformationSegment );if !_aeb {return _ff .Error (_cea ,"\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006da\u0074\u0069\u006f\u006e \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");
};if _ecdd =_gggd .createPage (_agc );_ecdd !=nil {return _ff .Wrap (_ecdd ,_cea ,"");};_gggd .clearSegmentData ();return nil ;};func (_cdc *Document )completeClassifiedPages ()(_ga error ){const _gab ="\u0063\u006f\u006dpl\u0065\u0074\u0065\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0050\u0061\u0067\u0065\u0073";
if _cdc .Classer ==nil {return nil ;};_cdc ._fa =make ([]int ,_cdc .Classer .UndilatedTemplates .Size ());for _cbc :=0;_cbc < _cdc .Classer .ClassIDs .Size ();_cbc ++{_gcf ,_gce :=_cdc .Classer .ClassIDs .Get (_cbc );if _gce !=nil {return _ff .Wrapf (_gce ,_gab ,"\u0063\u006c\u0061\u0073s \u0077\u0069\u0074\u0068\u0020\u0069\u0064\u003a\u0020\u0027\u0025\u0064\u0027",_cbc );
};_cdc ._fa [_gcf ]++;};var _cc []int ;for _acc :=0;_acc < _cdc .Classer .UndilatedTemplates .Size ();_acc ++{if _cdc .NumberOfPages ==1||_cdc ._fa [_acc ]> 1{_cc =append (_cc ,_acc );};};var (_gb *Page ;_ebd bool ;);for _bg ,_fd :=range *_cdc .Classer .ComponentPageNumbers {if _gb ,_ebd =_cdc .Pages [_fd ];
!_ebd {return _ff .Errorf (_gab ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_bg );};if _gb .EncodingMethod ==GenericEM {_dd .Log .Error ("\u0047\u0065\u006e\u0065\u0072\u0069c\u0020\u0070\u0061g\u0065\u0020\u0077i\u0074\u0068\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u003a \u0027\u0025\u0064\u0027\u0020ma\u0070\u0070\u0065\u0064\u0020\u0061\u0073\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0020\u0070\u0061\u0067\u0065",_bg );
continue ;};_cdc ._ecc [_fd ]=append (_cdc ._ecc [_fd ],_bg );_dgd ,_bf :=_cdc .Classer .ClassIDs .Get (_bg );if _bf !=nil {return _ff .Wrapf (_bf ,_gab ,"\u006e\u006f\u0020\u0073uc\u0068\u0020\u0063\u006c\u0061\u0073\u0073\u0049\u0044\u003a\u0020\u0025\u0064",_bg );
};if _cdc ._fa [_dgd ]==1&&_cdc .NumberOfPages !=1{_cbe :=append (_cdc ._gf [_fd ],_dgd );_cdc ._gf [_fd ]=_cbe ;};};if _ga =_cdc .Classer .ComputeLLCorners ();_ga !=nil {return _ff .Wrap (_ga ,_gab ,"");};if _ ,_ga =_cdc .addSymbolDictionary (0,_cdc .Classer .UndilatedTemplates ,_cc ,_cdc ._ecb ,false );
_ga !=nil {return _ff .Wrap (_ga ,_gab ,"");};return nil ;};func (_acd *Globals )GetSegmentByIndex (index int )(*_eg .Header ,error ){const _debd ="\u0047l\u006f\u0062\u0061\u006cs\u002e\u0047\u0065\u0074\u0053e\u0067m\u0065n\u0074\u0042\u0079\u0049\u006e\u0064\u0065x";
if _acd ==nil {return nil ,_ff .Error (_debd ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_acd .Segments )==0{return nil ,_ff .Error (_debd ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");
};if index > len (_acd .Segments )-1{return nil ,_ff .Error (_debd ,"\u0069n\u0064e\u0078\u0020\u006f\u0075\u0074 \u006f\u0066 \u0072\u0061\u006e\u0067\u0065");};return _acd .Segments [index ],nil ;};func (_fdgcb *Page )GetResolutionX ()(int ,error ){return _fdgcb .getResolutionX ()};
func (_ddg *Document )determineRandomDataOffsets (_fcf []*_eg .Header ,_ebfe uint64 ){if _ddg .OrganizationType !=_eg .ORandom {return ;};for _ ,_bdcc :=range _fcf {_bdcc .SegmentDataStartOffset =_ebfe ;_ebfe +=_bdcc .SegmentDataLength ;};};func (_decb *Page )lastSegmentNumber ()(_fee uint32 ,_fec error ){const _gbcb ="\u006c\u0061\u0073\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";
if len (_decb .Segments )==0{return _fee ,_ff .Errorf (_gbcb ,"\u006e\u006f\u0020se\u0067\u006d\u0065\u006e\u0074\u0073\u0020\u0066\u006fu\u006ed\u0020i\u006e \u0074\u0068\u0065\u0020\u0070\u0061\u0067\u0065\u0020\u0027\u0025\u0064\u0027",_decb .PageNumber );
};return _decb .Segments [len (_decb .Segments )-1].SegmentNumber ,nil ;};func (_gca *Document )encodeEOFHeader (_ace _c .BinaryWriter )(_bfa int ,_acec error ){_edc :=&_eg .Header {SegmentNumber :_gca .nextSegmentNumber (),Type :_eg .TEndOfFile };if _bfa ,_acec =_edc .Encode (_ace );
_acec !=nil {return 0,_ff .Wrap (_acec ,"\u0065n\u0063o\u0064\u0065\u0045\u004f\u0046\u0048\u0065\u0061\u0064\u0065\u0072","");};return _bfa ,nil ;};func (_ged *Page )createPage (_edcc *_eg .PageInformationSegment )error {var _bcd error ;if !_edcc .IsStripe ||_edcc .PageBMHeight !=-1{_bcd =_ged .createNormalPage (_edcc );
}else {_bcd =_ged .createStripedPage (_edcc );};return _bcd ;};func (_acea *Document )isFileHeaderPresent ()(bool ,error ){_acea .InputStream .Mark ();for _ ,_ggg :=range _cd {_fca ,_gef :=_acea .InputStream .ReadByte ();if _gef !=nil {return false ,_gef ;
};if _ggg !=_fca {_acea .InputStream .Reset ();return false ,nil ;};};_acea .InputStream .Reset ();return true ,nil ;};