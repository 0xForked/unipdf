//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package document ;import (_ac "encoding/binary";_eg "fmt";_gc "github.com/unidoc/unipdf/v3/common";_b "github.com/unidoc/unipdf/v3/internal/bitwise";_ge "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_be "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";
_bc "github.com/unidoc/unipdf/v3/internal/jbig2/document/segments";_c "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/classer";_ef "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_f "io";_e "math";_g "runtime/debug";);func DecodeDocument (input _b .StreamReader ,globals *Globals )(*Document ,error ){return _fbe (input ,globals );
};func (_cg *Document )AddClassifiedPage (bm *_be .Bitmap ,method _c .Method )(_ga error ){const _cf ="\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002e\u0041\u0064d\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064P\u0061\u0067\u0065";if !_cg .FullHeaders &&_cg .NumberOfPages !=0{return _ef .Error (_cf ,"\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0070\u0061\u0067\u0065\u002e\u0020\u0046\u0069\u006c\u0065\u004d\u006f\u0064\u0065\u0020\u0064\u0069\u0073\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0064\u0064i\u006e\u0067\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e \u006f\u006e\u0065\u0020\u0070\u0061g\u0065");
};if _cg .Classer ==nil {if _cg .Classer ,_ga =_c .Init (_c .DefaultSettings ());_ga !=nil {return _ef .Wrap (_ga ,_cf ,"");};};_da :=int (_cg .nextPageNumber ());_eb :=&Page {Segments :[]*_bc .Header {},Bitmap :bm ,Document :_cg ,FinalHeight :bm .Height ,FinalWidth :bm .Width ,PageNumber :_da };
_cg .Pages [_da ]=_eb ;switch method {case _c .RankHaus :_eb .EncodingMethod =RankHausEM ;case _c .Correlation :_eb .EncodingMethod =CorrelationEM ;};_eb .AddPageInformationSegment ();if _ga =_cg .Classer .AddPage (bm ,_da ,method );_ga !=nil {return _ef .Wrap (_ga ,_cf ,"");
};if _cg .FullHeaders {_eb .AddEndOfPageSegment ();};return nil ;};func (_agg *Document )GetGlobalSegment (i int )(*_bc .Header ,error ){_agf ,_gcf :=_agg .GlobalSegments .GetSegment (i );if _gcf !=nil {return nil ,_ef .Wrap (_gcf ,"\u0047\u0065t\u0047\u006c\u006fb\u0061\u006c\u0053\u0065\u0067\u006d\u0065\u006e\u0074","");
};return _agf ,nil ;};func (_bgde *Page )GetSegment (number int )(*_bc .Header ,error ){const _bddf ="\u0050a\u0067e\u002e\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074";for _ ,_bgc :=range _bgde .Segments {if _bgc .SegmentNumber ==uint32 (number ){return _bgc ,nil ;
};};_fab :=make ([]uint32 ,len (_bgde .Segments ));for _dad ,_gef :=range _bgde .Segments {_fab [_dad ]=_gef .SegmentNumber ;};return nil ,_ef .Errorf (_bddf ,"\u0073e\u0067\u006d\u0065n\u0074\u0020\u0077i\u0074h \u006e\u0075\u006d\u0062\u0065\u0072\u003a \u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0070\u0061\u0067\u0065\u003a\u0020'%\u0064'\u002e\u0020\u004b\u006e\u006f\u0077n\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u003a \u0025\u0076",number ,_bgde .PageNumber ,_fab );
};func (_agcd *Page )countRegions ()int {var _gggc int ;for _ ,_gcg :=range _agcd .Segments {switch _gcg .Type {case 6,7,22,23,38,39,42,43:_gggc ++;};};return _gggc ;};func (_dbf *Document )encodeSegment (_de *_bc .Header ,_afb *int )error {const _cfeg ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074";
_de .SegmentNumber =_dbf .nextSegmentNumber ();_fcc ,_gee :=_de .Encode (_dbf ._gd );if _gee !=nil {return _ef .Wrapf (_gee ,_cfeg ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_de .SegmentNumber );};*_afb +=_fcc ;return nil ;
};func (_bg *Document )addSymbolDictionary (_bbg int ,_cb *_be .Bitmaps ,_gecc []int ,_egd map[int ]int ,_fa bool )(*_bc .Header ,error ){const _fba ="\u0061\u0064\u0064\u0053ym\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079";
_acc :=&_bc .SymbolDictionary {};if _ged :=_acc .InitEncode (_cb ,_gecc ,_egd ,_fa );_ged !=nil {return nil ,_ged ;};_cae :=&_bc .Header {Type :_bc .TSymbolDictionary ,PageAssociation :_bbg ,SegmentData :_acc };if _bbg ==0{if _bg .GlobalSegments ==nil {_bg .GlobalSegments =&Globals {};
};_bg .GlobalSegments .AddSegment (_cae );return _cae ,nil ;};_fd ,_aec :=_bg .Pages [_bbg ];if !_aec {return nil ,_ef .Errorf (_fba ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_bbg );};var (_gag int ;
_fg *_bc .Header ;);for _gag ,_fg =range _fd .Segments {if _fg .Type ==_bc .TPageInformation {break ;};};_gag ++;_fd .Segments =append (_fd .Segments ,nil );copy (_fd .Segments [_gag +1:],_fd .Segments [_gag :]);_fd .Segments [_gag ]=_cae ;return _cae ,nil ;
};func (_gde *Page )addTextRegionSegment (_aabc []*_bc .Header ,_cbc ,_cbd map[int ]int ,_cfec []int ,_acg *_be .Points ,_fccd *_be .Bitmaps ,_ccg *_ge .IntSlice ,_bbc *_be .Boxes ,_fbdg ,_aeag int ){_bfa :=&_bc .TextRegion {NumberOfSymbols :uint32 (_aeag )};
_bfa .InitEncode (_cbc ,_cbd ,_cfec ,_acg ,_fccd ,_ccg ,_bbc ,_gde .FinalWidth ,_gde .FinalHeight ,_fbdg );_bda :=&_bc .Header {RTSegments :_aabc ,SegmentData :_bfa ,PageAssociation :_gde .PageNumber ,Type :_bc .TImmediateTextRegion };_geb :=_bc .TPageInformation ;
if _cbd !=nil {_geb =_bc .TSymbolDictionary ;};var _gbf int ;for ;_gbf < len (_gde .Segments );_gbf ++{if _gde .Segments [_gbf ].Type ==_geb {_gbf ++;break ;};};_gde .Segments =append (_gde .Segments ,nil );copy (_gde .Segments [_gbf +1:],_gde .Segments [_gbf :]);
_gde .Segments [_gbf ]=_bda ;};func (_ecc *Page )getResolutionX ()(int ,error ){const _baad ="\u0067\u0065\u0074\u0052\u0065\u0073\u006f\u006c\u0075t\u0069\u006f\u006e\u0058";if _ecc .ResolutionX !=0{return _ecc .ResolutionX ,nil ;};_ced :=_ecc .getPageInformationSegment ();
if _ced ==nil {return 0,_ef .Error (_baad ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_ggdg ,_eca :=_ced .GetSegmentData ();if _eca !=nil {return 0,_ef .Wrap (_eca ,_baad ,"");};_geea ,_gge :=_ggdg .(*_bc .PageInformationSegment );
if !_gge {return 0,_ef .Errorf (_baad ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_ggdg );
};_ecc .ResolutionX =_geea .ResolutionX ;return _ecc .ResolutionX ,nil ;};func (_fcce *Document )GetPage (pageNumber int )(_bc .Pager ,error ){const _ccd ="\u0044\u006fc\u0075\u006d\u0065n\u0074\u002e\u0047\u0065\u0074\u0050\u0061\u0067\u0065";if pageNumber < 0{_gc .Log .Debug ("\u004a\u0042\u0049\u00472\u0020\u0050\u0061\u0067\u0065\u0020\u002d\u0020\u0047e\u0074\u0050\u0061\u0067\u0065\u003a\u0020\u0025\u0064\u002e\u0020\u0050\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062e\u0020\u006c\u006f\u0077\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0030\u002e\u0020\u0025\u0073",pageNumber ,_g .Stack ());
return nil ,_ef .Errorf (_ccd ,"\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032\u0020d\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020\u002d\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064 \u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u003a\u0020\u0025\u0064",pageNumber );
};if pageNumber > len (_fcce .Pages ){_gc .Log .Debug ("\u0050\u0061\u0067\u0065 n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0064\u002e\u0020%\u0073",pageNumber ,_g .Stack ());return nil ,_ef .Error (_ccd ,"\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065n\u0074\u0020\u002d\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};_gb ,_gfb :=_fcce .Pages [pageNumber ];if !_gfb {_gc .Log .Debug ("\u0050\u0061\u0067\u0065 n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0064\u002e\u0020%\u0073",pageNumber ,_g .Stack ());return nil ,_ef .Errorf (_ccd ,"\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065n\u0074\u0020\u002d\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};return _gb ,nil ;};func (_eee *Page )AddPageInformationSegment (){_fgad :=&_bc .PageInformationSegment {PageBMWidth :_eee .FinalWidth ,PageBMHeight :_eee .FinalHeight ,ResolutionX :_eee .ResolutionX ,ResolutionY :_eee .ResolutionY ,IsLossless :_eee .IsLossless };
if _eee .BlackIsOne {_fgad .DefaultPixelValue =uint8 (0x1);};_aaa :=&_bc .Header {PageAssociation :_eee .PageNumber ,SegmentDataLength :uint64 (_fgad .Size ()),SegmentData :_fgad ,Type :_bc .TPageInformation };_eee .Segments =append (_eee .Segments ,_aaa );
};func (_cde *Page )clearSegmentData (){for _dbag :=range _cde .Segments {_cde .Segments [_dbag ].CleanSegmentData ();};};func (_ggd *Page )collectPageStripes ()(_aed []_bc .Segmenter ,_faff error ){const _dgf ="\u0063o\u006cl\u0065\u0063\u0074\u0050\u0061g\u0065\u0053t\u0072\u0069\u0070\u0065\u0073";
var _efda _bc .Segmenter ;for _ ,_gdc :=range _ggd .Segments {switch _gdc .Type {case 6,7,22,23,38,39,42,43:_efda ,_faff =_gdc .GetSegmentData ();if _faff !=nil {return nil ,_ef .Wrap (_faff ,_dgf ,"");};_aed =append (_aed ,_efda );case 50:_efda ,_faff =_gdc .GetSegmentData ();
if _faff !=nil {return nil ,_faff ;};_bce ,_efeg :=_efda .(*_bc .EndOfStripe );if !_efeg {return nil ,_ef .Errorf (_dgf ,"\u0045\u006e\u0064\u004f\u0066\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u006f\u0066\u0020\u0076\u0061l\u0069\u0064\u0020\u0074\u0079p\u0065\u003a \u0027\u0025\u0054\u0027",_efda );
};_aed =append (_aed ,_bce );_ggd .FinalHeight =_bce .LineNumber ();};};return _aed ,nil ;};func (_ee *Document )GetNumberOfPages ()(uint32 ,error ){if _ee .NumberOfPagesUnknown ||_ee .NumberOfPages ==0{if len (_ee .Pages )==0{if _ece :=_ee .mapData ();
_ece !=nil {return 0,_ef .Wrap (_ece ,"\u0044o\u0063\u0075\u006d\u0065n\u0074\u002e\u0047\u0065\u0074N\u0075m\u0062e\u0072\u004f\u0066\u0050\u0061\u0067\u0065s","");};};return uint32 (len (_ee .Pages )),nil ;};return _ee .NumberOfPages ,nil ;};func _fbe (_fcd _b .StreamReader ,_cba *Globals )(*Document ,error ){_ggg :=&Document {Pages :make (map[int ]*Page ),InputStream :_fcd ,OrganizationType :_bc .OSequential ,NumberOfPagesUnknown :true ,GlobalSegments :_cba ,_gf :9};
if _ggg .GlobalSegments ==nil {_ggg .GlobalSegments =&Globals {};};if _adde :=_ggg .mapData ();_adde !=nil {return nil ,_adde ;};return _ggg ,nil ;};func (_bdg *Document )isFileHeaderPresent ()(bool ,error ){_bdg .InputStream .Mark ();for _ ,_bdd :=range _efd {_ddg ,_ebcg :=_bdg .InputStream .ReadByte ();
if _ebcg !=nil {return false ,_ebcg ;};if _bdd !=_ddg {_bdg .InputStream .Reset ();return false ,nil ;};};_bdg .InputStream .Reset ();return true ,nil ;};func (_efb *Page )GetResolutionY ()(int ,error ){return _efb .getResolutionY ()};func (_adg *Document )parseFileHeader ()error {const _bee ="\u0070a\u0072s\u0065\u0046\u0069\u006c\u0065\u0048\u0065\u0061\u0064\u0065\u0072";
_ ,_ffce :=_adg .InputStream .Seek (8,_f .SeekStart );if _ffce !=nil {return _ef .Wrap (_ffce ,_bee ,"\u0069\u0064");};_ ,_ffce =_adg .InputStream .ReadBits (5);if _ffce !=nil {return _ef .Wrap (_ffce ,_bee ,"\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074\u0073");
};_bef ,_ffce :=_adg .InputStream .ReadBit ();if _ffce !=nil {return _ef .Wrap (_ffce ,_bee ,"\u0065x\u0074e\u006e\u0064\u0065\u0064\u0020t\u0065\u006dp\u006c\u0061\u0074\u0065\u0073");};if _bef ==1{_adg .GBUseExtTemplate =true ;};_bef ,_ffce =_adg .InputStream .ReadBit ();
if _ffce !=nil {return _ef .Wrap (_ffce ,_bee ,"\u0075\u006e\u006b\u006eow\u006e\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};if _bef !=1{_adg .NumberOfPagesUnknown =false ;};_bef ,_ffce =_adg .InputStream .ReadBit ();if _ffce !=nil {return _ef .Wrap (_ffce ,_bee ,"\u006f\u0072\u0067\u0061\u006e\u0069\u007a\u0061\u0074\u0069\u006f\u006e \u0074\u0079\u0070\u0065");
};_adg .OrganizationType =_bc .OrganizationType (_bef );if !_adg .NumberOfPagesUnknown {_adg .NumberOfPages ,_ffce =_adg .InputStream .ReadUint32 ();if _ffce !=nil {return _ef .Wrap (_ffce ,_bee ,"\u006eu\u006db\u0065\u0072\u0020\u006f\u0066\u0020\u0070\u0061\u0067\u0065\u0073");
};_adg ._gf =13;};return nil ;};func (_fcfb *Page )fitsPage (_fbaf *_bc .PageInformationSegment ,_fbfc *_be .Bitmap )bool {return _fcfb .countRegions ()==1&&_fbaf .DefaultPixelValue ==0&&_fbaf .PageBMWidth ==_fbfc .Width &&_fbaf .PageBMHeight ==_fbfc .Height ;
};func (_bbb *Document )determineRandomDataOffsets (_bgd []*_bc .Header ,_ebd uint64 ){if _bbb .OrganizationType !=_bc .ORandom {return ;};for _ ,_gfbd :=range _bgd {_gfbd .SegmentDataStartOffset =_ebd ;_ebd +=_gfbd .SegmentDataLength ;};};func (_ed *Document )AddGenericPage (bm *_be .Bitmap ,duplicateLineRemoval bool )(_d error ){const _ea ="\u0044\u006f\u0063um\u0065\u006e\u0074\u002e\u0041\u0064\u0064\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0050\u0061\u0067\u0065";
if !_ed .FullHeaders &&_ed .NumberOfPages !=0{return _ef .Error (_ea ,"\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0070\u0061\u0067\u0065\u002e\u0020\u0046\u0069\u006c\u0065\u004d\u006f\u0064\u0065\u0020\u0064\u0069\u0073\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0064\u0064i\u006e\u0067\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e \u006f\u006e\u0065\u0020\u0070\u0061g\u0065");
};_gg :=&Page {Segments :[]*_bc .Header {},Bitmap :bm ,Document :_ed ,FinalHeight :bm .Height ,FinalWidth :bm .Width ,IsLossless :true ,BlackIsOne :bm .Color ==_be .Chocolate };_gg .PageNumber =int (_ed .nextPageNumber ());_ed .Pages [_gg .PageNumber ]=_gg ;
bm .InverseData ();_gg .AddPageInformationSegment ();if _d =_gg .AddGenericRegion (bm ,0,0,0,_bc .TImmediateGenericRegion ,duplicateLineRemoval );_d !=nil {return _ef .Wrap (_d ,_ea ,"");};if _ed .FullHeaders {_gg .AddEndOfPageSegment ();};return nil ;
};func InitEncodeDocument (fullHeaders bool )*Document {return &Document {FullHeaders :fullHeaders ,_gd :_b .BufferedMSB (),Pages :map[int ]*Page {},_ff :map[int ][]int {},_aa :map[int ]int {},_ec :map[int ][]int {}};};func (_efe *Document )produceClassifiedPages ()(_aga error ){const _bb ="\u0070\u0072\u006f\u0064uc\u0065\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0050\u0061\u0067e\u0073";
if _efe .Classer ==nil {return nil ;};var (_abf *Page ;_cfe bool ;_dd *_bc .Header ;);for _ggf :=1;_ggf <=int (_efe .NumberOfPages );_ggf ++{if _abf ,_cfe =_efe .Pages [_ggf ];!_cfe {return _ef .Errorf (_bb ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_ggf );
};if _abf .EncodingMethod ==GenericEM {continue ;};if _dd ==nil {if _dd ,_aga =_efe .GlobalSegments .GetSymbolDictionary ();_aga !=nil {return _ef .Wrap (_aga ,_bb ,"");};};if _aga =_efe .produceClassifiedPage (_abf ,_dd );_aga !=nil {return _ef .Wrapf (_aga ,_bb ,"\u0070\u0061\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027",_ggf );
};};return nil ;};func (_cee *Page )createPage (_abc *_bc .PageInformationSegment )error {var _acgb error ;if !_abc .IsStripe ||_abc .PageBMHeight !=-1{_acgb =_cee .createNormalPage (_abc );}else {_acgb =_cee .createStripedPage (_abc );};return _acgb ;
};var _efd =[]byte {0x97,0x4A,0x42,0x32,0x0D,0x0A,0x1A,0x0A};func (_ffc *Document )nextPageNumber ()uint32 {_ffc .NumberOfPages ++;return _ffc .NumberOfPages };func (_agfb *Document )encodeEOFHeader (_acd _b .BinaryWriter )(_ddc int ,_add error ){_fbf :=&_bc .Header {SegmentNumber :_agfb .nextSegmentNumber (),Type :_bc .TEndOfFile };
if _ddc ,_add =_fbf .Encode (_acd );_add !=nil {return 0,_ef .Wrap (_add ,"\u0065n\u0063o\u0064\u0065\u0045\u004f\u0046\u0048\u0065\u0061\u0064\u0065\u0072","");};return _ddc ,nil ;};func (_adaa *Page )createNormalPage (_bca *_bc .PageInformationSegment )error {const _caef ="\u0063\u0072e\u0061\u0074\u0065N\u006f\u0072\u006d\u0061\u006c\u0050\u0061\u0067\u0065";
_adaa .Bitmap =_be .New (_bca .PageBMWidth ,_bca .PageBMHeight );if _bca .DefaultPixelValue !=0{_adaa .Bitmap .SetDefaultPixel ();};for _ ,_afad :=range _adaa .Segments {switch _afad .Type {case 6,7,22,23,38,39,42,43:_gc .Log .Trace ("\u0047\u0065\u0074\u0074in\u0067\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0064",_afad .SegmentNumber );
_fdb ,_fgc :=_afad .GetSegmentData ();if _fgc !=nil {return _fgc ;};_cbgg ,_feb :=_fdb .(_bc .Regioner );if !_feb {_gc .Log .Debug ("\u0053\u0065g\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069on\u0065\u0072",_fdb );
return _ef .Errorf (_caef ,"i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062i\u0067\u0032\u0020\u0073\u0065\u0067\u006den\u0074\u0020\u0074\u0079p\u0065\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061 R\u0065\u0067i\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_fdb );
};_cab ,_fgc :=_cbgg .GetRegionBitmap ();if _fgc !=nil {return _ef .Wrap (_fgc ,_caef ,"");};if _adaa .fitsPage (_bca ,_cab ){_adaa .Bitmap =_cab ;}else {_fge :=_cbgg .GetRegionInfo ();_gaab :=_adaa .getCombinationOperator (_bca ,_fge .CombinaionOperator );
_fgc =_be .Blit (_cab ,_adaa .Bitmap ,int (_fge .XLocation ),int (_fge .YLocation ),_gaab );if _fgc !=nil {return _ef .Wrap (_fgc ,_caef ,"");};};};};return nil ;};func (_gfe *Document )mapData ()error {const _agd ="\u006da\u0070\u0044\u0061\u0074\u0061";
var (_fga []*_bc .Header ;_faf int64 ;_ecgf _bc .Type ;);_acda ,_beag :=_gfe .isFileHeaderPresent ();if _beag !=nil {return _ef .Wrap (_beag ,_agd ,"");};if _acda {if _beag =_gfe .parseFileHeader ();_beag !=nil {return _ef .Wrap (_beag ,_agd ,"");};_faf +=int64 (_gfe ._gf );
_gfe .FullHeaders =true ;};var (_ffg *Page ;_efde bool ;);for _ecgf !=51&&!_efde {_fcf ,_fgb :=_bc .NewHeader (_gfe ,_gfe .InputStream ,_faf ,_gfe .OrganizationType );if _fgb !=nil {return _ef .Wrap (_fgb ,_agd ,"");};_gc .Log .Trace ("\u0044\u0065c\u006f\u0064\u0069\u006eg\u0020\u0073e\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u0075m\u0062\u0065\u0072\u003a\u0020\u0025\u0064\u002c\u0020\u0054\u0079\u0070e\u003a\u0020\u0025\u0073",_fcf .SegmentNumber ,_fcf .Type );
_ecgf =_fcf .Type ;if _ecgf !=_bc .TEndOfFile {if _fcf .PageAssociation !=0{_ffg =_gfe .Pages [_fcf .PageAssociation ];if _ffg ==nil {_ffg =_fecc (_gfe ,_fcf .PageAssociation );_gfe .Pages [_fcf .PageAssociation ]=_ffg ;if _gfe .NumberOfPagesUnknown {_gfe .NumberOfPages ++;
};};_ffg .Segments =append (_ffg .Segments ,_fcf );}else {_gfe .GlobalSegments .AddSegment (_fcf );};};_fga =append (_fga ,_fcf );_faf =_gfe .InputStream .StreamPosition ();if _gfe .OrganizationType ==_bc .OSequential {_faf +=int64 (_fcf .SegmentDataLength );
};_efde ,_fgb =_gfe .reachedEOF (_faf );if _fgb !=nil {_gc .Log .Debug ("\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020\u0072\u0065\u0061\u0063h\u0065\u0064\u0020\u0045\u004f\u0046\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_fgb );
return _ef .Wrap (_fgb ,_agd ,"");};};_gfe .determineRandomDataOffsets (_fga ,uint64 (_faf ));return nil ;};type EncodingMethod int ;type Page struct{Segments []*_bc .Header ;PageNumber int ;Bitmap *_be .Bitmap ;FinalHeight int ;FinalWidth int ;ResolutionX int ;
ResolutionY int ;IsLossless bool ;Document *Document ;FirstSegmentNumber int ;EncodingMethod EncodingMethod ;BlackIsOne bool ;};type Document struct{Pages map[int ]*Page ;NumberOfPagesUnknown bool ;NumberOfPages uint32 ;GBUseExtTemplate bool ;InputStream _b .StreamReader ;
GlobalSegments *Globals ;OrganizationType _bc .OrganizationType ;Classer *_c .Classer ;XRes ,YRes int ;FullHeaders bool ;CurrentSegmentNumber uint32 ;AverageTemplates *_be .Bitmaps ;BaseIndexes []int ;Refinement bool ;RefineLevel int ;_gf uint8 ;_gd *_b .BufferedWriter ;
EncodeGlobals bool ;_ad int ;_ff map[int ][]int ;_ec map[int ][]int ;_fe []int ;_aa map[int ]int ;};func (_bdc *Page )Encode (w _b .BinaryWriter )(_bddc int ,_ddf error ){const _gbb ="P\u0061\u0067\u0065\u002e\u0045\u006e\u0063\u006f\u0064\u0065";var _fgd int ;
for _ ,_adf :=range _bdc .Segments {if _fgd ,_ddf =_adf .Encode (w );_ddf !=nil {return _bddc ,_ef .Wrap (_ddf ,_gbb ,"");};_bddc +=_fgd ;};return _bddc ,nil ;};func (_gefg *Page )getWidth ()(int ,error ){const _ffbg ="\u0067\u0065\u0074\u0057\u0069\u0064\u0074\u0068";
if _gefg .FinalWidth !=0{return _gefg .FinalWidth ,nil ;};_cdb :=_gefg .getPageInformationSegment ();if _cdb ==nil {return 0,_ef .Error (_ffbg ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_cec ,_eff :=_cdb .GetSegmentData ();
if _eff !=nil {return 0,_ef .Wrap (_eff ,_ffbg ,"");};_dc ,_fad :=_cec .(*_bc .PageInformationSegment );if !_fad {return 0,_ef .Errorf (_ffbg ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_cec );
};_gefg .FinalWidth =_dc .PageBMWidth ;return _gefg .FinalWidth ,nil ;};func (_ebca *Page )AddGenericRegion (bm *_be .Bitmap ,xloc ,yloc ,template int ,tp _bc .Type ,duplicateLineRemoval bool )error {const _aaba ="P\u0061\u0067\u0065\u002eAd\u0064G\u0065\u006e\u0065\u0072\u0069c\u0052\u0065\u0067\u0069\u006f\u006e";
_bddd :=&_bc .GenericRegion {};if _bbf :=_bddd .InitEncode (bm ,xloc ,yloc ,template ,duplicateLineRemoval );_bbf !=nil {return _ef .Wrap (_bbf ,_aaba ,"");};_caf :=&_bc .Header {Type :_bc .TImmediateGenericRegion ,PageAssociation :_ebca .PageNumber ,SegmentData :_bddd };
_ebca .Segments =append (_ebca .Segments ,_caf );return nil ;};func (_debb *Page )getHeight ()(int ,error ){const _efbd ="\u0067e\u0074\u0048\u0065\u0069\u0067\u0068t";if _debb .FinalHeight !=0{return _debb .FinalHeight ,nil ;};_cfa :=_debb .getPageInformationSegment ();
if _cfa ==nil {return 0,_ef .Error (_efbd ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_bgga ,_fcg :=_cfa .GetSegmentData ();if _fcg !=nil {return 0,_ef .Wrap (_fcg ,_efbd ,"");};_gfeb ,_fcff :=_bgga .(*_bc .PageInformationSegment );
if !_fcff {return 0,_ef .Errorf (_efbd ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_bgga );
};if _gfeb .PageBMHeight ==_e .MaxInt32 {_ ,_fcg =_debb .GetBitmap ();if _fcg !=nil {return 0,_ef .Wrap (_fcg ,_efbd ,"");};}else {_debb .FinalHeight =_gfeb .PageBMHeight ;};return _debb .FinalHeight ,nil ;};func _fecc (_cge *Document ,_ada int )*Page {return &Page {Document :_cge ,PageNumber :_ada ,Segments :[]*_bc .Header {}};
};func (_aea *Document )completeSymbols ()(_ecg error ){const _ce ="\u0063o\u006dp\u006c\u0065\u0074\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";if _aea .Classer ==nil {return nil ;};if _aea .Classer .UndilatedTemplates ==nil {return _ef .Error (_ce ,"\u006e\u006f t\u0065\u006d\u0070l\u0061\u0074\u0065\u0073 de\u0066in\u0065\u0064\u0020\u0066\u006f\u0072\u0020th\u0065\u0020\u0063\u006c\u0061\u0073\u0073e\u0072");
};_ebc :=len (_aea .Pages )==1;_gce :=make ([]int ,_aea .Classer .UndilatedTemplates .Size ());var _bec int ;for _dbg :=0;_dbg < _aea .Classer .ClassIDs .Size ();_dbg ++{_bec ,_ecg =_aea .Classer .ClassIDs .Get (_dbg );if _ecg !=nil {return _ef .Wrap (_ecg ,_ce ,"\u0063\u006c\u0061\u0073\u0073\u0020\u0049\u0044\u0027\u0073");
};_gce [_bec ]++;};var _acf []int ;for _abfg :=0;_abfg < _aea .Classer .UndilatedTemplates .Size ();_abfg ++{if _gce [_abfg ]==0{return _ef .Error (_ce ,"\u006eo\u0020\u0073y\u006d\u0062\u006f\u006cs\u0020\u0069\u006es\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u0066\u006fun\u0064\u0020\u0066o\u0072\u0020g\u0069\u0076\u0065\u006e\u0020\u0063l\u0061\u0073s\u003f\u0020");
};if _gce [_abfg ]> 1||_ebc {_acf =append (_acf ,_abfg );};};_aea ._ad =len (_acf );var _ggac ,_dgb int ;for _edb :=0;_edb < _aea .Classer .ComponentPageNumbers .Size ();_edb ++{_ggac ,_ecg =_aea .Classer .ComponentPageNumbers .Get (_edb );if _ecg !=nil {return _ef .Wrapf (_ecg ,_ce ,"p\u0061\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027 \u006e\u006f\u0074\u0020\u0066\u006f\u0075nd\u0020\u0069\u006e\u0020t\u0068\u0065\u0020\u0063\u006c\u0061\u0073\u0073\u0065r \u0070\u0061g\u0065\u006e\u0075\u006d\u0062\u0065\u0072\u0073",_edb );
};_dgb ,_ecg =_aea .Classer .ClassIDs .Get (_edb );if _ecg !=nil {return _ef .Wrapf (_ecg ,_ce ,"\u0063\u0061\u006e\u0027\u0074\u0020\u0067e\u0074\u0020\u0073y\u006d\u0062\u006f\u006c \u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0027\u0025\u0064\u0027\u0020\u0066\u0072\u006f\u006d\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072",_ggac );
};if _gce [_dgb ]==1&&!_ebc {_aea ._ff [_ggac ]=append (_aea ._ff [_ggac ],_dgb );};};if _ecg =_aea .Classer .ComputeLLCorners ();_ecg !=nil {return _ef .Wrap (_ecg ,_ce ,"");};return nil ;};func (_bed *Page )GetWidth ()(int ,error ){return _bed .getWidth ()};
func (_aac *Document )produceClassifiedPage (_gga *Page ,_aab *_bc .Header )(_gec error ){const _fec ="p\u0072\u006f\u0064\u0075ce\u0043l\u0061\u0073\u0073\u0069\u0066i\u0065\u0064\u0050\u0061\u0067\u0065";var _af map[int ]int ;_gca :=_aac ._ad ;_bea :=[]*_bc .Header {_aab };
if len (_aac ._ff [_gga .PageNumber ])> 0{_af =map[int ]int {};_fb ,_efg :=_aac .addSymbolDictionary (_gga .PageNumber ,_aac .Classer .UndilatedTemplates ,_aac ._ff [_gga .PageNumber ],_af ,false );if _efg !=nil {return _ef .Wrap (_efg ,_fec ,"");};_bea =append (_bea ,_fb );
_gca +=len (_aac ._ff [_gga .PageNumber ]);};_db :=_aac ._ec [_gga .PageNumber ];_gc .Log .Debug ("P\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020c\u006f\u006d\u0070\u0073: \u0025\u0076",_gga .PageNumber ,_db );_gga .addTextRegionSegment (_bea ,_aac ._aa ,_af ,_aac ._ec [_gga .PageNumber ],_aac .Classer .PtaLL ,_aac .Classer .UndilatedTemplates ,_aac .Classer .ClassIDs ,nil ,_dba (_gca ),len (_aac ._ec [_gga .PageNumber ]));
return nil ;};func (_egc *Globals )GetSegmentByIndex (index int )(*_bc .Header ,error ){const _gfgg ="\u0047l\u006f\u0062\u0061\u006cs\u002e\u0047\u0065\u0074\u0053e\u0067m\u0065n\u0074\u0042\u0079\u0049\u006e\u0064\u0065x";if _egc ==nil {return nil ,_ef .Error (_gfgg ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};if len (_egc .Segments )==0{return nil ,_ef .Error (_gfgg ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");};if index > len (_egc .Segments )-1{return nil ,_ef .Error (_gfgg ,"\u0069n\u0064e\u0078\u0020\u006f\u0075\u0074 \u006f\u0066 \u0072\u0061\u006e\u0067\u0065");
};return _egc .Segments [index ],nil ;};func (_ca *Document )completeClassifiedPages ()(_cd error ){const _bf ="\u0063\u006f\u006dpl\u0065\u0074\u0065\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0050\u0061\u0067\u0065\u0073";if _ca .Classer ==nil {return nil ;
};_ca ._fe =make ([]int ,_ca .Classer .UndilatedTemplates .Size ());for _ae :=0;_ae < _ca .Classer .ClassIDs .Size ();_ae ++{_edg ,_df :=_ca .Classer .ClassIDs .Get (_ae );if _df !=nil {return _ef .Wrapf (_df ,_bf ,"\u0063\u006c\u0061\u0073s \u0077\u0069\u0074\u0068\u0020\u0069\u0064\u003a\u0020\u0027\u0025\u0064\u0027",_ae );
};_ca ._fe [_edg ]++;};var _ebb []int ;for _ag :=0;_ag < _ca .Classer .UndilatedTemplates .Size ();_ag ++{if _ca .NumberOfPages ==1||_ca ._fe [_ag ]> 1{_ebb =append (_ebb ,_ag );};};var (_gda *Page ;_aaf bool ;);for _ffe ,_adc :=range *_ca .Classer .ComponentPageNumbers {if _gda ,_aaf =_ca .Pages [_adc ];
!_aaf {return _ef .Errorf (_bf ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_ffe );};if _gda .EncodingMethod ==GenericEM {_gc .Log .Error ("\u0047\u0065\u006e\u0065\u0072\u0069c\u0020\u0070\u0061g\u0065\u0020\u0077i\u0074\u0068\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u003a \u0027\u0025\u0064\u0027\u0020ma\u0070\u0070\u0065\u0064\u0020\u0061\u0073\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0020\u0070\u0061\u0067\u0065",_ffe );
continue ;};_ca ._ec [_adc ]=append (_ca ._ec [_adc ],_ffe );_adcb ,_dag :=_ca .Classer .ClassIDs .Get (_ffe );if _dag !=nil {return _ef .Wrapf (_dag ,_bf ,"\u006e\u006f\u0020\u0073uc\u0068\u0020\u0063\u006c\u0061\u0073\u0073\u0049\u0044\u003a\u0020\u0025\u0064",_ffe );
};if _ca ._fe [_adcb ]==1&&_ca .NumberOfPages !=1{_ab :=append (_ca ._ff [_adc ],_adcb );_ca ._ff [_adc ]=_ab ;};};if _cd =_ca .Classer .ComputeLLCorners ();_cd !=nil {return _ef .Wrap (_cd ,_bf ,"");};if _ ,_cd =_ca .addSymbolDictionary (0,_ca .Classer .UndilatedTemplates ,_ebb ,_ca ._aa ,false );
_cd !=nil {return _ef .Wrap (_cd ,_bf ,"");};return nil ;};func (_fdg *Page )getResolutionY ()(int ,error ){const _cdd ="\u0067\u0065\u0074\u0052\u0065\u0073\u006f\u006c\u0075t\u0069\u006f\u006e\u0059";if _fdg .ResolutionY !=0{return _fdg .ResolutionY ,nil ;
};_gbg :=_fdg .getPageInformationSegment ();if _gbg ==nil {return 0,_ef .Error (_cdd ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_abfd ,_ggge :=_gbg .GetSegmentData ();if _ggge !=nil {return 0,_ef .Wrap (_ggge ,_cdd ,"");
};_gfd ,_cag :=_abfd .(*_bc .PageInformationSegment );if !_cag {return 0,_ef .Errorf (_cdd ,"\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0066o\u0072\u006d\u0061ti\u006f\u006e\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0069\u0073\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0074\u0079\u0070\u0065\u003a\u0027%\u0054\u0027",_abfd );
};_fdg .ResolutionY =_gfd .ResolutionY ;return _fdg .ResolutionY ,nil ;};func (_ebe *Page )lastSegmentNumber ()(_eddc uint32 ,_cac error ){const _bgf ="\u006c\u0061\u0073\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";if len (_ebe .Segments )==0{return _eddc ,_ef .Errorf (_bgf ,"\u006e\u006f\u0020se\u0067\u006d\u0065\u006e\u0074\u0073\u0020\u0066\u006fu\u006ed\u0020i\u006e \u0074\u0068\u0065\u0020\u0070\u0061\u0067\u0065\u0020\u0027\u0025\u0064\u0027",_ebe .PageNumber );
};return _ebe .Segments [len (_ebe .Segments )-1].SegmentNumber ,nil ;};func (_cgd *Document )reachedEOF (_dbd int64 )(bool ,error ){const _cca ="\u0072\u0065\u0061\u0063\u0068\u0065\u0064\u0045\u004f\u0046";_ ,_ffcg :=_cgd .InputStream .Seek (_dbd ,_f .SeekStart );
if _ffcg !=nil {_gc .Log .Debug ("\u0072\u0065\u0061c\u0068\u0065\u0064\u0045\u004f\u0046\u0020\u002d\u0020\u0064\u002e\u0049\u006e\u0070\u0075\u0074\u0053\u0074\u0072\u0065\u0061\u006d\u002e\u0053\u0065\u0065\u006b\u0020\u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_ffcg );
return false ,_ef .Wrap (_ffcg ,_cca ,"\u0069n\u0070\u0075\u0074\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020s\u0065\u0065\u006b\u0020\u0066\u0061\u0069\u006c\u0065\u0064");};_ ,_ffcg =_cgd .InputStream .ReadBits (32);if _ffcg ==_f .EOF {return true ,nil ;
}else if _ffcg !=nil {return false ,_ef .Wrap (_ffcg ,_cca ,"");};return false ,nil ;};func (_dbea *Document )nextSegmentNumber ()uint32 {_gcbc :=_dbea .CurrentSegmentNumber ;_dbea .CurrentSegmentNumber ++;return _gcbc ;};func (_aggc *Page )getCombinationOperator (_ccf *_bc .PageInformationSegment ,_acfb _be .CombinationOperator )_be .CombinationOperator {if _ccf .CombinationOperatorOverrideAllowed (){return _acfb ;
};return _ccf .CombinationOperator ();};func (_adeg *Page )AddEndOfPageSegment (){_cbg :=&_bc .Header {Type :_bc .TEndOfPage ,PageAssociation :_adeg .PageNumber };_adeg .Segments =append (_adeg .Segments ,_cbg );};func (_bcf *Document )Encode ()(_aef []byte ,_cbf error ){const _dde ="\u0044o\u0063u\u006d\u0065\u006e\u0074\u002e\u0045\u006e\u0063\u006f\u0064\u0065";
var _gdf ,_fbd int ;if _bcf .FullHeaders {if _gdf ,_cbf =_bcf .encodeFileHeader (_bcf ._gd );_cbf !=nil {return nil ,_ef .Wrap (_cbf ,_dde ,"");};};var (_aeg bool ;_gab *_bc .Header ;_aag *Page ;);if _cbf =_bcf .completeClassifiedPages ();_cbf !=nil {return nil ,_ef .Wrap (_cbf ,_dde ,"");
};if _cbf =_bcf .produceClassifiedPages ();_cbf !=nil {return nil ,_ef .Wrap (_cbf ,_dde ,"");};if _bcf .GlobalSegments !=nil {for _ ,_gab =range _bcf .GlobalSegments .Segments {if _cbf =_bcf .encodeSegment (_gab ,&_gdf );_cbf !=nil {return nil ,_ef .Wrap (_cbf ,_dde ,"");
};};};for _ade :=1;_ade <=int (_bcf .NumberOfPages );_ade ++{if _aag ,_aeg =_bcf .Pages [_ade ];!_aeg {return nil ,_ef .Errorf (_dde ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_ade );};for _ ,_gab =range _aag .Segments {if _cbf =_bcf .encodeSegment (_gab ,&_gdf );
_cbf !=nil {return nil ,_ef .Wrap (_cbf ,_dde ,"");};};};if _bcf .FullHeaders {if _fbd ,_cbf =_bcf .encodeEOFHeader (_bcf ._gd );_cbf !=nil {return nil ,_ef .Wrap (_cbf ,_dde ,"");};_gdf +=_fbd ;};_aef =_bcf ._gd .Data ();if len (_aef )!=_gdf {_gc .Log .Debug ("\u0042\u0079\u0074\u0065\u0073 \u0077\u0072\u0069\u0074\u0074\u0065\u006e \u0028\u006e\u0029\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0065\u0071\u0075\u0061\u006c\u0020\u0074\u006f\u0020\u0074\u0068\u0065\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006f\u0066\u0020t\u0068\u0065\u0020\u0064\u0061\u0074\u0061\u0020\u0065\u006e\u0063\u006fd\u0065\u0064\u003a\u0020\u0027\u0025d\u0027",_gdf ,len (_aef ));
};return _aef ,nil ;};func _dba (_cc int )int {_aee :=0;_dg :=(_cc &(_cc -1))==0;_cc >>=1;for ;_cc !=0;_cc >>=1{_aee ++;};if _dg {return _aee ;};return _aee +1;};func (_edd *Globals )AddSegment (segment *_bc .Header ){_edd .Segments =append (_edd .Segments ,segment )};
func (_ddgg *Page )nextSegmentNumber ()uint32 {return _ddgg .Document .nextSegmentNumber ()};func (_gdd *Document )encodeFileHeader (_bgg _b .BinaryWriter )(_afa int ,_beae error ){const _fccec ="\u0065\u006ec\u006f\u0064\u0065F\u0069\u006c\u0065\u0048\u0065\u0061\u0064\u0065\u0072";
_afa ,_beae =_bgg .Write (_efd );if _beae !=nil {return _afa ,_ef .Wrap (_beae ,_fccec ,"\u0069\u0064");};if _beae =_bgg .WriteByte (0x01);_beae !=nil {return _afa ,_ef .Wrap (_beae ,_fccec ,"\u0066\u006c\u0061g\u0073");};_afa ++;_dbe :=make ([]byte ,4);
_ac .BigEndian .PutUint32 (_dbe ,_gdd .NumberOfPages );_gcb ,_beae :=_bgg .Write (_dbe );if _beae !=nil {return _gcb ,_ef .Wrap (_beae ,_fccec ,"p\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_afa +=_gcb ;return _afa ,nil ;};func (_gfggf *Page )getPageInformationSegment ()*_bc .Header {for _ ,_aeb :=range _gfggf .Segments {if _aeb .Type ==_bc .TPageInformation {return _aeb ;
};};_gc .Log .Debug ("\u0050\u0061\u0067\u0065\u0020\u0069\u006e\u0066o\u0072\u006d\u0061ti\u006f\u006e\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0066o\u0072\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0073\u002e",_gfggf );
return nil ;};const (GenericEM EncodingMethod =iota ;CorrelationEM ;RankHausEM ;);func (_bfc *Globals )GetSymbolDictionary ()(*_bc .Header ,error ){const _dda ="G\u006c\u006f\u0062\u0061\u006c\u0073.\u0047\u0065\u0074\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079";
if _bfc ==nil {return nil ,_ef .Error (_dda ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_bfc .Segments )==0{return nil ,_ef .Error (_dda ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");
};for _ ,_egf :=range _bfc .Segments {if _egf .Type ==_bc .TSymbolDictionary {return _egf ,nil ;};};return nil ,_ef .Error (_dda ,"\u0067\u006c\u006fba\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020d\u0069c\u0074i\u006fn\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
};func (_ccaf *Page )GetResolutionX ()(int ,error ){return _ccaf .getResolutionX ()};func (_dfb *Globals )GetSegment (segmentNumber int )(*_bc .Header ,error ){const _afd ="\u0047l\u006fb\u0061\u006c\u0073\u002e\u0047e\u0074\u0053e\u0067\u006d\u0065\u006e\u0074";
if _dfb ==nil {return nil ,_ef .Error (_afd ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_dfb .Segments )==0{return nil ,_ef .Error (_afd ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");
};var _aae *_bc .Header ;for _ ,_aae =range _dfb .Segments {if _aae .SegmentNumber ==uint32 (segmentNumber ){break ;};};if _aae ==nil {return nil ,_ef .Error (_afd ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};return _aae ,nil ;};func (_gaa *Page )GetHeight ()(int ,error ){return _gaa .getHeight ()};func (_dfd *Page )composePageBitmap ()error {const _eea ="\u0063\u006f\u006d\u0070\u006f\u0073\u0065\u0050\u0061\u0067\u0065\u0042i\u0074\u006d\u0061\u0070";if _dfd .PageNumber ==0{return nil ;
};_fee :=_dfd .getPageInformationSegment ();if _fee ==nil {return _ef .Error (_eea ,"\u0070\u0061\u0067e \u0069\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069o\u006e \u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
};_efge ,_acfc :=_fee .GetSegmentData ();if _acfc !=nil {return _acfc ;};_ccc ,_fgf :=_efge .(*_bc .PageInformationSegment );if !_fgf {return _ef .Error (_eea ,"\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006da\u0074\u0069\u006f\u006e \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");
};if _acfc =_dfd .createPage (_ccc );_acfc !=nil {return _ef .Wrap (_acfc ,_eea ,"");};_dfd .clearSegmentData ();return nil ;};func (_bggf *Page )GetBitmap ()(_agga *_be .Bitmap ,_ffgf error ){_gc .Log .Trace (_eg .Sprintf ("\u005b\u0050\u0041G\u0045\u005d\u005b\u0023%\u0064\u005d\u0020\u0047\u0065\u0074\u0042i\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e",_bggf .PageNumber ));
defer func (){if _ffgf !=nil {_gc .Log .Trace (_eg .Sprintf ("\u005b\u0050\u0041\u0047\u0045\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074B\u0069t\u006d\u0061\u0070\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_bggf .PageNumber ,_ffgf ));
}else {_gc .Log .Trace (_eg .Sprintf ("\u005b\u0050\u0041\u0047\u0045\u005d\u005b\u0023\u0025\u0064]\u0020\u0047\u0065\u0074\u0042\u0069\u0074m\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064",_bggf .PageNumber ));};}();if _bggf .Bitmap !=nil {return _bggf .Bitmap ,nil ;
};_ffgf =_bggf .composePageBitmap ();if _ffgf !=nil {return nil ,_ffgf ;};return _bggf .Bitmap ,nil ;};type Globals struct{Segments []*_bc .Header ;};func (_gfgf *Page )createStripedPage (_ba *_bc .PageInformationSegment )error {const _bbgb ="\u0063\u0072\u0065\u0061\u0074\u0065\u0053\u0074\u0072\u0069\u0070\u0065d\u0050\u0061\u0067\u0065";
_ebdd ,_ded :=_gfgf .collectPageStripes ();if _ded !=nil {return _ef .Wrap (_ded ,_bbgb ,"");};var _aaec int ;for _ ,_bcac :=range _ebdd {if _ace ,_deb :=_bcac .(*_bc .EndOfStripe );_deb {_aaec =_ace .LineNumber ()+1;}else {_gggd :=_bcac .(_bc .Regioner );
_ffb :=_gggd .GetRegionInfo ();_edf :=_gfgf .getCombinationOperator (_ba ,_ffb .CombinaionOperator );_efdc ,_ebbf :=_gggd .GetRegionBitmap ();if _ebbf !=nil {return _ef .Wrap (_ebbf ,_bbgb ,"");};_ebbf =_be .Blit (_efdc ,_gfgf .Bitmap ,int (_ffb .XLocation ),_aaec ,_edf );
if _ebbf !=nil {return _ef .Wrap (_ebbf ,_bbgb ,"");};};};return nil ;};func (_geg *Page )String ()string {return _eg .Sprintf ("\u0050\u0061\u0067\u0065\u0020\u0023\u0025\u0064",_geg .PageNumber );};