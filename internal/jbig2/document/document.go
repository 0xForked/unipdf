//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package document ;import (_d "encoding/binary";_dc "fmt";_c "github.com/unidoc/unipdf/v3/common";_fa "github.com/unidoc/unipdf/v3/internal/bitwise";_ga "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_gc "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";_bf "github.com/unidoc/unipdf/v3/internal/jbig2/document/segments";_b "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/classer";_cf "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_e "io";_f "math";_df "runtime/debug";);func (_a *Document )AddGenericPage (bm *_gc .Bitmap ,duplicateLineRemoval bool )(_ad error ){const _af ="\u0044\u006f\u0063um\u0065\u006e\u0074\u002e\u0041\u0064\u0064\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0050\u0061\u0067\u0065";if !_a .FullHeaders &&_a .NumberOfPages !=0{return _cf .Error (_af ,"\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0070\u0061\u0067\u0065\u002e\u0020\u0046\u0069\u006c\u0065\u004d\u006f\u0064\u0065\u0020\u0064\u0069\u0073\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0064\u0064i\u006e\u0067\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e \u006f\u006e\u0065\u0020\u0070\u0061g\u0065");};_ce :=&Page {Segments :[]*_bf .Header {},Bitmap :bm ,Document :_a ,FinalHeight :bm .Height ,FinalWidth :bm .Width ,IsLossless :true };_ce .PageNumber =int (_a .nextPageNumber ());_a .Pages [_ce .PageNumber ]=_ce ;_ce .AddPageInformationSegment ();if _ad =_ce .AddGenericRegion (bm ,0,0,0,_bf .TImmediateGenericRegion ,duplicateLineRemoval );_ad !=nil {return _cf .Wrap (_ad ,_af ,"");};if _a .FullHeaders {_ce .AddEndOfPageSegment ();};return nil ;};func (_gfda *Page )countRegions ()int {var _abfa int ;for _ ,_gead :=range _gfda .Segments {switch _gead .Type {case 6,7,22,23,38,39,42,43:_abfa ++;};};return _abfa ;};func (_gad *Page )GetWidth ()(int ,error ){return _gad .getWidth ()};func (_cbc *Page )AddEndOfPageSegment (){_ggd :=&_bf .Header {Type :_bf .TEndOfPage ,PageAssociation :_cbc .PageNumber };_cbc .Segments =append (_cbc .Segments ,_ggd );};func (_cgb *Document )encodeEOFHeader (_fbc _fa .BinaryWriter )(_fcg int ,_adb error ){_fbg :=&_bf .Header {SegmentNumber :_cgb .nextSegmentNumber (),Type :_bf .TEndOfFile };if _fcg ,_adb =_fbg .Encode (_fbc );_adb !=nil {return 0,_cf .Wrap (_adb ,"\u0065n\u0063o\u0064\u0065\u0045\u004f\u0046\u0048\u0065\u0061\u0064\u0065\u0072","");};return _fcg ,nil ;};func (_cbd *Page )nextSegmentNumber ()uint32 {return _cbd .Document .nextSegmentNumber ()};func (_fba *Document )produceClassifiedPages ()(_dde error ){const _ec ="\u0070\u0072\u006f\u0064uc\u0065\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0050\u0061\u0067e\u0073";if _fba .Classer ==nil {return nil ;};var (_dfd *Page ;_gg bool ;_fc *_bf .Header ;);for _dge :=1;_dge <=int (_fba .NumberOfPages );_dge ++{if _dfd ,_gg =_fba .Pages [_dge ];!_gg {return _cf .Errorf (_ec ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_dge );};if _dfd .EncodingMethod ==GenericEM {continue ;};if _fc ==nil {if _fc ,_dde =_fba .GlobalSegments .GetSymbolDictionary ();_dde !=nil {return _cf .Wrap (_dde ,_ec ,"");};};if _dde =_fba .produceClassifiedPage (_dfd ,_fc );_dde !=nil {return _cf .Wrapf (_dde ,_ec ,"\u0070\u0061\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027",_dge );};};return nil ;};type Globals struct{Segments []*_bf .Header ;};func (_fec *Page )GetHeight ()(int ,error ){return _fec .getHeight ()};func (_cga *Page )composePageBitmap ()error {const _afc ="\u0063\u006f\u006d\u0070\u006f\u0073\u0065\u0050\u0061\u0067\u0065\u0042i\u0074\u006d\u0061\u0070";if _cga .PageNumber ==0{return nil ;};_abg :=_cga .getPageInformationSegment ();if _abg ==nil {return _cf .Error (_afc ,"\u0070\u0061\u0067e \u0069\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069o\u006e \u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_dab ,_fed :=_abg .GetSegmentData ();if _fed !=nil {return _fed ;};_eadf ,_bdc :=_dab .(*_bf .PageInformationSegment );if !_bdc {return _cf .Error (_afc ,"\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006da\u0074\u0069\u006f\u006e \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};if _fed =_cga .createPage (_eadf );_fed !=nil {return _cf .Wrap (_fed ,_afc ,"");};_cga .clearSegmentData ();return nil ;};func _fbga (_dcbd _fa .StreamReader ,_bac *Globals )(*Document ,error ){_fcfc :=&Document {Pages :make (map[int ]*Page ),InputStream :_dcbd ,OrganizationType :_bf .OSequential ,NumberOfPagesUnknown :true ,GlobalSegments :_bac ,_cd :9};if _fcfc .GlobalSegments ==nil {_fcfc .GlobalSegments =&Globals {};};if _fbeeb :=_fcfc .mapData ();_fbeeb !=nil {return nil ,_fbeeb ;};return _fcfc ,nil ;};func DecodeDocument (input _fa .StreamReader ,globals *Globals )(*Document ,error ){return _fbga (input ,globals );};func (_ag *Document )completeSymbols ()(_ebb error ){const _fad ="\u0063o\u006dp\u006c\u0065\u0074\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";if _ag .Classer ==nil {return nil ;};if _ag .Classer .UndilatedTemplates ==nil {return _cf .Error (_fad ,"\u006e\u006f t\u0065\u006d\u0070l\u0061\u0074\u0065\u0073 de\u0066in\u0065\u0064\u0020\u0066\u006f\u0072\u0020th\u0065\u0020\u0063\u006c\u0061\u0073\u0073e\u0072");};_fff :=len (_ag .Pages )==1;_da :=make ([]int ,_ag .Classer .UndilatedTemplates .Size ());var _gf int ;for _ef :=0;_ef < _ag .Classer .ClassIDs .Size ();_ef ++{_gf ,_ebb =_ag .Classer .ClassIDs .Get (_ef );if _ebb !=nil {return _cf .Wrap (_ebb ,_fad ,"\u0063\u006c\u0061\u0073\u0073\u0020\u0049\u0044\u0027\u0073");};_da [_gf ]++;};var _gcb []int ;for _ade :=0;_ade < _ag .Classer .UndilatedTemplates .Size ();_ade ++{if _da [_ade ]==0{return _cf .Error (_fad ,"\u006eo\u0020\u0073y\u006d\u0062\u006f\u006cs\u0020\u0069\u006es\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u0066\u006fun\u0064\u0020\u0066o\u0072\u0020g\u0069\u0076\u0065\u006e\u0020\u0063l\u0061\u0073s\u003f\u0020");};if _da [_ade ]> 1||_fff {_gcb =append (_gcb ,_ade );};};_ag ._faa =len (_gcb );var _dag ,_dagc int ;for _aaa :=0;_aaa < _ag .Classer .ComponentPageNumbers .Size ();_aaa ++{_dag ,_ebb =_ag .Classer .ComponentPageNumbers .Get (_aaa );if _ebb !=nil {return _cf .Wrapf (_ebb ,_fad ,"p\u0061\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027 \u006e\u006f\u0074\u0020\u0066\u006f\u0075nd\u0020\u0069\u006e\u0020t\u0068\u0065\u0020\u0063\u006c\u0061\u0073\u0073\u0065r \u0070\u0061g\u0065\u006e\u0075\u006d\u0062\u0065\u0072\u0073",_aaa );};_dagc ,_ebb =_ag .Classer .ClassIDs .Get (_aaa );if _ebb !=nil {return _cf .Wrapf (_ebb ,_fad ,"\u0063\u0061\u006e\u0027\u0074\u0020\u0067e\u0074\u0020\u0073y\u006d\u0062\u006f\u006c \u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0027\u0025\u0064\u0027\u0020\u0066\u0072\u006f\u006d\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072",_dag );};if _da [_dagc ]==1&&!_fff {_ag ._gb [_dag ]=append (_ag ._gb [_dag ],_dagc );};};if _ebb =_ag .Classer .ComputeLLCorners ();_ebb !=nil {return _cf .Wrap (_ebb ,_fad ,"");};return nil ;};func (_cag *Document )mapData ()error {const _gdg ="\u006da\u0070\u0044\u0061\u0074\u0061";var (_cbg []*_bf .Header ;_agf int64 ;_bga _bf .Type ;);_dbbc ,_dbd :=_cag .isFileHeaderPresent ();if _dbd !=nil {return _cf .Wrap (_dbd ,_gdg ,"");};if _dbbc {if _dbd =_cag .parseFileHeader ();_dbd !=nil {return _cf .Wrap (_dbd ,_gdg ,"");};_agf +=int64 (_cag ._cd );_cag .FullHeaders =true ;};var (_fab *Page ;_dbf bool ;);for _bga !=51&&!_dbf {_bbf ,_dad :=_bf .NewHeader (_cag ,_cag .InputStream ,_agf ,_cag .OrganizationType );if _dad !=nil {return _cf .Wrap (_dad ,_gdg ,"");};_c .Log .Trace ("\u0044\u0065c\u006f\u0064\u0069\u006eg\u0020\u0073e\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u0075m\u0062\u0065\u0072\u003a\u0020\u0025\u0064\u002c\u0020\u0054\u0079\u0070e\u003a\u0020\u0025\u0073",_bbf .SegmentNumber ,_bbf .Type );_bga =_bbf .Type ;if _bga !=_bf .TEndOfFile {if _bbf .PageAssociation !=0{_fab =_cag .Pages [_bbf .PageAssociation ];if _fab ==nil {_fab =_ggfd (_cag ,_bbf .PageAssociation );_cag .Pages [_bbf .PageAssociation ]=_fab ;if _cag .NumberOfPagesUnknown {_cag .NumberOfPages ++;};};_fab .Segments =append (_fab .Segments ,_bbf );}else {_cag .GlobalSegments .AddSegment (_bbf );};};_cbg =append (_cbg ,_bbf );_agf =_cag .InputStream .StreamPosition ();if _cag .OrganizationType ==_bf .OSequential {_agf +=int64 (_bbf .SegmentDataLength );};_dbf ,_dad =_cag .reachedEOF (_agf );if _dad !=nil {_c .Log .Debug ("\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020\u0072\u0065\u0061\u0063h\u0065\u0064\u0020\u0045\u004f\u0046\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_dad );return _cf .Wrap (_dad ,_gdg ,"");};};_cag .determineRandomDataOffsets (_cbg ,uint64 (_agf ));return nil ;};func (_fcb *Document )GetPage (pageNumber int )(_bf .Pager ,error ){const _bdge ="\u0044\u006fc\u0075\u006d\u0065n\u0074\u002e\u0047\u0065\u0074\u0050\u0061\u0067\u0065";if pageNumber < 0{_c .Log .Debug ("\u004a\u0042\u0049\u00472\u0020\u0050\u0061\u0067\u0065\u0020\u002d\u0020\u0047e\u0074\u0050\u0061\u0067\u0065\u003a\u0020\u0025\u0064\u002e\u0020\u0050\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062e\u0020\u006c\u006f\u0077\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0030\u002e\u0020\u0025\u0073",pageNumber ,_df .Stack ());return nil ,_cf .Errorf (_bdge ,"\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032\u0020d\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020\u002d\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064 \u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u003a\u0020\u0025\u0064",pageNumber );};if pageNumber > len (_fcb .Pages ){_c .Log .Debug ("\u0050\u0061\u0067\u0065 n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0064\u002e\u0020%\u0073",pageNumber ,_df .Stack ());return nil ,_cf .Error (_bdge ,"\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065n\u0074\u0020\u002d\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};_cdab ,_edc :=_fcb .Pages [pageNumber ];if !_edc {_c .Log .Debug ("\u0050\u0061\u0067\u0065 n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0064\u002e\u0020%\u0073",pageNumber ,_df .Stack ());return nil ,_cf .Errorf (_bdge ,"\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065n\u0074\u0020\u002d\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};return _cdab ,nil ;};func (_dgfd *Document )encodeFileHeader (_gbaf _fa .BinaryWriter )(_cc int ,_ddf error ){const _cfc ="\u0065\u006ec\u006f\u0064\u0065F\u0069\u006c\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_cc ,_ddf =_gbaf .Write (_eg );if _ddf !=nil {return _cc ,_cf .Wrap (_ddf ,_cfc ,"\u0069\u0064");};if _ddf =_gbaf .WriteByte (0x01);_ddf !=nil {return _cc ,_cf .Wrap (_ddf ,_cfc ,"\u0066\u006c\u0061g\u0073");};_cc ++;_cfea :=make ([]byte ,4);_d .BigEndian .PutUint32 (_cfea ,_dgfd .NumberOfPages );_ggfe ,_ddf :=_gbaf .Write (_cfea );if _ddf !=nil {return _ggfe ,_cf .Wrap (_ddf ,_cfc ,"p\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_cc +=_ggfe ;return _cc ,nil ;};func (_fga *Page )createStripedPage (_fgc *_bf .PageInformationSegment )error {const _ega ="\u0063\u0072\u0065\u0061\u0074\u0065\u0053\u0074\u0072\u0069\u0070\u0065d\u0050\u0061\u0067\u0065";_fbgc ,_cdc :=_fga .collectPageStripes ();if _cdc !=nil {return _cf .Wrap (_cdc ,_ega ,"");};var _cec int ;for _ ,_gbac :=range _fbgc {if _gac ,_geeb :=_gbac .(*_bf .EndOfStripe );_geeb {_cec =_gac .LineNumber ()+1;}else {_gffa :=_gbac .(_bf .Regioner );_cce :=_gffa .GetRegionInfo ();_beag :=_fga .getCombinationOperator (_fgc ,_cce .CombinaionOperator );_fbf ,_gbg :=_gffa .GetRegionBitmap ();if _gbg !=nil {return _cf .Wrap (_gbg ,_ega ,"");};_gbg =_gc .Blit (_fbf ,_fga .Bitmap ,int (_cce .XLocation ),_cec ,_beag );if _gbg !=nil {return _cf .Wrap (_gbg ,_ega ,"");};};};return nil ;};func (_adg *Globals )GetSegmentByIndex (index int )(*_bf .Header ,error ){const _ddge ="\u0047l\u006f\u0062\u0061\u006cs\u002e\u0047\u0065\u0074\u0053e\u0067m\u0065n\u0074\u0042\u0079\u0049\u006e\u0064\u0065x";if _adg ==nil {return nil ,_cf .Error (_ddge ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_adg .Segments )==0{return nil ,_cf .Error (_ddge ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");};if index > len (_adg .Segments )-1{return nil ,_cf .Error (_ddge ,"\u0069n\u0064e\u0078\u0020\u006f\u0075\u0074 \u006f\u0066 \u0072\u0061\u006e\u0067\u0065");};return _adg .Segments [index ],nil ;};const (GenericEM EncodingMethod =iota ;CorrelationEM ;RankHausEM ;);func (_cgg *Page )GetResolutionY ()(int ,error ){return _cgg .getResolutionY ()};func (_gbd *Page )getResolutionX ()(int ,error ){const _efff ="\u0067\u0065\u0074\u0052\u0065\u0073\u006f\u006c\u0075t\u0069\u006f\u006e\u0058";if _gbd .ResolutionX !=0{return _gbd .ResolutionX ,nil ;};_gce :=_gbd .getPageInformationSegment ();if _gce ==nil {return 0,_cf .Error (_efff ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_abdd ,_fbfg :=_gce .GetSegmentData ();if _fbfg !=nil {return 0,_cf .Wrap (_fbfg ,_efff ,"");};_eefg ,_geb :=_abdd .(*_bf .PageInformationSegment );if !_geb {return 0,_cf .Errorf (_efff ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_abdd );};_gbd .ResolutionX =_eefg .ResolutionX ;return _gbd .ResolutionX ,nil ;};func (_eed *Document )GetNumberOfPages ()(uint32 ,error ){if _eed .NumberOfPagesUnknown ||_eed .NumberOfPages ==0{if len (_eed .Pages )==0{if _cb :=_eed .mapData ();_cb !=nil {return 0,_cf .Wrap (_cb ,"\u0044o\u0063\u0075\u006d\u0065n\u0074\u002e\u0047\u0065\u0074N\u0075m\u0062e\u0072\u004f\u0066\u0050\u0061\u0067\u0065s","");};};return uint32 (len (_eed .Pages )),nil ;};return _eed .NumberOfPages ,nil ;};func (_bgga *Page )fitsPage (_gfbb *_bf .PageInformationSegment ,_gcf *_gc .Bitmap )bool {return _bgga .countRegions ()==1&&_gfbb .DefaultPixelValue ()==0&&_gfbb .PageBMWidth ==_gcf .Width &&_gfbb .PageBMHeight ==_gcf .Height ;};type Document struct{Pages map[int ]*Page ;NumberOfPagesUnknown bool ;NumberOfPages uint32 ;GBUseExtTemplate bool ;InputStream _fa .StreamReader ;GlobalSegments *Globals ;OrganizationType _bf .OrganizationType ;Classer *_b .Classer ;XRes ,YRes int ;FullHeaders bool ;CurrentSegmentNumber uint32 ;AverageTemplates *_gc .Bitmaps ;BaseIndexes []int ;Refinement bool ;RefineLevel int ;_cd uint8 ;_ed *_fa .BufferedWriter ;EncodeGlobals bool ;_faa int ;_gb map[int ][]int ;_gd map[int ][]int ;_de []int ;_cfe map[int ]int ;};func (_bea *Document )encodeSegment (_fcf *_bf .Header ,_feg *int )error {const _ggf ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074";_fcf .SegmentNumber =_bea .nextSegmentNumber ();_bcf ,_ggc :=_fcf .Encode (_bea ._ed );if _ggc !=nil {return _cf .Wrapf (_ggc ,_ggf ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_fcf .SegmentNumber );};*_feg +=_bcf ;return nil ;};func (_fcbc *Page )addTextRegionSegment (_eff []*_bf .Header ,_fcgg ,_aee map[int ]int ,_cee []int ,_aec *_gc .Points ,_gaa *_gc .Bitmaps ,_ggbf *_ga .IntSlice ,_cgd *_gc .Boxes ,_bbb ,_eab int ){_abe :=&_bf .TextRegion {NumberOfSymbols :uint32 (_eab )};_abe .InitEncode (_fcgg ,_aee ,_cee ,_aec ,_gaa ,_ggbf ,_cgd ,_fcbc .FinalWidth ,_fcbc .FinalHeight ,_bbb );_ccc :=&_bf .Header {RTSegments :_eff ,SegmentData :_abe ,PageAssociation :_fcbc .PageNumber ,Type :_bf .TImmediateTextRegion };_cgc :=_bf .TPageInformation ;if _aee !=nil {_cgc =_bf .TSymbolDictionary ;};var _fcfe int ;for ;_fcfe < len (_fcbc .Segments );_fcfe ++{if _fcbc .Segments [_fcfe ].Type ==_cgc {_fcfe ++;break ;};};_fcbc .Segments =append (_fcbc .Segments ,nil );copy (_fcbc .Segments [_fcfe +1:],_fcbc .Segments [_fcfe :]);_fcbc .Segments [_fcfe ]=_ccc ;};func (_adee *Globals )GetSegment (segmentNumber int )(*_bf .Header ,error ){const _decf ="\u0047l\u006fb\u0061\u006c\u0073\u002e\u0047e\u0074\u0053e\u0067\u006d\u0065\u006e\u0074";if _adee ==nil {return nil ,_cf .Error (_decf ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_adee .Segments )==0{return nil ,_cf .Error (_decf ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");};var _ede *_bf .Header ;for _ ,_ede =range _adee .Segments {if _ede .SegmentNumber ==uint32 (segmentNumber ){break ;};};if _ede ==nil {return nil ,_cf .Error (_decf ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};return _ede ,nil ;};func (_bgac *Page )lastSegmentNumber ()(_eddd uint32 ,_fabb error ){const _cfdg ="\u006c\u0061\u0073\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";if len (_bgac .Segments )==0{return _eddd ,_cf .Errorf (_cfdg ,"\u006e\u006f\u0020se\u0067\u006d\u0065\u006e\u0074\u0073\u0020\u0066\u006fu\u006ed\u0020i\u006e \u0074\u0068\u0065\u0020\u0070\u0061\u0067\u0065\u0020\u0027\u0025\u0064\u0027",_bgac .PageNumber );};return _bgac .Segments [len (_bgac .Segments )-1].SegmentNumber ,nil ;};func (_cfccb *Document )nextPageNumber ()uint32 {_cfccb .NumberOfPages ++;return _cfccb .NumberOfPages };func (_ae *Page )AddGenericRegion (bm *_gc .Bitmap ,xloc ,yloc ,template int ,tp _bf .Type ,duplicateLineRemoval bool )error {const _egg ="P\u0061\u0067\u0065\u002eAd\u0064G\u0065\u006e\u0065\u0072\u0069c\u0052\u0065\u0067\u0069\u006f\u006e";_ffc :=&_bf .GenericRegion {};if _gea :=_ffc .InitEncode (bm ,xloc ,yloc ,template ,duplicateLineRemoval );_gea !=nil {return _cf .Wrap (_gea ,_egg ,"");};_cfdc :=&_bf .Header {Type :_bf .TImmediateGenericRegion ,PageAssociation :_ae .PageNumber ,SegmentData :_ffc };_ae .Segments =append (_ae .Segments ,_cfdc );return nil ;};func (_gee *Document )nextSegmentNumber ()uint32 {_efe :=_gee .CurrentSegmentNumber ;_gee .CurrentSegmentNumber ++;return _efe ;};func _ggfd (_bggg *Document ,_acd int )*Page {return &Page {Document :_bggg ,PageNumber :_acd ,Segments :[]*_bf .Header {}};};var _eg =[]byte {0x97,0x4A,0x42,0x32,0x0D,0x0A,0x1A,0x0A};func InitEncodeDocument (fullHeaders bool )*Document {return &Document {FullHeaders :fullHeaders ,_ed :_fa .BufferedMSB (),Pages :map[int ]*Page {},_gb :map[int ][]int {},_cfe :map[int ]int {},_gd :map[int ][]int {}};};func (_ge *Document )Encode ()(_dea []byte ,_fadd error ){const _bgg ="\u0044o\u0063u\u006d\u0065\u006e\u0074\u002e\u0045\u006e\u0063\u006f\u0064\u0065";var _dfg ,_acb int ;if _ge .FullHeaders {if _dfg ,_fadd =_ge .encodeFileHeader (_ge ._ed );_fadd !=nil {return nil ,_cf .Wrap (_fadd ,_bgg ,"");};};var (_gba bool ;_gge *_bf .Header ;_fbd *Page ;);if _fadd =_ge .completeClassifiedPages ();_fadd !=nil {return nil ,_cf .Wrap (_fadd ,_bgg ,"");};if _fadd =_ge .produceClassifiedPages ();_fadd !=nil {return nil ,_cf .Wrap (_fadd ,_bgg ,"");};if _ge .GlobalSegments !=nil {for _ ,_gge =range _ge .GlobalSegments .Segments {if _fadd =_ge .encodeSegment (_gge ,&_dfg );_fadd !=nil {return nil ,_cf .Wrap (_fadd ,_bgg ,"");};};};for _gae :=1;_gae <=int (_ge .NumberOfPages );_gae ++{if _fbd ,_gba =_ge .Pages [_gae ];!_gba {return nil ,_cf .Errorf (_bgg ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_gae );};for _ ,_gge =range _fbd .Segments {if _fadd =_ge .encodeSegment (_gge ,&_dfg );_fadd !=nil {return nil ,_cf .Wrap (_fadd ,_bgg ,"");};};};if _ge .FullHeaders {if _acb ,_fadd =_ge .encodeEOFHeader (_ge ._ed );_fadd !=nil {return nil ,_cf .Wrap (_fadd ,_bgg ,"");};_dfg +=_acb ;};_dea =_ge ._ed .Data ();if len (_dea )!=_dfg {_c .Log .Debug ("\u0042\u0079\u0074\u0065\u0073 \u0077\u0072\u0069\u0074\u0074\u0065\u006e \u0028\u006e\u0029\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0065\u0071\u0075\u0061\u006c\u0020\u0074\u006f\u0020\u0074\u0068\u0065\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006f\u0066\u0020t\u0068\u0065\u0020\u0064\u0061\u0074\u0061\u0020\u0065\u006e\u0063\u006fd\u0065\u0064\u003a\u0020\u0027\u0025d\u0027",_dfg ,len (_dea ));};return _dea ,nil ;};type EncodingMethod int ;func (_bcb *Document )GetGlobalSegment (i int )(*_bf .Header ,error ){_cda ,_bda :=_bcb .GlobalSegments .GetSegment (i );if _bda !=nil {return nil ,_cf .Wrap (_bda ,"\u0047\u0065t\u0047\u006c\u006fb\u0061\u006c\u0053\u0065\u0067\u006d\u0065\u006e\u0074","");};return _cda ,nil ;};func (_ead *Document )reachedEOF (_bec int64 )(bool ,error ){const _fgg ="\u0072\u0065\u0061\u0063\u0068\u0065\u0064\u0045\u004f\u0046";_ ,_bdab :=_ead .InputStream .Seek (_bec ,_e .SeekStart );if _bdab !=nil {_c .Log .Debug ("\u0072\u0065\u0061c\u0068\u0065\u0064\u0045\u004f\u0046\u0020\u002d\u0020\u0064\u002e\u0049\u006e\u0070\u0075\u0074\u0053\u0074\u0072\u0065\u0061\u006d\u002e\u0053\u0065\u0065\u006b\u0020\u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_bdab );return false ,_cf .Wrap (_bdab ,_fgg ,"\u0069n\u0070\u0075\u0074\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020s\u0065\u0065\u006b\u0020\u0066\u0061\u0069\u006c\u0065\u0064");};_ ,_bdab =_ead .InputStream .ReadBits (32);if _bdab ==_e .EOF {return true ,nil ;}else if _bdab !=nil {return false ,_cf .Wrap (_bdab ,_fgg ,"");};return false ,nil ;};func (_fdd *Page )GetResolutionX ()(int ,error ){return _fdd .getResolutionX ()};func (_dgf *Document )produceClassifiedPage (_ecd *Page ,_dce *_bf .Header )(_ee error ){const _cg ="p\u0072\u006f\u0064\u0075ce\u0043l\u0061\u0073\u0073\u0069\u0066i\u0065\u0064\u0050\u0061\u0067\u0065";var _bfc map[int ]int ;_dgfe :=_dgf ._faa ;_dec :=[]*_bf .Header {_dce };if len (_dgf ._gb [_ecd .PageNumber ])> 0{_bfc =map[int ]int {};_cfg ,_bdg :=_dgf .addSymbolDictionary (_ecd .PageNumber ,_dgf .Classer .UndilatedTemplates ,_dgf ._gb [_ecd .PageNumber ],_bfc ,false );if _bdg !=nil {return _cf .Wrap (_bdg ,_cg ,"");};_dec =append (_dec ,_cfg );_dgfe +=len (_dgf ._gb [_ecd .PageNumber ]);};_ebg :=_dgf ._gd [_ecd .PageNumber ];_c .Log .Debug ("P\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020c\u006f\u006d\u0070\u0073: \u0025\u0076",_ecd .PageNumber ,_ebg );_ecd .addTextRegionSegment (_dec ,_dgf ._cfe ,_bfc ,_dgf ._gd [_ecd .PageNumber ],_dgf .Classer .PtaLL ,_dgf .Classer .UndilatedTemplates ,_dgf .Classer .ClassIDs ,nil ,_ddg (_dgfe ),len (_dgf ._gd [_ecd .PageNumber ]));return nil ;};func (_abeb *Page )createNormalPage (_bcg *_bf .PageInformationSegment )error {const _cfca ="\u0063\u0072e\u0061\u0074\u0065N\u006f\u0072\u006d\u0061\u006c\u0050\u0061\u0067\u0065";_abeb .Bitmap =_gc .New (_bcg .PageBMWidth ,_bcg .PageBMHeight );if _bcg .DefaultPixelValue ()!=0{_abeb .Bitmap .SetDefaultPixel ();};for _ ,_fccg :=range _abeb .Segments {switch _fccg .Type {case 6,7,22,23,38,39,42,43:_c .Log .Trace ("\u0047\u0065\u0074\u0074in\u0067\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0064",_fccg .SegmentNumber );_fca ,_deaf :=_fccg .GetSegmentData ();if _deaf !=nil {return _deaf ;};_ccg ,_gec :=_fca .(_bf .Regioner );if !_gec {_c .Log .Debug ("\u0053\u0065g\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069on\u0065\u0072",_fca );return _cf .Errorf (_cfca ,"i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062i\u0067\u0032\u0020\u0073\u0065\u0067\u006den\u0074\u0020\u0074\u0079p\u0065\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061 R\u0065\u0067i\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_fca );};_eag ,_deaf :=_ccg .GetRegionBitmap ();if _deaf !=nil {return _cf .Wrap (_deaf ,_cfca ,"");};if _abeb .fitsPage (_bcg ,_eag ){_abeb .Bitmap =_eag ;}else {_bfce :=_ccg .GetRegionInfo ();_cccg :=_abeb .getCombinationOperator (_bcg ,_bfce .CombinaionOperator );_deaf =_gc .Blit (_eag ,_abeb .Bitmap ,int (_bfce .XLocation ),int (_bfce .YLocation ),_cccg );if _deaf !=nil {return _cf .Wrap (_deaf ,_cfca ,"");};};};};return nil ;};func (_eaf *Page )GetSegment (number int )(*_bf .Header ,error ){const _eee ="\u0050a\u0067e\u002e\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074";for _ ,_dda :=range _eaf .Segments {if _dda .SegmentNumber ==uint32 (number ){return _dda ,nil ;};};_cdd :=make ([]uint32 ,len (_eaf .Segments ));for _aad ,_cbf :=range _eaf .Segments {_cdd [_aad ]=_cbf .SegmentNumber ;};return nil ,_cf .Errorf (_eee ,"\u0073e\u0067\u006d\u0065n\u0074\u0020\u0077i\u0074h \u006e\u0075\u006d\u0062\u0065\u0072\u003a \u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0070\u0061\u0067\u0065\u003a\u0020'%\u0064'\u002e\u0020\u004b\u006e\u006f\u0077n\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u003a \u0025\u0076",number ,_eaf .PageNumber ,_cdd );};func (_dff *Page )clearSegmentData (){for _dfda :=range _dff .Segments {_dff .Segments [_dfda ].CleanSegmentData ();};};func (_fe *Document )completeClassifiedPages ()(_bd error ){const _dg ="\u0063\u006f\u006dpl\u0065\u0074\u0065\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0050\u0061\u0067\u0065\u0073";if _fe .Classer ==nil {return nil ;};_fe ._de =make ([]int ,_fe .Classer .UndilatedTemplates .Size ());for _bb :=0;_bb < _fe .Classer .ClassIDs .Size ();_bb ++{_bff ,_be :=_fe .Classer .ClassIDs .Get (_bb );if _be !=nil {return _cf .Wrapf (_be ,_dg ,"\u0063\u006c\u0061\u0073s \u0077\u0069\u0074\u0068\u0020\u0069\u0064\u003a\u0020\u0027\u0025\u0064\u0027",_bb );};_fe ._de [_bff ]++;};var _afd []int ;for _ffa :=0;_ffa < _fe .Classer .UndilatedTemplates .Size ();_ffa ++{if _fe .NumberOfPages ==1||_fe ._de [_ffa ]> 1{_afd =append (_afd ,_ffa );};};var (_fd *Page ;_faf bool ;);for _cff ,_fg :=range *_fe .Classer .ComponentPageNumbers {if _fd ,_faf =_fe .Pages [_fg ];!_faf {return _cf .Errorf (_dg ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_cff );};if _fd .EncodingMethod ==GenericEM {_c .Log .Error ("\u0047\u0065\u006e\u0065\u0072\u0069c\u0020\u0070\u0061g\u0065\u0020\u0077i\u0074\u0068\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u003a \u0027\u0025\u0064\u0027\u0020ma\u0070\u0070\u0065\u0064\u0020\u0061\u0073\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0020\u0070\u0061\u0067\u0065",_cff );continue ;};_fe ._gd [_fg ]=append (_fe ._gd [_fg ],_cff );_afe ,_dca :=_fe .Classer .ClassIDs .Get (_cff );if _dca !=nil {return _cf .Wrapf (_dca ,_dg ,"\u006e\u006f\u0020\u0073uc\u0068\u0020\u0063\u006c\u0061\u0073\u0073\u0049\u0044\u003a\u0020\u0025\u0064",_cff );};if _fe ._de [_afe ]==1&&_fe .NumberOfPages !=1{_dd :=append (_fe ._gb [_fg ],_afe );_fe ._gb [_fg ]=_dd ;};};if _bd =_fe .Classer .ComputeLLCorners ();_bd !=nil {return _cf .Wrap (_bd ,_dg ,"");};if _ ,_bd =_fe .addSymbolDictionary (0,_fe .Classer .UndilatedTemplates ,_afd ,_fe ._cfe ,false );_bd !=nil {return _cf .Wrap (_bd ,_dg ,"");};return nil ;};func (_egc *Page )Encode (w _fa .BinaryWriter )(_ddec int ,_gdb error ){const _gfb ="P\u0061\u0067\u0065\u002e\u0045\u006e\u0063\u006f\u0064\u0065";var _ebbb int ;for _ ,_cfgg :=range _egc .Segments {if _ebbb ,_gdb =_cfgg .Encode (w );_gdb !=nil {return _ddec ,_cf .Wrap (_gdb ,_gfb ,"");};_ddec +=_ebbb ;};return _ddec ,nil ;};func (_dbde *Globals )AddSegment (segment *_bf .Header ){_dbde .Segments =append (_dbde .Segments ,segment );};func (_bca *Page )getWidth ()(int ,error ){const _bfd ="\u0067\u0065\u0074\u0057\u0069\u0064\u0074\u0068";if _bca .FinalWidth !=0{return _bca .FinalWidth ,nil ;};_ebge :=_bca .getPageInformationSegment ();if _ebge ==nil {return 0,_cf .Error (_bfd ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_gde ,_ege :=_ebge .GetSegmentData ();if _ege !=nil {return 0,_cf .Wrap (_ege ,_bfd ,"");};_fabd ,_abd :=_gde .(*_bf .PageInformationSegment );if !_abd {return 0,_cf .Errorf (_bfd ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_gde );};_bca .FinalWidth =_fabd .PageBMWidth ;return _bca .FinalWidth ,nil ;};func (_gbb *Page )getResolutionY ()(int ,error ){const _agfg ="\u0067\u0065\u0074\u0052\u0065\u0073\u006f\u006c\u0075t\u0069\u006f\u006e\u0059";if _gbb .ResolutionY !=0{return _gbb .ResolutionY ,nil ;};_ggbe :=_gbb .getPageInformationSegment ();if _ggbe ==nil {return 0,_cf .Error (_agfg ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_baea ,_bde :=_ggbe .GetSegmentData ();if _bde !=nil {return 0,_cf .Wrap (_bde ,_agfg ,"");};_ccd ,_bebd :=_baea .(*_bf .PageInformationSegment );if !_bebd {return 0,_cf .Errorf (_agfg ,"\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0066o\u0072\u006d\u0061ti\u006f\u006e\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0069\u0073\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0074\u0079\u0070\u0065\u003a\u0027%\u0054\u0027",_baea );};_gbb .ResolutionY =_ccd .ResolutionY ;return _gbb .ResolutionY ,nil ;};func (_gff *Document )determineRandomDataOffsets (_abf []*_bf .Header ,_fbe uint64 ){if _gff .OrganizationType !=_bf .ORandom {return ;};for _ ,_fbee :=range _abf {_fbee .SegmentDataStartOffset =_fbe ;_fbe +=_fbee .SegmentDataLength ;};};func (_bcfe *Page )AddPageInformationSegment (){_ccb :=&_bf .PageInformationSegment {PageBMWidth :_bcfe .FinalWidth ,PageBMHeight :_bcfe .FinalHeight ,ResolutionX :_bcfe .ResolutionX ,ResolutionY :_bcfe .ResolutionY ,IsLossless :_bcfe .IsLossless };_cfef :=&_bf .Header {PageAssociation :_bcfe .PageNumber ,SegmentDataLength :uint64 (_ccb .Size ()),SegmentData :_ccb ,Type :_bf .TPageInformation };_bcfe .Segments =append (_bcfe .Segments ,_cfef );};func (_feaf *Page )GetBitmap ()(_fcc *_gc .Bitmap ,_dbff error ){_c .Log .Trace (_dc .Sprintf ("\u005b\u0050\u0041G\u0045\u005d\u005b\u0023%\u0064\u005d\u0020\u0047\u0065\u0074\u0042i\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e",_feaf .PageNumber ));defer func (){if _dbff !=nil {_c .Log .Trace (_dc .Sprintf ("\u005b\u0050\u0041\u0047\u0045\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074B\u0069t\u006d\u0061\u0070\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_feaf .PageNumber ,_dbff ));}else {_c .Log .Trace (_dc .Sprintf ("\u005b\u0050\u0041\u0047\u0045\u005d\u005b\u0023\u0025\u0064]\u0020\u0047\u0065\u0074\u0042\u0069\u0074m\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064",_feaf .PageNumber ));};}();if _feaf .Bitmap !=nil {return _feaf .Bitmap ,nil ;};_dbff =_feaf .composePageBitmap ();if _dbff !=nil {return nil ,_dbff ;};return _feaf .Bitmap ,nil ;};func (_eae *Page )collectPageStripes ()(_beg []_bf .Segmenter ,_egcg error ){const _edd ="\u0063o\u006cl\u0065\u0063\u0074\u0050\u0061g\u0065\u0053t\u0072\u0069\u0070\u0065\u0073";var _fef _bf .Segmenter ;for _ ,_bbbd :=range _eae .Segments {switch _bbbd .Type {case 6,7,22,23,38,39,42,43:_fef ,_egcg =_bbbd .GetSegmentData ();if _egcg !=nil {return nil ,_cf .Wrap (_egcg ,_edd ,"");};_beg =append (_beg ,_fef );case 50:_fef ,_egcg =_bbbd .GetSegmentData ();if _egcg !=nil {return nil ,_egcg ;};_gfd ,_ece :=_fef .(*_bf .EndOfStripe );if !_ece {return nil ,_cf .Errorf (_edd ,"\u0045\u006e\u0064\u004f\u0066\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u006f\u0066\u0020\u0076\u0061l\u0069\u0064\u0020\u0074\u0079p\u0065\u003a \u0027\u0025\u0054\u0027",_fef );};_beg =append (_beg ,_gfd );_eae .FinalHeight =_gfd .LineNumber ();};};return _beg ,nil ;};func (_bbg *Page )getPageInformationSegment ()*_bf .Header {for _ ,_bag :=range _bbg .Segments {if _bag .Type ==_bf .TPageInformation {return _bag ;};};_c .Log .Debug ("\u0050\u0061\u0067\u0065\u0020\u0069\u006e\u0066o\u0072\u006d\u0061ti\u006f\u006e\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0066o\u0072\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0073\u002e",_bbg );return nil ;};func (_db *Document )addSymbolDictionary (_ggb int ,_dfb *_gc .Bitmaps ,_bg []int ,_ecg map[int ]int ,_aac bool )(*_bf .Header ,error ){const _bc ="\u0061\u0064\u0064\u0053ym\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079";_afa :=&_bf .SymbolDictionary {};if _ac :=_afa .InitEncode (_dfb ,_bg ,_ecg ,_aac );_ac !=nil {return nil ,_ac ;};_ab :=&_bf .Header {Type :_bf .TSymbolDictionary ,PageAssociation :_ggb ,SegmentData :_afa };if _ggb ==0{if _db .GlobalSegments ==nil {_db .GlobalSegments =&Globals {};};_db .GlobalSegments .AddSegment (_ab );return _ab ,nil ;};_fea ,_dbb :=_db .Pages [_ggb ];if !_dbb {return nil ,_cf .Errorf (_bc ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_ggb );};var (_beb int ;_bee *_bf .Header ;);for _beb ,_bee =range _fea .Segments {if _bee .Type ==_bf .TPageInformation {break ;};};_beb ++;_fea .Segments =append (_fea .Segments ,nil );copy (_fea .Segments [_beb +1:],_fea .Segments [_beb :]);_fea .Segments [_beb ]=_ab ;return _ab ,nil ;};func _ddg (_ba int )int {_bae :=0;_dfdd :=(_ba &(_ba -1))==0;_ba >>=1;for ;_ba !=0;_ba >>=1{_bae ++;};if _dfdd {return _bae ;};return _bae +1;};func (_ccgb *Page )getCombinationOperator (_ded *_bf .PageInformationSegment ,_aed _gc .CombinationOperator )_gc .CombinationOperator {if _ded .CombinationOperatorOverrideAllowed (){return _aed ;};return _ded .CombinationOperator ();};func (_beca *Page )getHeight ()(int ,error ){const _cge ="\u0067e\u0074\u0048\u0065\u0069\u0067\u0068t";if _beca .FinalHeight !=0{return _beca .FinalHeight ,nil ;};_gfba :=_beca .getPageInformationSegment ();if _gfba ==nil {return 0,_cf .Error (_cge ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_eeeb ,_fgcd :=_gfba .GetSegmentData ();if _fgcd !=nil {return 0,_cf .Wrap (_fgcd ,_cge ,"");};_dcg ,_bab :=_eeeb .(*_bf .PageInformationSegment );if !_bab {return 0,_cf .Errorf (_cge ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_eeeb );};if _dcg .PageBMHeight ==_f .MaxInt32 {_ ,_fgcd =_beca .GetBitmap ();if _fgcd !=nil {return 0,_cf .Wrap (_fgcd ,_cge ,"");};}else {_beca .FinalHeight =_dcg .PageBMHeight ;};return _beca .FinalHeight ,nil ;};func (_dcf *Page )createPage (_ecc *_bf .PageInformationSegment )error {var _cef error ;if !_ecc .IsStripe ||_ecc .PageBMHeight !=-1{_cef =_dcf .createNormalPage (_ecc );}else {_cef =_dcf .createStripedPage (_ecc );};return _cef ;};func (_dcc *Document )isFileHeaderPresent ()(bool ,error ){_dcc .InputStream .Mark ();for _ ,_cfcc :=range _eg {_dgfb ,_eea :=_dcc .InputStream .ReadByte ();if _eea !=nil {return false ,_eea ;};if _cfcc !=_dgfb {_dcc .InputStream .Reset ();return false ,nil ;};};_dcc .InputStream .Reset ();return true ,nil ;};func (_ada *Globals )GetSymbolDictionary ()(*_bf .Header ,error ){const _ddgd ="G\u006c\u006f\u0062\u0061\u006c\u0073.\u0047\u0065\u0074\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079";if _ada ==nil {return nil ,_cf .Error (_ddgd ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_ada .Segments )==0{return nil ,_cf .Error (_ddgd ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");};for _ ,_geg :=range _ada .Segments {if _geg .Type ==_bf .TSymbolDictionary {return _geg ,nil ;};};return nil ,_cf .Error (_ddgd ,"\u0067\u006c\u006fba\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020d\u0069c\u0074i\u006fn\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};func (_fbb *Page )String ()string {return _dc .Sprintf ("\u0050\u0061\u0067\u0065\u0020\u0023\u0025\u0064",_fbb .PageNumber );};func (_def *Document )parseFileHeader ()error {const _ggbb ="\u0070a\u0072s\u0065\u0046\u0069\u006c\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_ ,_bebb :=_def .InputStream .Seek (8,_e .SeekStart );if _bebb !=nil {return _cf .Wrap (_bebb ,_ggbb ,"\u0069\u0064");};_ ,_bebb =_def .InputStream .ReadBits (5);if _bebb !=nil {return _cf .Wrap (_bebb ,_ggbb ,"\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074\u0073");};_cfd ,_bebb :=_def .InputStream .ReadBit ();if _bebb !=nil {return _cf .Wrap (_bebb ,_ggbb ,"\u0065x\u0074e\u006e\u0064\u0065\u0064\u0020t\u0065\u006dp\u006c\u0061\u0074\u0065\u0073");};if _cfd ==1{_def .GBUseExtTemplate =true ;};_cfd ,_bebb =_def .InputStream .ReadBit ();if _bebb !=nil {return _cf .Wrap (_bebb ,_ggbb ,"\u0075\u006e\u006b\u006eow\u006e\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};if _cfd !=1{_def .NumberOfPagesUnknown =false ;};_cfd ,_bebb =_def .InputStream .ReadBit ();if _bebb !=nil {return _cf .Wrap (_bebb ,_ggbb ,"\u006f\u0072\u0067\u0061\u006e\u0069\u007a\u0061\u0074\u0069\u006f\u006e \u0074\u0079\u0070\u0065");};_def .OrganizationType =_bf .OrganizationType (_cfd );if !_def .NumberOfPagesUnknown {_def .NumberOfPages ,_bebb =_def .InputStream .ReadUint32 ();if _bebb !=nil {return _cf .Wrap (_bebb ,_ggbb ,"\u006eu\u006db\u0065\u0072\u0020\u006f\u0066\u0020\u0070\u0061\u0067\u0065\u0073");};_def ._cd =13;};return nil ;};func (_eb *Document )AddClassifiedPage (bm *_gc .Bitmap ,method _b .Method )(_aa error ){const _fb ="\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002e\u0041\u0064d\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064P\u0061\u0067\u0065";if !_eb .FullHeaders &&_eb .NumberOfPages !=0{return _cf .Error (_fb ,"\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0070\u0061\u0067\u0065\u002e\u0020\u0046\u0069\u006c\u0065\u004d\u006f\u0064\u0065\u0020\u0064\u0069\u0073\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0064\u0064i\u006e\u0067\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e \u006f\u006e\u0065\u0020\u0070\u0061g\u0065");};if _eb .Classer ==nil {if _eb .Classer ,_aa =_b .Init (_b .DefaultSettings ());_aa !=nil {return _cf .Wrap (_aa ,_fb ,"");};};_aae :=int (_eb .nextPageNumber ());_ff :=&Page {Segments :[]*_bf .Header {},Bitmap :bm ,Document :_eb ,FinalHeight :bm .Height ,FinalWidth :bm .Width ,PageNumber :_aae };_eb .Pages [_aae ]=_ff ;switch method {case _b .RankHaus :_ff .EncodingMethod =RankHausEM ;case _b .Correlation :_ff .EncodingMethod =CorrelationEM ;};_ff .AddPageInformationSegment ();if _aa =_eb .Classer .AddPage (bm ,_aae ,method );_aa !=nil {return _cf .Wrap (_aa ,_fb ,"");};if _eb .FullHeaders {_ff .AddEndOfPageSegment ();};return nil ;};type Page struct{Segments []*_bf .Header ;PageNumber int ;Bitmap *_gc .Bitmap ;FinalHeight int ;FinalWidth int ;ResolutionX int ;ResolutionY int ;IsLossless bool ;Document *Document ;FirstSegmentNumber int ;EncodingMethod EncodingMethod ;};