//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package document ;import (_g "encoding/binary";_e "fmt";_b "github.com/unidoc/unipdf/v3/common";_gc "github.com/unidoc/unipdf/v3/internal/bitwise";_cg "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_gf "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";_ge "github.com/unidoc/unipdf/v3/internal/jbig2/document/segments";_eg "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/classer";_d "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_ee "io";_f "math";_c "runtime/debug";);func (_ecf *Page )getHeight ()(int ,error ){const _beaf ="\u0067e\u0074\u0048\u0065\u0069\u0067\u0068t";if _ecf .FinalHeight !=0{return _ecf .FinalHeight ,nil ;};_bgdc :=_ecf .getPageInformationSegment ();if _bgdc ==nil {return 0,_d .Error (_beaf ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_acf ,_bdb :=_bgdc .GetSegmentData ();if _bdb !=nil {return 0,_d .Wrap (_bdb ,_beaf ,"");};_dbe ,_fdd :=_acf .(*_ge .PageInformationSegment );if !_fdd {return 0,_d .Errorf (_beaf ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_acf );};if _dbe .PageBMHeight ==_f .MaxInt32 {_ ,_bdb =_ecf .GetBitmap ();if _bdb !=nil {return 0,_d .Wrap (_bdb ,_beaf ,"");};}else {_ecf .FinalHeight =_dbe .PageBMHeight ;};return _ecf .FinalHeight ,nil ;};func _aaf (_aff _gc .StreamReader ,_bfc *Globals )(*Document ,error ){_gfb :=&Document {Pages :make (map[int ]*Page ),InputStream :_aff ,OrganizationType :_ge .OSequential ,NumberOfPagesUnknown :true ,GlobalSegments :_bfc ,_gg :9};if _gfb .GlobalSegments ==nil {_gfb .GlobalSegments =&Globals {};};if _caf :=_gfb .mapData ();_caf !=nil {return nil ,_caf ;};return _gfb ,nil ;};func (_dfd *Document )determineRandomDataOffsets (_aebc []*_ge .Header ,_eecf uint64 ){if _dfd .OrganizationType !=_ge .ORandom {return ;};for _ ,_af :=range _aebc {_af .SegmentDataStartOffset =_eecf ;_eecf +=_af .SegmentDataLength ;};};func DecodeDocument (input _gc .StreamReader ,globals *Globals )(*Document ,error ){return _aaf (input ,globals );};func (_bcaf *Page )AddPageInformationSegment (){_afb :=&_ge .PageInformationSegment {PageBMWidth :_bcaf .FinalWidth ,PageBMHeight :_bcaf .FinalHeight ,ResolutionX :_bcaf .ResolutionX ,ResolutionY :_bcaf .ResolutionY ,IsLossless :_bcaf .IsLossless };_gdg :=&_ge .Header {PageAssociation :_bcaf .PageNumber ,SegmentDataLength :uint64 (_afb .Size ()),SegmentData :_afb ,Type :_ge .TPageInformation };_bcaf .Segments =append (_bcaf .Segments ,_gdg );};func (_ffda *Page )GetBitmap ()(_gbc *_gf .Bitmap ,_cgcf error ){_b .Log .Trace (_e .Sprintf ("\u005b\u0050\u0041G\u0045\u005d\u005b\u0023%\u0064\u005d\u0020\u0047\u0065\u0074\u0042i\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e",_ffda .PageNumber ));defer func (){if _cgcf !=nil {_b .Log .Trace (_e .Sprintf ("\u005b\u0050\u0041\u0047\u0045\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074B\u0069t\u006d\u0061\u0070\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_ffda .PageNumber ,_cgcf ));}else {_b .Log .Trace (_e .Sprintf ("\u005b\u0050\u0041\u0047\u0045\u005d\u005b\u0023\u0025\u0064]\u0020\u0047\u0065\u0074\u0042\u0069\u0074m\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064",_ffda .PageNumber ));};}();if _ffda .Bitmap !=nil {return _ffda .Bitmap ,nil ;};_cgcf =_ffda .composePageBitmap ();if _cgcf !=nil {return nil ,_cgcf ;};return _ffda .Bitmap ,nil ;};func (_dfea *Page )GetResolutionY ()(int ,error ){return _dfea .getResolutionY ()};func (_becd *Page )getPageInformationSegment ()*_ge .Header {for _ ,_dacf :=range _becd .Segments {if _dacf .Type ==_ge .TPageInformation {return _dacf ;};};_b .Log .Debug ("\u0050\u0061\u0067\u0065\u0020\u0069\u006e\u0066o\u0072\u006d\u0061ti\u006f\u006e\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0066o\u0072\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0073\u002e",_becd );return nil ;};func (_aed *Page )composePageBitmap ()error {const _gfc ="\u0063\u006f\u006d\u0070\u006f\u0073\u0065\u0050\u0061\u0067\u0065\u0042i\u0074\u006d\u0061\u0070";if _aed .PageNumber ==0{return nil ;};_eba :=_aed .getPageInformationSegment ();if _eba ==nil {return _d .Error (_gfc ,"\u0070\u0061\u0067e \u0069\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069o\u006e \u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_fcd ,_bfd :=_eba .GetSegmentData ();if _bfd !=nil {return _bfd ;};_gfbe ,_cdc :=_fcd .(*_ge .PageInformationSegment );if !_cdc {return _d .Error (_gfc ,"\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006da\u0074\u0069\u006f\u006e \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};if _bfd =_aed .createPage (_gfbe );_bfd !=nil {return _d .Wrap (_bfd ,_gfc ,"");};_aed .clearSegmentData ();return nil ;};func (_baa *Document )GetNumberOfPages ()(uint32 ,error ){if _baa .NumberOfPagesUnknown ||_baa .NumberOfPages ==0{if len (_baa .Pages )==0{if _cagb :=_baa .mapData ();_cagb !=nil {return 0,_d .Wrap (_cagb ,"\u0044o\u0063\u0075\u006d\u0065n\u0074\u002e\u0047\u0065\u0074N\u0075m\u0062e\u0072\u004f\u0066\u0050\u0061\u0067\u0065s","");};};return uint32 (len (_baa .Pages )),nil ;};return _baa .NumberOfPages ,nil ;};func (_gdc *Document )parseFileHeader ()error {const _bac ="\u0070a\u0072s\u0065\u0046\u0069\u006c\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_ ,_dac :=_gdc .InputStream .Seek (8,_ee .SeekStart );if _dac !=nil {return _d .Wrap (_dac ,_bac ,"\u0069\u0064");};_ ,_dac =_gdc .InputStream .ReadBits (5);if _dac !=nil {return _d .Wrap (_dac ,_bac ,"\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074\u0073");};_bbd ,_dac :=_gdc .InputStream .ReadBit ();if _dac !=nil {return _d .Wrap (_dac ,_bac ,"\u0065x\u0074e\u006e\u0064\u0065\u0064\u0020t\u0065\u006dp\u006c\u0061\u0074\u0065\u0073");};if _bbd ==1{_gdc .GBUseExtTemplate =true ;};_bbd ,_dac =_gdc .InputStream .ReadBit ();if _dac !=nil {return _d .Wrap (_dac ,_bac ,"\u0075\u006e\u006b\u006eow\u006e\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};if _bbd !=1{_gdc .NumberOfPagesUnknown =false ;};_bbd ,_dac =_gdc .InputStream .ReadBit ();if _dac !=nil {return _d .Wrap (_dac ,_bac ,"\u006f\u0072\u0067\u0061\u006e\u0069\u007a\u0061\u0074\u0069\u006f\u006e \u0074\u0079\u0070\u0065");};_gdc .OrganizationType =_ge .OrganizationType (_bbd );if !_gdc .NumberOfPagesUnknown {_gdc .NumberOfPages ,_dac =_gdc .InputStream .ReadUint32 ();if _dac !=nil {return _d .Wrap (_dac ,_bac ,"\u006eu\u006db\u0065\u0072\u0020\u006f\u0066\u0020\u0070\u0061\u0067\u0065\u0073");};_gdc ._gg =13;};return nil ;};func (_cbg *Page )addTextRegionSegment (_aee []*_ge .Header ,_agbe ,_eea map[int ]int ,_cbd []int ,_abb *_gf .Points ,_gfd *_gf .Bitmaps ,_gba *_cg .IntSlice ,_fba *_gf .Boxes ,_faa ,_abcd int ){_gdgd :=&_ge .TextRegion {NumberOfSymbols :uint32 (_abcd )};_gdgd .InitEncode (_agbe ,_eea ,_cbd ,_abb ,_gfd ,_gba ,_fba ,_cbg .FinalWidth ,_cbg .FinalHeight ,_faa );_bdc :=&_ge .Header {RTSegments :_aee ,SegmentData :_gdgd ,PageAssociation :_cbg .PageNumber ,Type :_ge .TImmediateTextRegion };_fcf :=_ge .TPageInformation ;if _eea !=nil {_fcf =_ge .TSymbolDictionary ;};var _cfa int ;for ;_cfa < len (_cbg .Segments );_cfa ++{if _cbg .Segments [_cfa ].Type ==_fcf {_cfa ++;break ;};};_cbg .Segments =append (_cbg .Segments ,nil );copy (_cbg .Segments [_cfa +1:],_cbg .Segments [_cfa :]);_cbg .Segments [_cfa ]=_bdc ;};func (_cag *Document )completeSymbols ()(_cgc error ){const _ege ="\u0063o\u006dp\u006c\u0065\u0074\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";if _cag .Classer ==nil {return nil ;};if _cag .Classer .UndilatedTemplates ==nil {return _d .Error (_ege ,"\u006e\u006f t\u0065\u006d\u0070l\u0061\u0074\u0065\u0073 de\u0066in\u0065\u0064\u0020\u0066\u006f\u0072\u0020th\u0065\u0020\u0063\u006c\u0061\u0073\u0073e\u0072");};_addb :=len (_cag .Pages )==1;_ged :=make ([]int ,_cag .Classer .UndilatedTemplates .Size ());var _cbc int ;for _ffa :=0;_ffa < _cag .Classer .ClassIDs .Size ();_ffa ++{_cbc ,_cgc =_cag .Classer .ClassIDs .Get (_ffa );if _cgc !=nil {return _d .Wrap (_cgc ,_ege ,"\u0063\u006c\u0061\u0073\u0073\u0020\u0049\u0044\u0027\u0073");};_ged [_cbc ]++;};var _dgd []int ;for _faed :=0;_faed < _cag .Classer .UndilatedTemplates .Size ();_faed ++{if _ged [_faed ]==0{return _d .Error (_ege ,"\u006eo\u0020\u0073y\u006d\u0062\u006f\u006cs\u0020\u0069\u006es\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u0066\u006fun\u0064\u0020\u0066o\u0072\u0020g\u0069\u0076\u0065\u006e\u0020\u0063l\u0061\u0073s\u003f\u0020");};if _ged [_faed ]> 1||_addb {_dgd =append (_dgd ,_faed );};};_cag ._dg =len (_dgd );var _dbc ,_baf int ;for _dcb :=0;_dcb < _cag .Classer .ComponentPageNumbers .Size ();_dcb ++{_dbc ,_cgc =_cag .Classer .ComponentPageNumbers .Get (_dcb );if _cgc !=nil {return _d .Wrapf (_cgc ,_ege ,"p\u0061\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027 \u006e\u006f\u0074\u0020\u0066\u006f\u0075nd\u0020\u0069\u006e\u0020t\u0068\u0065\u0020\u0063\u006c\u0061\u0073\u0073\u0065r \u0070\u0061g\u0065\u006e\u0075\u006d\u0062\u0065\u0072\u0073",_dcb );};_baf ,_cgc =_cag .Classer .ClassIDs .Get (_dcb );if _cgc !=nil {return _d .Wrapf (_cgc ,_ege ,"\u0063\u0061\u006e\u0027\u0074\u0020\u0067e\u0074\u0020\u0073y\u006d\u0062\u006f\u006c \u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0027\u0025\u0064\u0027\u0020\u0066\u0072\u006f\u006d\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072",_dbc );};if _ged [_baf ]==1&&!_addb {_cag ._ca [_dbc ]=append (_cag ._ca [_dbc ],_baf );};};if _cgc =_cag .Classer .ComputeLLCorners ();_cgc !=nil {return _d .Wrap (_cgc ,_ege ,"");};return nil ;};func (_cfbe *Page )String ()string {return _e .Sprintf ("\u0050\u0061\u0067\u0065\u0020\u0023\u0025\u0064",_cfbe .PageNumber );};func (_cba *Document )AddGenericPage (bm *_gf .Bitmap ,duplicateLineRemoval bool )(_de error ){const _bg ="\u0044\u006f\u0063um\u0065\u006e\u0074\u002e\u0041\u0064\u0064\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0050\u0061\u0067\u0065";if !_cba .FullHeaders &&_cba .NumberOfPages !=0{return _d .Error (_bg ,"\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0070\u0061\u0067\u0065\u002e\u0020\u0046\u0069\u006c\u0065\u004d\u006f\u0064\u0065\u0020\u0064\u0069\u0073\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0064\u0064i\u006e\u0067\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e \u006f\u006e\u0065\u0020\u0070\u0061g\u0065");};_fa :=&Page {Segments :[]*_ge .Header {},Bitmap :bm ,Document :_cba ,FinalHeight :bm .Height ,FinalWidth :bm .Width ,IsLossless :true };_fa .PageNumber =int (_cba .nextPageNumber ());_cba .Pages [_fa .PageNumber ]=_fa ;_fa .AddPageInformationSegment ();if _de =_fa .AddGenericRegion (bm ,0,0,0,_ge .TImmediateGenericRegion ,duplicateLineRemoval );_de !=nil {return _d .Wrap (_de ,_bg ,"");};if _cba .FullHeaders {_fa .AddEndOfPageSegment ();};return nil ;};func (_ece *Page )getResolutionY ()(int ,error ){const _debf ="\u0067\u0065\u0074\u0052\u0065\u0073\u006f\u006c\u0075t\u0069\u006f\u006e\u0059";if _ece .ResolutionY !=0{return _ece .ResolutionY ,nil ;};_egf :=_ece .getPageInformationSegment ();if _egf ==nil {return 0,_d .Error (_debf ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_gcda ,_cbef :=_egf .GetSegmentData ();if _cbef !=nil {return 0,_d .Wrap (_cbef ,_debf ,"");};_edg ,_dae :=_gcda .(*_ge .PageInformationSegment );if !_dae {return 0,_d .Errorf (_debf ,"\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0066o\u0072\u006d\u0061ti\u006f\u006e\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0069\u0073\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0074\u0079\u0070\u0065\u003a\u0027%\u0054\u0027",_gcda );};_ece .ResolutionY =_edg .ResolutionY ;return _ece .ResolutionY ,nil ;};func (_dc *Document )AddClassifiedPage (bm *_gf .Bitmap ,method _eg .Method )(_cf error ){const _ae ="\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002e\u0041\u0064d\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064P\u0061\u0067\u0065";if !_dc .FullHeaders &&_dc .NumberOfPages !=0{return _d .Error (_ae ,"\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0070\u0061\u0067\u0065\u002e\u0020\u0046\u0069\u006c\u0065\u004d\u006f\u0064\u0065\u0020\u0064\u0069\u0073\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0064\u0064i\u006e\u0067\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e \u006f\u006e\u0065\u0020\u0070\u0061g\u0065");};if _dc .Classer ==nil {if _dc .Classer ,_cf =_eg .Init (_eg .DefaultSettings ());_cf !=nil {return _d .Wrap (_cf ,_ae ,"");};};_cgg :=int (_dc .nextPageNumber ());_abf :=&Page {Segments :[]*_ge .Header {},Bitmap :bm ,Document :_dc ,FinalHeight :bm .Height ,FinalWidth :bm .Width ,PageNumber :_cgg };_dc .Pages [_cgg ]=_abf ;switch method {case _eg .RankHaus :_abf .EncodingMethod =RankHausEM ;case _eg .Correlation :_abf .EncodingMethod =CorrelationEM ;};_abf .AddPageInformationSegment ();if _cf =_dc .Classer .AddPage (bm ,_cgg ,method );_cf !=nil {return _d .Wrap (_cf ,_ae ,"");};if _dc .FullHeaders {_abf .AddEndOfPageSegment ();};return nil ;};type EncodingMethod int ;func (_daa *Page )countRegions ()int {var _geda int ;for _ ,_bdcf :=range _daa .Segments {switch _bdcf .Type {case 6,7,22,23,38,39,42,43:_geda ++;};};return _geda ;};func (_ddg *Page )createPage (_fbg *_ge .PageInformationSegment )error {var _gee error ;if !_fbg .IsStripe ||_fbg .PageBMHeight !=-1{_gee =_ddg .createNormalPage (_fbg );}else {_gee =_ddg .createStripedPage (_fbg );};return _gee ;};func (_feb *Page )createStripedPage (_gcba *_ge .PageInformationSegment )error {const _dbg ="\u0063\u0072\u0065\u0061\u0074\u0065\u0053\u0074\u0072\u0069\u0070\u0065d\u0050\u0061\u0067\u0065";_egg ,_bfgd :=_feb .collectPageStripes ();if _bfgd !=nil {return _d .Wrap (_bfgd ,_dbg ,"");};var _ceb int ;for _ ,_geff :=range _egg {if _dgbd ,_gbe :=_geff .(*_ge .EndOfStripe );_gbe {_ceb =_dgbd .LineNumber ()+1;}else {_fbfc :=_geff .(_ge .Regioner );_bed :=_fbfc .GetRegionInfo ();_dfgc :=_feb .getCombinationOperator (_gcba ,_bed .CombinaionOperator );_fafd ,_gad :=_fbfc .GetRegionBitmap ();if _gad !=nil {return _d .Wrap (_gad ,_dbg ,"");};_gad =_gf .Blit (_fafd ,_feb .Bitmap ,int (_bed .XLocation ),_ceb ,_dfgc );if _gad !=nil {return _d .Wrap (_gad ,_dbg ,"");};};};return nil ;};func (_aec *Page )getWidth ()(int ,error ){const _ecfc ="\u0067\u0065\u0074\u0057\u0069\u0064\u0074\u0068";if _aec .FinalWidth !=0{return _aec .FinalWidth ,nil ;};_geg :=_aec .getPageInformationSegment ();if _geg ==nil {return 0,_d .Error (_ecfc ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_gcd ,_ed :=_geg .GetSegmentData ();if _ed !=nil {return 0,_d .Wrap (_ed ,_ecfc ,"");};_faeec ,_bdbe :=_gcd .(*_ge .PageInformationSegment );if !_bdbe {return 0,_d .Errorf (_ecfc ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_gcd );};_aec .FinalWidth =_faeec .PageBMWidth ;return _aec .FinalWidth ,nil ;};func (_badf *Page )getCombinationOperator (_fed *_ge .PageInformationSegment ,_agg _gf .CombinationOperator )_gf .CombinationOperator {if _fed .CombinationOperatorOverrideAllowed (){return _agg ;};return _fed .CombinationOperator ();};func (_gcf *Document )nextPageNumber ()uint32 {_gcf .NumberOfPages ++;return _gcf .NumberOfPages };func (_fgdc *Page )nextSegmentNumber ()uint32 {return _fgdc .Document .nextSegmentNumber ()};func (_ea *Document )completeClassifiedPages ()(_fc error ){const _ga ="\u0063\u006f\u006dpl\u0065\u0074\u0065\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0050\u0061\u0067\u0065\u0073";if _ea .Classer ==nil {return nil ;};_ea ._egb =make ([]int ,_ea .Classer .UndilatedTemplates .Size ());for _eed :=0;_eed < _ea .Classer .ClassIDs .Size ();_eed ++{_fd ,_gag :=_ea .Classer .ClassIDs .Get (_eed );if _gag !=nil {return _d .Wrapf (_gag ,_ga ,"\u0063\u006c\u0061\u0073s \u0077\u0069\u0074\u0068\u0020\u0069\u0064\u003a\u0020\u0027\u0025\u0064\u0027",_eed );};_ea ._egb [_fd ]++;};var _dd []int ;for _eeb :=0;_eeb < _ea .Classer .UndilatedTemplates .Size ();_eeb ++{if _ea .NumberOfPages ==1||_ea ._egb [_eeb ]> 1{_dd =append (_dd ,_eeb );};};var (_gac *Page ;_gd bool ;);for _cc ,_cab :=range *_ea .Classer .ComponentPageNumbers {if _gac ,_gd =_ea .Pages [_cab ];!_gd {return _d .Errorf (_ga ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_cc );};if _gac .EncodingMethod ==GenericEM {_b .Log .Error ("\u0047\u0065\u006e\u0065\u0072\u0069c\u0020\u0070\u0061g\u0065\u0020\u0077i\u0074\u0068\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u003a \u0027\u0025\u0064\u0027\u0020ma\u0070\u0070\u0065\u0064\u0020\u0061\u0073\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0020\u0070\u0061\u0067\u0065",_cc );continue ;};_ea ._cb [_cab ]=append (_ea ._cb [_cab ],_cc );_eec ,_aea :=_ea .Classer .ClassIDs .Get (_cc );if _aea !=nil {return _d .Wrapf (_aea ,_ga ,"\u006e\u006f\u0020\u0073uc\u0068\u0020\u0063\u006c\u0061\u0073\u0073\u0049\u0044\u003a\u0020\u0025\u0064",_cc );};if _ea ._egb [_eec ]==1&&_ea .NumberOfPages !=1{_cfc :=append (_ea ._ca [_cab ],_eec );_ea ._ca [_cab ]=_cfc ;};};if _fc =_ea .Classer .ComputeLLCorners ();_fc !=nil {return _d .Wrap (_fc ,_ga ,"");};if _ ,_fc =_ea .addSymbolDictionary (0,_ea .Classer .UndilatedTemplates ,_dd ,_ea ._ab ,false );_fc !=nil {return _d .Wrap (_fc ,_ga ,"");};return nil ;};func (_cfb *Page )GetHeight ()(int ,error ){return _cfb .getHeight ()};func (_gace *Globals )GetSegment (segmentNumber int )(*_ge .Header ,error ){const _bca ="\u0047l\u006fb\u0061\u006c\u0073\u002e\u0047e\u0074\u0053e\u0067\u006d\u0065\u006e\u0074";if _gace ==nil {return nil ,_d .Error (_bca ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_gace .Segments )==0{return nil ,_d .Error (_bca ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");};var _fef *_ge .Header ;for _ ,_fef =range _gace .Segments {if _fef .SegmentNumber ==uint32 (segmentNumber ){break ;};};if _fef ==nil {return nil ,_d .Error (_bca ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};return _fef ,nil ;};type Document struct{Pages map[int ]*Page ;NumberOfPagesUnknown bool ;NumberOfPages uint32 ;GBUseExtTemplate bool ;InputStream _gc .StreamReader ;GlobalSegments *Globals ;OrganizationType _ge .OrganizationType ;Classer *_eg .Classer ;XRes ,YRes int ;FullHeaders bool ;CurrentSegmentNumber uint32 ;AverageTemplates *_gf .Bitmaps ;BaseIndexes []int ;Refinement bool ;RefineLevel int ;_gg uint8 ;_df *_gc .BufferedWriter ;EncodeGlobals bool ;_dg int ;_ca map[int ][]int ;_cb map[int ][]int ;_egb []int ;_ab map[int ]int ;};func (_dga *Document )reachedEOF (_ddfe int64 )(bool ,error ){const _dgfe ="\u0072\u0065\u0061\u0063\u0068\u0065\u0064\u0045\u004f\u0046";_ ,_bdf :=_dga .InputStream .Seek (_ddfe ,_ee .SeekStart );if _bdf !=nil {_b .Log .Debug ("\u0072\u0065\u0061c\u0068\u0065\u0064\u0045\u004f\u0046\u0020\u002d\u0020\u0064\u002e\u0049\u006e\u0070\u0075\u0074\u0053\u0074\u0072\u0065\u0061\u006d\u002e\u0053\u0065\u0065\u006b\u0020\u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_bdf );return false ,_d .Wrap (_bdf ,_dgfe ,"\u0069n\u0070\u0075\u0074\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020s\u0065\u0065\u006b\u0020\u0066\u0061\u0069\u006c\u0065\u0064");};_ ,_bdf =_dga .InputStream .ReadBits (32);if _bdf ==_ee .EOF {return true ,nil ;}else if _bdf !=nil {return false ,_d .Wrap (_bdf ,_dgfe ,"");};return false ,nil ;};func (_dad *Globals )GetSegmentByIndex (index int )(*_ge .Header ,error ){const _bba ="\u0047l\u006f\u0062\u0061\u006cs\u002e\u0047\u0065\u0074\u0053e\u0067m\u0065n\u0074\u0042\u0079\u0049\u006e\u0064\u0065x";if _dad ==nil {return nil ,_d .Error (_bba ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_dad .Segments )==0{return nil ,_d .Error (_bba ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");};if index > len (_dad .Segments )-1{return nil ,_d .Error (_bba ,"\u0069n\u0064e\u0078\u0020\u006f\u0075\u0074 \u006f\u0066 \u0072\u0061\u006e\u0067\u0065");};return _dad .Segments [index ],nil ;};func (_aeb *Document )GetGlobalSegment (i int )(*_ge .Header ,error ){_geac ,_gfg :=_aeb .GlobalSegments .GetSegment (i );if _gfg !=nil {return nil ,_d .Wrap (_gfg ,"\u0047\u0065t\u0047\u006c\u006fb\u0061\u006c\u0053\u0065\u0067\u006d\u0065\u006e\u0074","");};return _geac ,nil ;};func (_ecc *Page )GetResolutionX ()(int ,error ){return _ecc .getResolutionX ()};var _db =[]byte {0x97,0x4A,0x42,0x32,0x0D,0x0A,0x1A,0x0A};type Page struct{Segments []*_ge .Header ;PageNumber int ;Bitmap *_gf .Bitmap ;FinalHeight int ;FinalWidth int ;ResolutionX int ;ResolutionY int ;IsLossless bool ;Document *Document ;FirstSegmentNumber int ;EncodingMethod EncodingMethod ;};func (_bbgd *Globals )AddSegment (segment *_ge .Header ){_bbgd .Segments =append (_bbgd .Segments ,segment );};func (_dbf *Page )getResolutionX ()(int ,error ){const _deb ="\u0067\u0065\u0074\u0052\u0065\u0073\u006f\u006c\u0075t\u0069\u006f\u006e\u0058";if _dbf .ResolutionX !=0{return _dbf .ResolutionX ,nil ;};_dcbc :=_dbf .getPageInformationSegment ();if _dcbc ==nil {return 0,_d .Error (_deb ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_dgfed ,_daad :=_dcbc .GetSegmentData ();if _daad !=nil {return 0,_d .Wrap (_daad ,_deb ,"");};_aeg ,_fgd :=_dgfed .(*_ge .PageInformationSegment );if !_fgd {return 0,_d .Errorf (_deb ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_dgfed );};_dbf .ResolutionX =_aeg .ResolutionX ;return _dbf .ResolutionX ,nil ;};func (_faee *Document )mapData ()error {const _fb ="\u006da\u0070\u0044\u0061\u0074\u0061";var (_dgdf []*_ge .Header ;_cde int64 ;_bbc _ge .Type ;);_gdd ,_bc :=_faee .isFileHeaderPresent ();if _bc !=nil {return _d .Wrap (_bc ,_fb ,"");};if _gdd {if _bc =_faee .parseFileHeader ();_bc !=nil {return _d .Wrap (_bc ,_fb ,"");};_cde +=int64 (_faee ._gg );_faee .FullHeaders =true ;};var (_bf *Page ;_dcbf bool ;);for _bbc !=51&&!_dcbf {_fab ,_gef :=_ge .NewHeader (_faee ,_faee .InputStream ,_cde ,_faee .OrganizationType );if _gef !=nil {return _d .Wrap (_gef ,_fb ,"");};_b .Log .Trace ("\u0044\u0065c\u006f\u0064\u0069\u006eg\u0020\u0073e\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u0075m\u0062\u0065\u0072\u003a\u0020\u0025\u0064\u002c\u0020\u0054\u0079\u0070e\u003a\u0020\u0025\u0073",_fab .SegmentNumber ,_fab .Type );_bbc =_fab .Type ;if _bbc !=_ge .TEndOfFile {if _fab .PageAssociation !=0{_bf =_faee .Pages [_fab .PageAssociation ];if _bf ==nil {_bf =_acg (_faee ,_fab .PageAssociation );_faee .Pages [_fab .PageAssociation ]=_bf ;if _faee .NumberOfPagesUnknown {_faee .NumberOfPages ++;};};_bf .Segments =append (_bf .Segments ,_fab );}else {_faee .GlobalSegments .AddSegment (_fab );};};_dgdf =append (_dgdf ,_fab );_cde =_faee .InputStream .StreamPosition ();if _faee .OrganizationType ==_ge .OSequential {_cde +=int64 (_fab .SegmentDataLength );};_dcbf ,_gef =_faee .reachedEOF (_cde );if _gef !=nil {_b .Log .Debug ("\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020\u0072\u0065\u0061\u0063h\u0065\u0064\u0020\u0045\u004f\u0046\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_gef );return _d .Wrap (_gef ,_fb ,"");};};_faee .determineRandomDataOffsets (_dgdf ,uint64 (_cde ));return nil ;};func (_aef *Document )encodeFileHeader (_efb _gc .BinaryWriter )(_dgf int ,_aa error ){const _adf ="\u0065\u006ec\u006f\u0064\u0065F\u0069\u006c\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_dgf ,_aa =_efb .Write (_db );if _aa !=nil {return _dgf ,_d .Wrap (_aa ,_adf ,"\u0069\u0064");};if _aa =_efb .WriteByte (0x01);_aa !=nil {return _dgf ,_d .Wrap (_aa ,_adf ,"\u0066\u006c\u0061g\u0073");};_dgf ++;_ccef :=make ([]byte ,4);_g .BigEndian .PutUint32 (_ccef ,_aef .NumberOfPages );_agb ,_aa :=_efb .Write (_ccef );if _aa !=nil {return _agb ,_d .Wrap (_aa ,_adf ,"p\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_dgf +=_agb ;return _dgf ,nil ;};func (_cbe *Document )produceClassifiedPage (_eeg *Page ,_gde *_ge .Header )(_bd error ){const _bea ="p\u0072\u006f\u0064\u0075ce\u0043l\u0061\u0073\u0073\u0069\u0066i\u0065\u0064\u0050\u0061\u0067\u0065";var _ad map[int ]int ;_gce :=_cbe ._dg ;_fce :=[]*_ge .Header {_gde };if len (_cbe ._ca [_eeg .PageNumber ])> 0{_ad =map[int ]int {};_cce ,_ac :=_cbe .addSymbolDictionary (_eeg .PageNumber ,_cbe .Classer .UndilatedTemplates ,_cbe ._ca [_eeg .PageNumber ],_ad ,false );if _ac !=nil {return _d .Wrap (_ac ,_bea ,"");};_fce =append (_fce ,_cce );_gce +=len (_cbe ._ca [_eeg .PageNumber ]);};_ff :=_cbe ._cb [_eeg .PageNumber ];_b .Log .Debug ("P\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020c\u006f\u006d\u0070\u0073: \u0025\u0076",_eeg .PageNumber ,_ff );_eeg .addTextRegionSegment (_fce ,_cbe ._ab ,_ad ,_cbe ._cb [_eeg .PageNumber ],_cbe .Classer .PtaLL ,_cbe .Classer .UndilatedTemplates ,_cbe .Classer .ClassIDs ,nil ,_fe (_gce ),len (_cbe ._cb [_eeg .PageNumber ]));return nil ;};func (_cbeg *Page )AddGenericRegion (bm *_gf .Bitmap ,xloc ,yloc ,template int ,tp _ge .Type ,duplicateLineRemoval bool )error {const _fbc ="P\u0061\u0067\u0065\u002eAd\u0064G\u0065\u006e\u0065\u0072\u0069c\u0052\u0065\u0067\u0069\u006f\u006e";_cdf :=&_ge .GenericRegion {};if _bbcc :=_cdf .InitEncode (bm ,xloc ,yloc ,template ,duplicateLineRemoval );_bbcc !=nil {return _d .Wrap (_bbcc ,_fbc ,"");};_fgc :=&_ge .Header {Type :_ge .TImmediateGenericRegion ,PageAssociation :_cbeg .PageNumber ,SegmentData :_cdf };_cbeg .Segments =append (_cbeg .Segments ,_fgc );return nil ;};func (_gbad *Page )createNormalPage (_bffb *_ge .PageInformationSegment )error {const _ddc ="\u0063\u0072e\u0061\u0074\u0065N\u006f\u0072\u006d\u0061\u006c\u0050\u0061\u0067\u0065";_gbad .Bitmap =_gf .New (_bffb .PageBMWidth ,_bffb .PageBMHeight );if _bffb .DefaultPixelValue ()!=0{_gbad .Bitmap .SetDefaultPixel ();};for _ ,_afbd :=range _gbad .Segments {switch _afbd .Type {case 6,7,22,23,38,39,42,43:_b .Log .Trace ("\u0047\u0065\u0074\u0074in\u0067\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0064",_afbd .SegmentNumber );_gdb ,_gdbb :=_afbd .GetSegmentData ();if _gdbb !=nil {return _gdbb ;};_gddd ,_bfe :=_gdb .(_ge .Regioner );if !_bfe {_b .Log .Debug ("\u0053\u0065g\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069on\u0065\u0072",_gdb );return _d .Errorf (_ddc ,"i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062i\u0067\u0032\u0020\u0073\u0065\u0067\u006den\u0074\u0020\u0074\u0079p\u0065\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061 R\u0065\u0067i\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_gdb );};_fda ,_gdbb :=_gddd .GetRegionBitmap ();if _gdbb !=nil {return _d .Wrap (_gdbb ,_ddc ,"");};if _gbad .fitsPage (_bffb ,_fda ){_gbad .Bitmap =_fda ;}else {_aeae :=_gddd .GetRegionInfo ();_acge :=_gbad .getCombinationOperator (_bffb ,_aeae .CombinaionOperator );_gdbb =_gf .Blit (_fda ,_gbad .Bitmap ,int (_aeae .XLocation ),int (_aeae .YLocation ),_acge );if _gdbb !=nil {return _d .Wrap (_gdbb ,_ddc ,"");};};};};return nil ;};func _acg (_dgea *Document ,_dbd int )*Page {return &Page {Document :_dgea ,PageNumber :_dbd ,Segments :[]*_ge .Header {}};};func _fe (_cfg int )int {_bgg :=0;_gda :=(_cfg &(_cfg -1))==0;_cfg >>=1;for ;_cfg !=0;_cfg >>=1{_bgg ++;};if _gda {return _bgg ;};return _bgg +1;};func (_gcb *Document )produceClassifiedPages ()(_be error ){const _fg ="\u0070\u0072\u006f\u0064uc\u0065\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0050\u0061\u0067e\u0073";if _gcb .Classer ==nil {return nil ;};var (_ba *Page ;_dfe bool ;_ef *_ge .Header ;);for _bae :=1;_bae <=int (_gcb .NumberOfPages );_bae ++{if _ba ,_dfe =_gcb .Pages [_bae ];!_dfe {return _d .Errorf (_fg ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_bae );};if _ba .EncodingMethod ==GenericEM {continue ;};if _ef ==nil {if _ef ,_be =_gcb .GlobalSegments .GetSymbolDictionary ();_be !=nil {return _d .Wrap (_be ,_fg ,"");};};if _be =_gcb .produceClassifiedPage (_ba ,_ef );_be !=nil {return _d .Wrapf (_be ,_fg ,"\u0070\u0061\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027",_bae );};};return nil ;};const (GenericEM EncodingMethod =iota ;CorrelationEM ;RankHausEM ;);func (_bbg *Document )nextSegmentNumber ()uint32 {_cda :=_bbg .CurrentSegmentNumber ;_bbg .CurrentSegmentNumber ++;return _cda ;};func (_aae *Page )GetWidth ()(int ,error ){return _aae .getWidth ()};func (_bef *Document )addSymbolDictionary (_cd int ,_bdd *_gf .Bitmaps ,_abd []int ,_bde map[int ]int ,_ccf bool )(*_ge .Header ,error ){const _eb ="\u0061\u0064\u0064\u0053ym\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079";_fae :=&_ge .SymbolDictionary {};if _ce :=_fae .InitEncode (_bdd ,_abd ,_bde ,_ccf );_ce !=nil {return nil ,_ce ;};_dgc :=&_ge .Header {Type :_ge .TSymbolDictionary ,PageAssociation :_cd ,SegmentData :_fae };if _cd ==0{if _bef .GlobalSegments ==nil {_bef .GlobalSegments =&Globals {};};_bef .GlobalSegments .AddSegment (_dgc );return _dgc ,nil ;};_fcef ,_add :=_bef .Pages [_cd ];if !_add {return nil ,_d .Errorf (_eb ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_cd );};var (_gaga int ;_ffd *_ge .Header ;);for _gaga ,_ffd =range _fcef .Segments {if _ffd .Type ==_ge .TPageInformation {break ;};};_gaga ++;_fcef .Segments =append (_fcef .Segments ,nil );copy (_fcef .Segments [_gaga +1:],_fcef .Segments [_gaga :]);_fcef .Segments [_gaga ]=_dgc ;return _dgc ,nil ;};func InitEncodeDocument (fullHeaders bool )*Document {return &Document {FullHeaders :fullHeaders ,_df :_gc .BufferedMSB (),Pages :map[int ]*Page {},_ca :map[int ][]int {},_ab :map[int ]int {},_cb :map[int ][]int {}};};func (_bag *Globals )GetSymbolDictionary ()(*_ge .Header ,error ){const _gb ="G\u006c\u006f\u0062\u0061\u006c\u0073.\u0047\u0065\u0074\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079";if _bag ==nil {return nil ,_d .Error (_gb ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_bag .Segments )==0{return nil ,_d .Error (_gb ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");};for _ ,_bga :=range _bag .Segments {if _bga .Type ==_ge .TSymbolDictionary {return _bga ,nil ;};};return nil ,_d .Error (_gb ,"\u0067\u006c\u006fba\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020d\u0069c\u0074i\u006fn\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};type Globals struct{Segments []*_ge .Header ;};func (_dgb *Document )isFileHeaderPresent ()(bool ,error ){_dgb .InputStream .Mark ();for _ ,_adfd :=range _db {_abdac ,_ecg :=_dgb .InputStream .ReadByte ();if _ecg !=nil {return false ,_ecg ;};if _adfd !=_abdac {_dgb .InputStream .Reset ();return false ,nil ;};};_dgb .InputStream .Reset ();return true ,nil ;};func (_cdb *Page )collectPageStripes ()(_afe []_ge .Segmenter ,_aba error ){const _gfcc ="\u0063o\u006cl\u0065\u0063\u0074\u0050\u0061g\u0065\u0053t\u0072\u0069\u0070\u0065\u0073";var _gdeb _ge .Segmenter ;for _ ,_bgd :=range _cdb .Segments {switch _bgd .Type {case 6,7,22,23,38,39,42,43:_gdeb ,_aba =_bgd .GetSegmentData ();if _aba !=nil {return nil ,_d .Wrap (_aba ,_gfcc ,"");};_afe =append (_afe ,_gdeb );case 50:_gdeb ,_aba =_bgd .GetSegmentData ();if _aba !=nil {return nil ,_aba ;};_ccea ,_ecb :=_gdeb .(*_ge .EndOfStripe );if !_ecb {return nil ,_d .Errorf (_gfcc ,"\u0045\u006e\u0064\u004f\u0066\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u006f\u0066\u0020\u0076\u0061l\u0069\u0064\u0020\u0074\u0079p\u0065\u003a \u0027\u0025\u0054\u0027",_gdeb );};_afe =append (_afe ,_ccea );_cdb .FinalHeight =_ccea .LineNumber ();};};return _afe ,nil ;};func (_gec *Document )encodeSegment (_bad *_ge .Header ,_cge *int )error {const _da ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074";_bad .SegmentNumber =_gec .nextSegmentNumber ();_ddb ,_efc :=_bad .Encode (_gec ._df );if _efc !=nil {return _d .Wrapf (_efc ,_da ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_bad .SegmentNumber );};*_cge +=_ddb ;return nil ;};func (_efa *Document )GetPage (pageNumber int )(_ge .Pager ,error ){const _aeag ="\u0044\u006fc\u0075\u006d\u0065n\u0074\u002e\u0047\u0065\u0074\u0050\u0061\u0067\u0065";if pageNumber < 0{_b .Log .Debug ("\u004a\u0042\u0049\u00472\u0020\u0050\u0061\u0067\u0065\u0020\u002d\u0020\u0047e\u0074\u0050\u0061\u0067\u0065\u003a\u0020\u0025\u0064\u002e\u0020\u0050\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062e\u0020\u006c\u006f\u0077\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0030\u002e\u0020\u0025\u0073",pageNumber ,_c .Stack ());return nil ,_d .Errorf (_aeag ,"\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032\u0020d\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020\u002d\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064 \u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u003a\u0020\u0025\u0064",pageNumber );};if pageNumber > len (_efa .Pages ){_b .Log .Debug ("\u0050\u0061\u0067\u0065 n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0064\u002e\u0020%\u0073",pageNumber ,_c .Stack ());return nil ,_d .Error (_aeag ,"\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065n\u0074\u0020\u002d\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};_dcd ,_bggd :=_efa .Pages [pageNumber ];if !_bggd {_b .Log .Debug ("\u0050\u0061\u0067\u0065 n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0064\u002e\u0020%\u0073",pageNumber ,_c .Stack ());return nil ,_d .Errorf (_aeag ,"\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065n\u0074\u0020\u002d\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};return _dcd ,nil ;};func (_cdbe *Page )fitsPage (_cabg *_ge .PageInformationSegment ,_gacc *_gf .Bitmap )bool {return _cdbe .countRegions ()==1&&_cabg .DefaultPixelValue ()==0&&_cabg .PageBMWidth ==_gacc .Width &&_cabg .PageBMHeight ==_gacc .Height ;};func (_cbb *Page )AddEndOfPageSegment (){_dee :=&_ge .Header {Type :_ge .TEndOfPage ,PageAssociation :_cbb .PageNumber };_cbb .Segments =append (_cbb .Segments ,_dee );};func (_aac *Page )Encode (w _gc .BinaryWriter )(_adc int ,_bff error ){const _gcea ="P\u0061\u0067\u0065\u002e\u0045\u006e\u0063\u006f\u0064\u0065";var _bfg int ;for _ ,_dfg :=range _aac .Segments {if _bfg ,_bff =_dfg .Encode (w );_bff !=nil {return _adc ,_d .Wrap (_bff ,_gcea ,"");};_adc +=_bfg ;};return _adc ,nil ;};func (_dca *Page )GetSegment (number int )(*_ge .Header ,error ){const _dcdg ="\u0050a\u0067e\u002e\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074";for _ ,_egea :=range _dca .Segments {if _egea .SegmentNumber ==uint32 (number ){return _egea ,nil ;};};_cbdb :=make ([]uint32 ,len (_dca .Segments ));for _gded ,_cgce :=range _dca .Segments {_cbdb [_gded ]=_cgce .SegmentNumber ;};return nil ,_d .Errorf (_dcdg ,"\u0073e\u0067\u006d\u0065n\u0074\u0020\u0077i\u0074h \u006e\u0075\u006d\u0062\u0065\u0072\u003a \u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0070\u0061\u0067\u0065\u003a\u0020'%\u0064'\u002e\u0020\u004b\u006e\u006f\u0077n\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u003a \u0025\u0076",number ,_dca .PageNumber ,_cbdb );};func (_gefb *Page )lastSegmentNumber ()(_eag uint32 ,_agc error ){const _fdg ="\u006c\u0061\u0073\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";if len (_gefb .Segments )==0{return _eag ,_d .Errorf (_fdg ,"\u006e\u006f\u0020se\u0067\u006d\u0065\u006e\u0074\u0073\u0020\u0066\u006fu\u006ed\u0020i\u006e \u0074\u0068\u0065\u0020\u0070\u0061\u0067\u0065\u0020\u0027\u0025\u0064\u0027",_gefb .PageNumber );};return _gefb .Segments [len (_gefb .Segments )-1].SegmentNumber ,nil ;};func (_abgc *Document )encodeEOFHeader (_ec _gc .BinaryWriter )(_gead int ,_dfb error ){_caa :=&_ge .Header {SegmentNumber :_abgc .nextSegmentNumber (),Type :_ge .TEndOfFile };if _gead ,_dfb =_caa .Encode (_ec );_dfb !=nil {return 0,_d .Wrap (_dfb ,"\u0065n\u0063o\u0064\u0065\u0045\u004f\u0046\u0048\u0065\u0061\u0064\u0065\u0072","");};return _gead ,nil ;};func (_bafe *Page )clearSegmentData (){for _eac :=range _bafe .Segments {_bafe .Segments [_eac ].CleanSegmentData ();};};func (_abg *Document )Encode ()(_abc []byte ,_ag error ){const _befb ="\u0044o\u0063u\u006d\u0065\u006e\u0074\u002e\u0045\u006e\u0063\u006f\u0064\u0065";var _ccec ,_bec int ;if _abg .FullHeaders {if _ccec ,_ag =_abg .encodeFileHeader (_abg ._df );_ag !=nil {return nil ,_d .Wrap (_ag ,_befb ,"");};};var (_gff bool ;_gaf *_ge .Header ;_bb *Page ;);if _ag =_abg .completeClassifiedPages ();_ag !=nil {return nil ,_d .Wrap (_ag ,_befb ,"");};if _ag =_abg .produceClassifiedPages ();_ag !=nil {return nil ,_d .Wrap (_ag ,_befb ,"");};if _abg .GlobalSegments !=nil {for _ ,_gaf =range _abg .GlobalSegments .Segments {if _ag =_abg .encodeSegment (_gaf ,&_ccec );_ag !=nil {return nil ,_d .Wrap (_ag ,_befb ,"");};};};for _eebg :=1;_eebg <=int (_abg .NumberOfPages );_eebg ++{if _bb ,_gff =_abg .Pages [_eebg ];!_gff {return nil ,_d .Errorf (_befb ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_eebg );};for _ ,_gaf =range _bb .Segments {if _ag =_abg .encodeSegment (_gaf ,&_ccec );_ag !=nil {return nil ,_d .Wrap (_ag ,_befb ,"");};};};if _abg .FullHeaders {if _bec ,_ag =_abg .encodeEOFHeader (_abg ._df );_ag !=nil {return nil ,_d .Wrap (_ag ,_befb ,"");};_ccec +=_bec ;};_abc =_abg ._df .Data ();if len (_abc )!=_ccec {_b .Log .Debug ("\u0042\u0079\u0074\u0065\u0073 \u0077\u0072\u0069\u0074\u0074\u0065\u006e \u0028\u006e\u0029\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0065\u0071\u0075\u0061\u006c\u0020\u0074\u006f\u0020\u0074\u0068\u0065\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006f\u0066\u0020t\u0068\u0065\u0020\u0064\u0061\u0074\u0061\u0020\u0065\u006e\u0063\u006fd\u0065\u0064\u003a\u0020\u0027\u0025d\u0027",_ccec ,len (_abc ));};return _abc ,nil ;};