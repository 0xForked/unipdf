//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package document ;import (_d "encoding/binary";_a "fmt";_cd "github.com/unidoc/unipdf/v3/common";_e "github.com/unidoc/unipdf/v3/internal/bitwise";_db "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_eg "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";_ee "github.com/unidoc/unipdf/v3/internal/jbig2/document/segments";_cc "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/classer";_ac "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_ae "io";_b "math";_c "runtime/debug";);func (_ddf *Page )AddEndOfPageSegment (){_ade :=&_ee .Header {Type :_ee .TEndOfPage ,PageAssociation :_ddf .PageNumber };_ddf .Segments =append (_ddf .Segments ,_ade );};type Document struct{Pages map[int ]*Page ;NumberOfPagesUnknown bool ;NumberOfPages uint32 ;GBUseExtTemplate bool ;InputStream _e .StreamReader ;GlobalSegments *Globals ;OrganizationType _ee .OrganizationType ;Classer *_cc .Classer ;XRes ,YRes int ;FullHeaders bool ;CurrentSegmentNumber uint32 ;AverageTemplates *_eg .Bitmaps ;BaseIndexes []int ;Refinement bool ;RefineLevel int ;_ef uint8 ;_cdc *_e .BufferedWriter ;EncodeGlobals bool ;_efd int ;_f map[int ][]int ;_dd map[int ][]int ;_fg []int ;_fa map[int ]int ;};func (_dc *Document )completeClassifiedPages ()(_ec error ){const _ce ="\u0063\u006f\u006dpl\u0065\u0074\u0065\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0050\u0061\u0067\u0065\u0073";if _dc .Classer ==nil {return nil ;};_dc ._fg =make ([]int ,_dc .Classer .UndilatedTemplates .Size ());for _fgc :=0;_fgc < _dc .Classer .ClassIDs .Size ();_fgc ++{_ba ,_de :=_dc .Classer .ClassIDs .Get (_fgc );if _de !=nil {return _ac .Wrapf (_de ,_ce ,"\u0063\u006c\u0061\u0073s \u0077\u0069\u0074\u0068\u0020\u0069\u0064\u003a\u0020\u0027\u0025\u0064\u0027",_fgc );};_dc ._fg [_ba ]++;};var _ad []int ;for _ab :=0;_ab < _dc .Classer .UndilatedTemplates .Size ();_ab ++{if _dc .NumberOfPages ==1||_dc ._fg [_ab ]> 1{_ad =append (_ad ,_ab );};};var (_gf *Page ;_gcc bool ;);for _gfc ,_be :=range *_dc .Classer .ComponentPageNumbers {if _gf ,_gcc =_dc .Pages [_be ];!_gcc {return _ac .Errorf (_ce ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_gfc );};if _gf .EncodingMethod ==GenericEM {_cd .Log .Error ("\u0047\u0065\u006e\u0065\u0072\u0069c\u0020\u0070\u0061g\u0065\u0020\u0077i\u0074\u0068\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u003a \u0027\u0025\u0064\u0027\u0020ma\u0070\u0070\u0065\u0064\u0020\u0061\u0073\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0020\u0070\u0061\u0067\u0065",_gfc );continue ;};_dc ._dd [_be ]=append (_dc ._dd [_be ],_gfc );_daa ,_ccd :=_dc .Classer .ClassIDs .Get (_gfc );if _ccd !=nil {return _ac .Wrapf (_ccd ,_ce ,"\u006e\u006f\u0020\u0073uc\u0068\u0020\u0063\u006c\u0061\u0073\u0073\u0049\u0044\u003a\u0020\u0025\u0064",_gfc );};if _dc ._fg [_daa ]==1&&_dc .NumberOfPages !=1{_dbe :=append (_dc ._f [_be ],_daa );_dc ._f [_be ]=_dbe ;};};if _ec =_dc .Classer .ComputeLLCorners ();_ec !=nil {return _ac .Wrap (_ec ,_ce ,"");};if _ ,_ec =_dc .addSymbolDictionary (0,_dc .Classer .UndilatedTemplates ,_ad ,_dc ._fa ,false );_ec !=nil {return _ac .Wrap (_ec ,_ce ,"");};return nil ;};func (_dbdb *Page )GetResolutionY ()(int ,error ){return _dbdb .getResolutionY ()};func (_gabf *Page )AddPageInformationSegment (){_bdc :=&_ee .PageInformationSegment {PageBMWidth :_gabf .FinalWidth ,PageBMHeight :_gabf .FinalHeight ,ResolutionX :_gabf .ResolutionX ,ResolutionY :_gabf .ResolutionY ,IsLossless :_gabf .IsLossless };_dbde :=&_ee .Header {PageAssociation :_gabf .PageNumber ,SegmentDataLength :uint64 (_bdc .Size ()),SegmentData :_bdc ,Type :_ee .TPageInformation };_gabf .Segments =append (_gabf .Segments ,_dbde );};func (_fbd *Page )getResolutionY ()(int ,error ){const _bafd ="\u0067\u0065\u0074\u0052\u0065\u0073\u006f\u006c\u0075t\u0069\u006f\u006e\u0059";if _fbd .ResolutionY !=0{return _fbd .ResolutionY ,nil ;};_ace :=_fbd .getPageInformationSegment ();if _ace ==nil {return 0,_ac .Error (_bafd ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_afe ,_caa :=_ace .GetSegmentData ();if _caa !=nil {return 0,_ac .Wrap (_caa ,_bafd ,"");};_eacg ,_fcf :=_afe .(*_ee .PageInformationSegment );if !_fcf {return 0,_ac .Errorf (_bafd ,"\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0066o\u0072\u006d\u0061ti\u006f\u006e\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0069\u0073\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0074\u0079\u0070\u0065\u003a\u0027%\u0054\u0027",_afe );};_fbd .ResolutionY =_eacg .ResolutionY ;return _fbd .ResolutionY ,nil ;};func (_bfc *Document )nextSegmentNumber ()uint32 {_bde :=_bfc .CurrentSegmentNumber ;_bfc .CurrentSegmentNumber ++;return _bde ;};func (_bag *Page )createNormalPage (_aae *_ee .PageInformationSegment )error {const _bfe ="\u0063\u0072e\u0061\u0074\u0065N\u006f\u0072\u006d\u0061\u006c\u0050\u0061\u0067\u0065";_bag .Bitmap =_eg .New (_aae .PageBMWidth ,_aae .PageBMHeight );if _aae .DefaultPixelValue ()!=0{_bag .Bitmap .SetDefaultPixel ();};for _ ,_gbcc :=range _bag .Segments {switch _gbcc .Type {case 6,7,22,23,38,39,42,43:_cd .Log .Trace ("\u0047\u0065\u0074\u0074in\u0067\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0064",_gbcc .SegmentNumber );_acf ,_fdg :=_gbcc .GetSegmentData ();if _fdg !=nil {return _fdg ;};_aeca ,_bfg :=_acf .(_ee .Regioner );if !_bfg {_cd .Log .Debug ("\u0053\u0065g\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069on\u0065\u0072",_acf );return _ac .Errorf (_bfe ,"i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062i\u0067\u0032\u0020\u0073\u0065\u0067\u006den\u0074\u0020\u0074\u0079p\u0065\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061 R\u0065\u0067i\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_acf );};_dgce ,_fdg :=_aeca .GetRegionBitmap ();if _fdg !=nil {return _ac .Wrap (_fdg ,_bfe ,"");};if _bag .fitsPage (_aae ,_dgce ){_bag .Bitmap =_dgce ;}else {_ecfc :=_aeca .GetRegionInfo ();_gbca :=_bag .getCombinationOperator (_aae ,_ecfc .CombinaionOperator );_fdg =_eg .Blit (_dgce ,_bag .Bitmap ,int (_ecfc .XLocation ),int (_ecfc .YLocation ),_gbca );if _fdg !=nil {return _ac .Wrap (_fdg ,_bfe ,"");};};};};return nil ;};func (_eedd *Page )getHeight ()(int ,error ){const _fdgd ="\u0067e\u0074\u0048\u0065\u0069\u0067\u0068t";if _eedd .FinalHeight !=0{return _eedd .FinalHeight ,nil ;};_gdff :=_eedd .getPageInformationSegment ();if _gdff ==nil {return 0,_ac .Error (_fdgd ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_dedg ,_cgbd :=_gdff .GetSegmentData ();if _cgbd !=nil {return 0,_ac .Wrap (_cgbd ,_fdgd ,"");};_gfe ,_gca :=_dedg .(*_ee .PageInformationSegment );if !_gca {return 0,_ac .Errorf (_fdgd ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_dedg );};if _gfe .PageBMHeight ==_b .MaxInt32 {_ ,_cgbd =_eedd .GetBitmap ();if _cgbd !=nil {return 0,_ac .Wrap (_cgbd ,_fdgd ,"");};}else {_eedd .FinalHeight =_gfe .PageBMHeight ;};return _eedd .FinalHeight ,nil ;};var _ge =[]byte {0x97,0x4A,0x42,0x32,0x0D,0x0A,0x1A,0x0A};func (_cbe *Page )getCombinationOperator (_afaf *_ee .PageInformationSegment ,_acg _eg .CombinationOperator )_eg .CombinationOperator {if _afaf .CombinationOperatorOverrideAllowed (){return _acg ;};return _afaf .CombinationOperator ();};func (_eeaf *Page )AddGenericRegion (bm *_eg .Bitmap ,xloc ,yloc ,template int ,tp _ee .Type ,duplicateLineRemoval bool )error {const _eafd ="P\u0061\u0067\u0065\u002eAd\u0064G\u0065\u006e\u0065\u0072\u0069c\u0052\u0065\u0067\u0069\u006f\u006e";_dac :=&_ee .GenericRegion {};if _add :=_dac .InitEncode (bm ,xloc ,yloc ,template ,duplicateLineRemoval );_add !=nil {return _ac .Wrap (_add ,_eafd ,"");};_egd :=&_ee .Header {Type :_ee .TImmediateGenericRegion ,PageAssociation :_eeaf .PageNumber ,SegmentData :_dac };_eeaf .Segments =append (_eeaf .Segments ,_egd );return nil ;};func (_deb *Page )getResolutionX ()(int ,error ){const _addc ="\u0067\u0065\u0074\u0052\u0065\u0073\u006f\u006c\u0075t\u0069\u006f\u006e\u0058";if _deb .ResolutionX !=0{return _deb .ResolutionX ,nil ;};_cgfa :=_deb .getPageInformationSegment ();if _cgfa ==nil {return 0,_ac .Error (_addc ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_caeb ,_bgeb :=_cgfa .GetSegmentData ();if _bgeb !=nil {return 0,_ac .Wrap (_bgeb ,_addc ,"");};_bee ,_gaf :=_caeb .(*_ee .PageInformationSegment );if !_gaf {return 0,_ac .Errorf (_addc ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_caeb );};_deb .ResolutionX =_bee .ResolutionX ;return _deb .ResolutionX ,nil ;};func (_ddc *Document )addSymbolDictionary (_fb int ,_ed *_eg .Bitmaps ,_cba []int ,_bb map[int ]int ,_fc bool )(*_ee .Header ,error ){const _cg ="\u0061\u0064\u0064\u0053ym\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079";_ga :=&_ee .SymbolDictionary {};if _eec :=_ga .InitEncode (_ed ,_cba ,_bb ,_fc );_eec !=nil {return nil ,_eec ;};_ebd :=&_ee .Header {Type :_ee .TSymbolDictionary ,PageAssociation :_fb ,SegmentData :_ga };if _fb ==0{if _ddc .GlobalSegments ==nil {_ddc .GlobalSegments =&Globals {};};_ddc .GlobalSegments .AddSegment (_ebd );return _ebd ,nil ;};_gbc ,_cgf :=_ddc .Pages [_fb ];if !_cgf {return nil ,_ac .Errorf (_cg ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_fb );};var (_bgf int ;_bbg *_ee .Header ;);for _bgf ,_bbg =range _gbc .Segments {if _bbg .Type ==_ee .TPageInformation {break ;};};_bgf ++;_gbc .Segments =append (_gbc .Segments ,nil );copy (_gbc .Segments [_bgf +1:],_gbc .Segments [_bgf :]);_gbc .Segments [_bgf ]=_ebd ;return _ebd ,nil ;};func (_dfd *Document )reachedEOF (_dbea int64 )(bool ,error ){const _dfdf ="\u0072\u0065\u0061\u0063\u0068\u0065\u0064\u0045\u004f\u0046";_ ,_adc :=_dfd .InputStream .Seek (_dbea ,_ae .SeekStart );if _adc !=nil {_cd .Log .Debug ("\u0072\u0065\u0061c\u0068\u0065\u0064\u0045\u004f\u0046\u0020\u002d\u0020\u0064\u002e\u0049\u006e\u0070\u0075\u0074\u0053\u0074\u0072\u0065\u0061\u006d\u002e\u0053\u0065\u0065\u006b\u0020\u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_adc );return false ,_ac .Wrap (_adc ,_dfdf ,"\u0069n\u0070\u0075\u0074\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020s\u0065\u0065\u006b\u0020\u0066\u0061\u0069\u006c\u0065\u0064");};_ ,_adc =_dfd .InputStream .ReadBits (32);if _adc ==_ae .EOF {return true ,nil ;}else if _adc !=nil {return false ,_ac .Wrap (_adc ,_dfdf ,"");};return false ,nil ;};func (_aegc *Page )GetResolutionX ()(int ,error ){return _aegc .getResolutionX ()};func (_dfe *Globals )GetSegment (segmentNumber int )(*_ee .Header ,error ){const _ffa ="\u0047l\u006fb\u0061\u006c\u0073\u002e\u0047e\u0074\u0053e\u0067\u006d\u0065\u006e\u0074";if _dfe ==nil {return nil ,_ac .Error (_ffa ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_dfe .Segments )==0{return nil ,_ac .Error (_ffa ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");};var _dfdd *_ee .Header ;for _ ,_dfdd =range _dfe .Segments {if _dfdd .SegmentNumber ==uint32 (segmentNumber ){break ;};};if _dfdd ==nil {return nil ,_ac .Error (_ffa ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};return _dfdd ,nil ;};func (_bgd *Page )createPage (_ceab *_ee .PageInformationSegment )error {var _dfgc error ;if !_ceab .IsStripe ||_ceab .PageBMHeight !=-1{_dfgc =_bgd .createNormalPage (_ceab );}else {_dfgc =_bgd .createStripedPage (_ceab );};return _dfgc ;};func (_eea *Document )nextPageNumber ()uint32 {_eea .NumberOfPages ++;return _eea .NumberOfPages };func (_eegb *Page )GetBitmap ()(_ccf *_eg .Bitmap ,_dda error ){_cd .Log .Trace (_a .Sprintf ("\u005b\u0050\u0041G\u0045\u005d\u005b\u0023%\u0064\u005d\u0020\u0047\u0065\u0074\u0042i\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e",_eegb .PageNumber ));defer func (){if _dda !=nil {_cd .Log .Trace (_a .Sprintf ("\u005b\u0050\u0041\u0047\u0045\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074B\u0069t\u006d\u0061\u0070\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_eegb .PageNumber ,_dda ));}else {_cd .Log .Trace (_a .Sprintf ("\u005b\u0050\u0041\u0047\u0045\u005d\u005b\u0023\u0025\u0064]\u0020\u0047\u0065\u0074\u0042\u0069\u0074m\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064",_eegb .PageNumber ));};}();if _eegb .Bitmap !=nil {return _eegb .Bitmap ,nil ;};_dda =_eegb .composePageBitmap ();if _dda !=nil {return nil ,_dda ;};return _eegb .Bitmap ,nil ;};func (_ccce *Page )createStripedPage (_gege *_ee .PageInformationSegment )error {const _bfd ="\u0063\u0072\u0065\u0061\u0074\u0065\u0053\u0074\u0072\u0069\u0070\u0065d\u0050\u0061\u0067\u0065";_acc ,_gcg :=_ccce .collectPageStripes ();if _gcg !=nil {return _ac .Wrap (_gcg ,_bfd ,"");};var _dcdb int ;for _ ,_dde :=range _acc {if _abg ,_daf :=_dde .(*_ee .EndOfStripe );_daf {_dcdb =_abg .LineNumber ()+1;}else {_abcg :=_dde .(_ee .Regioner );_bfb :=_abcg .GetRegionInfo ();_gfb :=_ccce .getCombinationOperator (_gege ,_bfb .CombinaionOperator );_aad ,_dcf :=_abcg .GetRegionBitmap ();if _dcf !=nil {return _ac .Wrap (_dcf ,_bfd ,"");};_dcf =_eg .Blit (_aad ,_ccce .Bitmap ,int (_bfb .XLocation ),_dcdb ,_gfb );if _dcf !=nil {return _ac .Wrap (_dcf ,_bfd ,"");};};};return nil ;};const (GenericEM EncodingMethod =iota ;CorrelationEM ;RankHausEM ;);func (_fef *Document )isFileHeaderPresent ()(bool ,error ){_fef .InputStream .Mark ();for _ ,_bbe :=range _ge {_cgg ,_aaf :=_fef .InputStream .ReadByte ();if _aaf !=nil {return false ,_aaf ;};if _bbe !=_cgg {_fef .InputStream .Reset ();return false ,nil ;};};_fef .InputStream .Reset ();return true ,nil ;};func (_eb *Document )AddClassifiedPage (bm *_eg .Bitmap ,method _cc .Method )(_aa error ){const _ag ="\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002e\u0041\u0064d\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064P\u0061\u0067\u0065";if !_eb .FullHeaders &&_eb .NumberOfPages !=0{return _ac .Error (_ag ,"\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0070\u0061\u0067\u0065\u002e\u0020\u0046\u0069\u006c\u0065\u004d\u006f\u0064\u0065\u0020\u0064\u0069\u0073\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0064\u0064i\u006e\u0067\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e \u006f\u006e\u0065\u0020\u0070\u0061g\u0065");};if _eb .Classer ==nil {if _eb .Classer ,_aa =_cc .Init (_cc .DefaultSettings ());_aa !=nil {return _ac .Wrap (_aa ,_ag ,"");};};_dag :=int (_eb .nextPageNumber ());_bg :=&Page {Segments :[]*_ee .Header {},Bitmap :bm ,Document :_eb ,FinalHeight :bm .Height ,FinalWidth :bm .Width ,PageNumber :_dag };_eb .Pages [_dag ]=_bg ;switch method {case _cc .RankHaus :_bg .EncodingMethod =RankHausEM ;case _cc .Correlation :_bg .EncodingMethod =CorrelationEM ;};_bg .AddPageInformationSegment ();if _aa =_eb .Classer .AddPage (bm ,_dag ,method );_aa !=nil {return _ac .Wrap (_aa ,_ag ,"");};if _eb .FullHeaders {_bg .AddEndOfPageSegment ();};return nil ;};func (_ecf *Document )completeSymbols ()(_aec error ){const _gcdf ="\u0063o\u006dp\u006c\u0065\u0074\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";if _ecf .Classer ==nil {return nil ;};if _ecf .Classer .UndilatedTemplates ==nil {return _ac .Error (_gcdf ,"\u006e\u006f t\u0065\u006d\u0070l\u0061\u0074\u0065\u0073 de\u0066in\u0065\u0064\u0020\u0066\u006f\u0072\u0020th\u0065\u0020\u0063\u006c\u0061\u0073\u0073e\u0072");};_edc :=len (_ecf .Pages )==1;_bge :=make ([]int ,_ecf .Classer .UndilatedTemplates .Size ());var _eac int ;for _dgc :=0;_dgc < _ecf .Classer .ClassIDs .Size ();_dgc ++{_eac ,_aec =_ecf .Classer .ClassIDs .Get (_dgc );if _aec !=nil {return _ac .Wrap (_aec ,_gcdf ,"\u0063\u006c\u0061\u0073\u0073\u0020\u0049\u0044\u0027\u0073");};_bge [_eac ]++;};var _dbc []int ;for _acb :=0;_acb < _ecf .Classer .UndilatedTemplates .Size ();_acb ++{if _bge [_acb ]==0{return _ac .Error (_gcdf ,"\u006eo\u0020\u0073y\u006d\u0062\u006f\u006cs\u0020\u0069\u006es\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u0066\u006fun\u0064\u0020\u0066o\u0072\u0020g\u0069\u0076\u0065\u006e\u0020\u0063l\u0061\u0073s\u003f\u0020");};if _bge [_acb ]> 1||_edc {_dbc =append (_dbc ,_acb );};};_ecf ._efd =len (_dbc );var _abd ,_ebg int ;for _bf :=0;_bf < _ecf .Classer .ComponentPageNumbers .Size ();_bf ++{_abd ,_aec =_ecf .Classer .ComponentPageNumbers .Get (_bf );if _aec !=nil {return _ac .Wrapf (_aec ,_gcdf ,"p\u0061\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027 \u006e\u006f\u0074\u0020\u0066\u006f\u0075nd\u0020\u0069\u006e\u0020t\u0068\u0065\u0020\u0063\u006c\u0061\u0073\u0073\u0065r \u0070\u0061g\u0065\u006e\u0075\u006d\u0062\u0065\u0072\u0073",_bf );};_ebg ,_aec =_ecf .Classer .ClassIDs .Get (_bf );if _aec !=nil {return _ac .Wrapf (_aec ,_gcdf ,"\u0063\u0061\u006e\u0027\u0074\u0020\u0067e\u0074\u0020\u0073y\u006d\u0062\u006f\u006c \u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0027\u0025\u0064\u0027\u0020\u0066\u0072\u006f\u006d\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072",_abd );};if _bge [_ebg ]==1&&!_edc {_ecf ._f [_abd ]=append (_ecf ._f [_abd ],_ebg );};};if _aec =_ecf .Classer .ComputeLLCorners ();_aec !=nil {return _ac .Wrap (_aec ,_gcdf ,"");};return nil ;};func (_ecfg *Page )Encode (w _e .BinaryWriter )(_ecg int ,_efa error ){const _aab ="P\u0061\u0067\u0065\u002e\u0045\u006e\u0063\u006f\u0064\u0065";var _cae int ;for _ ,_ggc :=range _ecfg .Segments {if _cae ,_efa =_ggc .Encode (w );_efa !=nil {return _ecg ,_ac .Wrap (_efa ,_aab ,"");};_ecg +=_cae ;};return _ecg ,nil ;};func (_efc *Page )getWidth ()(int ,error ){const _dbf ="\u0067\u0065\u0074\u0057\u0069\u0064\u0074\u0068";if _efc .FinalWidth !=0{return _efc .FinalWidth ,nil ;};_fae :=_efc .getPageInformationSegment ();if _fae ==nil {return 0,_ac .Error (_dbf ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_edg ,_cbb :=_fae .GetSegmentData ();if _cbb !=nil {return 0,_ac .Wrap (_cbb ,_dbf ,"");};_ddd ,_ggce :=_edg .(*_ee .PageInformationSegment );if !_ggce {return 0,_ac .Errorf (_dbf ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_edg );};_efc .FinalWidth =_ddd .PageBMWidth ;return _efc .FinalWidth ,nil ;};func (_ceb *Document )encodeFileHeader (_dfa _e .BinaryWriter )(_dcd int ,_bdb error ){const _aeb ="\u0065\u006ec\u006f\u0064\u0065F\u0069\u006c\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_dcd ,_bdb =_dfa .Write (_ge );if _bdb !=nil {return _dcd ,_ac .Wrap (_bdb ,_aeb ,"\u0069\u0064");};if _bdb =_dfa .WriteByte (0x01);_bdb !=nil {return _dcd ,_ac .Wrap (_bdb ,_aeb ,"\u0066\u006c\u0061g\u0073");};_dcd ++;_abc :=make ([]byte ,4);_d .BigEndian .PutUint32 (_abc ,_ceb .NumberOfPages );_gfcf ,_bdb :=_dfa .Write (_abc );if _bdb !=nil {return _gfcf ,_ac .Wrap (_bdb ,_aeb ,"p\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_dcd +=_gfcf ;return _dcd ,nil ;};func _fgb (_dbd int )int {_egf :=0;_dfg :=(_dbd &(_dbd -1))==0;_dbd >>=1;for ;_dbd !=0;_dbd >>=1{_egf ++;};if _dfg {return _egf ;};return _egf +1;};func _gdga (_cgfg _e .StreamReader ,_dea *Globals )(*Document ,error ){_dge :=&Document {Pages :make (map[int ]*Page ),InputStream :_cgfg ,OrganizationType :_ee .OSequential ,NumberOfPagesUnknown :true ,GlobalSegments :_dea ,_ef :9};if _dge .GlobalSegments ==nil {_dge .GlobalSegments =&Globals {};};if _fda :=_dge .mapData ();_fda !=nil {return nil ,_fda ;};return _dge ,nil ;};func (_cga *Page )fitsPage (_cfag *_ee .PageInformationSegment ,_cdd *_eg .Bitmap )bool {return _cga .countRegions ()==1&&_cfag .DefaultPixelValue ()==0&&_cfag .PageBMWidth ==_cdd .Width &&_cfag .PageBMHeight ==_cdd .Height ;};func (_fea *Page )addTextRegionSegment (_ced []*_ee .Header ,_aag ,_cfa map[int ]int ,_ega []int ,_ffe *_eg .Points ,_ffc *_eg .Bitmaps ,_ded *_db .IntSlice ,_geg *_eg .Boxes ,_bcc ,_bdg int ){_cggf :=&_ee .TextRegion {NumberOfSymbols :uint32 (_bdg )};_cggf .InitEncode (_aag ,_cfa ,_ega ,_ffe ,_ffc ,_ded ,_geg ,_fea .FinalWidth ,_fea .FinalHeight ,_bcc );_ebe :=&_ee .Header {RTSegments :_ced ,SegmentData :_cggf ,PageAssociation :_fea .PageNumber ,Type :_ee .TImmediateTextRegion };_egc :=_ee .TPageInformation ;if _cfa !=nil {_egc =_ee .TSymbolDictionary ;};var _fffc int ;for ;_fffc < len (_fea .Segments );_fffc ++{if _fea .Segments [_fffc ].Type ==_egc {_fffc ++;break ;};};_fea .Segments =append (_fea .Segments ,nil );copy (_fea .Segments [_fffc +1:],_fea .Segments [_fffc :]);_fea .Segments [_fffc ]=_ebe ;};type Page struct{Segments []*_ee .Header ;PageNumber int ;Bitmap *_eg .Bitmap ;FinalHeight int ;FinalWidth int ;ResolutionX int ;ResolutionY int ;IsLossless bool ;Document *Document ;FirstSegmentNumber int ;EncodingMethod EncodingMethod ;};func (_fff *Globals )GetSymbolDictionary ()(*_ee .Header ,error ){const _bff ="G\u006c\u006f\u0062\u0061\u006c\u0073.\u0047\u0065\u0074\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079";if _fff ==nil {return nil ,_ac .Error (_bff ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_fff .Segments )==0{return nil ,_ac .Error (_bff ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");};for _ ,_cbca :=range _fff .Segments {if _cbca .Type ==_ee .TSymbolDictionary {return _cbca ,nil ;};};return nil ,_ac .Error (_bff ,"\u0067\u006c\u006fba\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020d\u0069c\u0074i\u006fn\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};type EncodingMethod int ;func (_bcd *Document )GetNumberOfPages ()(uint32 ,error ){if _bcd .NumberOfPagesUnknown ||_bcd .NumberOfPages ==0{if len (_bcd .Pages )==0{if _bgc :=_bcd .mapData ();_bgc !=nil {return 0,_ac .Wrap (_bgc ,"\u0044o\u0063\u0075\u006d\u0065n\u0074\u002e\u0047\u0065\u0074N\u0075m\u0062e\u0072\u004f\u0066\u0050\u0061\u0067\u0065s","");};};return uint32 (len (_bcd .Pages )),nil ;};return _bcd .NumberOfPages ,nil ;};func (_cac *Page )collectPageStripes ()(_ecc []_ee .Segmenter ,_fbf error ){const _fcc ="\u0063o\u006cl\u0065\u0063\u0074\u0050\u0061g\u0065\u0053t\u0072\u0069\u0070\u0065\u0073";var _bcee _ee .Segmenter ;for _ ,_dfab :=range _cac .Segments {switch _dfab .Type {case 6,7,22,23,38,39,42,43:_bcee ,_fbf =_dfab .GetSegmentData ();if _fbf !=nil {return nil ,_ac .Wrap (_fbf ,_fcc ,"");};_ecc =append (_ecc ,_bcee );case 50:_bcee ,_fbf =_dfab .GetSegmentData ();if _fbf !=nil {return nil ,_fbf ;};_baf ,_bffd :=_bcee .(*_ee .EndOfStripe );if !_bffd {return nil ,_ac .Errorf (_fcc ,"\u0045\u006e\u0064\u004f\u0066\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u006f\u0066\u0020\u0076\u0061l\u0069\u0064\u0020\u0074\u0079p\u0065\u003a \u0027\u0025\u0054\u0027",_bcee );};_ecc =append (_ecc ,_baf );_cac .FinalHeight =_baf .LineNumber ();};};return _ecc ,nil ;};func (_bbc *Document )determineRandomDataOffsets (_eeg []*_ee .Header ,_eecd uint64 ){if _bbc .OrganizationType !=_ee .ORandom {return ;};for _ ,_dga :=range _eeg {_dga .SegmentDataStartOffset =_eecd ;_eecd +=_dga .SegmentDataLength ;};};func (_bd *Document )produceClassifiedPage (_geb *Page ,_adb *_ee .Header )(_cag error ){const _bec ="p\u0072\u006f\u0064\u0075ce\u0043l\u0061\u0073\u0073\u0069\u0066i\u0065\u0064\u0050\u0061\u0067\u0065";var _ddb map[int ]int ;_cdb :=_bd ._efd ;_fd :=[]*_ee .Header {_adb };if len (_bd ._f [_geb .PageNumber ])> 0{_ddb =map[int ]int {};_cb ,_cf :=_bd .addSymbolDictionary (_geb .PageNumber ,_bd .Classer .UndilatedTemplates ,_bd ._f [_geb .PageNumber ],_ddb ,false );if _cf !=nil {return _ac .Wrap (_cf ,_bec ,"");};_fd =append (_fd ,_cb );_cdb +=len (_bd ._f [_geb .PageNumber ]);};_dg :=_bd ._dd [_geb .PageNumber ];_cd .Log .Debug ("P\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020c\u006f\u006d\u0070\u0073: \u0025\u0076",_geb .PageNumber ,_dg );_geb .addTextRegionSegment (_fd ,_bd ._fa ,_ddb ,_bd ._dd [_geb .PageNumber ],_bd .Classer .PtaLL ,_bd .Classer .UndilatedTemplates ,_bd .Classer .ClassIDs ,nil ,_fgb (_cdb ),len (_bd ._dd [_geb .PageNumber ]));return nil ;};func (_bae *Page )GetSegment (number int )(*_ee .Header ,error ){const _fgcb ="\u0050a\u0067e\u002e\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074";for _ ,_ccb :=range _bae .Segments {if _ccb .SegmentNumber ==uint32 (number ){return _ccb ,nil ;};};_dcc :=make ([]uint32 ,len (_bae .Segments ));for _dcce ,_dacd :=range _bae .Segments {_dcc [_dcce ]=_dacd .SegmentNumber ;};return nil ,_ac .Errorf (_fgcb ,"\u0073e\u0067\u006d\u0065n\u0074\u0020\u0077i\u0074h \u006e\u0075\u006d\u0062\u0065\u0072\u003a \u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0070\u0061\u0067\u0065\u003a\u0020'%\u0064'\u002e\u0020\u004b\u006e\u006f\u0077n\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u003a \u0025\u0076",number ,_bae .PageNumber ,_dcc );};func DecodeDocument (input _e .StreamReader ,globals *Globals )(*Document ,error ){return _gdga (input ,globals );};func (_aff *Page )countRegions ()int {var _gfca int ;for _ ,_cad :=range _aff .Segments {switch _cad .Type {case 6,7,22,23,38,39,42,43:_gfca ++;};};return _gfca ;};func (_abf *Globals )AddSegment (segment *_ee .Header ){_abf .Segments =append (_abf .Segments ,segment )};func (_ffae *Page )getPageInformationSegment ()*_ee .Header {for _ ,_bad :=range _ffae .Segments {if _bad .Type ==_ee .TPageInformation {return _bad ;};};_cd .Log .Debug ("\u0050\u0061\u0067\u0065\u0020\u0069\u006e\u0066o\u0072\u006d\u0061ti\u006f\u006e\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0066o\u0072\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0073\u002e",_ffae );return nil ;};func (_gdf *Document )GetPage (pageNumber int )(_ee .Pager ,error ){const _cea ="\u0044\u006fc\u0075\u006d\u0065n\u0074\u002e\u0047\u0065\u0074\u0050\u0061\u0067\u0065";if pageNumber < 0{_cd .Log .Debug ("\u004a\u0042\u0049\u00472\u0020\u0050\u0061\u0067\u0065\u0020\u002d\u0020\u0047e\u0074\u0050\u0061\u0067\u0065\u003a\u0020\u0025\u0064\u002e\u0020\u0050\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062e\u0020\u006c\u006f\u0077\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0030\u002e\u0020\u0025\u0073",pageNumber ,_c .Stack ());return nil ,_ac .Errorf (_cea ,"\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032\u0020d\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020\u002d\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064 \u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u003a\u0020\u0025\u0064",pageNumber );};if pageNumber > len (_gdf .Pages ){_cd .Log .Debug ("\u0050\u0061\u0067\u0065 n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0064\u002e\u0020%\u0073",pageNumber ,_c .Stack ());return nil ,_ac .Error (_cea ,"\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065n\u0074\u0020\u002d\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};_dgd ,_dffd :=_gdf .Pages [pageNumber ];if !_dffd {_cd .Log .Debug ("\u0050\u0061\u0067\u0065 n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0064\u002e\u0020%\u0073",pageNumber ,_c .Stack ());return nil ,_ac .Errorf (_cea ,"\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065n\u0074\u0020\u002d\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};return _dgd ,nil ;};func (_gd *Document )Encode ()(_fe []byte ,_adbf error ){const _eaf ="\u0044o\u0063u\u006d\u0065\u006e\u0074\u002e\u0045\u006e\u0063\u006f\u0064\u0065";var _becg ,_af int ;if _gd .FullHeaders {if _becg ,_adbf =_gd .encodeFileHeader (_gd ._cdc );_adbf !=nil {return nil ,_ac .Wrap (_adbf ,_eaf ,"");};};var (_aba bool ;_fge *_ee .Header ;_fdf *Page ;);if _adbf =_gd .completeClassifiedPages ();_adbf !=nil {return nil ,_ac .Wrap (_adbf ,_eaf ,"");};if _adbf =_gd .produceClassifiedPages ();_adbf !=nil {return nil ,_ac .Wrap (_adbf ,_eaf ,"");};if _gd .GlobalSegments !=nil {for _ ,_fge =range _gd .GlobalSegments .Segments {if _adbf =_gd .encodeSegment (_fge ,&_becg );_adbf !=nil {return nil ,_ac .Wrap (_adbf ,_eaf ,"");};};};for _dgb :=1;_dgb <=int (_gd .NumberOfPages );_dgb ++{if _fdf ,_aba =_gd .Pages [_dgb ];!_aba {return nil ,_ac .Errorf (_eaf ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_dgb );};for _ ,_fge =range _fdf .Segments {if _adbf =_gd .encodeSegment (_fge ,&_becg );_adbf !=nil {return nil ,_ac .Wrap (_adbf ,_eaf ,"");};};};if _gd .FullHeaders {if _af ,_adbf =_gd .encodeEOFHeader (_gd ._cdc );_adbf !=nil {return nil ,_ac .Wrap (_adbf ,_eaf ,"");};_becg +=_af ;};_fe =_gd ._cdc .Data ();if len (_fe )!=_becg {_cd .Log .Debug ("\u0042\u0079\u0074\u0065\u0073 \u0077\u0072\u0069\u0074\u0074\u0065\u006e \u0028\u006e\u0029\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0065\u0071\u0075\u0061\u006c\u0020\u0074\u006f\u0020\u0074\u0068\u0065\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006f\u0066\u0020t\u0068\u0065\u0020\u0064\u0061\u0074\u0061\u0020\u0065\u006e\u0063\u006fd\u0065\u0064\u003a\u0020\u0027\u0025d\u0027",_becg ,len (_fe ));};return _fe ,nil ;};func (_df *Document )produceClassifiedPages ()(_ea error ){const _dcg ="\u0070\u0072\u006f\u0064uc\u0065\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0050\u0061\u0067e\u0073";if _df .Classer ==nil {return nil ;};var (_dff *Page ;_gb bool ;_ca *_ee .Header ;);for _ccg :=1;_ccg <=int (_df .NumberOfPages );_ccg ++{if _dff ,_gb =_df .Pages [_ccg ];!_gb {return _ac .Errorf (_dcg ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_ccg );};if _dff .EncodingMethod ==GenericEM {continue ;};if _ca ==nil {if _ca ,_ea =_df .GlobalSegments .GetSymbolDictionary ();_ea !=nil {return _ac .Wrap (_ea ,_dcg ,"");};};if _ea =_df .produceClassifiedPage (_dff ,_ca );_ea !=nil {return _ac .Wrapf (_ea ,_dcg ,"\u0070\u0061\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027",_ccg );};};return nil ;};func (_bce *Document )mapData ()error {const _cbd ="\u006da\u0070\u0044\u0061\u0074\u0061";var (_dee []*_ee .Header ;_cee int64 ;_cca _ee .Type ;);_bbeb ,_gda :=_bce .isFileHeaderPresent ();if _gda !=nil {return _ac .Wrap (_gda ,_cbd ,"");};if _bbeb {if _gda =_bce .parseFileHeader ();_gda !=nil {return _ac .Wrap (_gda ,_cbd ,"");};_cee +=int64 (_bce ._ef );_bce .FullHeaders =true ;};var (_dcde *Page ;_cbc bool ;);for _cca !=51&&!_cbc {_eee ,_gab :=_ee .NewHeader (_bce ,_bce .InputStream ,_cee ,_bce .OrganizationType );if _gab !=nil {return _ac .Wrap (_gab ,_cbd ,"");};_cd .Log .Trace ("\u0044\u0065c\u006f\u0064\u0069\u006eg\u0020\u0073e\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u0075m\u0062\u0065\u0072\u003a\u0020\u0025\u0064\u002c\u0020\u0054\u0079\u0070e\u003a\u0020\u0025\u0073",_eee .SegmentNumber ,_eee .Type );_cca =_eee .Type ;if _cca !=_ee .TEndOfFile {if _eee .PageAssociation !=0{_dcde =_bce .Pages [_eee .PageAssociation ];if _dcde ==nil {_dcde =_ecfgb (_bce ,_eee .PageAssociation );_bce .Pages [_eee .PageAssociation ]=_dcde ;if _bce .NumberOfPagesUnknown {_bce .NumberOfPages ++;};};_dcde .Segments =append (_dcde .Segments ,_eee );}else {_bce .GlobalSegments .AddSegment (_eee );};};_dee =append (_dee ,_eee );_cee =_bce .InputStream .StreamPosition ();if _bce .OrganizationType ==_ee .OSequential {_cee +=int64 (_eee .SegmentDataLength );};_cbc ,_gab =_bce .reachedEOF (_cee );if _gab !=nil {_cd .Log .Debug ("\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020\u0072\u0065\u0061\u0063h\u0065\u0064\u0020\u0045\u004f\u0046\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_gab );return _ac .Wrap (_gab ,_cbd ,"");};};_bce .determineRandomDataOffsets (_dee ,uint64 (_cee ));return nil ;};func (_eed *Page )composePageBitmap ()error {const _fdfg ="\u0063\u006f\u006d\u0070\u006f\u0073\u0065\u0050\u0061\u0067\u0065\u0042i\u0074\u006d\u0061\u0070";if _eed .PageNumber ==0{return nil ;};_fbc :=_eed .getPageInformationSegment ();if _fbc ==nil {return _ac .Error (_fdfg ,"\u0070\u0061\u0067e \u0069\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069o\u006e \u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_bef ,_dbcc :=_fbc .GetSegmentData ();if _dbcc !=nil {return _dbcc ;};_ffaa ,_ccc :=_bef .(*_ee .PageInformationSegment );if !_ccc {return _ac .Error (_fdfg ,"\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006da\u0074\u0069\u006f\u006e \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};if _dbcc =_eed .createPage (_ffaa );_dbcc !=nil {return _ac .Wrap (_dbcc ,_fdfg ,"");};_eed .clearSegmentData ();return nil ;};func (_cdfe *Page )nextSegmentNumber ()uint32 {return _cdfe .Document .nextSegmentNumber ()};func (_cgd *Page )String ()string {return _a .Sprintf ("\u0050\u0061\u0067\u0065\u0020\u0023\u0025\u0064",_cgd .PageNumber );};func (_aagg *Page )lastSegmentNumber ()(_addcg uint32 ,_agd error ){const _dgca ="\u006c\u0061\u0073\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";if len (_aagg .Segments )==0{return _addcg ,_ac .Errorf (_dgca ,"\u006e\u006f\u0020se\u0067\u006d\u0065\u006e\u0074\u0073\u0020\u0066\u006fu\u006ed\u0020i\u006e \u0074\u0068\u0065\u0020\u0070\u0061\u0067\u0065\u0020\u0027\u0025\u0064\u0027",_aagg .PageNumber );};return _aagg .Segments [len (_aagg .Segments )-1].SegmentNumber ,nil ;};func (_eba *Page )clearSegmentData (){for _dfdc :=range _eba .Segments {_eba .Segments [_dfdc ].CleanSegmentData ();};};func (_feb *Document )parseFileHeader ()error {const _gaa ="\u0070a\u0072s\u0065\u0046\u0069\u006c\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_ ,_dbb :=_feb .InputStream .Seek (8,_ae .SeekStart );if _dbb !=nil {return _ac .Wrap (_dbb ,_gaa ,"\u0069\u0064");};_ ,_dbb =_feb .InputStream .ReadBits (5);if _dbb !=nil {return _ac .Wrap (_dbb ,_gaa ,"\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074\u0073");};_gebb ,_dbb :=_feb .InputStream .ReadBit ();if _dbb !=nil {return _ac .Wrap (_dbb ,_gaa ,"\u0065x\u0074e\u006e\u0064\u0065\u0064\u0020t\u0065\u006dp\u006c\u0061\u0074\u0065\u0073");};if _gebb ==1{_feb .GBUseExtTemplate =true ;};_gebb ,_dbb =_feb .InputStream .ReadBit ();if _dbb !=nil {return _ac .Wrap (_dbb ,_gaa ,"\u0075\u006e\u006b\u006eow\u006e\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};if _gebb !=1{_feb .NumberOfPagesUnknown =false ;};_gebb ,_dbb =_feb .InputStream .ReadBit ();if _dbb !=nil {return _ac .Wrap (_dbb ,_gaa ,"\u006f\u0072\u0067\u0061\u006e\u0069\u007a\u0061\u0074\u0069\u006f\u006e \u0074\u0079\u0070\u0065");};_feb .OrganizationType =_ee .OrganizationType (_gebb );if !_feb .NumberOfPagesUnknown {_feb .NumberOfPages ,_dbb =_feb .InputStream .ReadUint32 ();if _dbb !=nil {return _ac .Wrap (_dbb ,_gaa ,"\u006eu\u006db\u0065\u0072\u0020\u006f\u0066\u0020\u0070\u0061\u0067\u0065\u0073");};_feb ._ef =13;};return nil ;};func InitEncodeDocument (fullHeaders bool )*Document {return &Document {FullHeaders :fullHeaders ,_cdc :_e .BufferedMSB (),Pages :map[int ]*Page {},_f :map[int ][]int {},_fa :map[int ]int {},_dd :map[int ][]int {}};};func (_gbd *Document )GetGlobalSegment (i int )(*_ee .Header ,error ){_efdg ,_dbcb :=_gbd .GlobalSegments .GetSegment (i );if _dbcb !=nil {return nil ,_ac .Wrap (_dbcb ,"\u0047\u0065t\u0047\u006c\u006fb\u0061\u006c\u0053\u0065\u0067\u006d\u0065\u006e\u0074","");};return _efdg ,nil ;};func (_ggb *Document )encodeEOFHeader (_gdg _e .BinaryWriter )(_eag int ,_bdf error ){_cgb :=&_ee .Header {SegmentNumber :_ggb .nextSegmentNumber (),Type :_ee .TEndOfFile };if _eag ,_bdf =_cgb .Encode (_gdg );_bdf !=nil {return 0,_ac .Wrap (_bdf ,"\u0065n\u0063o\u0064\u0065\u0045\u004f\u0046\u0048\u0065\u0061\u0064\u0065\u0072","");};return _eag ,nil ;};func (_fffe *Page )GetWidth ()(int ,error ){return _fffe .getWidth ()};func _ecfgb (_dce *Document ,_deg int )*Page {return &Page {Document :_dce ,PageNumber :_deg ,Segments :[]*_ee .Header {}};};func (_ff *Document )AddGenericPage (bm *_eg .Bitmap ,duplicateLineRemoval bool )(_da error ){const _gc ="\u0044\u006f\u0063um\u0065\u006e\u0074\u002e\u0041\u0064\u0064\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0050\u0061\u0067\u0065";if !_ff .FullHeaders &&_ff .NumberOfPages !=0{return _ac .Error (_gc ,"\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0070\u0061\u0067\u0065\u002e\u0020\u0046\u0069\u006c\u0065\u004d\u006f\u0064\u0065\u0020\u0064\u0069\u0073\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0064\u0064i\u006e\u0067\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e \u006f\u006e\u0065\u0020\u0070\u0061g\u0065");};_gcd :=&Page {Segments :[]*_ee .Header {},Bitmap :bm ,Document :_ff ,FinalHeight :bm .Height ,FinalWidth :bm .Width ,IsLossless :true };_gcd .PageNumber =int (_ff .nextPageNumber ());_ff .Pages [_gcd .PageNumber ]=_gcd ;_gcd .AddPageInformationSegment ();if _da =_gcd .AddGenericRegion (bm ,0,0,0,_ee .TImmediateGenericRegion ,duplicateLineRemoval );_da !=nil {return _ac .Wrap (_da ,_gc ,"");};if _ff .FullHeaders {_gcd .AddEndOfPageSegment ();};return nil ;};func (_gge *Page )GetHeight ()(int ,error ){return _gge .getHeight ()};func (_ddbb *Globals )GetSegmentByIndex (index int )(*_ee .Header ,error ){const _cgc ="\u0047l\u006f\u0062\u0061\u006cs\u002e\u0047\u0065\u0074\u0053e\u0067m\u0065n\u0074\u0042\u0079\u0049\u006e\u0064\u0065x";if _ddbb ==nil {return nil ,_ac .Error (_cgc ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_ddbb .Segments )==0{return nil ,_ac .Error (_cgc ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");};if index > len (_ddbb .Segments )-1{return nil ,_ac .Error (_cgc ,"\u0069n\u0064e\u0078\u0020\u006f\u0075\u0074 \u006f\u0066 \u0072\u0061\u006e\u0067\u0065");};return _ddbb .Segments [index ],nil ;};func (_aed *Document )encodeSegment (_aeg *_ee .Header ,_eecf *int )error {const _cdce ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074";_aeg .SegmentNumber =_aed .nextSegmentNumber ();_cge ,_cdf :=_aeg .Encode (_aed ._cdc );if _cdf !=nil {return _ac .Wrapf (_cdf ,_cdce ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_aeg .SegmentNumber );};*_eecf +=_cge ;return nil ;};type Globals struct{Segments []*_ee .Header ;};