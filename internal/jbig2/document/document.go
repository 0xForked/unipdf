//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package document ;import (_cf "encoding/binary";_e "fmt";_d "github.com/unidoc/unipdf/v3/common";_fd "github.com/unidoc/unipdf/v3/internal/bitwise";_ee "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_ef "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";
_df "github.com/unidoc/unipdf/v3/internal/jbig2/document/segments";_bd "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/classer";_b "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_ca "io";_f "math";_a "runtime/debug";);func (_fab *Page )createPage (_cge *_df .PageInformationSegment )error {var _fcdf error ;
if !_cge .IsStripe ||_cge .PageBMHeight !=-1{_fcdf =_fab .createNormalPage (_cge );}else {_fcdf =_fab .createStripedPage (_cge );};return _fcdf ;};func (_cbe *Document )AddGenericPage (bm *_ef .Bitmap ,duplicateLineRemoval bool )(_ae error ){const _gd ="\u0044\u006f\u0063um\u0065\u006e\u0074\u002e\u0041\u0064\u0064\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0050\u0061\u0067\u0065";
if !_cbe .FullHeaders &&_cbe .NumberOfPages !=0{return _b .Error (_gd ,"\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0070\u0061\u0067\u0065\u002e\u0020\u0046\u0069\u006c\u0065\u004d\u006f\u0064\u0065\u0020\u0064\u0069\u0073\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0064\u0064i\u006e\u0067\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e \u006f\u006e\u0065\u0020\u0070\u0061g\u0065");
};_cbea :=&Page {Segments :[]*_df .Header {},Bitmap :bm ,Document :_cbe ,FinalHeight :bm .Height ,FinalWidth :bm .Width ,IsLossless :true ,BlackIsOne :bm .Color ==_ef .Chocolate };_cbea .PageNumber =int (_cbe .nextPageNumber ());_cbe .Pages [_cbea .PageNumber ]=_cbea ;
bm .InverseData ();_cbea .AddPageInformationSegment ();if _ae =_cbea .AddGenericRegion (bm ,0,0,0,_df .TImmediateGenericRegion ,duplicateLineRemoval );_ae !=nil {return _b .Wrap (_ae ,_gd ,"");};if _cbe .FullHeaders {_cbea .AddEndOfPageSegment ();};return nil ;
};func (_cda *Globals )GetSegmentByIndex (index int )(*_df .Header ,error ){const _dde ="\u0047l\u006f\u0062\u0061\u006cs\u002e\u0047\u0065\u0074\u0053e\u0067m\u0065n\u0074\u0042\u0079\u0049\u006e\u0064\u0065x";if _cda ==nil {return nil ,_b .Error (_dde ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};if len (_cda .Segments )==0{return nil ,_b .Error (_dde ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");};if index > len (_cda .Segments )-1{return nil ,_b .Error (_dde ,"\u0069n\u0064e\u0078\u0020\u006f\u0075\u0074 \u006f\u0066 \u0072\u0061\u006e\u0067\u0065");
};return _cda .Segments [index ],nil ;};func (_aae *Document )produceClassifiedPages ()(_cbb error ){const _cbd ="\u0070\u0072\u006f\u0064uc\u0065\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0050\u0061\u0067e\u0073";if _aae .Classer ==nil {return nil ;
};var (_dd *Page ;_afb bool ;_eg *_df .Header ;);for _ebg :=1;_ebg <=int (_aae .NumberOfPages );_ebg ++{if _dd ,_afb =_aae .Pages [_ebg ];!_afb {return _b .Errorf (_cbd ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_ebg );
};if _dd .EncodingMethod ==GenericEM {continue ;};if _eg ==nil {if _eg ,_cbb =_aae .GlobalSegments .GetSymbolDictionary ();_cbb !=nil {return _b .Wrap (_cbb ,_cbd ,"");};};if _cbb =_aae .produceClassifiedPage (_dd ,_eg );_cbb !=nil {return _b .Wrapf (_cbb ,_cbd ,"\u0070\u0061\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027",_ebg );
};};return nil ;};func (_bdfd *Page )fitsPage (_gcga *_df .PageInformationSegment ,_ddcb *_ef .Bitmap )bool {return _bdfd .countRegions ()==1&&_gcga .DefaultPixelValue ==0&&_gcga .PageBMWidth ==_ddcb .Width &&_gcga .PageBMHeight ==_ddcb .Height ;};func (_ebb *Page )getResolutionX ()(int ,error ){const _gbae ="\u0067\u0065\u0074\u0052\u0065\u0073\u006f\u006c\u0075t\u0069\u006f\u006e\u0058";
if _ebb .ResolutionX !=0{return _ebb .ResolutionX ,nil ;};_gbdg :=_ebb .getPageInformationSegment ();if _gbdg ==nil {return 0,_b .Error (_gbae ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_dcf ,_daeb :=_gbdg .GetSegmentData ();
if _daeb !=nil {return 0,_b .Wrap (_daeb ,_gbae ,"");};_gdd ,_ffc :=_dcf .(*_df .PageInformationSegment );if !_ffc {return 0,_b .Errorf (_gbae ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_dcf );
};_ebb .ResolutionX =_gdd .ResolutionX ;return _ebb .ResolutionX ,nil ;};func (_ecg *Document )encodeSegment (_bgg *_df .Header ,_bde *int )error {const _gge ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074";_bgg .SegmentNumber =_ecg .nextSegmentNumber ();
_acg ,_gff :=_bgg .Encode (_ecg ._ag );if _gff !=nil {return _b .Wrapf (_gff ,_gge ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_bgg .SegmentNumber );};*_bde +=_acg ;return nil ;};type Page struct{Segments []*_df .Header ;
PageNumber int ;Bitmap *_ef .Bitmap ;FinalHeight int ;FinalWidth int ;ResolutionX int ;ResolutionY int ;IsLossless bool ;Document *Document ;FirstSegmentNumber int ;EncodingMethod EncodingMethod ;BlackIsOne bool ;};func (_eeg *Document )encodeFileHeader (_ba _fd .BinaryWriter )(_afcd int ,_dab error ){const _dgb ="\u0065\u006ec\u006f\u0064\u0065F\u0069\u006c\u0065\u0048\u0065\u0061\u0064\u0065\u0072";
_afcd ,_dab =_ba .Write (_aa );if _dab !=nil {return _afcd ,_b .Wrap (_dab ,_dgb ,"\u0069\u0064");};if _dab =_ba .WriteByte (0x01);_dab !=nil {return _afcd ,_b .Wrap (_dab ,_dgb ,"\u0066\u006c\u0061g\u0073");};_afcd ++;_edd :=make ([]byte ,4);_cf .BigEndian .PutUint32 (_edd ,_eeg .NumberOfPages );
_fcb ,_dab :=_ba .Write (_edd );if _dab !=nil {return _fcb ,_b .Wrap (_dab ,_dgb ,"p\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_afcd +=_fcb ;return _afcd ,nil ;};type Document struct{Pages map[int ]*Page ;NumberOfPagesUnknown bool ;
NumberOfPages uint32 ;GBUseExtTemplate bool ;InputStream _fd .StreamReader ;GlobalSegments *Globals ;OrganizationType _df .OrganizationType ;Classer *_bd .Classer ;XRes ,YRes int ;FullHeaders bool ;CurrentSegmentNumber uint32 ;AverageTemplates *_ef .Bitmaps ;
BaseIndexes []int ;Refinement bool ;RefineLevel int ;_g uint8 ;_ag *_fd .BufferedWriter ;EncodeGlobals bool ;_fe int ;_gg map[int ][]int ;_de map[int ][]int ;_cb []int ;_bg map[int ]int ;};func (_aeff *Page )lastSegmentNumber ()(_gfe uint32 ,_dfda error ){const _bebd ="\u006c\u0061\u0073\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";
if len (_aeff .Segments )==0{return _gfe ,_b .Errorf (_bebd ,"\u006e\u006f\u0020se\u0067\u006d\u0065\u006e\u0074\u0073\u0020\u0066\u006fu\u006ed\u0020i\u006e \u0074\u0068\u0065\u0020\u0070\u0061\u0067\u0065\u0020\u0027\u0025\u0064\u0027",_aeff .PageNumber );
};return _aeff .Segments [len (_aeff .Segments )-1].SegmentNumber ,nil ;};func (_afbac *Document )determineRandomDataOffsets (_degc []*_df .Header ,_ffe uint64 ){if _afbac .OrganizationType !=_df .ORandom {return ;};for _ ,_def :=range _degc {_def .SegmentDataStartOffset =_ffe ;
_ffe +=_def .SegmentDataLength ;};};func (_deef *Page )createStripedPage (_bfa *_df .PageInformationSegment )error {const _gbf ="\u0063\u0072\u0065\u0061\u0074\u0065\u0053\u0074\u0072\u0069\u0070\u0065d\u0050\u0061\u0067\u0065";_fcg ,_ggdb :=_deef .collectPageStripes ();
if _ggdb !=nil {return _b .Wrap (_ggdb ,_gbf ,"");};var _eaee int ;for _ ,_age :=range _fcg {if _bbg ,_dbc :=_age .(*_df .EndOfStripe );_dbc {_eaee =_bbg .LineNumber ()+1;}else {_ebc :=_age .(_df .Regioner );_gfc :=_ebc .GetRegionInfo ();_dbfd :=_deef .getCombinationOperator (_bfa ,_gfc .CombinaionOperator );
_dgdc ,_ebd :=_ebc .GetRegionBitmap ();if _ebd !=nil {return _b .Wrap (_ebd ,_gbf ,"");};_ebd =_ef .Blit (_dgdc ,_deef .Bitmap ,int (_gfc .XLocation ),_eaee ,_dbfd );if _ebd !=nil {return _b .Wrap (_ebd ,_gbf ,"");};};};return nil ;};type Globals struct{Segments []*_df .Header ;
};func (_aaed *Page )getPageInformationSegment ()*_df .Header {for _ ,_adaac :=range _aaed .Segments {if _adaac .Type ==_df .TPageInformation {return _adaac ;};};_d .Log .Debug ("\u0050\u0061\u0067\u0065\u0020\u0069\u006e\u0066o\u0072\u006d\u0061ti\u006f\u006e\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0066o\u0072\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0073\u002e",_aaed );
return nil ;};func (_dc *Document )nextSegmentNumber ()uint32 {_bac :=_dc .CurrentSegmentNumber ;_dc .CurrentSegmentNumber ++;return _bac ;};func (_ab *Document )completeSymbols ()(_dec error ){const _bb ="\u0063o\u006dp\u006c\u0065\u0074\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
if _ab .Classer ==nil {return nil ;};if _ab .Classer .UndilatedTemplates ==nil {return _b .Error (_bb ,"\u006e\u006f t\u0065\u006d\u0070l\u0061\u0074\u0065\u0073 de\u0066in\u0065\u0064\u0020\u0066\u006f\u0072\u0020th\u0065\u0020\u0063\u006c\u0061\u0073\u0073e\u0072");
};_gagd :=len (_ab .Pages )==1;_deg :=make ([]int ,_ab .Classer .UndilatedTemplates .Size ());var _gda int ;for _fcf :=0;_fcf < _ab .Classer .ClassIDs .Size ();_fcf ++{_gda ,_dec =_ab .Classer .ClassIDs .Get (_fcf );if _dec !=nil {return _b .Wrap (_dec ,_bb ,"\u0063\u006c\u0061\u0073\u0073\u0020\u0049\u0044\u0027\u0073");
};_deg [_gda ]++;};var _bfb []int ;for _cgc :=0;_cgc < _ab .Classer .UndilatedTemplates .Size ();_cgc ++{if _deg [_cgc ]==0{return _b .Error (_bb ,"\u006eo\u0020\u0073y\u006d\u0062\u006f\u006cs\u0020\u0069\u006es\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u0066\u006fun\u0064\u0020\u0066o\u0072\u0020g\u0069\u0076\u0065\u006e\u0020\u0063l\u0061\u0073s\u003f\u0020");
};if _deg [_cgc ]> 1||_gagd {_bfb =append (_bfb ,_cgc );};};_ab ._fe =len (_bfb );var _fca ,_deb int ;for _ddg :=0;_ddg < _ab .Classer .ComponentPageNumbers .Size ();_ddg ++{_fca ,_dec =_ab .Classer .ComponentPageNumbers .Get (_ddg );if _dec !=nil {return _b .Wrapf (_dec ,_bb ,"p\u0061\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027 \u006e\u006f\u0074\u0020\u0066\u006f\u0075nd\u0020\u0069\u006e\u0020t\u0068\u0065\u0020\u0063\u006c\u0061\u0073\u0073\u0065r \u0070\u0061g\u0065\u006e\u0075\u006d\u0062\u0065\u0072\u0073",_ddg );
};_deb ,_dec =_ab .Classer .ClassIDs .Get (_ddg );if _dec !=nil {return _b .Wrapf (_dec ,_bb ,"\u0063\u0061\u006e\u0027\u0074\u0020\u0067e\u0074\u0020\u0073y\u006d\u0062\u006f\u006c \u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0027\u0025\u0064\u0027\u0020\u0066\u0072\u006f\u006d\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072",_fca );
};if _deg [_deb ]==1&&!_gagd {_ab ._gg [_fca ]=append (_ab ._gg [_fca ],_deb );};};if _dec =_ab .Classer .ComputeLLCorners ();_dec !=nil {return _b .Wrap (_dec ,_bb ,"");};return nil ;};func (_fcaa *Page )createNormalPage (_cggg *_df .PageInformationSegment )error {const _bff ="\u0063\u0072e\u0061\u0074\u0065N\u006f\u0072\u006d\u0061\u006c\u0050\u0061\u0067\u0065";
_fcaa .Bitmap =_ef .New (_cggg .PageBMWidth ,_cggg .PageBMHeight );if _cggg .DefaultPixelValue !=0{_fcaa .Bitmap .SetDefaultPixel ();};for _ ,_adae :=range _fcaa .Segments {switch _adae .Type {case 6,7,22,23,38,39,42,43:_d .Log .Trace ("\u0047\u0065\u0074\u0074in\u0067\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0064",_adae .SegmentNumber );
_fcbb ,_ddd :=_adae .GetSegmentData ();if _ddd !=nil {return _ddd ;};_aeea ,_adb :=_fcbb .(_df .Regioner );if !_adb {_d .Log .Debug ("\u0053\u0065g\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069on\u0065\u0072",_fcbb );
return _b .Errorf (_bff ,"i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062i\u0067\u0032\u0020\u0073\u0065\u0067\u006den\u0074\u0020\u0074\u0079p\u0065\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061 R\u0065\u0067i\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_fcbb );
};_fcde ,_ddd :=_aeea .GetRegionBitmap ();if _ddd !=nil {return _b .Wrap (_ddd ,_bff ,"");};if _fcaa .fitsPage (_cggg ,_fcde ){_fcaa .Bitmap =_fcde ;}else {_gbg :=_aeea .GetRegionInfo ();_dfbb :=_fcaa .getCombinationOperator (_cggg ,_gbg .CombinaionOperator );
_ddd =_ef .Blit (_fcde ,_fcaa .Bitmap ,int (_gbg .XLocation ),int (_gbg .YLocation ),_dfbb );if _ddd !=nil {return _b .Wrap (_ddd ,_bff ,"");};};};};return nil ;};func _ac (_afba int )int {_afc :=0;_aef :=(_afba &(_afba -1))==0;_afba >>=1;for ;_afba !=0;
_afba >>=1{_afc ++;};if _aef {return _afc ;};return _afc +1;};func (_efa *Page )GetSegment (number int )(*_df .Header ,error ){const _cfg ="\u0050a\u0067e\u002e\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074";for _ ,_edgd :=range _efa .Segments {if _edgd .SegmentNumber ==uint32 (number ){return _edgd ,nil ;
};};_fg :=make ([]uint32 ,len (_efa .Segments ));for _fcbg ,_beb :=range _efa .Segments {_fg [_fcbg ]=_beb .SegmentNumber ;};return nil ,_b .Errorf (_cfg ,"\u0073e\u0067\u006d\u0065n\u0074\u0020\u0077i\u0074h \u006e\u0075\u006d\u0062\u0065\u0072\u003a \u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0070\u0061\u0067\u0065\u003a\u0020'%\u0064'\u002e\u0020\u004b\u006e\u006f\u0077n\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u003a \u0025\u0076",number ,_efa .PageNumber ,_fg );
};func (_cggf *Page )composePageBitmap ()error {const _cbc ="\u0063\u006f\u006d\u0070\u006f\u0073\u0065\u0050\u0061\u0067\u0065\u0042i\u0074\u006d\u0061\u0070";if _cggf .PageNumber ==0{return nil ;};_egf :=_cggf .getPageInformationSegment ();if _egf ==nil {return _b .Error (_cbc ,"\u0070\u0061\u0067e \u0069\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069o\u006e \u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
};_bcg ,_dad :=_egf .GetSegmentData ();if _dad !=nil {return _dad ;};_cgb ,_ecbd :=_bcg .(*_df .PageInformationSegment );if !_ecbd {return _b .Error (_cbc ,"\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006da\u0074\u0069\u006f\u006e \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");
};if _dad =_cggf .createPage (_cgb );_dad !=nil {return _b .Wrap (_dad ,_cbc ,"");};_cggf .clearSegmentData ();return nil ;};func _bggb (_fac *Document ,_egdg int )*Page {return &Page {Document :_fac ,PageNumber :_egdg ,Segments :[]*_df .Header {}};};func (_fcba *Globals )AddSegment (segment *_df .Header ){_fcba .Segments =append (_fcba .Segments ,segment );
};func (_aeb *Page )getHeight ()(int ,error ){const _gegd ="\u0067e\u0074\u0048\u0065\u0069\u0067\u0068t";if _aeb .FinalHeight !=0{return _aeb .FinalHeight ,nil ;};_agcb :=_aeb .getPageInformationSegment ();if _agcb ==nil {return 0,_b .Error (_gegd ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");
};_acgf ,_gefd :=_agcb .GetSegmentData ();if _gefd !=nil {return 0,_b .Wrap (_gefd ,_gegd ,"");};_ecd ,_cfd :=_acgf .(*_df .PageInformationSegment );if !_cfd {return 0,_b .Errorf (_gegd ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_acgf );
};if _ecd .PageBMHeight ==_f .MaxInt32 {_ ,_gefd =_aeb .GetBitmap ();if _gefd !=nil {return 0,_b .Wrap (_gefd ,_gegd ,"");};}else {_aeb .FinalHeight =_ecd .PageBMHeight ;};return _aeb .FinalHeight ,nil ;};func (_gdg *Document )encodeEOFHeader (_ccd _fd .BinaryWriter )(_afg int ,_gbdf error ){_ccc :=&_df .Header {SegmentNumber :_gdg .nextSegmentNumber (),Type :_df .TEndOfFile };
if _afg ,_gbdf =_ccc .Encode (_ccd );_gbdf !=nil {return 0,_b .Wrap (_gbdf ,"\u0065n\u0063o\u0064\u0065\u0045\u004f\u0046\u0048\u0065\u0061\u0064\u0065\u0072","");};return _afg ,nil ;};func (_ddc *Page )AddGenericRegion (bm *_ef .Bitmap ,xloc ,yloc ,template int ,tp _df .Type ,duplicateLineRemoval bool )error {const _bdf ="P\u0061\u0067\u0065\u002eAd\u0064G\u0065\u006e\u0065\u0072\u0069c\u0052\u0065\u0067\u0069\u006f\u006e";
_cbg :=&_df .GenericRegion {};if _cccb :=_cbg .InitEncode (bm ,xloc ,yloc ,template ,duplicateLineRemoval );_cccb !=nil {return _b .Wrap (_cccb ,_bdf ,"");};_fdag :=&_df .Header {Type :_df .TImmediateGenericRegion ,PageAssociation :_ddc .PageNumber ,SegmentData :_cbg };
_ddc .Segments =append (_ddc .Segments ,_fdag );return nil ;};func (_daf *Globals )GetSegment (segmentNumber int )(*_df .Header ,error ){const _ecf ="\u0047l\u006fb\u0061\u006c\u0073\u002e\u0047e\u0074\u0053e\u0067\u006d\u0065\u006e\u0074";if _daf ==nil {return nil ,_b .Error (_ecf ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};if len (_daf .Segments )==0{return nil ,_b .Error (_ecf ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");};var _cbf *_df .Header ;for _ ,_cbf =range _daf .Segments {if _cbf .SegmentNumber ==uint32 (segmentNumber ){break ;
};};if _cbf ==nil {return nil ,_b .Error (_ecf ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};return _cbf ,nil ;};func (_caa *Page )GetHeight ()(int ,error ){return _caa .getHeight ()};const (GenericEM EncodingMethod =iota ;
CorrelationEM ;RankHausEM ;);func (_cbdd *Document )Encode ()(_dgd []byte ,_degb error ){const _db ="\u0044o\u0063u\u006d\u0065\u006e\u0074\u002e\u0045\u006e\u0063\u006f\u0064\u0065";var _add ,_ff int ;if _cbdd .FullHeaders {if _add ,_degb =_cbdd .encodeFileHeader (_cbdd ._ag );
_degb !=nil {return nil ,_b .Wrap (_degb ,_db ,"");};};var (_edf bool ;_bfd *_df .Header ;_abd *Page ;);if _degb =_cbdd .completeClassifiedPages ();_degb !=nil {return nil ,_b .Wrap (_degb ,_db ,"");};if _degb =_cbdd .produceClassifiedPages ();_degb !=nil {return nil ,_b .Wrap (_degb ,_db ,"");
};if _cbdd .GlobalSegments !=nil {for _ ,_bfd =range _cbdd .GlobalSegments .Segments {if _degb =_cbdd .encodeSegment (_bfd ,&_add );_degb !=nil {return nil ,_b .Wrap (_degb ,_db ,"");};};};for _cdbb :=1;_cdbb <=int (_cbdd .NumberOfPages );_cdbb ++{if _abd ,_edf =_cbdd .Pages [_cdbb ];
!_edf {return nil ,_b .Errorf (_db ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_cdbb );};for _ ,_bfd =range _abd .Segments {if _degb =_cbdd .encodeSegment (_bfd ,&_add );_degb !=nil {return nil ,_b .Wrap (_degb ,_db ,"");
};};};if _cbdd .FullHeaders {if _ff ,_degb =_cbdd .encodeEOFHeader (_cbdd ._ag );_degb !=nil {return nil ,_b .Wrap (_degb ,_db ,"");};_add +=_ff ;};_dgd =_cbdd ._ag .Data ();if len (_dgd )!=_add {_d .Log .Debug ("\u0042\u0079\u0074\u0065\u0073 \u0077\u0072\u0069\u0074\u0074\u0065\u006e \u0028\u006e\u0029\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0065\u0071\u0075\u0061\u006c\u0020\u0074\u006f\u0020\u0074\u0068\u0065\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006f\u0066\u0020t\u0068\u0065\u0020\u0064\u0061\u0074\u0061\u0020\u0065\u006e\u0063\u006fd\u0065\u0064\u003a\u0020\u0027\u0025d\u0027",_add ,len (_dgd ));
};return _dgd ,nil ;};func (_ggd *Page )GetResolutionY ()(int ,error ){return _ggd .getResolutionY ()};func (_afa *Globals )GetSymbolDictionary ()(*_df .Header ,error ){const _faa ="G\u006c\u006f\u0062\u0061\u006c\u0073.\u0047\u0065\u0074\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079";
if _afa ==nil {return nil ,_b .Error (_faa ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_afa .Segments )==0{return nil ,_b .Error (_faa ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");
};for _ ,_aab :=range _afa .Segments {if _aab .Type ==_df .TSymbolDictionary {return _aab ,nil ;};};return nil ,_b .Error (_faa ,"\u0067\u006c\u006fba\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020d\u0069c\u0074i\u006fn\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
};func (_dae *Page )addTextRegionSegment (_eaadd []*_df .Header ,_gaee ,_dbg map[int ]int ,_dbgf []int ,_gcc *_ef .Points ,_eegb *_ef .Bitmaps ,_bcc *_ee .IntSlice ,_cdg *_ef .Boxes ,_bae ,_fff int ){_cgfg :=&_df .TextRegion {NumberOfSymbols :uint32 (_fff )};
_cgfg .InitEncode (_gaee ,_dbg ,_dbgf ,_gcc ,_eegb ,_bcc ,_cdg ,_dae .FinalWidth ,_dae .FinalHeight ,_bae );_gca :=&_df .Header {RTSegments :_eaadd ,SegmentData :_cgfg ,PageAssociation :_dae .PageNumber ,Type :_df .TImmediateTextRegion };_ggb :=_df .TPageInformation ;
if _dbg !=nil {_ggb =_df .TSymbolDictionary ;};var _dege int ;for ;_dege < len (_dae .Segments );_dege ++{if _dae .Segments [_dege ].Type ==_ggb {_dege ++;break ;};};_dae .Segments =append (_dae .Segments ,nil );copy (_dae .Segments [_dege +1:],_dae .Segments [_dege :]);
_dae .Segments [_dege ]=_gca ;};func (_dbf *Document )reachedEOF (_ccca int64 )(bool ,error ){const _cefc ="\u0072\u0065\u0061\u0063\u0068\u0065\u0064\u0045\u004f\u0046";_ ,_bbe :=_dbf .InputStream .Seek (_ccca ,_ca .SeekStart );if _bbe !=nil {_d .Log .Debug ("\u0072\u0065\u0061c\u0068\u0065\u0064\u0045\u004f\u0046\u0020\u002d\u0020\u0064\u002e\u0049\u006e\u0070\u0075\u0074\u0053\u0074\u0072\u0065\u0061\u006d\u002e\u0053\u0065\u0065\u006b\u0020\u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_bbe );
return false ,_b .Wrap (_bbe ,_cefc ,"\u0069n\u0070\u0075\u0074\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020s\u0065\u0065\u006b\u0020\u0066\u0061\u0069\u006c\u0065\u0064");};_ ,_bbe =_dbf .InputStream .ReadBits (32);if _bbe ==_ca .EOF {return true ,nil ;
}else if _bbe !=nil {return false ,_b .Wrap (_bbe ,_cefc ,"");};return false ,nil ;};type EncodingMethod int ;func (_gce *Page )collectPageStripes ()(_eda []_df .Segmenter ,_cgcf error ){const _adaf ="\u0063o\u006cl\u0065\u0063\u0074\u0050\u0061g\u0065\u0053t\u0072\u0069\u0070\u0065\u0073";
var _ddfc _df .Segmenter ;for _ ,_adbg :=range _gce .Segments {switch _adbg .Type {case 6,7,22,23,38,39,42,43:_ddfc ,_cgcf =_adbg .GetSegmentData ();if _cgcf !=nil {return nil ,_b .Wrap (_cgcf ,_adaf ,"");};_eda =append (_eda ,_ddfc );case 50:_ddfc ,_cgcf =_adbg .GetSegmentData ();
if _cgcf !=nil {return nil ,_cgcf ;};_cce ,_deeb :=_ddfc .(*_df .EndOfStripe );if !_deeb {return nil ,_b .Errorf (_adaf ,"\u0045\u006e\u0064\u004f\u0066\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u006f\u0066\u0020\u0076\u0061l\u0069\u0064\u0020\u0074\u0079p\u0065\u003a \u0027\u0025\u0054\u0027",_ddfc );
};_eda =append (_eda ,_cce );_gce .FinalHeight =_cce .LineNumber ();};};return _eda ,nil ;};func DecodeDocument (input _fd .StreamReader ,globals *Globals )(*Document ,error ){return _dag (input ,globals );};func (_fcd *Document )parseFileHeader ()error {const _ecb ="\u0070a\u0072s\u0065\u0046\u0069\u006c\u0065\u0048\u0065\u0061\u0064\u0065\u0072";
_ ,_deff :=_fcd .InputStream .Seek (8,_ca .SeekStart );if _deff !=nil {return _b .Wrap (_deff ,_ecb ,"\u0069\u0064");};_ ,_deff =_fcd .InputStream .ReadBits (5);if _deff !=nil {return _b .Wrap (_deff ,_ecb ,"\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074\u0073");
};_ddb ,_deff :=_fcd .InputStream .ReadBit ();if _deff !=nil {return _b .Wrap (_deff ,_ecb ,"\u0065x\u0074e\u006e\u0064\u0065\u0064\u0020t\u0065\u006dp\u006c\u0061\u0074\u0065\u0073");};if _ddb ==1{_fcd .GBUseExtTemplate =true ;};_ddb ,_deff =_fcd .InputStream .ReadBit ();
if _deff !=nil {return _b .Wrap (_deff ,_ecb ,"\u0075\u006e\u006b\u006eow\u006e\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};if _ddb !=1{_fcd .NumberOfPagesUnknown =false ;};_ddb ,_deff =_fcd .InputStream .ReadBit ();if _deff !=nil {return _b .Wrap (_deff ,_ecb ,"\u006f\u0072\u0067\u0061\u006e\u0069\u007a\u0061\u0074\u0069\u006f\u006e \u0074\u0079\u0070\u0065");
};_fcd .OrganizationType =_df .OrganizationType (_ddb );if !_fcd .NumberOfPagesUnknown {_fcd .NumberOfPages ,_deff =_fcd .InputStream .ReadUint32 ();if _deff !=nil {return _b .Wrap (_deff ,_ecb ,"\u006eu\u006db\u0065\u0072\u0020\u006f\u0066\u0020\u0070\u0061\u0067\u0065\u0073");
};_fcd ._g =13;};return nil ;};func (_bgff *Page )getWidth ()(int ,error ){const _dgdb ="\u0067\u0065\u0074\u0057\u0069\u0064\u0074\u0068";if _bgff .FinalWidth !=0{return _bgff .FinalWidth ,nil ;};_eefg :=_bgff .getPageInformationSegment ();if _eefg ==nil {return 0,_b .Error (_dgdb ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");
};_dagd ,_gba :=_eefg .GetSegmentData ();if _gba !=nil {return 0,_b .Wrap (_gba ,_dgdb ,"");};_ceb ,_fee :=_dagd .(*_df .PageInformationSegment );if !_fee {return 0,_b .Errorf (_dgdb ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_dagd );
};_bgff .FinalWidth =_ceb .PageBMWidth ;return _bgff .FinalWidth ,nil ;};func (_gaa *Page )nextSegmentNumber ()uint32 {return _gaa .Document .nextSegmentNumber ()};func InitEncodeDocument (fullHeaders bool )*Document {return &Document {FullHeaders :fullHeaders ,_ag :_fd .BufferedMSB (),Pages :map[int ]*Page {},_gg :map[int ][]int {},_bg :map[int ]int {},_de :map[int ][]int {}};
};var _aa =[]byte {0x97,0x4A,0x42,0x32,0x0D,0x0A,0x1A,0x0A};func (_eaad *Page )AddEndOfPageSegment (){_gfgd :=&_df .Header {Type :_df .TEndOfPage ,PageAssociation :_eaad .PageNumber };_eaad .Segments =append (_eaad .Segments ,_gfgd );};func (_ad *Document )addSymbolDictionary (_cbdf int ,_geg *_ef .Bitmaps ,_feg []int ,_da map[int ]int ,_cc bool )(*_df .Header ,error ){const _cgg ="\u0061\u0064\u0064\u0053ym\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079";
_be :=&_df .SymbolDictionary {};if _bee :=_be .InitEncode (_geg ,_feg ,_da ,_cc );_bee !=nil {return nil ,_bee ;};_cdb :=&_df .Header {Type :_df .TSymbolDictionary ,PageAssociation :_cbdf ,SegmentData :_be };if _cbdf ==0{if _ad .GlobalSegments ==nil {_ad .GlobalSegments =&Globals {};
};_ad .GlobalSegments .AddSegment (_cdb );return _cdb ,nil ;};_eec ,_ddf :=_ad .Pages [_cbdf ];if !_ddf {return nil ,_b .Errorf (_cgg ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_cbdf );};var (_fc int ;
_gbd *_df .Header ;);for _fc ,_gbd =range _eec .Segments {if _gbd .Type ==_df .TPageInformation {break ;};};_fc ++;_eec .Segments =append (_eec .Segments ,nil );copy (_eec .Segments [_fc +1:],_eec .Segments [_fc :]);_eec .Segments [_fc ]=_cdb ;return _cdb ,nil ;
};func (_fb *Document )GetNumberOfPages ()(uint32 ,error ){if _fb .NumberOfPagesUnknown ||_fb .NumberOfPages ==0{if len (_fb .Pages )==0{if _bed :=_fb .mapData ();_bed !=nil {return 0,_b .Wrap (_bed ,"\u0044o\u0063\u0075\u006d\u0065n\u0074\u002e\u0047\u0065\u0074N\u0075m\u0062e\u0072\u004f\u0066\u0050\u0061\u0067\u0065s","");
};};return uint32 (len (_fb .Pages )),nil ;};return _fb .NumberOfPages ,nil ;};func _dag (_daa _fd .StreamReader ,_edg *Globals )(*Document ,error ){_dgg :=&Document {Pages :make (map[int ]*Page ),InputStream :_daa ,OrganizationType :_df .OSequential ,NumberOfPagesUnknown :true ,GlobalSegments :_edg ,_g :9};
if _dgg .GlobalSegments ==nil {_dgg .GlobalSegments =&Globals {};};if _aee :=_dgg .mapData ();_aee !=nil {return nil ,_aee ;};return _dgg ,nil ;};func (_bbd *Page )AddPageInformationSegment (){_bgf :=&_df .PageInformationSegment {PageBMWidth :_bbd .FinalWidth ,PageBMHeight :_bbd .FinalHeight ,ResolutionX :_bbd .ResolutionX ,ResolutionY :_bbd .ResolutionY ,IsLossless :_bbd .IsLossless };
if _bbd .BlackIsOne {_bgf .DefaultPixelValue =uint8 (0x1);};_gged :=&_df .Header {PageAssociation :_bbd .PageNumber ,SegmentDataLength :uint64 (_bgf .Size ()),SegmentData :_bgf ,Type :_df .TPageInformation };_bbd .Segments =append (_bbd .Segments ,_gged );
};func (_gaf *Document )GetPage (pageNumber int )(_df .Pager ,error ){const _ada ="\u0044\u006fc\u0075\u006d\u0065n\u0074\u002e\u0047\u0065\u0074\u0050\u0061\u0067\u0065";if pageNumber < 0{_d .Log .Debug ("\u004a\u0042\u0049\u00472\u0020\u0050\u0061\u0067\u0065\u0020\u002d\u0020\u0047e\u0074\u0050\u0061\u0067\u0065\u003a\u0020\u0025\u0064\u002e\u0020\u0050\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062e\u0020\u006c\u006f\u0077\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0030\u002e\u0020\u0025\u0073",pageNumber ,_a .Stack ());
return nil ,_b .Errorf (_ada ,"\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032\u0020d\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020\u002d\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064 \u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u003a\u0020\u0025\u0064",pageNumber );
};if pageNumber > len (_gaf .Pages ){_d .Log .Debug ("\u0050\u0061\u0067\u0065 n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0064\u002e\u0020%\u0073",pageNumber ,_a .Stack ());return nil ,_b .Error (_ada ,"\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065n\u0074\u0020\u002d\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};_aaee ,_fa :=_gaf .Pages [pageNumber ];if !_fa {_d .Log .Debug ("\u0050\u0061\u0067\u0065 n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0064\u002e\u0020%\u0073",pageNumber ,_a .Stack ());return nil ,_b .Errorf (_ada ,"\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065n\u0074\u0020\u002d\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};return _aaee ,nil ;};func (_fbbc *Page )clearSegmentData (){for _dda :=range _fbbc .Segments {_fbbc .Segments [_dda ].CleanSegmentData ();};};func (_bcb *Page )getResolutionY ()(int ,error ){const _bacg ="\u0067\u0065\u0074\u0052\u0065\u0073\u006f\u006c\u0075t\u0069\u006f\u006e\u0059";
if _bcb .ResolutionY !=0{return _bcb .ResolutionY ,nil ;};_gbfb :=_bcb .getPageInformationSegment ();if _gbfb ==nil {return 0,_b .Error (_bacg ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_gad ,_cgeg :=_gbfb .GetSegmentData ();
if _cgeg !=nil {return 0,_b .Wrap (_cgeg ,_bacg ,"");};_dfd ,_cfa :=_gad .(*_df .PageInformationSegment );if !_cfa {return 0,_b .Errorf (_bacg ,"\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0066o\u0072\u006d\u0061ti\u006f\u006e\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0069\u0073\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0074\u0079\u0070\u0065\u003a\u0027%\u0054\u0027",_gad );
};_bcb .ResolutionY =_dfd .ResolutionY ;return _bcb .ResolutionY ,nil ;};func (_dece *Page )GetResolutionX ()(int ,error ){return _dece .getResolutionX ()};func (_dbba *Page )GetBitmap ()(_cdab *_ef .Bitmap ,_abb error ){_d .Log .Trace (_e .Sprintf ("\u005b\u0050\u0041G\u0045\u005d\u005b\u0023%\u0064\u005d\u0020\u0047\u0065\u0074\u0042i\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e",_dbba .PageNumber ));
defer func (){if _abb !=nil {_d .Log .Trace (_e .Sprintf ("\u005b\u0050\u0041\u0047\u0045\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074B\u0069t\u006d\u0061\u0070\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_dbba .PageNumber ,_abb ));
}else {_d .Log .Trace (_e .Sprintf ("\u005b\u0050\u0041\u0047\u0045\u005d\u005b\u0023\u0025\u0064]\u0020\u0047\u0065\u0074\u0042\u0069\u0074m\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064",_dbba .PageNumber ));};}();if _dbba .Bitmap !=nil {return _dbba .Bitmap ,nil ;
};_abb =_dbba .composePageBitmap ();if _abb !=nil {return nil ,_abb ;};return _dbba .Bitmap ,nil ;};func (_daab *Page )GetWidth ()(int ,error ){return _daab .getWidth ()};func (_gac *Document )nextPageNumber ()uint32 {_gac .NumberOfPages ++;return _gac .NumberOfPages };
func (_ddef *Page )Encode (w _fd .BinaryWriter )(_egd int ,_dfb error ){const _afe ="P\u0061\u0067\u0065\u002e\u0045\u006e\u0063\u006f\u0064\u0065";var _eegc int ;for _ ,_cdd :=range _ddef .Segments {if _eegc ,_dfb =_cdd .Encode (w );_dfb !=nil {return _egd ,_b .Wrap (_dfb ,_afe ,"");
};_egd +=_eegc ;};return _egd ,nil ;};func (_bf *Document )completeClassifiedPages ()(_cg error ){const _fdf ="\u0063\u006f\u006dpl\u0065\u0074\u0065\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0050\u0061\u0067\u0065\u0073";if _bf .Classer ==nil {return nil ;
};_bf ._cb =make ([]int ,_bf .Classer .UndilatedTemplates .Size ());for _ec :=0;_ec < _bf .Classer .ClassIDs .Size ();_ec ++{_ga ,_ge :=_bf .Classer .ClassIDs .Get (_ec );if _ge !=nil {return _b .Wrapf (_ge ,_fdf ,"\u0063\u006c\u0061\u0073s \u0077\u0069\u0074\u0068\u0020\u0069\u0064\u003a\u0020\u0027\u0025\u0064\u0027",_ec );
};_bf ._cb [_ga ]++;};var _gae []int ;for _ed :=0;_ed < _bf .Classer .UndilatedTemplates .Size ();_ed ++{if _bf .NumberOfPages ==1||_bf ._cb [_ed ]> 1{_gae =append (_gae ,_ed );};};var (_ea *Page ;_dee bool ;);for _eef ,_eea :=range *_bf .Classer .ComponentPageNumbers {if _ea ,_dee =_bf .Pages [_eea ];
!_dee {return _b .Errorf (_fdf ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_eef );};if _ea .EncodingMethod ==GenericEM {_d .Log .Error ("\u0047\u0065\u006e\u0065\u0072\u0069c\u0020\u0070\u0061g\u0065\u0020\u0077i\u0074\u0068\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u003a \u0027\u0025\u0064\u0027\u0020ma\u0070\u0070\u0065\u0064\u0020\u0061\u0073\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0020\u0070\u0061\u0067\u0065",_eef );
continue ;};_bf ._de [_eea ]=append (_bf ._de [_eea ],_eef );_ce ,_dfe :=_bf .Classer .ClassIDs .Get (_eef );if _dfe !=nil {return _b .Wrapf (_dfe ,_fdf ,"\u006e\u006f\u0020\u0073uc\u0068\u0020\u0063\u006c\u0061\u0073\u0073\u0049\u0044\u003a\u0020\u0025\u0064",_eef );
};if _bf ._cb [_ce ]==1&&_bf .NumberOfPages !=1{_aeg :=append (_bf ._gg [_eea ],_ce );_bf ._gg [_eea ]=_aeg ;};};if _cg =_bf .Classer .ComputeLLCorners ();_cg !=nil {return _b .Wrap (_cg ,_fdf ,"");};if _ ,_cg =_bf .addSymbolDictionary (0,_bf .Classer .UndilatedTemplates ,_gae ,_bf ._bg ,false );
_cg !=nil {return _b .Wrap (_cg ,_fdf ,"");};return nil ;};func (_gf *Document )AddClassifiedPage (bm *_ef .Bitmap ,method _bd .Method )(_agc error ){const _eb ="\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002e\u0041\u0064d\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064P\u0061\u0067\u0065";
if !_gf .FullHeaders &&_gf .NumberOfPages !=0{return _b .Error (_eb ,"\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0070\u0061\u0067\u0065\u002e\u0020\u0046\u0069\u006c\u0065\u004d\u006f\u0064\u0065\u0020\u0064\u0069\u0073\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0064\u0064i\u006e\u0067\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e \u006f\u006e\u0065\u0020\u0070\u0061g\u0065");
};if _gf .Classer ==nil {if _gf .Classer ,_agc =_bd .Init (_bd .DefaultSettings ());_agc !=nil {return _b .Wrap (_agc ,_eb ,"");};};_dg :=int (_gf .nextPageNumber ());_dgc :=&Page {Segments :[]*_df .Header {},Bitmap :bm ,Document :_gf ,FinalHeight :bm .Height ,FinalWidth :bm .Width ,PageNumber :_dg };
_gf .Pages [_dg ]=_dgc ;switch method {case _bd .RankHaus :_dgc .EncodingMethod =RankHausEM ;case _bd .Correlation :_dgc .EncodingMethod =CorrelationEM ;};_dgc .AddPageInformationSegment ();if _agc =_gf .Classer .AddPage (bm ,_dg ,method );_agc !=nil {return _b .Wrap (_agc ,_eb ,"");
};if _gf .FullHeaders {_dgc .AddEndOfPageSegment ();};return nil ;};func (_gfg *Document )produceClassifiedPage (_gag *Page ,_bc *_df .Header )(_egb error ){const _gb ="p\u0072\u006f\u0064\u0075ce\u0043l\u0061\u0073\u0073\u0069\u0066i\u0065\u0064\u0050\u0061\u0067\u0065";
var _agd map[int ]int ;_cgf :=_gfg ._fe ;_cd :=[]*_df .Header {_bc };if len (_gfg ._gg [_gag .PageNumber ])> 0{_agd =map[int ]int {};_cef ,_eaa :=_gfg .addSymbolDictionary (_gag .PageNumber ,_gfg .Classer .UndilatedTemplates ,_gfg ._gg [_gag .PageNumber ],_agd ,false );
if _eaa !=nil {return _b .Wrap (_eaa ,_gb ,"");};_cd =append (_cd ,_cef );_cgf +=len (_gfg ._gg [_gag .PageNumber ]);};_fde :=_gfg ._de [_gag .PageNumber ];_d .Log .Debug ("P\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020c\u006f\u006d\u0070\u0073: \u0025\u0076",_gag .PageNumber ,_fde );
_gag .addTextRegionSegment (_cd ,_gfg ._bg ,_agd ,_gfg ._de [_gag .PageNumber ],_gfg .Classer .PtaLL ,_gfg .Classer .UndilatedTemplates ,_gfg .Classer .ClassIDs ,nil ,_ac (_cgf ),len (_gfg ._de [_gag .PageNumber ]));return nil ;};func (_cae *Document )isFileHeaderPresent ()(bool ,error ){_cae .InputStream .Mark ();
for _ ,_cga :=range _aa {_gdaa ,_ggc :=_cae .InputStream .ReadByte ();if _ggc !=nil {return false ,_ggc ;};if _cga !=_gdaa {_cae .InputStream .Reset ();return false ,nil ;};};_cae .InputStream .Reset ();return true ,nil ;};func (_cee *Document )mapData ()error {const _dbb ="\u006da\u0070\u0044\u0061\u0074\u0061";
var (_egc []*_df .Header ;_adf int64 ;_egbg _df .Type ;);_deee ,_gbb :=_cee .isFileHeaderPresent ();if _gbb !=nil {return _b .Wrap (_gbb ,_dbb ,"");};if _deee {if _gbb =_cee .parseFileHeader ();_gbb !=nil {return _b .Wrap (_gbb ,_dbb ,"");};_adf +=int64 (_cee ._g );
_cee .FullHeaders =true ;};var (_decf *Page ;_edb bool ;);for _egbg !=51&&!_edb {_adaa ,_eae :=_df .NewHeader (_cee ,_cee .InputStream ,_adf ,_cee .OrganizationType );if _eae !=nil {return _b .Wrap (_eae ,_dbb ,"");};_d .Log .Trace ("\u0044\u0065c\u006f\u0064\u0069\u006eg\u0020\u0073e\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u0075m\u0062\u0065\u0072\u003a\u0020\u0025\u0064\u002c\u0020\u0054\u0079\u0070e\u003a\u0020\u0025\u0073",_adaa .SegmentNumber ,_adaa .Type );
_egbg =_adaa .Type ;if _egbg !=_df .TEndOfFile {if _adaa .PageAssociation !=0{_decf =_cee .Pages [_adaa .PageAssociation ];if _decf ==nil {_decf =_bggb (_cee ,_adaa .PageAssociation );_cee .Pages [_adaa .PageAssociation ]=_decf ;if _cee .NumberOfPagesUnknown {_cee .NumberOfPages ++;
};};_decf .Segments =append (_decf .Segments ,_adaa );}else {_cee .GlobalSegments .AddSegment (_adaa );};};_egc =append (_egc ,_adaa );_adf =_cee .InputStream .StreamPosition ();if _cee .OrganizationType ==_df .OSequential {_adf +=int64 (_adaa .SegmentDataLength );
};_edb ,_eae =_cee .reachedEOF (_adf );if _eae !=nil {_d .Log .Debug ("\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020\u0072\u0065\u0061\u0063h\u0065\u0064\u0020\u0045\u004f\u0046\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_eae );
return _b .Wrap (_eae ,_dbb ,"");};};_cee .determineRandomDataOffsets (_egc ,uint64 (_adf ));return nil ;};func (_bdff *Page )countRegions ()int {var _fegg int ;for _ ,_dbbd :=range _bdff .Segments {switch _dbbd .Type {case 6,7,22,23,38,39,42,43:_fegg ++;
};};return _fegg ;};func (_adc *Document )GetGlobalSegment (i int )(*_df .Header ,error ){_aaea ,_gc :=_adc .GlobalSegments .GetSegment (i );if _gc !=nil {return nil ,_b .Wrap (_gc ,"\u0047\u0065t\u0047\u006c\u006fb\u0061\u006c\u0053\u0065\u0067\u006d\u0065\u006e\u0074","");
};return _aaea ,nil ;};func (_afeb *Page )getCombinationOperator (_fded *_df .PageInformationSegment ,_ccf _ef .CombinationOperator )_ef .CombinationOperator {if _fded .CombinationOperatorOverrideAllowed (){return _ccf ;};return _fded .CombinationOperator ();
};func (_fbb *Page )String ()string {return _e .Sprintf ("\u0050\u0061\u0067\u0065\u0020\u0023\u0025\u0064",_fbb .PageNumber );};