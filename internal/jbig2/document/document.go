//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package document ;import (_f "encoding/binary";_fg "fmt";_eb "github.com/unidoc/unipdf/v3/common";_ef "github.com/unidoc/unipdf/v3/internal/bitwise";_a "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_gf "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";_dg "github.com/unidoc/unipdf/v3/internal/jbig2/document/segments";_da "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/classer";_gd "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_c "io";_g "math";_e "runtime/debug";);func (_bbe *Page )AddEndOfPageSegment (){_acga :=&_dg .Header {Type :_dg .TEndOfPage ,PageAssociation :_bbe .PageNumber };_bbe .Segments =append (_bbe .Segments ,_acga );};func (_fgfg *Page )collectPageStripes ()(_dbg []_dg .Segmenter ,_bca error ){const _gbe ="\u0063o\u006cl\u0065\u0063\u0074\u0050\u0061g\u0065\u0053t\u0072\u0069\u0070\u0065\u0073";var _aab _dg .Segmenter ;for _ ,_gbc :=range _fgfg .Segments {switch _gbc .Type {case 6,7,22,23,38,39,42,43:_aab ,_bca =_gbc .GetSegmentData ();if _bca !=nil {return nil ,_gd .Wrap (_bca ,_gbe ,"");};_dbg =append (_dbg ,_aab );case 50:_aab ,_bca =_gbc .GetSegmentData ();if _bca !=nil {return nil ,_bca ;};_gecc ,_fgbe :=_aab .(*_dg .EndOfStripe );if !_fgbe {return nil ,_gd .Errorf (_gbe ,"\u0045\u006e\u0064\u004f\u0066\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u006f\u0066\u0020\u0076\u0061l\u0069\u0064\u0020\u0074\u0079p\u0065\u003a \u0027\u0025\u0054\u0027",_aab );};_dbg =append (_dbg ,_gecc );_fgfg .FinalHeight =_gecc .LineNumber ();};};return _dbg ,nil ;};func (_fgb *Document )addSymbolDictionary (_fgea int ,_fad *_gf .Bitmaps ,_gfe []int ,_be map[int ]int ,_fgeb bool )(*_dg .Header ,error ){const _gg ="\u0061\u0064\u0064\u0053ym\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079";_ceg :=&_dg .SymbolDictionary {};if _ggf :=_ceg .InitEncode (_fad ,_gfe ,_be ,_fgeb );_ggf !=nil {return nil ,_ggf ;};_bgf :=&_dg .Header {Type :_dg .TSymbolDictionary ,PageAssociation :_fgea ,SegmentData :_ceg };if _fgea ==0{if _fgb .GlobalSegments ==nil {_fgb .GlobalSegments =&Globals {};};_fgb .GlobalSegments .AddSegment (_bgf );return _bgf ,nil ;};_cegf ,_fgf :=_fgb .Pages [_fgea ];if !_fgf {return nil ,_gd .Errorf (_gg ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_fgea );};var (_bfgg int ;_ddb *_dg .Header ;);for _bfgg ,_ddb =range _cegf .Segments {if _ddb .Type ==_dg .TPageInformation {break ;};};_bfgg ++;_cegf .Segments =append (_cegf .Segments ,nil );copy (_cegf .Segments [_bfgg +1:],_cegf .Segments [_bfgg :]);_cegf .Segments [_bfgg ]=_bgf ;return _bgf ,nil ;};func (_fecd *Document )GetGlobalSegment (i int )(*_dg .Header ,error ){_fgda ,_ebff :=_fecd .GlobalSegments .GetSegment (i );if _ebff !=nil {return nil ,_gd .Wrap (_ebff ,"\u0047\u0065t\u0047\u006c\u006fb\u0061\u006c\u0053\u0065\u0067\u006d\u0065\u006e\u0074","");};return _fgda ,nil ;};const (GenericEM EncodingMethod =iota ;CorrelationEM ;RankHausEM ;);func (_cfde *Page )GetResolutionY ()(int ,error ){return _cfde .getResolutionY ()};func InitEncodeDocument (fullHeaders bool )*Document {return &Document {FullHeaders :fullHeaders ,_b :_ef .BufferedMSB (),Pages :map[int ]*Page {},_ag :map[int ][]int {},_cd :map[int ]int {},_ae :map[int ][]int {}};};func _bbf (_dcd _ef .StreamReader ,_ccdb *Globals )(*Document ,error ){_efc :=&Document {Pages :make (map[int ]*Page ),InputStream :_dcd ,OrganizationType :_dg .OSequential ,NumberOfPagesUnknown :true ,GlobalSegments :_ccdb ,_eg :9};if _efc .GlobalSegments ==nil {_efc .GlobalSegments =&Globals {};};if _geg :=_efc .mapData ();_geg !=nil {return nil ,_geg ;};return _efc ,nil ;};func (_ga *Document )completeSymbols ()(_acb error ){const _bfgd ="\u0063o\u006dp\u006c\u0065\u0074\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";if _ga .Classer ==nil {return nil ;};if _ga .Classer .UndilatedTemplates ==nil {return _gd .Error (_bfgd ,"\u006e\u006f t\u0065\u006d\u0070l\u0061\u0074\u0065\u0073 de\u0066in\u0065\u0064\u0020\u0066\u006f\u0072\u0020th\u0065\u0020\u0063\u006c\u0061\u0073\u0073e\u0072");};_ee :=len (_ga .Pages )==1;_dc :=make ([]int ,_ga .Classer .UndilatedTemplates .Size ());var _gdg int ;for _dfe :=0;_dfe < _ga .Classer .ClassIDs .Size ();_dfe ++{_gdg ,_acb =_ga .Classer .ClassIDs .Get (_dfe );if _acb !=nil {return _gd .Wrap (_acb ,_bfgd ,"\u0063\u006c\u0061\u0073\u0073\u0020\u0049\u0044\u0027\u0073");};_dc [_gdg ]++;};var _fcb []int ;for _ebf :=0;_ebf < _ga .Classer .UndilatedTemplates .Size ();_ebf ++{if _dc [_ebf ]==0{return _gd .Error (_bfgd ,"\u006eo\u0020\u0073y\u006d\u0062\u006f\u006cs\u0020\u0069\u006es\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u0066\u006fun\u0064\u0020\u0066o\u0072\u0020g\u0069\u0076\u0065\u006e\u0020\u0063l\u0061\u0073s\u003f\u0020");};if _dc [_ebf ]> 1||_ee {_fcb =append (_fcb ,_ebf );};};_ga ._df =len (_fcb );var _dgc ,_bec int ;for _dab :=0;_dab < _ga .Classer .ComponentPageNumbers .Size ();_dab ++{_dgc ,_acb =_ga .Classer .ComponentPageNumbers .Get (_dab );if _acb !=nil {return _gd .Wrapf (_acb ,_bfgd ,"p\u0061\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027 \u006e\u006f\u0074\u0020\u0066\u006f\u0075nd\u0020\u0069\u006e\u0020t\u0068\u0065\u0020\u0063\u006c\u0061\u0073\u0073\u0065r \u0070\u0061g\u0065\u006e\u0075\u006d\u0062\u0065\u0072\u0073",_dab );};_bec ,_acb =_ga .Classer .ClassIDs .Get (_dab );if _acb !=nil {return _gd .Wrapf (_acb ,_bfgd ,"\u0063\u0061\u006e\u0027\u0074\u0020\u0067e\u0074\u0020\u0073y\u006d\u0062\u006f\u006c \u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0027\u0025\u0064\u0027\u0020\u0066\u0072\u006f\u006d\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072",_dgc );};if _dc [_bec ]==1&&!_ee {_ga ._ag [_dgc ]=append (_ga ._ag [_dgc ],_bec );};};if _acb =_ga .Classer .ComputeLLCorners ();_acb !=nil {return _gd .Wrap (_acb ,_bfgd ,"");};return nil ;};func (_ege *Page )getResolutionX ()(int ,error ){const _faa ="\u0067\u0065\u0074\u0052\u0065\u0073\u006f\u006c\u0075t\u0069\u006f\u006e\u0058";if _ege .ResolutionX !=0{return _ege .ResolutionX ,nil ;};_bgfe :=_ege .getPageInformationSegment ();if _bgfe ==nil {return 0,_gd .Error (_faa ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_dfee ,_deb :=_bgfe .GetSegmentData ();if _deb !=nil {return 0,_gd .Wrap (_deb ,_faa ,"");};_fedd ,_abd :=_dfee .(*_dg .PageInformationSegment );if !_abd {return 0,_gd .Errorf (_faa ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_dfee );};_ege .ResolutionX =_fedd .ResolutionX ;return _ege .ResolutionX ,nil ;};func (_bef *Page )GetWidth ()(int ,error ){return _bef .getWidth ()};func (_feb *Page )getHeight ()(int ,error ){const _dgea ="\u0067e\u0074\u0048\u0065\u0069\u0067\u0068t";if _feb .FinalHeight !=0{return _feb .FinalHeight ,nil ;};_bgd :=_feb .getPageInformationSegment ();if _bgd ==nil {return 0,_gd .Error (_dgea ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_feg ,_ffd :=_bgd .GetSegmentData ();if _ffd !=nil {return 0,_gd .Wrap (_ffd ,_dgea ,"");};_bcc ,_bcg :=_feg .(*_dg .PageInformationSegment );if !_bcg {return 0,_gd .Errorf (_dgea ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_feg );};if _bcc .PageBMHeight ==_g .MaxInt32 {_ ,_ffd =_feb .GetBitmap ();if _ffd !=nil {return 0,_gd .Wrap (_ffd ,_dgea ,"");};}else {_feb .FinalHeight =_bcc .PageBMHeight ;};return _feb .FinalHeight ,nil ;};func (_ede *Globals )GetSegment (segmentNumber int )(*_dg .Header ,error ){const _dca ="\u0047l\u006fb\u0061\u006c\u0073\u002e\u0047e\u0074\u0053e\u0067\u006d\u0065\u006e\u0074";if _ede ==nil {return nil ,_gd .Error (_dca ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_ede .Segments )==0{return nil ,_gd .Error (_dca ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");};var _gad *_dg .Header ;for _ ,_gad =range _ede .Segments {if _gad .SegmentNumber ==uint32 (segmentNumber ){break ;};};if _gad ==nil {return nil ,_gd .Error (_dca ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};return _gad ,nil ;};func (_dge *Page )composePageBitmap ()error {const _dabd ="\u0063\u006f\u006d\u0070\u006f\u0073\u0065\u0050\u0061\u0067\u0065\u0042i\u0074\u006d\u0061\u0070";if _dge .PageNumber ==0{return nil ;};_aec :=_dge .getPageInformationSegment ();if _aec ==nil {return _gd .Error (_dabd ,"\u0070\u0061\u0067e \u0069\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069o\u006e \u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_fadd ,_bea :=_aec .GetSegmentData ();if _bea !=nil {return _bea ;};_bbg ,_dga :=_fadd .(*_dg .PageInformationSegment );if !_dga {return _gd .Error (_dabd ,"\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006da\u0074\u0069\u006f\u006e \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};if _bea =_dge .createPage (_bbg );_bea !=nil {return _gd .Wrap (_bea ,_dabd ,"");};_dge .clearSegmentData ();return nil ;};func _gac (_edc *Document ,_ada int )*Page {return &Page {Document :_edc ,PageNumber :_ada ,Segments :[]*_dg .Header {}};};func (_gdgd *Page )getCombinationOperator (_gdb *_dg .PageInformationSegment ,_bff _gf .CombinationOperator )_gf .CombinationOperator {if _gdb .CombinationOperatorOverrideAllowed (){return _bff ;};return _gdb .CombinationOperator ();};func (_fc *Document )completeClassifiedPages ()(_fd error ){const _cga ="\u0063\u006f\u006dpl\u0065\u0074\u0065\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0050\u0061\u0067\u0065\u0073";if _fc .Classer ==nil {return nil ;};_fc ._ff =make ([]int ,_fc .Classer .UndilatedTemplates .Size ());for _cf :=0;_cf < _fc .Classer .ClassIDs .Size ();_cf ++{_fb ,_ed :=_fc .Classer .ClassIDs .Get (_cf );if _ed !=nil {return _gd .Wrapf (_ed ,_cga ,"\u0063\u006c\u0061\u0073s \u0077\u0069\u0074\u0068\u0020\u0069\u0064\u003a\u0020\u0027\u0025\u0064\u0027",_cf );};_fc ._ff [_fb ]++;};var _ca []int ;for _gb :=0;_gb < _fc .Classer .UndilatedTemplates .Size ();_gb ++{if _fc .NumberOfPages ==1||_fc ._ff [_gb ]> 1{_ca =append (_ca ,_gb );};};var (_ecf *Page ;_cfd bool ;);for _ce ,_agb :=range *_fc .Classer .ComponentPageNumbers {if _ecf ,_cfd =_fc .Pages [_agb ];!_cfd {return _gd .Errorf (_cga ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_ce );};if _ecf .EncodingMethod ==GenericEM {_eb .Log .Error ("\u0047\u0065\u006e\u0065\u0072\u0069c\u0020\u0070\u0061g\u0065\u0020\u0077i\u0074\u0068\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u003a \u0027\u0025\u0064\u0027\u0020ma\u0070\u0070\u0065\u0064\u0020\u0061\u0073\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0020\u0070\u0061\u0067\u0065",_ce );continue ;};_fc ._ae [_agb ]=append (_fc ._ae [_agb ],_ce );_dbf ,_dbfa :=_fc .Classer .ClassIDs .Get (_ce );if _dbfa !=nil {return _gd .Wrapf (_dbfa ,_cga ,"\u006e\u006f\u0020\u0073uc\u0068\u0020\u0063\u006c\u0061\u0073\u0073\u0049\u0044\u003a\u0020\u0025\u0064",_ce );};if _fc ._ff [_dbf ]==1&&_fc .NumberOfPages !=1{_fcc :=append (_fc ._ag [_agb ],_dbf );_fc ._ag [_agb ]=_fcc ;};};if _fd =_fc .Classer .ComputeLLCorners ();_fd !=nil {return _gd .Wrap (_fd ,_cga ,"");};if _ ,_fd =_fc .addSymbolDictionary (0,_fc .Classer .UndilatedTemplates ,_ca ,_fc ._cd ,false );_fd !=nil {return _gd .Wrap (_fd ,_cga ,"");};return nil ;};func (_ceb *Document )encodeFileHeader (_edd _ef .BinaryWriter )(_ebc int ,_adb error ){const _aee ="\u0065\u006ec\u006f\u0064\u0065F\u0069\u006c\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_ebc ,_adb =_edd .Write (_fgd );if _adb !=nil {return _ebc ,_gd .Wrap (_adb ,_aee ,"\u0069\u0064");};if _adb =_edd .WriteByte (0x01);_adb !=nil {return _ebc ,_gd .Wrap (_adb ,_aee ,"\u0066\u006c\u0061g\u0073");};_ebc ++;_aef :=make ([]byte ,4);_f .BigEndian .PutUint32 (_aef ,_ceb .NumberOfPages );_ccb ,_adb :=_edd .Write (_aef );if _adb !=nil {return _ccb ,_gd .Wrap (_adb ,_aee ,"p\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_ebc +=_ccb ;return _ebc ,nil ;};func (_cega *Page )lastSegmentNumber ()(_gcf uint32 ,_bfd error ){const _ggb ="\u006c\u0061\u0073\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";if len (_cega .Segments )==0{return _gcf ,_gd .Errorf (_ggb ,"\u006e\u006f\u0020se\u0067\u006d\u0065\u006e\u0074\u0073\u0020\u0066\u006fu\u006ed\u0020i\u006e \u0074\u0068\u0065\u0020\u0070\u0061\u0067\u0065\u0020\u0027\u0025\u0064\u0027",_cega .PageNumber );};return _cega .Segments [len (_cega .Segments )-1].SegmentNumber ,nil ;};func (_fda *Document )Encode ()(_fe []byte ,_afb error ){const _cda ="\u0044o\u0063u\u006d\u0065\u006e\u0074\u002e\u0045\u006e\u0063\u006f\u0064\u0065";var _fec ,_eeb int ;if _fda .FullHeaders {if _fec ,_afb =_fda .encodeFileHeader (_fda ._b );_afb !=nil {return nil ,_gd .Wrap (_afb ,_cda ,"");};};var (_becf bool ;_acg *_dg .Header ;_gdd *Page ;);if _afb =_fda .completeClassifiedPages ();_afb !=nil {return nil ,_gd .Wrap (_afb ,_cda ,"");};if _afb =_fda .produceClassifiedPages ();_afb !=nil {return nil ,_gd .Wrap (_afb ,_cda ,"");};if _fda .GlobalSegments !=nil {for _ ,_acg =range _fda .GlobalSegments .Segments {if _afb =_fda .encodeSegment (_acg ,&_fec );_afb !=nil {return nil ,_gd .Wrap (_afb ,_cda ,"");};};};for _cb :=1;_cb <=int (_fda .NumberOfPages );_cb ++{if _gdd ,_becf =_fda .Pages [_cb ];!_becf {return nil ,_gd .Errorf (_cda ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_cb );};for _ ,_acg =range _gdd .Segments {if _afb =_fda .encodeSegment (_acg ,&_fec );_afb !=nil {return nil ,_gd .Wrap (_afb ,_cda ,"");};};};if _fda .FullHeaders {if _eeb ,_afb =_fda .encodeEOFHeader (_fda ._b );_afb !=nil {return nil ,_gd .Wrap (_afb ,_cda ,"");};_fec +=_eeb ;};_fe =_fda ._b .Data ();if len (_fe )!=_fec {_eb .Log .Debug ("\u0042\u0079\u0074\u0065\u0073 \u0077\u0072\u0069\u0074\u0074\u0065\u006e \u0028\u006e\u0029\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0065\u0071\u0075\u0061\u006c\u0020\u0074\u006f\u0020\u0074\u0068\u0065\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006f\u0066\u0020t\u0068\u0065\u0020\u0064\u0061\u0074\u0061\u0020\u0065\u006e\u0063\u006fd\u0065\u0064\u003a\u0020\u0027\u0025d\u0027",_fec ,len (_fe ));};return _fe ,nil ;};func (_eca *Document )reachedEOF (_ba int64 )(bool ,error ){const _gddd ="\u0072\u0065\u0061\u0063\u0068\u0065\u0064\u0045\u004f\u0046";_ ,_fdf :=_eca .InputStream .Seek (_ba ,_c .SeekStart );if _fdf !=nil {_eb .Log .Debug ("\u0072\u0065\u0061c\u0068\u0065\u0064\u0045\u004f\u0046\u0020\u002d\u0020\u0064\u002e\u0049\u006e\u0070\u0075\u0074\u0053\u0074\u0072\u0065\u0061\u006d\u002e\u0053\u0065\u0065\u006b\u0020\u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_fdf );return false ,_gd .Wrap (_fdf ,_gddd ,"\u0069n\u0070\u0075\u0074\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020s\u0065\u0065\u006b\u0020\u0066\u0061\u0069\u006c\u0065\u0064");};_ ,_fdf =_eca .InputStream .ReadBits (32);if _fdf ==_c .EOF {return true ,nil ;}else if _fdf !=nil {return false ,_gd .Wrap (_fdf ,_gddd ,"");};return false ,nil ;};func (_fcf *Page )countRegions ()int {var _eded int ;for _ ,_gege :=range _fcf .Segments {switch _gege .Type {case 6,7,22,23,38,39,42,43:_eded ++;};};return _eded ;};type Globals struct{Segments []*_dg .Header ;};func (_gffe *Page )createNormalPage (_ffa *_dg .PageInformationSegment )error {const _ddc ="\u0063\u0072e\u0061\u0074\u0065N\u006f\u0072\u006d\u0061\u006c\u0050\u0061\u0067\u0065";_gffe .Bitmap =_gf .New (_ffa .PageBMWidth ,_ffa .PageBMHeight );if _ffa .DefaultPixelValue ()!=0{_gffe .Bitmap .SetDefaultPixel ();};for _ ,_aea :=range _gffe .Segments {switch _aea .Type {case 6,7,22,23,38,39,42,43:_eb .Log .Trace ("\u0047\u0065\u0074\u0074in\u0067\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0064",_aea .SegmentNumber );_ded ,_agbe :=_aea .GetSegmentData ();if _agbe !=nil {return _agbe ;};_bba ,_aagd :=_ded .(_dg .Regioner );if !_aagd {_eb .Log .Debug ("\u0053\u0065g\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069on\u0065\u0072",_ded );return _gd .Errorf (_ddc ,"i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062i\u0067\u0032\u0020\u0073\u0065\u0067\u006den\u0074\u0020\u0074\u0079p\u0065\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061 R\u0065\u0067i\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_ded );};_efd ,_agbe :=_bba .GetRegionBitmap ();if _agbe !=nil {return _gd .Wrap (_agbe ,_ddc ,"");};if _gffe .fitsPage (_ffa ,_efd ){_gffe .Bitmap =_efd ;}else {_caf :=_bba .GetRegionInfo ();_ccc :=_gffe .getCombinationOperator (_ffa ,_caf .CombinaionOperator );_agbe =_gf .Blit (_efd ,_gffe .Bitmap ,int (_caf .XLocation ),int (_caf .YLocation ),_ccc );if _agbe !=nil {return _gd .Wrap (_agbe ,_ddc ,"");};};};};return nil ;};func (_eef *Globals )AddSegment (segment *_dg .Header ){_eef .Segments =append (_eef .Segments ,segment )};func _fbe (_fge int )int {_egd :=0;_bg :=(_fge &(_fge -1))==0;_fge >>=1;for ;_fge !=0;_fge >>=1{_egd ++;};if _bg {return _egd ;};return _egd +1;};func (_ccd *Document )GetPage (pageNumber int )(_dg .Pager ,error ){const _gff ="\u0044\u006fc\u0075\u006d\u0065n\u0074\u002e\u0047\u0065\u0074\u0050\u0061\u0067\u0065";if pageNumber < 0{_eb .Log .Debug ("\u004a\u0042\u0049\u00472\u0020\u0050\u0061\u0067\u0065\u0020\u002d\u0020\u0047e\u0074\u0050\u0061\u0067\u0065\u003a\u0020\u0025\u0064\u002e\u0020\u0050\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062e\u0020\u006c\u006f\u0077\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0030\u002e\u0020\u0025\u0073",pageNumber ,_e .Stack ());return nil ,_gd .Errorf (_gff ,"\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032\u0020d\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020\u002d\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064 \u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u003a\u0020\u0025\u0064",pageNumber );};if pageNumber > len (_ccd .Pages ){_eb .Log .Debug ("\u0050\u0061\u0067\u0065 n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0064\u002e\u0020%\u0073",pageNumber ,_e .Stack ());return nil ,_gd .Error (_gff ,"\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065n\u0074\u0020\u002d\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};_afd ,_gdf :=_ccd .Pages [pageNumber ];if !_gdf {_eb .Log .Debug ("\u0050\u0061\u0067\u0065 n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0064\u002e\u0020%\u0073",pageNumber ,_e .Stack ());return nil ,_gd .Errorf (_gff ,"\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065n\u0074\u0020\u002d\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};return _afd ,nil ;};func (_fbg *Document )produceClassifiedPage (_dba *Page ,_cc *_dg .Header )(_egb error ){const _bfg ="p\u0072\u006f\u0064\u0075ce\u0043l\u0061\u0073\u0073\u0069\u0066i\u0065\u0064\u0050\u0061\u0067\u0065";var _dbad map[int ]int ;_aed :=_fbg ._df ;_af :=[]*_dg .Header {_cc };if len (_fbg ._ag [_dba .PageNumber ])> 0{_dbad =map[int ]int {};_ac ,_dgf :=_fbg .addSymbolDictionary (_dba .PageNumber ,_fbg .Classer .UndilatedTemplates ,_fbg ._ag [_dba .PageNumber ],_dbad ,false );if _dgf !=nil {return _gd .Wrap (_dgf ,_bfg ,"");};_af =append (_af ,_ac );_aed +=len (_fbg ._ag [_dba .PageNumber ]);};_eba :=_fbg ._ae [_dba .PageNumber ];_eb .Log .Debug ("P\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020c\u006f\u006d\u0070\u0073: \u0025\u0076",_dba .PageNumber ,_eba );_dba .addTextRegionSegment (_af ,_fbg ._cd ,_dbad ,_fbg ._ae [_dba .PageNumber ],_fbg .Classer .PtaLL ,_fbg .Classer .UndilatedTemplates ,_fbg .Classer .ClassIDs ,nil ,_fbe (_aed ),len (_fbg ._ae [_dba .PageNumber ]));return nil ;};func (_dabc *Page )getResolutionY ()(int ,error ){const _eff ="\u0067\u0065\u0074\u0052\u0065\u0073\u006f\u006c\u0075t\u0069\u006f\u006e\u0059";if _dabc .ResolutionY !=0{return _dabc .ResolutionY ,nil ;};_egda :=_dabc .getPageInformationSegment ();if _egda ==nil {return 0,_gd .Error (_eff ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_gfc ,_beg :=_egda .GetSegmentData ();if _beg !=nil {return 0,_gd .Wrap (_beg ,_eff ,"");};_fdaf ,_ccfb :=_gfc .(*_dg .PageInformationSegment );if !_ccfb {return 0,_gd .Errorf (_eff ,"\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0066o\u0072\u006d\u0061ti\u006f\u006e\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0069\u0073\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0074\u0079\u0070\u0065\u003a\u0027%\u0054\u0027",_gfc );};_dabc .ResolutionY =_fdaf .ResolutionY ;return _dabc .ResolutionY ,nil ;};func (_egf *Page )GetResolutionX ()(int ,error ){return _egf .getResolutionX ()};func (_fcg *Document )isFileHeaderPresent ()(bool ,error ){_fcg .InputStream .Mark ();for _ ,_bb :=range _fgd {_aeg ,_gfeg :=_fcg .InputStream .ReadByte ();if _gfeg !=nil {return false ,_gfeg ;};if _bb !=_aeg {_fcg .InputStream .Reset ();return false ,nil ;};};_fcg .InputStream .Reset ();return true ,nil ;};func (_bfga *Page )AddGenericRegion (bm *_gf .Bitmap ,xloc ,yloc ,template int ,tp _dg .Type ,duplicateLineRemoval bool )error {const _dde ="P\u0061\u0067\u0065\u002eAd\u0064G\u0065\u006e\u0065\u0072\u0069c\u0052\u0065\u0067\u0069\u006f\u006e";_bc :=&_dg .GenericRegion {};if _cab :=_bc .InitEncode (bm ,xloc ,yloc ,template ,duplicateLineRemoval );_cab !=nil {return _gd .Wrap (_cab ,_dde ,"");};_abgb :=&_dg .Header {Type :_dg .TImmediateGenericRegion ,PageAssociation :_bfga .PageNumber ,SegmentData :_bc };_bfga .Segments =append (_bfga .Segments ,_abgb );return nil ;};func (_gaf *Page )clearSegmentData (){for _dec :=range _gaf .Segments {_gaf .Segments [_dec ].CleanSegmentData ();};};func (_ge *Document )AddGenericPage (bm *_gf .Bitmap ,duplicateLineRemoval bool )(_gc error ){const _db ="\u0044\u006f\u0063um\u0065\u006e\u0074\u002e\u0041\u0064\u0064\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0050\u0061\u0067\u0065";if !_ge .FullHeaders &&_ge .NumberOfPages !=0{return _gd .Error (_db ,"\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0070\u0061\u0067\u0065\u002e\u0020\u0046\u0069\u006c\u0065\u004d\u006f\u0064\u0065\u0020\u0064\u0069\u0073\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0064\u0064i\u006e\u0067\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e \u006f\u006e\u0065\u0020\u0070\u0061g\u0065");};_cg :=&Page {Segments :[]*_dg .Header {},Bitmap :bm ,Document :_ge ,FinalHeight :bm .Height ,FinalWidth :bm .Width ,IsLossless :true };_cg .PageNumber =int (_ge .nextPageNumber ());_ge .Pages [_cg .PageNumber ]=_cg ;_cg .AddPageInformationSegment ();if _gc =_cg .AddGenericRegion (bm ,0,0,0,_dg .TImmediateGenericRegion ,duplicateLineRemoval );_gc !=nil {return _gd .Wrap (_gc ,_db ,"");};if _ge .FullHeaders {_cg .AddEndOfPageSegment ();};return nil ;};func (_adbe *Page )fitsPage (_fadde *_dg .PageInformationSegment ,_edce *_gf .Bitmap )bool {return _adbe .countRegions ()==1&&_fadde .DefaultPixelValue ()==0&&_fadde .PageBMWidth ==_edce .Width &&_fadde .PageBMHeight ==_edce .Height ;};func DecodeDocument (input _ef .StreamReader ,globals *Globals )(*Document ,error ){return _bbf (input ,globals );};func (_ecd *Document )nextPageNumber ()uint32 {_ecd .NumberOfPages ++;return _ecd .NumberOfPages };func (_ece *Page )addTextRegionSegment (_ebe []*_dg .Header ,_fgeag ,_cee map[int ]int ,_fedb []int ,_eead *_gf .Points ,_gec *_gf .Bitmaps ,_ace *_a .IntSlice ,_bcba *_gf .Boxes ,_bfa ,_abag int ){_fga :=&_dg .TextRegion {NumberOfSymbols :uint32 (_abag )};_fga .InitEncode (_fgeag ,_cee ,_fedb ,_eead ,_gec ,_ace ,_bcba ,_ece .FinalWidth ,_ece .FinalHeight ,_bfa );_cgg :=&_dg .Header {RTSegments :_ebe ,SegmentData :_fga ,PageAssociation :_ece .PageNumber ,Type :_dg .TImmediateTextRegion };_dcdd :=_dg .TPageInformation ;if _cee !=nil {_dcdd =_dg .TSymbolDictionary ;};var _ccdd int ;for ;_ccdd < len (_ece .Segments );_ccdd ++{if _ece .Segments [_ccdd ].Type ==_dcdd {_ccdd ++;break ;};};_ece .Segments =append (_ece .Segments ,nil );copy (_ece .Segments [_ccdd +1:],_ece .Segments [_ccdd :]);_ece .Segments [_ccdd ]=_cgg ;};func (_bgbac *Page )createStripedPage (_cbad *_dg .PageInformationSegment )error {const _fgdc ="\u0063\u0072\u0065\u0061\u0074\u0065\u0053\u0074\u0072\u0069\u0070\u0065d\u0050\u0061\u0067\u0065";_dae ,_cdc :=_bgbac .collectPageStripes ();if _cdc !=nil {return _gd .Wrap (_cdc ,_fgdc ,"");};var _ccde int ;for _ ,_bcd :=range _dae {if _cec ,_gdcg :=_bcd .(*_dg .EndOfStripe );_gdcg {_ccde =_cec .LineNumber ()+1;}else {_ade :=_bcd .(_dg .Regioner );_gee :=_ade .GetRegionInfo ();_fbeb :=_bgbac .getCombinationOperator (_cbad ,_gee .CombinaionOperator );_dbc ,_becb :=_ade .GetRegionBitmap ();if _becb !=nil {return _gd .Wrap (_becb ,_fgdc ,"");};_becb =_gf .Blit (_dbc ,_bgbac .Bitmap ,int (_gee .XLocation ),_ccde ,_fbeb );if _becb !=nil {return _gd .Wrap (_becb ,_fgdc ,"");};};};return nil ;};func (_dfb *Document )encodeEOFHeader (_cfe _ef .BinaryWriter )(_ebfb int ,_gae error ){_cdad :=&_dg .Header {SegmentNumber :_dfb .nextSegmentNumber (),Type :_dg .TEndOfFile };if _ebfb ,_gae =_cdad .Encode (_cfe );_gae !=nil {return 0,_gd .Wrap (_gae ,"\u0065n\u0063o\u0064\u0065\u0045\u004f\u0046\u0048\u0065\u0061\u0064\u0065\u0072","");};return _ebfb ,nil ;};func (_bgba *Page )createPage (_ffc *_dg .PageInformationSegment )error {var _fca error ;if !_ffc .IsStripe ||_ffc .PageBMHeight !=-1{_fca =_bgba .createNormalPage (_ffc );}else {_fca =_bgba .createStripedPage (_ffc );};return _fca ;};type Page struct{Segments []*_dg .Header ;PageNumber int ;Bitmap *_gf .Bitmap ;FinalHeight int ;FinalWidth int ;ResolutionX int ;ResolutionY int ;IsLossless bool ;Document *Document ;FirstSegmentNumber int ;EncodingMethod EncodingMethod ;};func (_cae *Document )nextSegmentNumber ()uint32 {_cfc :=_cae .CurrentSegmentNumber ;_cae .CurrentSegmentNumber ++;return _cfc ;};func (_gdde *Page )nextSegmentNumber ()uint32 {return _gdde .Document .nextSegmentNumber ()};func (_dcf *Document )mapData ()error {const _ebb ="\u006da\u0070\u0044\u0061\u0074\u0061";var (_fcge []*_dg .Header ;_ced int64 ;_dcc _dg .Type ;);_cdaf ,_eea :=_dcf .isFileHeaderPresent ();if _eea !=nil {return _gd .Wrap (_eea ,_ebb ,"");};if _cdaf {if _eea =_dcf .parseFileHeader ();_eea !=nil {return _gd .Wrap (_eea ,_ebb ,"");};_ced +=int64 (_dcf ._eg );_dcf .FullHeaders =true ;};var (_gbgg *Page ;_ggfb bool ;);for _dcc !=51&&!_ggfb {_fbf ,_gef :=_dg .NewHeader (_dcf ,_dcf .InputStream ,_ced ,_dcf .OrganizationType );if _gef !=nil {return _gd .Wrap (_gef ,_ebb ,"");};_eb .Log .Trace ("\u0044\u0065c\u006f\u0064\u0069\u006eg\u0020\u0073e\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u0075m\u0062\u0065\u0072\u003a\u0020\u0025\u0064\u002c\u0020\u0054\u0079\u0070e\u003a\u0020\u0025\u0073",_fbf .SegmentNumber ,_fbf .Type );_dcc =_fbf .Type ;if _dcc !=_dg .TEndOfFile {if _fbf .PageAssociation !=0{_gbgg =_dcf .Pages [_fbf .PageAssociation ];if _gbgg ==nil {_gbgg =_gac (_dcf ,_fbf .PageAssociation );_dcf .Pages [_fbf .PageAssociation ]=_gbgg ;if _dcf .NumberOfPagesUnknown {_dcf .NumberOfPages ++;};};_gbgg .Segments =append (_gbgg .Segments ,_fbf );}else {_dcf .GlobalSegments .AddSegment (_fbf );};};_fcge =append (_fcge ,_fbf );_ced =_dcf .InputStream .StreamPosition ();if _dcf .OrganizationType ==_dg .OSequential {_ced +=int64 (_fbf .SegmentDataLength );};_ggfb ,_gef =_dcf .reachedEOF (_ced );if _gef !=nil {_eb .Log .Debug ("\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020\u0072\u0065\u0061\u0063h\u0065\u0064\u0020\u0045\u004f\u0046\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_gef );return _gd .Wrap (_gef ,_ebb ,"");};};_dcf .determineRandomDataOffsets (_fcge ,uint64 (_ced ));return nil ;};var _fgd =[]byte {0x97,0x4A,0x42,0x32,0x0D,0x0A,0x1A,0x0A};func (_bgc *Page )Encode (w _ef .BinaryWriter )(_acbb int ,_ccf error ){const _fgdd ="P\u0061\u0067\u0065\u002e\u0045\u006e\u0063\u006f\u0064\u0065";var _fab int ;for _ ,_afc :=range _bgc .Segments {if _fab ,_ccf =_afc .Encode (w );_ccf !=nil {return _acbb ,_gd .Wrap (_ccf ,_fgdd ,"");};_acbb +=_fab ;};return _acbb ,nil ;};func (_ggc *Document )GetNumberOfPages ()(uint32 ,error ){if _ggc .NumberOfPagesUnknown ||_ggc .NumberOfPages ==0{if len (_ggc .Pages )==0{if _aba :=_ggc .mapData ();_aba !=nil {return 0,_gd .Wrap (_aba ,"\u0044o\u0063\u0075\u006d\u0065n\u0074\u002e\u0047\u0065\u0074N\u0075m\u0062e\u0072\u004f\u0066\u0050\u0061\u0067\u0065s","");};};return uint32 (len (_ggc .Pages )),nil ;};return _ggc .NumberOfPages ,nil ;};func (_dfa *Document )parseFileHeader ()error {const _fde ="\u0070a\u0072s\u0065\u0046\u0069\u006c\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_ ,_dgg :=_dfa .InputStream .Seek (8,_c .SeekStart );if _dgg !=nil {return _gd .Wrap (_dgg ,_fde ,"\u0069\u0064");};_ ,_dgg =_dfa .InputStream .ReadBits (5);if _dgg !=nil {return _gd .Wrap (_dgg ,_fde ,"\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074\u0073");};_fed ,_dgg :=_dfa .InputStream .ReadBit ();if _dgg !=nil {return _gd .Wrap (_dgg ,_fde ,"\u0065x\u0074e\u006e\u0064\u0065\u0064\u0020t\u0065\u006dp\u006c\u0061\u0074\u0065\u0073");};if _fed ==1{_dfa .GBUseExtTemplate =true ;};_fed ,_dgg =_dfa .InputStream .ReadBit ();if _dgg !=nil {return _gd .Wrap (_dgg ,_fde ,"\u0075\u006e\u006b\u006eow\u006e\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};if _fed !=1{_dfa .NumberOfPagesUnknown =false ;};_fed ,_dgg =_dfa .InputStream .ReadBit ();if _dgg !=nil {return _gd .Wrap (_dgg ,_fde ,"\u006f\u0072\u0067\u0061\u006e\u0069\u007a\u0061\u0074\u0069\u006f\u006e \u0074\u0079\u0070\u0065");};_dfa .OrganizationType =_dg .OrganizationType (_fed );if !_dfa .NumberOfPagesUnknown {_dfa .NumberOfPages ,_dgg =_dfa .InputStream .ReadUint32 ();if _dgg !=nil {return _gd .Wrap (_dgg ,_fde ,"\u006eu\u006db\u0065\u0072\u0020\u006f\u0066\u0020\u0070\u0061\u0067\u0065\u0073");};_dfa ._eg =13;};return nil ;};func (_bcf *Page )getWidth ()(int ,error ){const _cecb ="\u0067\u0065\u0074\u0057\u0069\u0064\u0074\u0068";if _bcf .FinalWidth !=0{return _bcf .FinalWidth ,nil ;};_acd :=_bcf .getPageInformationSegment ();if _acd ==nil {return 0,_gd .Error (_cecb ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_ebgg ,_gafb :=_acd .GetSegmentData ();if _gafb !=nil {return 0,_gd .Wrap (_gafb ,_cecb ,"");};_fgebd ,_ebd :=_ebgg .(*_dg .PageInformationSegment );if !_ebd {return 0,_gd .Errorf (_cecb ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_ebgg );};_bcf .FinalWidth =_fgebd .PageBMWidth ;return _bcf .FinalWidth ,nil ;};func (_aa *Globals )GetSegmentByIndex (index int )(*_dg .Header ,error ){const _aefa ="\u0047l\u006f\u0062\u0061\u006cs\u002e\u0047\u0065\u0074\u0053e\u0067m\u0065n\u0074\u0042\u0079\u0049\u006e\u0064\u0065x";if _aa ==nil {return nil ,_gd .Error (_aefa ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_aa .Segments )==0{return nil ,_gd .Error (_aefa ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");};if index > len (_aa .Segments )-1{return nil ,_gd .Error (_aefa ,"\u0069n\u0064e\u0078\u0020\u006f\u0075\u0074 \u006f\u0066 \u0072\u0061\u006e\u0067\u0065");};return _aa .Segments [index ],nil ;};func (_gcg *Document )produceClassifiedPages ()(_egg error ){const _cgb ="\u0070\u0072\u006f\u0064uc\u0065\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0050\u0061\u0067e\u0073";if _gcg .Classer ==nil {return nil ;};var (_bd *Page ;_fa bool ;_bf *_dg .Header ;);for _ddg :=1;_ddg <=int (_gcg .NumberOfPages );_ddg ++{if _bd ,_fa =_gcg .Pages [_ddg ];!_fa {return _gd .Errorf (_cgb ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_ddg );};if _bd .EncodingMethod ==GenericEM {continue ;};if _bf ==nil {if _bf ,_egg =_gcg .GlobalSegments .GetSymbolDictionary ();_egg !=nil {return _gd .Wrap (_egg ,_cgb ,"");};};if _egg =_gcg .produceClassifiedPage (_bd ,_bf );_egg !=nil {return _gd .Wrapf (_egg ,_cgb ,"\u0070\u0061\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027",_ddg );};};return nil ;};func (_ged *Page )getPageInformationSegment ()*_dg .Header {for _ ,_gafg :=range _ged .Segments {if _gafg .Type ==_dg .TPageInformation {return _gafg ;};};_eb .Log .Debug ("\u0050\u0061\u0067\u0065\u0020\u0069\u006e\u0066o\u0072\u006d\u0061ti\u006f\u006e\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0066o\u0072\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0073\u002e",_ged );return nil ;};func (_gdc *Document )determineRandomDataOffsets (_gddf []*_dg .Header ,_cba uint64 ){if _gdc .OrganizationType !=_dg .ORandom {return ;};for _ ,_cge :=range _gddf {_cge .SegmentDataStartOffset =_cba ;_cba +=_cge .SegmentDataLength ;};};func (_fba *Document )encodeSegment (_ad *_dg .Header ,_fef *int )error {const _gbg ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074";_ad .SegmentNumber =_fba .nextSegmentNumber ();_gba ,_dce :=_ad .Encode (_fba ._b );if _dce !=nil {return _gd .Wrapf (_dce ,_gbg ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_ad .SegmentNumber );};*_fef +=_gba ;return nil ;};func (_aag *Page )GetBitmap ()(_gccg *_gf .Bitmap ,_agc error ){_eb .Log .Trace (_fg .Sprintf ("\u005b\u0050\u0041G\u0045\u005d\u005b\u0023%\u0064\u005d\u0020\u0047\u0065\u0074\u0042i\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e",_aag .PageNumber ));defer func (){if _agc !=nil {_eb .Log .Trace (_fg .Sprintf ("\u005b\u0050\u0041\u0047\u0045\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074B\u0069t\u006d\u0061\u0070\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_aag .PageNumber ,_agc ));}else {_eb .Log .Trace (_fg .Sprintf ("\u005b\u0050\u0041\u0047\u0045\u005d\u005b\u0023\u0025\u0064]\u0020\u0047\u0065\u0074\u0042\u0069\u0074m\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064",_aag .PageNumber ));};}();if _aag .Bitmap !=nil {return _aag .Bitmap ,nil ;};_agc =_aag .composePageBitmap ();if _agc !=nil {return nil ,_agc ;};return _aag .Bitmap ,nil ;};func (_eae *Globals )GetSymbolDictionary ()(*_dg .Header ,error ){const _fce ="G\u006c\u006f\u0062\u0061\u006c\u0073.\u0047\u0065\u0074\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079";if _eae ==nil {return nil ,_gd .Error (_fce ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_eae .Segments )==0{return nil ,_gd .Error (_fce ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");};for _ ,_gfd :=range _eae .Segments {if _gfd .Type ==_dg .TSymbolDictionary {return _gfd ,nil ;};};return nil ,_gd .Error (_fce ,"\u0067\u006c\u006fba\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020d\u0069c\u0074i\u006fn\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};func (_gdcb *Page )GetHeight ()(int ,error ){return _gdcb .getHeight ()};type EncodingMethod int ;func (_bcb *Page )AddPageInformationSegment (){_agd :=&_dg .PageInformationSegment {PageBMWidth :_bcb .FinalWidth ,PageBMHeight :_bcb .FinalHeight ,ResolutionX :_bcb .ResolutionX ,ResolutionY :_bcb .ResolutionY ,IsLossless :_bcb .IsLossless };_fcd :=&_dg .Header {PageAssociation :_bcb .PageNumber ,SegmentDataLength :uint64 (_agd .Size ()),SegmentData :_agd ,Type :_dg .TPageInformation };_bcb .Segments =append (_bcb .Segments ,_fcd );};func (_fdec *Page )String ()string {return _fg .Sprintf ("\u0050\u0061\u0067\u0065\u0020\u0023\u0025\u0064",_fdec .PageNumber );};func (_ggg *Page )GetSegment (number int )(*_dg .Header ,error ){const _bdg ="\u0050a\u0067e\u002e\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074";for _ ,_cac :=range _ggg .Segments {if _cac .SegmentNumber ==uint32 (number ){return _cac ,nil ;};};_eebf :=make ([]uint32 ,len (_ggg .Segments ));for _eed ,_dgd :=range _ggg .Segments {_eebf [_eed ]=_dgd .SegmentNumber ;};return nil ,_gd .Errorf (_bdg ,"\u0073e\u0067\u006d\u0065n\u0074\u0020\u0077i\u0074h \u006e\u0075\u006d\u0062\u0065\u0072\u003a \u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0070\u0061\u0067\u0065\u003a\u0020'%\u0064'\u002e\u0020\u004b\u006e\u006f\u0077n\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u003a \u0025\u0076",number ,_ggg .PageNumber ,_eebf );};type Document struct{Pages map[int ]*Page ;NumberOfPagesUnknown bool ;NumberOfPages uint32 ;GBUseExtTemplate bool ;InputStream _ef .StreamReader ;GlobalSegments *Globals ;OrganizationType _dg .OrganizationType ;Classer *_da .Classer ;XRes ,YRes int ;FullHeaders bool ;CurrentSegmentNumber uint32 ;AverageTemplates *_gf .Bitmaps ;BaseIndexes []int ;Refinement bool ;RefineLevel int ;_eg uint8 ;_b *_ef .BufferedWriter ;EncodeGlobals bool ;_df int ;_ag map[int ][]int ;_ae map[int ][]int ;_ff []int ;_cd map[int ]int ;};func (_efg *Document )AddClassifiedPage (bm *_gf .Bitmap ,method _da .Method )(_ec error ){const _ea ="\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002e\u0041\u0064d\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064P\u0061\u0067\u0065";if !_efg .FullHeaders &&_efg .NumberOfPages !=0{return _gd .Error (_ea ,"\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0070\u0061\u0067\u0065\u002e\u0020\u0046\u0069\u006c\u0065\u004d\u006f\u0064\u0065\u0020\u0064\u0069\u0073\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0064\u0064i\u006e\u0067\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e \u006f\u006e\u0065\u0020\u0070\u0061g\u0065");};if _efg .Classer ==nil {if _efg .Classer ,_ec =_da .Init (_da .DefaultSettings ());_ec !=nil {return _gd .Wrap (_ec ,_ea ,"");};};_dd :=int (_efg .nextPageNumber ());_gcc :=&Page {Segments :[]*_dg .Header {},Bitmap :bm ,Document :_efg ,FinalHeight :bm .Height ,FinalWidth :bm .Width ,PageNumber :_dd };_efg .Pages [_dd ]=_gcc ;switch method {case _da .RankHaus :_gcc .EncodingMethod =RankHausEM ;case _da .Correlation :_gcc .EncodingMethod =CorrelationEM ;};_gcc .AddPageInformationSegment ();if _ec =_efg .Classer .AddPage (bm ,_dd ,method );_ec !=nil {return _gd .Wrap (_ec ,_ea ,"");};if _efg .FullHeaders {_gcc .AddEndOfPageSegment ();};return nil ;};