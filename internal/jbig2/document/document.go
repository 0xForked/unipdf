//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package document ;import (_a "encoding/binary";_ed "fmt";_ag "github.com/unidoc/unipdf/v3/common";_ea "github.com/unidoc/unipdf/v3/internal/bitwise";_f "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_ad "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";
_ada "github.com/unidoc/unipdf/v3/internal/jbig2/document/segments";_agf "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/classer";_cd "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_af "io";_c "math";_b "runtime/debug";);func (_cac *Page )collectPageStripes ()(_fff []_ada .Segmenter ,_add error ){const _cce ="\u0063o\u006cl\u0065\u0063\u0074\u0050\u0061g\u0065\u0053t\u0072\u0069\u0070\u0065\u0073";
var _eebg _ada .Segmenter ;for _ ,_abdd :=range _cac .Segments {switch _abdd .Type {case 6,7,22,23,38,39,42,43:_eebg ,_add =_abdd .GetSegmentData ();if _add !=nil {return nil ,_cd .Wrap (_add ,_cce ,"");};_fff =append (_fff ,_eebg );case 50:_eebg ,_add =_abdd .GetSegmentData ();
if _add !=nil {return nil ,_add ;};_cfc ,_cee :=_eebg .(*_ada .EndOfStripe );if !_cee {return nil ,_cd .Errorf (_cce ,"\u0045\u006e\u0064\u004f\u0066\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u006f\u0066\u0020\u0076\u0061l\u0069\u0064\u0020\u0074\u0079p\u0065\u003a \u0027\u0025\u0054\u0027",_eebg );
};_fff =append (_fff ,_cfc );_cac .FinalHeight =_cfc .LineNumber ();};};return _fff ,nil ;};func (_ge *Document )completeClassifiedPages ()(_gg error ){const _ac ="\u0063\u006f\u006dpl\u0065\u0074\u0065\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0050\u0061\u0067\u0065\u0073";
if _ge .Classer ==nil {return nil ;};_ge ._fb =make ([]int ,_ge .Classer .UndilatedTemplates .Size ());for _bdc :=0;_bdc < _ge .Classer .ClassIDs .Size ();_bdc ++{_agfe ,_fg :=_ge .Classer .ClassIDs .Get (_bdc );if _fg !=nil {return _cd .Wrapf (_fg ,_ac ,"\u0063\u006c\u0061\u0073s \u0077\u0069\u0074\u0068\u0020\u0069\u0064\u003a\u0020\u0027\u0025\u0064\u0027",_bdc );
};_ge ._fb [_agfe ]++;};var _dc []int ;for _eb :=0;_eb < _ge .Classer .UndilatedTemplates .Size ();_eb ++{if _ge .NumberOfPages ==1||_ge ._fb [_eb ]> 1{_dc =append (_dc ,_eb );};};var (_bdg *Page ;_acd bool ;);for _ggc ,_da :=range *_ge .Classer .ComponentPageNumbers {if _bdg ,_acd =_ge .Pages [_da ];
!_acd {return _cd .Errorf (_ac ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_ggc );};if _bdg .EncodingMethod ==GenericEM {_ag .Log .Error ("\u0047\u0065\u006e\u0065\u0072\u0069c\u0020\u0070\u0061g\u0065\u0020\u0077i\u0074\u0068\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u003a \u0027\u0025\u0064\u0027\u0020ma\u0070\u0070\u0065\u0064\u0020\u0061\u0073\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0020\u0070\u0061\u0067\u0065",_ggc );
continue ;};_ge ._gc [_da ]=append (_ge ._gc [_da ],_ggc );_gcb ,_ae :=_ge .Classer .ClassIDs .Get (_ggc );if _ae !=nil {return _cd .Wrapf (_ae ,_ac ,"\u006e\u006f\u0020\u0073uc\u0068\u0020\u0063\u006c\u0061\u0073\u0073\u0049\u0044\u003a\u0020\u0025\u0064",_ggc );
};if _ge ._fb [_gcb ]==1&&_ge .NumberOfPages !=1{_ef :=append (_ge ._g [_da ],_gcb );_ge ._g [_da ]=_ef ;};};if _gg =_ge .Classer .ComputeLLCorners ();_gg !=nil {return _cd .Wrap (_gg ,_ac ,"");};if _ ,_gg =_ge .addSymbolDictionary (0,_ge .Classer .UndilatedTemplates ,_dc ,_ge ._adb ,false );
_gg !=nil {return _cd .Wrap (_gg ,_ac ,"");};return nil ;};func (_dag *Globals )AddSegment (segment *_ada .Header ){_dag .Segments =append (_dag .Segments ,segment )};func (_edef *Page )AddGenericRegion (bm *_ad .Bitmap ,xloc ,yloc ,template int ,tp _ada .Type ,duplicateLineRemoval bool )error {const _aeb ="P\u0061\u0067\u0065\u002eAd\u0064G\u0065\u006e\u0065\u0072\u0069c\u0052\u0065\u0067\u0069\u006f\u006e";
_dfd :=&_ada .GenericRegion {};if _bee :=_dfd .InitEncode (bm ,xloc ,yloc ,template ,duplicateLineRemoval );_bee !=nil {return _cd .Wrap (_bee ,_aeb ,"");};_ddg :=&_ada .Header {Type :_ada .TImmediateGenericRegion ,PageAssociation :_edef .PageNumber ,SegmentData :_dfd };
_edef .Segments =append (_edef .Segments ,_ddg );return nil ;};func (_ga *Document )produceClassifiedPage (_efg *Page ,_cbb *_ada .Header )(_afb error ){const _ede ="p\u0072\u006f\u0064\u0075ce\u0043l\u0061\u0073\u0073\u0069\u0066i\u0065\u0064\u0050\u0061\u0067\u0065";
var _cef map[int ]int ;_adf :=_ga ._ff ;_ebc :=[]*_ada .Header {_cbb };if len (_ga ._g [_efg .PageNumber ])> 0{_cef =map[int ]int {};_aa ,_fce :=_ga .addSymbolDictionary (_efg .PageNumber ,_ga .Classer .UndilatedTemplates ,_ga ._g [_efg .PageNumber ],_cef ,false );
if _fce !=nil {return _cd .Wrap (_fce ,_ede ,"");};_ebc =append (_ebc ,_aa );_adf +=len (_ga ._g [_efg .PageNumber ]);};_bg :=_ga ._gc [_efg .PageNumber ];_ag .Log .Debug ("P\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020c\u006f\u006d\u0070\u0073: \u0025\u0076",_efg .PageNumber ,_bg );
_efg .addTextRegionSegment (_ebc ,_ga ._adb ,_cef ,_ga ._gc [_efg .PageNumber ],_ga .Classer .PtaLL ,_ga .Classer .UndilatedTemplates ,_ga .Classer .ClassIDs ,nil ,_bgd (_adf ),len (_ga ._gc [_efg .PageNumber ]));return nil ;};func (_dgg *Document )determineRandomDataOffsets (_cbc []*_ada .Header ,_bcbd uint64 ){if _dgg .OrganizationType !=_ada .ORandom {return ;
};for _ ,_agfg :=range _cbc {_agfg .SegmentDataStartOffset =_bcbd ;_bcbd +=_agfg .SegmentDataLength ;};};type Globals struct{Segments []*_ada .Header ;};func (_bbcf *Page )getCombinationOperator (_bfb *_ada .PageInformationSegment ,_dbf _ad .CombinationOperator )_ad .CombinationOperator {if _bfb .CombinationOperatorOverrideAllowed (){return _dbf ;
};return _bfb .CombinationOperator ();};func (_bef *Document )parseFileHeader ()error {const _fced ="\u0070a\u0072s\u0065\u0046\u0069\u006c\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_ ,_ggf :=_bef .InputStream .Seek (8,_af .SeekStart );if _ggf !=nil {return _cd .Wrap (_ggf ,_fced ,"\u0069\u0064");
};_ ,_ggf =_bef .InputStream .ReadBits (5);if _ggf !=nil {return _cd .Wrap (_ggf ,_fced ,"\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074\u0073");};_bcd ,_ggf :=_bef .InputStream .ReadBit ();if _ggf !=nil {return _cd .Wrap (_ggf ,_fced ,"\u0065x\u0074e\u006e\u0064\u0065\u0064\u0020t\u0065\u006dp\u006c\u0061\u0074\u0065\u0073");
};if _bcd ==1{_bef .GBUseExtTemplate =true ;};_bcd ,_ggf =_bef .InputStream .ReadBit ();if _ggf !=nil {return _cd .Wrap (_ggf ,_fced ,"\u0075\u006e\u006b\u006eow\u006e\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};if _bcd !=1{_bef .NumberOfPagesUnknown =false ;
};_bcd ,_ggf =_bef .InputStream .ReadBit ();if _ggf !=nil {return _cd .Wrap (_ggf ,_fced ,"\u006f\u0072\u0067\u0061\u006e\u0069\u007a\u0061\u0074\u0069\u006f\u006e \u0074\u0079\u0070\u0065");};_bef .OrganizationType =_ada .OrganizationType (_bcd );if !_bef .NumberOfPagesUnknown {_bef .NumberOfPages ,_ggf =_bef .InputStream .ReadUint32 ();
if _ggf !=nil {return _cd .Wrap (_ggf ,_fced ,"\u006eu\u006db\u0065\u0072\u0020\u006f\u0066\u0020\u0070\u0061\u0067\u0065\u0073");};_bef ._edg =13;};return nil ;};func InitEncodeDocument (fullHeaders bool )*Document {return &Document {FullHeaders :fullHeaders ,_fa :_ea .BufferedMSB (),Pages :map[int ]*Page {},_g :map[int ][]int {},_adb :map[int ]int {},_gc :map[int ][]int {}};
};func _bgd (_bga int )int {_gcbd :=0;_cg :=(_bga &(_bga -1))==0;_bga >>=1;for ;_bga !=0;_bga >>=1{_gcbd ++;};if _cg {return _gcbd ;};return _gcbd +1;};func (_bgda *Document )mapData ()error {const _ffg ="\u006da\u0070\u0044\u0061\u0074\u0061";var (_agdb []*_ada .Header ;
_ebgg int64 ;_gge _ada .Type ;);_afg ,_ebb :=_bgda .isFileHeaderPresent ();if _ebb !=nil {return _cd .Wrap (_ebb ,_ffg ,"");};if _afg {if _ebb =_bgda .parseFileHeader ();_ebb !=nil {return _cd .Wrap (_ebb ,_ffg ,"");};_ebgg +=int64 (_bgda ._edg );_bgda .FullHeaders =true ;
};var (_abd *Page ;_efaa bool ;);for _gge !=51&&!_efaa {_afcc ,_agfge :=_ada .NewHeader (_bgda ,_bgda .InputStream ,_ebgg ,_bgda .OrganizationType );if _agfge !=nil {return _cd .Wrap (_agfge ,_ffg ,"");};_ag .Log .Trace ("\u0044\u0065c\u006f\u0064\u0069\u006eg\u0020\u0073e\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u0075m\u0062\u0065\u0072\u003a\u0020\u0025\u0064\u002c\u0020\u0054\u0079\u0070e\u003a\u0020\u0025\u0073",_afcc .SegmentNumber ,_afcc .Type );
_gge =_afcc .Type ;if _gge !=_ada .TEndOfFile {if _afcc .PageAssociation !=0{_abd =_bgda .Pages [_afcc .PageAssociation ];if _abd ==nil {_abd =_agfea (_bgda ,_afcc .PageAssociation );_bgda .Pages [_afcc .PageAssociation ]=_abd ;if _bgda .NumberOfPagesUnknown {_bgda .NumberOfPages ++;
};};_abd .Segments =append (_abd .Segments ,_afcc );}else {_bgda .GlobalSegments .AddSegment (_afcc );};};_agdb =append (_agdb ,_afcc );_ebgg =_bgda .InputStream .StreamPosition ();if _bgda .OrganizationType ==_ada .OSequential {_ebgg +=int64 (_afcc .SegmentDataLength );
};_efaa ,_agfge =_bgda .reachedEOF (_ebgg );if _agfge !=nil {_ag .Log .Debug ("\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020\u0072\u0065\u0061\u0063h\u0065\u0064\u0020\u0045\u004f\u0046\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_agfge );
return _cd .Wrap (_agfge ,_ffg ,"");};};_bgda .determineRandomDataOffsets (_agdb ,uint64 (_ebgg ));return nil ;};func (_abc *Page )createNormalPage (_gfe *_ada .PageInformationSegment )error {const _aeca ="\u0063\u0072e\u0061\u0074\u0065N\u006f\u0072\u006d\u0061\u006c\u0050\u0061\u0067\u0065";
_abc .Bitmap =_ad .New (_gfe .PageBMWidth ,_gfe .PageBMHeight );if _gfe .DefaultPixelValue !=0{_abc .Bitmap .SetDefaultPixel ();};for _ ,_geg :=range _abc .Segments {switch _geg .Type {case 6,7,22,23,38,39,42,43:_ag .Log .Trace ("\u0047\u0065\u0074\u0074in\u0067\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0064",_geg .SegmentNumber );
_agad ,_fdc :=_geg .GetSegmentData ();if _fdc !=nil {return _fdc ;};_adaa ,_eee :=_agad .(_ada .Regioner );if !_eee {_ag .Log .Debug ("\u0053\u0065g\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069on\u0065\u0072",_agad );
return _cd .Errorf (_aeca ,"i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062i\u0067\u0032\u0020\u0073\u0065\u0067\u006den\u0074\u0020\u0074\u0079p\u0065\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061 R\u0065\u0067i\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_agad );
};_bab ,_fdc :=_adaa .GetRegionBitmap ();if _fdc !=nil {return _cd .Wrap (_fdc ,_aeca ,"");};if _abc .fitsPage (_gfe ,_bab ){_abc .Bitmap =_bab ;}else {_bgce :=_adaa .GetRegionInfo ();_cggb :=_abc .getCombinationOperator (_gfe ,_bgce .CombinaionOperator );
_fdc =_ad .Blit (_bab ,_abc .Bitmap ,int (_bgce .XLocation ),int (_bgce .YLocation ),_cggb );if _fdc !=nil {return _cd .Wrap (_fdc ,_aeca ,"");};};};};return nil ;};type Document struct{Pages map[int ]*Page ;NumberOfPagesUnknown bool ;NumberOfPages uint32 ;
GBUseExtTemplate bool ;InputStream _ea .StreamReader ;GlobalSegments *Globals ;OrganizationType _ada .OrganizationType ;Classer *_agf .Classer ;XRes ,YRes int ;FullHeaders bool ;CurrentSegmentNumber uint32 ;AverageTemplates *_ad .Bitmaps ;BaseIndexes []int ;
Refinement bool ;RefineLevel int ;_edg uint8 ;_fa *_ea .BufferedWriter ;EncodeGlobals bool ;_ff int ;_g map[int ][]int ;_gc map[int ][]int ;_fb []int ;_adb map[int ]int ;};func (_fcd *Document )GetGlobalSegment (i int )(*_ada .Header ,error ){_ee ,_ba :=_fcd .GlobalSegments .GetSegment (i );
if _ba !=nil {return nil ,_cd .Wrap (_ba ,"\u0047\u0065t\u0047\u006c\u006fb\u0061\u006c\u0053\u0065\u0067\u006d\u0065\u006e\u0074","");};return _ee ,nil ;};func (_fcg *Page )fitsPage (_ffe *_ada .PageInformationSegment ,_afa *_ad .Bitmap )bool {return _fcg .countRegions ()==1&&_ffe .DefaultPixelValue ==0&&_ffe .PageBMWidth ==_afa .Width &&_ffe .PageBMHeight ==_afa .Height ;
};func (_bc *Document )addSymbolDictionary (_eg int ,_fd *_ad .Bitmaps ,_ebca []int ,_ec map[int ]int ,_fbd bool )(*_ada .Header ,error ){const _acg ="\u0061\u0064\u0064\u0053ym\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079";
_dge :=&_ada .SymbolDictionary {};if _bcb :=_dge .InitEncode (_fd ,_ebca ,_ec ,_fbd );_bcb !=nil {return nil ,_bcb ;};_efa :=&_ada .Header {Type :_ada .TSymbolDictionary ,PageAssociation :_eg ,SegmentData :_dge };if _eg ==0{if _bc .GlobalSegments ==nil {_bc .GlobalSegments =&Globals {};
};_bc .GlobalSegments .AddSegment (_efa );return _efa ,nil ;};_adbe ,_ege :=_bc .Pages [_eg ];if !_ege {return nil ,_cd .Errorf (_acg ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_eg );};var (_ab int ;
_gdc *_ada .Header ;);for _ab ,_gdc =range _adbe .Segments {if _gdc .Type ==_ada .TPageInformation {break ;};};_ab ++;_adbe .Segments =append (_adbe .Segments ,nil );copy (_adbe .Segments [_ab +1:],_adbe .Segments [_ab :]);_adbe .Segments [_ab ]=_efa ;
return _efa ,nil ;};func (_gf *Document )AddGenericPage (bm *_ad .Bitmap ,duplicateLineRemoval bool )(_gcg error ){const _bd ="\u0044\u006f\u0063um\u0065\u006e\u0074\u002e\u0041\u0064\u0064\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0050\u0061\u0067\u0065";
if !_gf .FullHeaders &&_gf .NumberOfPages !=0{return _cd .Error (_bd ,"\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0070\u0061\u0067\u0065\u002e\u0020\u0046\u0069\u006c\u0065\u004d\u006f\u0064\u0065\u0020\u0064\u0069\u0073\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0064\u0064i\u006e\u0067\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e \u006f\u006e\u0065\u0020\u0070\u0061g\u0065");
};_gd :=&Page {Segments :[]*_ada .Header {},Bitmap :bm ,Document :_gf ,FinalHeight :bm .Height ,FinalWidth :bm .Width ,IsLossless :true ,BlackIsOne :bm .Color ==_ad .Chocolate };_gd .PageNumber =int (_gf .nextPageNumber ());_gf .Pages [_gd .PageNumber ]=_gd ;
bm .InverseData ();_gd .AddPageInformationSegment ();if _gcg =_gd .AddGenericRegion (bm ,0,0,0,_ada .TImmediateGenericRegion ,duplicateLineRemoval );_gcg !=nil {return _cd .Wrap (_gcg ,_bd ,"");};if _gf .FullHeaders {_gd .AddEndOfPageSegment ();};return nil ;
};func _beff (_ffd _ea .StreamReader ,_agfgc *Globals )(*Document ,error ){_eeb :=&Document {Pages :make (map[int ]*Page ),InputStream :_ffd ,OrganizationType :_ada .OSequential ,NumberOfPagesUnknown :true ,GlobalSegments :_agfgc ,_edg :9};if _eeb .GlobalSegments ==nil {_eeb .GlobalSegments =&Globals {};
};if _ccf :=_eeb .mapData ();_ccf !=nil {return nil ,_ccf ;};return _eeb ,nil ;};func (_gfc *Document )nextSegmentNumber ()uint32 {_dafe :=_gfc .CurrentSegmentNumber ;_gfc .CurrentSegmentNumber ++;return _dafe ;};func (_bf *Document )produceClassifiedPages ()(_cb error ){const _dg ="\u0070\u0072\u006f\u0064uc\u0065\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0050\u0061\u0067e\u0073";
if _bf .Classer ==nil {return nil ;};var (_eaf *Page ;_gdb bool ;_dca *_ada .Header ;);for _ceg :=1;_ceg <=int (_bf .NumberOfPages );_ceg ++{if _eaf ,_gdb =_bf .Pages [_ceg ];!_gdb {return _cd .Errorf (_dg ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_ceg );
};if _eaf .EncodingMethod ==GenericEM {continue ;};if _dca ==nil {if _dca ,_cb =_bf .GlobalSegments .GetSymbolDictionary ();_cb !=nil {return _cd .Wrap (_cb ,_dg ,"");};};if _cb =_bf .produceClassifiedPage (_eaf ,_dca );_cb !=nil {return _cd .Wrapf (_cb ,_dg ,"\u0070\u0061\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027",_ceg );
};};return nil ;};func (_gaa *Document )reachedEOF (_ged int64 )(bool ,error ){const _ecd ="\u0072\u0065\u0061\u0063\u0068\u0065\u0064\u0045\u004f\u0046";_ ,_gee :=_gaa .InputStream .Seek (_ged ,_af .SeekStart );if _gee !=nil {_ag .Log .Debug ("\u0072\u0065\u0061c\u0068\u0065\u0064\u0045\u004f\u0046\u0020\u002d\u0020\u0064\u002e\u0049\u006e\u0070\u0075\u0074\u0053\u0074\u0072\u0065\u0061\u006d\u002e\u0053\u0065\u0065\u006b\u0020\u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_gee );
return false ,_cd .Wrap (_gee ,_ecd ,"\u0069n\u0070\u0075\u0074\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020s\u0065\u0065\u006b\u0020\u0066\u0061\u0069\u006c\u0065\u0064");};_ ,_gee =_gaa .InputStream .ReadBits (32);if _gee ==_af .EOF {return true ,nil ;
}else if _gee !=nil {return false ,_cd .Wrap (_gee ,_ecd ,"");};return false ,nil ;};func _agfea (_dgd *Document ,_eag int )*Page {return &Page {Document :_dgd ,PageNumber :_eag ,Segments :[]*_ada .Header {}};};var _d =[]byte {0x97,0x4A,0x42,0x32,0x0D,0x0A,0x1A,0x0A};
func (_daf *Document )encodeSegment (_gcc *_ada .Header ,_faf *int )error {const _ead ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074";_gcc .SegmentNumber =_daf .nextSegmentNumber ();_ebg ,_agc :=_gcc .Encode (_daf ._fa );
if _agc !=nil {return _cd .Wrapf (_agc ,_ead ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_gcc .SegmentNumber );};*_faf +=_ebg ;return nil ;};func (_bgf *Document )GetNumberOfPages ()(uint32 ,error ){if _bgf .NumberOfPagesUnknown ||_bgf .NumberOfPages ==0{if len (_bgf .Pages )==0{if _ca :=_bgf .mapData ();
_ca !=nil {return 0,_cd .Wrap (_ca ,"\u0044o\u0063\u0075\u006d\u0065n\u0074\u002e\u0047\u0065\u0074N\u0075m\u0062e\u0072\u004f\u0066\u0050\u0061\u0067\u0065s","");};};return uint32 (len (_bgf .Pages )),nil ;};return _bgf .NumberOfPages ,nil ;};func (_fdb *Document )Encode ()(_dfc []byte ,_be error ){const _bea ="\u0044o\u0063u\u006d\u0065\u006e\u0074\u002e\u0045\u006e\u0063\u006f\u0064\u0065";
var _db ,_ecc int ;if _fdb .FullHeaders {if _db ,_be =_fdb .encodeFileHeader (_fdb ._fa );_be !=nil {return nil ,_cd .Wrap (_be ,_bea ,"");};};var (_de bool ;_ffc *_ada .Header ;_gb *Page ;);if _be =_fdb .completeClassifiedPages ();_be !=nil {return nil ,_cd .Wrap (_be ,_bea ,"");
};if _be =_fdb .produceClassifiedPages ();_be !=nil {return nil ,_cd .Wrap (_be ,_bea ,"");};if _fdb .GlobalSegments !=nil {for _ ,_ffc =range _fdb .GlobalSegments .Segments {if _be =_fdb .encodeSegment (_ffc ,&_db );_be !=nil {return nil ,_cd .Wrap (_be ,_bea ,"");
};};};for _fae :=1;_fae <=int (_fdb .NumberOfPages );_fae ++{if _gb ,_de =_fdb .Pages [_fae ];!_de {return nil ,_cd .Errorf (_bea ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_fae );};for _ ,_ffc =range _gb .Segments {if _be =_fdb .encodeSegment (_ffc ,&_db );
_be !=nil {return nil ,_cd .Wrap (_be ,_bea ,"");};};};if _fdb .FullHeaders {if _ecc ,_be =_fdb .encodeEOFHeader (_fdb ._fa );_be !=nil {return nil ,_cd .Wrap (_be ,_bea ,"");};_db +=_ecc ;};_dfc =_fdb ._fa .Data ();if len (_dfc )!=_db {_ag .Log .Debug ("\u0042\u0079\u0074\u0065\u0073 \u0077\u0072\u0069\u0074\u0074\u0065\u006e \u0028\u006e\u0029\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0065\u0071\u0075\u0061\u006c\u0020\u0074\u006f\u0020\u0074\u0068\u0065\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006f\u0066\u0020t\u0068\u0065\u0020\u0064\u0061\u0074\u0061\u0020\u0065\u006e\u0063\u006fd\u0065\u0064\u003a\u0020\u0027\u0025d\u0027",_db ,len (_dfc ));
};return _dfc ,nil ;};func (_cbg *Page )AddEndOfPageSegment (){_dd :=&_ada .Header {Type :_ada .TEndOfPage ,PageAssociation :_cbg .PageNumber };_cbg .Segments =append (_cbg .Segments ,_dd );};func (_ccbf *Page )getHeight ()(int ,error ){const _agb ="\u0067e\u0074\u0048\u0065\u0069\u0067\u0068t";
if _ccbf .FinalHeight !=0{return _ccbf .FinalHeight ,nil ;};_abg :=_ccbf .getPageInformationSegment ();if _abg ==nil {return 0,_cd .Error (_agb ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_daba ,_bfef :=_abg .GetSegmentData ();
if _bfef !=nil {return 0,_cd .Wrap (_bfef ,_agb ,"");};_bdb ,_caed :=_daba .(*_ada .PageInformationSegment );if !_caed {return 0,_cd .Errorf (_agb ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_daba );
};if _bdb .PageBMHeight ==_c .MaxInt32 {_ ,_bfef =_ccbf .GetBitmap ();if _bfef !=nil {return 0,_cd .Wrap (_bfef ,_agb ,"");};}else {_ccbf .FinalHeight =_bdb .PageBMHeight ;};return _ccbf .FinalHeight ,nil ;};func (_ggbb *Page )composePageBitmap ()error {const _cde ="\u0063\u006f\u006d\u0070\u006f\u0073\u0065\u0050\u0061\u0067\u0065\u0042i\u0074\u006d\u0061\u0070";
if _ggbb .PageNumber ==0{return nil ;};_agg :=_ggbb .getPageInformationSegment ();if _agg ==nil {return _cd .Error (_cde ,"\u0070\u0061\u0067e \u0069\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069o\u006e \u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
};_ffdd ,_dac :=_agg .GetSegmentData ();if _dac !=nil {return _dac ;};_gga ,_faec :=_ffdd .(*_ada .PageInformationSegment );if !_faec {return _cd .Error (_cde ,"\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006da\u0074\u0069\u006f\u006e \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");
};if _dac =_ggbb .createPage (_gga );_dac !=nil {return _cd .Wrap (_dac ,_cde ,"");};_ggbb .clearSegmentData ();return nil ;};func (_ggg *Page )GetSegment (number int )(*_ada .Header ,error ){const _dbg ="\u0050a\u0067e\u002e\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074";
for _ ,_ggcb :=range _ggg .Segments {if _ggcb .SegmentNumber ==uint32 (number ){return _ggcb ,nil ;};};_fge :=make ([]uint32 ,len (_ggg .Segments ));for _aef ,_dgeea :=range _ggg .Segments {_fge [_aef ]=_dgeea .SegmentNumber ;};return nil ,_cd .Errorf (_dbg ,"\u0073e\u0067\u006d\u0065n\u0074\u0020\u0077i\u0074h \u006e\u0075\u006d\u0062\u0065\u0072\u003a \u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0070\u0061\u0067\u0065\u003a\u0020'%\u0064'\u002e\u0020\u004b\u006e\u006f\u0077n\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u003a \u0025\u0076",number ,_ggg .PageNumber ,_fge );
};func (_bgc *Page )addTextRegionSegment (_gfb []*_ada .Header ,_gdg ,_cdg map[int ]int ,_beee []int ,_aecd *_ad .Points ,_gea *_ad .Bitmaps ,_ggb *_f .IntSlice ,_dgf *_ad .Boxes ,_gag ,_gacg int ){_dba :=&_ada .TextRegion {NumberOfSymbols :uint32 (_gacg )};
_dba .InitEncode (_gdg ,_cdg ,_beee ,_aecd ,_gea ,_ggb ,_dgf ,_bgc .FinalWidth ,_bgc .FinalHeight ,_gag );_cgg :=&_ada .Header {RTSegments :_gfb ,SegmentData :_dba ,PageAssociation :_bgc .PageNumber ,Type :_ada .TImmediateTextRegion };_dec :=_ada .TPageInformation ;
if _cdg !=nil {_dec =_ada .TSymbolDictionary ;};var _gede int ;for ;_gede < len (_bgc .Segments );_gede ++{if _bgc .Segments [_gede ].Type ==_dec {_gede ++;break ;};};_bgc .Segments =append (_bgc .Segments ,nil );copy (_bgc .Segments [_gede +1:],_bgc .Segments [_gede :]);
_bgc .Segments [_gede ]=_cgg ;};func (_faa *Globals )GetSegmentByIndex (index int )(*_ada .Header ,error ){const _bff ="\u0047l\u006f\u0062\u0061\u006cs\u002e\u0047\u0065\u0074\u0053e\u0067m\u0065n\u0074\u0042\u0079\u0049\u006e\u0064\u0065x";if _faa ==nil {return nil ,_cd .Error (_bff ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};if len (_faa .Segments )==0{return nil ,_cd .Error (_bff ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");};if index > len (_faa .Segments )-1{return nil ,_cd .Error (_bff ,"\u0069n\u0064e\u0078\u0020\u006f\u0075\u0074 \u006f\u0066 \u0072\u0061\u006e\u0067\u0065");
};return _faa .Segments [index ],nil ;};func (_bb *Page )createPage (_egc *_ada .PageInformationSegment )error {var _faad error ;if !_egc .IsStripe ||_egc .PageBMHeight !=-1{_faad =_bb .createNormalPage (_egc );}else {_faad =_bb .createStripedPage (_egc );
};return _faad ;};func (_gce *Page )Encode (w _ea .BinaryWriter )(_aaf int ,_ecdd error ){const _gdce ="P\u0061\u0067\u0065\u002e\u0045\u006e\u0063\u006f\u0064\u0065";var _fac int ;for _ ,_ggde :=range _gce .Segments {if _fac ,_ecdd =_ggde .Encode (w );
_ecdd !=nil {return _aaf ,_cd .Wrap (_ecdd ,_gdce ,"");};_aaf +=_fac ;};return _aaf ,nil ;};func (_aca *Page )getResolutionY ()(int ,error ){const _efgf ="\u0067\u0065\u0074\u0052\u0065\u0073\u006f\u006c\u0075t\u0069\u006f\u006e\u0059";if _aca .ResolutionY !=0{return _aca .ResolutionY ,nil ;
};_afea :=_aca .getPageInformationSegment ();if _afea ==nil {return 0,_cd .Error (_efgf ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_cecb ,_bgg :=_afea .GetSegmentData ();if _bgg !=nil {return 0,_cd .Wrap (_bgg ,_efgf ,"");
};_bggg ,_fea :=_cecb .(*_ada .PageInformationSegment );if !_fea {return 0,_cd .Errorf (_efgf ,"\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0066o\u0072\u006d\u0061ti\u006f\u006e\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0069\u0073\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0074\u0079\u0070\u0065\u003a\u0027%\u0054\u0027",_cecb );
};_aca .ResolutionY =_bggg .ResolutionY ;return _aca .ResolutionY ,nil ;};func (_dgeg *Page )GetResolutionY ()(int ,error ){return _dgeg .getResolutionY ()};func (_cae *Page )GetBitmap ()(_cag *_ad .Bitmap ,_fgc error ){_ag .Log .Trace (_ed .Sprintf ("\u005b\u0050\u0041G\u0045\u005d\u005b\u0023%\u0064\u005d\u0020\u0047\u0065\u0074\u0042i\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e",_cae .PageNumber ));
defer func (){if _fgc !=nil {_ag .Log .Trace (_ed .Sprintf ("\u005b\u0050\u0041\u0047\u0045\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074B\u0069t\u006d\u0061\u0070\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_cae .PageNumber ,_fgc ));
}else {_ag .Log .Trace (_ed .Sprintf ("\u005b\u0050\u0041\u0047\u0045\u005d\u005b\u0023\u0025\u0064]\u0020\u0047\u0065\u0074\u0042\u0069\u0074m\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064",_cae .PageNumber ));};}();if _cae .Bitmap !=nil {return _cae .Bitmap ,nil ;
};_fgc =_cae .composePageBitmap ();if _fgc !=nil {return nil ,_fgc ;};return _cae .Bitmap ,nil ;};func (_gfcf *Page )GetHeight ()(int ,error ){return _gfcf .getHeight ()};func (_agd *Document )AddClassifiedPage (bm *_ad .Bitmap ,method _agf .Method )(_eab error ){const _fc ="\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002e\u0041\u0064d\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064P\u0061\u0067\u0065";
if !_agd .FullHeaders &&_agd .NumberOfPages !=0{return _cd .Error (_fc ,"\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0070\u0061\u0067\u0065\u002e\u0020\u0046\u0069\u006c\u0065\u004d\u006f\u0064\u0065\u0020\u0064\u0069\u0073\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0064\u0064i\u006e\u0067\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e \u006f\u006e\u0065\u0020\u0070\u0061g\u0065");
};if _agd .Classer ==nil {if _agd .Classer ,_eab =_agf .Init (_agf .DefaultSettings ());_eab !=nil {return _cd .Wrap (_eab ,_fc ,"");};};_afc :=int (_agd .nextPageNumber ());_ce :=&Page {Segments :[]*_ada .Header {},Bitmap :bm ,Document :_agd ,FinalHeight :bm .Height ,FinalWidth :bm .Width ,PageNumber :_afc };
_agd .Pages [_afc ]=_ce ;switch method {case _agf .RankHaus :_ce .EncodingMethod =RankHausEM ;case _agf .Correlation :_ce .EncodingMethod =CorrelationEM ;};_ce .AddPageInformationSegment ();if _eab =_agd .Classer .AddPage (bm ,_afc ,method );_eab !=nil {return _cd .Wrap (_eab ,_fc ,"");
};if _agd .FullHeaders {_ce .AddEndOfPageSegment ();};return nil ;};func (_bbg *Page )nextSegmentNumber ()uint32 {return _bbg .Document .nextSegmentNumber ()};func (_fgfg *Page )GetWidth ()(int ,error ){return _fgfg .getWidth ()};func DecodeDocument (input _ea .StreamReader ,globals *Globals )(*Document ,error ){return _beff (input ,globals );
};func (_ggff *Page )clearSegmentData (){for _adg :=range _ggff .Segments {_ggff .Segments [_adg ].CleanSegmentData ();};};func (_bag *Page )getWidth ()(int ,error ){const _bgfd ="\u0067\u0065\u0074\u0057\u0069\u0064\u0074\u0068";if _bag .FinalWidth !=0{return _bag .FinalWidth ,nil ;
};_dccb :=_bag .getPageInformationSegment ();if _dccb ==nil {return 0,_cd .Error (_bgfd ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_gda ,_eabb :=_dccb .GetSegmentData ();if _eabb !=nil {return 0,_cd .Wrap (_eabb ,_bgfd ,"");
};_gcec ,_bdga :=_gda .(*_ada .PageInformationSegment );if !_bdga {return 0,_cd .Errorf (_bgfd ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_gda );
};_bag .FinalWidth =_gcec .PageBMWidth ;return _bag .FinalWidth ,nil ;};func (_dfa *Globals )GetSymbolDictionary ()(*_ada .Header ,error ){const _gac ="G\u006c\u006f\u0062\u0061\u006c\u0073.\u0047\u0065\u0074\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079";
if _dfa ==nil {return nil ,_cd .Error (_gac ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_dfa .Segments )==0{return nil ,_cd .Error (_gac ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");
};for _ ,_eff :=range _dfa .Segments {if _eff .Type ==_ada .TSymbolDictionary {return _eff ,nil ;};};return nil ,_cd .Error (_gac ,"\u0067\u006c\u006fba\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020d\u0069c\u0074i\u006fn\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
};func (_cbcb *Document )encodeFileHeader (_fbdg _ea .BinaryWriter )(_dab int ,_edf error ){const _def ="\u0065\u006ec\u006f\u0064\u0065F\u0069\u006c\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_dab ,_edf =_fbdg .Write (_d );if _edf !=nil {return _dab ,_cd .Wrap (_edf ,_def ,"\u0069\u0064");
};if _edf =_fbdg .WriteByte (0x01);_edf !=nil {return _dab ,_cd .Wrap (_edf ,_def ,"\u0066\u006c\u0061g\u0073");};_dab ++;_cba :=make ([]byte ,4);_a .BigEndian .PutUint32 (_cba ,_cbcb .NumberOfPages );_adfd ,_edf :=_fbdg .Write (_cba );if _edf !=nil {return _adfd ,_cd .Wrap (_edf ,_def ,"p\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");
};_dab +=_adfd ;return _dab ,nil ;};func (_gef *Document )nextPageNumber ()uint32 {_gef .NumberOfPages ++;return _gef .NumberOfPages };func (_ced *Document )completeSymbols ()(_cdb error ){const _eae ="\u0063o\u006dp\u006c\u0065\u0074\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
if _ced .Classer ==nil {return nil ;};if _ced .Classer .UndilatedTemplates ==nil {return _cd .Error (_eae ,"\u006e\u006f t\u0065\u006d\u0070l\u0061\u0074\u0065\u0073 de\u0066in\u0065\u0064\u0020\u0066\u006f\u0072\u0020th\u0065\u0020\u0063\u006c\u0061\u0073\u0073e\u0072");
};_cf :=len (_ced .Pages )==1;_ggd :=make ([]int ,_ced .Classer .UndilatedTemplates .Size ());var _fdf int ;for _ebf :=0;_ebf < _ced .Classer .ClassIDs .Size ();_ebf ++{_fdf ,_cdb =_ced .Classer .ClassIDs .Get (_ebf );if _cdb !=nil {return _cd .Wrap (_cdb ,_eae ,"\u0063\u006c\u0061\u0073\u0073\u0020\u0049\u0044\u0027\u0073");
};_ggd [_fdf ]++;};var _dgee []int ;for _df :=0;_df < _ced .Classer .UndilatedTemplates .Size ();_df ++{if _ggd [_df ]==0{return _cd .Error (_eae ,"\u006eo\u0020\u0073y\u006d\u0062\u006f\u006cs\u0020\u0069\u006es\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u0066\u006fun\u0064\u0020\u0066o\u0072\u0020g\u0069\u0076\u0065\u006e\u0020\u0063l\u0061\u0073s\u003f\u0020");
};if _ggd [_df ]> 1||_cf {_dgee =append (_dgee ,_df );};};_ced ._ff =len (_dgee );var _cgf ,_fad int ;for _bgb :=0;_bgb < _ced .Classer .ComponentPageNumbers .Size ();_bgb ++{_cgf ,_cdb =_ced .Classer .ComponentPageNumbers .Get (_bgb );if _cdb !=nil {return _cd .Wrapf (_cdb ,_eae ,"p\u0061\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027 \u006e\u006f\u0074\u0020\u0066\u006f\u0075nd\u0020\u0069\u006e\u0020t\u0068\u0065\u0020\u0063\u006c\u0061\u0073\u0073\u0065r \u0070\u0061g\u0065\u006e\u0075\u006d\u0062\u0065\u0072\u0073",_bgb );
};_fad ,_cdb =_ced .Classer .ClassIDs .Get (_bgb );if _cdb !=nil {return _cd .Wrapf (_cdb ,_eae ,"\u0063\u0061\u006e\u0027\u0074\u0020\u0067e\u0074\u0020\u0073y\u006d\u0062\u006f\u006c \u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0027\u0025\u0064\u0027\u0020\u0066\u0072\u006f\u006d\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072",_cgf );
};if _ggd [_fad ]==1&&!_cf {_ced ._g [_cgf ]=append (_ced ._g [_cgf ],_fad );};};if _cdb =_ced .Classer .ComputeLLCorners ();_cdb !=nil {return _cd .Wrap (_cdb ,_eae ,"");};return nil ;};func (_gaf *Page )getPageInformationSegment ()*_ada .Header {for _ ,_adfe :=range _gaf .Segments {if _adfe .Type ==_ada .TPageInformation {return _adfe ;
};};_ag .Log .Debug ("\u0050\u0061\u0067\u0065\u0020\u0069\u006e\u0066o\u0072\u006d\u0061ti\u006f\u006e\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0066o\u0072\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0073\u002e",_gaf );
return nil ;};func (_aad *Document )encodeEOFHeader (_fgf _ea .BinaryWriter )(_cec int ,_acc error ){_baca :=&_ada .Header {SegmentNumber :_aad .nextSegmentNumber (),Type :_ada .TEndOfFile };if _cec ,_acc =_baca .Encode (_fgf );_acc !=nil {return 0,_cd .Wrap (_acc ,"\u0065n\u0063o\u0064\u0065\u0045\u004f\u0046\u0048\u0065\u0061\u0064\u0065\u0072","");
};return _cec ,nil ;};func (_bfa *Page )getResolutionX ()(int ,error ){const _ggbe ="\u0067\u0065\u0074\u0052\u0065\u0073\u006f\u006c\u0075t\u0069\u006f\u006e\u0058";if _bfa .ResolutionX !=0{return _bfa .ResolutionX ,nil ;};_eeg :=_bfa .getPageInformationSegment ();
if _eeg ==nil {return 0,_cd .Error (_ggbe ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_addg ,_ebbcb :=_eeg .GetSegmentData ();if _ebbcb !=nil {return 0,_cd .Wrap (_ebbcb ,_ggbe ,"");};_aecae ,_feg :=_addg .(*_ada .PageInformationSegment );
if !_feg {return 0,_cd .Errorf (_ggbe ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_addg );
};_bfa .ResolutionX =_aecae .ResolutionX ;return _bfa .ResolutionX ,nil ;};const (GenericEM EncodingMethod =iota ;CorrelationEM ;RankHausEM ;);func (_aac *Page )createStripedPage (_dbe *_ada .PageInformationSegment )error {const _abb ="\u0063\u0072\u0065\u0061\u0074\u0065\u0053\u0074\u0072\u0069\u0070\u0065d\u0050\u0061\u0067\u0065";
_dgeb ,_abbb :=_aac .collectPageStripes ();if _abbb !=nil {return _cd .Wrap (_abbb ,_abb ,"");};var _dcc int ;for _ ,_ceb :=range _dgeb {if _ebcg ,_dfdc :=_ceb .(*_ada .EndOfStripe );_dfdc {_dcc =_ebcg .LineNumber ()+1;}else {_bcg :=_ceb .(_ada .Regioner );
_cefe :=_bcg .GetRegionInfo ();_ebbc :=_aac .getCombinationOperator (_dbe ,_cefe .CombinaionOperator );_edeb ,_bbc :=_bcg .GetRegionBitmap ();if _bbc !=nil {return _cd .Wrap (_bbc ,_abb ,"");};_bbc =_ad .Blit (_edeb ,_aac .Bitmap ,int (_cefe .XLocation ),_dcc ,_ebbc );
if _bbc !=nil {return _cd .Wrap (_bbc ,_abb ,"");};};};return nil ;};func (_gdf *Page )AddPageInformationSegment (){_ecce :=&_ada .PageInformationSegment {PageBMWidth :_gdf .FinalWidth ,PageBMHeight :_gdf .FinalHeight ,ResolutionX :_gdf .ResolutionX ,ResolutionY :_gdf .ResolutionY ,IsLossless :_gdf .IsLossless };
if _gdf .BlackIsOne {_ecce .DefaultPixelValue =uint8 (0x1);};_ade :=&_ada .Header {PageAssociation :_gdf .PageNumber ,SegmentDataLength :uint64 (_ecce .Size ()),SegmentData :_ecce ,Type :_ada .TPageInformation };_gdf .Segments =append (_gdf .Segments ,_ade );
};type Page struct{Segments []*_ada .Header ;PageNumber int ;Bitmap *_ad .Bitmap ;FinalHeight int ;FinalWidth int ;ResolutionX int ;ResolutionY int ;IsLossless bool ;Document *Document ;FirstSegmentNumber int ;EncodingMethod EncodingMethod ;BlackIsOne bool ;
};func (_ece *Page )GetResolutionX ()(int ,error ){return _ece .getResolutionX ()};func (_gbe *Globals )GetSegment (segmentNumber int )(*_ada .Header ,error ){const _dage ="\u0047l\u006fb\u0061\u006c\u0073\u002e\u0047e\u0074\u0053e\u0067\u006d\u0065\u006e\u0074";
if _gbe ==nil {return nil ,_cd .Error (_dage ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_gbe .Segments )==0{return nil ,_cd .Error (_dage ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");
};var _eca *_ada .Header ;for _ ,_eca =range _gbe .Segments {if _eca .SegmentNumber ==uint32 (segmentNumber ){break ;};};if _eca ==nil {return nil ,_cd .Error (_dage ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};return _eca ,nil ;};func (_aab *Document )GetPage (pageNumber int )(_ada .Pager ,error ){const _aec ="\u0044\u006fc\u0075\u006d\u0065n\u0074\u002e\u0047\u0065\u0074\u0050\u0061\u0067\u0065";if pageNumber < 0{_ag .Log .Debug ("\u004a\u0042\u0049\u00472\u0020\u0050\u0061\u0067\u0065\u0020\u002d\u0020\u0047e\u0074\u0050\u0061\u0067\u0065\u003a\u0020\u0025\u0064\u002e\u0020\u0050\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062e\u0020\u006c\u006f\u0077\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0030\u002e\u0020\u0025\u0073",pageNumber ,_b .Stack ());
return nil ,_cd .Errorf (_aec ,"\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032\u0020d\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020\u002d\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064 \u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u003a\u0020\u0025\u0064",pageNumber );
};if pageNumber > len (_aab .Pages ){_ag .Log .Debug ("\u0050\u0061\u0067\u0065 n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0064\u002e\u0020%\u0073",pageNumber ,_b .Stack ());return nil ,_cd .Error (_aec ,"\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065n\u0074\u0020\u002d\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};_fca ,_afe :=_aab .Pages [pageNumber ];if !_afe {_ag .Log .Debug ("\u0050\u0061\u0067\u0065 n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0064\u002e\u0020%\u0073",pageNumber ,_b .Stack ());return nil ,_cd .Errorf (_aec ,"\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065n\u0074\u0020\u002d\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};return _fca ,nil ;};func (_efd *Document )isFileHeaderPresent ()(bool ,error ){_efd .InputStream .Mark ();for _ ,_aga :=range _d {_cca ,_egb :=_efd .InputStream .ReadByte ();if _egb !=nil {return false ,_egb ;};if _aga !=_cca {_efd .InputStream .Reset ();
return false ,nil ;};};_efd .InputStream .Reset ();return true ,nil ;};func (_fga *Page )countRegions ()int {var _abbc int ;for _ ,_dde :=range _fga .Segments {switch _dde .Type {case 6,7,22,23,38,39,42,43:_abbc ++;};};return _abbc ;};func (_agbg *Page )lastSegmentNumber ()(_bedb uint32 ,_cga error ){const _faab ="\u006c\u0061\u0073\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";
if len (_agbg .Segments )==0{return _bedb ,_cd .Errorf (_faab ,"\u006e\u006f\u0020se\u0067\u006d\u0065\u006e\u0074\u0073\u0020\u0066\u006fu\u006ed\u0020i\u006e \u0074\u0068\u0065\u0020\u0070\u0061\u0067\u0065\u0020\u0027\u0025\u0064\u0027",_agbg .PageNumber );
};return _agbg .Segments [len (_agbg .Segments )-1].SegmentNumber ,nil ;};func (_ace *Page )String ()string {return _ed .Sprintf ("\u0050\u0061\u0067\u0065\u0020\u0023\u0025\u0064",_ace .PageNumber );};type EncodingMethod int ;