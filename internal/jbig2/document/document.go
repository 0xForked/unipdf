//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package document ;import (_b "encoding/binary";_a "fmt";_bg "github.com/unidoc/unipdf/v3/common";_c "github.com/unidoc/unipdf/v3/internal/bitwise";_bc "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_aa "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";
_gd "github.com/unidoc/unipdf/v3/internal/jbig2/document/segments";_gb "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/classer";_ad "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_g "io";_be "math";_bea "runtime/debug";);func (_bebd *Page )lastSegmentNumber ()(_gdgb uint32 ,_agd error ){const _fcba ="\u006c\u0061\u0073\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";
if len (_bebd .Segments )==0{return _gdgb ,_ad .Errorf (_fcba ,"\u006e\u006f\u0020se\u0067\u006d\u0065\u006e\u0074\u0073\u0020\u0066\u006fu\u006ed\u0020i\u006e \u0074\u0068\u0065\u0020\u0070\u0061\u0067\u0065\u0020\u0027\u0025\u0064\u0027",_bebd .PageNumber );
};return _bebd .Segments [len (_bebd .Segments )-1].SegmentNumber ,nil ;};func (_daf *Document )GetGlobalSegment (i int )(*_gd .Header ,error ){_dce ,_dgbb :=_daf .GlobalSegments .GetSegment (i );if _dgbb !=nil {return nil ,_ad .Wrap (_dgbb ,"\u0047\u0065t\u0047\u006c\u006fb\u0061\u006c\u0053\u0065\u0067\u006d\u0065\u006e\u0074","");
};return _dce ,nil ;};func (_abg *Page )AddGenericRegion (bm *_aa .Bitmap ,xloc ,yloc ,template int ,tp _gd .Type ,duplicateLineRemoval bool )error {const _gdf ="P\u0061\u0067\u0065\u002eAd\u0064G\u0065\u006e\u0065\u0072\u0069c\u0052\u0065\u0067\u0069\u006f\u006e";
_bebf :=&_gd .GenericRegion {};if _dcg :=_bebf .InitEncode (bm ,xloc ,yloc ,template ,duplicateLineRemoval );_dcg !=nil {return _ad .Wrap (_dcg ,_gdf ,"");};_abd :=&_gd .Header {Type :_gd .TImmediateGenericRegion ,PageAssociation :_abg .PageNumber ,SegmentData :_bebf };
_abg .Segments =append (_abg .Segments ,_abd );return nil ;};func (_cgc *Document )addSymbolDictionary (_cc int ,_ea *_aa .Bitmaps ,_ff []int ,_fad map[int ]int ,_bdd bool )(*_gd .Header ,error ){const _bee ="\u0061\u0064\u0064\u0053ym\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079";
_fbe :=&_gd .SymbolDictionary {};if _gda :=_fbe .InitEncode (_ea ,_ff ,_fad ,_bdd );_gda !=nil {return nil ,_gda ;};_cgb :=&_gd .Header {Type :_gd .TSymbolDictionary ,PageAssociation :_cc ,SegmentData :_fbe };if _cc ==0{if _cgc .GlobalSegments ==nil {_cgc .GlobalSegments =&Globals {};
};_cgc .GlobalSegments .AddSegment (_cgb );return _cgb ,nil ;};_fae ,_ebg :=_cgc .Pages [_cc ];if !_ebg {return nil ,_ad .Errorf (_bee ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_cc );};var (_dc int ;
_baf *_gd .Header ;);for _dc ,_baf =range _fae .Segments {if _baf .Type ==_gd .TPageInformation {break ;};};_dc ++;_fae .Segments =append (_fae .Segments ,nil );copy (_fae .Segments [_dc +1:],_fae .Segments [_dc :]);_fae .Segments [_dc ]=_cgb ;return _cgb ,nil ;
};func (_gdbe *Page )GetResolutionX ()(int ,error ){return _gdbe .getResolutionX ()};func (_dbd *Page )getCombinationOperator (_fcb *_gd .PageInformationSegment ,_abgf _aa .CombinationOperator )_aa .CombinationOperator {if _fcb .CombinationOperatorOverrideAllowed (){return _abgf ;
};return _fcb .CombinationOperator ();};func (_aeag *Page )fitsPage (_cbd *_gd .PageInformationSegment ,_eccd *_aa .Bitmap )bool {return _aeag .countRegions ()==1&&_cbd .DefaultPixelValue ==0&&_cbd .PageBMWidth ==_eccd .Width &&_cbd .PageBMHeight ==_eccd .Height ;
};func (_gfbc *Page )createPage (_gce *_gd .PageInformationSegment )error {var _fde error ;if !_gce .IsStripe ||_gce .PageBMHeight !=-1{_fde =_gfbc .createNormalPage (_gce );}else {_fde =_gfbc .createStripedPage (_gce );};return _fde ;};func (_cfg *Document )AddClassifiedPage (bm *_aa .Bitmap ,method _gb .Method )(_cd error ){const _bf ="\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002e\u0041\u0064d\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064P\u0061\u0067\u0065";
if !_cfg .FullHeaders &&_cfg .NumberOfPages !=0{return _ad .Error (_bf ,"\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0070\u0061\u0067\u0065\u002e\u0020\u0046\u0069\u006c\u0065\u004d\u006f\u0064\u0065\u0020\u0064\u0069\u0073\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0064\u0064i\u006e\u0067\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e \u006f\u006e\u0065\u0020\u0070\u0061g\u0065");
};if _cfg .Classer ==nil {if _cfg .Classer ,_cd =_gb .Init (_gb .DefaultSettings ());_cd !=nil {return _ad .Wrap (_cd ,_bf ,"");};};_ec :=int (_cfg .nextPageNumber ());_acg :=&Page {Segments :[]*_gd .Header {},Bitmap :bm ,Document :_cfg ,FinalHeight :bm .Height ,FinalWidth :bm .Width ,PageNumber :_ec };
_cfg .Pages [_ec ]=_acg ;switch method {case _gb .RankHaus :_acg .EncodingMethod =RankHausEM ;case _gb .Correlation :_acg .EncodingMethod =CorrelationEM ;};_acg .AddPageInformationSegment ();if _cd =_cfg .Classer .AddPage (bm ,_ec ,method );_cd !=nil {return _ad .Wrap (_cd ,_bf ,"");
};if _cfg .FullHeaders {_acg .AddEndOfPageSegment ();};return nil ;};func (_ddgd *Page )GetBitmap ()(_gee *_aa .Bitmap ,_eca error ){_bg .Log .Trace (_a .Sprintf ("\u005b\u0050\u0041G\u0045\u005d\u005b\u0023%\u0064\u005d\u0020\u0047\u0065\u0074\u0042i\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e",_ddgd .PageNumber ));
defer func (){if _eca !=nil {_bg .Log .Trace (_a .Sprintf ("\u005b\u0050\u0041\u0047\u0045\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074B\u0069t\u006d\u0061\u0070\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_ddgd .PageNumber ,_eca ));
}else {_bg .Log .Trace (_a .Sprintf ("\u005b\u0050\u0041\u0047\u0045\u005d\u005b\u0023\u0025\u0064]\u0020\u0047\u0065\u0074\u0042\u0069\u0074m\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064",_ddgd .PageNumber ));};}();if _ddgd .Bitmap !=nil {return _ddgd .Bitmap ,nil ;
};_eca =_ddgd .composePageBitmap ();if _eca !=nil {return nil ,_eca ;};return _ddgd .Bitmap ,nil ;};func (_cg *Document )produceClassifiedPage (_cea *Page ,_ecg *_gd .Header )(_ef error ){const _fe ="p\u0072\u006f\u0064\u0075ce\u0043l\u0061\u0073\u0073\u0069\u0066i\u0065\u0064\u0050\u0061\u0067\u0065";
var _dbf map[int ]int ;_dbfe :=_cg ._gg ;_dd :=[]*_gd .Header {_ecg };if len (_cg ._bd [_cea .PageNumber ])> 0{_dbf =map[int ]int {};_gfc ,_beb :=_cg .addSymbolDictionary (_cea .PageNumber ,_cg .Classer .UndilatedTemplates ,_cg ._bd [_cea .PageNumber ],_dbf ,false );
if _beb !=nil {return _ad .Wrap (_beb ,_fe ,"");};_dd =append (_dd ,_gfc );_dbfe +=len (_cg ._bd [_cea .PageNumber ]);};_bgd :=_cg ._f [_cea .PageNumber ];_bg .Log .Debug ("P\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020c\u006f\u006d\u0070\u0073: \u0025\u0076",_cea .PageNumber ,_bgd );
_cea .addTextRegionSegment (_dd ,_cg ._e ,_dbf ,_cg ._f [_cea .PageNumber ],_cg .Classer .PtaLL ,_cg .Classer .UndilatedTemplates ,_cg .Classer .ClassIDs ,nil ,_gdb (_dbfe ),len (_cg ._f [_cea .PageNumber ]));return nil ;};func (_ge *Document )Encode ()(_bga []byte ,_bgbe error ){const _bcg ="\u0044o\u0063u\u006d\u0065\u006e\u0074\u002e\u0045\u006e\u0063\u006f\u0064\u0065";
var _dgf ,_ebe int ;if _ge .FullHeaders {if _dgf ,_bgbe =_ge .encodeFileHeader (_ge ._cb );_bgbe !=nil {return nil ,_ad .Wrap (_bgbe ,_bcg ,"");};};var (_ccf bool ;_fbd *_gd .Header ;_add *Page ;);if _bgbe =_ge .completeClassifiedPages ();_bgbe !=nil {return nil ,_ad .Wrap (_bgbe ,_bcg ,"");
};if _bgbe =_ge .produceClassifiedPages ();_bgbe !=nil {return nil ,_ad .Wrap (_bgbe ,_bcg ,"");};if _ge .GlobalSegments !=nil {for _ ,_fbd =range _ge .GlobalSegments .Segments {if _bgbe =_ge .encodeSegment (_fbd ,&_dgf );_bgbe !=nil {return nil ,_ad .Wrap (_bgbe ,_bcg ,"");
};};};for _dbg :=1;_dbg <=int (_ge .NumberOfPages );_dbg ++{if _add ,_ccf =_ge .Pages [_dbg ];!_ccf {return nil ,_ad .Errorf (_bcg ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_dbg );};for _ ,_fbd =range _add .Segments {if _bgbe =_ge .encodeSegment (_fbd ,&_dgf );
_bgbe !=nil {return nil ,_ad .Wrap (_bgbe ,_bcg ,"");};};};if _ge .FullHeaders {if _ebe ,_bgbe =_ge .encodeEOFHeader (_ge ._cb );_bgbe !=nil {return nil ,_ad .Wrap (_bgbe ,_bcg ,"");};_dgf +=_ebe ;};_bga =_ge ._cb .Data ();if len (_bga )!=_dgf {_bg .Log .Debug ("\u0042\u0079\u0074\u0065\u0073 \u0077\u0072\u0069\u0074\u0074\u0065\u006e \u0028\u006e\u0029\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0065\u0071\u0075\u0061\u006c\u0020\u0074\u006f\u0020\u0074\u0068\u0065\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006f\u0066\u0020t\u0068\u0065\u0020\u0064\u0061\u0074\u0061\u0020\u0065\u006e\u0063\u006fd\u0065\u0064\u003a\u0020\u0027\u0025d\u0027",_dgf ,len (_bga ));
};return _bga ,nil ;};func _cbbf (_gfee _c .StreamReader ,_efb *Globals )(*Document ,error ){_cab :=&Document {Pages :make (map[int ]*Page ),InputStream :_gfee ,OrganizationType :_gd .OSequential ,NumberOfPagesUnknown :true ,GlobalSegments :_efb ,_ac :9};
if _cab .GlobalSegments ==nil {_cab .GlobalSegments =&Globals {};};if _baa :=_cab .mapData ();_baa !=nil {return nil ,_baa ;};return _cab ,nil ;};var _af =[]byte {0x97,0x4A,0x42,0x32,0x0D,0x0A,0x1A,0x0A};func (_efe *Page )getHeight ()(int ,error ){const _aab ="\u0067e\u0074\u0048\u0065\u0069\u0067\u0068t";
if _efe .FinalHeight !=0{return _efe .FinalHeight ,nil ;};_cgf :=_efe .getPageInformationSegment ();if _cgf ==nil {return 0,_ad .Error (_aab ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_bfa ,_abaa :=_cgf .GetSegmentData ();
if _abaa !=nil {return 0,_ad .Wrap (_abaa ,_aab ,"");};_eeg ,_fag :=_bfa .(*_gd .PageInformationSegment );if !_fag {return 0,_ad .Errorf (_aab ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_bfa );
};if _eeg .PageBMHeight ==_be .MaxInt32 {_ ,_abaa =_efe .GetBitmap ();if _abaa !=nil {return 0,_ad .Wrap (_abaa ,_aab ,"");};}else {_efe .FinalHeight =_eeg .PageBMHeight ;};return _efe .FinalHeight ,nil ;};func _dfe (_gaf *Document ,_aafa int )*Page {return &Page {Document :_gaf ,PageNumber :_aafa ,Segments :[]*_gd .Header {}};
};func (_addc *Page )composePageBitmap ()error {const _cfde ="\u0063\u006f\u006d\u0070\u006f\u0073\u0065\u0050\u0061\u0067\u0065\u0042i\u0074\u006d\u0061\u0070";if _addc .PageNumber ==0{return nil ;};_cfdc :=_addc .getPageInformationSegment ();if _cfdc ==nil {return _ad .Error (_cfde ,"\u0070\u0061\u0067e \u0069\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069o\u006e \u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
};_beeb ,_ebeg :=_cfdc .GetSegmentData ();if _ebeg !=nil {return _ebeg ;};_cgd ,_cbcd :=_beeb .(*_gd .PageInformationSegment );if !_cbcd {return _ad .Error (_cfde ,"\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006da\u0074\u0069\u006f\u006e \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");
};if _ebeg =_addc .createPage (_cgd );_ebeg !=nil {return _ad .Wrap (_ebeg ,_cfde ,"");};_addc .clearSegmentData ();return nil ;};func (_aad *Globals )GetSegment (segmentNumber int )(*_gd .Header ,error ){const _bddc ="\u0047l\u006fb\u0061\u006c\u0073\u002e\u0047e\u0074\u0053e\u0067\u006d\u0065\u006e\u0074";
if _aad ==nil {return nil ,_ad .Error (_bddc ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_aad .Segments )==0{return nil ,_ad .Error (_bddc ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");
};var _gca *_gd .Header ;for _ ,_gca =range _aad .Segments {if _gca .SegmentNumber ==uint32 (segmentNumber ){break ;};};if _gca ==nil {return nil ,_ad .Error (_bddc ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};return _gca ,nil ;};func (_ag *Page )AddPageInformationSegment (){_aeg :=&_gd .PageInformationSegment {PageBMWidth :_ag .FinalWidth ,PageBMHeight :_ag .FinalHeight ,ResolutionX :_ag .ResolutionX ,ResolutionY :_ag .ResolutionY ,IsLossless :_ag .IsLossless };
if _ag .BlackIsOne {_aeg .DefaultPixelValue =uint8 (0x1);};_faea :=&_gd .Header {PageAssociation :_ag .PageNumber ,SegmentDataLength :uint64 (_aeg .Size ()),SegmentData :_aeg ,Type :_gd .TPageInformation };_ag .Segments =append (_ag .Segments ,_faea );
};func (_ggf *Page )GetWidth ()(int ,error ){return _ggf .getWidth ()};func (_fda *Document )determineRandomDataOffsets (_ced []*_gd .Header ,_gad uint64 ){if _fda .OrganizationType !=_gd .ORandom {return ;};for _ ,_fbdf :=range _ced {_fbdf .SegmentDataStartOffset =_gad ;
_gad +=_fbdf .SegmentDataLength ;};};func (_cadgc *Globals )GetSymbolDictionary ()(*_gd .Header ,error ){const _aff ="G\u006c\u006f\u0062\u0061\u006c\u0073.\u0047\u0065\u0074\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079";
if _cadgc ==nil {return nil ,_ad .Error (_aff ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_cadgc .Segments )==0{return nil ,_ad .Error (_aff ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");
};for _ ,_dac :=range _cadgc .Segments {if _dac .Type ==_gd .TSymbolDictionary {return _dac ,nil ;};};return nil ,_ad .Error (_aff ,"\u0067\u006c\u006fba\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020d\u0069c\u0074i\u006fn\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
};func (_ccc *Document )nextPageNumber ()uint32 {_ccc .NumberOfPages ++;return _ccc .NumberOfPages };func (_ceb *Document )produceClassifiedPages ()(_ca error ){const _cff ="\u0070\u0072\u006f\u0064uc\u0065\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0050\u0061\u0067e\u0073";
if _ceb .Classer ==nil {return nil ;};var (_bb *Page ;_cad bool ;_gfe *_gd .Header ;);for _gfb :=1;_gfb <=int (_ceb .NumberOfPages );_gfb ++{if _bb ,_cad =_ceb .Pages [_gfb ];!_cad {return _ad .Errorf (_cff ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_gfb );
};if _bb .EncodingMethod ==GenericEM {continue ;};if _gfe ==nil {if _gfe ,_ca =_ceb .GlobalSegments .GetSymbolDictionary ();_ca !=nil {return _ad .Wrap (_ca ,_cff ,"");};};if _ca =_ceb .produceClassifiedPage (_bb ,_gfe );_ca !=nil {return _ad .Wrapf (_ca ,_cff ,"\u0070\u0061\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027",_gfb );
};};return nil ;};type EncodingMethod int ;type Document struct{Pages map[int ]*Page ;NumberOfPagesUnknown bool ;NumberOfPages uint32 ;GBUseExtTemplate bool ;InputStream _c .StreamReader ;GlobalSegments *Globals ;OrganizationType _gd .OrganizationType ;
Classer *_gb .Classer ;XRes ,YRes int ;FullHeaders bool ;CurrentSegmentNumber uint32 ;AverageTemplates *_aa .Bitmaps ;BaseIndexes []int ;Refinement bool ;RefineLevel int ;_ac uint8 ;_cb *_c .BufferedWriter ;EncodeGlobals bool ;_gg int ;_bd map[int ][]int ;
_f map[int ][]int ;_cf []int ;_e map[int ]int ;};func (_cfdd *Page )GetSegment (number int )(*_gd .Header ,error ){const _faeac ="\u0050a\u0067e\u002e\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074";for _ ,_bgef :=range _cfdd .Segments {if _bgef .SegmentNumber ==uint32 (number ){return _bgef ,nil ;
};};_dgg :=make ([]uint32 ,len (_cfdd .Segments ));for _cbc ,_aag :=range _cfdd .Segments {_dgg [_cbc ]=_aag .SegmentNumber ;};return nil ,_ad .Errorf (_faeac ,"\u0073e\u0067\u006d\u0065n\u0074\u0020\u0077i\u0074h \u006e\u0075\u006d\u0062\u0065\u0072\u003a \u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0070\u0061\u0067\u0065\u003a\u0020'%\u0064'\u002e\u0020\u004b\u006e\u006f\u0077n\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u003a \u0025\u0076",number ,_cfdd .PageNumber ,_dgg );
};func (_cbcf *Page )String ()string {return _a .Sprintf ("\u0050\u0061\u0067\u0065\u0020\u0023\u0025\u0064",_cbcf .PageNumber );};func (_bfcc *Document )parseFileHeader ()error {const _bde ="\u0070a\u0072s\u0065\u0046\u0069\u006c\u0065\u0048\u0065\u0061\u0064\u0065\u0072";
_ ,_eff :=_bfcc .InputStream .Seek (8,_g .SeekStart );if _eff !=nil {return _ad .Wrap (_eff ,_bde ,"\u0069\u0064");};_ ,_eff =_bfcc .InputStream .ReadBits (5);if _eff !=nil {return _ad .Wrap (_eff ,_bde ,"\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074\u0073");
};_aba ,_eff :=_bfcc .InputStream .ReadBit ();if _eff !=nil {return _ad .Wrap (_eff ,_bde ,"\u0065x\u0074e\u006e\u0064\u0065\u0064\u0020t\u0065\u006dp\u006c\u0061\u0074\u0065\u0073");};if _aba ==1{_bfcc .GBUseExtTemplate =true ;};_aba ,_eff =_bfcc .InputStream .ReadBit ();
if _eff !=nil {return _ad .Wrap (_eff ,_bde ,"\u0075\u006e\u006b\u006eow\u006e\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};if _aba !=1{_bfcc .NumberOfPagesUnknown =false ;};_aba ,_eff =_bfcc .InputStream .ReadBit ();if _eff !=nil {return _ad .Wrap (_eff ,_bde ,"\u006f\u0072\u0067\u0061\u006e\u0069\u007a\u0061\u0074\u0069\u006f\u006e \u0074\u0079\u0070\u0065");
};_bfcc .OrganizationType =_gd .OrganizationType (_aba );if !_bfcc .NumberOfPagesUnknown {_bfcc .NumberOfPages ,_eff =_bfcc .InputStream .ReadUint32 ();if _eff !=nil {return _ad .Wrap (_eff ,_bde ,"\u006eu\u006db\u0065\u0072\u0020\u006f\u0066\u0020\u0070\u0061\u0067\u0065\u0073");
};_bfcc ._ac =13;};return nil ;};func (_ecce *Page )GetHeight ()(int ,error ){return _ecce .getHeight ()};func (_ggc *Document )nextSegmentNumber ()uint32 {_ccb :=_ggc .CurrentSegmentNumber ;_ggc .CurrentSegmentNumber ++;return _ccb ;};func (_aead *Page )GetResolutionY ()(int ,error ){return _aead .getResolutionY ()};
func (_fafe *Document )isFileHeaderPresent ()(bool ,error ){_fafe .InputStream .Mark ();for _ ,_bec :=range _af {_bfc ,_dab :=_fafe .InputStream .ReadByte ();if _dab !=nil {return false ,_dab ;};if _bec !=_bfc {_fafe .InputStream .Reset ();return false ,nil ;
};};_fafe .InputStream .Reset ();return true ,nil ;};func (_cee *Globals )GetSegmentByIndex (index int )(*_gd .Header ,error ){const _bge ="\u0047l\u006f\u0062\u0061\u006cs\u002e\u0047\u0065\u0074\u0053e\u0067m\u0065n\u0074\u0042\u0079\u0049\u006e\u0064\u0065x";
if _cee ==nil {return nil ,_ad .Error (_bge ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_cee .Segments )==0{return nil ,_ad .Error (_bge ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");
};if index > len (_cee .Segments )-1{return nil ,_ad .Error (_bge ,"\u0069n\u0064e\u0078\u0020\u006f\u0075\u0074 \u006f\u0066 \u0072\u0061\u006e\u0067\u0065");};return _cee .Segments [index ],nil ;};func (_gae *Document )encodeEOFHeader (_dae _c .BinaryWriter )(_fbf int ,_eae error ){_efd :=&_gd .Header {SegmentNumber :_gae .nextSegmentNumber (),Type :_gd .TEndOfFile };
if _fbf ,_eae =_efd .Encode (_dae );_eae !=nil {return 0,_ad .Wrap (_eae ,"\u0065n\u0063o\u0064\u0065\u0045\u004f\u0046\u0048\u0065\u0061\u0064\u0065\u0072","");};return _fbf ,nil ;};func (_baff *Page )collectPageStripes ()(_ebb []_gd .Segmenter ,_aeae error ){const _fed ="\u0063o\u006cl\u0065\u0063\u0074\u0050\u0061g\u0065\u0053t\u0072\u0069\u0070\u0065\u0073";
var _fcge _gd .Segmenter ;for _ ,_bade :=range _baff .Segments {switch _bade .Type {case 6,7,22,23,38,39,42,43:_fcge ,_aeae =_bade .GetSegmentData ();if _aeae !=nil {return nil ,_ad .Wrap (_aeae ,_fed ,"");};_ebb =append (_ebb ,_fcge );case 50:_fcge ,_aeae =_bade .GetSegmentData ();
if _aeae !=nil {return nil ,_aeae ;};_gcc ,_gbag :=_fcge .(*_gd .EndOfStripe );if !_gbag {return nil ,_ad .Errorf (_fed ,"\u0045\u006e\u0064\u004f\u0066\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u006f\u0066\u0020\u0076\u0061l\u0069\u0064\u0020\u0074\u0079p\u0065\u003a \u0027\u0025\u0054\u0027",_fcge );
};_ebb =append (_ebb ,_gcc );_baff .FinalHeight =_gcc .LineNumber ();};};return _ebb ,nil ;};func (_fabc *Globals )AddSegment (segment *_gd .Header ){_fabc .Segments =append (_fabc .Segments ,segment );};func (_fdee *Page )createStripedPage (_ffc *_gd .PageInformationSegment )error {const _dag ="\u0063\u0072\u0065\u0061\u0074\u0065\u0053\u0074\u0072\u0069\u0070\u0065d\u0050\u0061\u0067\u0065";
_bae ,_dff :=_fdee .collectPageStripes ();if _dff !=nil {return _ad .Wrap (_dff ,_dag ,"");};var _dda int ;for _ ,_dea :=range _bae {if _dbc ,_bdf :=_dea .(*_gd .EndOfStripe );_bdf {_dda =_dbc .LineNumber ()+1;}else {_cgg :=_dea .(_gd .Regioner );_bgc :=_cgg .GetRegionInfo ();
_gbb :=_fdee .getCombinationOperator (_ffc ,_bgc .CombinaionOperator );_eeb ,_gdg :=_cgg .GetRegionBitmap ();if _gdg !=nil {return _ad .Wrap (_gdg ,_dag ,"");};_gdg =_aa .Blit (_eeb ,_fdee .Bitmap ,int (_bgc .XLocation ),_dda ,_gbb );if _gdg !=nil {return _ad .Wrap (_gdg ,_dag ,"");
};};};return nil ;};func DecodeDocument (input _c .StreamReader ,globals *Globals )(*Document ,error ){return _cbbf (input ,globals );};func (_cac *Page )nextSegmentNumber ()uint32 {return _cac .Document .nextSegmentNumber ()};func (_gdfe *Page )createNormalPage (_gacc *_gd .PageInformationSegment )error {const _fcg ="\u0063\u0072e\u0061\u0074\u0065N\u006f\u0072\u006d\u0061\u006c\u0050\u0061\u0067\u0065";
_gdfe .Bitmap =_aa .New (_gacc .PageBMWidth ,_gacc .PageBMHeight );if _gacc .DefaultPixelValue !=0{_gdfe .Bitmap .SetDefaultPixel ();};for _ ,_fdge :=range _gdfe .Segments {switch _fdge .Type {case 6,7,22,23,38,39,42,43:_bg .Log .Trace ("\u0047\u0065\u0074\u0074in\u0067\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0064",_fdge .SegmentNumber );
_bddcd ,_bba :=_fdge .GetSegmentData ();if _bba !=nil {return _bba ;};_dbfd ,_ded :=_bddcd .(_gd .Regioner );if !_ded {_bg .Log .Debug ("\u0053\u0065g\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069on\u0065\u0072",_bddcd );
return _ad .Errorf (_fcg ,"i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062i\u0067\u0032\u0020\u0073\u0065\u0067\u006den\u0074\u0020\u0074\u0079p\u0065\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061 R\u0065\u0067i\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_bddcd );
};_gdbc ,_bba :=_dbfd .GetRegionBitmap ();if _bba !=nil {return _ad .Wrap (_bba ,_fcg ,"");};if _gdfe .fitsPage (_gacc ,_gdbc ){_gdfe .Bitmap =_gdbc ;}else {_efa :=_dbfd .GetRegionInfo ();_gfg :=_gdfe .getCombinationOperator (_gacc ,_efa .CombinaionOperator );
_bba =_aa .Blit (_gdbc ,_gdfe .Bitmap ,int (_efa .XLocation ),int (_efa .YLocation ),_gfg );if _bba !=nil {return _ad .Wrap (_bba ,_fcg ,"");};};};};return nil ;};func _gdb (_ebf int )int {_fc :=0;_dbb :=(_ebf &(_ebf -1))==0;_ebf >>=1;for ;_ebf !=0;_ebf >>=1{_fc ++;
};if _dbb {return _fc ;};return _fc +1;};func (_gbcd *Page )clearSegmentData (){for _eag :=range _gbcd .Segments {_gbcd .Segments [_eag ].CleanSegmentData ();};};const (GenericEM EncodingMethod =iota ;CorrelationEM ;RankHausEM ;);func (_gcgc *Document )reachedEOF (_fbc int64 )(bool ,error ){const _gba ="\u0072\u0065\u0061\u0063\u0068\u0065\u0064\u0045\u004f\u0046";
_ ,_cdc :=_gcgc .InputStream .Seek (_fbc ,_g .SeekStart );if _cdc !=nil {_bg .Log .Debug ("\u0072\u0065\u0061c\u0068\u0065\u0064\u0045\u004f\u0046\u0020\u002d\u0020\u0064\u002e\u0049\u006e\u0070\u0075\u0074\u0053\u0074\u0072\u0065\u0061\u006d\u002e\u0053\u0065\u0065\u006b\u0020\u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_cdc );
return false ,_ad .Wrap (_cdc ,_gba ,"\u0069n\u0070\u0075\u0074\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020s\u0065\u0065\u006b\u0020\u0066\u0061\u0069\u006c\u0065\u0064");};_ ,_cdc =_gcgc .InputStream .ReadBits (32);if _cdc ==_g .EOF {return true ,nil ;
}else if _cdc !=nil {return false ,_ad .Wrap (_cdc ,_gba ,"");};return false ,nil ;};func (_aeb *Document )completeSymbols ()(_aaa error ){const _cbb ="\u0063o\u006dp\u006c\u0065\u0074\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";if _aeb .Classer ==nil {return nil ;
};if _aeb .Classer .UndilatedTemplates ==nil {return _ad .Error (_cbb ,"\u006e\u006f t\u0065\u006d\u0070l\u0061\u0074\u0065\u0073 de\u0066in\u0065\u0064\u0020\u0066\u006f\u0072\u0020th\u0065\u0020\u0063\u006c\u0061\u0073\u0073e\u0072");};_bcac :=len (_aeb .Pages )==1;
_da :=make ([]int ,_aeb .Classer .UndilatedTemplates .Size ());var _dcc int ;for _dgb :=0;_dgb < _aeb .Classer .ClassIDs .Size ();_dgb ++{_dcc ,_aaa =_aeb .Classer .ClassIDs .Get (_dgb );if _aaa !=nil {return _ad .Wrap (_aaa ,_cbb ,"\u0063\u006c\u0061\u0073\u0073\u0020\u0049\u0044\u0027\u0073");
};_da [_dcc ]++;};var _ecc []int ;for _fd :=0;_fd < _aeb .Classer .UndilatedTemplates .Size ();_fd ++{if _da [_fd ]==0{return _ad .Error (_cbb ,"\u006eo\u0020\u0073y\u006d\u0062\u006f\u006cs\u0020\u0069\u006es\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u0066\u006fun\u0064\u0020\u0066o\u0072\u0020g\u0069\u0076\u0065\u006e\u0020\u0063l\u0061\u0073s\u003f\u0020");
};if _da [_fd ]> 1||_bcac {_ecc =append (_ecc ,_fd );};};_aeb ._gg =len (_ecc );var _fce ,_acgf int ;for _de :=0;_de < _aeb .Classer .ComponentPageNumbers .Size ();_de ++{_fce ,_aaa =_aeb .Classer .ComponentPageNumbers .Get (_de );if _aaa !=nil {return _ad .Wrapf (_aaa ,_cbb ,"p\u0061\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027 \u006e\u006f\u0074\u0020\u0066\u006f\u0075nd\u0020\u0069\u006e\u0020t\u0068\u0065\u0020\u0063\u006c\u0061\u0073\u0073\u0065r \u0070\u0061g\u0065\u006e\u0075\u006d\u0062\u0065\u0072\u0073",_de );
};_acgf ,_aaa =_aeb .Classer .ClassIDs .Get (_de );if _aaa !=nil {return _ad .Wrapf (_aaa ,_cbb ,"\u0063\u0061\u006e\u0027\u0074\u0020\u0067e\u0074\u0020\u0073y\u006d\u0062\u006f\u006c \u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0027\u0025\u0064\u0027\u0020\u0066\u0072\u006f\u006d\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072",_fce );
};if _da [_acgf ]==1&&!_bcac {_aeb ._bd [_fce ]=append (_aeb ._bd [_fce ],_acgf );};};if _aaa =_aeb .Classer .ComputeLLCorners ();_aaa !=nil {return _ad .Wrap (_aaa ,_cbb ,"");};return nil ;};type Globals struct{Segments []*_gd .Header ;};func (_agfe *Page )countRegions ()int {var _dfb int ;
for _ ,_bgab :=range _agfe .Segments {switch _bgab .Type {case 6,7,22,23,38,39,42,43:_dfb ++;};};return _dfb ;};func (_aga *Page )getPageInformationSegment ()*_gd .Header {for _ ,_agaf :=range _aga .Segments {if _agaf .Type ==_gd .TPageInformation {return _agaf ;
};};_bg .Log .Debug ("\u0050\u0061\u0067\u0065\u0020\u0069\u006e\u0066o\u0072\u006d\u0061ti\u006f\u006e\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0066o\u0072\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0073\u002e",_aga );
return nil ;};func (_bfd *Page )getResolutionX ()(int ,error ){const _cdd ="\u0067\u0065\u0074\u0052\u0065\u0073\u006f\u006c\u0075t\u0069\u006f\u006e\u0058";if _bfd .ResolutionX !=0{return _bfd .ResolutionX ,nil ;};_dccg :=_bfd .getPageInformationSegment ();
if _dccg ==nil {return 0,_ad .Error (_cdd ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_fffc ,_fffd :=_dccg .GetSegmentData ();if _fffd !=nil {return 0,_ad .Wrap (_fffd ,_cdd ,"");};_ggd ,_eebb :=_fffc .(*_gd .PageInformationSegment );
if !_eebb {return 0,_ad .Errorf (_cdd ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_fffc );
};_bfd .ResolutionX =_ggd .ResolutionX ;return _bfd .ResolutionX ,nil ;};func (_fb *Document )completeClassifiedPages ()(_gf error ){const _ae ="\u0063\u006f\u006dpl\u0065\u0074\u0065\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0050\u0061\u0067\u0065\u0073";
if _fb .Classer ==nil {return nil ;};_fb ._cf =make ([]int ,_fb .Classer .UndilatedTemplates .Size ());for _ga :=0;_ga < _fb .Classer .ClassIDs .Size ();_ga ++{_ce ,_ee :=_fb .Classer .ClassIDs .Get (_ga );if _ee !=nil {return _ad .Wrapf (_ee ,_ae ,"\u0063\u006c\u0061\u0073s \u0077\u0069\u0074\u0068\u0020\u0069\u0064\u003a\u0020\u0027\u0025\u0064\u0027",_ga );
};_fb ._cf [_ce ]++;};var _gac []int ;for _eb :=0;_eb < _fb .Classer .UndilatedTemplates .Size ();_eb ++{if _fb .NumberOfPages ==1||_fb ._cf [_eb ]> 1{_gac =append (_gac ,_eb );};};var (_gfd *Page ;_bgb bool ;);for _ab ,_faa :=range *_fb .Classer .ComponentPageNumbers {if _gfd ,_bgb =_fb .Pages [_faa ];
!_bgb {return _ad .Errorf (_ae ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_ab );};if _gfd .EncodingMethod ==GenericEM {_bg .Log .Error ("\u0047\u0065\u006e\u0065\u0072\u0069c\u0020\u0070\u0061g\u0065\u0020\u0077i\u0074\u0068\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u003a \u0027\u0025\u0064\u0027\u0020ma\u0070\u0070\u0065\u0064\u0020\u0061\u0073\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0020\u0070\u0061\u0067\u0065",_ab );
continue ;};_fb ._f [_faa ]=append (_fb ._f [_faa ],_ab );_ba ,_bca :=_fb .Classer .ClassIDs .Get (_ab );if _bca !=nil {return _ad .Wrapf (_bca ,_ae ,"\u006e\u006f\u0020\u0073uc\u0068\u0020\u0063\u006c\u0061\u0073\u0073\u0049\u0044\u003a\u0020\u0025\u0064",_ab );
};if _fb ._cf [_ba ]==1&&_fb .NumberOfPages !=1{_gcg :=append (_fb ._bd [_faa ],_ba );_fb ._bd [_faa ]=_gcg ;};};if _gf =_fb .Classer .ComputeLLCorners ();_gf !=nil {return _ad .Wrap (_gf ,_ae ,"");};if _ ,_gf =_fb .addSymbolDictionary (0,_fb .Classer .UndilatedTemplates ,_gac ,_fb ._e ,false );
_gf !=nil {return _ad .Wrap (_gf ,_ae ,"");};return nil ;};func (_bgge *Page )getWidth ()(int ,error ){const _ffb ="\u0067\u0065\u0074\u0057\u0069\u0064\u0074\u0068";if _bgge .FinalWidth !=0{return _bgge .FinalWidth ,nil ;};_eee :=_bgge .getPageInformationSegment ();
if _eee ==nil {return 0,_ad .Error (_ffb ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_abgff ,_eab :=_eee .GetSegmentData ();if _eab !=nil {return 0,_ad .Wrap (_eab ,_ffb ,"");};_eac ,_ccg :=_abgff .(*_gd .PageInformationSegment );
if !_ccg {return 0,_ad .Errorf (_ffb ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_abgff );
};_bgge .FinalWidth =_eac .PageBMWidth ;return _bgge .FinalWidth ,nil ;};func (_db *Document )AddGenericPage (bm *_aa .Bitmap ,duplicateLineRemoval bool )(_gc error ){const _dg ="\u0044\u006f\u0063um\u0065\u006e\u0074\u002e\u0041\u0064\u0064\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0050\u0061\u0067\u0065";
if !_db .FullHeaders &&_db .NumberOfPages !=0{return _ad .Error (_dg ,"\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0070\u0061\u0067\u0065\u002e\u0020\u0046\u0069\u006c\u0065\u004d\u006f\u0064\u0065\u0020\u0064\u0069\u0073\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0064\u0064i\u006e\u0067\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e \u006f\u006e\u0065\u0020\u0070\u0061g\u0065");
};_fa :=&Page {Segments :[]*_gd .Header {},Bitmap :bm ,Document :_db ,FinalHeight :bm .Height ,FinalWidth :bm .Width ,IsLossless :true ,BlackIsOne :bm .Color ==_aa .Chocolate };_fa .PageNumber =int (_db .nextPageNumber ());_db .Pages [_fa .PageNumber ]=_fa ;
bm .InverseData ();_fa .AddPageInformationSegment ();if _gc =_fa .AddGenericRegion (bm ,0,0,0,_gd .TImmediateGenericRegion ,duplicateLineRemoval );_gc !=nil {return _ad .Wrap (_gc ,_dg ,"");};if _db .FullHeaders {_fa .AddEndOfPageSegment ();};return nil ;
};func (_acb *Document )encodeSegment (_afb *_gd .Header ,_gbc *int )error {const _bdb ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074";_afb .SegmentNumber =_acb .nextSegmentNumber ();_cfd ,_aaag :=_afb .Encode (_acb ._cb );
if _aaag !=nil {return _ad .Wrapf (_aaag ,_bdb ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_afb .SegmentNumber );};*_gbc +=_cfd ;return nil ;};func (_cedg *Page )addTextRegionSegment (_cadf []*_gd .Header ,_bbe ,_ebc map[int ]int ,_ceae []int ,_adb *_aa .Points ,_dad *_aa .Bitmaps ,_fbb *_bc .IntSlice ,_dabd *_aa .Boxes ,_adg ,_ged int ){_aaagb :=&_gd .TextRegion {NumberOfSymbols :uint32 (_ged )};
_aaagb .InitEncode (_bbe ,_ebc ,_ceae ,_adb ,_dad ,_fbb ,_dabd ,_cedg .FinalWidth ,_cedg .FinalHeight ,_adg );_cge :=&_gd .Header {RTSegments :_cadf ,SegmentData :_aaagb ,PageAssociation :_cedg .PageNumber ,Type :_gd .TImmediateTextRegion };_gge :=_gd .TPageInformation ;
if _ebc !=nil {_gge =_gd .TSymbolDictionary ;};var _df int ;for ;_df < len (_cedg .Segments );_df ++{if _cedg .Segments [_df ].Type ==_gge {_df ++;break ;};};_cedg .Segments =append (_cedg .Segments ,nil );copy (_cedg .Segments [_df +1:],_cedg .Segments [_df :]);
_cedg .Segments [_df ]=_cge ;};func (_dbe *Document )GetNumberOfPages ()(uint32 ,error ){if _dbe .NumberOfPagesUnknown ||_dbe .NumberOfPages ==0{if len (_dbe .Pages )==0{if _cfc :=_dbe .mapData ();_cfc !=nil {return 0,_ad .Wrap (_cfc ,"\u0044o\u0063\u0075\u006d\u0065n\u0074\u002e\u0047\u0065\u0074N\u0075m\u0062e\u0072\u004f\u0066\u0050\u0061\u0067\u0065s","");
};};return uint32 (len (_dbe .Pages )),nil ;};return _dbe .NumberOfPages ,nil ;};func (_bcgg *Document )encodeFileHeader (_ebfd _c .BinaryWriter )(_daeg int ,_fcc error ){const _eccb ="\u0065\u006ec\u006f\u0064\u0065F\u0069\u006c\u0065\u0048\u0065\u0061\u0064\u0065\u0072";
_daeg ,_fcc =_ebfd .Write (_af );if _fcc !=nil {return _daeg ,_ad .Wrap (_fcc ,_eccb ,"\u0069\u0064");};if _fcc =_ebfd .WriteByte (0x01);_fcc !=nil {return _daeg ,_ad .Wrap (_fcc ,_eccb ,"\u0066\u006c\u0061g\u0073");};_daeg ++;_cadg :=make ([]byte ,4);
_b .BigEndian .PutUint32 (_cadg ,_bcgg .NumberOfPages );_ffa ,_fcc :=_ebfd .Write (_cadg );if _fcc !=nil {return _ffa ,_ad .Wrap (_fcc ,_eccb ,"p\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_daeg +=_ffa ;return _daeg ,nil ;};func InitEncodeDocument (fullHeaders bool )*Document {return &Document {FullHeaders :fullHeaders ,_cb :_c .BufferedMSB (),Pages :map[int ]*Page {},_bd :map[int ][]int {},_e :map[int ]int {},_f :map[int ][]int {}};
};func (_fg *Document )mapData ()error {const _adf ="\u006da\u0070\u0044\u0061\u0074\u0061";var (_fff []*_gd .Header ;_bce int64 ;_bef _gd .Type ;);_edc ,_ada :=_fg .isFileHeaderPresent ();if _ada !=nil {return _ad .Wrap (_ada ,_adf ,"");};if _edc {if _ada =_fg .parseFileHeader ();
_ada !=nil {return _ad .Wrap (_ada ,_adf ,"");};_bce +=int64 (_fg ._ac );_fg .FullHeaders =true ;};var (_geg *Page ;_gaea bool ;);for _bef !=51&&!_gaea {_fab ,_acgd :=_gd .NewHeader (_fg ,_fg .InputStream ,_bce ,_fg .OrganizationType );if _acgd !=nil {return _ad .Wrap (_acgd ,_adf ,"");
};_bg .Log .Trace ("\u0044\u0065c\u006f\u0064\u0069\u006eg\u0020\u0073e\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u0075m\u0062\u0065\u0072\u003a\u0020\u0025\u0064\u002c\u0020\u0054\u0079\u0070e\u003a\u0020\u0025\u0073",_fab .SegmentNumber ,_fab .Type );
_bef =_fab .Type ;if _bef !=_gd .TEndOfFile {if _fab .PageAssociation !=0{_geg =_fg .Pages [_fab .PageAssociation ];if _geg ==nil {_geg =_dfe (_fg ,_fab .PageAssociation );_fg .Pages [_fab .PageAssociation ]=_geg ;if _fg .NumberOfPagesUnknown {_fg .NumberOfPages ++;
};};_geg .Segments =append (_geg .Segments ,_fab );}else {_fg .GlobalSegments .AddSegment (_fab );};};_fff =append (_fff ,_fab );_bce =_fg .InputStream .StreamPosition ();if _fg .OrganizationType ==_gd .OSequential {_bce +=int64 (_fab .SegmentDataLength );
};_gaea ,_acgd =_fg .reachedEOF (_bce );if _acgd !=nil {_bg .Log .Debug ("\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020\u0072\u0065\u0061\u0063h\u0065\u0064\u0020\u0045\u004f\u0046\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_acgd );
return _ad .Wrap (_acgd ,_adf ,"");};};_fg .determineRandomDataOffsets (_fff ,uint64 (_bce ));return nil ;};type Page struct{Segments []*_gd .Header ;PageNumber int ;Bitmap *_aa .Bitmap ;FinalHeight int ;FinalWidth int ;ResolutionX int ;ResolutionY int ;
IsLossless bool ;Document *Document ;FirstSegmentNumber int ;EncodingMethod EncodingMethod ;BlackIsOne bool ;};func (_bada *Page )getResolutionY ()(int ,error ){const _cgcg ="\u0067\u0065\u0074\u0052\u0065\u0073\u006f\u006c\u0075t\u0069\u006f\u006e\u0059";
if _bada .ResolutionY !=0{return _bada .ResolutionY ,nil ;};_deg :=_bada .getPageInformationSegment ();if _deg ==nil {return 0,_ad .Error (_cgcg ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_dec ,_eaae :=_deg .GetSegmentData ();
if _eaae !=nil {return 0,_ad .Wrap (_eaae ,_cgcg ,"");};_bgdd ,_cbcfg :=_dec .(*_gd .PageInformationSegment );if !_cbcfg {return 0,_ad .Errorf (_cgcg ,"\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0066o\u0072\u006d\u0061ti\u006f\u006e\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0069\u0073\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0074\u0079\u0070\u0065\u003a\u0027%\u0054\u0027",_dec );
};_bada .ResolutionY =_bgdd .ResolutionY ;return _bada .ResolutionY ,nil ;};func (_aebb *Page )AddEndOfPageSegment (){_bcf :=&_gd .Header {Type :_gd .TEndOfPage ,PageAssociation :_aebb .PageNumber };_aebb .Segments =append (_aebb .Segments ,_bcf );};func (_fdg *Document )GetPage (pageNumber int )(_gd .Pager ,error ){const _faf ="\u0044\u006fc\u0075\u006d\u0065n\u0074\u002e\u0047\u0065\u0074\u0050\u0061\u0067\u0065";
if pageNumber < 0{_bg .Log .Debug ("\u004a\u0042\u0049\u00472\u0020\u0050\u0061\u0067\u0065\u0020\u002d\u0020\u0047e\u0074\u0050\u0061\u0067\u0065\u003a\u0020\u0025\u0064\u002e\u0020\u0050\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062e\u0020\u006c\u006f\u0077\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0030\u002e\u0020\u0025\u0073",pageNumber ,_bea .Stack ());
return nil ,_ad .Errorf (_faf ,"\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032\u0020d\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020\u002d\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064 \u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u003a\u0020\u0025\u0064",pageNumber );
};if pageNumber > len (_fdg .Pages ){_bg .Log .Debug ("\u0050\u0061\u0067\u0065 n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0064\u002e\u0020%\u0073",pageNumber ,_bea .Stack ());return nil ,_ad .Error (_faf ,"\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065n\u0074\u0020\u002d\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};_cfcf ,_gfec :=_fdg .Pages [pageNumber ];if !_gfec {_bg .Log .Debug ("\u0050\u0061\u0067\u0065 n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0064\u002e\u0020%\u0073",pageNumber ,_bea .Stack ());return nil ,_ad .Errorf (_faf ,"\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065n\u0074\u0020\u002d\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};return _cfcf ,nil ;};func (_eec *Page )Encode (w _c .BinaryWriter )(_gega int ,_acbd error ){const _gdbb ="P\u0061\u0067\u0065\u002e\u0045\u006e\u0063\u006f\u0064\u0065";var _cag int ;for _ ,_cfa :=range _eec .Segments {if _cag ,_acbd =_cfa .Encode (w );
_acbd !=nil {return _gega ,_ad .Wrap (_acbd ,_gdbb ,"");};_gega +=_cag ;};return _gega ,nil ;};