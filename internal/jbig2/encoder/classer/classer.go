//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package classer ;import (_ee "github.com/unidoc/unipdf/v3/common";_f "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_ge "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";_ef "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_e "image";_gb "math";);func (_gd *Classer )getULCorners (_ba *_ge .Bitmap ,_da *_ge .Boxes )error {const _gbgg ="\u0067\u0065\u0074U\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";if _ba ==nil {return _ef .Error (_gbgg ,"\u006e\u0069l\u0020\u0069\u006da\u0067\u0065\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if _da ==nil {return _ef .Error (_gbgg ,"\u006e\u0069\u006c\u0020\u0062\u006f\u0075\u006e\u0064\u0073");};if _gd .PtaUL ==nil {_gd .PtaUL =&_ge .Points {};};_ag :=len (*_da );var (_dd ,_fed ,_cef ,_ab int ;_feg ,_cc ,_ega ,_ae float32 ;_aeg error ;_be *_e .Rectangle ;_aae *_ge .Bitmap ;_cb _e .Point ;);for _ede :=0;_ede < _ag ;_ede ++{_dd =_gd .BaseIndex +_ede ;if _feg ,_cc ,_aeg =_gd .CentroidPoints .GetGeometry (_dd );_aeg !=nil {return _ef .Wrap (_aeg ,_gbgg ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050o\u0069\u006e\u0074\u0073");};if _fed ,_aeg =_gd .ClassIDs .Get (_dd );_aeg !=nil {return _ef .Wrap (_aeg ,_gbgg ,"\u0043\u006c\u0061s\u0073\u0049\u0044\u0073\u002e\u0047\u0065\u0074");};if _ega ,_ae ,_aeg =_gd .CentroidPointsTemplates .GetGeometry (_fed );_aeg !=nil {return _ef .Wrap (_aeg ,_gbgg ,"\u0043\u0065\u006etr\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074\u0073\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");};_fag :=_ega -_feg ;_fb :=_ae -_cc ;if _fag >=0{_cef =int (_fag +0.5);}else {_cef =int (_fag -0.5);};if _fb >=0{_ab =int (_fb +0.5);}else {_ab =int (_fb -0.5);};if _be ,_aeg =_da .Get (_ede );_aeg !=nil {return _ef .Wrap (_aeg ,_gbgg ,"");};_cg ,_dc :=_be .Min .X ,_be .Min .Y ;_aae ,_aeg =_gd .UndilatedTemplates .GetBitmap (_fed );if _aeg !=nil {return _ef .Wrap (_aeg ,_gbgg ,"\u0055\u006e\u0064\u0069\u006c\u0061\u0074\u0065\u0064\u0054e\u006d\u0070\u006c\u0061\u0074\u0065\u0073.\u0047\u0065\u0074\u0028\u0069\u0043\u006c\u0061\u0073\u0073\u0029");};_cb ,_aeg =_ec (_ba ,_cg ,_dc ,_cef ,_ab ,_aae );if _aeg !=nil {return _ef .Wrap (_aeg ,_gbgg ,"");};_gd .PtaUL .AddPoint (float32 (_cg -_cef +_cb .X ),float32 (_dc -_ab +_cb .Y ));};return nil ;};func DefaultSettings ()Settings {_gbdg :=&Settings {};_gbdg .SetDefault ();return *_gbdg };const JbAddedPixels =6;type similarTemplatesFinder struct{Classer *Classer ;Width int ;Height int ;Index int ;CurrentNumbers []int ;N int ;};func _ec (_efdd *_ge .Bitmap ,_cea ,_egca ,_bf ,_egaf int ,_eed *_ge .Bitmap )(_edb _e .Point ,_dcf error ){const _agf ="\u0066i\u006e\u0061\u006c\u0041l\u0069\u0067\u006e\u006d\u0065n\u0074P\u006fs\u0069\u0074\u0069\u006f\u006e\u0069\u006eg";if _efdd ==nil {return _edb ,_ef .Error (_agf ,"\u0073\u006f\u0075\u0072ce\u0020\u006e\u006f\u0074\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064");};if _eed ==nil {return _edb ,_ef .Error (_agf ,"t\u0065\u006d\u0070\u006cat\u0065 \u006e\u006f\u0074\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064");};_cga ,_cgag :=_eed .Width ,_eed .Height ;_ddf ,_bg :=_cea -_bf -JbAddedPixels ,_egca -_egaf -JbAddedPixels ;_ee .Log .Trace ("\u0078\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0079\u003a\u0020\u0027\u0025\u0064'\u002c\u0020\u0077\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0068\u003a \u0027\u0025\u0064\u0027\u002c\u0020\u0062\u0078\u003a\u0020\u0027\u0025d'\u002c\u0020\u0062\u0079\u003a\u0020\u0027\u0025\u0064\u0027",_cea ,_egca ,_cga ,_cgag ,_ddf ,_bg );_gc ,_dcf :=_ge .Rect (_ddf ,_bg ,_cga ,_cgag );if _dcf !=nil {return _edb ,_ef .Wrap (_dcf ,_agf ,"");};_abca ,_ ,_dcf :=_efdd .ClipRectangle (_gc );if _dcf !=nil {_ee .Log .Error ("\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069\u0070\u0020\u0072\u0065c\u0074\u0061\u006e\u0067\u006c\u0065\u003a\u0020\u0025\u0076",_gc );return _edb ,_ef .Wrap (_dcf ,_agf ,"");};_aab :=_ge .New (_abca .Width ,_abca .Height );_beaa :=_gb .MaxInt32 ;var _faa ,_df ,_bgc ,_bgg ,_fad int ;for _faa =-1;_faa <=1;_faa ++{for _df =-1;_df <=1;_df ++{if _ ,_dcf =_ge .Copy (_aab ,_abca );_dcf !=nil {return _edb ,_ef .Wrap (_dcf ,_agf ,"");};if _dcf =_aab .RasterOperation (_df ,_faa ,_cga ,_cgag ,_ge .PixSrcXorDst ,_eed ,0,0);_dcf !=nil {return _edb ,_ef .Wrap (_dcf ,_agf ,"");};_bgc =_aab .CountPixels ();if _bgc < _beaa {_bgg =_df ;_fad =_faa ;_beaa =_bgc ;};};};_edb .X =_bgg ;_edb .Y =_fad ;return _edb ,nil ;};const (RankHaus Method =iota ;Correlation ;);func (_gf *Classer )AddPage (inputPage *_ge .Bitmap ,pageNumber int ,method Method )(_eff error ){const _efd ="\u0043l\u0061s\u0073\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_gf .Widths [pageNumber ]=inputPage .Width ;_gf .Heights [pageNumber ]=inputPage .Height ;if _eff =_gf .verifyMethod (method );_eff !=nil {return _ef .Wrap (_eff ,_efd ,"");};_d ,_eg ,_eff :=inputPage .GetComponents (_gf .Settings .Components ,_gf .Settings .MaxCompWidth ,_gf .Settings .MaxCompHeight );if _eff !=nil {return _ef .Wrap (_eff ,_efd ,"");};_ee .Log .Debug ("\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_d );if _eff =_gf .addPageComponents (inputPage ,_eg ,_d ,pageNumber ,method );_eff !=nil {return _ef .Wrap (_eff ,_efd ,"");};return nil ;};var TwoByTwoWalk =[]int {0,0,0,1,-1,0,0,-1,1,0,-1,1,1,1,-1,-1,1,-1,0,-2,2,0,0,2,-2,0,-1,-2,1,-2,2,-1,2,1,1,2,-1,2,-2,1,-2,-1,-2,-2,2,-2,2,2,-2,2};func (_dgc *Classer )classifyRankHaus (_aee *_ge .Boxes ,_gcgf *_ge .Bitmaps ,_fcd int )error {const _eeb ="\u0063\u006ca\u0073\u0073\u0069f\u0079\u0052\u0061\u006e\u006b\u0048\u0061\u0075\u0073";if _aee ==nil {return _ef .Error (_eeb ,"\u0062\u006fx\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if _gcgf ==nil {return _ef .Error (_eeb ,"\u0070\u0069x\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};_bbd :=len (_gcgf .Values );if _bbd ==0{return _ef .Error (_eeb ,"e\u006dp\u0074\u0079\u0020\u006e\u0065\u0077\u0020\u0063o\u006d\u0070\u006f\u006een\u0074\u0073");};_bff :=_gcgf .CountPixels ();_dgb :=_dgc .Settings .SizeHaus ;_dcge :=_ge .SelCreateBrick (_dgb ,_dgb ,_dgb /2,_dgb /2,_ge .SelHit );_aaa :=&_ge .Bitmaps {Values :make ([]*_ge .Bitmap ,_bbd )};_cca :=&_ge .Bitmaps {Values :make ([]*_ge .Bitmap ,_bbd )};var (_adf ,_gedd ,_bged *_ge .Bitmap ;_bagf error ;);for _ffa :=0;_ffa < _bbd ;_ffa ++{_adf ,_bagf =_gcgf .GetBitmap (_ffa );if _bagf !=nil {return _ef .Wrap (_bagf ,_eeb ,"");};_gedd ,_bagf =_adf .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);if _bagf !=nil {return _ef .Wrap (_bagf ,_eeb ,"");};_bged ,_bagf =_ge .Dilate (nil ,_gedd ,_dcge );if _bagf !=nil {return _ef .Wrap (_bagf ,_eeb ,"");};_aaa .Values [_bbd ]=_gedd ;_cca .Values [_bbd ]=_bged ;};_edd ,_bagf :=_ge .Centroids (_aaa .Values );if _bagf !=nil {return _ef .Wrap (_bagf ,_eeb ,"");};if _bagf =_edd .Add (_dgc .CentroidPoints );_bagf !=nil {_ee .Log .Trace ("\u004e\u006f\u0020\u0063en\u0074\u0072\u006f\u0069\u0064\u0073\u0020\u0074\u006f\u0020\u0061\u0064\u0064");};if _dgc .Settings .RankHaus ==1.0{_bagf =_dgc .classifyRankHouseOne (_aee ,_gcgf ,_aaa ,_cca ,_edd ,_fcd );}else {_bagf =_dgc .classifyRankHouseNonOne (_aee ,_gcgf ,_aaa ,_cca ,_edd ,_bff ,_fcd );};if _bagf !=nil {return _ef .Wrap (_bagf ,_eeb ,"");};return nil ;};type Method int ;func (_eedc *Settings )SetDefault (){if _eedc .MaxCompWidth ==0{switch _eedc .Components {case _ge .ComponentConn :_eedc .MaxCompWidth =MaxConnCompWidth ;case _ge .ComponentCharacters :_eedc .MaxCompWidth =MaxCharCompWidth ;case _ge .ComponentWords :_eedc .MaxCompWidth =MaxWordCompWidth ;};};if _eedc .MaxCompHeight ==0{_eedc .MaxCompHeight =MaxCompHeight ;};if _eedc .Thresh ==0.0{_eedc .Thresh =0.9;};if _eedc .WeightFactor ==0.0{_eedc .WeightFactor =0.75;};if _eedc .RankHaus ==0.0{_eedc .RankHaus =0.97;};if _eedc .SizeHaus ==0{_eedc .SizeHaus =2;};};func (_deb *Classer )classifyCorrelation (_fagc *_ge .Boxes ,_ccd *_ge .Bitmaps ,_eae int )error {const _dcd ="\u0063\u006c\u0061\u0073si\u0066\u0079\u0043\u006f\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e";if _fagc ==nil {return _ef .Error (_dcd ,"\u006e\u0065\u0077\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0062\u006f\u0075\u006e\u0064\u0069\u006e\u0067\u0020\u0062o\u0078\u0065\u0073\u0020\u006eo\u0074\u0020f\u006f\u0075\u006e\u0064");};if _ccd ==nil {return _ef .Error (_dcd ,"\u006e\u0065wC\u006f\u006d\u0070o\u006e\u0065\u006e\u0074s b\u0069tm\u0061\u0070\u0020\u0061\u0072\u0072\u0061y \u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064");};_gge :=len (_ccd .Values );if _gge ==0{_ee .Log .Debug ("\u0063l\u0061\u0073s\u0069\u0066\u0079C\u006f\u0072\u0072\u0065\u006c\u0061\u0074i\u006f\u006e\u0020\u002d\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0070\u0069\u0078\u0061s\u0020\u0069\u0073\u0020\u0065\u006d\u0070\u0074\u0079");return nil ;};var (_efg ,_fedf *_ge .Bitmap ;_ac error ;);_bbf :=&_ge .Bitmaps {Values :make ([]*_ge .Bitmap ,_gge )};for _ca ,_bge :=range _ccd .Values {_fedf ,_ac =_bge .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);if _ac !=nil {return _ef .Wrap (_ac ,_dcd ,"");};_bbf .Values [_ca ]=_fedf ;};_eedb :=_deb .FgTemplates ;_egcf :=_ge .MakePixelSumTab8 ();_dcb :=_ge .MakePixelCentroidTab8 ();_ff :=make ([]int ,_gge );_aaf :=make ([][]int ,_gge );_gbd :=_ge .Points (make ([]_ge .Point ,_gge ));_fda :=&_gbd ;var (_eb ,_gcb int ;_bbg ,_bd ,_ged int ;_gcg ,_ccdf int ;_db byte ;);for _edc ,_dg :=range _bbf .Values {_aaf [_edc ]=make ([]int ,_dg .Height );_eb =0;_gcb =0;_bd =(_dg .Height -1)*_dg .RowStride ;_bbg =0;for _ccdf =_dg .Height -1;_ccdf >=0;_ccdf ,_bd =_ccdf -1,_bd -_dg .RowStride {_aaf [_edc ][_ccdf ]=_bbg ;_ged =0;for _gcg =0;_gcg < _dg .RowStride ;_gcg ++{_db =_dg .Data [_bd +_gcg ];_ged +=_egcf [_db ];_eb +=_dcb [_db ]+_gcg *8*_egcf [_db ];};_bbg +=_ged ;_gcb +=_ged *_ccdf ;};_ff [_edc ]=_bbg ;if _bbg > 0{(*_fda )[_edc ]=_ge .Point {X :float32 (_eb )/float32 (_bbg ),Y :float32 (_gcb )/float32 (_bbg )};}else {(*_fda )[_edc ]=_ge .Point {X :float32 (_dg .Width )/float32 (2),Y :float32 (_dg .Height )/float32 (2)};};};if _ac =_deb .CentroidPoints .Add (_fda );_ac !=nil {return _ef .Wrap (_ac ,_dcd ,"\u0063\u0065\u006et\u0072\u006f\u0069\u0064\u0020\u0061\u0064\u0064");};var (_dfd ,_dea ,_dfg int ;_dfda float64 ;_fagcf ,_dcbb ,_ffd ,_cd float32 ;_bag ,_gfb _ge .Point ;_af bool ;_aac *similarTemplatesFinder ;_cba int ;_bgb *_ge .Bitmap ;_ebf *_e .Rectangle ;_cab *_ge .Bitmaps ;);for _cba ,_fedf =range _bbf .Values {_dea =_ff [_cba ];if _fagcf ,_dcbb ,_ac =_fda .GetGeometry (_cba );_ac !=nil {return _ef .Wrap (_ac ,_dcd ,"\u0070t\u0061\u0020\u002d\u0020\u0069");};_af =false ;_fc :=len (_deb .UndilatedTemplates .Values );_aac =_adcf (_deb ,_fedf );for _ace :=_aac .Next ();_ace > -1;{if _bgb ,_ac =_deb .UndilatedTemplates .GetBitmap (_ace );_ac !=nil {return _ef .Wrap (_ac ,_dcd ,"\u0075\u006e\u0069dl\u0061\u0074\u0065\u0064\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0062\u006d\u0032");};if _dfg ,_ac =_eedb .GetInt (_ace );_ac !=nil {_ee .Log .Trace ("\u0046\u0047\u0020T\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u005b\u0069\u0063\u006ca\u0073\u0073\u005d\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_ac );};if _ffd ,_cd ,_ac =_deb .CentroidPointsTemplates .GetGeometry (_ace );_ac !=nil {return _ef .Wrap (_ac ,_dcd ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074T\u0065\u006d\u0070\u006c\u0061\u0074e\u0073\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u00782\u002c\u0079\u0032\u0020");};if _deb .Settings .WeightFactor > 0.0{if _dfd ,_ac =_deb .TemplateAreas .Get (_ace );_ac !=nil {_ee .Log .Trace ("\u0054\u0065\u006dp\u006c\u0061\u0074\u0065A\u0072\u0065\u0061\u0073\u005b\u0069\u0063l\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0061\u0072\u0065\u0061\u0020\u0025\u0076",_ac );};_dfda =_deb .Settings .Thresh +(1.0-_deb .Settings .Thresh )*_deb .Settings .WeightFactor *float64 (_dfg )/float64 (_dfd );}else {_dfda =_deb .Settings .Thresh ;};_beac ,_efbc :=_ge .CorrelationScoreThresholded (_fedf ,_bgb ,_dea ,_dfg ,_bag .X -_gfb .X ,_bag .Y -_gfb .Y ,MaxDiffWidth ,MaxDiffHeight ,_egcf ,_aaf [_cba ],float32 (_dfda ));if _efbc !=nil {return _ef .Wrap (_efbc ,_dcd ,"");};if _gef {var (_ad ,_cf float64 ;_bc ,_cefg int ;);_ad ,_efbc =_ge .CorrelationScore (_fedf ,_bgb ,_dea ,_dfg ,_fagcf -_ffd ,_dcbb -_cd ,MaxDiffWidth ,MaxDiffHeight ,_egcf );if _efbc !=nil {return _ef .Wrap (_efbc ,_dcd ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");};_cf ,_efbc =_ge .CorrelationScoreSimple (_fedf ,_bgb ,_dea ,_dfg ,_fagcf -_ffd ,_dcbb -_cd ,MaxDiffWidth ,MaxDiffHeight ,_egcf );if _efbc !=nil {return _ef .Wrap (_efbc ,_dcd ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");};_bc =int (_gb .Sqrt (_ad *float64 (_dea )*float64 (_dfg )));_cefg =int (_gb .Sqrt (_cf *float64 (_dea )*float64 (_dfg )));if (_ad >=_dfda )!=(_cf >=_dfda ){return _ef .Errorf (_dcd ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043\u006f\u0072r\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0063\u006f\u0072\u0065\u0020\u006d\u0069\u0073\u006d\u0061\u0074\u0063\u0068\u0020-\u0020\u0025d\u0028\u00250\u002e\u0034\u0066\u002c\u0020\u0025\u0076\u0029\u0020\u0076\u0073\u0020\u0025d(\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0076)\u0020\u0025\u0030\u002e\u0034\u0066",_bc ,_ad ,_ad >=float64 (_dfda ),_cefg ,_cf ,_cf >=float64 (_dfda ),_ad -_cf );};if _ad >=_dfda !=_beac {return _ef .Errorf (_dcd ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043o\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e \u0073\u0063\u006f\u0072\u0065 \u004d\u0069\u0073\u006d\u0061t\u0063\u0068 \u0062\u0065\u0074w\u0065\u0065\u006e\u0020\u0063\u006frr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020/\u0020\u0074\u0068\u0072\u0065s\u0068\u006f\u006c\u0064\u002e\u0020\u0043\u006f\u006dpa\u0072\u0069\u0073\u006f\u006e:\u0020\u0025\u0030\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0064\u0029\u0020\u003e\u003d\u0020\u00250\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u0029\u0020\u0076\u0073\u0020\u0025\u0076",_ad ,_ad *float64 (_dea )*float64 (_dfg ),_bc ,_dfda ,float32 (_dfda )*float32 (_dea )*float32 (_dfg ),_beac );};};if _beac {_af =true ;if _efbc =_deb .ClassIDs .Add (_ace );_efbc !=nil {return _ef .Wrap (_efbc ,_dcd ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");};if _efbc =_deb .ComponentPageNumbers .Add (_eae );_efbc !=nil {return _ef .Wrap (_efbc ,_dcd ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");};if _deb .Settings .KeepClassInstances {if _efg ,_efbc =_ccd .GetBitmap (_cba );_efbc !=nil {return _ef .Wrap (_efbc ,_dcd ,"\u004b\u0065\u0065\u0070Cl\u0061\u0073\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u002d \u0069");};if _cab ,_efbc =_deb .ClassInstances .GetBitmaps (_ace );_efbc !=nil {return _ef .Wrap (_efbc ,_dcd ,"K\u0065\u0065\u0070\u0043\u006c\u0061s\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065s\u0020\u002d\u0020i\u0043l\u0061\u0073\u0073");};_cab .AddBitmap (_efg );if _ebf ,_efbc =_fagc .Get (_cba );_efbc !=nil {return _ef .Wrap (_efbc ,_dcd ,"\u004be\u0065p\u0043\u006c\u0061\u0073\u0073I\u006e\u0073t\u0061\u006e\u0063\u0065\u0073");};_cab .AddBox (_ebf );};break ;};};if !_af {if _ac =_deb .ClassIDs .Add (_fc );_ac !=nil {return _ef .Wrap (_ac ,_dcd ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _ac =_deb .ComponentPageNumbers .Add (_eae );_ac !=nil {return _ef .Wrap (_ac ,_dcd ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_cab =&_ge .Bitmaps {};if _efg ,_ac =_ccd .GetBitmap (_cba );_ac !=nil {return _ef .Wrap (_ac ,_dcd ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_cab .AddBitmap (_efg );_dcg ,_fae :=_efg .Width ,_efg .Height ;_eda :=uint64 (_fae )*uint64 (_dcg );_deb .TemplatesSize .Add (_eda ,_fc );if _ebf ,_ac =_fagc .Get (_cba );_ac !=nil {return _ef .Wrap (_ac ,_dcd ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_cab .AddBox (_ebf );_deb .ClassInstances .AddBitmaps (_cab );_deb .CentroidPointsTemplates .AddPoint (_fagcf ,_dcbb );_deb .FgTemplates .AddInt (_dea );_deb .UndilatedTemplates .AddBitmap (_efg );_dfd =(_fedf .Width -2*JbAddedPixels )*(_fedf .Height -2*JbAddedPixels );if _ac =_deb .TemplateAreas .Add (_dfd );_ac !=nil {return _ef .Wrap (_ac ,_dcd ,"\u0021\u0066\u006f\u0075\u006e\u0064");};};};_deb .NumberOfClasses =len (_deb .UndilatedTemplates .Values );return nil ;};func (_fca *Classer )classifyRankHouseNonOne (_ade *_ge .Boxes ,_ffb ,_bfb ,_cbb *_ge .Bitmaps ,_edg *_ge .Points ,_fada *_f .NumSlice ,_cge int )(_adc error ){const _fdca ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";var (_faf ,_fg ,_bbe ,_gce float32 ;_aff ,_bbfb ,_gca int ;_aea ,_gad ,_cfc ,_cgbg ,_adb *_ge .Bitmap ;_acg ,_eaf bool ;);_fge :=_ge .MakePixelSumTab8 ();for _age :=0;_age < len (_ffb .Values );_age ++{if _gad ,_adc =_bfb .GetBitmap (_age );_adc !=nil {return _ef .Wrap (_adc ,_fdca ,"b\u006d\u0073\u0031\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};if _aff ,_adc =_fada .GetInt (_age );_adc !=nil {_ee .Log .Trace ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0046\u0047T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073 \u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_age ,_adc );};if _cfc ,_adc =_cbb .GetBitmap (_age );_adc !=nil {return _ef .Wrap (_adc ,_fdca ,"b\u006d\u0073\u0032\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};if _faf ,_fg ,_adc =_edg .GetGeometry (_age );_adc !=nil {return _ef .Wrapf (_adc ,_fdca ,"\u0070t\u0061[\u0069\u005d\u002e\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079");};_efde :=len (_fca .UndilatedTemplates .Values );_acg =false ;_dcc :=_adcf (_fca ,_gad );for _gca =_dcc .Next ();_gca > -1;{if _cgbg ,_adc =_fca .UndilatedTemplates .GetBitmap (_gca );_adc !=nil {return _ef .Wrap (_adc ,_fdca ,"\u0070\u0069\u0078\u0061\u0074\u002e\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");};if _bbfb ,_adc =_fca .FgTemplates .GetInt (_gca );_adc !=nil {_ee .Log .Trace ("\u0047\u0065\u0074\u0074\u0069\u006eg\u0020\u0046\u0047\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u005b\u0025d\u005d\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_gca ,_adc );};if _adb ,_adc =_fca .DilatedTemplates .GetBitmap (_gca );_adc !=nil {return _ef .Wrap (_adc ,_fdca ,"\u0070\u0069\u0078\u0061\u0074\u0064\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");};if _bbe ,_gce ,_adc =_fca .CentroidPointsTemplates .GetGeometry (_gca );_adc !=nil {return _ef .Wrap (_adc ,_fdca ,"\u0043\u0065\u006et\u0072\u006f\u0069\u0064P\u006f\u0069\u006e\u0074\u0073\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u005b\u0069\u0043\u006c\u0061\u0073\u0073\u005d");};_eaf ,_adc =_ge .RankHausTest (_gad ,_cfc ,_cgbg ,_adb ,_faf -_bbe ,_fg -_gce ,MaxDiffWidth ,MaxDiffHeight ,_aff ,_bbfb ,float32 (_fca .Settings .RankHaus ),_fge );if _adc !=nil {return _ef .Wrap (_adc ,_fdca ,"");};if _eaf {_acg =true ;if _adc =_fca .ClassIDs .Add (_gca );_adc !=nil {return _ef .Wrap (_adc ,_fdca ,"");};if _adc =_fca .ComponentPageNumbers .Add (_cge );_adc !=nil {return _ef .Wrap (_adc ,_fdca ,"");};if _fca .Settings .KeepClassInstances {_fgf ,_bbff :=_fca .ClassInstances .GetBitmaps (_gca );if _bbff !=nil {return _ef .Wrap (_bbff ,_fdca ,"\u0063\u002e\u0050\u0069\u0078\u0061\u0061\u002e\u0047\u0065\u0074B\u0069\u0074\u006d\u0061\u0070\u0073\u0028\u0069\u0043\u006ca\u0073\u0073\u0029");};if _aea ,_bbff =_ffb .GetBitmap (_age );_bbff !=nil {return _ef .Wrap (_bbff ,_fdca ,"\u0070i\u0078\u0061\u005b\u0069\u005d");};_fgf .Values =append (_fgf .Values ,_aea );_eged ,_bbff :=_ade .Get (_age );if _bbff !=nil {return _ef .Wrap (_bbff ,_fdca ,"b\u006f\u0078\u0061\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};_fgf .Boxes =append (_fgf .Boxes ,_eged );};break ;};};if !_acg {if _adc =_fca .ClassIDs .Add (_efde );_adc !=nil {return _ef .Wrap (_adc ,_fdca ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _adc =_fca .ComponentPageNumbers .Add (_cge );_adc !=nil {return _ef .Wrap (_adc ,_fdca ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_gab :=&_ge .Bitmaps {};_aea =_ffb .Values [_age ];_gab .AddBitmap (_aea );_bcg ,_ecd :=_aea .Width ,_aea .Height ;_fca .TemplatesSize .Add (uint64 (_bcg )*uint64 (_ecd ),_efde );_bggc ,_beb :=_ade .Get (_age );if _beb !=nil {return _ef .Wrap (_beb ,_fdca ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_gab .AddBox (_bggc );_fca .ClassInstances .AddBitmaps (_gab );_fca .CentroidPointsTemplates .AddPoint (_faf ,_fg );_fca .UndilatedTemplates .AddBitmap (_gad );_fca .DilatedTemplates .AddBitmap (_cfc );_fca .FgTemplates .AddInt (_aff );};};_fca .NumberOfClasses =len (_fca .UndilatedTemplates .Values );return nil ;};func _adcf (_bbc *Classer ,_fgfa *_ge .Bitmap )*similarTemplatesFinder {return &similarTemplatesFinder {Width :_fgfa .Width ,Height :_fgfa .Height ,Classer :_bbc };};type Classer struct{BaseIndex int ;Settings Settings ;ComponentsNumber *_f .IntSlice ;TemplateAreas *_f .IntSlice ;Widths map[int ]int ;Heights map[int ]int ;NumberOfClasses int ;ClassInstances *_ge .BitmapsArray ;UndilatedTemplates *_ge .Bitmaps ;DilatedTemplates *_ge .Bitmaps ;TemplatesSize _f .IntsMap ;FgTemplates *_f .NumSlice ;CentroidPoints *_ge .Points ;CentroidPointsTemplates *_ge .Points ;ClassIDs *_f .IntSlice ;ComponentPageNumbers *_f .IntSlice ;PtaUL *_ge .Points ;PtaLL *_ge .Points ;};func (_ceg Settings )Validate ()error {const _dccf ="\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0073\u002e\u0056\u0061\u006ci\u0064\u0061\u0074\u0065";if _ceg .Thresh < 0.4||_ceg .Thresh > 0.98{return _ef .Error (_dccf ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074\u0068\u0072\u0065\u0073\u0068\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0034\u0020\u002d\u0020\u0030\u002e\u0039\u0038\u005d");};if _ceg .WeightFactor < 0.0||_ceg .WeightFactor > 1.0{return _ef .Error (_dccf ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006ec\u006f\u0064\u0065\u0072\u0020w\u0065\u0069\u0067\u0068\u0074\u0020\u0066\u0061\u0063\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0030\u0020\u002d\u0020\u0031\u002e\u0030\u005d");};if _ceg .RankHaus < 0.5||_ceg .RankHaus > 1.0{return _ef .Error (_dccf ,"\u006a\u0062\u0069\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0072a\u006e\u006b\u0020\u0068\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065 \u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065 [\u0030\u002e\u0035\u0020\u002d\u0020\u0031\u002e\u0030\u005d");};if _ceg .SizeHaus < 1||_ceg .SizeHaus > 10{return _ef .Error (_dccf ,"\u006a\u0062\u0069\u0067\u0032 \u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0073\u0069\u007a\u0065\u0020h\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0031\u0020\u002d\u0020\u0031\u0030]");};switch _ceg .Components {case _ge .ComponentConn ,_ge .ComponentCharacters ,_ge .ComponentWords :default:return _ef .Error (_dccf ,"\u0069n\u0076\u0061\u006c\u0069d\u0020\u0063\u006c\u0061\u0073s\u0065r\u0020c\u006f\u006d\u0070\u006f\u006e\u0065\u006et");};return nil ;};const (MaxDiffWidth =2;MaxDiffHeight =2;);func (_egg *Classer )classifyRankHouseOne (_ebc *_ge .Boxes ,_fbg ,_abe ,_aec *_ge .Bitmaps ,_ead *_ge .Points ,_bdg int )(_egdb error ){const _agb ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";var (_bae ,_cdf ,_cefd ,_efe float32 ;_bagg int ;_edeb ,_gdc ,_fba ,_gba ,_dde *_ge .Bitmap ;_gaa ,_cgb bool ;);for _ege :=0;_ege < len (_fbg .Values );_ege ++{_gdc =_abe .Values [_ege ];_fba =_aec .Values [_ege ];_bae ,_cdf ,_egdb =_ead .GetGeometry (_ege );if _egdb !=nil {return _ef .Wrapf (_egdb ,_agb ,"\u0066\u0069\u0072\u0073\u0074\u0020\u0067\u0065\u006fm\u0065\u0074\u0072\u0079");};_agbb :=len (_egg .UndilatedTemplates .Values );_gaa =false ;_gbdd :=_adcf (_egg ,_gdc );for _bagg =_gbdd .Next ();_bagg > -1;{_gba ,_egdb =_egg .UndilatedTemplates .GetBitmap (_bagg );if _egdb !=nil {return _ef .Wrap (_egdb ,_agb ,"\u0062\u006d\u0033");};_dde ,_egdb =_egg .DilatedTemplates .GetBitmap (_bagg );if _egdb !=nil {return _ef .Wrap (_egdb ,_agb ,"\u0062\u006d\u0034");};_cefd ,_efe ,_egdb =_egg .CentroidPointsTemplates .GetGeometry (_bagg );if _egdb !=nil {return _ef .Wrap (_egdb ,_agb ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0073");};_cgb ,_egdb =_ge .HausTest (_gdc ,_fba ,_gba ,_dde ,_bae -_cefd ,_cdf -_efe ,MaxDiffWidth ,MaxDiffHeight );if _egdb !=nil {return _ef .Wrap (_egdb ,_agb ,"");};if _cgb {_gaa =true ;if _egdb =_egg .ClassIDs .Add (_bagg );_egdb !=nil {return _ef .Wrap (_egdb ,_agb ,"");};if _egdb =_egg .ComponentPageNumbers .Add (_bdg );_egdb !=nil {return _ef .Wrap (_egdb ,_agb ,"");};if _egg .Settings .KeepClassInstances {_eab ,_bec :=_egg .ClassInstances .GetBitmaps (_bagg );if _bec !=nil {return _ef .Wrap (_bec ,_agb ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_edeb ,_bec =_fbg .GetBitmap (_ege );if _bec !=nil {return _ef .Wrap (_bec ,_agb ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_eab .AddBitmap (_edeb );_ddb ,_bec :=_ebc .Get (_ege );if _bec !=nil {return _ef .Wrap (_bec ,_agb ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_eab .AddBox (_ddb );};break ;};};if !_gaa {if _egdb =_egg .ClassIDs .Add (_agbb );_egdb !=nil {return _ef .Wrap (_egdb ,_agb ,"");};if _egdb =_egg .ComponentPageNumbers .Add (_bdg );_egdb !=nil {return _ef .Wrap (_egdb ,_agb ,"");};_efgb :=&_ge .Bitmaps {};_edeb ,_egdb =_fbg .GetBitmap (_ege );if _egdb !=nil {return _ef .Wrap (_egdb ,_agb ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_efgb .Values =append (_efgb .Values ,_edeb );_gbf ,_gae :=_edeb .Width ,_edeb .Height ;_egg .TemplatesSize .Add (uint64 (_gae )*uint64 (_gbf ),_agbb );_agd ,_eag :=_ebc .Get (_ege );if _eag !=nil {return _ef .Wrap (_eag ,_agb ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_efgb .AddBox (_agd );_egg .ClassInstances .AddBitmaps (_efgb );_egg .CentroidPointsTemplates .AddPoint (_bae ,_cdf );_egg .UndilatedTemplates .AddBitmap (_gdc );_egg .DilatedTemplates .AddBitmap (_fba );};};return nil ;};func (_fe *Classer )addPageComponents (_ce *_ge .Bitmap ,_efb *_ge .Boxes ,_ea *_ge .Bitmaps ,_fdc int ,_gg Method )error {const _ed ="\u0043l\u0061\u0073\u0073\u0065r\u002e\u0041\u0064\u0064\u0050a\u0067e\u0043o\u006d\u0070\u006f\u006e\u0065\u006e\u0074s";if _ce ==nil {return _ef .Error (_ed ,"\u006e\u0069\u006c\u0020\u0069\u006e\u0070\u0075\u0074 \u0070\u0061\u0067\u0065");};if _efb ==nil ||_ea ==nil ||len (*_efb )==0{_ee .Log .Trace ("\u0041\u0064\u0064P\u0061\u0067\u0065\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0073\u002e\u0020\u004e\u006f\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065n\u0074\u0073\u0020\u0066\u006f\u0075\u006e\u0064",_ce );return nil ;};var _ga error ;switch _gg {case RankHaus :_ga =_fe .classifyRankHaus (_efb ,_ea ,_fdc );case Correlation :_ga =_fe .classifyCorrelation (_efb ,_ea ,_fdc );default:_ee .Log .Debug ("\u0055\u006ek\u006e\u006f\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064\u003a\u0020'%\u0076\u0027",_gg );return _ef .Error (_ed ,"\u0075\u006e\u006bno\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064");};if _ga !=nil {return _ef .Wrap (_ga ,_ed ,"");};if _ga =_fe .getULCorners (_ce ,_efb );_ga !=nil {return _ef .Wrap (_ga ,_ed ,"");};_b :=len (*_efb );_fe .BaseIndex +=_b ;if _ga =_fe .ComponentsNumber .Add (_b );_ga !=nil {return _ef .Wrap (_ga ,_ed ,"");};return nil ;};var _gef bool ;func (_fef *similarTemplatesFinder )Next ()int {var (_ebd ,_fbf ,_fce ,_cbaf int ;_fcf bool ;_eee *_ge .Bitmap ;_gfc error ;);for {if _fef .Index >=25{return -1;};_fbf =_fef .Width +TwoByTwoWalk [2*_fef .Index ];_ebd =_fef .Height +TwoByTwoWalk [2*_fef .Index +1];if _ebd < 1||_fbf < 1{_fef .Index ++;continue ;};if len (_fef .CurrentNumbers )==0{_fef .CurrentNumbers ,_fcf =_fef .Classer .TemplatesSize .GetSlice (uint64 (_fbf )*uint64 (_ebd ));if !_fcf {_fef .Index ++;continue ;};_fef .N =0;};_fce =len (_fef .CurrentNumbers );for ;_fef .N < _fce ;_fef .N ++{_cbaf =_fef .CurrentNumbers [_fef .N ];_eee ,_gfc =_fef .Classer .DilatedTemplates .GetBitmap (_cbaf );if _gfc !=nil {_ee .Log .Debug ("\u0046\u0069\u006e\u0064\u004e\u0065\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0074\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u006e\u006f\u0074 \u0066\u006fu\u006e\u0064\u003a\u0020");return 0;};if _eee .Width -2*JbAddedPixels ==_fbf &&_eee .Height -2*JbAddedPixels ==_ebd {return _cbaf ;};};_fef .Index ++;_fef .CurrentNumbers =nil ;};};func (_egd *Classer )ComputeLLCorners ()(_egc error ){const _gfe ="\u0043l\u0061\u0073\u0073\u0065\u0072\u002e\u0043\u006f\u006d\u0070\u0075t\u0065\u004c\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";if _egd .PtaUL ==nil {return _ef .Error (_gfe ,"\u0055\u004c\u0020\u0043or\u006e\u0065\u0072\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006ee\u0064");};_fd :=len (*_egd .PtaUL );_egd .PtaLL =&_ge .Points {};var (_geg ,_fa float32 ;_a ,_de int ;_aa *_ge .Bitmap ;);for _deg :=0;_deg < _fd ;_deg ++{_geg ,_fa ,_egc =_egd .PtaUL .GetGeometry (_deg );if _egc !=nil {_ee .Log .Debug ("\u0047e\u0074\u0074\u0069\u006e\u0067\u0020\u0050\u0074\u0061\u0055\u004c \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_egc );return _ef .Wrap (_egc ,_gfe ,"\u0050\u0074\u0061\u0055\u004c\u0020\u0047\u0065\u006fm\u0065\u0074\u0072\u0079");};_a ,_egc =_egd .ClassIDs .Get (_deg );if _egc !=nil {_ee .Log .Debug ("\u0047\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0043\u006c\u0061s\u0073\u0049\u0044\u0020\u0066\u0061\u0069\u006c\u0065\u0064:\u0020\u0025\u0076",_egc );return _ef .Wrap (_egc ,_gfe ,"\u0043l\u0061\u0073\u0073\u0049\u0044");};_aa ,_egc =_egd .UndilatedTemplates .GetBitmap (_a );if _egc !=nil {_ee .Log .Debug ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0055\u006ed\u0069\u006c\u0061\u0074\u0065\u0064\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_egc );return _ef .Wrap (_egc ,_gfe ,"\u0055\u006e\u0064\u0069la\u0074\u0065\u0064\u0020\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");};_de =_aa .Height ;_egd .PtaLL .AddPoint (_geg ,_fa +float32 (_de ));};return nil ;};type Settings struct{MaxCompWidth int ;MaxCompHeight int ;SizeHaus int ;RankHaus float64 ;Thresh float64 ;WeightFactor float64 ;KeepClassInstances bool ;Components _ge .Component ;Method Method ;};func (_abc *Classer )verifyMethod (_fbb Method )error {if _fbb !=RankHaus &&_fbb !=Correlation {return _ef .Error ("\u0076\u0065\u0072i\u0066\u0079\u004d\u0065\u0074\u0068\u006f\u0064","\u0069\u006e\u0076\u0061li\u0064\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072\u0020\u006d\u0065\u0074\u0068o\u0064");};return nil ;};func Init (settings Settings )(*Classer ,error ){const _gbg ="\u0063\u006c\u0061s\u0073\u0065\u0072\u002e\u0049\u006e\u0069\u0074";_c :=&Classer {Settings :settings ,Widths :map[int ]int {},Heights :map[int ]int {},TemplatesSize :_f .IntsMap {},TemplateAreas :&_f .IntSlice {},ComponentPageNumbers :&_f .IntSlice {},ClassIDs :&_f .IntSlice {},ComponentsNumber :&_f .IntSlice {},CentroidPoints :&_ge .Points {},CentroidPointsTemplates :&_ge .Points {},UndilatedTemplates :&_ge .Bitmaps {},DilatedTemplates :&_ge .Bitmaps {},ClassInstances :&_ge .BitmapsArray {},FgTemplates :&_f .NumSlice {}};if _gbb :=_c .Settings .Validate ();_gbb !=nil {return nil ,_ef .Wrap (_gbb ,_gbg ,"");};return _c ,nil ;};const (MaxConnCompWidth =350;MaxCharCompWidth =350;MaxWordCompWidth =1000;MaxCompHeight =120;);