//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package classer ;import (_a "github.com/unidoc/unipdf/v3/common";_c "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_fe "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";_bg "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_b "image";_g "math";);func (_ff *Classer )AddPage (inputPage *_fe .Bitmap ,pageNumber int ,method Method )(_fc error ){const _bf ="\u0043l\u0061s\u0073\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_ff .Widths [pageNumber ]=inputPage .Width ;_ff .Heights [pageNumber ]=inputPage .Height ;if _fc =_ff .verifyMethod (method );_fc !=nil {return _bg .Wrap (_fc ,_bf ,"");};_gd ,_bfd ,_fc :=inputPage .GetComponents (_ff .Settings .Components ,_ff .Settings .MaxCompWidth ,_ff .Settings .MaxCompHeight );if _fc !=nil {return _bg .Wrap (_fc ,_bf ,"");};_a .Log .Debug ("\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_gd );if _fc =_ff .addPageComponents (inputPage ,_bfd ,_gd ,pageNumber ,method );_fc !=nil {return _bg .Wrap (_fc ,_bf ,"");};return nil ;};func _ea (_cda *_fe .Bitmap ,_ee ,_ffb ,_edc ,_dda int ,_da *_fe .Bitmap )(_dc _b .Point ,_fce error ){const _fcd ="\u0066i\u006e\u0061\u006c\u0041l\u0069\u0067\u006e\u006d\u0065n\u0074P\u006fs\u0069\u0074\u0069\u006f\u006e\u0069\u006eg";if _cda ==nil {return _dc ,_bg .Error (_fcd ,"\u0073\u006f\u0075\u0072ce\u0020\u006e\u006f\u0074\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064");};if _da ==nil {return _dc ,_bg .Error (_fcd ,"t\u0065\u006d\u0070\u006cat\u0065 \u006e\u006f\u0074\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064");};_dee ,_gg :=_da .Width ,_da .Height ;_dcb ,_eba :=_ee -_edc -JbAddedPixels ,_ffb -_dda -JbAddedPixels ;_a .Log .Trace ("\u0078\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0079\u003a\u0020\u0027\u0025\u0064'\u002c\u0020\u0077\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0068\u003a \u0027\u0025\u0064\u0027\u002c\u0020\u0062\u0078\u003a\u0020\u0027\u0025d'\u002c\u0020\u0062\u0079\u003a\u0020\u0027\u0025\u0064\u0027",_ee ,_ffb ,_dee ,_gg ,_dcb ,_eba );_eae ,_fce :=_fe .Rect (_dcb ,_eba ,_dee ,_gg );if _fce !=nil {return _dc ,_bg .Wrap (_fce ,_fcd ,"");};_cc ,_ ,_fce :=_cda .ClipRectangle (_eae );if _fce !=nil {_a .Log .Error ("\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069\u0070\u0020\u0072\u0065c\u0074\u0061\u006e\u0067\u006c\u0065\u003a\u0020\u0025\u0076",_eae );return _dc ,_bg .Wrap (_fce ,_fcd ,"");};_bb :=_fe .New (_cc .Width ,_cc .Height );_gda :=_g .MaxInt32 ;var _ae ,_cag ,_fcg ,_eag ,_edf int ;for _ae =-1;_ae <=1;_ae ++{for _cag =-1;_cag <=1;_cag ++{if _ ,_fce =_fe .Copy (_bb ,_cc );_fce !=nil {return _dc ,_bg .Wrap (_fce ,_fcd ,"");};if _fce =_bb .RasterOperation (_cag ,_ae ,_dee ,_gg ,_fe .PixSrcXorDst ,_da ,0,0);_fce !=nil {return _dc ,_bg .Wrap (_fce ,_fcd ,"");};_fcg =_bb .CountPixels ();if _fcg < _gda {_eag =_cag ;_edf =_ae ;_gda =_fcg ;};};};_dc .X =_eag ;_dc .Y =_edf ;return _dc ,nil ;};var TwoByTwoWalk =[]int {0,0,0,1,-1,0,0,-1,1,0,-1,1,1,1,-1,-1,1,-1,0,-2,2,0,0,2,-2,0,-1,-2,1,-2,2,-1,2,1,1,2,-1,2,-2,1,-2,-1,-2,-2,2,-2,2,2,-2,2};func (_edb *Classer )classifyCorrelation (_aea *_fe .Boxes ,_cdb *_fe .Bitmaps ,_fae int )error {const _cfa ="\u0063\u006c\u0061\u0073si\u0066\u0079\u0043\u006f\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e";if _aea ==nil {return _bg .Error (_cfa ,"\u006e\u0065\u0077\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0062\u006f\u0075\u006e\u0064\u0069\u006e\u0067\u0020\u0062o\u0078\u0065\u0073\u0020\u006eo\u0074\u0020f\u006f\u0075\u006e\u0064");};if _cdb ==nil {return _bg .Error (_cfa ,"\u006e\u0065wC\u006f\u006d\u0070o\u006e\u0065\u006e\u0074s b\u0069tm\u0061\u0070\u0020\u0061\u0072\u0072\u0061y \u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064");};_gee :=len (_cdb .Values );if _gee ==0{_a .Log .Debug ("\u0063l\u0061\u0073s\u0069\u0066\u0079C\u006f\u0072\u0072\u0065\u006c\u0061\u0074i\u006f\u006e\u0020\u002d\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0070\u0069\u0078\u0061s\u0020\u0069\u0073\u0020\u0065\u006d\u0070\u0074\u0079");return nil ;};var (_dbd ,_eg *_fe .Bitmap ;_af error ;);_cff :=&_fe .Bitmaps {Values :make ([]*_fe .Bitmap ,_gee )};for _edcc ,_bbb :=range _cdb .Values {_eg ,_af =_bbb .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);if _af !=nil {return _bg .Wrap (_af ,_cfa ,"");};_cff .Values [_edcc ]=_eg ;};_edd :=_edb .FgTemplates ;_afc :=_fe .MakePixelSumTab8 ();_fea :=_fe .MakePixelCentroidTab8 ();_gag :=make ([]int ,_gee );_fga :=make ([][]int ,_gee );_fcb :=_fe .Points (make ([]_fe .Point ,_gee ));_acd :=&_fcb ;var (_gce ,_aa int ;_geb ,_gdae ,_gea int ;_bfdd ,_bcdd int ;_ceg byte ;);for _gca ,_ebag :=range _cff .Values {_fga [_gca ]=make ([]int ,_ebag .Height );_gce =0;_aa =0;_gdae =(_ebag .Height -1)*_ebag .RowStride ;_geb =0;for _bcdd =_ebag .Height -1;_bcdd >=0;_bcdd ,_gdae =_bcdd -1,_gdae -_ebag .RowStride {_fga [_gca ][_bcdd ]=_geb ;_gea =0;for _bfdd =0;_bfdd < _ebag .RowStride ;_bfdd ++{_ceg =_ebag .Data [_gdae +_bfdd ];_gea +=_afc [_ceg ];_gce +=_fea [_ceg ]+_bfdd *8*_afc [_ceg ];};_geb +=_gea ;_aa +=_gea *_bcdd ;};_gag [_gca ]=_geb ;if _geb > 0{(*_acd )[_gca ]=_fe .Point {X :float32 (_gce )/float32 (_geb ),Y :float32 (_aa )/float32 (_geb )};}else {(*_acd )[_gca ]=_fe .Point {X :float32 (_ebag .Width )/float32 (2),Y :float32 (_ebag .Height )/float32 (2)};};};if _af =_edb .CentroidPoints .Add (_acd );_af !=nil {return _bg .Wrap (_af ,_cfa ,"\u0063\u0065\u006et\u0072\u006f\u0069\u0064\u0020\u0061\u0064\u0064");};var (_ebf ,_eff ,_bbbg int ;_acf float64 ;_gae ,_dga ,_geg ,_bab float32 ;_dbbg ,_ddg _fe .Point ;_gcef bool ;_eadg *similarTemplatesFinder ;_aeag int ;_eadc *_fe .Bitmap ;_gaa *_b .Rectangle ;_cg *_fe .Bitmaps ;);for _aeag ,_eg =range _cff .Values {_eff =_gag [_aeag ];if _gae ,_dga ,_af =_acd .GetGeometry (_aeag );_af !=nil {return _bg .Wrap (_af ,_cfa ,"\u0070t\u0061\u0020\u002d\u0020\u0069");};_gcef =false ;_bbg :=len (_edb .UndilatedTemplates .Values );_eadg =_daae (_edb ,_eg );for _eef :=_eadg .Next ();_eef > -1;{if _eadc ,_af =_edb .UndilatedTemplates .GetBitmap (_eef );_af !=nil {return _bg .Wrap (_af ,_cfa ,"\u0075\u006e\u0069dl\u0061\u0074\u0065\u0064\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0062\u006d\u0032");};if _bbbg ,_af =_edd .GetInt (_eef );_af !=nil {_a .Log .Trace ("\u0046\u0047\u0020T\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u005b\u0069\u0063\u006ca\u0073\u0073\u005d\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_af );};if _geg ,_bab ,_af =_edb .CentroidPointsTemplates .GetGeometry (_eef );_af !=nil {return _bg .Wrap (_af ,_cfa ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074T\u0065\u006d\u0070\u006c\u0061\u0074e\u0073\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u00782\u002c\u0079\u0032\u0020");};if _edb .Settings .WeightFactor > 0.0{if _ebf ,_af =_edb .TemplateAreas .Get (_eef );_af !=nil {_a .Log .Trace ("\u0054\u0065\u006dp\u006c\u0061\u0074\u0065A\u0072\u0065\u0061\u0073\u005b\u0069\u0063l\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0061\u0072\u0065\u0061\u0020\u0025\u0076",_af );};_acf =_edb .Settings .Thresh +(1.0-_edb .Settings .Thresh )*_edb .Settings .WeightFactor *float64 (_bbbg )/float64 (_ebf );}else {_acf =_edb .Settings .Thresh ;};_bac ,_cad :=_fe .CorrelationScoreThresholded (_eg ,_eadc ,_eff ,_bbbg ,_dbbg .X -_ddg .X ,_dbbg .Y -_ddg .Y ,MaxDiffWidth ,MaxDiffHeight ,_afc ,_fga [_aeag ],float32 (_acf ));if _cad !=nil {return _bg .Wrap (_cad ,_cfa ,"");};if _dcf {var (_egb ,_eadcc float64 ;_ebc ,_cac int ;);_egb ,_cad =_fe .CorrelationScore (_eg ,_eadc ,_eff ,_bbbg ,_gae -_geg ,_dga -_bab ,MaxDiffWidth ,MaxDiffHeight ,_afc );if _cad !=nil {return _bg .Wrap (_cad ,_cfa ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");};_eadcc ,_cad =_fe .CorrelationScoreSimple (_eg ,_eadc ,_eff ,_bbbg ,_gae -_geg ,_dga -_bab ,MaxDiffWidth ,MaxDiffHeight ,_afc );if _cad !=nil {return _bg .Wrap (_cad ,_cfa ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");};_ebc =int (_g .Sqrt (_egb *float64 (_eff )*float64 (_bbbg )));_cac =int (_g .Sqrt (_eadcc *float64 (_eff )*float64 (_bbbg )));if (_egb >=_acf )!=(_eadcc >=_acf ){return _bg .Errorf (_cfa ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043\u006f\u0072r\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0063\u006f\u0072\u0065\u0020\u006d\u0069\u0073\u006d\u0061\u0074\u0063\u0068\u0020-\u0020\u0025d\u0028\u00250\u002e\u0034\u0066\u002c\u0020\u0025\u0076\u0029\u0020\u0076\u0073\u0020\u0025d(\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0076)\u0020\u0025\u0030\u002e\u0034\u0066",_ebc ,_egb ,_egb >=float64 (_acf ),_cac ,_eadcc ,_eadcc >=float64 (_acf ),_egb -_eadcc );};if _egb >=_acf !=_bac {return _bg .Errorf (_cfa ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043o\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e \u0073\u0063\u006f\u0072\u0065 \u004d\u0069\u0073\u006d\u0061t\u0063\u0068 \u0062\u0065\u0074w\u0065\u0065\u006e\u0020\u0063\u006frr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020/\u0020\u0074\u0068\u0072\u0065s\u0068\u006f\u006c\u0064\u002e\u0020\u0043\u006f\u006dpa\u0072\u0069\u0073\u006f\u006e:\u0020\u0025\u0030\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0064\u0029\u0020\u003e\u003d\u0020\u00250\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u0029\u0020\u0076\u0073\u0020\u0025\u0076",_egb ,_egb *float64 (_eff )*float64 (_bbbg ),_ebc ,_acf ,float32 (_acf )*float32 (_eff )*float32 (_bbbg ),_bac );};};if _bac {_gcef =true ;if _cad =_edb .ClassIDs .Add (_eef );_cad !=nil {return _bg .Wrap (_cad ,_cfa ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");};if _cad =_edb .ComponentPageNumbers .Add (_fae );_cad !=nil {return _bg .Wrap (_cad ,_cfa ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");};if _edb .Settings .KeepClassInstances {if _dbd ,_cad =_cdb .GetBitmap (_aeag );_cad !=nil {return _bg .Wrap (_cad ,_cfa ,"\u004b\u0065\u0065\u0070Cl\u0061\u0073\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u002d \u0069");};if _cg ,_cad =_edb .ClassInstances .GetBitmaps (_eef );_cad !=nil {return _bg .Wrap (_cad ,_cfa ,"K\u0065\u0065\u0070\u0043\u006c\u0061s\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065s\u0020\u002d\u0020i\u0043l\u0061\u0073\u0073");};_cg .AddBitmap (_dbd );if _gaa ,_cad =_aea .Get (_aeag );_cad !=nil {return _bg .Wrap (_cad ,_cfa ,"\u004be\u0065p\u0043\u006c\u0061\u0073\u0073I\u006e\u0073t\u0061\u006e\u0063\u0065\u0073");};_cg .AddBox (_gaa );};break ;};};if !_gcef {if _af =_edb .ClassIDs .Add (_bbg );_af !=nil {return _bg .Wrap (_af ,_cfa ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _af =_edb .ComponentPageNumbers .Add (_fae );_af !=nil {return _bg .Wrap (_af ,_cfa ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_cg =&_fe .Bitmaps {};if _dbd ,_af =_cdb .GetBitmap (_aeag );_af !=nil {return _bg .Wrap (_af ,_cfa ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_cg .AddBitmap (_dbd );_dca ,_gdf :=_dbd .Width ,_dbd .Height ;_bdb :=uint64 (_gdf )*uint64 (_dca );_edb .TemplatesSize .Add (_bdb ,_bbg );if _gaa ,_af =_aea .Get (_aeag );_af !=nil {return _bg .Wrap (_af ,_cfa ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_cg .AddBox (_gaa );_edb .ClassInstances .AddBitmaps (_cg );_edb .CentroidPointsTemplates .AddPoint (_gae ,_dga );_edb .FgTemplates .AddInt (_eff );_edb .UndilatedTemplates .AddBitmap (_dbd );_ebf =(_eg .Width -2*JbAddedPixels )*(_eg .Height -2*JbAddedPixels );if _af =_edb .TemplateAreas .Add (_ebf );_af !=nil {return _bg .Wrap (_af ,_cfa ,"\u0021\u0066\u006f\u0075\u006e\u0064");};};};_edb .NumberOfClasses =len (_edb .UndilatedTemplates .Values );return nil ;};type Method int ;var _dcf bool ;const (MaxDiffWidth =2;MaxDiffHeight =2;);func (_fd *Classer )classifyRankHouseOne (_efg *_fe .Boxes ,_ded ,_aed ,_dff *_fe .Bitmaps ,_be *_fe .Points ,_cee int )(_eagc error ){const _bace ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";var (_dffc ,_ddd ,_dcg ,_gff float32 ;_cfaa int ;_dcbg ,_gaeg ,_gga ,_gde ,_ffe *_fe .Bitmap ;_gcf ,_gfg bool ;);for _acc :=0;_acc < len (_ded .Values );_acc ++{_gaeg =_aed .Values [_acc ];_gga =_dff .Values [_acc ];_dffc ,_ddd ,_eagc =_be .GetGeometry (_acc );if _eagc !=nil {return _bg .Wrapf (_eagc ,_bace ,"\u0066\u0069\u0072\u0073\u0074\u0020\u0067\u0065\u006fm\u0065\u0074\u0072\u0079");};_def :=len (_fd .UndilatedTemplates .Values );_gcf =false ;_aaa :=_daae (_fd ,_gaeg );for _cfaa =_aaa .Next ();_cfaa > -1;{_gde ,_eagc =_fd .UndilatedTemplates .GetBitmap (_cfaa );if _eagc !=nil {return _bg .Wrap (_eagc ,_bace ,"\u0062\u006d\u0033");};_ffe ,_eagc =_fd .DilatedTemplates .GetBitmap (_cfaa );if _eagc !=nil {return _bg .Wrap (_eagc ,_bace ,"\u0062\u006d\u0034");};_dcg ,_gff ,_eagc =_fd .CentroidPointsTemplates .GetGeometry (_cfaa );if _eagc !=nil {return _bg .Wrap (_eagc ,_bace ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0073");};_gfg ,_eagc =_fe .HausTest (_gaeg ,_gga ,_gde ,_ffe ,_dffc -_dcg ,_ddd -_gff ,MaxDiffWidth ,MaxDiffHeight );if _eagc !=nil {return _bg .Wrap (_eagc ,_bace ,"");};if _gfg {_gcf =true ;if _eagc =_fd .ClassIDs .Add (_cfaa );_eagc !=nil {return _bg .Wrap (_eagc ,_bace ,"");};if _eagc =_fd .ComponentPageNumbers .Add (_cee );_eagc !=nil {return _bg .Wrap (_eagc ,_bace ,"");};if _fd .Settings .KeepClassInstances {_edde ,_acce :=_fd .ClassInstances .GetBitmaps (_cfaa );if _acce !=nil {return _bg .Wrap (_acce ,_bace ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_dcbg ,_acce =_ded .GetBitmap (_acc );if _acce !=nil {return _bg .Wrap (_acce ,_bace ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_edde .AddBitmap (_dcbg );_ega ,_acce :=_efg .Get (_acc );if _acce !=nil {return _bg .Wrap (_acce ,_bace ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_edde .AddBox (_ega );};break ;};};if !_gcf {if _eagc =_fd .ClassIDs .Add (_def );_eagc !=nil {return _bg .Wrap (_eagc ,_bace ,"");};if _eagc =_fd .ComponentPageNumbers .Add (_cee );_eagc !=nil {return _bg .Wrap (_eagc ,_bace ,"");};_ebcg :=&_fe .Bitmaps {};_dcbg ,_eagc =_ded .GetBitmap (_acc );if _eagc !=nil {return _bg .Wrap (_eagc ,_bace ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_ebcg .Values =append (_ebcg .Values ,_dcbg );_bde ,_acfa :=_dcbg .Width ,_dcbg .Height ;_fd .TemplatesSize .Add (uint64 (_acfa )*uint64 (_bde ),_def );_cfc ,_aff :=_efg .Get (_acc );if _aff !=nil {return _bg .Wrap (_aff ,_bace ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_ebcg .AddBox (_cfc );_fd .ClassInstances .AddBitmaps (_ebcg );_fd .CentroidPointsTemplates .AddPoint (_dffc ,_ddd );_fd .UndilatedTemplates .AddBitmap (_gaeg );_fd .DilatedTemplates .AddBitmap (_gga );};};return nil ;};func (_bed *Settings )SetDefault (){if _bed .MaxCompWidth ==0{switch _bed .Components {case _fe .ComponentConn :_bed .MaxCompWidth =MaxConnCompWidth ;case _fe .ComponentCharacters :_bed .MaxCompWidth =MaxCharCompWidth ;case _fe .ComponentWords :_bed .MaxCompWidth =MaxWordCompWidth ;};};if _bed .MaxCompHeight ==0{_bed .MaxCompHeight =MaxCompHeight ;};if _bed .Thresh ==0.0{_bed .Thresh =0.9;};if _bed .WeightFactor ==0.0{_bed .WeightFactor =0.75;};if _bed .RankHaus ==0.0{_bed .RankHaus =0.97;};if _bed .SizeHaus ==0{_bed .SizeHaus =2;};};func (_bae *Classer )getULCorners (_efa *_fe .Bitmap ,_efe *_fe .Boxes )error {const _efaf ="\u0067\u0065\u0074U\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";if _efa ==nil {return _bg .Error (_efaf ,"\u006e\u0069l\u0020\u0069\u006da\u0067\u0065\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if _efe ==nil {return _bg .Error (_efaf ,"\u006e\u0069\u006c\u0020\u0062\u006f\u0075\u006e\u0064\u0073");};if _bae .PtaUL ==nil {_bae .PtaUL =&_fe .Points {};};_bff :=len (*_efe );var (_de ,_ac ,_ade ,_ag int ;_fb ,_gfb ,_dd ,_dfa float32 ;_ge error ;_fec *_b .Rectangle ;_bd *_fe .Bitmap ;_fa _b .Point ;);for _agf :=0;_agf < _bff ;_agf ++{_de =_bae .BaseIndex +_agf ;if _fb ,_gfb ,_ge =_bae .CentroidPoints .GetGeometry (_de );_ge !=nil {return _bg .Wrap (_ge ,_efaf ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050o\u0069\u006e\u0074\u0073");};if _ac ,_ge =_bae .ClassIDs .Get (_de );_ge !=nil {return _bg .Wrap (_ge ,_efaf ,"\u0043\u006c\u0061s\u0073\u0049\u0044\u0073\u002e\u0047\u0065\u0074");};if _dd ,_dfa ,_ge =_bae .CentroidPointsTemplates .GetGeometry (_ac );_ge !=nil {return _bg .Wrap (_ge ,_efaf ,"\u0043\u0065\u006etr\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074\u0073\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");};_dbb :=_dd -_fb ;_cde :=_dfa -_gfb ;if _dbb >=0{_ade =int (_dbb +0.5);}else {_ade =int (_dbb -0.5);};if _cde >=0{_ag =int (_cde +0.5);}else {_ag =int (_cde -0.5);};if _fec ,_ge =_efe .Get (_agf );_ge !=nil {return _bg .Wrap (_ge ,_efaf ,"");};_baf ,_bge :=_fec .Min .X ,_fec .Min .Y ;_bd ,_ge =_bae .UndilatedTemplates .GetBitmap (_ac );if _ge !=nil {return _bg .Wrap (_ge ,_efaf ,"\u0055\u006e\u0064\u0069\u006c\u0061\u0074\u0065\u0064\u0054e\u006d\u0070\u006c\u0061\u0074\u0065\u0073.\u0047\u0065\u0074\u0028\u0069\u0043\u006c\u0061\u0073\u0073\u0029");};_fa ,_ge =_ea (_efa ,_baf ,_bge ,_ade ,_ag ,_bd );if _ge !=nil {return _bg .Wrap (_ge ,_efaf ,"");};_bae .PtaUL .AddPoint (float32 (_baf -_ade +_fa .X ),float32 (_bge -_ag +_fa .Y ));};return nil ;};const JbAddedPixels =6;func (_cea *Classer )verifyMethod (_cf Method )error {if _cf !=RankHaus &&_cf !=Correlation {return _bg .Error ("\u0076\u0065\u0072i\u0066\u0079\u004d\u0065\u0074\u0068\u006f\u0064","\u0069\u006e\u0076\u0061li\u0064\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072\u0020\u006d\u0065\u0074\u0068o\u0064");};return nil ;};func (_cd *Classer )ComputeLLCorners ()(_bc error ){const _e ="\u0043l\u0061\u0073\u0073\u0065\u0072\u002e\u0043\u006f\u006d\u0070\u0075t\u0065\u004c\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";if _cd .PtaUL ==nil {return _bg .Error (_e ,"\u0055\u004c\u0020\u0043or\u006e\u0065\u0072\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006ee\u0064");};_ed :=len (*_cd .PtaUL );_cd .PtaLL =&_fe .Points {};var (_bcd ,_ad float32 ;_bgb ,_df int ;_eb *_fe .Bitmap ;);for _ce :=0;_ce < _ed ;_ce ++{_bcd ,_ad ,_bc =_cd .PtaUL .GetGeometry (_ce );if _bc !=nil {_a .Log .Debug ("\u0047e\u0074\u0074\u0069\u006e\u0067\u0020\u0050\u0074\u0061\u0055\u004c \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_bc );return _bg .Wrap (_bc ,_e ,"\u0050\u0074\u0061\u0055\u004c\u0020\u0047\u0065\u006fm\u0065\u0074\u0072\u0079");};_bgb ,_bc =_cd .ClassIDs .Get (_ce );if _bc !=nil {_a .Log .Debug ("\u0047\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0043\u006c\u0061s\u0073\u0049\u0044\u0020\u0066\u0061\u0069\u006c\u0065\u0064:\u0020\u0025\u0076",_bc );return _bg .Wrap (_bc ,_e ,"\u0043l\u0061\u0073\u0073\u0049\u0044");};_eb ,_bc =_cd .UndilatedTemplates .GetBitmap (_bgb );if _bc !=nil {_a .Log .Debug ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0055\u006ed\u0069\u006c\u0061\u0074\u0065\u0064\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_bc );return _bg .Wrap (_bc ,_e ,"\u0055\u006e\u0064\u0069la\u0074\u0065\u0064\u0020\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");};_df =_eb .Height ;_cd .PtaLL .AddPoint (_bcd ,_ad +float32 (_df ));};return nil ;};func (_cace Settings )Validate ()error {const _deed ="\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0073\u002e\u0056\u0061\u006ci\u0064\u0061\u0074\u0065";if _cace .Thresh < 0.4||_cace .Thresh > 0.98{return _bg .Error (_deed ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074\u0068\u0072\u0065\u0073\u0068\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0034\u0020\u002d\u0020\u0030\u002e\u0039\u0038\u005d");};if _cace .WeightFactor < 0.0||_cace .WeightFactor > 1.0{return _bg .Error (_deed ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006ec\u006f\u0064\u0065\u0072\u0020w\u0065\u0069\u0067\u0068\u0074\u0020\u0066\u0061\u0063\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0030\u0020\u002d\u0020\u0031\u002e\u0030\u005d");};if _cace .RankHaus < 0.5||_cace .RankHaus > 1.0{return _bg .Error (_deed ,"\u006a\u0062\u0069\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0072a\u006e\u006b\u0020\u0068\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065 \u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065 [\u0030\u002e\u0035\u0020\u002d\u0020\u0031\u002e\u0030\u005d");};if _cace .SizeHaus < 1||_cace .SizeHaus > 10{return _bg .Error (_deed ,"\u006a\u0062\u0069\u0067\u0032 \u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0073\u0069\u007a\u0065\u0020h\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0031\u0020\u002d\u0020\u0031\u0030]");};switch _cace .Components {case _fe .ComponentConn ,_fe .ComponentCharacters ,_fe .ComponentWords :default:return _bg .Error (_deed ,"\u0069n\u0076\u0061\u006c\u0069d\u0020\u0063\u006c\u0061\u0073s\u0065r\u0020c\u006f\u006d\u0070\u006f\u006e\u0065\u006et");};return nil ;};func (_ccc *Classer )classifyRankHaus (_ab *_fe .Boxes ,_cab *_fe .Bitmaps ,_gfc int )error {const _eeg ="\u0063\u006ca\u0073\u0073\u0069f\u0079\u0052\u0061\u006e\u006b\u0048\u0061\u0075\u0073";if _ab ==nil {return _bg .Error (_eeg ,"\u0062\u006fx\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if _cab ==nil {return _bg .Error (_eeg ,"\u0070\u0069x\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};_aeb :=len (_cab .Values );if _aeb ==0{return _bg .Error (_eeg ,"e\u006dp\u0074\u0079\u0020\u006e\u0065\u0077\u0020\u0063o\u006d\u0070\u006f\u006een\u0074\u0073");};_dgd :=_cab .CountPixels ();_ec :=_ccc .Settings .SizeHaus ;_aac :=_fe .SelCreateBrick (_ec ,_ec ,_ec /2,_ec /2,_fe .SelHit );_aab :=&_fe .Bitmaps {Values :make ([]*_fe .Bitmap ,_aeb )};_acg :=&_fe .Bitmaps {Values :make ([]*_fe .Bitmap ,_aeb )};var (_edce ,_cdc ,_dbe *_fe .Bitmap ;_abf error ;);for _dcbf :=0;_dcbf < _aeb ;_dcbf ++{_edce ,_abf =_cab .GetBitmap (_dcbf );if _abf !=nil {return _bg .Wrap (_abf ,_eeg ,"");};_cdc ,_abf =_edce .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);if _abf !=nil {return _bg .Wrap (_abf ,_eeg ,"");};_dbe ,_abf =_fe .Dilate (nil ,_cdc ,_aac );if _abf !=nil {return _bg .Wrap (_abf ,_eeg ,"");};_aab .Values [_aeb ]=_cdc ;_acg .Values [_aeb ]=_dbe ;};_daa ,_abf :=_fe .Centroids (_aab .Values );if _abf !=nil {return _bg .Wrap (_abf ,_eeg ,"");};if _abf =_daa .Add (_ccc .CentroidPoints );_abf !=nil {_a .Log .Trace ("\u004e\u006f\u0020\u0063en\u0074\u0072\u006f\u0069\u0064\u0073\u0020\u0074\u006f\u0020\u0061\u0064\u0064");};if _ccc .Settings .RankHaus ==1.0{_abf =_ccc .classifyRankHouseOne (_ab ,_cab ,_aab ,_acg ,_daa ,_gfc );}else {_abf =_ccc .classifyRankHouseNonOne (_ab ,_cab ,_aab ,_acg ,_daa ,_dgd ,_gfc );};if _abf !=nil {return _bg .Wrap (_abf ,_eeg ,"");};return nil ;};func (_edda *similarTemplatesFinder )Next ()int {var (_bafg ,_cbc ,_baa ,_fcgg int ;_cef bool ;_gcg *_fe .Bitmap ;_cfb error ;);for {if _edda .Index >=25{return -1;};_cbc =_edda .Width +TwoByTwoWalk [2*_edda .Index ];_bafg =_edda .Height +TwoByTwoWalk [2*_edda .Index +1];if _bafg < 1||_cbc < 1{_edda .Index ++;continue ;};if len (_edda .CurrentNumbers )==0{_edda .CurrentNumbers ,_cef =_edda .Classer .TemplatesSize .GetSlice (uint64 (_cbc )*uint64 (_bafg ));if !_cef {_edda .Index ++;continue ;};_edda .N =0;};_baa =len (_edda .CurrentNumbers );for ;_edda .N < _baa ;_edda .N ++{_fcgg =_edda .CurrentNumbers [_edda .N ];_gcg ,_cfb =_edda .Classer .DilatedTemplates .GetBitmap (_fcgg );if _cfb !=nil {_a .Log .Debug ("\u0046\u0069\u006e\u0064\u004e\u0065\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0074\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u006e\u006f\u0074 \u0066\u006fu\u006e\u0064\u003a\u0020");return 0;};if _gcg .Width -2*JbAddedPixels ==_cbc &&_gcg .Height -2*JbAddedPixels ==_bafg {return _fcgg ;};};_edda .Index ++;_edda .CurrentNumbers =nil ;};};func (_fbc *Classer )classifyRankHouseNonOne (_cadd *_fe .Boxes ,_dbdd ,_cb ,_ede *_fe .Bitmaps ,_eaea *_fe .Points ,_agb *_c .NumSlice ,_efd int )(_fca error ){const _aba ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";var (_ffeg ,_gbg ,_bcb ,_egag float32 ;_ddc ,_fecb ,_ceed int ;_gcfd ,_bee ,_edbg ,_gdg ,_eed *_fe .Bitmap ;_dcbd ,_fab bool ;);_ddf :=_fe .MakePixelSumTab8 ();for _faa :=0;_faa < len (_dbdd .Values );_faa ++{if _bee ,_fca =_cb .GetBitmap (_faa );_fca !=nil {return _bg .Wrap (_fca ,_aba ,"b\u006d\u0073\u0031\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};if _ddc ,_fca =_agb .GetInt (_faa );_fca !=nil {_a .Log .Trace ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0046\u0047T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073 \u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_faa ,_fca );};if _edbg ,_fca =_ede .GetBitmap (_faa );_fca !=nil {return _bg .Wrap (_fca ,_aba ,"b\u006d\u0073\u0032\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};if _ffeg ,_gbg ,_fca =_eaea .GetGeometry (_faa );_fca !=nil {return _bg .Wrapf (_fca ,_aba ,"\u0070t\u0061[\u0069\u005d\u002e\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079");};_deeg :=len (_fbc .UndilatedTemplates .Values );_dcbd =false ;_aga :=_daae (_fbc ,_bee );for _ceed =_aga .Next ();_ceed > -1;{if _gdg ,_fca =_fbc .UndilatedTemplates .GetBitmap (_ceed );_fca !=nil {return _bg .Wrap (_fca ,_aba ,"\u0070\u0069\u0078\u0061\u0074\u002e\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");};if _fecb ,_fca =_fbc .FgTemplates .GetInt (_ceed );_fca !=nil {_a .Log .Trace ("\u0047\u0065\u0074\u0074\u0069\u006eg\u0020\u0046\u0047\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u005b\u0025d\u005d\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_ceed ,_fca );};if _eed ,_fca =_fbc .DilatedTemplates .GetBitmap (_ceed );_fca !=nil {return _bg .Wrap (_fca ,_aba ,"\u0070\u0069\u0078\u0061\u0074\u0064\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");};if _bcb ,_egag ,_fca =_fbc .CentroidPointsTemplates .GetGeometry (_ceed );_fca !=nil {return _bg .Wrap (_fca ,_aba ,"\u0043\u0065\u006et\u0072\u006f\u0069\u0064P\u006f\u0069\u006e\u0074\u0073\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u005b\u0069\u0043\u006c\u0061\u0073\u0073\u005d");};_fab ,_fca =_fe .RankHausTest (_bee ,_edbg ,_gdg ,_eed ,_ffeg -_bcb ,_gbg -_egag ,MaxDiffWidth ,MaxDiffHeight ,_ddc ,_fecb ,float32 (_fbc .Settings .RankHaus ),_ddf );if _fca !=nil {return _bg .Wrap (_fca ,_aba ,"");};if _fab {_dcbd =true ;if _fca =_fbc .ClassIDs .Add (_ceed );_fca !=nil {return _bg .Wrap (_fca ,_aba ,"");};if _fca =_fbc .ComponentPageNumbers .Add (_efd );_fca !=nil {return _bg .Wrap (_fca ,_aba ,"");};if _fbc .Settings .KeepClassInstances {_ccd ,_dfe :=_fbc .ClassInstances .GetBitmaps (_ceed );if _dfe !=nil {return _bg .Wrap (_dfe ,_aba ,"\u0063\u002e\u0050\u0069\u0078\u0061\u0061\u002e\u0047\u0065\u0074B\u0069\u0074\u006d\u0061\u0070\u0073\u0028\u0069\u0043\u006ca\u0073\u0073\u0029");};if _gcfd ,_dfe =_dbdd .GetBitmap (_faa );_dfe !=nil {return _bg .Wrap (_dfe ,_aba ,"\u0070i\u0078\u0061\u005b\u0069\u005d");};_ccd .Values =append (_ccd .Values ,_gcfd );_ecg ,_dfe :=_cadd .Get (_faa );if _dfe !=nil {return _bg .Wrap (_dfe ,_aba ,"b\u006f\u0078\u0061\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};_ccd .Boxes =append (_ccd .Boxes ,_ecg );};break ;};};if !_dcbd {if _fca =_fbc .ClassIDs .Add (_deeg );_fca !=nil {return _bg .Wrap (_fca ,_aba ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _fca =_fbc .ComponentPageNumbers .Add (_efd );_fca !=nil {return _bg .Wrap (_fca ,_aba ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_ecga :=&_fe .Bitmaps {};_gcfd =_dbdd .Values [_faa ];_ecga .AddBitmap (_gcfd );_bdee ,_bcc :=_gcfd .Width ,_gcfd .Height ;_fbc .TemplatesSize .Add (uint64 (_bdee )*uint64 (_bcc ),_deeg );_ccf ,_ege :=_cadd .Get (_faa );if _ege !=nil {return _bg .Wrap (_ege ,_aba ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_ecga .AddBox (_ccf );_fbc .ClassInstances .AddBitmaps (_ecga );_fbc .CentroidPointsTemplates .AddPoint (_ffeg ,_gbg );_fbc .UndilatedTemplates .AddBitmap (_bee );_fbc .DilatedTemplates .AddBitmap (_edbg );_fbc .FgTemplates .AddInt (_ddc );};};_fbc .NumberOfClasses =len (_fbc .UndilatedTemplates .Values );return nil ;};func (_ga *Classer )addPageComponents (_ebd *_fe .Bitmap ,_dg *_fe .Boxes ,_gb *_fe .Bitmaps ,_ef int ,_gc Method )error {const _eda ="\u0043l\u0061\u0073\u0073\u0065r\u002e\u0041\u0064\u0064\u0050a\u0067e\u0043o\u006d\u0070\u006f\u006e\u0065\u006e\u0074s";if _ebd ==nil {return _bg .Error (_eda ,"\u006e\u0069\u006c\u0020\u0069\u006e\u0070\u0075\u0074 \u0070\u0061\u0067\u0065");};if _dg ==nil ||_gb ==nil ||len (*_dg )==0{_a .Log .Trace ("\u0041\u0064\u0064P\u0061\u0067\u0065\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0073\u002e\u0020\u004e\u006f\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065n\u0074\u0073\u0020\u0066\u006f\u0075\u006e\u0064",_ebd );return nil ;};var _ba error ;switch _gc {case RankHaus :_ba =_ga .classifyRankHaus (_dg ,_gb ,_ef );case Correlation :_ba =_ga .classifyCorrelation (_dg ,_gb ,_ef );default:_a .Log .Debug ("\u0055\u006ek\u006e\u006f\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064\u003a\u0020'%\u0076\u0027",_gc );return _bg .Error (_eda ,"\u0075\u006e\u006bno\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064");};if _ba !=nil {return _bg .Wrap (_ba ,_eda ,"");};if _ba =_ga .getULCorners (_ebd ,_dg );_ba !=nil {return _bg .Wrap (_ba ,_eda ,"");};_ca :=len (*_dg );_ga .BaseIndex +=_ca ;if _ba =_ga .ComponentsNumber .Add (_ca );_ba !=nil {return _bg .Wrap (_ba ,_eda ,"");};return nil ;};const (RankHaus Method =iota ;Correlation ;);type Classer struct{BaseIndex int ;Settings Settings ;ComponentsNumber *_c .IntSlice ;TemplateAreas *_c .IntSlice ;Widths map[int ]int ;Heights map[int ]int ;NumberOfClasses int ;ClassInstances *_fe .BitmapsArray ;UndilatedTemplates *_fe .Bitmaps ;DilatedTemplates *_fe .Bitmaps ;TemplatesSize _c .IntsMap ;FgTemplates *_c .NumSlice ;CentroidPoints *_fe .Points ;CentroidPointsTemplates *_fe .Points ;ClassIDs *_c .IntSlice ;ComponentPageNumbers *_c .IntSlice ;PtaUL *_fe .Points ;PtaLL *_fe .Points ;};type similarTemplatesFinder struct{Classer *Classer ;Width int ;Height int ;Index int ;CurrentNumbers []int ;N int ;};func Init (settings Settings )(*Classer ,error ){const _d ="\u0063\u006c\u0061s\u0073\u0065\u0072\u002e\u0049\u006e\u0069\u0074";_db :=&Classer {Settings :settings ,Widths :map[int ]int {},Heights :map[int ]int {},TemplatesSize :_c .IntsMap {},TemplateAreas :&_c .IntSlice {},ComponentPageNumbers :&_c .IntSlice {},ClassIDs :&_c .IntSlice {},ComponentsNumber :&_c .IntSlice {},CentroidPoints :&_fe .Points {},CentroidPointsTemplates :&_fe .Points {},UndilatedTemplates :&_fe .Bitmaps {},DilatedTemplates :&_fe .Bitmaps {},ClassInstances :&_fe .BitmapsArray {},FgTemplates :&_c .NumSlice {}};if _gf :=_db .Settings .Validate ();_gf !=nil {return nil ,_bg .Wrap (_gf ,_d ,"");};return _db ,nil ;};const (MaxConnCompWidth =350;MaxCharCompWidth =350;MaxWordCompWidth =1000;MaxCompHeight =120;);func DefaultSettings ()Settings {_cdf :=&Settings {};_cdf .SetDefault ();return *_cdf };func _daae (_gdb *Classer ,_adf *_fe .Bitmap )*similarTemplatesFinder {return &similarTemplatesFinder {Width :_adf .Width ,Height :_adf .Height ,Classer :_gdb };};type Settings struct{MaxCompWidth int ;MaxCompHeight int ;SizeHaus int ;RankHaus float64 ;Thresh float64 ;WeightFactor float64 ;KeepClassInstances bool ;Components _fe .Component ;Method Method ;};