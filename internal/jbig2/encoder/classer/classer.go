//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package classer ;import (_a "github.com/unidoc/unipdf/v3/common";_gd "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_d "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";_gf "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_g "image";_e "math";);func Init (settings Settings )(*Classer ,error ){const _aa ="\u0063\u006c\u0061s\u0073\u0065\u0072\u002e\u0049\u006e\u0069\u0074";_dg :=&Classer {Settings :settings ,Widths :map[int ]int {},Heights :map[int ]int {},TemplatesSize :_gd .IntsMap {},TemplateAreas :&_gd .IntSlice {},ComponentPageNumbers :&_gd .IntSlice {},ClassIDs :&_gd .IntSlice {},ComponentsNumber :&_gd .IntSlice {},CentroidPoints :&_d .Points {},CentroidPointsTemplates :&_d .Points {},UndilatedTemplates :&_d .Bitmaps {},DilatedTemplates :&_d .Bitmaps {},ClassInstances :&_d .BitmapsArray {},FgTemplates :&_gd .NumSlice {}};if _c :=_dg .Settings .Validate ();_c !=nil {return nil ,_gf .Wrap (_c ,_aa ,"");};return _dg ,nil ;};func (_bdb *Classer )verifyMethod (_ab Method )error {if _ab !=RankHaus &&_ab !=Correlation {return _gf .Error ("\u0076\u0065\u0072i\u0066\u0079\u004d\u0065\u0074\u0068\u006f\u0064","\u0069\u006e\u0076\u0061li\u0064\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072\u0020\u006d\u0065\u0074\u0068o\u0064");};return nil ;};type Method int ;const (MaxDiffWidth =2;MaxDiffHeight =2;);const (MaxConnCompWidth =350;MaxCharCompWidth =350;MaxWordCompWidth =1000;MaxCompHeight =120;);func (_gcae *Classer )classifyRankHouseOne (_abdf *_d .Boxes ,_bag ,_ggae ,_gcd *_d .Bitmaps ,_abe *_d .Points ,_cbaf int )(_ggb error ){const _cag ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";var (_dab ,_fcaf ,_caf ,_dfbe float32 ;_dfbg int ;_gbeg ,_gcb ,_cfca ,_fae ,_abdb *_d .Bitmap ;_dfgb ,_dbe bool ;);for _fdd :=0;_fdd < len (_bag .Values );_fdd ++{_gcb =_ggae .Values [_fdd ];_cfca =_gcd .Values [_fdd ];_dab ,_fcaf ,_ggb =_abe .GetGeometry (_fdd );if _ggb !=nil {return _gf .Wrapf (_ggb ,_cag ,"\u0066\u0069\u0072\u0073\u0074\u0020\u0067\u0065\u006fm\u0065\u0074\u0072\u0079");};_edad :=len (_gcae .UndilatedTemplates .Values );_dfgb =false ;_dbec :=_fbe (_gcae ,_gcb );for _dfbg =_dbec .Next ();_dfbg > -1;{_fae ,_ggb =_gcae .UndilatedTemplates .GetBitmap (_dfbg );if _ggb !=nil {return _gf .Wrap (_ggb ,_cag ,"\u0062\u006d\u0033");};_abdb ,_ggb =_gcae .DilatedTemplates .GetBitmap (_dfbg );if _ggb !=nil {return _gf .Wrap (_ggb ,_cag ,"\u0062\u006d\u0034");};_caf ,_dfbe ,_ggb =_gcae .CentroidPointsTemplates .GetGeometry (_dfbg );if _ggb !=nil {return _gf .Wrap (_ggb ,_cag ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0073");};_dbe ,_ggb =_d .HausTest (_gcb ,_cfca ,_fae ,_abdb ,_dab -_caf ,_fcaf -_dfbe ,MaxDiffWidth ,MaxDiffHeight );if _ggb !=nil {return _gf .Wrap (_ggb ,_cag ,"");};if _dbe {_dfgb =true ;if _ggb =_gcae .ClassIDs .Add (_dfbg );_ggb !=nil {return _gf .Wrap (_ggb ,_cag ,"");};if _ggb =_gcae .ComponentPageNumbers .Add (_cbaf );_ggb !=nil {return _gf .Wrap (_ggb ,_cag ,"");};if _gcae .Settings .KeepClassInstances {_aee ,_ebd :=_gcae .ClassInstances .GetBitmaps (_dfbg );if _ebd !=nil {return _gf .Wrap (_ebd ,_cag ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_gbeg ,_ebd =_bag .GetBitmap (_fdd );if _ebd !=nil {return _gf .Wrap (_ebd ,_cag ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_aee .AddBitmap (_gbeg );_debe ,_ebd :=_abdf .Get (_fdd );if _ebd !=nil {return _gf .Wrap (_ebd ,_cag ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_aee .AddBox (_debe );};break ;};};if !_dfgb {if _ggb =_gcae .ClassIDs .Add (_edad );_ggb !=nil {return _gf .Wrap (_ggb ,_cag ,"");};if _ggb =_gcae .ComponentPageNumbers .Add (_cbaf );_ggb !=nil {return _gf .Wrap (_ggb ,_cag ,"");};_efd :=&_d .Bitmaps {};_gbeg ,_ggb =_bag .GetBitmap (_fdd );if _ggb !=nil {return _gf .Wrap (_ggb ,_cag ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_efd .Values =append (_efd .Values ,_gbeg );_dbea ,_fcc :=_gbeg .Width ,_gbeg .Height ;_gcae .TemplatesSize .Add (uint64 (_fcc )*uint64 (_dbea ),_edad );_aeb ,_gge :=_abdf .Get (_fdd );if _gge !=nil {return _gf .Wrap (_gge ,_cag ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_efd .AddBox (_aeb );_gcae .ClassInstances .AddBitmaps (_efd );_gcae .CentroidPointsTemplates .AddPoint (_dab ,_fcaf );_gcae .UndilatedTemplates .AddBitmap (_gcb );_gcae .DilatedTemplates .AddBitmap (_cfca );};};return nil ;};type Settings struct{MaxCompWidth int ;MaxCompHeight int ;SizeHaus int ;RankHaus float64 ;Thresh float64 ;WeightFactor float64 ;KeepClassInstances bool ;Components _d .Component ;Method Method ;};type similarTemplatesFinder struct{Classer *Classer ;Width int ;Height int ;Index int ;CurrentNumbers []int ;N int ;};const (RankHaus Method =iota ;Correlation ;);func _fc (_cf *_d .Bitmap ,_aae ,_ggc ,_gcf ,_aab int ,_bbb *_d .Bitmap )(_ff _g .Point ,_eb error ){const _gdg ="\u0066i\u006e\u0061\u006c\u0041l\u0069\u0067\u006e\u006d\u0065n\u0074P\u006fs\u0069\u0074\u0069\u006f\u006e\u0069\u006eg";if _cf ==nil {return _ff ,_gf .Error (_gdg ,"\u0073\u006f\u0075\u0072ce\u0020\u006e\u006f\u0074\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064");};if _bbb ==nil {return _ff ,_gf .Error (_gdg ,"t\u0065\u006d\u0070\u006cat\u0065 \u006e\u006f\u0074\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064");};_fbf ,_bba :=_bbb .Width ,_bbb .Height ;_dd ,_fee :=_aae -_gcf -JbAddedPixels ,_ggc -_aab -JbAddedPixels ;_a .Log .Trace ("\u0078\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0079\u003a\u0020\u0027\u0025\u0064'\u002c\u0020\u0077\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0068\u003a \u0027\u0025\u0064\u0027\u002c\u0020\u0062\u0078\u003a\u0020\u0027\u0025d'\u002c\u0020\u0062\u0079\u003a\u0020\u0027\u0025\u0064\u0027",_aae ,_ggc ,_fbf ,_bba ,_dd ,_fee );_ge ,_eb :=_d .Rect (_dd ,_fee ,_fbf ,_bba );if _eb !=nil {return _ff ,_gf .Wrap (_eb ,_gdg ,"");};_cfg ,_ ,_eb :=_cf .ClipRectangle (_ge );if _eb !=nil {_a .Log .Error ("\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069\u0070\u0020\u0072\u0065c\u0074\u0061\u006e\u0067\u006c\u0065\u003a\u0020\u0025\u0076",_ge );return _ff ,_gf .Wrap (_eb ,_gdg ,"");};_efb :=_d .New (_cfg .Width ,_cfg .Height );_fag :=_e .MaxInt32 ;var _abc ,_dfg ,_aaa ,_eeg ,_afe int ;for _abc =-1;_abc <=1;_abc ++{for _dfg =-1;_dfg <=1;_dfg ++{if _ ,_eb =_d .Copy (_efb ,_cfg );_eb !=nil {return _ff ,_gf .Wrap (_eb ,_gdg ,"");};if _eb =_efb .RasterOperation (_dfg ,_abc ,_fbf ,_bba ,_d .PixSrcXorDst ,_bbb ,0,0);_eb !=nil {return _ff ,_gf .Wrap (_eb ,_gdg ,"");};_aaa =_efb .CountPixels ();if _aaa < _fag {_eeg =_dfg ;_afe =_abc ;_fag =_aaa ;};};};_ff .X =_eeg ;_ff .Y =_afe ;return _ff ,nil ;};func (_cbb *Classer )classifyCorrelation (_cab *_d .Boxes ,_ggce *_d .Bitmaps ,_abd int )error {const _dbb ="\u0063\u006c\u0061\u0073si\u0066\u0079\u0043\u006f\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e";if _cab ==nil {return _gf .Error (_dbb ,"\u006e\u0065\u0077\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0062\u006f\u0075\u006e\u0064\u0069\u006e\u0067\u0020\u0062o\u0078\u0065\u0073\u0020\u006eo\u0074\u0020f\u006f\u0075\u006e\u0064");};if _ggce ==nil {return _gf .Error (_dbb ,"\u006e\u0065wC\u006f\u006d\u0070o\u006e\u0065\u006e\u0074s b\u0069tm\u0061\u0070\u0020\u0061\u0072\u0072\u0061y \u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064");};_bbe :=len (_ggce .Values );if _bbe ==0{_a .Log .Debug ("\u0063l\u0061\u0073s\u0069\u0066\u0079C\u006f\u0072\u0072\u0065\u006c\u0061\u0074i\u006f\u006e\u0020\u002d\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0070\u0069\u0078\u0061s\u0020\u0069\u0073\u0020\u0065\u006d\u0070\u0074\u0079");return nil ;};var (_bed ,_bgb *_d .Bitmap ;_gbe error ;);_eeb :=&_d .Bitmaps {Values :make ([]*_d .Bitmap ,_bbe )};for _eae ,_cg :=range _ggce .Values {_bgb ,_gbe =_cg .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);if _gbe !=nil {return _gf .Wrap (_gbe ,_dbb ,"");};_eeb .Values [_eae ]=_bgb ;};_aed :=_cbb .FgTemplates ;_cce :=_d .MakePixelSumTab8 ();_aec :=_d .MakePixelCentroidTab8 ();_ebf :=make ([]int ,_bbe );_abdg :=make ([][]int ,_bbe );_fef :=_d .Points (make ([]_d .Point ,_bbe ));_afd :=&_fef ;var (_afea ,_gaf int ;_bc ,_ead ,_eag int ;_afg ,_dae int ;_bf byte ;);for _ggg ,_bfd :=range _eeb .Values {_abdg [_ggg ]=make ([]int ,_bfd .Height );_afea =0;_gaf =0;_ead =(_bfd .Height -1)*_bfd .RowStride ;_bc =0;for _dae =_bfd .Height -1;_dae >=0;_dae ,_ead =_dae -1,_ead -_bfd .RowStride {_abdg [_ggg ][_dae ]=_bc ;_eag =0;for _afg =0;_afg < _bfd .RowStride ;_afg ++{_bf =_bfd .Data [_ead +_afg ];_eag +=_cce [_bf ];_afea +=_aec [_bf ]+_afg *8*_cce [_bf ];};_bc +=_eag ;_gaf +=_eag *_dae ;};_ebf [_ggg ]=_bc ;if _bc > 0{(*_afd )[_ggg ]=_d .Point {X :float32 (_afea )/float32 (_bc ),Y :float32 (_gaf )/float32 (_bc )};}else {(*_afd )[_ggg ]=_d .Point {X :float32 (_bfd .Width )/float32 (2),Y :float32 (_bfd .Height )/float32 (2)};};};if _gbe =_cbb .CentroidPoints .Add (_afd );_gbe !=nil {return _gf .Wrap (_gbe ,_dbb ,"\u0063\u0065\u006et\u0072\u006f\u0069\u0064\u0020\u0061\u0064\u0064");};var (_ddc ,_cde ,_cac int ;_egg float64 ;_feb ,_cgd ,_bbf ,_fca float32 ;_cbe ,_cca _d .Point ;_bda bool ;_ggca *similarTemplatesFinder ;_dfb int ;_gcff *_d .Bitmap ;_fbb *_g .Rectangle ;_eea *_d .Bitmaps ;);for _dfb ,_bgb =range _eeb .Values {_cde =_ebf [_dfb ];if _feb ,_cgd ,_gbe =_afd .GetGeometry (_dfb );_gbe !=nil {return _gf .Wrap (_gbe ,_dbb ,"\u0070t\u0061\u0020\u002d\u0020\u0069");};_bda =false ;_edg :=len (_cbb .UndilatedTemplates .Values );_ggca =_fbe (_cbb ,_bgb );for _bcb :=_ggca .Next ();_bcb > -1;{if _gcff ,_gbe =_cbb .UndilatedTemplates .GetBitmap (_bcb );_gbe !=nil {return _gf .Wrap (_gbe ,_dbb ,"\u0075\u006e\u0069dl\u0061\u0074\u0065\u0064\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0062\u006d\u0032");};if _cac ,_gbe =_aed .GetInt (_bcb );_gbe !=nil {_a .Log .Trace ("\u0046\u0047\u0020T\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u005b\u0069\u0063\u006ca\u0073\u0073\u005d\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_gbe );};if _bbf ,_fca ,_gbe =_cbb .CentroidPointsTemplates .GetGeometry (_bcb );_gbe !=nil {return _gf .Wrap (_gbe ,_dbb ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074T\u0065\u006d\u0070\u006c\u0061\u0074e\u0073\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u00782\u002c\u0079\u0032\u0020");};if _cbb .Settings .WeightFactor > 0.0{if _ddc ,_gbe =_cbb .TemplateAreas .Get (_bcb );_gbe !=nil {_a .Log .Trace ("\u0054\u0065\u006dp\u006c\u0061\u0074\u0065A\u0072\u0065\u0061\u0073\u005b\u0069\u0063l\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0061\u0072\u0065\u0061\u0020\u0025\u0076",_gbe );};_egg =_cbb .Settings .Thresh +(1.0-_cbb .Settings .Thresh )*_cbb .Settings .WeightFactor *float64 (_cac )/float64 (_ddc );}else {_egg =_cbb .Settings .Thresh ;};_gcg ,_eaf :=_d .CorrelationScoreThresholded (_bgb ,_gcff ,_cde ,_cac ,_cbe .X -_cca .X ,_cbe .Y -_cca .Y ,MaxDiffWidth ,MaxDiffHeight ,_cce ,_abdg [_dfb ],float32 (_egg ));if _eaf !=nil {return _gf .Wrap (_eaf ,_dbb ,"");};if _ffg {var (_aff ,_ebfb float64 ;_gga ,_bdag int ;);_aff ,_eaf =_d .CorrelationScore (_bgb ,_gcff ,_cde ,_cac ,_feb -_bbf ,_cgd -_fca ,MaxDiffWidth ,MaxDiffHeight ,_cce );if _eaf !=nil {return _gf .Wrap (_eaf ,_dbb ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");};_ebfb ,_eaf =_d .CorrelationScoreSimple (_bgb ,_gcff ,_cde ,_cac ,_feb -_bbf ,_cgd -_fca ,MaxDiffWidth ,MaxDiffHeight ,_cce );if _eaf !=nil {return _gf .Wrap (_eaf ,_dbb ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");};_gga =int (_e .Sqrt (_aff *float64 (_cde )*float64 (_cac )));_bdag =int (_e .Sqrt (_ebfb *float64 (_cde )*float64 (_cac )));if (_aff >=_egg )!=(_ebfb >=_egg ){return _gf .Errorf (_dbb ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043\u006f\u0072r\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0063\u006f\u0072\u0065\u0020\u006d\u0069\u0073\u006d\u0061\u0074\u0063\u0068\u0020-\u0020\u0025d\u0028\u00250\u002e\u0034\u0066\u002c\u0020\u0025\u0076\u0029\u0020\u0076\u0073\u0020\u0025d(\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0076)\u0020\u0025\u0030\u002e\u0034\u0066",_gga ,_aff ,_aff >=float64 (_egg ),_bdag ,_ebfb ,_ebfb >=float64 (_egg ),_aff -_ebfb );};if _aff >=_egg !=_gcg {return _gf .Errorf (_dbb ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043o\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e \u0073\u0063\u006f\u0072\u0065 \u004d\u0069\u0073\u006d\u0061t\u0063\u0068 \u0062\u0065\u0074w\u0065\u0065\u006e\u0020\u0063\u006frr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020/\u0020\u0074\u0068\u0072\u0065s\u0068\u006f\u006c\u0064\u002e\u0020\u0043\u006f\u006dpa\u0072\u0069\u0073\u006f\u006e:\u0020\u0025\u0030\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0064\u0029\u0020\u003e\u003d\u0020\u00250\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u0029\u0020\u0076\u0073\u0020\u0025\u0076",_aff ,_aff *float64 (_cde )*float64 (_cac ),_gga ,_egg ,float32 (_egg )*float32 (_cde )*float32 (_cac ),_gcg );};};if _gcg {_bda =true ;if _eaf =_cbb .ClassIDs .Add (_bcb );_eaf !=nil {return _gf .Wrap (_eaf ,_dbb ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");};if _eaf =_cbb .ComponentPageNumbers .Add (_abd );_eaf !=nil {return _gf .Wrap (_eaf ,_dbb ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");};if _cbb .Settings .KeepClassInstances {if _bed ,_eaf =_ggce .GetBitmap (_dfb );_eaf !=nil {return _gf .Wrap (_eaf ,_dbb ,"\u004b\u0065\u0065\u0070Cl\u0061\u0073\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u002d \u0069");};if _eea ,_eaf =_cbb .ClassInstances .GetBitmaps (_bcb );_eaf !=nil {return _gf .Wrap (_eaf ,_dbb ,"K\u0065\u0065\u0070\u0043\u006c\u0061s\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065s\u0020\u002d\u0020i\u0043l\u0061\u0073\u0073");};_eea .AddBitmap (_bed );if _fbb ,_eaf =_cab .Get (_dfb );_eaf !=nil {return _gf .Wrap (_eaf ,_dbb ,"\u004be\u0065p\u0043\u006c\u0061\u0073\u0073I\u006e\u0073t\u0061\u006e\u0063\u0065\u0073");};_eea .AddBox (_fbb );};break ;};};if !_bda {if _gbe =_cbb .ClassIDs .Add (_edg );_gbe !=nil {return _gf .Wrap (_gbe ,_dbb ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _gbe =_cbb .ComponentPageNumbers .Add (_abd );_gbe !=nil {return _gf .Wrap (_gbe ,_dbb ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_eea =&_d .Bitmaps {};if _bed ,_gbe =_ggce .GetBitmap (_dfb );_gbe !=nil {return _gf .Wrap (_gbe ,_dbb ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_eea .AddBitmap (_bed );_agb ,_cfc :=_bed .Width ,_bed .Height ;_fd :=uint64 (_cfc )*uint64 (_agb );_cbb .TemplatesSize .Add (_fd ,_edg );if _fbb ,_gbe =_cab .Get (_dfb );_gbe !=nil {return _gf .Wrap (_gbe ,_dbb ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_eea .AddBox (_fbb );_cbb .ClassInstances .AddBitmaps (_eea );_cbb .CentroidPointsTemplates .AddPoint (_feb ,_cgd );_cbb .FgTemplates .AddInt (_cde );_cbb .UndilatedTemplates .AddBitmap (_bed );_ddc =(_bgb .Width -2*JbAddedPixels )*(_bgb .Height -2*JbAddedPixels );if _gbe =_cbb .TemplateAreas .Add (_ddc );_gbe !=nil {return _gf .Wrap (_gbe ,_dbb ,"\u0021\u0066\u006f\u0075\u006e\u0064");};};};_cbb .NumberOfClasses =len (_cbb .UndilatedTemplates .Values );return nil ;};func _fbe (_dfc *Classer ,_egd *_d .Bitmap )*similarTemplatesFinder {return &similarTemplatesFinder {Width :_egd .Width ,Height :_egd .Height ,Classer :_dfc };};type Classer struct{BaseIndex int ;Settings Settings ;ComponentsNumber *_gd .IntSlice ;TemplateAreas *_gd .IntSlice ;Widths map[int ]int ;Heights map[int ]int ;NumberOfClasses int ;ClassInstances *_d .BitmapsArray ;UndilatedTemplates *_d .Bitmaps ;DilatedTemplates *_d .Bitmaps ;TemplatesSize _gd .IntsMap ;FgTemplates *_gd .NumSlice ;CentroidPoints *_d .Points ;CentroidPointsTemplates *_d .Points ;ClassIDs *_gd .IntSlice ;ComponentPageNumbers *_gd .IntSlice ;PtaUL *_d .Points ;PtaLL *_d .Points ;};func (_aeg *Classer )classifyRankHouseNonOne (_aeeg *_d .Boxes ,_bbc ,_bfe ,_bbfa *_d .Bitmaps ,_ddd *_d .Points ,_bca *_gd .NumSlice ,_dbbg int )(_edge error ){const _efee ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";var (_fcf ,_dee ,_cbc ,_dgc float32 ;_geag ,_dc ,_ebef int ;_cfb ,_cacd ,_gdc ,_ac ,_afef *_d .Bitmap ;_dbd ,_edaa bool ;);_acf :=_d .MakePixelSumTab8 ();for _dabb :=0;_dabb < len (_bbc .Values );_dabb ++{if _cacd ,_edge =_bfe .GetBitmap (_dabb );_edge !=nil {return _gf .Wrap (_edge ,_efee ,"b\u006d\u0073\u0031\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};if _geag ,_edge =_bca .GetInt (_dabb );_edge !=nil {_a .Log .Trace ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0046\u0047T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073 \u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_dabb ,_edge );};if _gdc ,_edge =_bbfa .GetBitmap (_dabb );_edge !=nil {return _gf .Wrap (_edge ,_efee ,"b\u006d\u0073\u0032\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};if _fcf ,_dee ,_edge =_ddd .GetGeometry (_dabb );_edge !=nil {return _gf .Wrapf (_edge ,_efee ,"\u0070t\u0061[\u0069\u005d\u002e\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079");};_ebg :=len (_aeg .UndilatedTemplates .Values );_dbd =false ;_afa :=_fbe (_aeg ,_cacd );for _ebef =_afa .Next ();_ebef > -1;{if _ac ,_edge =_aeg .UndilatedTemplates .GetBitmap (_ebef );_edge !=nil {return _gf .Wrap (_edge ,_efee ,"\u0070\u0069\u0078\u0061\u0074\u002e\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");};if _dc ,_edge =_aeg .FgTemplates .GetInt (_ebef );_edge !=nil {_a .Log .Trace ("\u0047\u0065\u0074\u0074\u0069\u006eg\u0020\u0046\u0047\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u005b\u0025d\u005d\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_ebef ,_edge );};if _afef ,_edge =_aeg .DilatedTemplates .GetBitmap (_ebef );_edge !=nil {return _gf .Wrap (_edge ,_efee ,"\u0070\u0069\u0078\u0061\u0074\u0064\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");};if _cbc ,_dgc ,_edge =_aeg .CentroidPointsTemplates .GetGeometry (_ebef );_edge !=nil {return _gf .Wrap (_edge ,_efee ,"\u0043\u0065\u006et\u0072\u006f\u0069\u0064P\u006f\u0069\u006e\u0074\u0073\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u005b\u0069\u0043\u006c\u0061\u0073\u0073\u005d");};_edaa ,_edge =_d .RankHausTest (_cacd ,_gdc ,_ac ,_afef ,_fcf -_cbc ,_dee -_dgc ,MaxDiffWidth ,MaxDiffHeight ,_geag ,_dc ,float32 (_aeg .Settings .RankHaus ),_acf );if _edge !=nil {return _gf .Wrap (_edge ,_efee ,"");};if _edaa {_dbd =true ;if _edge =_aeg .ClassIDs .Add (_ebef );_edge !=nil {return _gf .Wrap (_edge ,_efee ,"");};if _edge =_aeg .ComponentPageNumbers .Add (_dbbg );_edge !=nil {return _gf .Wrap (_edge ,_efee ,"");};if _aeg .Settings .KeepClassInstances {_ggge ,_cbf :=_aeg .ClassInstances .GetBitmaps (_ebef );if _cbf !=nil {return _gf .Wrap (_cbf ,_efee ,"\u0063\u002e\u0050\u0069\u0078\u0061\u0061\u002e\u0047\u0065\u0074B\u0069\u0074\u006d\u0061\u0070\u0073\u0028\u0069\u0043\u006ca\u0073\u0073\u0029");};if _cfb ,_cbf =_bbc .GetBitmap (_dabb );_cbf !=nil {return _gf .Wrap (_cbf ,_efee ,"\u0070i\u0078\u0061\u005b\u0069\u005d");};_ggge .Values =append (_ggge .Values ,_cfb );_bea ,_cbf :=_aeeg .Get (_dabb );if _cbf !=nil {return _gf .Wrap (_cbf ,_efee ,"b\u006f\u0078\u0061\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};_ggge .Boxes =append (_ggge .Boxes ,_bea );};break ;};};if !_dbd {if _edge =_aeg .ClassIDs .Add (_ebg );_edge !=nil {return _gf .Wrap (_edge ,_efee ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _edge =_aeg .ComponentPageNumbers .Add (_dbbg );_edge !=nil {return _gf .Wrap (_edge ,_efee ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_bbcg :=&_d .Bitmaps {};_cfb =_bbc .Values [_dabb ];_bbcg .AddBitmap (_cfb );_dga ,_dcf :=_cfb .Width ,_cfb .Height ;_aeg .TemplatesSize .Add (uint64 (_dga )*uint64 (_dcf ),_ebg );_baf ,_afeae :=_aeeg .Get (_dabb );if _afeae !=nil {return _gf .Wrap (_afeae ,_efee ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_bbcg .AddBox (_baf );_aeg .ClassInstances .AddBitmaps (_bbcg );_aeg .CentroidPointsTemplates .AddPoint (_fcf ,_dee );_aeg .UndilatedTemplates .AddBitmap (_cacd );_aeg .DilatedTemplates .AddBitmap (_gdc );_aeg .FgTemplates .AddInt (_geag );};};_aeg .NumberOfClasses =len (_aeg .UndilatedTemplates .Values );return nil ;};func DefaultSettings ()Settings {_cfbe :=&Settings {};_cfbe .SetDefault ();return *_cfbe };func (_ga *Classer )AddPage (inputPage *_d .Bitmap ,pageNumber int ,method Method )(_bb error ){const _df ="\u0043l\u0061s\u0073\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_ga .Widths [pageNumber ]=inputPage .Width ;_ga .Heights [pageNumber ]=inputPage .Height ;if _bb =_ga .verifyMethod (method );_bb !=nil {return _gf .Wrap (_bb ,_df ,"");};_ca ,_gg ,_bb :=inputPage .GetComponents (_ga .Settings .Components ,_ga .Settings .MaxCompWidth ,_ga .Settings .MaxCompHeight );if _bb !=nil {return _gf .Wrap (_bb ,_df ,"");};_a .Log .Debug ("\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_ca );if _bb =_ga .addPageComponents (inputPage ,_gg ,_ca ,pageNumber ,method );_bb !=nil {return _gf .Wrap (_bb ,_df ,"");};return nil ;};var TwoByTwoWalk =[]int {0,0,0,1,-1,0,0,-1,1,0,-1,1,1,1,-1,-1,1,-1,0,-2,2,0,0,2,-2,0,-1,-2,1,-2,2,-1,2,1,1,2,-1,2,-2,1,-2,-1,-2,-2,2,-2,2,2,-2,2};func (_eacb *Classer )classifyRankHaus (_gab *_d .Boxes ,_ebe *_d .Bitmaps ,_gfd int )error {const _aea ="\u0063\u006ca\u0073\u0073\u0069f\u0079\u0052\u0061\u006e\u006b\u0048\u0061\u0075\u0073";if _gab ==nil {return _gf .Error (_aea ,"\u0062\u006fx\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if _ebe ==nil {return _gf .Error (_aea ,"\u0070\u0069x\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};_de :=len (_ebe .Values );if _de ==0{return _gf .Error (_aea ,"e\u006dp\u0074\u0079\u0020\u006e\u0065\u0077\u0020\u0063o\u006d\u0070\u006f\u006een\u0074\u0073");};_deb :=_ebe .CountPixels ();_dad :=_eacb .Settings .SizeHaus ;_gea :=_d .SelCreateBrick (_dad ,_dad ,_dad /2,_dad /2,_d .SelHit );_bbbg :=&_d .Bitmaps {Values :make ([]*_d .Bitmap ,_de )};_fab :=&_d .Bitmaps {Values :make ([]*_d .Bitmap ,_de )};var (_bfg ,_cfd ,_gca *_d .Bitmap ;_efe error ;);for _baa :=0;_baa < _de ;_baa ++{_bfg ,_efe =_ebe .GetBitmap (_baa );if _efe !=nil {return _gf .Wrap (_efe ,_aea ,"");};_cfd ,_efe =_bfg .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);if _efe !=nil {return _gf .Wrap (_efe ,_aea ,"");};_gca ,_efe =_d .Dilate (nil ,_cfd ,_gea );if _efe !=nil {return _gf .Wrap (_efe ,_aea ,"");};_bbbg .Values [_de ]=_cfd ;_fab .Values [_de ]=_gca ;};_dgb ,_efe :=_d .Centroids (_bbbg .Values );if _efe !=nil {return _gf .Wrap (_efe ,_aea ,"");};if _efe =_dgb .Add (_eacb .CentroidPoints );_efe !=nil {_a .Log .Trace ("\u004e\u006f\u0020\u0063en\u0074\u0072\u006f\u0069\u0064\u0073\u0020\u0074\u006f\u0020\u0061\u0064\u0064");};if _eacb .Settings .RankHaus ==1.0{_efe =_eacb .classifyRankHouseOne (_gab ,_ebe ,_bbbg ,_fab ,_dgb ,_gfd );}else {_efe =_eacb .classifyRankHouseNonOne (_gab ,_ebe ,_bbbg ,_fab ,_dgb ,_deb ,_gfd );};if _efe !=nil {return _gf .Wrap (_efe ,_aea ,"");};return nil ;};func (_dfd *Classer )addPageComponents (_fe *_d .Bitmap ,_cbg *_d .Boxes ,_ce *_d .Bitmaps ,_ed int ,_eg Method )error {const _af ="\u0043l\u0061\u0073\u0073\u0065r\u002e\u0041\u0064\u0064\u0050a\u0067e\u0043o\u006d\u0070\u006f\u006e\u0065\u006e\u0074s";if _fe ==nil {return _gf .Error (_af ,"\u006e\u0069\u006c\u0020\u0069\u006e\u0070\u0075\u0074 \u0070\u0061\u0067\u0065");};if _cbg ==nil ||_ce ==nil ||len (*_cbg )==0{_a .Log .Trace ("\u0041\u0064\u0064P\u0061\u0067\u0065\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0073\u002e\u0020\u004e\u006f\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065n\u0074\u0073\u0020\u0066\u006f\u0075\u006e\u0064",_fe );return nil ;};var _agd error ;switch _eg {case RankHaus :_agd =_dfd .classifyRankHaus (_cbg ,_ce ,_ed );case Correlation :_agd =_dfd .classifyCorrelation (_cbg ,_ce ,_ed );default:_a .Log .Debug ("\u0055\u006ek\u006e\u006f\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064\u003a\u0020'%\u0076\u0027",_eg );return _gf .Error (_af ,"\u0075\u006e\u006bno\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064");};if _agd !=nil {return _gf .Wrap (_agd ,_af ,"");};if _agd =_dfd .getULCorners (_fe ,_cbg );_agd !=nil {return _gf .Wrap (_agd ,_af ,"");};_gc :=len (*_cbg );_dfd .BaseIndex +=_gc ;if _agd =_dfd .ComponentsNumber .Add (_gc );_agd !=nil {return _gf .Wrap (_agd ,_af ,"");};return nil ;};func (_ba *Classer )ComputeLLCorners ()(_db error ){const _f ="\u0043l\u0061\u0073\u0073\u0065\u0072\u002e\u0043\u006f\u006d\u0070\u0075t\u0065\u004c\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";if _ba .PtaUL ==nil {return _gf .Error (_f ,"\u0055\u004c\u0020\u0043or\u006e\u0065\u0072\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006ee\u0064");};_cb :=len (*_ba .PtaUL );_ba .PtaLL =&_d .Points {};var (_gb ,_cc float32 ;_ag ,_fb int ;_ea *_d .Bitmap ;);for _dgg :=0;_dgg < _cb ;_dgg ++{_gb ,_cc ,_db =_ba .PtaUL .GetGeometry (_dgg );if _db !=nil {_a .Log .Debug ("\u0047e\u0074\u0074\u0069\u006e\u0067\u0020\u0050\u0074\u0061\u0055\u004c \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_db );return _gf .Wrap (_db ,_f ,"\u0050\u0074\u0061\u0055\u004c\u0020\u0047\u0065\u006fm\u0065\u0074\u0072\u0079");};_ag ,_db =_ba .ClassIDs .Get (_dgg );if _db !=nil {_a .Log .Debug ("\u0047\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0043\u006c\u0061s\u0073\u0049\u0044\u0020\u0066\u0061\u0069\u006c\u0065\u0064:\u0020\u0025\u0076",_db );return _gf .Wrap (_db ,_f ,"\u0043l\u0061\u0073\u0073\u0049\u0044");};_ea ,_db =_ba .UndilatedTemplates .GetBitmap (_ag );if _db !=nil {_a .Log .Debug ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0055\u006ed\u0069\u006c\u0061\u0074\u0065\u0064\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_db );return _gf .Wrap (_db ,_f ,"\u0055\u006e\u0064\u0069la\u0074\u0065\u0064\u0020\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");};_fb =_ea .Height ;_ba .PtaLL .AddPoint (_gb ,_cc +float32 (_fb ));};return nil ;};func (_bbd *similarTemplatesFinder )Next ()int {var (_bfa ,_dgd ,_ebed ,_ccfa int ;_dde bool ;_efdb *_d .Bitmap ;_ddb error ;);for {if _bbd .Index >=25{return -1;};_dgd =_bbd .Width +TwoByTwoWalk [2*_bbd .Index ];_bfa =_bbd .Height +TwoByTwoWalk [2*_bbd .Index +1];if _bfa < 1||_dgd < 1{_bbd .Index ++;continue ;};if len (_bbd .CurrentNumbers )==0{_bbd .CurrentNumbers ,_dde =_bbd .Classer .TemplatesSize .GetSlice (uint64 (_dgd )*uint64 (_bfa ));if !_dde {_bbd .Index ++;continue ;};_bbd .N =0;};_ebed =len (_bbd .CurrentNumbers );for ;_bbd .N < _ebed ;_bbd .N ++{_ccfa =_bbd .CurrentNumbers [_bbd .N ];_efdb ,_ddb =_bbd .Classer .DilatedTemplates .GetBitmap (_ccfa );if _ddb !=nil {_a .Log .Debug ("\u0046\u0069\u006e\u0064\u004e\u0065\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0074\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u006e\u006f\u0074 \u0066\u006fu\u006e\u0064\u003a\u0020");return 0;};if _efdb .Width -2*JbAddedPixels ==_dgd &&_efdb .Height -2*JbAddedPixels ==_bfa {return _ccfa ;};};_bbd .Index ++;_bbd .CurrentNumbers =nil ;};};func (_gbb Settings )Validate ()error {const _efc ="\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0073\u002e\u0056\u0061\u006ci\u0064\u0061\u0074\u0065";if _gbb .Thresh < 0.4||_gbb .Thresh > 0.98{return _gf .Error (_efc ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074\u0068\u0072\u0065\u0073\u0068\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0034\u0020\u002d\u0020\u0030\u002e\u0039\u0038\u005d");};if _gbb .WeightFactor < 0.0||_gbb .WeightFactor > 1.0{return _gf .Error (_efc ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006ec\u006f\u0064\u0065\u0072\u0020w\u0065\u0069\u0067\u0068\u0074\u0020\u0066\u0061\u0063\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0030\u0020\u002d\u0020\u0031\u002e\u0030\u005d");};if _gbb .RankHaus < 0.5||_gbb .RankHaus > 1.0{return _gf .Error (_efc ,"\u006a\u0062\u0069\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0072a\u006e\u006b\u0020\u0068\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065 \u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065 [\u0030\u002e\u0035\u0020\u002d\u0020\u0031\u002e\u0030\u005d");};if _gbb .SizeHaus < 1||_gbb .SizeHaus > 10{return _gf .Error (_efc ,"\u006a\u0062\u0069\u0067\u0032 \u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0073\u0069\u007a\u0065\u0020h\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0031\u0020\u002d\u0020\u0031\u0030]");};switch _gbb .Components {case _d .ComponentConn ,_d .ComponentCharacters ,_d .ComponentWords :default:return _gf .Error (_efc ,"\u0069n\u0076\u0061\u006c\u0069d\u0020\u0063\u006c\u0061\u0073s\u0065r\u0020c\u006f\u006d\u0070\u006f\u006e\u0065\u006et");};return nil ;};const JbAddedPixels =6;func (_fa *Classer )getULCorners (_gdf *_d .Bitmap ,_ccf *_d .Boxes )error {const _bd ="\u0067\u0065\u0074U\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";if _gdf ==nil {return _gf .Error (_bd ,"\u006e\u0069l\u0020\u0069\u006da\u0067\u0065\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if _ccf ==nil {return _gf .Error (_bd ,"\u006e\u0069\u006c\u0020\u0062\u006f\u0075\u006e\u0064\u0073");};if _fa .PtaUL ==nil {_fa .PtaUL =&_d .Points {};};_bg :=len (*_ccf );var (_gdfe ,_bad ,_ee ,_gfc int ;_eee ,_gcc ,_be ,_eda float32 ;_fg error ;_cd *_g .Rectangle ;_dbf *_d .Bitmap ;_eac _g .Point ;);for _ae :=0;_ae < _bg ;_ae ++{_gdfe =_fa .BaseIndex +_ae ;if _eee ,_gcc ,_fg =_fa .CentroidPoints .GetGeometry (_gdfe );_fg !=nil {return _gf .Wrap (_fg ,_bd ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050o\u0069\u006e\u0074\u0073");};if _bad ,_fg =_fa .ClassIDs .Get (_gdfe );_fg !=nil {return _gf .Wrap (_fg ,_bd ,"\u0043\u006c\u0061s\u0073\u0049\u0044\u0073\u002e\u0047\u0065\u0074");};if _be ,_eda ,_fg =_fa .CentroidPointsTemplates .GetGeometry (_bad );_fg !=nil {return _gf .Wrap (_fg ,_bd ,"\u0043\u0065\u006etr\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074\u0073\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");};_badc :=_be -_eee ;_da :=_eda -_gcc ;if _badc >=0{_ee =int (_badc +0.5);}else {_ee =int (_badc -0.5);};if _da >=0{_gfc =int (_da +0.5);}else {_gfc =int (_da -0.5);};if _cd ,_fg =_ccf .Get (_ae );_fg !=nil {return _gf .Wrap (_fg ,_bd ,"");};_gfa ,_ef :=_cd .Min .X ,_cd .Min .Y ;_dbf ,_fg =_fa .UndilatedTemplates .GetBitmap (_bad );if _fg !=nil {return _gf .Wrap (_fg ,_bd ,"\u0055\u006e\u0064\u0069\u006c\u0061\u0074\u0065\u0064\u0054e\u006d\u0070\u006c\u0061\u0074\u0065\u0073.\u0047\u0065\u0074\u0028\u0069\u0043\u006c\u0061\u0073\u0073\u0029");};_eac ,_fg =_fc (_gdf ,_gfa ,_ef ,_ee ,_gfc ,_dbf );if _fg !=nil {return _gf .Wrap (_fg ,_bd ,"");};_fa .PtaUL .AddPoint (float32 (_gfa -_ee +_eac .X ),float32 (_ef -_gfc +_eac .Y ));};return nil ;};var _ffg bool ;func (_cgb *Settings )SetDefault (){if _cgb .MaxCompWidth ==0{switch _cgb .Components {case _d .ComponentConn :_cgb .MaxCompWidth =MaxConnCompWidth ;case _d .ComponentCharacters :_cgb .MaxCompWidth =MaxCharCompWidth ;case _d .ComponentWords :_cgb .MaxCompWidth =MaxWordCompWidth ;};};if _cgb .MaxCompHeight ==0{_cgb .MaxCompHeight =MaxCompHeight ;};if _cgb .Thresh ==0.0{_cgb .Thresh =0.9;};if _cgb .WeightFactor ==0.0{_cgb .WeightFactor =0.75;};if _cgb .RankHaus ==0.0{_cgb .RankHaus =0.97;};if _cgb .SizeHaus ==0{_cgb .SizeHaus =2;};};