//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package classer ;import (_bc "github.com/unidoc/unipdf/v3/common";_c "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_bg "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";_ed "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_bf "image";_e "math";);func (_dbc *Classer )classifyRankHouseOne (_efd *_bg .Boxes ,_gee ,_ebc ,_gddc *_bg .Bitmaps ,_gdff *_bg .Points ,_ebad int )(_fed error ){const _cgb ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";var (_adb ,_fg ,_ccce ,_agd float32 ;_bae int ;_ada ,_agab ,_cdb ,_bcca ,_dcfe *_bg .Bitmap ;_dea ,_aaac bool ;);for _bdec :=0;_bdec < len (_gee .Values );_bdec ++{_agab =_ebc .Values [_bdec ];_cdb =_gddc .Values [_bdec ];_adb ,_fg ,_fed =_gdff .GetGeometry (_bdec );if _fed !=nil {return _ed .Wrapf (_fed ,_cgb ,"\u0066\u0069\u0072\u0073\u0074\u0020\u0067\u0065\u006fm\u0065\u0074\u0072\u0079");};_gfg :=len (_dbc .UndilatedTemplates .Values );_dea =false ;_dae :=_gfe (_dbc ,_agab );for _bae =_dae .Next ();_bae > -1;{_bcca ,_fed =_dbc .UndilatedTemplates .GetBitmap (_bae );if _fed !=nil {return _ed .Wrap (_fed ,_cgb ,"\u0062\u006d\u0033");};_dcfe ,_fed =_dbc .DilatedTemplates .GetBitmap (_bae );if _fed !=nil {return _ed .Wrap (_fed ,_cgb ,"\u0062\u006d\u0034");};_ccce ,_agd ,_fed =_dbc .CentroidPointsTemplates .GetGeometry (_bae );if _fed !=nil {return _ed .Wrap (_fed ,_cgb ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0073");};_aaac ,_fed =_bg .HausTest (_agab ,_cdb ,_bcca ,_dcfe ,_adb -_ccce ,_fg -_agd ,MaxDiffWidth ,MaxDiffHeight );if _fed !=nil {return _ed .Wrap (_fed ,_cgb ,"");};if _aaac {_dea =true ;if _fed =_dbc .ClassIDs .Add (_bae );_fed !=nil {return _ed .Wrap (_fed ,_cgb ,"");};if _fed =_dbc .ComponentPageNumbers .Add (_ebad );_fed !=nil {return _ed .Wrap (_fed ,_cgb ,"");};if _dbc .Settings .KeepClassInstances {_aaacb ,_bce :=_dbc .ClassInstances .GetBitmaps (_bae );if _bce !=nil {return _ed .Wrap (_bce ,_cgb ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_ada ,_bce =_gee .GetBitmap (_bdec );if _bce !=nil {return _ed .Wrap (_bce ,_cgb ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_aaacb .AddBitmap (_ada );_cgf ,_bce :=_efd .Get (_bdec );if _bce !=nil {return _ed .Wrap (_bce ,_cgb ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_aaacb .AddBox (_cgf );};break ;};};if !_dea {if _fed =_dbc .ClassIDs .Add (_gfg );_fed !=nil {return _ed .Wrap (_fed ,_cgb ,"");};if _fed =_dbc .ComponentPageNumbers .Add (_ebad );_fed !=nil {return _ed .Wrap (_fed ,_cgb ,"");};_fag :=&_bg .Bitmaps {};_ada ,_fed =_gee .GetBitmap (_bdec );if _fed !=nil {return _ed .Wrap (_fed ,_cgb ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_fag .Values =append (_fag .Values ,_ada );_efde ,_cag :=_ada .Width ,_ada .Height ;_dbc .TemplatesSize .Add (uint64 (_cag )*uint64 (_efde ),_gfg );_aff ,_bfc :=_efd .Get (_bdec );if _bfc !=nil {return _ed .Wrap (_bfc ,_cgb ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_fag .AddBox (_aff );_dbc .ClassInstances .AddBitmaps (_fag );_dbc .CentroidPointsTemplates .AddPoint (_adb ,_fg );_dbc .UndilatedTemplates .AddBitmap (_agab );_dbc .DilatedTemplates .AddBitmap (_cdb );};};return nil ;};func DefaultSettings ()Settings {_ccee :=&Settings {};_ccee .SetDefault ();return *_ccee };func (_cffb *similarTemplatesFinder )Next ()int {var (_gcd ,_fec ,_cge ,_gaf int ;_edef bool ;_ddgg *_bg .Bitmap ;_fecg error ;);for {if _cffb .Index >=25{return -1;};_fec =_cffb .Width +TwoByTwoWalk [2*_cffb .Index ];_gcd =_cffb .Height +TwoByTwoWalk [2*_cffb .Index +1];if _gcd < 1||_fec < 1{_cffb .Index ++;continue ;};if len (_cffb .CurrentNumbers )==0{_cffb .CurrentNumbers ,_edef =_cffb .Classer .TemplatesSize .GetSlice (uint64 (_fec )*uint64 (_gcd ));if !_edef {_cffb .Index ++;continue ;};_cffb .N =0;};_cge =len (_cffb .CurrentNumbers );for ;_cffb .N < _cge ;_cffb .N ++{_gaf =_cffb .CurrentNumbers [_cffb .N ];_ddgg ,_fecg =_cffb .Classer .DilatedTemplates .GetBitmap (_gaf );if _fecg !=nil {_bc .Log .Debug ("\u0046\u0069\u006e\u0064\u004e\u0065\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0074\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u006e\u006f\u0074 \u0066\u006fu\u006e\u0064\u003a\u0020");return 0;};if _ddgg .Width -2*JbAddedPixels ==_fec &&_ddgg .Height -2*JbAddedPixels ==_gcd {return _gaf ;};};_cffb .Index ++;_cffb .CurrentNumbers =nil ;};};func (_cded *Settings )SetDefault (){if _cded .MaxCompWidth ==0{switch _cded .Components {case _bg .ComponentConn :_cded .MaxCompWidth =MaxConnCompWidth ;case _bg .ComponentCharacters :_cded .MaxCompWidth =MaxCharCompWidth ;case _bg .ComponentWords :_cded .MaxCompWidth =MaxWordCompWidth ;};};if _cded .MaxCompHeight ==0{_cded .MaxCompHeight =MaxCompHeight ;};if _cded .Thresh ==0.0{_cded .Thresh =0.9;};if _cded .WeightFactor ==0.0{_cded .WeightFactor =0.75;};if _cded .RankHaus ==0.0{_cded .RankHaus =0.97;};if _cded .SizeHaus ==0{_cded .SizeHaus =2;};};type Settings struct{MaxCompWidth int ;MaxCompHeight int ;SizeHaus int ;RankHaus float64 ;Thresh float64 ;WeightFactor float64 ;KeepClassInstances bool ;Components _bg .Component ;Method Method ;};func _gga (_edg *_bg .Bitmap ,_eg ,_deb ,_ee ,_ge int ,_geg *_bg .Bitmap )(_cde _bf .Point ,_ccc error ){const _bcb ="\u0066i\u006e\u0061\u006c\u0041l\u0069\u0067\u006e\u006d\u0065n\u0074P\u006fs\u0069\u0074\u0069\u006f\u006e\u0069\u006eg";if _edg ==nil {return _cde ,_ed .Error (_bcb ,"\u0073\u006f\u0075\u0072ce\u0020\u006e\u006f\u0074\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064");};if _geg ==nil {return _cde ,_ed .Error (_bcb ,"t\u0065\u006d\u0070\u006cat\u0065 \u006e\u006f\u0074\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064");};_cac ,_dgc :=_geg .Width ,_geg .Height ;_edec ,_dca :=_eg -_ee -JbAddedPixels ,_deb -_ge -JbAddedPixels ;_bc .Log .Trace ("\u0078\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0079\u003a\u0020\u0027\u0025\u0064'\u002c\u0020\u0077\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0068\u003a \u0027\u0025\u0064\u0027\u002c\u0020\u0062\u0078\u003a\u0020\u0027\u0025d'\u002c\u0020\u0062\u0079\u003a\u0020\u0027\u0025\u0064\u0027",_eg ,_deb ,_cac ,_dgc ,_edec ,_dca );_af ,_ccc :=_bg .Rect (_edec ,_dca ,_cac ,_dgc );if _ccc !=nil {return _cde ,_ed .Wrap (_ccc ,_bcb ,"");};_dac ,_ ,_ccc :=_edg .ClipRectangle (_af );if _ccc !=nil {_bc .Log .Error ("\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069\u0070\u0020\u0072\u0065c\u0074\u0061\u006e\u0067\u006c\u0065\u003a\u0020\u0025\u0076",_af );return _cde ,_ed .Wrap (_ccc ,_bcb ,"");};_eaf :=_bg .New (_dac .Width ,_dac .Height );_cda :=_e .MaxInt32 ;var _be ,_gad ,_gfc ,_afd ,_cgg int ;for _be =-1;_be <=1;_be ++{for _gad =-1;_gad <=1;_gad ++{if _ ,_ccc =_bg .Copy (_eaf ,_dac );_ccc !=nil {return _cde ,_ed .Wrap (_ccc ,_bcb ,"");};if _ccc =_eaf .RasterOperation (_gad ,_be ,_cac ,_dgc ,_bg .PixSrcXorDst ,_geg ,0,0);_ccc !=nil {return _cde ,_ed .Wrap (_ccc ,_bcb ,"");};_gfc =_eaf .CountPixels ();if _gfc < _cda {_afd =_gad ;_cgg =_be ;_cda =_gfc ;};};};_cde .X =_afd ;_cde .Y =_cgg ;return _cde ,nil ;};type Classer struct{BaseIndex int ;Settings Settings ;ComponentsNumber *_c .IntSlice ;TemplateAreas *_c .IntSlice ;Widths map[int ]int ;Heights map[int ]int ;NumberOfClasses int ;ClassInstances *_bg .BitmapsArray ;UndilatedTemplates *_bg .Bitmaps ;DilatedTemplates *_bg .Bitmaps ;TemplatesSize _c .IntsMap ;FgTemplates *_c .NumSlice ;CentroidPoints *_bg .Points ;CentroidPointsTemplates *_bg .Points ;ClassIDs *_c .IntSlice ;ComponentPageNumbers *_c .IntSlice ;PtaUL *_bg .Points ;PtaLL *_bg .Points ;};func (_ag *Classer )AddPage (inputPage *_bg .Bitmap ,pageNumber int ,method Method )(_d error ){const _gd ="\u0043l\u0061s\u0073\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_ag .Widths [pageNumber ]=inputPage .Width ;_ag .Heights [pageNumber ]=inputPage .Height ;if _d =_ag .verifyMethod (method );_d !=nil {return _ed .Wrap (_d ,_gd ,"");};_f ,_cd ,_d :=inputPage .GetComponents (_ag .Settings .Components ,_ag .Settings .MaxCompWidth ,_ag .Settings .MaxCompHeight );if _d !=nil {return _ed .Wrap (_d ,_gd ,"");};_bc .Log .Debug ("\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_f );if _d =_ag .addPageComponents (inputPage ,_cd ,_f ,pageNumber ,method );_d !=nil {return _ed .Wrap (_d ,_gd ,"");};return nil ;};func (_cdec Settings )Validate ()error {const _cca ="\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0073\u002e\u0056\u0061\u006ci\u0064\u0061\u0074\u0065";if _cdec .Thresh < 0.4||_cdec .Thresh > 0.98{return _ed .Error (_cca ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074\u0068\u0072\u0065\u0073\u0068\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0034\u0020\u002d\u0020\u0030\u002e\u0039\u0038\u005d");};if _cdec .WeightFactor < 0.0||_cdec .WeightFactor > 1.0{return _ed .Error (_cca ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006ec\u006f\u0064\u0065\u0072\u0020w\u0065\u0069\u0067\u0068\u0074\u0020\u0066\u0061\u0063\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0030\u0020\u002d\u0020\u0031\u002e\u0030\u005d");};if _cdec .RankHaus < 0.5||_cdec .RankHaus > 1.0{return _ed .Error (_cca ,"\u006a\u0062\u0069\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0072a\u006e\u006b\u0020\u0068\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065 \u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065 [\u0030\u002e\u0035\u0020\u002d\u0020\u0031\u002e\u0030\u005d");};if _cdec .SizeHaus < 1||_cdec .SizeHaus > 10{return _ed .Error (_cca ,"\u006a\u0062\u0069\u0067\u0032 \u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0073\u0069\u007a\u0065\u0020h\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0031\u0020\u002d\u0020\u0031\u0030]");};switch _cdec .Components {case _bg .ComponentConn ,_bg .ComponentCharacters ,_bg .ComponentWords :default:return _ed .Error (_cca ,"\u0069n\u0076\u0061\u006c\u0069d\u0020\u0063\u006c\u0061\u0073s\u0065r\u0020c\u006f\u006d\u0070\u006f\u006e\u0065\u006et");};return nil ;};func (_gea *Classer )classifyRankHaus (_dgd *_bg .Boxes ,_afa *_bg .Bitmaps ,_bac int )error {const _gcf ="\u0063\u006ca\u0073\u0073\u0069f\u0079\u0052\u0061\u006e\u006b\u0048\u0061\u0075\u0073";if _dgd ==nil {return _ed .Error (_gcf ,"\u0062\u006fx\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if _afa ==nil {return _ed .Error (_gcf ,"\u0070\u0069x\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};_fd :=len (_afa .Values );if _fd ==0{return _ed .Error (_gcf ,"e\u006dp\u0074\u0079\u0020\u006e\u0065\u0077\u0020\u0063o\u006d\u0070\u006f\u006een\u0074\u0073");};_cfac :=_afa .CountPixels ();_eca :=_gea .Settings .SizeHaus ;_abg :=_bg .SelCreateBrick (_eca ,_eca ,_eca /2,_eca /2,_bg .SelHit );_dde :=&_bg .Bitmaps {Values :make ([]*_bg .Bitmap ,_fd )};_bbbf :=&_bg .Bitmaps {Values :make ([]*_bg .Bitmap ,_fd )};var (_edc ,_cfab ,_bde *_bg .Bitmap ;_eaba error ;);for _egee :=0;_egee < _fd ;_egee ++{_edc ,_eaba =_afa .GetBitmap (_egee );if _eaba !=nil {return _ed .Wrap (_eaba ,_gcf ,"");};_cfab ,_eaba =_edc .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);if _eaba !=nil {return _ed .Wrap (_eaba ,_gcf ,"");};_bde ,_eaba =_bg .Dilate (nil ,_cfab ,_abg );if _eaba !=nil {return _ed .Wrap (_eaba ,_gcf ,"");};_dde .Values [_fd ]=_cfab ;_bbbf .Values [_fd ]=_bde ;};_aabd ,_eaba :=_bg .Centroids (_dde .Values );if _eaba !=nil {return _ed .Wrap (_eaba ,_gcf ,"");};if _eaba =_aabd .Add (_gea .CentroidPoints );_eaba !=nil {_bc .Log .Trace ("\u004e\u006f\u0020\u0063en\u0074\u0072\u006f\u0069\u0064\u0073\u0020\u0074\u006f\u0020\u0061\u0064\u0064");};if _gea .Settings .RankHaus ==1.0{_eaba =_gea .classifyRankHouseOne (_dgd ,_afa ,_dde ,_bbbf ,_aabd ,_bac );}else {_eaba =_gea .classifyRankHouseNonOne (_dgd ,_afa ,_dde ,_bbbf ,_aabd ,_cfac ,_bac );};if _eaba !=nil {return _ed .Wrap (_eaba ,_gcf ,"");};return nil ;};func (_cccd *Classer )classifyRankHouseNonOne (_dba *_bg .Boxes ,_edcc ,_bee ,_dbae *_bg .Bitmaps ,_fcg *_bg .Points ,_fagc *_c .NumSlice ,_gba int )(_fff error ){const _afc ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";var (_bea ,_aeeb ,_bdb ,_cff float32 ;_edd ,_efa ,_eec int ;_ebab ,_cacf ,_ffg ,_cgc ,_abb *_bg .Bitmap ;_ddg ,_fdd bool ;);_gfbf :=_bg .MakePixelSumTab8 ();for _eeb :=0;_eeb < len (_edcc .Values );_eeb ++{if _cacf ,_fff =_bee .GetBitmap (_eeb );_fff !=nil {return _ed .Wrap (_fff ,_afc ,"b\u006d\u0073\u0031\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};if _edd ,_fff =_fagc .GetInt (_eeb );_fff !=nil {_bc .Log .Trace ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0046\u0047T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073 \u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_eeb ,_fff );};if _ffg ,_fff =_dbae .GetBitmap (_eeb );_fff !=nil {return _ed .Wrap (_fff ,_afc ,"b\u006d\u0073\u0032\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};if _bea ,_aeeb ,_fff =_fcg .GetGeometry (_eeb );_fff !=nil {return _ed .Wrapf (_fff ,_afc ,"\u0070t\u0061[\u0069\u005d\u002e\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079");};_bfe :=len (_cccd .UndilatedTemplates .Values );_ddg =false ;_dfd :=_gfe (_cccd ,_cacf );for _eec =_dfd .Next ();_eec > -1;{if _cgc ,_fff =_cccd .UndilatedTemplates .GetBitmap (_eec );_fff !=nil {return _ed .Wrap (_fff ,_afc ,"\u0070\u0069\u0078\u0061\u0074\u002e\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");};if _efa ,_fff =_cccd .FgTemplates .GetInt (_eec );_fff !=nil {_bc .Log .Trace ("\u0047\u0065\u0074\u0074\u0069\u006eg\u0020\u0046\u0047\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u005b\u0025d\u005d\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_eec ,_fff );};if _abb ,_fff =_cccd .DilatedTemplates .GetBitmap (_eec );_fff !=nil {return _ed .Wrap (_fff ,_afc ,"\u0070\u0069\u0078\u0061\u0074\u0064\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");};if _bdb ,_cff ,_fff =_cccd .CentroidPointsTemplates .GetGeometry (_eec );_fff !=nil {return _ed .Wrap (_fff ,_afc ,"\u0043\u0065\u006et\u0072\u006f\u0069\u0064P\u006f\u0069\u006e\u0074\u0073\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u005b\u0069\u0043\u006c\u0061\u0073\u0073\u005d");};_fdd ,_fff =_bg .RankHausTest (_cacf ,_ffg ,_cgc ,_abb ,_bea -_bdb ,_aeeb -_cff ,MaxDiffWidth ,MaxDiffHeight ,_edd ,_efa ,float32 (_cccd .Settings .RankHaus ),_gfbf );if _fff !=nil {return _ed .Wrap (_fff ,_afc ,"");};if _fdd {_ddg =true ;if _fff =_cccd .ClassIDs .Add (_eec );_fff !=nil {return _ed .Wrap (_fff ,_afc ,"");};if _fff =_cccd .ComponentPageNumbers .Add (_gba );_fff !=nil {return _ed .Wrap (_fff ,_afc ,"");};if _cccd .Settings .KeepClassInstances {_ged ,_eabf :=_cccd .ClassInstances .GetBitmaps (_eec );if _eabf !=nil {return _ed .Wrap (_eabf ,_afc ,"\u0063\u002e\u0050\u0069\u0078\u0061\u0061\u002e\u0047\u0065\u0074B\u0069\u0074\u006d\u0061\u0070\u0073\u0028\u0069\u0043\u006ca\u0073\u0073\u0029");};if _ebab ,_eabf =_edcc .GetBitmap (_eeb );_eabf !=nil {return _ed .Wrap (_eabf ,_afc ,"\u0070i\u0078\u0061\u005b\u0069\u005d");};_ged .Values =append (_ged .Values ,_ebab );_agdd ,_eabf :=_dba .Get (_eeb );if _eabf !=nil {return _ed .Wrap (_eabf ,_afc ,"b\u006f\u0078\u0061\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};_ged .Boxes =append (_ged .Boxes ,_agdd );};break ;};};if !_ddg {if _fff =_cccd .ClassIDs .Add (_bfe );_fff !=nil {return _ed .Wrap (_fff ,_afc ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _fff =_cccd .ComponentPageNumbers .Add (_gba );_fff !=nil {return _ed .Wrap (_fff ,_afc ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_ebfc :=&_bg .Bitmaps {};_ebab =_edcc .Values [_eeb ];_ebfc .AddBitmap (_ebab );_cbb ,_aaeb :=_ebab .Width ,_ebab .Height ;_cccd .TemplatesSize .Add (uint64 (_cbb )*uint64 (_aaeb ),_bfe );_fgd ,_cbf :=_dba .Get (_eeb );if _cbf !=nil {return _ed .Wrap (_cbf ,_afc ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_ebfc .AddBox (_fgd );_cccd .ClassInstances .AddBitmaps (_ebfc );_cccd .CentroidPointsTemplates .AddPoint (_bea ,_aeeb );_cccd .UndilatedTemplates .AddBitmap (_cacf );_cccd .DilatedTemplates .AddBitmap (_ffg );_cccd .FgTemplates .AddInt (_edd );};};_cccd .NumberOfClasses =len (_cccd .UndilatedTemplates .Values );return nil ;};func Init (settings Settings )(*Classer ,error ){const _a ="\u0063\u006c\u0061s\u0073\u0065\u0072\u002e\u0049\u006e\u0069\u0074";_bd :=&Classer {Settings :settings ,Widths :map[int ]int {},Heights :map[int ]int {},TemplatesSize :_c .IntsMap {},TemplateAreas :&_c .IntSlice {},ComponentPageNumbers :&_c .IntSlice {},ClassIDs :&_c .IntSlice {},ComponentsNumber :&_c .IntSlice {},CentroidPoints :&_bg .Points {},CentroidPointsTemplates :&_bg .Points {},UndilatedTemplates :&_bg .Bitmaps {},DilatedTemplates :&_bg .Bitmaps {},ClassInstances :&_bg .BitmapsArray {},FgTemplates :&_c .NumSlice {}};if _g :=_bd .Settings .Validate ();_g !=nil {return nil ,_ed .Wrap (_g ,_a ,"");};return _bd ,nil ;};const (MaxDiffWidth =2;MaxDiffHeight =2;);const (MaxConnCompWidth =350;MaxCharCompWidth =350;MaxWordCompWidth =1000;MaxCompHeight =120;);var _bcc bool ;func (_dfc *Classer )verifyMethod (_cdd Method )error {if _cdd !=RankHaus &&_cdd !=Correlation {return _ed .Error ("\u0076\u0065\u0072i\u0066\u0079\u004d\u0065\u0074\u0068\u006f\u0064","\u0069\u006e\u0076\u0061li\u0064\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072\u0020\u006d\u0065\u0074\u0068o\u0064");};return nil ;};var TwoByTwoWalk =[]int {0,0,0,1,-1,0,0,-1,1,0,-1,1,1,1,-1,-1,1,-1,0,-2,2,0,0,2,-2,0,-1,-2,1,-2,2,-1,2,1,1,2,-1,2,-2,1,-2,-1,-2,-2,2,-2,2,2,-2,2};func (_df *Classer )ComputeLLCorners ()(_ae error ){const _agb ="\u0043l\u0061\u0073\u0073\u0065\u0072\u002e\u0043\u006f\u006d\u0070\u0075t\u0065\u004c\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";if _df .PtaUL ==nil {return _ed .Error (_agb ,"\u0055\u004c\u0020\u0043or\u006e\u0065\u0072\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006ee\u0064");};_gg :=len (*_df .PtaUL );_df .PtaLL =&_bg .Points {};var (_fa ,_aa float32 ;_dc ,_ea int ;_cdf *_bg .Bitmap ;);for _fc :=0;_fc < _gg ;_fc ++{_fa ,_aa ,_ae =_df .PtaUL .GetGeometry (_fc );if _ae !=nil {_bc .Log .Debug ("\u0047e\u0074\u0074\u0069\u006e\u0067\u0020\u0050\u0074\u0061\u0055\u004c \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_ae );return _ed .Wrap (_ae ,_agb ,"\u0050\u0074\u0061\u0055\u004c\u0020\u0047\u0065\u006fm\u0065\u0074\u0072\u0079");};_dc ,_ae =_df .ClassIDs .Get (_fc );if _ae !=nil {_bc .Log .Debug ("\u0047\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0043\u006c\u0061s\u0073\u0049\u0044\u0020\u0066\u0061\u0069\u006c\u0065\u0064:\u0020\u0025\u0076",_ae );return _ed .Wrap (_ae ,_agb ,"\u0043l\u0061\u0073\u0073\u0049\u0044");};_cdf ,_ae =_df .UndilatedTemplates .GetBitmap (_dc );if _ae !=nil {_bc .Log .Debug ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0055\u006ed\u0069\u006c\u0061\u0074\u0065\u0064\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_ae );return _ed .Wrap (_ae ,_agb ,"\u0055\u006e\u0064\u0069la\u0074\u0065\u0064\u0020\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");};_ea =_cdf .Height ;_df .PtaLL .AddPoint (_fa ,_aa +float32 (_ea ));};return nil ;};func (_de *Classer )addPageComponents (_bgc *_bg .Bitmap ,_aad *_bg .Boxes ,_eab *_bg .Bitmaps ,_cg int ,_dd Method )error {const _fcd ="\u0043l\u0061\u0073\u0073\u0065r\u002e\u0041\u0064\u0064\u0050a\u0067e\u0043o\u006d\u0070\u006f\u006e\u0065\u006e\u0074s";if _bgc ==nil {return _ed .Error (_fcd ,"\u006e\u0069\u006c\u0020\u0069\u006e\u0070\u0075\u0074 \u0070\u0061\u0067\u0065");};if _aad ==nil ||_eab ==nil ||len (*_aad )==0{_bc .Log .Trace ("\u0041\u0064\u0064P\u0061\u0067\u0065\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0073\u002e\u0020\u004e\u006f\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065n\u0074\u0073\u0020\u0066\u006f\u0075\u006e\u0064",_bgc );return nil ;};var _agg error ;switch _dd {case RankHaus :_agg =_de .classifyRankHaus (_aad ,_eab ,_cg );case Correlation :_agg =_de .classifyCorrelation (_aad ,_eab ,_cg );default:_bc .Log .Debug ("\u0055\u006ek\u006e\u006f\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064\u003a\u0020'%\u0076\u0027",_dd );return _ed .Error (_fcd ,"\u0075\u006e\u006bno\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064");};if _agg !=nil {return _ed .Wrap (_agg ,_fcd ,"");};if _agg =_de .getULCorners (_bgc ,_aad );_agg !=nil {return _ed .Wrap (_agg ,_fcd ,"");};_aga :=len (*_aad );_de .BaseIndex +=_aga ;if _agg =_de .ComponentsNumber .Add (_aga );_agg !=nil {return _ed .Wrap (_agg ,_fcd ,"");};return nil ;};func (_da *Classer )getULCorners (_cf *_bg .Bitmap ,_ggc *_bg .Boxes )error {const _cc ="\u0067\u0065\u0074U\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";if _cf ==nil {return _ed .Error (_cc ,"\u006e\u0069l\u0020\u0069\u006da\u0067\u0065\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if _ggc ==nil {return _ed .Error (_cc ,"\u006e\u0069\u006c\u0020\u0062\u006f\u0075\u006e\u0064\u0073");};if _da .PtaUL ==nil {_da .PtaUL =&_bg .Points {};};_ba :=len (*_ggc );var (_agac ,_bab ,_ga ,_cce int ;_dee ,_ab ,_gb ,_aae float32 ;_bcg error ;_ca *_bf .Rectangle ;_dg *_bg .Bitmap ;_ede _bf .Point ;);for _aeb :=0;_aeb < _ba ;_aeb ++{_agac =_da .BaseIndex +_aeb ;if _dee ,_ab ,_bcg =_da .CentroidPoints .GetGeometry (_agac );_bcg !=nil {return _ed .Wrap (_bcg ,_cc ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050o\u0069\u006e\u0074\u0073");};if _bab ,_bcg =_da .ClassIDs .Get (_agac );_bcg !=nil {return _ed .Wrap (_bcg ,_cc ,"\u0043\u006c\u0061s\u0073\u0049\u0044\u0073\u002e\u0047\u0065\u0074");};if _gb ,_aae ,_bcg =_da .CentroidPointsTemplates .GetGeometry (_bab );_bcg !=nil {return _ed .Wrap (_bcg ,_cc ,"\u0043\u0065\u006etr\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074\u0073\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");};_ef :=_gb -_dee ;_fcdg :=_aae -_ab ;if _ef >=0{_ga =int (_ef +0.5);}else {_ga =int (_ef -0.5);};if _fcdg >=0{_cce =int (_fcdg +0.5);}else {_cce =int (_fcdg -0.5);};if _ca ,_bcg =_ggc .Get (_aeb );_bcg !=nil {return _ed .Wrap (_bcg ,_cc ,"");};_gf ,_bdf :=_ca .Min .X ,_ca .Min .Y ;_dg ,_bcg =_da .UndilatedTemplates .GetBitmap (_bab );if _bcg !=nil {return _ed .Wrap (_bcg ,_cc ,"\u0055\u006e\u0064\u0069\u006c\u0061\u0074\u0065\u0064\u0054e\u006d\u0070\u006c\u0061\u0074\u0065\u0073.\u0047\u0065\u0074\u0028\u0069\u0043\u006c\u0061\u0073\u0073\u0029");};_ede ,_bcg =_gga (_cf ,_gf ,_bdf ,_ga ,_cce ,_dg );if _bcg !=nil {return _ed .Wrap (_bcg ,_cc ,"");};_da .PtaUL .AddPoint (float32 (_gf -_ga +_ede .X ),float32 (_bdf -_cce +_ede .Y ));};return nil ;};func (_ff *Classer )classifyCorrelation (_fb *_bg .Boxes ,_eabc *_bg .Bitmaps ,_gdd int )error {const _cggg ="\u0063\u006c\u0061\u0073si\u0066\u0079\u0043\u006f\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e";if _fb ==nil {return _ed .Error (_cggg ,"\u006e\u0065\u0077\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0062\u006f\u0075\u006e\u0064\u0069\u006e\u0067\u0020\u0062o\u0078\u0065\u0073\u0020\u006eo\u0074\u0020f\u006f\u0075\u006e\u0064");};if _eabc ==nil {return _ed .Error (_cggg ,"\u006e\u0065wC\u006f\u006d\u0070o\u006e\u0065\u006e\u0074s b\u0069tm\u0061\u0070\u0020\u0061\u0072\u0072\u0061y \u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064");};_gega :=len (_eabc .Values );if _gega ==0{_bc .Log .Debug ("\u0063l\u0061\u0073s\u0069\u0066\u0079C\u006f\u0072\u0072\u0065\u006c\u0061\u0074i\u006f\u006e\u0020\u002d\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0070\u0069\u0078\u0061s\u0020\u0069\u0073\u0020\u0065\u006d\u0070\u0074\u0079");return nil ;};var (_eed ,_ad *_bg .Bitmap ;_ege error ;);_cdg :=&_bg .Bitmaps {Values :make ([]*_bg .Bitmap ,_gega )};for _def ,_cb :=range _eabc .Values {_ad ,_ege =_cb .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);if _ege !=nil {return _ed .Wrap (_ege ,_cggg ,"");};_cdg .Values [_def ]=_ad ;};_dga :=_ff .FgTemplates ;_db :=_bg .MakePixelSumTab8 ();_gc :=_bg .MakePixelCentroidTab8 ();_aee :=make ([]int ,_gega );_dbe :=make ([][]int ,_gega );_agbf :=_bg .Points (make ([]_bg .Point ,_gega ));_eb :=&_agbf ;var (_ec ,_gfb int ;_gde ,_efe ,_eea int ;_ecb ,_aada int ;_ecbf byte ;);for _bb ,_cfa :=range _cdg .Values {_dbe [_bb ]=make ([]int ,_cfa .Height );_ec =0;_gfb =0;_efe =(_cfa .Height -1)*_cfa .RowStride ;_gde =0;for _aada =_cfa .Height -1;_aada >=0;_aada ,_efe =_aada -1,_efe -_cfa .RowStride {_dbe [_bb ][_aada ]=_gde ;_eea =0;for _ecb =0;_ecb < _cfa .RowStride ;_ecb ++{_ecbf =_cfa .Data [_efe +_ecb ];_eea +=_db [_ecbf ];_ec +=_gc [_ecbf ]+_ecb *8*_db [_ecbf ];};_gde +=_eea ;_gfb +=_eea *_aada ;};_aee [_bb ]=_gde ;if _gde > 0{(*_eb )[_bb ]=_bg .Point {X :float32 (_ec )/float32 (_gde ),Y :float32 (_gfb )/float32 (_gde )};}else {(*_eb )[_bb ]=_bg .Point {X :float32 (_cfa .Width )/float32 (2),Y :float32 (_cfa .Height )/float32 (2)};};};if _ege =_ff .CentroidPoints .Add (_eb );_ege !=nil {return _ed .Wrap (_ege ,_cggg ,"\u0063\u0065\u006et\u0072\u006f\u0069\u0064\u0020\u0061\u0064\u0064");};var (_aab ,_baf ,_bga int ;_eba float64 ;_edgd ,_ggg ,_abd ,_fe float32 ;_dcf ,_bag _bg .Point ;_gdf bool ;_fbg *similarTemplatesFinder ;_ccf int ;_ebf *_bg .Bitmap ;_gbf *_bf .Rectangle ;_bfd *_bg .Bitmaps ;);for _ccf ,_ad =range _cdg .Values {_baf =_aee [_ccf ];if _edgd ,_ggg ,_ege =_eb .GetGeometry (_ccf );_ege !=nil {return _ed .Wrap (_ege ,_cggg ,"\u0070t\u0061\u0020\u002d\u0020\u0069");};_gdf =false ;_aac :=len (_ff .UndilatedTemplates .Values );_fbg =_gfe (_ff ,_ad );for _gdfc :=_fbg .Next ();_gdfc > -1;{if _ebf ,_ege =_ff .UndilatedTemplates .GetBitmap (_gdfc );_ege !=nil {return _ed .Wrap (_ege ,_cggg ,"\u0075\u006e\u0069dl\u0061\u0074\u0065\u0064\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0062\u006d\u0032");};if _bga ,_ege =_dga .GetInt (_gdfc );_ege !=nil {_bc .Log .Trace ("\u0046\u0047\u0020T\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u005b\u0069\u0063\u006ca\u0073\u0073\u005d\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_ege );};if _abd ,_fe ,_ege =_ff .CentroidPointsTemplates .GetGeometry (_gdfc );_ege !=nil {return _ed .Wrap (_ege ,_cggg ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074T\u0065\u006d\u0070\u006c\u0061\u0074e\u0073\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u00782\u002c\u0079\u0032\u0020");};if _ff .Settings .WeightFactor > 0.0{if _aab ,_ege =_ff .TemplateAreas .Get (_gdfc );_ege !=nil {_bc .Log .Trace ("\u0054\u0065\u006dp\u006c\u0061\u0074\u0065A\u0072\u0065\u0061\u0073\u005b\u0069\u0063l\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0061\u0072\u0065\u0061\u0020\u0025\u0076",_ege );};_eba =_ff .Settings .Thresh +(1.0-_ff .Settings .Thresh )*_ff .Settings .WeightFactor *float64 (_bga )/float64 (_aab );}else {_eba =_ff .Settings .Thresh ;};_ce ,_bbb :=_bg .CorrelationScoreThresholded (_ad ,_ebf ,_baf ,_bga ,_dcf .X -_bag .X ,_dcf .Y -_bag .Y ,MaxDiffWidth ,MaxDiffHeight ,_db ,_dbe [_ccf ],float32 (_eba ));if _bbb !=nil {return _ed .Wrap (_bbb ,_cggg ,"");};if _bcc {var (_gbe ,_ddb float64 ;_aaf ,_aaa int ;);_gbe ,_bbb =_bg .CorrelationScore (_ad ,_ebf ,_baf ,_bga ,_edgd -_abd ,_ggg -_fe ,MaxDiffWidth ,MaxDiffHeight ,_db );if _bbb !=nil {return _ed .Wrap (_bbb ,_cggg ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");};_ddb ,_bbb =_bg .CorrelationScoreSimple (_ad ,_ebf ,_baf ,_bga ,_edgd -_abd ,_ggg -_fe ,MaxDiffWidth ,MaxDiffHeight ,_db );if _bbb !=nil {return _ed .Wrap (_bbb ,_cggg ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");};_aaf =int (_e .Sqrt (_gbe *float64 (_baf )*float64 (_bga )));_aaa =int (_e .Sqrt (_ddb *float64 (_baf )*float64 (_bga )));if (_gbe >=_eba )!=(_ddb >=_eba ){return _ed .Errorf (_cggg ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043\u006f\u0072r\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0063\u006f\u0072\u0065\u0020\u006d\u0069\u0073\u006d\u0061\u0074\u0063\u0068\u0020-\u0020\u0025d\u0028\u00250\u002e\u0034\u0066\u002c\u0020\u0025\u0076\u0029\u0020\u0076\u0073\u0020\u0025d(\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0076)\u0020\u0025\u0030\u002e\u0034\u0066",_aaf ,_gbe ,_gbe >=float64 (_eba ),_aaa ,_ddb ,_ddb >=float64 (_eba ),_gbe -_ddb );};if _gbe >=_eba !=_ce {return _ed .Errorf (_cggg ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043o\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e \u0073\u0063\u006f\u0072\u0065 \u004d\u0069\u0073\u006d\u0061t\u0063\u0068 \u0062\u0065\u0074w\u0065\u0065\u006e\u0020\u0063\u006frr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020/\u0020\u0074\u0068\u0072\u0065s\u0068\u006f\u006c\u0064\u002e\u0020\u0043\u006f\u006dpa\u0072\u0069\u0073\u006f\u006e:\u0020\u0025\u0030\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0064\u0029\u0020\u003e\u003d\u0020\u00250\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u0029\u0020\u0076\u0073\u0020\u0025\u0076",_gbe ,_gbe *float64 (_baf )*float64 (_bga ),_aaf ,_eba ,float32 (_eba )*float32 (_baf )*float32 (_bga ),_ce );};};if _ce {_gdf =true ;if _bbb =_ff .ClassIDs .Add (_gdfc );_bbb !=nil {return _ed .Wrap (_bbb ,_cggg ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");};if _bbb =_ff .ComponentPageNumbers .Add (_gdd );_bbb !=nil {return _ed .Wrap (_bbb ,_cggg ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");};if _ff .Settings .KeepClassInstances {if _eed ,_bbb =_eabc .GetBitmap (_ccf );_bbb !=nil {return _ed .Wrap (_bbb ,_cggg ,"\u004b\u0065\u0065\u0070Cl\u0061\u0073\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u002d \u0069");};if _bfd ,_bbb =_ff .ClassInstances .GetBitmaps (_gdfc );_bbb !=nil {return _ed .Wrap (_bbb ,_cggg ,"K\u0065\u0065\u0070\u0043\u006c\u0061s\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065s\u0020\u002d\u0020i\u0043l\u0061\u0073\u0073");};_bfd .AddBitmap (_eed );if _gbf ,_bbb =_fb .Get (_ccf );_bbb !=nil {return _ed .Wrap (_bbb ,_cggg ,"\u004be\u0065p\u0043\u006c\u0061\u0073\u0073I\u006e\u0073t\u0061\u006e\u0063\u0065\u0073");};_bfd .AddBox (_gbf );};break ;};};if !_gdf {if _ege =_ff .ClassIDs .Add (_aac );_ege !=nil {return _ed .Wrap (_ege ,_cggg ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _ege =_ff .ComponentPageNumbers .Add (_gdd );_ege !=nil {return _ed .Wrap (_ege ,_cggg ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_bfd =&_bg .Bitmaps {};if _eed ,_ege =_eabc .GetBitmap (_ccf );_ege !=nil {return _ed .Wrap (_ege ,_cggg ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_bfd .AddBitmap (_eed );_ddf ,_bge :=_eed .Width ,_eed .Height ;_bgd :=uint64 (_bge )*uint64 (_ddf );_ff .TemplatesSize .Add (_bgd ,_aac );if _gbf ,_ege =_fb .Get (_ccf );_ege !=nil {return _ed .Wrap (_ege ,_cggg ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_bfd .AddBox (_gbf );_ff .ClassInstances .AddBitmaps (_bfd );_ff .CentroidPointsTemplates .AddPoint (_edgd ,_ggg );_ff .FgTemplates .AddInt (_baf );_ff .UndilatedTemplates .AddBitmap (_eed );_aab =(_ad .Width -2*JbAddedPixels )*(_ad .Height -2*JbAddedPixels );if _ege =_ff .TemplateAreas .Add (_aab );_ege !=nil {return _ed .Wrap (_ege ,_cggg ,"\u0021\u0066\u006f\u0075\u006e\u0064");};};};_ff .NumberOfClasses =len (_ff .UndilatedTemplates .Values );return nil ;};const JbAddedPixels =6;type similarTemplatesFinder struct{Classer *Classer ;Width int ;Height int ;Index int ;CurrentNumbers []int ;N int ;};type Method int ;const (RankHaus Method =iota ;Correlation ;);func _gfe (_bdecd *Classer ,_bec *_bg .Bitmap )*similarTemplatesFinder {return &similarTemplatesFinder {Width :_bec .Width ,Height :_bec .Height ,Classer :_bdecd };};