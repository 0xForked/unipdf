//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package classer ;import (_ca "github.com/unidoc/unipdf/v3/common";_a "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_ad "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";_ec "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_c "image";_e "math";);type Classer struct{BaseIndex int ;Settings Settings ;ComponentsNumber *_a .IntSlice ;TemplateAreas *_a .IntSlice ;Widths map[int ]int ;Heights map[int ]int ;NumberOfClasses int ;ClassInstances *_ad .BitmapsArray ;UndilatedTemplates *_ad .Bitmaps ;DilatedTemplates *_ad .Bitmaps ;TemplatesSize _a .IntsMap ;FgTemplates *_a .NumSlice ;CentroidPoints *_ad .Points ;CentroidPointsTemplates *_ad .Points ;ClassIDs *_a .IntSlice ;ComponentPageNumbers *_a .IntSlice ;PtaUL *_ad .Points ;PtaLL *_ad .Points ;};func (_fga *Classer )classifyCorrelation (_cg *_ad .Boxes ,_ce *_ad .Bitmaps ,_gd int )error {const _bcc ="\u0063\u006c\u0061\u0073si\u0066\u0079\u0043\u006f\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e";if _cg ==nil {return _ec .Error (_bcc ,"\u006e\u0065\u0077\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0062\u006f\u0075\u006e\u0064\u0069\u006e\u0067\u0020\u0062o\u0078\u0065\u0073\u0020\u006eo\u0074\u0020f\u006f\u0075\u006e\u0064");};if _ce ==nil {return _ec .Error (_bcc ,"\u006e\u0065wC\u006f\u006d\u0070o\u006e\u0065\u006e\u0074s b\u0069tm\u0061\u0070\u0020\u0061\u0072\u0072\u0061y \u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064");};_gdd :=len (_ce .Values );if _gdd ==0{_ca .Log .Debug ("\u0063l\u0061\u0073s\u0069\u0066\u0079C\u006f\u0072\u0072\u0065\u006c\u0061\u0074i\u006f\u006e\u0020\u002d\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0070\u0069\u0078\u0061s\u0020\u0069\u0073\u0020\u0065\u006d\u0070\u0074\u0079");return nil ;};var (_gcf ,_cff *_ad .Bitmap ;_ecae error ;);_ff :=&_ad .Bitmaps {Values :make ([]*_ad .Bitmap ,_gdd )};for _fdg ,_baa :=range _ce .Values {_cff ,_ecae =_baa .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);if _ecae !=nil {return _ec .Wrap (_ecae ,_bcc ,"");};_ff .Values [_fdg ]=_cff ;};_cab :=_fga .FgTemplates ;_dfc :=_ad .MakePixelSumTab8 ();_gg :=_ad .MakePixelCentroidTab8 ();_eb :=make ([]int ,_gdd );_gde :=make ([][]int ,_gdd );_bbd :=_ad .Points (make ([]_ad .Point ,_gdd ));_fcd :=&_bbd ;var (_fef ,_eab int ;_cgg ,_dgf ,_cda int ;_aff ,_affe int ;_eed byte ;);for _fge ,_cea :=range _ff .Values {_gde [_fge ]=make ([]int ,_cea .Height );_fef =0;_eab =0;_dgf =(_cea .Height -1)*_cea .RowStride ;_cgg =0;for _affe =_cea .Height -1;_affe >=0;_affe ,_dgf =_affe -1,_dgf -_cea .RowStride {_gde [_fge ][_affe ]=_cgg ;_cda =0;for _aff =0;_aff < _cea .RowStride ;_aff ++{_eed =_cea .Data [_dgf +_aff ];_cda +=_dfc [_eed ];_fef +=_gg [_eed ]+_aff *8*_dfc [_eed ];};_cgg +=_cda ;_eab +=_cda *_affe ;};_eb [_fge ]=_cgg ;if _cgg > 0{(*_fcd )[_fge ]=_ad .Point {X :float32 (_fef )/float32 (_cgg ),Y :float32 (_eab )/float32 (_cgg )};}else {(*_fcd )[_fge ]=_ad .Point {X :float32 (_cea .Width )/float32 (2),Y :float32 (_cea .Height )/float32 (2)};};};if _ecae =_fga .CentroidPoints .Add (_fcd );_ecae !=nil {return _ec .Wrap (_ecae ,_bcc ,"\u0063\u0065\u006et\u0072\u006f\u0069\u0064\u0020\u0061\u0064\u0064");};var (_abb ,_edf ,_bgda int ;_bee float64 ;_cec ,_dd ,_eedd ,_cfc float32 ;_de ,_fgf _ad .Point ;_dgd bool ;_gdg *similarTemplatesFinder ;_bda int ;_caf *_ad .Bitmap ;_ebe *_c .Rectangle ;_feb *_ad .Bitmaps ;);for _bda ,_cff =range _ff .Values {_edf =_eb [_bda ];if _cec ,_dd ,_ecae =_fcd .GetGeometry (_bda );_ecae !=nil {return _ec .Wrap (_ecae ,_bcc ,"\u0070t\u0061\u0020\u002d\u0020\u0069");};_dgd =false ;_cga :=len (_fga .UndilatedTemplates .Values );_gdg =_afg (_fga ,_cff );for _ggd :=_gdg .Next ();_ggd > -1;{if _caf ,_ecae =_fga .UndilatedTemplates .GetBitmap (_ggd );_ecae !=nil {return _ec .Wrap (_ecae ,_bcc ,"\u0075\u006e\u0069dl\u0061\u0074\u0065\u0064\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0062\u006d\u0032");};if _bgda ,_ecae =_cab .GetInt (_ggd );_ecae !=nil {_ca .Log .Trace ("\u0046\u0047\u0020T\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u005b\u0069\u0063\u006ca\u0073\u0073\u005d\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_ecae );};if _eedd ,_cfc ,_ecae =_fga .CentroidPointsTemplates .GetGeometry (_ggd );_ecae !=nil {return _ec .Wrap (_ecae ,_bcc ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074T\u0065\u006d\u0070\u006c\u0061\u0074e\u0073\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u00782\u002c\u0079\u0032\u0020");};if _fga .Settings .WeightFactor > 0.0{if _abb ,_ecae =_fga .TemplateAreas .Get (_ggd );_ecae !=nil {_ca .Log .Trace ("\u0054\u0065\u006dp\u006c\u0061\u0074\u0065A\u0072\u0065\u0061\u0073\u005b\u0069\u0063l\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0061\u0072\u0065\u0061\u0020\u0025\u0076",_ecae );};_bee =_fga .Settings .Thresh +(1.0-_fga .Settings .Thresh )*_fga .Settings .WeightFactor *float64 (_bgda )/float64 (_abb );}else {_bee =_fga .Settings .Thresh ;};_aee ,_ceb :=_ad .CorrelationScoreThresholded (_cff ,_caf ,_edf ,_bgda ,_de .X -_fgf .X ,_de .Y -_fgf .Y ,MaxDiffWidth ,MaxDiffHeight ,_dfc ,_gde [_bda ],float32 (_bee ));if _ceb !=nil {return _ec .Wrap (_ceb ,_bcc ,"");};if _ccc {var (_aec ,_gfg float64 ;_gbf ,_ega int ;);_aec ,_ceb =_ad .CorrelationScore (_cff ,_caf ,_edf ,_bgda ,_cec -_eedd ,_dd -_cfc ,MaxDiffWidth ,MaxDiffHeight ,_dfc );if _ceb !=nil {return _ec .Wrap (_ceb ,_bcc ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");};_gfg ,_ceb =_ad .CorrelationScoreSimple (_cff ,_caf ,_edf ,_bgda ,_cec -_eedd ,_dd -_cfc ,MaxDiffWidth ,MaxDiffHeight ,_dfc );if _ceb !=nil {return _ec .Wrap (_ceb ,_bcc ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");};_gbf =int (_e .Sqrt (_aec *float64 (_edf )*float64 (_bgda )));_ega =int (_e .Sqrt (_gfg *float64 (_edf )*float64 (_bgda )));if (_aec >=_bee )!=(_gfg >=_bee ){return _ec .Errorf (_bcc ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043\u006f\u0072r\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0063\u006f\u0072\u0065\u0020\u006d\u0069\u0073\u006d\u0061\u0074\u0063\u0068\u0020-\u0020\u0025d\u0028\u00250\u002e\u0034\u0066\u002c\u0020\u0025\u0076\u0029\u0020\u0076\u0073\u0020\u0025d(\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0076)\u0020\u0025\u0030\u002e\u0034\u0066",_gbf ,_aec ,_aec >=float64 (_bee ),_ega ,_gfg ,_gfg >=float64 (_bee ),_aec -_gfg );};if _aec >=_bee !=_aee {return _ec .Errorf (_bcc ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043o\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e \u0073\u0063\u006f\u0072\u0065 \u004d\u0069\u0073\u006d\u0061t\u0063\u0068 \u0062\u0065\u0074w\u0065\u0065\u006e\u0020\u0063\u006frr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020/\u0020\u0074\u0068\u0072\u0065s\u0068\u006f\u006c\u0064\u002e\u0020\u0043\u006f\u006dpa\u0072\u0069\u0073\u006f\u006e:\u0020\u0025\u0030\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0064\u0029\u0020\u003e\u003d\u0020\u00250\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u0029\u0020\u0076\u0073\u0020\u0025\u0076",_aec ,_aec *float64 (_edf )*float64 (_bgda ),_gbf ,_bee ,float32 (_bee )*float32 (_edf )*float32 (_bgda ),_aee );};};if _aee {_dgd =true ;if _ceb =_fga .ClassIDs .Add (_ggd );_ceb !=nil {return _ec .Wrap (_ceb ,_bcc ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");};if _ceb =_fga .ComponentPageNumbers .Add (_gd );_ceb !=nil {return _ec .Wrap (_ceb ,_bcc ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");};if _fga .Settings .KeepClassInstances {if _gcf ,_ceb =_ce .GetBitmap (_bda );_ceb !=nil {return _ec .Wrap (_ceb ,_bcc ,"\u004b\u0065\u0065\u0070Cl\u0061\u0073\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u002d \u0069");};if _feb ,_ceb =_fga .ClassInstances .GetBitmaps (_ggd );_ceb !=nil {return _ec .Wrap (_ceb ,_bcc ,"K\u0065\u0065\u0070\u0043\u006c\u0061s\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065s\u0020\u002d\u0020i\u0043l\u0061\u0073\u0073");};_feb .AddBitmap (_gcf );if _ebe ,_ceb =_cg .Get (_bda );_ceb !=nil {return _ec .Wrap (_ceb ,_bcc ,"\u004be\u0065p\u0043\u006c\u0061\u0073\u0073I\u006e\u0073t\u0061\u006e\u0063\u0065\u0073");};_feb .AddBox (_ebe );};break ;};};if !_dgd {if _ecae =_fga .ClassIDs .Add (_cga );_ecae !=nil {return _ec .Wrap (_ecae ,_bcc ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _ecae =_fga .ComponentPageNumbers .Add (_gd );_ecae !=nil {return _ec .Wrap (_ecae ,_bcc ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_feb =&_ad .Bitmaps {};if _gcf ,_ecae =_ce .GetBitmap (_bda );_ecae !=nil {return _ec .Wrap (_ecae ,_bcc ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_feb .AddBitmap (_gcf );_egae ,_adag :=_gcf .Width ,_gcf .Height ;_gbe :=uint64 (_adag )*uint64 (_egae );_fga .TemplatesSize .Add (_gbe ,_cga );if _ebe ,_ecae =_cg .Get (_bda );_ecae !=nil {return _ec .Wrap (_ecae ,_bcc ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_feb .AddBox (_ebe );_fga .ClassInstances .AddBitmaps (_feb );_fga .CentroidPointsTemplates .AddPoint (_cec ,_dd );_fga .FgTemplates .AddInt (_edf );_fga .UndilatedTemplates .AddBitmap (_gcf );_abb =(_cff .Width -2*JbAddedPixels )*(_cff .Height -2*JbAddedPixels );if _ecae =_fga .TemplateAreas .Add (_abb );_ecae !=nil {return _ec .Wrap (_ecae ,_bcc ,"\u0021\u0066\u006f\u0075\u006e\u0064");};};};_fga .NumberOfClasses =len (_fga .UndilatedTemplates .Values );return nil ;};type Method int ;func (_af *Classer )ComputeLLCorners ()(_ae error ){const _gb ="\u0043l\u0061\u0073\u0073\u0065\u0072\u002e\u0043\u006f\u006d\u0070\u0075t\u0065\u004c\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";if _af .PtaUL ==nil {return _ec .Error (_gb ,"\u0055\u004c\u0020\u0043or\u006e\u0065\u0072\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006ee\u0064");};_fb :=len (*_af .PtaUL );_af .PtaLL =&_ad .Points {};var (_be ,_d float32 ;_afd ,_ba int ;_bd *_ad .Bitmap ;);for _aa :=0;_aa < _fb ;_aa ++{_be ,_d ,_ae =_af .PtaUL .GetGeometry (_aa );if _ae !=nil {_ca .Log .Debug ("\u0047e\u0074\u0074\u0069\u006e\u0067\u0020\u0050\u0074\u0061\u0055\u004c \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_ae );return _ec .Wrap (_ae ,_gb ,"\u0050\u0074\u0061\u0055\u004c\u0020\u0047\u0065\u006fm\u0065\u0074\u0072\u0079");};_afd ,_ae =_af .ClassIDs .Get (_aa );if _ae !=nil {_ca .Log .Debug ("\u0047\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0043\u006c\u0061s\u0073\u0049\u0044\u0020\u0066\u0061\u0069\u006c\u0065\u0064:\u0020\u0025\u0076",_ae );return _ec .Wrap (_ae ,_gb ,"\u0043l\u0061\u0073\u0073\u0049\u0044");};_bd ,_ae =_af .UndilatedTemplates .GetBitmap (_afd );if _ae !=nil {_ca .Log .Debug ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0055\u006ed\u0069\u006c\u0061\u0074\u0065\u0064\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_ae );return _ec .Wrap (_ae ,_gb ,"\u0055\u006e\u0064\u0069la\u0074\u0065\u0064\u0020\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");};_ba =_bd .Height ;_af .PtaLL .AddPoint (_be ,_d +float32 (_ba ));};return nil ;};type Settings struct{MaxCompWidth int ;MaxCompHeight int ;SizeHaus int ;RankHaus float64 ;Thresh float64 ;WeightFactor float64 ;KeepClassInstances bool ;Components _ad .Component ;Method Method ;};func (_cfeg Settings )Validate ()error {const _bea ="\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0073\u002e\u0056\u0061\u006ci\u0064\u0061\u0074\u0065";if _cfeg .Thresh < 0.4||_cfeg .Thresh > 0.98{return _ec .Error (_bea ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074\u0068\u0072\u0065\u0073\u0068\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0034\u0020\u002d\u0020\u0030\u002e\u0039\u0038\u005d");};if _cfeg .WeightFactor < 0.0||_cfeg .WeightFactor > 1.0{return _ec .Error (_bea ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006ec\u006f\u0064\u0065\u0072\u0020w\u0065\u0069\u0067\u0068\u0074\u0020\u0066\u0061\u0063\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0030\u0020\u002d\u0020\u0031\u002e\u0030\u005d");};if _cfeg .RankHaus < 0.5||_cfeg .RankHaus > 1.0{return _ec .Error (_bea ,"\u006a\u0062\u0069\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0072a\u006e\u006b\u0020\u0068\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065 \u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065 [\u0030\u002e\u0035\u0020\u002d\u0020\u0031\u002e\u0030\u005d");};if _cfeg .SizeHaus < 1||_cfeg .SizeHaus > 10{return _ec .Error (_bea ,"\u006a\u0062\u0069\u0067\u0032 \u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0073\u0069\u007a\u0065\u0020h\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0031\u0020\u002d\u0020\u0031\u0030]");};switch _cfeg .Components {case _ad .ComponentConn ,_ad .ComponentCharacters ,_ad .ComponentWords :default:return _ec .Error (_bea ,"\u0069n\u0076\u0061\u006c\u0069d\u0020\u0063\u006c\u0061\u0073s\u0065r\u0020c\u006f\u006d\u0070\u006f\u006e\u0065\u006et");};return nil ;};const (MaxDiffWidth =2;MaxDiffHeight =2;);var TwoByTwoWalk =[]int {0,0,0,1,-1,0,0,-1,1,0,-1,1,1,1,-1,-1,1,-1,0,-2,2,0,0,2,-2,0,-1,-2,1,-2,2,-1,2,1,1,2,-1,2,-2,1,-2,-1,-2,-2,2,-2,2,2,-2,2};func _afg (_ece *Classer ,_cag *_ad .Bitmap )*similarTemplatesFinder {return &similarTemplatesFinder {Width :_cag .Width ,Height :_cag .Height ,Classer :_ece };};func (_ee *Classer )addPageComponents (_cc *_ad .Bitmap ,_bdd *_ad .Boxes ,_abc *_ad .Bitmaps ,_df int ,_ef Method )error {const _fbe ="\u0043l\u0061\u0073\u0073\u0065r\u002e\u0041\u0064\u0064\u0050a\u0067e\u0043o\u006d\u0070\u006f\u006e\u0065\u006e\u0074s";if _cc ==nil {return _ec .Error (_fbe ,"\u006e\u0069\u006c\u0020\u0069\u006e\u0070\u0075\u0074 \u0070\u0061\u0067\u0065");};if _bdd ==nil ||_abc ==nil ||len (*_bdd )==0{_ca .Log .Trace ("\u0041\u0064\u0064P\u0061\u0067\u0065\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0073\u002e\u0020\u004e\u006f\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065n\u0074\u0073\u0020\u0066\u006f\u0075\u006e\u0064",_cc );return nil ;};var _bf error ;switch _ef {case RankHaus :_bf =_ee .classifyRankHaus (_bdd ,_abc ,_df );case Correlation :_bf =_ee .classifyCorrelation (_bdd ,_abc ,_df );default:_ca .Log .Debug ("\u0055\u006ek\u006e\u006f\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064\u003a\u0020'%\u0076\u0027",_ef );return _ec .Error (_fbe ,"\u0075\u006e\u006bno\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064");};if _bf !=nil {return _ec .Wrap (_bf ,_fbe ,"");};if _bf =_ee .getULCorners (_cc ,_bdd );_bf !=nil {return _ec .Wrap (_bf ,_fbe ,"");};_aef :=len (*_bdd );_ee .BaseIndex +=_aef ;if _bf =_ee .ComponentsNumber .Add (_aef );_bf !=nil {return _ec .Wrap (_bf ,_fbe ,"");};return nil ;};func (_egg *Classer )classifyRankHouseOne (_aab *_ad .Boxes ,_ecc ,_bab ,_cfe *_ad .Bitmaps ,_eaa *_ad .Points ,_aca int )(_eggf error ){const _gccd ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";var (_bcfg ,_ddb ,_ebeg ,_fgd float32 ;_fbg int ;_ceba ,_dba ,_dfb ,_eabg ,_fffe *_ad .Bitmap ;_dea ,_fdd bool ;);for _cdf :=0;_cdf < len (_ecc .Values );_cdf ++{_dba =_bab .Values [_cdf ];_dfb =_cfe .Values [_cdf ];_bcfg ,_ddb ,_eggf =_eaa .GetGeometry (_cdf );if _eggf !=nil {return _ec .Wrapf (_eggf ,_gccd ,"\u0066\u0069\u0072\u0073\u0074\u0020\u0067\u0065\u006fm\u0065\u0074\u0072\u0079");};_efg :=len (_egg .UndilatedTemplates .Values );_dea =false ;_egb :=_afg (_egg ,_dba );for _fbg =_egb .Next ();_fbg > -1;{_eabg ,_eggf =_egg .UndilatedTemplates .GetBitmap (_fbg );if _eggf !=nil {return _ec .Wrap (_eggf ,_gccd ,"\u0062\u006d\u0033");};_fffe ,_eggf =_egg .DilatedTemplates .GetBitmap (_fbg );if _eggf !=nil {return _ec .Wrap (_eggf ,_gccd ,"\u0062\u006d\u0034");};_ebeg ,_fgd ,_eggf =_egg .CentroidPointsTemplates .GetGeometry (_fbg );if _eggf !=nil {return _ec .Wrap (_eggf ,_gccd ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0073");};_fdd ,_eggf =_ad .HausTest (_dba ,_dfb ,_eabg ,_fffe ,_bcfg -_ebeg ,_ddb -_fgd ,MaxDiffWidth ,MaxDiffHeight );if _eggf !=nil {return _ec .Wrap (_eggf ,_gccd ,"");};if _fdd {_dea =true ;if _eggf =_egg .ClassIDs .Add (_fbg );_eggf !=nil {return _ec .Wrap (_eggf ,_gccd ,"");};if _eggf =_egg .ComponentPageNumbers .Add (_aca );_eggf !=nil {return _ec .Wrap (_eggf ,_gccd ,"");};if _egg .Settings .KeepClassInstances {_dgc ,_gbeb :=_egg .ClassInstances .GetBitmaps (_fbg );if _gbeb !=nil {return _ec .Wrap (_gbeb ,_gccd ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_ceba ,_gbeb =_ecc .GetBitmap (_cdf );if _gbeb !=nil {return _ec .Wrap (_gbeb ,_gccd ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_dgc .AddBitmap (_ceba );_bfb ,_gbeb :=_aab .Get (_cdf );if _gbeb !=nil {return _ec .Wrap (_gbeb ,_gccd ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_dgc .AddBox (_bfb );};break ;};};if !_dea {if _eggf =_egg .ClassIDs .Add (_efg );_eggf !=nil {return _ec .Wrap (_eggf ,_gccd ,"");};if _eggf =_egg .ComponentPageNumbers .Add (_aca );_eggf !=nil {return _ec .Wrap (_eggf ,_gccd ,"");};_abe :=&_ad .Bitmaps {};_ceba ,_eggf =_ecc .GetBitmap (_cdf );if _eggf !=nil {return _ec .Wrap (_eggf ,_gccd ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_abe .Values =append (_abe .Values ,_ceba );_fcbb ,_edfe :=_ceba .Width ,_ceba .Height ;_egg .TemplatesSize .Add (uint64 (_edfe )*uint64 (_fcbb ),_efg );_dac ,_def :=_aab .Get (_cdf );if _def !=nil {return _ec .Wrap (_def ,_gccd ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_abe .AddBox (_dac );_egg .ClassInstances .AddBitmaps (_abe );_egg .CentroidPointsTemplates .AddPoint (_bcfg ,_ddb );_egg .UndilatedTemplates .AddBitmap (_dba );_egg .DilatedTemplates .AddBitmap (_dfb );};};return nil ;};func (_dbg *similarTemplatesFinder )Next ()int {var (_ccac ,_bbda ,_cebg ,_bdga int ;_defd bool ;_cdb *_ad .Bitmap ;_ecdc error ;);for {if _dbg .Index >=25{return -1;};_bbda =_dbg .Width +TwoByTwoWalk [2*_dbg .Index ];_ccac =_dbg .Height +TwoByTwoWalk [2*_dbg .Index +1];if _ccac < 1||_bbda < 1{_dbg .Index ++;continue ;};if len (_dbg .CurrentNumbers )==0{_dbg .CurrentNumbers ,_defd =_dbg .Classer .TemplatesSize .GetSlice (uint64 (_bbda )*uint64 (_ccac ));if !_defd {_dbg .Index ++;continue ;};_dbg .N =0;};_cebg =len (_dbg .CurrentNumbers );for ;_dbg .N < _cebg ;_dbg .N ++{_bdga =_dbg .CurrentNumbers [_dbg .N ];_cdb ,_ecdc =_dbg .Classer .DilatedTemplates .GetBitmap (_bdga );if _ecdc !=nil {_ca .Log .Debug ("\u0046\u0069\u006e\u0064\u004e\u0065\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0074\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u006e\u006f\u0074 \u0066\u006fu\u006e\u0064\u003a\u0020");return 0;};if _cdb .Width -2*JbAddedPixels ==_bbda &&_cdb .Height -2*JbAddedPixels ==_ccac {return _bdga ;};};_dbg .Index ++;_dbg .CurrentNumbers =nil ;};};func Init (settings Settings )(*Classer ,error ){const _f ="\u0063\u006c\u0061s\u0073\u0065\u0072\u002e\u0049\u006e\u0069\u0074";_ab :=&Classer {Settings :settings ,Widths :map[int ]int {},Heights :map[int ]int {},TemplatesSize :_a .IntsMap {},TemplateAreas :&_a .IntSlice {},ComponentPageNumbers :&_a .IntSlice {},ClassIDs :&_a .IntSlice {},ComponentsNumber :&_a .IntSlice {},CentroidPoints :&_ad .Points {},CentroidPointsTemplates :&_ad .Points {},UndilatedTemplates :&_ad .Bitmaps {},DilatedTemplates :&_ad .Bitmaps {},ClassInstances :&_ad .BitmapsArray {},FgTemplates :&_a .NumSlice {}};if _g :=_ab .Settings .Validate ();_g !=nil {return nil ,_ec .Wrap (_g ,_f ,"");};return _ab ,nil ;};func (_bca *Classer )classifyRankHaus (_cca *_ad .Boxes ,_gcg *_ad .Bitmaps ,_gda int )error {const _cbf ="\u0063\u006ca\u0073\u0073\u0069f\u0079\u0052\u0061\u006e\u006b\u0048\u0061\u0075\u0073";if _cca ==nil {return _ec .Error (_cbf ,"\u0062\u006fx\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if _gcg ==nil {return _ec .Error (_cbf ,"\u0070\u0069x\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};_fdgg :=len (_gcg .Values );if _fdgg ==0{return _ec .Error (_cbf ,"e\u006dp\u0074\u0079\u0020\u006e\u0065\u0077\u0020\u0063o\u006d\u0070\u006f\u006een\u0074\u0073");};_badc :=_gcg .CountPixels ();_ecd :=_bca .Settings .SizeHaus ;_bfc :=_ad .SelCreateBrick (_ecd ,_ecd ,_ecd /2,_ecd /2,_ad .SelHit );_fgeb :=&_ad .Bitmaps {Values :make ([]*_ad .Bitmap ,_fdgg )};_fff :=&_ad .Bitmaps {Values :make ([]*_ad .Bitmap ,_fdgg )};var (_gfc ,_gcc ,_gbbe *_ad .Bitmap ;_fbb error ;);for _db :=0;_db < _fdgg ;_db ++{_gfc ,_fbb =_gcg .GetBitmap (_db );if _fbb !=nil {return _ec .Wrap (_fbb ,_cbf ,"");};_gcc ,_fbb =_gfc .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);if _fbb !=nil {return _ec .Wrap (_fbb ,_cbf ,"");};_gbbe ,_fbb =_ad .Dilate (nil ,_gcc ,_bfc );if _fbb !=nil {return _ec .Wrap (_fbb ,_cbf ,"");};_fgeb .Values [_fdgg ]=_gcc ;_fff .Values [_fdgg ]=_gbbe ;};_edfd ,_fbb :=_ad .Centroids (_fgeb .Values );if _fbb !=nil {return _ec .Wrap (_fbb ,_cbf ,"");};if _fbb =_edfd .Add (_bca .CentroidPoints );_fbb !=nil {_ca .Log .Trace ("\u004e\u006f\u0020\u0063en\u0074\u0072\u006f\u0069\u0064\u0073\u0020\u0074\u006f\u0020\u0061\u0064\u0064");};if _bca .Settings .RankHaus ==1.0{_fbb =_bca .classifyRankHouseOne (_cca ,_gcg ,_fgeb ,_fff ,_edfd ,_gda );}else {_fbb =_bca .classifyRankHouseNonOne (_cca ,_gcg ,_fgeb ,_fff ,_edfd ,_badc ,_gda );};if _fbb !=nil {return _ec .Wrap (_fbb ,_cbf ,"");};return nil ;};const JbAddedPixels =6;func _eef (_fcb *_ad .Bitmap ,_dfe ,_bgd ,_dfec ,_dcd int ,_bcf *_ad .Bitmap )(_dg _c .Point ,_bddd error ){const _gaf ="\u0066i\u006e\u0061\u006c\u0041l\u0069\u0067\u006e\u006d\u0065n\u0074P\u006fs\u0069\u0074\u0069\u006f\u006e\u0069\u006eg";if _fcb ==nil {return _dg ,_ec .Error (_gaf ,"\u0073\u006f\u0075\u0072ce\u0020\u006e\u006f\u0074\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064");};if _bcf ==nil {return _dg ,_ec .Error (_gaf ,"t\u0065\u006d\u0070\u006cat\u0065 \u006e\u006f\u0074\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064");};_bad ,_add :=_bcf .Width ,_bcf .Height ;_ege ,_ada :=_dfe -_dfec -JbAddedPixels ,_bgd -_dcd -JbAddedPixels ;_ca .Log .Trace ("\u0078\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0079\u003a\u0020\u0027\u0025\u0064'\u002c\u0020\u0077\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0068\u003a \u0027\u0025\u0064\u0027\u002c\u0020\u0062\u0078\u003a\u0020\u0027\u0025d'\u002c\u0020\u0062\u0079\u003a\u0020\u0027\u0025\u0064\u0027",_dfe ,_bgd ,_bad ,_add ,_ege ,_ada );_acg ,_bddd :=_ad .Rect (_ege ,_ada ,_bad ,_add );if _bddd !=nil {return _dg ,_ec .Wrap (_bddd ,_gaf ,"");};_gbg ,_ ,_bddd :=_fcb .ClipRectangle (_acg );if _bddd !=nil {_ca .Log .Error ("\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069\u0070\u0020\u0072\u0065c\u0074\u0061\u006e\u0067\u006c\u0065\u003a\u0020\u0025\u0076",_acg );return _dg ,_ec .Wrap (_bddd ,_gaf ,"");};_aafb :=_ad .New (_gbg .Width ,_gbg .Height );_gc :=_e .MaxInt32 ;var _cd ,_addb ,_cbb ,_bfd ,_ea int ;for _cd =-1;_cd <=1;_cd ++{for _addb =-1;_addb <=1;_addb ++{if _ ,_bddd =_ad .Copy (_aafb ,_gbg );_bddd !=nil {return _dg ,_ec .Wrap (_bddd ,_gaf ,"");};if _bddd =_aafb .RasterOperation (_addb ,_cd ,_bad ,_add ,_ad .PixSrcXorDst ,_bcf ,0,0);_bddd !=nil {return _dg ,_ec .Wrap (_bddd ,_gaf ,"");};_cbb =_aafb .CountPixels ();if _cbb < _gc {_bfd =_addb ;_ea =_cd ;_gc =_cbb ;};};};_dg .X =_bfd ;_dg .Y =_ea ;return _dg ,nil ;};func (_caaa *Settings )SetDefault (){if _caaa .MaxCompWidth ==0{switch _caaa .Components {case _ad .ComponentConn :_caaa .MaxCompWidth =MaxConnCompWidth ;case _ad .ComponentCharacters :_caaa .MaxCompWidth =MaxCharCompWidth ;case _ad .ComponentWords :_caaa .MaxCompWidth =MaxWordCompWidth ;};};if _caaa .MaxCompHeight ==0{_caaa .MaxCompHeight =MaxCompHeight ;};if _caaa .Thresh ==0.0{_caaa .Thresh =0.9;};if _caaa .WeightFactor ==0.0{_caaa .WeightFactor =0.75;};if _caaa .RankHaus ==0.0{_caaa .RankHaus =0.97;};if _caaa .SizeHaus ==0{_caaa .SizeHaus =2;};};func (_ga *Classer )AddPage (inputPage *_ad .Bitmap ,pageNumber int ,method Method )(_fa error ){const _bb ="\u0043l\u0061s\u0073\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_ga .Widths [pageNumber ]=inputPage .Width ;_ga .Heights [pageNumber ]=inputPage .Height ;if _fa =_ga .verifyMethod (method );_fa !=nil {return _ec .Wrap (_fa ,_bb ,"");};_gac ,_gf ,_fa :=inputPage .GetComponents (_ga .Settings .Components ,_ga .Settings .MaxCompWidth ,_ga .Settings .MaxCompHeight );if _fa !=nil {return _ec .Wrap (_fa ,_bb ,"");};_ca .Log .Debug ("\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_gac );if _fa =_ga .addPageComponents (inputPage ,_gf ,_gac ,pageNumber ,method );_fa !=nil {return _ec .Wrap (_fa ,_bb ,"");};return nil ;};type similarTemplatesFinder struct{Classer *Classer ;Width int ;Height int ;Index int ;CurrentNumbers []int ;N int ;};func DefaultSettings ()Settings {_fbd :=&Settings {};_fbd .SetDefault ();return *_fbd };const (RankHaus Method =iota ;Correlation ;);const (MaxConnCompWidth =350;MaxCharCompWidth =350;MaxWordCompWidth =1000;MaxCompHeight =120;);func (_ccb *Classer )classifyRankHouseNonOne (_fcbbc *_ad .Boxes ,_dge ,_gfa ,_bed *_ad .Bitmaps ,_edfdc *_ad .Points ,_afed *_a .NumSlice ,_bge int )(_acf error ){const _gfb ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";var (_adad ,_ebed ,_fac ,_ecde float32 ;_cde ,_aecg ,_bbg int ;_gff ,_dgfd ,_bdg ,_fad ,_fde *_ad .Bitmap ;_ccba ,_eag bool ;);_ag :=_ad .MakePixelSumTab8 ();for _eac :=0;_eac < len (_dge .Values );_eac ++{if _dgfd ,_acf =_gfa .GetBitmap (_eac );_acf !=nil {return _ec .Wrap (_acf ,_gfb ,"b\u006d\u0073\u0031\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};if _cde ,_acf =_afed .GetInt (_eac );_acf !=nil {_ca .Log .Trace ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0046\u0047T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073 \u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_eac ,_acf );};if _bdg ,_acf =_bed .GetBitmap (_eac );_acf !=nil {return _ec .Wrap (_acf ,_gfb ,"b\u006d\u0073\u0032\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};if _adad ,_ebed ,_acf =_edfdc .GetGeometry (_eac );_acf !=nil {return _ec .Wrapf (_acf ,_gfb ,"\u0070t\u0061[\u0069\u005d\u002e\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079");};_gffe :=len (_ccb .UndilatedTemplates .Values );_ccba =false ;_egbf :=_afg (_ccb ,_dgfd );for _bbg =_egbf .Next ();_bbg > -1;{if _fad ,_acf =_ccb .UndilatedTemplates .GetBitmap (_bbg );_acf !=nil {return _ec .Wrap (_acf ,_gfb ,"\u0070\u0069\u0078\u0061\u0074\u002e\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");};if _aecg ,_acf =_ccb .FgTemplates .GetInt (_bbg );_acf !=nil {_ca .Log .Trace ("\u0047\u0065\u0074\u0074\u0069\u006eg\u0020\u0046\u0047\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u005b\u0025d\u005d\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_bbg ,_acf );};if _fde ,_acf =_ccb .DilatedTemplates .GetBitmap (_bbg );_acf !=nil {return _ec .Wrap (_acf ,_gfb ,"\u0070\u0069\u0078\u0061\u0074\u0064\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");};if _fac ,_ecde ,_acf =_ccb .CentroidPointsTemplates .GetGeometry (_bbg );_acf !=nil {return _ec .Wrap (_acf ,_gfb ,"\u0043\u0065\u006et\u0072\u006f\u0069\u0064P\u006f\u0069\u006e\u0074\u0073\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u005b\u0069\u0043\u006c\u0061\u0073\u0073\u005d");};_eag ,_acf =_ad .RankHausTest (_dgfd ,_bdg ,_fad ,_fde ,_adad -_fac ,_ebed -_ecde ,MaxDiffWidth ,MaxDiffHeight ,_cde ,_aecg ,float32 (_ccb .Settings .RankHaus ),_ag );if _acf !=nil {return _ec .Wrap (_acf ,_gfb ,"");};if _eag {_ccba =true ;if _acf =_ccb .ClassIDs .Add (_bbg );_acf !=nil {return _ec .Wrap (_acf ,_gfb ,"");};if _acf =_ccb .ComponentPageNumbers .Add (_bge );_acf !=nil {return _ec .Wrap (_acf ,_gfb ,"");};if _ccb .Settings .KeepClassInstances {_ffa ,_fcc :=_ccb .ClassInstances .GetBitmaps (_bbg );if _fcc !=nil {return _ec .Wrap (_fcc ,_gfb ,"\u0063\u002e\u0050\u0069\u0078\u0061\u0061\u002e\u0047\u0065\u0074B\u0069\u0074\u006d\u0061\u0070\u0073\u0028\u0069\u0043\u006ca\u0073\u0073\u0029");};if _gff ,_fcc =_dge .GetBitmap (_eac );_fcc !=nil {return _ec .Wrap (_fcc ,_gfb ,"\u0070i\u0078\u0061\u005b\u0069\u005d");};_ffa .Values =append (_ffa .Values ,_gff );_bedb ,_fcc :=_fcbbc .Get (_eac );if _fcc !=nil {return _ec .Wrap (_fcc ,_gfb ,"b\u006f\u0078\u0061\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};_ffa .Boxes =append (_ffa .Boxes ,_bedb );};break ;};};if !_ccba {if _acf =_ccb .ClassIDs .Add (_gffe );_acf !=nil {return _ec .Wrap (_acf ,_gfb ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _acf =_ccb .ComponentPageNumbers .Add (_bge );_acf !=nil {return _ec .Wrap (_acf ,_gfb ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_fdgf :=&_ad .Bitmaps {};_gff =_dge .Values [_eac ];_fdgf .AddBitmap (_gff );_cfb ,_cbc :=_gff .Width ,_gff .Height ;_ccb .TemplatesSize .Add (uint64 (_cfb )*uint64 (_cbc ),_gffe );_dde ,_fcf :=_fcbbc .Get (_eac );if _fcf !=nil {return _ec .Wrap (_fcf ,_gfb ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_fdgf .AddBox (_dde );_ccb .ClassInstances .AddBitmaps (_fdgf );_ccb .CentroidPointsTemplates .AddPoint (_adad ,_ebed );_ccb .UndilatedTemplates .AddBitmap (_dgfd );_ccb .DilatedTemplates .AddBitmap (_bdg );_ccb .FgTemplates .AddInt (_cde );};};_ccb .NumberOfClasses =len (_ccb .UndilatedTemplates .Values );return nil ;};func (_bfg *Classer )verifyMethod (_fc Method )error {if _fc !=RankHaus &&_fc !=Correlation {return _ec .Error ("\u0076\u0065\u0072i\u0066\u0079\u004d\u0065\u0074\u0068\u006f\u0064","\u0069\u006e\u0076\u0061li\u0064\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072\u0020\u006d\u0065\u0074\u0068o\u0064");};return nil ;};var _ccc bool ;func (_aaf *Classer )getULCorners (_fe *_ad .Bitmap ,_gfe *_ad .Boxes )error {const _cf ="\u0067\u0065\u0074U\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";if _fe ==nil {return _ec .Error (_cf ,"\u006e\u0069l\u0020\u0069\u006da\u0067\u0065\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if _gfe ==nil {return _ec .Error (_cf ,"\u006e\u0069\u006c\u0020\u0062\u006f\u0075\u006e\u0064\u0073");};if _aaf .PtaUL ==nil {_aaf .PtaUL =&_ad .Points {};};_eg :=len (*_gfe );var (_caa ,_gbb ,_afe ,_cb int ;_eca ,_bc ,_afdc ,_ed float32 ;_bg error ;_fg *_c .Rectangle ;_dc *_ad .Bitmap ;_fd _c .Point ;);for _ac :=0;_ac < _eg ;_ac ++{_caa =_aaf .BaseIndex +_ac ;if _eca ,_bc ,_bg =_aaf .CentroidPoints .GetGeometry (_caa );_bg !=nil {return _ec .Wrap (_bg ,_cf ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050o\u0069\u006e\u0074\u0073");};if _gbb ,_bg =_aaf .ClassIDs .Get (_caa );_bg !=nil {return _ec .Wrap (_bg ,_cf ,"\u0043\u006c\u0061s\u0073\u0049\u0044\u0073\u002e\u0047\u0065\u0074");};if _afdc ,_ed ,_bg =_aaf .CentroidPointsTemplates .GetGeometry (_gbb );_bg !=nil {return _ec .Wrap (_bg ,_cf ,"\u0043\u0065\u006etr\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074\u0073\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");};_bdc :=_afdc -_eca ;_da :=_ed -_bc ;if _bdc >=0{_afe =int (_bdc +0.5);}else {_afe =int (_bdc -0.5);};if _da >=0{_cb =int (_da +0.5);}else {_cb =int (_da -0.5);};if _fg ,_bg =_gfe .Get (_ac );_bg !=nil {return _ec .Wrap (_bg ,_cf ,"");};_fbea ,_ede :=_fg .Min .X ,_fg .Min .Y ;_dc ,_bg =_aaf .UndilatedTemplates .GetBitmap (_gbb );if _bg !=nil {return _ec .Wrap (_bg ,_cf ,"\u0055\u006e\u0064\u0069\u006c\u0061\u0074\u0065\u0064\u0054e\u006d\u0070\u006c\u0061\u0074\u0065\u0073.\u0047\u0065\u0074\u0028\u0069\u0043\u006c\u0061\u0073\u0073\u0029");};_fd ,_bg =_eef (_fe ,_fbea ,_ede ,_afe ,_cb ,_dc );if _bg !=nil {return _ec .Wrap (_bg ,_cf ,"");};_aaf .PtaUL .AddPoint (float32 (_fbea -_afe +_fd .X ),float32 (_ede -_cb +_fd .Y ));};return nil ;};