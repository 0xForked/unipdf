//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package classer ;import (_b "github.com/unidoc/unipdf/v3/common";_g "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_e "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";_fd "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_c "image";_a "math";);
func _fgf (_bcbf *_e .Bitmap ,_gaf ,_efc ,_fbd ,_bcbg int ,_fed *_e .Bitmap )(_cf _c .Point ,_gc error ){const _beb ="\u0066i\u006e\u0061\u006c\u0041l\u0069\u0067\u006e\u006d\u0065n\u0074P\u006fs\u0069\u0074\u0069\u006f\u006e\u0069\u006eg";if _bcbf ==nil {return _cf ,_fd .Error (_beb ,"\u0073\u006f\u0075\u0072ce\u0020\u006e\u006f\u0074\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064");
};if _fed ==nil {return _cf ,_fd .Error (_beb ,"t\u0065\u006d\u0070\u006cat\u0065 \u006e\u006f\u0074\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064");};_ace ,_ddg :=_fed .Width ,_fed .Height ;_gd ,_geb :=_gaf -_fbd -JbAddedPixels ,_efc -_bcbg -JbAddedPixels ;
_b .Log .Trace ("\u0078\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0079\u003a\u0020\u0027\u0025\u0064'\u002c\u0020\u0077\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0068\u003a \u0027\u0025\u0064\u0027\u002c\u0020\u0062\u0078\u003a\u0020\u0027\u0025d'\u002c\u0020\u0062\u0079\u003a\u0020\u0027\u0025\u0064\u0027",_gaf ,_efc ,_ace ,_ddg ,_gd ,_geb );
_cee ,_gc :=_e .Rect (_gd ,_geb ,_ace ,_ddg );if _gc !=nil {return _cf ,_fd .Wrap (_gc ,_beb ,"");};_daa ,_ ,_gc :=_bcbf .ClipRectangle (_cee );if _gc !=nil {_b .Log .Error ("\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069\u0070\u0020\u0072\u0065c\u0074\u0061\u006e\u0067\u006c\u0065\u003a\u0020\u0025\u0076",_cee );
return _cf ,_fd .Wrap (_gc ,_beb ,"");};_cd :=_e .New (_daa .Width ,_daa .Height );_fbda :=_a .MaxInt32 ;var _cea ,_bdgg ,_cde ,_fc ,_cfa int ;for _cea =-1;_cea <=1;_cea ++{for _bdgg =-1;_bdgg <=1;_bdgg ++{if _ ,_gc =_e .Copy (_cd ,_daa );_gc !=nil {return _cf ,_fd .Wrap (_gc ,_beb ,"");
};if _gc =_cd .RasterOperation (_bdgg ,_cea ,_ace ,_ddg ,_e .PixSrcXorDst ,_fed ,0,0);_gc !=nil {return _cf ,_fd .Wrap (_gc ,_beb ,"");};_cde =_cd .CountPixels ();if _cde < _fbda {_fc =_bdgg ;_cfa =_cea ;_fbda =_cde ;};};};_cf .X =_fc ;_cf .Y =_cfa ;return _cf ,nil ;
};func (_gac *Classer )classifyCorrelation (_dg *_e .Boxes ,_ag *_e .Bitmaps ,_gcd int )error {const _bag ="\u0063\u006c\u0061\u0073si\u0066\u0079\u0043\u006f\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e";if _dg ==nil {return _fd .Error (_bag ,"\u006e\u0065\u0077\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0062\u006f\u0075\u006e\u0064\u0069\u006e\u0067\u0020\u0062o\u0078\u0065\u0073\u0020\u006eo\u0074\u0020f\u006f\u0075\u006e\u0064");
};if _ag ==nil {return _fd .Error (_bag ,"\u006e\u0065wC\u006f\u006d\u0070o\u006e\u0065\u006e\u0074s b\u0069tm\u0061\u0070\u0020\u0061\u0072\u0072\u0061y \u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064");};_bcg :=len (_ag .Values );if _bcg ==0{_b .Log .Debug ("\u0063l\u0061\u0073s\u0069\u0066\u0079C\u006f\u0072\u0072\u0065\u006c\u0061\u0074i\u006f\u006e\u0020\u002d\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0070\u0069\u0078\u0061s\u0020\u0069\u0073\u0020\u0065\u006d\u0070\u0074\u0079");
return nil ;};var (_ege ,_fcb *_e .Bitmap ;_bbb error ;);_bed :=&_e .Bitmaps {Values :make ([]*_e .Bitmap ,_bcg )};for _cfe ,_dfb :=range _ag .Values {_fcb ,_bbb =_dfb .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);if _bbb !=nil {return _fd .Wrap (_bbb ,_bag ,"");
};_bed .Values [_cfe ]=_fcb ;};_bdd :=_gac .FgTemplates ;_eff :=_e .MakePixelSumTab8 ();_ced :=_e .MakePixelCentroidTab8 ();_bbc :=make ([]int ,_bcg );_aaad :=make ([][]int ,_bcg );_aag :=_e .Points (make ([]_e .Point ,_bcg ));_egb :=&_aag ;var (_cb ,_baa int ;
_bee ,_ceb ,_gcb int ;_dff ,_aaf int ;_badd byte ;);for _fgd ,_fdb :=range _bed .Values {_aaad [_fgd ]=make ([]int ,_fdb .Height );_cb =0;_baa =0;_ceb =(_fdb .Height -1)*_fdb .RowStride ;_bee =0;for _aaf =_fdb .Height -1;_aaf >=0;_aaf ,_ceb =_aaf -1,_ceb -_fdb .RowStride {_aaad [_fgd ][_aaf ]=_bee ;
_gcb =0;for _dff =0;_dff < _fdb .RowStride ;_dff ++{_badd =_fdb .Data [_ceb +_dff ];_gcb +=_eff [_badd ];_cb +=_ced [_badd ]+_dff *8*_eff [_badd ];};_bee +=_gcb ;_baa +=_gcb *_aaf ;};_bbc [_fgd ]=_bee ;if _bee > 0{(*_egb )[_fgd ]=_e .Point {X :float32 (_cb )/float32 (_bee ),Y :float32 (_baa )/float32 (_bee )};
}else {(*_egb )[_fgd ]=_e .Point {X :float32 (_fdb .Width )/float32 (2),Y :float32 (_fdb .Height )/float32 (2)};};};if _bbb =_gac .CentroidPoints .Add (_egb );_bbb !=nil {return _fd .Wrap (_bbb ,_bag ,"\u0063\u0065\u006et\u0072\u006f\u0069\u0064\u0020\u0061\u0064\u0064");
};var (_aec ,_fbdd ,_beee int ;_ggf float64 ;_fcc ,_ff ,_bf ,_ggb float32 ;_aaag ,_bggd _e .Point ;_ggg bool ;_gace *similarTemplatesFinder ;_ccg int ;_dda *_e .Bitmap ;_bab *_c .Rectangle ;_effc *_e .Bitmaps ;);for _ccg ,_fcb =range _bed .Values {_fbdd =_bbc [_ccg ];
if _fcc ,_ff ,_bbb =_egb .GetGeometry (_ccg );_bbb !=nil {return _fd .Wrap (_bbb ,_bag ,"\u0070t\u0061\u0020\u002d\u0020\u0069");};_ggg =false ;_eed :=len (_gac .UndilatedTemplates .Values );_gace =_ade (_gac ,_fcb );for _daf :=_gace .Next ();_daf > -1;
{if _dda ,_bbb =_gac .UndilatedTemplates .GetBitmap (_daf );_bbb !=nil {return _fd .Wrap (_bbb ,_bag ,"\u0075\u006e\u0069dl\u0061\u0074\u0065\u0064\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0062\u006d\u0032");};if _beee ,_bbb =_bdd .GetInt (_daf );
_bbb !=nil {_b .Log .Trace ("\u0046\u0047\u0020T\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u005b\u0069\u0063\u006ca\u0073\u0073\u005d\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_bbb );};if _bf ,_ggb ,_bbb =_gac .CentroidPointsTemplates .GetGeometry (_daf );
_bbb !=nil {return _fd .Wrap (_bbb ,_bag ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074T\u0065\u006d\u0070\u006c\u0061\u0074e\u0073\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u00782\u002c\u0079\u0032\u0020");
};if _gac .Settings .WeightFactor > 0.0{if _aec ,_bbb =_gac .TemplateAreas .Get (_daf );_bbb !=nil {_b .Log .Trace ("\u0054\u0065\u006dp\u006c\u0061\u0074\u0065A\u0072\u0065\u0061\u0073\u005b\u0069\u0063l\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0061\u0072\u0065\u0061\u0020\u0025\u0076",_bbb );
};_ggf =_gac .Settings .Thresh +(1.0-_gac .Settings .Thresh )*_gac .Settings .WeightFactor *float64 (_beee )/float64 (_aec );}else {_ggf =_gac .Settings .Thresh ;};_gaee ,_ab :=_e .CorrelationScoreThresholded (_fcb ,_dda ,_fbdd ,_beee ,_aaag .X -_bggd .X ,_aaag .Y -_bggd .Y ,MaxDiffWidth ,MaxDiffHeight ,_eff ,_aaad [_ccg ],float32 (_ggf ));
if _ab !=nil {return _fd .Wrap (_ab ,_bag ,"");};if _fce {var (_agb ,_efe float64 ;_ecb ,_cedf int ;);_agb ,_ab =_e .CorrelationScore (_fcb ,_dda ,_fbdd ,_beee ,_fcc -_bf ,_ff -_ggb ,MaxDiffWidth ,MaxDiffHeight ,_eff );if _ab !=nil {return _fd .Wrap (_ab ,_bag ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");
};_efe ,_ab =_e .CorrelationScoreSimple (_fcb ,_dda ,_fbdd ,_beee ,_fcc -_bf ,_ff -_ggb ,MaxDiffWidth ,MaxDiffHeight ,_eff );if _ab !=nil {return _fd .Wrap (_ab ,_bag ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");
};_ecb =int (_a .Sqrt (_agb *float64 (_fbdd )*float64 (_beee )));_cedf =int (_a .Sqrt (_efe *float64 (_fbdd )*float64 (_beee )));if (_agb >=_ggf )!=(_efe >=_ggf ){return _fd .Errorf (_bag ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043\u006f\u0072r\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0063\u006f\u0072\u0065\u0020\u006d\u0069\u0073\u006d\u0061\u0074\u0063\u0068\u0020-\u0020\u0025d\u0028\u00250\u002e\u0034\u0066\u002c\u0020\u0025\u0076\u0029\u0020\u0076\u0073\u0020\u0025d(\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0076)\u0020\u0025\u0030\u002e\u0034\u0066",_ecb ,_agb ,_agb >=_ggf ,_cedf ,_efe ,_efe >=_ggf ,_agb -_efe );
};if _agb >=_ggf !=_gaee {return _fd .Errorf (_bag ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043o\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e \u0073\u0063\u006f\u0072\u0065 \u004d\u0069\u0073\u006d\u0061t\u0063\u0068 \u0062\u0065\u0074w\u0065\u0065\u006e\u0020\u0063\u006frr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020/\u0020\u0074\u0068\u0072\u0065s\u0068\u006f\u006c\u0064\u002e\u0020\u0043\u006f\u006dpa\u0072\u0069\u0073\u006f\u006e:\u0020\u0025\u0030\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0064\u0029\u0020\u003e\u003d\u0020\u00250\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u0029\u0020\u0076\u0073\u0020\u0025\u0076",_agb ,_agb *float64 (_fbdd )*float64 (_beee ),_ecb ,_ggf ,float32 (_ggf )*float32 (_fbdd )*float32 (_beee ),_gaee );
};};if _gaee {_ggg =true ;if _ab =_gac .ClassIDs .Add (_daf );_ab !=nil {return _fd .Wrap (_ab ,_bag ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");};if _ab =_gac .ComponentPageNumbers .Add (_gcd );_ab !=nil {return _fd .Wrap (_ab ,_bag ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");
};if _gac .Settings .KeepClassInstances {if _ege ,_ab =_ag .GetBitmap (_ccg );_ab !=nil {return _fd .Wrap (_ab ,_bag ,"\u004b\u0065\u0065\u0070Cl\u0061\u0073\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u002d \u0069");};if _effc ,_ab =_gac .ClassInstances .GetBitmaps (_daf );
_ab !=nil {return _fd .Wrap (_ab ,_bag ,"K\u0065\u0065\u0070\u0043\u006c\u0061s\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065s\u0020\u002d\u0020i\u0043l\u0061\u0073\u0073");};_effc .AddBitmap (_ege );if _bab ,_ab =_dg .Get (_ccg );_ab !=nil {return _fd .Wrap (_ab ,_bag ,"\u004be\u0065p\u0043\u006c\u0061\u0073\u0073I\u006e\u0073t\u0061\u006e\u0063\u0065\u0073");
};_effc .AddBox (_bab );};break ;};};if !_ggg {if _bbb =_gac .ClassIDs .Add (_eed );_bbb !=nil {return _fd .Wrap (_bbb ,_bag ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _bbb =_gac .ComponentPageNumbers .Add (_gcd );_bbb !=nil {return _fd .Wrap (_bbb ,_bag ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_effc =&_e .Bitmaps {};if _ege ,_bbb =_ag .GetBitmap (_ccg );_bbb !=nil {return _fd .Wrap (_bbb ,_bag ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_effc .AddBitmap (_ege );_efd ,_gbd :=_ege .Width ,_ege .Height ;_eaa :=uint64 (_gbd )*uint64 (_efd );_gac .TemplatesSize .Add (_eaa ,_eed );
if _bab ,_bbb =_dg .Get (_ccg );_bbb !=nil {return _fd .Wrap (_bbb ,_bag ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_effc .AddBox (_bab );_gac .ClassInstances .AddBitmaps (_effc );_gac .CentroidPointsTemplates .AddPoint (_fcc ,_ff );_gac .FgTemplates .AddInt (_fbdd );
_gac .UndilatedTemplates .AddBitmap (_ege );_aec =(_fcb .Width -2*JbAddedPixels )*(_fcb .Height -2*JbAddedPixels );if _bbb =_gac .TemplateAreas .Add (_aec );_bbb !=nil {return _fd .Wrap (_bbb ,_bag ,"\u0021\u0066\u006f\u0075\u006e\u0064");};};};_gac .NumberOfClasses =len (_gac .UndilatedTemplates .Values );
return nil ;};func (_fac *Classer )classifyRankHouseOne (_bff *_e .Boxes ,_egc ,_geba ,_aafa *_e .Bitmaps ,_fde *_e .Points ,_egd int )(_gcg error ){const _fdaa ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";
var (_ffg ,_dgf ,_dfc ,_fad float32 ;_ebb int ;_aecd ,_bae ,_cbc ,_gdd ,_cbg *_e .Bitmap ;_dce ,_ebg bool ;);for _dec :=0;_dec < len (_egc .Values );_dec ++{_bae =_geba .Values [_dec ];_cbc =_aafa .Values [_dec ];_ffg ,_dgf ,_gcg =_fde .GetGeometry (_dec );
if _gcg !=nil {return _fd .Wrapf (_gcg ,_fdaa ,"\u0066\u0069\u0072\u0073\u0074\u0020\u0067\u0065\u006fm\u0065\u0074\u0072\u0079");};_dgc :=len (_fac .UndilatedTemplates .Values );_dce =false ;_fgb :=_ade (_fac ,_bae );for _ebb =_fgb .Next ();_ebb > -1;
{_gdd ,_gcg =_fac .UndilatedTemplates .GetBitmap (_ebb );if _gcg !=nil {return _fd .Wrap (_gcg ,_fdaa ,"\u0062\u006d\u0033");};_cbg ,_gcg =_fac .DilatedTemplates .GetBitmap (_ebb );if _gcg !=nil {return _fd .Wrap (_gcg ,_fdaa ,"\u0062\u006d\u0034");};_dfc ,_fad ,_gcg =_fac .CentroidPointsTemplates .GetGeometry (_ebb );
if _gcg !=nil {return _fd .Wrap (_gcg ,_fdaa ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0073");};_ebg ,_gcg =_e .HausTest (_bae ,_cbc ,_gdd ,_cbg ,_ffg -_dfc ,_dgf -_fad ,MaxDiffWidth ,MaxDiffHeight );
if _gcg !=nil {return _fd .Wrap (_gcg ,_fdaa ,"");};if _ebg {_dce =true ;if _gcg =_fac .ClassIDs .Add (_ebb );_gcg !=nil {return _fd .Wrap (_gcg ,_fdaa ,"");};if _gcg =_fac .ComponentPageNumbers .Add (_egd );_gcg !=nil {return _fd .Wrap (_gcg ,_fdaa ,"");
};if _fac .Settings .KeepClassInstances {_fgcd ,_ggd :=_fac .ClassInstances .GetBitmaps (_ebb );if _ggd !=nil {return _fd .Wrap (_ggd ,_fdaa ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_aecd ,_ggd =_egc .GetBitmap (_dec );if _ggd !=nil {return _fd .Wrap (_ggd ,_fdaa ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");
};_fgcd .AddBitmap (_aecd );_ece ,_ggd :=_bff .Get (_dec );if _ggd !=nil {return _fd .Wrap (_ggd ,_fdaa ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_fgcd .AddBox (_ece );};break ;};};if !_dce {if _gcg =_fac .ClassIDs .Add (_dgc );_gcg !=nil {return _fd .Wrap (_gcg ,_fdaa ,"");
};if _gcg =_fac .ComponentPageNumbers .Add (_egd );_gcg !=nil {return _fd .Wrap (_gcg ,_fdaa ,"");};_cef :=&_e .Bitmaps {};_aecd ,_gcg =_egc .GetBitmap (_dec );if _gcg !=nil {return _fd .Wrap (_gcg ,_fdaa ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_cef .Values =append (_cef .Values ,_aecd );
_fedc ,_fcce :=_aecd .Width ,_aecd .Height ;_fac .TemplatesSize .Add (uint64 (_fcce )*uint64 (_fedc ),_dgc );_bfg ,_fec :=_bff .Get (_dec );if _fec !=nil {return _fd .Wrap (_fec ,_fdaa ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_cef .AddBox (_bfg );_fac .ClassInstances .AddBitmaps (_cef );
_fac .CentroidPointsTemplates .AddPoint (_ffg ,_dgf );_fac .UndilatedTemplates .AddBitmap (_bae );_fac .DilatedTemplates .AddBitmap (_cbc );};};return nil ;};const (MaxConnCompWidth =350;MaxCharCompWidth =350;MaxWordCompWidth =1000;MaxCompHeight =120;);
const JbAddedPixels =6;type Settings struct{MaxCompWidth int ;MaxCompHeight int ;SizeHaus int ;RankHaus float64 ;Thresh float64 ;WeightFactor float64 ;KeepClassInstances bool ;Components _e .Component ;Method Method ;};func Init (settings Settings )(*Classer ,error ){const _ga ="\u0063\u006c\u0061s\u0073\u0065\u0072\u002e\u0049\u006e\u0069\u0074";
_bc :=&Classer {Settings :settings ,Widths :map[int ]int {},Heights :map[int ]int {},TemplatesSize :_g .IntsMap {},TemplateAreas :&_g .IntSlice {},ComponentPageNumbers :&_g .IntSlice {},ClassIDs :&_g .IntSlice {},ComponentsNumber :&_g .IntSlice {},CentroidPoints :&_e .Points {},CentroidPointsTemplates :&_e .Points {},UndilatedTemplates :&_e .Bitmaps {},DilatedTemplates :&_e .Bitmaps {},ClassInstances :&_e .BitmapsArray {},FgTemplates :&_g .NumSlice {}};
if _d :=_bc .Settings .Validate ();_d !=nil {return nil ,_fd .Wrap (_d ,_ga ,"");};return _bc ,nil ;};type Method int ;func (_ffb *Classer )classifyRankHouseNonOne (_fbf *_e .Boxes ,_bfe ,_dced ,_ffc *_e .Bitmaps ,_faca *_e .Points ,_gfc *_g .NumSlice ,_bgc int )(_bea error ){const _abfc ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";
var (_eeg ,_cdef ,_afb ,_dffe float32 ;_dbf ,_acc ,_feg int ;_fbfd ,_gfg ,_dfd ,_abd ,_dgfe *_e .Bitmap ;_gea ,_fbb bool ;);_aee :=_e .MakePixelSumTab8 ();for _cfb :=0;_cfb < len (_bfe .Values );_cfb ++{if _gfg ,_bea =_dced .GetBitmap (_cfb );_bea !=nil {return _fd .Wrap (_bea ,_abfc ,"b\u006d\u0073\u0031\u002e\u0047\u0065\u0074\u0028\u0069\u0029");
};if _dbf ,_bea =_gfc .GetInt (_cfb );_bea !=nil {_b .Log .Trace ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0046\u0047T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073 \u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_cfb ,_bea );
};if _dfd ,_bea =_ffc .GetBitmap (_cfb );_bea !=nil {return _fd .Wrap (_bea ,_abfc ,"b\u006d\u0073\u0032\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};if _eeg ,_cdef ,_bea =_faca .GetGeometry (_cfb );_bea !=nil {return _fd .Wrapf (_bea ,_abfc ,"\u0070t\u0061[\u0069\u005d\u002e\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079");
};_cff :=len (_ffb .UndilatedTemplates .Values );_gea =false ;_baag :=_ade (_ffb ,_gfg );for _feg =_baag .Next ();_feg > -1;{if _abd ,_bea =_ffb .UndilatedTemplates .GetBitmap (_feg );_bea !=nil {return _fd .Wrap (_bea ,_abfc ,"\u0070\u0069\u0078\u0061\u0074\u002e\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");
};if _acc ,_bea =_ffb .FgTemplates .GetInt (_feg );_bea !=nil {_b .Log .Trace ("\u0047\u0065\u0074\u0074\u0069\u006eg\u0020\u0046\u0047\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u005b\u0025d\u005d\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_feg ,_bea );
};if _dgfe ,_bea =_ffb .DilatedTemplates .GetBitmap (_feg );_bea !=nil {return _fd .Wrap (_bea ,_abfc ,"\u0070\u0069\u0078\u0061\u0074\u0064\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");};if _afb ,_dffe ,_bea =_ffb .CentroidPointsTemplates .GetGeometry (_feg );
_bea !=nil {return _fd .Wrap (_bea ,_abfc ,"\u0043\u0065\u006et\u0072\u006f\u0069\u0064P\u006f\u0069\u006e\u0074\u0073\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u005b\u0069\u0043\u006c\u0061\u0073\u0073\u005d");};_fbb ,_bea =_e .RankHausTest (_gfg ,_dfd ,_abd ,_dgfe ,_eeg -_afb ,_cdef -_dffe ,MaxDiffWidth ,MaxDiffHeight ,_dbf ,_acc ,float32 (_ffb .Settings .RankHaus ),_aee );
if _bea !=nil {return _fd .Wrap (_bea ,_abfc ,"");};if _fbb {_gea =true ;if _bea =_ffb .ClassIDs .Add (_feg );_bea !=nil {return _fd .Wrap (_bea ,_abfc ,"");};if _bea =_ffb .ComponentPageNumbers .Add (_bgc );_bea !=nil {return _fd .Wrap (_bea ,_abfc ,"");
};if _ffb .Settings .KeepClassInstances {_faa ,_aad :=_ffb .ClassInstances .GetBitmaps (_feg );if _aad !=nil {return _fd .Wrap (_aad ,_abfc ,"\u0063\u002e\u0050\u0069\u0078\u0061\u0061\u002e\u0047\u0065\u0074B\u0069\u0074\u006d\u0061\u0070\u0073\u0028\u0069\u0043\u006ca\u0073\u0073\u0029");
};if _fbfd ,_aad =_bfe .GetBitmap (_cfb );_aad !=nil {return _fd .Wrap (_aad ,_abfc ,"\u0070i\u0078\u0061\u005b\u0069\u005d");};_faa .Values =append (_faa .Values ,_fbfd );_cfbf ,_aad :=_fbf .Get (_cfb );if _aad !=nil {return _fd .Wrap (_aad ,_abfc ,"b\u006f\u0078\u0061\u002e\u0047\u0065\u0074\u0028\u0069\u0029");
};_faa .Boxes =append (_faa .Boxes ,_cfbf );};break ;};};if !_gea {if _bea =_ffb .ClassIDs .Add (_cff );_bea !=nil {return _fd .Wrap (_bea ,_abfc ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _bea =_ffb .ComponentPageNumbers .Add (_bgc );_bea !=nil {return _fd .Wrap (_bea ,_abfc ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_bebb :=&_e .Bitmaps {};_fbfd =_bfe .Values [_cfb ];_bebb .AddBitmap (_fbfd );_adg ,_fcg :=_fbfd .Width ,_fbfd .Height ;_ffb .TemplatesSize .Add (uint64 (_adg )*uint64 (_fcg ),_cff );_bgcg ,_bdf :=_fbf .Get (_cfb );if _bdf !=nil {return _fd .Wrap (_bdf ,_abfc ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_bebb .AddBox (_bgcg );_ffb .ClassInstances .AddBitmaps (_bebb );_ffb .CentroidPointsTemplates .AddPoint (_eeg ,_cdef );_ffb .UndilatedTemplates .AddBitmap (_gfg );_ffb .DilatedTemplates .AddBitmap (_dfd );_ffb .FgTemplates .AddInt (_dbf );};};_ffb .NumberOfClasses =len (_ffb .UndilatedTemplates .Values );
return nil ;};const (MaxDiffWidth =2;MaxDiffHeight =2;);func (_agg *Settings )SetDefault (){if _agg .MaxCompWidth ==0{switch _agg .Components {case _e .ComponentConn :_agg .MaxCompWidth =MaxConnCompWidth ;case _e .ComponentCharacters :_agg .MaxCompWidth =MaxCharCompWidth ;
case _e .ComponentWords :_agg .MaxCompWidth =MaxWordCompWidth ;};};if _agg .MaxCompHeight ==0{_agg .MaxCompHeight =MaxCompHeight ;};if _agg .Thresh ==0.0{_agg .Thresh =0.9;};if _agg .WeightFactor ==0.0{_agg .WeightFactor =0.75;};if _agg .RankHaus ==0.0{_agg .RankHaus =0.97;
};if _agg .SizeHaus ==0{_agg .SizeHaus =2;};};func (_ef *Classer )addPageComponents (_ba *_e .Bitmap ,_bad *_e .Boxes ,_bcb *_e .Bitmaps ,_dcg int ,_ae Method )error {const _fg ="\u0043l\u0061\u0073\u0073\u0065r\u002e\u0041\u0064\u0064\u0050a\u0067e\u0043o\u006d\u0070\u006f\u006e\u0065\u006e\u0074s";
if _ba ==nil {return _fd .Error (_fg ,"\u006e\u0069\u006c\u0020\u0069\u006e\u0070\u0075\u0074 \u0070\u0061\u0067\u0065");};if _bad ==nil ||_bcb ==nil ||len (*_bad )==0{_b .Log .Trace ("\u0041\u0064\u0064P\u0061\u0067\u0065\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0073\u002e\u0020\u004e\u006f\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065n\u0074\u0073\u0020\u0066\u006f\u0075\u006e\u0064",_ba );
return nil ;};var _ce error ;switch _ae {case RankHaus :_ce =_ef .classifyRankHaus (_bad ,_bcb ,_dcg );case Correlation :_ce =_ef .classifyCorrelation (_bad ,_bcb ,_dcg );default:_b .Log .Debug ("\u0055\u006ek\u006e\u006f\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064\u003a\u0020'%\u0076\u0027",_ae );
return _fd .Error (_fg ,"\u0075\u006e\u006bno\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064");};if _ce !=nil {return _fd .Wrap (_ce ,_fg ,"");};if _ce =_ef .getULCorners (_ba ,_bad );_ce !=nil {return _fd .Wrap (_ce ,_fg ,"");
};_ca :=len (*_bad );_ef .BaseIndex +=_ca ;if _ce =_ef .ComponentsNumber .Add (_ca );_ce !=nil {return _fd .Wrap (_ce ,_fg ,"");};return nil ;};func (_ecf *similarTemplatesFinder )Next ()int {var (_baf ,_cfd ,_abfd ,_eacc int ;_acd bool ;_ggge *_e .Bitmap ;
_bga error ;);for {if _ecf .Index >=25{return -1;};_cfd =_ecf .Width +TwoByTwoWalk [2*_ecf .Index ];_baf =_ecf .Height +TwoByTwoWalk [2*_ecf .Index +1];if _baf < 1||_cfd < 1{_ecf .Index ++;continue ;};if len (_ecf .CurrentNumbers )==0{_ecf .CurrentNumbers ,_acd =_ecf .Classer .TemplatesSize .GetSlice (uint64 (_cfd )*uint64 (_baf ));
if !_acd {_ecf .Index ++;continue ;};_ecf .N =0;};_abfd =len (_ecf .CurrentNumbers );for ;_ecf .N < _abfd ;_ecf .N ++{_eacc =_ecf .CurrentNumbers [_ecf .N ];_ggge ,_bga =_ecf .Classer .DilatedTemplates .GetBitmap (_eacc );if _bga !=nil {_b .Log .Debug ("\u0046\u0069\u006e\u0064\u004e\u0065\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0074\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u006e\u006f\u0074 \u0066\u006fu\u006e\u0064\u003a\u0020");
return 0;};if _ggge .Width -2*JbAddedPixels ==_cfd &&_ggge .Height -2*JbAddedPixels ==_baf {return _eacc ;};};_ecf .Index ++;_ecf .CurrentNumbers =nil ;};};func (_fa *Classer )classifyRankHaus (_abf *_e .Boxes ,_fdf *_e .Bitmaps ,_de int )error {const _dgg ="\u0063\u006ca\u0073\u0073\u0069f\u0079\u0052\u0061\u006e\u006b\u0048\u0061\u0075\u0073";
if _abf ==nil {return _fd .Error (_dgg ,"\u0062\u006fx\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if _fdf ==nil {return _fd .Error (_dgg ,"\u0070\u0069x\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};_eac :=len (_fdf .Values );if _eac ==0{return _fd .Error (_dgg ,"e\u006dp\u0074\u0079\u0020\u006e\u0065\u0077\u0020\u0063o\u006d\u0070\u006f\u006een\u0074\u0073");};_eacf :=_fdf .CountPixels ();_fbe :=_fa .Settings .SizeHaus ;_bbg :=_e .SelCreateBrick (_fbe ,_fbe ,_fbe /2,_fbe /2,_e .SelHit );
_fda :=&_e .Bitmaps {Values :make ([]*_e .Bitmap ,_eac )};_fccb :=&_e .Bitmaps {Values :make ([]*_e .Bitmap ,_eac )};var (_ccb ,_bbge ,_gaa *_e .Bitmap ;_bgf error ;);for _gbc :=0;_gbc < _eac ;_gbc ++{_ccb ,_bgf =_fdf .GetBitmap (_gbc );if _bgf !=nil {return _fd .Wrap (_bgf ,_dgg ,"");
};_bbge ,_bgf =_ccb .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);if _bgf !=nil {return _fd .Wrap (_bgf ,_dgg ,"");};_gaa ,_bgf =_e .Dilate (nil ,_bbge ,_bbg );if _bgf !=nil {return _fd .Wrap (_bgf ,_dgg ,"");};_fda .Values [_eac ]=_bbge ;
_fccb .Values [_eac ]=_gaa ;};_dad ,_bgf :=_e .Centroids (_fda .Values );if _bgf !=nil {return _fd .Wrap (_bgf ,_dgg ,"");};if _bgf =_dad .Add (_fa .CentroidPoints );_bgf !=nil {_b .Log .Trace ("\u004e\u006f\u0020\u0063en\u0074\u0072\u006f\u0069\u0064\u0073\u0020\u0074\u006f\u0020\u0061\u0064\u0064");
};if _fa .Settings .RankHaus ==1.0{_bgf =_fa .classifyRankHouseOne (_abf ,_fdf ,_fda ,_fccb ,_dad ,_de );}else {_bgf =_fa .classifyRankHouseNonOne (_abf ,_fdf ,_fda ,_fccb ,_dad ,_eacf ,_de );};if _bgf !=nil {return _fd .Wrap (_bgf ,_dgg ,"");};return nil ;
};var _fce bool ;func (_ge *Classer )verifyMethod (_cgc Method )error {if _cgc !=RankHaus &&_cgc !=Correlation {return _fd .Error ("\u0076\u0065\u0072i\u0066\u0079\u004d\u0065\u0074\u0068\u006f\u0064","\u0069\u006e\u0076\u0061li\u0064\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072\u0020\u006d\u0065\u0074\u0068o\u0064");
};return nil ;};func (_da *Classer )AddPage (inputPage *_e .Bitmap ,pageNumber int ,method Method )(_fb error ){const _fbg ="\u0043l\u0061s\u0073\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_da .Widths [pageNumber ]=inputPage .Width ;_da .Heights [pageNumber ]=inputPage .Height ;
if _fb =_da .verifyMethod (method );_fb !=nil {return _fd .Wrap (_fb ,_fbg ,"");};_cg ,_bcd ,_fb :=inputPage .GetComponents (_da .Settings .Components ,_da .Settings .MaxCompWidth ,_da .Settings .MaxCompHeight );if _fb !=nil {return _fd .Wrap (_fb ,_fbg ,"");
};_b .Log .Debug ("\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_cg );if _fb =_da .addPageComponents (inputPage ,_bcd ,_cg ,pageNumber ,method );_fb !=nil {return _fd .Wrap (_fb ,_fbg ,"");};return nil ;};type Classer struct{BaseIndex int ;
Settings Settings ;ComponentsNumber *_g .IntSlice ;TemplateAreas *_g .IntSlice ;Widths map[int ]int ;Heights map[int ]int ;NumberOfClasses int ;ClassInstances *_e .BitmapsArray ;UndilatedTemplates *_e .Bitmaps ;DilatedTemplates *_e .Bitmaps ;TemplatesSize _g .IntsMap ;
FgTemplates *_g .NumSlice ;CentroidPoints *_e .Points ;CentroidPointsTemplates *_e .Points ;ClassIDs *_g .IntSlice ;ComponentPageNumbers *_g .IntSlice ;PtaUL *_e .Points ;PtaLL *_e .Points ;};type similarTemplatesFinder struct{Classer *Classer ;Width int ;
Height int ;Index int ;CurrentNumbers []int ;N int ;};func (_bd *Classer )ComputeLLCorners ()(_bg error ){const _be ="\u0043l\u0061\u0073\u0073\u0065\u0072\u002e\u0043\u006f\u006d\u0070\u0075t\u0065\u004c\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";
if _bd .PtaUL ==nil {return _fd .Error (_be ,"\u0055\u004c\u0020\u0043or\u006e\u0065\u0072\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006ee\u0064");};_cc :=len (*_bd .PtaUL );_bd .PtaLL =&_e .Points {};var (_dd ,_dc float32 ;_ea ,_dac int ;
_ccd *_e .Bitmap ;);for _db :=0;_db < _cc ;_db ++{_dd ,_dc ,_bg =_bd .PtaUL .GetGeometry (_db );if _bg !=nil {_b .Log .Debug ("\u0047e\u0074\u0074\u0069\u006e\u0067\u0020\u0050\u0074\u0061\u0055\u004c \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_bg );
return _fd .Wrap (_bg ,_be ,"\u0050\u0074\u0061\u0055\u004c\u0020\u0047\u0065\u006fm\u0065\u0074\u0072\u0079");};_ea ,_bg =_bd .ClassIDs .Get (_db );if _bg !=nil {_b .Log .Debug ("\u0047\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0043\u006c\u0061s\u0073\u0049\u0044\u0020\u0066\u0061\u0069\u006c\u0065\u0064:\u0020\u0025\u0076",_bg );
return _fd .Wrap (_bg ,_be ,"\u0043l\u0061\u0073\u0073\u0049\u0044");};_ccd ,_bg =_bd .UndilatedTemplates .GetBitmap (_ea );if _bg !=nil {_b .Log .Debug ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0055\u006ed\u0069\u006c\u0061\u0074\u0065\u0064\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_bg );
return _fd .Wrap (_bg ,_be ,"\u0055\u006e\u0064\u0069la\u0074\u0065\u0064\u0020\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");};_dac =_ccd .Height ;_bd .PtaLL .AddPoint (_dd ,_dc +float32 (_dac ));};return nil ;};func _ade (_add *Classer ,_dfg *_e .Bitmap )*similarTemplatesFinder {return &similarTemplatesFinder {Width :_dfg .Width ,Height :_dfg .Height ,Classer :_add };
};const (RankHaus Method =iota ;Correlation ;);func (_dge Settings )Validate ()error {const _aba ="\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0073\u002e\u0056\u0061\u006ci\u0064\u0061\u0074\u0065";if _dge .Thresh < 0.4||_dge .Thresh > 0.98{return _fd .Error (_aba ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074\u0068\u0072\u0065\u0073\u0068\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0034\u0020\u002d\u0020\u0030\u002e\u0039\u0038\u005d");
};if _dge .WeightFactor < 0.0||_dge .WeightFactor > 1.0{return _fd .Error (_aba ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006ec\u006f\u0064\u0065\u0072\u0020w\u0065\u0069\u0067\u0068\u0074\u0020\u0066\u0061\u0063\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0030\u0020\u002d\u0020\u0031\u002e\u0030\u005d");
};if _dge .RankHaus < 0.5||_dge .RankHaus > 1.0{return _fd .Error (_aba ,"\u006a\u0062\u0069\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0072a\u006e\u006b\u0020\u0068\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065 \u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065 [\u0030\u002e\u0035\u0020\u002d\u0020\u0031\u002e\u0030\u005d");
};if _dge .SizeHaus < 1||_dge .SizeHaus > 10{return _fd .Error (_aba ,"\u006a\u0062\u0069\u0067\u0032 \u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0073\u0069\u007a\u0065\u0020h\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0031\u0020\u002d\u0020\u0031\u0030]");
};switch _dge .Components {case _e .ComponentConn ,_e .ComponentCharacters ,_e .ComponentWords :default:return _fd .Error (_aba ,"\u0069n\u0076\u0061\u006c\u0069d\u0020\u0063\u006c\u0061\u0073s\u0065r\u0020c\u006f\u006d\u0070\u006f\u006e\u0065\u006et");
};return nil ;};func (_eg *Classer )getULCorners (_ee *_e .Bitmap ,_ec *_e .Boxes )error {const _aa ="\u0067\u0065\u0074U\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";if _ee ==nil {return _fd .Error (_aa ,"\u006e\u0069l\u0020\u0069\u006da\u0067\u0065\u0020\u0062\u0069\u0074\u006d\u0061\u0070");
};if _ec ==nil {return _fd .Error (_aa ,"\u006e\u0069\u006c\u0020\u0062\u006f\u0075\u006e\u0064\u0073");};if _eg .PtaUL ==nil {_eg .PtaUL =&_e .Points {};};_fdc :=len (*_ec );var (_bdg ,_ac ,_df ,_gb int ;_gae ,_eec ,_bgg ,_gf float32 ;_ad error ;_fe *_c .Rectangle ;
_bb *_e .Bitmap ;_fgc _c .Point ;);for _gg :=0;_gg < _fdc ;_gg ++{_bdg =_eg .BaseIndex +_gg ;if _gae ,_eec ,_ad =_eg .CentroidPoints .GetGeometry (_bdg );_ad !=nil {return _fd .Wrap (_ad ,_aa ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050o\u0069\u006e\u0074\u0073");
};if _ac ,_ad =_eg .ClassIDs .Get (_bdg );_ad !=nil {return _fd .Wrap (_ad ,_aa ,"\u0043\u006c\u0061s\u0073\u0049\u0044\u0073\u002e\u0047\u0065\u0074");};if _bgg ,_gf ,_ad =_eg .CentroidPointsTemplates .GetGeometry (_ac );_ad !=nil {return _fd .Wrap (_ad ,_aa ,"\u0043\u0065\u006etr\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074\u0073\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");
};_af :=_bgg -_gae ;_ead :=_gf -_eec ;if _af >=0{_df =int (_af +0.5);}else {_df =int (_af -0.5);};if _ead >=0{_gb =int (_ead +0.5);}else {_gb =int (_ead -0.5);};if _fe ,_ad =_ec .Get (_gg );_ad !=nil {return _fd .Wrap (_ad ,_aa ,"");};_bcda ,_eb :=_fe .Min .X ,_fe .Min .Y ;
_bb ,_ad =_eg .UndilatedTemplates .GetBitmap (_ac );if _ad !=nil {return _fd .Wrap (_ad ,_aa ,"\u0055\u006e\u0064\u0069\u006c\u0061\u0074\u0065\u0064\u0054e\u006d\u0070\u006c\u0061\u0074\u0065\u0073.\u0047\u0065\u0074\u0028\u0069\u0043\u006c\u0061\u0073\u0073\u0029");
};_fgc ,_ad =_fgf (_ee ,_bcda ,_eb ,_df ,_gb ,_bb );if _ad !=nil {return _fd .Wrap (_ad ,_aa ,"");};_eg .PtaUL .AddPoint (float32 (_bcda -_df +_fgc .X ),float32 (_eb -_gb +_fgc .Y ));};return nil ;};func DefaultSettings ()Settings {_bbca :=&Settings {};
_bbca .SetDefault ();return *_bbca };var TwoByTwoWalk =[]int {0,0,0,1,-1,0,0,-1,1,0,-1,1,1,1,-1,-1,1,-1,0,-2,2,0,0,2,-2,0,-1,-2,1,-2,2,-1,2,1,1,2,-1,2,-2,1,-2,-1,-2,-2,2,-2,2,2,-2,2};