//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package classer ;import (_f "github.com/unidoc/unipdf/v3/common";_d "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_db "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";_g "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_cd "image";_e "math";
);func Init (settings Settings )(*Classer ,error ){const _fd ="\u0063\u006c\u0061s\u0073\u0065\u0072\u002e\u0049\u006e\u0069\u0074";_da :=&Classer {Settings :settings ,Widths :map[int ]int {},Heights :map[int ]int {},TemplatesSize :_d .IntsMap {},TemplateAreas :&_d .IntSlice {},ComponentPageNumbers :&_d .IntSlice {},ClassIDs :&_d .IntSlice {},ComponentsNumber :&_d .IntSlice {},CentroidPoints :&_db .Points {},CentroidPointsTemplates :&_db .Points {},UndilatedTemplates :&_db .Bitmaps {},DilatedTemplates :&_db .Bitmaps {},ClassInstances :&_db .BitmapsArray {},FgTemplates :&_d .NumSlice {}};
if _cg :=_da .Settings .Validate ();_cg !=nil {return nil ,_g .Wrap (_cg ,_fd ,"");};return _da ,nil ;};func DefaultSettings ()Settings {_beee :=&Settings {};_beee .SetDefault ();return *_beee };func (_gg *Classer )verifyMethod (_bdf Method )error {if _bdf !=RankHaus &&_bdf !=Correlation {return _g .Error ("\u0076\u0065\u0072i\u0066\u0079\u004d\u0065\u0074\u0068\u006f\u0064","\u0069\u006e\u0076\u0061li\u0064\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072\u0020\u006d\u0065\u0074\u0068o\u0064");
};return nil ;};func (_dag *similarTemplatesFinder )Next ()int {var (_eaeg ,_cef ,_bdeg ,_egg int ;_fgg bool ;_cgcc *_db .Bitmap ;_ead error ;);for {if _dag .Index >=25{return -1;};_cef =_dag .Width +TwoByTwoWalk [2*_dag .Index ];_eaeg =_dag .Height +TwoByTwoWalk [2*_dag .Index +1];
if _eaeg < 1||_cef < 1{_dag .Index ++;continue ;};if len (_dag .CurrentNumbers )==0{_dag .CurrentNumbers ,_fgg =_dag .Classer .TemplatesSize .GetSlice (uint64 (_cef )*uint64 (_eaeg ));if !_fgg {_dag .Index ++;continue ;};_dag .N =0;};_bdeg =len (_dag .CurrentNumbers );
for ;_dag .N < _bdeg ;_dag .N ++{_egg =_dag .CurrentNumbers [_dag .N ];_cgcc ,_ead =_dag .Classer .DilatedTemplates .GetBitmap (_egg );if _ead !=nil {_f .Log .Debug ("\u0046\u0069\u006e\u0064\u004e\u0065\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0074\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u006e\u006f\u0074 \u0066\u006fu\u006e\u0064\u003a\u0020");
return 0;};if _cgcc .Width -2*JbAddedPixels ==_cef &&_cgcc .Height -2*JbAddedPixels ==_eaeg {return _egg ;};};_dag .Index ++;_dag .CurrentNumbers =nil ;};};func (_fg *Classer )addPageComponents (_af *_db .Bitmap ,_de *_db .Boxes ,_ag *_db .Bitmaps ,_gb int ,_afe Method )error {const _aa ="\u0043l\u0061\u0073\u0073\u0065r\u002e\u0041\u0064\u0064\u0050a\u0067e\u0043o\u006d\u0070\u006f\u006e\u0065\u006e\u0074s";
if _af ==nil {return _g .Error (_aa ,"\u006e\u0069\u006c\u0020\u0069\u006e\u0070\u0075\u0074 \u0070\u0061\u0067\u0065");};if _de ==nil ||_ag ==nil ||len (*_de )==0{_f .Log .Trace ("\u0041\u0064\u0064P\u0061\u0067\u0065\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0073\u002e\u0020\u004e\u006f\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065n\u0074\u0073\u0020\u0066\u006f\u0075\u006e\u0064",_af );
return nil ;};var _cdd error ;switch _afe {case RankHaus :_cdd =_fg .classifyRankHaus (_de ,_ag ,_gb );case Correlation :_cdd =_fg .classifyCorrelation (_de ,_ag ,_gb );default:_f .Log .Debug ("\u0055\u006ek\u006e\u006f\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064\u003a\u0020'%\u0076\u0027",_afe );
return _g .Error (_aa ,"\u0075\u006e\u006bno\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064");};if _cdd !=nil {return _g .Wrap (_cdd ,_aa ,"");};if _cdd =_fg .getULCorners (_af ,_de );_cdd !=nil {return _g .Wrap (_cdd ,_aa ,"");
};_ca :=len (*_de );_fg .BaseIndex +=_ca ;if _cdd =_fg .ComponentsNumber .Add (_ca );_cdd !=nil {return _g .Wrap (_cdd ,_aa ,"");};return nil ;};var _bef bool ;type Classer struct{BaseIndex int ;Settings Settings ;ComponentsNumber *_d .IntSlice ;TemplateAreas *_d .IntSlice ;
Widths map[int ]int ;Heights map[int ]int ;NumberOfClasses int ;ClassInstances *_db .BitmapsArray ;UndilatedTemplates *_db .Bitmaps ;DilatedTemplates *_db .Bitmaps ;TemplatesSize _d .IntsMap ;FgTemplates *_d .NumSlice ;CentroidPoints *_db .Points ;CentroidPointsTemplates *_db .Points ;
ClassIDs *_d .IntSlice ;ComponentPageNumbers *_d .IntSlice ;PtaUL *_db .Points ;PtaLL *_db .Points ;};func (_fdg *Classer )ComputeLLCorners ()(_dac error ){const _gf ="\u0043l\u0061\u0073\u0073\u0065\u0072\u002e\u0043\u006f\u006d\u0070\u0075t\u0065\u004c\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";
if _fdg .PtaUL ==nil {return _g .Error (_gf ,"\u0055\u004c\u0020\u0043or\u006e\u0065\u0072\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006ee\u0064");};_gda :=len (*_fdg .PtaUL );_fdg .PtaLL =&_db .Points {};var (_gff ,_eb float32 ;_fb ,_cgb int ;
_cf *_db .Bitmap ;);for _a :=0;_a < _gda ;_a ++{_gff ,_eb ,_dac =_fdg .PtaUL .GetGeometry (_a );if _dac !=nil {_f .Log .Debug ("\u0047e\u0074\u0074\u0069\u006e\u0067\u0020\u0050\u0074\u0061\u0055\u004c \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_dac );
return _g .Wrap (_dac ,_gf ,"\u0050\u0074\u0061\u0055\u004c\u0020\u0047\u0065\u006fm\u0065\u0074\u0072\u0079");};_fb ,_dac =_fdg .ClassIDs .Get (_a );if _dac !=nil {_f .Log .Debug ("\u0047\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0043\u006c\u0061s\u0073\u0049\u0044\u0020\u0066\u0061\u0069\u006c\u0065\u0064:\u0020\u0025\u0076",_dac );
return _g .Wrap (_dac ,_gf ,"\u0043l\u0061\u0073\u0073\u0049\u0044");};_cf ,_dac =_fdg .UndilatedTemplates .GetBitmap (_fb );if _dac !=nil {_f .Log .Debug ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0055\u006ed\u0069\u006c\u0061\u0074\u0065\u0064\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_dac );
return _g .Wrap (_dac ,_gf ,"\u0055\u006e\u0064\u0069la\u0074\u0065\u0064\u0020\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");};_cgb =_cf .Height ;_fdg .PtaLL .AddPoint (_gff ,_eb +float32 (_cgb ));};return nil ;};const JbAddedPixels =6;func (_gd *Classer )AddPage (inputPage *_db .Bitmap ,pageNumber int ,method Method )(_fc error ){const _ce ="\u0043l\u0061s\u0073\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";
_gd .Widths [pageNumber ]=inputPage .Width ;_gd .Heights [pageNumber ]=inputPage .Height ;if _fc =_gd .verifyMethod (method );_fc !=nil {return _g .Wrap (_fc ,_ce ,"");};_df ,_b ,_fc :=inputPage .GetComponents (_gd .Settings .Components ,_gd .Settings .MaxCompWidth ,_gd .Settings .MaxCompHeight );
if _fc !=nil {return _g .Wrap (_fc ,_ce ,"");};_f .Log .Debug ("\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_df );if _fc =_gd .addPageComponents (inputPage ,_b ,_df ,pageNumber ,method );_fc !=nil {return _g .Wrap (_fc ,_ce ,"");
};return nil ;};func (_daf *Settings )SetDefault (){if _daf .MaxCompWidth ==0{switch _daf .Components {case _db .ComponentConn :_daf .MaxCompWidth =MaxConnCompWidth ;case _db .ComponentCharacters :_daf .MaxCompWidth =MaxCharCompWidth ;case _db .ComponentWords :_daf .MaxCompWidth =MaxWordCompWidth ;
};};if _daf .MaxCompHeight ==0{_daf .MaxCompHeight =MaxCompHeight ;};if _daf .Thresh ==0.0{_daf .Thresh =0.9;};if _daf .WeightFactor ==0.0{_daf .WeightFactor =0.75;};if _daf .RankHaus ==0.0{_daf .RankHaus =0.97;};if _daf .SizeHaus ==0{_daf .SizeHaus =2;
};};type similarTemplatesFinder struct{Classer *Classer ;Width int ;Height int ;Index int ;CurrentNumbers []int ;N int ;};func (_ddb *Classer )classifyRankHaus (_cea *_db .Boxes ,_bde *_db .Bitmaps ,_dga int )error {const _aea ="\u0063\u006ca\u0073\u0073\u0069f\u0079\u0052\u0061\u006e\u006b\u0048\u0061\u0075\u0073";
if _cea ==nil {return _g .Error (_aea ,"\u0062\u006fx\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if _bde ==nil {return _g .Error (_aea ,"\u0070\u0069x\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};_faba :=len (_bde .Values );if _faba ==0{return _g .Error (_aea ,"e\u006dp\u0074\u0079\u0020\u006e\u0065\u0077\u0020\u0063o\u006d\u0070\u006f\u006een\u0074\u0073");};_cgcb :=_bde .CountPixels ();_ffg :=_ddb .Settings .SizeHaus ;_bfa :=_db .SelCreateBrick (_ffg ,_ffg ,_ffg /2,_ffg /2,_db .SelHit );
_cfc :=&_db .Bitmaps {Values :make ([]*_db .Bitmap ,_faba )};_daa :=&_db .Bitmaps {Values :make ([]*_db .Bitmap ,_faba )};var (_aee ,_aac ,_ffee *_db .Bitmap ;_bac error ;);for _dgaf :=0;_dgaf < _faba ;_dgaf ++{_aee ,_bac =_bde .GetBitmap (_dgaf );if _bac !=nil {return _g .Wrap (_bac ,_aea ,"");
};_aac ,_bac =_aee .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);if _bac !=nil {return _g .Wrap (_bac ,_aea ,"");};_ffee ,_bac =_db .Dilate (nil ,_aac ,_bfa );if _bac !=nil {return _g .Wrap (_bac ,_aea ,"");};_cfc .Values [_faba ]=_aac ;
_daa .Values [_faba ]=_ffee ;};_dcd ,_bac :=_db .Centroids (_cfc .Values );if _bac !=nil {return _g .Wrap (_bac ,_aea ,"");};if _bac =_dcd .Add (_ddb .CentroidPoints );_bac !=nil {_f .Log .Trace ("\u004e\u006f\u0020\u0063en\u0074\u0072\u006f\u0069\u0064\u0073\u0020\u0074\u006f\u0020\u0061\u0064\u0064");
};if _ddb .Settings .RankHaus ==1.0{_bac =_ddb .classifyRankHouseOne (_cea ,_bde ,_cfc ,_daa ,_dcd ,_dga );}else {_bac =_ddb .classifyRankHouseNonOne (_cea ,_bde ,_cfc ,_daa ,_dcd ,_cgcb ,_dga );};if _bac !=nil {return _g .Wrap (_bac ,_aea ,"");};return nil ;
};func (_ba *Classer )getULCorners (_ac *_db .Bitmap ,_cc *_db .Boxes )error {const _bb ="\u0067\u0065\u0074U\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";if _ac ==nil {return _g .Error (_bb ,"\u006e\u0069l\u0020\u0069\u006da\u0067\u0065\u0020\u0062\u0069\u0074\u006d\u0061\u0070");
};if _cc ==nil {return _g .Error (_bb ,"\u006e\u0069\u006c\u0020\u0062\u006f\u0075\u006e\u0064\u0073");};if _ba .PtaUL ==nil {_ba .PtaUL =&_db .Points {};};_ae :=len (*_cc );var (_bg ,_fde ,_bbe ,_ea int ;_gc ,_eg ,_fdgb ,_gcb float32 ;_bf error ;_acc *_cd .Rectangle ;
_ebe *_db .Bitmap ;_dbg _cd .Point ;);for _ff :=0;_ff < _ae ;_ff ++{_bg =_ba .BaseIndex +_ff ;if _gc ,_eg ,_bf =_ba .CentroidPoints .GetGeometry (_bg );_bf !=nil {return _g .Wrap (_bf ,_bb ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050o\u0069\u006e\u0074\u0073");
};if _fde ,_bf =_ba .ClassIDs .Get (_bg );_bf !=nil {return _g .Wrap (_bf ,_bb ,"\u0043\u006c\u0061s\u0073\u0049\u0044\u0073\u002e\u0047\u0065\u0074");};if _fdgb ,_gcb ,_bf =_ba .CentroidPointsTemplates .GetGeometry (_fde );_bf !=nil {return _g .Wrap (_bf ,_bb ,"\u0043\u0065\u006etr\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074\u0073\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");
};_ec :=_fdgb -_gc ;_cdf :=_gcb -_eg ;if _ec >=0{_bbe =int (_ec +0.5);}else {_bbe =int (_ec -0.5);};if _cdf >=0{_ea =int (_cdf +0.5);}else {_ea =int (_cdf -0.5);};if _acc ,_bf =_cc .Get (_ff );_bf !=nil {return _g .Wrap (_bf ,_bb ,"");};_cca ,_bd :=_acc .Min .X ,_acc .Min .Y ;
_ebe ,_bf =_ba .UndilatedTemplates .GetBitmap (_fde );if _bf !=nil {return _g .Wrap (_bf ,_bb ,"\u0055\u006e\u0064\u0069\u006c\u0061\u0074\u0065\u0064\u0054e\u006d\u0070\u006c\u0061\u0074\u0065\u0073.\u0047\u0065\u0074\u0028\u0069\u0043\u006c\u0061\u0073\u0073\u0029");
};_dbg ,_bf =_ed (_ac ,_cca ,_bd ,_bbe ,_ea ,_ebe );if _bf !=nil {return _g .Wrap (_bf ,_bb ,"");};_ba .PtaUL .AddPoint (float32 (_cca -_bbe +_dbg .X ),float32 (_bd -_ea +_dbg .Y ));};return nil ;};const (MaxDiffWidth =2;MaxDiffHeight =2;);func _bbf (_fbaef *Classer ,_gggb *_db .Bitmap )*similarTemplatesFinder {return &similarTemplatesFinder {Width :_gggb .Width ,Height :_gggb .Height ,Classer :_fbaef };
};func (_fcc *Classer )classifyCorrelation (_edd *_db .Boxes ,_dde *_db .Bitmaps ,_dca int )error {const _dg ="\u0063\u006c\u0061\u0073si\u0066\u0079\u0043\u006f\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e";if _edd ==nil {return _g .Error (_dg ,"\u006e\u0065\u0077\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0062\u006f\u0075\u006e\u0064\u0069\u006e\u0067\u0020\u0062o\u0078\u0065\u0073\u0020\u006eo\u0074\u0020f\u006f\u0075\u006e\u0064");
};if _dde ==nil {return _g .Error (_dg ,"\u006e\u0065wC\u006f\u006d\u0070o\u006e\u0065\u006e\u0074s b\u0069tm\u0061\u0070\u0020\u0061\u0072\u0072\u0061y \u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064");};_fbab :=len (_dde .Values );if _fbab ==0{_f .Log .Debug ("\u0063l\u0061\u0073s\u0069\u0066\u0079C\u006f\u0072\u0072\u0065\u006c\u0061\u0074i\u006f\u006e\u0020\u002d\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0070\u0069\u0078\u0061s\u0020\u0069\u0073\u0020\u0065\u006d\u0070\u0074\u0079");
return nil ;};var (_cgc ,_dfe *_db .Bitmap ;_ceg error ;);_aeb :=&_db .Bitmaps {Values :make ([]*_db .Bitmap ,_fbab )};for _gca ,_fdea :=range _dde .Values {_dfe ,_ceg =_fdea .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);
if _ceg !=nil {return _g .Wrap (_ceg ,_dg ,"");};_aeb .Values [_gca ]=_dfe ;};_ge :=_fcc .FgTemplates ;_bbcd :=_db .MakePixelSumTab8 ();_bda :=_db .MakePixelCentroidTab8 ();_fda :=make ([]int ,_fbab );_cac :=make ([][]int ,_fbab );_ggg :=_db .Points (make ([]_db .Point ,_fbab ));
_cegd :=&_ggg ;var (_fccb ,_bgf int ;_gde ,_dff ,_geg int ;_adef ,_aff int ;_ada byte ;);for _bgfa ,_ccg :=range _aeb .Values {_cac [_bgfa ]=make ([]int ,_ccg .Height );_fccb =0;_bgf =0;_dff =(_ccg .Height -1)*_ccg .RowStride ;_gde =0;for _aff =_ccg .Height -1;
_aff >=0;_aff ,_dff =_aff -1,_dff -_ccg .RowStride {_cac [_bgfa ][_aff ]=_gde ;_geg =0;for _adef =0;_adef < _ccg .RowStride ;_adef ++{_ada =_ccg .Data [_dff +_adef ];_geg +=_bbcd [_ada ];_fccb +=_bda [_ada ]+_adef *8*_bbcd [_ada ];};_gde +=_geg ;_bgf +=_geg *_aff ;
};_fda [_bgfa ]=_gde ;if _gde > 0{(*_cegd )[_bgfa ]=_db .Point {X :float32 (_fccb )/float32 (_gde ),Y :float32 (_bgf )/float32 (_gde )};}else {(*_cegd )[_bgfa ]=_db .Point {X :float32 (_ccg .Width )/float32 (2),Y :float32 (_ccg .Height )/float32 (2)};};
};if _ceg =_fcc .CentroidPoints .Add (_cegd );_ceg !=nil {return _g .Wrap (_ceg ,_dg ,"\u0063\u0065\u006et\u0072\u006f\u0069\u0064\u0020\u0061\u0064\u0064");};var (_cfab ,_cae ,_fga int ;_ccfa float64 ;_bdd ,_ddd ,_gcc ,_fbb float32 ;_ffe ,_ab _db .Point ;
_cggd bool ;_affb *similarTemplatesFinder ;_eag int ;_edef *_db .Bitmap ;_ecb *_cd .Rectangle ;_fa *_db .Bitmaps ;);for _eag ,_dfe =range _aeb .Values {_cae =_fda [_eag ];if _bdd ,_ddd ,_ceg =_cegd .GetGeometry (_eag );_ceg !=nil {return _g .Wrap (_ceg ,_dg ,"\u0070t\u0061\u0020\u002d\u0020\u0069");
};_cggd =false ;_cgbb :=len (_fcc .UndilatedTemplates .Values );_affb =_bbf (_fcc ,_dfe );for _edad :=_affb .Next ();_edad > -1;{if _edef ,_ceg =_fcc .UndilatedTemplates .GetBitmap (_edad );_ceg !=nil {return _g .Wrap (_ceg ,_dg ,"\u0075\u006e\u0069dl\u0061\u0074\u0065\u0064\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0062\u006d\u0032");
};if _fga ,_ceg =_ge .GetInt (_edad );_ceg !=nil {_f .Log .Trace ("\u0046\u0047\u0020T\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u005b\u0069\u0063\u006ca\u0073\u0073\u005d\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_ceg );};if _gcc ,_fbb ,_ceg =_fcc .CentroidPointsTemplates .GetGeometry (_edad );
_ceg !=nil {return _g .Wrap (_ceg ,_dg ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074T\u0065\u006d\u0070\u006c\u0061\u0074e\u0073\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u00782\u002c\u0079\u0032\u0020");
};if _fcc .Settings .WeightFactor > 0.0{if _cfab ,_ceg =_fcc .TemplateAreas .Get (_edad );_ceg !=nil {_f .Log .Trace ("\u0054\u0065\u006dp\u006c\u0061\u0074\u0065A\u0072\u0065\u0061\u0073\u005b\u0069\u0063l\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0061\u0072\u0065\u0061\u0020\u0025\u0076",_ceg );
};_ccfa =_fcc .Settings .Thresh +(1.0-_fcc .Settings .Thresh )*_fcc .Settings .WeightFactor *float64 (_fga )/float64 (_cfab );}else {_ccfa =_fcc .Settings .Thresh ;};_gfa ,_fab :=_db .CorrelationScoreThresholded (_dfe ,_edef ,_cae ,_fga ,_ffe .X -_ab .X ,_ffe .Y -_ab .Y ,MaxDiffWidth ,MaxDiffHeight ,_bbcd ,_cac [_eag ],float32 (_ccfa ));
if _fab !=nil {return _g .Wrap (_fab ,_dg ,"");};if _bef {var (_fcb ,_ga float64 ;_fdd ,_bbg int ;);_fcb ,_fab =_db .CorrelationScore (_dfe ,_edef ,_cae ,_fga ,_bdd -_gcc ,_ddd -_fbb ,MaxDiffWidth ,MaxDiffHeight ,_bbcd );if _fab !=nil {return _g .Wrap (_fab ,_dg ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");
};_ga ,_fab =_db .CorrelationScoreSimple (_dfe ,_edef ,_cae ,_fga ,_bdd -_gcc ,_ddd -_fbb ,MaxDiffWidth ,MaxDiffHeight ,_bbcd );if _fab !=nil {return _g .Wrap (_fab ,_dg ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");
};_fdd =int (_e .Sqrt (_fcb *float64 (_cae )*float64 (_fga )));_bbg =int (_e .Sqrt (_ga *float64 (_cae )*float64 (_fga )));if (_fcb >=_ccfa )!=(_ga >=_ccfa ){return _g .Errorf (_dg ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043\u006f\u0072r\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0063\u006f\u0072\u0065\u0020\u006d\u0069\u0073\u006d\u0061\u0074\u0063\u0068\u0020-\u0020\u0025d\u0028\u00250\u002e\u0034\u0066\u002c\u0020\u0025\u0076\u0029\u0020\u0076\u0073\u0020\u0025d(\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0076)\u0020\u0025\u0030\u002e\u0034\u0066",_fdd ,_fcb ,_fcb >=_ccfa ,_bbg ,_ga ,_ga >=_ccfa ,_fcb -_ga );
};if _fcb >=_ccfa !=_gfa {return _g .Errorf (_dg ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043o\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e \u0073\u0063\u006f\u0072\u0065 \u004d\u0069\u0073\u006d\u0061t\u0063\u0068 \u0062\u0065\u0074w\u0065\u0065\u006e\u0020\u0063\u006frr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020/\u0020\u0074\u0068\u0072\u0065s\u0068\u006f\u006c\u0064\u002e\u0020\u0043\u006f\u006dpa\u0072\u0069\u0073\u006f\u006e:\u0020\u0025\u0030\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0064\u0029\u0020\u003e\u003d\u0020\u00250\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u0029\u0020\u0076\u0073\u0020\u0025\u0076",_fcb ,_fcb *float64 (_cae )*float64 (_fga ),_fdd ,_ccfa ,float32 (_ccfa )*float32 (_cae )*float32 (_fga ),_gfa );
};};if _gfa {_cggd =true ;if _fab =_fcc .ClassIDs .Add (_edad );_fab !=nil {return _g .Wrap (_fab ,_dg ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");};if _fab =_fcc .ComponentPageNumbers .Add (_dca );_fab !=nil {return _g .Wrap (_fab ,_dg ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");
};if _fcc .Settings .KeepClassInstances {if _cgc ,_fab =_dde .GetBitmap (_eag );_fab !=nil {return _g .Wrap (_fab ,_dg ,"\u004b\u0065\u0065\u0070Cl\u0061\u0073\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u002d \u0069");};if _fa ,_fab =_fcc .ClassInstances .GetBitmaps (_edad );
_fab !=nil {return _g .Wrap (_fab ,_dg ,"K\u0065\u0065\u0070\u0043\u006c\u0061s\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065s\u0020\u002d\u0020i\u0043l\u0061\u0073\u0073");};_fa .AddBitmap (_cgc );if _ecb ,_fab =_edd .Get (_eag );_fab !=nil {return _g .Wrap (_fab ,_dg ,"\u004be\u0065p\u0043\u006c\u0061\u0073\u0073I\u006e\u0073t\u0061\u006e\u0063\u0065\u0073");
};_fa .AddBox (_ecb );};break ;};};if !_cggd {if _ceg =_fcc .ClassIDs .Add (_cgbb );_ceg !=nil {return _g .Wrap (_ceg ,_dg ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _ceg =_fcc .ComponentPageNumbers .Add (_dca );_ceg !=nil {return _g .Wrap (_ceg ,_dg ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_fa =&_db .Bitmaps {};if _cgc ,_ceg =_dde .GetBitmap (_eag );_ceg !=nil {return _g .Wrap (_ceg ,_dg ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_fa .AddBitmap (_cgc );_cge ,_ecd :=_cgc .Width ,_cgc .Height ;_dfd :=uint64 (_ecd )*uint64 (_cge );_fcc .TemplatesSize .Add (_dfd ,_cgbb );
if _ecb ,_ceg =_edd .Get (_eag );_ceg !=nil {return _g .Wrap (_ceg ,_dg ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_fa .AddBox (_ecb );_fcc .ClassInstances .AddBitmaps (_fa );_fcc .CentroidPointsTemplates .AddPoint (_bdd ,_ddd );_fcc .FgTemplates .AddInt (_cae );
_fcc .UndilatedTemplates .AddBitmap (_cgc );_cfab =(_dfe .Width -2*JbAddedPixels )*(_dfe .Height -2*JbAddedPixels );if _ceg =_fcc .TemplateAreas .Add (_cfab );_ceg !=nil {return _g .Wrap (_ceg ,_dg ,"\u0021\u0066\u006f\u0075\u006e\u0064");};};};_fcc .NumberOfClasses =len (_fcc .UndilatedTemplates .Values );
return nil ;};type Settings struct{MaxCompWidth int ;MaxCompHeight int ;SizeHaus int ;RankHaus float64 ;Thresh float64 ;WeightFactor float64 ;KeepClassInstances bool ;Components _db .Component ;Method Method ;};func _ed (_dad *_db .Bitmap ,_cfa ,_acg ,_gfd ,_fe int ,_eda *_db .Bitmap )(_dd _cd .Point ,_ad error ){const _eae ="\u0066i\u006e\u0061\u006c\u0041l\u0069\u0067\u006e\u006d\u0065n\u0074P\u006fs\u0069\u0074\u0069\u006f\u006e\u0069\u006eg";
if _dad ==nil {return _dd ,_g .Error (_eae ,"\u0073\u006f\u0075\u0072ce\u0020\u006e\u006f\u0074\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064");};if _eda ==nil {return _dd ,_g .Error (_eae ,"t\u0065\u006d\u0070\u006cat\u0065 \u006e\u006f\u0074\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064");
};_bc ,_dc :=_eda .Width ,_eda .Height ;_ccf ,_bbc :=_cfa -_gfd -JbAddedPixels ,_acg -_fe -JbAddedPixels ;_f .Log .Trace ("\u0078\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0079\u003a\u0020\u0027\u0025\u0064'\u002c\u0020\u0077\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0068\u003a \u0027\u0025\u0064\u0027\u002c\u0020\u0062\u0078\u003a\u0020\u0027\u0025d'\u002c\u0020\u0062\u0079\u003a\u0020\u0027\u0025\u0064\u0027",_cfa ,_acg ,_bc ,_dc ,_ccf ,_bbc );
_ee ,_ad :=_db .Rect (_ccf ,_bbc ,_bc ,_dc );if _ad !=nil {return _dd ,_g .Wrap (_ad ,_eae ,"");};_fcd ,_ ,_ad :=_dad .ClipRectangle (_ee );if _ad !=nil {_f .Log .Error ("\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069\u0070\u0020\u0072\u0065c\u0074\u0061\u006e\u0067\u006c\u0065\u003a\u0020\u0025\u0076",_ee );
return _dd ,_g .Wrap (_ad ,_eae ,"");};_fba :=_db .New (_fcd .Width ,_fcd .Height );_cfd :=_e .MaxInt32 ;var _ede ,_accf ,_add ,_cgg ,_dfa int ;for _ede =-1;_ede <=1;_ede ++{for _accf =-1;_accf <=1;_accf ++{if _ ,_ad =_db .Copy (_fba ,_fcd );_ad !=nil {return _dd ,_g .Wrap (_ad ,_eae ,"");
};if _ad =_fba .RasterOperation (_accf ,_ede ,_bc ,_dc ,_db .PixSrcXorDst ,_eda ,0,0);_ad !=nil {return _dd ,_g .Wrap (_ad ,_eae ,"");};_add =_fba .CountPixels ();if _add < _cfd {_cgg =_accf ;_dfa =_ede ;_cfd =_add ;};};};_dd .X =_cgg ;_dd .Y =_dfa ;return _dd ,nil ;
};func (_cda *Classer )classifyRankHouseOne (_addd *_db .Boxes ,_afg ,_dcc ,_ebea *_db .Bitmaps ,_ef *_db .Points ,_ebc int )(_agd error ){const _aae ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";
var (_ebg ,_fabe ,_feg ,_dfaf float32 ;_dgf int ;_ceae ,_ege ,_eaa ,_ecc ,_dcg *_db .Bitmap ;_gfda ,_bfg bool ;);for _ddc :=0;_ddc < len (_afg .Values );_ddc ++{_ege =_dcc .Values [_ddc ];_eaa =_ebea .Values [_ddc ];_ebg ,_fabe ,_agd =_ef .GetGeometry (_ddc );
if _agd !=nil {return _g .Wrapf (_agd ,_aae ,"\u0066\u0069\u0072\u0073\u0074\u0020\u0067\u0065\u006fm\u0065\u0074\u0072\u0079");};_acd :=len (_cda .UndilatedTemplates .Values );_gfda =false ;_fbf :=_bbf (_cda ,_ege );for _dgf =_fbf .Next ();_dgf > -1;{_ecc ,_agd =_cda .UndilatedTemplates .GetBitmap (_dgf );
if _agd !=nil {return _g .Wrap (_agd ,_aae ,"\u0062\u006d\u0033");};_dcg ,_agd =_cda .DilatedTemplates .GetBitmap (_dgf );if _agd !=nil {return _g .Wrap (_agd ,_aae ,"\u0062\u006d\u0034");};_feg ,_dfaf ,_agd =_cda .CentroidPointsTemplates .GetGeometry (_dgf );
if _agd !=nil {return _g .Wrap (_agd ,_aae ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0073");};_bfg ,_agd =_db .HausTest (_ege ,_eaa ,_ecc ,_dcg ,_ebg -_feg ,_fabe -_dfaf ,MaxDiffWidth ,MaxDiffHeight );
if _agd !=nil {return _g .Wrap (_agd ,_aae ,"");};if _bfg {_gfda =true ;if _agd =_cda .ClassIDs .Add (_dgf );_agd !=nil {return _g .Wrap (_agd ,_aae ,"");};if _agd =_cda .ComponentPageNumbers .Add (_ebc );_agd !=nil {return _g .Wrap (_agd ,_aae ,"");};
if _cda .Settings .KeepClassInstances {_fddf ,_fdee :=_cda .ClassInstances .GetBitmaps (_dgf );if _fdee !=nil {return _g .Wrap (_fdee ,_aae ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_ceae ,_fdee =_afg .GetBitmap (_ddc );if _fdee !=nil {return _g .Wrap (_fdee ,_aae ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");
};_fddf .AddBitmap (_ceae );_cb ,_fdee :=_addd .Get (_ddc );if _fdee !=nil {return _g .Wrap (_fdee ,_aae ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_fddf .AddBox (_cb );};break ;};};if !_gfda {if _agd =_cda .ClassIDs .Add (_acd );_agd !=nil {return _g .Wrap (_agd ,_aae ,"");
};if _agd =_cda .ComponentPageNumbers .Add (_ebc );_agd !=nil {return _g .Wrap (_agd ,_aae ,"");};_cdc :=&_db .Bitmaps {};_ceae ,_agd =_afg .GetBitmap (_ddc );if _agd !=nil {return _g .Wrap (_agd ,_aae ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_cdc .Values =append (_cdc .Values ,_ceae );
_agdd ,_cag :=_ceae .Width ,_ceae .Height ;_cda .TemplatesSize .Add (uint64 (_cag )*uint64 (_agdd ),_acd );_acb ,_eef :=_addd .Get (_ddc );if _eef !=nil {return _g .Wrap (_eef ,_aae ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_cdc .AddBox (_acb );_cda .ClassInstances .AddBitmaps (_cdc );
_cda .CentroidPointsTemplates .AddPoint (_ebg ,_fabe );_cda .UndilatedTemplates .AddBitmap (_ege );_cda .DilatedTemplates .AddBitmap (_eaa );};};return nil ;};const (MaxConnCompWidth =350;MaxCharCompWidth =350;MaxWordCompWidth =1000;MaxCompHeight =120;
);func (_ccfae Settings )Validate ()error {const _dcga ="\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0073\u002e\u0056\u0061\u006ci\u0064\u0061\u0074\u0065";if _ccfae .Thresh < 0.4||_ccfae .Thresh > 0.98{return _g .Error (_dcga ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074\u0068\u0072\u0065\u0073\u0068\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0034\u0020\u002d\u0020\u0030\u002e\u0039\u0038\u005d");
};if _ccfae .WeightFactor < 0.0||_ccfae .WeightFactor > 1.0{return _g .Error (_dcga ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006ec\u006f\u0064\u0065\u0072\u0020w\u0065\u0069\u0067\u0068\u0074\u0020\u0066\u0061\u0063\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0030\u0020\u002d\u0020\u0031\u002e\u0030\u005d");
};if _ccfae .RankHaus < 0.5||_ccfae .RankHaus > 1.0{return _g .Error (_dcga ,"\u006a\u0062\u0069\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0072a\u006e\u006b\u0020\u0068\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065 \u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065 [\u0030\u002e\u0035\u0020\u002d\u0020\u0031\u002e\u0030\u005d");
};if _ccfae .SizeHaus < 1||_ccfae .SizeHaus > 10{return _g .Error (_dcga ,"\u006a\u0062\u0069\u0067\u0032 \u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0073\u0069\u007a\u0065\u0020h\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0031\u0020\u002d\u0020\u0031\u0030]");
};switch _ccfae .Components {case _db .ComponentConn ,_db .ComponentCharacters ,_db .ComponentWords :default:return _g .Error (_dcga ,"\u0069n\u0076\u0061\u006c\u0069d\u0020\u0063\u006c\u0061\u0073s\u0065r\u0020c\u006f\u006d\u0070\u006f\u006e\u0065\u006et");
};return nil ;};var TwoByTwoWalk =[]int {0,0,0,1,-1,0,0,-1,1,0,-1,1,1,1,-1,-1,1,-1,0,-2,2,0,0,2,-2,0,-1,-2,1,-2,2,-1,2,1,1,2,-1,2,-2,1,-2,-1,-2,-2,2,-2,2,2,-2,2};const (RankHaus Method =iota ;Correlation ;);type Method int ;func (_eaab *Classer )classifyRankHouseNonOne (_cfb *_db .Boxes ,_bee ,_dace ,_aad *_db .Bitmaps ,_cbg *_db .Points ,_ace *_d .NumSlice ,_dfg int )(_bfgb error ){const _cbe ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";
var (_ddce ,_acee ,_acca ,_bbec float32 ;_aaa ,_ggc ,_cdcc int ;_gdeb ,_fce ,_fdef ,_gdc ,_feb *_db .Bitmap ;_bgg ,_gae bool ;);_ggf :=_db .MakePixelSumTab8 ();for _bdb :=0;_bdb < len (_bee .Values );_bdb ++{if _fce ,_bfgb =_dace .GetBitmap (_bdb );_bfgb !=nil {return _g .Wrap (_bfgb ,_cbe ,"b\u006d\u0073\u0031\u002e\u0047\u0065\u0074\u0028\u0069\u0029");
};if _aaa ,_bfgb =_ace .GetInt (_bdb );_bfgb !=nil {_f .Log .Trace ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0046\u0047T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073 \u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_bdb ,_bfgb );
};if _fdef ,_bfgb =_aad .GetBitmap (_bdb );_bfgb !=nil {return _g .Wrap (_bfgb ,_cbe ,"b\u006d\u0073\u0032\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};if _ddce ,_acee ,_bfgb =_cbg .GetGeometry (_bdb );_bfgb !=nil {return _g .Wrapf (_bfgb ,_cbe ,"\u0070t\u0061[\u0069\u005d\u002e\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079");
};_deb :=len (_eaab .UndilatedTemplates .Values );_bgg =false ;_fbc :=_bbf (_eaab ,_fce );for _cdcc =_fbc .Next ();_cdcc > -1;{if _gdc ,_bfgb =_eaab .UndilatedTemplates .GetBitmap (_cdcc );_bfgb !=nil {return _g .Wrap (_bfgb ,_cbe ,"\u0070\u0069\u0078\u0061\u0074\u002e\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");
};if _ggc ,_bfgb =_eaab .FgTemplates .GetInt (_cdcc );_bfgb !=nil {_f .Log .Trace ("\u0047\u0065\u0074\u0074\u0069\u006eg\u0020\u0046\u0047\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u005b\u0025d\u005d\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_cdcc ,_bfgb );
};if _feb ,_bfgb =_eaab .DilatedTemplates .GetBitmap (_cdcc );_bfgb !=nil {return _g .Wrap (_bfgb ,_cbe ,"\u0070\u0069\u0078\u0061\u0074\u0064\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");};if _acca ,_bbec ,_bfgb =_eaab .CentroidPointsTemplates .GetGeometry (_cdcc );
_bfgb !=nil {return _g .Wrap (_bfgb ,_cbe ,"\u0043\u0065\u006et\u0072\u006f\u0069\u0064P\u006f\u0069\u006e\u0074\u0073\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u005b\u0069\u0043\u006c\u0061\u0073\u0073\u005d");};_gae ,_bfgb =_db .RankHausTest (_fce ,_fdef ,_gdc ,_feb ,_ddce -_acca ,_acee -_bbec ,MaxDiffWidth ,MaxDiffHeight ,_aaa ,_ggc ,float32 (_eaab .Settings .RankHaus ),_ggf );
if _bfgb !=nil {return _g .Wrap (_bfgb ,_cbe ,"");};if _gae {_bgg =true ;if _bfgb =_eaab .ClassIDs .Add (_cdcc );_bfgb !=nil {return _g .Wrap (_bfgb ,_cbe ,"");};if _bfgb =_eaab .ComponentPageNumbers .Add (_dfg );_bfgb !=nil {return _g .Wrap (_bfgb ,_cbe ,"");
};if _eaab .Settings .KeepClassInstances {_dbb ,_acbf :=_eaab .ClassInstances .GetBitmaps (_cdcc );if _acbf !=nil {return _g .Wrap (_acbf ,_cbe ,"\u0063\u002e\u0050\u0069\u0078\u0061\u0061\u002e\u0047\u0065\u0074B\u0069\u0074\u006d\u0061\u0070\u0073\u0028\u0069\u0043\u006ca\u0073\u0073\u0029");
};if _gdeb ,_acbf =_bee .GetBitmap (_bdb );_acbf !=nil {return _g .Wrap (_acbf ,_cbe ,"\u0070i\u0078\u0061\u005b\u0069\u005d");};_dbb .Values =append (_dbb .Values ,_gdeb );_ebb ,_acbf :=_cfb .Get (_bdb );if _acbf !=nil {return _g .Wrap (_acbf ,_cbe ,"b\u006f\u0078\u0061\u002e\u0047\u0065\u0074\u0028\u0069\u0029");
};_dbb .Boxes =append (_dbb .Boxes ,_ebb );};break ;};};if !_bgg {if _bfgb =_eaab .ClassIDs .Add (_deb );_bfgb !=nil {return _g .Wrap (_bfgb ,_cbe ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _bfgb =_eaab .ComponentPageNumbers .Add (_dfg );_bfgb !=nil {return _g .Wrap (_bfgb ,_cbe ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_afga :=&_db .Bitmaps {};_gdeb =_bee .Values [_bdb ];_afga .AddBitmap (_gdeb );_ccfag ,_aaed :=_gdeb .Width ,_gdeb .Height ;_eaab .TemplatesSize .Add (uint64 (_ccfag )*uint64 (_aaed ),_deb );_gcg ,_fbae :=_cfb .Get (_bdb );if _fbae !=nil {return _g .Wrap (_fbae ,_cbe ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_afga .AddBox (_gcg );_eaab .ClassInstances .AddBitmaps (_afga );_eaab .CentroidPointsTemplates .AddPoint (_ddce ,_acee );_eaab .UndilatedTemplates .AddBitmap (_fce );_eaab .DilatedTemplates .AddBitmap (_fdef );_eaab .FgTemplates .AddInt (_aaa );};};
_eaab .NumberOfClasses =len (_eaab .UndilatedTemplates .Values );return nil ;};