//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package classer ;import (_dd "github.com/unidoc/unipdf/v3/common";_ca "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_e "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";_f "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_d "image";_g "math";
);const JbAddedPixels =6;func (_gge *Classer )addPageComponents (_a *_e .Bitmap ,_fd *_e .Boxes ,_dg *_e .Bitmaps ,_gb int ,_dec Method )error {const _dc ="\u0043l\u0061\u0073\u0073\u0065r\u002e\u0041\u0064\u0064\u0050a\u0067e\u0043o\u006d\u0070\u006f\u006e\u0065\u006e\u0074s";
if _a ==nil {return _f .Error (_dc ,"\u006e\u0069\u006c\u0020\u0069\u006e\u0070\u0075\u0074 \u0070\u0061\u0067\u0065");};if _fd ==nil ||_dg ==nil ||len (*_fd )==0{_dd .Log .Trace ("\u0041\u0064\u0064P\u0061\u0067\u0065\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0073\u002e\u0020\u004e\u006f\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065n\u0074\u0073\u0020\u0066\u006f\u0075\u006e\u0064",_a );
return nil ;};var _gf error ;switch _dec {case RankHaus :_gf =_gge .classifyRankHaus (_fd ,_dg ,_gb );case Correlation :_gf =_gge .classifyCorrelation (_fd ,_dg ,_gb );default:_dd .Log .Debug ("\u0055\u006ek\u006e\u006f\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064\u003a\u0020'%\u0076\u0027",_dec );
return _f .Error (_dc ,"\u0075\u006e\u006bno\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064");};if _gf !=nil {return _f .Wrap (_gf ,_dc ,"");};if _gf =_gge .getULCorners (_a ,_fd );_gf !=nil {return _f .Wrap (_gf ,_dc ,"");
};_ee :=len (*_fd );_gge .BaseIndex +=_ee ;if _gf =_gge .ComponentsNumber .Add (_ee );_gf !=nil {return _f .Wrap (_gf ,_dc ,"");};return nil ;};type Settings struct{MaxCompWidth int ;MaxCompHeight int ;SizeHaus int ;RankHaus float64 ;Thresh float64 ;WeightFactor float64 ;
KeepClassInstances bool ;Components _e .Component ;Method Method ;};const (RankHaus Method =iota ;Correlation ;);func (_fdg Settings )Validate ()error {const _cbg ="\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0073\u002e\u0056\u0061\u006ci\u0064\u0061\u0074\u0065";
if _fdg .Thresh < 0.4||_fdg .Thresh > 0.98{return _f .Error (_cbg ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074\u0068\u0072\u0065\u0073\u0068\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0034\u0020\u002d\u0020\u0030\u002e\u0039\u0038\u005d");
};if _fdg .WeightFactor < 0.0||_fdg .WeightFactor > 1.0{return _f .Error (_cbg ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006ec\u006f\u0064\u0065\u0072\u0020w\u0065\u0069\u0067\u0068\u0074\u0020\u0066\u0061\u0063\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0030\u0020\u002d\u0020\u0031\u002e\u0030\u005d");
};if _fdg .RankHaus < 0.5||_fdg .RankHaus > 1.0{return _f .Error (_cbg ,"\u006a\u0062\u0069\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0072a\u006e\u006b\u0020\u0068\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065 \u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065 [\u0030\u002e\u0035\u0020\u002d\u0020\u0031\u002e\u0030\u005d");
};if _fdg .SizeHaus < 1||_fdg .SizeHaus > 10{return _f .Error (_cbg ,"\u006a\u0062\u0069\u0067\u0032 \u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0073\u0069\u007a\u0065\u0020h\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0031\u0020\u002d\u0020\u0031\u0030]");
};switch _fdg .Components {case _e .ComponentConn ,_e .ComponentCharacters ,_e .ComponentWords :default:return _f .Error (_cbg ,"\u0069n\u0076\u0061\u006c\u0069d\u0020\u0063\u006c\u0061\u0073s\u0065r\u0020c\u006f\u006d\u0070\u006f\u006e\u0065\u006et");
};return nil ;};func DefaultSettings ()Settings {_ffga :=&Settings {};_ffga .SetDefault ();return *_ffga };func (_cabc *Classer )classifyRankHouseNonOne (_dea *_e .Boxes ,_afe ,_ebe ,_geeb *_e .Bitmaps ,_ab *_e .Points ,_bag *_ca .NumSlice ,_eaff int )(_gcbg error ){const _abf ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";
var (_gddb ,_gaea ,_aea ,_fdf float32 ;_adbe ,_ggf ,_caf int ;_egbg ,_gfga ,_agf ,_defd ,_gba *_e .Bitmap ;_aedf ,_agc bool ;);_dbb :=_e .MakePixelSumTab8 ();for _egfa :=0;_egfa < len (_afe .Values );_egfa ++{if _gfga ,_gcbg =_ebe .GetBitmap (_egfa );_gcbg !=nil {return _f .Wrap (_gcbg ,_abf ,"b\u006d\u0073\u0031\u002e\u0047\u0065\u0074\u0028\u0069\u0029");
};if _adbe ,_gcbg =_bag .GetInt (_egfa );_gcbg !=nil {_dd .Log .Trace ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0046\u0047T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073 \u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_egfa ,_gcbg );
};if _agf ,_gcbg =_geeb .GetBitmap (_egfa );_gcbg !=nil {return _f .Wrap (_gcbg ,_abf ,"b\u006d\u0073\u0032\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};if _gddb ,_gaea ,_gcbg =_ab .GetGeometry (_egfa );_gcbg !=nil {return _f .Wrapf (_gcbg ,_abf ,"\u0070t\u0061[\u0069\u005d\u002e\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079");
};_afd :=len (_cabc .UndilatedTemplates .Values );_aedf =false ;_bd :=_ada (_cabc ,_gfga );for _caf =_bd .Next ();_caf > -1;{if _defd ,_gcbg =_cabc .UndilatedTemplates .GetBitmap (_caf );_gcbg !=nil {return _f .Wrap (_gcbg ,_abf ,"\u0070\u0069\u0078\u0061\u0074\u002e\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");
};if _ggf ,_gcbg =_cabc .FgTemplates .GetInt (_caf );_gcbg !=nil {_dd .Log .Trace ("\u0047\u0065\u0074\u0074\u0069\u006eg\u0020\u0046\u0047\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u005b\u0025d\u005d\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_caf ,_gcbg );
};if _gba ,_gcbg =_cabc .DilatedTemplates .GetBitmap (_caf );_gcbg !=nil {return _f .Wrap (_gcbg ,_abf ,"\u0070\u0069\u0078\u0061\u0074\u0064\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");};if _aea ,_fdf ,_gcbg =_cabc .CentroidPointsTemplates .GetGeometry (_caf );
_gcbg !=nil {return _f .Wrap (_gcbg ,_abf ,"\u0043\u0065\u006et\u0072\u006f\u0069\u0064P\u006f\u0069\u006e\u0074\u0073\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u005b\u0069\u0043\u006c\u0061\u0073\u0073\u005d");};_agc ,_gcbg =_e .RankHausTest (_gfga ,_agf ,_defd ,_gba ,_gddb -_aea ,_gaea -_fdf ,MaxDiffWidth ,MaxDiffHeight ,_adbe ,_ggf ,float32 (_cabc .Settings .RankHaus ),_dbb );
if _gcbg !=nil {return _f .Wrap (_gcbg ,_abf ,"");};if _agc {_aedf =true ;if _gcbg =_cabc .ClassIDs .Add (_caf );_gcbg !=nil {return _f .Wrap (_gcbg ,_abf ,"");};if _gcbg =_cabc .ComponentPageNumbers .Add (_eaff );_gcbg !=nil {return _f .Wrap (_gcbg ,_abf ,"");
};if _cabc .Settings .KeepClassInstances {_cde ,_bge :=_cabc .ClassInstances .GetBitmaps (_caf );if _bge !=nil {return _f .Wrap (_bge ,_abf ,"\u0063\u002e\u0050\u0069\u0078\u0061\u0061\u002e\u0047\u0065\u0074B\u0069\u0074\u006d\u0061\u0070\u0073\u0028\u0069\u0043\u006ca\u0073\u0073\u0029");
};if _egbg ,_bge =_afe .GetBitmap (_egfa );_bge !=nil {return _f .Wrap (_bge ,_abf ,"\u0070i\u0078\u0061\u005b\u0069\u005d");};_cde .Values =append (_cde .Values ,_egbg );_ega ,_bge :=_dea .Get (_egfa );if _bge !=nil {return _f .Wrap (_bge ,_abf ,"b\u006f\u0078\u0061\u002e\u0047\u0065\u0074\u0028\u0069\u0029");
};_cde .Boxes =append (_cde .Boxes ,_ega );};break ;};};if !_aedf {if _gcbg =_cabc .ClassIDs .Add (_afd );_gcbg !=nil {return _f .Wrap (_gcbg ,_abf ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _gcbg =_cabc .ComponentPageNumbers .Add (_eaff );_gcbg !=nil {return _f .Wrap (_gcbg ,_abf ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_feg :=&_e .Bitmaps {};_egbg =_afe .Values [_egfa ];_feg .AddBitmap (_egbg );_cad ,_agb :=_egbg .Width ,_egbg .Height ;_cabc .TemplatesSize .Add (uint64 (_cad )*uint64 (_agb ),_afd );_fba ,_deb :=_dea .Get (_egfa );if _deb !=nil {return _f .Wrap (_deb ,_abf ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_feg .AddBox (_fba );_cabc .ClassInstances .AddBitmaps (_feg );_cabc .CentroidPointsTemplates .AddPoint (_gddb ,_gaea );_cabc .UndilatedTemplates .AddBitmap (_gfga );_cabc .DilatedTemplates .AddBitmap (_agf );_cabc .FgTemplates .AddInt (_adbe );};};_cabc .NumberOfClasses =len (_cabc .UndilatedTemplates .Values );
return nil ;};func (_fg *Classer )ComputeLLCorners ()(_ggb error ){const _eb ="\u0043l\u0061\u0073\u0073\u0065\u0072\u002e\u0043\u006f\u006d\u0070\u0075t\u0065\u004c\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";if _fg .PtaUL ==nil {return _f .Error (_eb ,"\u0055\u004c\u0020\u0043or\u006e\u0065\u0072\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006ee\u0064");
};_ga :=len (*_fg .PtaUL );_fg .PtaLL =&_e .Points {};var (_cc ,_cce float32 ;_de ,_b int ;_fa *_e .Bitmap ;);for _ea :=0;_ea < _ga ;_ea ++{_cc ,_cce ,_ggb =_fg .PtaUL .GetGeometry (_ea );if _ggb !=nil {_dd .Log .Debug ("\u0047e\u0074\u0074\u0069\u006e\u0067\u0020\u0050\u0074\u0061\u0055\u004c \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_ggb );
return _f .Wrap (_ggb ,_eb ,"\u0050\u0074\u0061\u0055\u004c\u0020\u0047\u0065\u006fm\u0065\u0074\u0072\u0079");};_de ,_ggb =_fg .ClassIDs .Get (_ea );if _ggb !=nil {_dd .Log .Debug ("\u0047\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0043\u006c\u0061s\u0073\u0049\u0044\u0020\u0066\u0061\u0069\u006c\u0065\u0064:\u0020\u0025\u0076",_ggb );
return _f .Wrap (_ggb ,_eb ,"\u0043l\u0061\u0073\u0073\u0049\u0044");};_fa ,_ggb =_fg .UndilatedTemplates .GetBitmap (_de );if _ggb !=nil {_dd .Log .Debug ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0055\u006ed\u0069\u006c\u0061\u0074\u0065\u0064\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_ggb );
return _f .Wrap (_ggb ,_eb ,"\u0055\u006e\u0064\u0069la\u0074\u0065\u0064\u0020\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");};_b =_fa .Height ;_fg .PtaLL .AddPoint (_cc ,_cce +float32 (_b ));};return nil ;};func Init (settings Settings )(*Classer ,error ){const _cd ="\u0063\u006c\u0061s\u0073\u0065\u0072\u002e\u0049\u006e\u0069\u0074";
_ge :=&Classer {Settings :settings ,Widths :map[int ]int {},Heights :map[int ]int {},TemplatesSize :_ca .IntsMap {},TemplateAreas :&_ca .IntSlice {},ComponentPageNumbers :&_ca .IntSlice {},ClassIDs :&_ca .IntSlice {},ComponentsNumber :&_ca .IntSlice {},CentroidPoints :&_e .Points {},CentroidPointsTemplates :&_e .Points {},UndilatedTemplates :&_e .Bitmaps {},DilatedTemplates :&_e .Bitmaps {},ClassInstances :&_e .BitmapsArray {},FgTemplates :&_ca .NumSlice {}};
if _fc :=_ge .Settings .Validate ();_fc !=nil {return nil ,_f .Wrap (_fc ,_cd ,"");};return _ge ,nil ;};func (_eg *Classer )verifyMethod (_bbd Method )error {if _bbd !=RankHaus &&_bbd !=Correlation {return _f .Error ("\u0076\u0065\u0072i\u0066\u0079\u004d\u0065\u0074\u0068\u006f\u0064","\u0069\u006e\u0076\u0061li\u0064\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072\u0020\u006d\u0065\u0074\u0068o\u0064");
};return nil ;};func _aa (_eaf *_e .Bitmap ,_fgc ,_cf ,_aec ,_ag int ,_bgc *_e .Bitmap )(_ddg _d .Point ,_egf error ){const _ff ="\u0066i\u006e\u0061\u006c\u0041l\u0069\u0067\u006e\u006d\u0065n\u0074P\u006fs\u0069\u0074\u0069\u006f\u006e\u0069\u006eg";
if _eaf ==nil {return _ddg ,_f .Error (_ff ,"\u0073\u006f\u0075\u0072ce\u0020\u006e\u006f\u0074\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064");};if _bgc ==nil {return _ddg ,_f .Error (_ff ,"t\u0065\u006d\u0070\u006cat\u0065 \u006e\u006f\u0074\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064");
};_dac ,_ba :=_bgc .Width ,_bgc .Height ;_cdb ,_ggc :=_fgc -_aec -JbAddedPixels ,_cf -_ag -JbAddedPixels ;_dd .Log .Trace ("\u0078\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0079\u003a\u0020\u0027\u0025\u0064'\u002c\u0020\u0077\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0068\u003a \u0027\u0025\u0064\u0027\u002c\u0020\u0062\u0078\u003a\u0020\u0027\u0025d'\u002c\u0020\u0062\u0079\u003a\u0020\u0027\u0025\u0064\u0027",_fgc ,_cf ,_dac ,_ba ,_cdb ,_ggc );
_edc ,_egf :=_e .Rect (_cdb ,_ggc ,_dac ,_ba );if _egf !=nil {return _ddg ,_f .Wrap (_egf ,_ff ,"");};_cfe ,_ ,_egf :=_eaf .ClipRectangle (_edc );if _egf !=nil {_dd .Log .Error ("\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069\u0070\u0020\u0072\u0065c\u0074\u0061\u006e\u0067\u006c\u0065\u003a\u0020\u0025\u0076",_edc );
return _ddg ,_f .Wrap (_egf ,_ff ,"");};_bba :=_e .New (_cfe .Width ,_cfe .Height );_gfg :=_g .MaxInt32 ;var _db ,_bbf ,_ddc ,_ebc ,_eafe int ;for _db =-1;_db <=1;_db ++{for _bbf =-1;_bbf <=1;_bbf ++{if _ ,_egf =_e .Copy (_bba ,_cfe );_egf !=nil {return _ddg ,_f .Wrap (_egf ,_ff ,"");
};if _egf =_bba .RasterOperation (_bbf ,_db ,_dac ,_ba ,_e .PixSrcXorDst ,_bgc ,0,0);_egf !=nil {return _ddg ,_f .Wrap (_egf ,_ff ,"");};_ddc =_bba .CountPixels ();if _ddc < _gfg {_ebc =_bbf ;_eafe =_db ;_gfg =_ddc ;};};};_ddg .X =_ebc ;_ddg .Y =_eafe ;
return _ddg ,nil ;};func _ada (_fea *Classer ,_fead *_e .Bitmap )*similarTemplatesFinder {return &similarTemplatesFinder {Width :_fead .Width ,Height :_fead .Height ,Classer :_fea };};type Classer struct{BaseIndex int ;Settings Settings ;ComponentsNumber *_ca .IntSlice ;
TemplateAreas *_ca .IntSlice ;Widths map[int ]int ;Heights map[int ]int ;NumberOfClasses int ;ClassInstances *_e .BitmapsArray ;UndilatedTemplates *_e .Bitmaps ;DilatedTemplates *_e .Bitmaps ;TemplatesSize _ca .IntsMap ;FgTemplates *_ca .NumSlice ;CentroidPoints *_e .Points ;
CentroidPointsTemplates *_e .Points ;ClassIDs *_ca .IntSlice ;ComponentPageNumbers *_ca .IntSlice ;PtaUL *_e .Points ;PtaLL *_e .Points ;};func (_gfb *Classer )classifyCorrelation (_agg *_e .Boxes ,_ccf *_e .Bitmaps ,_fgf int )error {const _accc ="\u0063\u006c\u0061\u0073si\u0066\u0079\u0043\u006f\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e";
if _agg ==nil {return _f .Error (_accc ,"\u006e\u0065\u0077\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0062\u006f\u0075\u006e\u0064\u0069\u006e\u0067\u0020\u0062o\u0078\u0065\u0073\u0020\u006eo\u0074\u0020f\u006f\u0075\u006e\u0064");
};if _ccf ==nil {return _f .Error (_accc ,"\u006e\u0065wC\u006f\u006d\u0070o\u006e\u0065\u006e\u0074s b\u0069tm\u0061\u0070\u0020\u0061\u0072\u0072\u0061y \u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064");};_adb :=len (_ccf .Values );if _adb ==0{_dd .Log .Debug ("\u0063l\u0061\u0073s\u0069\u0066\u0079C\u006f\u0072\u0072\u0065\u006c\u0061\u0074i\u006f\u006e\u0020\u002d\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0070\u0069\u0078\u0061s\u0020\u0069\u0073\u0020\u0065\u006d\u0070\u0074\u0079");
return nil ;};var (_ggbe ,_bgb *_e .Bitmap ;_fbgd error ;);_dcd :=&_e .Bitmaps {Values :make ([]*_e .Bitmap ,_adb )};for _cdc ,_cag :=range _ccf .Values {_bgb ,_fbgd =_cag .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);
if _fbgd !=nil {return _f .Wrap (_fbgd ,_accc ,"");};_dcd .Values [_cdc ]=_bgb ;};_aca :=_gfb .FgTemplates ;_cfg :=_e .MakePixelSumTab8 ();_acaf :=_e .MakePixelCentroidTab8 ();_bfb :=make ([]int ,_adb );_cfgd :=make ([][]int ,_adb );_bfc :=_e .Points (make ([]_e .Point ,_adb ));
_cfa :=&_bfc ;var (_ddgb ,_fe int ;_df ,_bgd ,_af int ;_edf ,_eba int ;_ddb byte ;);for _cgf ,_ffc :=range _dcd .Values {_cfgd [_cgf ]=make ([]int ,_ffc .Height );_ddgb =0;_fe =0;_bgd =(_ffc .Height -1)*_ffc .RowStride ;_df =0;for _eba =_ffc .Height -1;
_eba >=0;_eba ,_bgd =_eba -1,_bgd -_ffc .RowStride {_cfgd [_cgf ][_eba ]=_df ;_af =0;for _edf =0;_edf < _ffc .RowStride ;_edf ++{_ddb =_ffc .Data [_bgd +_edf ];_af +=_cfg [_ddb ];_ddgb +=_acaf [_ddb ]+_edf *8*_cfg [_ddb ];};_df +=_af ;_fe +=_af *_eba ;
};_bfb [_cgf ]=_df ;if _df > 0{(*_cfa )[_cgf ]=_e .Point {X :float32 (_ddgb )/float32 (_df ),Y :float32 (_fe )/float32 (_df )};}else {(*_cfa )[_cgf ]=_e .Point {X :float32 (_ffc .Width )/float32 (2),Y :float32 (_ffc .Height )/float32 (2)};};};if _fbgd =_gfb .CentroidPoints .Add (_cfa );
_fbgd !=nil {return _f .Wrap (_fbgd ,_accc ,"\u0063\u0065\u006et\u0072\u006f\u0069\u0064\u0020\u0061\u0064\u0064");};var (_bfe ,_ffb ,_egd int ;_bbg float64 ;_aed ,_fcg ,_ede ,_def float32 ;_be ,_aggf _e .Point ;_ffg bool ;_gfgbf *similarTemplatesFinder ;
_eaa int ;_eeac *_e .Bitmap ;_ead *_d .Rectangle ;_ged *_e .Bitmaps ;);for _eaa ,_bgb =range _dcd .Values {_ffb =_bfb [_eaa ];if _aed ,_fcg ,_fbgd =_cfa .GetGeometry (_eaa );_fbgd !=nil {return _f .Wrap (_fbgd ,_accc ,"\u0070t\u0061\u0020\u002d\u0020\u0069");
};_ffg =false ;_cbd :=len (_gfb .UndilatedTemplates .Values );_gfgbf =_ada (_gfb ,_bgb );for _dfe :=_gfgbf .Next ();_dfe > -1;{if _eeac ,_fbgd =_gfb .UndilatedTemplates .GetBitmap (_dfe );_fbgd !=nil {return _f .Wrap (_fbgd ,_accc ,"\u0075\u006e\u0069dl\u0061\u0074\u0065\u0064\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0062\u006d\u0032");
};if _egd ,_fbgd =_aca .GetInt (_dfe );_fbgd !=nil {_dd .Log .Trace ("\u0046\u0047\u0020T\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u005b\u0069\u0063\u006ca\u0073\u0073\u005d\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_fbgd );};
if _ede ,_def ,_fbgd =_gfb .CentroidPointsTemplates .GetGeometry (_dfe );_fbgd !=nil {return _f .Wrap (_fbgd ,_accc ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074T\u0065\u006d\u0070\u006c\u0061\u0074e\u0073\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u00782\u002c\u0079\u0032\u0020");
};if _gfb .Settings .WeightFactor > 0.0{if _bfe ,_fbgd =_gfb .TemplateAreas .Get (_dfe );_fbgd !=nil {_dd .Log .Trace ("\u0054\u0065\u006dp\u006c\u0061\u0074\u0065A\u0072\u0065\u0061\u0073\u005b\u0069\u0063l\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0061\u0072\u0065\u0061\u0020\u0025\u0076",_fbgd );
};_bbg =_gfb .Settings .Thresh +(1.0-_gfb .Settings .Thresh )*_gfb .Settings .WeightFactor *float64 (_egd )/float64 (_bfe );}else {_bbg =_gfb .Settings .Thresh ;};_gbe ,_fdd :=_e .CorrelationScoreThresholded (_bgb ,_eeac ,_ffb ,_egd ,_be .X -_aggf .X ,_be .Y -_aggf .Y ,MaxDiffWidth ,MaxDiffHeight ,_cfg ,_cfgd [_eaa ],float32 (_bbg ));
if _fdd !=nil {return _f .Wrap (_fdd ,_accc ,"");};if _gfgb {var (_eadf ,_fda float64 ;_gcb ,_faa int ;);_eadf ,_fdd =_e .CorrelationScore (_bgb ,_eeac ,_ffb ,_egd ,_aed -_ede ,_fcg -_def ,MaxDiffWidth ,MaxDiffHeight ,_cfg );if _fdd !=nil {return _f .Wrap (_fdd ,_accc ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");
};_fda ,_fdd =_e .CorrelationScoreSimple (_bgb ,_eeac ,_ffb ,_egd ,_aed -_ede ,_fcg -_def ,MaxDiffWidth ,MaxDiffHeight ,_cfg );if _fdd !=nil {return _f .Wrap (_fdd ,_accc ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");
};_gcb =int (_g .Sqrt (_eadf *float64 (_ffb )*float64 (_egd )));_faa =int (_g .Sqrt (_fda *float64 (_ffb )*float64 (_egd )));if (_eadf >=_bbg )!=(_fda >=_bbg ){return _f .Errorf (_accc ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043\u006f\u0072r\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0063\u006f\u0072\u0065\u0020\u006d\u0069\u0073\u006d\u0061\u0074\u0063\u0068\u0020-\u0020\u0025d\u0028\u00250\u002e\u0034\u0066\u002c\u0020\u0025\u0076\u0029\u0020\u0076\u0073\u0020\u0025d(\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0076)\u0020\u0025\u0030\u002e\u0034\u0066",_gcb ,_eadf ,_eadf >=_bbg ,_faa ,_fda ,_fda >=_bbg ,_eadf -_fda );
};if _eadf >=_bbg !=_gbe {return _f .Errorf (_accc ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043o\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e \u0073\u0063\u006f\u0072\u0065 \u004d\u0069\u0073\u006d\u0061t\u0063\u0068 \u0062\u0065\u0074w\u0065\u0065\u006e\u0020\u0063\u006frr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020/\u0020\u0074\u0068\u0072\u0065s\u0068\u006f\u006c\u0064\u002e\u0020\u0043\u006f\u006dpa\u0072\u0069\u0073\u006f\u006e:\u0020\u0025\u0030\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0064\u0029\u0020\u003e\u003d\u0020\u00250\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u0029\u0020\u0076\u0073\u0020\u0025\u0076",_eadf ,_eadf *float64 (_ffb )*float64 (_egd ),_gcb ,_bbg ,float32 (_bbg )*float32 (_ffb )*float32 (_egd ),_gbe );
};};if _gbe {_ffg =true ;if _fdd =_gfb .ClassIDs .Add (_dfe );_fdd !=nil {return _f .Wrap (_fdd ,_accc ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");};if _fdd =_gfb .ComponentPageNumbers .Add (_fgf );_fdd !=nil {return _f .Wrap (_fdd ,_accc ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");
};if _gfb .Settings .KeepClassInstances {if _ggbe ,_fdd =_ccf .GetBitmap (_eaa );_fdd !=nil {return _f .Wrap (_fdd ,_accc ,"\u004b\u0065\u0065\u0070Cl\u0061\u0073\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u002d \u0069");};if _ged ,_fdd =_gfb .ClassInstances .GetBitmaps (_dfe );
_fdd !=nil {return _f .Wrap (_fdd ,_accc ,"K\u0065\u0065\u0070\u0043\u006c\u0061s\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065s\u0020\u002d\u0020i\u0043l\u0061\u0073\u0073");};_ged .AddBitmap (_ggbe );if _ead ,_fdd =_agg .Get (_eaa );_fdd !=nil {return _f .Wrap (_fdd ,_accc ,"\u004be\u0065p\u0043\u006c\u0061\u0073\u0073I\u006e\u0073t\u0061\u006e\u0063\u0065\u0073");
};_ged .AddBox (_ead );};break ;};};if !_ffg {if _fbgd =_gfb .ClassIDs .Add (_cbd );_fbgd !=nil {return _f .Wrap (_fbgd ,_accc ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _fbgd =_gfb .ComponentPageNumbers .Add (_fgf );_fbgd !=nil {return _f .Wrap (_fbgd ,_accc ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_ged =&_e .Bitmaps {};if _ggbe ,_fbgd =_ccf .GetBitmap (_eaa );_fbgd !=nil {return _f .Wrap (_fbgd ,_accc ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_ged .AddBitmap (_ggbe );_eadg ,_fgca :=_ggbe .Width ,_ggbe .Height ;_ebf :=uint64 (_fgca )*uint64 (_eadg );
_gfb .TemplatesSize .Add (_ebf ,_cbd );if _ead ,_fbgd =_agg .Get (_eaa );_fbgd !=nil {return _f .Wrap (_fbgd ,_accc ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_ged .AddBox (_ead );_gfb .ClassInstances .AddBitmaps (_ged );_gfb .CentroidPointsTemplates .AddPoint (_aed ,_fcg );
_gfb .FgTemplates .AddInt (_ffb );_gfb .UndilatedTemplates .AddBitmap (_ggbe );_bfe =(_bgb .Width -2*JbAddedPixels )*(_bgb .Height -2*JbAddedPixels );if _fbgd =_gfb .TemplateAreas .Add (_bfe );_fbgd !=nil {return _f .Wrap (_fbgd ,_accc ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};};};_gfb .NumberOfClasses =len (_gfb .UndilatedTemplates .Values );return nil ;};type similarTemplatesFinder struct{Classer *Classer ;Width int ;Height int ;Index int ;CurrentNumbers []int ;N int ;};const (MaxConnCompWidth =350;MaxCharCompWidth =350;
MaxWordCompWidth =1000;MaxCompHeight =120;);func (_ebcd *Classer )classifyRankHouseOne (_ddf *_e .Boxes ,_baee ,_cfc ,_ggec *_e .Bitmaps ,_daa *_e .Points ,_dfg int )(_cdf error ){const _ffa ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";
var (_fac ,_dgg ,_bfee ,_ded float32 ;_cgd int ;_egb ,_ec ,_ccg ,_bfbd ,_bcb *_e .Bitmap ;_dda ,_bce bool ;);for _ddfg :=0;_ddfg < len (_baee .Values );_ddfg ++{_ec =_cfc .Values [_ddfg ];_ccg =_ggec .Values [_ddfg ];_fac ,_dgg ,_cdf =_daa .GetGeometry (_ddfg );
if _cdf !=nil {return _f .Wrapf (_cdf ,_ffa ,"\u0066\u0069\u0072\u0073\u0074\u0020\u0067\u0065\u006fm\u0065\u0074\u0072\u0079");};_aff :=len (_ebcd .UndilatedTemplates .Values );_dda =false ;_cgde :=_ada (_ebcd ,_ec );for _cgd =_cgde .Next ();_cgd > -1;
{_bfbd ,_cdf =_ebcd .UndilatedTemplates .GetBitmap (_cgd );if _cdf !=nil {return _f .Wrap (_cdf ,_ffa ,"\u0062\u006d\u0033");};_bcb ,_cdf =_ebcd .DilatedTemplates .GetBitmap (_cgd );if _cdf !=nil {return _f .Wrap (_cdf ,_ffa ,"\u0062\u006d\u0034");};_bfee ,_ded ,_cdf =_ebcd .CentroidPointsTemplates .GetGeometry (_cgd );
if _cdf !=nil {return _f .Wrap (_cdf ,_ffa ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0073");};_bce ,_cdf =_e .HausTest (_ec ,_ccg ,_bfbd ,_bcb ,_fac -_bfee ,_dgg -_ded ,MaxDiffWidth ,MaxDiffHeight );
if _cdf !=nil {return _f .Wrap (_cdf ,_ffa ,"");};if _bce {_dda =true ;if _cdf =_ebcd .ClassIDs .Add (_cgd );_cdf !=nil {return _f .Wrap (_cdf ,_ffa ,"");};if _cdf =_ebcd .ComponentPageNumbers .Add (_dfg );_cdf !=nil {return _f .Wrap (_cdf ,_ffa ,"");};
if _ebcd .Settings .KeepClassInstances {_cge ,_gae :=_ebcd .ClassInstances .GetBitmaps (_cgd );if _gae !=nil {return _f .Wrap (_gae ,_ffa ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_egb ,_gae =_baee .GetBitmap (_ddfg );if _gae !=nil {return _f .Wrap (_gae ,_ffa ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");
};_cge .AddBitmap (_egb );_fbf ,_gae :=_ddf .Get (_ddfg );if _gae !=nil {return _f .Wrap (_gae ,_ffa ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_cge .AddBox (_fbf );};break ;};};if !_dda {if _cdf =_ebcd .ClassIDs .Add (_aff );_cdf !=nil {return _f .Wrap (_cdf ,_ffa ,"");
};if _cdf =_ebcd .ComponentPageNumbers .Add (_dfg );_cdf !=nil {return _f .Wrap (_cdf ,_ffa ,"");};_dbf :=&_e .Bitmaps {};_egb ,_cdf =_baee .GetBitmap (_ddfg );if _cdf !=nil {return _f .Wrap (_cdf ,_ffa ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_dbf .Values =append (_dbf .Values ,_egb );
_gdd ,_gce :=_egb .Width ,_egb .Height ;_ebcd .TemplatesSize .Add (uint64 (_gce )*uint64 (_gdd ),_aff );_dfga ,_daf :=_ddf .Get (_ddfg );if _daf !=nil {return _f .Wrap (_daf ,_ffa ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_dbf .AddBox (_dfga );_ebcd .ClassInstances .AddBitmaps (_dbf );
_ebcd .CentroidPointsTemplates .AddPoint (_fac ,_dgg );_ebcd .UndilatedTemplates .AddBitmap (_ec );_ebcd .DilatedTemplates .AddBitmap (_ccg );};};return nil ;};func (_bae *Classer )classifyRankHaus (_cab *_e .Boxes ,_adba *_e .Bitmaps ,_gd int )error {const _ccea ="\u0063\u006ca\u0073\u0073\u0069f\u0079\u0052\u0061\u006e\u006b\u0048\u0061\u0075\u0073";
if _cab ==nil {return _f .Error (_ccea ,"\u0062\u006fx\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if _adba ==nil {return _f .Error (_ccea ,"\u0070\u0069x\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};_ef :=len (_adba .Values );if _ef ==0{return _f .Error (_ccea ,"e\u006dp\u0074\u0079\u0020\u006e\u0065\u0077\u0020\u0063o\u006d\u0070\u006f\u006een\u0074\u0073");};_acd :=_adba .CountPixels ();_bgbg :=_bae .Settings .SizeHaus ;_cbf :=_e .SelCreateBrick (_bgbg ,_bgbg ,_bgbg /2,_bgbg /2,_e .SelHit );
_acf :=&_e .Bitmaps {Values :make ([]*_e .Bitmap ,_ef )};_gad :=&_e .Bitmaps {Values :make ([]*_e .Bitmap ,_ef )};var (_agd ,_fge ,_eac *_e .Bitmap ;_eec error ;);for _gbed :=0;_gbed < _ef ;_gbed ++{_agd ,_eec =_adba .GetBitmap (_gbed );if _eec !=nil {return _f .Wrap (_eec ,_ccea ,"");
};_fge ,_eec =_agd .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);if _eec !=nil {return _f .Wrap (_eec ,_ccea ,"");};_eac ,_eec =_e .Dilate (nil ,_fge ,_cbf );if _eec !=nil {return _f .Wrap (_eec ,_ccea ,"");};_acf .Values [_ef ]=_fge ;
_gad .Values [_ef ]=_eac ;};_bcg ,_eec :=_e .Centroids (_acf .Values );if _eec !=nil {return _f .Wrap (_eec ,_ccea ,"");};if _eec =_bcg .Add (_bae .CentroidPoints );_eec !=nil {_dd .Log .Trace ("\u004e\u006f\u0020\u0063en\u0074\u0072\u006f\u0069\u0064\u0073\u0020\u0074\u006f\u0020\u0061\u0064\u0064");
};if _bae .Settings .RankHaus ==1.0{_eec =_bae .classifyRankHouseOne (_cab ,_adba ,_acf ,_gad ,_bcg ,_gd );}else {_eec =_bae .classifyRankHouseNonOne (_cab ,_adba ,_acf ,_gad ,_bcg ,_acd ,_gd );};if _eec !=nil {return _f .Wrap (_eec ,_ccea ,"");};return nil ;
};type Method int ;func (_bb *Classer )getULCorners (_ac *_e .Bitmap ,_dag *_e .Boxes )error {const _bc ="\u0067\u0065\u0074U\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";if _ac ==nil {return _f .Error (_bc ,"\u006e\u0069l\u0020\u0069\u006da\u0067\u0065\u0020\u0062\u0069\u0074\u006d\u0061\u0070");
};if _dag ==nil {return _f .Error (_bc ,"\u006e\u0069\u006c\u0020\u0062\u006f\u0075\u006e\u0064\u0073");};if _bb .PtaUL ==nil {_bb .PtaUL =&_e .Points {};};_dde :=len (*_dag );var (_bg ,_acc ,_cb ,_gbf int ;_cba ,_fb ,_ggbf ,_ed float32 ;_bf error ;_ae *_d .Rectangle ;
_aeb *_e .Bitmap ;_eea _d .Point ;);for _dge :=0;_dge < _dde ;_dge ++{_bg =_bb .BaseIndex +_dge ;if _cba ,_fb ,_bf =_bb .CentroidPoints .GetGeometry (_bg );_bf !=nil {return _f .Wrap (_bf ,_bc ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050o\u0069\u006e\u0074\u0073");
};if _acc ,_bf =_bb .ClassIDs .Get (_bg );_bf !=nil {return _f .Wrap (_bf ,_bc ,"\u0043\u006c\u0061s\u0073\u0049\u0044\u0073\u002e\u0047\u0065\u0074");};if _ggbf ,_ed ,_bf =_bb .CentroidPointsTemplates .GetGeometry (_acc );_bf !=nil {return _f .Wrap (_bf ,_bc ,"\u0043\u0065\u006etr\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074\u0073\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");
};_gc :=_ggbf -_cba ;_dagb :=_ed -_fb ;if _gc >=0{_cb =int (_gc +0.5);}else {_cb =int (_gc -0.5);};if _dagb >=0{_gbf =int (_dagb +0.5);}else {_gbf =int (_dagb -0.5);};if _ae ,_bf =_dag .Get (_dge );_bf !=nil {return _f .Wrap (_bf ,_bc ,"");};_cg ,_ad :=_ae .Min .X ,_ae .Min .Y ;
_aeb ,_bf =_bb .UndilatedTemplates .GetBitmap (_acc );if _bf !=nil {return _f .Wrap (_bf ,_bc ,"\u0055\u006e\u0064\u0069\u006c\u0061\u0074\u0065\u0064\u0054e\u006d\u0070\u006c\u0061\u0074\u0065\u0073.\u0047\u0065\u0074\u0028\u0069\u0043\u006c\u0061\u0073\u0073\u0029");
};_eea ,_bf =_aa (_ac ,_cg ,_ad ,_cb ,_gbf ,_aeb );if _bf !=nil {return _f .Wrap (_bf ,_bc ,"");};_bb .PtaUL .AddPoint (float32 (_cg -_cb +_eea .X ),float32 (_ad -_gbf +_eea .Y ));};return nil ;};const (MaxDiffWidth =2;MaxDiffHeight =2;);func (_gg *Classer )AddPage (inputPage *_e .Bitmap ,pageNumber int ,method Method )(_da error ){const _ce ="\u0043l\u0061s\u0073\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";
_gg .Widths [pageNumber ]=inputPage .Width ;_gg .Heights [pageNumber ]=inputPage .Height ;if _da =_gg .verifyMethod (method );_da !=nil {return _f .Wrap (_da ,_ce ,"");};_gec ,_gee ,_da :=inputPage .GetComponents (_gg .Settings .Components ,_gg .Settings .MaxCompWidth ,_gg .Settings .MaxCompHeight );
if _da !=nil {return _f .Wrap (_da ,_ce ,"");};_dd .Log .Debug ("\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_gec );if _da =_gg .addPageComponents (inputPage ,_gee ,_gec ,pageNumber ,method );_da !=nil {return _f .Wrap (_da ,_ce ,"");
};return nil ;};func (_dfa *Settings )SetDefault (){if _dfa .MaxCompWidth ==0{switch _dfa .Components {case _e .ComponentConn :_dfa .MaxCompWidth =MaxConnCompWidth ;case _e .ComponentCharacters :_dfa .MaxCompWidth =MaxCharCompWidth ;case _e .ComponentWords :_dfa .MaxCompWidth =MaxWordCompWidth ;
};};if _dfa .MaxCompHeight ==0{_dfa .MaxCompHeight =MaxCompHeight ;};if _dfa .Thresh ==0.0{_dfa .Thresh =0.9;};if _dfa .WeightFactor ==0.0{_dfa .WeightFactor =0.75;};if _dfa .RankHaus ==0.0{_dfa .RankHaus =0.97;};if _dfa .SizeHaus ==0{_dfa .SizeHaus =2;
};};var TwoByTwoWalk =[]int {0,0,0,1,-1,0,0,-1,1,0,-1,1,1,1,-1,-1,1,-1,0,-2,2,0,0,2,-2,0,-1,-2,1,-2,2,-1,2,1,1,2,-1,2,-2,1,-2,-1,-2,-2,2,-2,2,2,-2,2};func (_afc *similarTemplatesFinder )Next ()int {var (_dfeg ,_dbfc ,_fbb ,_bed int ;_fdc bool ;_edfa *_e .Bitmap ;
_dafd error ;);for {if _afc .Index >=25{return -1;};_dbfc =_afc .Width +TwoByTwoWalk [2*_afc .Index ];_dfeg =_afc .Height +TwoByTwoWalk [2*_afc .Index +1];if _dfeg < 1||_dbfc < 1{_afc .Index ++;continue ;};if len (_afc .CurrentNumbers )==0{_afc .CurrentNumbers ,_fdc =_afc .Classer .TemplatesSize .GetSlice (uint64 (_dbfc )*uint64 (_dfeg ));
if !_fdc {_afc .Index ++;continue ;};_afc .N =0;};_fbb =len (_afc .CurrentNumbers );for ;_afc .N < _fbb ;_afc .N ++{_bed =_afc .CurrentNumbers [_afc .N ];_edfa ,_dafd =_afc .Classer .DilatedTemplates .GetBitmap (_bed );if _dafd !=nil {_dd .Log .Debug ("\u0046\u0069\u006e\u0064\u004e\u0065\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0074\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u006e\u006f\u0074 \u0066\u006fu\u006e\u0064\u003a\u0020");
return 0;};if _edfa .Width -2*JbAddedPixels ==_dbfc &&_edfa .Height -2*JbAddedPixels ==_dfeg {return _bed ;};};_afc .Index ++;_afc .CurrentNumbers =nil ;};};var _gfgb bool ;