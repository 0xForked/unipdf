//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package classer ;import (_b "github.com/unidoc/unipdf/v3/common";_e "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_da "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";_bg "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_c "image";_f "math";
);func (_bbg *Classer )ComputeLLCorners ()(_de error ){const _cc ="\u0043l\u0061\u0073\u0073\u0065\u0072\u002e\u0043\u006f\u006d\u0070\u0075t\u0065\u004c\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";if _bbg .PtaUL ==nil {return _bg .Error (_cc ,"\u0055\u004c\u0020\u0043or\u006e\u0065\u0072\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006ee\u0064");
};_dd :=len (*_bbg .PtaUL );_bbg .PtaLL =&_da .Points {};var (_af ,_dde float32 ;_efc ,_ge int ;_fa *_da .Bitmap ;);for _geg :=0;_geg < _dd ;_geg ++{_af ,_dde ,_de =_bbg .PtaUL .GetGeometry (_geg );if _de !=nil {_b .Log .Debug ("\u0047e\u0074\u0074\u0069\u006e\u0067\u0020\u0050\u0074\u0061\u0055\u004c \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_de );
return _bg .Wrap (_de ,_cc ,"\u0050\u0074\u0061\u0055\u004c\u0020\u0047\u0065\u006fm\u0065\u0074\u0072\u0079");};_efc ,_de =_bbg .ClassIDs .Get (_geg );if _de !=nil {_b .Log .Debug ("\u0047\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0043\u006c\u0061s\u0073\u0049\u0044\u0020\u0066\u0061\u0069\u006c\u0065\u0064:\u0020\u0025\u0076",_de );
return _bg .Wrap (_de ,_cc ,"\u0043l\u0061\u0073\u0073\u0049\u0044");};_fa ,_de =_bbg .UndilatedTemplates .GetBitmap (_efc );if _de !=nil {_b .Log .Debug ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0055\u006ed\u0069\u006c\u0061\u0074\u0065\u0064\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_de );
return _bg .Wrap (_de ,_cc ,"\u0055\u006e\u0064\u0069la\u0074\u0065\u0064\u0020\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");};_ge =_fa .Height ;_bbg .PtaLL .AddPoint (_af ,_dde +float32 (_ge ));};return nil ;};func _cfdb (_bec *Classer ,_eba *_da .Bitmap )*similarTemplatesFinder {return &similarTemplatesFinder {Width :_eba .Width ,Height :_eba .Height ,Classer :_bec };
};func (_beb *Classer )AddPage (inputPage *_da .Bitmap ,pageNumber int ,method Method )(_ef error ){const _ec ="\u0043l\u0061s\u0073\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_beb .Widths [pageNumber ]=inputPage .Width ;_beb .Heights [pageNumber ]=inputPage .Height ;
if _ef =_beb .verifyMethod (method );_ef !=nil {return _bg .Wrap (_ef ,_ec ,"");};_a ,_fg ,_ef :=inputPage .GetComponents (_beb .Settings .Components ,_beb .Settings .MaxCompWidth ,_beb .Settings .MaxCompHeight );if _ef !=nil {return _bg .Wrap (_ef ,_ec ,"");
};_b .Log .Debug ("\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_a );if _ef =_beb .addPageComponents (inputPage ,_fg ,_a ,pageNumber ,method );_ef !=nil {return _bg .Wrap (_ef ,_ec ,"");};return nil ;};func (_bce *Classer )verifyMethod (_bebg Method )error {if _bebg !=RankHaus &&_bebg !=Correlation {return _bg .Error ("\u0076\u0065\u0072i\u0066\u0079\u004d\u0065\u0074\u0068\u006f\u0064","\u0069\u006e\u0076\u0061li\u0064\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072\u0020\u006d\u0065\u0074\u0068o\u0064");
};return nil ;};func (_ddeb *Settings )SetDefault (){if _ddeb .MaxCompWidth ==0{switch _ddeb .Components {case _da .ComponentConn :_ddeb .MaxCompWidth =MaxConnCompWidth ;case _da .ComponentCharacters :_ddeb .MaxCompWidth =MaxCharCompWidth ;case _da .ComponentWords :_ddeb .MaxCompWidth =MaxWordCompWidth ;
};};if _ddeb .MaxCompHeight ==0{_ddeb .MaxCompHeight =MaxCompHeight ;};if _ddeb .Thresh ==0.0{_ddeb .Thresh =0.9;};if _ddeb .WeightFactor ==0.0{_ddeb .WeightFactor =0.75;};if _ddeb .RankHaus ==0.0{_ddeb .RankHaus =0.97;};if _ddeb .SizeHaus ==0{_ddeb .SizeHaus =2;
};};func (_ecdb *Classer )classifyRankHouseNonOne (_eea *_da .Boxes ,_dacg ,_bebge ,_abbd *_da .Bitmaps ,_gcc *_da .Points ,_gbd *_e .NumSlice ,_egg int )(_aec error ){const _efee ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";
var (_ceg ,_gga ,_egfc ,_cfg float32 ;_bfd ,_dagf ,_agf int ;_ffc ,_dga ,_gfg ,_ffe ,_acf *_da .Bitmap ;_bgf ,_dcgg bool ;);_ffca :=_da .MakePixelSumTab8 ();for _dee :=0;_dee < len (_dacg .Values );_dee ++{if _dga ,_aec =_bebge .GetBitmap (_dee );_aec !=nil {return _bg .Wrap (_aec ,_efee ,"b\u006d\u0073\u0031\u002e\u0047\u0065\u0074\u0028\u0069\u0029");
};if _bfd ,_aec =_gbd .GetInt (_dee );_aec !=nil {_b .Log .Trace ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0046\u0047T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073 \u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_dee ,_aec );
};if _gfg ,_aec =_abbd .GetBitmap (_dee );_aec !=nil {return _bg .Wrap (_aec ,_efee ,"b\u006d\u0073\u0032\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};if _ceg ,_gga ,_aec =_gcc .GetGeometry (_dee );_aec !=nil {return _bg .Wrapf (_aec ,_efee ,"\u0070t\u0061[\u0069\u005d\u002e\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079");
};_efd :=len (_ecdb .UndilatedTemplates .Values );_bgf =false ;_eaf :=_cfdb (_ecdb ,_dga );for _agf =_eaf .Next ();_agf > -1;{if _ffe ,_aec =_ecdb .UndilatedTemplates .GetBitmap (_agf );_aec !=nil {return _bg .Wrap (_aec ,_efee ,"\u0070\u0069\u0078\u0061\u0074\u002e\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");
};if _dagf ,_aec =_ecdb .FgTemplates .GetInt (_agf );_aec !=nil {_b .Log .Trace ("\u0047\u0065\u0074\u0074\u0069\u006eg\u0020\u0046\u0047\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u005b\u0025d\u005d\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_agf ,_aec );
};if _acf ,_aec =_ecdb .DilatedTemplates .GetBitmap (_agf );_aec !=nil {return _bg .Wrap (_aec ,_efee ,"\u0070\u0069\u0078\u0061\u0074\u0064\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");};if _egfc ,_cfg ,_aec =_ecdb .CentroidPointsTemplates .GetGeometry (_agf );
_aec !=nil {return _bg .Wrap (_aec ,_efee ,"\u0043\u0065\u006et\u0072\u006f\u0069\u0064P\u006f\u0069\u006e\u0074\u0073\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u005b\u0069\u0043\u006c\u0061\u0073\u0073\u005d");};_dcgg ,_aec =_da .RankHausTest (_dga ,_gfg ,_ffe ,_acf ,_ceg -_egfc ,_gga -_cfg ,MaxDiffWidth ,MaxDiffHeight ,_bfd ,_dagf ,float32 (_ecdb .Settings .RankHaus ),_ffca );
if _aec !=nil {return _bg .Wrap (_aec ,_efee ,"");};if _dcgg {_bgf =true ;if _aec =_ecdb .ClassIDs .Add (_agf );_aec !=nil {return _bg .Wrap (_aec ,_efee ,"");};if _aec =_ecdb .ComponentPageNumbers .Add (_egg );_aec !=nil {return _bg .Wrap (_aec ,_efee ,"");
};if _ecdb .Settings .KeepClassInstances {_bef ,_fbb :=_ecdb .ClassInstances .GetBitmaps (_agf );if _fbb !=nil {return _bg .Wrap (_fbb ,_efee ,"\u0063\u002e\u0050\u0069\u0078\u0061\u0061\u002e\u0047\u0065\u0074B\u0069\u0074\u006d\u0061\u0070\u0073\u0028\u0069\u0043\u006ca\u0073\u0073\u0029");
};if _ffc ,_fbb =_dacg .GetBitmap (_dee );_fbb !=nil {return _bg .Wrap (_fbb ,_efee ,"\u0070i\u0078\u0061\u005b\u0069\u005d");};_bef .Values =append (_bef .Values ,_ffc );_gccd ,_fbb :=_eea .Get (_dee );if _fbb !=nil {return _bg .Wrap (_fbb ,_efee ,"b\u006f\u0078\u0061\u002e\u0047\u0065\u0074\u0028\u0069\u0029");
};_bef .Boxes =append (_bef .Boxes ,_gccd );};break ;};};if !_bgf {if _aec =_ecdb .ClassIDs .Add (_efd );_aec !=nil {return _bg .Wrap (_aec ,_efee ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _aec =_ecdb .ComponentPageNumbers .Add (_egg );_aec !=nil {return _bg .Wrap (_aec ,_efee ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_baef :=&_da .Bitmaps {};_ffc =_dacg .Values [_dee ];_baef .AddBitmap (_ffc );_ccf ,_bdd :=_ffc .Width ,_ffc .Height ;_ecdb .TemplatesSize .Add (uint64 (_ccf )*uint64 (_bdd ),_efd );_ccc ,_bcc :=_eea .Get (_dee );if _bcc !=nil {return _bg .Wrap (_bcc ,_efee ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_baef .AddBox (_ccc );_ecdb .ClassInstances .AddBitmaps (_baef );_ecdb .CentroidPointsTemplates .AddPoint (_ceg ,_gga );_ecdb .UndilatedTemplates .AddBitmap (_dga );_ecdb .DilatedTemplates .AddBitmap (_gfg );_ecdb .FgTemplates .AddInt (_bfd );};};_ecdb .NumberOfClasses =len (_ecdb .UndilatedTemplates .Values );
return nil ;};type similarTemplatesFinder struct{Classer *Classer ;Width int ;Height int ;Index int ;CurrentNumbers []int ;N int ;};func (_cfde *Classer )classifyRankHaus (_dba *_da .Boxes ,_dcgb *_da .Bitmaps ,_bdcf int )error {const _abec ="\u0063\u006ca\u0073\u0073\u0069f\u0079\u0052\u0061\u006e\u006b\u0048\u0061\u0075\u0073";
if _dba ==nil {return _bg .Error (_abec ,"\u0062\u006fx\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if _dcgb ==nil {return _bg .Error (_abec ,"\u0070\u0069x\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};_eeff :=len (_dcgb .Values );if _eeff ==0{return _bg .Error (_abec ,"e\u006dp\u0074\u0079\u0020\u006e\u0065\u0077\u0020\u0063o\u006d\u0070\u006f\u006een\u0074\u0073");};_baae :=_dcgb .CountPixels ();_deb :=_cfde .Settings .SizeHaus ;_cec :=_da .SelCreateBrick (_deb ,_deb ,_deb /2,_deb /2,_da .SelHit );
_fca :=&_da .Bitmaps {Values :make ([]*_da .Bitmap ,_eeff )};_aeb :=&_da .Bitmaps {Values :make ([]*_da .Bitmap ,_eeff )};var (_ebde ,_ffb ,_dbad *_da .Bitmap ;_ddcb error ;);for _bde :=0;_bde < _eeff ;_bde ++{_ebde ,_ddcb =_dcgb .GetBitmap (_bde );if _ddcb !=nil {return _bg .Wrap (_ddcb ,_abec ,"");
};_ffb ,_ddcb =_ebde .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);if _ddcb !=nil {return _bg .Wrap (_ddcb ,_abec ,"");};_dbad ,_ddcb =_da .Dilate (nil ,_ffb ,_cec );if _ddcb !=nil {return _bg .Wrap (_ddcb ,_abec ,"");
};_fca .Values [_eeff ]=_ffb ;_aeb .Values [_eeff ]=_dbad ;};_ecc ,_ddcb :=_da .Centroids (_fca .Values );if _ddcb !=nil {return _bg .Wrap (_ddcb ,_abec ,"");};if _ddcb =_ecc .Add (_cfde .CentroidPoints );_ddcb !=nil {_b .Log .Trace ("\u004e\u006f\u0020\u0063en\u0074\u0072\u006f\u0069\u0064\u0073\u0020\u0074\u006f\u0020\u0061\u0064\u0064");
};if _cfde .Settings .RankHaus ==1.0{_ddcb =_cfde .classifyRankHouseOne (_dba ,_dcgb ,_fca ,_aeb ,_ecc ,_bdcf );}else {_ddcb =_cfde .classifyRankHouseNonOne (_dba ,_dcgb ,_fca ,_aeb ,_ecc ,_baae ,_bdcf );};if _ddcb !=nil {return _bg .Wrap (_ddcb ,_abec ,"");
};return nil ;};func (_cg *Classer )addPageComponents (_gf *_da .Bitmap ,_cb *_da .Boxes ,_fb *_da .Bitmaps ,_gfd int ,_gc Method )error {const _ecd ="\u0043l\u0061\u0073\u0073\u0065r\u002e\u0041\u0064\u0064\u0050a\u0067e\u0043o\u006d\u0070\u006f\u006e\u0065\u006e\u0074s";
if _gf ==nil {return _bg .Error (_ecd ,"\u006e\u0069\u006c\u0020\u0069\u006e\u0070\u0075\u0074 \u0070\u0061\u0067\u0065");};if _cb ==nil ||_fb ==nil ||len (*_cb )==0{_b .Log .Trace ("\u0041\u0064\u0064P\u0061\u0067\u0065\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0073\u002e\u0020\u004e\u006f\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065n\u0074\u0073\u0020\u0066\u006f\u0075\u006e\u0064",_gf );
return nil ;};var _afe error ;switch _gc {case RankHaus :_afe =_cg .classifyRankHaus (_cb ,_fb ,_gfd );case Correlation :_afe =_cg .classifyCorrelation (_cb ,_fb ,_gfd );default:_b .Log .Debug ("\u0055\u006ek\u006e\u006f\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064\u003a\u0020'%\u0076\u0027",_gc );
return _bg .Error (_ecd ,"\u0075\u006e\u006bno\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064");};if _afe !=nil {return _bg .Wrap (_afe ,_ecd ,"");};if _afe =_cg .getULCorners (_gf ,_cb );_afe !=nil {return _bg .Wrap (_afe ,_ecd ,"");
};_ae :=len (*_cb );_cg .BaseIndex +=_ae ;if _afe =_cg .ComponentsNumber .Add (_ae );_afe !=nil {return _bg .Wrap (_afe ,_ecd ,"");};return nil ;};func Init (settings Settings )(*Classer ,error ){const _bb ="\u0063\u006c\u0061s\u0073\u0065\u0072\u002e\u0049\u006e\u0069\u0074";
_g :=&Classer {Settings :settings ,Widths :map[int ]int {},Heights :map[int ]int {},TemplatesSize :_e .IntsMap {},TemplateAreas :&_e .IntSlice {},ComponentPageNumbers :&_e .IntSlice {},ClassIDs :&_e .IntSlice {},ComponentsNumber :&_e .IntSlice {},CentroidPoints :&_da .Points {},CentroidPointsTemplates :&_da .Points {},UndilatedTemplates :&_da .Bitmaps {},DilatedTemplates :&_da .Bitmaps {},ClassInstances :&_da .BitmapsArray {},FgTemplates :&_e .NumSlice {}};
if _be :=_g .Settings .Validate ();_be !=nil {return nil ,_bg .Wrap (_be ,_bb ,"");};return _g ,nil ;};type Settings struct{MaxCompWidth int ;MaxCompHeight int ;SizeHaus int ;RankHaus float64 ;Thresh float64 ;WeightFactor float64 ;KeepClassInstances bool ;
Components _da .Component ;Method Method ;};var _cf bool ;func (_dace Settings )Validate ()error {const _faab ="\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0073\u002e\u0056\u0061\u006ci\u0064\u0061\u0074\u0065";if _dace .Thresh < 0.4||_dace .Thresh > 0.98{return _bg .Error (_faab ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074\u0068\u0072\u0065\u0073\u0068\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0034\u0020\u002d\u0020\u0030\u002e\u0039\u0038\u005d");
};if _dace .WeightFactor < 0.0||_dace .WeightFactor > 1.0{return _bg .Error (_faab ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006ec\u006f\u0064\u0065\u0072\u0020w\u0065\u0069\u0067\u0068\u0074\u0020\u0066\u0061\u0063\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0030\u0020\u002d\u0020\u0031\u002e\u0030\u005d");
};if _dace .RankHaus < 0.5||_dace .RankHaus > 1.0{return _bg .Error (_faab ,"\u006a\u0062\u0069\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0072a\u006e\u006b\u0020\u0068\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065 \u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065 [\u0030\u002e\u0035\u0020\u002d\u0020\u0031\u002e\u0030\u005d");
};if _dace .SizeHaus < 1||_dace .SizeHaus > 10{return _bg .Error (_faab ,"\u006a\u0062\u0069\u0067\u0032 \u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0073\u0069\u007a\u0065\u0020h\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0031\u0020\u002d\u0020\u0031\u0030]");
};switch _dace .Components {case _da .ComponentConn ,_da .ComponentCharacters ,_da .ComponentWords :default:return _bg .Error (_faab ,"\u0069n\u0076\u0061\u006c\u0069d\u0020\u0063\u006c\u0061\u0073s\u0065r\u0020c\u006f\u006d\u0070\u006f\u006e\u0065\u006et");
};return nil ;};func (_ab *Classer )getULCorners (_gfc *_da .Bitmap ,_ddg *_da .Boxes )error {const _afee ="\u0067\u0065\u0074U\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";if _gfc ==nil {return _bg .Error (_afee ,"\u006e\u0069l\u0020\u0069\u006da\u0067\u0065\u0020\u0062\u0069\u0074\u006d\u0061\u0070");
};if _ddg ==nil {return _bg .Error (_afee ,"\u006e\u0069\u006c\u0020\u0062\u006f\u0075\u006e\u0064\u0073");};if _ab .PtaUL ==nil {_ab .PtaUL =&_da .Points {};};_abe :=len (*_ddg );var (_ddc ,_eb ,_fe ,_ff int ;_fc ,_aea ,_ee ,_dag float32 ;_bc error ;_ecb *_c .Rectangle ;
_aa *_da .Bitmap ;_ga _c .Point ;);for _aae :=0;_aae < _abe ;_aae ++{_ddc =_ab .BaseIndex +_aae ;if _fc ,_aea ,_bc =_ab .CentroidPoints .GetGeometry (_ddc );_bc !=nil {return _bg .Wrap (_bc ,_afee ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050o\u0069\u006e\u0074\u0073");
};if _eb ,_bc =_ab .ClassIDs .Get (_ddc );_bc !=nil {return _bg .Wrap (_bc ,_afee ,"\u0043\u006c\u0061s\u0073\u0049\u0044\u0073\u002e\u0047\u0065\u0074");};if _ee ,_dag ,_bc =_ab .CentroidPointsTemplates .GetGeometry (_eb );_bc !=nil {return _bg .Wrap (_bc ,_afee ,"\u0043\u0065\u006etr\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074\u0073\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");
};_ca :=_ee -_fc ;_abf :=_dag -_aea ;if _ca >=0{_fe =int (_ca +0.5);}else {_fe =int (_ca -0.5);};if _abf >=0{_ff =int (_abf +0.5);}else {_ff =int (_abf -0.5);};if _ecb ,_bc =_ddg .Get (_aae );_bc !=nil {return _bg .Wrap (_bc ,_afee ,"");};_gd ,_eed :=_ecb .Min .X ,_ecb .Min .Y ;
_aa ,_bc =_ab .UndilatedTemplates .GetBitmap (_eb );if _bc !=nil {return _bg .Wrap (_bc ,_afee ,"\u0055\u006e\u0064\u0069\u006c\u0061\u0074\u0065\u0064\u0054e\u006d\u0070\u006c\u0061\u0074\u0065\u0073.\u0047\u0065\u0074\u0028\u0069\u0043\u006c\u0061\u0073\u0073\u0029");
};_ga ,_bc =_dg (_gfc ,_gd ,_eed ,_fe ,_ff ,_aa );if _bc !=nil {return _bg .Wrap (_bc ,_afee ,"");};_ab .PtaUL .AddPoint (float32 (_gd -_fe +_ga .X ),float32 (_eed -_ff +_ga .Y ));};return nil ;};func (_ege *Classer )classifyRankHouseOne (_agdb *_da .Boxes ,_egef ,_cfa ,_agbf *_da .Bitmaps ,_agc *_da .Points ,_eae int )(_ddfe error ){const _bae ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";
var (_afd ,_cdd ,_dac ,_egf float32 ;_daad int ;_edaa ,_ecgc ,_fce ,_fab ,_dbbcg *_da .Bitmap ;_bdb ,_dgf bool ;);for _fgca :=0;_fgca < len (_egef .Values );_fgca ++{_ecgc =_cfa .Values [_fgca ];_fce =_agbf .Values [_fgca ];_afd ,_cdd ,_ddfe =_agc .GetGeometry (_fgca );
if _ddfe !=nil {return _bg .Wrapf (_ddfe ,_bae ,"\u0066\u0069\u0072\u0073\u0074\u0020\u0067\u0065\u006fm\u0065\u0074\u0072\u0079");};_aga :=len (_ege .UndilatedTemplates .Values );_bdb =false ;_afg :=_cfdb (_ege ,_ecgc );for _daad =_afg .Next ();_daad > -1;
{_fab ,_ddfe =_ege .UndilatedTemplates .GetBitmap (_daad );if _ddfe !=nil {return _bg .Wrap (_ddfe ,_bae ,"\u0062\u006d\u0033");};_dbbcg ,_ddfe =_ege .DilatedTemplates .GetBitmap (_daad );if _ddfe !=nil {return _bg .Wrap (_ddfe ,_bae ,"\u0062\u006d\u0034");
};_dac ,_egf ,_ddfe =_ege .CentroidPointsTemplates .GetGeometry (_daad );if _ddfe !=nil {return _bg .Wrap (_ddfe ,_bae ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0073");};_dgf ,_ddfe =_da .HausTest (_ecgc ,_fce ,_fab ,_dbbcg ,_afd -_dac ,_cdd -_egf ,MaxDiffWidth ,MaxDiffHeight );
if _ddfe !=nil {return _bg .Wrap (_ddfe ,_bae ,"");};if _dgf {_bdb =true ;if _ddfe =_ege .ClassIDs .Add (_daad );_ddfe !=nil {return _bg .Wrap (_ddfe ,_bae ,"");};if _ddfe =_ege .ComponentPageNumbers .Add (_eae );_ddfe !=nil {return _bg .Wrap (_ddfe ,_bae ,"");
};if _ege .Settings .KeepClassInstances {_fd ,_bac :=_ege .ClassInstances .GetBitmaps (_daad );if _bac !=nil {return _bg .Wrap (_bac ,_bae ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_edaa ,_bac =_egef .GetBitmap (_fgca );if _bac !=nil {return _bg .Wrap (_bac ,_bae ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");
};_fd .AddBitmap (_edaa );_gea ,_bac :=_agdb .Get (_fgca );if _bac !=nil {return _bg .Wrap (_bac ,_bae ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_fd .AddBox (_gea );};break ;};};if !_bdb {if _ddfe =_ege .ClassIDs .Add (_aga );_ddfe !=nil {return _bg .Wrap (_ddfe ,_bae ,"");
};if _ddfe =_ege .ComponentPageNumbers .Add (_eae );_ddfe !=nil {return _bg .Wrap (_ddfe ,_bae ,"");};_abbf :=&_da .Bitmaps {};_edaa ,_ddfe =_egef .GetBitmap (_fgca );if _ddfe !=nil {return _bg .Wrap (_ddfe ,_bae ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_abbf .Values =append (_abbf .Values ,_edaa );_eee ,_eff :=_edaa .Width ,_edaa .Height ;_ege .TemplatesSize .Add (uint64 (_eff )*uint64 (_eee ),_aga );_bcb ,_dbe :=_agdb .Get (_fgca );if _dbe !=nil {return _bg .Wrap (_dbe ,_bae ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_abbf .AddBox (_bcb );_ege .ClassInstances .AddBitmaps (_abbf );_ege .CentroidPointsTemplates .AddPoint (_afd ,_cdd );_ege .UndilatedTemplates .AddBitmap (_ecgc );_ege .DilatedTemplates .AddBitmap (_fce );};};return nil ;};const (RankHaus Method =iota ;
Correlation ;);func _dg (_ebd *_da .Bitmap ,_gb ,_ded ,_daa ,_db int ,_eca *_da .Bitmap )(_aeag _c .Point ,_bd error ){const _ad ="\u0066i\u006e\u0061\u006c\u0041l\u0069\u0067\u006e\u006d\u0065n\u0074P\u006fs\u0069\u0074\u0069\u006f\u006e\u0069\u006eg";
if _ebd ==nil {return _aeag ,_bg .Error (_ad ,"\u0073\u006f\u0075\u0072ce\u0020\u006e\u006f\u0074\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064");};if _eca ==nil {return _aeag ,_bg .Error (_ad ,"t\u0065\u006d\u0070\u006cat\u0065 \u006e\u006f\u0074\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064");
};_df ,_ac :=_eca .Width ,_eca .Height ;_ebe ,_cbg :=_gb -_daa -JbAddedPixels ,_ded -_db -JbAddedPixels ;_b .Log .Trace ("\u0078\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0079\u003a\u0020\u0027\u0025\u0064'\u002c\u0020\u0077\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0068\u003a \u0027\u0025\u0064\u0027\u002c\u0020\u0062\u0078\u003a\u0020\u0027\u0025d'\u002c\u0020\u0062\u0079\u003a\u0020\u0027\u0025\u0064\u0027",_gb ,_ded ,_df ,_ac ,_ebe ,_cbg );
_cbd ,_bd :=_da .Rect (_ebe ,_cbg ,_df ,_ac );if _bd !=nil {return _aeag ,_bg .Wrap (_bd ,_ad ,"");};_fgd ,_ ,_bd :=_ebd .ClipRectangle (_cbd );if _bd !=nil {_b .Log .Error ("\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069\u0070\u0020\u0072\u0065c\u0074\u0061\u006e\u0067\u006c\u0065\u003a\u0020\u0025\u0076",_cbd );
return _aeag ,_bg .Wrap (_bd ,_ad ,"");};_bge :=_da .New (_fgd .Width ,_fgd .Height );_eg :=_f .MaxInt32 ;var _gae ,_faa ,_eef ,_fcd ,_ce int ;for _gae =-1;_gae <=1;_gae ++{for _faa =-1;_faa <=1;_faa ++{if _ ,_bd =_da .Copy (_bge ,_fgd );_bd !=nil {return _aeag ,_bg .Wrap (_bd ,_ad ,"");
};if _bd =_bge .RasterOperation (_faa ,_gae ,_df ,_ac ,_da .PixSrcXorDst ,_eca ,0,0);_bd !=nil {return _aeag ,_bg .Wrap (_bd ,_ad ,"");};_eef =_bge .CountPixels ();if _eef < _eg {_fcd =_faa ;_ce =_gae ;_eg =_eef ;};};};_aeag .X =_fcd ;_aeag .Y =_ce ;return _aeag ,nil ;
};func (_fcc *similarTemplatesFinder )Next ()int {var (_gbdd ,_dae ,_dfb ,_fbg int ;_ecba bool ;_bgd *_da .Bitmap ;_ece error ;);for {if _fcc .Index >=25{return -1;};_dae =_fcc .Width +TwoByTwoWalk [2*_fcc .Index ];_gbdd =_fcc .Height +TwoByTwoWalk [2*_fcc .Index +1];
if _gbdd < 1||_dae < 1{_fcc .Index ++;continue ;};if len (_fcc .CurrentNumbers )==0{_fcc .CurrentNumbers ,_ecba =_fcc .Classer .TemplatesSize .GetSlice (uint64 (_dae )*uint64 (_gbdd ));if !_ecba {_fcc .Index ++;continue ;};_fcc .N =0;};_dfb =len (_fcc .CurrentNumbers );
for ;_fcc .N < _dfb ;_fcc .N ++{_fbg =_fcc .CurrentNumbers [_fcc .N ];_bgd ,_ece =_fcc .Classer .DilatedTemplates .GetBitmap (_fbg );if _ece !=nil {_b .Log .Debug ("\u0046\u0069\u006e\u0064\u004e\u0065\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0074\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u006e\u006f\u0074 \u0066\u006fu\u006e\u0064\u003a\u0020");
return 0;};if _bgd .Width -2*JbAddedPixels ==_dae &&_bgd .Height -2*JbAddedPixels ==_gbdd {return _fbg ;};};_fcc .Index ++;_fcc .CurrentNumbers =nil ;};};const (MaxConnCompWidth =350;MaxCharCompWidth =350;MaxWordCompWidth =1000;MaxCompHeight =120;);const (MaxDiffWidth =2;
MaxDiffHeight =2;);func DefaultSettings ()Settings {_aca :=&Settings {};_aca .SetDefault ();return *_aca };func (_dgb *Classer )classifyCorrelation (_ea *_da .Boxes ,_cge *_da .Bitmaps ,_ddb int )error {const _aaa ="\u0063\u006c\u0061\u0073si\u0066\u0079\u0043\u006f\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e";
if _ea ==nil {return _bg .Error (_aaa ,"\u006e\u0065\u0077\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0062\u006f\u0075\u006e\u0064\u0069\u006e\u0067\u0020\u0062o\u0078\u0065\u0073\u0020\u006eo\u0074\u0020f\u006f\u0075\u006e\u0064");
};if _cge ==nil {return _bg .Error (_aaa ,"\u006e\u0065wC\u006f\u006d\u0070o\u006e\u0065\u006e\u0074s b\u0069tm\u0061\u0070\u0020\u0061\u0072\u0072\u0061y \u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064");};_acb :=len (_cge .Values );if _acb ==0{_b .Log .Debug ("\u0063l\u0061\u0073s\u0069\u0066\u0079C\u006f\u0072\u0072\u0065\u006c\u0061\u0074i\u006f\u006e\u0020\u002d\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0070\u0069\u0078\u0061s\u0020\u0069\u0073\u0020\u0065\u006d\u0070\u0074\u0079");
return nil ;};var (_bgeb ,_dfd *_da .Bitmap ;_cfe error ;);_dc :=&_da .Bitmaps {Values :make ([]*_da .Bitmap ,_acb )};for _cd ,_ecg :=range _cge .Values {_dfd ,_cfe =_ecg .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);
if _cfe !=nil {return _bg .Wrap (_cfe ,_aaa ,"");};_dc .Values [_cd ]=_dfd ;};_bf :=_dgb .FgTemplates ;_cfd :=_da .MakePixelSumTab8 ();_efe :=_da .MakePixelCentroidTab8 ();_ed :=make ([]int ,_acb );_ddf :=make ([][]int ,_acb );_ecbe :=_da .Points (make ([]_da .Point ,_acb ));
_ag :=&_ecbe ;var (_bbd ,_cgf int ;_dbb ,_ecdf ,_gdc int ;_eda ,_cbb int ;_dda byte ;);for _caa ,_cab :=range _dc .Values {_ddf [_caa ]=make ([]int ,_cab .Height );_bbd =0;_cgf =0;_ecdf =(_cab .Height -1)*_cab .RowStride ;_dbb =0;for _cbb =_cab .Height -1;
_cbb >=0;_cbb ,_ecdf =_cbb -1,_ecdf -_cab .RowStride {_ddf [_caa ][_cbb ]=_dbb ;_gdc =0;for _eda =0;_eda < _cab .RowStride ;_eda ++{_dda =_cab .Data [_ecdf +_eda ];_gdc +=_cfd [_dda ];_bbd +=_efe [_dda ]+_eda *8*_cfd [_dda ];};_dbb +=_gdc ;_cgf +=_gdc *_cbb ;
};_ed [_caa ]=_dbb ;if _dbb > 0{(*_ag )[_caa ]=_da .Point {X :float32 (_bbd )/float32 (_dbb ),Y :float32 (_cgf )/float32 (_dbb )};}else {(*_ag )[_caa ]=_da .Point {X :float32 (_cab .Width )/float32 (2),Y :float32 (_cab .Height )/float32 (2)};};};if _cfe =_dgb .CentroidPoints .Add (_ag );
_cfe !=nil {return _bg .Wrap (_cfe ,_aaa ,"\u0063\u0065\u006et\u0072\u006f\u0069\u0064\u0020\u0061\u0064\u0064");};var (_ebf ,_bga ,_edad int ;_beg float64 ;_gg ,_agd ,_baa ,_dcd float32 ;_bdc ,_dcg _da .Point ;_ccb bool ;_dbbc *similarTemplatesFinder ;
_cbc int ;_agb *_da .Bitmap ;_gdb *_c .Rectangle ;_abb *_da .Bitmaps ;);for _cbc ,_dfd =range _dc .Values {_bga =_ed [_cbc ];if _gg ,_agd ,_cfe =_ag .GetGeometry (_cbc );_cfe !=nil {return _bg .Wrap (_cfe ,_aaa ,"\u0070t\u0061\u0020\u002d\u0020\u0069");
};_ccb =false ;_ebef :=len (_dgb .UndilatedTemplates .Values );_dbbc =_cfdb (_dgb ,_dfd );for _fee :=_dbbc .Next ();_fee > -1;{if _agb ,_cfe =_dgb .UndilatedTemplates .GetBitmap (_fee );_cfe !=nil {return _bg .Wrap (_cfe ,_aaa ,"\u0075\u006e\u0069dl\u0061\u0074\u0065\u0064\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0062\u006d\u0032");
};if _edad ,_cfe =_bf .GetInt (_fee );_cfe !=nil {_b .Log .Trace ("\u0046\u0047\u0020T\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u005b\u0069\u0063\u006ca\u0073\u0073\u005d\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_cfe );};if _baa ,_dcd ,_cfe =_dgb .CentroidPointsTemplates .GetGeometry (_fee );
_cfe !=nil {return _bg .Wrap (_cfe ,_aaa ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074T\u0065\u006d\u0070\u006c\u0061\u0074e\u0073\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u00782\u002c\u0079\u0032\u0020");
};if _dgb .Settings .WeightFactor > 0.0{if _ebf ,_cfe =_dgb .TemplateAreas .Get (_fee );_cfe !=nil {_b .Log .Trace ("\u0054\u0065\u006dp\u006c\u0061\u0074\u0065A\u0072\u0065\u0061\u0073\u005b\u0069\u0063l\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0061\u0072\u0065\u0061\u0020\u0025\u0076",_cfe );
};_beg =_dgb .Settings .Thresh +(1.0-_dgb .Settings .Thresh )*_dgb .Settings .WeightFactor *float64 (_edad )/float64 (_ebf );}else {_beg =_dgb .Settings .Thresh ;};_abbg ,_gad :=_da .CorrelationScoreThresholded (_dfd ,_agb ,_bga ,_edad ,_bdc .X -_dcg .X ,_bdc .Y -_dcg .Y ,MaxDiffWidth ,MaxDiffHeight ,_cfd ,_ddf [_cbc ],float32 (_beg ));
if _gad !=nil {return _bg .Wrap (_gad ,_aaa ,"");};if _cf {var (_agbc ,_gfa float64 ;_cfc ,_fcda int ;);_agbc ,_gad =_da .CorrelationScore (_dfd ,_agb ,_bga ,_edad ,_gg -_baa ,_agd -_dcd ,MaxDiffWidth ,MaxDiffHeight ,_cfd );if _gad !=nil {return _bg .Wrap (_gad ,_aaa ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");
};_gfa ,_gad =_da .CorrelationScoreSimple (_dfd ,_agb ,_bga ,_edad ,_gg -_baa ,_agd -_dcd ,MaxDiffWidth ,MaxDiffHeight ,_cfd );if _gad !=nil {return _bg .Wrap (_gad ,_aaa ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");
};_cfc =int (_f .Sqrt (_agbc *float64 (_bga )*float64 (_edad )));_fcda =int (_f .Sqrt (_gfa *float64 (_bga )*float64 (_edad )));if (_agbc >=_beg )!=(_gfa >=_beg ){return _bg .Errorf (_aaa ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043\u006f\u0072r\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0063\u006f\u0072\u0065\u0020\u006d\u0069\u0073\u006d\u0061\u0074\u0063\u0068\u0020-\u0020\u0025d\u0028\u00250\u002e\u0034\u0066\u002c\u0020\u0025\u0076\u0029\u0020\u0076\u0073\u0020\u0025d(\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0076)\u0020\u0025\u0030\u002e\u0034\u0066",_cfc ,_agbc ,_agbc >=_beg ,_fcda ,_gfa ,_gfa >=_beg ,_agbc -_gfa );
};if _agbc >=_beg !=_abbg {return _bg .Errorf (_aaa ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043o\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e \u0073\u0063\u006f\u0072\u0065 \u004d\u0069\u0073\u006d\u0061t\u0063\u0068 \u0062\u0065\u0074w\u0065\u0065\u006e\u0020\u0063\u006frr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020/\u0020\u0074\u0068\u0072\u0065s\u0068\u006f\u006c\u0064\u002e\u0020\u0043\u006f\u006dpa\u0072\u0069\u0073\u006f\u006e:\u0020\u0025\u0030\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0064\u0029\u0020\u003e\u003d\u0020\u00250\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u0029\u0020\u0076\u0073\u0020\u0025\u0076",_agbc ,_agbc *float64 (_bga )*float64 (_edad ),_cfc ,_beg ,float32 (_beg )*float32 (_bga )*float32 (_edad ),_abbg );
};};if _abbg {_ccb =true ;if _gad =_dgb .ClassIDs .Add (_fee );_gad !=nil {return _bg .Wrap (_gad ,_aaa ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");};if _gad =_dgb .ComponentPageNumbers .Add (_ddb );_gad !=nil {return _bg .Wrap (_gad ,_aaa ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");
};if _dgb .Settings .KeepClassInstances {if _bgeb ,_gad =_cge .GetBitmap (_cbc );_gad !=nil {return _bg .Wrap (_gad ,_aaa ,"\u004b\u0065\u0065\u0070Cl\u0061\u0073\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u002d \u0069");};if _abb ,_gad =_dgb .ClassInstances .GetBitmaps (_fee );
_gad !=nil {return _bg .Wrap (_gad ,_aaa ,"K\u0065\u0065\u0070\u0043\u006c\u0061s\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065s\u0020\u002d\u0020i\u0043l\u0061\u0073\u0073");};_abb .AddBitmap (_bgeb );if _gdb ,_gad =_ea .Get (_cbc );_gad !=nil {return _bg .Wrap (_gad ,_aaa ,"\u004be\u0065p\u0043\u006c\u0061\u0073\u0073I\u006e\u0073t\u0061\u006e\u0063\u0065\u0073");
};_abb .AddBox (_gdb );};break ;};};if !_ccb {if _cfe =_dgb .ClassIDs .Add (_ebef );_cfe !=nil {return _bg .Wrap (_cfe ,_aaa ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _cfe =_dgb .ComponentPageNumbers .Add (_ddb );_cfe !=nil {return _bg .Wrap (_cfe ,_aaa ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_abb =&_da .Bitmaps {};if _bgeb ,_cfe =_cge .GetBitmap (_cbc );_cfe !=nil {return _bg .Wrap (_cfe ,_aaa ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_abb .AddBitmap (_bgeb );_ddag ,_gbf :=_bgeb .Width ,_bgeb .Height ;_fgc :=uint64 (_gbf )*uint64 (_ddag );
_dgb .TemplatesSize .Add (_fgc ,_ebef );if _gdb ,_cfe =_ea .Get (_cbc );_cfe !=nil {return _bg .Wrap (_cfe ,_aaa ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_abb .AddBox (_gdb );_dgb .ClassInstances .AddBitmaps (_abb );_dgb .CentroidPointsTemplates .AddPoint (_gg ,_agd );
_dgb .FgTemplates .AddInt (_bga );_dgb .UndilatedTemplates .AddBitmap (_bgeb );_ebf =(_dfd .Width -2*JbAddedPixels )*(_dfd .Height -2*JbAddedPixels );if _cfe =_dgb .TemplateAreas .Add (_ebf );_cfe !=nil {return _bg .Wrap (_cfe ,_aaa ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};};};_dgb .NumberOfClasses =len (_dgb .UndilatedTemplates .Values );return nil ;};type Classer struct{BaseIndex int ;Settings Settings ;ComponentsNumber *_e .IntSlice ;TemplateAreas *_e .IntSlice ;Widths map[int ]int ;Heights map[int ]int ;NumberOfClasses int ;
ClassInstances *_da .BitmapsArray ;UndilatedTemplates *_da .Bitmaps ;DilatedTemplates *_da .Bitmaps ;TemplatesSize _e .IntsMap ;FgTemplates *_e .NumSlice ;CentroidPoints *_da .Points ;CentroidPointsTemplates *_da .Points ;ClassIDs *_e .IntSlice ;ComponentPageNumbers *_e .IntSlice ;
PtaUL *_da .Points ;PtaLL *_da .Points ;};var TwoByTwoWalk =[]int {0,0,0,1,-1,0,0,-1,1,0,-1,1,1,1,-1,-1,1,-1,0,-2,2,0,0,2,-2,0,-1,-2,1,-2,2,-1,2,1,1,2,-1,2,-2,1,-2,-1,-2,-2,2,-2,2,2,-2,2};const JbAddedPixels =6;type Method int ;