//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package classer ;import (_g "github.com/unidoc/unipdf/v3/common";_d "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_f "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";_a "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_e "image";_eb "math";);const (RankHaus Method =iota ;Correlation ;);func (_acc *Classer )verifyMethod (_gfd Method )error {if _gfd !=RankHaus &&_gfd !=Correlation {return _a .Error ("\u0076\u0065\u0072i\u0066\u0079\u004d\u0065\u0074\u0068\u006f\u0064","\u0069\u006e\u0076\u0061li\u0064\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072\u0020\u006d\u0065\u0074\u0068o\u0064");};return nil ;};func (_gagd *Settings )SetDefault (){if _gagd .MaxCompWidth ==0{switch _gagd .Components {case _f .ComponentConn :_gagd .MaxCompWidth =MaxConnCompWidth ;case _f .ComponentCharacters :_gagd .MaxCompWidth =MaxCharCompWidth ;case _f .ComponentWords :_gagd .MaxCompWidth =MaxWordCompWidth ;};};if _gagd .MaxCompHeight ==0{_gagd .MaxCompHeight =MaxCompHeight ;};if _gagd .Thresh ==0.0{_gagd .Thresh =0.9;};if _gagd .WeightFactor ==0.0{_gagd .WeightFactor =0.75;};if _gagd .RankHaus ==0.0{_gagd .RankHaus =0.97;};if _gagd .SizeHaus ==0{_gagd .SizeHaus =2;};};type similarTemplatesFinder struct{Classer *Classer ;Width int ;Height int ;Index int ;CurrentNumbers []int ;N int ;};func Init (settings Settings )(*Classer ,error ){const _b ="\u0063\u006c\u0061s\u0073\u0065\u0072\u002e\u0049\u006e\u0069\u0074";_ea :=&Classer {Settings :settings ,Widths :map[int ]int {},Heights :map[int ]int {},TemplatesSize :_d .IntsMap {},TemplateAreas :&_d .IntSlice {},ComponentPageNumbers :&_d .IntSlice {},ClassIDs :&_d .IntSlice {},ComponentsNumber :&_d .IntSlice {},CentroidPoints :&_f .Points {},CentroidPointsTemplates :&_f .Points {},UndilatedTemplates :&_f .Bitmaps {},DilatedTemplates :&_f .Bitmaps {},ClassInstances :&_f .BitmapsArray {},FgTemplates :&_d .NumSlice {}};if _dd :=_ea .Settings .Validate ();_dd !=nil {return nil ,_a .Wrap (_dd ,_b ,"");};return _ea ,nil ;};var TwoByTwoWalk =[]int {0,0,0,1,-1,0,0,-1,1,0,-1,1,1,1,-1,-1,1,-1,0,-2,2,0,0,2,-2,0,-1,-2,1,-2,2,-1,2,1,1,2,-1,2,-2,1,-2,-1,-2,-2,2,-2,2,2,-2,2};const (MaxDiffWidth =2;MaxDiffHeight =2;);func DefaultSettings ()Settings {_ccdb :=&Settings {};_ccdb .SetDefault ();return *_ccdb };var _ag bool ;func (_aec *Classer )classifyCorrelation (_ead *_f .Boxes ,_gc *_f .Bitmaps ,_bbc int )error {const _feg ="\u0063\u006c\u0061\u0073si\u0066\u0079\u0043\u006f\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e";if _ead ==nil {return _a .Error (_feg ,"\u006e\u0065\u0077\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0062\u006f\u0075\u006e\u0064\u0069\u006e\u0067\u0020\u0062o\u0078\u0065\u0073\u0020\u006eo\u0074\u0020f\u006f\u0075\u006e\u0064");};if _gc ==nil {return _a .Error (_feg ,"\u006e\u0065wC\u006f\u006d\u0070o\u006e\u0065\u006e\u0074s b\u0069tm\u0061\u0070\u0020\u0061\u0072\u0072\u0061y \u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064");};_bee :=len (_gc .Values );if _bee ==0{_g .Log .Debug ("\u0063l\u0061\u0073s\u0069\u0066\u0079C\u006f\u0072\u0072\u0065\u006c\u0061\u0074i\u006f\u006e\u0020\u002d\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0070\u0069\u0078\u0061s\u0020\u0069\u0073\u0020\u0065\u006d\u0070\u0074\u0079");return nil ;};var (_ce ,_beb *_f .Bitmap ;_gfbd error ;);_dbdc :=&_f .Bitmaps {Values :make ([]*_f .Bitmap ,_bee )};for _gag ,_ebd :=range _gc .Values {_beb ,_gfbd =_ebd .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);if _gfbd !=nil {return _a .Wrap (_gfbd ,_feg ,"");};_dbdc .Values [_gag ]=_beb ;};_agf :=_aec .FgTemplates ;_ege :=_f .MakePixelSumTab8 ();_cde :=_f .MakePixelCentroidTab8 ();_agb :=make ([]int ,_bee );_cca :=make ([][]int ,_bee );_cfc :=_f .Points (make ([]_f .Point ,_bee ));_bg :=&_cfc ;var (_dbg ,_gfe int ;_fa ,_gfc ,_fdb int ;_ec ,_bbg int ;_ebe byte ;);for _cbg ,_add :=range _dbdc .Values {_cca [_cbg ]=make ([]int ,_add .Height );_dbg =0;_gfe =0;_gfc =(_add .Height -1)*_add .RowStride ;_fa =0;for _bbg =_add .Height -1;_bbg >=0;_bbg ,_gfc =_bbg -1,_gfc -_add .RowStride {_cca [_cbg ][_bbg ]=_fa ;_fdb =0;for _ec =0;_ec < _add .RowStride ;_ec ++{_ebe =_add .Data [_gfc +_ec ];_fdb +=_ege [_ebe ];_dbg +=_cde [_ebe ]+_ec *8*_ege [_ebe ];};_fa +=_fdb ;_gfe +=_fdb *_bbg ;};_agb [_cbg ]=_fa ;if _fa > 0{(*_bg )[_cbg ]=_f .Point {X :float32 (_dbg )/float32 (_fa ),Y :float32 (_gfe )/float32 (_fa )};}else {(*_bg )[_cbg ]=_f .Point {X :float32 (_add .Width )/float32 (2),Y :float32 (_add .Height )/float32 (2)};};};if _gfbd =_aec .CentroidPoints .Add (_bg );_gfbd !=nil {return _a .Wrap (_gfbd ,_feg ,"\u0063\u0065\u006et\u0072\u006f\u0069\u0064\u0020\u0061\u0064\u0064");};var (_ba ,_ebg ,_beec int ;_cge float64 ;_cgb ,_acg ,_fcd ,_fcg float32 ;_cdeg ,_bab _f .Point ;_ebdc bool ;_aab *similarTemplatesFinder ;_afa int ;_fgb *_f .Bitmap ;_edg *_e .Rectangle ;_ggc *_f .Bitmaps ;);for _afa ,_beb =range _dbdc .Values {_ebg =_agb [_afa ];if _cgb ,_acg ,_gfbd =_bg .GetGeometry (_afa );_gfbd !=nil {return _a .Wrap (_gfbd ,_feg ,"\u0070t\u0061\u0020\u002d\u0020\u0069");};_ebdc =false ;_dde :=len (_aec .UndilatedTemplates .Values );_aab =_ccfad (_aec ,_beb );for _bec :=_aab .Next ();_bec > -1;{if _fgb ,_gfbd =_aec .UndilatedTemplates .GetBitmap (_bec );_gfbd !=nil {return _a .Wrap (_gfbd ,_feg ,"\u0075\u006e\u0069dl\u0061\u0074\u0065\u0064\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0062\u006d\u0032");};if _beec ,_gfbd =_agf .GetInt (_bec );_gfbd !=nil {_g .Log .Trace ("\u0046\u0047\u0020T\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u005b\u0069\u0063\u006ca\u0073\u0073\u005d\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_gfbd );};if _fcd ,_fcg ,_gfbd =_aec .CentroidPointsTemplates .GetGeometry (_bec );_gfbd !=nil {return _a .Wrap (_gfbd ,_feg ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074T\u0065\u006d\u0070\u006c\u0061\u0074e\u0073\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u00782\u002c\u0079\u0032\u0020");};if _aec .Settings .WeightFactor > 0.0{if _ba ,_gfbd =_aec .TemplateAreas .Get (_bec );_gfbd !=nil {_g .Log .Trace ("\u0054\u0065\u006dp\u006c\u0061\u0074\u0065A\u0072\u0065\u0061\u0073\u005b\u0069\u0063l\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0061\u0072\u0065\u0061\u0020\u0025\u0076",_gfbd );};_cge =_aec .Settings .Thresh +(1.0-_aec .Settings .Thresh )*_aec .Settings .WeightFactor *float64 (_beec )/float64 (_ba );}else {_cge =_aec .Settings .Thresh ;};_ccga ,_gae :=_f .CorrelationScoreThresholded (_beb ,_fgb ,_ebg ,_beec ,_cdeg .X -_bab .X ,_cdeg .Y -_bab .Y ,MaxDiffWidth ,MaxDiffHeight ,_ege ,_cca [_afa ],float32 (_cge ));if _gae !=nil {return _a .Wrap (_gae ,_feg ,"");};if _ag {var (_cbf ,_gffc float64 ;_ebde ,_geaf int ;);_cbf ,_gae =_f .CorrelationScore (_beb ,_fgb ,_ebg ,_beec ,_cgb -_fcd ,_acg -_fcg ,MaxDiffWidth ,MaxDiffHeight ,_ege );if _gae !=nil {return _a .Wrap (_gae ,_feg ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");};_gffc ,_gae =_f .CorrelationScoreSimple (_beb ,_fgb ,_ebg ,_beec ,_cgb -_fcd ,_acg -_fcg ,MaxDiffWidth ,MaxDiffHeight ,_ege );if _gae !=nil {return _a .Wrap (_gae ,_feg ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");};_ebde =int (_eb .Sqrt (_cbf *float64 (_ebg )*float64 (_beec )));_geaf =int (_eb .Sqrt (_gffc *float64 (_ebg )*float64 (_beec )));if (_cbf >=_cge )!=(_gffc >=_cge ){return _a .Errorf (_feg ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043\u006f\u0072r\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0063\u006f\u0072\u0065\u0020\u006d\u0069\u0073\u006d\u0061\u0074\u0063\u0068\u0020-\u0020\u0025d\u0028\u00250\u002e\u0034\u0066\u002c\u0020\u0025\u0076\u0029\u0020\u0076\u0073\u0020\u0025d(\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0076)\u0020\u0025\u0030\u002e\u0034\u0066",_ebde ,_cbf ,_cbf >=float64 (_cge ),_geaf ,_gffc ,_gffc >=float64 (_cge ),_cbf -_gffc );};if _cbf >=_cge !=_ccga {return _a .Errorf (_feg ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043o\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e \u0073\u0063\u006f\u0072\u0065 \u004d\u0069\u0073\u006d\u0061t\u0063\u0068 \u0062\u0065\u0074w\u0065\u0065\u006e\u0020\u0063\u006frr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020/\u0020\u0074\u0068\u0072\u0065s\u0068\u006f\u006c\u0064\u002e\u0020\u0043\u006f\u006dpa\u0072\u0069\u0073\u006f\u006e:\u0020\u0025\u0030\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0064\u0029\u0020\u003e\u003d\u0020\u00250\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u0029\u0020\u0076\u0073\u0020\u0025\u0076",_cbf ,_cbf *float64 (_ebg )*float64 (_beec ),_ebde ,_cge ,float32 (_cge )*float32 (_ebg )*float32 (_beec ),_ccga );};};if _ccga {_ebdc =true ;if _gae =_aec .ClassIDs .Add (_bec );_gae !=nil {return _a .Wrap (_gae ,_feg ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");};if _gae =_aec .ComponentPageNumbers .Add (_bbc );_gae !=nil {return _a .Wrap (_gae ,_feg ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");};if _aec .Settings .KeepClassInstances {if _ce ,_gae =_gc .GetBitmap (_afa );_gae !=nil {return _a .Wrap (_gae ,_feg ,"\u004b\u0065\u0065\u0070Cl\u0061\u0073\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u002d \u0069");};if _ggc ,_gae =_aec .ClassInstances .GetBitmaps (_bec );_gae !=nil {return _a .Wrap (_gae ,_feg ,"K\u0065\u0065\u0070\u0043\u006c\u0061s\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065s\u0020\u002d\u0020i\u0043l\u0061\u0073\u0073");};_ggc .AddBitmap (_ce );if _edg ,_gae =_ead .Get (_afa );_gae !=nil {return _a .Wrap (_gae ,_feg ,"\u004be\u0065p\u0043\u006c\u0061\u0073\u0073I\u006e\u0073t\u0061\u006e\u0063\u0065\u0073");};_ggc .AddBox (_edg );};break ;};};if !_ebdc {if _gfbd =_aec .ClassIDs .Add (_dde );_gfbd !=nil {return _a .Wrap (_gfbd ,_feg ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _gfbd =_aec .ComponentPageNumbers .Add (_bbc );_gfbd !=nil {return _a .Wrap (_gfbd ,_feg ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_ggc =&_f .Bitmaps {};if _ce ,_gfbd =_gc .GetBitmap (_afa );_gfbd !=nil {return _a .Wrap (_gfbd ,_feg ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_ggc .AddBitmap (_ce );_daac ,_agd :=_ce .Width ,_ce .Height ;_ebgg :=uint64 (_agd )*uint64 (_daac );_aec .TemplatesSize .Add (_ebgg ,_dde );if _edg ,_gfbd =_ead .Get (_afa );_gfbd !=nil {return _a .Wrap (_gfbd ,_feg ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_ggc .AddBox (_edg );_aec .ClassInstances .AddBitmaps (_ggc );_aec .CentroidPointsTemplates .AddPoint (_cgb ,_acg );_aec .FgTemplates .AddInt (_ebg );_aec .UndilatedTemplates .AddBitmap (_ce );_ba =(_beb .Width -2*JbAddedPixels )*(_beb .Height -2*JbAddedPixels );if _gfbd =_aec .TemplateAreas .Add (_ba );_gfbd !=nil {return _a .Wrap (_gfbd ,_feg ,"\u0021\u0066\u006f\u0075\u006e\u0064");};};};_aec .NumberOfClasses =len (_aec .UndilatedTemplates .Values );return nil ;};func (_aa *Classer )AddPage (inputPage *_f .Bitmap ,pageNumber int ,method Method )(_ab error ){const _af ="\u0043l\u0061s\u0073\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_aa .Widths [pageNumber ]=inputPage .Width ;_aa .Heights [pageNumber ]=inputPage .Height ;if _ab =_aa .verifyMethod (method );_ab !=nil {return _a .Wrap (_ab ,_af ,"");};_cc ,_dg ,_ab :=inputPage .GetComponents (_aa .Settings .Components ,_aa .Settings .MaxCompWidth ,_aa .Settings .MaxCompHeight );if _ab !=nil {return _a .Wrap (_ab ,_af ,"");};_g .Log .Debug ("\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_cc );if _ab =_aa .addPageComponents (inputPage ,_dg ,_cc ,pageNumber ,method );_ab !=nil {return _a .Wrap (_ab ,_af ,"");};return nil ;};func (_egf *Classer )classifyRankHaus (_eeg *_f .Boxes ,_cef *_f .Bitmaps ,_ded int )error {const _gbf ="\u0063\u006ca\u0073\u0073\u0069f\u0079\u0052\u0061\u006e\u006b\u0048\u0061\u0075\u0073";if _eeg ==nil {return _a .Error (_gbf ,"\u0062\u006fx\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if _cef ==nil {return _a .Error (_gbf ,"\u0070\u0069x\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};_cfa :=len (_cef .Values );if _cfa ==0{return _a .Error (_gbf ,"e\u006dp\u0074\u0079\u0020\u006e\u0065\u0077\u0020\u0063o\u006d\u0070\u006f\u006een\u0074\u0073");};_gaga :=_cef .CountPixels ();_cgc :=_egf .Settings .SizeHaus ;_bac :=_f .SelCreateBrick (_cgc ,_cgc ,_cgc /2,_cgc /2,_f .SelHit );_ccfa :=&_f .Bitmaps {Values :make ([]*_f .Bitmap ,_cfa )};_babe :=&_f .Bitmaps {Values :make ([]*_f .Bitmap ,_cfa )};var (_fcf ,_dfd ,_def *_f .Bitmap ;_abf error ;);for _ccd :=0;_ccd < _cfa ;_ccd ++{_fcf ,_abf =_cef .GetBitmap (_ccd );if _abf !=nil {return _a .Wrap (_abf ,_gbf ,"");};_dfd ,_abf =_fcf .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);if _abf !=nil {return _a .Wrap (_abf ,_gbf ,"");};_def ,_abf =_f .Dilate (nil ,_dfd ,_bac );if _abf !=nil {return _a .Wrap (_abf ,_gbf ,"");};_ccfa .Values [_cfa ]=_dfd ;_babe .Values [_cfa ]=_def ;};_gfef ,_abf :=_f .Centroids (_ccfa .Values );if _abf !=nil {return _a .Wrap (_abf ,_gbf ,"");};if _abf =_gfef .Add (_egf .CentroidPoints );_abf !=nil {_g .Log .Trace ("\u004e\u006f\u0020\u0063en\u0074\u0072\u006f\u0069\u0064\u0073\u0020\u0074\u006f\u0020\u0061\u0064\u0064");};if _egf .Settings .RankHaus ==1.0{_abf =_egf .classifyRankHouseOne (_eeg ,_cef ,_ccfa ,_babe ,_gfef ,_ded );}else {_abf =_egf .classifyRankHouseNonOne (_eeg ,_cef ,_ccfa ,_babe ,_gfef ,_gaga ,_ded );};if _abf !=nil {return _a .Wrap (_abf ,_gbf ,"");};return nil ;};func (_df *Classer )ComputeLLCorners ()(_ef error ){const _afd ="\u0043l\u0061\u0073\u0073\u0065\u0072\u002e\u0043\u006f\u006d\u0070\u0075t\u0065\u004c\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";if _df .PtaUL ==nil {return _a .Error (_afd ,"\u0055\u004c\u0020\u0043or\u006e\u0065\u0072\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006ee\u0064");};_db :=len (*_df .PtaUL );_df .PtaLL =&_f .Points {};var (_fd ,_ae float32 ;_ff ,_fb int ;_aba *_f .Bitmap ;);for _fc :=0;_fc < _db ;_fc ++{_fd ,_ae ,_ef =_df .PtaUL .GetGeometry (_fc );if _ef !=nil {_g .Log .Debug ("\u0047e\u0074\u0074\u0069\u006e\u0067\u0020\u0050\u0074\u0061\u0055\u004c \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_ef );return _a .Wrap (_ef ,_afd ,"\u0050\u0074\u0061\u0055\u004c\u0020\u0047\u0065\u006fm\u0065\u0074\u0072\u0079");};_ff ,_ef =_df .ClassIDs .Get (_fc );if _ef !=nil {_g .Log .Debug ("\u0047\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0043\u006c\u0061s\u0073\u0049\u0044\u0020\u0066\u0061\u0069\u006c\u0065\u0064:\u0020\u0025\u0076",_ef );return _a .Wrap (_ef ,_afd ,"\u0043l\u0061\u0073\u0073\u0049\u0044");};_aba ,_ef =_df .UndilatedTemplates .GetBitmap (_ff );if _ef !=nil {_g .Log .Debug ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0055\u006ed\u0069\u006c\u0061\u0074\u0065\u0064\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_ef );return _a .Wrap (_ef ,_afd ,"\u0055\u006e\u0064\u0069la\u0074\u0065\u0064\u0020\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");};_fb =_aba .Height ;_df .PtaLL .AddPoint (_fd ,_ae +float32 (_fb ));};return nil ;};const (MaxConnCompWidth =350;MaxCharCompWidth =350;MaxWordCompWidth =1000;MaxCompHeight =120;);func (_baa *Classer )classifyRankHouseOne (_fbb *_f .Boxes ,_eaae ,_dea ,_bbd *_f .Bitmaps ,_addg *_f .Points ,_gga int )(_ca error ){const _edd ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";var (_bag ,_aaf ,_aff ,_bdd float32 ;_fdd int ;_cdg ,_egc ,_eed ,_ffe ,_ebc *_f .Bitmap ;_bebc ,_bage bool ;);for _dcf :=0;_dcf < len (_eaae .Values );_dcf ++{_egc =_dea .Values [_dcf ];_eed =_bbd .Values [_dcf ];_bag ,_aaf ,_ca =_addg .GetGeometry (_dcf );if _ca !=nil {return _a .Wrapf (_ca ,_edd ,"\u0066\u0069\u0072\u0073\u0074\u0020\u0067\u0065\u006fm\u0065\u0074\u0072\u0079");};_gd :=len (_baa .UndilatedTemplates .Values );_bebc =false ;_afb :=_ccfad (_baa ,_egc );for _fdd =_afb .Next ();_fdd > -1;{_ffe ,_ca =_baa .UndilatedTemplates .GetBitmap (_fdd );if _ca !=nil {return _a .Wrap (_ca ,_edd ,"\u0062\u006d\u0033");};_ebc ,_ca =_baa .DilatedTemplates .GetBitmap (_fdd );if _ca !=nil {return _a .Wrap (_ca ,_edd ,"\u0062\u006d\u0034");};_aff ,_bdd ,_ca =_baa .CentroidPointsTemplates .GetGeometry (_fdd );if _ca !=nil {return _a .Wrap (_ca ,_edd ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0073");};_bage ,_ca =_f .HausTest (_egc ,_eed ,_ffe ,_ebc ,_bag -_aff ,_aaf -_bdd ,MaxDiffWidth ,MaxDiffHeight );if _ca !=nil {return _a .Wrap (_ca ,_edd ,"");};if _bage {_bebc =true ;if _ca =_baa .ClassIDs .Add (_fdd );_ca !=nil {return _a .Wrap (_ca ,_edd ,"");};if _ca =_baa .ComponentPageNumbers .Add (_gga );_ca !=nil {return _a .Wrap (_ca ,_edd ,"");};if _baa .Settings .KeepClassInstances {_gfg ,_bea :=_baa .ClassInstances .GetBitmaps (_fdd );if _bea !=nil {return _a .Wrap (_bea ,_edd ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_cdg ,_bea =_eaae .GetBitmap (_dcf );if _bea !=nil {return _a .Wrap (_bea ,_edd ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_gfg .AddBitmap (_cdg );_gef ,_bea :=_fbb .Get (_dcf );if _bea !=nil {return _a .Wrap (_bea ,_edd ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_gfg .AddBox (_gef );};break ;};};if !_bebc {if _ca =_baa .ClassIDs .Add (_gd );_ca !=nil {return _a .Wrap (_ca ,_edd ,"");};if _ca =_baa .ComponentPageNumbers .Add (_gga );_ca !=nil {return _a .Wrap (_ca ,_edd ,"");};_fga :=&_f .Bitmaps {};_cdg ,_ca =_eaae .GetBitmap (_dcf );if _ca !=nil {return _a .Wrap (_ca ,_edd ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_fga .Values =append (_fga .Values ,_cdg );_aad ,_ddb :=_cdg .Width ,_cdg .Height ;_baa .TemplatesSize .Add (uint64 (_ddb )*uint64 (_aad ),_gd );_ada ,_dee :=_fbb .Get (_dcf );if _dee !=nil {return _a .Wrap (_dee ,_edd ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_fga .AddBox (_ada );_baa .ClassInstances .AddBitmaps (_fga );_baa .CentroidPointsTemplates .AddPoint (_bag ,_aaf );_baa .UndilatedTemplates .AddBitmap (_egc );_baa .DilatedTemplates .AddBitmap (_eed );};};return nil ;};type Method int ;func (_cdd Settings )Validate ()error {const _aefgd ="\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0073\u002e\u0056\u0061\u006ci\u0064\u0061\u0074\u0065";if _cdd .Thresh < 0.4||_cdd .Thresh > 0.98{return _a .Error (_aefgd ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074\u0068\u0072\u0065\u0073\u0068\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0034\u0020\u002d\u0020\u0030\u002e\u0039\u0038\u005d");};if _cdd .WeightFactor < 0.0||_cdd .WeightFactor > 1.0{return _a .Error (_aefgd ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006ec\u006f\u0064\u0065\u0072\u0020w\u0065\u0069\u0067\u0068\u0074\u0020\u0066\u0061\u0063\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0030\u0020\u002d\u0020\u0031\u002e\u0030\u005d");};if _cdd .RankHaus < 0.5||_cdd .RankHaus > 1.0{return _a .Error (_aefgd ,"\u006a\u0062\u0069\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0072a\u006e\u006b\u0020\u0068\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065 \u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065 [\u0030\u002e\u0035\u0020\u002d\u0020\u0031\u002e\u0030\u005d");};if _cdd .SizeHaus < 1||_cdd .SizeHaus > 10{return _a .Error (_aefgd ,"\u006a\u0062\u0069\u0067\u0032 \u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0073\u0069\u007a\u0065\u0020h\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0031\u0020\u002d\u0020\u0031\u0030]");};switch _cdd .Components {case _f .ComponentConn ,_f .ComponentCharacters ,_f .ComponentWords :default:return _a .Error (_aefgd ,"\u0069n\u0076\u0061\u006c\u0069d\u0020\u0063\u006c\u0061\u0073s\u0065r\u0020c\u006f\u006d\u0070\u006f\u006e\u0065\u006et");};return nil ;};func (_fge *similarTemplatesFinder )Next ()int {var (_bbgd ,_daaf ,_ggf ,_ged int ;_bba bool ;_dfa *_f .Bitmap ;_aadc error ;);for {if _fge .Index >=25{return -1;};_daaf =_fge .Width +TwoByTwoWalk [2*_fge .Index ];_bbgd =_fge .Height +TwoByTwoWalk [2*_fge .Index +1];if _bbgd < 1||_daaf < 1{_fge .Index ++;continue ;};if len (_fge .CurrentNumbers )==0{_fge .CurrentNumbers ,_bba =_fge .Classer .TemplatesSize .GetSlice (uint64 (_daaf )*uint64 (_bbgd ));if !_bba {_fge .Index ++;continue ;};_fge .N =0;};_ggf =len (_fge .CurrentNumbers );for ;_fge .N < _ggf ;_fge .N ++{_ged =_fge .CurrentNumbers [_fge .N ];_dfa ,_aadc =_fge .Classer .DilatedTemplates .GetBitmap (_ged );if _aadc !=nil {_g .Log .Debug ("\u0046\u0069\u006e\u0064\u004e\u0065\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0074\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u006e\u006f\u0074 \u0066\u006fu\u006e\u0064\u003a\u0020");return 0;};if _dfa .Width -2*JbAddedPixels ==_daaf &&_dfa .Height -2*JbAddedPixels ==_bbgd {return _ged ;};};_fge .Index ++;_fge .CurrentNumbers =nil ;};};func (_be *Classer )addPageComponents (_cd *_f .Bitmap ,_bb *_f .Boxes ,_ccg *_f .Bitmaps ,_ga int ,_ac Method )error {const _ed ="\u0043l\u0061\u0073\u0073\u0065r\u002e\u0041\u0064\u0064\u0050a\u0067e\u0043o\u006d\u0070\u006f\u006e\u0065\u006e\u0074s";if _cd ==nil {return _a .Error (_ed ,"\u006e\u0069\u006c\u0020\u0069\u006e\u0070\u0075\u0074 \u0070\u0061\u0067\u0065");};if _bb ==nil ||_ccg ==nil ||len (*_bb )==0{_g .Log .Trace ("\u0041\u0064\u0064P\u0061\u0067\u0065\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0073\u002e\u0020\u004e\u006f\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065n\u0074\u0073\u0020\u0066\u006f\u0075\u006e\u0064",_cd );return nil ;};var _de error ;switch _ac {case RankHaus :_de =_be .classifyRankHaus (_bb ,_ccg ,_ga );case Correlation :_de =_be .classifyCorrelation (_bb ,_ccg ,_ga );default:_g .Log .Debug ("\u0055\u006ek\u006e\u006f\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064\u003a\u0020'%\u0076\u0027",_ac );return _a .Error (_ed ,"\u0075\u006e\u006bno\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064");};if _de !=nil {return _a .Wrap (_de ,_ed ,"");};if _de =_be .getULCorners (_cd ,_bb );_de !=nil {return _a .Wrap (_de ,_ed ,"");};_bd :=len (*_bb );_be .BaseIndex +=_bd ;if _de =_be .ComponentsNumber .Add (_bd );_de !=nil {return _a .Wrap (_de ,_ed ,"");};return nil ;};func (_aef *Classer )classifyRankHouseNonOne (_abc *_f .Boxes ,_fcda ,_daed ,_eca *_f .Bitmaps ,_bef *_f .Points ,_ebfb *_d .NumSlice ,_dbde int )(_edab error ){const _fcba ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";var (_geb ,_aefg ,_ebga ,_eef float32 ;_bddc ,_cfaa ,_cfag int ;_dcb ,_gdd ,_bf ,_adf ,_ccdc *_f .Bitmap ;_cbe ,_agfg bool ;);_bcea :=_f .MakePixelSumTab8 ();for _gbc :=0;_gbc < len (_fcda .Values );_gbc ++{if _gdd ,_edab =_daed .GetBitmap (_gbc );_edab !=nil {return _a .Wrap (_edab ,_fcba ,"b\u006d\u0073\u0031\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};if _bddc ,_edab =_ebfb .GetInt (_gbc );_edab !=nil {_g .Log .Trace ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0046\u0047T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073 \u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_gbc ,_edab );};if _bf ,_edab =_eca .GetBitmap (_gbc );_edab !=nil {return _a .Wrap (_edab ,_fcba ,"b\u006d\u0073\u0032\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};if _geb ,_aefg ,_edab =_bef .GetGeometry (_gbc );_edab !=nil {return _a .Wrapf (_edab ,_fcba ,"\u0070t\u0061[\u0069\u005d\u002e\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079");};_ecf :=len (_aef .UndilatedTemplates .Values );_cbe =false ;_cbeg :=_ccfad (_aef ,_gdd );for _cfag =_cbeg .Next ();_cfag > -1;{if _adf ,_edab =_aef .UndilatedTemplates .GetBitmap (_cfag );_edab !=nil {return _a .Wrap (_edab ,_fcba ,"\u0070\u0069\u0078\u0061\u0074\u002e\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");};if _cfaa ,_edab =_aef .FgTemplates .GetInt (_cfag );_edab !=nil {_g .Log .Trace ("\u0047\u0065\u0074\u0074\u0069\u006eg\u0020\u0046\u0047\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u005b\u0025d\u005d\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_cfag ,_edab );};if _ccdc ,_edab =_aef .DilatedTemplates .GetBitmap (_cfag );_edab !=nil {return _a .Wrap (_edab ,_fcba ,"\u0070\u0069\u0078\u0061\u0074\u0064\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");};if _ebga ,_eef ,_edab =_aef .CentroidPointsTemplates .GetGeometry (_cfag );_edab !=nil {return _a .Wrap (_edab ,_fcba ,"\u0043\u0065\u006et\u0072\u006f\u0069\u0064P\u006f\u0069\u006e\u0074\u0073\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u005b\u0069\u0043\u006c\u0061\u0073\u0073\u005d");};_agfg ,_edab =_f .RankHausTest (_gdd ,_bf ,_adf ,_ccdc ,_geb -_ebga ,_aefg -_eef ,MaxDiffWidth ,MaxDiffHeight ,_bddc ,_cfaa ,float32 (_aef .Settings .RankHaus ),_bcea );if _edab !=nil {return _a .Wrap (_edab ,_fcba ,"");};if _agfg {_cbe =true ;if _edab =_aef .ClassIDs .Add (_cfag );_edab !=nil {return _a .Wrap (_edab ,_fcba ,"");};if _edab =_aef .ComponentPageNumbers .Add (_dbde );_edab !=nil {return _a .Wrap (_edab ,_fcba ,"");};if _aef .Settings .KeepClassInstances {_eefe ,_dag :=_aef .ClassInstances .GetBitmaps (_cfag );if _dag !=nil {return _a .Wrap (_dag ,_fcba ,"\u0063\u002e\u0050\u0069\u0078\u0061\u0061\u002e\u0047\u0065\u0074B\u0069\u0074\u006d\u0061\u0070\u0073\u0028\u0069\u0043\u006ca\u0073\u0073\u0029");};if _dcb ,_dag =_fcda .GetBitmap (_gbc );_dag !=nil {return _a .Wrap (_dag ,_fcba ,"\u0070i\u0078\u0061\u005b\u0069\u005d");};_eefe .Values =append (_eefe .Values ,_dcb );_fag ,_dag :=_abc .Get (_gbc );if _dag !=nil {return _a .Wrap (_dag ,_fcba ,"b\u006f\u0078\u0061\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};_eefe .Boxes =append (_eefe .Boxes ,_fag );};break ;};};if !_cbe {if _edab =_aef .ClassIDs .Add (_ecf );_edab !=nil {return _a .Wrap (_edab ,_fcba ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _edab =_aef .ComponentPageNumbers .Add (_dbde );_edab !=nil {return _a .Wrap (_edab ,_fcba ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_fbde :=&_f .Bitmaps {};_dcb =_fcda .Values [_gbc ];_fbde .AddBitmap (_dcb );_ega ,_cgf :=_dcb .Width ,_dcb .Height ;_aef .TemplatesSize .Add (uint64 (_ega )*uint64 (_cgf ),_ecf );_cfe ,_gad :=_abc .Get (_gbc );if _gad !=nil {return _a .Wrap (_gad ,_fcba ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_fbde .AddBox (_cfe );_aef .ClassInstances .AddBitmaps (_fbde );_aef .CentroidPointsTemplates .AddPoint (_geb ,_aefg );_aef .UndilatedTemplates .AddBitmap (_gdd );_aef .DilatedTemplates .AddBitmap (_bf );_aef .FgTemplates .AddInt (_bddc );};};_aef .NumberOfClasses =len (_aef .UndilatedTemplates .Values );return nil ;};func _ccfad (_eff *Classer ,_cdb *_f .Bitmap )*similarTemplatesFinder {return &similarTemplatesFinder {Width :_cdb .Width ,Height :_cdb .Height ,Classer :_eff };};type Settings struct{MaxCompWidth int ;MaxCompHeight int ;SizeHaus int ;RankHaus float64 ;Thresh float64 ;WeightFactor float64 ;KeepClassInstances bool ;Components _f .Component ;Method Method ;};func (_cg *Classer )getULCorners (_dgd *_f .Bitmap ,_cf *_f .Boxes )error {const _ee ="\u0067\u0065\u0074U\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";if _dgd ==nil {return _a .Error (_ee ,"\u006e\u0069l\u0020\u0069\u006da\u0067\u0065\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if _cf ==nil {return _a .Error (_ee ,"\u006e\u0069\u006c\u0020\u0062\u006f\u0075\u006e\u0064\u0073");};if _cg .PtaUL ==nil {_cg .PtaUL =&_f .Points {};};_gf :=len (*_cf );var (_da ,_gfb ,_dc ,_dbb int ;_ffb ,_ge ,_fg ,_eda float32 ;_fbd error ;_gb *_e .Rectangle ;_dfg *_f .Bitmap ;_gbe _e .Point ;);for _ebb :=0;_ebb < _gf ;_ebb ++{_da =_cg .BaseIndex +_ebb ;if _ffb ,_ge ,_fbd =_cg .CentroidPoints .GetGeometry (_da );_fbd !=nil {return _a .Wrap (_fbd ,_ee ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050o\u0069\u006e\u0074\u0073");};if _gfb ,_fbd =_cg .ClassIDs .Get (_da );_fbd !=nil {return _a .Wrap (_fbd ,_ee ,"\u0043\u006c\u0061s\u0073\u0049\u0044\u0073\u002e\u0047\u0065\u0074");};if _fg ,_eda ,_fbd =_cg .CentroidPointsTemplates .GetGeometry (_gfb );_fbd !=nil {return _a .Wrap (_fbd ,_ee ,"\u0043\u0065\u006etr\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074\u0073\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");};_fdf :=_fg -_ffb ;_gg :=_eda -_ge ;if _fdf >=0{_dc =int (_fdf +0.5);}else {_dc =int (_fdf -0.5);};if _gg >=0{_dbb =int (_gg +0.5);}else {_dbb =int (_gg -0.5);};if _gb ,_fbd =_cf .Get (_ebb );_fbd !=nil {return _a .Wrap (_fbd ,_ee ,"");};_bc ,_daa :=_gb .Min .X ,_gb .Min .Y ;_dfg ,_fbd =_cg .UndilatedTemplates .GetBitmap (_gfb );if _fbd !=nil {return _a .Wrap (_fbd ,_ee ,"\u0055\u006e\u0064\u0069\u006c\u0061\u0074\u0065\u0064\u0054e\u006d\u0070\u006c\u0061\u0074\u0065\u0073.\u0047\u0065\u0074\u0028\u0069\u0043\u006c\u0061\u0073\u0073\u0029");};_gbe ,_fbd =_eg (_dgd ,_bc ,_daa ,_dc ,_dbb ,_dfg );if _fbd !=nil {return _a .Wrap (_fbd ,_ee ,"");};_cg .PtaUL .AddPoint (float32 (_bc -_dc +_gbe .X ),float32 (_daa -_dbb +_gbe .Y ));};return nil ;};func _eg (_cb *_f .Bitmap ,_gff ,_aca ,_ebf ,_bcc int ,_dec *_f .Bitmap )(_bdb _e .Point ,_ccf error ){const _efe ="\u0066i\u006e\u0061\u006c\u0041l\u0069\u0067\u006e\u006d\u0065n\u0074P\u006fs\u0069\u0074\u0069\u006f\u006e\u0069\u006eg";if _cb ==nil {return _bdb ,_a .Error (_efe ,"\u0073\u006f\u0075\u0072ce\u0020\u006e\u006f\u0074\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064");};if _dec ==nil {return _bdb ,_a .Error (_efe ,"t\u0065\u006d\u0070\u006cat\u0065 \u006e\u006f\u0074\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064");};_fcb ,_dbd :=_dec .Width ,_dec .Height ;_fe ,_dae :=_gff -_ebf -JbAddedPixels ,_aca -_bcc -JbAddedPixels ;_g .Log .Trace ("\u0078\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0079\u003a\u0020\u0027\u0025\u0064'\u002c\u0020\u0077\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0068\u003a \u0027\u0025\u0064\u0027\u002c\u0020\u0062\u0078\u003a\u0020\u0027\u0025d'\u002c\u0020\u0062\u0079\u003a\u0020\u0027\u0025\u0064\u0027",_gff ,_aca ,_fcb ,_dbd ,_fe ,_dae );_gge ,_ccf :=_f .Rect (_fe ,_dae ,_fcb ,_dbd );if _ccf !=nil {return _bdb ,_a .Wrap (_ccf ,_efe ,"");};_dac ,_ ,_ccf :=_cb .ClipRectangle (_gge );if _ccf !=nil {_g .Log .Error ("\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069\u0070\u0020\u0072\u0065c\u0074\u0061\u006e\u0067\u006c\u0065\u003a\u0020\u0025\u0076",_gge );return _bdb ,_a .Wrap (_ccf ,_efe ,"");};_bcd :=_f .New (_dac .Width ,_dac .Height );_ccfd :=_eb .MaxInt32 ;var _ad ,_gea ,_ccc ,_fdfb ,_fbc int ;for _ad =-1;_ad <=1;_ad ++{for _gea =-1;_gea <=1;_gea ++{if _ ,_ccf =_f .Copy (_bcd ,_dac );_ccf !=nil {return _bdb ,_a .Wrap (_ccf ,_efe ,"");};if _ccf =_bcd .RasterOperation (_gea ,_ad ,_fcb ,_dbd ,_f .PixSrcXorDst ,_dec ,0,0);_ccf !=nil {return _bdb ,_a .Wrap (_ccf ,_efe ,"");};_ccc =_bcd .CountPixels ();if _ccc < _ccfd {_fdfb =_gea ;_fbc =_ad ;_ccfd =_ccc ;};};};_bdb .X =_fdfb ;_bdb .Y =_fbc ;return _bdb ,nil ;};type Classer struct{BaseIndex int ;Settings Settings ;ComponentsNumber *_d .IntSlice ;TemplateAreas *_d .IntSlice ;Widths map[int ]int ;Heights map[int ]int ;NumberOfClasses int ;ClassInstances *_f .BitmapsArray ;UndilatedTemplates *_f .Bitmaps ;DilatedTemplates *_f .Bitmaps ;TemplatesSize _d .IntsMap ;FgTemplates *_d .NumSlice ;CentroidPoints *_f .Points ;CentroidPointsTemplates *_f .Points ;ClassIDs *_d .IntSlice ;ComponentPageNumbers *_d .IntSlice ;PtaUL *_f .Points ;PtaLL *_f .Points ;};const JbAddedPixels =6;