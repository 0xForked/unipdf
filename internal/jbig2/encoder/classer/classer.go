//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package classer ;import (_e "github.com/unidoc/unipdf/v3/common";_c "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_g "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";_a "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_b "image";_db "math";);
const JbAddedPixels =6;type Method int ;func (_fcf *Classer )classifyCorrelation (_ggg *_g .Boxes ,_ed *_g .Bitmaps ,_aaa int )error {const _eca ="\u0063\u006c\u0061\u0073si\u0066\u0079\u0043\u006f\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e";
if _ggg ==nil {return _a .Error (_eca ,"\u006e\u0065\u0077\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0062\u006f\u0075\u006e\u0064\u0069\u006e\u0067\u0020\u0062o\u0078\u0065\u0073\u0020\u006eo\u0074\u0020f\u006f\u0075\u006e\u0064");
};if _ed ==nil {return _a .Error (_eca ,"\u006e\u0065wC\u006f\u006d\u0070o\u006e\u0065\u006e\u0074s b\u0069tm\u0061\u0070\u0020\u0061\u0072\u0072\u0061y \u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064");};_beg :=len (_ed .Values );if _beg ==0{_e .Log .Debug ("\u0063l\u0061\u0073s\u0069\u0066\u0079C\u006f\u0072\u0072\u0065\u006c\u0061\u0074i\u006f\u006e\u0020\u002d\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0070\u0069\u0078\u0061s\u0020\u0069\u0073\u0020\u0065\u006d\u0070\u0074\u0079");
return nil ;};var (_eef ,_gf *_g .Bitmap ;_eec error ;);_eda :=&_g .Bitmaps {Values :make ([]*_g .Bitmap ,_beg )};for _ebd ,_aea :=range _ed .Values {_gf ,_eec =_aea .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);if _eec !=nil {return _a .Wrap (_eec ,_eca ,"");
};_eda .Values [_ebd ]=_gf ;};_bcg :=_fcf .FgTemplates ;_ab :=_g .MakePixelSumTab8 ();_fe :=_g .MakePixelCentroidTab8 ();_adg :=make ([]int ,_beg );_dab :=make ([][]int ,_beg );_feb :=_g .Points (make ([]_g .Point ,_beg ));_afb :=&_feb ;var (_ccd ,_fbg int ;
_gfb ,_dgg ,_dbfe int ;_gga ,_bac int ;_gc byte ;);for _eea ,_efa :=range _eda .Values {_dab [_eea ]=make ([]int ,_efa .Height );_ccd =0;_fbg =0;_dgg =(_efa .Height -1)*_efa .RowStride ;_gfb =0;for _bac =_efa .Height -1;_bac >=0;_bac ,_dgg =_bac -1,_dgg -_efa .RowStride {_dab [_eea ][_bac ]=_gfb ;
_dbfe =0;for _gga =0;_gga < _efa .RowStride ;_gga ++{_gc =_efa .Data [_dgg +_gga ];_dbfe +=_ab [_gc ];_ccd +=_fe [_gc ]+_gga *8*_ab [_gc ];};_gfb +=_dbfe ;_fbg +=_dbfe *_bac ;};_adg [_eea ]=_gfb ;if _gfb > 0{(*_afb )[_eea ]=_g .Point {X :float32 (_ccd )/float32 (_gfb ),Y :float32 (_fbg )/float32 (_gfb )};
}else {(*_afb )[_eea ]=_g .Point {X :float32 (_efa .Width )/float32 (2),Y :float32 (_efa .Height )/float32 (2)};};};if _eec =_fcf .CentroidPoints .Add (_afb );_eec !=nil {return _a .Wrap (_eec ,_eca ,"\u0063\u0065\u006et\u0072\u006f\u0069\u0064\u0020\u0061\u0064\u0064");
};var (_aaf ,_fcd ,_eaa int ;_eeac float64 ;_dde ,_cgg ,_agg ,_eg float32 ;_gfbd ,_gbd _g .Point ;_gfg bool ;_fa *similarTemplatesFinder ;_aba int ;_egf *_g .Bitmap ;_gbc *_b .Rectangle ;_cfa *_g .Bitmaps ;);for _aba ,_gf =range _eda .Values {_fcd =_adg [_aba ];
if _dde ,_cgg ,_eec =_afb .GetGeometry (_aba );_eec !=nil {return _a .Wrap (_eec ,_eca ,"\u0070t\u0061\u0020\u002d\u0020\u0069");};_gfg =false ;_cef :=len (_fcf .UndilatedTemplates .Values );_fa =_gadb (_fcf ,_gf );for _bfe :=_fa .Next ();_bfe > -1;{if _egf ,_eec =_fcf .UndilatedTemplates .GetBitmap (_bfe );
_eec !=nil {return _a .Wrap (_eec ,_eca ,"\u0075\u006e\u0069dl\u0061\u0074\u0065\u0064\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0062\u006d\u0032");};if _eaa ,_eec =_bcg .GetInt (_bfe );_eec !=nil {_e .Log .Trace ("\u0046\u0047\u0020T\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u005b\u0069\u0063\u006ca\u0073\u0073\u005d\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_eec );
};if _agg ,_eg ,_eec =_fcf .CentroidPointsTemplates .GetGeometry (_bfe );_eec !=nil {return _a .Wrap (_eec ,_eca ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074T\u0065\u006d\u0070\u006c\u0061\u0074e\u0073\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u00782\u002c\u0079\u0032\u0020");
};if _fcf .Settings .WeightFactor > 0.0{if _aaf ,_eec =_fcf .TemplateAreas .Get (_bfe );_eec !=nil {_e .Log .Trace ("\u0054\u0065\u006dp\u006c\u0061\u0074\u0065A\u0072\u0065\u0061\u0073\u005b\u0069\u0063l\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0061\u0072\u0065\u0061\u0020\u0025\u0076",_eec );
};_eeac =_fcf .Settings .Thresh +(1.0-_fcf .Settings .Thresh )*_fcf .Settings .WeightFactor *float64 (_eaa )/float64 (_aaf );}else {_eeac =_fcf .Settings .Thresh ;};_abd ,_eceg :=_g .CorrelationScoreThresholded (_gf ,_egf ,_fcd ,_eaa ,_gfbd .X -_gbd .X ,_gfbd .Y -_gbd .Y ,MaxDiffWidth ,MaxDiffHeight ,_ab ,_dab [_aba ],float32 (_eeac ));
if _eceg !=nil {return _a .Wrap (_eceg ,_eca ,"");};if _gad {var (_adag ,_fbb float64 ;_ega ,_afe int ;);_adag ,_eceg =_g .CorrelationScore (_gf ,_egf ,_fcd ,_eaa ,_dde -_agg ,_cgg -_eg ,MaxDiffWidth ,MaxDiffHeight ,_ab );if _eceg !=nil {return _a .Wrap (_eceg ,_eca ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");
};_fbb ,_eceg =_g .CorrelationScoreSimple (_gf ,_egf ,_fcd ,_eaa ,_dde -_agg ,_cgg -_eg ,MaxDiffWidth ,MaxDiffHeight ,_ab );if _eceg !=nil {return _a .Wrap (_eceg ,_eca ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");
};_ega =int (_db .Sqrt (_adag *float64 (_fcd )*float64 (_eaa )));_afe =int (_db .Sqrt (_fbb *float64 (_fcd )*float64 (_eaa )));if (_adag >=_eeac )!=(_fbb >=_eeac ){return _a .Errorf (_eca ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043\u006f\u0072r\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0063\u006f\u0072\u0065\u0020\u006d\u0069\u0073\u006d\u0061\u0074\u0063\u0068\u0020-\u0020\u0025d\u0028\u00250\u002e\u0034\u0066\u002c\u0020\u0025\u0076\u0029\u0020\u0076\u0073\u0020\u0025d(\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0076)\u0020\u0025\u0030\u002e\u0034\u0066",_ega ,_adag ,_adag >=_eeac ,_afe ,_fbb ,_fbb >=_eeac ,_adag -_fbb );
};if _adag >=_eeac !=_abd {return _a .Errorf (_eca ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043o\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e \u0073\u0063\u006f\u0072\u0065 \u004d\u0069\u0073\u006d\u0061t\u0063\u0068 \u0062\u0065\u0074w\u0065\u0065\u006e\u0020\u0063\u006frr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020/\u0020\u0074\u0068\u0072\u0065s\u0068\u006f\u006c\u0064\u002e\u0020\u0043\u006f\u006dpa\u0072\u0069\u0073\u006f\u006e:\u0020\u0025\u0030\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0064\u0029\u0020\u003e\u003d\u0020\u00250\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u0029\u0020\u0076\u0073\u0020\u0025\u0076",_adag ,_adag *float64 (_fcd )*float64 (_eaa ),_ega ,_eeac ,float32 (_eeac )*float32 (_fcd )*float32 (_eaa ),_abd );
};};if _abd {_gfg =true ;if _eceg =_fcf .ClassIDs .Add (_bfe );_eceg !=nil {return _a .Wrap (_eceg ,_eca ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");};if _eceg =_fcf .ComponentPageNumbers .Add (_aaa );_eceg !=nil {return _a .Wrap (_eceg ,_eca ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");
};if _fcf .Settings .KeepClassInstances {if _eef ,_eceg =_ed .GetBitmap (_aba );_eceg !=nil {return _a .Wrap (_eceg ,_eca ,"\u004b\u0065\u0065\u0070Cl\u0061\u0073\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u002d \u0069");};if _cfa ,_eceg =_fcf .ClassInstances .GetBitmaps (_bfe );
_eceg !=nil {return _a .Wrap (_eceg ,_eca ,"K\u0065\u0065\u0070\u0043\u006c\u0061s\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065s\u0020\u002d\u0020i\u0043l\u0061\u0073\u0073");};_cfa .AddBitmap (_eef );if _gbc ,_eceg =_ggg .Get (_aba );_eceg !=nil {return _a .Wrap (_eceg ,_eca ,"\u004be\u0065p\u0043\u006c\u0061\u0073\u0073I\u006e\u0073t\u0061\u006e\u0063\u0065\u0073");
};_cfa .AddBox (_gbc );};break ;};};if !_gfg {if _eec =_fcf .ClassIDs .Add (_cef );_eec !=nil {return _a .Wrap (_eec ,_eca ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _eec =_fcf .ComponentPageNumbers .Add (_aaa );_eec !=nil {return _a .Wrap (_eec ,_eca ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_cfa =&_g .Bitmaps {};if _eef ,_eec =_ed .GetBitmap (_aba );_eec !=nil {return _a .Wrap (_eec ,_eca ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_cfa .AddBitmap (_eef );_de ,_dga :=_eef .Width ,_eef .Height ;_dad :=uint64 (_dga )*uint64 (_de );_fcf .TemplatesSize .Add (_dad ,_cef );
if _gbc ,_eec =_ggg .Get (_aba );_eec !=nil {return _a .Wrap (_eec ,_eca ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_cfa .AddBox (_gbc );_fcf .ClassInstances .AddBitmaps (_cfa );_fcf .CentroidPointsTemplates .AddPoint (_dde ,_cgg );_fcf .FgTemplates .AddInt (_fcd );
_fcf .UndilatedTemplates .AddBitmap (_eef );_aaf =(_gf .Width -2*JbAddedPixels )*(_gf .Height -2*JbAddedPixels );if _eec =_fcf .TemplateAreas .Add (_aaf );_eec !=nil {return _a .Wrap (_eec ,_eca ,"\u0021\u0066\u006f\u0075\u006e\u0064");};};};_fcf .NumberOfClasses =len (_fcf .UndilatedTemplates .Values );
return nil ;};func (_begf *Classer )classifyRankHouseNonOne (_agc *_g .Boxes ,_cgc ,_gedb ,_ddf *_g .Bitmaps ,_dgc *_g .Points ,_aee *_c .NumSlice ,_dabe int )(_aeda error ){const _dgag ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";
var (_gca ,_dfa ,_fdf ,_fff float32 ;_cge ,_eee ,_dada int ;_fdfa ,_bcd ,_fgd ,_bfee ,_bfd *_g .Bitmap ;_acbd ,_cba bool ;);_bec :=_g .MakePixelSumTab8 ();for _abg :=0;_abg < len (_cgc .Values );_abg ++{if _bcd ,_aeda =_gedb .GetBitmap (_abg );_aeda !=nil {return _a .Wrap (_aeda ,_dgag ,"b\u006d\u0073\u0031\u002e\u0047\u0065\u0074\u0028\u0069\u0029");
};if _cge ,_aeda =_aee .GetInt (_abg );_aeda !=nil {_e .Log .Trace ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0046\u0047T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073 \u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_abg ,_aeda );
};if _fgd ,_aeda =_ddf .GetBitmap (_abg );_aeda !=nil {return _a .Wrap (_aeda ,_dgag ,"b\u006d\u0073\u0032\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};if _gca ,_dfa ,_aeda =_dgc .GetGeometry (_abg );_aeda !=nil {return _a .Wrapf (_aeda ,_dgag ,"\u0070t\u0061[\u0069\u005d\u002e\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079");
};_cda :=len (_begf .UndilatedTemplates .Values );_acbd =false ;_efaa :=_gadb (_begf ,_bcd );for _dada =_efaa .Next ();_dada > -1;{if _bfee ,_aeda =_begf .UndilatedTemplates .GetBitmap (_dada );_aeda !=nil {return _a .Wrap (_aeda ,_dgag ,"\u0070\u0069\u0078\u0061\u0074\u002e\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");
};if _eee ,_aeda =_begf .FgTemplates .GetInt (_dada );_aeda !=nil {_e .Log .Trace ("\u0047\u0065\u0074\u0074\u0069\u006eg\u0020\u0046\u0047\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u005b\u0025d\u005d\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_dada ,_aeda );
};if _bfd ,_aeda =_begf .DilatedTemplates .GetBitmap (_dada );_aeda !=nil {return _a .Wrap (_aeda ,_dgag ,"\u0070\u0069\u0078\u0061\u0074\u0064\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");};if _fdf ,_fff ,_aeda =_begf .CentroidPointsTemplates .GetGeometry (_dada );
_aeda !=nil {return _a .Wrap (_aeda ,_dgag ,"\u0043\u0065\u006et\u0072\u006f\u0069\u0064P\u006f\u0069\u006e\u0074\u0073\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u005b\u0069\u0043\u006c\u0061\u0073\u0073\u005d");};_cba ,_aeda =_g .RankHausTest (_bcd ,_fgd ,_bfee ,_bfd ,_gca -_fdf ,_dfa -_fff ,MaxDiffWidth ,MaxDiffHeight ,_cge ,_eee ,float32 (_begf .Settings .RankHaus ),_bec );
if _aeda !=nil {return _a .Wrap (_aeda ,_dgag ,"");};if _cba {_acbd =true ;if _aeda =_begf .ClassIDs .Add (_dada );_aeda !=nil {return _a .Wrap (_aeda ,_dgag ,"");};if _aeda =_begf .ComponentPageNumbers .Add (_dabe );_aeda !=nil {return _a .Wrap (_aeda ,_dgag ,"");
};if _begf .Settings .KeepClassInstances {_ccb ,_dgge :=_begf .ClassInstances .GetBitmaps (_dada );if _dgge !=nil {return _a .Wrap (_dgge ,_dgag ,"\u0063\u002e\u0050\u0069\u0078\u0061\u0061\u002e\u0047\u0065\u0074B\u0069\u0074\u006d\u0061\u0070\u0073\u0028\u0069\u0043\u006ca\u0073\u0073\u0029");
};if _fdfa ,_dgge =_cgc .GetBitmap (_abg );_dgge !=nil {return _a .Wrap (_dgge ,_dgag ,"\u0070i\u0078\u0061\u005b\u0069\u005d");};_ccb .Values =append (_ccb .Values ,_fdfa );_gff ,_dgge :=_agc .Get (_abg );if _dgge !=nil {return _a .Wrap (_dgge ,_dgag ,"b\u006f\u0078\u0061\u002e\u0047\u0065\u0074\u0028\u0069\u0029");
};_ccb .Boxes =append (_ccb .Boxes ,_gff );};break ;};};if !_acbd {if _aeda =_begf .ClassIDs .Add (_cda );_aeda !=nil {return _a .Wrap (_aeda ,_dgag ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _aeda =_begf .ComponentPageNumbers .Add (_dabe );_aeda !=nil {return _a .Wrap (_aeda ,_dgag ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_ccbf :=&_g .Bitmaps {};_fdfa =_cgc .Values [_abg ];_ccbf .AddBitmap (_fdfa );_gag ,_ggb :=_fdfa .Width ,_fdfa .Height ;_begf .TemplatesSize .Add (uint64 (_gag )*uint64 (_ggb ),_cda );_gdf ,_cagd :=_agc .Get (_abg );if _cagd !=nil {return _a .Wrap (_cagd ,_dgag ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_ccbf .AddBox (_gdf );_begf .ClassInstances .AddBitmaps (_ccbf );_begf .CentroidPointsTemplates .AddPoint (_gca ,_dfa );_begf .UndilatedTemplates .AddBitmap (_bcd );_begf .DilatedTemplates .AddBitmap (_fgd );_begf .FgTemplates .AddInt (_cge );};};_begf .NumberOfClasses =len (_begf .UndilatedTemplates .Values );
return nil ;};type Settings struct{MaxCompWidth int ;MaxCompHeight int ;SizeHaus int ;RankHaus float64 ;Thresh float64 ;WeightFactor float64 ;KeepClassInstances bool ;Components _g .Component ;Method Method ;};const (RankHaus Method =iota ;Correlation ;
);func (_gbe *Classer )classifyRankHouseOne (_cec *_g .Boxes ,_cad ,_ged ,_eeb *_g .Bitmaps ,_gef *_g .Points ,_ffc int )(_afef error ){const _dcbd ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";
var (_daae ,_aedf ,_ebda ,_fce float32 ;_efd int ;_cgf ,_ffe ,_cea ,_efdg ,_dgf *_g .Bitmap ;_bbd ,_cff bool ;);for _afea :=0;_afea < len (_cad .Values );_afea ++{_ffe =_ged .Values [_afea ];_cea =_eeb .Values [_afea ];_daae ,_aedf ,_afef =_gef .GetGeometry (_afea );
if _afef !=nil {return _a .Wrapf (_afef ,_dcbd ,"\u0066\u0069\u0072\u0073\u0074\u0020\u0067\u0065\u006fm\u0065\u0074\u0072\u0079");};_beb :=len (_gbe .UndilatedTemplates .Values );_bbd =false ;_caf :=_gadb (_gbe ,_ffe );for _efd =_caf .Next ();_efd > -1;
{_efdg ,_afef =_gbe .UndilatedTemplates .GetBitmap (_efd );if _afef !=nil {return _a .Wrap (_afef ,_dcbd ,"\u0062\u006d\u0033");};_dgf ,_afef =_gbe .DilatedTemplates .GetBitmap (_efd );if _afef !=nil {return _a .Wrap (_afef ,_dcbd ,"\u0062\u006d\u0034");
};_ebda ,_fce ,_afef =_gbe .CentroidPointsTemplates .GetGeometry (_efd );if _afef !=nil {return _a .Wrap (_afef ,_dcbd ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0073");};_cff ,_afef =_g .HausTest (_ffe ,_cea ,_efdg ,_dgf ,_daae -_ebda ,_aedf -_fce ,MaxDiffWidth ,MaxDiffHeight );
if _afef !=nil {return _a .Wrap (_afef ,_dcbd ,"");};if _cff {_bbd =true ;if _afef =_gbe .ClassIDs .Add (_efd );_afef !=nil {return _a .Wrap (_afef ,_dcbd ,"");};if _afef =_gbe .ComponentPageNumbers .Add (_ffc );_afef !=nil {return _a .Wrap (_afef ,_dcbd ,"");
};if _gbe .Settings .KeepClassInstances {_gade ,_acb :=_gbe .ClassInstances .GetBitmaps (_efd );if _acb !=nil {return _a .Wrap (_acb ,_dcbd ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_cgf ,_acb =_cad .GetBitmap (_afea );if _acb !=nil {return _a .Wrap (_acb ,_dcbd ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");
};_gade .AddBitmap (_cgf );_fab ,_acb :=_cec .Get (_afea );if _acb !=nil {return _a .Wrap (_acb ,_dcbd ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_gade .AddBox (_fab );};break ;};};if !_bbd {if _afef =_gbe .ClassIDs .Add (_beb );_afef !=nil {return _a .Wrap (_afef ,_dcbd ,"");
};if _afef =_gbe .ComponentPageNumbers .Add (_ffc );_afef !=nil {return _a .Wrap (_afef ,_dcbd ,"");};_ceb :=&_g .Bitmaps {};_cgf ,_afef =_cad .GetBitmap (_afea );if _afef !=nil {return _a .Wrap (_afef ,_dcbd ,"\u0021\u0066\u006f\u0075\u006e\u0064");};
_ceb .Values =append (_ceb .Values ,_cgf );_fga ,_cfe :=_cgf .Width ,_cgf .Height ;_gbe .TemplatesSize .Add (uint64 (_cfe )*uint64 (_fga ),_beb );_dcfe ,_bggc :=_cec .Get (_afea );if _bggc !=nil {return _a .Wrap (_bggc ,_dcbd ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_ceb .AddBox (_dcfe );_gbe .ClassInstances .AddBitmaps (_ceb );_gbe .CentroidPointsTemplates .AddPoint (_daae ,_aedf );_gbe .UndilatedTemplates .AddBitmap (_ffe );_gbe .DilatedTemplates .AddBitmap (_cea );};};return nil ;};func (_cdca *Settings )SetDefault (){if _cdca .MaxCompWidth ==0{switch _cdca .Components {case _g .ComponentConn :_cdca .MaxCompWidth =MaxConnCompWidth ;
case _g .ComponentCharacters :_cdca .MaxCompWidth =MaxCharCompWidth ;case _g .ComponentWords :_cdca .MaxCompWidth =MaxWordCompWidth ;};};if _cdca .MaxCompHeight ==0{_cdca .MaxCompHeight =MaxCompHeight ;};if _cdca .Thresh ==0.0{_cdca .Thresh =0.9;};if _cdca .WeightFactor ==0.0{_cdca .WeightFactor =0.75;
};if _cdca .RankHaus ==0.0{_cdca .RankHaus =0.97;};if _cdca .SizeHaus ==0{_cdca .SizeHaus =2;};};func (_ecbb *Classer )classifyRankHaus (_fea *_g .Boxes ,_bef *_g .Bitmaps ,_agb int )error {const _aadd ="\u0063\u006ca\u0073\u0073\u0069f\u0079\u0052\u0061\u006e\u006b\u0048\u0061\u0075\u0073";
if _fea ==nil {return _a .Error (_aadd ,"\u0062\u006fx\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if _bef ==nil {return _a .Error (_aadd ,"\u0070\u0069x\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};_abdg :=len (_bef .Values );if _abdg ==0{return _a .Error (_aadd ,"e\u006dp\u0074\u0079\u0020\u006e\u0065\u0077\u0020\u0063o\u006d\u0070\u006f\u006een\u0074\u0073");};_ecec :=_bef .CountPixels ();_fg :=_ecbb .Settings .SizeHaus ;_bff :=_g .SelCreateBrick (_fg ,_fg ,_fg /2,_fg /2,_g .SelHit );
_fag :=&_g .Bitmaps {Values :make ([]*_g .Bitmap ,_abdg )};_ffa :=&_g .Bitmaps {Values :make ([]*_g .Bitmap ,_abdg )};var (_bba ,_geb ,_dcc *_g .Bitmap ;_febd error ;);for _fac :=0;_fac < _abdg ;_fac ++{_bba ,_febd =_bef .GetBitmap (_fac );if _febd !=nil {return _a .Wrap (_febd ,_aadd ,"");
};_geb ,_febd =_bba .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);if _febd !=nil {return _a .Wrap (_febd ,_aadd ,"");};_dcc ,_febd =_g .Dilate (nil ,_geb ,_bff );if _febd !=nil {return _a .Wrap (_febd ,_aadd ,"");};_fag .Values [_abdg ]=_geb ;
_ffa .Values [_abdg ]=_dcc ;};_ccdc ,_febd :=_g .Centroids (_fag .Values );if _febd !=nil {return _a .Wrap (_febd ,_aadd ,"");};if _febd =_ccdc .Add (_ecbb .CentroidPoints );_febd !=nil {_e .Log .Trace ("\u004e\u006f\u0020\u0063en\u0074\u0072\u006f\u0069\u0064\u0073\u0020\u0074\u006f\u0020\u0061\u0064\u0064");
};if _ecbb .Settings .RankHaus ==1.0{_febd =_ecbb .classifyRankHouseOne (_fea ,_bef ,_fag ,_ffa ,_ccdc ,_agb );}else {_febd =_ecbb .classifyRankHouseNonOne (_fea ,_bef ,_fag ,_ffa ,_ccdc ,_ecec ,_agb );};if _febd !=nil {return _a .Wrap (_febd ,_aadd ,"");
};return nil ;};func DefaultSettings ()Settings {_becb :=&Settings {};_becb .SetDefault ();return *_becb };func (_cag *Classer )getULCorners (_ec *_g .Bitmap ,_gac *_g .Boxes )error {const _eab ="\u0067\u0065\u0074U\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";
if _ec ==nil {return _a .Error (_eab ,"\u006e\u0069l\u0020\u0069\u006da\u0067\u0065\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if _gac ==nil {return _a .Error (_eab ,"\u006e\u0069\u006c\u0020\u0062\u006f\u0075\u006e\u0064\u0073");};if _cag .PtaUL ==nil {_cag .PtaUL =&_g .Points {};
};_cf :=len (*_gac );var (_ae ,_ac ,_dd ,_ge int ;_bd ,_gdg ,_bgg ,_ef float32 ;_dcf error ;_eae *_b .Rectangle ;_agd *_g .Bitmap ;_ece _b .Point ;);for _gde :=0;_gde < _cf ;_gde ++{_ae =_cag .BaseIndex +_gde ;if _bd ,_gdg ,_dcf =_cag .CentroidPoints .GetGeometry (_ae );
_dcf !=nil {return _a .Wrap (_dcf ,_eab ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050o\u0069\u006e\u0074\u0073");};if _ac ,_dcf =_cag .ClassIDs .Get (_ae );_dcf !=nil {return _a .Wrap (_dcf ,_eab ,"\u0043\u006c\u0061s\u0073\u0049\u0044\u0073\u002e\u0047\u0065\u0074");
};if _bgg ,_ef ,_dcf =_cag .CentroidPointsTemplates .GetGeometry (_ac );_dcf !=nil {return _a .Wrap (_dcf ,_eab ,"\u0043\u0065\u006etr\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074\u0073\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");};_cc :=_bgg -_bd ;
_aed :=_ef -_gdg ;if _cc >=0{_dd =int (_cc +0.5);}else {_dd =int (_cc -0.5);};if _aed >=0{_ge =int (_aed +0.5);}else {_ge =int (_aed -0.5);};if _eae ,_dcf =_gac .Get (_gde );_dcf !=nil {return _a .Wrap (_dcf ,_eab ,"");};_cdc ,_ccg :=_eae .Min .X ,_eae .Min .Y ;
_agd ,_dcf =_cag .UndilatedTemplates .GetBitmap (_ac );if _dcf !=nil {return _a .Wrap (_dcf ,_eab ,"\u0055\u006e\u0064\u0069\u006c\u0061\u0074\u0065\u0064\u0054e\u006d\u0070\u006c\u0061\u0074\u0065\u0073.\u0047\u0065\u0074\u0028\u0069\u0043\u006c\u0061\u0073\u0073\u0029");
};_ece ,_dcf =_cdd (_ec ,_cdc ,_ccg ,_dd ,_ge ,_agd );if _dcf !=nil {return _a .Wrap (_dcf ,_eab ,"");};_cag .PtaUL .AddPoint (float32 (_cdc -_dd +_ece .X ),float32 (_ccg -_ge +_ece .Y ));};return nil ;};type similarTemplatesFinder struct{Classer *Classer ;
Width int ;Height int ;Index int ;CurrentNumbers []int ;N int ;};func (_bea Settings )Validate ()error {const _feg ="\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0073\u002e\u0056\u0061\u006ci\u0064\u0061\u0074\u0065";if _bea .Thresh < 0.4||_bea .Thresh > 0.98{return _a .Error (_feg ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074\u0068\u0072\u0065\u0073\u0068\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0034\u0020\u002d\u0020\u0030\u002e\u0039\u0038\u005d");
};if _bea .WeightFactor < 0.0||_bea .WeightFactor > 1.0{return _a .Error (_feg ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006ec\u006f\u0064\u0065\u0072\u0020w\u0065\u0069\u0067\u0068\u0074\u0020\u0066\u0061\u0063\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0030\u0020\u002d\u0020\u0031\u002e\u0030\u005d");
};if _bea .RankHaus < 0.5||_bea .RankHaus > 1.0{return _a .Error (_feg ,"\u006a\u0062\u0069\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0072a\u006e\u006b\u0020\u0068\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065 \u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065 [\u0030\u002e\u0035\u0020\u002d\u0020\u0031\u002e\u0030\u005d");
};if _bea .SizeHaus < 1||_bea .SizeHaus > 10{return _a .Error (_feg ,"\u006a\u0062\u0069\u0067\u0032 \u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0073\u0069\u007a\u0065\u0020h\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0031\u0020\u002d\u0020\u0031\u0030]");
};switch _bea .Components {case _g .ComponentConn ,_g .ComponentCharacters ,_g .ComponentWords :default:return _a .Error (_feg ,"\u0069n\u0076\u0061\u006c\u0069d\u0020\u0063\u006c\u0061\u0073s\u0065r\u0020c\u006f\u006d\u0070\u006f\u006e\u0065\u006et");
};return nil ;};func (_ca *Classer )AddPage (inputPage *_g .Bitmap ,pageNumber int ,method Method )(_ag error ){const _f ="\u0043l\u0061s\u0073\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_ca .Widths [pageNumber ]=inputPage .Width ;_ca .Heights [pageNumber ]=inputPage .Height ;
if _ag =_ca .verifyMethod (method );_ag !=nil {return _a .Wrap (_ag ,_f ,"");};_dba ,_ea ,_ag :=inputPage .GetComponents (_ca .Settings .Components ,_ca .Settings .MaxCompWidth ,_ca .Settings .MaxCompHeight );if _ag !=nil {return _a .Wrap (_ag ,_f ,"");
};_e .Log .Debug ("\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_dba );if _ag =_ca .addPageComponents (inputPage ,_ea ,_dba ,pageNumber ,method );_ag !=nil {return _a .Wrap (_ag ,_f ,"");};return nil ;};func Init (settings Settings )(*Classer ,error ){const _dg ="\u0063\u006c\u0061s\u0073\u0065\u0072\u002e\u0049\u006e\u0069\u0074";
_dc :=&Classer {Settings :settings ,Widths :map[int ]int {},Heights :map[int ]int {},TemplatesSize :_c .IntsMap {},TemplateAreas :&_c .IntSlice {},ComponentPageNumbers :&_c .IntSlice {},ClassIDs :&_c .IntSlice {},ComponentsNumber :&_c .IntSlice {},CentroidPoints :&_g .Points {},CentroidPointsTemplates :&_g .Points {},UndilatedTemplates :&_g .Bitmaps {},DilatedTemplates :&_g .Bitmaps {},ClassInstances :&_g .BitmapsArray {},FgTemplates :&_c .NumSlice {}};
if _be :=_dc .Settings .Validate ();_be !=nil {return nil ,_a .Wrap (_be ,_dg ,"");};return _dc ,nil ;};func (_cbf *Classer )verifyMethod (_ada Method )error {if _ada !=RankHaus &&_ada !=Correlation {return _a .Error ("\u0076\u0065\u0072i\u0066\u0079\u004d\u0065\u0074\u0068\u006f\u0064","\u0069\u006e\u0076\u0061li\u0064\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072\u0020\u006d\u0065\u0074\u0068o\u0064");
};return nil ;};func _cdd (_daa *_g .Bitmap ,_bfg ,_bed ,_cg ,_cab int ,_af *_g .Bitmap )(_gg _b .Point ,_bcc error ){const _dbb ="\u0066i\u006e\u0061\u006c\u0041l\u0069\u0067\u006e\u006d\u0065n\u0074P\u006fs\u0069\u0074\u0069\u006f\u006e\u0069\u006eg";
if _daa ==nil {return _gg ,_a .Error (_dbb ,"\u0073\u006f\u0075\u0072ce\u0020\u006e\u006f\u0074\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064");};if _af ==nil {return _gg ,_a .Error (_dbb ,"t\u0065\u006d\u0070\u006cat\u0065 \u006e\u006f\u0074\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064");
};_eb ,_ba :=_af .Width ,_af .Height ;_dbba ,_fb :=_bfg -_cg -JbAddedPixels ,_bed -_cab -JbAddedPixels ;_e .Log .Trace ("\u0078\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0079\u003a\u0020\u0027\u0025\u0064'\u002c\u0020\u0077\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0068\u003a \u0027\u0025\u0064\u0027\u002c\u0020\u0062\u0078\u003a\u0020\u0027\u0025d'\u002c\u0020\u0062\u0079\u003a\u0020\u0027\u0025\u0064\u0027",_bfg ,_bed ,_eb ,_ba ,_dbba ,_fb );
_agf ,_bcc :=_g .Rect (_dbba ,_fb ,_eb ,_ba );if _bcc !=nil {return _gg ,_a .Wrap (_bcc ,_dbb ,"");};_bee ,_ ,_bcc :=_daa .ClipRectangle (_agf );if _bcc !=nil {_e .Log .Error ("\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069\u0070\u0020\u0072\u0065c\u0074\u0061\u006e\u0067\u006c\u0065\u003a\u0020\u0025\u0076",_agf );
return _gg ,_a .Wrap (_bcc ,_dbb ,"");};_bdg :=_g .New (_bee .Width ,_bee .Height );_bbf :=_db .MaxInt32 ;var _ffb ,_aa ,_bbg ,_aad ,_dbf int ;for _ffb =-1;_ffb <=1;_ffb ++{for _aa =-1;_aa <=1;_aa ++{if _ ,_bcc =_g .Copy (_bdg ,_bee );_bcc !=nil {return _gg ,_a .Wrap (_bcc ,_dbb ,"");
};if _bcc =_bdg .RasterOperation (_aa ,_ffb ,_eb ,_ba ,_g .PixSrcXorDst ,_af ,0,0);_bcc !=nil {return _gg ,_a .Wrap (_bcc ,_dbb ,"");};_bbg =_bdg .CountPixels ();if _bbg < _bbf {_aad =_aa ;_dbf =_ffb ;_bbf =_bbg ;};};};_gg .X =_aad ;_gg .Y =_dbf ;return _gg ,nil ;
};var TwoByTwoWalk =[]int {0,0,0,1,-1,0,0,-1,1,0,-1,1,1,1,-1,-1,1,-1,0,-2,2,0,0,2,-2,0,-1,-2,1,-2,2,-1,2,1,1,2,-1,2,-2,1,-2,-1,-2,-2,2,-2,2,2,-2,2};func (_aga *similarTemplatesFinder )Next ()int {var (_ebc ,_aff ,_dea ,_gbdg int ;_fdg bool ;_bffd *_g .Bitmap ;
_eece error ;);for {if _aga .Index >=25{return -1;};_aff =_aga .Width +TwoByTwoWalk [2*_aga .Index ];_ebc =_aga .Height +TwoByTwoWalk [2*_aga .Index +1];if _ebc < 1||_aff < 1{_aga .Index ++;continue ;};if len (_aga .CurrentNumbers )==0{_aga .CurrentNumbers ,_fdg =_aga .Classer .TemplatesSize .GetSlice (uint64 (_aff )*uint64 (_ebc ));
if !_fdg {_aga .Index ++;continue ;};_aga .N =0;};_dea =len (_aga .CurrentNumbers );for ;_aga .N < _dea ;_aga .N ++{_gbdg =_aga .CurrentNumbers [_aga .N ];_bffd ,_eece =_aga .Classer .DilatedTemplates .GetBitmap (_gbdg );if _eece !=nil {_e .Log .Debug ("\u0046\u0069\u006e\u0064\u004e\u0065\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0074\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u006e\u006f\u0074 \u0066\u006fu\u006e\u0064\u003a\u0020");
return 0;};if _bffd .Width -2*JbAddedPixels ==_aff &&_bffd .Height -2*JbAddedPixels ==_ebc {return _gbdg ;};};_aga .Index ++;_aga .CurrentNumbers =nil ;};};type Classer struct{BaseIndex int ;Settings Settings ;ComponentsNumber *_c .IntSlice ;TemplateAreas *_c .IntSlice ;
Widths map[int ]int ;Heights map[int ]int ;NumberOfClasses int ;ClassInstances *_g .BitmapsArray ;UndilatedTemplates *_g .Bitmaps ;DilatedTemplates *_g .Bitmaps ;TemplatesSize _c .IntsMap ;FgTemplates *_c .NumSlice ;CentroidPoints *_g .Points ;CentroidPointsTemplates *_g .Points ;
ClassIDs *_c .IntSlice ;ComponentPageNumbers *_c .IntSlice ;PtaUL *_g .Points ;PtaLL *_g .Points ;};var _gad bool ;const (MaxDiffWidth =2;MaxDiffHeight =2;);func (_bg *Classer )addPageComponents (_bb *_g .Bitmap ,_cac *_g .Boxes ,_cd *_g .Bitmaps ,_ee int ,_cb Method )error {const _ff ="\u0043l\u0061\u0073\u0073\u0065r\u002e\u0041\u0064\u0064\u0050a\u0067e\u0043o\u006d\u0070\u006f\u006e\u0065\u006e\u0074s";
if _bb ==nil {return _a .Error (_ff ,"\u006e\u0069\u006c\u0020\u0069\u006e\u0070\u0075\u0074 \u0070\u0061\u0067\u0065");};if _cac ==nil ||_cd ==nil ||len (*_cac )==0{_e .Log .Trace ("\u0041\u0064\u0064P\u0061\u0067\u0065\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0073\u002e\u0020\u004e\u006f\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065n\u0074\u0073\u0020\u0066\u006f\u0075\u006e\u0064",_bb );
return nil ;};var _da error ;switch _cb {case RankHaus :_da =_bg .classifyRankHaus (_cac ,_cd ,_ee );case Correlation :_da =_bg .classifyCorrelation (_cac ,_cd ,_ee );default:_e .Log .Debug ("\u0055\u006ek\u006e\u006f\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064\u003a\u0020'%\u0076\u0027",_cb );
return _a .Error (_ff ,"\u0075\u006e\u006bno\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064");};if _da !=nil {return _a .Wrap (_da ,_ff ,"");};if _da =_bg .getULCorners (_bb ,_cac );_da !=nil {return _a .Wrap (_da ,_ff ,"");
};_ga :=len (*_cac );_bg .BaseIndex +=_ga ;if _da =_bg .ComponentsNumber .Add (_ga );_da !=nil {return _a .Wrap (_da ,_ff ,"");};return nil ;};func (_fd *Classer )ComputeLLCorners ()(_ad error ){const _ce ="\u0043l\u0061\u0073\u0073\u0065\u0072\u002e\u0043\u006f\u006d\u0070\u0075t\u0065\u004c\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";
if _fd .PtaUL ==nil {return _a .Error (_ce ,"\u0055\u004c\u0020\u0043or\u006e\u0065\u0072\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006ee\u0064");};_bf :=len (*_fd .PtaUL );_fd .PtaLL =&_g .Points {};var (_bfa ,_bc float32 ;_gd ,_gb int ;
_fc *_g .Bitmap ;);for _dcb :=0;_dcb < _bf ;_dcb ++{_bfa ,_bc ,_ad =_fd .PtaUL .GetGeometry (_dcb );if _ad !=nil {_e .Log .Debug ("\u0047e\u0074\u0074\u0069\u006e\u0067\u0020\u0050\u0074\u0061\u0055\u004c \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_ad );
return _a .Wrap (_ad ,_ce ,"\u0050\u0074\u0061\u0055\u004c\u0020\u0047\u0065\u006fm\u0065\u0074\u0072\u0079");};_gd ,_ad =_fd .ClassIDs .Get (_dcb );if _ad !=nil {_e .Log .Debug ("\u0047\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0043\u006c\u0061s\u0073\u0049\u0044\u0020\u0066\u0061\u0069\u006c\u0065\u0064:\u0020\u0025\u0076",_ad );
return _a .Wrap (_ad ,_ce ,"\u0043l\u0061\u0073\u0073\u0049\u0044");};_fc ,_ad =_fd .UndilatedTemplates .GetBitmap (_gd );if _ad !=nil {_e .Log .Debug ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0055\u006ed\u0069\u006c\u0061\u0074\u0065\u0064\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_ad );
return _a .Wrap (_ad ,_ce ,"\u0055\u006e\u0064\u0069la\u0074\u0065\u0064\u0020\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");};_gb =_fc .Height ;_fd .PtaLL .AddPoint (_bfa ,_bc +float32 (_gb ));};return nil ;};const (MaxConnCompWidth =350;MaxCharCompWidth =350;
MaxWordCompWidth =1000;MaxCompHeight =120;);func _gadb (_gebb *Classer ,_gee *_g .Bitmap )*similarTemplatesFinder {return &similarTemplatesFinder {Width :_gee .Width ,Height :_gee .Height ,Classer :_gebb };};