//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package classer ;import (_gf "github.com/unidoc/unipdf/v3/common";_a "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_e "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";_bg "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_bd "image";_g "math";
);func (_cfab *Classer )classifyRankHouseOne (_aag *_e .Boxes ,_abf ,_cgc ,_bcd *_e .Bitmaps ,_af *_e .Points ,_adf int )(_gcecd error ){const _ebe ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";
var (_fed ,_aba ,_bgc ,_ffg float32 ;_ggg int ;_gff ,_cfbc ,_ed ,_cca ,_cgec *_e .Bitmap ;_bbc ,_dfd bool ;);for _gad :=0;_gad < len (_abf .Values );_gad ++{_cfbc =_cgc .Values [_gad ];_ed =_bcd .Values [_gad ];_fed ,_aba ,_gcecd =_af .GetGeometry (_gad );
if _gcecd !=nil {return _bg .Wrapf (_gcecd ,_ebe ,"\u0066\u0069\u0072\u0073\u0074\u0020\u0067\u0065\u006fm\u0065\u0074\u0072\u0079");};_bae :=len (_cfab .UndilatedTemplates .Values );_bbc =false ;_ggge :=_dee (_cfab ,_cfbc );for _ggg =_ggge .Next ();_ggg > -1;
{_cca ,_gcecd =_cfab .UndilatedTemplates .GetBitmap (_ggg );if _gcecd !=nil {return _bg .Wrap (_gcecd ,_ebe ,"\u0062\u006d\u0033");};_cgec ,_gcecd =_cfab .DilatedTemplates .GetBitmap (_ggg );if _gcecd !=nil {return _bg .Wrap (_gcecd ,_ebe ,"\u0062\u006d\u0034");
};_bgc ,_ffg ,_gcecd =_cfab .CentroidPointsTemplates .GetGeometry (_ggg );if _gcecd !=nil {return _bg .Wrap (_gcecd ,_ebe ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0073");};_dfd ,_gcecd =_e .HausTest (_cfbc ,_ed ,_cca ,_cgec ,_fed -_bgc ,_aba -_ffg ,MaxDiffWidth ,MaxDiffHeight );
if _gcecd !=nil {return _bg .Wrap (_gcecd ,_ebe ,"");};if _dfd {_bbc =true ;if _gcecd =_cfab .ClassIDs .Add (_ggg );_gcecd !=nil {return _bg .Wrap (_gcecd ,_ebe ,"");};if _gcecd =_cfab .ComponentPageNumbers .Add (_adf );_gcecd !=nil {return _bg .Wrap (_gcecd ,_ebe ,"");
};if _cfab .Settings .KeepClassInstances {_cab ,_dad :=_cfab .ClassInstances .GetBitmaps (_ggg );if _dad !=nil {return _bg .Wrap (_dad ,_ebe ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_gff ,_dad =_abf .GetBitmap (_gad );if _dad !=nil {return _bg .Wrap (_dad ,_ebe ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");
};_cab .AddBitmap (_gff );_efg ,_dad :=_aag .Get (_gad );if _dad !=nil {return _bg .Wrap (_dad ,_ebe ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_cab .AddBox (_efg );};break ;};};if !_bbc {if _gcecd =_cfab .ClassIDs .Add (_bae );_gcecd !=nil {return _bg .Wrap (_gcecd ,_ebe ,"");
};if _gcecd =_cfab .ComponentPageNumbers .Add (_adf );_gcecd !=nil {return _bg .Wrap (_gcecd ,_ebe ,"");};_eab :=&_e .Bitmaps {};_gff ,_gcecd =_abf .GetBitmap (_gad );if _gcecd !=nil {return _bg .Wrap (_gcecd ,_ebe ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_eab .Values =append (_eab .Values ,_gff );_gaa ,_eda :=_gff .Width ,_gff .Height ;_cfab .TemplatesSize .Add (uint64 (_eda )*uint64 (_gaa ),_bae );_bdg ,_ege :=_aag .Get (_gad );if _ege !=nil {return _bg .Wrap (_ege ,_ebe ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_eab .AddBox (_bdg );_cfab .ClassInstances .AddBitmaps (_eab );_cfab .CentroidPointsTemplates .AddPoint (_fed ,_aba );_cfab .UndilatedTemplates .AddBitmap (_cfbc );_cfab .DilatedTemplates .AddBitmap (_ed );};};return nil ;};func DefaultSettings ()Settings {_abdf :=&Settings {};
_abdf .SetDefault ();return *_abdf };func (_dg *Classer )verifyMethod (_ag Method )error {if _ag !=RankHaus &&_ag !=Correlation {return _bg .Error ("\u0076\u0065\u0072i\u0066\u0079\u004d\u0065\u0074\u0068\u006f\u0064","\u0069\u006e\u0076\u0061li\u0064\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072\u0020\u006d\u0065\u0074\u0068o\u0064");
};return nil ;};func (_gd *Classer )classifyCorrelation (_cga *_e .Boxes ,_gca *_e .Bitmaps ,_gg int )error {const _ebfd ="\u0063\u006c\u0061\u0073si\u0066\u0079\u0043\u006f\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e";if _cga ==nil {return _bg .Error (_ebfd ,"\u006e\u0065\u0077\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0062\u006f\u0075\u006e\u0064\u0069\u006e\u0067\u0020\u0062o\u0078\u0065\u0073\u0020\u006eo\u0074\u0020f\u006f\u0075\u006e\u0064");
};if _gca ==nil {return _bg .Error (_ebfd ,"\u006e\u0065wC\u006f\u006d\u0070o\u006e\u0065\u006e\u0074s b\u0069tm\u0061\u0070\u0020\u0061\u0072\u0072\u0061y \u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064");};_bbggb :=len (_gca .Values );if _bbggb ==0{_gf .Log .Debug ("\u0063l\u0061\u0073s\u0069\u0066\u0079C\u006f\u0072\u0072\u0065\u006c\u0061\u0074i\u006f\u006e\u0020\u002d\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0070\u0069\u0078\u0061s\u0020\u0069\u0073\u0020\u0065\u006d\u0070\u0074\u0079");
return nil ;};var (_gcec ,_bcb *_e .Bitmap ;_ef error ;);_cba :=&_e .Bitmaps {Values :make ([]*_e .Bitmap ,_bbggb )};for _dgb ,_dcc :=range _gca .Values {_bcb ,_ef =_dcc .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);
if _ef !=nil {return _bg .Wrap (_ef ,_ebfd ,"");};_cba .Values [_dgb ]=_bcb ;};_cbaa :=_gd .FgTemplates ;_cbe :=_e .MakePixelSumTab8 ();_gfge :=_e .MakePixelCentroidTab8 ();_dd :=make ([]int ,_bbggb );_fde :=make ([][]int ,_bbggb );_cdc :=_e .Points (make ([]_e .Point ,_bbggb ));
_bfa :=&_cdc ;var (_bcg ,_gga int ;_fff ,_db ,_cce int ;_gfd ,_acg int ;_eed byte ;);for _fbd ,_ggc :=range _cba .Values {_fde [_fbd ]=make ([]int ,_ggc .Height );_bcg =0;_gga =0;_db =(_ggc .Height -1)*_ggc .RowStride ;_fff =0;for _acg =_ggc .Height -1;
_acg >=0;_acg ,_db =_acg -1,_db -_ggc .RowStride {_fde [_fbd ][_acg ]=_fff ;_cce =0;for _gfd =0;_gfd < _ggc .RowStride ;_gfd ++{_eed =_ggc .Data [_db +_gfd ];_cce +=_cbe [_eed ];_bcg +=_gfge [_eed ]+_gfd *8*_cbe [_eed ];};_fff +=_cce ;_gga +=_cce *_acg ;
};_dd [_fbd ]=_fff ;if _fff > 0{(*_bfa )[_fbd ]=_e .Point {X :float32 (_bcg )/float32 (_fff ),Y :float32 (_gga )/float32 (_fff )};}else {(*_bfa )[_fbd ]=_e .Point {X :float32 (_ggc .Width )/float32 (2),Y :float32 (_ggc .Height )/float32 (2)};};};if _ef =_gd .CentroidPoints .Add (_bfa );
_ef !=nil {return _bg .Wrap (_ef ,_ebfd ,"\u0063\u0065\u006et\u0072\u006f\u0069\u0064\u0020\u0061\u0064\u0064");};var (_ca ,_ab ,_ea int ;_bcc float64 ;_aab ,_acga ,_abg ,_dda float32 ;_bce ,_abd _e .Point ;_ae bool ;_ggf *similarTemplatesFinder ;_gbgb int ;
_bcfc *_e .Bitmap ;_ecda *_bd .Rectangle ;_bab *_e .Bitmaps ;);for _gbgb ,_bcb =range _cba .Values {_ab =_dd [_gbgb ];if _aab ,_acga ,_ef =_bfa .GetGeometry (_gbgb );_ef !=nil {return _bg .Wrap (_ef ,_ebfd ,"\u0070t\u0061\u0020\u002d\u0020\u0069");};_ae =false ;
_ddc :=len (_gd .UndilatedTemplates .Values );_ggf =_dee (_gd ,_bcb );for _deb :=_ggf .Next ();_deb > -1;{if _bcfc ,_ef =_gd .UndilatedTemplates .GetBitmap (_deb );_ef !=nil {return _bg .Wrap (_ef ,_ebfd ,"\u0075\u006e\u0069dl\u0061\u0074\u0065\u0064\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0062\u006d\u0032");
};if _ea ,_ef =_cbaa .GetInt (_deb );_ef !=nil {_gf .Log .Trace ("\u0046\u0047\u0020T\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u005b\u0069\u0063\u006ca\u0073\u0073\u005d\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_ef );};if _abg ,_dda ,_ef =_gd .CentroidPointsTemplates .GetGeometry (_deb );
_ef !=nil {return _bg .Wrap (_ef ,_ebfd ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074T\u0065\u006d\u0070\u006c\u0061\u0074e\u0073\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u00782\u002c\u0079\u0032\u0020");
};if _gd .Settings .WeightFactor > 0.0{if _ca ,_ef =_gd .TemplateAreas .Get (_deb );_ef !=nil {_gf .Log .Trace ("\u0054\u0065\u006dp\u006c\u0061\u0074\u0065A\u0072\u0065\u0061\u0073\u005b\u0069\u0063l\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0061\u0072\u0065\u0061\u0020\u0025\u0076",_ef );
};_bcc =_gd .Settings .Thresh +(1.0-_gd .Settings .Thresh )*_gd .Settings .WeightFactor *float64 (_ea )/float64 (_ca );}else {_bcc =_gd .Settings .Thresh ;};_bef ,_baf :=_e .CorrelationScoreThresholded (_bcb ,_bcfc ,_ab ,_ea ,_bce .X -_abd .X ,_bce .Y -_abd .Y ,MaxDiffWidth ,MaxDiffHeight ,_cbe ,_fde [_gbgb ],float32 (_bcc ));
if _baf !=nil {return _bg .Wrap (_baf ,_ebfd ,"");};if _egf {var (_dca ,_bdd float64 ;_fbdb ,_beg int ;);_dca ,_baf =_e .CorrelationScore (_bcb ,_bcfc ,_ab ,_ea ,_aab -_abg ,_acga -_dda ,MaxDiffWidth ,MaxDiffHeight ,_cbe );if _baf !=nil {return _bg .Wrap (_baf ,_ebfd ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");
};_bdd ,_baf =_e .CorrelationScoreSimple (_bcb ,_bcfc ,_ab ,_ea ,_aab -_abg ,_acga -_dda ,MaxDiffWidth ,MaxDiffHeight ,_cbe );if _baf !=nil {return _bg .Wrap (_baf ,_ebfd ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");
};_fbdb =int (_g .Sqrt (_dca *float64 (_ab )*float64 (_ea )));_beg =int (_g .Sqrt (_bdd *float64 (_ab )*float64 (_ea )));if (_dca >=_bcc )!=(_bdd >=_bcc ){return _bg .Errorf (_ebfd ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043\u006f\u0072r\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0063\u006f\u0072\u0065\u0020\u006d\u0069\u0073\u006d\u0061\u0074\u0063\u0068\u0020-\u0020\u0025d\u0028\u00250\u002e\u0034\u0066\u002c\u0020\u0025\u0076\u0029\u0020\u0076\u0073\u0020\u0025d(\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0076)\u0020\u0025\u0030\u002e\u0034\u0066",_fbdb ,_dca ,_dca >=_bcc ,_beg ,_bdd ,_bdd >=_bcc ,_dca -_bdd );
};if _dca >=_bcc !=_bef {return _bg .Errorf (_ebfd ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043o\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e \u0073\u0063\u006f\u0072\u0065 \u004d\u0069\u0073\u006d\u0061t\u0063\u0068 \u0062\u0065\u0074w\u0065\u0065\u006e\u0020\u0063\u006frr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020/\u0020\u0074\u0068\u0072\u0065s\u0068\u006f\u006c\u0064\u002e\u0020\u0043\u006f\u006dpa\u0072\u0069\u0073\u006f\u006e:\u0020\u0025\u0030\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0064\u0029\u0020\u003e\u003d\u0020\u00250\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u0029\u0020\u0076\u0073\u0020\u0025\u0076",_dca ,_dca *float64 (_ab )*float64 (_ea ),_fbdb ,_bcc ,float32 (_bcc )*float32 (_ab )*float32 (_ea ),_bef );
};};if _bef {_ae =true ;if _baf =_gd .ClassIDs .Add (_deb );_baf !=nil {return _bg .Wrap (_baf ,_ebfd ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");};if _baf =_gd .ComponentPageNumbers .Add (_gg );_baf !=nil {return _bg .Wrap (_baf ,_ebfd ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");
};if _gd .Settings .KeepClassInstances {if _gcec ,_baf =_gca .GetBitmap (_gbgb );_baf !=nil {return _bg .Wrap (_baf ,_ebfd ,"\u004b\u0065\u0065\u0070Cl\u0061\u0073\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u002d \u0069");};if _bab ,_baf =_gd .ClassInstances .GetBitmaps (_deb );
_baf !=nil {return _bg .Wrap (_baf ,_ebfd ,"K\u0065\u0065\u0070\u0043\u006c\u0061s\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065s\u0020\u002d\u0020i\u0043l\u0061\u0073\u0073");};_bab .AddBitmap (_gcec );if _ecda ,_baf =_cga .Get (_gbgb );_baf !=nil {return _bg .Wrap (_baf ,_ebfd ,"\u004be\u0065p\u0043\u006c\u0061\u0073\u0073I\u006e\u0073t\u0061\u006e\u0063\u0065\u0073");
};_bab .AddBox (_ecda );};break ;};};if !_ae {if _ef =_gd .ClassIDs .Add (_ddc );_ef !=nil {return _bg .Wrap (_ef ,_ebfd ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _ef =_gd .ComponentPageNumbers .Add (_gg );_ef !=nil {return _bg .Wrap (_ef ,_ebfd ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_bab =&_e .Bitmaps {};if _gcec ,_ef =_gca .GetBitmap (_gbgb );_ef !=nil {return _bg .Wrap (_ef ,_ebfd ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_bab .AddBitmap (_gcec );_bfb ,_ced :=_gcec .Width ,_gcec .Height ;_fbf :=uint64 (_ced )*uint64 (_bfb );_gd .TemplatesSize .Add (_fbf ,_ddc );
if _ecda ,_ef =_cga .Get (_gbgb );_ef !=nil {return _bg .Wrap (_ef ,_ebfd ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_bab .AddBox (_ecda );_gd .ClassInstances .AddBitmaps (_bab );_gd .CentroidPointsTemplates .AddPoint (_aab ,_acga );_gd .FgTemplates .AddInt (_ab );
_gd .UndilatedTemplates .AddBitmap (_gcec );_ca =(_bcb .Width -2*JbAddedPixels )*(_bcb .Height -2*JbAddedPixels );if _ef =_gd .TemplateAreas .Add (_ca );_ef !=nil {return _bg .Wrap (_ef ,_ebfd ,"\u0021\u0066\u006f\u0075\u006e\u0064");};};};_gd .NumberOfClasses =len (_gd .UndilatedTemplates .Values );
return nil ;};func (_bb *Classer )AddPage (inputPage *_e .Bitmap ,pageNumber int ,method Method )(_aa error ){const _c ="\u0043l\u0061s\u0073\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_bb .Widths [pageNumber ]=inputPage .Width ;_bb .Heights [pageNumber ]=inputPage .Height ;
if _aa =_bb .verifyMethod (method );_aa !=nil {return _bg .Wrap (_aa ,_c ,"");};_cf ,_ba ,_aa :=inputPage .GetComponents (_bb .Settings .Components ,_bb .Settings .MaxCompWidth ,_bb .Settings .MaxCompHeight );if _aa !=nil {return _bg .Wrap (_aa ,_c ,"");
};_gf .Log .Debug ("\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_cf );if _aa =_bb .addPageComponents (inputPage ,_ba ,_cf ,pageNumber ,method );_aa !=nil {return _bg .Wrap (_aa ,_c ,"");};return nil ;};var TwoByTwoWalk =[]int {0,0,0,1,-1,0,0,-1,1,0,-1,1,1,1,-1,-1,1,-1,0,-2,2,0,0,2,-2,0,-1,-2,1,-2,2,-1,2,1,1,2,-1,2,-2,1,-2,-1,-2,-2,2,-2,2,2,-2,2};
func (_ebc *Classer )ComputeLLCorners ()(_eg error ){const _bac ="\u0043l\u0061\u0073\u0073\u0065\u0072\u002e\u0043\u006f\u006d\u0070\u0075t\u0065\u004c\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";if _ebc .PtaUL ==nil {return _bg .Error (_bac ,"\u0055\u004c\u0020\u0043or\u006e\u0065\u0072\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006ee\u0064");
};_f :=len (*_ebc .PtaUL );_ebc .PtaLL =&_e .Points {};var (_bde ,_bbg float32 ;_ff ,_cb int ;_de *_e .Bitmap ;);for _cbb :=0;_cbb < _f ;_cbb ++{_bde ,_bbg ,_eg =_ebc .PtaUL .GetGeometry (_cbb );if _eg !=nil {_gf .Log .Debug ("\u0047e\u0074\u0074\u0069\u006e\u0067\u0020\u0050\u0074\u0061\u0055\u004c \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_eg );
return _bg .Wrap (_eg ,_bac ,"\u0050\u0074\u0061\u0055\u004c\u0020\u0047\u0065\u006fm\u0065\u0074\u0072\u0079");};_ff ,_eg =_ebc .ClassIDs .Get (_cbb );if _eg !=nil {_gf .Log .Debug ("\u0047\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0043\u006c\u0061s\u0073\u0049\u0044\u0020\u0066\u0061\u0069\u006c\u0065\u0064:\u0020\u0025\u0076",_eg );
return _bg .Wrap (_eg ,_bac ,"\u0043l\u0061\u0073\u0073\u0049\u0044");};_de ,_eg =_ebc .UndilatedTemplates .GetBitmap (_ff );if _eg !=nil {_gf .Log .Debug ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0055\u006ed\u0069\u006c\u0061\u0074\u0065\u0064\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_eg );
return _bg .Wrap (_eg ,_bac ,"\u0055\u006e\u0064\u0069la\u0074\u0065\u0064\u0020\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");};_cb =_de .Height ;_ebc .PtaLL .AddPoint (_bde ,_bbg +float32 (_cb ));};return nil ;};func (_ga *Classer )classifyRankHaus (_ffc *_e .Boxes ,_ecdd *_e .Bitmaps ,_ace int )error {const _eea ="\u0063\u006ca\u0073\u0073\u0069f\u0079\u0052\u0061\u006e\u006b\u0048\u0061\u0075\u0073";
if _ffc ==nil {return _bg .Error (_eea ,"\u0062\u006fx\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if _ecdd ==nil {return _bg .Error (_eea ,"\u0070\u0069x\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};_fbc :=len (_ecdd .Values );if _fbc ==0{return _bg .Error (_eea ,"e\u006dp\u0074\u0079\u0020\u006e\u0065\u0077\u0020\u0063o\u006d\u0070\u006f\u006een\u0074\u0073");};_aeg :=_ecdd .CountPixels ();_caa :=_ga .Settings .SizeHaus ;_ad :=_e .SelCreateBrick (_caa ,_caa ,_caa /2,_caa /2,_e .SelHit );
_dde :=&_e .Bitmaps {Values :make ([]*_e .Bitmap ,_fbc )};_aed :=&_e .Bitmaps {Values :make ([]*_e .Bitmap ,_fbc )};var (_ggab ,_dcd ,_dec *_e .Bitmap ;_dbf error ;);for _aee :=0;_aee < _fbc ;_aee ++{_ggab ,_dbf =_ecdd .GetBitmap (_aee );if _dbf !=nil {return _bg .Wrap (_dbf ,_eea ,"");
};_dcd ,_dbf =_ggab .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);if _dbf !=nil {return _bg .Wrap (_dbf ,_eea ,"");};_dec ,_dbf =_e .Dilate (nil ,_dcd ,_ad );if _dbf !=nil {return _bg .Wrap (_dbf ,_eea ,"");};_dde .Values [_fbc ]=_dcd ;
_aed .Values [_fbc ]=_dec ;};_bggf ,_dbf :=_e .Centroids (_dde .Values );if _dbf !=nil {return _bg .Wrap (_dbf ,_eea ,"");};if _dbf =_bggf .Add (_ga .CentroidPoints );_dbf !=nil {_gf .Log .Trace ("\u004e\u006f\u0020\u0063en\u0074\u0072\u006f\u0069\u0064\u0073\u0020\u0074\u006f\u0020\u0061\u0064\u0064");
};if _ga .Settings .RankHaus ==1.0{_dbf =_ga .classifyRankHouseOne (_ffc ,_ecdd ,_dde ,_aed ,_bggf ,_ace );}else {_dbf =_ga .classifyRankHouseNonOne (_ffc ,_ecdd ,_dde ,_aed ,_bggf ,_aeg ,_ace );};if _dbf !=nil {return _bg .Wrap (_dbf ,_eea ,"");};return nil ;
};type Method int ;func (_fec *Settings )SetDefault (){if _fec .MaxCompWidth ==0{switch _fec .Components {case _e .ComponentConn :_fec .MaxCompWidth =MaxConnCompWidth ;case _e .ComponentCharacters :_fec .MaxCompWidth =MaxCharCompWidth ;case _e .ComponentWords :_fec .MaxCompWidth =MaxWordCompWidth ;
};};if _fec .MaxCompHeight ==0{_fec .MaxCompHeight =MaxCompHeight ;};if _fec .Thresh ==0.0{_fec .Thresh =0.9;};if _fec .WeightFactor ==0.0{_fec .WeightFactor =0.75;};if _fec .RankHaus ==0.0{_fec .RankHaus =0.97;};if _fec .SizeHaus ==0{_fec .SizeHaus =2;
};};const (MaxConnCompWidth =350;MaxCharCompWidth =350;MaxWordCompWidth =1000;MaxCompHeight =120;);func (_aff *similarTemplatesFinder )Next ()int {var (_gccb ,_cbf ,_ceg ,_bgb int ;_edff bool ;_gfgb *_e .Bitmap ;_eeac error ;);for {if _aff .Index >=25{return -1;
};_cbf =_aff .Width +TwoByTwoWalk [2*_aff .Index ];_gccb =_aff .Height +TwoByTwoWalk [2*_aff .Index +1];if _gccb < 1||_cbf < 1{_aff .Index ++;continue ;};if len (_aff .CurrentNumbers )==0{_aff .CurrentNumbers ,_edff =_aff .Classer .TemplatesSize .GetSlice (uint64 (_cbf )*uint64 (_gccb ));
if !_edff {_aff .Index ++;continue ;};_aff .N =0;};_ceg =len (_aff .CurrentNumbers );for ;_aff .N < _ceg ;_aff .N ++{_bgb =_aff .CurrentNumbers [_aff .N ];_gfgb ,_eeac =_aff .Classer .DilatedTemplates .GetBitmap (_bgb );if _eeac !=nil {_gf .Log .Debug ("\u0046\u0069\u006e\u0064\u004e\u0065\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0074\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u006e\u006f\u0074 \u0066\u006fu\u006e\u0064\u003a\u0020");
return 0;};if _gfgb .Width -2*JbAddedPixels ==_cbf &&_gfgb .Height -2*JbAddedPixels ==_gccb {return _bgb ;};};_aff .Index ++;_aff .CurrentNumbers =nil ;};};var _egf bool ;func (_efc *Classer )classifyRankHouseNonOne (_dfe *_e .Boxes ,_adb ,_ccg ,_adfa *_e .Bitmaps ,_gdd *_e .Points ,_fee *_a .NumSlice ,_bdgb int )(_bced error ){const _gac ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";
var (_dfa ,_edf ,_gge ,_aabd float32 ;_ded ,_bga ,_gebc int ;_fedg ,_gace ,_ceb ,_feec ,_ccb *_e .Bitmap ;_eba ,_dge bool ;);_bgae :=_e .MakePixelSumTab8 ();for _bca :=0;_bca < len (_adb .Values );_bca ++{if _gace ,_bced =_ccg .GetBitmap (_bca );_bced !=nil {return _bg .Wrap (_bced ,_gac ,"b\u006d\u0073\u0031\u002e\u0047\u0065\u0074\u0028\u0069\u0029");
};if _ded ,_bced =_fee .GetInt (_bca );_bced !=nil {_gf .Log .Trace ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0046\u0047T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073 \u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_bca ,_bced );
};if _ceb ,_bced =_adfa .GetBitmap (_bca );_bced !=nil {return _bg .Wrap (_bced ,_gac ,"b\u006d\u0073\u0032\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};if _dfa ,_edf ,_bced =_gdd .GetGeometry (_bca );_bced !=nil {return _bg .Wrapf (_bced ,_gac ,"\u0070t\u0061[\u0069\u005d\u002e\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079");
};_gcc :=len (_efc .UndilatedTemplates .Values );_eba =false ;_aga :=_dee (_efc ,_gace );for _gebc =_aga .Next ();_gebc > -1;{if _feec ,_bced =_efc .UndilatedTemplates .GetBitmap (_gebc );_bced !=nil {return _bg .Wrap (_bced ,_gac ,"\u0070\u0069\u0078\u0061\u0074\u002e\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");
};if _bga ,_bced =_efc .FgTemplates .GetInt (_gebc );_bced !=nil {_gf .Log .Trace ("\u0047\u0065\u0074\u0074\u0069\u006eg\u0020\u0046\u0047\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u005b\u0025d\u005d\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_gebc ,_bced );
};if _ccb ,_bced =_efc .DilatedTemplates .GetBitmap (_gebc );_bced !=nil {return _bg .Wrap (_bced ,_gac ,"\u0070\u0069\u0078\u0061\u0074\u0064\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");};if _gge ,_aabd ,_bced =_efc .CentroidPointsTemplates .GetGeometry (_gebc );
_bced !=nil {return _bg .Wrap (_bced ,_gac ,"\u0043\u0065\u006et\u0072\u006f\u0069\u0064P\u006f\u0069\u006e\u0074\u0073\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u005b\u0069\u0043\u006c\u0061\u0073\u0073\u005d");};_dge ,_bced =_e .RankHausTest (_gace ,_ceb ,_feec ,_ccb ,_dfa -_gge ,_edf -_aabd ,MaxDiffWidth ,MaxDiffHeight ,_ded ,_bga ,float32 (_efc .Settings .RankHaus ),_bgae );
if _bced !=nil {return _bg .Wrap (_bced ,_gac ,"");};if _dge {_eba =true ;if _bced =_efc .ClassIDs .Add (_gebc );_bced !=nil {return _bg .Wrap (_bced ,_gac ,"");};if _bced =_efc .ComponentPageNumbers .Add (_bdgb );_bced !=nil {return _bg .Wrap (_bced ,_gac ,"");
};if _efc .Settings .KeepClassInstances {_dgd ,_adbg :=_efc .ClassInstances .GetBitmaps (_gebc );if _adbg !=nil {return _bg .Wrap (_adbg ,_gac ,"\u0063\u002e\u0050\u0069\u0078\u0061\u0061\u002e\u0047\u0065\u0074B\u0069\u0074\u006d\u0061\u0070\u0073\u0028\u0069\u0043\u006ca\u0073\u0073\u0029");
};if _fedg ,_adbg =_adb .GetBitmap (_bca );_adbg !=nil {return _bg .Wrap (_adbg ,_gac ,"\u0070i\u0078\u0061\u005b\u0069\u005d");};_dgd .Values =append (_dgd .Values ,_fedg );_dgdd ,_adbg :=_dfe .Get (_bca );if _adbg !=nil {return _bg .Wrap (_adbg ,_gac ,"b\u006f\u0078\u0061\u002e\u0047\u0065\u0074\u0028\u0069\u0029");
};_dgd .Boxes =append (_dgd .Boxes ,_dgdd );};break ;};};if !_eba {if _bced =_efc .ClassIDs .Add (_gcc );_bced !=nil {return _bg .Wrap (_bced ,_gac ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _bced =_efc .ComponentPageNumbers .Add (_bdgb );_bced !=nil {return _bg .Wrap (_bced ,_gac ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_gba :=&_e .Bitmaps {};_fedg =_adb .Values [_bca ];_gba .AddBitmap (_fedg );_fgb ,_cgeb :=_fedg .Width ,_fedg .Height ;_efc .TemplatesSize .Add (uint64 (_fgb )*uint64 (_cgeb ),_gcc );_aeb ,_ade :=_dfe .Get (_bca );if _ade !=nil {return _bg .Wrap (_ade ,_gac ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_gba .AddBox (_aeb );_efc .ClassInstances .AddBitmaps (_gba );_efc .CentroidPointsTemplates .AddPoint (_dfa ,_edf );_efc .UndilatedTemplates .AddBitmap (_gace );_efc .DilatedTemplates .AddBitmap (_ceb );_efc .FgTemplates .AddInt (_ded );};};_efc .NumberOfClasses =len (_efc .UndilatedTemplates .Values );
return nil ;};type similarTemplatesFinder struct{Classer *Classer ;Width int ;Height int ;Index int ;CurrentNumbers []int ;N int ;};const (MaxDiffWidth =2;MaxDiffHeight =2;);type Settings struct{MaxCompWidth int ;MaxCompHeight int ;SizeHaus int ;RankHaus float64 ;
Thresh float64 ;WeightFactor float64 ;KeepClassInstances bool ;Components _e .Component ;Method Method ;};const (RankHaus Method =iota ;Correlation ;);type Classer struct{BaseIndex int ;Settings Settings ;ComponentsNumber *_a .IntSlice ;TemplateAreas *_a .IntSlice ;
Widths map[int ]int ;Heights map[int ]int ;NumberOfClasses int ;ClassInstances *_e .BitmapsArray ;UndilatedTemplates *_e .Bitmaps ;DilatedTemplates *_e .Bitmaps ;TemplatesSize _a .IntsMap ;FgTemplates *_a .NumSlice ;CentroidPoints *_e .Points ;CentroidPointsTemplates *_e .Points ;
ClassIDs *_a .IntSlice ;ComponentPageNumbers *_a .IntSlice ;PtaUL *_e .Points ;PtaLL *_e .Points ;};func _dee (_agf *Classer ,_cgb *_e .Bitmap )*similarTemplatesFinder {return &similarTemplatesFinder {Width :_cgb .Width ,Height :_cgb .Height ,Classer :_agf };
};func (_baa *Classer )getULCorners (_bcf *_e .Bitmap ,_fa *_e .Boxes )error {const _cfe ="\u0067\u0065\u0074U\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";if _bcf ==nil {return _bg .Error (_cfe ,"\u006e\u0069l\u0020\u0069\u006da\u0067\u0065\u0020\u0062\u0069\u0074\u006d\u0061\u0070");
};if _fa ==nil {return _bg .Error (_cfe ,"\u006e\u0069\u006c\u0020\u0062\u006f\u0075\u006e\u0064\u0073");};if _baa .PtaUL ==nil {_baa .PtaUL =&_e .Points {};};_ebcd :=len (*_fa );var (_fc ,_fd ,_fg ,_dac int ;_gbg ,_fdf ,_be ,_fga float32 ;_gfg error ;
_bbgg *_bd .Rectangle ;_cd *_e .Bitmap ;_fag _bd .Point ;);for _fcf :=0;_fcf < _ebcd ;_fcf ++{_fc =_baa .BaseIndex +_fcf ;if _gbg ,_fdf ,_gfg =_baa .CentroidPoints .GetGeometry (_fc );_gfg !=nil {return _bg .Wrap (_gfg ,_cfe ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050o\u0069\u006e\u0074\u0073");
};if _fd ,_gfg =_baa .ClassIDs .Get (_fc );_gfg !=nil {return _bg .Wrap (_gfg ,_cfe ,"\u0043\u006c\u0061s\u0073\u0049\u0044\u0073\u002e\u0047\u0065\u0074");};if _be ,_fga ,_gfg =_baa .CentroidPointsTemplates .GetGeometry (_fd );_gfg !=nil {return _bg .Wrap (_gfg ,_cfe ,"\u0043\u0065\u006etr\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074\u0073\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");
};_geb :=_be -_gbg ;_cfa :=_fga -_fdf ;if _geb >=0{_fg =int (_geb +0.5);}else {_fg =int (_geb -0.5);};if _cfa >=0{_dac =int (_cfa +0.5);}else {_dac =int (_cfa -0.5);};if _bbgg ,_gfg =_fa .Get (_fcf );_gfg !=nil {return _bg .Wrap (_gfg ,_cfe ,"");};_ffa ,_fad :=_bbgg .Min .X ,_bbgg .Min .Y ;
_cd ,_gfg =_baa .UndilatedTemplates .GetBitmap (_fd );if _gfg !=nil {return _bg .Wrap (_gfg ,_cfe ,"\u0055\u006e\u0064\u0069\u006c\u0061\u0074\u0065\u0064\u0054e\u006d\u0070\u006c\u0061\u0074\u0065\u0073.\u0047\u0065\u0074\u0028\u0069\u0043\u006c\u0061\u0073\u0073\u0029");
};_fag ,_gfg =_ec (_bcf ,_ffa ,_fad ,_fg ,_dac ,_cd );if _gfg !=nil {return _bg .Wrap (_gfg ,_cfe ,"");};_baa .PtaUL .AddPoint (float32 (_ffa -_fg +_fag .X ),float32 (_fad -_dac +_fag .Y ));};return nil ;};func _ec (_gc *_e .Bitmap ,_cc ,_cfb ,_bcfa ,_fb int ,_gfgg *_e .Bitmap )(_ffb _bd .Point ,_cee error ){const _ecd ="\u0066i\u006e\u0061\u006c\u0041l\u0069\u0067\u006e\u006d\u0065n\u0074P\u006fs\u0069\u0074\u0069\u006f\u006e\u0069\u006eg";
if _gc ==nil {return _ffb ,_bg .Error (_ecd ,"\u0073\u006f\u0075\u0072ce\u0020\u006e\u006f\u0074\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064");};if _gfgg ==nil {return _ffb ,_bg .Error (_ecd ,"t\u0065\u006d\u0070\u006cat\u0065 \u006e\u006f\u0074\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064");
};_fe ,_bgg :=_gfgg .Width ,_gfgg .Height ;_ebf ,_cg :=_cc -_bcfa -JbAddedPixels ,_cfb -_fb -JbAddedPixels ;_gf .Log .Trace ("\u0078\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0079\u003a\u0020\u0027\u0025\u0064'\u002c\u0020\u0077\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0068\u003a \u0027\u0025\u0064\u0027\u002c\u0020\u0062\u0078\u003a\u0020\u0027\u0025d'\u002c\u0020\u0062\u0079\u003a\u0020\u0027\u0025\u0064\u0027",_cc ,_cfb ,_fe ,_bgg ,_ebf ,_cg );
_dc ,_cee :=_e .Rect (_ebf ,_cg ,_fe ,_bgg );if _cee !=nil {return _ffb ,_bg .Wrap (_cee ,_ecd ,"");};_ebb ,_ ,_cee :=_gc .ClipRectangle (_dc );if _cee !=nil {_gf .Log .Error ("\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069\u0070\u0020\u0072\u0065c\u0074\u0061\u006e\u0067\u006c\u0065\u003a\u0020\u0025\u0076",_dc );
return _ffb ,_bg .Wrap (_cee ,_ecd ,"");};_cec :=_e .New (_ebb .Width ,_ebb .Height );_bge :=_g .MaxInt32 ;var _cfef ,_gce ,_ac ,_bag ,_cge int ;for _cfef =-1;_cfef <=1;_cfef ++{for _gce =-1;_gce <=1;_gce ++{if _ ,_cee =_e .Copy (_cec ,_ebb );_cee !=nil {return _ffb ,_bg .Wrap (_cee ,_ecd ,"");
};if _cee =_cec .RasterOperation (_gce ,_cfef ,_fe ,_bgg ,_e .PixSrcXorDst ,_gfgg ,0,0);_cee !=nil {return _ffb ,_bg .Wrap (_cee ,_ecd ,"");};_ac =_cec .CountPixels ();if _ac < _bge {_bag =_gce ;_cge =_cfef ;_bge =_ac ;};};};_ffb .X =_bag ;_ffb .Y =_cge ;
return _ffb ,nil ;};func (_fgc Settings )Validate ()error {const _gcf ="\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0073\u002e\u0056\u0061\u006ci\u0064\u0061\u0074\u0065";if _fgc .Thresh < 0.4||_fgc .Thresh > 0.98{return _bg .Error (_gcf ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074\u0068\u0072\u0065\u0073\u0068\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0034\u0020\u002d\u0020\u0030\u002e\u0039\u0038\u005d");
};if _fgc .WeightFactor < 0.0||_fgc .WeightFactor > 1.0{return _bg .Error (_gcf ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006ec\u006f\u0064\u0065\u0072\u0020w\u0065\u0069\u0067\u0068\u0074\u0020\u0066\u0061\u0063\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0030\u0020\u002d\u0020\u0031\u002e\u0030\u005d");
};if _fgc .RankHaus < 0.5||_fgc .RankHaus > 1.0{return _bg .Error (_gcf ,"\u006a\u0062\u0069\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0072a\u006e\u006b\u0020\u0068\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065 \u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065 [\u0030\u002e\u0035\u0020\u002d\u0020\u0031\u002e\u0030\u005d");
};if _fgc .SizeHaus < 1||_fgc .SizeHaus > 10{return _bg .Error (_gcf ,"\u006a\u0062\u0069\u0067\u0032 \u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0073\u0069\u007a\u0065\u0020h\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0031\u0020\u002d\u0020\u0031\u0030]");
};switch _fgc .Components {case _e .ComponentConn ,_e .ComponentCharacters ,_e .ComponentWords :default:return _bg .Error (_gcf ,"\u0069n\u0076\u0061\u006c\u0069d\u0020\u0063\u006c\u0061\u0073s\u0065r\u0020c\u006f\u006d\u0070\u006f\u006e\u0065\u006et");
};return nil ;};func Init (settings Settings )(*Classer ,error ){const _gb ="\u0063\u006c\u0061s\u0073\u0065\u0072\u002e\u0049\u006e\u0069\u0074";_d :=&Classer {Settings :settings ,Widths :map[int ]int {},Heights :map[int ]int {},TemplatesSize :_a .IntsMap {},TemplateAreas :&_a .IntSlice {},ComponentPageNumbers :&_a .IntSlice {},ClassIDs :&_a .IntSlice {},ComponentsNumber :&_a .IntSlice {},CentroidPoints :&_e .Points {},CentroidPointsTemplates :&_e .Points {},UndilatedTemplates :&_e .Bitmaps {},DilatedTemplates :&_e .Bitmaps {},ClassInstances :&_e .BitmapsArray {},FgTemplates :&_a .NumSlice {}};
if _eb :=_d .Settings .Validate ();_eb !=nil {return nil ,_bg .Wrap (_eb ,_gb ,"");};return _d ,nil ;};const JbAddedPixels =6;func (_ee *Classer )addPageComponents (_df *_e .Bitmap ,_bc *_e .Boxes ,_da *_e .Bitmaps ,_gfc int ,_ge Method )error {const _ce ="\u0043l\u0061\u0073\u0073\u0065r\u002e\u0041\u0064\u0064\u0050a\u0067e\u0043o\u006d\u0070\u006f\u006e\u0065\u006e\u0074s";
if _df ==nil {return _bg .Error (_ce ,"\u006e\u0069\u006c\u0020\u0069\u006e\u0070\u0075\u0074 \u0070\u0061\u0067\u0065");};if _bc ==nil ||_da ==nil ||len (*_bc )==0{_gf .Log .Trace ("\u0041\u0064\u0064P\u0061\u0067\u0065\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0073\u002e\u0020\u004e\u006f\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065n\u0074\u0073\u0020\u0066\u006f\u0075\u006e\u0064",_df );
return nil ;};var _eeg error ;switch _ge {case RankHaus :_eeg =_ee .classifyRankHaus (_bc ,_da ,_gfc );case Correlation :_eeg =_ee .classifyCorrelation (_bc ,_da ,_gfc );default:_gf .Log .Debug ("\u0055\u006ek\u006e\u006f\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064\u003a\u0020'%\u0076\u0027",_ge );
return _bg .Error (_ce ,"\u0075\u006e\u006bno\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064");};if _eeg !=nil {return _bg .Wrap (_eeg ,_ce ,"");};if _eeg =_ee .getULCorners (_df ,_bc );_eeg !=nil {return _bg .Wrap (_eeg ,_ce ,"");
};_gbf :=len (*_bc );_ee .BaseIndex +=_gbf ;if _eeg =_ee .ComponentsNumber .Add (_gbf );_eeg !=nil {return _bg .Wrap (_eeg ,_ce ,"");};return nil ;};