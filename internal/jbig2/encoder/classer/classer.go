//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package classer ;import (_d "github.com/unidoc/unipdf/v3/common";_b "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_bd "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";_f "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_e "image";_g "math";);
func (_fde *similarTemplatesFinder )Next ()int {var (_fae ,_cagbf ,_fcae ,_ggcb int ;_ddab bool ;_gcfce *_bd .Bitmap ;_eace error ;);for {if _fde .Index >=25{return -1;};_cagbf =_fde .Width +TwoByTwoWalk [2*_fde .Index ];_fae =_fde .Height +TwoByTwoWalk [2*_fde .Index +1];
if _fae < 1||_cagbf < 1{_fde .Index ++;continue ;};if len (_fde .CurrentNumbers )==0{_fde .CurrentNumbers ,_ddab =_fde .Classer .TemplatesSize .GetSlice (uint64 (_cagbf )*uint64 (_fae ));if !_ddab {_fde .Index ++;continue ;};_fde .N =0;};_fcae =len (_fde .CurrentNumbers );
for ;_fde .N < _fcae ;_fde .N ++{_ggcb =_fde .CurrentNumbers [_fde .N ];_gcfce ,_eace =_fde .Classer .DilatedTemplates .GetBitmap (_ggcb );if _eace !=nil {_d .Log .Debug ("\u0046\u0069\u006e\u0064\u004e\u0065\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0074\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u006e\u006f\u0074 \u0066\u006fu\u006e\u0064\u003a\u0020");
return 0;};if _gcfce .Width -2*JbAddedPixels ==_cagbf &&_gcfce .Height -2*JbAddedPixels ==_fae {return _ggcb ;};};_fde .Index ++;_fde .CurrentNumbers =nil ;};};func (_fbd Settings )Validate ()error {const _gdd ="\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0073\u002e\u0056\u0061\u006ci\u0064\u0061\u0074\u0065";
if _fbd .Thresh < 0.4||_fbd .Thresh > 0.98{return _f .Error (_gdd ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074\u0068\u0072\u0065\u0073\u0068\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0034\u0020\u002d\u0020\u0030\u002e\u0039\u0038\u005d");
};if _fbd .WeightFactor < 0.0||_fbd .WeightFactor > 1.0{return _f .Error (_gdd ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006ec\u006f\u0064\u0065\u0072\u0020w\u0065\u0069\u0067\u0068\u0074\u0020\u0066\u0061\u0063\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0030\u0020\u002d\u0020\u0031\u002e\u0030\u005d");
};if _fbd .RankHaus < 0.5||_fbd .RankHaus > 1.0{return _f .Error (_gdd ,"\u006a\u0062\u0069\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0072a\u006e\u006b\u0020\u0068\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065 \u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065 [\u0030\u002e\u0035\u0020\u002d\u0020\u0031\u002e\u0030\u005d");
};if _fbd .SizeHaus < 1||_fbd .SizeHaus > 10{return _f .Error (_gdd ,"\u006a\u0062\u0069\u0067\u0032 \u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0073\u0069\u007a\u0065\u0020h\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0031\u0020\u002d\u0020\u0031\u0030]");
};switch _fbd .Components {case _bd .ComponentConn ,_bd .ComponentCharacters ,_bd .ComponentWords :default:return _f .Error (_gdd ,"\u0069n\u0076\u0061\u006c\u0069d\u0020\u0063\u006c\u0061\u0073s\u0065r\u0020c\u006f\u006d\u0070\u006f\u006e\u0065\u006et");
};return nil ;};const (MaxDiffWidth =2;MaxDiffHeight =2;);const (MaxConnCompWidth =350;MaxCharCompWidth =350;MaxWordCompWidth =1000;MaxCompHeight =120;);var TwoByTwoWalk =[]int {0,0,0,1,-1,0,0,-1,1,0,-1,1,1,1,-1,-1,1,-1,0,-2,2,0,0,2,-2,0,-1,-2,1,-2,2,-1,2,1,1,2,-1,2,-2,1,-2,-1,-2,-2,2,-2,2,2,-2,2};
type Method int ;func (_cec *Classer )classifyRankHaus (_cdcd *_bd .Boxes ,_eaa *_bd .Bitmaps ,_fcbc int )error {const _ff ="\u0063\u006ca\u0073\u0073\u0069f\u0079\u0052\u0061\u006e\u006b\u0048\u0061\u0075\u0073";if _cdcd ==nil {return _f .Error (_ff ,"\u0062\u006fx\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};if _eaa ==nil {return _f .Error (_ff ,"\u0070\u0069x\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};_ag :=len (_eaa .Values );if _ag ==0{return _f .Error (_ff ,"e\u006dp\u0074\u0079\u0020\u006e\u0065\u0077\u0020\u0063o\u006d\u0070\u006f\u006een\u0074\u0073");
};_egac :=_eaa .CountPixels ();_bcf :=_cec .Settings .SizeHaus ;_dea :=_bd .SelCreateBrick (_bcf ,_bcf ,_bcf /2,_bcf /2,_bd .SelHit );_ffc :=&_bd .Bitmaps {Values :make ([]*_bd .Bitmap ,_ag )};_ede :=&_bd .Bitmaps {Values :make ([]*_bd .Bitmap ,_ag )};
var (_caf ,_gbb ,_edgg *_bd .Bitmap ;_gbdc error ;);for _bbd :=0;_bbd < _ag ;_bbd ++{_caf ,_gbdc =_eaa .GetBitmap (_bbd );if _gbdc !=nil {return _f .Wrap (_gbdc ,_ff ,"");};_gbb ,_gbdc =_caf .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);
if _gbdc !=nil {return _f .Wrap (_gbdc ,_ff ,"");};_edgg ,_gbdc =_bd .Dilate (nil ,_gbb ,_dea );if _gbdc !=nil {return _f .Wrap (_gbdc ,_ff ,"");};_ffc .Values [_ag ]=_gbb ;_ede .Values [_ag ]=_edgg ;};_gcea ,_gbdc :=_bd .Centroids (_ffc .Values );if _gbdc !=nil {return _f .Wrap (_gbdc ,_ff ,"");
};if _gbdc =_gcea .Add (_cec .CentroidPoints );_gbdc !=nil {_d .Log .Trace ("\u004e\u006f\u0020\u0063en\u0074\u0072\u006f\u0069\u0064\u0073\u0020\u0074\u006f\u0020\u0061\u0064\u0064");};if _cec .Settings .RankHaus ==1.0{_gbdc =_cec .classifyRankHouseOne (_cdcd ,_eaa ,_ffc ,_ede ,_gcea ,_fcbc );
}else {_gbdc =_cec .classifyRankHouseNonOne (_cdcd ,_eaa ,_ffc ,_ede ,_gcea ,_egac ,_fcbc );};if _gbdc !=nil {return _f .Wrap (_gbdc ,_ff ,"");};return nil ;};func Init (settings Settings )(*Classer ,error ){const _a ="\u0063\u006c\u0061s\u0073\u0065\u0072\u002e\u0049\u006e\u0069\u0074";
_ab :=&Classer {Settings :settings ,Widths :map[int ]int {},Heights :map[int ]int {},TemplatesSize :_b .IntsMap {},TemplateAreas :&_b .IntSlice {},ComponentPageNumbers :&_b .IntSlice {},ClassIDs :&_b .IntSlice {},ComponentsNumber :&_b .IntSlice {},CentroidPoints :&_bd .Points {},CentroidPointsTemplates :&_bd .Points {},UndilatedTemplates :&_bd .Bitmaps {},DilatedTemplates :&_bd .Bitmaps {},ClassInstances :&_bd .BitmapsArray {},FgTemplates :&_b .NumSlice {}};
if _eg :=_ab .Settings .Validate ();_eg !=nil {return nil ,_f .Wrap (_eg ,_a ,"");};return _ab ,nil ;};func _dfe (_bge *_bd .Bitmap ,_gg ,_de ,_aeb ,_ceba int ,_afc *_bd .Bitmap )(_ddd _e .Point ,_dee error ){const _cagb ="\u0066i\u006e\u0061\u006c\u0041l\u0069\u0067\u006e\u006d\u0065n\u0074P\u006fs\u0069\u0074\u0069\u006f\u006e\u0069\u006eg";
if _bge ==nil {return _ddd ,_f .Error (_cagb ,"\u0073\u006f\u0075\u0072ce\u0020\u006e\u006f\u0074\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064");};if _afc ==nil {return _ddd ,_f .Error (_cagb ,"t\u0065\u006d\u0070\u006cat\u0065 \u006e\u006f\u0074\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064");
};_cg ,_ggc :=_afc .Width ,_afc .Height ;_gce ,_aed :=_gg -_aeb -JbAddedPixels ,_de -_ceba -JbAddedPixels ;_d .Log .Trace ("\u0078\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0079\u003a\u0020\u0027\u0025\u0064'\u002c\u0020\u0077\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0068\u003a \u0027\u0025\u0064\u0027\u002c\u0020\u0062\u0078\u003a\u0020\u0027\u0025d'\u002c\u0020\u0062\u0079\u003a\u0020\u0027\u0025\u0064\u0027",_gg ,_de ,_cg ,_ggc ,_gce ,_aed );
_afcc ,_dee :=_bd .Rect (_gce ,_aed ,_cg ,_ggc );if _dee !=nil {return _ddd ,_f .Wrap (_dee ,_cagb ,"");};_eaf ,_ ,_dee :=_bge .ClipRectangle (_afcc );if _dee !=nil {_d .Log .Error ("\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069\u0070\u0020\u0072\u0065c\u0074\u0061\u006e\u0067\u006c\u0065\u003a\u0020\u0025\u0076",_afcc );
return _ddd ,_f .Wrap (_dee ,_cagb ,"");};_ace :=_bd .New (_eaf .Width ,_eaf .Height );_gb :=_g .MaxInt32 ;var _dga ,_cbg ,_bb ,_gd ,_gbd int ;for _dga =-1;_dga <=1;_dga ++{for _cbg =-1;_cbg <=1;_cbg ++{if _ ,_dee =_bd .Copy (_ace ,_eaf );_dee !=nil {return _ddd ,_f .Wrap (_dee ,_cagb ,"");
};if _dee =_ace .RasterOperation (_cbg ,_dga ,_cg ,_ggc ,_bd .PixSrcXorDst ,_afc ,0,0);_dee !=nil {return _ddd ,_f .Wrap (_dee ,_cagb ,"");};_bb =_ace .CountPixels ();if _bb < _gb {_gd =_cbg ;_gbd =_dga ;_gb =_bb ;};};};_ddd .X =_gd ;_ddd .Y =_gbd ;return _ddd ,nil ;
};func (_fcg *Classer )classifyRankHouseOne (_eaag *_bd .Boxes ,_bbg ,_egad ,_gebf *_bd .Bitmaps ,_bae *_bd .Points ,_gec int )(_cgc error ){const _cf ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";
var (_ggce ,_fcf ,_fag ,_cad float32 ;_acd int ;_ceg ,_acg ,_gef ,_bab ,_gcd *_bd .Bitmap ;_gcf ,_cafg bool ;);for _cdb :=0;_cdb < len (_bbg .Values );_cdb ++{_acg =_egad .Values [_cdb ];_gef =_gebf .Values [_cdb ];_ggce ,_fcf ,_cgc =_bae .GetGeometry (_cdb );
if _cgc !=nil {return _f .Wrapf (_cgc ,_cf ,"\u0066\u0069\u0072\u0073\u0074\u0020\u0067\u0065\u006fm\u0065\u0074\u0072\u0079");};_egc :=len (_fcg .UndilatedTemplates .Values );_gcf =false ;_ffca :=_cdf (_fcg ,_acg );for _acd =_ffca .Next ();_acd > -1;{_bab ,_cgc =_fcg .UndilatedTemplates .GetBitmap (_acd );
if _cgc !=nil {return _f .Wrap (_cgc ,_cf ,"\u0062\u006d\u0033");};_gcd ,_cgc =_fcg .DilatedTemplates .GetBitmap (_acd );if _cgc !=nil {return _f .Wrap (_cgc ,_cf ,"\u0062\u006d\u0034");};_fag ,_cad ,_cgc =_fcg .CentroidPointsTemplates .GetGeometry (_acd );
if _cgc !=nil {return _f .Wrap (_cgc ,_cf ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0073");};_cafg ,_cgc =_bd .HausTest (_acg ,_gef ,_bab ,_gcd ,_ggce -_fag ,_fcf -_cad ,MaxDiffWidth ,MaxDiffHeight );
if _cgc !=nil {return _f .Wrap (_cgc ,_cf ,"");};if _cafg {_gcf =true ;if _cgc =_fcg .ClassIDs .Add (_acd );_cgc !=nil {return _f .Wrap (_cgc ,_cf ,"");};if _cgc =_fcg .ComponentPageNumbers .Add (_gec );_cgc !=nil {return _f .Wrap (_cgc ,_cf ,"");};if _fcg .Settings .KeepClassInstances {_fdg ,_bgb :=_fcg .ClassInstances .GetBitmaps (_acd );
if _bgb !=nil {return _f .Wrap (_bgb ,_cf ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_ceg ,_bgb =_bbg .GetBitmap (_cdb );if _bgb !=nil {return _f .Wrap (_bgb ,_cf ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_fdg .AddBitmap (_ceg );_gff ,_bgb :=_eaag .Get (_cdb );
if _bgb !=nil {return _f .Wrap (_bgb ,_cf ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_fdg .AddBox (_gff );};break ;};};if !_gcf {if _cgc =_fcg .ClassIDs .Add (_egc );_cgc !=nil {return _f .Wrap (_cgc ,_cf ,"");};if _cgc =_fcg .ComponentPageNumbers .Add (_gec );
_cgc !=nil {return _f .Wrap (_cgc ,_cf ,"");};_cgg :=&_bd .Bitmaps {};_ceg ,_cgc =_bbg .GetBitmap (_cdb );if _cgc !=nil {return _f .Wrap (_cgc ,_cf ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_cgg .Values =append (_cgg .Values ,_ceg );_acef ,_dged :=_ceg .Width ,_ceg .Height ;
_fcg .TemplatesSize .Add (uint64 (_dged )*uint64 (_acef ),_egc );_deb ,_cbgd :=_eaag .Get (_cdb );if _cbgd !=nil {return _f .Wrap (_cbgd ,_cf ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_cgg .AddBox (_deb );_fcg .ClassInstances .AddBitmaps (_cgg );_fcg .CentroidPointsTemplates .AddPoint (_ggce ,_fcf );
_fcg .UndilatedTemplates .AddBitmap (_acg );_fcg .DilatedTemplates .AddBitmap (_gef );};};return nil ;};func (_aeca *Settings )SetDefault (){if _aeca .MaxCompWidth ==0{switch _aeca .Components {case _bd .ComponentConn :_aeca .MaxCompWidth =MaxConnCompWidth ;
case _bd .ComponentCharacters :_aeca .MaxCompWidth =MaxCharCompWidth ;case _bd .ComponentWords :_aeca .MaxCompWidth =MaxWordCompWidth ;};};if _aeca .MaxCompHeight ==0{_aeca .MaxCompHeight =MaxCompHeight ;};if _aeca .Thresh ==0.0{_aeca .Thresh =0.9;};if _aeca .WeightFactor ==0.0{_aeca .WeightFactor =0.75;
};if _aeca .RankHaus ==0.0{_aeca .RankHaus =0.97;};if _aeca .SizeHaus ==0{_aeca .SizeHaus =2;};};var _fcb bool ;type Settings struct{MaxCompWidth int ;MaxCompHeight int ;SizeHaus int ;RankHaus float64 ;Thresh float64 ;WeightFactor float64 ;KeepClassInstances bool ;
Components _bd .Component ;Method Method ;};func (_bcc *Classer )classifyCorrelation (_ad *_bd .Boxes ,_ba *_bd .Bitmaps ,_ggf int )error {const _fgd ="\u0063\u006c\u0061\u0073si\u0066\u0079\u0043\u006f\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e";
if _ad ==nil {return _f .Error (_fgd ,"\u006e\u0065\u0077\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0062\u006f\u0075\u006e\u0064\u0069\u006e\u0067\u0020\u0062o\u0078\u0065\u0073\u0020\u006eo\u0074\u0020f\u006f\u0075\u006e\u0064");
};if _ba ==nil {return _f .Error (_fgd ,"\u006e\u0065wC\u006f\u006d\u0070o\u006e\u0065\u006e\u0074s b\u0069tm\u0061\u0070\u0020\u0061\u0072\u0072\u0061y \u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064");};_aede :=len (_ba .Values );if _aede ==0{_d .Log .Debug ("\u0063l\u0061\u0073s\u0069\u0066\u0079C\u006f\u0072\u0072\u0065\u006c\u0061\u0074i\u006f\u006e\u0020\u002d\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0070\u0069\u0078\u0061s\u0020\u0069\u0073\u0020\u0065\u006d\u0070\u0074\u0079");
return nil ;};var (_ega ,_bdf *_bd .Bitmap ;_geb error ;);_egag :=&_bd .Bitmaps {Values :make ([]*_bd .Bitmap ,_aede )};for _dge ,_abe :=range _ba .Values {_bdf ,_geb =_abe .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);
if _geb !=nil {return _f .Wrap (_geb ,_fgd ,"");};_egag .Values [_dge ]=_bdf ;};_fb :=_bcc .FgTemplates ;_bgc :=_bd .MakePixelSumTab8 ();_bga :=_bd .MakePixelCentroidTab8 ();_gebg :=make ([]int ,_aede );_gf :=make ([][]int ,_aede );_aca :=_bd .Points (make ([]_bd .Point ,_aede ));
_aaa :=&_aca ;var (_def ,_dgc int ;_ecf ,_ece ,_fee int ;_ged ,_dfa int ;_dae byte ;);for _fdd ,_ed :=range _egag .Values {_gf [_fdd ]=make ([]int ,_ed .Height );_def =0;_dgc =0;_ece =(_ed .Height -1)*_ed .RowStride ;_ecf =0;for _dfa =_ed .Height -1;_dfa >=0;
_dfa ,_ece =_dfa -1,_ece -_ed .RowStride {_gf [_fdd ][_dfa ]=_ecf ;_fee =0;for _ged =0;_ged < _ed .RowStride ;_ged ++{_dae =_ed .Data [_ece +_ged ];_fee +=_bgc [_dae ];_def +=_bga [_dae ]+_ged *8*_bgc [_dae ];};_ecf +=_fee ;_dgc +=_fee *_dfa ;};_gebg [_fdd ]=_ecf ;
if _ecf > 0{(*_aaa )[_fdd ]=_bd .Point {X :float32 (_def )/float32 (_ecf ),Y :float32 (_dgc )/float32 (_ecf )};}else {(*_aaa )[_fdd ]=_bd .Point {X :float32 (_ed .Width )/float32 (2),Y :float32 (_ed .Height )/float32 (2)};};};if _geb =_bcc .CentroidPoints .Add (_aaa );
_geb !=nil {return _f .Wrap (_geb ,_fgd ,"\u0063\u0065\u006et\u0072\u006f\u0069\u0064\u0020\u0061\u0064\u0064");};var (_afbc ,_daf ,_fgdc int ;_bbb float64 ;_fgda ,_bgd ,_egg ,_afce float32 ;_bcd ,_bef _bd .Point ;_cebg bool ;_bgf *similarTemplatesFinder ;
_fdf int ;_edc *_bd .Bitmap ;_db *_e .Rectangle ;_fgf *_bd .Bitmaps ;);for _fdf ,_bdf =range _egag .Values {_daf =_gebg [_fdf ];if _fgda ,_bgd ,_geb =_aaa .GetGeometry (_fdf );_geb !=nil {return _f .Wrap (_geb ,_fgd ,"\u0070t\u0061\u0020\u002d\u0020\u0069");
};_cebg =false ;_aae :=len (_bcc .UndilatedTemplates .Values );_bgf =_cdf (_bcc ,_bdf );for _edg :=_bgf .Next ();_edg > -1;{if _edc ,_geb =_bcc .UndilatedTemplates .GetBitmap (_edg );_geb !=nil {return _f .Wrap (_geb ,_fgd ,"\u0075\u006e\u0069dl\u0061\u0074\u0065\u0064\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0062\u006d\u0032");
};if _fgdc ,_geb =_fb .GetInt (_edg );_geb !=nil {_d .Log .Trace ("\u0046\u0047\u0020T\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u005b\u0069\u0063\u006ca\u0073\u0073\u005d\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_geb );};if _egg ,_afce ,_geb =_bcc .CentroidPointsTemplates .GetGeometry (_edg );
_geb !=nil {return _f .Wrap (_geb ,_fgd ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074T\u0065\u006d\u0070\u006c\u0061\u0074e\u0073\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u00782\u002c\u0079\u0032\u0020");
};if _bcc .Settings .WeightFactor > 0.0{if _afbc ,_geb =_bcc .TemplateAreas .Get (_edg );_geb !=nil {_d .Log .Trace ("\u0054\u0065\u006dp\u006c\u0061\u0074\u0065A\u0072\u0065\u0061\u0073\u005b\u0069\u0063l\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0061\u0072\u0065\u0061\u0020\u0025\u0076",_geb );
};_bbb =_bcc .Settings .Thresh +(1.0-_bcc .Settings .Thresh )*_bcc .Settings .WeightFactor *float64 (_fgdc )/float64 (_afbc );}else {_bbb =_bcc .Settings .Thresh ;};_bde ,_eggd :=_bd .CorrelationScoreThresholded (_bdf ,_edc ,_daf ,_fgdc ,_bcd .X -_bef .X ,_bcd .Y -_bef .Y ,MaxDiffWidth ,MaxDiffHeight ,_bgc ,_gf [_fdf ],float32 (_bbb ));
if _eggd !=nil {return _f .Wrap (_eggd ,_fgd ,"");};if _fcb {var (_dda ,_eb float64 ;_ccb ,_ddb int ;);_dda ,_eggd =_bd .CorrelationScore (_bdf ,_edc ,_daf ,_fgdc ,_fgda -_egg ,_bgd -_afce ,MaxDiffWidth ,MaxDiffHeight ,_bgc );if _eggd !=nil {return _f .Wrap (_eggd ,_fgd ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");
};_eb ,_eggd =_bd .CorrelationScoreSimple (_bdf ,_edc ,_daf ,_fgdc ,_fgda -_egg ,_bgd -_afce ,MaxDiffWidth ,MaxDiffHeight ,_bgc );if _eggd !=nil {return _f .Wrap (_eggd ,_fgd ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");
};_ccb =int (_g .Sqrt (_dda *float64 (_daf )*float64 (_fgdc )));_ddb =int (_g .Sqrt (_eb *float64 (_daf )*float64 (_fgdc )));if (_dda >=_bbb )!=(_eb >=_bbb ){return _f .Errorf (_fgd ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043\u006f\u0072r\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0063\u006f\u0072\u0065\u0020\u006d\u0069\u0073\u006d\u0061\u0074\u0063\u0068\u0020-\u0020\u0025d\u0028\u00250\u002e\u0034\u0066\u002c\u0020\u0025\u0076\u0029\u0020\u0076\u0073\u0020\u0025d(\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0076)\u0020\u0025\u0030\u002e\u0034\u0066",_ccb ,_dda ,_dda >=_bbb ,_ddb ,_eb ,_eb >=_bbb ,_dda -_eb );
};if _dda >=_bbb !=_bde {return _f .Errorf (_fgd ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043o\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e \u0073\u0063\u006f\u0072\u0065 \u004d\u0069\u0073\u006d\u0061t\u0063\u0068 \u0062\u0065\u0074w\u0065\u0065\u006e\u0020\u0063\u006frr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020/\u0020\u0074\u0068\u0072\u0065s\u0068\u006f\u006c\u0064\u002e\u0020\u0043\u006f\u006dpa\u0072\u0069\u0073\u006f\u006e:\u0020\u0025\u0030\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0064\u0029\u0020\u003e\u003d\u0020\u00250\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u0029\u0020\u0076\u0073\u0020\u0025\u0076",_dda ,_dda *float64 (_daf )*float64 (_fgdc ),_ccb ,_bbb ,float32 (_bbb )*float32 (_daf )*float32 (_fgdc ),_bde );
};};if _bde {_cebg =true ;if _eggd =_bcc .ClassIDs .Add (_edg );_eggd !=nil {return _f .Wrap (_eggd ,_fgd ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");};if _eggd =_bcc .ComponentPageNumbers .Add (_ggf );_eggd !=nil {return _f .Wrap (_eggd ,_fgd ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");
};if _bcc .Settings .KeepClassInstances {if _ega ,_eggd =_ba .GetBitmap (_fdf );_eggd !=nil {return _f .Wrap (_eggd ,_fgd ,"\u004b\u0065\u0065\u0070Cl\u0061\u0073\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u002d \u0069");};if _fgf ,_eggd =_bcc .ClassInstances .GetBitmaps (_edg );
_eggd !=nil {return _f .Wrap (_eggd ,_fgd ,"K\u0065\u0065\u0070\u0043\u006c\u0061s\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065s\u0020\u002d\u0020i\u0043l\u0061\u0073\u0073");};_fgf .AddBitmap (_ega );if _db ,_eggd =_ad .Get (_fdf );_eggd !=nil {return _f .Wrap (_eggd ,_fgd ,"\u004be\u0065p\u0043\u006c\u0061\u0073\u0073I\u006e\u0073t\u0061\u006e\u0063\u0065\u0073");
};_fgf .AddBox (_db );};break ;};};if !_cebg {if _geb =_bcc .ClassIDs .Add (_aae );_geb !=nil {return _f .Wrap (_geb ,_fgd ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _geb =_bcc .ComponentPageNumbers .Add (_ggf );_geb !=nil {return _f .Wrap (_geb ,_fgd ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_fgf =&_bd .Bitmaps {};if _ega ,_geb =_ba .GetBitmap (_fdf );_geb !=nil {return _f .Wrap (_geb ,_fgd ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_fgf .AddBitmap (_ega );_ebf ,_fdfg :=_ega .Width ,_ega .Height ;_ee :=uint64 (_fdfg )*uint64 (_ebf );_bcc .TemplatesSize .Add (_ee ,_aae );
if _db ,_geb =_ad .Get (_fdf );_geb !=nil {return _f .Wrap (_geb ,_fgd ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_fgf .AddBox (_db );_bcc .ClassInstances .AddBitmaps (_fgf );_bcc .CentroidPointsTemplates .AddPoint (_fgda ,_bgd );_bcc .FgTemplates .AddInt (_daf );
_bcc .UndilatedTemplates .AddBitmap (_ega );_afbc =(_bdf .Width -2*JbAddedPixels )*(_bdf .Height -2*JbAddedPixels );if _geb =_bcc .TemplateAreas .Add (_afbc );_geb !=nil {return _f .Wrap (_geb ,_fgd ,"\u0021\u0066\u006f\u0075\u006e\u0064");};};};_bcc .NumberOfClasses =len (_bcc .UndilatedTemplates .Values );
return nil ;};const JbAddedPixels =6;type Classer struct{BaseIndex int ;Settings Settings ;ComponentsNumber *_b .IntSlice ;TemplateAreas *_b .IntSlice ;Widths map[int ]int ;Heights map[int ]int ;NumberOfClasses int ;ClassInstances *_bd .BitmapsArray ;UndilatedTemplates *_bd .Bitmaps ;
DilatedTemplates *_bd .Bitmaps ;TemplatesSize _b .IntsMap ;FgTemplates *_b .NumSlice ;CentroidPoints *_bd .Points ;CentroidPointsTemplates *_bd .Points ;ClassIDs *_b .IntSlice ;ComponentPageNumbers *_b .IntSlice ;PtaUL *_bd .Points ;PtaLL *_bd .Points ;
};func (_cd *Classer )addPageComponents (_cdc *_bd .Bitmap ,_efg *_bd .Boxes ,_ca *_bd .Bitmaps ,_af int ,_ea Method )error {const _fe ="\u0043l\u0061\u0073\u0073\u0065r\u002e\u0041\u0064\u0064\u0050a\u0067e\u0043o\u006d\u0070\u006f\u006e\u0065\u006e\u0074s";
if _cdc ==nil {return _f .Error (_fe ,"\u006e\u0069\u006c\u0020\u0069\u006e\u0070\u0075\u0074 \u0070\u0061\u0067\u0065");};if _efg ==nil ||_ca ==nil ||len (*_efg )==0{_d .Log .Trace ("\u0041\u0064\u0064P\u0061\u0067\u0065\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0073\u002e\u0020\u004e\u006f\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065n\u0074\u0073\u0020\u0066\u006f\u0075\u006e\u0064",_cdc );
return nil ;};var _efb error ;switch _ea {case RankHaus :_efb =_cd .classifyRankHaus (_efg ,_ca ,_af );case Correlation :_efb =_cd .classifyCorrelation (_efg ,_ca ,_af );default:_d .Log .Debug ("\u0055\u006ek\u006e\u006f\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064\u003a\u0020'%\u0076\u0027",_ea );
return _f .Error (_fe ,"\u0075\u006e\u006bno\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064");};if _efb !=nil {return _f .Wrap (_efb ,_fe ,"");};if _efb =_cd .getULCorners (_cdc ,_efg );_efb !=nil {return _f .Wrap (_efb ,_fe ,"");
};_cee :=len (*_efg );_cd .BaseIndex +=_cee ;if _efb =_cd .ComponentsNumber .Add (_cee );_efb !=nil {return _f .Wrap (_efb ,_fe ,"");};return nil ;};func (_eff *Classer )verifyMethod (_ceb Method )error {if _ceb !=RankHaus &&_ceb !=Correlation {return _f .Error ("\u0076\u0065\u0072i\u0066\u0079\u004d\u0065\u0074\u0068\u006f\u0064","\u0069\u006e\u0076\u0061li\u0064\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072\u0020\u006d\u0065\u0074\u0068o\u0064");
};return nil ;};func (_fc *Classer )AddPage (inputPage *_bd .Bitmap ,pageNumber int ,method Method )(_ec error ){const _dg ="\u0043l\u0061s\u0073\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_fc .Widths [pageNumber ]=inputPage .Width ;_fc .Heights [pageNumber ]=inputPage .Height ;
if _ec =_fc .verifyMethod (method );_ec !=nil {return _f .Wrap (_ec ,_dg ,"");};_dd ,_ef ,_ec :=inputPage .GetComponents (_fc .Settings .Components ,_fc .Settings .MaxCompWidth ,_fc .Settings .MaxCompHeight );if _ec !=nil {return _f .Wrap (_ec ,_dg ,"");
};_d .Log .Debug ("\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_dd );if _ec =_fc .addPageComponents (inputPage ,_ef ,_dd ,pageNumber ,method );_ec !=nil {return _f .Wrap (_ec ,_dg ,"");};return nil ;};func _cdf (_efeb *Classer ,_aba *_bd .Bitmap )*similarTemplatesFinder {return &similarTemplatesFinder {Width :_aba .Width ,Height :_aba .Height ,Classer :_efeb };
};func (_fa *Classer )getULCorners (_fd *_bd .Bitmap ,_cag *_bd .Boxes )error {const _aff ="\u0067\u0065\u0074U\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";if _fd ==nil {return _f .Error (_aff ,"\u006e\u0069l\u0020\u0069\u006da\u0067\u0065\u0020\u0062\u0069\u0074\u006d\u0061\u0070");
};if _cag ==nil {return _f .Error (_aff ,"\u006e\u0069\u006c\u0020\u0062\u006f\u0075\u006e\u0064\u0073");};if _fa .PtaUL ==nil {_fa .PtaUL =&_bd .Points {};};_afb :=len (*_cag );var (_cda ,_ac ,_ccd ,_bc int ;_cce ,_fg ,_bf ,_da float32 ;_cb error ;_ecge *_e .Rectangle ;
_dgd *_bd .Bitmap ;_bg _e .Point ;);for _ecd :=0;_ecd < _afb ;_ecd ++{_cda =_fa .BaseIndex +_ecd ;if _cce ,_fg ,_cb =_fa .CentroidPoints .GetGeometry (_cda );_cb !=nil {return _f .Wrap (_cb ,_aff ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050o\u0069\u006e\u0074\u0073");
};if _ac ,_cb =_fa .ClassIDs .Get (_cda );_cb !=nil {return _f .Wrap (_cb ,_aff ,"\u0043\u006c\u0061s\u0073\u0049\u0044\u0073\u002e\u0047\u0065\u0074");};if _bf ,_da ,_cb =_fa .CentroidPointsTemplates .GetGeometry (_ac );_cb !=nil {return _f .Wrap (_cb ,_aff ,"\u0043\u0065\u006etr\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074\u0073\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");
};_fef :=_bf -_cce ;_df :=_da -_fg ;if _fef >=0{_ccd =int (_fef +0.5);}else {_ccd =int (_fef -0.5);};if _df >=0{_bc =int (_df +0.5);}else {_bc =int (_df -0.5);};if _ecge ,_cb =_cag .Get (_ecd );_cb !=nil {return _f .Wrap (_cb ,_aff ,"");};_ae ,_ddg :=_ecge .Min .X ,_ecge .Min .Y ;
_dgd ,_cb =_fa .UndilatedTemplates .GetBitmap (_ac );if _cb !=nil {return _f .Wrap (_cb ,_aff ,"\u0055\u006e\u0064\u0069\u006c\u0061\u0074\u0065\u0064\u0054e\u006d\u0070\u006c\u0061\u0074\u0065\u0073.\u0047\u0065\u0074\u0028\u0069\u0043\u006c\u0061\u0073\u0073\u0029");
};_bg ,_cb =_dfe (_fd ,_ae ,_ddg ,_ccd ,_bc ,_dgd );if _cb !=nil {return _f .Wrap (_cb ,_aff ,"");};_fa .PtaUL .AddPoint (float32 (_ae -_ccd +_bg .X ),float32 (_ddg -_bc +_bg .Y ));};return nil ;};const (RankHaus Method =iota ;Correlation ;);type similarTemplatesFinder struct{Classer *Classer ;
Width int ;Height int ;Index int ;CurrentNumbers []int ;N int ;};func (_dbf *Classer )classifyRankHouseNonOne (_ceee *_bd .Boxes ,_gge ,_ebfc ,_cea *_bd .Bitmaps ,_cgb *_bd .Points ,_aec *_b .NumSlice ,_bfa int )(_aaaa error ){const _gcb ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";
var (_dad ,_gffd ,_cggf ,_dfb float32 ;_gcfc ,_abee ,_fbb int ;_gda ,_dfg ,_bbe ,_eafe ,_eac *_bd .Bitmap ;_dff ,_gga bool ;);_dac :=_bd .MakePixelSumTab8 ();for _aecg :=0;_aecg < len (_gge .Values );_aecg ++{if _dfg ,_aaaa =_ebfc .GetBitmap (_aecg );_aaaa !=nil {return _f .Wrap (_aaaa ,_gcb ,"b\u006d\u0073\u0031\u002e\u0047\u0065\u0074\u0028\u0069\u0029");
};if _gcfc ,_aaaa =_aec .GetInt (_aecg );_aaaa !=nil {_d .Log .Trace ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0046\u0047T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073 \u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_aecg ,_aaaa );
};if _bbe ,_aaaa =_cea .GetBitmap (_aecg );_aaaa !=nil {return _f .Wrap (_aaaa ,_gcb ,"b\u006d\u0073\u0032\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};if _dad ,_gffd ,_aaaa =_cgb .GetGeometry (_aecg );_aaaa !=nil {return _f .Wrapf (_aaaa ,_gcb ,"\u0070t\u0061[\u0069\u005d\u002e\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079");
};_egf :=len (_dbf .UndilatedTemplates .Values );_dff =false ;_dcb :=_cdf (_dbf ,_dfg );for _fbb =_dcb .Next ();_fbb > -1;{if _eafe ,_aaaa =_dbf .UndilatedTemplates .GetBitmap (_fbb );_aaaa !=nil {return _f .Wrap (_aaaa ,_gcb ,"\u0070\u0069\u0078\u0061\u0074\u002e\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");
};if _abee ,_aaaa =_dbf .FgTemplates .GetInt (_fbb );_aaaa !=nil {_d .Log .Trace ("\u0047\u0065\u0074\u0074\u0069\u006eg\u0020\u0046\u0047\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u005b\u0025d\u005d\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_fbb ,_aaaa );
};if _eac ,_aaaa =_dbf .DilatedTemplates .GetBitmap (_fbb );_aaaa !=nil {return _f .Wrap (_aaaa ,_gcb ,"\u0070\u0069\u0078\u0061\u0074\u0064\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");};if _cggf ,_dfb ,_aaaa =_dbf .CentroidPointsTemplates .GetGeometry (_fbb );
_aaaa !=nil {return _f .Wrap (_aaaa ,_gcb ,"\u0043\u0065\u006et\u0072\u006f\u0069\u0064P\u006f\u0069\u006e\u0074\u0073\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u005b\u0069\u0043\u006c\u0061\u0073\u0073\u005d");};_gga ,_aaaa =_bd .RankHausTest (_dfg ,_bbe ,_eafe ,_eac ,_dad -_cggf ,_gffd -_dfb ,MaxDiffWidth ,MaxDiffHeight ,_gcfc ,_abee ,float32 (_dbf .Settings .RankHaus ),_dac );
if _aaaa !=nil {return _f .Wrap (_aaaa ,_gcb ,"");};if _gga {_dff =true ;if _aaaa =_dbf .ClassIDs .Add (_fbb );_aaaa !=nil {return _f .Wrap (_aaaa ,_gcb ,"");};if _aaaa =_dbf .ComponentPageNumbers .Add (_bfa );_aaaa !=nil {return _f .Wrap (_aaaa ,_gcb ,"");
};if _dbf .Settings .KeepClassInstances {_agc ,_ccc :=_dbf .ClassInstances .GetBitmaps (_fbb );if _ccc !=nil {return _f .Wrap (_ccc ,_gcb ,"\u0063\u002e\u0050\u0069\u0078\u0061\u0061\u002e\u0047\u0065\u0074B\u0069\u0074\u006d\u0061\u0070\u0073\u0028\u0069\u0043\u006ca\u0073\u0073\u0029");
};if _gda ,_ccc =_gge .GetBitmap (_aecg );_ccc !=nil {return _f .Wrap (_ccc ,_gcb ,"\u0070i\u0078\u0061\u005b\u0069\u005d");};_agc .Values =append (_agc .Values ,_gda );_aeba ,_ccc :=_ceee .Get (_aecg );if _ccc !=nil {return _f .Wrap (_ccc ,_gcb ,"b\u006f\u0078\u0061\u002e\u0047\u0065\u0074\u0028\u0069\u0029");
};_agc .Boxes =append (_agc .Boxes ,_aeba );};break ;};};if !_dff {if _aaaa =_dbf .ClassIDs .Add (_egf );_aaaa !=nil {return _f .Wrap (_aaaa ,_gcb ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _aaaa =_dbf .ComponentPageNumbers .Add (_bfa );_aaaa !=nil {return _f .Wrap (_aaaa ,_gcb ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_fbe :=&_bd .Bitmaps {};_gda =_gge .Values [_aecg ];_fbe .AddBitmap (_gda );_daa ,_cgf :=_gda .Width ,_gda .Height ;_dbf .TemplatesSize .Add (uint64 (_daa )*uint64 (_cgf ),_egf );_dcf ,_efe :=_ceee .Get (_aecg );if _efe !=nil {return _f .Wrap (_efe ,_gcb ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_fbe .AddBox (_dcf );_dbf .ClassInstances .AddBitmaps (_fbe );_dbf .CentroidPointsTemplates .AddPoint (_dad ,_gffd );_dbf .UndilatedTemplates .AddBitmap (_dfg );_dbf .DilatedTemplates .AddBitmap (_bbe );_dbf .FgTemplates .AddInt (_gcfc );};};_dbf .NumberOfClasses =len (_dbf .UndilatedTemplates .Values );
return nil ;};func DefaultSettings ()Settings {_aee :=&Settings {};_aee .SetDefault ();return *_aee };func (_fca *Classer )ComputeLLCorners ()(_aa error ){const _cc ="\u0043l\u0061\u0073\u0073\u0065\u0072\u002e\u0043\u006f\u006d\u0070\u0075t\u0065\u004c\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";
if _fca .PtaUL ==nil {return _f .Error (_cc ,"\u0055\u004c\u0020\u0043or\u006e\u0065\u0072\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006ee\u0064");};_ecg :=len (*_fca .PtaUL );_fca .PtaLL =&_bd .Points {};var (_ce ,_cef float32 ;_dgg ,_gc int ;
_ge *_bd .Bitmap ;);for _be :=0;_be < _ecg ;_be ++{_ce ,_cef ,_aa =_fca .PtaUL .GetGeometry (_be );if _aa !=nil {_d .Log .Debug ("\u0047e\u0074\u0074\u0069\u006e\u0067\u0020\u0050\u0074\u0061\u0055\u004c \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_aa );
return _f .Wrap (_aa ,_cc ,"\u0050\u0074\u0061\u0055\u004c\u0020\u0047\u0065\u006fm\u0065\u0074\u0072\u0079");};_dgg ,_aa =_fca .ClassIDs .Get (_be );if _aa !=nil {_d .Log .Debug ("\u0047\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0043\u006c\u0061s\u0073\u0049\u0044\u0020\u0066\u0061\u0069\u006c\u0065\u0064:\u0020\u0025\u0076",_aa );
return _f .Wrap (_aa ,_cc ,"\u0043l\u0061\u0073\u0073\u0049\u0044");};_ge ,_aa =_fca .UndilatedTemplates .GetBitmap (_dgg );if _aa !=nil {_d .Log .Debug ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0055\u006ed\u0069\u006c\u0061\u0074\u0065\u0064\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_aa );
return _f .Wrap (_aa ,_cc ,"\u0055\u006e\u0064\u0069la\u0074\u0065\u0064\u0020\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");};_gc =_ge .Height ;_fca .PtaLL .AddPoint (_ce ,_cef +float32 (_gc ));};return nil ;};