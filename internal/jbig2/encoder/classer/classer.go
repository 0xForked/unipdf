//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package classer ;import (_g "github.com/unidoc/unipdf/v3/common";_ad "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_fa "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";_b "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_d "image";_f "math";
);func (_adc *Classer )verifyMethod (_cg Method )error {if _cg !=RankHaus &&_cg !=Correlation {return _b .Error ("\u0076\u0065\u0072i\u0066\u0079\u004d\u0065\u0074\u0068\u006f\u0064","\u0069\u006e\u0076\u0061li\u0064\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072\u0020\u006d\u0065\u0074\u0068o\u0064");
};return nil ;};func _ecec (_bdbe *Classer ,_fcg *_fa .Bitmap )*similarTemplatesFinder {return &similarTemplatesFinder {Width :_fcg .Width ,Height :_fcg .Height ,Classer :_bdbe };};type similarTemplatesFinder struct{Classer *Classer ;Width int ;Height int ;
Index int ;CurrentNumbers []int ;N int ;};func (_fccd Settings )Validate ()error {const _edg ="\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0073\u002e\u0056\u0061\u006ci\u0064\u0061\u0074\u0065";if _fccd .Thresh < 0.4||_fccd .Thresh > 0.98{return _b .Error (_edg ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074\u0068\u0072\u0065\u0073\u0068\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0034\u0020\u002d\u0020\u0030\u002e\u0039\u0038\u005d");
};if _fccd .WeightFactor < 0.0||_fccd .WeightFactor > 1.0{return _b .Error (_edg ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006ec\u006f\u0064\u0065\u0072\u0020w\u0065\u0069\u0067\u0068\u0074\u0020\u0066\u0061\u0063\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0030\u0020\u002d\u0020\u0031\u002e\u0030\u005d");
};if _fccd .RankHaus < 0.5||_fccd .RankHaus > 1.0{return _b .Error (_edg ,"\u006a\u0062\u0069\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0072a\u006e\u006b\u0020\u0068\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065 \u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065 [\u0030\u002e\u0035\u0020\u002d\u0020\u0031\u002e\u0030\u005d");
};if _fccd .SizeHaus < 1||_fccd .SizeHaus > 10{return _b .Error (_edg ,"\u006a\u0062\u0069\u0067\u0032 \u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0073\u0069\u007a\u0065\u0020h\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0031\u0020\u002d\u0020\u0031\u0030]");
};switch _fccd .Components {case _fa .ComponentConn ,_fa .ComponentCharacters ,_fa .ComponentWords :default:return _b .Error (_edg ,"\u0069n\u0076\u0061\u006c\u0069d\u0020\u0063\u006c\u0061\u0073s\u0065r\u0020c\u006f\u006d\u0070\u006f\u006e\u0065\u006et");
};return nil ;};func (_eaed *Settings )SetDefault (){if _eaed .MaxCompWidth ==0{switch _eaed .Components {case _fa .ComponentConn :_eaed .MaxCompWidth =MaxConnCompWidth ;case _fa .ComponentCharacters :_eaed .MaxCompWidth =MaxCharCompWidth ;case _fa .ComponentWords :_eaed .MaxCompWidth =MaxWordCompWidth ;
};};if _eaed .MaxCompHeight ==0{_eaed .MaxCompHeight =MaxCompHeight ;};if _eaed .Thresh ==0.0{_eaed .Thresh =0.9;};if _eaed .WeightFactor ==0.0{_eaed .WeightFactor =0.75;};if _eaed .RankHaus ==0.0{_eaed .RankHaus =0.97;};if _eaed .SizeHaus ==0{_eaed .SizeHaus =2;
};};func (_agg *Classer )ComputeLLCorners ()(_cb error ){const _cc ="\u0043l\u0061\u0073\u0073\u0065\u0072\u002e\u0043\u006f\u006d\u0070\u0075t\u0065\u004c\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";if _agg .PtaUL ==nil {return _b .Error (_cc ,"\u0055\u004c\u0020\u0043or\u006e\u0065\u0072\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006ee\u0064");
};_gb :=len (*_agg .PtaUL );_agg .PtaLL =&_fa .Points {};var (_ba ,_aa float32 ;_ca ,_bc int ;_cbf *_fa .Bitmap ;);for _de :=0;_de < _gb ;_de ++{_ba ,_aa ,_cb =_agg .PtaUL .GetGeometry (_de );if _cb !=nil {_g .Log .Debug ("\u0047e\u0074\u0074\u0069\u006e\u0067\u0020\u0050\u0074\u0061\u0055\u004c \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_cb );
return _b .Wrap (_cb ,_cc ,"\u0050\u0074\u0061\u0055\u004c\u0020\u0047\u0065\u006fm\u0065\u0074\u0072\u0079");};_ca ,_cb =_agg .ClassIDs .Get (_de );if _cb !=nil {_g .Log .Debug ("\u0047\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0043\u006c\u0061s\u0073\u0049\u0044\u0020\u0066\u0061\u0069\u006c\u0065\u0064:\u0020\u0025\u0076",_cb );
return _b .Wrap (_cb ,_cc ,"\u0043l\u0061\u0073\u0073\u0049\u0044");};_cbf ,_cb =_agg .UndilatedTemplates .GetBitmap (_ca );if _cb !=nil {_g .Log .Debug ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0055\u006ed\u0069\u006c\u0061\u0074\u0065\u0064\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_cb );
return _b .Wrap (_cb ,_cc ,"\u0055\u006e\u0064\u0069la\u0074\u0065\u0064\u0020\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");};_bc =_cbf .Height ;_agg .PtaLL .AddPoint (_ba ,_aa +float32 (_bc ));};return nil ;};type Classer struct{BaseIndex int ;
Settings Settings ;ComponentsNumber *_ad .IntSlice ;TemplateAreas *_ad .IntSlice ;Widths map[int ]int ;Heights map[int ]int ;NumberOfClasses int ;ClassInstances *_fa .BitmapsArray ;UndilatedTemplates *_fa .Bitmaps ;DilatedTemplates *_fa .Bitmaps ;TemplatesSize _ad .IntsMap ;
FgTemplates *_ad .NumSlice ;CentroidPoints *_fa .Points ;CentroidPointsTemplates *_fa .Points ;ClassIDs *_ad .IntSlice ;ComponentPageNumbers *_ad .IntSlice ;PtaUL *_fa .Points ;PtaLL *_fa .Points ;};func DefaultSettings ()Settings {_bfe :=&Settings {};
_bfe .SetDefault ();return *_bfe };type Method int ;func (_aab *Classer )classifyRankHaus (_aebe *_fa .Boxes ,_acgc *_fa .Bitmaps ,_daf int )error {const _dge ="\u0063\u006ca\u0073\u0073\u0069f\u0079\u0052\u0061\u006e\u006b\u0048\u0061\u0075\u0073";if _aebe ==nil {return _b .Error (_dge ,"\u0062\u006fx\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};if _acgc ==nil {return _b .Error (_dge ,"\u0070\u0069x\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};_afb :=len (_acgc .Values );if _afb ==0{return _b .Error (_dge ,"e\u006dp\u0074\u0079\u0020\u006e\u0065\u0077\u0020\u0063o\u006d\u0070\u006f\u006een\u0074\u0073");
};_dae :=_acgc .CountPixels ();_gde :=_aab .Settings .SizeHaus ;_dfc :=_fa .SelCreateBrick (_gde ,_gde ,_gde /2,_gde /2,_fa .SelHit );_bfg :=&_fa .Bitmaps {Values :make ([]*_fa .Bitmap ,_afb )};_ddg :=&_fa .Bitmaps {Values :make ([]*_fa .Bitmap ,_afb )};
var (_ead ,_ceb ,_cfb *_fa .Bitmap ;_dbb error ;);for _ccb :=0;_ccb < _afb ;_ccb ++{_ead ,_dbb =_acgc .GetBitmap (_ccb );if _dbb !=nil {return _b .Wrap (_dbb ,_dge ,"");};_ceb ,_dbb =_ead .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);
if _dbb !=nil {return _b .Wrap (_dbb ,_dge ,"");};_cfb ,_dbb =_fa .Dilate (nil ,_ceb ,_dfc );if _dbb !=nil {return _b .Wrap (_dbb ,_dge ,"");};_bfg .Values [_afb ]=_ceb ;_ddg .Values [_afb ]=_cfb ;};_bcgdb ,_dbb :=_fa .Centroids (_bfg .Values );if _dbb !=nil {return _b .Wrap (_dbb ,_dge ,"");
};if _dbb =_bcgdb .Add (_aab .CentroidPoints );_dbb !=nil {_g .Log .Trace ("\u004e\u006f\u0020\u0063en\u0074\u0072\u006f\u0069\u0064\u0073\u0020\u0074\u006f\u0020\u0061\u0064\u0064");};if _aab .Settings .RankHaus ==1.0{_dbb =_aab .classifyRankHouseOne (_aebe ,_acgc ,_bfg ,_ddg ,_bcgdb ,_daf );
}else {_dbb =_aab .classifyRankHouseNonOne (_aebe ,_acgc ,_bfg ,_ddg ,_bcgdb ,_dae ,_daf );};if _dbb !=nil {return _b .Wrap (_dbb ,_dge ,"");};return nil ;};func _ge (_eeb *_fa .Bitmap ,_daa ,_ccg ,_fag ,_cd int ,_eee *_fa .Bitmap )(_bcgb _d .Point ,_cdc error ){const _ef ="\u0066i\u006e\u0061\u006c\u0041l\u0069\u0067\u006e\u006d\u0065n\u0074P\u006fs\u0069\u0074\u0069\u006f\u006e\u0069\u006eg";
if _eeb ==nil {return _bcgb ,_b .Error (_ef ,"\u0073\u006f\u0075\u0072ce\u0020\u006e\u006f\u0074\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064");};if _eee ==nil {return _bcgb ,_b .Error (_ef ,"t\u0065\u006d\u0070\u006cat\u0065 \u006e\u006f\u0074\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064");
};_eed ,_ae :=_eee .Width ,_eee .Height ;_aaf ,_ffa :=_daa -_fag -JbAddedPixels ,_ccg -_cd -JbAddedPixels ;_g .Log .Trace ("\u0078\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0079\u003a\u0020\u0027\u0025\u0064'\u002c\u0020\u0077\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0068\u003a \u0027\u0025\u0064\u0027\u002c\u0020\u0062\u0078\u003a\u0020\u0027\u0025d'\u002c\u0020\u0062\u0079\u003a\u0020\u0027\u0025\u0064\u0027",_daa ,_ccg ,_eed ,_ae ,_aaf ,_ffa );
_dgg ,_cdc :=_fa .Rect (_aaf ,_ffa ,_eed ,_ae );if _cdc !=nil {return _bcgb ,_b .Wrap (_cdc ,_ef ,"");};_acgb ,_ ,_cdc :=_eeb .ClipRectangle (_dgg );if _cdc !=nil {_g .Log .Error ("\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069\u0070\u0020\u0072\u0065c\u0074\u0061\u006e\u0067\u006c\u0065\u003a\u0020\u0025\u0076",_dgg );
return _bcgb ,_b .Wrap (_cdc ,_ef ,"");};_fcc :=_fa .New (_acgb .Width ,_acgb .Height );_eea :=_f .MaxInt32 ;var _df ,_bcgd ,_fgc ,_cdb ,_bd int ;for _df =-1;_df <=1;_df ++{for _bcgd =-1;_bcgd <=1;_bcgd ++{if _ ,_cdc =_fa .Copy (_fcc ,_acgb );_cdc !=nil {return _bcgb ,_b .Wrap (_cdc ,_ef ,"");
};if _cdc =_fcc .RasterOperation (_bcgd ,_df ,_eed ,_ae ,_fa .PixSrcXorDst ,_eee ,0,0);_cdc !=nil {return _bcgb ,_b .Wrap (_cdc ,_ef ,"");};_fgc =_fcc .CountPixels ();if _fgc < _eea {_cdb =_bcgd ;_bd =_df ;_eea =_fgc ;};};};_bcgb .X =_cdb ;_bcgb .Y =_bd ;
return _bcgb ,nil ;};func (_gdg *Classer )classifyCorrelation (_ec *_fa .Boxes ,_bg *_fa .Bitmaps ,_bcd int )error {const _cf ="\u0063\u006c\u0061\u0073si\u0066\u0079\u0043\u006f\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e";if _ec ==nil {return _b .Error (_cf ,"\u006e\u0065\u0077\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0062\u006f\u0075\u006e\u0064\u0069\u006e\u0067\u0020\u0062o\u0078\u0065\u0073\u0020\u006eo\u0074\u0020f\u006f\u0075\u006e\u0064");
};if _bg ==nil {return _b .Error (_cf ,"\u006e\u0065wC\u006f\u006d\u0070o\u006e\u0065\u006e\u0074s b\u0069tm\u0061\u0070\u0020\u0061\u0072\u0072\u0061y \u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064");};_cbfb :=len (_bg .Values );if _cbfb ==0{_g .Log .Debug ("\u0063l\u0061\u0073s\u0069\u0066\u0079C\u006f\u0072\u0072\u0065\u006c\u0061\u0074i\u006f\u006e\u0020\u002d\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0070\u0069\u0078\u0061s\u0020\u0069\u0073\u0020\u0065\u006d\u0070\u0074\u0079");
return nil ;};var (_cac ,_caf *_fa .Bitmap ;_bbbd error ;);_fcb :=&_fa .Bitmaps {Values :make ([]*_fa .Bitmap ,_cbfb )};for _ffe ,_cacc :=range _bg .Values {_caf ,_bbbd =_cacc .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);
if _bbbd !=nil {return _b .Wrap (_bbbd ,_cf ,"");};_fcb .Values [_ffe ]=_caf ;};_ffg :=_gdg .FgTemplates ;_dcd :=_fa .MakePixelSumTab8 ();_gdb :=_fa .MakePixelCentroidTab8 ();_cge :=make ([]int ,_cbfb );_ea :=make ([][]int ,_cbfb );_aeb :=_fa .Points (make ([]_fa .Point ,_cbfb ));
_eb :=&_aeb ;var (_afe ,_be int ;_fdf ,_bdc ,_adb int ;_gfa ,_fce int ;_eg byte ;);for _dgb ,_gfc :=range _fcb .Values {_ea [_dgb ]=make ([]int ,_gfc .Height );_afe =0;_be =0;_bdc =(_gfc .Height -1)*_gfc .RowStride ;_fdf =0;for _fce =_gfc .Height -1;_fce >=0;
_fce ,_bdc =_fce -1,_bdc -_gfc .RowStride {_ea [_dgb ][_fce ]=_fdf ;_adb =0;for _gfa =0;_gfa < _gfc .RowStride ;_gfa ++{_eg =_gfc .Data [_bdc +_gfa ];_adb +=_dcd [_eg ];_afe +=_gdb [_eg ]+_gfa *8*_dcd [_eg ];};_fdf +=_adb ;_be +=_adb *_fce ;};_cge [_dgb ]=_fdf ;
if _fdf > 0{(*_eb )[_dgb ]=_fa .Point {X :float32 (_afe )/float32 (_fdf ),Y :float32 (_be )/float32 (_fdf )};}else {(*_eb )[_dgb ]=_fa .Point {X :float32 (_gfc .Width )/float32 (2),Y :float32 (_gfc .Height )/float32 (2)};};};if _bbbd =_gdg .CentroidPoints .Add (_eb );
_bbbd !=nil {return _b .Wrap (_bbbd ,_cf ,"\u0063\u0065\u006et\u0072\u006f\u0069\u0064\u0020\u0061\u0064\u0064");};var (_fagd ,_cfe ,_dab int ;_bec float64 ;_bac ,_gfe ,_aea ,_gbd float32 ;_bdb ,_aead _fa .Point ;_ga bool ;_aca *similarTemplatesFinder ;
_aed int ;_cgea *_fa .Bitmap ;_gef *_d .Rectangle ;_fgf *_fa .Bitmaps ;);for _aed ,_caf =range _fcb .Values {_cfe =_cge [_aed ];if _bac ,_gfe ,_bbbd =_eb .GetGeometry (_aed );_bbbd !=nil {return _b .Wrap (_bbbd ,_cf ,"\u0070t\u0061\u0020\u002d\u0020\u0069");
};_ga =false ;_ccc :=len (_gdg .UndilatedTemplates .Values );_aca =_ecec (_gdg ,_caf );for _cfc :=_aca .Next ();_cfc > -1;{if _cgea ,_bbbd =_gdg .UndilatedTemplates .GetBitmap (_cfc );_bbbd !=nil {return _b .Wrap (_bbbd ,_cf ,"\u0075\u006e\u0069dl\u0061\u0074\u0065\u0064\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0062\u006d\u0032");
};if _dab ,_bbbd =_ffg .GetInt (_cfc );_bbbd !=nil {_g .Log .Trace ("\u0046\u0047\u0020T\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u005b\u0069\u0063\u006ca\u0073\u0073\u005d\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_bbbd );};
if _aea ,_gbd ,_bbbd =_gdg .CentroidPointsTemplates .GetGeometry (_cfc );_bbbd !=nil {return _b .Wrap (_bbbd ,_cf ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074T\u0065\u006d\u0070\u006c\u0061\u0074e\u0073\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u00782\u002c\u0079\u0032\u0020");
};if _gdg .Settings .WeightFactor > 0.0{if _fagd ,_bbbd =_gdg .TemplateAreas .Get (_cfc );_bbbd !=nil {_g .Log .Trace ("\u0054\u0065\u006dp\u006c\u0061\u0074\u0065A\u0072\u0065\u0061\u0073\u005b\u0069\u0063l\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0061\u0072\u0065\u0061\u0020\u0025\u0076",_bbbd );
};_bec =_gdg .Settings .Thresh +(1.0-_gdg .Settings .Thresh )*_gdg .Settings .WeightFactor *float64 (_dab )/float64 (_fagd );}else {_bec =_gdg .Settings .Thresh ;};_afd ,_cee :=_fa .CorrelationScoreThresholded (_caf ,_cgea ,_cfe ,_dab ,_bdb .X -_aead .X ,_bdb .Y -_aead .Y ,MaxDiffWidth ,MaxDiffHeight ,_dcd ,_ea [_aed ],float32 (_bec ));
if _cee !=nil {return _b .Wrap (_cee ,_cf ,"");};if _bfd {var (_bad ,_fbc float64 ;_fffd ,_cga int ;);_bad ,_cee =_fa .CorrelationScore (_caf ,_cgea ,_cfe ,_dab ,_bac -_aea ,_gfe -_gbd ,MaxDiffWidth ,MaxDiffHeight ,_dcd );if _cee !=nil {return _b .Wrap (_cee ,_cf ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");
};_fbc ,_cee =_fa .CorrelationScoreSimple (_caf ,_cgea ,_cfe ,_dab ,_bac -_aea ,_gfe -_gbd ,MaxDiffWidth ,MaxDiffHeight ,_dcd );if _cee !=nil {return _b .Wrap (_cee ,_cf ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");
};_fffd =int (_f .Sqrt (_bad *float64 (_cfe )*float64 (_dab )));_cga =int (_f .Sqrt (_fbc *float64 (_cfe )*float64 (_dab )));if (_bad >=_bec )!=(_fbc >=_bec ){return _b .Errorf (_cf ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043\u006f\u0072r\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0063\u006f\u0072\u0065\u0020\u006d\u0069\u0073\u006d\u0061\u0074\u0063\u0068\u0020-\u0020\u0025d\u0028\u00250\u002e\u0034\u0066\u002c\u0020\u0025\u0076\u0029\u0020\u0076\u0073\u0020\u0025d(\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0076)\u0020\u0025\u0030\u002e\u0034\u0066",_fffd ,_bad ,_bad >=_bec ,_cga ,_fbc ,_fbc >=_bec ,_bad -_fbc );
};if _bad >=_bec !=_afd {return _b .Errorf (_cf ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043o\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e \u0073\u0063\u006f\u0072\u0065 \u004d\u0069\u0073\u006d\u0061t\u0063\u0068 \u0062\u0065\u0074w\u0065\u0065\u006e\u0020\u0063\u006frr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020/\u0020\u0074\u0068\u0072\u0065s\u0068\u006f\u006c\u0064\u002e\u0020\u0043\u006f\u006dpa\u0072\u0069\u0073\u006f\u006e:\u0020\u0025\u0030\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0064\u0029\u0020\u003e\u003d\u0020\u00250\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u0029\u0020\u0076\u0073\u0020\u0025\u0076",_bad ,_bad *float64 (_cfe )*float64 (_dab ),_fffd ,_bec ,float32 (_bec )*float32 (_cfe )*float32 (_dab ),_afd );
};};if _afd {_ga =true ;if _cee =_gdg .ClassIDs .Add (_cfc );_cee !=nil {return _b .Wrap (_cee ,_cf ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");};if _cee =_gdg .ComponentPageNumbers .Add (_bcd );_cee !=nil {return _b .Wrap (_cee ,_cf ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");
};if _gdg .Settings .KeepClassInstances {if _cac ,_cee =_bg .GetBitmap (_aed );_cee !=nil {return _b .Wrap (_cee ,_cf ,"\u004b\u0065\u0065\u0070Cl\u0061\u0073\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u002d \u0069");};if _fgf ,_cee =_gdg .ClassInstances .GetBitmaps (_cfc );
_cee !=nil {return _b .Wrap (_cee ,_cf ,"K\u0065\u0065\u0070\u0043\u006c\u0061s\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065s\u0020\u002d\u0020i\u0043l\u0061\u0073\u0073");};_fgf .AddBitmap (_cac );if _gef ,_cee =_ec .Get (_aed );_cee !=nil {return _b .Wrap (_cee ,_cf ,"\u004be\u0065p\u0043\u006c\u0061\u0073\u0073I\u006e\u0073t\u0061\u006e\u0063\u0065\u0073");
};_fgf .AddBox (_gef );};break ;};};if !_ga {if _bbbd =_gdg .ClassIDs .Add (_ccc );_bbbd !=nil {return _b .Wrap (_bbbd ,_cf ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _bbbd =_gdg .ComponentPageNumbers .Add (_bcd );_bbbd !=nil {return _b .Wrap (_bbbd ,_cf ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_fgf =&_fa .Bitmaps {};if _cac ,_bbbd =_bg .GetBitmap (_aed );_bbbd !=nil {return _b .Wrap (_bbbd ,_cf ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_fgf .AddBitmap (_cac );_egd ,_cgc :=_cac .Width ,_cac .Height ;_bbc :=uint64 (_cgc )*uint64 (_egd );_gdg .TemplatesSize .Add (_bbc ,_ccc );
if _gef ,_bbbd =_ec .Get (_aed );_bbbd !=nil {return _b .Wrap (_bbbd ,_cf ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_fgf .AddBox (_gef );_gdg .ClassInstances .AddBitmaps (_fgf );_gdg .CentroidPointsTemplates .AddPoint (_bac ,_gfe );_gdg .FgTemplates .AddInt (_cfe );
_gdg .UndilatedTemplates .AddBitmap (_cac );_fagd =(_caf .Width -2*JbAddedPixels )*(_caf .Height -2*JbAddedPixels );if _bbbd =_gdg .TemplateAreas .Add (_fagd );_bbbd !=nil {return _b .Wrap (_bbbd ,_cf ,"\u0021\u0066\u006f\u0075\u006e\u0064");};};};_gdg .NumberOfClasses =len (_gdg .UndilatedTemplates .Values );
return nil ;};var TwoByTwoWalk =[]int {0,0,0,1,-1,0,0,-1,1,0,-1,1,1,1,-1,-1,1,-1,0,-2,2,0,0,2,-2,0,-1,-2,1,-2,2,-1,2,1,1,2,-1,2,-2,1,-2,-1,-2,-2,2,-2,2,2,-2,2};const JbAddedPixels =6;var _bfd bool ;func (_ed *Classer )addPageComponents (_dd *_fa .Bitmap ,_ce *_fa .Boxes ,_bcf *_fa .Bitmaps ,_dc int ,_db Method )error {const _facb ="\u0043l\u0061\u0073\u0073\u0065r\u002e\u0041\u0064\u0064\u0050a\u0067e\u0043o\u006d\u0070\u006f\u006e\u0065\u006e\u0074s";
if _dd ==nil {return _b .Error (_facb ,"\u006e\u0069\u006c\u0020\u0069\u006e\u0070\u0075\u0074 \u0070\u0061\u0067\u0065");};if _ce ==nil ||_bcf ==nil ||len (*_ce )==0{_g .Log .Trace ("\u0041\u0064\u0064P\u0061\u0067\u0065\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0073\u002e\u0020\u004e\u006f\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065n\u0074\u0073\u0020\u0066\u006f\u0075\u006e\u0064",_dd );
return nil ;};var _da error ;switch _db {case RankHaus :_da =_ed .classifyRankHaus (_ce ,_bcf ,_dc );case Correlation :_da =_ed .classifyCorrelation (_ce ,_bcf ,_dc );default:_g .Log .Debug ("\u0055\u006ek\u006e\u006f\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064\u003a\u0020'%\u0076\u0027",_db );
return _b .Error (_facb ,"\u0075\u006e\u006bno\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064");};if _da !=nil {return _b .Wrap (_da ,_facb ,"");};if _da =_ed .getULCorners (_dd ,_ce );_da !=nil {return _b .Wrap (_da ,_facb ,"");
};_bbb :=len (*_ce );_ed .BaseIndex +=_bbb ;if _da =_ed .ComponentsNumber .Add (_bbb );_da !=nil {return _b .Wrap (_da ,_facb ,"");};return nil ;};func (_bb *Classer )AddPage (inputPage *_fa .Bitmap ,pageNumber int ,method Method )(_e error ){const _c ="\u0043l\u0061s\u0073\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";
_bb .Widths [pageNumber ]=inputPage .Width ;_bb .Heights [pageNumber ]=inputPage .Height ;if _e =_bb .verifyMethod (method );_e !=nil {return _b .Wrap (_e ,_c ,"");};_ag ,_bf ,_e :=inputPage .GetComponents (_bb .Settings .Components ,_bb .Settings .MaxCompWidth ,_bb .Settings .MaxCompHeight );
if _e !=nil {return _b .Wrap (_e ,_c ,"");};_g .Log .Debug ("\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_ag );if _e =_bb .addPageComponents (inputPage ,_bf ,_ag ,pageNumber ,method );_e !=nil {return _b .Wrap (_e ,_c ,"");
};return nil ;};type Settings struct{MaxCompWidth int ;MaxCompHeight int ;SizeHaus int ;RankHaus float64 ;Thresh float64 ;WeightFactor float64 ;KeepClassInstances bool ;Components _fa .Component ;Method Method ;};const (RankHaus Method =iota ;Correlation ;
);func Init (settings Settings )(*Classer ,error ){const _ac ="\u0063\u006c\u0061s\u0073\u0065\u0072\u002e\u0049\u006e\u0069\u0074";_fac :=&Classer {Settings :settings ,Widths :map[int ]int {},Heights :map[int ]int {},TemplatesSize :_ad .IntsMap {},TemplateAreas :&_ad .IntSlice {},ComponentPageNumbers :&_ad .IntSlice {},ClassIDs :&_ad .IntSlice {},ComponentsNumber :&_ad .IntSlice {},CentroidPoints :&_fa .Points {},CentroidPointsTemplates :&_fa .Points {},UndilatedTemplates :&_fa .Bitmaps {},DilatedTemplates :&_fa .Bitmaps {},ClassInstances :&_fa .BitmapsArray {},FgTemplates :&_ad .NumSlice {}};
if _fc :=_fac .Settings .Validate ();_fc !=nil {return nil ,_b .Wrap (_fc ,_ac ,"");};return _fac ,nil ;};const (MaxDiffWidth =2;MaxDiffHeight =2;);func (_bdba *Classer )classifyRankHouseOne (_dfa *_fa .Boxes ,_afg ,_egdd ,_efe *_fa .Bitmaps ,_fgd *_fa .Points ,_gaa int )(_fbf error ){const _dde ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";
var (_bbbf ,_ece ,_dgd ,_caa float32 ;_agf int ;_beg ,_afcf ,_dgdb ,_badf ,_eebb *_fa .Bitmap ;_fcee ,_dbee bool ;);for _edad :=0;_edad < len (_afg .Values );_edad ++{_afcf =_egdd .Values [_edad ];_dgdb =_efe .Values [_edad ];_bbbf ,_ece ,_fbf =_fgd .GetGeometry (_edad );
if _fbf !=nil {return _b .Wrapf (_fbf ,_dde ,"\u0066\u0069\u0072\u0073\u0074\u0020\u0067\u0065\u006fm\u0065\u0074\u0072\u0079");};_ede :=len (_bdba .UndilatedTemplates .Values );_fcee =false ;_gfcg :=_ecec (_bdba ,_afcf );for _agf =_gfcg .Next ();_agf > -1;
{_badf ,_fbf =_bdba .UndilatedTemplates .GetBitmap (_agf );if _fbf !=nil {return _b .Wrap (_fbf ,_dde ,"\u0062\u006d\u0033");};_eebb ,_fbf =_bdba .DilatedTemplates .GetBitmap (_agf );if _fbf !=nil {return _b .Wrap (_fbf ,_dde ,"\u0062\u006d\u0034");};_dgd ,_caa ,_fbf =_bdba .CentroidPointsTemplates .GetGeometry (_agf );
if _fbf !=nil {return _b .Wrap (_fbf ,_dde ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0073");};_dbee ,_fbf =_fa .HausTest (_afcf ,_dgdb ,_badf ,_eebb ,_bbbf -_dgd ,_ece -_caa ,MaxDiffWidth ,MaxDiffHeight );
if _fbf !=nil {return _b .Wrap (_fbf ,_dde ,"");};if _dbee {_fcee =true ;if _fbf =_bdba .ClassIDs .Add (_agf );_fbf !=nil {return _b .Wrap (_fbf ,_dde ,"");};if _fbf =_bdba .ComponentPageNumbers .Add (_gaa );_fbf !=nil {return _b .Wrap (_fbf ,_dde ,"");
};if _bdba .Settings .KeepClassInstances {_bca ,_efb :=_bdba .ClassInstances .GetBitmaps (_agf );if _efb !=nil {return _b .Wrap (_efb ,_dde ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_beg ,_efb =_afg .GetBitmap (_edad );if _efb !=nil {return _b .Wrap (_efb ,_dde ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");
};_bca .AddBitmap (_beg );_fae ,_efb :=_dfa .Get (_edad );if _efb !=nil {return _b .Wrap (_efb ,_dde ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_bca .AddBox (_fae );};break ;};};if !_fcee {if _fbf =_bdba .ClassIDs .Add (_ede );_fbf !=nil {return _b .Wrap (_fbf ,_dde ,"");
};if _fbf =_bdba .ComponentPageNumbers .Add (_gaa );_fbf !=nil {return _b .Wrap (_fbf ,_dde ,"");};_cfef :=&_fa .Bitmaps {};_beg ,_fbf =_afg .GetBitmap (_edad );if _fbf !=nil {return _b .Wrap (_fbf ,_dde ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_cfef .Values =append (_cfef .Values ,_beg );
_gbdc ,_ecf :=_beg .Width ,_beg .Height ;_bdba .TemplatesSize .Add (uint64 (_ecf )*uint64 (_gbdc ),_ede );_gdc ,_eae :=_dfa .Get (_edad );if _eae !=nil {return _b .Wrap (_eae ,_dde ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_cfef .AddBox (_gdc );_bdba .ClassInstances .AddBitmaps (_cfef );
_bdba .CentroidPointsTemplates .AddPoint (_bbbf ,_ece );_bdba .UndilatedTemplates .AddBitmap (_afcf );_bdba .DilatedTemplates .AddBitmap (_dgdb );};};return nil ;};func (_gaf *similarTemplatesFinder )Next ()int {var (_aga ,_bbba ,_ecd ,_gff int ;_agc bool ;
_cfefd *_fa .Bitmap ;_fgcd error ;);for {if _gaf .Index >=25{return -1;};_bbba =_gaf .Width +TwoByTwoWalk [2*_gaf .Index ];_aga =_gaf .Height +TwoByTwoWalk [2*_gaf .Index +1];if _aga < 1||_bbba < 1{_gaf .Index ++;continue ;};if len (_gaf .CurrentNumbers )==0{_gaf .CurrentNumbers ,_agc =_gaf .Classer .TemplatesSize .GetSlice (uint64 (_bbba )*uint64 (_aga ));
if !_agc {_gaf .Index ++;continue ;};_gaf .N =0;};_ecd =len (_gaf .CurrentNumbers );for ;_gaf .N < _ecd ;_gaf .N ++{_gff =_gaf .CurrentNumbers [_gaf .N ];_cfefd ,_fgcd =_gaf .Classer .DilatedTemplates .GetBitmap (_gff );if _fgcd !=nil {_g .Log .Debug ("\u0046\u0069\u006e\u0064\u004e\u0065\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0074\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u006e\u006f\u0074 \u0066\u006fu\u006e\u0064\u003a\u0020");
return 0;};if _cfefd .Width -2*JbAddedPixels ==_bbba &&_cfefd .Height -2*JbAddedPixels ==_aga {return _gff ;};};_gaf .Index ++;_gaf .CurrentNumbers =nil ;};};const (MaxConnCompWidth =350;MaxCharCompWidth =350;MaxWordCompWidth =1000;MaxCompHeight =120;);
func (_bfb *Classer )classifyRankHouseNonOne (_gbb *_fa .Boxes ,_adbd ,_deb ,_aeae *_fa .Bitmaps ,_cdg *_fa .Points ,_ab *_ad .NumSlice ,_cff int )(_bdd error ){const _efd ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";
var (_bdf ,_ffab ,_add ,_cccd float32 ;_cebb ,_cbg ,_fbb int ;_bde ,_bgf ,_efg ,_gda ,_dggb *_fa .Bitmap ;_gdf ,_caad bool ;);_gga :=_fa .MakePixelSumTab8 ();for _agfg :=0;_agfg < len (_adbd .Values );_agfg ++{if _bgf ,_bdd =_deb .GetBitmap (_agfg );_bdd !=nil {return _b .Wrap (_bdd ,_efd ,"b\u006d\u0073\u0031\u002e\u0047\u0065\u0074\u0028\u0069\u0029");
};if _cebb ,_bdd =_ab .GetInt (_agfg );_bdd !=nil {_g .Log .Trace ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0046\u0047T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073 \u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_agfg ,_bdd );
};if _efg ,_bdd =_aeae .GetBitmap (_agfg );_bdd !=nil {return _b .Wrap (_bdd ,_efd ,"b\u006d\u0073\u0032\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};if _bdf ,_ffab ,_bdd =_cdg .GetGeometry (_agfg );_bdd !=nil {return _b .Wrapf (_bdd ,_efd ,"\u0070t\u0061[\u0069\u005d\u002e\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079");
};_ege :=len (_bfb .UndilatedTemplates .Values );_gdf =false ;_cda :=_ecec (_bfb ,_bgf );for _fbb =_cda .Next ();_fbb > -1;{if _gda ,_bdd =_bfb .UndilatedTemplates .GetBitmap (_fbb );_bdd !=nil {return _b .Wrap (_bdd ,_efd ,"\u0070\u0069\u0078\u0061\u0074\u002e\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");
};if _cbg ,_bdd =_bfb .FgTemplates .GetInt (_fbb );_bdd !=nil {_g .Log .Trace ("\u0047\u0065\u0074\u0074\u0069\u006eg\u0020\u0046\u0047\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u005b\u0025d\u005d\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_fbb ,_bdd );
};if _dggb ,_bdd =_bfb .DilatedTemplates .GetBitmap (_fbb );_bdd !=nil {return _b .Wrap (_bdd ,_efd ,"\u0070\u0069\u0078\u0061\u0074\u0064\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");};if _add ,_cccd ,_bdd =_bfb .CentroidPointsTemplates .GetGeometry (_fbb );
_bdd !=nil {return _b .Wrap (_bdd ,_efd ,"\u0043\u0065\u006et\u0072\u006f\u0069\u0064P\u006f\u0069\u006e\u0074\u0073\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u005b\u0069\u0043\u006c\u0061\u0073\u0073\u005d");};_caad ,_bdd =_fa .RankHausTest (_bgf ,_efg ,_gda ,_dggb ,_bdf -_add ,_ffab -_cccd ,MaxDiffWidth ,MaxDiffHeight ,_cebb ,_cbg ,float32 (_bfb .Settings .RankHaus ),_gga );
if _bdd !=nil {return _b .Wrap (_bdd ,_efd ,"");};if _caad {_gdf =true ;if _bdd =_bfb .ClassIDs .Add (_fbb );_bdd !=nil {return _b .Wrap (_bdd ,_efd ,"");};if _bdd =_bfb .ComponentPageNumbers .Add (_cff );_bdd !=nil {return _b .Wrap (_bdd ,_efd ,"");};
if _bfb .Settings .KeepClassInstances {_efef ,_gc :=_bfb .ClassInstances .GetBitmaps (_fbb );if _gc !=nil {return _b .Wrap (_gc ,_efd ,"\u0063\u002e\u0050\u0069\u0078\u0061\u0061\u002e\u0047\u0065\u0074B\u0069\u0074\u006d\u0061\u0070\u0073\u0028\u0069\u0043\u006ca\u0073\u0073\u0029");
};if _bde ,_gc =_adbd .GetBitmap (_agfg );_gc !=nil {return _b .Wrap (_gc ,_efd ,"\u0070i\u0078\u0061\u005b\u0069\u005d");};_efef .Values =append (_efef .Values ,_bde );_agge ,_gc :=_gbb .Get (_agfg );if _gc !=nil {return _b .Wrap (_gc ,_efd ,"b\u006f\u0078\u0061\u002e\u0047\u0065\u0074\u0028\u0069\u0029");
};_efef .Boxes =append (_efef .Boxes ,_agge );};break ;};};if !_gdf {if _bdd =_bfb .ClassIDs .Add (_ege );_bdd !=nil {return _b .Wrap (_bdd ,_efd ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _bdd =_bfb .ComponentPageNumbers .Add (_cff );_bdd !=nil {return _b .Wrap (_bdd ,_efd ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_fef :=&_fa .Bitmaps {};_bde =_adbd .Values [_agfg ];_fef .AddBitmap (_bde );_fdd ,_acab :=_bde .Width ,_bde .Height ;_bfb .TemplatesSize .Add (uint64 (_fdd )*uint64 (_acab ),_ege );_ggg ,_cfee :=_gbb .Get (_agfg );if _cfee !=nil {return _b .Wrap (_cfee ,_efd ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_fef .AddBox (_ggg );_bfb .ClassInstances .AddBitmaps (_fef );_bfb .CentroidPointsTemplates .AddPoint (_bdf ,_ffab );_bfb .UndilatedTemplates .AddBitmap (_bgf );_bfb .DilatedTemplates .AddBitmap (_efg );_bfb .FgTemplates .AddInt (_cebb );};};_bfb .NumberOfClasses =len (_bfb .UndilatedTemplates .Values );
return nil ;};func (_bcg *Classer )getULCorners (_dg *_fa .Bitmap ,_gd *_fa .Boxes )error {const _fb ="\u0067\u0065\u0074U\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";if _dg ==nil {return _b .Error (_fb ,"\u006e\u0069l\u0020\u0069\u006da\u0067\u0065\u0020\u0062\u0069\u0074\u006d\u0061\u0070");
};if _gd ==nil {return _b .Error (_fb ,"\u006e\u0069\u006c\u0020\u0062\u006f\u0075\u006e\u0064\u0073");};if _bcg .PtaUL ==nil {_bcg .PtaUL =&_fa .Points {};};_fe :=len (*_gd );var (_fd ,_dee ,_eda ,_ee int ;_gg ,_fdc ,_acg ,_def float32 ;_gf error ;_dda *_d .Rectangle ;
_fg *_fa .Bitmap ;_dbe _d .Point ;);for _ff :=0;_ff < _fe ;_ff ++{_fd =_bcg .BaseIndex +_ff ;if _gg ,_fdc ,_gf =_bcg .CentroidPoints .GetGeometry (_fd );_gf !=nil {return _b .Wrap (_gf ,_fb ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050o\u0069\u006e\u0074\u0073");
};if _dee ,_gf =_bcg .ClassIDs .Get (_fd );_gf !=nil {return _b .Wrap (_gf ,_fb ,"\u0043\u006c\u0061s\u0073\u0049\u0044\u0073\u002e\u0047\u0065\u0074");};if _acg ,_def ,_gf =_bcg .CentroidPointsTemplates .GetGeometry (_dee );_gf !=nil {return _b .Wrap (_gf ,_fb ,"\u0043\u0065\u006etr\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074\u0073\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");
};_af :=_acg -_gg ;_dad :=_def -_fdc ;if _af >=0{_eda =int (_af +0.5);}else {_eda =int (_af -0.5);};if _dad >=0{_ee =int (_dad +0.5);}else {_ee =int (_dad -0.5);};if _dda ,_gf =_gd .Get (_ff );_gf !=nil {return _b .Wrap (_gf ,_fb ,"");};_fff ,_afc :=_dda .Min .X ,_dda .Min .Y ;
_fg ,_gf =_bcg .UndilatedTemplates .GetBitmap (_dee );if _gf !=nil {return _b .Wrap (_gf ,_fb ,"\u0055\u006e\u0064\u0069\u006c\u0061\u0074\u0065\u0064\u0054e\u006d\u0070\u006c\u0061\u0074\u0065\u0073.\u0047\u0065\u0074\u0028\u0069\u0043\u006c\u0061\u0073\u0073\u0029");
};_dbe ,_gf =_ge (_dg ,_fff ,_afc ,_eda ,_ee ,_fg );if _gf !=nil {return _b .Wrap (_gf ,_fb ,"");};_bcg .PtaUL .AddPoint (float32 (_fff -_eda +_dbe .X ),float32 (_afc -_ee +_dbe .Y ));};return nil ;};