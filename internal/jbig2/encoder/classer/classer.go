//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package classer ;import (_da "github.com/unidoc/unipdf/v3/common";_ce "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_ca "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";_b "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_d "image";_a "math";);func _cge (_bdcc *Classer ,_ededa *_ca .Bitmap )*similarTemplatesFinder {return &similarTemplatesFinder {Width :_ededa .Width ,Height :_ededa .Height ,Classer :_bdcc };};func (_gc *Classer )addPageComponents (_aa *_ca .Bitmap ,_cg *_ca .Boxes ,_dde *_ca .Bitmaps ,_dbf int ,_bff Method )error {const _gf ="\u0043l\u0061\u0073\u0073\u0065r\u002e\u0041\u0064\u0064\u0050a\u0067e\u0043o\u006d\u0070\u006f\u006e\u0065\u006e\u0074s";if _aa ==nil {return _b .Error (_gf ,"\u006e\u0069\u006c\u0020\u0069\u006e\u0070\u0075\u0074 \u0070\u0061\u0067\u0065");};if _cg ==nil ||_dde ==nil ||len (*_cg )==0{_da .Log .Trace ("\u0041\u0064\u0064P\u0061\u0067\u0065\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0073\u002e\u0020\u004e\u006f\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065n\u0074\u0073\u0020\u0066\u006f\u0075\u006e\u0064",_aa );return nil ;};var _gbf error ;switch _bff {case RankHaus :_gbf =_gc .classifyRankHaus (_cg ,_dde ,_dbf );case Correlation :_gbf =_gc .classifyCorrelation (_cg ,_dde ,_dbf );default:_da .Log .Debug ("\u0055\u006ek\u006e\u006f\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064\u003a\u0020'%\u0076\u0027",_bff );return _b .Error (_gf ,"\u0075\u006e\u006bno\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064");};if _gbf !=nil {return _b .Wrap (_gbf ,_gf ,"");};if _gbf =_gc .getULCorners (_aa ,_cg );_gbf !=nil {return _b .Wrap (_gbf ,_gf ,"");};_ddeg :=len (*_cg );_gc .BaseIndex +=_ddeg ;if _gbf =_gc .ComponentsNumber .Add (_ddeg );_gbf !=nil {return _b .Wrap (_gbf ,_gf ,"");};return nil ;};type Method int ;func DefaultSettings ()Settings {_ffe :=&Settings {};_ffe .SetDefault ();return *_ffe };var TwoByTwoWalk =[]int {0,0,0,1,-1,0,0,-1,1,0,-1,1,1,1,-1,-1,1,-1,0,-2,2,0,0,2,-2,0,-1,-2,1,-2,2,-1,2,1,1,2,-1,2,-2,1,-2,-1,-2,-2,2,-2,2,2,-2,2};func (_fee *Classer )classifyRankHouseOne (_ddec *_ca .Boxes ,_age ,_gfd ,_abb *_ca .Bitmaps ,_bab *_ca .Points ,_bdf int )(_ggc error ){const _fbe ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";var (_abd ,_cbc ,_bdfb ,_aagd float32 ;_cc int ;_bgc ,_acg ,_cac ,_dff ,_def *_ca .Bitmap ;_gede ,_cce bool ;);for _bcb :=0;_bcb < len (_age .Values );_bcb ++{_acg =_gfd .Values [_bcb ];_cac =_abb .Values [_bcb ];_abd ,_cbc ,_ggc =_bab .GetGeometry (_bcb );if _ggc !=nil {return _b .Wrapf (_ggc ,_fbe ,"\u0066\u0069\u0072\u0073\u0074\u0020\u0067\u0065\u006fm\u0065\u0074\u0072\u0079");};_bdc :=len (_fee .UndilatedTemplates .Values );_gede =false ;_caa :=_cge (_fee ,_acg );for _cc =_caa .Next ();_cc > -1;{_dff ,_ggc =_fee .UndilatedTemplates .GetBitmap (_cc );if _ggc !=nil {return _b .Wrap (_ggc ,_fbe ,"\u0062\u006d\u0033");};_def ,_ggc =_fee .DilatedTemplates .GetBitmap (_cc );if _ggc !=nil {return _b .Wrap (_ggc ,_fbe ,"\u0062\u006d\u0034");};_bdfb ,_aagd ,_ggc =_fee .CentroidPointsTemplates .GetGeometry (_cc );if _ggc !=nil {return _b .Wrap (_ggc ,_fbe ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0073");};_cce ,_ggc =_ca .HausTest (_acg ,_cac ,_dff ,_def ,_abd -_bdfb ,_cbc -_aagd ,MaxDiffWidth ,MaxDiffHeight );if _ggc !=nil {return _b .Wrap (_ggc ,_fbe ,"");};if _cce {_gede =true ;if _ggc =_fee .ClassIDs .Add (_cc );_ggc !=nil {return _b .Wrap (_ggc ,_fbe ,"");};if _ggc =_fee .ComponentPageNumbers .Add (_bdf );_ggc !=nil {return _b .Wrap (_ggc ,_fbe ,"");};if _fee .Settings .KeepClassInstances {_ada ,_eaa :=_fee .ClassInstances .GetBitmaps (_cc );if _eaa !=nil {return _b .Wrap (_eaa ,_fbe ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_bgc ,_eaa =_age .GetBitmap (_bcb );if _eaa !=nil {return _b .Wrap (_eaa ,_fbe ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_ada .AddBitmap (_bgc );_dgd ,_eaa :=_ddec .Get (_bcb );if _eaa !=nil {return _b .Wrap (_eaa ,_fbe ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_ada .AddBox (_dgd );};break ;};};if !_gede {if _ggc =_fee .ClassIDs .Add (_bdc );_ggc !=nil {return _b .Wrap (_ggc ,_fbe ,"");};if _ggc =_fee .ComponentPageNumbers .Add (_bdf );_ggc !=nil {return _b .Wrap (_ggc ,_fbe ,"");};_cdag :=&_ca .Bitmaps {};_bgc ,_ggc =_age .GetBitmap (_bcb );if _ggc !=nil {return _b .Wrap (_ggc ,_fbe ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_cdag .Values =append (_cdag .Values ,_bgc );_bdg ,_cbee :=_bgc .Width ,_bgc .Height ;_fee .TemplatesSize .Add (uint64 (_cbee )*uint64 (_bdg ),_bdc );_afg ,_bba :=_ddec .Get (_bcb );if _bba !=nil {return _b .Wrap (_bba ,_fbe ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_cdag .AddBox (_afg );_fee .ClassInstances .AddBitmaps (_cdag );_fee .CentroidPointsTemplates .AddPoint (_abd ,_cbc );_fee .UndilatedTemplates .AddBitmap (_acg );_fee .DilatedTemplates .AddBitmap (_cac );};};return nil ;};func (_f *Classer )ComputeLLCorners ()(_fb error ){const _bb ="\u0043l\u0061\u0073\u0073\u0065\u0072\u002e\u0043\u006f\u006d\u0070\u0075t\u0065\u004c\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";if _f .PtaUL ==nil {return _b .Error (_bb ,"\u0055\u004c\u0020\u0043or\u006e\u0065\u0072\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006ee\u0064");};_daa :=len (*_f .PtaUL );_f .PtaLL =&_ca .Points {};var (_fa ,_dd float32 ;_cb ,_db int ;_acf *_ca .Bitmap ;);for _gb :=0;_gb < _daa ;_gb ++{_fa ,_dd ,_fb =_f .PtaUL .GetGeometry (_gb );if _fb !=nil {_da .Log .Debug ("\u0047e\u0074\u0074\u0069\u006e\u0067\u0020\u0050\u0074\u0061\u0055\u004c \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_fb );return _b .Wrap (_fb ,_bb ,"\u0050\u0074\u0061\u0055\u004c\u0020\u0047\u0065\u006fm\u0065\u0074\u0072\u0079");};_cb ,_fb =_f .ClassIDs .Get (_gb );if _fb !=nil {_da .Log .Debug ("\u0047\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0043\u006c\u0061s\u0073\u0049\u0044\u0020\u0066\u0061\u0069\u006c\u0065\u0064:\u0020\u0025\u0076",_fb );return _b .Wrap (_fb ,_bb ,"\u0043l\u0061\u0073\u0073\u0049\u0044");};_acf ,_fb =_f .UndilatedTemplates .GetBitmap (_cb );if _fb !=nil {_da .Log .Debug ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0055\u006ed\u0069\u006c\u0061\u0074\u0065\u0064\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_fb );return _b .Wrap (_fb ,_bb ,"\u0055\u006e\u0064\u0069la\u0074\u0065\u0064\u0020\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");};_db =_acf .Height ;_f .PtaLL .AddPoint (_fa ,_dd +float32 (_db ));};return nil ;};const (RankHaus Method =iota ;Correlation ;);func (_gd *Classer )AddPage (inputPage *_ca .Bitmap ,pageNumber int ,method Method )(_e error ){const _ac ="\u0043l\u0061s\u0073\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_gd .Widths [pageNumber ]=inputPage .Width ;_gd .Heights [pageNumber ]=inputPage .Height ;if _e =_gd .verifyMethod (method );_e !=nil {return _b .Wrap (_e ,_ac ,"");};_bgf ,_cd ,_e :=inputPage .GetComponents (_gd .Settings .Components ,_gd .Settings .MaxCompWidth ,_gd .Settings .MaxCompHeight );if _e !=nil {return _b .Wrap (_e ,_ac ,"");};_da .Log .Debug ("\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_bgf );if _e =_gd .addPageComponents (inputPage ,_cd ,_bgf ,pageNumber ,method );_e !=nil {return _b .Wrap (_e ,_ac ,"");};return nil ;};func Init (settings Settings )(*Classer ,error ){const _bg ="\u0063\u006c\u0061s\u0073\u0065\u0072\u002e\u0049\u006e\u0069\u0074";_g :=&Classer {Settings :settings ,Widths :map[int ]int {},Heights :map[int ]int {},TemplatesSize :_ce .IntsMap {},TemplateAreas :&_ce .IntSlice {},ComponentPageNumbers :&_ce .IntSlice {},ClassIDs :&_ce .IntSlice {},ComponentsNumber :&_ce .IntSlice {},CentroidPoints :&_ca .Points {},CentroidPointsTemplates :&_ca .Points {},UndilatedTemplates :&_ca .Bitmaps {},DilatedTemplates :&_ca .Bitmaps {},ClassInstances :&_ca .BitmapsArray {},FgTemplates :&_ce .NumSlice {}};if _bf :=_g .Settings .Validate ();_bf !=nil {return nil ,_b .Wrap (_bf ,_bg ,"");};return _g ,nil ;};type similarTemplatesFinder struct{Classer *Classer ;Width int ;Height int ;Index int ;CurrentNumbers []int ;N int ;};const (MaxDiffWidth =2;MaxDiffHeight =2;);func (_bgff *Classer )getULCorners (_ef *_ca .Bitmap ,_fe *_ca .Boxes )error {const _fac ="\u0067\u0065\u0074U\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";if _ef ==nil {return _b .Error (_fac ,"\u006e\u0069l\u0020\u0069\u006da\u0067\u0065\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if _fe ==nil {return _b .Error (_fac ,"\u006e\u0069\u006c\u0020\u0062\u006f\u0075\u006e\u0064\u0073");};if _bgff .PtaUL ==nil {_bgff .PtaUL =&_ca .Points {};};_cbe :=len (*_fe );var (_ba ,_ceg ,_ae ,_dg int ;_cgf ,_aec ,_gde ,_ea float32 ;_bfb error ;_eb *_d .Rectangle ;_ga *_ca .Bitmap ;_baf _d .Point ;);for _bc :=0;_bc < _cbe ;_bc ++{_ba =_bgff .BaseIndex +_bc ;if _cgf ,_aec ,_bfb =_bgff .CentroidPoints .GetGeometry (_ba );_bfb !=nil {return _b .Wrap (_bfb ,_fac ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050o\u0069\u006e\u0074\u0073");};if _ceg ,_bfb =_bgff .ClassIDs .Get (_ba );_bfb !=nil {return _b .Wrap (_bfb ,_fac ,"\u0043\u006c\u0061s\u0073\u0049\u0044\u0073\u002e\u0047\u0065\u0074");};if _gde ,_ea ,_bfb =_bgff .CentroidPointsTemplates .GetGeometry (_ceg );_bfb !=nil {return _b .Wrap (_bfb ,_fac ,"\u0043\u0065\u006etr\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074\u0073\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");};_ag :=_gde -_cgf ;_eae :=_ea -_aec ;if _ag >=0{_ae =int (_ag +0.5);}else {_ae =int (_ag -0.5);};if _eae >=0{_dg =int (_eae +0.5);}else {_dg =int (_eae -0.5);};if _eb ,_bfb =_fe .Get (_bc );_bfb !=nil {return _b .Wrap (_bfb ,_fac ,"");};_fef ,_ebb :=_eb .Min .X ,_eb .Min .Y ;_ga ,_bfb =_bgff .UndilatedTemplates .GetBitmap (_ceg );if _bfb !=nil {return _b .Wrap (_bfb ,_fac ,"\u0055\u006e\u0064\u0069\u006c\u0061\u0074\u0065\u0064\u0054e\u006d\u0070\u006c\u0061\u0074\u0065\u0073.\u0047\u0065\u0074\u0028\u0069\u0043\u006c\u0061\u0073\u0073\u0029");};_baf ,_bfb =_efc (_ef ,_fef ,_ebb ,_ae ,_dg ,_ga );if _bfb !=nil {return _b .Wrap (_bfb ,_fac ,"");};_bgff .PtaUL .AddPoint (float32 (_fef -_ae +_baf .X ),float32 (_ebb -_dg +_baf .Y ));};return nil ;};func (_feg *Classer )classifyRankHaus (_aece *_ca .Boxes ,_fff *_ca .Bitmaps ,_ddg int )error {const _cegb ="\u0063\u006ca\u0073\u0073\u0069f\u0079\u0052\u0061\u006e\u006b\u0048\u0061\u0075\u0073";if _aece ==nil {return _b .Error (_cegb ,"\u0062\u006fx\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if _fff ==nil {return _b .Error (_cegb ,"\u0070\u0069x\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};_cdce :=len (_fff .Values );if _cdce ==0{return _b .Error (_cegb ,"e\u006dp\u0074\u0079\u0020\u006e\u0065\u0077\u0020\u0063o\u006d\u0070\u006f\u006een\u0074\u0073");};_gbe :=_fff .CountPixels ();_fegf :=_feg .Settings .SizeHaus ;_efca :=_ca .SelCreateBrick (_fegf ,_fegf ,_fegf /2,_fegf /2,_ca .SelHit );_bbe :=&_ca .Bitmaps {Values :make ([]*_ca .Bitmap ,_cdce )};_beab :=&_ca .Bitmaps {Values :make ([]*_ca .Bitmap ,_cdce )};var (_eec ,_ged ,_dfb *_ca .Bitmap ;_fda error ;);for _aaa :=0;_aaa < _cdce ;_aaa ++{_eec ,_fda =_fff .GetBitmap (_aaa );if _fda !=nil {return _b .Wrap (_fda ,_cegb ,"");};_ged ,_fda =_eec .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);if _fda !=nil {return _b .Wrap (_fda ,_cegb ,"");};_dfb ,_fda =_ca .Dilate (nil ,_ged ,_efca );if _fda !=nil {return _b .Wrap (_fda ,_cegb ,"");};_bbe .Values [_cdce ]=_ged ;_beab .Values [_cdce ]=_dfb ;};_egeb ,_fda :=_ca .Centroids (_bbe .Values );if _fda !=nil {return _b .Wrap (_fda ,_cegb ,"");};if _fda =_egeb .Add (_feg .CentroidPoints );_fda !=nil {_da .Log .Trace ("\u004e\u006f\u0020\u0063en\u0074\u0072\u006f\u0069\u0064\u0073\u0020\u0074\u006f\u0020\u0061\u0064\u0064");};if _feg .Settings .RankHaus ==1.0{_fda =_feg .classifyRankHouseOne (_aece ,_fff ,_bbe ,_beab ,_egeb ,_ddg );}else {_fda =_feg .classifyRankHouseNonOne (_aece ,_fff ,_bbe ,_beab ,_egeb ,_gbe ,_ddg );};if _fda !=nil {return _b .Wrap (_fda ,_cegb ,"");};return nil ;};type Settings struct{MaxCompWidth int ;MaxCompHeight int ;SizeHaus int ;RankHaus float64 ;Thresh float64 ;WeightFactor float64 ;KeepClassInstances bool ;Components _ca .Component ;Method Method ;};var _fca bool ;func (_ggb *Classer )classifyRankHouseNonOne (_daf *_ca .Boxes ,_dbc ,_ccg ,_gfa *_ca .Bitmaps ,_cbeb *_ca .Points ,_cdgb *_ce .NumSlice ,_edg int )(_fge error ){const _dbb ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";var (_bac ,_ffba ,_dee ,_gag float32 ;_dcg ,_adf ,_efd int ;_abba ,_gce ,_dec ,_bdde ,_gcd *_ca .Bitmap ;_eed ,_faa bool ;);_gfe :=_ca .MakePixelSumTab8 ();for _gcb :=0;_gcb < len (_dbc .Values );_gcb ++{if _gce ,_fge =_ccg .GetBitmap (_gcb );_fge !=nil {return _b .Wrap (_fge ,_dbb ,"b\u006d\u0073\u0031\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};if _dcg ,_fge =_cdgb .GetInt (_gcb );_fge !=nil {_da .Log .Trace ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0046\u0047T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073 \u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_gcb ,_fge );};if _dec ,_fge =_gfa .GetBitmap (_gcb );_fge !=nil {return _b .Wrap (_fge ,_dbb ,"b\u006d\u0073\u0032\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};if _bac ,_ffba ,_fge =_cbeb .GetGeometry (_gcb );_fge !=nil {return _b .Wrapf (_fge ,_dbb ,"\u0070t\u0061[\u0069\u005d\u002e\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079");};_bad :=len (_ggb .UndilatedTemplates .Values );_eed =false ;_dcgb :=_cge (_ggb ,_gce );for _efd =_dcgb .Next ();_efd > -1;{if _bdde ,_fge =_ggb .UndilatedTemplates .GetBitmap (_efd );_fge !=nil {return _b .Wrap (_fge ,_dbb ,"\u0070\u0069\u0078\u0061\u0074\u002e\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");};if _adf ,_fge =_ggb .FgTemplates .GetInt (_efd );_fge !=nil {_da .Log .Trace ("\u0047\u0065\u0074\u0074\u0069\u006eg\u0020\u0046\u0047\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u005b\u0025d\u005d\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_efd ,_fge );};if _gcd ,_fge =_ggb .DilatedTemplates .GetBitmap (_efd );_fge !=nil {return _b .Wrap (_fge ,_dbb ,"\u0070\u0069\u0078\u0061\u0074\u0064\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");};if _dee ,_gag ,_fge =_ggb .CentroidPointsTemplates .GetGeometry (_efd );_fge !=nil {return _b .Wrap (_fge ,_dbb ,"\u0043\u0065\u006et\u0072\u006f\u0069\u0064P\u006f\u0069\u006e\u0074\u0073\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u005b\u0069\u0043\u006c\u0061\u0073\u0073\u005d");};_faa ,_fge =_ca .RankHausTest (_gce ,_dec ,_bdde ,_gcd ,_bac -_dee ,_ffba -_gag ,MaxDiffWidth ,MaxDiffHeight ,_dcg ,_adf ,float32 (_ggb .Settings .RankHaus ),_gfe );if _fge !=nil {return _b .Wrap (_fge ,_dbb ,"");};if _faa {_eed =true ;if _fge =_ggb .ClassIDs .Add (_efd );_fge !=nil {return _b .Wrap (_fge ,_dbb ,"");};if _fge =_ggb .ComponentPageNumbers .Add (_edg );_fge !=nil {return _b .Wrap (_fge ,_dbb ,"");};if _ggb .Settings .KeepClassInstances {_ggcb ,_bggd :=_ggb .ClassInstances .GetBitmaps (_efd );if _bggd !=nil {return _b .Wrap (_bggd ,_dbb ,"\u0063\u002e\u0050\u0069\u0078\u0061\u0061\u002e\u0047\u0065\u0074B\u0069\u0074\u006d\u0061\u0070\u0073\u0028\u0069\u0043\u006ca\u0073\u0073\u0029");};if _abba ,_bggd =_dbc .GetBitmap (_gcb );_bggd !=nil {return _b .Wrap (_bggd ,_dbb ,"\u0070i\u0078\u0061\u005b\u0069\u005d");};_ggcb .Values =append (_ggcb .Values ,_abba );_afd ,_bggd :=_daf .Get (_gcb );if _bggd !=nil {return _b .Wrap (_bggd ,_dbb ,"b\u006f\u0078\u0061\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};_ggcb .Boxes =append (_ggcb .Boxes ,_afd );};break ;};};if !_eed {if _fge =_ggb .ClassIDs .Add (_bad );_fge !=nil {return _b .Wrap (_fge ,_dbb ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _fge =_ggb .ComponentPageNumbers .Add (_edg );_fge !=nil {return _b .Wrap (_fge ,_dbb ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_cdgc :=&_ca .Bitmaps {};_abba =_dbc .Values [_gcb ];_cdgc .AddBitmap (_abba );_fec ,_bcf :=_abba .Width ,_abba .Height ;_ggb .TemplatesSize .Add (uint64 (_fec )*uint64 (_bcf ),_bad );_dbe ,_dbba :=_daf .Get (_gcb );if _dbba !=nil {return _b .Wrap (_dbba ,_dbb ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_cdgc .AddBox (_dbe );_ggb .ClassInstances .AddBitmaps (_cdgc );_ggb .CentroidPointsTemplates .AddPoint (_bac ,_ffba );_ggb .UndilatedTemplates .AddBitmap (_gce );_ggb .DilatedTemplates .AddBitmap (_dec );_ggb .FgTemplates .AddInt (_dcg );};};_ggb .NumberOfClasses =len (_ggb .UndilatedTemplates .Values );return nil ;};func (_cda *Classer )verifyMethod (_cf Method )error {if _cf !=RankHaus &&_cf !=Correlation {return _b .Error ("\u0076\u0065\u0072i\u0066\u0079\u004d\u0065\u0074\u0068\u006f\u0064","\u0069\u006e\u0076\u0061li\u0064\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072\u0020\u006d\u0065\u0074\u0068o\u0064");};return nil ;};func (_dcd *similarTemplatesFinder )Next ()int {var (_fdg ,_bdff ,_aagdg ,_gcae int ;_abg bool ;_fceb *_ca .Bitmap ;_fgd error ;);for {if _dcd .Index >=25{return -1;};_bdff =_dcd .Width +TwoByTwoWalk [2*_dcd .Index ];_fdg =_dcd .Height +TwoByTwoWalk [2*_dcd .Index +1];if _fdg < 1||_bdff < 1{_dcd .Index ++;continue ;};if len (_dcd .CurrentNumbers )==0{_dcd .CurrentNumbers ,_abg =_dcd .Classer .TemplatesSize .GetSlice (uint64 (_bdff )*uint64 (_fdg ));if !_abg {_dcd .Index ++;continue ;};_dcd .N =0;};_aagdg =len (_dcd .CurrentNumbers );for ;_dcd .N < _aagdg ;_dcd .N ++{_gcae =_dcd .CurrentNumbers [_dcd .N ];_fceb ,_fgd =_dcd .Classer .DilatedTemplates .GetBitmap (_gcae );if _fgd !=nil {_da .Log .Debug ("\u0046\u0069\u006e\u0064\u004e\u0065\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0074\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u006e\u006f\u0074 \u0066\u006fu\u006e\u0064\u003a\u0020");return 0;};if _fceb .Width -2*JbAddedPixels ==_bdff &&_fceb .Height -2*JbAddedPixels ==_fdg {return _gcae ;};};_dcd .Index ++;_dcd .CurrentNumbers =nil ;};};const (MaxConnCompWidth =350;MaxCharCompWidth =350;MaxWordCompWidth =1000;MaxCompHeight =120;);func (_dgg *Classer )classifyCorrelation (_abf *_ca .Boxes ,_fdb *_ca .Bitmaps ,_be int )error {const _ge ="\u0063\u006c\u0061\u0073si\u0066\u0079\u0043\u006f\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e";if _abf ==nil {return _b .Error (_ge ,"\u006e\u0065\u0077\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0062\u006f\u0075\u006e\u0064\u0069\u006e\u0067\u0020\u0062o\u0078\u0065\u0073\u0020\u006eo\u0074\u0020f\u006f\u0075\u006e\u0064");};if _fdb ==nil {return _b .Error (_ge ,"\u006e\u0065wC\u006f\u006d\u0070o\u006e\u0065\u006e\u0074s b\u0069tm\u0061\u0070\u0020\u0061\u0072\u0072\u0061y \u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064");};_ed :=len (_fdb .Values );if _ed ==0{_da .Log .Debug ("\u0063l\u0061\u0073s\u0069\u0066\u0079C\u006f\u0072\u0072\u0065\u006c\u0061\u0074i\u006f\u006e\u0020\u002d\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0070\u0069\u0078\u0061s\u0020\u0069\u0073\u0020\u0065\u006d\u0070\u0074\u0079");return nil ;};var (_ad ,_ede *_ca .Bitmap ;_fdba error ;);_eaeg :=&_ca .Bitmaps {Values :make ([]*_ca .Bitmap ,_ed )};for _gdg ,_ebe :=range _fdb .Values {_ede ,_fdba =_ebe .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);if _fdba !=nil {return _b .Wrap (_fdba ,_ge ,"");};_eaeg .Values [_gdg ]=_ede ;};_ega :=_dgg .FgTemplates ;_gdf :=_ca .MakePixelSumTab8 ();_aea :=_ca .MakePixelCentroidTab8 ();_dcb :=make ([]int ,_ed );_ffb :=make ([][]int ,_ed );_gbg :=_ca .Points (make ([]_ca .Point ,_ed ));_dac :=&_gbg ;var (_bd ,_ecf int ;_fdbc ,_eba ,_dad int ;_gea ,_dab int ;_de byte ;);for _bdd ,_agb :=range _eaeg .Values {_ffb [_bdd ]=make ([]int ,_agb .Height );_bd =0;_ecf =0;_eba =(_agb .Height -1)*_agb .RowStride ;_fdbc =0;for _dab =_agb .Height -1;_dab >=0;_dab ,_eba =_dab -1,_eba -_agb .RowStride {_ffb [_bdd ][_dab ]=_fdbc ;_dad =0;for _gea =0;_gea < _agb .RowStride ;_gea ++{_de =_agb .Data [_eba +_gea ];_dad +=_gdf [_de ];_bd +=_aea [_de ]+_gea *8*_gdf [_de ];};_fdbc +=_dad ;_ecf +=_dad *_dab ;};_dcb [_bdd ]=_fdbc ;if _fdbc > 0{(*_dac )[_bdd ]=_ca .Point {X :float32 (_bd )/float32 (_fdbc ),Y :float32 (_ecf )/float32 (_fdbc )};}else {(*_dac )[_bdd ]=_ca .Point {X :float32 (_agb .Width )/float32 (2),Y :float32 (_agb .Height )/float32 (2)};};};if _fdba =_dgg .CentroidPoints .Add (_dac );_fdba !=nil {return _b .Wrap (_fdba ,_ge ,"\u0063\u0065\u006et\u0072\u006f\u0069\u0064\u0020\u0061\u0064\u0064");};var (_af ,_dga ,_ege int ;_gaa float64 ;_bfee ,_adc ,_gff ,_gab float32 ;_gca ,_cdc _ca .Point ;_egc bool ;_aeca *similarTemplatesFinder ;_gdef int ;_gac *_ca .Bitmap ;_afa *_d .Rectangle ;_df *_ca .Bitmaps ;);for _gdef ,_ede =range _eaeg .Values {_dga =_dcb [_gdef ];if _bfee ,_adc ,_fdba =_dac .GetGeometry (_gdef );_fdba !=nil {return _b .Wrap (_fdba ,_ge ,"\u0070t\u0061\u0020\u002d\u0020\u0069");};_egc =false ;_fad :=len (_dgg .UndilatedTemplates .Values );_aeca =_cge (_dgg ,_ede );for _fgb :=_aeca .Next ();_fgb > -1;{if _gac ,_fdba =_dgg .UndilatedTemplates .GetBitmap (_fgb );_fdba !=nil {return _b .Wrap (_fdba ,_ge ,"\u0075\u006e\u0069dl\u0061\u0074\u0065\u0064\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0062\u006d\u0032");};if _ege ,_fdba =_ega .GetInt (_fgb );_fdba !=nil {_da .Log .Trace ("\u0046\u0047\u0020T\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u005b\u0069\u0063\u006ca\u0073\u0073\u005d\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_fdba );};if _gff ,_gab ,_fdba =_dgg .CentroidPointsTemplates .GetGeometry (_fgb );_fdba !=nil {return _b .Wrap (_fdba ,_ge ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074T\u0065\u006d\u0070\u006c\u0061\u0074e\u0073\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u00782\u002c\u0079\u0032\u0020");};if _dgg .Settings .WeightFactor > 0.0{if _af ,_fdba =_dgg .TemplateAreas .Get (_fgb );_fdba !=nil {_da .Log .Trace ("\u0054\u0065\u006dp\u006c\u0061\u0074\u0065A\u0072\u0065\u0061\u0073\u005b\u0069\u0063l\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0061\u0072\u0065\u0061\u0020\u0025\u0076",_fdba );};_gaa =_dgg .Settings .Thresh +(1.0-_dgg .Settings .Thresh )*_dgg .Settings .WeightFactor *float64 (_ege )/float64 (_af );}else {_gaa =_dgg .Settings .Thresh ;};_aag ,_bgg :=_ca .CorrelationScoreThresholded (_ede ,_gac ,_dga ,_ege ,_gca .X -_cdc .X ,_gca .Y -_cdc .Y ,MaxDiffWidth ,MaxDiffHeight ,_gdf ,_ffb [_gdef ],float32 (_gaa ));if _bgg !=nil {return _b .Wrap (_bgg ,_ge ,"");};if _fca {var (_cgc ,_bea float64 ;_gfc ,_cff int ;);_cgc ,_bgg =_ca .CorrelationScore (_ede ,_gac ,_dga ,_ege ,_bfee -_gff ,_adc -_gab ,MaxDiffWidth ,MaxDiffHeight ,_gdf );if _bgg !=nil {return _b .Wrap (_bgg ,_ge ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");};_bea ,_bgg =_ca .CorrelationScoreSimple (_ede ,_gac ,_dga ,_ege ,_bfee -_gff ,_adc -_gab ,MaxDiffWidth ,MaxDiffHeight ,_gdf );if _bgg !=nil {return _b .Wrap (_bgg ,_ge ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");};_gfc =int (_a .Sqrt (_cgc *float64 (_dga )*float64 (_ege )));_cff =int (_a .Sqrt (_bea *float64 (_dga )*float64 (_ege )));if (_cgc >=_gaa )!=(_bea >=_gaa ){return _b .Errorf (_ge ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043\u006f\u0072r\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0063\u006f\u0072\u0065\u0020\u006d\u0069\u0073\u006d\u0061\u0074\u0063\u0068\u0020-\u0020\u0025d\u0028\u00250\u002e\u0034\u0066\u002c\u0020\u0025\u0076\u0029\u0020\u0076\u0073\u0020\u0025d(\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0076)\u0020\u0025\u0030\u002e\u0034\u0066",_gfc ,_cgc ,_cgc >=float64 (_gaa ),_cff ,_bea ,_bea >=float64 (_gaa ),_cgc -_bea );};if _cgc >=_gaa !=_aag {return _b .Errorf (_ge ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043o\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e \u0073\u0063\u006f\u0072\u0065 \u004d\u0069\u0073\u006d\u0061t\u0063\u0068 \u0062\u0065\u0074w\u0065\u0065\u006e\u0020\u0063\u006frr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020/\u0020\u0074\u0068\u0072\u0065s\u0068\u006f\u006c\u0064\u002e\u0020\u0043\u006f\u006dpa\u0072\u0069\u0073\u006f\u006e:\u0020\u0025\u0030\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0064\u0029\u0020\u003e\u003d\u0020\u00250\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u0029\u0020\u0076\u0073\u0020\u0025\u0076",_cgc ,_cgc *float64 (_dga )*float64 (_ege ),_gfc ,_gaa ,float32 (_gaa )*float32 (_dga )*float32 (_ege ),_aag );};};if _aag {_egc =true ;if _bgg =_dgg .ClassIDs .Add (_fgb );_bgg !=nil {return _b .Wrap (_bgg ,_ge ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");};if _bgg =_dgg .ComponentPageNumbers .Add (_be );_bgg !=nil {return _b .Wrap (_bgg ,_ge ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");};if _dgg .Settings .KeepClassInstances {if _ad ,_bgg =_fdb .GetBitmap (_gdef );_bgg !=nil {return _b .Wrap (_bgg ,_ge ,"\u004b\u0065\u0065\u0070Cl\u0061\u0073\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u002d \u0069");};if _df ,_bgg =_dgg .ClassInstances .GetBitmaps (_fgb );_bgg !=nil {return _b .Wrap (_bgg ,_ge ,"K\u0065\u0065\u0070\u0043\u006c\u0061s\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065s\u0020\u002d\u0020i\u0043l\u0061\u0073\u0073");};_df .AddBitmap (_ad );if _afa ,_bgg =_abf .Get (_gdef );_bgg !=nil {return _b .Wrap (_bgg ,_ge ,"\u004be\u0065p\u0043\u006c\u0061\u0073\u0073I\u006e\u0073t\u0061\u006e\u0063\u0065\u0073");};_df .AddBox (_afa );};break ;};};if !_egc {if _fdba =_dgg .ClassIDs .Add (_fad );_fdba !=nil {return _b .Wrap (_fdba ,_ge ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _fdba =_dgg .ComponentPageNumbers .Add (_be );_fdba !=nil {return _b .Wrap (_fdba ,_ge ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_df =&_ca .Bitmaps {};if _ad ,_fdba =_fdb .GetBitmap (_gdef );_fdba !=nil {return _b .Wrap (_fdba ,_ge ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_df .AddBitmap (_ad );_aab ,_dabe :=_ad .Width ,_ad .Height ;_eab :=uint64 (_dabe )*uint64 (_aab );_dgg .TemplatesSize .Add (_eab ,_fad );if _afa ,_fdba =_abf .Get (_gdef );_fdba !=nil {return _b .Wrap (_fdba ,_ge ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_df .AddBox (_afa );_dgg .ClassInstances .AddBitmaps (_df );_dgg .CentroidPointsTemplates .AddPoint (_bfee ,_adc );_dgg .FgTemplates .AddInt (_dga );_dgg .UndilatedTemplates .AddBitmap (_ad );_af =(_ede .Width -2*JbAddedPixels )*(_ede .Height -2*JbAddedPixels );if _fdba =_dgg .TemplateAreas .Add (_af );_fdba !=nil {return _b .Wrap (_fdba ,_ge ,"\u0021\u0066\u006f\u0075\u006e\u0064");};};};_dgg .NumberOfClasses =len (_dgg .UndilatedTemplates .Values );return nil ;};type Classer struct{BaseIndex int ;Settings Settings ;ComponentsNumber *_ce .IntSlice ;TemplateAreas *_ce .IntSlice ;Widths map[int ]int ;Heights map[int ]int ;NumberOfClasses int ;ClassInstances *_ca .BitmapsArray ;UndilatedTemplates *_ca .Bitmaps ;DilatedTemplates *_ca .Bitmaps ;TemplatesSize _ce .IntsMap ;FgTemplates *_ce .NumSlice ;CentroidPoints *_ca .Points ;CentroidPointsTemplates *_ca .Points ;ClassIDs *_ce .IntSlice ;ComponentPageNumbers *_ce .IntSlice ;PtaUL *_ca .Points ;PtaLL *_ca .Points ;};func (_bef Settings )Validate ()error {const _eded ="\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0073\u002e\u0056\u0061\u006ci\u0064\u0061\u0074\u0065";if _bef .Thresh < 0.4||_bef .Thresh > 0.98{return _b .Error (_eded ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074\u0068\u0072\u0065\u0073\u0068\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0034\u0020\u002d\u0020\u0030\u002e\u0039\u0038\u005d");};if _bef .WeightFactor < 0.0||_bef .WeightFactor > 1.0{return _b .Error (_eded ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006ec\u006f\u0064\u0065\u0072\u0020w\u0065\u0069\u0067\u0068\u0074\u0020\u0066\u0061\u0063\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0030\u0020\u002d\u0020\u0031\u002e\u0030\u005d");};if _bef .RankHaus < 0.5||_bef .RankHaus > 1.0{return _b .Error (_eded ,"\u006a\u0062\u0069\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0072a\u006e\u006b\u0020\u0068\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065 \u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065 [\u0030\u002e\u0035\u0020\u002d\u0020\u0031\u002e\u0030\u005d");};if _bef .SizeHaus < 1||_bef .SizeHaus > 10{return _b .Error (_eded ,"\u006a\u0062\u0069\u0067\u0032 \u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0073\u0069\u007a\u0065\u0020h\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0031\u0020\u002d\u0020\u0031\u0030]");};switch _bef .Components {case _ca .ComponentConn ,_ca .ComponentCharacters ,_ca .ComponentWords :default:return _b .Error (_eded ,"\u0069n\u0076\u0061\u006c\u0069d\u0020\u0063\u006c\u0061\u0073s\u0065r\u0020c\u006f\u006d\u0070\u006f\u006e\u0065\u006et");};return nil ;};func (_gfb *Settings )SetDefault (){if _gfb .MaxCompWidth ==0{switch _gfb .Components {case _ca .ComponentConn :_gfb .MaxCompWidth =MaxConnCompWidth ;case _ca .ComponentCharacters :_gfb .MaxCompWidth =MaxCharCompWidth ;case _ca .ComponentWords :_gfb .MaxCompWidth =MaxWordCompWidth ;};};if _gfb .MaxCompHeight ==0{_gfb .MaxCompHeight =MaxCompHeight ;};if _gfb .Thresh ==0.0{_gfb .Thresh =0.9;};if _gfb .WeightFactor ==0.0{_gfb .WeightFactor =0.75;};if _gfb .RankHaus ==0.0{_gfb .RankHaus =0.97;};if _gfb .SizeHaus ==0{_gfb .SizeHaus =2;};};func _efc (_facg *_ca .Bitmap ,_bfe ,_cab ,_eg ,_bfg int ,_dag *_ca .Bitmap )(_aac _d .Point ,_fg error ){const _ead ="\u0066i\u006e\u0061\u006c\u0041l\u0069\u0067\u006e\u006d\u0065n\u0074P\u006fs\u0069\u0074\u0069\u006f\u006e\u0069\u006eg";if _facg ==nil {return _aac ,_b .Error (_ead ,"\u0073\u006f\u0075\u0072ce\u0020\u006e\u006f\u0074\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064");};if _dag ==nil {return _aac ,_b .Error (_ead ,"t\u0065\u006d\u0070\u006cat\u0065 \u006e\u006f\u0074\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064");};_efb ,_cec :=_dag .Width ,_dag .Height ;_fc ,_fd :=_bfe -_eg -JbAddedPixels ,_cab -_bfg -JbAddedPixels ;_da .Log .Trace ("\u0078\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0079\u003a\u0020\u0027\u0025\u0064'\u002c\u0020\u0077\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0068\u003a \u0027\u0025\u0064\u0027\u002c\u0020\u0062\u0078\u003a\u0020\u0027\u0025d'\u002c\u0020\u0062\u0079\u003a\u0020\u0027\u0025\u0064\u0027",_bfe ,_cab ,_efb ,_cec ,_fc ,_fd );_ee ,_fg :=_ca .Rect (_fc ,_fd ,_efb ,_cec );if _fg !=nil {return _aac ,_b .Wrap (_fg ,_ead ,"");};_ff ,_ ,_fg :=_facg .ClipRectangle (_ee );if _fg !=nil {_da .Log .Error ("\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069\u0070\u0020\u0072\u0065c\u0074\u0061\u006e\u0067\u006c\u0065\u003a\u0020\u0025\u0076",_ee );return _aac ,_b .Wrap (_fg ,_ead ,"");};_fcb :=_ca .New (_ff .Width ,_ff .Height );_gad :=_a .MaxInt32 ;var _ab ,_ec ,_fce ,_cdg ,_gg int ;for _ab =-1;_ab <=1;_ab ++{for _ec =-1;_ec <=1;_ec ++{if _ ,_fg =_ca .Copy (_fcb ,_ff );_fg !=nil {return _aac ,_b .Wrap (_fg ,_ead ,"");};if _fg =_fcb .RasterOperation (_ec ,_ab ,_efb ,_cec ,_ca .PixSrcXorDst ,_dag ,0,0);_fg !=nil {return _aac ,_b .Wrap (_fg ,_ead ,"");};_fce =_fcb .CountPixels ();if _fce < _gad {_cdg =_ec ;_gg =_ab ;_gad =_fce ;};};};_aac .X =_cdg ;_aac .Y =_gg ;return _aac ,nil ;};const JbAddedPixels =6;