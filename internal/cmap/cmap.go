//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package cmap ;import (_ef "bufio";_cd "bytes";_bc "encoding/hex";_be "errors";_c "fmt";_gg "github.com/unidoc/unipdf/v3/common";_ea "github.com/unidoc/unipdf/v3/core";_fc "github.com/unidoc/unipdf/v3/internal/cmap/bcmaps";_d "io";_f "sort";_ee "strconv";_g "strings";_b "unicode/utf16";);type cmapInt struct{_cedc int64 };func _dae (_fgf string )rune {_dab :=[]rune (_fgf );return _dab [len (_dab )-1]};func (_eegd *cMapParser )parseString ()(cmapString ,error ){_eegd ._gef .ReadByte ();_babd :=_cd .Buffer {};_ggac :=1;for {_dfbg ,_abbf :=_eegd ._gef .Peek (1);if _abbf !=nil {return cmapString {_babd .String ()},_abbf ;};if _dfbg [0]=='\\'{_eegd ._gef .ReadByte ();_gbddc ,_fbfb :=_eegd ._gef .ReadByte ();if _fbfb !=nil {return cmapString {_babd .String ()},_fbfb ;};if _ea .IsOctalDigit (_gbddc ){_eeef ,_ggd :=_eegd ._gef .Peek (2);if _ggd !=nil {return cmapString {_babd .String ()},_ggd ;};var _bee []byte ;_bee =append (_bee ,_gbddc );for _ ,_dedf :=range _eeef {if _ea .IsOctalDigit (_dedf ){_bee =append (_bee ,_dedf );}else {break ;};};_eegd ._gef .Discard (len (_bee )-1);_gg .Log .Trace ("\u004e\u0075\u006d\u0065ri\u0063\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0022\u0025\u0073\u0022",_bee );_gcb ,_ggd :=_ee .ParseUint (string (_bee ),8,32);if _ggd !=nil {return cmapString {_babd .String ()},_ggd ;};_babd .WriteByte (byte (_gcb ));continue ;};switch _gbddc {case 'n':_babd .WriteByte ('\n');case 'r':_babd .WriteByte ('\r');case 't':_babd .WriteByte ('\t');case 'b':_babd .WriteByte ('\b');case 'f':_babd .WriteByte ('\f');case '(':_babd .WriteByte ('(');case ')':_babd .WriteByte (')');case '\\':_babd .WriteByte ('\\');};continue ;}else if _dfbg [0]=='('{_ggac ++;}else if _dfbg [0]==')'{_ggac --;if _ggac ==0{_eegd ._gef .ReadByte ();break ;};};_gba ,_ :=_eegd ._gef .ReadByte ();_babd .WriteByte (_gba );};return cmapString {_babd .String ()},nil ;};func (_gddc *cMapParser )parseComment ()(string ,error ){var _eeg _cd .Buffer ;_ ,_aec :=_gddc .skipSpaces ();if _aec !=nil {return _eeg .String (),_aec ;};_gdggd :=true ;for {_dccd ,_aafb :=_gddc ._gef .Peek (1);if _aafb !=nil {_gg .Log .Debug ("p\u0061r\u0073\u0065\u0043\u006f\u006d\u006d\u0065\u006et\u003a\u0020\u0065\u0072r=\u0025\u0076",_aafb );return _eeg .String (),_aafb ;};if _gdggd &&_dccd [0]!='%'{return _eeg .String (),ErrBadCMapComment ;};_gdggd =false ;if (_dccd [0]!='\r')&&(_dccd [0]!='\n'){_cdae ,_ :=_gddc ._gef .ReadByte ();_eeg .WriteByte (_cdae );}else {break ;};};return _eeg .String (),nil ;};func (cmap *CMap )computeInverseMappings (){for _dg ,_cea :=range cmap ._ece {if _egc ,_cc :=cmap ._bb [_cea ];!_cc ||(_cc &&_egc > _dg ){cmap ._bb [_cea ]=_dg ;};};for _cfc ,_bec :=range cmap ._gc {if _edb ,_cbd :=cmap ._dac [_bec ];!_cbd ||(_cbd &&_edb > _cfc ){cmap ._dac [_bec ]=_cfc ;};};_f .Slice (cmap ._cdaf ,func (_egg ,_bba int )bool {return cmap ._cdaf [_egg ].Low < cmap ._cdaf [_bba ].Low });};type cmapName struct{Name string ;};type cmapOperand struct{Operand string ;};func (cmap *CMap )parseCIDRange ()error {for {_gag ,_ffe :=cmap .parseObject ();if _ffe !=nil {if _ffe ==_d .EOF {break ;};return _ffe ;};_ceb ,_gfe :=_gag .(cmapHexString );if !_gfe {if _dgfb ,_eafe :=_gag .(cmapOperand );_eafe {if _dgfb .Operand ==_aaed {return nil ;};return _be .New ("\u0063\u0069\u0064\u0020\u0069\u006e\u0074\u0065\u0072\u0076\u0061\u006c\u0020s\u0074\u0061\u0072\u0074\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u0020\u0068\u0065\u0078\u0020\u0073t\u0072\u0069\u006e\u0067");};};_cef :=_fdcg (_ceb );_gag ,_ffe =cmap .parseObject ();if _ffe !=nil {if _ffe ==_d .EOF {break ;};return _ffe ;};_gbdb ,_gfe :=_gag .(cmapHexString );if !_gfe {return _be .New ("\u0063\u0069d\u0020\u0069\u006e\u0074e\u0072\u0076a\u006c\u0020\u0065\u006e\u0064\u0020\u006d\u0075s\u0074\u0020\u0062\u0065\u0020\u0061\u0020\u0068\u0065\u0078\u0020\u0073t\u0072\u0069\u006e\u0067");};if len (_ceb ._cab )!=len (_gbdb ._cab ){return _be .New ("\u0075\u006e\u0065\u0071\u0075\u0061\u006c\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066 \u0062\u0079\u0074\u0065\u0073\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065");};_gebe :=_fdcg (_gbdb );if _cef > _gebe {_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0049\u0044\u0020\u0072\u0061\u006e\u0067\u0065\u002e\u0020\u0073t\u0061\u0072\u0074\u003d\u0030\u0078\u0025\u0030\u0032\u0078\u0020\u0065\u006e\u0064=\u0030x\u0025\u0030\u0032\u0078",_cef ,_gebe );return ErrBadCMap ;};_gag ,_ffe =cmap .parseObject ();if _ffe !=nil {if _ffe ==_d .EOF {break ;};return _ffe ;};_dcb ,_gfe :=_gag .(cmapInt );if !_gfe {return _be .New ("\u0063\u0069\u0064\u0020\u0073t\u0061\u0072\u0074\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0064\u0065\u0063\u0069\u006d\u0061\u006c\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};if _dcb ._cedc < 0{return _be .New ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0063\u0069\u0064\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0076\u0061\u006c\u0075\u0065");};_dgfe :=_dcb ._cedc ;for _af :=_cef ;_af <=_gebe ;_af ++{cmap ._ece [_af ]=CharCode (_dgfe );_dgfe ++;};_gg .Log .Trace ("C\u0049\u0044\u0020\u0072\u0061\u006eg\u0065\u003a\u0020\u003c\u0030\u0078\u0025\u0058\u003e \u003c\u0030\u0078%\u0058>\u0020\u0025\u0064",_cef ,_gebe ,_dcb ._cedc );};return nil ;};type cmapArray struct{Array []cmapObject ;};func (cmap *CMap )parseBfchar ()error {for {_gdb ,_dcfg :=cmap .parseObject ();if _dcfg !=nil {if _dcfg ==_d .EOF {break ;};return _dcfg ;};var _cdff CharCode ;switch _ddf :=_gdb .(type ){case cmapOperand :if _ddf .Operand ==_cfcd {return nil ;};return _be .New ("\u0075n\u0065x\u0070\u0065\u0063\u0074\u0065d\u0020\u006fp\u0065\u0072\u0061\u006e\u0064");case cmapHexString :_cdff =_fdcg (_ddf );default:return _be .New ("\u0075n\u0065x\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0074\u0079\u0070\u0065");};_gdb ,_dcfg =cmap .parseObject ();if _dcfg !=nil {if _dcfg ==_d .EOF {break ;};return _dcfg ;};var _befd []rune ;switch _gagc :=_gdb .(type ){case cmapOperand :if _gagc .Operand ==_cfcd {return nil ;};_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0065x\u0070\u0065\u0063\u0074\u0065\u0064\u0020o\u0070\u0065\u0072\u0061\u006e\u0064\u002e\u0020\u0025\u0023\u0076",_gagc );return ErrBadCMap ;case cmapHexString :_befd =_dcd (_gagc );case cmapName :_gg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020U\u006e\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064 \u006e\u0061\u006de\u002e \u0025\u0023\u0076",_gagc );_befd =[]rune {MissingCodeRune };default:_gg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020U\u006e\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064 \u0074\u0079\u0070e\u002e \u0025\u0023\u0076",_gdb );return ErrBadCMap ;};cmap ._gc [_cdff ]=string (_befd );};return nil ;};func (cmap *CMap )CharcodeToCID (code CharCode )(CharCode ,bool ){_fgd ,_dcc :=cmap ._ece [code ];return _fgd ,_dcc ;};func (_ed *CIDSystemInfo )String ()string {return _c .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0025\u0030\u0033\u0064",_ed .Registry ,_ed .Ordering ,_ed .Supplement );};func (cmap *CMap )parseName ()error {_aeg :="";_gccb :=false ;for _fced :=0;_fced < 20&&!_gccb ;_fced ++{_ded ,_fgfc :=cmap .parseObject ();if _fgfc !=nil {return _fgfc ;};switch _dee :=_ded .(type ){case cmapOperand :switch _dee .Operand {case "\u0064\u0065\u0066":_gccb =true ;default:_gg .Log .Debug ("\u0070\u0061\u0072\u0073\u0065\u004e\u0061\u006d\u0065\u003a\u0020\u0053\u0074\u0061\u0074\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u002e\u0020o\u003d\u0025\u0023\u0076\u0020n\u0061\u006de\u003d\u0025\u0023\u0071",_ded ,_aeg );if _aeg !=""{_aeg =_c .Sprintf ("\u0025\u0073\u0020%\u0073",_aeg ,_dee .Operand );};_gg .Log .Debug ("\u0070\u0061\u0072\u0073\u0065\u004e\u0061\u006d\u0065\u003a \u0052\u0065\u0063\u006f\u0076\u0065\u0072e\u0064\u002e\u0020\u006e\u0061\u006d\u0065\u003d\u0025\u0023\u0071",_aeg );};case cmapName :_aeg =_dee .Name ;};};if !_gccb {_gg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0070\u0061\u0072\u0073\u0065N\u0061m\u0065:\u0020\u004e\u006f\u0020\u0064\u0065\u0066 ");return ErrBadCMap ;};cmap ._ggc =_aeg ;return nil ;};func (cmap *CMap )parseVersion ()error {_gged :="";_ade :=false ;for _gab :=0;_gab < 3&&!_ade ;_gab ++{_gcf ,_becg :=cmap .parseObject ();if _becg !=nil {return _becg ;};switch _ega :=_gcf .(type ){case cmapOperand :switch _ega .Operand {case "\u0064\u0065\u0066":_ade =true ;default:_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0070\u0061\u0072\u0073\u0065\u0056e\u0072\u0073\u0069\u006f\u006e\u003a \u0073\u0074\u0061\u0074\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u002e\u0020o\u003d\u0025\u0023\u0076",_gcf );return ErrBadCMap ;};case cmapInt :_gged =_c .Sprintf ("\u0025\u0064",_ega ._cedc );case cmapFloat :_gged =_c .Sprintf ("\u0025\u0066",_ega ._fba );case cmapString :_gged =_ega .String ;default:_gg .Log .Debug ("\u0045\u0052RO\u0052\u003a\u0020p\u0061\u0072\u0073\u0065Ver\u0073io\u006e\u003a\u0020\u0042\u0061\u0064\u0020ty\u0070\u0065\u002e\u0020\u006f\u003d\u0025#\u0076",_gcf );};};cmap ._a =_gged ;return nil ;};func (cmap *CMap )parseSystemInfo ()error {_fdc :=false ;_fgb :=false ;_fcee :="";_fgdb :=false ;_ede :=CIDSystemInfo {};for _ccbe :=0;_ccbe < 50&&!_fgdb ;_ccbe ++{_bed ,_ebe :=cmap .parseObject ();if _ebe !=nil {return _ebe ;};switch _ffff :=_bed .(type ){case cmapDict :_ccfe :=_ffff .Dict ;_dca ,_cee :=_ccfe ["\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079"];if !_cee {_gg .Log .Debug ("\u0045\u0052\u0052\u004fR:\u0020\u0042\u0061\u0064\u0020\u0053\u0079\u0073\u0074\u0065\u006d\u0020\u0049\u006ef\u006f");return ErrBadCMap ;};_eaec ,_cee :=_dca .(cmapString );if !_cee {_gg .Log .Debug ("\u0045\u0052\u0052\u004fR:\u0020\u0042\u0061\u0064\u0020\u0053\u0079\u0073\u0074\u0065\u006d\u0020\u0049\u006ef\u006f");return ErrBadCMap ;};_ede .Registry =_eaec .String ;_dca ,_cee =_ccfe ["\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067"];if !_cee {_gg .Log .Debug ("\u0045\u0052\u0052\u004fR:\u0020\u0042\u0061\u0064\u0020\u0053\u0079\u0073\u0074\u0065\u006d\u0020\u0049\u006ef\u006f");return ErrBadCMap ;};_eaec ,_cee =_dca .(cmapString );if !_cee {_gg .Log .Debug ("\u0045\u0052\u0052\u004fR:\u0020\u0042\u0061\u0064\u0020\u0053\u0079\u0073\u0074\u0065\u006d\u0020\u0049\u006ef\u006f");return ErrBadCMap ;};_ede .Ordering =_eaec .String ;_aad ,_cee :=_ccfe ["\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074"];if !_cee {_gg .Log .Debug ("\u0045\u0052\u0052\u004fR:\u0020\u0042\u0061\u0064\u0020\u0053\u0079\u0073\u0074\u0065\u006d\u0020\u0049\u006ef\u006f");return ErrBadCMap ;};_bbd ,_cee :=_aad .(cmapInt );if !_cee {_gg .Log .Debug ("\u0045\u0052\u0052\u004fR:\u0020\u0042\u0061\u0064\u0020\u0053\u0079\u0073\u0074\u0065\u006d\u0020\u0049\u006ef\u006f");return ErrBadCMap ;};_ede .Supplement =int (_bbd ._cedc );_fgdb =true ;case cmapOperand :switch _ffff .Operand {case "\u0062\u0065\u0067i\u006e":_fdc =true ;case "\u0065\u006e\u0064":_fgdb =true ;case "\u0064\u0065\u0066":_fgb =false ;};case cmapName :if _fdc {_fcee =_ffff .Name ;_fgb =true ;};case cmapString :if _fgb {switch _fcee {case "\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079":_ede .Registry =_ffff .String ;case "\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067":_ede .Ordering =_ffff .String ;};};case cmapInt :if _fgb {switch _fcee {case "\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074":_ede .Supplement =int (_ffff ._cedc );};};};};if !_fgdb {_gg .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0050\u0061\u0072\u0073\u0065\u0064\u0020\u0053\u0079\u0073\u0074\u0065\u006d\u0020\u0049\u006e\u0066\u006f\u0020\u0064\u0069\u0063\u0074\u0020\u0069\u006ec\u006f\u0072\u0072\u0065\u0063\u0074\u006c\u0079");return ErrBadCMap ;};cmap ._bd =_ede ;return nil ;};type fbRange struct{_eb CharCode ;_ff CharCode ;_eg string ;};func (cmap *CMap )StringToCID (s string )(CharCode ,bool ){_gac ,_bbe :=cmap ._dac [s ];return _gac ,_bbe ;};func (cmap *CMap )Name ()string {return cmap ._ggc };func (cmap *CMap )BytesToCharcodes (data []byte )([]CharCode ,bool ){var _ac []CharCode ;if cmap ._fa ==8{for _ ,_agb :=range data {_ac =append (_ac ,CharCode (_agb ));};return _ac ,true ;};for _aag :=0;_aag < len (data );{_aae ,_gbg ,_cg :=cmap .matchCode (data [_aag :]);if !_cg {_gg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0063\u006f\u0064\u0065\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0061\u0074\u0020\u0069\u003d\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0073\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d\u003d\u0025\u0023\u0071",_aag ,data ,string (data ));return _ac ,false ;};_ac =append (_ac ,_aae );_aag +=_gbg ;};return _ac ,true ;};func (cmap *CMap )String ()string {_abb :=cmap ._bd ;_eef :=[]string {_c .Sprintf ("\u006e\u0062\u0069\u0074\u0073\u003a\u0025\u0064",cmap ._fa ),_c .Sprintf ("\u0074y\u0070\u0065\u003a\u0025\u0064",cmap ._bcd )};if cmap ._a !=""{_eef =append (_eef ,_c .Sprintf ("\u0076\u0065\u0072\u0073\u0069\u006f\u006e\u003a\u0025\u0073",cmap ._a ));};if cmap ._ce !=""{_eef =append (_eef ,_c .Sprintf ("u\u0073\u0065\u0063\u006d\u0061\u0070\u003a\u0025\u0023\u0071",cmap ._ce ));};_eef =append (_eef ,_c .Sprintf ("\u0073\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f\u003a\u0025\u0073",_abb .String ()));if len (cmap ._cdaf )> 0{_eef =append (_eef ,_c .Sprintf ("\u0063\u006f\u0064\u0065\u0073\u0070\u0061\u0063\u0065\u0073\u003a\u0025\u0064",len (cmap ._cdaf )));};if len (cmap ._gc )> 0{_eef =append (_eef ,_c .Sprintf ("\u0063\u006fd\u0065\u0054\u006fU\u006e\u0069\u0063\u006f\u0064\u0065\u003a\u0025\u0064",len (cmap ._gc )));};return _c .Sprintf ("\u0043\u004d\u0041P\u007b\u0025\u0023\u0071\u0020\u0025\u0073\u007d",cmap ._ggc ,_g .Join (_eef ,"\u0020"));};type charRange struct{_ca CharCode ;_da CharCode ;};type cmapObject interface{};func _gcc (_eee string )(*CMap ,error ){_ffa ,_aaf :=_fc .Asset (_eee );if _aaf !=nil {return nil ,_aaf ;};return LoadCmapFromDataCID (_ffa );};func _deee (_gdgg []byte )*cMapParser {_fab :=cMapParser {};_ebea :=_cd .NewBuffer (_gdgg );_fab ._gef =_ef .NewReader (_ebea );return &_fab ;};const (_eec =4;MissingCodeRune ='\ufffd';MissingCodeString =string (MissingCodeRune ););type Codespace struct{NumBytes int ;Low CharCode ;High CharCode ;};func (cmap *CMap )Bytes ()[]byte {_gg .Log .Trace ("\u0063\u006d\u0061\u0070.B\u0079\u0074\u0065\u0073\u003a\u0020\u0063\u006d\u0061\u0070\u003d\u0025\u0073",cmap .String ());if len (cmap ._bdd )> 0{return cmap ._bdd ;};cmap ._bdd =[]byte (_g .Join ([]string {_gdc ,cmap .toBfData (),_ffd },"\u000a"));return cmap ._bdd ;};type cmapHexString struct{_cgf int ;_cab []byte ;};const (_dgeb ="\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f";_aceg ="\u0062e\u0067\u0069\u006e\u0063\u006d\u0061p";_edef ="\u0065n\u0064\u0063\u006d\u0061\u0070";_bfe ="\u0062\u0065\u0067\u0069nc\u006f\u0064\u0065\u0073\u0070\u0061\u0063\u0065\u0072\u0061\u006e\u0067\u0065";_bcb ="\u0065\u006e\u0064\u0063\u006f\u0064\u0065\u0073\u0070\u0061\u0063\u0065r\u0061\u006e\u0067\u0065";_dcag ="b\u0065\u0067\u0069\u006e\u0062\u0066\u0063\u0068\u0061\u0072";_cfcd ="\u0065n\u0064\u0062\u0066\u0063\u0068\u0061r";_aeb ="\u0062\u0065\u0067i\u006e\u0062\u0066\u0072\u0061\u006e\u0067\u0065";_bggc ="\u0065\u006e\u0064\u0062\u0066\u0072\u0061\u006e\u0067\u0065";_bddf ="\u0062\u0065\u0067\u0069\u006e\u0063\u0069\u0064\u0072\u0061\u006e\u0067\u0065";_aaed ="e\u006e\u0064\u0063\u0069\u0064\u0072\u0061\u006e\u0067\u0065";_cddd ="\u0075s\u0065\u0063\u006d\u0061\u0070";_fgc ="\u0043\u004d\u0061\u0070\u004e\u0061\u006d\u0065";_gda ="\u0043\u004d\u0061\u0070\u0054\u0079\u0070\u0065";_fde ="C\u004d\u0061\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e";);func _gcac (_egd cmapHexString )rune {_cfba :=_dcd (_egd );if _adb :=len (_cfba );_adb ==0{_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0068\u0065\u0078\u0054o\u0052\u0075\u006e\u0065\u002e\u0020\u0045\u0078p\u0065c\u0074\u0065\u0064\u0020\u0061\u0074\u0020\u006c\u0065\u0061\u0073\u0074\u0020\u006f\u006e\u0065\u0020\u0072u\u006e\u0065\u0020\u0073\u0068\u0065\u0078\u003d\u0025\u0023\u0076",_egd );return MissingCodeRune ;};if len (_cfba )> 1{_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0068\u0065\u0078\u0054\u006f\u0052\u0075\u006e\u0065\u002e\u0020\u0045\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0065\u0078\u0061\u0063\u0074\u006c\u0079\u0020\u006f\u006e\u0065\u0020\u0072\u0075\u006e\u0065\u0020\u0073\u0068\u0065\u0078\u003d\u0025\u0023v\u0020\u002d\u003e\u0020\u0025#\u0076",_egd ,_cfba );};return _cfba [0];};func (_feg *cMapParser )parseDict ()(cmapDict ,error ){_gg .Log .Trace ("\u0052\u0065\u0061\u0064\u0069\u006e\u0067\u0020\u0050\u0044\u0046\u0020D\u0069\u0063\u0074\u0021");_fdfa :=_bgc ();_ffb ,_ :=_feg ._gef .ReadByte ();if _ffb !='<'{return _fdfa ,ErrBadCMapDict ;};_ffb ,_ =_feg ._gef .ReadByte ();if _ffb !='<'{return _fdfa ,ErrBadCMapDict ;};for {_feg .skipSpaces ();_aaaa ,_dcagc :=_feg ._gef .Peek (2);if _dcagc !=nil {return _fdfa ,_dcagc ;};if (_aaaa [0]=='>')&&(_aaaa [1]=='>'){_feg ._gef .ReadByte ();_feg ._gef .ReadByte ();break ;};_aafc ,_dcagc :=_feg .parseName ();_gg .Log .Trace ("\u004be\u0079\u003a\u0020\u0025\u0073",_aafc .Name );if _dcagc !=nil {_gg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0052\u0065\u0074\u0075\u0072\u006e\u0069\u006e\u0067\u0020\u006e\u0061\u006d\u0065\u002e\u0020\u0065\u0072r=\u0025\u0076",_dcagc );return _fdfa ,_dcagc ;};_feg .skipSpaces ();_ddc ,_dcagc :=_feg .parseObject ();if _dcagc !=nil {return _fdfa ,_dcagc ;};_fdfa .Dict [_aafc .Name ]=_ddc ;_feg .skipSpaces ();_aaaa ,_dcagc =_feg ._gef .Peek (3);if _dcagc !=nil {return _fdfa ,_dcagc ;};if string (_aaaa )=="\u0064\u0065\u0066"{_feg ._gef .Discard (3);};};return _fdfa ,nil ;};func (_ecf *cMapParser )parseArray ()(cmapArray ,error ){_babf :=cmapArray {};_babf .Array =[]cmapObject {};_ecf ._gef .ReadByte ();for {_ecf .skipSpaces ();_bcfd ,_aggd :=_ecf ._gef .Peek (1);if _aggd !=nil {return _babf ,_aggd ;};if _bcfd [0]==']'{_ecf ._gef .ReadByte ();break ;};_eag ,_aggd :=_ecf .parseObject ();if _aggd !=nil {return _babf ,_aggd ;};_babf .Array =append (_babf .Array ,_eag );};return _babf ,nil ;};const (_dge =100;_gdc ="\u000a\u002f\u0043\u0049\u0044\u0049\u006e\u0069\u0074\u0020\u002f\u0050\u0072\u006fc\u0053\u0065\u0074\u0020\u0066\u0069\u006e\u0064\u0072es\u006fu\u0072c\u0065 \u0062\u0065\u0067\u0069\u006e\u000a\u0031\u0032\u0020\u0064\u0069\u0063\u0074\u0020\u0062\u0065\u0067\u0069n\u000a\u0062\u0065\u0067\u0069\u006e\u0063\u006d\u0061\u0070\n\u002f\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065m\u0049\u006e\u0066\u006f\u0020\u003c\u003c\u0020\u002f\u0052\u0065\u0067\u0069\u0073t\u0072\u0079\u0020\u0028\u0041\u0064\u006f\u0062\u0065\u0029\u0020\u002f\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067\u0020\u0028\u0055\u0043\u0053)\u0020\u002f\u0053\u0075\u0070p\u006c\u0065\u006d\u0065\u006et\u0020\u0030\u0020\u003e\u003e\u0020\u0064\u0065\u0066\u000a\u002f\u0043\u004d\u0061\u0070\u004e\u0061\u006d\u0065\u0020\u002f\u0041\u0064\u006f\u0062\u0065-\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0055\u0043\u0053\u0020\u0064\u0065\u0066\u000a\u002fC\u004d\u0061\u0070\u0054\u0079\u0070\u0065\u0020\u0032\u0020\u0064\u0065\u0066\u000a\u0031\u0020\u0062\u0065\u0067\u0069\u006e\u0063\u006f\u0064\u0065\u0073\u0070\u0061\u0063e\u0072\u0061n\u0067\u0065\n\u003c\u0030\u0030\u0030\u0030\u003e\u0020<\u0046\u0046\u0046\u0046\u003e\u000a\u0065\u006e\u0064\u0063\u006f\u0064\u0065\u0073\u0070\u0061\u0063\u0065r\u0061\u006e\u0067\u0065\u000a";_ffd ="\u0065\u006e\u0064\u0063\u006d\u0061\u0070\u000a\u0043\u004d\u0061\u0070\u004e\u0061\u006d\u0065\u0020\u0063ur\u0072e\u006e\u0074\u0064\u0069\u0063\u0074\u0020\u002f\u0043\u004d\u0061\u0070 \u0064\u0065\u0066\u0069\u006e\u0065\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0020\u0070\u006fp\u000a\u0065\u006e\u0064\u000a\u0065\u006e\u0064\u000a";);func LoadPredefinedCMap (name string )(*CMap ,error ){cmap ,_ga :=_gcc (name );if _ga !=nil {return nil ,_ga ;};if cmap ._ce ==""{cmap .computeInverseMappings ();return cmap ,nil ;};_eae ,_ga :=_gcc (cmap ._ce );if _ga !=nil {return nil ,_ga ;};for _aa ,_ggg :=range _eae ._ece {if _ ,_fce :=cmap ._ece [_aa ];!_fce {cmap ._ece [_aa ]=_ggg ;};};for _ ,_cf :=range _eae ._cdaf {cmap ._cdaf =append (cmap ._cdaf ,_cf );};cmap .computeInverseMappings ();return cmap ,nil ;};func (_bbdc *cMapParser )skipSpaces ()(int ,error ){_ccgb :=0;for {_gdbe ,_eceb :=_bbdc ._gef .Peek (1);if _eceb !=nil {return 0,_eceb ;};if _ea .IsWhiteSpace (_gdbe [0]){_bbdc ._gef .ReadByte ();_ccgb ++;}else {break ;};};return _ccgb ,nil ;};func (cmap *CMap )parseBfrange ()error {for {var _ada CharCode ;_efd ,_gdg :=cmap .parseObject ();if _gdg !=nil {if _gdg ==_d .EOF {break ;};return _gdg ;};switch _gfgd :=_efd .(type ){case cmapOperand :if _gfgd .Operand ==_bggc {return nil ;};return _be .New ("\u0075n\u0065x\u0070\u0065\u0063\u0074\u0065d\u0020\u006fp\u0065\u0072\u0061\u006e\u0064");case cmapHexString :_ada =_fdcg (_gfgd );default:return _be .New ("\u0075n\u0065x\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0074\u0079\u0070\u0065");};var _cefe CharCode ;_efd ,_gdg =cmap .parseObject ();if _gdg !=nil {if _gdg ==_d .EOF {break ;};return _gdg ;};switch _aca :=_efd .(type ){case cmapOperand :_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006d\u0063\u006f\u006d\u0070\u006c\u0065\u0074\u0065\u0020\u0062\u0066r\u0061\u006e\u0067\u0065\u0020\u0074\u0072i\u0070\u006c\u0065\u0074");return ErrBadCMap ;case cmapHexString :_cefe =_fdcg (_aca );default:_gg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0055\u006e\u0065\u0078\u0070e\u0063t\u0065d\u0020\u0074\u0079\u0070\u0065\u0020\u0025T",_efd );return ErrBadCMap ;};_efd ,_gdg =cmap .parseObject ();if _gdg !=nil {if _gdg ==_d .EOF {break ;};return _gdg ;};switch _fga :=_efd .(type ){case cmapArray :if len (_fga .Array )!=int (_cefe -_ada )+1{_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u006e\u0075\u006d\u0062\u0065r\u0020\u006f\u0066\u0020\u0069\u0074\u0065\u006d\u0073\u0020\u0069\u006e\u0020a\u0072\u0072\u0061\u0079");return ErrBadCMap ;};for _cae :=_ada ;_cae <=_cefe ;_cae ++{_fcgd :=_fga .Array [_cae -_ada ];_aede ,_fecb :=_fcgd .(cmapHexString );if !_fecb {return _be .New ("\u006e\u006f\u006e-h\u0065\u0078\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0069\u006e\u0020\u0061\u0072\u0072\u0061\u0079");};_bcf :=_dcd (_aede );cmap ._gc [_cae ]=string (_bcf );};case cmapHexString :_gcda :=_dcd (_fga );_dbc :=len (_gcda );for _bfc :=_ada ;_bfc <=_cefe ;_bfc ++{cmap ._gc [_bfc ]=string (_gcda );_gcda [_dbc -1]++;};default:_gg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0055\u006e\u0065\u0078\u0070e\u0063t\u0065d\u0020\u0074\u0079\u0070\u0065\u0020\u0025T",_efd );return ErrBadCMap ;};};return nil ;};func LoadCmapFromData (data []byte ,isSimple bool )(*CMap ,error ){_gg .Log .Trace ("\u004c\u006fa\u0064\u0043\u006d\u0061\u0070\u0046\u0072\u006f\u006d\u0044\u0061\u0074\u0061\u003a\u0020\u0069\u0073\u0053\u0069\u006d\u0070\u006ce=\u0025\u0074",isSimple );cmap :=_gcd (isSimple );cmap .cMapParser =_deee (data );_fb :=cmap .parse ();if _fb !=nil {return nil ,_fb ;};if len (cmap ._cdaf )==0{if cmap ._ce !=""{return cmap ,nil ;};_gg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0063\u006f\u0064\u0065\u0073\u0070\u0061\u0063\u0065\u0073\u002e\u0020\u0063\u006d\u0061p=\u0025\u0073",cmap );return nil ,ErrBadCMap ;};cmap .computeInverseMappings ();return cmap ,nil ;};func NewToUnicodeCMap (codeToRune map[CharCode ]rune )*CMap {_dc :=make (map[CharCode ]string ,len (codeToRune ));for _dcg ,_ged :=range codeToRune {_dc [_dcg ]=string (_ged );};cmap :=&CMap {_ggc :"\u0041d\u006fb\u0065\u002d\u0049\u0064\u0065n\u0074\u0069t\u0079\u002d\u0055\u0043\u0053",_bcd :2,_fa :16,_bd :CIDSystemInfo {Registry :"\u0041\u0064\u006fb\u0065",Ordering :"\u0055\u0043\u0053",Supplement :0},_cdaf :[]Codespace {{Low :0,High :0xffff}},_gc :_dc ,_dac :make (map[string ]CharCode ,len (codeToRune )),_ece :make (map[CharCode ]CharCode ,len (codeToRune )),_bb :make (map[CharCode ]CharCode ,len (codeToRune ))};cmap .computeInverseMappings ();return cmap ;};type cmapDict struct{Dict map[string ]cmapObject ;};func (_bgd *cMapParser )parseObject ()(cmapObject ,error ){_bgd .skipSpaces ();for {_afg ,_dbf :=_bgd ._gef .Peek (2);if _dbf !=nil {return nil ,_dbf ;};if _afg [0]=='%'{_bgd .parseComment ();_bgd .skipSpaces ();continue ;}else if _afg [0]=='/'{_dgdd ,_fefg :=_bgd .parseName ();return _dgdd ,_fefg ;}else if _afg [0]=='('{_fdcd ,_dccef :=_bgd .parseString ();return _fdcd ,_dccef ;}else if _afg [0]=='['{_fgbf ,_cfb :=_bgd .parseArray ();return _fgbf ,_cfb ;}else if (_afg [0]=='<')&&(_afg [1]=='<'){_agff ,_fed :=_bgd .parseDict ();return _agff ,_fed ;}else if _afg [0]=='<'{_ecce ,_gga :=_bgd .parseHexString ();return _ecce ,_gga ;}else if _ea .IsDecimalDigit (_afg [0])||(_afg [0]=='-'&&_ea .IsDecimalDigit (_afg [1])){_fea ,_dff :=_bgd .parseNumber ();if _dff !=nil {return nil ,_dff ;};return _fea ,nil ;}else {_dfb ,_bdg :=_bgd .parseOperand ();if _bdg !=nil {return nil ,_bdg ;};return _dfb ,nil ;};};};func (cmap *CMap )CIDToCharcode (cid CharCode )(CharCode ,bool ){_dgg ,_bff :=cmap ._bb [cid ];return _dgg ,_bff ;};func (_cdg *cMapParser )parseHexString ()(cmapHexString ,error ){_cdg ._gef .ReadByte ();_dceg :=[]byte ("\u0030\u0031\u0032\u003345\u0036\u0037\u0038\u0039\u0061\u0062\u0063\u0064\u0065\u0066\u0041\u0042\u0043\u0044E\u0046");_efc :=_cd .Buffer {};for {_cdg .skipSpaces ();_cge ,_dec :=_cdg ._gef .Peek (1);if _dec !=nil {return cmapHexString {},_dec ;};if _cge [0]=='>'{_cdg ._gef .ReadByte ();break ;};_cbcg ,_ :=_cdg ._gef .ReadByte ();if _cd .IndexByte (_dceg ,_cbcg )>=0{_efc .WriteByte (_cbcg );};};if _efc .Len ()%2==1{_gg .Log .Debug ("\u0070\u0061rs\u0065\u0048\u0065x\u0053\u0074\u0072\u0069ng:\u0020ap\u0070\u0065\u006e\u0064\u0069\u006e\u0067 '\u0030\u0027\u0020\u0074\u006f\u0020\u0025#\u0071",_efc .String ());_efc .WriteByte ('0');};_efac :=_efc .Len ()/2;_gdaf ,_ :=_bc .DecodeString (_efc .String ());return cmapHexString {_cgf :_efac ,_cab :_gdaf },nil ;};var (ErrBadCMap =_be .New ("\u0062\u0061\u0064\u0020\u0063\u006d\u0061\u0070");ErrBadCMapComment =_be .New ("c\u006f\u006d\u006d\u0065\u006e\u0074 \u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0073\u0074a\u0072\u0074\u0020w\u0069t\u0068\u0020\u0025");ErrBadCMapDict =_be .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0064\u0069\u0063\u0074"););func (cmap *CMap )parseCodespaceRange ()error {for {_aabe ,_fdf :=cmap .parseObject ();if _fdf !=nil {if _fdf ==_d .EOF {break ;};return _fdf ;};_bgg ,_bbf :=_aabe .(cmapHexString );if !_bbf {if _adg ,_dde :=_aabe .(cmapOperand );_dde {if _adg .Operand ==_bcb {return nil ;};return _be .New ("\u0075n\u0065x\u0070\u0065\u0063\u0074\u0065d\u0020\u006fp\u0065\u0072\u0061\u006e\u0064");};};_aabe ,_fdf =cmap .parseObject ();if _fdf !=nil {if _fdf ==_d .EOF {break ;};return _fdf ;};_fbf ,_bbf :=_aabe .(cmapHexString );if !_bbf {return _be .New ("\u006e\u006f\u006e-\u0068\u0065\u0078\u0020\u0068\u0069\u0067\u0068");};if len (_bgg ._cab )!=len (_fbf ._cab ){return _be .New ("\u0075\u006e\u0065\u0071\u0075\u0061\u006c\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066 \u0062\u0079\u0074\u0065\u0073\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065");};_ebb :=_fdcg (_bgg );_bbaa :=_fdcg (_fbf );if _bbaa < _ebb {_gg .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0042\u0061d\u0020\u0063\u006fd\u0065\u0073\u0070\u0061\u0063\u0065\u002e\u0020\u006cow\u003d\u0030\u0078%\u0030\u0032x\u0020\u0068\u0069\u0067\u0068\u003d0\u0078\u00250\u0032\u0078",_ebb ,_bbaa );return ErrBadCMap ;};_cff :=_fbf ._cgf ;_gca :=Codespace {NumBytes :_cff ,Low :_ebb ,High :_bbaa };cmap ._cdaf =append (cmap ._cdaf ,_gca );_gg .Log .Trace ("\u0043\u006f\u0064e\u0073\u0070\u0061\u0063e\u0020\u006c\u006f\u0077\u003a\u0020\u0030x\u0025\u0058\u002c\u0020\u0068\u0069\u0067\u0068\u003a\u0020\u0030\u0078\u0025\u0058",_ebb ,_bbaa );};if len (cmap ._cdaf )==0{_gg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0063\u006f\u0064\u0065\u0073\u0070\u0061\u0063\u0065\u0073\u0020\u0069\u006e\u0020\u0063ma\u0070\u002e");return ErrBadCMap ;};return nil ;};func NewCIDSystemInfo (obj _ea .PdfObject )(_efg CIDSystemInfo ,_cb error ){_fd ,_ge :=_ea .GetDict (obj );if !_ge {return CIDSystemInfo {},_ea .ErrTypeError ;};_cda ,_ge :=_ea .GetStringVal (_fd .Get ("\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079"));if !_ge {return CIDSystemInfo {},_ea .ErrTypeError ;};_gf ,_ge :=_ea .GetStringVal (_fd .Get ("\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067"));if !_ge {return CIDSystemInfo {},_ea .ErrTypeError ;};_ec ,_ge :=_ea .GetIntVal (_fd .Get ("\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074"));if !_ge {return CIDSystemInfo {},_ea .ErrTypeError ;};return CIDSystemInfo {Registry :_cda ,Ordering :_gf ,Supplement :_ec },nil ;};func (cmap *CMap )NBits ()int {return cmap ._fa };func (cmap *CMap )parse ()error {var _dgdc cmapObject ;for {_egb ,_gge :=cmap .parseObject ();if _gge !=nil {if _gge ==_d .EOF {break ;};_gg .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u004d\u0061\u0070\u003a\u0020\u0025\u0076",_gge );return _gge ;};switch _aaeb :=_egb .(type ){case cmapOperand :_fgg :=_aaeb ;switch _fgg .Operand {case _bfe :_fefe :=cmap .parseCodespaceRange ();if _fefe !=nil {return _fefe ;};case _bddf :_dda :=cmap .parseCIDRange ();if _dda !=nil {return _dda ;};case _dcag :_bde :=cmap .parseBfchar ();if _bde !=nil {return _bde ;};case _aeb :_fcda :=cmap .parseBfrange ();if _fcda !=nil {return _fcda ;};case _cddd :if _dgdc ==nil {_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0075\u0073\u0065\u0063m\u0061\u0070\u0020\u0077\u0069\u0074\u0068\u0020\u006e\u006f \u0061\u0072\u0067");return ErrBadCMap ;};_bab ,_fcdb :=_dgdc .(cmapName );if !_fcdb {_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0075\u0073\u0065\u0063\u006d\u0061\u0070\u0020\u0061\u0072\u0067\u0020\u006eo\u0074\u0020\u0061\u0020\u006e\u0061\u006de\u0020\u0025\u0023\u0076",_dgdc );return ErrBadCMap ;};cmap ._ce =_bab .Name ;case _dgeb :_fee :=cmap .parseSystemInfo ();if _fee !=nil {return _fee ;};};case cmapName :_fec :=_aaeb ;switch _fec .Name {case _dgeb :_bcc :=cmap .parseSystemInfo ();if _bcc !=nil {return _bcc ;};case _fgc :_fecg :=cmap .parseName ();if _fecg !=nil {return _fecg ;};case _gda :_ccf :=cmap .parseType ();if _ccf !=nil {return _ccf ;};case _fde :_ccad :=cmap .parseVersion ();if _ccad !=nil {return _ccad ;};};};_dgdc =_egb ;};return nil ;};func (_dgddf *cMapParser )parseOperand ()(cmapOperand ,error ){_bbef :=cmapOperand {};_eea :=_cd .Buffer {};for {_egae ,_age :=_dgddf ._gef .Peek (1);if _age !=nil {if _age ==_d .EOF {break ;};return _bbef ,_age ;};if _ea .IsDelimiter (_egae [0]){break ;};if _ea .IsWhiteSpace (_egae [0]){break ;};_dfg ,_ :=_dgddf ._gef .ReadByte ();_eea .WriteByte (_dfg );};if _eea .Len ()==0{return _bbef ,_c .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u006f\u0070\u0065\u0072\u0061\u006e\u0064\u0020\u0028\u0065\u006d\u0070\u0074\u0079\u0029");};_bbef .Operand =_eea .String ();return _bbef ,nil ;};func (cmap *CMap )Type ()int {return cmap ._bcd };type cMapParser struct{_gef *_ef .Reader };func _fddf (_fbfd ,_afe int )int {if _fbfd < _afe {return _fbfd ;};return _afe ;};func (cmap *CMap )parseType ()error {_efgf :=0;_ebge :=false ;for _gcg :=0;_gcg < 3&&!_ebge ;_gcg ++{_fbd ,_efe :=cmap .parseObject ();if _efe !=nil {return _efe ;};switch _cedd :=_fbd .(type ){case cmapOperand :switch _cedd .Operand {case "\u0064\u0065\u0066":_ebge =true ;default:_gg .Log .Error ("\u0070\u0061r\u0073\u0065\u0054\u0079\u0070\u0065\u003a\u0020\u0073\u0074\u0061\u0074\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u002e\u0020\u006f=%\u0023\u0076",_fbd );return ErrBadCMap ;};case cmapInt :_efgf =int (_cedd ._cedc );};};cmap ._bcd =_efgf ;return nil ;};func _gcd (_ba bool )*CMap {_gea :=16;if _ba {_gea =8;};return &CMap {_fa :_gea ,_ece :make (map[CharCode ]CharCode ),_bb :make (map[CharCode ]CharCode ),_gc :make (map[CharCode ]string ),_dac :make (map[string ]CharCode )};};type CharCode uint32 ;func (cmap *CMap )Stream ()(*_ea .PdfObjectStream ,error ){if cmap ._ag !=nil {return cmap ._ag ,nil ;};_cdfc ,_gdd :=_ea .MakeStream (cmap .Bytes (),_ea .NewFlateEncoder ());if _gdd !=nil {return nil ,_gdd ;};cmap ._ag =_cdfc ;return cmap ._ag ,nil ;};func _fac (_dcce string )string {_fef :=[]rune (_dcce );_ccb :=make ([]string ,len (_fef ));for _aed ,_cgc :=range _fef {_ccb [_aed ]=_c .Sprintf ("\u0025\u0030\u0034\u0078",_cgc );};return _c .Sprintf ("\u003c\u0025\u0073\u003e",_g .Join (_ccb ,""));};type cmapFloat struct{_fba float64 };type CIDSystemInfo struct{Registry string ;Ordering string ;Supplement int ;};func IsPredefinedCMap (name string )bool {return _fc .AssetExists (name )};func (cmap *CMap )CharcodeBytesToUnicode (data []byte )(string ,int ){_ad ,_faa :=cmap .BytesToCharcodes (data );if !_faa {_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0042\u0079\u0074\u0065s\u0054\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u002e\u0020\u004e\u006f\u0074\u0020\u0069n\u0020\u0063\u006f\u0064\u0065\u0073\u0070\u0061\u0063\u0065\u0073\u002e\u0020\u0064\u0061\u0074\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078]\u0020\u0063\u006d\u0061\u0070=\u0025\u0073",data ,cmap );return "",0;};_gd :=make ([]string ,len (_ad ));var _agc []CharCode ;for _bf ,_fcd :=range _ad {_fg ,_gedb :=cmap ._gc [_fcd ];if !_gedb {_agc =append (_agc ,_fcd );_fg =MissingCodeString ;};_gd [_bf ]=_fg ;};_bfa :=_g .Join (_gd ,"");if len (_agc )> 0{_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020C\u0068\u0061\u0072c\u006f\u0064\u0065\u0042y\u0074\u0065\u0073\u0054\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u002e\u0020\u004e\u006f\u0074\u0020\u0069\u006e\u0020\u006d\u0061\u0070\u002e\u000a"+"\u0009d\u0061t\u0061\u003d\u005b\u0025\u00200\u0032\u0078]\u003d\u0025\u0023\u0071\u000a"+"\u0009\u0063h\u0061\u0072\u0063o\u0064\u0065\u0073\u003d\u0025\u0030\u0032\u0078\u000a"+"\u0009\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u003d\u0025\u0064\u0020%\u0030\u0032\u0078\u000a"+"\u0009\u0075\u006e\u0069\u0063\u006f\u0064\u0065\u003d`\u0025\u0073\u0060\u000a"+"\u0009\u0063\u006d\u0061\u0070\u003d\u0025\u0073",data ,string (data ),_ad ,len (_agc ),_agc ,_bfa ,cmap );};return _bfa ,len (_agc );};func _bgc ()cmapDict {return cmapDict {Dict :map[string ]cmapObject {}}};func (_dcad *cMapParser )parseNumber ()(cmapObject ,error ){_cgbg ,_fdcf :=_ea .ParseNumber (_dcad ._gef );if _fdcf !=nil {return nil ,_fdcf ;};switch _fdfc :=_cgbg .(type ){case *_ea .PdfObjectFloat :return cmapFloat {float64 (*_fdfc )},nil ;case *_ea .PdfObjectInteger :return cmapInt {int64 (*_fdfc )},nil ;};return nil ,_c .Errorf ("\u0075n\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0054",_cgbg );};func (_dce *cMapParser )parseName ()(cmapName ,error ){_adab :="";_ggb :=false ;for {_cefc ,_cdc :=_dce ._gef .Peek (1);if _cdc ==_d .EOF {break ;};if _cdc !=nil {return cmapName {_adab },_cdc ;};if !_ggb {if _cefc [0]=='/'{_ggb =true ;_dce ._gef .ReadByte ();}else {_gg .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u004e\u0061\u006d\u0065\u0020\u0073\u0074a\u0072t\u0069n\u0067 \u0077\u0069\u0074\u0068\u0020\u0025\u0073\u0020\u0028\u0025\u0020\u0078\u0029",_cefc ,_cefc );return cmapName {_adab },_c .Errorf ("\u0069n\u0076a\u006c\u0069\u0064\u0020\u006ea\u006d\u0065:\u0020\u0028\u0025\u0063\u0029",_cefc [0]);};}else {if _ea .IsWhiteSpace (_cefc [0]){break ;}else if (_cefc [0]=='/')||(_cefc [0]=='[')||(_cefc [0]=='(')||(_cefc [0]==']')||(_cefc [0]=='<')||(_cefc [0]=='>'){break ;}else if _cefc [0]=='#'{_dbd ,_dgaf :=_dce ._gef .Peek (3);if _dgaf !=nil {return cmapName {_adab },_dgaf ;};_dce ._gef .Discard (3);_bdgg ,_dgaf :=_bc .DecodeString (string (_dbd [1:3]));if _dgaf !=nil {return cmapName {_adab },_dgaf ;};_adab +=string (_bdgg );}else {_gfa ,_ :=_dce ._gef .ReadByte ();_adab +=string (_gfa );};};};return cmapName {_adab },nil ;};type CMap struct{*cMapParser ;_ggc string ;_fa int ;_bcd int ;_a string ;_ce string ;_bd CIDSystemInfo ;_cdaf []Codespace ;_ece map[CharCode ]CharCode ;_bb map[CharCode ]CharCode ;_gc map[CharCode ]string ;_dac map[string ]CharCode ;_bdd []byte ;_ag *_ea .PdfObjectStream ;};type cmapString struct{String string ;};func (cmap *CMap )CharcodeToUnicode (code CharCode )(string ,bool ){if _ffc ,_gbd :=cmap ._gc [code ];_gbd {return _ffc ,true ;};return MissingCodeString ,false ;};func _dcd (_fbg cmapHexString )[]rune {if len (_fbg ._cab )==1{return []rune {rune (_fbg ._cab [0])};};_fdb :=_fbg ._cab ;if len (_fdb )%2!=0{_fdb =append (_fdb ,0);_gg .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0068\u0065\u0078\u0054\u006f\u0052\u0075\u006e\u0065\u0073\u002e\u0020\u0050\u0061\u0064\u0064\u0069\u006e\u0067\u0020\u0073\u0068\u0065\u0078\u003d\u0025#\u0076\u0020\u0074\u006f\u0020\u0025\u002b\u0076",_fbg ,_fdb );};_decc :=len (_fdb )>>1;_agd :=make ([]uint16 ,_decc );for _fadc :=0;_fadc < _decc ;_fadc ++{_agd [_fadc ]=uint16 (_fdb [_fadc <<1])<<8+uint16 (_fdb [_fadc <<1+1]);};_dgafg :=_b .Decode (_agd );return _dgafg ;};func LoadCmapFromDataCID (data []byte )(*CMap ,error ){return LoadCmapFromData (data ,false )};func (cmap *CMap )inCodespace (_dag CharCode ,_fdd int )bool {for _ ,_eba :=range cmap ._cdaf {if _eba .Low <=_dag &&_dag <=_eba .High &&_fdd ==_eba .NumBytes {return true ;};};return false ;};func (cmap *CMap )matchCode (_bg []byte )(_eda CharCode ,_cbdf int ,_beb bool ){for _fcc :=0;_fcc < _eec ;_fcc ++{if _fcc < len (_bg ){_eda =_eda <<8|CharCode (_bg [_fcc ]);_cbdf ++;};_beb =cmap .inCodespace (_eda ,_fcc +1);if _beb {return _eda ,_cbdf ,true ;};};_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0063o\u0064\u0065\u0073\u0070\u0061\u0063\u0065\u0020m\u0061t\u0063\u0068\u0065\u0073\u0020\u0062\u0079\u0074\u0065\u0073\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d=\u0025\u0023\u0071\u0020\u0063\u006d\u0061\u0070\u003d\u0025\u0073",_bg ,string (_bg ),cmap );return 0,0,false ;};func (cmap *CMap )toBfData ()string {if len (cmap ._gc )==0{return "";};_fcef :=make ([]CharCode ,0,len (cmap ._gc ));for _bfg :=range cmap ._gc {_fcef =append (_fcef ,_bfg );};_f .Slice (_fcef ,func (_aaa ,_cdd int )bool {return _fcef [_aaa ]< _fcef [_cdd ]});var _de []charRange ;_edc :=charRange {_fcef [0],_fcef [0]};_dgf :=cmap ._gc [_fcef [0]];for _ ,_ced :=range _fcef [1:]{_ae :=cmap ._gc [_ced ];if _ced ==_edc ._da +1&&_dae (_ae )==_dae (_dgf )+1{_edc ._da =_ced ;}else {_de =append (_de ,_edc );_edc ._ca ,_edc ._da =_ced ,_ced ;};_dgf =_ae ;};_de =append (_de ,_edc );var _ecc []CharCode ;var _ggf []fbRange ;for _ ,_fcg :=range _de {if _fcg ._ca ==_fcg ._da {_ecc =append (_ecc ,_fcg ._ca );}else {_ggf =append (_ggf ,fbRange {_eb :_fcg ._ca ,_ff :_fcg ._da ,_eg :cmap ._gc [_fcg ._ca ]});};};_gg .Log .Trace ("\u0063\u0068ar\u0052\u0061\u006eg\u0065\u0073\u003d\u0025d f\u0062Ch\u0061\u0072\u0073\u003d\u0025\u0064\u0020fb\u0052\u0061\u006e\u0067\u0065\u0073\u003d%\u0064",len (_de ),len (_ecc ),len (_ggf ));var _ebc []string ;if len (_ecc )> 0{_geg :=(len (_ecc )+_dge -1)/_dge ;for _def :=0;_def < _geg ;_def ++{_fe :=_fddf (len (_ecc )-_def *_dge ,_dge );_ebc =append (_ebc ,_c .Sprintf ("\u0025\u0064\u0020\u0062\u0065\u0067\u0069\u006e\u0062f\u0063\u0068\u0061\u0072",_fe ));for _agg :=0;_agg < _fe ;_agg ++{_aab :=_ecc [_def *_dge +_agg ];_eaf :=cmap ._gc [_aab ];_ebc =append (_ebc ,_c .Sprintf ("\u003c%\u0030\u0034\u0078\u003e\u0020\u0025s",_aab ,_fac (_eaf )));};_ebc =append (_ebc ,"\u0065n\u0064\u0062\u0066\u0063\u0068\u0061r");};};if len (_ggf )> 0{_acc :=(len (_ggf )+_dge -1)/_dge ;for _aba :=0;_aba < _acc ;_aba ++{_agf :=_fddf (len (_ggf )-_aba *_dge ,_dge );_ebc =append (_ebc ,_c .Sprintf ("\u0025d\u0020b\u0065\u0067\u0069\u006e\u0062\u0066\u0072\u0061\u006e\u0067\u0065",_agf ));for _df :=0;_df < _agf ;_df ++{_dga :=_ggf [_aba *_dge +_df ];_ebc =append (_ebc ,_c .Sprintf ("\u003c%\u00304\u0078\u003e\u003c\u0025\u0030\u0034\u0078\u003e\u0020\u0025\u0073",_dga ._eb ,_dga ._ff ,_fac (_dga ._eg )));};_ebc =append (_ebc ,"\u0065\u006e\u0064\u0062\u0066\u0072\u0061\u006e\u0067\u0065");};};return _g .Join (_ebc ,"\u000a");};func _fdcg (_gbe cmapHexString )CharCode {_gbf :=CharCode (0);for _ ,_deb :=range _gbe ._cab {_gbf <<=8;_gbf |=CharCode (_deb );};return _gbf ;};