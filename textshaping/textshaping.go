//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package textshaping ;import (_a "github.com/unidoc/garabic";_gf "golang.org/x/text/unicode/bidi";_gc "strings";);

// ArabicShape returns shaped arabic glyphs string.
func ArabicShape (text string )(string ,error ){_f :=_gf .Paragraph {};_f .SetString (text );_ga ,_c :=_f .Order ();if _c !=nil {return "",_c ;};for _gd :=0;_gd < _ga .NumRuns ();_gd ++{_fg :=_ga .Run (_gd );_b :=_fg .String ();if _fg .Direction ()==_gf .RightToLeft {var (_cc =_a .Shape (_b );
_gcg =[]rune (_cc );_e =make ([]rune ,len (_gcg )););_af :=0;for _ea :=len (_gcg )-1;_ea >=0;_ea --{_e [_af ]=_gcg [_ea ];_af ++;};_b =string (_e );text =_gc .Replace (text ,_gc .TrimSpace (_fg .String ()),_b ,1);};};return text ,nil ;};