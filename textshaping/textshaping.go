//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package textshaping ;import (_e "github.com/unidoc/garabic";_bb "golang.org/x/text/unicode/bidi";_b "strings";);

// ArabicShape returns shaped arabic glyphs string.
func ArabicShape (text string )(string ,error ){_g :=_bb .Paragraph {};_g .SetString (text );_bg ,_a :=_g .Order ();if _a !=nil {return "",_a ;};for _de :=0;_de < _bg .NumRuns ();_de ++{_f :=_bg .Run (_de );_ad :=_f .String ();if _f .Direction ()==_bb .RightToLeft {var (_eg =_e .Shape (_ad );
_ge =[]rune (_eg );_c =make ([]rune ,len (_ge )););_dea :=0;for _fg :=len (_ge )-1;_fg >=0;_fg --{_c [_dea ]=_ge [_fg ];_dea ++;};_ad =string (_c );text =_b .Replace (text ,_b .TrimSpace (_f .String ()),_ad ,1);};};return text ,nil ;};