//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package textshaping ;import (_b "github.com/unidoc/garabic";_f "golang.org/x/text/unicode/bidi";_g "strings";);

// ArabicShape returns shaped arabic glyphs string.
func ArabicShape (text string )(string ,error ){_ab :=_f .Paragraph {};_ab .SetString (text );_e ,_bd :=_ab .Order ();if _bd !=nil {return "",_bd ;};for _aa :=0;_aa < _e .NumRuns ();_aa ++{_fg :=_e .Run (_aa );_d :=_fg .String ();if _fg .Direction ()==_f .RightToLeft {var (_fgf =_b .Shape (_d );
_de =[]rune (_fgf );_bg =make ([]rune ,len (_de )););_ea :=0;for _gb :=len (_de )-1;_gb >=0;_gb --{_bg [_ea ]=_de [_gb ];_ea ++;};_d =string (_bg );text =_g .Replace (text ,_g .TrimSpace (_fg .String ()),_d ,1);};};return text ,nil ;};