//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package textshaping ;import (_c "github.com/unidoc/garabic";_ca "golang.org/x/text/unicode/bidi";_f "strings";);

// ArabicShape returns shaped arabic glyphs string.
func ArabicShape (text string )(string ,error ){_b :=_ca .Paragraph {};_b .SetString (text );_ff ,_g :=_b .Order ();if _g !=nil {return "",_g ;};for _e :=0;_e < _ff .NumRuns ();_e ++{_bf :=_ff .Run (_e );_cc :=_bf .String ();if _bf .Direction ()==_ca .RightToLeft {var (_be =_c .Shape (_cc );
_cg =[]rune (_be );_gf =make ([]rune ,len (_cg )););_ed :=0;for _fff :=len (_cg )-1;_fff >=0;_fff --{_gf [_ed ]=_cg [_fff ];_ed ++;};_cc =string (_gf );text =_f .Replace (text ,_f .TrimSpace (_bf .String ()),_cc ,1);};};return text ,nil ;};