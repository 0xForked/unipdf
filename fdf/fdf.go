//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package fdf provides support for loading form field data from Form Field Data (FDF) files.
package fdf ;import (_db "bufio";_da "bytes";_ef "encoding/hex";_f "errors";_c "fmt";_df "github.com/unidoc/unipdf/v3/common";_fg "github.com/unidoc/unipdf/v3/core";_dag "io";_ff "os";_ed "regexp";_cd "sort";_d "strconv";_e "strings";);var _bb =_ed .MustCompile ("\u005e\u005b\u005c\u002b\u002d\u002e\u005d\u002a\u0028\u005b\u0030\u002d9\u002e\u005d\u002b\u0029");
func (_cbd *fdfParser )skipComments ()error {if _ ,_ebb :=_cbd .skipSpaces ();_ebb !=nil {return _ebb ;};_acff :=true ;for {_fce ,_gfdd :=_cbd ._cbe .Peek (1);if _gfdd !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0025\u0073",_gfdd .Error ());
return _gfdd ;};if _acff &&_fce [0]!='%'{return nil ;};_acff =false ;if (_fce [0]!='\r')&&(_fce [0]!='\n'){_cbd ._cbe .ReadByte ();}else {break ;};};return _cbd .skipComments ();};var _ddb =_ed .MustCompile ("\u0028\u005c\u0064\u002b)\\\u0073\u002b\u0028\u005c\u0064\u002b\u0029\u005c\u0073\u002b\u006f\u0062\u006a");


// Root returns the Root of the FDF document.
func (_cbbf *fdfParser )Root ()(*_fg .PdfObjectDictionary ,error ){if _cbbf ._feg !=nil {if _gddca ,_bfbd :=_cbbf .trace (_cbbf ._feg .Get ("\u0052\u006f\u006f\u0074")).(*_fg .PdfObjectDictionary );_bfbd {if _deab ,_bgd :=_cbbf .trace (_gddca .Get ("\u0046\u0044\u0046")).(*_fg .PdfObjectDictionary );
_bgd {return _deab ,nil ;};};};var _dgf []int64 ;for _eda :=range _cbbf ._acf {_dgf =append (_dgf ,_eda );};_cd .Slice (_dgf ,func (_cbba ,_dad int )bool {return _dgf [_cbba ]< _dgf [_dad ]});for _ ,_bcd :=range _dgf {_gbcb :=_cbbf ._acf [_bcd ];if _bgf ,_efa :=_cbbf .trace (_gbcb ).(*_fg .PdfObjectDictionary );
_efa {if _ceaec ,_ceda :=_cbbf .trace (_bgf .Get ("\u0046\u0044\u0046")).(*_fg .PdfObjectDictionary );_ceda {return _ceaec ,nil ;};};};return nil ,_f .New ("\u0046\u0044\u0046\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};func _bde (_fgg string )(_fg .PdfObjectReference ,error ){_adg :=_fg .PdfObjectReference {};
_ec :=_cdg .FindStringSubmatch (_fgg );if len (_ec )< 3{_df .Log .Debug ("\u0045\u0072\u0072or\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065");return _adg ,_f .New ("\u0075n\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0070\u0061r\u0073e\u0020r\u0065\u0066\u0065\u0072\u0065\u006e\u0063e");
};_becf ,_bgg :=_d .Atoi (_ec [1]);if _bgg !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070a\u0072\u0073\u0069n\u0067\u0020\u006fb\u006a\u0065c\u0074\u0020\u006e\u0075\u006d\u0062e\u0072 '\u0025\u0073\u0027\u0020\u002d\u0020\u0055\u0073\u0069\u006e\u0067\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u0075\u006d\u0020\u003d\u0020\u0030",_ec [1]);
return _adg ,nil ;};_adg .ObjectNumber =int64 (_becf );_aebf ,_bgg :=_d .Atoi (_ec [2]);if _bgg !=nil {_df .Log .Debug ("\u0045\u0072r\u006f\u0072\u0020\u0070\u0061r\u0073\u0069\u006e\u0067\u0020g\u0065\u006e\u0065\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0027\u0025\u0073\u0027\u0020\u002d\u0020\u0055\u0073\u0069\u006e\u0067\u0020\u0067\u0065\u006e\u0020\u003d\u0020\u0030",_ec [2]);
return _adg ,nil ;};_adg .GenerationNumber =int64 (_aebf );return _adg ,nil ;};func (_caa *fdfParser )parseDict ()(*_fg .PdfObjectDictionary ,error ){_df .Log .Trace ("\u0052\u0065\u0061\u0064\u0069\u006e\u0067\u0020\u0046\u0044\u0046\u0020D\u0069\u0063\u0074\u0021");
_fcde :=_fg .MakeDict ();_gbc ,_ :=_caa ._cbe .ReadByte ();if _gbc !='<'{return nil ,_f .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0064\u0069\u0063\u0074");};_gbc ,_ =_caa ._cbe .ReadByte ();if _gbc !='<'{return nil ,_f .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0064\u0069\u0063\u0074");
};for {_caa .skipSpaces ();_caa .skipComments ();_bfa ,_eeb :=_caa ._cbe .Peek (2);if _eeb !=nil {return nil ,_eeb ;};_df .Log .Trace ("D\u0069c\u0074\u0020\u0070\u0065\u0065\u006b\u003a\u0020%\u0073\u0020\u0028\u0025 x\u0029\u0021",string (_bfa ),string (_bfa ));
if (_bfa [0]=='>')&&(_bfa [1]=='>'){_df .Log .Trace ("\u0045\u004f\u0046\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");_caa ._cbe .ReadByte ();_caa ._cbe .ReadByte ();break ;};_df .Log .Trace ("\u0050a\u0072s\u0065\u0020\u0074\u0068\u0065\u0020\u006e\u0061\u006d\u0065\u0021");
_fdb ,_eeb :=_caa .parseName ();_df .Log .Trace ("\u004be\u0079\u003a\u0020\u0025\u0073",_fdb );if _eeb !=nil {_df .Log .Debug ("E\u0052\u0052\u004f\u0052\u0020\u0052e\u0074\u0075\u0072\u006e\u0069\u006e\u0067\u0020\u006ea\u006d\u0065\u0020e\u0072r\u0020\u0025\u0073",_eeb );
return nil ,_eeb ;};if len (_fdb )> 4&&_fdb [len (_fdb )-4:]=="\u006e\u0075\u006c\u006c"{_bbf :=_fdb [0:len (_fdb )-4];_df .Log .Debug ("\u0054\u0061\u006b\u0069n\u0067\u0020\u0063\u0061\u0072\u0065\u0020\u006f\u0066\u0020n\u0075l\u006c\u0020\u0062\u0075\u0067\u0020\u0028%\u0073\u0029",_fdb );
_df .Log .Debug ("\u004e\u0065\u0077\u0020ke\u0079\u0020\u0022\u0025\u0073\u0022\u0020\u003d\u0020\u006e\u0075\u006c\u006c",_bbf );_caa .skipSpaces ();_cbg ,_ :=_caa ._cbe .Peek (1);if _cbg [0]=='/'{_fcde .Set (_bbf ,_fg .MakeNull ());continue ;};};_caa .skipSpaces ();
_gdee ,_eeb :=_caa .parseObject ();if _eeb !=nil {return nil ,_eeb ;};_fcde .Set (_fdb ,_gdee );_df .Log .Trace ("\u0064\u0069\u0063\u0074\u005b\u0025\u0073\u005d\u0020\u003d\u0020\u0025\u0073",_fdb ,_gdee .String ());};_df .Log .Trace ("\u0072\u0065\u0074\u0075rn\u0069\u006e\u0067\u0020\u0046\u0044\u0046\u0020\u0044\u0069\u0063\u0074\u0021");
return _fcde ,nil ;};var _aca =_ed .MustCompile ("\u0025\u0025\u0045O\u0046");func (_daga *fdfParser )trace (_aadg _fg .PdfObject )_fg .PdfObject {switch _abc :=_aadg .(type ){case *_fg .PdfObjectReference :_acdf ,_bdb :=_daga ._acf [_abc .ObjectNumber ].(*_fg .PdfIndirectObject );
if _bdb {return _acdf .PdfObject ;};_df .Log .Debug ("\u0054\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");return nil ;case *_fg .PdfIndirectObject :return _abc .PdfObject ;};return _aadg ;};var _ccf =_ed .MustCompile ("\u005e\u005b\u005c+-\u002e\u005d\u002a\u0028\u005b\u0030\u002d\u0039\u002e]\u002b)\u0065[\u005c+\u002d\u002e\u005d\u002a\u0028\u005b\u0030\u002d\u0039\u002e\u005d\u002b\u0029");
func (_fcb *fdfParser )parseString ()(*_fg .PdfObjectString ,error ){_fcb ._cbe .ReadByte ();var _gfdb _da .Buffer ;_bdc :=1;for {_fgc ,_aeb :=_fcb ._cbe .Peek (1);if _aeb !=nil {return _fg .MakeString (_gfdb .String ()),_aeb ;};if _fgc [0]=='\\'{_fcb ._cbe .ReadByte ();
_ea ,_cea :=_fcb ._cbe .ReadByte ();if _cea !=nil {return _fg .MakeString (_gfdb .String ()),_cea ;};if _fg .IsOctalDigit (_ea ){_cgd ,_bcb :=_fcb ._cbe .Peek (2);if _bcb !=nil {return _fg .MakeString (_gfdb .String ()),_bcb ;};var _dec []byte ;_dec =append (_dec ,_ea );
for _ ,_ebe :=range _cgd {if _fg .IsOctalDigit (_ebe ){_dec =append (_dec ,_ebe );}else {break ;};};_fcb ._cbe .Discard (len (_dec )-1);_df .Log .Trace ("\u004e\u0075\u006d\u0065ri\u0063\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0022\u0025\u0073\u0022",_dec );
_gce ,_bcb :=_d .ParseUint (string (_dec ),8,32);if _bcb !=nil {return _fg .MakeString (_gfdb .String ()),_bcb ;};_gfdb .WriteByte (byte (_gce ));continue ;};switch _ea {case 'n':_gfdb .WriteRune ('\n');case 'r':_gfdb .WriteRune ('\r');case 't':_gfdb .WriteRune ('\t');
case 'b':_gfdb .WriteRune ('\b');case 'f':_gfdb .WriteRune ('\f');case '(':_gfdb .WriteRune ('(');case ')':_gfdb .WriteRune (')');case '\\':_gfdb .WriteRune ('\\');};continue ;}else if _fgc [0]=='('{_bdc ++;}else if _fgc [0]==')'{_bdc --;if _bdc ==0{_fcb ._cbe .ReadByte ();
break ;};};_cbf ,_ :=_fcb ._cbe .ReadByte ();_gfdb .WriteByte (_cbf );};return _fg .MakeString (_gfdb .String ()),nil ;};func (_afb *fdfParser )seekFdfVersionTopDown ()(int ,int ,error ){_afb ._bfb .Seek (0,_dag .SeekStart );_afb ._cbe =_db .NewReader (_afb ._bfb );
_edg :=20;_gfb :=make ([]byte ,_edg );for {_dab ,_gdba :=_afb ._cbe .ReadByte ();if _gdba !=nil {if _gdba ==_dag .EOF {break ;}else {return 0,0,_gdba ;};};if _fg .IsDecimalDigit (_dab )&&_gfb [_edg -1]=='.'&&_fg .IsDecimalDigit (_gfb [_edg -2])&&_gfb [_edg -3]=='-'&&_gfb [_edg -4]=='F'&&_gfb [_edg -5]=='D'&&_gfb [_edg -6]=='P'{_dcf :=int (_gfb [_edg -2]-'0');
_ecfb :=int (_dab -'0');return _dcf ,_ecfb ,nil ;};_gfb =append (_gfb [1:_edg ],_dab );};return 0,0,_f .New ("\u0076\u0065\u0072\u0073\u0069\u006f\u006e\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};func (_adf *fdfParser )parseFdfVersion ()(int ,int ,error ){_adf ._bfb .Seek (0,_dag .SeekStart );
_bfae :=20;_bggb :=make ([]byte ,_bfae );_adf ._bfb .Read (_bggb );_caae :=_egd .FindStringSubmatch (string (_bggb ));if len (_caae )< 3{_faa ,_eged ,_dc :=_adf .seekFdfVersionTopDown ();if _dc !=nil {_df .Log .Debug ("F\u0061\u0069\u006c\u0065\u0064\u0020\u0072\u0065\u0063\u006f\u0076\u0065\u0072\u0079\u0020\u002d\u0020\u0075n\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0066\u0069nd\u0020\u0076\u0065r\u0073i\u006f\u006e");
return 0,0,_dc ;};return _faa ,_eged ,nil ;};_bag ,_dcg :=_d .Atoi (_caae [1]);if _dcg !=nil {return 0,0,_dcg ;};_ecb ,_dcg :=_d .Atoi (_caae [2]);if _dcg !=nil {return 0,0,_dcg ;};_df .Log .Debug ("\u0046\u0064\u0066\u0020\u0076\u0065\u0072\u0073\u0069\u006f\u006e\u0020%\u0064\u002e\u0025\u0064",_bag ,_ecb );
return _bag ,_ecb ,nil ;};func (_ae *fdfParser )getFileOffset ()int64 {_gfd ,_ :=_ae ._bfb .Seek (0,_dag .SeekCurrent );_gfd -=int64 (_ae ._cbe .Buffered ());return _gfd ;};func (_ffgf *fdfParser )readComment ()(string ,error ){var _acd _da .Buffer ;_ ,_fa :=_ffgf .skipSpaces ();
if _fa !=nil {return _acd .String (),_fa ;};_eec :=true ;for {_fb ,_bgbg :=_ffgf ._cbe .Peek (1);if _bgbg !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0025\u0073",_bgbg .Error ());return _acd .String (),_bgbg ;};if _eec &&_fb [0]!='%'{return _acd .String (),_f .New ("c\u006f\u006d\u006d\u0065\u006e\u0074 \u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0073\u0074a\u0072\u0074\u0020w\u0069t\u0068\u0020\u0025");
};_eec =false ;if (_fb [0]!='\r')&&(_fb [0]!='\n'){_ffef ,_ :=_ffgf ._cbe .ReadByte ();_acd .WriteByte (_ffef );}else {break ;};};return _acd .String (),nil ;};func (_bda *fdfParser )seekToEOFMarker (_fege int64 )error {_gae :=int64 (0);_gaee :=int64 (1000);
for _gae < _fege {if _fege <=(_gaee +_gae ){_gaee =_fege -_gae ;};_ ,_efb :=_bda ._bfb .Seek (-_gae -_gaee ,_dag .SeekEnd );if _efb !=nil {return _efb ;};_aac :=make ([]byte ,_gaee );_bda ._bfb .Read (_aac );_df .Log .Trace ("\u004c\u006f\u006f\u006bi\u006e\u0067\u0020\u0066\u006f\u0072\u0020\u0045\u004f\u0046 \u006da\u0072\u006b\u0065\u0072\u003a\u0020\u0022%\u0073\u0022",string (_aac ));
_beca :=_aca .FindAllStringIndex (string (_aac ),-1);if _beca !=nil {_fag :=_beca [len (_beca )-1];_df .Log .Trace ("\u0049\u006e\u0064\u003a\u0020\u0025\u0020\u0064",_beca );_bda ._bfb .Seek (-_gae -_gaee +int64 (_fag [0]),_dag .SeekEnd );return nil ;
};_df .Log .Debug ("\u0057\u0061\u0072\u006e\u0069\u006eg\u003a\u0020\u0045\u004f\u0046\u0020\u006d\u0061\u0072\u006b\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064\u0021\u0020\u002d\u0020\u0063\u006f\u006e\u0074\u0069\u006e\u0075\u0065\u0020s\u0065e\u006b\u0069\u006e\u0067");
_gae +=_gaee ;};_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0045\u004f\u0046\u0020\u006d\u0061\u0072\u006be\u0072 \u0077\u0061\u0073\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e");return _f .New ("\u0045\u004f\u0046\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
};func (_fd *fdfParser )setFileOffset (_bc int64 ){_fd ._bfb .Seek (_bc ,_dag .SeekStart );_fd ._cbe =_db .NewReader (_fd ._bfb );};func _gda (_bdg _dag .ReadSeeker )(*fdfParser ,error ){_geba :=&fdfParser {};_geba ._bfb =_bdg ;_geba ._acf =map[int64 ]_fg .PdfObject {};
_dege ,_afg ,_fcag :=_geba .parseFdfVersion ();if _fcag !=nil {_df .Log .Error ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0070\u0061\u0072\u0073\u0065\u0020\u0076e\u0072\u0073\u0069o\u006e:\u0020\u0025\u0076",_fcag );return nil ,_fcag ;};_geba ._ace =_dege ;
_geba ._dg =_afg ;_fcag =_geba .parse ();return _geba ,_fcag ;};var _egd =_ed .MustCompile ("\u0025F\u0044F\u002d\u0028\u005c\u0064\u0029\u005c\u002e\u0028\u005c\u0064\u0029");

// LoadFromPath loads FDF form data from file path `fdfPath`.
func LoadFromPath (fdfPath string )(*Data ,error ){_bg ,_de :=_ff .Open (fdfPath );if _de !=nil {return nil ,_de ;};defer _bg .Close ();return Load (_bg );};func (_gdd *fdfParser )parseHexString ()(*_fg .PdfObjectString ,error ){_gdd ._cbe .ReadByte ();
var _cdga _da .Buffer ;for {_efd ,_ccff :=_gdd ._cbe .Peek (1);if _ccff !=nil {return _fg .MakeHexString (""),_ccff ;};if _efd [0]=='>'{_gdd ._cbe .ReadByte ();break ;};_ebc ,_ :=_gdd ._cbe .ReadByte ();if !_fg .IsWhiteSpace (_ebc ){_cdga .WriteByte (_ebc );
};};if _cdga .Len ()%2==1{_cdga .WriteRune ('0');};_deg ,_fed :=_ef .DecodeString (_cdga .String ());if _fed !=nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0068\u0065\u0078\u0020\u0073\u0074r\u0069\u006e\u0067\u003a\u0020\u0027\u0025\u0073\u0027 \u002d\u0020\u0072\u0065\u0074\u0075\u0072\u006e\u0069\u006e\u0067\u0020\u0061n\u0020\u0065\u006d\u0070\u0074\u0079 \u0073\u0074\u0072i\u006e\u0067",_cdga .String ());
return _fg .MakeHexString (""),nil ;};return _fg .MakeHexString (string (_deg )),nil ;};func (_geg *fdfParser )parseName ()(_fg .PdfObjectName ,error ){var _aaa _da .Buffer ;_gbf :=false ;for {_efg ,_ebg :=_geg ._cbe .Peek (1);if _ebg ==_dag .EOF {break ;
};if _ebg !=nil {return _fg .PdfObjectName (_aaa .String ()),_ebg ;};if !_gbf {if _efg [0]=='/'{_gbf =true ;_geg ._cbe .ReadByte ();}else if _efg [0]=='%'{_geg .readComment ();_geg .skipSpaces ();}else {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020N\u0061\u006d\u0065\u0020\u0073\u0074\u0061\u0072\u0074\u0069\u006e\u0067\u0020w\u0069\u0074\u0068\u0020\u0025\u0073\u0020(\u0025\u0020\u0078\u0029",_efg ,_efg );
return _fg .PdfObjectName (_aaa .String ()),_c .Errorf ("\u0069n\u0076a\u006c\u0069\u0064\u0020\u006ea\u006d\u0065:\u0020\u0028\u0025\u0063\u0029",_efg [0]);};}else {if _fg .IsWhiteSpace (_efg [0]){break ;}else if (_efg [0]=='/')||(_efg [0]=='[')||(_efg [0]=='(')||(_efg [0]==']')||(_efg [0]=='<')||(_efg [0]=='>'){break ;
}else if _efg [0]=='#'{_dgc ,_bec :=_geg ._cbe .Peek (3);if _bec !=nil {return _fg .PdfObjectName (_aaa .String ()),_bec ;};_geg ._cbe .Discard (3);_gbe ,_bec :=_ef .DecodeString (string (_dgc [1:3]));if _bec !=nil {return _fg .PdfObjectName (_aaa .String ()),_bec ;
};_aaa .Write (_gbe );}else {_eee ,_ :=_geg ._cbe .ReadByte ();_aaa .WriteByte (_eee );};};};return _fg .PdfObjectName (_aaa .String ()),nil ;};

// FieldDictionaries returns a map of field names to field dictionaries.
func (fdf *Data )FieldDictionaries ()(map[string ]*_fg .PdfObjectDictionary ,error ){_bgb :=map[string ]*_fg .PdfObjectDictionary {};for _gf :=0;_gf < fdf ._fc .Len ();_gf ++{_gg ,_ag :=_fg .GetDict (fdf ._fc .Get (_gf ));if _ag {_ffe ,_ :=_fg .GetString (_gg .Get ("\u0054"));
if _ffe !=nil {_bgb [_ffe .Str ()]=_gg ;};};};return _bgb ,nil ;};func (_beb *fdfParser )parseBool ()(_fg .PdfObjectBool ,error ){_fad ,_fada :=_beb ._cbe .Peek (4);if _fada !=nil {return _fg .PdfObjectBool (false ),_fada ;};if (len (_fad )>=4)&&(string (_fad [:4])=="\u0074\u0072\u0075\u0065"){_beb ._cbe .Discard (4);
return _fg .PdfObjectBool (true ),nil ;};_fad ,_fada =_beb ._cbe .Peek (5);if _fada !=nil {return _fg .PdfObjectBool (false ),_fada ;};if (len (_fad )>=5)&&(string (_fad [:5])=="\u0066\u0061\u006cs\u0065"){_beb ._cbe .Discard (5);return _fg .PdfObjectBool (false ),nil ;
};return _fg .PdfObjectBool (false ),_f .New ("\u0075n\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0062o\u006fl\u0065a\u006e\u0020\u0073\u0074\u0072\u0069\u006eg");};type fdfParser struct{_ace int ;_dg int ;_acf map[int64 ]_fg .PdfObject ;_bfb _dag .ReadSeeker ;
_cbe *_db .Reader ;_fec int64 ;_feg *_fg .PdfObjectDictionary ;};func (_ege *fdfParser )parseObject ()(_fg .PdfObject ,error ){_df .Log .Trace ("\u0052e\u0061d\u0020\u0064\u0069\u0072\u0065c\u0074\u0020o\u0062\u006a\u0065\u0063\u0074");_ege .skipSpaces ();
for {_ceae ,_cf :=_ege ._cbe .Peek (2);if _cf !=nil {return nil ,_cf ;};_df .Log .Trace ("\u0050e\u0065k\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u003a\u0020\u0025\u0073",string (_ceae ));if _ceae [0]=='/'{_ffdd ,_cbb :=_ege .parseName ();_df .Log .Trace ("\u002d\u003e\u004ea\u006d\u0065\u003a\u0020\u0027\u0025\u0073\u0027",_ffdd );
return &_ffdd ,_cbb ;}else if _ceae [0]=='('{_df .Log .Trace ("\u002d>\u0053\u0074\u0072\u0069\u006e\u0067!");return _ege .parseString ();}else if _ceae [0]=='['{_df .Log .Trace ("\u002d\u003e\u0041\u0072\u0072\u0061\u0079\u0021");return _ege .parseArray ();
}else if (_ceae [0]=='<')&&(_ceae [1]=='<'){_df .Log .Trace ("\u002d>\u0044\u0069\u0063\u0074\u0021");return _ege .parseDict ();}else if _ceae [0]=='<'{_df .Log .Trace ("\u002d\u003e\u0048\u0065\u0078\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0021");return _ege .parseHexString ();
}else if _ceae [0]=='%'{_ege .readComment ();_ege .skipSpaces ();}else {_df .Log .Trace ("\u002d\u003eN\u0075\u006d\u0062e\u0072\u0020\u006f\u0072\u0020\u0072\u0065\u0066\u003f");_ceae ,_ =_ege ._cbe .Peek (15);_bgc :=string (_ceae );_df .Log .Trace ("\u0050\u0065\u0065k\u0020\u0073\u0074\u0072\u003a\u0020\u0025\u0073",_bgc );
if (len (_bgc )> 3)&&(_bgc [:4]=="\u006e\u0075\u006c\u006c"){_af ,_dbd :=_ege .parseNull ();return &_af ,_dbd ;}else if (len (_bgc )> 4)&&(_bgc [:5]=="\u0066\u0061\u006cs\u0065"){_ga ,_fcd :=_ege .parseBool ();return &_ga ,_fcd ;}else if (len (_bgc )> 3)&&(_bgc [:4]=="\u0074\u0072\u0075\u0065"){_deb ,_dfb :=_ege .parseBool ();
return &_deb ,_dfb ;};_agd :=_cdg .FindStringSubmatch (_bgc );if len (_agd )> 1{_ceae ,_ =_ege ._cbe .ReadBytes ('R');_df .Log .Trace ("\u002d\u003e\u0020\u0021\u0052\u0065\u0066\u003a\u0020\u0027\u0025\u0073\u0027",string (_ceae [:]));_gdeb ,_bfg :=_bde (string (_ceae ));
return &_gdeb ,_bfg ;};_bcba :=_bb .FindStringSubmatch (_bgc );if len (_bcba )> 1{_df .Log .Trace ("\u002d\u003e\u0020\u004e\u0075\u006d\u0062\u0065\u0072\u0021");return _ege .parseNumber ();};_bcba =_ccf .FindStringSubmatch (_bgc );if len (_bcba )> 1{_df .Log .Trace ("\u002d\u003e\u0020\u0045xp\u006f\u006e\u0065\u006e\u0074\u0069\u0061\u006c\u0020\u004e\u0075\u006d\u0062\u0065r\u0021");
_df .Log .Trace ("\u0025\u0020\u0073",_bcba );return _ege .parseNumber ();};_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u0020U\u006e\u006b\u006e\u006f\u0077n\u0020(\u0070e\u0065\u006b\u0020\u0022\u0025\u0073\u0022)",_bgc );return nil ,_f .New ("\u006f\u0062\u006a\u0065\u0063t\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0065\u0072\u0072\u006fr\u0020\u002d\u0020\u0075\u006e\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e");
};};};func (_afa *fdfParser )parseIndirectObject ()(_fg .PdfObject ,error ){_gad :=_fg .PdfIndirectObject {};_df .Log .Trace ("\u002dR\u0065a\u0064\u0020\u0069\u006e\u0064i\u0072\u0065c\u0074\u0020\u006f\u0062\u006a");_aaaf ,_gef :=_afa ._cbe .Peek (20);
if _gef !=nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0020\u0074\u006f\u0020r\u0065a\u0064\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a");return &_gad ,_gef ;};_df .Log .Trace ("\u0028\u0069\u006edi\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0020\u0070\u0065\u0065\u006b\u0020\u0022\u0025\u0073\u0022",string (_aaaf ));
_ceb :=_ddb .FindStringSubmatchIndex (string (_aaaf ));if len (_ceb )< 6{_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020U\u006e\u0061\u0062l\u0065\u0020\u0074\u006f \u0066\u0069\u006e\u0064\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0028\u0025\u0073\u0029",string (_aaaf ));
return &_gad ,_f .New ("\u0075\u006e\u0061b\u006c\u0065\u0020\u0074\u006f\u0020\u0064\u0065\u0074\u0065\u0063\u0074\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020s\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065");
};_afa ._cbe .Discard (_ceb [0]);_df .Log .Trace ("O\u0066\u0066\u0073\u0065\u0074\u0073\u0020\u0025\u0020\u0064",_ceb );_bad :=_ceb [1]-_ceb [0];_aed :=make ([]byte ,_bad );_ ,_gef =_afa .readAtLeast (_aed ,_bad );if _gef !=nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0075\u006e\u0061\u0062l\u0065\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020-\u0020\u0025\u0073",_gef );
return nil ,_gef ;};_df .Log .Trace ("\u0074\u0065\u0078t\u006c\u0069\u006e\u0065\u003a\u0020\u0025\u0073",_aed );_gab :=_ddb .FindStringSubmatch (string (_aed ));if len (_gab )< 3{_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020U\u006e\u0061\u0062l\u0065\u0020\u0074\u006f \u0066\u0069\u006e\u0064\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0028\u0025\u0073\u0029",string (_aed ));
return &_gad ,_f .New ("\u0075\u006e\u0061b\u006c\u0065\u0020\u0074\u006f\u0020\u0064\u0065\u0074\u0065\u0063\u0074\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020s\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065");
};_ede ,_ :=_d .Atoi (_gab [1]);_gdb ,_ :=_d .Atoi (_gab [2]);_gad .ObjectNumber =int64 (_ede );_gad .GenerationNumber =int64 (_gdb );for {_fcgc ,_gefb :=_afa ._cbe .Peek (2);if _gefb !=nil {return &_gad ,_gefb ;};_df .Log .Trace ("I\u006ed\u002e\u0020\u0070\u0065\u0065\u006b\u003a\u0020%\u0073\u0020\u0028\u0025 x\u0029\u0021",string (_fcgc ),string (_fcgc ));
if _fg .IsWhiteSpace (_fcgc [0]){_afa .skipSpaces ();}else if _fcgc [0]=='%'{_afa .skipComments ();}else if (_fcgc [0]=='<')&&(_fcgc [1]=='<'){_df .Log .Trace ("\u0043\u0061\u006c\u006c\u0020\u0050\u0061\u0072\u0073e\u0044\u0069\u0063\u0074");_gad .PdfObject ,_gefb =_afa .parseDict ();
_df .Log .Trace ("\u0045\u004f\u0046\u0020Ca\u006c\u006c\u0020\u0050\u0061\u0072\u0073\u0065\u0044\u0069\u0063\u0074\u003a\u0020%\u0076",_gefb );if _gefb !=nil {return &_gad ,_gefb ;};_df .Log .Trace ("\u0050\u0061\u0072\u0073\u0065\u0064\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u002e.\u002e\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
}else if (_fcgc [0]=='/')||(_fcgc [0]=='(')||(_fcgc [0]=='[')||(_fcgc [0]=='<'){_gad .PdfObject ,_gefb =_afa .parseObject ();if _gefb !=nil {return &_gad ,_gefb ;};_df .Log .Trace ("P\u0061\u0072\u0073\u0065\u0064\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u002e\u002e\u002e \u0066\u0069\u006ei\u0073h\u0065\u0064\u002e");
}else {if _fcgc [0]=='e'{_badc ,_gaa :=_afa .readTextLine ();if _gaa !=nil {return nil ,_gaa ;};if len (_badc )>=6&&_badc [0:6]=="\u0065\u006e\u0064\u006f\u0062\u006a"{break ;};}else if _fcgc [0]=='s'{_fcgc ,_ =_afa ._cbe .Peek (10);if string (_fcgc [:6])=="\u0073\u0074\u0072\u0065\u0061\u006d"{_eeec :=6;
if len (_fcgc )> 6{if _fg .IsWhiteSpace (_fcgc [_eeec ])&&_fcgc [_eeec ]!='\r'&&_fcgc [_eeec ]!='\n'{_df .Log .Debug ("\u004e\u006fn\u002d\u0063\u006f\u006e\u0066\u006f\u0072\u006d\u0061\u006e\u0074\u0020\u0046\u0044\u0046\u0020\u006e\u006f\u0074 \u0065\u006e\u0064\u0069\u006e\u0067 \u0073\u0074\u0072\u0065\u0061\u006d\u0020\u006c\u0069\u006e\u0065\u0020\u0070\u0072o\u0070\u0065r\u006c\u0079\u0020\u0077i\u0074\u0068\u0020\u0045\u004fL\u0020\u006d\u0061\u0072\u006b\u0065\u0072");
_eeec ++;};if _fcgc [_eeec ]=='\r'{_eeec ++;if _fcgc [_eeec ]=='\n'{_eeec ++;};}else if _fcgc [_eeec ]=='\n'{_eeec ++;};};_afa ._cbe .Discard (_eeec );_gee ,_eef :=_gad .PdfObject .(*_fg .PdfObjectDictionary );if !_eef {return nil ,_f .New ("\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006di\u0073s\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_df .Log .Trace ("\u0053\u0074\u0072\u0065\u0061\u006d\u0020\u0064\u0069c\u0074\u0020\u0025\u0073",_gee );_geb ,_ffc :=_gee .Get ("\u004c\u0065\u006e\u0067\u0074\u0068").(*_fg .PdfObjectInteger );if !_ffc {return nil ,_f .New ("\u0073\u0074re\u0061\u006d\u0020l\u0065\u006e\u0067\u0074h n\u0065ed\u0073\u0020\u0074\u006f\u0020\u0062\u0065 a\u006e\u0020\u0069\u006e\u0074\u0065\u0067e\u0072");
};_beg :=*_geb ;if _beg < 0{return nil ,_f .New ("\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f \u0062e\u0020\u006c\u006f\u006e\u0067\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0030");};if int64 (_beg )> _afa ._fec {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0053t\u0072\u0065\u0061\u006d\u0020l\u0065\u006e\u0067\u0074\u0068\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006c\u0061\u0072\u0067\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0066\u0069\u006c\u0065\u0020\u0073\u0069\u007a\u0065");
return nil ,_f .New ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u0073t\u0072\u0065\u0061m\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u002c\u0020la\u0072\u0067\u0065r\u0020\u0074h\u0061\u006e\u0020\u0066\u0069\u006ce\u0020\u0073i\u007a\u0065");};_aga :=make ([]byte ,_beg );
_ ,_gefb =_afa .readAtLeast (_aga ,int (_beg ));if _gefb !=nil {_df .Log .Debug ("E\u0052\u0052\u004f\u0052 s\u0074r\u0065\u0061\u006d\u0020\u0028%\u0064\u0029\u003a\u0020\u0025\u0058",len (_aga ),_aga );_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gefb );
return nil ,_gefb ;};_gec :=_fg .PdfObjectStream {};_gec .Stream =_aga ;_gec .PdfObjectDictionary =_gad .PdfObject .(*_fg .PdfObjectDictionary );_gec .ObjectNumber =_gad .ObjectNumber ;_gec .GenerationNumber =_gad .GenerationNumber ;_afa .skipSpaces ();
_afa ._cbe .Discard (9);_afa .skipSpaces ();return &_gec ,nil ;};};_gad .PdfObject ,_gefb =_afa .parseObject ();return &_gad ,_gefb ;};};_df .Log .Trace ("\u0052\u0065\u0074\u0075rn\u0069\u006e\u0067\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0021");
return &_gad ,nil ;};func (_ffd *fdfParser )skipSpaces ()(int ,error ){_ccfg :=0;for {_dgb ,_eb :=_ffd ._cbe .ReadByte ();if _eb !=nil {return 0,_eb ;};if _fg .IsWhiteSpace (_dgb ){_ccfg ++;}else {_ffd ._cbe .UnreadByte ();break ;};};return _ccfg ,nil ;
};var _cdg =_ed .MustCompile ("^\u005c\u0073\u002a\u0028\\d\u002b)\u005c\u0073\u002b\u0028\u005cd\u002b\u0029\u005c\u0073\u002b\u0052");func (_afc *fdfParser )parse ()error {_afc ._bfb .Seek (0,_dag .SeekStart );_afc ._cbe =_db .NewReader (_afc ._bfb );
for {_afc .skipComments ();_bcbb ,_bade :=_afc ._cbe .Peek (20);if _bade !=nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0020\u0074\u006f\u0020r\u0065a\u0064\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a");
return _bade ;};if _e .HasPrefix (string (_bcbb ),"\u0074r\u0061\u0069\u006c\u0065\u0072"){_afc ._cbe .Discard (7);_afc .skipSpaces ();_afc .skipComments ();_afab ,_ :=_afc .parseDict ();_afc ._feg =_afab ;break ;};_fab :=_ddb .FindStringSubmatchIndex (string (_bcbb ));
if len (_fab )< 6{_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020U\u006e\u0061\u0062l\u0065\u0020\u0074\u006f \u0066\u0069\u006e\u0064\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0028\u0025\u0073\u0029",string (_bcbb ));
return _f .New ("\u0075\u006e\u0061b\u006c\u0065\u0020\u0074\u006f\u0020\u0064\u0065\u0074\u0065\u0063\u0074\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020s\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065");
};_gcbe ,_bade :=_afc .parseIndirectObject ();if _bade !=nil {return _bade ;};switch _gddf :=_gcbe .(type ){case *_fg .PdfIndirectObject :_afc ._acf [_gddf .ObjectNumber ]=_gddf ;case *_fg .PdfObjectStream :_afc ._acf [_gddf .ObjectNumber ]=_gddf ;default:return _f .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};};return nil ;};

// Load loads FDF form data from `r`.
func Load (r _dag .ReadSeeker )(*Data ,error ){_g ,_ac :=_gda (r );if _ac !=nil {return nil ,_ac ;};_cg ,_ac :=_g .Root ();if _ac !=nil {return nil ,_ac ;};_cc ,_eg :=_fg .GetArray (_cg .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"));if !_eg {return nil ,_f .New ("\u0066\u0069\u0065\u006c\u0064\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
};return &Data {_fc :_cc ,_b :_cg },nil ;};func (_ded *fdfParser )parseNumber ()(_fg .PdfObject ,error ){return _fg .ParseNumber (_ded ._cbe )};func (_cb *fdfParser )readAtLeast (_ba []byte ,_ge int )(int ,error ){_ee :=_ge ;_acb :=0;_cce :=0;for _ee > 0{_ad ,_gc :=_cb ._cbe .Read (_ba [_acb :]);
if _gc !=nil {_df .Log .Debug ("\u0045\u0052\u0052O\u0052\u0020\u0046\u0061i\u006c\u0065\u0064\u0020\u0072\u0065\u0061d\u0069\u006e\u0067\u0020\u0028\u0025\u0064\u003b\u0025\u0064\u0029\u0020\u0025\u0073",_ad ,_cce ,_gc .Error ());return _acb ,_f .New ("\u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0072\u0065a\u0064\u0069\u006e\u0067");
};_cce ++;_acb +=_ad ;_ee -=_ad ;};return _acb ,nil ;};func _gbcf (_bba string )(*fdfParser ,error ){_efc :=fdfParser {};_gbfe :=[]byte (_bba );_abf :=_da .NewReader (_gbfe );_efc ._bfb =_abf ;_efc ._acf =map[int64 ]_fg .PdfObject {};_gdf :=_db .NewReader (_abf );
_efc ._cbe =_gdf ;_efc ._fec =int64 (len (_bba ));return &_efc ,_efc .parse ();};func (_dge *fdfParser )parseNull ()(_fg .PdfObjectNull ,error ){_ ,_ega :=_dge ._cbe .Discard (4);return _fg .PdfObjectNull {},_ega ;};func (_dedd *fdfParser )parseArray ()(*_fg .PdfObjectArray ,error ){_aad :=_fg .MakeArray ();
_dedd ._cbe .ReadByte ();for {_dedd .skipSpaces ();_edb ,_bcbd :=_dedd ._cbe .Peek (1);if _bcbd !=nil {return _aad ,_bcbd ;};if _edb [0]==']'{_dedd ._cbe .ReadByte ();break ;};_cbc ,_bcbd :=_dedd .parseObject ();if _bcbd !=nil {return _aad ,_bcbd ;};_aad .Append (_cbc );
};return _aad ,nil ;};

// FieldValues implements interface model.FieldValueProvider.
// Returns a map of field names to values (PdfObjects).
func (fdf *Data )FieldValues ()(map[string ]_fg .PdfObject ,error ){_ab ,_fe :=fdf .FieldDictionaries ();if _fe !=nil {return nil ,_fe ;};var _gb []string ;for _ce :=range _ab {_gb =append (_gb ,_ce );};_cd .Strings (_gb );_aa :=map[string ]_fg .PdfObject {};
for _ ,_bd :=range _gb {_ced :=_ab [_bd ];_ffg :=_fg .TraceToDirectObject (_ced .Get ("\u0056"));_aa [_bd ]=_ffg ;};return _aa ,nil ;};func (_gfda *fdfParser )readTextLine ()(string ,error ){var _gde _da .Buffer ;for {_dfa ,_cceg :=_gfda ._cbe .Peek (1);
if _cceg !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0025\u0073",_cceg .Error ());return _gde .String (),_cceg ;};if (_dfa [0]!='\r')&&(_dfa [0]!='\n'){_egc ,_ :=_gfda ._cbe .ReadByte ();_gde .WriteByte (_egc );}else {break ;};};return _gde .String (),nil ;
};

// Data represents forms data format (FDF) file data.
type Data struct{_b *_fg .PdfObjectDictionary ;_fc *_fg .PdfObjectArray ;};