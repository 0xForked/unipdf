//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

//
// Package extractor is used for quickly extracting PDF content through a simple interface.
// Currently offers functionality for extracting textual content.
//
package extractor ;import (_fa "bytes";_c "errors";_a "fmt";_ceg "github.com/unidoc/unipdf/v3/common";_cdb "github.com/unidoc/unipdf/v3/contentstream";_de "github.com/unidoc/unipdf/v3/core";_ff "github.com/unidoc/unipdf/v3/internal/license";_fb "github.com/unidoc/unipdf/v3/internal/textencoding";
_gcg "github.com/unidoc/unipdf/v3/internal/transform";_gg "github.com/unidoc/unipdf/v3/model";_ac "golang.org/x/image/draw";_cd "golang.org/x/text/unicode/norm";_af "golang.org/x/xerrors";_gce "image";_e "image/color";_d "io";_ce "math";_cb "reflect";_f "regexp";
_ge "sort";_gc "strings";_ga "unicode";_da "unicode/utf8";);const (_eda =1.0e-6;_dbfa =1.0e-4;_agbf =10;_dafb =6;_fcdd =0.5;_fdbg =0.12;_egda =0.19;_ecdb =0.04;_gbcd =0.04;_dceg =1.0;_abeg =0.04;_bdfga =0.4;_gecf =0.7;_dacc =1.0;_bdfbc =0.1;_egcbd =1.4;
_dfad =0.46;_fgbbe =0.02;_afeb =0.2;_ebdag =0.5;_caff =4;_eaea =4.0;_dgb =6;_agaa =0.3;_fbe =0.01;_dbbd =0.02;_cdef =2;_efbf =2;_egga =500;_bce =4.0;_fcgf =4.0;_gged =0.05;_gdec =0.1;_begbg =2.0;_deeb =2.0;_eabg =1.5;_feggg =3.0;_cedfe =0.25;);func (_ffda paraList )readBefore (_fgbbc []int ,_ecceg ,_dbae int )bool {_ggaca ,_effdc :=_ffda [_ecceg ],_ffda [_dbae ];
if _dfgd (_ggaca ,_effdc )&&_ggaca .Lly > _effdc .Lly {return true ;};if !(_ggaca ._eggab .Urx < _effdc ._eggab .Llx ){return false ;};_gcbg ,_cdce :=_ggaca .Lly ,_effdc .Lly ;if _gcbg > _cdce {_cdce ,_gcbg =_gcbg ,_cdce ;};_eabgd :=_ce .Max (_ggaca ._eggab .Llx ,_effdc ._eggab .Llx );
_bbea :=_ce .Min (_ggaca ._eggab .Urx ,_effdc ._eggab .Urx );_fgaeg :=_ffda .llyRange (_fgbbc ,_gcbg ,_cdce );for _ ,_gaee :=range _fgaeg {if _gaee ==_ecceg ||_gaee ==_dbae {continue ;};_ecbf :=_ffda [_gaee ];if _ecbf ._eggab .Llx <=_bbea &&_eabgd <=_ecbf ._eggab .Urx {return false ;
};};return true ;};

// Len returns the number of TextMarks in `ma`.
func (_cfcf *TextMarkArray )Len ()int {if _cfcf ==nil {return 0;};return len (_cfcf ._fgbb );};func _cggd (_aced ,_cged _gg .PdfRectangle )(_gg .PdfRectangle ,bool ){if !_bfe (_aced ,_cged ){return _gg .PdfRectangle {},false ;};return _gg .PdfRectangle {Llx :_ce .Max (_aced .Llx ,_cged .Llx ),Urx :_ce .Min (_aced .Urx ,_cged .Urx ),Lly :_ce .Max (_aced .Lly ,_cged .Lly ),Ury :_ce .Min (_aced .Ury ,_cged .Ury )},true ;
};func (_dfa *textObject )setCharSpacing (_acea float64 ){if _dfa ==nil {return ;};_dfa ._cdg ._fada =_acea ;if _bgfa {_ceg .Log .Info ("\u0073\u0065t\u0043\u0068\u0061\u0072\u0053\u0070\u0061\u0063\u0069\u006e\u0067\u003a\u0020\u0025\u002e\u0032\u0066\u0020\u0073\u0074\u0061\u0074e=\u0025\u0073",_acea ,_dfa ._cdg .String ());
};};type textLine struct{_gg .PdfRectangle ;_gbfa float64 ;_cffb []*textWord ;_dbdc float64 ;};func (_adbf rulingList )primaries ()[]float64 {_acab :=make (map[float64 ]struct{},len (_adbf ));for _ ,_cgea :=range _adbf {_acab [_cgea ._dege ]=struct{}{};
};_adfc :=make ([]float64 ,len (_acab ));_fddb :=0;for _agff :=range _acab {_adfc [_fddb ]=_agff ;_fddb ++;};_ge .Float64s (_adfc );return _adfc ;};func (_eff *textObject )reset (){_eff ._fafb =_gcg .IdentityMatrix ();_eff ._becd =_gcg .IdentityMatrix ();
_eff ._ceab =nil ;};func _bad (_ecce ,_dddg bounded )float64 {return _ecee (_ecce )-_ecee (_dddg )};func _edgc (_acba *textLine )float64 {return _acba ._cffb [0].Llx };func (_edbaa *textTable )growTable (){_facg :=func (_gcaae paraList ){_edbaa ._fbaf ++;
for _cfaf :=0;_cfaf < _edbaa ._cbdec ;_cfaf ++{_edbaf :=_gcaae [_cfaf ];_edbaa .put (_cfaf ,_edbaa ._fbaf -1,_edbaf );};};_ecfga :=func (_affdb paraList ){_edbaa ._cbdec ++;for _cgbcb :=0;_cgbcb < _edbaa ._fbaf ;_cgbcb ++{_eccedf :=_affdb [_cgbcb ];_edbaa .put (_edbaa ._cbdec -1,_cgbcb ,_eccedf );
};};if _cbgd {_edbaa .log ("\u0067r\u006f\u0077\u0054\u0061\u0062\u006ce");};for _cbbgd :=0;;_cbbgd ++{_caffb :=false ;_gcggc :=_edbaa .getDown ();_bdbc :=_edbaa .getRight ();if _cbgd {_a .Printf ("\u0025\u0034\u0064\u003a\u0020\u0025\u0073\u000a",_cbbgd ,_edbaa );
_a .Printf ("\u0020\u0020 \u0020\u0020\u0020 \u0020\u0064\u006f\u0077\u006e\u003d\u0025\u0073\u000a",_gcggc );_a .Printf ("\u0020\u0020 \u0020\u0020\u0020 \u0072\u0069\u0067\u0068\u0074\u003d\u0025\u0073\u000a",_bdbc );};if _gcggc !=nil &&_bdbc !=nil {_bcfeg :=_gcggc [len (_gcggc )-1];
if !_bcfeg .taken ()&&_bcfeg ==_bdbc [len (_bdbc )-1]{_facg (_gcggc );if _bdbc =_edbaa .getRight ();_bdbc !=nil {_ecfga (_bdbc );_edbaa .put (_edbaa ._cbdec -1,_edbaa ._fbaf -1,_bcfeg );};_caffb =true ;};};if !_caffb &&_gcggc !=nil {_facg (_gcggc );_caffb =true ;
};if !_caffb &&_bdbc !=nil {_ecfga (_bdbc );_caffb =true ;};if !_caffb {break ;};};};

// Append appends `mark` to the mark array.
func (_agfg *TextMarkArray )Append (mark TextMark ){_agfg ._fgbb =append (_agfg ._fgbb ,mark )};type paraList []*textPara ;func _dfgd (_ggea ,_gfdc *textPara )bool {return _ggfc (_ggea ._eggab ,_gfdc ._eggab )};func (_dca *textObject )setTextRise (_eagg float64 ){if _dca ==nil {return ;
};_dca ._cdg ._bba =_eagg ;};func (_ecgc *textLine )pullWord (_abcf *wordBag ,_cabd *textWord ,_bafcc int ){_ecgc .appendWord (_cabd );_abcf .removeWord (_cabd ,_bafcc );};type cachedImage struct{_aded *_gg .Image ;_adg _gg .PdfColorspace ;};type textResult struct{_bebd PageText ;
_ccfba int ;_ebfe int ;};func _bfce (_eadf []structElement ,_afda map[int ][]*textLine ,_efdc _de .PdfObject )[]*list {_cage :=[]*list {};for _ ,_bgadf :=range _eadf {_abgf :=_bgadf ._dada ;_dfeb :=int (_bgadf ._abebd );_eccag :=_bgadf ._gefg ;_fgefd :=[]*textLine {};
_bbeg :=[]*list {};_gbad :=_bgadf ._fcbb ;_afgd ,_dgfa :=(_gbad .(*_de .PdfObjectReference ));if !_dgfa {_ceg .Log .Debug ("\u0066\u0061\u0069l\u0065\u0064\u0020\u006f\u0074\u0020\u0063\u0061\u0073\u0074\u0020\u0074\u006f\u0020\u002a\u0063\u006f\u0072\u0065\u002e\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074R\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065");
};if _dfeb !=-1&&_afgd !=nil {if _cgae ,_aeag :=_afda [_dfeb ];_aeag {if _cgca ,_fdefd :=_efdc .(*_de .PdfIndirectObject );_fdefd {_dgaf :=_cgca .PdfObjectReference ;if _cb .DeepEqual (*_afgd ,_dgaf ){_fgefd =_cgae ;};};};};if _abgf !=nil {_bbeg =_bfce (_abgf ,_afda ,_efdc );
};_gebc :=_ccdf (_fgefd ,_eccag ,_bbeg );_cage =append (_cage ,_gebc );};return _cage ;};func (_dcfd *textTable )bbox ()_gg .PdfRectangle {return _dcfd .PdfRectangle };func (_dbca *shapesState )devicePoint (_gda ,_gde float64 )_gcg .Point {_deac :=_dbca ._ddef .Mult (_dbca ._edeg );
_gda ,_gde =_deac .Transform (_gda ,_gde );return _gcg .NewPoint (_gda ,_gde );};func (_dgab *wordBag )highestWord (_geaa int ,_dagc ,_bgad float64 )*textWord {for _ ,_dbdd :=range _dgab ._agbg [_geaa ]{if _dagc <=_dbdd ._bfgb &&_dbdd ._bfgb <=_bgad {return _dbdd ;
};};return nil ;};

// TableCell is a cell in a TextTable.
type TableCell struct{_gg .PdfRectangle ;

// Text is the extracted text.
Text string ;

// Marks returns the TextMarks corresponding to the text in Text.
Marks TextMarkArray ;};func _gegd (_bee _gg .PdfRectangle )textState {return textState {_dfe :100,_ebcg :RenderModeFill ,_cgf :_bee };};func (_dade *shapesState )fill (_ccec *[]pathSection ){_dacg :=pathSection {_ffa :_dade ._debc ,Color :_dade ._abec .getFillColor ()};
*_ccec =append (*_ccec ,_dacg );if _aabf {_dcdf :=_dacg .bbox ();_a .Printf ("\u0020 \u0020\u0020\u0046\u0049\u004c\u004c\u003a %\u0032\u0064\u0020\u0066\u0069\u006c\u006c\u0073\u0020\u0028\u0025\u0064\u0020\u006ee\u0077\u0029 \u0073\u0073\u003d%\u0073\u0020\u0063\u006f\u006c\u006f\u0072\u003d\u0025\u0033\u0076\u0020\u0025\u0036\u002e\u0032f\u003d\u00256.\u0032\u0066\u0078%\u0036\u002e\u0032\u0066\u000a",len (*_ccec ),len (_dacg ._ffa ),_dade ,_dacg .Color ,_dcdf ,_dcdf .Width (),_dcdf .Height ());
if _acdg {for _efcac ,_aaa :=range _dacg ._ffa {_a .Printf ("\u0025\u0038\u0064\u003a\u0020\u0025\u0073\u000a",_efcac ,_aaa );if _efcac ==10{break ;};};};};};func (_cefd *wordBag )removeDuplicates (){if _gbc {_ceg .Log .Info ("r\u0065m\u006f\u0076\u0065\u0044\u0075\u0070\u006c\u0069c\u0061\u0074\u0065\u0073: \u0025\u0071",_cefd .text ());
};for _ ,_bcff :=range _cefd .depthIndexes (){if len (_cefd ._agbg [_bcff ])==0{continue ;};_gcae :=_cefd ._agbg [_bcff ][0];_bfad :=_afeb *_gcae ._agdb ;_bbeca :=_gcae ._bfgb ;for _ ,_gdbgb :=range _cefd .depthBand (_bbeca ,_bbeca +_bfad ){_ageb :=map[*textWord ]struct{}{};
_cccg :=_cefd ._agbg [_gdbgb ];for _ ,_geegb :=range _cccg {if _ ,_edgf :=_ageb [_geegb ];_edgf {continue ;};for _ ,_aggb :=range _cccg {if _ ,_fcbf :=_ageb [_aggb ];_fcbf {continue ;};if _aggb !=_geegb &&_aggb ._dbggb ==_geegb ._dbggb &&_ce .Abs (_aggb .Llx -_geegb .Llx )< _bfad &&_ce .Abs (_aggb .Urx -_geegb .Urx )< _bfad &&_ce .Abs (_aggb .Lly -_geegb .Lly )< _bfad &&_ce .Abs (_aggb .Ury -_geegb .Ury )< _bfad {_ageb [_aggb ]=struct{}{};
};};};if len (_ageb )> 0{_dafeb :=0;for _ ,_bbfgd :=range _cccg {if _ ,_ddbg :=_ageb [_bbfgd ];!_ddbg {_cccg [_dafeb ]=_bbfgd ;_dafeb ++;};};_cefd ._agbg [_gdbgb ]=_cccg [:len (_cccg )-len (_ageb )];if len (_cefd ._agbg [_gdbgb ])==0{delete (_cefd ._agbg ,_gdbgb );
};};};};};func (_gfag *textPara )taken ()bool {return _gfag ==nil ||_gfag ._eeed };func _caad (_bggf []rulingList )(rulingList ,rulingList ){var _ccde rulingList ;for _ ,_feede :=range _bggf {_ccde =append (_ccde ,_feede ...);};return _ccde .vertsHorzs ();
};func (_bdge *wordBag )firstWord (_bcfd int )*textWord {return _bdge ._agbg [_bcfd ][0]};func (_abbf *textPara )writeCellText (_aaag _d .Writer ){for _eaeg ,_ecdff :=range _abbf ._eccfb {_fbfdb :=_ecdff .text ();_ffec :=_gagd &&_ecdff .endsInHyphen ()&&_eaeg !=len (_abbf ._eccfb )-1;
if _ffec {_fbfdb =_cefef (_fbfdb );};_aaag .Write ([]byte (_fbfdb ));if !(_ffec ||_eaeg ==len (_abbf ._eccfb )-1){_aaag .Write ([]byte (_edef (_ecdff ._gbfa ,_abbf ._eccfb [_eaeg +1]._gbfa )));};};};type markKind int ;func (_ggdd *subpath )removeDuplicates (){if len (_ggdd ._ggdcf )==0{return ;
};_fbcf :=[]_gcg .Point {_ggdd ._ggdcf [0]};for _ ,_acbf :=range _ggdd ._ggdcf [1:]{if !_dfaae (_acbf ,_fbcf [len (_fbcf )-1]){_fbcf =append (_fbcf ,_acbf );};};_ggdd ._ggdcf =_fbcf ;};

// Text returns the extracted page text.
func (_daa PageText )Text ()string {return _daa ._fccf };func (_dbfg gridTile )numBorders ()int {_fdagc :=0;if _dbfg ._gbfg {_fdagc ++;};if _dbfg ._ddgb {_fdagc ++;};if _dbfg ._bfca {_fdagc ++;};if _dbfg ._dbaa {_fdagc ++;};return _fdagc ;};func _efbc (_deae []TextMark ,_ggde *int ,_cfgb TextMark )[]TextMark {_cfgb .Offset =*_ggde ;
_deae =append (_deae ,_cfgb );*_ggde +=len (_cfgb .Text );return _deae ;};func _dggg (_ecdd *list )[]*list {var _bafcf []*list ;for _ ,_gadd :=range _ecdd ._eccg {switch _gadd ._ccacc {case "\u004c\u0049":_eeef :=_fadg (_gadd );_bbbe :=_dggg (_gadd );_gcffb :=_ccdf (_eeef ,"\u0062\u0075\u006c\u006c\u0065\u0074",_bbbe );
_eege :=_cbd (_eeef ,"");_gcffb ._abgd =_eege ;_bafcf =append (_bafcf ,_gcffb );case "\u004c\u0042\u006fd\u0079":return _dggg (_gadd );case "\u004c":_gbddf :=_dggg (_gadd );_bafcf =append (_bafcf ,_gbddf ...);return _bafcf ;};};return _bafcf ;};func (_aegg *textLine )bbox ()_gg .PdfRectangle {return _aegg .PdfRectangle };
func (_fbcd *compositeCell )updateBBox (){for _ ,_deda :=range _fbcd .paraList {_fbcd .PdfRectangle =_dgcc (_fbcd .PdfRectangle ,_deda .PdfRectangle );};};

// TextMark represents extracted text on a page with information regarding both textual content,
// formatting (font and size) and positioning.
// It is the smallest unit of text on a PDF page, typically a single character.
//
// getBBox() in test_text.go shows how to compute bounding boxes of substrings of extracted text.
// The following code extracts the text on PDF page `page` into `text` then finds the bounding box
// `bbox` of substring `term` in `text`.
//
//	ex, _ := New(page)
//	// handle errors
//	pageText, _, _, err := ex.ExtractPageText()
//	// handle errors
//	text := pageText.Text()
//	textMarks := pageText.Marks()
//
//		start := strings.Index(text, term)
//	 end := start + len(term)
//	 spanMarks, err := textMarks.RangeOffset(start, end)
//	 // handle errors
//	 bbox, ok := spanMarks.BBox()
//	 // handle errors
type TextMark struct{

// Text is the extracted text.
Text string ;

// Original is the text in the PDF. It has not been decoded like `Text`.
Original string ;

// BBox is the bounding box of the text.
BBox _gg .PdfRectangle ;

// Font is the font the text was drawn with.
Font *_gg .PdfFont ;

// FontSize is the font size the text was drawn with.
FontSize float64 ;

// Offset is the offset of the start of TextMark.Text in the extracted text. If you do this
//   text, textMarks := pageText.Text(), pageText.Marks()
//   marks := textMarks.Elements()
// then marks[i].Offset is the offset of marks[i].Text in text.
Offset int ;

// Meta is set true for spaces and line breaks that we insert in the extracted text. We insert
// spaces (line breaks) when we see characters that are over a threshold horizontal (vertical)
//  distance  apart. See wordJoiner (lineJoiner) in PageText.computeViews().
Meta bool ;

// FillColor is the fill color of the text.
// The color is nil for spaces and line breaks (i.e. the Meta field is true).
FillColor _e .Color ;

// StrokeColor is the stroke color of the text.
// The color is nil for spaces and line breaks (i.e. the Meta field is true).
StrokeColor _e .Color ;

// Orientation is the text orientation
Orientation int ;

// DirectObject is the underlying PdfObject (Text Object) that represents the visible texts. This is introduced to get
// a simple access to the TextObject in case editing or replacment of some text is needed. E.g during redaction.
DirectObject _de .PdfObject ;

// ObjString is a decoded string operand of a text-showing operator. It has the same value as `Text` attribute except
// when many glyphs are represented with the same Text Object that contains multiple length string operand in which case
// ObjString spans more than one character string that falls in different TextMark objects.
ObjString []string ;Tw float64 ;Th float64 ;Tc float64 ;Index int ;_bgf bool ;_accc *TextTable ;};func (_cddgg *textWord )toTextMarks (_aaed *int )[]TextMark {var _cfcad []TextMark ;for _ ,_gdfec :=range _cddgg ._cgde {_cfcad =_efbc (_cfcad ,_aaed ,_gdfec .ToTextMark ());
};return _cfcad ;};

// BBox returns the smallest axis-aligned rectangle that encloses all the TextMarks in `ma`.
func (_ccac *TextMarkArray )BBox ()(_gg .PdfRectangle ,bool ){var _dda _gg .PdfRectangle ;_ffd :=false ;for _ ,_dfge :=range _ccac ._fgbb {if _dfge .Meta ||_dgecc (_dfge .Text ){continue ;};if _ffd {_dda =_dgcc (_dda ,_dfge .BBox );}else {_dda =_dfge .BBox ;
_ffd =true ;};};return _dda ,_ffd ;};func (_dbbdf gridTiling )complete ()bool {for _ ,_fbcff :=range _dbbdf ._afee {for _ ,_dcbc :=range _fbcff {if !_dcbc .complete (){return false ;};};};return true ;};func (_eged *textObject )newTextMark (_acgd string ,_gbce _gcg .Matrix ,_ffgec _gcg .Point ,_egcc float64 ,_bbcge *_gg .PdfFont ,_fdbf float64 ,_bcga ,_efcb _e .Color ,_dfca _de .PdfObject ,_eabe []string ,_cbbg int ,_eegc int )(textMark ,bool ){_bbbec :=_gbce .Angle ();
_ggba :=_fgba (_bbbec ,_agbf );var _ebge float64 ;if _ggba %180!=90{_ebge =_gbce .ScalingFactorY ();}else {_ebge =_gbce .ScalingFactorX ();};_gebb :=_aca (_gbce );_eeged :=_gg .PdfRectangle {Llx :_gebb .X ,Lly :_gebb .Y ,Urx :_ffgec .X ,Ury :_ffgec .Y };
switch _ggba %360{case 90:_eeged .Urx -=_ebge ;case 180:_eeged .Ury -=_ebge ;case 270:_eeged .Urx +=_ebge ;case 0:_eeged .Ury +=_ebge ;default:_ggba =0;_eeged .Ury +=_ebge ;};if _eeged .Llx > _eeged .Urx {_eeged .Llx ,_eeged .Urx =_eeged .Urx ,_eeged .Llx ;
};if _eeged .Lly > _eeged .Ury {_eeged .Lly ,_eeged .Ury =_eeged .Ury ,_eeged .Lly ;};_adgd :=true ;if _eged ._bfc ._fab .Width ()> 0{_dfcg ,_fddge :=_cggd (_eeged ,_eged ._bfc ._fab );if !_fddge {_adgd =false ;_ceg .Log .Debug ("\u0054\u0065\u0078\u0074\u0020m\u0061\u0072\u006b\u0020\u006f\u0075\u0074\u0073\u0069\u0064\u0065\u0020\u0070a\u0067\u0065\u002e\u0020\u0062\u0062\u006f\u0078\u003d\u0025\u0067\u0020\u006d\u0065\u0064\u0069\u0061\u0042\u006f\u0078\u003d\u0025\u0067\u0020\u0074\u0065\u0078\u0074\u003d\u0025q",_eeged ,_eged ._bfc ._fab ,_acgd );
};_eeged =_dfcg ;};_eadbb :=_eeged ;_fbdc :=_eged ._bfc ._fab ;switch _ggba %360{case 90:_fbdc .Urx ,_fbdc .Ury =_fbdc .Ury ,_fbdc .Urx ;_eadbb =_gg .PdfRectangle {Llx :_fbdc .Urx -_eeged .Ury ,Urx :_fbdc .Urx -_eeged .Lly ,Lly :_eeged .Llx ,Ury :_eeged .Urx };
case 180:_eadbb =_gg .PdfRectangle {Llx :_fbdc .Urx -_eeged .Llx ,Urx :_fbdc .Urx -_eeged .Urx ,Lly :_fbdc .Ury -_eeged .Lly ,Ury :_fbdc .Ury -_eeged .Ury };case 270:_fbdc .Urx ,_fbdc .Ury =_fbdc .Ury ,_fbdc .Urx ;_eadbb =_gg .PdfRectangle {Llx :_eeged .Ury ,Urx :_eeged .Lly ,Lly :_fbdc .Ury -_eeged .Llx ,Ury :_fbdc .Ury -_eeged .Urx };
};if _eadbb .Llx > _eadbb .Urx {_eadbb .Llx ,_eadbb .Urx =_eadbb .Urx ,_eadbb .Llx ;};if _eadbb .Lly > _eadbb .Ury {_eadbb .Lly ,_eadbb .Ury =_eadbb .Ury ,_eadbb .Lly ;};_bcgf :=textMark {_dfda :_acgd ,PdfRectangle :_eadbb ,_gdbfe :_eeged ,_acfcb :_bbcge ,_dbgd :_ebge ,_eced :_fdbf ,_addd :_gbce ,_bgbad :_ffgec ,_abdg :_ggba ,_ffbbb :_bcga ,_faea :_efcb ,_aafe :_dfca ,_gdge :_eabe ,Th :_eged ._cdg ._dfe ,Tw :_eged ._cdg ._bdbg ,_egeg :_eegc ,_geef :_cbbg };
if _fabbd {_ceg .Log .Info ("n\u0065\u0077\u0054\u0065\u0078\u0074M\u0061\u0072\u006b\u003a\u0020\u0073t\u0061\u0072\u0074\u003d\u0025\u002e\u0032f\u0020\u0065\u006e\u0064\u003d\u0025\u002e\u0032\u0066\u0020%\u0073",_gebb ,_ffgec ,_bcgf .String ());};return _bcgf ,_adgd ;
};func (_cdcc *wordBag )pullWord (_aedb *textWord ,_cbag int ,_fcga map[int ]map[*textWord ]struct{}){_cdcc .PdfRectangle =_dgcc (_cdcc .PdfRectangle ,_aedb .PdfRectangle );if _aedb ._agdb > _cdcc ._agba {_cdcc ._agba =_aedb ._agdb ;};_cdcc ._agbg [_cbag ]=append (_cdcc ._agbg [_cbag ],_aedb );
_fcga [_cbag ][_aedb ]=struct{}{};};func _dbab (_adggc _gcg .Point )_gcg .Matrix {return _gcg .TranslationMatrix (_adggc .X ,_adggc .Y )};func (_gcdb *textObject )setTextLeading (_adad float64 ){if _gcdb ==nil {return ;};_gcdb ._cdg ._adge =_adad ;};func (_gcea *textMark )bbox ()_gg .PdfRectangle {return _gcea .PdfRectangle };
func _ega (_fgcac *list ,_fgec *string )string {_faagf :=_gc .Split (_fgcac ._abgd ,"\u000a");_acdaa :=&_gc .Builder {};for _ ,_dcde :=range _faagf {if _dcde !=""{_acdaa .WriteString (*_fgec );_acdaa .WriteString (_dcde );_acdaa .WriteString ("\u000a");
};};return _acdaa .String ();};func _ggdad (_ddead []_de .PdfObject )(_fedef ,_ggcef float64 ,_egaddc error ){if len (_ddead )!=2{return 0,0,_a .Errorf ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066 \u0070\u0061\u0072\u0061\u006d\u0073\u003a \u0025\u0064",len (_ddead ));
};_bbdd ,_egaddc :=_de .GetNumbersAsFloat (_ddead );if _egaddc !=nil {return 0,0,_egaddc ;};return _bbdd [0],_bbdd [1],nil ;};func (_aae *textObject )renderText (_abeb _de .PdfObject ,_faa []byte ,_ceac int )error {if _aae ._gbga {_ceg .Log .Debug ("\u0072\u0065\u006e\u0064\u0065r\u0054\u0065\u0078\u0074\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0066\u006f\u006e\u0074\u002e\u0020\u004e\u006f\u0074\u0020\u0070\u0072\u006f\u0063\u0065\u0073\u0073\u0069\u006e\u0067\u002e");
return nil ;};_dcd :=_aae .getCurrentFont ();_bbgf :=_dcd .BytesToCharcodes (_faa );_fdg ,_fefd ,_gae :=_dcd .CharcodesToStrings (_bbgf );if _gae > 0{_ceg .Log .Debug ("\u0072\u0065nd\u0065\u0072\u0054e\u0078\u0074\u003a\u0020num\u0043ha\u0072\u0073\u003d\u0025\u0064\u0020\u006eum\u004d\u0069\u0073\u0073\u0065\u0073\u003d%\u0064",_fefd ,_gae );
};_aae ._cdg ._cdfbb +=_fefd ;_aae ._cdg ._acfc +=_gae ;_dgce :=_aae ._cdg ;_cfe :=_dgce ._bcf ;_defc :=_dgce ._dfe /100.0;_gag :=_abag ;if _dcd .Subtype ()=="\u0054\u0079\u0070e\u0033"{_gag =1;};_cdag ,_gdg :=_dcd .GetRuneMetrics (' ');if !_gdg {_cdag ,_gdg =_dcd .GetCharMetrics (32);
};if !_gdg {_cdag ,_ =_gg .DefaultFont ().GetRuneMetrics (' ');};_cdda :=_cdag .Wx *_gag ;_ceg .Log .Trace ("\u0073p\u0061\u0063e\u0057\u0069\u0064t\u0068\u003d\u0025\u002e\u0032\u0066\u0020t\u0065\u0078\u0074\u003d\u0025\u0071 \u0066\u006f\u006e\u0074\u003d\u0025\u0073\u0020\u0066\u006f\u006et\u0053\u0069\u007a\u0065\u003d\u0025\u002e\u0032\u0066",_cdda ,_fdg ,_dcd ,_cfe );
_feb :=_gcg .NewMatrix (_cfe *_defc ,0,0,_cfe ,0,_dgce ._bba );if _bgfa {_ceg .Log .Info ("\u0072\u0065\u006e\u0064\u0065\u0072T\u0065\u0078\u0074\u003a\u0020\u0025\u0064\u0020\u0063\u006f\u0064\u0065\u0073=\u0025\u002b\u0076\u0020\u0074\u0065\u0078t\u0073\u003d\u0025\u0071",len (_bbgf ),_bbgf ,_fdg );
};_ceg .Log .Trace ("\u0072\u0065\u006e\u0064\u0065\u0072T\u0065\u0078\u0074\u003a\u0020\u0025\u0064\u0020\u0063\u006f\u0064\u0065\u0073=\u0025\u002b\u0076\u0020\u0072\u0075\u006ee\u0073\u003d\u0025\u0071",len (_bbgf ),_bbgf ,len (_fdg ));_eadg :=_aae .getFillColor ();
_bgaa :=_aae .getStrokeColor ();for _fgd ,_cgdd :=range _fdg {_fage :=[]rune (_cgdd );if len (_fage )==1&&_fage [0]=='\x00'{continue ;};_ebe :=_bbgf [_fgd ];_ffgf :=_aae ._adbg .CTM .Mult (_aae ._fafb ).Mult (_feb );_egf :=0.0;if len (_fage )==1&&_fage [0]==32{_egf =_dgce ._bdbg ;
};_bggba ,_efc :=_dcd .GetCharMetrics (_ebe );if !_efc {_ceg .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u004e\u006f \u006d\u0065\u0074r\u0069\u0063\u0020\u0066\u006f\u0072\u0020\u0063\u006fde\u003d\u0025\u0064 \u0072\u003d0\u0078\u0025\u0030\u0034\u0078\u003d%\u002b\u0071 \u0025\u0073",_ebe ,_fage ,_fage ,_dcd );
return _a .Errorf ("\u006e\u006f\u0020\u0063\u0068\u0061\u0072\u0020\u006d\u0065\u0074\u0072\u0069\u0063\u0073:\u0020f\u006f\u006e\u0074\u003d\u0025\u0073\u0020\u0063\u006f\u0064\u0065\u003d\u0025\u0064",_dcd .String (),_ebe );};_aba :=_gcg .Point {X :_bggba .Wx *_gag ,Y :_bggba .Wy *_gag };
_fdd :=_gcg .Point {X :(_aba .X *_cfe +_egf )*_defc };_bag :=_gcg .Point {X :(_aba .X *_cfe +_dgce ._fada +_egf )*_defc };if _bgfa {_ceg .Log .Info ("\u0074\u0066\u0073\u003d\u0025\u002e\u0032\u0066\u0020\u0074\u0063\u003d\u0025\u002e\u0032f\u0020t\u0077\u003d\u0025\u002e\u0032\u0066\u0020\u0074\u0068\u003d\u0025\u002e\u0032\u0066",_cfe ,_dgce ._fada ,_dgce ._bdbg ,_defc );
_ceg .Log .Info ("\u0064x\u002c\u0064\u0079\u003d%\u002e\u0033\u0066\u0020\u00740\u003d%\u002e3\u0066\u0020\u0074\u003d\u0025\u002e\u0033f",_aba ,_fdd ,_bag );};_adeg :=_dbab (_fdd );_fcce :=_dbab (_bag );_fgee :=_aae ._adbg .CTM .Mult (_aae ._fafb ).Mult (_adeg );
if _abdcd {_ceg .Log .Info ("e\u006e\u0064\u003a\u000a\tC\u0054M\u003d\u0025\u0073\u000a\u0009 \u0074\u006d\u003d\u0025\u0073\u000a"+"\u0009\u0020t\u0064\u003d\u0025s\u0020\u0078\u006c\u0061\u0074\u003d\u0025\u0073\u000a"+"\u0009t\u0064\u0030\u003d\u0025s\u000a\u0009\u0020\u0020\u2192 \u0025s\u0020x\u006c\u0061\u0074\u003d\u0025\u0073",_aae ._adbg .CTM ,_aae ._fafb ,_fcce ,_aca (_aae ._adbg .CTM .Mult (_aae ._fafb ).Mult (_fcce )),_adeg ,_fgee ,_aca (_fgee ));
};_fgb ,_ecea :=_aae .newTextMark (_fb .ExpandLigatures (_fage ),_ffgf ,_aca (_fgee ),_ce .Abs (_cdda *_ffgf .ScalingFactorX ()),_dcd ,_aae ._cdg ._fada ,_eadg ,_bgaa ,_abeb ,_fdg ,_fgd ,_ceac );if !_ecea {_ceg .Log .Debug ("\u0054\u0065\u0078\u0074\u0020\u006d\u0061\u0072\u006b\u0020\u006f\u0075\u0074\u0073\u0069d\u0065 \u0070\u0061\u0067\u0065\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067");
continue ;};if _dcd ==nil {_ceg .Log .Debug ("\u0045R\u0052O\u0052\u003a\u0020\u004e\u006f\u0020\u0066\u006f\u006e\u0074\u002e");}else if _dcd .Encoder ()==nil {_ceg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020N\u006f\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006eg\u002e\u0020\u0066o\u006et\u003d\u0025\u0073",_dcd );
}else {if _fgg ,_aaea :=_dcd .Encoder ().CharcodeToRune (_ebe );_aaea {_fgb ._egab =string (_fgg );};};_ceg .Log .Trace ("i\u003d\u0025\u0064\u0020\u0063\u006fd\u0065\u003d\u0025\u0064\u0020\u006d\u0061\u0072\u006b=\u0025\u0073\u0020t\u0072m\u003d\u0025\u0073",_fgd ,_ebe ,_fgb ,_ffgf );
_aae ._ceab =append (_aae ._ceab ,&_fgb );_aae ._fafb .Concat (_fcce );};return nil ;};

// ExtractTextWithStats works like ExtractText but returns the number of characters in the output
// (`numChars`) and the number of characters that were not decoded (`numMisses`).
func (_fba *Extractor )ExtractTextWithStats ()(_fcg string ,_ggb int ,_caf int ,_fgad error ){_eba ,_ggb ,_caf ,_fgad :=_fba .ExtractPageText ();if _fgad !=nil {return "",_ggb ,_caf ,_fgad ;};return _eba .Text (),_ggb ,_caf ,nil ;};func (_aeee *wordBag )arrangeText ()*textPara {_aeee .sort ();
if _gggb {_aeee .removeDuplicates ();};var _daeb []*textLine ;for _ ,_bgd :=range _aeee .depthIndexes (){for !_aeee .empty (_bgd ){_gabbd :=_aeee .firstReadingIndex (_bgd );_fgcg :=_aeee .firstWord (_gabbd );_cgfd :=_dfcc (_aeee ,_gabbd );_bacf :=_fgcg ._agdb ;
_gfca :=_fgcg ._bfgb -_fcdd *_bacf ;_fgfb :=_fgcg ._bfgb +_fcdd *_bacf ;_afcg :=_egcbd *_bacf ;_bdcd :=_dfad *_bacf ;_bgcd :for {var _gcec *textWord ;_gdce :=0;for _ ,_gebca :=range _aeee .depthBand (_gfca ,_fgfb ){_eggc :=_aeee .highestWord (_gebca ,_gfca ,_fgfb );
if _eggc ==nil {continue ;};_bcef :=_cgdf (_eggc ,_cgfd ._cffb [len (_cgfd ._cffb )-1]);if _bcef < -_bdcd {break _bgcd ;};if _bcef > _afcg {continue ;};if _gcec !=nil &&_dfbb (_eggc ,_gcec )>=0{continue ;};_gcec =_eggc ;_gdce =_gebca ;};if _gcec ==nil {break ;
};_cgfd .pullWord (_aeee ,_gcec ,_gdce );};_cgfd .markWordBoundaries ();_daeb =append (_daeb ,_cgfd );};};if len (_daeb )==0{return nil ;};_ge .Slice (_daeb ,func (_bdabg ,_dfdef int )bool {return _egcf (_daeb [_bdabg ],_daeb [_dfdef ])< 0});_adde :=_bfac (_aeee .PdfRectangle ,_daeb );
if _gadb {_ceg .Log .Info ("\u0061\u0072\u0072an\u0067\u0065\u0054\u0065\u0078\u0074\u0020\u0021\u0021\u0021\u0020\u0070\u0061\u0072\u0061\u003d\u0025\u0073",_adde .String ());if _dcg {for _bbbfb ,_dfbd :=range _adde ._eccfb {_a .Printf ("\u0025\u0034\u0064\u003a\u0020\u0025\u0073\u000a",_bbbfb ,_dfbd .String ());
if _fgbe {for _agfa ,_caed :=range _dfbd ._cffb {_a .Printf ("\u0025\u0038\u0064\u003a\u0020\u0025\u0073\u000a",_agfa ,_caed .String ());for _gedef ,_bfcgb :=range _caed ._cgde {_a .Printf ("\u00251\u0032\u0064\u003a\u0020\u0025\u0073\n",_gedef ,_bfcgb .String ());
};};};};};};return _adde ;};func (_ebfce compositeCell )split (_abade ,_gccfa []float64 )*textTable {_edgd :=len (_abade )+1;_cddg :=len (_gccfa )+1;if _ccgc {_ceg .Log .Info ("\u0063\u006f\u006d\u0070\u006f\u0073\u0069t\u0065\u0043\u0065l\u006c\u002e\u0073\u0070l\u0069\u0074\u003a\u0020\u0025\u0064\u0020\u0078\u0020\u0025\u0064\u000a\u0009\u0063\u006f\u006d\u0070\u006f\u0073\u0069\u0074\u0065\u003d\u0025\u0073\u000a"+"\u0009\u0072\u006f\u0077\u0043\u006f\u0072\u0072\u0069\u0064\u006f\u0072\u0073=\u0025\u0036\u002e\u0032\u0066\u000a\t\u0063\u006f\u006c\u0043\u006f\u0072\u0072\u0069\u0064\u006f\u0072\u0073\u003d%\u0036\u002e\u0032\u0066",_cddg ,_edgd ,_ebfce ,_abade ,_gccfa );
_a .Printf ("\u0020\u0020\u0020\u0020\u0025\u0064\u0020\u0070\u0061\u0072\u0061\u0073\u000a",len (_ebfce .paraList ));for _cface ,_ccga :=range _ebfce .paraList {_a .Printf ("\u0025\u0034\u0064\u003a\u0020\u0025\u0073\u000a",_cface ,_ccga .String ());};
_a .Printf ("\u0020\u0020\u0020\u0020\u0025\u0064\u0020\u006c\u0069\u006e\u0065\u0073\u000a",len (_ebfce .lines ()));for _dgfd ,_ddefa :=range _ebfce .lines (){_a .Printf ("\u0025\u0034\u0064\u003a\u0020\u0025\u0073\u000a",_dgfd ,_ddefa );};};_abade =_fbfg (_abade ,_ebfce .Ury ,_ebfce .Lly );
_gccfa =_fbfg (_gccfa ,_ebfce .Llx ,_ebfce .Urx );_dfaaa :=make (map[uint64 ]*textPara ,_cddg *_edgd );_gfaba :=textTable {_cbdec :_cddg ,_fbaf :_edgd ,_aebfe :_dfaaa };_gacd :=_ebfce .paraList ;_ge .Slice (_gacd ,func (_dgbf ,_caga int )bool {_ccgaf ,_eagf :=_gacd [_dgbf ],_gacd [_caga ];
_ecbe ,_bccb :=_ccgaf .Lly ,_eagf .Lly ;if _ecbe !=_bccb {return _ecbe < _bccb ;};return _ccgaf .Llx < _eagf .Llx ;});_fefa :=make (map[uint64 ]_gg .PdfRectangle ,_cddg *_edgd );for _dfgdb ,_fgcdb :=range _abade [1:]{_ecfa :=_abade [_dfgdb ];for _fccc ,_bdfgc :=range _gccfa [1:]{_ccce :=_gccfa [_fccc ];
_fefa [_gdaac (_fccc ,_dfgdb )]=_gg .PdfRectangle {Llx :_ccce ,Urx :_bdfgc ,Lly :_fgcdb ,Ury :_ecfa };};};if _ccgc {_ceg .Log .Info ("\u0063\u006f\u006d\u0070\u006f\u0073\u0069\u0074\u0065\u0043\u0065l\u006c\u002e\u0073\u0070\u006c\u0069\u0074\u003a\u0020\u0072e\u0063\u0074\u0073");
_a .Printf ("\u0020\u0020\u0020\u0020");for _efbd :=0;_efbd < _cddg ;_efbd ++{_a .Printf ("\u0025\u0033\u0030\u0064\u002c\u0020",_efbd );};_a .Println ();for _agfc :=0;_agfc < _edgd ;_agfc ++{_a .Printf ("\u0020\u0020\u0025\u0032\u0064\u003a",_agfc );for _bedab :=0;
_bedab < _cddg ;_bedab ++{_a .Printf ("\u00256\u002e\u0032\u0066\u002c\u0020",_fefa [_gdaac (_bedab ,_agfc )]);};_a .Println ();};};_gdcee :=func (_fgcfg *textLine )(int ,int ){for _adbc :=0;_adbc < _edgd ;_adbc ++{for _cdae :=0;_cdae < _cddg ;_cdae ++{if _ecd (_fefa [_gdaac (_cdae ,_adbc )],_fgcfg .PdfRectangle ){return _cdae ,_adbc ;
};};};return -1,-1;};_dcbe :=make (map[uint64 ][]*textLine ,_cddg *_edgd );for _ ,_bcgag :=range _gacd .lines (){_accf ,_fabbea :=_gdcee (_bcgag );if _accf < 0{continue ;};_dcbe [_gdaac (_accf ,_fabbea )]=append (_dcbe [_gdaac (_accf ,_fabbea )],_bcgag );
};for _cgfda :=0;_cgfda < len (_abade )-1;_cgfda ++{_egggg :=_abade [_cgfda ];_gbef :=_abade [_cgfda +1];for _efcg :=0;_efcg < len (_gccfa )-1;_efcg ++{_aaefb :=_gccfa [_efcg ];_fega :=_gccfa [_efcg +1];_cdffa :=_gg .PdfRectangle {Llx :_aaefb ,Urx :_fega ,Lly :_gbef ,Ury :_egggg };
_ecgb :=_dcbe [_gdaac (_efcg ,_cgfda )];if len (_ecgb )==0{continue ;};_eaffd :=_bfac (_cdffa ,_ecgb );_gfaba .put (_efcg ,_cgfda ,_eaffd );};};return &_gfaba ;};func (_agbef paraList )llyRange (_cfab []int ,_bafgd ,_edce float64 )[]int {_cbbbg :=len (_agbef );
if _edce < _agbef [_cfab [0]].Lly ||_bafgd > _agbef [_cfab [_cbbbg -1]].Lly {return nil ;};_gdfe :=_ge .Search (_cbbbg ,func (_cffce int )bool {return _agbef [_cfab [_cffce ]].Lly >=_bafgd });_cgagf :=_ge .Search (_cbbbg ,func (_cbff int )bool {return _agbef [_cfab [_cbff ]].Lly > _edce });
return _cfab [_gdfe :_cgagf ];};func (_gafd gridTile )contains (_bbbd _gg .PdfRectangle )bool {if _gafd .numBorders ()< 3{return false ;};if _gafd ._gbfg &&_bbbd .Llx < _gafd .Llx -_eabg {return false ;};if _gafd ._ddgb &&_bbbd .Urx > _gafd .Urx +_eabg {return false ;
};if _gafd ._bfca &&_bbbd .Lly < _gafd .Lly -_eabg {return false ;};if _gafd ._dbaa &&_bbbd .Ury > _gafd .Ury +_eabg {return false ;};return true ;};type wordBag struct{_gg .PdfRectangle ;_agba float64 ;_fggf ,_bcfb rulingList ;_ffdg float64 ;_agbg map[int ][]*textWord ;
};func _fbfg (_ddfbc []float64 ,_eafcd ,_bdgg float64 )[]float64 {_acgae ,_fecf :=_eafcd ,_bdgg ;if _fecf < _acgae {_acgae ,_fecf =_fecf ,_acgae ;};_bggbg :=make ([]float64 ,0,len (_ddfbc )+2);_bggbg =append (_bggbg ,_eafcd );for _ ,_agcde :=range _ddfbc {if _agcde <=_acgae {continue ;
}else if _agcde >=_fecf {break ;};_bggbg =append (_bggbg ,_agcde );};_bggbg =append (_bggbg ,_bdgg );return _bggbg ;};

// GetContentStreamOps returns the contentStreamOps field of `pt`.
func (_dbed *PageText )GetContentStreamOps ()*_cdb .ContentStreamOperations {return _dbed ._fbfd };func (_ffdfc *textTable )put (_cabe ,_cecgf int ,_gaaag *textPara ){_ffdfc ._aebfe [_gdaac (_cabe ,_cecgf )]=_gaaag ;};func _fbdd (_dgfg map[int ][]float64 )[]int {_bbbad :=make ([]int ,len (_dgfg ));
_ggbg :=0;for _bgbec :=range _dgfg {_bbbad [_ggbg ]=_bgbec ;_ggbg ++;};_ge .Ints (_bbbad );return _bbbad ;};func _aca (_ecagc _gcg .Matrix )_gcg .Point {_eaa ,_ege :=_ecagc .Translation ();return _gcg .Point {X :_eaa ,Y :_ege };};type ruling struct{_aaeb rulingKind ;
_bgeee markKind ;_e .Color ;_dege float64 ;_ebaa float64 ;_bddc float64 ;_degge float64 ;};func _bfe (_fdef ,_edbgf _gg .PdfRectangle )bool {return _ggfc (_fdef ,_edbgf )&&_cdcg (_fdef ,_edbgf )};func (_aecdd *textTable )depth ()float64 {_eebf :=1e10;for _eaccb :=0;
_eaccb < _aecdd ._cbdec ;_eaccb ++{_cgbaa :=_aecdd .get (_eaccb ,0);if _cgbaa ==nil ||_cgbaa ._dgac {continue ;};_eebf =_ce .Min (_eebf ,_cgbaa .depth ());};return _eebf ;};func (_degc *textObject )setFont (_faeb string ,_fbb float64 )error {if _degc ==nil {return nil ;
};_degc ._cdg ._bcf =_fbb ;_fffd ,_cbb :=_degc .getFont (_faeb );if _cbb !=nil {return _cbb ;};_degc ._cdg ._gbbc =_fffd ;return nil ;};type textPara struct{_gg .PdfRectangle ;_eggab _gg .PdfRectangle ;_eccfb []*textLine ;_dace *textTable ;_eeed bool ;
_dgac bool ;_dadga *textPara ;_ebfc *textPara ;_ddcdc *textPara ;_fgac *textPara ;_fea []list ;};func (_fcecf *textTable )emptyCompositeRow (_ebagc int )bool {for _dgba :=0;_dgba < _fcecf ._cbdec ;_dgba ++{if _acfe ,_fcebf :=_fcecf ._bagdf [_gdaac (_dgba ,_ebagc )];
_fcebf {if len (_acfe .paraList )> 0{return false ;};};};return true ;};func (_fgca *textObject )setWordSpacing (_bbde float64 ){if _fgca ==nil {return ;};_fgca ._cdg ._bdbg =_bbde ;};func _faaba (_fccee ,_bdace _gcg .Point )rulingKind {_dbcafe :=_ce .Abs (_fccee .X -_bdace .X );
_bcaa :=_ce .Abs (_fccee .Y -_bdace .Y );return _dfdg (_dbcafe ,_bcaa ,_gged );};

// Font represents the font properties on a PDF page.
type Font struct{PdfFont *_gg .PdfFont ;

// FontName represents Font Name from font properties.
FontName string ;

// FontType represents Font Subtype entry in the font dictionary inside page resources.
// Examples : type0, Type1, MMType1, Type3, TrueType, CIDFont.
FontType string ;

// ToUnicode is true if font provides a `ToUnicode` mapping.
ToUnicode bool ;

// IsCID is true if underlying font is a composite font.
// Composite font is represented by a font dictionary whose Subtype is `Type0`
IsCID bool ;

// IsSimple is true if font is simple font.
// A simple font is limited to only 8 bit (255) character codes.
IsSimple bool ;

// FontData represents the raw data of the embedded font file.
// It can have format TrueType (TTF), PostScript Font (PFB) or Compact Font Format (CCF).
// FontData value can be indicates from `FontFile`, `FontFile2` or `FontFile3` inside Font Descriptor.
// At most, only one of `FontFile`, `FontFile2` or `FontFile3` will be FontData value.
FontData []byte ;

// FontFileName is a name representing the font. it has format:
// (Font Name) + (Font Type Extension), example: helvetica.ttf.
FontFileName string ;

// FontDescriptor represents metrics and other attributes inside font properties from PDF Structure (Font Descriptor).
FontDescriptor *_gg .PdfFontDescriptor ;};func (_agdd paraList )sortReadingOrder (){_ceg .Log .Trace ("\u0073\u006fr\u0074\u0052\u0065\u0061\u0064i\u006e\u0067\u004f\u0072\u0064e\u0072\u003a\u0020\u0070\u0061\u0072\u0061\u0073\u003d\u0025\u0064\u0020\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u0078\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d",len (_agdd ));
if len (_agdd )<=1{return ;};_agdd .computeEBBoxes ();_ge .Slice (_agdd ,func (_fffc ,_aedg int )bool {return _egcf (_agdd [_fffc ],_agdd [_aedg ])<=0});};

// String returns a description of `l`.
func (_dbgb *textLine )String ()string {return _a .Sprintf ("\u0025\u002e2\u0066\u0020\u0025\u0036\u002e\u0032\u0066\u0020\u0066\u006f\u006e\u0074\u0073\u0069\u007a\u0065\u003d\u0025\u002e\u0032\u0066\u0020\"%\u0073\u0022",_dbgb ._gbfa ,_dbgb .PdfRectangle ,_dbgb ._dbdc ,_dbgb .text ());
};func (_afg *wordBag )scanBand (_cfac string ,_bgba *wordBag ,_dfae func (_fdcga *wordBag ,_dagf *textWord )bool ,_bdab ,_eadb ,_cecg float64 ,_cfae ,_cafga bool )int {_ffga :=_bgba ._agba ;var _aefg map[int ]map[*textWord ]struct{};if !_cfae {_aefg =_afg .makeRemovals ();
};_befb :=_fcdd *_ffga ;_bdac :=0;for _ ,_acd :=range _afg .depthBand (_bdab -_befb ,_eadb +_befb ){if len (_afg ._agbg [_acd ])==0{continue ;};for _ ,_edg :=range _afg ._agbg [_acd ]{if !(_bdab -_befb <=_edg ._bfgb &&_edg ._bfgb <=_eadb +_befb ){continue ;
};if !_dfae (_bgba ,_edg ){continue ;};_deggc :=2.0*_ce .Abs (_edg ._agdb -_bgba ._agba )/(_edg ._agdb +_bgba ._agba );_ebfb :=_ce .Max (_edg ._agdb /_bgba ._agba ,_bgba ._agba /_edg ._agdb );_abbe :=_ce .Min (_deggc ,_ebfb );if _cecg > 0&&_abbe > _cecg {continue ;
};if _bgba .blocked (_edg ){continue ;};if !_cfae {_bgba .pullWord (_edg ,_acd ,_aefg );};_bdac ++;if !_cafga {if _edg ._bfgb < _bdab {_bdab =_edg ._bfgb ;};if _edg ._bfgb > _eadb {_eadb =_edg ._bfgb ;};};if _cfae {break ;};};};if !_cfae {_afg .applyRemovals (_aefg );
};return _bdac ;};func _dfbb (_dff ,_eea bounded )float64 {return _dff .bbox ().Llx -_eea .bbox ().Llx };func _aef (_fdfb *_cdb .ContentStreamOperation )(float64 ,error ){if len (_fdfb .Params )!=1{_eade :=_c .New ("\u0069n\u0063\u006f\u0072\u0072e\u0063\u0074\u0020\u0070\u0061r\u0061m\u0065t\u0065\u0072\u0020\u0063\u006f\u0075\u006et");
_ceg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0025\u0023\u0071\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020h\u0061\u0076\u0065\u0020\u0025\u0064\u0020i\u006e\u0070\u0075\u0074\u0020\u0070\u0061\u0072\u0061\u006d\u0073,\u0020\u0067\u006f\u0074\u0020\u0025\u0064\u0020\u0025\u002b\u0076",_fdfb .Operand ,1,len (_fdfb .Params ),_fdfb .Params );
return 0.0,_eade ;};return _de .GetNumberAsFloat (_fdfb .Params [0]);};

// Text gets the extracted text contained in `l`.
func (_eadgg *list )Text ()string {_adcg :=&_gc .Builder {};_ecege :="";_egdg (_eadgg ,_adcg ,&_ecege );return _adcg .String ();};

// Options extractor options.
type Options struct{

// DisableDocumentTags specifies whether to use the document tags during list extraction.
DisableDocumentTags bool ;

// ApplyCropBox will extract page text based on page cropbox if set to `true`.
ApplyCropBox bool ;

// UseSimplerExtractionProcess will skip topological text ordering and table processing.
//
// NOTE: While normally the extra processing is beneficial, it can also lead to problems when it does not work.
// Thus it is a flag to allow the user to control this process.
//
// Skipping some extraction processes would also lead to the reduced processing time.
UseSimplerExtractionProcess bool ;};func (_bggeb rulingList )tidied (_adgf string )rulingList {_dcce :=_bggeb .removeDuplicates ();_dcce .log ("\u0075n\u0069\u0071\u0075\u0065\u0073");_eacf :=_dcce .snapToGroups ();if _eacf ==nil {return nil ;};_eacf .sort ();
if _aabf {_ceg .Log .Info ("\u0074\u0069\u0064i\u0065\u0064\u003a\u0020\u0025\u0071\u0020\u0076\u0065\u0063\u0073\u003d\u0025\u0064\u0020\u0075\u006e\u0069\u0071\u0075\u0065\u0073\u003d\u0025\u0064\u0020\u0063\u006f\u0061l\u0065\u0073\u0063\u0065\u0064\u003d\u0025\u0064",_adgf ,len (_bggeb ),len (_dcce ),len (_eacf ));
};_eacf .log ("\u0063o\u0061\u006c\u0065\u0073\u0063\u0065d");return _eacf ;};const (_gaegd rulingKind =iota ;_gdad ;_bdcc ;);func _cgac (_abca []*textLine ,_gfaa map[float64 ][]*textLine ,_gaba []float64 ,_fecb int ,_agd ,_bfdf float64 )[]*list {_fgaf :=[]*list {};
_bgbb :=_fecb ;_fecb =_fecb +1;_affe :=_gaba [_bgbb ];_gbe :=_gfaa [_affe ];_fcedf :=_fgda (_gbe ,_bfdf ,_agd );for _bbac ,_acae :=range _fcedf {var _fgdf float64 ;_fdee :=[]*list {};_fegda :=_acae ._gbfa ;_debb :=_bfdf ;if _bbac < len (_fcedf )-1{_debb =_fcedf [_bbac +1]._gbfa ;
};if _fecb < len (_gaba ){_fdee =_cgac (_abca ,_gfaa ,_gaba ,_fecb ,_fegda ,_debb );};_fgdf =_debb ;if len (_fdee )> 0{_bbbfc :=_fdee [0];if len (_bbbfc ._bdbb )> 0{_fgdf =_bbbfc ._bdbb [0]._gbfa ;};};_gafb :=[]*textLine {_acae };_egb :=_fbgc (_acae ,_abca ,_gaba ,_fegda ,_fgdf );
_gafb =append (_gafb ,_egb ...);_gbfcf :=_ccdf (_gafb ,"\u0062\u0075\u006c\u006c\u0065\u0074",_fdee );_gbfcf ._abgd =_cbd (_gafb ,"");_fgaf =append (_fgaf ,_gbfcf );};return _fgaf ;};

// Elements returns the TextMarks in `ma`.
func (_ggbc *TextMarkArray )Elements ()[]TextMark {return _ggbc ._fgbb };func (_cgcaf rectRuling )checkWidth (_ddefg ,_geegd float64 )(float64 ,bool ){_gbca :=_geegd -_ddefg ;_gbgf :=_gbca <=_deeb ;return _gbca ,_gbgf ;};func (_cadbg *textTable )computeBbox ()_gg .PdfRectangle {var _bcbfb _gg .PdfRectangle ;
_efgdb :=false ;for _agac :=0;_agac < _cadbg ._fbaf ;_agac ++{for _ffaf :=0;_ffaf < _cadbg ._cbdec ;_ffaf ++{_bfge :=_cadbg .get (_ffaf ,_agac );if _bfge ==nil {continue ;};if !_efgdb {_bcbfb =_bfge .PdfRectangle ;_efgdb =true ;}else {_bcbfb =_dgcc (_bcbfb ,_bfge .PdfRectangle );
};};};return _bcbfb ;};

// RenderMode specifies the text rendering mode (Tmode), which determines whether showing text shall cause
// glyph outlines to be  stroked, filled, used as a clipping boundary, or some combination of the three.
// Stroking, filling, and clipping shall have the same effects for a text object as they do for a path object
// (see 8.5.3, "Path-Painting Operators" and 8.5.4, "Clipping Path Operators").
type RenderMode int ;func (_feg *imageExtractContext )extractFormImages (_aag *_de .PdfObjectName ,_gga _cdb .GraphicsState ,_bgc *_gg .PdfPageResources )error {_fabe ,_fgf :=_bgc .GetXObjectFormByName (*_aag );if _fgf !=nil {return _fgf ;};if _fabe ==nil {return nil ;
};_fge ,_fgf :=_fabe .GetContentStream ();if _fgf !=nil {return _fgf ;};_dcc :=_fabe .Resources ;if _dcc ==nil {_dcc =_bgc ;};_fgf =_feg .extractContentStreamImages (string (_fge ),_dcc );if _fgf !=nil {return _fgf ;};_feg ._gadf ++;return nil ;};const (_gagd =true ;
_gggb =true ;_eaded =true ;_ffad =false ;_ceec =false ;_dbccf =6;_gfbe =3.0;_eccf =200;_gcac =true ;_gegf =true ;_bgea =true ;_cgbe =true ;_gbcc =false ;);

// Tables returns the tables extracted from the page.
func (_cgbc PageText )Tables ()[]TextTable {if _ccgc {_ceg .Log .Info ("\u0054\u0061\u0062\u006c\u0065\u0073\u003a\u0020\u0025\u0064",len (_cgbc ._edd ));};return _cgbc ._edd ;};func (_dcgb *textTable )log (_dcedg string ){if !_ccgc {return ;};_ceg .Log .Info ("~\u007e\u007e\u0020\u0025\u0073\u003a \u0025\u0064\u0020\u0078\u0020\u0025d\u0020\u0067\u0072\u0069\u0064\u003d\u0025t\u000a\u0020\u0020\u0020\u0020\u0020\u0020\u0025\u0036\u002e2\u0066",_dcedg ,_dcgb ._cbdec ,_dcgb ._fbaf ,_dcgb ._fege ,_dcgb .PdfRectangle );
for _ebeeg :=0;_ebeeg < _dcgb ._fbaf ;_ebeeg ++{for _cffg :=0;_cffg < _dcgb ._cbdec ;_cffg ++{_dbgdf :=_dcgb .get (_cffg ,_ebeeg );if _dbgdf ==nil {continue ;};_a .Printf ("%\u0034\u0064\u0020\u00252d\u003a \u0025\u0036\u002e\u0032\u0066 \u0025\u0071\u0020\u0025\u0064\u000a",_cffg ,_ebeeg ,_dbgdf .PdfRectangle ,_aefb (_dbgdf .text (),50),_da .RuneCountInString (_dbgdf .text ()));
};};};

// NewWithOptions an Extractor instance for extracting content from the input PDF page with options.
func NewWithOptions (page *_gg .PdfPage ,options *Options )(*Extractor ,error ){const _bd ="\u0065x\u0074\u0072\u0061\u0063\u0074\u006f\u0072\u002e\u004e\u0065\u0077W\u0069\u0074\u0068\u004f\u0070\u0074\u0069\u006f\u006e\u0073";_cg ,_ab :=page .GetAllContentStreams ();
if _ab !=nil {return nil ,_ab ;};_def ,_ccfg :=page .GetStructTreeRoot ();if !_ccfg {_ceg .Log .Info ("T\u0068\u0065\u0020\u0070\u0064\u0066\u0020\u0064\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0074\u0061\u0067g\u0065d\u002e\u0020\u0053\u0074r\u0075\u0063t\u0054\u0072\u0065\u0065\u0052\u006f\u006f\u0074\u0020\u0064\u006f\u0065\u0073\u006e\u0027\u0074\u0020\u0065\u0078\u0069\u0073\u0074\u002e");
};_abe :=page .GetContainingPdfObject ();_gee ,_ab :=page .GetMediaBox ();if _ab !=nil {return nil ,_a .Errorf ("\u0065\u0078\u0074r\u0061\u0063\u0074\u006fr\u0020\u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u006d\u0065\u0064\u0069\u0061\u0042\u006f\u0078\u002e\u0020\u0025\u0076",_ab );
};_fc :=&Extractor {_ccf :_cg ,_b :page .Resources ,_fab :*_gee ,_bf :page .CropBox ,_dd :map[string ]fontEntry {},_acb :map[string ]textResult {},_ef :options ,_cdc :_def ,_bc :_abe };if _fc ._fab .Llx > _fc ._fab .Urx {_ceg .Log .Info ("\u004d\u0065\u0064\u0069\u0061\u0042o\u0078\u0020\u0068\u0061\u0073\u0020\u0058\u0020\u0063\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0073\u0020r\u0065\u0076\u0065\u0072\u0073\u0065\u0064\u002e\u0020\u0025\u002e\u0032\u0066\u0020F\u0069x\u0069\u006e\u0067\u002e",_fc ._fab );
_fc ._fab .Llx ,_fc ._fab .Urx =_fc ._fab .Urx ,_fc ._fab .Llx ;};if _fc ._fab .Lly > _fc ._fab .Ury {_ceg .Log .Info ("\u004d\u0065\u0064\u0069\u0061\u0042o\u0078\u0020\u0068\u0061\u0073\u0020\u0059\u0020\u0063\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0073\u0020r\u0065\u0076\u0065\u0072\u0073\u0065\u0064\u002e\u0020\u0025\u002e\u0032\u0066\u0020F\u0069x\u0069\u006e\u0067\u002e",_fc ._fab );
_fc ._fab .Lly ,_fc ._fab .Ury =_fc ._fab .Ury ,_fc ._fab .Lly ;};_ff .TrackUse (_bd );return _fc ,nil ;};func (_cfdc paraList )findTextTables ()[]*textTable {var _cegc []*textTable ;for _ ,_fcgg :=range _cfdc {if _fcgg .taken ()||_fcgg .Width ()==0{continue ;
};_gffga :=_fcgg .isAtom ();if _gffga ==nil {continue ;};_gffga .growTable ();if _gffga ._cbdec *_gffga ._fbaf < _dgb {continue ;};_gffga .markCells ();_gffga .log ("\u0067\u0072\u006fw\u006e");_cegc =append (_cegc ,_gffga );};return _cegc ;};func (_ccdg *shapesState )stroke (_ddga *[]pathSection ){_faga :=pathSection {_ffa :_ccdg ._debc ,Color :_ccdg ._abec .getStrokeColor ()};
*_ddga =append (*_ddga ,_faga );if _aabf {_a .Printf ("\u0020 \u0020\u0020S\u0054\u0052\u004fK\u0045\u003a\u0020\u0025\u0064\u0020\u0073t\u0072\u006f\u006b\u0065\u0073\u0020s\u0073\u003d\u0025\u0073\u0020\u0063\u006f\u006c\u006f\u0072\u003d%\u002b\u0076\u0020\u0025\u0036\u002e\u0032\u0066\u000a",len (*_ddga ),_ccdg ,_ccdg ._abec .getStrokeColor (),_faga .bbox ());
if _acdg {for _dag ,_gcgg :=range _ccdg ._debc {_a .Printf ("\u0025\u0038\u0064\u003a\u0020\u0025\u0073\u000a",_dag ,_gcgg );if _dag ==10{break ;};};};};};func (_acef *wordBag )depthBand (_cfdb ,_bdfg float64 )[]int {if len (_acef ._agbg )==0{return nil ;
};return _acef .depthRange (_acef .getDepthIdx (_cfdb ),_acef .getDepthIdx (_bdfg ));};func (_gdfebc paraList )addNeighbours (){_fecga :=func (_ggadb []int ,_fddfg *textPara )([]*textPara ,[]*textPara ){_gegdf :=make ([]*textPara ,0,len (_ggadb )-1);_gbff :=make ([]*textPara ,0,len (_ggadb )-1);
for _ ,_bedc :=range _ggadb {_gacfd :=_gdfebc [_bedc ];if _gacfd .Urx <=_fddfg .Llx {_gegdf =append (_gegdf ,_gacfd );}else if _gacfd .Llx >=_fddfg .Urx {_gbff =append (_gbff ,_gacfd );};};return _gegdf ,_gbff ;};_fcggg :=func (_bedf []int ,_gdceg *textPara )([]*textPara ,[]*textPara ){_fggfc :=make ([]*textPara ,0,len (_bedf )-1);
_cbfe :=make ([]*textPara ,0,len (_bedf )-1);for _ ,_degea :=range _bedf {_ddffg :=_gdfebc [_degea ];if _ddffg .Ury <=_gdceg .Lly {_cbfe =append (_cbfe ,_ddffg );}else if _ddffg .Lly >=_gdceg .Ury {_fggfc =append (_fggfc ,_ddffg );};};return _fggfc ,_cbfe ;
};_cdfa :=_gdfebc .yNeighbours (_dbbd );for _ ,_defb :=range _gdfebc {_eafab :=_cdfa [_defb ];if len (_eafab )==0{continue ;};_dfcab ,_eecg :=_fecga (_eafab ,_defb );if len (_dfcab )==0&&len (_eecg )==0{continue ;};if len (_dfcab )> 0{_dbbda :=_dfcab [0];
for _ ,_cccc :=range _dfcab [1:]{if _cccc .Urx >=_dbbda .Urx {_dbbda =_cccc ;};};for _ ,_bebgf :=range _dfcab {if _bebgf !=_dbbda &&_bebgf .Urx > _dbbda .Llx {_dbbda =nil ;break ;};};if _dbbda !=nil &&_cdcg (_defb .PdfRectangle ,_dbbda .PdfRectangle ){_defb ._dadga =_dbbda ;
};};if len (_eecg )> 0{_dgfeb :=_eecg [0];for _ ,_cfbfe :=range _eecg [1:]{if _cfbfe .Llx <=_dgfeb .Llx {_dgfeb =_cfbfe ;};};for _ ,_efdeb :=range _eecg {if _efdeb !=_dgfeb &&_efdeb .Llx < _dgfeb .Urx {_dgfeb =nil ;break ;};};if _dgfeb !=nil &&_cdcg (_defb .PdfRectangle ,_dgfeb .PdfRectangle ){_defb ._ebfc =_dgfeb ;
};};};_cdfa =_gdfebc .xNeighbours (_fbe );for _ ,_ffff :=range _gdfebc {_edege :=_cdfa [_ffff ];if len (_edege )==0{continue ;};_gbgdda ,_febbd :=_fcggg (_edege ,_ffff );if len (_gbgdda )==0&&len (_febbd )==0{continue ;};if len (_febbd )> 0{_cddb :=_febbd [0];
for _ ,_dgcfa :=range _febbd [1:]{if _dgcfa .Ury >=_cddb .Ury {_cddb =_dgcfa ;};};for _ ,_faeg :=range _febbd {if _faeg !=_cddb &&_faeg .Ury > _cddb .Lly {_cddb =nil ;break ;};};if _cddb !=nil &&_ggfc (_ffff .PdfRectangle ,_cddb .PdfRectangle ){_ffff ._fgac =_cddb ;
};};if len (_gbgdda )> 0{_egdcc :=_gbgdda [0];for _ ,_geaba :=range _gbgdda [1:]{if _geaba .Lly <=_egdcc .Lly {_egdcc =_geaba ;};};for _ ,_dbabf :=range _gbgdda {if _dbabf !=_egdcc &&_dbabf .Lly < _egdcc .Ury {_egdcc =nil ;break ;};};if _egdcc !=nil &&_ggfc (_ffff .PdfRectangle ,_egdcc .PdfRectangle ){_ffff ._ddcdc =_egdcc ;
};};};for _ ,_eeeb :=range _gdfebc {if _eeeb ._dadga !=nil &&_eeeb ._dadga ._ebfc !=_eeeb {_eeeb ._dadga =nil ;};if _eeeb ._ddcdc !=nil &&_eeeb ._ddcdc ._fgac !=_eeeb {_eeeb ._ddcdc =nil ;};if _eeeb ._ebfc !=nil &&_eeeb ._ebfc ._dadga !=_eeeb {_eeeb ._ebfc =nil ;
};if _eeeb ._fgac !=nil &&_eeeb ._fgac ._ddcdc !=_eeeb {_eeeb ._fgac =nil ;};};};func (_bcdf paraList )llyOrdering ()[]int {_dgbd :=make ([]int ,len (_bcdf ));for _ddbf :=range _bcdf {_dgbd [_ddbf ]=_ddbf ;};_ge .SliceStable (_dgbd ,func (_gbba ,_aefga int )bool {_caac ,_cdcag :=_dgbd [_gbba ],_dgbd [_aefga ];
return _bcdf [_caac ].Lly < _bcdf [_cdcag ].Lly ;});return _dgbd ;};func (_aacd *textTable )putComposite (_eabbb ,_edbae int ,_fdca paraList ,_ddgf _gg .PdfRectangle ){if len (_fdca )==0{_ceg .Log .Error ("\u0074\u0065xt\u0054\u0061\u0062l\u0065\u0029\u0020\u0070utC\u006fmp\u006f\u0073\u0069\u0074\u0065\u003a\u0020em\u0070\u0074\u0079\u0020\u0070\u0061\u0072a\u0073");
return ;};_decd :=compositeCell {PdfRectangle :_ddgf ,paraList :_fdca };if _ccgc {_a .Printf ("\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0070\u0075\u0074\u0043\u006f\u006d\u0070o\u0073i\u0074\u0065\u0028\u0025\u0064\u002c\u0025\u0064\u0029\u003c\u002d\u0025\u0073\u000a",_eabbb ,_edbae ,_decd .String ());
};_decd .updateBBox ();_aacd ._bagdf [_gdaac (_eabbb ,_edbae )]=_decd ;};

// New returns an Extractor instance for extracting content from the input PDF page.
func New (page *_gg .PdfPage )(*Extractor ,error ){return NewWithOptions (page ,nil )};func (_decbe *textLine )endsInHyphen ()bool {_bdbd :=_decbe ._cffb [len (_decbe ._cffb )-1];_geaf :=_bdbd ._dbggb ;_abee ,_fbbf :=_da .DecodeLastRuneInString (_geaf );
if _fbbf <=0||!_ga .Is (_ga .Hyphen ,_abee ){return false ;};if _bdbd ._fggfg &&_dcee (_geaf ){return true ;};return _dcee (_decbe .text ());};func _edef (_fbed ,_abfb float64 )string {_egac :=!_fggff (_fbed -_abfb );if _egac {return "\u000a";};return "\u0020";
};func (_cbcfb rulingList )removeDuplicates ()rulingList {if len (_cbcfb )==0{return nil ;};_cbcfb .sort ();_eaffa :=rulingList {_cbcfb [0]};for _ ,_cada :=range _cbcfb [1:]{if _cada .equals (_eaffa [len (_eaffa )-1]){continue ;};_eaffa =append (_eaffa ,_cada );
};return _eaffa ;};func (_fccae *shapesState )lineTo (_cde ,_ecca float64 ){if _aega {_ceg .Log .Info ("\u006c\u0069\u006eeT\u006f\u0028\u0025\u002e\u0032\u0066\u002c\u0025\u002e\u0032\u0066\u0020\u0070\u003d\u0025\u002e\u0032\u0066",_cde ,_ecca ,_fccae .devicePoint (_cde ,_ecca ));
};_fccae .addPoint (_cde ,_ecca );};func (_dfaa *shapesState )establishSubpath ()*subpath {_cfbc ,_aafc :=_dfaa .lastpointEstablished ();if !_aafc {_dfaa ._debc =append (_dfaa ._debc ,_eegf (_cfbc ));};if len (_dfaa ._debc )==0{return nil ;};_dfaa ._aee =false ;
return _dfaa ._debc [len (_dfaa ._debc )-1];};func (_aedgc rulingList )comp (_aacc ,_bafb int )bool {_bdgf ,_cdeb :=_aedgc [_aacc ],_aedgc [_bafb ];_geegdc ,_dabgf :=_bdgf ._aaeb ,_cdeb ._aaeb ;if _geegdc !=_dabgf {return _geegdc > _dabgf ;};if _geegdc ==_gaegd {return false ;
};_cfba :=func (_ecced bool )bool {if _geegdc ==_gdad {return _ecced ;};return !_ecced ;};_bdbga ,_baea :=_bdgf ._dege ,_cdeb ._dege ;if _bdbga !=_baea {return _cfba (_bdbga > _baea );};_bdbga ,_baea =_bdgf ._ebaa ,_cdeb ._ebaa ;if _bdbga !=_baea {return _cfba (_bdbga < _baea );
};return _cfba (_bdgf ._bddc < _cdeb ._bddc );};

// String returns a description of `tm`.
func (_gbgac *textMark )String ()string {return _a .Sprintf ("\u0025\u002e\u0032f \u0066\u006f\u006e\u0074\u0073\u0069\u007a\u0065\u003d\u0025\u002e\u0032\u0066\u0020\u0022\u0025\u0073\u0022",_gbgac .PdfRectangle ,_gbgac ._dbgd ,_gbgac ._dfda );};func (_egag rulingList )sortStrict (){_ge .Slice (_egag ,func (_ddde ,_dabe int )bool {_fgbad ,_gbaad :=_egag [_ddde ],_egag [_dabe ];
_aggf ,_befc :=_fgbad ._aaeb ,_gbaad ._aaeb ;if _aggf !=_befc {return _aggf > _befc ;};_bgfe ,_aeeb :=_fgbad ._dege ,_gbaad ._dege ;if !_fggff (_bgfe -_aeeb ){return _bgfe < _aeeb ;};_bgfe ,_aeeb =_fgbad ._ebaa ,_gbaad ._ebaa ;if _bgfe !=_aeeb {return _bgfe < _aeeb ;
};return _fgbad ._bddc < _gbaad ._bddc ;});};func (_gdabg *textTable )compositeColCorridors ()map[int ][]float64 {_dffe :=make (map[int ][]float64 ,_gdabg ._cbdec );if _ccgc {_ceg .Log .Info ("\u0063\u006f\u006d\u0070o\u0073\u0069\u0074\u0065\u0043\u006f\u006c\u0043\u006f\u0072r\u0069d\u006f\u0072\u0073\u003a\u0020\u0077\u003d%\u0064\u0020",_gdabg ._cbdec );
};for _ggefe :=0;_ggefe < _gdabg ._cbdec ;_ggefe ++{_dffe [_ggefe ]=nil ;};return _dffe ;};func (_dfcb *wordBag )maxDepth ()float64 {return _dfcb ._ffdg -_dfcb .Lly };func _dgea (_egffe ,_afdd _gcg .Point )bool {_febf :=_ce .Abs (_egffe .X -_afdd .X );
_fcad :=_ce .Abs (_egffe .Y -_afdd .Y );return _dcba (_fcad ,_febf );};func (_ceff *wordBag )depthIndexes ()[]int {if len (_ceff ._agbg )==0{return nil ;};_edff :=make ([]int ,len (_ceff ._agbg ));_gdeb :=0;for _bcbc :=range _ceff ._agbg {_edff [_gdeb ]=_bcbc ;
_gdeb ++;};_ge .Ints (_edff );return _edff ;};func _dcee (_accb string )bool {if _da .RuneCountInString (_accb )< _caff {return false ;};_cgba ,_gdag :=_da .DecodeLastRuneInString (_accb );if _gdag <=0||!_ga .Is (_ga .Hyphen ,_cgba ){return false ;};_cgba ,_gdag =_da .DecodeLastRuneInString (_accb [:len (_accb )-_gdag ]);
return _gdag > 0&&!_ga .IsSpace (_cgba );};func (_facef paraList )applyTables (_efef []*textTable )paraList {var _edcg paraList ;for _ ,_edcc :=range _efef {_edcg =append (_edcg ,_edcc .newTablePara ());};for _ ,_geegf :=range _facef {if _geegf ._eeed {continue ;
};_edcg =append (_edcg ,_geegf );};return _edcg ;};func _cegge (_eceb []*textWord ,_eaagc float64 ,_bbf ,_ddf rulingList )*wordBag {_bfba :=_bafc (_eceb [0],_eaagc ,_bbf ,_ddf );for _ ,_bfdd :=range _eceb [1:]{_fdcfa :=_dadf (_bfdd ._bfgb );_bfba ._agbg [_fdcfa ]=append (_bfba ._agbg [_fdcfa ],_bfdd );
_bfba .PdfRectangle =_dgcc (_bfba .PdfRectangle ,_bfdd .PdfRectangle );};_bfba .sort ();return _bfba ;};func (_eacd paraList )eventNeighbours (_cbeaa []event )map[*textPara ][]int {_ge .Slice (_cbeaa ,func (_acbcg ,_cbced int )bool {_daae ,_abdca :=_cbeaa [_acbcg ],_cbeaa [_cbced ];
_gfacf ,_bbcaf :=_daae ._afbf ,_abdca ._afbf ;if _gfacf !=_bbcaf {return _gfacf < _bbcaf ;};if _daae ._adbda !=_abdca ._adbda {return _daae ._adbda ;};return _acbcg < _cbced ;});_acdbg :=make (map[int ]intSet );_befaf :=make (intSet );for _ ,_dbcad :=range _cbeaa {if _dbcad ._adbda {_acdbg [_dbcad ._fdfa ]=make (intSet );
for _agaf :=range _befaf {if _agaf !=_dbcad ._fdfa {_acdbg [_dbcad ._fdfa ].add (_agaf );_acdbg [_agaf ].add (_dbcad ._fdfa );};};_befaf .add (_dbcad ._fdfa );}else {_befaf .del (_dbcad ._fdfa );};};_fdea :=map[*textPara ][]int {};for _gcfa ,_bafbf :=range _acdbg {_bdcdb :=_eacd [_gcfa ];
if len (_bafbf )==0{_fdea [_bdcdb ]=nil ;continue ;};_dadc :=make ([]int ,len (_bafbf ));_bacbg :=0;for _bebba :=range _bafbf {_dadc [_bacbg ]=_bebba ;_bacbg ++;};_fdea [_bdcdb ]=_dadc ;};return _fdea ;};func _aeac (_gadc []*textWord ,_bada int )[]*textWord {_gade :=len (_gadc );
copy (_gadc [_bada :],_gadc [_bada +1:]);return _gadc [:_gade -1];};func (_aadd *wordBag )firstReadingIndex (_bcdd int )int {_eadgc :=_aadd .firstWord (_bcdd )._agdb ;_bbbf :=float64 (_bcdd +1)*_dafb ;_abaa :=_bbbf +_eaea *_eadgc ;_eaae :=_bcdd ;for _ ,_fadab :=range _aadd .depthBand (_bbbf ,_abaa ){if _dfbb (_aadd .firstWord (_fadab ),_aadd .firstWord (_eaae ))< 0{_eaae =_fadab ;
};};return _eaae ;};type textObject struct{_bfc *Extractor ;_aeg *_gg .PdfPageResources ;_adbg _cdb .GraphicsState ;_cdg *textState ;_afd *stateStack ;_fafb _gcg .Matrix ;_becd _gcg .Matrix ;_ceab []*textMark ;_gbga bool ;};func (_efcd *wordBag )blocked (_dggc *textWord )bool {if _dggc .Urx < _efcd .Llx {_aea :=_dcdd (_dggc .PdfRectangle );
_gcee :=_fddgc (_efcd .PdfRectangle );if _efcd ._fggf .blocks (_aea ,_gcee ){if _aacf {_ceg .Log .Info ("\u0062\u006c\u006f\u0063ke\u0064\u0020\u2190\u0078\u003a\u0020\u0025\u0073\u0020\u0025\u0073",_dggc ,_efcd );};return true ;};}else if _efcd .Urx < _dggc .Llx {_affg :=_dcdd (_efcd .PdfRectangle );
_afdf :=_fddgc (_dggc .PdfRectangle );if _efcd ._fggf .blocks (_affg ,_afdf ){if _aacf {_ceg .Log .Info ("b\u006co\u0063\u006b\u0065\u0064\u0020\u0078\u2192\u0020:\u0020\u0025\u0073\u0020%s",_dggc ,_efcd );};return true ;};};if _dggc .Ury < _efcd .Lly {_degg :=_agbc (_dggc .PdfRectangle );
_ecga :=_dfgdf (_efcd .PdfRectangle );if _efcd ._bcfb .blocks (_degg ,_ecga ){if _aacf {_ceg .Log .Info ("\u0062\u006c\u006f\u0063ke\u0064\u0020\u2190\u0079\u003a\u0020\u0025\u0073\u0020\u0025\u0073",_dggc ,_efcd );};return true ;};}else if _efcd .Ury < _dggc .Lly {_bfcg :=_agbc (_efcd .PdfRectangle );
_ggce :=_dfgdf (_dggc .PdfRectangle );if _efcd ._bcfb .blocks (_bfcg ,_ggce ){if _aacf {_ceg .Log .Info ("b\u006co\u0063\u006b\u0065\u0064\u0020\u0079\u2192\u0020:\u0020\u0025\u0073\u0020%s",_dggc ,_efcd );};return true ;};};return false ;};func _cdad (_ecbbf string ,_dcceb []rulingList ){_ceg .Log .Info ("\u0024\u0024 \u0025\u0064\u0020g\u0072\u0069\u0064\u0073\u0020\u002d\u0020\u0025\u0073",len (_dcceb ),_ecbbf );
for _cgcage ,_gdab :=range _dcceb {_a .Printf ("\u0025\u0034\u0064\u003a\u0020\u0025\u0073\u000a",_cgcage ,_gdab .String ());};};func _cgdf (_bfa ,_dccg bounded )float64 {return _bfa .bbox ().Llx -_dccg .bbox ().Urx };func _ggfc (_dgd ,_dgeeb _gg .PdfRectangle )bool {return _dgeeb .Llx <=_dgd .Urx &&_dgd .Llx <=_dgeeb .Urx ;
};type list struct{_bdbb []*textLine ;_ccacc string ;_eccg []*list ;_abgd string ;};func (_bffa rulingList )connections (_cefa map[int ]intSet ,_bcbfc int )intSet {_aagb :=make (intSet );_beae :=make (intSet );var _ebbbe func (int );_ebbbe =func (_babd int ){if !_beae .has (_babd ){_beae .add (_babd );
for _cecfa :=range _bffa {if _cefa [_cecfa ].has (_babd ){_aagb .add (_cecfa );};};for _bbcb :=range _bffa {if _aagb .has (_bbcb ){_ebbbe (_bbcb );};};};};_ebbbe (_bcbfc );return _aagb ;};func (_bbfg *textPara )depth ()float64 {if _bbfg ._dgac {return -1.0;
};if len (_bbfg ._eccfb )> 0{return _bbfg ._eccfb [0]._gbfa ;};return _bbfg ._dace .depth ();};func _edcf (_gddd ,_bfcd int )int {if _gddd > _bfcd {return _gddd ;};return _bfcd ;};const (_gdaa markKind =iota ;_gbdgb ;_ffee ;_face ;);var _gdff =[]string {"\u2756","\u27a2","\u2713","\u2022","\uf0a7","\u25a1","\u2212","\u25a0","\u25aa","\u006f"};
func (_dccgf *ruling )equals (_bfeee *ruling )bool {return _dccgf ._aaeb ==_bfeee ._aaeb &&_ddagg (_dccgf ._dege ,_bfeee ._dege )&&_ddagg (_dccgf ._ebaa ,_bfeee ._ebaa )&&_ddagg (_dccgf ._bddc ,_bfeee ._bddc );};func (_ggd *textObject )setTextMatrix (_egg []float64 ){if len (_egg )!=6{_ceg .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u006c\u0065\u006e\u0028\u0066\u0029\u0020\u0021\u003d\u0020\u0036\u0020\u0028\u0025\u0064\u0029",len (_egg ));
return ;};_bgge ,_gge ,_fabb ,_begd ,_ebb ,_edba :=_egg [0],_egg [1],_egg [2],_egg [3],_egg [4],_egg [5];_ggd ._fafb =_gcg .NewMatrix (_bgge ,_gge ,_fabb ,_begd ,_ebb ,_edba );_ggd ._becd =_ggd ._fafb ;};func (_gddgc rulingList )aligned ()bool {if len (_gddgc )< 2{return false ;
};_gbaa :=make (map[*ruling ]int );_gbaa [_gddgc [0]]=0;for _ ,_cdbf :=range _gddgc [1:]{_bded :=false ;for _efgd :=range _gbaa {if _cdbf .gridIntersecting (_efgd ){_gbaa [_efgd ]++;_bded =true ;break ;};};if !_bded {_gbaa [_cdbf ]=0;};};_ceagg :=0;for _ ,_fdga :=range _gbaa {if _fdga ==0{_ceagg ++;
};};_adaeb :=float64 (_ceagg )/float64 (len (_gddgc ));_bbge :=_adaeb <=1.0-_cedfe ;if _aabf {_ceg .Log .Info ("\u0061\u006c\u0069\u0067\u006e\u0065\u0064\u003d\u0025\u0074\u0020\u0075\u006em\u0061\u0074\u0063\u0068\u0065\u0064=\u0025\u002e\u0032\u0066\u003d\u0025\u0064\u002f\u0025\u0064\u0020\u0076\u0065c\u0073\u003d\u0025\u0073",_bbge ,_adaeb ,_ceagg ,len (_gddgc ),_gddgc .String ());
};return _bbge ;};func _cdcg (_gec ,_gedda _gg .PdfRectangle )bool {return _gec .Lly <=_gedda .Ury &&_gedda .Lly <=_gec .Ury ;};func (_fgcd *shapesState )clearPath (){_fgcd ._debc =nil ;_fgcd ._aee =false ;if _aega {_ceg .Log .Info ("\u0043\u004c\u0045A\u0052\u003a\u0020\u0073\u0073\u003d\u0025\u0073",_fgcd );
};};

// String returns a human readable description of `ss`.
func (_fdcg *shapesState )String ()string {return _a .Sprintf ("\u007b\u0025\u0064\u0020su\u0062\u0070\u0061\u0074\u0068\u0073\u0020\u0066\u0072\u0065\u0073\u0068\u003d\u0025t\u007d",len (_fdcg ._debc ),_fdcg ._aee );};func (_gfb *textObject )getStrokeColor ()_e .Color {return _abaad (_gfb ._adbg .ColorspaceStroking ,_gfb ._adbg .ColorStroking );
};type gridTiling struct{_gg .PdfRectangle ;_aagfd []float64 ;_ddee []float64 ;_afee map[float64 ]map[float64 ]gridTile ;};func (_cdgc compositeCell )String ()string {_bggea :="";if len (_cdgc .paraList )> 0{_bggea =_aefb (_cdgc .paraList .merge ().text (),50);
};return _a .Sprintf ("\u0025\u0036\u002e\u0032\u0066\u0020\u0025\u0064\u0020\u0070\u0061\u0072a\u0073\u0020\u0025\u0071",_cdgc .PdfRectangle ,len (_cdgc .paraList ),_bggea );};func (_cecea *textLine )toTextMarks (_fcfg *int )[]TextMark {var _geeb []TextMark ;
for _ ,_ceag :=range _cecea ._cffb {if _ceag ._fggfg {_geeb =_bedd (_geeb ,_fcfg ,"\u0020");};_ccag :=_ceag .toTextMarks (_fcfg );_geeb =append (_geeb ,_ccag ...);};return _geeb ;};func (_bfg *wordBag )removeWord (_daadb *textWord ,_ccfc int ){_beda :=_bfg ._agbg [_ccfc ];
_beda =_aabe (_beda ,_daadb );if len (_beda )==0{delete (_bfg ._agbg ,_ccfc );}else {_bfg ._agbg [_ccfc ]=_beda ;};};func _cbddc (_dabg []pathSection )rulingList {_deaf (_dabg );if _aabf {_ceg .Log .Info ("\u006d\u0061k\u0065\u0053\u0074\u0072\u006f\u006b\u0065\u0052\u0075\u006c\u0069\u006e\u0067\u0073\u003a\u0020\u0025\u0064\u0020\u0073\u0074\u0072ok\u0065\u0073",len (_dabg ));
};var _gbgg rulingList ;for _ ,_cfga :=range _dabg {for _ ,_afac :=range _cfga ._ffa {if len (_afac ._ggdcf )< 2{continue ;};_agfce :=_afac ._ggdcf [0];for _ ,_dfadg :=range _afac ._ggdcf [1:]{if _ggbag ,_cbfg :=_ddca (_agfce ,_dfadg ,_cfga .Color );_cbfg {_gbgg =append (_gbgg ,_ggbag );
};_agfce =_dfadg ;};};};if _aabf {_ceg .Log .Info ("m\u0061\u006b\u0065\u0053tr\u006fk\u0065\u0052\u0075\u006c\u0069n\u0067\u0073\u003a\u0020\u0025\u0073",_gbgg );};return _gbgg ;};type bounded interface{bbox ()_gg .PdfRectangle };func (_fefb *shapesState )addPoint (_dga ,_eada float64 ){_dagd :=_fefb .establishSubpath ();
_agbe :=_fefb .devicePoint (_dga ,_eada );if _dagd ==nil {_fefb ._aee =true ;_fefb ._ccgg =_agbe ;}else {_dagd .add (_agbe );};};func _deaf (_acbge []pathSection ){if _dbfa < 0.0{return ;};if _aabf {_ceg .Log .Info ("\u0067\u0072\u0061\u006e\u0075\u006c\u0061\u0072\u0069\u007a\u0065\u003a\u0020\u0025\u0064 \u0073u\u0062\u0070\u0061\u0074\u0068\u0020\u0073\u0065\u0063\u0074\u0069\u006f\u006e\u0073",len (_acbge ));
};for _deaec ,_afadc :=range _acbge {for _cbeab ,_fddcf :=range _afadc ._ffa {for _dfbfg ,_cgcagg :=range _fddcf ._ggdcf {_fddcf ._ggdcf [_dfbfg ]=_gcg .Point {X :_ceaa (_cgcagg .X ),Y :_ceaa (_cgcagg .Y )};if _aabf {_defad :=_fddcf ._ggdcf [_dfbfg ];if !_dfaae (_cgcagg ,_defad ){_beac :=_gcg .Point {X :_defad .X -_cgcagg .X ,Y :_defad .Y -_cgcagg .Y };
_a .Printf ("\u0025\u0034d \u002d\u0020\u00254\u0064\u0020\u002d\u0020%4d\u003a %\u002e\u0032\u0066\u0020\u2192\u0020\u0025.2\u0066\u0020\u0028\u0025\u0067\u0029\u000a",_deaec ,_cbeab ,_dfbfg ,_cgcagg ,_defad ,_beac );};};};};};};func (_fafef rulingList )snapToGroups ()rulingList {_dgde ,_eaebg :=_fafef .vertsHorzs ();
if len (_dgde )> 0{_dgde =_dgde .snapToGroupsDirection ();};if len (_eaebg )> 0{_eaebg =_eaebg .snapToGroupsDirection ();};_ffefg :=append (_dgde ,_eaebg ...);_ffefg .log ("\u0073\u006e\u0061p\u0054\u006f\u0047\u0072\u006f\u0075\u0070\u0073");return _ffefg ;
};func _dgcc (_bbdb ,_ebeb _gg .PdfRectangle )_gg .PdfRectangle {return _gg .PdfRectangle {Llx :_ce .Min (_bbdb .Llx ,_ebeb .Llx ),Lly :_ce .Min (_bbdb .Lly ,_ebeb .Lly ),Urx :_ce .Max (_bbdb .Urx ,_ebeb .Urx ),Ury :_ce .Max (_bbdb .Ury ,_ebeb .Ury )};
};func _ceaa (_gcde float64 )float64 {return _dbfa *_ce .Round (_gcde /_dbfa )};func _ebcgf (_caag []*textMark ,_ebbbeb _gg .PdfRectangle )*textWord {_feaf :=_caag [0].PdfRectangle ;_ccceb :=_caag [0]._dbgd ;for _ ,_fbba :=range _caag [1:]{_feaf =_dgcc (_feaf ,_fbba .PdfRectangle );
if _fbba ._dbgd > _ccceb {_ccceb =_fbba ._dbgd ;};};return &textWord {PdfRectangle :_feaf ,_cgde :_caag ,_bfgb :_ebbbeb .Ury -_feaf .Lly ,_agdb :_ccceb };};type imageExtractContext struct{_gfg []ImageMark ;_efb int ;_gfgg int ;_gadf int ;_bef map[*_de .PdfObjectStream ]*cachedImage ;
_cda *ImageExtractOptions ;};func _abfa (_cbcb []*textLine )[]*textLine {_ffcg :=[]*textLine {};for _ ,_aeca :=range _cbcb {_aecg :=_aeca .text ();_dfdc :=_ddbb .Find ([]byte (_aecg ));if _dfdc !=nil {_ffcg =append (_ffcg ,_aeca );};};return _ffcg ;};func (_cbbfb *textTable )reduce ()*textTable {_acbb :=make ([]int ,0,_cbbfb ._fbaf );
_ebccb :=make ([]int ,0,_cbbfb ._cbdec );for _cbeddb :=0;_cbeddb < _cbbfb ._fbaf ;_cbeddb ++{if !_cbbfb .emptyCompositeRow (_cbeddb ){_acbb =append (_acbb ,_cbeddb );};};for _dgfdd :=0;_dgfdd < _cbbfb ._cbdec ;_dgfdd ++{if !_cbbfb .emptyCompositeColumn (_dgfdd ){_ebccb =append (_ebccb ,_dgfdd );
};};if len (_acbb )==_cbbfb ._fbaf &&len (_ebccb )==_cbbfb ._cbdec {return _cbbfb ;};_fgcec :=textTable {_fege :_cbbfb ._fege ,_cbdec :len (_ebccb ),_fbaf :len (_acbb ),_aebfe :make (map[uint64 ]*textPara ,len (_ebccb )*len (_acbb ))};if _ccgc {_ceg .Log .Info ("\u0072\u0065\u0064\u0075ce\u003a\u0020\u0025\u0064\u0078\u0025\u0064\u0020\u002d\u003e\u0020\u0025\u0064\u0078%\u0064",_cbbfb ._cbdec ,_cbbfb ._fbaf ,len (_ebccb ),len (_acbb ));
_ceg .Log .Info ("\u0072\u0065d\u0075\u0063\u0065d\u0043\u006f\u006c\u0073\u003a\u0020\u0025\u002b\u0076",_ebccb );_ceg .Log .Info ("\u0072\u0065d\u0075\u0063\u0065d\u0052\u006f\u0077\u0073\u003a\u0020\u0025\u002b\u0076",_acbb );};for _cffd ,_cgacd :=range _acbb {for _caaae ,_fegeg :=range _ebccb {_ecfdd ,_cbaba :=_cbbfb .getComposite (_fegeg ,_cgacd );
if _ecfdd ==nil {continue ;};if _ccgc {_a .Printf ("\u0020 \u0025\u0032\u0064\u002c \u0025\u0032\u0064\u0020\u0028%\u0032d\u002c \u0025\u0032\u0064\u0029\u0020\u0025\u0071\n",_caaae ,_cffd ,_fegeg ,_cgacd ,_aefb (_ecfdd .merge ().text (),50));};_fgcec .putComposite (_caaae ,_cffd ,_ecfdd ,_cbaba );
};};return &_fgcec ;};func (_gdecc rulingList )toTilings ()(rulingList ,[]gridTiling ){_gdecc .log ("\u0074o\u0054\u0069\u006c\u0069\u006e\u0067s");if len (_gdecc )==0{return nil ,nil ;};_gdecc =_gdecc .tidied ("\u0061\u006c\u006c");_gdecc .log ("\u0074\u0069\u0064\u0069\u0065\u0064");
_becf :=_gdecc .toGrids ();_feac :=make ([]gridTiling ,len (_becf ));for _gaefc ,_fdaef :=range _becf {_feac [_gaefc ]=_fdaef .asTiling ();};return _gdecc ,_feac ;};type pathSection struct{_ffa []*subpath ;_e .Color ;};

// ToTextMark returns the public view of `tm`.
func (_bdad *textMark )ToTextMark ()TextMark {return TextMark {Text :_bdad ._dfda ,Original :_bdad ._egab ,BBox :_bdad ._gdbfe ,Font :_bdad ._acfcb ,FontSize :_bdad ._dbgd ,FillColor :_bdad ._ffbbb ,StrokeColor :_bdad ._faea ,Orientation :_bdad ._abdg ,DirectObject :_bdad ._aafe ,ObjString :_bdad ._gdge ,Tw :_bdad .Tw ,Th :_bdad .Th ,Tc :_bdad ._eced ,Index :_bdad ._geef };
};func _eggga (_debgd ,_gfcfe _gcg .Point )rulingKind {_aeea :=_ce .Abs (_debgd .X -_gfcfe .X );_affa :=_ce .Abs (_debgd .Y -_gfcfe .Y );return _dfdg (_aeea ,_affa ,_bce );};func _dagb (_gegb string )(string ,bool ){_cedcf :=[]rune (_gegb );if len (_cedcf )!=1{return "",false ;
};_ggagb ,_fgeac :=_cebb [_cedcf [0]];return _ggagb ,_fgeac ;};

// NewFromContents creates a new extractor from contents and page resources.
func NewFromContents (contents string ,resources *_gg .PdfPageResources )(*Extractor ,error ){const _ea ="\u0065x\u0074\u0072\u0061\u0063t\u006f\u0072\u002e\u004e\u0065w\u0046r\u006fm\u0043\u006f\u006e\u0074\u0065\u006e\u0074s";_ad :=&Extractor {_ccf :contents ,_b :resources ,_dd :map[string ]fontEntry {},_acb :map[string ]textResult {}};
_ff .TrackUse (_ea );return _ad ,nil ;};type lineRuling struct{_agdde rulingKind ;_edbag markKind ;_e .Color ;_geca ,_aedf _gcg .Point ;};func (_agef lineRuling )yMean ()float64 {return 0.5*(_agef ._geca .Y +_agef ._aedf .Y )};func (_gceb paraList )computeEBBoxes (){if _gdbf {_ceg .Log .Info ("\u0063o\u006dp\u0075\u0074\u0065\u0045\u0042\u0042\u006f\u0078\u0065\u0073\u003a");
};for _ ,_aagce :=range _gceb {_aagce ._eggab =_aagce .PdfRectangle ;};_gfab :=_gceb .yNeighbours (0);for _beaa ,_ecega :=range _gceb {_fefgc :=_ecega ._eggab ;_bdcf ,_dcef :=-1.0e9,+1.0e9;for _ ,_dcaa :=range _gfab [_ecega ]{_fac :=_gceb [_dcaa ]._eggab ;
if _fac .Urx < _fefgc .Llx {_bdcf =_ce .Max (_bdcf ,_fac .Urx );}else if _fefgc .Urx < _fac .Llx {_dcef =_ce .Min (_dcef ,_fac .Llx );};};for _debce ,_cgbb :=range _gceb {_fdac :=_cgbb ._eggab ;if _beaa ==_debce ||_fdac .Ury > _fefgc .Lly {continue ;};
if _bdcf <=_fdac .Llx &&_fdac .Llx < _fefgc .Llx {_fefgc .Llx =_fdac .Llx ;}else if _fdac .Urx <=_dcef &&_fefgc .Urx < _fdac .Urx {_fefgc .Urx =_fdac .Urx ;};};if _gdbf {_a .Printf ("\u0025\u0034\u0064\u003a %\u0036\u002e\u0032\u0066\u2192\u0025\u0036\u002e\u0032\u0066\u0020\u0025\u0071\u000a",_beaa ,_ecega ._eggab ,_fefgc ,_aefb (_ecega .text (),50));
};_ecega ._eggab =_fefgc ;};if _ffad {for _ ,_ggaf :=range _gceb {_ggaf .PdfRectangle =_ggaf ._eggab ;};};};func (_abc *subpath )last ()_gcg .Point {return _abc ._ggdcf [len (_abc ._ggdcf )-1]};func _decc (_aaab ,_ccc bounded )float64 {_cagg :=_dfbb (_aaab ,_ccc );
if !_fggff (_cagg ){return _cagg ;};return _bad (_aaab ,_ccc );};func (_efd *textLine )markWordBoundaries (){_cbbb :=_fgbbe *_efd ._dbdc ;for _ccafa ,_gfcc :=range _efd ._cffb [1:]{if _cgdf (_gfcc ,_efd ._cffb [_ccafa ])>=_cbbb {_gfcc ._fggfg =true ;};
};};

// String returns a string describing `pt`.
func (_cbaf PageText )String ()string {_eee :=_a .Sprintf ("P\u0061\u0067\u0065\u0054ex\u0074:\u0020\u0025\u0064\u0020\u0065l\u0065\u006d\u0065\u006e\u0074\u0073",len (_cbaf ._cge ));_cead :=[]string {"\u002d"+_eee };for _ ,_fbfdc :=range _cbaf ._cge {_cead =append (_cead ,_fbfdc .String ());
};_cead =append (_cead ,"\u002b"+_eee );return _gc .Join (_cead ,"\u000a");};

// String returns a description of `b`.
func (_ceee *wordBag )String ()string {var _bdfe []string ;for _ ,_bebb :=range _ceee .depthIndexes (){_fbaa :=_ceee ._agbg [_bebb ];for _ ,_dae :=range _fbaa {_bdfe =append (_bdfe ,_dae ._dbggb );};};return _a .Sprintf ("\u0025.\u0032\u0066\u0020\u0066\u006f\u006e\u0074\u0073\u0069\u007a\u0065=\u0025\u002e\u0032\u0066\u0020\u0025\u0064\u0020\u0025\u0071",_ceee .PdfRectangle ,_ceee ._agba ,len (_bdfe ),_bdfe );
};func (_gbgcc *textTable )isExportable ()bool {if _gbgcc ._fege {return true ;};_cfcab :=func (_faef int )bool {_dgdbc :=_gbgcc .get (0,_faef );if _dgdbc ==nil {return false ;};_gfbeb :=_dgdbc .text ();_eeff :=_da .RuneCountInString (_gfbeb );_bgeaf :=_gcfec .MatchString (_gfbeb );
return _eeff <=1||_bgeaf ;};for _ffgece :=0;_ffgece < _gbgcc ._fbaf ;_ffgece ++{if !_cfcab (_ffgece ){return true ;};};return false ;};

// Text returns the text content of the `bulletLists`.
func (_adffb *lists )Text ()string {_ggede :=&_gc .Builder {};for _ ,_dafc :=range *_adffb {_cceg :=_dafc .Text ();_ggede .WriteString (_cceg );};return _ggede .String ();};func (_ecfe rulingList )vertsHorzs ()(rulingList ,rulingList ){var _egec ,_fddf rulingList ;
for _ ,_bdce :=range _ecfe {switch _bdce ._aaeb {case _bdcc :_egec =append (_egec ,_bdce );case _gdad :_fddf =append (_fddf ,_bdce );};};return _egec ,_fddf ;};func (_acga paraList )findTables (_dead []gridTiling )[]*textTable {_acga .addNeighbours ();
_ge .Slice (_acga ,func (_acce ,_eaec int )bool {return _decc (_acga [_acce ],_acga [_eaec ])< 0});var _gcdf []*textTable ;if _gcac {_bdada :=_acga .findGridTables (_dead );_gcdf =append (_gcdf ,_bdada ...);};if _gegf {_dbge :=_acga .findTextTables ();
_gcdf =append (_gcdf ,_dbge ...);};return _gcdf ;};func (_ccad *PageText )getParagraphs ()paraList {var _dad rulingList ;if _bgea {_abdd :=_cbddc (_ccad ._cgce );_dad =append (_dad ,_abdd ...);};if _cgbe {_febe :=_efade (_ccad ._gegda );_dad =append (_dad ,_febe ...);
};_dad ,_ggg :=_dad .toTilings ();var _bcda paraList ;_gfce :=len (_ccad ._cge );for _bgaaa :=0;_bgaaa < 360&&_gfce > 0;_bgaaa +=90{_gddc :=make ([]*textMark ,0,len (_ccad ._cge )-_gfce );for _ ,_efa :=range _ccad ._cge {if _efa ._abdg ==_bgaaa {_gddc =append (_gddc ,_efa );
};};if len (_gddc )> 0{_edbge :=_cdeg (_gddc ,_ccad ._gba ,_dad ,_ggg ,_ccad ._dfg ._egd );_bcda =append (_bcda ,_edbge ...);_gfce -=len (_gddc );};};return _bcda ;};func _cgfg (_aefc *paraList )map[int ][]*textLine {_cfcd :=map[int ][]*textLine {};for _ ,_edeb :=range *_aefc {for _ ,_dagg :=range _edeb ._eccfb {if !_becb (_dagg ){_ceg .Log .Debug ("g\u0072\u006f\u0075p\u004c\u0069\u006e\u0065\u0073\u003a\u0020\u0054\u0068\u0065\u0020\u0074\u0065\u0078\u0074\u0020\u006c\u0069\u006e\u0065\u0020\u0063\u006f\u006e\u0074a\u0069\u006e\u0073 \u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e\u0020\u006f\u006e\u0065 \u006d\u0063\u0069\u0064 \u006e\u0075\u006d\u0062e\u0072\u002e\u0020\u0049\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0073p\u006c\u0069\u0074\u002e");
continue ;};_dgcf :=_dagg ._cffb [0]._cgde [0]._egeg ;_cfcd [_dgcf ]=append (_cfcd [_dgcf ],_dagg );};if _edeb ._dace !=nil {_aagc :=_edeb ._dace ._aebfe ;for _ ,_aecab :=range _aagc {for _ ,_acefb :=range _aecab ._eccfb {if !_becb (_acefb ){_ceg .Log .Debug ("g\u0072\u006f\u0075p\u004c\u0069\u006e\u0065\u0073\u003a\u0020\u0054\u0068\u0065\u0020\u0074\u0065\u0078\u0074\u0020\u006c\u0069\u006e\u0065\u0020\u0063\u006f\u006e\u0074a\u0069\u006e\u0073 \u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e\u0020\u006f\u006e\u0065 \u006d\u0063\u0069\u0064 \u006e\u0075\u006d\u0062e\u0072\u002e\u0020\u0049\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0073p\u006c\u0069\u0074\u002e");
continue ;};_dece :=_acefb ._cffb [0]._cgde [0]._egeg ;_cfcd [_dece ]=append (_cfcd [_dece ],_acefb );};};};};return _cfcd ;};func (_ecfd rulingList )snapToGroupsDirection ()rulingList {_ecfd .sortStrict ();_dafea :=make (map[*ruling ]rulingList ,len (_ecfd ));
_ggag :=_ecfd [0];_cbab :=func (_feeda *ruling ){_ggag =_feeda ;_dafea [_ggag ]=rulingList {_feeda }};_cbab (_ecfd [0]);for _ ,_edgff :=range _ecfd [1:]{if _edgff ._dege < _ggag ._dege -_eda {_ceg .Log .Error ("\u0073\u006e\u0061\u0070T\u006f\u0047\u0072\u006f\u0075\u0070\u0073\u0044\u0069r\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0057\u0072\u006f\u006e\u0067\u0020\u0070\u0072\u0069\u006da\u0072\u0079\u0020\u006f\u0072d\u0065\u0072\u002e\u000a\u0009\u0076\u0030\u003d\u0025\u0073\u000a\u0009\u0020\u0076\u003d\u0025\u0073",_ggag ,_edgff );
};if _edgff ._dege > _ggag ._dege +_deeb {_cbab (_edgff );}else {_dafea [_ggag ]=append (_dafea [_ggag ],_edgff );};};_aggc :=make (map[*ruling ]float64 ,len (_dafea ));_bbgbc :=make (map[*ruling ]*ruling ,len (_ecfd ));for _aefce ,_gfad :=range _dafea {_aggc [_aefce ]=_gfad .mergePrimary ();
for _ ,_dggb :=range _gfad {_bbgbc [_dggb ]=_aefce ;};};for _ ,_ffbed :=range _ecfd {_ffbed ._dege =_aggc [_bbgbc [_ffbed ]];};_afdff :=make (rulingList ,0,len (_ecfd ));for _ ,_agca :=range _dafea {_eggb :=_agca .splitSec ();for _afdgb ,_adffae :=range _eggb {_dfef :=_adffae .merge ();
if len (_afdff )> 0{_ebaga :=_afdff [len (_afdff )-1];if _ebaga .alignsPrimary (_dfef )&&_ebaga .alignsSec (_dfef ){_ceg .Log .Error ("\u0073\u006e\u0061\u0070\u0054\u006fG\u0072\u006f\u0075\u0070\u0073\u0044\u0069\u0072\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0044\u0075\u0070\u006ci\u0063\u0061\u0074\u0065\u0020\u0069\u003d\u0025\u0064\u000a\u0009\u0077\u003d\u0025s\u000a\t\u0076\u003d\u0025\u0073",_afdgb ,_ebaga ,_dfef );
continue ;};};_afdff =append (_afdff ,_dfef );};};_afdff .sortStrict ();return _afdff ;};func (_bgfc *textWord )computeText ()string {_eeae :=make ([]string ,len (_bgfc ._cgde ));for _bcce ,_ddbe :=range _bgfc ._cgde {_eeae [_bcce ]=_ddbe ._dfda ;};return _gc .Join (_eeae ,"");
};func (_fgcdf *textPara )toCellTextMarks (_daaa *int )[]TextMark {var _fcfa []TextMark ;for _gagde ,_aebf :=range _fgcdf ._eccfb {_fcbed :=_aebf .toTextMarks (_daaa );_fcfd :=_gagd &&_aebf .endsInHyphen ()&&_gagde !=len (_fgcdf ._eccfb )-1;if _fcfd {_fcbed =_bdfd (_fcbed ,_daaa );
};_fcfa =append (_fcfa ,_fcbed ...);if !(_fcfd ||_gagde ==len (_fgcdf ._eccfb )-1){_fcfa =_bedd (_fcfa ,_daaa ,_edef (_aebf ._gbfa ,_fgcdf ._eccfb [_gagde +1]._gbfa ));};};return _fcfa ;};func (_dgdb paraList )writeText (_ccdb _d .Writer ){for _deaa ,_ceefc :=range _dgdb {if _ceefc ._dgac {continue ;
};_ceefc .writeText (_ccdb );if _deaa !=len (_dgdb )-1{if _bccf (_ceefc ,_dgdb [_deaa +1]){_ccdb .Write ([]byte ("\u0020"));}else {_ccdb .Write ([]byte ("\u000a"));_ccdb .Write ([]byte ("\u000a"));};};};_ccdb .Write ([]byte ("\u000a"));_ccdb .Write ([]byte ("\u000a"));
};func _fgda (_aaef []*textLine ,_abgb ,_dfga float64 )[]*textLine {var _fgeaf []*textLine ;for _ ,_edbeg :=range _aaef {if _abgb ==-1{if _edbeg ._gbfa > _dfga {_fgeaf =append (_fgeaf ,_edbeg );};}else {if _edbeg ._gbfa > _dfga &&_edbeg ._gbfa < _abgb {_fgeaf =append (_fgeaf ,_edbeg );
};};};return _fgeaf ;};

// ApplyArea processes the page text only within the specified area `bbox`.
// Each time ApplyArea is called, it updates the result set in `pt`.
// Can be called multiple times in a row with different bounding boxes.
func (_bdeb *PageText )ApplyArea (bbox _gg .PdfRectangle ){_fcee :=make ([]*textMark ,0,len (_bdeb ._cge ));for _ ,_bdfb :=range _bdeb ._cge {if _bfe (_bdfb .bbox (),bbox ){_fcee =append (_fcee ,_bdfb );};};var _debe paraList ;_cef :=len (_fcee );for _bged :=0;
_bged < 360&&_cef > 0;_bged +=90{_ebceg :=make ([]*textMark ,0,len (_fcee )-_cef );for _ ,_gcgf :=range _fcee {if _gcgf ._abdg ==_bged {_ebceg =append (_ebceg ,_gcgf );};};if len (_ebceg )> 0{_gafc :=_cdeg (_ebceg ,_bdeb ._gba ,nil ,nil ,_bdeb ._dfg ._egd );
_debe =append (_debe ,_gafc ...);_cef -=len (_ebceg );};};_gfgc :=new (_fa .Buffer );_debe .writeText (_gfgc );_bdeb ._fccf =_gfgc .String ();_bdeb ._cggg =_debe .toTextMarks ();_bdeb ._edd =_debe .tables ();};func (_ebea *textWord )bbox ()_gg .PdfRectangle {return _ebea .PdfRectangle };
func (_efge *textTable )getDown ()paraList {_agbcg :=make (paraList ,_efge ._cbdec );for _ffdab :=0;_ffdab < _efge ._cbdec ;_ffdab ++{_feagf :=_efge .get (_ffdab ,_efge ._fbaf -1)._fgac ;if _feagf .taken (){return nil ;};_agbcg [_ffdab ]=_feagf ;};for _afbg :=0;
_afbg < _efge ._cbdec -1;_afbg ++{if _agbcg [_afbg ]._ebfc !=_agbcg [_afbg +1]{return nil ;};};return _agbcg ;};func _cefef (_edcee string )string {_efgg :=[]rune (_edcee );return string (_efgg [:len (_efgg )-1])};func (_ggfa paraList )reorder (_aeeg []int ){_geab :=make (paraList ,len (_ggfa ));
for _eacb ,_eefg :=range _aeeg {_geab [_eacb ]=_ggfa [_eefg ];};copy (_ggfa ,_geab );};type textMark struct{_gg .PdfRectangle ;_abdg int ;_dfda string ;_egab string ;_acfcb *_gg .PdfFont ;_dbgd float64 ;_eced float64 ;_addd _gcg .Matrix ;_bgbad _gcg .Point ;
_gdbfe _gg .PdfRectangle ;_ffbbb _e .Color ;_faea _e .Color ;_aafe _de .PdfObject ;_gdge []string ;Tw float64 ;Th float64 ;_egeg int ;_geef int ;};func (_dfdb *textLine )appendWord (_gbd *textWord ){_dfdb ._cffb =append (_dfdb ._cffb ,_gbd );_dfdb .PdfRectangle =_dgcc (_dfdb .PdfRectangle ,_gbd .PdfRectangle );
if _gbd ._agdb > _dfdb ._dbdc {_dfdb ._dbdc =_gbd ._agdb ;};if _gbd ._bfgb > _dfdb ._gbfa {_dfdb ._gbfa =_gbd ._bfgb ;};};var _degd string ="\u005e\u005b\u0061\u002d\u007a\u0041\u002dZ\u005d\u0028\u005c)\u007c\u005c\u002e)\u007c\u005e[\u005c\u0064\u005d\u002b\u0028\u005c)\u007c\\.\u0029\u007c\u005e\u005c\u0028\u005b\u0061\u002d\u007a\u0041\u002d\u005a\u005d\u005c\u0029\u007c\u005e\u005c\u0028\u005b\u005c\u0064\u005d\u002b\u005c\u0029";
func (_bafba *textTable )subdivide ()*textTable {_bafba .logComposite ("\u0073u\u0062\u0064\u0069\u0076\u0069\u0064e");_dceeg :=_bafba .compositeRowCorridors ();_bcfgg :=_bafba .compositeColCorridors ();if _ccgc {_ceg .Log .Info ("\u0073u\u0062\u0064i\u0076\u0069\u0064\u0065:\u000a\u0009\u0072o\u0077\u0043\u006f\u0072\u0072\u0069\u0064\u006f\u0072s=\u0025\u0073\u000a\t\u0063\u006fl\u0043\u006f\u0072\u0072\u0069\u0064o\u0072\u0073=\u0025\u0073",_debca (_dceeg ),_debca (_bcfgg ));
};if len (_dceeg )==0||len (_bcfgg )==0{return _bafba ;};_ddad (_dceeg );_ddad (_bcfgg );if _ccgc {_ceg .Log .Info ("\u0073\u0075\u0062\u0064\u0069\u0076\u0069\u0064\u0065\u0020\u0066\u0069\u0078\u0065\u0064\u003a\u000a\u0009r\u006f\u0077\u0043\u006f\u0072\u0072\u0069d\u006f\u0072\u0073\u003d\u0025\u0073\u000a\u0009\u0063\u006f\u006cC\u006f\u0072\u0072\u0069\u0064\u006f\u0072\u0073\u003d\u0025\u0073",_debca (_dceeg ),_debca (_bcfgg ));
};_bebg ,_edcaf :=_aaaf (_bafba ._fbaf ,_dceeg );_aecf ,_aafdd :=_aaaf (_bafba ._cbdec ,_bcfgg );_egaa :=make (map[uint64 ]*textPara ,_aafdd *_edcaf );_aabff :=&textTable {PdfRectangle :_bafba .PdfRectangle ,_fege :_bafba ._fege ,_fbaf :_edcaf ,_cbdec :_aafdd ,_aebfe :_egaa };
if _ccgc {_ceg .Log .Info ("\u0073\u0075b\u0064\u0069\u0076\u0069\u0064\u0065\u003a\u0020\u0063\u006f\u006d\u0070\u006f\u0073\u0069\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0078\u0020\u0025\u0064\u0020\u0063\u0065\u006c\u006c\u0073\u003d\u0020\u0025\u0064\u0020\u0078\u0020\u0025\u0064\u000a"+"\u0009\u0072\u006f\u0077\u0043\u006f\u0072\u0072\u0069\u0064\u006f\u0072s\u003d\u0025\u0073\u000a"+"\u0009\u0063\u006f\u006c\u0043\u006f\u0072\u0072\u0069\u0064\u006f\u0072s\u003d\u0025\u0073\u000a"+"\u0009\u0079\u004f\u0066\u0066\u0073\u0065\u0074\u0073=\u0025\u002b\u0076\u000a"+"\u0009\u0078\u004f\u0066\u0066\u0073\u0065\u0074\u0073\u003d\u0025\u002b\u0076",_bafba ._cbdec ,_bafba ._fbaf ,_aafdd ,_edcaf ,_debca (_dceeg ),_debca (_bcfgg ),_bebg ,_aecf );
};for _egdd :=0;_egdd < _bafba ._fbaf ;_egdd ++{_bedb :=_bebg [_egdd ];for _bbca :=0;_bbca < _bafba ._cbdec ;_bbca ++{_acagf :=_aecf [_bbca ];if _ccgc {_a .Printf ("\u0025\u0036\u0064\u002c %\u0032\u0064\u003a\u0020\u0078\u0030\u003d\u0025\u0064\u0020\u0079\u0030\u003d\u0025d\u000a",_bbca ,_egdd ,_acagf ,_bedb );
};_fbef ,_ceagc :=_bafba ._bagdf [_gdaac (_bbca ,_egdd )];if !_ceagc {continue ;};_bbcgb :=_fbef .split (_dceeg [_egdd ],_bcfgg [_bbca ]);for _dfdac :=0;_dfdac < _bbcgb ._fbaf ;_dfdac ++{for _ebgfb :=0;_ebgfb < _bbcgb ._cbdec ;_ebgfb ++{_cgeae :=_bbcgb .get (_ebgfb ,_dfdac );
_aabff .put (_acagf +_ebgfb ,_bedb +_dfdac ,_cgeae );if _ccgc {_a .Printf ("\u0025\u0038\u0064\u002c\u0020\u0025\u0032\u0064\u003a\u0020\u0025\u0073\u000a",_acagf +_ebgfb ,_bedb +_dfdac ,_cgeae );};};};};};return _aabff ;};

// TableInfo gets table information of the textmark `tm`.
func (_cfbf *TextMark )TableInfo ()(*TextTable ,[][]int ){if !_cfbf ._bgf {return nil ,nil ;};_dcea :=_cfbf ._accc ;_dfde :=_dcea .getCellInfo (*_cfbf );return _dcea ,_dfde ;};func (_dgef *textTable )get (_gdadg ,_gfffc int )*textPara {return _dgef ._aebfe [_gdaac (_gdadg ,_gfffc )];
};type subpath struct{_ggdcf []_gcg .Point ;_eddb bool ;};type intSet map[int ]struct{};

// RangeOffset returns the TextMarks in `ma` that overlap text[start:end] in the extracted text.
// These are tm: `start` <= tm.Offset + len(tm.Text) && tm.Offset < `end` where
// `start` and `end` are offsets in the extracted text.
// NOTE: TextMarks can contain multiple characters. e.g. "ffi" for the ﬃ ligature so the first and
// last elements of the returned TextMarkArray may only partially overlap text[start:end].
func (_gcag *TextMarkArray )RangeOffset (start ,end int )(*TextMarkArray ,error ){if _gcag ==nil {return nil ,_c .New ("\u006da\u003d\u003d\u006e\u0069\u006c");};if end < start {return nil ,_a .Errorf ("\u0065\u006e\u0064\u0020\u003c\u0020\u0073\u0074\u0061\u0072\u0074\u002e\u0020\u0052\u0061n\u0067\u0065\u004f\u0066\u0066\u0073\u0065\u0074\u0020\u006e\u006f\u0074\u0020d\u0065\u0066\u0069\u006e\u0065\u0064\u002e\u0020\u0073\u0074\u0061\u0072t=\u0025\u0064\u0020\u0065\u006e\u0064\u003d\u0025\u0064\u0020",start ,end );
};_ecbg :=len (_gcag ._fgbb );if _ecbg ==0{return _gcag ,nil ;};if start < _gcag ._fgbb [0].Offset {start =_gcag ._fgbb [0].Offset ;};if end > _gcag ._fgbb [_ecbg -1].Offset +1{end =_gcag ._fgbb [_ecbg -1].Offset +1;};_gedag :=_ge .Search (_ecbg ,func (_aegd int )bool {return _gcag ._fgbb [_aegd ].Offset +len (_gcag ._fgbb [_aegd ].Text )-1>=start });
if !(0<=_gedag &&_gedag < _ecbg ){_fcaf :=_a .Errorf ("\u004f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067\u0065\u002e\u0020\u0073\u0074\u0061\u0072\u0074\u003d%\u0064\u0020\u0069\u0053\u0074\u0061\u0072\u0074\u003d\u0025\u0064\u0020\u006c\u0065\u006e\u003d\u0025\u0064\u000a\u0009\u0066\u0069\u0072\u0073\u0074\u003d\u0025\u0076\u000a\u0009 \u006c\u0061\u0073\u0074\u003d%\u0076",start ,_gedag ,_ecbg ,_gcag ._fgbb [0],_gcag ._fgbb [_ecbg -1]);
return nil ,_fcaf ;};_bfb :=_ge .Search (_ecbg ,func (_efac int )bool {return _gcag ._fgbb [_efac ].Offset > end -1});if !(0<=_bfb &&_bfb < _ecbg ){_ebg :=_a .Errorf ("\u004f\u0075\u0074\u0020\u006f\u0066\u0020r\u0061\u006e\u0067e\u002e\u0020\u0065n\u0064\u003d%\u0064\u0020\u0069\u0045\u006e\u0064=\u0025d \u006c\u0065\u006e\u003d\u0025\u0064\u000a\u0009\u0066\u0069\u0072\u0073\u0074\u003d\u0025\u0076\u000a\u0009\u0020\u006c\u0061\u0073\u0074\u003d\u0025\u0076",end ,_bfb ,_ecbg ,_gcag ._fgbb [0],_gcag ._fgbb [_ecbg -1]);
return nil ,_ebg ;};if _bfb <=_gedag {return nil ,_a .Errorf ("\u0069\u0045\u006e\u0064\u0020\u003c=\u0020\u0069\u0053\u0074\u0061\u0072\u0074\u003a\u0020\u0073\u0074\u0061\u0072\u0074\u003d\u0025\u0064\u0020\u0065\u006ed\u003d\u0025\u0064\u0020\u0069\u0053\u0074\u0061\u0072\u0074\u003d\u0025\u0064\u0020i\u0045n\u0064\u003d\u0025\u0064",start ,end ,_gedag ,_bfb );
};return &TextMarkArray {_fgbb :_gcag ._fgbb [_gedag :_bfb ]},nil ;};func (_cdefd paraList )merge ()*textPara {_ceg .Log .Trace ("\u006d\u0065\u0072\u0067\u0065:\u0020\u0070\u0061\u0072\u0061\u0073\u003d\u0025\u0064\u0020\u003d\u003d\u003d=\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u0078\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d",len (_cdefd ));
if len (_cdefd )==0{return nil ;};_cdefd .sortReadingOrder ();_ebcde :=_cdefd [0].PdfRectangle ;_dadfd :=_cdefd [0]._eccfb ;for _ ,_eebg :=range _cdefd [1:]{_ebcde =_dgcc (_ebcde ,_eebg .PdfRectangle );_dadfd =append (_dadfd ,_eebg ._eccfb ...);};return _bfac (_ebcde ,_dadfd );
};type gridTile struct{_gg .PdfRectangle ;_dbaa ,_gbfg ,_bfca ,_ddgb bool ;};

// String returns a string describing `tm`.
func (_gcfg TextMark )String ()string {_gcb :=_gcfg .BBox ;var _eacc string ;if _gcfg .Font !=nil {_eacc =_gcfg .Font .String ();if len (_eacc )> 50{_eacc =_eacc [:50]+"\u002e\u002e\u002e";};};var _acbc string ;if _gcfg .Meta {_acbc ="\u0020\u002a\u004d\u002a";
};return _a .Sprintf ("\u007b\u0054\u0065\u0078t\u004d\u0061\u0072\u006b\u003a\u0020\u0025\u0064\u0020%\u0071\u003d\u0025\u0030\u0032\u0078\u0020\u0028\u0025\u0036\u002e\u0032\u0066\u002c\u0020\u0025\u0036\u002e2\u0066\u0029\u0020\u0028\u00256\u002e\u0032\u0066\u002c\u0020\u0025\u0036\u002e\u0032\u0066\u0029\u0020\u0025\u0073\u0025\u0073\u007d",_gcfg .Offset ,_gcfg .Text ,[]rune (_gcfg .Text ),_gcb .Llx ,_gcb .Lly ,_gcb .Urx ,_gcb .Ury ,_eacc ,_acbc );
};func (_dfcaa compositeCell )hasLines (_gdgd []*textLine )bool {for _fdbd ,_fcfdg :=range _gdgd {_faaed :=_bfe (_dfcaa .PdfRectangle ,_fcfdg .PdfRectangle );if _ccgc {_a .Printf ("\u0020\u0020\u0020\u0020\u0020\u0020\u005e\u005e\u005e\u0069\u006e\u0074\u0065\u0072\u0073e\u0063t\u0073\u003d\u0025\u0074\u0020\u0025\u0064\u0020\u006f\u0066\u0020\u0025\u0064\u000a",_faaed ,_fdbd ,len (_gdgd ));
_a .Printf ("\u0020\u0020\u0020\u0020  \u005e\u005e\u005e\u0063\u006f\u006d\u0070\u006f\u0073\u0069\u0074\u0065\u003d\u0025s\u000a",_dfcaa );_a .Printf ("\u0020 \u0020 \u0020\u0020\u0020\u006c\u0069\u006e\u0065\u003d\u0025\u0073\u000a",_fcfdg );};if _faaed {return true ;
};};return false ;};const _agf =20;func _ccgf (_bdeg byte )bool {for _ ,_ffcb :=range _gdff {if []byte (_ffcb )[0]==_bdeg {return true ;};};return false ;};func (_gega *shapesState )quadraticTo (_dbeg ,_abaf ,_geeg ,_abf float64 ){if _aega {_ceg .Log .Info ("\u0071\u0075\u0061d\u0072\u0061\u0074\u0069\u0063\u0054\u006f\u003a");
};_gega .addPoint (_geeg ,_abf );};func (_cdfbf lineRuling )xMean ()float64 {return 0.5*(_cdfbf ._geca .X +_cdfbf ._aedf .X )};func _fgba (_cefgf float64 ,_bdd int )int {if _bdd ==0{_bdd =1;};_cbcd :=float64 (_bdd );return int (_ce .Round (_cefgf /_cbcd )*_cbcd );
};func (_cad *imageExtractContext )extractXObjectImage (_faf *_de .PdfObjectName ,_ddb _cdb .GraphicsState ,_faba *_gg .PdfPageResources )error {_gcdc ,_ :=_faba .GetXObjectByName (*_faf );if _gcdc ==nil {return nil ;};_dab ,_egc :=_cad ._bef [_gcdc ];
if !_egc {_cfc ,_dbc :=_faba .GetXObjectImageByName (*_faf );if _dbc !=nil {return _dbc ;};if _cfc ==nil {return nil ;};_bga ,_dbc :=_cfc .ToImage ();if _dbc !=nil {return _dbc ;};var _cdbd _gce .Image ;if _cfc .SMask !=nil {_cdbd ,_dbc =_deggf (_cfc .SMask ,_e .Opaque );
if _dbc !=nil {_ceg .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0067\u0065\u0074\u0020\u0073\u006f\u0066\u0074\u0020\u0069\u006da\u0067e\u0020\u006d\u0061\u0073k\u002e\u0020O\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
};};if _cdbd !=nil {_aec ,_bec :=_bga .ToGoImage ();if _bec !=nil {return _bec ;};_aec =_ccfcc (_aec ,_cdbd );switch _cfc .ColorSpace .String (){case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0049n\u0064\u0065\u0078\u0065\u0064":_bga ,_bec =_gg .ImageHandling .NewGrayImageFromGoImage (_aec );
if _bec !=nil {return _bec ;};default:_bga ,_bec =_gg .ImageHandling .NewImageFromGoImage (_aec );if _bec !=nil {return _bec ;};};};_dab =&cachedImage {_aded :_bga ,_adg :_cfc .ColorSpace };_cad ._bef [_gcdc ]=_dab ;};_dba :=_dab ._aded ;_bbgd :=_dab ._adg ;
_eaf ,_adf :=_bbgd .ImageToRGB (*_dba );if _adf !=nil {return _adf ;};_ceg .Log .Debug ("@\u0044\u006f\u0020\u0043\u0054\u004d\u003a\u0020\u0025\u0073",_ddb .CTM .String ());_fe :=ImageMark {Image :&_eaf ,Width :_ddb .CTM .ScalingFactorX (),Height :_ddb .CTM .ScalingFactorY (),Angle :_ddb .CTM .Angle ()};
_fe .X ,_fe .Y =_ddb .CTM .Translation ();_cad ._gfg =append (_cad ._gfg ,_fe );_cad ._gfgg ++;return nil ;};func _dcgf (_gcbf *textLine ,_bdacd []*textLine ,_bbgc []float64 )float64 {var _gcfbb float64 =-1;for _ ,_abde :=range _bdacd {if _abde ._gbfa > _gcbf ._gbfa {if _ce .Round (_abde .Llx )>=_ce .Round (_gcbf .Llx ){_gcfbb =_abde ._gbfa ;
}else {break ;};};};return _gcfbb ;};func _debca (_ggddc map[int ][]float64 )string {_edfd :=_fbdd (_ggddc );_fcec :=make ([]string ,len (_ggddc ));for _ceffa ,_fbgfd :=range _edfd {_fcec [_ceffa ]=_a .Sprintf ("\u0025\u0064\u003a\u0020\u0025\u002e\u0032\u0066",_fbgfd ,_ggddc [_fbgfd ]);
};return _a .Sprintf ("\u007b\u0025\u0073\u007d",_gc .Join (_fcec ,"\u002c\u0020"));};func (_daggg rulingList )bbox ()_gg .PdfRectangle {var _fcfdc _gg .PdfRectangle ;if len (_daggg )==0{_ceg .Log .Error ("r\u0075\u006c\u0069\u006e\u0067\u004ci\u0073\u0074\u002e\u0062\u0062\u006f\u0078\u003a\u0020n\u006f\u0020\u0072u\u006ci\u006e\u0067\u0073");
return _gg .PdfRectangle {};};if _daggg [0]._aaeb ==_gdad {_fcfdc .Llx ,_fcfdc .Urx =_daggg .secMinMax ();_fcfdc .Lly ,_fcfdc .Ury =_daggg .primMinMax ();}else {_fcfdc .Llx ,_fcfdc .Urx =_daggg .primMinMax ();_fcfdc .Lly ,_fcfdc .Ury =_daggg .secMinMax ();
};return _fcfdc ;};

// TextTable represents a table.
// Cells are ordered top-to-bottom, left-to-right.
// Cells[y] is the (0-offset) y'th row in the table.
// Cells[y][x] is the (0-offset) x'th column in the table.
type TextTable struct{_gg .PdfRectangle ;W ,H int ;Cells [][]TableCell ;};type textTable struct{_gg .PdfRectangle ;_cbdec ,_fbaf int ;_fege bool ;_aebfe map[uint64 ]*textPara ;_bagdf map[uint64 ]compositeCell ;};func (_bdae paraList )inTile (_bgfd gridTile )paraList {var _febfe paraList ;
for _ ,_bdag :=range _bdae {if _bgfd .contains (_bdag .PdfRectangle ){_febfe =append (_febfe ,_bdag );};};if _ccgc {_a .Printf ("\u0020 \u0020\u0069\u006e\u0054i\u006c\u0065\u003a\u0020\u0020%\u0073 \u0069n\u0073\u0069\u0064\u0065\u003d\u0025\u0064\n",_bgfd ,len (_febfe ));
for _faebf ,_dfgb :=range _febfe {_a .Printf ("\u0025\u0034\u0064\u003a\u0020\u0025\u0073\u000a",_faebf ,_dfgb );};_a .Println ("");};return _febfe ;};func (_aefca paraList )list ()[]*list {var _fbaee []*textLine ;var _bbege []*textLine ;for _ ,_bfeb :=range _aefca {_adcga :=_bfeb .getListLines ();
_fbaee =append (_fbaee ,_adcga ...);_bbege =append (_bbege ,_bfeb ._eccfb ...);};_faaee :=_ggad (_fbaee );_caae :=_dbeca (_bbege ,_faaee );return _caae ;};func (_ccgcda rulingList )primMinMax ()(float64 ,float64 ){_dddgc ,_cgec :=_ccgcda [0]._dege ,_ccgcda [0]._dege ;
for _ ,_agebb :=range _ccgcda [1:]{if _agebb ._dege < _dddgc {_dddgc =_agebb ._dege ;}else if _agebb ._dege > _cgec {_cgec =_agebb ._dege ;};};return _dddgc ,_cgec ;};func _becb (_gebab *textLine )bool {_begf :=true ;_agfb :=-1;for _ ,_cded :=range _gebab ._cffb {for _ ,_fadc :=range _cded ._cgde {_badd :=_fadc ._egeg ;
if _agfb ==-1{_agfb =_badd ;}else {if _agfb !=_badd {_begf =false ;break ;};};};};return _begf ;};func (_afba *textTable )newTablePara ()*textPara {_ecde :=_afba .computeBbox ();_cbce :=&textPara {PdfRectangle :_ecde ,_eggab :_ecde ,_dace :_afba };if _ccgc {_ceg .Log .Info ("\u006e\u0065w\u0054\u0061\u0062l\u0065\u0050\u0061\u0072\u0061\u003a\u0020\u0025\u0073",_cbce );
};return _cbce ;};func (_egcbf *stateStack )pop ()*textState {if _egcbf .empty (){return nil ;};_cbc :=*(*_egcbf )[len (*_egcbf )-1];*_egcbf =(*_egcbf )[:len (*_egcbf )-1];return &_cbc ;};

// String returns a human readable description of `vecs`.
func (_gacff rulingList )String ()string {if len (_gacff )==0{return "\u007b \u0045\u004d\u0050\u0054\u0059\u0020}";};_cbffa ,_ffeg :=_gacff .vertsHorzs ();_gcge :=len (_cbffa );_gafbf :=len (_ffeg );if _gcge ==0||_gafbf ==0{return _a .Sprintf ("\u007b%\u0064\u0020\u0078\u0020\u0025\u0064}",_gcge ,_gafbf );
};_gcgbf :=_gg .PdfRectangle {Llx :_cbffa [0]._dege ,Urx :_cbffa [_gcge -1]._dege ,Lly :_ffeg [_gafbf -1]._dege ,Ury :_ffeg [0]._dege };return _a .Sprintf ("\u007b\u0025d\u0020\u0078\u0020%\u0064\u003a\u0020\u0025\u0036\u002e\u0032\u0066\u007d",_gcge ,_gafbf ,_gcgbf );
};func (_gfga *textObject )getFontDirect (_egdf string )(*_gg .PdfFont ,error ){_abdc ,_bea :=_gfga .getFontDict (_egdf );if _bea !=nil {return nil ,_bea ;};_aage ,_bea :=_gg .NewPdfFontFromPdfObject (_abdc );if _bea !=nil {_ceg .Log .Debug ("\u0067\u0065\u0074\u0046\u006f\u006e\u0074\u0044\u0069\u0072\u0065\u0063\u0074\u003a\u0020\u004e\u0065\u0077Pd\u0066F\u006f\u006e\u0074\u0046\u0072\u006f\u006d\u0050\u0064\u0066\u004f\u0062j\u0065\u0063\u0074\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u006e\u0061\u006d\u0065\u003d%\u0023\u0071\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_egdf ,_bea );
};return _aage ,_bea ;};

// Extractor stores and offers functionality for extracting content from PDF pages.
type Extractor struct{_ccf string ;_b *_gg .PdfPageResources ;_fab _gg .PdfRectangle ;_bf *_gg .PdfRectangle ;_dd map[string ]fontEntry ;_acb map[string ]textResult ;_ebd int64 ;_ee int ;_ef *Options ;_cdc *_de .PdfObject ;_bc _de .PdfObject ;};func _gggd (_eded _gg .PdfRectangle )rulingKind {_egbe :=_eded .Width ();
_feaa :=_eded .Height ();if _egbe > _feaa {if _egbe >=_bce {return _gdad ;};}else {if _feaa >=_bce {return _bdcc ;};};return _gaegd ;};

// String returns a string describing the current state of the textState stack.
func (_gaf *stateStack )String ()string {_decb :=[]string {_a .Sprintf ("\u002d\u002d\u002d\u002d f\u006f\u006e\u0074\u0020\u0073\u0074\u0061\u0063\u006b\u003a\u0020\u0025\u0064",len (*_gaf ))};for _dfb ,_daf :=range *_gaf {_ffge :="\u003c\u006e\u0069l\u003e";
if _daf !=nil {_ffge =_daf .String ();};_decb =append (_decb ,_a .Sprintf ("\u0009\u0025\u0032\u0064\u003a\u0020\u0025\u0073",_dfb ,_ffge ));};return _gc .Join (_decb ,"\u000a");};func _dbfca (_bebc ,_fbeb int )int {if _bebc < _fbeb {return _bebc ;};return _fbeb ;
};func (_dcf rulingList )findPrimSec (_gedagd ,_faced float64 )*ruling {for _ ,_bacb :=range _dcf {if _fggff (_bacb ._dege -_gedagd )&&_bacb ._ebaa -_begbg <=_faced &&_faced <=_bacb ._bddc +_begbg {return _bacb ;};};return nil ;};const (_afa ="\u0045\u0052R\u004f\u0052\u003a\u0020\u0043\u0061\u006e\u0027\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0066\u006f\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u002c\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065";
_ccd ="\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043a\u006e\u0027\u0074 g\u0065\u0074\u0020\u0066\u006f\u006et\u0020\u0070\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u002c\u0020\u0066\u006fn\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006fu\u006e\u0064";
_db ="\u0045\u0052\u0052O\u0052\u003a\u0020\u0043\u0061\u006e\u0027\u0074\u0020\u0067\u0065\u0074\u0020\u0066\u006f\u006e\u0074\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002c\u0020\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065";);
type event struct{_afbf float64 ;_adbda bool ;_fdfa int ;};func (_ffeedc *textTable )compositeRowCorridors ()map[int ][]float64 {_gbaf :=make (map[int ][]float64 ,_ffeedc ._fbaf );if _ccgc {_ceg .Log .Info ("c\u006f\u006d\u0070\u006f\u0073\u0069t\u0065\u0052\u006f\u0077\u0043\u006f\u0072\u0072\u0069d\u006f\u0072\u0073:\u0020h\u003d\u0025\u0064",_ffeedc ._fbaf );
};for _egfdc :=1;_egfdc < _ffeedc ._fbaf ;_egfdc ++{var _cace []compositeCell ;for _bbdc :=0;_bbdc < _ffeedc ._cbdec ;_bbdc ++{if _gdgec ,_aceb :=_ffeedc ._bagdf [_gdaac (_bbdc ,_egfdc )];_aceb {_cace =append (_cace ,_gdgec );};};if len (_cace )==0{continue ;
};_aefcac :=_ggdee (_cace );_gbaf [_egfdc ]=_aefcac ;if _ccgc {_a .Printf ("\u0020\u0020\u0020\u0025\u0032\u0064\u003a\u0020\u00256\u002e\u0032\u0066\u000a",_egfdc ,_aefcac );};};return _gbaf ;};

// String returns a description of `t`.
func (_eccab *textTable )String ()string {return _a .Sprintf ("\u0025\u0064\u0020\u0078\u0020\u0025\u0064\u0020\u0025\u0074",_eccab ._cbdec ,_eccab ._fbaf ,_eccab ._fege );};func (_bagg *subpath )close (){if !_dfaae (_bagg ._ggdcf [0],_bagg .last ()){_bagg .add (_bagg ._ggdcf [0]);
};_bagg ._eddb =true ;_bagg .removeDuplicates ();};func (_bgb pathSection )bbox ()_gg .PdfRectangle {_fcab :=_bgb ._ffa [0]._ggdcf [0];_edfb :=_gg .PdfRectangle {Llx :_fcab .X ,Urx :_fcab .X ,Lly :_fcab .Y ,Ury :_fcab .Y };_cedf :=func (_bcfg _gcg .Point ){if _bcfg .X < _edfb .Llx {_edfb .Llx =_bcfg .X ;
}else if _bcfg .X > _edfb .Urx {_edfb .Urx =_bcfg .X ;};if _bcfg .Y < _edfb .Lly {_edfb .Lly =_bcfg .Y ;}else if _bcfg .Y > _edfb .Ury {_edfb .Ury =_bcfg .Y ;};};for _ ,_bcdbd :=range _bgb ._ffa [0]._ggdcf [1:]{_cedf (_bcdbd );};for _ ,_ccbe :=range _bgb ._ffa [1:]{for _ ,_aafcb :=range _ccbe ._ggdcf {_cedf (_aafcb );
};};return _edfb ;};func (_cgb *Extractor )extractPageText (_aff string ,_cea *_gg .PdfPageResources ,_ebc _gcg .Matrix ,_ggbf int )(*PageText ,int ,int ,error ){_ceg .Log .Trace ("\u0065x\u0074\u0072\u0061\u0063t\u0050\u0061\u0067\u0065\u0054e\u0078t\u003a \u006c\u0065\u0076\u0065\u006c\u003d\u0025d",_ggbf );
_gdb :=&PageText {_gba :_cgb ._fab ,_eaef :_cgb ._cdc ,_debd :_cgb ._bc };_gac :=_gegd (_cgb ._fab );var _cdf stateStack ;_ddc :=_fdcd (_cgb ,_cea ,_cdb .GraphicsState {},&_gac ,&_cdf );_ddcd :=shapesState {_ddef :_ebc ,_edeg :_gcg .IdentityMatrix (),_abec :_ddc };
var _fcb bool ;_edb :=-1;if _ggbf > _agf {_dbe :=_c .New ("\u0066\u006f\u0072\u006d s\u0074\u0061\u0063\u006b\u0020\u006f\u0076\u0065\u0072\u0066\u006c\u006f\u0077");_ceg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0065\u0078\u0074\u0072\u0061\u0063\u0074\u0050\u0061\u0067\u0065\u0054\u0065\u0078\u0074\u002e\u0020\u0072\u0065\u0063u\u0072\u0073\u0069\u006f\u006e\u0020\u006c\u0065\u0076\u0065\u006c\u003d\u0025\u0064 \u0065r\u0072\u003d\u0025\u0076",_ggbf ,_dbe );
return _gdb ,_gac ._cdfbb ,_gac ._acfc ,_dbe ;};_bcd :=_cdb .NewContentStreamParser (_aff );_fed ,_cga :=_bcd .Parse ();if _cga !=nil {_ceg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020e\u0078\u0074\u0072a\u0063\u0074\u0050\u0061g\u0065\u0054\u0065\u0078\u0074\u0020\u0070\u0061\u0072\u0073\u0065\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_cga );
return _gdb ,_gac ._cdfbb ,_gac ._acfc ,_cga ;};_gdb ._fbfd =_fed ;_efee :=_cdb .NewContentStreamProcessor (*_fed );_efee .AddHandler (_cdb .HandlerConditionEnumAllOperands ,"",func (_fde *_cdb .ContentStreamOperation ,_fgea _cdb .GraphicsState ,_ead *_gg .PdfPageResources )error {_bdc :=_fde .Operand ;
if _agfga {_ceg .Log .Info ("\u0026&\u0026\u0020\u006f\u0070\u003d\u0025s",_fde );};switch _bdc {case "\u0071":if _aega {_ceg .Log .Info ("\u0063\u0074\u006d\u003d\u0025\u0073",_ddcd ._edeg );};_cdf .push (&_gac );case "\u0051":if !_cdf .empty (){_gac =*_cdf .pop ();
};_ddcd ._edeg =_fgea .CTM ;if _aega {_ceg .Log .Info ("\u0063\u0074\u006d\u003d\u0025\u0073",_ddcd ._edeg );};case "\u0042\u0044\u0043":_add ,_cfd :=_de .GetDict (_fde .Params [1]);if !_cfd {_ceg .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0042D\u0043\u0020\u006f\u0070\u003d\u0025\u0073 \u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0020\u0066\u0061\u0069\u006c\u0065\u0064",_fde );
return _cga ;};_cbf :=_add .Get ("\u004d\u0043\u0049\u0044");if _cbf !=nil {_dbcd ,_gfgd :=_de .GetIntVal (_cbf );if !_gfgd {_ceg .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0042\u0044C\u0020\u006f\u0070=\u0025\u0073\u002e\u0020\u0042\u0061\u0064\u0020\u006eum\u0065\u0072\u0069c\u0061\u006c \u006f\u0062\u006a\u0065\u0063\u0074.\u0020\u006f=\u0025\u0073",_fde ,_cbf );
};_edb =_dbcd ;}else {_edb =-1;};case "\u0045\u004d\u0043":_edb =-1;case "\u0042\u0054":if _fcb {_ceg .Log .Debug ("\u0042\u0054\u0020\u0063\u0061\u006c\u006c\u0065\u0064\u0020\u0077\u0068\u0069\u006c\u0065 \u0069n\u0020\u0061\u0020\u0074\u0065\u0078\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
_gdb ._cge =append (_gdb ._cge ,_ddc ._ceab ...);};_fcb =true ;_bcdc :=_fgea ;_bcdc .CTM =_ebc .Mult (_bcdc .CTM );_ddc =_fdcd (_cgb ,_ead ,_bcdc ,&_gac ,&_cdf );_ddcd ._abec =_ddc ;case "\u0045\u0054":if !_fcb {_ceg .Log .Debug ("\u0045\u0054\u0020ca\u006c\u006c\u0065\u0064\u0020\u006f\u0075\u0074\u0073i\u0064e\u0020o\u0066 \u0061\u0020\u0074\u0065\u0078\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};_fcb =false ;_gdb ._cge =append (_gdb ._cge ,_ddc ._ceab ...);_ddc .reset ();case "\u0054\u002a":_ddc .nextLine ();case "\u0054\u0064":if _fbf ,_fec :=_ddc .checkOp (_fde ,2,true );!_fbf {_ceg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_fec );
return _fec ;};_baa ,_eeg ,_gca :=_ggdad (_fde .Params );if _gca !=nil {return _gca ;};_ddc .moveText (_baa ,_eeg );case "\u0054\u0044":if _ddbd ,_cec :=_ddc .checkOp (_fde ,2,true );!_ddbd {_ceg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_cec );
return _cec ;};_ada ,_fca ,_gdf :=_ggdad (_fde .Params );if _gdf !=nil {_ceg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_gdf );return _gdf ;};_ddc .moveTextSetLeading (_ada ,_fca );case "\u0054\u006a":if _gdc ,_daba :=_ddc .checkOp (_fde ,1,true );
!_gdc {_ceg .Log .Debug ("\u0045\u0052\u0052\u004fR:\u0020\u0054\u006a\u0020\u006f\u0070\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d%\u0076",_fde ,_daba );return _daba ;};_bgg :=_de .TraceToDirectObject (_fde .Params [0]);_gfa ,_afc :=_de .GetStringBytes (_bgg );
if !_afc {_ceg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020T\u006a\u0020o\u0070\u003d\u0025\u0073\u0020\u0047\u0065\u0074S\u0074\u0072\u0069\u006e\u0067\u0042\u0079\u0074\u0065\u0073\u0020\u0066a\u0069\u006c\u0065\u0064",_fde );return _de .ErrTypeError ;
};return _ddc .showText (_bgg ,_gfa ,_edb );case "\u0054\u004a":if _dfdf ,_edbg :=_ddc .checkOp (_fde ,1,true );!_dfdf {_ceg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a \u0054\u004a\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_edbg );return _edbg ;};_ebdd ,_acc :=_de .GetArray (_fde .Params [0]);
if !_acc {_ceg .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0054\u004a\u0020\u006f\u0070\u003d\u0025s\u0020G\u0065t\u0041r\u0072\u0061\u0079\u0056\u0061\u006c\u0020\u0066\u0061\u0069\u006c\u0065\u0064",_fde );return _cga ;};return _ddc .showTextAdjusted (_ebdd ,_edb );
case "\u0027":if _eaff ,_gb :=_ddc .checkOp (_fde ,1,true );!_eaff {_ceg .Log .Debug ("\u0045R\u0052O\u0052\u003a\u0020\u0027\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_gb );return _gb ;};_cdca :=_de .TraceToDirectObject (_fde .Params [0]);_acf ,_cege :=_de .GetStringBytes (_cdca );
if !_cege {_ceg .Log .Debug ("\u0045\u0052RO\u0052\u003a\u0020'\u0020\u006f\u0070\u003d%s \u0047et\u0053\u0074\u0072\u0069\u006e\u0067\u0042yt\u0065\u0073\u0020\u0066\u0061\u0069\u006ce\u0064",_fde );return _de .ErrTypeError ;};_ddc .nextLine ();return _ddc .showText (_cdca ,_acf ,_edb );
case "\u0022":if _fafg ,_cab :=_ddc .checkOp (_fde ,3,true );!_fafg {_ceg .Log .Debug ("\u0045R\u0052O\u0052\u003a\u0020\u0022\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_cab );return _cab ;};_bbb ,_beb ,_cdfb :=_ggdad (_fde .Params [:2]);if _cdfb !=nil {return _cdfb ;
};_bed :=_de .TraceToDirectObject (_fde .Params [2]);_deg ,_fceg :=_de .GetStringBytes (_bed );if !_fceg {_ceg .Log .Debug ("\u0045\u0052RO\u0052\u003a\u0020\"\u0020\u006f\u0070\u003d%s \u0047et\u0053\u0074\u0072\u0069\u006e\u0067\u0042yt\u0065\u0073\u0020\u0066\u0061\u0069\u006ce\u0064",_fde );
return _de .ErrTypeError ;};_ddc .setCharSpacing (_bbb );_ddc .setWordSpacing (_beb );_ddc .nextLine ();return _ddc .showText (_bed ,_deg ,_edb );case "\u0054\u004c":_beg ,_bbc :=_aef (_fde );if _bbc !=nil {_ceg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a \u0054\u004c\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_bbc );
return _bbc ;};_ddc .setTextLeading (_beg );case "\u0054\u0063":_bbcf ,_cbfb :=_aef (_fde );if _cbfb !=nil {_ceg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a \u0054\u0063\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_cbfb );return _cbfb ;};_ddc .setCharSpacing (_bbcf );
case "\u0054\u0066":if _ecb ,_geg :=_ddc .checkOp (_fde ,2,true );!_ecb {_ceg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a \u0054\u0066\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_geg );return _geg ;};_fae ,_ddd :=_de .GetNameVal (_fde .Params [0]);if !_ddd {_ceg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0054\u0066\u0020\u006f\u0070\u003d\u0025\u0073\u0020\u0047\u0065\u0074\u004ea\u006d\u0065\u0056\u0061\u006c\u0020\u0066a\u0069\u006c\u0065\u0064",_fde );
return _de .ErrTypeError ;};_defa ,_fcbe :=_de .GetNumberAsFloat (_fde .Params [1]);if !_ddd {_ceg .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0054\u0066\u0020\u006f\u0070\u003d\u0025\u0073\u0020\u0047\u0065\u0074\u0046\u006c\u006f\u0061\u0074\u0056\u0061\u006c\u0020\u0066\u0061\u0069\u006c\u0065d\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_fde ,_fcbe );
return _fcbe ;};_fcbe =_ddc .setFont (_fae ,_defa );_ddc ._gbga =_af .Is (_fcbe ,_de .ErrNotSupported );if _fcbe !=nil &&!_ddc ._gbga {return _fcbe ;};case "\u0054\u006d":if _eab ,_gaa :=_ddc .checkOp (_fde ,6,true );!_eab {_ceg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a \u0054\u006d\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_gaa );
return _gaa ;};_fdf ,_ggf :=_de .GetNumbersAsFloat (_fde .Params );if _ggf !=nil {_ceg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_ggf );return _ggf ;};_ddc .setTextMatrix (_fdf );case "\u0054\u0072":if _ede ,_dbf :=_ddc .checkOp (_fde ,1,true );
!_ede {_ceg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a \u0054\u0072\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_dbf );return _dbf ;};_fdc ,_egcb :=_de .GetIntVal (_fde .Params [0]);if !_egcb {_ceg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0072\u0020\u006f\u0070\u003d\u0025\u0073 \u0047e\u0074\u0049\u006e\u0074\u0056\u0061\u006c\u0020\u0066\u0061\u0069\u006c\u0065\u0064",_fde );
return _de .ErrTypeError ;};_ddc .setTextRenderMode (_fdc );case "\u0054\u0073":if _dac ,_ccb :=_ddc .checkOp (_fde ,1,true );!_dac {_ceg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a \u0054\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_ccb );return _ccb ;
};_cfb ,_cdaa :=_de .GetNumberAsFloat (_fde .Params [0]);if _cdaa !=nil {_ceg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_cdaa );return _cdaa ;};_ddc .setTextRise (_cfb );case "\u0054\u0077":if _dce ,_fged :=_ddc .checkOp (_fde ,1,true );
!_dce {_ceg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_fged );return _fged ;};_ggfb ,_bda :=_de .GetNumberAsFloat (_fde .Params [0]);if _bda !=nil {_ceg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_bda );
return _bda ;};_ddc .setWordSpacing (_ggfb );case "\u0054\u007a":if _cgg ,_cbg :=_ddc .checkOp (_fde ,1,true );!_cgg {_ceg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_cbg );return _cbg ;};_acg ,_fded :=_de .GetNumberAsFloat (_fde .Params [0]);
if _fded !=nil {_ceg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_fded );return _fded ;};_ddc .setHorizScaling (_acg );case "\u0063\u006d":_ddcd ._edeg =_fgea .CTM ;if _ddcd ._edeg .Singular (){_ace :=_gcg .IdentityMatrix ().Translate (_ddcd ._edeg .Translation ());
_ceg .Log .Debug ("S\u0069n\u0067\u0075\u006c\u0061\u0072\u0020\u0063\u0074m\u003d\u0025\u0073\u2192%s",_ddcd ._edeg ,_ace );_ddcd ._edeg =_ace ;};if _aega {_ceg .Log .Info ("\u0063\u0074\u006d\u003d\u0025\u0073",_ddcd ._edeg );};case "\u006d":if len (_fde .Params )!=2{_ceg .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0065\u0072\u0072o\u0072\u0020\u0077\u0068\u0069\u006c\u0065\u0020\u0070\u0072\u006f\u0063\u0065\u0073\u0073\u0069\u006e\u0067\u0020\u0060\u006d\u0060\u0020o\u0070\u0065r\u0061\u0074o\u0072\u003a\u0020\u0025\u0076\u002e\u0020\u004f\u0075\u0074\u0070\u0075\u0074 m\u0061\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0063o\u0072\u0072\u0065\u0063\u0074\u002e",_eb );
return nil ;};_fad ,_fcc :=_de .GetNumbersAsFloat (_fde .Params );if _fcc !=nil {return _fcc ;};_ddcd .moveTo (_fad [0],_fad [1]);case "\u006c":if len (_fde .Params )!=2{_ceg .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0065\u0072\u0072o\u0072\u0020\u0077\u0068\u0069\u006c\u0065\u0020\u0070\u0072\u006f\u0063\u0065\u0073\u0073\u0069\u006e\u0067\u0020\u0060\u006c\u0060\u0020o\u0070\u0065r\u0061\u0074o\u0072\u003a\u0020\u0025\u0076\u002e\u0020\u004f\u0075\u0074\u0070\u0075\u0074 m\u0061\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0063o\u0072\u0072\u0065\u0063\u0074\u002e",_eb );
return nil ;};_ffb ,_cffc :=_de .GetNumbersAsFloat (_fde .Params );if _cffc !=nil {return _cffc ;};_ddcd .lineTo (_ffb [0],_ffb [1]);case "\u0063":if len (_fde .Params )!=6{return _eb ;};_fabag ,_cafg :=_de .GetNumbersAsFloat (_fde .Params );if _cafg !=nil {return _cafg ;
};_ceg .Log .Debug ("\u0043u\u0062\u0069\u0063\u0020b\u0065\u007a\u0069\u0065\u0072 \u0070a\u0072a\u006d\u0073\u003a\u0020\u0025\u002e\u0032f",_fabag );_ddcd .cubicTo (_fabag [0],_fabag [1],_fabag [2],_fabag [3],_fabag [4],_fabag [5]);case "\u0076","\u0079":if len (_fde .Params )!=4{return _eb ;
};_bggb ,_fgcf :=_de .GetNumbersAsFloat (_fde .Params );if _fgcf !=nil {return _fgcf ;};_ceg .Log .Debug ("\u0043u\u0062\u0069\u0063\u0020b\u0065\u007a\u0069\u0065\u0072 \u0070a\u0072a\u006d\u0073\u003a\u0020\u0025\u002e\u0032f",_bggb );_ddcd .quadraticTo (_bggb [0],_bggb [1],_bggb [2],_bggb [3]);
case "\u0068":_ddcd .closePath ();case "\u0072\u0065":if len (_fde .Params )!=4{return _eb ;};_acbg ,_dbd :=_de .GetNumbersAsFloat (_fde .Params );if _dbd !=nil {return _dbd ;};_ddcd .drawRectangle (_acbg [0],_acbg [1],_acbg [2],_acbg [3]);_ddcd .closePath ();
case "\u0053":_ddcd .stroke (&_gdb ._cgce );_ddcd .clearPath ();case "\u0073":_ddcd .closePath ();_ddcd .stroke (&_gdb ._cgce );_ddcd .clearPath ();case "\u0046":_ddcd .fill (&_gdb ._gegda );_ddcd .clearPath ();case "\u0066","\u0066\u002a":_ddcd .closePath ();
_ddcd .fill (&_gdb ._gegda );_ddcd .clearPath ();case "\u0042","\u0042\u002a":_ddcd .fill (&_gdb ._gegda );_ddcd .stroke (&_gdb ._cgce );_ddcd .clearPath ();case "\u0062","\u0062\u002a":_ddcd .closePath ();_ddcd .fill (&_gdb ._gegda );_ddcd .stroke (&_gdb ._cgce );
_ddcd .clearPath ();case "\u006e":_ddcd .clearPath ();case "\u0044\u006f":if len (_fde .Params )==0{_ceg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0058\u004fbj\u0065c\u0074\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0070\u0065\u0072\u0061n\u0064\u0020\u0066\u006f\u0072\u0020\u0044\u006f\u0020\u006f\u0070\u0065\u0072\u0061\u0074\u006f\u0072.\u0020\u0047\u006f\u0074\u0020\u0025\u002b\u0076\u002e",_fde .Params );
return _de .ErrRangeError ;};_cfg ,_aeb :=_de .GetName (_fde .Params [0]);if !_aeb {_ceg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0044\u006f\u0020\u006f\u0070e\u0072a\u0074\u006f\u0072\u0020\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u0061\u006d\u0065\u0020\u006fp\u0065\u0072\u0061\u006e\u0064\u003a\u0020\u0025\u002b\u0076\u002e",_fde .Params [0]);
return _de .ErrTypeError ;};_ ,_gfe :=_ead .GetXObjectByName (*_cfg );if _gfe !=_gg .XObjectTypeForm {break ;};_aed ,_aeb :=_cgb ._acb [_cfg .String ()];if !_aeb {_gef ,_agb :=_ead .GetXObjectFormByName (*_cfg );if _agb !=nil {_ceg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_agb );
return _agb ;};_eca ,_agb :=_gef .GetContentStream ();if _agb !=nil {_ceg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_agb );return _agb ;};_ggc :=_gef .Resources ;if _ggc ==nil {_ggc =_ead ;};_cecf :=_fgea .CTM ;if _ece ,_gbg :=_de .GetArray (_gef .Matrix );
_gbg {_dccc ,_fegd :=_ece .GetAsFloat64Slice ();if _fegd !=nil {return _fegd ;};if len (_dccc )!=6{return _eb ;};_cgc :=_gcg .NewMatrix (_dccc [0],_dccc [1],_dccc [2],_dccc [3],_dccc [4],_dccc [5]);_cecf =_fgea .CTM .Mult (_cgc );};_ceeb ,_fede ,_bcba ,_agb :=_cgb .extractPageText (string (_eca ),_ggc ,_ebc .Mult (_cecf ),_ggbf +1);
if _agb !=nil {_ceg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_agb );return _agb ;};_aed =textResult {*_ceeb ,_fede ,_bcba };_cgb ._acb [_cfg .String ()]=_aed ;};_ddcd ._edeg =_fgea .CTM ;if _aega {_ceg .Log .Info ("\u0063\u0074\u006d\u003d\u0025\u0073",_ddcd ._edeg );
};_gdb ._cge =append (_gdb ._cge ,_aed ._bebd ._cge ...);_gdb ._cgce =append (_gdb ._cgce ,_aed ._bebd ._cgce ...);_gdb ._gegda =append (_gdb ._gegda ,_aed ._bebd ._gegda ...);_gac ._cdfbb +=_aed ._ccfba ;_gac ._acfc +=_aed ._ebfe ;case "\u0072\u0067","\u0067","\u006b","\u0063\u0073","\u0073\u0063","\u0073\u0063\u006e":_ddc ._adbg .ColorspaceNonStroking =_fgea .ColorspaceNonStroking ;
_ddc ._adbg .ColorNonStroking =_fgea .ColorNonStroking ;case "\u0052\u0047","\u0047","\u004b","\u0043\u0053","\u0053\u0043","\u0053\u0043\u004e":_ddc ._adbg .ColorspaceStroking =_fgea .ColorspaceStroking ;_ddc ._adbg .ColorStroking =_fgea .ColorStroking ;
};return nil ;});_cga =_efee .Process (_cea );return _gdb ,_gac ._cdfbb ,_gac ._acfc ,_cga ;};func _bedd (_efea []TextMark ,_abdfc *int ,_ffbba string )[]TextMark {_bbda :=_gebf ;_bbda .Text =_ffbba ;return _efbc (_efea ,_abdfc ,_bbda );};func _aabe (_babc []*textWord ,_ggbe *textWord )[]*textWord {for _ddbbb ,_fbagd :=range _babc {if _fbagd ==_ggbe {return _aeac (_babc ,_ddbbb );
};};_ceg .Log .Error ("\u0072\u0065\u006d\u006f\u0076e\u0057\u006f\u0072\u0064\u003a\u0020\u0077\u006f\u0072\u0064\u0073\u0020\u0064o\u0065\u0073\u006e\u0027\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0077\u006f\u0072\u0064\u003d\u0025\u0073",_ggbe );
return nil ;};func _ddad (_ffada map[int ][]float64 ){if len (_ffada )<=1{return ;};_eafff :=_fbdd (_ffada );if _ccgc {_ceg .Log .Info ("\u0066i\u0078C\u0065\u006c\u006c\u0073\u003a \u006b\u0065y\u0073\u003d\u0025\u002b\u0076",_eafff );};var _bfadf ,_aaaab int ;
for _bfadf ,_aaaab =range _eafff {if _ffada [_aaaab ]!=nil {break ;};};for _aaca ,_fecg :=range _eafff [_bfadf :]{_ddeag :=_ffada [_fecg ];if _ddeag ==nil {continue ;};if _ccgc {_a .Printf ("\u0025\u0034\u0064\u003a\u0020\u006b\u0030\u003d\u0025\u0064\u0020\u006b1\u003d\u0025\u0064\u000a",_bfadf +_aaca ,_aaaab ,_fecg );
};_cbba :=_ffada [_fecg ];if _cbba [len (_cbba )-1]> _ddeag [0]{_cbba [len (_cbba )-1]=_ddeag [0];_ffada [_aaaab ]=_cbba ;};_aaaab =_fecg ;};};func (_cddd rulingList )isActualGrid ()(rulingList ,bool ){_cabff ,_daadg :=_cddd .augmentGrid ();if !(len (_cabff )>=_cdef +1&&len (_daadg )>=_efbf +1){if _aabf {_ceg .Log .Info ("\u0069s\u0041\u0063t\u0075\u0061\u006c\u0047r\u0069\u0064\u003a \u004e\u006f\u0074\u0020\u0061\u006c\u0069\u0067\u006eed\u002e\u0020\u0025d\u0020\u0078 \u0025\u0064\u0020\u003c\u0020\u0025d\u0020\u0078 \u0025\u0064",len (_cabff ),len (_daadg ),_cdef +1,_efbf +1);
};return nil ,false ;};if _aabf {_ceg .Log .Info ("\u0069\u0073\u0041\u0063\u0074\u0075a\u006c\u0047\u0072\u0069\u0064\u003a\u0020\u0025\u0073\u0020\u003a\u0020\u0025t\u0020\u0026\u0020\u0025\u0074\u0020\u2192 \u0025\u0074",_cddd ,len (_cabff )>=2,len (_daadg )>=2,len (_cabff )>=2&&len (_daadg )>=2);
for _acca ,_gcgfd :=range _cddd {_a .Printf ("\u0025\u0034\u0064\u003a\u0020\u0025\u0076\u000a",_acca ,_gcgfd );};};if _gbcc {_bffb ,_abfg :=_cabff [0],_cabff [len (_cabff )-1];_dgceg ,_gaeee :=_daadg [0],_daadg [len (_daadg )-1];if !(_fceea (_bffb ._dege -_dgceg ._ebaa )&&_fceea (_abfg ._dege -_dgceg ._bddc )&&_fceea (_dgceg ._dege -_bffb ._bddc )&&_fceea (_gaeee ._dege -_bffb ._ebaa )){if _aabf {_ceg .Log .Info ("\u0069\u0073\u0041\u0063\u0074\u0075\u0061l\u0047\u0072\u0069d\u003a\u0020\u0020N\u006f\u0074 \u0061\u006c\u0069\u0067\u006e\u0065d\u002e\n\t\u0076\u0030\u003d\u0025\u0073\u000a\u0009\u0076\u0031\u003d\u0025\u0073\u000a\u0009\u0068\u0030\u003d\u0025\u0073\u000a\u0009\u0068\u0031\u003d\u0025\u0073",_bffb ,_abfg ,_dgceg ,_gaeee );
};return nil ,false ;};}else {if !_cabff .aligned (){if _aac {_ceg .Log .Info ("i\u0073\u0041\u0063\u0074\u0075\u0061l\u0047\u0072\u0069\u0064\u003a\u0020N\u006f\u0074\u0020\u0061\u006c\u0069\u0067n\u0065\u0064\u0020\u0076\u0065\u0072\u0074\u0073\u002e\u0020%\u0064",len (_cabff ));
};return nil ,false ;};if !_daadg .aligned (){if _aabf {_ceg .Log .Info ("i\u0073\u0041\u0063\u0074\u0075\u0061l\u0047\u0072\u0069\u0064\u003a\u0020N\u006f\u0074\u0020\u0061\u006c\u0069\u0067n\u0065\u0064\u0020\u0068\u006f\u0072\u007a\u0073\u002e\u0020%\u0064",len (_daadg ));
};return nil ,false ;};};_bgedc :=append (_cabff ,_daadg ...);return _bgedc ,true ;};

// ImageMark represents an image drawn on a page and its position in device coordinates.
// All coordinates are in device coordinates.
type ImageMark struct{Image *_gg .Image ;

// Dimensions of the image as displayed in the PDF.
Width float64 ;Height float64 ;

// Position of the image in PDF coordinates (lower left corner).
X float64 ;Y float64 ;

// Angle in degrees, if rotated.
Angle float64 ;};

// String returns a description of `state`.
func (_acgf *textState )String ()string {_deca :="\u005bN\u004f\u0054\u0020\u0053\u0045\u0054]";if _acgf ._gbbc !=nil {_deca =_acgf ._gbbc .BaseFont ();};return _a .Sprintf ("\u0074\u0063\u003d\u0025\u002e\u0032\u0066\u0020\u0074\u0077\u003d\u0025\u002e\u0032\u0066 \u0074f\u0073\u003d\u0025\u002e\u0032\u0066\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071",_acgf ._fada ,_acgf ._bdbg ,_acgf ._bcf ,_deca );
};func (_adc *textObject )getFontDict (_dfc string )(_dfcf _de .PdfObject ,_cfcb error ){_dcad :=_adc ._aeg ;if _dcad ==nil {_ceg .Log .Debug ("g\u0065\u0074\u0046\u006f\u006e\u0074D\u0069\u0063\u0074\u002e\u0020\u004eo\u0020\u0072\u0065\u0073\u006f\u0075\u0072c\u0065\u0073\u002e\u0020\u006e\u0061\u006d\u0065\u003d\u0025#\u0071",_dfc );
return nil ,nil ;};_dfcf ,_fdcf :=_dcad .GetFontByName (_de .PdfObjectName (_dfc ));if !_fdcf {_ceg .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0067\u0065t\u0046\u006f\u006et\u0044\u0069\u0063\u0074\u003a\u0020\u0046\u006f\u006et \u006e\u006f\u0074 \u0066\u006fu\u006e\u0064\u003a\u0020\u006e\u0061m\u0065\u003d%\u0023\u0071",_dfc );
return nil ,_c .New ("f\u006f\u006e\u0074\u0020no\u0074 \u0069\u006e\u0020\u0072\u0065s\u006f\u0075\u0072\u0063\u0065\u0073");};return _dfcf ,nil ;};func (_efae rulingList )augmentGrid ()(rulingList ,rulingList ){_efgf ,_adcgb :=_efae .vertsHorzs ();if len (_efgf )==0||len (_adcgb )==0{return _efgf ,_adcgb ;
};_feedd ,_dbeb :=_efgf ,_adcgb ;_gdcd :=_efgf .bbox ();_bcec :=_adcgb .bbox ();if _aabf {_ceg .Log .Info ("\u0061u\u0067\u006d\u0065\u006e\u0074\u0047\u0072\u0069\u0064\u003a\u0020b\u0062\u006f\u0078\u0056\u003d\u0025\u0036\u002e\u0032\u0066",_gdcd );
_ceg .Log .Info ("\u0061u\u0067\u006d\u0065\u006e\u0074\u0047\u0072\u0069\u0064\u003a\u0020b\u0062\u006f\u0078\u0048\u003d\u0025\u0036\u002e\u0032\u0066",_bcec );};var _affd ,_feeab ,_cgcag ,_dbcf *ruling ;if _bcec .Llx < _gdcd .Llx -_begbg {_affd =&ruling {_bgeee :_face ,_aaeb :_bdcc ,_dege :_bcec .Llx ,_ebaa :_gdcd .Lly ,_bddc :_gdcd .Ury };
_efgf =append (rulingList {_affd },_efgf ...);};if _bcec .Urx > _gdcd .Urx +_begbg {_feeab =&ruling {_bgeee :_face ,_aaeb :_bdcc ,_dege :_bcec .Urx ,_ebaa :_gdcd .Lly ,_bddc :_gdcd .Ury };_efgf =append (_efgf ,_feeab );};if _gdcd .Lly < _bcec .Lly -_begbg {_cgcag =&ruling {_bgeee :_face ,_aaeb :_gdad ,_dege :_gdcd .Lly ,_ebaa :_bcec .Llx ,_bddc :_bcec .Urx };
_adcgb =append (rulingList {_cgcag },_adcgb ...);};if _gdcd .Ury > _bcec .Ury +_begbg {_dbcf =&ruling {_bgeee :_face ,_aaeb :_gdad ,_dege :_gdcd .Ury ,_ebaa :_bcec .Llx ,_bddc :_bcec .Urx };_adcgb =append (_adcgb ,_dbcf );};if len (_efgf )+len (_adcgb )==len (_efae ){return _feedd ,_dbeb ;
};_ggeb :=append (_efgf ,_adcgb ...);_efae .log ("u\u006e\u0061\u0075\u0067\u006d\u0065\u006e\u0074\u0065\u0064");_ggeb .log ("\u0061u\u0067\u006d\u0065\u006e\u0074\u0065d");return _efgf ,_adcgb ;};func _dadf (_caa float64 )int {var _gffg int ;if _caa >=0{_gffg =int (_caa /_dafb );
}else {_gffg =int (_caa /_dafb )-1;};return _gffg ;};func _bafc (_ecba *textWord ,_cag float64 ,_gdbg ,_aggd rulingList )*wordBag {_eadaf :=_dadf (_ecba ._bfgb );_daad :=[]*textWord {_ecba };_feff :=wordBag {_agbg :map[int ][]*textWord {_eadaf :_daad },PdfRectangle :_ecba .PdfRectangle ,_agba :_ecba ._agdb ,_ffdg :_cag ,_fggf :_gdbg ,_bcfb :_aggd };
return &_feff ;};func (_cfge *textObject )moveLP (_eae ,_bdg float64 ){_cfge ._becd .Concat (_gcg .NewMatrix (1,0,0,1,_eae ,_bdg ));_cfge ._fafb =_cfge ._becd ;};func (_fagb *shapesState )lastpointEstablished ()(_gcg .Point ,bool ){if _fagb ._aee {return _fagb ._ccgg ,false ;
};_ggfg :=len (_fagb ._debc );if _ggfg > 0&&_fagb ._debc [_ggfg -1]._eddb {return _fagb ._debc [_ggfg -1].last (),false ;};return _gcg .Point {},true ;};func (_acgff gridTile )complete ()bool {return _acgff .numBorders ()==4};

// ExtractPageText returns the text contents of `e` (an Extractor for a page) as a PageText.
// TODO(peterwilliams97): The stats complicate this function signature and aren't very useful.
//
//	Replace with a function like Extract() (*PageText, error)
func (_agg *Extractor )ExtractPageText ()(*PageText ,int ,int ,error ){_bffg ,_gab ,_deb ,_gcfc :=_agg .extractPageText (_agg ._ccf ,_agg ._b ,_gcg .IdentityMatrix (),0);if _gcfc !=nil &&_gcfc !=_gg .ErrColorOutOfRange {return nil ,0,0,_gcfc ;};if _agg ._ef !=nil {_bffg ._dfg ._egd =_agg ._ef .UseSimplerExtractionProcess ;
};_bffg .computeViews ();_gcfc =_eadd (_bffg );if _gcfc !=nil {return nil ,0,0,_gcfc ;};if _agg ._ef !=nil {if _agg ._ef .ApplyCropBox &&_agg ._bf !=nil {_bffg .ApplyArea (*_agg ._bf );};_bffg ._dfg ._ecef =_agg ._ef .DisableDocumentTags ;};return _bffg ,_gab ,_deb ,nil ;
};

// TextMarkArray is a collection of TextMarks.
type TextMarkArray struct{_fgbb []TextMark };func (_cgag *textObject )moveTextSetLeading (_ebda ,_fbab float64 ){_cgag ._cdg ._adge =-_fbab ;_cgag .moveLP (_ebda ,_fbab );};func (_fgga *wordBag )applyRemovals (_gabb map[int ]map[*textWord ]struct{}){for _cdaaa ,_abg :=range _gabb {if len (_abg )==0{continue ;
};_fcd :=_fgga ._agbg [_cdaaa ];_gea :=len (_fcd )-len (_abg );if _gea ==0{delete (_fgga ._agbg ,_cdaaa );continue ;};_eef :=make ([]*textWord ,_gea );_fddg :=0;for _ ,_acec :=range _fcd {if _ ,_caeb :=_abg [_acec ];!_caeb {_eef [_fddg ]=_acec ;_fddg ++;
};};_fgga ._agbg [_cdaaa ]=_eef ;};};

// String returns a description of `v`.
func (_begfc *ruling )String ()string {if _begfc ._aaeb ==_gaegd {return "\u004e\u004f\u0054\u0020\u0052\u0055\u004c\u0049\u004e\u0047";};_bgbdb ,_fdefa :="\u0078","\u0079";if _begfc ._aaeb ==_gdad {_bgbdb ,_fdefa ="\u0079","\u0078";};_cbde :="";if _begfc ._degge !=0.0{_cbde =_a .Sprintf (" \u0077\u0069\u0064\u0074\u0068\u003d\u0025\u002e\u0032\u0066",_begfc ._degge );
};return _a .Sprintf ("\u0025\u00310\u0073\u0020\u0025\u0073\u003d\u0025\u0036\u002e\u0032\u0066\u0020\u0025\u0073\u003d\u0025\u0036\u002e\u0032\u0066\u0020\u002d\u0020\u0025\u0036\u002e\u0032\u0066\u0020\u0028\u0025\u0036\u002e\u0032\u0066\u0029\u0020\u0025\u0073\u0020\u0025\u0076\u0025\u0073",_begfc ._aaeb ,_bgbdb ,_begfc ._dege ,_fdefa ,_begfc ._ebaa ,_begfc ._bddc ,_begfc ._bddc -_begfc ._ebaa ,_begfc ._bgeee ,_begfc .Color ,_cbde );
};func (_dcab *textObject )getCurrentFont ()*_gg .PdfFont {_gfac :=_dcab ._cdg ._gbbc ;if _gfac ==nil {_ceg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0066\u006f\u006e\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u002e\u0020U\u0073\u0069\u006e\u0067\u0020d\u0065\u0066a\u0075\u006c\u0074\u002e");
return _gg .DefaultFont ();};return _gfac ;};type rectRuling struct{_caeg rulingKind ;_fcafg markKind ;_e .Color ;_gg .PdfRectangle ;};func (_eaaf paraList )tables ()[]TextTable {var _dcegd []TextTable ;if _ccgc {_ceg .Log .Info ("\u0070\u0061\u0072\u0061\u0073\u002e\u0074\u0061\u0062\u006c\u0065\u0073\u003a");
};for _ ,_bgec :=range _eaaf {_ffaa :=_bgec ._dace ;if _ffaa !=nil &&_ffaa .isExportable (){_dcegd =append (_dcegd ,_ffaa .toTextTable ());};};return _dcegd ;};

// String returns a description of `k`.
func (_cdbg markKind )String ()string {_dcge ,_cgfc :=_bfead [_cdbg ];if !_cgfc {return _a .Sprintf ("\u004e\u006f\u0074\u0020\u0061\u0020\u006d\u0061\u0072k\u003a\u0020\u0025\u0064",_cdbg );};return _dcge ;};func (_eadbg *textTable )markCells (){for _edbfd :=0;
_edbfd < _eadbg ._fbaf ;_edbfd ++{for _fcbfd :=0;_fcbfd < _eadbg ._cbdec ;_fcbfd ++{_dgabd :=_eadbg .get (_fcbfd ,_edbfd );if _dgabd !=nil {_dgabd ._eeed =true ;};};};};func (_dgbgg *textTable )emptyCompositeColumn (_cecfc int )bool {for _badb :=0;_badb < _dgbgg ._fbaf ;
_badb ++{if _dbccb ,_gdcf :=_dgbgg ._bagdf [_gdaac (_cecfc ,_badb )];_gdcf {if len (_dbccb .paraList )> 0{return false ;};};};return true ;};type textState struct{_fada float64 ;_bdbg float64 ;_dfe float64 ;_adge float64 ;_bcf float64 ;_ebcg RenderMode ;
_bba float64 ;_gbbc *_gg .PdfFont ;_cgf _gg .PdfRectangle ;_cdfbb int ;_acfc int ;};func (_ccff *TextMarkArray )exists (_eaab TextMark )bool {for _ ,_fbc :=range _ccff .Elements (){if _cb .DeepEqual (_eaab .DirectObject ,_fbc .DirectObject )&&_cb .DeepEqual (_eaab .BBox ,_fbc .BBox )&&_fbc .Text ==_eaab .Text {return true ;
};};return false ;};

// ToText returns the page text as a single string.
// Deprecated: This function is deprecated and will be removed in a future major version. Please use
// Text() instead.
func (_gaab PageText )ToText ()string {return _gaab .Text ()};func _fadg (_afea *list )[]*textLine {for _ ,_ggaa :=range _afea ._eccg {switch _ggaa ._ccacc {case "\u004c\u0042\u006fd\u0079":if len (_ggaa ._bdbb )!=0{return _ggaa ._bdbb ;};return _fadg (_ggaa );
case "\u0053\u0070\u0061\u006e":return _ggaa ._bdbb ;case "I\u006e\u006c\u0069\u006e\u0065\u0053\u0068\u0061\u0070\u0065":return _ggaa ._bdbb ;};};return nil ;};func (_cdcfc *textWord )absorb (_gbffe *textWord ){_cdcfc .PdfRectangle =_dgcc (_cdcfc .PdfRectangle ,_gbffe .PdfRectangle );
_cdcfc ._cgde =append (_cdcfc ._cgde ,_gbffe ._cgde ...);};func (_fcef paraList )log (_caede string ){if !_cbed {return ;};_ceg .Log .Info ("%\u0038\u0073\u003a\u0020\u0025\u0064 \u0070\u0061\u0072\u0061\u0073\u0020=\u003d\u003d\u003d\u003d\u003d\u003d\u002d-\u002d\u002d\u002d\u002d\u002d\u003d\u003d\u003d\u003d\u003d=\u003d",_caede ,len (_fcef ));
for _dcbd ,_geed :=range _fcef {if _geed ==nil {continue ;};_bcgc :=_geed .text ();_fadf :="\u0020\u0020";if _geed ._dace !=nil {_fadf =_a .Sprintf ("\u005b%\u0064\u0078\u0025\u0064\u005d",_geed ._dace ._cbdec ,_geed ._dace ._fbaf );};_a .Printf ("\u0025\u0034\u0064\u003a\u0020\u0025\u0036\u002e\u0032\u0066\u0020\u0025s\u0020\u0025\u0071\u000a",_dcbd ,_geed .PdfRectangle ,_fadf ,_aefb (_bcgc ,50));
};};func _aefb (_geded string ,_ddgd int )string {if len (_geded )< _ddgd {return _geded ;};return _geded [:_ddgd ];};func _abaad (_gbbca _gg .PdfColorspace ,_cbagf _gg .PdfColor )_e .Color {if _gbbca ==nil ||_cbagf ==nil {return _e .Black ;};_afcb ,_ecabf :=_gbbca .ColorToRGB (_cbagf );
if _ecabf !=nil {_ceg .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063\u006fu\u006c\u0064\u0020no\u0074\u0020\u0063\u006f\u006e\u0076e\u0072\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0025\u0076\u0020\u0028\u0025\u0076)\u0020\u0074\u006f\u0020\u0052\u0047\u0042\u003a \u0025\u0073",_cbagf ,_gbbca ,_ecabf );
return _e .Black ;};_edccd ,_cddae :=_afcb .(*_gg .PdfColorDeviceRGB );if !_cddae {_ceg .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0065\u0064 \u0063\u006f\u006c\u006f\u0072\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020i\u006e\u0020\u0074\u0068\u0065\u0020\u0052\u0047\u0042\u0020\u0063\u006flo\u0072\u0073\u0070\u0061\u0063\u0065\u003a\u0020\u0025\u0076",_afcb );
return _e .Black ;};return _e .NRGBA {R :uint8 (_edccd .R ()*255),G :uint8 (_edccd .G ()*255),B :uint8 (_edccd .B ()*255),A :uint8 (255)};};type fontEntry struct{_gff *_gg .PdfFont ;_effb int64 ;};func (_ccbeb *wordBag )empty (_ccbg int )bool {_ ,_caca :=_ccbeb ._agbg [_ccbg ];
return !_caca };var (_cebb =map[rune ]string {0x0060:"\u0300",0x02CB:"\u0300",0x0027:"\u0301",0x00B4:"\u0301",0x02B9:"\u0301",0x02CA:"\u0301",0x005E:"\u0302",0x02C6:"\u0302",0x007E:"\u0303",0x02DC:"\u0303",0x00AF:"\u0304",0x02C9:"\u0304",0x02D8:"\u0306",0x02D9:"\u0307",0x00A8:"\u0308",0x00B0:"\u030a",0x02DA:"\u030a",0x02BA:"\u030b",0x02DD:"\u030b",0x02C7:"\u030c",0x02C8:"\u030d",0x0022:"\u030e",0x02BB:"\u0312",0x02BC:"\u0313",0x0486:"\u0313",0x055A:"\u0313",0x02BD:"\u0314",0x0485:"\u0314",0x0559:"\u0314",0x02D4:"\u031d",0x02D5:"\u031e",0x02D6:"\u031f",0x02D7:"\u0320",0x02B2:"\u0321",0x00B8:"\u0327",0x02CC:"\u0329",0x02B7:"\u032b",0x02CD:"\u0331",0x005F:"\u0332",0x204E:"\u0359"};
);

// PageTextOptions holds various options available in extraction process.
type PageTextOptions struct{_ecef bool ;_egd bool ;};

// Marks returns the TextMark collection for a page. It represents all the text on the page.
func (_aaf PageText )Marks ()*TextMarkArray {return &TextMarkArray {_fgbb :_aaf ._cggg }};func (_bdef *textObject )nextLine (){_bdef .moveLP (0,-_bdef ._cdg ._adge )};func (_aggda *subpath )makeRectRuling (_cgbee _e .Color )(*ruling ,bool ){if _fddc {_ceg .Log .Info ("\u006d\u0061\u006beR\u0065\u0063\u0074\u0052\u0075\u006c\u0069\u006e\u0067\u003a\u0020\u0070\u0061\u0074\u0068\u003d\u0025\u0076",_aggda );
};_aagcac :=_aggda ._ggdcf [:4];_gffgg :=make (map[int ]rulingKind ,len (_aagcac ));for _dbece ,_effbcd :=range _aagcac {_gcda :=_aggda ._ggdcf [(_dbece +1)%4];_gffgg [_dbece ]=_faaba (_effbcd ,_gcda );if _fddc {_a .Printf ("\u0025\u0034\u0064: \u0025\u0073\u0020\u003d\u0020\u0025\u0036\u002e\u0032\u0066\u0020\u002d\u0020\u0025\u0036\u002e\u0032\u0066",_dbece ,_gffgg [_dbece ],_effbcd ,_gcda );
};};if _fddc {_a .Printf ("\u0020\u0020\u0020\u006b\u0069\u006e\u0064\u0073\u003d\u0025\u002b\u0076\u000a",_gffgg );};var _bccd ,_cabf []int ;for _dggf ,_ebdda :=range _gffgg {switch _ebdda {case _gdad :_cabf =append (_cabf ,_dggf );case _bdcc :_bccd =append (_bccd ,_dggf );
};};if _fddc {_a .Printf ("\u0020\u0020 \u0068\u006f\u0072z\u0073\u003d\u0025\u0064\u0020\u0025\u002b\u0076\u000a",len (_cabf ),_cabf );_a .Printf ("\u0020\u0020 \u0076\u0065\u0072t\u0073\u003d\u0025\u0064\u0020\u0025\u002b\u0076\u000a",len (_bccd ),_bccd );
};_feed :=(len (_cabf )==2&&len (_bccd )==2)||(len (_cabf )==2&&len (_bccd )==0&&_dgea (_aagcac [_cabf [0]],_aagcac [_cabf [1]]))||(len (_bccd )==2&&len (_cabf )==0&&_gdaf (_aagcac [_bccd [0]],_aagcac [_bccd [1]]));if _fddc {_a .Printf (" \u0020\u0020\u0068\u006f\u0072\u007as\u003d\u0025\u0064\u0020\u0076\u0065\u0072\u0074\u0073=\u0025\u0064\u0020o\u006b=\u0025\u0074\u000a",len (_cabf ),len (_bccd ),_feed );
};if !_feed {if _fddc {_ceg .Log .Error ("\u0021!\u006d\u0061\u006b\u0065R\u0065\u0063\u0074\u0052\u0075l\u0069n\u0067:\u0020\u0070\u0061\u0074\u0068\u003d\u0025v",_aggda );_a .Printf (" \u0020\u0020\u0068\u006f\u0072\u007as\u003d\u0025\u0064\u0020\u0076\u0065\u0072\u0074\u0073=\u0025\u0064\u0020o\u006b=\u0025\u0074\u000a",len (_cabf ),len (_bccd ),_feed );
};return &ruling {},false ;};if len (_bccd )==0{for _ddaa ,_gefa :=range _gffgg {if _gefa !=_gdad {_bccd =append (_bccd ,_ddaa );};};};if len (_cabf )==0{for _ebgb ,_edbc :=range _gffgg {if _edbc !=_bdcc {_cabf =append (_cabf ,_ebgb );};};};if _fddc {_ceg .Log .Info ("\u006da\u006b\u0065R\u0065\u0063\u0074\u0052u\u006c\u0069\u006eg\u003a\u0020\u0068\u006f\u0072\u007a\u0073\u003d\u0025d \u0076\u0065\u0072t\u0073\u003d%\u0064\u0020\u0070\u006f\u0069\u006et\u0073\u003d%\u0064\u000a"+"\u0009\u0020\u0068o\u0072\u007a\u0073\u003d\u0025\u002b\u0076\u000a"+"\u0009\u0020\u0076e\u0072\u0074\u0073\u003d\u0025\u002b\u0076\u000a"+"\t\u0070\u006f\u0069\u006e\u0074\u0073\u003d\u0025\u002b\u0076",len (_cabf ),len (_bccd ),len (_aagcac ),_cabf ,_bccd ,_aagcac );
};var _ecab ,_aegga ,_cedb ,_fedc _gcg .Point ;if _aagcac [_cabf [0]].Y > _aagcac [_cabf [1]].Y {_cedb ,_fedc =_aagcac [_cabf [0]],_aagcac [_cabf [1]];}else {_cedb ,_fedc =_aagcac [_cabf [1]],_aagcac [_cabf [0]];};if _aagcac [_bccd [0]].X > _aagcac [_bccd [1]].X {_ecab ,_aegga =_aagcac [_bccd [0]],_aagcac [_bccd [1]];
}else {_ecab ,_aegga =_aagcac [_bccd [1]],_aagcac [_bccd [0]];};_feab :=_gg .PdfRectangle {Llx :_ecab .X ,Urx :_aegga .X ,Lly :_fedc .Y ,Ury :_cedb .Y };if _feab .Llx > _feab .Urx {_feab .Llx ,_feab .Urx =_feab .Urx ,_feab .Llx ;};if _feab .Lly > _feab .Ury {_feab .Lly ,_feab .Ury =_feab .Ury ,_feab .Lly ;
};_cagae :=rectRuling {PdfRectangle :_feab ,_caeg :_gggd (_feab ),Color :_cgbee };if _cagae ._caeg ==_gaegd {if _fddc {_ceg .Log .Error ("\u006da\u006b\u0065\u0052\u0065\u0063\u0074\u0052\u0075\u006c\u0069\u006eg\u003a\u0020\u006b\u0069\u006e\u0064\u003d\u006e\u0069\u006c");
};return nil ,false ;};_ffde ,_ecdde :=_cagae .asRuling ();if !_ecdde {if _fddc {_ceg .Log .Error ("\u006da\u006b\u0065\u0052\u0065c\u0074\u0052\u0075\u006c\u0069n\u0067:\u0020!\u0069\u0073\u0052\u0075\u006c\u0069\u006eg");};return nil ,false ;};if _aabf {_a .Printf ("\u0020\u0020\u0020\u0072\u003d\u0025\u0073\u000a",_ffde .String ());
};return _ffde ,true ;};func _fceea (_ecbge float64 )bool {return _ce .Abs (_ecbge )< _deeb };func (_egcef *textTable )getRight ()paraList {_gadff :=make (paraList ,_egcef ._fbaf );for _bagbd :=0;_bagbd < _egcef ._fbaf ;_bagbd ++{_adag :=_egcef .get (_egcef ._cbdec -1,_bagbd )._ebfc ;
if _adag .taken (){return nil ;};_gadff [_bagbd ]=_adag ;};for _cfcbd :=0;_cfcbd < _egcef ._fbaf -1;_cfcbd ++{if _gadff [_cfcbd ]._fgac !=_gadff [_cfcbd +1]{return nil ;};};return _gadff ;};var _gebf =TextMark {Text :"\u005b\u0058\u005d",Original :"\u0020",Meta :true ,FillColor :_e .White ,StrokeColor :_e .White };
func (_eeee paraList )findGridTables (_dfefb []gridTiling )[]*textTable {if _ccgc {_ceg .Log .Info ("\u0066i\u006e\u0064\u0047\u0072\u0069\u0064\u0054\u0061\u0062\u006c\u0065s\u003a\u0020\u0025\u0064\u0020\u0070\u0061\u0072\u0061\u0073",len (_eeee ));for _gdece ,_gfff :=range _eeee {_a .Printf ("\u0025\u0034\u0064\u003a\u0020\u0025\u0073\u000a",_gdece ,_gfff );
};};var _accg []*textTable ;for _bfbd ,_cgddd :=range _dfefb {_bgbeb ,_eaca :=_eeee .findTableGrid (_cgddd );if _bgbeb !=nil {_bgbeb .log (_a .Sprintf ("\u0066\u0069\u006e\u0064Ta\u0062\u006c\u0065\u0057\u0069\u0074\u0068\u0047\u0072\u0069\u0064\u0073\u003a\u0020%\u0064",_bfbd ));
_accg =append (_accg ,_bgbeb );_bgbeb .markCells ();};for _egeab :=range _eaca {_egeab ._eeed =true ;};};if _ccgc {_ceg .Log .Info ("\u0066i\u006e\u0064\u0047\u0072i\u0064\u0054\u0061\u0062\u006ce\u0073:\u0020%\u0064\u0020\u0074\u0061\u0062\u006c\u0065s",len (_accg ));
};return _accg ;};func (_bgbe *structTreeRoot )parseStructTreeRoot (_efab _de .PdfObject ){if _efab !=nil {_dfaef ,_aacg :=_de .GetDict (_efab );if !_aacg {_ceg .Log .Debug ("\u0070\u0061\u0072s\u0065\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065\u0065\u0052\u006f\u006f\u0074\u003a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006eo\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e");
};K :=_dfaef .Get ("\u004b");_daea :=_dfaef .Get ("\u0054\u0079\u0070\u0065").String ();var _gbcda *_de .PdfObjectArray ;switch _dceaa :=K .(type ){case *_de .PdfObjectArray :_gbcda =_dceaa ;case *_de .PdfObjectReference :_gbcda =_de .MakeArray (K );};
_ggdcd :=[]structElement {};for _ ,_cagga :=range _gbcda .Elements (){_afdfb :=&structElement {};_afdfb .parseStructElement (_cagga );_ggdcd =append (_ggdcd ,*_afdfb );};_bgbe ._feec =_ggdcd ;_bgbe ._effbc =_daea ;};};func (_beff *stateStack )top ()*textState {if _beff .empty (){return nil ;
};return (*_beff )[_beff .size ()-1];};func _cbd (_bgefc []*textLine ,_befd string )string {var _fgcfa _gc .Builder ;_bcbf :=0.0;for _bffgf ,_bfbf :=range _bgefc {_aagca :=_bfbf .text ();_bcg :=_bfbf ._gbfa ;if _bffgf < len (_bgefc )-1{_bcbf =_bgefc [_bffgf +1]._gbfa ;
}else {_bcbf =0.0;};_fgcfa .WriteString (_befd );_fgcfa .WriteString (_aagca );if _bcbf !=_bcg {_fgcfa .WriteString ("\u000a");}else {_fgcfa .WriteString ("\u0020");};};return _fgcfa .String ();};func _ecd (_aede ,_dgced _gg .PdfRectangle )bool {return _aede .Llx <=_dgced .Llx &&_dgced .Urx <=_aede .Urx &&_aede .Lly <=_dgced .Lly &&_dgced .Ury <=_aede .Ury ;
};type shapesState struct{_edeg _gcg .Matrix ;_ddef _gcg .Matrix ;_debc []*subpath ;_aee bool ;_ccgg _gcg .Point ;_abec *textObject ;};func _gdaac (_dddce ,_beddf int )uint64 {return uint64 (_dddce )*0x1000000+uint64 (_beddf )};func _fbfc (_eacca map[int ]intSet )[]int {_dfedg :=make ([]int ,0,len (_eacca ));
for _bbfd :=range _eacca {_dfedg =append (_dfedg ,_bbfd );};_ge .Ints (_dfedg );return _dfedg ;};func (_ggae compositeCell )parasBBox ()(paraList ,_gg .PdfRectangle ){return _ggae .paraList ,_ggae .PdfRectangle ;};func _dbeca (_gede []*textLine ,_dfccd map[float64 ][]*textLine )[]*list {_bebe :=_egad (_dfccd );
_aade :=[]*list {};if len (_bebe )==0{return _aade ;};_abed :=_bebe [0];_ffadd :=1;_aebd :=_dfccd [_abed ];for _cddf ,_gffa :=range _aebd {var _fffa float64 ;_feecb :=[]*list {};_cdfd :=_gffa ._gbfa ;_eefa :=-1.0;if _cddf < len (_aebd )-1{_eefa =_aebd [_cddf +1]._gbfa ;
};if _ffadd < len (_bebe ){_feecb =_cgac (_gede ,_dfccd ,_bebe ,_ffadd ,_cdfd ,_eefa );};_fffa =_eefa ;if len (_feecb )> 0{_aeec :=_feecb [0];if len (_aeec ._bdbb )> 0{_fffa =_aeec ._bdbb [0]._gbfa ;};};_bcea :=[]*textLine {_gffa };_eeab :=_fbgc (_gffa ,_gede ,_bebe ,_cdfd ,_fffa );
_bcea =append (_bcea ,_eeab ...);_eeac :=_ccdf (_bcea ,"\u0062\u0075\u006c\u006c\u0065\u0074",_feecb );_eeac ._abgd =_cbd (_bcea ,"");_aade =append (_aade ,_eeac );};return _aade ;};func (_fgbd *wordBag )allWords ()[]*textWord {var _dcae []*textWord ;for _ ,_baba :=range _fgbd ._agbg {_dcae =append (_dcae ,_baba ...);
};return _dcae ;};func (_fccd *TextMarkArray )getTextMarkAtOffset (_gbgd int )*TextMark {for _ ,_fdfc :=range _fccd ._fgbb {if _fdfc .Offset ==_gbgd {return &_fdfc ;};};return nil ;};

// String returns a human readable description of `path`.
func (_efad *subpath )String ()string {_feda :=_efad ._ggdcf ;_gedaa :=len (_feda );if _gedaa <=5{return _a .Sprintf ("\u0025d\u003a\u0020\u0025\u0036\u002e\u0032f",_gedaa ,_feda );};return _a .Sprintf ("\u0025d\u003a\u0020\u0025\u0036.\u0032\u0066\u0020\u0025\u0036.\u0032f\u0020.\u002e\u002e\u0020\u0025\u0036\u002e\u0032f",_gedaa ,_feda [0],_feda [1],_feda [_gedaa -1]);
};func (_aadec *ruling )encloses (_fdff ,_aegb float64 )bool {return _aadec ._ebaa -_begbg <=_fdff &&_aegb <=_aadec ._bddc +_begbg ;};func (_bacc *textPara )text ()string {_fabbe :=new (_fa .Buffer );_bacc .writeText (_fabbe );return _fabbe .String ();
};

// String returns a description of `k`.
func (_bagf rulingKind )String ()string {_bbdae ,_cdbc :=_fagc [_bagf ];if !_cdbc {return _a .Sprintf ("\u004e\u006ft\u0020\u0061\u0020r\u0075\u006c\u0069\u006e\u0067\u003a\u0020\u0025\u0064",_bagf );};return _bbdae ;};func _gbefa (_ffebg int ,_afgc func (int ,int )bool )[]int {_cffcb :=make ([]int ,_ffebg );
for _afacg :=range _cffcb {_cffcb [_afacg ]=_afacg ;};_ge .Slice (_cffcb ,func (_fdgaf ,_eefb int )bool {return _afgc (_cffcb [_fdgaf ],_cffcb [_eefb ])});return _cffcb ;};func _egad (_ecac map[float64 ][]*textLine )[]float64 {_fabba :=[]float64 {};for _gbgc :=range _ecac {_fabba =append (_fabba ,_gbgc );
};_ge .Float64s (_fabba );return _fabba ;};func (_dbgbd *structElement )parseStructElement (_ccgcd _de .PdfObject ){_fgedb ,_bgee :=_de .GetDict (_ccgcd );if !_bgee {_ceg .Log .Debug ("\u0070\u0061\u0072\u0073\u0065\u0053\u0074\u0072u\u0063\u0074\u0045le\u006d\u0065\u006e\u0074\u003a\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064\u002e");
return ;};_fbgg :=_fgedb .Get ("\u0053");_age :=_fgedb .Get ("\u0050\u0067");_gcbb :="";if _fbgg !=nil {_gcbb =_fbgg .String ();};_gegc :=_fgedb .Get ("\u004b");_dbgbd ._gefg =_gcbb ;_dbgbd ._fcbb =_age ;switch _affc :=_gegc .(type ){case *_de .PdfObjectInteger :_dbgbd ._gefg =_gcbb ;
_dbgbd ._abebd =int64 (*_affc );_dbgbd ._fcbb =_age ;case *_de .PdfObjectReference :_cbcc :=*_de .MakeArray (_affc );var _bgfag int64 =-1;_dbgbd ._abebd =_bgfag ;if _cbcc .Len ()==1{_ebcc :=_cbcc .Elements ()[0];_gfge ,_dfcbd :=_ebcc .(*_de .PdfObjectInteger );
if _dfcbd {_bgfag =int64 (*_gfge );_dbgbd ._abebd =_bgfag ;_dbgbd ._gefg =_gcbb ;_dbgbd ._fcbb =_age ;return ;};};_aegdc :=[]structElement {};for _ ,_bbgb :=range _cbcc .Elements (){_cdgf ,_adffa :=_bbgb .(*_de .PdfObjectInteger );if _adffa {_bgfag =int64 (*_cdgf );
_dbgbd ._abebd =_bgfag ;_dbgbd ._gefg =_gcbb ;}else {_cbca :=&structElement {};_cbca .parseStructElement (_bbgb );_aegdc =append (_aegdc ,*_cbca );};_bgfag =-1;};_dbgbd ._dada =_aegdc ;case *_de .PdfObjectArray :_geff :=_gegc .(*_de .PdfObjectArray );var _abdf int64 =-1;
_dbgbd ._abebd =_abdf ;if _geff .Len ()==1{_gddcg :=_geff .Elements ()[0];_deeee ,_dgec :=_gddcg .(*_de .PdfObjectInteger );if _dgec {_abdf =int64 (*_deeee );_dbgbd ._abebd =_abdf ;_dbgbd ._gefg =_gcbb ;_dbgbd ._fcbb =_age ;return ;};};_aebe :=[]structElement {};
for _ ,_egcg :=range _geff .Elements (){_eafc ,_gfdb :=_egcg .(*_de .PdfObjectInteger );if _gfdb {_abdf =int64 (*_eafc );_dbgbd ._abebd =_abdf ;_dbgbd ._gefg =_gcbb ;_dbgbd ._fcbb =_age ;}else {_bagb :=&structElement {};_bagb .parseStructElement (_egcg );
_aebe =append (_aebe ,*_bagb );};_abdf =-1;};_dbgbd ._dada =_aebe ;};};func _dfcc (_ecbb *wordBag ,_ffcf int )*textLine {_ccge :=_ecbb .firstWord (_ffcf );_ffdgg :=textLine {PdfRectangle :_ccge .PdfRectangle ,_dbdc :_ccge ._agdb ,_gbfa :_ccge ._bfgb };
_ffdgg .pullWord (_ecbb ,_ccge ,_ffcf );return &_ffdgg ;};func _fbgc (_aecac *textLine ,_fccff []*textLine ,_cgbff []float64 ,_acge ,_fbfe float64 )[]*textLine {_fgfec :=[]*textLine {};for _ ,_bfef :=range _fccff {if _bfef ._gbfa >=_acge {if _fbfe !=-1&&_bfef ._gbfa < _fbfe {if _bfef .text ()!=_aecac .text (){if _ce .Round (_bfef .Llx )< _ce .Round (_aecac .Llx ){break ;
};_fgfec =append (_fgfec ,_bfef );};}else if _fbfe ==-1{if _bfef ._gbfa ==_aecac ._gbfa {if _bfef .text ()!=_aecac .text (){_fgfec =append (_fgfec ,_bfef );};continue ;};_becg :=_dcgf (_aecac ,_fccff ,_cgbff );if _becg !=-1&&_bfef ._gbfa <=_becg {_fgfec =append (_fgfec ,_bfef );
};};};};return _fgfec ;};func (_dbcc *textObject )moveText (_baf ,_acfd float64 ){_dbcc .moveLP (_baf ,_acfd )};func (_fgce paraList )lines ()[]*textLine {var _dbcb []*textLine ;for _ ,_dedb :=range _fgce {_dbcb =append (_dbcb ,_dedb ._eccfb ...);};return _dbcb ;
};func (_fdbe *ruling )gridIntersecting (_fcbfc *ruling )bool {return _ddagg (_fdbe ._ebaa ,_fcbfc ._ebaa )&&_ddagg (_fdbe ._bddc ,_fcbfc ._bddc );};

// String returns a human readable description of `s`.
func (_afade intSet )String ()string {var _ebfd []int ;for _ddcc :=range _afade {if _afade .has (_ddcc ){_ebfd =append (_ebfd ,_ddcc );};};_ge .Ints (_ebfd );return _a .Sprintf ("\u0025\u002b\u0076",_ebfd );};func (_dbedf *shapesState )closePath (){if _dbedf ._aee {_dbedf ._debc =append (_dbedf ._debc ,_eegf (_dbedf ._ccgg ));
_dbedf ._aee =false ;}else if len (_dbedf ._debc )==0{if _aega {_ceg .Log .Debug ("\u0063\u006c\u006f\u0073eP\u0061\u0074\u0068\u0020\u0077\u0069\u0074\u0068\u0020\u006e\u006f\u0020\u0070\u0061t\u0068");};_dbedf ._aee =false ;return ;};_dbedf ._debc [len (_dbedf ._debc )-1].close ();
if _aega {_ceg .Log .Info ("\u0063\u006c\u006f\u0073\u0065\u0050\u0061\u0074\u0068\u003a\u0020\u0025\u0073",_dbedf );};};var _gbdg string ="\u0028\u003f\u0069\u0029\u005e\u0028\u004d\u007b\u0030\u002c\u0033\u007d\u0029\u0028\u0043\u0028?\u003a\u0044\u007cM\u0029\u007c\u0044\u003f\u0043{\u0030\u002c\u0033\u007d\u0029\u0028\u0058\u0028\u003f\u003a\u004c\u007c\u0043\u0029\u007cL\u003f\u0058\u007b\u0030\u002c\u0033}\u0029\u0028\u0049\u0028\u003f\u003a\u0056\u007c\u0058\u0029\u007c\u0056\u003f\u0049\u007b\u0030\u002c\u0033\u007d\u0029\u0028\u005c\u0029\u007c\u005c\u002e\u0029\u007c\u005e\u005c\u0028\u0028\u004d\u007b\u0030\u002c\u0033\u007d\u0029\u0028\u0043\u0028\u003f\u003aD\u007cM\u0029\u007c\u0044\u003f\u0043\u007b\u0030\u002c\u0033\u007d\u0029\u0028\u0058\u0028?\u003a\u004c\u007c\u0043\u0029\u007c\u004c?\u0058\u007b0\u002c\u0033\u007d\u0029(\u0049\u0028\u003f\u003a\u0056|\u0058\u0029\u007c\u0056\u003f\u0049\u007b\u0030\u002c\u0033\u007d\u0029\u005c\u0029";
func (_cacg *stateStack )size ()int {return len (*_cacg )};func (_fcdb paraList )yNeighbours (_ffcd float64 )map[*textPara ][]int {_bfed :=make ([]event ,2*len (_fcdb ));if _ffcd ==0{for _debag ,_bccdg :=range _fcdb {_bfed [2*_debag ]=event {_bccdg .Lly ,true ,_debag };
_bfed [2*_debag +1]=event {_bccdg .Ury ,false ,_debag };};}else {for _geffg ,_ecdc :=range _fcdb {_bfed [2*_geffg ]=event {_ecdc .Lly -_ffcd *_ecdc .fontsize (),true ,_geffg };_bfed [2*_geffg +1]=event {_ecdc .Ury +_ffcd *_ecdc .fontsize (),false ,_geffg };
};};return _fcdb .eventNeighbours (_bfed );};func (_aagef paraList )topoOrder ()[]int {if _cbed {_ceg .Log .Info ("\u0074\u006f\u0070\u006f\u004f\u0072\u0064\u0065\u0072\u003a");};_bfee :=len (_aagef );_cfcc :=make ([]bool ,_bfee );_gaef :=make ([]int ,0,_bfee );
_gccfd :=_aagef .llyOrdering ();var _aaaa func (_bac int );_aaaa =func (_bcad int ){_cfcc [_bcad ]=true ;for _aedeg :=0;_aedeg < _bfee ;_aedeg ++{if !_cfcc [_aedeg ]{if _aagef .readBefore (_gccfd ,_bcad ,_aedeg ){_aaaa (_aedeg );};};};_gaef =append (_gaef ,_bcad );
};for _bbba :=0;_bbba < _bfee ;_bbba ++{if !_cfcc [_bbba ]{_aaaa (_bbba );};};return _egff (_gaef );};func (_eeefg *ruling )alignsSec (_fcfaf *ruling )bool {const _edfbc =_deeb +1.0;return _eeefg ._ebaa -_edfbc <=_fcfaf ._bddc &&_fcfaf ._ebaa -_edfbc <=_eeefg ._bddc ;
};func _adbb (_gagac *wordBag ,_gbfc *textWord ,_cgfb float64 )bool {return _gagac .Urx <=_gbfc .Llx &&_gbfc .Llx < _gagac .Urx +_cgfb ;};func (_dbec *subpath )clear (){*_dbec =subpath {}};var _gcfec =_f .MustCompile ("\u005e\u005c\u0073\u002a\u0028\u005c\u0064\u002b\u005c\u002e\u003f|\u005b\u0049\u0069\u0076\u005d\u002b\u0029\u005c\u0073\u002a\\\u0029\u003f\u0024");
var _fagc =map[rulingKind ]string {_gaegd :"\u006e\u006f\u006e\u0065",_gdad :"\u0068\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c",_bdcc :"\u0076\u0065\u0072\u0074\u0069\u0063\u0061\u006c"};var _ddbb *_f .Regexp =_f .MustCompile (_gbdg +"\u007c"+_degd );
func (_cegb *shapesState )cubicTo (_ecaf ,_ffdf ,_dbg ,_faag ,_abad ,_bab float64 ){if _aega {_ceg .Log .Info ("\u0063\u0075\u0062\u0069\u0063\u0054\u006f\u003a");};_cegb .addPoint (_abad ,_bab );};func _ddca (_afed ,_fbbd _gcg .Point ,_gbbe _e .Color )(*ruling ,bool ){_gdca :=lineRuling {_geca :_afed ,_aedf :_fbbd ,_agdde :_eggga (_afed ,_fbbd ),Color :_gbbe };
if _gdca ._agdde ==_gaegd {return nil ,false ;};return _gdca .asRuling ();};func (_gacfb rulingList )intersections ()map[int ]intSet {var _babf ,_bbed []int ;for _cgfbe ,_abbfd :=range _gacfb {switch _abbfd ._aaeb {case _bdcc :_babf =append (_babf ,_cgfbe );
case _gdad :_bbed =append (_bbed ,_cgfbe );};};if len (_babf )< _cdef +1||len (_bbed )< _efbf +1{return nil ;};if len (_babf )+len (_bbed )> _egga {_ceg .Log .Debug ("\u0069\u006e\u0074\u0065\u0072\u0073e\u0063\u0074\u0069\u006f\u006e\u0073\u003a\u0020\u0054\u004f\u004f\u0020\u004d\u0041\u004e\u0059\u0020\u0072\u0075\u006ci\u006e\u0067\u0073\u0020\u0076\u0065\u0063\u0073\u003d\u0025\u0064\u0020\u003d\u0020%\u0064 \u0078\u0020\u0025\u0064",len (_gacfb ),len (_babf ),len (_bbed ));
return nil ;};_ecfg :=make (map[int ]intSet ,len (_babf )+len (_bbed ));for _ ,_afcf :=range _babf {for _ ,_bbgba :=range _bbed {if _gacfb [_afcf ].intersects (_gacfb [_bbgba ]){if _ ,_fdbb :=_ecfg [_afcf ];!_fdbb {_ecfg [_afcf ]=make (intSet );};if _ ,_fcaa :=_ecfg [_bbgba ];
!_fcaa {_ecfg [_bbgba ]=make (intSet );};_ecfg [_afcf ].add (_bbgba );_ecfg [_bbgba ].add (_afcf );};};};return _ecfg ;};func _efade (_bfag []pathSection )rulingList {_deaf (_bfag );if _aabf {_ceg .Log .Info ("\u006da\u006b\u0065\u0046\u0069l\u006c\u0052\u0075\u006c\u0069n\u0067s\u003a \u0025\u0064\u0020\u0066\u0069\u006c\u006cs",len (_bfag ));
};var _bafe rulingList ;for _ ,_agae :=range _bfag {for _ ,_agaed :=range _agae ._ffa {if !_agaed .isQuadrilateral (){if _aabf {_ceg .Log .Error ("!\u0069s\u0051\u0075\u0061\u0064\u0072\u0069\u006c\u0061t\u0065\u0072\u0061\u006c: \u0025\u0073",_agaed );
};continue ;};if _egce ,_dbcaf :=_agaed .makeRectRuling (_agae .Color );_dbcaf {_bafe =append (_bafe ,_egce );}else {if _fddc {_ceg .Log .Error ("\u0021\u006d\u0061\u006beR\u0065\u0063\u0074\u0052\u0075\u006c\u0069\u006e\u0067\u003a\u0020\u0025\u0073",_agaed );
};};};};if _aabf {_ceg .Log .Info ("\u006d\u0061\u006b\u0065Fi\u006c\u006c\u0052\u0075\u006c\u0069\u006e\u0067\u0073\u003a\u0020\u0025\u0073",_bafe .String ());};return _bafe ;};

// List returns all the list objects detected on the page.
// It detects all the bullet point Lists from a given pdf page and builds a slice of bullet list objects.
// A given bullet list object has a tree structure.
// Each bullet point list is extracted with the text content it contains and all the sub lists found under it as children in the tree.
// The rest content of the pdf is ignored and only text in the bullet point lists are extracted.
// The list extraction is done in two ways.
// 1. If the document is tagged then the lists are extracted using the tags provided in the document.
// 2. Otherwise the bullet lists are extracted from the raw text using regex matching.
// By default the document tag is used if available.
// However this can be disabled using `DisableDocumentTags` in the `Options` object.
// Sometimes disabling document tags option might give a better bullet list extraction if the document was tagged incorrectly.
//     options := &Options{
//	     DisableDocumentTags: false, // this means use document tag if available
//     }
//     ex, err := NewWithOptions(page, options)
//     // handle error
//     pageText, _, _, err := ex.ExtractPageText()
//     // handle error
//     lists := pageText.List()
//     txt := lists.Text()
func (_ffef PageText )List ()lists {_bgcg :=!_ffef ._dfg ._ecef ;_gcacg :=_ffef .getParagraphs ();_fcbec :=true ;if _ffef ._eaef ==nil ||*_ffef ._eaef ==nil {_fcbec =false ;};_bgadg :=_gcacg .list ();if _fcbec &&_bgcg {_gccbd :=_cgfg (&_gcacg );_fafee :=&structTreeRoot {};
_fafee .parseStructTreeRoot (*_ffef ._eaef );if _fafee ._feec ==nil {_ceg .Log .Debug ("\u004c\u0069\u0073\u0074\u003a\u0020\u0073t\u0072\u0075\u0063\u0074\u0054\u0072\u0065\u0065\u0052\u006f\u006f\u0074\u0020\u0064\u006f\u0065\u0073\u006e'\u0074\u0020\u0068\u0061\u0076e\u0020\u0061\u006e\u0079\u0020\u0063\u006f\u006e\u0074e\u006e\u0074\u002c\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0074\u0065\u0078\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0069\u006e\u0067\u0020\u006d\u0065\u0074\u0068\u006f\u0064\u0020\u0069\u006e\u0073\u0074\u0065\u0061\u0064\u002e");
return _bgadg ;};_bgadg =_fafee .buildList (_gccbd ,_ffef ._debd );};return _bgadg ;};func (_dgee *textObject )showText (_ccg _de .PdfObject ,_fgfe []byte ,_ecf int )error {return _dgee .renderText (_ccg ,_fgfe ,_ecf );};func _egef (_ebbb []*wordBag )[]*wordBag {if len (_ebbb )<=1{return _ebbb ;
};if _gadb {_ceg .Log .Info ("\u006d\u0065\u0072\u0067\u0065\u0057\u006f\u0072\u0064B\u0061\u0067\u0073\u003a");};_ge .Slice (_ebbb ,func (_cefc ,_ebgc int )bool {_dbfe ,_adeb :=_ebbb [_cefc ],_ebbb [_ebgc ];_cfgg :=_dbfe .Width ()*_dbfe .Height ();_begb :=_adeb .Width ()*_adeb .Height ();
if _cfgg !=_begb {return _cfgg > _begb ;};if _dbfe .Height ()!=_adeb .Height (){return _dbfe .Height ()> _adeb .Height ();};return _cefc < _ebgc ;});var _gcfb []*wordBag ;_ebag :=make (intSet );for _ffbb :=0;_ffbb < len (_ebbb );_ffbb ++{if _ebag .has (_ffbb ){continue ;
};_ebaf :=_ebbb [_ffbb ];for _fbag :=_ffbb +1;_fbag < len (_ebbb );_fbag ++{if _ebag .has (_ffbb ){continue ;};_ffc :=_ebbb [_fbag ];_dee :=_ebaf .PdfRectangle ;_dee .Llx -=_ebaf ._agba ;if _ecd (_dee ,_ffc .PdfRectangle ){_ebaf .absorb (_ffc );_ebag .add (_fbag );
};};_gcfb =append (_gcfb ,_ebaf );};if len (_ebbb )!=len (_gcfb )+len (_ebag ){_ceg .Log .Error ("\u006d\u0065\u0072ge\u0057\u006f\u0072\u0064\u0042\u0061\u0067\u0073\u003a \u0025d\u2192%\u0064 \u0061\u0062\u0073\u006f\u0072\u0062\u0065\u0064\u003d\u0025\u0064",len (_ebbb ),len (_gcfb ),len (_ebag ));
};return _gcfb ;};func _cdeg (_aaggb []*textMark ,_fgdaa _gg .PdfRectangle ,_ageg rulingList ,_gdga []gridTiling ,_fdbc bool )paraList {_ceg .Log .Trace ("\u006d\u0061\u006b\u0065\u0054\u0065\u0078\u0074\u0050\u0061\u0067\u0065\u003a \u0025\u0064\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0073\u0020\u0070\u0061\u0067\u0065\u0053\u0069\u007a\u0065=\u0025\u002e\u0032\u0066",len (_aaggb ),_fgdaa );
if len (_aaggb )==0{return nil ;};_bbec :=_abbg (_aaggb ,_fgdaa );if len (_bbec )==0{return nil ;};_ageg .log ("\u006d\u0061\u006be\u0054\u0065\u0078\u0074\u0050\u0061\u0067\u0065");_aceg ,_edfe :=_ageg .vertsHorzs ();_ddcf :=_cegge (_bbec ,_fgdaa .Ury ,_aceg ,_edfe );
_cbbf :=_cbdd (_ddcf ,_fgdaa .Ury ,_aceg ,_edfe );_cbbf =_egef (_cbbf );_debg :=make (paraList ,0,len (_cbbf ));for _ ,_gaegb :=range _cbbf {_geaac :=_gaegb .arrangeText ();if _geaac !=nil {_debg =append (_debg ,_geaac );};};if !_fdbc &&len (_debg )>=_dgb {_debg =_debg .extractTables (_gdga );
};_debg .sortReadingOrder ();if !_fdbc {_debg .sortTopoOrder ();};_debg .log ("\u0073\u006f\u0072te\u0064\u0020\u0069\u006e\u0020\u0072\u0065\u0061\u0064\u0069\u006e\u0067\u0020\u006f\u0072\u0064\u0065\u0072");return _debg ;};func (_adafe *textLine )text ()string {var _ddbc []string ;
for _ ,_edfc :=range _adafe ._cffb {if _edfc ._fggfg {_ddbc =append (_ddbc ,"\u0020");};_ddbc =append (_ddbc ,_edfc ._dbggb );};return _gc .Join (_ddbc ,"");};func _fgadc (_adab map[float64 ]map[float64 ]gridTile )[]float64 {_cdbce :=make ([]float64 ,0,len (_adab ));
_dgfe :=make (map[float64 ]struct{},len (_adab ));for _ ,_caaa :=range _adab {for _bega :=range _caaa {if _ ,_gdffe :=_dgfe [_bega ];_gdffe {continue ;};_cdbce =append (_cdbce ,_bega );_dgfe [_bega ]=struct{}{};};};_ge .Float64s (_cdbce );return _cdbce ;
};func _dcba (_gdaad ,_adbcb float64 )bool {return _gdaad /_ce .Max (_gdec ,_adbcb )< _gged };func (_cdd *stateStack )push (_cegg *textState ){_cbga :=*_cegg ;*_cdd =append (*_cdd ,&_cbga )};func (_cbgaa *textPara )bbox ()_gg .PdfRectangle {return _cbgaa .PdfRectangle };
func (_cegf *textWord )appendMark (_ebdf *textMark ,_fgafa _gg .PdfRectangle ){_cegf ._cgde =append (_cegf ._cgde ,_ebdf );_cegf .PdfRectangle =_dgcc (_cegf .PdfRectangle ,_ebdf .PdfRectangle );if _ebdf ._dbgd > _cegf ._agdb {_cegf ._agdb =_ebdf ._dbgd ;
};_cegf ._bfgb =_fgafa .Ury -_cegf .PdfRectangle .Lly ;};func (_ecbd *textObject )showTextAdjusted (_ebcd *_de .PdfObjectArray ,_bafg int )error {_gdbc :=false ;for _ ,_fef :=range _ebcd .Elements (){switch _fef .(type ){case *_de .PdfObjectFloat ,*_de .PdfObjectInteger :_fdb ,_fbfb :=_de .GetNumberAsFloat (_fef );
if _fbfb !=nil {_ceg .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0073\u0068\u006f\u0077\u0054\u0065\u0078t\u0041\u0064\u006a\u0075\u0073\u0074\u0065\u0064\u002e\u0020\u0042\u0061\u0064\u0020\u006e\u0075\u006d\u0065r\u0069\u0063\u0061\u006c\u0020a\u0072\u0067\u002e\u0020\u006f\u003d\u0025\u0073\u0020\u0061\u0072\u0067\u0073\u003d\u0025\u002b\u0076",_fef ,_ebcd );
return _fbfb ;};_bbcg ,_ecag :=-_fdb *0.001*_ecbd ._cdg ._bcf ,0.0;if _gdbc {_ecag ,_bbcg =_bbcg ,_ecag ;};_gcff :=_dbab (_gcg .Point {X :_bbcg ,Y :_ecag });_ecbd ._fafb .Concat (_gcff );case *_de .PdfObjectString :_bcdb :=_de .TraceToDirectObject (_fef );
_gcaa ,_ffe :=_de .GetStringBytes (_bcdb );if !_ffe {_ceg .Log .Trace ("s\u0068\u006f\u0077\u0054\u0065\u0078\u0074\u0041\u0064j\u0075\u0073\u0074\u0065\u0064\u003a\u0020Ba\u0064\u0020\u0073\u0074r\u0069\u006e\u0067\u0020\u0061\u0072\u0067\u002e\u0020o=\u0025\u0073 \u0061\u0072\u0067\u0073\u003d\u0025\u002b\u0076",_fef ,_ebcd );
return _de .ErrTypeError ;};_ecbd .renderText (_bcdb ,_gcaa ,_bafg );default:_ceg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0073\u0068\u006f\u0077\u0054\u0065\u0078\u0074A\u0064\u006a\u0075\u0073\u0074\u0065\u0064\u002e\u0020\u0055\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0028%T\u0029\u0020\u0061\u0072\u0067\u0073\u003d\u0025\u002b\u0076",_fef ,_ebcd );
return _de .ErrTypeError ;};};return nil ;};func _bdfd (_gebe []TextMark ,_cedd *int )[]TextMark {_efga :=_gebe [len (_gebe )-1];_aged :=[]rune (_efga .Text );if len (_aged )==1{_gebe =_gebe [:len (_gebe )-1];_fgdg :=_gebe [len (_gebe )-1];*_cedd =_fgdg .Offset +len (_fgdg .Text );
}else {_bdde :=_cefef (_efga .Text );*_cedd +=len (_bdde )-len (_efga .Text );_efga .Text =_bdde ;};return _gebe ;};func _cbdd (_acfdd *wordBag ,_gaag float64 ,_decbeb ,_faae rulingList )[]*wordBag {var _gfcf []*wordBag ;for _ ,_fbca :=range _acfdd .depthIndexes (){_acag :=false ;
for !_acfdd .empty (_fbca ){_eggg :=_acfdd .firstReadingIndex (_fbca );_gecbc :=_acfdd .firstWord (_eggg );_adegb :=_bafc (_gecbc ,_gaag ,_decbeb ,_faae );_acfdd .removeWord (_gecbc ,_eggg );if _ebbgc {_ceg .Log .Info ("\u0066\u0069\u0072\u0073\u0074\u0057\u006f\u0072\u0064\u0020\u005e\u005e^\u005e\u0020\u0025\u0073",_gecbc .String ());
};for _cdff :=true ;_cdff ;_cdff =_acag {_acag =false ;_eecf :=_dacc *_adegb ._agba ;_fcff :=_bdfga *_adegb ._agba ;_cfaeb :=_dceg *_adegb ._agba ;if _ebbgc {_ceg .Log .Info ("\u0070a\u0072a\u0057\u006f\u0072\u0064\u0073\u0020\u0064\u0065\u0070\u0074\u0068 \u0025\u002e\u0032\u0066 \u002d\u0020\u0025\u002e\u0032f\u0020\u006d\u0061\u0078\u0049\u006e\u0074\u0072\u0061\u0044\u0065\u0070\u0074\u0068\u0047\u0061\u0070\u003d\u0025\u002e\u0032\u0066\u0020\u006d\u0061\u0078\u0049\u006e\u0074\u0072\u0061R\u0065\u0061\u0064\u0069\u006e\u0067\u0047\u0061p\u003d\u0025\u002e\u0032\u0066",_adegb .minDepth (),_adegb .maxDepth (),_cfaeb ,_fcff );
};if _acfdd .scanBand ("\u0076\u0065\u0072\u0074\u0069\u0063\u0061\u006c",_adegb ,_ffce (_ecaea ,0),_adegb .minDepth ()-_cfaeb ,_adegb .maxDepth ()+_cfaeb ,_abeg ,false ,false )> 0{_acag =true ;};if _acfdd .scanBand ("\u0068\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c",_adegb ,_ffce (_ecaea ,_fcff ),_adegb .minDepth (),_adegb .maxDepth (),_gecf ,false ,false )> 0{_acag =true ;
};if _acag {continue ;};_fbcb :=_acfdd .scanBand ("",_adegb ,_ffce (_adbb ,_eecf ),_adegb .minDepth (),_adegb .maxDepth (),_bdfbc ,true ,false );if _fbcb > 0{_bfdc :=(_adegb .maxDepth ()-_adegb .minDepth ())/_adegb ._agba ;if (_fbcb > 1&&float64 (_fbcb )> 0.3*_bfdc )||_fbcb <=10{if _acfdd .scanBand ("\u006f\u0074\u0068e\u0072",_adegb ,_ffce (_adbb ,_eecf ),_adegb .minDepth (),_adegb .maxDepth (),_bdfbc ,false ,true )> 0{_acag =true ;
};};};};_gfcf =append (_gfcf ,_adegb );};};return _gfcf ;};const (RenderModeStroke RenderMode =1<<iota ;RenderModeFill ;RenderModeClip ;);func (_badf rectRuling )asRuling ()(*ruling ,bool ){_bgbbg :=ruling {_aaeb :_badf ._caeg ,Color :_badf .Color ,_bgeee :_ffee };
switch _badf ._caeg {case _bdcc :_bgbbg ._dege =0.5*(_badf .Llx +_badf .Urx );_bgbbg ._ebaa =_badf .Lly ;_bgbbg ._bddc =_badf .Ury ;_fcgc ,_gdfc :=_badf .checkWidth (_badf .Llx ,_badf .Urx );if !_gdfc {if _fddc {_ceg .Log .Error ("\u0072\u0065\u0063\u0074\u0052\u0075l\u0069\u006e\u0067\u002e\u0061\u0073\u0052\u0075\u006c\u0069\u006e\u0067\u003a\u0020\u0072\u0075\u006c\u0069\u006e\u0067V\u0065\u0072\u0074\u0020\u0021\u0063\u0068\u0065\u0063\u006b\u0057\u0069\u0064\u0074h\u0020v\u003d\u0025\u002b\u0076",_badf );
};return nil ,false ;};_bgbbg ._degge =_fcgc ;case _gdad :_bgbbg ._dege =0.5*(_badf .Lly +_badf .Ury );_bgbbg ._ebaa =_badf .Llx ;_bgbbg ._bddc =_badf .Urx ;_edae ,_daec :=_badf .checkWidth (_badf .Lly ,_badf .Ury );if !_daec {if _fddc {_ceg .Log .Error ("\u0072\u0065\u0063\u0074\u0052\u0075l\u0069\u006e\u0067\u002e\u0061\u0073\u0052\u0075\u006c\u0069\u006e\u0067\u003a\u0020\u0072\u0075\u006c\u0069\u006e\u0067H\u006f\u0072\u007a\u0020\u0021\u0063\u0068\u0065\u0063\u006b\u0057\u0069\u0064\u0074h\u0020v\u003d\u0025\u002b\u0076",_badf );
};return nil ,false ;};_bgbbg ._degge =_edae ;default:_ceg .Log .Error ("\u0062\u0061\u0064\u0020pr\u0069\u006d\u0061\u0072\u0079\u0020\u006b\u0069\u006e\u0064\u003d\u0025\u0064",_badf ._caeg );return nil ,false ;};return &_bgbbg ,true ;};func (_gbb *textObject )checkOp (_adgg *_cdb .ContentStreamOperation ,_bdf int ,_eadc bool )(_befa bool ,_ced error ){if _gbb ==nil {var _ecg []_de .PdfObject ;
if _bdf > 0{_ecg =_adgg .Params ;if len (_ecg )> _bdf {_ecg =_ecg [:_bdf ];};};_ceg .Log .Debug ("\u0025\u0023q \u006f\u0070\u0065r\u0061\u006e\u0064\u0020out\u0073id\u0065\u0020\u0074\u0065\u0078\u0074\u002e p\u0061\u0072\u0061\u006d\u0073\u003d\u0025+\u0076",_adgg .Operand ,_ecg );
};if _bdf >=0{if len (_adgg .Params )!=_bdf {if _eadc {_ced =_c .New ("\u0069n\u0063\u006f\u0072\u0072e\u0063\u0074\u0020\u0070\u0061r\u0061m\u0065t\u0065\u0072\u0020\u0063\u006f\u0075\u006et");};_ceg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0025\u0023\u0071\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020h\u0061\u0076\u0065\u0020\u0025\u0064\u0020i\u006e\u0070\u0075\u0074\u0020\u0070\u0061\u0072\u0061\u006d\u0073,\u0020\u0067\u006f\u0074\u0020\u0025\u0064\u0020\u0025\u002b\u0076",_adgg .Operand ,_bdf ,len (_adgg .Params ),_adgg .Params );
return false ,_ced ;};};return true ,nil ;};func _abbee (_beaeg map[float64 ]gridTile )[]float64 {_eadaa :=make ([]float64 ,0,len (_beaeg ));for _aafg :=range _beaeg {_eadaa =append (_eadaa ,_aafg );};_ge .Float64s (_eadaa );return _eadaa ;};func (_bcdg *textPara )isAtom ()*textTable {_bbbc :=_bcdg ;
_ebebg :=_bcdg ._ebfc ;_deaca :=_bcdg ._fgac ;if _ebebg .taken ()||_deaca .taken (){return nil ;};_gaefe :=_ebebg ._fgac ;if _gaefe .taken ()||_gaefe !=_deaca ._ebfc {return nil ;};return _gcce (_bbbc ,_ebebg ,_deaca ,_gaefe );};const _ded =10;func _fgefe (_gebaad map[float64 ]map[float64 ]gridTile )[]float64 {_cdea :=make ([]float64 ,0,len (_gebaad ));
for _aacgf :=range _gebaad {_cdea =append (_cdea ,_aacgf );};_ge .Float64s (_cdea );_ggda :=len (_cdea );for _dbgg :=0;_dbgg < _ggda /2;_dbgg ++{_cdea [_dbgg ],_cdea [_ggda -1-_dbgg ]=_cdea [_ggda -1-_dbgg ],_cdea [_dbgg ];};return _cdea ;};var _eg =false ;
func _ccdf (_effd []*textLine ,_gbdd string ,_gagb []*list )*list {return &list {_bdbb :_effd ,_ccacc :_gbdd ,_eccg :_gagb };};func _ecaea (_gaeg *wordBag ,_cefe *textWord ,_cgda float64 )bool {return _cefe .Llx < _gaeg .Urx +_cgda &&_gaeg .Llx -_cgda < _cefe .Urx ;
};func _gdaf (_faada ,_egdc _gcg .Point )bool {_bggg :=_ce .Abs (_faada .X -_egdc .X );_fefdc :=_ce .Abs (_faada .Y -_egdc .Y );return _dcba (_bggg ,_fefdc );};func _dcdd (_fgeb _gg .PdfRectangle )*ruling {return &ruling {_aaeb :_bdcc ,_dege :_fgeb .Urx ,_ebaa :_fgeb .Lly ,_bddc :_fgeb .Ury };
};func (_cdgb *textPara )writeText (_edaf _d .Writer ){if _cdgb ._dace ==nil {_cdgb .writeCellText (_edaf );return ;};for _ecfb :=0;_ecfb < _cdgb ._dace ._fbaf ;_ecfb ++{for _adae :=0;_adae < _cdgb ._dace ._cbdec ;_adae ++{_deaad :=_cdgb ._dace .get (_adae ,_ecfb );
if _deaad ==nil {_edaf .Write ([]byte ("\u0009"));}else {_deaad .writeCellText (_edaf );};_edaf .Write ([]byte ("\u0020"));};if _ecfb < _cdgb ._dace ._fbaf -1{_edaf .Write ([]byte ("\u000a"));};};};type rulingKind int ;func _fddgc (_ebfg _gg .PdfRectangle )*ruling {return &ruling {_aaeb :_bdcc ,_dege :_ebfg .Llx ,_ebaa :_ebfg .Lly ,_bddc :_ebfg .Ury };
};func (_bfbg rulingList )merge ()*ruling {_defcd :=_bfbg [0]._dege ;_ccfbb :=_bfbg [0]._ebaa ;_gfgga :=_bfbg [0]._bddc ;for _ ,_gcfed :=range _bfbg [1:]{_defcd +=_gcfed ._dege ;if _gcfed ._ebaa < _ccfbb {_ccfbb =_gcfed ._ebaa ;};if _gcfed ._bddc > _gfgga {_gfgga =_gcfed ._bddc ;
};};_dcec :=&ruling {_aaeb :_bfbg [0]._aaeb ,_bgeee :_bfbg [0]._bgeee ,Color :_bfbg [0].Color ,_dege :_defcd /float64 (len (_bfbg )),_ebaa :_ccfbb ,_bddc :_gfgga };if _aac {_ceg .Log .Info ("\u006de\u0072g\u0065\u003a\u0020\u0025\u0032d\u0020\u0076e\u0063\u0073\u0020\u0025\u0073",len (_bfbg ),_dcec );
for _egca ,_acdc :=range _bfbg {_a .Printf ("\u0025\u0034\u0064\u003a\u0020\u0025\u0073\u000a",_egca ,_acdc );};};return _dcec ;};

// ExtractText processes and extracts all text data in content streams and returns as a string.
// It takes into account character encodings in the PDF file, which are decoded by
// CharcodeBytesToUnicode.
// Characters that can't be decoded are replaced with MissingCodeRune ('\ufffd' = �).
func (_fee *Extractor )ExtractText ()(string ,error ){_ed ,_ ,_ ,_gcgc :=_fee .ExtractTextWithStats ();return _ed ,_gcgc ;};func (_fbcg intSet )del (_eeaa int ){delete (_fbcg ,_eeaa )};func (_gdbe paraList )sortTopoOrder (){_gegdc :=_gdbe .topoOrder ();
_gdbe .reorder (_gegdc )};func (_gdgc rulingList )mergePrimary ()float64 {_cfcbb :=_gdgc [0]._dege ;for _ ,_dfdga :=range _gdgc [1:]{_cfcbb +=_dfdga ._dege ;};return _cfcbb /float64 (len (_gdgc ));};func (_efca *textObject )getFont (_fdfg string )(*_gg .PdfFont ,error ){if _efca ._bfc ._dd !=nil {_ggcg ,_cfa :=_efca .getFontDict (_fdfg );
if _cfa !=nil {_ceg .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0067\u0065\u0074\u0046\u006f\u006e\u0074:\u0020n\u0061m\u0065=\u0025\u0073\u002c\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0073",_fdfg ,_cfa .Error ());return nil ,_cfa ;};
_efca ._bfc ._ebd ++;_fbd ,_ebcef :=_efca ._bfc ._dd [_ggcg .String ()];if _ebcef {_fbd ._effb =_efca ._bfc ._ebd ;return _fbd ._gff ,nil ;};};_edf ,_ffbe :=_efca .getFontDict (_fdfg );if _ffbe !=nil {return nil ,_ffbe ;};_cbe ,_ffbe :=_efca .getFontDirect (_fdfg );
if _ffbe !=nil {return nil ,_ffbe ;};if _efca ._bfc ._dd !=nil {_abb :=fontEntry {_cbe ,_efca ._bfc ._ebd };if len (_efca ._bfc ._dd )>=_ded {var _fcca []string ;for _dfdee :=range _efca ._bfc ._dd {_fcca =append (_fcca ,_dfdee );};_ge .Slice (_fcca ,func (_adbd ,_bdebg int )bool {return _efca ._bfc ._dd [_fcca [_adbd ]]._effb < _efca ._bfc ._dd [_fcca [_bdebg ]]._effb ;
});delete (_efca ._bfc ._dd ,_fcca [0]);};_efca ._bfc ._dd [_edf .String ()]=_abb ;};return _cbe ,nil ;};func _agbc (_bcae _gg .PdfRectangle )*ruling {return &ruling {_aaeb :_gdad ,_dege :_bcae .Ury ,_ebaa :_bcae .Llx ,_bddc :_bcae .Urx };};func _dfdg (_gfabg ,_gacf ,_egeb float64 )rulingKind {if _gfabg >=_egeb &&_dcba (_gacf ,_gfabg ){return _gdad ;
};if _gacf >=_egeb &&_dcba (_gfabg ,_gacf ){return _bdcc ;};return _gaegd ;};func _egdg (_ddff *list ,_fefg *_gc .Builder ,_ggef *string ){_gbcf :=_ega (_ddff ,_ggef );_fefg .WriteString (_gbcf );for _ ,_cedc :=range _ddff ._eccg {_ccda :=*_ggef +"\u0020\u0020\u0020";
_egdg (_cedc ,_fefg ,&_ccda );};};func (_beef rulingList )asTiling ()gridTiling {if _deee {_ceg .Log .Info ("r\u0075\u006ci\u006e\u0067\u004c\u0069\u0073\u0074\u002e\u0061\u0073\u0054\u0069\u006c\u0069\u006e\u0067\u003a\u0020\u0076\u0065\u0063s\u003d\u0025\u0064\u0020\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d=\u003d\u003d\u003d\u003d\u003d\u002b\u002b\u002b\u0020\u003d\u003d\u003d\u003d=\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d=\u003d",len (_beef ));
};for _fdeg ,_addc :=range _beef [1:]{_acdab :=_beef [_fdeg ];if _acdab .alignsPrimary (_addc )&&_acdab .alignsSec (_addc ){_ceg .Log .Error ("a\u0073\u0054\u0069\u006c\u0069\u006e\u0067\u003a\u0020\u0044\u0075\u0070\u006c\u0069\u0063\u0061\u0074\u0065 \u0072\u0075\u006c\u0069\u006e\u0067\u0073\u002e\u000a\u0009v=\u0025\u0073\u000a\t\u0077=\u0025\u0073",_addc ,_acdab );
};};_beef .sortStrict ();_beef .log ("\u0073n\u0061\u0070\u0070\u0065\u0064");_adee ,_acfdf :=_beef .vertsHorzs ();_fcgac :=_adee .primaries ();_decae :=_acfdf .primaries ();_eaeb :=len (_fcgac )-1;_fcge :=len (_decae )-1;if _eaeb ==0||_fcge ==0{return gridTiling {};
};_gcgea :=_gg .PdfRectangle {Llx :_fcgac [0],Urx :_fcgac [_eaeb ],Lly :_decae [0],Ury :_decae [_fcge ]};if _deee {_ceg .Log .Info ("\u0072\u0075l\u0069\u006e\u0067\u004c\u0069\u0073\u0074\u002e\u0061\u0073\u0054\u0069\u006c\u0069\u006e\u0067\u003a\u0020\u0076\u0065\u0072\u0074s=\u0025\u0064",len (_adee ));
for _eeabg ,_fbaeb :=range _adee {_a .Printf ("\u0025\u0034\u0064\u003a\u0020\u0025\u0073\u000a",_eeabg ,_fbaeb );};_ceg .Log .Info ("\u0072\u0075l\u0069\u006e\u0067\u004c\u0069\u0073\u0074\u002e\u0061\u0073\u0054\u0069\u006c\u0069\u006e\u0067\u003a\u0020\u0068\u006f\u0072\u007as=\u0025\u0064",len (_acfdf ));
for _ffca ,_fbgf :=range _acfdf {_a .Printf ("\u0025\u0034\u0064\u003a\u0020\u0025\u0073\u000a",_ffca ,_fbgf );};_ceg .Log .Info ("\u0072\u0075\u006c\u0069\u006eg\u004c\u0069\u0073\u0074\u002e\u0061\u0073\u0054\u0069\u006c\u0069\u006e\u0067:\u0020\u0020\u0077\u0078\u0068\u003d\u0025\u0064\u0078\u0025\u0064\u000a\u0009\u006c\u006c\u0078\u003d\u0025\u002e\u0032\u0066\u000a\u0009\u006c\u006c\u0079\u003d\u0025\u002e\u0032f",_eaeb ,_fcge ,_fcgac ,_decae );
};_ffgef :=make ([]gridTile ,_eaeb *_fcge );for _fabab :=_fcge -1;_fabab >=0;_fabab --{_eaggc :=_decae [_fabab ];_ggdb :=_decae [_fabab +1];for _dbcae :=0;_dbcae < _eaeb ;_dbcae ++{_eaegc :=_fcgac [_dbcae ];_fabc :=_fcgac [_dbcae +1];_cdcaf :=_adee .findPrimSec (_eaegc ,_eaggc );
_afcd :=_adee .findPrimSec (_fabc ,_eaggc );_abba :=_acfdf .findPrimSec (_eaggc ,_eaegc );_becbc :=_acfdf .findPrimSec (_ggdb ,_eaegc );_fefaa :=_gg .PdfRectangle {Llx :_eaegc ,Urx :_fabc ,Lly :_eaggc ,Ury :_ggdb };_daecf :=_cbbd (_fefaa ,_cdcaf ,_afcd ,_abba ,_becbc );
_ffgef [_fabab *_eaeb +_dbcae ]=_daecf ;if _deee {_a .Printf ("\u0020\u0020\u0078\u003d\u0025\u0032\u0064\u0020\u0079\u003d\u0025\u0032\u0064\u003a\u0020%\u0073 \u0025\u0036\u002e\u0032\u0066\u0020\u0078\u0020\u0025\u0036\u002e\u0032\u0066\u000a",_dbcae ,_fabab ,_daecf .String (),_daecf .Width (),_daecf .Height ());
};};};if _deee {_ceg .Log .Info ("r\u0075\u006c\u0069\u006e\u0067\u004c\u0069\u0073\u0074.\u0061\u0073\u0054\u0069\u006c\u0069\u006eg:\u0020\u0063\u006f\u0061l\u0065\u0073\u0063\u0065\u0020\u0068\u006f\u0072\u0069zo\u006e\u0074a\u006c\u002e\u0020\u0025\u0036\u002e\u0032\u0066",_gcgea );
};_adga :=make ([]map[float64 ]gridTile ,_fcge );for _febb :=_fcge -1;_febb >=0;_febb --{if _deee {_a .Printf ("\u0020\u0020\u0079\u003d\u0025\u0032\u0064\u000a",_febb );};_adga [_febb ]=make (map[float64 ]gridTile ,_eaeb );for _gaceb :=0;_gaceb < _eaeb ;
_gaceb ++{_aefd :=_ffgef [_febb *_eaeb +_gaceb ];if _deee {_a .Printf ("\u0020\u0020\u0025\u0034\u0064\u003a\u0020\u0025\u0073\u000a",_gaceb ,_aefd );};if !_aefd ._gbfg {continue ;};_cadb :=_gaceb ;for _dabc :=_gaceb +1;!_aefd ._ddgb &&_dabc < _eaeb ;_dabc ++{_accfe :=_ffgef [_febb *_eaeb +_dabc ];
_aefd .Urx =_accfe .Urx ;_aefd ._dbaa =_aefd ._dbaa ||_accfe ._dbaa ;_aefd ._bfca =_aefd ._bfca ||_accfe ._bfca ;_aefd ._ddgb =_accfe ._ddgb ;if _deee {_a .Printf ("\u0020 \u0020%\u0034\u0064\u003a\u0020\u0025s\u0020\u2192 \u0025\u0073\u000a",_dabc ,_accfe ,_aefd );
};_cadb =_dabc ;};if _deee {_a .Printf (" \u0020 \u0025\u0032\u0064\u0020\u002d\u0020\u0025\u0032d\u0020\u2192\u0020\u0025s\n",_gaceb ,_cadb ,_aefd );};_gaceb =_cadb ;_adga [_febb ][_aefd .Llx ]=_aefd ;};};_dgcd :=make (map[float64 ]map[float64 ]gridTile ,_fcge );
_aeef :=make (map[float64 ]map[float64 ]struct{},_fcge );for _gdfeb :=_fcge -1;_gdfeb >=0;_gdfeb --{_dfgc :=_ffgef [_gdfeb *_eaeb ].Lly ;_dgcd [_dfgc ]=make (map[float64 ]gridTile ,_eaeb );_aeef [_dfgc ]=make (map[float64 ]struct{},_eaeb );};if _deee {_ceg .Log .Info ("\u0072u\u006c\u0069n\u0067\u004c\u0069s\u0074\u002e\u0061\u0073\u0054\u0069\u006ci\u006e\u0067\u003a\u0020\u0063\u006fa\u006c\u0065\u0073\u0063\u0065\u0020\u0076\u0065\u0072\u0074\u0069c\u0061\u006c\u002e\u0020\u0025\u0036\u002e\u0032\u0066",_gcgea );
};for _cdcf :=_fcge -1;_cdcf >=0;_cdcf --{_bdccg :=_ffgef [_cdcf *_eaeb ].Lly ;_cdaae :=_adga [_cdcf ];if _deee {_a .Printf ("\u0020\u0020\u0079\u003d\u0025\u0032\u0064\u000a",_cdcf );};for _ ,_fbeda :=range _abbee (_cdaae ){if _ ,_eafa :=_aeef [_bdccg ][_fbeda ];
_eafa {continue ;};_abff :=_cdaae [_fbeda ];if _deee {_a .Printf (" \u0020\u0020\u0020\u0020\u0076\u0030\u003d\u0025\u0073\u000a",_abff .String ());};for _cfca :=_cdcf -1;_cfca >=0;_cfca --{if _abff ._bfca {break ;};_dbddf :=_adga [_cfca ];_afbd ,_babga :=_dbddf [_fbeda ];
if !_babga {break ;};if _afbd .Urx !=_abff .Urx {break ;};_abff ._bfca =_afbd ._bfca ;_abff .Lly =_afbd .Lly ;if _deee {_a .Printf ("\u0020\u0020\u0020\u0020  \u0020\u0020\u0076\u003d\u0025\u0073\u0020\u0076\u0030\u003d\u0025\u0073\u000a",_afbd .String (),_abff .String ());
};_aeef [_afbd .Lly ][_afbd .Llx ]=struct{}{};};if _cdcf ==0{_abff ._bfca =true ;};if _abff .complete (){_dgcd [_bdccg ][_fbeda ]=_abff ;};};};_afcff :=gridTiling {PdfRectangle :_gcgea ,_aagfd :_fgadc (_dgcd ),_ddee :_fgefe (_dgcd ),_afee :_dgcd };_afcff .log ("\u0043r\u0065\u0061\u0074\u0065\u0064");
return _afcff ;};func (_gbccf rulingList )splitSec ()[]rulingList {_ge .Slice (_gbccf ,func (_dfed ,_bdefd int )bool {_cfeg ,_abce :=_gbccf [_dfed ],_gbccf [_bdefd ];if _cfeg ._ebaa !=_abce ._ebaa {return _cfeg ._ebaa < _abce ._ebaa ;};return _cfeg ._bddc < _abce ._bddc ;
});_fgdgd :=make (map[*ruling ]struct{},len (_gbccf ));_dgcg :=func (_cbcg *ruling )rulingList {_fdacb :=rulingList {_cbcg };_fgdgd [_cbcg ]=struct{}{};for _ ,_bffgd :=range _gbccf {if _ ,_ageda :=_fgdgd [_bffgd ];_ageda {continue ;};for _ ,_eacbe :=range _fdacb {if _bffgd .alignsSec (_eacbe ){_fdacb =append (_fdacb ,_bffgd );
_fgdgd [_bffgd ]=struct{}{};break ;};};};return _fdacb ;};_efed :=[]rulingList {_dgcg (_gbccf [0])};for _ ,_eccfe :=range _gbccf [1:]{if _ ,_cagf :=_fgdgd [_eccfe ];_cagf {continue ;};_efed =append (_efed ,_dgcg (_eccfe ));};return _efed ;};func (_dgfb *subpath )add (_eaad ..._gcg .Point ){_dgfb ._ggdcf =append (_dgfb ._ggdcf ,_eaad ...)};
const (_gdbf =false ;_fabbd =false ;_agfga =false ;_abdcd =false ;_aega =false ;_bgfa =false ;_ebbgc =false ;_cbed =false ;_gadb =false ;_dcg =_gadb &&true ;_fgbe =_dcg &&false ;_gbc =_gadb &&true ;_ccgc =false ;_cbgd =_ccgc &&false ;_aeaa =_ccgc &&true ;
_aabf =false ;_acdg =_aabf &&false ;_aac =_aabf &&false ;_deee =_aabf &&true ;_fddc =_aabf &&false ;_aacf =_aabf &&false ;);var (_cc =_c .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");_eb =_c .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");
);

// String returns a description of `w`.
func (_aaba *textWord )String ()string {return _a .Sprintf ("\u0025\u002e2\u0066\u0020\u0025\u0036\u002e\u0032\u0066\u0020\u0066\u006f\u006e\u0074\u0073\u0069\u007a\u0065\u003d\u0025\u002e\u0032\u0066\u0020\"%\u0073\u0022",_aaba ._bfgb ,_aaba .PdfRectangle ,_aaba ._agdb ,_aaba ._dbggb );
};func _geb (_bde []Font ,_ffg string )bool {for _ ,_ade :=range _bde {if _ade .FontName ==_ffg {return true ;};};return false ;};func _deggf (_cgcea _de .PdfObject ,_gdffb _e .Color )(_gce .Image ,error ){_gccc ,_bgdc :=_de .GetStream (_cgcea );if !_bgdc {return nil ,nil ;
};_dfaaac ,_ggfgd :=_gg .NewXObjectImageFromStream (_gccc );if _ggfgd !=nil {return nil ,_ggfgd ;};_ffed ,_ggfgd :=_dfaaac .ToImage ();if _ggfgd !=nil {return nil ,_ggfgd ;};return _bbaf (_ffed ,_gdffb ),nil ;};

// ExtractPageImages returns the image contents of the page extractor, including data
// and position, size information for each image.
// A set of options to control page image extraction can be passed in. The options
// parameter can be nil for the default options. By default, inline stencil masks
// are not extracted.
func (_fg *Extractor )ExtractPageImages (options *ImageExtractOptions )(*PageImages ,error ){_efe :=&imageExtractContext {_cda :options };_fgc :=_efe .extractContentStreamImages (_fg ._ccf ,_fg ._b );if _fgc !=nil {return nil ,_fgc ;};return &PageImages {Images :_efe ._gfg },nil ;
};func (_ebga rulingList )blocks (_dfgaf ,_ccbc *ruling )bool {if _dfgaf ._ebaa > _ccbc ._bddc ||_ccbc ._ebaa > _dfgaf ._bddc {return false ;};_fcebe :=_ce .Max (_dfgaf ._ebaa ,_ccbc ._ebaa );_dgfbe :=_ce .Min (_dfgaf ._bddc ,_ccbc ._bddc );if _dfgaf ._dege > _ccbc ._dege {_dfgaf ,_ccbc =_ccbc ,_dfgaf ;
};for _ ,_dcfc :=range _ebga {if _dfgaf ._dege <=_dcfc ._dege +_deeb &&_dcfc ._dege <=_ccbc ._dege +_deeb &&_dcfc ._ebaa <=_dgfbe &&_fcebe <=_dcfc ._bddc {return true ;};};return false ;};func _aaaf (_edga int ,_eaccg map[int ][]float64 )([]int ,int ){_accea :=make ([]int ,_edga );
_gegae :=0;for _acgbe :=0;_acgbe < _edga ;_acgbe ++{_accea [_acgbe ]=_gegae ;_gegae +=len (_eaccg [_acgbe ])+1;};return _accea ,_gegae ;};func _gcce (_eggef ,_efggd ,_edaeg ,_abded *textPara )*textTable {_ddgba :=&textTable {_cbdec :2,_fbaf :2,_aebfe :make (map[uint64 ]*textPara ,4)};
_ddgba .put (0,0,_eggef );_ddgba .put (1,0,_efggd );_ddgba .put (0,1,_edaeg );_ddgba .put (1,1,_abded );return _ddgba ;};func (_gagf *PageText )computeViews (){_eeb :=_gagf .getParagraphs ();_ecc :=new (_fa .Buffer );_eeb .writeText (_ecc );_gagf ._fccf =_ecc .String ();
_gagf ._cggg =_eeb .toTextMarks ();_gagf ._edd =_eeb .tables ();if _ccgc {_ceg .Log .Info ("\u0063\u006f\u006dpu\u0074\u0065\u0056\u0069\u0065\u0077\u0073\u003a\u0020\u0074\u0061\u0062\u006c\u0065\u0073\u003d\u0025\u0064",len (_gagf ._edd ));};};func _ggad (_ecdf []*textLine )map[float64 ][]*textLine {_ge .Slice (_ecdf ,func (_aagf ,_gegdg int )bool {return _ecdf [_aagf ]._gbfa < _ecdf [_gegdg ]._gbfa });
_eddg :=map[float64 ][]*textLine {};for _ ,_fdbgb :=range _ecdf {_afdg :=_edgc (_fdbgb );_afdg =_ce .Round (_afdg );_eddg [_afdg ]=append (_eddg [_afdg ],_fdbgb );};return _eddg ;};func _bccf (_agbgc ,_abbc *textPara )bool {if _agbgc ._dgac ||_abbc ._dgac {return true ;
};return _fggff (_agbgc .depth ()-_abbc .depth ());};type stateStack []*textState ;func _egcf (_efg ,_gabg bounded )float64 {_cbaa :=_bad (_efg ,_gabg );if !_fggff (_cbaa ){return _cbaa ;};return _dfbb (_efg ,_gabg );};func _dfaae (_bgaee ,_bdff _gcg .Point )bool {return _bgaee .X ==_bdff .X &&_bgaee .Y ==_bdff .Y };
func (_ceb *imageExtractContext )processOperand (_aad *_cdb .ContentStreamOperation ,_gcc _cdb .GraphicsState ,_bff *_gg .PdfPageResources )error {if _aad .Operand =="\u0042\u0049"&&len (_aad .Params )==1{_adb ,_cce :=_aad .Params [0].(*_cdb .ContentStreamInlineImage );
if !_cce {return nil ;};if _cgd ,_ca :=_de .GetBoolVal (_adb .ImageMask );_ca {if _cgd &&!_ceb ._cda .IncludeInlineStencilMasks {return nil ;};};return _ceb .extractInlineImage (_adb ,_gcc ,_bff );}else if _aad .Operand =="\u0044\u006f"&&len (_aad .Params )==1{_bbg ,_fce :=_de .GetName (_aad .Params [0]);
if !_fce {_ceg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0079\u0070\u0065");return _cc ;};_ ,_bbd :=_bff .GetXObjectByName (*_bbg );switch _bbd {case _gg .XObjectTypeImage :return _ceb .extractXObjectImage (_bbg ,_gcc ,_bff );case _gg .XObjectTypeForm :return _ceb .extractFormImages (_bbg ,_gcc ,_bff );
};};return nil ;};func _fdcd (_geda *Extractor ,_aadc *_gg .PdfPageResources ,_gdbb _cdb .GraphicsState ,_fbae *textState ,_ggdc *stateStack )*textObject {return &textObject {_bfc :_geda ,_aeg :_aadc ,_adbg :_gdbb ,_afd :_ggdc ,_cdg :_fbae ,_fafb :_gcg .IdentityMatrix (),_becd :_gcg .IdentityMatrix ()};
};func _adaf (_cece _gg .PdfRectangle ,_edbe bounded )float64 {return _cece .Ury -_edbe .bbox ().Lly };func (_ddefe rulingList )sort (){_ge .Slice (_ddefe ,_ddefe .comp )};func _bbaf (_ecbag *_gg .Image ,_efgdg _e .Color )_gce .Image {_acaa ,_bcbe :=int (_ecbag .Width ),int (_ecbag .Height );
_fefgg :=_gce .NewRGBA (_gce .Rect (0,0,_acaa ,_bcbe ));for _degde :=0;_degde < _bcbe ;_degde ++{for _faggc :=0;_faggc < _acaa ;_faggc ++{_fdec ,_bccg :=_ecbag .ColorAt (_faggc ,_degde );if _bccg !=nil {_ceg .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0072\u0065\u0074\u0072\u0069\u0065v\u0065 \u0069\u006d\u0061\u0067\u0065\u0020m\u0061\u0073\u006b\u0020\u0076\u0061\u006cu\u0065\u0020\u0061\u0074\u0020\u0028\u0025\u0064\u002c\u0020\u0025\u0064\u0029\u002e\u0020\u004f\u0075\u0074\u0070\u0075\u0074\u0020\u006da\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063t\u002e",_faggc ,_degde );
continue ;};_dbgeb ,_cbae ,_ageff ,_ :=_fdec .RGBA ();var _afgdg _e .Color ;if _dbgeb +_cbae +_ageff ==0{_afgdg =_e .Transparent ;}else {_afgdg =_efgdg ;};_fefgg .Set (_faggc ,_degde ,_afgdg );};};return _fefgg ;};func (_ebebe *subpath )isQuadrilateral ()bool {if len (_ebebe ._ggdcf )< 4||len (_ebebe ._ggdcf )> 5{return false ;
};if len (_ebebe ._ggdcf )==5{_eggge :=_ebebe ._ggdcf [0];_gbdb :=_ebebe ._ggdcf [4];if _eggge .X !=_gbdb .X ||_eggge .Y !=_gbdb .Y {return false ;};};return true ;};type textWord struct{_gg .PdfRectangle ;_bfgb float64 ;_dbggb string ;_cgde []*textMark ;
_agdb float64 ;_fggfg bool ;};func _ggdee (_dgcca []compositeCell )[]float64 {var _fgfg []*textLine ;_dgeca :=0;for _ ,_fcccd :=range _dgcca {_dgeca +=len (_fcccd .paraList );_fgfg =append (_fgfg ,_fcccd .lines ()...);};_ge .Slice (_fgfg ,func (_abbab ,_facfa int )bool {_efaee ,_gacee :=_fgfg [_abbab ],_fgfg [_facfa ];
_cgfba ,_gfbg :=_efaee ._gbfa ,_gacee ._gbfa ;if !_fggff (_cgfba -_gfbg ){return _cgfba < _gfbg ;};return _efaee .Llx < _gacee .Llx ;});if _ccgc {_a .Printf ("\u0020\u0020\u0020 r\u006f\u0077\u0042\u006f\u0072\u0064\u0065\u0072\u0073:\u0020%\u0064 \u0070a\u0072\u0061\u0073\u0020\u0025\u0064\u0020\u006c\u0069\u006e\u0065\u0073\u000a",_dgeca ,len (_fgfg ));
for _gcab ,_gebg :=range _fgfg {_a .Printf ("\u0025\u0038\u0064\u003a\u0020\u0025\u0073\u000a",_gcab ,_gebg );};};var _adabf []float64 ;_bfcb :=_fgfg [0];var _edaa [][]*textLine ;_dgdg :=[]*textLine {_bfcb };for _deadd ,_afdfg :=range _fgfg [1:]{if _afdfg .Ury < _bfcb .Lly {_dged :=0.5*(_afdfg .Ury +_bfcb .Lly );
if _ccgc {_a .Printf ("\u0025\u0034\u0064\u003a\u0020\u0025\u0036\u002e\u0032\u0066\u0020\u003c\u0020\u0025\u0036.\u0032f\u0020\u0062\u006f\u0072\u0064\u0065\u0072\u003d\u0025\u0036\u002e\u0032\u0066\u000a"+"\u0009\u0020\u0071\u003d\u0025\u0073\u000a\u0009\u0020p\u003d\u0025\u0073\u000a",_deadd ,_afdfg .Ury ,_bfcb .Lly ,_dged ,_bfcb ,_afdfg );
};_adabf =append (_adabf ,_dged );_edaa =append (_edaa ,_dgdg );_dgdg =nil ;};_dgdg =append (_dgdg ,_afdfg );if _afdfg .Lly < _bfcb .Lly {_bfcb =_afdfg ;};};if len (_dgdg )> 0{_edaa =append (_edaa ,_dgdg );};if _ccgc {_a .Printf (" \u0020\u0020\u0020\u0020\u0020\u0020 \u0072\u006f\u0077\u0043\u006f\u0072\u0072\u0069\u0064o\u0072\u0073\u003d%\u0036.\u0032\u0066\u000a",_adabf );
};if _ccgc {_ceg .Log .Info ("\u0072\u006f\u0077\u003d\u0025\u0064",len (_dgcca ));for _dgbgf ,_fdfe :=range _dgcca {_a .Printf ("\u0025\u0034\u0064\u003a\u0020\u0025\u0073\u000a",_dgbgf ,_fdfe );};_ceg .Log .Info ("\u0067r\u006f\u0075\u0070\u0073\u003d\u0025d",len (_edaa ));
for _ecbc ,_egebe :=range _edaa {_a .Printf ("\u0025\u0034\u0064\u003a\u0020\u0025\u0064\u000a",_ecbc ,len (_egebe ));for _ggbce ,_edab :=range _egebe {_a .Printf ("\u0025\u0038\u0064\u003a\u0020\u0025\u0073\u000a",_ggbce ,_edab );};};};_bgab :=true ;for _cdgff ,_cdffc :=range _edaa {_gbgga :=true ;
for _cgfe ,_adgb :=range _dgcca {if _ccgc {_a .Printf ("\u0020\u0020\u0020\u007e\u007e\u007e\u0067\u0072\u006f\u0075\u0070\u0020\u0025\u0064\u0020\u006f\u0066\u0020\u0025\u0064\u0020\u0063\u0065\u006cl\u0020\u0025\u0064\u0020\u006ff\u0020\u0025d\u0020\u0025\u0073\u000a",_cdgff ,len (_edaa ),_cgfe ,len (_dgcca ),_adgb );
};if !_adgb .hasLines (_cdffc ){if _ccgc {_a .Printf ("\u0020\u0020\u0020\u0021\u0021\u0021\u0067\u0072\u006f\u0075\u0070\u0020\u0025d\u0020\u006f\u0066\u0020\u0025\u0064 \u0063\u0065\u006c\u006c\u0020\u0025\u0064\u0020\u006f\u0066\u0020\u0025\u0064 \u004f\u0055\u0054\u000a",_cdgff ,len (_edaa ),_cgfe ,len (_dgcca ));
};_gbgga =false ;break ;};};if !_gbgga {_bgab =false ;break ;};};if !_bgab {if _ccgc {_ceg .Log .Info ("\u0072\u006f\u0077\u0020\u0063o\u0072\u0072\u0069\u0064\u006f\u0072\u0073\u0020\u0064\u006f\u006e\u0027\u0074 \u0073\u0070\u0061\u006e\u0020\u0061\u006c\u006c\u0020\u0063\u0065\u006c\u006c\u0073\u0020\u0069\u006e\u0020\u0072\u006f\u0077\u002e\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006eg");
};_adabf =nil ;};if _ccgc &&_adabf !=nil {_a .Printf ("\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u002a\u002a*\u0072\u006f\u0077\u0043\u006f\u0072\u0072i\u0064\u006f\u0072\u0073\u003d\u0025\u0036\u002e\u0032\u0066\u000a",_adabf );};return _adabf ;
};var _bfead =map[markKind ]string {_gbdgb :"\u0073\u0074\u0072\u006f\u006b\u0065",_ffee :"\u0066\u0069\u006c\u006c",_face :"\u0061u\u0067\u006d\u0065\u006e\u0074"};func (_afeg *ruling )intersects (_efcf *ruling )bool {_ceefg :=(_afeg ._aaeb ==_bdcc &&_efcf ._aaeb ==_gdad )||(_efcf ._aaeb ==_bdcc &&_afeg ._aaeb ==_gdad );
_dcfb :=func (_dagdc ,_ccced *ruling )bool {return _dagdc ._ebaa -_begbg <=_ccced ._dege &&_ccced ._dege <=_dagdc ._bddc +_begbg ;};_ddab :=_dcfb (_afeg ,_efcf );_acde :=_dcfb (_efcf ,_afeg );if _aabf {_a .Printf ("\u0020\u0020\u0020\u0020\u0069\u006e\u0074\u0065\u0072\u0073\u0065\u0063\u0074\u0073\u003a\u0020\u0020\u006fr\u0074\u0068\u006f\u0067\u006f\u006e\u0061l\u003d\u0025\u0074\u0020\u006f\u0031\u003d\u0025\u0074\u0020\u006f2\u003d\u0025\u0074\u0020\u2192\u0020\u0025\u0074\u000a"+"\u0020\u0020\u0020 \u0020\u0020\u0020\u0076\u003d\u0025\u0073\u000a"+" \u0020\u0020\u0020\u0020\u0020\u0077\u003d\u0025\u0073\u000a",_ceefg ,_ddab ,_acde ,_ceefg &&_ddab &&_acde ,_afeg ,_efcf );
};return _ceefg &&_ddab &&_acde ;};func (_ebdc paraList )extractTables (_cgfdc []gridTiling )paraList {if _ccgc {_ceg .Log .Debug ("\u0065\u0078\u0074r\u0061\u0063\u0074\u0054\u0061\u0062\u006c\u0065\u0073\u003d\u0025\u0064\u0020\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u0078\u003d\u003d\u003d\u003d=\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d",len (_ebdc ));
};if len (_ebdc )< _dgb {return _ebdc ;};_aecd :=_ebdc .findTables (_cgfdc );if _ccgc {_ceg .Log .Info ("c\u006f\u006d\u0062\u0069\u006e\u0065d\u0020\u0074\u0061\u0062\u006c\u0065s\u0020\u0025\u0064\u0020\u003d\u003d\u003d=\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d=\u003d",len (_aecd ));
for _cgdc ,_dgeag :=range _aecd {_dgeag .log (_a .Sprintf ("c\u006f\u006d\u0062\u0069\u006e\u0065\u0064\u0020\u0025\u0064",_cgdc ));};};return _ebdc .applyTables (_aecd );};func _ddagg (_ccgafg ,_ggbb float64 )bool {return _ce .Abs (_ccgafg -_ggbb )<=_begbg };
func (_cffbf *textTable )logComposite (_ggee string ){if !_ccgc {return ;};_ceg .Log .Info ("\u007e~\u007eP\u0061\u0072\u0061\u0020\u0025d\u0020\u0078 \u0025\u0064\u0020\u0025\u0073",_cffbf ._cbdec ,_cffbf ._fbaf ,_ggee );_a .Printf ("\u0025\u0035\u0073 \u007c","");
for _ffgea :=0;_ffgea < _cffbf ._cbdec ;_ffgea ++{_a .Printf ("\u0025\u0033\u0064 \u007c",_ffgea );};_a .Println ("");_a .Printf ("\u0025\u0035\u0073 \u002b","");for _afdb :=0;_afdb < _cffbf ._cbdec ;_afdb ++{_a .Printf ("\u0025\u0033\u0073 \u002b","\u002d\u002d\u002d");
};_a .Println ("");for _beeff :=0;_beeff < _cffbf ._fbaf ;_beeff ++{_a .Printf ("\u0025\u0035\u0064 \u007c",_beeff );for _bedg :=0;_bedg < _cffbf ._cbdec ;_bedg ++{_dbdb ,_ :=_cffbf ._bagdf [_gdaac (_bedg ,_beeff )].parasBBox ();_a .Printf ("\u0025\u0033\u0064 \u007c",len (_dbdb ));
};_a .Println ("");};_ceg .Log .Info ("\u007e~\u007eT\u0065\u0078\u0074\u0020\u0025d\u0020\u0078 \u0025\u0064\u0020\u0025\u0073",_cffbf ._cbdec ,_cffbf ._fbaf ,_ggee );_a .Printf ("\u0025\u0035\u0073 \u007c","");for _dfbbd :=0;_dfbbd < _cffbf ._cbdec ;
_dfbbd ++{_a .Printf ("\u0025\u0031\u0032\u0064\u0020\u007c",_dfbbd );};_a .Println ("");_a .Printf ("\u0025\u0035\u0073 \u002b","");for _edfdg :=0;_edfdg < _cffbf ._cbdec ;_edfdg ++{_a .Print ("\u002d\u002d\u002d\u002d\u002d\u002d\u002d\u002d\u002d-\u002d\u002d\u002d\u002b");
};_a .Println ("");for _edcb :=0;_edcb < _cffbf ._fbaf ;_edcb ++{_a .Printf ("\u0025\u0035\u0064 \u007c",_edcb );for _efde :=0;_efde < _cffbf ._cbdec ;_efde ++{_cfcg ,_ :=_cffbf ._bagdf [_gdaac (_efde ,_edcb )].parasBBox ();_cacgc :="";_dcbf :=_cfcg .merge ();
if _dcbf !=nil {_cacgc =_dcbf .text ();};_cacgc =_a .Sprintf ("\u0025\u0071",_aefb (_cacgc ,12));_cacgc =_cacgc [1:len (_cacgc )-1];_a .Printf ("\u0025\u0031\u0032\u0073\u0020\u007c",_cacgc );};_a .Println ("");};};

// ExtractFonts returns all font information from the page extractor, including
// font name, font type, the raw data of the embedded font file (if embedded), font descriptor and more.
//
// The argument `previousPageFonts` is used when trying to build a complete font catalog for multiple pages or the entire document.
// The entries from `previousPageFonts` are added to the returned result unless already included in the page, i.e. no duplicate entries.
//
// NOTE: If previousPageFonts is nil, all fonts from the page will be returned. Use it when building up a full list of fonts for a document or page range.
func (_ae *Extractor )ExtractFonts (previousPageFonts *PageFonts )(*PageFonts ,error ){_eec :=PageFonts {};_fag :=_eec .extractPageResourcesToFont (_ae ._b );if _fag !=nil {return nil ,_fag ;};if previousPageFonts !=nil {for _ ,_gcd :=range previousPageFonts .Fonts {if !_geb (_eec .Fonts ,_gcd .FontName ){_eec .Fonts =append (_eec .Fonts ,_gcd );
};};};return &PageFonts {Fonts :_eec .Fonts },nil ;};func (_gaga *wordBag )sort (){for _ ,_ggbcf :=range _gaga ._agbg {_ge .Slice (_ggbcf ,func (_geba ,_fegg int )bool {return _dfbb (_ggbcf [_geba ],_ggbcf [_fegg ])< 0});};};func _fggff (_eedg float64 )bool {return _ce .Abs (_eedg )< _eda };
func (_gdba TextTable )getCellInfo (_gdcc TextMark )[][]int {for _gfcd ,_gccf :=range _gdba .Cells {for _gbf ,_cefg :=range _gccf {_dgf :=&_cefg .Marks ;if _dgf .exists (_gdcc ){return [][]int {{_gfcd },{_gbf }};};};};return nil ;};func _fgab (_egadd []TextMark ,_edca *TextTable )[]TextMark {var _babg []TextMark ;
for _ ,_acccc :=range _egadd {_acccc ._bgf =true ;_acccc ._accc =_edca ;_babg =append (_babg ,_acccc );};return _babg ;};type compositeCell struct{_gg .PdfRectangle ;paraList ;};

// String returns a string describing `ma`.
func (_gafcb TextMarkArray )String ()string {_baab :=len (_gafcb ._fgbb );if _baab ==0{return "\u0045\u004d\u0050T\u0059";};_efce :=_gafcb ._fgbb [0];_defd :=_gafcb ._fgbb [_baab -1];return _a .Sprintf ("\u007b\u0054\u0045\u0058\u0054\u004d\u0041\u0052K\u0041\u0052\u0052AY\u003a\u0020\u0025\u0064\u0020\u0065l\u0065\u006d\u0065\u006e\u0074\u0073\u000a\u0009\u0066\u0069\u0072\u0073\u0074\u003d\u0025s\u000a\u0009\u0020\u006c\u0061\u0073\u0074\u003d%\u0073\u007d",_baab ,_efce ,_defd );
};func _ccfcc (_efadf ,_ebfab _gce .Image )_gce .Image {_eegbf ,_dgeg :=_ebfab .Bounds ().Size (),_efadf .Bounds ().Size ();_dfee ,_dfec :=_eegbf .X ,_eegbf .Y ;if _dgeg .X > _dfee {_dfee =_dgeg .X ;};if _dgeg .Y > _dfec {_dfec =_dgeg .Y ;};_deafg :=_gce .Rect (0,0,_dfee ,_dfec );
if _eegbf .X !=_dfee ||_eegbf .Y !=_dfec {_aabaf :=_gce .NewRGBA (_deafg );_ac .BiLinear .Scale (_aabaf ,_deafg ,_efadf ,_ebfab .Bounds (),_ac .Over ,nil );_ebfab =_aabaf ;};if _dgeg .X !=_dfee ||_dgeg .Y !=_dfec {_beaad :=_gce .NewRGBA (_deafg );_ac .BiLinear .Scale (_beaad ,_deafg ,_efadf ,_efadf .Bounds (),_ac .Over ,nil );
_efadf =_beaad ;};_fbgb :=_gce .NewRGBA (_deafg );_ac .DrawMask (_fbgb ,_deafg ,_efadf ,_gce .Point {},_ebfab ,_gce .Point {},_ac .Over );return _fbgb ;};func (_aaae *wordBag )depthRange (_ddag ,_fdda int )[]int {var _bbe []int ;for _fabg :=range _aaae ._agbg {if _ddag <=_fabg &&_fabg <=_fdda {_bbe =append (_bbe ,_fabg );
};};if len (_bbe )==0{return nil ;};_ge .Ints (_bbe );return _bbe ;};func _abbg (_bbedg []*textMark ,_feeae _gg .PdfRectangle )[]*textWord {var _aecag []*textWord ;var _aggg *textWord ;if _fabbd {_ceg .Log .Info ("\u006d\u0061\u006beT\u0065\u0078\u0074\u0057\u006f\u0072\u0064\u0073\u003a\u0020\u0025\u0064\u0020\u006d\u0061\u0072\u006b\u0073",len (_bbedg ));
};_fdega :=func (){if _aggg !=nil {_abcb :=_aggg .computeText ();if !_dgecc (_abcb ){_aggg ._dbggb =_abcb ;_aecag =append (_aecag ,_aggg );if _fabbd {_ceg .Log .Info ("\u0061\u0064\u0064Ne\u0077\u0057\u006f\u0072\u0064\u003a\u0020\u0025\u0064\u003a\u0020\u0077\u006f\u0072\u0064\u003d\u0025\u0073",len (_aecag )-1,_aggg .String ());
for _dffc ,_baggf :=range _aggg ._cgde {_a .Printf ("\u0025\u0034\u0064\u003a\u0020\u0025\u0073\u000a",_dffc ,_baggf .String ());};};};_aggg =nil ;};};for _ ,_dcbdf :=range _bbedg {if _eaded &&_aggg !=nil &&len (_aggg ._cgde )> 0{_gdada :=_aggg ._cgde [len (_aggg ._cgde )-1];
_ebcf ,_debad :=_dagb (_dcbdf ._dfda );_cfbgg ,_faaec :=_dagb (_gdada ._dfda );if _debad &&!_faaec &&_gdada .inDiacriticArea (_dcbdf ){_aggg .addDiacritic (_ebcf );continue ;};if _faaec &&!_debad &&_dcbdf .inDiacriticArea (_gdada ){_aggg ._cgde =_aggg ._cgde [:len (_aggg ._cgde )-1];
_aggg .appendMark (_dcbdf ,_feeae );_aggg .addDiacritic (_cfbgg );continue ;};};_daag :=_dgecc (_dcbdf ._dfda );if _daag {_fdega ();continue ;};if _aggg ==nil &&!_daag {_aggg =_ebcgf ([]*textMark {_dcbdf },_feeae );continue ;};_dafg :=_aggg ._agdb ;_adfa :=_ce .Abs (_adaf (_feeae ,_dcbdf )-_aggg ._bfgb )/_dafg ;
_ebcdc :=_cgdf (_dcbdf ,_aggg )/_dafg ;if _ebcdc >=_fdbg ||!(-_egda <=_ebcdc &&_adfa <=_ecdb ){_fdega ();_aggg =_ebcgf ([]*textMark {_dcbdf },_feeae );continue ;};_aggg .appendMark (_dcbdf ,_feeae );};_fdega ();return _aecag ;};type structTreeRoot struct{_feec []structElement ;
_effbc string ;};func _eegf (_eaag _gcg .Point )*subpath {return &subpath {_ggdcf :[]_gcg .Point {_eaag }}};func (_ebfa lineRuling )asRuling ()(*ruling ,bool ){_dcbde :=ruling {_aaeb :_ebfa ._agdde ,Color :_ebfa .Color ,_bgeee :_gbdgb };switch _ebfa ._agdde {case _bdcc :_dcbde ._dege =_ebfa .xMean ();
_dcbde ._ebaa =_ce .Min (_ebfa ._geca .Y ,_ebfa ._aedf .Y );_dcbde ._bddc =_ce .Max (_ebfa ._geca .Y ,_ebfa ._aedf .Y );case _gdad :_dcbde ._dege =_ebfa .yMean ();_dcbde ._ebaa =_ce .Min (_ebfa ._geca .X ,_ebfa ._aedf .X );_dcbde ._bddc =_ce .Max (_ebfa ._geca .X ,_ebfa ._aedf .X );
default:_ceg .Log .Error ("\u0062\u0061\u0064\u0020pr\u0069\u006d\u0061\u0072\u0079\u0020\u006b\u0069\u006e\u0064\u003d\u0025\u0064",_ebfa ._agdde );return nil ,false ;};return &_dcbde ,true ;};func (_ggefa *textPara )toTextMarks (_cadc *int )[]TextMark {if _ggefa ._dace ==nil {return _ggefa .toCellTextMarks (_cadc );
};var _ddfb []TextMark ;for _babe :=0;_babe < _ggefa ._dace ._fbaf ;_babe ++{for _eagb :=0;_eagb < _ggefa ._dace ._cbdec ;_eagb ++{_cgagfe :=_ggefa ._dace .get (_eagb ,_babe );if _cgagfe ==nil {_ddfb =_bedd (_ddfb ,_cadc ,"\u0009");}else {_bgefg :=_cgagfe .toCellTextMarks (_cadc );
_ddfb =append (_ddfb ,_bgefg ...);};_ddfb =_bedd (_ddfb ,_cadc ,"\u0020");};if _babe < _ggefa ._dace ._fbaf -1{_ddfb =_bedd (_ddfb ,_cadc ,"\u000a");};};_dgceda :=_ggefa ._dace ;if _dgceda .isExportable (){_ffgad :=_dgceda .toTextTable ();_ddfb =_fgab (_ddfb ,&_ffgad );
};return _ddfb ;};func (_bbdg *textObject )setTextRenderMode (_cgbf int ){if _bbdg ==nil {return ;};_bbdg ._cdg ._ebcg =RenderMode (_cgbf );};

// PageFonts represents extracted fonts on a PDF page.
type PageFonts struct{Fonts []Font ;};const _abag =1.0/1000.0;func (_gbgaa *textTable )reduceTiling (_dadfa gridTiling ,_fcfge float64 )*textTable {_ddfc :=make ([]int ,0,_gbgaa ._fbaf );_bdacb :=make ([]int ,0,_gbgaa ._cbdec );_eeag :=_dadfa ._aagfd ;
_baeg :=_dadfa ._ddee ;for _gfee :=0;_gfee < _gbgaa ._fbaf ;_gfee ++{_begc :=_gfee > 0&&_ce .Abs (_baeg [_gfee -1]-_baeg [_gfee ])< _fcfge &&_gbgaa .emptyCompositeRow (_gfee );if !_begc {_ddfc =append (_ddfc ,_gfee );};};for _gadg :=0;_gadg < _gbgaa ._cbdec ;
_gadg ++{_ggfba :=_gadg < _gbgaa ._cbdec -1&&_ce .Abs (_eeag [_gadg +1]-_eeag [_gadg ])< _fcfge &&_gbgaa .emptyCompositeColumn (_gadg );if !_ggfba {_bdacb =append (_bdacb ,_gadg );};};if len (_ddfc )==_gbgaa ._fbaf &&len (_bdacb )==_gbgaa ._cbdec {return _gbgaa ;
};_cdcac :=textTable {_fege :_gbgaa ._fege ,_cbdec :len (_bdacb ),_fbaf :len (_ddfc ),_bagdf :make (map[uint64 ]compositeCell ,len (_bdacb )*len (_ddfc ))};if _ccgc {_ceg .Log .Info ("\u0072\u0065\u0064\u0075c\u0065\u0054\u0069\u006c\u0069\u006e\u0067\u003a\u0020\u0025d\u0078%\u0064\u0020\u002d\u003e\u0020\u0025\u0064x\u0025\u0064",_gbgaa ._cbdec ,_gbgaa ._fbaf ,len (_bdacb ),len (_ddfc ));
_ceg .Log .Info ("\u0072\u0065d\u0075\u0063\u0065d\u0043\u006f\u006c\u0073\u003a\u0020\u0025\u002b\u0076",_bdacb );_ceg .Log .Info ("\u0072\u0065d\u0075\u0063\u0065d\u0052\u006f\u0077\u0073\u003a\u0020\u0025\u002b\u0076",_ddfc );};for _caab ,_cdfc :=range _ddfc {for _eece ,_fecbc :=range _bdacb {_bfbe ,_ecbgb :=_gbgaa .getComposite (_fecbc ,_cdfc );
if len (_bfbe )==0{continue ;};if _ccgc {_a .Printf ("\u0020 \u0025\u0032\u0064\u002c \u0025\u0032\u0064\u0020\u0028%\u0032d\u002c \u0025\u0032\u0064\u0029\u0020\u0025\u0071\n",_eece ,_caab ,_fecbc ,_cdfc ,_aefb (_bfbe .merge ().text (),50));};_cdcac .putComposite (_eece ,_caab ,_bfbe ,_ecbgb );
};};return &_cdcac ;};func (_cca *stateStack )empty ()bool {return len (*_cca )==0};func (_gfc *imageExtractContext )extractContentStreamImages (_abd string ,_fga *_gg .PdfPageResources )error {_ebf :=_cdb .NewContentStreamParser (_abd );_bcb ,_eed :=_ebf .Parse ();
if _eed !=nil {return _eed ;};if _gfc ._bef ==nil {_gfc ._bef =map[*_de .PdfObjectStream ]*cachedImage {};};if _gfc ._cda ==nil {_gfc ._cda =&ImageExtractOptions {};};_abda :=_cdb .NewContentStreamProcessor (*_bcb );_abda .AddHandler (_cdb .HandlerConditionEnumAllOperands ,"",_gfc .processOperand );
return _abda .Process (_fga );};func _ecee (_edbf bounded )float64 {return -_edbf .bbox ().Lly };

// ImageExtractOptions contains options for controlling image extraction from
// PDF pages.
type ImageExtractOptions struct{IncludeInlineStencilMasks bool ;};func (_befg *textMark )inDiacriticArea (_cdfe *textMark )bool {_gccd :=_befg .Llx -_cdfe .Llx ;_fcag :=_befg .Urx -_cdfe .Urx ;_fgae :=_befg .Lly -_cdfe .Lly ;return _ce .Abs (_gccd +_fcag )< _befg .Width ()*_ebdag &&_ce .Abs (_fgae )< _befg .Height ()*_ebdag ;
};func (_deab *ruling )alignsPrimary (_ecdg *ruling )bool {return _deab ._aaeb ==_ecdg ._aaeb &&_ce .Abs (_deab ._dege -_ecdg ._dege )< _deeb *0.5;};

// PageText represents the layout of text on a device page.
type PageText struct{_cge []*textMark ;_fccf string ;_cggg []TextMark ;_edd []TextTable ;_gba _gg .PdfRectangle ;_cgce []pathSection ;_gegda []pathSection ;_eaef *_de .PdfObject ;_debd _de .PdfObject ;_fbfd *_cdb .ContentStreamOperations ;_dfg PageTextOptions ;
};type structElement struct{_gefg string ;_dada []structElement ;_abebd int64 ;_fcbb _de .PdfObject ;};func (_bcc *textPara )getListLines ()[]*textLine {var _dgceb []*textLine ;_cgfa :=_abfa (_bcc ._eccfb );for _ ,_fda :=range _bcc ._eccfb {_gaea :=_fda ._cffb [0]._dbggb [0];
if _ccgf (_gaea ){_dgceb =append (_dgceb ,_fda );};};_dgceb =append (_dgceb ,_cgfa ...);return _dgceb ;};func (_abae *shapesState )moveTo (_eagd ,_fced float64 ){_abae ._aee =true ;_abae ._ccgg =_abae .devicePoint (_eagd ,_fced );if _aega {_ceg .Log .Info ("\u006d\u006fv\u0065\u0054\u006f\u003a\u0020\u0025\u002e\u0032\u0066\u002c\u0025\u002e\u0032\u0066\u0020\u0064\u0065\u0076\u0069\u0063\u0065\u003d%.\u0032\u0066",_eagd ,_fced ,_abae ._ccgg );
};};func (_ggeg *textTable )getComposite (_dbbf ,_bgefcf int )(paraList ,_gg .PdfRectangle ){_cabc ,_aabg :=_ggeg ._bagdf [_gdaac (_dbbf ,_bgefcf )];if _ccgc {_a .Printf ("\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0067\u0065\u0074\u0043\u006f\u006d\u0070o\u0073i\u0074\u0065\u0028\u0025\u0064\u002c\u0025\u0064\u0029\u002d\u003e\u0025\u0073\u000a",_dbbf ,_bgefcf ,_cabc .String ());
};if !_aabg {return nil ,_gg .PdfRectangle {};};return _cabc .parasBBox ();};func (_caba rulingList )log (_fgcdc string ){if !_aabf {return ;};_ceg .Log .Info ("\u0023\u0023\u0023\u0020\u0025\u0031\u0030\u0073\u003a\u0020\u0076\u0065c\u0073\u003d\u0025\u0073",_fgcdc ,_caba .String ());
for _fcea ,_ceba :=range _caba {_a .Printf ("\u0025\u0034\u0064\u003a\u0020\u0025\u0073\u000a",_fcea ,_ceba .String ());};};func (_gebd *textObject )getFillColor ()_e .Color {return _abaad (_gebd ._adbg .ColorspaceNonStroking ,_gebd ._adbg .ColorNonStroking );
};

// PageImages represents extracted images on a PDF page with spatial information:
// display position and size.
type PageImages struct{Images []ImageMark ;};func (_gcgb *textPara )fontsize ()float64 {return _gcgb ._eccfb [0]._dbdc };func (_be *PageFonts )extractPageResourcesToFont (_cee *_gg .PdfPageResources )error {_aa ,_gd :=_de .GetDict (_cee .Font );if !_gd {return _c .New (_afa );
};for _ ,_gad :=range _aa .Keys (){var (_afb =true ;_dgc []byte ;_bdb string ;);_ec ,_ba :=_cee .GetFontByName (_gad );if !_ba {return _c .New (_ccd );};_ged ,_ag :=_gg .NewPdfFontFromPdfObject (_ec );if _ag !=nil {return _ag ;};_df :=_ged .FontDescriptor ();
_fcf :=_ged .FontDescriptor ().FontName .String ();_gf :=_ged .Subtype ();if _geb (_be .Fonts ,_fcf ){continue ;};if len (_ged .ToUnicode ())==0{_afb =false ;};if _df .FontFile !=nil {if _cba ,_bb :=_de .GetStream (_df .FontFile );_bb {_dgc ,_ag =_de .DecodeStream (_cba );
if _ag !=nil {return _ag ;};_bdb =_fcf +"\u002e\u0070\u0066\u0062";};}else if _df .FontFile2 !=nil {if _fd ,_dc :=_de .GetStream (_df .FontFile2 );_dc {_dgc ,_ag =_de .DecodeStream (_fd );if _ag !=nil {return _ag ;};_bdb =_fcf +"\u002e\u0074\u0074\u0066";
};}else if _df .FontFile3 !=nil {if _gedd ,_dde :=_de .GetStream (_df .FontFile3 );_dde {_dgc ,_ag =_de .DecodeStream (_gedd );if _ag !=nil {return _ag ;};_bdb =_fcf +"\u002e\u0063\u0066\u0066";};};if len (_bdb )< 1{_ceg .Log .Debug (_db );};_dfd :=Font {FontName :_fcf ,PdfFont :_ged ,IsCID :_ged .IsCID (),IsSimple :_ged .IsSimple (),ToUnicode :_afb ,FontType :_gf ,FontData :_dgc ,FontFileName :_bdb ,FontDescriptor :_df };
_be .Fonts =append (_be .Fonts ,_dfd );};return nil ;};func (_cae *shapesState )newSubPath (){_cae .clearPath ();if _aega {_ceg .Log .Info ("\u006e\u0065\u0077\u0053\u0075\u0062\u0050\u0061\u0074h\u003a\u0020\u0025\u0073",_cae );};};func (_aab *textObject )setHorizScaling (_fafe float64 ){if _aab ==nil {return ;
};_aab ._cdg ._dfe =_fafe ;};func (_gggdb *textTable )toTextTable ()TextTable {if _ccgc {_ceg .Log .Info ("t\u006fT\u0065\u0078\u0074\u0054\u0061\u0062\u006c\u0065:\u0020\u0025\u0064\u0020x \u0025\u0064",_gggdb ._cbdec ,_gggdb ._fbaf );};_dfada :=make ([][]TableCell ,_gggdb ._fbaf );
for _ffafa :=0;_ffafa < _gggdb ._fbaf ;_ffafa ++{_dfada [_ffafa ]=make ([]TableCell ,_gggdb ._cbdec );for _eegde :=0;_eegde < _gggdb ._cbdec ;_eegde ++{_cbea :=_gggdb .get (_eegde ,_ffafa );if _cbea ==nil {continue ;};if _ccgc {_a .Printf ("\u0025\u0034\u0064 \u0025\u0032\u0064\u003a\u0020\u0025\u0073\u000a",_eegde ,_ffafa ,_cbea );
};_dfada [_ffafa ][_eegde ].Text =_cbea .text ();_feef :=0;_dfada [_ffafa ][_eegde ].Marks ._fgbb =_cbea .toTextMarks (&_feef );};};_gecc :=TextTable {W :_gggdb ._cbdec ,H :_gggdb ._fbaf ,Cells :_dfada };_gecc .PdfRectangle =_gggdb .bbox ();return _gecc ;
};func (_faca intSet )add (_bdfgcd int ){_faca [_bdfgcd ]=struct{}{}};func (_gbde paraList )xNeighbours (_fbebb float64 )map[*textPara ][]int {_fdeb :=make ([]event ,2*len (_gbde ));if _fbebb ==0{for _gbed ,_adfe :=range _gbde {_fdeb [2*_gbed ]=event {_adfe .Llx ,true ,_gbed };
_fdeb [2*_gbed +1]=event {_adfe .Urx ,false ,_gbed };};}else {for _cdeda ,_fdgf :=range _gbde {_fdeb [2*_cdeda ]=event {_fdgf .Llx -_fbebb *_fdgf .fontsize (),true ,_cdeda };_fdeb [2*_cdeda +1]=event {_fdgf .Urx +_fbebb *_fdgf .fontsize (),false ,_cdeda };
};};return _gbde .eventNeighbours (_fdeb );};func (_gbbb gridTiling )log (_ggcf string ){if !_deee {return ;};_ceg .Log .Info ("\u0074i\u006ci\u006e\u0067\u003a\u0020\u0025d\u0020\u0078 \u0025\u0064\u0020\u0025\u0071",len (_gbbb ._aagfd ),len (_gbbb ._ddee ),_ggcf );
_a .Printf ("\u0020\u0020\u0020l\u006c\u0078\u003d\u0025\u002e\u0032\u0066\u000a",_gbbb ._aagfd );_a .Printf ("\u0020\u0020\u0020l\u006c\u0079\u003d\u0025\u002e\u0032\u0066\u000a",_gbbb ._ddee );for _gebaa ,_aebdb :=range _gbbb ._ddee {_fcbc ,_aaeab :=_gbbb ._afee [_aebdb ];
if !_aaeab {continue ;};_a .Printf ("%\u0034\u0064\u003a\u0020\u0025\u0036\u002e\u0032\u0066\u000a",_gebaa ,_aebdb );for _faeeg ,_bgag :=range _gbbb ._aagfd {_cagd ,_affga :=_fcbc [_bgag ];if !_affga {continue ;};_a .Printf ("\u0025\u0038\u0064\u003a\u0020\u0025\u0073\u000a",_faeeg ,_cagd .String ());
};};};func (_ddea *shapesState )drawRectangle (_agc ,_dea ,_ddg ,_ecae float64 ){if _aega {_gfae :=_ddea .devicePoint (_agc ,_dea );_dbgc :=_ddea .devicePoint (_agc +_ddg ,_dea +_ecae );_cfed :=_gg .PdfRectangle {Llx :_gfae .X ,Lly :_gfae .Y ,Urx :_dbgc .X ,Ury :_dbgc .Y };
_ceg .Log .Info ("d\u0072a\u0077\u0052\u0065\u0063\u0074\u0061\u006e\u0067l\u0065\u003a\u0020\u00256.\u0032\u0066",_cfed );};_ddea .newSubPath ();_ddea .moveTo (_agc ,_dea );_ddea .lineTo (_agc +_ddg ,_dea );_ddea .lineTo (_agc +_ddg ,_dea +_ecae );_ddea .lineTo (_agc ,_dea +_ecae );
_ddea .closePath ();};func (_cdfg paraList )toTextMarks ()[]TextMark {_ebgcd :=0;var _bcgd []TextMark ;for _ebad ,_aafa :=range _cdfg {if _aafa ._dgac {continue ;};_baad :=_aafa .toTextMarks (&_ebgcd );_bcgd =append (_bcgd ,_baad ...);if _ebad !=len (_cdfg )-1{if _bccf (_aafa ,_cdfg [_ebad +1]){_bcgd =_bedd (_bcgd ,&_ebgcd ,"\u0020");
}else {_bcgd =_bedd (_bcgd ,&_ebgcd ,"\u000a");_bcgd =_bedd (_bcgd ,&_ebgcd ,"\u000a");};};};_bcgd =_bedd (_bcgd ,&_ebgcd ,"\u000a");_bcgd =_bedd (_bcgd ,&_ebgcd ,"\u000a");return _bcgd ;};func (_daeg *textWord )addDiacritic (_gbccfa string ){_gcga :=_daeg ._cgde [len (_daeg ._cgde )-1];
_gcga ._dfda +=_gbccfa ;_gcga ._dfda =_cd .NFKC .String (_gcga ._dfda );};func (_cdfgg paraList )findTableGrid (_egefb gridTiling )(*textTable ,map[*textPara ]struct{}){_febec :=len (_egefb ._aagfd );_agegf :=len (_egefb ._ddee );_dbbe :=textTable {_fege :true ,_cbdec :_febec ,_fbaf :_agegf ,_aebfe :make (map[uint64 ]*textPara ,_febec *_agegf ),_bagdf :make (map[uint64 ]compositeCell ,_febec *_agegf )};
_dbbe .PdfRectangle =_egefb .PdfRectangle ;_bbcd :=make (map[*textPara ]struct{});_ddgc :=int ((1.0-_agaa )*float64 (_febec *_agegf ));_fdfge :=0;if _deee {_ceg .Log .Info ("\u0066\u0069\u006e\u0064Ta\u0062\u006c\u0065\u0047\u0072\u0069\u0064\u003a\u0020\u0025\u0064\u0020\u0078\u0020%\u0064",_febec ,_agegf );
};for _bgeb ,_ccgb :=range _egefb ._ddee {_dcff ,_aedgb :=_egefb ._afee [_ccgb ];if !_aedgb {continue ;};for _dbdca ,_cgbffg :=range _egefb ._aagfd {_dadfb ,_aacgd :=_dcff [_cgbffg ];if !_aacgd {continue ;};_efaed :=_cdfgg .inTile (_dadfb );if len (_efaed )==0{_fdfge ++;
if _fdfge > _ddgc {if _deee {_ceg .Log .Info ("\u0021\u006e\u0075m\u0045\u006d\u0070\u0074\u0079\u003d\u0025\u0064",_fdfge );};return nil ,nil ;};}else {_dbbe .putComposite (_dbdca ,_bgeb ,_efaed ,_dadfb .PdfRectangle );for _ ,_gbdf :=range _efaed {_bbcd [_gbdf ]=struct{}{};
};};};};_acbe :=0;for _cefgd :=0;_cefgd < _febec ;_cefgd ++{_bdfgga :=_dbbe .get (_cefgd ,0);if _bdfgga ==nil ||!_bdfgga ._dgac {_acbe ++;};};if _acbe ==0{if _deee {_ceg .Log .Info ("\u0021\u006e\u0075m\u0048\u0065\u0061\u0064\u0065\u0072\u003d\u0030");
};return nil ,nil ;};_acee :=_dbbe .reduceTiling (_egefb ,_feggg );_acee =_acee .subdivide ();return _acee ,_bbcd ;};func _ceef (_faeba structElement )[]structElement {_faad :=[]structElement {};for _ ,_fdae :=range _faeba ._dada {for _ ,_bbff :=range _fdae ._dada {for _ ,_egdff :=range _bbff ._dada {if _egdff ._gefg =="\u004c"{_faad =append (_faad ,_egdff );
};};};};return _faad ;};

// String returns a description of `p`.
func (_acbaa *textPara )String ()string {if _acbaa ._dgac {return _a .Sprintf ("\u0025\u0036\u002e\u0032\u0066\u0020\u005b\u0045\u004d\u0050\u0054\u0059\u005d",_acbaa .PdfRectangle );};_ddgg :="";if _acbaa ._dace !=nil {_ddgg =_a .Sprintf ("\u005b\u0025\u0064\u0078\u0025\u0064\u005d\u0020",_acbaa ._dace ._cbdec ,_acbaa ._dace ._fbaf );
};return _a .Sprintf ("\u0025\u0036\u002e\u0032f \u0025\u0073\u0025\u0064\u0020\u006c\u0069\u006e\u0065\u0073\u0020\u0025\u0071",_acbaa .PdfRectangle ,_ddgg ,len (_acbaa ._eccfb ),_aefb (_acbaa .text (),50));};func _egff (_dadg []int )[]int {_abgbg :=make ([]int ,len (_dadg ));
for _egea ,_baaa :=range _dadg {_abgbg [len (_dadg )-1-_egea ]=_baaa ;};return _abgbg ;};func (_agda rulingList )toGrids ()[]rulingList {if _aabf {_ceg .Log .Info ("t\u006f\u0047\u0072\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_agda );};_ccdaf :=_agda .intersections ();
if _aabf {_ceg .Log .Info ("\u0074\u006f\u0047r\u0069\u0064\u0073\u003a \u0076\u0065\u0063\u0073\u003d\u0025\u0064 \u0069\u006e\u0074\u0065\u0072\u0073\u0065\u0063\u0074\u0073\u003d\u0025\u0064\u0020",len (_agda ),len (_ccdaf ));for _ ,_gaaf :=range _fbfc (_ccdaf ){_a .Printf ("\u00254\u0064\u003a\u0020\u0025\u002b\u0076\n",_gaaf ,_ccdaf [_gaaf ]);
};};_aegc :=make (map[int ]intSet ,len (_agda ));for _eefe :=range _agda {_efaf :=_agda .connections (_ccdaf ,_eefe );if len (_efaf )> 0{_aegc [_eefe ]=_efaf ;};};if _aabf {_ceg .Log .Info ("t\u006fG\u0072\u0069\u0064\u0073\u003a\u0020\u0063\u006fn\u006e\u0065\u0063\u0074s=\u0025\u0064",len (_aegc ));
for _ ,_dddc :=range _fbfc (_aegc ){_a .Printf ("\u00254\u0064\u003a\u0020\u0025\u002b\u0076\n",_dddc ,_aegc [_dddc ]);};};_cbdde :=_gbefa (len (_agda ),func (_ddba ,_gcaag int )bool {_fcdf ,_gaff :=len (_aegc [_ddba ]),len (_aegc [_gcaag ]);if _fcdf !=_gaff {return _fcdf > _gaff ;
};return _agda .comp (_ddba ,_gcaag );});if _aabf {_ceg .Log .Info ("t\u006fG\u0072\u0069\u0064\u0073\u003a\u0020\u006f\u0072d\u0065\u0072\u0069\u006eg=\u0025\u0076",_cbdde );};_aeaac :=[][]int {{_cbdde [0]}};_feggd :for _ ,_eegd :=range _cbdde [1:]{for _gcaaa ,_dafa :=range _aeaac {for _ ,_bbdeb :=range _dafa {if _aegc [_bbdeb ].has (_eegd ){_aeaac [_gcaaa ]=append (_dafa ,_eegd );
continue _feggd ;};};};_aeaac =append (_aeaac ,[]int {_eegd });};if _aabf {_ceg .Log .Info ("\u0074o\u0047r\u0069\u0064\u0073\u003a\u0020i\u0067\u0072i\u0064\u0073\u003d\u0025\u0076",_aeaac );};_ge .SliceStable (_aeaac ,func (_feag ,_gccbf int )bool {return len (_aeaac [_feag ])> len (_aeaac [_gccbf ])});
for _ ,_aegce :=range _aeaac {_ge .Slice (_aegce ,func (_geefe ,_baaf int )bool {return _agda .comp (_aegce [_geefe ],_aegce [_baaf ])});};_facf :=make ([]rulingList ,len (_aeaac ));for _efbfe ,_edfff :=range _aeaac {_bdfgg :=make (rulingList ,len (_edfff ));
for _ebac ,_gceg :=range _edfff {_bdfgg [_ebac ]=_agda [_gceg ];};_facf [_efbfe ]=_bdfgg ;};if _aabf {_ceg .Log .Info ("\u0074o\u0047r\u0069\u0064\u0073\u003a\u0020g\u0072\u0069d\u0073\u003d\u0025\u002b\u0076",_facf );};var _abfc []rulingList ;for _ ,_cgfce :=range _facf {if _fccaa ,_aeeda :=_cgfce .isActualGrid ();
_aeeda {_cgfce =_fccaa ;_cgfce =_cgfce .snapToGroups ();_abfc =append (_abfc ,_cgfce );};};if _aabf {_cdad ("t\u006fG\u0072\u0069\u0064\u0073\u003a\u0020\u0061\u0063t\u0075\u0061\u006c\u0047ri\u0064\u0073",_abfc );_ceg .Log .Info ("\u0074\u006f\u0047\u0072\u0069\u0064\u0073\u003a\u0020\u0067\u0072\u0069\u0064\u0073\u003d%\u0064 \u0061\u0063\u0074\u0075\u0061\u006c\u0047\u0072\u0069\u0064\u0073\u003d\u0025\u0064",len (_facf ),len (_abfc ));
};return _abfc ;};func _eadd (_gcabg *PageText )error {_bfbab :=_ff .GetLicenseKey ();if _bfbab !=nil &&_bfbab .IsLicensed ()||_eg {return nil ;};_a .Printf ("\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020c\u006f\u0070\u0079\u0020\u006f\u0066\u0020\u0055\u006e\u0069P\u0044\u0046\u000a");
_a .Println ("-\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u0066\u0072e\u0065\u0020\u0074\u0072\u0069\u0061\u006c l\u0069\u0063\u0065\u006es\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070s:\u002f\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _c .New ("\u0075\u006e\u0069\u0070d\u0066\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020c\u006fd\u0065\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0064");};func (_dbb *wordBag )minDepth ()float64 {return _dbb ._ffdg -(_dbb .Ury -_dbb ._agba )};
func (_fdefe rulingList )secMinMax ()(float64 ,float64 ){_gbceb ,_bdee :=_fdefe [0]._ebaa ,_fdefe [0]._bddc ;for _ ,_beag :=range _fdefe [1:]{if _beag ._ebaa < _gbceb {_gbceb =_beag ._ebaa ;};if _beag ._bddc > _bdee {_bdee =_beag ._bddc ;};};return _gbceb ,_bdee ;
};func (_cf *imageExtractContext )extractInlineImage (_dge *_cdb .ContentStreamInlineImage ,_gcf _cdb .GraphicsState ,_fbg *_gg .PdfPageResources )error {_gdd ,_bg :=_dge .ToImage (_fbg );if _bg !=nil {return _bg ;};_cac ,_bg :=_dge .GetColorSpace (_fbg );
if _bg !=nil {return _bg ;};if _cac ==nil {_cac =_gg .NewPdfColorspaceDeviceGray ();};_bge ,_bg :=_cac .ImageToRGB (*_gdd );if _bg !=nil {return _bg ;};_gccb :=ImageMark {Image :&_bge ,Width :_gcf .CTM .ScalingFactorX (),Height :_gcf .CTM .ScalingFactorY (),Angle :_gcf .CTM .Angle ()};
_gccb .X ,_gccb .Y =_gcf .CTM .Translation ();_cf ._gfg =append (_cf ._gfg ,_gccb );_cf ._efb ++;return nil ;};

// String returns a string descibing `i`.
func (_bdfa gridTile )String ()string {_feedb :=func (_cffbg bool ,_gbbf string )string {if _cffbg {return _gbbf ;};return "\u005f";};return _a .Sprintf ("\u00256\u002e2\u0066\u0020\u0025\u0031\u0073%\u0031\u0073%\u0031\u0073\u0025\u0031\u0073",_bdfa .PdfRectangle ,_feedb (_bdfa ._gbfg ,"\u004c"),_feedb (_bdfa ._ddgb ,"\u0052"),_feedb (_bdfa ._bfca ,"\u0042"),_feedb (_bdfa ._dbaa ,"\u0054"));
};func (_bca *wordBag )makeRemovals ()map[int ]map[*textWord ]struct{}{_ebbg :=make (map[int ]map[*textWord ]struct{},len (_bca ._agbg ));for _eadge :=range _bca ._agbg {_ebbg [_eadge ]=make (map[*textWord ]struct{});};return _ebbg ;};func (_ccba *wordBag )getDepthIdx (_bagd float64 )int {_aeda :=_ccba .depthIndexes ();
_agfd :=_dadf (_bagd );if _agfd < _aeda [0]{return _aeda [0];};if _agfd > _aeda [len (_aeda )-1]{return _aeda [len (_aeda )-1];};return _agfd ;};type rulingList []*ruling ;type lists []*list ;func (_afff intSet )has (_cebbb int )bool {_ ,_cfeb :=_afff [_cebbb ];
return _cfeb };func _dfgdf (_ggcb _gg .PdfRectangle )*ruling {return &ruling {_aaeb :_gdad ,_dege :_ggcb .Lly ,_ebaa :_ggcb .Llx ,_bddc :_ggcb .Urx };};func (_ecaa *wordBag )absorb (_daff *wordBag ){_afe :=_daff .makeRemovals ();for _bafd ,_fggg :=range _daff ._agbg {for _ ,_bgbd :=range _fggg {_ecaa .pullWord (_bgbd ,_bafd ,_afe );
};};_daff .applyRemovals (_afe );};func (_ebbgg *structTreeRoot )buildList (_bffd map[int ][]*textLine ,_adebd _de .PdfObject )[]*list {if _ebbgg ==nil {_ceg .Log .Debug ("\u0062\u0075\u0069\u006c\u0064\u004c\u0069\u0073\u0074\u003a\u0020t\u0072\u0065\u0065\u0052\u006f\u006f\u0074\u0020\u0069\u0073 \u006e\u0069\u006c");
return nil ;};var _gddg *structElement ;_cacd :=[]structElement {};if len (_ebbgg ._feec )==1{_egdb :=_ebbgg ._feec [0]._gefg ;if _egdb =="\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074"||_egdb =="\u0053\u0065\u0063\u0074"||_egdb =="\u0050\u0061\u0072\u0074"||_egdb =="\u0044\u0069\u0076"||_egdb =="\u0041\u0072\u0074"{_gddg =&_ebbgg ._feec [0];
};}else {_gddg =&structElement {_dada :_ebbgg ._feec ,_gefg :_ebbgg ._effbc };};if _gddg ==nil {_ceg .Log .Debug ("\u0062\u0075\u0069\u006cd\u004c\u0069\u0073\u0074\u003a\u0020\u0074\u006f\u0070\u0045l\u0065m\u0065\u006e\u0074\u0020\u0069\u0073\u0020n\u0069\u006c");
return nil ;};for _ ,_dgae :=range _gddg ._dada {if _dgae ._gefg =="\u004c"{_cacd =append (_cacd ,_dgae );}else if _dgae ._gefg =="\u0054\u0061\u0062l\u0065"{_fgef :=_ceef (_dgae );_cacd =append (_cacd ,_fgef ...);};};_ddfa :=_bfce (_cacd ,_bffd ,_adebd );
var _egge []*list ;for _ ,_dgbg :=range _ddfa {_gdfb :=_dggg (_dgbg );_egge =append (_egge ,_gdfb ...);};return _egge ;};func _dgecc (_aacb string )bool {for _ ,_ffefge :=range _aacb {if !_ga .IsSpace (_ffefge ){return false ;};};return true ;};func _bfac (_gcfd _gg .PdfRectangle ,_cbeda []*textLine )*textPara {return &textPara {PdfRectangle :_gcfd ,_eccfb :_cbeda };
};func _cbbd (_gcfe _gg .PdfRectangle ,_adba ,_fefbe ,_efcc ,_fdgb *ruling )gridTile {_gbgdd :=_gcfe .Llx ;_cgbag :=_gcfe .Urx ;_bbcgf :=_gcfe .Lly ;_aafd :=_gcfe .Ury ;return gridTile {PdfRectangle :_gcfe ,_gbfg :_adba !=nil &&_adba .encloses (_bbcgf ,_aafd ),_ddgb :_fefbe !=nil &&_fefbe .encloses (_bbcgf ,_aafd ),_bfca :_efcc !=nil &&_efcc .encloses (_gbgdd ,_cgbag ),_dbaa :_fdgb !=nil &&_fdgb .encloses (_gbgdd ,_cgbag )};
};func _ffce (_acda func (*wordBag ,*textWord ,float64 )bool ,_bcfe float64 )func (*wordBag ,*textWord )bool {return func (_gfd *wordBag ,_faee *textWord )bool {return _acda (_gfd ,_faee ,_bcfe )};};func (_ccaf *wordBag )text ()string {_gcgga :=_ccaf .allWords ();
_bgbaa :=make ([]string ,len (_gcgga ));for _ccecg ,_ecgd :=range _gcgga {_bgbaa [_ccecg ]=_ecgd ._dbggb ;};return _gc .Join (_bgbaa ,"\u0020");};