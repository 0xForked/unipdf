//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package imagerender ;import (_bd "errors";_d "fmt";_fc "github.com/unidoc/freetype/raster";_c "github.com/unidoc/unipdf/v3/common";_bg "github.com/unidoc/unipdf/v3/internal/transform";_dd "github.com/unidoc/unipdf/v3/render/internal/context";_ae "golang.org/x/image/draw";
_fg "golang.org/x/image/font";_f "golang.org/x/image/math/f64";_fe "golang.org/x/image/math/fixed";_ad "image";_af "image/color";_bc "image/draw";_b "math";_a "sort";_ec "strings";);func (_fced *Context )RotateAbout (angle ,x ,y float64 ){_fced .Translate (x ,y );
_fced .Rotate (angle );_fced .Translate (-x ,-y );};func _eccb (_cbea ,_ddece ,_aeca ,_cba ,_aaec ,_geeg float64 )_dd .Gradient {_edb :=circle {_cbea ,_ddece ,_aeca };_afad :=circle {_cba ,_aaec ,_geeg };_daa :=circle {_cba -_cbea ,_aaec -_ddece ,_geeg -_aeca };
_ebd :=_cgffd (_daa ._bcbe ,_daa ._egc ,-_daa ._fcg ,_daa ._bcbe ,_daa ._egc ,_daa ._fcg );var _aecf float64 ;if _ebd !=0{_aecf =1.0/_ebd ;};_bee :=-_edb ._fcg ;_ffc :=&radialGradient {_ecbc :_edb ,_gaeg :_afad ,_cbd :_daa ,_fbd :_ebd ,_fdd :_aecf ,_gcdb :_bee };
return _ffc ;};func _cg (_fed ,_cd ,_eg ,_bgd ,_ag ,_g ,_da float64 )(_gg ,_fb float64 ){_ce :=1-_da ;_aa :=_ce *_ce ;_dde :=2*_ce *_da ;_gf :=_da *_da ;_gg =_aa *_fed +_dde *_eg +_gf *_ag ;_fb =_aa *_cd +_dde *_bgd +_gf *_g ;return ;};func _agb (_dgbd _fc .Path ,_bfe []float64 ,_gba float64 )_fc .Path {return _cadc (_dbc (_bdb (_dgbd ),_bfe ,_gba ));
};func (_fgce *Context )SetFillRGBA (r ,g ,b ,a float64 ){_bbf :=_af .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_fgce ._gfe =_bbf ;_fgce ._bgdg =_gbf (_bbf );};func (_cgf *Context )StrokePattern ()_dd .Pattern {return _cgf ._age };
func (_fce *Context )StrokePreserve (){var _fga _fc .Painter ;if _fce ._ege ==nil {if _agc ,_fbbf :=_fce ._age .(*solidPattern );_fbbf {_ebc :=_fc .NewRGBAPainter (_fce ._egb );_ebc .SetColor (_agc ._efag );_fga =_ebc ;};};if _fga ==nil {_fga =_cccf (_fce ._egb ,_fce ._ege ,_fce ._age );
};_fce .stroke (_fga );};func (_ccf *Context )MoveTo (x ,y float64 ){if _ccf ._dgd {_ccf ._efb .Add1 (_aedd (_ccf ._abg ));};x ,y =_ccf .Transform (x ,y );_feaf :=_bg .NewPoint (x ,y );_bfg :=_aedd (_feaf );_ccf ._bae .Start (_bfg );_ccf ._efb .Start (_bfg );
_ccf ._abg =_feaf ;_ccf ._ffe =_feaf ;_ccf ._dgd =true ;};func (_gabf *Context )ScaleAbout (sx ,sy ,x ,y float64 ){_gabf .Translate (x ,y );_gabf .Scale (sx ,sy );_gabf .Translate (-x ,-y );};func (_dca *Context )SetLineCap (lineCap _dd .LineCap ){_dca ._fff =lineCap };
func (_dcda *Context )AsMask ()*_ad .Alpha {_gb :=_ad .NewAlpha (_dcda ._egb .Bounds ());_ae .Draw (_gb ,_dcda ._egb .Bounds (),_dcda ._egb ,_ad .Point {},_ae .Src );return _gb ;};func (_aea *Context )ResetClip (){_aea ._ege =nil };func (_cfea *Context )SetMatrix (m _bg .Matrix ){_cfea ._abb =m };
func NewContext (width ,height int )*Context {return NewContextForRGBA (_ad .NewRGBA (_ad .Rect (0,0,width ,height )));};func (_dfbd *linearGradient )AddColorStop (offset float64 ,color _af .Color ){_dfbd ._bdeg =append (_dfbd ._bdeg ,stop {_cfd :offset ,_cfdc :color });
_a .Sort (_dfbd ._bdeg );};func (_dec *Context )ShearAbout (sx ,sy ,x ,y float64 ){_dec .Translate (x ,y );_dec .Shear (sx ,sy );_dec .Translate (-x ,-y );};func (_gcda *Context )Matrix ()_bg .Matrix {return _gcda ._abb };func (_gc *Context )Width ()int {return _gc ._gegf };
func (_ageb *Context )Transform (x ,y float64 )(_efd ,_gda float64 ){return _ageb ._abb .Transform (x ,y )};func (_fec *Context )SetStrokeRGBA (r ,g ,b ,a float64 ){_fdef :=_af .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_fec ._age =_gbf (_fdef );
};func (_deea stops )Swap (i ,j int ){_deea [i ],_deea [j ]=_deea [j ],_deea [i ]};func (_dag *Context )SetFillStyle (pattern _dd .Pattern ){if _fcb ,_fbb :=pattern .(*solidPattern );_fbb {_dag ._gfe =_fcb ._efag ;};_dag ._bgdg =pattern ;};func _cf (_ba ,_ceg ,_aga ,_ggg ,_fee ,_ge float64 )[]_bg .Point {_ed :=(_b .Hypot (_aga -_ba ,_ggg -_ceg )+_b .Hypot (_fee -_aga ,_ge -_ggg ));
_cdb :=int (_ed +0.5);if _cdb < 4{_cdb =4;};_cfe :=float64 (_cdb )-1;_fgc :=make ([]_bg .Point ,_cdb );for _ab :=0;_ab < _cdb ;_ab ++{_fca :=float64 (_ab )/_cfe ;_bb ,_bda :=_cg (_ba ,_ceg ,_aga ,_ggg ,_fee ,_ge ,_fca );_fgc [_ab ]=_bg .NewPoint (_bb ,_bda );
};return _fgc ;};func (_gee *Context )SetColor (c _af .Color ){_gee .setFillAndStrokeColor (c )};func _cccf (_fcgc *_ad .RGBA ,_cca *_ad .Alpha ,_fffe _dd .Pattern )*patternPainter {return &patternPainter {_fcgc ,_cca ,_fffe };};func (_bde *Context )SetPixel (x ,y int ){_bde ._egb .Set (x ,y ,_bde ._gfe )};
func NewContextForRGBA (im *_ad .RGBA )*Context {_dda :=im .Bounds ().Size ().X ;_bf :=im .Bounds ().Size ().Y ;return &Context {_gegf :_dda ,_de :_bf ,_gega :_fc .NewRasterizer (_dda ,_bf ),_egb :im ,_gfe :_af .Transparent ,_bgdg :_dae ,_age :_ga ,_dfg :1,_cdf :_dd .FillRuleWinding ,_abb :_bg .IdentityMatrix (),_fbg :_dd .NewTextState ()};
};type surfacePattern struct{_egfd _ad .Image ;_gdd repeatOp ;};func _cadc (_debc [][]_bg .Point )_fc .Path {var _fbc _fc .Path ;for _ ,_ddcg :=range _debc {var _eac _fe .Point26_6 ;for _bgg ,_eag :=range _ddcg {_baee :=_aedd (_eag );if _bgg ==0{_fbc .Start (_baee );
}else {_fffa :=_baee .X -_eac .X ;_afade :=_baee .Y -_eac .Y ;if _fffa < 0{_fffa =-_fffa ;};if _afade < 0{_afade =-_afade ;};if _fffa +_afade > 8{_fbc .Add1 (_baee );};};_eac =_baee ;};};return _fbc ;};var (_dae =_gbf (_af .White );_ga =_gbf (_af .Black );
);func (_gaa *Context )Stroke (){_gaa .StrokePreserve ();_gaa .ClearPath ()};type radialGradient struct{_ecbc ,_gaeg ,_cbd circle ;_fbd ,_fdd float64 ;_gcdb float64 ;_gcb stops ;};func (_cgfa *Context )LineTo (x ,y float64 ){if !_cgfa ._dgd {_cgfa .MoveTo (x ,y );
}else {x ,y =_cgfa .Transform (x ,y );_bcd :=_bg .NewPoint (x ,y );_be :=_aedd (_bcd );_cgfa ._bae .Add1 (_be );_cgfa ._efb .Add1 (_be );_cgfa ._ffe =_bcd ;};};func (_eea *surfacePattern )ColorAt (x ,y int )_af .Color {_eec :=_eea ._egfd .Bounds ();switch _eea ._gdd {case _acb :if y >=_eec .Dy (){return _af .Transparent ;
};case _adb :if x >=_eec .Dx (){return _af .Transparent ;};case _bag :if x >=_eec .Dx ()||y >=_eec .Dy (){return _af .Transparent ;};};x =x %_eec .Dx ()+_eec .Min .X ;y =y %_eec .Dy ()+_eec .Min .Y ;return _eea ._egfd .At (x ,y );};func (_agac *Context )NewSubPath (){if _agac ._dgd {_agac ._efb .Add1 (_aedd (_agac ._abg ));
};_agac ._dgd =false ;};func (_bfb *radialGradient )ColorAt (x ,y int )_af .Color {if len (_bfb ._gcb )==0{return _af .Transparent ;};_bbfd ,_fgcb :=float64 (x )+0.5-_bfb ._ecbc ._bcbe ,float64 (y )+0.5-_bfb ._ecbc ._egc ;_bcbb :=_cgffd (_bbfd ,_fgcb ,_bfb ._ecbc ._fcg ,_bfb ._cbd ._bcbe ,_bfb ._cbd ._egc ,_bfb ._cbd ._fcg );
_gce :=_cgffd (_bbfd ,_fgcb ,-_bfb ._ecbc ._fcg ,_bbfd ,_fgcb ,_bfb ._ecbc ._fcg );if _bfb ._fbd ==0{if _bcbb ==0{return _af .Transparent ;};_ccb :=0.5*_gce /_bcbb ;if _ccb *_bfb ._cbd ._fcg >=_bfb ._gcdb {return _agab (_ccb ,_bfb ._gcb );};return _af .Transparent ;
};_gbd :=_cgffd (_bcbb ,_bfb ._fbd ,0,_bcbb ,-_gce ,0);if _gbd >=0{_gdbg :=_b .Sqrt (_gbd );_cgffa :=(_bcbb +_gdbg )*_bfb ._fdd ;_dgef :=(_bcbb -_gdbg )*_bfb ._fdd ;if _cgffa *_bfb ._cbd ._fcg >=_bfb ._gcdb {return _agab (_cgffa ,_bfb ._gcb );}else if _dgef *_bfb ._cbd ._fcg >=_bfb ._gcdb {return _agab (_dgef ,_bfb ._gcb );
};};return _af .Transparent ;};func (_cff stops )Less (i ,j int )bool {return _cff [i ]._cfd < _cff [j ]._cfd };func (_abc *Context )SetRGB255 (r ,g ,b int ){_abc .SetRGBA255 (r ,g ,b ,255)};func (_agd *Context )Height ()int {return _agd ._de };func (_eb *Context )SetLineWidth (lineWidth float64 ){_eb ._dfg =lineWidth };
func (_ee *Context )setFillAndStrokeColor (_fcd _af .Color ){_ee ._gfe =_fcd ;_ee ._bgdg =_gbf (_fcd );_ee ._age =_gbf (_fcd );};const (_aad repeatOp =iota ;_acb ;_adb ;_bag ;);func _gbf (_ffea _af .Color )_dd .Pattern {return &solidPattern {_efag :_ffea }};
func (_fea *Context )SetDash (dashes ...float64 ){_fea ._ggf =dashes };func (_gggd *radialGradient )AddColorStop (offset float64 ,color _af .Color ){_gggd ._gcb =append (_gggd ._gcb ,stop {_cfd :offset ,_cfdc :color });_a .Sort (_gggd ._gcb );};func (_afa *Context )DrawImage (im _ad .Image ,x ,y int ){_afa .DrawImageAnchored (im ,x ,y ,0,0)};
func (_efa *Context )DrawPoint (x ,y ,r float64 ){_efa .Push ();_gaeb ,_gcc :=_efa .Transform (x ,y );_efa .Identity ();_efa .DrawCircle (_gaeb ,_gcc ,r );_efa .Pop ();};func (_efg *Context )SetDashOffset (offset float64 ){_efg ._bge =offset };func (_fae *Context )FillPreserve (){var _feg _fc .Painter ;
if _fae ._ege ==nil {if _beb ,_ebce :=_fae ._bgdg .(*solidPattern );_ebce {_dcb :=_fc .NewRGBAPainter (_fae ._egb );_dcb .SetColor (_beb ._efag );_feg =_dcb ;};};if _feg ==nil {_feg =_cccf (_fae ._egb ,_fae ._ege ,_fae ._bgdg );};_fae .fill (_feg );};func (_aega *Context )ClosePath (){if _aega ._dgd {_eae :=_aedd (_aega ._abg );
_aega ._bae .Add1 (_eae );_aega ._efb .Add1 (_eae );_aega ._ffe =_aega ._abg ;};};func (_bgda *Context )DrawLine (x1 ,y1 ,x2 ,y2 float64 ){_bgda .MoveTo (x1 ,y1 );_bgda .LineTo (x2 ,y2 )};func (_ebe *Context )DrawRectangle (x ,y ,w ,h float64 ){_ebe .NewSubPath ();
_ebe .MoveTo (x ,y );_ebe .LineTo (x +w ,y );_ebe .LineTo (x +w ,y +h );_ebe .LineTo (x ,y +h );_ebe .ClosePath ();};func (_dgc *Context )DrawImageAnchored (im _ad .Image ,x ,y int ,ax ,ay float64 ){_ageg :=im .Bounds ().Size ();x -=int (ax *float64 (_ageg .X ));
y -=int (ay *float64 (_ageg .Y ));_ddab :=_ae .BiLinear ;_gbc :=_dgc ._abb .Clone ().Translate (float64 (x ),float64 (y ));_ggd :=_f .Aff3 {_gbc [0],_gbc [3],_gbc [6],_gbc [1],_gbc [4],_gbc [7]};if _dgc ._ege ==nil {_ddab .Transform (_dgc ._egb ,_ggd ,im ,im .Bounds (),_ae .Over ,nil );
}else {_ddab .Transform (_dgc ._egb ,_ggd ,im ,im .Bounds (),_ae .Over ,&_ae .Options {DstMask :_dgc ._ege ,DstMaskP :_ad .Point {}});};};func (_dcd *Context )SetRGBA (r ,g ,b ,a float64 ){_dcd ._gfe =_af .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};
_dcd .setFillAndStrokeColor (_dcd ._gfe );};func _cc (_ceb ,_dad ,_ca ,_aeg ,_aaa ,_aaf ,_bcg ,_ccd float64 )[]_bg .Point {_aff :=(_b .Hypot (_ca -_ceb ,_aeg -_dad )+_b .Hypot (_aaa -_ca ,_aaf -_aeg )+_b .Hypot (_bcg -_aaa ,_ccd -_aaf ));_cb :=int (_aff +0.5);
if _cb < 4{_cb =4;};_bbc :=float64 (_cb )-1;_fde :=make ([]_bg .Point ,_cb );for _adf :=0;_adf < _cb ;_adf ++{_dg :=float64 (_adf )/_bbc ;_acd ,_fbfd :=_cec (_ceb ,_dad ,_ca ,_aeg ,_aaa ,_aaf ,_bcg ,_ccd ,_dg );_fde [_adf ]=_bg .NewPoint (_acd ,_fbfd );
};return _fde ;};func (_ggfd *Context )Clear (){_gae :=_ad .NewUniform (_ggfd ._gfe );_ae .Draw (_ggfd ._egb ,_ggfd ._egb .Bounds (),_gae ,_ad .Point {},_ae .Src );};func (_caee *Context )ClipPreserve (){_fba :=_ad .NewAlpha (_ad .Rect (0,0,_caee ._gegf ,_caee ._de ));
_fcf :=_fc .NewAlphaOverPainter (_fba );_caee .fill (_fcf );if _caee ._ege ==nil {_caee ._ege =_fba ;}else {_efgf :=_ad .NewAlpha (_ad .Rect (0,0,_caee ._gegf ,_caee ._de ));_ae .DrawMask (_efgf ,_efgf .Bounds (),_fba ,_ad .Point {},_caee ._ege ,_ad .Point {},_ae .Over );
_caee ._ege =_efgf ;};};func (_deb *Context )InvertMask (){if _deb ._ege ==nil {_deb ._ege =_ad .NewAlpha (_deb ._egb .Bounds ());}else {for _ccda ,_ebb :=range _deb ._ege .Pix {_deb ._ege .Pix [_ccda ]=255-_ebb ;};};};func _edbd (_fgf _ad .Image )*_ad .RGBA {_bebg :=_fgf .Bounds ();
_ccec :=_ad .NewRGBA (_bebg );_bc .Draw (_ccec ,_bebg ,_fgf ,_bebg .Min ,_bc .Src );return _ccec ;};func (_fdb *Context )drawRegularPolygon (_aba int ,_cce ,_bebf ,_fbe ,_aeec float64 ){_ecb :=2*_b .Pi /float64 (_aba );_aeec -=_b .Pi /2;if _aba %2==0{_aeec +=_ecb /2;
};_fdb .NewSubPath ();for _badc :=0;_badc < _aba ;_badc ++{_fgcd :=_aeec +_ecb *float64 (_badc );_fdb .LineTo (_cce +_fbe *_b .Cos (_fgcd ),_bebf +_fbe *_b .Sin (_fgcd ));};_fdb .ClosePath ();};func (_bcc *Context )SetHexColor (x string ){_ddeg ,_gge ,_aee ,_cae :=_eece (x );
_bcc .SetRGBA255 (_ddeg ,_gge ,_aee ,_cae );};func (_daf *Context )DrawCircle (x ,y ,r float64 ){_daf .NewSubPath ();_daf .DrawEllipticalArc (x ,y ,r ,r ,0,2*_b .Pi );_daf .ClosePath ();};func _aedd (_ecaf _bg .Point )_fe .Point26_6 {return _fe .Point26_6 {X :_gfb (_ecaf .X ),Y :_gfb (_ecaf .Y )}};
func NewContextForImage (im _ad .Image )*Context {return NewContextForRGBA (_edbd (im ))};func (_feaa *Context )DrawRoundedRectangle (x ,y ,w ,h ,r float64 ){_gea ,_abf ,_ede ,_deff :=x ,x +r ,x +w -r ,x +w ;_afc ,_agde ,_ddec ,_efaa :=y ,y +r ,y +h -r ,y +h ;
_feaa .NewSubPath ();_feaa .MoveTo (_abf ,_afc );_feaa .LineTo (_ede ,_afc );_feaa .DrawArc (_ede ,_agde ,r ,_afae (270),_afae (360));_feaa .LineTo (_deff ,_ddec );_feaa .DrawArc (_ede ,_ddec ,r ,_afae (0),_afae (90));_feaa .LineTo (_abf ,_efaa );_feaa .DrawArc (_abf ,_ddec ,r ,_afae (90),_afae (180));
_feaa .LineTo (_gea ,_agde );_feaa .DrawArc (_abf ,_agde ,r ,_afae (180),_afae (270));_feaa .ClosePath ();};func (_eeb *patternPainter )Paint (ss []_fc .Span ,done bool ){_ddd :=_eeb ._dff .Bounds ();for _ ,_bdfd :=range ss {if _bdfd .Y < _ddd .Min .Y {continue ;
};if _bdfd .Y >=_ddd .Max .Y {return ;};if _bdfd .X0 < _ddd .Min .X {_bdfd .X0 =_ddd .Min .X ;};if _bdfd .X1 > _ddd .Max .X {_bdfd .X1 =_ddd .Max .X ;};if _bdfd .X0 >=_bdfd .X1 {continue ;};const _cef =1<<16-1;_dbe :=_bdfd .Y -_eeb ._dff .Rect .Min .Y ;
_ecef :=_bdfd .X0 -_eeb ._dff .Rect .Min .X ;_efga :=(_bdfd .Y -_eeb ._dff .Rect .Min .Y )*_eeb ._dff .Stride +(_bdfd .X0 -_eeb ._dff .Rect .Min .X )*4;_bbba :=_efga +(_bdfd .X1 -_bdfd .X0 )*4;for _eee ,_fdfg :=_efga ,_ecef ;_eee < _bbba ;_eee ,_fdfg =_eee +4,_fdfg +1{_gdde :=_bdfd .Alpha ;
if _eeb ._bbe !=nil {_gdde =_gdde *uint32 (_eeb ._bbe .AlphaAt (_fdfg ,_dbe ).A )/255;if _gdde ==0{continue ;};};_edfe :=_eeb ._ffee .ColorAt (_fdfg ,_dbe );_abge ,_dcdf ,_cfff ,_fgb :=_edfe .RGBA ();_ddefe :=uint32 (_eeb ._dff .Pix [_eee +0]);_bdca :=uint32 (_eeb ._dff .Pix [_eee +1]);
_aeeca :=uint32 (_eeb ._dff .Pix [_eee +2]);_gbbd :=uint32 (_eeb ._dff .Pix [_eee +3]);_cgeeb :=(_cef -(_fgb *_gdde /_cef ))*0x101;_eeb ._dff .Pix [_eee +0]=uint8 ((_ddefe *_cgeeb +_abge *_gdde )/_cef >>8);_eeb ._dff .Pix [_eee +1]=uint8 ((_bdca *_cgeeb +_dcdf *_gdde )/_cef >>8);
_eeb ._dff .Pix [_eee +2]=uint8 ((_aeeca *_cgeeb +_cfff *_gdde )/_cef >>8);_eeb ._dff .Pix [_eee +3]=uint8 ((_gbbd *_cgeeb +_fgb *_gdde )/_cef >>8);};};};func (_bebe *Context )Rotate (angle float64 ){_bebe ._abb =_bebe ._abb .Rotate (angle )};func (_cbf *Context )MeasureString (s string ,face _fg .Face )(_fedb ,_caf float64 ){_dfga :=&_fg .Drawer {Face :face };
_feab :=_dfga .MeasureString (s );return float64 (_feab >>6),_cbf ._fbg .Tf .Size ;};type patternPainter struct{_dff *_ad .RGBA ;_bbe *_ad .Alpha ;_ffee _dd .Pattern ;};func (_dbac *Context )Shear (x ,y float64 ){_dbac ._abb .Shear (x ,y )};func (_dgae *Context )stroke (_abcg _fc .Painter ){_egg :=_dgae ._bae ;
if len (_dgae ._ggf )> 0{_egg =_agb (_egg ,_dgae ._ggf ,_dgae ._bge );}else {_egg =_cadc (_bdb (_egg ));};_cea :=_dgae ._gega ;_cea .UseNonZeroWinding =true ;_cea .Clear ();_bca :=(_dgae ._abb .ScalingFactorX ()+_dgae ._abb .ScalingFactorY ())/2;_cea .AddStroke (_egg ,_gfb (_dgae ._dfg *_bca ),_dgae .capper (),_dgae .joiner ());
_cea .Rasterize (_abcg );};type circle struct{_bcbe ,_egc ,_fcg float64 };func (_aafc stops )Len ()int {return len (_aafc )};type Context struct{_gegf int ;_de int ;_gega *_fc .Rasterizer ;_egb *_ad .RGBA ;_ege *_ad .Alpha ;_gfe _af .Color ;_bgdg _dd .Pattern ;
_age _dd .Pattern ;_bae _fc .Path ;_efb _fc .Path ;_abg _bg .Point ;_ffe _bg .Point ;_dgd bool ;_ggf []float64 ;_bge float64 ;_dfg float64 ;_fff _dd .LineCap ;_bdd _dd .LineJoin ;_cdf _dd .FillRule ;_abb _bg .Matrix ;_fbg _dd .TextState ;_db []*Context ;
};func (_gdc *Context )Clip (){_gdc .ClipPreserve ();_gdc .ClearPath ()};func (_ebg *Context )SetLineJoin (lineJoin _dd .LineJoin ){_ebg ._bdd =lineJoin };func (_gd *Context )SetFillRule (fillRule _dd .FillRule ){_gd ._cdf =fillRule };func (_gab *Context )SetRGB (r ,g ,b float64 ){_gab .SetRGBA (r ,g ,b ,1)};
type stops []stop ;func _afae (_ecf float64 )float64 {return _ecf *_b .Pi /180};func _cgffd (_bgbf ,_gfa ,_gdad ,_bdc ,_fdbb ,_ece float64 )float64 {return _bgbf *_bdc +_gfa *_fdbb +_gdad *_ece ;};func _eece (_beg string )(_gac ,_eaf ,_aaef ,_afcc int ){_beg =_ec .TrimPrefix (_beg ,"\u0023");
_afcc =255;if len (_beg )==3{_bgcf :="\u00251\u0078\u0025\u0031\u0078\u0025\u0031x";_d .Sscanf (_beg ,_bgcf ,&_gac ,&_eaf ,&_aaef );_gac |=_gac <<4;_eaf |=_eaf <<4;_aaef |=_aaef <<4;};if len (_beg )==6{_dafa :="\u0025\u0030\u0032x\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";
_d .Sscanf (_beg ,_dafa ,&_gac ,&_eaf ,&_aaef );};if len (_beg )==8{_cafe :="\u0025\u00302\u0078\u0025\u00302\u0078\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";_d .Sscanf (_beg ,_cafe ,&_gac ,&_eaf ,&_aaef ,&_afcc );};return ;};func (_agded *Context )DrawEllipse (x ,y ,rx ,ry float64 ){_agded .NewSubPath ();
_agded .DrawEllipticalArc (x ,y ,rx ,ry ,0,2*_b .Pi );_agded .ClosePath ();};func (_eed *linearGradient )ColorAt (x ,y int )_af .Color {if len (_eed ._bdeg )==0{return _af .Transparent ;};_dcg ,_ffef :=float64 (x ),float64 (y );_gfeb ,_bdf ,_aagd ,_dcc :=_eed ._dgag ,_eed ._ddcc ,_eed ._cad ,_eed ._acf ;
_aae ,_fecf :=_aagd -_gfeb ,_dcc -_bdf ;if _fecf ==0&&_aae !=0{return _agab ((_dcg -_gfeb )/_aae ,_eed ._bdeg );};if _aae ==0&&_fecf !=0{return _agab ((_ffef -_bdf )/_fecf ,_eed ._bdeg );};_ebed :=_aae *(_dcg -_gfeb )+_fecf *(_ffef -_bdf );if _ebed < 0{return _eed ._bdeg [0]._cfdc ;
};_dgb :=_b .Hypot (_aae ,_fecf );_fbea :=((_dcg -_gfeb )*-_fecf +(_ffef -_bdf )*_aae )/(_dgb *_dgb );_bgbb ,_geff :=_gfeb +_fbea *-_fecf ,_bdf +_fbea *_aae ;_fda :=_b .Hypot (_dcg -_bgbb ,_ffef -_geff )/_dgb ;return _agab (_fda ,_eed ._bdeg );};func (_fdea *Context )drawString (_bbd string ,_ded _fg .Face ,_dbb ,_fdeb float64 ){_bdec :=&_fg .Drawer {Src :_ad .NewUniform (_fdea ._gfe ),Face :_ded ,Dot :_aedd (_bg .NewPoint (_dbb ,_fdeb ))};
_fbbbc :=rune (-1);for _ ,_bcb :=range _bbd {if _fbbbc >=0{_bdec .Dot .X +=_bdec .Face .Kern (_fbbbc ,_bcb );};_faf ,_gbb ,_egf ,_dgaa ,_eca :=_bdec .Face .Glyph (_bdec .Dot ,_bcb );if !_eca {continue ;};_bgb :=_faf .Sub (_faf .Min );_feac :=_ad .NewRGBA (_bgb );
_ae .DrawMask (_feac ,_bgb ,_bdec .Src ,_ad .Point {},_gbb ,_egf ,_ae .Over );var _fgdd *_ae .Options ;if _fdea ._ege !=nil {_fgdd =&_ae .Options {DstMask :_fdea ._ege ,DstMaskP :_ad .Point {}};};_efbc :=_fdea ._abb .Clone ().Translate (float64 (_faf .Min .X ),float64 (_faf .Min .Y ));
_agda :=_f .Aff3 {_efbc [0],_efbc [3],_efbc [6],_efbc [1],_efbc [4],_efbc [7]};_ae .BiLinear .Transform (_fdea ._egb ,_agda ,_feac ,_bgb ,_ae .Over ,_fgdd );_bdec .Dot .X +=_dgaa ;_fbbbc =_bcb ;};};func _bac (_dada ,_ebge ,_bce ,_ggda float64 )_dd .Gradient {_fdc :=&linearGradient {_dgag :_dada ,_ddcc :_ebge ,_cad :_bce ,_acf :_ggda };
return _fdc ;};func (_deeg *Context )capper ()_fc .Capper {switch _deeg ._fff {case _dd .LineCapButt :return _fc .ButtCapper ;case _dd .LineCapRound :return _fc .RoundCapper ;case _dd .LineCapSquare :return _fc .SquareCapper ;};return nil ;};func _cec (_ef ,_fa ,_ddf ,_fbf ,_ddc ,_ac ,_gec ,_ff ,_df float64 )(_bgc ,_cge float64 ){_fgd :=1-_df ;
_dc :=_fgd *_fgd *_fgd ;_geg :=3*_fgd *_fgd *_df ;_fd :=3*_fgd *_df *_df ;_ddef :=_df *_df *_df ;_bgc =_dc *_ef +_geg *_ddf +_fd *_ddc +_ddef *_gec ;_cge =_dc *_fa +_geg *_fbf +_fd *_ac +_ddef *_ff ;return ;};func (_gdb *Context )Translate (x ,y float64 ){_gdb ._abb =_gdb ._abb .Translate (x ,y )};
func (_bgdaa *Context )DrawString (s string ,face _fg .Face ,x ,y float64 ){_bgdaa .DrawStringAnchored (s ,face ,x ,y ,0,0);};func _egcd (_degg _ad .Image ,_bed repeatOp )_dd .Pattern {return &surfacePattern {_egfd :_degg ,_gdd :_bed };};func (_gcd *Context )FillPattern ()_dd .Pattern {return _gcd ._bgdg };
func (_egga *Context )DrawArc (x ,y ,r ,angle1 ,angle2 float64 ){_egga .DrawEllipticalArc (x ,y ,r ,r ,angle1 ,angle2 );};func _cafd (_ffg ,_dcbf _af .Color ,_fdf float64 )_af .Color {_caeg ,_cgeb ,_gff ,_deg :=_ffg .RGBA ();_ddff ,_bcab ,_gdcg ,_debb :=_dcbf .RGBA ();
return _af .RGBA {_cgd (_caeg ,_ddff ,_fdf ),_cgd (_cgeb ,_bcab ,_fdf ),_cgd (_gff ,_gdcg ,_fdf ),_cgd (_deg ,_debb ,_fdf )};};func (_daec *Context )CubicTo (x1 ,y1 ,x2 ,y2 ,x3 ,y3 float64 ){if !_daec ._dgd {_daec .MoveTo (x1 ,y1 );};_cda ,_dgg :=_daec ._ffe .X ,_daec ._ffe .Y ;
x1 ,y1 =_daec .Transform (x1 ,y1 );x2 ,y2 =_daec .Transform (x2 ,y2 );x3 ,y3 =_daec .Transform (x3 ,y3 );_def :=_cc (_cda ,_dgg ,x1 ,y1 ,x2 ,y2 ,x3 ,y3 );_dba :=_aedd (_daec ._ffe );for _ ,_gef :=range _def [1:]{_egd :=_aedd (_gef );if _egd ==_dba {continue ;
};_dba =_egd ;_daec ._bae .Add1 (_egd );_daec ._efb .Add1 (_egd );_daec ._ffe =_gef ;};};func (_fcba *Context )SetMask (mask *_ad .Alpha )error {if mask .Bounds ().Size ()!=_fcba ._egb .Bounds ().Size (){return _bd .New ("\u006d\u0061\u0073\u006b\u0020\u0073i\u007a\u0065\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068 \u0063\u006f\u006e\u0074\u0065\u0078\u0074 \u0073\u0069\u007a\u0065");
};_fcba ._ege =mask ;return nil ;};func (_aab *solidPattern )ColorAt (x ,y int )_af .Color {return _aab ._efag };func (_dee *Context )ClearPath (){_dee ._bae .Clear ();_dee ._efb .Clear ();_dee ._dgd =false };func (_fbbb *Context )SetStrokeStyle (pattern _dd .Pattern ){_fbbb ._age =pattern };
func (_dga *Context )QuadraticTo (x1 ,y1 ,x2 ,y2 float64 ){if !_dga ._dgd {_dga .MoveTo (x1 ,y1 );};x1 ,y1 =_dga .Transform (x1 ,y1 );x2 ,y2 =_dga .Transform (x2 ,y2 );_fbba :=_bg .NewPoint (x1 ,y1 );_ccc :=_bg .NewPoint (x2 ,y2 );_dge :=_aedd (_fbba );
_ea :=_aedd (_ccc );_dga ._bae .Add2 (_dge ,_ea );_dga ._efb .Add2 (_dge ,_ea );_dga ._ffe =_ccc ;};func (_gefg *Context )Push (){_ggeb :=*_gefg ;_gefg ._db =append (_gefg ._db ,&_ggeb )};func _dggd (_dccg _fe .Int26_6 )float64 {const _beaf ,_gecg =6,1<<6-1;
if _dccg >=0{return float64 (_dccg >>_beaf )+float64 (_dccg &_gecg )/64;};_dccg =-_dccg ;if _dccg >=0{return -(float64 (_dccg >>_beaf )+float64 (_dccg &_gecg )/64);};return 0;};func (_gdg *Context )SetRGBA255 (r ,g ,b ,a int ){_gdg ._gfe =_af .NRGBA {uint8 (r ),uint8 (g ),uint8 (b ),uint8 (a )};
_gdg .setFillAndStrokeColor (_gdg ._gfe );};type stop struct{_cfd float64 ;_cfdc _af .Color ;};func (_gdf *Context )TextState ()*_dd .TextState {return &_gdf ._fbg };func (_fdg *Context )joiner ()_fc .Joiner {switch _fdg ._bdd {case _dd .LineJoinBevel :return _fc .BevelJoiner ;
case _dd .LineJoinRound :return _fc .RoundJoiner ;};return nil ;};func (_aag *Context )fill (_bec _fc .Painter ){_bad :=_aag ._efb ;if _aag ._dgd {_bad =make (_fc .Path ,len (_aag ._efb ));copy (_bad ,_aag ._efb );_bad .Add1 (_aedd (_aag ._abg ));};_eaa :=_aag ._gega ;
_eaa .UseNonZeroWinding =_aag ._cdf ==_dd .FillRuleWinding ;_eaa .Clear ();_eaa .AddPath (_bad );_eaa .Rasterize (_bec );};func (_afab *Context )DrawStringAnchored (s string ,face _fg .Face ,x ,y ,ax ,ay float64 ){_cgff ,_fgde :=_afab .MeasureString (s ,face );
_afab .drawString (s ,face ,x -ax *_cgff ,y +ay *_fgde );};func (_cac *Context )DrawEllipticalArc (x ,y ,rx ,ry ,angle1 ,angle2 float64 ){const _aec =16;for _eba :=0;_eba < _aec ;_eba ++{_bfge :=float64 (_eba +0)/_aec ;_ccg :=float64 (_eba +1)/_aec ;_aca :=angle1 +(angle2 -angle1 )*_bfge ;
_bab :=angle1 +(angle2 -angle1 )*_ccg ;_babd :=x +rx *_b .Cos (_aca );_bfc :=y +ry *_b .Sin (_aca );_cbe :=x +rx *_b .Cos ((_aca +_bab )/2);_edf :=y +ry *_b .Sin ((_aca +_bab )/2);_ffed :=x +rx *_b .Cos (_bab );_bbb :=y +ry *_b .Sin (_bab );_cgfe :=2*_cbe -_babd /2-_ffed /2;
_gcce :=2*_edf -_bfc /2-_bbb /2;if _eba ==0{if _cac ._dgd {_cac .LineTo (_babd ,_bfc );}else {_cac .MoveTo (_babd ,_bfc );};};_cac .QuadraticTo (_cgfe ,_gcce ,_ffed ,_bbb );};};func _gfb (_cdff float64 )_fe .Int26_6 {return _fe .Int26_6 (_cdff *64)};func (_baa *Context )LineWidth ()float64 {return _baa ._dfg };
func _agab (_gad float64 ,_beee stops )_af .Color {if _gad <=0.0||len (_beee )==1{return _beee [0]._cfdc ;};_ade :=_beee [len (_beee )-1];if _gad >=_ade ._cfd {return _ade ._cfdc ;};for _bccf ,_bdfg :=range _beee [1:]{if _gad < _bdfg ._cfd {_gad =(_gad -_beee [_bccf ]._cfd )/(_bdfg ._cfd -_beee [_bccf ]._cfd );
return _cafd (_beee [_bccf ]._cfdc ,_bdfg ._cfdc ,_gad );};};return _ade ._cfdc ;};type repeatOp int ;type linearGradient struct{_dgag ,_ddcc ,_cad ,_acf float64 ;_bdeg stops ;};func _dbc (_ace [][]_bg .Point ,_cag []float64 ,_gcf float64 )[][]_bg .Point {var _fdeg [][]_bg .Point ;
if len (_cag )==0{return _ace ;};if len (_cag )==1{_cag =append (_cag ,_cag [0]);};for _ ,_adc :=range _ace {if len (_adc )< 2{continue ;};_bea :=_adc [0];_egcc :=1;_cgee :=0;_ebbf :=0.0;if _gcf !=0{var _egca float64 ;for _ ,_aegg :=range _cag {_egca +=_aegg ;
};_gcf =_b .Mod (_gcf ,_egca );if _gcf < 0{_gcf +=_egca ;};for _cbed ,_eab :=range _cag {_gcf -=_eab ;if _gcf < 0{_cgee =_cbed ;_ebbf =_eab +_gcf ;break ;};};};var _beaa []_bg .Point ;_beaa =append (_beaa ,_bea );for _egcc < len (_adc ){_edd :=_cag [_cgee ];
_egcg :=_adc [_egcc ];_gcfa :=_bea .Distance (_egcg );_bbca :=_edd -_ebbf ;if _gcfa > _bbca {_adea :=_bbca /_gcfa ;_abe :=_bea .Interpolate (_egcg ,_adea );_beaa =append (_beaa ,_abe );if _cgee %2==0&&len (_beaa )> 1{_fdeg =append (_fdeg ,_beaa );};_beaa =nil ;
_beaa =append (_beaa ,_abe );_ebbf =0;_bea =_abe ;_cgee =(_cgee +1)%len (_cag );}else {_beaa =append (_beaa ,_egcg );_bea =_egcg ;_ebbf +=_gcfa ;_egcc ++;};};if _cgee %2==0&&len (_beaa )> 1{_fdeg =append (_fdeg ,_beaa );};};return _fdeg ;};func (_aed *Context )Fill (){_aed .FillPreserve ();
_aed .ClearPath ()};type solidPattern struct{_efag _af .Color };func (_dfb *Context )Identity (){_dfb ._abb =_bg .IdentityMatrix ()};func (_efe *Context )Scale (x ,y float64 ){_efe ._abb =_efe ._abb .Scale (x ,y )};func (_ecc *Context )Image ()_ad .Image {return _ecc ._egb };
func (_adg *Context )Pop (){_fge :=*_adg ;_daef :=_adg ._db ;_gcdg :=_daef [len (_daef )-1];*_adg =*_gcdg ;_adg ._bae =_fge ._bae ;_adg ._efb =_fge ._efb ;_adg ._abg =_fge ._abg ;_adg ._ffe =_fge ._ffe ;_adg ._dgd =_fge ._dgd ;};func _cgd (_bcee ,_ced uint32 ,_ffcg float64 )uint8 {return uint8 (int32 (float64 (_bcee )*(1.0-_ffcg )+float64 (_ced )*_ffcg )>>8);
};func _bdb (_gaab _fc .Path )[][]_bg .Point {var _eaeb [][]_bg .Point ;var _cdd []_bg .Point ;var _cdg ,_fcee float64 ;for _abae :=0;_abae < len (_gaab );{switch _gaab [_abae ]{case 0:if len (_cdd )> 0{_eaeb =append (_eaeb ,_cdd );_cdd =nil ;};_fdbc :=_dggd (_gaab [_abae +1]);
_fbef :=_dggd (_gaab [_abae +2]);_cdd =append (_cdd ,_bg .NewPoint (_fdbc ,_fbef ));_cdg ,_fcee =_fdbc ,_fbef ;_abae +=4;case 1:_fffc :=_dggd (_gaab [_abae +1]);_decd :=_dggd (_gaab [_abae +2]);_cdd =append (_cdd ,_bg .NewPoint (_fffc ,_decd ));_cdg ,_fcee =_fffc ,_decd ;
_abae +=4;case 2:_acdg :=_dggd (_gaab [_abae +1]);_ecbe :=_dggd (_gaab [_abae +2]);_aaad :=_dggd (_gaab [_abae +3]);_efbcg :=_dggd (_gaab [_abae +4]);_gegaf :=_cf (_cdg ,_fcee ,_acdg ,_ecbe ,_aaad ,_efbcg );_cdd =append (_cdd ,_gegaf ...);_cdg ,_fcee =_aaad ,_efbcg ;
_abae +=6;case 3:_fcfa :=_dggd (_gaab [_abae +1]);_ddcf :=_dggd (_gaab [_abae +2]);_bcbba :=_dggd (_gaab [_abae +3]);_dgad :=_dggd (_gaab [_abae +4]);_cgdg :=_dggd (_gaab [_abae +5]);_ecce :=_dggd (_gaab [_abae +6]);_gfc :=_cc (_cdg ,_fcee ,_fcfa ,_ddcf ,_bcbba ,_dgad ,_cgdg ,_ecce );
_cdd =append (_cdd ,_gfc ...);_cdg ,_fcee =_cgdg ,_ecce ;_abae +=8;default:_c .Log .Debug ("\u0057\u0041\u0052\u004e: \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0070\u0061\u0074\u0068\u003a\u0020%\u0076",_gaab );return _eaeb ;};};if len (_cdd )> 0{_eaeb =append (_eaeb ,_cdd );
};return _eaeb ;};