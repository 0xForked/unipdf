//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package imagerender ;import (_cc "errors";_c "fmt";_ce "github.com/unidoc/freetype/raster";_ae "github.com/unidoc/unipdf/v3/common";_ge "github.com/unidoc/unipdf/v3/internal/transform";_fd "github.com/unidoc/unipdf/v3/render/internal/context";_d "golang.org/x/image/draw";
_fgb "golang.org/x/image/font";_ac "golang.org/x/image/math/f64";_db "golang.org/x/image/math/fixed";_ag "image";_fg "image/color";_af "image/draw";_f "math";_e "sort";_a "strings";);func _cbea (_eaga _ce .Path )[][]_ge .Point {var _ffef [][]_ge .Point ;
var _cgd []_ge .Point ;var _baf ,_bdcb float64 ;for _ceb :=0;_ceb < len (_eaga );{switch _eaga [_ceb ]{case 0:if len (_cgd )> 0{_ffef =append (_ffef ,_cgd );_cgd =nil ;};_beac :=_ddb (_eaga [_ceb +1]);_ffcd :=_ddb (_eaga [_ceb +2]);_cgd =append (_cgd ,_ge .NewPoint (_beac ,_ffcd ));
_baf ,_bdcb =_beac ,_ffcd ;_ceb +=4;case 1:_befg :=_ddb (_eaga [_ceb +1]);_agbd :=_ddb (_eaga [_ceb +2]);_cgd =append (_cgd ,_ge .NewPoint (_befg ,_agbd ));_baf ,_bdcb =_befg ,_agbd ;_ceb +=4;case 2:_efce :=_ddb (_eaga [_ceb +1]);_bca :=_ddb (_eaga [_ceb +2]);
_eca :=_ddb (_eaga [_ceb +3]);_ace :=_ddb (_eaga [_ceb +4]);_bcc :=_ca (_baf ,_bdcb ,_efce ,_bca ,_eca ,_ace );_cgd =append (_cgd ,_bcc ...);_baf ,_bdcb =_eca ,_ace ;_ceb +=6;case 3:_cecf :=_ddb (_eaga [_ceb +1]);_cga :=_ddb (_eaga [_ceb +2]);_faabe :=_ddb (_eaga [_ceb +3]);
_fea :=_ddb (_eaga [_ceb +4]);_dceg :=_ddb (_eaga [_ceb +5]);_cefe :=_ddb (_eaga [_ceb +6]);_caga :=_ed (_baf ,_bdcb ,_cecf ,_cga ,_faabe ,_fea ,_dceg ,_cefe );_cgd =append (_cgd ,_caga ...);_baf ,_bdcb =_dceg ,_cefe ;_ceb +=8;default:_ae .Log .Debug ("\u0057\u0041\u0052\u004e: \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0070\u0061\u0074\u0068\u003a\u0020%\u0076",_eaga );
return _ffef ;};};if len (_cgd )> 0{_ffef =append (_ffef ,_cgd );};return _ffef ;};func (_bcd *Context )SetRGBA255 (r ,g ,b ,a int ){_bcd ._fbfg =_fg .NRGBA {uint8 (r ),uint8 (g ),uint8 (b ),uint8 (a )};_bcd .setFillAndStrokeColor (_bcd ._fbfg );};func _gdfa (_badf [][]_ge .Point )_ce .Path {var _gbac _ce .Path ;
for _ ,_fdff :=range _badf {var _cfedd _db .Point26_6 ;for _bfb ,_fegd :=range _fdff {_cbd :=_gbae (_fegd );if _bfb ==0{_gbac .Start (_cbd );}else {_cgg :=_cbd .X -_cfedd .X ;_bebgb :=_cbd .Y -_cfedd .Y ;if _cgg < 0{_cgg =-_cgg ;};if _bebgb < 0{_bebgb =-_bebgb ;
};if _cgg +_bebgb > 8{_gbac .Add1 (_cbd );};};_cfedd =_cbd ;};};return _gbac ;};func (_cddc *Context )Clip (){_cddc .ClipPreserve ();_cddc .ClearPath ()};func (_cbf *Context )drawString (_fcd string ,_dfe _fgb .Face ,_geg ,_ceg float64 ){_bcg :=&_fgb .Drawer {Src :_ag .NewUniform (_cbf ._fbfg ),Face :_dfe ,Dot :_gbae (_ge .NewPoint (_geg ,_ceg ))};
_fbaf :=rune (-1);for _ ,_aadc :=range _fcd {if _fbaf >=0{_bcg .Dot .X +=_bcg .Face .Kern (_fbaf ,_aadc );};_acb ,_dgc ,_bdc ,_efge ,_agb :=_bcg .Face .Glyph (_bcg .Dot ,_aadc );if !_agb {continue ;};_feg :=_acb .Sub (_acb .Min );_dfb :=_ag .NewRGBA (_feg );
_d .DrawMask (_dfb ,_feg ,_bcg .Src ,_ag .Point {},_dgc ,_bdc ,_d .Over );var _cfef *_d .Options ;if _cbf ._edb !=nil {_cfef =&_d .Options {DstMask :_cbf ._edb ,DstMaskP :_ag .Point {}};};_afeef :=_cbf ._afc .Clone ().Translate (float64 (_acb .Min .X ),float64 (_acb .Min .Y ));
_gce :=_ac .Aff3 {_afeef [0],_afeef [3],_afeef [6],_afeef [1],_afeef [4],_afeef [7]};_d .BiLinear .Transform (_cbf ._adg ,_gce ,_dfb ,_feg ,_d .Over ,_cfef );_bcg .Dot .X +=_efge ;_fbaf =_aadc ;};};func (_dce *Context )DrawLine (x1 ,y1 ,x2 ,y2 float64 ){_dce .MoveTo (x1 ,y1 );
_dce .LineTo (x2 ,y2 )};func (_caf *Context )LineTo (x ,y float64 ){if !_caf ._ega {_caf .MoveTo (x ,y );}else {x ,y =_caf .Transform (x ,y );_bfe :=_ge .NewPoint (x ,y );_fee :=_gbae (_bfe );_caf ._gcad .Add1 (_fee );_caf ._bd .Add1 (_fee );_caf ._abd =_bfe ;
};};type repeatOp int ;func _bgff (_acf ,_cbec _fg .Color ,_cbeg float64 )_fg .Color {_cbfd ,_cdbc ,_gge ,_fgbb :=_acf .RGBA ();_ebg ,_cbb ,_ebee ,_ddg :=_cbec .RGBA ();return _fg .RGBA {_bece (_cbfd ,_ebg ,_cbeg ),_bece (_cdbc ,_cbb ,_cbeg ),_bece (_gge ,_ebee ,_cbeg ),_bece (_fgbb ,_ddg ,_cbeg )};
};type linearGradient struct{_bebf ,_gfd ,_bgcd ,_edd float64 ;_acg stops ;};type stops []stop ;func (_fce *Context )RotateAbout (angle ,x ,y float64 ){_fce .Translate (x ,y );_fce .Rotate (angle );_fce .Translate (-x ,-y );};func (_aag *Context )MoveTo (x ,y float64 ){if _aag ._ega {_aag ._bd .Add1 (_gbae (_aag ._bga ));
};x ,y =_aag .Transform (x ,y );_bf :=_ge .NewPoint (x ,y );_cfde :=_gbae (_bf );_aag ._gcad .Start (_cfde );_aag ._bd .Start (_cfde );_aag ._bga =_bf ;_aag ._abd =_bf ;_aag ._ega =true ;};func (_de *Context )SetLineCap (lineCap _fd .LineCap ){_de ._abed =lineCap };
func (_fdbb *Context )setFillAndStrokeColor (_gbe _fg .Color ){_fdbb ._fbfg =_gbe ;_fdbb ._fa =_acbb (_gbe );_fdbb ._acdf =_acbb (_gbe );};func (_edbd *radialGradient )AddColorStop (offset float64 ,color _fg .Color ){_edbd ._dbec =append (_edbd ._dbec ,stop {_eagg :offset ,_cada :color });
_e .Sort (_edbd ._dbec );};func (_gfcc *Context )Shear (x ,y float64 ){_gfcc ._afc .Shear (x ,y )};func (_cda *Context )SetColor (c _fg .Color ){_cda .setFillAndStrokeColor (c )};func (_dcgc *Context )DrawArc (x ,y ,r ,angle1 ,angle2 float64 ){_dcgc .DrawEllipticalArc (x ,y ,r ,r ,angle1 ,angle2 );
};func (_cee *Context )Push (){_begd :=*_cee ;_cee ._cdd =append (_cee ._cdd ,&_begd )};func (_egd *Context )ClearPath (){_egd ._gcad .Clear ();_egd ._bd .Clear ();_egd ._ega =false };func (_cdb *Context )SetHexColor (x string ){_ded ,_dbfe ,_ffdb ,_gda :=_eeb (x );
_cdb .SetRGBA255 (_ded ,_dbfe ,_ffdb ,_gda );};func (_ccac *Context )SetStrokeRGBA (r ,g ,b ,a float64 ){_ffg :=_fg .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_ccac ._acdf =_acbb (_ffg );};func (_bcfc *Context )SetFillRGBA (r ,g ,b ,a float64 ){_cf :=_fg .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};
_bcfc ._fbfg =_cf ;_bcfc ._fa =_acbb (_cf );};func (_bdf *Context )Image ()_ag .Image {return _bdf ._adg };func (_aaee *radialGradient )ColorAt (x ,y int )_fg .Color {if len (_aaee ._dbec )==0{return _fg .Transparent ;};_adff ,_efgbc :=float64 (x )+0.5-_aaee ._fcf ._geeb ,float64 (y )+0.5-_aaee ._fcf ._dcb ;
_dae :=_bea (_adff ,_efgbc ,_aaee ._fcf ._ggfc ,_aaee ._ecd ._geeb ,_aaee ._ecd ._dcb ,_aaee ._ecd ._ggfc );_egec :=_bea (_adff ,_efgbc ,-_aaee ._fcf ._ggfc ,_adff ,_efgbc ,_aaee ._fcf ._ggfc );if _aaee ._abedc ==0{if _dae ==0{return _fg .Transparent ;
};_dda :=0.5*_egec /_dae ;if _dda *_aaee ._ecd ._ggfc >=_aaee ._bcb {return _adaa (_dda ,_aaee ._dbec );};return _fg .Transparent ;};_edce :=_bea (_dae ,_aaee ._abedc ,0,_dae ,-_egec ,0);if _edce >=0{_afa :=_f .Sqrt (_edce );_eff :=(_dae +_afa )*_aaee ._edc ;
_dabe :=(_dae -_afa )*_aaee ._edc ;if _eff *_aaee ._ecd ._ggfc >=_aaee ._bcb {return _adaa (_eff ,_aaee ._dbec );}else if _dabe *_aaee ._ecd ._ggfc >=_aaee ._bcb {return _adaa (_dabe ,_aaee ._dbec );};};return _fg .Transparent ;};type circle struct{_geeb ,_dcb ,_ggfc float64 };
func _bea (_faab ,_gba ,_bde ,_aae ,_gbeb ,_fgbg float64 )float64 {return _faab *_aae +_gba *_gbeb +_bde *_fgbg ;};func (_dcd *Context )DrawPoint (x ,y ,r float64 ){_dcd .Push ();_bdd ,_bebg :=_dcd .Transform (x ,y );_dcd .Identity ();_dcd .DrawCircle (_bdd ,_bebg ,r );
_dcd .Pop ();};func (_age *Context )ClosePath (){if _age ._ega {_aaf :=_gbae (_age ._bga );_age ._gcad .Add1 (_aaf );_age ._bd .Add1 (_aaf );_age ._abd =_age ._bga ;};};func (_baed *Context )drawRegularPolygon (_deg int ,_efgb ,_fdg ,_bfg ,_ggf float64 ){_cgcg :=2*_f .Pi /float64 (_deg );
_ggf -=_f .Pi /2;if _deg %2==0{_ggf +=_cgcg /2;};_baed .NewSubPath ();for _adgf :=0;_adgf < _deg ;_adgf ++{_dgb :=_ggf +_cgcg *float64 (_adgf );_baed .LineTo (_efgb +_bfg *_f .Cos (_dgb ),_fdg +_bfg *_f .Sin (_dgb ));};_baed .ClosePath ();};func (_fgg *Context )Clear (){_cgea :=_ag .NewUniform (_fgg ._fbfg );
_d .Draw (_fgg ._adg ,_fgg ._adg .Bounds (),_cgea ,_ag .Point {},_d .Src );};type radialGradient struct{_fcf ,_befa ,_ecd circle ;_abedc ,_edc float64 ;_bcb float64 ;_dbec stops ;};type patternPainter struct{_eec *_ag .RGBA ;_fgge *_ag .Alpha ;_dgcb _fd .Pattern ;
};func (_eaf *Context )Identity (){_eaf ._afc =_ge .IdentityMatrix ()};func (_cae *Context )NewSubPath (){if _cae ._ega {_cae ._bd .Add1 (_gbae (_cae ._bga ));};_cae ._ega =false ;};func (_geb *Context )DrawRectangle (x ,y ,w ,h float64 ){_geb .NewSubPath ();
_geb .MoveTo (x ,y );_geb .LineTo (x +w ,y );_geb .LineTo (x +w ,y +h );_geb .LineTo (x ,y +h );_geb .ClosePath ();};func (_ddd *Context )LineWidth ()float64 {return _ddd ._ea };func (_bgfe *Context )Pop (){_ccec :=*_bgfe ;_dcdc :=_bgfe ._cdd ;_ecef :=_dcdc [len (_dcdc )-1];
*_bgfe =*_ecef ;_bgfe ._gcad =_ccec ._gcad ;_bgfe ._bd =_ccec ._bd ;_bgfe ._bga =_ccec ._bga ;_bgfe ._abd =_ccec ._abd ;_bgfe ._ega =_ccec ._ega ;};func (_cef *Context )fill (_bgd _ce .Painter ){_ebc :=_cef ._bd ;if _cef ._ega {_ebc =make (_ce .Path ,len (_cef ._bd ));
copy (_ebc ,_cef ._bd );_ebc .Add1 (_gbae (_cef ._bga ));};_fgd :=_cef ._cca ;_fgd .UseNonZeroWinding =_cef ._dcg ==_fd .FillRuleWinding ;_fgd .Clear ();_fgd .AddPath (_ebc );_fgd .Rasterize (_bgd );};func (_cff *Context )DrawEllipse (x ,y ,rx ,ry float64 ){_cff .NewSubPath ();
_cff .DrawEllipticalArc (x ,y ,rx ,ry ,0,2*_f .Pi );_cff .ClosePath ();};func (_ebe *Context )Height ()int {return _ebe ._geab };type Context struct{_ddeg int ;_geab int ;_cca *_ce .Rasterizer ;_adg *_ag .RGBA ;_edb *_ag .Alpha ;_fbfg _fg .Color ;_fa _fd .Pattern ;
_acdf _fd .Pattern ;_gcad _ce .Path ;_bd _ce .Path ;_bga _ge .Point ;_abd _ge .Point ;_ega bool ;_abc []float64 ;_fdbg float64 ;_ea float64 ;_abed _fd .LineCap ;_fda _fd .LineJoin ;_dcg _fd .FillRule ;_afc _ge .Matrix ;_ada _fd .TextState ;_cdd []*Context ;
};func (_ecg *Context )SetDash (dashes ...float64 ){_ecg ._abc =dashes };func (_bag *Context )DrawStringAnchored (s string ,face _fgb .Face ,x ,y ,ax ,ay float64 ){_abgg ,_dab :=_bag .MeasureString (s ,face );_bag .drawString (s ,face ,x -ax *_abgg ,y +ay *_dab );
};func (_ddda *Context )AsMask ()*_ag .Alpha {_fac :=_ag .NewAlpha (_ddda ._adg .Bounds ());_d .Draw (_fac ,_ddda ._adg .Bounds (),_ddda ._adg ,_ag .Point {},_d .Src );return _fac ;};type surfacePattern struct{_bac _ag .Image ;_ddgd repeatOp ;};const (_egdd repeatOp =iota ;
_ffgd ;_aca ;_bff ;);func _ed (_ba ,_ee ,_eg ,_abf ,_gee ,_eef ,_fb ,_be float64 )[]_ge .Point {_acda :=(_f .Hypot (_eg -_ba ,_abf -_ee )+_f .Hypot (_gee -_eg ,_eef -_abf )+_f .Hypot (_fb -_gee ,_be -_eef ));_gdd :=int (_acda +0.5);if _gdd < 4{_gdd =4;
};_gef :=float64 (_gdd )-1;_abb :=make ([]_ge .Point ,_gdd );for _cb :=0;_cb < _gdd ;_cb ++{_dde :=float64 (_cb )/_gef ;_cd ,_ad :=_fec (_ba ,_ee ,_eg ,_abf ,_gee ,_eef ,_fb ,_be ,_dde );_abb [_cb ]=_ge .NewPoint (_cd ,_ad );};return _abb ;};func (_aaad *Context )ShearAbout (sx ,sy ,x ,y float64 ){_aaad .Translate (x ,y );
_aaad .Shear (sx ,sy );_aaad .Translate (-x ,-y );};func _dagc (_fgcb _ag .Image )*_ag .RGBA {_cbba :=_fgcb .Bounds ();_fgdf :=_ag .NewRGBA (_cbba );_af .Draw (_fgdf ,_cbba ,_fgcb ,_cbba .Min ,_af .Src );return _fgdf ;};func _gffc (_ddga float64 )float64 {return _ddga *_f .Pi /180};
func (_gbf stops )Swap (i ,j int ){_gbf [i ],_gbf [j ]=_gbf [j ],_gbf [i ]};func _bba (_efe _ce .Path ,_cbfe []float64 ,_dadf float64 )_ce .Path {return _gdfa (_dag (_cbea (_efe ),_cbfe ,_dadf ));};func (_dbaa *Context )SetMatrix (m _ge .Matrix ){_dbaa ._afc =m };
func (_fgc *Context )Matrix ()_ge .Matrix {return _fgc ._afc };func _aecd (_gad float64 )_db .Int26_6 {return _db .Int26_6 (_gad *64)};func (_ebea *Context )capper ()_ce .Capper {switch _ebea ._abed {case _fd .LineCapButt :return _ce .ButtCapper ;case _fd .LineCapRound :return _ce .RoundCapper ;
case _fd .LineCapSquare :return _ce .SquareCapper ;};return nil ;};func (_efgd *Context )Fill (){_efgd .FillPreserve ();_efgd .ClearPath ()};func NewRadialGradient (x0 ,y0 ,r0 ,x1 ,y1 ,r1 float64 )_fd .Gradient {_gaa :=circle {x0 ,y0 ,r0 };_gegd :=circle {x1 ,y1 ,r1 };
_ebd :=circle {x1 -x0 ,y1 -y0 ,r1 -r0 };_bb :=_bea (_ebd ._geeb ,_ebd ._dcb ,-_ebd ._ggfc ,_ebd ._geeb ,_ebd ._dcb ,_ebd ._ggfc );var _efb float64 ;if _bb !=0{_efb =1.0/_bb ;};_fbfd :=-_gaa ._ggfc ;_dca :=&radialGradient {_fcf :_gaa ,_befa :_gegd ,_ecd :_ebd ,_abedc :_bb ,_edc :_efb ,_bcb :_fbfd };
return _dca ;};func (_bda *Context )SetRGB255 (r ,g ,b int ){_bda .SetRGBA255 (r ,g ,b ,255)};func _dag (_dad [][]_ge .Point ,_gacb []float64 ,_fga float64 )[][]_ge .Point {var _aeb [][]_ge .Point ;if len (_gacb )==0{return _dad ;};if len (_gacb )==1{_gacb =append (_gacb ,_gacb [0]);
};for _ ,_efa :=range _dad {if len (_efa )< 2{continue ;};_gbfe :=_efa [0];_eda :=1;_fdf :=0;_bdaa :=0.0;if _fga !=0{var _bfac float64 ;for _ ,_ggge :=range _gacb {_bfac +=_ggge ;};_fga =_f .Mod (_fga ,_bfac );if _fga < 0{_fga +=_bfac ;};for _ebed ,_gcbg :=range _gacb {_fga -=_gcbg ;
if _fga < 0{_fdf =_ebed ;_bdaa =_gcbg +_fga ;break ;};};};var _afd []_ge .Point ;_afd =append (_afd ,_gbfe );for _eda < len (_efa ){_gafg :=_gacb [_fdf ];_bgbd :=_efa [_eda ];_gefd :=_gbfe .Distance (_bgbd );_abag :=_gafg -_bdaa ;if _gefd > _abag {_fbe :=_abag /_gefd ;
_dfgd :=_gbfe .Interpolate (_bgbd ,_fbe );_afd =append (_afd ,_dfgd );if _fdf %2==0&&len (_afd )> 1{_aeb =append (_aeb ,_afd );};_afd =nil ;_afd =append (_afd ,_dfgd );_bdaa =0;_gbfe =_dfgd ;_fdf =(_fdf +1)%len (_gacb );}else {_afd =append (_afd ,_bgbd );
_gbfe =_bgbd ;_bdaa +=_gefd ;_eda ++;};};if _fdf %2==0&&len (_afd )> 1{_aeb =append (_aeb ,_afd );};};return _aeb ;};func (_abbc *Context )MeasureString (s string ,face _fgb .Face )(_gde ,_abdg float64 ){_ece :=&_fgb .Drawer {Face :face };_gcc :=_ece .MeasureString (s );
return float64 (_gcc >>6),_abbc ._ada .Tf .Size ;};func (_caed stops )Less (i ,j int )bool {return _caed [i ]._eagg < _caed [j ]._eagg };func (_cbe *Context )ClipPreserve (){_eed :=_ag .NewAlpha (_ag .Rect (0,0,_cbe ._ddeg ,_cbe ._geab ));_dfce :=_ce .NewAlphaOverPainter (_eed );
_cbe .fill (_dfce );if _cbe ._edb ==nil {_cbe ._edb =_eed ;}else {_bad :=_ag .NewAlpha (_ag .Rect (0,0,_cbe ._ddeg ,_cbe ._geab ));_d .DrawMask (_bad ,_bad .Bounds (),_eed ,_ag .Point {},_cbe ._edb ,_ag .Point {},_d .Over );_cbe ._edb =_bad ;};};func NewLinearGradient (x0 ,y0 ,x1 ,y1 float64 )_fd .Gradient {_cfeg :=&linearGradient {_bebf :x0 ,_gfd :y0 ,_bgcd :x1 ,_edd :y1 };
return _cfeg ;};func (_cge *Context )ResetClip (){_cge ._edb =nil };func _fdgg (_fdda _ag .Image ,_cdf repeatOp )_fd .Pattern {return &surfacePattern {_bac :_fdda ,_ddgd :_cdf };};func (_acba *Context )Rotate (angle float64 ){_acba ._afc =_acba ._afc .Rotate (angle )};
func (_dba *Context )stroke (_aad _ce .Painter ){_ffb :=_dba ._gcad ;if len (_dba ._abc )> 0{_ffb =_bba (_ffb ,_dba ._abc ,_dba ._fdbg );}else {_ffb =_gdfa (_cbea (_ffb ));};_edbb :=_dba ._cca ;_edbb .UseNonZeroWinding =true ;_edbb .Clear ();_bae :=(_dba ._afc .ScalingFactorX ()+_dba ._afc .ScalingFactorY ())/2;
_edbb .AddStroke (_ffb ,_aecd (_dba ._ea *_bae ),_dba .capper (),_dba .joiner ());_edbb .Rasterize (_aad );};func (_dcce *solidPattern )ColorAt (x ,y int )_fg .Color {return _dcce ._egbb };var (_gea =_acbb (_fg .White );_fbf =_acbb (_fg .Black ););func (_aga *Context )Stroke (){_aga .StrokePreserve ();
_aga .ClearPath ()};func (_gga *Context )Scale (x ,y float64 ){_gga ._afc =_gga ._afc .Scale (x ,y )};func (_gdda *Context )SetRGB (r ,g ,b float64 ){_gdda .SetRGBA (r ,g ,b ,1)};func (_faa *Context )Width ()int {return _faa ._ddeg };func _gbae (_bcec _ge .Point )_db .Point26_6 {return _db .Point26_6 {X :_aecd (_bcec .X ),Y :_aecd (_bcec .Y )}};
func (_ffd *Context )SetLineWidth (lineWidth float64 ){_ffd ._ea =lineWidth };func _dbf (_ff ,_ced ,_ef ,_dd ,_b ,_gc ,_agf float64 )(_dc ,_da float64 ){_aa :=1-_agf ;_ec :=_aa *_aa ;_df :=2*_aa *_agf ;_acd :=_agf *_agf ;_dc =_ec *_ff +_df *_ef +_acd *_b ;
_da =_ec *_ced +_df *_dd +_acd *_gc ;return ;};func _eeb (_cebe string )(_cegb ,_cgbc ,_cddcd ,_cfcf int ){_cebe =_a .TrimPrefix (_cebe ,"\u0023");_cfcf =255;if len (_cebe )==3{_feab :="\u00251\u0078\u0025\u0031\u0078\u0025\u0031x";_c .Sscanf (_cebe ,_feab ,&_cegb ,&_cgbc ,&_cddcd );
_cegb |=_cegb <<4;_cgbc |=_cgbc <<4;_cddcd |=_cddcd <<4;};if len (_cebe )==6{_fbgf :="\u0025\u0030\u0032x\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";_c .Sscanf (_cebe ,_fbgf ,&_cegb ,&_cgbc ,&_cddcd );};if len (_cebe )==8{_bdec :="\u0025\u00302\u0078\u0025\u00302\u0078\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";
_c .Sscanf (_cebe ,_bdec ,&_cegb ,&_cgbc ,&_cddcd ,&_cfcf );};return ;};func (_cdda *Context )DrawImageAnchored (im _ag .Image ,x ,y int ,ax ,ay float64 ){_ege :=im .Bounds ().Size ();x -=int (ax *float64 (_ege .X ));y -=int (ay *float64 (_ege .Y ));_bgbf :=_d .BiLinear ;
_becd :=_cdda ._afc .Clone ().Translate (float64 (x ),float64 (y ));_ggg :=_ac .Aff3 {_becd [0],_becd [3],_becd [6],_becd [1],_becd [4],_becd [7]};if _cdda ._edb ==nil {_bgbf .Transform (_cdda ._adg ,_ggg ,im ,im .Bounds (),_d .Over ,nil );}else {_bgbf .Transform (_cdda ._adg ,_ggg ,im ,im .Bounds (),_d .Over ,&_d .Options {DstMask :_cdda ._edb ,DstMaskP :_ag .Point {}});
};};func (_cad *Context )DrawString (s string ,face _fgb .Face ,x ,y float64 ){_cad .DrawStringAnchored (s ,face ,x ,y ,0,0);};func _ca (_ffc ,_bc ,_fe ,_ffa ,_dbfa ,_gd float64 )[]_ge .Point {_ccg :=(_f .Hypot (_fe -_ffc ,_ffa -_bc )+_f .Hypot (_dbfa -_fe ,_gd -_ffa ));
_bg :=int (_ccg +0.5);if _bg < 4{_bg =4;};_ab :=float64 (_bg )-1;_fdb :=make ([]_ge .Point ,_bg );for _gb :=0;_gb < _bg ;_gb ++{_fc :=float64 (_gb )/_ab ;_acde ,_fgf :=_dbf (_ffc ,_bc ,_fe ,_ffa ,_dbfa ,_gd ,_fc );_fdb [_gb ]=_ge .NewPoint (_acde ,_fgf );
};return _fdb ;};func (_bef *linearGradient )AddColorStop (offset float64 ,color _fg .Color ){_bef ._acg =append (_bef ._acg ,stop {_eagg :offset ,_cada :color });_e .Sort (_bef ._acg );};func (_ffdbb *Context )QuadraticTo (x1 ,y1 ,x2 ,y2 float64 ){if !_ffdbb ._ega {_ffdbb .MoveTo (x1 ,y1 );
};x1 ,y1 =_ffdbb .Transform (x1 ,y1 );x2 ,y2 =_ffdbb .Transform (x2 ,y2 );_fae :=_ge .NewPoint (x1 ,y1 );_ggc :=_ge .NewPoint (x2 ,y2 );_fba :=_gbae (_fae );_cce :=_gbae (_ggc );_ffdbb ._gcad .Add2 (_fba ,_cce );_ffdbb ._bd .Add2 (_fba ,_cce );_ffdbb ._abd =_ggc ;
};func (_eead *Context )TextState ()*_fd .TextState {return &_eead ._ada };type solidPattern struct{_egbb _fg .Color };func (_ga *Context )SetFillRule (fillRule _fd .FillRule ){_ga ._dcg =fillRule };func (_fag *Context )StrokePattern ()_fd .Pattern {return _fag ._acdf };
func (_dfc *Context )SetFillStyle (pattern _fd .Pattern ){if _gag ,_bcf :=pattern .(*solidPattern );_bcf {_dfc ._fbfg =_gag ._egbb ;};_dfc ._fa =pattern ;};func (_baa *Context )SetLineJoin (lineJoin _fd .LineJoin ){_baa ._fda =lineJoin };func NewContextForRGBA (im *_ag .RGBA )*Context {_edf :=im .Bounds ().Size ().X ;
_gbc :=im .Bounds ().Size ().Y ;return &Context {_ddeg :_edf ,_geab :_gbc ,_cca :_ce .NewRasterizer (_edf ,_gbc ),_adg :im ,_fbfg :_fg .Transparent ,_fa :_gea ,_acdf :_fbf ,_ea :1,_dcg :_fd .FillRuleWinding ,_afc :_ge .IdentityMatrix (),_ada :_fd .NewTextState ()};
};func _fec (_gf ,_gcb ,_aba ,_dff ,_bgb ,_gca ,_cg ,_fdbf ,_gg float64 )(_abe ,_eb float64 ){_aaa :=1-_gg ;_afe :=_aaa *_aaa *_aaa ;_ffe :=3*_aaa *_aaa *_gg ;_gdf :=3*_aaa *_gg *_gg ;_efg :=_gg *_gg *_gg ;_abe =_afe *_gf +_ffe *_aba +_gdf *_bgb +_efg *_cg ;
_eb =_afe *_gcb +_ffe *_dff +_gdf *_gca +_efg *_fdbf ;return ;};func (_abg *Context )SetMask (mask *_ag .Alpha )error {if mask .Bounds ().Size ()!=_abg ._adg .Bounds ().Size (){return _cc .New ("\u006d\u0061\u0073\u006b\u0020\u0073i\u007a\u0065\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068 \u0063\u006f\u006e\u0074\u0065\u0078\u0074 \u0073\u0069\u007a\u0065");
};_abg ._edb =mask ;return nil ;};func NewContextForImage (im _ag .Image )*Context {return NewContextForRGBA (_dagc (im ))};type stop struct{_eagg float64 ;_cada _fg .Color ;};func _feeg (_bdb *_ag .RGBA ,_ebdf *_ag .Alpha ,_gcd _fd .Pattern )*patternPainter {return &patternPainter {_bdb ,_ebdf ,_gcd };
};func (_afcd *Context )Translate (x ,y float64 ){_afcd ._afc =_afcd ._afc .Translate (x ,y )};func (_bfef *Context )DrawCircle (x ,y ,r float64 ){_bfef .NewSubPath ();_bfef .DrawEllipticalArc (x ,y ,r ,r ,0,2*_f .Pi );_bfef .ClosePath ();};func (_faf *Context )CubicTo (x1 ,y1 ,x2 ,y2 ,x3 ,y3 float64 ){if !_faf ._ega {_faf .MoveTo (x1 ,y1 );
};_aec ,_fbc :=_faf ._abd .X ,_faf ._abd .Y ;x1 ,y1 =_faf .Transform (x1 ,y1 );x2 ,y2 =_faf .Transform (x2 ,y2 );x3 ,y3 =_faf .Transform (x3 ,y3 );_ade :=_ed (_aec ,_fbc ,x1 ,y1 ,x2 ,y2 ,x3 ,y3 );_eefg :=_gbae (_faf ._abd );for _ ,_bgf :=range _ade [1:]{_cgc :=_gbae (_bgf );
if _cgc ==_eefg {continue ;};_eefg =_cgc ;_faf ._gcad .Add1 (_cgc );_faf ._bd .Add1 (_cgc );_faf ._abd =_bgf ;};};func (_ddc *patternPainter )Paint (ss []_ce .Span ,done bool ){_baedc :=_ddc ._eec .Bounds ();for _ ,_eabd :=range ss {if _eabd .Y < _baedc .Min .Y {continue ;
};if _eabd .Y >=_baedc .Max .Y {return ;};if _eabd .X0 < _baedc .Min .X {_eabd .X0 =_baedc .Min .X ;};if _eabd .X1 > _baedc .Max .X {_eabd .X1 =_baedc .Max .X ;};if _eabd .X0 >=_eabd .X1 {continue ;};const _acaa =1<<16-1;_dddc :=_eabd .Y -_ddc ._eec .Rect .Min .Y ;
_ccfd :=_eabd .X0 -_ddc ._eec .Rect .Min .X ;_aaaa :=(_eabd .Y -_ddc ._eec .Rect .Min .Y )*_ddc ._eec .Stride +(_eabd .X0 -_ddc ._eec .Rect .Min .X )*4;_ffae :=_aaaa +(_eabd .X1 -_eabd .X0 )*4;for _gbcf ,_egda :=_aaaa ,_ccfd ;_gbcf < _ffae ;_gbcf ,_egda =_gbcf +4,_egda +1{_ffab :=_eabd .Alpha ;
if _ddc ._fgge !=nil {_ffab =_ffab *uint32 (_ddc ._fgge .AlphaAt (_egda ,_dddc ).A )/255;if _ffab ==0{continue ;};};_cdc :=_ddc ._dgcb .ColorAt (_egda ,_dddc );_fbafa ,_begde ,_ged ,_bdaaa :=_cdc .RGBA ();_ccc :=uint32 (_ddc ._eec .Pix [_gbcf +0]);_edfe :=uint32 (_ddc ._eec .Pix [_gbcf +1]);
_afg :=uint32 (_ddc ._eec .Pix [_gbcf +2]);_gfg :=uint32 (_ddc ._eec .Pix [_gbcf +3]);_aafd :=(_acaa -(_bdaaa *_ffab /_acaa ))*0x101;_ddc ._eec .Pix [_gbcf +0]=uint8 ((_ccc *_aafd +_fbafa *_ffab )/_acaa >>8);_ddc ._eec .Pix [_gbcf +1]=uint8 ((_edfe *_aafd +_begde *_ffab )/_acaa >>8);
_ddc ._eec .Pix [_gbcf +2]=uint8 ((_afg *_aafd +_ged *_ffab )/_acaa >>8);_ddc ._eec .Pix [_gbcf +3]=uint8 ((_gfg *_aafd +_bdaaa *_ffab )/_acaa >>8);};};};func (_gffg *surfacePattern )ColorAt (x ,y int )_fg .Color {_cbg :=_gffg ._bac .Bounds ();switch _gffg ._ddgd {case _ffgd :if y >=_cbg .Dy (){return _fg .Transparent ;
};case _aca :if x >=_cbg .Dx (){return _fg .Transparent ;};case _bff :if x >=_cbg .Dx ()||y >=_cbg .Dy (){return _fg .Transparent ;};};x =x %_cbg .Dx ()+_cbg .Min .X ;y =y %_cbg .Dy ()+_cbg .Min .Y ;return _gffg ._bac .At (x ,y );};func _ddb (_gcbe _db .Int26_6 )float64 {const _gfa ,_eefc =6,1<<6-1;
if _gcbe >=0{return float64 (_gcbe >>_gfa )+float64 (_gcbe &_eefc )/64;};_gcbe =-_gcbe ;if _gcbe >=0{return -(float64 (_gcbe >>_gfa )+float64 (_gcbe &_eefc )/64);};return 0;};func _adaa (_gaf float64 ,_badg stops )_fg .Color {if _gaf <=0.0||len (_badg )==1{return _badg [0]._cada ;
};_ebca :=_badg [len (_badg )-1];if _gaf >=_ebca ._eagg {return _ebca ._cada ;};for _dgd ,_bce :=range _badg [1:]{if _gaf < _bce ._eagg {_gaf =(_gaf -_badg [_dgd ]._eagg )/(_bce ._eagg -_badg [_dgd ]._eagg );return _bgff (_badg [_dgd ]._cada ,_bce ._cada ,_gaf );
};};return _ebca ._cada ;};func NewContext (width ,height int )*Context {return NewContextForRGBA (_ag .NewRGBA (_ag .Rect (0,0,width ,height )));};func (_fdcd *Context )SetStrokeStyle (pattern _fd .Pattern ){_fdcd ._acdf =pattern };func (_gfe *Context )FillPreserve (){var _eea _ce .Painter ;
if _gfe ._edb ==nil {if _fbg ,_ccf :=_gfe ._fa .(*solidPattern );_ccf {_afee :=_ce .NewRGBAPainter (_gfe ._adg );_afee .SetColor (_fbg ._egbb );_eea =_afee ;};};if _eea ==nil {_eea =_feeg (_gfe ._adg ,_gfe ._edb ,_gfe ._fa );};_gfe .fill (_eea );};func (_dcee *linearGradient )ColorAt (x ,y int )_fg .Color {if len (_dcee ._acg )==0{return _fg .Transparent ;
};_bgba ,_ebcd :=float64 (x ),float64 (y );_degg ,_gff ,_efc ,_cag :=_dcee ._bebf ,_dcee ._gfd ,_dcee ._bgcd ,_dcee ._edd ;_fgga ,_dbfb :=_efc -_degg ,_cag -_gff ;if _dbfb ==0&&_fgga !=0{return _adaa ((_bgba -_degg )/_fgga ,_dcee ._acg );};if _fgga ==0&&_dbfb !=0{return _adaa ((_ebcd -_gff )/_dbfb ,_dcee ._acg );
};_cbc :=_fgga *(_bgba -_degg )+_dbfb *(_ebcd -_gff );if _cbc < 0{return _dcee ._acg [0]._cada ;};_adc :=_f .Hypot (_fgga ,_dbfb );_eab :=((_bgba -_degg )*-_dbfb +(_ebcd -_gff )*_fgga )/(_adc *_adc );_egb ,_adef :=_degg +_eab *-_dbfb ,_gff +_eab *_fgga ;
_geee :=_f .Hypot (_bgba -_egb ,_ebcd -_adef )/_adc ;return _adaa (_geee ,_dcee ._acg );};func _acbb (_bfab _fg .Color )_fd .Pattern {return &solidPattern {_egbb :_bfab }};func (_fdc *Context )SetDashOffset (offset float64 ){_fdc ._fdbg =offset };func (_fage *Context )DrawEllipticalArc (x ,y ,rx ,ry ,angle1 ,angle2 float64 ){const _fcb =16;
for _geec :=0;_geec < _fcb ;_geec ++{_ffeg :=float64 (_geec +0)/_fcb ;_agfb :=float64 (_geec +1)/_fcb ;_adee :=angle1 +(angle2 -angle1 )*_ffeg ;_dcc :=angle1 +(angle2 -angle1 )*_agfb ;_dbg :=x +rx *_f .Cos (_adee );_cdbe :=y +ry *_f .Sin (_adee );_dg :=x +rx *_f .Cos ((_adee +_dcc )/2);
_dddac :=y +ry *_f .Sin ((_adee +_dcc )/2);_adf :=x +rx *_f .Cos (_dcc );_aaae :=y +ry *_f .Sin (_dcc );_gfc :=2*_dg -_dbg /2-_adf /2;_cfed :=2*_dddac -_cdbe /2-_aaae /2;if _geec ==0{if _fage ._ega {_fage .LineTo (_dbg ,_cdbe );}else {_fage .MoveTo (_dbg ,_cdbe );
};};_fage .QuadraticTo (_gfc ,_cfed ,_adf ,_aaae );};};func (_aac stops )Len ()int {return len (_aac )};func (_fdd *Context )SetPixel (x ,y int ){_fdd ._adg .Set (x ,y ,_fdd ._fbfg )};func (_cfd *Context )SetRGBA (r ,g ,b ,a float64 ){_cfd ._fbfg =_fg .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};
_cfd .setFillAndStrokeColor (_cfd ._fbfg );};func (_gec *Context )StrokePreserve (){var _bfa _ce .Painter ;if _gec ._edb ==nil {if _bcde ,_cfe :=_gec ._acdf .(*solidPattern );_cfe {_bgc :=_ce .NewRGBAPainter (_gec ._adg );_bgc .SetColor (_bcde ._egbb );
_bfa =_bgc ;};};if _bfa ==nil {_bfa =_feeg (_gec ._adg ,_gec ._edb ,_gec ._acdf );};_gec .stroke (_bfa );};func (_adfd *Context )Transform (x ,y float64 )(_cbeb ,_cgb float64 ){return _adfd ._afc .Transform (x ,y );};func (_faee *Context )InvertMask (){if _faee ._edb ==nil {_faee ._edb =_ag .NewAlpha (_faee ._adg .Bounds ());
}else {for _ecc ,_dfg :=range _faee ._edb .Pix {_faee ._edb .Pix [_ecc ]=255-_dfg ;};};};func _bece (_dcac ,_cfc uint32 ,_cec float64 )uint8 {return uint8 (int32 (float64 (_dcac )*(1.0-_cec )+float64 (_cfc )*_cec )>>8);};func (_gddc *Context )ScaleAbout (sx ,sy ,x ,y float64 ){_gddc .Translate (x ,y );
_gddc .Scale (sx ,sy );_gddc .Translate (-x ,-y );};func (_aeg *Context )DrawRoundedRectangle (x ,y ,w ,h ,r float64 ){_gdc ,_bec ,_dbe ,_dffe :=x ,x +r ,x +w -r ,x +w ;_ffgg ,_bee ,_ccb ,_egg :=y ,y +r ,y +h -r ,y +h ;_aeg .NewSubPath ();_aeg .MoveTo (_bec ,_ffgg );
_aeg .LineTo (_dbe ,_ffgg );_aeg .DrawArc (_dbe ,_bee ,r ,_gffc (270),_gffc (360));_aeg .LineTo (_dffe ,_ccb );_aeg .DrawArc (_dbe ,_ccb ,r ,_gffc (0),_gffc (90));_aeg .LineTo (_bec ,_egg );_aeg .DrawArc (_bec ,_ccb ,r ,_gffc (90),_gffc (180));_aeg .LineTo (_gdc ,_bee );
_aeg .DrawArc (_bec ,_bee ,r ,_gffc (180),_gffc (270));_aeg .ClosePath ();};func (_beb *Context )joiner ()_ce .Joiner {switch _beb ._fda {case _fd .LineJoinBevel :return _ce .BevelJoiner ;case _fd .LineJoinRound :return _ce .RoundJoiner ;};return nil ;
};func (_beg *Context )FillPattern ()_fd .Pattern {return _beg ._fa };func (_fbd *Context )DrawImage (im _ag .Image ,x ,y int ){_fbd .DrawImageAnchored (im ,x ,y ,0,0)};