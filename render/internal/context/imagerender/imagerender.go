//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package imagerender ;import (_db "errors";_aa "fmt";_bc "github.com/golang/freetype/raster";_dg "github.com/unidoc/unipdf/v3/common";_gc "github.com/unidoc/unipdf/v3/internal/transform";_c "github.com/unidoc/unipdf/v3/render/internal/context";_cg "golang.org/x/image/draw";_gd "golang.org/x/image/font";_bg "golang.org/x/image/math/f64";_cd "golang.org/x/image/math/fixed";_b "image";_d "image/color";_fb "image/draw";_a "math";_gb "sort";_f "strings";);var (_egf =_bfg (_d .White );_dfdg =_bfg (_d .Black ););func NewContext (width ,height int )*Context {return NewContextForRGBA (_b .NewRGBA (_b .Rect (0,0,width ,height )));};func _ab (_de ,_bcd ,_fc ,_da ,_ade ,_ff float64 )[]_gc .Point {_ae :=(_a .Hypot (_fc -_de ,_da -_bcd )+_a .Hypot (_ade -_fc ,_ff -_da ));_e :=int (_ae +0.5);if _e < 4{_e =4;};_ed :=float64 (_e )-1;_fa :=make ([]_gc .Point ,_e );for _cbc :=0;_cbc < _e ;_cbc ++{_fg :=float64 (_cbc )/_ed ;_gda ,_fce :=_fe (_de ,_bcd ,_fc ,_da ,_ade ,_ff ,_fg );_fa [_cbc ]=_gc .NewPoint (_gda ,_fce );};return _fa ;};func (_abc *Context )Fill (){_abc .FillPreserve ();_abc .ClearPath ()};func (_daeg *Context )Rotate (angle float64 ){_daeg ._ea .Rotate (angle )};func (_fag *Context )DrawLine (x1 ,y1 ,x2 ,y2 float64 ){_fag .MoveTo (x1 ,y1 );_fag .LineTo (x2 ,y2 )};func (_faa *Context )SetRGBA (r ,g ,b ,a float64 ){_faa ._be =_d .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_faa .setFillAndStrokeColor (_faa ._be );};type stop struct{_gcbb float64 ;_fec _d .Color ;};func (_gbgc *Context )SetLineJoin (lineJoin _c .LineJoin ){_gbgc ._dcfe =lineJoin };func (_gad stops )Swap (i ,j int ){_gad [i ],_gad [j ]=_gad [j ],_gad [i ]};func (_adeb *Context )Clear (){_aeg :=_b .NewUniform (_adeb ._be );_cg .Draw (_adeb ._dee ,_adeb ._dee .Bounds (),_aeg ,_b .ZP ,_cg .Src );};const (_aeb repeatOp =iota ;_fba ;_ecff ;_acge ;);func (_egce *Context )ShearAbout (sx ,sy ,x ,y float64 ){_egce .Translate (x ,y );_egce .Shear (sx ,sy );_egce .Translate (-x ,-y );};func (_cggc *linearGradient )ColorAt (x ,y int )_d .Color {if len (_cggc ._edeg )==0{return _d .Transparent ;};_fcdb ,_bdg :=float64 (x ),float64 (y );_eeea ,_defbf ,_dfdb ,_dbe :=_cggc ._bfbf ,_cggc ._cde ,_cggc ._dgc ,_cggc ._aggf ;_defa ,_dbfd :=_dfdb -_eeea ,_dbe -_defbf ;if _dbfd ==0&&_defa !=0{return _bde ((_fcdb -_eeea )/_defa ,_cggc ._edeg );};if _defa ==0&&_dbfd !=0{return _bde ((_bdg -_defbf )/_dbfd ,_cggc ._edeg );};_dgca :=_defa *(_fcdb -_eeea )+_dbfd *(_bdg -_defbf );if _dgca < 0{return _cggc ._edeg [0]._fec ;};_aaad :=_a .Hypot (_defa ,_dbfd );_beac :=((_fcdb -_eeea )*-_dbfd +(_bdg -_defbf )*_defa )/(_aaad *_aaad );_dbba ,_eaf :=_eeea +_beac *-_dbfd ,_defbf +_beac *_defa ;_bgf :=_a .Hypot (_fcdb -_dbba ,_bdg -_eaf )/_aaad ;return _bde (_bgf ,_cggc ._edeg );};func (_degc *Context )DrawArc (x ,y ,r ,angle1 ,angle2 float64 ){_degc .DrawEllipticalArc (x ,y ,r ,r ,angle1 ,angle2 );};func NewContextForRGBA (im *_b .RGBA )*Context {_ga :=im .Bounds ().Size ().X ;_gg :=im .Bounds ().Size ().Y ;return &Context {_eeg :_ga ,_dgg :_gg ,_abf :_bc .NewRasterizer (_ga ,_gg ),_dee :im ,_be :_d .Transparent ,_bcg :_egf ,_fbc :_dfdg ,_fad :1,_edb :_c .FillRuleWinding ,_ea :_gc .IdentityMatrix (),_gba :_c .NewTextState ()};};func _dcagb (_bge _bc .Path )[][]_gc .Point {var _fbcd [][]_gc .Point ;var _ddcg []_gc .Point ;var _daee ,_cbg float64 ;for _eeb :=0;_eeb < len (_bge );{switch _bge [_eeb ]{case 0:if len (_ddcg )> 0{_fbcd =append (_fbcd ,_ddcg );_ddcg =nil ;};_cdac :=_fcab (_bge [_eeb +1]);_eefg :=_fcab (_bge [_eeb +2]);_ddcg =append (_ddcg ,_gc .NewPoint (_cdac ,_eefg ));_daee ,_cbg =_cdac ,_eefg ;_eeb +=4;case 1:_bbf :=_fcab (_bge [_eeb +1]);_edece :=_fcab (_bge [_eeb +2]);_ddcg =append (_ddcg ,_gc .NewPoint (_bbf ,_edece ));_daee ,_cbg =_bbf ,_edece ;_eeb +=4;case 2:_add :=_fcab (_bge [_eeb +1]);_fbfb :=_fcab (_bge [_eeb +2]);_dbdff :=_fcab (_bge [_eeb +3]);_ddaf :=_fcab (_bge [_eeb +4]);_cecb :=_ab (_daee ,_cbg ,_add ,_fbfb ,_dbdff ,_ddaf );_ddcg =append (_ddcg ,_cecb ...);_daee ,_cbg =_dbdff ,_ddaf ;_eeb +=6;case 3:_cee :=_fcab (_bge [_eeb +1]);_gaee :=_fcab (_bge [_eeb +2]);_adeg :=_fcab (_bge [_eeb +3]);_ffdd :=_fcab (_bge [_eeb +4]);_fee :=_fcab (_bge [_eeb +5]);_ffff :=_fcab (_bge [_eeb +6]);_fcb :=_dda (_daee ,_cbg ,_cee ,_gaee ,_adeg ,_ffdd ,_fee ,_ffff );_ddcg =append (_ddcg ,_fcb ...);_daee ,_cbg =_fee ,_ffff ;_eeb +=8;default:_dg .Log .Debug ("\u0057\u0041\u0052\u004e: \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0070\u0061\u0074\u0068\u003a\u0020%\u0076",_bge );return _fbcd ;};};if len (_ddcg )> 0{_fbcd =append (_fbcd ,_ddcg );};return _fbcd ;};func (_dca *Context )SetFillRule (fillRule _c .FillRule ){_dca ._edb =fillRule };func (_fgc *Context )DrawCircle (x ,y ,r float64 ){_fgc .NewSubPath ();_fgc .DrawEllipticalArc (x ,y ,r ,r ,0,2*_a .Pi );_fgc .ClosePath ();};func (_ffd *Context )DrawEllipticalArc (x ,y ,rx ,ry ,angle1 ,angle2 float64 ){const _bbe =16;for _facf :=0;_facf < _bbe ;_facf ++{_ecf :=float64 (_facf +0)/_bbe ;_gcb :=float64 (_facf +1)/_bbe ;_fcdd :=angle1 +(angle2 -angle1 )*_ecf ;_aaf :=angle1 +(angle2 -angle1 )*_gcb ;_ecd :=x +rx *_a .Cos (_fcdd );_becg :=y +ry *_a .Sin (_fcdd );_dcd :=x +rx *_a .Cos ((_fcdd +_aaf )/2);_ddf :=y +ry *_a .Sin ((_fcdd +_aaf )/2);_bbdc :=x +rx *_a .Cos (_aaf );_ebag :=y +ry *_a .Sin (_aaf );_cdg :=2*_dcd -_ecd /2-_bbdc /2;_cdag :=2*_ddf -_becg /2-_ebag /2;if _facf ==0{if _ffd ._fcg {_ffd .LineTo (_ecd ,_becg );}else {_ffd .MoveTo (_ecd ,_becg );};};_ffd .QuadraticTo (_cdg ,_cdag ,_bbdc ,_ebag );};};func (_edec *Context )stroke (_adc _bc .Painter ){_fdf :=_edec ._ecb ;if len (_edec ._cgc )> 0{_fdf =_fcaf (_fdf ,_edec ._cgc ,_edec ._gfg );}else {_fdf =_dggab (_dcagb (_fdf ));};_fcfb :=_edec ._abf ;_fcfb .UseNonZeroWinding =true ;_fcfb .Clear ();_fcfb .AddStroke (_fdf ,_gggaf (_edec ._fad ),_edec .capper (),_edec .joiner ());_fcfb .Rasterize (_adc );};func _bbb (_acb ,_ddg ,_dacd ,_baf ,_ffdf ,_cccbc float64 )float64 {return _acb *_baf +_ddg *_ffdf +_dacd *_cccbc ;};func _dgga (_cgb [][]_gc .Point ,_fffg []float64 ,_dafa float64 )[][]_gc .Point {var _acec [][]_gc .Point ;if len (_fffg )==0{return _cgb ;};if len (_fffg )==1{_fffg =append (_fffg ,_fffg [0]);};for _ ,_dfbe :=range _cgb {if len (_dfbe )< 2{continue ;};_agde :=_dfbe [0];_bfed :=1;_gbf :=0;_dafe :=0.0;if _dafa !=0{var _eefb float64 ;for _ ,_aacg :=range _fffg {_eefb +=_aacg ;};_dafa =_a .Mod (_dafa ,_eefb );if _dafa < 0{_dafa +=_eefb ;};for _gedca ,_dcagc :=range _fffg {_dafa -=_dcagc ;if _dafa < 0{_gbf =_gedca ;_dafe =_dcagc +_dafa ;break ;};};};var _feeg []_gc .Point ;_feeg =append (_feeg ,_agde );for _bfed < len (_dfbe ){_cae :=_fffg [_gbf ];_faga :=_dfbe [_bfed ];_dcfee :=_agde .Distance (_faga );_efgf :=_cae -_dafe ;if _dcfee > _efgf {_dafc :=_efgf /_dcfee ;_fca :=_agde .Interpolate (_faga ,_dafc );_feeg =append (_feeg ,_fca );if _gbf %2==0&&len (_feeg )> 1{_acec =append (_acec ,_feeg );};_feeg =nil ;_feeg =append (_feeg ,_fca );_dafe =0;_agde =_fca ;_gbf =(_gbf +1)%len (_fffg );}else {_feeg =append (_feeg ,_faga );_agde =_faga ;_dafe +=_dcfee ;_bfed ++;};};if _gbf %2==0&&len (_feeg )> 1{_acec =append (_acec ,_feeg );};};return _acec ;};func (_ada *Context )Identity (){_ada ._ea =_gc .IdentityMatrix ()};func (_gggc *Context )RotateAbout (angle ,x ,y float64 ){_gggc .Translate (x ,y );_gggc .Rotate (angle );_gggc .Translate (-x ,-y );};func (_bdab *Context )SetRGBA255 (r ,g ,b ,a int ){_bdab ._be =_d .NRGBA {uint8 (r ),uint8 (g ),uint8 (b ),uint8 (a )};_bdab .setFillAndStrokeColor (_bdab ._be );};func (_dac *Context )capper ()_bc .Capper {switch _dac ._bda {case _c .LineCapButt :return _bc .ButtCapper ;case _c .LineCapRound :return _bc .RoundCapper ;case _c .LineCapSquare :return _bc .SquareCapper ;};return nil ;};func _fdb (_dbdg ,_cgf uint32 ,_bcgc float64 )uint8 {return uint8 (int32 (float64 (_dbdg )*(1.0-_bcgc )+float64 (_cgf )*_bcgc )>>8);};type circle struct{_aggff ,_daec ,_fff float64 };func (_acbe *surfacePattern )ColorAt (x ,y int )_d .Color {_bdb :=_acbe ._efbd .Bounds ();switch _acbe ._acdf {case _fba :if y >=_bdb .Dy (){return _d .Transparent ;};case _ecff :if x >=_bdb .Dx (){return _d .Transparent ;};case _acge :if x >=_bdb .Dx ()||y >=_bdb .Dy (){return _d .Transparent ;};};x =x %_bdb .Dx ()+_bdb .Min .X ;y =y %_bdb .Dy ()+_bdb .Min .Y ;return _acbe ._efbd .At (x ,y );};func _fgbd (_ccdd _b .Image ,_bgd repeatOp )_c .Pattern {return &surfacePattern {_efbd :_ccdd ,_acdf :_bgd };};func (_ged *Context )DrawEllipse (x ,y ,rx ,ry float64 ){_ged .NewSubPath ();_ged .DrawEllipticalArc (x ,y ,rx ,ry ,0,2*_a .Pi );_ged .ClosePath ();};func (_ge *Context )setFillAndStrokeColor (_dfe _d .Color ){_ge ._be =_dfe ;_ge ._bcg =_bfg (_dfe );_ge ._fbc =_bfg (_dfe );};func (_beb *Context )Stroke (){_beb .StrokePreserve ();_beb .ClearPath ()};func (_fac *Context )ClearPath (){_fac ._ecb .Clear ();_fac ._ecc .Clear ();_fac ._fcg =false };func (_fgfa *Context )Push (){_bcea :=*_fgfa ;_fgfa ._cda =append (_fgfa ._cda ,&_bcea )};func (_cf *Context )DrawImageAnchored (im _b .Image ,x ,y int ,ax ,ay float64 ){_dge :=im .Bounds ().Size ();x -=int (ax *float64 (_dge .X ));y -=int (ay *float64 (_dge .Y ));_edcg :=_cg .BiLinear ;_bba :=_cf ._ea .Clone ();_bba .Translate (float64 (x ),float64 (y ));_eea :=_bg .Aff3 {_bba [0],_bba [3],_bba [6],_bba [1],_bba [4],_bba [7]};if _cf ._bfd ==nil {_edcg .Transform (_cf ._dee ,_eea ,im ,im .Bounds (),_cg .Over ,nil );}else {_edcg .Transform (_cf ._dee ,_eea ,im ,im .Bounds (),_cg .Over ,&_cg .Options {DstMask :_cf ._bfd ,DstMaskP :_b .ZP });};};func (_dbf *Context )DrawImage (im _b .Image ,x ,y int ){_dbf .DrawImageAnchored (im ,x ,y ,0,0)};func (_af *Context )Shear (x ,y float64 ){_af ._ea .Shear (x ,y )};func (_ccd stops )Less (i ,j int )bool {return _ccd [i ]._gcbb < _ccd [j ]._gcbb };func (_gcd *Context )SetStrokeRGBA (r ,g ,b ,a float64 ){_eee :=_d .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_gcd ._fbc =_bfg (_eee );};func _bfg (_dcg _d .Color )_c .Pattern {return &solidPattern {_gcec :_dcg }};func (_bbcd *Context )ScaleAbout (sx ,sy ,x ,y float64 ){_bbcd .Translate (x ,y );_bbcd .Scale (sx ,sy );_bbcd .Translate (-x ,-y );};func (_bdaf *Context )Scale (x ,y float64 ){_bdaf ._ea .Scale (x ,y )};func _fgcg (_eeed _b .Image )*_b .RGBA {_agded :=_eeed .Bounds ();_caff :=_b .NewRGBA (_agded );_fb .Draw (_caff ,_agded ,_eeed ,_agded .Min ,_fb .Src );return _caff ;};func _fcaf (_fecc _bc .Path ,_ecg []float64 ,_gcfg float64 )_bc .Path {return _dggab (_dgga (_dcagb (_fecc ),_ecg ,_gcfg ));};func (_bdf *Context )SetMatrix (m _gc .Matrix ){_bdf ._ea =m };type repeatOp int ;func (_eba *Context )SetPixel (x ,y int ){_eba ._dee .Set (x ,y ,_eba ._be )};func (_cgdd *radialGradient )AddColorStop (offset float64 ,color _d .Color ){_cgdd ._befd =append (_cgdd ._befd ,stop {_gcbb :offset ,_fec :color });_gb .Sort (_cgdd ._befd );};type radialGradient struct{_gee ,_gce ,_fgb circle ;_aaga ,_cafg float64 ;_baeg float64 ;_befd stops ;};func (_ceg *Context )SetStrokeStyle (pattern _c .Pattern ){_ceg ._fbc =pattern };func (_ffg *Context )Matrix ()_gc .Matrix {return _ffg ._ea };func _fbg (_bcac float64 )float64 {return _bcac *_a .Pi /180};func (_cfe *Context )DrawString (s string ,x ,y float64 ){_cfe .DrawStringAnchored (s ,x ,y ,0,0)};func (_acg *Context )Transform (x ,y float64 )(_ebf ,_ddb float64 ){return _acg ._ea .Transform (x ,y )};func (_gbad *Context )DrawRoundedRectangle (x ,y ,w ,h ,r float64 ){_cgg ,_cbb ,_ggg ,_gcf :=x ,x +r ,x +w -r ,x +w ;_fea ,_bgcd ,_eda ,_bec :=y ,y +r ,y +h -r ,y +h ;_gbad .NewSubPath ();_gbad .MoveTo (_cbb ,_fea );_gbad .LineTo (_ggg ,_fea );_gbad .DrawArc (_ggg ,_bgcd ,r ,_fbg (270),_fbg (360));_gbad .LineTo (_gcf ,_eda );_gbad .DrawArc (_ggg ,_eda ,r ,_fbg (0),_fbg (90));_gbad .LineTo (_cbb ,_bec );_gbad .DrawArc (_cbb ,_eda ,r ,_fbg (90),_fbg (180));_gbad .LineTo (_cgg ,_bgcd );_gbad .DrawArc (_cbb ,_bgcd ,r ,_fbg (180),_fbg (270));_gbad .ClosePath ();};func (_bead *Context )AsMask ()*_b .Alpha {_aedd :=_b .NewAlpha (_bead ._dee .Bounds ());_cg .Draw (_aedd ,_bead ._dee .Bounds (),_bead ._dee ,_b .ZP ,_cg .Src );return _aedd ;};func (_ace *Context )FillPreserve (){var _defb _bc .Painter ;if _ace ._bfd ==nil {if _edbb ,_bga :=_ace ._bcg .(*solidPattern );_bga {_dbd :=_bc .NewRGBAPainter (_ace ._dee );_dbd .SetColor (_edbb ._gcec );_defb =_dbd ;};};if _defb ==nil {_defb =_dedf (_ace ._dee ,_ace ._bfd ,_ace ._bcg );};_ace .fill (_defb );};func (_ag *Context )LineTo (x ,y float64 ){if !_ag ._fcg {_ag .MoveTo (x ,y );}else {x ,y =_ag .Transform (x ,y );_aba :=_gc .NewPoint (x ,y );_bad :=_gedb (_aba );_ag ._ecb .Add1 (_bad );_ag ._ecc .Add1 (_bad );_ag ._aaa =_aba ;};};func (_egg *Context )SetHexColor (x string ){_gdb ,_eef ,_ege ,_eged :=_bbfa (x );_egg .SetRGBA255 (_gdb ,_eef ,_ege ,_eged );};func (_bceb *Context )SetMask (mask *_b .Alpha )error {if mask .Bounds ().Size ()!=_bceb ._dee .Bounds ().Size (){return _db .New ("\u006d\u0061\u0073\u006b\u0020\u0073i\u007a\u0065\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068 \u0063\u006f\u006e\u0074\u0065\u0078\u0074 \u0073\u0069\u007a\u0065");};_bceb ._bfd =mask ;return nil ;};func (_daad *Context )Clip (){_daad .ClipPreserve ();_daad .ClearPath ()};func (_aee *radialGradient )ColorAt (x ,y int )_d .Color {if len (_aee ._befd )==0{return _d .Transparent ;};_gfe ,_agc :=float64 (x )+0.5-_aee ._gee ._aggff ,float64 (y )+0.5-_aee ._gee ._daec ;_cgd :=_bbb (_gfe ,_agc ,_aee ._gee ._fff ,_aee ._fgb ._aggff ,_aee ._fgb ._daec ,_aee ._fgb ._fff );_adf :=_bbb (_gfe ,_agc ,-_aee ._gee ._fff ,_gfe ,_agc ,_aee ._gee ._fff );if _aee ._aaga ==0{if _cgd ==0{return _d .Transparent ;};_fdd :=0.5*_adf /_cgd ;if _fdd *_aee ._fgb ._fff >=_aee ._baeg {return _bde (_fdd ,_aee ._befd );};return _d .Transparent ;};_bdff :=_bbb (_cgd ,_aee ._aaga ,0,_cgd ,-_adf ,0);if _bdff >=0{_daf :=_a .Sqrt (_bdff );_fggb :=(_cgd +_daf )*_aee ._cafg ;_bgae :=(_cgd -_daf )*_aee ._cafg ;if _fggb *_aee ._fgb ._fff >=_aee ._baeg {return _bde (_fggb ,_aee ._befd );}else if _bgae *_aee ._fgb ._fff >=_aee ._baeg {return _bde (_bgae ,_aee ._befd );};};return _d .Transparent ;};func (_dbdf stops )Len ()int {return len (_dbdf )};func _bae (_dcab ,_bbae ,_cdff ,_fed float64 )_c .Gradient {_dege :=&linearGradient {_bfbf :_dcab ,_cde :_bbae ,_dgc :_cdff ,_aggf :_fed };return _dege ;};func _befe (_age ,_eeag _d .Color ,_bfbb float64 )_d .Color {_cegd ,_beba ,_ecag ,_befa :=_age .RGBA ();_beee ,_cbbb ,_acd ,_bcb :=_eeag .RGBA ();return _d .RGBA {_fdb (_cegd ,_beee ,_bfbb ),_fdb (_beba ,_cbbb ,_bfbb ),_fdb (_ecag ,_acd ,_bfbb ),_fdb (_befa ,_bcb ,_bfbb )};};type Context struct{_eeg int ;_dgg int ;_abf *_bc .Rasterizer ;_dee *_b .RGBA ;_bfd *_b .Alpha ;_be _d .Color ;_bcg _c .Pattern ;_fbc _c .Pattern ;_ecb _bc .Path ;_ecc _bc .Path ;_ddad _gc .Point ;_aaa _gc .Point ;_fcg bool ;_cgc []float64 ;_gfg float64 ;_fad float64 ;_bda _c .LineCap ;_dcfe _c .LineJoin ;_edb _c .FillRule ;_ea _gc .Matrix ;_gba *_c .TextState ;_cda []*Context ;};func (_bfe *Context )SetColor (c _d .Color ){_bfe .setFillAndStrokeColor (c )};func (_gbbc *Context )SetDash (dashes ...float64 ){_gbbc ._cgc =dashes };func (_cdaa *Context )drawString (_cag *_b .RGBA ,_eca string ,_gcdd ,_eega float64 ){_efb :=&_gd .Drawer {Dst :_cag ,Src :_b .NewUniform (_cdaa ._be ),Face :_cdaa ._gba .Tf .Face ,Dot :_gedb (_gc .NewPoint (_gcdd ,_eega ))};_gedc :=rune (-1);for _ ,_aaaa :=range _eca {if _gedc >=0{_efb .Dot .X +=_efb .Face .Kern (_gedc ,_aaaa );};_fef ,_gag ,_agg ,_bffa ,_faaa :=_efb .Face .Glyph (_efb .Dot ,_aaaa );if !_faaa {continue ;};_fcc :=_fef .Sub (_fef .Min );_abg :=_cg .BiLinear ;_cegf :=_cdaa ._ea .Clone ();_cegf .Translate (float64 (_fef .Min .X ),float64 (_fef .Min .Y ));_efe :=_bg .Aff3 {_cegf [0],_cegf [3],_cegf [6],_cegf [1],_cegf [4],_cegf [7]};_abg .Transform (_efb .Dst ,_efe ,_efb .Src ,_fcc ,_cg .Over ,&_cg .Options {SrcMask :_gag ,SrcMaskP :_agg });_efb .Dot .X +=_bffa ;_gedc =_aaaa ;};};func (_ac *Context )NewSubPath (){if _ac ._fcg {_ac ._ecc .Add1 (_gedb (_ac ._ddad ));};_ac ._fcg =false ;};func (_bgc *Context )DrawPoint (x ,y ,r float64 ){_bgc .Push ();_bgg ,_adga :=_bgc .Transform (x ,y );_bgc .Identity ();_bgc .DrawCircle (_bgg ,_adga ,r );_bgc .Pop ();};type surfacePattern struct{_efbd _b .Image ;_acdf repeatOp ;};func (_cgaf *Context )Translate (x ,y float64 ){_cgaf ._ea .Translate (x ,y )};func (_egea *Context )ClosePath (){if _egea ._fcg {_eeeg :=_gedb (_egea ._ddad );_egea ._ecb .Add1 (_eeeg );_egea ._ecc .Add1 (_eeeg );_egea ._aaa =_egea ._ddad ;};};func (_efa *Context )Pop (){_ead :=*_efa ;_ccca :=_efa ._cda ;_fagf ,_ccca :=_ccca [len (_ccca )-1],_ccca [:len (_ccca )-1];*_efa =*_fagf ;_efa ._ecb =_ead ._ecb ;_efa ._ecc =_ead ._ecc ;_efa ._ddad =_ead ._ddad ;_efa ._aaa =_ead ._aaa ;_efa ._fcg =_ead ._fcg ;_efa ._gba =_ead ._gba ;};func (_cdagb *Context )DrawStringAnchored (s string ,x ,y ,ax ,ay float64 ){_dfef ,_gaa :=_cdagb .MeasureString (s );x -=ax *_dfef ;y +=ay *_gaa ;if _cdagb ._bfd ==nil {_cdagb .drawString (_cdagb ._dee ,s ,x ,y );}else {_fdg :=_b .NewRGBA (_b .Rect (0,0,_cdagb ._eeg ,_cdagb ._dgg ));_cdagb .drawString (_fdg ,s ,x ,y );_cg .DrawMask (_cdagb ._dee ,_cdagb ._dee .Bounds (),_fdg ,_b .ZP ,_cdagb ._bfd ,_b .ZP ,_cg .Over );};};func (_bfb *Context )SetDashOffset (offset float64 ){_bfb ._gfg =offset };func (_agf *Context )drawRegularPolygon (_cca int ,_gfa ,_acf ,_ggd ,_bee float64 ){_efff :=2*_a .Pi /float64 (_cca );_bee -=_a .Pi /2;if _cca %2==0{_bee +=_efff /2;};_agf .NewSubPath ();for _abe :=0;_abe < _cca ;_abe ++{_gdf :=_bee +_efff *float64 (_abe );_agf .LineTo (_gfa +_ggd *_a .Cos (_gdf ),_acf +_ggd *_a .Sin (_gdf ));};_agf .ClosePath ();};func (_ce *Context )SetLineWidth (lineWidth float64 ){_ce ._fad =lineWidth };func (_gae *Context )CubicTo (x1 ,y1 ,x2 ,y2 ,x3 ,y3 float64 ){if !_gae ._fcg {_gae .MoveTo (x1 ,y1 );};_bfdf ,_fcf :=_gae ._aaa .X ,_gae ._aaa .Y ;x1 ,y1 =_gae .Transform (x1 ,y1 );x2 ,y2 =_gae .Transform (x2 ,y2 );x3 ,y3 =_gae .Transform (x3 ,y3 );_ebg :=_dda (_bfdf ,_fcf ,x1 ,y1 ,x2 ,y2 ,x3 ,y3 );_deg :=_gedb (_gae ._aaa );for _ ,_bce :=range _ebg [1:]{_ccb :=_gedb (_bce );if _ccb ==_deg {continue ;};_deg =_ccb ;_gae ._ecb .Add1 (_ccb );_gae ._ecc .Add1 (_ccb );_gae ._aaa =_bce ;};};func _fe (_df ,_dgb ,_bf ,_dd ,_gbb ,_cb ,_dfd float64 )(_gf ,_gfb float64 ){_cdc :=1-_dfd ;_ad :=_cdc *_cdc ;_bb :=2*_cdc *_dfd ;_bd :=_dfd *_dfd ;_gf =_ad *_df +_bb *_bf +_bd *_gbb ;_gfb =_ad *_dgb +_bb *_dd +_bd *_cb ;return ;};func _gedb (_fedd _gc .Point )_cd .Point26_6 {return _cd .Point26_6 {X :_gggaf (_fedd .X ),Y :_gggaf (_fedd .Y )};};func (_fgdg *Context )SetRGB255 (r ,g ,b int ){_fgdg .SetRGBA255 (r ,g ,b ,255)};func (_ded *Context )SetRGB (r ,g ,b float64 ){_ded .SetRGBA (r ,g ,b ,1)};type stops []stop ;func (_bfc *Context )Width ()int {return _bfc ._eeg };func (_dae *Context )LineWidth ()float64 {return _dae ._fad };func _dggab (_eefe [][]_gc .Point )_bc .Path {var _gafg _bc .Path ;for _ ,_acga :=range _eefe {var _fgfg _cd .Point26_6 ;for _gcef ,_ced :=range _acga {_egca :=_gedb (_ced );if _gcef ==0{_gafg .Start (_egca );}else {_deac :=_egca .X -_fgfg .X ;_ccaf :=_egca .Y -_fgfg .Y ;if _deac < 0{_deac =-_deac ;};if _ccaf < 0{_ccaf =-_ccaf ;};if _deac +_ccaf > 8{_gafg .Add1 (_egca );};};_fgfg =_egca ;};};return _gafg ;};func _fcab (_ecda _cd .Int26_6 )float64 {const _fcfd ,_faaf =6,1<<6-1;if _ecda >=0{return float64 (_ecda >>_fcfd )+float64 (_ecda &_faaf )/64;};_ecda =-_ecda ;if _ecda >=0{return -(float64 (_ecda >>_fcfd )+float64 (_ecda &_faaf )/64);};return 0;};func _ddc (_adg ,_ef ,_bbc ,_ede ,_eg ,_fbd ,_bgb ,_gbg ,_efg float64 )(_eb ,_fbde float64 ){_ebb :=1-_efg ;_fgd :=_ebb *_ebb *_ebb ;_gcc :=3*_ebb *_ebb *_efg ;_dbb :=3*_ebb *_efg *_efg ;_bbca :=_efg *_efg *_efg ;_eb =_fgd *_adg +_gcc *_bbc +_dbb *_eg +_bbca *_bgb ;_fbde =_fgd *_ef +_gcc *_ede +_dbb *_fbd +_bbca *_gbg ;return ;};func (_adcc *patternPainter )Paint (ss []_bc .Span ,done bool ){_acbf :=_adcc ._bdac .Bounds ();for _ ,_fbe :=range ss {if _fbe .Y < _acbf .Min .Y {continue ;};if _fbe .Y >=_acbf .Max .Y {return ;};if _fbe .X0 < _acbf .Min .X {_fbe .X0 =_acbf .Min .X ;};if _fbe .X1 > _acbf .Max .X {_fbe .X1 =_acbf .Max .X ;};if _fbe .X0 >=_fbe .X1 {continue ;};const _cafgb =1<<16-1;_ggga :=_fbe .Y -_adcc ._bdac .Rect .Min .Y ;_gbge :=_fbe .X0 -_adcc ._bdac .Rect .Min .X ;_agcd :=(_fbe .Y -_adcc ._bdac .Rect .Min .Y )*_adcc ._bdac .Stride +(_fbe .X0 -_adcc ._bdac .Rect .Min .X )*4;_aafg :=_agcd +(_fbe .X1 -_fbe .X0 )*4;for _bgdb ,_gaeg :=_agcd ,_gbge ;_bgdb < _aafg ;_bgdb ,_gaeg =_bgdb +4,_gaeg +1{_eegc :=_fbe .Alpha ;if _adcc ._dgeg !=nil {_eegc =_eegc *uint32 (_adcc ._dgeg .AlphaAt (_gaeg ,_ggga ).A )/255;if _eegc ==0{continue ;};};_afc :=_adcc ._dcee .ColorAt (_gaeg ,_ggga );_aeea ,_cbba ,_fgef ,_ddfd :=_afc .RGBA ();_dbc :=uint32 (_adcc ._bdac .Pix [_bgdb +0]);_edd :=uint32 (_adcc ._bdac .Pix [_bgdb +1]);_eaa :=uint32 (_adcc ._bdac .Pix [_bgdb +2]);_cfa :=uint32 (_adcc ._bdac .Pix [_bgdb +3]);_dgbe :=(_cafgb -(_ddfd *_eegc /_cafgb ))*0x101;_adcc ._bdac .Pix [_bgdb +0]=uint8 ((_dbc *_dgbe +_aeea *_eegc )/_cafgb >>8);_adcc ._bdac .Pix [_bgdb +1]=uint8 ((_edd *_dgbe +_cbba *_eegc )/_cafgb >>8);_adcc ._bdac .Pix [_bgdb +2]=uint8 ((_eaa *_dgbe +_fgef *_eegc )/_cafgb >>8);_adcc ._bdac .Pix [_bgdb +3]=uint8 ((_cfa *_dgbe +_ddfd *_eegc )/_cafgb >>8);};};};func (_bef *linearGradient )AddColorStop (offset float64 ,color _d .Color ){_bef ._edeg =append (_bef ._edeg ,stop {_gcbb :offset ,_fec :color });_gb .Sort (_bef ._edeg );};func _abfc (_bfbfb ,_aac ,_abge ,_fbfa ,_ddfe ,_feaa float64 )_c .Gradient {_dce :=circle {_bfbfb ,_aac ,_abge };_bfdd :=circle {_fbfa ,_ddfe ,_feaa };_ffa :=circle {_fbfa -_bfbfb ,_ddfe -_aac ,_feaa -_abge };_bfdc :=_bbb (_ffa ._aggff ,_ffa ._daec ,-_ffa ._fff ,_ffa ._aggff ,_ffa ._daec ,_ffa ._fff );var _dfb float64 ;if _bfdc !=0{_dfb =1.0/_bfdc ;};_adae :=-_dce ._fff ;_eggb :=&radialGradient {_gee :_dce ,_gce :_bfdd ,_fgb :_ffa ,_aaga :_bfdc ,_cafg :_dfb ,_baeg :_adae };return _eggb ;};func (_abaa *Context )ResetClip (){_abaa ._bfd =nil };func (_caf *Context )SetFillRGBA (r ,g ,b ,a float64 ){_ba :=_d .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_caf ._be =_ba ;_caf ._bcg =_bfg (_ba );};func (_edg *Context )joiner ()_bc .Joiner {switch _edg ._dcfe {case _c .LineJoinBevel :return _bc .BevelJoiner ;case _c .LineJoinRound :return _bc .RoundJoiner ;};return nil ;};func _dedf (_efc *_b .RGBA ,_dcc *_b .Alpha ,_afb _c .Pattern )*patternPainter {return &patternPainter {_efc ,_dcc ,_afb };};type linearGradient struct{_bfbf ,_cde ,_dgc ,_aggf float64 ;_edeg stops ;};func (_daa *Context )Image ()_b .Image {return _daa ._dee };func (_ecba *Context )InvertMask (){if _ecba ._bfd ==nil {_ecba ._bfd =_b .NewAlpha (_ecba ._dee .Bounds ());}else {for _cdf ,_edc :=range _ecba ._bfd .Pix {_ecba ._bfd .Pix [_cdf ]=255-_edc ;};};};func NewContextForImage (im _b .Image )*Context {return NewContextForRGBA (_fgcg (im ))};func (_gaf *Context )ClipPreserve (){_abff :=_b .NewAlpha (_b .Rect (0,0,_gaf ._eeg ,_gaf ._dgg ));_aae :=_bc .NewAlphaOverPainter (_abff );_gaf .fill (_aae );if _gaf ._bfd ==nil {_gaf ._bfd =_abff ;}else {_dfed :=_b .NewAlpha (_b .Rect (0,0,_gaf ._eeg ,_gaf ._dgg ));_cg .DrawMask (_dfed ,_dfed .Bounds (),_abff ,_b .ZP ,_gaf ._bfd ,_b .ZP ,_cg .Over );_gaf ._bfd =_dfed ;};};func (_cga *Context )MoveTo (x ,y float64 ){if _cga ._fcg {_cga ._ecc .Add1 (_gedb (_cga ._ddad ));};x ,y =_cga .Transform (x ,y );_aab :=_gc .NewPoint (x ,y );_bcc :=_gedb (_aab );_cga ._ecb .Start (_bcc );_cga ._ecc .Start (_bcc );_cga ._ddad =_aab ;_cga ._aaa =_aab ;_cga ._fcg =true ;};func _bde (_gab float64 ,_bgff stops )_d .Color {if _gab <=0.0||len (_bgff )==1{return _bgff [0]._fec ;};_ebab :=_bgff [len (_bgff )-1];if _gab >=_ebab ._gcbb {return _ebab ._fec ;};for _dggc ,_agd :=range _bgff [1:]{if _gab < _agd ._gcbb {_gab =(_gab -_bgff [_dggc ]._gcbb )/(_agd ._gcbb -_bgff [_dggc ]._gcbb );return _befe (_bgff [_dggc ]._fec ,_agd ._fec ,_gab );};};return _ebab ._fec ;};func (_gfbg *Context )TextState ()*_c .TextState {return _gfbg ._gba };func (_eefa *Context )MeasureString (s string )(_dba ,_fgg float64 ){_egc :=&_gd .Drawer {Face :_eefa ._gba .Tf .Face };_cec :=_egc .MeasureString (s );return float64 (_cec >>6),_eefa ._gba .Tf .Size ;};func (_aea *Context )Height ()int {return _aea ._dgg };func _bbfa (_efgg string )(_agea ,_bgdg ,_cgbf ,_eae int ){_efgg =_f .TrimPrefix (_efgg ,"\u0023");_eae =255;if len (_efgg )==3{_egec :="\u00251\u0078\u0025\u0031\u0078\u0025\u0031x";_aa .Sscanf (_efgg ,_egec ,&_agea ,&_bgdg ,&_cgbf );_agea |=_agea <<4;_bgdg |=_bgdg <<4;_cgbf |=_cgbf <<4;};if len (_efgg )==6{_gbgcc :="\u0025\u0030\u0032x\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";_aa .Sscanf (_efgg ,_gbgcc ,&_agea ,&_bgdg ,&_cgbf );};if len (_efgg )==8{_bed :="\u0025\u00302\u0078\u0025\u00302\u0078\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";_aa .Sscanf (_efgg ,_bed ,&_agea ,&_bgdg ,&_cgbf ,&_eae );};return ;};func (_abfg *Context )StrokePreserve (){var _daeb _bc .Painter ;if _abfg ._bfd ==nil {if _aaaf ,_fde :=_abfg ._fbc .(*solidPattern );_fde {_dcag :=_bc .NewRGBAPainter (_abfg ._dee );_dcag .SetColor (_aaaf ._gcec );_daeb =_dcag ;};};if _daeb ==nil {_daeb =_dedf (_abfg ._dee ,_abfg ._bfd ,_abfg ._fbc );};_abfg .stroke (_daeb );};func (_ebc *Context )SetLineCap (lineCap _c .LineCap ){_ebc ._bda =lineCap };func (_ebcg *Context )DrawRectangle (x ,y ,w ,h float64 ){_ebcg .NewSubPath ();_ebcg .MoveTo (x ,y );_ebcg .LineTo (x +w ,y );_ebcg .LineTo (x +w ,y +h );_ebcg .LineTo (x ,y +h );_ebcg .ClosePath ();};type solidPattern struct{_gcec _d .Color };func (_cccb *Context )fill (_cad _bc .Painter ){_aed :=_cccb ._ecc ;if _cccb ._fcg {_aed =make (_bc .Path ,len (_cccb ._ecc ));copy (_aed ,_cccb ._ecc );_aed .Add1 (_gedb (_cccb ._ddad ));};_fgf :=_cccb ._abf ;_fgf .UseNonZeroWinding =_cccb ._edb ==_c .FillRuleWinding ;_fgf .Clear ();_fgf .AddPath (_aed );_fgf .Rasterize (_cad );};type patternPainter struct{_bdac *_b .RGBA ;_dgeg *_b .Alpha ;_dcee _c .Pattern ;};func (_fadg *solidPattern )ColorAt (x ,y int )_d .Color {return _fadg ._gcec };func (_cbf *Context )SetFillStyle (pattern _c .Pattern ){if _cac ,_daac :=pattern .(*solidPattern );_daac {_cbf ._be =_cac ._gcec ;};_cbf ._bcg =pattern ;};func _dda (_fbf ,_dc ,_fcd ,_deb ,_fd ,_bca ,_ca ,_dcf float64 )[]_gc .Point {_eff :=(_a .Hypot (_fcd -_fbf ,_deb -_dc )+_a .Hypot (_fd -_fcd ,_bca -_deb )+_a .Hypot (_ca -_fd ,_dcf -_bca ));_ec :=int (_eff +0.5);if _ec < 4{_ec =4;};_ffb :=float64 (_ec )-1;_ee :=make ([]_gc .Point ,_ec );for _bbd :=0;_bbd < _ec ;_bbd ++{_aag :=float64 (_bbd )/_ffb ;_def ,_fge :=_ddc (_fbf ,_dc ,_fcd ,_deb ,_fd ,_bca ,_ca ,_dcf ,_aag );_ee [_bbd ]=_gc .NewPoint (_def ,_fge );};return _ee ;};func _gggaf (_fbfba float64 )_cd .Int26_6 {return _cd .Int26_6 (_fbfba *64)};func (_cc *Context )QuadraticTo (x1 ,y1 ,x2 ,y2 float64 ){if !_cc ._fcg {_cc .MoveTo (x1 ,y1 );};x1 ,y1 =_cc .Transform (x1 ,y1 );x2 ,y2 =_cc .Transform (x2 ,y2 );_gcdf :=_gc .NewPoint (x1 ,y1 );_ccc :=_gc .NewPoint (x2 ,y2 );_eegd :=_gedb (_gcdf );_bea :=_gedb (_ccc );_cc ._ecb .Add2 (_eegd ,_bea );_cc ._ecc .Add2 (_eegd ,_bea );_cc ._aaa =_ccc ;};