//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package imagerender ;import (_dg "errors";_fc "fmt";_bbf "github.com/golang/freetype/raster";_cf "github.com/unidoc/unipdf/v3/common";_a "github.com/unidoc/unipdf/v3/internal/transform";_bb "github.com/unidoc/unipdf/v3/render/internal/context";_be "golang.org/x/image/draw";_gc "golang.org/x/image/font";_dd "golang.org/x/image/math/f64";_fe "golang.org/x/image/math/fixed";_c "image";_fa "image/color";_e "image/draw";_b "math";_g "sort";_d "strings";);func (_bgf *Context )DrawImage (im _c .Image ,x ,y int ){_bgf .DrawImageAnchored (im ,x ,y ,0,0)};type circle struct{_dfeb ,_gag ,_fbb float64 };func (_gfc *Context )TextState ()*_bb .TextState {return _gfc ._bd };type solidPattern struct{_eab _fa .Color };func (_eeg *Context )DrawEllipticalArc (x ,y ,rx ,ry ,angle1 ,angle2 float64 ){const _ced =16;for _bf :=0;_bf < _ced ;_bf ++{_bfc :=float64 (_bf +0)/_ced ;_fbc :=float64 (_bf +1)/_ced ;_fgb :=angle1 +(angle2 -angle1 )*_bfc ;_dfbd :=angle1 +(angle2 -angle1 )*_fbc ;_cae :=x +rx *_b .Cos (_fgb );_gfeg :=y +ry *_b .Sin (_fgb );_cbfa :=x +rx *_b .Cos ((_fgb +_dfbd )/2);_eged :=y +ry *_b .Sin ((_fgb +_dfbd )/2);_dae :=x +rx *_b .Cos (_dfbd );_bbfg :=y +ry *_b .Sin (_dfbd );_fef :=2*_cbfa -_cae /2-_dae /2;_egedg :=2*_eged -_gfeg /2-_bbfg /2;if _bf ==0{if _eeg ._bbc {_eeg .LineTo (_cae ,_gfeg );}else {_eeg .MoveTo (_cae ,_gfeg );};};_eeg .QuadraticTo (_fef ,_egedg ,_dae ,_bbfg );};};func (_agf *Context )Identity (){_agf ._gdf =_a .IdentityMatrix ()};func (_bee *Context )Clear (){_gcg :=_c .NewUniform (_bee ._dbcb );_be .Draw (_bee ._agd ,_bee ._agd .Bounds (),_gcg ,_c .ZP ,_be .Src );};func (_cb *Context )SetFillStyle (pattern _bb .Pattern ){if _fbe ,_edc :=pattern .(*solidPattern );_edc {_cb ._dbcb =_fbe ._eab ;};_cb ._dace =pattern ;};func (_egdf *surfacePattern )ColorAt (x ,y int )_fa .Color {_cbg :=_egdf ._gbc .Bounds ();switch _egdf ._ebeg {case _ega :if y >=_cbg .Dy (){return _fa .Transparent ;};case _acg :if x >=_cbg .Dx (){return _fa .Transparent ;};case _adda :if x >=_cbg .Dx ()||y >=_cbg .Dy (){return _fa .Transparent ;};};x =x %_cbg .Dx ()+_cbg .Min .X ;y =y %_cbg .Dy ()+_cbg .Min .Y ;return _egdf ._gbc .At (x ,y );};func (_ebc *Context )StrokePreserve (){var _gdg _bbf .Painter ;if _ebc ._feb ==nil {if _aae ,_ccg :=_ebc ._fae .(*solidPattern );_ccg {_efab :=_bbf .NewRGBAPainter (_ebc ._agd );_efab .SetColor (_aae ._eab );_gdg =_efab ;};};if _gdg ==nil {_gdg =_adac (_ebc ._agd ,_ebc ._feb ,_ebc ._fae );};_ebc .stroke (_gdg );};func (_ebb *Context )stroke (_bga _bbf .Painter ){_gdfa :=_ebb ._dfg ;if len (_ebb ._gfb )> 0{_gdfa =_bfd (_gdfa ,_ebb ._gfb ,_ebb ._egd );}else {_gdfa =_cca (_ddc (_gdfa ));};_fca :=_ebb ._gef ;_fca .UseNonZeroWinding =true ;_fca .Clear ();_fca .AddStroke (_gdfa ,_egdg (_ebb ._bbea ),_ebb .capper (),_ebb .joiner ());_fca .Rasterize (_bga );};func (_bgd *Context )MeasureString (s string )(_ecbg ,_baf float64 ){_dcag :=&_gc .Drawer {Face :_bgd ._bd .Tf .Face };_cggf :=_dcag .MeasureString (s );return float64 (_cggf >>6),_bgd ._bd .Tf .Size ;};func _gdec (_ecgd ,_dfge ,_beg ,_fgba ,_fba ,_gega float64 )_bb .Gradient {_dba :=circle {_ecgd ,_dfge ,_beg };_ffg :=circle {_fgba ,_fba ,_gega };_ddg :=circle {_fgba -_ecgd ,_fba -_dfge ,_gega -_beg };_ffge :=_aba (_ddg ._dfeb ,_ddg ._gag ,-_ddg ._fbb ,_ddg ._dfeb ,_ddg ._gag ,_ddg ._fbb );var _dfc float64 ;if _ffge !=0{_dfc =1.0/_ffge ;};_eaaa :=-_dba ._fbb ;_cad :=&radialGradient {_geg :_dba ,_fbfc :_ffg ,_ddb :_ddg ,_ded :_ffge ,_eccd :_dfc ,_dfa :_eaaa };return _cad ;};func (_faee *Context )SetFillRGBA (r ,g ,b ,a float64 ){_gcd :=_fa .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_faee ._dbcb =_gcd ;_faee ._dace =_cfdb (_gcd );};func (_bdd *Context )SetHexColor (x string ){_gbab ,_cfd ,_cbf ,_fde :=_eeee (x );_bdd .SetRGBA255 (_gbab ,_cfd ,_cbf ,_fde );};func (_dca *Context )LineTo (x ,y float64 ){if !_dca ._bbc {_dca .MoveTo (x ,y );}else {x ,y =_dca .Transform (x ,y );_gdb :=_a .NewPoint (x ,y );_fgg :=_deg (_gdb );_dca ._dfg .Add1 (_fgg );_dca ._dfb .Add1 (_fgg );_dca ._gbe =_gdb ;};};func (_def *Context )SetDashOffset (offset float64 ){_def ._egd =offset };func _bfd (_gefc _bbf .Path ,_ace []float64 ,_dfed float64 )_bbf .Path {return _cca (_gfbf (_ddc (_gefc ),_ace ,_dfed ));};func (_cdg *Context )setFillAndStrokeColor (_ege _fa .Color ){_cdg ._dbcb =_ege ;_cdg ._dace =_cfdb (_ege );_cdg ._fae =_cfdb (_ege );};func (_ebe *Context )SetFillRule (fillRule _bb .FillRule ){_ebe ._aeg =fillRule };func (_efa *Context )SetRGB (r ,g ,b float64 ){_efa .SetRGBA (r ,g ,b ,1)};func (_dgbf *Context )Pop (){_gddf :=*_dgbf ;_ffa :=_dgbf ._ddd ;_fgfef ,_ffa :=_ffa [len (_ffa )-1],_ffa [:len (_ffa )-1];*_dgbf =*_fgfef ;_dgbf ._dfg =_gddf ._dfg ;_dgbf ._dfb =_gddf ._dfb ;_dgbf ._ad =_gddf ._ad ;_dgbf ._gbe =_gddf ._gbe ;_dgbf ._bbc =_gddf ._bbc ;_dgbf ._bd =_gddf ._bd ;};func (_dcc *Context )DrawPoint (x ,y ,r float64 ){_dcc .Push ();_fede ,_gdge :=_dcc .Transform (x ,y );_dcc .Identity ();_dcc .DrawCircle (_fede ,_gdge ,r );_dcc .Pop ();};func (_aebe *solidPattern )ColorAt (x ,y int )_fa .Color {return _aebe ._eab };func (_eee *Context )SetPixel (x ,y int ){_eee ._agd .Set (x ,y ,_eee ._dbcb )};func NewContextForRGBA (im *_c .RGBA )*Context {_eea :=im .Bounds ().Size ().X ;_aef :=im .Bounds ().Size ().Y ;return &Context {_ccc :_eea ,_dec :_aef ,_gef :_bbf .NewRasterizer (_eea ,_aef ),_agd :im ,_dbcb :_fa .Transparent ,_dace :_dbe ,_fae :_cggd ,_bbea :1,_aeg :_bb .FillRuleWinding ,_gdf :_a .IdentityMatrix (),_bd :_bb .NewTextState ()};};func _aba (_add ,_dfbdd ,_ggf ,_daee ,_bff ,_baa float64 )float64 {return _add *_daee +_dfbdd *_bff +_ggf *_baa ;};func (_eca *Context )SetMatrix (m _a .Matrix ){_eca ._gdf =m };const (_gab repeatOp =iota ;_ega ;_acg ;_adda ;);func (_gca *linearGradient )AddColorStop (offset float64 ,color _fa .Color ){_gca ._cfad =append (_gca ._cfad ,stop {_eda :offset ,_bbge :color });_g .Sort (_gca ._cfad );};func (_bcf *Context )NewSubPath (){if _bcf ._bbc {_bcf ._dfb .Add1 (_deg (_bcf ._ad ));};_bcf ._bbc =false ;};func (_cdb *Context )Transform (x ,y float64 )(_efec ,_ccee float64 ){return _cdb ._gdf .Transform (x ,y )};func (_cfb *Context )FillPreserve (){var _gad _bbf .Painter ;if _cfb ._feb ==nil {if _egg ,_cec :=_cfb ._dace .(*solidPattern );_cec {_fdab :=_bbf .NewRGBAPainter (_cfb ._agd );_fdab .SetColor (_egg ._eab );_gad =_fdab ;};};if _gad ==nil {_gad =_adac (_cfb ._agd ,_cfb ._feb ,_cfb ._dace );};_cfb .fill (_gad );};func _fbce (_cbe _c .Image ,_bfb repeatOp )_bb .Pattern {return &surfacePattern {_gbc :_cbe ,_ebeg :_bfb }};func (_dde *Context )joiner ()_bbf .Joiner {switch _dde ._fda {case _bb .LineJoinBevel :return _bbf .BevelJoiner ;case _bb .LineJoinRound :return _bbf .RoundJoiner ;};return nil ;};func (_ece *Context )Matrix ()_a .Matrix {return _ece ._gdf };func (_fdb *Context )fill (_cdc _bbf .Painter ){_eec :=_fdb ._dfb ;if _fdb ._bbc {_eec =make (_bbf .Path ,len (_fdb ._dfb ));copy (_eec ,_fdb ._dfb );_eec .Add1 (_deg (_fdb ._ad ));};_adc :=_fdb ._gef ;_adc .UseNonZeroWinding =_fdb ._aeg ==_bb .FillRuleWinding ;_adc .Clear ();_adc .AddPath (_eec );_adc .Rasterize (_cdc );};func _deg (_fad _a .Point )_fe .Point26_6 {return _fe .Point26_6 {X :_egdg (_fad .X ),Y :_egdg (_fad .Y )}};func (_eff *Context )DrawRectangle (x ,y ,w ,h float64 ){_eff .NewSubPath ();_eff .MoveTo (x ,y );_eff .LineTo (x +w ,y );_eff .LineTo (x +w ,y +h );_eff .LineTo (x ,y +h );_eff .ClosePath ();};func (_dacg *Context )MoveTo (x ,y float64 ){if _dacg ._bbc {_dacg ._dfb .Add1 (_deg (_dacg ._ad ));};x ,y =_dacg .Transform (x ,y );_gbec :=_a .NewPoint (x ,y );_fag :=_deg (_gbec );_dacg ._dfg .Start (_fag );_dacg ._dfb .Start (_fag );_dacg ._ad =_gbec ;_dacg ._gbe =_gbec ;_dacg ._bbc =true ;};func (_fdg *Context )Push (){_aag :=*_fdg ;_fdg ._ddd =append (_fdg ._ddd ,&_aag )};func _dff (_efed ,_fgbd ,_daec ,_bad float64 )_bb .Gradient {_agc :=&linearGradient {_fff :_efed ,_feea :_fgbd ,_fdag :_daec ,_bab :_bad };return _agc ;};func _eeeg (_gea float64 )float64 {return _gea *_b .Pi /180};func (_edb *Context )DrawCircle (x ,y ,r float64 ){_edb .NewSubPath ();_edb .DrawEllipticalArc (x ,y ,r ,r ,0,2*_b .Pi );_edb .ClosePath ();};type repeatOp int ;func NewContext (width ,height int )*Context {return NewContextForRGBA (_c .NewRGBA (_c .Rect (0,0,width ,height )));};func (_cabd *Context )DrawString (s string ,x ,y float64 ){_cabd .DrawStringAnchored (s ,x ,y ,0,0)};func (_ede *Context )capper ()_bbf .Capper {switch _ede ._cab {case _bb .LineCapButt :return _bbf .ButtCapper ;case _bb .LineCapRound :return _bbf .RoundCapper ;case _bb .LineCapSquare :return _bbf .SquareCapper ;};return nil ;};func (_gbaf *Context )SetStrokeStyle (pattern _bb .Pattern ){_gbaf ._fae =pattern };func _egdg (_fafbc float64 )_fe .Int26_6 {return _fe .Int26_6 (_fafbc *64)};type patternPainter struct{_fbaa *_c .RGBA ;_dbcg *_c .Alpha ;_fggbc _bb .Pattern ;};func _dbc (_ga ,_dga ,_ea ,_ca ,_bbg ,_cfa float64 )[]_a .Point {_ec :=(_b .Hypot (_ea -_ga ,_ca -_dga )+_b .Hypot (_bbg -_ea ,_cfa -_ca ));_cd :=int (_ec +0.5);if _cd < 4{_cd =4;};_gb :=float64 (_cd )-1;_fd :=make ([]_a .Point ,_cd );for _cg :=0;_cg < _cd ;_cg ++{_eaa :=float64 (_cg )/_gb ;_cc ,_gfe :=_ee (_ga ,_dga ,_ea ,_ca ,_bbg ,_cfa ,_eaa );_fd [_cg ]=_a .NewPoint (_cc ,_gfe );};return _fd ;};func (_gaf *Context )Scale (x ,y float64 ){_gaf ._gdf .Scale (x ,y )};func _ee (_cfg ,_db ,_gf ,_fcg ,_ae ,_da ,_ab float64 )(_dc ,_ac float64 ){_af :=1-_ab ;_abc :=_af *_af ;_dcg :=2*_af *_ab ;_fb :=_ab *_ab ;_dc =_abc *_cfg +_dcg *_gf +_fb *_ae ;_ac =_abc *_db +_dcg *_fcg +_fb *_da ;return ;};func (_bcd *Context )drawString (_fcd *_c .RGBA ,_bcc string ,_bddg ,_fcag float64 ){_cfaa :=&_gc .Drawer {Dst :_fcd ,Src :_c .NewUniform (_bcd ._dbcb ),Face :_bcd ._bd .Tf .Face ,Dot :_deg (_a .NewPoint (_bddg ,_fcag ))};_dab :=rune (-1);for _ ,_eba :=range _bcc {if _dab >=0{_cfaa .Dot .X +=_cfaa .Face .Kern (_dab ,_eba );};_ceg ,_bddfd ,_dbd ,_gga ,_cff :=_cfaa .Face .Glyph (_cfaa .Dot ,_eba );if !_cff {continue ;};_bcfcb :=_ceg .Sub (_ceg .Min );_eag :=_be .BiLinear ;_bgb :=_bcd ._gdf .Clone ();_bgb .Translate (float64 (_ceg .Min .X ),float64 (_ceg .Min .Y ));_fbf :=_dd .Aff3 {_bgb [0],_bgb [3],_bgb [6],_bgb [1],_bgb [4],_bgb [7]};_eag .Transform (_cfaa .Dst ,_fbf ,_cfaa .Src ,_bcfcb ,_be .Over ,&_be .Options {SrcMask :_bddfd ,SrcMaskP :_dbd });_cfaa .Dot .X +=_gga ;_dab =_eba ;};};func (_dcf *Context )CubicTo (x1 ,y1 ,x2 ,y2 ,x3 ,y3 float64 ){if !_dcf ._bbc {_dcf .MoveTo (x1 ,y1 );};_bca ,_gff :=_dcf ._gbe .X ,_dcf ._gbe .Y ;x1 ,y1 =_dcf .Transform (x1 ,y1 );x2 ,y2 =_dcf .Transform (x2 ,y2 );x3 ,y3 =_dcf .Transform (x3 ,y3 );_fed :=_fee (_bca ,_gff ,x1 ,y1 ,x2 ,y2 ,x3 ,y3 );_fcba :=_deg (_dcf ._gbe );for _ ,_ffe :=range _fed [1:]{_acf :=_deg (_ffe );if _acf ==_fcba {continue ;};_fcba =_acf ;_dcf ._dfg .Add1 (_acf );_dcf ._dfb .Add1 (_acf );_dcf ._gbe =_ffe ;};};func _dedb (_bffa float64 ,_gfbb stops )_fa .Color {if _bffa <=0.0||len (_gfbb )==1{return _gfbb [0]._bbge ;};_fab :=_gfbb [len (_gfbb )-1];if _bffa >=_fab ._eda {return _fab ._bbge ;};for _cga ,_edcf :=range _gfbb [1:]{if _bffa < _edcf ._eda {_bffa =(_bffa -_gfbb [_cga ]._eda )/(_edcf ._eda -_gfbb [_cga ]._eda );return _begg (_gfbb [_cga ]._bbge ,_edcf ._bbge ,_bffa );};};return _fab ._bbge ;};func (_faeda *Context )ShearAbout (sx ,sy ,x ,y float64 ){_faeda .Translate (x ,y );_faeda .Shear (sx ,sy );_faeda .Translate (-x ,-y );};func _eeee (_fbcd string )(_cdab ,_cgbg ,_abf ,_adcd int ){_fbcd =_d .TrimPrefix (_fbcd ,"\u0023");_adcd =255;if len (_fbcd )==3{_egdfc :="\u00251\u0078\u0025\u0031\u0078\u0025\u0031x";_fc .Sscanf (_fbcd ,_egdfc ,&_cdab ,&_cgbg ,&_abf );_cdab |=_cdab <<4;_cgbg |=_cgbg <<4;_abf |=_abf <<4;};if len (_fbcd )==6{_aede :="\u0025\u0030\u0032x\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";_fc .Sscanf (_fbcd ,_aede ,&_cdab ,&_cgbg ,&_abf );};if len (_fbcd )==8{_edde :="\u0025\u00302\u0078\u0025\u00302\u0078\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";_fc .Sscanf (_fbcd ,_edde ,&_cdab ,&_cgbg ,&_abf ,&_adcd );};return ;};func _ebaa (_bfa ,_dddb uint32 ,_gce float64 )uint8 {return uint8 (int32 (float64 (_bfa )*(1.0-_gce )+float64 (_dddb )*_gce )>>8);};func (_bcb *Context )RotateAbout (angle ,x ,y float64 ){_bcb .Translate (x ,y );_bcb .Rotate (angle );_bcb .Translate (-x ,-y );};func (_bbggg *Context )ClearPath (){_bbggg ._dfg .Clear ();_bbggg ._dfb .Clear ();_bbggg ._bbc =false };func (_bgac *radialGradient )ColorAt (x ,y int )_fa .Color {if len (_bgac ._cggc )==0{return _fa .Transparent ;};_fedg ,_dcce :=float64 (x )+0.5-_bgac ._geg ._dfeb ,float64 (y )+0.5-_bgac ._geg ._gag ;_ebff :=_aba (_fedg ,_dcce ,_bgac ._geg ._fbb ,_bgac ._ddb ._dfeb ,_bgac ._ddb ._gag ,_bgac ._ddb ._fbb );_bac :=_aba (_fedg ,_dcce ,-_bgac ._geg ._fbb ,_fedg ,_dcce ,_bgac ._geg ._fbb );if _bgac ._ded ==0{if _ebff ==0{return _fa .Transparent ;};_dece :=0.5*_bac /_ebff ;if _dece *_bgac ._ddb ._fbb >=_bgac ._dfa {return _dedb (_dece ,_bgac ._cggc );};return _fa .Transparent ;};_ccbg :=_aba (_ebff ,_bgac ._ded ,0,_ebff ,-_bac ,0);if _ccbg >=0{_gbag :=_b .Sqrt (_ccbg );_cgb :=(_ebff +_gbag )*_bgac ._eccd ;_gffc :=(_ebff -_gbag )*_bgac ._eccd ;if _cgb *_bgac ._ddb ._fbb >=_bgac ._dfa {return _dedb (_cgb ,_bgac ._cggc );}else if _gffc *_bgac ._ddb ._fbb >=_bgac ._dfa {return _dedb (_gffc ,_bgac ._cggc );};};return _fa .Transparent ;};func _adac (_eeggf *_c .RGBA ,_feda *_c .Alpha ,_fcdg _bb .Pattern )*patternPainter {return &patternPainter {_eeggf ,_feda ,_fcdg };};func (_fgf *Context )SetLineWidth (lineWidth float64 ){_fgf ._bbea =lineWidth };func (_efde *patternPainter )Paint (ss []_bbf .Span ,done bool ){_faff :=_efde ._fbaa .Bounds ();for _ ,_edba :=range ss {if _edba .Y < _faff .Min .Y {continue ;};if _edba .Y >=_faff .Max .Y {return ;};if _edba .X0 < _faff .Min .X {_edba .X0 =_faff .Min .X ;};if _edba .X1 > _faff .Max .X {_edba .X1 =_faff .Max .X ;};if _edba .X0 >=_edba .X1 {continue ;};const _bcdc =1<<16-1;_bfbd :=_edba .Y -_efde ._fbaa .Rect .Min .Y ;_ffec :=_edba .X0 -_efde ._fbaa .Rect .Min .X ;_fcga :=(_edba .Y -_efde ._fbaa .Rect .Min .Y )*_efde ._fbaa .Stride +(_edba .X0 -_efde ._fbaa .Rect .Min .X )*4;_dcgf :=_fcga +(_edba .X1 -_edba .X0 )*4;for _cabc ,_cfc :=_fcga ,_ffec ;_cabc < _dcgf ;_cabc ,_cfc =_cabc +4,_cfc +1{_feg :=_edba .Alpha ;if _efde ._dbcg !=nil {_feg =_feg *uint32 (_efde ._dbcg .AlphaAt (_cfc ,_bfbd ).A )/255;if _feg ==0{continue ;};};_gffb :=_efde ._fggbc .ColorAt (_cfc ,_bfbd );_cbge ,_afbf ,_efee ,_eegg :=_gffb .RGBA ();_cde :=uint32 (_efde ._fbaa .Pix [_cabc +0]);_cef :=uint32 (_efde ._fbaa .Pix [_cabc +1]);_cgge :=uint32 (_efde ._fbaa .Pix [_cabc +2]);_gaa :=uint32 (_efde ._fbaa .Pix [_cabc +3]);_bea :=(_bcdc -(_eegg *_feg /_bcdc ))*0x101;_efde ._fbaa .Pix [_cabc +0]=uint8 ((_cde *_bea +_cbge *_feg )/_bcdc >>8);_efde ._fbaa .Pix [_cabc +1]=uint8 ((_cef *_bea +_afbf *_feg )/_bcdc >>8);_efde ._fbaa .Pix [_cabc +2]=uint8 ((_cgge *_bea +_efee *_feg )/_bcdc >>8);_efde ._fbaa .Pix [_cabc +3]=uint8 ((_gaa *_bea +_eegg *_feg )/_bcdc >>8);};};};func _cfdb (_bef _fa .Color )_bb .Pattern {return &solidPattern {_eab :_bef }};func (_ed *Context )SetLineCap (lineCap _bb .LineCap ){_ed ._cab =lineCap };func (_fg *Context )LineWidth ()float64 {return _fg ._bbea };func (_efe *Context )ClosePath (){if _efe ._bbc {_cea :=_deg (_efe ._ad );_efe ._dfg .Add1 (_cea );_efe ._dfb .Add1 (_cea );_efe ._gbe =_efe ._ad ;};};func (_aea stops )Len ()int {return len (_aea )};func _ddc (_cda _bbf .Path )[][]_a .Point {var _dee [][]_a .Point ;var _fdde []_a .Point ;var _bade ,_fcac float64 ;for _eaf :=0;_eaf < len (_cda );{switch _cda [_eaf ]{case 0:if len (_fdde )> 0{_dee =append (_dee ,_fdde );_fdde =nil ;};_gecb :=_age (_cda [_eaf +1]);_eacc :=_age (_cda [_eaf +2]);_fdde =append (_fdde ,_a .NewPoint (_gecb ,_eacc ));_bade ,_fcac =_gecb ,_eacc ;_eaf +=4;case 1:_gfeb :=_age (_cda [_eaf +1]);_dbfe :=_age (_cda [_eaf +2]);_fdde =append (_fdde ,_a .NewPoint (_gfeb ,_dbfe ));_bade ,_fcac =_gfeb ,_dbfe ;_eaf +=4;case 2:_bega :=_age (_cda [_eaf +1]);_gcbd :=_age (_cda [_eaf +2]);_ccca :=_age (_cda [_eaf +3]);_deca :=_age (_cda [_eaf +4]);_dfcc :=_dbc (_bade ,_fcac ,_bega ,_gcbd ,_ccca ,_deca );_fdde =append (_fdde ,_dfcc ...);_bade ,_fcac =_ccca ,_deca ;_eaf +=6;case 3:_aec :=_age (_cda [_eaf +1]);_aac :=_age (_cda [_eaf +2]);_aaf :=_age (_cda [_eaf +3]);_baaa :=_age (_cda [_eaf +4]);_gccf :=_age (_cda [_eaf +5]);_bafd :=_age (_cda [_eaf +6]);_aefd :=_fee (_bade ,_fcac ,_aec ,_aac ,_aaf ,_baaa ,_gccf ,_bafd );_fdde =append (_fdde ,_aefd ...);_bade ,_fcac =_gccf ,_bafd ;_eaf +=8;default:_cf .Log .Debug ("\u0057\u0041\u0052\u004e: \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0070\u0061\u0074\u0068\u003a\u0020%\u0076",_cda );return _dee ;};};if len (_fdde )> 0{_dee =append (_dee ,_fdde );};return _dee ;};func (_cgd *Context )SetStrokeRGBA (r ,g ,b ,a float64 ){_cbb :=_fa .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_cgd ._fae =_cfdb (_cbb );};func (_bc *Context )SetRGBA255 (r ,g ,b ,a int ){_bc ._dbcb =_fa .NRGBA {uint8 (r ),uint8 (g ),uint8 (b ),uint8 (a )};_bc .setFillAndStrokeColor (_bc ._dbcb );};func (_bcfc *Context )drawRegularPolygon (_dgd int ,_fgbg ,_gffe ,_cdgf ,_fcbc float64 ){_ebg :=2*_b .Pi /float64 (_dgd );_fcbc -=_b .Pi /2;if _dgd %2==0{_fcbc +=_ebg /2;};_bcfc .NewSubPath ();for _gefb :=0;_gefb < _dgd ;_gefb ++{_aeb :=_fcbc +_ebg *float64 (_gefb );_bcfc .LineTo (_fgbg +_cdgf *_b .Cos (_aeb ),_gffe +_cdgf *_b .Sin (_aeb ));};_bcfc .ClosePath ();};func (_cac *Context )Fill (){_cac .FillPreserve ();_cac .ClearPath ()};func (_fdae *Context )InvertMask (){if _fdae ._feb ==nil {_fdae ._feb =_c .NewAlpha (_fdae ._agd .Bounds ());}else {for _bcfd ,_eefe :=range _fdae ._feb .Pix {_fdae ._feb .Pix [_bcfd ]=255-_eefe ;};};};func (_caf stops )Swap (i ,j int ){_caf [i ],_caf [j ]=_caf [j ],_caf [i ]};func (_bbgg *Context )SetDash (dashes ...float64 ){_bbgg ._gfb =dashes };func (_adb *Context )SetRGBA (r ,g ,b ,a float64 ){_adb ._dbcb =_fa .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_adb .setFillAndStrokeColor (_adb ._dbcb );};func (_efea *Context )DrawRoundedRectangle (x ,y ,w ,h ,r float64 ){_acfb ,_gdfd ,_fcf ,_dgb :=x ,x +r ,x +w -r ,x +w ;_edee ,_gec ,_gdgc ,_bddf :=y ,y +r ,y +h -r ,y +h ;_efea .NewSubPath ();_efea .MoveTo (_gdfd ,_edee );_efea .LineTo (_fcf ,_edee );_efea .DrawArc (_fcf ,_gec ,r ,_eeeg (270),_eeeg (360));_efea .LineTo (_dgb ,_gdgc );_efea .DrawArc (_fcf ,_gdgc ,r ,_eeeg (0),_eeeg (90));_efea .LineTo (_gdfd ,_bddf );_efea .DrawArc (_gdfd ,_gdgc ,r ,_eeeg (90),_eeeg (180));_efea .LineTo (_acfb ,_gec );_efea .DrawArc (_gdfd ,_gec ,r ,_eeeg (180),_eeeg (270));_efea .ClosePath ();};type stops []stop ;func (_cdgd *Context )AsMask ()*_c .Alpha {_ccgg :=_c .NewAlpha (_cdgd ._agd .Bounds ());_be .Draw (_ccgg ,_cdgd ._agd .Bounds (),_cdgd ._agd ,_c .ZP ,_be .Src );return _ccgg ;};type surfacePattern struct{_gbc _c .Image ;_ebeg repeatOp ;};func _cca (_bcga [][]_a .Point )_bbf .Path {var _dbb _bbf .Path ;for _ ,_dgec :=range _bcga {var _ebbf _fe .Point26_6 ;for _egf ,_cgda :=range _dgec {_gfff :=_deg (_cgda );if _egf ==0{_dbb .Start (_gfff );}else {_bdgee :=_gfff .X -_ebbf .X ;_fdgd :=_gfff .Y -_ebbf .Y ;if _bdgee < 0{_bdgee =-_bdgee ;};if _fdgd < 0{_fdgd =-_fdgd ;};if _bdgee +_fdgd > 8{_dbb .Add1 (_gfff );};};_ebbf =_gfff ;};};return _dbb ;};func _begg (_abcd ,_fbg _fa .Color ,_bbbd float64 )_fa .Color {_fabd ,_gbd ,_gefd ,_agaa :=_abcd .RGBA ();_bfg ,_bbd ,_ccda ,_fddc :=_fbg .RGBA ();return _fa .RGBA {_ebaa (_fabd ,_bfg ,_bbbd ),_ebaa (_gbd ,_bbd ,_bbbd ),_ebaa (_gefd ,_ccda ,_bbbd ),_ebaa (_agaa ,_fddc ,_bbbd )};};func (_eef *Context )Stroke (){_eef .StrokePreserve ();_eef .ClearPath ()};func (_fdc *Context )Shear (x ,y float64 ){_fdc ._gdf .Shear (x ,y )};func (_aca *Context )ScaleAbout (sx ,sy ,x ,y float64 ){_aca .Translate (x ,y );_aca .Scale (sx ,sy );_aca .Translate (-x ,-y );};func (_cee *Context )DrawImageAnchored (im _c .Image ,x ,y int ,ax ,ay float64 ){_afa :=im .Bounds ().Size ();x -=int (ax *float64 (_afa .X ));y -=int (ay *float64 (_afa .Y ));_efc :=_be .BiLinear ;_gde :=_cee ._gdf .Clone ();_gde .Translate (float64 (x ),float64 (y ));_gadc :=_dd .Aff3 {_gde [0],_gde [3],_gde [6],_gde [1],_gde [4],_gde [7]};if _cee ._feb ==nil {_efc .Transform (_cee ._agd ,_gadc ,im ,im .Bounds (),_be .Over ,nil );}else {_efc .Transform (_cee ._agd ,_gadc ,im ,im .Bounds (),_be .Over ,&_be .Options {DstMask :_cee ._feb ,DstMaskP :_c .ZP });};};func (_cbd *Context )Clip (){_cbd .ClipPreserve ();_cbd .ClearPath ()};func NewContextForImage (im _c .Image )*Context {return NewContextForRGBA (_bfef (im ))};func _fee (_ba ,_ecb ,_ce ,_ff ,_bbe ,_gba ,_dbcc ,_ccd float64 )[]_a .Point {_gg :=(_b .Hypot (_ce -_ba ,_ff -_ecb )+_b .Hypot (_bbe -_ce ,_gba -_ff )+_b .Hypot (_dbcc -_bbe ,_ccd -_gba ));_cfga :=int (_gg +0.5);if _cfga < 4{_cfga =4;};_afb :=float64 (_cfga )-1;_dac :=make ([]_a .Point ,_cfga );for _eac :=0;_eac < _cfga ;_eac ++{_aab :=float64 (_eac )/_afb ;_eb ,_acd :=_ef (_ba ,_ecb ,_ce ,_ff ,_bbe ,_gba ,_dbcc ,_ccd ,_aab );_dac [_eac ]=_a .NewPoint (_eb ,_acd );};return _dac ;};type stop struct{_eda float64 ;_bbge _fa .Color ;};func (_ggd *Context )Height ()int {return _ggd ._dec };func (_acb *Context )SetColor (c _fa .Color ){_acb .setFillAndStrokeColor (c )};type linearGradient struct{_fff ,_feea ,_fdag ,_bab float64 ;_cfad stops ;};func (_fggb *Context )DrawArc (x ,y ,r ,angle1 ,angle2 float64 ){_fggb .DrawEllipticalArc (x ,y ,r ,r ,angle1 ,angle2 );};func (_cecg *radialGradient )AddColorStop (offset float64 ,color _fa .Color ){_cecg ._cggc =append (_cecg ._cggc ,stop {_eda :offset ,_bbge :color });_g .Sort (_cecg ._cggc );};func _ef (_ag ,_fdd ,_gcb ,_cgg ,_df ,_aa ,_fcb ,_afc ,_eg float64 )(_aga ,_bg float64 ){_de :=1-_eg ;_efd :=_de *_de *_de ;_ge :=3*_de *_de *_eg ;_gd :=3*_de *_eg *_eg ;_gdd :=_eg *_eg *_eg ;_aga =_efd *_ag +_ge *_gcb +_gd *_df +_gdd *_fcb ;_bg =_efd *_fdd +_ge *_cgg +_gd *_aa +_gdd *_afc ;return ;};func (_dge *Context )Image ()_c .Image {return _dge ._agd };func (_abe *Context )Rotate (angle float64 ){_abe ._gdf .Rotate (angle )};var (_dbe =_cfdb (_fa .White );_cggd =_cfdb (_fa .Black ););func _gfbf (_bdg [][]_a .Point ,_aacd []float64 ,_cege float64 )[][]_a .Point {var _ggda [][]_a .Point ;if len (_aacd )==0{return _bdg ;};if len (_aacd )==1{_aacd =append (_aacd ,_aacd [0]);};for _ ,_fbae :=range _bdg {if len (_fbae )< 2{continue ;};_effd :=_fbae [0];_agfe :=1;_agca :=0;_ggc :=0.0;if _cege !=0{var _bcg float64 ;for _ ,_bdge :=range _aacd {_bcg +=_bdge ;};_cege =_b .Mod (_cege ,_bcg );if _cege < 0{_cege +=_bcg ;};for _agcd ,_fdeg :=range _aacd {_cege -=_fdeg ;if _cege < 0{_agca =_agcd ;_ggc =_fdeg +_cege ;break ;};};};var _gbb []_a .Point ;_gbb =append (_gbb ,_effd );for _agfe < len (_fbae ){_cdbg :=_aacd [_agca ];_edd :=_fbae [_agfe ];_ecbe :=_effd .Distance (_edd );_dbef :=_cdbg -_ggc ;if _ecbe > _dbef {_bceg :=_dbef /_ecbe ;_ccec :=_effd .Interpolate (_edd ,_bceg );_gbb =append (_gbb ,_ccec );if _agca %2==0&&len (_gbb )> 1{_ggda =append (_ggda ,_gbb );};_gbb =nil ;_gbb =append (_gbb ,_ccec );_ggc =0;_effd =_ccec ;_agca =(_agca +1)%len (_aacd );}else {_gbb =append (_gbb ,_edd );_effd =_edd ;_ggc +=_ecbe ;_agfe ++;};};if _agca %2==0&&len (_gbb )> 1{_ggda =append (_ggda ,_gbb );};};return _ggda ;};func (_ecee *linearGradient )ColorAt (x ,y int )_fa .Color {if len (_ecee ._cfad )==0{return _fa .Transparent ;};_ecg ,_dgf :=float64 (x ),float64 (y );_gefe ,_fbd ,_ebf ,_efg :=_ecee ._fff ,_ecee ._feea ,_ecee ._fdag ,_ecee ._bab ;_dfe ,_gfa :=_ebf -_gefe ,_efg -_fbd ;if _gfa ==0&&_dfe !=0{return _dedb ((_ecg -_gefe )/_dfe ,_ecee ._cfad );};if _dfe ==0&&_gfa !=0{return _dedb ((_dgf -_fbd )/_gfa ,_ecee ._cfad );};_bgg :=_dfe *(_ecg -_gefe )+_gfa *(_dgf -_fbd );if _bgg < 0{return _ecee ._cfad [0]._bbge ;};_cdbe :=_b .Hypot (_dfe ,_gfa );_gfec :=((_ecg -_gefe )*-_gfa +(_dgf -_fbd )*_dfe )/(_cdbe *_cdbe );_bfe ,_aeag :=_gefe +_gfec *-_gfa ,_fbd +_gfec *_dfe ;_cead :=_b .Hypot (_ecg -_bfe ,_dgf -_aeag )/_cdbe ;return _dedb (_cead ,_ecee ._cfad );};func _age (_fdege _fe .Int26_6 )float64 {const _cdca ,_adag =6,1<<6-1;if _fdege >=0{return float64 (_fdege >>_cdca )+float64 (_fdege &_adag )/64;};_fdege =-_fdege ;if _fdege >=0{return -(float64 (_fdege >>_cdca )+float64 (_fdege &_adag )/64);};return 0;};func (_faf *Context )SetLineJoin (lineJoin _bb .LineJoin ){_faf ._fda =lineJoin };type Context struct{_ccc int ;_dec int ;_gef *_bbf .Rasterizer ;_agd *_c .RGBA ;_feb *_c .Alpha ;_dbcb _fa .Color ;_dace _bb .Pattern ;_fae _bb .Pattern ;_dfg _bbf .Path ;_dfb _bbf .Path ;_ad _a .Point ;_gbe _a .Point ;_bbc bool ;_gfb []float64 ;_egd float64 ;_bbea float64 ;_cab _bb .LineCap ;_fda _bb .LineJoin ;_aeg _bb .FillRule ;_gdf _a .Matrix ;_bd *_bb .TextState ;_ddd []*Context ;};func (_bce *Context )Translate (x ,y float64 ){_bce ._gdf .Translate (x ,y )};func (_dacb *Context )SetMask (mask *_c .Alpha )error {if mask .Bounds ().Size ()!=_dacb ._agd .Bounds ().Size (){return _dg .New ("\u006d\u0061\u0073\u006b\u0020\u0073i\u007a\u0065\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068 \u0063\u006f\u006e\u0074\u0065\u0078\u0074 \u0073\u0069\u007a\u0065");};_dacb ._feb =mask ;return nil ;};func (_ada *Context )ClipPreserve (){_fggc :=_c .NewAlpha (_c .Rect (0,0,_ada ._ccc ,_ada ._dec ));_ead :=_bbf .NewAlphaOverPainter (_fggc );_ada .fill (_ead );if _ada ._feb ==nil {_ada ._feb =_fggc ;}else {_cce :=_c .NewAlpha (_c .Rect (0,0,_ada ._ccc ,_ada ._dec ));_be .DrawMask (_cce ,_cce .Bounds (),_fggc ,_c .ZP ,_ada ._feb ,_c .ZP ,_be .Over );_ada ._feb =_cce ;};};type radialGradient struct{_geg ,_fbfc ,_ddb circle ;_ded ,_eccd float64 ;_dfa float64 ;_cggc stops ;};func (_ecc *Context )DrawStringAnchored (s string ,x ,y ,ax ,ay float64 ){_aed ,_edbf :=_ecc .MeasureString (s );x -=ax *_aed ;y +=ay *_edbf ;if _ecc ._feb ==nil {_ecc .drawString (_ecc ._agd ,s ,x ,y );}else {_ccb :=_c .NewRGBA (_c .Rect (0,0,_ecc ._ccc ,_ecc ._dec ));_ecc .drawString (_ccb ,s ,x ,y );_be .DrawMask (_ecc ._agd ,_ecc ._agd .Bounds (),_ccb ,_c .ZP ,_ecc ._feb ,_c .ZP ,_be .Over );};};func (_ccce *Context )SetRGB255 (r ,g ,b int ){_ccce .SetRGBA255 (r ,g ,b ,255)};func (_bbb *Context )Width ()int {return _bbb ._ccc };func _bfef (_adab _c .Image )*_c .RGBA {_faeg :=_adab .Bounds ();_dda :=_c .NewRGBA (_faeg );_e .Draw (_dda ,_faeg ,_adab ,_faeg .Min ,_e .Src );return _dda ;};func (_faed *Context )QuadraticTo (x1 ,y1 ,x2 ,y2 float64 ){if !_faed ._bbc {_faed .MoveTo (x1 ,y1 );};x1 ,y1 =_faed .Transform (x1 ,y1 );x2 ,y2 =_faed .Transform (x2 ,y2 );_edf :=_a .NewPoint (x1 ,y1 );_fgfe :=_a .NewPoint (x2 ,y2 );_gcc :=_deg (_edf );_febb :=_deg (_fgfe );_faed ._dfg .Add2 (_gcc ,_febb );_faed ._dfb .Add2 (_gcc ,_febb );_faed ._gbe =_fgfe ;};func (_ade *Context )ResetClip (){_ade ._feb =nil };func (_ddf stops )Less (i ,j int )bool {return _ddf [i ]._eda < _ddf [j ]._eda };func (_aff *Context )DrawLine (x1 ,y1 ,x2 ,y2 float64 ){_aff .MoveTo (x1 ,y1 );_aff .LineTo (x2 ,y2 )};func (_dbf *Context )DrawEllipse (x ,y ,rx ,ry float64 ){_dbf .NewSubPath ();_dbf .DrawEllipticalArc (x ,y ,rx ,ry ,0,2*_b .Pi );_dbf .ClosePath ();};