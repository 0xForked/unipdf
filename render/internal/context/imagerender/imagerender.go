//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package imagerender ;import (_e "errors";_ad "fmt";_bd "github.com/unidoc/freetype/raster";_ge "github.com/unidoc/unipdf/v3/common";_dd "github.com/unidoc/unipdf/v3/internal/transform";_fd "github.com/unidoc/unipdf/v3/render/internal/context";_b "golang.org/x/image/draw";
_gea "golang.org/x/image/font";_ac "golang.org/x/image/math/f64";_c "golang.org/x/image/math/fixed";_d "image";_g "image/color";_gb "image/draw";_ff "math";_ffe "sort";_a "strings";);type Context struct{_gg int ;_egdg int ;_fccb *_bd .Rasterizer ;_dgf *_d .RGBA ;
_fg *_d .Alpha ;_ef _g .Color ;_cb _fd .Pattern ;_cff _fd .Pattern ;_dad _bd .Path ;_eag _bd .Path ;_dgfb _dd .Point ;_gbd _dd .Point ;_ddf bool ;_dac []float64 ;_gaa float64 ;_bea float64 ;_fcf _fd .LineCap ;_gefe _fd .LineJoin ;_abe _fd .FillRule ;_ggf _dd .Matrix ;
_gd _fd .TextState ;_cef []*Context ;};func (_fcaa *solidPattern )ColorAt (x ,y int )_g .Color {return _fcaa ._agd };func (_acc *Context )SetFillStyle (pattern _fd .Pattern ){if _gbdb ,_cc :=pattern .(*solidPattern );_cc {_acc ._ef =_gbdb ._agd ;};_acc ._cb =pattern ;
};func NewContextForRGBA (im *_d .RGBA )*Context {_bb :=im .Bounds ().Size ().X ;_dec :=im .Bounds ().Size ().Y ;return &Context {_gg :_bb ,_egdg :_dec ,_fccb :_bd .NewRasterizer (_bb ,_dec ),_dgf :im ,_ef :_g .Transparent ,_cb :_geg ,_cff :_daf ,_bea :1,_abe :_fd .FillRuleWinding ,_ggf :_dd .IdentityMatrix (),_gd :_fd .NewTextState ()};
};func (_ffdc *Context )DrawEllipse (x ,y ,rx ,ry float64 ){_ffdc .NewSubPath ();_ffdc .DrawEllipticalArc (x ,y ,rx ,ry ,0,2*_ff .Pi );_ffdc .ClosePath ();};func (_bcfe *Context )Rotate (angle float64 ){_bcfe ._ggf =_bcfe ._ggf .Rotate (angle )};func _gef (_adb ,_db ,_ca ,_ed ,_eec ,_bg float64 )[]_dd .Point {_eb :=(_ff .Hypot (_ca -_adb ,_ed -_db )+_ff .Hypot (_eec -_ca ,_bg -_ed ));
_egd :=int (_eb +0.5);if _egd < 4{_egd =4;};_gbe :=float64 (_egd )-1;_fcd :=make ([]_dd .Point ,_egd );for _caa :=0;_caa < _egd ;_caa ++{_dg :=float64 (_caa )/_gbe ;_ffg ,_gf :=_acb (_adb ,_db ,_ca ,_ed ,_eec ,_bg ,_dg );_fcd [_caa ]=_dd .NewPoint (_ffg ,_gf );
};return _fcd ;};func (_gdb *Context )SetRGBA255 (r ,g ,b ,a int ){_gdb ._ef =_g .NRGBA {uint8 (r ),uint8 (g ),uint8 (b ),uint8 (a )};_gdb .setFillAndStrokeColor (_gdb ._ef );};func (_bff *Context )DrawStringAnchored (s string ,face _gea .Face ,x ,y ,ax ,ay float64 ){_fed ,_geag :=_bff .MeasureString (s ,face );
_bff .drawString (s ,face ,x -ax *_fed ,y +ay *_geag );};func (_gfc *Context )setFillAndStrokeColor (_aeg _g .Color ){_gfc ._ef =_aeg ;_gfc ._cb =_aff (_aeg );_gfc ._cff =_aff (_aeg );};func _eaf (_dcbb _dd .Point )_c .Point26_6 {return _c .Point26_6 {X :_ecf (_dcbb .X ),Y :_ecf (_dcbb .Y )}};
var (_geg =_aff (_g .White );_daf =_aff (_g .Black ););func (_fbe *Context )DrawRectangle (x ,y ,w ,h float64 ){_fbe .NewSubPath ();_fbe .MoveTo (x ,y );_fbe .LineTo (x +w ,y );_fbe .LineTo (x +w ,y +h );_fbe .LineTo (x ,y +h );_fbe .ClosePath ();};func (_abcg *linearGradient )ColorAt (x ,y int )_g .Color {if len (_abcg ._dcf )==0{return _g .Transparent ;
};_def ,_aaf :=float64 (x ),float64 (y );_deea ,_aade ,_eeeb ,_dcaa :=_abcg ._egdgb ,_abcg ._bbe ,_abcg ._caeg ,_abcg ._adbgf ;_ebg ,_gbfc :=_eeeb -_deea ,_dcaa -_aade ;if _gbfc ==0&&_ebg !=0{return _agcd ((_def -_deea )/_ebg ,_abcg ._dcf );};if _ebg ==0&&_gbfc !=0{return _agcd ((_aaf -_aade )/_gbfc ,_abcg ._dcf );
};_fbda :=_ebg *(_def -_deea )+_gbfc *(_aaf -_aade );if _fbda < 0{return _abcg ._dcf [0]._bgga ;};_dbac :=_ff .Hypot (_ebg ,_gbfc );_bcg :=((_def -_deea )*-_gbfc +(_aaf -_aade )*_ebg )/(_dbac *_dbac );_dgbg ,_gfe :=_deea +_bcg *-_gbfc ,_aade +_bcg *_ebg ;
_gffb :=_ff .Hypot (_def -_dgbg ,_aaf -_gfe )/_dbac ;return _agcd (_gffb ,_abcg ._dcf );};func (_edg *Context )MoveTo (x ,y float64 ){if _edg ._ddf {_edg ._eag .Add1 (_eaf (_edg ._dgfb ));};x ,y =_edg .Transform (x ,y );_gcg :=_dd .NewPoint (x ,y );_deeb :=_eaf (_gcg );
_edg ._dad .Start (_deeb );_edg ._eag .Start (_deeb );_edg ._dgfb =_gcg ;_edg ._gbd =_gcg ;_edg ._ddf =true ;};func (_aagg *patternPainter )Paint (ss []_bd .Span ,done bool ){_cadf :=_aagg ._dgfd .Bounds ();for _ ,_cgc :=range ss {if _cgc .Y < _cadf .Min .Y {continue ;
};if _cgc .Y >=_cadf .Max .Y {return ;};if _cgc .X0 < _cadf .Min .X {_cgc .X0 =_cadf .Min .X ;};if _cgc .X1 > _cadf .Max .X {_cgc .X1 =_cadf .Max .X ;};if _cgc .X0 >=_cgc .X1 {continue ;};const _cfeg =1<<16-1;_ddfb :=_cgc .Y -_aagg ._dgfd .Rect .Min .Y ;
_gbb :=_cgc .X0 -_aagg ._dgfd .Rect .Min .X ;_abcc :=(_cgc .Y -_aagg ._dgfd .Rect .Min .Y )*_aagg ._dgfd .Stride +(_cgc .X0 -_aagg ._dgfd .Rect .Min .X )*4;_dgdc :=_abcc +(_cgc .X1 -_cgc .X0 )*4;for _ccbc ,_fagf :=_abcc ,_gbb ;_ccbc < _dgdc ;_ccbc ,_fagf =_ccbc +4,_fagf +1{_cbgc :=_cgc .Alpha ;
if _aagg ._cecc !=nil {_cbgc =_cbgc *uint32 (_aagg ._cecc .AlphaAt (_fagf ,_ddfb ).A )/255;if _cbgc ==0{continue ;};};_ecc :=_aagg ._bad .ColorAt (_fagf ,_ddfb );_eff ,_dgag ,_fcdd ,_dcc :=_ecc .RGBA ();_ddg :=uint32 (_aagg ._dgfd .Pix [_ccbc +0]);_bbaa :=uint32 (_aagg ._dgfd .Pix [_ccbc +1]);
_cfbe :=uint32 (_aagg ._dgfd .Pix [_ccbc +2]);_dcd :=uint32 (_aagg ._dgfd .Pix [_ccbc +3]);_ffga :=(_cfeg -(_dcc *_cbgc /_cfeg ))*0x101;_aagg ._dgfd .Pix [_ccbc +0]=uint8 ((_ddg *_ffga +_eff *_cbgc )/_cfeg >>8);_aagg ._dgfd .Pix [_ccbc +1]=uint8 ((_bbaa *_ffga +_dgag *_cbgc )/_cfeg >>8);
_aagg ._dgfd .Pix [_ccbc +2]=uint8 ((_cfbe *_ffga +_fcdd *_cbgc )/_cfeg >>8);_aagg ._dgfd .Pix [_ccbc +3]=uint8 ((_dcd *_ffga +_dcc *_cbgc )/_cfeg >>8);};};};func (_eea *Context )CubicTo (x1 ,y1 ,x2 ,y2 ,x3 ,y3 float64 ){if !_eea ._ddf {_eea .MoveTo (x1 ,y1 );
};_bfb ,_ggc :=_eea ._gbd .X ,_eea ._gbd .Y ;x1 ,y1 =_eea .Transform (x1 ,y1 );x2 ,y2 =_eea .Transform (x2 ,y2 );x3 ,y3 =_eea .Transform (x3 ,y3 );_gff :=_gcef (_bfb ,_ggc ,x1 ,y1 ,x2 ,y2 ,x3 ,y3 );_bfdf :=_eaf (_eea ._gbd );for _ ,_fbd :=range _gff [1:]{_bcf :=_eaf (_fbd );
if _bcf ==_bfdf {continue ;};_bfdf =_bcf ;_eea ._dad .Add1 (_bcf );_eea ._eag .Add1 (_bcf );_eea ._gbd =_fbd ;};};func (_gdc *Context )Fill (){_gdc .FillPreserve ();_gdc .ClearPath ()};type surfacePattern struct{_bedd _d .Image ;_fbeeb repeatOp ;};type patternPainter struct{_dgfd *_d .RGBA ;
_cecc *_d .Alpha ;_bad _fd .Pattern ;};func (_cge *Context )Clip (){_cge .ClipPreserve ();_cge .ClearPath ()};func _gda (_fad _bd .Path )[][]_dd .Point {var _eaeg [][]_dd .Point ;var _gfcb []_dd .Point ;var _afg ,_edb float64 ;for _bbeb :=0;_bbeb < len (_fad );
{switch _fad [_bbeb ]{case 0:if len (_gfcb )> 0{_eaeg =append (_eaeg ,_gfcb );_gfcb =nil ;};_fbef :=_cfd (_fad [_bbeb +1]);_ebge :=_cfd (_fad [_bbeb +2]);_gfcb =append (_gfcb ,_dd .NewPoint (_fbef ,_ebge ));_afg ,_edb =_fbef ,_ebge ;_bbeb +=4;case 1:_bfe :=_cfd (_fad [_bbeb +1]);
_gcfd :=_cfd (_fad [_bbeb +2]);_gfcb =append (_gfcb ,_dd .NewPoint (_bfe ,_gcfd ));_afg ,_edb =_bfe ,_gcfd ;_bbeb +=4;case 2:_dga :=_cfd (_fad [_bbeb +1]);_bge :=_cfd (_fad [_bbeb +2]);_gga :=_cfd (_fad [_bbeb +3]);_aaff :=_cfd (_fad [_bbeb +4]);_ccc :=_gef (_afg ,_edb ,_dga ,_bge ,_gga ,_aaff );
_gfcb =append (_gfcb ,_ccc ...);_afg ,_edb =_gga ,_aaff ;_bbeb +=6;case 3:_eaa :=_cfd (_fad [_bbeb +1]);_gegd :=_cfd (_fad [_bbeb +2]);_gbdbcg :=_cfd (_fad [_bbeb +3]);_dgab :=_cfd (_fad [_bbeb +4]);_adg :=_cfd (_fad [_bbeb +5]);_fbde :=_cfd (_fad [_bbeb +6]);
_gega :=_gcef (_afg ,_edb ,_eaa ,_gegd ,_gbdbcg ,_dgab ,_adg ,_fbde );_gfcb =append (_gfcb ,_gega ...);_afg ,_edb =_adg ,_fbde ;_bbeb +=8;default:_ge .Log .Debug ("\u0057\u0041\u0052\u004e: \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0070\u0061\u0074\u0068\u003a\u0020%\u0076",_fad );
return _eaeg ;};};if len (_gfcb )> 0{_eaeg =append (_eaeg ,_gfcb );};return _eaeg ;};func (_ddc *Context )ClosePath (){if _ddc ._ddf {_fdde :=_eaf (_ddc ._dgfb );_ddc ._dad .Add1 (_fdde );_ddc ._eag .Add1 (_fdde );_ddc ._gbd =_ddc ._dgfb ;};};func (_gbeg *Context )ShearAbout (sx ,sy ,x ,y float64 ){_gbeg .Translate (x ,y );
_gbeg .Shear (sx ,sy );_gbeg .Translate (-x ,-y );};func (_gca *Context )SetDash (dashes ...float64 ){_gca ._dac =dashes };func (_caab *Context )drawString (_afe string ,_bbfb _gea .Face ,_dgdg ,_edd float64 ){_acfg :=&_gea .Drawer {Src :_d .NewUniform (_caab ._ef ),Face :_bbfb ,Dot :_eaf (_dd .NewPoint (_dgdg ,_edd ))};
_ccb :=rune (-1);for _ ,_daa :=range _afe {if _ccb >=0{_acfg .Dot .X +=_acfg .Face .Kern (_ccb ,_daa );};_fbae ,_caag ,_agcc ,_dff ,_ba :=_acfg .Face .Glyph (_acfg .Dot ,_daa );if !_ba {continue ;};_add :=_fbae .Sub (_fbae .Min );_gdca :=_d .NewRGBA (_add );
_b .DrawMask (_gdca ,_add ,_acfg .Src ,_d .Point {},_caag ,_agcc ,_b .Over );var _bgda *_b .Options ;if _caab ._fg !=nil {_bgda =&_b .Options {DstMask :_caab ._fg ,DstMaskP :_d .Point {}};};_fccf :=_caab ._ggf .Clone ().Translate (float64 (_fbae .Min .X ),float64 (_fbae .Min .Y ));
_edf :=_ac .Aff3 {_fccf [0],_fccf [3],_fccf [6],_fccf [1],_fccf [4],_fccf [7]};_b .BiLinear .Transform (_caab ._dgf ,_edf ,_gdca ,_add ,_b .Over ,_bgda );_acfg .Dot .X +=_dff ;_ccb =_daa ;};};func (_aadd *Context )InvertMask (){if _aadd ._fg ==nil {_aadd ._fg =_d .NewAlpha (_aadd ._dgf .Bounds ());
}else {for _gced ,_eeeg :=range _aadd ._fg .Pix {_aadd ._fg .Pix [_gced ]=255-_eeeg ;};};};func (_ggg *Context )SetFillRGBA (r ,g ,b ,a float64 ){_bba :=_g .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_ggg ._ef =_bba ;_ggg ._cb =_aff (_bba );
};func (_fgd *Context )SetLineCap (lineCap _fd .LineCap ){_fgd ._fcf =lineCap };func (_bgbb *Context )TextState ()*_fd .TextState {return &_bgbb ._gd };func (_cbc *Context )LineWidth ()float64 {return _cbc ._bea };func (_geaff *Context )joiner ()_bd .Joiner {switch _geaff ._gefe {case _fd .LineJoinBevel :return _bd .BevelJoiner ;
case _fd .LineJoinRound :return _bd .RoundJoiner ;};return nil ;};func (_deb *Context )Stroke (){_deb .StrokePreserve ();_deb .ClearPath ()};func (_gdeg *linearGradient )AddColorStop (offset float64 ,color _g .Color ){_gdeg ._dcf =append (_gdeg ._dcf ,stop {_dagg :offset ,_bgga :color });
_ffe .Sort (_gdeg ._dcf );};func (_eee *Context )ClipPreserve (){_caef :=_d .NewAlpha (_d .Rect (0,0,_eee ._gg ,_eee ._egdg ));_cdb :=_bd .NewAlphaOverPainter (_caef );_eee .fill (_cdb );if _eee ._fg ==nil {_eee ._fg =_caef ;}else {_bgff :=_d .NewAlpha (_d .Rect (0,0,_eee ._gg ,_eee ._egdg ));
_b .DrawMask (_bgff ,_bgff .Bounds (),_caef ,_d .Point {},_eee ._fg ,_d .Point {},_b .Over );_eee ._fg =_bgff ;};};type stops []stop ;func (_bbc stops )Swap (i ,j int ){_bbc [i ],_bbc [j ]=_bbc [j ],_bbc [i ]};func (_acaf *Context )stroke (_bbgg _bd .Painter ){_adfc :=_acaf ._dad ;
if len (_acaf ._dac )> 0{_adfc =_fagb (_adfc ,_acaf ._dac ,_acaf ._gaa );}else {_adfc =_fab (_gda (_adfc ));};_bebc :=_acaf ._fccb ;_bebc .UseNonZeroWinding =true ;_bebc .Clear ();_ceg :=(_acaf ._ggf .ScalingFactorX ()+_acaf ._ggf .ScalingFactorY ())/2;
_bebc .AddStroke (_adfc ,_ecf (_acaf ._bea *_ceg ),_acaf .capper (),_acaf .joiner ());_bebc .Rasterize (_bbgg );};func (_gcc *Context )DrawPoint (x ,y ,r float64 ){_gcc .Push ();_adbg ,_ebe :=_gcc .Transform (x ,y );_gcc .Identity ();_gcc .DrawCircle (_adbg ,_ebe ,r );
_gcc .Pop ();};func (_cbb *Context )Push (){_cag :=*_cbb ;_cbb ._cef =append (_cbb ._cef ,&_cag )};func (_egae *Context )SetHexColor (x string ){_cd ,_fdd ,_dgd ,_efb :=_gcac (x );_egae .SetRGBA255 (_cd ,_fdd ,_dgd ,_efb );};type repeatOp int ;func (_eef *Context )SetDashOffset (offset float64 ){_eef ._gaa =offset };
func (_bbd *Context )SetMask (mask *_d .Alpha )error {if mask .Bounds ().Size ()!=_bbd ._dgf .Bounds ().Size (){return _e .New ("\u006d\u0061\u0073\u006b\u0020\u0073i\u007a\u0065\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068 \u0063\u006f\u006e\u0074\u0065\u0078\u0074 \u0073\u0069\u007a\u0065");
};_bbd ._fg =mask ;return nil ;};func (_cgb stops )Len ()int {return len (_cgb )};func (_cgee *Context )DrawRoundedRectangle (x ,y ,w ,h ,r float64 ){_adc ,_dfg ,_fbdf ,_ggcc :=x ,x +r ,x +w -r ,x +w ;_ddd ,_acca ,_cbf ,_bec :=y ,y +r ,y +h -r ,y +h ;_cgee .NewSubPath ();
_cgee .MoveTo (_dfg ,_ddd );_cgee .LineTo (_fbdf ,_ddd );_cgee .DrawArc (_fbdf ,_acca ,r ,_abbe (270),_abbe (360));_cgee .LineTo (_ggcc ,_cbf );_cgee .DrawArc (_fbdf ,_cbf ,r ,_abbe (0),_abbe (90));_cgee .LineTo (_dfg ,_bec );_cgee .DrawArc (_dfg ,_cbf ,r ,_abbe (90),_abbe (180));
_cgee .LineTo (_adc ,_acca );_cgee .DrawArc (_dfg ,_acca ,r ,_abbe (180),_abbe (270));_cgee .ClosePath ();};func (_bga *Context )ResetClip (){_bga ._fg =nil };func (_gac *Context )Pop (){_cgf :=*_gac ;_cfg :=_gac ._cef ;_dag :=_cfg [len (_cfg )-1];*_gac =*_dag ;
_gac ._dad =_cgf ._dad ;_gac ._eag =_cgf ._eag ;_gac ._dgfb =_cgf ._dgfb ;_gac ._gbd =_cgf ._gbd ;_gac ._ddf =_cgf ._ddf ;};func (_bcc *Context )drawRegularPolygon (_afdc int ,_dcb ,_ebd ,_fee ,_cgd float64 ){_gae :=2*_ff .Pi /float64 (_afdc );_cgd -=_ff .Pi /2;
if _afdc %2==0{_cgd +=_gae /2;};_bcc .NewSubPath ();for _acbe :=0;_acbe < _afdc ;_acbe ++{_ebef :=_cgd +_gae *float64 (_acbe );_bcc .LineTo (_dcb +_fee *_ff .Cos (_ebef ),_ebd +_fee *_ff .Sin (_ebef ));};_bcc .ClosePath ();};func _gbfaf (_ggdd _d .Image ,_dce repeatOp )_fd .Pattern {return &surfacePattern {_bedd :_ggdd ,_fbeeb :_dce };
};func _bfd (_ab ,_aad ,_cf ,_abd ,_bgg ,_df ,_bc ,_ea ,_abf float64 )(_ae ,_bgf float64 ){_ega :=1-_abf ;_dda :=_ega *_ega *_ega ;_gce :=3*_ega *_ega *_abf ;_gfg :=3*_ega *_abf *_abf ;_ce :=_abf *_abf *_abf ;_ae =_dda *_ab +_gce *_cf +_gfg *_bgg +_ce *_bc ;
_bgf =_dda *_aad +_gce *_abd +_gfg *_df +_ce *_ea ;return ;};func _egdc (_dddc ,_cba uint32 ,_gdbe float64 )uint8 {return uint8 (int32 (float64 (_dddc )*(1.0-_gdbe )+float64 (_cba )*_gdbe )>>8);};func (_gab *Context )Matrix ()_dd .Matrix {return _gab ._ggf };
func _cfd (_ffgd _c .Int26_6 )float64 {const _adff ,_fcbg =6,1<<6-1;if _ffgd >=0{return float64 (_ffgd >>_adff )+float64 (_ffgd &_fcbg )/64;};_ffgd =-_ffgd ;if _ffgd >=0{return -(float64 (_ffgd >>_adff )+float64 (_ffgd &_fcbg )/64);};return 0;};func (_bbg *Context )StrokePattern ()_fd .Pattern {return _bbg ._cff };
func NewContextForImage (im _d .Image )*Context {return NewContextForRGBA (_cgbf (im ))};func (_gcd stops )Less (i ,j int )bool {return _gcd [i ]._dagg < _gcd [j ]._dagg };func (_cab *Context )SetRGB (r ,g ,b float64 ){_cab .SetRGBA (r ,g ,b ,1)};func _gcef (_fe ,_acbc ,_fcc ,_agc ,_bgd ,_adf ,_aeb ,_ga float64 )[]_dd .Point {_fca :=(_ff .Hypot (_fcc -_fe ,_agc -_acbc )+_ff .Hypot (_bgd -_fcc ,_adf -_agc )+_ff .Hypot (_aeb -_bgd ,_ga -_adf ));
_abb :=int (_fca +0.5);if _abb < 4{_abb =4;};_dee :=float64 (_abb )-1;_fb :=make ([]_dd .Point ,_abb );for _be :=0;_be < _abb ;_be ++{_beb :=float64 (_be )/_dee ;_acbcf ,_da :=_bfd (_fe ,_acbc ,_fcc ,_agc ,_bgd ,_adf ,_aeb ,_ga ,_beb );_fb [_be ]=_dd .NewPoint (_acbcf ,_da );
};return _fb ;};func _fagb (_fccc _bd .Path ,_afbd []float64 ,_gffg float64 )_bd .Path {return _fab (_efgf (_gda (_fccc ),_afbd ,_gffg ));};func (_gefee *Context )SetMatrix (m _dd .Matrix ){_gefee ._ggf =m };func (_ccd *Context )SetColor (c _g .Color ){_ccd .setFillAndStrokeColor (c )};
func (_agg *Context )SetLineWidth (lineWidth float64 ){_agg ._bea =lineWidth };func (_gbga *Context )Transform (x ,y float64 )(_decc ,_abgb float64 ){return _gbga ._ggf .Transform (x ,y );};func (_gfb *Context )SetFillRule (fillRule _fd .FillRule ){_gfb ._abe =fillRule };
func _gag (_gabe *_d .RGBA ,_bce *_d .Alpha ,_gcfg _fd .Pattern )*patternPainter {return &patternPainter {_gabe ,_bce ,_gcfg };};func (_ebc *Context )Identity (){_ebc ._ggf =_dd .IdentityMatrix ()};type circle struct{_abgg ,_abfc ,_fac float64 };type solidPattern struct{_agd _g .Color };
func (_gcf *Context )LineTo (x ,y float64 ){if !_gcf ._ddf {_gcf .MoveTo (x ,y );}else {x ,y =_gcf .Transform (x ,y );_gbg :=_dd .NewPoint (x ,y );_bgb :=_eaf (_gbg );_gcf ._dad .Add1 (_bgb );_gcf ._eag .Add1 (_bgb );_gcf ._gbd =_gbg ;};};func (_ggd *Context )Shear (x ,y float64 ){_ggd ._ggf .Shear (x ,y )};
func (_fgb *Context )DrawString (s string ,face _gea .Face ,x ,y float64 ){_fgb .DrawStringAnchored (s ,face ,x ,y ,0,0);};func _ecf (_gceca float64 )_c .Int26_6 {return _c .Int26_6 (_gceca *64)};func (_aaa *Context )RotateAbout (angle ,x ,y float64 ){_aaa .Translate (x ,y );
_aaa .Rotate (angle );_aaa .Translate (-x ,-y );};func (_cec *Context )SetLineJoin (lineJoin _fd .LineJoin ){_cec ._gefe =lineJoin };func _aff (_bde _g .Color )_fd .Pattern {return &solidPattern {_agd :_bde }};func (_gcec *radialGradient )AddColorStop (offset float64 ,color _g .Color ){_gcec ._fbf =append (_gcec ._fbf ,stop {_dagg :offset ,_bgga :color });
_ffe .Sort (_gcec ._fbf );};func (_fgbc *Context )Translate (x ,y float64 ){_fgbc ._ggf =_fgbc ._ggf .Translate (x ,y )};func (_dbg *Context )capper ()_bd .Capper {switch _dbg ._fcf {case _fd .LineCapButt :return _bd .ButtCapper ;case _fd .LineCapRound :return _bd .RoundCapper ;
case _fd .LineCapSquare :return _bd .SquareCapper ;};return nil ;};func (_bfbb *Context )ScaleAbout (sx ,sy ,x ,y float64 ){_bfbb .Translate (x ,y );_bfbb .Scale (sx ,sy );_bfbb .Translate (-x ,-y );};func _cea (_egaeb ,_ecd ,_fbdff ,_ddca ,_bffd ,_bgc float64 )float64 {return _egaeb *_ddca +_ecd *_bffd +_fbdff *_bgc ;
};func _gcac (_bebcf string )(_gaf ,_acd ,_gaba ,_aed int ){_bebcf =_a .TrimPrefix (_bebcf ,"\u0023");_aed =255;if len (_bebcf )==3{_cega :="\u00251\u0078\u0025\u0031\u0078\u0025\u0031x";_ad .Sscanf (_bebcf ,_cega ,&_gaf ,&_acd ,&_gaba );_gaf |=_gaf <<4;
_acd |=_acd <<4;_gaba |=_gaba <<4;};if len (_bebcf )==6{_cbe :="\u0025\u0030\u0032x\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";_ad .Sscanf (_bebcf ,_cbe ,&_gaf ,&_acd ,&_gaba );};if len (_bebcf )==8{_efd :="\u0025\u00302\u0078\u0025\u00302\u0078\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";
_ad .Sscanf (_bebcf ,_efd ,&_gaf ,&_acd ,&_gaba ,&_aed );};return ;};func (_fa *Context )QuadraticTo (x1 ,y1 ,x2 ,y2 float64 ){if !_fa ._ddf {_fa .MoveTo (x1 ,y1 );};x1 ,y1 =_fa .Transform (x1 ,y1 );x2 ,y2 =_fa .Transform (x2 ,y2 );_egag :=_dd .NewPoint (x1 ,y1 );
_fcfd :=_dd .NewPoint (x2 ,y2 );_geff :=_eaf (_egag );_abg :=_eaf (_fcfd );_fa ._dad .Add2 (_geff ,_abg );_fa ._eag .Add2 (_geff ,_abg );_fa ._gbd =_fcfd ;};func (_fcg *Context )DrawImage (im _d .Image ,x ,y int ){_fcg .DrawImageAnchored (im ,x ,y ,0,0)};
func _fab (_ggac [][]_dd .Point )_bd .Path {var _fedg _bd .Path ;for _ ,_degc :=range _ggac {var _dae _c .Point26_6 ;for _bgeb ,_cfa :=range _degc {_eeab :=_eaf (_cfa );if _bgeb ==0{_fedg .Start (_eeab );}else {_ccce :=_eeab .X -_dae .X ;_bag :=_eeab .Y -_dae .Y ;
if _ccce < 0{_ccce =-_ccce ;};if _bag < 0{_bag =-_bag ;};if _ccce +_bag > 8{_fedg .Add1 (_eeab );};};_dae =_eeab ;};};return _fedg ;};type radialGradient struct{_cedc ,_fff ,_deg circle ;_efg ,_fea float64 ;_gdea float64 ;_fbf stops ;};func (_acf *Context )Image ()_d .Image {return _acf ._dgf };
func (_dgb *Context )Height ()int {return _dgb ._egdg };func (_afd *Context )SetRGBA (r ,g ,b ,a float64 ){_afd ._ef =_g .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_afd .setFillAndStrokeColor (_afd ._ef );};func (_acff *Context )Scale (x ,y float64 ){_acff ._ggf =_acff ._ggf .Scale (x ,y )};
func (_cgg *Context )AsMask ()*_d .Alpha {_aba :=_d .NewAlpha (_cgg ._dgf .Bounds ());_b .Draw (_aba ,_cgg ._dgf .Bounds (),_cgg ._dgf ,_d .Point {},_b .Src );return _aba ;};func (_fcfg *Context )DrawArc (x ,y ,r ,angle1 ,angle2 float64 ){_fcfg .DrawEllipticalArc (x ,y ,r ,r ,angle1 ,angle2 );
};func (_cebg *radialGradient )ColorAt (x ,y int )_g .Color {if len (_cebg ._fbf )==0{return _g .Transparent ;};_gee ,_fbdfe :=float64 (x )+0.5-_cebg ._cedc ._abgg ,float64 (y )+0.5-_cebg ._cedc ._abfc ;_afde :=_cea (_gee ,_fbdfe ,_cebg ._cedc ._fac ,_cebg ._deg ._abgg ,_cebg ._deg ._abfc ,_cebg ._deg ._fac );
_ebgd :=_cea (_gee ,_fbdfe ,-_cebg ._cedc ._fac ,_gee ,_fbdfe ,_cebg ._cedc ._fac );if _cebg ._efg ==0{if _afde ==0{return _g .Transparent ;};_fbg :=0.5*_ebgd /_afde ;if _fbg *_cebg ._deg ._fac >=_cebg ._gdea {return _agcd (_fbg ,_cebg ._fbf );};return _g .Transparent ;
};_ggca :=_cea (_afde ,_cebg ._efg ,0,_afde ,-_ebgd ,0);if _ggca >=0{_eecb :=_ff .Sqrt (_ggca );_efgg :=(_afde +_eecb )*_cebg ._fea ;_bbee :=(_afde -_eecb )*_cebg ._fea ;if _efgg *_cebg ._deg ._fac >=_cebg ._gdea {return _agcd (_efgg ,_cebg ._fbf );}else if _bbee *_cebg ._deg ._fac >=_cebg ._gdea {return _agcd (_bbee ,_cebg ._fbf );
};};return _g .Transparent ;};func (_faf *Context )FillPreserve (){var _fbag _bd .Painter ;if _faf ._fg ==nil {if _cbd ,_eae :=_faf ._cb .(*solidPattern );_eae {_dafa :=_bd .NewRGBAPainter (_faf ._dgf );_dafa .SetColor (_cbd ._agd );_fbag =_dafa ;};};if _fbag ==nil {_fbag =_gag (_faf ._dgf ,_faf ._fg ,_faf ._cb );
};_faf .fill (_fbag );};func (_gfba *Context )SetPixel (x ,y int ){_gfba ._dgf .Set (x ,y ,_gfba ._ef )};func (_agb *Context )DrawImageAnchored (im _d .Image ,x ,y int ,ax ,ay float64 ){_afb :=im .Bounds ().Size ();x -=int (ax *float64 (_afb .X ));y -=int (ay *float64 (_afb .Y ));
_agf :=_b .BiLinear ;_ged :=_agb ._ggf .Clone ().Translate (float64 (x ),float64 (y ));_gdf :=_ac .Aff3 {_ged [0],_ged [3],_ged [6],_ged [1],_ged [4],_ged [7]};if _agb ._fg ==nil {_agf .Transform (_agb ._dgf ,_gdf ,im ,im .Bounds (),_b .Over ,nil );}else {_agf .Transform (_agb ._dgf ,_gdf ,im ,im .Bounds (),_b .Over ,&_b .Options {DstMask :_agb ._fg ,DstMaskP :_d .Point {}});
};};func (_dc *Context )DrawLine (x1 ,y1 ,x2 ,y2 float64 ){_dc .MoveTo (x1 ,y1 );_dc .LineTo (x2 ,y2 )};func (_dfdg *surfacePattern )ColorAt (x ,y int )_g .Color {_cbfd :=_dfdg ._bedd .Bounds ();switch _dfdg ._fbeeb {case _ccda :if y >=_cbfd .Dy (){return _g .Transparent ;
};case _bcgc :if x >=_cbfd .Dx (){return _g .Transparent ;};case _dgca :if x >=_cbfd .Dx ()||y >=_cbfd .Dy (){return _g .Transparent ;};};x =x %_cbfd .Dx ()+_cbfd .Min .X ;y =y %_cbfd .Dy ()+_cbfd .Min .Y ;return _dfdg ._bedd .At (x ,y );};func _efgf (_bcfc [][]_dd .Point ,_cbg []float64 ,_bfg float64 )[][]_dd .Point {var _efe [][]_dd .Point ;
if len (_cbg )==0{return _bcfc ;};if len (_cbg )==1{_cbg =append (_cbg ,_cbg [0]);};for _ ,_fcab :=range _bcfc {if len (_fcab )< 2{continue ;};_dfd :=_fcab [0];_cfc :=1;_cad :=0;_fddg :=0.0;if _bfg !=0{var _facg float64 ;for _ ,_gdad :=range _cbg {_facg +=_gdad ;
};_bfg =_ff .Mod (_bfg ,_facg );if _bfg < 0{_bfg +=_facg ;};for _gfa ,_fbdb :=range _cbg {_bfg -=_fbdb ;if _bfg < 0{_cad =_gfa ;_fddg =_fbdb +_bfg ;break ;};};};var _bbb []_dd .Point ;_bbb =append (_bbb ,_dfd );for _cfc < len (_fcab ){_fffd :=_cbg [_cad ];
_gfbac :=_fcab [_cfc ];_dge :=_dfd .Distance (_gfbac );_bgffd :=_fffd -_fddg ;if _dge > _bgffd {_dagb :=_bgffd /_dge ;_abge :=_dfd .Interpolate (_gfbac ,_dagb );_bbb =append (_bbb ,_abge );if _cad %2==0&&len (_bbb )> 1{_efe =append (_efe ,_bbb );};_bbb =nil ;
_bbb =append (_bbb ,_abge );_fddg =0;_dfd =_abge ;_cad =(_cad +1)%len (_cbg );}else {_bbb =append (_bbb ,_gfbac );_dfd =_gfbac ;_fddg +=_dge ;_cfc ++;};};if _cad %2==0&&len (_bbb )> 1{_efe =append (_efe ,_bbb );};};return _efe ;};func (_fec *Context )MeasureString (s string ,face _gea .Face )(_dab ,_agbg float64 ){_gbed :=&_gea .Drawer {Face :face };
_gde :=_gbed .MeasureString (s );return float64 (_gde >>6),_fec ._gd .Tf .Size ;};func (_aggc *Context )Clear (){_ced :=_d .NewUniform (_aggc ._ef );_b .Draw (_aggc ._dgf ,_aggc ._dgf .Bounds (),_ced ,_d .Point {},_b .Src );};func NewContext (width ,height int )*Context {return NewContextForRGBA (_d .NewRGBA (_d .Rect (0,0,width ,height )));
};const (_fbeea repeatOp =iota ;_ccda ;_bcgc ;_dgca ;);func (_acfe *Context )StrokePreserve (){var _adba _bd .Painter ;if _acfe ._fg ==nil {if _gefa ,_cfe :=_acfe ._cff .(*solidPattern );_cfe {_feb :=_bd .NewRGBAPainter (_acfe ._dgf );_feb .SetColor (_gefa ._agd );
_adba =_feb ;};};if _adba ==nil {_adba =_gag (_acfe ._dgf ,_acfe ._fg ,_acfe ._cff );};_acfe .stroke (_adba );};func (_gbf *Context )DrawCircle (x ,y ,r float64 ){_gbf .NewSubPath ();_gbf .DrawEllipticalArc (x ,y ,r ,r ,0,2*_ff .Pi );_gbf .ClosePath ();
};func _cgbf (_dgfba _d .Image )*_d .RGBA {_bcge :=_dgfba .Bounds ();_gfae :=_d .NewRGBA (_bcge );_gb .Draw (_gfae ,_bcge ,_dgfba ,_bcge .Min ,_gb .Src );return _gfae ;};func _abba (_dadg ,_age _g .Color ,_beg float64 )_g .Color {_bcde ,_edee ,_eefg ,_bdc :=_dadg .RGBA ();
_gbfa ,_eefgd ,_ccbf ,_bdce :=_age .RGBA ();return _g .RGBA {_egdc (_bcde ,_gbfa ,_beg ),_egdc (_edee ,_eefgd ,_beg ),_egdc (_eefg ,_ccbf ,_beg ),_egdc (_bdc ,_bdce ,_beg )};};func (_eab *Context )Width ()int {return _eab ._gg };type stop struct{_dagg float64 ;
_bgga _g .Color ;};func (_ffd *Context )ClearPath (){_ffd ._dad .Clear ();_ffd ._eag .Clear ();_ffd ._ddf =false };func (_bed *Context )SetRGB255 (r ,g ,b int ){_bed .SetRGBA255 (r ,g ,b ,255)};func _abbe (_bdcb float64 )float64 {return _bdcb *_ff .Pi /180};
func (_gaag *Context )fill (_cde _bd .Painter ){_fcfb :=_gaag ._eag ;if _gaag ._ddf {_fcfb =make (_bd .Path ,len (_gaag ._eag ));copy (_fcfb ,_gaag ._eag );_fcfb .Add1 (_eaf (_gaag ._dgfb ));};_fba :=_gaag ._fccb ;_fba .UseNonZeroWinding =_gaag ._abe ==_fd .FillRuleWinding ;
_fba .Clear ();_fba .AddPath (_fcfb );_fba .Rasterize (_cde );};func (_cae *Context )NewSubPath (){if _cae ._ddf {_cae ._eag .Add1 (_eaf (_cae ._dgfb ));};_cae ._ddf =false ;};func _agcd (_dfb float64 ,_cbdd stops )_g .Color {if _dfb <=0.0||len (_cbdd )==1{return _cbdd [0]._bgga ;
};_bdf :=_cbdd [len (_cbdd )-1];if _dfb >=_bdf ._dagg {return _bdf ._bgga ;};for _dgc ,_fcb :=range _cbdd [1:]{if _dfb < _fcb ._dagg {_dfb =(_dfb -_cbdd [_dgc ]._dagg )/(_fcb ._dagg -_cbdd [_dgc ]._dagg );return _abba (_cbdd [_dgc ]._bgga ,_fcb ._bgga ,_dfb );
};};return _bdf ._bgga ;};func NewRadialGradient (x0 ,y0 ,r0 ,x1 ,y1 ,r1 float64 )_fd .Gradient {_gacc :=circle {x0 ,y0 ,r0 };_aab :=circle {x1 ,y1 ,r1 };_acfd :=circle {x1 -x0 ,y1 -y0 ,r1 -r0 };_fbee :=_cea (_acfd ._abgg ,_acfd ._abfc ,-_acfd ._fac ,_acfd ._abgg ,_acfd ._abfc ,_acfd ._fac );
var _cdbe float64 ;if _fbee !=0{_cdbe =1.0/_fbee ;};_dadf :=-_gacc ._fac ;_gaaf :=&radialGradient {_cedc :_gacc ,_fff :_aab ,_deg :_acfd ,_efg :_fbee ,_fea :_cdbe ,_gdea :_dadf };return _gaaf ;};func (_cfff *Context )FillPattern ()_fd .Pattern {return _cfff ._cb };
func (_bdb *Context )SetStrokeStyle (pattern _fd .Pattern ){_bdb ._cff =pattern };func _acb (_aa ,_bf ,_cg ,_ee ,_eg ,_ag ,_gc float64 )(_ade ,_gcb float64 ){_aca :=1-_gc ;_geaf :=_aca *_aca ;_de :=2*_aca *_gc ;_fc :=_gc *_gc ;_ade =_geaf *_aa +_de *_cg +_fc *_eg ;
_gcb =_geaf *_bf +_de *_ee +_fc *_ag ;return ;};func NewLinearGradient (x0 ,y0 ,x1 ,y1 float64 )_fd .Gradient {_ffee :=&linearGradient {_egdgb :x0 ,_bbe :y0 ,_caeg :x1 ,_adbgf :y1 };return _ffee ;};func (_af *Context )SetStrokeRGBA (r ,g ,b ,a float64 ){_aag :=_g .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};
_af ._cff =_aff (_aag );};type linearGradient struct{_egdgb ,_bbe ,_caeg ,_adbgf float64 ;_dcf stops ;};func (_gaage *Context )DrawEllipticalArc (x ,y ,rx ,ry ,angle1 ,angle2 float64 ){const _gefd =16;for _aac :=0;_aac < _gefd ;_aac ++{_ddb :=float64 (_aac +0)/_gefd ;
_ede :=float64 (_aac +1)/_gefd ;_dca :=angle1 +(angle2 -angle1 )*_ddb ;_cfb :=angle1 +(angle2 -angle1 )*_ede ;_bbf :=x +rx *_ff .Cos (_dca );_aga :=y +ry *_ff .Sin (_dca );_ceb :=x +rx *_ff .Cos ((_dca +_cfb )/2);_bcd :=y +ry *_ff .Sin ((_dca +_cfb )/2);
_bcdf :=x +rx *_ff .Cos (_cfb );_gbdbc :=y +ry *_ff .Sin (_cfb );_abc :=2*_ceb -_bbf /2-_bcdf /2;_caf :=2*_bcd -_aga /2-_gbdbc /2;if _aac ==0{if _gaage ._ddf {_gaage .LineTo (_bbf ,_aga );}else {_gaage .MoveTo (_bbf ,_aga );};};_gaage .QuadraticTo (_abc ,_caf ,_bcdf ,_gbdbc );
};};