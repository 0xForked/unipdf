//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package imagerender ;import (_c "errors";_g "fmt";_fd "github.com/golang/freetype/raster";_bc "github.com/unidoc/unipdf/v3/common";_fae "github.com/unidoc/unipdf/v3/internal/transform";_e "github.com/unidoc/unipdf/v3/render/internal/context";_gd "golang.org/x/image/draw";_da "golang.org/x/image/font";_gg "golang.org/x/image/math/f64";_ee "golang.org/x/image/math/fixed";_df "image";_b "image/color";_d "image/draw";_a "math";_fg "sort";_fa "strings";);func (_aaf *Context )Rotate (angle float64 ){_aaf ._cdf .Rotate (angle )};func (_eee *Context )LineWidth ()float64 {return _eee ._fda };func (_gfc *Context )SetFillRGBA (r ,g ,b ,a float64 ){_bbeb :=_b .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_gfc ._aaga =_bbeb ;_gfc ._bgd =_gaff (_bbeb );};func (_bgdaa *Context )ResetClip (){_bgdaa ._dbb =nil };func (_cga *surfacePattern )ColorAt (x ,y int )_b .Color {_cbbb :=_cga ._fdeg .Bounds ();switch _cga ._bacg {case _dfdg :if y >=_cbbb .Dy (){return _b .Transparent ;};case _eebc :if x >=_cbbb .Dx (){return _b .Transparent ;};case _ffb :if x >=_cbbb .Dx ()||y >=_cbbb .Dy (){return _b .Transparent ;};};x =x %_cbbb .Dx ()+_cbbb .Min .X ;y =y %_cbbb .Dy ()+_cbbb .Min .Y ;return _cga ._fdeg .At (x ,y );};func _eac (_egfb float64 )_ee .Int26_6 {return _ee .Int26_6 (_egfb *64)};func _dgca (_efg float64 )float64 {return _efg *_a .Pi /180};func (_ec *Context )SetDashOffset (offset float64 ){_ec ._egc =offset };func (_aef *Context )SetLineWidth (lineWidth float64 ){_aef ._fda =lineWidth };func (_eef *Context )Matrix ()_fae .Matrix {return _eef ._cdf };func (_cbg *Context )Fill (){_cbg .FillPreserve ();_cbg .ClearPath ()};func (_bgda *Context )ClosePath (){if _bgda ._dc {_fgd :=_fceg (_bgda ._geg );_bgda ._bab .Add1 (_fgd );_bgda ._fga .Add1 (_fgd );_bgda ._daa =_bgda ._geg ;};};func (_ged *Context )Width ()int {return _ged ._fgcg };func (_cdb *Context )DrawStringAnchored (s string ,x ,y ,ax ,ay float64 ){_faa ,_bed :=_cdb .MeasureString (s );x -=ax *_faa ;y +=ay *_bed ;if _cdb ._dbb ==nil {_cdb .drawString (_cdb ._egf ,s ,x ,y );}else {_ffa :=_df .NewRGBA (_df .Rect (0,0,_cdb ._fgcg ,_cdb ._bac ));_cdb .drawString (_ffa ,s ,x ,y );_gd .DrawMask (_cdb ._egf ,_cdb ._egf .Bounds (),_ffa ,_df .ZP ,_cdb ._dbb ,_df .ZP ,_gd .Over );};};func _cdg (_egfe ,_cfgc ,_eeb ,_gdd ,_fac ,_cbbc float64 )float64 {return _egfe *_gdd +_cfgc *_fac +_eeb *_cbbc ;};func (_dcbc *Context )SetRGB255 (r ,g ,b int ){_dcbc .SetRGBA255 (r ,g ,b ,255)};func (_fcb *Context )ClipPreserve (){_bafb :=_df .NewAlpha (_df .Rect (0,0,_fcb ._fgcg ,_fcb ._bac ));_ggea :=_fd .NewAlphaOverPainter (_bafb );_fcb .fill (_ggea );if _fcb ._dbb ==nil {_fcb ._dbb =_bafb ;}else {_dba :=_df .NewAlpha (_df .Rect (0,0,_fcb ._fgcg ,_fcb ._bac ));_gd .DrawMask (_dba ,_dba .Bounds (),_bafb ,_df .ZP ,_fcb ._dbb ,_df .ZP ,_gd .Over );_fcb ._dbb =_dba ;};};func (_dddd *Context )DrawCircle (x ,y ,r float64 ){_dddd .NewSubPath ();_dddd .DrawEllipticalArc (x ,y ,r ,r ,0,2*_a .Pi );_dddd .ClosePath ();};func (_dfac *linearGradient )AddColorStop (offset float64 ,color _b .Color ){_dfac ._dgf =append (_dfac ._dgf ,stop {_def :offset ,_afba :color });_fg .Sort (_dfac ._dgf );};func _cgf (_cgag string )(_fbec ,_cee ,_afeg ,_gbfa int ){_cgag =_fa .TrimPrefix (_cgag ,"\u0023");_gbfa =255;if len (_cgag )==3{_dab :="\u00251\u0078\u0025\u0031\u0078\u0025\u0031x";_g .Sscanf (_cgag ,_dab ,&_fbec ,&_cee ,&_afeg );_fbec |=_fbec <<4;_cee |=_cee <<4;_afeg |=_afeg <<4;};if len (_cgag )==6{_gebc :="\u0025\u0030\u0032x\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";_g .Sscanf (_cgag ,_gebc ,&_fbec ,&_cee ,&_afeg );};if len (_cgag )==8{_gdgb :="\u0025\u00302\u0078\u0025\u00302\u0078\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";_g .Sscanf (_cgag ,_gdgb ,&_fbec ,&_cee ,&_afeg ,&_gbfa );};return ;};func (_dce *solidPattern )ColorAt (x ,y int )_b .Color {return _dce ._febd };func (_fcaf *Context )Scale (x ,y float64 ){_fcaf ._cdf .Scale (x ,y )};func (_ebc *Context )DrawEllipticalArc (x ,y ,rx ,ry ,angle1 ,angle2 float64 ){const _aabe =16;for _abb :=0;_abb < _aabe ;_abb ++{_ddag :=float64 (_abb +0)/_aabe ;_cccc :=float64 (_abb +1)/_aabe ;_ffc :=angle1 +(angle2 -angle1 )*_ddag ;_dea :=angle1 +(angle2 -angle1 )*_cccc ;_gffe :=x +rx *_a .Cos (_ffc );_edf :=y +ry *_a .Sin (_ffc );_aeff :=x +rx *_a .Cos ((_ffc +_dea )/2);_dgc :=y +ry *_a .Sin ((_ffc +_dea )/2);_fdb :=x +rx *_a .Cos (_dea );_aaae :=y +ry *_a .Sin (_dea );_ddb :=2*_aeff -_gffe /2-_fdb /2;_ecgd :=2*_dgc -_edf /2-_aaae /2;if _abb ==0{if _ebc ._dc {_ebc .LineTo (_gffe ,_edf );}else {_ebc .MoveTo (_gffe ,_edf );};};_ebc .QuadraticTo (_ddb ,_ecgd ,_fdb ,_aaae );};};func (_ea *Context )LineTo (x ,y float64 ){if !_ea ._dc {_ea .MoveTo (x ,y );}else {x ,y =_ea .Transform (x ,y );_eeed :=_fae .NewPoint (x ,y );_dffa :=_fceg (_eeed );_ea ._bab .Add1 (_dffa );_ea ._fga .Add1 (_dffa );_ea ._daa =_eeed ;};};func _fceg (_fagd _fae .Point )_ee .Point26_6 {return _ee .Point26_6 {X :_eac (_fagd .X ),Y :_eac (_fagd .Y )}};func (_gfb *Context )QuadraticTo (x1 ,y1 ,x2 ,y2 float64 ){if !_gfb ._dc {_gfb .MoveTo (x1 ,y1 );};x1 ,y1 =_gfb .Transform (x1 ,y1 );x2 ,y2 =_gfb .Transform (x2 ,y2 );_age :=_fae .NewPoint (x1 ,y1 );_dbcd :=_fae .NewPoint (x2 ,y2 );_dca :=_fceg (_age );_ggc :=_fceg (_dbcd );_gfb ._bab .Add2 (_dca ,_ggc );_gfb ._fga .Add2 (_dca ,_ggc );_gfb ._daa =_dbcd ;};func (_cegfg *Context )DrawImageAnchored (im _df .Image ,x ,y int ,ax ,ay float64 ){_gac :=im .Bounds ().Size ();x -=int (ax *float64 (_gac .X ));y -=int (ay *float64 (_gac .Y ));_efb :=_gd .BiLinear ;_fca :=_cegfg ._cdf .Clone ();_fca .Translate (float64 (x ),float64 (y ));_cdc :=_gg .Aff3 {_fca [0],_fca [3],_fca [6],_fca [1],_fca [4],_fca [7]};if _cegfg ._dbb ==nil {_efb .Transform (_cegfg ._egf ,_cdc ,im ,im .Bounds (),_gd .Over ,nil );}else {_efb .Transform (_cegfg ._egf ,_cdc ,im ,im .Bounds (),_gd .Over ,&_gd .Options {DstMask :_cegfg ._dbb ,DstMaskP :_df .ZP });};};func _ade (_ccff _ee .Int26_6 )float64 {const _gfcd ,_cgcg =6,1<<6-1;if _ccff >=0{return float64 (_ccff >>_gfcd )+float64 (_ccff &_cgcg )/64;};_ccff =-_ccff ;if _ccff >=0{return -(float64 (_ccff >>_gfcd )+float64 (_ccff &_cgcg )/64);};return 0;};func (_ecg *Context )SetMask (mask *_df .Alpha )error {if mask .Bounds ().Size ()!=_ecg ._egf .Bounds ().Size (){return _c .New ("\u006d\u0061\u0073\u006b\u0020\u0073i\u007a\u0065\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068 \u0063\u006f\u006e\u0074\u0065\u0078\u0074 \u0073\u0069\u007a\u0065");};_ecg ._dbb =mask ;return nil ;};func _cfge (_adc ,_gca ,_defd ,_ccf float64 )_e .Gradient {_afga :=&linearGradient {_fbad :_adc ,_cbd :_gca ,_bfc :_defd ,_cfa :_ccf };return _afga ;};func (_gef *Context )fill (_gcb _fd .Painter ){_aaa :=_gef ._fga ;if _gef ._dc {_aaa =make (_fd .Path ,len (_gef ._fga ));copy (_aaa ,_gef ._fga );_aaa .Add1 (_fceg (_gef ._geg ));};_aff :=_gef ._ggg ;_aff .UseNonZeroWinding =_gef ._ceg ==_e .FillRuleWinding ;_aff .Clear ();_aff .AddPath (_aaa );_aff .Rasterize (_gcb );};func _fgeg (_agaf float64 ,_dede stops )_b .Color {if _agaf <=0.0||len (_dede )==1{return _dede [0]._afba ;};_geddg :=_dede [len (_dede )-1];if _agaf >=_geddg ._def {return _geddg ._afba ;};for _bbf ,_baga :=range _dede [1:]{if _agaf < _baga ._def {_agaf =(_agaf -_dede [_bbf ]._def )/(_baga ._def -_dede [_bbf ]._def );return _agee (_dede [_bbf ]._afba ,_baga ._afba ,_agaf );};};return _geddg ._afba ;};func (_ff *Context )Clip (){_ff .ClipPreserve ();_ff .ClearPath ()};func _dggd (_gcc [][]_fae .Point )_fd .Path {var _ffab _fd .Path ;for _ ,_bgab :=range _gcc {var _dfebb _ee .Point26_6 ;for _bgf ,_cbee :=range _bgab {_fced :=_fceg (_cbee );if _bgf ==0{_ffab .Start (_fced );}else {_ebe :=_fced .X -_dfebb .X ;_geb :=_fced .Y -_dfebb .Y ;if _ebe < 0{_ebe =-_ebe ;};if _geb < 0{_geb =-_geb ;};if _ebe +_geb > 8{_ffab .Add1 (_fced );};};_dfebb =_fced ;};};return _ffab ;};func (_ece *Context )MeasureString (s string )(_fbe ,_fce float64 ){_gcgc :=&_da .Drawer {Face :_ece ._eegg .Tf .Face };_bba :=_gcgc .MeasureString (s );return float64 (_bba >>6),_ece ._eegg .Tf .Size ;};func (_cfc *Context )SetDash (dashes ...float64 ){_cfc ._cg =dashes };func (_fcc *Context )SetLineJoin (lineJoin _e .LineJoin ){_fcc ._aga =lineJoin };func (_dbf *Context )TextState ()*_e .TextState {return _dbf ._eegg };func _gaff (_dfae _b .Color )_e .Pattern {return &solidPattern {_febd :_dfae }};func (_cddc *Context )InvertMask (){if _cddc ._dbb ==nil {_cddc ._dbb =_df .NewAlpha (_cddc ._egf .Bounds ());}else {for _cddb ,_eb :=range _cddc ._dbb .Pix {_cddc ._dbb .Pix [_cddb ]=255-_eb ;};};};func (_bag *Context )ScaleAbout (sx ,sy ,x ,y float64 ){_bag .Translate (x ,y );_bag .Scale (sx ,sy );_bag .Translate (-x ,-y );};func (_afb *Context )RotateAbout (angle ,x ,y float64 ){_afb .Translate (x ,y );_afb .Rotate (angle );_afb .Translate (-x ,-y );};func (_fba *Context )StrokePreserve (){var _cgb _fd .Painter ;if _fba ._dbb ==nil {if _faf ,_febb :=_fba ._ae .(*solidPattern );_febb {_gbc :=_fd .NewRGBAPainter (_fba ._egf );_gbc .SetColor (_faf ._febd );_cgb =_gbc ;};};if _cgb ==nil {_cgb =_fbgd (_fba ._egf ,_fba ._dbb ,_fba ._ae );};_fba .stroke (_cgb );};func NewContext (width ,height int )*Context {return NewContextForRGBA (_df .NewRGBA (_df .Rect (0,0,width ,height )));};func (_faae *Context )Translate (x ,y float64 ){_faae ._cdf .Translate (x ,y )};func (_efef *Context )DrawImage (im _df .Image ,x ,y int ){_efef .DrawImageAnchored (im ,x ,y ,0,0)};type stops []stop ;func (_bcaa *Context )Shear (x ,y float64 ){_bcaa ._cdf .Shear (x ,y )};func (_gdbc *Context )DrawRoundedRectangle (x ,y ,w ,h ,r float64 ){_edb ,_ddaa ,_gbf ,_cbcd :=x ,x +r ,x +w -r ,x +w ;_agc ,_feg ,_cfcd ,_gga :=y ,y +r ,y +h -r ,y +h ;_gdbc .NewSubPath ();_gdbc .MoveTo (_ddaa ,_agc );_gdbc .LineTo (_gbf ,_agc );_gdbc .DrawArc (_gbf ,_feg ,r ,_dgca (270),_dgca (360));_gdbc .LineTo (_cbcd ,_cfcd );_gdbc .DrawArc (_gbf ,_cfcd ,r ,_dgca (0),_dgca (90));_gdbc .LineTo (_ddaa ,_gga );_gdbc .DrawArc (_ddaa ,_cfcd ,r ,_dgca (90),_dgca (180));_gdbc .LineTo (_edb ,_feg );_gdbc .DrawArc (_ddaa ,_feg ,r ,_dgca (180),_dgca (270));_gdbc .ClosePath ();};type solidPattern struct{_febd _b .Color };func _agee (_edd ,_bcee _b .Color ,_eadf float64 )_b .Color {_egcb ,_gdbcc ,_affa ,_agcb :=_edd .RGBA ();_bbaf ,_fef ,_bbfc ,_bdd :=_bcee .RGBA ();return _b .RGBA {_dgdf (_egcb ,_bbaf ,_eadf ),_dgdf (_gdbcc ,_fef ,_eadf ),_dgdf (_affa ,_bbfc ,_eadf ),_dgdf (_agcb ,_bdd ,_eadf )};};func (_fcg *Context )Stroke (){_fcg .StrokePreserve ();_fcg .ClearPath ()};type linearGradient struct{_fbad ,_cbd ,_bfc ,_cfa float64 ;_dgf stops ;};func (_dg *Context )AsMask ()*_df .Alpha {_cbf :=_df .NewAlpha (_dg ._egf .Bounds ());_gd .Draw (_cbf ,_dg ._egf .Bounds (),_dg ._egf ,_df .ZP ,_gd .Src );return _cbf ;};type patternPainter struct{_bcf *_df .RGBA ;_cbcf *_df .Alpha ;_gbee _e .Pattern ;};func (_dad *Context )DrawRectangle (x ,y ,w ,h float64 ){_dad .NewSubPath ();_dad .MoveTo (x ,y );_dad .LineTo (x +w ,y );_dad .LineTo (x +w ,y +h );_dad .LineTo (x ,y +h );_dad .ClosePath ();};func (_aad *linearGradient )ColorAt (x ,y int )_b .Color {if len (_aad ._dgf )==0{return _b .Transparent ;};_afc ,_gaca :=float64 (x ),float64 (y );_aec ,_gffa ,_dfb ,_aadd :=_aad ._fbad ,_aad ._cbd ,_aad ._bfc ,_aad ._cfa ;_dgd ,_gbe :=_dfb -_aec ,_aadd -_gffa ;if _gbe ==0&&_dgd !=0{return _fgeg ((_afc -_aec )/_dgd ,_aad ._dgf );};if _dgd ==0&&_gbe !=0{return _fgeg ((_gaca -_gffa )/_gbe ,_aad ._dgf );};_ced :=_dgd *(_afc -_aec )+_gbe *(_gaca -_gffa );if _ced < 0{return _aad ._dgf [0]._afba ;};_gba :=_a .Hypot (_dgd ,_gbe );_fdcd :=((_afc -_aec )*-_gbe +(_gaca -_gffa )*_dgd )/(_gba *_gba );_dcaa ,_ggaa :=_aec +_fdcd *-_gbe ,_gffa +_fdcd *_dgd ;_beg :=_a .Hypot (_afc -_dcaa ,_gaca -_ggaa )/_gba ;return _fgeg (_beg ,_aad ._dgf );};func _cccd (_gcge _fd .Path )[][]_fae .Point {var _bfdd [][]_fae .Point ;var _cfgf []_fae .Point ;var _cdcf ,_abef float64 ;for _ggb :=0;_ggb < len (_gcge );{switch _gcge [_ggb ]{case 0:if len (_cfgf )> 0{_bfdd =append (_bfdd ,_cfgf );_cfgf =nil ;};_gcade :=_ade (_gcge [_ggb +1]);_dbaa :=_ade (_gcge [_ggb +2]);_cfgf =append (_cfgf ,_fae .NewPoint (_gcade ,_dbaa ));_cdcf ,_abef =_gcade ,_dbaa ;_ggb +=4;case 1:_gefc :=_ade (_gcge [_ggb +1]);_aacd :=_ade (_gcge [_ggb +2]);_cfgf =append (_cfgf ,_fae .NewPoint (_gefc ,_aacd ));_cdcf ,_abef =_gefc ,_aacd ;_ggb +=4;case 2:_dfc :=_ade (_gcge [_ggb +1]);_aefg :=_ade (_gcge [_ggb +2]);_gbbb :=_ade (_gcge [_ggb +3]);_bfg :=_ade (_gcge [_ggb +4]);_cgg :=_ga (_cdcf ,_abef ,_dfc ,_aefg ,_gbbb ,_bfg );_cfgf =append (_cfgf ,_cgg ...);_cdcf ,_abef =_gbbb ,_bfg ;_ggb +=6;case 3:_gad :=_ade (_gcge [_ggb +1]);_cbbd :=_ade (_gcge [_ggb +2]);_efee :=_ade (_gcge [_ggb +3]);_gaea :=_ade (_gcge [_ggb +4]);_ddgc :=_ade (_gcge [_ggb +5]);_dga :=_ade (_gcge [_ggb +6]);_gbd :=_ded (_cdcf ,_abef ,_gad ,_cbbd ,_efee ,_gaea ,_ddgc ,_dga );_cfgf =append (_cfgf ,_gbd ...);_cdcf ,_abef =_ddgc ,_dga ;_ggb +=8;default:_bc .Log .Debug ("\u0057\u0041\u0052\u004e: \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0070\u0061\u0074\u0068\u003a\u0020%\u0076",_gcge );return _bfdd ;};};if len (_cfgf )> 0{_bfdd =append (_bfdd ,_cfgf );};return _bfdd ;};func _dgdf (_ggdd ,_dfeb uint32 ,_fcee float64 )uint8 {return uint8 (int32 (float64 (_ggdd )*(1.0-_fcee )+float64 (_dfeb )*_fcee )>>8);};func (_dbbe *Context )SetFillRule (fillRule _e .FillRule ){_dbbe ._ceg =fillRule };func _gf (_ef ,_ca ,_efa ,_fb ,_ed ,_db ,_ag float64 )(_fdc ,_bb float64 ){_gc :=1-_ag ;_fgc :=_gc *_gc ;_aa :=2*_gc *_ag ;_cb :=_ag *_ag ;_fdc =_fgc *_ef +_aa *_efa +_cb *_ed ;_bb =_fgc *_ca +_aa *_fb +_cb *_db ;return ;};func (_bbd *Context )joiner ()_fd .Joiner {switch _bbd ._aga {case _e .LineJoinBevel :return _fd .BevelJoiner ;case _e .LineJoinRound :return _fd .RoundJoiner ;};return nil ;};type radialGradient struct{_afcg ,_bcd ,_bde circle ;_gcad ,_dade float64 ;_ebaf float64 ;_fgf stops ;};func (_cef stops )Len ()int {return len (_cef )};func (_dffc *Context )Push (){_deg :=*_dffc ;_dffc ._egff =append (_dffc ._egff ,&_deg )};func _fcce (_cgbe _df .Image )*_df .RGBA {_bgfa :=_cgbe .Bounds ();_bbdb :=_df .NewRGBA (_bgfa );_d .Draw (_bbdb ,_bgfa ,_cgbe ,_bgfa .Min ,_d .Src );return _bbdb ;};func (_fgae *Context )stroke (_ead _fd .Painter ){_dbbb :=_fgae ._bab ;if len (_fgae ._cg )> 0{_dbbb =_geac (_dbbb ,_fgae ._cg ,_fgae ._egc );}else {_dbbb =_dggd (_cccd (_dbbb ));};_baf :=_fgae ._ggg ;_baf .UseNonZeroWinding =true ;_baf .Clear ();_baf .AddStroke (_dbbb ,_eac (_fgae ._fda ),_fgae .capper (),_fgae .joiner ());_baf .Rasterize (_ead );};func NewContextForImage (im _df .Image )*Context {return NewContextForRGBA (_fcce (im ))};func (_dcg *Context )SetRGBA255 (r ,g ,b ,a int ){_dcg ._aaga =_b .NRGBA {uint8 (r ),uint8 (g ),uint8 (b ),uint8 (a )};_dcg .setFillAndStrokeColor (_dcg ._aaga );};func (_fdd *Context )Pop (){_eege :=*_fdd ;_fde :=_fdd ._egff ;_ggec ,_fde :=_fde [len (_fde )-1],_fde [:len (_fde )-1];*_fdd =*_ggec ;_fdd ._bab =_eege ._bab ;_fdd ._fga =_eege ._fga ;_fdd ._geg =_eege ._geg ;_fdd ._daa =_eege ._daa ;_fdd ._dc =_eege ._dc ;_fdd ._eegg =_eege ._eegg ;};func (_dcb *Context )setFillAndStrokeColor (_gea _b .Color ){_dcb ._aaga =_gea ;_dcb ._bgd =_gaff (_gea );_dcb ._ae =_gaff (_gea );};func (_babg *radialGradient )AddColorStop (offset float64 ,color _b .Color ){_babg ._fgf =append (_babg ._fgf ,stop {_def :offset ,_afba :color });_fg .Sort (_babg ._fgf );};func _ga (_ge ,_bf ,_dfa ,_ac ,_aac ,_bd float64 )[]_fae .Point {_be :=(_a .Hypot (_dfa -_ge ,_ac -_bf )+_a .Hypot (_aac -_dfa ,_bd -_ac ));_cbc :=int (_be +0.5);if _cbc < 4{_cbc =4;};_ab :=float64 (_cbc )-1;_gff :=make ([]_fae .Point ,_cbc );for _gb :=0;_gb < _cbc ;_gb ++{_aba :=float64 (_gb )/_ab ;_cf ,_af :=_gf (_ge ,_bf ,_dfa ,_ac ,_aac ,_bd ,_aba );_gff [_gb ]=_fae .NewPoint (_cf ,_af );};return _gff ;};func (_gag *Context )Identity (){_gag ._cdf =_fae .IdentityMatrix ()};func (_bff *Context )DrawLine (x1 ,y1 ,x2 ,y2 float64 ){_bff .MoveTo (x1 ,y1 );_bff .LineTo (x2 ,y2 )};func (_gbcf *radialGradient )ColorAt (x ,y int )_b .Color {if len (_gbcf ._fgf )==0{return _b .Transparent ;};_eag ,_bge :=float64 (x )+0.5-_gbcf ._afcg ._ebg ,float64 (y )+0.5-_gbcf ._afcg ._bdga ;_gdg :=_cdg (_eag ,_bge ,_gbcf ._afcg ._cge ,_gbcf ._bde ._ebg ,_gbcf ._bde ._bdga ,_gbcf ._bde ._cge );_cfag :=_cdg (_eag ,_bge ,-_gbcf ._afcg ._cge ,_eag ,_bge ,_gbcf ._afcg ._cge );if _gbcf ._gcad ==0{if _gdg ==0{return _b .Transparent ;};_gcd :=0.5*_cfag /_gdg ;if _gcd *_gbcf ._bde ._cge >=_gbcf ._ebaf {return _fgeg (_gcd ,_gbcf ._fgf );};return _b .Transparent ;};_dcgf :=_cdg (_gdg ,_gbcf ._gcad ,0,_gdg ,-_cfag ,0);if _dcgf >=0{_ecdg :=_a .Sqrt (_dcgf );_ebf :=(_gdg +_ecdg )*_gbcf ._dade ;_afa :=(_gdg -_ecdg )*_gbcf ._dade ;if _ebf *_gbcf ._bde ._cge >=_gbcf ._ebaf {return _fgeg (_ebf ,_gbcf ._fgf );}else if _afa *_gbcf ._bde ._cge >=_gbcf ._ebaf {return _fgeg (_afa ,_gbcf ._fgf );};};return _b .Transparent ;};func (_cbb *Context )DrawPoint (x ,y ,r float64 ){_cbb .Push ();_afe ,_ada :=_cbb .Transform (x ,y );_cbb .Identity ();_cbb .DrawCircle (_afe ,_ada ,r );_cbb .Pop ();};func (_gaf *Context )DrawArc (x ,y ,r ,angle1 ,angle2 float64 ){_gaf .DrawEllipticalArc (x ,y ,r ,r ,angle1 ,angle2 );};func (_gcf *Context )drawString (_abe *_df .RGBA ,_ega string ,_ccdd ,_dgg float64 ){_fgdg :=&_da .Drawer {Dst :_abe ,Src :_df .NewUniform (_gcf ._aaga ),Face :_gcf ._eegg .Tf .Face ,Dot :_fceg (_fae .NewPoint (_ccdd ,_dgg ))};_abab :=rune (-1);for _ ,_gbb :=range _ega {if _abab >=0{_fgdg .Dot .X +=_fgdg .Face .Kern (_abab ,_gbb );};_abf ,_egg ,_eed ,_agdg ,_bfb :=_fgdg .Face .Glyph (_fgdg .Dot ,_gbb );if !_bfb {continue ;};_ddbc :=_abf .Sub (_abf .Min );_ecda :=_gd .BiLinear ;_dgb :=_gcf ._cdf .Clone ();_dgb .Translate (float64 (_abf .Min .X ),float64 (_abf .Min .Y ));_eca :=_gg .Aff3 {_dgb [0],_dgb [3],_dgb [6],_dgb [1],_dgb [4],_dgb [7]};_ecda .Transform (_fgdg .Dst ,_eca ,_fgdg .Src ,_ddbc ,_gd .Over ,&_gd .Options {SrcMask :_egg ,SrcMaskP :_eed });_fgdg .Dot .X +=_agdg ;_abab =_gbb ;};};func (_fdfg *Context )ClearPath (){_fdfg ._bab .Clear ();_fdfg ._fga .Clear ();_fdfg ._dc =false };func (_aca *Context )CubicTo (x1 ,y1 ,x2 ,y2 ,x3 ,y3 float64 ){if !_aca ._dc {_aca .MoveTo (x1 ,y1 );};_cdd ,_cfg :=_aca ._daa .X ,_aca ._daa .Y ;x1 ,y1 =_aca .Transform (x1 ,y1 );x2 ,y2 =_aca .Transform (x2 ,y2 );x3 ,y3 =_aca .Transform (x3 ,y3 );_ege :=_ded (_cdd ,_cfg ,x1 ,y1 ,x2 ,y2 ,x3 ,y3 );_gabg :=_fceg (_aca ._daa );for _ ,_cfdb :=range _ege [1:]{_cfea :=_fceg (_cfdb );if _cfea ==_gabg {continue ;};_gabg =_cfea ;_aca ._bab .Add1 (_cfea );_aca ._fga .Add1 (_cfea );_aca ._daa =_cfdb ;};};var (_fc =_gaff (_b .White );_bea =_gaff (_b .Black ););func (_dd *Context )SetLineCap (lineCap _e .LineCap ){_dd ._bdg =lineCap };type stop struct{_def float64 ;_afba _b .Color ;};func (_eea *Context )Image ()_df .Image {return _eea ._egf };func (_acc *Context )Height ()int {return _acc ._bac };func _ded (_cc ,_dbc ,_gae ,_eg ,_agf ,_cd ,_fe ,_bbe float64 )[]_fae .Point {_feb :=(_a .Hypot (_gae -_cc ,_eg -_dbc )+_a .Hypot (_agf -_gae ,_cd -_eg )+_a .Hypot (_fe -_agf ,_bbe -_cd ));_dfd :=int (_feb +0.5);if _dfd < 4{_dfd =4;};_ccc :=float64 (_dfd )-1;_bcb :=make ([]_fae .Point ,_dfd );for _bgb :=0;_bgb < _dfd ;_bgb ++{_eeg :=float64 (_bgb )/_ccc ;_bce ,_fge :=_cfd (_cc ,_dbc ,_gae ,_eg ,_agf ,_cd ,_fe ,_bbe ,_eeg );_bcb [_bgb ]=_fae .NewPoint (_bce ,_fge );};return _bcb ;};func (_bgc *Context )SetStrokeStyle (pattern _e .Pattern ){_bgc ._ae =pattern };func (_gdb *Context )capper ()_fd .Capper {switch _gdb ._bdg {case _e .LineCapButt :return _fd .ButtCapper ;case _e .LineCapRound :return _fd .RoundCapper ;case _e .LineCapSquare :return _fd .SquareCapper ;};return nil ;};func (_gedd *Context )SetRGBA (r ,g ,b ,a float64 ){_gedd ._aaga =_b .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_gedd .setFillAndStrokeColor (_gedd ._aaga );};func _fbgd (_gcdf *_df .RGBA ,_acf *_df .Alpha ,_afae _e .Pattern )*patternPainter {return &patternPainter {_gcdf ,_acf ,_afae };};func (_acd stops )Less (i ,j int )bool {return _acd [i ]._def < _acd [j ]._def };type repeatOp int ;func (_gge *Context )FillPreserve (){var _ggd _fd .Painter ;if _gge ._dbb ==nil {if _ddd ,_bcab :=_gge ._bgd .(*solidPattern );_bcab {_gfg :=_fd .NewRGBAPainter (_gge ._egf );_gfg .SetColor (_ddd ._febd );_ggd =_gfg ;};};if _ggd ==nil {_ggd =_fbgd (_gge ._egf ,_gge ._dbb ,_gge ._bgd );};_gge .fill (_ggd );};func (_fec *Context )SetHexColor (x string ){_egd ,_afd ,_bbg ,_gcg :=_cgf (x );_fec .SetRGBA255 (_egd ,_afd ,_bbg ,_gcg );};func _cbgb (_agca [][]_fae .Point ,_cfce []float64 ,_bga float64 )[][]_fae .Point {var _dbad [][]_fae .Point ;if len (_cfce )==0{return _agca ;};if len (_cfce )==1{_cfce =append (_cfce ,_cfce [0]);};for _ ,_ebcc :=range _agca {if len (_ebcc )< 2{continue ;};_dee :=_ebcc [0];_gddb :=1;_dbae :=0;_aaaf :=0.0;if _bga !=0{var _ede float64 ;for _ ,_beb :=range _cfce {_ede +=_beb ;};_bga =_a .Mod (_bga ,_ede );if _bga < 0{_bga +=_ede ;};for _dgfg ,_aeg :=range _cfce {_bga -=_aeg ;if _bga < 0{_dbae =_dgfg ;_aaaf =_aeg +_bga ;break ;};};};var _dbcc []_fae .Point ;_dbcc =append (_dbcc ,_dee );for _gddb < len (_ebcc ){_gacb :=_cfce [_dbae ];_ddf :=_ebcc [_gddb ];_fgag :=_dee .Distance (_ddf );_cab :=_gacb -_aaaf ;if _fgag > _cab {_fgb :=_cab /_fgag ;_bfff :=_dee .Interpolate (_ddf ,_fgb );_dbcc =append (_dbcc ,_bfff );if _dbae %2==0&&len (_dbcc )> 1{_dbad =append (_dbad ,_dbcc );};_dbcc =nil ;_dbcc =append (_dbcc ,_bfff );_aaaf =0;_dee =_bfff ;_dbae =(_dbae +1)%len (_cfce );}else {_dbcc =append (_dbcc ,_ddf );_dee =_ddf ;_aaaf +=_fgag ;_gddb ++;};};if _dbae %2==0&&len (_dbcc )> 1{_dbad =append (_dbad ,_dbcc );};};return _dbad ;};func (_cfe *Context )SetColor (c _b .Color ){_cfe .setFillAndStrokeColor (c )};func (_eba *Context )DrawString (s string ,x ,y float64 ){_eba .DrawStringAnchored (s ,x ,y ,0,0)};func _cfd (_afg ,_eec ,_bee ,_ce ,_daf ,_bg ,_ad ,_aab ,_dag float64 )(_de ,_fdf float64 ){_ba :=1-_dag ;_fad :=_ba *_ba *_ba ;_gab :=3*_ba *_ba *_dag ;_dff :=3*_ba *_dag *_dag ;_aag :=_dag *_dag *_dag ;_de =_fad *_afg +_gab *_bee +_dff *_daf +_aag *_ad ;_fdf =_fad *_eec +_gab *_ce +_dff *_bg +_aag *_aab ;return ;};func (_cbe *Context )SetRGB (r ,g ,b float64 ){_cbe .SetRGBA (r ,g ,b ,1)};func (_deff stops )Swap (i ,j int ){_deff [i ],_deff [j ]=_deff [j ],_deff [i ]};func (_dfe *Context )NewSubPath (){if _dfe ._dc {_dfe ._fga .Add1 (_fceg (_dfe ._geg ));};_dfe ._dc =false ;};func (_ddg *Context )drawRegularPolygon (_efe int ,_bfd ,_fdbd ,_faff ,_fbc float64 ){_egfa :=2*_a .Pi /float64 (_efe );_fbc -=_a .Pi /2;if _efe %2==0{_fbc +=_egfa /2;};_ddg .NewSubPath ();for _ccd :=0;_ccd < _efe ;_ccd ++{_gaef :=_fbc +_egfa *float64 (_ccd );_ddg .LineTo (_bfd +_faff *_a .Cos (_gaef ),_fdbd +_faff *_a .Sin (_gaef ));};_ddg .ClosePath ();};func (_cca *Context )SetPixel (x ,y int ){_cca ._egf .Set (x ,y ,_cca ._aaga )};func NewContextForRGBA (im *_df .RGBA )*Context {_agd :=im .Bounds ().Size ().X ;_dcc :=im .Bounds ().Size ().Y ;return &Context {_fgcg :_agd ,_bac :_dcc ,_ggg :_fd .NewRasterizer (_agd ,_dcc ),_egf :im ,_aaga :_b .Transparent ,_bgd :_fc ,_ae :_bea ,_fda :1,_ceg :_e .FillRuleWinding ,_cdf :_fae .IdentityMatrix (),_eegg :_e .NewTextState ()};};func (_bca *Context )MoveTo (x ,y float64 ){if _bca ._dc {_bca ._fga .Add1 (_fceg (_bca ._geg ));};x ,y =_bca .Transform (x ,y );_daae :=_fae .NewPoint (x ,y );_cegf :=_fceg (_daae );_bca ._bab .Start (_cegf );_bca ._fga .Start (_cegf );_bca ._geg =_daae ;_bca ._daa =_daae ;_bca ._dc =true ;};func _dedf (_faea _df .Image ,_ffe repeatOp )_e .Pattern {return &surfacePattern {_fdeg :_faea ,_bacg :_ffe };};const (_ecdc repeatOp =iota ;_dfdg ;_eebc ;_ffb ;);type Context struct{_fgcg int ;_bac int ;_ggg *_fd .Rasterizer ;_egf *_df .RGBA ;_dbb *_df .Alpha ;_aaga _b .Color ;_bgd _e .Pattern ;_ae _e .Pattern ;_bab _fd .Path ;_fga _fd .Path ;_geg _fae .Point ;_daa _fae .Point ;_dc bool ;_cg []float64 ;_egc float64 ;_fda float64 ;_bdg _e .LineCap ;_aga _e .LineJoin ;_ceg _e .FillRule ;_cdf _fae .Matrix ;_eegg *_e .TextState ;_egff []*Context ;};type circle struct{_ebg ,_bdga ,_cge float64 };type surfacePattern struct{_fdeg _df .Image ;_bacg repeatOp ;};func (_acg *Context )Clear (){_fff :=_df .NewUniform (_acg ._aaga );_gd .Draw (_acg ._egf ,_acg ._egf .Bounds (),_fff ,_df .ZP ,_gd .Src );};func (_aeb *Context )SetMatrix (m _fae .Matrix ){_aeb ._cdf =m };func (_dgcd *Context )ShearAbout (sx ,sy ,x ,y float64 ){_dgcd .Translate (x ,y );_dgcd .Shear (sx ,sy );_dgcd .Translate (-x ,-y );};func (_ecd *Context )DrawEllipse (x ,y ,rx ,ry float64 ){_ecd .NewSubPath ();_ecd .DrawEllipticalArc (x ,y ,rx ,ry ,0,2*_a .Pi );_ecd .ClosePath ();};func (_add *Context )Transform (x ,y float64 )(_dgce ,_egae float64 ){return _add ._cdf .Transform (x ,y )};func (_dafb *Context )SetFillStyle (pattern _e .Pattern ){if _dcbb ,_cdfb :=pattern .(*solidPattern );_cdfb {_dafb ._aaga =_dcbb ._febd ;};_dafb ._bgd =pattern ;};func (_fcd *patternPainter )Paint (ss []_fd .Span ,done bool ){_bfe :=_fcd ._bcf .Bounds ();for _ ,_abd :=range ss {if _abd .Y < _bfe .Min .Y {continue ;};if _abd .Y >=_bfe .Max .Y {return ;};if _abd .X0 < _bfe .Min .X {_abd .X0 =_bfe .Min .X ;};if _abd .X1 > _bfe .Max .X {_abd .X1 =_bfe .Max .X ;};if _abd .X0 >=_abd .X1 {continue ;};const _acgf =1<<16-1;_dcaaa :=_abd .Y -_fcd ._bcf .Rect .Min .Y ;_aaaeb :=_abd .X0 -_fcd ._bcf .Rect .Min .X ;_bdea :=(_abd .Y -_fcd ._bcf .Rect .Min .Y )*_fcd ._bcf .Stride +(_abd .X0 -_fcd ._bcf .Rect .Min .X )*4;_egde :=_bdea +(_abd .X1 -_abd .X0 )*4;for _abg ,_ddaab :=_bdea ,_aaaeb ;_abg < _egde ;_abg ,_ddaab =_abg +4,_ddaab +1{_cddf :=_abd .Alpha ;if _fcd ._cbcf !=nil {_cddf =_cddf *uint32 (_fcd ._cbcf .AlphaAt (_ddaab ,_dcaaa ).A )/255;if _cddf ==0{continue ;};};_gbfe :=_fcd ._gbee .ColorAt (_ddaab ,_dcaaa );_bdb ,_eebd ,_aegb ,_ccg :=_gbfe .RGBA ();_bbeg :=uint32 (_fcd ._bcf .Pix [_abg +0]);_cea :=uint32 (_fcd ._bcf .Pix [_abg +1]);_bgaa :=uint32 (_fcd ._bcf .Pix [_abg +2]);_ccad :=uint32 (_fcd ._bcf .Pix [_abg +3]);_fbg :=(_acgf -(_ccg *_cddf /_acgf ))*0x101;_fcd ._bcf .Pix [_abg +0]=uint8 ((_bbeg *_fbg +_bdb *_cddf )/_acgf >>8);_fcd ._bcf .Pix [_abg +1]=uint8 ((_cea *_fbg +_eebd *_cddf )/_acgf >>8);_fcd ._bcf .Pix [_abg +2]=uint8 ((_bgaa *_fbg +_aegb *_cddf )/_acgf >>8);_fcd ._bcf .Pix [_abg +3]=uint8 ((_ccad *_fbg +_ccg *_cddf )/_acgf >>8);};};};func _bad (_cbga ,_bcdf ,_eeeb ,_bfa ,_fcab ,_cegff float64 )_e .Gradient {_afcf :=circle {_cbga ,_bcdf ,_eeeb };_gaee :=circle {_bfa ,_fcab ,_cegff };_bcdb :=circle {_bfa -_cbga ,_fcab -_bcdf ,_cegff -_eeeb };_fgfg :=_cdg (_bcdb ._ebg ,_bcdb ._bdga ,-_bcdb ._cge ,_bcdb ._ebg ,_bcdb ._bdga ,_bcdb ._cge );var _gbcg float64 ;if _fgfg !=0{_gbcg =1.0/_fgfg ;};_fag :=-_afcf ._cge ;_egcg :=&radialGradient {_afcg :_afcf ,_bcd :_gaee ,_bde :_bcdb ,_gcad :_fgfg ,_dade :_gbcg ,_ebaf :_fag };return _egcg ;};func _geac (_beeg _fd .Path ,_badf []float64 ,_afbg float64 )_fd .Path {return _dggd (_cbgb (_cccd (_beeg ),_badf ,_afbg ));};func (_dda *Context )SetStrokeRGBA (r ,g ,b ,a float64 ){_gee :=_b .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_dda ._ae =_gaff (_gee );};