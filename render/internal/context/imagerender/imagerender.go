//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package imagerender ;import (_bg "errors";_f "fmt";_bd "github.com/golang/freetype/raster";_gf "github.com/unidoc/unipdf/v3/common";_af "github.com/unidoc/unipdf/v3/internal/transform";_cc "github.com/unidoc/unipdf/v3/render/internal/context";_fc "golang.org/x/image/draw";
_ga "golang.org/x/image/font";_gc "golang.org/x/image/math/f64";_ac "golang.org/x/image/math/fixed";_fd "image";_d "image/color";_c "image/draw";_g "math";_e "sort";_a "strings";);func (_bccb *Context )ScaleAbout (sx ,sy ,x ,y float64 ){_bccb .Translate (x ,y );
_bccb .Scale (sx ,sy );_bccb .Translate (-x ,-y );};func (_def stops )Less (i ,j int )bool {return _def [i ]._fac < _def [j ]._fac };func (_acd *Context )DrawEllipse (x ,y ,rx ,ry float64 ){_acd .NewSubPath ();_acd .DrawEllipticalArc (x ,y ,rx ,ry ,0,2*_g .Pi );
_acd .ClosePath ();};func (_fdac *Context )LineTo (x ,y float64 ){if !_fdac ._ba {_fdac .MoveTo (x ,y );}else {x ,y =_fdac .Transform (x ,y );_eaf :=_af .NewPoint (x ,y );_bef :=_gggf (_eaf );_fdac ._dga .Add1 (_bef );_fdac ._age .Add1 (_bef );_fdac ._fa =_eaf ;
};};func (_fgc *Context )TextState ()*_cc .TextState {return &_fgc ._aab };type solidPattern struct{_eafe _d .Color };func (_aef *Context )joiner ()_bd .Joiner {switch _aef ._egc {case _cc .LineJoinBevel :return _bd .BevelJoiner ;case _cc .LineJoinRound :return _bd .RoundJoiner ;
};return nil ;};type stops []stop ;func (_fea *Context )ClearPath (){_fea ._dga .Clear ();_fea ._age .Clear ();_fea ._ba =false };func (_ddc *Context )Pop (){_eebg :=*_ddc ;_ege :=_ddc ._dggd ;_gbbe :=_ege [len (_ege )-1];*_ddc =*_gbbe ;_ddc ._dga =_eebg ._dga ;
_ddc ._age =_eebg ._age ;_ddc ._dff =_eebg ._dff ;_ddc ._fa =_eebg ._fa ;_ddc ._ba =_eebg ._ba ;};var (_be =_aecb (_d .White );_dbc =_aecb (_d .Black ););func _ec (_ge ,_bcc ,_aff ,_aeg ,_ea ,_bf float64 )[]_af .Point {_eg :=(_g .Hypot (_aff -_ge ,_aeg -_bcc )+_g .Hypot (_ea -_aff ,_bf -_aeg ));
_eca :=int (_eg +0.5);if _eca < 4{_eca =4;};_fbb :=float64 (_eca )-1;_dg :=make ([]_af .Point ,_eca );for _gce :=0;_gce < _eca ;_gce ++{_eb :=float64 (_gce )/_fbb ;_df ,_ccb :=_ae (_ge ,_bcc ,_aff ,_aeg ,_ea ,_bf ,_eb );_dg [_gce ]=_af .NewPoint (_df ,_ccb );
};return _dg ;};func (_fbfb *radialGradient )AddColorStop (offset float64 ,color _d .Color ){_fbfb ._gfg =append (_fbfb ._gfg ,stop {_fac :offset ,_gccd :color });_e .Sort (_fbfb ._gfg );};func (_fgb *Context )RotateAbout (angle ,x ,y float64 ){_fgb .Translate (x ,y );
_fgb .Rotate (angle );_fgb .Translate (-x ,-y );};func (_afb *Context )InvertMask (){if _afb ._acc ==nil {_afb ._acc =_fd .NewAlpha (_afb ._bdfa .Bounds ());}else {for _ddd ,_eabd :=range _afb ._acc .Pix {_afb ._acc .Pix [_ddd ]=255-_eabd ;};};};func (_fda *Context )SetRGB (r ,g ,b float64 ){_fda .SetRGBA (r ,g ,b ,1)};
func (_eedc *linearGradient )ColorAt (x ,y int )_d .Color {if len (_eedc ._egg )==0{return _d .Transparent ;};_eee ,_egd :=float64 (x ),float64 (y );_ebbe ,_gaa ,_aed ,_cff :=_eedc ._efd ,_eedc ._ccd ,_eedc ._gdc ,_eedc ._fbf ;_gdfg ,_aaee :=_aed -_ebbe ,_cff -_gaa ;
if _aaee ==0&&_gdfg !=0{return _cef ((_eee -_ebbe )/_gdfg ,_eedc ._egg );};if _gdfg ==0&&_aaee !=0{return _cef ((_egd -_gaa )/_aaee ,_eedc ._egg );};_bdd :=_gdfg *(_eee -_ebbe )+_aaee *(_egd -_gaa );if _bdd < 0{return _eedc ._egg [0]._gccd ;};_baaf :=_g .Hypot (_gdfg ,_aaee );
_adc :=((_eee -_ebbe )*-_aaee +(_egd -_gaa )*_gdfg )/(_baaf *_baaf );_bgac ,_ccc :=_ebbe +_adc *-_aaee ,_gaa +_adc *_gdfg ;_eedg :=_g .Hypot (_eee -_bgac ,_egd -_ccc )/_baaf ;return _cef (_eedg ,_eedc ._egg );};func (_cbef *solidPattern )ColorAt (x ,y int )_d .Color {return _cbef ._eafe };
func (_ecb *Context )AsMask ()*_fd .Alpha {_dda :=_fd .NewAlpha (_ecb ._bdfa .Bounds ());_fc .Draw (_dda ,_ecb ._bdfa .Bounds (),_ecb ._bdfa ,_fd .Point {},_fc .Src );return _dda ;};func (_ggg *Context )fill (_dfd _bd .Painter ){_cd :=_ggg ._age ;if _ggg ._ba {_cd =make (_bd .Path ,len (_ggg ._age ));
copy (_cd ,_ggg ._age );_cd .Add1 (_gggf (_ggg ._dff ));};_geded :=_ggg ._gbb ;_geded .UseNonZeroWinding =_ggg ._aae ==_cc .FillRuleWinding ;_geded .Clear ();_geded .AddPath (_cd );_geded .Rasterize (_dfd );};func (_bgd *Context )Width ()int {return _bgd ._aa };
func (_eab *Context )SetRGBA (r ,g ,b ,a float64 ){_eab ._dea =_d .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_eab .setFillAndStrokeColor (_eab ._dea );};type Context struct{_aa int ;_edd int ;_gbb *_bd .Rasterizer ;_bdfa *_fd .RGBA ;
_acc *_fd .Alpha ;_dea _d .Color ;_ffea _cc .Pattern ;_cce _cc .Pattern ;_dga _bd .Path ;_age _bd .Path ;_dff _af .Point ;_fa _af .Point ;_ba bool ;_bga []float64 ;_dcg float64 ;_ebc float64 ;_dce _cc .LineCap ;_egc _cc .LineJoin ;_aae _cc .FillRule ;_gea _af .Matrix ;
_aab _cc .TextState ;_dggd []*Context ;};func (_gef *Context )SetLineWidth (lineWidth float64 ){_gef ._ebc =lineWidth };func _cgfe (_fcag [][]_af .Point )_bd .Path {var _cffd _bd .Path ;for _ ,_acfb :=range _fcag {var _fad _ac .Point26_6 ;for _cdcg ,_bbg :=range _acfb {_bee :=_gggf (_bbg );
if _cdcg ==0{_cffd .Start (_bee );}else {_ddgab :=_bee .X -_fad .X ;_dca :=_bee .Y -_fad .Y ;if _ddgab < 0{_ddgab =-_ddgab ;};if _dca < 0{_dca =-_dca ;};if _ddgab +_dca > 8{_cffd .Add1 (_bee );};};_fad =_bee ;};};return _cffd ;};func (_geg *Context )Image ()_fd .Image {return _geg ._bdfa };
func (_ebg *Context )Transform (x ,y float64 )(_ecae ,_bgfb float64 ){return _ebg ._gea .Transform (x ,y )};func (_bgc *Context )SetPixel (x ,y int ){_bgc ._bdfa .Set (x ,y ,_bgc ._dea )};func NewContextForImage (im _fd .Image )*Context {return NewContextForRGBA (_cda (im ))};
type repeatOp int ;func NewContext (width ,height int )*Context {return NewContextForRGBA (_fd .NewRGBA (_fd .Rect (0,0,width ,height )));};func (_cgda stops )Swap (i ,j int ){_cgda [i ],_cgda [j ]=_cgda [j ],_cgda [i ]};type circle struct{_edfd ,_bdfg ,_dgdf float64 };
func (_ace *Context )SetRGBA255 (r ,g ,b ,a int ){_ace ._dea =_d .NRGBA {uint8 (r ),uint8 (g ),uint8 (b ),uint8 (a )};_ace .setFillAndStrokeColor (_ace ._dea );};func (_dba *Context )Fill (){_dba .FillPreserve ();_dba .ClearPath ()};func (_add *Context )ClipPreserve (){_ggd :=_fd .NewAlpha (_fd .Rect (0,0,_add ._aa ,_add ._edd ));
_dfff :=_bd .NewAlphaOverPainter (_ggd );_add .fill (_dfff );if _add ._acc ==nil {_add ._acc =_ggd ;}else {_bge :=_fd .NewAlpha (_fd .Rect (0,0,_add ._aa ,_add ._edd ));_fc .DrawMask (_bge ,_bge .Bounds (),_ggd ,_fd .Point {},_add ._acc ,_fd .Point {},_fc .Over );
_add ._acc =_bge ;};};func (_ddag *Context )ResetClip (){_ddag ._acc =nil };func (_fbd *Context )SetLineCap (lineCap _cc .LineCap ){_fbd ._dce =lineCap };func (_aac *Context )Identity (){_aac ._gea =_af .IdentityMatrix ()};func (_baa *Context )SetRGB255 (r ,g ,b int ){_baa .SetRGBA255 (r ,g ,b ,255)};
func (_cbc *Context )MoveTo (x ,y float64 ){if _cbc ._ba {_cbc ._age .Add1 (_gggf (_cbc ._dff ));};x ,y =_cbc .Transform (x ,y );_cfd :=_af .NewPoint (x ,y );_abac :=_gggf (_cfd );_cbc ._dga .Start (_abac );_cbc ._age .Start (_abac );_cbc ._dff =_cfd ;
_cbc ._fa =_cfd ;_cbc ._ba =true ;};func (_bffeb *Context )Shear (x ,y float64 ){_bffeb ._gea .Shear (x ,y )};func (_cg *Context )SetLineJoin (lineJoin _cc .LineJoin ){_cg ._egc =lineJoin };func _cef (_gaaf float64 ,_ceee stops )_d .Color {if _gaaf <=0.0||len (_ceee )==1{return _ceee [0]._gccd ;
};_gccc :=_ceee [len (_ceee )-1];if _gaaf >=_gccc ._fac {return _gccc ._gccd ;};for _bbcc ,_dgga :=range _ceee [1:]{if _gaaf < _dgga ._fac {_gaaf =(_gaaf -_ceee [_bbcc ]._fac )/(_dgga ._fac -_ceee [_bbcc ]._fac );return _ffce (_ceee [_bbcc ]._gccd ,_dgga ._gccd ,_gaaf );
};};return _gccc ._gccd ;};func _dfae (_gacf string )(_cgad ,_fdaa ,_bdff ,_ebca int ){_gacf =_a .TrimPrefix (_gacf ,"\u0023");_ebca =255;if len (_gacf )==3{_bdae :="\u00251\u0078\u0025\u0031\u0078\u0025\u0031x";_f .Sscanf (_gacf ,_bdae ,&_cgad ,&_fdaa ,&_bdff );
_cgad |=_cgad <<4;_fdaa |=_fdaa <<4;_bdff |=_bdff <<4;};if len (_gacf )==6{_egbd :="\u0025\u0030\u0032x\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";_f .Sscanf (_gacf ,_egbd ,&_cgad ,&_fdaa ,&_bdff );};if len (_gacf )==8{_fcgc :="\u0025\u00302\u0078\u0025\u00302\u0078\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";
_f .Sscanf (_gacf ,_fcgc ,&_cgad ,&_fdaa ,&_bdff ,&_ebca );};return ;};func (_cfe *Context )ClosePath (){if _cfe ._ba {_eag :=_gggf (_cfe ._dff );_cfe ._dga .Add1 (_eag );_cfe ._age .Add1 (_eag );_cfe ._fa =_cfe ._dff ;};};func (_gaf *Context )SetDash (dashes ...float64 ){_gaf ._bga =dashes };
func (_cgc *Context )SetFillRule (fillRule _cc .FillRule ){_cgc ._aae =fillRule };func _bdf (_ef ,_ad ,_ff ,_dd ,_ca ,_ffe ,_cf ,_gfc ,_da float64 )(_gbag ,_fbg float64 ){_bdb :=1-_da ;_ed :=_bdb *_bdb *_bdb ;_bfg :=3*_bdb *_bdb *_da ;_egb :=3*_bdb *_da *_da ;
_db :=_da *_da *_da ;_gbag =_ed *_ef +_bfg *_ff +_egb *_ca +_db *_cf ;_fbg =_ed *_ad +_bfg *_dd +_egb *_ffe +_db *_gfc ;return ;};type stop struct{_fac float64 ;_gccd _d .Color ;};func (_fbbc *Context )StrokePattern ()_cc .Pattern {return _fbbc ._cce };
func (_dcdd *Context )SetDashOffset (offset float64 ){_dcdd ._dcg =offset };func NewContextForRGBA (im *_fd .RGBA )*Context {_acg :=im .Bounds ().Size ().X ;_fce :=im .Bounds ().Size ().Y ;return &Context {_aa :_acg ,_edd :_fce ,_gbb :_bd .NewRasterizer (_acg ,_fce ),_bdfa :im ,_dea :_d .Transparent ,_ffea :_be ,_cce :_dbc ,_ebc :1,_aae :_cc .FillRuleWinding ,_gea :_af .IdentityMatrix (),_aab :_cc .NewTextState ()};
};func (_cgcf *radialGradient )ColorAt (x ,y int )_d .Color {if len (_cgcf ._gfg )==0{return _d .Transparent ;};_fca ,_defa :=float64 (x )+0.5-_cgcf ._cgb ._edfd ,float64 (y )+0.5-_cgcf ._cgb ._bdfg ;_cdcf :=_cbag (_fca ,_defa ,_cgcf ._cgb ._dgdf ,_cgcf ._gcbf ._edfd ,_cgcf ._gcbf ._bdfg ,_cgcf ._gcbf ._dgdf );
_cdgf :=_cbag (_fca ,_defa ,-_cgcf ._cgb ._dgdf ,_fca ,_defa ,_cgcf ._cgb ._dgdf );if _cgcf ._fee ==0{if _cdcf ==0{return _d .Transparent ;};_bfed :=0.5*_cdgf /_cdcf ;if _bfed *_cgcf ._gcbf ._dgdf >=_cgcf ._abaf {return _cef (_bfed ,_cgcf ._gfg );};return _d .Transparent ;
};_edg :=_cbag (_cdcf ,_cgcf ._fee ,0,_cdcf ,-_cdgf ,0);if _edg >=0{_eebd :=_g .Sqrt (_edg );_egf :=(_cdcf +_eebd )*_cgcf ._dec ;_ffd :=(_cdcf -_eebd )*_cgcf ._dec ;if _egf *_cgcf ._gcbf ._dgdf >=_cgcf ._abaf {return _cef (_egf ,_cgcf ._gfg );}else if _ffd *_cgcf ._gcbf ._dgdf >=_cgcf ._abaf {return _cef (_ffd ,_cgcf ._gfg );
};};return _d .Transparent ;};func _aecb (_bfc _d .Color )_cc .Pattern {return &solidPattern {_eafe :_bfc }};func (_agfeb *Context )drawString (_dcb string ,_bac _ga .Face ,_bff ,_ada float64 ){_dfaa :=&_ga .Drawer {Src :_fd .NewUniform (_agfeb ._dea ),Face :_bac ,Dot :_gggf (_af .NewPoint (_bff ,_ada ))};
_ecdb :=rune (-1);for _ ,_dgccf :=range _dcb {if _ecdb >=0{_dfaa .Dot .X +=_dfaa .Face .Kern (_ecdb ,_dgccf );};_cgd ,_acf ,_ddga ,_cbcf ,_bfe :=_dfaa .Face .Glyph (_dfaa .Dot ,_dgccf );if !_bfe {continue ;};_ecgd :=_cgd .Sub (_cgd .Min );_bgaf :=_fd .NewRGBA (_ecgd );
_fc .DrawMask (_bgaf ,_ecgd ,_dfaa .Src ,_fd .Point {},_acf ,_ddga ,_fc .Over );var _gdff *_fc .Options ;if _agfeb ._acc !=nil {_gdff =&_fc .Options {DstMask :_agfeb ._acc ,DstMaskP :_fd .Point {}};};_fde :=_agfeb ._gea .Clone ().Translate (float64 (_cgd .Min .X ),float64 (_cgd .Min .Y ));
_eea :=_gc .Aff3 {_fde [0],_fde [3],_fde [6],_fde [1],_fde [4],_fde [7]};_fc .BiLinear .Transform (_agfeb ._bdfa ,_eea ,_bgaf ,_ecgd ,_fc .Over ,_gdff );_dfaa .Dot .X +=_cbcf ;_ecdb =_dgccf ;};};func (_aaa *Context )DrawString (s string ,face _ga .Face ,x ,y float64 ){_aaa .DrawStringAnchored (s ,face ,x ,y ,0,0);
};func (_dcgc *Context )DrawRoundedRectangle (x ,y ,w ,h ,r float64 ){_efc ,_cde ,_ecg ,_eaa :=x ,x +r ,x +w -r ,x +w ;_afbg ,_dfa ,_ddg ,_fcg :=y ,y +r ,y +h -r ,y +h ;_dcgc .NewSubPath ();_dcgc .MoveTo (_cde ,_afbg );_dcgc .LineTo (_ecg ,_afbg );_dcgc .DrawArc (_ecg ,_dfa ,r ,_addc (270),_addc (360));
_dcgc .LineTo (_eaa ,_ddg );_dcgc .DrawArc (_ecg ,_ddg ,r ,_addc (0),_addc (90));_dcgc .LineTo (_cde ,_fcg );_dcgc .DrawArc (_cde ,_ddg ,r ,_addc (90),_addc (180));_dcgc .LineTo (_efc ,_dfa );_dcgc .DrawArc (_cde ,_dfa ,r ,_addc (180),_addc (270));_dcgc .ClosePath ();
};func (_gcd *Context )NewSubPath (){if _gcd ._ba {_gcd ._age .Add1 (_gggf (_gcd ._dff ));};_gcd ._ba =false ;};type linearGradient struct{_efd ,_ccd ,_gdc ,_fbf float64 ;_egg stops ;};func (_dgaf *Context )DrawStringAnchored (s string ,face _ga .Face ,x ,y ,ax ,ay float64 ){_ddgf ,_aceg :=_dgaf .MeasureString (s ,face );
_dgaf .drawString (s ,face ,x -ax *_ddgf ,y +ay *_aceg );};const (_deca repeatOp =iota ;_edce ;_efec ;_bgb ;);type radialGradient struct{_cgb ,_cfdf ,_gcbf circle ;_fee ,_dec float64 ;_abaf float64 ;_gfg stops ;};type patternPainter struct{_dbd *_fd .RGBA ;
_agfc *_fd .Alpha ;_gfa _cc .Pattern ;};func (_agfe *Context )DrawImage (im _fd .Image ,x ,y int ){_agfe .DrawImageAnchored (im ,x ,y ,0,0)};func (_ffc *Context )SetFillStyle (pattern _cc .Pattern ){if _ecf ,_fcb :=pattern .(*solidPattern );_fcb {_ffc ._dea =_ecf ._eafe ;
};_ffc ._ffea =pattern ;};func _cggf (_faf _fd .Image ,_gcg repeatOp )_cc .Pattern {return &surfacePattern {_dgbc :_faf ,_efbb :_gcg };};func (_bbb *Context )Matrix ()_af .Matrix {return _bbb ._gea };func (_aaaa *Context )MeasureString (s string ,face _ga .Face )(_cee ,_cdf float64 ){_gcb :=&_ga .Drawer {Face :face };
_bffe :=_gcb .MeasureString (s );return float64 (_bffe >>6),_aaaa ._aab .Tf .Size ;};func _efbc (_edc ,_dfag ,_bae ,_ccba ,_cgbc ,_ffgf float64 )_cc .Gradient {_fffa :=circle {_edc ,_dfag ,_bae };_cfdc :=circle {_ccba ,_cgbc ,_ffgf };_cdfc :=circle {_ccba -_edc ,_cgbc -_dfag ,_ffgf -_bae };
_efca :=_cbag (_cdfc ._edfd ,_cdfc ._bdfg ,-_cdfc ._dgdf ,_cdfc ._edfd ,_cdfc ._bdfg ,_cdfc ._dgdf );var _baca float64 ;if _efca !=0{_baca =1.0/_efca ;};_ffcf :=-_fffa ._dgdf ;_ccf :=&radialGradient {_cgb :_fffa ,_cfdf :_cfdc ,_gcbf :_cdfc ,_fee :_efca ,_dec :_baca ,_abaf :_ffcf };
return _ccf ;};func (_befc *Context )ShearAbout (sx ,sy ,x ,y float64 ){_befc .Translate (x ,y );_befc .Shear (sx ,sy );_befc .Translate (-x ,-y );};func _gggf (_dcbg _af .Point )_ac .Point26_6 {return _ac .Point26_6 {X :_ecc (_dcbg .X ),Y :_ecc (_dcbg .Y )}};
func (_eef *Context )SetFillRGBA (r ,g ,b ,a float64 ){_gede :=_d .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_eef ._dea =_gede ;_eef ._ffea =_aecb (_gede );};func (_aee *Context )drawRegularPolygon (_gee int ,_edb ,_afd ,_efag ,_fg float64 ){_cdg :=2*_g .Pi /float64 (_gee );
_fg -=_g .Pi /2;if _gee %2==0{_fg +=_cdg /2;};_aee .NewSubPath ();for _cfb :=0;_cfb < _gee ;_cfb ++{_aca :=_fg +_cdg *float64 (_cfb );_aee .LineTo (_edb +_efag *_g .Cos (_aca ),_afd +_efag *_g .Sin (_aca ));};_aee .ClosePath ();};func _ecc (_gedea float64 )_ac .Int26_6 {return _ac .Int26_6 (_gedea *64)};
func (_baf stops )Len ()int {return len (_baf )};func (_beff *Context )CubicTo (x1 ,y1 ,x2 ,y2 ,x3 ,y3 float64 ){if !_beff ._ba {_beff .MoveTo (x1 ,y1 );};_cgg ,_fdc :=_beff ._fa .X ,_beff ._fa .Y ;x1 ,y1 =_beff .Transform (x1 ,y1 );x2 ,y2 =_beff .Transform (x2 ,y2 );
x3 ,y3 =_beff .Transform (x3 ,y3 );_agd :=_ged (_cgg ,_fdc ,x1 ,y1 ,x2 ,y2 ,x3 ,y3 );_cae :=_gggf (_beff ._fa );for _ ,_bcb :=range _agd [1:]{_fbge :=_gggf (_bcb );if _fbge ==_cae {continue ;};_cae =_fbge ;_beff ._dga .Add1 (_fbge );_beff ._age .Add1 (_fbge );
_beff ._fa =_bcb ;};};func _dggag (_gegd _ac .Int26_6 )float64 {const _fcaa ,_gbgdg =6,1<<6-1;if _gegd >=0{return float64 (_gegd >>_fcaa )+float64 (_gegd &_gbgdg )/64;};_gegd =-_gegd ;if _gegd >=0{return -(float64 (_gegd >>_fcaa )+float64 (_gegd &_gbgdg )/64);
};return 0;};func _ged (_ecd ,_dgb ,_ee ,_dgg ,_dcd ,_abg ,_gfb ,_cb float64 )[]_af .Point {_fdg :=(_g .Hypot (_ee -_ecd ,_dgg -_dgb )+_g .Hypot (_dcd -_ee ,_abg -_dgg )+_g .Hypot (_gfb -_dcd ,_cb -_abg ));_ecaa :=int (_fdg +0.5);if _ecaa < 4{_ecaa =4;
};_eec :=float64 (_ecaa )-1;_ccg :=make ([]_af .Point ,_ecaa );for _gg :=0;_gg < _ecaa ;_gg ++{_fbc :=float64 (_gg )/_eec ;_gfcc ,_aec :=_bdf (_ecd ,_dgb ,_ee ,_dgg ,_dcd ,_abg ,_gfb ,_cb ,_fbc );_ccg [_gg ]=_af .NewPoint (_gfcc ,_aec );};return _ccg ;
};func _fgg (_bda ,_fcgg uint32 ,_eagg float64 )uint8 {return uint8 (int32 (float64 (_bda )*(1.0-_eagg )+float64 (_fcgg )*_eagg )>>8);};func (_abc *Context )Push (){_ebb :=*_abc ;_abc ._dggd =append (_abc ._dggd ,&_ebb )};func (_caa *Context )Clip (){_caa .ClipPreserve ();
_caa .ClearPath ()};func (_dcea *Context )Scale (x ,y float64 ){_dcea ._gea =_dcea ._gea .Scale (x ,y )};func _bdda (_abf *_fd .RGBA ,_afbf *_fd .Alpha ,_bbd _cc .Pattern )*patternPainter {return &patternPainter {_abf ,_afbf ,_bbd };};func (_gde *Context )DrawImageAnchored (im _fd .Image ,x ,y int ,ax ,ay float64 ){_gfbg :=im .Bounds ().Size ();
x -=int (ax *float64 (_gfbg .X ));y -=int (ay *float64 (_gfbg .Y ));_bbc :=_fc .BiLinear ;_cba :=_gde ._gea .Clone ().Translate (float64 (x ),float64 (y ));_abge :=_gc .Aff3 {_cba [0],_cba [3],_cba [6],_cba [1],_cba [4],_cba [7]};if _gde ._acc ==nil {_bbc .Transform (_gde ._bdfa ,_abge ,im ,im .Bounds (),_fc .Over ,nil );
}else {_bbc .Transform (_gde ._bdfa ,_abge ,im ,im .Bounds (),_fc .Over ,&_fc .Options {DstMask :_gde ._acc ,DstMaskP :_fd .Point {}});};};func (_gec *Context )stroke (_dgc _bd .Painter ){_eae :=_gec ._dga ;if len (_gec ._bga )> 0{_eae =_gac (_eae ,_gec ._bga ,_gec ._dcg );
}else {_eae =_cgfe (_fdb (_eae ));};_dbcc :=_gec ._gbb ;_dbcc .UseNonZeroWinding =true ;_dbcc .Clear ();_bgf :=(_gec ._gea .ScalingFactorX ()+_gec ._gea .ScalingFactorY ())/2;_dbcc .AddStroke (_eae ,_ecc (_gec ._ebc *_bgf ),_gec .capper (),_gec .joiner ());
_dbcc .Rasterize (_dgc );};func (_eda *linearGradient )AddColorStop (offset float64 ,color _d .Color ){_eda ._egg =append (_eda ._egg ,stop {_fac :offset ,_gccd :color });_e .Sort (_eda ._egg );};func (_dad *Context )DrawLine (x1 ,y1 ,x2 ,y2 float64 ){_dad .MoveTo (x1 ,y1 );
_dad .LineTo (x2 ,y2 )};func (_bfff *surfacePattern )ColorAt (x ,y int )_d .Color {_cfdb :=_bfff ._dgbc .Bounds ();switch _bfff ._efbb {case _edce :if y >=_cfdb .Dy (){return _d .Transparent ;};case _efec :if x >=_cfdb .Dx (){return _d .Transparent ;};
case _bgb :if x >=_cfdb .Dx ()||y >=_cfdb .Dy (){return _d .Transparent ;};};x =x %_cfdb .Dx ()+_cfdb .Min .X ;y =y %_cfdb .Dy ()+_cfdb .Min .Y ;return _bfff ._dgbc .At (x ,y );};func (_eed *Context )SetStrokeStyle (pattern _cc .Pattern ){_eed ._cce =pattern };
func (_aea *Context )DrawEllipticalArc (x ,y ,rx ,ry ,angle1 ,angle2 float64 ){const _cge =16;for _ced :=0;_ced < _cge ;_ced ++{_gdf :=float64 (_ced +0)/_cge ;_fec :=float64 (_ced +1)/_cge ;_gcc :=angle1 +(angle2 -angle1 )*_gdf ;_acgb :=angle1 +(angle2 -angle1 )*_fec ;
_geag :=x +rx *_g .Cos (_gcc );_gcea :=y +ry *_g .Sin (_gcc );_fdfe :=x +rx *_g .Cos ((_gcc +_acgb )/2);_efa :=y +ry *_g .Sin ((_gcc +_acgb )/2);_eeb :=x +rx *_g .Cos (_acgb );_fbbd :=y +ry *_g .Sin (_acgb );_bfb :=2*_fdfe -_geag /2-_eeb /2;_eefe :=2*_efa -_gcea /2-_fbbd /2;
if _ced ==0{if _aea ._ba {_aea .LineTo (_geag ,_gcea );}else {_aea .MoveTo (_geag ,_gcea );};};_aea .QuadraticTo (_bfb ,_eefe ,_eeb ,_fbbd );};};func _bec (_acb ,_dgcb ,_dcc ,_bbad float64 )_cc .Gradient {_dbe :=&linearGradient {_efd :_acb ,_ccd :_dgcb ,_gdc :_dcc ,_fbf :_bbad };
return _dbe ;};func (_fdf *Context )Height ()int {return _fdf ._edd };func (_bce *Context )capper ()_bd .Capper {switch _bce ._dce {case _cc .LineCapButt :return _bd .ButtCapper ;case _cc .LineCapRound :return _bd .RoundCapper ;case _cc .LineCapSquare :return _bd .SquareCapper ;
};return nil ;};func (_aeb *Context )SetStrokeRGBA (r ,g ,b ,a float64 ){_gd :=_d .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_aeb ._cce =_aecb (_gd );};func (_efaf *Context )Rotate (angle float64 ){_efaf ._gea =_efaf ._gea .Rotate (angle )};
func (_dgcc *Context )DrawCircle (x ,y ,r float64 ){_dgcc .NewSubPath ();_dgcc .DrawEllipticalArc (x ,y ,r ,r ,0,2*_g .Pi );_dgcc .ClosePath ();};func (_efb *Context )DrawPoint (x ,y ,r float64 ){_efb .Push ();_bcec ,_fag :=_efb .Transform (x ,y );_efb .Identity ();
_efb .DrawCircle (_bcec ,_fag ,r );_efb .Pop ();};func (_abe *Context )DrawRectangle (x ,y ,w ,h float64 ){_abe .NewSubPath ();_abe .MoveTo (x ,y );_abe .LineTo (x +w ,y );_abe .LineTo (x +w ,y +h );_abe .LineTo (x ,y +h );_abe .ClosePath ();};func (_ebf *Context )FillPreserve (){var _dge _bd .Painter ;
if _ebf ._acc ==nil {if _efg ,_ccgf :=_ebf ._ffea .(*solidPattern );_ccgf {_cdc :=_bd .NewRGBAPainter (_ebf ._bdfa );_cdc .SetColor (_efg ._eafe );_dge =_cdc ;};};if _dge ==nil {_dge =_bdda (_ebf ._bdfa ,_ebf ._acc ,_ebf ._ffea );};_ebf .fill (_dge );};
func _ffce (_ebfa ,_eac _d .Color ,_dgdd float64 )_d .Color {_gbg ,_efgd ,_bbf ,_cgcc :=_ebfa .RGBA ();_ffdd ,_fgd ,_cdff ,_gbf :=_eac .RGBA ();return _d .RGBA {_fgg (_gbg ,_ffdd ,_dgdd ),_fgg (_efgd ,_fgd ,_dgdd ),_fgg (_bbf ,_cdff ,_dgdd ),_fgg (_cgcc ,_gbf ,_dgdd )};
};func (_fbbb *Context )Translate (x ,y float64 ){_fbbb ._gea =_fbbb ._gea .Translate (x ,y )};func _cda (_geff _fd .Image )*_fd .RGBA {_eeff :=_geff .Bounds ();_gfbf :=_fd .NewRGBA (_eeff );_c .Draw (_gfbf ,_eeff ,_geff ,_eeff .Min ,_c .Src );return _gfbf ;
};func (_cbg *patternPainter )Paint (ss []_bd .Span ,done bool ){_ebfd :=_cbg ._dbd .Bounds ();for _ ,_ecad :=range ss {if _ecad .Y < _ebfd .Min .Y {continue ;};if _ecad .Y >=_ebfd .Max .Y {return ;};if _ecad .X0 < _ebfd .Min .X {_ecad .X0 =_ebfd .Min .X ;
};if _ecad .X1 > _ebfd .Max .X {_ecad .X1 =_ebfd .Max .X ;};if _ecad .X0 >=_ecad .X1 {continue ;};const _dbed =1<<16-1;_gbe :=_ecad .Y -_cbg ._dbd .Rect .Min .Y ;_caed :=_ecad .X0 -_cbg ._dbd .Rect .Min .X ;_gga :=(_ecad .Y -_cbg ._dbd .Rect .Min .Y )*_cbg ._dbd .Stride +(_ecad .X0 -_cbg ._dbd .Rect .Min .X )*4;
_egbb :=_gga +(_ecad .X1 -_ecad .X0 )*4;for _fcga ,_gegf :=_gga ,_caed ;_fcga < _egbb ;_fcga ,_gegf =_fcga +4,_gegf +1{_fdaf :=_ecad .Alpha ;if _cbg ._agfc !=nil {_fdaf =_fdaf *uint32 (_cbg ._agfc .AlphaAt (_gegf ,_gbe ).A )/255;if _fdaf ==0{continue ;
};};_ggdg :=_cbg ._gfa .ColorAt (_gegf ,_gbe );_ebbb ,_gdfb ,_fgcd ,_gbd :=_ggdg .RGBA ();_abd :=uint32 (_cbg ._dbd .Pix [_fcga +0]);_gfde :=uint32 (_cbg ._dbd .Pix [_fcga +1]);_edad :=uint32 (_cbg ._dbd .Pix [_fcga +2]);_ffddc :=uint32 (_cbg ._dbd .Pix [_fcga +3]);
_gbgd :=(_dbed -(_gbd *_fdaf /_dbed ))*0x101;_cbg ._dbd .Pix [_fcga +0]=uint8 ((_abd *_gbgd +_ebbb *_fdaf )/_dbed >>8);_cbg ._dbd .Pix [_fcga +1]=uint8 ((_gfde *_gbgd +_gdfb *_fdaf )/_dbed >>8);_cbg ._dbd .Pix [_fcga +2]=uint8 ((_edad *_gbgd +_fgcd *_fdaf )/_dbed >>8);
_cbg ._dbd .Pix [_fcga +3]=uint8 ((_ffddc *_gbgd +_gbd *_fdaf )/_dbed >>8);};};};func (_bgda *Context )StrokePreserve (){var _eff _bd .Painter ;if _bgda ._acc ==nil {if _ffg ,_gbbg :=_bgda ._cce .(*solidPattern );_gbbg {_cga :=_bd .NewRGBAPainter (_bgda ._bdfa );
_cga .SetColor (_ffg ._eafe );_eff =_cga ;};};if _eff ==nil {_eff =_bdda (_bgda ._bdfa ,_bgda ._acc ,_bgda ._cce );};_bgda .stroke (_eff );};func (_dgd *Context )SetMask (mask *_fd .Alpha )error {if mask .Bounds ().Size ()!=_dgd ._bdfa .Bounds ().Size (){return _bg .New ("\u006d\u0061\u0073\u006b\u0020\u0073i\u007a\u0065\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068 \u0063\u006f\u006e\u0074\u0065\u0078\u0074 \u0073\u0069\u007a\u0065");
};_dgd ._acc =mask ;return nil ;};func _addc (_gdae float64 )float64 {return _gdae *_g .Pi /180};func (_ce *Context )FillPattern ()_cc .Pattern {return _ce ._ffea };func (_bcag *Context )setFillAndStrokeColor (_fbbg _d .Color ){_bcag ._dea =_fbbg ;_bcag ._ffea =_aecb (_fbbg );
_bcag ._cce =_aecb (_fbbg );};func _gac (_egdb _bd .Path ,_egge []float64 ,_afa float64 )_bd .Path {return _cgfe (_gcdf (_fdb (_egdb ),_egge ,_afa ));};func (_fe *Context )QuadraticTo (x1 ,y1 ,x2 ,y2 float64 ){if !_fe ._ba {_fe .MoveTo (x1 ,y1 );};x1 ,y1 =_fe .Transform (x1 ,y1 );
x2 ,y2 =_fe .Transform (x2 ,y2 );_adb :=_af .NewPoint (x1 ,y1 );_ceb :=_af .NewPoint (x2 ,y2 );_efe :=_gggf (_adb );_edf :=_gggf (_ceb );_fe ._dga .Add2 (_efe ,_edf );_fe ._age .Add2 (_efe ,_edf );_fe ._fa =_ceb ;};func (_fba *Context )DrawArc (x ,y ,r ,angle1 ,angle2 float64 ){_fba .DrawEllipticalArc (x ,y ,r ,r ,angle1 ,angle2 );
};func _fdb (_ede _bd .Path )[][]_af .Point {var _agg [][]_af .Point ;var _dgf []_af .Point ;var _dcdg ,_decc float64 ;for _gcf :=0;_gcf < len (_ede );{switch _ede [_gcf ]{case 0:if len (_dgf )> 0{_agg =append (_agg ,_dgf );_dgf =nil ;};_gbfa :=_dggag (_ede [_gcf +1]);
_faa :=_dggag (_ede [_gcf +2]);_dgf =append (_dgf ,_af .NewPoint (_gbfa ,_faa ));_dcdg ,_decc =_gbfa ,_faa ;_gcf +=4;case 1:_cfc :=_dggag (_ede [_gcf +1]);_fbda :=_dggag (_ede [_gcf +2]);_dgf =append (_dgf ,_af .NewPoint (_cfc ,_fbda ));_dcdg ,_decc =_cfc ,_fbda ;
_gcf +=4;case 2:_gfd :=_dggag (_ede [_gcf +1]);_fga :=_dggag (_ede [_gcf +2]);_adf :=_dggag (_ede [_gcf +3]);_gda :=_dggag (_ede [_gcf +4]);_ffa :=_ec (_dcdg ,_decc ,_gfd ,_fga ,_adf ,_gda );_dgf =append (_dgf ,_ffa ...);_dcdg ,_decc =_adf ,_gda ;_gcf +=6;
case 3:_accb :=_dggag (_ede [_gcf +1]);_dfc :=_dggag (_ede [_gcf +2]);_ddb :=_dggag (_ede [_gcf +3]);_ccga :=_dggag (_ede [_gcf +4]);_daa :=_dggag (_ede [_gcf +5]);_bacf :=_dggag (_ede [_gcf +6]);_ffde :=_ged (_dcdg ,_decc ,_accb ,_dfc ,_ddb ,_ccga ,_daa ,_bacf );
_dgf =append (_dgf ,_ffde ...);_dcdg ,_decc =_daa ,_bacf ;_gcf +=8;default:_gf .Log .Debug ("\u0057\u0041\u0052\u004e: \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0070\u0061\u0074\u0068\u003a\u0020%\u0076",_ede );return _agg ;};};if len (_dgf )> 0{_agg =append (_agg ,_dgf );
};return _agg ;};func (_ebe *Context )SetColor (c _d .Color ){_ebe .setFillAndStrokeColor (c )};func _gcdf (_ebcg [][]_af .Point ,_cec []float64 ,_ebdf float64 )[][]_af .Point {var _gdec [][]_af .Point ;if len (_cec )==0{return _ebcg ;};if len (_cec )==1{_cec =append (_cec ,_cec [0]);
};for _ ,_fae :=range _ebcg {if len (_fae )< 2{continue ;};_geef :=_fae [0];_dgeda :=1;_gdg :=0;_feec :=0.0;if _ebdf !=0{var _dbee float64 ;for _ ,_bbbf :=range _cec {_dbee +=_bbbf ;};_ebdf =_g .Mod (_ebdf ,_dbee );if _ebdf < 0{_ebdf +=_dbee ;};for _dgeb ,_dfce :=range _cec {_ebdf -=_dfce ;
if _ebdf < 0{_gdg =_dgeb ;_feec =_dfce +_ebdf ;break ;};};};var _cgf []_af .Point ;_cgf =append (_cgf ,_geef );for _dgeda < len (_fae ){_bcd :=_cec [_gdg ];_bfbf :=_fae [_dgeda ];_baec :=_geef .Distance (_bfbf );_abbg :=_bcd -_feec ;if _baec > _abbg {_fcaf :=_abbg /_baec ;
_efcb :=_geef .Interpolate (_bfbf ,_fcaf );_cgf =append (_cgf ,_efcb );if _gdg %2==0&&len (_cgf )> 1{_gdec =append (_gdec ,_cgf );};_cgf =nil ;_cgf =append (_cgf ,_efcb );_feec =0;_geef =_efcb ;_gdg =(_gdg +1)%len (_cec );}else {_cgf =append (_cgf ,_bfbf );
_geef =_bfbf ;_feec +=_baec ;_dgeda ++;};};if _gdg %2==0&&len (_cgf )> 1{_gdec =append (_gdec ,_cgf );};};return _gdec ;};func (_abb *Context )SetHexColor (x string ){_bcf ,_cbe ,_fff ,_gfe :=_dfae (x );_abb .SetRGBA255 (_bcf ,_cbe ,_fff ,_gfe );};func _ae (_dc ,_ag ,_bc ,_bb ,_ab ,_fb ,_de float64 )(_agf ,_bca float64 ){_gb :=1-_de ;
_aba :=_gb *_gb ;_gba :=2*_gb *_de ;_bba :=_de *_de ;_agf =_aba *_dc +_gba *_bc +_bba *_ab ;_bca =_aba *_ag +_gba *_bb +_bba *_fb ;return ;};func (_fbe *Context )Stroke (){_fbe .StrokePreserve ();_fbe .ClearPath ()};func (_ffcb *Context )SetMatrix (m _af .Matrix ){_ffcb ._gea =m };
func _cbag (_aga ,_dab ,_ebd ,_dde ,_bbbc ,_dcbb float64 )float64 {return _aga *_dde +_dab *_bbbc +_ebd *_dcbb ;};type surfacePattern struct{_dgbc _fd .Image ;_efbb repeatOp ;};func (_cfef *Context )Clear (){_dfb :=_fd .NewUniform (_cfef ._dea );_fc .Draw (_cfef ._bdfa ,_cfef ._bdfa .Bounds (),_dfb ,_fd .Point {},_fc .Src );
};func (_bag *Context )LineWidth ()float64 {return _bag ._ebc };