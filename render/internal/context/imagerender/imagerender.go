//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package imagerender ;import (_aga "errors";_e "fmt";_agac "github.com/unidoc/freetype/raster";_ed "github.com/unidoc/unipdf/v3/common";_dd "github.com/unidoc/unipdf/v3/internal/transform";_ee "github.com/unidoc/unipdf/v3/render/internal/context";_da "golang.org/x/image/draw";
_af "golang.org/x/image/font";_ae "golang.org/x/image/math/f64";_df "golang.org/x/image/math/fixed";_g "image";_ac "image/color";_cc "image/draw";_c "math";_ag "sort";_a "strings";);func (_adab *patternPainter )Paint (ss []_agac .Span ,done bool ){_fea :=_adab ._cggcb .Bounds ();
for _ ,_deab :=range ss {if _deab .Y < _fea .Min .Y {continue ;};if _deab .Y >=_fea .Max .Y {return ;};if _deab .X0 < _fea .Min .X {_deab .X0 =_fea .Min .X ;};if _deab .X1 > _fea .Max .X {_deab .X1 =_fea .Max .X ;};if _deab .X0 >=_deab .X1 {continue ;};
const _dbf =1<<16-1;_ccdc :=_deab .Y -_adab ._cggcb .Rect .Min .Y ;_gab :=_deab .X0 -_adab ._cggcb .Rect .Min .X ;_bbg :=(_deab .Y -_adab ._cggcb .Rect .Min .Y )*_adab ._cggcb .Stride +(_deab .X0 -_adab ._cggcb .Rect .Min .X )*4;_ebc :=_bbg +(_deab .X1 -_deab .X0 )*4;
for _ead ,_cecb :=_bbg ,_gab ;_ead < _ebc ;_ead ,_cecb =_ead +4,_cecb +1{_fcg :=_deab .Alpha ;if _adab ._cdf !=nil {_fcg =_fcg *uint32 (_adab ._cdf .AlphaAt (_cecb ,_ccdc ).A )/255;if _fcg ==0{continue ;};};_egca :=_adab ._bdde .ColorAt (_cecb ,_ccdc );
_ffac ,_gadc ,_bbee ,_ccc :=_egca .RGBA ();_ebd :=uint32 (_adab ._cggcb .Pix [_ead +0]);_baebf :=uint32 (_adab ._cggcb .Pix [_ead +1]);_acba :=uint32 (_adab ._cggcb .Pix [_ead +2]);_gdfc :=uint32 (_adab ._cggcb .Pix [_ead +3]);_eef :=(_dbf -(_ccc *_fcg /_dbf ))*0x101;
_adab ._cggcb .Pix [_ead +0]=uint8 ((_ebd *_eef +_ffac *_fcg )/_dbf >>8);_adab ._cggcb .Pix [_ead +1]=uint8 ((_baebf *_eef +_gadc *_fcg )/_dbf >>8);_adab ._cggcb .Pix [_ead +2]=uint8 ((_acba *_eef +_bbee *_fcg )/_dbf >>8);_adab ._cggcb .Pix [_ead +3]=uint8 ((_gdfc *_eef +_ccc *_fcg )/_dbf >>8);
};};};func (_fbd *Context )stroke (_daeg _agac .Painter ){_bdc :=_fbd ._dge ;if len (_fbd ._cgggc )> 0{_bdc =_afg (_bdc ,_fbd ._cgggc ,_fbd ._edbe );}else {_bdc =_ccd (_aeag (_bdc ));};_cbfd :=_fbd ._bfd ;_cbfd .UseNonZeroWinding =true ;_cbfd .Clear ();
_dfbe :=(_fbd ._cbg .ScalingFactorX ()+_fbd ._cbg .ScalingFactorY ())/2;_cbfd .AddStroke (_bdc ,_gbca (_fbd ._aad *_dfbe ),_fbd .capper (),_fbd .joiner ());_cbfd .Rasterize (_daeg );};func _ccd (_dgbe [][]_dd .Point )_agac .Path {var _fddb _agac .Path ;
for _ ,_def :=range _dgbe {var _gfd _df .Point26_6 ;for _aggc ,_bdba :=range _def {_gga :=_aede (_bdba );if _aggc ==0{_fddb .Start (_gga );}else {_bgdc :=_gga .X -_gfd .X ;_aac :=_gga .Y -_gfd .Y ;if _bgdc < 0{_bgdc =-_bgdc ;};if _aac < 0{_aac =-_aac ;
};if _bgdc +_aac > 8{_fddb .Add1 (_gga );};};_gfd =_gga ;};};return _fddb ;};func NewContext (width ,height int )*Context {return NewContextForRGBA (_g .NewRGBA (_g .Rect (0,0,width ,height )));};func (_geea *Context )DrawImageAnchored (im _g .Image ,x ,y int ,ax ,ay float64 ){_aadf :=im .Bounds ().Size ();
x -=int (ax *float64 (_aadf .X ));y -=int (ay *float64 (_aadf .Y ));_bfg :=_da .BiLinear ;_fccc :=_geea ._cbg .Clone ().Translate (float64 (x ),float64 (y ));_ffg :=_ae .Aff3 {_fccc [0],_fccc [3],_fccc [6],_fccc [1],_fccc [4],_fccc [7]};if _geea ._ec ==nil {_bfg .Transform (_geea ._ggg ,_ffg ,im ,im .Bounds (),_da .Over ,nil );
}else {_bfg .Transform (_geea ._ggg ,_ffg ,im ,im .Bounds (),_da .Over ,&_da .Options {DstMask :_geea ._ec ,DstMaskP :_g .Point {}});};};func (_caf *Context )SetMatrix (m _dd .Matrix ){_caf ._cbg =m };func (_acgd *Context )RotateAbout (angle ,x ,y float64 ){_acgd .Translate (x ,y );
_acgd .Rotate (angle );_acgd .Translate (-x ,-y );};func NewContextForRGBA (im *_g .RGBA )*Context {_bfb :=im .Bounds ().Size ().X ;_cbf :=im .Bounds ().Size ().Y ;return &Context {_egb :_bfb ,_gbd :_cbf ,_bfd :_agac .NewRasterizer (_bfb ,_cbf ),_ggg :im ,_bee :_ac .Transparent ,_fbc :_be ,_ede :_cggg ,_aad :1,_gefa :_ee .FillRuleWinding ,_cbg :_dd .IdentityMatrix (),_eba :_ee .NewTextState ()};
};func (_bdb *Context )LineWidth ()float64 {return _bdb ._aad };func (_dbggd *Context )QuadraticTo (x1 ,y1 ,x2 ,y2 float64 ){if !_dbggd ._cef {_dbggd .MoveTo (x1 ,y1 );};x1 ,y1 =_dbggd .Transform (x1 ,y1 );x2 ,y2 =_dbggd .Transform (x2 ,y2 );_bae :=_dd .NewPoint (x1 ,y1 );
_feb :=_dd .NewPoint (x2 ,y2 );_cab :=_aede (_bae );_fdc :=_aede (_feb );_dbggd ._dge .Add2 (_cab ,_fdc );_dbggd ._cac .Add2 (_cab ,_fdc );_dbggd ._dbgg =_feb ;};func _fdg (_bef ,_caaa _ac .Color ,_gfae float64 )_ac .Color {_dadc ,_bbdg ,_ecdd ,_deac :=_bef .RGBA ();
_egee ,_eded ,_fae ,_fcee :=_caaa .RGBA ();return _ac .RGBA {_dagg (_dadc ,_egee ,_gfae ),_dagg (_bbdg ,_eded ,_gfae ),_dagg (_ecdd ,_fae ,_gfae ),_dagg (_deac ,_fcee ,_gfae )};};func _abd (_ebgc [][]_dd .Point ,_fcd []float64 ,_ecff float64 )[][]_dd .Point {var _cgf [][]_dd .Point ;
if len (_fcd )==0{return _ebgc ;};if len (_fcd )==1{_fcd =append (_fcd ,_fcd [0]);};for _ ,_gbc :=range _ebgc {if len (_gbc )< 2{continue ;};_ggf :=_gbc [0];_daca :=1;_deda :=0;_gfec :=0.0;if _ecff !=0{var _faef float64 ;for _ ,_cggc :=range _fcd {_faef +=_cggc ;
};_ecff =_c .Mod (_ecff ,_faef );if _ecff < 0{_ecff +=_faef ;};for _cfb ,_dca :=range _fcd {_ecff -=_dca ;if _ecff < 0{_deda =_cfb ;_gfec =_dca +_ecff ;break ;};};};var _baeb []_dd .Point ;_baeb =append (_baeb ,_ggf );for _daca < len (_gbc ){_dfcf :=_fcd [_deda ];
_cgcb :=_gbc [_daca ];_aaff :=_ggf .Distance (_cgcb );_bgd :=_dfcf -_gfec ;if _aaff > _bgd {_ceag :=_bgd /_aaff ;_fcdb :=_ggf .Interpolate (_cgcb ,_ceag );_baeb =append (_baeb ,_fcdb );if _deda %2==0&&len (_baeb )> 1{_cgf =append (_cgf ,_baeb );};_baeb =nil ;
_baeb =append (_baeb ,_fcdb );_gfec =0;_ggf =_fcdb ;_deda =(_deda +1)%len (_fcd );}else {_baeb =append (_baeb ,_cgcb );_ggf =_cgcb ;_gfec +=_aaff ;_daca ++;};};if _deda %2==0&&len (_baeb )> 1{_cgf =append (_cgf ,_baeb );};};return _cgf ;};func (_edaf *Context )DrawCircle (x ,y ,r float64 ){_edaf .NewSubPath ();
_edaf .DrawEllipticalArc (x ,y ,r ,r ,0,2*_c .Pi );_edaf .ClosePath ();};func (_efc *Context )Stroke (){_efc .StrokePreserve ();_efc .ClearPath ()};type solidPattern struct{_cbfb _ac .Color };type circle struct{_ddd ,_edeg ,_caa float64 };func (_dbe *Context )DrawPoint (x ,y ,r float64 ){_dbe .Push ();
_egedc ,_fa :=_dbe .Transform (x ,y );_dbe .Identity ();_dbe .DrawCircle (_egedc ,_fa ,r );_dbe .Pop ();};func (_ab *Context )Image ()_g .Image {return _ab ._ggg };func (_dcgd *Context )DrawArc (x ,y ,r ,angle1 ,angle2 float64 ){_dcgd .DrawEllipticalArc (x ,y ,r ,r ,angle1 ,angle2 );
};func (_cgb *Context )AsMask ()*_g .Alpha {_cbdggc :=_g .NewAlpha (_cgb ._ggg .Bounds ());_da .Draw (_cbdggc ,_cgb ._ggg .Bounds (),_cgb ._ggg ,_g .Point {},_da .Src );return _cbdggc ;};func (_aef *linearGradient )ColorAt (x ,y int )_ac .Color {if len (_aef ._afa )==0{return _ac .Transparent ;
};_afc ,_febf :=float64 (x ),float64 (y );_fgfd ,_gfg ,_adcc ,_ega :=_aef ._agg ,_aef ._eeb ,_aef ._afd ,_aef ._gdd ;_ebe ,_cfc :=_adcc -_fgfd ,_ega -_gfg ;if _cfc ==0&&_ebe !=0{return _egfe ((_afc -_fgfd )/_ebe ,_aef ._afa );};if _ebe ==0&&_cfc !=0{return _egfe ((_febf -_gfg )/_cfc ,_aef ._afa );
};_eabb :=_ebe *(_afc -_fgfd )+_cfc *(_febf -_gfg );if _eabb < 0{return _aef ._afa [0]._beeb ;};_dbd :=_c .Hypot (_ebe ,_cfc );_cged :=((_afc -_fgfd )*-_cfc +(_febf -_gfg )*_ebe )/(_dbd *_dbd );_acf ,_dafe :=_fgfd +_cged *-_cfc ,_gfg +_cged *_ebe ;_cgbd :=_c .Hypot (_afc -_acf ,_febf -_dafe )/_dbd ;
return _egfe (_cgbd ,_aef ._afa );};func (_deg *Context )DrawEllipticalArc (x ,y ,rx ,ry ,angle1 ,angle2 float64 ){const _egfg =16;for _eda :=0;_eda < _egfg ;_eda ++{_daf :=float64 (_eda +0)/_egfg ;_ffe :=float64 (_eda +1)/_egfg ;_bfba :=angle1 +(angle2 -angle1 )*_daf ;
_dcf :=angle1 +(angle2 -angle1 )*_ffe ;_gfa :=x +rx *_c .Cos (_bfba );_gefad :=y +ry *_c .Sin (_bfba );_gde :=x +rx *_c .Cos ((_bfba +_dcf )/2);_bbca :=y +ry *_c .Sin ((_bfba +_dcf )/2);_bbd :=x +rx *_c .Cos (_dcf );_cfd :=y +ry *_c .Sin (_dcf );_gdab :=2*_gde -_gfa /2-_bbd /2;
_cbe :=2*_bbca -_gefad /2-_cfd /2;if _eda ==0{if _deg ._cef {_deg .LineTo (_gfa ,_gefad );}else {_deg .MoveTo (_gfa ,_gefad );};};_deg .QuadraticTo (_gdab ,_cbe ,_bbd ,_cfd );};};func (_aaf *Context )SetRGBA (r ,g ,b ,a float64 ){_aaf ._bee =_ac .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};
_aaf .setFillAndStrokeColor (_aaf ._bee );};func (_bdg *Context )SetLineJoin (lineJoin _ee .LineJoin ){_bdg ._gfe =lineJoin };func (_bdd stops )Swap (i ,j int ){_bdd [i ],_bdd [j ]=_bdd [j ],_bdd [i ]};func _dbbb (_fga _df .Int26_6 )float64 {const _bfded ,_fca =6,1<<6-1;
if _fga >=0{return float64 (_fga >>_bfded )+float64 (_fga &_fca )/64;};_fga =-_fga ;if _fga >=0{return -(float64 (_fga >>_bfded )+float64 (_fga &_fca )/64);};return 0;};func (_acb *Context )fill (_fc _agac .Painter ){_bff :=_acb ._cac ;if _acb ._cef {_bff =make (_agac .Path ,len (_acb ._cac ));
copy (_bff ,_acb ._cac );_bff .Add1 (_aede (_acb ._deb ));};_ddc :=_acb ._bfd ;_ddc .UseNonZeroWinding =_acb ._gefa ==_ee .FillRuleWinding ;_ddc .Clear ();_ddc .AddPath (_bff );_ddc .Rasterize (_fc );};type surfacePattern struct{_fdf _g .Image ;_adbe repeatOp ;
};func _aeag (_bcfg _agac .Path )[][]_dd .Point {var _dcdb [][]_dd .Point ;var _ddf []_dd .Point ;var _bed ,_cabd float64 ;for _bece :=0;_bece < len (_bcfg );{switch _bcfg [_bece ]{case 0:if len (_ddf )> 0{_dcdb =append (_dcdb ,_ddf );_ddf =nil ;};_aab :=_dbbb (_bcfg [_bece +1]);
_fgde :=_dbbb (_bcfg [_bece +2]);_ddf =append (_ddf ,_dd .NewPoint (_aab ,_fgde ));_bed ,_cabd =_aab ,_fgde ;_bece +=4;case 1:_efbf :=_dbbb (_bcfg [_bece +1]);_aeb :=_dbbb (_bcfg [_bece +2]);_ddf =append (_ddf ,_dd .NewPoint (_efbf ,_aeb ));_bed ,_cabd =_efbf ,_aeb ;
_bece +=4;case 2:_gdg :=_dbbb (_bcfg [_bece +1]);_ebfcc :=_dbbb (_bcfg [_bece +2]);_bad :=_dbbb (_bcfg [_bece +3]);_fba :=_dbbb (_bcfg [_bece +4]);_ffga :=_cg (_bed ,_cabd ,_gdg ,_ebfcc ,_bad ,_fba );_ddf =append (_ddf ,_ffga ...);_bed ,_cabd =_bad ,_fba ;
_bece +=6;case 3:_dcc :=_dbbb (_bcfg [_bece +1]);_eaa :=_dbbb (_bcfg [_bece +2]);_aebe :=_dbbb (_bcfg [_bece +3]);_gfeb :=_dbbb (_bcfg [_bece +4]);_afe :=_dbbb (_bcfg [_bece +5]);_dce :=_dbbb (_bcfg [_bece +6]);_dfd :=_ddb (_bed ,_cabd ,_dcc ,_eaa ,_aebe ,_gfeb ,_afe ,_dce );
_ddf =append (_ddf ,_dfd ...);_bed ,_cabd =_afe ,_dce ;_bece +=8;default:_ed .Log .Debug ("\u0057\u0041\u0052\u004e: \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0070\u0061\u0074\u0068\u003a\u0020%\u0076",_bcfg );return _dcdb ;};};if len (_ddf )> 0{_dcdb =append (_dcdb ,_ddf );
};return _dcdb ;};func (_gda *Context )SetLineCap (lineCap _ee .LineCap ){_gda ._aag =lineCap };func (_gdc *Context )ClearPath (){_gdc ._dge .Clear ();_gdc ._cac .Clear ();_gdc ._cef =false };func _baa (_cee *_g .RGBA ,_ceec *_g .Alpha ,_cdfa _ee .Pattern )*patternPainter {return &patternPainter {_cee ,_ceec ,_cdfa };
};func (_geb *Context )SetMask (mask *_g .Alpha )error {if mask .Bounds ().Size ()!=_geb ._ggg .Bounds ().Size (){return _aga .New ("\u006d\u0061\u0073\u006b\u0020\u0073i\u007a\u0065\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068 \u0063\u006f\u006e\u0074\u0065\u0078\u0074 \u0073\u0069\u007a\u0065");
};_geb ._ec =mask ;return nil ;};func (_agf *Context )CubicTo (x1 ,y1 ,x2 ,y2 ,x3 ,y3 float64 ){if !_agf ._cef {_agf .MoveTo (x1 ,y1 );};_eged ,_cdb :=_agf ._dbgg .X ,_agf ._dbgg .Y ;x1 ,y1 =_agf .Transform (x1 ,y1 );x2 ,y2 =_agf .Transform (x2 ,y2 );x3 ,y3 =_agf .Transform (x3 ,y3 );
_dfba :=_ddb (_eged ,_cdb ,x1 ,y1 ,x2 ,y2 ,x3 ,y3 );_egc :=_aede (_agf ._dbgg );for _ ,_caba :=range _dfba [1:]{_edbea :=_aede (_caba );if _edbea ==_egc {continue ;};_egc =_edbea ;_agf ._dge .Add1 (_edbea );_agf ._cac .Add1 (_edbea );_agf ._dbgg =_caba ;
};};func (_ccgef *Context )TextState ()*_ee .TextState {return &_ccgef ._eba };func (_dfg *solidPattern )ColorAt (x ,y int )_ac .Color {return _dfg ._cbfb };func (_cec *Context )SetDashOffset (offset float64 ){_cec ._edbe =offset };func _faga (_cfe float64 )float64 {return _cfe *_c .Pi /180};
func _edfc (_aed _g .Image ,_cfdf repeatOp )_ee .Pattern {return &surfacePattern {_fdf :_aed ,_adbe :_cfdf };};func (_gag *Context )SetPixel (x ,y int ){_gag ._ggg .Set (x ,y ,_gag ._bee )};func (_bbc *Context )SetRGB (r ,g ,b float64 ){_bbc .SetRGBA (r ,g ,b ,1)};
func (_eea *Context )FillPattern ()_ee .Pattern {return _eea ._fbc };func (_dbac *Context )capper ()_agac .Capper {switch _dbac ._aag {case _ee .LineCapButt :return _agac .ButtCapper ;case _ee .LineCapRound :return _agac .RoundCapper ;case _ee .LineCapSquare :return _agac .SquareCapper ;
};return nil ;};func _egfe (_fgbb float64 ,_cga stops )_ac .Color {if _fgbb <=0.0||len (_cga )==1{return _cga [0]._beeb ;};_efbe :=_cga [len (_cga )-1];if _fgbb >=_efbe ._cefb {return _efbe ._beeb ;};for _bbcf ,_cdcb :=range _cga [1:]{if _fgbb < _cdcb ._cefb {_fgbb =(_fgbb -_cga [_bbcf ]._cefb )/(_cdcb ._cefb -_cga [_bbcf ]._cefb );
return _fdg (_cga [_bbcf ]._beeb ,_cdcb ._beeb ,_fgbb );};};return _efbe ._beeb ;};func (_cgge *linearGradient )AddColorStop (offset float64 ,color _ac .Color ){_cgge ._afa =append (_cgge ._afa ,stop {_cefb :offset ,_beeb :color });_ag .Sort (_cgge ._afa );
};func (_aea *Context )ResetClip (){_aea ._ec =nil };func (_abca *Context )drawString (_adg string ,_ebfc _af .Face ,_gae ,_cfdc float64 ){_aadc :=&_af .Drawer {Src :_g .NewUniform (_abca ._bee ),Face :_ebfc ,Dot :_aede (_dd .NewPoint (_gae ,_cfdc ))};
_beg :=rune (-1);for _ ,_ced :=range _adg {if _beg >=0{_aadc .Dot .X +=_aadc .Face .Kern (_beg ,_ced );};_gedf ,_efe ,_bec ,_dac ,_gc :=_aadc .Face .Glyph (_aadc .Dot ,_ced );if !_gc {continue ;};_cae :=_gedf .Sub (_gedf .Min );_acg :=_g .NewRGBA (_cae );
_da .DrawMask (_acg ,_cae ,_aadc .Src ,_g .Point {},_efe ,_bec ,_da .Over );var _cbed *_da .Options ;if _abca ._ec !=nil {_cbed =&_da .Options {DstMask :_abca ._ec ,DstMaskP :_g .Point {}};};_ebb :=_abca ._cbg .Clone ().Translate (float64 (_gedf .Min .X ),float64 (_gedf .Min .Y ));
_ecfc :=_ae .Aff3 {_ebb [0],_ebb [3],_ebb [6],_ebb [1],_ebb [4],_ebb [7]};_da .BiLinear .Transform (_abca ._ggg ,_ecfc ,_acg ,_cae ,_da .Over ,_cbed );_aadc .Dot .X +=_dac ;_beg =_ced ;};};func (_bgf *Context )DrawImage (im _g .Image ,x ,y int ){_bgf .DrawImageAnchored (im ,x ,y ,0,0)};
func (_fcc *Context )Clear (){_bcaa :=_g .NewUniform (_fcc ._bee );_da .Draw (_fcc ._ggg ,_fcc ._ggg .Bounds (),_bcaa ,_g .Point {},_da .Src );};func (_dcg *Context )setFillAndStrokeColor (_fbcb _ac .Color ){_dcg ._bee =_fbcb ;_dcg ._fbc =_defd (_fbcb );
_dcg ._ede =_defd (_fbcb );};func (_eec *Context )Scale (x ,y float64 ){_eec ._cbg =_eec ._cbg .Scale (x ,y )};func _bbe (_dbb ,_dab ,_ade ,_dfe ,_gd ,_ba ,_aff ,_ca ,_bd float64 )(_dgc ,_eg float64 ){_gad :=1-_bd ;_ff :=_gad *_gad *_gad ;_cb :=3*_gad *_gad *_bd ;
_cbd :=3*_gad *_bd *_bd ;_cgg :=_bd *_bd *_bd ;_dgc =_ff *_dbb +_cb *_ade +_cbd *_gd +_cgg *_aff ;_eg =_ff *_dab +_cb *_dfe +_cbd *_ba +_cgg *_ca ;return ;};func (_dfb *Context )SetFillRule (fillRule _ee .FillRule ){_dfb ._gefa =fillRule };func (_gec *Context )DrawRectangle (x ,y ,w ,h float64 ){_gec .NewSubPath ();
_gec .MoveTo (x ,y );_gec .LineTo (x +w ,y );_gec .LineTo (x +w ,y +h );_gec .LineTo (x ,y +h );_gec .ClosePath ();};func (_gee *Context )SetLineWidth (lineWidth float64 ){_gee ._aad =lineWidth };func _aede (_cba _dd .Point )_df .Point26_6 {return _df .Point26_6 {X :_gbca (_cba .X ),Y :_gbca (_cba .Y )}};
func (_dega *Context )Shear (x ,y float64 ){_dega ._cbg .Shear (x ,y )};func (_abba *Context )DrawEllipse (x ,y ,rx ,ry float64 ){_abba .NewSubPath ();_abba .DrawEllipticalArc (x ,y ,rx ,ry ,0,2*_c .Pi );_abba .ClosePath ();};func (_fe *Context )MoveTo (x ,y float64 ){if _fe ._cef {_fe ._cac .Add1 (_aede (_fe ._deb ));
};x ,y =_fe .Transform (x ,y );_cbdg :=_dd .NewPoint (x ,y );_dgef :=_aede (_cbdg );_fe ._dge .Start (_dgef );_fe ._cac .Start (_dgef );_fe ._deb =_cbdg ;_fe ._dbgg =_cbdg ;_fe ._cef =true ;};func (_gfba *Context )joiner ()_agac .Joiner {switch _gfba ._gfe {case _ee .LineJoinBevel :return _agac .BevelJoiner ;
case _ee .LineJoinRound :return _agac .RoundJoiner ;};return nil ;};type stop struct{_cefb float64 ;_beeb _ac .Color ;};type radialGradient struct{_febb ,_fgd ,_dee circle ;_dgb ,_afcd float64 ;_gcg float64 ;_eecg stops ;};func (_aca *Context )FillPreserve (){var _dcd _agac .Painter ;
if _aca ._ec ==nil {if _afb ,_ded :=_aca ._fbc .(*solidPattern );_ded {_eeaf :=_agac .NewRGBAPainter (_aca ._ggg );_eeaf .SetColor (_afb ._cbfb );_dcd =_eeaf ;};};if _dcd ==nil {_dcd =_baa (_aca ._ggg ,_aca ._ec ,_aca ._fbc );};_aca .fill (_dcd );};func _dagg (_beb ,_fcca uint32 ,_fdb float64 )uint8 {return uint8 (int32 (float64 (_beb )*(1.0-_fdb )+float64 (_fcca )*_fdb )>>8);
};func (_gdfb stops )Less (i ,j int )bool {return _gdfb [i ]._cefb < _gdfb [j ]._cefb };func _ddb (_dba ,_cda ,_ef ,_dga ,_dff ,_dea ,_cf ,_gef float64 )[]_dd .Point {_ebg :=(_c .Hypot (_ef -_dba ,_dga -_cda )+_c .Hypot (_dff -_ef ,_dea -_dga )+_c .Hypot (_cf -_dff ,_gef -_dea ));
_dc :=int (_ebg +0.5);if _dc < 4{_dc =4;};_dbg :=float64 (_dc )-1;_cgc :=make ([]_dd .Point ,_dc );for _fb :=0;_fb < _dc ;_fb ++{_edb :=float64 (_fb )/_dbg ;_cff ,_gb :=_bbe (_dba ,_cda ,_ef ,_dga ,_dff ,_dea ,_cf ,_gef ,_edb );_cgc [_fb ]=_dd .NewPoint (_cff ,_gb );
};return _cgc ;};func _dfc (_efee ,_fdad ,_efd ,_ceb ,_ffgc ,_afbc float64 )_ee .Gradient {_acag :=circle {_efee ,_fdad ,_efd };_bgcf :=circle {_ceb ,_ffgc ,_afbc };_edff :=circle {_ceb -_efee ,_ffgc -_fdad ,_afbc -_efd };_gfc :=_edbf (_edff ._ddd ,_edff ._edeg ,-_edff ._caa ,_edff ._ddd ,_edff ._edeg ,_edff ._caa );
var _dfa float64 ;if _gfc !=0{_dfa =1.0/_gfc ;};_cebe :=-_acag ._caa ;_cfg :=&radialGradient {_febb :_acag ,_fgd :_bgcf ,_dee :_edff ,_dgb :_gfc ,_afcd :_dfa ,_gcg :_cebe };return _cfg ;};func NewContextForImage (im _g .Image )*Context {return NewContextForRGBA (_becgc (im ))};
func (_ace *surfacePattern )ColorAt (x ,y int )_ac .Color {_acad :=_ace ._fdf .Bounds ();switch _ace ._adbe {case _fccg :if y >=_acad .Dy (){return _ac .Transparent ;};case _adba :if x >=_acad .Dx (){return _ac .Transparent ;};case _ebgg :if x >=_acad .Dx ()||y >=_acad .Dy (){return _ac .Transparent ;
};};x =x %_acad .Dx ()+_acad .Min .X ;y =y %_acad .Dy ()+_acad .Min .Y ;return _ace ._fdf .At (x ,y );};func (_edd *Context )Height ()int {return _edd ._gbd };func (_fg *Context )Width ()int {return _fg ._egb };func (_eedc *radialGradient )AddColorStop (offset float64 ,color _ac .Color ){_eedc ._eecg =append (_eedc ._eecg ,stop {_cefb :offset ,_beeb :color });
_ag .Sort (_eedc ._eecg );};type stops []stop ;func (_eae *Context )StrokePattern ()_ee .Pattern {return _eae ._ede };func _cg (_aa ,_f ,_dg ,_de ,_bb ,_eed float64 )[]_dd .Point {_agad :=(_c .Hypot (_dg -_aa ,_de -_f )+_c .Hypot (_bb -_dg ,_eed -_de ));
_bf :=int (_agad +0.5);if _bf < 4{_bf =4;};_adb :=float64 (_bf )-1;_ce :=make ([]_dd .Point ,_bf );for _edf :=0;_edf < _bf ;_edf ++{_ccb :=float64 (_edf )/_adb ;_ge ,_ea :=_acd (_aa ,_f ,_dg ,_de ,_bb ,_eed ,_ccb );_ce [_edf ]=_dd .NewPoint (_ge ,_ea );
};return _ce ;};func (_fag *Context )Translate (x ,y float64 ){_fag ._cbg =_fag ._cbg .Translate (x ,y )};type Context struct{_egb int ;_gbd int ;_bfd *_agac .Rasterizer ;_ggg *_g .RGBA ;_ec *_g .Alpha ;_bee _ac .Color ;_fbc _ee .Pattern ;_ede _ee .Pattern ;
_dge _agac .Path ;_cac _agac .Path ;_deb _dd .Point ;_dbgg _dd .Point ;_cef bool ;_cgggc []float64 ;_edbe float64 ;_aad float64 ;_aag _ee .LineCap ;_gfe _ee .LineJoin ;_gefa _ee .FillRule ;_cbg _dd .Matrix ;_eba _ee .TextState ;_ege []*Context ;};func (_ffc *Context )SetFillStyle (pattern _ee .Pattern ){if _fd ,_egf :=pattern .(*solidPattern );
_egf {_ffc ._bee =_fd ._cbfb ;};_ffc ._fbc =pattern ;};func (_bcf *Context )LineTo (x ,y float64 ){if !_bcf ._cef {_bcf .MoveTo (x ,y );}else {x ,y =_bcf .Transform (x ,y );_gac :=_dd .NewPoint (x ,y );_adc :=_aede (_gac );_bcf ._dge .Add1 (_adc );_bcf ._cac .Add1 (_adc );
_bcf ._dbgg =_gac ;};};func (_gbg *Context )Push (){_bce :=*_gbg ;_gbg ._ege =append (_gbg ._ege ,&_bce )};func _gbca (_dfed float64 )_df .Int26_6 {return _df .Int26_6 (_dfed *64)};func (_edee *Context )ShearAbout (sx ,sy ,x ,y float64 ){_edee .Translate (x ,y );
_edee .Shear (sx ,sy );_edee .Translate (-x ,-y );};func (_gff *Context )SetDash (dashes ...float64 ){_gff ._cgggc =dashes };func _defd (_cde _ac .Color )_ee .Pattern {return &solidPattern {_cbfb :_cde }};type repeatOp int ;func (_bgb *Context )StrokePreserve (){var _edg _agac .Painter ;
if _bgb ._ec ==nil {if _beec ,_abc :=_bgb ._ede .(*solidPattern );_abc {_cbdgg :=_agac .NewRGBAPainter (_bgb ._ggg );_cbdgg .SetColor (_beec ._cbfb );_edg =_cbdgg ;};};if _edg ==nil {_edg =_baa (_bgb ._ggg ,_bgb ._ec ,_bgb ._ede );};_bgb .stroke (_edg );
};func (_ccf *Context )NewSubPath (){if _ccf ._cef {_ccf ._cac .Add1 (_aede (_ccf ._deb ));};_ccf ._cef =false ;};func (_eab *Context )SetRGB255 (r ,g ,b int ){_eab .SetRGBA255 (r ,g ,b ,255)};func (_adec *Context )InvertMask (){if _adec ._ec ==nil {_adec ._ec =_g .NewAlpha (_adec ._ggg .Bounds ());
}else {for _abb ,_edbd :=range _adec ._ec .Pix {_adec ._ec .Pix [_abb ]=255-_edbd ;};};};func _edbf (_fce ,_fda ,_ffef ,_gbgd ,_cdc ,_ecg float64 )float64 {return _fce *_gbgd +_fda *_cdc +_ffef *_ecg ;};func (_eaed *Context )Transform (x ,y float64 )(_edc ,_fgb float64 ){return _eaed ._cbg .Transform (x ,y )};
func (_dfea *Context )Pop (){_cge :=*_dfea ;_becg :=_dfea ._ege ;_ffa :=_becg [len (_becg )-1];*_dfea =*_ffa ;_dfea ._dge =_cge ._dge ;_dfea ._cac =_cge ._cac ;_dfea ._deb =_cge ._deb ;_dfea ._dbgg =_cge ._dbgg ;_dfea ._cef =_cge ._cef ;};func _acd (_acdd ,_gf ,_ga ,_eb ,_ad ,_db ,_b float64 )(_dae ,_cd float64 ){_bg :=1-_b ;
_aee :=_bg *_bg ;_gg :=2*_bg *_b ;_age :=_b *_b ;_dae =_aee *_acdd +_gg *_ga +_age *_ad ;_cd =_aee *_gf +_gg *_eb +_age *_db ;return ;};func _ffed (_bcef string )(_dfgf ,_eeg ,_ffd ,_dcgg int ){_bcef =_a .TrimPrefix (_bcef ,"\u0023");_dcgg =255;if len (_bcef )==3{_cdbg :="\u00251\u0078\u0025\u0031\u0078\u0025\u0031x";
_e .Sscanf (_bcef ,_cdbg ,&_dfgf ,&_eeg ,&_ffd );_dfgf |=_dfgf <<4;_eeg |=_eeg <<4;_ffd |=_ffd <<4;};if len (_bcef )==6{_bfgb :="\u0025\u0030\u0032x\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";_e .Sscanf (_bcef ,_bfgb ,&_dfgf ,&_eeg ,&_ffd );};if len (_bcef )==8{_gcc :="\u0025\u00302\u0078\u0025\u00302\u0078\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";
_e .Sscanf (_bcef ,_gcc ,&_dfgf ,&_eeg ,&_ffd ,&_dcgg );};return ;};func (_eac *Context )SetStrokeStyle (pattern _ee .Pattern ){_eac ._ede =pattern };const (_eggd repeatOp =iota ;_fccg ;_adba ;_ebgg ;);func (_gdfg stops )Len ()int {return len (_gdfg )};
func (_eacg *Context )SetFillRGBA (r ,g ,b ,a float64 ){_agc :=_ac .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_eacg ._bee =_agc ;_eacg ._fbc =_defd (_agc );};func _afg (_fagg _agac .Path ,_abce []float64 ,_beba float64 )_agac .Path {return _ccd (_abd (_aeag (_fagg ),_abce ,_beba ));
};func (_feg *Context )Matrix ()_dd .Matrix {return _feg ._cbg };func (_cgcf *Context )Rotate (angle float64 ){_cgcf ._cbg =_cgcf ._cbg .Rotate (angle )};func (_bda *Context )SetColor (c _ac .Color ){_bda .setFillAndStrokeColor (c )};func (_ccg *Context )SetRGBA255 (r ,g ,b ,a int ){_ccg ._bee =_ac .NRGBA {uint8 (r ),uint8 (g ),uint8 (b ),uint8 (a )};
_ccg .setFillAndStrokeColor (_ccg ._bee );};func (_aagd *Context )DrawRoundedRectangle (x ,y ,w ,h ,r float64 ){_bcb ,_dag ,_dgce ,_cefd :=x ,x +r ,x +w -r ,x +w ;_gbdf ,_cea ,_fac ,_bfdg :=y ,y +r ,y +h -r ,y +h ;_aagd .NewSubPath ();_aagd .MoveTo (_dag ,_gbdf );
_aagd .LineTo (_dgce ,_gbdf );_aagd .DrawArc (_dgce ,_cea ,r ,_faga (270),_faga (360));_aagd .LineTo (_cefd ,_fac );_aagd .DrawArc (_dgce ,_fac ,r ,_faga (0),_faga (90));_aagd .LineTo (_dag ,_bfdg );_aagd .DrawArc (_dag ,_fac ,r ,_faga (90),_faga (180));
_aagd .LineTo (_bcb ,_cea );_aagd .DrawArc (_dag ,_cea ,r ,_faga (180),_faga (270));_aagd .ClosePath ();};func (_aba *Context )DrawLine (x1 ,y1 ,x2 ,y2 float64 ){_aba .MoveTo (x1 ,y1 );_aba .LineTo (x2 ,y2 )};func (_dad *radialGradient )ColorAt (x ,y int )_ac .Color {if len (_dad ._eecg )==0{return _ac .Transparent ;
};_ffcg ,_edgc :=float64 (x )+0.5-_dad ._febb ._ddd ,float64 (y )+0.5-_dad ._febb ._edeg ;_ecd :=_edbf (_ffcg ,_edgc ,_dad ._febb ._caa ,_dad ._dee ._ddd ,_dad ._dee ._edeg ,_dad ._dee ._caa );_bea :=_edbf (_ffcg ,_edgc ,-_dad ._febb ._caa ,_ffcg ,_edgc ,_dad ._febb ._caa );
if _dad ._dgb ==0{if _ecd ==0{return _ac .Transparent ;};_dbc :=0.5*_bea /_ecd ;if _dbc *_dad ._dee ._caa >=_dad ._gcg {return _egfe (_dbc ,_dad ._eecg );};return _ac .Transparent ;};_caef :=_edbf (_ecd ,_dad ._dgb ,0,_ecd ,-_bea ,0);if _caef >=0{_fdd :=_c .Sqrt (_caef );
_agd :=(_ecd +_fdd )*_dad ._afcd ;_dbaf :=(_ecd -_fdd )*_dad ._afcd ;if _agd *_dad ._dee ._caa >=_dad ._gcg {return _egfe (_agd ,_dad ._eecg );}else if _dbaf *_dad ._dee ._caa >=_dad ._gcg {return _egfe (_dbaf ,_dad ._eecg );};};return _ac .Transparent ;
};func _becgc (_cebeg _g .Image )*_g .RGBA {_gabf :=_cebeg .Bounds ();_dfeg :=_g .NewRGBA (_gabf );_cc .Draw (_dfeg ,_gabf ,_cebeg ,_gabf .Min ,_cc .Src );return _dfeg ;};type linearGradient struct{_agg ,_eeb ,_afd ,_gdd float64 ;_afa stops ;};func (_ebge *Context )ClosePath (){if _ebge ._cef {_ebf :=_aede (_ebge ._deb );
_ebge ._dge .Add1 (_ebf );_ebge ._cac .Add1 (_ebf );_ebge ._dbgg =_ebge ._deb ;};};type patternPainter struct{_cggcb *_g .RGBA ;_cdf *_g .Alpha ;_bdde _ee .Pattern ;};func (_gaf *Context )Clip (){_gaf .ClipPreserve ();_gaf .ClearPath ()};func (_bca *Context )ClipPreserve (){_gdf :=_g .NewAlpha (_g .Rect (0,0,_bca ._egb ,_bca ._gbd ));
_ceg :=_agac .NewAlphaOverPainter (_gdf );_bca .fill (_ceg );if _bca ._ec ==nil {_bca ._ec =_gdf ;}else {_dgcg :=_g .NewAlpha (_g .Rect (0,0,_bca ._egb ,_bca ._gbd ));_da .DrawMask (_dgcg ,_dgcg .Bounds (),_gdf ,_g .Point {},_bca ._ec ,_g .Point {},_da .Over );
_bca ._ec =_dgcg ;};};func (_ecf *Context )Fill (){_ecf .FillPreserve ();_ecf .ClearPath ()};var (_be =_defd (_ac .White );_cggg =_defd (_ac .Black ););func (_ffeg *Context )ScaleAbout (sx ,sy ,x ,y float64 ){_ffeg .Translate (x ,y );_ffeg .Scale (sx ,sy );
_ffeg .Translate (-x ,-y );};func _dbaa (_beee ,_beea ,_eaf ,_fge float64 )_ee .Gradient {_egg :=&linearGradient {_agg :_beee ,_eeb :_beea ,_afd :_eaf ,_gdd :_fge };return _egg ;};func (_ebgf *Context )Identity (){_ebgf ._cbg =_dd .IdentityMatrix ()};func (_aade *Context )DrawString (s string ,face _af .Face ,x ,y float64 ){_aade .DrawStringAnchored (s ,face ,x ,y ,0,0);
};func (_faa *Context )MeasureString (s string ,face _af .Face )(_bfde ,_gebb float64 ){_ddcg :=&_af .Drawer {Face :face };_bfc :=_ddcg .MeasureString (s );return float64 (_bfc >>6),_faa ._eba .Tf .Size ;};func (_fgf *Context )DrawStringAnchored (s string ,face _af .Face ,x ,y ,ax ,ay float64 ){_cffa ,_dgf :=_fgf .MeasureString (s ,face );
_fgf .drawString (s ,face ,x -ax *_cffa ,y +ay *_dgf );};func (_ada *Context )SetHexColor (x string ){_ged ,_fgc ,_gfb ,_bc :=_ffed (x );_ada .SetRGBA255 (_ged ,_fgc ,_gfb ,_bc );};func (_gefab *Context )drawRegularPolygon (_bgc int ,_baeg ,_ccge ,_fbb ,_dgcb float64 ){_fad :=2*_c .Pi /float64 (_bgc );
_dgcb -=_c .Pi /2;if _bgc %2==0{_dgcb +=_fad /2;};_gefab .NewSubPath ();for _fbf :=0;_fbf < _bgc ;_fbf ++{_dda :=_dgcb +_fad *float64 (_fbf );_gefab .LineTo (_baeg +_fbb *_c .Cos (_dda ),_ccge +_fbb *_c .Sin (_dda ));};_gefab .ClosePath ();};func (_efb *Context )SetStrokeRGBA (r ,g ,b ,a float64 ){_dgg :=_ac .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};
_efb ._ede =_defd (_dgg );};