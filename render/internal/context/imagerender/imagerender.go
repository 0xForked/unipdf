//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package imagerender ;import (_cd "errors";_f "fmt";_bf "github.com/golang/freetype/raster";_g "github.com/unidoc/unipdf/v3/common";_df "github.com/unidoc/unipdf/v3/internal/transform";_gg "github.com/unidoc/unipdf/v3/render/internal/context";_fc "golang.org/x/image/draw";
_ba "golang.org/x/image/font";_bd "golang.org/x/image/math/f64";_dg "golang.org/x/image/math/fixed";_d "image";_ec "image/color";_a "image/draw";_b "math";_fd "sort";_c "strings";);func (_gdfg *Context )QuadraticTo (x1 ,y1 ,x2 ,y2 float64 ){if !_gdfg ._fcg {_gdfg .MoveTo (x1 ,y1 );
};x1 ,y1 =_gdfg .Transform (x1 ,y1 );x2 ,y2 =_gdfg .Transform (x2 ,y2 );_gbff :=_df .NewPoint (x1 ,y1 );_dgae :=_df .NewPoint (x2 ,y2 );_ceg :=_ddbc (_gbff );_ffca :=_ddbc (_dgae );_gdfg ._cdg .Add2 (_ceg ,_ffca );_gdfg ._ega .Add2 (_ceg ,_ffca );_gdfg ._cda =_dgae ;
};func (_ead *Context )ResetClip (){_ead ._bfd =nil };func (_abe *Context )LineTo (x ,y float64 ){if !_abe ._fcg {_abe .MoveTo (x ,y );}else {x ,y =_abe .Transform (x ,y );_adg :=_df .NewPoint (x ,y );_gaa :=_ddbc (_adg );_abe ._cdg .Add1 (_gaa );_abe ._ega .Add1 (_gaa );
_abe ._cda =_adg ;};};func (_gba *Context )DrawCircle (x ,y ,r float64 ){_gba .NewSubPath ();_gba .DrawEllipticalArc (x ,y ,r ,r ,0,2*_b .Pi );_gba .ClosePath ();};func (_fbg *Context )Fill (){_fbg .FillPreserve ();_fbg .ClearPath ()};func _gdbd (_dbb [][]_df .Point ,_egac []float64 ,_cagg float64 )[][]_df .Point {var _degg [][]_df .Point ;
if len (_egac )==0{return _dbb ;};if len (_egac )==1{_egac =append (_egac ,_egac [0]);};for _ ,_gfeb :=range _dbb {if len (_gfeb )< 2{continue ;};_fbdg :=_gfeb [0];_bdf :=1;_cbc :=0;_ggeb :=0.0;if _cagg !=0{var _bdcd float64 ;for _ ,_gfb :=range _egac {_bdcd +=_gfb ;
};_cagg =_b .Mod (_cagg ,_bdcd );if _cagg < 0{_cagg +=_bdcd ;};for _fge ,_eded :=range _egac {_cagg -=_eded ;if _cagg < 0{_cbc =_fge ;_ggeb =_eded +_cagg ;break ;};};};var _cdfbf []_df .Point ;_cdfbf =append (_cdfbf ,_fbdg );for _bdf < len (_gfeb ){_fgbb :=_egac [_cbc ];
_cgac :=_gfeb [_bdf ];_cbca :=_fbdg .Distance (_cgac );_dccb :=_fgbb -_ggeb ;if _cbca > _dccb {_acdc :=_dccb /_cbca ;_eafb :=_fbdg .Interpolate (_cgac ,_acdc );_cdfbf =append (_cdfbf ,_eafb );if _cbc %2==0&&len (_cdfbf )> 1{_degg =append (_degg ,_cdfbf );
};_cdfbf =nil ;_cdfbf =append (_cdfbf ,_eafb );_ggeb =0;_fbdg =_eafb ;_cbc =(_cbc +1)%len (_egac );}else {_cdfbf =append (_cdfbf ,_cgac );_fbdg =_cgac ;_ggeb +=_cbca ;_bdf ++;};};if _cbc %2==0&&len (_cdfbf )> 1{_degg =append (_degg ,_cdfbf );};};return _degg ;
};func (_acf *Context )SetLineCap (lineCap _gg .LineCap ){_acf ._bgc =lineCap };func _ac (_feb ,_gbf ,_feg ,_dag ,_dff ,_cg ,_ggf ,_dfa float64 )[]_df .Point {_dcc :=(_b .Hypot (_feg -_feb ,_dag -_gbf )+_b .Hypot (_dff -_feg ,_cg -_dag )+_b .Hypot (_ggf -_dff ,_dfa -_cg ));
_bdd :=int (_dcc +0.5);if _bdd < 4{_bdd =4;};_fcb :=float64 (_bdd )-1;_gd :=make ([]_df .Point ,_bdd );for _af :=0;_af < _bdd ;_af ++{_cebe :=float64 (_af )/_fcb ;_acb ,_bfe :=_cdf (_feb ,_gbf ,_feg ,_dag ,_dff ,_cg ,_ggf ,_dfa ,_cebe );_gd [_af ]=_df .NewPoint (_acb ,_bfe );
};return _gd ;};func (_efb *Context )ClearPath (){_efb ._cdg .Clear ();_efb ._ega .Clear ();_efb ._fcg =false };func (_ddf *Context )SetColor (c _ec .Color ){_ddf .setFillAndStrokeColor (c )};func _ddfg (_gdd [][]_df .Point )_bf .Path {var _abad _bf .Path ;
for _ ,_bgg :=range _gdd {var _ffd _dg .Point26_6 ;for _aggg ,_feba :=range _bgg {_ebda :=_ddbc (_feba );if _aggg ==0{_abad .Start (_ebda );}else {_eabd :=_ebda .X -_ffd .X ;_cfa :=_ebda .Y -_ffd .Y ;if _eabd < 0{_eabd =-_eabd ;};if _cfa < 0{_cfa =-_cfa ;
};if _eabd +_cfa > 8{_abad .Add1 (_ebda );};};_ffd =_ebda ;};};return _abad ;};func (_ccae *Context )SetMask (mask *_d .Alpha )error {if mask .Bounds ().Size ()!=_ccae ._ga .Bounds ().Size (){return _cd .New ("\u006d\u0061\u0073\u006b\u0020\u0073i\u007a\u0065\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068 \u0063\u006f\u006e\u0074\u0065\u0078\u0074 \u0073\u0069\u007a\u0065");
};_ccae ._bfd =mask ;return nil ;};func _cdf (_ee ,_fbf ,_cca ,_ea ,_adb ,_gce ,_dc ,_ae ,_ede float64 )(_fa ,_fag float64 ){_dgb :=1-_ede ;_bbc :=_dgb *_dgb *_dgb ;_bbg :=3*_dgb *_dgb *_ede ;_ff :=3*_dgb *_ede *_ede ;_dgg :=_ede *_ede *_ede ;_fa =_bbc *_ee +_bbg *_cca +_ff *_adb +_dgg *_dc ;
_fag =_bbc *_fbf +_bbg *_ea +_ff *_gce +_dgg *_ae ;return ;};func (_bdce *Context )Translate (x ,y float64 ){_bdce ._gfa =_bdce ._gfa .Translate (x ,y )};func _fff (_dedb _dg .Int26_6 )float64 {const _edc ,_cbga =6,1<<6-1;if _dedb >=0{return float64 (_dedb >>_edc )+float64 (_dedb &_cbga )/64;
};_dedb =-_dedb ;if _dedb >=0{return -(float64 (_dedb >>_edc )+float64 (_dedb &_cbga )/64);};return 0;};func (_dgga *Context )RotateAbout (angle ,x ,y float64 ){_dgga .Translate (x ,y );_dgga .Rotate (angle );_dgga .Translate (-x ,-y );};type patternPainter struct{_dgad *_d .RGBA ;
_fba *_d .Alpha ;_eede _gg .Pattern ;};func (_gbg *Context )NewSubPath (){if _gbg ._fcg {_gbg ._ega .Add1 (_ddbc (_gbg ._ccf ));};_gbg ._fcg =false ;};func (_acgb *Context )DrawImageAnchored (im _d .Image ,x ,y int ,ax ,ay float64 ){_gbffe :=im .Bounds ().Size ();
x -=int (ax *float64 (_gbffe .X ));y -=int (ay *float64 (_gbffe .Y ));_bacb :=_fc .BiLinear ;_eec :=_acgb ._gfa .Clone ().Translate (float64 (x ),float64 (y ));_cgdf :=_bd .Aff3 {_eec [0],_eec [3],_eec [6],_eec [1],_eec [4],_eec [7]};if _acgb ._bfd ==nil {_bacb .Transform (_acgb ._ga ,_cgdf ,im ,im .Bounds (),_fc .Over ,nil );
}else {_bacb .Transform (_acgb ._ga ,_cgdf ,im ,im .Bounds (),_fc .Over ,&_fc .Options {DstMask :_acgb ._bfd ,DstMaskP :_d .Point {}});};};func (_gbag *Context )Pop (){_bbf :=*_gbag ;_cegg :=_gbag ._age ;_dea :=_cegg [len (_cegg )-1];*_gbag =*_dea ;_gbag ._cdg =_bbf ._cdg ;
_gbag ._ega =_bbf ._ega ;_gbag ._ccf =_bbf ._ccf ;_gbag ._cda =_bbf ._cda ;_gbag ._fcg =_bbf ._fcg ;};func (_afb *Context )ClipPreserve (){_add :=_d .NewAlpha (_d .Rect (0,0,_afb ._dae ,_afb ._bg ));_dcg :=_bf .NewAlphaOverPainter (_add );_afb .fill (_dcg );
if _afb ._bfd ==nil {_afb ._bfd =_add ;}else {_dbf :=_d .NewAlpha (_d .Rect (0,0,_afb ._dae ,_afb ._bg ));_fc .DrawMask (_dbf ,_dbf .Bounds (),_add ,_d .Point {},_afb ._bfd ,_d .Point {},_fc .Over );_afb ._bfd =_dbf ;};};func (_fea *Context )SetRGB (r ,g ,b float64 ){_fea .SetRGBA (r ,g ,b ,1)};
func (_aec *Context )ClosePath (){if _aec ._fcg {_fcgd :=_ddbc (_aec ._ccf );_aec ._cdg .Add1 (_fcgd );_aec ._ega .Add1 (_fcgd );_aec ._cda =_aec ._ccf ;};};func _edbe (_bbe float64 )float64 {return _bbe *_b .Pi /180};func (_edf *Context )drawRegularPolygon (_aeb int ,_bbb ,_afc ,_gcfc ,_gca float64 ){_gdgd :=2*_b .Pi /float64 (_aeb );
_gca -=_b .Pi /2;if _aeb %2==0{_gca +=_gdgd /2;};_edf .NewSubPath ();for _gbc :=0;_gbc < _aeb ;_gbc ++{_aaf :=_gca +_gdgd *float64 (_gbc );_edf .LineTo (_bbb +_gcfc *_b .Cos (_aaf ),_afc +_gcfc *_b .Sin (_aaf ));};_edf .ClosePath ();};func (_ebf *Context )SetDashOffset (offset float64 ){_ebf ._gf =offset };
func (_gdfed stops )Less (i ,j int )bool {return _gdfed [i ]._aeac < _gdfed [j ]._aeac };func (_acgd *Context )InvertMask (){if _acgd ._bfd ==nil {_acgd ._bfd =_d .NewAlpha (_acgd ._ga .Bounds ());}else {for _geg ,_bac :=range _acgd ._bfd .Pix {_acgd ._bfd .Pix [_geg ]=255-_bac ;
};};};func (_dfgbc stops )Len ()int {return len (_dfgbc )};func (_bdg *Context )AsMask ()*_d .Alpha {_fdg :=_d .NewAlpha (_bdg ._ga .Bounds ());_fc .Draw (_fdg ,_bdg ._ga .Bounds (),_bdg ._ga ,_d .Point {},_fc .Src );return _fdg ;};func (_agc *Context )SetDash (dashes ...float64 ){_agc ._bfb =dashes };
func (_efbg *Context )DrawRectangle (x ,y ,w ,h float64 ){_efbg .NewSubPath ();_efbg .MoveTo (x ,y );_efbg .LineTo (x +w ,y );_efbg .LineTo (x +w ,y +h );_efbg .LineTo (x ,y +h );_efbg .ClosePath ();};func _ddbc (_gff _df .Point )_dg .Point26_6 {return _dg .Point26_6 {X :_dfd (_gff .X ),Y :_dfd (_gff .Y )}};
func _cba (_bga ,_egb ,_gbaa ,_bfeb float64 )_gg .Gradient {_gda :=&linearGradient {_gfce :_bga ,_ddag :_egb ,_ade :_gbaa ,_aggbg :_bfeb };return _gda ;};func (_dec *Context )MoveTo (x ,y float64 ){if _dec ._fcg {_dec ._ega .Add1 (_ddbc (_dec ._ccf ));
};x ,y =_dec .Transform (x ,y );_cebb :=_df .NewPoint (x ,y );_gbfg :=_ddbc (_cebb );_dec ._cdg .Start (_gbfg );_dec ._ega .Start (_gbfg );_dec ._ccf =_cebb ;_dec ._cda =_cebb ;_dec ._fcg =true ;};func _cbfb (_bege _bf .Path )[][]_df .Point {var _efa [][]_df .Point ;
var _bfcf []_df .Point ;var _egcdf ,_efdb float64 ;for _aad :=0;_aad < len (_bege );{switch _bege [_aad ]{case 0:if len (_bfcf )> 0{_efa =append (_efa ,_bfcf );_bfcf =nil ;};_fgg :=_fff (_bege [_aad +1]);_edfb :=_fff (_bege [_aad +2]);_bfcf =append (_bfcf ,_df .NewPoint (_fgg ,_edfb ));
_egcdf ,_efdb =_fgg ,_edfb ;_aad +=4;case 1:_gdff :=_fff (_bege [_aad +1]);_abae :=_fff (_bege [_aad +2]);_bfcf =append (_bfcf ,_df .NewPoint (_gdff ,_abae ));_egcdf ,_efdb =_gdff ,_abae ;_aad +=4;case 2:_ebde :=_fff (_bege [_aad +1]);_bccd :=_fff (_bege [_aad +2]);
_egag :=_fff (_bege [_aad +3]);_cae :=_fff (_bege [_aad +4]);_acbf :=_ed (_egcdf ,_efdb ,_ebde ,_bccd ,_egag ,_cae );_bfcf =append (_bfcf ,_acbf ...);_egcdf ,_efdb =_egag ,_cae ;_aad +=6;case 3:_acfe :=_fff (_bege [_aad +1]);_abb :=_fff (_bege [_aad +2]);
_deg :=_fff (_bege [_aad +3]);_efec :=_fff (_bege [_aad +4]);_adgc :=_fff (_bege [_aad +5]);_bfea :=_fff (_bege [_aad +6]);_gfe :=_ac (_egcdf ,_efdb ,_acfe ,_abb ,_deg ,_efec ,_adgc ,_bfea );_bfcf =append (_bfcf ,_gfe ...);_egcdf ,_efdb =_adgc ,_bfea ;
_aad +=8;default:_g .Log .Debug ("\u0057\u0041\u0052\u004e: \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0070\u0061\u0074\u0068\u003a\u0020%\u0076",_bege );return _efa ;};};if len (_bfcf )> 0{_efa =append (_efa ,_bfcf );};return _efa ;};func (_bdc *Context )drawString (_ecd string ,_cbgc _ba .Face ,_fec ,_eca float64 ){_fefd :=&_ba .Drawer {Src :_d .NewUniform (_bdc ._gdf ),Face :_cbgc ,Dot :_ddbc (_df .NewPoint (_fec ,_eca ))};
_gcab :=rune (-1);for _ ,_fee :=range _ecd {if _gcab >=0{_fefd .Dot .X +=_fefd .Face .Kern (_gcab ,_fee );};_dbd ,_gad ,_fabf ,_acbc ,_dda :=_fefd .Face .Glyph (_fefd .Dot ,_fee );if !_dda {continue ;};_bdb :=_dbd .Sub (_dbd .Min );_dfge :=_d .NewRGBA (_bdb );
_fc .DrawMask (_dfge ,_bdb ,_fefd .Src ,_d .Point {},_gad ,_fabf ,_fc .Over );var _fagg *_fc .Options ;if _bdc ._bfd !=nil {_fagg =&_fc .Options {DstMask :_bdc ._bfd ,DstMaskP :_d .Point {}};};_dfc :=_bdc ._gfa .Clone ().Translate (float64 (_dbd .Min .X ),float64 (_dbd .Min .Y ));
_aga :=_bd .Aff3 {_dfc [0],_dfc [3],_dfc [6],_dfc [1],_dfc [4],_dfc [7]};_fc .BiLinear .Transform (_bdc ._ga ,_aga ,_dfge ,_bdb ,_fc .Over ,_fagg );_fefd .Dot .X +=_acbc ;_gcab =_fee ;};};func NewContextForImage (im _d .Image )*Context {return NewContextForRGBA (_eae (im ))};
func (_ebfa *Context )joiner ()_bf .Joiner {switch _ebfa ._fad {case _gg .LineJoinBevel :return _bf .BevelJoiner ;case _gg .LineJoinRound :return _bf .RoundJoiner ;};return nil ;};func (_dage *Context )SetRGBA (r ,g ,b ,a float64 ){_dage ._gdf =_ec .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};
_dage .setFillAndStrokeColor (_dage ._gdf );};func _cfg (_fdbb ,_afg uint32 ,_dcgd float64 )uint8 {return uint8 (int32 (float64 (_fdbb )*(1.0-_dcgd )+float64 (_afg )*_dcgd )>>8);};func (_bdcc *Context )DrawString (s string ,face _ba .Face ,x ,y float64 ){_bdcc .DrawStringAnchored (s ,face ,x ,y ,0,0);
};func (_beaf *Context )SetHexColor (x string ){_dcb ,_febc ,_bec ,_gbe :=_ecad (x );_beaf .SetRGBA255 (_dcb ,_febc ,_bec ,_gbe );};func (_bba *Context )stroke (_cefa _bf .Painter ){_ebfe :=_bba ._cdg ;if len (_bba ._bfb )> 0{_ebfe =_caec (_ebfe ,_bba ._bfb ,_bba ._gf );
}else {_ebfe =_ddfg (_cbfb (_ebfe ));};_gcg :=_bba ._dfgc ;_gcg .UseNonZeroWinding =true ;_gcg .Clear ();_fbe :=(_bba ._gfa .ScalingFactorX ()+_bba ._gfa .ScalingFactorY ())/2;_gcg .AddStroke (_ebfe ,_dfd (_bba ._ef *_fbe ),_bba .capper (),_bba .joiner ());
_gcg .Rasterize (_cefa );};func (_bgb *Context )MeasureString (s string ,face _ba .Face )(_abd ,_fbd float64 ){_bde :=&_ba .Drawer {Face :face };_aba :=_bde .MeasureString (s );return float64 (_aba >>6),_bgb ._dga .Tf .Size ;};func _dfd (_ebdb float64 )_dg .Int26_6 {return _dg .Int26_6 (_ebdb *64)};
type stop struct{_aeac float64 ;_aaa _ec .Color ;};func (_aeg *Context )setFillAndStrokeColor (_gdg _ec .Color ){_aeg ._gdf =_gdg ;_aeg ._cb =_efdc (_gdg );_aeg ._db =_efdc (_gdg );};func (_eac *Context )DrawEllipticalArc (x ,y ,rx ,ry ,angle1 ,angle2 float64 ){const _cag =16;
for _acd :=0;_acd < _cag ;_acd ++{_ebd :=float64 (_acd +0)/_cag ;_gdfe :=float64 (_acd +1)/_cag ;_ebc :=angle1 +(angle2 -angle1 )*_ebd ;_cga :=angle1 +(angle2 -angle1 )*_gdfe ;_eed :=x +rx *_b .Cos (_ebc );_gge :=y +ry *_b .Sin (_ebc );_bdgf :=x +rx *_b .Cos ((_ebc +_cga )/2);
_aag :=y +ry *_b .Sin ((_ebc +_cga )/2);_dfef :=x +rx *_b .Cos (_cga );_egc :=y +ry *_b .Sin (_cga );_fcbb :=2*_bdgf -_eed /2-_dfef /2;_aca :=2*_aag -_gge /2-_egc /2;if _acd ==0{if _eac ._fcg {_eac .LineTo (_eed ,_gge );}else {_eac .MoveTo (_eed ,_gge );
};};_eac .QuadraticTo (_fcbb ,_aca ,_dfef ,_egc );};};func (_ebb *Context )SetFillStyle (pattern _gg .Pattern ){if _bge ,_gfc :=pattern .(*solidPattern );_gfc {_ebb ._gdf =_bge ._geb ;};_ebb ._cb =pattern ;};func (_eff *Context )Scale (x ,y float64 ){_eff ._gfa =_eff ._gfa .Scale (x ,y )};
type repeatOp int ;func (_ffcg *Context )SetFillRGBA (r ,g ,b ,a float64 ){_gbd :=_ec .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_ffcg ._gdf =_gbd ;_ffcg ._cb =_efdc (_gbd );};func _egca (_aagg ,_addf ,_cgcg ,_fcd ,_gbad ,_ddac float64 )float64 {return _aagg *_fcd +_addf *_gbad +_cgcg *_ddac ;
};func (_cfc *Context )Clear (){_cgd :=_d .NewUniform (_cfc ._gdf );_fc .Draw (_cfc ._ga ,_cfc ._ga .Bounds (),_cgd ,_d .Point {},_fc .Src );};func _fgbe (_fggc _d .Image ,_dgc repeatOp )_gg .Pattern {return &surfacePattern {_cdce :_fggc ,_fcgg :_dgc };
};func NewContext (width ,height int )*Context {return NewContextForRGBA (_d .NewRGBA (_d .Rect (0,0,width ,height )));};func (_egaf *Context )Shear (x ,y float64 ){_egaf ._gfa .Shear (x ,y )};func (_eea *Context )SetLineWidth (lineWidth float64 ){_eea ._ef =lineWidth };
func _caec (_dcge _bf .Path ,_gcgf []float64 ,_ddfd float64 )_bf .Path {return _ddfg (_gdbd (_cbfb (_dcge ),_gcgf ,_ddfd ));};func (_cde *Context )ScaleAbout (sx ,sy ,x ,y float64 ){_cde .Translate (x ,y );_cde .Scale (sx ,sy );_cde .Translate (-x ,-y );
};type solidPattern struct{_geb _ec .Color };func (_ded *Context )SetRGB255 (r ,g ,b int ){_ded .SetRGBA255 (r ,g ,b ,255)};func (_eeef *Context )Stroke (){_eeef .StrokePreserve ();_eeef .ClearPath ()};var (_be =_efdc (_ec .White );_eab =_efdc (_ec .Black );
);func (_gea *radialGradient )AddColorStop (offset float64 ,color _ec .Color ){_gea ._dffc =append (_gea ._dffc ,stop {_aeac :offset ,_aaa :color });_fd .Sort (_gea ._dffc );};func (_gdfgg *Context )Rotate (angle float64 ){_gdfgg ._gfa =_gdfgg ._gfa .Rotate (angle )};
func (_cgb *Context )DrawRoundedRectangle (x ,y ,w ,h ,r float64 ){_eaf ,_ddb ,_bc ,_bcg :=x ,x +r ,x +w -r ,x +w ;_dfe ,_cdd ,_egf ,_cgc :=y ,y +r ,y +h -r ,y +h ;_cgb .NewSubPath ();_cgb .MoveTo (_ddb ,_dfe );_cgb .LineTo (_bc ,_dfe );_cgb .DrawArc (_bc ,_cdd ,r ,_edbe (270),_edbe (360));
_cgb .LineTo (_bcg ,_egf );_cgb .DrawArc (_bc ,_egf ,r ,_edbe (0),_edbe (90));_cgb .LineTo (_ddb ,_cgc );_cgb .DrawArc (_ddb ,_egf ,r ,_edbe (90),_edbe (180));_cgb .LineTo (_eaf ,_cdd );_cgb .DrawArc (_ddb ,_cdd ,r ,_edbe (180),_edbe (270));_cgb .ClosePath ();
};func (_caga *Context )DrawStringAnchored (s string ,face _ba .Face ,x ,y ,ax ,ay float64 ){_gaf ,_dede :=_caga .MeasureString (s ,face );_caga .drawString (s ,face ,x -ax *_gaf ,y +ay *_dede );};func (_eeeb *radialGradient )ColorAt (x ,y int )_ec .Color {if len (_eeeb ._dffc )==0{return _ec .Transparent ;
};_fde ,_gdb :=float64 (x )+0.5-_eeeb ._cege ._ecbf ,float64 (y )+0.5-_eeeb ._cege ._fgc ;_efde :=_egca (_fde ,_gdb ,_eeeb ._cege ._bgd ,_eeeb ._cfb ._ecbf ,_eeeb ._cfb ._fgc ,_eeeb ._cfb ._bgd );_gga :=_egca (_fde ,_gdb ,-_eeeb ._cege ._bgd ,_fde ,_gdb ,_eeeb ._cege ._bgd );
if _eeeb ._daga ==0{if _efde ==0{return _ec .Transparent ;};_egcd :=0.5*_gga /_efde ;if _egcd *_eeeb ._cfb ._bgd >=_eeeb ._aae {return _cdda (_egcd ,_eeeb ._dffc );};return _ec .Transparent ;};_gfg :=_egca (_efde ,_eeeb ._daga ,0,_efde ,-_gga ,0);if _gfg >=0{_cea :=_b .Sqrt (_gfg );
_agbf :=(_efde +_cea )*_eeeb ._eaa ;_ecf :=(_efde -_cea )*_eeeb ._eaa ;if _agbf *_eeeb ._cfb ._bgd >=_eeeb ._aae {return _cdda (_agbf ,_eeeb ._dffc );}else if _ecf *_eeeb ._cfb ._bgd >=_eeeb ._aae {return _cdda (_ecf ,_eeeb ._dffc );};};return _ec .Transparent ;
};func (_cbb *linearGradient )ColorAt (x ,y int )_ec .Color {if len (_cbb ._bfg )==0{return _ec .Transparent ;};_deb ,_bbgda :=float64 (x ),float64 (y );_gceg ,_badd ,_cfce ,_beab :=_cbb ._gfce ,_cbb ._ddag ,_cbb ._ade ,_cbb ._aggbg ;_acc ,_beg :=_cfce -_gceg ,_beab -_badd ;
if _beg ==0&&_acc !=0{return _cdda ((_deb -_gceg )/_acc ,_cbb ._bfg );};if _acc ==0&&_beg !=0{return _cdda ((_bbgda -_badd )/_beg ,_cbb ._bfg );};_fgb :=_acc *(_deb -_gceg )+_beg *(_bbgda -_badd );if _fgb < 0{return _cbb ._bfg [0]._aaa ;};_faf :=_b .Hypot (_acc ,_beg );
_dgd :=((_deb -_gceg )*-_beg +(_bbgda -_badd )*_acc )/(_faf *_faf );_fbb ,_bbac :=_gceg +_dgd *-_beg ,_badd +_dgd *_acc ;_cgbe :=_b .Hypot (_deb -_fbb ,_bbgda -_bbac )/_faf ;return _cdda (_cgbe ,_cbb ._bfg );};func (_efd *Context )fill (_gbde _bf .Painter ){_bae :=_efd ._ega ;
if _efd ._fcg {_bae =make (_bf .Path ,len (_efd ._ega ));copy (_bae ,_efd ._ega );_bae .Add1 (_ddbc (_efd ._ccf ));};_daeb :=_efd ._dfgc ;_daeb .UseNonZeroWinding =_efd ._gcb ==_gg .FillRuleWinding ;_daeb .Clear ();_daeb .AddPath (_bae );_daeb .Rasterize (_gbde );
};func _ecad (_bce string )(_bfdg ,_aada ,_bbd ,_eebc int ){_bce =_c .TrimPrefix (_bce ,"\u0023");_eebc =255;if len (_bce )==3{_eef :="\u00251\u0078\u0025\u0031\u0078\u0025\u0031x";_f .Sscanf (_bce ,_eef ,&_bfdg ,&_aada ,&_bbd );_bfdg |=_bfdg <<4;_aada |=_aada <<4;
_bbd |=_bbd <<4;};if len (_bce )==6{_dgac :="\u0025\u0030\u0032x\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";_f .Sscanf (_bce ,_dgac ,&_bfdg ,&_aada ,&_bbd );};if len (_bce )==8{_eeefc :="\u0025\u00302\u0078\u0025\u00302\u0078\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";
_f .Sscanf (_bce ,_eeefc ,&_bfdg ,&_aada ,&_bbd ,&_eebc );};return ;};func (_dcd *Context )capper ()_bf .Capper {switch _dcd ._bgc {case _gg .LineCapButt :return _bf .ButtCapper ;case _gg .LineCapRound :return _bf .RoundCapper ;case _gg .LineCapSquare :return _bf .SquareCapper ;
};return nil ;};func (_fca *Context )Transform (x ,y float64 )(_efbc ,_gcfcd float64 ){return _fca ._gfa .Transform (x ,y );};func _cad (_fdac *_d .RGBA ,_dbad *_d .Alpha ,_accc _gg .Pattern )*patternPainter {return &patternPainter {_fdac ,_dbad ,_accc };
};func (_bfec *Context )DrawEllipse (x ,y ,rx ,ry float64 ){_bfec .NewSubPath ();_bfec .DrawEllipticalArc (x ,y ,rx ,ry ,0,2*_b .Pi );_bfec .ClosePath ();};func (_aa *Context )Height ()int {return _aa ._bg };func (_eecc stops )Swap (i ,j int ){_eecc [i ],_eecc [j ]=_eecc [j ],_eecc [i ]};
func (_ggb *Context )CubicTo (x1 ,y1 ,x2 ,y2 ,x3 ,y3 float64 ){if !_ggb ._fcg {_ggb .MoveTo (x1 ,y1 );};_eee ,_gcbf :=_ggb ._cda .X ,_ggb ._cda .Y ;x1 ,y1 =_ggb .Transform (x1 ,y1 );x2 ,y2 =_ggb .Transform (x2 ,y2 );x3 ,y3 =_ggb .Transform (x3 ,y3 );_cec :=_ac (_eee ,_gcbf ,x1 ,y1 ,x2 ,y2 ,x3 ,y3 );
_fab :=_ddbc (_ggb ._cda );for _ ,_aff :=range _cec [1:]{_bbgd :=_ddbc (_aff );if _bbgd ==_fab {continue ;};_fab =_bbgd ;_ggb ._cdg .Add1 (_bbgd );_ggb ._ega .Add1 (_bbgd );_ggb ._cda =_aff ;};};func (_baea *solidPattern )ColorAt (x ,y int )_ec .Color {return _baea ._geb };
func (_dfad *Context )SetStrokeRGBA (r ,g ,b ,a float64 ){_ge :=_ec .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_dfad ._db =_efdc (_ge );};func (_gfd *Context )DrawArc (x ,y ,r ,angle1 ,angle2 float64 ){_gfd .DrawEllipticalArc (x ,y ,r ,r ,angle1 ,angle2 );
};func (_gcf *Context )Image ()_d .Image {return _gcf ._ga };func _ed (_dab ,_cdcb ,_fb ,_cc ,_dfgb ,_eg float64 )[]_df .Point {_agg :=(_b .Hypot (_fb -_dab ,_cc -_cdcb )+_b .Hypot (_dfgb -_fb ,_eg -_cc ));_gc :=int (_agg +0.5);if _gc < 4{_gc =4;};_bad :=float64 (_gc )-1;
_eda :=make ([]_df .Point ,_gc );for _aggb :=0;_aggb < _gc ;_aggb ++{_ceb :=float64 (_aggb )/_bad ;_ecb ,_eb :=_ag (_dab ,_cdcb ,_fb ,_cc ,_dfgb ,_eg ,_ceb );_eda [_aggb ]=_df .NewPoint (_ecb ,_eb );};return _eda ;};type circle struct{_ecbf ,_fgc ,_bgd float64 };
type stops []stop ;func _efdc (_dee _ec .Color )_gg .Pattern {return &solidPattern {_geb :_dee }};func (_efe *Context )LineWidth ()float64 {return _efe ._ef };func (_fda *Context )Width ()int {return _fda ._dae };func (_daea *Context )StrokePattern ()_gg .Pattern {return _daea ._db };
func _cbf (_ffg ,_fdb ,_ecg ,_acgba ,_gac ,_cebd float64 )_gg .Gradient {_ddbf :=circle {_ffg ,_fdb ,_ecg };_ggg :=circle {_acgba ,_gac ,_cebd };_agf :=circle {_acgba -_ffg ,_gac -_fdb ,_cebd -_ecg };_bcc :=_egca (_agf ._ecbf ,_agf ._fgc ,-_agf ._bgd ,_agf ._ecbf ,_agf ._fgc ,_agf ._bgd );
var _gade float64 ;if _bcc !=0{_gade =1.0/_bcc ;};_ggbd :=-_ddbf ._bgd ;_eacb :=&radialGradient {_cege :_ddbf ,_eaff :_ggg ,_cfb :_agf ,_daga :_bcc ,_eaa :_gade ,_aae :_ggbd };return _eacb ;};func (_eeb *Context )DrawPoint (x ,y ,r float64 ){_eeb .Push ();
_ca ,_agb :=_eeb .Transform (x ,y );_eeb .Identity ();_eeb .DrawCircle (_ca ,_agb ,r );_eeb .Pop ();};func (_cdb *Context )DrawLine (x1 ,y1 ,x2 ,y2 float64 ){_cdb .MoveTo (x1 ,y1 );_cdb .LineTo (x2 ,y2 )};func (_ddba *Context )SetMatrix (m _df .Matrix ){_ddba ._gfa =m };
func (_fg *Context )SetFillRule (fillRule _gg .FillRule ){_fg ._gcb =fillRule };func (_cdfb *Context )Identity (){_cdfb ._gfa =_df .IdentityMatrix ()};func (_fbdd *Context )Push (){_faggf :=*_fbdd ;_fbdd ._age =append (_fbdd ._age ,&_faggf )};func NewContextForRGBA (im *_d .RGBA )*Context {_ccc :=im .Bounds ().Size ().X ;
_agge :=im .Bounds ().Size ().Y ;return &Context {_dae :_ccc ,_bg :_agge ,_dfgc :_bf .NewRasterizer (_ccc ,_agge ),_ga :im ,_gdf :_ec .Transparent ,_cb :_be ,_db :_eab ,_ef :1,_gcb :_gg .FillRuleWinding ,_gfa :_df .IdentityMatrix (),_dga :_gg .NewTextState ()};
};func _edb (_ggde ,_cbbb _ec .Color ,_eace float64 )_ec .Color {_agfd ,_fgca ,_eeba ,_gdfgd :=_ggde .RGBA ();_bfc ,_dbe ,_bacbd ,_ddcd :=_cbbb .RGBA ();return _ec .RGBA {_cfg (_agfd ,_bfc ,_eace ),_cfg (_fgca ,_dbe ,_eace ),_cfg (_eeba ,_bacbd ,_eace ),_cfg (_gdfgd ,_ddcd ,_eace )};
};func (_afe *Context )FillPreserve (){var _efc _bf .Painter ;if _afe ._bfd ==nil {if _cf ,_dcdd :=_afe ._cb .(*solidPattern );_dcdd {_ada :=_bf .NewRGBAPainter (_afe ._ga );_ada .SetColor (_cf ._geb );_efc =_ada ;};};if _efc ==nil {_efc =_cad (_afe ._ga ,_afe ._bfd ,_afe ._cb );
};_afe .fill (_efc );};func (_ddc *Context )SetRGBA255 (r ,g ,b ,a int ){_ddc ._gdf =_ec .NRGBA {uint8 (r ),uint8 (g ),uint8 (b ),uint8 (a )};_ddc .setFillAndStrokeColor (_ddc ._gdf );};func (_eag *Context )TextState ()*_gg .TextState {return &_eag ._dga };
type surfacePattern struct{_cdce _d .Image ;_fcgg repeatOp ;};func _eae (_fac _d .Image )*_d .RGBA {_feec :=_fac .Bounds ();_fece :=_d .NewRGBA (_feec );_a .Draw (_fece ,_feec ,_fac ,_feec .Min ,_a .Src );return _fece ;};type linearGradient struct{_gfce ,_ddag ,_ade ,_aggbg float64 ;
_bfg stops ;};const (_agd repeatOp =iota ;_bgdf ;_accd ;_gfgc ;);func (_aea *Context )SetPixel (x ,y int ){_aea ._ga .Set (x ,y ,_aea ._gdf )};func (_bdbb *Context )Matrix ()_df .Matrix {return _bdbb ._gfa };func (_fbgc *Context )Clip (){_fbgc .ClipPreserve ();
_fbgc .ClearPath ()};func (_cef *Context )FillPattern ()_gg .Pattern {return _cef ._cb };func (_cdga *patternPainter )Paint (ss []_bf .Span ,done bool ){_fga :=_cdga ._dgad .Bounds ();for _ ,_bggd :=range ss {if _bggd .Y < _fga .Min .Y {continue ;};if _bggd .Y >=_fga .Max .Y {return ;
};if _bggd .X0 < _fga .Min .X {_bggd .X0 =_fga .Min .X ;};if _bggd .X1 > _fga .Max .X {_bggd .X1 =_fga .Max .X ;};if _bggd .X0 >=_bggd .X1 {continue ;};const _fbff =1<<16-1;_gdc :=_bggd .Y -_cdga ._dgad .Rect .Min .Y ;_gefe :=_bggd .X0 -_cdga ._dgad .Rect .Min .X ;
_eebaa :=(_bggd .Y -_cdga ._dgad .Rect .Min .Y )*_cdga ._dgad .Stride +(_bggd .X0 -_cdga ._dgad .Rect .Min .X )*4;_eedg :=_eebaa +(_bggd .X1 -_bggd .X0 )*4;for _ccaeb ,_bfdc :=_eebaa ,_gefe ;_ccaeb < _eedg ;_ccaeb ,_bfdc =_ccaeb +4,_bfdc +1{_gcgg :=_bggd .Alpha ;
if _cdga ._fba !=nil {_gcgg =_gcgg *uint32 (_cdga ._fba .AlphaAt (_bfdc ,_gdc ).A )/255;if _gcgg ==0{continue ;};};_ggfe :=_cdga ._eede .ColorAt (_bfdc ,_gdc );_ecc ,_agbd ,_eabf ,_fgd :=_ggfe .RGBA ();_fbda :=uint32 (_cdga ._dgad .Pix [_ccaeb +0]);_adgcb :=uint32 (_cdga ._dgad .Pix [_ccaeb +1]);
_egd :=uint32 (_cdga ._dgad .Pix [_ccaeb +2]);_dba :=uint32 (_cdga ._dgad .Pix [_ccaeb +3]);_cgg :=(_fbff -(_fgd *_gcgg /_fbff ))*0x101;_cdga ._dgad .Pix [_ccaeb +0]=uint8 ((_fbda *_cgg +_ecc *_gcgg )/_fbff >>8);_cdga ._dgad .Pix [_ccaeb +1]=uint8 ((_adgcb *_cgg +_agbd *_gcgg )/_fbff >>8);
_cdga ._dgad .Pix [_ccaeb +2]=uint8 ((_egd *_cgg +_eabf *_gcgg )/_fbff >>8);_cdga ._dgad .Pix [_ccaeb +3]=uint8 ((_dba *_cgg +_fgd *_gcgg )/_fbff >>8);};};};func (_ebg *surfacePattern )ColorAt (x ,y int )_ec .Color {_fcda :=_ebg ._cdce .Bounds ();switch _ebg ._fcgg {case _bgdf :if y >=_fcda .Dy (){return _ec .Transparent ;
};case _accd :if x >=_fcda .Dx (){return _ec .Transparent ;};case _gfgc :if x >=_fcda .Dx ()||y >=_fcda .Dy (){return _ec .Transparent ;};};x =x %_fcda .Dx ()+_fcda .Min .X ;y =y %_fcda .Dy ()+_fcda .Min .Y ;return _ebg ._cdce .At (x ,y );};func (_bab *linearGradient )AddColorStop (offset float64 ,color _ec .Color ){_bab ._bfg =append (_bab ._bfg ,stop {_aeac :offset ,_aaa :color });
_fd .Sort (_bab ._bfg );};func (_cebc *Context )ShearAbout (sx ,sy ,x ,y float64 ){_cebc .Translate (x ,y );_cebc .Shear (sx ,sy );_cebc .Translate (-x ,-y );};type Context struct{_dae int ;_bg int ;_dfgc *_bf .Rasterizer ;_ga *_d .RGBA ;_bfd *_d .Alpha ;
_gdf _ec .Color ;_cb _gg .Pattern ;_db _gg .Pattern ;_cdg _bf .Path ;_ega _bf .Path ;_ccf _df .Point ;_cda _df .Point ;_fcg bool ;_bfb []float64 ;_gf float64 ;_ef float64 ;_bgc _gg .LineCap ;_fad _gg .LineJoin ;_gcb _gg .FillRule ;_gfa _df .Matrix ;_dga _gg .TextState ;
_age []*Context ;};func (_ffc *Context )SetStrokeStyle (pattern _gg .Pattern ){_ffc ._db =pattern };func (_ggd *Context )DrawImage (im _d .Image ,x ,y int ){_ggd .DrawImageAnchored (im ,x ,y ,0,0)};type radialGradient struct{_cege ,_eaff ,_cfb circle ;
_daga ,_eaa float64 ;_aae float64 ;_dffc stops ;};func _cdda (_aed float64 ,_ggc stops )_ec .Color {if _aed <=0.0||len (_ggc )==1{return _ggc [0]._aaa ;};_egcaf :=_ggc [len (_ggc )-1];if _aed >=_egcaf ._aeac {return _egcaf ._aaa ;};for _deaa ,_egfg :=range _ggc [1:]{if _aed < _egfg ._aeac {_aed =(_aed -_ggc [_deaa ]._aeac )/(_egfg ._aeac -_ggc [_deaa ]._aeac );
return _edb (_ggc [_deaa ]._aaa ,_egfg ._aaa ,_aed );};};return _egcaf ._aaa ;};func (_fae *Context )StrokePreserve (){var _acg _bf .Painter ;if _fae ._bfd ==nil {if _cbg ,_fagc :=_fae ._db .(*solidPattern );_fagc {_gcfd :=_bf .NewRGBAPainter (_fae ._ga );
_gcfd .SetColor (_cbg ._geb );_acg =_gcfd ;};};if _acg ==nil {_acg =_cad (_fae ._ga ,_fae ._bfd ,_fae ._db );};_fae .stroke (_acg );};func _ag (_ece ,_cdc ,_ab ,_fe ,_da ,_ce ,_ad float64 )(_de ,_fef float64 ){_bb :=1-_ad ;_dfg :=_bb *_bb ;_dd :=2*_bb *_ad ;
_gb :=_ad *_ad ;_de =_dfg *_ece +_dd *_ab +_gb *_da ;_fef =_dfg *_cdc +_dd *_fe +_gb *_ce ;return ;};func (_bea *Context )SetLineJoin (lineJoin _gg .LineJoin ){_bea ._fad =lineJoin };