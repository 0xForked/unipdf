//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package imagerender ;import (_fa "errors";_ae "fmt";_da "github.com/golang/freetype/raster";_fac "github.com/unidoc/unipdf/v3/common";_db "github.com/unidoc/unipdf/v3/internal/transform";_e "github.com/unidoc/unipdf/v3/render/internal/context";_ag "golang.org/x/image/draw";_dd "golang.org/x/image/font";_dg "golang.org/x/image/math/f64";_b "golang.org/x/image/math/fixed";_cb "image";_gf "image/color";_c "image/draw";_g "math";_d "sort";_f "strings";);func (_ga *Context )capper ()_da .Capper {switch _ga ._bbg {case _e .LineCapButt :return _da .ButtCapper ;case _e .LineCapRound :return _da .RoundCapper ;case _e .LineCapSquare :return _da .SquareCapper ;};return nil ;};func (_afce *Context )stroke (_ec _da .Painter ){_deba :=_afce ._cac ;if len (_afce ._afc )> 0{_deba =_gfgfg (_deba ,_afce ._afc ,_afce ._dabf );}else {_deba =_faac (_dgff (_deba ));};_dge :=_afce ._de ;_dge .UseNonZeroWinding =true ;_dge .Clear ();_dge .AddStroke (_deba ,_fga (_afce ._bba ),_afce .capper (),_afce .joiner ());_dge .Rasterize (_ec );};func (_edfe stops )Swap (i ,j int ){_edfe [i ],_edfe [j ]=_edfe [j ],_edfe [i ]};func (_gbd *Context )SetStrokeStyle (pattern _e .Pattern ){_gbd ._abf =pattern };func (_gb *Context )Height ()int {return _gb ._gfgd };func (_ad *Context )Width ()int {return _ad ._eg };func (_gbe *Context )ClosePath (){if _gbe ._bfeb {_cacc :=_dbb (_gbe ._ced );_gbe ._cac .Add1 (_cacc );_gbe ._gg .Add1 (_cacc );_gbe ._egg =_gbe ._ced ;};};func (_fce *Context )DrawPoint (x ,y ,r float64 ){_fce .Push ();_ega ,_ccf :=_fce .Transform (x ,y );_fce .Identity ();_fce .DrawCircle (_ega ,_ccf ,r );_fce .Pop ();};func (_fca *Context )StrokePreserve (){var _efg _da .Painter ;if _fca ._beb ==nil {if _cd ,_fcab :=_fca ._abf .(*solidPattern );_fcab {_ebf :=_da .NewRGBAPainter (_fca ._dcd );_ebf .SetColor (_cd ._gef );_efg =_ebf ;};};if _efg ==nil {_efg =_fcf (_fca ._dcd ,_fca ._beb ,_fca ._abf );};_fca .stroke (_efg );};func (_fg *Context )SetFillRGBA (r ,g ,b ,a float64 ){_cca :=_gf .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_fg ._ac =_cca ;_fg ._ab =_ddf (_cca );};func (_gffc *linearGradient )ColorAt (x ,y int )_gf .Color {if len (_gffc ._edbc )==0{return _gf .Transparent ;};_bgd ,_ffff :=float64 (x ),float64 (y );_dfb ,_edfb ,_cfc ,_dea :=_gffc ._dcbg ,_gffc ._gcad ,_gffc ._ffb ,_gffc ._ddcd ;_ageb ,_eff :=_cfc -_dfb ,_dea -_edfb ;if _eff ==0&&_ageb !=0{return _dfae ((_bgd -_dfb )/_ageb ,_gffc ._edbc );};if _ageb ==0&&_eff !=0{return _dfae ((_ffff -_edfb )/_eff ,_gffc ._edbc );};_dee :=_ageb *(_bgd -_dfb )+_eff *(_ffff -_edfb );if _dee < 0{return _gffc ._edbc [0]._ebab ;};_ecf :=_g .Hypot (_ageb ,_eff );_eeb :=((_bgd -_dfb )*-_eff +(_ffff -_edfb )*_ageb )/(_ecf *_ecf );_ffffd ,_abc :=_dfb +_eeb *-_eff ,_edfb +_eeb *_ageb ;_ddd :=_g .Hypot (_bgd -_ffffd ,_ffff -_abc )/_ecf ;return _dfae (_ddd ,_gffc ._edbc );};type patternPainter struct{_cad *_cb .RGBA ;_cdc *_cb .Alpha ;_feg _e .Pattern ;};func (_ffc *Context )Clip (){_ffc .ClipPreserve ();_ffc .ClearPath ()};func (_cbd *Context )ResetClip (){_cbd ._beb =nil };func (_aae *Context )Transform (x ,y float64 )(_cbgg ,_aga float64 ){return _aae ._abb .Transform (x ,y )};func (_cae *Context )SetRGBA255 (r ,g ,b ,a int ){_cae ._ac =_gf .NRGBA {uint8 (r ),uint8 (g ),uint8 (b ),uint8 (a )};_cae .setFillAndStrokeColor (_cae ._ac );};func (_aaa *Context )DrawRoundedRectangle (x ,y ,w ,h ,r float64 ){_agc ,_gbdb ,_cde ,_cfb :=x ,x +r ,x +w -r ,x +w ;_ddc ,_fdg ,_egef ,_ccc :=y ,y +r ,y +h -r ,y +h ;_aaa .NewSubPath ();_aaa .MoveTo (_gbdb ,_ddc );_aaa .LineTo (_cde ,_ddc );_aaa .DrawArc (_cde ,_fdg ,r ,_bcdf (270),_bcdf (360));_aaa .LineTo (_cfb ,_egef );_aaa .DrawArc (_cde ,_egef ,r ,_bcdf (0),_bcdf (90));_aaa .LineTo (_gbdb ,_ccc );_aaa .DrawArc (_gbdb ,_egef ,r ,_bcdf (90),_bcdf (180));_aaa .LineTo (_agc ,_fdg );_aaa .DrawArc (_gbdb ,_fdg ,r ,_bcdf (180),_bcdf (270));_aaa .ClosePath ();};func _faac (_bfee [][]_db .Point )_da .Path {var _ceda _da .Path ;for _ ,_ebfa :=range _bfee {var _eed _b .Point26_6 ;for _dabe ,_cgdf :=range _ebfa {_cgb :=_dbb (_cgdf );if _dabe ==0{_ceda .Start (_cgb );}else {_fbfd :=_cgb .X -_eed .X ;_aab :=_cgb .Y -_eed .Y ;if _fbfd < 0{_fbfd =-_fbfd ;};if _aab < 0{_aab =-_aab ;};if _fbfd +_aab > 8{_ceda .Add1 (_cgb );};};_eed =_cgb ;};};return _ceda ;};func (_dgb *Context )TextState ()*_e .TextState {return _dgb ._bcb };func (_abge stops )Len ()int {return len (_abge )};func (_aed *Context )InvertMask (){if _aed ._beb ==nil {_aed ._beb =_cb .NewAlpha (_aed ._dcd .Bounds ());}else {for _adb ,_eacb :=range _aed ._beb .Pix {_aed ._beb .Pix [_adb ]=255-_eacb ;};};};func _gdbd (_fecd ,_gbda ,_gcda ,_cccd float64 )_e .Gradient {_cfg :=&linearGradient {_dcbg :_fecd ,_gcad :_gbda ,_ffb :_gcda ,_ddcd :_cccd };return _cfg ;};func (_eaa *Context )SetRGBA (r ,g ,b ,a float64 ){_eaa ._ac =_gf .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_eaa .setFillAndStrokeColor (_eaa ._ac );};func (_gfd *radialGradient )AddColorStop (offset float64 ,color _gf .Color ){_gfd ._eefg =append (_gfd ._eefg ,stop {_bg :offset ,_ebab :color });_d .Sort (_gfd ._eefg );};func (_gbc *Context )Pop (){_dec :=*_gbc ;_fgb :=_gbc ._dgfg ;_eba ,_fgb :=_fgb [len (_fgb )-1],_fgb [:len (_fgb )-1];*_gbc =*_eba ;_gbc ._cac =_dec ._cac ;_gbc ._gg =_dec ._gg ;_gbc ._ced =_dec ._ced ;_gbc ._egg =_dec ._egg ;_gbc ._bfeb =_dec ._bfeb ;_gbc ._bcb =_dec ._bcb ;};func (_adba *Context )DrawArc (x ,y ,r ,angle1 ,angle2 float64 ){_adba .DrawEllipticalArc (x ,y ,r ,r ,angle1 ,angle2 );};var (_afd =_ddf (_gf .White );_ge =_ddf (_gf .Black ););func (_bcbb *Context )SetDashOffset (offset float64 ){_bcbb ._dabf =offset };type linearGradient struct{_dcbg ,_gcad ,_ffb ,_ddcd float64 ;_edbc stops ;};func (_fad *Context )NewSubPath (){if _fad ._bfeb {_fad ._gg .Add1 (_dbb (_fad ._ced ));};_fad ._bfeb =false ;};type circle struct{_fag ,_bedg ,_faeg float64 };func (_edfg *Context )drawString (_cda *_cb .RGBA ,_afca string ,_bbge ,_edb float64 ){_aaf :=&_dd .Drawer {Dst :_cda ,Src :_cb .NewUniform (_edfg ._ac ),Face :_edfg ._bcb .Tf .Face ,Dot :_dbb (_db .NewPoint (_bbge ,_edb ))};_eca :=rune (-1);for _ ,_gaf :=range _afca {if _eca >=0{_aaf .Dot .X +=_aaf .Face .Kern (_eca ,_gaf );};_faaf ,_cfdc ,_ebe ,_cba ,_fec :=_aaf .Face .Glyph (_aaf .Dot ,_gaf );if !_fec {continue ;};_aee :=_faaf .Sub (_faaf .Min );_cbee :=_ag .BiLinear ;_gdg :=_edfg ._abb .Clone ();_gdg .Translate (float64 (_faaf .Min .X ),float64 (_faaf .Min .Y ));_cee :=_dg .Aff3 {_gdg [0],_gdg [3],_gdg [6],_gdg [1],_gdg [4],_gdg [7]};_cbee .Transform (_aaf .Dst ,_cee ,_aaf .Src ,_aee ,_ag .Over ,&_ag .Options {SrcMask :_cfdc ,SrcMaskP :_ebe });_aaf .Dot .X +=_cba ;_eca =_gaf ;};};func (_agf *Context )MeasureString (s string )(_abg ,_cafa float64 ){_aggg :=&_dd .Drawer {Face :_agf ._bcb .Tf .Face };_dbg :=_aggg .MeasureString (s );return float64 (_dbg >>6),_agf ._bcb .Tf .Size ;};func (_ade *Context )SetFillStyle (pattern _e .Pattern ){if _gdb ,_acg :=pattern .(*solidPattern );_acg {_ade ._ac =_gdb ._gef ;};_ade ._ab =pattern ;};func (_eagb *Context )DrawImageAnchored (im _cb .Image ,x ,y int ,ax ,ay float64 ){_ddad :=im .Bounds ().Size ();x -=int (ax *float64 (_ddad .X ));y -=int (ay *float64 (_ddad .Y ));_fcec :=_ag .BiLinear ;_eagbf :=_eagb ._abb .Clone ();_eagbf .Translate (float64 (x ),float64 (y ));_aea :=_dg .Aff3 {_eagbf [0],_eagbf [3],_eagbf [6],_eagbf [1],_eagbf [4],_eagbf [7]};if _eagb ._beb ==nil {_fcec .Transform (_eagb ._dcd ,_aea ,im ,im .Bounds (),_ag .Over ,nil );}else {_fcec .Transform (_eagb ._dcd ,_aea ,im ,im .Bounds (),_ag .Over ,&_ag .Options {DstMask :_eagb ._beb ,DstMaskP :_cb .ZP });};};func (_cgc *Context )Scale (x ,y float64 ){_cgc ._abb .Scale (x ,y )};func (_dcb *Context )Stroke (){_dcb .StrokePreserve ();_dcb .ClearPath ()};type surfacePattern struct{_efc _cb .Image ;_gcb repeatOp ;};func (_adee *Context )Rotate (angle float64 ){_adee ._abb .Rotate (angle )};func (_eea *Context )joiner ()_da .Joiner {switch _eea ._bdef {case _e .LineJoinBevel :return _da .BevelJoiner ;case _e .LineJoinRound :return _da .RoundJoiner ;};return nil ;};func (_fbfc *Context )DrawRectangle (x ,y ,w ,h float64 ){_fbfc .NewSubPath ();_fbfc .MoveTo (x ,y );_fbfc .LineTo (x +w ,y );_fbfc .LineTo (x +w ,y +h );_fbfc .LineTo (x ,y +h );_fbfc .ClosePath ();};func _fdff (_ada ,_gfec _gf .Color ,_gbdg float64 )_gf .Color {_bcc ,_ebb ,_babc ,_bad :=_ada .RGBA ();_baab ,_ebg ,_agaa ,_ebfb :=_gfec .RGBA ();return _gf .RGBA {_cgdg (_bcc ,_baab ,_gbdg ),_cgdg (_ebb ,_ebg ,_gbdg ),_cgdg (_babc ,_agaa ,_gbdg ),_cgdg (_bad ,_ebfb ,_gbdg )};};func (_fbf *Context )SetStrokeRGBA (r ,g ,b ,a float64 ){_cag :=_gf .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_fbf ._abf =_ddf (_cag );};func _ggfc (_cgge [][]_db .Point ,_gfeg []float64 ,_dadd float64 )[][]_db .Point {var _dbeb [][]_db .Point ;if len (_gfeg )==0{return _cgge ;};if len (_gfeg )==1{_gfeg =append (_gfeg ,_gfeg [0]);};for _ ,_geeb :=range _cgge {if len (_geeb )< 2{continue ;};_ebfe :=_geeb [0];_gbdd :=1;_fdd :=0;_aeaa :=0.0;if _dadd !=0{var _fedf float64 ;for _ ,_cbfg :=range _gfeg {_fedf +=_cbfg ;};_dadd =_g .Mod (_dadd ,_fedf );if _dadd < 0{_dadd +=_fedf ;};for _cgcb ,_bbe :=range _gfeg {_dadd -=_bbe ;if _dadd < 0{_fdd =_cgcb ;_aeaa =_bbe +_dadd ;break ;};};};var _eadb []_db .Point ;_eadb =append (_eadb ,_ebfe );for _gbdd < len (_geeb ){_bae :=_gfeg [_fdd ];_bfae :=_geeb [_gbdd ];_dabfe :=_ebfe .Distance (_bfae );_bcba :=_bae -_aeaa ;if _dabfe > _bcba {_ffbe :=_bcba /_dabfe ;_eaae :=_ebfe .Interpolate (_bfae ,_ffbe );_eadb =append (_eadb ,_eaae );if _fdd %2==0&&len (_eadb )> 1{_dbeb =append (_dbeb ,_eadb );};_eadb =nil ;_eadb =append (_eadb ,_eaae );_aeaa =0;_ebfe =_eaae ;_fdd =(_fdd +1)%len (_gfeg );}else {_eadb =append (_eadb ,_bfae );_ebfe =_bfae ;_aeaa +=_dabfe ;_gbdd ++;};};if _fdd %2==0&&len (_eadb )> 1{_dbeb =append (_dbeb ,_eadb );};};return _dbeb ;};const (_ggae repeatOp =iota ;_dgc ;_agcd ;_aabg ;);func _dfae (_acgd float64 ,_dead stops )_gf .Color {if _acgd <=0.0||len (_dead )==1{return _dead [0]._ebab ;};_bdgb :=_dead [len (_dead )-1];if _acgd >=_bdgb ._bg {return _bdgb ._ebab ;};for _cgd ,_gfe :=range _dead [1:]{if _acgd < _gfe ._bg {_acgd =(_acgd -_dead [_cgd ]._bg )/(_gfe ._bg -_dead [_cgd ]._bg );return _fdff (_dead [_cgd ]._ebab ,_gfe ._ebab ,_acgd );};};return _bdgb ._ebab ;};func (_cgg *Context )DrawStringAnchored (s string ,x ,y ,ax ,ay float64 ){_bdg ,_gbb :=_cgg .MeasureString (s );x -=ax *_bdg ;y +=ay *_gbb ;if _cgg ._beb ==nil {_cgg .drawString (_cgg ._dcd ,s ,x ,y );}else {_eee :=_cb .NewRGBA (_cb .Rect (0,0,_cgg ._eg ,_cgg ._gfgd ));_cgg .drawString (_eee ,s ,x ,y );_ag .DrawMask (_cgg ._dcd ,_cgg ._dcd .Bounds (),_eee ,_cb .ZP ,_cgg ._beb ,_cb .ZP ,_ag .Over );};};func (_gcf *Context )AsMask ()*_cb .Alpha {_ecd :=_cb .NewAlpha (_gcf ._dcd .Bounds ());_ag .Draw (_ecd ,_gcf ._dcd .Bounds (),_gcf ._dcd ,_cb .ZP ,_ag .Src );return _ecd ;};func (_cece *Context )DrawString (s string ,x ,y float64 ){_cece .DrawStringAnchored (s ,x ,y ,0,0)};func (_bce *Context )SetRGB255 (r ,g ,b int ){_bce .SetRGBA255 (r ,g ,b ,255)};func NewContext (width ,height int )*Context {return NewContextForRGBA (_cb .NewRGBA (_cb .Rect (0,0,width ,height )));};func (_eeae *patternPainter )Paint (ss []_da .Span ,done bool ){_gfdb :=_eeae ._cad .Bounds ();for _ ,_ggda :=range ss {if _ggda .Y < _gfdb .Min .Y {continue ;};if _ggda .Y >=_gfdb .Max .Y {return ;};if _ggda .X0 < _gfdb .Min .X {_ggda .X0 =_gfdb .Min .X ;};if _ggda .X1 > _gfdb .Max .X {_ggda .X1 =_gfdb .Max .X ;};if _ggda .X0 >=_ggda .X1 {continue ;};const _cbaf =1<<16-1;_fabb :=_ggda .Y -_eeae ._cad .Rect .Min .Y ;_cfdd :=_ggda .X0 -_eeae ._cad .Rect .Min .X ;_fcbf :=(_ggda .Y -_eeae ._cad .Rect .Min .Y )*_eeae ._cad .Stride +(_ggda .X0 -_eeae ._cad .Rect .Min .X )*4;_cfdfg :=_fcbf +(_ggda .X1 -_ggda .X0 )*4;for _bcgf ,_babf :=_fcbf ,_cfdd ;_bcgf < _cfdfg ;_bcgf ,_babf =_bcgf +4,_babf +1{_gfcf :=_ggda .Alpha ;if _eeae ._cdc !=nil {_gfcf =_gfcf *uint32 (_eeae ._cdc .AlphaAt (_babf ,_fabb ).A )/255;if _gfcf ==0{continue ;};};_dbed :=_eeae ._feg .ColorAt (_babf ,_fabb );_bebb ,_cecb ,_decfb ,_bcgg :=_dbed .RGBA ();_bfd :=uint32 (_eeae ._cad .Pix [_bcgf +0]);_efbd :=uint32 (_eeae ._cad .Pix [_bcgf +1]);_faea :=uint32 (_eeae ._cad .Pix [_bcgf +2]);_ggcc :=uint32 (_eeae ._cad .Pix [_bcgf +3]);_eeba :=(_cbaf -(_bcgg *_gfcf /_cbaf ))*0x101;_eeae ._cad .Pix [_bcgf +0]=uint8 ((_bfd *_eeba +_bebb *_gfcf )/_cbaf >>8);_eeae ._cad .Pix [_bcgf +1]=uint8 ((_efbd *_eeba +_cecb *_gfcf )/_cbaf >>8);_eeae ._cad .Pix [_bcgf +2]=uint8 ((_faea *_eeba +_decfb *_gfcf )/_cbaf >>8);_eeae ._cad .Pix [_bcgf +3]=uint8 ((_ggcc *_eeba +_bcgg *_gfcf )/_cbaf >>8);};};};func _cbf (_ecb ,_deff ,_aba ,_fge ,_agbd ,_fbfb float64 )float64 {return _ecb *_fge +_deff *_agbd +_aba *_fbfb ;};func (_afe *Context )SetLineWidth (lineWidth float64 ){_afe ._bba =lineWidth };func (_fcgf *Context )SetDash (dashes ...float64 ){_fcgf ._afc =dashes };func (_eaf *solidPattern )ColorAt (x ,y int )_gf .Color {return _eaf ._gef };func (_fgc *Context )SetPixel (x ,y int ){_fgc ._dcd .Set (x ,y ,_fgc ._ac )};func _fga (_bccd float64 )_b .Int26_6 {return _b .Int26_6 (_bccd *64)};func (_aag *Context )Matrix ()_db .Matrix {return _aag ._abb };func (_faee *Context )ShearAbout (sx ,sy ,x ,y float64 ){_faee .Translate (x ,y );_faee .Shear (sx ,sy );_faee .Translate (-x ,-y );};func _fcf (_eeab *_cb .RGBA ,_dcc *_cb .Alpha ,_ggb _e .Pattern )*patternPainter {return &patternPainter {_eeab ,_dcc ,_ggb };};func (_eef *Context )DrawEllipse (x ,y ,rx ,ry float64 ){_eef .NewSubPath ();_eef .DrawEllipticalArc (x ,y ,rx ,ry ,0,2*_g .Pi );_eef .ClosePath ();};type Context struct{_eg int ;_gfgd int ;_de *_da .Rasterizer ;_dcd *_cb .RGBA ;_beb *_cb .Alpha ;_ac _gf .Color ;_ab _e .Pattern ;_abf _e .Pattern ;_cac _da .Path ;_gg _da .Path ;_ced _db .Point ;_egg _db .Point ;_bfeb bool ;_afc []float64 ;_dabf float64 ;_bba float64 ;_bbg _e .LineCap ;_bdef _e .LineJoin ;_egd _e .FillRule ;_abb _db .Matrix ;_bcb *_e .TextState ;_dgfg []*Context ;};func (_bed *Context )SetMask (mask *_cb .Alpha )error {if mask .Bounds ().Size ()!=_bed ._dcd .Bounds ().Size (){return _fa .New ("\u006d\u0061\u0073\u006b\u0020\u0073i\u007a\u0065\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068 \u0063\u006f\u006e\u0074\u0065\u0078\u0074 \u0073\u0069\u007a\u0065");};_bed ._beb =mask ;return nil ;};func (_aff *Context )SetColor (c _gf .Color ){_aff .setFillAndStrokeColor (c )};func _bcdf (_gcag float64 )float64 {return _gcag *_g .Pi /180};func (_ff *Context )SetHexColor (x string ){_afed ,_bdf ,_dfe ,_caf :=_adc (x );_ff .SetRGBA255 (_afed ,_bdf ,_dfe ,_caf );};func _gfgfg (_abga _da .Path ,_cbef []float64 ,_cdb float64 )_da .Path {return _faac (_ggfc (_dgff (_abga ),_cbef ,_cdb ));};func (_dfa *Context )Identity (){_dfa ._abb =_db .IdentityMatrix ()};func (_cbc *Context )SetFillRule (fillRule _e .FillRule ){_cbc ._egd =fillRule };func (_ead *Context )Shear (x ,y float64 ){_ead ._abb .Shear (x ,y )};func _dbb (_fbbb _db .Point )_b .Point26_6 {return _b .Point26_6 {X :_fga (_fbbb .X ),Y :_fga (_fbbb .Y )}};func (_efgg *Context )drawRegularPolygon (_gac int ,_ddee ,_dcg ,_ggd ,_edgc float64 ){_cga :=2*_g .Pi /float64 (_gac );_edgc -=_g .Pi /2;if _gac %2==0{_edgc +=_cga /2;};_efgg .NewSubPath ();for _efa :=0;_efa < _gac ;_efa ++{_abdc :=_edgc +_cga *float64 (_efa );_efgg .LineTo (_ddee +_ggd *_g .Cos (_abdc ),_dcg +_ggd *_g .Sin (_abdc ));};_efgg .ClosePath ();};func _bddc (_bec _cb .Image )*_cb .RGBA {_cfda :=_bec .Bounds ();_afbb :=_cb .NewRGBA (_cfda );_c .Draw (_afbb ,_cfda ,_bec ,_cfda .Min ,_c .Src );return _afbb ;};func (_afba *Context )DrawEllipticalArc (x ,y ,rx ,ry ,angle1 ,angle2 float64 ){const _gbdf =16;for _aca :=0;_aca < _gbdf ;_aca ++{_bee :=float64 (_aca +0)/_gbdf ;_aeg :=float64 (_aca +1)/_gbdf ;_def :=angle1 +(angle2 -angle1 )*_bee ;_fff :=angle1 +(angle2 -angle1 )*_aeg ;_fgce :=x +rx *_g .Cos (_def );_cbg :=y +ry *_g .Sin (_def );_afef :=x +rx *_g .Cos ((_def +_fff )/2);_fab :=y +ry *_g .Sin ((_def +_fff )/2);_efb :=x +rx *_g .Cos (_fff );_edf :=y +ry *_g .Sin (_fff );_gge :=2*_afef -_fgce /2-_efb /2;_feb :=2*_fab -_cbg /2-_edf /2;if _aca ==0{if _afba ._bfeb {_afba .LineTo (_fgce ,_cbg );}else {_afba .MoveTo (_fgce ,_cbg );};};_afba .QuadraticTo (_gge ,_feb ,_efb ,_edf );};};func (_fae *Context )setFillAndStrokeColor (_gcd _gf .Color ){_fae ._ac =_gcd ;_fae ._ab =_ddf (_gcd );_fae ._abf =_ddf (_gcd );};func (_bfa *Context )FillPreserve (){var _ebfd _da .Painter ;if _bfa ._beb ==nil {if _caef ,_gag :=_bfa ._ab .(*solidPattern );_gag {_cbbb :=_da .NewRGBAPainter (_bfa ._dcd );_cbbb .SetColor (_caef ._gef );_ebfd =_cbbb ;};};if _ebfd ==nil {_ebfd =_fcf (_bfa ._dcd ,_bfa ._beb ,_bfa ._ab );};_bfa .fill (_ebfd );};func _gbga (_agee _b .Int26_6 )float64 {const _gdf ,_acaf =6,1<<6-1;if _agee >=0{return float64 (_agee >>_gdf )+float64 (_agee &_acaf )/64;};_agee =-_agee ;if _agee >=0{return -(float64 (_agee >>_gdf )+float64 (_agee &_acaf )/64);};return 0;};func (_gae *Context )SetMatrix (m _db .Matrix ){_gae ._abb =m };type repeatOp int ;type stop struct{_bg float64 ;_ebab _gf .Color ;};func _dc (_ba ,_fed ,_ee ,_fde ,_ebd ,_aac ,_fcg ,_dgf float64 )[]_db .Point {_af :=(_g .Hypot (_ee -_ba ,_fde -_fed )+_g .Hypot (_ebd -_ee ,_aac -_fde )+_g .Hypot (_fcg -_ebd ,_dgf -_aac ));_gfg :=int (_af +0.5);if _gfg < 4{_gfg =4;};_gff :=float64 (_gfg )-1;_ca :=make ([]_db .Point ,_gfg );for _cbb :=0;_cbb < _gfg ;_cbb ++{_bc :=float64 (_cbb )/_gff ;_gd ,_afb :=_dbe (_ba ,_fed ,_ee ,_fde ,_ebd ,_aac ,_fcg ,_dgf ,_bc );_ca [_cbb ]=_db .NewPoint (_gd ,_afb );};return _ca ;};func _cgdg (_fbb ,_dad uint32 ,_ded float64 )uint8 {return uint8 (int32 (float64 (_fbb )*(1.0-_ded )+float64 (_dad )*_ded )>>8);};func (_gaa *Context )RotateAbout (angle ,x ,y float64 ){_gaa .Translate (x ,y );_gaa .Rotate (angle );_gaa .Translate (-x ,-y );};type solidPattern struct{_gef _gf .Color };type radialGradient struct{_gdc ,_baf ,_cgcg circle ;_afa ,_egae float64 ;_dbd float64 ;_eefg stops ;};func (_gfb *Context )ScaleAbout (sx ,sy ,x ,y float64 ){_gfb .Translate (x ,y );_gfb .Scale (sx ,sy );_gfb .Translate (-x ,-y );};func _ddf (_decf _gf .Color )_e .Pattern {return &solidPattern {_gef :_decf }};func _dgff (_bdc _da .Path )[][]_db .Point {var _cfdf [][]_db .Point ;var _ecae []_db .Point ;var _ebda ,_abe float64 ;for _cccb :=0;_cccb < len (_bdc );{switch _bdc [_cccb ]{case 0:if len (_ecae )> 0{_cfdf =append (_cfdf ,_ecae );_ecae =nil ;};_fbe :=_gbga (_bdc [_cccb +1]);_cdg :=_gbga (_bdc [_cccb +2]);_ecae =append (_ecae ,_db .NewPoint (_fbe ,_cdg ));_ebda ,_abe =_fbe ,_cdg ;_cccb +=4;case 1:_adgc :=_gbga (_bdc [_cccb +1]);_cdge :=_gbga (_bdc [_cccb +2]);_ecae =append (_ecae ,_db .NewPoint (_adgc ,_cdge ));_ebda ,_abe =_adgc ,_cdge ;_cccb +=4;case 2:_febc :=_gbga (_bdc [_cccb +1]);_bfc :=_gbga (_bdc [_cccb +2]);_eadd :=_gbga (_bdc [_cccb +3]);_egca :=_gbga (_bdc [_cccb +4]);_cfdfd :=_eac (_ebda ,_abe ,_febc ,_bfc ,_eadd ,_egca );_ecae =append (_ecae ,_cfdfd ...);_ebda ,_abe =_eadd ,_egca ;_cccb +=6;case 3:_ccd :=_gbga (_bdc [_cccb +1]);_caed :=_gbga (_bdc [_cccb +2]);_fdgc :=_gbga (_bdc [_cccb +3]);_ebdf :=_gbga (_bdc [_cccb +4]);_agbb :=_gbga (_bdc [_cccb +5]);_ccg :=_gbga (_bdc [_cccb +6]);_gde :=_dc (_ebda ,_abe ,_ccd ,_caed ,_fdgc ,_ebdf ,_agbb ,_ccg );_ecae =append (_ecae ,_gde ...);_ebda ,_abe =_agbb ,_ccg ;_cccb +=8;default:_fac .Log .Debug ("\u0057\u0041\u0052\u004e: \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0070\u0061\u0074\u0068\u003a\u0020%\u0076",_bdc );return _cfdf ;};};if len (_ecae )> 0{_cfdf =append (_cfdf ,_ecae );};return _cfdf ;};func (_dgd *Context )SetRGB (r ,g ,b float64 ){_dgd .SetRGBA (r ,g ,b ,1)};func (_agef *linearGradient )AddColorStop (offset float64 ,color _gf .Color ){_agef ._edbc =append (_agef ._edbc ,stop {_bg :offset ,_ebab :color });_d .Sort (_agef ._edbc );};func (_faa *Context )DrawLine (x1 ,y1 ,x2 ,y2 float64 ){_faa .MoveTo (x1 ,y1 );_faa .LineTo (x2 ,y2 )};func _babe (_cbgb ,_affa ,_afgb ,_bbf ,_cecf ,_dbdb float64 )_e .Gradient {_caa :=circle {_cbgb ,_affa ,_afgb };_dce :=circle {_bbf ,_cecf ,_dbdb };_fee :=circle {_bbf -_cbgb ,_cecf -_affa ,_dbdb -_afgb };_aad :=_cbf (_fee ._fag ,_fee ._bedg ,-_fee ._faeg ,_fee ._fag ,_fee ._bedg ,_fee ._faeg );var _dbec float64 ;if _aad !=0{_dbec =1.0/_aad ;};_dff :=-_caa ._faeg ;_bdfd :=&radialGradient {_gdc :_caa ,_baf :_dce ,_cgcg :_fee ,_afa :_aad ,_egae :_dbec ,_dbd :_dff };return _bdfd ;};func (_bbc *Context )Clear (){_bbgb :=_cb .NewUniform (_bbc ._ac );_ag .Draw (_bbc ._dcd ,_bbc ._dcd .Bounds (),_bbgb ,_cb .ZP ,_ag .Src );};func (_ddgg *Context )fill (_cacd _da .Painter ){_afg :=_ddgg ._gg ;if _ddgg ._bfeb {_afg =make (_da .Path ,len (_ddgg ._gg ));copy (_afg ,_ddgg ._gg );_afg .Add1 (_dbb (_ddgg ._ced ));};_gfc :=_ddgg ._de ;_gfc .UseNonZeroWinding =_ddgg ._egd ==_e .FillRuleWinding ;_gfc .Clear ();_gfc .AddPath (_afg );_gfc .Rasterize (_cacd );};func _fcb (_daed _cb .Image ,_ecbf repeatOp )_e .Pattern {return &surfacePattern {_efc :_daed ,_gcb :_ecbf };};func (_egc *Context )DrawCircle (x ,y ,r float64 ){_egc .NewSubPath ();_egc .DrawEllipticalArc (x ,y ,r ,r ,0,2*_g .Pi );_egc .ClosePath ();};func (_fdfe *Context )Image ()_cb .Image {return _fdfe ._dcd };func NewContextForImage (im _cb .Image )*Context {return NewContextForRGBA (_bddc (im ))};func (_edee *Context )SetLineJoin (lineJoin _e .LineJoin ){_edee ._bdef =lineJoin };func _cc (_cbe ,_ed ,_fc ,_bf ,_fd ,_ea ,_gc float64 )(_dae ,_edg float64 ){_be :=1-_gc ;_agg :=_be *_be ;_aa :=2*_be *_gc ;_ce :=_gc *_gc ;_dae =_agg *_cbe +_aa *_fc +_ce *_fd ;_edg =_agg *_ed +_aa *_bf +_ce *_ea ;return ;};func (_caea *Context )Push (){_eec :=*_caea ;_caea ._dgfg =append (_caea ._dgfg ,&_eec )};func _dbe (_ddac ,_bb ,_cf ,_ddb ,_bfe ,_df ,_eb ,_bbd ,_agb float64 )(_bdd ,_fb float64 ){_dde :=1-_agb ;_bde :=_dde *_dde *_dde ;_fbc :=3*_dde *_dde *_agb ;_bea :=3*_dde *_agb *_agb ;_fe :=_agb *_agb *_agb ;_bdd =_bde *_ddac +_fbc *_cf +_bea *_bfe +_fe *_eb ;_fb =_bde *_bb +_fbc *_ddb +_bea *_df +_fe *_bbd ;return ;};func (_acga *Context )Fill (){_acga .FillPreserve ();_acga .ClearPath ()};func (_ddg *Context )MoveTo (x ,y float64 ){if _ddg ._bfeb {_ddg ._gg .Add1 (_dbb (_ddg ._ced ));};x ,y =_ddg .Transform (x ,y );_deb :=_db .NewPoint (x ,y );_age :=_dbb (_deb );_ddg ._cac .Start (_age );_ddg ._gg .Start (_age );_ddg ._ced =_deb ;_ddg ._egg =_deb ;_ddg ._bfeb =true ;};func (_ggf *Context )ClipPreserve (){_adf :=_cb .NewAlpha (_cb .Rect (0,0,_ggf ._eg ,_ggf ._gfgd ));_agec :=_da .NewAlphaOverPainter (_adf );_ggf .fill (_agec );if _ggf ._beb ==nil {_ggf ._beb =_adf ;}else {_ege :=_cb .NewAlpha (_cb .Rect (0,0,_ggf ._eg ,_ggf ._gfgd ));_ag .DrawMask (_ege ,_ege .Bounds (),_adf ,_cb .ZP ,_ggf ._beb ,_cb .ZP ,_ag .Over );_ggf ._beb =_ege ;};};func (_bbb *Context )ClearPath (){_bbb ._cac .Clear ();_bbb ._gg .Clear ();_bbb ._bfeb =false };func (_gca *Context )QuadraticTo (x1 ,y1 ,x2 ,y2 float64 ){if !_gca ._bfeb {_gca .MoveTo (x1 ,y1 );};x1 ,y1 =_gca .Transform (x1 ,y1 );x2 ,y2 =_gca .Transform (x2 ,y2 );_bbab :=_db .NewPoint (x1 ,y1 );_gcaf :=_db .NewPoint (x2 ,y2 );_agbf :=_dbb (_bbab );_ddea :=_dbb (_gcaf );_gca ._cac .Add2 (_agbf ,_ddea );_gca ._gg .Add2 (_agbf ,_ddea );_gca ._egg =_gcaf ;};func (_dga *Context )LineWidth ()float64 {return _dga ._bba };func (_bab *radialGradient )ColorAt (x ,y int )_gf .Color {if len (_bab ._eefg )==0{return _gf .Transparent ;};_baa ,_bfb :=float64 (x )+0.5-_bab ._gdc ._fag ,float64 (y )+0.5-_bab ._gdc ._bedg ;_gfgf :=_cbf (_baa ,_bfb ,_bab ._gdc ._faeg ,_bab ._cgcg ._fag ,_bab ._cgcg ._bedg ,_bab ._cgcg ._faeg );_dbad :=_cbf (_baa ,_bfb ,-_bab ._gdc ._faeg ,_baa ,_bfb ,_bab ._gdc ._faeg );if _bab ._afa ==0{if _gfgf ==0{return _gf .Transparent ;};_fcaf :=0.5*_dbad /_gfgf ;if _fcaf *_bab ._cgcg ._faeg >=_bab ._dbd {return _dfae (_fcaf ,_bab ._eefg );};return _gf .Transparent ;};_dddf :=_cbf (_gfgf ,_bab ._afa ,0,_gfgf ,-_dbad ,0);if _dddf >=0{_beg :=_g .Sqrt (_dddf );_bbbb :=(_gfgf +_beg )*_bab ._egae ;_cdf :=(_gfgf -_beg )*_bab ._egae ;if _bbbb *_bab ._cgcg ._faeg >=_bab ._dbd {return _dfae (_bbbb ,_bab ._eefg );}else if _cdf *_bab ._cgcg ._faeg >=_bab ._dbd {return _dfae (_cdf ,_bab ._eefg );};};return _gf .Transparent ;};func NewContextForRGBA (im *_cb .RGBA )*Context {_gga :=im .Bounds ().Size ().X ;_bcd :=im .Bounds ().Size ().Y ;return &Context {_eg :_gga ,_gfgd :_bcd ,_de :_da .NewRasterizer (_gga ,_bcd ),_dcd :im ,_ac :_gf .Transparent ,_ab :_afd ,_abf :_ge ,_bba :1,_egd :_e .FillRuleWinding ,_abb :_db .IdentityMatrix (),_bcb :_e .NewTextState ()};};func _adc (_bga string )(_efd ,_gbg ,_egcd ,_cadd int ){_bga =_f .TrimPrefix (_bga ,"\u0023");_cadd =255;if len (_bga )==3{_dgbe :="\u00251\u0078\u0025\u0031\u0078\u0025\u0031x";_ae .Sscanf (_bga ,_dgbe ,&_efd ,&_gbg ,&_egcd );_efd |=_efd <<4;_gbg |=_gbg <<4;_egcd |=_egcd <<4;};if len (_bga )==6{_ggg :="\u0025\u0030\u0032x\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";_ae .Sscanf (_bga ,_ggg ,&_efd ,&_gbg ,&_egcd );};if len (_bga )==8{_dfaa :="\u0025\u00302\u0078\u0025\u00302\u0078\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";_ae .Sscanf (_bga ,_dfaa ,&_efd ,&_gbg ,&_egcd ,&_cadd );};return ;};func (_ecg *Context )Translate (x ,y float64 ){_ecg ._abb .Translate (x ,y )};func (_fcd *Context )LineTo (x ,y float64 ){if !_fcd ._bfeb {_fcd .MoveTo (x ,y );}else {x ,y =_fcd .Transform (x ,y );_cg :=_db .NewPoint (x ,y );_fea :=_dbb (_cg );_fcd ._cac .Add1 (_fea );_fcd ._gg .Add1 (_fea );_fcd ._egg =_cg ;};};func (_bcg *surfacePattern )ColorAt (x ,y int )_gf .Color {_bef :=_bcg ._efc .Bounds ();switch _bcg ._gcb {case _dgc :if y >=_bef .Dy (){return _gf .Transparent ;};case _agcd :if x >=_bef .Dx (){return _gf .Transparent ;};case _aabg :if x >=_bef .Dx ()||y >=_bef .Dy (){return _gf .Transparent ;};};x =x %_bef .Dx ()+_bef .Min .X ;y =y %_bef .Dy ()+_bef .Min .Y ;return _bcg ._efc .At (x ,y );};func (_dgeb stops )Less (i ,j int )bool {return _dgeb [i ]._bg < _dgeb [j ]._bg };func (_daf *Context )CubicTo (x1 ,y1 ,x2 ,y2 ,x3 ,y3 float64 ){if !_daf ._bfeb {_daf .MoveTo (x1 ,y1 );};_cfd ,_egf :=_daf ._egg .X ,_daf ._egg .Y ;x1 ,y1 =_daf .Transform (x1 ,y1 );x2 ,y2 =_daf .Transform (x2 ,y2 );x3 ,y3 =_daf .Transform (x3 ,y3 );_ef :=_dc (_cfd ,_egf ,x1 ,y1 ,x2 ,y2 ,x3 ,y3 );_edc :=_dbb (_daf ._egg );for _ ,_abd :=range _ef [1:]{_adg :=_dbb (_abd );if _adg ==_edc {continue ;};_edc =_adg ;_daf ._cac .Add1 (_adg );_daf ._gg .Add1 (_adg );_daf ._egg =_abd ;};};func (_efaf *Context )DrawImage (im _cb .Image ,x ,y int ){_efaf .DrawImageAnchored (im ,x ,y ,0,0)};func _eac (_bd ,_dbc ,_dab ,_cef ,_dda ,_dgg float64 )[]_db .Point {_gcc :=(_g .Hypot (_dab -_bd ,_cef -_dbc )+_g .Hypot (_dda -_dab ,_dgg -_cef ));_dbce :=int (_gcc +0.5);if _dbce < 4{_dbce =4;};_eag :=float64 (_dbce )-1;_fdf :=make ([]_db .Point ,_dbce );for _ede :=0;_ede < _dbce ;_ede ++{_ceg :=float64 (_ede )/_eag ;_fdc ,_dac :=_cc (_bd ,_dbc ,_dab ,_cef ,_dda ,_dgg ,_ceg );_fdf [_ede ]=_db .NewPoint (_fdc ,_dac );};return _fdf ;};type stops []stop ;func (_dba *Context )SetLineCap (lineCap _e .LineCap ){_dba ._bbg =lineCap };