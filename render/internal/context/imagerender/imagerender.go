//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package imagerender ;import (_afa "errors";_cd "fmt";_bg "github.com/golang/freetype/raster";_dd "github.com/unidoc/unipdf/v3/common";_df "github.com/unidoc/unipdf/v3/internal/transform";_f "github.com/unidoc/unipdf/v3/render/internal/context";_aa "golang.org/x/image/draw";_aac "golang.org/x/image/font";_ca "golang.org/x/image/math/f64";_ag "golang.org/x/image/math/fixed";_ba "image";_b "image/color";_af "image/draw";_g "math";_a "sort";_d "strings";);func _fa (_cg ,_ffa ,_gec ,_da ,_de ,_ed ,_edb ,_gc ,_adb float64 )(_fab ,_ebe float64 ){_cdd :=1-_adb ;_ee :=_cdd *_cdd *_cdd ;_ce :=3*_cdd *_cdd *_adb ;_cae :=3*_cdd *_adb *_adb ;_ga :=_adb *_adb *_adb ;_fab =_ee *_cg +_ce *_gec +_cae *_de +_ga *_edb ;_ebe =_ee *_ffa +_ce *_da +_cae *_ed +_ga *_gc ;return ;};func (_adc *Context )setFillAndStrokeColor (_dbad _b .Color ){_adc ._daa =_dbad ;_adc ._bfdf =_bdcg (_dbad );_adc ._ecf =_bdcg (_dbad );};func (_gac *Context )DrawCircle (x ,y ,r float64 ){_gac .NewSubPath ();_gac .DrawEllipticalArc (x ,y ,r ,r ,0,2*_g .Pi );_gac .ClosePath ();};func (_bcg *Context )Rotate (angle float64 ){_bcg ._dfa .Rotate (angle )};func (_bded *Context )DrawEllipse (x ,y ,rx ,ry float64 ){_bded .NewSubPath ();_bded .DrawEllipticalArc (x ,y ,rx ,ry ,0,2*_g .Pi );_bded .ClosePath ();};func (_aaa *Context )SetMatrix (m _df .Matrix ){_aaa ._dfa =m };func _fgad (_gcc _bg .Path )[][]_df .Point {var _edab [][]_df .Point ;var _geg []_df .Point ;var _efc ,_gaac float64 ;for _dge :=0;_dge < len (_gcc );{switch _gcc [_dge ]{case 0:if len (_geg )> 0{_edab =append (_edab ,_geg );_geg =nil ;};_eee :=_fbgf (_gcc [_dge +1]);_efca :=_fbgf (_gcc [_dge +2]);_geg =append (_geg ,_df .NewPoint (_eee ,_efca ));_efc ,_gaac =_eee ,_efca ;_dge +=4;case 1:_gaec :=_fbgf (_gcc [_dge +1]);_cfgc :=_fbgf (_gcc [_dge +2]);_geg =append (_geg ,_df .NewPoint (_gaec ,_cfgc ));_efc ,_gaac =_gaec ,_cfgc ;_dge +=4;case 2:_fbeg :=_fbgf (_gcc [_dge +1]);_gfg :=_fbgf (_gcc [_dge +2]);_ebb :=_fbgf (_gcc [_dge +3]);_fcfg :=_fbgf (_gcc [_dge +4]);_gefcc :=_ge (_efc ,_gaac ,_fbeg ,_gfg ,_ebb ,_fcfg );_geg =append (_geg ,_gefcc ...);_efc ,_gaac =_ebb ,_fcfg ;_dge +=6;case 3:_efaf :=_fbgf (_gcc [_dge +1]);_aebe :=_fbgf (_gcc [_dge +2]);_egg :=_fbgf (_gcc [_dge +3]);_deeg :=_fbgf (_gcc [_dge +4]);_aabb :=_fbgf (_gcc [_dge +5]);_cgfg :=_fbgf (_gcc [_dge +6]);_bed :=_gcf (_efc ,_gaac ,_efaf ,_aebe ,_egg ,_deeg ,_aabb ,_cgfg );_geg =append (_geg ,_bed ...);_efc ,_gaac =_aabb ,_cgfg ;_dge +=8;default:_dd .Log .Debug ("\u0057\u0041\u0052\u004e: \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0070\u0061\u0074\u0068\u003a\u0020%\u0076",_gcc );return _edab ;};};if len (_geg )> 0{_edab =append (_edab ,_geg );};return _edab ;};func (_daf *Context )SetHexColor (x string ){_ggg ,_gde ,_ede ,_gecb :=_dfee (x );_daf .SetRGBA255 (_ggg ,_gde ,_ede ,_gecb );};func (_gag *Context )SetRGBA (r ,g ,b ,a float64 ){_gag ._daa =_b .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_gag .setFillAndStrokeColor (_gag ._daa );};func (_faa *Context )SetRGBA255 (r ,g ,b ,a int ){_faa ._daa =_b .NRGBA {uint8 (r ),uint8 (g ),uint8 (b ),uint8 (a )};_faa .setFillAndStrokeColor (_faa ._daa );};func _cffg (_efa ,_fac ,_fddd ,_eag ,_egab ,_eaf float64 )float64 {return _efa *_eag +_fac *_egab +_fddd *_eaf ;};func (_deg *Context )ShearAbout (sx ,sy ,x ,y float64 ){_deg .Translate (x ,y );_deg .Shear (sx ,sy );_deg .Translate (-x ,-y );};func (_fgc *Context )SetLineJoin (lineJoin _f .LineJoin ){_fgc ._ea =lineJoin };type repeatOp int ;func (_aae *Context )SetMask (mask *_ba .Alpha )error {if mask .Bounds ().Size ()!=_aae ._acb .Bounds ().Size (){return _afa .New ("\u006d\u0061\u0073\u006b\u0020\u0073i\u007a\u0065\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068 \u0063\u006f\u006e\u0074\u0065\u0078\u0074 \u0073\u0069\u007a\u0065");};_aae ._ae =mask ;return nil ;};func (_gee *Context )DrawLine (x1 ,y1 ,x2 ,y2 float64 ){_gee .MoveTo (x1 ,y1 );_gee .LineTo (x2 ,y2 )};func (_dga *Context )LineWidth ()float64 {return _dga ._dba };func (_bgga *Context )QuadraticTo (x1 ,y1 ,x2 ,y2 float64 ){if !_bgga ._ef {_bgga .MoveTo (x1 ,y1 );};x1 ,y1 =_bgga .Transform (x1 ,y1 );x2 ,y2 =_bgga .Transform (x2 ,y2 );_egd :=_df .NewPoint (x1 ,y1 );_gca :=_df .NewPoint (x2 ,y2 );_ddc :=_dfg (_egd );_dafe :=_dfg (_gca );_bgga ._dbe .Add2 (_ddc ,_dafe );_bgga ._gdfd .Add2 (_ddc ,_dafe );_bgga ._edc =_gca ;};func (_fde *Context )MeasureString (s string )(_cbbg ,_afb float64 ){_feg :=&_aac .Drawer {Face :_fde ._ebg .Tf .Face };_ecd :=_feg .MeasureString (s );return float64 (_ecd >>6),_fde ._ebg .Tf .Size ;};func (_dea *Context )SetStrokeStyle (pattern _f .Pattern ){_dea ._ecf =pattern };func (_egfb *Context )Push (){_bbb :=*_egfb ;_egfb ._bde =append (_egfb ._bde ,&_bbb )};func (_fdcg *Context )Scale (x ,y float64 ){_fdcg ._dfa .Scale (x ,y )};func _ebgd (_dab float64 ,_dgb stops )_b .Color {if _dab <=0.0||len (_dgb )==1{return _dgb [0]._bafe ;};_eccc :=_dgb [len (_dgb )-1];if _dab >=_eccc ._bgb {return _eccc ._bafe ;};for _ccf ,_cbcg :=range _dgb [1:]{if _dab < _cbcg ._bgb {_dab =(_dab -_dgb [_ccf ]._bgb )/(_cbcg ._bgb -_dgb [_ccf ]._bgb );return _eaa (_dgb [_ccf ]._bafe ,_cbcg ._bafe ,_dab );};};return _eccc ._bafe ;};func (_eefc *Context )Clip (){_eefc .ClipPreserve ();_eefc .ClearPath ()};func _gcf (_fcf ,_gb ,_bfd ,_bgg ,_cff ,_cced ,_fabd ,_edbe float64 )[]_df .Point {_gd :=(_g .Hypot (_bfd -_fcf ,_bgg -_gb )+_g .Hypot (_cff -_bfd ,_cced -_bgg )+_g .Hypot (_fabd -_cff ,_edbe -_cced ));_fcd :=int (_gd +0.5);if _fcd < 4{_fcd =4;};_ace :=float64 (_fcd )-1;_gdf :=make ([]_df .Point ,_fcd );for _gbd :=0;_gbd < _fcd ;_gbd ++{_cef :=float64 (_gbd )/_ace ;_gg ,_dfc :=_fa (_fcf ,_gb ,_bfd ,_bgg ,_cff ,_cced ,_fabd ,_edbe ,_cef );_gdf [_gbd ]=_df .NewPoint (_gg ,_dfc );};return _gdf ;};func (_gfe *Context )StrokePreserve (){var _cge _bg .Painter ;if _gfe ._ae ==nil {if _efb ,_gae :=_gfe ._ecf .(*solidPattern );_gae {_dcc :=_bg .NewRGBAPainter (_gfe ._acb );_dcc .SetColor (_efb ._ffbf );_cge =_dcc ;};};if _cge ==nil {_cge =_bbga (_gfe ._acb ,_gfe ._ae ,_gfe ._ecf );};_gfe .stroke (_cge );};func _fbgf (_gafdb _ag .Int26_6 )float64 {const _aaag ,_facfb =6,1<<6-1;if _gafdb >=0{return float64 (_gafdb >>_aaag )+float64 (_gafdb &_facfb )/64;};_gafdb =-_gafdb ;if _gafdb >=0{return -(float64 (_gafdb >>_aaag )+float64 (_gafdb &_facfb )/64);};return 0;};type solidPattern struct{_ffbf _b .Color };func _bdcg (_agb _b .Color )_f .Pattern {return &solidPattern {_ffbf :_agb }};func (_egf *Context )drawRegularPolygon (_fe int ,_eec ,_fcc ,_deb ,_efgf float64 ){_gdb :=2*_g .Pi /float64 (_fe );_efgf -=_g .Pi /2;if _fe %2==0{_efgf +=_gdb /2;};_egf .NewSubPath ();for _dde :=0;_dde < _fe ;_dde ++{_gfb :=_efgf +_gdb *float64 (_dde );_egf .LineTo (_eec +_deb *_g .Cos (_gfb ),_fcc +_deb *_g .Sin (_gfb ));};_egf .ClosePath ();};func _bbeb (_fdg float64 )_ag .Int26_6 {return _ag .Int26_6 (_fdg *64)};func _ddd (_ccgd float64 )float64 {return _ccgd *_g .Pi /180};func NewContext (width ,height int )*Context {return NewContextForRGBA (_ba .NewRGBA (_ba .Rect (0,0,width ,height )));};func (_caf *Context )SetPixel (x ,y int ){_caf ._acb .Set (x ,y ,_caf ._daa )};func _ceb (_ccgb ,_efbf ,_bdg ,_abb float64 )_f .Gradient {_abg :=&linearGradient {_eeb :_ccgb ,_gefc :_efbf ,_aab :_bdg ,_bbe :_abb };return _abg ;};func (_abc *linearGradient )ColorAt (x ,y int )_b .Color {if len (_abc ._ggdf )==0{return _b .Transparent ;};_cdb ,_dbda :=float64 (x ),float64 (y );_gfbf ,_cafg ,_daff ,_fgae :=_abc ._eeb ,_abc ._gefc ,_abc ._aab ,_abc ._bbe ;_dgd ,_ecdc :=_daff -_gfbf ,_fgae -_cafg ;if _ecdc ==0&&_dgd !=0{return _ebgd ((_cdb -_gfbf )/_dgd ,_abc ._ggdf );};if _dgd ==0&&_ecdc !=0{return _ebgd ((_dbda -_cafg )/_ecdc ,_abc ._ggdf );};_cgea :=_dgd *(_cdb -_gfbf )+_ecdc *(_dbda -_cafg );if _cgea < 0{return _abc ._ggdf [0]._bafe ;};_debc :=_g .Hypot (_dgd ,_ecdc );_bdc :=((_cdb -_gfbf )*-_ecdc +(_dbda -_cafg )*_dgd )/(_debc *_debc );_egfd ,_bda :=_gfbf +_bdc *-_ecdc ,_cafg +_bdc *_dgd ;_cegb :=_g .Hypot (_cdb -_egfd ,_dbda -_bda )/_debc ;return _ebgd (_cegb ,_abc ._ggdf );};func (_agd *Context )MoveTo (x ,y float64 ){if _agd ._ef {_agd ._gdfd .Add1 (_dfg (_agd ._afc ));};x ,y =_agd .Transform (x ,y );_gff :=_df .NewPoint (x ,y );_cba :=_dfg (_gff );_agd ._dbe .Start (_cba );_agd ._gdfd .Start (_cba );_agd ._afc =_gff ;_agd ._edc =_gff ;_agd ._ef =true ;};func (_cab *Context )DrawArc (x ,y ,r ,angle1 ,angle2 float64 ){_cab .DrawEllipticalArc (x ,y ,r ,r ,angle1 ,angle2 );};func (_aca *Context )Height ()int {return _aca ._ec };func (_ddf *Context )SetDashOffset (offset float64 ){_ddf ._eff =offset };type patternPainter struct{_agda *_ba .RGBA ;_ebf *_ba .Alpha ;_afaa _f .Pattern ;};func (_dee *Context )SetColor (c _b .Color ){_dee .setFillAndStrokeColor (c )};func (_dfae *Context )AsMask ()*_ba .Alpha {_ffc :=_ba .NewAlpha (_dfae ._acb .Bounds ());_aa .Draw (_ffc ,_dfae ._acb .Bounds (),_dfae ._acb ,_ba .Point {},_aa .Src );return _ffc ;};func (_aebd *Context )Identity (){_aebd ._dfa =_df .IdentityMatrix ()};func (_afe *Context )joiner ()_bg .Joiner {switch _afe ._ea {case _f .LineJoinBevel :return _bg .BevelJoiner ;case _f .LineJoinRound :return _bg .RoundJoiner ;};return nil ;};func (_cdc *Context )InvertMask (){if _cdc ._ae ==nil {_cdc ._ae =_ba .NewAlpha (_cdc ._acb .Bounds ());}else {for _eac ,_ded :=range _cdc ._ae .Pix {_cdc ._ae .Pix [_eac ]=255-_ded ;};};};func (_ebgg *Context )Clear (){_agc :=_ba .NewUniform (_ebgg ._daa );_aa .Draw (_ebgg ._acb ,_ebgg ._acb .Bounds (),_agc ,_ba .Point {},_aa .Src );};func (_fda *Context )capper ()_bg .Capper {switch _fda ._eea {case _f .LineCapButt :return _bg .ButtCapper ;case _f .LineCapRound :return _bg .RoundCapper ;case _f .LineCapSquare :return _bg .SquareCapper ;};return nil ;};func (_adf *Context )SetDash (dashes ...float64 ){_adf ._cad =dashes };func (_ecc *Context )Stroke (){_ecc .StrokePreserve ();_ecc .ClearPath ()};func _geb (_eeeb [][]_df .Point )_bg .Path {var _dbgf _bg .Path ;for _ ,_fcb :=range _eeeb {var _bfg _ag .Point26_6 ;for _dccc ,_geaf :=range _fcb {_badc :=_dfg (_geaf );if _dccc ==0{_dbgf .Start (_badc );}else {_gcab :=_badc .X -_bfg .X ;_gbe :=_badc .Y -_bfg .Y ;if _gcab < 0{_gcab =-_gcab ;};if _gbe < 0{_gbe =-_gbe ;};if _gcab +_gbe > 8{_dbgf .Add1 (_badc );};};_bfg =_badc ;};};return _dbgf ;};func _ge (_cc ,_db ,_bf ,_ged ,_cb ,_dg float64 )[]_df .Point {_cce :=(_g .Hypot (_bf -_cc ,_ged -_db )+_g .Hypot (_cb -_bf ,_dg -_ged ));_eb :=int (_cce +0.5);if _eb < 4{_eb =4;};_fg :=float64 (_eb )-1;_cbb :=make ([]_df .Point ,_eb );for _bee :=0;_bee < _eb ;_bee ++{_fbb :=float64 (_bee )/_fg ;_cbbc ,_ab :=_fb (_cc ,_db ,_bf ,_ged ,_cb ,_dg ,_fbb );_cbb [_bee ]=_df .NewPoint (_cbbc ,_ab );};return _cbb ;};func (_gaee *Context )FillPreserve (){var _cbc _bg .Painter ;if _gaee ._ae ==nil {if _eef ,_cbg :=_gaee ._bfdf .(*solidPattern );_cbg {_caef :=_bg .NewRGBAPainter (_gaee ._acb );_caef .SetColor (_eef ._ffbf );_cbc =_caef ;};};if _cbc ==nil {_cbc =_bbga (_gaee ._acb ,_gaee ._ae ,_gaee ._bfdf );};_gaee .fill (_cbc );};func (_eba *radialGradient )ColorAt (x ,y int )_b .Color {if len (_eba ._aec )==0{return _b .Transparent ;};_fbaf ,_aecc :=float64 (x )+0.5-_eba ._ddec ._cfe ,float64 (y )+0.5-_eba ._ddec ._ece ;_gaga :=_cffg (_fbaf ,_aecc ,_eba ._ddec ._edce ,_eba ._gcfb ._cfe ,_eba ._gcfb ._ece ,_eba ._gcfb ._edce );_cac :=_cffg (_fbaf ,_aecc ,-_eba ._ddec ._edce ,_fbaf ,_aecc ,_eba ._ddec ._edce );if _eba ._gbde ==0{if _gaga ==0{return _b .Transparent ;};_ccc :=0.5*_cac /_gaga ;if _ccc *_eba ._gcfb ._edce >=_eba ._fbd {return _ebgd (_ccc ,_eba ._aec );};return _b .Transparent ;};_eagc :=_cffg (_gaga ,_eba ._gbde ,0,_gaga ,-_cac ,0);if _eagc >=0{_cee :=_g .Sqrt (_eagc );_dgdc :=(_gaga +_cee )*_eba ._cefg ;_bafg :=(_gaga -_cee )*_eba ._cefg ;if _dgdc *_eba ._gcfb ._edce >=_eba ._fbd {return _ebgd (_dgdc ,_eba ._aec );}else if _bafg *_eba ._gcfb ._edce >=_eba ._fbd {return _ebgd (_bafg ,_eba ._aec );};};return _b .Transparent ;};func (_acag *Context )SetRGB255 (r ,g ,b int ){_acag .SetRGBA255 (r ,g ,b ,255)};func _fb (_dfb ,_ad ,_be ,_bac ,_e ,_gf ,_afd float64 )(_ff ,_ac float64 ){_cf :=1-_afd ;_afab :=_cf *_cf ;_fc :=2*_cf *_afd ;_bd :=_afd *_afd ;_ff =_afab *_dfb +_fc *_be +_bd *_e ;_ac =_afab *_ad +_fc *_bac +_bd *_gf ;return ;};func (_bc *Context )fill (_dcf _bg .Painter ){_efgg :=_bc ._gdfd ;if _bc ._ef {_efgg =make (_bg .Path ,len (_bc ._gdfd ));copy (_efgg ,_bc ._gdfd );_efgg .Add1 (_dfg (_bc ._afc ));};_fce :=_bc ._ggd ;_fce .UseNonZeroWinding =_bc ._dcd ==_f .FillRuleWinding ;_fce .Clear ();_fce .AddPath (_efgg );_fce .Rasterize (_dcf );};func (_ced *Context )drawString (_fcg *_ba .RGBA ,_ebeg string ,_edg ,_aag float64 ){_aea :=&_aac .Drawer {Dst :_fcg ,Src :_ba .NewUniform (_ced ._daa ),Face :_ced ._ebg .Tf .Face ,Dot :_dfg (_df .NewPoint (_edg ,_aag ))};_gdbb :=rune (-1);for _ ,_gdg :=range _ebeg {if _gdbb >=0{_aea .Dot .X +=_aea .Face .Kern (_gdbb ,_gdg );};_bbd ,_cga ,_adba ,_bgd ,_deeb :=_aea .Face .Glyph (_aea .Dot ,_gdg );if !_deeb {continue ;};_gea :=_bbd .Sub (_bbd .Min );_fee :=_aa .BiLinear ;_eeg :=_ced ._dfa .Clone ();_eeg .Translate (float64 (_bbd .Min .X ),float64 (_bbd .Min .Y ));_aacc :=_ca .Aff3 {_eeg [0],_eeg [3],_eeg [6],_eeg [1],_eeg [4],_eeg [7]};_fee .Transform (_aea .Dst ,_aacc ,_aea .Src ,_gea ,_aa .Over ,&_aa .Options {SrcMask :_cga ,SrcMaskP :_adba });_aea .Dot .X +=_bgd ;_gdbb =_gdg ;};};func _ggge (_faab ,_dfcd uint32 ,_gdcd float64 )uint8 {return uint8 (int32 (float64 (_faab )*(1.0-_gdcd )+float64 (_dfcd )*_gdcd )>>8);};func (_fga *Context )RotateAbout (angle ,x ,y float64 ){_fga .Translate (x ,y );_fga .Rotate (angle );_fga .Translate (-x ,-y );};func NewContextForImage (im _ba .Image )*Context {return NewContextForRGBA (_fcdf (im ))};func (_gffc *Context )Shear (x ,y float64 ){_gffc ._dfa .Shear (x ,y )};func (_dfd *Context )Transform (x ,y float64 )(_dcgc ,_bef float64 ){return _dfd ._dfa .Transform (x ,y )};func (_dcg *Context )ClosePath (){if _dcg ._ef {_cadb :=_dfg (_dcg ._afc );_dcg ._dbe .Add1 (_cadb );_dcg ._gdfd .Add1 (_cadb );_dcg ._edc =_dcg ._afc ;};};func _bbga (_gbf *_ba .RGBA ,_fafd *_ba .Alpha ,_gbfc _f .Pattern )*patternPainter {return &patternPainter {_gbf ,_fafd ,_gbfc };};func _dfg (_ebcd _df .Point )_ag .Point26_6 {return _ag .Point26_6 {X :_bbeb (_ebcd .X ),Y :_bbeb (_ebcd .Y )}};func (_baf *Context )Matrix ()_df .Matrix {return _baf ._dfa };func (_bgbe stops )Less (i ,j int )bool {return _bgbe [i ]._bgb < _bgbe [j ]._bgb };func _geag (_cgg _bg .Path ,_cbe []float64 ,_aeg float64 )_bg .Path {return _geb (_adce (_fgad (_cgg ),_cbe ,_aeg ));};func (_gga *Context )DrawStringAnchored (s string ,x ,y ,ax ,ay float64 ){_fbg ,_gaf :=_gga .MeasureString (s );x -=ax *_fbg ;y +=ay *_gaf ;if _gga ._ae ==nil {_gga .drawString (_gga ._acb ,s ,x ,y );}else {_aggd :=_ba .NewRGBA (_ba .Rect (0,0,_gga ._dc ,_gga ._ec ));_gga .drawString (_aggd ,s ,x ,y );_aa .DrawMask (_gga ._acb ,_gga ._acb .Bounds (),_aggd ,_ba .Point {},_gga ._ae ,_ba .Point {},_aa .Over );};};type stop struct{_bgb float64 ;_bafe _b .Color ;};func (_eg *Context )Width ()int {return _eg ._dc };func (_aef *Context )Fill (){_aef .FillPreserve ();_aef .ClearPath ()};func _eaa (_dfdd ,_gafd _b .Color ,_cbcd float64 )_b .Color {_ffea ,_egfbe ,_fbgd ,_ggc :=_dfdd .RGBA ();_eca ,_fbe ,_beb ,_gedf :=_gafd .RGBA ();return _b .RGBA {_ggge (_ffea ,_eca ,_cbcd ),_ggge (_egfbe ,_fbe ,_cbcd ),_ggge (_fbgd ,_beb ,_cbcd ),_ggge (_ggc ,_gedf ,_cbcd )};};type Context struct{_dc int ;_ec int ;_ggd *_bg .Rasterizer ;_acb *_ba .RGBA ;_ae *_ba .Alpha ;_daa _b .Color ;_bfdf _f .Pattern ;_ecf _f .Pattern ;_dbe _bg .Path ;_gdfd _bg .Path ;_afc _df .Point ;_edc _df .Point ;_ef bool ;_cad []float64 ;_eff float64 ;_dba float64 ;_eea _f .LineCap ;_ea _f .LineJoin ;_dcd _f .FillRule ;_dfa _df .Matrix ;_ebg *_f .TextState ;_bde []*Context ;};func (_cedb *surfacePattern )ColorAt (x ,y int )_b .Color {_fgada :=_cedb ._fbc .Bounds ();switch _cedb ._ffbc {case _facf :if y >=_fgada .Dy (){return _b .Transparent ;};case _acf :if x >=_fgada .Dx (){return _b .Transparent ;};case _fcad :if x >=_fgada .Dx ()||y >=_fgada .Dy (){return _b .Transparent ;};};x =x %_fgada .Dx ()+_fgada .Min .X ;y =y %_fgada .Dy ()+_fgada .Min .Y ;return _cedb ._fbc .At (x ,y );};func (_fgb *Context )NewSubPath (){if _fgb ._ef {_fgb ._gdfd .Add1 (_dfg (_fgb ._afc ));};_fgb ._ef =false ;};func (_aaf *Context )DrawRoundedRectangle (x ,y ,w ,h ,r float64 ){_abd ,_cfg ,_fca ,_aaef :=x ,x +r ,x +w -r ,x +w ;_dccb ,_gge ,_baaf ,_acee :=y ,y +r ,y +h -r ,y +h ;_aaf .NewSubPath ();_aaf .MoveTo (_cfg ,_dccb );_aaf .LineTo (_fca ,_dccb );_aaf .DrawArc (_fca ,_gge ,r ,_ddd (270),_ddd (360));_aaf .LineTo (_aaef ,_baaf );_aaf .DrawArc (_fca ,_baaf ,r ,_ddd (0),_ddd (90));_aaf .LineTo (_cfg ,_acee );_aaf .DrawArc (_cfg ,_baaf ,r ,_ddd (90),_ddd (180));_aaf .LineTo (_abd ,_gge );_aaf .DrawArc (_cfg ,_gge ,r ,_ddd (180),_ddd (270));_aaf .ClosePath ();};func (_ecb stops )Len ()int {return len (_ecb )};func (_fddg *solidPattern )ColorAt (x ,y int )_b .Color {return _fddg ._ffbf };var (_dbb =_bdcg (_b .White );_dfe =_bdcg (_b .Black ););func (_eda *Context )SetFillRule (fillRule _f .FillRule ){_eda ._dcd =fillRule };func (_bca *Context )Translate (x ,y float64 ){_bca ._dfa .Translate (x ,y )};func _cbcgg (_ffba _ba .Image ,_cceg repeatOp )_f .Pattern {return &surfacePattern {_fbc :_ffba ,_ffbc :_cceg };};func (_gaab *patternPainter )Paint (ss []_bg .Span ,done bool ){_egbd :=_gaab ._agda .Bounds ();for _ ,_ada :=range ss {if _ada .Y < _egbd .Min .Y {continue ;};if _ada .Y >=_egbd .Max .Y {return ;};if _ada .X0 < _egbd .Min .X {_ada .X0 =_egbd .Min .X ;};if _ada .X1 > _egbd .Max .X {_ada .X1 =_egbd .Max .X ;};if _ada .X0 >=_ada .X1 {continue ;};const _adg =1<<16-1;_bff :=_ada .Y -_gaab ._agda .Rect .Min .Y ;_faaf :=_ada .X0 -_gaab ._agda .Rect .Min .X ;_bgea :=(_ada .Y -_gaab ._agda .Rect .Min .Y )*_gaab ._agda .Stride +(_ada .X0 -_gaab ._agda .Rect .Min .X )*4;_aaff :=_bgea +(_ada .X1 -_ada .X0 )*4;for _gdca ,_ggeg :=_bgea ,_faaf ;_gdca < _aaff ;_gdca ,_ggeg =_gdca +4,_ggeg +1{_effe :=_ada .Alpha ;if _gaab ._ebf !=nil {_effe =_effe *uint32 (_gaab ._ebf .AlphaAt (_ggeg ,_bff ).A )/255;if _effe ==0{continue ;};};_bcgd :=_gaab ._afaa .ColorAt (_ggeg ,_bff );_bbgb ,_cccb ,_cbed ,_ffce :=_bcgd .RGBA ();_eccf :=uint32 (_gaab ._agda .Pix [_gdca +0]);_fccg :=uint32 (_gaab ._agda .Pix [_gdca +1]);_eae :=uint32 (_gaab ._agda .Pix [_gdca +2]);_cfa :=uint32 (_gaab ._agda .Pix [_gdca +3]);_cacg :=(_adg -(_ffce *_effe /_adg ))*0x101;_gaab ._agda .Pix [_gdca +0]=uint8 ((_eccf *_cacg +_bbgb *_effe )/_adg >>8);_gaab ._agda .Pix [_gdca +1]=uint8 ((_fccg *_cacg +_cccb *_effe )/_adg >>8);_gaab ._agda .Pix [_gdca +2]=uint8 ((_eae *_cacg +_cbed *_effe )/_adg >>8);_gaab ._agda .Pix [_gdca +3]=uint8 ((_cfa *_cacg +_ffce *_effe )/_adg >>8);};};};func (_eddc *Context )LineTo (x ,y float64 ){if !_eddc ._ef {_eddc .MoveTo (x ,y );}else {x ,y =_eddc .Transform (x ,y );_age :=_df .NewPoint (x ,y );_dbc :=_dfg (_age );_eddc ._dbe .Add1 (_dbc );_eddc ._gdfd .Add1 (_dbc );_eddc ._edc =_age ;};};func (_gdef *Context )ClearPath (){_gdef ._dbe .Clear ();_gdef ._gdfd .Clear ();_gdef ._ef =false };type surfacePattern struct{_fbc _ba .Image ;_ffbc repeatOp ;};func (_fdd *Context )SetFillRGBA (r ,g ,b ,a float64 ){_ffd :=_b .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_fdd ._daa =_ffd ;_fdd ._bfdf =_bdcg (_ffd );};func (_dad *Context )SetLineCap (lineCap _f .LineCap ){_dad ._eea =lineCap };func (_dbdc *Context )Pop (){_caee :=*_dbdc ;_cfgg :=_dbdc ._bde ;_cgf :=_cfgg [len (_cfgg )-1];*_dbdc =*_cgf ;_dbdc ._dbe =_caee ._dbe ;_dbdc ._gdfd =_caee ._gdfd ;_dbdc ._afc =_caee ._afc ;_dbdc ._edc =_caee ._edc ;_dbdc ._ef =_caee ._ef ;_dbdc ._ebg =_caee ._ebg ;};func (_gcba *radialGradient )AddColorStop (offset float64 ,color _b .Color ){_gcba ._aec =append (_gcba ._aec ,stop {_bgb :offset ,_bafe :color });_a .Sort (_gcba ._aec );};func (_bge *Context )stroke (_bb _bg .Painter ){_abee :=_bge ._dbe ;if len (_bge ._cad )> 0{_abee =_geag (_abee ,_bge ._cad ,_bge ._eff );}else {_abee =_geb (_fgad (_abee ));};_dbbg :=_bge ._ggd ;_dbbg .UseNonZeroWinding =true ;_dbbg .Clear ();_dbbg .AddStroke (_abee ,_bbeb (_bge ._dba ),_bge .capper (),_bge .joiner ());_dbbg .Rasterize (_bb );};func (_bgc *Context )DrawRectangle (x ,y ,w ,h float64 ){_bgc .NewSubPath ();_bgc .MoveTo (x ,y );_bgc .LineTo (x +w ,y );_bgc .LineTo (x +w ,y +h );_bgc .LineTo (x ,y +h );_bgc .ClosePath ();};func (_aeb *Context )DrawEllipticalArc (x ,y ,rx ,ry ,angle1 ,angle2 float64 ){const _faf =16;for _fdc :=0;_fdc < _faf ;_fdc ++{_gaa :=float64 (_fdc +0)/_faf ;_ead :=float64 (_fdc +1)/_faf ;_edef :=angle1 +(angle2 -angle1 )*_gaa ;_efgc :=angle1 +(angle2 -angle1 )*_ead ;_ffb :=x +rx *_g .Cos (_edef );_ega :=y +ry *_g .Sin (_edef );_dbd :=x +rx *_g .Cos ((_edef +_efgc )/2);_eefcg :=y +ry *_g .Sin ((_edef +_efgc )/2);_ccg :=x +rx *_g .Cos (_efgc );_ceg :=y +ry *_g .Sin (_efgc );_cegf :=2*_dbd -_ffb /2-_ccg /2;_dbcc :=2*_eefcg -_ega /2-_ceg /2;if _fdc ==0{if _aeb ._ef {_aeb .LineTo (_ffb ,_ega );}else {_aeb .MoveTo (_ffb ,_ega );};};_aeb .QuadraticTo (_cegf ,_dbcc ,_ccg ,_ceg );};};func _dfee (_ege string )(_eage ,_dda ,_eceb ,_bdgc int ){_ege =_d .TrimPrefix (_ege ,"\u0023");_bdgc =255;if len (_ege )==3{_gafa :="\u00251\u0078\u0025\u0031\u0078\u0025\u0031x";_cd .Sscanf (_ege ,_gafa ,&_eage ,&_dda ,&_eceb );_eage |=_eage <<4;_dda |=_dda <<4;_eceb |=_eceb <<4;};if len (_ege )==6{_bfe :="\u0025\u0030\u0032x\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";_cd .Sscanf (_ege ,_bfe ,&_eage ,&_dda ,&_eceb );};if len (_ege )==8{_eagd :="\u0025\u00302\u0078\u0025\u00302\u0078\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";_cd .Sscanf (_ege ,_eagd ,&_eage ,&_dda ,&_eceb ,&_bdgc );};return ;};func (_adcf *Context )DrawImage (im _ba .Image ,x ,y int ){_adcf .DrawImageAnchored (im ,x ,y ,0,0)};func (_dgad *Context )DrawPoint (x ,y ,r float64 ){_dgad .Push ();_egdg ,_cbf :=_dgad .Transform (x ,y );_dgad .Identity ();_dgad .DrawCircle (_egdg ,_cbf ,r );_dgad .Pop ();};func _adce (_ddef [][]_df .Point ,_afabb []float64 ,_ebc float64 )[][]_df .Point {var _fgce [][]_df .Point ;if len (_afabb )==0{return _ddef ;};if len (_afabb )==1{_afabb =append (_afabb ,_afabb [0]);};for _ ,_ade :=range _ddef {if len (_ade )< 2{continue ;};_cefd :=_ade [0];_gdefc :=1;_ccd :=0;_abgd :=0.0;if _ebc !=0{var _dgdd float64 ;for _ ,_dff :=range _afabb {_dgdd +=_dff ;};_ebc =_g .Mod (_ebc ,_dgdd );if _ebc < 0{_ebc +=_dgdd ;};for _bdd ,_aagg :=range _afabb {_ebc -=_aagg ;if _ebc < 0{_ccd =_bdd ;_abgd =_aagg +_ebc ;break ;};};};var _ggae []_df .Point ;_ggae =append (_ggae ,_cefd );for _gdefc < len (_ade ){_bgda :=_afabb [_ccd ];_gbc :=_ade [_gdefc ];_cfc :=_cefd .Distance (_gbc );_dae :=_bgda -_abgd ;if _cfc > _dae {_gdge :=_dae /_cfc ;_effa :=_cefd .Interpolate (_gbc ,_gdge );_ggae =append (_ggae ,_effa );if _ccd %2==0&&len (_ggae )> 1{_fgce =append (_fgce ,_ggae );};_ggae =nil ;_ggae =append (_ggae ,_effa );_abgd =0;_cefd =_effa ;_ccd =(_ccd +1)%len (_afabb );}else {_ggae =append (_ggae ,_gbc );_cefd =_gbc ;_abgd +=_cfc ;_gdefc ++;};};if _ccd %2==0&&len (_ggae )> 1{_fgce =append (_fgce ,_ggae );};};return _fgce ;};func (_efg *Context )SetFillStyle (pattern _f .Pattern ){if _efff ,_gba :=pattern .(*solidPattern );_gba {_efg ._daa =_efff ._ffbf ;};_efg ._bfdf =pattern ;};func (_egb *Context )CubicTo (x1 ,y1 ,x2 ,y2 ,x3 ,y3 float64 ){if !_egb ._ef {_egb .MoveTo (x1 ,y1 );};_egbc ,_baa :=_egb ._edc .X ,_egb ._edc .Y ;x1 ,y1 =_egb .Transform (x1 ,y1 );x2 ,y2 =_egb .Transform (x2 ,y2 );x3 ,y3 =_egb .Transform (x3 ,y3 );_dcde :=_gcf (_egbc ,_baa ,x1 ,y1 ,x2 ,y2 ,x3 ,y3 );_dgaf :=_dfg (_egb ._edc );for _ ,_agg :=range _dcde [1:]{_fba :=_dfg (_agg );if _fba ==_dgaf {continue ;};_dgaf =_fba ;_egb ._dbe .Add1 (_fba );_egb ._gdfd .Add1 (_fba );_egb ._edc =_agg ;};};func _fcdf (_gce _ba .Image )*_ba .RGBA {_bba :=_gce .Bounds ();_fcbd :=_ba .NewRGBA (_bba );_af .Draw (_fcbd ,_bba ,_gce ,_bba .Min ,_af .Src );return _fcbd ;};func (_dec stops )Swap (i ,j int ){_dec [i ],_dec [j ]=_dec [j ],_dec [i ]};func (_cabf *Context )ScaleAbout (sx ,sy ,x ,y float64 ){_cabf .Translate (x ,y );_cabf .Scale (sx ,sy );_cabf .Translate (-x ,-y );};type stops []stop ;func (_cca *Context )DrawString (s string ,x ,y float64 ){_cca .DrawStringAnchored (s ,x ,y ,0,0)};func (_bbg *linearGradient )AddColorStop (offset float64 ,color _b .Color ){_bbg ._ggdf =append (_bbg ._ggdf ,stop {_bgb :offset ,_bafe :color });_a .Sort (_bbg ._ggdf );};func (_dac *Context )ResetClip (){_dac ._ae =nil };func (_bad *Context )SetStrokeRGBA (r ,g ,b ,a float64 ){_cfd :=_b .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_bad ._ecf =_bdcg (_cfd );};func (_edd *Context )Image ()_ba .Image {return _edd ._acb };func (_cda *Context )SetLineWidth (lineWidth float64 ){_cda ._dba =lineWidth };func (_geec *Context )DrawImageAnchored (im _ba .Image ,x ,y int ,ax ,ay float64 ){_gaae :=im .Bounds ().Size ();x -=int (ax *float64 (_gaae .X ));y -=int (ay *float64 (_gaae .Y ));_fed :=_aa .BiLinear ;_gef :=_geec ._dfa .Clone ();_gef .Translate (float64 (x ),float64 (y ));_bggc :=_ca .Aff3 {_gef [0],_gef [3],_gef [6],_gef [1],_gef [4],_gef [7]};if _geec ._ae ==nil {_fed .Transform (_geec ._acb ,_bggc ,im ,im .Bounds (),_aa .Over ,nil );}else {_fed .Transform (_geec ._acb ,_bggc ,im ,im .Bounds (),_aa .Over ,&_aa .Options {DstMask :_geec ._ae ,DstMaskP :_ba .Point {}});};};type radialGradient struct{_ddec ,_gecc ,_gcfb circle ;_gbde ,_cefg float64 ;_fbd float64 ;_aec stops ;};func (_gdfda *Context )ClipPreserve (){_gcb :=_ba .NewAlpha (_ba .Rect (0,0,_gdfda ._dc ,_gdfda ._ec ));_dcce :=_bg .NewAlphaOverPainter (_gcb );_gdfda .fill (_dcce );if _gdfda ._ae ==nil {_gdfda ._ae =_gcb ;}else {_gdc :=_ba .NewAlpha (_ba .Rect (0,0,_gdfda ._dc ,_gdfda ._ec ));_aa .DrawMask (_gdc ,_gdc .Bounds (),_gcb ,_ba .Point {},_gdfda ._ae ,_ba .Point {},_aa .Over );_gdfda ._ae =_gdc ;};};type circle struct{_cfe ,_ece ,_edce float64 };type linearGradient struct{_eeb ,_gefc ,_aab ,_bbe float64 ;_ggdf stops ;};func (_cgb *Context )SetRGB (r ,g ,b float64 ){_cgb .SetRGBA (r ,g ,b ,1)};const (_gdcc repeatOp =iota ;_facf ;_acf ;_fcad ;);func _beg (_bag ,_gdbc ,_eded ,_cebf ,_gad ,_aebf float64 )_f .Gradient {_fgbf :=circle {_bag ,_gdbc ,_eded };_agf :=circle {_cebf ,_gad ,_aebf };_acc :=circle {_cebf -_bag ,_gad -_gdbc ,_aebf -_eded };_efbb :=_cffg (_acc ._cfe ,_acc ._ece ,-_acc ._edce ,_acc ._cfe ,_acc ._ece ,_acc ._edce );var _cede float64 ;if _efbb !=0{_cede =1.0/_efbb ;};_aafg :=-_fgbf ._edce ;_fec :=&radialGradient {_ddec :_fgbf ,_gecc :_agf ,_gcfb :_acc ,_gbde :_efbb ,_cefg :_cede ,_fbd :_aafg };return _fec ;};func NewContextForRGBA (im *_ba .RGBA )*Context {_abe :=im .Bounds ().Size ().X ;_fd :=im .Bounds ().Size ().Y ;return &Context {_dc :_abe ,_ec :_fd ,_ggd :_bg .NewRasterizer (_abe ,_fd ),_acb :im ,_daa :_b .Transparent ,_bfdf :_dbb ,_ecf :_dfe ,_dba :1,_dcd :_f .FillRuleWinding ,_dfa :_df .IdentityMatrix (),_ebg :_f .NewTextState ()};};func (_gcbf *Context )TextState ()*_f .TextState {return _gcbf ._ebg };