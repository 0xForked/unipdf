//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package imagerender ;import (_ec "errors";_f "fmt";_ac "github.com/unidoc/freetype/raster";_c "github.com/unidoc/unipdf/v3/common";_de "github.com/unidoc/unipdf/v3/internal/transform";_ee "github.com/unidoc/unipdf/v3/render/internal/context";_aa "golang.org/x/image/draw";
_ge "golang.org/x/image/font";_cb "golang.org/x/image/math/f64";_gg "golang.org/x/image/math/fixed";_gf "image";_dc "image/color";_e "image/draw";_g "math";_ag "sort";_a "strings";);func (_aaab *Context )ShearAbout (sx ,sy ,x ,y float64 ){_aaab .Translate (x ,y );
_aaab .Shear (sx ,sy );_aaab .Translate (-x ,-y );};type stops []stop ;func (_fcg *Context )StrokePattern ()_ee .Pattern {return _fcg ._dgbg };func (_dedf *Context )drawRegularPolygon (_dgg int ,_dcdff ,_fce ,_fec ,_cea float64 ){_cce :=2*_g .Pi /float64 (_dgg );
_cea -=_g .Pi /2;if _dgg %2==0{_cea +=_cce /2;};_dedf .NewSubPath ();for _gec :=0;_gec < _dgg ;_gec ++{_cgcf :=_cea +_cce *float64 (_gec );_dedf .LineTo (_dcdff +_fec *_g .Cos (_cgcf ),_fce +_fec *_g .Sin (_cgcf ));};_dedf .ClosePath ();};func (_fbg *Context )capper ()_ac .Capper {switch _fbg ._ab {case _ee .LineCapButt :return _ac .ButtCapper ;
case _ee .LineCapRound :return _ac .RoundCapper ;case _ee .LineCapSquare :return _ac .SquareCapper ;};return nil ;};func (_ea *Context )SetRGB255 (r ,g ,b int ){_ea .SetRGBA255 (r ,g ,b ,255)};func (_cge *Context )CubicTo (x1 ,y1 ,x2 ,y2 ,x3 ,y3 float64 ){if !_cge ._fab {_cge .MoveTo (x1 ,y1 );
};_efbg ,_af :=_cge ._ebe .X ,_cge ._ebe .Y ;x1 ,y1 =_cge .Transform (x1 ,y1 );x2 ,y2 =_cge .Transform (x2 ,y2 );x3 ,y3 =_cge .Transform (x3 ,y3 );_ggf :=_cag (_efbg ,_af ,x1 ,y1 ,x2 ,y2 ,x3 ,y3 );_ffa :=_cggdc (_cge ._ebe );for _ ,_aeeg :=range _ggf [1:]{_acd :=_cggdc (_aeeg );
if _acd ==_ffa {continue ;};_ffa =_acd ;_cge ._ggg .Add1 (_acd );_cge ._deg .Add1 (_acd );_cge ._ebe =_aeeg ;};};type Context struct{_dgb int ;_ddf int ;_bcd *_ac .Rasterizer ;_dae *_gf .RGBA ;_gbba *_gf .Alpha ;_fa _dc .Color ;_ce _ee .Pattern ;_dgbg _ee .Pattern ;
_ggg _ac .Path ;_deg _ac .Path ;_fgd _de .Point ;_ebe _de .Point ;_fab bool ;_gfac []float64 ;_dde float64 ;_bd float64 ;_ab _ee .LineCap ;_dfe _ee .LineJoin ;_ff _ee .FillRule ;_egd _de .Matrix ;_fbe _ee .TextState ;_efa []*Context ;};func (_aaf *Context )SetStrokeRGBA (r ,g ,b ,a float64 ){_add :=_dc .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};
_aaf ._dgbg =_aaga (_add );};func (_gce *Context )Transform (x ,y float64 )(_cagd ,_afb float64 ){return _gce ._egd .Transform (x ,y )};func (_dgc *Context )Image ()_gf .Image {return _dgc ._dae };func (_efg *Context )drawString (_fccb string ,_ecb _ge .Face ,_gbc ,_fgdb float64 ){_cad :=&_ge .Drawer {Src :_gf .NewUniform (_efg ._fa ),Face :_ecb ,Dot :_cggdc (_de .NewPoint (_gbc ,_fgdb ))};
_begg :=rune (-1);for _ ,_dbb :=range _fccb {if _begg >=0{_cad .Dot .X +=_cad .Face .Kern (_begg ,_dbb );};_aegc ,_efaa ,_cace ,_fbgd ,_fge :=_cad .Face .Glyph (_cad .Dot ,_dbb );if !_fge {continue ;};_cfbe :=_aegc .Sub (_aegc .Min );_abde :=_gf .NewRGBA (_cfbe );
_aa .DrawMask (_abde ,_cfbe ,_cad .Src ,_gf .Point {},_efaa ,_cace ,_aa .Over );var _ggfd *_aa .Options ;if _efg ._gbba !=nil {_ggfd =&_aa .Options {DstMask :_efg ._gbba ,DstMaskP :_gf .Point {}};};_gefe :=_efg ._egd .Clone ().Translate (float64 (_aegc .Min .X ),float64 (_aegc .Min .Y ));
_fcb :=_cb .Aff3 {_gefe [0],_gefe [3],_gefe [6],_gefe [1],_gefe [4],_gefe [7]};_aa .BiLinear .Transform (_efg ._dae ,_fcb ,_abde ,_cfbe ,_aa .Over ,_ggfd );_cad .Dot .X +=_fbgd ;_begg =_dbb ;};};func (_db *Context )SetMask (mask *_gf .Alpha )error {if mask .Bounds ().Size ()!=_db ._dae .Bounds ().Size (){return _ec .New ("\u006d\u0061\u0073\u006b\u0020\u0073i\u007a\u0065\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068 \u0063\u006f\u006e\u0074\u0065\u0078\u0074 \u0073\u0069\u007a\u0065");
};_db ._gbba =mask ;return nil ;};func (_dgd *Context )fill (_gdg _ac .Painter ){_bbe :=_dgd ._deg ;if _dgd ._fab {_bbe =make (_ac .Path ,len (_dgd ._deg ));copy (_bbe ,_dgd ._deg );_bbe .Add1 (_cggdc (_dgd ._fgd ));};_gacc :=_dgd ._bcd ;_gacc .UseNonZeroWinding =_dgd ._ff ==_ee .FillRuleWinding ;
_gacc .Clear ();_gacc .AddPath (_bbe );_gacc .Rasterize (_gdg );};func (_adg *Context )SetRGBA255 (r ,g ,b ,a int ){_adg ._fa =_dc .NRGBA {uint8 (r ),uint8 (g ),uint8 (b ),uint8 (a )};_adg .setFillAndStrokeColor (_adg ._fa );};func (_eca *Context )SetFillRule (fillRule _ee .FillRule ){_eca ._ff =fillRule };
func (_bdb *Context )DrawRoundedRectangle (x ,y ,w ,h ,r float64 ){_edfc ,_agg ,_aag ,_cbd :=x ,x +r ,x +w -r ,x +w ;_abdg ,_bfe ,_ede ,_dccg :=y ,y +r ,y +h -r ,y +h ;_bdb .NewSubPath ();_bdb .MoveTo (_agg ,_abdg );_bdb .LineTo (_aag ,_abdg );_bdb .DrawArc (_aag ,_bfe ,r ,_daba (270),_daba (360));
_bdb .LineTo (_cbd ,_ede );_bdb .DrawArc (_aag ,_ede ,r ,_daba (0),_daba (90));_bdb .LineTo (_agg ,_dccg );_bdb .DrawArc (_agg ,_ede ,r ,_daba (90),_daba (180));_bdb .LineTo (_edfc ,_bfe );_bdb .DrawArc (_agg ,_bfe ,r ,_daba (180),_daba (270));_bdb .ClosePath ();
};func (_cagc stops )Len ()int {return len (_cagc )};func (_fecg stops )Less (i ,j int )bool {return _fecg [i ]._ddgb < _fecg [j ]._ddgb };var (_cgf =_aaga (_dc .White );_dcdf =_aaga (_dc .Black ););func (_bbdf *Context )DrawStringAnchored (s string ,face _ge .Face ,x ,y ,ax ,ay float64 ){_ebef ,_bgeb :=_bbdf .MeasureString (s ,face );
_bbdf .drawString (s ,face ,x -ax *_ebef ,y +ay *_bgeb );};func (_abd *Context )DrawPoint (x ,y ,r float64 ){_abd .Push ();_aeg ,_ecef :=_abd .Transform (x ,y );_abd .Identity ();_abd .DrawCircle (_aeg ,_ecef ,r );_abd .Pop ();};func (_aafe *Context )SetPixel (x ,y int ){_aafe ._dae .Set (x ,y ,_aafe ._fa )};
func (_gfe *Context )Width ()int {return _gfe ._dgb };func (_ebeb *Context )MeasureString (s string ,face _ge .Face )(_ecf ,_gaeb float64 ){_gde :=&_ge .Drawer {Face :face };_ecfe :=_gde .MeasureString (s );return float64 (_ecfe >>6),_ebeb ._fbe .Tf .Size ;
};func (_fgc *Context )SetColor (c _dc .Color ){_fgc .setFillAndStrokeColor (c )};func NewContextForImage (im _gf .Image )*Context {return NewContextForRGBA (_efd (im ))};func (_caf *Context )ClipPreserve (){_fbee :=_gf .NewAlpha (_gf .Rect (0,0,_caf ._dgb ,_caf ._ddf ));
_dgbc :=_ac .NewAlphaOverPainter (_fbee );_caf .fill (_dgbc );if _caf ._gbba ==nil {_caf ._gbba =_fbee ;}else {_fcdb :=_gf .NewAlpha (_gf .Rect (0,0,_caf ._dgb ,_caf ._ddf ));_aa .DrawMask (_fcdb ,_fcdb .Bounds (),_fbee ,_gf .Point {},_caf ._gbba ,_gf .Point {},_aa .Over );
_caf ._gbba =_fcdb ;};};func (_gae *Context )SetStrokeStyle (pattern _ee .Pattern ){_gae ._dgbg =pattern };func (_cbf *Context )FillPattern ()_ee .Pattern {return _cbf ._ce };func (_fga *Context )ClearPath (){_fga ._ggg .Clear ();_fga ._deg .Clear ();_fga ._fab =false };
func (_aeec *Context )QuadraticTo (x1 ,y1 ,x2 ,y2 float64 ){if !_aeec ._fab {_aeec .MoveTo (x1 ,y1 );};x1 ,y1 =_aeec .Transform (x1 ,y1 );x2 ,y2 =_aeec .Transform (x2 ,y2 );_cec :=_de .NewPoint (x1 ,y1 );_acc :=_de .NewPoint (x2 ,y2 );_fea :=_cggdc (_cec );
_aeb :=_cggdc (_acc );_aeec ._ggg .Add2 (_fea ,_aeb );_aeec ._deg .Add2 (_fea ,_aeb );_aeec ._ebe =_acc ;};type solidPattern struct{_ceaa _dc .Color };func (_cgg *Context )joiner ()_ac .Joiner {switch _cgg ._dfe {case _ee .LineJoinBevel :return _ac .BevelJoiner ;
case _ee .LineJoinRound :return _ac .RoundJoiner ;};return nil ;};func NewContext (width ,height int )*Context {return NewContextForRGBA (_gf .NewRGBA (_gf .Rect (0,0,width ,height )));};const (_ceee repeatOp =iota ;_aafc ;_ffe ;_ebca ;);func (_fdf *linearGradient )AddColorStop (offset float64 ,color _dc .Color ){_fdf ._eda =append (_fdf ._eda ,stop {_ddgb :offset ,_cbaca :color });
_ag .Sort (_fdf ._eda );};type linearGradient struct{_fcabc ,_gffc ,_gge ,_bgd float64 ;_eda stops ;};func (_accf *Context )DrawLine (x1 ,y1 ,x2 ,y2 float64 ){_accf .MoveTo (x1 ,y1 );_accf .LineTo (x2 ,y2 )};func (_dded *Context )SetRGBA (r ,g ,b ,a float64 ){_dded ._fa =_dc .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};
_dded .setFillAndStrokeColor (_dded ._fa );};func NewRadialGradient (x0 ,y0 ,r0 ,x1 ,y1 ,r1 float64 )_ee .Gradient {_bgf :=circle {x0 ,y0 ,r0 };_fed :=circle {x1 ,y1 ,r1 };_bafa :=circle {x1 -x0 ,y1 -y0 ,r1 -r0 };_ddea :=_aggf (_bafa ._baf ,_bafa ._aba ,-_bafa ._ddeda ,_bafa ._baf ,_bafa ._aba ,_bafa ._ddeda );
var _ebcb float64 ;if _ddea !=0{_ebcb =1.0/_ddea ;};_aafef :=-_bgf ._ddeda ;_gecg :=&radialGradient {_gfcf :_bgf ,_ecd :_fed ,_geg :_bafa ,_adf :_ddea ,_cfd :_ebcb ,_cca :_aafef };return _gecg ;};func _affc (_abed string )(_gged ,_eea ,_fdgb ,_fee int ){_abed =_a .TrimPrefix (_abed ,"\u0023");
_fee =255;if len (_abed )==3{_cfe :="\u00251\u0078\u0025\u0031\u0078\u0025\u0031x";_f .Sscanf (_abed ,_cfe ,&_gged ,&_eea ,&_fdgb );_gged |=_gged <<4;_eea |=_eea <<4;_fdgb |=_fdgb <<4;};if len (_abed )==6{_cfaef :="\u0025\u0030\u0032x\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";
_f .Sscanf (_abed ,_cfaef ,&_gged ,&_eea ,&_fdgb );};if len (_abed )==8{_fcgc :="\u0025\u00302\u0078\u0025\u00302\u0078\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";_f .Sscanf (_abed ,_fcgc ,&_gged ,&_eea ,&_fdgb ,&_fee );};return ;};func (_cee *Context )Clip (){_cee .ClipPreserve ();
_cee .ClearPath ()};func _bbdfa (_eff ,_ecca _dc .Color ,_ebed float64 )_dc .Color {_ecee ,_cfae ,_efba ,_edfd :=_eff .RGBA ();_abg ,_bbfg ,_ceaf ,_eaf :=_ecca .RGBA ();return _dc .RGBA {_ddeb (_ecee ,_abg ,_ebed ),_ddeb (_cfae ,_bbfg ,_ebed ),_ddeb (_efba ,_ceaf ,_ebed ),_ddeb (_edfd ,_eaf ,_ebed )};
};func _ddeb (_acgb ,_bac uint32 ,_gba float64 )uint8 {return uint8 (int32 (float64 (_acgb )*(1.0-_gba )+float64 (_bac )*_gba )>>8);};func _dgbf (_eeag float64 )_gg .Int26_6 {return _gg .Int26_6 (_eeag *64)};func (_fbc *Context )LineTo (x ,y float64 ){if !_fbc ._fab {_fbc .MoveTo (x ,y );
}else {x ,y =_fbc .Transform (x ,y );_ddg :=_de .NewPoint (x ,y );_dca :=_cggdc (_ddg );_fbc ._ggg .Add1 (_dca );_fbc ._deg .Add1 (_dca );_fbc ._ebe =_ddg ;};};func _daba (_aacca float64 )float64 {return _aacca *_g .Pi /180};type repeatOp int ;func _dabd (_ffgg _gg .Int26_6 )float64 {const _egc ,_fgf =6,1<<6-1;
if _ffgg >=0{return float64 (_ffgg >>_egc )+float64 (_ffgg &_fgf )/64;};_ffgg =-_ffgg ;if _ffgg >=0{return -(float64 (_ffgg >>_egc )+float64 (_ffgg &_fgf )/64);};return 0;};func (_bfg *Context )Scale (x ,y float64 ){_bfg ._egd =_bfg ._egd .Scale (x ,y )};
func _cggdc (_bfce _de .Point )_gg .Point26_6 {return _gg .Point26_6 {X :_dgbf (_bfce .X ),Y :_dgbf (_bfce .Y )};};func (_ecaf *radialGradient )AddColorStop (offset float64 ,color _dc .Color ){_ecaf ._eee =append (_ecaf ._eee ,stop {_ddgb :offset ,_cbaca :color });
_ag .Sort (_ecaf ._eee );};func _cegc (_gcb float64 ,_aad stops )_dc .Color {if _gcb <=0.0||len (_aad )==1{return _aad [0]._cbaca ;};_gagg :=_aad [len (_aad )-1];if _gcb >=_gagg ._ddgb {return _gagg ._cbaca ;};for _fbgf ,_bda :=range _aad [1:]{if _gcb < _bda ._ddgb {_gcb =(_gcb -_aad [_fbgf ]._ddgb )/(_bda ._ddgb -_aad [_fbgf ]._ddgb );
return _bbdfa (_aad [_fbgf ]._cbaca ,_bda ._cbaca ,_gcb );};};return _gagg ._cbaca ;};func _cag (_dfd ,_dfbc ,_fdde ,_dfdg ,_bge ,_gag ,_acg ,_gdf float64 )[]_de .Point {_dcc :=(_g .Hypot (_fdde -_dfd ,_dfdg -_dfbc )+_g .Hypot (_bge -_fdde ,_gag -_dfdg )+_g .Hypot (_acg -_bge ,_gdf -_gag ));
_cc :=int (_dcc +0.5);if _cc < 4{_cc =4;};_bga :=float64 (_cc )-1;_gbd :=make ([]_de .Point ,_cc );for _eg :=0;_eg < _cc ;_eg ++{_caa :=float64 (_eg )/_bga ;_dcd ,_bbg :=_cba (_dfd ,_dfbc ,_fdde ,_dfdg ,_bge ,_gag ,_acg ,_gdf ,_caa );_gbd [_eg ]=_de .NewPoint (_dcd ,_bbg );
};return _gbd ;};func (_dce *Context )LineWidth ()float64 {return _dce ._bd };func (_ded *Context )SetLineCap (lineCap _ee .LineCap ){_ded ._ab =lineCap };func (_gdbg *Context )DrawImageAnchored (im _gf .Image ,x ,y int ,ax ,ay float64 ){_addg :=im .Bounds ().Size ();
x -=int (ax *float64 (_addg .X ));y -=int (ay *float64 (_addg .Y ));_dfee :=_aa .BiLinear ;_bcbd :=_gdbg ._egd .Clone ().Translate (float64 (x ),float64 (y ));_cbbg :=_cb .Aff3 {_bcbd [0],_bcbd [3],_bcbd [6],_bcbd [1],_bcbd [4],_bcbd [7]};if _gdbg ._gbba ==nil {_dfee .Transform (_gdbg ._dae ,_cbbg ,im ,im .Bounds (),_aa .Over ,nil );
}else {_dfee .Transform (_gdbg ._dae ,_cbbg ,im ,im .Bounds (),_aa .Over ,&_aa .Options {DstMask :_gdbg ._gbba ,DstMaskP :_gf .Point {}});};};func (_eeg *Context )DrawCircle (x ,y ,r float64 ){_eeg .NewSubPath ();_eeg .DrawEllipticalArc (x ,y ,r ,r ,0,2*_g .Pi );
_eeg .ClosePath ();};func _efd (_eegg _gf .Image )*_gf .RGBA {_cged :=_eegg .Bounds ();_cgcd :=_gf .NewRGBA (_cged );_e .Draw (_cgcd ,_cged ,_eegg ,_cged .Min ,_e .Src );return _cgcd ;};func (_fca *Context )NewSubPath (){if _fca ._fab {_fca ._deg .Add1 (_cggdc (_fca ._fgd ));
};_fca ._fab =false ;};func (_cced *Context )Pop (){_fbf :=*_cced ;_fbec :=_cced ._efa ;_bbca :=_fbec [len (_fbec )-1];*_cced =*_bbca ;_cced ._ggg =_fbf ._ggg ;_cced ._deg =_fbf ._deg ;_cced ._fgd =_fbf ._fgd ;_cced ._ebe =_fbf ._ebe ;_cced ._fab =_fbf ._fab ;
};func (_aab *Context )ClosePath (){if _aab ._fab {_bdf :=_cggdc (_aab ._fgd );_aab ._ggg .Add1 (_bdf );_aab ._deg .Add1 (_bdf );_aab ._ebe =_aab ._fgd ;};};func (_ebc *Context )Clear (){_gdb :=_gf .NewUniform (_ebc ._fa );_aa .Draw (_ebc ._dae ,_ebc ._dae .Bounds (),_gdb ,_gf .Point {},_aa .Src );
};func (_gbg *linearGradient )ColorAt (x ,y int )_dc .Color {if len (_gbg ._eda )==0{return _dc .Transparent ;};_cade ,_cegf :=float64 (x ),float64 (y );_fcfe ,_gab ,_cdbc ,_gcc :=_gbg ._fcabc ,_gbg ._gffc ,_gbg ._gge ,_gbg ._bgd ;_gdbd ,_eba :=_cdbc -_fcfe ,_gcc -_gab ;
if _eba ==0&&_gdbd !=0{return _cegc ((_cade -_fcfe )/_gdbd ,_gbg ._eda );};if _gdbd ==0&&_eba !=0{return _cegc ((_cegf -_gab )/_eba ,_gbg ._eda );};_dea :=_gdbd *(_cade -_fcfe )+_eba *(_cegf -_gab );if _dea < 0{return _gbg ._eda [0]._cbaca ;};_fdg :=_g .Hypot (_gdbd ,_eba );
_dge :=((_cade -_fcfe )*-_eba +(_cegf -_gab )*_gdbd )/(_fdg *_fdg );_dab ,_aage :=_fcfe +_dge *-_eba ,_gab +_dge *_gdbd ;_aca :=_g .Hypot (_cade -_dab ,_cegf -_aage )/_fdg ;return _cegc (_aca ,_gbg ._eda );};func (_cagf *Context )DrawString (s string ,face _ge .Face ,x ,y float64 ){_cagf .DrawStringAnchored (s ,face ,x ,y ,0,0);
};func (_cgc *Context )SetDash (dashes ...float64 ){_cgc ._gfac =dashes };func (_faf *Context )FillPreserve (){var _ade _ac .Painter ;if _faf ._gbba ==nil {if _ebg ,_geac :=_faf ._ce .(*solidPattern );_geac {_cdg :=_ac .NewRGBAPainter (_faf ._dae );_cdg .SetColor (_ebg ._ceaa );
_ade =_cdg ;};};if _ade ==nil {_ade =_fdfb (_faf ._dae ,_faf ._gbba ,_faf ._ce );};_faf .fill (_ade );};func (_dcdc *Context )DrawArc (x ,y ,r ,angle1 ,angle2 float64 ){_dcdc .DrawEllipticalArc (x ,y ,r ,r ,angle1 ,angle2 );};func (_ccf *radialGradient )ColorAt (x ,y int )_dc .Color {if len (_ccf ._eee )==0{return _dc .Transparent ;
};_cbg ,_bfa :=float64 (x )+0.5-_ccf ._gfcf ._baf ,float64 (y )+0.5-_ccf ._gfcf ._aba ;_ccfd :=_aggf (_cbg ,_bfa ,_ccf ._gfcf ._ddeda ,_ccf ._geg ._baf ,_ccf ._geg ._aba ,_ccf ._geg ._ddeda );_gdc :=_aggf (_cbg ,_bfa ,-_ccf ._gfcf ._ddeda ,_cbg ,_bfa ,_ccf ._gfcf ._ddeda );
if _ccf ._adf ==0{if _ccfd ==0{return _dc .Transparent ;};_gfb :=0.5*_gdc /_ccfd ;if _gfb *_ccf ._geg ._ddeda >=_ccf ._cca {return _cegc (_gfb ,_ccf ._eee );};return _dc .Transparent ;};_cbdf :=_aggf (_ccfd ,_ccf ._adf ,0,_ccfd ,-_gdc ,0);if _cbdf >=0{_cda :=_g .Sqrt (_cbdf );
_dba :=(_ccfd +_cda )*_ccf ._cfd ;_eef :=(_ccfd -_cda )*_ccf ._cfd ;if _dba *_ccf ._geg ._ddeda >=_ccf ._cca {return _cegc (_dba ,_ccf ._eee );}else if _eef *_ccf ._geg ._ddeda >=_ccf ._cca {return _cegc (_eef ,_ccf ._eee );};};return _dc .Transparent ;
};func (_gdgc *Context )Matrix ()_de .Matrix {return _gdgc ._egd };func (_ffbb *patternPainter )Paint (ss []_ac .Span ,done bool ){_dccc :=_ffbb ._ddc .Bounds ();for _ ,_ebebd :=range ss {if _ebebd .Y < _dccc .Min .Y {continue ;};if _ebebd .Y >=_dccc .Max .Y {return ;
};if _ebebd .X0 < _dccc .Min .X {_ebebd .X0 =_dccc .Min .X ;};if _ebebd .X1 > _dccc .Max .X {_ebebd .X1 =_dccc .Max .X ;};if _ebebd .X0 >=_ebebd .X1 {continue ;};const _bfc =1<<16-1;_bgde :=_ebebd .Y -_ffbb ._ddc .Rect .Min .Y ;_bfca :=_ebebd .X0 -_ffbb ._ddc .Rect .Min .X ;
_eddc :=(_ebebd .Y -_ffbb ._ddc .Rect .Min .Y )*_ffbb ._ddc .Stride +(_ebebd .X0 -_ffbb ._ddc .Rect .Min .X )*4;_dgee :=_eddc +(_ebebd .X1 -_ebebd .X0 )*4;for _cfgf ,_gdegb :=_eddc ,_bfca ;_cfgf < _dgee ;_cfgf ,_gdegb =_cfgf +4,_gdegb +1{_ffd :=_ebebd .Alpha ;
if _ffbb ._gabb !=nil {_ffd =_ffd *uint32 (_ffbb ._gabb .AlphaAt (_gdegb ,_bgde ).A )/255;if _ffd ==0{continue ;};};_edc :=_ffbb ._bcff .ColorAt (_gdegb ,_bgde );_efe ,_bgba ,_bbgg ,_age :=_edc .RGBA ();_dff :=uint32 (_ffbb ._ddc .Pix [_cfgf +0]);_fgb :=uint32 (_ffbb ._ddc .Pix [_cfgf +1]);
_ffde :=uint32 (_ffbb ._ddc .Pix [_cfgf +2]);_fgae :=uint32 (_ffbb ._ddc .Pix [_cfgf +3]);_bcbg :=(_bfc -(_age *_ffd /_bfc ))*0x101;_ffbb ._ddc .Pix [_cfgf +0]=uint8 ((_dff *_bcbg +_efe *_ffd )/_bfc >>8);_ffbb ._ddc .Pix [_cfgf +1]=uint8 ((_fgb *_bcbg +_bgba *_ffd )/_bfc >>8);
_ffbb ._ddc .Pix [_cfgf +2]=uint8 ((_ffde *_bcbg +_bbgg *_ffd )/_bfc >>8);_ffbb ._ddc .Pix [_cfgf +3]=uint8 ((_fgae *_bcbg +_age *_ffd )/_bfc >>8);};};};func (_cac *Context )AsMask ()*_gf .Alpha {_egg :=_gf .NewAlpha (_cac ._dae .Bounds ());_aa .Draw (_egg ,_cac ._dae .Bounds (),_cac ._dae ,_gf .Point {},_aa .Src );
return _egg ;};func _fdfb (_caab *_gf .RGBA ,_aeef *_gf .Alpha ,_eggc _ee .Pattern )*patternPainter {return &patternPainter {_caab ,_aeef ,_eggc };};func (_cggd *Context )stroke (_fcd _ac .Painter ){_dcf :=_cggd ._ggg ;if len (_cggd ._gfac )> 0{_dcf =_bag (_dcf ,_cggd ._gfac ,_cggd ._dde );
}else {_dcf =_aedd (_gca (_dcf ));};_fbb :=_cggd ._bcd ;_fbb .UseNonZeroWinding =true ;_fbb .Clear ();_ffab :=(_cggd ._egd .ScalingFactorX ()+_cggd ._egd .ScalingFactorY ())/2;_fbb .AddStroke (_dcf ,_dgbf (_cggd ._bd *_ffab ),_cggd .capper (),_cggd .joiner ());
_fbb .Rasterize (_fcd );};func (_gefa *Context )Identity (){_gefa ._egd =_de .IdentityMatrix ()};type radialGradient struct{_gfcf ,_ecd ,_geg circle ;_adf ,_cfd float64 ;_cca float64 ;_eee stops ;};func NewLinearGradient (x0 ,y0 ,x1 ,y1 float64 )_ee .Gradient {_cfc :=&linearGradient {_fcabc :x0 ,_gffc :y0 ,_gge :x1 ,_bgd :y1 };
return _cfc ;};func (_bbc *Context )Push (){_ceg :=*_bbc ;_bbc ._efa =append (_bbc ._efa ,&_ceg )};func (_ffg *Context )MoveTo (x ,y float64 ){if _ffg ._fab {_ffg ._deg .Add1 (_cggdc (_ffg ._fgd ));};x ,y =_ffg .Transform (x ,y );_efb :=_de .NewPoint (x ,y );
_gac :=_cggdc (_efb );_ffg ._ggg .Start (_gac );_ffg ._deg .Start (_gac );_ffg ._fgd =_efb ;_ffg ._ebe =_efb ;_ffg ._fab =true ;};func _aedd (_affg [][]_de .Point )_ac .Path {var _bdaf _ac .Path ;for _ ,_aacc :=range _affg {var _ccfa _gg .Point26_6 ;for _gefg ,_fegf :=range _aacc {_eeb :=_cggdc (_fegf );
if _gefg ==0{_bdaf .Start (_eeb );}else {_bgef :=_eeb .X -_ccfa .X ;_gdbf :=_eeb .Y -_ccfa .Y ;if _bgef < 0{_bgef =-_bgef ;};if _gdbf < 0{_gdbf =-_gdbf ;};if _bgef +_gdbf > 8{_bdaf .Add1 (_eeb );};};_ccfa =_eeb ;};};return _bdaf ;};type surfacePattern struct{_gdeg _gf .Image ;
_cga repeatOp ;};func (_ebgc *Context )ResetClip (){_ebgc ._gbba =nil };func NewContextForRGBA (im *_gf .RGBA )*Context {_aaa :=im .Bounds ().Size ().X ;_edf :=im .Bounds ().Size ().Y ;return &Context {_dgb :_aaa ,_ddf :_edf ,_bcd :_ac .NewRasterizer (_aaa ,_edf ),_dae :im ,_fa :_dc .Transparent ,_ce :_cgf ,_dgbg :_dcdf ,_bd :1,_ff :_ee .FillRuleWinding ,_egd :_de .IdentityMatrix (),_fbe :_ee .NewTextState ()};
};func (_abe *Context )TextState ()*_ee .TextState {return &_abe ._fbe };func _bag (_aec _ac .Path ,_dbbd []float64 ,_ebab float64 )_ac .Path {return _aedd (_ebae (_gca (_aec ),_dbbd ,_ebab ));};func (_efc *Context )Shear (x ,y float64 ){_efc ._egd .Shear (x ,y )};
func (_bffa *Context )DrawImage (im _gf .Image ,x ,y int ){_bffa .DrawImageAnchored (im ,x ,y ,0,0)};func (_bef *Context )SetRGB (r ,g ,b float64 ){_bef .SetRGBA (r ,g ,b ,1)};func _ef (_dg ,_b ,_df ,_fd ,_gff ,_bc ,_ed float64 )(_gb ,_da float64 ){_fc :=1-_ed ;
_ca :=_fc *_fc ;_cg :=2*_fc *_ed ;_ae :=_ed *_ed ;_gb =_ca *_dg +_cg *_df +_ae *_gff ;_da =_ca *_b +_cg *_fd +_ae *_bc ;return ;};func (_cfb *Context )SetFillStyle (pattern _ee .Pattern ){if _be ,_ebf :=pattern .(*solidPattern );_ebf {_cfb ._fa =_be ._ceaa ;
};_cfb ._ce =pattern ;};func (_aee *Context )SetLineWidth (lineWidth float64 ){_aee ._bd =lineWidth };type stop struct{_ddgb float64 ;_cbaca _dc .Color ;};func (_fcdg *Context )StrokePreserve (){var _cbc _ac .Painter ;if _fcdg ._gbba ==nil {if _bff ,_gea :=_fcdg ._dgbg .(*solidPattern );
_gea {_fffb :=_ac .NewRGBAPainter (_fcdg ._dae );_fffb .SetColor (_bff ._ceaa );_cbc =_fffb ;};};if _cbc ==nil {_cbc =_fdfb (_fcdg ._dae ,_fcdg ._gbba ,_fcdg ._dgbg );};_fcdg .stroke (_cbc );};func (_gad *surfacePattern )ColorAt (x ,y int )_dc .Color {_gceb :=_gad ._gdeg .Bounds ();
switch _gad ._cga {case _aafc :if y >=_gceb .Dy (){return _dc .Transparent ;};case _ffe :if x >=_gceb .Dx (){return _dc .Transparent ;};case _ebca :if x >=_gceb .Dx ()||y >=_gceb .Dy (){return _dc .Transparent ;};};x =x %_gceb .Dx ()+_gceb .Min .X ;y =y %_gceb .Dy ()+_gceb .Min .Y ;
return _gad ._gdeg .At (x ,y );};func (_cfg *Context )Translate (x ,y float64 ){_cfg ._egd =_cfg ._egd .Translate (x ,y )};func (_aed *Context )DrawEllipse (x ,y ,rx ,ry float64 ){_aed .NewSubPath ();_aed .DrawEllipticalArc (x ,y ,rx ,ry ,0,2*_g .Pi );
_aed .ClosePath ();};func _ebae (_bfb [][]_de .Point ,_adc []float64 ,_cgff float64 )[][]_de .Point {var _bade [][]_de .Point ;if len (_adc )==0{return _bfb ;};if len (_adc )==1{_adc =append (_adc ,_adc [0]);};for _ ,_bdc :=range _bfb {if len (_bdc )< 2{continue ;
};_bbb :=_bdc [0];_eeeb :=1;_fdb :=0;_aaaf :=0.0;if _cgff !=0{var _bgb float64 ;for _ ,_dbce :=range _adc {_bgb +=_dbce ;};_cgff =_g .Mod (_cgff ,_bgb );if _cgff < 0{_cgff +=_bgb ;};for _feg ,_cdgd :=range _adc {_cgff -=_cdgd ;if _cgff < 0{_fdb =_feg ;
_aaaf =_cdgd +_cgff ;break ;};};};var _gaggg []_de .Point ;_gaggg =append (_gaggg ,_bbb );for _eeeb < len (_bdc ){_ccee :=_adc [_fdb ];_cabg :=_bdc [_eeeb ];_cafa :=_bbb .Distance (_cabg );_abdf :=_ccee -_aaaf ;if _cafa > _abdf {_fbca :=_abdf /_cafa ;_fgda :=_bbb .Interpolate (_cabg ,_fbca );
_gaggg =append (_gaggg ,_fgda );if _fdb %2==0&&len (_gaggg )> 1{_bade =append (_bade ,_gaggg );};_gaggg =nil ;_gaggg =append (_gaggg ,_fgda );_aaaf =0;_bbb =_fgda ;_fdb =(_fdb +1)%len (_adc );}else {_gaggg =append (_gaggg ,_cabg );_bbb =_cabg ;_aaaf +=_cafa ;
_eeeb ++;};};if _fdb %2==0&&len (_gaggg )> 1{_bade =append (_bade ,_gaggg );};};return _bade ;};func (_ccb *solidPattern )ColorAt (x ,y int )_dc .Color {return _ccb ._ceaa };func (_daed *Context )SetFillRGBA (r ,g ,b ,a float64 ){_abf :=_dc .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};
_daed ._fa =_abf ;_daed ._ce =_aaga (_abf );};type patternPainter struct{_ddc *_gf .RGBA ;_gabb *_gf .Alpha ;_bcff _ee .Pattern ;};func (_fabe *Context )RotateAbout (angle ,x ,y float64 ){_fabe .Translate (x ,y );_fabe .Rotate (angle );_fabe .Translate (-x ,-y );
};func _fb (_gd ,_dcg ,_dfb ,_cf ,_fcf ,_dd float64 )[]_de .Point {_aga :=(_g .Hypot (_dfb -_gd ,_cf -_dcg )+_g .Hypot (_fcf -_dfb ,_dd -_cf ));_fdd :=int (_aga +0.5);if _fdd < 4{_fdd =4;};_fdc :=float64 (_fdd )-1;_bce :=make ([]_de .Point ,_fdd );for _bb :=0;
_bb < _fdd ;_bb ++{_fde :=float64 (_bb )/_fdc ;_bf ,_ba :=_ef (_gd ,_dcg ,_dfb ,_cf ,_fcf ,_dd ,_fde );_bce [_bb ]=_de .NewPoint (_bf ,_ba );};return _bce ;};type circle struct{_baf ,_aba ,_ddeda float64 };func (_cde *Context )setFillAndStrokeColor (_ad _dc .Color ){_cde ._fa =_ad ;
_cde ._ce =_aaga (_ad );_cde ._dgbg =_aaga (_ad );};func (_aae *Context )SetMatrix (m _de .Matrix ){_aae ._egd =m };func _gfce (_dedb _gf .Image ,_bacc repeatOp )_ee .Pattern {return &surfacePattern {_gdeg :_dedb ,_cga :_bacc };};func (_cgb *Context )DrawEllipticalArc (x ,y ,rx ,ry ,angle1 ,angle2 float64 ){const _bgac =16;
for _cgcg :=0;_cgcg < _bgac ;_cgcg ++{_cgbc :=float64 (_cgcg +0)/_bgac ;_edd :=float64 (_cgcg +1)/_bgac ;_cbac :=angle1 +(angle2 -angle1 )*_cgbc ;_fcc :=angle1 +(angle2 -angle1 )*_edd ;_bbdg :=x +rx *_g .Cos (_cbac );_cgce :=y +ry *_g .Sin (_cbac );_beg :=x +rx *_g .Cos ((_cbac +_fcc )/2);
_egb :=y +ry *_g .Sin ((_cbac +_fcc )/2);_cacb :=x +rx *_g .Cos (_fcc );_bbf :=y +ry *_g .Sin (_fcc );_fcab :=2*_beg -_bbdg /2-_cacb /2;_gef :=2*_egb -_cgce /2-_bbf /2;if _cgcg ==0{if _cgb ._fab {_cgb .LineTo (_bbdg ,_cgce );}else {_cgb .MoveTo (_bbdg ,_cgce );
};};_cgb .QuadraticTo (_fcab ,_gef ,_cacb ,_bbf );};};func (_dcfe stops )Swap (i ,j int ){_dcfe [i ],_dcfe [j ]=_dcfe [j ],_dcfe [i ]};func _gca (_bba _ac .Path )[][]_de .Point {var _ecfc [][]_de .Point ;var _cada []_de .Point ;var _gbe ,_dcgf float64 ;
for _abge :=0;_abge < len (_bba );{switch _bba [_abge ]{case 0:if len (_cada )> 0{_ecfc =append (_ecfc ,_cada );_cada =nil ;};_bace :=_dabd (_bba [_abge +1]);_abgd :=_dabd (_bba [_abge +2]);_cada =append (_cada ,_de .NewPoint (_bace ,_abgd ));_gbe ,_dcgf =_bace ,_abgd ;
_abge +=4;case 1:_gefb :=_dabd (_bba [_abge +1]);_dcec :=_dabd (_bba [_abge +2]);_cada =append (_cada ,_de .NewPoint (_gefb ,_dcec ));_gbe ,_dcgf =_gefb ,_dcec ;_abge +=4;case 2:_gga :=_dabd (_bba [_abge +1]);_ccaa :=_dabd (_bba [_abge +2]);_aeda :=_dabd (_bba [_abge +3]);
_bcf :=_dabd (_bba [_abge +4]);_dbc :=_fb (_gbe ,_dcgf ,_gga ,_ccaa ,_aeda ,_bcf );_cada =append (_cada ,_dbc ...);_gbe ,_dcgf =_aeda ,_bcf ;_abge +=6;case 3:_aebc :=_dabd (_bba [_abge +1]);_egf :=_dabd (_bba [_abge +2]);_feb :=_dabd (_bba [_abge +3]);
_bfea :=_dabd (_bba [_abge +4]);_fgef :=_dabd (_bba [_abge +5]);_daf :=_dabd (_bba [_abge +6]);_fffc :=_cag (_gbe ,_dcgf ,_aebc ,_egf ,_feb ,_bfea ,_fgef ,_daf );_cada =append (_cada ,_fffc ...);_gbe ,_dcgf =_fgef ,_daf ;_abge +=8;default:_c .Log .Debug ("\u0057\u0041\u0052\u004e: \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0070\u0061\u0074\u0068\u003a\u0020%\u0076",_bba );
return _ecfc ;};};if len (_cada )> 0{_ecfc =append (_ecfc ,_cada );};return _ecfc ;};func (_cfa *Context )DrawRectangle (x ,y ,w ,h float64 ){_cfa .NewSubPath ();_cfa .MoveTo (x ,y );_cfa .LineTo (x +w ,y );_cfa .LineTo (x +w ,y +h );_cfa .LineTo (x ,y +h );
_cfa .ClosePath ();};func (_gffe *Context )InvertMask (){if _gffe ._gbba ==nil {_gffe ._gbba =_gf .NewAlpha (_gffe ._dae .Bounds ());}else {for _bcb ,_fad :=range _gffe ._gbba .Pix {_gffe ._gbba .Pix [_bcb ]=255-_fad ;};};};func (_fgdf *Context )ScaleAbout (sx ,sy ,x ,y float64 ){_fgdf .Translate (x ,y );
_fgdf .Scale (sx ,sy );_fgdf .Translate (-x ,-y );};func (_cbe *Context )Height ()int {return _cbe ._ddf };func _cba (_bg ,_dfg ,_bad ,_gc ,_aac ,_eb ,_ecc ,_fe ,_gfc float64 )(_fddf ,_agf float64 ){_gfa :=1-_gfc ;_gbb :=_gfa *_gfa *_gfa ;_cd :=3*_gfa *_gfa *_gfc ;
_ga :=3*_gfa *_gfc *_gfc ;_fg :=_gfc *_gfc *_gfc ;_fddf =_gbb *_bg +_cd *_bad +_ga *_aac +_fg *_ecc ;_agf =_gbb *_dfg +_cd *_gc +_ga *_eb +_fg *_fe ;return ;};func (_cdf *Context )Rotate (angle float64 ){_cdf ._egd =_cdf ._egd .Rotate (angle )};func (_fff *Context )SetLineJoin (lineJoin _ee .LineJoin ){_fff ._dfe =lineJoin };
func (_bgg *Context )SetHexColor (x string ){_bbd ,_cdb ,_baa ,_ece :=_affc (x );_bgg .SetRGBA255 (_bbd ,_cdb ,_baa ,_ece );};func _aggf (_aabd ,_badc ,_gdef ,_adee ,_fda ,_ecg float64 )float64 {return _aabd *_adee +_badc *_fda +_gdef *_ecg ;};func (_ffb *Context )SetDashOffset (offset float64 ){_ffb ._dde =offset };
func _aaga (_bfaf _dc .Color )_ee .Pattern {return &solidPattern {_ceaa :_bfaf }};func (_cab *Context )Fill (){_cab .FillPreserve ();_cab .ClearPath ()};func (_fddg *Context )Stroke (){_fddg .StrokePreserve ();_fddg .ClearPath ()};