//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package imagerender ;import (_fc "errors";_c "fmt";_gb "github.com/golang/freetype/raster";_ff "github.com/unidoc/unipdf/v3/common";_df "github.com/unidoc/unipdf/v3/internal/transform";_e "github.com/unidoc/unipdf/v3/render/internal/context";_fg "golang.org/x/image/draw";_fe "golang.org/x/image/font";_ge "golang.org/x/image/math/f64";_ef "golang.org/x/image/math/fixed";_fb "image";_a "image/color";_ba "image/draw";_b "math";_g "sort";_f "strings";);func _geea (_efbg float64 )_ef .Int26_6 {return _ef .Int26_6 (_efbg *64)};func (_ecd *Context )SetPixel (x ,y int ){_ecd ._fge .Set (x ,y ,_ecd ._acf )};func (_afg *Context )DrawArc (x ,y ,r ,angle1 ,angle2 float64 ){_afg .DrawEllipticalArc (x ,y ,r ,r ,angle1 ,angle2 );};func (_de *Context )SetStrokeStyle (pattern _e .Pattern ){_de ._dcc =pattern };func (_geg *Context )Rotate (angle float64 ){_geg ._fde .Rotate (angle )};func (_cce *Context )Width ()int {return _cce ._fdf };type Context struct{_fdf int ;_dbd int ;_dfa *_gb .Rasterizer ;_fge *_fb .RGBA ;_edd *_fb .Alpha ;_acf _a .Color ;_fca _e .Pattern ;_dcc _e .Pattern ;_dfd _gb .Path ;_eda _gb .Path ;_gd _df .Point ;_gef _df .Point ;_ee bool ;_ec []float64 ;_dfce float64 ;_gfge float64 ;_cfg _e .LineCap ;_bfb _e .LineJoin ;_fdfc _e .FillRule ;_fde _df .Matrix ;_gg *_e .TextState ;_cgb []*Context ;};func (_ecb *Context )drawRegularPolygon (_geee int ,_eedb ,_efg ,_dfcf ,_egd float64 ){_dca :=2*_b .Pi /float64 (_geee );_egd -=_b .Pi /2;if _geee %2==0{_egd +=_dca /2;};_ecb .NewSubPath ();for _bdb :=0;_bdb < _geee ;_bdb ++{_edb :=_egd +_dca *float64 (_bdb );_ecb .LineTo (_eedb +_dfcf *_b .Cos (_edb ),_efg +_dfcf *_b .Sin (_edb ));};_ecb .ClosePath ();};func (_edf *Context )LineTo (x ,y float64 ){if !_edf ._ee {_edf .MoveTo (x ,y );}else {x ,y =_edf .Transform (x ,y );_ebf :=_df .NewPoint (x ,y );_cdc :=_fdfa (_ebf );_edf ._dfd .Add1 (_cdc );_edf ._eda .Add1 (_cdc );_edf ._gef =_ebf ;};};func (_dga *Context )SetDash (dashes ...float64 ){_dga ._ec =dashes };func (_bcb *Context )Shear (x ,y float64 ){_bcb ._fde .Shear (x ,y )};func (_eab *Context )drawString (_ebb *_fb .RGBA ,_egcf string ,_abd ,_bgce float64 ){_adfd :=&_fe .Drawer {Dst :_ebb ,Src :_fb .NewUniform (_eab ._acf ),Face :_eab ._gg .Tf .Face ,Dot :_fdfa (_df .NewPoint (_abd ,_bgce ))};_dgf :=rune (-1);for _ ,_caa :=range _egcf {if _dgf >=0{_adfd .Dot .X +=_adfd .Face .Kern (_dgf ,_caa );};_bgb ,_feg ,_daaf ,_dcfa ,_dccad :=_adfd .Face .Glyph (_adfd .Dot ,_caa );if !_dccad {continue ;};_aaaac :=_bgb .Sub (_bgb .Min );_dbg :=_fg .BiLinear ;_gcb :=_eab ._fde .Clone ();_gcb .Translate (float64 (_bgb .Min .X ),float64 (_bgb .Min .Y ));_cfbf :=_ge .Aff3 {_gcb [0],_gcb [3],_gcb [6],_gcb [1],_gcb [4],_gcb [7]};_dbg .Transform (_adfd .Dst ,_cfbf ,_adfd .Src ,_aaaac ,_fg .Over ,&_fg .Options {SrcMask :_feg ,SrcMaskP :_daaf });_adfd .Dot .X +=_dcfa ;_dgf =_caa ;};};func (_agcc *Context )DrawPoint (x ,y ,r float64 ){_agcc .Push ();_cba ,_fgbf :=_agcc .Transform (x ,y );_agcc .Identity ();_agcc .DrawCircle (_cba ,_fgbf ,r );_agcc .Pop ();};func (_eed *Context )DrawEllipticalArc (x ,y ,rx ,ry ,angle1 ,angle2 float64 ){const _faf =16;for _cfc :=0;_cfc < _faf ;_cfc ++{_dacf :=float64 (_cfc +0)/_faf ;_ega :=float64 (_cfc +1)/_faf ;_dbdc :=angle1 +(angle2 -angle1 )*_dacf ;_bdg :=angle1 +(angle2 -angle1 )*_ega ;_fgd :=x +rx *_b .Cos (_dbdc );_fdfe :=y +ry *_b .Sin (_dbdc );_cdcg :=x +rx *_b .Cos ((_dbdc +_bdg )/2);_eag :=y +ry *_b .Sin ((_dbdc +_bdg )/2);_fdee :=x +rx *_b .Cos (_bdg );_dgc :=y +ry *_b .Sin (_bdg );_dgb :=2*_cdcg -_fgd /2-_fdee /2;_gff :=2*_eag -_fdfe /2-_dgc /2;if _cfc ==0{if _eed ._ee {_eed .LineTo (_fgd ,_fdfe );}else {_eed .MoveTo (_fgd ,_fdfe );};};_eed .QuadraticTo (_dgb ,_gff ,_fdee ,_dgc );};};func (_gdcd *surfacePattern )ColorAt (x ,y int )_a .Color {_cfce :=_gdcd ._befa .Bounds ();switch _gdcd ._dgg {case _begd :if y >=_cfce .Dy (){return _a .Transparent ;};case _fbda :if x >=_cfce .Dx (){return _a .Transparent ;};case _ced :if x >=_cfce .Dx ()||y >=_cfce .Dy (){return _a .Transparent ;};};x =x %_cfce .Dx ()+_cfce .Min .X ;y =y %_cfce .Dy ()+_cfce .Min .Y ;return _gdcd ._befa .At (x ,y );};func NewContextForRGBA (im *_fb .RGBA )*Context {_afe :=im .Bounds ().Size ().X ;_bae :=im .Bounds ().Size ().Y ;return &Context {_fdf :_afe ,_dbd :_bae ,_dfa :_gb .NewRasterizer (_afe ,_bae ),_fge :im ,_acf :_a .Transparent ,_fca :_bcg ,_dcc :_fcbg ,_gfge :1,_fdfc :_e .FillRuleWinding ,_fde :_df .IdentityMatrix (),_gg :_e .NewTextState ()};};func NewContext (width ,height int )*Context {return NewContextForRGBA (_fb .NewRGBA (_fb .Rect (0,0,width ,height )));};func (_cdcb *Context )DrawEllipse (x ,y ,rx ,ry float64 ){_cdcb .NewSubPath ();_cdcb .DrawEllipticalArc (x ,y ,rx ,ry ,0,2*_b .Pi );_cdcb .ClosePath ();};func (_egcfb *Context )MeasureString (s string )(_bgf ,_fgbd float64 ){_gdc :=&_fe .Drawer {Face :_egcfb ._gg .Tf .Face };_cbcg :=_gdc .MeasureString (s );return float64 (_cbcg >>6),_egcfb ._gg .Tf .Size ;};func (_eeb *Context )SetRGBA (r ,g ,b ,a float64 ){_eeb ._acf =_a .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_eeb .setFillAndStrokeColor (_eeb ._acf );};func (_baa *Context )SetRGB (r ,g ,b float64 ){_baa .SetRGBA (r ,g ,b ,1)};func _ebbg (_efec string )(_dcfac ,_ccdd ,_fgbe ,_eaeb int ){_efec =_f .TrimPrefix (_efec ,"\u0023");_eaeb =255;if len (_efec )==3{_cacf :="\u00251\u0078\u0025\u0031\u0078\u0025\u0031x";_c .Sscanf (_efec ,_cacf ,&_dcfac ,&_ccdd ,&_fgbe );_dcfac |=_dcfac <<4;_ccdd |=_ccdd <<4;_fgbe |=_fgbe <<4;};if len (_efec )==6{_bbb :="\u0025\u0030\u0032x\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";_c .Sscanf (_efec ,_bbb ,&_dcfac ,&_ccdd ,&_fgbe );};if len (_efec )==8{_ebg :="\u0025\u00302\u0078\u0025\u00302\u0078\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";_c .Sscanf (_efec ,_ebg ,&_dcfac ,&_ccdd ,&_fgbe ,&_eaeb );};return ;};func (_egc *Context )StrokePreserve (){var _bfg _gb .Painter ;if _egc ._edd ==nil {if _bd ,_efa :=_egc ._dcc .(*solidPattern );_efa {_bcf :=_gb .NewRGBAPainter (_egc ._fge );_bcf .SetColor (_bd ._fbce );_bfg =_bcf ;};};if _bfg ==nil {_bfg =_bfed (_egc ._fge ,_egc ._edd ,_egc ._dcc );};_egc .stroke (_bfg );};func (_deg *Context )DrawString (s string ,x ,y float64 ){_deg .DrawStringAnchored (s ,x ,y ,0,0)};func (_ddc *Context )Fill (){_ddc .FillPreserve ();_ddc .ClearPath ()};func _agcfa (_ggda float64 ,_ffg stops )_a .Color {if _ggda <=0.0||len (_ffg )==1{return _ffg [0]._cbae ;};_fadd :=_ffg [len (_ffg )-1];if _ggda >=_fadd ._eddb {return _fadd ._cbae ;};for _daf ,_ccb :=range _ffg [1:]{if _ggda < _ccb ._eddb {_ggda =(_ggda -_ffg [_daf ]._eddb )/(_ccb ._eddb -_ffg [_daf ]._eddb );return _cbge (_ffg [_daf ]._cbae ,_ccb ._cbae ,_ggda );};};return _fadd ._cbae ;};func (_cfd *Context )setFillAndStrokeColor (_dfe _a .Color ){_cfd ._acf =_dfe ;_cfd ._fca =_gfce (_dfe );_cfd ._dcc =_gfce (_dfe );};func (_beaf *Context )ResetClip (){_beaf ._edd =nil };func (_cbgb stops )Len ()int {return len (_cbgb )};func (_ageg *Context )DrawStringAnchored (s string ,x ,y ,ax ,ay float64 ){_egdc ,_cfa :=_ageg .MeasureString (s );x -=ax *_egdc ;y +=ay *_cfa ;if _ageg ._edd ==nil {_ageg .drawString (_ageg ._fge ,s ,x ,y );}else {_acd :=_fb .NewRGBA (_fb .Rect (0,0,_ageg ._fdf ,_ageg ._dbd ));_ageg .drawString (_acd ,s ,x ,y );_fg .DrawMask (_ageg ._fge ,_ageg ._fge .Bounds (),_acd ,_fb .ZP ,_ageg ._edd ,_fb .ZP ,_fg .Over );};};func (_fdg *Context )SetMatrix (m _df .Matrix ){_fdg ._fde =m };type linearGradient struct{_efbf ,_egab ,_afa ,_fcd float64 ;_afc stops ;};func _ffc (_gfb ,_ab ,_fbc ,_ed ,_bbe ,_bg float64 )[]_df .Point {_cbc :=(_b .Hypot (_fbc -_gfb ,_ed -_ab )+_b .Hypot (_bbe -_fbc ,_bg -_ed ));_dfc :=int (_cbc +0.5);if _dfc < 4{_dfc =4;};_ca :=float64 (_dfc )-1;_ade :=make ([]_df .Point ,_dfc );for _gab :=0;_gab < _dfc ;_gab ++{_ea :=float64 (_gab )/_ca ;_acc ,_gfa :=_dg (_gfb ,_ab ,_fbc ,_ed ,_bbe ,_bg ,_ea );_ade [_gab ]=_df .NewPoint (_acc ,_gfa );};return _ade ;};func (_acfb *Context )QuadraticTo (x1 ,y1 ,x2 ,y2 float64 ){if !_acfb ._ee {_acfb .MoveTo (x1 ,y1 );};x1 ,y1 =_acfb .Transform (x1 ,y1 );x2 ,y2 =_acfb .Transform (x2 ,y2 );_fad :=_df .NewPoint (x1 ,y1 );_ceb :=_df .NewPoint (x2 ,y2 );_adef :=_fdfa (_fad );_da :=_fdfa (_ceb );_acfb ._dfd .Add2 (_adef ,_da );_acfb ._eda .Add2 (_adef ,_da );_acfb ._gef =_ceb ;};func (_ggg *Context )joiner ()_gb .Joiner {switch _ggg ._bfb {case _e .LineJoinBevel :return _gb .BevelJoiner ;case _e .LineJoinRound :return _gb .RoundJoiner ;};return nil ;};func (_adf *Context )CubicTo (x1 ,y1 ,x2 ,y2 ,x3 ,y3 float64 ){if !_adf ._ee {_adf .MoveTo (x1 ,y1 );};_fgb ,_cde :=_adf ._gef .X ,_adf ._gef .Y ;x1 ,y1 =_adf .Transform (x1 ,y1 );x2 ,y2 =_adf .Transform (x2 ,y2 );x3 ,y3 =_adf .Transform (x3 ,y3 );_ede :=_fd (_fgb ,_cde ,x1 ,y1 ,x2 ,y2 ,x3 ,y3 );_fff :=_fdfa (_adf ._gef );for _ ,_dac :=range _ede [1:]{_agcf :=_fdfa (_dac );if _agcf ==_fff {continue ;};_fff =_agcf ;_adf ._dfd .Add1 (_agcf );_adf ._eda .Add1 (_agcf );_adf ._gef =_dac ;};};func _eebe (_acge [][]_df .Point )_gb .Path {var _ageb _gb .Path ;for _ ,_gbf :=range _acge {var _ddd _ef .Point26_6 ;for _ddda ,_dda :=range _gbf {_dad :=_fdfa (_dda );if _ddda ==0{_ageb .Start (_dad );}else {_fbfc :=_dad .X -_ddd .X ;_dge :=_dad .Y -_ddd .Y ;if _fbfc < 0{_fbfc =-_fbfc ;};if _dge < 0{_dge =-_dge ;};if _fbfc +_dge > 8{_ageb .Add1 (_dad );};};_ddd =_dad ;};};return _ageb ;};func (_ffa *Context )ClipPreserve (){_bdd :=_fb .NewAlpha (_fb .Rect (0,0,_ffa ._fdf ,_ffa ._dbd ));_ccd :=_gb .NewAlphaOverPainter (_bdd );_ffa .fill (_ccd );if _ffa ._edd ==nil {_ffa ._edd =_bdd ;}else {_faa :=_fb .NewAlpha (_fb .Rect (0,0,_ffa ._fdf ,_ffa ._dbd ));_fg .DrawMask (_faa ,_faa .Bounds (),_bdd ,_fb .ZP ,_ffa ._edd ,_fb .ZP ,_fg .Over );_ffa ._edd =_faa ;};};func (_cae *Context )capper ()_gb .Capper {switch _cae ._cfg {case _e .LineCapButt :return _gb .ButtCapper ;case _e .LineCapRound :return _gb .RoundCapper ;case _e .LineCapSquare :return _gb .SquareCapper ;};return nil ;};func _gfce (_cccc _a .Color )_e .Pattern {return &solidPattern {_fbce :_cccc }};func _bef (_aef ,_fba ,_fcac ,_bage ,_bcfc ,_fcaa float64 )float64 {return _aef *_bage +_fba *_bcfc +_fcac *_fcaa ;};func (_aab *Context )SetFillRule (fillRule _e .FillRule ){_aab ._fdfc =fillRule };func (_fcc *Context )Clip (){_fcc .ClipPreserve ();_fcc .ClearPath ()};func (_dbdd *Context )SetRGB255 (r ,g ,b int ){_dbdd .SetRGBA255 (r ,g ,b ,255)};type patternPainter struct{_faac *_fb .RGBA ;_bdgb *_fb .Alpha ;_bgfca _e .Pattern ;};type stop struct{_eddb float64 ;_cbae _a .Color ;};var (_bcg =_gfce (_a .White );_fcbg =_gfce (_a .Black ););type radialGradient struct{_afae ,_cbe ,_ddg circle ;_ebc ,_cff float64 ;_def float64 ;_cfdd stops ;};func (_ceg *Context )DrawImageAnchored (im _fb .Image ,x ,y int ,ax ,ay float64 ){_ecdc :=im .Bounds ().Size ();x -=int (ax *float64 (_ecdc .X ));y -=int (ay *float64 (_ecdc .Y ));_fbb :=_fg .BiLinear ;_edgd :=_ceg ._fde .Clone ();_edgd .Translate (float64 (x ),float64 (y ));_adeb :=_ge .Aff3 {_edgd [0],_edgd [3],_edgd [6],_edgd [1],_edgd [4],_edgd [7]};if _ceg ._edd ==nil {_fbb .Transform (_ceg ._fge ,_adeb ,im ,im .Bounds (),_fg .Over ,nil );}else {_fbb .Transform (_ceg ._fge ,_adeb ,im ,im .Bounds (),_fg .Over ,&_fg .Options {DstMask :_ceg ._edd ,DstMaskP :_fb .ZP });};};func _gegb (_face [][]_df .Point ,_bdf []float64 ,_ffcd float64 )[][]_df .Point {var _aca [][]_df .Point ;if len (_bdf )==0{return _face ;};if len (_bdf )==1{_bdf =append (_bdf ,_bdf [0]);};for _ ,_dcce :=range _face {if len (_dcce )< 2{continue ;};_afdd :=_dcce [0];_dfb :=1;_gaca :=0;_gaa :=0.0;if _ffcd !=0{var _bcaf float64 ;for _ ,_bfd :=range _bdf {_bcaf +=_bfd ;};_ffcd =_b .Mod (_ffcd ,_bcaf );if _ffcd < 0{_ffcd +=_bcaf ;};for _bge ,_bee :=range _bdf {_ffcd -=_bee ;if _ffcd < 0{_gaca =_bge ;_gaa =_bee +_ffcd ;break ;};};};var _eca []_df .Point ;_eca =append (_eca ,_afdd );for _dfb < len (_dcce ){_dff :=_bdf [_gaca ];_edcd :=_dcce [_dfb ];_gbbd :=_afdd .Distance (_edcd );_ace :=_dff -_gaa ;if _gbbd > _ace {_ecdb :=_ace /_gbbd ;_dagb :=_afdd .Interpolate (_edcd ,_ecdb );_eca =append (_eca ,_dagb );if _gaca %2==0&&len (_eca )> 1{_aca =append (_aca ,_eca );};_eca =nil ;_eca =append (_eca ,_dagb );_gaa =0;_afdd =_dagb ;_gaca =(_gaca +1)%len (_bdf );}else {_eca =append (_eca ,_edcd );_afdd =_edcd ;_gaa +=_gbbd ;_dfb ++;};};if _gaca %2==0&&len (_eca )> 1{_aca =append (_aca ,_eca );};};return _aca ;};func (_ffcb *Context )SetLineCap (lineCap _e .LineCap ){_ffcb ._cfg =lineCap };func _dg (_fcb ,_aa ,_bb ,_gc ,_af ,_gf ,_ac float64 )(_fgc ,_cb float64 ){_ad :=1-_ac ;_ga :=_ad *_ad ;_cd :=2*_ad *_ac ;_cc :=_ac *_ac ;_fgc =_ga *_fcb +_cd *_bb +_cc *_af ;_cb =_ga *_aa +_cd *_gc +_cc *_gf ;return ;};func (_cdb *Context )AsMask ()*_fb .Alpha {_baea :=_fb .NewAlpha (_cdb ._fge .Bounds ());_fg .Draw (_baea ,_cdb ._fge .Bounds (),_cdb ._fge ,_fb .ZP ,_fg .Src );return _baea ;};func (_aac *Context )SetLineJoin (lineJoin _e .LineJoin ){_aac ._bfb =lineJoin };func (_ebe *Context )SetColor (c _a .Color ){_ebe .setFillAndStrokeColor (c )};func (_aeeb *Context )DrawImage (im _fb .Image ,x ,y int ){_aeeb .DrawImageAnchored (im ,x ,y ,0,0)};func (_aaaa *Context )Stroke (){_aaaa .StrokePreserve ();_aaaa .ClearPath ()};func (_eec *Context )Matrix ()_df .Matrix {return _eec ._fde };func (_ged stops )Swap (i ,j int ){_ged [i ],_ged [j ]=_ged [j ],_ged [i ]};func (_egf *Context )InvertMask (){if _egf ._edd ==nil {_egf ._edd =_fb .NewAlpha (_egf ._fge .Bounds ());}else {for _ggd ,_efb :=range _egf ._edd .Pix {_egf ._edd .Pix [_ggd ]=255-_efb ;};};};func (_gfga *Context )Push (){_gggc :=*_gfga ;_gfga ._cgb =append (_gfga ._cgb ,&_gggc )};func (_aga *Context )Clear (){_cge :=_fb .NewUniform (_aga ._acf );_fg .Draw (_aga ._fge ,_aga ._fge .Bounds (),_cge ,_fb .ZP ,_fg .Src );};type circle struct{_daafa ,_gffc ,_dae float64 };func _cdf (_afdf _fb .Image ,_egg repeatOp )_e .Pattern {return &surfacePattern {_befa :_afdf ,_dgg :_egg };};func (_dcca *Context )SetRGBA255 (r ,g ,b ,a int ){_dcca ._acf =_a .NRGBA {uint8 (r ),uint8 (g ),uint8 (b ),uint8 (a )};_dcca .setFillAndStrokeColor (_dcca ._acf );};func (_caea *Context )DrawCircle (x ,y ,r float64 ){_caea .NewSubPath ();_caea .DrawEllipticalArc (x ,y ,r ,r ,0,2*_b .Pi );_caea .ClosePath ();};func (_dgfd *Context )Scale (x ,y float64 ){_dgfd ._fde .Scale (x ,y )};func (_gbe *Context )SetLineWidth (lineWidth float64 ){_gbe ._gfge =lineWidth };func (_cab *Context )TextState ()*_e .TextState {return _cab ._gg };func _ebef (_gbec ,_egce uint32 ,_gaf float64 )uint8 {return uint8 (int32 (float64 (_gbec )*(1.0-_gaf )+float64 (_egce )*_gaf )>>8);};func (_bab *Context )Transform (x ,y float64 )(_fgeb ,_ecde float64 ){return _bab ._fde .Transform (x ,y )};func (_cec *Context )SetMask (mask *_fb .Alpha )error {if mask .Bounds ().Size ()!=_cec ._fge .Bounds ().Size (){return _fc .New ("\u006d\u0061\u0073\u006b\u0020\u0073i\u007a\u0065\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068 \u0063\u006f\u006e\u0074\u0065\u0078\u0074 \u0073\u0069\u007a\u0065");};_cec ._edd =mask ;return nil ;};func (_gabb *linearGradient )ColorAt (x ,y int )_a .Color {if len (_gabb ._afc )==0{return _a .Transparent ;};_cef ,_fec :=float64 (x ),float64 (y );_bda ,_cgf ,_cgba ,_gag :=_gabb ._efbf ,_gabb ._egab ,_gabb ._afa ,_gabb ._fcd ;_abg ,_acb :=_cgba -_bda ,_gag -_cgf ;if _acb ==0&&_abg !=0{return _agcfa ((_cef -_bda )/_abg ,_gabb ._afc );};if _abg ==0&&_acb !=0{return _agcfa ((_fec -_cgf )/_acb ,_gabb ._afc );};_cfdb :=_abg *(_cef -_bda )+_acb *(_fec -_cgf );if _cfdb < 0{return _gabb ._afc [0]._cbae ;};_eeg :=_b .Hypot (_abg ,_acb );_egcfa :=((_cef -_bda )*-_acb +(_fec -_cgf )*_abg )/(_eeg *_eeg );_cgbb ,_fgga :=_bda +_egcfa *-_acb ,_cgf +_egcfa *_abg ;_bce :=_b .Hypot (_cef -_cgbb ,_fec -_fgga )/_eeg ;return _agcfa (_bce ,_gabb ._afc );};func _egff (_baaf float64 )float64 {return _baaf *_b .Pi /180};func NewContextForImage (im _fb .Image )*Context {return NewContextForRGBA (_fdfd (im ))};func _cbge (_efe ,_cag _a .Color ,_eecf float64 )_a .Color {_degb ,_eba ,_bgfc ,_fda :=_efe .RGBA ();_bbf ,_gddfa ,_cbcgf ,_dagd :=_cag .RGBA ();return _a .RGBA {_ebef (_degb ,_bbf ,_eecf ),_ebef (_eba ,_gddfa ,_eecf ),_ebef (_bgfc ,_cbcgf ,_eecf ),_ebef (_fda ,_dagd ,_eecf )};};func (_beg *Context )Translate (x ,y float64 ){_beg ._fde .Translate (x ,y )};func (_bec *Context )ClosePath (){if _bec ._ee {_gbd :=_fdfa (_bec ._gd );_bec ._dfd .Add1 (_gbd );_bec ._eda .Add1 (_gbd );_bec ._gef =_bec ._gd ;};};func (_dfeb *Context )NewSubPath (){if _dfeb ._ee {_dfeb ._eda .Add1 (_fdfa (_dfeb ._gd ));};_dfeb ._ee =false ;};const (_beab repeatOp =iota ;_begd ;_fbda ;_ced ;);type stops []stop ;func (_dce *Context )SetFillRGBA (r ,g ,b ,a float64 ){_fab :=_a .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_dce ._acf =_fab ;_dce ._fca =_gfce (_fab );};func (_dbb *Context )stroke (_cca _gb .Painter ){_daa :=_dbb ._dfd ;if len (_dbb ._ec )> 0{_daa =_bbce (_daa ,_dbb ._ec ,_dbb ._dfce );}else {_daa =_eebe (_aaag (_daa ));};_fcbgd :=_dbb ._dfa ;_fcbgd .UseNonZeroWinding =true ;_fcbgd .Clear ();_fcbgd .AddStroke (_daa ,_geea (_dbb ._gfge ),_dbb .capper (),_dbb .joiner ());_fcbgd .Rasterize (_cca );};func _fdfd (_gcc _fb .Image )*_fb .RGBA {_gca :=_gcc .Bounds ();_eff :=_fb .NewRGBA (_gca );_ba .Draw (_eff ,_gca ,_gcc ,_gca .Min ,_ba .Src );return _eff ;};type repeatOp int ;func (_ggc *Context )ShearAbout (sx ,sy ,x ,y float64 ){_ggc .Translate (x ,y );_ggc .Shear (sx ,sy );_ggc .Translate (-x ,-y );};func (_bddc *Context )Pop (){_feac :=*_bddc ;_aed :=_bddc ._cgb ;_fccc ,_aed :=_aed [len (_aed )-1],_aed [:len (_aed )-1];*_bddc =*_fccc ;_bddc ._dfd =_feac ._dfd ;_bddc ._eda =_feac ._eda ;_bddc ._gd =_feac ._gd ;_bddc ._gef =_feac ._gef ;_bddc ._ee =_feac ._ee ;_bddc ._gg =_feac ._gg ;};func _bbce (_bac _gb .Path ,_bgef []float64 ,_fgcd float64 )_gb .Path {return _eebe (_gegb (_aaag (_bac ),_bgef ,_fgcd ));};func (_fdea *Context )ClearPath (){_fdea ._dfd .Clear ();_fdea ._eda .Clear ();_fdea ._ee =false };func (_fgg *Context )Image ()_fb .Image {return _fgg ._fge };func _bfed (_fbad *_fb .RGBA ,_adg *_fb .Alpha ,_gdcb _e .Pattern )*patternPainter {return &patternPainter {_fbad ,_adg ,_gdcb };};func (_bcgf *linearGradient )AddColorStop (offset float64 ,color _a .Color ){_bcgf ._afc =append (_bcgf ._afc ,stop {_eddb :offset ,_cbae :color });_g .Sort (_bcgf ._afc );};func _fd (_bgc ,_bf ,_cbg ,_eg ,_fa ,_fee ,_adc ,_cg float64 )[]_df .Point {_gfc :=(_b .Hypot (_cbg -_bgc ,_eg -_bf )+_b .Hypot (_fa -_cbg ,_fee -_eg )+_b .Hypot (_adc -_fa ,_cg -_fee ));_ccc :=int (_gfc +0.5);if _ccc < 4{_ccc =4;};_gce :=float64 (_ccc )-1;_agd :=make ([]_df .Point ,_ccc );for _cbgd :=0;_cbgd < _ccc ;_cbgd ++{_cf :=float64 (_cbgd )/_gce ;_bbea ,_gfg :=_ag (_bgc ,_bf ,_cbg ,_eg ,_fa ,_fee ,_adc ,_cg ,_cf );_agd [_cbgd ]=_df .NewPoint (_bbea ,_gfg );};return _agd ;};func (_bea *Context )SetFillStyle (pattern _e .Pattern ){if _aaa ,_feec :=pattern .(*solidPattern );_feec {_bea ._acf =_aaa ._fbce ;};_bea ._fca =pattern ;};type solidPattern struct{_fbce _a .Color };func (_ecad *patternPainter )Paint (ss []_gb .Span ,done bool ){_ege :=_ecad ._faac .Bounds ();for _ ,_bccb :=range ss {if _bccb .Y < _ege .Min .Y {continue ;};if _bccb .Y >=_ege .Max .Y {return ;};if _bccb .X0 < _ege .Min .X {_bccb .X0 =_ege .Min .X ;};if _bccb .X1 > _ege .Max .X {_bccb .X1 =_ege .Max .X ;};if _bccb .X0 >=_bccb .X1 {continue ;};const _bfdc =1<<16-1;_baead :=_bccb .Y -_ecad ._faac .Rect .Min .Y ;_gega :=_bccb .X0 -_ecad ._faac .Rect .Min .X ;_gfgf :=(_bccb .Y -_ecad ._faac .Rect .Min .Y )*_ecad ._faac .Stride +(_bccb .X0 -_ecad ._faac .Rect .Min .X )*4;_dccf :=_gfgf +(_bccb .X1 -_bccb .X0 )*4;for _bde ,_ddf :=_gfgf ,_gega ;_bde < _dccf ;_bde ,_ddf =_bde +4,_ddf +1{_ccgb :=_bccb .Alpha ;if _ecad ._bdgb !=nil {_ccgb =_ccgb *uint32 (_ecad ._bdgb .AlphaAt (_ddf ,_baead ).A )/255;if _ccgb ==0{continue ;};};_cgeb :=_ecad ._bgfca .ColorAt (_ddf ,_baead );_ffge ,_fcbe ,_gbc ,_edbf :=_cgeb .RGBA ();_abc :=uint32 (_ecad ._faac .Pix [_bde +0]);_fcf :=uint32 (_ecad ._faac .Pix [_bde +1]);_egcfbd :=uint32 (_ecad ._faac .Pix [_bde +2]);_acged :=uint32 (_ecad ._faac .Pix [_bde +3]);_bdea :=(_bfdc -(_edbf *_ccgb /_bfdc ))*0x101;_ecad ._faac .Pix [_bde +0]=uint8 ((_abc *_bdea +_ffge *_ccgb )/_bfdc >>8);_ecad ._faac .Pix [_bde +1]=uint8 ((_fcf *_bdea +_fcbe *_ccgb )/_bfdc >>8);_ecad ._faac .Pix [_bde +2]=uint8 ((_egcfbd *_bdea +_gbc *_ccgb )/_bfdc >>8);_ecad ._faac .Pix [_bde +3]=uint8 ((_acged *_bdea +_edbf *_ccgb )/_bfdc >>8);};};};func (_gddf *Context )MoveTo (x ,y float64 ){if _gddf ._ee {_gddf ._eda .Add1 (_fdfa (_gddf ._gd ));};x ,y =_gddf .Transform (x ,y );_aaeg :=_df .NewPoint (x ,y );_gfd :=_fdfa (_aaeg );_gddf ._dfd .Start (_gfd );_gddf ._eda .Start (_gfd );_gddf ._gd =_aaeg ;_gddf ._gef =_aaeg ;_gddf ._ee =true ;};func (_feaa *Context )FillPreserve (){var _gee _gb .Painter ;if _feaa ._edd ==nil {if _bca ,_edc :=_feaa ._fca .(*solidPattern );_edc {_edg :=_gb .NewRGBAPainter (_feaa ._fge );_edg .SetColor (_bca ._fbce );_gee =_edg ;};};if _gee ==nil {_gee =_bfed (_feaa ._fge ,_feaa ._edd ,_feaa ._fca );};_feaa .fill (_gee );};func (_bddd *Context )DrawLine (x1 ,y1 ,x2 ,y2 float64 ){_bddd .MoveTo (x1 ,y1 );_bddd .LineTo (x2 ,y2 )};func (_gde *radialGradient )AddColorStop (offset float64 ,color _a .Color ){_gde ._cfdd =append (_gde ._cfdd ,stop {_eddb :offset ,_cbae :color });_g .Sort (_gde ._cfdd );};func _ebgd (_gdde _ef .Int26_6 )float64 {const _cdd ,_bfc =6,1<<6-1;if _gdde >=0{return float64 (_gdde >>_cdd )+float64 (_gdde &_bfc )/64;};_gdde =-_gdde ;if _gdde >=0{return -(float64 (_gdde >>_cdd )+float64 (_gdde &_bfc )/64);};return 0;};func (_gbed *solidPattern )ColorAt (x ,y int )_a .Color {return _gbed ._fbce };func _ag (_ae ,_dd ,_fbd ,_cbd ,_aae ,_eb ,_fea ,_db ,_age float64 )(_agg ,_dc float64 ){_afd :=1-_age ;_eaf :=_afd *_afd *_afd ;_cbdf :=3*_afd *_afd *_age ;_bc :=3*_afd *_age *_age ;_be :=_age *_age *_age ;_agg =_eaf *_ae +_cbdf *_fbd +_bc *_aae +_be *_fea ;_dc =_eaf *_dd +_cbdf *_cbd +_bc *_eb +_be *_db ;return ;};func (_feb *Context )fill (_fbf _gb .Painter ){_cfbb :=_feb ._eda ;if _feb ._ee {_cfbb =make (_gb .Path ,len (_feb ._eda ));copy (_cfbb ,_feb ._eda );_cfbb .Add1 (_fdfa (_feb ._gd ));};_acg :=_feb ._dfa ;_acg .UseNonZeroWinding =_feb ._fdfc ==_e .FillRuleWinding ;_acg .Clear ();_acg .AddPath (_cfbb );_acg .Rasterize (_fbf );};func (_bfe *Context )DrawRoundedRectangle (x ,y ,w ,h ,r float64 ){_dbe ,_febf ,_ddb ,_cfe :=x ,x +r ,x +w -r ,x +w ;_fgba ,_adcg ,_aaga ,_ebfa :=y ,y +r ,y +h -r ,y +h ;_bfe .NewSubPath ();_bfe .MoveTo (_febf ,_fgba );_bfe .LineTo (_ddb ,_fgba );_bfe .DrawArc (_ddb ,_adcg ,r ,_egff (270),_egff (360));_bfe .LineTo (_cfe ,_aaga );_bfe .DrawArc (_ddb ,_aaga ,r ,_egff (0),_egff (90));_bfe .LineTo (_febf ,_ebfa );_bfe .DrawArc (_febf ,_aaga ,r ,_egff (90),_egff (180));_bfe .LineTo (_dbe ,_adcg );_bfe .DrawArc (_febf ,_adcg ,r ,_egff (180),_egff (270));_bfe .ClosePath ();};func (_bdgf *radialGradient )ColorAt (x ,y int )_a .Color {if len (_bdgf ._cfdd )==0{return _a .Transparent ;};_gac ,_dfad :=float64 (x )+0.5-_bdgf ._afae ._daafa ,float64 (y )+0.5-_bdgf ._afae ._gffc ;_cdea :=_bef (_gac ,_dfad ,_bdgf ._afae ._dae ,_bdgf ._ddg ._daafa ,_bdgf ._ddg ._gffc ,_bdgf ._ddg ._dae );_egcd :=_bef (_gac ,_dfad ,-_bdgf ._afae ._dae ,_gac ,_dfad ,_bdgf ._afae ._dae );if _bdgf ._ebc ==0{if _cdea ==0{return _a .Transparent ;};_defe :=0.5*_egcd /_cdea ;if _defe *_bdgf ._ddg ._dae >=_bdgf ._def {return _agcfa (_defe ,_bdgf ._cfdd );};return _a .Transparent ;};_dgba :=_bef (_cdea ,_bdgf ._ebc ,0,_cdea ,-_egcd ,0);if _dgba >=0{_cdg :=_b .Sqrt (_dgba );_gbg :=(_cdea +_cdg )*_bdgf ._cff ;_dde :=(_cdea -_cdg )*_bdgf ._cff ;if _gbg *_bdgf ._ddg ._dae >=_bdgf ._def {return _agcfa (_gbg ,_bdgf ._cfdd );}else if _dde *_bdgf ._ddg ._dae >=_bdgf ._def {return _agcfa (_dde ,_bdgf ._cfdd );};};return _a .Transparent ;};func _aaag (_baab _gb .Path )[][]_df .Point {var _efeb [][]_df .Point ;var _dba []_df .Point ;var _ccdf ,_agb float64 ;for _cdcc :=0;_cdcc < len (_baab );{switch _baab [_cdcc ]{case 0:if len (_dba )> 0{_efeb =append (_efeb ,_dba );_dba =nil ;};_cfcg :=_ebgd (_baab [_cdcc +1]);_fbfe :=_ebgd (_baab [_cdcc +2]);_dba =append (_dba ,_df .NewPoint (_cfcg ,_fbfe ));_ccdf ,_agb =_cfcg ,_fbfe ;_cdcc +=4;case 1:_ece :=_ebgd (_baab [_cdcc +1]);_ded :=_ebgd (_baab [_cdcc +2]);_dba =append (_dba ,_df .NewPoint (_ece ,_ded ));_ccdf ,_agb =_ece ,_ded ;_cdcc +=4;case 2:_fbde :=_ebgd (_baab [_cdcc +1]);_agde :=_ebgd (_baab [_cdcc +2]);_dbae :=_ebgd (_baab [_cdcc +3]);_ffd :=_ebgd (_baab [_cdcc +4]);_gad :=_ffc (_ccdf ,_agb ,_fbde ,_agde ,_dbae ,_ffd );_dba =append (_dba ,_gad ...);_ccdf ,_agb =_dbae ,_ffd ;_cdcc +=6;case 3:_eae :=_ebgd (_baab [_cdcc +1]);_bgg :=_ebgd (_baab [_cdcc +2]);_bccg :=_ebgd (_baab [_cdcc +3]);_edae :=_ebgd (_baab [_cdcc +4]);_dbfe :=_ebgd (_baab [_cdcc +5]);_egb :=_ebgd (_baab [_cdcc +6]);_bbc :=_fd (_ccdf ,_agb ,_eae ,_bgg ,_bccg ,_edae ,_dbfe ,_egb );_dba =append (_dba ,_bbc ...);_ccdf ,_agb =_dbfe ,_egb ;_cdcc +=8;default:_ff .Log .Debug ("\u0057\u0041\u0052\u004e: \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0070\u0061\u0074\u0068\u003a\u0020%\u0076",_baab );return _efeb ;};};if len (_dba )> 0{_efeb =append (_efeb ,_dba );};return _efeb ;};func (_gbb *Context )SetDashOffset (offset float64 ){_gbb ._dfce =offset };func (_cdca *Context )ScaleAbout (sx ,sy ,x ,y float64 ){_cdca .Translate (x ,y );_cdca .Scale (sx ,sy );_cdca .Translate (-x ,-y );};func (_cbcc *Context )LineWidth ()float64 {return _cbcc ._gfge };func (_aeee *Context )DrawRectangle (x ,y ,w ,h float64 ){_aeee .NewSubPath ();_aeee .MoveTo (x ,y );_aeee .LineTo (x +w ,y );_aeee .LineTo (x +w ,y +h );_aeee .LineTo (x ,y +h );_aeee .ClosePath ();};func (_aaec *Context )RotateAbout (angle ,x ,y float64 ){_aaec .Translate (x ,y );_aaec .Rotate (angle );_aaec .Translate (-x ,-y );};func (_dace stops )Less (i ,j int )bool {return _dace [i ]._eddb < _dace [j ]._eddb };func _aff (_bcc ,_gcee ,_cgbg ,_ecbc float64 )_e .Gradient {_ccg :=&linearGradient {_efbf :_bcc ,_egab :_gcee ,_afa :_cgbg ,_fcd :_ecbc };return _ccg ;};func (_caf *Context )Identity (){_caf ._fde =_df .IdentityMatrix ()};func _fdfa (_dbac _df .Point )_ef .Point26_6 {return _ef .Point26_6 {X :_geea (_dbac .X ),Y :_geea (_dbac .Y )}};func _aeed (_fbfb ,_beb ,_afb ,_dbf ,_cefc ,_eee float64 )_e .Gradient {_fgdf :=circle {_fbfb ,_beb ,_afb };_cega :=circle {_dbf ,_cefc ,_eee };_fac :=circle {_dbf -_fbfb ,_cefc -_beb ,_eee -_afb };_afce :=_bef (_fac ._daafa ,_fac ._gffc ,-_fac ._dae ,_fac ._daafa ,_fac ._gffc ,_fac ._dae );var _fed float64 ;if _afce !=0{_fed =1.0/_afce ;};_eef :=-_fgdf ._dae ;_fege :=&radialGradient {_afae :_fgdf ,_cbe :_cega ,_ddg :_fac ,_ebc :_afce ,_cff :_fed ,_def :_eef };return _fege ;};func (_bag *Context )Height ()int {return _bag ._dbd };type surfacePattern struct{_befa _fb .Image ;_dgg repeatOp ;};func (_agc *Context )SetStrokeRGBA (r ,g ,b ,a float64 ){_aag :=_a .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_agc ._dcc =_gfce (_aag );};func (_aee *Context )SetHexColor (x string ){_cfb ,_ce ,_gdd ,_cac :=_ebbg (x );_aee .SetRGBA255 (_cfb ,_ce ,_gdd ,_cac );};