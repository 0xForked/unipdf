//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package imagerender ;import (_ae "errors";_a "fmt";_ac "github.com/golang/freetype/raster";_gd "github.com/unidoc/unipdf/v3/common";_cg "github.com/unidoc/unipdf/v3/internal/transform";_cd "github.com/unidoc/unipdf/v3/render/internal/context";_ad "golang.org/x/image/draw";
_bc "golang.org/x/image/font";_db "golang.org/x/image/math/f64";_bf "golang.org/x/image/math/fixed";_ag "image";_c "image/color";_d "image/draw";_e "math";_b "sort";_gf "strings";);func NewContext (width ,height int )*Context {return NewContextForRGBA (_ag .NewRGBA (_ag .Rect (0,0,width ,height )));
};func (_gad *Context )DrawString (s string ,face _bc .Face ,x ,y float64 ){_gad .DrawStringAnchored (s ,face ,x ,y ,0,0);};func (_ggfd *Context )DrawCircle (x ,y ,r float64 ){_ggfd .NewSubPath ();_ggfd .DrawEllipticalArc (x ,y ,r ,r ,0,2*_e .Pi );_ggfd .ClosePath ();
};func (_bb *Context )SetFillStyle (pattern _cd .Pattern ){if _gab ,_dae :=pattern .(*solidPattern );_dae {_bb ._ecg =_gab ._gbfb ;};_bb ._aae =pattern ;};func _ggg (_bdd ,_dfd ,_fgc ,_dg ,_eeg ,_eg ,_fc ,_ega ,_cdg float64 )(_ge ,_da float64 ){_ffg :=1-_cdg ;
_ef :=_ffg *_ffg *_ffg ;_aa :=3*_ffg *_ffg *_cdg ;_dc :=3*_ffg *_cdg *_cdg ;_bab :=_cdg *_cdg *_cdg ;_ge =_ef *_bdd +_aa *_fgc +_dc *_eeg +_bab *_fc ;_da =_ef *_dfd +_aa *_dg +_dc *_eg +_bab *_ega ;return ;};func (_fdba *radialGradient )ColorAt (x ,y int )_c .Color {if len (_fdba ._fdc )==0{return _c .Transparent ;
};_fae ,_edad :=float64 (x )+0.5-_fdba ._eda ._efde ,float64 (y )+0.5-_fdba ._eda ._gee ;_ddd :=_bgab (_fae ,_edad ,_fdba ._eda ._bee ,_fdba ._dgde ._efde ,_fdba ._dgde ._gee ,_fdba ._dgde ._bee );_egf :=_bgab (_fae ,_edad ,-_fdba ._eda ._bee ,_fae ,_edad ,_fdba ._eda ._bee );
if _fdba ._gddc ==0{if _ddd ==0{return _c .Transparent ;};_ebae :=0.5*_egf /_ddd ;if _ebae *_fdba ._dgde ._bee >=_fdba ._feg {return _ddeg (_ebae ,_fdba ._fdc );};return _c .Transparent ;};_bgg :=_bgab (_ddd ,_fdba ._gddc ,0,_ddd ,-_egf ,0);if _bgg >=0{_bgfd :=_e .Sqrt (_bgg );
_fefb :=(_ddd +_bgfd )*_fdba ._fad ;_gbd :=(_ddd -_bgfd )*_fdba ._fad ;if _fefb *_fdba ._dgde ._bee >=_fdba ._feg {return _ddeg (_fefb ,_fdba ._fdc );}else if _gbd *_fdba ._dgde ._bee >=_fdba ._feg {return _ddeg (_gbd ,_fdba ._fdc );};};return _c .Transparent ;
};func (_dafe *patternPainter )Paint (ss []_ac .Span ,done bool ){_cbdb :=_dafe ._ffcf .Bounds ();for _ ,_geeg :=range ss {if _geeg .Y < _cbdb .Min .Y {continue ;};if _geeg .Y >=_cbdb .Max .Y {return ;};if _geeg .X0 < _cbdb .Min .X {_geeg .X0 =_cbdb .Min .X ;
};if _geeg .X1 > _cbdb .Max .X {_geeg .X1 =_cbdb .Max .X ;};if _geeg .X0 >=_geeg .X1 {continue ;};const _eebd =1<<16-1;_agcb :=_geeg .Y -_dafe ._ffcf .Rect .Min .Y ;_efa :=_geeg .X0 -_dafe ._ffcf .Rect .Min .X ;_cfee :=(_geeg .Y -_dafe ._ffcf .Rect .Min .Y )*_dafe ._ffcf .Stride +(_geeg .X0 -_dafe ._ffcf .Rect .Min .X )*4;
_aafaa :=_cfee +(_geeg .X1 -_geeg .X0 )*4;for _ebdf ,_eabc :=_cfee ,_efa ;_ebdf < _aafaa ;_ebdf ,_eabc =_ebdf +4,_eabc +1{_fbb :=_geeg .Alpha ;if _dafe ._fegc !=nil {_fbb =_fbb *uint32 (_dafe ._fegc .AlphaAt (_eabc ,_agcb ).A )/255;if _fbb ==0{continue ;
};};_dfb :=_dafe ._fbae .ColorAt (_eabc ,_agcb );_gaa ,_gadf ,_ebfc ,_eeed :=_dfb .RGBA ();_bbfc :=uint32 (_dafe ._ffcf .Pix [_ebdf +0]);_acag :=uint32 (_dafe ._ffcf .Pix [_ebdf +1]);_ceae :=uint32 (_dafe ._ffcf .Pix [_ebdf +2]);_aea :=uint32 (_dafe ._ffcf .Pix [_ebdf +3]);
_faf :=(_eebd -(_eeed *_fbb /_eebd ))*0x101;_dafe ._ffcf .Pix [_ebdf +0]=uint8 ((_bbfc *_faf +_gaa *_fbb )/_eebd >>8);_dafe ._ffcf .Pix [_ebdf +1]=uint8 ((_acag *_faf +_gadf *_fbb )/_eebd >>8);_dafe ._ffcf .Pix [_ebdf +2]=uint8 ((_ceae *_faf +_ebfc *_fbb )/_eebd >>8);
_dafe ._ffcf .Pix [_ebdf +3]=uint8 ((_aea *_faf +_eeed *_fbb )/_eebd >>8);};};};func _bcgg (_bea _ac .Path ,_ead []float64 ,_ceag float64 )_ac .Path {return _bda (_aafa (_ffed (_bea ),_ead ,_ceag ));};func (_ebd *Context )Fill (){_ebd .FillPreserve ();
_ebd .ClearPath ()};func (_gfg *Context )SetRGBA (r ,g ,b ,a float64 ){_gfg ._ecg =_c .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_gfg .setFillAndStrokeColor (_gfg ._ecg );};type solidPattern struct{_gbfb _c .Color };func (_dde *Context )FillPattern ()_cd .Pattern {return _dde ._aae };
type Context struct{_fdg int ;_agb int ;_eeaa *_ac .Rasterizer ;_abf *_ag .RGBA ;_dcb *_ag .Alpha ;_ecg _c .Color ;_aae _cd .Pattern ;_aed _cd .Pattern ;_bdef _ac .Path ;_gggd _ac .Path ;_bg _cg .Point ;_gda _cg .Point ;_gdec bool ;_bdc []float64 ;_gdd float64 ;
_caf float64 ;_eca _cd .LineCap ;_aaea _cd .LineJoin ;_fdeb _cd .FillRule ;_fb _cg .Matrix ;_fbf _cd .TextState ;_edc []*Context ;};func (_feb *Context )setFillAndStrokeColor (_cedg _c .Color ){_feb ._ecg =_cedg ;_feb ._aae =_cfe (_cedg );_feb ._aed =_cfe (_cedg );
};type patternPainter struct{_ffcf *_ag .RGBA ;_fegc *_ag .Alpha ;_fbae _cd .Pattern ;};func (_fdd *Context )SetColor (c _c .Color ){_fdd .setFillAndStrokeColor (c )};func _bgab (_abc ,_eaec ,_fgfa ,_bcd ,_ebf ,_gabb float64 )float64 {return _abc *_bcd +_eaec *_ebf +_fgfa *_gabb ;
};func (_degd *Context )ResetClip (){_degd ._dcb =nil };func (_bff *Context )SetRGBA255 (r ,g ,b ,a int ){_bff ._ecg =_c .NRGBA {uint8 (r ),uint8 (g ),uint8 (b ),uint8 (a )};_bff .setFillAndStrokeColor (_bff ._ecg );};func (_bgb *Context )SetStrokeStyle (pattern _cd .Pattern ){_bgb ._aed =pattern };
func (_dfc *Context )drawRegularPolygon (_fecd int ,_ccba ,_fee ,_bacd ,_cbe float64 ){_defg :=2*_e .Pi /float64 (_fecd );_cbe -=_e .Pi /2;if _fecd %2==0{_cbe +=_defg /2;};_dfc .NewSubPath ();for _dbf :=0;_dbf < _fecd ;_dbf ++{_caa :=_cbe +_defg *float64 (_dbf );
_dfc .LineTo (_ccba +_bacd *_e .Cos (_caa ),_fee +_bacd *_e .Sin (_caa ));};_dfc .ClosePath ();};func (_fe *Context )SetLineJoin (lineJoin _cd .LineJoin ){_fe ._aaea =lineJoin };func _agcbg (_ccdf _ag .Image )*_ag .RGBA {_ggge :=_ccdf .Bounds ();_bebg :=_ag .NewRGBA (_ggge );
_d .Draw (_bebg ,_ggge ,_ccdf ,_ggge .Min ,_d .Src );return _bebg ;};func (_cgaa *surfacePattern )ColorAt (x ,y int )_c .Color {_cege :=_cgaa ._bgbg .Bounds ();switch _cgaa ._fea {case _cad :if y >=_cege .Dy (){return _c .Transparent ;};case _gbg :if x >=_cege .Dx (){return _c .Transparent ;
};case _gbgc :if x >=_cege .Dx ()||y >=_cege .Dy (){return _c .Transparent ;};};x =x %_cege .Dx ()+_cege .Min .X ;y =y %_cege .Dy ()+_cege .Min .Y ;return _cgaa ._bgbg .At (x ,y );};func (_daf *Context )joiner ()_ac .Joiner {switch _daf ._aaea {case _cd .LineJoinBevel :return _ac .BevelJoiner ;
case _cd .LineJoinRound :return _ac .RoundJoiner ;};return nil ;};func (_afa *Context )AsMask ()*_ag .Alpha {_bgbd :=_ag .NewAlpha (_afa ._abf .Bounds ());_ad .Draw (_bgbd ,_afa ._abf .Bounds (),_afa ._abf ,_ag .Point {},_ad .Src );return _bgbd ;};func (_cgaf *Context )Shear (x ,y float64 ){_cgaf ._fb .Shear (x ,y )};
func _bda (_afge [][]_cg .Point )_ac .Path {var _bggd _ac .Path ;for _ ,_gebd :=range _afge {var _ddgf _bf .Point26_6 ;for _dff ,_bfffc :=range _gebd {_bffc :=_aga (_bfffc );if _dff ==0{_bggd .Start (_bffc );}else {_fdgd :=_bffc .X -_ddgf .X ;_ggcg :=_bffc .Y -_ddgf .Y ;
if _fdgd < 0{_fdgd =-_fdgd ;};if _ggcg < 0{_ggcg =-_ggcg ;};if _fdgd +_ggcg > 8{_bggd .Add1 (_bffc );};};_ddgf =_bffc ;};};return _bggd ;};func _ffed (_dbfg _ac .Path )[][]_cg .Point {var _bdb [][]_cg .Point ;var _ece []_cg .Point ;var _gac ,_efeg float64 ;
for _dab :=0;_dab < len (_dbfg );{switch _dbfg [_dab ]{case 0:if len (_ece )> 0{_bdb =append (_bdb ,_ece );_ece =nil ;};_fadg :=_bbdb (_dbfg [_dab +1]);_beb :=_bbdb (_dbfg [_dab +2]);_ece =append (_ece ,_cg .NewPoint (_fadg ,_beb ));_gac ,_efeg =_fadg ,_beb ;
_dab +=4;case 1:_ecd :=_bbdb (_dbfg [_dab +1]);_fbgf :=_bbdb (_dbfg [_dab +2]);_ece =append (_ece ,_cg .NewPoint (_ecd ,_fbgf ));_gac ,_efeg =_ecd ,_fbgf ;_dab +=4;case 2:_cag :=_bbdb (_dbfg [_dab +1]);_bdbf :=_bbdb (_dbfg [_dab +2]);_caab :=_bbdb (_dbfg [_dab +3]);
_dcdf :=_bbdb (_dbfg [_dab +4]);_acggf :=_aeb (_gac ,_efeg ,_cag ,_bdbf ,_caab ,_dcdf );_ece =append (_ece ,_acggf ...);_gac ,_efeg =_caab ,_dcdf ;_dab +=6;case 3:_afcf :=_bbdb (_dbfg [_dab +1]);_fda :=_bbdb (_dbfg [_dab +2]);_gcc :=_bbdb (_dbfg [_dab +3]);
_cbca :=_bbdb (_dbfg [_dab +4]);_cgaff :=_bbdb (_dbfg [_dab +5]);_ecgb :=_bbdb (_dbfg [_dab +6]);_dba :=_deg (_gac ,_efeg ,_afcf ,_fda ,_gcc ,_cbca ,_cgaff ,_ecgb );_ece =append (_ece ,_dba ...);_gac ,_efeg =_cgaff ,_ecgb ;_dab +=8;default:_gd .Log .Debug ("\u0057\u0041\u0052\u004e: \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0070\u0061\u0074\u0068\u003a\u0020%\u0076",_dbfg );
return _bdb ;};};if len (_ece )> 0{_bdb =append (_bdb ,_ece );};return _bdb ;};func (_edd *Context )Matrix ()_cg .Matrix {return _edd ._fb };func (_ccd *Context )SetMask (mask *_ag .Alpha )error {if mask .Bounds ().Size ()!=_ccd ._abf .Bounds ().Size (){return _ae .New ("\u006d\u0061\u0073\u006b\u0020\u0073i\u007a\u0065\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068 \u0063\u006f\u006e\u0074\u0065\u0078\u0074 \u0073\u0069\u007a\u0065");
};_ccd ._dcb =mask ;return nil ;};func NewContextForRGBA (im *_ag .RGBA )*Context {_ea :=im .Bounds ().Size ().X ;_fa :=im .Bounds ().Size ().Y ;return &Context {_fdg :_ea ,_agb :_fa ,_eeaa :_ac .NewRasterizer (_ea ,_fa ),_abf :im ,_ecg :_c .Transparent ,_aae :_fde ,_aed :_fdeg ,_caf :1,_fdeb :_cd .FillRuleWinding ,_fb :_cg .IdentityMatrix (),_fbf :_cd .NewTextState ()};
};func (_cbf *Context )LineTo (x ,y float64 ){if !_cbf ._gdec {_cbf .MoveTo (x ,y );}else {x ,y =_cbf .Transform (x ,y );_eff :=_cg .NewPoint (x ,y );_bbc :=_aga (_eff );_cbf ._bdef .Add1 (_bbc );_cbf ._gggd .Add1 (_bbc );_cbf ._gda =_eff ;};};func (_fdb *Context )Push (){_cca :=*_fdb ;
_fdb ._edc =append (_fdb ._edc ,&_cca )};func (_cba *Context )drawString (_fed string ,_egb _bc .Face ,_ddb ,_cgf float64 ){_cbg :=&_bc .Drawer {Src :_ag .NewUniform (_cba ._ecg ),Face :_egb ,Dot :_aga (_cg .NewPoint (_ddb ,_cgf ))};_ddfb :=rune (-1);for _ ,_ggef :=range _fed {if _ddfb >=0{_cbg .Dot .X +=_cbg .Face .Kern (_ddfb ,_ggef );
};_cee ,_aaf ,_dfa ,_cdf ,_bce :=_cbg .Face .Glyph (_cbg .Dot ,_ggef );if !_bce {continue ;};_bfb :=_cee .Sub (_cee .Min );_gfdc :=_ag .NewRGBA (_bfb );_ad .DrawMask (_gfdc ,_bfb ,_cbg .Src ,_ag .Point {},_aaf ,_dfa ,_ad .Over );var _eecd *_ad .Options ;
if _cba ._dcb !=nil {_eecd =&_ad .Options {DstMask :_cba ._dcb ,DstMaskP :_ag .Point {}};};_aabg :=_cba ._fb .Clone ().Translate (float64 (_cee .Min .X ),float64 (_cee .Min .Y ));_bdfa :=_db .Aff3 {_aabg [0],_aabg [3],_aabg [6],_aabg [1],_aabg [4],_aabg [7]};
_ad .BiLinear .Transform (_cba ._abf ,_bdfa ,_gfdc ,_bfb ,_ad .Over ,_eecd );_cbg .Dot .X +=_cdf ;_ddfb =_ggef ;};};func (_fdef *Context )DrawRectangle (x ,y ,w ,h float64 ){_fdef .NewSubPath ();_fdef .MoveTo (x ,y );_fdef .LineTo (x +w ,y );_fdef .LineTo (x +w ,y +h );
_fdef .LineTo (x ,y +h );_fdef .ClosePath ();};type stop struct{_egag float64 ;_afb _c .Color ;};func (_afab *Context )Rotate (angle float64 ){_afab ._fb =_afab ._fb .Rotate (angle )};func (_dcg *Context )DrawImageAnchored (im _ag .Image ,x ,y int ,ax ,ay float64 ){_gaf :=im .Bounds ().Size ();
x -=int (ax *float64 (_gaf .X ));y -=int (ay *float64 (_gaf .Y ));_agc :=_ad .BiLinear ;_bfd :=_dcg ._fb .Clone ().Translate (float64 (x ),float64 (y ));_fef :=_db .Aff3 {_bfd [0],_bfd [3],_bfd [6],_bfd [1],_bfd [4],_bfd [7]};if _dcg ._dcb ==nil {_agc .Transform (_dcg ._abf ,_fef ,im ,im .Bounds (),_ad .Over ,nil );
}else {_agc .Transform (_dcg ._abf ,_fef ,im ,im .Bounds (),_ad .Over ,&_ad .Options {DstMask :_dcg ._dcb ,DstMaskP :_ag .Point {}});};};func (_cbfc *Context )DrawPoint (x ,y ,r float64 ){_cbfc .Push ();_dec ,_gded :=_cbfc .Transform (x ,y );_cbfc .Identity ();
_cbfc .DrawCircle (_dec ,_gded ,r );_cbfc .Pop ();};const (_bbfe repeatOp =iota ;_cad ;_gbg ;_gbgc ;);func (_gec *Context )SetDash (dashes ...float64 ){_gec ._bdc =dashes };func (_efc *Context )DrawStringAnchored (s string ,face _bc .Face ,x ,y ,ax ,ay float64 ){_fgfc ,_dgf :=_efc .MeasureString (s ,face );
_efc .drawString (s ,face ,x -ax *_fgfc ,y +ay *_dgf );};func _bfgf (_cdggb string )(_fff ,_gbda ,_fbfg ,_fgd int ){_cdggb =_gf .TrimPrefix (_cdggb ,"\u0023");_fgd =255;if len (_cdggb )==3{_aec :="\u00251\u0078\u0025\u0031\u0078\u0025\u0031x";_a .Sscanf (_cdggb ,_aec ,&_fff ,&_gbda ,&_fbfg );
_fff |=_fff <<4;_gbda |=_gbda <<4;_fbfg |=_fbfg <<4;};if len (_cdggb )==6{_abfb :="\u0025\u0030\u0032x\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";_a .Sscanf (_cdggb ,_abfb ,&_fff ,&_gbda ,&_fbfg );};if len (_cdggb )==8{_cdda :="\u0025\u00302\u0078\u0025\u00302\u0078\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";
_a .Sscanf (_cdggb ,_cdda ,&_fff ,&_gbda ,&_fbfg ,&_fgd );};return ;};func (_cgd *Context )ClearPath (){_cgd ._bdef .Clear ();_cgd ._gggd .Clear ();_cgd ._gdec =false };func (_geb *Context )ScaleAbout (sx ,sy ,x ,y float64 ){_geb .Translate (x ,y );_geb .Scale (sx ,sy );
_geb .Translate (-x ,-y );};func (_ffca *Context )SetPixel (x ,y int ){_ffca ._abf .Set (x ,y ,_ffca ._ecg )};func _egcb (_dafa float64 )_bf .Int26_6 {return _bf .Int26_6 (_dafa *64)};func (_dcd *Context )MoveTo (x ,y float64 ){if _dcd ._gdec {_dcd ._gggd .Add1 (_aga (_dcd ._bg ));
};x ,y =_dcd .Transform (x ,y );_dgd :=_cg .NewPoint (x ,y );_gfd :=_aga (_dgd );_dcd ._bdef .Start (_gfd );_dcd ._gggd .Start (_gfd );_dcd ._bg =_dgd ;_dcd ._gda =_dgd ;_dcd ._gdec =true ;};func (_aca *radialGradient )AddColorStop (offset float64 ,color _c .Color ){_aca ._fdc =append (_aca ._fdc ,stop {_egag :offset ,_afb :color });
_b .Sort (_aca ._fdc );};func _aefa (_gbaa ,_fce ,_ggc ,_fca ,_afbc ,_ceg float64 )_cd .Gradient {_dgef :=circle {_gbaa ,_fce ,_ggc };_ffaa :=circle {_fca ,_afbc ,_ceg };_gbe :=circle {_fca -_gbaa ,_afbc -_fce ,_ceg -_ggc };_aefe :=_bgab (_gbe ._efde ,_gbe ._gee ,-_gbe ._bee ,_gbe ._efde ,_gbe ._gee ,_gbe ._bee );
var _afc float64 ;if _aefe !=0{_afc =1.0/_aefe ;};_dcgc :=-_dgef ._bee ;_feda :=&radialGradient {_eda :_dgef ,_egeb :_ffaa ,_dgde :_gbe ,_gddc :_aefe ,_fad :_afc ,_feg :_dcgc };return _feda ;};func (_cf *Context )Height ()int {return _cf ._agb };func (_gef *Context )ShearAbout (sx ,sy ,x ,y float64 ){_gef .Translate (x ,y );
_gef .Shear (sx ,sy );_gef .Translate (-x ,-y );};func (_gdea *Context )SetFillRule (fillRule _cd .FillRule ){_gdea ._fdeb =fillRule };func _bbdb (_fcef _bf .Int26_6 )float64 {const _fgad ,_fede =6,1<<6-1;if _fcef >=0{return float64 (_fcef >>_fgad )+float64 (_fcef &_fede )/64;
};_fcef =-_fcef ;if _fcef >=0{return -(float64 (_fcef >>_fgad )+float64 (_fcef &_fede )/64);};return 0;};func (_defe *Context )SetHexColor (x string ){_aad ,_cbd ,_af ,_ggf :=_bfgf (x );_defe .SetRGBA255 (_aad ,_cbd ,_af ,_ggf );};func (_dfae *Context )Identity (){_dfae ._fb =_cg .IdentityMatrix ()};
func (_gge *Context )CubicTo (x1 ,y1 ,x2 ,y2 ,x3 ,y3 float64 ){if !_gge ._gdec {_gge .MoveTo (x1 ,y1 );};_edgd ,_fag :=_gge ._gda .X ,_gge ._gda .Y ;x1 ,y1 =_gge .Transform (x1 ,y1 );x2 ,y2 =_gge .Transform (x2 ,y2 );x3 ,y3 =_gge .Transform (x3 ,y3 );_gdfa :=_deg (_edgd ,_fag ,x1 ,y1 ,x2 ,y2 ,x3 ,y3 );
_aef :=_aga (_gge ._gda );for _ ,_ggfb :=range _gdfa [1:]{_fga :=_aga (_ggfb );if _fga ==_aef {continue ;};_aef =_fga ;_gge ._bdef .Add1 (_fga );_gge ._gggd .Add1 (_fga );_gge ._gda =_ggfb ;};};func (_ddf *Context )DrawEllipse (x ,y ,rx ,ry float64 ){_ddf .NewSubPath ();
_ddf .DrawEllipticalArc (x ,y ,rx ,ry ,0,2*_e .Pi );_ddf .ClosePath ();};func (_cgac stops )Len ()int {return len (_cgac )};func (_ddg *Context )RotateAbout (angle ,x ,y float64 ){_ddg .Translate (x ,y );_ddg .Rotate (angle );_ddg .Translate (-x ,-y );
};func (_ffb *Context )SetStrokeRGBA (r ,g ,b ,a float64 ){_eab :=_c .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_ffb ._aed =_cfe (_eab );};type stops []stop ;type repeatOp int ;type radialGradient struct{_eda ,_egeb ,_dgde circle ;
_gddc ,_fad float64 ;_feg float64 ;_fdc stops ;};type surfacePattern struct{_bgbg _ag .Image ;_fea repeatOp ;};func (_fab *Context )StrokePattern ()_cd .Pattern {return _fab ._aed };func _bdeb (_gcbf float64 )float64 {return _gcbf *_e .Pi /180};func (_ebe *Context )Transform (x ,y float64 )(_dac ,_cae float64 ){return _ebe ._fb .Transform (x ,y )};
func _aafa (_ddebc [][]_cg .Point ,_edf []float64 ,_fac float64 )[][]_cg .Point {var _befa [][]_cg .Point ;if len (_edf )==0{return _ddebc ;};if len (_edf )==1{_edf =append (_edf ,_edf [0]);};for _ ,_cbcc :=range _ddebc {if len (_cbcc )< 2{continue ;};
_bgcc :=_cbcc [0];_bfca :=1;_adb :=0;_fgfae :=0.0;if _fac !=0{var _dea float64 ;for _ ,_cbbb :=range _edf {_dea +=_cbbb ;};_fac =_e .Mod (_fac ,_dea );if _fac < 0{_fac +=_dea ;};for _gdc ,_gccg :=range _edf {_fac -=_gccg ;if _fac < 0{_adb =_gdc ;_fgfae =_gccg +_fac ;
break ;};};};var _aeg []_cg .Point ;_aeg =append (_aeg ,_bgcc );for _bfca < len (_cbcc ){_dfce :=_edf [_adb ];_deaa :=_cbcc [_bfca ];_aefc :=_bgcc .Distance (_deaa );_eee :=_dfce -_fgfae ;if _aefc > _eee {_abe :=_eee /_aefc ;_geef :=_bgcc .Interpolate (_deaa ,_abe );
_aeg =append (_aeg ,_geef );if _adb %2==0&&len (_aeg )> 1{_befa =append (_befa ,_aeg );};_aeg =nil ;_aeg =append (_aeg ,_geef );_fgfae =0;_bgcc =_geef ;_adb =(_adb +1)%len (_edf );}else {_aeg =append (_aeg ,_deaa );_bgcc =_deaa ;_fgfae +=_aefc ;_bfca ++;
};};if _adb %2==0&&len (_aeg )> 1{_befa =append (_befa ,_aeg );};};return _befa ;};func (_geg *Context )NewSubPath (){if _geg ._gdec {_geg ._gggd .Add1 (_aga (_geg ._bg ));};_geg ._gdec =false ;};func (_dge stops )Less (i ,j int )bool {return _dge [i ]._egag < _dge [j ]._egag };
func (_gafa stops )Swap (i ,j int ){_gafa [i ],_gafa [j ]=_gafa [j ],_gafa [i ]};func (_eae *Context )DrawEllipticalArc (x ,y ,rx ,ry ,angle1 ,angle2 float64 ){const _fbg =16;for _ebdb :=0;_ebdb < _fbg ;_ebdb ++{_ggd :=float64 (_ebdb +0)/_fbg ;_ccb :=float64 (_ebdb +1)/_fbg ;
_ffge :=angle1 +(angle2 -angle1 )*_ggd ;_afg :=angle1 +(angle2 -angle1 )*_ccb ;_beg :=x +rx *_e .Cos (_ffge );_deb :=y +ry *_e .Sin (_ffge );_aedd :=x +rx *_e .Cos ((_ffge +_afg )/2);_fec :=y +ry *_e .Sin ((_ffge +_afg )/2);_acgg :=x +rx *_e .Cos (_afg );
_fge :=y +ry *_e .Sin (_afg );_gggc :=2*_aedd -_beg /2-_acgg /2;_gdda :=2*_fec -_deb /2-_fge /2;if _ebdb ==0{if _eae ._gdec {_eae .LineTo (_beg ,_deb );}else {_eae .MoveTo (_beg ,_deb );};};_eae .QuadraticTo (_gggc ,_gdda ,_acgg ,_fge );};};func (_gecg *Context )Clear (){_fabb :=_ag .NewUniform (_gecg ._ecg );
_ad .Draw (_gecg ._abf ,_gecg ._abf .Bounds (),_fabb ,_ag .Point {},_ad .Src );};func (_dda *Context )fill (_acf _ac .Painter ){_fagb :=_dda ._gggd ;if _dda ._gdec {_fagb =make (_ac .Path ,len (_dda ._gggd ));copy (_fagb ,_dda ._gggd );_fagb .Add1 (_aga (_dda ._bg ));
};_efd :=_dda ._eeaa ;_efd .UseNonZeroWinding =_dda ._fdeb ==_cd .FillRuleWinding ;_efd .Clear ();_efd .AddPath (_fagb );_efd .Rasterize (_acf );};func _aeb (_ba ,_def ,_acg ,_ff ,_ee ,_df float64 )[]_cg .Point {_eec :=(_e .Hypot (_acg -_ba ,_ff -_def )+_e .Hypot (_ee -_acg ,_df -_ff ));
_fd :=int (_eec +0.5);if _fd < 4{_fd =4;};_gfc :=float64 (_fd )-1;_bcc :=make ([]_cg .Point ,_fd );for _gg :=0;_gg < _fd ;_gg ++{_cc :=float64 (_gg )/_gfc ;_eea ,_ed :=_bd (_ba ,_def ,_acg ,_ff ,_ee ,_df ,_cc );_bcc [_gg ]=_cg .NewPoint (_eea ,_ed );};
return _bcc ;};func _dgefb (_ddfe *_ag .RGBA ,_gcb *_ag .Alpha ,_fcc _cd .Pattern )*patternPainter {return &patternPainter {_ddfe ,_gcb ,_fcc };};func (_ffc *Context )FillPreserve (){var _bbea _ac .Painter ;if _ffc ._dcb ==nil {if _aab ,_dga :=_ffc ._aae .(*solidPattern );
_dga {_dbg :=_ac .NewRGBAPainter (_ffc ._abf );_dbg .SetColor (_aab ._gbfb );_bbea =_dbg ;};};if _bbea ==nil {_bbea =_dgefb (_ffc ._abf ,_ffc ._dcb ,_ffc ._aae );};_ffc .fill (_bbea );};func (_eeb *Context )Image ()_ag .Image {return _eeb ._abf };func _deg (_bfc ,_eecc ,_ca ,_cga ,_fcf ,_gde ,_gbf ,_edg float64 )[]_cg .Point {_ab :=(_e .Hypot (_ca -_bfc ,_cga -_eecc )+_e .Hypot (_fcf -_ca ,_gde -_cga )+_e .Hypot (_gbf -_fcf ,_edg -_gde ));
_ced :=int (_ab +0.5);if _ced < 4{_ced =4;};_gdf :=float64 (_ced )-1;_dcf :=make ([]_cg .Point ,_ced );for _efb :=0;_efb < _ced ;_efb ++{_gfcc :=float64 (_efb )/_gdf ;_bde ,_ffe :=_ggg (_bfc ,_eecc ,_ca ,_cga ,_fcf ,_gde ,_gbf ,_edg ,_gfcc );_dcf [_efb ]=_cg .NewPoint (_bde ,_ffe );
};return _dcf ;};func (_gdaa *Context )Translate (x ,y float64 ){_gdaa ._fb =_gdaa ._fb .Translate (x ,y )};func (_faa *Context )SetLineCap (lineCap _cd .LineCap ){_faa ._eca =lineCap };func (_bccg *Context )SetLineWidth (lineWidth float64 ){_bccg ._caf =lineWidth };
func (_dce *Context )Clip (){_dce .ClipPreserve ();_dce .ClearPath ()};func (_effe *Context )ClipPreserve (){_cdb :=_ag .NewAlpha (_ag .Rect (0,0,_effe ._fdg ,_effe ._agb ));_bgf :=_ac .NewAlphaOverPainter (_cdb );_effe .fill (_bgf );if _effe ._dcb ==nil {_effe ._dcb =_cdb ;
}else {_bec :=_ag .NewAlpha (_ag .Rect (0,0,_effe ._fdg ,_effe ._agb ));_ad .DrawMask (_bec ,_bec .Bounds (),_cdb ,_ag .Point {},_effe ._dcb ,_ag .Point {},_ad .Over );_effe ._dcb =_bec ;};};func (_fbad *Context )SetMatrix (m _cg .Matrix ){_fbad ._fb =m };
func _aaef (_bbf ,_dfg ,_cda ,_bcg float64 )_cd .Gradient {_fbadd :=&linearGradient {_fbe :_bbf ,_cbc :_dfg ,_fbadg :_cda ,_ffa :_bcg };return _fbadd ;};func (_gbc *Context )SetDashOffset (offset float64 ){_gbc ._gdd =offset };func _bd (_f ,_gc ,_ga ,_cb ,_ce ,_dd ,_de float64 )(_eb ,_fg float64 ){_bdf :=1-_de ;
_ec :=_bdf *_bdf ;_cgb :=2*_bdf *_de ;_gb :=_de *_de ;_eb =_ec *_f +_cgb *_ga +_gb *_ce ;_fg =_ec *_gc +_cgb *_cb +_gb *_dd ;return ;};func (_agbf *Context )DrawRoundedRectangle (x ,y ,w ,h ,r float64 ){_dag ,_fgcc ,_fgg ,_agg :=x ,x +r ,x +w -r ,x +w ;
_cbfca ,_bbd ,_bdg ,_gfce :=y ,y +r ,y +h -r ,y +h ;_agbf .NewSubPath ();_agbf .MoveTo (_fgcc ,_cbfca );_agbf .LineTo (_fgg ,_cbfca );_agbf .DrawArc (_fgg ,_bbd ,r ,_bdeb (270),_bdeb (360));_agbf .LineTo (_agg ,_bdg );_agbf .DrawArc (_fgg ,_bdg ,r ,_bdeb (0),_bdeb (90));
_agbf .LineTo (_fgcc ,_gfce );_agbf .DrawArc (_fgcc ,_bdg ,r ,_bdeb (90),_bdeb (180));_agbf .LineTo (_dag ,_bbd );_agbf .DrawArc (_fgcc ,_bbd ,r ,_bdeb (180),_bdeb (270));_agbf .ClosePath ();};type circle struct{_efde ,_gee ,_bee float64 };func (_bfff *Context )QuadraticTo (x1 ,y1 ,x2 ,y2 float64 ){if !_bfff ._gdec {_bfff .MoveTo (x1 ,y1 );
};x1 ,y1 =_bfff .Transform (x1 ,y1 );x2 ,y2 =_bfff .Transform (x2 ,y2 );_gba :=_cg .NewPoint (x1 ,y1 );_cec :=_cg .NewPoint (x2 ,y2 );_bac :=_aga (_gba );_gcf :=_aga (_cec );_bfff ._bdef .Add2 (_bac ,_gcf );_bfff ._gggd .Add2 (_bac ,_gcf );_bfff ._gda =_cec ;
};func (_cfc *Context )InvertMask (){if _cfc ._dcb ==nil {_cfc ._dcb =_ag .NewAlpha (_cfc ._abf .Bounds ());}else {for _bae ,_efe :=range _cfc ._dcb .Pix {_cfc ._dcb .Pix [_bae ]=255-_efe ;};};};func _aag (_fgfad ,_faeg _c .Color ,_cdd float64 )_c .Color {_bgc ,_cbb ,_fgfe ,_bbef :=_fgfad .RGBA ();
_dcbc ,_fdce ,_add ,_eead :=_faeg .RGBA ();return _c .RGBA {_gcfd (_bgc ,_dcbc ,_cdd ),_gcfd (_cbb ,_fdce ,_cdd ),_gcfd (_fgfe ,_add ,_cdd ),_gcfd (_bbef ,_eead ,_cdd )};};func (_gcg *Context )DrawImage (im _ag .Image ,x ,y int ){_gcg .DrawImageAnchored (im ,x ,y ,0,0)};
func (_adc *Context )SetRGB255 (r ,g ,b int ){_adc .SetRGBA255 (r ,g ,b ,255)};func (_eef *Context )Pop (){_dca :=*_eef ;_fbge :=_eef ._edc ;_dafb :=_fbge [len (_fbge )-1];*_eef =*_dafb ;_eef ._bdef =_dca ._bdef ;_eef ._gggd =_dca ._gggd ;_eef ._bg =_dca ._bg ;
_eef ._gda =_dca ._gda ;_eef ._gdec =_dca ._gdec ;};func _gcfd (_ccdb ,_feeg uint32 ,_cea float64 )uint8 {return uint8 (int32 (float64 (_ccdb )*(1.0-_cea )+float64 (_feeg )*_cea )>>8);};func _cff (_dceb _ag .Image ,_cbbbg repeatOp )_cd .Pattern {return &surfacePattern {_bgbg :_dceb ,_fea :_cbbbg };
};func (_ege *Context )DrawArc (x ,y ,r ,angle1 ,angle2 float64 ){_ege .DrawEllipticalArc (x ,y ,r ,r ,angle1 ,angle2 );};func (_gfdg *solidPattern )ColorAt (x ,y int )_c .Color {return _gfdg ._gbfb };func (_ggfbb *linearGradient )ColorAt (x ,y int )_c .Color {if len (_ggfbb ._cgdcc )==0{return _c .Transparent ;
};_bgae ,_ccde :=float64 (x ),float64 (y );_ebed ,_cbff ,_daea ,_fgec :=_ggfbb ._fbe ,_ggfbb ._cbc ,_ggfbb ._fbadg ,_ggfbb ._ffa ;_acff ,_cefe :=_daea -_ebed ,_fgec -_cbff ;if _cefe ==0&&_acff !=0{return _ddeg ((_bgae -_ebed )/_acff ,_ggfbb ._cgdcc );};
if _acff ==0&&_cefe !=0{return _ddeg ((_ccde -_cbff )/_cefe ,_ggfbb ._cgdcc );};_dgbd :=_acff *(_bgae -_ebed )+_cefe *(_ccde -_cbff );if _dgbd < 0{return _ggfbb ._cgdcc [0]._afb ;};_ddeb :=_e .Hypot (_acff ,_cefe );_bef :=((_bgae -_ebed )*-_cefe +(_ccde -_cbff )*_acff )/(_ddeb *_ddeb );
_decg ,_adf :=_ebed +_bef *-_cefe ,_cbff +_bef *_acff ;_cgaca :=_e .Hypot (_bgae -_decg ,_ccde -_adf )/_ddeb ;return _ddeg (_cgaca ,_ggfbb ._cgdcc );};func _ddeg (_gefe float64 ,_bfg stops )_c .Color {if _gefe <=0.0||len (_bfg )==1{return _bfg [0]._afb ;
};_abb :=_bfg [len (_bfg )-1];if _gefe >=_abb ._egag {return _abb ._afb ;};for _ddc ,_ecc :=range _bfg [1:]{if _gefe < _ecc ._egag {_gefe =(_gefe -_bfg [_ddc ]._egag )/(_ecc ._egag -_bfg [_ddc ]._egag );return _aag (_bfg [_ddc ]._afb ,_ecc ._afb ,_gefe );
};};return _abb ._afb ;};func (_eac *Context )capper ()_ac .Capper {switch _eac ._eca {case _cd .LineCapButt :return _ac .ButtCapper ;case _cd .LineCapRound :return _ac .RoundCapper ;case _cd .LineCapSquare :return _ac .SquareCapper ;};return nil ;};func _aga (_edag _cg .Point )_bf .Point26_6 {return _bf .Point26_6 {X :_egcb (_edag .X ),Y :_egcb (_edag .Y )}};
func (_bga *Context )Stroke (){_bga .StrokePreserve ();_bga .ClearPath ()};func (_dgb *Context )ClosePath (){if _dgb ._gdec {_gaee :=_aga (_dgb ._bg );_dgb ._bdef .Add1 (_gaee );_dgb ._gggd .Add1 (_gaee );_dgb ._gda =_dgb ._bg ;};};var (_fde =_cfe (_c .White );
_fdeg =_cfe (_c .Black ););func (_cdgg *Context )Scale (x ,y float64 ){_cdgg ._fb =_cdgg ._fb .Scale (x ,y )};func (_fabg *Context )DrawLine (x1 ,y1 ,x2 ,y2 float64 ){_fabg .MoveTo (x1 ,y1 );_fabg .LineTo (x2 ,y2 )};func (_cgdc *Context )stroke (_egc _ac .Painter ){_dbb :=_cgdc ._bdef ;
if len (_cgdc ._bdc )> 0{_dbb =_bcgg (_dbb ,_cgdc ._bdc ,_cgdc ._gdd );}else {_dbb =_bda (_ffed (_dbb ));};_faaa :=_cgdc ._eeaa ;_faaa .UseNonZeroWinding =true ;_faaa .Clear ();_gecc :=(_cgdc ._fb .ScalingFactorX ()+_cgdc ._fb .ScalingFactorY ())/2;_faaa .AddStroke (_dbb ,_egcb (_cgdc ._caf *_gecc ),_cgdc .capper (),_cgdc .joiner ());
_faaa .Rasterize (_egc );};type linearGradient struct{_fbe ,_cbc ,_fbadg ,_ffa float64 ;_cgdcc stops ;};func (_eba *Context )LineWidth ()float64 {return _eba ._caf };func (_dgbf *Context )TextState ()*_cd .TextState {return &_dgbf ._fbf };func (_gfe *Context )StrokePreserve (){var _fgf _ac .Painter ;
if _gfe ._dcb ==nil {if _cac ,_be :=_gfe ._aed .(*solidPattern );_be {_bbe :=_ac .NewRGBAPainter (_gfe ._abf );_bbe .SetColor (_cac ._gbfb );_fgf =_bbe ;};};if _fgf ==nil {_fgf =_dgefb (_gfe ._abf ,_gfe ._dcb ,_gfe ._aed );};_gfe .stroke (_fgf );};func (_ggb *Context )MeasureString (s string ,face _bc .Face )(_aadc ,_aada float64 ){_bgbe :=&_bc .Drawer {Face :face };
_bed :=_bgbe .MeasureString (s );return float64 (_bed >>6),_ggb ._fbf .Tf .Size ;};func (_bccd *Context )SetFillRGBA (r ,g ,b ,a float64 ){_bfe :=_c .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_bccd ._ecg =_bfe ;_bccd ._aae =_cfe (_bfe );
};func (_dfdg *linearGradient )AddColorStop (offset float64 ,color _c .Color ){_dfdg ._cgdcc =append (_dfdg ._cgdcc ,stop {_egag :offset ,_afb :color });_b .Sort (_dfdg ._cgdcc );};func NewContextForImage (im _ag .Image )*Context {return NewContextForRGBA (_agcbg (im ))};
func (_adg *Context )SetRGB (r ,g ,b float64 ){_adg .SetRGBA (r ,g ,b ,1)};func _cfe (_fcaa _c .Color )_cd .Pattern {return &solidPattern {_gbfb :_fcaa }};func (_fba *Context )Width ()int {return _fba ._fdg };