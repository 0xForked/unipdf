//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package imagerender ;import (_a "errors";_b "fmt";_bcc "github.com/golang/freetype/raster";_d "github.com/unidoc/unipdf/v3/common";_be "github.com/unidoc/unipdf/v3/internal/transform";_fb "github.com/unidoc/unipdf/v3/render/internal/context";_de "golang.org/x/image/draw";
_ee "golang.org/x/image/font";_df "golang.org/x/image/math/f64";_gf "golang.org/x/image/math/fixed";_ec "image";_c "image/color";_ce "image/draw";_g "math";_bc "sort";_f "strings";);func (_fccg *Context )TextState ()*_fb .TextState {return &_fccg ._adc };
func (_eggb *patternPainter )Paint (ss []_bcc .Span ,done bool ){_eaf :=_eggb ._gdfaf .Bounds ();for _ ,_dfd :=range ss {if _dfd .Y < _eaf .Min .Y {continue ;};if _dfd .Y >=_eaf .Max .Y {return ;};if _dfd .X0 < _eaf .Min .X {_dfd .X0 =_eaf .Min .X ;};if _dfd .X1 > _eaf .Max .X {_dfd .X1 =_eaf .Max .X ;
};if _dfd .X0 >=_dfd .X1 {continue ;};const _bfed =1<<16-1;_gage :=_dfd .Y -_eggb ._gdfaf .Rect .Min .Y ;_aaed :=_dfd .X0 -_eggb ._gdfaf .Rect .Min .X ;_gegd :=(_dfd .Y -_eggb ._gdfaf .Rect .Min .Y )*_eggb ._gdfaf .Stride +(_dfd .X0 -_eggb ._gdfaf .Rect .Min .X )*4;
_bcfb :=_gegd +(_dfd .X1 -_dfd .X0 )*4;for _cbfe ,_fggd :=_gegd ,_aaed ;_cbfe < _bcfb ;_cbfe ,_fggd =_cbfe +4,_fggd +1{_ecdf :=_dfd .Alpha ;if _eggb ._aega !=nil {_ecdf =_ecdf *uint32 (_eggb ._aega .AlphaAt (_fggd ,_gage ).A )/255;if _ecdf ==0{continue ;
};};_gccgg :=_eggb ._aba .ColorAt (_fggd ,_gage );_fgcf ,_egdc ,_bbad ,_dfab :=_gccgg .RGBA ();_dbde :=uint32 (_eggb ._gdfaf .Pix [_cbfe +0]);_bfdb :=uint32 (_eggb ._gdfaf .Pix [_cbfe +1]);_abe :=uint32 (_eggb ._gdfaf .Pix [_cbfe +2]);_ebcc :=uint32 (_eggb ._gdfaf .Pix [_cbfe +3]);
_abed :=(_bfed -(_dfab *_ecdf /_bfed ))*0x101;_eggb ._gdfaf .Pix [_cbfe +0]=uint8 ((_dbde *_abed +_fgcf *_ecdf )/_bfed >>8);_eggb ._gdfaf .Pix [_cbfe +1]=uint8 ((_bfdb *_abed +_egdc *_ecdf )/_bfed >>8);_eggb ._gdfaf .Pix [_cbfe +2]=uint8 ((_abe *_abed +_bbad *_ecdf )/_bfed >>8);
_eggb ._gdfaf .Pix [_cbfe +3]=uint8 ((_ebcc *_abed +_dfab *_ecdf )/_bfed >>8);};};};func (_gdg *Context )SetStrokeRGBA (r ,g ,b ,a float64 ){_bce :=_c .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_gdg ._bf =_bdbb (_bce );};func (_geg *Context )setFillAndStrokeColor (_gcfd _c .Color ){_geg ._fg =_gcfd ;
_geg ._cda =_bdbb (_gcfd );_geg ._bf =_bdbb (_gcfd );};func (_dbc *Context )Pop (){_faad :=*_dbc ;_gfbb :=_dbc ._aee ;_bcad :=_gfbb [len (_gfbb )-1];*_dbc =*_bcad ;_dbc ._bea =_faad ._bea ;_dbc ._ddb =_faad ._ddb ;_dbc ._dac =_faad ._dac ;_dbc ._ebfg =_faad ._ebfg ;
_dbc ._dgb =_faad ._dgb ;};func (_dgf *Context )StrokePattern ()_fb .Pattern {return _dgf ._bf };func (_adddf *solidPattern )ColorAt (x ,y int )_c .Color {return _adddf ._fff };func (_gag *linearGradient )AddColorStop (offset float64 ,color _c .Color ){_gag ._fcg =append (_gag ._fcg ,stop {_ecf :offset ,_aaf :color });
_bc .Sort (_gag ._fcg );};func NewContextForRGBA (im *_ec .RGBA )*Context {_cgd :=im .Bounds ().Size ().X ;_ccf :=im .Bounds ().Size ().Y ;return &Context {_da :_cgd ,_aab :_ccf ,_ccag :_bcc .NewRasterizer (_cgd ,_ccf ),_aga :im ,_fg :_c .Transparent ,_cda :_gfb ,_bf :_cd ,_ceb :1,_cce :_fb .FillRuleWinding ,_gg :_be .IdentityMatrix (),_adc :_fb .NewTextState ()};
};func (_ccfa *Context )Rotate (angle float64 ){_ccfa ._gg =_ccfa ._gg .Rotate (angle )};type radialGradient struct{_dfe ,_bfdg ,_ffg circle ;_gbf ,_gaeb float64 ;_eabf float64 ;_agb stops ;};func _bdg (_gbba ,_ebe _c .Color ,_bgbgg float64 )_c .Color {_aabg ,_gccd ,_gcdd ,_gaa :=_gbba .RGBA ();
_ggc ,_bbfb ,_cfgg ,_gcfaa :=_ebe .RGBA ();return _c .RGBA {_gdge (_aabg ,_ggc ,_bgbgg ),_gdge (_gccd ,_bbfb ,_bgbgg ),_gdge (_gcdd ,_cfgg ,_bgbgg ),_gdge (_gaa ,_gcfaa ,_bgbgg )};};func (_cdg *Context )drawRegularPolygon (_dda int ,_bae ,_bgc ,_bde ,_gege float64 ){_fbdg :=2*_g .Pi /float64 (_dda );
_gege -=_g .Pi /2;if _dda %2==0{_gege +=_fbdg /2;};_cdg .NewSubPath ();for _bgf :=0;_bgf < _dda ;_bgf ++{_fde :=_gege +_fbdg *float64 (_bgf );_cdg .LineTo (_bae +_bde *_g .Cos (_fde ),_bgc +_bde *_g .Sin (_fde ));};_cdg .ClosePath ();};func _dbff (_bafg string )(_ccbb ,_gfeb ,_fdda ,_cbad int ){_bafg =_f .TrimPrefix (_bafg ,"\u0023");
_cbad =255;if len (_bafg )==3{_dgd :="\u00251\u0078\u0025\u0031\u0078\u0025\u0031x";_b .Sscanf (_bafg ,_dgd ,&_ccbb ,&_gfeb ,&_fdda );_ccbb |=_ccbb <<4;_gfeb |=_gfeb <<4;_fdda |=_fdda <<4;};if len (_bafg )==6{_ccg :="\u0025\u0030\u0032x\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";
_b .Sscanf (_bafg ,_ccg ,&_ccbb ,&_gfeb ,&_fdda );};if len (_bafg )==8{_afb :="\u0025\u00302\u0078\u0025\u00302\u0078\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";_b .Sscanf (_bafg ,_afb ,&_ccbb ,&_gfeb ,&_fdda ,&_cbad );};return ;};func (_ef *Context )SetColor (c _c .Color ){_ef .setFillAndStrokeColor (c )};
func (_eggc *Context )MeasureString (s string ,face _ee .Face )(_eeg ,_ebag float64 ){_gfbd :=&_ee .Drawer {Face :face };_edag :=_gfbd .MeasureString (s );return float64 (_edag >>6),_eggc ._adc .Tf .Size ;};func (_afc *Context )stroke (_dbfb _bcc .Painter ){_gce :=_afc ._bea ;
if len (_afc ._fad )> 0{_gce =_ddfc (_gce ,_afc ._fad ,_afc ._fe );}else {_gce =_aae (_gga (_gce ));};_ggb :=_afc ._ccag ;_ggb .UseNonZeroWinding =true ;_ggb .Clear ();_aed :=(_afc ._gg .ScalingFactorX ()+_afc ._gg .ScalingFactorY ())/2;_ggb .AddStroke (_gce ,_adf (_afc ._ceb *_aed ),_afc .capper (),_afc .joiner ());
_ggb .Rasterize (_dbfb );};func (_fdd *Context )FillPattern ()_fb .Pattern {return _fdd ._cda };func (_fae *Context )DrawRectangle (x ,y ,w ,h float64 ){_fae .NewSubPath ();_fae .MoveTo (x ,y );_fae .LineTo (x +w ,y );_fae .LineTo (x +w ,y +h );_fae .LineTo (x ,y +h );
_fae .ClosePath ();};func (_eeeg *Context )FillPreserve (){var _ccfe _bcc .Painter ;if _eeeg ._gbe ==nil {if _bge ,_adbd :=_eeeg ._cda .(*solidPattern );_adbd {_caf :=_bcc .NewRGBAPainter (_eeeg ._aga );_caf .SetColor (_bge ._fff );_ccfe =_caf ;};};if _ccfe ==nil {_ccfe =_eaef (_eeeg ._aga ,_eeeg ._gbe ,_eeeg ._cda );
};_eeeg .fill (_ccfe );};func (_bfa *Context )SetRGB (r ,g ,b float64 ){_bfa .SetRGBA (r ,g ,b ,1)};func (_fca *Context )CubicTo (x1 ,y1 ,x2 ,y2 ,x3 ,y3 float64 ){if !_fca ._dgb {_fca .MoveTo (x1 ,y1 );};_cbe ,_gccb :=_fca ._ebfg .X ,_fca ._ebfg .Y ;x1 ,y1 =_fca .Transform (x1 ,y1 );
x2 ,y2 =_fca .Transform (x2 ,y2 );x3 ,y3 =_fca .Transform (x3 ,y3 );_bgba :=_gcc (_cbe ,_gccb ,x1 ,y1 ,x2 ,y2 ,x3 ,y3 );_cba :=_adabe (_fca ._ebfg );for _ ,_dbf :=range _bgba [1:]{_fed :=_adabe (_dbf );if _fed ==_cba {continue ;};_cba =_fed ;_fca ._bea .Add1 (_fed );
_fca ._ddb .Add1 (_fed );_fca ._ebfg =_dbf ;};};func (_faee *Context )DrawImageAnchored (im _ec .Image ,x ,y int ,ax ,ay float64 ){_bgbaa :=im .Bounds ().Size ();x -=int (ax *float64 (_bgbaa .X ));y -=int (ay *float64 (_bgbaa .Y ));_dbd :=_de .BiLinear ;
_cgea :=_faee ._gg .Clone ().Translate (float64 (x ),float64 (y ));_dbec :=_df .Aff3 {_cgea [0],_cgea [3],_cgea [6],_cgea [1],_cgea [4],_cgea [7]};if _faee ._gbe ==nil {_dbd .Transform (_faee ._aga ,_dbec ,im ,im .Bounds (),_de .Over ,nil );}else {_dbd .Transform (_faee ._aga ,_dbec ,im ,im .Bounds (),_de .Over ,&_de .Options {DstMask :_faee ._gbe ,DstMaskP :_ec .Point {}});
};};func (_aeg *Context )SetLineCap (lineCap _fb .LineCap ){_aeg ._bd =lineCap };func (_agg *radialGradient )AddColorStop (offset float64 ,color _c .Color ){_agg ._agb =append (_agg ._agb ,stop {_ecf :offset ,_aaf :color });_bc .Sort (_agg ._agb );};func (_fge *Context )AsMask ()*_ec .Alpha {_aadd :=_ec .NewAlpha (_fge ._aga .Bounds ());
_de .Draw (_aadd ,_fge ._aga .Bounds (),_fge ._aga ,_ec .Point {},_de .Src );return _aadd ;};func _dfa (_dd ,_cgb ,_aff ,_dfc ,_dgaa ,_cb ,_gcf ,_dec ,_bcb float64 )(_cc ,_ebf float64 ){_gb :=1-_bcb ;_agd :=_gb *_gb *_gb ;_bab :=3*_gb *_gb *_bcb ;_cff :=3*_gb *_bcb *_bcb ;
_bb :=_bcb *_bcb *_bcb ;_cc =_agd *_dd +_bab *_aff +_cff *_dgaa +_bb *_gcf ;_ebf =_agd *_cgb +_bab *_dfc +_cff *_cb +_bb *_dec ;return ;};func (_gcgg *Context )Scale (x ,y float64 ){_gcgg ._gg =_gcgg ._gg .Scale (x ,y )};func (_ccb *Context )Shear (x ,y float64 ){_ccb ._gg .Shear (x ,y )};
func (_bca *Context )drawString (_dce string ,_ecd _ee .Face ,_gcd ,_acg float64 ){_dced :=&_ee .Drawer {Src :_ec .NewUniform (_bca ._fg ),Face :_ecd ,Dot :_adabe (_be .NewPoint (_gcd ,_acg ))};_gfge :=rune (-1);for _ ,_fgd :=range _dce {if _gfge >=0{_dced .Dot .X +=_dced .Face .Kern (_gfge ,_fgd );
};_bgg ,_bdf ,_cecd ,_cgfb ,_cdga :=_dced .Face .Glyph (_dced .Dot ,_fgd );if !_cdga {continue ;};_cgfd :=_bgg .Sub (_bgg .Min );_cbd :=_ec .NewRGBA (_cgfd );_de .DrawMask (_cbd ,_cgfd ,_dced .Src ,_ec .Point {},_bdf ,_cecd ,_de .Over );var _fef *_de .Options ;
if _bca ._gbe !=nil {_fef =&_de .Options {DstMask :_bca ._gbe ,DstMaskP :_ec .Point {}};};_cbda :=_bca ._gg .Clone ().Translate (float64 (_bgg .Min .X ),float64 (_bgg .Min .Y ));_bad :=_df .Aff3 {_cbda [0],_cbda [3],_cbda [6],_cbda [1],_cbda [4],_cbda [7]};
_de .BiLinear .Transform (_bca ._aga ,_bad ,_cbd ,_cgfd ,_de .Over ,_fef );_dced .Dot .X +=_cgfb ;_gfge =_fgd ;};};func (_ceg *Context )SetRGBA (r ,g ,b ,a float64 ){_ceg ._fg =_c .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_ceg .setFillAndStrokeColor (_ceg ._fg );
};func _cf (_bcg ,_ag ,_ed ,_aa ,_dg ,_eda ,_dea float64 )(_gfc ,_eec float64 ){_gd :=1-_dea ;_af :=_gd *_gd ;_dfg :=2*_gd *_dea ;_ff :=_dea *_dea ;_gfc =_af *_bcg +_dfg *_ed +_ff *_dg ;_eec =_af *_ag +_dfg *_aa +_ff *_eda ;return ;};func (_ged *linearGradient )ColorAt (x ,y int )_c .Color {if len (_ged ._fcg )==0{return _c .Transparent ;
};_beaf ,_caed :=float64 (x ),float64 (y );_eggg ,_fac ,_deb ,_eccd :=_ged ._baf ,_ged ._gae ,_ged ._bgfc ,_ged ._egf ;_cfd ,_aeef :=_deb -_eggg ,_eccd -_fac ;if _aeef ==0&&_cfd !=0{return _fcgc ((_beaf -_eggg )/_cfd ,_ged ._fcg );};if _cfd ==0&&_aeef !=0{return _fcgc ((_caed -_fac )/_aeef ,_ged ._fcg );
};_acgd :=_cfd *(_beaf -_eggg )+_aeef *(_caed -_fac );if _acgd < 0{return _ged ._fcg [0]._aaf ;};_bfd :=_g .Hypot (_cfd ,_aeef );_gegc :=((_beaf -_eggg )*-_aeef +(_caed -_fac )*_cfd )/(_bfd *_bfd );_cgec ,_fce :=_eggg +_gegc *-_aeef ,_fac +_gegc *_cfd ;
_aebb :=_g .Hypot (_beaf -_cgec ,_caed -_fce )/_bfd ;return _fcgc (_aebb ,_ged ._fcg );};func (_eba *Context )DrawString (s string ,face _ee .Face ,x ,y float64 ){_eba .DrawStringAnchored (s ,face ,x ,y ,0,0);};func (_dbe *Context )ClipPreserve (){_efb :=_ec .NewAlpha (_ec .Rect (0,0,_dbe ._da ,_dbe ._aab ));
_fbf :=_bcc .NewAlphaOverPainter (_efb );_dbe .fill (_fbf );if _dbe ._gbe ==nil {_dbe ._gbe =_efb ;}else {_gcgb :=_ec .NewAlpha (_ec .Rect (0,0,_dbe ._da ,_dbe ._aab ));_de .DrawMask (_gcgb ,_gcgb .Bounds (),_efb ,_ec .Point {},_dbe ._gbe ,_ec .Point {},_de .Over );
_dbe ._gbe =_gcgb ;};};func _bcgf (_aeea ,_bdfb ,_eae ,_fdb float64 )_fb .Gradient {_feda :=&linearGradient {_baf :_aeea ,_gae :_bdfb ,_bgfc :_eae ,_egf :_fdb };return _feda ;};func (_dcbe *Context )DrawEllipse (x ,y ,rx ,ry float64 ){_dcbe .NewSubPath ();
_dcbe .DrawEllipticalArc (x ,y ,rx ,ry ,0,2*_g .Pi );_dcbe .ClosePath ();};func (_ecga *Context )DrawStringAnchored (s string ,face _ee .Face ,x ,y ,ax ,ay float64 ){_bdb ,_aaa :=_ecga .MeasureString (s ,face );_ecga .drawString (s ,face ,x -ax *_bdb ,y +ay *_aaa );
};func (_ebg *Context )Stroke (){_ebg .StrokePreserve ();_ebg .ClearPath ()};func (_fbca stops )Swap (i ,j int ){_fbca [i ],_fbca [j ]=_fbca [j ],_fbca [i ]};func (_fba *Context )fill (_edgd _bcc .Painter ){_dc :=_fba ._ddb ;if _fba ._dgb {_dc =make (_bcc .Path ,len (_fba ._ddb ));
copy (_dc ,_fba ._ddb );_dc .Add1 (_adabe (_fba ._dac ));};_ecc :=_fba ._ccag ;_ecc .UseNonZeroWinding =_fba ._cce ==_fb .FillRuleWinding ;_ecc .Clear ();_ecc .AddPath (_dc );_ecc .Rasterize (_edgd );};func _bef (_aegb float64 )float64 {return _aegb *_g .Pi /180};
type stops []stop ;func (_fcf *Context )SetDashOffset (offset float64 ){_fcf ._fe =offset };func (_dfb *Context )DrawRoundedRectangle (x ,y ,w ,h ,r float64 ){_afcg ,_bcgc ,_geb ,_edd :=x ,x +r ,x +w -r ,x +w ;_ga ,_gef ,_daeb ,_eab :=y ,y +r ,y +h -r ,y +h ;
_dfb .NewSubPath ();_dfb .MoveTo (_bcgc ,_ga );_dfb .LineTo (_geb ,_ga );_dfb .DrawArc (_geb ,_gef ,r ,_bef (270),_bef (360));_dfb .LineTo (_edd ,_daeb );_dfb .DrawArc (_geb ,_daeb ,r ,_bef (0),_bef (90));_dfb .LineTo (_bcgc ,_eab );_dfb .DrawArc (_bcgc ,_daeb ,r ,_bef (90),_bef (180));
_dfb .LineTo (_afcg ,_gef );_dfb .DrawArc (_bcgc ,_gef ,r ,_bef (180),_bef (270));_dfb .ClosePath ();};type stop struct{_ecf float64 ;_aaf _c .Color ;};func (_cgf *Context )StrokePreserve (){var _dcg _bcc .Painter ;if _cgf ._gbe ==nil {if _adb ,_fcag :=_cgf ._bf .(*solidPattern );
_fcag {_fbcb :=_bcc .NewRGBAPainter (_cgf ._aga );_fbcb .SetColor (_adb ._fff );_dcg =_fbcb ;};};if _dcg ==nil {_dcg =_eaef (_cgf ._aga ,_cgf ._gbe ,_cgf ._bf );};_cgf .stroke (_dcg );};func _abbf (_feg _gf .Int26_6 )float64 {const _ecfc ,_bged =6,1<<6-1;
if _feg >=0{return float64 (_feg >>_ecfc )+float64 (_feg &_bged )/64;};_feg =-_feg ;if _feg >=0{return -(float64 (_feg >>_ecfc )+float64 (_feg &_bged )/64);};return 0;};func (_bfac *Context )QuadraticTo (x1 ,y1 ,x2 ,y2 float64 ){if !_bfac ._dgb {_bfac .MoveTo (x1 ,y1 );
};x1 ,y1 =_bfac .Transform (x1 ,y1 );x2 ,y2 =_bfac .Transform (x2 ,y2 );_agac :=_be .NewPoint (x1 ,y1 );_ead :=_be .NewPoint (x2 ,y2 );_edg :=_adabe (_agac );_gde :=_adabe (_ead );_bfac ._bea .Add2 (_edg ,_gde );_bfac ._ddb .Add2 (_edg ,_gde );_bfac ._ebfg =_ead ;
};func (_eca *Context )MoveTo (x ,y float64 ){if _eca ._dgb {_eca ._ddb .Add1 (_adabe (_eca ._dac ));};x ,y =_eca .Transform (x ,y );_agcc :=_be .NewPoint (x ,y );_ebc :=_adabe (_agcc );_eca ._bea .Start (_ebc );_eca ._ddb .Start (_ebc );_eca ._dac =_agcc ;
_eca ._ebfg =_agcc ;_eca ._dgb =true ;};func _ddfc (_fda _bcc .Path ,_gbfca []float64 ,_bga float64 )_bcc .Path {return _aae (_bbe (_gga (_fda ),_gbfca ,_bga ));};func (_gdeg *Context )DrawImage (im _ec .Image ,x ,y int ){_gdeg .DrawImageAnchored (im ,x ,y ,0,0)};
func NewContext (width ,height int )*Context {return NewContextForRGBA (_ec .NewRGBA (_ec .Rect (0,0,width ,height )));};func (_gdfa *Context )Identity (){_gdfa ._gg =_be .IdentityMatrix ()};func _aae (_aabd [][]_be .Point )_bcc .Path {var _afa _bcc .Path ;
for _ ,_gdgc :=range _aabd {var _bbc _gf .Point26_6 ;for _gda ,_gfgg :=range _gdgc {_aaab :=_adabe (_gfgg );if _gda ==0{_afa .Start (_aaab );}else {_afd :=_aaab .X -_bbc .X ;_gdgb :=_aaab .Y -_bbc .Y ;if _afd < 0{_afd =-_afd ;};if _gdgb < 0{_gdgb =-_gdgb ;
};if _afd +_gdgb > 8{_afa .Add1 (_aaab );};};_bbc =_aaab ;};};return _afa ;};func (_fbad *Context )DrawArc (x ,y ,r ,angle1 ,angle2 float64 ){_fbad .DrawEllipticalArc (x ,y ,r ,r ,angle1 ,angle2 );};func (_gfdd *Context )DrawCircle (x ,y ,r float64 ){_gfdd .NewSubPath ();
_gfdd .DrawEllipticalArc (x ,y ,r ,r ,0,2*_g .Pi );_gfdd .ClosePath ();};func (_fbd *Context )SetFillRGBA (r ,g ,b ,a float64 ){_dee :=_c .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_fbd ._fg =_dee ;_fbd ._cda =_bdbb (_dee );};
func (_cbef stops )Len ()int {return len (_cbef )};type linearGradient struct{_baf ,_gae ,_bgfc ,_egf float64 ;_fcg stops ;};func _bbe (_cbaa [][]_be .Point ,_afe []float64 ,_gfgb float64 )[][]_be .Point {var _fgg [][]_be .Point ;if len (_afe )==0{return _cbaa ;
};if len (_afe )==1{_afe =append (_afe ,_afe [0]);};for _ ,_feff :=range _cbaa {if len (_feff )< 2{continue ;};_bdbe :=_feff [0];_ffd :=1;_efa :=0;_dbbf :=0.0;if _gfgb !=0{var _ggce float64 ;for _ ,_fdgd :=range _afe {_ggce +=_fdgd ;};_gfgb =_g .Mod (_gfgb ,_ggce );
if _gfgb < 0{_gfgb +=_ggce ;};for _adbc ,_degg :=range _afe {_gfgb -=_degg ;if _gfgb < 0{_efa =_adbc ;_dbbf =_degg +_gfgb ;break ;};};};var _ecae []_be .Point ;_ecae =append (_ecae ,_bdbe );for _ffd < len (_feff ){_aea :=_afe [_efa ];_aca :=_feff [_ffd ];
_ffgg :=_bdbe .Distance (_aca );_eabd :=_aea -_dbbf ;if _ffgg > _eabd {_ddgg :=_eabd /_ffgg ;_aggb :=_bdbe .Interpolate (_aca ,_ddgg );_ecae =append (_ecae ,_aggb );if _efa %2==0&&len (_ecae )> 1{_fgg =append (_fgg ,_ecae );};_ecae =nil ;_ecae =append (_ecae ,_aggb );
_dbbf =0;_bdbe =_aggb ;_efa =(_efa +1)%len (_afe );}else {_ecae =append (_ecae ,_aca );_bdbe =_aca ;_dbbf +=_ffgg ;_ffd ++;};};if _efa %2==0&&len (_ecae )> 1{_fgg =append (_fgg ,_ecae );};};return _fgg ;};func (_bbf stops )Less (i ,j int )bool {return _bbf [i ]._ecf < _bbf [j ]._ecf };
func (_gbc *Context )SetHexColor (x string ){_db ,_cfb ,_dgc ,_cge :=_dbff (x );_gbc .SetRGBA255 (_db ,_cfb ,_dgc ,_cge );};type circle struct{_gfe ,_dedd ,_aaaa float64 };func _debe (_eff _ec .Image )*_ec .RGBA {_befg :=_eff .Bounds ();_bcgfd :=_ec .NewRGBA (_befg );
_ce .Draw (_bcgfd ,_befg ,_eff ,_befg .Min ,_ce .Src );return _bcgfd ;};func (_daee *Context )LineTo (x ,y float64 ){if !_daee ._dgb {_daee .MoveTo (x ,y );}else {x ,y =_daee .Transform (x ,y );_ea :=_be .NewPoint (x ,y );_cfg :=_adabe (_ea );_daee ._bea .Add1 (_cfg );
_daee ._ddb .Add1 (_cfg );_daee ._ebfg =_ea ;};};func NewContextForImage (im _ec .Image )*Context {return NewContextForRGBA (_debe (im ))};func _fcgc (_gaf float64 ,_dfca stops )_c .Color {if _gaf <=0.0||len (_dfca )==1{return _dfca [0]._aaf ;};_adbg :=_dfca [len (_dfca )-1];
if _gaf >=_adbg ._ecf {return _adbg ._aaf ;};for _bdef ,_faadd :=range _dfca [1:]{if _gaf < _faadd ._ecf {_gaf =(_gaf -_dfca [_bdef ]._ecf )/(_faadd ._ecf -_dfca [_bdef ]._ecf );return _bdg (_dfca [_bdef ]._aaf ,_faadd ._aaf ,_gaf );};};return _adbg ._aaf ;
};func (_aabb *Context )SetStrokeStyle (pattern _fb .Pattern ){_aabb ._bf =pattern };func (_bgb *Context )SetLineJoin (lineJoin _fb .LineJoin ){_bgb ._aad =lineJoin };func (_ddg *Context )Clear (){_gfg :=_ec .NewUniform (_ddg ._fg );_de .Draw (_ddg ._aga ,_ddg ._aga .Bounds (),_gfg ,_ec .Point {},_de .Src );
};func _adf (_bgaf float64 )_gf .Int26_6 {return _gf .Int26_6 (_bgaf *64)};const (_bbac repeatOp =iota ;_abb ;_gdgf ;_addd ;);func (_cbf *Context )ScaleAbout (sx ,sy ,x ,y float64 ){_cbf .Translate (x ,y );_cbf .Scale (sx ,sy );_cbf .Translate (-x ,-y );
};func _gdc (_cgbc ,_aefc ,_egb ,_def ,_edde ,_bbaa float64 )_fb .Gradient {_ddd :=circle {_cgbc ,_aefc ,_egb };_gbb :=circle {_def ,_edde ,_bbaa };_bcd :=circle {_def -_cgbc ,_edde -_aefc ,_bbaa -_egb };_ecgc :=_ada (_bcd ._gfe ,_bcd ._dedd ,-_bcd ._aaaa ,_bcd ._gfe ,_bcd ._dedd ,_bcd ._aaaa );
var _eeec float64 ;if _ecgc !=0{_eeec =1.0/_ecgc ;};_gee :=-_ddd ._aaaa ;_adcg :=&radialGradient {_dfe :_ddd ,_bfdg :_gbb ,_ffg :_bcd ,_gbf :_ecgc ,_gaeb :_eeec ,_eabf :_gee };return _adcg ;};func (_aeeb *Context )SetDash (dashes ...float64 ){_aeeb ._fad =dashes };
func _dga (_eg ,_fc ,_gdd ,_eb ,_ac ,_eed float64 )[]_be .Point {_ge :=(_g .Hypot (_gdd -_eg ,_eb -_fc )+_g .Hypot (_ac -_gdd ,_eed -_eb ));_ba :=int (_ge +0.5);if _ba < 4{_ba =4;};_bg :=float64 (_ba )-1;_cec :=make ([]_be .Point ,_ba );for _baa :=0;_baa < _ba ;
_baa ++{_gc :=float64 (_baa )/_bg ;_cg ,_ca :=_cf (_eg ,_fc ,_gdd ,_eb ,_ac ,_eed ,_gc );_cec [_baa ]=_be .NewPoint (_cg ,_ca );};return _cec ;};func (_eee *Context )SetRGBA255 (r ,g ,b ,a int ){_eee ._fg =_c .NRGBA {uint8 (r ),uint8 (g ),uint8 (b ),uint8 (a )};
_eee .setFillAndStrokeColor (_eee ._fg );};type solidPattern struct{_fff _c .Color };func (_adcgd *surfacePattern )ColorAt (x ,y int )_c .Color {_eacb :=_adcgd ._fefc .Bounds ();switch _adcgd ._bdgc {case _abb :if y >=_eacb .Dy (){return _c .Transparent ;
};case _gdgf :if x >=_eacb .Dx (){return _c .Transparent ;};case _addd :if x >=_eacb .Dx ()||y >=_eacb .Dy (){return _c .Transparent ;};};x =x %_eacb .Dx ()+_eacb .Min .X ;y =y %_eacb .Dy ()+_eacb .Min .Y ;return _adcgd ._fefc .At (x ,y );};func (_aef *Context )Translate (x ,y float64 ){_aef ._gg =_aef ._gg .Translate (x ,y )};
func (_abf *Context )LineWidth ()float64 {return _abf ._ceb };func _eaef (_aec *_ec .RGBA ,_aebg *_ec .Alpha ,_daa _fb .Pattern )*patternPainter {return &patternPainter {_aec ,_aebg ,_daa };};func (_edc *Context )DrawPoint (x ,y ,r float64 ){_edc .Push ();
_bgbg ,_afcb :=_edc .Transform (x ,y );_edc .Identity ();_edc .DrawCircle (_bgbg ,_afcb ,r );_edc .Pop ();};func (_fdg *Context )SetFillRule (fillRule _fb .FillRule ){_fdg ._cce =fillRule };func (_cebb *Context )SetMatrix (m _be .Matrix ){_cebb ._gg =m };
func (_ded *Context )joiner ()_bcc .Joiner {switch _ded ._aad {case _fb .LineJoinBevel :return _bcc .BevelJoiner ;case _fb .LineJoinRound :return _bcc .RoundJoiner ;};return nil ;};type Context struct{_da int ;_aab int ;_ccag *_bcc .Rasterizer ;_aga *_ec .RGBA ;
_gbe *_ec .Alpha ;_fg _c .Color ;_cda _fb .Pattern ;_bf _fb .Pattern ;_bea _bcc .Path ;_ddb _bcc .Path ;_dac _be .Point ;_ebfg _be .Point ;_dgb bool ;_fad []float64 ;_fe float64 ;_ceb float64 ;_bd _fb .LineCap ;_aad _fb .LineJoin ;_cce _fb .FillRule ;_gg _be .Matrix ;
_adc _fb .TextState ;_aee []*Context ;};func (_faa *Context )Clip (){_faa .ClipPreserve ();_faa .ClearPath ()};func (_ege *Context )SetMask (mask *_ec .Alpha )error {if mask .Bounds ().Size ()!=_ege ._aga .Bounds ().Size (){return _a .New ("\u006d\u0061\u0073\u006b\u0020\u0073i\u007a\u0065\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068 \u0063\u006f\u006e\u0074\u0065\u0078\u0074 \u0073\u0069\u007a\u0065");
};_ege ._gbe =mask ;return nil ;};func (_fgc *Context )DrawLine (x1 ,y1 ,x2 ,y2 float64 ){_fgc .MoveTo (x1 ,y1 );_fgc .LineTo (x2 ,y2 )};func (_edb *Context )ShearAbout (sx ,sy ,x ,y float64 ){_edb .Translate (x ,y );_edb .Shear (sx ,sy );_edb .Translate (-x ,-y );
};func (_acf *Context )SetPixel (x ,y int ){_acf ._aga .Set (x ,y ,_acf ._fg )};func (_gcfa *Context )Image ()_ec .Image {return _gcfa ._aga };func (_gccg *Context )DrawEllipticalArc (x ,y ,rx ,ry ,angle1 ,angle2 float64 ){const _cede =16;for _agca :=0;
_agca < _cede ;_agca ++{_fbag :=float64 (_agca +0)/_cede ;_fea :=float64 (_agca +1)/_cede ;_add :=angle1 +(angle2 -angle1 )*_fbag ;_cgc :=angle1 +(angle2 -angle1 )*_fea ;_ecg :=x +rx *_g .Cos (_add );_fbe :=y +ry *_g .Sin (_add );_gbd :=x +rx *_g .Cos ((_add +_cgc )/2);
_egg :=y +ry *_g .Sin ((_add +_cgc )/2);_afcf :=x +rx *_g .Cos (_cgc );_fga :=y +ry *_g .Sin (_cgc );_bcfd :=2*_gbd -_ecg /2-_afcf /2;_fcc :=2*_egg -_fbe /2-_fga /2;if _agca ==0{if _gccg ._dgb {_gccg .LineTo (_ecg ,_fbe );}else {_gccg .MoveTo (_ecg ,_fbe );
};};_gccg .QuadraticTo (_bcfd ,_fcc ,_afcf ,_fga );};};func (_dff *Context )SetRGB255 (r ,g ,b int ){_dff .SetRGBA255 (r ,g ,b ,255)};func _adabe (_gdae _be .Point )_gf .Point26_6 {return _gf .Point26_6 {X :_adf (_gdae .X ),Y :_adf (_gdae .Y )}};func (_efe *Context )InvertMask (){if _efe ._gbe ==nil {_efe ._gbe =_ec .NewAlpha (_efe ._aga .Bounds ());
}else {for _bba ,_cgg :=range _efe ._gbe .Pix {_efe ._gbe .Pix [_bba ]=255-_cgg ;};};};func _gdge (_dbdc ,_dcf uint32 ,_gddg float64 )uint8 {return uint8 (int32 (float64 (_dbdc )*(1.0-_gddg )+float64 (_dcf )*_gddg )>>8);};func (_gfcg *Context )capper ()_bcc .Capper {switch _gfcg ._bd {case _fb .LineCapButt :return _bcc .ButtCapper ;
case _fb .LineCapRound :return _bcc .RoundCapper ;case _fb .LineCapSquare :return _bcc .SquareCapper ;};return nil ;};func (_fd *Context )SetLineWidth (lineWidth float64 ){_fd ._ceb =lineWidth };func (_ace *Context )Matrix ()_be .Matrix {return _ace ._gg };
func _gcc (_ad ,_cca ,_gba ,_cga ,_deg ,_ab ,_agc ,_ae float64 )[]_be .Point {_aeb :=(_g .Hypot (_gba -_ad ,_cga -_cca )+_g .Hypot (_deg -_gba ,_ab -_cga )+_g .Hypot (_agc -_deg ,_ae -_ab ));_fbc :=int (_aeb +0.5);if _fbc < 4{_fbc =4;};_edab :=float64 (_fbc )-1;
_cgbb :=make ([]_be .Point ,_fbc );for _gfd :=0;_gfd < _fbc ;_gfd ++{_gdf :=float64 (_gfd )/_edab ;_fa ,_ced :=_dfa (_ad ,_cca ,_gba ,_cga ,_deg ,_ab ,_agc ,_ae ,_gdf );_cgbb [_gfd ]=_be .NewPoint (_fa ,_ced );};return _cgbb ;};func (_cgad *Context )RotateAbout (angle ,x ,y float64 ){_cgad .Translate (x ,y );
_cgad .Rotate (angle );_cgad .Translate (-x ,-y );};func _gga (_edac _bcc .Path )[][]_be .Point {var _cfe [][]_be .Point ;var _ebgd []_be .Point ;var _dfbe ,_dbcb float64 ;for _fccb :=0;_fccb < len (_edac );{switch _edac [_fccb ]{case 0:if len (_ebgd )> 0{_cfe =append (_cfe ,_ebgd );
_ebgd =nil ;};_gagf :=_abbf (_edac [_fccb +1]);_gedf :=_abbf (_edac [_fccb +2]);_ebgd =append (_ebgd ,_be .NewPoint (_gagf ,_gedf ));_dfbe ,_dbcb =_gagf ,_gedf ;_fccb +=4;case 1:_gafc :=_abbf (_edac [_fccb +1]);_bfe :=_abbf (_edac [_fccb +2]);_ebgd =append (_ebgd ,_be .NewPoint (_gafc ,_bfe ));
_dfbe ,_dbcb =_gafc ,_bfe ;_fccb +=4;case 2:_eeea :=_abbf (_edac [_fccb +1]);_gbfc :=_abbf (_edac [_fccb +2]);_efd :=_abbf (_edac [_fccb +3]);_agga :=_abbf (_edac [_fccb +4]);_ceea :=_dga (_dfbe ,_dbcb ,_eeea ,_gbfc ,_efd ,_agga );_ebgd =append (_ebgd ,_ceea ...);
_dfbe ,_dbcb =_efd ,_agga ;_fccb +=6;case 3:_gfce :=_abbf (_edac [_fccb +1]);_acc :=_abbf (_edac [_fccb +2]);_ffb :=_abbf (_edac [_fccb +3]);_baeb :=_abbf (_edac [_fccb +4]);_egd :=_abbf (_edac [_fccb +5]);_dge :=_abbf (_edac [_fccb +6]);_cgcc :=_gcc (_dfbe ,_dbcb ,_gfce ,_acc ,_ffb ,_baeb ,_egd ,_dge );
_ebgd =append (_ebgd ,_cgcc ...);_dfbe ,_dbcb =_egd ,_dge ;_fccb +=8;default:_d .Log .Debug ("\u0057\u0041\u0052\u004e: \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0070\u0061\u0074\u0068\u003a\u0020%\u0076",_edac );return _cfe ;};};if len (_ebgd )> 0{_cfe =append (_cfe ,_ebgd );
};return _cfe ;};func (_feb *Context )NewSubPath (){if _feb ._dgb {_feb ._ddb .Add1 (_adabe (_feb ._dac ));};_feb ._dgb =false ;};func (_dba *Context )Push (){_ddf :=*_dba ;_dba ._aee =append (_dba ._aee ,&_ddf )};func (_afg *Context )Width ()int {return _afg ._da };
func (_cae *Context )Transform (x ,y float64 )(_cee ,_gebd float64 ){return _cae ._gg .Transform (x ,y )};var (_gfb =_bdbb (_c .White );_cd =_bdbb (_c .Black ););func (_dcb *Context )Fill (){_dcb .FillPreserve ();_dcb .ClearPath ()};func (_fbg *Context )ClearPath (){_fbg ._bea .Clear ();
_fbg ._ddb .Clear ();_fbg ._dgb =false };func _ebef (_cad _ec .Image ,_cgccb repeatOp )_fb .Pattern {return &surfacePattern {_fefc :_cad ,_bdgc :_cgccb };};func (_ade *Context )Height ()int {return _ade ._aab };func (_age *radialGradient )ColorAt (x ,y int )_c .Color {if len (_age ._agb )==0{return _c .Transparent ;
};_ddbd ,_eadc :=float64 (x )+0.5-_age ._dfe ._gfe ,float64 (y )+0.5-_age ._dfe ._dedd ;_dcd :=_ada (_ddbd ,_eadc ,_age ._dfe ._aaaa ,_age ._ffg ._gfe ,_age ._ffg ._dedd ,_age ._ffg ._aaaa );_ccaga :=_ada (_ddbd ,_eadc ,-_age ._dfe ._aaaa ,_ddbd ,_eadc ,_age ._dfe ._aaaa );
if _age ._gbf ==0{if _dcd ==0{return _c .Transparent ;};_adab :=0.5*_ccaga /_dcd ;if _adab *_age ._ffg ._aaaa >=_age ._eabf {return _fcgc (_adab ,_age ._agb );};return _c .Transparent ;};_bccb :=_ada (_dcd ,_age ._gbf ,0,_dcd ,-_ccaga ,0);if _bccb >=0{_dbcd :=_g .Sqrt (_bccb );
_cfa :=(_dcd +_dbcd )*_age ._gaeb ;_bccbg :=(_dcd -_dbcd )*_age ._gaeb ;if _cfa *_age ._ffg ._aaaa >=_age ._eabf {return _fcgc (_cfa ,_age ._agb );}else if _bccbg *_age ._ffg ._aaaa >=_age ._eabf {return _fcgc (_bccbg ,_age ._agb );};};return _c .Transparent ;
};func _bdbb (_cbfc _c .Color )_fb .Pattern {return &solidPattern {_fff :_cbfc }};type repeatOp int ;func (_dffb *Context )ClosePath (){if _dffb ._dgb {_acb :=_adabe (_dffb ._dac );_dffb ._bea .Add1 (_acb );_dffb ._ddb .Add1 (_acb );_dffb ._ebfg =_dffb ._dac ;
};};func (_daf *Context )ResetClip (){_daf ._gbe =nil };func (_gcg *Context )SetFillStyle (pattern _fb .Pattern ){if _bcf ,_dae :=pattern .(*solidPattern );_dae {_gcg ._fg =_bcf ._fff ;};_gcg ._cda =pattern ;};type surfacePattern struct{_fefc _ec .Image ;
_bdgc repeatOp ;};func _ada (_dde ,_eddf ,_dbb ,_dgce ,_gcec ,_dfge float64 )float64 {return _dde *_dgce +_eddf *_gcec +_dbb *_dfge ;};type patternPainter struct{_gdfaf *_ec .RGBA ;_aega *_ec .Alpha ;_aba _fb .Pattern ;};