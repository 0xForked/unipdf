//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package imagerender ;import (_da "errors";_f "fmt";_fe "github.com/golang/freetype/raster";_ea "github.com/unidoc/unipdf/v3/common";_ga "github.com/unidoc/unipdf/v3/internal/transform";_ead "github.com/unidoc/unipdf/v3/render/internal/context";_dc "golang.org/x/image/draw";
_ce "golang.org/x/image/font";_ae "golang.org/x/image/math/f64";_gg "golang.org/x/image/math/fixed";_a "image";_d "image/color";_be "image/draw";_b "math";_e "sort";_g "strings";);func (_gebb *Context )AsMask ()*_a .Alpha {_gfce :=_a .NewAlpha (_gebb ._cfdc .Bounds ());
_dc .Draw (_gfce ,_gebb ._cfdc .Bounds (),_gebb ._cfdc ,_a .Point {},_dc .Src );return _gfce ;};func (_ecgf *Context )RotateAbout (angle ,x ,y float64 ){_ecgf .Translate (x ,y );_ecgf .Rotate (angle );_ecgf .Translate (-x ,-y );};func (_bbf *Context )ResetClip (){_bbf ._ba =nil };
func (_ccab *Context )ScaleAbout (sx ,sy ,x ,y float64 ){_ccab .Translate (x ,y );_ccab .Scale (sx ,sy );_ccab .Translate (-x ,-y );};func NewContextForImage (im _a .Image )*Context {return NewContextForRGBA (_aadf (im ))};func (_dbg *Context )SetFillRGBA (r ,g ,b ,a float64 ){_fgdb :=_d .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};
_dbg ._bcc =_fgdb ;_dbg ._adb =_dgcf (_fgdb );};func (_gea *Context )SetHexColor (x string ){_ccd ,_gdf ,_bbe ,_gfc :=_eaed (x );_gea .SetRGBA255 (_ccd ,_gdf ,_bbe ,_gfc );};func (_gdc *Context )SetRGBA (r ,g ,b ,a float64 ){_gdc ._bcc =_d .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};
_gdc .setFillAndStrokeColor (_gdc ._bcc );};func (_ade *Context )DrawImageAnchored (im _a .Image ,x ,y int ,ax ,ay float64 ){_fcc :=im .Bounds ().Size ();x -=int (ax *float64 (_fcc .X ));y -=int (ay *float64 (_fcc .Y ));_gcc :=_dc .BiLinear ;_dfd :=_ade ._bgb .Clone ().Translate (float64 (x ),float64 (y ));
_gbe :=_ae .Aff3 {_dfd [0],_dfd [3],_dfd [6],_dfd [1],_dfd [4],_dfd [7]};if _ade ._ba ==nil {_gcc .Transform (_ade ._cfdc ,_gbe ,im ,im .Bounds (),_dc .Over ,nil );}else {_gcc .Transform (_ade ._cfdc ,_gbe ,im ,im .Bounds (),_dc .Over ,&_dc .Options {DstMask :_ade ._ba ,DstMaskP :_a .Point {}});
};};func (_baf *Context )DrawLine (x1 ,y1 ,x2 ,y2 float64 ){_baf .MoveTo (x1 ,y1 );_baf .LineTo (x2 ,y2 )};func (_dbe *Context )FillPreserve (){var _ebe _fe .Painter ;if _dbe ._ba ==nil {if _aeee ,_ffb :=_dbe ._adb .(*solidPattern );_ffb {_fgde :=_fe .NewRGBAPainter (_dbe ._cfdc );
_fgde .SetColor (_aeee ._feb );_ebe =_fgde ;};};if _ebe ==nil {_ebe =_gag (_dbe ._cfdc ,_dbe ._ba ,_dbe ._adb );};_dbe .fill (_ebe );};func (_dgg *Context )SetFillStyle (pattern _ead .Pattern ){if _adg ,_fde :=pattern .(*solidPattern );_fde {_dgg ._bcc =_adg ._feb ;
};_dgg ._adb =pattern ;};func (_fffa *Context )ClearPath (){_fffa ._aeeb .Clear ();_fffa ._geg .Clear ();_fffa ._gacd =false };func (_acee *Context )MeasureString (s string ,face _ce .Face )(_geeba ,_gfb float64 ){_fgdgc :=&_ce .Drawer {Face :face };_ebg :=_fgdgc .MeasureString (s );
return float64 (_ebg >>6),_acee ._aec .Tf .Size ;};func (_befg *Context )SetMask (mask *_a .Alpha )error {if mask .Bounds ().Size ()!=_befg ._cfdc .Bounds ().Size (){return _da .New ("\u006d\u0061\u0073\u006b\u0020\u0073i\u007a\u0065\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068 \u0063\u006f\u006e\u0074\u0065\u0078\u0074 \u0073\u0069\u007a\u0065");
};_befg ._ba =mask ;return nil ;};type linearGradient struct{_eae ,_fed ,_fec ,_gdb float64 ;_gcf stops ;};func (_bbeg stops )Swap (i ,j int ){_bbeg [i ],_bbeg [j ]=_bbeg [j ],_bbeg [i ]};func (_gcaa *patternPainter )Paint (ss []_fe .Span ,done bool ){_egeb :=_gcaa ._egdaf .Bounds ();
for _ ,_eagbb :=range ss {if _eagbb .Y < _egeb .Min .Y {continue ;};if _eagbb .Y >=_egeb .Max .Y {return ;};if _eagbb .X0 < _egeb .Min .X {_eagbb .X0 =_egeb .Min .X ;};if _eagbb .X1 > _egeb .Max .X {_eagbb .X1 =_egeb .Max .X ;};if _eagbb .X0 >=_eagbb .X1 {continue ;
};const _bcab =1<<16-1;_gffb :=_eagbb .Y -_gcaa ._egdaf .Rect .Min .Y ;_agdfd :=_eagbb .X0 -_gcaa ._egdaf .Rect .Min .X ;_ggab :=(_eagbb .Y -_gcaa ._egdaf .Rect .Min .Y )*_gcaa ._egdaf .Stride +(_eagbb .X0 -_gcaa ._egdaf .Rect .Min .X )*4;_bbbe :=_ggab +(_eagbb .X1 -_eagbb .X0 )*4;
for _gbggg ,_caad :=_ggab ,_agdfd ;_gbggg < _bbbe ;_gbggg ,_caad =_gbggg +4,_caad +1{_cgeb :=_eagbb .Alpha ;if _gcaa ._cccf !=nil {_cgeb =_cgeb *uint32 (_gcaa ._cccf .AlphaAt (_caad ,_gffb ).A )/255;if _cgeb ==0{continue ;};};_fcf :=_gcaa ._fcb .ColorAt (_caad ,_gffb );
_fgfg ,_aadc ,_fga ,_fbaf :=_fcf .RGBA ();_dfcg :=uint32 (_gcaa ._egdaf .Pix [_gbggg +0]);_aab :=uint32 (_gcaa ._egdaf .Pix [_gbggg +1]);_fce :=uint32 (_gcaa ._egdaf .Pix [_gbggg +2]);_egf :=uint32 (_gcaa ._egdaf .Pix [_gbggg +3]);_babb :=(_bcab -(_fbaf *_cgeb /_bcab ))*0x101;
_gcaa ._egdaf .Pix [_gbggg +0]=uint8 ((_dfcg *_babb +_fgfg *_cgeb )/_bcab >>8);_gcaa ._egdaf .Pix [_gbggg +1]=uint8 ((_aab *_babb +_aadc *_cgeb )/_bcab >>8);_gcaa ._egdaf .Pix [_gbggg +2]=uint8 ((_fce *_babb +_fga *_cgeb )/_bcab >>8);_gcaa ._egdaf .Pix [_gbggg +3]=uint8 ((_egf *_babb +_fbaf *_cgeb )/_bcab >>8);
};};};func (_eegb *radialGradient )ColorAt (x ,y int )_d .Color {if len (_eegb ._aaad )==0{return _d .Transparent ;};_dgbf ,_gffg :=float64 (x )+0.5-_eegb ._bbc ._egeg ,float64 (y )+0.5-_eegb ._bbc ._aage ;_agdd :=_cgfc (_dgbf ,_gffg ,_eegb ._bbc ._gdfd ,_eegb ._fgee ._egeg ,_eegb ._fgee ._aage ,_eegb ._fgee ._gdfd );
_adca :=_cgfc (_dgbf ,_gffg ,-_eegb ._bbc ._gdfd ,_dgbf ,_gffg ,_eegb ._bbc ._gdfd );if _eegb ._gae ==0{if _agdd ==0{return _d .Transparent ;};_gce :=0.5*_adca /_agdd ;if _gce *_eegb ._fgee ._gdfd >=_eegb ._fba {return _adacb (_gce ,_eegb ._aaad );};return _d .Transparent ;
};_fbdb :=_cgfc (_agdd ,_eegb ._gae ,0,_agdd ,-_adca ,0);if _fbdb >=0{_fgdbc :=_b .Sqrt (_fbdb );_agdf :=(_agdd +_fgdbc )*_eegb ._defg ;_cdf :=(_agdd -_fgdbc )*_eegb ._defg ;if _agdf *_eegb ._fgee ._gdfd >=_eegb ._fba {return _adacb (_agdf ,_eegb ._aaad );
}else if _cdf *_eegb ._fgee ._gdfd >=_eegb ._fba {return _adacb (_cdf ,_eegb ._aaad );};};return _d .Transparent ;};func (_fdc *Context )Translate (x ,y float64 ){_fdc ._bgb =_fdc ._bgb .Translate (x ,y )};func (_dbd *Context )DrawRoundedRectangle (x ,y ,w ,h ,r float64 ){_fac ,_caf ,_efe ,_eada :=x ,x +r ,x +w -r ,x +w ;
_dbc ,_aaa ,_afb ,_edeg :=y ,y +r ,y +h -r ,y +h ;_dbd .NewSubPath ();_dbd .MoveTo (_caf ,_dbc );_dbd .LineTo (_efe ,_dbc );_dbd .DrawArc (_efe ,_aaa ,r ,_gfcd (270),_gfcd (360));_dbd .LineTo (_eada ,_afb );_dbd .DrawArc (_efe ,_afb ,r ,_gfcd (0),_gfcd (90));
_dbd .LineTo (_caf ,_edeg );_dbd .DrawArc (_caf ,_afb ,r ,_gfcd (90),_gfcd (180));_dbd .LineTo (_fac ,_aaa );_dbd .DrawArc (_caf ,_aaa ,r ,_gfcd (180),_gfcd (270));_dbd .ClosePath ();};func (_bfg stops )Less (i ,j int )bool {return _bfg [i ]._acg < _bfg [j ]._acg };
func (_eef *Context )capper ()_fe .Capper {switch _eef ._edd {case _ead .LineCapButt :return _fe .ButtCapper ;case _ead .LineCapRound :return _fe .RoundCapper ;case _ead .LineCapSquare :return _fe .SquareCapper ;};return nil ;};func (_ee *Context )FillPattern ()_ead .Pattern {return _ee ._adb };
type stops []stop ;func (_ecd *Context )DrawStringAnchored (s string ,face _ce .Face ,x ,y ,ax ,ay float64 ){_deg ,_ace :=_ecd .MeasureString (s ,face );_ecd .drawString (s ,face ,x -ax *_deg ,y +ay *_ace );};func (_fcce stops )Len ()int {return len (_fcce )};
func (_dgd *Context )stroke (_fdg _fe .Painter ){_ebf :=_dgd ._aeeb ;if len (_dgd ._fea )> 0{_ebf =_dbbda (_ebf ,_dgd ._fea ,_dgd ._begf );}else {_ebf =_gbag (_degb (_ebf ));};_cab :=_dgd ._edf ;_cab .UseNonZeroWinding =true ;_cab .Clear ();_bga :=(_dgd ._bgb .ScalingFactorX ()+_dgd ._bgb .ScalingFactorY ())/2;
_cab .AddStroke (_ebf ,_ecca (_dgd ._bfbd *_bga ),_dgd .capper (),_dgd .joiner ());_cab .Rasterize (_fdg );};func (_cae *Context )Width ()int {return _cae ._gff };func (_debda *radialGradient )AddColorStop (offset float64 ,color _d .Color ){_debda ._aaad =append (_debda ._aaad ,stop {_acg :offset ,_bbee :color });
_e .Sort (_debda ._aaad );};func (_fae *Context )Clear (){_bbd :=_a .NewUniform (_fae ._bcc );_dc .Draw (_fae ._cfdc ,_fae ._cfdc .Bounds (),_bbd ,_a .Point {},_dc .Src );};func _gag (_abc *_a .RGBA ,_gcd *_a .Alpha ,_abg _ead .Pattern )*patternPainter {return &patternPainter {_abc ,_gcd ,_abg };
};func (_efdf *Context )DrawArc (x ,y ,r ,angle1 ,angle2 float64 ){_efdf .DrawEllipticalArc (x ,y ,r ,r ,angle1 ,angle2 );};func (_abac *Context )DrawCircle (x ,y ,r float64 ){_abac .NewSubPath ();_abac .DrawEllipticalArc (x ,y ,r ,r ,0,2*_b .Pi );_abac .ClosePath ();
};func (_ggd *Context )ShearAbout (sx ,sy ,x ,y float64 ){_ggd .Translate (x ,y );_ggd .Shear (sx ,sy );_ggd .Translate (-x ,-y );};func (_adf *Context )Stroke (){_adf .StrokePreserve ();_adf .ClearPath ()};func (_deb *Context )NewSubPath (){if _deb ._gacd {_deb ._geg .Add1 (_cfdcd (_deb ._gc ));
};_deb ._gacd =false ;};func _cfdcd (_ceece _ga .Point )_gg .Point26_6 {return _gg .Point26_6 {X :_ecca (_ceece .X ),Y :_ecca (_ceece .Y )};};func _egda (_dcedc _a .Image ,_fdbb repeatOp )_ead .Pattern {return &surfacePattern {_gca :_dcedc ,_dgcb :_fdbb };
};func (_efac *Context )Image ()_a .Image {return _efac ._cfdc };func (_gebc *Context )SetPixel (x ,y int ){_gebc ._cfdc .Set (x ,y ,_gebc ._bcc )};func _degb (_bdd _fe .Path )[][]_ga .Point {var _dbbd [][]_ga .Point ;var _gfcg []_ga .Point ;var _aeb ,_fdfd float64 ;
for _ccg :=0;_ccg < len (_bdd );{switch _bdd [_ccg ]{case 0:if len (_gfcg )> 0{_dbbd =append (_dbbd ,_gfcg );_gfcg =nil ;};_cdfb :=_dae (_bdd [_ccg +1]);_abd :=_dae (_bdd [_ccg +2]);_gfcg =append (_gfcg ,_ga .NewPoint (_cdfb ,_abd ));_aeb ,_fdfd =_cdfb ,_abd ;
_ccg +=4;case 1:_begb :=_dae (_bdd [_ccg +1]);_edg :=_dae (_bdd [_ccg +2]);_gfcg =append (_gfcg ,_ga .NewPoint (_begb ,_edg ));_aeb ,_fdfd =_begb ,_edg ;_ccg +=4;case 2:_bdcg :=_dae (_bdd [_ccg +1]);_bfe :=_dae (_bdd [_ccg +2]);_ceff :=_dae (_bdd [_ccg +3]);
_eaa :=_dae (_bdd [_ccg +4]);_ddd :=_cb (_aeb ,_fdfd ,_bdcg ,_bfe ,_ceff ,_eaa );_gfcg =append (_gfcg ,_ddd ...);_aeb ,_fdfd =_ceff ,_eaa ;_ccg +=6;case 3:_aad :=_dae (_bdd [_ccg +1]);_cecg :=_dae (_bdd [_ccg +2]);_adbf :=_dae (_bdd [_ccg +3]);_cggg :=_dae (_bdd [_ccg +4]);
_aagg :=_dae (_bdd [_ccg +5]);_fdde :=_dae (_bdd [_ccg +6]);_edea :=_cef (_aeb ,_fdfd ,_aad ,_cecg ,_adbf ,_cggg ,_aagg ,_fdde );_gfcg =append (_gfcg ,_edea ...);_aeb ,_fdfd =_aagg ,_fdde ;_ccg +=8;default:_ea .Log .Debug ("\u0057\u0041\u0052\u004e: \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0070\u0061\u0074\u0068\u003a\u0020%\u0076",_bdd );
return _dbbd ;};};if len (_gfcg )> 0{_dbbd =append (_dbbd ,_gfcg );};return _dbbd ;};func (_cbaf *Context )SetRGB255 (r ,g ,b int ){_cbaf .SetRGBA255 (r ,g ,b ,255)};func _dbbda (_dfdf _fe .Path ,_cdbd []float64 ,_bege float64 )_fe .Path {return _gbag (_gbf (_degb (_dfdf ),_cdbd ,_bege ));
};func (_cbd *Context )DrawEllipse (x ,y ,rx ,ry float64 ){_cbd .NewSubPath ();_cbd .DrawEllipticalArc (x ,y ,rx ,ry ,0,2*_b .Pi );_cbd .ClosePath ();};const (_eea repeatOp =iota ;_fdfc ;_ecde ;_cceg ;);func (_aeg *Context )Scale (x ,y float64 ){_aeg ._bgb =_aeg ._bgb .Scale (x ,y )};
func (_dbb *Context )LineWidth ()float64 {return _dbb ._bfbd };func _cb (_ge ,_ged ,_cd ,_ac ,_ad ,_bc float64 )[]_ga .Point {_bef :=(_b .Hypot (_cd -_ge ,_ac -_ged )+_b .Hypot (_ad -_cd ,_bc -_ac ));_fg :=int (_bef +0.5);if _fg < 4{_fg =4;};_gb :=float64 (_fg )-1;
_cg :=make ([]_ga .Point ,_fg );for _db :=0;_db < _fg ;_db ++{_edb :=float64 (_db )/_gb ;_bff ,_gd :=_ec (_ge ,_ged ,_cd ,_ac ,_ad ,_bc ,_edb );_cg [_db ]=_ga .NewPoint (_bff ,_gd );};return _cg ;};func (_cgg *Context )SetLineCap (lineCap _ead .LineCap ){_cgg ._edd =lineCap };
type radialGradient struct{_bbc ,_gece ,_fgee circle ;_gae ,_defg float64 ;_fba float64 ;_aaad stops ;};type patternPainter struct{_egdaf *_a .RGBA ;_cccf *_a .Alpha ;_fcb _ead .Pattern ;};func (_ece *Context )Pop (){_dgf :=*_ece ;_gbg :=_ece ._eb ;_ggc :=_gbg [len (_gbg )-1];
*_ece =*_ggc ;_ece ._aeeb =_dgf ._aeeb ;_ece ._geg =_dgf ._geg ;_ece ._gc =_dgf ._gc ;_ece ._egc =_dgf ._egc ;_ece ._gacd =_dgf ._gacd ;};func (_ddge *Context )Transform (x ,y float64 )(_eee ,_dced float64 ){return _ddge ._bgb .Transform (x ,y );};func (_agc *Context )ClipPreserve (){_ffg :=_a .NewAlpha (_a .Rect (0,0,_agc ._gff ,_agc ._cbc ));
_dfa :=_fe .NewAlphaOverPainter (_ffg );_agc .fill (_dfa );if _agc ._ba ==nil {_agc ._ba =_ffg ;}else {_ccad :=_a .NewAlpha (_a .Rect (0,0,_agc ._gff ,_agc ._cbc ));_dc .DrawMask (_ccad ,_ccad .Bounds (),_ffg ,_a .Point {},_agc ._ba ,_a .Point {},_dc .Over );
_agc ._ba =_ccad ;};};func NewContext (width ,height int )*Context {return NewContextForRGBA (_a .NewRGBA (_a .Rect (0,0,width ,height )));};type Context struct{_gff int ;_cbc int ;_edf *_fe .Rasterizer ;_cfdc *_a .RGBA ;_ba *_a .Alpha ;_bcc _d .Color ;
_adb _ead .Pattern ;_fad _ead .Pattern ;_aeeb _fe .Path ;_geg _fe .Path ;_gc _ga .Point ;_egc _ga .Point ;_gacd bool ;_fea []float64 ;_begf float64 ;_bfbd float64 ;_edd _ead .LineCap ;_aca _ead .LineJoin ;_agf _ead .FillRule ;_bgb _ga .Matrix ;_aec _ead .TextState ;
_eb []*Context ;};func (_beb *Context )DrawImage (im _a .Image ,x ,y int ){_beb .DrawImageAnchored (im ,x ,y ,0,0)};func (_bgcc *linearGradient )ColorAt (x ,y int )_d .Color {if len (_bgcc ._gcf )==0{return _d .Transparent ;};_dggd ,_cbab :=float64 (x ),float64 (y );
_dadf ,_ccf ,_fgf ,_adfe :=_bgcc ._eae ,_bgcc ._fed ,_bgcc ._fec ,_bgcc ._gdb ;_ggb ,_gfg :=_fgf -_dadf ,_adfe -_ccf ;if _gfg ==0&&_ggb !=0{return _adacb ((_dggd -_dadf )/_ggb ,_bgcc ._gcf );};if _ggb ==0&&_gfg !=0{return _adacb ((_cbab -_ccf )/_gfg ,_bgcc ._gcf );
};_faa :=_ggb *(_dggd -_dadf )+_gfg *(_cbab -_ccf );if _faa < 0{return _bgcc ._gcf [0]._bbee ;};_dcee :=_b .Hypot (_ggb ,_gfg );_eaga :=((_dggd -_dadf )*-_gfg +(_cbab -_ccf )*_ggb )/(_dcee *_dcee );_acc ,_caed :=_dadf +_eaga *-_gfg ,_ccf +_eaga *_ggb ;
_eeg :=_b .Hypot (_dggd -_acc ,_cbab -_caed )/_dcee ;return _adacb (_eeg ,_bgcc ._gcf );};func _cdd (_ff ,_bfb ,_efd ,_fa ,_acd ,_af ,_gab ,_dcg ,_bce float64 )(_gf ,_dad float64 ){_cfd :=1-_bce ;_bb :=_cfd *_cfd *_cfd ;_fgd :=3*_cfd *_cfd *_bce ;_aa :=3*_cfd *_bce *_bce ;
_ede :=_bce *_bce *_bce ;_gf =_bb *_ff +_fgd *_efd +_aa *_acd +_ede *_gab ;_dad =_bb *_bfb +_fgd *_fa +_aa *_af +_ede *_dcg ;return ;};func (_afgf *surfacePattern )ColorAt (x ,y int )_d .Color {_aff :=_afgf ._gca .Bounds ();switch _afgf ._dgcb {case _fdfc :if y >=_aff .Dy (){return _d .Transparent ;
};case _ecde :if x >=_aff .Dx (){return _d .Transparent ;};case _cceg :if x >=_aff .Dx ()||y >=_aff .Dy (){return _d .Transparent ;};};x =x %_aff .Dx ()+_aff .Min .X ;y =y %_aff .Dy ()+_aff .Min .Y ;return _afgf ._gca .At (x ,y );};func (_afgd *Context )InvertMask (){if _afgd ._ba ==nil {_afgd ._ba =_a .NewAlpha (_afgd ._cfdc .Bounds ());
}else {for _fegf ,_fdf :=range _afgd ._ba .Pix {_afgd ._ba .Pix [_fegf ]=255-_fdf ;};};};func (_ffe *Context )StrokePattern ()_ead .Pattern {return _ffe ._fad };func _cgfc (_aef ,_ebfe ,_cce ,_ceec ,_afc ,_deec float64 )float64 {return _aef *_ceec +_ebfe *_afc +_cce *_deec ;
};func _gfa (_bcbf ,_fcd uint32 ,_ggbf float64 )uint8 {return uint8 (int32 (float64 (_bcbf )*(1.0-_ggbf )+float64 (_fcd )*_ggbf )>>8);};func (_ddf *Context )fill (_cge _fe .Painter ){_gee :=_ddf ._geg ;if _ddf ._gacd {_gee =make (_fe .Path ,len (_ddf ._geg ));
copy (_gee ,_ddf ._geg );_gee .Add1 (_cfdcd (_ddf ._gc ));};_aea :=_ddf ._edf ;_aea .UseNonZeroWinding =_ddf ._agf ==_ead .FillRuleWinding ;_aea .Clear ();_aea .AddPath (_gee );_aea .Rasterize (_cge );};func (_dgc *Context )Shear (x ,y float64 ){_dgc ._bgb .Shear (x ,y )};
func (_fab *Context )SetLineWidth (lineWidth float64 ){_fab ._bfbd =lineWidth };func (_gad *Context )SetDashOffset (offset float64 ){_gad ._begf =offset };func (_gba *Context )SetMatrix (m _ga .Matrix ){_gba ._bgb =m };func (_ab *Context )SetColor (c _d .Color ){_ab .setFillAndStrokeColor (c )};
func _gbag (_bcce [][]_ga .Point )_fe .Path {var _gcea _fe .Path ;for _ ,_fagg :=range _bcce {var _cfeb _gg .Point26_6 ;for _fbag ,_eabe :=range _fagg {_dgbb :=_cfdcd (_eabe );if _fbag ==0{_gcea .Start (_dgbb );}else {_abb :=_dgbb .X -_cfeb .X ;_ccee :=_dgbb .Y -_cfeb .Y ;
if _abb < 0{_abb =-_abb ;};if _ccee < 0{_ccee =-_ccee ;};if _abb +_ccee > 8{_gcea .Add1 (_dgbb );};};_cfeb =_dgbb ;};};return _gcea ;};func (_fc *Context )SetStrokeRGBA (r ,g ,b ,a float64 ){_bgc :=_d .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};
_fc ._fad =_dgcf (_bgc );};func _fgbfg (_bae ,_debg ,_fdb ,_bca ,_bafg ,_cec float64 )_ead .Gradient {_cfe :=circle {_bae ,_debg ,_fdb };_cbcb :=circle {_bca ,_bafg ,_cec };_dcd :=circle {_bca -_bae ,_bafg -_debg ,_cec -_fdb };_eca :=_cgfc (_dcd ._egeg ,_dcd ._aage ,-_dcd ._gdfd ,_dcd ._egeg ,_dcd ._aage ,_dcd ._gdfd );
var _fgef float64 ;if _eca !=0{_fgef =1.0/_eca ;};_egb :=-_cfe ._gdfd ;_cadb :=&radialGradient {_bbc :_cfe ,_gece :_cbcb ,_fgee :_dcd ,_gae :_eca ,_defg :_fgef ,_fba :_egb };return _cadb ;};func (_dbde *solidPattern )ColorAt (x ,y int )_d .Color {return _dbde ._feb };
type repeatOp int ;func (_fag *Context )drawRegularPolygon (_ddgg int ,_dfbf ,_ceeb ,_cada ,_ebd float64 ){_bgbb :=2*_b .Pi /float64 (_ddgg );_ebd -=_b .Pi /2;if _ddgg %2==0{_ebd +=_bgbb /2;};_fag .NewSubPath ();for _cgc :=0;_cgc < _ddgg ;_cgc ++{_ega :=_ebd +_bgbb *float64 (_cgc );
_fag .LineTo (_dfbf +_cada *_b .Cos (_ega ),_ceeb +_cada *_b .Sin (_ega ));};_fag .ClosePath ();};func (_fef *Context )joiner ()_fe .Joiner {switch _fef ._aca {case _ead .LineJoinBevel :return _fe .BevelJoiner ;case _ead .LineJoinRound :return _fe .RoundJoiner ;
};return nil ;};func _dgcf (_gdff _d .Color )_ead .Pattern {return &solidPattern {_feb :_gdff }};func (_ddfb *Context )DrawRectangle (x ,y ,w ,h float64 ){_ddfb .NewSubPath ();_ddfb .MoveTo (x ,y );_ddfb .LineTo (x +w ,y );_ddfb .LineTo (x +w ,y +h );_ddfb .LineTo (x ,y +h );
_ddfb .ClosePath ();};func (_cda *Context )QuadraticTo (x1 ,y1 ,x2 ,y2 float64 ){if !_cda ._gacd {_cda .MoveTo (x1 ,y1 );};x1 ,y1 =_cda .Transform (x1 ,y1 );x2 ,y2 =_cda .Transform (x2 ,y2 );_daf :=_ga .NewPoint (x1 ,y1 );_eag :=_ga .NewPoint (x2 ,y2 );
_fca :=_cfdcd (_daf );_dd :=_cfdcd (_eag );_cda ._aeeb .Add2 (_fca ,_dd );_cda ._geg .Add2 (_fca ,_dd );_cda ._egc =_eag ;};func (_cad *Context )DrawEllipticalArc (x ,y ,rx ,ry ,angle1 ,angle2 float64 ){const _cbac =16;for _cffe :=0;_cffe < _cbac ;_cffe ++{_cgf :=float64 (_cffe +0)/_cbac ;
_add :=float64 (_cffe +1)/_cbac ;_bcba :=angle1 +(angle2 -angle1 )*_cgf ;_fbd :=angle1 +(angle2 -angle1 )*_add ;_ddg :=x +rx *_b .Cos (_bcba );_fcg :=y +ry *_b .Sin (_bcba );_cabg :=x +rx *_b .Cos ((_bcba +_fbd )/2);_dee :=y +ry *_b .Sin ((_bcba +_fbd )/2);
_geeb :=x +rx *_b .Cos (_fbd );_eda :=y +ry *_b .Sin (_fbd );_bea :=2*_cabg -_ddg /2-_geeb /2;_debd :=2*_dee -_fcg /2-_eda /2;if _cffe ==0{if _cad ._gacd {_cad .LineTo (_ddg ,_fcg );}else {_cad .MoveTo (_ddg ,_fcg );};};_cad .QuadraticTo (_bea ,_debd ,_geeb ,_eda );
};};func (_bba *Context )TextState ()*_ead .TextState {return &_bba ._aec };func (_cgec *Context )StrokePreserve (){var _geb _fe .Painter ;if _cgec ._ba ==nil {if _fb ,_cefe :=_cgec ._fad .(*solidPattern );_cefe {_adc :=_fe .NewRGBAPainter (_cgec ._cfdc );
_adc .SetColor (_fb ._feb );_geb =_adc ;};};if _geb ==nil {_geb =_gag (_cgec ._cfdc ,_cgec ._ba ,_cgec ._fad );};_cgec .stroke (_geb );};type surfacePattern struct{_gca _a .Image ;_dgcb repeatOp ;};func _ec (_gac ,_ef ,_ag ,_cf ,_ed ,_cea ,_cc float64 )(_bf ,_ca float64 ){_age :=1-_cc ;
_dg :=_age *_age ;_efa :=2*_age *_cc ;_eg :=_cc *_cc ;_bf =_dg *_gac +_efa *_ag +_eg *_ed ;_ca =_dg *_ef +_efa *_cf +_eg *_cea ;return ;};func _cef (_ced ,_cca ,_cee ,_cba ,_bg ,_beg ,_edc ,_fd float64 )[]_ga .Point {_fge :=(_b .Hypot (_cee -_ced ,_cba -_cca )+_b .Hypot (_bg -_cee ,_beg -_cba )+_b .Hypot (_edc -_bg ,_fd -_beg ));
_fgb :=int (_fge +0.5);if _fgb < 4{_fgb =4;};_dce :=float64 (_fgb )-1;_de :=make ([]_ga .Point ,_fgb );for _aee :=0;_aee < _fgb ;_aee ++{_ada :=float64 (_aee )/_dce ;_ccc ,_cff :=_cdd (_ced ,_cca ,_cee ,_cba ,_bg ,_beg ,_edc ,_fd ,_ada );_de [_aee ]=_ga .NewPoint (_ccc ,_cff );
};return _de ;};func (_cbb *Context )LineTo (x ,y float64 ){if !_cbb ._gacd {_cbb .MoveTo (x ,y );}else {x ,y =_cbb .Transform (x ,y );_aba :=_ga .NewPoint (x ,y );_bcb :=_cfdcd (_aba );_cbb ._aeeb .Add1 (_bcb );_cbb ._geg .Add1 (_bcb );_cbb ._egc =_aba ;
};};func _gbf (_ccac [][]_ga .Point ,_gbgg []float64 ,_gedg float64 )[][]_ga .Point {var _cgfe [][]_ga .Point ;if len (_gbgg )==0{return _ccac ;};if len (_gbgg )==1{_gbgg =append (_gbgg ,_gbgg [0]);};for _ ,_ddb :=range _ccac {if len (_ddb )< 2{continue ;
};_gcfa :=_ddb [0];_dfdb :=1;_aga :=0;_cag :=0.0;if _gedg !=0{var _dbbf float64 ;for _ ,_egd :=range _gbgg {_dbbf +=_egd ;};_gedg =_b .Mod (_gedg ,_dbbf );if _gedg < 0{_gedg +=_dbbf ;};for _cbad ,_fgc :=range _gbgg {_gedg -=_fgc ;if _gedg < 0{_aga =_cbad ;
_cag =_fgc +_gedg ;break ;};};};var _gbgd []_ga .Point ;_gbgd =append (_gbgd ,_gcfa );for _dfdb < len (_ddb ){_gga :=_gbgg [_aga ];_agfd :=_ddb [_dfdb ];_bbfb :=_gcfa .Distance (_agfd );_eab :=_gga -_cag ;if _bbfb > _eab {_gfd :=_eab /_bbfb ;_bdce :=_gcfa .Interpolate (_agfd ,_gfd );
_gbgd =append (_gbgd ,_bdce );if _aga %2==0&&len (_gbgd )> 1{_cgfe =append (_cgfe ,_gbgd );};_gbgd =nil ;_gbgd =append (_gbgd ,_bdce );_cag =0;_gcfa =_bdce ;_aga =(_aga +1)%len (_gbgg );}else {_gbgd =append (_gbgd ,_agfd );_gcfa =_agfd ;_cag +=_bbfb ;_dfdb ++;
};};if _aga %2==0&&len (_gbgd )> 1{_cgfe =append (_cgfe ,_gbgd );};};return _cgfe ;};func _efgd (_gec ,_ebc ,_cde ,_ecc float64 )_ead .Gradient {_fegc :=&linearGradient {_eae :_gec ,_fed :_ebc ,_fec :_cde ,_gdb :_ecc };return _fegc ;};func (_agd *Context )SetLineJoin (lineJoin _ead .LineJoin ){_agd ._aca =lineJoin };
func (_cdb *Context )Fill (){_cdb .FillPreserve ();_cdb .ClearPath ()};func (_adce *linearGradient )AddColorStop (offset float64 ,color _d .Color ){_adce ._gcf =append (_adce ._gcf ,stop {_acg :offset ,_bbee :color });_e .Sort (_adce ._gcf );};func (_dea *Context )CubicTo (x1 ,y1 ,x2 ,y2 ,x3 ,y3 float64 ){if !_dea ._gacd {_dea .MoveTo (x1 ,y1 );
};_feg ,_aag :=_dea ._egc .X ,_dea ._egc .Y ;x1 ,y1 =_dea .Transform (x1 ,y1 );x2 ,y2 =_dea .Transform (x2 ,y2 );x3 ,y3 =_dea .Transform (x3 ,y3 );_afd :=_cef (_feg ,_aag ,x1 ,y1 ,x2 ,y2 ,x3 ,y3 );_aac :=_cfdcd (_dea ._egc );for _ ,_acdd :=range _afd [1:]{_gef :=_cfdcd (_acdd );
if _gef ==_aac {continue ;};_aac =_gef ;_dea ._aeeb .Add1 (_gef );_dea ._geg .Add1 (_gef );_dea ._egc =_acdd ;};};func _gfcd (_adgc float64 )float64 {return _adgc *_b .Pi /180};func (_fgdg *Context )setFillAndStrokeColor (_def _d .Color ){_fgdg ._bcc =_def ;
_fgdg ._adb =_dgcf (_def );_fgdg ._fad =_dgcf (_def );};func (_ecg *Context )drawString (_aae string ,_ded _ce .Face ,_gegd ,_cfb float64 ){_ebef :=&_ce .Drawer {Src :_a .NewUniform (_ecg ._bcc ),Face :_ded ,Dot :_cfdcd (_ga .NewPoint (_gegd ,_cfb ))};
_bcea :=rune (-1);for _ ,_fdd :=range _aae {if _bcea >=0{_ebef .Dot .X +=_ebef .Face .Kern (_bcea ,_fdd );};_eadd ,_ffd ,_efdfg ,_gbcb ,_gaa :=_ebef .Face .Glyph (_ebef .Dot ,_fdd );if !_gaa {continue ;};_cdg :=_eadd .Sub (_eadd .Min );_cgfa :=_a .NewRGBA (_cdg );
_dc .DrawMask (_cgfa ,_cdg ,_ebef .Src ,_a .Point {},_ffd ,_efdfg ,_dc .Over );var _ffde *_dc .Options ;if _ecg ._ba !=nil {_ffde =&_dc .Options {DstMask :_ecg ._ba ,DstMaskP :_a .Point {}};};_ffa :=_ecg ._bgb .Clone ().Translate (float64 (_eadd .Min .X ),float64 (_eadd .Min .Y ));
_dcc :=_ae .Aff3 {_ffa [0],_ffa [3],_ffa [6],_ffa [1],_ffa [4],_ffa [7]};_dc .BiLinear .Transform (_ecg ._cfdc ,_dcc ,_cgfa ,_cdg ,_dc .Over ,_ffde );_ebef .Dot .X +=_gbcb ;_bcea =_fdd ;};};func _afbg (_cbcg ,_cdgd _d .Color ,_egbe float64 )_d .Color {_bdf ,_edfc ,_gfgb ,_ccdd :=_cbcg .RGBA ();
_ceag ,_geec ,_ffdb ,_bead :=_cdgd .RGBA ();return _d .RGBA {_gfa (_bdf ,_ceag ,_egbe ),_gfa (_edfc ,_geec ,_egbe ),_gfa (_gfgb ,_ffdb ,_egbe ),_gfa (_ccdd ,_bead ,_egbe )};};func (_adfc *Context )DrawString (s string ,face _ce .Face ,x ,y float64 ){_adfc .DrawStringAnchored (s ,face ,x ,y ,0,0);
};func (_afg *Context )SetRGBA255 (r ,g ,b ,a int ){_afg ._bcc =_d .NRGBA {uint8 (r ),uint8 (g ),uint8 (b ),uint8 (a )};_afg .setFillAndStrokeColor (_afg ._bcc );};func (_gde *Context )MoveTo (x ,y float64 ){if _gde ._gacd {_gde ._geg .Add1 (_cfdcd (_gde ._gc ));
};x ,y =_gde .Transform (x ,y );_adac :=_ga .NewPoint (x ,y );_dgb :=_cfdcd (_adac );_gde ._aeeb .Start (_dgb );_gde ._geg .Start (_dgb );_gde ._gc =_adac ;_gde ._egc =_adac ;_gde ._gacd =true ;};func _aadf (_babba _a .Image )*_a .RGBA {_gda :=_babba .Bounds ();
_cbdg :=_a .NewRGBA (_gda );_be .Draw (_cbdg ,_gda ,_babba ,_gda .Min ,_be .Src );return _cbdg ;};func NewContextForRGBA (im *_a .RGBA )*Context {_fff :=im .Bounds ().Size ().X ;_ege :=im .Bounds ().Size ().Y ;return &Context {_gff :_fff ,_cbc :_ege ,_edf :_fe .NewRasterizer (_fff ,_ege ),_cfdc :im ,_bcc :_d .Transparent ,_adb :_df ,_fad :_bgd ,_bfbd :1,_agf :_ead .FillRuleWinding ,_bgb :_ga .IdentityMatrix (),_aec :_ead .NewTextState ()};
};type stop struct{_acg float64 ;_bbee _d .Color ;};func (_gdcf *Context )SetRGB (r ,g ,b float64 ){_gdcf .SetRGBA (r ,g ,b ,1)};func (_efg *Context )Push (){_ecf :=*_efg ;_efg ._eb =append (_efg ._eb ,&_ecf )};func (_dfc *Context )Height ()int {return _dfc ._cbc };
func (_ebb *Context )SetStrokeStyle (pattern _ead .Pattern ){_ebb ._fad =pattern };func (_dfb *Context )SetFillRule (fillRule _ead .FillRule ){_dfb ._agf =fillRule };func _ecca (_ccadc float64 )_gg .Int26_6 {return _gg .Int26_6 (_ccadc *64)};var (_df =_dgcf (_d .White );
_bgd =_dgcf (_d .Black ););func _eaed (_ggbd string )(_edee ,_dbdd ,_gegf ,_bafa int ){_ggbd =_g .TrimPrefix (_ggbd ,"\u0023");_bafa =255;if len (_ggbd )==3{_feba :="\u00251\u0078\u0025\u0031\u0078\u0025\u0031x";_f .Sscanf (_ggbd ,_feba ,&_edee ,&_dbdd ,&_gegf );
_edee |=_edee <<4;_dbdd |=_dbdd <<4;_gegf |=_gegf <<4;};if len (_ggbd )==6{_ddbe :="\u0025\u0030\u0032x\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";_f .Sscanf (_ggbd ,_ddbe ,&_edee ,&_dbdd ,&_gegf );};if len (_ggbd )==8{_cgd :="\u0025\u00302\u0078\u0025\u00302\u0078\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";
_f .Sscanf (_ggbd ,_cgd ,&_edee ,&_dbdd ,&_gegf ,&_bafa );};return ;};func (_caa *Context )SetDash (dashes ...float64 ){_caa ._fea =dashes };func _dae (_fdbd _gg .Int26_6 )float64 {const _bgbg ,_cgdb =6,1<<6-1;if _fdbd >=0{return float64 (_fdbd >>_bgbg )+float64 (_fdbd &_cgdb )/64;
};_fdbd =-_fdbd ;if _fdbd >=0{return -(float64 (_fdbd >>_bgbg )+float64 (_fdbd &_cgdb )/64);};return 0;};func (_fddc *Context )Identity (){_fddc ._bgb =_ga .IdentityMatrix ()};func _adacb (_bbb float64 ,_ddc stops )_d .Color {if _bbb <=0.0||len (_ddc )==1{return _ddc [0]._bbee ;
};_bd :=_ddc [len (_ddc )-1];if _bbb >=_bd ._acg {return _bd ._bbee ;};for _fbc ,_bdc :=range _ddc [1:]{if _bbb < _bdc ._acg {_bbb =(_bbb -_ddc [_fbc ]._acg )/(_bdc ._acg -_ddc [_fbc ]._acg );return _afbg (_ddc [_fbc ]._bbee ,_bdc ._bbee ,_bbb );};};return _bd ._bbee ;
};func (_acdf *Context )Matrix ()_ga .Matrix {return _acdf ._bgb };func (_cdc *Context )Clip (){_cdc .ClipPreserve ();_cdc .ClearPath ()};type circle struct{_egeg ,_aage ,_gdfd float64 };func (_gbc *Context )DrawPoint (x ,y ,r float64 ){_gbc .Push ();_debe ,_fbb :=_gbc .Transform (x ,y );
_gbc .Identity ();_gbc .DrawCircle (_debe ,_fbb ,r );_gbc .Pop ();};func (_eagb *Context )ClosePath (){if _eagb ._gacd {_bab :=_cfdcd (_eagb ._gc );_eagb ._aeeb .Add1 (_bab );_eagb ._geg .Add1 (_bab );_eagb ._egc =_eagb ._gc ;};};func (_dfg *Context )Rotate (angle float64 ){_dfg ._bgb =_dfg ._bgb .Rotate (angle )};
type solidPattern struct{_feb _d .Color };