//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package imagerender ;import (_ea "errors";_fd "fmt";_dca "github.com/unidoc/freetype/raster";_dc "github.com/unidoc/unipdf/v3/common";_ef "github.com/unidoc/unipdf/v3/internal/transform";_gb "github.com/unidoc/unipdf/v3/render/internal/context";_b "golang.org/x/image/draw";
_a "golang.org/x/image/font";_bf "golang.org/x/image/math/f64";_ba "golang.org/x/image/math/fixed";_fb "image";_e "image/color";_d "image/draw";_fc "math";_ge "sort";_g "strings";);func (_ggd *Context )DrawCircle (x ,y ,r float64 ){_ggd .NewSubPath ();
_ggd .DrawEllipticalArc (x ,y ,r ,r ,0,2*_fc .Pi );_ggd .ClosePath ();};func (_abcc *Context )DrawImageAnchored (im _fb .Image ,x ,y int ,ax ,ay float64 ){_befg :=im .Bounds ().Size ();x -=int (ax *float64 (_befg .X ));y -=int (ay *float64 (_befg .Y ));
_fgf :=_b .BiLinear ;_ege :=_abcc ._eec .Clone ().Translate (float64 (x ),float64 (y ));_gbdb :=_bf .Aff3 {_ege [0],_ege [3],_ege [6],_ege [1],_ege [4],_ege [7]};if _abcc ._cd ==nil {_fgf .Transform (_abcc ._ec ,_gbdb ,im ,im .Bounds (),_b .Over ,nil );
}else {_fgf .Transform (_abcc ._ec ,_gbdb ,im ,im .Bounds (),_b .Over ,&_b .Options {DstMask :_abcc ._cd ,DstMaskP :_fb .Point {}});};};func (_aeb *Context )SetDashOffset (offset float64 ){_aeb ._dee =offset };func _bbfb (_eccg float64 ,_aaa stops )_e .Color {if _eccg <=0.0||len (_aaa )==1{return _aaa [0]._fcbd ;
};_aad :=_aaa [len (_aaa )-1];if _eccg >=_aad ._cce {return _aad ._fcbd ;};for _cfd ,_fbfg :=range _aaa [1:]{if _eccg < _fbfg ._cce {_eccg =(_eccg -_aaa [_cfd ]._cce )/(_fbfg ._cce -_aaa [_cfd ]._cce );return _dcec (_aaa [_cfd ]._fcbd ,_fbfg ._fcbd ,_eccg );
};};return _aad ._fcbd ;};func (_fgd *Context )SetHexColor (x string ){_adc ,_df ,_fgb ,_fff :=_fdde (x );_fgd .SetRGBA255 (_adc ,_df ,_fgb ,_fff );};func (_abe *Context )AsMask ()*_fb .Alpha {_edb :=_fb .NewAlpha (_abe ._ec .Bounds ());_b .Draw (_edb ,_abe ._ec .Bounds (),_abe ._ec ,_fb .Point {},_b .Src );
return _edb ;};func (_bcea *Context )FillPattern ()_gb .Pattern {return _bcea ._geg };func _ccd (_cffa _fb .Image )*_fb .RGBA {_acga :=_cffa .Bounds ();_cddf :=_fb .NewRGBA (_acga );_d .Draw (_cddf ,_acga ,_cffa ,_acga .Min ,_d .Src );return _cddf ;};func _be (_de ,_c ,_ad ,_eg ,_ac ,_ace ,_da float64 )(_bc ,_ag float64 ){_fbc :=1-_da ;
_cg :=_fbc *_fbc ;_gf :=2*_fbc *_da ;_gc :=_da *_da ;_bc =_cg *_de +_gf *_ad +_gc *_ac ;_ag =_cg *_c +_gf *_eg +_gc *_ace ;return ;};func (_dea *Context )DrawRoundedRectangle (x ,y ,w ,h ,r float64 ){_gdf ,_becf ,_cdg ,_bge :=x ,x +r ,x +w -r ,x +w ;_cfa ,_fbd ,_ced ,_bgb :=y ,y +r ,y +h -r ,y +h ;
_dea .NewSubPath ();_dea .MoveTo (_becf ,_cfa );_dea .LineTo (_cdg ,_cfa );_dea .DrawArc (_cdg ,_fbd ,r ,_bcca (270),_bcca (360));_dea .LineTo (_bge ,_ced );_dea .DrawArc (_cdg ,_ced ,r ,_bcca (0),_bcca (90));_dea .LineTo (_becf ,_bgb );_dea .DrawArc (_becf ,_ced ,r ,_bcca (90),_bcca (180));
_dea .LineTo (_gdf ,_fbd );_dea .DrawArc (_becf ,_fbd ,r ,_bcca (180),_bcca (270));_dea .ClosePath ();};func (_afed *Context )Rotate (angle float64 ){_afed ._eec =_afed ._eec .Rotate (angle )};func NewContextForRGBA (im *_fb .RGBA )*Context {_ffe :=im .Bounds ().Size ().X ;
_aec :=im .Bounds ().Size ().Y ;return &Context {_caee :_ffe ,_bgf :_aec ,_adb :_dca .NewRasterizer (_ffe ,_aec ),_ec :im ,_bd :_e .Transparent ,_geg :_bbf ,_eb :_bcec ,_bde :1,_bdef :_gb .FillRuleWinding ,_eec :_ef .IdentityMatrix (),_dg :_gb .NewTextState ()};
};func (_bcg *Context )SetRGB (r ,g ,b float64 ){_bcg .SetRGBA (r ,g ,b ,1)};func _bg (_db ,_ce ,_baa ,_dbf ,_ff ,_dbb ,_ab ,_af ,_cf float64 )(_ffa ,_cfe float64 ){_fg :=1-_cf ;_eaa :=_fg *_fg *_fg ;_bed :=3*_fg *_fg *_cf ;_ca :=3*_fg *_cf *_cf ;_fcd :=_cf *_cf *_cf ;
_ffa =_eaa *_db +_bed *_baa +_ca *_ff +_fcd *_ab ;_cfe =_eaa *_ce +_bed *_dbf +_ca *_dbb +_fcd *_af ;return ;};func (_acf *Context )StrokePattern ()_gb .Pattern {return _acf ._eb };func (_gac *Context )MoveTo (x ,y float64 ){if _gac ._gff {_gac ._dcb .Add1 (_aege (_gac ._faaa ));
};x ,y =_gac .Transform (x ,y );_cbg :=_ef .NewPoint (x ,y );_egc :=_aege (_cbg );_gac ._faa .Start (_egc );_gac ._dcb .Start (_egc );_gac ._faaa =_cbg ;_gac ._cga =_cbg ;_gac ._gff =true ;};func (_eedd *Context )drawRegularPolygon (_bdb int ,_abc ,_cgdg ,_ecb ,_adg float64 ){_afc :=2*_fc .Pi /float64 (_bdb );
_adg -=_fc .Pi /2;if _bdb %2==0{_adg +=_afc /2;};_eedd .NewSubPath ();for _gdc :=0;_gdc < _bdb ;_gdc ++{_efg :=_adg +_afc *float64 (_gdc );_eedd .LineTo (_abc +_ecb *_fc .Cos (_efg ),_cgdg +_ecb *_fc .Sin (_efg ));};_eedd .ClosePath ();};func (_abb *Context )Width ()int {return _abb ._caee };
func (_feg *Context )Scale (x ,y float64 ){_feg ._eec =_feg ._eec .Scale (x ,y )};func _gba (_bbec _dca .Path ,_bbgg []float64 ,_eeb float64 )_dca .Path {return _adcb (_gbdd (_ddff (_bbec ),_bbgg ,_eeb ));};func _ae (_dae ,_fcb ,_dce ,_bce ,_ccg ,_dcf ,_dcef ,_ee float64 )[]_ef .Point {_efd :=(_fc .Hypot (_dce -_dae ,_bce -_fcb )+_fc .Hypot (_ccg -_dce ,_dcf -_bce )+_fc .Hypot (_dcef -_ccg ,_ee -_dcf ));
_ed :=int (_efd +0.5);if _ed < 4{_ed =4;};_cae :=float64 (_ed )-1;_bfe :=make ([]_ef .Point ,_ed );for _ccf :=0;_ccf < _ed ;_ccf ++{_cfc :=float64 (_ccf )/_cae ;_ggf ,_fa :=_bg (_dae ,_fcb ,_dce ,_bce ,_ccg ,_dcf ,_dcef ,_ee ,_cfc );_bfe [_ccf ]=_ef .NewPoint (_ggf ,_fa );
};return _bfe ;};const (_acec repeatOp =iota ;_eee ;_gdbc ;_adf ;);func (_dga *Context )joiner ()_dca .Joiner {switch _dga ._fcf {case _gb .LineJoinBevel :return _dca .BevelJoiner ;case _gb .LineJoinRound :return _dca .RoundJoiner ;};return nil ;};func (_dgde *Context )SetPixel (x ,y int ){_dgde ._ec .Set (x ,y ,_dgde ._bd )};
func _eggd (_afca _ba .Int26_6 )float64 {const _gfcb ,_cgad =6,1<<6-1;if _afca >=0{return float64 (_afca >>_gfcb )+float64 (_afca &_cgad )/64;};_afca =-_afca ;if _afca >=0{return -(float64 (_afca >>_gfcb )+float64 (_afca &_cgad )/64);};return 0;};type Context struct{_caee int ;
_bgf int ;_adb *_dca .Rasterizer ;_ec *_fb .RGBA ;_cd *_fb .Alpha ;_bd _e .Color ;_geg _gb .Pattern ;_eb _gb .Pattern ;_faa _dca .Path ;_dcb _dca .Path ;_faaa _ef .Point ;_cga _ef .Point ;_gff bool ;_cfg []float64 ;_dee float64 ;_bde float64 ;_fba _gb .LineCap ;
_fcf _gb .LineJoin ;_bdef _gb .FillRule ;_eec _ef .Matrix ;_dg _gb .TextState ;_afg []*Context ;};type radialGradient struct{_ecd ,_bdd ,_dad circle ;_fec ,_ggcd float64 ;_gbc float64 ;_fgec stops ;};func (_aac *Context )ClosePath (){if _aac ._gff {_gd :=_aege (_aac ._faaa );
_aac ._faa .Add1 (_gd );_aac ._dcb .Add1 (_gd );_aac ._cga =_aac ._faaa ;};};func (_ffb *Context )SetStrokeStyle (pattern _gb .Pattern ){_ffb ._eb =pattern };type patternPainter struct{_eaac *_fb .RGBA ;_dbef *_fb .Alpha ;_efc _gb .Pattern ;};func (_ead *Context )DrawImage (im _fb .Image ,x ,y int ){_ead .DrawImageAnchored (im ,x ,y ,0,0)};
func _fab (_edfe ,_dfc uint32 ,_gfad float64 )uint8 {return uint8 (int32 (float64 (_edfe )*(1.0-_gfad )+float64 (_dfc )*_gfad )>>8);};func (_ddc *Context )Shear (x ,y float64 ){_ddc ._eec .Shear (x ,y )};func (_afgf *Context )Fill (){_afgf .FillPreserve ();
_afgf .ClearPath ()};func _dgc (_ceb ,_cedg ,_dffe ,_beg float64 )_gb .Gradient {_aeab :=&linearGradient {_cgcd :_ceb ,_fbff :_cedg ,_dec :_dffe ,_cgde :_beg };return _aeab ;};func (_bdgc *Context )DrawEllipse (x ,y ,rx ,ry float64 ){_bdgc .NewSubPath ();
_bdgc .DrawEllipticalArc (x ,y ,rx ,ry ,0,2*_fc .Pi );_bdgc .ClosePath ();};func (_fdd *Context )SetRGB255 (r ,g ,b int ){_fdd .SetRGBA255 (r ,g ,b ,255)};func (_cee *Context )DrawLine (x1 ,y1 ,x2 ,y2 float64 ){_cee .MoveTo (x1 ,y1 );_cee .LineTo (x2 ,y2 )};
func (_dgf *Context )ScaleAbout (sx ,sy ,x ,y float64 ){_dgf .Translate (x ,y );_dgf .Scale (sx ,sy );_dgf .Translate (-x ,-y );};func _ddff (_gacda _dca .Path )[][]_ef .Point {var _fde [][]_ef .Point ;var _deab []_ef .Point ;var _bfc ,_cbga float64 ;for _cbgb :=0;
_cbgb < len (_gacda );{switch _gacda [_cbgb ]{case 0:if len (_deab )> 0{_fde =append (_fde ,_deab );_deab =nil ;};_faab :=_eggd (_gacda [_cbgb +1]);_fdfb :=_eggd (_gacda [_cbgb +2]);_deab =append (_deab ,_ef .NewPoint (_faab ,_fdfb ));_bfc ,_cbga =_faab ,_fdfb ;
_cbgb +=4;case 1:_faf :=_eggd (_gacda [_cbgb +1]);_dba :=_eggd (_gacda [_cbgb +2]);_deab =append (_deab ,_ef .NewPoint (_faf ,_dba ));_bfc ,_cbga =_faf ,_dba ;_cbgb +=4;case 2:_aaab :=_eggd (_gacda [_cbgb +1]);_cde :=_eggd (_gacda [_cbgb +2]);_edg :=_eggd (_gacda [_cbgb +3]);
_cgdd :=_eggd (_gacda [_cbgb +4]);_dfb :=_eab (_bfc ,_cbga ,_aaab ,_cde ,_edg ,_cgdd );_deab =append (_deab ,_dfb ...);_bfc ,_cbga =_edg ,_cgdd ;_cbgb +=6;case 3:_fef :=_eggd (_gacda [_cbgb +1]);_ebcd :=_eggd (_gacda [_cbgb +2]);_bded :=_eggd (_gacda [_cbgb +3]);
_daeg :=_eggd (_gacda [_cbgb +4]);_fede :=_eggd (_gacda [_cbgb +5]);_dgeb :=_eggd (_gacda [_cbgb +6]);_cag :=_ae (_bfc ,_cbga ,_fef ,_ebcd ,_bded ,_daeg ,_fede ,_dgeb );_deab =append (_deab ,_cag ...);_bfc ,_cbga =_fede ,_dgeb ;_cbgb +=8;default:_dc .Log .Debug ("\u0057\u0041\u0052\u004e: \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0070\u0061\u0074\u0068\u003a\u0020%\u0076",_gacda );
return _fde ;};};if len (_deab )> 0{_fde =append (_fde ,_deab );};return _fde ;};func _fdgf (_cba ,_egag ,_efgc ,_abcb ,_dcg ,_gec float64 )float64 {return _cba *_abcb +_egag *_dcg +_efgc *_gec ;};func (_fca *Context )SetFillStyle (pattern _gb .Pattern ){if _fdfg ,_fge :=pattern .(*solidPattern );
_fge {_fca ._bd =_fdfg ._gde ;};_fca ._geg =pattern ;};func (_aba *Context )SetLineWidth (lineWidth float64 ){_aba ._bde =lineWidth };func _bcca (_aacb float64 )float64 {return _aacb *_fc .Pi /180};type stop struct{_cce float64 ;_fcbd _e .Color ;};func (_gaa *Context )Clip (){_gaa .ClipPreserve ();
_gaa .ClearPath ()};func _aege (_acgaa _ef .Point )_ba .Point26_6 {return _ba .Point26_6 {X :_cabc (_acgaa .X ),Y :_cabc (_acgaa .Y )};};func (_ega stops )Swap (i ,j int ){_ega [i ],_ega [j ]=_ega [j ],_ega [i ]};func (_fac *Context )TextState ()*_gb .TextState {return &_fac ._dg };
func (_ggc *Context )Height ()int {return _ggc ._bgf };func (_fgbd stops )Less (i ,j int )bool {return _fgbd [i ]._cce < _fgbd [j ]._cce };func (_fddb *Context )ResetClip (){_fddb ._cd =nil };func (_cbc *Context )SetDash (dashes ...float64 ){_cbc ._cfg =dashes };
func (_abbf *Context )FillPreserve (){var _ebd _dca .Painter ;if _abbf ._cd ==nil {if _bdcd ,_gdb :=_abbf ._geg .(*solidPattern );_gdb {_eed :=_dca .NewRGBAPainter (_abbf ._ec );_eed .SetColor (_bdcd ._gde );_ebd =_eed ;};};if _ebd ==nil {_ebd =_caaf (_abbf ._ec ,_abbf ._cd ,_abbf ._geg );
};_abbf .fill (_ebd );};func (_ffgd *surfacePattern )ColorAt (x ,y int )_e .Color {_afge :=_ffgd ._dceg .Bounds ();switch _ffgd ._cfef {case _eee :if y >=_afge .Dy (){return _e .Transparent ;};case _gdbc :if x >=_afge .Dx (){return _e .Transparent ;};case _adf :if x >=_afge .Dx ()||y >=_afge .Dy (){return _e .Transparent ;
};};x =x %_afge .Dx ()+_afge .Min .X ;y =y %_afge .Dy ()+_afge .Min .Y ;return _ffgd ._dceg .At (x ,y );};func (_fbe *linearGradient )AddColorStop (offset float64 ,color _e .Color ){_fbe ._fbb =append (_fbe ._fbb ,stop {_cce :offset ,_fcbd :color });_ge .Sort (_fbe ._fbb );
};type surfacePattern struct{_dceg _fb .Image ;_cfef repeatOp ;};func (_efac *radialGradient )ColorAt (x ,y int )_e .Color {if len (_efac ._fgec )==0{return _e .Transparent ;};_cgag ,_daa :=float64 (x )+0.5-_efac ._ecd ._afgfa ,float64 (y )+0.5-_efac ._ecd ._ccae ;
_edc :=_fdgf (_cgag ,_daa ,_efac ._ecd ._baca ,_efac ._dad ._afgfa ,_efac ._dad ._ccae ,_efac ._dad ._baca );_eea :=_fdgf (_cgag ,_daa ,-_efac ._ecd ._baca ,_cgag ,_daa ,_efac ._ecd ._baca );if _efac ._fec ==0{if _edc ==0{return _e .Transparent ;};_gfcd :=0.5*_eea /_edc ;
if _gfcd *_efac ._dad ._baca >=_efac ._gbc {return _bbfb (_gfcd ,_efac ._fgec );};return _e .Transparent ;};_gab :=_fdgf (_edc ,_efac ._fec ,0,_edc ,-_eea ,0);if _gab >=0{_ebc :=_fc .Sqrt (_gab );_acfe :=(_edc +_ebc )*_efac ._ggcd ;_aeg :=(_edc -_ebc )*_efac ._ggcd ;
if _acfe *_efac ._dad ._baca >=_efac ._gbc {return _bbfb (_acfe ,_efac ._fgec );}else if _aeg *_efac ._dad ._baca >=_efac ._gbc {return _bbfb (_aeg ,_efac ._fgec );};};return _e .Transparent ;};func (_debc *Context )Translate (x ,y float64 ){_debc ._eec =_debc ._eec .Translate (x ,y )};
func (_ded *Context )drawString (_cgfcd string ,_gacg _a .Face ,_ffg ,_bac float64 ){_aed :=&_a .Drawer {Src :_fb .NewUniform (_ded ._bd ),Face :_gacg ,Dot :_aege (_ef .NewPoint (_ffg ,_bac ))};_cgab :=rune (-1);for _ ,_geggb :=range _cgfcd {if _cgab >=0{_aed .Dot .X +=_aed .Face .Kern (_cgab ,_geggb );
};_gfe ,_dbd ,_gfb ,_fdg ,_bgg :=_aed .Face .Glyph (_aed .Dot ,_geggb );if !_bgg {continue ;};_ffae :=_gfe .Sub (_gfe .Min );_cfec :=_fb .NewRGBA (_ffae );_b .DrawMask (_cfec ,_ffae ,_aed .Src ,_fb .Point {},_dbd ,_gfb ,_b .Over );var _cfeb *_b .Options ;
if _ded ._cd !=nil {_cfeb =&_b .Options {DstMask :_ded ._cd ,DstMaskP :_fb .Point {}};};_afef :=_ded ._eec .Clone ().Translate (float64 (_gfe .Min .X ),float64 (_gfe .Min .Y ));_deda :=_bf .Aff3 {_afef [0],_afef [3],_afef [6],_afef [1],_afef [4],_afef [7]};
_b .BiLinear .Transform (_ded ._ec ,_deda ,_cfec ,_ffae ,_b .Over ,_cfeb );_aed .Dot .X +=_fdg ;_cgab =_geggb ;};};func _ggdb (_bffe ,_agf ,_cbde ,_edd ,_cebd ,_bdbc float64 )_gb .Gradient {_aee :=circle {_bffe ,_agf ,_cbde };_fggb :=circle {_edd ,_cebd ,_bdbc };
_ggcdb :=circle {_edd -_bffe ,_cebd -_agf ,_bdbc -_cbde };_acabe :=_fdgf (_ggcdb ._afgfa ,_ggcdb ._ccae ,-_ggcdb ._baca ,_ggcdb ._afgfa ,_ggcdb ._ccae ,_ggcdb ._baca );var _afgd float64 ;if _acabe !=0{_afgd =1.0/_acabe ;};_bgec :=-_aee ._baca ;_dge :=&radialGradient {_ecd :_aee ,_bdd :_fggb ,_dad :_ggcdb ,_fec :_acabe ,_ggcd :_afgd ,_gbc :_bgec };
return _dge ;};type solidPattern struct{_gde _e .Color };func (_aacd *Context )Stroke (){_aacd .StrokePreserve ();_aacd .ClearPath ()};func (_aga *Context )ShearAbout (sx ,sy ,x ,y float64 ){_aga .Translate (x ,y );_aga .Shear (sx ,sy );_aga .Translate (-x ,-y );
};func (_cdb *Context )Matrix ()_ef .Matrix {return _cdb ._eec };func (_gbd *Context )DrawPoint (x ,y ,r float64 ){_gbd .Push ();_fcbc ,_eba :=_gbd .Transform (x ,y );_gbd .Identity ();_gbd .DrawCircle (_fcbc ,_eba ,r );_gbd .Pop ();};func _caaf (_egd *_fb .RGBA ,_agcg *_fb .Alpha ,_bga _gb .Pattern )*patternPainter {return &patternPainter {_egd ,_agcg ,_bga };
};func (_fda *linearGradient )ColorAt (x ,y int )_e .Color {if len (_fda ._fbb )==0{return _e .Transparent ;};_ccfb ,_face :=float64 (x ),float64 (y );_bfae ,_facg ,_bceae ,_caac :=_fda ._cgcd ,_fda ._fbff ,_fda ._dec ,_fda ._cgde ;_gedf ,_bae :=_bceae -_bfae ,_caac -_facg ;
if _bae ==0&&_gedf !=0{return _bbfb ((_ccfb -_bfae )/_gedf ,_fda ._fbb );};if _gedf ==0&&_bae !=0{return _bbfb ((_face -_facg )/_bae ,_fda ._fbb );};_egcb :=_gedf *(_ccfb -_bfae )+_bae *(_face -_facg );if _egcb < 0{return _fda ._fbb [0]._fcbd ;};_cfb :=_fc .Hypot (_gedf ,_bae );
_cca :=((_ccfb -_bfae )*-_bae +(_face -_facg )*_gedf )/(_cfb *_cfb );_fag ,_feb :=_bfae +_cca *-_bae ,_facg +_cca *_gedf ;_eda :=_fc .Hypot (_ccfb -_fag ,_face -_feb )/_cfb ;return _bbfb (_eda ,_fda ._fbb );};func (_fbdd *Context )Pop (){_bcd :=*_fbdd ;
_bcc :=_fbdd ._afg ;_gee :=_bcc [len (_bcc )-1];*_fbdd =*_gee ;_fbdd ._faa =_bcd ._faa ;_fbdd ._dcb =_bcd ._dcb ;_fbdd ._faaa =_bcd ._faaa ;_fbdd ._cga =_bcd ._cga ;_fbdd ._gff =_bcd ._gff ;};func (_bec *Context )SetColor (c _e .Color ){_bec .setFillAndStrokeColor (c )};
func (_gcb *Context )CubicTo (x1 ,y1 ,x2 ,y2 ,x3 ,y3 float64 ){if !_gcb ._gff {_gcb .MoveTo (x1 ,y1 );};_ged ,_fe :=_gcb ._cga .X ,_gcb ._cga .Y ;x1 ,y1 =_gcb .Transform (x1 ,y1 );x2 ,y2 =_gcb .Transform (x2 ,y2 );x3 ,y3 =_gcb .Transform (x3 ,y3 );_acab :=_ae (_ged ,_fe ,x1 ,y1 ,x2 ,y2 ,x3 ,y3 );
_cgfc :=_aege (_gcb ._cga );for _ ,_afd :=range _acab [1:]{_gad :=_aege (_afd );if _gad ==_cgfc {continue ;};_cgfc =_gad ;_gcb ._faa .Add1 (_gad );_gcb ._dcb .Add1 (_gad );_gcb ._cga =_afd ;};};func (_bea *Context )Identity (){_bea ._eec =_ef .IdentityMatrix ()};
func (_bdefa *Context )SetMask (mask *_fb .Alpha )error {if mask .Bounds ().Size ()!=_bdefa ._ec .Bounds ().Size (){return _ea .New ("\u006d\u0061\u0073\u006b\u0020\u0073i\u007a\u0065\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068 \u0063\u006f\u006e\u0074\u0065\u0078\u0074 \u0073\u0069\u007a\u0065");
};_bdefa ._cd =mask ;return nil ;};func (_cgd *Context )SetLineCap (lineCap _gb .LineCap ){_cgd ._fba =lineCap };type stops []stop ;type linearGradient struct{_cgcd ,_fbff ,_dec ,_cgde float64 ;_fbb stops ;};func (_bbg *Context )InvertMask (){if _bbg ._cd ==nil {_bbg ._cd =_fb .NewAlpha (_bbg ._ec .Bounds ());
}else {for _ddf ,_gcbb :=range _bbg ._cd .Pix {_bbg ._cd .Pix [_ddf ]=255-_gcbb ;};};};type repeatOp int ;func (_abac *Context )NewSubPath (){if _abac ._gff {_abac ._dcb .Add1 (_aege (_abac ._faaa ));};_abac ._gff =false ;};func NewContext (width ,height int )*Context {return NewContextForRGBA (_fb .NewRGBA (_fb .Rect (0,0,width ,height )));
};func (_dbbd stops )Len ()int {return len (_dbbd )};func (_bdc *Context )QuadraticTo (x1 ,y1 ,x2 ,y2 float64 ){if !_bdc ._gff {_bdc .MoveTo (x1 ,y1 );};x1 ,y1 =_bdc .Transform (x1 ,y1 );x2 ,y2 =_bdc .Transform (x2 ,y2 );_ggg :=_ef .NewPoint (x1 ,y1 );
_cfgf :=_ef .NewPoint (x2 ,y2 );_gacd :=_aege (_ggg );_edf :=_aege (_cfgf );_bdc ._faa .Add2 (_gacd ,_edf );_bdc ._dcb .Add2 (_gacd ,_edf );_bdc ._cga =_cfgf ;};func (_bbb *Context )SetRGBA255 (r ,g ,b ,a int ){_bbb ._bd =_e .NRGBA {uint8 (r ),uint8 (g ),uint8 (b ),uint8 (a )};
_bbb .setFillAndStrokeColor (_bbb ._bd );};func _eab (_cb ,_cgf ,_aca ,_aa ,_bb ,_cc float64 )[]_ef .Point {_gfc :=(_fc .Hypot (_aca -_cb ,_aa -_cgf )+_fc .Hypot (_bb -_aca ,_cc -_aa ));_gg :=int (_gfc +0.5);if _gg < 4{_gg =4;};_bef :=float64 (_gg )-1;
_aab :=make ([]_ef .Point ,_gg );for _gfa :=0;_gfa < _gg ;_gfa ++{_add :=float64 (_gfa )/_bef ;_deg ,_ga :=_be (_cb ,_cgf ,_aca ,_aa ,_bb ,_cc ,_add );_aab [_gfa ]=_ef .NewPoint (_deg ,_ga );};return _aab ;};func (_ecf *Context )LineWidth ()float64 {return _ecf ._bde };
func (_agb *Context )DrawStringAnchored (s string ,face _a .Face ,x ,y ,ax ,ay float64 ){_ebg ,_fbfeg :=_agb .MeasureString (s ,face );_agb .drawString (s ,face ,x -ax *_ebg ,y +ay *_fbfeg );};func _ebed (_caec _e .Color )_gb .Pattern {return &solidPattern {_gde :_caec }};
func (_afec *Context )capper ()_dca .Capper {switch _afec ._fba {case _gb .LineCapButt :return _dca .ButtCapper ;case _gb .LineCapRound :return _dca .RoundCapper ;case _gb .LineCapSquare :return _dca .SquareCapper ;};return nil ;};func (_eef *Context )Transform (x ,y float64 )(_aedb ,_dcbc float64 ){return _eef ._eec .Transform (x ,y )};
func _adcb (_gge [][]_ef .Point )_dca .Path {var _gag _dca .Path ;for _ ,_eaf :=range _gge {var _dffc _ba .Point26_6 ;for _cab ,_fcdb :=range _eaf {_cgac :=_aege (_fcdb );if _cab ==0{_gag .Start (_cgac );}else {_ccb :=_cgac .X -_dffc .X ;_bbd :=_cgac .Y -_dffc .Y ;
if _ccb < 0{_ccb =-_ccb ;};if _bbd < 0{_bbd =-_bbd ;};if _ccb +_bbd > 8{_gag .Add1 (_cgac );};};_dffc =_cgac ;};};return _gag ;};func (_bfd *Context )RotateAbout (angle ,x ,y float64 ){_bfd .Translate (x ,y );_bfd .Rotate (angle );_bfd .Translate (-x ,-y );
};func (_bff *Context )ClipPreserve (){_cgcg :=_fb .NewAlpha (_fb .Rect (0,0,_bff ._caee ,_bff ._bgf ));_dbe :=_dca .NewAlphaOverPainter (_cgcg );_bff .fill (_dbe );if _bff ._cd ==nil {_bff ._cd =_cgcg ;}else {_ada :=_fb .NewAlpha (_fb .Rect (0,0,_bff ._caee ,_bff ._bgf ));
_b .DrawMask (_ada ,_ada .Bounds (),_cgcg ,_fb .Point {},_bff ._cd ,_fb .Point {},_b .Over );_bff ._cd =_ada ;};};type circle struct{_afgfa ,_ccae ,_baca float64 };func _dgb (_gadfa _fb .Image ,_badd repeatOp )_gb .Pattern {return &surfacePattern {_dceg :_gadfa ,_cfef :_badd };
};func (_dab *Context )SetFillRGBA (r ,g ,b ,a float64 ){_afe :=_e .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_dab ._bd =_afe ;_dab ._geg =_ebed (_afe );};func (_bdee *solidPattern )ColorAt (x ,y int )_e .Color {return _bdee ._gde };
func (_ebe *Context )setFillAndStrokeColor (_cgc _e .Color ){_ebe ._bd =_cgc ;_ebe ._geg =_ebed (_cgc );_ebe ._eb =_ebed (_cgc );};func (_ebbf *Context )DrawString (s string ,face _a .Face ,x ,y float64 ){_ebbf .DrawStringAnchored (s ,face ,x ,y ,0,0);
};func (_dgd *Context )SetStrokeRGBA (r ,g ,b ,a float64 ){_egg :=_e .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_dgd ._eb =_ebed (_egg );};func (_bbe *Context )SetRGBA (r ,g ,b ,a float64 ){_bbe ._bd =_e .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};
_bbe .setFillAndStrokeColor (_bbe ._bd );};func (_gegg *Context )DrawArc (x ,y ,r ,angle1 ,angle2 float64 ){_gegg .DrawEllipticalArc (x ,y ,r ,r ,angle1 ,angle2 );};func _gbdd (_eccgf [][]_ef .Point ,_bfcd []float64 ,_aabc float64 )[][]_ef .Point {var _cfag [][]_ef .Point ;
if len (_bfcd )==0{return _eccgf ;};if len (_bfcd )==1{_bfcd =append (_bfcd ,_bfcd [0]);};for _ ,_ecba :=range _eccgf {if len (_ecba )< 2{continue ;};_beb :=_ecba [0];_agfg :=1;_fffe :=0;_gegd :=0.0;if _aabc !=0{var _acag float64 ;for _ ,_fad :=range _bfcd {_acag +=_fad ;
};_aabc =_fc .Mod (_aabc ,_acag );if _aabc < 0{_aabc +=_acag ;};for _ggfg ,_aff :=range _bfcd {_aabc -=_aff ;if _aabc < 0{_fffe =_ggfg ;_gegd =_aff +_aabc ;break ;};};};var _beca []_ef .Point ;_beca =append (_beca ,_beb );for _agfg < len (_ecba ){_fbfb :=_bfcd [_fffe ];
_bad :=_ecba [_agfg ];_dcgd :=_beb .Distance (_bad );_fged :=_fbfb -_gegd ;if _dcgd > _fged {_fcab :=_fged /_dcgd ;_efad :=_beb .Interpolate (_bad ,_fcab );_beca =append (_beca ,_efad );if _fffe %2==0&&len (_beca )> 1{_cfag =append (_cfag ,_beca );};_beca =nil ;
_beca =append (_beca ,_efad );_gegd =0;_beb =_efad ;_fffe =(_fffe +1)%len (_bfcd );}else {_beca =append (_beca ,_bad );_beb =_bad ;_gegd +=_dcgd ;_agfg ++;};};if _fffe %2==0&&len (_beca )> 1{_cfag =append (_cfag ,_beca );};};return _cfag ;};func (_cbd *Context )DrawEllipticalArc (x ,y ,rx ,ry ,angle1 ,angle2 float64 ){const _dff =16;
for _gega :=0;_gega < _dff ;_gega ++{_geb :=float64 (_gega +0)/_dff ;_fae :=float64 (_gega +1)/_dff ;_caf :=angle1 +(angle2 -angle1 )*_geb ;_caa :=angle1 +(angle2 -angle1 )*_fae ;_bdg :=x +rx *_fc .Cos (_caf );_fbfe :=y +ry *_fc .Sin (_caf );_fed :=x +rx *_fc .Cos ((_caf +_caa )/2);
_befc :=y +ry *_fc .Sin ((_caf +_caa )/2);_bab :=x +rx *_fc .Cos (_caa );_cdf :=y +ry *_fc .Sin (_caa );_fcbf :=2*_fed -_bdg /2-_bab /2;_bdgf :=2*_befc -_fbfe /2-_cdf /2;if _gega ==0{if _cbd ._gff {_cbd .LineTo (_bdg ,_fbfe );}else {_cbd .MoveTo (_bdg ,_fbfe );
};};_cbd .QuadraticTo (_fcbf ,_bdgf ,_bab ,_cdf );};};func (_eag *Context )SetFillRule (fillRule _gb .FillRule ){_eag ._bdef =fillRule };func (_gea *Context )LineTo (x ,y float64 ){if !_gea ._gff {_gea .MoveTo (x ,y );}else {x ,y =_gea .Transform (x ,y );
_bfa :=_ef .NewPoint (x ,y );_dd :=_aege (_bfa );_gea ._faa .Add1 (_dd );_gea ._dcb .Add1 (_dd );_gea ._cga =_bfa ;};};func (_ecfg *Context )DrawRectangle (x ,y ,w ,h float64 ){_ecfg .NewSubPath ();_ecfg .MoveTo (x ,y );_ecfg .LineTo (x +w ,y );_ecfg .LineTo (x +w ,y +h );
_ecfg .LineTo (x ,y +h );_ecfg .ClosePath ();};func (_aea *Context )StrokePreserve (){var _gace _dca .Painter ;if _aea ._cd ==nil {if _ceg ,_efe :=_aea ._eb .(*solidPattern );_efe {_fbf :=_dca .NewRGBAPainter (_aea ._ec );_fbf .SetColor (_ceg ._gde );_gace =_fbf ;
};};if _gace ==nil {_gace =_caaf (_aea ._ec ,_aea ._cd ,_aea ._eb );};_aea .stroke (_gace );};func NewContextForImage (im _fb .Image )*Context {return NewContextForRGBA (_ccd (im ))};func (_fbcg *Context )ClearPath (){_fbcg ._faa .Clear ();_fbcg ._dcb .Clear ();
_fbcg ._gff =false };func _cabc (_cad float64 )_ba .Int26_6 {return _ba .Int26_6 (_cad *64)};func (_ebgc *Context )MeasureString (s string ,face _a .Face )(_acg ,_fgfd float64 ){_fgdf :=&_a .Drawer {Face :face };_cdd :=_fgdf .MeasureString (s );return float64 (_cdd >>6),_ebgc ._dg .Tf .Size ;
};func (_aced *patternPainter )Paint (ss []_dca .Span ,done bool ){_ebcf :=_aced ._eaac .Bounds ();for _ ,_fcfb :=range ss {if _fcfb .Y < _ebcf .Min .Y {continue ;};if _fcfb .Y >=_ebcf .Max .Y {return ;};if _fcfb .X0 < _ebcf .Min .X {_fcfb .X0 =_ebcf .Min .X ;
};if _fcfb .X1 > _ebcf .Max .X {_fcfb .X1 =_ebcf .Max .X ;};if _fcfb .X0 >=_fcfb .X1 {continue ;};const _bcdc =1<<16-1;_gegc :=_fcfb .Y -_aced ._eaac .Rect .Min .Y ;_aacg :=_fcfb .X0 -_aced ._eaac .Rect .Min .X ;_dgee :=(_fcfb .Y -_aced ._eaac .Rect .Min .Y )*_aced ._eaac .Stride +(_fcfb .X0 -_aced ._eaac .Rect .Min .X )*4;
_ccc :=_dgee +(_fcfb .X1 -_fcfb .X0 )*4;for _aecd ,_eca :=_dgee ,_aacg ;_aecd < _ccc ;_aecd ,_eca =_aecd +4,_eca +1{_bee :=_fcfb .Alpha ;if _aced ._dbef !=nil {_bee =_bee *uint32 (_aced ._dbef .AlphaAt (_eca ,_gegc ).A )/255;if _bee ==0{continue ;};};_gae :=_aced ._efc .ColorAt (_eca ,_gegc );
_edde ,_efba ,_dbfa ,_cceb :=_gae .RGBA ();_eac :=uint32 (_aced ._eaac .Pix [_aecd +0]);_acef :=uint32 (_aced ._eaac .Pix [_aecd +1]);_gfag :=uint32 (_aced ._eaac .Pix [_aecd +2]);_cac :=uint32 (_aced ._eaac .Pix [_aecd +3]);_cege :=(_bcdc -(_cceb *_bee /_bcdc ))*0x101;
_aced ._eaac .Pix [_aecd +0]=uint8 ((_eac *_cege +_edde *_bee )/_bcdc >>8);_aced ._eaac .Pix [_aecd +1]=uint8 ((_acef *_cege +_efba *_bee )/_bcdc >>8);_aced ._eaac .Pix [_aecd +2]=uint8 ((_gfag *_cege +_dbfa *_bee )/_bcdc >>8);_aced ._eaac .Pix [_aecd +3]=uint8 ((_cac *_cege +_cceb *_bee )/_bcdc >>8);
};};};func (_eggf *Context )Push (){_bfdc :=*_eggf ;_eggf ._afg =append (_eggf ._afg ,&_bfdc )};func (_fce *Context )Clear (){_edfg :=_fb .NewUniform (_fce ._bd );_b .Draw (_fce ._ec ,_fce ._ec .Bounds (),_edfg ,_fb .Point {},_b .Src );};func (_fgg *Context )Image ()_fb .Image {return _fgg ._ec };
func _dcec (_efb ,_aegc _e .Color ,_cff float64 )_e .Color {_ade ,_agg ,_cdge ,_befe :=_efb .RGBA ();_bdda ,_dgac ,_bccb ,_agc :=_aegc .RGBA ();return _e .RGBA {_fab (_ade ,_bdda ,_cff ),_fab (_agg ,_dgac ,_cff ),_fab (_cdge ,_bccb ,_cff ),_fab (_befe ,_agc ,_cff )};
};func (_deb *Context )stroke (_bdcc _dca .Painter ){_ecc :=_deb ._faa ;if len (_deb ._cfg )> 0{_ecc =_gba (_ecc ,_deb ._cfg ,_deb ._dee );}else {_ecc =_adcb (_ddff (_ecc ));};_ffbf :=_deb ._adb ;_ffbf .UseNonZeroWinding =true ;_ffbf .Clear ();_cge :=(_deb ._eec .ScalingFactorX ()+_deb ._eec .ScalingFactorY ())/2;
_ffbf .AddStroke (_ecc ,_cabc (_deb ._bde *_cge ),_deb .capper (),_deb .joiner ());_ffbf .Rasterize (_bdcc );};func (_ebbd *radialGradient )AddColorStop (offset float64 ,color _e .Color ){_ebbd ._fgec =append (_ebbd ._fgec ,stop {_cce :offset ,_fcbd :color });
_ge .Sort (_ebbd ._fgec );};func (_dac *Context )fill (_dbbe _dca .Painter ){_gadf :=_dac ._dcb ;if _dac ._gff {_gadf =make (_dca .Path ,len (_dac ._dcb ));copy (_gadf ,_dac ._dcb );_gadf .Add1 (_aege (_dac ._faaa ));};_efa :=_dac ._adb ;_efa .UseNonZeroWinding =_dac ._bdef ==_gb .FillRuleWinding ;
_efa .Clear ();_efa .AddPath (_gadf );_efa .Rasterize (_dbbe );};func (_dcc *Context )SetMatrix (m _ef .Matrix ){_dcc ._eec =m };var (_bbf =_ebed (_e .White );_bcec =_ebed (_e .Black ););func (_fdf *Context )SetLineJoin (lineJoin _gb .LineJoin ){_fdf ._fcf =lineJoin };
func _fdde (_eaag string )(_gdbf ,_decc ,_gafd ,_daac int ){_eaag =_g .TrimPrefix (_eaag ,"\u0023");_daac =255;if len (_eaag )==3{_eabc :="\u00251\u0078\u0025\u0031\u0078\u0025\u0031x";_fd .Sscanf (_eaag ,_eabc ,&_gdbf ,&_decc ,&_gafd );_gdbf |=_gdbf <<4;
_decc |=_decc <<4;_gafd |=_gafd <<4;};if len (_eaag )==6{_cbe :="\u0025\u0030\u0032x\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";_fd .Sscanf (_eaag ,_cbe ,&_gdbf ,&_decc ,&_gafd );};if len (_eaag )==8{_eeaf :="\u0025\u00302\u0078\u0025\u00302\u0078\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";
_fd .Sscanf (_eaag ,_eeaf ,&_gdbf ,&_decc ,&_gafd ,&_daac );};return ;};