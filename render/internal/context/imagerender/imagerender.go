//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package imagerender ;import (_g "errors";_d "fmt";_eb "github.com/golang/freetype/raster";_e "github.com/unidoc/unipdf/v3/common";_ga "github.com/unidoc/unipdf/v3/internal/transform";_be "github.com/unidoc/unipdf/v3/render/internal/context";_ag "golang.org/x/image/draw";_cc "golang.org/x/image/font";_gd "golang.org/x/image/math/f64";_ec "golang.org/x/image/math/fixed";_cb "image";_b "image/color";_df "image/draw";_fa "math";_a "sort";_c "strings";);func _ffag (_geb _eb .Path )[][]_ga .Point {var _cbafb [][]_ga .Point ;var _gdde []_ga .Point ;var _cag ,_aea float64 ;for _dbf :=0;_dbf < len (_geb );{switch _geb [_dbf ]{case 0:if len (_gdde )> 0{_cbafb =append (_cbafb ,_gdde );_gdde =nil ;};_gabd :=_efec (_geb [_dbf +1]);_gbgc :=_efec (_geb [_dbf +2]);_gdde =append (_gdde ,_ga .NewPoint (_gabd ,_gbgc ));_cag ,_aea =_gabd ,_gbgc ;_dbf +=4;case 1:_aabg :=_efec (_geb [_dbf +1]);_agff :=_efec (_geb [_dbf +2]);_gdde =append (_gdde ,_ga .NewPoint (_aabg ,_agff ));_cag ,_aea =_aabg ,_agff ;_dbf +=4;case 2:_eded :=_efec (_geb [_dbf +1]);_cad :=_efec (_geb [_dbf +2]);_cfaf :=_efec (_geb [_dbf +3]);_bedf :=_efec (_geb [_dbf +4]);_aege :=_dg (_cag ,_aea ,_eded ,_cad ,_cfaf ,_bedf );_gdde =append (_gdde ,_aege ...);_cag ,_aea =_cfaf ,_bedf ;_dbf +=6;case 3:_gbd :=_efec (_geb [_dbf +1]);_bfaa :=_efec (_geb [_dbf +2]);_gaff :=_efec (_geb [_dbf +3]);_gbcc :=_efec (_geb [_dbf +4]);_aef :=_efec (_geb [_dbf +5]);_eae :=_efec (_geb [_dbf +6]);_edd :=_dcf (_cag ,_aea ,_gbd ,_bfaa ,_gaff ,_gbcc ,_aef ,_eae );_gdde =append (_gdde ,_edd ...);_cag ,_aea =_aef ,_eae ;_dbf +=8;default:_e .Log .Debug ("\u0057\u0041\u0052\u004e: \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0070\u0061\u0074\u0068\u003a\u0020%\u0076",_geb );return _cbafb ;};};if len (_gdde )> 0{_cbafb =append (_cbafb ,_gdde );};return _cbafb ;};func (_feb *Context )SetMatrix (m _ga .Matrix ){_feb ._beb =m };func (_dga *Context )SetRGBA (r ,g ,b ,a float64 ){_dga ._add =_b .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_dga .setFillAndStrokeColor (_dga ._add );};type linearGradient struct{_dbac ,_egdc ,_cdc ,_gbeb float64 ;_adbg stops ;};const (_aebfg repeatOp =iota ;_egdb ;_cgf ;_gbag ;);func (_feg *Context )DrawLine (x1 ,y1 ,x2 ,y2 float64 ){_feg .MoveTo (x1 ,y1 );_feg .LineTo (x2 ,y2 )};func _ccedc (_ade _b .Color )_be .Pattern {return &solidPattern {_eaea :_ade }};func (_gcc *Context )DrawString (s string ,x ,y float64 ){_gcc .DrawStringAnchored (s ,x ,y ,0,0)};func (_db *Context )NewSubPath (){if _db ._dfb {_db ._bb .Add1 (_ebc (_db ._bf ));};_db ._dfb =false ;};func (_beg *Context )Clip (){_beg .ClipPreserve ();_beg .ClearPath ()};func _fcbf (_bcgb _eb .Path ,_gdac []float64 ,_ffcg float64 )_eb .Path {return _eac (_cbbf (_ffag (_bcgb ),_gdac ,_ffcg ));};func (_ded *Context )AsMask ()*_cb .Alpha {_aab :=_cb .NewAlpha (_ded ._gae .Bounds ());_ag .Draw (_aab ,_ded ._gae .Bounds (),_ded ._gae ,_cb .Point {},_ag .Src );return _aab ;};func (_ccb *Context )LineTo (x ,y float64 ){if !_ccb ._dfb {_ccb .MoveTo (x ,y );}else {x ,y =_ccb .Transform (x ,y );_ebbb :=_ga .NewPoint (x ,y );_gbc :=_ebc (_ebbb );_ccb ._fag .Add1 (_gbc );_ccb ._bb .Add1 (_gbc );_ccb ._cba =_ebbb ;};};func (_abf *Context )SetFillStyle (pattern _be .Pattern ){if _bdd ,_bec :=pattern .(*solidPattern );_bec {_abf ._add =_bdd ._eaea ;};_abf ._gaed =pattern ;};func (_bdcf *Context )DrawImageAnchored (im _cb .Image ,x ,y int ,ax ,ay float64 ){_bba :=im .Bounds ().Size ();x -=int (ax *float64 (_bba .X ));y -=int (ay *float64 (_bba .Y ));_eag :=_ag .BiLinear ;_fea :=_bdcf ._beb .Clone ();_fea .Translate (float64 (x ),float64 (y ));_caa :=_gd .Aff3 {_fea [0],_fea [3],_fea [6],_fea [1],_fea [4],_fea [7]};if _bdcf ._cac ==nil {_eag .Transform (_bdcf ._gae ,_caa ,im ,im .Bounds (),_ag .Over ,nil );}else {_eag .Transform (_bdcf ._gae ,_caa ,im ,im .Bounds (),_ag .Over ,&_ag .Options {DstMask :_bdcf ._cac ,DstMaskP :_cb .Point {}});};};func _fbe (_dddg ,_eebd _b .Color ,_bff float64 )_b .Color {_bcdb ,_cbb ,_egdd ,_dce :=_dddg .RGBA ();_bed ,_gfb ,_fgg ,_gbg :=_eebd .RGBA ();return _b .RGBA {_dad (_bcdb ,_bed ,_bff ),_dad (_cbb ,_gfb ,_bff ),_dad (_egdd ,_fgg ,_bff ),_dad (_dce ,_gbg ,_bff )};};func _efec (_dbga _ec .Int26_6 )float64 {const _daffg ,_fab =6,1<<6-1;if _dbga >=0{return float64 (_dbga >>_daffg )+float64 (_dbga &_fab )/64;};_dbga =-_dbga ;if _dbga >=0{return -(float64 (_dbga >>_daffg )+float64 (_dbga &_fab )/64);};return 0;};func _fg (_ad ,_agb ,_agf ,_cbg ,_gdd ,_bg ,_bd float64 )(_ac ,_gdf float64 ){_af :=1-_bd ;_fac :=_af *_af ;_cd :=2*_af *_bd ;_ba :=_bd *_bd ;_ac =_fac *_ad +_cd *_agf +_ba *_gdd ;_gdf =_fac *_agb +_cd *_cbg +_ba *_bg ;return ;};func _egebg (_begb string )(_efc ,_gebf ,_eeef ,_fad int ){_begb =_c .TrimPrefix (_begb ,"\u0023");_fad =255;if len (_begb )==3{_dffg :="\u00251\u0078\u0025\u0031\u0078\u0025\u0031x";_d .Sscanf (_begb ,_dffg ,&_efc ,&_gebf ,&_eeef );_efc |=_efc <<4;_gebf |=_gebf <<4;_eeef |=_eeef <<4;};if len (_begb )==6{_abb :="\u0025\u0030\u0032x\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";_d .Sscanf (_begb ,_abb ,&_efc ,&_gebf ,&_eeef );};if len (_begb )==8{_fedc :="\u0025\u00302\u0078\u0025\u00302\u0078\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";_d .Sscanf (_begb ,_fedc ,&_efc ,&_gebf ,&_eeef ,&_fad );};return ;};func (_gada stops )Len ()int {return len (_gada )};func (_aaef *Context )stroke (_baf _eb .Painter ){_cbae :=_aaef ._fag ;if len (_aaef ._gad )> 0{_cbae =_fcbf (_cbae ,_aaef ._gad ,_aaef ._gf );}else {_cbae =_eac (_ffag (_cbae ));};_egeb :=_aaef ._ebb ;_egeb .UseNonZeroWinding =true ;_egeb .Clear ();_egeb .AddStroke (_cbae ,_dfe (_aaef ._gfe ),_aaef .capper (),_aaef .joiner ());_egeb .Rasterize (_baf );};func (_cbd *Context )DrawRoundedRectangle (x ,y ,w ,h ,r float64 ){_ffa ,_gda ,_fbc ,_fed :=x ,x +r ,x +w -r ,x +w ;_ecd ,_dgcb ,_aff ,_dcbb :=y ,y +r ,y +h -r ,y +h ;_cbd .NewSubPath ();_cbd .MoveTo (_gda ,_ecd );_cbd .LineTo (_fbc ,_ecd );_cbd .DrawArc (_fbc ,_dgcb ,r ,_gcbf (270),_gcbf (360));_cbd .LineTo (_fed ,_aff );_cbd .DrawArc (_fbc ,_aff ,r ,_gcbf (0),_gcbf (90));_cbd .LineTo (_gda ,_dcbb );_cbd .DrawArc (_gda ,_aff ,r ,_gcbf (90),_gcbf (180));_cbd .LineTo (_ffa ,_dgcb );_cbd .DrawArc (_gda ,_dgcb ,r ,_gcbf (180),_gcbf (270));_cbd .ClosePath ();};func (_dgdc *Context )DrawPoint (x ,y ,r float64 ){_dgdc .Push ();_aaeee ,_agcd :=_dgdc .Transform (x ,y );_dgdc .Identity ();_dgdc .DrawCircle (_aaeee ,_agcd ,r );_dgdc .Pop ();};func (_cfc *Context )DrawEllipticalArc (x ,y ,rx ,ry ,angle1 ,angle2 float64 ){const _afg =16;for _bafc :=0;_bafc < _afg ;_bafc ++{_dabd :=float64 (_bafc +0)/_afg ;_fgb :=float64 (_bafc +1)/_afg ;_dbc :=angle1 +(angle2 -angle1 )*_dabd ;_ffg :=angle1 +(angle2 -angle1 )*_fgb ;_fbg :=x +rx *_fa .Cos (_dbc );_gcd :=y +ry *_fa .Sin (_dbc );_ccad :=x +rx *_fa .Cos ((_dbc +_ffg )/2);_bfc :=y +ry *_fa .Sin ((_dbc +_ffg )/2);_cef :=x +rx *_fa .Cos (_ffg );_dec :=y +ry *_fa .Sin (_ffg );_cddd :=2*_ccad -_fbg /2-_cef /2;_bgc :=2*_bfc -_gcd /2-_dec /2;if _bafc ==0{if _cfc ._dfb {_cfc .LineTo (_fbg ,_gcd );}else {_cfc .MoveTo (_fbg ,_gcd );};};_cfc .QuadraticTo (_cddd ,_bgc ,_cef ,_dec );};};func (_gdda *Context )TextState ()*_be .TextState {return _gdda ._dge };func (_gca *Context )ScaleAbout (sx ,sy ,x ,y float64 ){_gca .Translate (x ,y );_gca .Scale (sx ,sy );_gca .Translate (-x ,-y );};func (_deb *Context )DrawCircle (x ,y ,r float64 ){_deb .NewSubPath ();_deb .DrawEllipticalArc (x ,y ,r ,r ,0,2*_fa .Pi );_deb .ClosePath ();};func (_eeab *solidPattern )ColorAt (x ,y int )_b .Color {return _eeab ._eaea };func NewContext (width ,height int )*Context {return NewContextForRGBA (_cb .NewRGBA (_cb .Rect (0,0,width ,height )));};func (_gcgb *Context )Image ()_cb .Image {return _gcgb ._gae };func (_adff *Context )Matrix ()_ga .Matrix {return _adff ._beb };func (_caf *Context )SetRGBA255 (r ,g ,b ,a int ){_caf ._add =_b .NRGBA {uint8 (r ),uint8 (g ),uint8 (b ),uint8 (a )};_caf .setFillAndStrokeColor (_caf ._add );};func _dg (_ce ,_ae ,_fc ,_dc ,_cda ,_cde float64 )[]_ga .Point {_cf :=(_fa .Hypot (_fc -_ce ,_dc -_ae )+_fa .Hypot (_cda -_fc ,_cde -_dc ));_gdfe :=int (_cf +0.5);if _gdfe < 4{_gdfe =4;};_adf :=float64 (_gdfe )-1;_eg :=make ([]_ga .Point ,_gdfe );for _adb :=0;_adb < _gdfe ;_adb ++{_fd :=float64 (_adb )/_adf ;_agc ,_gg :=_fg (_ce ,_ae ,_fc ,_dc ,_cda ,_cde ,_fd );_eg [_adb ]=_ga .NewPoint (_agc ,_gg );};return _eg ;};func _ebc (_bagf _ga .Point )_ec .Point26_6 {return _ec .Point26_6 {X :_dfe (_bagf .X ),Y :_dfe (_bagf .Y )}};func (_afgd *radialGradient )ColorAt (x ,y int )_b .Color {if len (_afgd ._abcb )==0{return _b .Transparent ;};_eaa ,_affa :=float64 (x )+0.5-_afgd ._cgabg ._cbgb ,float64 (y )+0.5-_afgd ._cgabg ._fdfa ;_gff :=_fccf (_eaa ,_affa ,_afgd ._cgabg ._bcb ,_afgd ._fgbc ._cbgb ,_afgd ._fgbc ._fdfa ,_afgd ._fgbc ._bcb );_gbfa :=_fccf (_eaa ,_affa ,-_afgd ._cgabg ._bcb ,_eaa ,_affa ,_afgd ._cgabg ._bcb );if _afgd ._bebg ==0{if _gff ==0{return _b .Transparent ;};_abcg :=0.5*_gbfa /_gff ;if _abcg *_afgd ._fgbc ._bcb >=_afgd ._deea {return _bbag (_abcg ,_afgd ._abcb );};return _b .Transparent ;};_adde :=_fccf (_gff ,_afgd ._bebg ,0,_gff ,-_gbfa ,0);if _adde >=0{_cdca :=_fa .Sqrt (_adde );_gfce :=(_gff +_cdca )*_afgd ._agd ;_eaad :=(_gff -_cdca )*_afgd ._agd ;if _gfce *_afgd ._fgbc ._bcb >=_afgd ._deea {return _bbag (_gfce ,_afgd ._abcb );}else if _eaad *_afgd ._fgbc ._bcb >=_afgd ._deea {return _bbag (_eaad ,_afgd ._abcb );};};return _b .Transparent ;};func (_fee *Context )joiner ()_eb .Joiner {switch _fee ._cga {case _be .LineJoinBevel :return _eb .BevelJoiner ;case _be .LineJoinRound :return _eb .RoundJoiner ;};return nil ;};func (_edb *linearGradient )ColorAt (x ,y int )_b .Color {if len (_edb ._adbg )==0{return _b .Transparent ;};_cegc ,_ede :=float64 (x ),float64 (y );_aag ,_ece ,_aaefd ,_aad :=_edb ._dbac ,_edb ._egdc ,_edb ._cdc ,_edb ._gbeb ;_ebe ,_dcfe :=_aaefd -_aag ,_aad -_ece ;if _dcfe ==0&&_ebe !=0{return _bbag ((_cegc -_aag )/_ebe ,_edb ._adbg );};if _ebe ==0&&_dcfe !=0{return _bbag ((_ede -_ece )/_dcfe ,_edb ._adbg );};_eed :=_ebe *(_cegc -_aag )+_dcfe *(_ede -_ece );if _eed < 0{return _edb ._adbg [0]._bgg ;};_adg :=_fa .Hypot (_ebe ,_dcfe );_deec :=((_cegc -_aag )*-_dcfe +(_ede -_ece )*_ebe )/(_adg *_adg );_adgd ,_bef :=_aag +_deec *-_dcfe ,_ece +_deec *_ebe ;_cfd :=_fa .Hypot (_cegc -_adgd ,_ede -_bef )/_adg ;return _bbag (_cfd ,_edb ._adbg );};func (_gba *Context )ClipPreserve (){_eec :=_cb .NewAlpha (_cb .Rect (0,0,_gba ._cdd ,_gba ._ceg ));_dgf :=_eb .NewAlphaOverPainter (_eec );_gba .fill (_dgf );if _gba ._cac ==nil {_gba ._cac =_eec ;}else {_ccac :=_cb .NewAlpha (_cb .Rect (0,0,_gba ._cdd ,_gba ._ceg ));_ag .DrawMask (_ccac ,_ccac .Bounds (),_eec ,_cb .Point {},_gba ._cac ,_cb .Point {},_ag .Over );_gba ._cac =_ccac ;};};func (_fbdc stops )Swap (i ,j int ){_fbdc [i ],_fbdc [j ]=_fbdc [j ],_fbdc [i ]};func (_abg *Context )SetHexColor (x string ){_gdg ,_cgg ,_gfd ,_cceb :=_egebg (x );_abg .SetRGBA255 (_gdg ,_cgg ,_gfd ,_cceb );};func (_ab *Context )SetLineCap (lineCap _be .LineCap ){_ab ._gce =lineCap };type stops []stop ;var (_gaf =_ccedc (_b .White );_eeb =_ccedc (_b .Black ););func (_bad *Context )SetLineWidth (lineWidth float64 ){_bad ._gfe =lineWidth };func _degd (_aceg ,_deba ,_dfd ,_bgef float64 )_be .Gradient {_fbce :=&linearGradient {_dbac :_aceg ,_egdc :_deba ,_cdc :_dfd ,_gbeb :_bgef };return _fbce ;};type surfacePattern struct{_afab _cb .Image ;_beec repeatOp ;};func (_aaa *Context )SetPixel (x ,y int ){_aaa ._gae .Set (x ,y ,_aaa ._add )};func (_bae *Context )SetColor (c _b .Color ){_bae .setFillAndStrokeColor (c )};func (_ceeg *Context )SetRGB (r ,g ,b float64 ){_ceeg .SetRGBA (r ,g ,b ,1)};func (_faa *Context )ClearPath (){_faa ._fag .Clear ();_faa ._bb .Clear ();_faa ._dfb =false };func (_aaaa *Context )DrawRectangle (x ,y ,w ,h float64 ){_aaaa .NewSubPath ();_aaaa .MoveTo (x ,y );_aaaa .LineTo (x +w ,y );_aaaa .LineTo (x +w ,y +h );_aaaa .LineTo (x ,y +h );_aaaa .ClosePath ();};type radialGradient struct{_cgabg ,_cddb ,_fgbc circle ;_bebg ,_agd float64 ;_deea float64 ;_abcb stops ;};func (_cfgf *surfacePattern )ColorAt (x ,y int )_b .Color {_bca :=_cfgf ._afab .Bounds ();switch _cfgf ._beec {case _egdb :if y >=_bca .Dy (){return _b .Transparent ;};case _cgf :if x >=_bca .Dx (){return _b .Transparent ;};case _gbag :if x >=_bca .Dx ()||y >=_bca .Dy (){return _b .Transparent ;};};x =x %_bca .Dx ()+_bca .Min .X ;y =y %_bca .Dy ()+_bca .Min .Y ;return _cfgf ._afab .At (x ,y );};func (_bcc *Context )MeasureString (s string )(_bbb ,_addc float64 ){_faaf :=&_cc .Drawer {Face :_bcc ._dge .Tf .Face };_abc :=_faaf .MeasureString (s );return float64 (_abc >>6),_bcc ._dge .Tf .Size ;};func (_cce *Context )SetDashOffset (offset float64 ){_cce ._gf =offset };func (_dee *Context )DrawEllipse (x ,y ,rx ,ry float64 ){_dee .NewSubPath ();_dee .DrawEllipticalArc (x ,y ,rx ,ry ,0,2*_fa .Pi );_dee .ClosePath ();};func (_daa *Context )SetStrokeRGBA (r ,g ,b ,a float64 ){_fge :=_b .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_daa ._bc =_ccedc (_fge );};func (_afe *Context )capper ()_eb .Capper {switch _afe ._gce {case _be .LineCapButt :return _eb .ButtCapper ;case _be .LineCapRound :return _eb .RoundCapper ;case _be .LineCapSquare :return _eb .SquareCapper ;};return nil ;};func (_cbaf *Context )SetFillRGBA (r ,g ,b ,a float64 ){_fcg :=_b .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_cbaf ._add =_fcg ;_cbaf ._gaed =_ccedc (_fcg );};func (_bcdc stops )Less (i ,j int )bool {return _bcdc [i ]._ada < _bcdc [j ]._ada };func (_agcg *Context )SetLineJoin (lineJoin _be .LineJoin ){_agcg ._cga =lineJoin };func NewContextForImage (im _cb .Image )*Context {return NewContextForRGBA (_fdfb (im ))};func _dad (_dff ,_agfb uint32 ,_gceg float64 )uint8 {return uint8 (int32 (float64 (_dff )*(1.0-_gceg )+float64 (_agfb )*_gceg )>>8);};func _fgbe (_cecg ,_bfd ,_dbg ,_gdgf ,_fgbcc ,_acee float64 )_be .Gradient {_eefa :=circle {_cecg ,_bfd ,_dbg };_ccg :=circle {_gdgf ,_fgbcc ,_acee };_aeb :=circle {_gdgf -_cecg ,_fgbcc -_bfd ,_acee -_dbg };_aebf :=_fccf (_aeb ._cbgb ,_aeb ._fdfa ,-_aeb ._bcb ,_aeb ._cbgb ,_aeb ._fdfa ,_aeb ._bcb );var _dcbd float64 ;if _aebf !=0{_dcbd =1.0/_aebf ;};_agfe :=-_eefa ._bcb ;_caaf :=&radialGradient {_cgabg :_eefa ,_cddb :_ccg ,_fgbc :_aeb ,_bebg :_aebf ,_agd :_dcbd ,_deea :_agfe };return _caaf ;};func (_gfga *Context )StrokePreserve (){var _fdf _eb .Painter ;if _gfga ._cac ==nil {if _eca ,_abe :=_gfga ._bc .(*solidPattern );_abe {_gafg :=_eb .NewRGBAPainter (_gfga ._gae );_gafg .SetColor (_eca ._eaea );_fdf =_gafg ;};};if _fdf ==nil {_fdf =_cacb (_gfga ._gae ,_gfga ._cac ,_gfga ._bc );};_gfga .stroke (_fdf );};func (_bde *Context )Stroke (){_bde .StrokePreserve ();_bde .ClearPath ()};func (_gdae *Context )Translate (x ,y float64 ){_gdae ._beb .Translate (x ,y )};func (_ddd *Context )ShearAbout (sx ,sy ,x ,y float64 ){_ddd .Translate (x ,y );_ddd .Shear (sx ,sy );_ddd .Translate (-x ,-y );};func (_fdb *radialGradient )AddColorStop (offset float64 ,color _b .Color ){_fdb ._abcb =append (_fdb ._abcb ,stop {_ada :offset ,_bgg :color });_a .Sort (_fdb ._abcb );};func (_cced *Context )DrawImage (im _cb .Image ,x ,y int ){_cced .DrawImageAnchored (im ,x ,y ,0,0)};func (_cefd *Context )Transform (x ,y float64 )(_cff ,_eebg float64 ){return _cefd ._beb .Transform (x ,y );};func (_cfb *Context )Rotate (angle float64 ){_cfb ._beb .Rotate (angle )};func (_egd *Context )SetFillRule (fillRule _be .FillRule ){_egd ._gdfa =fillRule };func (_agcf *Context )RotateAbout (angle ,x ,y float64 ){_agcf .Translate (x ,y );_agcf .Rotate (angle );_agcf .Translate (-x ,-y );};func _dfe (_fcgc float64 )_ec .Int26_6 {return _ec .Int26_6 (_fcgc *64)};func _daad (_abca _cb .Image ,_egddg repeatOp )_be .Pattern {return &surfacePattern {_afab :_abca ,_beec :_egddg };};func (_egeg *Context )DrawStringAnchored (s string ,x ,y ,ax ,ay float64 ){_gfgac ,_bfe :=_egeg .MeasureString (s );x -=ax *_gfgac ;y +=ay *_bfe ;if _egeg ._cac ==nil {_egeg .drawString (_egeg ._gae ,s ,x ,y );}else {_cec :=_cb .NewRGBA (_cb .Rect (0,0,_egeg ._cdd ,_egeg ._ceg ));_egeg .drawString (_cec ,s ,x ,y );_ag .DrawMask (_egeg ._gae ,_egeg ._gae .Bounds (),_cec ,_cb .Point {},_egeg ._cac ,_cb .Point {},_ag .Over );};};func (_ege *Context )LineWidth ()float64 {return _ege ._gfe };func (_aca *Context )fill (_eee _eb .Painter ){_ea :=_aca ._bb ;if _aca ._dfb {_ea =make (_eb .Path ,len (_aca ._bb ));copy (_ea ,_aca ._bb );_ea .Add1 (_ebc (_aca ._bf ));};_daba :=_aca ._ebb ;_daba .UseNonZeroWinding =_aca ._gdfa ==_be .FillRuleWinding ;_daba .Clear ();_daba .AddPath (_ea );_daba .Rasterize (_eee );};func _fdfb (_fgd _cb .Image )*_cb .RGBA {_aaf :=_fgd .Bounds ();_baac :=_cb .NewRGBA (_aaf );_df .Draw (_baac ,_aaf ,_fgd ,_aaf .Min ,_df .Src );return _baac ;};func (_gge *Context )DrawArc (x ,y ,r ,angle1 ,angle2 float64 ){_gge .DrawEllipticalArc (x ,y ,r ,r ,angle1 ,angle2 );};func _cacb (_dbcg *_cb .RGBA ,_dcfee *_cb .Alpha ,_gffc _be .Pattern )*patternPainter {return &patternPainter {_dbcg ,_dcfee ,_gffc };};func _eac (_aec [][]_ga .Point )_eb .Path {var _adab _eb .Path ;for _ ,_ggf :=range _aec {var _gcbd _ec .Point26_6 ;for _ggc ,_fcb :=range _ggf {_gfca :=_ebc (_fcb );if _ggc ==0{_adab .Start (_gfca );}else {_dfg :=_gfca .X -_gcbd .X ;_fgc :=_gfca .Y -_gcbd .Y ;if _dfg < 0{_dfg =-_dfg ;};if _fgc < 0{_fgc =-_fgc ;};if _dfg +_fgc > 8{_adab .Add1 (_gfca );};};_gcbd =_gfca ;};};return _adab ;};func _fccf (_bdce ,_edc ,_bbe ,_gee ,_gbcb ,_bdf float64 )float64 {return _bdce *_gee +_edc *_gbcb +_bbe *_bdf ;};func (_ddg *Context )ResetClip (){_ddg ._cac =nil };func (_cee *Context )SetDash (dashes ...float64 ){_cee ._gad =dashes };func _cbbf (_dafb [][]_ga .Point ,_feec []float64 ,_ccaa float64 )[][]_ga .Point {var _bgga [][]_ga .Point ;if len (_feec )==0{return _dafb ;};if len (_feec )==1{_feec =append (_feec ,_feec [0]);};for _ ,_aacb :=range _dafb {if len (_aacb )< 2{continue ;};_ecg :=_aacb [0];_eab :=1;_dcbf :=0;_fba :=0.0;if _ccaa !=0{var _ebf float64 ;for _ ,_adbgg :=range _feec {_ebf +=_adbgg ;};_ccaa =_fa .Mod (_ccaa ,_ebf );if _ccaa < 0{_ccaa +=_ebf ;};for _cfbe ,_gdgb :=range _feec {_ccaa -=_gdgb ;if _ccaa < 0{_dcbf =_cfbe ;_fba =_gdgb +_ccaa ;break ;};};};var _ecge []_ga .Point ;_ecge =append (_ecge ,_ecg );for _eab < len (_aacb ){_eaed :=_feec [_dcbf ];_ecc :=_aacb [_eab ];_dfdc :=_ecg .Distance (_ecc );_fdg :=_eaed -_fba ;if _dfdc > _fdg {_fbb :=_fdg /_dfdc ;_dgfe :=_ecg .Interpolate (_ecc ,_fbb );_ecge =append (_ecge ,_dgfe );if _dcbf %2==0&&len (_ecge )> 1{_bgga =append (_bgga ,_ecge );};_ecge =nil ;_ecge =append (_ecge ,_dgfe );_fba =0;_ecg =_dgfe ;_dcbf =(_dcbf +1)%len (_feec );}else {_ecge =append (_ecge ,_ecc );_ecg =_ecc ;_fba +=_dfdc ;_eab ++;};};if _dcbf %2==0&&len (_ecge )> 1{_bgga =append (_bgga ,_ecge );};};return _bgga ;};type patternPainter struct{_ccge *_cb .RGBA ;_dced *_cb .Alpha ;_faab _be .Pattern ;};type solidPattern struct{_eaea _b .Color };func (_fdd *Context )Pop (){_abee :=*_fdd ;_geg :=_fdd ._bgbf ;_cgab :=_geg [len (_geg )-1];*_fdd =*_cgab ;_fdd ._fag =_abee ._fag ;_fdd ._bb =_abee ._bb ;_fdd ._bf =_abee ._bf ;_fdd ._cba =_abee ._cba ;_fdd ._dfb =_abee ._dfb ;_fdd ._dge =_abee ._dge ;};type stop struct{_ada float64 ;_bgg _b .Color ;};func (_fbf *Context )setFillAndStrokeColor (_ff _b .Color ){_fbf ._add =_ff ;_fbf ._gaed =_ccedc (_ff );_fbf ._bc =_ccedc (_ff );};func (_ceab *Context )Clear (){_afcg :=_cb .NewUniform (_ceab ._add );_ag .Draw (_ceab ._gae ,_ceab ._gae .Bounds (),_afcg ,_cb .Point {},_ag .Src );};func (_daf *Context )SetStrokeStyle (pattern _be .Pattern ){_daf ._bc =pattern };func (_cabf *Context )Fill (){_cabf .FillPreserve ();_cabf .ClearPath ()};func (_gfc *Context )Push (){_fdad :=*_gfc ;_gfc ._bgbf =append (_gfc ._bgbf ,&_fdad )};func (_aeg *Context )ClosePath (){if _aeg ._dfb {_dcb :=_ebc (_aeg ._bf );_aeg ._fag .Add1 (_dcb );_aeg ._bb .Add1 (_dcb );_aeg ._cba =_aeg ._bf ;};};func (_ega *Context )CubicTo (x1 ,y1 ,x2 ,y2 ,x3 ,y3 float64 ){if !_ega ._dfb {_ega .MoveTo (x1 ,y1 );};_bdc ,_bfb :=_ega ._cba .X ,_ega ._cba .Y ;x1 ,y1 =_ega .Transform (x1 ,y1 );x2 ,y2 =_ega .Transform (x2 ,y2 );x3 ,y3 =_ega .Transform (x3 ,y3 );_aac :=_dcf (_bdc ,_bfb ,x1 ,y1 ,x2 ,y2 ,x3 ,y3 );_ecfc :=_ebc (_ega ._cba );for _ ,_cab :=range _aac [1:]{_fafd :=_ebc (_cab );if _fafd ==_ecfc {continue ;};_ecfc =_fafd ;_ega ._fag .Add1 (_fafd );_ega ._bb .Add1 (_fafd );_ega ._cba =_cab ;};};func NewContextForRGBA (im *_cb .RGBA )*Context {_gcg :=im .Bounds ().Size ().X ;_gfg :=im .Bounds ().Size ().Y ;return &Context {_cdd :_gcg ,_ceg :_gfg ,_ebb :_eb .NewRasterizer (_gcg ,_gfg ),_gae :im ,_add :_b .Transparent ,_gaed :_gaf ,_bc :_eeb ,_gfe :1,_gdfa :_be .FillRuleWinding ,_beb :_ga .IdentityMatrix (),_dge :_be .NewTextState ()};};func (_ecf *Context )SetRGB255 (r ,g ,b int ){_ecf .SetRGBA255 (r ,g ,b ,255)};func (_dgcf *Context )Height ()int {return _dgcf ._ceg };func (_deg *Context )Identity (){_deg ._beb =_ga .IdentityMatrix ()};type repeatOp int ;func (_dea *Context )drawRegularPolygon (_efd int ,_bge ,_ffc ,_ed ,_adba float64 ){_efa :=2*_fa .Pi /float64 (_efd );_adba -=_fa .Pi /2;if _efd %2==0{_adba +=_efa /2;};_dea .NewSubPath ();for _gbbd :=0;_gbbd < _efd ;_gbbd ++{_dgac :=_adba +_efa *float64 (_gbbd );_dea .LineTo (_bge +_ed *_fa .Cos (_dgac ),_ffc +_ed *_fa .Sin (_dgac ));};_dea .ClosePath ();};func (_addg *Context )QuadraticTo (x1 ,y1 ,x2 ,y2 float64 ){if !_addg ._dfb {_addg .MoveTo (x1 ,y1 );};x1 ,y1 =_addg .Transform (x1 ,y1 );x2 ,y2 =_addg .Transform (x2 ,y2 );_ffe :=_ga .NewPoint (x1 ,y1 );_bab :=_ga .NewPoint (x2 ,y2 );_bgd :=_ebc (_ffe );_gbe :=_ebc (_bab );_addg ._fag .Add2 (_bgd ,_gbe );_addg ._bb .Add2 (_bgd ,_gbe );_addg ._cba =_bab ;};func (_efe *Context )Shear (x ,y float64 ){_efe ._beb .Shear (x ,y )};func (_gddc *Context )Width ()int {return _gddc ._cdd };func _bbag (_bcg float64 ,_bfbb stops )_b .Color {if _bcg <=0.0||len (_bfbb )==1{return _bfbb [0]._bgg ;};_gcb :=_bfbb [len (_bfbb )-1];if _bcg >=_gcb ._ada {return _gcb ._bgg ;};for _bbagd ,_ccd :=range _bfbb [1:]{if _bcg < _ccd ._ada {_bcg =(_bcg -_bfbb [_bbagd ]._ada )/(_ccd ._ada -_bfbb [_bbagd ]._ada );return _fbe (_bfbb [_bbagd ]._bgg ,_ccd ._bgg ,_bcg );};};return _gcb ._bgg ;};func _gcbf (_gga float64 )float64 {return _gga *_fa .Pi /180};func (_eea *Context )FillPreserve (){var _fbd _eb .Painter ;if _eea ._cac ==nil {if _gddd ,_dabc :=_eea ._gaed .(*solidPattern );_dabc {_agg :=_eb .NewRGBAPainter (_eea ._gae );_agg .SetColor (_gddd ._eaea );_fbd =_agg ;};};if _fbd ==nil {_fbd =_cacb (_eea ._gae ,_eea ._cac ,_eea ._gaed );};_eea .fill (_fbd );};type Context struct{_cdd int ;_ceg int ;_ebb *_eb .Rasterizer ;_gae *_cb .RGBA ;_cac *_cb .Alpha ;_add _b .Color ;_gaed _be .Pattern ;_bc _be .Pattern ;_fag _eb .Path ;_bb _eb .Path ;_bf _ga .Point ;_cba _ga .Point ;_dfb bool ;_gad []float64 ;_gf float64 ;_gfe float64 ;_gce _be .LineCap ;_cga _be .LineJoin ;_gdfa _be .FillRule ;_beb _ga .Matrix ;_dge *_be .TextState ;_bgbf []*Context ;};type circle struct{_cbgb ,_fdfa ,_bcb float64 };func (_gec *Context )SetMask (mask *_cb .Alpha )error {if mask .Bounds ().Size ()!=_gec ._gae .Bounds ().Size (){return _g .New ("\u006d\u0061\u0073\u006b\u0020\u0073i\u007a\u0065\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068 \u0063\u006f\u006e\u0074\u0065\u0078\u0074 \u0073\u0069\u007a\u0065");};_gec ._cac =mask ;return nil ;};func _dcf (_aed ,_dab ,_aae ,_cg ,_fda ,_ecb ,_bgb ,_de float64 )[]_ga .Point {_aga :=(_fa .Hypot (_aae -_aed ,_cg -_dab )+_fa .Hypot (_fda -_aae ,_ecb -_cg )+_fa .Hypot (_bgb -_fda ,_de -_ecb ));_baa :=int (_aga +0.5);if _baa < 4{_baa =4;};_cfa :=float64 (_baa )-1;_faf :=make ([]_ga .Point ,_baa );for _cca :=0;_cca < _baa ;_cca ++{_gb :=float64 (_cca )/_cfa ;_gbb ,_dgd :=_ef (_aed ,_dab ,_aae ,_cg ,_fda ,_ecb ,_bgb ,_de ,_gb );_faf [_cca ]=_ga .NewPoint (_gbb ,_dgd );};return _faf ;};func (_aaee *Context )MoveTo (x ,y float64 ){if _aaee ._dfb {_aaee ._bb .Add1 (_ebc (_aaee ._bf ));};x ,y =_aaee .Transform (x ,y );_bcd :=_ga .NewPoint (x ,y );_daff :=_ebc (_bcd );_aaee ._fag .Start (_daff );_aaee ._bb .Start (_daff );_aaee ._bf =_bcd ;_aaee ._cba =_bcd ;_aaee ._dfb =true ;};func (_cfe *Context )Scale (x ,y float64 ){_cfe ._beb .Scale (x ,y )};func _ef (_fe ,_ee ,_eef ,_cea ,_bee ,_afb ,_fb ,_ge ,_afc float64 )(_da ,_gddb float64 ){_dd :=1-_afc ;_aa :=_dd *_dd *_dd ;_dgc :=3*_dd *_dd *_afc ;_ca :=3*_dd *_afc *_afc ;_gc :=_afc *_afc *_afc ;_da =_aa *_fe +_dgc *_eef +_ca *_bee +_gc *_fb ;_gddb =_aa *_ee +_dgc *_cea +_ca *_afb +_gc *_ge ;return ;};func (_gfcf *linearGradient )AddColorStop (offset float64 ,color _b .Color ){_gfcf ._adbg =append (_gfcf ._adbg ,stop {_ada :offset ,_bgg :color });_a .Sort (_gfcf ._adbg );};func (_gdc *Context )InvertMask (){if _gdc ._cac ==nil {_gdc ._cac =_cb .NewAlpha (_gdc ._gae .Bounds ());}else {for _dba ,_acg :=range _gdc ._cac .Pix {_gdc ._cac .Pix [_dba ]=255-_acg ;};};};func (_gbf *Context )drawString (_dcfg *_cb .RGBA ,_cefc string ,_gddde ,_bfa float64 ){_aabc :=&_cc .Drawer {Dst :_dcfg ,Src :_cb .NewUniform (_gbf ._add ),Face :_gbf ._dge .Tf .Face ,Dot :_ebc (_ga .NewPoint (_gddde ,_bfa ))};_fcc :=rune (-1);for _ ,_cfg :=range _cefc {if _fcc >=0{_aabc .Dot .X +=_aabc .Face .Kern (_fcc ,_cfg );};_ddb ,_gab ,_bea ,_aaed ,_ace :=_aabc .Face .Glyph (_aabc .Dot ,_cfg );if !_ace {continue ;};_ggb :=_ddb .Sub (_ddb .Min );_dcc :=_ag .BiLinear ;_acb :=_gbf ._beb .Clone ();_acb .Translate (float64 (_ddb .Min .X ),float64 (_ddb .Min .Y ));_afa :=_gd .Aff3 {_acb [0],_acb [3],_acb [6],_acb [1],_acb [4],_acb [7]};_dcc .Transform (_aabc .Dst ,_afa ,_aabc .Src ,_ggb ,_ag .Over ,&_ag .Options {SrcMask :_gab ,SrcMaskP :_bea });_aabc .Dot .X +=_aaed ;_fcc =_cfg ;};};func (_aebg *patternPainter )Paint (ss []_eb .Span ,done bool ){_agdc :=_aebg ._ccge .Bounds ();for _ ,_bgba :=range ss {if _bgba .Y < _agdc .Min .Y {continue ;};if _bgba .Y >=_agdc .Max .Y {return ;};if _bgba .X0 < _agdc .Min .X {_bgba .X0 =_agdc .Min .X ;};if _bgba .X1 > _agdc .Max .X {_bgba .X1 =_agdc .Max .X ;};if _bgba .X0 >=_bgba .X1 {continue ;};const _ceeb =1<<16-1;_afd :=_bgba .Y -_aebg ._ccge .Rect .Min .Y ;_aefb :=_bgba .X0 -_aebg ._ccge .Rect .Min .X ;_ccae :=(_bgba .Y -_aebg ._ccge .Rect .Min .Y )*_aebg ._ccge .Stride +(_bgba .X0 -_aebg ._ccge .Rect .Min .X )*4;_agac :=_ccae +(_bgba .X1 -_bgba .X0 )*4;for _eaeag ,_fde :=_ccae ,_aefb ;_eaeag < _agac ;_eaeag ,_fde =_eaeag +4,_fde +1{_ceabb :=_bgba .Alpha ;if _aebg ._dced !=nil {_ceabb =_ceabb *uint32 (_aebg ._dced .AlphaAt (_fde ,_afd ).A )/255;if _ceabb ==0{continue ;};};_ecfd :=_aebg ._faab .ColorAt (_fde ,_afd );_bgeb ,_ged ,_gbff ,_bfac :=_ecfd .RGBA ();_gafa :=uint32 (_aebg ._ccge .Pix [_eaeag +0]);_fdgg :=uint32 (_aebg ._ccge .Pix [_eaeag +1]);_fgbd :=uint32 (_aebg ._ccge .Pix [_eaeag +2]);_bgf :=uint32 (_aebg ._ccge .Pix [_eaeag +3]);_dcee :=(_ceeb -(_bfac *_ceabb /_ceeb ))*0x101;_aebg ._ccge .Pix [_eaeag +0]=uint8 ((_gafa *_dcee +_bgeb *_ceabb )/_ceeb >>8);_aebg ._ccge .Pix [_eaeag +1]=uint8 ((_fdgg *_dcee +_ged *_ceabb )/_ceeb >>8);_aebg ._ccge .Pix [_eaeag +2]=uint8 ((_fgbd *_dcee +_gbff *_ceabb )/_ceeb >>8);_aebg ._ccge .Pix [_eaeag +3]=uint8 ((_bgf *_dcee +_bfac *_ceabb )/_ceeb >>8);};};};