//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package context ;import (_c "errors";_bd "github.com/unidoc/freetype/truetype";_b "github.com/unidoc/unipdf/v3/core";_fa "github.com/unidoc/unipdf/v3/internal/textencoding";_cg "github.com/unidoc/unipdf/v3/internal/transform";_ad "github.com/unidoc/unipdf/v3/model";
_g "golang.org/x/image/font";_a "image";_f "image/color";);func (_aad *TextState )ProcTStar (){_aad .ProcTd (0,-_aad .Tl )};const (TextRenderingModeFill TextRenderingMode =iota ;TextRenderingModeStroke ;TextRenderingModeFillStroke ;TextRenderingModeInvisible ;
TextRenderingModeFillClip ;TextRenderingModeStrokeClip ;TextRenderingModeFillStrokeClip ;TextRenderingModeClip ;);type Pattern interface{ColorAt (_add ,_ag int )_f .Color ;};type Context interface{Push ();Pop ();Matrix ()_cg .Matrix ;SetMatrix (_cf _cg .Matrix );
Translate (_ed ,_ca float64 );Scale (_gb ,_ec float64 );Rotate (_d float64 );MoveTo (_agd ,_bf float64 );LineTo (_fe ,_cef float64 );CubicTo (_de ,_cff ,_be ,_bc ,_gbg ,_dg float64 );QuadraticTo (_bce ,_fff ,_cd ,_db float64 );NewSubPath ();ClosePath ();
ClearPath ();Clip ();ClipPreserve ();ResetClip ();LineWidth ()float64 ;SetLineWidth (_eb float64 );SetLineCap (_eg LineCap );SetLineJoin (_df LineJoin );SetDash (_ga ...float64 );SetDashOffset (_dga float64 );Fill ();FillPreserve ();Stroke ();StrokePreserve ();
SetRGBA (_ecg ,_fb ,_dea ,_cfd float64 );SetFillRGBA (_gd ,_ea ,_ac ,_ffb float64 );SetFillStyle (_aa Pattern );SetFillRule (_adg FillRule );SetStrokeRGBA (_dc ,_fg ,_age ,_aag float64 );SetStrokeStyle (_bee Pattern );FillPattern ()Pattern ;StrokePattern ()Pattern ;
TextState ()*TextState ;DrawString (_ageb string ,_dd _g .Face ,_dbb ,_ab float64 );MeasureString (_cgd string ,_gg _g .Face )(_gf ,_da float64 );DrawRectangle (_ddg ,_ef ,_adf ,_eae float64 );DrawImage (_gdc _a .Image ,_cc ,_ecb int );DrawImageAnchored (_ee _a .Image ,_eef ,_bcb int ,_egg ,_fd float64 );
Height ()int ;Width ()int ;};func (_cab *TextFont )NewFace (size float64 )_g .Face {return _bd .NewFace (_cab ._gfg ,&_bd .Options {Size :size });};func (_agdf *TextState )ProcQ (data []byte ,ctx Context ){_agdf .ProcTStar ();_agdf .ProcTj (data ,ctx )};
func (_edc *TextState )ProcTj (data []byte ,ctx Context ){_adfb :=_edc .Tf .Size ;_cbgd :=_edc .Th /100.0;_cee :=_edc .GlobalScale ;_cag :=_cg .NewMatrix (_adfb *_cbgd ,0,0,_adfb ,0,_edc .Ts );_gag :=ctx .Matrix ();_cbd :=_gag .Clone ().Mult (_edc .Tm .Clone ().Mult (_cag )).ScalingFactorY ();
_ace :=_edc .Tf .NewFace (_cbd );_gcb :=_edc .Tf .BytesToCharcodes (data );for _ ,_fba :=range _gcb {_ddd ,_abc :=_edc .Tf .CharcodeToRunes (_fba );_ffa :=string (_abc );if _ffa =="\u0000"{continue ;};_caf :=_gag .Clone ().Mult (_edc .Tm .Clone ().Mult (_cag ));
_bg :=_caf .ScalingFactorY ();_caf =_caf .Scale (1/_bg ,-1/_bg );if _edc .Tr !=TextRenderingModeInvisible {ctx .SetMatrix (_caf );ctx .DrawString (_ffa ,_ace ,0,0);ctx .SetMatrix (_gag );};_bgf :=0.0;if _ffa =="\u0020"{_bgf =_edc .Tw ;};_cba ,_ ,_bcbd :=_edc .Tf .GetCharMetrics (_ddd );
if _bcbd {_cba =_cba *0.001*_adfb ;}else {_cba ,_ =ctx .MeasureString (_ffa ,_ace );_cba =_cba /_cee ;};_ead :=(_cba +_edc .Tc +_bgf )*_cbgd ;_edc .Tm =_edc .Tm .Mult (_cg .TranslationMatrix (_ead ,0));};};func (_cfff *TextFont )WithSize (size float64 ,originalFont *_ad .PdfFont )*TextFont {return &TextFont {Font :_cfff .Font ,Size :size ,_gfg :_cfff ._gfg ,_dae :originalFont };
};const (LineCapRound LineCap =iota ;LineCapButt ;LineCapSquare ;);func (_cb *TextFont )GetCharMetrics (code _fa .CharCode )(float64 ,float64 ,bool ){if _gafc ,_dfc :=_cb .Font .GetCharMetrics (code );_dfc &&_gafc .Wx !=0{return _gafc .Wx ,_gafc .Wy ,_dfc ;
};if _cb ._dae ==nil {return 0,0,false ;};_fgc ,_cbg :=_cb ._dae .GetCharMetrics (code );return _fgc .Wx ,_fgc .Wy ,_cbg &&_fgc .Wx !=0;};type TextFont struct{Font *_ad .PdfFont ;Size float64 ;_gfg *_bd .Font ;_dae *_ad .PdfFont ;};func (_fc *TextState )ProcTm (a ,b ,c ,d ,e ,f float64 ){_fc .Tm =_cg .NewMatrix (a ,b ,c ,d ,e ,f );
_fc .Tlm =_fc .Tm .Clone ();};func (_caa *TextState )Translate (tx ,ty float64 ){_caa .Tm =_caa .Tm .Mult (_cg .TranslationMatrix (tx ,ty ));};type Gradient interface{Pattern ;AddColorStop (_ce float64 ,_ff _f .Color );};func (_bcf *TextState )ProcTf (font *TextFont ){_bcf .Tf =font };
type FillRule int ;func NewTextState ()TextState {return TextState {Th :100,Tm :_cg .IdentityMatrix (),Tlm :_cg .IdentityMatrix ()};};type TextRenderingMode int ;func (_gga *TextFont )CharcodeToRunes (charcode _fa .CharCode )(_fa .CharCode ,[]rune ){_egc :=[]_fa .CharCode {charcode };
if _gga ._dae ==nil ||_gga ._dae ==_gga .Font {if _gga .Font .IsSimple ()&&_gga ._gfg !=nil {if _fda :=_gga ._gfg .Index (rune (charcode ));_fda > 0{return charcode ,[]rune {rune (charcode )};};};return charcode ,_gga .Font .CharcodesToUnicode (_egc );
};_ecf :=_gga ._dae .CharcodesToUnicode (_egc );_agdg ,_ :=_gga .Font .RunesToCharcodeBytes (_ecf );_beb :=_gga .Font .BytesToCharcodes (_agdg );_agc :=charcode ;if len (_beb )> 0&&_beb [0]!=0{_agc =_beb [0];};return _agc ,_ecf ;};type LineCap int ;type LineJoin int ;
const (FillRuleWinding FillRule =iota ;FillRuleEvenOdd ;);func NewTextFontFromPath (filePath string ,size float64 )(*TextFont ,error ){_ba ,_ae :=_ad .NewPdfFontFromTTFFile (filePath );if _ae !=nil {return nil ,_ae ;};return NewTextFont (_ba ,size );};
func (_fde *TextFont )BytesToCharcodes (data []byte )[]_fa .CharCode {if _fde ._dae !=nil {return _fde ._dae .BytesToCharcodes (data );};return _fde .Font .BytesToCharcodes (data );};type TextState struct{Tc float64 ;Tw float64 ;Th float64 ;Tl float64 ;
Tf *TextFont ;Ts float64 ;Tm _cg .Matrix ;Tlm _cg .Matrix ;Tr TextRenderingMode ;GlobalScale float64 ;};func (_cgg *TextState )Reset (){_cgg .Tm =_cg .IdentityMatrix ();_cgg .Tlm =_cg .IdentityMatrix ()};const (LineJoinRound LineJoin =iota ;LineJoinBevel ;
);func (_gcc *TextState )ProcDQ (data []byte ,aw ,ac float64 ,ctx Context ){_gcc .Tw =aw ;_gcc .Tc =ac ;_gcc .ProcQ (data ,ctx );};func NewTextFont (font *_ad .PdfFont ,size float64 )(*TextFont ,error ){_gc :=font .FontDescriptor ();if _gc ==nil {return nil ,_c .New ("\u0063\u006fu\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0067\u0065\u0074\u0020\u0066\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069pt\u006f\u0072");
};_dde ,_gaf :=_b .GetStream (_gc .FontFile2 );if !_gaf {return nil ,_c .New ("\u006di\u0073\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u0020f\u0069\u006c\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d");};_ffc ,_fdd :=_b .DecodeStream (_dde );
if _fdd !=nil {return nil ,_fdd ;};_daf ,_fdd :=_bd .Parse (_ffc );if _fdd !=nil {return nil ,_fdd ;};return &TextFont {Font :font ,Size :size ,_gfg :_daf },nil ;};func (_gdf *TextState )ProcTd (tx ,ty float64 ){_gdf .Tlm .Concat (_cg .TranslationMatrix (tx ,ty ));
_gdf .Tm =_gdf .Tlm .Clone ();};func (_cea *TextState )ProcTD (tx ,ty float64 ){_cea .Tl =-ty ;_cea .ProcTd (tx ,ty )};