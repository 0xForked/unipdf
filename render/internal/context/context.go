//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package context ;import (_e "errors";_efd "github.com/golang/freetype/truetype";_bc "github.com/unidoc/unipdf/v3/core";_aa "github.com/unidoc/unipdf/v3/internal/textencoding";_f "github.com/unidoc/unipdf/v3/internal/transform";_d "github.com/unidoc/unipdf/v3/model";
_b "golang.org/x/image/font";_ef "image";_a "image/color";);const (FillRuleWinding FillRule =iota ;FillRuleEvenOdd ;);func (_cdcb *TextState )ProcTD (tx ,ty float64 ){_cdcb .Tl =-ty ;_cdcb .ProcTd (tx ,ty )};func NewTextFontFromPath (filePath string ,size float64 )(*TextFont ,error ){_eeb ,_bef :=_d .NewPdfFontFromTTFFile (filePath );
if _bef !=nil {return nil ,_bef ;};return NewTextFont (_eeb ,size );};func NewTextFont (font *_d .PdfFont ,size float64 )(*TextFont ,error ){_cf :=font .FontDescriptor ();if _cf ==nil {return nil ,_e .New ("\u0063\u006fu\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0067\u0065\u0074\u0020\u0066\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069pt\u006f\u0072");
};_dae ,_dg :=_bc .GetStream (_cf .FontFile2 );if !_dg {return nil ,_e .New ("\u006di\u0073\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u0020f\u0069\u006c\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d");};_bb ,_ba :=_bc .DecodeStream (_dae );
if _ba !=nil {return nil ,_ba ;};_ega ,_ba :=_efd .Parse (_bb );if _ba !=nil {return nil ,_ba ;};return &TextFont {Font :font ,Size :size ,_cdb :_ega },nil ;};func (_fea *TextState )Reset (){_fea .Tm =_f .IdentityMatrix ();_fea .Tlm =_f .IdentityMatrix ()};
type Pattern interface{ColorAt (_c ,_ac int )_a .Color ;};func (_gae *TextFont )GetCharMetrics (code _aa .CharCode )(float64 ,float64 ,bool ){if _ca ,_befg :=_gae .Font .GetCharMetrics (code );_befg &&_ca .Wx !=0{return _ca .Wx ,_ca .Wy ,_befg ;};if _gae ._feb ==nil {return 0,0,false ;
};_aeg ,_cdc :=_gae ._feb .GetCharMetrics (code );return _aeg .Wx ,_aeg .Wy ,_cdc &&_aeg .Wx !=0;};type FillRule int ;func NewTextState ()TextState {return TextState {Th :100,Tm :_f .IdentityMatrix (),Tlm :_f .IdentityMatrix ()};};type TextRenderingMode int ;
func (_bab *TextFont )BytesToCharcodes (data []byte )[]_aa .CharCode {if _bab ._feb !=nil {return _bab ._feb .BytesToCharcodes (data );};return _bab .Font .BytesToCharcodes (data );};func (_ebe *TextFont )NewFace (size float64 )_b .Face {return _efd .NewFace (_ebe ._cdb ,&_efd .Options {Size :size });
};func (_bdf *TextFont )CharcodeToRunes (charcode _aa .CharCode )(_aa .CharCode ,[]rune ){_bda :=[]_aa .CharCode {charcode };if _bdf ._feb ==nil ||_bdf ._feb ==_bdf .Font {return charcode ,_bdf .Font .CharcodesToUnicode (_bda );};_abc :=_bdf ._feb .CharcodesToUnicode (_bda );
_cfb ,_ :=_bdf .Font .RunesToCharcodeBytes (_abc );_fdd :=_bdf .Font .BytesToCharcodes (_cfb );_bdab :=charcode ;if len (_fdd )> 0&&_fdd [0]!=0{_bdab =_fdd [0];};return _bdab ,_abc ;};func (_fgb *TextState )Translate (tx ,ty float64 ){_fgb .Tm =_fgb .Tm .Mult (_f .TranslationMatrix (tx ,ty ));
};func (_ga *TextFont )WithSize (size float64 ,originalFont *_d .PdfFont )*TextFont {return &TextFont {Font :_ga .Font ,Size :size ,_cdb :_ga ._cdb ,_feb :originalFont };};type Context interface{Push ();Pop ();Matrix ()_f .Matrix ;SetMatrix (_ee _f .Matrix );
Translate (_ec ,_ecc float64 );Scale (_ae ,_bd float64 );Rotate (_ebf float64 );MoveTo (_fe ,_ce float64 );LineTo (_da ,_af float64 );CubicTo (_be ,_aec ,_fb ,_ece ,_fd ,_fed float64 );QuadraticTo (_gb ,_gd ,_efg ,_ab float64 );NewSubPath ();ClosePath ();
ClearPath ();Clip ();ClipPreserve ();ResetClip ();LineWidth ()float64 ;SetLineWidth (_cg float64 );SetLineCap (_de LineCap );SetLineJoin (_fbd LineJoin );SetDash (_efa ...float64 );SetDashOffset (_ed float64 );Fill ();FillPreserve ();Stroke ();StrokePreserve ();
SetRGBA (_efc ,_fg ,_fa ,_gdb float64 );SetFillRGBA (_ff ,_def ,_fc ,_gbb float64 );SetFillStyle (_ag Pattern );SetFillRule (_eg FillRule );SetStrokeRGBA (_faf ,_db ,_acb ,_cgf float64 );SetStrokeStyle (_acf Pattern );FillPattern ()Pattern ;StrokePattern ()Pattern ;
TextState ()*TextState ;DrawString (_aef string ,_ecd _b .Face ,_edg ,_bcd float64 );MeasureString (_dc string ,_ffc _b .Face )(_dd ,_bce float64 );DrawRectangle (_fee ,_ebd ,_cd ,_aefc float64 );DrawImage (_bf _ef .Image ,_bfe ,_agb int );DrawImageAnchored (_fafa _ef .Image ,_cge ,_bdg int ,_ea ,_cea float64 );
Height ()int ;Width ()int ;};func (_efda *TextState )ProcQ (data []byte ,ctx Context ){_efda .ProcTStar ();_efda .ProcTj (data ,ctx )};const (TextRenderingModeFill TextRenderingMode =iota ;TextRenderingModeStroke ;TextRenderingModeFillStroke ;TextRenderingModeInvisible ;
TextRenderingModeFillClip ;TextRenderingModeStrokeClip ;TextRenderingModeFillStrokeClip ;TextRenderingModeClip ;);type TextFont struct{Font *_d .PdfFont ;Size float64 ;_cdb *_efd .Font ;_feb *_d .PdfFont ;};func (_ad *TextState )ProcTm (a ,b ,c ,d ,e ,f float64 ){_ad .Tm =_f .NewMatrix (a ,b ,c ,d ,e ,f );
_ad .Tlm =_ad .Tm .Clone ();};type LineCap int ;func (_eff *TextState )ProcTStar (){_eff .ProcTd (0,-_eff .Tl )};const (LineJoinRound LineJoin =iota ;LineJoinBevel ;);func (_cc *TextState )ProcTj (data []byte ,ctx Context ){_fce :=_cc .Tf .Size ;_cde :=_cc .Th /100.0;
_gf :=_cc .GlobalScale ;_dde :=_f .NewMatrix (_fce *_cde ,0,0,_fce ,0,_cc .Ts );_fab :=ctx .Matrix ();_aaf :=_fab .Clone ().Mult (_cc .Tm .Clone ().Mult (_dde )).ScalingFactorY ();_ge :=_cc .Tf .NewFace (_aaf );_bac :=_cc .Tf .BytesToCharcodes (data );
for _ ,_aecd :=range _bac {_gee ,_caa :=_cc .Tf .CharcodeToRunes (_aecd );_agbd :=string (_caa );if _agbd =="\u0000"{continue ;};_aad :=_fab .Clone ().Mult (_cc .Tm .Clone ().Mult (_dde ));_df :=_aad .ScalingFactorY ();_aad =_aad .Scale (1/_df ,-1/_df );
if _cc .Tr !=TextRenderingModeInvisible {ctx .SetMatrix (_aad );ctx .DrawString (_agbd ,_ge ,0,0);ctx .SetMatrix (_fab );};_cac :=0.0;if _agbd =="\u0020"{_cac =_cc .Tw ;};_aea ,_ ,_ebg :=_cc .Tf .GetCharMetrics (_gee );if _ebg {_aea =_aea *0.001*_fce ;
}else {_aea ,_ =ctx .MeasureString (_agbd ,_ge );_aea =_aea /_gf ;};_fbe :=(_aea +_cc .Tc +_cac )*_cde ;_cc .Tm =_cc .Tm .Mult (_f .TranslationMatrix (_fbe ,0));};};type Gradient interface{Pattern ;AddColorStop (_bg float64 ,_eb _a .Color );};func (_aaff *TextState )ProcDQ (data []byte ,aw ,ac float64 ,ctx Context ){_aaff .Tw =aw ;
_aaff .Tc =ac ;_aaff .ProcQ (data ,ctx );};type LineJoin int ;func (_aaa *TextState )ProcTd (tx ,ty float64 ){_aaa .Tlm .Concat (_f .TranslationMatrix (tx ,ty ));_aaa .Tm =_aaa .Tlm .Clone ();};type TextState struct{Tc float64 ;Tw float64 ;Th float64 ;
Tl float64 ;Tf *TextFont ;Ts float64 ;Tm _f .Matrix ;Tlm _f .Matrix ;Tr TextRenderingMode ;GlobalScale float64 ;};const (LineCapRound LineCap =iota ;LineCapButt ;LineCapSquare ;);func (_fdde *TextState )ProcTf (font *TextFont ){_fdde .Tf =font };