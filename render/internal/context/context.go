//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package context ;import (_g "errors";_a "github.com/unidoc/freetype/truetype";_cg "github.com/unidoc/unipdf/v3/core";_ge "github.com/unidoc/unipdf/v3/internal/textencoding";_b "github.com/unidoc/unipdf/v3/internal/transform";_e "github.com/unidoc/unipdf/v3/model";
_ga "golang.org/x/image/font";_cf "image";_f "image/color";);func (_gea *TextState )ProcDQ (data []byte ,aw ,ac float64 ,ctx Context ){_gea .Tw =aw ;_gea .Tc =ac ;_gea .ProcQ (data ,ctx );};const (LineCapRound LineCap =iota ;LineCapButt ;LineCapSquare ;
);func (_abe *TextState )ProcTD (tx ,ty float64 ){_abe .Tl =-ty ;_abe .ProcTd (tx ,ty )};func (_dfd *TextFont )BytesToCharcodes (data []byte )[]_ge .CharCode {if _dfd ._ec !=nil {return _dfd ._ec .BytesToCharcodes (data );};return _dfd .Font .BytesToCharcodes (data );
};type TextRenderingMode int ;func (_bdg *TextState )ProcTd (tx ,ty float64 ){_bdg .Tlm .Concat (_b .TranslationMatrix (tx ,ty ));_bdg .Tm =_bdg .Tlm .Clone ();};type Context interface{Push ();Pop ();Matrix ()_b .Matrix ;SetMatrix (_bb _b .Matrix );Translate (_geb ,_ac float64 );
Scale (_aaa ,_d float64 );Rotate (_ff float64 );MoveTo (_bg ,_ae float64 );LineTo (_ab ,_bbc float64 );CubicTo (_da ,_cfe ,_fe ,_gaa ,_dag ,_ca float64 );QuadraticTo (_fa ,_gd ,_db ,_ef float64 );NewSubPath ();ClosePath ();ClearPath ();Clip ();ClipPreserve ();
ResetClip ();LineWidth ()float64 ;SetLineWidth (_eg float64 );SetLineCap (_bf LineCap );SetLineJoin (_abf LineJoin );SetDash (_aca ...float64 );SetDashOffset (_gb float64 );Fill ();FillPreserve ();Stroke ();StrokePreserve ();SetRGBA (_egf ,_cb ,_gbd ,_bbca float64 );
SetFillRGBA (_bd ,_bc ,_ed ,_ee float64 );SetFillStyle (_cgd Pattern );SetFillRule (_fdd FillRule );SetStrokeRGBA (_bcc ,_ad ,_gbf ,_cfa float64 );SetStrokeStyle (_bgd Pattern );FillPattern ()Pattern ;StrokePattern ()Pattern ;TextState ()*TextState ;DrawString (_gdc string ,_eb _ga .Face ,_dg ,_egg float64 );
MeasureString (_fb string ,_dbe _ga .Face )(_aab ,_bdd float64 );DrawRectangle (_ce ,_eda ,_egd ,_ceb float64 );DrawImage (_fc _cf .Image ,_abfg ,_dbed int );DrawImageAnchored (_af _cf .Image ,_bfc ,_cbe int ,_eed ,_ffg float64 );Height ()int ;Width ()int ;
};func (_aef *TextState )ProcTf (font *TextFont ){_aef .Tf =font };type TextFont struct{Font *_e .PdfFont ;Size float64 ;_cd *_a .Font ;_ec *_e .PdfFont ;};type TextState struct{Tc float64 ;Tw float64 ;Th float64 ;Tl float64 ;Tf *TextFont ;Ts float64 ;
Tm _b .Matrix ;Tlm _b .Matrix ;Tr TextRenderingMode ;GlobalScale float64 ;};func NewTextState ()TextState {return TextState {Th :100,Tm :_b .IdentityMatrix (),Tlm :_b .IdentityMatrix ()};};func (_cba *TextState )ProcQ (data []byte ,ctx Context ){_cba .ProcTStar ();
_cba .ProcTj (data ,ctx )};const (LineJoinRound LineJoin =iota ;LineJoinBevel ;);func (_bbbg *TextState )Translate (tx ,ty float64 ){_bbbg .Tm =_bbbg .Tm .Mult (_b .TranslationMatrix (tx ,ty ));};type FillRule int ;func (_bdc *TextFont )NewFace (size float64 )_ga .Face {return _a .NewFace (_bdc ._cd ,&_a .Options {Size :size });
};func (_bdcc *TextState )ProcTj (data []byte ,ctx Context ){_caf :=_bdcc .Tf .Size ;_abg :=_bdcc .Th /100.0;_be :=_bdcc .GlobalScale ;_gdcf :=_b .NewMatrix (_caf *_abg ,0,0,_caf ,0,_bdcc .Ts );_gae :=ctx .Matrix ();_aaf :=_gae .Clone ().Mult (_bdcc .Tm .Clone ().Mult (_gdcf )).ScalingFactorY ();
_aee :=_bdcc .Tf .NewFace (_aaf );_efa :=_bdcc .Tf .BytesToCharcodes (data );for _ ,_de :=range _efa {_ebg ,_bbe :=_bdcc .Tf .CharcodeToRunes (_de );_abgc :=string (_bbe );if _abgc =="\u0000"{continue ;};_eee :=_gae .Clone ().Mult (_bdcc .Tm .Clone ().Mult (_gdcf ));
_bfgf :=_eee .ScalingFactorY ();_eee =_eee .Scale (1/_bfgf ,-1/_bfgf );if _bdcc .Tr !=TextRenderingModeInvisible {ctx .SetMatrix (_eee );ctx .DrawString (_abgc ,_aee ,0,0);ctx .SetMatrix (_gae );};_fddb :=0.0;if _abgc =="\u0020"{_fddb =_bdcc .Tw ;};_beb ,_ ,_fdb :=_bdcc .Tf .GetCharMetrics (_ebg );
if _fdb {_beb =_beb *0.001*_caf ;}else {_beb ,_ =ctx .MeasureString (_abgc ,_aee );_beb =_beb /_be ;};_ea :=(_beb +_bdcc .Tc +_fddb )*_abg ;_bdcc .Tm =_bdcc .Tm .Mult (_b .TranslationMatrix (_ea ,0));};};func NewTextFont (font *_e .PdfFont ,size float64 )(*TextFont ,error ){_fda :=font .FontDescriptor ();
if _fda ==nil {return nil ,_g .New ("\u0063\u006fu\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0067\u0065\u0074\u0020\u0066\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069pt\u006f\u0072");};_cc ,_cbd :=_cg .GetStream (_fda .FontFile2 );if !_cbd {return nil ,_g .New ("\u006di\u0073\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u0020f\u0069\u006c\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d");
};_bccg ,_df :=_cg .DecodeStream (_cc );if _df !=nil {return nil ,_df ;};_fea ,_df :=_a .Parse (_bccg );if _df !=nil {return nil ,_df ;};return &TextFont {Font :font ,Size :size ,_cd :_fea },nil ;};func (_caa *TextState )ProcTStar (){_caa .ProcTd (0,-_caa .Tl )};
type LineJoin int ;func (_bac *TextState )Reset (){_bac .Tm =_b .IdentityMatrix ();_bac .Tlm =_b .IdentityMatrix ()};func (_bbb *TextFont )WithSize (size float64 ,originalFont *_e .PdfFont )*TextFont {return &TextFont {Font :_bbb .Font ,Size :size ,_cd :_bbb ._cd ,_ec :originalFont };
};type Gradient interface{Pattern ;AddColorStop (_aa float64 ,_gf _f .Color );};const (FillRuleWinding FillRule =iota ;FillRuleEvenOdd ;);func (_cfd *TextFont )GetCharMetrics (code _ge .CharCode )(float64 ,float64 ,bool ){if _bgea ,_egda :=_cfd .Font .GetCharMetrics (code );
_egda &&_bgea .Wx !=0{return _bgea .Wx ,_bgea .Wy ,_egda ;};if _cfd ._ec ==nil {return 0,0,false ;};_gg ,_bad :=_cfd ._ec .GetCharMetrics (code );return _gg .Wx ,_gg .Wy ,_bad &&_gg .Wx !=0;};const (TextRenderingModeFill TextRenderingMode =iota ;TextRenderingModeStroke ;
TextRenderingModeFillStroke ;TextRenderingModeInvisible ;TextRenderingModeFillClip ;TextRenderingModeStrokeClip ;TextRenderingModeFillStrokeClip ;TextRenderingModeClip ;);func (_fff *TextFont )CharcodeToRunes (charcode _ge .CharCode )(_ge .CharCode ,[]rune ){_gc :=[]_ge .CharCode {charcode };
if _fff ._ec ==nil ||_fff ._ec ==_fff .Font {if _fff .Font .IsSimple ()&&_fff ._cd !=nil {if _fg :=_fff ._cd .Index (rune (charcode ));_fg > 0{return charcode ,[]rune {rune (charcode )};};};return charcode ,_fff .Font .CharcodesToUnicode (_gc );};_cda :=_fff ._ec .CharcodesToUnicode (_gc );
_bdb ,_ :=_fff .Font .RunesToCharcodeBytes (_cda );_bda :=_fff .Font .BytesToCharcodes (_bdb );_aeg :=charcode ;if len (_bda )> 0&&_bda [0]!=0{_aeg =_bda [0];};return _aeg ,_cda ;};func (_bfg *TextState )ProcTm (a ,b ,c ,d ,e ,f float64 ){_bfg .Tm =_b .NewMatrix (a ,b ,c ,d ,e ,f );
_bfg .Tlm =_bfg .Tm .Clone ();};func NewTextFontFromPath (filePath string ,size float64 )(*TextFont ,error ){_cgg ,_bge :=_e .NewPdfFontFromTTFFile (filePath );if _bge !=nil {return nil ,_bge ;};return NewTextFont (_cgg ,size );};type LineCap int ;type Pattern interface{ColorAt (_fd ,_ba int )_f .Color ;
};