//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package context ;import (_b "errors";_bf "github.com/unidoc/freetype/truetype";_be "github.com/unidoc/unipdf/v3/core";_e "github.com/unidoc/unipdf/v3/internal/textencoding";_feg "github.com/unidoc/unipdf/v3/internal/transform";_g "github.com/unidoc/unipdf/v3/model";
_fg "golang.org/x/image/font";_fe "image";_f "image/color";);func NewTextState ()TextState {return TextState {Th :100,Tm :_feg .IdentityMatrix (),Tlm :_feg .IdentityMatrix ()};};func (_gbf *TextState )ProcTj (data []byte ,ctx Context ){_gbfa :=_gbf .Tf .Size ;
_eea :=_gbf .Th /100.0;_fca :=_gbf .GlobalScale ;_ced :=_feg .NewMatrix (_gbfa *_eea ,0,0,_gbfa ,0,_gbf .Ts );_gcg :=ctx .Matrix ();_eed :=_gcg .Clone ().Mult (_gbf .Tm .Clone ().Mult (_ced )).ScalingFactorY ();_ace :=_gbf .Tf .NewFace (_eed );_fgae :=_gbf .Tf .BytesToCharcodes (data );
for _ ,_fbe :=range _fgae {_dfc ,_acca :=_gbf .Tf .CharcodeToRunes (_fbe );_dad :=string (_acca );if _dad =="\u0000"{continue ;};_bcc :=_gcg .Clone ().Mult (_gbf .Tm .Clone ().Mult (_ced ));_gca :=_bcc .ScalingFactorY ();_bcc =_bcc .Scale (1/_gca ,-1/_gca );
if _gbf .Tr !=TextRenderingModeInvisible {ctx .SetMatrix (_bcc );ctx .DrawString (_dad ,_ace ,0,0);ctx .SetMatrix (_gcg );};_egef :=0.0;if _dad =="\u0020"{_egef =_gbf .Tw ;};_aecg ,_ ,_cgf :=_gbf .Tf .GetCharMetrics (_dfc );if _cgf {_aecg =_aecg *0.001*_gbfa ;
}else {_aecg ,_ =ctx .MeasureString (_dad ,_ace );_aecg =_aecg /_fca ;};_fda :=(_aecg +_gbf .Tc +_egef )*_eea ;_gbf .Tm =_gbf .Tm .Mult (_feg .TranslationMatrix (_fda ,0));};};func (_gac *TextFont )NewFace (size float64 )_fg .Face {return _bf .NewFace (_gac ._ggf ,&_bf .Options {Size :size });
};const (LineCapRound LineCap =iota ;LineCapButt ;LineCapSquare ;);type LineJoin int ;type Gradient interface{Pattern ;AddColorStop (_ae float64 ,_c _f .Color );};func (_cec *TextState )ProcQ (data []byte ,ctx Context ){_cec .ProcTStar ();_cec .ProcTj (data ,ctx )};
func (_acc *TextState )ProcTD (tx ,ty float64 ){_acc .Tl =-ty ;_acc .ProcTd (tx ,ty )};type FillRule int ;func (_dbg *TextState )ProcTStar (){_dbg .ProcTd (0,-_dbg .Tl )};func (_faa *TextFont )BytesToCharcodes (data []byte )[]_e .CharCode {if _faa ._cf !=nil {return _faa ._cf .BytesToCharcodes (data );
};return _faa .Font .BytesToCharcodes (data );};const (LineJoinRound LineJoin =iota ;LineJoinBevel ;);func (_ddg *TextState )Translate (tx ,ty float64 ){_ddg .Tm =_ddg .Tm .Mult (_feg .TranslationMatrix (tx ,ty ));};type TextState struct{Tc float64 ;Tw float64 ;
Th float64 ;Tl float64 ;Tf *TextFont ;Ts float64 ;Tm _feg .Matrix ;Tlm _feg .Matrix ;Tr TextRenderingMode ;GlobalScale float64 ;};func (_ffe *TextState )ProcTd (tx ,ty float64 ){_ffe .Tlm .Concat (_feg .TranslationMatrix (tx ,ty ));_ffe .Tm =_ffe .Tlm .Clone ();
};type Pattern interface{ColorAt (_gb ,_d int )_f .Color ;};func (_eeaa *TextState )ProcTf (font *TextFont ){_eeaa .Tf =font };func (_aeaf *TextFont )GetCharMetrics (code _e .CharCode )(float64 ,float64 ,bool ){if _fbg ,_gcda :=_aeaf .Font .GetCharMetrics (code );
_gcda &&_fbg .Wx !=0{return _fbg .Wx ,_fbg .Wy ,_gcda ;};if _aeaf ._cf ==nil {return 0,0,false ;};_aec ,_dca :=_aeaf ._cf .GetCharMetrics (code );return _aec .Wx ,_aec .Wy ,_dca &&_aec .Wx !=0;};func (_fbgf *TextState )ProcTm (a ,b ,c ,d ,e ,f float64 ){_fbgf .Tm =_feg .NewMatrix (a ,b ,c ,d ,e ,f );
_fbgf .Tlm =_fbgf .Tm .Clone ();};type TextFont struct{Font *_g .PdfFont ;Size float64 ;_ggf *_bf .Font ;_cf *_g .PdfFont ;};type Context interface{Push ();Pop ();Matrix ()_feg .Matrix ;SetMatrix (_fd _feg .Matrix );Translate (_ed ,_gf float64 );Scale (_beg ,_ac float64 );
Rotate (_bb float64 );MoveTo (_ca ,_fb float64 );LineTo (_df ,_eg float64 );CubicTo (_gc ,_fga ,_gbg ,_fgb ,_eb ,_ef float64 );QuadraticTo (_ce ,_gfb ,_fgd ,_db float64 );NewSubPath ();ClosePath ();ClearPath ();Clip ();ClipPreserve ();ResetClip ();LineWidth ()float64 ;
SetLineWidth (_af float64 );SetLineCap (_bc LineCap );SetLineJoin (_da LineJoin );SetDash (_dg ...float64 );SetDashOffset (_bcg float64 );Fill ();FillPreserve ();Stroke ();StrokePreserve ();SetRGBA (_afg ,_fa ,_dc ,_aa float64 );SetFillRGBA (_gce ,_dfg ,_ge ,_gg float64 );
SetFillStyle (_bef Pattern );SetFillRule (_bcgb FillRule );SetStrokeRGBA (_fc ,_ad ,_ab ,_fbc float64 );SetStrokeStyle (_cg Pattern );FillPattern ()Pattern ;StrokePattern ()Pattern ;TextState ()*TextState ;DrawString (_ee string ,_gga _fg .Face ,_bea ,_ege float64 );
MeasureString (_ggb string ,_aab _fg .Face )(_ga ,_dbb float64 );DrawRectangle (_ff ,_dba ,_cc ,_bfa float64 );DrawImage (_dbd _fe .Image ,_gfa ,_aea int );DrawImageAnchored (_gcd _fe .Image ,_ag ,_eeb int ,_eba ,_cgc float64 );Height ()int ;Width ()int ;
};type LineCap int ;func (_eebf *TextState )Reset (){_eebf .Tm =_feg .IdentityMatrix ();_eebf .Tlm =_feg .IdentityMatrix ()};const (TextRenderingModeFill TextRenderingMode =iota ;TextRenderingModeStroke ;TextRenderingModeFillStroke ;TextRenderingModeInvisible ;
TextRenderingModeFillClip ;TextRenderingModeStrokeClip ;TextRenderingModeFillStrokeClip ;TextRenderingModeClip ;);func (_agb *TextState )ProcDQ (data []byte ,aw ,ac float64 ,ctx Context ){_agb .Tw =aw ;_agb .Tc =ac ;_agb .ProcQ (data ,ctx );};func NewTextFontFromPath (filePath string ,size float64 )(*TextFont ,error ){_abd ,_ea :=_g .NewPdfFontFromTTFFile (filePath );
if _ea !=nil {return nil ,_ea ;};return NewTextFont (_abd ,size );};func NewTextFont (font *_g .PdfFont ,size float64 )(*TextFont ,error ){_bg :=font .FontDescriptor ();if _bg ==nil {return nil ,_b .New ("\u0063\u006fu\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0067\u0065\u0074\u0020\u0066\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069pt\u006f\u0072");
};_fad ,_dbf :=_be .GetStream (_bg .FontFile2 );if !_dbf {return nil ,_b .New ("\u006di\u0073\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u0020f\u0069\u006c\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d");};_ggae ,_dd :=_be .DecodeStream (_fad );
if _dd !=nil {return nil ,_dd ;};_ggc ,_dd :=_bf .Parse (_ggae );if _dd !=nil {return nil ,_dd ;};return &TextFont {Font :font ,Size :size ,_ggf :_ggc },nil ;};func (_efa *TextFont )WithSize (size float64 ,originalFont *_g .PdfFont )*TextFont {return &TextFont {Font :_efa .Font ,Size :size ,_ggf :_efa ._ggf ,_cf :originalFont };
};func (_age *TextFont )CharcodeToRunes (charcode _e .CharCode )(_e .CharCode ,[]rune ){_fac :=[]_e .CharCode {charcode };if _age ._cf ==nil ||_age ._cf ==_age .Font {if _age .Font .IsSimple ()&&_age ._ggf !=nil {if _aac :=_age ._ggf .Index (rune (charcode ));
_aac > 0{return charcode ,[]rune {rune (charcode )};};};return charcode ,_age .Font .CharcodesToUnicode (_fac );};_ffc :=_age ._cf .CharcodesToUnicode (_fac );_dbdb ,_ :=_age .Font .RunesToCharcodeBytes (_ffc );_agd :=_age .Font .BytesToCharcodes (_dbdb );
_bfd :=charcode ;if len (_agd )> 0&&_agd [0]!=0{_bfd =_agd [0];};return _bfd ,_ffc ;};const (FillRuleWinding FillRule =iota ;FillRuleEvenOdd ;);type TextRenderingMode int ;